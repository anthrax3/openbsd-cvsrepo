head	1.19;
access;
symbols
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.8.0.18
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.16
	OPENBSD_2_8:1.8.0.14
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.12
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.10
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.8
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.6
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2008.06.13.22.02.04;	author canacar;	state dead;
branches;
next	1.18;

1.18
date	2008.06.12.22.26.01;	author canacar;	state Exp;
branches;
next	1.17;

1.17
date	2007.09.11.15.47.17;	author gilles;	state Exp;
branches;
next	1.16;

1.16
date	2007.03.20.03.56.13;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2006.03.31.04.10.59;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.03.02.56.17;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.18.00.46.47;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.07.09.18.08;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2001.12.07.07.57.35;	author pvalchev;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.23.22.20.06;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.19.19.02.16;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	97.06.23.22.21.46;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.01.31.10.08.37;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.01.17.07.13.23;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.06.26.05.40.05;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.05.22.11.35.31;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.19.13.31.57;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.03.27.19.32.52;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.10;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.10;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Remove unused files. Noticed by sthen@@
@
text
@@


1.18
log
@New display engine for systat, based on pftop. Adds new views for pf
(status, state, rule, queue). While all displays work, some keyboard
comands are not implemented yet. Other features include better handling
of display resize and scrolling for long views. Committing now to fix
the remaining issues in the tree.
Testing and comments by otto@@ and harding@@, ok deraadt@@
@
text
@@


1.17
log
@use strcspn to properly overwrite '\n' in fgets returned buffer

ok pyr@@, ray@@, millert@@, moritz@@, chl@@
@
text
@a0 98
/*	$OpenBSD: disks.c,v 1.16 2007/03/20 03:56:13 tedu Exp $	*/
/*	$NetBSD: disks.c,v 1.4 1996/05/10 23:16:33 thorpej Exp $	*/

/*-
 * Copyright (c) 1980, 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)disks.c	8.1 (Berkeley) 6/6/93";
#endif
static char rcsid[] = "$OpenBSD: disks.c,v 1.16 2007/03/20 03:56:13 tedu Exp $";
#endif /* not lint */

#include <string.h>
#include <ctype.h>
#include <signal.h>
#include "systat.h"
#include "extern.h"
static void dkselect(char *args, int truefalse, int selections[]);


int
dkcmd(char *cmd, char *args)
{
	if (prefix(cmd, "display") || prefix(cmd, "add")) {
		dkselect(args, 1, dk_select);
		return (1);
	}
	if (prefix(cmd, "ignore") || prefix(cmd, "delete")) {
		dkselect(args, 0, dk_select);
		return (1);
	}
	if (prefix(cmd, "drives")) {
		int i;

		move(CMDLINE, 0);
		clrtoeol();
		for (i = 0; i < dk_ndrive; i++)
			printw("%s ", dr_name[i]);
		return (1);
	}
	return (0);
}

static void
dkselect(char *args, int truefalse, int selections[])
{
	char *cp;
	int i;

	args[strcspn(args, "\n")] = '\0';

	for (;;) {
		for (cp = args; isspace(*cp); cp++)
			;
		args = cp;
		for (; *cp && !isspace(*cp); cp++)
			;
		if (*cp)
			*cp++ = '\0';
		if (cp - args == 0)
			break;
		for (i = 0; i < dk_ndrive; i++)
			if (strcmp(args, dr_name[i]) == 0) {
				selections[i] = truefalse;
				break;
			}
		if (i >= dk_ndrive)
			error("%s: unknown drive", args);
		args = cp;
	}
}
@


1.16
log
@remove some bogus *p tests from charles longeau
ok deraadt millert
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.15 2006/03/31 04:10:59 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.15 2006/03/31 04:10:59 deraadt Exp $";
d77 2
a78 3
	cp = strchr(args, '\n');
	if (cp)
		*cp = '\0';
@


1.15
log
@fairly simple cleanup, lots of testing done
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.14 2003/06/03 02:56:17 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.14 2003/06/03 02:56:17 millert Exp $";
d81 1
a81 1
		for (cp = args; *cp && isspace(*cp); cp++)
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.13 2002/06/18 00:46:47 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.13 2002/06/18 00:46:47 deraadt Exp $";
d62 2
a63 1
		move(CMDLINE, 0); clrtoeol();
@


1.13
log
@ANSI
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.12 2001/12/07 09:18:08 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.12 2001/12/07 09:18:08 deraadt Exp $";
@


1.12
log
@move back.  pvalchev -- the bug was quite obscure
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.10 2001/11/23 22:20:06 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.10 2001/11/23 22:20:06 deraadt Exp $";
d53 1
a53 2
dkcmd(cmd, args)
	char *cmd, *args;
d75 1
a75 3
dkselect(args, truefalse, selections)
	char *args;
	int truefalse, selections[];
@


1.11
log
@back out latest changes which cause problems on alpha/sparc64 until
they are fixed
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.9 2001/11/19 19:02:16 mpech Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.9 2001/11/19 19:02:16 mpech Exp $";
d46 1
@


1.10
log
@fix signal races.  use sysctl() instead of kvm where possible, and then KNF
the hell out of it; checked by miod
@
text
@a45 1
#include <signal.h>
@


1.9
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.8 1997/06/23 22:21:46 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.8 1997/06/23 22:21:46 millert Exp $";
d46 1
@


1.8
log
@Cleanup by Theo and myself.  CMDLINE changed to long to make
command line work on 64bit platforms.  This is somewhat bogus
and is really just a temporary workaround (there may be a curses bug).
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.7 1997/01/31 10:08:37 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.7 1997/01/31 10:08:37 deraadt Exp $";
d64 1
a64 1
		register int i;
d79 2
a80 2
	register char *cp;
	register int i;
@


1.7
log
@need string.h
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.6 1997/01/17 07:13:23 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.6 1997/01/17 07:13:23 millert Exp $";
d45 1
@


1.6
log
@r?index -> strr?chr
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.5 1996/06/26 05:40:05 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.5 1996/06/26 05:40:05 deraadt Exp $";
d44 1
@


1.5
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: disks.c,v 1.4 1996/05/10 23:16:33 thorpej Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: disks.c,v 1.4 1996/05/10 23:16:33 thorpej Exp $";
a78 1
	char *index();
d80 1
a80 1
	cp = index(args, '\n');
@


1.4
log
@libutil
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: disks.c,v 1.4 1996/05/10 23:16:33 thorpej Exp $";
@


1.3
log
@Fix a bit, so it's now compiles.
needs more work to do disk stats the way vmstat do.
@
text
@d1 1
a1 2
/*	$OpenBSD$	*/
/*	$NetBSD: disks.c,v 1.3 1996/03/15 22:19:23 ragge Exp $	*/
a38 1
static char rcsid[] = "$NetBSD: disks.c,v 1.3 1996/03/15 22:19:23 ragge Exp $";
d40 1
a40 1
static char rcsid[] = "$OpenBSD$";
a42 8
#include <sys/types.h>
#include <sys/buf.h>

#include <nlist.h>
#include <ctype.h>
#include <paths.h>
#include <string.h>
#include <stdlib.h>
d45 1
a46 84
static void dkselect __P((char *, int, int []));
static int read_names __P((void));

static struct nlist namelist[] = {
#define	X_DK_NDRIVE	0
	{ "_dk_ndrive" },
#define	X_DK_WPMS	1
	{ "_dk_wpms" },
#ifdef sun
#define	X_MBDINIT	(X_DK_WPMS+1)
	{ "_mbdinit" },
#endif
#ifdef tahoe
#define	X_VBDINIT	(X_DK_WPMS+1)
	{ "_vbdinit" },
#endif
#if defined(hp300) || defined(luna68k)
#define X_HPDINIT       (X_DK_WPMS+1)
        { "_hp_dinit" }, 
#endif
#ifdef mips
#define X_SCSI_DINIT	(X_DK_WPMS+1)
	{ "_scsi_dinit" },
#endif
	{ "" },
};

float *dk_mspw;
int dk_ndrive, *dk_select;
char **dr_name;

int
dkinit()
{
	register int i;
	register char *cp;
	static int once = 0;
	static char buf[1024];

	if (once)
		return(1);

	if (kvm_nlist(kd, namelist)) {
		nlisterr(namelist);
		return(0);
	}
	if (namelist[X_DK_NDRIVE].n_value == 0) {
		error("dk_ndrive undefined in kernel");
		return(0);
	}
	NREAD(X_DK_NDRIVE, &dk_ndrive, LONG);
	if (dk_ndrive <= 0) {
		error("dk_ndrive=%d according to %s", dk_ndrive, _PATH_UNIX);
		return(0);
	}
	dk_mspw = (float *)calloc(dk_ndrive, sizeof (float));
	{
		long *wpms = (long *)calloc(dk_ndrive, sizeof(long));
		KREAD(NPTR(X_DK_WPMS), wpms, dk_ndrive * sizeof (long));
		for (i = 0; i < dk_ndrive; i++)
			*(dk_mspw + i) = (*(wpms + i) == 0)? 0.0:
			                 (float) 1.0 / *(wpms + i);
		free(wpms);
	}
	dr_name = (char **)calloc(dk_ndrive, sizeof (char *));
	dk_select = (int *)calloc(dk_ndrive, sizeof (int));
	for (cp = buf, i = 0; i < dk_ndrive; i++) {
		dr_name[i] = cp;
		sprintf(dr_name[i], "dk%d", i);
		cp += strlen(dr_name[i]) + 1;
		if (dk_mspw[i] != 0.0)
			dk_select[i] = 1;
	}
#if 0
	if (!read_names()) {
		free(dr_name);
		free(dk_select);
		free(dk_mspw);
		return(0);
	}
#endif
	once = 1;
	return(1);
}
d65 1
a65 2
			if (dk_mspw[i] != 0.0)
				printw("%s ", dr_name[i]);
d95 1
a95 5
				if (dk_mspw[i] != 0.0)
					selections[i] = truefalse;
				else
					error("%s: drive not configured",
					    dr_name[i]);
@


1.2
log
@From NetBSD: merge of 960317
@
text
@a86 2
#include "names.c"					/* XXX */

d129 1
d136 1
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$NetBSD: disks.c,v 1.2 1995/01/20 08:51:53 jtc Exp $	*/
d40 1
d42 1
a42 1
static char rcsid[] = "$NetBSD: disks.c,v 1.2 1995/01/20 08:51:53 jtc Exp $";
a63 6
#ifdef vax
#define	X_MBDINIT	(X_DK_WPMS+1)
	{ "_mbdinit" },
#define	X_UBDINIT	(X_DK_WPMS+2)
	{ "_ubdinit" },
#endif
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
