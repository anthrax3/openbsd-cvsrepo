head	1.8;
access;
symbols
	OPENBSD_4_5:1.7.0.24
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.22
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.20
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.20
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2009.06.01.16.57.27;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2003.08.01.22.01.38;	author david;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.02.56.23;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.19.19.02.18;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	97.02.25.00.05.11;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.05.43.53;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.26.18.00.41;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.59;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.59;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@RIP; ok millert
@
text
@/*	$OpenBSD: wwtty.c,v 1.7 2003/08/01 22:01:38 david Exp $	*/
/*	$NetBSD: wwtty.c,v 1.4 1995/12/21 11:06:50 mycroft Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Edward Wang at The University of California, Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)wwtty.c	8.1 (Berkeley) 6/6/93";
#else
static char rcsid[] = "$OpenBSD: wwtty.c,v 1.7 2003/08/01 22:01:38 david Exp $";
#endif
#endif /* not lint */

#include "ww.h"
#include <sys/types.h>
#include <fcntl.h>
#if !defined(OLD_TTY)
#include <sys/ioctl.h>
#endif

wwgettty(d, t)
struct ww_tty *t;
{
#ifdef OLD_TTY
	if (ioctl(d, TIOCGETP, (char *)&t->ww_sgttyb) < 0)
		goto bad;
	if (ioctl(d, TIOCGETC, (char *)&t->ww_tchars) < 0)
		goto bad;
	if (ioctl(d, TIOCGLTC, (char *)&t->ww_ltchars) < 0)
		goto bad;
	if (ioctl(d, TIOCLGET, (char *)&t->ww_lmode) < 0)
		goto bad;
	if (ioctl(d, TIOCGETD, (char *)&t->ww_ldisc) < 0)
		goto bad;
#else
	if (tcgetattr(d, &t->ww_termios) < 0)
		goto bad;
#endif
	return 0;
bad:
	wwerrno = WWE_SYS;
	return -1;
}

/*
 * Set the modes of tty 'd' to 't'
 * 'o' is the current modes.  We set the line discipline only if
 * it changes, to avoid unnecessary flushing of typeahead.
 */
wwsettty(d, t)
struct ww_tty *t;
{
#ifdef OLD_TTY
	int i;

	/* XXX, for buggy tty drivers that don't wait for output to drain */
	while (ioctl(d, TIOCOUTQ, &i) >= 0 && i > 0)
		usleep(100000);
	if (ioctl(d, TIOCSETN, (char *)&t->ww_sgttyb) < 0)
		goto bad;
	if (ioctl(d, TIOCSETC, (char *)&t->ww_tchars) < 0)
		goto bad;
	if (ioctl(d, TIOCSLTC, (char *)&t->ww_ltchars) < 0)
		goto bad;
	if (ioctl(d, TIOCLSET, (char *)&t->ww_lmode) < 0)
		goto bad;
	if (ioctl(d, TIOCGETD, (char *)&i) < 0)
		goto bad;
	if (t->ww_ldisc != i &&
	    ioctl(d, TIOCSETD, (char *)&t->ww_ldisc) < 0)
		goto bad;
#else
#ifdef sun
	/* XXX, for buggy tty drivers that don't wait for output to drain */
	(void) tcdrain(d);
#endif
	if (tcsetattr(d, TCSADRAIN, &t->ww_termios) < 0)
		goto bad;
#endif
	return 0;
bad:
	wwerrno = WWE_SYS;
	return -1;
}

/*
 * The ttysize and stop-start routines must also work
 * on the control side of pseudoterminals.
 */

wwgetttysize(d, r, c)
	int *r, *c;
{
	struct winsize winsize;

	if (ioctl(d, TIOCGWINSZ, (char *)&winsize) < 0) {
		wwerrno = WWE_SYS;
		return -1;
	}
	if (winsize.ws_row != 0)
		*r = winsize.ws_row;
	if (winsize.ws_col != 0)
		*c = winsize.ws_col;
	return 0;
}

wwsetttysize(d, r, c)
{
	struct winsize winsize;

	winsize.ws_row = r;
	winsize.ws_col = c;
	winsize.ws_xpixel = winsize.ws_ypixel = 0;
	if (ioctl(d, TIOCSWINSZ, (char *)&winsize) < 0) {
		wwerrno = WWE_SYS;
		return -1;
	}
	return 0;
}

wwstoptty(d)
{
#if !defined(OLD_TTY) && defined(TCOOFF)
	/* not guaranteed to work on the pty side */
	if (tcflow(d, TCOOFF) < 0)
#else
	if (ioctl(d, TIOCSTOP, (char *)0) < 0)
#endif
	{
		wwerrno = WWE_SYS;
		return -1;
	}
	return 0;
}

wwstarttty(d)
{
#if !defined(OLD_TTY) && defined(TCOON)
	/* not guaranteed to work on the pty side */
	if (tcflow(d, TCOON) < 0)
#else
	if (ioctl(d, TIOCSTART, (char *)0) < 0)
#endif
	{
		wwerrno = WWE_SYS;
		return -1;
	}
	return 0;
}
@


1.7
log
@another round of missing system includes
ok tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wwtty.c,v 1.6 2003/06/03 02:56:23 millert Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: wwtty.c,v 1.6 2003/06/03 02:56:23 millert Exp $";
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: wwtty.c,v 1.5 2001/11/19 19:02:18 mpech Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: wwtty.c,v 1.5 2001/11/19 19:02:18 mpech Exp $";
d47 1
a47 1
#if !defined(OLD_TTY) && !defined(TIOCGWINSZ)
@


1.5
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: wwtty.c,v 1.4 1997/02/25 00:05:11 downsj Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d40 1
a40 1
static char rcsid[] = "$OpenBSD: wwtty.c,v 1.4 1997/02/25 00:05:11 downsj Exp $";
@


1.4
log
@Reimport NetBSD version w/ Todd's changes, new rcsids, and the beginings of
some source cleaning by me.

This undoes Theo's wait() changes which broke the old version.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD$";
d56 1
a56 1
register struct ww_tty *t;
d85 1
a85 1
register struct ww_tty *t;
@


1.3
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: wwtty.c,v 1.4 1995/12/21 11:06:50 mycroft Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: wwtty.c,v 1.4 1995/12/21 11:06:50 mycroft Exp $";
@


1.2
log
@from netbsd:
Use POSIX signals.  Always set FNONBLOCK on the tty.
Eliminate the use of SIGIO, and some other cleanup.
We don't need non-blocking mode without SIGIO.
@
text
@d1 1
d44 1
a44 1
static char rcsid[] = "$NetBSD: wwtty.c,v 1.4 1995/12/21 11:06:50 mycroft Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: wwtty.c,v 1.3 1995/09/28 10:35:58 tls Exp $	*/
d43 1
a43 1
static char rcsid[] = "$NetBSD: wwtty.c,v 1.3 1995/09/28 10:35:58 tls Exp $";
a71 2
	if ((t->ww_fflags = fcntl(d, F_GETFL, 0)) < 0)
		goto bad;
a112 2
	if (fcntl(d, F_SETFL, t->ww_fflags) < 0)
		goto bad;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
