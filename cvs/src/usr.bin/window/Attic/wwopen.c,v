head	1.12;
access;
symbols
	OPENBSD_4_5:1.11.0.6
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.4
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.2
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.10.0.18
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.16
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.14
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.14
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.12
	OPENBSD_2_8:1.6.0.10
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.8
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2009.06.01.16.57.27;	author deraadt;	state dead;
branches;
next	1.11;

1.11
date	2007.09.02.15.19.35;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.10.00.06.52;	author david;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.03.02.56.23;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.08.12.00.42.56;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2001.11.19.19.02.18;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	98.04.26.22.49.09;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.02.25.00.05.00;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	96.06.26.05.43.47;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.02.23.14.10.55;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	95.12.26.18.00.35;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.58;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.58;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@RIP; ok millert
@
text
@/*	$OpenBSD: wwopen.c,v 1.11 2007/09/02 15:19:35 deraadt Exp $	*/
/*	$NetBSD: wwopen.c,v 1.6 1996/02/08 21:08:04 mycroft Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Edward Wang at The University of California, Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)wwopen.c	8.2 (Berkeley) 4/28/95";
#else
static char rcsid[] = "$OpenBSD: wwopen.c,v 1.11 2007/09/02 15:19:35 deraadt Exp $";
#endif
#endif /* not lint */

#include <stdlib.h>
#include <unistd.h>
#include "ww.h"
#include <sys/types.h>
#include <sys/socket.h>
#include <fcntl.h>

struct ww *
wwopen(type, oflags, nrow, ncol, row, col, nline)
{
	struct ww *w;
	int i, j;
	char m;
	short nvis;

	w = (struct ww *)calloc(1, sizeof (struct ww));
	if (w == 0) {
		wwerrno = WWE_NOMEM;
		goto bad;
	}
	w->ww_pty = -1;
	w->ww_socket = -1;

	for (i = 0; i < NWW && wwindex[i] != 0; i++)
		;
	if (i >= NWW) {
		wwerrno = WWE_TOOMANY;
		goto bad;
	}
	w->ww_index = i;

	if (nline < nrow)
		nline = nrow;

	w->ww_w.t = row;
	w->ww_w.b = row + nrow;
	w->ww_w.l = col;
	w->ww_w.r = col + ncol;
	w->ww_w.nr = nrow;
	w->ww_w.nc = ncol;

	w->ww_b.t = row;
	w->ww_b.b = row + nline;
	w->ww_b.l = col;
	w->ww_b.r = col + ncol;
	w->ww_b.nr = nline;
	w->ww_b.nc = ncol;

	w->ww_i.t = MAX(w->ww_w.t, 0);
	w->ww_i.b = MIN(w->ww_w.b, wwnrow);
	w->ww_i.l = MAX(w->ww_w.l, 0);
	w->ww_i.r = MIN(w->ww_w.r, wwncol);
	w->ww_i.nr = w->ww_i.b - w->ww_i.t;
	w->ww_i.nc = w->ww_i.r - w->ww_i.l;

	w->ww_cur.r = w->ww_w.t;
	w->ww_cur.c = w->ww_w.l;

	w->ww_type = type;
	switch (type) {
	case WWT_PTY:
		if (wwgetpty(w) < 0)
			goto bad;
		break;
	case WWT_SOCKET:
	    {
		int d[2];
		if (socketpair(AF_UNIX, SOCK_STREAM, PF_UNSPEC, d) < 0) {
			wwerrno = WWE_SYS;
			goto bad;
		}
		(void) fcntl(d[0], F_SETFD, 1);
		(void) fcntl(d[1], F_SETFD, 1);
		w->ww_pty = d[0];
		w->ww_socket = d[1];
		break;
	    }
	}
	if (type != WWT_INTERNAL) {
		if ((w->ww_ob = malloc(512)) == 0) {
			wwerrno = WWE_NOMEM;
			goto bad;
		}
		w->ww_obe = w->ww_ob + 512;
		w->ww_obp = w->ww_obq = w->ww_ob;
		if (w->ww_pty >= wwdtablesize)
			wwdtablesize = w->ww_pty + 1;
	}

	w->ww_win = wwalloc(w->ww_w.t, w->ww_w.l,
		w->ww_w.nr, w->ww_w.nc, sizeof (char));
	if (w->ww_win == 0)
		goto bad;
	m = 0;
	if (oflags & WWO_GLASS)
		m |= WWM_GLS;
	if (oflags & WWO_REVERSE)
		if (wwavailmodes & WWM_REV)
			m |= WWM_REV;
		else
			oflags &= ~WWO_REVERSE;
	for (i = w->ww_w.t; i < w->ww_w.b; i++)
		for (j = w->ww_w.l; j < w->ww_w.r; j++)
			w->ww_win[i][j] = m;

	if (oflags & WWO_FRAME) {
		w->ww_fmap = wwalloc(w->ww_w.t, w->ww_w.l,
			w->ww_w.nr, w->ww_w.nc, sizeof (char));
		if (w->ww_fmap == 0)
			goto bad;
		for (i = w->ww_w.t; i < w->ww_w.b; i++)
			for (j = w->ww_w.l; j < w->ww_w.r; j++)
				w->ww_fmap[i][j] = 0;
	}

	w->ww_buf = (union ww_char **)
		wwalloc(w->ww_b.t, w->ww_b.l,
			w->ww_b.nr, w->ww_b.nc, sizeof (union ww_char));
	if (w->ww_buf == 0)
		goto bad;
	for (i = w->ww_b.t; i < w->ww_b.b; i++)
		for (j = w->ww_b.l; j < w->ww_b.r; j++)
			w->ww_buf[i][j].c_w = ' ';

	w->ww_nvis = (short *)calloc(w->ww_w.nr, sizeof (short));
	if (w->ww_nvis == 0) {
		wwerrno = WWE_NOMEM;
		goto bad;
	}
	w->ww_nvis -= w->ww_w.t;
	nvis = m ? 0 : w->ww_w.nc;
	for (i = w->ww_w.t; i < w->ww_w.b; i++)
		w->ww_nvis[i] = nvis;

	w->ww_state = WWS_INITIAL;
	CLR(w->ww_oflags, WWO_ALLFLAGS);
	SET(w->ww_oflags, oflags);
	return wwindex[w->ww_index] = w;
bad:
	if (w != 0) {
		if (w->ww_win != 0)
			wwfree(w->ww_win, w->ww_w.t);
		if (w->ww_fmap != 0)
			wwfree(w->ww_fmap, w->ww_w.t);
		if (w->ww_buf != 0)
			wwfree((char **)w->ww_buf, w->ww_b.t);
		if (w->ww_nvis != 0)
			free((char *)(w->ww_nvis + w->ww_w.t));
		if (w->ww_ob != 0)
			free(w->ww_ob);
		if (w->ww_pty >= 0)
			(void) close(w->ww_pty);
		if (w->ww_socket >= 0)
			(void) close(w->ww_socket);
		free((char *)w);
	}
	return 0;
}
@


1.11
log
@use calloc() to avoid malloc(n * m) overflows; checked by djm canacar jsg
@
text
@d1 1
a1 1
/*	$OpenBSD: wwopen.c,v 1.10 2003/07/10 00:06:52 david Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: wwopen.c,v 1.10 2003/07/10 00:06:52 david Exp $";
@


1.10
log
@add missing includes
ok deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wwopen.c,v 1.9 2003/06/03 02:56:23 millert Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: wwopen.c,v 1.9 2003/06/03 02:56:23 millert Exp $";
d168 1
a168 1
	w->ww_nvis = (short *)malloc(w->ww_w.nr * sizeof (short));
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: wwopen.c,v 1.8 2002/08/12 00:42:56 aaron Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: wwopen.c,v 1.8 2002/08/12 00:42:56 aaron Exp $";
d45 1
@


1.8
log
@Swap args to calloc(3) so they are in the correct order; art@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: wwopen.c,v 1.7 2001/11/19 19:02:18 mpech Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d40 1
a40 1
static char rcsid[] = "$OpenBSD: wwopen.c,v 1.7 2001/11/19 19:02:18 mpech Exp $";
@


1.7
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: wwopen.c,v 1.6 1998/04/26 22:49:09 millert Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: wwopen.c,v 1.6 1998/04/26 22:49:09 millert Exp $";
d62 1
a62 1
	w = (struct ww *)calloc(sizeof (struct ww), 1);
@


1.6
log
@fix some warnings
@
text
@d1 1
a1 1
/*	$OpenBSD: wwopen.c,v 1.5 1997/02/25 00:05:00 downsj Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: wwopen.c,v 1.5 1997/02/25 00:05:00 downsj Exp $";
d57 2
a58 2
	register struct ww *w;
	register i, j;
@


1.5
log
@Reimport NetBSD version w/ Todd's changes, new rcsids, and the beginings of
some source cleaning by me.

This undoes Theo's wait() changes which broke the old version.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD$";
d171 1
a171 1
	w->ww_nvis = (short *)malloc((unsigned) w->ww_w.nr * sizeof (short));
@


1.4
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: wwopen.c,v 1.6 1996/02/08 21:08:04 mycroft Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: wwopen.c,v 1.6 1996/02/08 21:08:04 mycroft Exp $";
d48 1
@


1.3
log
@Minor cleanup for 8-bit cleanliness.  From der Mouse, PR 1322.
Eliminate the use of char variables for holding booleans.
Compress struct ww somewhat.
Make ww_index and related variables explicitly unsigned.
@
text
@d1 1
d44 1
a44 1
static char rcsid[] = "$NetBSD: wwopen.c,v 1.6 1996/02/08 21:08:04 mycroft Exp $";
@


1.2
log
@from netbsd:
Use POSIX signals.  Always set FNONBLOCK on the tty.
Eliminate the use of SIGIO, and some other cleanup.
We don't need non-blocking mode without SIGIO.
@
text
@d1 1
a1 1
/*	$NetBSD: wwopen.c,v 1.5 1995/12/21 10:46:19 mycroft Exp $	*/
d43 1
a43 1
static char rcsid[] = "$NetBSD: wwopen.c,v 1.5 1995/12/21 10:46:19 mycroft Exp $";
d53 1
a53 1
wwopen(type, flags, nrow, ncol, row, col, nline)
d139 1
a139 1
	if (flags & WWO_GLASS)
d141 1
a141 1
	if (flags & WWO_REVERSE)
d145 1
a145 1
			flags &= ~WWO_REVERSE;
d150 1
a150 1
	if (flags & WWO_FRAME) {
d180 2
a181 1
	w->ww_oflags = flags;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: wwopen.c,v 1.4 1995/09/28 10:35:42 tls Exp $	*/
d43 1
a43 1
static char rcsid[] = "$NetBSD: wwopen.c,v 1.4 1995/09/28 10:35:42 tls Exp $";
d53 1
a53 1
wwopen(flags, nrow, ncol, row, col, nline)
d103 3
a105 1
	if (flags & WWO_PTY) {
d108 3
a110 2
		w->ww_ispty = 1;
	} else if (flags & WWO_SOCKET) {
d120 2
d123 1
a123 1
	if (flags & (WWO_PTY|WWO_SOCKET)) {
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
