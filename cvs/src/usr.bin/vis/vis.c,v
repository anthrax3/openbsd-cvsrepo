head	1.20;
access;
symbols
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.12
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.10
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.8
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.6
	OPENBSD_5_0:1.14.0.4
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.2
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.12
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.8
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2016.08.31.09.45.00;	author jsg;	state Exp;
branches;
next	1.19;
commitid	GaO8IyuXWHOTmoRu;

1.19
date	2015.10.09.01.37.09;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	sbrB3Q5CNxcwZpfU;

1.18
date	2015.10.05.06.59.18;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	calpoFg3m7Kymdel;

1.17
date	2015.04.18.18.28.38;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	6b2lLILbgCR1fvia;

1.16
date	2015.02.08.23.40.34;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	yGZX28AeTChVE8eY;

1.15
date	2013.11.27.13.32.02;	author okan;	state Exp;
branches;
next	1.14;

1.14
date	2010.08.24.23.49.06;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2010.08.21.19.00.50;	author djm;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.27.23.59.49;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2007.03.15.23.17.20;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.10.13.53.39;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2004.09.14.23.01.06;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.08.00.07.41;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.10.22.20.54;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.03.02.56.22;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.27.58;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.19.19.02.17;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.43.33;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.26.05.42.39;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.46.50;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.46.50;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@When iterating over the list of input files close them when
processing of each is done.

ok guenther@@
@
text
@/*	$OpenBSD: vis.c,v 1.19 2015/10/09 01:37:09 deraadt Exp $	*/
/*	$NetBSD: vis.c,v 1.4 1994/12/20 16:13:03 jtc Exp $	*/

/*-
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include <limits.h>
#include <err.h>
#include <vis.h>

int eflags, fold, foldwidth=80, none, markeol;

#ifdef DEBUG
int debug;
#endif

int foldit(char *, int, int);
void process(FILE *);
__dead void usage(void);

int
main(int argc, char *argv[])
{
	const char *errstr;
	FILE *fp;
	int ch;

	if (pledge("stdio rpath", NULL) == -1)
		err(1, "pledge");

	while ((ch = getopt(argc, argv, "anwctsobfF:ld")) != -1)
		switch(ch) {
		case 'a':
			eflags |= VIS_ALL;
			break;
		case 'n':
			none = 1;
			break;
		case 'w':
			eflags |= VIS_WHITE;
			break;
		case 'c':
			eflags |= VIS_CSTYLE;
			break;
		case 't':
			eflags |= VIS_TAB;
			break;
		case 's':
			eflags |= VIS_SAFE;
			break;
		case 'o':
			eflags |= VIS_OCTAL;
			break;
		case 'b':
			eflags |= VIS_NOSLASH;
			break;
		case 'F':
			foldwidth = strtonum(optarg, 1, INT_MAX, &errstr);
			if (errstr)
				errx(1, "%s: %s", optarg, errstr);
			if (foldwidth < 5)
				errx(1, "can't fold lines to less than 5 cols");
			/*FALLTHROUGH*/
		case 'f':
			fold = 1;	/* fold output lines to 80 cols */
			break;		/* using hidden newline */
		case 'l':
			markeol = 1;	/* mark end of line with \$ */
			break;
#ifdef DEBUG
		case 'd':
			debug = 1;
			break;
#endif
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	if (*argv)
		while (*argv) {
			if ((fp=fopen(*argv, "r")) != NULL) {
				process(fp);
				fclose(fp);
			} else
				warn("%s", *argv);
			argv++;
		}
	else {
		if (pledge("stdio", NULL) == -1)
			err(1, "pledge");
		process(stdin);
	}
	exit(0);
}
	
void
process(FILE *fp)
{
	static int col = 0;
	char *cp = "\0"+1;	/* so *(cp-1) starts out != '\n' */
	int c, rachar; 
	char buff[5];
	
	c = getc(fp);
	while (c != EOF) {
		rachar = getc(fp);
		if (none) {
			cp = buff;
			*cp++ = c;
			if (c == '\\')
				*cp++ = '\\';
			*cp = '\0';
		} else if (markeol && c == '\n') {
			cp = buff;
			if ((eflags & VIS_NOSLASH) == 0)
				*cp++ = '\\';
			*cp++ = '$';
			*cp++ = '\n';
			*cp = '\0';
		} else 
			(void) vis(buff, (char)c, eflags, (char)rachar);

		cp = buff;
		if (fold) {
#ifdef DEBUG
			if (debug)
				printf("<%02d,", col);
#endif
			col = foldit(cp, col, foldwidth);
#ifdef DEBUG
			if (debug)
				printf("%02d>", col);
#endif
		}
		do {
			putchar(*cp);
		} while (*++cp);
		c = rachar;
	}
	/*
	 * terminate partial line with a hidden newline
	 */
	if (fold && *(cp-1) != '\n')
		printf("\\\n");
}

__dead void
usage(void)
{
	extern char *__progname;

	fprintf(stderr, "usage: %s [-abcflnostw] [-F foldwidth] [file ...]\n",
	    __progname);
	exit(1);
}
@


1.19
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.18 2015/10/05 06:59:18 deraadt Exp $	*/
d114 1
a114 1
			if ((fp=fopen(*argv, "r")) != NULL)
d116 2
a117 1
			else
@


1.18
log
@tame "stdio rpath" initially; if we find out the only file operated on
is stdin, then we can drop directly to tame "stdio"
ok doug
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.17 2015/04/18 18:28:38 deraadt Exp $	*/
d58 2
a59 2
	if (tame("stdio rpath", NULL) == -1)
		err(1, "tame");
d121 2
a122 2
		if (tame("stdio", NULL) == -1)
			err(1, "tame");
@


1.17
log
@Convert many atoi() calls to strtonum(), adding range checks and failure
handling along the way.
Reviews by Brendan MacDonell, Jeremy Devenport, florian, doug, millert
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.16 2015/02/08 23:40:34 deraadt Exp $	*/
d58 3
d120 3
a122 1
	else
d124 1
@


1.16
log
@in getopt() blocks, stop incrementing flag variable which are supposed
to just be 0/1
ok miod florian
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.15 2013/11/27 13:32:02 okan Exp $	*/
d37 1
d54 1
d85 4
a88 1
			if ((foldwidth = atoi(optarg))<5) {
a89 2
				/* NOTREACHED */
			}
@


1.15
log
@remove erroneous char cast to switch expression processing getopt(3);
not used in any cases.

ok deraadt@@, guenther@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.14 2010/08/24 23:49:06 djm Exp $	*/
d62 1
a62 1
			none++;
d89 1
a89 1
			fold++;		/* fold output lines to 80 cols */
d92 1
a92 1
			markeol++;	/* mark end of line with \$ */
d96 1
a96 1
			debug++;
@


1.14
log
@backout VIS_HEX. guenther@@ points out that the C89 \xff encoding
idiotically accepts more then two hex digits following the \x, even
on platforms where a char has 8 bits. It is therefore dangerous to have
an almost-bit-not-quite compatible format in vis(3).

The VIS_ALL (encode all characters) option introduced in the same commit
remains.
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.13 2010/08/21 19:00:50 djm Exp $	*/
d57 1
a57 1
		switch((char)ch) {
@


1.13
log
@mirror new flags to vis(3): -a to encode all characters, -h to use
hex encoding. feedback jmc@@ ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.12 2009/10/27 23:59:49 deraadt Exp $	*/
d56 1
a56 1
	while ((ch = getopt(argc, argv, "anwctshobfF:ld")) != -1)
a75 3
		case 'h':
			eflags |= VIS_HEX;
			break;
d175 1
a175 1
	fprintf(stderr, "usage: %s [-abcfhlnostw] [-F foldwidth] [file ...]\n",
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.11 2007/03/15 23:17:20 jmc Exp $	*/
d56 1
a56 1
	while ((ch = getopt(argc, argv, "nwctsobfF:ld")) != -1)
d58 3
d76 3
d178 1
a178 1
	fprintf(stderr, "usage: %s [-bcflnostw] [-F foldwidth] [file ...]\n",
@


1.11
log
@`b' before `c'; from Igor Sobrado
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.10 2005/04/10 13:53:39 jmc Exp $	*/
a31 13

#ifndef lint
static const char copyright[] =
"@@(#) Copyright (c) 1989, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static const char sccsid[] = "@@(#)vis.c	8.1 (Berkeley) 6/6/93";
#endif
static const char rcsid[] = "$OpenBSD: vis.c,v 1.10 2005/04/10 13:53:39 jmc Exp $";
#endif /* not lint */
@


1.10
log
@the arg to -F is not optional;
tweak -f description accordingly;

found by wilfried@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.9 2004/09/14 23:01:06 deraadt Exp $	*/
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: vis.c,v 1.9 2004/09/14 23:01:06 deraadt Exp $";
d185 1
a185 1
	fprintf(stderr, "usage: %s [-cbflnostw] [-F foldwidth] [file ...]\n",
@


1.9
log
@remove unused crap never deleted during development
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.8 2003/09/08 00:07:41 millert Exp $	*/
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: vis.c,v 1.8 2003/09/08 00:07:41 millert Exp $";
d185 1
a185 1
	fprintf(stderr, "usage: %s [-cbflnostw] [-F [foldwidth]] [file ...]\n",
@


1.8
log
@sync usage w/ man page; closes PR 3456 (nice number!); henning@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.7 2003/06/10 22:20:54 deraadt Exp $	*/
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: vis.c,v 1.7 2003/06/10 22:20:54 deraadt Exp $";
d53 5
a57 1
int eflags, fold, foldwidth=80, none, markeol, debug;
d60 1
a60 1
void process(FILE *, char *);
d119 1
a119 1
				process(fp, *argv);
d125 1
a125 1
		process(stdin, "<stdin>");
d130 1
a130 1
process(FILE *fp, char *filename)
@


1.7
log
@mostly ansi cleanup; pval ok
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.6 2003/06/03 02:56:22 millert Exp $	*/
d34 1
a34 1
static char copyright[] =
d41 1
a41 1
static char sccsid[] = "@@(#)vis.c	8.1 (Berkeley) 6/6/93";
d43 1
a43 1
static char rcsid[] = "$OpenBSD: vis.c,v 1.6 2003/06/03 02:56:22 millert Exp $";
d57 1
d107 1
a107 3
			fprintf(stderr, 
			    "usage: vis [-nwctsobf] [-F foldwidth]\n");
			exit(1);
d174 10
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.5 2002/02/16 21:27:58 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: vis.c,v 1.5 2002/02/16 21:27:58 millert Exp $";
d59 1
a59 3
main(argc, argv) 
	int argc;
	char *argv[];
d107 1
a107 1
		"usage: vis [-nwctsobf] [-F foldwidth]\n");
d127 1
a127 3
process(fp, filename)
	FILE *fp;
	char *filename;
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.4 2001/11/19 19:02:17 mpech Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: vis.c,v 1.4 2001/11/19 19:02:17 mpech Exp $";
@


1.4
log
@kill more registers

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.3 1997/01/15 23:43:33 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: vis.c,v 1.3 1997/01/15 23:43:33 millert Exp $";
d59 2
a60 2
int foldit __P((char *, int, int));
void process __P((FILE *, char *));
@


1.3
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.2 1996/06/26 05:42:39 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: vis.c,v 1.2 1996/06/26 05:42:39 deraadt Exp $";
d138 2
a139 2
	register char *cp = "\0"+1;	/* so *(cp-1) starts out != '\n' */
	register int c, rachar; 
@


1.2
log
@rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: vis.c,v 1.4 1994/12/20 16:13:03 jtc Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: vis.c,v 1.4 1994/12/20 16:13:03 jtc Exp $";
d70 1
a70 1
	while ((ch = getopt(argc, argv, "nwctsobfF:ld")) != EOF)
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: vis.c,v 1.4 1994/12/20 16:13:03 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
