head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.12
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.14
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.10
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.6
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.8
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.4.0.24
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.22
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.20
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.18
	OPENBSD_5_0:1.4.0.16
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.14
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.12
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.8
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.6
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.3.0.34
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.32
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.30
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.28
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.26
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.24
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.22
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.20
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.18
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.16
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.14
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.12
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.10
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.8
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.8
date	2014.05.24.01.35.55;	author daniel;	state Exp;
branches;
next	1.7;

1.7
date	2014.04.20.09.29.36;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2014.01.01.16.17.55;	author tobias;	state Exp;
branches;
next	1.5;

1.5
date	2013.11.28.10.04.26;	author sobrado;	state Exp;
branches;
next	1.4;

1.4
date	2007.09.24.19.56.34;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	99.06.06.07.03.01;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.19.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.07;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@delete restricted ed. no one will ever use this. never documented or enabled.

ok millert@@
@
text
@$OpenBSD: POSIX,v 1.7 2014/04/20 09:29:36 deraadt Exp $
$NetBSD: POSIX,v 1.9 1995/03/21 09:04:32 cgd Exp $

This version of ed(1) is not strictly POSIX compliant, as described in
the POSIX 1003.2 document.  The following is a summary of the omissions,
extensions and possible deviations from POSIX 1003.2.

OMISSIONS
---------
1) Locale(3) is not supported yet.

2) For backwards compatibility, the POSIX rule that says a range of
   addresses cannot be used where only a single address is expected has
   been relaxed.

3) To support the BSD `s' command (see extension [1] below),
   substitution patterns cannot be delimited by numbers or the characters
   `r', `g' and `p'.  In contrast, POSIX specifies any character except
   space or newline can be used as a delimiter.

EXTENSIONS
----------
1) BSD commands have been implemented wherever they do not conflict with
   the POSIX standard.  The BSD-ism's included are:
	i) `s' (i.e., s[n][rgp]*) to repeat a previous substitution,
	ii) `W' for appending text to an existing file,
	iii) `wq' for exiting after a write,
	iv) `z' for scrolling through the buffer, and
	v) BSD line addressing syntax (i.e., `^' and `%') is recognized.

2) The POSIX interactive global commands `G' and `V' are extended to
   support multiple commands, including `a', `i' and `c'.  The command
   format is the same as for the global commands `g' and `v', i.e., one
   command per line with each line, except for the last, ending in a
   backslash (\).

3) An extension to the POSIX file commands `E', `e', `r', `W' and `w' is
   that <file> arguments are processed for backslash escapes, i.e.,  any
   character preceded by a backslash is interpreted literally.  If the
   first unescaped character of a <file> argument is a bang (!), then the
   rest of the line is interpreted as a shell command, and no escape
   processing is performed by ed.

DEVIATIONS
----------
1) Though ed is not a stream editor, it can be used to edit binary files.
   To assist in binary editing, when a file containing at least one ASCII
   NUL character is written, a newline is not appended if it did not
   already contain one upon reading.  In particular, reading /dev/null
   prior to writing prevents appending a newline to a binary file.

   For example, to create a file with ed containing a single NUL character:
      $ ed file
      a
      ^@@
      .
      r /dev/null
      wq

    Similarly, to remove a newline from the end of binary `file':
      $ ed file
      r /dev/null
      wq

2) Since the behavior of `u' (undo) within a `g' (global) command list is
   not specified by POSIX, it follows the behavior of the SunOS ed:
   undo forces a global command list to be executed only once, rather than
   for each line matching a global pattern.  In addition, each instance of
   `u' within a global command undoes all previous commands (including
   undo's) in the command list.  This seems the best way, since the
   alternatives are either too complicated to implement or too confusing
   to use.

   The global/undo combination is useful for masking errors that
   would otherwise cause a script to fail.  For instance, an ed script
   to remove any occurrences of either `censor1' or `censor2' might be
   written as:
   	ed - file <<EOF
	1g/.*/u\
	,s/censor1//g\
	,s/censor2//g
	...

3) The `m' (move) command within a `g' command list also follows the SunOS
   ed implementation: any moved lines are removed from the global command's
   `active' list.

4) If ed is invoked with a name argument prefixed by a bang (!), then the
   remainder of the argument is interpreted as a shell command.  To invoke
   ed on a file whose name starts with bang, prefix the name with a
   backslash.
@


1.7
log
@Remove more commentary about recently removed des support
from Daniel Dickman
@
text
@d1 1
a1 1
$OpenBSD: POSIX,v 1.6 2014/01/01 16:17:55 tobias Exp $
a42 4

4) For SunOS ed(1) compatibility, ed runs in restricted mode if invoked
   as red.  This limits editing of files in the local directory only and
   prohibits shell commands.
@


1.6
log
@Fixed typos and style.

ok jmc@@
@
text
@d1 1
a1 1
$OpenBSD: POSIX,v 1.5 2013/11/28 10:04:26 sobrado Exp $
d31 1
a31 10
2) If crypt(3) is available, files can be read and written using DES
   encryption.  The `x' command prompts the user to enter a key used for
   encrypting/decrypting subsequent reads and writes.  If only a newline
   is entered as the key, then encryption is disabled.  Otherwise, a key
   is read in the same manner as a password entry.  The key remains in
   effect until encryption is disabled.  For more information on the
   encryption algorithm, see the bdes(1) man page.  Encryption/decryption
   should be fully compatible with SunOS des(1).

3) The POSIX interactive global commands `G' and `V' are extended to
d37 1
a37 1
4) An extension to the POSIX file commands `E', `e', `r', `W' and `w' is
d44 1
a44 1
5) For SunOS ed(1) compatibility, ed runs in restricted mode if invoked
@


1.5
log
@remove trailing spaces.
@
text
@d1 1
a1 1
$OpenBSD: POSIX,v 1.4 2007/09/24 19:56:34 jmc Exp $
d18 2
a19 2
   `r', `g' and `p'.  In contrast, POSIX specifies any character expect
   space or newline can used as a delimiter.
d29 1
a29 1
	v) BSD line addressing syntax (i.e., `^' and `%')  is recognized.
d33 1
a33 1
   encrypting/ decrypting subsequent reads and writes.  If only a newline
@


1.4
log
@typos; from Pierre Riteau
@
text
@d1 1
a1 1
$OpenBSD: POSIX,v 1.3 1999/06/06 07:03:01 pjanzen Exp $
d40 1
a40 1
3) The POSIX interactive global commands `G' and `V' are extended to 
d85 1
a85 1
   to use.  
@


1.3
log
@Once again, fix the spelling of "occurrence" in the documentation
@
text
@d1 1
a1 1
$OpenBSD: POSIX,v 1.2 1996/06/23 14:19:57 deraadt Exp $
d81 1
a81 1
   for each line matching a global pattern.  In addtion, each instance of
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
$OpenBSD: POSIX,v 1.9 1995/03/21 09:04:32 cgd Exp $
d89 1
a89 1
   to remove any occurences of either `censor1' or `censor2' might be
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
