head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.10.0.22
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.28
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.24
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.22
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.20
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.18
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.16
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.14
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.4.0.16
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2015.12.26.13.48.38;	author mestre;	state Exp;
branches;
next	1.16;
commitid	jZMsEASvreUUSdqp;

1.16
date	2015.02.08.06.01.25;	author tedu;	state Exp;
branches;
next	1.15;
commitid	tnCfmqNIkMr95MJy;

1.15
date	2015.02.08.05.47.28;	author tedu;	state Exp;
branches;
next	1.14;
commitid	UHj0KNSjy07xS7rI;

1.14
date	2015.02.08.05.25.16;	author tedu;	state Exp;
branches;
next	1.13;
commitid	LE9OqM7SwBT57snb;

1.13
date	2014.10.17.06.17.37;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	J4HY4fK4K8r0E4fh;

1.12
date	2014.10.16.19.43.31;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	jIHreojPTUQy0Zyb;

1.11
date	2014.10.16.18.23.26;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	boajS7faBMNVqeR6;

1.10
date	2009.10.27.23.59.21;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.11.21.09.50;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.23.32.06;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.19.19.39.35;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.25.10.03.48;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.25.04.41.24;	author art;	state Exp;
branches;
next	1.4;

1.4
date	97.07.25.18.57.57;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.12.14.12.17.40;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.19.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.02;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Replace handrolled xfree() function by directly using free(3)

OK mmcc@@
@
text
@/*	$OpenBSD: alloc.c,v 1.16 2015/02/08 06:01:25 tedu Exp $	*/
/*	$NetBSD: alloc.c,v 1.6 1995/03/21 09:02:23 cgd Exp $	*/

/*-
 * Copyright (c) 1983, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdarg.h>

#include "csh.h"
#include "extern.h"

void *
Malloc(size_t n)
{
    void *ptr;

    if ((ptr = malloc(n)) == NULL) {
	child++;
	stderror(ERR_NOMEM);
    }
    return (ptr);
}

void *
Reallocarray(void * p, size_t c, size_t n)
{
    void *ptr;

    if ((ptr = reallocarray(p, c, n)) == NULL) {
	child++;
	stderror(ERR_NOMEM);
    }
    return (ptr);
}

void *
Calloc(size_t s, size_t n)
{
    void *ptr;

    if ((ptr = calloc(s, n)) == NULL) {
	child++;
	stderror(ERR_NOMEM);
    }

    return (ptr);
}
@


1.16
log
@remove ptr_t typedef. void * is good enough for csh.
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.15 2015/02/08 05:47:28 tedu Exp $	*/
a75 6
}

void
Free(void *p)
{
	free(p);
@


1.15
log
@delete lots of unnecessary ptr_t casts, and drop a little NULL in as well
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.14 2015/02/08 05:25:16 tedu Exp $	*/
d41 1
a41 1
ptr_t
d44 1
a44 1
    ptr_t   ptr;
d53 2
a54 2
ptr_t
Reallocarray(ptr_t p, size_t c, size_t n)
d56 1
a56 1
    ptr_t   ptr;
d65 1
a65 1
ptr_t
d68 1
a68 1
    ptr_t   ptr;
d79 1
a79 1
Free(ptr_t p)
@


1.14
log
@it's safe to call free with null
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.13 2014/10/17 06:17:37 deraadt Exp $	*/
d46 1
a46 1
    if ((ptr = malloc(n)) == (ptr_t) 0) {
d58 1
a58 1
    if ((ptr = reallocarray(p, c, n)) == (ptr_t) 0) {
d70 1
a70 1
    if ((ptr = calloc(s, n)) == (ptr_t) 0) {
@


1.13
log
@no need for realloc() front ends anymore
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.12 2014/10/16 19:43:31 deraadt Exp $	*/
a80 1
    if (p)
@


1.12
log
@Use reallocarray() and remove a few archaic memory allocation practices.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.11 2014/10/16 18:23:26 deraadt Exp $	*/
a46 12
	child++;
	stderror(ERR_NOMEM);
    }
    return (ptr);
}

ptr_t
Realloc(ptr_t p, size_t n)
{
    ptr_t   ptr;

    if ((ptr = realloc(p, n)) == (ptr_t) 0) {
@


1.11
log
@Kill the alloc command, which tried to measure behaviour based on sbrk.
Discussed with guenther.
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.10 2009/10/27 23:59:21 deraadt Exp $	*/
d59 12
@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.9 2003/06/11 21:09:50 deraadt Exp $	*/
a40 3
char   *memtop = NULL;		/* PWP: top of current memory */
char   *membot = NULL;		/* PWP: bottom of allocatable memory */

a45 2
    if (membot == NULL)
	memtop = membot = sbrk(0);
a57 2
    if (membot == NULL)
	memtop = membot = sbrk(0);
a69 2
    if (membot == NULL)
	memtop = membot = sbrk(0);
a82 16
}

/*
 * mstats - print out statistics about malloc
 *
 * Prints two lines of numbers, one showing the length of the free list
 * for each size category, the second showing the number of mallocs -
 * frees for each size category.
 */
void
/*ARGSUSED*/
showall(Char **v, struct command *t)
{
    memtop = (char *) sbrk(0);
    (void) fprintf(cshout, "Allocated memory from 0x%lx to 0x%lx (%d).\n",
	    (unsigned long) membot, (unsigned long) memtop, (int)(memtop - membot));
@


1.9
log
@de-register and ansify functions
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.8 2003/06/02 23:32:06 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)alloc.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: alloc.c,v 1.8 2003/06/02 23:32:06 millert Exp $";
#endif
#endif /* not lint */
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.7 2002/02/19 19:39:35 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: alloc.c,v 1.7 2002/02/19 19:39:35 millert Exp $";
d53 1
a53 2
Malloc(n)
    size_t  n;
d67 1
a67 3
Realloc(p, n)
    ptr_t   p;
    size_t  n;
d81 1
a81 2
Calloc(s, n)
    size_t  s, n;
d96 1
a96 2
Free(p)
    ptr_t   p;
d111 1
a111 3
showall(v, t)
    Char **v;
    struct command *t;
@


1.7
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.6 2001/06/25 10:03:48 art Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: alloc.c,v 1.6 2001/06/25 10:03:48 art Exp $";
@


1.6
log
@unsmoke drugs.
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.5 2001/06/25 04:41:24 art Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: alloc.c,v 1.5 2001/06/25 04:41:24 art Exp $";
d48 1
a48 5
#ifdef __STDC__
# include <stdarg.h>
#else
# include <varargs.h>
#endif
@


1.5
log
@fix obvious warnings.
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.4 1997/07/25 18:57:57 mickey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: alloc.c,v 1.4 1997/07/25 18:57:57 mickey Exp $";
d130 1
a130 1
	    (unsigned long) membot, (unsigned long) memtop, (int)memtop - membot);
@


1.4
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.3 1996/12/14 12:17:40 mickey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: alloc.c,v 1.3 1996/12/14 12:17:40 mickey Exp $";
d130 1
a130 1
	    (unsigned long) membot, (unsigned long) memtop, memtop - membot);
@


1.3
log
@-Wall'ing.
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.2 1996/06/23 14:19:12 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: alloc.c,v 1.2 1996/06/23 14:19:12 deraadt Exp $";
d48 1
a48 1
#if __STDC__
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: alloc.c,v 1.6 1995/03/21 09:02:23 cgd Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: alloc.c,v 1.6 1995/03/21 09:02:23 cgd Exp $";
d129 1
a129 1
    (void) fprintf(cshout, "Allocated memory from 0x%lx to 0x%lx (%ld).\n",
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: alloc.c,v 1.6 1995/03/21 09:02:23 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
