head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.22
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.20
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.16
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.14
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.12
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.28
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.24
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.22
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.20
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.18
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.12.26.13.48.38;	author mestre;	state Exp;
branches;
next	1.9;
commitid	jZMsEASvreUUSdqp;

1.9
date	2015.02.08.05.51.37;	author tedu;	state Exp;
branches;
next	1.8;
commitid	L3WalZJ5Trtg0ORm;

1.8
date	2009.10.27.23.59.21;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.11.21.09.50;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.23.32.07;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.19.19.39.35;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.06;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.07.25.18.58.09;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.19.24;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Replace handrolled xfree() function by directly using free(3)

OK mmcc@@
@
text
@/*	$OpenBSD: hist.c,v 1.9 2015/02/08 05:51:37 tedu Exp $	*/
/*	$NetBSD: hist.c,v 1.7 1995/03/21 18:35:44 mycroft Exp $	*/

/*-
 * Copyright (c) 1980, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <stdlib.h>
#include <stdarg.h>

#include "csh.h"
#include "extern.h"

static void	hfree(struct Hist *);
static void	dohist1(struct Hist *, int *, int, int);
static void	phist(struct Hist *, int);

void
savehist(struct wordent *sp)
{
    struct Hist *hp, *np;
    int histlen = 0;
    Char   *cp;

    /* throw away null lines */
    if (sp->next->word[0] == '\n')
	return;
    cp = value(STRhistory);
    if (*cp) {
	Char *p = cp;

	while (*p) {
	    if (!Isdigit(*p)) {
		histlen = 0;
		break;
	    }
	    histlen = histlen * 10 + *p++ - '0';
	}
    }
    for (hp = &Histlist; (np = hp->Hnext) != NULL;)
	if (eventno - np->Href >= histlen || histlen == 0)
	    hp->Hnext = np->Hnext, hfree(np);
	else
	    hp = np;
    (void) enthist(++eventno, sp, 1);
}

struct Hist *
enthist(int event, struct wordent *lp, bool docopy)
{
    struct Hist *np;

    np = (struct Hist *) xmalloc((size_t) sizeof(*np));
    np->Hnum = np->Href = event;
    if (docopy) {
	copylex(&np->Hlex, lp);
    }
    else {
	np->Hlex.next = lp->next;
	lp->next->prev = &np->Hlex;
	np->Hlex.prev = lp->prev;
	lp->prev->next = &np->Hlex;
    }
    np->Hnext = Histlist.Hnext;
    Histlist.Hnext = np;
    return (np);
}

static void
hfree(struct Hist *hp)
{

    freelex(&hp->Hlex);
    free(hp);
}

void
/*ARGSUSED*/
dohist(Char **v, struct command *t)
{
    int     n, rflg = 0, hflg = 0;
    sigset_t sigset;

    if (getn(value(STRhistory)) == 0)
	return;
    if (setintr) {
	sigemptyset(&sigset);
	sigaddset(&sigset, SIGINT);
	sigprocmask(SIG_UNBLOCK, &sigset, NULL);
    }
    while (*++v && **v == '-') {
	Char   *vp = *v;

	while (*++vp)
	    switch (*vp) {
	    case 'h':
		hflg++;
		break;
	    case 'r':
		rflg++;
		break;
	    case '-':		/* ignore multiple '-'s */
		break;
	    default:
		stderror(ERR_HISTUS);
		break;
	    }
    }
    if (*v)
	n = getn(*v);
    else {
	n = getn(value(STRhistory));
    }
    dohist1(Histlist.Hnext, &n, rflg, hflg);
}

static void
dohist1(struct Hist *hp, int *np, int rflg, int hflg)
{
    bool    print = (*np) > 0;

    for (; hp != 0; hp = hp->Hnext) {
	(*np)--;
	hp->Href++;
	if (rflg == 0) {
	    dohist1(hp->Hnext, np, rflg, hflg);
	    if (print)
		phist(hp, hflg);
	    return;
	}
	if (*np >= 0)
	    phist(hp, hflg);
    }
}

static void
phist(struct Hist *hp, int hflg)
{
    if (hflg == 0)
	(void) fprintf(cshout, "%6d\t", hp->Hnum);
    prlex(cshout, &hp->Hlex);
}
@


1.9
log
@delete many more ptr_t casts
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.c,v 1.8 2009/10/27 23:59:21 deraadt Exp $	*/
d100 1
a100 1
    xfree(hp);
@


1.8
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.c,v 1.7 2003/06/11 21:09:50 deraadt Exp $	*/
d100 1
a100 1
    xfree((ptr_t) hp);
@


1.7
log
@de-register and ansify functions
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.c,v 1.6 2003/06/02 23:32:07 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)hist.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: hist.c,v 1.6 2003/06/02 23:32:07 millert Exp $";
#endif
#endif /* not lint */
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.c,v 1.5 2002/02/19 19:39:35 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: hist.c,v 1.5 2002/02/19 19:39:35 millert Exp $";
d53 1
a53 2
savehist(sp)
    struct wordent *sp;
d55 2
a56 2
    register struct Hist *hp, *np;
    register int histlen = 0;
d64 1
a64 1
	register Char *p = cp;
d83 1
a83 4
enthist(event, lp, docopy)
    int     event;
    register struct wordent *lp;
    bool    docopy;
d85 1
a85 1
    register struct Hist *np;
d104 1
a104 2
hfree(hp)
    register struct Hist *hp;
d113 1
a113 3
dohist(v, t)
    Char **v;
    struct command *t;
d152 1
a152 3
dohist1(hp, np, rflg, hflg)
    struct Hist *hp;
    int    *np, rflg, hflg;
d171 1
a171 3
phist(hp, hflg)
    register struct Hist *hp;
    int     hflg;
@


1.5
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.c,v 1.4 2002/02/16 21:27:06 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: hist.c,v 1.4 2002/02/16 21:27:06 millert Exp $";
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.c,v 1.3 1997/07/25 18:58:09 mickey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: hist.c,v 1.3 1997/07/25 18:58:09 mickey Exp $";
d47 1
a47 5
#ifdef __STDC__
# include <stdarg.h>
#else
# include <varargs.h>
#endif
@


1.3
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.c,v 1.2 1996/06/23 14:19:24 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: hist.c,v 1.2 1996/06/23 14:19:24 deraadt Exp $";
d56 3
a58 3
static void	hfree __P((struct Hist *));
static void	dohist1 __P((struct Hist *, int *, int, int));
static void	phist __P((struct Hist *, int));
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.c,v 1.7 1995/03/21 18:35:44 mycroft Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: hist.c,v 1.7 1995/03/21 18:35:44 mycroft Exp $";
d47 1
a47 1
#if __STDC__
@


1.1
log
@Initial revision
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: hist.c,v 1.7 1995/03/21 18:35:44 mycroft Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
