head	1.27;
access;
symbols
	OPENBSD_5_5:1.26.0.4
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.25.0.4
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.25.0.2
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.24.0.12
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.10
	OPENBSD_5_0:1.24.0.8
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.24.0.6
	OPENBSD_4_9_BASE:1.24
	OPENBSD_4_8:1.24.0.4
	OPENBSD_4_8_BASE:1.24
	OPENBSD_4_7:1.24.0.2
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.23.0.8
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.23.0.4
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.23.0.2
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.22.0.2
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.21.0.4
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.21.0.2
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.20.0.4
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.20.0.2
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.19.0.8
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.6
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.4
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.19.0.2
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.10.0.6
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.6
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.4
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.27
date	2014.03.12.05.04.43;	author tedu;	state dead;
branches;
next	1.26;

1.26
date	2013.11.21.15.54.46;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2012.12.04.02.24.47;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2009.10.27.23.59.22;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2008.05.28.16.01.42;	author sobrado;	state Exp;
branches;
next	1.22;

1.22
date	2008.02.25.18.52.39;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2006.11.15.22.23.09;	author miod;	state Exp;
branches;
next	1.20;

1.20
date	2005.11.12.13.27.59;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2003.09.26.15.55.22;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2003.09.24.21.11.46;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.29.00.24.16;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.10.21.15.18;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.02.23.32.09;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2003.03.13.09.09.24;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2002.07.04.04.26.40;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.16.21.27.07;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.06.13.29.08;	author mpech;	state Exp;
branches;
next	1.10;

1.10
date	2000.01.22.20.24.53;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	98.04.30.05.55.06;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.09.01.18.30.29;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.04.09.18.47.53;	author felix;	state Exp;
branches;
next	1.6;

1.6
date	97.04.07.10.12.07;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.01.15.23.40.26;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.12.14.12.18.17;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.08.02.12.41.06;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.21.01;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.20;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.27
log
@rmail should not reside in /bin.
ok deraadt guenther
@
text
@/*	$OpenBSD: rmail.c,v 1.26 2013/11/21 15:54:46 deraadt Exp $	*/
/*	$NetBSD: rmail.c,v 1.8 1995/09/07 06:51:50 jtc Exp $	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * RMAIL -- UUCP mail server.
 *
 * This program reads the >From ... remote from ... lines that UUCP is so
 * fond of and turns them into something reasonable.  It then execs sendmail
 * with various options built from these lines.
 *
 * The expected syntax is:
 *
 *	 <user> := [-a-z0-9]+
 *	 <date> := ctime format
 *	 <site> := [-a-z0-9!]+
 * <blank line> := "^\n$"
 *	 <from> := "From" <space> <user> <space> <date>
 *		  [<space> "remote from" <space> <site>]
 *    <forward> := ">" <from>
 *	    msg := <from> <forward>* <blank-line> <body>
 *
 * The output of rmail(8) compresses the <forward> lines into a single
 * from path.
 */
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/wait.h>

#include <ctype.h>
#include <fcntl.h>
#include <paths.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sysexits.h>
#include <unistd.h>
#include <err.h>
#include <errno.h>

#ifndef MAX
# define MAX(a, b)	((a) < (b) ? (b) : (a))
#endif

extern	char *__progname;

void usage(void);

#define TAYLOR_ENV /* use UU_MACHINE if present */

int
main(int argc, char *argv[])
{
	FILE *fp;
	struct stat sb;
	size_t fplen, fptlen, len;
	off_t offset;
	int ch, debug, i, pdes[2], pid, status;
	char *addrp, *domain, *p, *t;
	char *from_path, *from_sys, *from_user;
	char *args[100], buf[2048], lbuf[2048];

#ifdef lint
	fplen = fptlen = 0;
	addrp = NULL;
#endif

	debug = 0;
	domain = "UUCP";		/* Default "domain". */
	while ((ch = getopt(argc, argv, "D:T")) != -1)
		switch (ch) {
		case 'T':
			debug = 1;
			break;
		case 'D':
			domain = optarg;
			break;
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	if (argc < 1)
		usage();

	from_path = from_sys = from_user = NULL;
	for (offset = 0;;) {

		/* Get and nul-terminate the line. */
		if (fgets(lbuf, sizeof(lbuf), stdin) == NULL)
			exit (EX_DATAERR);
		if ((p = strchr(lbuf, '\n')) == NULL)
			err(EX_DATAERR, "line too long");
		*p = '\0';

		/* Parse lines until reach a non-"From" line. */
		if (!strncmp(lbuf, "From ", 5))
			addrp = lbuf + 5;
		else if (!strncmp(lbuf, ">From ", 6))
			addrp = lbuf + 6;
		else if (offset == 0)
			err(EX_DATAERR,
			    "missing or empty From line: %s", lbuf);
		else {
			*p = '\n';
			break;
		}

		if (*addrp == '\0')
			err(EX_DATAERR, "corrupted From line: %s", lbuf);

		/* Use the "remote from" if it exists. */
		for (p = addrp; (p = strchr(p + 1, 'r')) != NULL;)
			if (!strncmp(p, "remote from ", 12)) {
				for (t = p += 12;
				    *t && !isspace((unsigned char)*t); ++t)
					;
				*t = '\0';
				if (debug)
					(void)fprintf(stderr,
					    "remote from: %s\n", p);
				break;
			}

		/* Else use the string up to the last bang. */
		if (p == NULL) {
			if (*addrp == '!')
				err(EX_DATAERR,
				    "bang starts address: %s", addrp);
			else if ((t = strrchr(addrp, '!')) != NULL) {
				*t = '\0';
				p = addrp;
				addrp = t + 1;
				if (*addrp == '\0')
					err(EX_DATAERR,
					    "corrupted From line: %s", lbuf);
				if (debug)
					(void)fprintf(stderr, "bang: %s\n", p);
			}
		}

		/* 'p' now points to any system string from this line. */
		if (p != NULL) {
			/* Nul terminate it as necessary. */
			for (t = p; *t && !isspace((unsigned char)*t); ++t)
				;
			*t = '\0';

			/* If the first system, copy to the from_sys string. */
			if (from_sys == NULL) {
				if ((from_sys = strdup(p)) == NULL)
					err(EX_TEMPFAIL, NULL);
				if (debug)
					(void)fprintf(stderr,
					    "from_sys: %s\n", from_sys);
			}

			/* Concatenate to the path string. */
			len = t - p;
			if (from_path == NULL) {
				fplen = 0;
				if ((from_path = malloc(fptlen = 256)) == NULL)
					err(EX_TEMPFAIL, NULL);
			}
			if (fplen + len + 2 > fptlen) {
				size_t newfptlen = fptlen +
				    MAX(fplen + len + 2, 256);
				char *np;

				if ((np = realloc(from_path, newfptlen)) == NULL)
					err(EX_TEMPFAIL, NULL);
				from_path = np;
				fptlen = newfptlen;
			}
			memmove(from_path + fplen, p, len);
			fplen += len;
			from_path[fplen++] = '!';
			from_path[fplen] = '\0';
		}

		/* Save off from user's address; the last one wins. */
		for (p = addrp; *p && !isspace((unsigned char)*p); ++p)
			;
		*p = '\0';
		if (*addrp == '\0')
			addrp = "<>";
		free(from_user);
		if ((from_user = strdup(addrp)) == NULL)
			err(EX_TEMPFAIL, NULL);

		if (debug) {
			if (from_path != NULL)
				(void)fprintf(stderr,
				    "from_path: %s\n", from_path);
			(void)fprintf(stderr, "from_user: %s\n", from_user);
		}

		if (offset != -1)
			offset = ftello(stdin);
	}

	i = 0;
	args[i++] = _PATH_SENDMAIL;	/* Build sendmail's argument list. */
	args[i++] = "-G";		/* Relay submission. */
	args[i++] = "-oee";		/* No errors, just status. */
	args[i++] = "-odi";		/* Deliver in foreground. */
	args[i++] = "-oi";		/* Ignore '.' on a line by itself. */

	/* set from system and protocol used */
#ifdef TAYLOR_ENV
	{
		char *uu_machine;
		uu_machine = getenv("UU_MACHINE");
		/* set by Taylor UUCP's uuxqt */
		if (uu_machine)
			from_sys = uu_machine;
	}
#endif
	if (from_sys == NULL)
		(void)snprintf(buf, sizeof(buf), "-p%s", domain);
	else if (strchr(from_sys, '.') == NULL)
		(void)snprintf(buf, sizeof(buf), "-p%s:%s.%s",
			domain, from_sys, domain);
	else
		(void)snprintf(buf, sizeof(buf), "-p%s:%s", domain, from_sys);
	if ((args[i++] = strdup(buf)) == NULL)
		err(EX_TEMPFAIL, NULL);

					/* Set name of ``from'' person. */
	(void)snprintf(buf, sizeof(buf), "-f%s%s",
	    from_path ? from_path : "", from_user);
	if ((args[i++] = strdup(buf)) == NULL)
		err(EX_TEMPFAIL, NULL);

	/*
	 * Don't copy arguments beginning with - as they will be
	 * passed to sendmail and could be interpreted as flags.
	 * To prevent confusion of sendmail wrap < and > around
	 * the address (helps to pass addrs like @@gw1,@@gw2:aa@@bb)
	 */
	while (*argv) {
		if (**argv == '-')
			err(EX_USAGE, "dash precedes argument: %s", *argv);
		if (strchr(*argv, ',') == NULL || strchr(*argv, '<') != NULL)
			args[i++] = *argv;
		else {
			if (asprintf(&args[i++], "<%s>", *argv) == -1)
				err(EX_TEMPFAIL, "Cannot malloc");
		}
		argv++;
	}
	args[i] = 0;

	if (debug) {
		(void)fprintf(stderr, "sendmail arguments:\n");
		for (i = 0; args[i]; i++)
			(void)fprintf(stderr, "\t%s\n", args[i]);
	}

	/*
	 * If called with a regular file as standard input, seek to the right
	 * position in the file and just exec sendmail.  Could probably skip
	 * skip the stat, but it's not unreasonable to believe that a failed
	 * seek will cause future reads to fail.
	 */
	if (!fstat(STDIN_FILENO, &sb) && S_ISREG(sb.st_mode)) {
		if (lseek(STDIN_FILENO, offset, SEEK_SET) != offset)
			err(EX_TEMPFAIL, "stdin seek");
		execv(_PATH_SENDMAIL, args);
		err(EX_OSERR, "%s", _PATH_SENDMAIL);
	}

	if (pipe(pdes) < 0)
		err(EX_OSERR, NULL);

	switch (pid = vfork()) {
	case -1:				/* Err. */
		err(EX_OSERR, NULL);
	case 0:					/* Child. */
		if (pdes[0] != STDIN_FILENO) {
			(void)dup2(pdes[0], STDIN_FILENO);
			(void)close(pdes[0]);
		}
		(void)close(pdes[1]);
		execv(_PATH_SENDMAIL, args);
		_exit(127);
		/* NOTREACHED */
	}

	if ((fp = fdopen(pdes[1], "w")) == NULL)
		err(EX_OSERR, NULL);
	(void)close(pdes[0]);

	/* Copy the file down the pipe. */
	do {
		(void)fprintf(fp, "%s", lbuf);
	} while (fgets(lbuf, sizeof(lbuf), stdin) != NULL);

	if (ferror(stdin))
		err(EX_TEMPFAIL, "stdin");

	if (fclose(fp))
		err(EX_OSERR, NULL);

	if ((waitpid(pid, &status, 0)) == -1)
		err(EX_OSERR, "%s", _PATH_SENDMAIL);

	if (!WIFEXITED(status))
		err(EX_OSERR,
		    "%s: did not terminate normally", _PATH_SENDMAIL);

	if (WEXITSTATUS(status))
		err(status, "%s: terminated with %d (non-zero) status",
		    _PATH_SENDMAIL, WEXITSTATUS(status));
	exit(EX_OK);
}

void
usage(void)
{
	(void)fprintf(stderr, "usage: %s [-T] [-D domain] user ...\n",
	    __progname);
	exit(EX_USAGE);
}
@


1.26
log
@add unsigned char casts for specific calls to ctype.h macros.
ok guenther step
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.25 2012/12/04 02:24:47 deraadt Exp $	*/
@


1.25
log
@remove some unnecessary sys/param.h inclusions
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.24 2009/10/27 23:59:22 deraadt Exp $	*/
d144 3
a146 1
				for (t = p += 12; *t && !isspace(*t); ++t);
d174 2
a175 1
			for (t = p; *t && !isspace(*t); ++t);
d211 2
a212 1
		for (p = addrp; *p && !isspace(*p); ++p);
@


1.24
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.23 2008/05/28 16:01:42 sobrado Exp $	*/
d54 1
a54 1
#include <sys/param.h>
@


1.23
log
@add a description for -D and -T (taken from NetBSD's rmail(8));
use the right capitalization for "sendmail".

tweaks by jmc@@ and jsing@@, thanks!

ok jmc@@, jsing@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.22 2008/02/25 18:52:39 deraadt Exp $	*/
a31 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1988, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)rmail.c	8.3 (Berkeley) 5/15/95";
#else
static char rcsid[] = "$OpenBSD: rmail.c,v 1.22 2008/02/25 18:52:39 deraadt Exp $";
#endif
#endif /* not lint */
@


1.22
log
@support giant files by using ftello(); dhill@@mindcry.org
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.21 2006/11/15 22:23:09 miod Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.21 2006/11/15 22:23:09 miod Exp $";
d294 1
a294 1
		(void)fprintf(stderr, "Sendmail arguments:\n");
@


1.21
log
@err(..., strerror(errno)) is redundant.

ok millert@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.20 2005/11/12 13:27:59 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.20 2005/11/12 13:27:59 deraadt Exp $";
d238 1
a238 1
			offset = (off_t)ftell(stdin);
@


1.20
log
@use snprintf; ok cloder dhill@@mindcry.org
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.19 2003/09/26 15:55:22 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.19 2003/09/26 15:55:22 deraadt Exp $";
d80 1
a88 1
void err(int, const char *, ...);
d339 1
a339 1
		err(EX_TEMPFAIL, "stdin: %s", strerror(errno));
@


1.19
log
@free(NULL) works; jjy2+@@pitt.edu
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.18 2003/09/24 21:11:46 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.18 2003/09/24 21:11:46 deraadt Exp $";
d286 1
a286 3
			int len = strlen(*argv) + 3;

			if ((args[i] = malloc(len)) == NULL)
a287 1
			snprintf(args[i++], len, "<%s>", *argv);
@


1.18
log
@realloc fix; ho ok
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.17 2003/07/29 00:24:16 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.17 2003/07/29 00:24:16 deraadt Exp $";
d226 1
a226 2
		if (from_user != NULL)
			free(from_user);
@


1.17
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.16 2003/06/10 21:15:18 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.16 2003/06/10 21:15:18 millert Exp $";
d206 5
a210 3
				fptlen += MAX(fplen + len + 2, 256);
				if ((from_path =
				    realloc(from_path, fptlen)) == NULL)
d212 2
@


1.16
log
@o Pass the -G flag to sendmail like sendmail(8) says
o Delivery in the foreground instead of just queueing since otherwise
mail is not delivered until the next queue run.
From Takahiro Yugawa; closes PR 3182
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.15 2003/06/02 23:32:09 millert Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.15 2003/06/02 23:32:09 millert Exp $";
d361 1
a361 1
            __progname);
@


1.15
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.14 2003/03/13 09:09:24 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.14 2003/03/13 09:09:24 deraadt Exp $";
d240 1
d242 1
a242 1
	args[i++] = "-odq";		/* Queue it, don't try to deliver. */
@


1.14
log
@lots of sprintf -> snprintf and strcpy -> strlcpy; checked by tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.13 2002/07/04 04:26:40 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.13 2002/07/04 04:26:40 deraadt Exp $";
@


1.13
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.12 2002/02/16 21:27:07 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.12 2002/02/16 21:27:07 millert Exp $";
d286 3
a288 1
			if ((args[i] = malloc(strlen(*argv) + 3)) == NULL)
d290 1
a290 1
			sprintf (args [i++], "<%s>", *argv);
@


1.12
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.11 2001/09/06 13:29:08 mpech Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.11 2001/09/06 13:29:08 mpech Exp $";
d98 1
a98 3
main(argc, argv)
	int argc;
	char *argv[];
d359 1
a359 1
usage()
@


1.11
log
@o) __progname aria;

millert@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.10 2000/01/22 20:24:53 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.10 2000/01/22 20:24:53 deraadt Exp $";
d92 2
a93 2
void err __P((int, const char *, ...));
void usage __P((void));
@


1.10
log
@remove extra externs not needed because of unistd.h (rest of tree will be done later.. contact me if you want to help)
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.9 1998/04/30 05:55:06 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.9 1998/04/30 05:55:06 deraadt Exp $";
d90 2
d363 2
a364 1
	(void)fprintf(stderr, "usage: rmail [-T] [-D domain] user ...\n");
@


1.9
log
@Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.8 1997/09/01 18:30:29 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.8 1997/09/01 18:30:29 deraadt Exp $";
d84 1
a99 2
	extern char *optarg;
	extern int errno, optind;
@


1.8
log
@i am bored enough to fix terminal space/tab uglies
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.7 1997/04/09 18:47:53 felix Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.7 1997/04/09 18:47:53 felix Exp $";
d172 1
a172 1
		if (p == NULL)
d186 1
@


1.7
log
@Use the value of UU_MACHINE from the environment if present.
This makes the Received header lines more accurate, if rmail is
called from Taylor UUCP's uuxqt. (And we ship Taylor UUCP...)

Change #define TAYLOR_ENV into #undef TAYLOR_ENV if this should annoy you :-)
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.6 1997/04/07 10:12:07 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.6 1997/04/07 10:12:07 deraadt Exp $";
d56 1
a56 1
 * with various options built from these lines. 
d291 1
a291 1
	} 
@


1.6
log
@use libc err(); ahd@@kew.com
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.5 1997/01/15 23:40:26 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.5 1997/01/15 23:40:26 millert Exp $";
d92 2
d249 9
@


1.5
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.4 1996/12/14 12:18:17 mickey Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.4 1996/12/14 12:18:17 mickey Exp $";
a70 3
 *
 * The err(3) routine is included here deliberately to make this code
 * a bit more portable.
a351 29
}

#ifdef __STDC__
#include <stdarg.h>
#else
#include <varargs.h>
#endif

void
#ifdef __STDC__
err(int eval, const char *fmt, ...)
#else
err(eval, fmt, va_alist)
	int eval;
	const char *fmt;
	va_dcl
#endif
{
	va_list ap;
#if __STDC__
	va_start(ap, fmt);
#else
	va_start(ap);
#endif
	(void)fprintf(stderr, "rmail: ");
	(void)vfprintf(stderr, fmt, ap);
	va_end(ap);
	(void)fprintf(stderr, "\n");
	exit(eval);
@


1.4
log
@-Wall'ing.
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.3 1996/08/02 12:41:06 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.3 1996/08/02 12:41:06 deraadt Exp $";
d118 1
a118 1
	while ((ch = getopt(argc, argv, "D:T")) != EOF)
@


1.3
log
@zap getopt() case of -?, come on, it is the default!
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.2 1996/06/23 14:21:01 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.2 1996/06/23 14:21:01 deraadt Exp $";
d110 5
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: rmail.c,v 1.8 1995/09/07 06:51:50 jtc Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: rmail.c,v 1.8 1995/09/07 06:51:50 jtc Exp $";
a120 1
		case '?':
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: rmail.c,v 1.8 1995/09/07 06:51:50 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
