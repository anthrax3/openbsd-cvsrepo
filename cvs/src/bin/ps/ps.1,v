head	1.111;
access;
symbols
	OPENBSD_6_1:1.111.0.2
	OPENBSD_6_1_BASE:1.111
	OPENBSD_6_0:1.106.0.2
	OPENBSD_6_0_BASE:1.106
	OPENBSD_5_9:1.102.0.2
	OPENBSD_5_9_BASE:1.102
	OPENBSD_5_8:1.100.0.4
	OPENBSD_5_8_BASE:1.100
	OPENBSD_5_7:1.98.0.2
	OPENBSD_5_7_BASE:1.98
	OPENBSD_5_6:1.97.0.4
	OPENBSD_5_6_BASE:1.97
	OPENBSD_5_5:1.89.0.4
	OPENBSD_5_5_BASE:1.89
	OPENBSD_5_4:1.83.0.4
	OPENBSD_5_4_BASE:1.83
	OPENBSD_5_3:1.83.0.2
	OPENBSD_5_3_BASE:1.83
	OPENBSD_5_2:1.82.0.2
	OPENBSD_5_2_BASE:1.82
	OPENBSD_5_1_BASE:1.81
	OPENBSD_5_1:1.81.0.2
	OPENBSD_5_0:1.76.0.2
	OPENBSD_5_0_BASE:1.76
	OPENBSD_4_9:1.71.0.2
	OPENBSD_4_9_BASE:1.71
	OPENBSD_4_8:1.70.0.8
	OPENBSD_4_8_BASE:1.70
	OPENBSD_4_7:1.70.0.4
	OPENBSD_4_7_BASE:1.70
	OPENBSD_4_6:1.70.0.6
	OPENBSD_4_6_BASE:1.70
	OPENBSD_4_5:1.70.0.2
	OPENBSD_4_5_BASE:1.70
	OPENBSD_4_4:1.67.0.2
	OPENBSD_4_4_BASE:1.67
	OPENBSD_4_3:1.65.0.4
	OPENBSD_4_3_BASE:1.65
	OPENBSD_4_2:1.65.0.2
	OPENBSD_4_2_BASE:1.65
	OPENBSD_4_1:1.63.0.2
	OPENBSD_4_1_BASE:1.63
	OPENBSD_4_0:1.54.0.4
	OPENBSD_4_0_BASE:1.54
	OPENBSD_3_9:1.54.0.2
	OPENBSD_3_9_BASE:1.54
	OPENBSD_3_8:1.53.0.2
	OPENBSD_3_8_BASE:1.53
	OPENBSD_3_7:1.52.0.2
	OPENBSD_3_7_BASE:1.52
	OPENBSD_3_6:1.50.0.2
	OPENBSD_3_6_BASE:1.50
	OPENBSD_3_5:1.47.0.2
	OPENBSD_3_5_BASE:1.47
	OPENBSD_3_4:1.42.0.2
	OPENBSD_3_4_BASE:1.42
	OPENBSD_3_3:1.39.0.2
	OPENBSD_3_3_BASE:1.39
	OPENBSD_3_2:1.35.0.2
	OPENBSD_3_2_BASE:1.35
	OPENBSD_3_1:1.33.0.2
	OPENBSD_3_1_BASE:1.33
	OPENBSD_3_0:1.30.0.2
	OPENBSD_3_0_BASE:1.30
	OPENBSD_2_9:1.29.0.2
	OPENBSD_2_9_BASE:1.29
	OPENBSD_2_8:1.26.0.2
	OPENBSD_2_8_BASE:1.26
	OPENBSD_2_7:1.24.0.2
	OPENBSD_2_7_BASE:1.24
	OPENBSD_2_6:1.22.0.2
	OPENBSD_2_6_BASE:1.22
	OPENBSD_2_5:1.17.0.2
	OPENBSD_2_5_BASE:1.17
	OPENBSD_2_4:1.13.0.2
	OPENBSD_2_4_BASE:1.13
	OPENBSD_2_3:1.10.0.4
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.111
date	2016.10.26.01.20.39;	author schwarze;	state Exp;
branches;
next	1.110;
commitid	vlL4ePHQj8KHfSDy;

1.110
date	2016.10.19.18.34.05;	author schwarze;	state Exp;
branches;
next	1.109;
commitid	nkwRcSzThjHHFlvE;

1.109
date	2016.09.23.06.28.08;	author bentley;	state Exp;
branches;
next	1.108;
commitid	T4KnzSzaKfvTIl2L;

1.108
date	2016.09.08.15.54.36;	author tedu;	state Exp;
branches;
next	1.107;
commitid	4vAu0tTKDZ03w46c;

1.107
date	2016.09.08.15.11.30;	author tedu;	state Exp;
branches;
next	1.106;
commitid	Ektj5UIXo8ssHb1H;

1.106
date	2016.04.25.20.34.55;	author jmc;	state Exp;
branches;
next	1.105;
commitid	IN85DHsYBxdBipSE;

1.105
date	2016.04.25.19.12.07;	author tedu;	state Exp;
branches;
next	1.104;
commitid	OAdoVOvynceaXSP4;

1.104
date	2016.03.17.07.18.33;	author jmc;	state Exp;
branches;
next	1.103;
commitid	l71wixFuXK442jh9;

1.103
date	2016.03.17.05.27.10;	author bentley;	state Exp;
branches;
next	1.102;
commitid	0afdJPZPXUfvItJV;

1.102
date	2015.10.22.22.21.41;	author benno;	state Exp;
branches;
next	1.101;
commitid	63feivMXoEkwWDZo;

1.101
date	2015.10.09.01.37.06;	author deraadt;	state Exp;
branches;
next	1.100;
commitid	sbrB3Q5CNxcwZpfU;

1.100
date	2015.07.19.19.26.00;	author deraadt;	state Exp;
branches;
next	1.99;
commitid	UnRUUdE0GnZB6Rvp;

1.99
date	2015.06.29.15.03.33;	author bluhm;	state Exp;
branches;
next	1.98;
commitid	zqqB6c65L8hxs5Kq;

1.98
date	2015.02.11.00.43.33;	author guenther;	state Exp;
branches;
next	1.97;
commitid	UGeraixdcD1qW4G2;

1.97
date	2014.07.13.21.59.50;	author claudio;	state Exp;
branches;
next	1.96;
commitid	ET9UGPKaz131jQGN;

1.96
date	2014.06.12.06.43.15;	author jmc;	state Exp;
branches;
next	1.95;
commitid	Lk7779Zb7YuDJxO3;

1.95
date	2014.06.05.07.29.20;	author guenther;	state Exp;
branches;
next	1.94;
commitid	bZfHymBPckcCBtYW;

1.94
date	2014.05.21.06.01.19;	author jmc;	state Exp;
branches;
next	1.93;

1.93
date	2014.05.17.06.26.44;	author jmc;	state Exp;
branches;
next	1.92;

1.92
date	2014.05.16.21.50.46;	author jmc;	state Exp;
branches;
next	1.91;

1.91
date	2014.05.15.19.42.56;	author jmc;	state Exp;
branches;
next	1.90;

1.90
date	2014.05.15.19.38.06;	author jmc;	state Exp;
branches;
next	1.89;

1.89
date	2014.01.21.03.15.44;	author schwarze;	state Exp;
branches;
next	1.88;

1.88
date	2014.01.20.21.20.10;	author guenther;	state Exp;
branches;
next	1.87;

1.87
date	2013.12.27.00.00.49;	author guenther;	state Exp;
branches;
next	1.86;

1.86
date	2013.10.28.13.05.53;	author okan;	state Exp;
branches;
next	1.85;

1.85
date	2013.10.08.03.50.08;	author guenther;	state Exp;
branches;
next	1.84;

1.84
date	2013.09.22.17.28.34;	author guenther;	state Exp;
branches;
next	1.83;

1.83
date	2012.08.02.03.18.48;	author guenther;	state Exp;
branches;
next	1.82;

1.82
date	2012.04.12.06.07.33;	author guenther;	state Exp;
branches;
next	1.81;

1.81
date	2012.01.07.05.38.12;	author guenther;	state Exp;
branches;
next	1.80;

1.80
date	2011.12.16.17.13.18;	author jmc;	state Exp;
branches;
next	1.79;

1.79
date	2011.12.11.00.16.49;	author nicm;	state Exp;
branches;
next	1.78;

1.78
date	2011.10.03.06.49.25;	author jmc;	state Exp;
branches;
next	1.77;

1.77
date	2011.09.25.00.29.59;	author guenther;	state Exp;
branches;
next	1.76;

1.76
date	2011.07.06.21.42.11;	author art;	state Exp;
branches;
next	1.75;

1.75
date	2011.07.05.04.48.01;	author guenther;	state Exp;
branches;
next	1.74;

1.74
date	2011.04.18.21.44.55;	author guenther;	state Exp;
branches;
next	1.73;

1.73
date	2011.04.15.04.52.40;	author guenther;	state Exp;
branches;
next	1.72;

1.72
date	2011.04.03.18.14.01;	author guenther;	state Exp;
branches;
next	1.71;

1.71
date	2010.09.03.09.53.20;	author jmc;	state Exp;
branches;
next	1.70;

1.70
date	2009.02.08.17.33.02;	author jmc;	state Exp;
branches;
next	1.69;

1.69
date	2009.02.08.17.15.09;	author jmc;	state Exp;
branches;
next	1.68;

1.68
date	2009.01.21.22.18.28;	author miod;	state Exp;
branches;
next	1.67;

1.67
date	2008.06.17.15.54.50;	author jmc;	state Exp;
branches;
next	1.66;

1.66
date	2008.03.17.18.52.00;	author jmc;	state Exp;
branches;
next	1.65;

1.65
date	2007.05.31.19.19.15;	author jmc;	state Exp;
branches;
next	1.64;

1.64
date	2007.05.29.15.04.59;	author jmc;	state Exp;
branches;
next	1.63;

1.63
date	2006.11.29.12.34.19;	author miod;	state Exp;
branches;
next	1.62;

1.62
date	2006.11.02.12.34.19;	author jmc;	state Exp;
branches;
next	1.61;

1.61
date	2006.11.01.21.40.17;	author jmc;	state Exp;
branches;
next	1.60;

1.60
date	2006.11.01.21.34.41;	author jmc;	state Exp;
branches;
next	1.59;

1.59
date	2006.11.01.21.25.52;	author jmc;	state Exp;
branches;
next	1.58;

1.58
date	2006.11.01.19.14.48;	author jmc;	state Exp;
branches;
next	1.57;

1.57
date	2006.11.01.19.11.24;	author jmc;	state Exp;
branches;
next	1.56;

1.56
date	2006.11.01.19.09.25;	author jmc;	state Exp;
branches;
next	1.55;

1.55
date	2006.11.01.19.07.18;	author jmc;	state Exp;
branches;
next	1.54;

1.54
date	2005.09.06.23.28.23;	author jmc;	state Exp;
branches;
next	1.53;

1.53
date	2005.07.01.05.21.20;	author jmc;	state Exp;
branches;
next	1.52;

1.52
date	2004.11.24.20.10.08;	author jmc;	state Exp;
branches;
next	1.51;

1.51
date	2004.11.24.19.17.10;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2004.06.20.01.42.44;	author aaron;	state Exp;
branches;
next	1.49;

1.49
date	2004.06.11.06.35.31;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2004.05.25.18.47.00;	author jmc;	state Exp;
branches;
next	1.47;

1.47
date	2004.03.17.09.59.18;	author jmc;	state Exp;
branches;
next	1.46;

1.46
date	2004.03.16.21.28.01;	author jmc;	state Exp;
branches;
next	1.45;

1.45
date	2004.02.24.11.53.45;	author jmc;	state Exp;
branches;
next	1.44;

1.44
date	2003.10.20.21.16.09;	author jmc;	state Exp;
branches;
next	1.43;

1.43
date	2003.10.17.09.27.17;	author jmc;	state Exp;
branches;
next	1.42;

1.42
date	2003.06.02.23.32.09;	author millert;	state Exp;
branches;
next	1.41;

1.41
date	2003.05.29.20.41.31;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2003.04.28.06.27.36;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2003.03.18.12.46.52;	author david;	state Exp;
branches;
next	1.38;

1.38
date	2003.03.12.20.12.36;	author deraadt;	state Exp;
branches;
next	1.37;

1.37
date	2003.03.06.19.45.24;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2002.12.19.21.29.46;	author mickey;	state Exp;
branches;
next	1.35;

1.35
date	2002.09.04.17.23.40;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2002.06.18.03.21.33;	author provos;	state Exp;
branches;
next	1.33;

1.33
date	2002.02.11.18.43.51;	author mpech;	state Exp;
branches;
next	1.32;

1.32
date	2002.01.24.21.37.41;	author mickey;	state Exp;
branches;
next	1.31;

1.31
date	2001.11.09.00.56.21;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2001.05.04.17.29.39;	author millert;	state Exp;
branches;
next	1.29;

1.29
date	2001.02.05.00.30.45;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	2000.11.09.23.47.17;	author aaron;	state Exp;
branches;
next	1.27;

1.27
date	2000.11.09.17.51.58;	author aaron;	state Exp;
branches;
next	1.26;

1.26
date	2000.10.18.06.55.09;	author aaron;	state Exp;
branches;
next	1.25;

1.25
date	2000.06.18.17.59.54;	author niklas;	state Exp;
branches;
next	1.24;

1.24
date	2000.03.17.18.15.15;	author aaron;	state Exp;
branches;
next	1.23;

1.23
date	99.11.25.19.23.12;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	99.08.17.14.04.01;	author aaron;	state Exp;
branches;
next	1.21;

1.21
date	99.05.23.14.10.48;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	99.04.30.06.24.33;	author pjanzen;	state Exp;
branches;
next	1.19;

1.19
date	99.04.28.21.08.45;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	99.04.28.20.55.14;	author alex;	state Exp;
branches;
next	1.17;

1.17
date	99.02.01.07.53.15;	author d;	state Exp;
branches;
next	1.16;

1.16
date	98.12.15.01.20.25;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	98.11.28.03.20.34;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	98.11.06.00.34.09;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	98.09.14.22.31.10;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	98.09.14.22.13.53;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	98.04.28.18.58.49;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	97.09.03.13.53.07;	author kstailey;	state Exp;
branches;
next	1.9;

1.9
date	97.08.26.22.07.31;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.08.22.20.20.36;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	97.08.01.19.39.46;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.05.30.09.12.53;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.02.05.17.10.53;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	96.07.08.22.09.28;	author ccappuc;	state Exp;
branches;
next	1.3;

1.3
date	96.06.23.14.20.51;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.04.19.02.26.28;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.19;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.111
log
@Document LC_CTYPE.
The lack of this entry was reported by Jan Stary <hans at stare dot cz>.
OK czarkoff@@ jmc@@
@
text
@.\"	$OpenBSD: ps.1,v 1.110 2016/10/19 18:34:05 schwarze Exp $
.\"	$NetBSD: ps.1,v 1.16 1996/03/21 01:36:28 jtc Exp $
.\"
.\" Copyright (c) 1980, 1990, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)ps.1	8.3 (Berkeley) 4/18/94
.\"
.Dd $Mdocdate: October 19 2016 $
.Dt PS 1
.Os
.Sh NAME
.Nm ps
.Nd display process status
.Sh SYNOPSIS
.Nm ps
.Sm off
.Op Fl AaceHhjkLlmrSTuvwx
.Sm on
.Op Fl M Ar core
.Op Fl N Ar system
.Op Fl O Ar fmt
.Op Fl o Ar fmt
.Op Fl p Ar pid
.Op Fl t Ar tty
.Op Fl U Ar username
.Op Fl W Ar swap
.Sh DESCRIPTION
The
.Nm
utility displays information about active processes.
When given no options,
.Nm
prints information about processes of the current user that have a
controlling terminal.
.Pp
The information displayed is selected based on a set of keywords (and for
even more control, see the
.Fl L ,
.Fl O ,
and
.Fl o
options).
The default output format includes, for each process, the process's ID,
controlling terminal, state, CPU time (including both user and system time),
and associated command.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl A
Display information about processes for all users, including those without controlling
terminals.
.It Fl a
Display information about processes for all users with controlling terminals.
.It Fl c
Do not display full command with arguments, but only the
executable name.
This may be somewhat confusing; for example, all
.Xr sh 1
scripts will show as
.Dq sh .
.It Fl e
Display the environment as well.
.It Fl H
Also display information about kernel visible threads.
.It Fl h
Repeat the information header as often as necessary to guarantee one
header per page of information.
.It Fl j
Print information associated with the following keywords:
user, pid, ppid, pgid, sess, jobc, state, tt, time, and command.
.It Fl k
Also display information about kernel threads.
.It Fl L
List the set of available keywords.
This option should not be specified with other options.
.It Fl l
Display information associated with the following keywords:
uid, pid, ppid, cpu, pri, nice, vsz, rss, wchan, state, tt, time,
and command.
.It Fl M Ar core
Extract values associated with the name list from the specified core
instead of the running kernel.
.It Fl m
Sort by memory usage, instead of by start time ID.
.It Fl N Ar system
Extract the name list from the specified system instead of the running kernel.
.It Fl O Ar fmt
Add the information associated with the space or comma separated list
of keywords specified, after the process ID,
in the default information
display.
Keywords may be appended with an equals sign
.Pq Sq =
and a string.
This causes the printed header to use the specified string instead of
the standard header.
.It Fl o Ar fmt
Display information associated with the space or comma separated list
of keywords specified.
Keywords may be appended with an equals sign
.Pq Sq =
and a string.
This causes the printed header to use the specified string instead of
the standard header.
.It Fl p Ar pid
Display information associated with the specified process ID.
.It Fl r
Sort by current CPU usage, instead of by start time ID.
.It Fl S
Change the way the process time is calculated by summing all exited
children to their parent process.
.It Fl T
Display information about processes attached to the device associated
with the standard input.
.It Fl t Ar tty
Display information about processes attached to the specified terminal
device.
.It Fl U Ar username
Display the processes belonging to the specified
.Ar username .
.It Fl u
Display information associated with the following keywords:
user, pid, %cpu, %mem, vsz, rss, tt, state, start, time, and command.
The
.Fl u
option implies the
.Fl r
option.
.It Fl v
Display information associated with the following keywords:
pid, state, time, sl, re, pagein, vsz, rss, lim, tsiz,
%cpu, %mem, and command.
The
.Fl v
option implies the
.Fl m
option.
.It Fl W Ar swap
When not using the running kernel,
extract swap information from the specified file.
.It Fl w
Use 132 columns to display information, instead of the default, which
is the window size.
If the
.Fl w
option is specified more than once,
.Nm
will use as many columns as necessary without regard for window size.
.It Fl x
Display information about processes without controlling terminals.
.El
.Sh KEYWORDS
The following is a complete list of the available keywords
and their meanings.
Several of them have aliases,
which are also noted.
.Bl -tag -width "sigignoreXX" -offset 3n
.It Cm %cpu
Alias:
.Cm pcpu .
The CPU utilization of the process; this is a decaying average over up to
a minute of previous (real) time.
Since the time base over which this is computed varies (since processes may
be very young) it is possible for the sum of all
.Cm %cpu
fields to exceed 100%.
.It Cm %mem
Alias:
.Cm pmem .
The percentage of real memory used by this process.
.It Cm acflag
Alias:
.Cm acflg .
Accounting flag.
.It Cm command
Alias:
.Cm args .
Command and arguments.
.It Cm cpu
Short-term CPU usage factor (for scheduling).
.It Cm cpuid
CPU ID (zero on single processor systems).
.It Cm cwd
Current working directory.
.It Cm dsiz
Data size, in Kilobytes.
.It Cm emul
Name of system call emulation environment.
.It Cm etime
Elapsed time since the process was started.
.It Cm flags
Alias:
.Cm f .
The thread flags (in hexadecimal), as defined in the include file
.In sys/proc.h :
.Bd -literal
P_INKTR           0x1 writing ktrace(2) record
P_PROFPEND        0x2 this thread needs SIGPROF
P_ALRMPEND        0x4 this thread needs SIGVTALRM
P_SIGSUSPEND      0x8 need to restore before-suspend mask
P_CANTSLEEP      0x10 this thread is not permitted to sleep
P_SELECT         0x40 selecting; wakeup/waiting danger
P_SINTR          0x80 sleep is interruptible
P_SYSTEM        0x200 system process: no sigs, stats, or
                      swapping
P_TIMEOUT       0x400 timing out during sleep
P_WEXIT        0x2000 working on exiting
P_OWEUPC       0x8000 profiling sample needs recording
P_SUSPSINGLE  0x80000 need to suspend for single threading
P_CONTINUED  0x800000 thread has continued after a stop
P_THREAD    0x4000000 not the original thread
P_SUSPSIG   0x8000000 stopped because of a signal
P_SOFTDEP  0x10000000 stuck processing softdep worklist
P_CPUPEG   0x40000000 do not move to another cpu
.Ed
.It Cm gid
Effective group.
.It Cm group
Text name of effective group ID.
.It Cm inblk
Alias:
.Cm inblock .
Total blocks read.
.It Cm jobc
Job control count.
.It Cm ktrace
Tracing flags.
.It Cm ktracep
Tracing vnode.
.It Cm lim
The soft limit on memory used, specified via a call to
.Xr setrlimit 2 .
.It Cm logname
Alias:
.Cm login .
Login name of user who started the process.
.It Cm lstart
The exact time the command started, using the
.Dq %c
format described in
.Xr strftime 3 .
.It Cm majflt
Total page faults.
.It Cm maxrss
Maximum resident set size (in 1024 byte units).
.It Cm minflt
Total page reclaims.
.It Cm msgrcv
Total messages received (reads from pipes/sockets).
.It Cm msgsnd
Total messages sent (writes on pipes/sockets).
.It Cm nice
Alias:
.Cm ni .
The process scheduling increment (see
.Xr setpriority 2 ) .
.It Cm nivcsw
Total involuntary context switches.
.It Cm nsigs
Alias:
.Cm nsignals .
Total signals taken.
.It Cm nswap
Total swaps in/out.
.It Cm nvcsw
Total voluntary context switches.
.It Cm nwchan
Wait channel (as an address).
.It Cm oublk
Alias:
.Cm oublock .
Total blocks written.
.It Cm p_ru
Resource usage (valid only for zombie processes).
.It Cm paddr
Swap address.
.It Cm pagein
Pageins (same as
.Cm majflt ) .
.It Cm pgid
Process group number.
.It Cm pid
Process ID.
.It Cm ppid
Parent process ID.
.It Cm pri
Scheduling priority.
.It Cm procflags
The process flags (in hexadecimal), as defined in the include file
.In sys/proc.h :
.Bd -literal
PS_CONTROLT            0x1 process has a controlling
                           terminal
PS_EXEC                0x2 process called exec(3)
PS_INEXEC              0x4 process is doing an exec right
                           now
PS_EXITING             0x8 process is exiting
PS_SUGID              0x10 process had set ID privileges
                           since last exec
PS_SUGIDEXEC          0x20 last exec(3) was set[ug]id
PS_PPWAIT             0x40 parent is waiting for process
                           to exec/exit
PS_ISPWAIT            0x80 process is parent of PPWAIT
                           child
PS_PROFIL            0x100 process has started profiling
PS_TRACED            0x200 process is being traced
PS_WAITED            0x400 debugging process has waited
                           for child
PS_COREDUMP          0x800 busy coredumping
PS_SINGLEEXIT       0x1000 other threads must die
PS_SINGLEUNWIND     0x2000 other threads must unwind
PS_NOZOMBIE         0x4000 pid 1 waits for me instead of
                           dad
PS_STOPPED          0x8000 just stopped, need to send
                           SIGCHLD
PS_SYSTEM          0x10000 No signals, stats or swapping
PS_EMBRYO          0x20000 New process, not yet fledged
PS_ZOMBIE          0x40000 Dead and ready to be waited for
PS_NOBROADCASTKILL 0x80000 Process excluded from kill -1
PS_PLEDGE         0x100000 process has called pledge(2)
.Ed
.It Cm re
Core residency time (in seconds; 127 = infinity).
.It Cm rgid
Real group ID.
.It Cm rgroup
Text name of real group ID.
.It Cm rlink
Reverse link on run queue, or 0.
.It Cm rss
The real memory (resident set) size of the process (in 1024 byte units).
.It Cm rsz
Alias:
.Cm rssize .
Resident set size + (text size / text use count).
.It Cm rtable
Routing table.
.It Cm ruid
Real user ID.
.It Cm ruser
User name (from
.Cm ruid ) .
.It Cm sess
Session pointer.
.It Cm sig
Alias:
.Cm pending .
Pending signals.
.It Cm sigcatch
Alias:
.Cm caught .
Caught signals.
.It Cm sigignore
Alias:
.Cm ignored .
Ignored signals.
.It Cm sigmask
Alias:
.Cm blocked .
Blocked signals.
.It Cm sl
Sleep time (in seconds; 127 = infinity).
.It Cm ssiz
Stack size, in Kilobytes.
.It Cm start
The time the command started.
If the command started less than 24 hours ago, the start time is
displayed using the
.Dq %l:%M%p
format described in
.Xr strftime 3 .
If the command started less than 7 days ago, the start time is
displayed using the
.Dq %a%I%p
format.
Otherwise, the start time is displayed using the
.Dq %e%b%y
format.
.It Cm state
Alias:
.Cm stat .
The state is given by a sequence of letters, for example,
.Dq RWN .
The first letter indicates the run state of the process:
.Pp
.Bl -tag -width indent -compact
.It D
Marks a process in disk (or other short term, uninterruptible) wait.
.It I
Marks a process that is idle (sleeping for longer than about 20 seconds).
.It R
Marks a runnable process.
.It S
Marks a process that is sleeping for less than about 20 seconds.
.It T
Marks a stopped process.
.It Z
Marks a dead process (a
.Dq zombie ) .
.El
.Pp
Additional characters after these, if any, indicate additional state
information:
.Pp
.Bl -tag -width indent -compact
.It +
The process is in the foreground process group of its control terminal.
.It \*(Lt
The process has a raised CPU
scheduling priority (see
.Xr setpriority 2 ) .
.It \*(Gt
The process has specified a soft limit on memory requirements and is
currently exceeding that limit; such a process is (necessarily) not
swapped.
.\" .It A
.\" the process has asked for random page replacement
.\" .Pf ( Dv MADV_RANDOM ,
.\" from
.\" .Xr madvise 2 ,
.\" for example,
.\" .Xr lisp 1
.\" in a garbage collect).
.It E
The process is trying to exit.
.It K
The process is a kernel thread.
.It N
The process has a reduced CPU
scheduling priority.
.It p
The process has called
.Xr pledge 2 .
.\" .It S
.\" The process has asked for FIFO
.\" page replacement
.\" .Pf ( Dv MADV_SEQUENTIAL ,
.\" from
.\" .Xr madvise 2 ,
.\" for example, a large image processing program using virtual memory to
.\" sequentially address voluminous data).
.It s
The process is a session leader.
.It V
The process is suspended during a
.Xr vfork 2 .
.It X
The process is being traced or debugged.
.It / Ns Ar n
On multiprocessor machines, specifies processor number
.Ar n .
.El
.It Cm svgid
Saved GID from a setgid executable.
.It Cm svuid
Saved UID from a setuid executable.
.It Cm tdev
Control terminal device number.
.It Cm tid
Thread ID.
Used together with
.Fl H .
.It Cm time
Alias:
.Cm cputime .
Accumulated CPU time, user + system.
.It Cm tpgid
Control terminal process group ID.
.\".It trss
.\"Text resident set size, in Kilobytes.
.It Cm tsess
Control terminal session pointer.
.It Cm tsiz
Text size, in Kilobytes.
.It Cm tt
An abbreviation for the pathname of the controlling terminal, if any.
The abbreviation consists of the two letters following
.Dq /dev/tty ,
or, for the console,
.Dq co .
This is followed by a
.Sq -
if the process can no longer reach that
controlling terminal (i.e. it has been revoked).
.It Cm tty
Full name of control terminal.
.It Cm ucomm
Alias:
.Cm comm .
Name to be used for accounting.
.It Cm uid
Effective user ID.
.It Cm upr
Alias:
.Cm usrpri .
Scheduling priority on return from system call.
.It Cm user
User name (from
.Cm uid ) .
.It Cm vsz
Alias:
.Cm vsize .
Virtual size, in Kilobytes.
.It Cm wchan
The event (an address in the system) on which a process waits.
When printed numerically, the initial part of the address is
trimmed off and the result is printed in hex; for example, 0x80324000 prints
as 324000.
.It Cm xstat
Exit or stop status (valid only for stopped or zombie process).
.El
.Sh ENVIRONMENT
The following environment variables affect the execution of
.Nm :
.Bl -tag -width LC_CTYPE
.It Ev COLUMNS
If set to a positive integer,
output is formatted to the given width in columns.
Otherwise,
.Nm
defaults to the terminal width minus 1.
If none of
.Dv stdout ,
.Dv stderr ,
and
.Dv stdin
are a terminal,
79 columns are used.
.It Ev LC_CTYPE
The character encoding
.Xr locale 1 .
It decides which byte sequences form characters,
which characters are printable, and what their display width is.
If unset or set to
.Qq C ,
.Qq POSIX ,
or an unsupported value, only printable ASCII characters are printed.
Tabs, newlines, non-printable ASCII characters, and non-ASCII bytes
are encoded with
.Xr vis 3 .
If UTF-8 output is enabled, valid characters that are not printable
are replaced with the Unicode replacement character U+FFFD.
These rules for example apply to command names, arguments, and
environments and to directory, user, and group names.
.It Ev TZ
The time zone to use when displaying dates.
See
.Xr environ 7
for more information.
.El
.Sh FILES
.Bl -tag -width "/var/db/kvm_bsd.dbXXX" -compact
.It Pa /dev
special files and device names
.It Pa /var/db/kvm_bsd.db
system namelist database
.It Pa /var/run/dev.db
.Pa /dev
name database
.El
.Sh EXIT STATUS
.Ex -std ps
.Sh EXAMPLES
Display information on all system processes:
.Pp
.Dl $ ps -auxw
.Sh SEE ALSO
.Xr fstat 1 ,
.Xr kill 1 ,
.Xr netstat 1 ,
.Xr pgrep 1 ,
.Xr pkill 1 ,
.Xr procmap 1 ,
.Xr systat 1 ,
.Xr top 1 ,
.Xr w 1 ,
.Xr kvm 3 ,
.Xr strftime 3 ,
.Xr dev_mkdb 8 ,
.Xr iostat 8 ,
.Xr pstat 8 ,
.Xr vmstat 8
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification,
except that the flag
.Op Fl G
is unsupported and
the flags
.Op Fl ptU
support only single arguments, not lists.
.Pp
The flags
.Op Fl defglnu
are marked by
.St -p1003.1-2008
as being an X/Open System Interfaces option.
Of these,
.Op Fl dfgn
are not supported by this implementation of
.Nm ;
behaviour for the flags
.Op Fl elu
differs between this implementation and the
X/Open System Interfaces option of
.St -p1003.1-2008 .
.Pp
The flags
.Op Fl cHhjkLMmNOrSTvWwx
are extensions to
.St -p1003.1-2008 .
.Pp
Only the following keywords are recognised by
.St -p1003.1-2008 :
.Cm args ,
.Cm comm ,
.Cm etime ,
.Cm group ,
.Cm nice ,
.Cm pcpu ,
.Cm pgid ,
.Cm pid ,
.Cm ppid ,
.Cm rgroup ,
.Cm ruser ,
.Cm time ,
.Cm tty ,
.Cm user ,
and
.Cm vsz .
.Sh HISTORY
A
.Nm
command appeared in
.At v3
in section 8 of the manual.
.Sh CAVEATS
When printing using the
.Cm command
keyword, a process that has exited and
has a parent that has not yet waited for the process (in other words, a zombie)
is listed as
.Dq Aq defunct ,
and a process which is blocked while trying
to exit is listed as
.Dq Aq exiting .
.Nm
makes an educated guess as to the file name and arguments given when the
process was created by examining memory or the swap area.
The method is inherently somewhat unreliable and in any event a process
is entitled to destroy this information, so the names cannot be depended
on too much.
The
.Cm ucomm
(accounting) keyword can, however, be depended on.
.Pp
The information displayed is only a snapshot of a constantly changing system.
@


1.110
log
@Make the description of COLUMNS a bit more readable.
Triggered by a different patch from Michal Mazurek.
Joint work by tb@@, jmc@@, and tedu@@, but no one ever committed it.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.109 2016/09/23 06:28:08 bentley Exp $
d33 1
a33 1
.Dd $Mdocdate: September 23 2016 $
d540 1
a540 1
.Bl -tag -width "COLUMNS"
d554 16
@


1.109
log
@Attempt to use stdout, stderr, or stdin terminal widths if they exist.

This behavior already existed but was unintentionally lost in revision
1.70 of ps.c.

ok millert@@ tb@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.108 2016/09/08 15:54:36 tedu Exp $
d33 1
a33 1
.Dd $Mdocdate: September 8 2016 $
d546 2
a547 2
defaults to the terminal width \(mi 1,
or 79 columns if none of
d549 1
a549 1
.Dv stderr
d552 2
a553 1
are a terminal.
@


1.108
log
@The bug about not displaying exact information because ps can't run
faster than the system is more of a caveat than a bug. The comment also
dates back to ye olden times when the information was collected via
multiple kvm reads. The sysctl interface provides a much more consistent
snapshot, albeit one that may be outdated by the time it's printed.
Reword accordingly.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.107 2016/09/08 15:11:30 tedu Exp $
d546 7
a552 2
defaults to the terminal width \(mi 1, or 79 columns if the output is not a
terminal.
@


1.107
log
@etime isn't just an alias for start. the output format is different.
diff from Carlin Bingham. ok millert.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.106 2016/04/25 20:34:55 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: April 25 2016 $
d662 2
a663 5
.Sh BUGS
Since
.Nm
cannot run faster than the system and is run as any other scheduled
process, the information it displays can never be exact.
@


1.106
log
@remove list item left in previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.105 2016/04/25 19:12:07 tedu Exp $
d214 2
a390 2
Alias:
.Cm etime .
@


1.105
log
@remove references to systrace
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.104 2016/03/17 07:18:33 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: March 17 2016 $
a473 1
.It x
@


1.104
log
@simplify previous; ok bentley
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.103 2016/03/17 05:27:10 bentley Exp $
a232 1
P_SYSTRACE   0x400000 systrace(4) policy is active
a474 2
The process is being monitored by
.Xr systrace 1 .
@


1.103
log
@Switch (non-curses, non-ksh) programs that use COLUMNS to a single idiom.

Previously behaviors were all over the map. This changes them to
use COLUMNS first, and either terminal width or a hardcoded value
(typically 80) as appropriate.

ok deraadt@@; man bits ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.102 2015/10/22 22:21:41 benno Exp $
d33 1
a33 1
.Dd $Mdocdate: October 22 2015 $
a546 1
.Nm Ns 's
@


1.102
log
@document tid keyword.
found with and ok bluhm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.101 2015/10/09 01:37:06 deraadt Exp $
d33 1
a33 1
.Dd $Mdocdate: October 9 2015 $
d546 4
a549 2
If set, specifies the user's preferred output width in column positions.
By default,
d551 2
a552 1
attempts to automatically determine the terminal width.
@


1.101
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.100 2015/07/19 19:26:00 deraadt Exp $
d33 1
a33 1
.Dd $Mdocdate: July 19 2015 $
d488 4
@


1.100
log
@show tame flag
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.99 2015/06/29 15:03:33 bluhm Exp $
d33 1
a33 1
.Dd $Mdocdate: June 29 2015 $
d344 1
a344 1
PS_TAMED          0x100000 process has called tame(2)
d457 3
a469 3
.It t
The process has called
.Xr tame 2 .
@


1.99
log
@After removing the p_swtime from the kernel, ps always printed 0.0
as %cpu time.  Remove the calculation in ps that includes the process
lifetime.  Just print the p_pctcpu value, that was done before when
ps was called with -C.  Keep -C as a no-op for existing scripts.
OK millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.98 2015/02/11 00:43:33 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: February 11 2015 $
d344 1
d467 3
@


1.98
log
@Document P_CANTSLEEP
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.97 2014/07/13 21:59:50 claudio Exp $
d33 1
a33 1
.Dd $Mdocdate: July 13 2014 $
d42 1
a42 1
.Op Fl AaCceHhjkLlmrSTuvwx
a78 7
.It Fl C
Change the way the CPU percentage is calculated by using a
.Dq raw
CPU calculation that ignores
.Dq resident
time (this normally has
no effect).
d609 1
a609 1
.Op Fl CcHhjkLMmNOrSTvWwx
@


1.97
log
@Update procflags list, add PS_SYSTEM, PS_EMBRYO, PS_ZOMBIE and
PS_NOBROADCASTKILL. The resulting table is shifted so far right
that a few additional lines had to be wrapped. Not ideal but the
best we can do at the moment.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.96 2014/06/12 06:43:15 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: June 12 2014 $
d231 1
@


1.96
log
@somehow i missed -vW as extensions;
From: Martin Natano
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.95 2014/06/05 07:29:20 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: June 5 2014 $
d322 28
a349 19
PS_CONTROLT        0x1 process has a controlling terminal
PS_EXEC            0x2 process called exec(3)
PS_INEXEC          0x4 process is doing an exec right now
PS_EXITING         0x8 process is exiting
PS_SUGID          0x10 process had set ID privileges since
                       last exec
PS_SUGIDEXEC      0x20 last exec(3) was set[ug]id
PS_PPWAIT         0x40 parent is waiting for process to
                       exec/exit
PS_ISPWAIT        0x80 process is parent of PPWAIT child
PS_PROFIL        0x100 process has started profiling
PS_TRACED        0x200 process is being traced
PS_WAITED        0x400 debugging process has waited for
                       child
PS_COREDUMP      0x800 busy coredumping
PS_SINGLEEXIT   0x1000 other threads must die
PS_SINGLEUNWIND 0x2000 other threads must unwind
PS_NOZOMBIE     0x4000 pid 1 waits for me instead of dad
PS_STOPPED      0x8000 just stopped, need to send SIGCHLD
@


1.95
log
@Add support for COLUMNS env variable, inspired by FreeBSD but with a dash
of strtonum() from millert@@ sprinkled on top.
Also, we've always supported TZ for formatting dates, so say so.

ok jmc@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.94 2014/05/21 06:01:19 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 21 2014 $
d606 1
a606 1
.Op Fl CcHhjkLMmNOrSTwx
@


1.94
log
@document which keywords are posix conformant;
ok guenther sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.93 2014/05/17 06:26:44 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 17 2014 $
d530 15
d585 1
a585 1
is unsupported,
d588 1
a588 6
support only single arguments, not lists,
and the environment variables
.Ev COLUMNS
and
.Ev TZ
are unsupported.
@


1.93
log
@better description for -A and -a, with help from millert;
ok millert sobrado guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.92 2014/05/16 21:50:46 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 16 2014 $
d599 19
@


1.92
log
@more STANDARDS fleshing; ok sobrado millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.91 2014/05/15 19:42:56 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 15 2014 $
d75 1
a75 1
Display information about all processes, including those without controlling
d78 1
a78 1
Display information about other users' processes as well as your own.
@


1.91
log
@more for STANDARDS: unsupported lists (noted by guenther) and env vars;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.90 2014/05/15 19:38:06 jmc Exp $
d584 2
a585 2
as being an X/Open System Interfaces option;
of these,
d588 5
a592 7
.Nm .
.Pp
Behaviour for the
.Fl e
and
.Fl u
flags differ between this implementation and
d596 1
a596 1
.Op Fl CcHhjkLMmNOrST
@


1.90
log
@flesh out STANDARDS; ok guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.89 2014/01/21 03:15:44 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: January 21 2014 $
d570 9
a578 1
is unsupported.
@


1.89
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.88 2014/01/20 21:20:10 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: January 20 2014 $
d567 4
a570 1
specification.
d573 8
a580 2
.Op Fl CcHhjkLMmNOrST
are extensions to that specification.
d584 8
a591 1
flag differs between this implementation and
@


1.88
log
@P_NOZOMBIE and P_STOPPED are PS_* process flags now
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.87 2013/12/27 00:00:49 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: December 27 2013 $
d225 1
a225 1
.Aq Pa sys/proc.h :
d320 1
a320 1
.Aq Pa sys/proc.h :
@


1.87
log
@Document the P_SUSPSINGLE flag bit
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.86 2013/10/28 13:05:53 okan Exp $
d33 1
a33 1
.Dd $Mdocdate: October 28 2013 $
a238 1
P_NOZOMBIE   0x100000 pid 1 waits for me instead of dad
a243 1
P_STOPPED  0x20000000 just stopped, need to send SIGCHLD
d339 2
@


1.86
log
@add -A (-ax) support; from Lauri Tirkkonen with some option sorting.

ok guenther@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.85 2013/10/08 03:50:08 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: October 8 2013 $
d238 1
@


1.85
log
@Fix delivery of SIGPROF and SIGVTALRM to threaded processes by having
hardclock() set a flag on the running thread and force AST processing,
and then have the thread signal itself from userret().

idea and flag names from FreeBSD
ok jsing@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.84 2013/09/22 17:28:34 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: September 22 2013 $
d42 1
a42 1
.Op Fl aCceHhjkLlmrSTuvwx
d74 3
@


1.84
log
@Stop merging the per-thread and per-process flags when reporting
them via sysctl(KERN_PROC).  In struct kinfo_proc the per-process
flags move to p_psflags, leaving the per-thread flags in p_flags.
Flag descriptions in ps(1) updated to be less obtuse.

discussed with matthew@@ some time ago; ok jca@@, manpage bits ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.83 2012/08/02 03:18:48 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: August 2 2012 $
d225 2
@


1.83
log
@Apply profiling to all threads instead of just the thread that called
profil() by moving P_PROFIL from proc->p_flag to process->ps_flags with
matching adjustment in fork1() and exit1()

ok matthew@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.82 2012/04/12 06:07:33 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: April 12 2012 $
d221 1
a221 2
The union of the flags (in hexadecimal) associated with the process
and the thread as in the include file
d224 1
a224 1
PS_CONTROLT       0x2 process has a controlling terminal
a225 3
PS_PPWAIT        0x10 parent is waiting for child to
		      exec/exit
PS_PROFIL        0x20 process has started profiling
a227 2
PS_SUGID        0x100 process had set ID privileges since
		      last exec
d229 1
a229 1
		      swapping
a230 3
P_TRACED        0x800 process is being traced
P_WAITED       0x1000 debugging process has waited for
		      child
d232 1
a232 7
PS_EXEC        0x4000 process called exec(3)
P_OWEUPC       0x8000 owe process an addupc() call at next
		      ast
.\" the routine addupc is not documented in the man pages
PS_ISPWAIT    0x10000 is parent of PPWAIT child
P_SSTEP       0x20000 process needs single-step fixup
PS_SUGIDEXEC  0x40000 last exec(3) was set[ug]id
d234 4
a237 4
P_INEXEC     0x200000 process is doing an exec right now
P_SYSTRACE   0x400000 process system call tracing is active
P_THREAD    0x4000000 only a thread, not a real process
P_IGNEXITRV 0x8000000 for thread kills
d239 1
a239 1
P_STOPPED  0x20000000 just stopped
d314 22
@


1.82
log
@Add maxrss keyword for the ru_maxrss value...which ariane@@ is making work
(missed commit pointed out by jmc@@)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.81 2012/01/07 05:38:12 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: January 7 2012 $
d229 1
a229 1
P_PROFIL         0x20 process has started profiling
@


1.81
log
@Add rtable id and thread id to struct kinfo_proc (and fix process id)
and add an 'rtableid' keyword to ps.

Add rtable id, thread id, and socket splice info to struct kinfo_file2
and make fstat display socket splice information.

Remove old KVM_PROC2 and kinfo_proc2 interfaces; bump libkvm major

Socket splice info and corrections from bluhm@@  "Lovely" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.80 2011/12/16 17:13:18 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: December 16 2011 $
d285 2
@


1.80
log
@-H is an extension to posix;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.79 2011/12/11 00:16:49 nicm Exp $
d33 1
a33 1
.Dd $Mdocdate: December 11 2011 $
d341 2
@


1.79
log
@Make ps understand -o cwd using the new KERN_PROC_CWD sysctl. Some help
and suggestions from guenther.

ok guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.78 2011/10/03 06:49:25 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: October 3 2011 $
d553 1
a553 1
.Op Fl CchjkLMmNOrST
@


1.78
log
@list the fields in the default display in the order of display;
from Alexander Best
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.77 2011/09/25 00:29:59 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: September 25 2011 $
d212 2
@


1.77
log
@Add -H option to show rthreads, hiding them by default

Diff from uwe@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.76 2011/07/06 21:42:11 art Exp $
d33 1
a33 1
.Dd $Mdocdate: July 6 2011 $
d69 2
a70 2
controlling terminal, CPU time (including both user and system time),
state, and associated command.
@


1.76
log
@Remove mention of P_BIGLOCK.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.75 2011/07/05 04:48:01 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: July 5 2011 $
d42 1
a42 1
.Op Fl aCcehjkLlmrSTuvwx
d92 2
@


1.75
log
@Recommit the reverted sigacts change now that the NFS use-after-free
problem has been tracked down.  This fixes the sharing of the signal
handling state: shared bits go in sigacts, per-rthread bits goes in
struct proc.

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.74 2011/04/18 21:44:55 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: April 18 2011 $
a246 2
P_BIGLOCK   0x2000000 process needs kernel "big lock" to
		      run
@


1.74
log
@Revert the sigacts diff: NFS can apparently retain pointers to processes
until they're zombies and then send them signals (for intr mounts).  Until
that is untangled, the sigacts change is unsafe.  sthen@@ was the victim
for this one
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.72 2011/04/03 18:14:01 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: April 3 2011 $
d222 1
a222 1
P_NOCLDSTOP       0x8 no SIGCHLD when children stop
d237 1
a237 1
P_EXEC         0x4000 process called exec(3)
a243 1
P_NOCLDWAIT   0x80000 let pid 1 wait for my children
@


1.73
log
@Correct the sharing of the signal handling state: stuff that should
be shared (p_sigignore, p_sigcatch, P_NOCLDSTOP, P_NOCLDWAIT) moves
to struct sigacts, wihle stuff that should be per rthread (ps_oldmask,
SAS_OLDMASK, ps_sigstk) moves to struct proc.  Treat the coredumping
state bits (ps_sig, ps_code, ps_type, ps_sigval) as per-rthread
until our locking around coredumping is better.

Oh, and remove the old SunOS-compat ps_usertramp member.

"I like the sound of this" tedu@@
@
text
@d222 1
a222 1
P_SIGSUSPEND      0x8 need to restore before-suspend mask
d237 1
a237 1
PS_EXEC        0x4000 process called exec(3)
d244 1
@


1.72
log
@Update the description of the 'flags' keyword, including the known values,
aligning the table for easier reading.

ok ariane@@, millert@@, deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.71 2010/09/03 09:53:20 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: September 3 2010 $
d222 1
a222 1
P_NOCLDSTOP       0x8 no SIGCHLD when children stop
d237 1
a237 1
P_EXEC         0x4000 process called exec(3)
a243 1
P_NOCLDWAIT   0x80000 let pid 1 wait for my children
@


1.71
log
@add an EXIT STATUS section for /bin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.70 2009/02/08 17:33:02 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: February 8 2009 $
d217 2
a218 2
The flags (in hexadecimal) associated with the process as in
the include file
d221 3
a223 3
P_CONTROLT 0x0000002  process has a controlling terminal
P_NOCLDSTOP 0x0000008 no SIGCHLD when children stop
P_PPWAIT 0x0000010    parent is waiting for child to
d225 4
a228 4
P_PROFIL 0x0000020    process has started profiling
P_SELECT 0x0000040    selecting; wakeup/waiting danger
P_SINTR 0x0000080     sleep is interruptible
P_SUGID 0x0000100     process had set ID privileges since
d230 1
a230 1
P_SYSTEM 0x0000200    system process: no sigs, stats, or
d232 7
a238 6
P_TIMEOUT 0x0000400   timing out during sleep
P_TRACED 0x0000800    process is being traced
P_WAITED 0x0001000   debugging process has waited for child
P_WEXIT 0x0002000     working on exiting
P_EXEC 0x0004000      process called exec(3)
P_OWEUPC 0x0008000    owe process an addupc() call at next
d241 14
a254 6
P_SSTEP 0x0020000     process needs single-step fixup
P_SUGIDEXEC 0x0040000 last exec(3) was set[ug]id
P_NOCLDWAIT 0x0080000 let pid 1 wait for my children
P_NOZOMBIE 0x0100000  pid 1 waits for me instead of dad
P_INEXEC 0x0200000    process is doing an exec right now
P_SYSTRACE 0x0400000  process system call tracing is active
@


1.70
log
@updates to IEEE Std 1003.1-2008;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.69 2009/02/08 17:15:09 jmc Exp $
a178 2
.Pp
.Ex -std ps
d513 2
@


1.69
log
@bump the posix reference in STANDARDS to IEEE Std 1003.1-2008, with a few
updates to follow;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.68 2009/01/21 22:18:28 miod Exp $
d33 1
a33 1
.Dd $Mdocdate: January 21 2009 $
d545 5
@


1.68
log
@Do not mention /dev/drum anymore, since we won't use it. With tweaks from
jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.67 2008/06/17 15:54:50 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: June 17 2008 $
d539 1
a539 1
.St -p1003.1-2004
@


1.67
log
@better description of what ps without arguments does;
from Pierre Riteau
ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.66 2008/03/17 18:52:00 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: March 17 2008 $
d166 2
a167 3
Extract swap information from the specified file instead of the
default
.Dq /dev/drum .
a222 1
P_ADVLOCK 0x0000001  process may hold a POSIX advisory lock
a241 1
P_FSTRACE 0x0010000   tracing via file system
a508 2
.It Pa /dev/drum
default swap device
@


1.66
log
@better .Nd; from Pierre Riteau
ok sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.65 2007/05/31 19:19:15 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d58 2
a59 1
prints information about processes associated with the controlling terminal.
@


1.65
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.64 2007/05/29 15:04:59 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d38 1
a38 1
.Nd process status
@


1.64
log
@- consistent STANDARDS blurb
- note which options are extensions to POSIX

discussed w/ deraadt otto millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.63 2006/11/29 12:34:19 miod Exp $
d33 1
a33 1
.Dd April 18, 1994
@


1.63
log
@Do not test for processes being swapped out since this can't happen anymore.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.62 2006/11/02 12:34:19 jmc Exp $
d539 10
@


1.62
log
@overhaul the keywords section;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.61 2006/11/01 21:40:17 jmc Exp $
a224 1
P_INMEM 0x0000004     process is loaded into memory
a254 2
.It Cm holdcnt
Number of holds on the process (if non-zero, process can't be swapped).
a426 2
.It L
The process has pages locked in core (for example, for raw I/O).
a442 2
.It W
The process is swapped out.
@


1.61
log
@-.Xr sh 1 ,
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.60 2006/11/01 21:34:41 jmc Exp $
d110 1
a110 2
Sort by memory usage, instead of by start time
.Tn ID .
d115 1
a115 2
of keywords specified, after the process
.Tn ID ,
d132 1
a132 2
Display information associated with the specified process
.Tn ID .
d134 1
a134 2
Sort by current CPU usage, instead of by start time
.Tn ID .
d181 9
a189 5
.Pp
All available keywords are listed below.
Some of these keywords are further specified as follows:
.Bl -tag -width indent
.It %cpu
d194 1
a194 1
.Tn \&%cpu
d196 3
a198 1
.It %mem
d200 19
a218 1
.It flags
d222 21
a242 20
.Bl -column P_NOCLDSTOP P_NOCLDSTOP
.It Dv "P_ADVLOCK" Ta No "0x0000001	process may hold a POSIX advisory lock"
.It Dv "P_CONTROLT" Ta No "0x0000002	process has a controlling terminal"
.It Dv "P_INMEM" Ta No "0x0000004	process is loaded into memory"
.It Dv "P_NOCLDSTOP" Ta No "0x0000008	no
.Dv SIGCHLD
when children stop
.It Dv "P_PPWAIT" Ta No "0x0000010	parent is waiting for child to exec/exit"
.It Dv "P_PROFIL" Ta No "0x0000020	process has started profiling"
.It Dv "P_SELECT" Ta No "0x0000040	selecting; wakeup/waiting danger"
.It Dv "P_SINTR" Ta No "0x0000080	sleep is interruptible"
.It Dv "P_SUGID" Ta No "0x0000100	process had set id privileges since last exec"
.It Dv "P_SYSTEM" Ta No "0x0000200	system process: no sigs, stats or swapping"
.It Dv "P_TIMEOUT" Ta No "0x0000400	timing out during sleep"
.It Dv "P_TRACED" Ta No "0x0000800	process is being traced"
.It Dv "P_WAITED" Ta No "0x0001000	debugging process has waited for child"
.It Dv "P_WEXIT" Ta No "0x0002000	working on exiting"
.It Dv "P_EXEC" Ta No "0x0004000	process called"
.Xr exec 3
.It Dv "P_OWEUPC" Ta No "0x0008000	owe process an addupc() call at next ast"
d244 25
a268 11
.It Dv "P_FSTRACE" Ta No "0x0010000	tracing via file system"
.It Dv "P_SSTEP" Ta No "0x0020000	process needs single-step fixup"
.It Dv "P_SUGIDEXEC" Ta No "0x0040000	last
.Xr exec 3
was set[ug]id
.It Dv "P_NOCLDWAIT" Ta No "0x0080000	let pid 1 wait for my children"
.It Dv "P_NOZOMBIE" Ta No "0x0100000	pid 1 waits for me instead of dad"
.It Dv "P_INEXEC" Ta No "0x0200000	process is doing an exec right now"
.It Dv "P_SYSTRACE" Ta No "0x0400000	process system call tracing is active"
.El
.It lim
d271 5
a275 1
.It lstart
d280 11
a290 1
.It nice
d293 40
a332 1
.It rss
d334 34
a367 1
.It start
d381 3
a383 1
.It state
d385 1
a385 1
.Dq Tn RWN .
d411 3
a413 3
The process has raised
.Tn CPU
scheduling priority.
d431 1
a431 2
The process has pages locked in core (for example, for raw
.Tn I/O ) .
d433 2
a434 4
The process has reduced
.Tn CPU
scheduling priority (see
.Xr setpriority 2 ) .
d436 1
a436 2
.\" The process has asked for
.\" .Tn FIFO
d459 19
a477 1
.It tt
d486 21
a506 2
controlling terminal (i.e., it has been revoked).
.It wchan
d511 2
a512 173
.El
.Pp
When printing using the command keyword, a process that has exited and
has a parent that has not yet waited for the process (in other words, a zombie)
is listed as
.Dq Aq defunct ,
and a process which is blocked while trying
to exit is listed as
.Dq Aq exiting .
.Nm
makes an educated guess as to the file name and arguments given when the
process was created by examining memory or the swap area.
The method is inherently somewhat unreliable and in any event a process
is entitled to destroy this information, so the names cannot be depended
on too much.
The ucomm (accounting) keyword can, however, be depended on.
.Sh KEYWORDS
The following is a complete list of the available keywords and their
meanings.
Several of them have aliases (keywords which are synonyms).
.Pp
.Bl -tag -width sigignore -compact
.It %cpu
percentage CPU usage (alias pcpu)
.It %mem
percentage memory usage (alias pmem)
.It acflag
accounting flag (alias acflg)
.It command
command and arguments (alias args)
.It cpu
short-term CPU usage factor (for scheduling)
.It cpuid
CPU ID (zero on single processor systems)
.It dsiz
data size (in Kbytes)
.It emul
name of system call emulation environment
.It flags
the process flags, in hexadecimal (alias f)
.It gid
effective group
.It group
text name of effective group
.Tn ID
.It holdcnt
number of holds on the process (if non-zero, process can't be swapped)
.It inblk
total blocks read (alias inblock)
.It jobc
job control count
.It ktrace
tracing flags
.It ktracep
tracing vnode
.It lim
memory usage limit
.It logname
login name of user who started the process
(alias login)
.It lstart
time started
.It majflt
total page faults
.It minflt
total page reclaims
.It msgrcv
total messages received (reads from pipes/sockets)
.It msgsnd
total messages sent (writes on pipes/sockets)
.It nice
nice value (alias ni)
.It nivcsw
total involuntary context switches
.It nsigs
total signals taken (alias nsignals)
.It nswap
total swaps in/out
.It nvcsw
total voluntary context switches
.It nwchan
wait channel (as an address)
.It oublk
total blocks written (alias oublock)
.It p_ru
resource usage (valid only for zombie)
.It paddr
swap address
.It pagein
pageins (same as majflt)
.It pgid
process group number
.It pid
process
.Tn ID
.It ppid
parent process
.Tn ID
.It pri
scheduling priority
.It re
core residency time (in seconds; 127 = infinity)
.It rgid
real group
.Tn ID
.It rgroup
text name of real group
.Tn ID
.It rlink
reverse link on run queue, or 0
.It rss
resident set size
.It rsz
resident set size + (text size / text use count) (alias rssize)
.It ruid
real user
.Tn ID
.It ruser
user name (from ruid)
.It sess
session pointer
.It sig
pending signals (alias pending)
.It sigcatch
caught signals (alias caught)
.It sigignore
ignored signals (alias ignored)
.It sigmask
blocked signals (alias blocked)
.It sl
sleep time (in seconds; 127 = infinity)
.It ssiz
stack size (in Kbytes)
.It start
time started (alias etime)
.It state
symbolic process state (alias stat)
.It svgid
saved GID from a setgid executable
.It svuid
saved UID from a setuid executable
.It tdev
control terminal device number
.It time
accumulated CPU time, user + system (alias cputime)
.It tpgid
control terminal process group
.Tn ID
.\".It trss
.\"text resident set size (in Kbytes)
.It tsess
control terminal session pointer
.It tsiz
text size (in Kbytes)
.It tt
control terminal name (two letter abbreviation)
.It tty
full name of control terminal
.It ucomm
name to be used for accounting (alias comm)
.It uid
effective user
.Tn ID
.It upr
scheduling priority on return from system call (alias usrpri)
.It user
user name (from uid)
.It vsz
virtual size in Kbytes (alias vsize)
.It wchan
wait channel (as a symbolic name)
.It xstat
exit or stop status (valid only for stopped or zombie process)
d552 19
@


1.60
log
@some minor adjustments to the options list;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.59 2006/11/01 21:25:52 jmc Exp $
a551 1
.Xr sh 1 ,
@


1.59
log
@+.Ex -std ps
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.58 2006/11/01 19:14:48 jmc Exp $
d101 1
a101 1
This option may not be specified with other options.
d104 1
a104 1
uid, pid, ppid, cpu, pri, nice, vsz, rss, wchan, state, tt, time
d162 1
a162 1
%cpu, %mem and command.
d174 1
a174 1
is your window size.
d179 1
a179 1
will use as many columns as necessary without regard for your window size.
@


1.58
log
@- no need for double markup
- prefer .Sq for single letters
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.57 2006/11/01 19:11:24 jmc Exp $
d183 2
@


1.57
log
@give FILES a bit of space;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.56 2006/11/01 19:09:25 jmc Exp $
d171 1
a171 1
.Dq Pa /dev/drum .
d341 1
a341 1
.Dq Pa /dev/tty ,
d345 1
a345 1
.Dq \-
@


1.56
log
@note that -L may not be specified with other options;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.55 2006/11/01 19:07:18 jmc Exp $
d528 1
a528 1
.Bl -tag -width /var/db/kvm_bsd.db -compact
a532 2
.It Pa /var/run/dev.db
/dev name database
d535 3
@


1.55
log
@simplify synopsis and sync usage();
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.54 2005/09/06 23:28:23 jmc Exp $
d101 1
@


1.54
log
@make some of the stat utility pages reference each other;
idea from a mail to misc@@ from simon dassow;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.53 2005/07/01 05:21:20 jmc Exp $
d42 1
a42 1
.Oo \&- Oc Op Cm aCcehjklmrSTuvwx
a51 2
.Nm ps
.Op Fl L
@


1.53
log
@use a standard format for EXAMPLES;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.52 2004/11/24 20:10:08 jmc Exp $
d546 1
d551 1
d557 3
a559 1
.Xr pstat 8
@


1.52
log
@remove obsolete `A' from `state' example;
ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.51 2004/11/24 19:17:10 deraadt Exp $
d540 1
a540 1
.Li $ ps -auxw
d542 1
a542 1
Display information on all system processes.
@


1.51
log
@on MP machines, in STAT field, add /# where # is the cpu number so that
you can see processes move around; ok pval millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.50 2004/06/20 01:42:44 aaron Exp $
d261 1
a261 1
.Dq Tn RWNA .
@


1.50
log
@Fix description of the cpuid keyword.  The current wording is misleading since
the CPU ID *can* be 0 on SMP systems (meaning the first processor).  miod@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.49 2004/06/11 06:35:31 deraadt Exp $
d335 3
@


1.49
log
@doc cpuid
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.48 2004/05/25 18:47:00 jmc Exp $
d384 1
a384 1
CPU id (non-zero in multiprocessor systems)
@


1.48
log
@.Xr pgrep(1) and pkill(1);
stolen directly from Garance A Drosehn's -r1.78 FreeBSD commit;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.47 2004/03/17 09:59:18 jmc Exp $
d383 2
@


1.47
log
@add references to procmap(1) in SEE ALSO;
suggested by tedu@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.46 2004/03/16 21:28:01 jmc Exp $
d541 2
@


1.46
log
@add fstat(1) reference to SEE ALSO;
suggested by Drew Einhorn;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.45 2004/02/24 11:53:45 jmc Exp $
d541 1
@


1.45
log
@- `C' before `c'
- replace `<' and `>'
- sync usage()
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.44 2003/10/20 21:16:09 jmc Exp $
d539 1
@


1.44
log
@memoryuse -> memory usage; from Jared Yanovich
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.43 2003/10/17 09:27:17 jmc Exp $
d42 1
a42 1
.Oo \&- Oc Op Cm acCehjklmrSTuvwx
d77 7
a90 7
.It Fl C
Change the way the CPU percentage is calculated by using a
.Dq raw
CPU calculation that ignores
.Dq resident
time (this normally has
no effect).
d286 1
a286 1
.It <
d290 1
a290 1
.It >
d356 1
a356 1
.Dq <defunct> ,
d359 1
a359 1
.Dq <exiting> .
@


1.43
log
@Xr dev_mkdb(8); from Tyler R. Retzlaff (NetBSD PR 23168);
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.42 2003/06/02 23:32:09 millert Exp $
d405 1
a405 1
memoryuse limit
@


1.42
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.41 2003/05/29 20:41:31 jmc Exp $
d545 1
@


1.41
log
@- section reorder
- killed unnecessary .Ns
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.40 2003/04/28 06:27:36 jmc Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.40
log
@typos;

suggestions, corrections and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.39 2003/03/18 12:46:52 david Exp $
d281 1
a281 1
.Dq zombie Ns ) .
a526 4
.Sh EXAMPLES
.Li $ ps -auxw
.Pp
Display information on all system processes.
d538 4
@


1.39
log
@use .Cm for flags without dash
ok miod@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.38 2003/03/12 20:12:36 deraadt Exp $
d232 1
a232 1
.It Dv "P_NOZOMBIE" Ta No "0x0100000	pid 1 waits for me indead of dad"
d555 1
a555 1
in the section 8 of the manual.
@


1.38
log
@more .Li
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.37 2003/03/06 19:45:24 jmc Exp $
d46 1
a46 1
.Oo \&- Oc Op acCehjklmrSTuvwx
@


1.37
log
@broken .Xr's;
typos, rather than dead references

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.36 2002/12/19 21:29:46 mickey Exp $
d528 1
a528 1
.Cm $ ps -auxw
@


1.36
log
@add dsiz and ssiz to accompany tsiz; millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.35 2002/09/04 17:23:40 deraadt Exp $
d229 1
a229 1
.Xr exec 2
@


1.35
log
@toast uprocp format keyword; peterw@@ifost.org.au
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.34 2002/06/18 03:21:33 provos Exp $
d387 2
d484 2
@


1.34
log
@add x flag for systraced processes; mentioned by christos@@netbsd
document missing flags from proc.h
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.33 2002/02/11 18:43:51 mpech Exp $
a513 2
.It uprocp
process pointer
@


1.33
log
@Initial patch.
When you give command examples in a manual page prefix them with
	$ command
or
	# command

deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.32 2002/01/24 21:37:41 mickey Exp $
d228 7
d336 3
@


1.32
log
@as early as v3 it seems to be
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.31 2001/11/09 00:56:21 miod Exp $
d516 1
a516 1
.Cm ps -auxw
@


1.31
log
@Since all our arches have /dev/ksyms, replace rigid mentions of the kernel
being /bsd with more correct terms, and remove /bsd and /dev/kmem from the
FILES section if they were there.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.30 2001/05/04 17:29:39 millert Exp $
d538 6
@


1.30
log
@Update man page to match new start time sorting; kstailey@@disclosure.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.29 2001/02/05 00:30:45 deraadt Exp $
d113 1
a113 2
instead of the default
.Dq Pa /dev/kmem .
d118 1
a118 2
Extract the name list from the specified system instead of the default
.Dq Pa /bsd .
a524 2
.It Pa /dev/kmem
default kernel memory
a528 2
.It Pa /bsd
default system namelist
@


1.29
log
@extra - in usage too
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.28 2000/11/09 23:47:17 aaron Exp $
d116 1
a116 1
Sort by memory usage, instead of by process
d144 1
a144 1
Sort by current CPU usage, instead of by process
@


1.28
log
@Insert some missing commas.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.27 2000/11/09 17:51:58 aaron Exp $
d45 3
a47 1
.Op Fl acCehjklmrSTuvwx
@


1.27
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.26 2000/10/18 06:55:09 aaron Exp $
d100 1
a100 1
user, pid, ppid, pgid, sess, jobc, state, tt, time and command.
d158 1
a158 1
user, pid, %cpu, %mem, vsz, rss, tt, state, start, time and command.
@


1.26
log
@Add some rudimentary EXAMPLES sections and standardize the way we display
existing EXAMPLES sections.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.25 2000/06/18 17:59:54 niklas Exp $
d76 1
a76 1
.Bl -tag -width indent
@


1.25
log
@Mark kernel threads as system processes.  Make ps hide them by default,
show them with -k.  Do not try to show RSS based values for them as they
mess up column alignment.  vmstat -f now shows kernel threads separately
from rforks too.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.24 2000/03/17 18:15:15 aaron Exp $
d515 4
@


1.24
log
@Remove hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.23 1999/11/25 19:23:12 deraadt Exp $
d45 1
a45 1
.Op Fl acCehjlmrSTuvwx
d101 2
d301 2
@


1.23
log
@there is no poip
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.22 1999/08/17 14:04:01 aaron Exp $
d339 1
a339 1
trimmed off and the result is printed in hex:  for example, 0x80324000 prints
@


1.22
log
@consistency
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.21 1999/05/23 14:10:48 aaron Exp $
a431 2
.It poip
pageouts in progress
@


1.21
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.20 1999/04/30 06:24:33 pjanzen Exp $
d57 1
d59 4
a62 4
displays a header line followed by lines containing information about your
processes that have controlling terminals.
This information is sorted by process
.Tn ID .
d71 1
a71 2
The default output format includes, for each process, the process's
.Tn ID ,
@


1.20
log
@Grammar'n'formatting
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.19 1999/04/28 21:08:45 aaron Exp $
d39 1
a39 1
.Os BSD 4
@


1.19
log
@please use Ar macros when describing option flags, too
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.18 1999/04/28 20:55:14 alex Exp $
d339 1
a339 1
trimmed off and the result is printed in hex, for example, 0x80324000 prints
d531 1
@


1.18
log
@Implement -U <username> option from FreeBSD.  Original code by Peter Wemm.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.17 1999/02/01 07:53:15 d Exp $
d151 1
a151 1
.It Fl U
d153 1
a153 1
.Tn username .
@


1.17
log
@accurately reflect what ps can do
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.16 1998/12/15 01:20:25 aaron Exp $
d52 1
d151 3
@


1.16
log
@always give .Nm macros an argument in SYNOPSIS sections; krw@@tcn.net
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.15 1998/11/28 03:20:34 aaron Exp $
d228 1
a228 1
.Dq %C
d245 1
a245 1
.Dq %a%p
d285 8
a292 8
.It A
the process has asked for random page replacement
.Pf ( Dv MADV_RANDOM ,
from
.Xr madvise 2 ,
for example,
.Xr lisp 1
in a garbage collect).
d303 9
a311 9
.It S
The process has asked for
.Tn FIFO
page replacement
.Pf ( Dv MADV_SEQUENTIAL ,
from
.Xr madvise 2 ,
for example, a large image processing program using virtual memory to
sequentially address voluminous data).
d392 1
@


1.15
log
@start killing redundant .Nm macro arguments (mandoc ``remembers'' the first one
it's given)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.14 1998/11/06 00:34:09 aaron Exp $
d44 1
a44 1
.Nm
d53 1
a53 1
.Nm
@


1.14
log
@use .Dq/.Sq macros instead of `` ''s and ` 's (think typesetting and future
processing); kill redundant .Pp macros; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.13 1998/09/14 22:31:10 aaron Exp $
d41 1
a41 1
.Nm \&ps
d44 1
a44 1
.Nm \&ps
d53 1
a53 1
.Nm ps
d56 1
a56 1
.Nm ps
d177 1
a177 1
.Nm \&ps
d346 1
a346 1
.Nm ps
d532 1
a532 1
.Nm \&ps
@


1.13
log
@typos; pjanzen@@foatdi.harvard.edu
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.12 1998/09/14 22:13:53 aaron Exp $
d71 1
a71 1
controlling terminal, cpu time (including both user and system time),
d86 5
a90 2
Change the way the cpu percentage is calculated by using a ``raw''
cpu calculation that ignores ``resident'' time (this normally has
d122 3
a124 1
Keywords may be appended with an equals (``='') sign and a string.
d130 3
a132 1
Keywords may be appended with an equals (``='') sign and a string.
d139 1
a139 1
Sort by current cpu usage, instead of by process
d187 1
a187 1
The cpu utilization of the process; this is a decaying average over up to
d191 1
a191 1
.Tn \&%CPU
d227 3
a229 1
The exact time the command started, using the ``%C'' format described in
d239 3
a241 1
displayed using the ``%l:%M%p'' format described in
d244 6
a249 2
displayed using the ``%a%p'' format.
Otherwise, the start time is displayed using the ``%e%b%y'' format.
d267 2
a268 1
Marks a dead process (a ``zombie'').
d326 5
a330 2
or, for the console, ``co''.
This is followed by a ``-'' if the process can no longer reach that
d341 5
a345 2
is listed as ``<defunct>'', and a process which is blocked while trying
to exit is listed as ``<exiting>''.
d360 1
a360 1
percentage cpu usage (alias pcpu)
d368 1
a368 1
short-term cpu usage factor (for scheduling)
d476 1
a476 1
accumulated cpu time, user + system (alias cputime)
@


1.12
log
@First complete sweep of man pages, bin/. Command/function names previously
(incorrectly) capatilized are fixed. Comma splices, hyphenations, SYNOPSIS
cleanups, other miscellaneous typos.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.11 1998/04/28 18:58:49 deraadt Exp $
d176 1
a176 1
A complete list of available keywords is listed below.
@


1.11
log
@Xr madvise not vadvise
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.10 1997/09/03 13:53:07 kstailey Exp $
d56 1
a56 1
.Nm \&Ps
d63 1
a63 1
even more control see the
d69 1
a69 1
The default output format includes, for each process, the process'
d165 1
a165 1
Use 132 columns to display information, instead of the default which
d176 1
a176 1
A complete list of the available keywords are listed below.
d226 1
a226 1
the real memory (resident set) size of the process (in 1024 byte units).
d324 1
a324 1
.Nm \&Ps
d348 1
a348 1
name of system call emulation environment.
d448 1
a448 1
saved gid from a setgid executable
d450 1
a450 1
saved uid from a setuid executable
@


1.10
log
@doc emul option
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.9 1997/08/26 22:07:31 deraadt Exp $
d271 1
a271 1
.Pf ( Dv VA_ANOM ,
d273 1
a273 1
.Xr vadvise 2 ,
d291 1
a291 1
.Pf ( Dv VA_SEQL ,
d293 1
a293 1
.Xr vadvise 2 ,
@


1.9
log
@drum not swap; entropy@@tardis.bernstein.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.8 1997/08/22 20:20:36 kstailey Exp $
d347 2
@


1.8
log
@document XPG4 compatible format options
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.7 1997/08/01 19:39:46 deraadt Exp $
d163 1
a163 1
.Dq Pa /dev/swap .
@


1.7
log
@show args later on; works around page wrap in middle of line
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.6 1997/05/30 09:12:53 deraadt Exp $
d344 1
a344 1
command and arguments
d351 3
d415 3
d442 1
a442 1
time started
d467 1
a467 1
name to be used for accounting
@


1.6
log
@xref corrections
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.5 1997/02/05 17:10:53 kstailey Exp $
d62 4
a65 3
The information displayed is selected based on a set of keywords (see the
.Fl L
.Fl O
d103 1
a103 1
.It Fl M
d110 1
a110 1
.It Fl N
d113 1
a113 1
.It Fl O
d122 1
a122 1
.It Fl o
d128 1
a128 1
.It Fl p
d140 1
a140 1
.It Fl t
d160 1
a160 1
.It Fl W
@


1.5
log
@Added "gid" keyword to print effective group ID of process.
(also alpha-sorted some of the man page that was nearly sorted.)

BEFORE:

kstailey@@hermes$ ps -o ruid,svuid,uid,command
 RUID SVUID   UID COMMAND
  333   333   333 -bash (bash)

worked, but group equivalent failed:

kstailey@@hermes$ ps -o rgid,svgid,gid,command
ps: gid: keyword not found
 RGID SVGID COMMAND
   20    20 -bash (bash)

AFTER:

kstailey@@hermes$ ps -o rgid,svgid,gid,command
 RGID SVGID   GID COMMAND
   20    20    20 -bash (bash)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.4 1996/07/08 22:09:28 ccappuc Exp $
d209 1
a209 1
.Xr exec 2
d299 1
a299 1
.Xr vfork .
@


1.4
log
@kernel is /bsd, os is OpenBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.3 1996/06/23 14:20:51 deraadt Exp $
d348 4
a355 2
.It holdcnt
number of holds on the process (if non-zero, process can't be swapped)
a458 2
.It uprocp
process pointer
d466 2
@


1.3
log
@update rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: ps.1,v 1.16 1996/03/21 01:36:28 jtc Exp $
d111 1
a111 1
.Dq Pa /netbsd .
d476 1
a476 1
.Bl -tag -width /var/db/kvm_netbsd.db -compact
d485 1
a485 1
.It Pa /var/db/kvm_netbsd.db
d487 1
a487 1
.It Pa /netbsd
@


1.2
log
@from netbsd; fix 4.4 sccs damage
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: ps.1,v 1.15 1995/05/08 23:11:43 cgd Exp $
d228 1
a228 1
displayed using the ``%l:ps.1p'' format described in
d231 1
a231 1
displayed using the ``%a6.15p'' format.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
