head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.28
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.24
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.26
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.18
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.22
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.20
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.3.0.26
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.24
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.22
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2009.10.27.23.59.21;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.11.23.42.12;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.23.32.08;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.01.03.22.36.07;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.20.18;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.14;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@/*	$OpenBSD: cmp.c,v 1.5 2003/06/11 23:42:12 deraadt Exp $	*/
/*	$NetBSD: cmp.c,v 1.10 1996/07/08 10:32:01 mycroft Exp $	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Michael Fischbein.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/stat.h>

#include <fts.h>
#include <string.h>

#include "ls.h"
#include "extern.h"

int
namecmp(const FTSENT *a, const FTSENT *b)
{
	return (strcmp(a->fts_name, b->fts_name));
}

int
revnamecmp(const FTSENT *a, const FTSENT *b)
{
	return (strcmp(b->fts_name, a->fts_name));
}

int
modcmp(const FTSENT *a, const FTSENT *b)
{
	if (b->fts_statp->st_mtime > a->fts_statp->st_mtime)
		return (1);
	else if (b->fts_statp->st_mtime < a->fts_statp->st_mtime)
		return (-1);
	else if (b->fts_statp->st_mtimensec > a->fts_statp->st_mtimensec)
		return (1);
	else if (b->fts_statp->st_mtimensec < a->fts_statp->st_mtimensec)
		return (-1);
	else
		return (namecmp(a, b));
}

int
revmodcmp(const FTSENT *a, const FTSENT *b)
{
	if (b->fts_statp->st_mtime > a->fts_statp->st_mtime)
		return (-1);
	else if (b->fts_statp->st_mtime < a->fts_statp->st_mtime)
		return (1);
	else if (b->fts_statp->st_mtimensec > a->fts_statp->st_mtimensec)
		return (-1);
	else if (b->fts_statp->st_mtimensec < a->fts_statp->st_mtimensec)
		return (1);
	else
		return (revnamecmp(a, b));
}

int
acccmp(const FTSENT *a, const FTSENT *b)
{
	if (b->fts_statp->st_atime > a->fts_statp->st_atime)
		return (1);
	else if (b->fts_statp->st_atime < a->fts_statp->st_atime)
		return (-1);
	else if (b->fts_statp->st_atimensec > a->fts_statp->st_atimensec)
		return (1);
	else if (b->fts_statp->st_atimensec < a->fts_statp->st_atimensec)
		return (-1);
	else
		return (namecmp(a, b));
}

int
revacccmp(const FTSENT *a, const FTSENT *b)
{
	if (b->fts_statp->st_atime > a->fts_statp->st_atime)
		return (-1);
	else if (b->fts_statp->st_atime < a->fts_statp->st_atime)
		return (1);
	else if (b->fts_statp->st_atimensec > a->fts_statp->st_atimensec)
		return (-1);
	else if (b->fts_statp->st_atimensec < a->fts_statp->st_atimensec)
		return (1);
	else
		return (revnamecmp(a, b));
}

int
statcmp(const FTSENT *a, const FTSENT *b)
{
	if (b->fts_statp->st_ctime > a->fts_statp->st_ctime)
		return (1);
	else if (b->fts_statp->st_ctime < a->fts_statp->st_ctime)
		return (-1);
	else if (b->fts_statp->st_ctimensec > a->fts_statp->st_ctimensec)
		return (1);
	else if (b->fts_statp->st_ctimensec < a->fts_statp->st_ctimensec)
		return (-1);
	else
		return (namecmp(a, b));
}

int
revstatcmp(const FTSENT *a, const FTSENT *b)
{
	if (b->fts_statp->st_ctime > a->fts_statp->st_ctime)
		return (-1);
	else if (b->fts_statp->st_ctime < a->fts_statp->st_ctime)
		return (1);
	else if (b->fts_statp->st_ctimensec > a->fts_statp->st_ctimensec)
		return (-1);
	else if (b->fts_statp->st_ctimensec < a->fts_statp->st_ctimensec)
		return (1);
	else
		return (revnamecmp(a, b));
}

int
sizecmp(const FTSENT *a, const FTSENT *b)
{
	if (b->fts_statp->st_size > a->fts_statp->st_size)
		return (1);
	if (b->fts_statp->st_size < a->fts_statp->st_size)
		return (-1);
	else
		return (namecmp(a, b));
}

int
revsizecmp(const FTSENT *a, const FTSENT *b)
{
	if (b->fts_statp->st_size > a->fts_statp->st_size)
		return (-1);
	if (b->fts_statp->st_size < a->fts_statp->st_size)
		return (1);
	else
		return (revnamecmp(a, b));
}
@


1.5
log
@ansification, art ok
@
text
@d1 1
a1 1
/*	$OpenBSD: cmp.c,v 1.4 2003/06/02 23:32:08 millert Exp $	*/
a34 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)cmp.c	8.1 (Berkeley) 5/31/93";
#else
static char rcsid[] = "$OpenBSD: cmp.c,v 1.4 2003/06/02 23:32:08 millert Exp $";
#endif
#endif /* not lint */
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmp.c,v 1.3 1997/01/03 22:36:07 millert Exp $	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: cmp.c,v 1.3 1997/01/03 22:36:07 millert Exp $";
d54 1
a54 2
namecmp(a, b)
	const FTSENT *a, *b;
d60 1
a60 2
revnamecmp(a, b)
	const FTSENT *a, *b;
d66 1
a66 2
modcmp(a, b)
	const FTSENT *a, *b;
d81 1
a81 2
revmodcmp(a, b)
	const FTSENT *a, *b;
d96 1
a96 2
acccmp(a, b)
	const FTSENT *a, *b;
d111 1
a111 2
revacccmp(a, b)
	const FTSENT *a, *b;
d126 1
a126 2
statcmp(a, b)
	const FTSENT *a, *b;
d141 1
a141 2
revstatcmp(a, b)
	const FTSENT *a, *b;
d156 1
a156 2
sizecmp(a, b)
	const FTSENT *a, *b;
d167 1
a167 2
revsizecmp(a, b)
	const FTSENT *a, *b;
@


1.3
log
@From NetBSD:
    - Correct sorting behaviour.
    - Do multicolumn output in a way that's a more likely to line up evenly.
      From D'Arcy J.M. Cain <darcy@@druid.com>, NetBSD PR #2965.
@
text
@d1 1
a1 1
/*	$OpenBSD: cmp.c,v 1.2 1996/06/23 14:20:18 deraadt Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d40 1
a40 1
static char rcsid[] = "$OpenBSD: cmp.c,v 1.10 1996/07/08 10:32:01 mycroft Exp $";
@


1.2
log
@update rcsid
@
text
@d1 2
a2 2
/*	$OpenBSD: cmp.c,v 1.8 1995/03/21 09:06:20 cgd Exp $	*/
/*	$NetBSD: cmp.c,v 1.8 1995/03/21 09:06:20 cgd Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: cmp.c,v 1.8 1995/03/21 09:06:20 cgd Exp $";
d75 10
a84 1
	return (b->fts_statp->st_mtime - a->fts_statp->st_mtime);
d91 10
a100 1
	return (a->fts_statp->st_mtime - b->fts_statp->st_mtime);
d107 10
a116 1
	return (b->fts_statp->st_atime - a->fts_statp->st_atime);
d123 10
a132 1
	return (a->fts_statp->st_atime - b->fts_statp->st_atime);
d139 10
a148 1
	return (b->fts_statp->st_ctime - a->fts_statp->st_ctime);
d155 10
a164 1
	return (a->fts_statp->st_ctime - b->fts_statp->st_ctime);
d172 1
a172 1
		return 1;
d174 3
a176 2
		return -1;
	return 0;
d183 6
a188 5
	if (a->fts_statp->st_size > b->fts_statp->st_size)
		return 1;
	if (a->fts_statp->st_size < b->fts_statp->st_size)
		return -1;
	return 0;
@


1.1
log
@Initial revision
@
text
@d1 1
d44 1
a44 1
static char rcsid[] = "$NetBSD: cmp.c,v 1.8 1995/03/21 09:06:20 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
