head	1.2;
access;
symbols
	OPENBSD_4_9:1.1.0.58
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.56
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.52
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.54
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.50
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.48
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.46
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.44
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.42
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.40
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.38
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.36
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.34
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.32
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.30
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.28
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.26
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.24
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.22
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.20
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.18
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.16
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.12
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.10
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.8
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.6
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.07.09.03.58.12;	author nicm;	state dead;
branches;
next	1.1;

1.1
date	97.01.23.17.42.53;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Move test(1) test into regress.

ok deraadt
@
text
@#!/bin/sh
#
# Copyright (c) June 1996 Wolfram Schneider <wosch@@FreeBSD.org>. Berlin.
# All rights reserved. 
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# TEST.sh - check if test(1) or builtin test works
#
# $OpenBSD: TEST.sh,v 1.1 1997/01/23 17:42:53 millert Exp $

# force a specified test program, e.g. `env test=/bin/test sh TEST.sh'
: ${test=test}		

ERROR=0 FAILED=0

t ()
{
	# $1 -> exit code
	# $2 -> $test expression

	echo -n "$1: $test $2 "

	# check for syntax errors
	syntax="`eval $test $2 2>&1`"
	if test -z "$syntax"; then

	case $1 in
		0) if eval $test $2; then echo " OK"; else failed;fi;;
		1) if eval $test $2; then failed; else echo " OK";fi;;
	esac

	else
		error
	fi
}

error () 
{
	echo ""; echo "	$syntax"
	ERROR=`expr $ERROR + 1`
}

failed () 
{
	echo ""; echo "	failed"
	FAILED=`expr $FAILED + 1`
}


t 0 'b = b' 
t 1 'b != b' 
t 0 '\( b = b \)' 
t 1 '! \( b = b \)' 
t 1 '! -f /etc/passwd'

t 0 '-h = -h'
t 0 '-o = -o'
t 1 '-f = h'
t 1 '-h = f'
t 1 '-o = f'
t 1 'f = -o'
t 0 '\( -h = -h \)'
t 1 '\( a = -h \)'
t 1 '\( -f = h \)'
t 0 '-h = -h -o a'
t 0 '\( -h = -h \) -o 1'
t 0 '-h = -h -o -h = -h'
t 0 '\( -h = -h \) -o \( -h = -h \)'
t 0 'roedelheim = roedelheim'
t 1 'potsdam = berlin-dahlem'

t 0 '-d /'
t 0 '-d / -a a != b'
t 1 '-z "-z"'
t 0 '-n -n'

t 0 '0'
t 0 '\( 0 \)'
t 0 '-E'
t 0 '-X -a -X'
t 0 '-XXX'
t 0 '\( -E \)'
t 0 'true -o X'
t 0 'true -o -X'
t 0 '\( \( \( a = a \) -o 1 \) -a 1 \) -a true'
t 1 '-h /'
t 0 '-r /'
t 1 '-w /'
t 0 '-x /bin/sh'
t 0 '-c /dev/null'
t 0 '-b /dev/fd0a -o -b /dev/rfd0a -o true'
t 0 '-f /etc/passwd'
t 0 '-s /etc/passwd'

t 1 '! \( 700 -le 1000 -a -n "1" -a "20" = "20" \)'
t 0 '100 -eq 100'
t 0 '100 -lt 200'
t 1 '1000 -lt 200'
t 0 '1000 -gt 200'
t 0 '1000 -ge 200'
t 0 '1000 -ge 1000'
t 1 '2 -ne 2'
t 0 '0 -eq 0'
t 1 '-5 -eq 5'
t 0 '\( 0 -eq 0 \)'
t 1 '1 -eq 0 -o a = a -a 1 -eq 0 -o a = aa'

t 1 '"" -o ""'
t 1 '"" -a ""'
t 1 '"a" -a ""'
t 0 '"a" -a ! ""'
t 1 '""'
t 0 '! ""'

echo ""
echo "Syntax errors: $ERROR Failed: $FAILED"
@


1.1
log
@sh-based TEST suite and man page clarifications from FreeBSD
@
text
@d29 1
a29 1
# $OpenBSD$
@

