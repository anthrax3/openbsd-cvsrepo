head	1.47;
access;
symbols
	OPENBSD_5_9:1.46.0.2
	OPENBSD_5_9_BASE:1.46
	OPENBSD_5_8:1.45.0.6
	OPENBSD_5_8_BASE:1.45
	OPENBSD_5_7:1.45.0.2
	OPENBSD_5_7_BASE:1.45
	OPENBSD_5_6:1.44.0.32
	OPENBSD_5_6_BASE:1.44
	OPENBSD_5_5:1.44.0.30
	OPENBSD_5_5_BASE:1.44
	OPENBSD_5_4:1.44.0.26
	OPENBSD_5_4_BASE:1.44
	OPENBSD_5_3:1.44.0.24
	OPENBSD_5_3_BASE:1.44
	OPENBSD_5_2:1.44.0.22
	OPENBSD_5_2_BASE:1.44
	OPENBSD_5_1_BASE:1.44
	OPENBSD_5_1:1.44.0.20
	OPENBSD_5_0:1.44.0.18
	OPENBSD_5_0_BASE:1.44
	OPENBSD_4_9:1.44.0.16
	OPENBSD_4_9_BASE:1.44
	OPENBSD_4_8:1.44.0.14
	OPENBSD_4_8_BASE:1.44
	OPENBSD_4_7:1.44.0.10
	OPENBSD_4_7_BASE:1.44
	OPENBSD_4_6:1.44.0.12
	OPENBSD_4_6_BASE:1.44
	OPENBSD_4_5:1.44.0.8
	OPENBSD_4_5_BASE:1.44
	OPENBSD_4_4:1.44.0.6
	OPENBSD_4_4_BASE:1.44
	OPENBSD_4_3:1.44.0.4
	OPENBSD_4_3_BASE:1.44
	OPENBSD_4_2:1.44.0.2
	OPENBSD_4_2_BASE:1.44
	OPENBSD_4_1:1.43.0.4
	OPENBSD_4_1_BASE:1.43
	OPENBSD_4_0:1.43.0.2
	OPENBSD_4_0_BASE:1.43
	OPENBSD_3_9:1.41.0.4
	OPENBSD_3_9_BASE:1.41
	OPENBSD_3_8:1.41.0.2
	OPENBSD_3_8_BASE:1.41
	OPENBSD_3_7:1.40.0.6
	OPENBSD_3_7_BASE:1.40
	OPENBSD_3_6:1.40.0.4
	OPENBSD_3_6_BASE:1.40
	OPENBSD_3_5:1.40.0.2
	OPENBSD_3_5_BASE:1.40
	OPENBSD_3_4:1.36.0.2
	OPENBSD_3_4_BASE:1.36
	OPENBSD_3_3:1.31.0.2
	OPENBSD_3_3_BASE:1.31
	OPENBSD_3_2:1.27.0.2
	OPENBSD_3_2_BASE:1.27;
locks; strict;
comment	@.\" @;


1.47
date	2016.04.25.19.09.25;	author tedu;	state dead;
branches;
next	1.46;
commitid	Ne4KgWE1uInoydsl;

1.46
date	2015.09.12.15.52.37;	author schwarze;	state Exp;
branches;
next	1.45;
commitid	IJedeGcVUYpYuOi3;

1.45
date	2014.09.08.01.27.54;	author schwarze;	state Exp;
branches;
next	1.44;
commitid	cPoapLAXYNe1fcgV;

1.44
date	2007.05.31.19.19.15;	author jmc;	state Exp;
branches;
next	1.43;

1.43
date	2006.07.02.12.34.15;	author sturm;	state Exp;
branches;
next	1.42;

1.42
date	2006.05.03.05.16.26;	author sturm;	state Exp;
branches;
next	1.41;

1.41
date	2005.04.23.09.36.47;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2004.02.01.17.34.10;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2004.01.23.20.51.18;	author sturm;	state Exp;
branches;
next	1.38;

1.38
date	2004.01.07.21.15.42;	author sturm;	state Exp;
branches;
next	1.37;

1.37
date	2003.11.20.10.53.59;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2003.09.04.12.17.44;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2003.08.20.00.18.34;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2003.07.19.11.48.58;	author sturm;	state Exp;
branches;
next	1.33;

1.33
date	2003.05.29.00.39.12;	author itojun;	state Exp;
branches;
next	1.32;

1.32
date	2003.03.28.09.56.06;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2002.12.09.19.43.53;	author ian;	state Exp;
branches;
next	1.30;

1.30
date	2002.12.09.07.24.56;	author itojun;	state Exp;
branches;
next	1.29;

1.29
date	2002.10.31.23.04.09;	author itojun;	state Exp;
branches;
next	1.28;

1.28
date	2002.10.16.15.01.08;	author itojun;	state Exp;
branches;
next	1.27;

1.27
date	2002.08.05.23.27.53;	author provos;	state Exp;
branches;
next	1.26;

1.26
date	2002.08.04.04.15.50;	author provos;	state Exp;
branches;
next	1.25;

1.25
date	2002.07.31.00.26.06;	author itojun;	state Exp;
branches;
next	1.24;

1.24
date	2002.07.30.23.14.44;	author itojun;	state Exp;
branches;
next	1.23;

1.23
date	2002.07.30.16.27.21;	author itojun;	state Exp;
branches;
next	1.22;

1.22
date	2002.07.16.01.22.48;	author provos;	state Exp;
branches;
next	1.21;

1.21
date	2002.07.09.15.22.27;	author provos;	state Exp;
branches;
next	1.20;

1.20
date	2002.06.21.15.37.56;	author provos;	state Exp;
branches;
next	1.19;

1.19
date	2002.06.21.15.28.46;	author provos;	state Exp;
branches;
next	1.18;

1.18
date	2002.06.20.05.59.28;	author provos;	state Exp;
branches;
next	1.17;

1.17
date	2002.06.18.01.54.31;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2002.06.13.00.15.00;	author provos;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.10.19.18.48;	author provos;	state Exp;
branches;
next	1.14;

1.14
date	2002.06.09.05.47.27;	author todd;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.07.19.29.00;	author provos;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.05.21.09.02;	author provos;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.05.20.52.47;	author provos;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.05.18.58.07;	author provos;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.05.16.51.08;	author provos;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.05.12.00.15;	author mpech;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.04.22.46.42;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.04.20.19.49;	author provos;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.04.20.19.11;	author provos;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.04.20.13.19;	author provos;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.04.19.52.47;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.04.19.51.08;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.04.19.38.10;	author provos;	state Exp;
branches;
next	;


desc
@@


1.47
log
@boom goes the dynamite
@
text
@.\"	$OpenBSD: systrace.1,v 1.46 2015/09/12 15:52:37 schwarze Exp $
.\"
.\" Copyright 2002 Niels Provos <provos@@citi.umich.edu>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Niels Provos.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" Manual page, using -mandoc macros
.\"
.Dd $Mdocdate: September 12 2015 $
.Dt SYSTRACE 1
.Os
.Sh NAME
.Nm systrace
.Nd generate and enforce system call policies
.Sh SYNOPSIS
.Nm systrace
.Op Fl AaCeitUuV
.Op Fl c Ar user : Ns Ar group
.Op Fl d Ar policydir
.Op Fl E Ar logfile
.Op Fl f Ar file
.Op Fl g Ar gui
.Op Fl p Ar pid
.Ar command ...
.Sh DESCRIPTION
The
.Nm
utility monitors and controls an application's access to the system by
enforcing access policies for system calls.
The
.Nm
utility might be used to trace an untrusted application's access to
the system.
Alternatively, it might be used to protect the system
from software bugs (such as buffer overflows) by constraining a
daemon's access to the system.
Its privilege elevation feature can be used to obviate the
need to run large, untrusted programs as root when only one or two
system calls require root privilege.
.Pp
The access policy can be generated interactively or obtained from a
policy file.
Interactive policy generation will be performed by the
.Dq notification user agent ,
normally
.Xr xsystrace 1 ,
unless text mode is specified via
.Fl t .
.Pp
When running in
.Dq automatic enforcement
mode, operations not covered by the policy raise an alarm and
allow a user to refine the currently configured policy.
.Pp
The options are as follows:
.Bl -tag -width Dfxfile
.It Fl A
Automatically generate a policy that allows every operation the
application executes.
The created policy functions as a base that can be refined.
.It Fl a
Enables automatic enforcement of configured policies.
An operation not covered by policy is denied and logged via
.Xr syslog 3 ,
or to
.Em stderr
if the
.Fl e
flag is specified.
.It Fl C
Run
.Nm
in cradle mode;
currently, when multiple processes are started with systrace protection, each
.Nm
starts its own UI
.Pq user interface
process.
Cradle mode allows a user to attach all
.Nm
processes to one UI.
This may be useful, for example, in scenarios where
.Nm
is being heavily used.
If a cradle server is not running, one is launched.
.It Fl c Ar user : Ns Ar group
Specifies the
.Ar user
and
.Ar group
that the monitored application should be executed with,
which may be either non-negative integers or names.
This is useful in conjunction with privilege elevation and requires
root privilege.
.It Fl d Ar policydir
Specifies an alternative location for the user's directory from
which policies are loaded and to which changed policies are stored.
.It Fl E Ar logfile
Logs all policy violations or specifically logged system calls to
.Ar logfile .
.It Fl e
Specifies to log to
.Em stderr
instead of
.Xr syslog 3 .
.It Fl f Ar file
The policies specified in
.Ar file
are added to the policies that
.Nm
knows about.
The dirname in the policy may contain an "*" to match any possible pathname.
The wildcard is removed from the policy database the first time that
a filename matches.
.It Fl g Ar gui
Specifies an alternative location for the notification user interface.
.It Fl i
Inherits the policy after a call to
.Xr execve 2 .
If this option is not specified, a new program will get its own policy.
.It Fl p Ar pid
Specifies the pid of a process that
.Nm
should attach to.
The full path name of the corresponding binary has to be specified
as
.Ar command .
.It Fl t
Uses text mode to ask for interactive policy generation.
.It Fl U
Ignore user-configured policies and use only global system policies.
.It Fl u
Do not perform aliasing on system call names.
Aliasing is enabled by default to group similar system calls into a
single compound name.
For example, system calls that read from the file system like
.Fn lstat
and
.Fn access
are translated to
.Fn fsread .
.It Fl V
Prints the version number of
.Nm .
.El
.Ss POLICY
The policy is specified via the following grammar:
.Bd -literal -offset 3n
filter = expression "then" action errorcode logcode
expression = symbol | "not" expression | "(" expression ")" |
    expression "and" expression | expression "or" expression
symbol = string typeoff "match" cmdstring |
    string typeoff "eq" cmdstring | string typeoff "neq" cmdstring |
    string typeoff "sub" cmdstring | string typeoff "nsub" cmdstring |
    string typeoff "inpath" cmdstring | string typeoff "re" cmdstring |
    "true"
typeoff = /* empty */ | "[" number "]"
action = "permit" | "deny" | "ask"
errorcode = /* empty */ | "[" string "]"
logcode = /* empty */ | "log"
.Ed
.Pp
The
.Va cmdstring
is an arbitrary string enclosed with quotation marks.
The
.Va errorcode
is used to return an
.Xr errno 2
value to the system call when using a
.Va deny
action.
The values
.Do
inherit
.Dc
and
.Do
detach
.Dc
have special meanings when used with a
.Va permit
rule for the
.Va execve
system call.
When using
.Do
inherit,
.Dc
the current policy is inherited for the new binary.
With
.Do
detach,
.Dc
.Nm
detaches from a process after successfully
completing
the
.Va execve
system call.
.Pp
The
.Va ask
action specifies that the user should be prompted for a decision
every time that the rule matches.
.Pp
The filter operations have the following meaning:
.Bl -hang -width Dinpath -offset AAA
.It match
Evaluates to true if file name globbing according to
.Xr fnmatch 3
succeeds.
.It eq
Evaluates to true if the system call argument matches
.Va cmdstring
exactly.
.It neq
This is the logical negation of
.Va eq .
.It sub
Performs a substring match on the system call argument.
.It nsub
This is the logical negation of
.Va sub .
.It inpath
Evaluates to true if the system call argument is a subpath of
.Va cmdstring .
.It re
Evaluates to true if the system call arguments matches
the specified regular expression.
.El
.Pp
By appending the
.Va log
statement to a rule, a matching system call and its arguments
are logged.
This is useful, for example, to log all invocations of the
.Va execve
system call.
.Pp
Policy entries may contain an appended predicate.
Predicates have the following format:
.Bd -literal -offset 3n
", if" {"user", "group"} {"=", "!=", "\*[Lt]", "\*[Gt]" } {number, string}
.Ed
.Pp
A rule is added to the configured policy only if its predicate
evaluates to true.
.Pp
The environment variables
.Ev $HOME ,
.Ev $USER
and
.Ev $CWD
are substituted in rules.
Comments, begun by an unquoted
.Sq \&#
character and continuing to the end of the line, are ignored.
.Sh PRIVILEGE ELEVATION
With
.Nm
it is possible to remove setuid or setgid binaries, and use the
privilege elevation feature instead.
Single system calls can be executed with higher privileges if
specified by the policy.
For example,
.Bd -literal -offset 3n
native-bind: sockaddr eq "inet-[0.0.0.0]:22" then permit as root
.Ed
.Pp
allows an unprivileged application to bind to a reserved port.
Privilege elevation requires that the
.Nm
process is executed as root.
.Pp
The following statements can be appended after the
.Va permit
in a policy to elevate the privileges for the matching system call:
.Bd -literal -offset 3n
as user
as user:group
as :group
.Ed
.Pp
The effective
.Va uid
and
.Va gid
are elevated only for the duration of the system call, and are restored
to the old values afterwards (except for the
.Va seteuid
or
.Va setegid
system calls).
.Sh FILES
.Bl -tag -width xHOME/xsystrace -compact
.It Pa /dev/systrace
systrace device
.It Pa /etc/systrace
global systrace policies
.It Pa $HOME/.systrace
user specified policies, one per binary, with slashes in the full pathname
replaced by the underscore character.
.El
.Sh EXAMPLES
An excerpt from a sample
.Xr ls 1
policy might look as follows:
.Bd -literal -offset 2n
Policy: /bin/ls, Emulation: native
[...]
   native-fsread: filename eq "$HOME" then permit
   native-fchdir: permit
[...]
   native-fsread: filename eq "/tmp" then permit
   native-stat: permit
   native-fsread: filename match "$HOME/*" then permit
   native-fsread: filename eq "/etc/pwd.db" then permit
[...]
   native-fsread: filename eq "/etc" then deny[eperm], if group != wheel
.Ed
.Sh SEE ALSO
.Xr systrace 4
.Sh AUTHORS
The
.Nm
utility was developed by
.An Niels Provos .
.Sh BUGS
Applications that use clone()-like system calls to share the complete
address space between processes may be able to replace system call
arguments after they have been evaluated by
.Nm
and escape policy enforcement.
@


1.46
log
@mark up arguments individually and drop redundant .Bk
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.45 2014/09/08 01:27:54 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: September 8 2014 $
@


1.45
log
@obvious cases of missing .An;
found with the new mandoc(1) MANDOCERR_AN_MISSING warning;
no text changes
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.44 2007/05/31 19:19:15 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
a40 1
.Bk -words
d42 1
a42 1
.Op Fl c Ar user:group
a48 1
.Ek
d110 1
a110 1
.It Fl c Ar user:group
d112 1
a112 1
.Va user
d114 1
a114 1
.Va group
@


1.44
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.43 2006/07/02 12:34:15 sturm Exp $
d33 1
a33 1
.Dd $Mdocdate$
d353 2
a354 1
utility was developed by Niels Provos.
@


1.43
log
@sync with systrace 1.6d, keeping local changes

tests and feedback by a few
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.42 2006/05/03 05:16:26 sturm Exp $
d33 1
a33 1
.Dd November 28, 2003
@


1.42
log
@be more clear about policy inheritance

help and ok jmc, provos
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.41 2005/04/23 09:36:47 jmc Exp $
d42 1
a42 1
.Op Fl AaCeitUu
d45 1
d124 3
d138 3
d168 3
@


1.41
log
@-c option may take either integer or name, not just integer;

diff from ray;
ok sturm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.40 2004/02/01 17:34:10 jmc Exp $
d137 3
a139 1
Inherits the policy \- child processes inherit policy of the parent binary.
@


1.40
log
@make documentation of cradle mode (-C) clearer, and give an example of why
it might be used;

mostly based on sturm@@'s explanation when i hassled him about it,
and committed by niels@@ to main systrace repository;
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.39 2004/01/23 20:51:18 sturm Exp $
d43 1
a43 1
.Op Fl c Ar uid:gid
d111 1
a111 1
.It Fl c Ar uid:gid
d113 1
a113 1
.Va uid
d115 1
a115 1
.Va gid
d117 1
a117 1
which must be specified as nonnegative integers (not as names).
@


1.39
log
@support for cradle mode by marius at monkey.org; cradle mode allows the
systrace UI to be attached and re-attached, it also multiplexes across
systrace process so that one UI can function as central notification

from provos@@, ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.38 2004/01/07 21:15:42 sturm Exp $
d96 15
a110 3
Run systrace in cradle mode; if a cradle server is not running, one is
launched.
This decouples UIs from systrace, allowing for re-attaching UIs.
@


1.38
log
@new command line option allows logging to stderr instead of syslog

"looks good" provos@@, ok markus@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.37 2003/11/20 10:53:59 jmc Exp $
d33 1
a33 1
.Dd May 21, 2003
d42 1
a42 1
.Op Fl AaeitUu
d95 4
@


1.37
log
@hyphenise compound adjective; from Jared Yanovich;
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.36 2003/09/04 12:17:44 jmc Exp $
d42 1
a42 1
.Op Fl AaitUu
d89 6
a94 1
.Xr syslog 3 .
d107 5
d234 1
a234 2
is logged to
.Xr syslog 3 .
@


1.36
log
@ - use .Bk/.Ek
 - kill bogus -offsets
 - escape `-'
 - .Ev for environment variables
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.35 2003/08/20 00:18:34 deraadt Exp $
d122 1
a122 1
Ignore user configured policies and use only global system policies.
@


1.35
log
@spelling; e@@molioner.dk
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.34 2003/07/19 11:48:58 sturm Exp $
d41 1
d49 1
d111 1
a111 1
Inherits the policy - child processes inherit policy of the parent binary.
d136 1
a136 1
.Bd -literal -offset 4
d232 1
a232 1
.Bd -literal -offset 4
d239 6
a244 1
The environment variables $HOME, $USER and $CWD are substituted in rules.
d256 1
a256 1
.Bd -literal -offset 4
d268 1
a268 1
.Bd -literal -offset 4
d298 1
a298 1
.Bd -literal -offset 4
@


1.34
log
@- sync with NetBSD or Niels' tarball where appropriate
- keeps local changes
- fixes a bug in profile feedback optimization and avoids symbol
  conflicts with errno
- new feature: "ask" action

itojun@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.33 2003/05/29 00:39:12 itojun Exp $
d76 1
a76 1
allow an user to refine the currently configured policy.
@


1.33
log
@>permit numberic values for uid and gid;  allow "<" and ">" for less and
>greate; requested by dugsong@@,
strum ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.32 2003/03/28 09:56:06 jmc Exp $
d33 1
a33 1
.Dd June 3, 2002
d41 2
a42 2
.Bk -words
.Op Fl aAituU
d44 1
a45 2
.Op Fl f Ar file
.Op Fl c Ar uid:gid
a47 1
.Ek
d66 3
a68 2
Interactive policy generation will be performed by the ``notification
user agent'', normally
d73 3
a75 2
When running in ``automatic enforcement'' mode,
operations not covered by the policy raise an alarm and
d80 4
a87 26
.It Fl A
Automatically generate a policy that allows every operation the
application executes.
The created policy functions as a base that can be refined.
.It Fl u
Do not perform aliasing on system call names.
Aliasing is enabled by default to group similar system calls into a
single compound name.
For example, system calls that read from the file system
like
.Fn lstat
and
.Fn access
are translated to
.Fn fsread .
.It Fl i
Inherits the policy - child processes inherit policy of the parent binary.
.It Fl t
Uses text mode to ask for interactive policy generation.
.It Fl U
Ignore user configured policies and use only global system policies.
.It Fl d Ar policydir
Specifies an alternative location for the user's directory from
which policies are loaded and to which changed policies are stored.
.It Fl g Ar gui
Specifies an alternative location for the notification user interface.
d94 1
a94 1
which must be specified as non-negative integers (not as names).
d97 3
d106 4
d117 14
d134 1
a134 1
.Bd -literal -offset AAA
d144 1
a144 1
action = "permit" | "deny"
d170 1
a170 1
.Xr execve 2
d185 1
a185 1
.Xr execve 2
d188 5
d222 1
a222 1
are logged to
d225 1
a225 1
.Xr execve 2
d230 2
a231 2
.Bd -literal -offset AAA
", if" {"user", "group"} {"=", "!=", "<", ">" } {number, string}
d237 4
a240 7
The environment variables
.Ev $HOME , $USER
and
.Ev $CWD
are substituted in rules.
Comments, begun by an unquoted '#' character and
continuing to the end of the line, are ignored.
d264 1
a264 1
as group
d273 3
a275 3
.Xr seteuid 2
and
.Xr setegid 2
d291 1
a291 1
.Bd -literal -offset AAA
@


1.32
log
@little cleanup;

systrace(1) ok provos@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.31 2002/12/09 19:43:53 ian Exp $
d227 1
a227 1
", if" {"user", "group"} {"=", "!="} string
@


1.31
log
@Restriction that -c args must be numeric. Motivation on privilege elevation.
Environment variables (HOME,USER,CWD). File name details. Style fixes.
ok provos@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.30 2002/12/09 07:24:56 itojun Exp $
d41 1
d49 1
d63 1
a63 1
need to run large, untrusted programs as root when only one or two 
d116 1
a116 1
which must be specified as nonnegative integers (not as names).
d171 1
a171 1
.Va execve
d186 1
a186 1
.Va execve
d218 1
a218 1
is logged to
d221 1
a221 1
.Va execve
d233 6
a238 2
The environment variables $HOME, $USER and $CWD are substituted in rules.
Comments, begun by an unquoted '#' character and 
d272 3
a274 3
.Va seteuid
or
.Va setegid
@


1.30
log
@add support for regular expressions and pidname translations.  from provos
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.29 2002/10/31 23:04:09 itojun Exp $
d38 1
a38 1
.Nd generates and enforces system call policies
d60 3
d66 8
a73 1
Operations not covered by the policy raise an alarm and
d113 2
a114 1
that the monitored application should be executed with.
d116 1
a116 1
root privileges.
d230 4
d265 1
a265 2
to the old values afterwards.
The only exceptions are the
d269 1
a269 1
system calls.
d277 2
a278 1
user specified policies
@


1.29
log
@typo, reported by avsm@@openbsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.28 2002/10/16 15:01:08 itojun Exp $
d129 2
a130 1
    string typeoff "inpath" cmdstring | "true"
d197 3
@


1.28
log
@support for privilege elevation.

with privilege elevation no suid or sgid binaries are necessary any
longer.  Applications can be executed completely
unprivileged. Systrace raises the privileges for a single system call
depending on the configured policy.

Idea from discussions with Perry Metzger, Dug Song and Marcus Watts.

from provos
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.27 2002/08/05 23:27:53 provos Exp $
d247 1
a247 1
The only exception are the
@


1.27
log
@allow to specify an alternate directory for policy loading and writing
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.26 2002/08/04 04:15:50 provos Exp $
d45 1
d52 2
a53 1
enforcing access policies for system calls.  The
d56 2
a57 1
the system.  Alternatively, it might be used to protect the system
d62 2
a63 1
policy file.  Operations not covered by the policy raise an alarm and
d77 4
a80 3
Do not perform aliasing on system call names.  Aliasing is enabled
by default to group similar system calls into a single compound
name.  For example, system calls that read from the file system
d98 8
d145 2
a146 1
action.  The values
d215 37
d268 2
a269 2
	native-open: filename eq "$HOME" and oflags sub "ro" then permit
	native-fchdir: permit
d271 4
a274 4
	native-open: filename eq "/tmp" and oflags sub "ro" then permit
	native-stat: permit
	native-open: filename match "$HOME/*" and oflags sub "ro" then permit
	native-open: filename eq "/etc/pwd.db" and oflags sub "ro" then permit
d276 1
a276 1
	native-open: filename eq "/etc" then deny[eperm], if group != wheel
@


1.26
log
@keep track of ppid and allow matching rules to be logged via syslog.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.25 2002/07/31 00:26:06 itojun Exp $
d42 1
d88 3
@


1.25
log
@bring in doc updates from netbsd.  niels ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.24 2002/07/30 23:14:44 itojun Exp $
d106 1
a106 1
filter = expression "then" action errorcode
d116 1
d179 9
@


1.24
log
@obey section order to mandoc.  sync with netbsd.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.23 2002/07/30 16:27:21 itojun Exp $
d49 11
a59 5
utility enforces system call policies for applications by
constraining the application's access to the system.
The policy is generated interactively.
Operations not covered by the policy raise an
alarm and allow an user to refine the currently configured policy.
d82 1
a82 1
Inherits the policy of the first executed binary to all children.
d187 9
a212 9
.Sh FILES
.Bl -tag -width xHOME/xsystrace -compact
.It Pa /dev/systrace
systrace device
.It Pa /etc/systrace
global systrace policies
.It Pa $HOME/.systrace
user specified policies
.El
d218 1
a218 1
utility has been developed by Niels Provos.
@


1.23
log
@use Nm
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.22 2002/07/16 01:22:48 provos Exp $
d97 1
a97 1
.Sh POLICY
d209 4
a218 4
.Sh AUTHORS
The
.Nm
utility has been developed by Niels Provos.
@


1.22
log
@internal uid/gid tracking.  permit can not detach systrace, useful for
sshd.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.21 2002/07/09 15:22:27 provos Exp $
d143 2
a144 1
systrace detaches from a process after successfully
@


1.21
log
@support for system call aliasing.  stat/fstat/readlink/access etc... gets
grouped into fsread, unlink/rmdir/mkdir goes to fswrite.  open switches
back between fsread and fswrite depending on oflags parameter.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.20 2002/06/21 15:37:56 provos Exp $
d66 9
a74 1
Do not perform aliasing on system call names.
d121 1
a121 1
action.  The value
d125 5
a129 1
has a special meaning when used with a
d134 14
a147 1
In that case, the current policy is inherited for the new binary.
@


1.20
log
@No .Pp before .Sh; from wiz@@danbala.ifoer.tuwien.ac.at
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.19 2002/06/21 15:28:46 provos Exp $
d41 1
a41 1
.Op Fl aAitU
d65 2
@


1.19
log
@change BUGS section to mention that only clone is a problem now.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.18 2002/06/20 05:59:28 provos Exp $
a86 1
.Pp
@


1.18
log
@mention shared memory races in bugs section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.17 2002/06/18 01:54:31 deraadt Exp $
d183 3
a185 7
Applications that use
.Xr rfork 2 ,
.Xr mmap 2 ,
or
.Xr shmat 2
to create shared memory between processes may be able to replace
system call arguments after they have been evaluated by
@


1.17
log
@KNF
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.16 2002/06/13 00:15:00 provos Exp $
d182 10
@


1.16
log
@explain filter operands
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.15 2002/06/10 19:18:48 provos Exp $
d130 1
a130 1
Evaluates to true if the system call argument matches 
@


1.15
log
@document -p
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.14 2002/06/09 05:47:27 todd Exp $
d104 1
a104 1
.Va cmd-string
d122 23
@


1.14
log
@knf
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.13 2002/06/07 19:29:00 provos Exp $
d44 1
d79 7
@


1.13
log
@explain about permit[inherit] for execve
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.12 2002/06/05 21:09:02 provos Exp $
d124 1
a124 1
An excerpt from a sample 
@


1.12
log
@append predicate, instead of prepending.  makes rules sortable again.
pointed out by dugsong@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.11 2002/06/05 20:52:47 provos Exp $
d85 1
a85 1
	expression "and" expression | expression "or" expression
d87 3
a89 3
	string typeoff "eq" cmdstring |	string typeoff "neq" cmdstring |
	string typeoff "sub" cmdstring | string typeoff "nsub" cmdstring |
	string typeoff "inpath" cmdstring | "true"
d98 16
@


1.11
log
@support simple predicates to prefix rules.  Allows global policies to be
different for different users.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.10 2002/06/05 18:58:07 provos Exp $
d99 1
a99 1
Policy entries can be prefixed with a predicate.
d102 1
a102 1
"if" {"user", "group"} {"=", "!="} string ","
d122 1
a122 1
	if group != wheel, native-open: filename eq "/etc" then deny[eperm]
@


1.10
log
@stab at describing grammar
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.9 2002/06/05 16:51:08 provos Exp $
d82 1
a82 1
.Bd -literal
d98 26
a123 1

@


1.9
log
@introduce an automatic policy generation mode.  it creates a policy based
on what the application tries to do.  the policy can be refined further on.
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.8 2002/06/05 12:00:15 mpech Exp $
d79 20
@


1.8
log
@My turn to help:
o) start new sentence on a new line;
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.7 2002/06/04 22:46:42 provos Exp $
d41 1
a41 1
.Op Fl aitU
d60 4
@


1.7
log
@document
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.6 2002/06/04 20:19:49 provos Exp $
d49 3
a51 2
constraining the application's access to the system.  The policy is
generated interactively. Operations not covered by the policy raise an
d57 2
a58 2
Enables automatic enforcement of configured policies.  An operation
not covered by policy is denied and logged via
@


1.6
log
@proper copyright
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.5 2002/06/04 20:19:11 provos Exp $
d57 4
a60 1
not covered by policy is denied.
a62 2
.It Fl i
Inherits the policy of the first executed binary to all children.
@


1.5
log
@files section
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.4 2002/06/04 20:13:19 provos Exp $
d3 1
a3 1
.\" Copyright 1997 Niels Provos <provos@@physnet.uni-hamburg.de>
@


1.4
log
@add flag to ignore user specified policies
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.3 2002/06/04 19:52:47 todd Exp $
d72 9
@


1.3
log
@spelling
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.2 2002/06/04 19:51:08 provos Exp $
d41 1
a41 1
.Op Fl ait
d62 2
@


1.2
log
@document
@
text
@d1 1
a1 1
.\"	$OpenBSD: systrace.1,v 1.1 2002/06/04 19:38:10 provos Exp $
d65 1
a65 1
The polcifies specified in
@


1.1
log
@first stab at man page.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d42 1
d62 2
@

