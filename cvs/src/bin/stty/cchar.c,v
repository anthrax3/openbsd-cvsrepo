head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.4
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.6
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.24
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.26
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.18
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.22
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.20
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.28
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.24
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.22
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.20
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.18
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.16
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.14
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.8.0.18
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.16
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.14
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.12
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.10
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.8
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.6
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.4
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.03.23.14.52.42;	author mmcc;	state Exp;
branches;
next	1.11;
commitid	GC8Ar7EJ3EcdsZ8c;

1.11
date	2009.10.27.23.59.22;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.11.23.42.12;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.23.32.09;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	98.11.18.23.26.13;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.09.01.18.30.31;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.07.23.19.26.46;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	96.08.02.12.10.03;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.08.02.12.09.45;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.23.14.21.50;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.09.15.16;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.25;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@header cleanup

from Edgar Pettijohn, with a correction from deraadt@@
@
text
@/*	$OpenBSD: cchar.c,v 1.11 2009/10/27 23:59:22 deraadt Exp $	*/
/*	$NetBSD: cchar.c,v 1.10 1996/05/07 18:20:05 jtc Exp $	*/

/*-
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/ioctl.h>

#include <err.h>
#include <limits.h>
#include <stddef.h>
#include <stdlib.h>
#include <string.h>
#include <termios.h>

#include "stty.h"
#include "extern.h"

/*
 * Special control characters.
 *
 * Cchars1 are the standard names, cchars2 are the old aliases.
 * The first are displayed, but both are recognized on the
 * command line.
 */
const struct cchar cchars1[] = {
	{ "discard",	VDISCARD, 	CDISCARD },
	{ "dsusp", 	VDSUSP,		CDSUSP },
	{ "eof",	VEOF,		CEOF },
	{ "eol",	VEOL,		CEOL },
	{ "eol2",	VEOL2,		CEOL },
	{ "erase",	VERASE,		CERASE },
	{ "intr",	VINTR,		CINTR },
	{ "kill",	VKILL,		CKILL },
	{ "lnext",	VLNEXT,		CLNEXT },
	{ "min",	VMIN,		CMIN },
	{ "quit",	VQUIT,		CQUIT },
	{ "reprint",	VREPRINT, 	CREPRINT },
	{ "start",	VSTART,		CSTART },
	{ "status",	VSTATUS, 	CSTATUS },
	{ "stop",	VSTOP,		CSTOP },
	{ "susp",	VSUSP,		CSUSP },
	{ "time",	VTIME,		CTIME },
	{ "werase",	VWERASE,	CWERASE },
	{ NULL },
};

const struct cchar cchars2[] = {
	{ "brk",	VEOL,		CEOL },
	{ "flush",	VDISCARD, 	CDISCARD },
	{ "rprnt",	VREPRINT, 	CREPRINT },
	{ NULL },
};

static int
c_cchar(const void *a, const void *b)
{
	return (strcmp(((struct cchar *)a)->name, ((struct cchar *)b)->name));
}

int
csearch(char ***argvp, struct info *ip)
{
	struct cchar *cp, tmp;
	long val;
	char *arg, *ep, *name;

	name = **argvp;

	tmp.name = name;
	if (!(cp = (struct cchar *)bsearch(&tmp, cchars1,
	    sizeof(cchars1)/sizeof(struct cchar) - 1, sizeof(struct cchar),
	    c_cchar)) && !(cp = (struct cchar *)bsearch(&tmp, cchars2,
	    sizeof(cchars2)/sizeof(struct cchar) - 1, sizeof(struct cchar),
	    c_cchar)))
		return (0);

	arg = *++*argvp;
	if (!arg) {
		warnx("option requires an argument -- %s", name);
		usage();
	}

#define CHK(s)  (*arg == s[0] && !strcmp(arg, s))
	if (CHK("undef") || CHK("<undef>"))
		ip->t.c_cc[cp->sub] = _POSIX_VDISABLE;
	else if (cp->sub == VMIN || cp->sub == VTIME) {
		val = strtol(arg, &ep, 10);
		if (val > UCHAR_MAX || val < 0) {
			warnx("maximum option value is %d -- %s",
			    UCHAR_MAX, name);
			usage();
		}
		if (*ep != '\0') {
			warnx("option requires a numeric argument -- %s", name);
			usage();
		}
		ip->t.c_cc[cp->sub] = val;
	} else if (arg[0] == '^')
		ip->t.c_cc[cp->sub] = (arg[1] == '?') ? 0177 :
		    (arg[1] == '-') ? _POSIX_VDISABLE : arg[1] & 037;
	else
		ip->t.c_cc[cp->sub] = arg[0];
	ip->set = 1;
	return (1);
}
@


1.11
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: cchar.c,v 1.10 2003/06/11 23:42:12 deraadt Exp $	*/
d34 1
d41 1
@


1.10
log
@ansification, art ok
@
text
@d1 1
a1 1
/*	$OpenBSD: cchar.c,v 1.9 2003/06/02 23:32:09 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)cchar.c	8.5 (Berkeley) 4/2/94";
#else
static char rcsid[] = "$OpenBSD: cchar.c,v 1.9 2003/06/02 23:32:09 millert Exp $";
#endif
#endif /* not lint */
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: cchar.c,v 1.8 1998/11/18 23:26:13 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: cchar.c,v 1.8 1998/11/18 23:26:13 deraadt Exp $";
d89 1
a89 2
c_cchar(a, b)
	const void *a, *b;
d95 1
a95 3
csearch(argvp, ip)
	char ***argvp;
	struct info *ip;
@


1.8
log
@strtol() range check
@
text
@d1 1
a1 1
/*	$OpenBSD: cchar.c,v 1.7 1997/09/01 18:30:31 deraadt Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: cchar.c,v 1.7 1997/09/01 18:30:31 deraadt Exp $";
@


1.7
log
@i am bored enough to fix terminal space/tab uglies
@
text
@d1 1
a1 1
/*	$OpenBSD: cchar.c,v 1.6 1997/07/23 19:26:46 kstailey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cchar.c,v 1.6 1997/07/23 19:26:46 kstailey Exp $";
d129 1
a129 1
		if (val > UCHAR_MAX) {
@


1.6
log
@tabify
@
text
@d1 1
a1 1
/*	$OpenBSD: cchar.c,v 1.5 1996/08/02 12:10:03 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cchar.c,v 1.5 1996/08/02 12:10:03 deraadt Exp $";
d107 1
a107 1
		
@


1.5
log
@search table 2
@
text
@d1 1
a1 1
/*	$OpenBSD: cchar.c,v 1.3 1996/06/23 14:21:50 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cchar.c,v 1.3 1996/06/23 14:21:50 deraadt Exp $";
d94 1
a94 1
        const void *a, *b;
d96 1
a96 1
        return (strcmp(((struct cchar *)a)->name, ((struct cchar *)b)->name));
@


1.4
log
@let vmin/vtime be set to 255
@
text
@d113 2
a114 2
	    c_cchar)) && !(cp = (struct cchar *)bsearch(&tmp, cchars1,
	    sizeof(cchars1)/sizeof(struct cchar) - 1, sizeof(struct cchar),
@


1.3
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: cchar.c,v 1.10 1996/05/07 18:20:05 jtc Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: cchar.c,v 1.10 1996/05/07 18:20:05 jtc Exp $";
a128 5
		if (val == _POSIX_VDISABLE) {
			warnx("value of %ld would disable the option -- %s",
			    val, name);
			usage();
		}
@


1.2
log
@const
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: cchar.c,v 1.10 1996/05/07 18:20:05 jtc Exp $";
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: cchar.c,v 1.9 1995/03/21 09:11:15 cgd Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: cchar.c,v 1.9 1995/03/21 09:11:15 cgd Exp $";
d62 1
a62 1
struct cchar cchars1[] = {
d84 1
a84 1
struct cchar cchars2[] = {
a94 1

@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
