head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.2
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.22
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.20
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.16
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.14
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.12
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.10
	OPENBSD_5_0:1.14.0.8
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.6
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.4
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.12.0.28
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.24
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.22
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.20
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.18
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.16
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.8.0.16
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.14
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.12
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.10
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.8
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.6
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2016.03.23.14.52.42;	author mmcc;	state Exp;
branches;
next	1.16;
commitid	GC8Ar7EJ3EcdsZ8c;

1.16
date	2015.11.20.15.57.39;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	YhALNvrHt7QcsLZT;

1.15
date	2015.02.11.12.36.40;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	A4RHKgIUOLQwJlsO;

1.14
date	2009.10.28.20.58.38;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.27.23.59.22;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.11.23.42.12;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.32.09;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.16.21.27.08;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.25.03.40.25;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.08.24.06.49.30;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.07.23.19.26.47;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	96.12.17.19.09.30;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	96.12.16.20.04.39;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.08.02.12.10.21;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.23.14.21.51;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.05.18.02.24;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@header cleanup

from Edgar Pettijohn, with a correction from deraadt@@
@
text
@/*	$OpenBSD: key.c,v 1.16 2015/11/20 15:57:39 deraadt Exp $	*/
/*	$NetBSD: key.c,v 1.11 1995/09/07 06:57:11 jtc Exp $	*/

/*-
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/ioctl.h>

#include <err.h>
#include <errno.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <termios.h>

#include "stty.h"
#include "extern.h"

__BEGIN_DECLS
void	f_all(struct info *);
void	f_cbreak(struct info *);
void	f_columns(struct info *);
void	f_dec(struct info *);
void	f_ek(struct info *);
void	f_everything(struct info *);
void	f_extproc(struct info *);
void	f_ispeed(struct info *);
void	f_lcase(struct info *);
void	f_nl(struct info *);
void	f_ospeed(struct info *);
void	f_raw(struct info *);
void	f_rows(struct info *);
void	f_sane(struct info *);
void	f_size(struct info *);
void	f_speed(struct info *);
void	f_ostart(struct info *);
void	f_ostop(struct info *);
void	f_tty(struct info *);
__END_DECLS

static struct key {
	char *name;				/* name */
	void (*f)(struct info *);		/* function */
#define	F_NEEDARG	0x01			/* needs an argument */
#define	F_OFFOK		0x02			/* can turn off */
	int flags;
} keys[] = {
	{ "all",	f_all,		0 },
	{ "cbreak",	f_cbreak,	F_OFFOK },
	{ "cols",	f_columns,	F_NEEDARG },
	{ "columns",	f_columns,	F_NEEDARG },
	{ "cooked", 	f_sane,		0 },
	{ "dec",	f_dec,		0 },
	{ "ek",		f_ek,		0 },
	{ "everything",	f_everything,	0 },
	{ "extproc",	f_extproc,	F_OFFOK },
	{ "ispeed",	f_ispeed,	F_NEEDARG },
	{ "lcase", 	f_lcase,	0 },
	{ "new",	f_tty,		0 },
	{ "nl",		f_nl,		F_OFFOK },
	{ "old",	f_tty,		0 },
	{ "ospeed",	f_ospeed,	F_NEEDARG },
	{ "ostart",	f_ostart,	0 },
	{ "ostop",	f_ostop,	0 },
	{ "raw",	f_raw,		F_OFFOK },
	{ "rows",	f_rows,		F_NEEDARG },
	{ "sane",	f_sane,		0 },
	{ "size",	f_size,		0 },
	{ "speed",	f_speed,	0 },
	{ "tty",	f_tty,		0 },
};

static int
c_key(const void *a, const void *b)
{

	return (strcmp(((struct key *)a)->name, ((struct key *)b)->name));
}

int
ksearch(char ***argvp, struct info *ip)
{
	char *name;
	struct key *kp, tmp;

	name = **argvp;
	if (*name == '-') {
		ip->off = 1;
		++name;
	} else
		ip->off = 0;

	tmp.name = name;
	if (!(kp = (struct key *)bsearch(&tmp, keys,
	    sizeof(keys)/sizeof(struct key), sizeof(struct key), c_key)))
		return (0);
	if (!(kp->flags & F_OFFOK) && ip->off) {
		warnx("illegal option -- -%s", name);
		usage();
	}
	if (kp->flags & F_NEEDARG && !(ip->arg = *++*argvp)) {
		warnx("option requires an argument -- %s", name);
		usage();
	}
	kp->f(ip);
	return (1);
}

void
f_all(struct info *ip)
{
	print(&ip->t, &ip->win, ip->ldisc, BSD);
}

void
f_cbreak(struct info *ip)
{

	if (ip->off)
		f_sane(ip);
	else {
		ip->t.c_iflag |= BRKINT|IXON|IMAXBEL;
		ip->t.c_oflag |= OPOST;
		ip->t.c_lflag |= ISIG|IEXTEN;
		ip->t.c_lflag &= ~ICANON;
		ip->set = 1;
	}
}

void
f_columns(struct info *ip)
{
	const char *error;

	ip->win.ws_col = strtonum(ip->arg, 0, USHRT_MAX, &error);
	if (error)
		err(1, "cols %s", ip->arg);
	ip->wset = 1;
}

void
f_dec(struct info *ip)
{

	ip->t.c_cc[VERASE] = (u_char)0177;
	ip->t.c_cc[VKILL] = CTRL('u');
	ip->t.c_cc[VINTR] = CTRL('c');
	ip->t.c_lflag &= ~ECHOPRT;
	ip->t.c_lflag |= ECHOE|ECHOKE|ECHOCTL;
	ip->t.c_iflag &= ~IXANY;
	ip->set = 1;
}

void
f_ek(struct info *ip)
{

	ip->t.c_cc[VERASE] = CERASE;
	ip->t.c_cc[VKILL] = CKILL;
	ip->set = 1;
}

void
f_everything(struct info *ip)
{

	print(&ip->t, &ip->win, ip->ldisc, BSD);
}

void
f_extproc(struct info *ip)
{

	if (ip->off) {
		int tmp = 0;
		(void)ioctl(ip->fd, TIOCEXT, &tmp);
	} else {
		int tmp = 1;
		(void)ioctl(ip->fd, TIOCEXT, &tmp);
	}
	ip->set = 1;
}

void
f_ispeed(struct info *ip)
{
	const char *errstr;
	speed_t speed;
	
	speed = strtonum(ip->arg, 0, UINT_MAX, &errstr);
	if (errstr)
		err(1, "ispeed %s", ip->arg);
	cfsetispeed(&ip->t, speed);
	ip->set = 1;
}

void
f_lcase(struct info *ip)
{
	if (ip->off) {
		ip->t.c_iflag &= ~IUCLC;
		ip->t.c_oflag &= ~OLCUC;
		ip->t.c_lflag &= ~XCASE;
	} else {
		ip->t.c_iflag |= IUCLC;
		ip->t.c_oflag |= OLCUC;
		ip->t.c_lflag |= XCASE;
	}
	ip->set = 1;
}

void
f_nl(struct info *ip)
{

	if (ip->off) {
		ip->t.c_iflag |= ICRNL;
		ip->t.c_oflag |= ONLCR;
	} else {
		ip->t.c_iflag &= ~ICRNL;
		ip->t.c_oflag &= ~ONLCR;
	}
	ip->set = 1;
}

void
f_ospeed(struct info *ip)
{
	const char *errstr;
	speed_t speed;
	
	speed = strtonum(ip->arg, 0, UINT_MAX, &errstr);
	if (errstr)
		err(1, "ospeed %s", ip->arg);
	cfsetospeed(&ip->t, speed);
	ip->set = 1;
}

void
f_raw(struct info *ip)
{

	if (ip->off)
		f_sane(ip);
	else {
		cfmakeraw(&ip->t);
		ip->t.c_cflag &= ~(CSIZE|PARENB);
		ip->t.c_cflag |= CS8;
		ip->set = 1;
	}
}

void
f_rows(struct info *ip)
{
	const char *error;

	ip->win.ws_row = strtonum(ip->arg, 0, USHRT_MAX, &error);
	if (error)
		err(1, "rows %s", ip->arg);
	ip->wset = 1;
}

void
f_sane(struct info *ip)
{

	ip->t.c_cflag = TTYDEF_CFLAG | (ip->t.c_cflag & (CLOCAL|CRTSCTS));
	ip->t.c_iflag = TTYDEF_IFLAG;
	ip->t.c_iflag |= ICRNL;
	/* preserve user-preference flags in lflag */
#define	LKEEP	(ECHOKE|ECHOE|ECHOK|ECHOPRT|ECHOCTL|ALTWERASE|TOSTOP|NOFLSH)
	ip->t.c_lflag = TTYDEF_LFLAG | (ip->t.c_lflag & LKEEP);
	ip->t.c_oflag = TTYDEF_OFLAG;
	ip->set = 1;
}

void
f_size(struct info *ip)
{

	(void)printf("%d %d\n", ip->win.ws_row, ip->win.ws_col);
}

void
f_speed(struct info *ip)
{

	(void)printf("%d\n", cfgetospeed(&ip->t));
}

void
f_tty(struct info *ip)
{
	int tmp;

	tmp = TTYDISC;
	if (ioctl(ip->fd, TIOCSETD, &tmp) < 0)
		err(1, "TIOCSETD");
}

void
f_ostart(struct info *ip)
{
	if (ioctl(ip->fd, TIOCSTART) < 0)
		err(1, "TIOCSTART");
}

void
f_ostop(struct info *ip)
{
	if (ioctl(ip->fd, TIOCSTOP) < 0)
		err(1, "TIOCSTOP");
}
@


1.16
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.15 2015/02/11 12:36:40 deraadt Exp $	*/
d34 1
a37 1
#include <stdlib.h>
d40 1
d42 1
@


1.15
log
@use strtonum for ispeed & ospeed, rejecting those numbers.
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.14 2009/10/28 20:58:38 deraadt Exp $	*/
d331 1
a331 1
	if (ioctl (ip->fd, TIOCSTART) < 0)
d338 1
a338 1
	if (ioctl (ip->fd, TIOCSTOP) < 0)
@


1.14
log
@Use strtonum() instead of atoi() so that ridiculous sloppy things like
    ispeed -38400 baud; ospeed 38400 baud; 24 rows; 80 columns;
and
    % stty rows -45; stty size
    65491 80
don't happen.
ok millert guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.13 2009/10/27 23:59:22 deraadt Exp $	*/
d213 7
a219 2

	cfsetispeed(&ip->t, atoi(ip->arg));
d255 7
a261 2

	cfsetospeed(&ip->t, atoi(ip->arg));
@


1.13
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.12 2003/06/11 23:42:12 deraadt Exp $	*/
d38 1
d159 1
d161 3
a163 1
	ip->win.ws_col = atoi(ip->arg);
d272 1
d274 3
a276 1
	ip->win.ws_row = atoi(ip->arg);
@


1.12
log
@ansification, art ok
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.11 2003/06/02 23:32:09 millert Exp $	*/
a31 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)key.c	8.4 (Berkeley) 2/20/95";
#else
static char rcsid[] = "$OpenBSD: key.c,v 1.11 2003/06/02 23:32:09 millert Exp $";
#endif
#endif /* not lint */
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.10 2002/02/16 21:27:08 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: key.c,v 1.10 2002/02/16 21:27:08 millert Exp $";
d107 1
a107 2
c_key(a, b)
	const void *a, *b;
d114 1
a114 3
ksearch(argvp, ip)
	char ***argvp;
	struct info *ip;
d143 1
a143 2
f_all(ip)
	struct info *ip;
d149 1
a149 2
f_cbreak(ip)
	struct info *ip;
d164 1
a164 2
f_columns(ip)
	struct info *ip;
d172 1
a172 2
f_dec(ip)
	struct info *ip;
d185 1
a185 2
f_ek(ip)
	struct info *ip;
d194 1
a194 2
f_everything(ip)
	struct info *ip;
d201 1
a201 2
f_extproc(ip)
	struct info *ip;
d215 1
a215 2
f_ispeed(ip)
	struct info *ip;
d223 1
a223 2
f_lcase(ip)
	struct info *ip;
d238 1
a238 2
f_nl(ip)
	struct info *ip;
d252 1
a252 2
f_ospeed(ip)
	struct info *ip;
d260 1
a260 2
f_raw(ip)
	struct info *ip;
d274 1
a274 2
f_rows(ip)
	struct info *ip;
d282 1
a282 2
f_sane(ip)
	struct info *ip;
d296 1
a296 2
f_size(ip)
	struct info *ip;
d303 1
a303 2
f_speed(ip)
	struct info *ip;
d310 1
a310 2
f_tty(ip)
	struct info *ip;
d320 1
a320 2
f_ostart(ip)
	struct info *ip;
d327 1
a327 2
f_ostop(ip)
	struct info *ip;
@


1.10
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.9 2001/06/25 03:40:25 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char rcsid[] = "$OpenBSD: key.c,v 1.9 2001/06/25 03:40:25 millert Exp $";
@


1.9
log
@implement 'stty ek' as documented; dima@@unixfreak.org
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.8 1997/08/24 06:49:30 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: key.c,v 1.8 1997/08/24 06:49:30 deraadt Exp $";
d57 19
a75 19
void	f_all __P((struct info *));
void	f_cbreak __P((struct info *));
void	f_columns __P((struct info *));
void	f_dec __P((struct info *));
void	f_ek __P((struct info *));
void	f_everything __P((struct info *));
void	f_extproc __P((struct info *));
void	f_ispeed __P((struct info *));
void	f_lcase __P((struct info *));
void	f_nl __P((struct info *));
void	f_ospeed __P((struct info *));
void	f_raw __P((struct info *));
void	f_rows __P((struct info *));
void	f_sane __P((struct info *));
void	f_size __P((struct info *));
void	f_speed __P((struct info *));
void	f_ostart __P((struct info *));
void	f_ostop __P((struct info *));
void	f_tty __P((struct info *));
d80 1
a80 1
	void (*f) __P((struct info *));		/* function */
@


1.8
log
@correct -sane error msg; steve@@freebsd
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.7 1997/07/23 19:26:47 kstailey Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: key.c,v 1.7 1997/07/23 19:26:47 kstailey Exp $";
d61 1
d91 1
d192 10
@


1.7
log
@tabify
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.6 1996/12/17 19:09:30 tholo Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: key.c,v 1.6 1996/12/17 19:09:30 tholo Exp $";
d136 1
a136 1
		warnx("illegal option -- %s", name);
@


1.6
log
@Fix typo
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.5 1996/12/16 20:04:39 tholo Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: key.c,v 1.5 1996/12/16 20:04:39 tholo Exp $";
d110 1
a110 1
        const void *a, *b;
d113 1
a113 1
        return (strcmp(((struct key *)a)->name, ((struct key *)b)->name));
@


1.5
log
@Implement more tty flags for better portability from other systems:

	XCASE - canonical input/output processing
	IUCLC - translate uppercase to lowercase on input
	OLCUC - translate lowercase to uppercase on output
	OCRNL - translate carriage return to newline on output
	ONOCR - do not output carriage return at column 0
	ONLRET - newline performs carriage return function

In addition the tty compatibility interface supports LCASE properly.

Look at termios(4) for a more complete description of the above flags.
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.4 1996/08/02 12:10:21 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: key.c,v 1.4 1996/08/02 12:10:21 deraadt Exp $";
d230 3
a232 3
		ip.t_iflag &= ~IUCLC;
		ip.t_oflag &= ~OLCUC;
		ip.t_lflag &= ~XCASE;
d234 3
a236 3
		ip.t_iflag |= IUCLC;
		ip.t_oflag |= OLCUC;
		ip.t_lflag |= XCASE;
@


1.4
log
@ioctl ip->fd, not 0, doh
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.3 1996/06/23 14:21:51 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: key.c,v 1.3 1996/06/23 14:21:51 deraadt Exp $";
d64 1
d93 1
d222 16
@


1.3
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: key.c,v 1.11 1995/09/07 06:57:11 jtc Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: key.c,v 1.11 1995/09/07 06:57:11 jtc Exp $";
d309 1
a309 1
	if (ioctl(0, TIOCSETD, &tmp) < 0)
d317 1
a317 1
	if (ioctl (0, TIOCSTART) < 0)
d325 1
a325 1
	if (ioctl (0, TIOCSTOP) < 0)
@


1.2
log
@Add support for ostart and ostop
@
text
@d1 1
d41 1
a41 1
static char rcsid[] = "$NetBSD: key.c,v 1.11 1995/09/07 06:57:11 jtc Exp $";
@


1.1
log
@Initial revision
@
text
@d70 2
d95 2
d310 16
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
