head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.10
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.8
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.4
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.11.0.20
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.16
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.12
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.10
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.5.0.18
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.16
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.14
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2015.10.09.01.37.06;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	sbrB3Q5CNxcwZpfU;

1.13
date	2015.10.05.05.24.12;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	gBH5Ulw8VuO10XQI;

1.12
date	2014.05.28.06.55.58;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.27.23.59.22;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2006.04.01.18.08.48;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.23.32.09;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.07.04.04.26.40;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.07;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.09.06.13.29.08;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	97.01.15.23.40.24;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.12.14.12.18.12;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.08.02.12.41.03;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.20.54;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.19;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Change all tame callers to namechange to pledge(2).
@
text
@/*	$OpenBSD: pwd.c,v 1.13 2015/10/05 05:24:12 deraadt Exp $	*/
/*	$NetBSD: pwd.c,v 1.22 2011/08/29 14:51:19 joerg Exp $	*/

/*
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/stat.h>

#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

extern char *__progname;
static char *getcwd_logical(void);
__dead static void usage(void);

int
main(int argc, char *argv[])
{
	int ch, lFlag = 0;
	const char *p;

	if (pledge("stdio rpath", NULL) == -1)
		err(1, "pledge");

	while ((ch = getopt(argc, argv, "LP")) != -1) {
		switch (ch) {
		case 'L':
			lFlag = 1;
			break;
		case 'P':
			lFlag = 0;
			break;
		default:
			usage();
		}
	}
	argc -= optind;
	argv += optind;

	if (argc != 0)
		usage();

	if (lFlag)
		p = getcwd_logical();
	else
		p = NULL;
	if (p == NULL)
		p = getcwd(NULL, 0);

	if (p == NULL)
		err(EXIT_FAILURE, NULL);

	puts(p);

	exit(EXIT_SUCCESS);
}

static char *
getcwd_logical(void)
{
	char *pwd, *p;
	struct stat s_pwd, s_dot;

	/* Check $PWD -- if it's right, it's fast. */
	pwd = getenv("PWD");
	if (pwd == NULL)
		return NULL;
	if (pwd[0] != '/')
		return NULL;

	/* check for . or .. components, including trailing ones */
	for (p = pwd; *p != '\0'; p++)
		if (p[0] == '/' && p[1] == '.') {
			if (p[2] == '.')
				p++;
			if (p[2] == '\0' || p[2] == '/')
				return NULL;
		}

	if (stat(pwd, &s_pwd) == -1 || stat(".", &s_dot) == -1)
		return NULL;
	if (s_pwd.st_dev != s_dot.st_dev || s_pwd.st_ino != s_dot.st_ino)
		return NULL;
	return pwd;
}

static void
usage(void)
{
	fprintf(stderr, "usage: %s [-LP]\n", __progname);
	exit(EXIT_FAILURE);
}
@


1.13
log
@tame "stdio rpath" works for all use cases of pwd(1).  In part this
success could be because our getcwd() is backed by a system call, unlike
historical practice.  Didn't think it through competely, but this could
burn someone else later, if they try to port this code to another system.
Anyways, good enough for us.
all cases tested by doug
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.12 2014/05/28 06:55:58 guenther Exp $	*/
d50 2
a51 2
	if (tame("stdio rpath", NULL) == -1)
		err(1, "tame");
@


1.12
log
@In his continuing quest to improve our documentation, jmc@@ noticed that
we didn't support the -L option required by POSIX, and didn't
document the -P option that we did support.  Fix that with code and
doc bits from NetBSD, but correcting a minor noncompliance in the
-L support and applying the jmc@@ and sobrado@@ magic to the manpage.
This commit does not change the default behavior.

ok jmc@@ millert@@ sobrado@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.11 2009/10/27 23:59:22 deraadt Exp $	*/
d49 3
@


1.11
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 2
a2 2
/*	$OpenBSD: pwd.c,v 1.10 2006/04/01 18:08:48 deraadt Exp $	*/
/*	$NetBSD: pwd.c,v 1.7 1995/03/21 09:08:18 cgd Exp $	*/
d33 2
d40 3
a42 3
extern	char *__progname;

void usage(void);
d47 2
a48 2
	int ch;
	char *p;
d50 1
a50 8
	/*
	 * Flags for pwd are a bit strange.  The POSIX 1003.2B/D9 document
	 * has an optional -P flag for physical, which is what this program
	 * will produce by default.  The logical flag, -L, should fail, as
	 * there's no way to display a logical path after forking.  We don't
	 * document either flag, only adding -P for future portability.
	 */
	while ((ch = getopt(argc, argv, "P")) != -1)
d52 3
d56 1
d61 1
d68 42
a109 4
	if ((p = getcwd(NULL, (size_t)0)) == NULL)
		err(1, "getcwd");
	(void)printf("%s\n", p);
	exit(0);
d112 1
a112 1
void
d115 2
a116 2
	(void)fprintf(stderr, "usage: %s\n", __progname);
	exit(1);
@


1.10
log
@make lint happy
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.9 2003/06/02 23:32:09 millert Exp $	*/
a31 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1991, 1993, 1994\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)pwd.c	8.3 (Berkeley) 4/1/94";
#else
static char rcsid[] = "$OpenBSD: pwd.c,v 1.9 2003/06/02 23:32:09 millert Exp $";
#endif
#endif /* not lint */
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.8 2002/07/04 04:26:40 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: pwd.c,v 1.8 2002/07/04 04:26:40 deraadt Exp $";
d82 1
a82 1
	if ((p = getcwd(NULL, 0)) == NULL)
@


1.8
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.7 2002/02/16 21:27:07 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static char rcsid[] = "$OpenBSD: pwd.c,v 1.7 2002/02/16 21:27:07 millert Exp $";
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.6 2001/09/06 13:29:08 mpech Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: pwd.c,v 1.6 2001/09/06 13:29:08 mpech Exp $";
d61 1
a61 3
main(argc, argv)
	int argc;
	char *argv[];
d93 1
a93 1
usage()
@


1.6
log
@o) __progname aria;

millert@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.5 1997/01/15 23:40:24 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: pwd.c,v 1.5 1997/01/15 23:40:24 millert Exp $";
d58 1
a58 1
void usage __P((void));
@


1.5
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.4 1996/12/14 12:18:12 mickey Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: pwd.c,v 1.4 1996/12/14 12:18:12 mickey Exp $";
d56 2
d97 1
a97 2

	(void)fprintf(stderr, "usage: pwd\n");
@


1.4
log
@-Wall'ing.
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.3 1996/08/02 12:41:03 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: pwd.c,v 1.3 1996/08/02 12:41:03 deraadt Exp $";
d73 1
a73 1
	while ((ch = getopt(argc, argv, "P")) != EOF)
@


1.3
log
@zap getopt() case of -?, come on, it is the default!
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.2 1996/06/23 14:20:54 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: pwd.c,v 1.2 1996/06/23 14:20:54 deraadt Exp $";
d87 1
a87 1
		err(1, NULL);
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: pwd.c,v 1.7 1995/03/21 09:08:18 cgd Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: pwd.c,v 1.7 1995/03/21 09:08:18 cgd Exp $";
a76 1
		case '?':
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: pwd.c,v 1.7 1995/03/21 09:08:18 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
