head	1.73;
access;
symbols
	OPENBSD_6_0:1.71.0.6
	OPENBSD_6_0_BASE:1.71
	OPENBSD_5_9:1.71.0.2
	OPENBSD_5_9_BASE:1.71
	OPENBSD_5_8:1.71.0.4
	OPENBSD_5_8_BASE:1.71
	OPENBSD_5_7:1.70.0.2
	OPENBSD_5_7_BASE:1.70
	OPENBSD_5_6:1.68.0.4
	OPENBSD_5_6_BASE:1.68
	OPENBSD_5_5:1.64.0.4
	OPENBSD_5_5_BASE:1.64
	OPENBSD_5_4:1.62.0.2
	OPENBSD_5_4_BASE:1.62
	OPENBSD_5_3:1.61.0.10
	OPENBSD_5_3_BASE:1.61
	OPENBSD_5_2:1.61.0.8
	OPENBSD_5_2_BASE:1.61
	OPENBSD_5_1_BASE:1.61
	OPENBSD_5_1:1.61.0.6
	OPENBSD_5_0:1.61.0.4
	OPENBSD_5_0_BASE:1.61
	OPENBSD_4_9:1.61.0.2
	OPENBSD_4_9_BASE:1.61
	OPENBSD_4_8:1.59.0.2
	OPENBSD_4_8_BASE:1.59
	OPENBSD_4_7:1.58.0.2
	OPENBSD_4_7_BASE:1.58
	OPENBSD_4_6:1.56.0.6
	OPENBSD_4_6_BASE:1.56
	OPENBSD_4_5:1.56.0.2
	OPENBSD_4_5_BASE:1.56
	OPENBSD_4_4:1.54.0.2
	OPENBSD_4_4_BASE:1.54
	OPENBSD_4_3:1.52.0.4
	OPENBSD_4_3_BASE:1.52
	OPENBSD_4_2:1.52.0.2
	OPENBSD_4_2_BASE:1.52
	OPENBSD_4_1:1.50.0.2
	OPENBSD_4_1_BASE:1.50
	OPENBSD_4_0:1.48.0.2
	OPENBSD_4_0_BASE:1.48
	OPENBSD_3_9:1.46.0.4
	OPENBSD_3_9_BASE:1.46
	OPENBSD_3_8:1.46.0.2
	OPENBSD_3_8_BASE:1.46
	OPENBSD_3_7:1.44.0.6
	OPENBSD_3_7_BASE:1.44
	OPENBSD_3_6:1.44.0.4
	OPENBSD_3_6_BASE:1.44
	OPENBSD_3_5:1.44.0.2
	OPENBSD_3_5_BASE:1.44
	OPENBSD_3_4:1.40.0.2
	OPENBSD_3_4_BASE:1.40
	OPENBSD_3_3:1.35.0.2
	OPENBSD_3_3_BASE:1.35
	OPENBSD_3_2:1.31.0.4
	OPENBSD_3_2_BASE:1.31
	OPENBSD_3_1:1.31.0.2
	OPENBSD_3_1_BASE:1.31
	OPENBSD_3_0:1.27.0.2
	OPENBSD_3_0_BASE:1.27
	OPENBSD_2_9:1.26.0.2
	OPENBSD_2_9_BASE:1.26
	OPENBSD_2_8:1.21.0.2
	OPENBSD_2_8_BASE:1.21
	OPENBSD_2_7:1.20.0.2
	OPENBSD_2_7_BASE:1.20
	OPENBSD_2_6:1.15.0.2
	OPENBSD_2_6_BASE:1.15
	OPENBSD_2_5:1.11.0.2
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.73
date	2016.08.26.04.40.27;	author guenther;	state Exp;
branches;
next	1.72;
commitid	pWOfqUI8wk36rVn1;

1.72
date	2016.08.16.18.41.06;	author schwarze;	state Exp;
branches;
next	1.71;
commitid	sp62oftS2eyZ6icS;

1.71
date	2015.03.15.05.16.56;	author guenther;	state Exp;
branches;
next	1.70;
commitid	HSK0bOjvwZEFwcIU;

1.70
date	2015.01.15.19.06.31;	author schwarze;	state Exp;
branches;
next	1.69;
commitid	dven8mWEy4wx3j1c;

1.69
date	2014.09.08.01.27.54;	author schwarze;	state Exp;
branches;
next	1.68;
commitid	cPoapLAXYNe1fcgV;

1.68
date	2014.06.04.07.57.27;	author jmc;	state Exp;
branches;
next	1.67;
commitid	JvkU42zA9Kc4xXfy;

1.67
date	2014.04.18.22.23.53;	author jmc;	state Exp;
branches;
next	1.66;

1.66
date	2014.04.15.21.21.20;	author jmc;	state Exp;
branches;
next	1.65;

1.65
date	2014.04.15.17.02.54;	author jmc;	state Exp;
branches;
next	1.64;

1.64
date	2014.02.13.07.30.39;	author guenther;	state Exp;
branches;
next	1.63;

1.63
date	2014.01.09.03.13.24;	author guenther;	state Exp;
branches;
next	1.62;

1.62
date	2013.03.27.17.14.10;	author zhuk;	state Exp;
branches;
next	1.61;

1.61
date	2010.09.19.20.55.25;	author jmc;	state Exp;
branches;
next	1.60;

1.60
date	2010.09.03.09.53.20;	author jmc;	state Exp;
branches;
next	1.59;

1.59
date	2010.07.22.08.09.29;	author jmc;	state Exp;
branches;
next	1.58;

1.58
date	2009.08.16.09.41.08;	author sobrado;	state Exp;
branches;
next	1.57;

1.57
date	2009.08.05.13.38.05;	author martynas;	state Exp;
branches;
next	1.56;

1.56
date	2009.02.08.17.33.01;	author jmc;	state Exp;
branches;
next	1.55;

1.55
date	2009.02.08.17.15.09;	author jmc;	state Exp;
branches;
next	1.54;

1.54
date	2008.06.11.07.42.50;	author jmc;	state Exp;
branches;
next	1.53;

1.53
date	2008.06.11.00.49.08;	author pvalchev;	state Exp;
branches;
next	1.52;

1.52
date	2007.05.31.19.19.15;	author jmc;	state Exp;
branches;
next	1.51;

1.51
date	2007.05.29.15.04.59;	author jmc;	state Exp;
branches;
next	1.50;

1.50
date	2007.03.06.14.40.22;	author jmc;	state Exp;
branches;
next	1.49;

1.49
date	2007.02.24.09.50.55;	author jmc;	state Exp;
branches;
next	1.48;

1.48
date	2006.05.12.11.55.58;	author jmc;	state Exp;
branches;
next	1.47;

1.47
date	2006.03.25.07.53.47;	author ray;	state Exp;
branches;
next	1.46;

1.46
date	2005.06.02.19.06.43;	author jaredy;	state Exp;
branches;
next	1.45;

1.45
date	2005.06.02.16.27.08;	author jaredy;	state Exp;
branches;
next	1.44;

1.44
date	2004.02.19.19.15.32;	author jmc;	state Exp;
branches;
next	1.43;

1.43
date	2004.01.23.23.08.45;	author jmc;	state Exp;
branches;
next	1.42;

1.42
date	2003.11.21.20.54.02;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2003.10.22.20.08.45;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2003.06.13.17.51.14;	author millert;	state Exp;
branches;
next	1.39;

1.39
date	2003.06.02.23.32.08;	author millert;	state Exp;
branches;
next	1.38;

1.38
date	2003.05.29.20.32.13;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2003.04.28.06.27.36;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2003.04.20.20.16.24;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2003.03.12.20.12.35;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	2002.10.18.15.38.11;	author millert;	state Exp;
branches;
next	1.33;

1.33
date	2002.10.16.15.56.42;	author millert;	state Exp;
branches;
next	1.32;

1.32
date	2002.10.15.21.25.31;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	2002.02.11.18.43.51;	author mpech;	state Exp;
branches;
next	1.30;

1.30
date	2002.01.16.18.16.56;	author marc;	state Exp;
branches;
next	1.29;

1.29
date	2002.01.15.21.20.09;	author marc;	state Exp;
branches;
next	1.28;

1.28
date	2001.12.21.11.41.49;	author mpech;	state Exp;
branches;
next	1.27;

1.27
date	2001.05.01.17.58.01;	author aaron;	state Exp;
branches;
next	1.26;

1.26
date	2001.02.07.19.04.14;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2000.11.09.23.58.55;	author aaron;	state Exp;
branches;
next	1.24;

1.24
date	2000.11.09.23.47.17;	author aaron;	state Exp;
branches;
next	1.23;

1.23
date	2000.11.09.17.51.58;	author aaron;	state Exp;
branches;
next	1.22;

1.22
date	2000.11.08.19.37.32;	author aaron;	state Exp;
branches;
next	1.21;

1.21
date	2000.10.18.06.55.09;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	2000.04.15.02.15.10;	author aaron;	state Exp;
branches;
next	1.19;

1.19
date	2000.03.23.21.10.23;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	2000.03.17.18.15.15;	author aaron;	state Exp;
branches;
next	1.17;

1.17
date	2000.03.14.21.31.41;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.05.00.28.52;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	99.07.06.11.20.46;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	99.06.04.02.45.14;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	99.06.03.09.50.33;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.05.23.14.10.48;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	98.12.19.18.39.05;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	98.12.07.23.45.46;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	98.11.28.03.20.34;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	98.11.06.00.34.09;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	98.09.23.00.13.49;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.09.14.22.13.52;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	97.04.06.06.11.13;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.02.20.06.54.35;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.06.23.14.20.39;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.11.06.43.42;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.73
log
@-E NONE has *never* worked; it was always -E none.  It's a dubious option
value that merits a warning in the manpage and using 2 billion will get
you practically the same effect, so delete the -E none support
@
text
@.\"	$OpenBSD: pax.1,v 1.72 2016/08/16 18:41:06 schwarze Exp $
.\"	$NetBSD: pax.1,v 1.3 1995/03/21 09:07:37 cgd Exp $
.\"
.\" Copyright (c) 1992 Keith Muller.
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Keith Muller of the University of California, San Diego.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)pax.1	8.4 (Berkeley) 4/18/94
.\"
.Dd $Mdocdate: August 16 2016 $
.Dt PAX 1
.Os
.Sh NAME
.Nm pax
.Nd read and write file archives and copy directory hierarchies
.Sh SYNOPSIS
.Nm pax
.Op Fl 0cdjnOvz
.Op Fl E Ar limit
.Op Fl f Ar archive
.Op Fl G Ar group
.Op Fl s Ar replstr
.Op Fl T Ar range
.Op Fl U Ar user
.Op Ar pattern ...
.Nm pax
.Fl r
.Op Fl 0cDdijknOuvYZz
.Op Fl E Ar limit
.Op Fl f Ar archive
.Op Fl G Ar group
.Op Fl o Ar options
.Op Fl p Ar string
.Op Fl s Ar replstr
.Op Fl T Ar range
.Op Fl U Ar user
.Op Ar pattern ...
.Nm pax
.Fl w
.Op Fl 0adHijLOPtuvXz
.Op Fl B Ar bytes
.Op Fl b Ar blocksize
.Op Fl f Ar archive
.Op Fl G Ar group
.Op Fl o Ar options
.Op Fl s Ar replstr
.Op Fl T Ar range
.Op Fl U Ar user
.Op Fl x Ar format
.Op Ar
.Nm pax
.Fl rw
.Op Fl 0DdHijkLlnOPtuvXYZ
.Op Fl G Ar group
.Op Fl p Ar string
.Op Fl s Ar replstr
.Op Fl T Ar range
.Op Fl U Ar user
.Op Ar
.Ar directory
.Sh DESCRIPTION
.Nm
will read, write, and list the members of an archive file
and will copy directory hierarchies.
.Nm
operation is independent of the specific archive format
and supports a wide variety of different archive formats.
A list of supported archive formats can be found under the description of the
.Fl x
option.
.Pp
The presence of the
.Fl r
and the
.Fl w
options specifies which of the following functional modes
.Nm
will operate under:
.Em list , read , write ,
and
.Em copy .
.Bl -tag -width 6n
.It Aq none
.Em List .
.Nm
will write to standard output
a table of contents of the members of the archive file read from
standard input, whose pathnames match the specified
.Ar pattern
arguments.
The table of contents contains one filename per line
and is written using single line buffering.
.It Fl r
.Em Read .
.Nm
extracts the members of the archive file read from the standard input,
with pathnames matching the specified
.Ar pattern
arguments.
The archive format and blocking is automatically determined on input.
When an extracted file is a directory, the entire file hierarchy
rooted at that directory is extracted.
All extracted files are created relative to the current file hierarchy.
The setting of ownership, access and modification times, and file mode of
the extracted files are discussed in more detail under the
.Fl p
option.
.It Fl w
.Em Write .
.Nm
writes an archive containing the
.Ar file
operands to standard output
using the specified archive format.
When no
.Ar file
operands are specified, a list of files to copy with one per line is read from
standard input.
When a
.Ar file
operand is also a directory, the entire file hierarchy rooted
at that directory will be included.
.It Fl rw
.Em Copy .
.Nm
copies the
.Ar file
operands to the destination
.Ar directory .
When no
.Ar file
operands are specified, a list of files to copy with one per line is read from
the standard input.
When a
.Ar file
operand is also a directory the entire file
hierarchy rooted at that directory will be included.
The effect of the
.Em copy
is as if the copied files were written to an archive file and then
subsequently extracted, except that there may be hard links between
the original and the copied files (see the
.Fl l
option below).
.Pp
.Sy Warning :
The destination
.Ar directory
must not be one of the
.Ar file
operands or a member of a file hierarchy rooted at one of the
.Ar file
operands.
The result of a
.Em copy
under these conditions is unpredictable.
.El
.Pp
While processing a damaged archive during a read or list operation,
.Nm
will attempt to recover from media defects and will search through the archive
to locate and process the largest number of archive members possible (see the
.Fl E
option for more details on error handling).
.Pp
The
.Ar directory
operand specifies a destination directory pathname.
If the
.Ar directory
operand does not exist, or it is not writable by the user,
or it is not of type directory,
.Nm
will exit with a non-zero exit status.
.Pp
The
.Ar pattern
operand is used to select one or more pathnames of archive members.
Archive members are selected using the pattern matching notation described
by
.Xr glob 3 .
When the
.Ar pattern
operand is not supplied, all members of the archive will be selected.
When a
.Ar pattern
matches a directory, the entire file hierarchy rooted at that directory will
be selected.
When a
.Ar pattern
operand does not select at least one archive member,
.Nm
will write these
.Ar pattern
operands in a diagnostic message to standard error
and then exit with a non-zero exit status.
.Pp
The
.Ar file
operand specifies the pathname of a file to be copied or archived.
When a
.Ar file
operand does not select at least one archive member,
.Nm
will write these
.Ar file
operand pathnames in a diagnostic message to standard error
and then exit with a non-zero exit status.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl 0
Use the NUL
.Pq Ql \e0
character as a pathname terminator, instead of newline
.Pq Ql \en .
This applies only to the pathnames read from standard input in
the write and copy modes,
and to the pathnames written to standard output in list mode.
This option is expected to be used in concert with the
.Fl print0
function in
.Xr find 1
or the
.Fl 0
flag in
.Xr xargs 1 .
.It Fl a
Append the given
.Ar file
operands
to the end of an archive that was previously written.
If an archive format is not specified with a
.Fl x
option, the format currently being used in the archive will be selected.
Any attempt to append to an archive in a format different from the
format already used in the archive will cause
.Nm
to exit immediately
with a non-zero exit status.
The blocking size used in the archive volume where writing starts
will continue to be used for the remainder of that archive volume.
.Pp
.Sy Warning :
Many storage devices are not able to support the operations necessary
to perform an append operation.
Any attempt to append to an archive stored on such a device may damage the
archive or have other unpredictable results.
Tape drives in particular are more likely to not support an append operation.
An archive stored in a regular file system file or on a disk device will
usually support an append operation.
.It Fl B Ar bytes
Limit the number of bytes written to a single archive volume to
.Ar bytes .
The
.Ar bytes
limit can end with
.Sq Li m ,
.Sq Li k ,
or
.Sq Li b
to specify multiplication by 1048576 (1M), 1024 (1K) or 512, respectively.
A pair of
.Ar bytes
limits can be separated by
.Sq Li x
to indicate a product.
.Pp
.Sy Warning :
Only use this option when writing an archive to a device which supports
an end of file read condition based on last (or largest) write offset
(such as a regular file or a tape drive).
The use of this option with a floppy or hard disk is not recommended.
.It Fl b Ar blocksize
When writing an archive,
block the output at a positive decimal integer number of
bytes per write to the archive file.
The
.Ar blocksize
must be a multiple of 512 bytes with a maximum of 64512 bytes.
Archive block sizes larger than 32256 bytes violate the POSIX
standard and will not be portable to all systems.
A
.Ar blocksize
can end with
.Sq Li k
or
.Sq Li b
to specify multiplication by 1024 (1K) or 512, respectively.
A pair of blocksizes can be separated by
.Sq Li x
to indicate a product.
A specific archive device may impose additional restrictions on the size
of blocking it will support.
When blocking is not specified, the default
.Ar blocksize
is dependent on the specific archive format being used (see the
.Fl x
option).
.It Fl c
Match all file or archive members
.Em except
those specified by the
.Ar pattern
and
.Ar file
operands.
.It Fl D
This option is the same as the
.Fl u
option, except that the file inode change time is checked instead of the
file modification time.
The file inode change time can be used to select files whose inode information
(e.g., UID, GID, etc.) is newer than a copy of the file in the destination
.Ar directory .
.It Fl d
Cause files of type directory being copied or archived, or archive members of
type directory being extracted, to match only the directory file or archive
member and not the file hierarchy rooted at the directory.
.It Fl E Ar limit
Limit the number of consecutive read faults while trying to read a flawed
archive to
.Ar limit .
With a positive
.Ar limit ,
.Nm
will attempt to recover from an archive read error and will
continue processing starting with the next file stored in the archive.
A
.Ar limit
of 0 will cause
.Nm
to stop operation after the first read error is detected on an archive volume.
The default
.Ar limit
is a small positive number of retries.
.It Fl f Ar archive
Specify
.Ar archive
as the pathname of the input or output archive, overriding the default
standard input (for list and read)
or standard output
(for write).
A single archive may span multiple files and different archive devices.
When required,
.Nm
will prompt for the pathname of the file or device of the next volume in the
archive.
.It Fl G Ar group
Select a file based on its
.Ar group
name, or when starting with a
.Cm # ,
a numeric GID.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl G
options may be supplied and checking stops with the first match.
.It Fl H
Follow only command-line symbolic links while performing a physical file
system traversal.
.It Fl i
Interactively rename files or archive members.
For each archive member matching a
.Ar pattern
operand or each file matching a
.Ar file
operand,
.Nm
will prompt to
.Pa /dev/tty
giving the name of the file, its file mode, and its modification time.
.Nm
will then read a line from
.Pa /dev/tty .
If this line is blank, the file or archive member is skipped.
If this line consists of a single period, the
file or archive member is processed with no modification to its name.
Otherwise, its name is replaced with the contents of the line.
.Nm
will immediately exit with a non-zero exit status if
.Dv EOF
is encountered when reading a response or if
.Pa /dev/tty
cannot be opened for reading and writing.
.It Fl j
Use bzip2 to compress (decompress) the archive while writing (reading).
The bzip2 utility must be installed separately.
Incompatible with
.Fl a .
.It Fl k
Do not overwrite existing files.
.It Fl L
Follow all symbolic links to perform a logical file system traversal.
.It Fl l
(The lowercase letter
.Dq ell . )
Link files.
In copy mode
.Pq Fl r Fl w ,
hard links are made between the source and destination file hierarchies
whenever possible.
.It Fl n
Select the first archive member that matches each
.Ar pattern
operand.
No more than one archive member is matched for each
.Ar pattern .
When members of type directory are matched, the file hierarchy rooted at that
directory is also matched (unless
.Fl d
is also specified).
.It Fl O
Force the archive to be one volume.
If a volume ends prematurely,
.Nm
will not prompt for a new volume.
This option can be useful for
automated tasks where error recovery cannot be performed by a human.
.It Fl o Ar options
Information to modify the algorithm for extracting or writing archive files
which is specific to the archive format specified by
.Fl x .
In general,
.Ar options
take the form:
.Ar name Ns = Ns Ar value .
.Pp
The following options are available for the
.Cm ustar
and old
.Bx
.Cm tar
formats:
.Pp
.Bl -tag -width Ds -compact
.It Cm write_opt=nodir
When writing archives, omit the storage of directories.
.El
.It Fl P
Do not follow symbolic links, perform a physical file system traversal.
This is the default mode.
.It Fl p Ar string
Specify one or more file characteristic options (privileges).
The
.Ar string
option-argument is a string specifying file characteristics to be retained or
discarded on extraction.
The string consists of the specification characters
.Cm a , e , m , o ,
and
.Cm p .
Multiple characteristics can be concatenated within the same string
and multiple
.Fl p
options can be specified.
The meanings of the specification characters are as follows:
.Bl -tag -width 2n
.It Cm a
Do not preserve file access times.
By default, file access times are preserved whenever possible.
.It Cm e
.Dq Preserve everything ,
the user ID, group ID, file mode bits,
file access time, and file modification time.
This is intended to be used by root,
someone with all the appropriate privileges, in order to preserve all
aspects of the files as they are recorded in the archive.
The
.Cm e
flag is the sum of the
.Cm o
and
.Cm p
flags.
.It Cm m
Do not preserve file modification times.
By default, file modification times are preserved whenever possible.
.It Cm o
Preserve the user ID and group ID.
.It Cm p
.Dq Preserve
the file mode bits.
This is intended to be used by a user with regular privileges
who wants to preserve all aspects of the file other than the ownership.
The file times are preserved by default, but two other flags are offered to
disable this and use the time of extraction instead.
.El
.Pp
In the preceding list,
.Sq preserve
indicates that an attribute stored in the archive is given to the
extracted file, subject to the permissions of the invoking
process.
Otherwise the attribute of the extracted file is determined as
part of the normal file creation action.
If neither the
.Cm e
nor the
.Cm o
specification character is specified, or the user ID and group ID are not
preserved for any reason,
.Nm
will not set the
.Dv S_ISUID
(setuid) and
.Dv S_ISGID
(setgid) bits of the file mode.
If the preservation of any of these items fails for any reason,
.Nm
will write a diagnostic message to standard error.
Failure to preserve these items will affect the final exit status,
but will not cause the extracted file to be deleted.
If the file characteristic letters in any of the string option-arguments are
duplicated or conflict with each other, the one(s) given last will take
precedence.
For example, if
.Fl p Ar eme
is specified, file modification times are still preserved.
.It Fl r
Read an archive file from standard input
and extract the specified
.Ar file
operands.
If any intermediate directories are needed in order to extract an archive
member, these directories will be created as if
.Xr mkdir 2
was called with the bitwise OR of
.Dv S_IRWXU , S_IRWXG ,
and
.Dv S_IRWXO
as the mode argument.
When the selected archive format supports the specification of linked
files and these files cannot be linked while the archive is being extracted,
.Nm
will write a diagnostic message to standard error
and exit with a non-zero exit status at the completion of operation.
.It Fl s Ar replstr
Modify the archive member names according to the substitution expression
.Ar replstr ,
using the syntax of the
.Xr ed 1
utility regular expressions.
.Ar file
or
.Ar pattern
arguments may be given to restrict the list of archive members to those
specified.
.Pp
The format of these regular expressions is:
.Pp
.Dl /old/new/[gp]
.Pp
As in
.Xr ed 1 ,
.Ar old
is a basic regular expression (see
.Xr re_format 7 )
and
.Ar new
can contain an ampersand
.Pq Ql & ,
.Ql \e Ns Em n
(where
.Em n
is a digit) back-references,
or subexpression matching.
The
.Ar old
string may also contain newline characters.
Any non-null character can be used as a delimiter
.Po
.Ql /
is shown here
.Pc .
Multiple
.Fl s
expressions can be specified.
The expressions are applied in the order they are specified on the
command line, terminating with the first successful substitution.
.Pp
The optional trailing
.Cm g
continues to apply the substitution expression to the pathname substring,
which starts with the first character following the end of the last successful
substitution.
The first unsuccessful substitution stops the operation of the
.Cm g
option.
The optional trailing
.Cm p
will cause the final result of a successful substitution to be written to
standard error in the following format:
.Pp
.D1 Em original-pathname No >> Em new-pathname
.Pp
File or archive member names that substitute to the empty string
are not selected and will be skipped.
.It Fl T Ar range
Allow files to be selected based on a file modification or inode change
time falling within the specified time range.
The range has the format:
.Sm off
.Bd -filled -offset indent
.Op Ar from_date
.Op \&, Ar to_date
.Op / Oo Cm c Oc Op Cm m
.Ed
.Sm on
.Pp
The dates specified by
.Ar from_date
to
.Ar to_date
are inclusive.
If only a
.Ar from_date
is supplied, all files with a modification or inode change time
equal to or younger are selected.
If only a
.Ar to_date
is supplied, all files with a modification or inode change time
equal to or older will be selected.
When the
.Ar from_date
is equal to the
.Ar to_date ,
only files with a modification or inode change time of exactly that
time will be selected.
.Pp
When
.Nm
is in write or copy mode, the optional trailing field
.Oo Cm c Oc Ns Op Cm m
can be used to determine which file time (inode change, file modification or
both) are used in the comparison.
If neither is specified, the default is to use file modification time only.
The
.Cm m
specifies the comparison of file modification time (the time when
the file was last written).
The
.Cm c
specifies the comparison of inode change time (the time when the file
inode was last changed; e.g., a change of owner, group, mode, etc).
When
.Cm c
and
.Cm m
are both specified, then the modification and inode change times are
both compared.
.Pp
The inode change time comparison is useful in selecting files whose
attributes were recently changed or selecting files which were recently
created and had their modification time reset to an older time (as what
happens when a file is extracted from an archive and the modification time
is preserved).
Time comparisons using both file times is useful when
.Nm
is used to create a time based incremental archive (only files that were
changed during a specified time range will be archived).
.Pp
A time range is made up of six different fields and each field must contain two
digits.
The format is:
.Pp
.Dl [[[[[cc]yy]mm]dd]HH]MM[.SS]
.Pp
Where
.Ar cc
is the first two digits of the year (the century),
.Ar yy
is the last two digits of the year,
the first
.Ar mm
is the month (from 01 to 12),
.Ar dd
is the day of the month (from 01 to 31),
.Ar HH
is the hour of the day (from 00 to 23),
.Ar MM
is the minute (from 00 to 59),
and
.Ar SS
is the seconds (from 00 to 59).
The minute field
.Ar MM
is required, while the other fields are optional and must be added in the
following order:
.Ar HH , dd , mm ,
.Ar yy , cc .
.Pp
The
.Ar SS
field may be added independently of the other fields.
Time ranges are relative to the current time, so
.Ic -T 1234/cm
would select all files with a modification or inode change time
of 12:34 PM today or later.
Multiple
.Fl T
time range can be supplied and checking stops with the first match.
.It Fl t
Reset the access times of any file or directory read or accessed by
.Nm
to be the same as they were before being read or accessed by
.Nm pax .
.It Fl U Ar user
Select a file based on its
.Ar user
name, or when starting with a
.Cm # ,
a numeric UID.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl U
options may be supplied and checking stops with the first match.
.It Fl u
Ignore files that are older (having a less recent file modification time)
than a pre-existing file or archive member with the same name.
During read,
an archive member with the same name as a file in the file system will be
extracted if the archive member is newer than the file.
During write,
a file system member with the same name as an archive member will be
written to the archive if it is newer than the archive member.
During copy,
the file in the destination hierarchy is replaced by the file in the source
hierarchy or by a link to the file in the source hierarchy if the file in
the source hierarchy is newer.
.It Fl v
During a list operation, produce a verbose table of contents using the format of the
.Xr ls 1
utility with the
.Fl l
option.
For pathnames representing a hard link to a previous member of the archive,
the output has the format:
.Pp
.Dl Em ls -l listing No == Em link-name
.Pp
For pathnames representing a symbolic link, the output has the format:
.Pp
.Dl Em ls -l listing No -> Em link-name
.Pp
Where
.Em ls -l listing
is the output format specified by the
.Xr ls 1
utility when used with the
.Fl l
option.
Otherwise for all the other operational modes
(read, write, and copy),
pathnames are written and flushed to standard error
without a trailing newline
as soon as processing begins on that file or
archive member.
The trailing newline
is not buffered and is written only after the file has been read or written.
.It Fl w
Write files to the standard output
in the specified archive format.
When no
.Ar file
operands are specified, standard input
is read for a list of pathnames with one per line without any leading or
trailing
.Aq blanks .
.It Fl X
When traversing the file hierarchy specified by a pathname,
do not descend into directories that have a different device ID.
See the
.Li st_dev
field as described in
.Xr stat 2
for more information about device IDs.
.It Fl x Ar format
Specify the output archive format, with the default format being
.Cm ustar .
.Nm
currently supports the following formats:
.Bl -tag -width "sv4cpio"
.It Cm bcpio
The old binary cpio format.
The default blocksize for this format is 5120 bytes.
This format is not very portable and should not be used when other formats
are available.
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
.It Cm cpio
The extended cpio interchange format specified in the
.St -p1003.2
standard.
The default blocksize for this format is 5120 bytes.
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
.It Cm sv4cpio
The System V release 4 cpio.
The default blocksize for this format is 5120 bytes.
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
.It Cm sv4crc
The System V release 4 cpio with file CRC checksums.
The default blocksize for this format is 5120 bytes.
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
.It Cm tar
The old
.Bx
tar format as found in
.Bx 4.3 .
The default blocksize for this format is 10240 bytes.
Pathnames stored by this format must be 100 characters or less in length.
Only regular files, hard links, soft links, and directories
will be archived (other file system types are not supported).
For backwards compatibility with even older tar formats, a
.Fl o
option can be used when writing an archive to omit the storage of directories.
This option takes the form:
.Pp
.Dl Fl o Cm write_opt=nodir
.It Cm ustar
The extended tar interchange format specified in the
.St -p1003.2
standard.
The default blocksize for this format is 10240 bytes.
Filenames stored by this format must be 100 characters or less in length;
the total pathname must be 256 characters or less.
.El
.Pp
.Nm
will detect and report any file that it is unable to store or extract
as the result of any specific archive format restrictions.
The individual archive formats may impose additional restrictions on use.
Typical archive format restrictions include (but are not limited to):
file pathname length, file size, link pathname length, and the type of the
file.
.It Fl Y
This option is the same as the
.Fl D
option, except that the inode change time is checked using the
pathname created after all the file name modifications have completed.
.It Fl Z
This option is the same as the
.Fl u
option, except that the modification time is checked using the
pathname created after all the file name modifications have completed.
.It Fl z
Use
.Xr gzip 1
to compress (decompress) the archive while writing (reading).
Incompatible with
.Fl a .
.El
.Pp
The options that operate on the names of files or archive members
.Po Fl c ,
.Fl i ,
.Fl j ,
.Fl n ,
.Fl s ,
.Fl u ,
.Fl v ,
.Fl D ,
.Fl G ,
.Fl T ,
.Fl U ,
.Fl Y ,
and
.Fl Z
.Pc
interact as follows.
.Pp
When extracting files during a read operation, archive members are
.Sq selected ,
based only on the user specified pattern operands as modified by the
.Fl c ,
.Fl n ,
.Fl u ,
.Fl D ,
.Fl G ,
.Fl T ,
.Fl U
options.
Then any
.Fl s
and
.Fl i
options will modify in that order, the names of these selected files.
Then the
.Fl Y
and
.Fl Z
options will be applied based on the final pathname.
Finally, the
.Fl v
option will write the names resulting from these modifications.
.Pp
When archiving files during a write operation,
or copying files during a copy operation,
archive members are
.Sq selected ,
based only on the user specified pathnames as modified by the
.Fl n ,
.Fl u ,
.Fl D ,
.Fl G ,
.Fl T ,
and
.Fl U
options (the
.Fl D
option only applies during a copy operation).
Then any
.Fl s
and
.Fl i
options will modify in that order, the names of these selected files.
Then during a copy operation the
.Fl Y
and the
.Fl Z
options will be applied based on the final pathname.
Finally, the
.Fl v
option will write the names resulting from these modifications.
.Pp
When one or both of the
.Fl u
or
.Fl D
options are specified along with the
.Fl n
option, a file is not considered selected unless it is newer
than the file to which it is compared.
.Sh ENVIRONMENT
.Bl -tag -width Fl
.It Ev TMPDIR
Path in which to store temporary files.
.El
.Sh EXIT STATUS
.Ex -std pax
.Sh EXAMPLES
Copy the contents of the current directory to the device
.Pa /dev/rst0 :
.Pp
.Dl $ pax -w -f /dev/rst0 \&.
.Pp
Give the verbose table of contents for an archive stored in
.Pa filename :
.Pp
.Dl $ pax -v -f filename
.Pp
This sequence of commands will copy the entire
.Pa olddir
directory hierarchy to
.Pa newdir :
.Bd -literal -offset indent
$ mkdir newdir
$ cd olddir
$ pax -rw . ../newdir
.Ed
.Pp
Extract files from the archive
.Pa a.pax .
Files rooted in
.Pa /usr
are extracted relative to the current working directory;
all other files are extracted to their unmodified path.
.Pp
.Dl $ pax -r -s ',^/usr/,,' -f a.pax
.Pp
This can be used to interactively select the files to copy from the
current directory to
.Pa dest_dir :
.Pp
.Dl $ pax -rw -i \&. dest_dir
.Pp
Extract all files from the archive
.Pa a.pax
which are owned by
.Em root
with group
.Em bin
and preserve all file permissions:
.Pp
.Dl $ pax -r -pe -U root -G bin -f a.pax
.Pp
Update (and list) only those files in the destination directory
.Pa /backup
which are older (less recent inode change or file modification times) than
files with the same name found in the source file tree
.Pa home :
.Pp
.Dl $ pax -r -w -v -Y -Z home /backup
.Sh DIAGNOSTICS
Whenever
.Nm
cannot create a file or a link when reading an archive or cannot
find a file when writing an archive, or cannot preserve the user ID,
group ID, or file mode when the
.Fl p
option is specified, a diagnostic message is written to standard error
and a non-zero exit status will be returned, but processing will continue.
In the case where
.Nm
cannot create a link to a file,
.Nm
will not create a second copy of the file.
.Pp
If the extraction of a file from an archive is prematurely terminated by
a signal or error,
.Nm
may have only partially extracted a file the user wanted.
Additionally, the file modes of extracted files and directories
may have incorrect file bits, and the modification and access times may be
wrong.
.Pp
If the creation of an archive is prematurely terminated by a signal or error,
.Nm
may have only partially created the archive, which may violate the specific
archive format specification.
.Pp
If while doing a copy,
.Nm
detects a file is about to overwrite itself, the file is not copied,
a diagnostic message is written to standard error
and when
.Nm
completes it will exit with a non-zero exit status.
.Sh SEE ALSO
.Xr cpio 1 ,
.Xr tar 1
.Sh STANDARDS
The
.Nm
utility is compliant with the
.St -p1003.1-2008
specification,
except that the
.Cm pax
archive format and the
.Cm listopt
keyword are unsupported.
.Pp
The flags
.Op Fl 0BDEGjOPTUYZz ,
the archive formats
.Cm bcpio ,
.Cm sv4cpio ,
.Cm sv4crc ,
and
.Cm tar ,
the
.Cm b , k ,
and
.Cm x
additions to the
.Fl b
flag,
and the flawed archive handling during list and read operations
are extensions to that specification.
.Sh HISTORY
A
.Nm
utility appeared in
.Bx 4.4 .
.Sh AUTHORS
.An Keith Muller
at the University of California, San Diego.
@


1.72
log
@Add HISTORY.
From Sevan Janiyan <venture37 at geeklan dot co dot uk>.
Verified using the CSRG archive CD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.71 2015/03/15 05:16:56 guenther Exp $
d37 1
a37 1
.Dd $Mdocdate: March 15 2015 $
a360 7
A
.Ar limit
of
.Li NONE
will cause
.Nm
to attempt to recover from read errors forever.
a363 7
.Pp
.Sy Warning :
Using this option with
.Li NONE
should be used with extreme caution as
.Nm
may get stuck in an infinite loop on a very badly flawed archive.
@


1.71
log
@pax -o only accepts 'write_opt=nodir' and not bare 'nodir'
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.70 2015/01/15 19:06:31 schwarze Exp $
d37 1
a37 1
.Dd $Mdocdate: January 15 2015 $
d1119 5
@


1.70
log
@remove .Tn; from Jan Stary <hans at stare dot cz>
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.69 2014/09/08 01:27:54 schwarze Exp $
d37 1
a37 1
.Dd $Mdocdate: September 8 2014 $
a480 1
.It Cm nodir
@


1.69
log
@obvious cases of missing .An;
found with the new mandoc(1) MANDOCERR_AN_MISSING warning;
no text changes
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.68 2014/06/04 07:57:27 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: June 4 2014 $
d308 1
a308 2
Archive block sizes larger than 32256 bytes violate the
.Tn POSIX
@


1.68
log
@undo my "no TZ support" notes; guenther says they're wrong
ok guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.67 2014/04/18 22:23:53 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: April 18 2014 $
d1122 2
a1123 1
Keith Muller at the University of California, San Diego.
@


1.67
log
@tweak;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.66 2014/04/15 21:21:20 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: April 15 2014 $
d1100 1
a1100 1
archive format, the
d1102 1
a1102 3
keyword, and the
.Ev TZ
environment variable are unsupported.
@


1.66
log
@note some unsupported features, and clean up some macros - in particular,
whack a dose of unneccessary Em;

ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.65 2014/04/15 17:02:54 jmc Exp $
d1100 1
a1100 1
archive format and the
d1102 1
a1102 1
keyword are unsupported, and the
d1104 1
a1104 1
environment variable is unused.
@


1.65
log
@flesh out STANDARDS; ok millert sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.64 2014/02/13 07:30:39 guenther Exp $
d37 1
a37 1
.Dd $Mdocdate: February 13 2014 $
a43 1
.Bk -words
a87 1
.Ek
d110 1
a110 1
.It \*(Ltnone\*(Gt
d186 1
a186 5
While processing a damaged archive during a
.Em read
or
.Em list
operation,
d296 1
a296 1
.Em Warning :
d302 1
a302 3
When
.Em writing
an archive,
d318 1
a318 3
A pair of
.Ar blocksizes
can be separated by
d373 1
a373 1
.Em Warning :
d383 1
a383 4
standard input (for
.Em list
and
.Em read )
d385 1
a385 2
(for
.Em write ) .
d444 1
a444 3
In the
.Em copy
mode
d475 1
a475 1
.Em ustar
d478 1
a478 1
.Em tar
d512 1
a512 2
This is intended to be used by
.Em root ,
d530 2
a531 4
This is intended to be used by a
.Em user
with regular privileges who wants to preserve all aspects of the file other
than the ownership.
d552 1
a552 2
.Em ( setuid )
and
d554 1
a554 2
.Em ( setgid )
bits of the file mode.
d641 1
a641 1
.D1 Em original-pathname No \*(Gt\*(Gt Em new-pathname
d679 1
a679 5
is in the
.Em write
or
.Em copy
mode, the optional trailing field
d770 1
a770 2
During
.Em read ,
d773 1
a773 2
During
.Em write ,
d776 1
a776 2
During
.Em copy ,
d781 1
a781 3
During a
.Em list
operation, produce a verbose table of contents using the format of the
d789 1
a789 1
.Dl Em ls -l listing Li == Em link-name
d793 1
a793 1
.Dl Em ls -l listing Li -\*(Gt Em link-name
d803 1
a803 2
.Po Em read , write , No and Em copy
.Pc ,
d872 1
a872 6
Only
.Em regular
files,
.Em hard links , soft links ,
and
.Em directories
d932 1
a932 3
When extracting files during a
.Em read
operation, archive members are
d957 3
a959 5
When archiving files during a
.Em write
operation, or copying files during a
.Em copy
operation, archive members are
d977 1
a977 3
Then during a
.Em copy
operation the
d1000 1
a1000 10
The
.Nm
utility exits with one of the following values:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It 0
All files were processed successfully.
.It 1
An error occurred.
.El
d1045 1
a1045 1
.Dl "$ pax -r -pe -U root -G bin -f a.pax"
d1053 1
a1053 1
.Dl "$ pax -r -w -v -Y -Z home /backup"
d1082 1
a1082 2
If while doing a
.Em copy ,
d1099 4
a1102 2
.Em pax
archive format is unsupported and the
d1109 3
a1111 3
.Em bcpio ,
.Em sv4cpio ,
.Em sv4crc ,
d1113 1
a1113 1
.Em tar ,
d1121 1
a1121 5
and the flawed archive handling during
.Em list
and
.Em read
operations
@


1.64
log
@Don't use use .Tn with AND/OR/NOT
Phrase any "The _flags_ argument is the ..." line consistently,
eliminating unnecessary use of 'inclusive' and saying "zero or more"
or "one or more" as appropriate

ok millert@@ jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.63 2014/01/09 03:13:24 guenther Exp $
d37 1
a37 1
.Dd $Mdocdate: January 9 2014 $
d1149 6
a1154 1
specification.
d1162 1
d1164 7
@


1.63
log
@Symlinks are displayed with '->', not '=>'
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.62 2013/03/27 17:14:10 zhuk Exp $
d37 1
a37 1
.Dd $Mdocdate: March 27 2013 $
d595 1
a595 3
was called with the bitwise inclusive
.Tn OR
of
@


1.62
log
@Enable support for write_opt=nodir for ustar archives which helps to fix
issues with some crappy tar archive readers out there that rely on the
fact that directory entries ends up with "/" when created by GNU Tar, and
now I'm finishing this commit message by mentioning people who gave input
and okays: deraadt@@ millert@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.61 2010/09/19 20:55:25 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: September 19 2010 $
d825 1
a825 1
.Dl Em ls -l listing Li =\*(Gt Em link-name
@


1.61
log
@more wacky macro fixing;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.60 2010/09/03 09:53:20 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: September 3 2010 $
d490 3
a492 1
The following options are available for the old
d495 1
a495 1
format:
@


1.60
log
@add an EXIT STATUS section for /bin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.59 2010/07/22 08:09:29 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: July 22 2010 $
d672 3
a674 3
.Oo Ar from_date Oc Oo ,
.Ar to_date Oc Oo /
.Oo Cm c Oc Op Cm m Oc
d705 1
a705 1
.Oo Cm c Oc Op Cm m
@


1.59
log
@move exit returns blurb out of DIAGNOSTICS; from daniel dickman
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.58 2009/08/16 09:41:08 sobrado Exp $
d37 1
a37 1
.Dd $Mdocdate: August 16 2009 $
d1036 6
a1041 1
.Pp
d1046 1
a1046 1
.Bl -tag -width 2n -offset indent -compact
a1050 5
.El
.Sh ENVIRONMENT
.Bl -tag -width Fl
.It Ev TMPDIR
Path in which to store temporary files.
@


1.58
log
@replace ".Ar file ..." with ".Ar" whenever possible.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.57 2009/08/05 13:38:05 martynas Exp $
d37 1
a37 1
.Dd $Mdocdate: August 5 2009 $
d1036 11
a1105 9
.Nm
will exit with one of the following values:
.Bl -tag -width 2n -offset indent
.It 0
All files were processed successfully.
.It 1
An error occurred.
.El
.Pp
@


1.57
log
@ustar format consists of prefix = 155 octets;  name = 100 octets
prefix (155) + / (1) + name (100) = 256 characters;  not 255 characters
ok otto@@, millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.56 2009/02/08 17:33:01 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: February 8 2009 $
d78 1
a78 1
.Op Ar file ...
d87 1
a87 1
.Op Ar file ...
@


1.56
log
@updates to IEEE Std 1003.1-2008;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.55 2009/02/08 17:15:09 jmc Exp $
d922 1
a922 1
the total pathname must be 255 characters or less.
@


1.55
log
@bump the posix reference in STANDARDS to IEEE Std 1003.1-2008, with a few
updates to follow;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.54 2008/06/11 07:42:50 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: June 11 2008 $
d1150 1
a1150 1
.Op Fl 0BDEGHjLOPTUYZz ,
@


1.54
log
@(sorry pval) some missing -j bits;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.53 2008/06/11 00:49:08 pvalchev Exp $
d1146 1
a1146 1
.St -p1003.1-2004
@


1.53
log
@Add tar -j option that calls bzip2 for compress/decompress. Requires
you to install the bzip2 pkg (or add bzip2 in another way).

ok millert@@ otto@@ deraadt@@ and 'many others'@@
man page tweak from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.52 2007/05/31 19:19:15 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: May 31 2007 $
d1150 1
a1150 1
.Op Fl 0BDEGHLOPTUYZz ,
@


1.52
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.51 2007/05/29 15:04:59 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate$
d46 1
a46 1
.Op Fl 0cdnOvz
d56 1
a56 1
.Op Fl 0cDdiknOuvYZz
d68 1
a68 1
.Op Fl 0adHiLOPtuvXz
d81 1
a81 1
.Op Fl 0DdHikLlnOPtuvXYZ
d445 5
d953 1
@


1.51
log
@- consistent STANDARDS blurb
- note which options are extensions to POSIX

discussed w/ deraadt otto millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.50 2007/03/06 14:40:22 jmc Exp $
d37 1
a37 1
.Dd April 18, 1994
@


1.50
log
@clarify an example; from patrick keshishian
help/ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.49 2007/02/24 09:50:55 jmc Exp $
d1139 6
a1144 17
utility is a superset of the
.St -p1003.2
standard.
The options
.Fl 0 ,
.Fl B ,
.Fl D ,
.Fl E ,
.Fl G ,
.Fl H ,
.Fl L ,
.Fl O ,
.Fl P ,
.Fl T ,
.Fl U ,
.Fl Y ,
.Fl Z ,
d1154 2
a1155 3
operations are extensions to the
.Tn POSIX
standard.
@


1.49
log
@sort options; sync usage(); from Igor Sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.48 2006/05/12 11:55:58 jmc Exp $
d1056 3
a1058 3
Read the archive
.Pa a.pax ,
with all files rooted in
d1060 2
a1061 1
into the archive extracted relative to the current directory:
d1063 1
a1063 1
.Dl $ pax -r -s ',^//*usr//*,,' -f a.pax
@


1.48
log
@32256 is the (posix) block size limit, not archive size limit;

from coleman kane;
ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.47 2006/03/25 07:53:47 ray Exp $
d46 1
a46 1
.Op Fl 0cdOnvz
d56 1
a56 1
.Op Fl 0cDdikOnuvYZz
d80 1
a80 2
.Fl r
.Fl w
d152 1
a152 1
.It Fl r Fl w
d657 1
a657 1
.D1 Em original-pathname No >> Em new-pathname
d859 2
a860 4
.It Cm cpio
The extended cpio interchange format specified in the
.St -p1003.2
standard.
d862 2
d868 4
a871 2
.It Cm bcpio
The old binary cpio format.
a872 2
This format is not very portable and should not be used when other formats
are available.
@


1.47
log
@Use correct directory in example.

From Alf Schlichting.

OK jmc@@ and otto@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.46 2005/06/02 19:06:43 jaredy Exp $
d317 1
a317 1
Archives larger than 32256 bytes violate the
@


1.46
log
@sort options
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.45 2005/06/02 16:27:08 jaredy Exp $
d1054 1
a1054 1
$ pax -rw . newdir
@


1.45
log
@- simplify usage
- rearrange examples
- layout tweaks
- minor macro, punctuation, etc. fixes

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.44 2004/02/19 19:15:32 jmc Exp $
a82 1
.Op Fl E Ar limit
d246 16
a261 29
.It Fl r
Read an archive file from standard input
and extract the specified
.Ar file
operands.
If any intermediate directories are needed in order to extract an archive
member, these directories will be created as if
.Xr mkdir 2
was called with the bitwise inclusive
.Tn OR
of
.Dv S_IRWXU , S_IRWXG ,
and
.Dv S_IRWXO
as the mode argument.
When the selected archive format supports the specification of linked
files and these files cannot be linked while the archive is being extracted,
.Nm
will write a diagnostic message to standard error
and exit with a non-zero exit status at the completion of operation.
.It Fl w
Write files to the standard output
in the specified archive format.
When no
.Ar file
operands are specified, standard input
is read for a list of pathnames with one per line without any leading or
trailing
.Aq blanks .
d286 22
a307 16
.It Fl 0
Use the NUL
.Pq Ql \e0
character as a pathname terminator, instead of newline
.Pq Ql \en .
This applies only to the pathnames read from standard input in
the write and copy modes,
and to the pathnames written to standard output in list mode.
This option is expected to be used in concert with the
.Fl print0
function in
.Xr find 1
or the
.Fl 0
flag in
.Xr xargs 1 .
d347 8
d359 31
d406 16
d448 2
d470 7
d496 3
d581 20
d662 11
a672 31
.It Fl t
Reset the access times of any file or directory read or accessed by
.Nm
to be the same as they were before being read or accessed by
.Nm pax .
.It Fl u
Ignore files that are older (having a less recent file modification time)
than a pre-existing file or archive member with the same name.
During
.Em read ,
an archive member with the same name as a file in the file system will be
extracted if the archive member is newer than the file.
During
.Em write ,
a file system member with the same name as an archive member will be
written to the archive if it is newer than the archive member.
During
.Em copy ,
the file in the destination hierarchy is replaced by the file in the source
hierarchy or by a link to the file in the source hierarchy if the file in
the source hierarchy is newer.
.It Fl v
During a
.Em list
operation, produce a verbose table of contents using the format of the
.Xr ls 1
utility with the
.Fl l
option.
For pathnames representing a hard link to a previous member of the archive,
the output has the format:
d674 142
a815 1
.Dl Em ls -l listing Li == Em link-name
d837 17
a927 223
.It Fl z
Use
.Xr gzip 1
to compress (decompress) the archive while writing (reading).
Incompatible with
.Fl a .
.It Fl B Ar bytes
Limit the number of bytes written to a single archive volume to
.Ar bytes .
The
.Ar bytes
limit can end with
.Sq Li m ,
.Sq Li k ,
or
.Sq Li b
to specify multiplication by 1048576 (1M), 1024 (1K) or 512, respectively.
A pair of
.Ar bytes
limits can be separated by
.Sq Li x
to indicate a product.
.Pp
.Em Warning :
Only use this option when writing an archive to a device which supports
an end of file read condition based on last (or largest) write offset
(such as a regular file or a tape drive).
The use of this option with a floppy or hard disk is not recommended.
.It Fl D
This option is the same as the
.Fl u
option, except that the file inode change time is checked instead of the
file modification time.
The file inode change time can be used to select files whose inode information
(e.g., UID, GID, etc.) is newer than a copy of the file in the destination
.Ar directory .
.It Fl E Ar limit
Limit the number of consecutive read faults while trying to read a flawed
archive to
.Ar limit .
With a positive
.Ar limit ,
.Nm
will attempt to recover from an archive read error and will
continue processing starting with the next file stored in the archive.
A
.Ar limit
of 0 will cause
.Nm
to stop operation after the first read error is detected on an archive volume.
A
.Ar limit
of
.Li NONE
will cause
.Nm
to attempt to recover from read errors forever.
The default
.Ar limit
is a small positive number of retries.
.Pp
.Em Warning :
Using this option with
.Li NONE
should be used with extreme caution as
.Nm
may get stuck in an infinite loop on a very badly flawed archive.
.It Fl G Ar group
Select a file based on its
.Ar group
name, or when starting with a
.Cm # ,
a numeric GID.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl G
options may be supplied and checking stops with the first match.
.It Fl H
Follow only command-line symbolic links while performing a physical file
system traversal.
.It Fl L
Follow all symbolic links to perform a logical file system traversal.
.It Fl O
Force the archive to be one volume.
If a volume ends prematurely,
.Nm
will not prompt for a new volume.
This option can be useful for
automated tasks where error recovery cannot be performed by a human.
.It Fl P
Do not follow symbolic links, perform a physical file system traversal.
This is the default mode.
.It Fl T Ar range
Allow files to be selected based on a file modification or inode change
time falling within the specified time range.
The range has the format:
.Sm off
.Bd -filled -offset indent
.Oo Ar from_date Oc Oo ,
.Ar to_date Oc Oo /
.Oo Cm c Oc Op Cm m Oc
.Ed
.Sm on
.Pp
The dates specified by
.Ar from_date
to
.Ar to_date
are inclusive.
If only a
.Ar from_date
is supplied, all files with a modification or inode change time
equal to or younger are selected.
If only a
.Ar to_date
is supplied, all files with a modification or inode change time
equal to or older will be selected.
When the
.Ar from_date
is equal to the
.Ar to_date ,
only files with a modification or inode change time of exactly that
time will be selected.
.Pp
When
.Nm
is in the
.Em write
or
.Em copy
mode, the optional trailing field
.Oo Cm c Oc Op Cm m
can be used to determine which file time (inode change, file modification or
both) are used in the comparison.
If neither is specified, the default is to use file modification time only.
The
.Cm m
specifies the comparison of file modification time (the time when
the file was last written).
The
.Cm c
specifies the comparison of inode change time (the time when the file
inode was last changed; e.g., a change of owner, group, mode, etc).
When
.Cm c
and
.Cm m
are both specified, then the modification and inode change times are
both compared.
The inode change time comparison is useful in selecting files whose
attributes were recently changed or selecting files which were recently
created and had their modification time reset to an older time (as what
happens when a file is extracted from an archive and the modification time
is preserved).
Time comparisons using both file times is useful when
.Nm
is used to create a time based incremental archive (only files that were
changed during a specified time range will be archived).
.Pp
A time range is made up of six different fields and each field must contain two
digits.
The format is:
.Pp
.Dl [[[[[cc]yy]mm]dd]HH]MM[.SS]
.Pp
Where
.Ar cc
is the first two digits of the year (the century),
.Ar yy
is the last two digits of the year,
the first
.Ar mm
is the month (from 01 to 12),
.Ar dd
is the day of the month (from 01 to 31),
.Ar HH
is the hour of the day (from 00 to 23),
.Ar MM
is the minute (from 00 to 59),
and
.Ar SS
is the seconds (from 00 to 59).
The minute field
.Ar MM
is required, while the other fields are optional and must be added in the
following order:
.Ar HH , dd , mm ,
.Ar yy , cc .
.Pp
The
.Ar SS
field may be added independently of the other fields.
Time ranges are relative to the current time, so
.Ic -T 1234/cm
would select all files with a modification or inode change time
of 12:34 PM today or later.
Multiple
.Fl T
time range can be supplied, and checking stops with the first match.
.It Fl U Ar user
Select a file based on its
.Ar user
name, or when starting with a
.Cm # ,
a numeric UID.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl U
options may be supplied and checking stops with the first match.
.It Fl X
When traversing the file hierarchy specified by a pathname,
do not descend into directories that have a different device ID.
See the
.Li st_dev
field as described in
.Xr stat 2
for more information about device IDs.
d938 6
@


1.44
log
@filenames can have 100 chars, total pathname 255 in ustar format; not 250;
from pb@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.43 2004/01/23 23:08:45 jmc Exp $
d44 1
d46 2
a47 2
.Op Fl 0cdnvz
.Bk -words
d49 1
a49 2
.Ek
.Bk -words
d51 1
a51 3
.Ar ...
.Ek
.Bk -words
a52 14
.Ar ...
.Ek
.Bk -words
.Op Fl G Ar group
.Ar ...
.Ek
.Bk -words
.Oo
.Fl T
.Op Ar from_date
.Op Ar ,to_date
.Oc
.Ar ...
.Ek
d56 2
a57 2
.Op Fl cdiknuvzDYZ
.Bk -words
d59 1
a59 2
.Ek
.Bk -words
a60 3
.Ar ...
.Ek
.Bk -words
a61 3
.Ar ...
.Ek
.Bk -words
d63 1
a63 4
.Ar ...
.Ek
.Op Fl E Ar limit
.Bk -words
a64 14
.Ar ...
.Ek
.Bk -words
.Op Fl G Ar group
.Ar ...
.Ek
.Bk -words
.Oo
.Fl T
.Op Ar from_date
.Op Ar ,to_date
.Oc
.Ar ...
.Ek
d68 2
a69 2
.Op Fl 0dituvzHLPX
.Bk -words
a70 3
.Ek
.Oo
.Op Fl a
d72 2
a73 5
.Oc
.Bk -words
.Op Fl x Ar format
.Ek
.Bk -words
d75 1
a75 7
.Ar ...
.Ek
.Bk -words
.Op Fl o Ar options
.Ar ...
.Ek
.Bk -words
d77 1
a77 18
.Ar ...
.Ek
.Bk -words
.Op Fl G Ar group
.Ar ...
.Ek
.Bk -words
.Op Fl B Ar bytes
.Ek
.Bk -words
.Oo
.Fl T
.Op Ar from_date
.Op Ar ,to_date
.Op Ar /[c][m]
.Oc
.Ar ...
.Ek
d82 3
a84 2
.Op Fl 0diklntuvDHLPXYZ
.Bk -words
a85 3
.Ar ...
.Ek
.Bk -words
d87 1
a87 3
.Ar ...
.Ek
.Bk -words
a88 15
.Ar ...
.Ek
.Bk -words
.Op Fl G Ar group
.Ar ...
.Ek
.Bk -words
.Oo
.Fl T
.Op Ar from_date
.Op Ar ,to_date
.Op Ar /[c][m]
.Oc
.Ar ...
.Ek
d91 1
d94 1
a94 1
will read, write, and list the members of an archive file,
d97 1
a97 1
operation is independent of the specific archive format,
d114 1
a114 1
.It <none>
d120 2
a121 1
.Ar patterns .
d129 2
a130 1
.Ar patterns .
d177 1
a177 1
.Em Warning :
d216 1
a216 1
.Xr fnmatch 3 .
d250 2
a251 1
.Ar files .
d277 3
a279 2
Append
.Ar files
d292 1
a292 1
.Em Warning :
d403 1
a403 1
.Dq ell. )
d429 11
d460 1
a460 1
.Sq Preserve everything ,
d480 1
a480 1
.Sq Preserve
d520 1
a520 1
.Dl Fl p Ar eme
d523 1
a523 5
Modify the file or archive member names specified by the
.Ar pattern
or
.Ar file
operands according to the substitution expression
d528 6
d535 1
d537 1
d540 5
a544 3
.Cm old
is a basic regular expression and
.Cm new
d547 1
a547 1
.Ql \en
d549 1
a549 1
.Ar n
d553 1
a553 1
.Cm old
d565 1
d578 3
a580 1
.Dl <original pathname> >> <new pathname>
d614 3
a616 1
.Dl <ls -l listing> == <link name>
d618 6
a623 2
.Dl <ls -l listing> => <link name>
Where <ls -l listing> is the output format specified by the
d629 1
a629 1
.Po Em read , write , Li and Em copy
d639 1
a639 1
.Ar ustar .
d643 1
a643 1
.It Ar cpio
d652 1
a652 1
.It Ar bcpio
d661 1
a661 1
.It Ar sv4cpio
d668 2
a669 2
.It Ar sv4crc
The System V release 4 cpio with file crc checksums.
d675 5
a679 2
.It Ar tar
The old BSD tar format as found in BSD4.3.
d693 1
d695 1
a695 1
.It Ar ustar
d783 1
a783 1
a numeric gid.
d806 1
a806 1
.It Fl T Ar [from_date][,to_date][/[c][m]]
d808 11
a818 1
time falling within a specified time range of
d822 1
a822 1
(the dates are inclusive).
d845 1
a845 1
.Ar [c][m]
d850 1
a850 1
.Ar m
d854 1
a854 1
.Ar c
d858 1
a858 1
.Ar c
d860 1
a860 1
.Ar m
d876 1
d878 1
d880 1
a880 1
.Cm cc
d882 1
a882 1
.Cm yy
d885 1
a885 1
.Cm mm
d887 1
a887 1
.Cm dd
d889 1
a889 1
.Cm HH
d891 1
a891 1
.Cm MM
d894 1
a894 1
.Cm SS
d897 1
a897 1
.Cm MM
d900 3
a902 4
.br
.Cm \&	HH , dd , mm ,
.Cm yy , cc .
.br
d904 1
a904 1
.Cm SS
d907 1
a907 1
.Dl Fl T Ar 1234/cm
d912 1
a912 1
time range can be supplied and checking stops with the first match.
d1037 2
a1038 4
.Li $ pax -w -f /dev/rst0 \&.
.Pp
Copies the contents of the current directory to the device
.Pa /dev/rst0 .
d1040 1
a1040 1
.Li $ pax -v -f filename
d1042 2
a1043 2
Gives the verbose table of contents for an archive stored in
.Pa filename .
d1045 1
a1045 3
.Li $ mkdir newdir ;
.Li cd olddir ;
.Li pax -rw \&. newdir
d1050 6
a1055 1
.Pa newdir .
d1057 1
a1057 3
.Li $ pax -r -s ',^//*usr//*,,' -f a.pax
.Pp
Reads the archive
d1061 1
a1061 1
into the archive extracted relative to the current directory.
d1063 1
a1063 1
.Li $ pax -rw -i \&. dest_dir
d1065 3
a1067 3
Can be used to interactively select the files to copy from the current
directory to
.Pa dest_dir .
d1069 1
a1069 1
.Li "$ pax -r -pe -U root -G bin -f a.pax"
d1077 1
a1077 1
and preserve all file permissions.
d1079 1
a1079 1
.Li "$ pax -r -w -v -Y -Z home /backup"
d1085 3
a1087 1
.Pa home .
d1091 1
a1091 1
.Bl -tag -width 2n
d1143 1
d1157 4
a1160 4
.Ar bcpio ,
.Ar sv4cpio ,
.Ar sv4crc ,
.Ar tar ,
d1162 1
a1162 1
.Ar list
d1164 1
a1164 1
.Ar read
@


1.43
log
@`Ns' implies `No', so `Ns No' -> `Ns'; (even simpler in adduser(8))
discussed with todd@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.42 2003/11/21 20:54:02 jmc Exp $
d753 2
a754 1
Pathnames stored by this format must be 250 characters or less in length.
@


1.42
log
@grammar improvements from Jared Yanovich;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.41 2003/10/22 20:08:45 jmc Exp $
d511 1
a511 1
.Ar name Ns No = Ns Ar value .
@


1.41
log
@quote args to make them expand properly;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.40 2003/06/13 17:51:14 millert Exp $
d526 1
a526 1
The meaning of the specification characters are as follows:
d604 1
a604 1
The format of these regular expressions are:
d633 1
a633 1
continues to apply the substitution expression to the pathname substring
d706 1
a706 1
by this format) which may be truncated by this format is detected by
d715 1
a715 1
by this format) which may be truncated by this format is detected by
d722 1
a722 1
by this format) which may be truncated by this format is detected by
d729 1
a729 1
by this format) which may be truncated by this format is detected by
d1162 1
a1162 1
may have only partially created the archive which may violate the specific
@


1.40
log
@Add a -0 flag to make pax use a NUL instead of a newline as the
pathname separator.  Works in list mode as well as read/copy mode.
Based on a patch from David Leonard; closes PR 3310
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.39 2003/06/02 23:32:08 millert Exp $
d1111 1
a1111 1
.Li $ pax -r -pe -U root -G bin -f a.pax
@


1.39
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.38 2003/05/29 20:32:13 jmc Exp $
d45 1
a45 1
.Op Fl cdnvz
d108 1
a108 1
.Op Fl dituvzHLPX
d151 1
a151 1
.Op Fl diklntuvDHLPXYZ
d383 16
@


1.38
log
@- section reorder
- removed unnecessary .Pp and .Ns
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.37 2003/04/28 06:27:36 jmc Exp $
d19 1
a19 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.37
log
@typos;

suggestions, corrections and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.36 2003/04/20 20:16:24 jmc Exp $
d474 1
a474 1
.Dq ell. Ns )
d1060 5
a1160 5
.Sh ENVIRONMENT
.Bl -tag -width Fl
.It Ev TMPDIR
Path in which to store temporary files.
.El
a1163 2
.Sh AUTHORS
Keith Muller at the University of California, San Diego.
d1195 2
@


1.36
log
@incorrect macro, with too many arguments;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.35 2003/03/12 20:12:35 deraadt Exp $
d319 1
a319 1
operands in a diagnostic message to standard error.
d542 1
a542 1
This intended to be used by a
@


1.35
log
@more .Li
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.34 2002/10/18 15:38:11 millert Exp $
d928 4
a931 1
.Dl Cm HH , dd , mm , yy , cc .
@


1.34
log
@Pull in some changes from NetBSD
o When extracting GNU tar archives, honor @@LongLink long links/files
o Add an option to prevent pax from prompting for the next volume
  upon premature end of archive.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.33 2002/10/16 15:56:42 millert Exp $
d1058 1
a1058 1
.Cm $ pax -w -f /dev/rst0 \&.
d1063 1
a1063 1
.Cm $ pax -v -f filename
d1068 3
a1070 3
.Cm $ mkdir newdir ;
.Cm cd olddir ;
.Cm pax -rw \&. newdir
d1077 1
a1077 1
.Cm $ pax -r -s ',^//*usr//*,,' -f a.pax
d1085 1
a1085 1
.Cm $ pax -rw -i \&. dest_dir
d1091 1
a1091 1
.Cm $ pax -r -pe -U root -G bin -f a.pax
d1101 1
a1101 1
.Cm "$ pax -r -w -v -Y -Z home /backup"
@


1.33
log
@Sync date parsing code with that in date(1) (which is obviously what pax's
date code was based on).  It is now possible to specify 4 digit years.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.32 2002/10/15 21:25:31 millert Exp $
d836 7
d1176 1
@


1.32
log
@Time ranges were documented incorrectly; Christian von Roques
We should probably add support for specifying the century too...
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.31 2002/02/11 18:43:51 mpech Exp $
d899 1
a899 1
.Dl [[[[yy]mm]dd]hh]mm[.ss]
d901 2
d910 1
a910 1
.Cm hh
d912 1
a912 2
the second
.Cm mm
d915 1
a915 1
.Cm ss
d918 1
a918 1
.Cm mm
d921 1
a921 1
.Dl Cm hh , dd , mm , yy .
d923 1
a923 1
.Cm ss
@


1.31
log
@Initial patch.
When you give command examples in a manual page prefix them with
	$ command
or
	# command

deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.30 2002/01/16 18:16:56 marc Exp $
d899 1
a899 1
.Dl [yy[mm[dd[hh]]]]mm[.ss]
@


1.30
log
@A better way to escape the punctuation chars in the examples.
Fix other examples.   Thanks to wiz@@danbala.ifoer.tuwien.ac.at
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.29 2002/01/15 21:20:09 marc Exp $
d1050 1
a1050 1
.Cm pax -w -f /dev/rst0 \&.
d1055 1
a1055 1
.Cm pax -v -f filename
d1060 1
a1060 1
.Cm mkdir newdir ;
d1069 1
a1069 1
.Cm pax -r -s ',^//*usr//*,,' -f a.pax
d1077 1
a1077 1
.Cm pax -rw -i \&. dest_dir
d1083 1
a1083 1
.Cm pax -r -pe -U root -G bin -f a.pax
d1093 1
a1093 1
.Cm "pax -r -w -v -Y -Z home /backup"
@


1.29
log
@sometimes trailing spaces are required for proper formating
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.28 2001/12/21 11:41:49 mpech Exp $
d1050 1
a1050 1
.Cm pax -w -f /dev/rst0 .\ \" don't remove space after .\
d1060 3
a1062 3
.Cm mkdir newdir
.Cm cd olddir
.Cm pax -rw .\ newdir
d1077 1
a1077 1
.Cm pax -rw -i .\ dest_dir
@


1.28
log
@Initial patch for a new mdoc issue.
Powered by @@mantoya:
o) kill extra line in the end of file;
o) kill extra space in the end of line;
o) replace blank lines with .Pp;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.27 2001/05/01 17:58:01 aaron Exp $
d1050 1
a1050 1
.Cm pax -w -f /dev/rst0 .\
@


1.27
log
@Remove completely redundant introductory sentences in ENVIRONMENT sections.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.26 2001/02/07 19:04:14 millert Exp $
d1050 1
a1050 1
.Cm pax -w -f /dev/rst0 .\ 
@


1.26
log
@Honor TMPDIR environment variable and document the fact.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.25 2000/11/09 23:58:55 aaron Exp $
a1145 2
The following environment variables affect the execution of
.Nm pax :
@


1.25
log
@- Some section shuffling: conform to the standard order documented in mdoc(7)
- .Sh AUTHOR -> .Sh AUTHORS
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.24 2000/11/09 23:47:17 aaron Exp $
d1145 7
@


1.24
log
@Insert some missing commas.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.23 2000/11/09 17:51:58 aaron Exp $
d1100 1
a1100 36
.Sh STANDARDS
The
.Nm
utility is a superset of the
.St -p1003.2
standard.
The options
.Fl B ,
.Fl D ,
.Fl E ,
.Fl G ,
.Fl H ,
.Fl L ,
.Fl P ,
.Fl T ,
.Fl U ,
.Fl Y ,
.Fl Z ,
the archive formats
.Ar bcpio ,
.Ar sv4cpio ,
.Ar sv4crc ,
.Ar tar ,
and the flawed archive handling during
.Ar list
and
.Ar read
operations are extensions to the
.Tn POSIX
standard.
.Sh SEE ALSO
.Xr cpio 1 ,
.Xr tar 1
.Sh AUTHOR
Keith Muller at the University of California, San Diego.
.Sh ERRORS
d1145 35
@


1.23
log
@Change all option list specifications to ".Bl -tag -width Ds". Most man
pages just needed their -width parameter tweaked to "Ds", which provides
a nice width of 6 constant characters. For consistency more than anything.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.22 2000/11/08 19:37:32 aaron Exp $
d456 1
a456 1
giving the name of the file, its file mode and its modification time.
@


1.22
log
@- Get rid of ".Sh OPTIONS" and always use the standard options list intro.
- Move some BUGS/CAVEATS to the end of the man pages where they should go.
- Correct some .Nm usage.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.21 2000/10/18 06:55:09 aaron Exp $
d335 1
a335 1
.Bl -tag -width 4n
@


1.21
log
@Add some rudimentary EXAMPLES sections and standardize the way we display
existing EXAMPLES sections.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.20 2000/04/15 02:15:10 aaron Exp $
d289 1
a289 1
.Sh OPERANDS
d333 1
a333 1
.Sh OPTIONS
@


1.20
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.19 2000/03/23 21:10:23 aaron Exp $
d1050 3
a1052 3
The command:
.Dl pax -w -f /dev/rst0 .\ 
copies the contents of the current directory to the device
d1055 3
a1057 3
The command:
.Dl pax -v -f filename
gives the verbose table of contents for an archive stored in
d1060 5
a1064 5
The following commands:
.Dl mkdir newdir
.Dl cd olddir
.Dl pax -rw .\ newdir
will copy the entire
d1069 3
a1071 3
The command:
.Dl pax -r -s ',^//*usr//*,,' -f a.pax
reads the archive
d1075 1
a1075 2
into the archive extracted relative to the
current directory.
d1077 3
a1079 3
The command:
.Dl pax -rw -i .\ dest_dir
can be used to interactively select the files to copy from the current
d1083 3
a1085 3
The command:
.Dl pax -r -pe -U root -G bin -f a.pax
will extract all files from the archive
d1091 3
a1093 1
and will preserve all file permissions.
d1095 1
a1095 3
The command:
.Dl pax -r -w -v -Y -Z home /backup
will update (and list) only those files in the destination directory
@


1.19
log
@Fix some formatting problems I missed before.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.18 2000/03/17 18:15:15 aaron Exp $
d812 1
a812 1
.Em Warning:
@


1.18
log
@Remove hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.17 2000/03/14 21:31:41 aaron Exp $
d727 1
a727 1
.Em  hard links , soft links ,
d729 1
a729 1
.Em  directories
@


1.17
log
@Suffix "i.e." and "e.g." with a comma. Just another really picky man page
commit, as we want our documentation to be as consistently formatted as
possible (it's getting there :-)).
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.16 2000/03/05 00:28:52 aaron Exp $
d623 2
a624 1
substitution. The first unsuccessful substitution stops the operation of the
@


1.16
log
@Finish standardizing options list introduction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.15 1999/07/06 11:20:46 aaron Exp $
d784 1
a784 1
(e.g. UID, GID, etc.) is newer than a copy of the file in the destination
d878 1
a878 1
inode was last changed; e.g. a change of owner, group, mode, etc).
@


1.15
log
@-w writes files to the standard output, not standard input; d@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.14 1999/06/04 02:45:14 aaron Exp $
d334 1
a334 1
The following options are supported:
@


1.14
log
@start to remove non-escaped trailing whitespace, it can confuse troff; pjanzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.13 1999/06/03 09:50:33 aaron Exp $
d356 1
a356 1
Write files to the standard input
@


1.13
log
@use the hyphenated form "command-line" in the case of a compound adjective;
pjanzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.12 1999/05/23 14:10:48 aaron Exp $
d208 1
a208 2
will write to
.Dv standard output
d210 1
a210 2
.Dv standard input ,
whose pathnames match the specified
d217 2
a218 3
extracts the members of the archive file read from the
.Dv standard input ,
with pathnames matching the specified 
d231 1
a231 1
writes an archive containing the 
d233 1
a233 2
operands to
.Dv standard output
d235 1
a235 1
When no 
d237 3
a239 3
operands are specified, a list of files to copy with one per line is read from 
.Dv standard input .
When a 
d250 1
a250 1
When no 
d253 1
a253 2
the
.Dv standard input .
d306 1
a306 1
When the 
d309 1
a309 1
When a 
d319 1
a319 2
operands in a diagnostic message to
.Dv standard error
d331 1
a331 2
operand pathnames in a diagnostic message to
.Dv standard error
d337 1
a337 2
Read an archive file from
.Dv standard input
d344 1
a344 1
.Dv OR 
d348 1
a348 1
.Dv S_IRWXO 
d353 1
a353 2
will write a diagnostic message to
.Dv standard error
d356 1
a356 2
Write files to the
.Dv standard output
d360 1
a360 2
operands are specified,
.Dv standard input
d372 1
a372 1
format already used in the archive will cause 
d413 1
a413 1
When blocking is not specified, the default 
d434 1
a434 2
.Dv standard input
(for
d438 1
a438 2
or
.Dv standard output
d465 2
a466 2
will immediately exit with a non-zero exit status if 
.Dv <EOF>
d490 1
a490 1
.Fl d 
d512 1
a512 1
.Fl p 
d527 1
a527 1
The 
d530 1
a530 1
.Cm o 
d543 1
a543 1
.Em user 
d557 1
a557 1
If neither the 
d565 1
a565 1
.Dv S_ISUID 
d573 1
a573 2
will write a diagnostic message to
.Dv standard error .
d599 6
a604 1
can contain an ampersand (&), \\n (where n is a digit) back-references,
d608 6
a613 4
string may also contain
.Dv <newline>
characters.
Any non-null character can be used as a delimiter (/ is shown here).
d629 1
a629 2
.Dv standard error
in the following format:
d667 1
a667 1
Where <ls -l listing> is the output format specified by the 
d675 2
a676 4
pathnames are written and flushed to
.Dv standard error
without a trailing
.Dv <newline>
d679 2
a680 3
The trailing
.Dv <newline> ,
is not buffered, and is written only after the file has been read or written.
d753 1
a753 1
to compress (decompress) the archive while writing (reading). 
d776 1
a776 1
(such as a regular file or a tape drive). 
d807 1
a807 1
The default 
d811 1
a811 1
.Em Warning: 
d823 3
a825 1
A '\\' can be used to escape the
d827 1
a827 1
Multiple 
d840 1
a840 1
time falling within a specified time range of 
d845 1
a845 1
If only a 
d853 1
a853 1
When the 
d862 1
a862 1
is in the 
d879 1
a879 1
When 
d920 1
a920 1
The 
d927 1
a927 1
Multiple 
d936 3
a938 1
A '\\' can be used to escape the
d940 1
a940 1
Multiple 
d947 1
a947 1
.Li st_dev 
d1003 1
a1003 1
Finally, the 
d1019 1
a1019 1
and 
d1025 1
a1025 1
.Fl s 
d1070 1
a1070 1
reads the archive 
d1141 1
a1141 1
.It 1 
d1151 1
a1151 2
option is specified, a diagnostic message is written to
.Dv standard error
d1176 1
a1176 2
a diagnostic message is written to
.Dv standard error
@


1.12
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.11 1998/12/19 18:39:05 deraadt Exp $
d840 1
a840 1
Follow only command line symbolic links while performing a physical file
@


1.11
log
@fix
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.10 1998/12/07 23:45:46 deraadt Exp $
d43 1
a43 1
.Os BSD 4.4
@


1.10
log
@doc -z pax option; d
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.9 1998/11/28 03:20:34 aaron Exp $
d48 1
a48 1
.Nm
d74 1
a74 1
.Nm
d110 1
a110 1
.Nm
d152 1
a152 1
.Nm
@


1.9
log
@start killing redundant .Nm macro arguments (mandoc ``remembers'' the first one
it's given)
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.8 1998/11/06 00:34:09 aaron Exp $
d49 1
a49 1
.Op Fl cdnv
d76 1
a76 1
.Op Fl cdiknuvDYZ
d112 1
a112 1
.Op Fl dituvHLPX
d761 6
@


1.8
log
@use .Dq/.Sq macros instead of `` ''s and ` 's (think typesetting and future
processing); kill redundant .Pp macros; other misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.7 1998/09/23 00:13:49 aaron Exp $
d48 1
a48 1
.Nm pax
d74 1
a74 1
.Nm pax
d110 1
a110 1
.Nm pax
d152 1
a152 1
.Nm pax
d184 1
a184 1
.Nm pax
d187 1
a187 1
.Nm pax 
d199 1
a199 1
.Nm pax
d207 1
a207 1
.Nm pax
d218 1
a218 1
.Nm pax
d233 1
a233 1
.Nm pax
d249 1
a249 1
.Nm pax
d289 1
a289 1
.Nm pax
d302 1
a302 1
.Nm pax
d321 1
a321 1
.Nm pax
d334 1
a334 1
.Nm pax
d360 1
a360 1
.Nm pax
d384 1
a384 1
.Nm pax
d456 1
a456 1
.Nm pax
d466 1
a466 1
.Nm pax
d470 1
a470 1
.Nm pax
d477 1
a477 1
.Nm pax
d512 1
a512 1
.Cm name=value .
d576 1
a576 1
.Nm pax
d585 1
a585 1
.Nm pax
d643 1
a643 1
.Nm pax
d695 1
a695 1
.Nm pax
d705 1
a705 1
.Nm pax
d714 1
a714 1
.Nm pax
d721 1
a721 1
.Nm pax
d728 1
a728 1
.Nm pax
d754 1
a754 1
.Nm pax
d797 1
a797 1
.Nm pax
d803 1
a803 1
.Nm pax
d810 1
a810 1
.Nm pax 
d820 1
a820 1
.Nm pax
d864 1
a864 1
.Nm pax
d894 1
a894 1
.Nm pax
d1103 1
a1103 1
.Nm pax
d1137 1
a1137 1
.Nm pax
d1147 1
a1147 1
.Nm pax
d1156 1
a1156 1
.Nm pax
d1158 1
a1158 1
.Nm pax
d1163 1
a1163 1
.Nm pax
d1170 1
a1170 1
.Nm pax
d1176 1
a1176 1
.Nm pax
d1181 1
a1181 1
.Nm pax
@


1.7
log
@alphabetize SEE ALSO entries and numerically order according to section
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.6 1998/09/14 22:13:52 aaron Exp $
d486 3
a488 1
(The lowercase letter ``ell.'') Link files.
d1073 3
a1075 1
with all files rooted in ``/usr'' into the archive extracted relative to the
@


1.6
log
@First complete sweep of man pages, bin/. Command/function names previously
(incorrectly) capatilized are fixed. Comma splices, hyphenations, SYNOPSIS
cleanups, other miscellaneous typos.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.5 1997/04/06 06:11:13 millert Exp $
d1128 2
a1129 2
.Xr tar 1 ,
.Xr cpio 1
@


1.5
log
@Allow creation of archives with block sizes up to 64512 bytes
but complain about non-portability if > 32256 bytes.
Brought up by George Robbins <grr@@shandakor.tharsis.com>
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.4 1997/02/20 06:54:35 tholo Exp $
d184 1
a184 1
.Nm Pax
d187 1
a187 1
.Nm Pax 
d203 1
a203 1
.Em copy.
d207 1
a207 1
.Nm Pax
d213 1
a213 1
.Ar patterns.
d218 1
a218 1
.Nm Pax
d222 1
a222 1
.Ar patterns.
d233 1
a233 1
.Nm Pax
d249 1
a249 1
.Nm Pax
a294 1
.Pp
d302 1
a302 1
.Nm Pax
a340 1
.Pp
d413 1
a413 1
.Li k
d415 1
a415 1
.Li b
d420 1
a420 1
.Li x
d470 1
a470 1
.Nm Pax
d477 1
a477 1
.Nm Pax
d486 1
a486 1
Link files. (The letter ell).
d489 2
a490 3
mode (
.Fl r
.Fl w ) ,
d510 1
a510 1
.Cm name=value
d678 3
a680 4
Otherwise for all the other operational modes (
.Em read , write ,
and
.Em copy ) ,
d693 1
a693 1
.Nm Pax
d752 1
a752 1
.Nm Pax
d757 2
a758 1
file pathname length, file size, link pathname length and the type of the file.
d765 2
a766 2
.Li m ,
.Li k ,
d768 1
a768 1
.Li b
d773 1
a773 1
.Li x
d787 1
a787 1
(e.g. uid, gid, etc.) is newer than a copy of the file in the destination
d791 1
a791 1
archives to
d936 1
a936 1
a numeric uid.
d949 1
a949 1
for more information about device ID's.
d962 2
a963 2
The options that operate on the names of files or archive members (
.Fl c ,
d975 2
a976 1
.Fl Z )
d1002 1
a1002 1
Finally the 
d1035 1
a1035 1
Finally the
d1131 1
a1131 1
Keith Muller at the University of California, San Diego
d1151 3
a1153 1
In the case where pax cannot create a link to a file,
@


1.4
log
@cpio emulation for pax
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.3 1996/06/23 14:20:39 deraadt Exp $
d408 4
a411 1
must be a multiple of 512 bytes with a maximum of 32256 bytes.
@


1.3
log
@update rcsid
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.3 1995/03/21 09:07:37 cgd Exp $
d1126 3
@


1.2
log
@Correct usage for listing contents of archives; from FreeBSD
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1052 1
a1052 1
.Dl pax -r -v -f filename
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
