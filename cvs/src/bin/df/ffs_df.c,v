head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.4
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.6
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.14.0.4
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.13.0.20
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.16
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.14
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.12
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.10
	OPENBSD_5_0:1.13.0.8
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.6
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.12
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.8
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.10.0.10
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.8
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.6
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.4
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.2
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.19
date	2016.03.01.17.57.49;	author mmcc;	state Exp;
branches;
next	1.18;
commitid	9K8BRTDgcV56IVFL;

1.18
date	2016.02.08.16.23.54;	author mmcc;	state Exp;
branches;
next	1.17;
commitid	iyb7TGlGquuwT1tz;

1.17
date	2015.11.27.13.49.41;	author millert;	state Exp;
branches;
next	1.16;
commitid	eGUSoJGcuVTd83CX;

1.16
date	2015.01.20.18.22.20;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	F55lwc3gS4GN2mLs;

1.15
date	2015.01.16.06.39.31;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	Uu5nFG3wCl0LACBb;

1.14
date	2014.05.16.13.44.09;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2009.10.27.23.59.21;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2007.04.30.18.40.24;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2007.03.19.13.27.47;	author pedro;	state Exp;
branches;
next	1.10;

1.10
date	2004.09.14.22.46.04;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.23.32.07;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.07.04.04.26.39;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.06;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.11.18.40.46;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.28.23.04.55;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.18.20.37.42;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	99.05.31.17.34.40;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.06.30.07.15.37;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	97.06.16.04.37.49;	author denny;	state Exp;
branches;
next	;


desc
@@


1.19
log
@remove unneeded includes

from Michal Mazurek, ok tb@@
@
text
@/*	$OpenBSD: ffs_df.c,v 1.18 2016/02/08 16:23:54 mmcc Exp $	*/

/*
 * Copyright (c) 1980, 1990, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/mount.h>
#include <ufs/ffs/fs.h>
#include <ufs/ufs/dinode.h>

#include <string.h>

int		ffs_df(int, char *, struct statfs *);

extern int	bread(int, off_t, void *, int);
extern char	*getmntpt(char *);

static union {
	struct fs iu_fs;
	char dummy[SBSIZE];
} sb;
#define sblock sb.iu_fs

int
ffs_df(int rfd, char *file, struct statfs *sfsp)
{
	char *mntpt;

	if (!((bread(rfd, (off_t)SBLOCK_UFS1, &sblock, SBSIZE) == 1 &&
	    sblock.fs_magic == FS_UFS1_MAGIC) ||
	    (bread(rfd, (off_t)SBLOCK_UFS2, &sblock, SBSIZE) == 1 &&
	    sblock.fs_magic == FS_UFS2_MAGIC))) {
		return (-1);
	}

	sfsp->f_flags = 0;
	sfsp->f_bsize = sblock.fs_fsize;
	sfsp->f_iosize = sblock.fs_bsize;
	if (sblock.fs_magic == FS_UFS1_MAGIC) {
		sfsp->f_blocks = sblock.fs_ffs1_dsize;
		sfsp->f_bfree = sblock.fs_ffs1_cstotal.cs_nbfree *
		    sblock.fs_frag + sblock.fs_ffs1_cstotal.cs_nffree;
		sfsp->f_bavail = sfsp->f_bfree -
		    ((int64_t)sblock.fs_ffs1_dsize * sblock.fs_minfree / 100);
		sfsp->f_files = sblock.fs_ncg * sblock.fs_ipg - ROOTINO;
		sfsp->f_ffree = sblock.fs_ffs1_cstotal.cs_nifree;
	} else {
		sfsp->f_blocks = sblock.fs_dsize;
		sfsp->f_bfree = sblock.fs_cstotal.cs_nbfree *
		    sblock.fs_frag + sblock.fs_cstotal.cs_nffree;
		sfsp->f_bavail = sfsp->f_bfree -
		    ((int64_t)sblock.fs_dsize * sblock.fs_minfree / 100);
		sfsp->f_files = sblock.fs_ncg * sblock.fs_ipg - ROOTINO;
		sfsp->f_ffree = sblock.fs_cstotal.cs_nifree;
	}
	sfsp->f_fsid.val[0] = 0;
	sfsp->f_fsid.val[1] = 0;
	if ((mntpt = getmntpt(file)) == 0)
		mntpt = "";
	strlcpy(sfsp->f_mntonname, mntpt, sizeof(sfsp->f_mntonname));
	strlcpy(sfsp->f_mntfromname, file, sizeof(sfsp->f_mntfromname));
	strlcpy(sfsp->f_fstypename, MOUNT_EXT2FS, sizeof(sfsp->f_fstypename));
	return (0);
}
@


1.18
log
@remove needless headers

ok tb@@, from Michal Mazurek
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.17 2015/11/27 13:49:41 millert Exp $	*/
a41 2
#include <unistd.h>
#include <stdlib.h>
@


1.17
log
@Use strlcpy to copy strings in struct mount, not memmove.  Avoids
reading past the end of a buffer.  Problem found and OK jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.16 2015/01/20 18:22:20 deraadt Exp $	*/
d39 1
a40 1
#include <ufs/ffs/fs.h>
a44 1
#include <fcntl.h>
@


1.16
log
@Adjust <sys/param.h> comments regarding use of use of MAXFRAG, or
delete <sys/param.h> if now possible
ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.15 2015/01/16 06:39:31 deraadt Exp $	*/
d94 3
a96 3
	memmove(&sfsp->f_mntonname[0], mntpt, MNAMELEN);
	memmove(&sfsp->f_mntfromname[0], file, MNAMELEN);
	strlcpy(sfsp->f_fstypename, MOUNT_FFS, MFSNAMELEN);
@


1.15
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.14 2014/05/16 13:44:09 krw Exp $	*/
d37 1
a37 1
#include <sys/param.h>	/* MAXFRAG */
@


1.14
log
@Make the df calculations of available space the same as that done in
ffs_statfs().

In 1998, with /usr/src/sys/ufs/ffs/ffs_vfsops.c r1.16, mickey@@
improved the calculation of available blocks in ffs_statfs().

Yesterday guenther@@ noticed that this fix had not been applied to the
same calculation being done by df(8) when run against raw
devices. Which meant different values were displayed depending on
which device/file system you gave to df.

ok otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.13 2009/10/27 23:59:21 deraadt Exp $	*/
d37 1
a37 1
#include <sys/param.h>
@


1.13
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.12 2007/04/30 18:40:24 otto Exp $	*/
d77 2
a78 3
		sfsp->f_bavail = ((int64_t)sblock.fs_ffs1_dsize * (100 -
		    sblock.fs_minfree) / 100) - (sblock.fs_ffs1_dsize -
		    sfsp->f_bfree);
d85 2
a86 2
		sfsp->f_bavail = (sblock.fs_dsize * (100 - sblock.fs_minfree) /
		    100) - (sblock.fs_dsize - sfsp->f_bfree);
@


1.12
log
@ffs2 support for reading df data directly from device; ok millert@@ pedro@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.11 2007/03/19 13:27:47 pedro Exp $	*/
a35 6

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1980, 1990, 1993, 1994\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */
@


1.11
log
@Add FFS2 fields to the superblock, change file system tools to keep
accessing FFS1 fields, okay art@@, quite some testing by ckuethe@@, simon@@
and thib@@, thanks.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.10 2004/09/14 22:46:04 deraadt Exp $	*/
d69 4
a72 4
	if (bread(rfd, (off_t)SBOFF, &sblock, SBSIZE) == 0) {
		return (-1);
	}
	if (sblock.fs_magic != FS_MAGIC) {
d75 1
d79 18
a96 7
	sfsp->f_blocks = sblock.fs_ffs1_dsize;
	sfsp->f_bfree = sblock.fs_ffs1_cstotal.cs_nbfree * sblock.fs_frag +
		sblock.fs_ffs1_cstotal.cs_nffree;
	sfsp->f_bavail = ((int64_t)sblock.fs_ffs1_dsize * (100 -
	    sblock.fs_minfree) / 100) - (sblock.fs_ffs1_dsize - sfsp->f_bfree);
	sfsp->f_files = sblock.fs_ncg * sblock.fs_ipg - ROOTINO;
	sfsp->f_ffree = sblock.fs_ffs1_cstotal.cs_nifree;
@


1.10
log
@do not alias unions between files (lint hates it)
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.9 2003/06/02 23:32:07 millert Exp $	*/
d78 5
a82 5
	sfsp->f_blocks = sblock.fs_dsize;
	sfsp->f_bfree = sblock.fs_cstotal.cs_nbfree * sblock.fs_frag +
		sblock.fs_cstotal.cs_nffree;
	sfsp->f_bavail = ((int64_t)sblock.fs_dsize * (100 -
	    sblock.fs_minfree) / 100) - (sblock.fs_dsize - sfsp->f_bfree);
d84 1
a84 1
	sfsp->f_ffree = sblock.fs_cstotal.cs_nifree;
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.8 2002/07/04 04:26:39 deraadt Exp $	*/
d58 1
a58 1
union {
@


1.8
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.7 2002/02/16 21:27:06 millert Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.6 2001/05/11 18:40:46 mickey Exp $	*/
d69 1
a69 4
ffs_df(rfd, file, sfsp)
	int rfd;
	char *file;
	struct statfs *sfsp;
@


1.6
log
@use strlcpy instead of strncpy+a[len-1]='\0'
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs_df.c,v 1.5 2001/01/28 23:04:55 niklas Exp $	*/
d57 1
a57 1
int		ffs_df __P((int, char *, struct statfs *));
d59 2
a60 2
extern int	bread __P((int, off_t, void *, int));
extern char	*getmntpt __P((char *));
@


1.5
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d98 1
a98 2
	strncpy(sfsp->f_fstypename, MOUNT_FFS, MFSNAMELEN-1);
	sfsp->f_fstypename[MFSNAMELEN-1] = '\0';
@


1.4
log
@sort out printf formats according to types, 64bit arithmetics in ffs_df; millert@@ ok
@
text
@d1 2
@


1.3
log
@New struct statfs with mount options.  NOTE: this replaces statfs(2),
fstatfs(2), and getfsstat(2) so you will need to build a new kernel
before doing a "make build" or you will get "unimplemented syscall" errors.

The new struct statfs has the following featuires:
o Has a u_int32_t flags field--now softdep can have a real flag.

o Uses u_int32_t instead of longs (nicer on the alpha).  Note: the man
page used to lie about setting invalid/unused fields to -1.  SunOS does
that but our code never has.

o Gets rid of f_type completely.  It hasn't been used since NetBSD 0.9
and having it there but always 0 is confusing.  It is conceivable
that this may cause some old code to not compile but that is better
than silently breaking.

o Adds a mount_info union that contains the FSTYPE_args struct.  This
means that "mount" can now tell you all the options a filesystem was
mounted with.  This is especially nice for NFS.

Other changes:
o The linux statfs emulation didn't convert between BSD fs names
  and linux f_type numbers.  Now it does, since the BSD f_type
  number is useless to linux apps (and has been removed anyway)

o FreeBSD's struct statfs is different from our (both old and new)
and thus needs conversion.  Previously, the OpenBSD syscalls
were used without any real translation.

o mount(8) will now show extra info when invoked with no arguments.
However, to see *everything* you need to use the -v (verbose) flag.
@
text
@d86 2
a87 2
	sfsp->f_bavail = (sblock.fs_dsize * (100 - sblock.fs_minfree) / 100) -
		(sblock.fs_dsize - sfsp->f_bfree);
@


1.2
log
@Wall
@
text
@a79 1
	sfsp->f_type = 0;
@


1.1
log
@Better support for unmounted filesystems (i.e. df /dev/rsd0a):
- interpret the superblock of lfs, ext2fs, and ffs filesystems.
- never mount() an offline filesystem, always read its superblock.
- use the same algorithm as statfs() for ffs, get the same answers.

  Even so, now I'm really unsure this code should remain in df.
  Similar functionality should be added to dumpfs or fsck instead.
@
text
@a44 2
#include <unistd.h>
#include <fcntl.h>
d49 5
@
