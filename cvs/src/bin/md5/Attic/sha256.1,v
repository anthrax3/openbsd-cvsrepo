head	1.11;
access;
symbols
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2;
locks; strict;
comment	@.\" @;


1.11
date	2014.01.10.17.47.44;	author deraadt;	state dead;
branches;
next	1.10;

1.10
date	2014.01.10.05.34.46;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2014.01.08.16.12.44;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2014.01.08.14.15.54;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2013.12.29.21.19.11;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2013.12.23.23.00.38;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2012.07.08.15.58.23;	author naddy;	state Exp;
branches;
next	1.4;

1.4
date	2012.02.26.19.15.20;	author haesbaert;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.03.09.53.20;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.13.06.57.37;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.12.23.16.55;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.11
log
@tedu merged the hash manual pages back together.  This goes even further,
repairing the documentation for the -c option.
@
text
@.\"	$OpenBSD: sha256.1,v 1.10 2014/01/10 05:34:46 tedu Exp $
.\"
.\" Copyright (c) 2003, 2004, 2006 Todd C. Miller <Todd.Miller@@courtesan.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" Sponsored in part by the Defense Advanced Research Projects
.\" Agency (DARPA) and Air Force Research Laboratory, Air Force
.\" Materiel Command, USAF, under agreement number F39502-99-1-0512.
.\"
.Dd $Mdocdate: January 10 2014 $
.Dt SHA256 1
.Os
.Sh NAME
.Nm sha256 ,
.Nm sha512
.Nd calculate a message digest (checksum) for a file
.Sh SYNOPSIS
.Nm sha256
.Op Fl bprtx
.Op Fl h Ar hashfile
.Op Fl s Ar string
.Op Ar
.Nm sha256
.Op Fl q
.Fl c Op Ar checklist ...
.Nm sha512
.Op Fl bprtx
.Op Fl h Ar hashfile
.Op Fl s Ar string
.Op Ar
.Nm sha512
.Op Fl q
.Fl c Op Ar checklist ...
.Sh DESCRIPTION
.Nm
takes as input a message of arbitrary length and produces
as output a 256-bit message digest (checksum) of the input.
It is conjectured that it is computationally infeasible to produce
two messages having the same message digest (a collision),
or to produce any message having a given prespecified target message digest.
.Pp
When invoked as
.Nm sha512 ,
the SHA-512 algorithm is used instead, generating a 512-bit digest.
.Pp
These algorithms are intended for digital signature applications,
where a large file must be compressed in a secure manner before
being encrypted with a private (secret) key under a public-key
cryptosystem, such as RSA.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl b
Output checksums in base64 notation, not hexadecimal.
.It Fl c Op Ar checklist ...
Compares all checksums contained in the file
.Ar checklist
with newly computed checksums for the corresponding files.
Output consists of the digest used, the file name,
and an OK or FAILED for the result of the comparison.
This will validate any of the supported checksums (see
.Xr cksum 1 ) .
If no file is given, stdin is used.
.It Fl h Ar hashfile
Place the checksum into
.Ar hashfile
instead of stdout.
.It Fl p
Echoes stdin to stdout and appends the
checksum to stdout.
.It Fl q
Only print the checksum (quiet mode).
.It Fl r
Reverse the format of the hash algorithm output, making
it match the output format used by
.Xr cksum 1 .
.It Fl s Ar string
Prints a checksum of the given
.Ar string .
.It Fl t
Runs a built-in time trial.
Specifying
.Fl t
multiple times results in the number of rounds being multiplied
by 10 for each additional flag.
.It Fl x
Runs a built-in test script.
.El
.Pp
The checksum of each file listed on the command line is printed
after the options are processed.
.Pp
The
.Nm
command is shorthand for:
.Bd -literal -offset indent
$ cksum -a sha256
.Ed
.Sh EXIT STATUS
The
.Nm sha256
and
.Nm sha512
utilities exit 0 on success,
and >0 if an error occurs.
.Sh SEE ALSO
.Xr cksum 1 ,
.Xr md5 1 ,
.Xr sha1 1
.Rs
.%T Secure Hash Standard
.%O FIPS PUB 180-2
.Re
@


1.10
log
@the -c option is really a mode change, incompatible with other options.
(there are some others too, but -c is particularly misleading.) split it
out in synopsis and usage.
ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha256.1,v 1.9 2014/01/08 16:12:44 jmc Exp $
d21 1
a21 1
.Dd $Mdocdate: January 8 2014 $
@


1.9
log
@sort options;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha256.1,v 1.8 2014/01/08 14:15:54 deraadt Exp $
d30 1
a30 2
.Op Fl bpqrtx
.Op Fl c Op Ar checklist ...
d34 3
d38 1
a38 2
.Op Fl bpqrtx
.Op Fl c Op Ar checklist ...
d42 3
@


1.8
log
@Add support for -h hashfile.  This is very useful with with -p, in a pipeline,
to deliver the hash output to a different location.
ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha256.1,v 1.7 2013/12/29 21:19:11 jmc Exp $
d21 1
a21 1
.Dd $Mdocdate: December 29 2013 $
d71 4
a83 4
.It Fl h Ar hashfile
Place the checksum into
.Ar hashfile
instead of stdout.
@


1.7
log
@update sha256(1) to better reflect that it documents sha512 now too.
that led me to whack some unneccessary mark up and quoting (and phrasing),
and the changes to the other pages are really just to unify the newer
text layout;

tedu provided feedback and answers (thanks);
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha256.1,v 1.6 2013/12/23 23:00:38 tedu Exp $
d21 1
a21 1
.Dd $Mdocdate: December 23 2013 $
d32 1
d38 1
d80 4
@


1.6
log
@install a link as sha512. simplify program internals; there are only
two modes. ok deraadt gilles jca
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha256.1,v 1.5 2012/07/08 15:58:23 naddy Exp $
d21 1
a21 1
.Dd $Mdocdate: July 8 2012 $
d25 3
a27 2
.Nm sha256
.Nd calculate a message-digest fingerprint (checksum) for a file
d42 1
a42 1
as output a 256-bit "fingerprint" or "message digest" of the input.
d44 2
a45 10
two messages having the same message digest, or to produce any
message having a given prespecified target message digest.
.Pp
The
.Em SHA-256
algorithm is intended for digital signature applications, where a
large file must be "compressed" in a secure manner before being
encrypted with a private (secret) key under a public-key cryptosystem
such as
.Em RSA .
d49 6
a54 3
the
.Em SHA-512
algorithm is used instead, generating a 512-bit digest.
d60 1
a60 4
.It Xo
.Fl c
.Op Ar checklist ...
.Xc
d71 1
a71 2
.Em SHA-256
sum to stdout.
d91 2
a92 3
The SHA-256
sum of each file listed on the command line is printed after the options
are processed.
d96 1
a96 1
command is shorthand for
d98 1
a98 1
cksum -a sha256
d101 6
a106 1
.Ex -std sha256
@


1.5
log
@The algorithm name is "SHA-256" as per FIPS 180-2 (-3).
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha256.1,v 1.4 2012/02/26 19:15:20 haesbaert Exp $
d21 1
a21 1
.Dd $Mdocdate: February 26 2012 $
d33 5
d53 6
@


1.4
log
@Fix several manpage titles, from Lawrence Teo.

ok dcoppa@@ jmc@@ schwarze@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha256.1,v 1.3 2010/09/03 09:53:20 jmc Exp $
d21 1
a21 1
.Dd $Mdocdate: September 3 2010 $
d42 1
a42 1
.Em SHA2-256
d67 1
a67 1
.Em SHA2-256
d88 1
a88 1
The SHA2-256
@


1.3
log
@add an EXIT STATUS section for /bin;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha256.1,v 1.2 2010/07/13 06:57:37 jmc Exp $
d21 2
a22 2
.Dd $Mdocdate: July 13 2010 $
.Dt SHA1 1
@


1.2
log
@no need for userland to refer to section 2/3 pages;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha256.1,v 1.1 2010/07/12 23:16:55 tedu Exp $
d21 1
a21 1
.Dd $Mdocdate: July 12 2010 $
d98 1
a98 1
.Pp
@


1.1
log
@replace rmd160 links with sha256.  it's way more popular and more better, too.
too many oks to enumerate.
while here, add Xr to the relevant libc functions in each page.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sha1.1,v 1.26 2007/05/31 19:19:15 jmc Exp $
d21 1
a21 1
.Dd $Mdocdate: May 31 2007 $
d103 1
a103 2
.Xr sha1 1,
.Xr sha2 3
@

