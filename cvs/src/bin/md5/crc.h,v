head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.6
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.42
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.38
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.36
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.34
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.32
	OPENBSD_5_0:1.1.0.30
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.28
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.26
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.22
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.24
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.20
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.18
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.16
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.14
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.12
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.10
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.8
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.6
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.4
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2014.03.20.22.03.56;	author tedu;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.02.17.53.29;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@purge sum and sysvsum code. ok deraadt jmc lteo millert
a few initial leftovers spotted by naddy
@
text
@/*	$OpenBSD: crc.h,v 1.1 2004/05/02 17:53:29 millert Exp $	*/

/*
 * Copyright (c) 2004 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define	CKSUM_DIGEST_LENGTH		4
#define	CKSUM_DIGEST_STRING_LENGTH	(10 + 1 + 19)

typedef struct CKSUMContext {
	u_int32_t crc;
	off_t len;
} CKSUM_CTX;

void	 CKSUM_Init(CKSUM_CTX *);
void	 CKSUM_Update(CKSUM_CTX *, const u_int8_t *, size_t);
void	 CKSUM_Final(CKSUM_CTX *);
char    *CKSUM_End(CKSUM_CTX *, char *);
char    *CKSUM_Data(const u_int8_t *, size_t, char *);
@


1.1
log
@Add support for cksum (3 varieties), md4, sha256, sha384, and sha512.
Consequently, cksum moves becomes a link to md5 and moves to /bin.
The cksum man page could use some polishing.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a26 16
#define	SUM_DIGEST_LENGTH		4
#define	SUM_DIGEST_STRING_LENGTH	(10 + 1 + 16)

typedef struct SUMContext {
	u_int32_t crc;
	off_t len;
} SUM_CTX;

#define	SYSVSUM_DIGEST_LENGTH		4
#define	SYSVSUM_DIGEST_STRING_LENGTH	(10 + 1 + 16)

typedef struct SYSVSUMContext {
	u_int32_t crc;
	off_t len;
} SYSVSUM_CTX;

a31 12

void	 SUM_Init(SUM_CTX *);
void	 SUM_Update(SUM_CTX *, const u_int8_t *, size_t);
void	 SUM_Final(SUM_CTX *);
char    *SUM_End(SUM_CTX *, char *);
char    *SUM_Data(const u_int8_t *, size_t, char *);

void	 SYSVSUM_Init(SYSVSUM_CTX *);
void	 SYSVSUM_Update(SYSVSUM_CTX *, const u_int8_t *, size_t);
void	 SYSVSUM_Final(SYSVSUM_CTX *);
char    *SYSVSUM_End(SYSVSUM_CTX *, char *);
char    *SYSVSUM_Data(const u_int8_t *, size_t, char *);
@

