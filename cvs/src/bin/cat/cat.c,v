head	1.26;
access;
symbols
	OPENBSD_6_1:1.26.0.2
	OPENBSD_6_1_BASE:1.26
	OPENBSD_6_0:1.25.0.2
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.21.0.6
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.20.0.22
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.20
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.16
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.14
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.12
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.10
	OPENBSD_5_0:1.20.0.8
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.6
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.19.0.12
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.8
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.17.0.8
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.6
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.4
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.2
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.16.0.4
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.2
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.14.0.4
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.6
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.4
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.8.0.10
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.8
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.6
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.26
date	2016.10.19.18.20.25;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	0nfxWLL3tqkKYGhB;

1.25
date	2016.07.01.22.40.44;	author schwarze;	state Exp;
branches;
next	1.24;
commitid	Kg0IXqFODjWUesjK;

1.24
date	2015.11.04.21.28.01;	author tedu;	state Exp;
branches;
next	1.23;
commitid	Mj2vk41wevCn2Cnd;

1.23
date	2015.10.09.01.37.06;	author deraadt;	state Exp;
branches;
next	1.22;
commitid	sbrB3Q5CNxcwZpfU;

1.22
date	2015.10.03.18.56.20;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	sGWgZOryxfbJmTJK;

1.21
date	2015.01.16.06.39.28;	author deraadt;	state Exp;
branches;
next	1.20;
commitid	Uu5nFG3wCl0LACBb;

1.20
date	2009.10.27.23.59.19;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2007.07.17.07.10.22;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2007.03.22.18.35.07;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2005.04.05.01.18.53;	author jaredy;	state Exp;
branches;
next	1.16;

1.16
date	2004.05.21.02.11.33;	author jolan;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.02.23.32.06;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.07.04.04.26.39;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2002.03.14.21.17.50;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.16.21.27.05;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.05.07.39.16;	author mpech;	state Exp;
branches;
next	1.10;

1.10
date	2001.09.06.13.29.08;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2000.01.22.20.24.45;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.06.18.18.37.56;	author kstailey;	state Exp;
branches;
next	1.7;

1.7
date	96.12.14.12.17.33;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	96.09.28.20.52.50;	author imp;	state Exp;
branches;
next	1.5;

1.5
date	96.09.28.19.36.38;	author imp;	state Exp;
branches;
next	1.4;

1.4
date	96.08.02.17.39.50;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.08.02.12.40.48;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.19.02;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.01;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Delete useless setlocale(3) in src/bin/.
Minor cleanup while here: return from main, static void __dead usage, etc.
Based on a patch from Jan Stary <hans at stare dot cz>.
Feedback and OK tb@@, OK millert@@.
@
text
@/*	$OpenBSD: cat.c,v 1.25 2016/07/01 22:40:44 schwarze Exp $	*/
/*	$NetBSD: cat.c,v 1.11 1995/09/07 06:12:54 jtc Exp $	*/

/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Kevin Fall.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/stat.h>

#include <ctype.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define MAXIMUM(a, b)	(((a) > (b)) ? (a) : (b))

extern char *__progname;

int bflag, eflag, nflag, sflag, tflag, vflag;
int rval;
char *filename;

void cook_args(char *argv[]);
void cook_buf(FILE *);
void raw_args(char *argv[]);
void raw_cat(int);

int
main(int argc, char *argv[])
{
	int ch;

	if (pledge("stdio rpath", NULL) == -1)
		err(1, "pledge");

	while ((ch = getopt(argc, argv, "benstuv")) != -1)
		switch (ch) {
		case 'b':
			bflag = nflag = 1;	/* -b implies -n */
			break;
		case 'e':
			eflag = vflag = 1;	/* -e implies -v */
			break;
		case 'n':
			nflag = 1;
			break;
		case 's':
			sflag = 1;
			break;
		case 't':
			tflag = vflag = 1;	/* -t implies -v */
			break;
		case 'u':
			setvbuf(stdout, NULL, _IONBF, 0);
			break;
		case 'v':
			vflag = 1;
			break;
		default:
			(void)fprintf(stderr,
			    "usage: %s [-benstuv] [file ...]\n", __progname);
			return 1;
		}
	argv += optind;

	if (bflag || eflag || nflag || sflag || tflag || vflag)
		cook_args(argv);
	else
		raw_args(argv);
	if (fclose(stdout))
		err(1, "stdout");
	return rval;
}

void
cook_args(char **argv)
{
	FILE *fp;

	fp = stdin;
	filename = "stdin";
	do {
		if (*argv) {
			if (!strcmp(*argv, "-"))
				fp = stdin;
			else if ((fp = fopen(*argv, "r")) == NULL) {
				warn("%s", *argv);
				rval = 1;
				++argv;
				continue;
			}
			filename = *argv++;
		}
		cook_buf(fp);
		if (fp == stdin)
			clearerr(fp);
		else
			(void)fclose(fp);
	} while (*argv);
}

void
cook_buf(FILE *fp)
{
	int ch, gobble, line, prev;

	line = gobble = 0;
	for (prev = '\n'; (ch = getc(fp)) != EOF; prev = ch) {
		if (prev == '\n') {
			if (sflag) {
				if (ch == '\n') {
					if (gobble)
						continue;
					gobble = 1;
				} else
					gobble = 0;
			}
			if (nflag) {
				if (!bflag || ch != '\n') {
					(void)fprintf(stdout, "%6d\t", ++line);
					if (ferror(stdout))
						break;
				} else if (eflag) {
					(void)fprintf(stdout, "%6s\t", "");
					if (ferror(stdout))
						break;
				}
			}
		}
		if (ch == '\n') {
			if (eflag && putchar('$') == EOF)
				break;
		} else if (ch == '\t') {
			if (tflag) {
				if (putchar('^') == EOF || putchar('I') == EOF)
					break;
				continue;
			}
		} else if (vflag) {
			if (!isascii(ch)) {
				if (putchar('M') == EOF || putchar('-') == EOF)
					break;
				ch = toascii(ch);
			}
			if (iscntrl(ch)) {
				if (putchar('^') == EOF ||
				    putchar(ch == '\177' ? '?' :
				    ch | 0100) == EOF)
					break;
				continue;
			}
		}
		if (putchar(ch) == EOF)
			break;
	}
	if (ferror(fp)) {
		warn("%s", filename);
		rval = 1;
		clearerr(fp);
	}
	if (ferror(stdout))
		err(1, "stdout");
}

void
raw_args(char **argv)
{
	int fd;

	fd = fileno(stdin);
	filename = "stdin";
	do {
		if (*argv) {
			if (!strcmp(*argv, "-"))
				fd = fileno(stdin);
			else if ((fd = open(*argv, O_RDONLY, 0)) < 0) {
				warn("%s", *argv);
				rval = 1;
				++argv;
				continue;
			}
			filename = *argv++;
		}
		raw_cat(fd);
		if (fd != fileno(stdin))
			(void)close(fd);
	} while (*argv);
}

void
raw_cat(int rfd)
{
	int wfd;
	ssize_t nr, nw, off;
	static size_t bsize;
	static char *buf = NULL;
	struct stat sbuf;

	wfd = fileno(stdout);
	if (buf == NULL) {
		if (fstat(wfd, &sbuf))
			err(1, "stdout");
		bsize = MAXIMUM(sbuf.st_blksize, BUFSIZ);
		if ((buf = malloc(bsize)) == NULL)
			err(1, "malloc");
	}
	while ((nr = read(rfd, buf, bsize)) != -1 && nr != 0)
		for (off = 0; nr; nr -= nw, off += nw)
			if ((nw = write(wfd, buf + off, (size_t)nr)) == 0 ||
			     nw == -1)
				err(1, "stdout");
	if (nr < 0) {
		warn("%s", filename);
		rval = 1;
	}
}
@


1.25
log
@For -be, indent the $ on blank lines.
Patch from Giles Lean (NetBSD PR bin/4841), tweaked by kleink at
NetBSD (rev. 1.17 1998-01-27), version for OpenBSD sent in by Sevan
Janiyan <venture37 at geeklan dot co dot uk>.
OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.24 2015/11/04 21:28:01 tedu Exp $	*/
a42 1
#include <locale.h>
a65 2
	setlocale(LC_ALL, "");

d95 1
a95 2
			exit(1);
			/* NOTREACHED */
d105 1
a105 2
	exit(rval);
	/* NOTREACHED */
@


1.24
log
@replace setbuf with setvbuf, from Frederic Nowak
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.23 2015/10/09 01:37:06 deraadt Exp $	*/
d156 10
a165 4
			if (nflag && (!bflag || ch != '\n')) {
				(void)fprintf(stdout, "%6d\t", ++line);
				if (ferror(stdout))
					break;
@


1.23
log
@Change all tame callers to namechange to pledge(2).
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.22 2015/10/03 18:56:20 deraadt Exp $	*/
d90 1
a90 1
			setbuf(stdout, NULL);
@


1.22
log
@obvious tame "stdio rpath"
ok semarie
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.21 2015/01/16 06:39:28 deraadt Exp $	*/
d69 2
a70 2
	if (tame("stdio rpath", NULL) == -1)
		err(1, "tame");
@


1.21
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.20 2009/10/27 23:59:19 deraadt Exp $	*/
d68 3
@


1.20
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.19 2007/07/17 07:10:22 jmc Exp $	*/
d36 1
a36 1
#include <sys/param.h>
d49 2
d232 1
a232 1
		bsize = MAX(sbuf.st_blksize, BUFSIZ);
@


1.19
log
@sync usage(); from Tobias Stoeckmann
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.18 2007/03/22 18:35:07 millert Exp $	*/
a34 14

#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1989, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)cat.c	8.2 (Berkeley) 4/27/95";
#else
static char rcsid[] = "$OpenBSD: cat.c,v 1.18 2007/03/22 18:35:07 millert Exp $";
#endif
#endif /* not lint */
@


1.18
log
@Fix handling of multiple stdin arguments in cooked mode, closes PR 5418.
From Johan Veenhuizen
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.17 2005/04/05 01:18:53 jaredy Exp $	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.17 2005/04/05 01:18:53 jaredy Exp $";
d106 1
a106 1
			    "usage: %s [-benstuv] [-] [file ...]\n", __progname);
@


1.17
log
@change incorrect filename in output on fstat() failure

from Cedric Berger <cedric@@berger.to>

ok otto
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.16 2004/05/21 02:11:33 jolan Exp $	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.16 2004/05/21 02:11:33 jolan Exp $";
d142 3
a144 1
		if (fp != stdin)
@


1.16
log
@minor cleanups / shut up lint, ok pedro tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.15 2003/06/02 23:32:06 millert Exp $	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.15 2003/06/02 23:32:06 millert Exp $";
d241 1
a241 1
			err(1, "%s", filename);
@


1.15
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.14 2002/07/04 04:26:39 deraadt Exp $	*/
d46 1
a46 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.14 2002/07/04 04:26:39 deraadt Exp $";
d119 1
d232 4
a235 3
	int nr, nw, off, wfd;
	static int bsize;
	static char *buf;
d242 3
a244 3
		bsize = MAX(sbuf.st_blksize, 1024);
		if ((buf = malloc((u_int)bsize)) == NULL)
			err(1, "buffer");
d246 1
a246 1
	while ((nr = read(rfd, buf, bsize)) > 0)
d248 2
a249 1
			if ((nw = write(wfd, buf + off, nr)) < 0)
@


1.14
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.13 2002/03/14 21:17:50 millert Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d46 1
a46 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.13 2002/03/14 21:17:50 millert Exp $";
@


1.13
log
@Fix 'cat -se'; the '$' was not being printed for blank lines.
Based on a patch from Denis Afonin.
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.12 2002/02/16 21:27:05 millert Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.12 2002/02/16 21:27:05 millert Exp $";
d79 1
a79 3
main(argc, argv)
	int argc;
	char *argv[];
d126 1
a126 2
cook_args(argv)
	char **argv;
d151 1
a151 2
cook_buf(fp)
	FILE *fp;
d208 1
a208 2
raw_args(argv)
	char **argv;
d233 1
a233 2
raw_cat(rfd)
	int rfd;
@


1.12
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.11 2001/11/05 07:39:16 mpech Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.11 2001/11/05 07:39:16 mpech Exp $";
a56 1
#include <locale.h>
d61 1
d114 1
d162 4
a165 4
			if (ch == '\n') {
				if (sflag) {
					if (!gobble && putchar(ch) == EOF)
						break;
d167 4
a170 8
					continue;
				}
				if (nflag && !bflag) {
					(void)fprintf(stdout, "%6d\t", ++line);
					if (ferror(stdout))
						break;
				}
			} else if (nflag) {
a175 1
		gobble = 0;
d177 2
a178 3
			if (eflag)
				if (putchar('$') == EOF)
					break;
@


1.11
log
@kill more registers;

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.10 2001/09/06 13:29:08 mpech Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.10 2001/09/06 13:29:08 mpech Exp $";
d73 4
a76 4
void cook_args __P((char *argv[]));
void cook_buf __P((FILE *));
void raw_args __P((char *argv[]));
void raw_cat __P((int));
@


1.10
log
@o) __progname aria;

millert@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.9 2000/01/22 20:24:45 deraadt Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.9 2000/01/22 20:24:45 deraadt Exp $";
d130 1
a130 1
	register FILE *fp;
d154 1
a154 1
	register FILE *fp;
d156 1
a156 1
	register int ch, gobble, line, prev;
d220 1
a220 1
	register int fd;
d244 1
a244 1
	register int rfd;
d246 1
a246 1
	register int nr, nw, off, wfd;
@


1.9
log
@remove extra externs not needed because of unistd.h (rest of tree will be done later.. contact me if you want to help)
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.8 1997/06/18 18:37:56 kstailey Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.8 1997/06/18 18:37:56 kstailey Exp $";
d67 2
d112 1
a112 1
			    "usage: cat [-benstuv] [-] [file ...]\n");
@


1.8
log
@(foo *)NULL -> NULL
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.7 1996/12/14 12:17:33 mickey Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.7 1996/12/14 12:17:33 mickey Exp $";
a80 1
	extern int optind;
@


1.7
log
@-Wall'ing.
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.6 1996/09/28 20:52:50 imp Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.6 1996/09/28 20:52:50 imp Exp $";
d104 1
a104 1
			setbuf(stdout, (char *)NULL);
@


1.6
log
@Back out last change, getopt on OpenBSD returns -1, not EOF
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.5 1996/09/28 19:36:38 imp Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.5 1996/09/28 19:36:38 imp Exp $";
d256 1
a256 1
			err(1, NULL);
@


1.5
log
@Fix the return value of test of getopt.  It is documented to return
EOF when there are no more args to process.  This happens also to be a
trivial difference between FreeBSD and OpenBSD which FreeBSD has
right.  Shouldn't break anything because EOF is #defined to be -1 on
BSD systems.
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.4 1996/08/02 17:39:50 tholo Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.4 1996/08/02 17:39:50 tholo Exp $";
d86 1
a86 1
	while ((ch = getopt(argc, argv, "benstuv")) != EOF)
@


1.4
log
@Exit with status >0 if any error occured; from FreeBSD
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.3 1996/08/02 12:40:48 deraadt Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.3 1996/08/02 12:40:48 deraadt Exp $";
d86 1
a86 1
	while ((ch = getopt(argc, argv, "benstuv")) != -1)
@


1.3
log
@zap getopt() case of -?, come on, it is the default!
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.2 1996/06/23 14:19:02 deraadt Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.2 1996/06/23 14:19:02 deraadt Exp $";
d139 1
d208 1
d229 1
d262 1
a262 1
	if (nr < 0)
d264 2
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: cat.c,v 1.11 1995/09/07 06:12:54 jtc Exp $	*/
d50 1
a50 1
static char rcsid[] = "$OpenBSD: cat.c,v 1.11 1995/09/07 06:12:54 jtc Exp $";
a109 1
		case '?':
@


1.1
log
@Initial revision
@
text
@d1 1
d50 1
a50 1
static char rcsid[] = "$NetBSD: cat.c,v 1.11 1995/09/07 06:12:54 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
