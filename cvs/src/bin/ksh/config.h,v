head	1.15;
access;
symbols
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.20
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.12
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.16
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.14
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.10
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.8
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.6
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.4
	OPENBSD_5_0:1.14.0.2
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.13.0.26
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.24
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.20
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.22
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.18
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.16
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.14
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.12
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.10
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.8
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.6
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.4
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.12
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.10
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.8
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.6
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	pdksh-527:1.1.1.1
	pdksh:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.09.14.16.10.55;	author nicm;	state Exp;
branches;
next	1.14;
commitid	kD6wyfoxFr5MKxZy;

1.14
date	2011.03.14.21.20.00;	author okan;	state Exp;
branches;
next	1.13;

1.13
date	2004.12.18.22.42.26;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2004.12.18.21.04.52;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2004.12.18.20.55.52;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.08.19.18.15;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.10.22.07.40.38;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.16.18.49.46;	author jsyn;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.28.09.45.09;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.11.21.44.58;	author marc;	state Exp;
branches;
next	1.5;

1.5
date	99.10.04.16.44.00;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.01.08.20.24.58;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.06.25.19.01.49;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.08.25.11.56.34;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.08.14.06.19.12;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.14.06.19.12;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.15
log
@SIZEOF_INT is no longer needed.
@
text
@/*	$OpenBSD: config.h,v 1.14 2011/03/14 21:20:00 okan Exp $	*/

/* config.h.  NOT generated automatically. */

/*
 * This file, config.h, which is a part of pdksh (the public domain ksh),
 * is placed in the public domain.  It comes with no licence, warranty
 * or guarantee of any kind (i.e., at your own risk).
 */

#ifndef CONFIG_H
#define CONFIG_H

/* Include emacs editing? */
#define EMACS 1

/* Include vi editing? */
#define VI 1

/* Include job control? */
#define JOBS 1

/* Include brace-expansion? */
#define BRACE_EXPAND 1

/* Include any history? */
#define HISTORY 1

/* Strict POSIX behaviour? */
/* #undef POSIXLY_CORRECT */

/* Specify default $ENV? */
/* #undef DEFAULT_ENV */

/*
 * End of configuration stuff for PD ksh.
 */

#if defined(EMACS) || defined(VI)
# define	EDIT
#else
# undef		EDIT
#endif

/* Super small configuration-- no editing. */
#if defined(EDIT) && defined(NOEDIT)
# undef EDIT
# undef EMACS
# undef VI
#endif

/* Editing implies history */
#if defined(EDIT) && !defined(HISTORY)
# define HISTORY
#endif /* EDIT */

#endif /* CONFIG_H */
@


1.14
log
@remove unused SILLY game of life.

no binary change.

sure @@deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.13 2004/12/18 22:42:26 millert Exp $	*/
a33 3

/* The number of bytes in a int.  */
#define SIZEOF_INT 4
@


1.13
log
@remove GCC_FUNC_ATTR/GCC_FUNC_ATTR2 and just use __attribute__ directly
(we define it away in sys/cdefs.h if it is not supported).
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.12 2004/12/18 21:04:52 millert Exp $	*/
a33 3

/* Include game-of-life? */
/* #undef SILLY */
@


1.12
log
@Get rid of #ifdef KSH since we don't care about building a V7 style sh and
the #ifdef KSH code is required to make a POSIX sh.  From Matthias Kilian
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.11 2004/12/18 20:55:52 millert Exp $	*/
a13 7



/* Define if C compiler groks __attribute__((...)) (const, noreturn, format) */
#define HAVE_GCC_FUNC_ATTR 1


a61 8

#ifdef HAVE_GCC_FUNC_ATTR
# define GCC_FUNC_ATTR(x)	__attribute__((x))
# define GCC_FUNC_ATTR2(x,y)	__attribute__((x,y))
#else
# define GCC_FUNC_ATTR(x)
# define GCC_FUNC_ATTR2(x,y)
#endif /* HAVE_GCC_FUNC_ATTR */
@


1.11
log
@Remove unused OS dependent #ifdef blocks, #defines and macro abstraction.
First step in making the ksh code easier to read.  From Matthias Kilian
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.10 2004/02/08 19:18:15 deraadt Exp $	*/
a19 3

/* Include ksh features? */
/* #define KSH 1 */
@


1.10
log
@forget about 16 bit machines; millert ok
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.9 2003/10/22 07:40:38 jmc Exp $	*/
d6 1
a6 1
 * This file, acconfig.h, which is a part of pdksh (the public domain ksh),
a13 79
/* Define if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _ALL_SOURCE
/* #undef _ALL_SOURCE */
#endif

/* Define if the closedir function returns void instead of int.  */
/* #undef CLOSEDIR_VOID */

/* Define to empty if the keyword does not work.  */
/* #undef const */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef gid_t */

/* Define if you have a working `mmap' system call.  */
#define HAVE_MMAP 1

/* Define if your struct stat has st_rdev.  */
#define HAVE_ST_RDEV 1

/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */
#define HAVE_SYS_WAIT_H 1

/* Define if you have <unistd.h>.  */
#define HAVE_UNISTD_H 1

/* Define if on MINIX.  */
/* #undef _MINIX */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef mode_t */

/* Define to `long' if <sys/types.h> doesn't define.  */
/* #undef off_t */

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef pid_t */

/* Define if the system does not provide POSIX.1 features except
   with this defined.  */
/* #undef _POSIX_1_SOURCE */

/* Define if you need to in order for stat and other things to work.  */
/* #undef _POSIX_SOURCE */

/* Define as the return type of signal handlers (int or void).  */
#define RETSIGTYPE void

/* Define if the `S_IS*' macros in <sys/stat.h> do not work properly.  */
/* #undef STAT_MACROS_BROKEN */

/* Define if `sys_siglist' is declared by <signal.h>.  */
#define SYS_SIGLIST_DECLARED 1

/* Define if you can safely include both <sys/time.h> and <time.h>.  */
#define TIME_WITH_SYS_TIME 1

/* Define to `int' if <sys/types.h> doesn't define.  */
/* #undef uid_t */

/* Define if the closedir function returns void instead of int.  */
/* #undef VOID_CLOSEDIR */

/* Define if your kernel doesn't handle scripts starting with #! */
/* #undef SHARPBANG */

/* Define if dup2() preserves the close-on-exec flag (ultrix does this) */
/* #undef DUP2_BROKEN */

/* Define as the return value of signal handlers (0 or ).  */
#define RETSIGVAL 

/* Define if you have posix signal routines (sigaction(), et. al.) */
#define POSIX_SIGNALS 1

/* Define if you have BSD4.2 signal routines (sigsetmask(), et. al.) */
/* #undef BSD42_SIGNALS */
a14 2
/* Define if you have BSD4.1 signal routines (sigset(), et. al.) */
/* #undef BSD41_SIGNALS */
a15 29
/* Define if you have v7 signal routines (signal(), signal reset on delivery) */
/* #undef V7_SIGNALS */

/* Define to use the fake posix signal routines (sigact.[ch]) */
/* #undef USE_FAKE_SIGACT */

/* Define if signals don't interrupt read() */
/* #undef SIGNALS_DONT_INTERRUPT */

/* Define if you have bsd versions of the setpgrp() and getpgrp() routines */
/* #undef BSD_PGRP */

/* Define if you have POSIX versions of the setpgid() and getpgrp() routines */
#define POSIX_PGRP 1

/* Define if you have sysV versions of the setpgrp() and getpgrp() routines */
/* #undef SYSV_PGRP */

/* Define if you don't have setpgrp(), setpgid() or getpgrp() routines */
/* #undef NO_PGRP */

/* Define to char if your compiler doesn't like the void keyword */
/* #undef void */

/* Define to nothing if compiler doesn't like the volatile keyword */
/* #undef volatile */

/* Define if C compiler groks function prototypes */
#define HAVE_PROTOTYPES 1
a19 72
/* Define to 32-bit signed integer type if <sys/types.h> doesn't define */
/* #undef clock_t */

/* Define to the type of struct rlimit fields if the rlim_t type is missing */
/* #undef rlim_t */

/* Define if time() is declared in <time.h> */
#define TIME_DECLARED 1

/* Define to `unsigned' if <signal.h> doesn't define */
/* #undef sigset_t */

/* Define if sys_errlist[] and sys_nerr are in the C library */
#define HAVE_SYS_ERRLIST 1

/* Define if sys_errlist[] and sys_nerr are defined in <errno.h> */
#define SYS_ERRLIST_DECLARED 1

/* Define if sys_siglist[] is in the C library */
#define HAVE_SYS_SIGLIST 1

/* Define if you have a sane <termios.h> header file */
#define HAVE_TERMIOS_H 1

/* Define if you have a memset() function in your C library */
#define HAVE_MEMSET 1

/* Define if you have a memmove() function in your C library */
#define HAVE_MEMMOVE 1

/* Define if you have a bcopy() function in your C library */
/* #undef HAVE_BCOPY */

/* Define if you have a lstat() function in your C library */
#define HAVE_LSTAT 1

/* Define if you have a sane <termio.h> header file */
/* #undef HAVE_TERMIO_H */

/* Define if you don't have times() or if it always returns 0 */
/* #undef TIMES_BROKEN */

/* Define if opendir() will open non-directory files */
/* #undef OPENDIR_DOES_NONDIR */

/* Define if you have a dup2() function in your C library */
#define	HAVE_DUP2 1

/* Define if the pgrp of setpgrp() can't be the pid of a zombie process */
/* #undef NEED_PGRP_SYNC */

/* Define if you arg running SCO unix */
/* #undef OS_SCO */

/* Define if you arg running ISC unix */
/* #undef OS_ISC */

/* Define if you arg running OS2 with the EMX library */
/* #undef OS2 */

/* Define if you have a POSIX.1 compatible <sys/wait.h> */
#define POSIX_SYS_WAIT 1

/* Define if your OS maps references to /dev/fd/n to file descriptor n */
#define HAVE_DEV_FD 1

/* Default PATH */
#define DEFAULT_PATH "/bin:/usr/bin:/sbin:/usr/sbin"

/* Define if your C library's getwd/getcwd function dumps core in unreadable
 * directories.  */
/* #undef HPUX_GETWD_BUG */
a38 3
/* Include complex history? */
#define COMPLEX_HISTORY

a44 3
/* Include shl(1) support? */
/* #undef SWTCH */

d51 3
a53 2
/* Define if you have the _setjmp function.  */
/* #undef HAVE__SETJMP */
d55 5
a59 2
/* Define if you have the confstr function.  */
#define HAVE_CONFSTR 1
d61 6
a66 38
/* Define if you have the flock function.  */
#define HAVE_FLOCK 1

/* Define if you have the getcwd function.  */
#define HAVE_GETCWD 1

/* Define if you have the getgroups function.  */
/* #undef HAVE_GETGROUPS */

/* Define if you have the getpagesize function.  */
#define HAVE_GETPAGESIZE 1

/* Define if you have the getrusage function.  */
/* #undef HAVE_GETRUSAGE */

/* Define if you have the getwd function.  */
#define HAVE_GETWD 1

/* Define if you have the killpg function.  */
#define HAVE_KILLPG 1

/* Define if you have the nice function.  */
#define HAVE_NICE 1

/* Define if you have the setrlimit function.  */
#define HAVE_SETRLIMIT 1

/* Define if you have the sigsetjmp function.  */
#define HAVE_SIGSETJMP 1

/* Define if you have the strcasecmp function.  */
#define HAVE_STRCASECMP 1

/* Define if you have the strerror function.  */
#define HAVE_STRERROR 1

/* Define if you have the strstr function.  */
#define HAVE_STRSTR 1
d68 12
a79 73
/* Define if you have the sysconf function.  */
#define HAVE_SYSCONF 1

/* Define if you have the tcsetpgrp function.  */
#define HAVE_TCSETPGRP 1

/* Define if you have the ulimit function.  */
/* #undef HAVE_ULIMIT */

/* Define if you have the valloc function.  */
#define HAVE_VALLOC 1

/* Define if you have the wait3 function.  */
#define HAVE_WAIT3 1

/* Define if you have the waitpid function.  */
#define HAVE_WAITPID 1

/* Define if you have the <dirent.h> header file.  */
#define HAVE_DIRENT_H 1

/* Define if you have the <fcntl.h> header file.  */
#define HAVE_FCNTL_H 1

/* Define if you have the <limits.h> header file.  */
#define HAVE_LIMITS_H 1

/* Define if you have the <memory.h> header file.  */
#define HAVE_MEMORY_H 1

/* Define if you have the <ndir.h> header file.  */
/* #undef HAVE_NDIR_H */

/* Define if you have the <paths.h> header file.  */
#define HAVE_PATHS_H 1

/* Define if you have the <stddef.h> header file.  */
#define HAVE_STDDEF_H 1

/* Define if you have the <stdlib.h> header file.  */
#define HAVE_STDLIB_H 1

/* Define if you have the <string.h> header file.  */
#define HAVE_STRING_H 1

/* Define if you have the <sys/dir.h> header file.  */
/* #undef HAVE_SYS_DIR_H */

/* Define if you have the <sys/ndir.h> header file.  */
/* #undef HAVE_SYS_NDIR_H */

/* Define if you have the <sys/param.h> header file.  */
#define HAVE_SYS_PARAM_H 1

/* Define if you have the <sys/resource.h> header file.  */
#define HAVE_SYS_RESOURCE_H 1

/* Define if you have the <sys/time.h> header file.  */
#define HAVE_SYS_TIME_H 1

/* Define if you have the <sys/wait.h> header file.  */
#define HAVE_SYS_WAIT_H 1

/* Define if you have the <ulimit.h> header file.  */
/* #undef HAVE_ULIMIT_H */

/* Define if you have the <values.h> header file.  */
/* #undef HAVE_VALUES_H */

/* Need to use a separate file to keep the configure script from commenting
 * out the undefs....
 */
#include "conf-end.h"
@


1.9
log
@typos from Jared Yanovich;
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.8 2003/05/16 18:49:46 jsyn Exp $	*/
a237 7

/* The number of bytes in a long.  */
#if defined(alpha)
#define SIZEOF_LONG 8
#else
#define SIZEOF_LONG 4
#endif
@


1.8
log
@make ksh use our dup2(), and add clarity (we've no configure.in there);
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.7 2003/02/28 09:45:09 jmc Exp $	*/
d79 1
a79 1
/* Define if your kernal doesn't handle scripts starting with #! */
@


1.7
log
@typos; from Brian Poole
@
text
@d1 3
a3 1
/*	$OpenBSD: config.h,v 1.6 2002/08/11 21:44:58 marc Exp $	*/
a4 2
/* config.h.  Generated automatically by configure.  */
/* config.h.in.  Generated automatically from configure.in by autoheader.  */
a13 1

a26 1

d175 3
d196 1
a196 1
/* Default PATH (see comments in configure.in for more details) */
d203 1
a203 1
/* Include ksh features? (see comments in configure.in for more details) */
d206 1
a206 1
/* Include emacs editing? (see comments in configure.in for more details) */
d209 1
a209 1
/* Include vi editing? (see comments in configure.in for more details) */
d212 1
a212 1
/* Include job control? (see comments in configure.in for more details) */
d215 1
a215 1
/* Include brace-expansion? (see comments in configure.in for more details) */
d218 1
a218 1
/* Include any history? (see comments in configure.in for more details) */
d221 1
a221 1
/* Include complex history? (see comments in configure.in for more details) */
d224 1
a224 1
/* Strict POSIX behaviour? (see comments in configure.in for more details) */
d227 1
a227 1
/* Specify default $ENV? (see comments in configure.in for more details) */
d230 1
a230 1
/* Include shl(1) support? (see comments in configure.in for more details) */
d233 1
a233 1
/* Include game-of-life? (see comments in configure.in for more details) */
@


1.6
log
@enable COMPLEX_HISTORY.   sh/ksh history will now work
as described in the man page.   OK millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.5 1999/10/04 16:44:00 deraadt Exp $	*/
d189 1
a189 1
/* Define if you have a POSIX.1 compatiable <sys/wait.h> */
@


1.5
log
@put sbin:/usr/sbin in default path
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.4 1999/01/08 20:24:58 millert Exp $	*/
d221 1
a221 1
/* #undef COMPLEX_HISTORY */
@


1.4
log
@bug fixes from pdksh-unstable-5.2.13.5; some of which we already had.
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.3 1998/06/25 19:01:49 millert Exp $	*/
d196 1
a196 1
#define DEFAULT_PATH "/bin:/usr/bin:/usr/ucb"
@


1.3
log
@pdksh-5.2.13 + local changes
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.2 1996/08/25 11:56:34 downsj Exp $	*/
d198 4
d253 3
@


1.2
log
@Removed unused file and move KSH define to CFLAGS.
@
text
@d1 1
a1 1
/*	$OpenBSD: config.h,v 1.1.1.1 1996/08/14 06:19:12 downsj Exp $	*/
d253 3
d291 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d199 1
a199 1
#define KSH 1
@


1.1.1.1
log
@Import pdksh 5.2.7.
@
text
@@
