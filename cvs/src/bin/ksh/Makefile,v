head	1.33;
access;
symbols
	OPENBSD_6_1:1.33.0.6
	OPENBSD_6_1_BASE:1.33
	OPENBSD_6_0:1.33.0.2
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.31.0.2
	OPENBSD_5_9_BASE:1.31
	OPENBSD_5_8:1.29.0.10
	OPENBSD_5_8_BASE:1.29
	OPENBSD_5_7:1.29.0.2
	OPENBSD_5_7_BASE:1.29
	OPENBSD_5_6:1.29.0.6
	OPENBSD_5_6_BASE:1.29
	OPENBSD_5_5:1.29.0.4
	OPENBSD_5_5_BASE:1.29
	OPENBSD_5_4:1.28.0.6
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.28.0.4
	OPENBSD_5_3_BASE:1.28
	OPENBSD_5_2:1.28.0.2
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.27
	OPENBSD_5_1:1.27.0.12
	OPENBSD_5_0:1.27.0.10
	OPENBSD_5_0_BASE:1.27
	OPENBSD_4_9:1.27.0.8
	OPENBSD_4_9_BASE:1.27
	OPENBSD_4_8:1.27.0.6
	OPENBSD_4_8_BASE:1.27
	OPENBSD_4_7:1.27.0.2
	OPENBSD_4_7_BASE:1.27
	OPENBSD_4_6:1.27.0.4
	OPENBSD_4_6_BASE:1.27
	OPENBSD_4_5:1.26.0.6
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.26.0.4
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.26.0.2
	OPENBSD_4_3_BASE:1.26
	OPENBSD_4_2:1.25.0.8
	OPENBSD_4_2_BASE:1.25
	OPENBSD_4_1:1.25.0.6
	OPENBSD_4_1_BASE:1.25
	OPENBSD_4_0:1.25.0.4
	OPENBSD_4_0_BASE:1.25
	OPENBSD_3_9:1.25.0.2
	OPENBSD_3_9_BASE:1.25
	OPENBSD_3_8:1.24.0.2
	OPENBSD_3_8_BASE:1.24
	OPENBSD_3_7:1.23.0.2
	OPENBSD_3_7_BASE:1.23
	OPENBSD_3_6:1.18.0.4
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.18.0.2
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.12
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.10
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.8
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.6
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.4
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.9.0.4
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.2
	OPENBSD_2_3_BASE:1.9
	pdksh-527:1.1.1.1
	pdksh:1.1.1;
locks; strict;
comment	@# @;


1.33
date	2016.03.30.06.38.40;	author jmc;	state Exp;
branches;
next	1.32;
commitid	LN9ijdk9SEnzWAbM;

1.32
date	2016.03.04.15.11.06;	author deraadt;	state Exp;
branches;
next	1.31;
commitid	lvfr78VLuzkoupSX;

1.31
date	2015.10.22.02.29.20;	author mmcc;	state Exp;
branches;
next	1.30;
commitid	R1wbOk2KgqRu97ai;

1.30
date	2015.10.10.00.10.07;	author deraadt;	state Exp;
branches;
next	1.29;
commitid	xaTgTtwXn5YGjAmi;

1.29
date	2013.12.02.20.41.01;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2012.04.30.03.51.29;	author djm;	state Exp;
branches;
next	1.27;

1.27
date	2009.03.03.20.01.01;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2008.01.12.22.36.34;	author miod;	state Exp;
branches;
next	1.25;

1.25
date	2005.10.06.06.39.35;	author otto;	state Exp;
branches;
next	1.24;

1.24
date	2005.03.30.17.16.37;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2004.12.31.16.24.09;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2004.12.30.21.34.24;	author otto;	state Exp;
branches;
next	1.21;

1.21
date	2004.12.22.17.47.03;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2004.12.18.21.04.52;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2004.12.18.20.55.52;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2004.02.16.19.07.19;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2004.02.10.02.43.48;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2004.01.09.17.10.07;	author brad;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.11.09.41.31;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.08.22.32.10;	author miod;	state Exp;
branches;
next	1.13;

1.13
date	2002.04.22.21.44.58;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	99.09.28.02.18.30;	author smurph;	state Exp;
branches;
next	1.11;

1.11
date	99.06.15.01.18.32;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	99.01.10.17.55.01;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	98.03.06.05.39.59;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	96.11.30.23.54.36;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	96.08.25.11.56.33;	author downsj;	state Exp;
branches;
next	1.6;

1.6
date	96.08.20.16.50.30;	author downsj;	state Exp;
branches;
next	1.5;

1.5
date	96.08.19.20.34.19;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	96.08.14.08.45.29;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.08.14.08.37.57;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.08.14.06.41.10;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.08.14.06.19.12;	author downsj;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.08.14.06.19.12;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.33
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@#	$OpenBSD: Makefile,v 1.32 2016/03/04 15:11:06 deraadt Exp $

PROG=	ksh
SRCS=	alloc.c c_ksh.c c_sh.c c_test.c c_ulimit.c edit.c emacs.c eval.c \
	exec.c expr.c history.c io.c jobs.c lex.c mail.c main.c \
	misc.c path.c shf.c syn.c table.c trap.c tree.c tty.c var.c \
	version.c vi.c

DEFS=	-Wall
CFLAGS+=${DEFS} -I. -I${.CURDIR} -I${.CURDIR}/../../lib/libc/gen
MAN=	ksh.1 sh.1

LINKS=	${BINDIR}/ksh ${BINDIR}/rksh
LINKS+=	${BINDIR}/ksh ${BINDIR}/sh

.include <bsd.prog.mk>
@


1.32
log
@remove CSRG BSD-licensed mknod builtin code which was previously used to
accelerate install/upgrade time MAKEDEV runs.  That allows ramdisk ksh
to be pledged, without needing "dpath".  We'll solve the performance issues
a different way (soon).
ok otto espie natano tb tobiasu rpe
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2015/10/22 02:29:20 mmcc Exp $
a14 1
MLINKS=	ksh.1 rksh.1
@


1.31
log
@Fix typo in comment. From Theo Buehler.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2015/10/10 00:10:07 deraadt Exp $
d5 1
a5 1
	exec.c expr.c history.c io.c jobs.c lex.c mail.c main.c mknod.c \
a8 1
# -DMKNOD - enable builtin mknod; conflicts with pledge(2)
@


1.30
log
@ksh can run with pledge "stdio rpath wpath cpath getpw fattr proc exec tty"
if the mknod builtin is disabled.  It looks like a lot of abilities, but
hey, this is a shell.  can't open sockets or do other nasty stuff though.
(we'll leave the mknod builtin enabled on the install media for now; there
is work happening to regain the MAKEDEV performance in a different way)
discussions with otto & millert in particular
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2013/12/02 20:41:01 millert Exp $
d9 1
a9 1
# -DMKNOD - enable builtin mknod; conficts with pledge(2)
@


1.29
log
@Move ksh test files into regressMove ksh test files into regressMove ksh test files into regress.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2012/04/30 03:51:29 djm Exp $
d9 1
@


1.28
log
@generalise ksh keybinding system - bindings are no longer limited in
length and need not start with ESC or ^X; patch from marco@@ feedback mpi@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2009/03/03 20:01:01 millert Exp $
a15 4

check test:
	/usr/bin/perl ${.CURDIR}/tests/th -s ${.CURDIR}/tests -p ./ksh -C \
	    pdksh,sh,ksh,posix,posix-upu
@


1.27
log
@Add POSIX character class support ([:alpha:] and friends) to ksh globbing.
OK deraadt@@ krw@@ jmc@@ sobrado@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2008/01/12 22:36:34 miod Exp $
a12 2
CLEANFILES+=	emacs.out

a15 5

.depend emacs.o: emacs.out

emacs.out: emacs.c
	/bin/sh ${.CURDIR}/emacs-gen.sh ${.CURDIR}/emacs.c > emacs.out
@


1.26
log
@Remove ulimit MLINK, it is a shell built-in.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2005/10/06 06:39:35 otto Exp $
d10 1
a10 1
CFLAGS+=${DEFS} -I. -I${.CURDIR}
@


1.25
log
@Introducing mknod as a built-in. It might be against the unix
philosophy, but in this case it's worth it. ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2005/03/30 17:16:37 deraadt Exp $
d17 1
a17 1
MLINKS=	ksh.1 rksh.1 ksh.1 ulimit.1
@


1.24
log
@lots of indentation cleanup, now ksh is readable like our other code.
double checked to make sure no binaries change, and eyed by niallo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2004/12/31 16:24:09 millert Exp $
d5 3
a7 2
	exec.c expr.c history.c io.c jobs.c lex.c mail.c main.c misc.c path.c \
	shf.c syn.c table.c trap.c tree.c tty.c var.c version.c vi.c
@


1.23
log
@Call perl directly instead of using an sh script to find it.
OK otto@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2004/12/30 21:34:24 otto Exp $
d4 3
a6 4
SRCS=	alloc.c c_ksh.c c_sh.c c_test.c c_ulimit.c edit.c emacs.c \
	eval.c exec.c expr.c history.c io.c jobs.c lex.c mail.c \
	main.c misc.c path.c shf.c syn.c table.c trap.c \
	tree.c tty.c var.c version.c vi.c
d24 2
a25 1
	/usr/bin/perl ${.CURDIR}/tests/th -s ${.CURDIR}/tests -p ./ksh -C pdksh,sh,ksh,posix,posix-upu
@


1.22
log
@Remove -Wno-unused form CFLAGS and kill some unused vars found as a result of
that. ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2004/12/22 17:47:03 millert Exp $
d25 1
a25 1
	/bin/sh ${.CURDIR}/tests/th.sh ${.CURDIR}/tests/th -s ${.CURDIR}/tests -p ./ksh -C pdksh,sh,ksh,posix,posix-upu
@


1.21
log
@Use sys_signame and sys_siglist instead of building a list of signal
values and names via an awk script.  OK otto@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2004/12/18 21:04:52 millert Exp $
d9 1
a9 1
DEFS=	-Wall -Wno-unused
@


1.20
log
@Get rid of #ifdef KSH since we don't care about building a V7 style sh and
the #ifdef KSH code is required to make a POSIX sh.  From Matthias Kilian
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2004/12/18 20:55:52 millert Exp $
d13 1
a13 1
CLEANFILES+=	siglist.out emacs.out
a18 1
.depend trap.o: siglist.out
a19 5

siglist.out: config.h sh.h siglist.in siglist.sh
	/bin/sh ${.CURDIR}/siglist.sh \
		"${CC} -E ${CPPFLAGS} ${DEFS} -I${.CURDIR}" \
		< ${.CURDIR}/siglist.in > siglist.out
@


1.19
log
@Remove unused OS dependent #ifdef blocks, #defines and macro abstraction.
First step in making the ksh code easier to read.  From Matthias Kilian
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2004/02/16 19:07:19 deraadt Exp $
d10 1
a10 1
CFLAGS+=${DEFS} -I. -I${.CURDIR} -DKSH
@


1.18
log
@give up on amd64 -O0
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2004/02/10 02:43:48 deraadt Exp $
d6 1
a6 1
	main.c misc.c missing.c path.c shf.c syn.c table.c trap.c \
d9 1
a9 1
DEFS=	-DHAVE_CONFIG_H -Wall -Wno-unused
@


1.17
log
@XXX: build ksh -O0 for now, since it makes it a whole lot more stable.
we'll figure out what the bug is later, or maybe some of the other
fixes going in will fix it..
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2004/01/09 17:10:07 brad Exp $
a11 4

.if (${MACHINE} == "amd64")
CFLAGS+=-O0
.endif
@


1.16
log
@use cc -E for the preprocessor instead of cpp.

ok espie@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2003/08/11 09:41:31 miod Exp $
d12 4
@


1.15
log
@I can not reproduce the ksh -O1 issues anymore on mvme88k with the latest
snapshot, so stop disabling optimization.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2003/08/08 22:32:10 miod Exp $
d24 1
a24 1
		"${CPP} ${CPPFLAGS} ${DEFS} -I${.CURDIR}" \
@


1.14
log
@Enable the first level of compiler optimizations on mvme88k by default,
now that is getting stable.
ksh(1) still has to be builh at -O0 for now, though.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2002/04/22 21:44:58 miod Exp $
a33 4

.if (${MACHINE_ARCH} == "m88k")
CFLAGS+= -O0
.endif
@


1.13
log
@Do not hardcode mvme88k-specific compilation flags here, especially since
the new flags happen to be no different from those set in <sys.mk>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1999/09/28 02:18:30 smurph Exp $
d34 4
@


1.12
log
@disable optimization on 88k
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1999/06/15 01:18:32 millert Exp $
a11 4

.if (${MACHINE_ARCH} == "m88k")
CFLAGS+=-O0
.endif
@


1.11
log
@patches from pdksh 5.2.13.11
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1999/01/10 17:55:01 millert Exp $
d12 4
@


1.10
log
@sync with pdksh-unstable-5.2.13.6
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1998/03/06 05:39:59 millert Exp $
d29 3
@


1.9
log
@Add unlimit man link for csh and ulimit man link for sh.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1996/11/30 23:54:36 downsj Exp $
d9 1
a9 1
DEFS=	-DHAVE_CONFIG_H
@


1.8
log
@Install ksh as sh too.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1996/08/25 11:56:33 downsj Exp $
d17 1
a17 1
MLINKS=	ksh.1 rksh.1
@


1.7
log
@Removed unused file and move KSH define to CFLAGS.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1996/08/20 16:50:30 downsj Exp $
d11 1
d16 1
@


1.6
log
@Forgot emacs.out depends on emacs.c.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1996/08/19 20:34:19 downsj Exp $
d6 1
a6 1
	main.c misc.c missing.c path.c shf.c sigact.c syn.c table.c trap.c \
d10 1
a10 1
CFLAGS+=${DEFS} -I. -I${.CURDIR}
@


1.5
log
@invoke /bin/sh
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1996/08/14 08:45:29 downsj Exp $
d25 1
a25 1
emacs.out:
@


1.4
log
@Ok, I give up kill the pdksh links.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1996/08/14 08:37:57 downsj Exp $
d21 2
a22 1
	${.CURDIR}/siglist.sh "${CPP} ${CPPFLAGS} ${DEFS} -I${.CURDIR}" \
d26 1
a26 1
	${.CURDIR}/emacs-gen.sh ${.CURDIR}/emacs.c > emacs.out
@


1.3
log
@Yet more links.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 1996/08/14 06:41:10 downsj Exp $
d14 2
a15 6
LINKS=	${BINDIR}/ksh ${BINDIR}/pdksh
LINKS+= ${BINDIR}/ksh ${BINDIR}/rksh
LINKS+= ${BINDIR}/ksh ${BINDIR}/rpdksh
MLINKS=	ksh.1 pdksh.1
MLINKS+=ksh.1 rksh.1
MLINKS+=ksh.1 rpdksh.1
@


1.2
log
@Add links.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1.1.1 1996/08/14 06:19:12 downsj Exp $
d15 2
d18 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD$
d13 3
@


1.1.1.1
log
@Import pdksh 5.2.7.
@
text
@@

