head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.2
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.18.0.12
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.8
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.10
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.6
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.16.0.14
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.12
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.10
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.16
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.12
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.8
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.7.0.16
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.14
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.12
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.10
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.8
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2016.08.25.05.25.21;	author tedu;	state Exp;
branches;
next	1.19;
commitid	0JtSH9PAL8XgI5cD;

1.19
date	2016.08.14.21.13.08;	author krw;	state Exp;
branches;
next	1.18;
commitid	ZgByHtDv62ynS8Qy;

1.18
date	2014.02.12.01.18.36;	author bluhm;	state Exp;
branches;
next	1.17;

1.17
date	2013.04.16.22.13.43;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2009.10.27.23.59.21;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2006.03.22.18.08.04;	author dhill;	state Exp;
branches;
next	1.14;

1.14
date	2005.05.27.04.14.24;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.11.23.42.12;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.02.23.32.07;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.29.02.09.39;	author hugh;	state Exp;
branches;
next	1.10;

1.10
date	2001.08.07.14.39.27;	author hugh;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.25.08.06.04;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.22.23.52.35;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.09.12.04.33.24;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.08.05.22.50.51;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.08.05.22.22.53;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.02.14.07.05.21;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.12.14.12.17.50;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.19.49;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.06;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@remove lint comments
@
text
@/*	$OpenBSD: misc.c,v 1.19 2016/08/14 21:13:08 krw Exp $	*/
/*	$NetBSD: misc.c,v 1.4 1995/03/21 09:04:10 cgd Exp $	*/

/*-
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Keith Muller of the University of California, San Diego and Lance
 * Visser of Convex Computer Corporation.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/time.h>
#include <sys/uio.h>

#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>
#include <time.h>
#include <unistd.h>

#include "dd.h"
#include "extern.h"

void
summary(void)
{
	struct timeval nowtv;
	char buf[4][100];
	struct iovec iov[4];
	double microsecs;
	int i = 0;

	if (ddflags & C_NOINFO)
		return;

	(void)gettimeofday(&nowtv, (struct timezone *)NULL);
	timersub(&nowtv, &st.startv, &nowtv);
	microsecs = ((double)nowtv.tv_sec * 1000000) + nowtv.tv_usec;
	if (microsecs == 0)
		microsecs = 1;

	/* Use snprintf(3) so that we don't reenter stdio(3). */
	(void)snprintf(buf[0], sizeof(buf[0]),
	    "%zu+%zu records in\n%zu+%zu records out\n",
	    st.in_full, st.in_part, st.out_full, st.out_part);
	iov[i].iov_base = buf[0];
	iov[i++].iov_len = strlen(buf[0]);

	if (st.swab) {
		(void)snprintf(buf[1], sizeof(buf[1]),
		    "%zu odd length swab %s\n",
		     st.swab, (st.swab == 1) ? "block" : "blocks");
		iov[i].iov_base = buf[1];
		iov[i++].iov_len = strlen(buf[1]);
	}
	if (st.trunc) {
		(void)snprintf(buf[2], sizeof(buf[2]),
		    "%zu truncated %s\n",
		     st.trunc, (st.trunc == 1) ? "block" : "blocks");
		iov[i].iov_base = buf[2];
		iov[i++].iov_len = strlen(buf[2]);
	}
	if (!(ddflags & C_NOXFER)) {
		(void)snprintf(buf[3], sizeof(buf[3]),
		    "%lld bytes transferred in %lld.%03ld secs "
		    "(%0.0f bytes/sec)\n", (long long)st.bytes,
		    (long long)nowtv.tv_sec, nowtv.tv_usec / 1000,
		    ((double)st.bytes * 1000000) / microsecs);
		iov[i].iov_base = buf[3];
		iov[i++].iov_len = strlen(buf[3]);
	}

	(void)writev(STDERR_FILENO, iov, i);
}

void
summaryx(int notused)
{
	int save_errno = errno;

	summary();
	errno = save_errno;
}

void
terminate(int notused)
{

	summary();
	_exit(0);
}
@


1.19
log
@%qd -> %lld for an off_t already being cast to (long long)!
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.18 2014/02/12 01:18:36 bluhm Exp $	*/
a103 1
/* ARGSUSED */
a112 1
/* ARGSUSED */
@


1.18
log
@Add an operand to /bin/dd that suppresses the status lines printed
to stderr after transfer.  Use the GNU syntax status=noxfer and
status=none to make dd quiet.  The output is annoying in some
situations, so people redirect stderr to /dev/null.  This approach
also suppresses the error messages and bugs in shell scripts remain
undetected.  The new feature status=none is the better alternative.
OK mpf@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.17 2013/04/16 22:13:43 deraadt Exp $	*/
d93 1
a93 1
		    "%qd bytes transferred in %lld.%03ld secs "
@


1.17
log
@handle larger tv_sec types
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.16 2009/10/27 23:59:21 deraadt Exp $	*/
d61 3
d91 9
a99 7
	(void)snprintf(buf[3], sizeof(buf[3]),
	    "%qd bytes transferred in %lld.%03ld secs (%0.0f bytes/sec)\n",
	    (long long)st.bytes, (long long)nowtv.tv_sec, nowtv.tv_usec / 1000,
	    ((double)st.bytes * 1000000) / microsecs);

	iov[i].iov_base = buf[3];
	iov[i++].iov_len = strlen(buf[3]);
@


1.16
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.15 2006/03/22 18:08:04 dhill Exp $	*/
d89 2
a90 2
	    "%qd bytes transferred in %ld.%03ld secs (%0.0f bytes/sec)\n",
	    (long long)st.bytes, nowtv.tv_sec, nowtv.tv_usec / 1000,
@


1.15
log
@change %u to %zu to correctly print size_t

ok ray@@ jaredy@@ moritz@@
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.14 2005/05/27 04:14:24 millert Exp $	*/
a35 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)misc.c	8.3 (Berkeley) 4/2/94";
#else
static char rcsid[] = "$OpenBSD: misc.c,v 1.14 2005/05/27 04:14:24 millert Exp $";
#endif
#endif /* not lint */
@


1.14
log
@include sys/time.h to get struct timeval
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.13 2003/06/11 23:42:12 deraadt Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.13 2003/06/11 23:42:12 deraadt Exp $";
d77 1
a77 1
	    "%u+%u records in\n%u+%u records out\n",
d84 1
a84 1
		    "%u odd length swab %s\n",
d91 1
a91 1
		    "%u truncated %s\n",
@


1.13
log
@ansification, art ok
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.12 2003/06/02 23:32:07 millert Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.12 2003/06/02 23:32:07 millert Exp $";
d46 1
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.11 2002/05/29 02:09:39 hugh Exp $	*/
d41 1
a41 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.11 2002/05/29 02:09:39 hugh Exp $";
d60 1
a60 1
summary()
d108 1
a108 2
summaryx(notused)
	int notused;
d118 1
a118 2
terminate(notused)
	int notused;
@


1.11
log
@Add a cast to keep time from overflowing. Checked by millert.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.10 2001/08/07 14:39:27 hugh Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d41 1
a41 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.10 2001/08/07 14:39:27 hugh Exp $";
@


1.10
log
@Modify timekeeping in an effort to produce a sane bandwidth measure
for a short running dd process. Some floating point is used so that
microsecond precision can be kept without shortening the off_t
excessively. millert says ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.9 2001/06/25 08:06:04 deraadt Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.9 2001/06/25 08:06:04 deraadt Exp $";
d74 2
a75 1
	if ((microsecs = (nowtv.tv_sec * 1000000) + nowtv.tv_usec) == 0)
@


1.9
log
@had not noticed the atexit() handler; pointed out by  dima@@unixfreak.org; also use writev to increase atomicity
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.9 2001/06/25 02:36:44 deraadt Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.9 2001/06/25 02:36:44 deraadt Exp $";
d66 1
a66 1
	time_t secs;
d69 1
d72 5
a76 3
	(void)time(&secs);
	if ((secs -= st.start) == 0)
		secs = 1;
d99 4
a102 2
	    "%qd bytes transferred in %ld secs (%qd bytes/sec)\n",
	    st.bytes, (long)secs, st.bytes / secs);
@


1.8
log
@do not exit() from signal handler
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.8 2001/06/22 18:27:37 deraadt Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.8 2001/06/22 18:27:37 deraadt Exp $";
d50 1
d67 3
a69 1
	char buf[100];
d75 1
a75 1
	(void)snprintf(buf, sizeof(buf),
d78 3
a80 1
	(void)write(STDERR_FILENO, buf, strlen(buf));
d82 2
a83 1
		(void)snprintf(buf, sizeof(buf), "%u odd length swab %s\n",
d85 2
a86 1
		(void)write(STDERR_FILENO, buf, strlen(buf));
d89 2
a90 1
		(void)snprintf(buf, sizeof(buf), "%u truncated %s\n",
d92 2
a93 1
		(void)write(STDERR_FILENO, buf, strlen(buf));
d95 1
a95 1
	(void)snprintf(buf, sizeof(buf),
d98 4
a101 1
	(void)write(STDERR_FILENO, buf, strlen(buf));
d121 1
@


1.7
log
@-Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.6 1997/08/05 22:50:51 deraadt Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.6 1997/08/05 22:50:51 deraadt Exp $";
d109 1
a109 1
	exit(0);
@


1.6
log
@errno.h
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.5 1997/08/05 22:22:53 deraadt Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.5 1997/08/05 22:22:53 deraadt Exp $";
d88 1
a88 1
	    st.bytes, secs, st.bytes / secs);
@


1.5
log
@make signal handlers errno safe
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.4 1997/02/14 07:05:21 millert Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.4 1997/02/14 07:05:21 millert Exp $";
d55 1
@


1.4
log
@Deal with 64-bit offsets and report bytes copied as a 64-bit quantity.
Closes OpenBSD PR system/107.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.3 1996/12/14 12:17:50 mickey Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.3 1996/12/14 12:17:50 mickey Exp $";
d96 1
d99 1
@


1.3
log
@-Wall'ing.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.2 1996/06/23 14:19:49 deraadt Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.2 1996/06/23 14:19:49 deraadt Exp $";
d72 1
a72 1
	    "%lu+%lu records in\n%lu+%lu records out\n",
d76 1
a76 1
		(void)snprintf(buf, sizeof(buf), "%lu odd length swab %s\n",
d81 1
a81 1
		(void)snprintf(buf, sizeof(buf), "%lu truncated %s\n",
d86 1
a86 1
	    "%lu bytes transferred in %lu secs (%lu bytes/sec)\n",
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.4 1995/03/21 09:04:10 cgd Exp $	*/
d45 1
a45 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.4 1995/03/21 09:04:10 cgd Exp $";
d72 1
a72 1
	    "%u+%u records in\n%u+%u records out\n",
d76 1
a76 1
		(void)snprintf(buf, sizeof(buf), "%u odd length swab %s\n",
d81 1
a81 1
		(void)snprintf(buf, sizeof(buf), "%u truncated %s\n",
d86 1
a86 1
	    "%u bytes transferred in %u secs (%u bytes/sec)\n",
@


1.1
log
@Initial revision
@
text
@d1 1
d45 1
a45 1
static char rcsid[] = "$NetBSD: misc.c,v 1.4 1995/03/21 09:04:10 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
