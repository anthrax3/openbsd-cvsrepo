head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.12
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.8
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.10
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.6
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.42
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.40
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.26
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.8
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.08.16.16.44.55;	author krw;	state Exp;
branches;
next	1.6;
commitid	7RqJkd00r8P43axL;

1.6
date	2014.02.12.01.18.36;	author bluhm;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.23.32.07;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.07.14.39.27;	author hugh;	state Exp;
branches;
next	1.3;

1.3
date	97.02.14.07.05.20;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.14.19.48;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.37.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.37.06;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Nuke a bunch of whitespace nits seen while '%q' hunting.
@
text
@/*	$OpenBSD: dd.h,v 1.6 2014/02/12 01:18:36 bluhm Exp $	*/
/*	$NetBSD: dd.h,v 1.4 1995/03/21 09:04:08 cgd Exp $	*/

/*-
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Keith Muller of the University of California, San Diego and Lance
 * Visser of Convex Computer Corporation.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dd.h	8.3 (Berkeley) 4/2/94
 */

/* Input/output stream state. */
typedef struct {
	u_char	*db;			/* buffer address */
	u_char	*dbp;			/* current buffer I/O address */
	size_t	dbcnt;			/* current buffer byte count */
	size_t	dbrcnt;			/* last read byte count */
	size_t	dbsz;			/* buffer size */

#define	ISCHR		0x01		/* character device (warn on short) */
#define	ISPIPE		0x02		/* pipe (not truncatable) */
#define	ISTAPE		0x04		/* tape (not seekable) */
#define	NOREAD		0x08		/* not readable */
	u_int	flags;

	char	*name;			/* name */
	int	fd;			/* file descriptor */
	off_t	offset;			/* # of blocks to skip */

	size_t	f_stats;		/* # of full blocks processed */
	size_t	p_stats;		/* # of partial blocks processed */
	size_t	s_stats;		/* # of odd swab blocks */
	size_t	t_stats;		/* # of truncations */
} IO;

typedef struct {
	size_t	in_full;		/* # of full input blocks */
	size_t	in_part;		/* # of partial input blocks */
	size_t	out_full;		/* # of full output blocks */
	size_t	out_part;		/* # of partial output blocks */
	size_t	trunc;			/* # of truncated records */
	size_t	swab;			/* # of odd-length swab blocks */
	off_t	bytes;			/* # of bytes written */
	struct	timeval	startv;		/* start time of dd */
} STAT;

/* Flags (in ddflags). */
#define	C_ASCII		0x00001
#define	C_BLOCK		0x00002
#define	C_BS		0x00004
#define	C_CBS		0x00008
#define	C_COUNT		0x00010
#define	C_EBCDIC	0x00020
#define	C_FILES		0x00040
#define	C_IBS		0x00080
#define	C_IF		0x00100
#define	C_LCASE		0x00200
#define	C_NOERROR	0x00400
#define	C_NOTRUNC	0x00800
#define	C_OBS		0x01000
#define	C_OF		0x02000
#define	C_SEEK		0x04000
#define	C_SKIP		0x08000
#define	C_SWAB		0x10000
#define	C_SYNC		0x20000
#define	C_UCASE		0x40000
#define	C_UNBLOCK	0x80000
#define	C_OSYNC		0x100000
#define	C_STATUS	0x200000
#define	C_NOXFER	0x400000
#define	C_NOINFO	0x800000
@


1.6
log
@Add an operand to /bin/dd that suppresses the status lines printed
to stderr after transfer.  Use the GNU syntax status=noxfer and
status=none to make dd quiet.  The output is annoying in some
situations, so people redirect stderr to /dev/null.  This approach
also suppresses the error messages and bugs in shell scripts remain
undetected.  The new feature status=none is the better alternative.
OK mpf@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dd.h,v 1.5 2003/06/02 23:32:07 millert Exp $	*/
d53 1
a53 1
	char 	*name;			/* name */
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: dd.h,v 1.4 2001/08/07 14:39:27 hugh Exp $	*/
d96 3
@


1.4
log
@Modify timekeeping in an effort to produce a sane bandwidth measure
for a short running dd process. Some floating point is used so that
microsecond precision can be kept without shortening the off_t
excessively. millert says ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: dd.h,v 1.3 1997/02/14 07:05:20 millert Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.3
log
@Deal with 64-bit offsets and report bytes copied as a 64-bit quantity.
Closes OpenBSD PR system/107.
@
text
@d1 1
a1 1
/*	$OpenBSD: dd.h,v 1.2 1996/06/23 14:19:48 deraadt Exp $	*/
d75 1
a75 1
	time_t	start;			/* start time of dd */
@


1.2
log
@update rcsid
@
text
@d1 1
a1 1
/*	$OpenBSD: dd.h,v 1.4 1995/03/21 09:04:08 cgd Exp $	*/
d47 3
a49 3
	u_long	dbcnt;			/* current buffer byte count */
	int	dbrcnt;			/* last read byte count */
	u_long	dbsz;			/* buffer size */
d59 1
a59 1
	u_long	offset;			/* # of blocks to skip */
d61 4
a64 4
	u_long	f_stats;		/* # of full blocks processed */
	u_long	p_stats;		/* # of partial blocks processed */
	u_long	s_stats;		/* # of odd swab blocks */
	u_long	t_stats;		/* # of truncations */
d68 7
a74 7
	u_long	in_full;		/* # of full input blocks */
	u_long	in_part;		/* # of partial input blocks */
	u_long	out_full;		/* # of full output blocks */
	u_long	out_part;		/* # of partial output blocks */
	u_long	trunc;			/* # of truncated records */
	u_long	swab;			/* # of odd-length swab blocks */
	u_long	bytes;			/* # of bytes written */
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
