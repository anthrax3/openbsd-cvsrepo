head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.18
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.16
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v0_3_4:1.1.1.1
	XCBUTIL:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2014.04.14.19.24.00;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2009.05.23.14.38.19;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.05.23.14.38.19;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@xcb-util 0.3.9 moves to lib
@
text
@#ifndef __XCB_KEYSYMS_H__
#define __XCB_KEYSYMS_H__

#include <xcb/xcb.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef struct _XCBKeySymbols xcb_key_symbols_t;

xcb_key_symbols_t *xcb_key_symbols_alloc        (xcb_connection_t         *c);

void           xcb_key_symbols_free         (xcb_key_symbols_t         *syms);

xcb_keysym_t      xcb_key_symbols_get_keysym    (xcb_key_symbols_t         *syms,
					  xcb_keycode_t             keycode,
					  int                    col);

/**
 * @@brief Get the keycodes attached to a keysyms.
 * There can be several value, so what is returned is an array of keycode
 * terminated by XCB_NO_SYMBOL. You are responsible to free it.
 * Be aware that this function can be slow. It will convert all
 * combinations of all available keycodes to keysyms to find the ones that
 * match.
 * @@param syms Key symbols.
 * @@param keysym The keysym to look for.
 * @@return A XCB_NO_SYMBOL terminated array of keycode, or NULL if nothing is found.
 */
xcb_keycode_t * xcb_key_symbols_get_keycode(xcb_key_symbols_t *syms,
                                            xcb_keysym_t keysym);

xcb_keysym_t      xcb_key_press_lookup_keysym   (xcb_key_symbols_t         *syms,
					  xcb_key_press_event_t      *event,
					  int                    col);

xcb_keysym_t      xcb_key_release_lookup_keysym (xcb_key_symbols_t         *syms,
					  xcb_key_release_event_t    *event,
					  int                    col);

int            xcb_refresh_keyboard_mapping (xcb_key_symbols_t         *syms,
					  xcb_mapping_notify_event_t *event);

/* TODO:  need XLookupString equivalent */

/* Tests for classes of symbols */

int xcb_is_keypad_key        (xcb_keysym_t keysym);

int xcb_is_private_keypad_key (xcb_keysym_t keysym);

int xcb_is_cursor_key        (xcb_keysym_t keysym);

int xcb_is_pf_key            (xcb_keysym_t keysym);

int xcb_is_function_key      (xcb_keysym_t keysym);

int xcb_is_misc_function_key  (xcb_keysym_t keysym);

int xcb_is_modifier_key      (xcb_keysym_t keysym);


#ifdef __cplusplus
}
#endif


#endif /* __XCB_KEYSYMS_H__ */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import xcb-util 0.3.4
@
text
@@
