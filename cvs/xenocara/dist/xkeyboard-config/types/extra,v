head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.8
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.10
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.8
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_6:1.1.1.1
	XKEYBOARD_CONFIG:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.05.05.18.05.35;	author shadchin;	state Exp;
branches;
next	1.3;

1.3
date	2012.01.24.16.24.33;	author shadchin;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.10.17.08.51;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.06.17.52.32;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.06.17.52.32;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xkeyboard-config 2.11.

ok matthieu@@
@
text
@partial default xkb_types "default" {

    // Defines a type with a four-level shift, similar to the three-level
    // type used for iso9995, but it lets the Shift key behave "normally".

    virtual_modifiers LevelThree;

    type "FOUR_LEVEL" {
	modifiers = Shift+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_ALPHABETIC" {
	modifiers = Shift+Lock+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Lock]  = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level4;
	map[Lock+Shift+LevelThree] =  Level3;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_SEMIALPHABETIC" {
	modifiers = Shift+Lock+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Lock]  = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level3;
	map[Lock+Shift+LevelThree] = Level4;
	preserve[Lock+LevelThree] = Lock;
	preserve[Lock+Shift+LevelThree] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    // A four-level keypad variant. The first two levels are controlled by
    // NumLock (with active shifting like in KEYPAD).  LevelThree overrides
    // this mode, with two additional shifted levels.
    type "FOUR_LEVEL_MIXED_KEYPAD" {
        modifiers = Shift+NumLock+LevelThree;
        map[None] = Level1;
        map[Shift+NumLock] = Level1;
        map[NumLock] = Level2;
        map[Shift] = Level2;
        map[LevelThree] = Level3;
        map[NumLock+LevelThree] = Level3;
        map[Shift+LevelThree] = Level4;
        map[Shift+NumLock+LevelThree] = Level4;
        level_name[Level1] = "Base";
        level_name[Level2] = "Number";
        level_name[Level3] = "Alt Base";
        level_name[Level4] = "Shift Alt";
    };

    // Base level, two shifted LevelThree levels, one Ctrl+Alt command level.
    type "FOUR_LEVEL_X" {
        modifiers = Shift+LevelThree+Control+Alt;
        map[None] = Level1;
        map[LevelThree] = Level2;
        map[Shift+LevelThree] = Level3;
        map[Control+Alt] = Level4;
        level_name[Level1] = "Base";
        level_name[Level2] = "Alt Base";
        level_name[Level3] = "Shift Alt";
        level_name[Level4] = "Ctrl+Alt";
    };

// A special type for keys used in the Serbian Latin Unicode keymap.
// It makes it possible to use all three forms of latin letters
// present in Unicode that are made up of two separate letters
// (forms like LJ, Lj, and lj; NJ, Nj, and nj; etcetera).

    type "SEPARATE_CAPS_AND_SHIFT_ALPHABETIC" {
        modifiers = Shift+Lock+LevelThree;
        map[None] = Level1;
        map[Shift] = Level2;
        map[Lock] = Level4;
        map[LevelThree] = Level3;
        map[Shift+LevelThree] = Level4;
        map[Lock+LevelThree] =  Level3;
        map[Lock+Shift+LevelThree] = Level3;
        preserve[Lock]= Lock;
        preserve[Lock+LevelThree]= Lock;
        level_name[Level1] = "Base";
        level_name[Level2] = "Shift";
        level_name[Level3] = "AltGr Base";
        level_name[Level4] = "Shift AltGr";
    };

// A key type for the German ssharp (for example), which is capitalized as SS.
// CHARACTERISTICS:
// It is FOUR_LEVEL with the exception that the fifth level is mapped to the
// Lock modifier.  If other modifiers are used, the Lock state is ignored.
// DETAILS ABOUT GERMAN:
// The capital form of ssharp (called sharp s) only exists for completely
// capitalized text, not for words at the beginning of sentences nor for
// nouns (nouns in German normally start with a captial letter).
// The ssharp key, to the right of the zero key, takes this into account
// and has a questionmark mapped to Shift-ssharp since normally no capital
// version is needed.
// When typing with active CapsLock, this key type is needed to
// output two capital letters S because this is the only German key
// whose capital letter is not the same as the one typed with Shift.

    type "FOUR_LEVEL_PLUS_LOCK" {
        modifiers = Shift+Lock+LevelThree;
        map[None] = Level1;
        map[Shift] = Level2;
        map[LevelThree] = Level3;
        map[Shift+LevelThree] = Level4;
        map[Lock]  = Level5;
        map[Lock+Shift] = Level2;
        map[Lock+LevelThree] = Level3;
        map[Lock+Shift+LevelThree] = Level4;
        level_name[Level1] = "Base";
        level_name[Level2] = "Shift";
        level_name[Level3] = "Alt Base";
        level_name[Level4] = "Shift Alt";
        level_name[Level5] = "Lock";
    };
};

// This enables the four-level shifting also for the keypad.
partial xkb_types "keypad" {
    virtual_modifiers LevelThree;

    type "FOUR_LEVEL_KEYPAD" {
	modifiers = Shift+NumLock+LevelThree;
	map[None] = Level1;
	map[Shift] = Level2;
	map[NumLock] = Level2;
	map[Shift+NumLock] = Level1;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[NumLock+LevelThree] = Level4;
	map[Shift+NumLock+LevelThree] = Level3;
	level_name[Level1] = "Base";
	level_name[Level2] = "Number";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Alt Number";
    };
};
@


1.3
log
@Update to xkeyboard-config 2.5.

ok matthieu@@
@
text
@d2 3
a4 3
    // Definition for a key type used for the czech keymap, for instance.
    // Defines style a with four level shift. It is similar to three_level
    // type used for iso9995 but it lets the shift key behave "normally".
d9 1
a9 1
        modifiers = Shift+LevelThree;
d16 2
a17 2
	level_name[Level3] = "Alt Base";  
	level_name[Level4] = "Shift Alt";  
d43 1
a43 1
        map[Lock+Shift+LevelThree] = Level4;
d52 3
a54 5
    // Another four level keypad variant
    // First two levels are controled by NumLock (with active Shift-ing like
    // in KEYPAD). LevelThree overrides this mode, with two additional
    // Shift-ed levels
    // NumLock state is intentionnaly ignored when LevelThree is active
d62 1
a62 1
	map[NumLock+LevelThree] = Level3;
d64 1
a64 1
	map[Shift+NumLock+LevelThree] = Level4;
d71 1
a71 1
    // Base level, two Shift-ed LevelThree levels, one Ctrl+Alt command level
d76 2
a77 2
	map[Shift+LevelThree] = Level3;
	map[Control+Alt] = Level4;
d81 1
a81 1
	level_name[Level4] = "Ctrl+Alt";
d84 4
a87 4
// Special type for keys used in Serbian Latin Unicode map
// It makes it possible to use all three forms of latin letters 
// present in Unicode that are made up of two separate letters 
// (forms like LJ, Lj, and lj; NJ, Nj, and nj; etc)
d106 1
a106 1
// type for e.g. german ssharp which is capitalized SS.
d108 2
a109 3
// It is FOUR_LEVEL with the exception that the fifth level
// is mapped to the Lock modifier.
// If other modifiers are used, the Lock state is ignored.
d111 9
a119 9
// The capital form of ssharp (called sharp s) only exists for
// completely capitalized Text, not at the beginning of sentences
// or nouns (nouns have a captial letter at the beginning in german).
// The ssharp key, to the right of the zero key, takes this into
// account and has a questionmark mapped on shift-ssharp since
// normally no capital version is needed.
// When typing with active capsLock, this key type is needed to
// output two capital letters S because this is the only german key
// whose capital letter is not the same as the one typed with shift.
d139 1
a139 1
// This enables the four level shifting also for the keypad.
d157 1
a157 1
    };       
@


1.2
log
@Update xkeyboard-config to 2.2.1
* New structure of descriptions, massive changes in user-visible strings.
Special release for GNOME 3.

ok shadchin@@ matthieu@@
@
text
@a161 22

// This enables the four level shifting also for the keypad,
// but levels 1 and 2, and 3 and 4 are swapped on Mac keypads.
partial xkb_types "mac_keypad" {
    virtual_modifiers LevelThree;

    type "FOUR_LEVEL_KEYPAD" {
	modifiers = Shift+NumLock+LevelThree;
	map[None] = Level2;
	map[Shift] = Level1;
	map[NumLock] = Level1;
	map[Shift+NumLock] = Level2;
	map[LevelThree] = Level4;
	map[Shift+LevelThree] = Level3;
	map[NumLock+LevelThree] = Level3;
	map[Shift+NumLock+LevelThree] = Level4;
	level_name[Level2] = "Base";
	level_name[Level1] = "Number";
	level_name[Level4] = "Alt Base";
	level_name[Level3] = "Alt Number";
    };       
};
@


1.1
log
@Initial revision
@
text
@a0 2
// $XFree86: xc/programs/xkbcomp/types/extra,v 1.3 2002/11/26 02:14:02 dawes Exp $

@


1.1.1.1
log
@Import xkeyboard-config version 1.6.
@
text
@@
