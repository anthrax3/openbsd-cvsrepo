head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.8
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_6:1.1.1.1
	XKEYBOARD_CONFIG:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2016.02.06.17.50.07;	author shadchin;	state Exp;
branches;
next	1.5;
commitid	RZewVCQw5GNIYVoj;

1.5
date	2014.05.05.18.05.35;	author shadchin;	state Exp;
branches;
next	1.4;

1.4
date	2012.10.06.15.41.12;	author shadchin;	state Exp;
branches;
next	1.3;

1.3
date	2011.04.10.17.08.51;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.10.14.25.58;	author shadchin;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.06.17.52.33;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.06.17.52.33;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xkeyboard-config 2.17

ok matthieu@@
@
text
@partial default xkb_types "default" {

    // Defines a type with an eight-level shift, similar to the three-level
    // type used for iso9995, but it lets the Shift key behave "normally".

    virtual_modifiers LevelThree,ScrollLock,LevelFive;

    type "EIGHT_LEVEL" {
	modifiers = Shift+LevelThree+LevelFive;
	map[None] = Level1;
	map[Shift] = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[LevelFive] = Level5;
	map[Shift+LevelFive] = Level6;
	map[LevelThree+LevelFive] = Level7;
	map[Shift+LevelThree+LevelFive] = Level8;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
	level_name[Level5] = "X";
	level_name[Level6] = "X Shift";
	level_name[Level7] = "X Alt Base";
	level_name[Level8] = "X Shift Alt";
    };

    type "EIGHT_LEVEL_ALPHABETIC" {
	modifiers = Shift+Lock+LevelThree+LevelFive;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Lock]  = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level4;
	map[Lock+Shift+LevelThree] = Level3;

	map[LevelFive] = Level5;
	map[Shift+LevelFive] = Level6;
	map[Lock+LevelFive]  = Level6;
	map[LevelThree+LevelFive] = Level7;
	map[Shift+LevelThree+LevelFive] = Level8;
	map[Lock+LevelThree+LevelFive] =  Level8;
	map[Lock+Shift+LevelThree+LevelFive] = Level7;

	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
	level_name[Level5] = "X";
	level_name[Level6] = "X Shift";
	level_name[Level7] = "X Alt Base";
	level_name[Level8] = "X Shift Alt";
    };

    type "EIGHT_LEVEL_LEVEL_FIVE_LOCK" {
      // Level5-Lock is implemented by using NumLock, because a real modifier
      // is required.

        modifiers = Shift + Lock + LevelThree + NumLock + LevelFive;

        map[None]                                    = Level1;
        map[Shift]                                   = Level2;
        map[LevelThree]                              = Level3;
        map[LevelThree+Shift]                        = Level4;

        map[LevelFive]                               = Level5;
        map[LevelFive+Shift]                         = Level6;
        map[LevelFive+LevelThree]                    = Level7;
        map[LevelFive+LevelThree+Shift]              = Level8;

        map[NumLock]                                 = Level5;
        map[NumLock+Shift]                           = Level6;
        map[NumLock+LevelThree]                      = Level7;
        map[NumLock+LevelThree+Shift]                = Level8;

        map[NumLock+LevelFive]                       = Level1;
        map[NumLock+LevelFive+Shift]                 = Level2;
        map[NumLock+LevelFive+LevelThree]            = Level3;
        map[NumLock+LevelFive+LevelThree+Shift]      = Level4;

        // Lock has no effect
        map[Lock]                                    = Level1;
        map[Lock+Shift]                              = Level2;
        map[Lock+LevelThree]                         = Level3;
        map[Lock+LevelThree+Shift]                   = Level4;

        map[Lock+LevelFive]                          = Level5;
        map[Lock+LevelFive+Shift]                    = Level6;
        map[Lock+LevelFive+LevelThree]               = Level7;
        map[Lock+LevelFive+LevelThree+Shift]         = Level8;

        map[Lock+NumLock]                            = Level5;
        map[Lock+NumLock+Shift]                      = Level6;
        map[Lock+NumLock+LevelThree]                 = Level7;
        map[Lock+NumLock+LevelThree+Shift]           = Level8;

        map[Lock+NumLock+LevelFive]                  = Level1;
        map[Lock+NumLock+LevelFive+Shift]            = Level2;
        map[Lock+NumLock+LevelFive+LevelThree]       = Level3;
        map[Lock+NumLock+LevelFive+LevelThree+Shift] = Level4;

        preserve[LevelFive+Shift] = Shift;
        preserve[NumLock+Shift] = Shift;
        preserve[Lock+LevelFive+Shift] = Shift;
        preserve[Lock+NumLock+Shift] = Shift;

        level_name[Level1] = "Base";
        level_name[Level2] = "Shift";
        level_name[Level3] = "Alt Base";
        level_name[Level4] = "Shift Alt";
        level_name[Level5] = "X";
        level_name[Level6] = "X Shift";
        level_name[Level7] = "X Alt Base";
        level_name[Level8] = "X Shift Alt";
    };

    type "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK" {
      // Level5-Lock is implemented by using NumLock, because a real modifier
      // is required.

        modifiers = Shift + Lock + LevelThree + NumLock + LevelFive;

        map[None]                                    = Level1;
        map[Shift]                                   = Level2;
        map[LevelThree]                              = Level3;
        map[LevelThree+Shift]                        = Level4;

        map[LevelFive]                               = Level5;
        map[LevelFive+Shift]                         = Level6;
        map[LevelFive+LevelThree]                    = Level7;
        map[LevelFive+LevelThree+Shift]              = Level8;

        map[NumLock]                                 = Level5;
        map[NumLock+Shift]                           = Level6;
        map[NumLock+LevelThree]                      = Level7;
        map[NumLock+LevelThree+Shift]                = Level8;

        map[NumLock+LevelFive]                       = Level1;
        map[NumLock+LevelFive+Shift]                 = Level2;
        map[NumLock+LevelFive+LevelThree]            = Level3;
        map[NumLock+LevelFive+LevelThree+Shift]      = Level4;

        // Lock interchanges Level1 and Level2
        map[Lock]                                    = Level2;
        map[Lock+Shift]                              = Level1;
        map[Lock+LevelThree]                         = Level3;
        map[Lock+LevelThree+Shift]                   = Level4;

        map[Lock+LevelFive]                          = Level5;
        map[Lock+LevelFive+Shift]                    = Level6;
        map[Lock+LevelFive+LevelThree]               = Level7;
        map[Lock+LevelFive+LevelThree+Shift]         = Level8;

        map[Lock+NumLock]                            = Level5;
        map[Lock+NumLock+Shift]                      = Level6;
        map[Lock+NumLock+LevelThree]                 = Level7;
        map[Lock+NumLock+LevelThree+Shift]           = Level8;

        map[Lock+NumLock+LevelFive]                  = Level2;
        map[Lock+NumLock+LevelFive+Shift]            = Level1;
        map[Lock+NumLock+LevelFive+LevelThree]       = Level4;
        map[Lock+NumLock+LevelFive+LevelThree+Shift] = Level3;

        preserve[LevelFive+Shift] = Shift;
        preserve[NumLock+Shift] = Shift;

        level_name[Level1] = "Base";
        level_name[Level2] = "Shift";
        level_name[Level3] = "Alt Base";
        level_name[Level4] = "Shift Alt";
        level_name[Level5] = "X";
        level_name[Level6] = "X Shift";
        level_name[Level7] = "X Alt Base";
        level_name[Level8] = "X Shift Alt";
    };

    type "EIGHT_LEVEL_SEMIALPHABETIC" {
	modifiers = Shift+Lock+LevelThree+LevelFive;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Lock]  = Level2;
	map[LevelThree] = Level3;
	map[Shift+LevelThree] = Level4;
	map[Lock+LevelThree] =  Level3;
	map[Lock+Shift+LevelThree] = Level4;

	map[LevelFive] = Level5;
	map[Shift+LevelFive] = Level6;
	map[Lock+LevelFive]  = Level6;
	map[Lock+Shift+LevelFive]  = Level6;
	map[LevelThree+LevelFive] = Level7;
	map[Shift+LevelThree+LevelFive] = Level8;
	map[Lock+LevelThree+LevelFive] =  Level7;
	map[Lock+Shift+LevelThree+LevelFive] = Level8;

	preserve[Lock+LevelThree] = Lock;
	preserve[Lock+Shift+LevelThree] = Lock;
	preserve[Lock+LevelFive] = Lock;
	preserve[Lock+Shift+LevelFive] = Lock;
	preserve[Lock+LevelThree+LevelFive] = Lock;
	preserve[Lock+Shift+LevelThree+LevelFive] = Lock;

	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
	level_name[Level5] = "X";
	level_name[Level6] = "X Shift";
	level_name[Level7] = "X Alt Base";
	level_name[Level8] = "X Shift Alt";
    };

};
@


1.5
log
@Update to xkeyboard-config 2.11.

ok matthieu@@
@
text
@d56 121
a176 121
//    type "EIGHT_LEVEL_LEVEL_FIVE_LOCK" {
//      // Level5-Lock is implemented by using NumLock, because a real modifier
//      // is required.
//
//        modifiers = Shift + Lock + LevelThree + NumLock + LevelFive;
//
//        map[None]                                    = Level1;
//        map[Shift]                                   = Level2;
//        map[LevelThree]                              = Level3;
//        map[LevelThree+Shift]                        = Level4;
//
//        map[LevelFive]                               = Level5;
//        map[LevelFive+Shift]                         = Level6;
//        map[LevelFive+LevelThree]                    = Level7;
//        map[LevelFive+LevelThree+Shift]              = Level8;
//
//        map[NumLock]                                 = Level5;
//        map[NumLock+Shift]                           = Level6;
//        map[NumLock+LevelThree]                      = Level7;
//        map[NumLock+LevelThree+Shift]                = Level8;
//
//        map[NumLock+LevelFive]                       = Level1;
//        map[NumLock+LevelFive+Shift]                 = Level2;
//        map[NumLock+LevelFive+LevelThree]            = Level3;
//        map[NumLock+LevelFive+LevelThree+Shift]      = Level4;
//
//        // Lock has no effect
//        map[Lock]                                    = Level1;
//        map[Lock+Shift]                              = Level2;
//        map[Lock+LevelThree]                         = Level3;
//        map[Lock+LevelThree+Shift]                   = Level4;
//
//        map[Lock+LevelFive]                          = Level5;
//        map[Lock+LevelFive+Shift]                    = Level6;
//        map[Lock+LevelFive+LevelThree]               = Level7;
//        map[Lock+LevelFive+LevelThree+Shift]         = Level8;
//
//        map[Lock+NumLock]                            = Level5;
//        map[Lock+NumLock+Shift]                      = Level6;
//        map[Lock+NumLock+LevelThree]                 = Level7;
//        map[Lock+NumLock+LevelThree+Shift]           = Level8;
//
//        map[Lock+NumLock+LevelFive]                  = Level1;
//        map[Lock+NumLock+LevelFive+Shift]            = Level2;
//        map[Lock+NumLock+LevelFive+LevelThree]       = Level3;
//        map[Lock+NumLock+LevelFive+LevelThree+Shift] = Level4;
//
//        preserve[LevelFive+Shift] = Shift;
//        preserve[NumLock+Shift] = Shift;
//        preserve[Lock+LevelFive+Shift] = Shift;
//        preserve[Lock+NumLock+Shift] = Shift;
//
//        level_name[Level1] = "Base";
//        level_name[Level2] = "Shift";
//        level_name[Level3] = "Alt Base";
//        level_name[Level4] = "Shift Alt";
//        level_name[Level5] = "X";
//        level_name[Level6] = "X Shift";
//        level_name[Level7] = "X Alt Base";
//        level_name[Level8] = "X Shift Alt";
//    };
//
//    type "EIGHT_LEVEL_ALPHABETIC_LEVEL_FIVE_LOCK" {
//      // Level5-Lock is implemented by using NumLock, because a real modifier
//      // is required.
//
//        modifiers = Shift + Lock + LevelThree + NumLock + LevelFive;
//
//        map[None]                                    = Level1;
//        map[Shift]                                   = Level2;
//        map[LevelThree]                              = Level3;
//        map[LevelThree+Shift]                        = Level4;
//
//        map[LevelFive]                               = Level5;
//        map[LevelFive+Shift]                         = Level6;
//        map[LevelFive+LevelThree]                    = Level7;
//        map[LevelFive+LevelThree+Shift]              = Level8;
//
//        map[NumLock]                                 = Level5;
//        map[NumLock+Shift]                           = Level6;
//        map[NumLock+LevelThree]                      = Level7;
//        map[NumLock+LevelThree+Shift]                = Level8;
//
//        map[NumLock+LevelFive]                       = Level1;
//        map[NumLock+LevelFive+Shift]                 = Level2;
//        map[NumLock+LevelFive+LevelThree]            = Level3;
//        map[NumLock+LevelFive+LevelThree+Shift]      = Level4;
//
//        // Lock interchanges Level1 and Level2
//        map[Lock]                                    = Level2;
//        map[Lock+Shift]                              = Level1;
//        map[Lock+LevelThree]                         = Level3;
//        map[Lock+LevelThree+Shift]                   = Level4;
//
//        map[Lock+LevelFive]                          = Level5;
//        map[Lock+LevelFive+Shift]                    = Level6;
//        map[Lock+LevelFive+LevelThree]               = Level7;
//        map[Lock+LevelFive+LevelThree+Shift]         = Level8;
//
//        map[Lock+NumLock]                            = Level5;
//        map[Lock+NumLock+Shift]                      = Level6;
//        map[Lock+NumLock+LevelThree]                 = Level7;
//        map[Lock+NumLock+LevelThree+Shift]           = Level8;
//
//        map[Lock+NumLock+LevelFive]                  = Level2;
//        map[Lock+NumLock+LevelFive+Shift]            = Level1;
//        map[Lock+NumLock+LevelFive+LevelThree]       = Level4;
//        map[Lock+NumLock+LevelFive+LevelThree+Shift] = Level3;
//
//        preserve[LevelFive+Shift] = Shift;
//        preserve[NumLock+Shift] = Shift;
//
//        level_name[Level1] = "Base";
//        level_name[Level2] = "Shift";
//        level_name[Level3] = "Alt Base";
//        level_name[Level4] = "Shift Alt";
//        level_name[Level5] = "X";
//        level_name[Level6] = "X Shift";
//        level_name[Level7] = "X Alt Base";
//        level_name[Level8] = "X Shift Alt";
//    };
@


1.4
log
@Update to xkeyboard-config 2.7

ok matthieu@@, mpi@@
@
text
@d2 3
a4 3
    // Definition for a key type used for the czech keymap, for instance.
    // Defines style a with four level shift. It is similar to three_level
    // type used for iso9995 but it lets the shift key behave "normally".
d9 1
a9 1
        modifiers = Shift+LevelThree+LevelFive;
d20 2
a21 2
	level_name[Level3] = "Alt Base";  
	level_name[Level4] = "Shift Alt";  
d36 1
a36 1
        map[Lock+Shift+LevelThree] = Level3;
d44 1
a44 1
        map[Lock+Shift+LevelThree+LevelFive] = Level7;
d57 3
a59 3
//    	// Level5-Lock is implemented by using NumLock, because a real modifier
//    	// is required.
//    	
d119 3
a121 3
//    	// Level5-Lock is implemented by using NumLock, because a real modifier
//    	// is required.
//    	
d123 1
a123 1
//    
d186 1
a186 1
        map[Lock+Shift+LevelThree] = Level4;
d195 1
a195 1
        map[Lock+Shift+LevelThree+LevelFive] = Level8;
@


1.3
log
@Update xkeyboard-config to 2.2.1
* New structure of descriptions, massive changes in user-visible strings.
Special release for GNOME 3.

ok shadchin@@ matthieu@@
@
text
@d191 1
@


1.2
log
@Update xkeyboard-config to 2.0
ok matthieu
@
text
@a0 3
// $XKeyboardConfig$
// $XFree86: xc/programs/xkbcomp/types/extra,v 1.3 2002/11/26 02:14:02 dawes Exp $

a213 1

@


1.1
log
@Initial revision
@
text
@d59 122
@


1.1.1.1
log
@Import xkeyboard-config version 1.6.
@
text
@@
