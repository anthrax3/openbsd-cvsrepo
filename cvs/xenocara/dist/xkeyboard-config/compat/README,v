head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.10
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.8
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.1.1.0.20
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.18
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.16
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_6:1.1.1.1
	XKEYBOARD_CONFIG:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.05.05.18.05.33;	author shadchin;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.06.17.52.33;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.06.17.52.33;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to xkeyboard-config 2.11.

ok matthieu@@
@
text
@The core protocol interpretation of keyboard modifiers does not include direct
support for multiple keyboard groups, so XKB reports the effective keyboard
group to XKB-aware clients using some of the reserved bits in the state field
of some core protocol events. This modified state field would not be interpreted
correctly by XKB-unaware clients, so XKB provides a group compatibility mapping
which remaps the keyboard group into a core modifier mask that has similar
effects, when possible.

XKB maintains three compatibility state components that are used to make
XKB-unaware clients(*) work as well as possible:
- The compatibility state which corresponds to the effective modifier and
  effective group state.
- The compatibility lookup state which is the core-protocol equivalent of the
  lookup state.
- The compatibility grab state which is the nearest core-protocol equivalent
  of the grab state.

Compatibility states are essentially the corresponding XKB states, but with
the keyboard group possibly encoded as one or more modifiers.

Modifiers that correspond to each keyboard group are described in this
group compatibility map.


----
(*) The implementation of XKB invisibly extends the X library to use the
keyboard extension if it is present. That means, clients that use library or
toolkit routines to interpret keyboard events automatically use all of XKB's
features; clients that directly interpret the state field of core-protocol
events or the keymap directly may be affected by some of the XKB differences.
Thus most clients can take all advantages without modification but it also
means that XKB state can be reported to clients that have not explicitly
requested the keyboard extension.
@


1.1
log
@Initial revision
@
text
@d3 2
a4 2
group to XKB-aware clients using some of reserved bits in the state field of
some core protocol events. This modified state field would not be interpreted
d18 2
a19 2
Compatibility state are essentially the corresponding XKB states, but with
keyboard group possibly encoded as one or more modifiers. 
d28 3
a30 3
toolkit routines to interpret keyboard events automatically use all of XKB
features; clients that directly interpret the state field of core protocol
events or the keymap direcly may be affected by some of the XKB differences.
@


1.1.1.1
log
@Import xkeyboard-config version 1.6.
@
text
@@
