head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_6:1.1.1.1
	XKEYBOARD_CONFIG:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.05.05.18.05.33;	author shadchin;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.10.17.08.49;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.06.17.52.33;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.06.17.52.33;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xkeyboard-config 2.11.

ok matthieu@@
@
text
@// Interpretations for arrow keys and a bunch of
// other common keysyms which make it possible to
// bind "mouse" keys using xmodmap and activate or
// deactivate them from the keyboard.

default partial xkb_compatibility "mousekeys" {

    // Keypad actions.

    interpret.repeat= True;

    interpret KP_1 {
	action = MovePtr(x=-1,y= +1);
    };
    interpret KP_End {
	action = MovePtr(x=-1,y= +1);
    };

    interpret KP_2 {
	action = MovePtr(x=+0,y= +1);
    };
    interpret KP_Down {
	action = MovePtr(x=+0,y= +1);
    };

    interpret KP_3 {
	action = MovePtr(x=+1,y=+1);
    };
    interpret KP_Next {
	action = MovePtr(x=+1,y=+1);
    };

    interpret KP_4 {
	action = MovePtr(x=-1,y=+0);
    };
    interpret KP_Left {
	action = MovePtr(x=-1,y=+0);
    };

    interpret KP_6 {
	action = MovePtr(x=+1,y=+0);
    };
    interpret KP_Right {
	action = MovePtr(x=+1,y=+0);
    };

    interpret KP_7 {
	action = MovePtr(x=-1,y=-1);
    };
    interpret KP_Home {
	action = MovePtr(x=-1,y=-1);
    };

    interpret KP_8 {
	action = MovePtr(x=+0,y=-1);
    };
    interpret KP_Up {
	action = MovePtr(x=+0,y=-1);
    };

    interpret KP_9 {
	action = MovePtr(x=+1,y=-1);
    };
    interpret KP_Prior {
	action = MovePtr(x=+1,y=-1);
    };

    interpret KP_5 {
	action = PointerButton(button=default);
    };
    interpret KP_Begin {
	action = PointerButton(button=default);
    };

    interpret KP_F2 {
	action = SetPtrDflt(affect=defaultButton,button=1);
    };
    interpret KP_Divide {
	action = SetPtrDflt(affect=defaultButton,button=1);
    };

    interpret KP_F3 {
	action = SetPtrDflt(affect=defaultButton,button=2);
    };
    interpret KP_Multiply {
	action = SetPtrDflt(affect=defaultButton,button=2);
    };

    interpret KP_F4 {
	action = SetPtrDflt(affect=defaultButton,button=3);
    };
    interpret KP_Subtract {
	action = SetPtrDflt(affect=defaultButton,button=3);
    };

    interpret KP_Separator {
	action = PointerButton(button=default,count=2);
    };
    interpret KP_Add {
	action = PointerButton(button=default,count=2);
    };

    interpret KP_0 {
	action = LockPointerButton(button=default,affect=lock);
    };
    interpret KP_Insert {
	action = LockPointerButton(button=default,affect=lock);
    };

    interpret KP_Decimal {
	action = LockPointerButton(button=default,affect=unlock);
    };
    interpret KP_Delete {
	action = LockPointerButton(button=default,affect=unlock);
    };

    // Additional mappings for Solaris keypad compatibility.

    interpret F25 { // aka KP_Divide
	action = SetPtrDflt(affect=defaultButton,button=1);
    };
    interpret F26 { // aka KP_Multiply
	action = SetPtrDflt(affect=defaultButton,button=2);
    };
    interpret F27 { // aka KP_Home
	action = MovePtr(x=-1,y=-1);
    };
    interpret F29 { // aka KP_Prior
	action = MovePtr(x=+1,y=-1);
    };
    interpret F31 { // aka KP_Begin
	action = PointerButton(button=default);
    };
    interpret F33 { // aka KP_End
	action = MovePtr(x=-1,y= +1);
    };
    interpret F35 { // aka KP_Next
	action = MovePtr(x=+1,y=+1);
    };

    interpret.repeat= False;

    // New keysym actions.

    interpret Pointer_Button_Dflt {
	action= PointerButton(button=default);
    };
    interpret Pointer_Button1 {
	action= PointerButton(button=1);
    };
    interpret Pointer_Button2 {
	action= PointerButton(button=2);
    };
    interpret Pointer_Button3 {
	action= PointerButton(button=3);
    };
    interpret Pointer_DblClick_Dflt {
	action= PointerButton(button=default,count=2);
    };
    interpret Pointer_DblClick1 {
	action= PointerButton(button=1,count=2);
    };
    interpret Pointer_DblClick2 {
	action= PointerButton(button=2,count=2);
    };
    interpret Pointer_DblClick3 {
	action= PointerButton(button=3,count=2);
    };
    interpret Pointer_Drag_Dflt {
	action= LockPointerButton(button=default);
    };
    interpret Pointer_Drag1 {
	action= LockPointerButton(button=1);
    };
    interpret Pointer_Drag2 {
	action= LockPointerButton(button=2);
    };
    interpret Pointer_Drag3 {
	action= LockPointerButton(button=3);
    };

    interpret Pointer_EnableKeys {
	action= LockControls(controls=MouseKeys);
    };
    interpret Pointer_Accelerate {
	action= LockControls(controls=MouseKeysAccel);
    };
    interpret Pointer_DfltBtnNext {
	action= SetPtrDflt(affect=defaultButton,button= +1);
    };
    interpret Pointer_DfltBtnPrev {
	action= SetPtrDflt(affect=defaultButton,button= -1);
    };

    // Allow an indicator for MouseKeys.
    indicator "Mouse Keys" {
        //!allowExplicit;
	indicatorDrivesKeyboard;
	controls= MouseKeys;
    };
};
@


1.2
log
@Update xkeyboard-config to 2.2.1
* New structure of descriptions, massive changes in user-visible strings.
Special release for GNOME 3.

ok shadchin@@ matthieu@@
@
text
@d1 4
a4 4
// Interpretations for arrow keys and a bunch of other 
// common keysyms which make it possible to bind "mouse" 
// keys using xmodmap and activate or deactivate them 
// from the keyboard.
d9 1
a9 1
    //
d12 2
a13 2
    interpret KP_1 { 
	action = MovePtr(x=-1,y= +1); 
d15 2
a16 2
    interpret KP_End { 
	action = MovePtr(x=-1,y= +1); 
d19 2
a20 2
    interpret KP_2 { 
	action = MovePtr(x=+0,y= +1); 
d22 2
a23 2
    interpret KP_Down { 
	action = MovePtr(x=+0,y= +1); 
d26 2
a27 2
    interpret KP_3 { 
	action = MovePtr(x=+1,y=+1); 
d29 2
a30 2
    interpret KP_Next { 
 	action = MovePtr(x=+1,y=+1); 
d33 2
a34 2
    interpret KP_4 { 
	action = MovePtr(x=-1,y=+0); 
d36 2
a37 2
    interpret KP_Left { 
	action = MovePtr(x=-1,y=+0); 
d40 2
a41 2
    interpret KP_6 { 
	action = MovePtr(x=+1,y=+0); 
d43 2
a44 2
    interpret KP_Right { 
 	action = MovePtr(x=+1,y=+0); 
d47 2
a48 2
    interpret KP_7 { 
	action = MovePtr(x=-1,y=-1); 
d50 2
a51 2
    interpret KP_Home { 
	action = MovePtr(x=-1,y=-1); 
d54 2
a55 2
    interpret KP_8 { 
	action = MovePtr(x=+0,y=-1); 
d57 2
a58 2
    interpret KP_Up { 
	action = MovePtr(x=+0,y=-1); 
d61 2
a62 2
    interpret KP_9 { 
	action = MovePtr(x=+1,y=-1); 
d64 2
a65 2
    interpret KP_Prior { 
	action = MovePtr(x=+1,y=-1); 
d68 2
a69 2
    interpret KP_5 { 
	action = PointerButton(button=default); 
d71 2
a72 2
    interpret KP_Begin { 
	action = PointerButton(button=default); 
d75 2
a76 2
    interpret KP_F2 { 
	action = SetPtrDflt(affect=defaultButton,button=1); 
d78 2
a79 2
    interpret KP_Divide { 
	action = SetPtrDflt(affect=defaultButton,button=1); 
d82 2
a83 2
    interpret KP_F3 { 
	action = SetPtrDflt(affect=defaultButton,button=2); 
d85 2
a86 2
    interpret KP_Multiply { 
	action = SetPtrDflt(affect=defaultButton,button=2); 
d89 2
a90 2
    interpret KP_F4 { 
	action = SetPtrDflt(affect=defaultButton,button=3); 
d92 2
a93 2
    interpret KP_Subtract { 
	action = SetPtrDflt(affect=defaultButton,button=3); 
d96 2
a97 2
    interpret KP_Separator { 
	action = PointerButton(button=default,count=2); 
d99 1
a99 1
    interpret KP_Add { 
d103 2
a104 2
    interpret KP_0 { 
	action = LockPointerButton(button=default,affect=lock); 
d106 2
a107 2
    interpret KP_Insert { 
	action = LockPointerButton(button=default,affect=lock); 
d110 2
a111 2
    interpret KP_Decimal { 
	action = LockPointerButton(button=default,affect=unlock); 
d113 2
a114 2
    interpret KP_Delete { 
	action = LockPointerButton(button=default,affect=unlock); 
d117 2
a118 1
    // Additional mappings for Solaris keypad compatibility
d120 1
a120 1
	action = SetPtrDflt(affect=defaultButton,button=1); 
d123 1
a123 1
	action = SetPtrDflt(affect=defaultButton,button=2); 
d126 1
a126 1
	action = MovePtr(x=-1,y=-1); 
d129 1
a129 1
	action = MovePtr(x=+1,y=-1); 
d132 1
a132 1
	action = PointerButton(button=default); 
d135 1
a135 1
	action = MovePtr(x=-1,y= +1); 
d138 1
a138 1
 	action = MovePtr(x=+1,y=+1); 
d143 1
a144 2
    // New Keysym Actions.
    //
d169 1
a169 1
    interpret Pointer_Drag_Dflt	{
a194 1

d197 1
a197 1
//	!allowExplicit;
@


1.1
log
@Initial revision
@
text
@a0 3

// $Xorg: mousekeys,v 1.3 2000/08/17 19:54:34 cpqbld Exp $

@


1.1.1.1
log
@Import xkeyboard-config version 1.6.
@
text
@@
