head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.10
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_6:1.1.1.1
	XKEYBOARD_CONFIG:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.05.05.18.05.33;	author shadchin;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.10.17.08.49;	author jasper;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.06.17.52.33;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.06.06.17.52.33;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xkeyboard-config 2.11.

ok matthieu@@
@
text
@default xkb_compatibility "xtest" {

    // Minimal set of symbol interpretations to provide
    // reasonable behavior for testing.
    // The X Test Suite assumes that it can set any modifier
    // by simulating a KeyPress and clear it by simulating a
    // KeyRelease.  Because of the way that XKB implements
    // locking/latching modifiers, this approach fails in
    // some cases (typically the Lock or NumLock modifiers).
    // These symbol interpretations make all modifier keys
    // just set the corresponding modifier so that xtest
    // will see the behavior it expects.

    virtual_modifiers  NumLock,AltGr;

    interpret.repeat= False;
    setMods.clearLocks= True;
    latchMods.clearLocks= True;
    latchMods.latchToLock= False;

    interpret Shift_Lock+AnyOf(Shift+Lock) {
	action= SetMods(modifiers=Shift);
    };

    interpret Num_Lock+Any {
	virtualModifier= NumLock;
	action= SetMods(modifiers=NumLock);
    };

    interpret Mode_switch {
	useModMapMods= level1;
	virtualModifier= AltGr;
	action= SetGroup(group=2);
    };

    interpret Any + Any {
	action= SetMods(modifiers=modMapMods);
    };

    group 2 = AltGr;
    group 3 = AltGr;
    group 4 = AltGr;

    indicator.allowExplicit= False;
    indicator "Caps Lock" {
	modifiers= Lock;
    };
    indicator "Num Lock" {
	modifiers= NumLock;
    };
    indicator "Shift Lock" {
	whichModState= Locked;
	modifiers= Shift;
    };
    indicator.allowExplicit= True;
};
@


1.2
log
@Update xkeyboard-config to 2.2.1
* New structure of descriptions, massive changes in user-visible strings.
Special release for GNOME 3.

ok shadchin@@ matthieu@@
@
text
@d1 1
a1 1
default xkb_compatibility "xtest"  {
d4 8
a11 9
    // reasonable behavior for testing.   The X Test 
    // Suite assumes that it can set any modifier by 
    // simulating a KeyPress and clear it by simulating 
    // a KeyRelease.  Because of the way that XKB 
    // implements locking/latching modifiers, this 
    // approach fails in some cases (typically the 
    // lock or num lock modifiers).  These symbol
    // interpretations make all modifier keys just
    // set the corresponding modifier so that xtest
d14 1
a14 1
    virtual_modifiers NumLock,AltGr;
d45 1
a45 1
    indicator "Caps Lock" { 
@


1.1
log
@Initial revision
@
text
@a0 1
// $Xorg: xtest,v 1.3 2000/08/17 19:54:34 cpqbld Exp $
@


1.1.1.1
log
@Import xkeyboard-config version 1.6.
@
text
@@
