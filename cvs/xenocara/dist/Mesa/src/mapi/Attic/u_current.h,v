head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.1.2.0.6
	OPENBSD_5_8_BASE:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.4
	OPENBSD_5_7_BASE:1.1.1.2
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.2
	OPENBSD_5_6_BASE:1.1.1.2
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.2
date	2015.12.23.05.17.47;	author jsg;	state dead;
branches;
next	1.1;
commitid	TnlogFl9nOv2eaRf;

1.1
date	2013.09.05.13.14.57;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.09.05.13.14.57;	author jsg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.07.09.20.34.40;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.2
log
@remove the now unused Mesa 10.2.9 code
@
text
@#ifndef _U_CURRENT_H_
#define _U_CURRENT_H_

#if defined(MAPI_MODE_UTIL) || defined(MAPI_MODE_GLAPI) || \
    defined(MAPI_MODE_BRIDGE)

#include "glapi/glapi.h"

/* ugly renames to match glapi.h */
#define mapi_table _glapi_table

#ifdef GLX_USE_TLS
#define u_current_table _glapi_tls_Dispatch
#define u_current_user _glapi_tls_Context
#else
#define u_current_table _glapi_Dispatch
#define u_current_user _glapi_Context
#endif

#define u_current_get_internal _glapi_get_dispatch
#define u_current_get_user_internal _glapi_get_context

#define u_current_table_tsd _gl_DispatchTSD

#else /* MAPI_MODE_UTIL || MAPI_MODE_GLAPI || MAPI_MODE_BRIDGE */

#include "u_compiler.h"

struct mapi_table;

#ifdef GLX_USE_TLS

extern __thread struct mapi_table *u_current_table
    __attribute__((tls_model("initial-exec")));

extern __thread void *u_current_user
    __attribute__((tls_model("initial-exec")));

#else /* GLX_USE_TLS */

extern struct mapi_table *u_current_table;
extern void *u_current_user;

#endif /* GLX_USE_TLS */

#endif /* MAPI_MODE_UTIL || MAPI_MODE_GLAPI || MAPI_MODE_BRIDGE */

void
u_current_init(void);

void
u_current_destroy(void);

void
u_current_set(const struct mapi_table *tbl);

struct mapi_table *
u_current_get_internal(void);

void
u_current_set_user(const void *ptr);

void *
u_current_get_user_internal(void);

static INLINE const struct mapi_table *
u_current_get(void)
{
#ifdef GLX_USE_TLS
   return u_current_table;
#else
   return (likely(u_current_table) ?
         u_current_table : u_current_get_internal());
#endif
}

static INLINE const void *
u_current_get_user(void)
{
#ifdef GLX_USE_TLS
   return u_current_user;
#else
   return likely(u_current_user) ? u_current_user : u_current_get_user_internal();
#endif
}

#endif /* _U_CURRENT_H_ */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import Mesa 9.2.0
@
text
@@


1.1.1.2
log
@Import Mesa 10.2.3
@
text
@d14 1
a14 1
#define u_current_context _glapi_tls_Context
d17 1
a17 1
#define u_current_context _glapi_Context
d20 2
a21 2
#define u_current_get_table_internal _glapi_get_dispatch
#define u_current_get_context_internal _glapi_get_context
d36 1
a36 1
extern __thread void *u_current_context
d42 1
a42 1
extern void *u_current_context;
d55 1
a55 1
u_current_set_table(const struct mapi_table *tbl);
d58 1
a58 1
u_current_get_table_internal(void);
d61 1
a61 1
u_current_set_context(const void *ptr);
d64 1
a64 1
u_current_get_context_internal(void);
d67 1
a67 1
u_current_get_table(void)
d73 1
a73 1
         u_current_table : u_current_get_table_internal());
d78 1
a78 1
u_current_get_context(void)
d81 1
a81 1
   return u_current_context;
d83 1
a83 1
   return likely(u_current_context) ? u_current_context : u_current_get_context_internal();
@

