head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.1.5.0.4
	OPENBSD_5_8_BASE:1.1.1.5
	OPENBSD_5_7:1.1.1.5.0.2
	OPENBSD_5_7_BASE:1.1.1.5
	v10_2_9:1.1.1.5
	v10_4_3:1.1.1.4
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.2
	OPENBSD_5_6_BASE:1.1.1.3
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.1.1.2.0.2
	OPENBSD_5_5_BASE:1.1.1.2
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.1.1.1.0.8
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.6
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2015.12.23.05.17.31;	author jsg;	state dead;
branches;
next	1.1;
commitid	TnlogFl9nOv2eaRf;

1.1
date	2011.10.23.13.29.27;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.27;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.11.25;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.33.57;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	3JhLfwcuBALP0ZR7;

1.1.1.4
date	2015.01.25.14.07.26;	author jsg;	state Exp;
branches;
next	1.1.1.5;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.5
date	2015.02.20.22.44.34;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.2
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 * 
 * Copyright 2010 VMware, Inc.
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/

/**
 * Implementation limits for LLVMpipe driver.
 */

#ifndef LP_LIMITS_H
#define LP_LIMITS_H


/**
 * Tile size (width and height). This needs to be a power of two.
 */
#define TILE_ORDER 6
#define TILE_SIZE (1 << TILE_ORDER)


/**
 * Max texture sizes
 */
#define LP_MAX_TEXTURE_2D_LEVELS 13  /* 4K x 4K for now */
#define LP_MAX_TEXTURE_3D_LEVELS 10  /* 512 x 512 x 512 for now */


/** This must be the larger of LP_MAX_TEXTURE_2D/3D_LEVELS */
#define LP_MAX_TEXTURE_LEVELS LP_MAX_TEXTURE_2D_LEVELS


/**
 * Max drawing surface size is the max texture size
 */
#define LP_MAX_HEIGHT (1 << (LP_MAX_TEXTURE_LEVELS - 1))
#define LP_MAX_WIDTH  (1 << (LP_MAX_TEXTURE_LEVELS - 1))


#define LP_MAX_THREADS 8


/**
 * Max bytes per scene.  This may be replaced by a runtime parameter.
 */
#define LP_MAX_SCENE_SIZE (512 * 1024 * 1024)

/**
 * Max number of shader variants (for all shaders combined,
 * per context) that will be kept around.
 */
#define LP_MAX_SHADER_VARIANTS 1024

/**
 * Max number of setup variants that will be kept around.
 *
 * These are determined by the combination of the fragment shader
 * input signature and a small amount of rasterization state (eg
 * flatshading).  It is likely that many active fragment shaders will
 * share the same setup variant.
 */
#define LP_MAX_SETUP_VARIANTS 64

#endif /* LP_LIMITS_H */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d46 2
a47 5
#define LP_MAX_TEXTURE_SIZE (1 * 1024 * 1024 * 1024ULL)  /* 1GB for now */
#define LP_MAX_TEXTURE_2D_LEVELS 14  /* 8K x 8K for now */
#define LP_MAX_TEXTURE_3D_LEVELS 12  /* 2K x 2K x 2K for now */
#define LP_MAX_TEXTURE_CUBE_LEVELS 14  /* 8K x 8K for now */
#define LP_MAX_TEXTURE_ARRAY_LAYERS 512 /* 8K x 512 / 8K x 8K x 512 */
d61 1
a61 1
#define LP_MAX_THREADS 16
a73 6

/**
 * Max number of instructions (for all fragment shaders combined per context)
 * that will be kept around.
 */
#define LP_MAX_SHADER_INSTRUCTIONS (128*1024)
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d80 1
a80 1
 * that will be kept around (counted in terms of llvm ir).
d82 1
a82 1
#define LP_MAX_SHADER_INSTRUCTIONS (512*LP_MAX_SHADER_VARIANTS)
@


1.1.1.4
log
@Import Mesa 10.4.3
@
text
@a80 2
 * Note: the definition looks odd, but there's branches which use a different
 * number of max shader variants.
d82 1
a82 1
#define LP_MAX_SHADER_INSTRUCTIONS MAX2(256*1024, 512*LP_MAX_SHADER_VARIANTS)
@


1.1.1.5
log
@Import Mesa 10.2.9
@
text
@d81 2
d84 1
a84 1
#define LP_MAX_SHADER_INSTRUCTIONS (512*LP_MAX_SHADER_VARIANTS)
@


