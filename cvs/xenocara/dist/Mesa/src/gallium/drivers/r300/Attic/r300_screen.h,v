head	1.7;
access;
symbols
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	v10_2_9:1.1.1.4
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.12.23.05.17.32;	author jsg;	state dead;
branches;
next	1.6;
commitid	TnlogFl9nOv2eaRf;

1.6
date	2015.02.20.23.09.52;	author jsg;	state Exp;
branches;
next	1.5;
commitid	4ry2gvZGMXkCUD2n;

1.5
date	2015.01.25.14.41.16;	author jsg;	state Exp;
branches;
next	1.4;
commitid	mcxB0JvoI9gTDYXU;

1.4
date	2013.09.05.14.00.58;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.06;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.34;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.07;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.28;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.12.02;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2015.01.25.14.08.04;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.4
date	2015.02.20.22.45.14;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.7
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright 2008 Corbin Simpson <MostAwesomeDude@@gmail.com>
 * Copyright 2010 Marek Ol코치k <maraeo@@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * on the rights to use, copy, modify, merge, publish, distribute, sub
 * license, and/or sell copies of the Software, and to permit persons to whom
 * the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
 * USE OR OTHER DEALINGS IN THE SOFTWARE. */

#ifndef R300_SCREEN_H
#define R300_SCREEN_H

#include "r300_chipset.h"
#include "../../winsys/radeon/drm/radeon_winsys.h"
#include "pipe/p_screen.h"
#include "util/u_slab.h"
#include "os/os_thread.h"
#include <stdio.h>

struct r300_screen {
    /* Parent class */
    struct pipe_screen screen;

    struct radeon_winsys *rws;

    /* Chipset info and capabilities. */
    struct radeon_info info;
    struct r300_capabilities caps;

    /** Combination of DBG_xxx flags */
    unsigned debug;

    /* The MSAA texture with CMASK access; */
    struct pipe_resource *cmask_resource;
    pipe_mutex cmask_mutex;
};


/* Convenience cast wrappers. */
static INLINE struct r300_screen* r300_screen(struct pipe_screen* screen) {
    return (struct r300_screen*)screen;
}

static INLINE struct radeon_winsys *
radeon_winsys(struct pipe_screen *screen) {
    return r300_screen(screen)->rws;
}

/* Debug functionality. */

/**
 * Debug flags to disable/enable certain groups of debugging outputs.
 *
 * \note These may be rather coarse, and the grouping may be impractical.
 * If you find, while debugging the driver, that a different grouping
 * of these flags would be beneficial, just feel free to change them
 * but make sure to update the documentation in r300_debug.c to reflect
 * those changes.
 */
/*@@{*/

/* Logging. */
#define DBG_PSC         (1 << 0)
#define DBG_FP          (1 << 1)
#define DBG_VP          (1 << 2)
#define DBG_SWTCL       (1 << 3)
#define DBG_DRAW        (1 << 4)
#define DBG_TEX         (1 << 5)
#define DBG_TEXALLOC    (1 << 6)
#define DBG_RS          (1 << 7)
#define DBG_FB          (1 << 8)
#define DBG_RS_BLOCK    (1 << 9)
#define DBG_CBZB        (1 << 10)
#define DBG_HYPERZ      (1 << 11)
#define DBG_SCISSOR     (1 << 12)
#define DBG_INFO        (1 << 13)
#define DBG_MSAA        (1 << 14)
/* Features. */
#define DBG_ANISOHQ     (1 << 16)
#define DBG_NO_TILING   (1 << 17)
#define DBG_NO_IMMD     (1 << 18)
#define DBG_NO_OPT      (1 << 19)
#define DBG_NO_CBZB     (1 << 20)
#define DBG_NO_ZMASK    (1 << 21)
#define DBG_NO_HIZ      (1 << 22)
#define DBG_NO_CMASK    (1 << 23)
/* Statistics. */
#define DBG_P_STAT      (1 << 25)
/*@@}*/

static INLINE boolean SCREEN_DBG_ON(struct r300_screen * screen, unsigned flags)
{
    return (screen->debug & flags) ? TRUE : FALSE;
}

static INLINE void SCREEN_DBG(struct r300_screen * screen, unsigned flags,
                              const char * fmt, ...)
{
    if (SCREEN_DBG_ON(screen, flags)) {
        va_list va;
        va_start(va, fmt);
        vfprintf(stderr, fmt, va);
        va_end(va);
    }
}

void r300_init_debug(struct r300_screen* ctx);

void r300_init_screen_resource_functions(struct r300_screen *r300screen);

#endif /* R300_SCREEN_H */
@


1.6
log
@Merge Mesa 10.2.9
@
text
@@


1.5
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@d28 1
a28 1
#include "radeon/drm/radeon_winsys.h"
@


1.4
log
@Merge Mesa 9.2.0
@
text
@d28 1
a28 1
#include "../../winsys/radeon/drm/radeon_winsys.h"
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d27 2
a29 3

#include "r300_chipset.h"

d31 1
a31 1

a33 2
struct radeon_winsys;

d40 2
a41 1
    /* Chipset capabilities */
a43 3
    /* Memory pools. */
    struct util_slab_mempool pool_buffers;

d47 3
a49 4
    /* The number of created contexts to know whether we have multiple
     * contexts or not. */
    int num_contexts;
    pipe_mutex num_contexts_mutex;
d91 1
d100 1
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d35 1
a35 1
struct r300_winsys_screen;
d41 1
a41 1
    struct r300_winsys_screen *rws;
d55 1
d64 2
a65 2
static INLINE struct r300_winsys_screen *
r300_winsys_screen(struct pipe_screen *screen) {
d91 6
a96 6
#define DBG_FALL        (1 << 8)
#define DBG_FB          (1 << 9)
#define DBG_RS_BLOCK    (1 << 10)
#define DBG_CBZB        (1 << 11)
#define DBG_HYPERZ      (1 << 12)
#define DBG_SCISSOR     (1 << 13)
d101 4
a104 3
#define DBG_FAKE_OCC    (1 << 19)
#define DBG_NO_OPT      (1 << 20)
#define DBG_NO_CBZB     (1 << 21)
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d3 1
d31 5
a35 1
struct radeon_winsys;
d41 1
a41 1
    struct radeon_winsys* radeon_winsys;
d44 4
a47 1
    struct r300_capabilities* caps;
d51 4
a56 3
struct r300_transfer {
    /* Parent class */
    struct pipe_transfer transfer;
d58 1
a58 5
    /* Offset from start of buffer. */
    unsigned offset;
};

/* Convenience cast wrapper. */
d63 3
a65 5
/* Convenience cast wrapper. */
static INLINE struct r300_transfer*
r300_transfer(struct pipe_transfer* transfer)
{
    return (struct r300_transfer*)transfer;
d80 25
a104 7
#define DBG_HELP    0x0000001
#define DBG_FP      0x0000002
#define DBG_VP      0x0000004
#define DBG_CS      0x0000008
#define DBG_DRAW    0x0000010
#define DBG_TEX     0x0000020
#define DBG_FALL    0x0000040
d118 1
a118 1
        debug_vprintf(fmt, va);
d125 2
a127 1

@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a2 1
 * Copyright 2010 Marek Ol코치k <maraeo@@gmail.com>
d30 1
a30 5
#include "util/u_slab.h"

#include <stdio.h>

struct r300_winsys_screen;
d36 1
a36 1
    struct r300_winsys_screen *rws;
d39 1
a39 4
    struct r300_capabilities caps;

    /* Memory pools. */
    struct util_slab_mempool pool_buffers;
d43 5
d49 2
a50 3
    /* The number of created contexts to know whether we have multiple
     * contexts or not. */
    int num_contexts;
d53 1
a53 2

/* Convenience cast wrappers. */
d58 5
a62 3
static INLINE struct r300_winsys_screen *
r300_winsys_screen(struct pipe_screen *screen) {
    return r300_screen(screen)->rws;
d77 7
a83 25

/* Logging. */
#define DBG_PSC         (1 << 0)
#define DBG_FP          (1 << 1)
#define DBG_VP          (1 << 2)
#define DBG_SWTCL       (1 << 3)
#define DBG_DRAW        (1 << 4)
#define DBG_TEX         (1 << 5)
#define DBG_TEXALLOC    (1 << 6)
#define DBG_RS          (1 << 7)
#define DBG_FALL        (1 << 8)
#define DBG_FB          (1 << 9)
#define DBG_RS_BLOCK    (1 << 10)
#define DBG_CBZB        (1 << 11)
#define DBG_HYPERZ      (1 << 12)
#define DBG_SCISSOR     (1 << 13)
/* Features. */
#define DBG_ANISOHQ     (1 << 16)
#define DBG_NO_TILING   (1 << 17)
#define DBG_NO_IMMD     (1 << 18)
#define DBG_FAKE_OCC    (1 << 19)
#define DBG_NO_OPT      (1 << 20)
#define DBG_NO_CBZB     (1 << 21)
/* Statistics. */
#define DBG_P_STAT      (1 << 25)
d97 1
a97 1
        vfprintf(stderr, fmt, va);
d104 1
a104 1
void r300_init_screen_resource_functions(struct r300_screen *r300screen);
a105 1
#endif /* R300_SCREEN_H */
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d27 2
d30 1
a30 2
#include "../../winsys/radeon/drm/radeon_winsys.h"
#include "pipe/p_screen.h"
d32 1
a32 1
#include "os/os_thread.h"
d35 2
d41 1
a41 1
    struct radeon_winsys *rws;
d43 1
a43 2
    /* Chipset info and capabilities. */
    struct radeon_info info;
d46 3
d52 3
a54 3
    /* The MSAA texture with CMASK access; */
    struct pipe_resource *cmask_resource;
    pipe_mutex cmask_mutex;
d63 2
a64 2
static INLINE struct radeon_winsys *
radeon_winsys(struct pipe_screen *screen) {
d90 6
a95 7
#define DBG_FB          (1 << 8)
#define DBG_RS_BLOCK    (1 << 9)
#define DBG_CBZB        (1 << 10)
#define DBG_HYPERZ      (1 << 11)
#define DBG_SCISSOR     (1 << 12)
#define DBG_INFO        (1 << 13)
#define DBG_MSAA        (1 << 14)
d100 3
a102 5
#define DBG_NO_OPT      (1 << 19)
#define DBG_NO_CBZB     (1 << 20)
#define DBG_NO_ZMASK    (1 << 21)
#define DBG_NO_HIZ      (1 << 22)
#define DBG_NO_CMASK    (1 << 23)
@


1.1.1.3
log
@Import Mesa 10.4.3
@
text
@d28 1
a28 1
#include "radeon/drm/radeon_winsys.h"
@


1.1.1.4
log
@Import Mesa 10.2.9
@
text
@d28 1
a28 1
#include "../../winsys/radeon/drm/radeon_winsys.h"
@


