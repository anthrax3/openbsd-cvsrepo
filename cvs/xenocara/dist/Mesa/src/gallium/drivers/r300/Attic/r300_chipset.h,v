head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.12.23.05.17.32;	author jsg;	state dead;
branches;
next	1.5;
commitid	TnlogFl9nOv2eaRf;

1.5
date	2014.07.09.21.08.54;	author jsg;	state Exp;
branches;
next	1.4;
commitid	WPD6rgPryPkvXOr9;

1.4
date	2013.09.05.14.00.56;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.05;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.34;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.07;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.28;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.11.58;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.34.06;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.6
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright 2008 Corbin Simpson <MostAwesomeDude@@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * on the rights to use, copy, modify, merge, publish, distribute, sub
 * license, and/or sell copies of the Software, and to permit persons to whom
 * the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
 * USE OR OTHER DEALINGS IN THE SOFTWARE. */

#ifndef R300_CHIPSET_H
#define R300_CHIPSET_H

#include "pipe/p_compiler.h"

/* these are sizes in dwords */
#define R300_HIZ_LIMIT 10240
#define RV530_HIZ_LIMIT 15360

/* rv3xx have only one pipe */
#define PIPE_ZMASK_SIZE 4096
#define RV3xx_ZMASK_SIZE 5120

/* The size of a compressed tile. Each compressed tile takes 2 bits
 * in the ZMASK RAM, so there is always 16 tiles per one dword. */
enum r300_zmask_compression {
   R300_ZCOMP_4X4 = 4,
   R300_ZCOMP_8X8 = 8
};

/* Structure containing all the possible information about a specific Radeon
 * in the R3xx, R4xx, and R5xx families. */
struct r300_capabilities {
    /* Chipset family */
    int family;
    /* The number of vertex floating-point units */
    unsigned num_vert_fpus;
    /* The number of texture units. */
    unsigned num_tex_units;
    /* Whether or not TCL is physically present */
    boolean has_tcl;
    /* Some chipsets do not have HiZ RAM - other have varying amounts. */
    int hiz_ram;
    /* Some chipsets have zmask ram per pipe some don't. */
    int zmask_ram;
    /* CMASK is for MSAA colorbuffer compression and fast clear. */
    boolean has_cmask;
    /* Compression mode for ZMASK. */
    enum r300_zmask_compression z_compress;
    /* Whether or not this is RV350 or newer, including all r400 and r500
     * chipsets. The differences compared to the oldest r300 chips are:
     * - Blend LTE/GTE thresholds
     * - Better MACRO_SWITCH in texture tiling
     * - Half float vertex
     * - More HyperZ optimizations */
    boolean is_rv350;
    /* Whether or not this is R400. The differences compared their rv350
     * cousins are:
     * - Extended fragment shader registers
     * - 3DC texture compression (RGTC2) */
    boolean is_r400;
    /* Whether or not this is an RV515 or newer; R500s have many differences
     * that require extra consideration, compared to their rv350 cousins:
     * - Extra bit of width and height on texture sizes
     * - Blend color is split across two registers
     * - Universal Shader (US) block used for fragment shaders
     * - FP16 blending and multisampling
     * - Full RGTC texture compression
     * - 24-bit depth textures
     * - Stencil back-face reference value
     * - Ability to render up to 2^24 - 1 vertices with signed index offset */
    boolean is_r500;
    /* Whether or not the second pixel pipe is accessed with the high bit */
    boolean high_second_pipe;
    /* DXTC texture swizzling. */
    boolean dxtc_swizzle;
    /* Whether R500_US_FORMAT0_0 exists (R520-only and depends on DRM). */
    boolean has_us_format;
};

void r300_parse_chipset(uint32_t pci_id, struct r300_capabilities* caps);

#endif /* R300_CHIPSET_H */
@


1.5
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.4
log
@Merge Mesa 9.2.0
@
text
@d58 2
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a45 2
    /* PCI ID */
    uint32_t pci_id;
a49 4
    /* The number of fragment pipes */
    unsigned num_frag_pipes;
    /* The number of z pipes */
    unsigned num_z_pipes;
d91 1
a91 28
/* Enumerations for legibility and telling which card we're running on. */
enum {
    CHIP_FAMILY_R300 = 0, /* R3xx-based cores. */
    CHIP_FAMILY_R350,
    CHIP_FAMILY_RV350,
    CHIP_FAMILY_RV370,
    CHIP_FAMILY_RV380,
    CHIP_FAMILY_RS400,
    CHIP_FAMILY_RC410,
    CHIP_FAMILY_RS480,
    CHIP_FAMILY_R420,     /* R4xx-based cores. */
    CHIP_FAMILY_R423,
    CHIP_FAMILY_R430,
    CHIP_FAMILY_R480,
    CHIP_FAMILY_R481,
    CHIP_FAMILY_RV410,
    CHIP_FAMILY_RS600,
    CHIP_FAMILY_RS690,
    CHIP_FAMILY_RS740,
    CHIP_FAMILY_RV515,    /* R5xx-based cores. */
    CHIP_FAMILY_R520,
    CHIP_FAMILY_RV530,
    CHIP_FAMILY_R580,
    CHIP_FAMILY_RV560,
    CHIP_FAMILY_RV570
};

void r300_parse_chipset(struct r300_capabilities* caps);
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d36 7
d60 1
a60 1
    /* Some chipsets do not have HiZ RAM - other have varying amounts . */
d62 1
a62 1
    /*  some chipsets have zmask ram per pipe some don't */
d64 2
d93 2
a94 2
    /* Index bias (AKA index offset). */
    boolean index_bias_supported;
d99 1
a99 1
    CHIP_FAMILY_R300 = 0,
a100 1
    CHIP_FAMILY_R360,
d104 4
a107 1
    CHIP_FAMILY_R420,
a112 4
    CHIP_FAMILY_RS400,
    CHIP_FAMILY_RC410,
    CHIP_FAMILY_RS480,
    CHIP_FAMILY_RS482,
d116 1
a116 1
    CHIP_FAMILY_RV515,
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d28 8
d49 2
d53 12
a64 1
    /* Whether or not this is R400. The differences compared to their R3xx
d67 1
a67 1
     * - Blend LTE/GTE thresholds */
d70 1
a70 1
     * that require extra consideration, compared to their R3xx cousins:
a72 1
     * - Blend LTE/GTE thresholds
d74 5
a78 1
     * - FP16 blending and multisampling */
d82 4
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a27 8
/* these are sizes in dwords */
#define R300_HIZ_LIMIT 10240
#define RV530_HIZ_LIMIT 15360

/* rv3xx have only one pipe */
#define PIPE_ZMASK_SIZE 4096
#define RV3xx_ZMASK_SIZE 5120

a40 2
    /* The number of texture units. */
    unsigned num_tex_units;
d43 1
a43 12
    /* Some chipsets do not have HiZ RAM - other have varying amounts . */
    int hiz_ram;
    /*  some chipsets have zmask ram per pipe some don't */
    int zmask_ram;
    /* Whether or not this is RV350 or newer, including all r400 and r500
     * chipsets. The differences compared to the oldest r300 chips are:
     * - Blend LTE/GTE thresholds
     * - Better MACRO_SWITCH in texture tiling
     * - Half float vertex
     * - More HyperZ optimizations */
    boolean is_rv350;
    /* Whether or not this is R400. The differences compared their rv350
d46 1
a46 1
     * - 3DC texture compression (RGTC2) */
d49 1
a49 1
     * that require extra consideration, compared to their rv350 cousins:
d52 1
d54 1
a54 5
     * - FP16 blending and multisampling
     * - Full RGTC texture compression
     * - 24-bit depth textures
     * - Stencil back-face reference value
     * - Ability to render up to 2^24 - 1 vertices with signed index offset */
a57 4
    /* DXTC texture swizzling. */
    boolean dxtc_swizzle;
    /* Index bias (AKA index offset). */
    boolean index_bias_supported;
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@a35 7
/* The size of a compressed tile. Each compressed tile takes 2 bits
 * in the ZMASK RAM, so there is always 16 tiles per one dword. */
enum r300_zmask_compression {
   R300_ZCOMP_4X4 = 4,
   R300_ZCOMP_8X8 = 8
};

d39 2
d45 4
d53 1
a53 1
    /* Some chipsets do not have HiZ RAM - other have varying amounts. */
d55 1
a55 1
    /* Some chipsets have zmask ram per pipe some don't. */
a56 2
    /* Compression mode for ZMASK. */
    enum r300_zmask_compression z_compress;
d84 31
a114 2
    /* Whether R500_US_FORMAT0_0 exists (R520-only and depends on DRM). */
    boolean has_us_format;
d117 1
a117 1
void r300_parse_chipset(uint32_t pci_id, struct r300_capabilities* caps);
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@a57 2
    /* CMASK is for MSAA colorbuffer compression and fast clear. */
    boolean has_cmask;
@


