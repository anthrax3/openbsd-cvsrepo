head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.1.4.0.4
	OPENBSD_5_8_BASE:1.1.1.4
	OPENBSD_5_7:1.1.1.4.0.2
	OPENBSD_5_7_BASE:1.1.1.4
	v10_2_9:1.1.1.4
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.2
	OPENBSD_5_6_BASE:1.1.1.2
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.2
date	2015.12.23.05.17.30;	author jsg;	state dead;
branches;
next	1.1;
commitid	TnlogFl9nOv2eaRf;

1.1
date	2013.09.05.13.11.13;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.09.05.13.11.13;	author jsg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.07.09.20.33.53;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	3JhLfwcuBALP0ZR7;

1.1.1.3
date	2015.01.25.14.07.13;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.4
date	2015.02.20.22.44.20;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.2
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 2012-2013 LunarG, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Authors:
 *    Chia-I Wu <olv@@lunarg.com>
 */

#ifndef ILO_COMMON_H
#define ILO_COMMON_H

#include "pipe/p_compiler.h"
#include "pipe/p_defines.h"
#include "pipe/p_format.h"

#include "util/u_debug.h"
#include "util/u_double_list.h"
#include "util/u_format.h"
#include "util/u_inlines.h"
#include "util/u_math.h"
#include "util/u_memory.h"
#include "util/u_pointer.h"

#define ILO_GEN(gen) ((int) (gen * 100))
#define ILO_GEN_GET_MAJOR(gen) (gen / 100)

enum ilo_debug {
   ILO_DEBUG_3D        = 1 << 0,
   ILO_DEBUG_VS        = 1 << 1,
   ILO_DEBUG_GS        = 1 << 2,
   ILO_DEBUG_FS        = 1 << 3,
   ILO_DEBUG_CS        = 1 << 4,

   ILO_DEBUG_NOHW      = 1 << 8,
   ILO_DEBUG_NOCACHE   = 1 << 9,
};

struct ilo_dev_info {
   /* these mirror intel_winsys_info */
   int devid;
   bool has_llc;
   bool has_gen7_sol_reset;
   bool has_address_swizzling;

   int gen;
   int gt;
   int urb_size;
};

extern int ilo_debug;

/**
 * Print a message, for dumping or debugging.
 */
static inline void _util_printf_format(1, 2)
ilo_printf(const char *format, ...)
{
   va_list ap;

   va_start(ap, format);
   _debug_vprintf(format, ap);
   va_end(ap);
}

/**
 * Print a critical error.
 */
static inline void _util_printf_format(1, 2)
ilo_err(const char *format, ...)
{
   va_list ap;

   va_start(ap, format);
   _debug_vprintf(format, ap);
   va_end(ap);
}

/**
 * Print a warning, silenced for release builds.
 */
static inline void _util_printf_format(1, 2)
ilo_warn(const char *format, ...)
{
#ifdef DEBUG
   va_list ap;

   va_start(ap, format);
   _debug_vprintf(format, ap);
   va_end(ap);
#else
#endif
}

#endif /* ILO_COMMON_H */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import Mesa 9.2.0
@
text
@@


1.1.1.2
log
@Import Mesa 10.2.3
@
text
@a45 7
/* enable debug flags affecting hot pathes only with debug builds */
#ifdef DEBUG
#define ILO_DEBUG_HOT 1
#else
#define ILO_DEBUG_HOT 0
#endif

a51 2
   ILO_DEBUG_DRAW      = ILO_DEBUG_HOT << 5,
   ILO_DEBUG_FLUSH     = 1 << 6,
d53 2
a54 4
   /* flags that affect the behaviors of the driver */
   ILO_DEBUG_NOHW      = 1 << 20,
   ILO_DEBUG_NOCACHE   = 1 << 21,
   ILO_DEBUG_NOHIZ     = 1 << 22,
a59 1
   int max_batch_size;
d61 1
a62 4
   bool has_logical_context;
   bool has_ppgtt;
   bool has_timestamp;
   bool has_gen7_sol_reset;
@


1.1.1.3
log
@Import Mesa 10.4.3
@
text
@d44 1
a52 6
#define ILO_DEV_ASSERT(dev, min_gen, max_gen) \
   ilo_dev_assert(dev, ILO_GEN(min_gen), ILO_GEN(max_gen))

#define ILO_PRIM_RECTANGLES PIPE_PRIM_MAX
#define ILO_PRIM_MAX (PIPE_PRIM_MAX + 1)

d54 1
a54 1
   ILO_DEBUG_BATCH     = 1 << 0,
d60 1
a60 1
   ILO_DEBUG_SUBMIT    = 1 << 6,
d71 1
a71 2
   size_t aperture_total;
   size_t aperture_mappable;
d79 1
a79 3
   /* use ilo_dev_gen() */
   int gen_opaque;

a80 2
   int eu_count;
   int thread_count;
a84 12

static inline int
ilo_dev_gen(const struct ilo_dev_info *dev)
{
   return dev->gen_opaque;
}

static inline void
ilo_dev_assert(const struct ilo_dev_info *dev, int min_opqaue, int max_opqaue)
{
   assert(dev->gen_opaque >= min_opqaue && dev->gen_opaque <= max_opqaue);
}
@


1.1.1.4
log
@Import Mesa 10.2.9
@
text
@a43 1
#define ILO_GEN_GET_MAJOR(gen) (gen / 100)
d52 6
d59 1
a59 1
   ILO_DEBUG_3D        = 1 << 0,
d65 1
a65 1
   ILO_DEBUG_FLUSH     = 1 << 6,
d76 2
a77 1
   int max_batch_size;
d85 3
a87 1
   int gen;
d89 2
d95 12
@


