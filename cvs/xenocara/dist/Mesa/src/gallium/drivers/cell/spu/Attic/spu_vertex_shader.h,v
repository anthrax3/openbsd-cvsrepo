head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.09.05.14.00.09;	author jsg;	state dead;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.05;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.26;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge Mesa 9.2.0
@
text
@#ifndef SPU_VERTEX_SHADER_H
#define SPU_VERTEX_SHADER_H

#include "cell/common.h"
#include "pipe/p_format.h"
#include "spu_exec.h"

struct spu_vs_context;

typedef void (*spu_full_fetch_func)( struct spu_vs_context *draw,
				     struct spu_exec_machine *machine,
				     const unsigned *elts,
				     unsigned count );

struct spu_vs_context {
   struct pipe_viewport_state viewport;

   struct {
      uint64_t src_ptr[PIPE_MAX_ATTRIBS];
      unsigned pitch[PIPE_MAX_ATTRIBS];
      unsigned size[PIPE_MAX_ATTRIBS];
      unsigned code_offset[PIPE_MAX_ATTRIBS];
      unsigned nr_attrs;
      boolean dirty;

      spu_full_fetch_func fetch_func;
      void *code;
   } vertex_fetch;
   
   /* Clip derived state:
    */
   float plane[12][4];
   unsigned nr_planes;

   struct spu_exec_machine machine;
   const float (*constants)[4];

   unsigned num_vs_outputs;
};

extern void spu_update_vertex_fetch(struct spu_vs_context *draw);

static INLINE void spu_vertex_fetch(struct spu_vs_context *draw,
				    struct spu_exec_machine *machine,
				    const unsigned *elts,
				    unsigned count)
{
   if (draw->vertex_fetch.dirty) {
      spu_update_vertex_fetch(draw);
      draw->vertex_fetch.dirty = 0;
   }
   
   (*draw->vertex_fetch.fetch_func)(draw, machine, elts, count);
}

struct cell_command_vs;

extern void
spu_bind_vertex_shader(struct spu_vs_context *draw,
		       struct cell_shader_info *vs);

extern void
spu_execute_vertex_shader(struct spu_vs_context *draw,
			  const struct cell_command_vs *vs);

#endif /* SPU_VERTEX_SHADER_H */
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@

