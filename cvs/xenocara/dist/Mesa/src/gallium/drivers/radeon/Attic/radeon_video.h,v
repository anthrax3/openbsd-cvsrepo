head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.1.3.0.4
	OPENBSD_5_8_BASE:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.2
	OPENBSD_5_7_BASE:1.1.1.3
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	v10_2_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2015.12.23.05.17.34;	author jsg;	state dead;
branches;
next	1.1;
commitid	TnlogFl9nOv2eaRf;

1.1
date	2014.07.09.20.34.13;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	3JhLfwcuBALP0ZR7;

1.1.1.1
date	2014.07.09.20.34.13;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	3JhLfwcuBALP0ZR7;

1.1.1.2
date	2015.01.25.14.08.33;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.3
date	2015.02.20.22.45.47;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.2
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 *
 * Copyright 2013 Advanced Micro Devices, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

/*
 * Authors:
 *      Christian KÃ¶nig <christian.koenig@@amd.com>
 *
 */

#ifndef RADEON_VIDEO_H
#define RADEON_VIDEO_H

#include "../../winsys/radeon/drm/radeon_winsys.h"
#include "vl/vl_video_buffer.h"

#define RVID_ERR(fmt, args...) \
	fprintf(stderr, "EE %s:%d %s UVD - "fmt, __FILE__, __LINE__, __func__, ##args)

/* video buffer representation */
struct rvid_buffer
{
	enum radeon_bo_domain		domain;
	struct pb_buffer*		buf;
	struct radeon_winsys_cs_handle*	cs_handle;
};

/* generate an stream handle */
unsigned rvid_alloc_stream_handle(void);

/* create a buffer in the winsys */
bool rvid_create_buffer(struct radeon_winsys *ws, struct rvid_buffer *buffer,
			unsigned size, enum radeon_bo_domain domain);

/* destroy a buffer */
void rvid_destroy_buffer(struct rvid_buffer *buffer);

/* reallocate a buffer, preserving its content */
bool rvid_resize_buffer(struct radeon_winsys *ws, struct radeon_winsys_cs *cs,
			struct rvid_buffer *new_buf, unsigned new_size);

/* clear the buffer with zeros */
void rvid_clear_buffer(struct radeon_winsys *ws, struct radeon_winsys_cs *cs, struct rvid_buffer* buffer);

/* join surfaces into the same buffer with identical tiling params
   sumup their sizes and replace the backend buffers with a single bo */
void rvid_join_surfaces(struct radeon_winsys* ws, unsigned bind,
                        struct pb_buffer** buffers[VL_NUM_COMPONENTS],
                        struct radeon_surface *surfaces[VL_NUM_COMPONENTS]);

/* returns supported codecs and other parameters */
int rvid_get_video_param(struct pipe_screen *screen,
                         enum pipe_video_profile profile,
                         enum pipe_video_entrypoint entrypoint,
                         enum pipe_video_cap param);

/* the hardware only supports NV12 */
boolean rvid_is_format_supported(struct pipe_screen *screen,
                                 enum pipe_format format,
                                 enum pipe_video_profile profile,
                                 enum pipe_video_entrypoint entrypoint);

#endif // RADEON_VIDEO_H
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import Mesa 10.2.3
@
text
@@


1.1.1.2
log
@Import Mesa 10.4.3
@
text
@d37 1
a37 1
#include "radeon/drm/radeon_winsys.h"
d46 3
a48 2
	unsigned		usage;
	struct r600_resource	*res;
d55 2
a56 2
bool rvid_create_buffer(struct pipe_screen *screen, struct rvid_buffer *buffer,
			unsigned size, unsigned usage);
d62 1
a62 1
bool rvid_resize_buffer(struct pipe_screen *screen, struct radeon_winsys_cs *cs,
d66 1
a66 1
void rvid_clear_buffer(struct pipe_context *context, struct rvid_buffer* buffer);
@


1.1.1.3
log
@Import Mesa 10.2.9
@
text
@d37 1
a37 1
#include "../../winsys/radeon/drm/radeon_winsys.h"
d46 2
a47 3
	enum radeon_bo_domain		domain;
	struct pb_buffer*		buf;
	struct radeon_winsys_cs_handle*	cs_handle;
d54 2
a55 2
bool rvid_create_buffer(struct radeon_winsys *ws, struct rvid_buffer *buffer,
			unsigned size, enum radeon_bo_domain domain);
d61 1
a61 1
bool rvid_resize_buffer(struct radeon_winsys *ws, struct radeon_winsys_cs *cs,
d65 1
a65 1
void rvid_clear_buffer(struct radeon_winsys *ws, struct radeon_winsys_cs *cs, struct rvid_buffer* buffer);
@


