head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.09.05.14.00.20;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.04;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.06;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.27;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge Mesa 9.2.0
@
text
@
#include "brw_context.h"
#include "brw_batchbuffer.h"

#include "util/u_upload_mgr.h"




/* All batchbuffer flushes must go through this function.
 */
void brw_context_flush( struct brw_context *brw )
{
   /*
    * 
    */
   brw_emit_query_end(brw);

   /* Move to the end of the current upload buffer so that we'll force choosing
    * a new buffer next time.
    */
   u_upload_flush( brw->vb.upload_vertex );
   u_upload_flush( brw->vb.upload_index );

   _brw_batchbuffer_flush( brw->batch, __FILE__, __LINE__ );

   /* Mark all context state as needing to be re-emitted.
    * This is probably not as severe as on 915, since almost all of our state
    * is just in referenced buffers.
    */
   brw->state.dirty.brw |= BRW_NEW_CONTEXT;
   brw->state.dirty.mesa |= ~0;
   brw->state.dirty.brw |= ~0;
   brw->state.dirty.cache |= ~0;

   brw->curbe.need_new_bo = GL_TRUE;
}

static void
brw_flush( struct pipe_context *pipe,
           struct pipe_fence_handle **fence )
{
   brw_context_flush( brw_context( pipe ) );
   if (fence)
      *fence = NULL;
}

void brw_pipe_flush_init( struct brw_context *brw )
{
   brw->base.flush = brw_flush;
}


void brw_pipe_flush_cleanup( struct brw_context *brw )
{
}
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@@


1.2
log
@Merge Mesa 7.10.3
@
text
@a40 1
           unsigned flags, 
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d2 3
a6 3
#include "brw_context.h"
#include "brw_screen.h"
#include "brw_batchbuffer.h"
a48 24
static unsigned brw_is_buffer_referenced(struct pipe_context *pipe,
                                  struct pipe_buffer *buffer)
{
   struct brw_context *brw = brw_context(pipe);
   struct brw_screen *bscreen = brw_screen(brw->base.screen);

   return brw_is_buffer_referenced_by_bo( bscreen,
                                          buffer,
                                          brw->batch->buf );
}

static unsigned brw_is_texture_referenced(struct pipe_context *pipe,
                                   struct pipe_texture *texture,
                                   unsigned face,
                                   unsigned level)
{
   struct brw_context *brw = brw_context(pipe);
   struct brw_screen *bscreen = brw_screen(brw->base.screen);

   return brw_is_texture_referenced_by_bo( bscreen,
                                           texture, face, level,
                                           brw->batch->buf );
}

a51 2
   brw->base.is_buffer_referenced = brw_is_buffer_referenced;
   brw->base.is_texture_referenced = brw_is_texture_referenced;
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d2 2
d5 1
a7 3
#include "util/u_upload_mgr.h"


d49 24
d76 2
@

