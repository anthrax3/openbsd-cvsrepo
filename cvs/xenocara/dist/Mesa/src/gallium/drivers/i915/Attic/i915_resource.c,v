head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.30;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2014.07.09.21.08.53;	author jsg;	state Exp;
branches;
next	1.3;
commitid	WPD6rgPryPkvXOr9;

1.3
date	2013.09.05.14.00.12;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.17.13.58.04;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.23.13.29.26;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.26;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.11.09;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.33.52;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@#include "util/u_debug.h"

#include "i915_resource.h"
#include "i915_context.h"
#include "i915_screen.h"


static struct pipe_resource *
i915_resource_create(struct pipe_screen *screen,
                     const struct pipe_resource *template)
{
   if (template->target == PIPE_BUFFER)
      return i915_buffer_create(screen, template);
   else
   {
      if (!(template->bind & PIPE_BIND_LINEAR))
         return i915_texture_create(screen, template, FALSE);
      else
         return i915_texture_create(screen, template, TRUE);
   }
}

static struct pipe_resource *
i915_resource_from_handle(struct pipe_screen * screen,
			 const struct pipe_resource *template,
			 struct winsys_handle *whandle)
{
   if (template->target == PIPE_BUFFER)
      return NULL;
   else
      return i915_texture_from_handle(screen, template, whandle);
}


void
i915_init_resource_functions(struct i915_context *i915 )
{
   i915->base.transfer_map = u_transfer_map_vtbl;
   i915->base.transfer_flush_region = u_transfer_flush_region_vtbl;
   i915->base.transfer_unmap = u_transfer_unmap_vtbl;
   i915->base.transfer_inline_write = u_transfer_inline_write_vtbl;
}

void
i915_init_screen_resource_functions(struct i915_screen *is)
{
   is->base.resource_create = i915_resource_create;
   is->base.resource_from_handle = i915_resource_from_handle;
   is->base.resource_get_handle = u_resource_get_handle_vtbl;
   is->base.resource_destroy = u_resource_destroy_vtbl;
}
@


1.4
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.3
log
@Merge Mesa 9.2.0
@
text
@d15 6
a20 2
      return i915_texture_create(screen, template, FALSE);

@


1.2
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a33 1
   i915->base.get_transfer = u_get_transfer_vtbl;
a36 1
   i915->base.transfer_destroy = u_transfer_destroy_vtbl;
a46 1
   is->base.user_buffer_create = i915_user_buffer_create;
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
                    const struct pipe_resource *template)
d15 1
a15 1
      return i915_texture_create(screen, template);
a33 1
   i915->base.is_resource_referenced = u_default_is_resource_referenced;
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d10 1
a10 1
                     const struct pipe_resource *template)
d15 1
a15 1
      return i915_texture_create(screen, template, FALSE);
d34 2
d39 1
d50 1
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d15 2
a16 6
   {
      if (!(template->bind & PIPE_BIND_LINEAR))
         return i915_texture_create(screen, template, FALSE);
      else
         return i915_texture_create(screen, template, TRUE);
   }
@


