head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.30;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2014.07.09.21.08.53;	author jsg;	state Exp;
branches;
next	1.3;
commitid	WPD6rgPryPkvXOr9;

1.3
date	2012.08.17.13.58.04;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.05;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.26;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.11.07;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.33.51;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 * 
 * Copyright 2007 VMware, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/

/* Authors:  Keith Whitwell <keithw@@vmware.com>
 *           Jakob Bornecrantz <wallbraker@@gmail.com>
 */

#ifndef I915_DEBUG_H
#define I915_DEBUG_H

#include "util/u_debug.h"

struct i915_screen;
struct i915_context;
struct i915_winsys_batchbuffer;

#define DBG_BLIT      0x1
#define DBG_EMIT      0x2
#define DBG_ATOMS     0x4
#define DBG_FLUSH     0x8
#define DBG_TEXTURE   0x10
#define DBG_CONSTANTS 0x20

extern unsigned i915_debug;

#ifdef DEBUG
static INLINE boolean
I915_DBG_ON(unsigned flags)
{
   return i915_debug & flags;
}

static INLINE void
I915_DBG(unsigned flags, const char *fmt, ...)
{
   if (I915_DBG_ON(flags)) {
      va_list  args;

      va_start(args, fmt);
      debug_vprintf(fmt, args);
      va_end(args);
   }
}
#else
#define I915_DBG_ON(flags) (0)
static INLINE void I915_DBG(unsigned flags, const char *fmt, ...) {}
#endif

void i915_debug_init(struct i915_screen *i915);

void i915_dump_batchbuffer(struct i915_winsys_batchbuffer *i915);

void i915_dump_dirty(struct i915_context *i915, const char *func);

void i915_dump_hardware_dirty(struct i915_context *i915, const char *func);

#endif
@


1.4
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d3 1
a3 1
 * Copyright 2007 Tungsten Graphics, Inc., Cedar Park, Texas.
d21 1
a21 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
d28 1
a28 1
/* Authors:  Keith Whitwell <keith@@tungstengraphics.com>
@


1.2
log
@Merge Mesa 7.10.3
@
text
@a48 1
extern boolean i915_tiling;
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d29 1
d35 1
a35 1
#include <stdarg.h>
d37 1
d39 1
d41 13
a53 1
struct debug_stream 
d55 2
a56 36
   unsigned offset;		/* current gtt offset */
   char *ptr;		/* pointer to gtt offset zero */
   char *end;		/* pointer to gtt offset zero */
   unsigned print_addresses;
};


/* Internal functions
 */
void i915_disassemble_program(struct debug_stream *stream, 
			      const unsigned *program, unsigned sz);

void i915_print_ureg(const char *msg, unsigned ureg);


#define DEBUG_BATCH	 0x1
#define DEBUG_BLIT       0x2
#define DEBUG_BUFFER     0x4
#define DEBUG_CONSTANTS  0x8
#define DEBUG_CONTEXT    0x10
#define DEBUG_DRAW	 0x20
#define DEBUG_DYNAMIC	 0x40
#define DEBUG_FLUSH      0x80
#define DEBUG_MAP	 0x100
#define DEBUG_PROGRAM	 0x200
#define DEBUG_REGIONS    0x400
#define DEBUG_SAMPLER	 0x800
#define DEBUG_STATIC	 0x1000
#define DEBUG_SURFACE    0x2000
#define DEBUG_WINSYS     0x4000

#include "pipe/p_compiler.h"

#if defined(DEBUG) && defined(FILE_DEBUG_FLAG)

#include "util/u_simple_screen.h"
d59 1
a59 4
I915_DBG(
   struct i915_context  *i915,
   const char           *fmt,
                        ... )
d61 1
a61 1
   if ((i915)->debug & FILE_DEBUG_FLAG) {
d64 3
a66 3
      va_start( args, fmt );
      debug_vprintf( fmt, args );
      va_end( args );
a68 1

d70 2
a71 11

static INLINE void
I915_DBG(
   struct i915_context  *i915,
   const char           *fmt,
                        ... )
{
   (void) i915;
   (void) fmt;
}

d74 1
d76 1
a76 3
struct intel_batchbuffer;

void i915_dump_batchbuffer( struct intel_batchbuffer *i915 );
d78 1
a78 1
void i915_debug_init( struct i915_context *i915 );
d80 1
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a28 1
 *           Jakob Bornecrantz <wallbraker@@gmail.com>
d34 1
a34 1
#include "util/u_debug.h"
a35 1
struct i915_screen;
a36 1
struct i915_winsys_batchbuffer;
d38 1
a38 13
#define DBG_BLIT      0x1
#define DBG_EMIT      0x2
#define DBG_ATOMS     0x4
#define DBG_FLUSH     0x8
#define DBG_TEXTURE   0x10
#define DBG_CONSTANTS 0x20

extern unsigned i915_debug;
extern boolean i915_tiling;

#ifdef DEBUG
static INLINE boolean
I915_DBG_ON(unsigned flags)
d40 36
a75 2
   return i915_debug & flags;
}
d78 4
a81 1
I915_DBG(unsigned flags, const char *fmt, ...)
d83 1
a83 1
   if (I915_DBG_ON(flags)) {
d86 3
a88 3
      va_start(args, fmt);
      debug_vprintf(fmt, args);
      va_end(args);
d91 1
d93 11
a103 2
#define I915_DBG_ON(flags) (0)
static INLINE void I915_DBG(unsigned flags, const char *fmt, ...) {}
a105 1
void i915_debug_init(struct i915_screen *i915);
d107 3
a109 1
void i915_dump_batchbuffer(struct i915_winsys_batchbuffer *i915);
d111 1
a111 1
void i915_dump_dirty(struct i915_context *i915, const char *func);
a112 1
void i915_dump_hardware_dirty(struct i915_context *i915, const char *func);
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d49 1
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d3 1
a3 1
 * Copyright 2007 VMware, Inc.
d21 1
a21 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
d28 1
a28 1
/* Authors:  Keith Whitwell <keithw@@vmware.com>
@


