head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.12.23.05.17.30;	author jsg;	state dead;
branches;
next	1.3;
commitid	TnlogFl9nOv2eaRf;

1.3
date	2014.07.09.21.08.53;	author jsg;	state Exp;
branches;
next	1.2;
commitid	WPD6rgPryPkvXOr9;

1.2
date	2012.08.17.13.58.04;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.23.13.29.26;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.26;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.11.09;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.33.52;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.4
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 * 
 * Copyright 2008 VMware, Inc.
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/

#ifndef I915_RESOURCE_H
#define I915_RESOURCE_H

struct i915_screen;

#include "util/u_transfer.h"
#include "util/u_debug.h"
#include "i915_winsys.h"


struct i915_context;
struct i915_screen;


struct i915_buffer {
   struct u_resource b;
   uint8_t *data;
   boolean free_on_destroy;
};


/* Texture transfer. */
struct i915_transfer {
   /* Base class. */
   struct pipe_transfer b;
   struct pipe_resource *staging_texture;
};


#define I915_MAX_TEXTURE_2D_LEVELS 12  /* max 2048x2048 */
#define I915_MAX_TEXTURE_3D_LEVELS  9  /* max 256x256x256 */


struct offset_pair {
	unsigned short nblocksx;
	unsigned short nblocksy;
};

struct i915_texture {
   struct u_resource b;

   /* tiling flags */
   enum i915_winsys_buffer_tile tiling;
   unsigned stride;
   unsigned depth_stride;          /* per-image on i945? */
   unsigned total_nblocksy;

   unsigned nr_images[I915_MAX_TEXTURE_2D_LEVELS];

   /* Explicitly store the offset of each image for each cube face or
    * depth value.
    *
    * Array [depth] off offsets.
    */
   struct offset_pair *image_offset[I915_MAX_TEXTURE_2D_LEVELS];

   /* The data is held here:
    */
   struct i915_winsys_buffer *buffer;
};

unsigned i915_texture_offset(struct i915_texture *tex,
                             unsigned level, unsigned layer);
void i915_init_screen_resource_functions(struct i915_screen *is);
void i915_init_resource_functions(struct i915_context *i915);

extern struct u_resource_vtbl i915_buffer_vtbl;
extern struct u_resource_vtbl i915_texture_vtbl;

static INLINE struct i915_texture *i915_texture(struct pipe_resource *resource)
{
   struct i915_texture *tex = (struct i915_texture *)resource;
   assert(tex->b.vtbl == &i915_texture_vtbl);
   return tex;
}

static INLINE struct i915_buffer *i915_buffer(struct pipe_resource *resource)
{
   struct i915_buffer *tex = (struct i915_buffer *)resource;
   assert(tex->b.vtbl == &i915_buffer_vtbl);
   return tex;
}

struct pipe_resource *
i915_texture_create(struct pipe_screen *screen,
                    const struct pipe_resource *template,
                    boolean force_untiled);

struct pipe_resource *
i915_texture_from_handle(struct pipe_screen * screen,
			 const struct pipe_resource *template,
			 struct winsys_handle *whandle);


struct pipe_resource *
i915_user_buffer_create(struct pipe_screen *screen,
                        void *ptr,
                        unsigned bytes,
			unsigned usage);

struct pipe_resource *
i915_buffer_create(struct pipe_screen *screen,
		   const struct pipe_resource *template);

#endif /* I915_RESOURCE_H */
@


1.3
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.2
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d3 1
a3 1
 * Copyright 2008 Tungsten Graphics, Inc., Cedar Park, Texas.
d21 1
a21 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
@


1.1
log
@Initial revision
@
text
@d48 11
a58 2
#define I915_MAX_TEXTURE_2D_LEVELS 11  /* max 1024x1024 */
#define I915_MAX_TEXTURE_3D_LEVELS  8  /* max 128x128x128 */
d113 2
a114 1
                    const struct pipe_resource *template);
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d48 2
a49 11

/* Texture transfer. */
struct i915_transfer {
   /* Base class. */
   struct pipe_transfer b;
   struct pipe_resource *staging_texture;
};


#define I915_MAX_TEXTURE_2D_LEVELS 12  /* max 2048x2048 */
#define I915_MAX_TEXTURE_3D_LEVELS  9  /* max 256x256x256 */
d104 1
a104 2
                    const struct pipe_resource *template,
                    boolean force_untiled);
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d3 1
a3 1
 * Copyright 2008 VMware, Inc.
d21 1
a21 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
@


