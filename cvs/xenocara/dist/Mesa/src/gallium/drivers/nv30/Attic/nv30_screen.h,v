head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2014.07.09.21.08.53;	author jsg;	state dead;
branches;
next	1.3;
commitid	WPD6rgPryPkvXOr9;

1.3
date	2013.09.05.14.00.40;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.33;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.06;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.09.05.13.11.36;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@#ifndef __NV30_SCREEN_H__
#define __NV30_SCREEN_H__

#include <stdio.h>

#define NOUVEAU_ERR(fmt, args...) \
   fprintf(stderr, "%s:%d -  "fmt, __FUNCTION__, __LINE__, ##args);

#include "util/u_double_list.h"

#include "nouveau/nouveau_screen.h"
#include "nouveau/nouveau_fence.h"
#include "nouveau/nouveau_heap.h"
#include "nv30_winsys.h"
#include "nv30_resource.h"

struct nv30_context;

struct nv30_screen {
   struct nouveau_screen base;

   struct nv30_context *cur_ctx;

   struct nouveau_bo *notify;

   struct nouveau_object *ntfy;
   struct nouveau_object *fence;

   struct nouveau_object *query;
   struct nouveau_heap *query_heap;
   struct list_head queries;

   struct nouveau_object *null;
   struct nouveau_object *eng3d;
   struct nouveau_object *m2mf;
   struct nouveau_object *surf2d;
   struct nouveau_object *swzsurf;
   struct nouveau_object *sifm;

   /*XXX: nvfx state */
   struct nouveau_heap *vp_exec_heap;
   struct nouveau_heap *vp_data_heap;
};

static INLINE struct nv30_screen *
nv30_screen(struct pipe_screen *pscreen)
{
   return (struct nv30_screen *)pscreen;
}

#endif
@


1.3
log
@Merge Mesa 9.2.0
@
text
@@


1.2
log
@Merge Mesa 7.10.3
@
text
@d4 7
d12 4
d17 1
a17 1
#include "nouveau/nv04_surface_2d.h"
d20 1
a20 1
	struct nouveau_screen base;
d22 1
a22 1
	struct nouveau_winsys *nvws;
d24 1
a24 1
	struct nv30_context *cur_ctx;
d26 2
a27 4
	/* HW graphics objects */
	struct nv04_surface_2d *eng2d;
	struct nouveau_grobj *rankine;
	struct nouveau_notifier *sync;
d29 3
a31 3
	/* Query object resources */
	struct nouveau_notifier *query;
	struct nouveau_resource *query_heap;
d33 6
a38 3
	/* Vtxprog resources */
	struct nouveau_resource *vp_exec_heap;
	struct nouveau_resource *vp_data_heap;
d40 3
a42 2
	/* Current 3D state of channel */
	struct nouveau_stateobj *state[NV30_STATE_MAX];
d46 1
a46 1
nv30_screen(struct pipe_screen *screen)
d48 1
a48 1
	return (struct nv30_screen *)screen;
a49 3

void
nv30_screen_init_transfer_functions(struct pipe_screen *pscreen);
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@@


1.1.1.1
log
@Import Mesa 9.2.0
@
text
@a3 7
#include <stdio.h>

#define NOUVEAU_ERR(fmt, args...) \
   fprintf(stderr, "%s:%d -  "fmt, __FUNCTION__, __LINE__, ##args);

#include "util/u_double_list.h"

a4 4
#include "nouveau/nouveau_fence.h"
#include "nouveau/nouveau_heap.h"
#include "nv30_winsys.h"
#include "nv30_resource.h"
d6 1
a6 1
struct nv30_context;
d9 1
a9 1
   struct nouveau_screen base;
d11 1
a11 1
   struct nv30_context *cur_ctx;
d13 1
a13 1
   struct nouveau_bo *notify;
d15 4
a18 2
   struct nouveau_object *ntfy;
   struct nouveau_object *fence;
d20 3
a22 3
   struct nouveau_object *query;
   struct nouveau_heap *query_heap;
   struct list_head queries;
d24 3
a26 6
   struct nouveau_object *null;
   struct nouveau_object *eng3d;
   struct nouveau_object *m2mf;
   struct nouveau_object *surf2d;
   struct nouveau_object *swzsurf;
   struct nouveau_object *sifm;
d28 2
a29 3
   /*XXX: nvfx state */
   struct nouveau_heap *vp_exec_heap;
   struct nouveau_heap *vp_data_heap;
d33 1
a33 1
nv30_screen(struct pipe_screen *pscreen)
d35 1
a35 1
   return (struct nv30_screen *)pscreen;
d37 3
@


