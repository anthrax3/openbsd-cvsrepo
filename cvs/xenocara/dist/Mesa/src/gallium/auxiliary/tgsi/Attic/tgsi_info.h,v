head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.27;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2014.07.09.21.08.52;	author jsg;	state Exp;
branches;
next	1.3;
commitid	WPD6rgPryPkvXOr9;

1.3
date	2013.09.05.13.59.44;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.32;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.04;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.25;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.10.40;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.33.46;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 * 
 * Copyright 2008 VMware, Inc.
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/

#ifndef TGSI_INFO_H
#define TGSI_INFO_H

#include "pipe/p_compiler.h"
#include "pipe/p_shader_tokens.h"
#include "util/u_format.h"

#if defined __cplusplus
extern "C" {
#endif

/* This enum describes how an opcode calculates its result. */
enum tgsi_output_mode {
   /** The opcode produces no result. */
   TGSI_OUTPUT_NONE            = 0,

   /** When this opcode writes to a channel of the destination register,
    *  it takes as arguments values from the same channel of the source
    *  register(s).
    *
    *  Example: TGSI_OPCODE_ADD
    */
   TGSI_OUTPUT_COMPONENTWISE   = 1,

   /** This opcode writes the same value to all enabled channels of the
    * destination register.
    *
    *  Example: TGSI_OPCODE_RSQ
    */
   TGSI_OUTPUT_REPLICATE       = 2,

   /** The operation performed by this opcode is dependent on which channel
    *  of the destination register is being written.
    *
    *  Example: TGSI_OPCODE_LOG
    */
   TGSI_OUTPUT_CHAN_DEPENDENT  = 3,

   /**
    * Example: TGSI_OPCODE_TEX
    */
   TGSI_OUTPUT_OTHER           = 4
};

struct tgsi_opcode_info
{
   unsigned num_dst:3;
   unsigned num_src:3;
   unsigned is_tex:1;
   unsigned is_branch:1;
   int pre_dedent:2;
   int post_indent:2;
   enum tgsi_output_mode output_mode:3;
   const char *mnemonic;
   uint opcode;
};

const struct tgsi_opcode_info *
tgsi_get_opcode_info( uint opcode );

const char *
tgsi_get_opcode_name( uint opcode );

const char *
tgsi_get_processor_name( uint processor );

enum tgsi_opcode_type {
   TGSI_TYPE_UNTYPED, /* for MOV */
   TGSI_TYPE_VOID,
   TGSI_TYPE_UNSIGNED,
   TGSI_TYPE_SIGNED,
   TGSI_TYPE_FLOAT,
   TGSI_TYPE_DOUBLE
};

enum tgsi_opcode_type
tgsi_opcode_infer_src_type( uint opcode );

enum tgsi_opcode_type
tgsi_opcode_infer_dst_type( uint opcode );

#if defined __cplusplus
}
#endif

#endif /* TGSI_INFO_H */
@


1.4
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.3
log
@Merge Mesa 9.2.0
@
text
@d3 1
a3 1
 * Copyright 2008 Tungsten Graphics, Inc., Cedar Park, Texas.
d21 1
a21 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d33 1
d39 33
d80 1
d94 14
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d31 1
d55 3
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a30 1
#include "pipe/p_compiler.h"
a53 3

const char *
tgsi_get_processor_name( uint processor );
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@a32 1
#include "util/u_format.h"
a37 33
/* This enum describes how an opcode calculates its result. */
enum tgsi_output_mode {
   /** The opcode produces no result. */
   TGSI_OUTPUT_NONE            = 0,

   /** When this opcode writes to a channel of the destination register,
    *  it takes as arguments values from the same channel of the source
    *  register(s).
    *
    *  Example: TGSI_OPCODE_ADD
    */
   TGSI_OUTPUT_COMPONENTWISE   = 1,

   /** This opcode writes the same value to all enabled channels of the
    * destination register.
    *
    *  Example: TGSI_OPCODE_RSQ
    */
   TGSI_OUTPUT_REPLICATE       = 2,

   /** The operation performed by this opcode is dependent on which channel
    *  of the destination register is being written.
    *
    *  Example: TGSI_OPCODE_LOG
    */
   TGSI_OUTPUT_CHAN_DEPENDENT  = 3,

   /**
    * Example: TGSI_OPCODE_TEX
    */
   TGSI_OUTPUT_OTHER           = 4
};

a45 1
   enum tgsi_output_mode output_mode:3;
a58 14
enum tgsi_opcode_type {
   TGSI_TYPE_UNTYPED, /* for MOV */
   TGSI_TYPE_VOID,
   TGSI_TYPE_UNSIGNED,
   TGSI_TYPE_SIGNED,
   TGSI_TYPE_FLOAT,
   TGSI_TYPE_DOUBLE
};

enum tgsi_opcode_type
tgsi_opcode_infer_src_type( uint opcode );

enum tgsi_opcode_type
tgsi_opcode_infer_dst_type( uint opcode );
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d3 1
a3 1
 * Copyright 2008 VMware, Inc.
d21 1
a21 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
@


