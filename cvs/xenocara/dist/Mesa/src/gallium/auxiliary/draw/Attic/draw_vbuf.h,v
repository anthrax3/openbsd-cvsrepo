head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.26;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2014.07.09.21.08.52;	author jsg;	state Exp;
branches;
next	1.3;
commitid	WPD6rgPryPkvXOr9;

1.3
date	2013.09.05.13.59.32;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.31;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.04;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.24;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.09.43;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.33.42;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 *
 * Copyright 2007 VMware, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

/**
 * \file
 * Vertex buffer drawing stage.
 * 
 * \author Keith Whitwell <keithw@@vmware.com>
 * \author Jose Fonseca <jfonseca@@vmware.com>
 */

#ifndef DRAW_VBUF_H_
#define DRAW_VBUF_H_


#include "pipe/p_compiler.h"


struct pipe_rasterizer_state;
struct draw_context;
struct vertex_info;
struct pipe_query_data_pipeline_statistics;


/**
 * Interface for hardware vertex buffer rendering.
 */
struct vbuf_render {

   /**
    * Driver limits.  May be tuned lower to improve cache hits on
    * index list.
    */
   unsigned max_indices;
   unsigned max_vertex_buffer_bytes;

   /**
    * Query if the hardware driver needs assistance for a particular
    * combination of rasterizer state and primitive.
    *
    * Currently optional.
    */
   boolean (*need_pipeline)(const struct vbuf_render *render,
                            const struct pipe_rasterizer_state *rasterizer,
                            unsigned int prim );


   /**
    * Get the hardware vertex format.
    * 
    * XXX: have this in draw_context instead?
    */ 
   const struct vertex_info *(*get_vertex_info)( struct vbuf_render * );
	 
   /**
    * Request a destination for vertices.
    * Hardware renderers will use ttm memory, others will just malloc
    * something.
    */
   boolean (*allocate_vertices)( struct vbuf_render *,
                                 ushort vertex_size,
                                 ushort nr_vertices );
   
   void *(*map_vertices)( struct vbuf_render * );
   void (*unmap_vertices)( struct vbuf_render *, 
                           ushort min_index,
                           ushort max_index );

   /**
    * Notify the renderer of the current primitive when it changes.
    * Must succeed for TRIANGLES, LINES and POINTS.  Other prims at
    * the discretion of the driver, for the benefit of the passthrough
    * path.
    */
   void (*set_primitive)( struct vbuf_render *, unsigned prim );

   /**
    * Draw indexed primitives.  Note that indices are ushort.  The driver
    * must complete this call, if necessary splitting the index list itself.
    */
   void (*draw_elements)( struct vbuf_render *,
                          const ushort *indices,
                          uint nr_indices );

   /* Draw non-indexed primitives.
    */
   void (*draw_arrays)( struct vbuf_render *,
			unsigned start,
			uint nr );

   /**
    * Called when vbuf is done with this set of vertices:
    */
   void (*release_vertices)( struct vbuf_render * );

   void (*destroy)( struct vbuf_render * );


   /**
    * Called after writing data to the stream out buffers
    */
   void (*set_stream_output_info)( struct vbuf_render *vbufr,
                                   unsigned primitive_count,
                                   unsigned primitive_generated );

   /**
    * Called after all relevant statistics have been accumulated.
    */
   void (*pipeline_statistics)(
      struct vbuf_render *vbufr,
      const struct pipe_query_data_pipeline_statistics *stats );
};



struct draw_stage *
draw_vbuf_stage( struct draw_context *draw,
                 struct vbuf_render *render );


#endif /*DRAW_VBUF_H_*/
@


1.4
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.3
log
@Merge Mesa 9.2.0
@
text
@d3 1
a3 1
 * Copyright 2007 Tungsten Graphics, Inc., Cedar Park, Texas.
d21 1
a21 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
d32 2
a33 2
 * \author Keith Whitwell <keith@@tungstengraphics.com>
 * \author Jose Fonseca <jrfonsec@@tungstengraphics.com>
a127 1
                                   unsigned vertices_count,
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d46 1
d99 1
a99 1
   boolean (*set_primitive)( struct vbuf_render *, unsigned prim );
d128 9
a136 1
                                   unsigned vertices_count );
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d101 2
a102 2
    * DrawElements, note indices are ushort.  The driver must complete
    * this call, if necessary splitting the index list itself.
d104 3
a106 3
   void (*draw)( struct vbuf_render *,
		 const ushort *indices,
		 uint nr_indices );
d108 1
a108 1
   /* Draw Arrays path too.
d120 8
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d101 2
a102 2
    * Draw indexed primitives.  Note that indices are ushort.  The driver
    * must complete this call, if necessary splitting the index list itself.
d104 3
a106 3
   void (*draw_elements)( struct vbuf_render *,
                          const ushort *indices,
                          uint nr_indices );
d108 1
a108 1
   /* Draw non-indexed primitives.
a119 8


   /**
    * Called after writing data to the stream out buffers
    */
   void (*set_stream_output_info)( struct vbuf_render *vbufr,
                                   unsigned primitive_count,
                                   unsigned vertices_count );
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@a45 1
struct pipe_query_data_pipeline_statistics;
d98 1
a98 1
   void (*set_primitive)( struct vbuf_render *, unsigned prim );
d127 1
a127 9
                                   unsigned vertices_count,
                                   unsigned primitive_generated );

   /**
    * Called after all relevant statistics have been accumulated.
    */
   void (*pipeline_statistics)(
      struct vbuf_render *vbufr,
      const struct pipe_query_data_pipeline_statistics *stats );
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d3 1
a3 1
 * Copyright 2007 VMware, Inc.
d21 1
a21 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
d32 2
a33 2
 * \author Keith Whitwell <keithw@@vmware.com>
 * \author Jose Fonseca <jfonseca@@vmware.com>
d128 1
@


