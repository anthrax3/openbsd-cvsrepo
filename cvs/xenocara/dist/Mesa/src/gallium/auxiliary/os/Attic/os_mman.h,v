head	1.2;
access;
symbols
	OPENBSD_5_8:1.1.1.3.0.4
	OPENBSD_5_8_BASE:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.2
	OPENBSD_5_7_BASE:1.1.1.3
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.4
	OPENBSD_5_6_BASE:1.1.1.1
	v10_2_3:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.2
	OPENBSD_5_5_BASE:1.1.1.1
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.2
date	2015.12.23.05.17.27;	author jsg;	state dead;
branches;
next	1.1;
commitid	TnlogFl9nOv2eaRf;

1.1
date	2013.09.05.13.10.18;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.09.05.13.10.18;	author jsg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2015.01.25.14.06.24;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.3
date	2015.02.20.22.43.32;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.2
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 *
 * Copyright 2011 LunarG, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

/**
 * @@file
 * OS independent memory mapping (with large file support).
 *
 * @@author Chia-I Wu <olvaffe@@gmail.com>
 */

#ifndef _OS_MMAN_H_
#define _OS_MMAN_H_


#include "pipe/p_config.h"
#include "pipe/p_compiler.h"

#if defined(PIPE_OS_UNIX)
#  ifndef _FILE_OFFSET_BITS
#    error _FILE_OFFSET_BITS must be defined to 64
#  endif
#  include <sys/mman.h>
#else
#  error Unsupported OS
#endif

#if defined(PIPE_OS_ANDROID)
#  include <errno.h> /* for EINVAL */
#endif

#ifdef  __cplusplus
extern "C" {
#endif


#if defined(PIPE_OS_ANDROID)

extern void *__mmap2(void *, size_t, int, int, int, size_t);

static INLINE void *os_mmap(void *addr, size_t length, int prot, int flags, int fd, loff_t offset)
{
   /* offset must be aligned to 4096 (not necessarily the page size) */
   if (unlikely(offset & 4095)) {
      errno = EINVAL;
      return MAP_FAILED;
   }

   return __mmap2(addr, length, prot, flags, fd, (size_t) (offset >> 12));
}

#else
/* assume large file support exists */
#  define os_mmap(addr, length, prot, flags, fd, offset) mmap(addr, length, prot, flags, fd, offset)
#endif

#define os_munmap(addr, length) munmap(addr, length)


#ifdef	__cplusplus
}
#endif

#endif /* _OS_MMAN_H_ */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import Mesa 9.2.0
@
text
@@


1.1.1.2
log
@Import Mesa 10.4.3
@
text
@d43 3
d64 1
a64 2
static INLINE void *os_mmap(void *addr, size_t length, int prot, int flags,
                            int fd, loff_t offset)
a74 3
#  define drm_munmap(addr, length) \
              munmap(addr, length)

d77 2
a78 11
#  define os_mmap(addr, length, prot, flags, fd, offset) \
             mmap(addr, length, prot, flags, fd, offset)

static INLINE int os_munmap(void *addr, size_t length)
{
   /* Copied from configure code generated by AC_SYS_LARGEFILE */
#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + \
                     (((off_t) 1 << 31) << 31))
   STATIC_ASSERT(LARGE_OFF_T % 2147483629 == 721 &&
                 LARGE_OFF_T % 2147483647 == 1);
#undef LARGE_OFF_T
d80 1
a80 3
   return munmap(addr, length);
}
#endif
@


1.1.1.3
log
@Import Mesa 10.2.9
@
text
@a42 3
#  ifndef _FILE_OFFSET_BITS
#    error _FILE_OFFSET_BITS must be defined to 64
#  endif
d61 2
a62 1
static INLINE void *os_mmap(void *addr, size_t length, int prot, int flags, int fd, loff_t offset)
d73 3
d78 14
a91 1
#  define os_mmap(addr, length, prot, flags, fd, offset) mmap(addr, length, prot, flags, fd, offset)
a92 2

#define os_munmap(addr, length) munmap(addr, length)
@


