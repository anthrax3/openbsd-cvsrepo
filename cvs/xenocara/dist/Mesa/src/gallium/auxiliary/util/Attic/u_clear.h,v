head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.28;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2014.07.09.21.08.52;	author jsg;	state Exp;
branches;
next	1.3;
commitid	WPD6rgPryPkvXOr9;

1.3
date	2013.09.05.13.59.47;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.32;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.04;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.25;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.10.45;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.33.47;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 * 
 * Copyright 2009 VMware, Inc.  All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/

/* Authors:
 *    Michel DÃ¤nzer
 */


#include "pipe/p_context.h"
#include "pipe/p_state.h"


/**
 * Clear the given buffers to the specified values.
 * No masking, no scissor (clear entire buffer).
 */
static INLINE void
util_clear(struct pipe_context *pipe,
           struct pipe_framebuffer_state *framebuffer, unsigned buffers,
           const union pipe_color_union *color, double depth, unsigned stencil)
{
   unsigned i;

   for (i = 0; i < framebuffer->nr_cbufs; i++) {
      if (buffers & (PIPE_CLEAR_COLOR0 << i)) {
         struct pipe_surface *ps = framebuffer->cbufs[i];

         if (ps) {
            pipe->clear_render_target(pipe, ps, color, 0, 0, ps->width, ps->height);
         }
      }
   }

   if (buffers & PIPE_CLEAR_DEPTHSTENCIL) {
      struct pipe_surface *ps = framebuffer->zsbuf;
      pipe->clear_depth_stencil(pipe, ps, buffers & PIPE_CLEAR_DEPTHSTENCIL,
                                depth, stencil,
                                0, 0, ps->width, ps->height);
   }
}
@


1.4
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.3
log
@Merge Mesa 9.2.0
@
text
@d20 1
a20 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
d45 4
a48 3
   if (buffers & PIPE_CLEAR_COLOR) {
      unsigned i;
      for (i = 0; i < framebuffer->nr_cbufs; i++) {
d50 4
a53 1
         pipe->clear_render_target(pipe, ps, color, 0, 0, ps->width, ps->height);
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d43 1
a43 1
           const float *rgba, double depth, unsigned stencil)
d49 1
a49 1
         pipe->clear_render_target(pipe, ps, rgba, 0, 0, ps->width, ps->height);
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@a33 2
#include "util/u_pack_color.h"
#include "util/u_rect.h"
d46 4
a49 8
      struct pipe_surface *ps = framebuffer->cbufs[0];
      union util_color uc;

      util_pack_color(rgba, ps->format, &uc);
      if (pipe->surface_fill) {
         pipe->surface_fill(pipe, ps, 0, 0, ps->width, ps->height, uc.ui);
      } else {
         util_surface_fill(pipe, ps, 0, 0, ps->width, ps->height, uc.ui);
d55 3
a57 8

      if (pipe->surface_fill) {
         pipe->surface_fill(pipe, ps, 0, 0, ps->width, ps->height,
                            util_pack_z_stencil(ps->format, depth, stencil));
      } else {
         util_surface_fill(pipe, ps, 0, 0, ps->width, ps->height,
                           util_pack_z_stencil(ps->format, depth, stencil));
      }
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d34 2
d48 8
a55 4
      unsigned i;
      for (i = 0; i < framebuffer->nr_cbufs; i++) {
         struct pipe_surface *ps = framebuffer->cbufs[i];
         pipe->clear_render_target(pipe, ps, rgba, 0, 0, ps->width, ps->height);
d61 8
a68 3
      pipe->clear_depth_stencil(pipe, ps, buffers & PIPE_CLEAR_DEPTHSTENCIL,
                                depth, stencil,
                                0, 0, ps->width, ps->height);
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d43 1
a43 1
           const union pipe_color_union *color, double depth, unsigned stencil)
d49 1
a49 1
         pipe->clear_render_target(pipe, ps, color, 0, 0, ps->width, ps->height);
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d20 1
a20 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
d45 3
a47 4
   unsigned i;

   for (i = 0; i < framebuffer->nr_cbufs; i++) {
      if (buffers & (PIPE_CLEAR_COLOR0 << i)) {
d49 1
a49 4

         if (ps) {
            pipe->clear_render_target(pipe, ps, color, 0, 0, ps->width, ps->height);
         }
@


