head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.12.23.05.17.28;	author jsg;	state dead;
branches;
next	1.5;
commitid	TnlogFl9nOv2eaRf;

1.5
date	2014.07.09.21.08.52;	author jsg;	state Exp;
branches;
next	1.4;
commitid	WPD6rgPryPkvXOr9;

1.4
date	2013.09.05.13.59.52;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.04;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.32;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.05;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.26;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.10.55;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.33.48;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.6
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 * 
 * Copyright 2007 VMware, Inc.
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/

#ifndef P_TILE_H
#define P_TILE_H

#include "pipe/p_compiler.h"
#include "pipe/p_format.h"
#include "pipe/p_state.h"

struct pipe_context;
struct pipe_transfer;

/**
 * Clip tile against transfer dims.
 *
 * XXX: this only clips width and height!
 *
 * \return TRUE if tile is totally clipped, FALSE otherwise
 */
static INLINE boolean
u_clip_tile(uint x, uint y, uint *w, uint *h, const struct pipe_box *box)
{
   if ((int) x >= box->width)
      return TRUE;
   if ((int) y >= box->height)
      return TRUE;
   if ((int) (x + *w) > box->width)
      *w = box->width - x;
   if ((int) (y + *h) > box->height)
      *h = box->height - y;
   return FALSE;
}

#ifdef __cplusplus
extern "C" {
#endif

void
pipe_get_tile_raw(struct pipe_transfer *pt,
                  const void *src,
                  uint x, uint y, uint w, uint h,
                  void *p, int dst_stride);

void
pipe_put_tile_raw(struct pipe_transfer *pt,
                  void *dst,
                  uint x, uint y, uint w, uint h,
                  const void *p, int src_stride);


void
pipe_get_tile_rgba(struct pipe_transfer *pt,
                   const void *src,
                   uint x, uint y, uint w, uint h,
                   float *p);

void
pipe_get_tile_rgba_format(struct pipe_transfer *pt,
                          const void *src,
                          uint x, uint y, uint w, uint h,
                          enum pipe_format format,
                          float *p);

void
pipe_put_tile_rgba(struct pipe_transfer *pt,
                   void *dst,
                   uint x, uint y, uint w, uint h,
                   const float *p);

void
pipe_put_tile_rgba_format(struct pipe_transfer *pt,
                          void *dst,
                          uint x, uint y, uint w, uint h,
                          enum pipe_format format,
                          const float *p);


void
pipe_get_tile_z(struct pipe_transfer *pt,
                const void *src,
                uint x, uint y, uint w, uint h,
                uint *z);

void
pipe_put_tile_z(struct pipe_transfer *pt,
                void *dst,
                uint x, uint y, uint w, uint h,
                const uint *z);

void
pipe_tile_raw_to_rgba(enum pipe_format format,
                      const void *src,
                      uint w, uint h,
                      float *dst, unsigned dst_stride);

void
pipe_tile_raw_to_unsigned(enum pipe_format format,
                          const void *src,
                          uint w, uint h,
                          unsigned *dst, unsigned dst_stride);

void
pipe_tile_raw_to_signed(enum pipe_format format,
                        void *src,
                        uint w, uint h,
                        int *dst, unsigned dst_stride);

void
pipe_get_tile_ui_format(struct pipe_transfer *pt,
                        const void *src,
                        uint x, uint y, uint w, uint h,
                        enum pipe_format format,
                        unsigned int *p);

void
pipe_get_tile_i_format(struct pipe_transfer *pt,
                       const void *src,
                       uint x, uint y, uint w, uint h,
                       enum pipe_format format,
                       int *p);

void
pipe_put_tile_ui_format(struct pipe_transfer *pt,
                        void *dst,
                        uint x, uint y, uint w, uint h,
                        enum pipe_format format,
                        const unsigned *p);

void
pipe_put_tile_i_format(struct pipe_transfer *pt,
                       void *dst,
                       uint x, uint y, uint w, uint h,
                       enum pipe_format format,
                       const int *p);

#ifdef __cplusplus
}
#endif

#endif
@


1.5
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.4
log
@Merge Mesa 9.2.0
@
text
@d3 1
a3 1
 * Copyright 2007 Tungsten Graphics, Inc., Cedar Park, Texas.
d21 1
a21 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d48 1
a48 1
   if (x >= box->width)
d50 1
a50 1
   if (y >= box->height)
d52 1
a52 1
   if (x + *w > box->width)
d54 1
a54 1
   if (y + *h > box->height)
d64 2
a65 2
pipe_get_tile_raw(struct pipe_context *pipe,
                  struct pipe_transfer *pt,
d70 2
a71 2
pipe_put_tile_raw(struct pipe_context *pipe,
                  struct pipe_transfer *pt,
d77 2
a78 2
pipe_get_tile_rgba(struct pipe_context *pipe,
                   struct pipe_transfer *pt,
d83 2
a84 2
pipe_get_tile_rgba_format(struct pipe_context *pipe,
                          struct pipe_transfer *pt,
d90 2
a91 2
pipe_put_tile_rgba(struct pipe_context *pipe,
                   struct pipe_transfer *pt,
d96 2
a97 2
pipe_put_tile_rgba_format(struct pipe_context *pipe,
                          struct pipe_transfer *pt,
d104 2
a105 2
pipe_get_tile_z(struct pipe_context *pipe,
                struct pipe_transfer *pt,
d110 2
a111 2
pipe_put_tile_z(struct pipe_context *pipe,
                struct pipe_transfer *pt,
d117 1
a117 1
                      void *src,
d121 39
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d83 5
a87 12
pipe_get_tile_swizzle(struct pipe_context *pipe,
		      struct pipe_transfer *pt,
                      uint x,
                      uint y,
                      uint w,
                      uint h,
                      uint swizzle_r,
                      uint swizzle_g,
                      uint swizzle_b,
                      uint swizzle_a,
                      enum pipe_format format,
                      float *p);
d94 7
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d32 2
d35 1
a37 1

d40 3
d46 1
a46 1
pipe_clip_tile(uint x, uint y, uint *w, uint *h, const struct pipe_transfer *pt)
d48 1
a48 1
   if (x >= pt->width)
d50 1
a50 1
   if (y >= pt->height)
d52 4
a55 4
   if (x + *w > pt->width)
      *w = pt->width - x;
   if (y + *h > pt->height)
      *h = pt->height - y;
d64 2
a65 1
pipe_get_tile_raw(struct pipe_transfer *pt,
d70 2
a71 1
pipe_put_tile_raw(struct pipe_transfer *pt,
d77 2
a78 1
pipe_get_tile_rgba(struct pipe_transfer *pt,
d83 16
a98 1
pipe_put_tile_rgba(struct pipe_transfer *pt,
d104 2
a105 1
pipe_get_tile_z(struct pipe_transfer *pt,
d110 2
a111 1
pipe_put_tile_z(struct pipe_transfer *pt,
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a31 2
#include "pipe/p_format.h"
#include "pipe/p_state.h"
a32 1
struct pipe_context;
d35 1
a37 3
 *
 * XXX: this only clips width and height!
 *
d41 1
a41 1
u_clip_tile(uint x, uint y, uint *w, uint *h, const struct pipe_box *box)
d43 1
a43 1
   if (x >= box->width)
d45 1
a45 1
   if (y >= box->height)
d47 4
a50 4
   if (x + *w > box->width)
      *w = box->width - x;
   if (y + *h > box->height)
      *h = box->height - y;
d59 1
a59 2
pipe_get_tile_raw(struct pipe_context *pipe,
                  struct pipe_transfer *pt,
d64 1
a64 2
pipe_put_tile_raw(struct pipe_context *pipe,
                  struct pipe_transfer *pt,
d70 1
a70 2
pipe_get_tile_rgba(struct pipe_context *pipe,
                   struct pipe_transfer *pt,
d75 1
a75 16
pipe_get_tile_swizzle(struct pipe_context *pipe,
		      struct pipe_transfer *pt,
                      uint x,
                      uint y,
                      uint w,
                      uint h,
                      uint swizzle_r,
                      uint swizzle_g,
                      uint swizzle_b,
                      uint swizzle_a,
                      enum pipe_format format,
                      float *p);

void
pipe_put_tile_rgba(struct pipe_context *pipe,
                   struct pipe_transfer *pt,
d81 1
a81 2
pipe_get_tile_z(struct pipe_context *pipe,
                struct pipe_transfer *pt,
d86 1
a86 2
pipe_put_tile_z(struct pipe_context *pipe,
                struct pipe_transfer *pt,
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d48 1
a48 1
   if ((int) x >= box->width)
d50 1
a50 1
   if ((int) y >= box->height)
d52 1
a52 1
   if ((int) (x + *w) > box->width)
d54 1
a54 1
   if ((int) (y + *h) > box->height)
d64 2
a65 2
pipe_get_tile_raw(struct pipe_transfer *pt,
                  const void *src,
d70 2
a71 2
pipe_put_tile_raw(struct pipe_transfer *pt,
                  void *dst,
d77 2
a78 2
pipe_get_tile_rgba(struct pipe_transfer *pt,
                   const void *src,
d83 12
a94 5
pipe_get_tile_rgba_format(struct pipe_transfer *pt,
                          const void *src,
                          uint x, uint y, uint w, uint h,
                          enum pipe_format format,
                          float *p);
d97 2
a98 2
pipe_put_tile_rgba(struct pipe_transfer *pt,
                   void *dst,
a101 7
void
pipe_put_tile_rgba_format(struct pipe_transfer *pt,
                          void *dst,
                          uint x, uint y, uint w, uint h,
                          enum pipe_format format,
                          const float *p);

d104 2
a105 2
pipe_get_tile_z(struct pipe_transfer *pt,
                const void *src,
d110 2
a111 2
pipe_put_tile_z(struct pipe_transfer *pt,
                void *dst,
d117 1
a117 1
                      const void *src,
a120 39
void
pipe_tile_raw_to_unsigned(enum pipe_format format,
                          const void *src,
                          uint w, uint h,
                          unsigned *dst, unsigned dst_stride);

void
pipe_tile_raw_to_signed(enum pipe_format format,
                        void *src,
                        uint w, uint h,
                        int *dst, unsigned dst_stride);

void
pipe_get_tile_ui_format(struct pipe_transfer *pt,
                        const void *src,
                        uint x, uint y, uint w, uint h,
                        enum pipe_format format,
                        unsigned int *p);

void
pipe_get_tile_i_format(struct pipe_transfer *pt,
                       const void *src,
                       uint x, uint y, uint w, uint h,
                       enum pipe_format format,
                       int *p);

void
pipe_put_tile_ui_format(struct pipe_transfer *pt,
                        void *dst,
                        uint x, uint y, uint w, uint h,
                        enum pipe_format format,
                        const unsigned *p);

void
pipe_put_tile_i_format(struct pipe_transfer *pt,
                       void *dst,
                       uint x, uint y, uint w, uint h,
                       enum pipe_format format,
                       const int *p);
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d3 1
a3 1
 * Copyright 2007 VMware, Inc.
d21 1
a21 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
@


