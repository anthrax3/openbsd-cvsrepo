head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.27;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2014.07.09.21.08.52;	author jsg;	state Exp;
branches;
next	1.3;
commitid	WPD6rgPryPkvXOr9;

1.3
date	2013.09.05.13.59.42;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.32;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.04;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.25;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.10.32;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.33.45;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 *
 * Copyright 2008 VMware, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

#include "pipe/p_config.h"
#include "rtasm_cpu.h"

#if defined(PIPE_ARCH_X86) || defined(PIPE_ARCH_X86_64)

#include "util/u_debug.h"
#include "util/u_cpu_detect.h"

DEBUG_GET_ONCE_BOOL_OPTION(nosse, "GALLIUM_NOSSE", FALSE);

static struct util_cpu_caps *get_cpu_caps(void)
{
   util_cpu_detect();
   return &util_cpu_caps;
}

int rtasm_cpu_has_sse(void)
{
   return !debug_get_option_nosse() && get_cpu_caps()->has_sse;
}

int rtasm_cpu_has_sse2(void) 
{
   return !debug_get_option_nosse() && get_cpu_caps()->has_sse2;
}


#else

int rtasm_cpu_has_sse(void)
{
   return 0;
}

int rtasm_cpu_has_sse2(void)
{
   return 0;
}

#endif
@


1.4
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.3
log
@Merge Mesa 9.2.0
@
text
@d3 1
a3 1
 * Copyright 2008 Tungsten Graphics, Inc., Cedar Park, Texas.
d21 1
a21 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d28 4
d34 1
a34 1
#include "rtasm_cpu.h"
d36 1
d38 1
a38 2
#if defined(PIPE_ARCH_X86) || defined(PIPE_ARCH_X86_64)
static boolean rtasm_sse_enabled(void)
d40 2
a41 10
   static boolean firsttime = 1;
   static boolean enabled;
   
   /* This gets called quite often at the moment:
    */
   if (firsttime) {
      enabled =  !debug_get_bool_option("GALLIUM_NOSSE", FALSE);
      firsttime = FALSE;
   }
   return enabled;
a42 1
#endif
d46 9
a54 3
   /* FIXME: actually detect this at run-time */
#if defined(PIPE_ARCH_X86) || defined(PIPE_ARCH_X86_64)
   return rtasm_sse_enabled();
d56 3
a59 1
#endif
d62 1
a62 1
int rtasm_cpu_has_sse2(void) 
a63 4
   /* FIXME: actually detect this at run-time */
#if defined(PIPE_ARCH_X86) || defined(PIPE_ARCH_X86_64)
   return rtasm_sse_enabled();
#else
d65 2
a67 1
}
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d33 1
a33 1
#if defined(PIPE_ARCH_X86)
d52 1
a52 1
#if defined(PIPE_ARCH_X86)
d62 1
a62 1
#if defined(PIPE_ARCH_X86)
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d33 1
a33 1
#if defined(PIPE_ARCH_X86) || defined(PIPE_ARCH_X86_64)
d52 1
a52 1
#if defined(PIPE_ARCH_X86) || defined(PIPE_ARCH_X86_64)
d62 1
a62 1
#if defined(PIPE_ARCH_X86) || defined(PIPE_ARCH_X86_64)
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@a27 4
#include "pipe/p_config.h"
#include "rtasm_cpu.h"

#if defined(PIPE_ARCH_X86) || defined(PIPE_ARCH_X86_64)
d30 1
a30 1
#include "util/u_cpu_detect.h"
a31 1
DEBUG_GET_ONCE_BOOL_OPTION(nosse, "GALLIUM_NOSSE", FALSE);
d33 2
a34 1
static struct util_cpu_caps *get_cpu_caps(void)
d36 10
a45 2
   util_cpu_detect();
   return &util_cpu_caps;
d47 1
d51 6
a56 1
   return !debug_get_option_nosse() && get_cpu_caps()->has_sse;
d61 3
a63 4
   return !debug_get_option_nosse() && get_cpu_caps()->has_sse2;
}


a64 3

int rtasm_cpu_has_sse(void)
{
d66 1
a67 7

int rtasm_cpu_has_sse2(void)
{
   return 0;
}

#endif
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d3 1
a3 1
 * Copyright 2008 VMware, Inc.
d21 1
a21 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
@


