head	1.2;
access;
symbols
	v10_4_3:1.1.1.1 mesa:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.02.20.23.09.54;	author jsg;	state dead;
branches;
next	1.1;
commitid	4ry2gvZGMXkCUD2n;

1.1
date	2015.01.25.14.09.43;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.1
date	2015.01.25.14.09.43;	author jsg;	state Exp;
branches;
next	;
commitid	ce2W5rH5aF7VS9gi;


desc
@@


1.2
log
@Merge Mesa 10.2.9
@
text
@Import('*')

env = drienv.Clone()

if env['suncc']:
    print 'warning: not building dri-vmwgfx'
    Return()

env.Append(CPPPATH = [
    '#/src/loader',
    '#/src/mapi',
    '#/src/mesa',
    '#/src/mesa/drivers/dri/common',
    '#/src/gallium/state_trackers/dri',
])

if env['build'] == 'release':
    env.Append(CPPDEFINES = ['GALLIUM_RBUG'])
    env.Prepend(LIBS = [rbug])
else:
    env.Append(CPPDEFINES = ['GALLIUM_TRACE', 'GALLIUM_RBUG', 'GALLIUM_GALAHAD'])
    env.Prepend(LIBS = [trace, rbug, galahad])

if env['llvm']:
    env.Append(CPPDEFINES = 'GALLIUM_LLVMPIPE')
    env.Prepend(LIBS = [llvmpipe])

env.Append(CPPDEFINES = [
    'GALLIUM_VMWGFX',
    'GALLIUM_SOFTPIPE',
    'DRI_TARGET',
    'HAVE_LIBDRM',
])

env.Prepend(LIBS = [
    st_dri,
    svgadrm,
    svga,
    ws_dri,
    ws_kms_dri,
    softpipe,
    libloader,
    mesautil,
    mesa,
    glsl,
    gallium,
    megadrivers_stub,
    dri_common,
])

module = env.LoadableModule(
    target = 'gallium_dri.so',
    source = 'target.c',
    SHLIBPREFIX = '',
)

# vmwgfx_dri.so
env.Command('vmwgfx_dri.so', 'gallium_dri.so', "ln -f ${SOURCE} ${TARGET}")
# swrast_dri.so
env.Command('swrast_dri.so', 'gallium_dri.so', "ln -f ${SOURCE} ${TARGET}")
# kms_swrast_dri.so
env.Command('kms_swrast_dri.so', 'gallium_dri.so', "ln -f ${SOURCE} ${TARGET}")

env.Alias('dri-vmwgfx', module)
env.Alias('dri-swrast', module)
env.Alias('dri-kms-swrast', module)
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import Mesa 10.4.3
@
text
@@
