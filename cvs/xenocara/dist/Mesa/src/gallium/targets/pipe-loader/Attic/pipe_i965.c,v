head	1.2;
access;
symbols
	v10_4_3:1.1.1.1 mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2015.02.20.23.09.55;	author jsg;	state dead;
branches;
next	1.1;
commitid	4ry2gvZGMXkCUD2n;

1.1
date	2015.01.25.14.09.46;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.1
date	2015.01.25.14.09.46;	author jsg;	state Exp;
branches;
next	;
commitid	ce2W5rH5aF7VS9gi;


desc
@@


1.2
log
@Merge Mesa 10.2.9
@
text
@#include "target-helpers/inline_debug_helper.h"
#include "state_tracker/drm_driver.h"
#include "intel/drm/intel_drm_public.h"
#include "ilo/ilo_public.h"

static struct pipe_screen *
create_screen(int fd)
{
   struct intel_winsys *iws;
   struct pipe_screen *screen;

   iws = intel_winsys_create_for_fd(fd);
   if (!iws)
      return NULL;

   screen = ilo_screen_create(iws);
   if (!screen)
      return NULL;

   screen = debug_screen_wrap(screen);

   return screen;
}
static const struct drm_conf_ret throttle_ret = {
   .type = DRM_CONF_INT,
   .val.val_int = 2,
};

static const struct drm_conf_ret share_fd_ret = {
   .type = DRM_CONF_BOOL,
   .val.val_int = true,
};

static const struct drm_conf_ret *drm_configuration(enum drm_conf conf)
{
   switch (conf) {
   case DRM_CONF_THROTTLE:
      return &throttle_ret;
   case DRM_CONF_SHARE_FD:
      return &share_fd_ret;
   default:
      break;
   }
   return NULL;
}
PUBLIC
DRM_DRIVER_DESCRIPTOR("i965", "i915", create_screen, drm_configuration)
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import Mesa 10.4.3
@
text
@@
