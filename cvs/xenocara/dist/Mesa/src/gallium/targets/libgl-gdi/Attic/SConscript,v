head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	v10_2_9:1.1.1.4
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2015.12.23.05.17.39;	author jsg;	state dead;
branches;
next	1.5;
commitid	TnlogFl9nOv2eaRf;

1.5
date	2015.02.20.23.09.55;	author jsg;	state Exp;
branches;
next	1.4;
commitid	4ry2gvZGMXkCUD2n;

1.4
date	2015.01.25.14.41.18;	author jsg;	state Exp;
branches;
next	1.3;
commitid	mcxB0JvoI9gTDYXU;

1.3
date	2013.09.05.14.02.01;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.17.13.58.08;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.23.13.29.30;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.30;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.13.48;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2015.01.25.14.09.48;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.4
date	2015.02.20.22.46.55;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.6
log
@remove the now unused Mesa 10.2.9 code
@
text
@#######################################################################
# SConscript for gdi winsys

Import('*')

env = env.Clone()

env.Append(CPPPATH = [
    '#src/gallium/state_trackers/wgl',
    '#src/gallium/winsys/sw',
])

env.Append(LIBS = [
    'gdi32',
    'user32',
    'kernel32',
    'ws2_32',
])

sources = ['libgl_gdi.c']
drivers = []

if True:
    drivers += [softpipe]

if env['llvm']:
    env.Append(CPPDEFINES = 'HAVE_LLVMPIPE')
    drivers += [llvmpipe]

if env['gcc'] and env['machine'] != 'x86_64':
    # DEF parser in certain versions of MinGW is busted, as does not behave as
    # MSVC.  mingw-w64 works fine.
    sources += ['#src/gallium/state_trackers/wgl/opengl32.mingw.def']
else:
    sources += ['#src/gallium/state_trackers/wgl/opengl32.def']
    
drivers += [trace, rbug]

env['no_import_lib'] = 1

# when GLES is enabled, gl* and _glapi_* belong to bridge_glapi and
# shared_glapi respectively
if env['gles']:
    env.Prepend(LIBPATH = [shared_glapi.dir])
    glapi = [bridge_glapi, 'libglapi']

opengl32 = env.SharedLibrary(
    target ='opengl32',
    source = sources,
    LIBS = wgl + ws_gdi + glapi + mesa + drivers + gallium + glsl + env['LIBS'],
)

env.Alias('opengl32', opengl32)
env.Alias('libgl-gdi', opengl32)
@


1.5
log
@Merge Mesa 10.2.9
@
text
@@


1.4
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@a8 1
    '#src',
a18 2

env.Prepend(LIBS = [mesautil])
@


1.3
log
@Merge Mesa 9.2.0
@
text
@d9 1
d20 2
@


1.2
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d30 3
a32 1
if env['gcc']:
@


1.1
log
@Initial revision
@
text
@d39 6
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d30 1
a30 3
if env['gcc'] and env['machine'] != 'x86_64':
    # DEF parser in certain versions of MinGW is busted, as does not behave as
    # MSVC.  mingw-w64 works fine.
a37 6

# when GLES is enabled, gl* and _glapi_* belong to bridge_glapi and
# shared_glapi respectively
if env['gles']:
    env.Prepend(LIBPATH = [shared_glapi.dir])
    glapi = [bridge_glapi, 'libglapi']
@


1.1.1.3
log
@Import Mesa 10.4.3
@
text
@a8 1
    '#src',
a18 2

env.Prepend(LIBS = [mesautil])
@


1.1.1.4
log
@Import Mesa 10.2.9
@
text
@d9 1
d20 2
@


