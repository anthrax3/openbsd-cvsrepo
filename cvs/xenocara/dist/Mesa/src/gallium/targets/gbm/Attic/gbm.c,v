head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	v10_2_9:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.12.23.05.17.39;	author jsg;	state dead;
branches;
next	1.5;
commitid	TnlogFl9nOv2eaRf;

1.5
date	2015.02.20.23.09.55;	author jsg;	state Exp;
branches;
next	1.4;
commitid	4ry2gvZGMXkCUD2n;

1.4
date	2015.01.25.14.41.18;	author jsg;	state dead;
branches;
next	1.3;
commitid	mcxB0JvoI9gTDYXU;

1.3
date	2014.07.09.21.08.56;	author jsg;	state Exp;
branches;
next	1.2;
commitid	WPD6rgPryPkvXOr9;

1.2
date	2013.09.05.14.01.59;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.17.13.58.08;	author mpi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.09.05.13.13.40;	author jsg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.07.09.20.34.22;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.6
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright Â© 2011 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Authors:
 *    Benjamin Franzke <benjaminfranzke@@googlemail.com>
 */

#include "gbm_gallium_drmint.h"

#include "util/u_memory.h"
#include "util/u_inlines.h"
#include "pipe-loader/pipe_loader.h"

static const char *
get_library_search_path(void)
{
   const char *search_path = NULL;

   /* don't allow setuid apps to use GBM_BACKENDS_PATH */
   if (geteuid() == getuid())
      search_path = getenv("GBM_BACKENDS_PATH");
   if (search_path == NULL)
      search_path = PIPE_SEARCH_DIR;

   return search_path;
}

int
gallium_screen_create(struct gbm_gallium_drm_device *gdrm)
{
   struct pipe_loader_device *dev;
   int ret = 0;

#ifdef HAVE_PIPE_LOADER_DRM
   ret = pipe_loader_drm_probe_fd(&dev, gdrm->base.base.fd, true);
#endif /* HAVE_PIPE_LOADER_DRM */

   if (!ret)
      return -1;

   gdrm->screen = pipe_loader_create_screen(dev, get_library_search_path());
   if (gdrm->screen == NULL) {
      debug_printf("failed to load driver: %s\n", gdrm->base.driver_name);
      pipe_loader_release(&dev, 1);
      return -1;
   };

   gdrm->driver = dev;
   gdrm->base.driver_name = strdup(dev->driver_name);
   return 0;
}

void
gallium_screen_destroy(struct gbm_gallium_drm_device *gdrm)
{
   FREE(gdrm->base.driver_name);
   gdrm->screen->destroy(gdrm->screen);
   pipe_loader_release((struct pipe_loader_device **)&gdrm->driver, 1);
}

GBM_EXPORT struct gbm_backend gbm_backend = {
   .backend_name = "gallium_drm",
   .create_device = gbm_gallium_drm_device_create,
};
@


1.5
log
@Merge Mesa 10.2.9
@
text
@@


1.4
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@@


1.3
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.2
log
@Merge Mesa 9.2.0
@
text
@d52 2
d55 2
a56 1
   int ret;
a57 1
   ret = pipe_loader_drm_probe_fd(&dev, gdrm->base.base.fd);
a59 1
#endif /* HAVE_PIPE_LOADER_DRM */
@


1.1
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d28 3
d32 1
d34 10
a43 2
#include "gbm_gallium_drmint.h"
#include "pipe_loader.h"
d45 1
a45 7
static struct pipe_screen *
create_drm_screen(const char *name, int fd)
{
   struct pipe_module *pmod = get_pipe_module(name);
 
   return (pmod && pmod->drmdd && pmod->drmdd->create_screen) ?
      pmod->drmdd->create_screen(fd) : NULL;
d51 6
a56 2
   gdrm->base.driver_name = drm_fd_get_screen_name(gdrm->base.base.fd);
   if (gdrm->base.driver_name == NULL)
d58 1
d60 1
a60 1
   gdrm->screen = create_drm_screen(gdrm->base.driver_name, gdrm->base.base.fd);
d63 1
d67 2
d70 8
@


1.1.1.1
log
@Import Mesa 9.2.0
@
text
@d28 2
d31 1
d33 2
a34 6
#include "util/u_memory.h"
#include "util/u_inlines.h"
#include "pipe-loader/pipe_loader.h"

static const char *
get_library_search_path(void)
d36 4
a39 9
   const char *search_path = NULL;

   /* don't allow setuid apps to use GBM_BACKENDS_PATH */
   if (geteuid() == getuid())
      search_path = getenv("GBM_BACKENDS_PATH");
   if (search_path == NULL)
      search_path = PIPE_SEARCH_DIR;

   return search_path;
d45 2
a46 6
   struct pipe_loader_device *dev;
#ifdef HAVE_PIPE_LOADER_DRM
   int ret;

   ret = pipe_loader_drm_probe_fd(&dev, gdrm->base.base.fd);
   if (!ret)
a47 1
#endif /* HAVE_PIPE_LOADER_DRM */
d49 1
a49 1
   gdrm->screen = pipe_loader_create_screen(dev, get_library_search_path());
a51 1
      pipe_loader_release(&dev, 1);
a54 2
   gdrm->driver = dev;
   gdrm->base.driver_name = strdup(dev->driver_name);
a55 8
}

void
gallium_screen_destroy(struct gbm_gallium_drm_device *gdrm)
{
   FREE(gdrm->base.driver_name);
   gdrm->screen->destroy(gdrm->screen);
   pipe_loader_release((struct pipe_loader_device **)&gdrm->driver, 1);
@


1.1.1.2
log
@Import Mesa 10.2.3
@
text
@a51 2
   int ret = 0;

d53 1
a53 2
   ret = pipe_loader_drm_probe_fd(&dev, gdrm->base.base.fd, true);
#endif /* HAVE_PIPE_LOADER_DRM */
d55 1
d58 1
@


