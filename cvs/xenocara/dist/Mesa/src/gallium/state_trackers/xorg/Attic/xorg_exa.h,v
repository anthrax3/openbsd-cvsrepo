head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2014.07.09.21.08.56;	author jsg;	state dead;
branches;
next	1.4;
commitid	WPD6rgPryPkvXOr9;

1.4
date	2013.09.05.14.01.54;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.07;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.36;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.09;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.30;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.13.30;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@#ifndef XORG_EXA_H
#define XORG_EXA_H

#include "xorg_tracker.h"

#include "pipe/p_state.h"

struct cso_context;
struct xorg_shaders;

/* src + mask + dst */
#define MAX_EXA_SAMPLERS 3

struct exa_context
{
   ExaDriverPtr pExa;
   struct pipe_context *pipe;
   struct pipe_screen *scrn;
   struct xorg_renderer *renderer;

   struct pipe_sampler_view *bound_sampler_views[MAX_EXA_SAMPLERS];
   int num_bound_samplers;

   float solid_color[4];
   boolean has_solid_color;

   boolean accel;

   /* float[9] projective matrix bound to pictures */
   struct {
      float    src[9];
      float   mask[9];
      boolean has_src;
      boolean has_mask;
   } transform;

   struct {
      struct exa_pixmap_priv *src;
      struct exa_pixmap_priv *dst;
      PixmapPtr tmp_pix;
   } copy;
};

struct exa_pixmap_priv
{
   int width, height;

   int flags;
   int tex_flags;

   int picture_format;

   struct pipe_resource *tex;
   struct pipe_resource *depth_stencil_tex;

   struct pipe_transfer *map_transfer;
   unsigned map_count;
};

#define XORG_FALLBACK(s, arg...)                              \
do {                                                          \
   if (ms->debug_fallback) {                                  \
      xf86DrvMsg(pScrn->scrnIndex, X_INFO,                    \
                 "%s fallback " s "\n", __FUNCTION__, ##arg); \
   }                                                          \
   return FALSE;                                              \
} while(0)

struct pipe_surface *
xorg_gpu_surface(struct pipe_context *pipe, struct exa_pixmap_priv *priv);

void xorg_exa_flush(struct exa_context *exa,
                    struct pipe_fence_handle **fence);
void xorg_exa_finish(struct exa_context *exa);

#endif
@


1.4
log
@Merge Mesa 9.2.0
@
text
@@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d6 1
a6 1
#include <pipe/p_state.h>
a37 2
      boolean use_surface_copy;

d40 1
a40 4

      struct pipe_surface *dst_surface;

      struct pipe_resource *src_texture;
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d77 1
a77 1
void xorg_exa_flush(struct exa_context *exa, uint pipeFlushFlags,
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d21 1
a21 1
   struct pipe_texture *bound_textures[MAX_EXA_SAMPLERS];
a42 1
      struct pipe_surface *src_surface;
d45 1
a45 1
      struct pipe_texture *src_texture;
d58 2
a59 2
   struct pipe_texture *tex;
   struct pipe_texture *depth_stencil_tex;
d75 1
a75 1
xorg_gpu_surface(struct pipe_screen *scrn, struct exa_pixmap_priv *priv);
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d21 1
a21 1
   struct pipe_sampler_view *bound_sampler_views[MAX_EXA_SAMPLERS];
d43 1
d46 1
a46 1
      struct pipe_resource *src_texture;
d59 2
a60 2
   struct pipe_resource *tex;
   struct pipe_resource *depth_stencil_tex;
d76 1
a76 1
xorg_gpu_surface(struct pipe_context *pipe, struct exa_pixmap_priv *priv);
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d6 1
a6 1
#include "pipe/p_state.h"
d38 2
d42 4
a45 1
      PixmapPtr tmp_pix;
d77 1
a77 1
void xorg_exa_flush(struct exa_context *exa,
@


