head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.12.23.05.17.38;	author jsg;	state dead;
branches;
next	1.3;
commitid	TnlogFl9nOv2eaRf;

1.3
date	2013.09.05.14.01.53;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.36;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.08;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.30;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.13.34;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 *
 * Copyright 2008-2009 Vmware, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

#ifndef STW_WINSYS_H
#define STW_WINSYS_H

#include <windows.h> /* for HDC */

#include "pipe/p_compiler.h"

struct pipe_screen;
struct pipe_context;
struct pipe_resource;

struct stw_shared_surface;

struct stw_winsys
{
   struct pipe_screen *
   (*create_screen)( void );

   /* XXX is it actually possible to have non-zero level/layer ??? */
   /**
    * Present the color buffer to the window associated with the device context.
    */
   void
   (*present)( struct pipe_screen *screen,
               struct pipe_resource *res,
               HDC hDC );

   /**
    * Locally unique identifier (LUID) of the graphics adapter.
    *
    * @@sa GLCBPRESENTBUFFERSDATA::AdapterLuid;
    */
   boolean
   (*get_adapter_luid)( struct pipe_screen *screen,
                        LUID *pAdapterLuid );

   /**
    * Open a shared surface (optional).
    *
    * @@sa GLCBPRESENTBUFFERSDATA::hSharedSurface;
    */
   struct stw_shared_surface *
   (*shared_surface_open)(struct pipe_screen *screen,
                          HANDLE hSharedSurface);

   /**
    * Close a shared surface (optional).
    */
   void
   (*shared_surface_close)(struct pipe_screen *screen,
                           struct stw_shared_surface *surface);

   /**
    * Compose into a shared surface (optional).
    *
    * Blit the color buffer into a shared surface.
    *
    * @@sa GLPRESENTBUFFERSDATA::PresentHistoryToken.
    */
   void
   (*compose)( struct pipe_screen *screen,
               struct pipe_resource *res,
               struct stw_shared_surface *dest,
               LPCRECT pRect,
               ULONGLONG PresentHistoryToken );
};

boolean
stw_init(const struct stw_winsys *stw_winsys);

boolean
stw_init_thread(void);

void
stw_cleanup_thread(void);

void
stw_cleanup(void);

#endif /* STW_WINSYS_H */
@


1.3
log
@Merge Mesa 9.2.0
@
text
@@


1.2
log
@Merge Mesa 7.10.3
@
text
@d81 1
a81 1
    * Compose into a shared (optional).
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d37 1
a37 1
struct pipe_surface;
d46 1
d52 1
a52 1
               struct pipe_surface *surf,
d89 1
a89 1
               struct pipe_surface *src,
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d37 1
a37 1
struct pipe_resource;
a45 1
   /* XXX is it actually possible to have non-zero level/layer ??? */
d51 1
a51 1
               struct pipe_resource *res,
d88 1
a88 1
               struct pipe_resource *res,
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d81 1
a81 1
    * Compose into a shared surface (optional).
@


