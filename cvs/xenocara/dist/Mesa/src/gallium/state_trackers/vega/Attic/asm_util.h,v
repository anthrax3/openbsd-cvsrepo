head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.14
	OPENBSD_5_7_BASE:1.2
	v10_2_9:1.1.1.1
	v10_4_3:1.1.1.1
	v10_2_7:1.1.1.1
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	v10_2_3:1.1.1.1
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.12.23.05.17.37;	author jsg;	state dead;
branches;
next	1.2;
commitid	TnlogFl9nOv2eaRf;

1.2
date	2011.10.23.13.37.35;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.08;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.30;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 *
 * Copyright 2009 VMware, Inc.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

#ifndef ASM_UTIL_H
#define ASM_UTIL_H

/* μnew = μmask */
static const char set_mask_asm[] =
   "FRAG\n"
   "DCL IN[0], GENERIC[0], PERSPECTIVE\n"
   "DCL SAMP[0], CONSTANT\n"
   "DCL OUT[0], COLOR, CONSTANT\n"
   "0: TEX OUT[0], IN[0], SAMP[0], 2D\n"/*umask*/
   "1: END\n";

/* μnew = 1 – (1 – μmask)*(1 – μprev) */
static const char union_mask_asm[] =
   "FRAG\n"
   "DCL IN[0], GENERIC[0], PERSPECTIVE\n"
   "DCL IN[1], POSITION, LINEAR\n"
   "DCL CONST[0], CONSTANT\n"
   "DCL SAMP[0..1], CONSTANT\n"
   "DCL TEMP[0..3], CONSTANT\n"
   "DCL OUT[0], COLOR, CONSTANT\n"
   "0: TEX TEMP[1], IN[0], SAMP[0], 2D\n"/*umask*/
   "1: TEX TEMP[0], IN[1], SAMP[1], 2D\n"/*uprev*/
   "2: SUB TEMP[2], CONST[0], TEMP[0]\n"
   "3: SUB TEMP[3], CONST[0], TEMP[1]\n"
   "4: MUL TEMP[0].w, TEMP[2].wwww, TEMP[3].wwww\n"
   "5: SUB OUT[0], CONST[0], TEMP[0]\n"
   "6: END\n";

/* μnew = μmask *μprev */
static const char intersect_mask_asm[] =
   "FRAG\n"
   "DCL IN[0], GENERIC[0], PERSPECTIVE\n"
   "DCL IN[1], POSITION, LINEAR\n"
   "DCL CONST[0], CONSTANT\n"
   "DCL SAMP[0..1], CONSTANT\n"
   "DCL TEMP[0..1], CONSTANT\n"
   "DCL OUT[0], COLOR, CONSTANT\n"
   "0: TEX TEMP[0], IN[1], SAMP[1], 2D\n"/*uprev*/
   "1: TEX TEMP[1], IN[0], SAMP[0], 2D\n"/*umask*/
   "2: MUL OUT[0], TEMP[0].wwww, TEMP[1].wwww\n"
   "3: END\n";

/* μnew = μprev*(1 – μmask) */
static const char subtract_mask_asm[] =
   "FRAG\n"
   "DCL IN[0], GENERIC[0], PERSPECTIVE\n"
   "DCL IN[1], POSITION, LINEAR\n"
   "DCL CONST[0], CONSTANT\n"
   "DCL SAMP[0..1], CONSTANT\n"
   "DCL TEMP[0..2], CONSTANT\n"
   "DCL OUT[0], COLOR, CONSTANT\n"
   "0: TEX TEMP[1], IN[0], SAMP[0], 2D\n"/*umask*/
   "1: TEX TEMP[0], IN[1], SAMP[1], 2D\n"/*uprev*/
   "2: SUB TEMP[2], CONST[0], TEMP[1]\n"
   "3: MUL OUT[0], TEMP[2].wwww, TEMP[0].wwww\n"
   "4: END\n";

#endif
@


1.2
log
@Merge Mesa 7.10.3
@
text
@@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@a29 10

static const char pass_through_depth_asm[] =
   "FRAG\n"
   "DCL IN[0], POSITION, LINEAR\n"
   "DCL OUT[0].z, POSITION, CONSTANT\n"
   "0: MOV OUT[0].z, IN[0].zzzz\n"
   "1: END\n";



a82 41
   "4: END\n";


static const char vs_plain_asm[] =
   "VERT\n"
   "DCL IN[0]\n"
   "DCL OUT[0], POSITION\n"
   "DCL TEMP[0]\n"
   "DCL CONST[0..1]\n"
   "0: MUL TEMP[0], IN[0], CONST[0]\n"
   "1: ADD TEMP[0], TEMP[0], CONST[1]\n"
   "2: MOV OUT[0], TEMP[0]\n"
   "3: END\n";

static const char vs_clear_asm[] =
   "VERT\n"
   "DCL IN[0]\n"
   "DCL IN[1]\n"
   "DCL OUT[0], POSITION\n"
   "DCL OUT[1], COLOR\n"
   "DCL TEMP[0]\n"
   "DCL CONST[0..1]\n"
   "0: MUL TEMP[0], IN[0], CONST[0]\n"
   "1: ADD TEMP[0], TEMP[0], CONST[1]\n"
   "2: MOV OUT[0], TEMP[0]\n"
   "3: MOV OUT[1], IN[1]\n"
   "4: END\n";


static const char vs_texture_asm[] =
   "VERT\n"
   "DCL IN[0]\n"
   "DCL IN[1]\n"
   "DCL OUT[0], POSITION\n"
   "DCL OUT[1], GENERIC\n"
   "DCL TEMP[0]\n"
   "DCL CONST[0..1]\n"
   "0: MUL TEMP[0], IN[0], CONST[0]\n"
   "1: ADD TEMP[0], TEMP[0], CONST[1]\n"
   "2: MOV OUT[0], TEMP[0]\n"
   "3: MOV OUT[1], IN[1]\n"
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d30 10
d93 41
@

