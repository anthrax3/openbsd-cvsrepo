head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.37;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2013.09.05.14.01.50;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.07;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.35;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.08;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.30;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.13.22;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 *
 * Copyright 2009 VMware, Inc.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

#include "VG/openvg.h"

#include "vg_manager.h"
#include "vg_context.h"
#include "api.h"

#include "pipe/p_context.h"
#include "pipe/p_screen.h"

VGErrorCode vegaGetError(void)
{
   struct vg_context *ctx = vg_current_context();
   VGErrorCode error = VG_NO_CONTEXT_ERROR;

   if (!ctx)
      return error;

   error = ctx->_error;
   ctx->_error = VG_NO_ERROR;

   return error;
}

void vegaFlush(void)
{
   struct vg_context *ctx = vg_current_context();
   struct pipe_context *pipe;

   if (!ctx)
      return;

   pipe = ctx->pipe;
   pipe->flush(pipe, NULL, 0);

   vg_manager_flush_frontbuffer(ctx);
}

void vegaFinish(void)
{
   struct vg_context *ctx = vg_current_context();
   struct pipe_fence_handle *fence = NULL;
   struct pipe_context *pipe;

   if (!ctx)
      return;

   pipe = ctx->pipe;

   pipe->flush(pipe, &fence, 0);
   if (fence) {
      pipe->screen->fence_finish(pipe->screen, fence,
                                 PIPE_TIMEOUT_INFINITE);
      pipe->screen->fence_reference(pipe->screen, &fence, NULL);
   }
}
@


1.4
log
@Merge Mesa 9.2.0
@
text
@@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d59 1
a59 1
   pipe->flush(pipe, NULL);
d75 1
a75 1
   pipe->flush(pipe, &fence);
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d59 1
a59 1
   pipe->flush(pipe, PIPE_FLUSH_RENDER_CACHE, NULL);
d75 1
a75 1
   pipe->flush(pipe, PIPE_FLUSH_RENDER_CACHE | PIPE_FLUSH_FRAME, &fence);
d77 2
a78 1
      pipe->screen->fence_finish(pipe->screen, fence, 0);
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d29 1
d31 1
d36 1
a36 1
VGErrorCode vgGetError(void)
d50 1
a50 1
void vgFlush(void)
d60 2
d64 1
a64 1
void vgFinish(void)
d76 4
a79 3

   pipe->screen->fence_finish(pipe->screen, fence, 0);
   pipe->screen->fence_reference(pipe->screen, &fence, NULL);
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a28 1
#include "vg_manager.h"
a29 1
#include "api.h"
d34 1
a34 1
VGErrorCode vegaGetError(void)
d48 1
a48 1
void vegaFlush(void)
a57 2

   vg_manager_flush_frontbuffer(ctx);
d60 1
a60 1
void vegaFinish(void)
d72 3
a74 4
   if (fence) {
      pipe->screen->fence_finish(pipe->screen, fence, 0);
      pipe->screen->fence_reference(pipe->screen, &fence, NULL);
   }
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d59 1
a59 1
   pipe->flush(pipe, NULL, 0);
d75 1
a75 1
   pipe->flush(pipe, &fence, 0);
d77 1
a77 2
      pipe->screen->fence_finish(pipe->screen, fence,
                                 PIPE_TIMEOUT_INFINITE);
@


