head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.12.23.05.17.37;	author jsg;	state dead;
branches;
next	1.3;
commitid	TnlogFl9nOv2eaRf;

1.3
date	2014.07.09.21.08.56;	author jsg;	state Exp;
branches;
next	1.2;
commitid	WPD6rgPryPkvXOr9;

1.2
date	2011.10.23.13.37.35;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.08;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.30;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.07.09.20.34.20;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.4
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 *
 * Copyright 2009 VMware, Inc.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

#include "VG/openvg.h"

#include "vg_context.h"
#include "api.h"

/* Hardware Queries */
VGHardwareQueryResult vegaHardwareQuery(VGHardwareQueryType key,
                                        VGint setting)
{
   struct vg_context *ctx = vg_current_context();

   if (key < VG_IMAGE_FORMAT_QUERY ||
       key > VG_PATH_DATATYPE_QUERY) {
      vg_set_error(ctx, VG_ILLEGAL_ARGUMENT_ERROR);
      return VG_HARDWARE_UNACCELERATED;
   }

   if (key == VG_IMAGE_FORMAT_QUERY) {
      if (setting < VG_sRGBX_8888 ||
          setting > VG_lABGR_8888_PRE) {
         vg_set_error(ctx, VG_ILLEGAL_ARGUMENT_ERROR);
         return VG_HARDWARE_UNACCELERATED;
      }
   } else if (key == VG_PATH_DATATYPE_QUERY) {
      if (setting < VG_PATH_DATATYPE_S_8 ||
          setting > VG_PATH_DATATYPE_F) {
         vg_set_error(ctx, VG_ILLEGAL_ARGUMENT_ERROR);
         return VG_HARDWARE_UNACCELERATED;
      }
   }
   /* we're supposed to accelerate everything */
   return VG_HARDWARE_ACCELERATED;
}

/* Renderer and Extension Information */
const VGubyte *vegaGetString(VGStringID name)
{
   struct vg_context *ctx = vg_current_context();
   static const VGubyte *vendor = (VGubyte *)"Mesa Project";
   static const VGubyte *renderer = (VGubyte *)"Vega OpenVG 1.1";
   static const VGubyte *version = (VGubyte *)"1.1";

   if (!ctx)
      return NULL;

   switch(name) {
   case VG_VENDOR:
      return vendor;
   case VG_RENDERER:
      return renderer;
   case VG_VERSION:
      return version;
   case VG_EXTENSIONS:
      return NULL;
   default:
      return NULL;
   }
}
@


1.3
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.2
log
@Merge Mesa 7.10.3
@
text
@d65 1
a65 1
   static const VGubyte *vendor = (VGubyte *)"Tungsten Graphics, Inc";
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d30 1
d33 2
a34 2
VGHardwareQueryResult vgHardwareQuery(VGHardwareQueryType key,
                                      VGint setting)
d62 1
a62 1
const VGubyte *vgGetString(VGStringID name)
d66 2
a67 2
   static const VGubyte *renderer = (VGubyte *)"Vega OpenVG 1.0";
   static const VGubyte *version = (VGubyte *)"1.0";
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a29 1
#include "api.h"
d32 2
a33 2
VGHardwareQueryResult vegaHardwareQuery(VGHardwareQueryType key,
                                        VGint setting)
d61 1
a61 1
const VGubyte *vegaGetString(VGStringID name)
d65 2
a66 2
   static const VGubyte *renderer = (VGubyte *)"Vega OpenVG 1.1";
   static const VGubyte *version = (VGubyte *)"1.1";
@


1.1.1.2
log
@Import Mesa 10.2.3
@
text
@d65 1
a65 1
   static const VGubyte *vendor = (VGubyte *)"Mesa Project";
@


