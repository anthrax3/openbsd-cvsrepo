head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.08.17.13.58.07;	author mpi;	state dead;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.34;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.08;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.29;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@import sys
import os.path

Import('*')

if env['toolchain'] == 'crossmingw':
    # Cross-compilation not supported
    Return()

if not env.Detect(['swig']):
    Return()

env = env.Clone()

env.Tool('python')

env.Tool('swig')
env.Append(SWIGPATH = ['#src/gallium/include', '#src/gallium/include/pipe'])
env.Append(SWIGFLAGS = ['-python', '-keyword'])

env.Append(CPPPATH = '.')

if env['platform'] == 'windows':
    env.Append(LIBS = [
        'opengl32',
        'gdi32',
        'user32',
        'kernel32',
        'ws2_32',
    ])
else:
    env.Append(CPPDEFINES = ['GCC_HASCLASSVISIBILITY'])
    env.Append(LIBS = [
        'GL',
        'X11',
    ])

sources = [
    'gallium.i',
    'st_device.c',
    'st_sample.c',
    'st_hardpipe_winsys.c',
    'st_softpipe_winsys.c',
]

env.Prepend(LIBS = [
    ws_null,
    trace,
    gallium,
])

if env['llvm']:
    env.Append(CPPDEFINES = ['HAVE_LLVMPIPE'])
    env.Prepend(LIBS = [llvmpipe])
if True:
    env.Append(CPPDEFINES = ['HAVE_SOFTPIPE'])
    env.Prepend(LIBS = [softpipe])

env['no_import_lib'] = 1

pyst = env.SharedLibrary(
    target = '_gallium',
    source = sources,
)

env.Alias('python', pyst)
@


1.2
log
@Merge Mesa 7.10.3
@
text
@@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d6 59
a64 1
if 'python' in env['statetrackers']:
d66 1
a66 56
    env = env.Clone()
    
    env.Tool('python')
    
    env.Tool('swig')
    env.Append(SWIGPATH = ['#src/gallium/include', '#src/gallium/include/pipe'])
    env.Append(SWIGFLAGS = ['-python', '-keyword'])
    
    env.Append(CPPPATH = '.')

    if env['platform'] == 'windows':
        env.Append(LIBS = [
            'opengl32',
            'gdi32',
            'user32',
            'kernel32',
            'ws2_32',
        ])
    else:
        env.Append(LIBS = [
        	'GL',
            'X11',
        ])

    sources = [
        'gallium.i',
        'st_device.c',
        'st_sample.c',
    ]

    drivers = [
        trace
    ]

    if 'llvmpipe' in env['drivers']:
        env.Tool('llvm')
        sources += ['st_llvmpipe_winsys.c']
        drivers += [llvmpipe]
    else:
        sources += ['st_softpipe_winsys.c']
        drivers += [softpipe]

    pyst = env.ConvenienceLibrary(
        target = 'pyst',
        source = sources,
    )

    env['no_import_lib'] = 1

    env.SharedLibrary(
        target = '_gallium',
        source = [
            'st_hardpipe_winsys.c',
        ],
        LIBS = [pyst] + drivers + gallium + env['LIBS'],
    )
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d6 1
a6 59
if env['toolchain'] == 'crossmingw':
    # Cross-compilation not supported
    Return()

if not env.Detect(['swig']):
    Return()

env = env.Clone()

env.Tool('python')

env.Tool('swig')
env.Append(SWIGPATH = ['#src/gallium/include', '#src/gallium/include/pipe'])
env.Append(SWIGFLAGS = ['-python', '-keyword'])

env.Append(CPPPATH = '.')

if env['platform'] == 'windows':
    env.Append(LIBS = [
        'opengl32',
        'gdi32',
        'user32',
        'kernel32',
        'ws2_32',
    ])
else:
    env.Append(CPPDEFINES = ['GCC_HASCLASSVISIBILITY'])
    env.Append(LIBS = [
        'GL',
        'X11',
    ])

sources = [
    'gallium.i',
    'st_device.c',
    'st_sample.c',
    'st_hardpipe_winsys.c',
    'st_softpipe_winsys.c',
]

env.Prepend(LIBS = [
    ws_null,
    trace,
    gallium,
])

if env['llvm']:
    env.Append(CPPDEFINES = ['HAVE_LLVMPIPE'])
    env.Prepend(LIBS = [llvmpipe])
if True:
    env.Append(CPPDEFINES = ['HAVE_SOFTPIPE'])
    env.Prepend(LIBS = [softpipe])

env['no_import_lib'] = 1

pyst = env.SharedLibrary(
    target = '_gallium',
    source = sources,
)
d8 56
a63 1
env.Alias('python', pyst)
@

