head	1.4;
access;
symbols
	v10_4_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.02.20.23.09.53;	author jsg;	state dead;
branches;
next	1.3;
commitid	4ry2gvZGMXkCUD2n;

1.3
date	2015.01.25.14.41.17;	author jsg;	state Exp;
branches;
next	1.2;
commitid	mcxB0JvoI9gTDYXU;

1.2
date	2011.10.23.13.37.34;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.08;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2015.01.25.14.09.12;	author jsg;	state Exp;
branches;
next	;
commitid	ce2W5rH5aF7VS9gi;


desc
@@


1.4
log
@Merge Mesa 10.2.9
@
text
@/**************************************************************************
 *
 * Copyright (C) 2009 VMware, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/
/*
 * Author: Keith Whitwell <keithw@@vmware.com>
 * Author: Jakob Bornecrantz <wallbraker@@gmail.com>
 */

#ifndef DRI_CONTEXT_H
#define DRI_CONTEXT_H

#include "dri_util.h"
#include "pipe/p_compiler.h"
#include "hud/hud_context.h"

struct pipe_context;
struct pipe_fence;
struct st_api;
struct st_context_iface;
struct dri_drawable;

struct dri_context
{
   /* dri */
   __DRIscreen *sPriv;
   __DRIcontext *cPriv;
   __DRIdrawable *dPriv;
   __DRIdrawable *rPriv;

   unsigned int bind_count;

   /* gallium */
   struct st_api *stapi;
   struct st_context_iface *st;
   struct pp_queue_t *pp;
   struct hud_context *hud;
};

static INLINE struct dri_context *
dri_context(__DRIcontext * driContextPriv)
{
   if (!driContextPriv)
     return NULL;
   return (struct dri_context *)driContextPriv->driverPrivate;
}

/***********************************************************************
 * dri_context.c
 */
void dri_destroy_context(__DRIcontext * driContextPriv);

boolean dri_unbind_context(__DRIcontext * driContextPriv);

boolean
dri_make_current(__DRIcontext * driContextPriv,
		 __DRIdrawable * driDrawPriv,
		 __DRIdrawable * driReadPriv);

struct dri_context *
dri_get_current(__DRIscreen * driScreenPriv);

boolean
dri_create_context(gl_api api,
		   const struct gl_config * visual,
		   __DRIcontext * driContextPriv,
		   unsigned major_version,
		   unsigned minor_version,
		   uint32_t flags,
		   bool notify_reset,
		   unsigned *error,
		   void *sharedContextPrivate);

#endif

/* vim: set sw=3 ts=8 sts=3 expandtab: */
@


1.3
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@@


1.2
log
@Merge Mesa 7.10.3
@
text
@d35 1
d37 1
a37 2
#include "drm.h"
#include "dri_util.h"
d41 2
a42 1
struct st_context;
a52 10
   driOptionCache optionCache;

   unsigned int d_stamp;
   unsigned int r_stamp;

   drmLock *lock;
   boolean isLocked;
   boolean stLostLock;
   boolean wsLostLock;

d56 4
a59 2
   struct st_context *st;
   struct pipe_context *pipe;
d65 2
a69 22
static INLINE void
dri_lock(struct dri_context *ctx)
{
   drm_context_t hw_context = ctx->cPriv->hHWContext;
   char ret = 0;

   DRM_CAS(ctx->lock, hw_context, DRM_LOCK_HELD | hw_context, ret);
   if (ret) {
      drmGetLock(ctx->sPriv->fd, hw_context, 0);
      ctx->stLostLock = TRUE;
      ctx->wsLostLock = TRUE;
   }
   ctx->isLocked = TRUE;
}

static INLINE void
dri_unlock(struct dri_context *ctx)
{
   ctx->isLocked = FALSE;
   DRM_UNLOCK(ctx->sPriv->fd, ctx->lock, ctx->cPriv->hHWContext);
}

a72 2
extern struct dri1_api_lock_funcs dri1_lf;

d82 3
d86 2
a87 1
dri_create_context(const __GLcontextModes * visual,
d89 5
a94 5

/***********************************************************************
 * dri_extensions.c
 */
void dri_init_extensions(struct dri_context *ctx);
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@@


1.1.1.1
log
@Import Mesa 10.4.3
@
text
@d35 2
a37 2
#include "pipe/p_compiler.h"
#include "hud/hud_context.h"
d41 1
a41 2
struct st_api;
struct st_context_iface;
d52 10
d65 2
a66 4
   struct st_api *stapi;
   struct st_context_iface *st;
   struct pp_queue_t *pp;
   struct hud_context *hud;
a71 2
   if (!driContextPriv)
     return NULL;
d75 22
d100 2
a110 3
struct dri_context *
dri_get_current(__DRIscreen * driScreenPriv);

d112 1
a112 2
dri_create_context(gl_api api,
		   const struct gl_config * visual,
a113 5
		   unsigned major_version,
		   unsigned minor_version,
		   uint32_t flags,
		   bool notify_reset,
		   unsigned *error,
d115 5
@


