head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.42;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2014.09.07.15.20.07;	author jsg;	state Exp;
branches;
next	1.3;
commitid	7kimTMT4YlQauAIU;

1.3
date	2014.07.09.21.08.57;	author jsg;	state Exp;
branches;
next	1.2;
commitid	WPD6rgPryPkvXOr9;

1.2
date	2013.09.05.14.02.16;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.17.13.58.09;	author mpi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2013.09.05.13.13.54;	author jsg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.07.09.20.34.23;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	3JhLfwcuBALP0ZR7;

1.1.1.3
date	2014.09.07.15.04.19;	author jsg;	state Exp;
branches;
next	;
commitid	dm8VnQHhowGHmemJ;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright Â© 2009 Corbin Simpson
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON-INFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS, AUTHORS
 * AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
 * USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 */
/*
 * Authors:
 *      Corbin Simpson <MostAwesomeDude@@gmail.com>
 */
#ifndef RADEON_DRM_WINSYS_H
#define RADEON_DRM_WINSYS_H

#include "radeon_winsys.h"
#include "os/os_thread.h"

struct radeon_drm_cs;

enum radeon_generation {
    DRV_R300,
    DRV_R600,
    DRV_SI
};

struct radeon_drm_winsys {
    struct radeon_winsys base;
    struct pipe_reference reference;

    int fd; /* DRM file descriptor */
    int num_cs; /* The number of command streams created. */
    uint64_t allocated_vram;
    uint64_t allocated_gtt;
    uint64_t buffer_wait_time; /* time spent in buffer_wait in ns */
    uint64_t num_cs_flushes;

    enum radeon_generation gen;
    struct radeon_info info;
    uint32_t va_start;
    uint32_t accel_working2;

    struct pb_manager *kman;
    struct pb_manager *cman;
    struct radeon_surface_manager *surf_man;

    uint32_t num_cpus;      /* Number of CPUs. */

    struct radeon_drm_cs *hyperz_owner;
    pipe_mutex hyperz_owner_mutex;
    struct radeon_drm_cs *cmask_owner;
    pipe_mutex cmask_owner_mutex;

    /* rings submission thread */
    pipe_mutex cs_stack_lock;
    pipe_semaphore cs_queued;
    pipe_thread thread;
    int kill_thread;
    int ncs;
    struct radeon_drm_cs *cs_stack[RING_LAST];
};

static INLINE struct radeon_drm_winsys *
radeon_drm_winsys(struct radeon_winsys *base)
{
    return (struct radeon_drm_winsys*)base;
}

void radeon_drm_ws_queue_cs(struct radeon_drm_winsys *ws, struct radeon_drm_cs *cs);

#endif
@


1.4
log
@Merge Mesa 10.2.7
@
text
@@


1.3
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@d58 1
@


1.2
log
@Merge Mesa 9.2.0
@
text
@d46 1
d53 1
d57 1
a72 5
    /* we cannot use semaphore for empty queue because maintaining an even
     * number of call to semaphore_wait and semaphore_signal is, to say the
     * least, tricky
     */
    pipe_condvar cs_queue_empty;
@


1.1
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d34 3
d38 5
a42 1
#include "os/os_thread.h"
d49 6
d58 1
a59 5
    uint32_t pci_id;        /* PCI ID */
    uint32_t gb_pipes;      /* GB pipe count */
    uint32_t z_pipes;       /* Z pipe count (rv530 only) */
    uint32_t gart_size;     /* GART size. */
    uint32_t vram_size;     /* VRAM size. */
a61 4
    unsigned drm_major;
    unsigned drm_minor;
    unsigned drm_patchlevel;

d66 13
d86 2
@


1.1.1.1
log
@Import Mesa 9.2.0
@
text
@d34 1
a36 8
struct radeon_drm_cs;

enum radeon_generation {
    DRV_R300,
    DRV_R600,
    DRV_SI
};

a41 6
    uint64_t allocated_vram;
    uint64_t allocated_gtt;
    uint64_t buffer_wait_time; /* time spent in buffer_wait in ns */

    enum radeon_generation gen;
    struct radeon_info info;
a44 1
    struct radeon_surface_manager *surf_man;
d46 5
d53 4
a60 13

    /* rings submission thread */
    pipe_mutex cs_stack_lock;
    pipe_semaphore cs_queued;
    /* we cannot use semaphore for empty queue because maintaining an even
     * number of call to semaphore_wait and semaphore_signal is, to say the
     * least, tricky
     */
    pipe_condvar cs_queue_empty;
    pipe_thread thread;
    int kill_thread;
    int ncs;
    struct radeon_drm_cs *cs_stack[RING_LAST];
a67 2

void radeon_drm_ws_queue_cs(struct radeon_drm_winsys *ws, struct radeon_drm_cs *cs);
@


1.1.1.2
log
@Import Mesa 10.2.3
@
text
@a45 1
    struct pipe_reference reference;
a51 1
    uint64_t num_cs_flushes;
a54 1
    uint32_t va_start;
d70 5
@


1.1.1.3
log
@Import Mesa 10.2.7
@
text
@a57 1
    uint32_t accel_working2;
@


