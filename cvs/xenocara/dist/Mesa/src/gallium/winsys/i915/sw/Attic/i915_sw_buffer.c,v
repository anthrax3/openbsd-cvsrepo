head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.41;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2015.02.20.23.09.56;	author jsg;	state Exp;
branches;
next	1.3;
commitid	4ry2gvZGMXkCUD2n;

1.3
date	2015.01.25.14.41.18;	author jsg;	state dead;
branches;
next	1.2;
commitid	mcxB0JvoI9gTDYXU;

1.2
date	2012.08.17.13.58.09;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.23.13.29.30;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.30;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.13.53;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@
#include "i915_sw_winsys.h"
#include "util/u_memory.h"

static struct i915_winsys_buffer *
i915_sw_buffer_create(struct i915_winsys *iws,
                      unsigned size,
                      enum i915_winsys_buffer_type type)
{
   struct i915_sw_buffer *buf = CALLOC_STRUCT(i915_sw_buffer);

   if (!buf)
      return NULL;

   buf->magic = 0xDEAD1337;
   buf->type = type;
   buf->ptr = CALLOC(size, 1);

   if (!buf->ptr)
      goto err;

   return (struct i915_winsys_buffer *)buf;

err:
   assert(0);
   FREE(buf);
   return NULL;
}

static struct i915_winsys_buffer *
i915_sw_buffer_create_tiled(struct i915_winsys *iws,
                      unsigned *stride, unsigned height, 
                      enum i915_winsys_buffer_tile *tiling,
                      enum i915_winsys_buffer_type type)
{
   struct i915_sw_buffer *buf = CALLOC_STRUCT(i915_sw_buffer);

   if (!buf)
      return NULL;

   buf->magic = 0xDEAD1337;
   buf->type = type;
   buf->ptr = CALLOC(*stride * height, 1);
   buf->tiling = *tiling;
   buf->stride = *stride;

   if (!buf->ptr)
      goto err;

   return (struct i915_winsys_buffer *)buf;

err:
   assert(0);
   FREE(buf);
   return NULL;
}

static void *
i915_sw_buffer_map(struct i915_winsys *iws,
                   struct i915_winsys_buffer *buffer,
                   boolean write)
{
   struct i915_sw_buffer *buf = i915_sw_buffer(buffer);

   buf->map_count += 1;
   return buf->ptr;
}

static void
i915_sw_buffer_unmap(struct i915_winsys *iws,
                     struct i915_winsys_buffer *buffer)
{
   struct i915_sw_buffer *buf = i915_sw_buffer(buffer);

   buf->map_count -= 1;
}

static int
i915_sw_buffer_write(struct i915_winsys *iws,
                     struct i915_winsys_buffer *buffer,
                     size_t offset,
                     size_t size,
                     const void *data)
{
   struct i915_sw_buffer *buf = i915_sw_buffer(buffer);

   memcpy((char*)buf->ptr + offset, data, size);
   return 0;
}

static void
i915_sw_buffer_destroy(struct i915_winsys *iws,
                       struct i915_winsys_buffer *buffer)
{
   struct i915_sw_buffer *buf = i915_sw_buffer(buffer);

#ifdef DEBUG
   buf->magic = 0;
#endif

   FREE(buf->ptr);
   FREE(buf);
}

void
i915_sw_winsys_init_buffer_functions(struct i915_sw_winsys *isws)
{
   isws->base.buffer_create = i915_sw_buffer_create;
   isws->base.buffer_create_tiled = i915_sw_buffer_create_tiled;
   isws->base.buffer_map = i915_sw_buffer_map;
   isws->base.buffer_unmap = i915_sw_buffer_unmap;
   isws->base.buffer_write = i915_sw_buffer_write;
   isws->base.buffer_destroy = i915_sw_buffer_destroy;
}
@


1.4
log
@Merge Mesa 10.2.9
@
text
@@


1.3
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@@


1.2
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@@


1.1
log
@Initial revision
@
text
@d87 1
a87 1
   memcpy(buf->ptr + offset, data, size);
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d87 1
a87 1
   memcpy((char*)buf->ptr + offset, data, size);
@

