head	1.7;
access;
symbols
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	v10_2_9:1.1.1.4
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.12.23.05.17.54;	author jsg;	state dead;
branches;
next	1.6;
commitid	TnlogFl9nOv2eaRf;

1.6
date	2015.02.20.23.09.59;	author jsg;	state Exp;
branches;
next	1.5;
commitid	4ry2gvZGMXkCUD2n;

1.5
date	2015.01.25.14.41.22;	author jsg;	state Exp;
branches;
next	1.4;
commitid	mcxB0JvoI9gTDYXU;

1.4
date	2013.09.05.14.06.42;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.20;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.45;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.33;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.48;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.17.20;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2015.01.25.14.13.17;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.4
date	2015.02.20.22.50.23;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.7
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 * 
 * Copyright 2009 VMware, Inc.
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/


/**
 * glBegin/EndCondtionalRender functions
 *
 * \author Brian Paul
 */


#include "main/imports.h"
#include "main/context.h"

#include "pipe/p_context.h"
#include "pipe/p_defines.h"
#include "cso_cache/cso_context.h"
#include "st_context.h"
#include "st_cb_queryobj.h"
#include "st_cb_condrender.h"
#include "st_cb_bitmap.h"


/**
 * Called via ctx->Driver.BeginConditionalRender()
 */
static void
st_BeginConditionalRender(struct gl_context *ctx, struct gl_query_object *q,
                          GLenum mode)
{
   struct st_query_object *stq = st_query_object(q);
   struct st_context *st = st_context(ctx);
   uint m;

   st_flush_bitmap_cache(st);

   switch (mode) {
   case GL_QUERY_WAIT:
      m = PIPE_RENDER_COND_WAIT;
      break;
   case GL_QUERY_NO_WAIT:
      m = PIPE_RENDER_COND_NO_WAIT;
      break;
   case GL_QUERY_BY_REGION_WAIT:
      m = PIPE_RENDER_COND_BY_REGION_WAIT;
      break;
   case GL_QUERY_BY_REGION_NO_WAIT:
      m = PIPE_RENDER_COND_BY_REGION_NO_WAIT;
      break;
   default:
      assert(0 && "bad mode in st_BeginConditionalRender");
      m = PIPE_RENDER_COND_WAIT;
   }

   cso_set_render_condition(st->cso_context, stq->pq, FALSE, m);
}


/**
 * Called via ctx->Driver.EndConditionalRender()
 */
static void
st_EndConditionalRender(struct gl_context *ctx, struct gl_query_object *q)
{
   struct st_context *st = st_context(ctx);
   (void) q;

   st_flush_bitmap_cache(st);

   cso_set_render_condition(st->cso_context, NULL, FALSE, 0);
}



void st_init_cond_render_functions(struct dd_function_table *functions)
{
   functions->BeginConditionalRender = st_BeginConditionalRender;
   functions->EndConditionalRender = st_EndConditionalRender;
}
@


1.6
log
@Merge Mesa 10.2.9
@
text
@@


1.5
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@a57 2
   /* Don't invert the condition for rendering by default */
   boolean inverted = FALSE;
a73 16
   case GL_QUERY_WAIT_INVERTED:
      m = PIPE_RENDER_COND_WAIT;
      inverted = TRUE;
      break;
   case GL_QUERY_NO_WAIT_INVERTED:
      m = PIPE_RENDER_COND_NO_WAIT;
      inverted = TRUE;
      break;
   case GL_QUERY_BY_REGION_WAIT_INVERTED:
      m = PIPE_RENDER_COND_BY_REGION_WAIT;
      inverted = TRUE;
      break;
   case GL_QUERY_BY_REGION_NO_WAIT_INVERTED:
      m = PIPE_RENDER_COND_BY_REGION_NO_WAIT;
      inverted = TRUE;
      break;
d79 1
a79 1
   cso_set_render_condition(st->cso_context, stq->pq, inverted, m);
@


1.4
log
@Merge Mesa 9.2.0
@
text
@d58 2
d76 16
d97 1
a97 1
   cso_set_render_condition(st->cso_context, stq->pq, FALSE, m);
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d41 1
a56 1
   struct pipe_context *pipe = st->pipe;
d79 1
a79 4
   st->render_condition = stq->pq;
   st->condition_mode = m;

   pipe->render_condition(pipe, stq->pq, m);
d84 1
a84 1
 * Called via ctx->Driver.BeginConditionalRender()
a89 1
   struct pipe_context *pipe = st->pipe;
d94 1
a94 2
   pipe->render_condition(pipe, NULL, 0);
   st->render_condition = NULL;
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d44 1
d59 2
d95 2
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d50 1
a50 1
st_BeginConditionalRender(GLcontext *ctx, struct gl_query_object *q,
d54 2
a55 1
   struct pipe_context *pipe = ctx->st->pipe;
d76 3
d87 1
a87 1
st_EndConditionalRender(GLcontext *ctx, struct gl_query_object *q)
d89 2
a90 1
   struct pipe_context *pipe = ctx->st->pipe;
d92 1
d94 1
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d50 1
a50 1
st_BeginConditionalRender(struct gl_context *ctx, struct gl_query_object *q,
d54 1
a54 2
   struct st_context *st = st_context(ctx);
   struct pipe_context *pipe = st->pipe;
a74 3
   st->render_condition = stq->pq;
   st->condition_mode = m;

d83 1
a83 1
st_EndConditionalRender(struct gl_context *ctx, struct gl_query_object *q)
d85 1
a85 2
   struct st_context *st = st_context(ctx);
   struct pipe_context *pipe = st->pipe;
a86 1

a87 1
   st->render_condition = NULL;
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@a40 1
#include "cso_cache/cso_context.h"
a43 1
#include "st_cb_bitmap.h"
d55 1
a57 2
   st_flush_bitmap_cache(st);

d76 4
a79 1
   cso_set_render_condition(st->cso_context, stq->pq, FALSE, m);
d84 1
a84 1
 * Called via ctx->Driver.EndConditionalRender()
d90 1
d93 2
a94 3
   st_flush_bitmap_cache(st);

   cso_set_render_condition(st->cso_context, NULL, FALSE, 0);
@


1.1.1.3
log
@Import Mesa 10.4.3
@
text
@a57 2
   /* Don't invert the condition for rendering by default */
   boolean inverted = FALSE;
a73 16
   case GL_QUERY_WAIT_INVERTED:
      m = PIPE_RENDER_COND_WAIT;
      inverted = TRUE;
      break;
   case GL_QUERY_NO_WAIT_INVERTED:
      m = PIPE_RENDER_COND_NO_WAIT;
      inverted = TRUE;
      break;
   case GL_QUERY_BY_REGION_WAIT_INVERTED:
      m = PIPE_RENDER_COND_BY_REGION_WAIT;
      inverted = TRUE;
      break;
   case GL_QUERY_BY_REGION_NO_WAIT_INVERTED:
      m = PIPE_RENDER_COND_BY_REGION_NO_WAIT;
      inverted = TRUE;
      break;
d79 1
a79 1
   cso_set_render_condition(st->cso_context, stq->pq, inverted, m);
@


1.1.1.4
log
@Import Mesa 10.2.9
@
text
@d58 2
d76 16
d97 1
a97 1
   cso_set_render_condition(st->cso_context, stq->pq, FALSE, m);
@


