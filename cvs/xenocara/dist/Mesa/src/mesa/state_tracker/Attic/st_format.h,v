head	1.8;
access;
symbols
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	v10_2_9:1.1.1.5
	v10_4_3:1.1.1.4
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.12.23.05.17.54;	author jsg;	state dead;
branches;
next	1.7;
commitid	TnlogFl9nOv2eaRf;

1.7
date	2015.02.20.23.09.59;	author jsg;	state Exp;
branches;
next	1.6;
commitid	4ry2gvZGMXkCUD2n;

1.6
date	2015.01.25.14.41.22;	author jsg;	state Exp;
branches;
next	1.5;
commitid	mcxB0JvoI9gTDYXU;

1.5
date	2014.07.09.21.09.01;	author jsg;	state Exp;
branches;
next	1.4;
commitid	WPD6rgPryPkvXOr9;

1.4
date	2013.09.05.14.06.45;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.20;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.45;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.34;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.48;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.17.24;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.35.11;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	3JhLfwcuBALP0ZR7;

1.1.1.4
date	2015.01.25.14.13.21;	author jsg;	state Exp;
branches;
next	1.1.1.5;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.5
date	2015.02.20.22.50.27;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.8
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 * 
 * Copyright 2007 VMware, Inc.
 * Copyright (c) 2010 VMware, Inc.
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/


#ifndef ST_FORMAT_H
#define ST_FORMAT_H

#include "main/formats.h"
#include "main/glheader.h"

#include "pipe/p_defines.h"
#include "pipe/p_format.h"

struct gl_context;
struct pipe_screen;


extern enum pipe_format
st_mesa_format_to_pipe_format(mesa_format mesaFormat);

extern mesa_format
st_pipe_format_to_mesa_format(enum pipe_format pipeFormat);


extern enum pipe_format
st_choose_format(struct st_context *st, GLenum internalFormat,
                 GLenum format, GLenum type,
                 enum pipe_texture_target target, unsigned sample_count,
                 unsigned bindings, boolean allow_dxt);

extern enum pipe_format
st_choose_renderbuffer_format(struct st_context *st,
                              GLenum internalFormat, unsigned sample_count);

extern enum pipe_format
st_choose_matching_format(struct pipe_screen *screen, unsigned bind,
			  GLenum format, GLenum type, GLboolean swapBytes);

extern mesa_format
st_ChooseTextureFormat(struct gl_context * ctx, GLenum target,
                       GLint internalFormat,
                       GLenum format, GLenum type);

size_t
st_QuerySamplesForFormat(struct gl_context *ctx, GLenum target,
                         GLenum internalFormat, int samples[16]);



extern void
st_translate_color(const union gl_color_union *colorIn,
                   union pipe_color_union *colorOut,
                   GLenum baseFormat, GLboolean is_integer);

#endif /* ST_FORMAT_H */
@


1.7
log
@Merge Mesa 10.2.9
@
text
@@


1.6
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@d44 1
a44 1
st_mesa_format_to_pipe_format(struct st_context *st, mesa_format mesaFormat);
d61 1
a61 1
st_choose_matching_format(struct st_context *st, unsigned bind,
@


1.5
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@d44 1
a44 1
st_mesa_format_to_pipe_format(mesa_format mesaFormat);
d61 1
a61 1
st_choose_matching_format(struct pipe_screen *screen, unsigned bind,
@


1.4
log
@Merge Mesa 9.2.0
@
text
@d3 1
a3 1
 * Copyright 2007 Tungsten Graphics, Inc., Cedar Park, Texas.
d22 1
a22 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
d44 1
a44 1
st_mesa_format_to_pipe_format(gl_format mesaFormat);
d46 1
a46 1
extern gl_format
d64 1
a64 1
extern gl_format
d76 1
a76 1
st_translate_color(union gl_color_union *colorIn,
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a41 3
extern GLenum
st_format_datatype(enum pipe_format format);

d51 1
a51 1
st_choose_format(struct pipe_screen *screen, GLenum internalFormat,
d54 1
a54 1
                 unsigned tex_usage);
d57 1
a57 1
st_choose_renderbuffer_format(struct pipe_screen *screen,
d60 3
a62 4

gl_format
st_ChooseTextureFormat_renderable(struct gl_context *ctx, GLint internalFormat,
				  GLenum format, GLenum type, GLboolean renderable);
d65 2
a66 1
st_ChooseTextureFormat(struct gl_context * ctx, GLint internalFormat,
d69 3
a72 7
extern GLboolean
st_equal_formats(enum pipe_format pFormat, GLenum format, GLenum type);

/* can we use a sampler view to translate these formats
   only used to make TFP so far */
extern GLboolean
st_sampler_compat_formats(enum pipe_format format1, enum pipe_format format2);
d76 3
a78 3
st_translate_color(const GLfloat colorIn[4], GLenum baseFormat,
                   GLfloat colorOut[4]);

@


1.2
log
@Merge Mesa 7.10.3
@
text
@d34 1
a34 1
#include "main/mtypes.h"
d39 1
d55 1
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d34 1
d36 4
d54 2
a55 1
                 enum pipe_texture_target target, unsigned tex_usage);
d59 2
a60 1
                              GLenum internalFormat);
d62 3
d67 1
a67 1
st_ChooseTextureFormat(GLcontext * ctx, GLint internalFormat,
d73 10
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a33 1
#include "main/mtypes.h"
a34 4
#include "pipe/p_defines.h"
#include "pipe/p_format.h"

struct pipe_screen;
d49 1
a49 2
                 enum pipe_texture_target target, unsigned sample_count,
                 unsigned tex_usage);
d53 1
a53 2
                              GLenum internalFormat, unsigned sample_count);

a54 3
gl_format
st_ChooseTextureFormat_renderable(struct gl_context *ctx, GLint internalFormat,
				  GLenum format, GLenum type, GLboolean renderable);
d57 1
a57 1
st_ChooseTextureFormat(struct gl_context * ctx, GLint internalFormat,
a62 10

/* can we use a sampler view to translate these formats
   only used to make TFP so far */
extern GLboolean
st_sampler_compat_formats(enum pipe_format format1, enum pipe_format format2);


extern void
st_translate_color(const GLfloat colorIn[4], GLenum baseFormat,
                   GLfloat colorOut[4]);
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d34 1
a34 1
#include "main/glheader.h"
a38 1
struct gl_context;
d41 3
d53 1
a53 2
st_choose_format(struct st_context *st, GLenum internalFormat,
                 GLenum format, GLenum type,
d55 1
a55 1
                 unsigned bindings, boolean allow_dxt);
d58 1
a58 1
st_choose_renderbuffer_format(struct st_context *st,
d61 4
a64 3
extern enum pipe_format
st_choose_matching_format(struct pipe_screen *screen, unsigned bind,
			  GLenum format, GLenum type, GLboolean swapBytes);
d67 1
a67 2
st_ChooseTextureFormat(struct gl_context * ctx, GLenum target,
                       GLint internalFormat,
a69 3
size_t
st_QuerySamplesForFormat(struct gl_context *ctx, GLenum target,
                         GLenum internalFormat, int samples[16]);
d71 7
d81 3
a83 3
st_translate_color(union gl_color_union *colorIn,
                   union pipe_color_union *colorOut,
                   GLenum baseFormat, GLboolean is_integer);
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d3 1
a3 1
 * Copyright 2007 VMware, Inc.
d22 1
a22 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
d44 1
a44 1
st_mesa_format_to_pipe_format(mesa_format mesaFormat);
d46 1
a46 1
extern mesa_format
d64 1
a64 1
extern mesa_format
d76 1
a76 1
st_translate_color(const union gl_color_union *colorIn,
@


1.1.1.4
log
@Import Mesa 10.4.3
@
text
@d44 1
a44 1
st_mesa_format_to_pipe_format(struct st_context *st, mesa_format mesaFormat);
d61 1
a61 1
st_choose_matching_format(struct st_context *st, unsigned bind,
@


1.1.1.5
log
@Import Mesa 10.2.9
@
text
@d44 1
a44 1
st_mesa_format_to_pipe_format(mesa_format mesaFormat);
d61 1
a61 1
st_choose_matching_format(struct pipe_screen *screen, unsigned bind,
@


