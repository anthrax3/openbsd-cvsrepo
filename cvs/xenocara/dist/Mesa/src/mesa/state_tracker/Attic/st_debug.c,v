head	1.8;
access;
symbols
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	v10_2_9:1.1.1.5
	v10_4_3:1.1.1.4
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.12.23.05.17.54;	author jsg;	state dead;
branches;
next	1.7;
commitid	TnlogFl9nOv2eaRf;

1.7
date	2015.02.20.23.09.59;	author jsg;	state Exp;
branches;
next	1.6;
commitid	4ry2gvZGMXkCUD2n;

1.6
date	2015.01.25.14.41.22;	author jsg;	state Exp;
branches;
next	1.5;
commitid	mcxB0JvoI9gTDYXU;

1.5
date	2014.07.09.21.09.01;	author jsg;	state Exp;
branches;
next	1.4;
commitid	WPD6rgPryPkvXOr9;

1.4
date	2013.09.05.14.06.45;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.20;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.45;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.34;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.48;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.17.23;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.35.11;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	3JhLfwcuBALP0ZR7;

1.1.1.4
date	2015.01.25.14.13.20;	author jsg;	state Exp;
branches;
next	1.1.1.5;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.5
date	2015.02.20.22.50.26;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.8
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**************************************************************************
 * 
 * Copyright 2007 VMware, Inc.
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/


#include "main/context.h"
#include "program/prog_print.h"

#include "pipe/p_state.h"
#include "pipe/p_shader_tokens.h"
#include "tgsi/tgsi_dump.h"

#include "cso_cache/cso_cache.h"

#include "st_context.h"
#include "st_debug.h"
#include "st_program.h"



#ifdef DEBUG
int ST_DEBUG = 0;

static const struct debug_named_value st_debug_flags[] = {
   { "mesa",     DEBUG_MESA, NULL },
   { "tgsi",     DEBUG_TGSI, NULL },
   { "constants",DEBUG_CONSTANTS, NULL },
   { "pipe",     DEBUG_PIPE, NULL },
   { "tex",      DEBUG_TEX, NULL },
   { "fallback", DEBUG_FALLBACK, NULL },
   { "screen",   DEBUG_SCREEN, NULL },
   { "query",    DEBUG_QUERY, NULL },
   { "draw",     DEBUG_DRAW, NULL },
   { "buffer",   DEBUG_BUFFER, NULL },
   DEBUG_NAMED_VALUE_END
};

DEBUG_GET_ONCE_FLAGS_OPTION(st_debug, "ST_DEBUG", st_debug_flags, 0)
#endif


void
st_debug_init(void)
{
#ifdef DEBUG
   ST_DEBUG = debug_get_option_st_debug();
#endif
}



/**
 * Print current state.  May be called from inside gdb to see currently
 * bound vertex/fragment shaders and associated constants.
 */
void
st_print_current(void)
{
   GET_CURRENT_CONTEXT(ctx);
   struct st_context *st = st_context(ctx);

#if 0
   int i;

   printf("Vertex Transform Inputs:\n");
   for (i = 0; i < st->vp->state.num_inputs; i++) {
      printf("  Slot %d:  VERT_ATTRIB_%d\n", i, st->vp->index_to_input[i]);
   }
#endif

   if (st->vp->variants)
      tgsi_dump( st->vp->variants[0].tgsi.tokens, 0 );
   if (st->vp->Base.Base.Parameters)
      _mesa_print_parameter_list(st->vp->Base.Base.Parameters);

   tgsi_dump( st->fp->variants[0].tgsi.tokens, 0 );
   if (st->fp->Base.Base.Parameters)
      _mesa_print_parameter_list(st->fp->Base.Base.Parameters);
}


@


1.7
log
@Merge Mesa 10.2.9
@
text
@@


1.6
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@a57 1
   { "wf",       DEBUG_WIREFRAME, NULL },
@


1.5
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@d58 1
@


1.4
log
@Merge Mesa 9.2.0
@
text
@d3 1
a3 1
 * Copyright 2007 Tungsten Graphics, Inc., Cedar Park, Texas.
d21 1
a21 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d56 2
d99 1
a99 1
   tgsi_dump( st->fp->tgsi.tokens, 0 );
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d92 2
a93 2
   if (st->vp->varients)
      tgsi_dump( st->vp->varients[0].tgsi.tokens, 0 );
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d30 1
a30 1
#include "shader/prog_print.h"
d48 9
a56 8
   { "mesa",     DEBUG_MESA },
   { "tgsi",     DEBUG_TGSI },
   { "pipe",     DEBUG_PIPE },
   { "tex",      DEBUG_TEX },
   { "fallback", DEBUG_FALLBACK },
   { "screen",   DEBUG_SCREEN },
   { "query",    DEBUG_QUERY },
   {NULL, 0}
d58 2
d67 1
a67 1
   ST_DEBUG = debug_get_flags_option("ST_DEBUG", st_debug_flags, 0 );
d81 1
a81 1
   struct st_context *st = ctx->st;
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d30 1
a30 1
#include "program/prog_print.h"
d48 8
a55 9
   { "mesa",     DEBUG_MESA, NULL },
   { "tgsi",     DEBUG_TGSI, NULL },
   { "constants",DEBUG_CONSTANTS, NULL },
   { "pipe",     DEBUG_PIPE, NULL },
   { "tex",      DEBUG_TEX, NULL },
   { "fallback", DEBUG_FALLBACK, NULL },
   { "screen",   DEBUG_SCREEN, NULL },
   { "query",    DEBUG_QUERY, NULL },
   DEBUG_NAMED_VALUE_END
a56 2

DEBUG_GET_ONCE_FLAGS_OPTION(st_debug, "ST_DEBUG", st_debug_flags, 0)
d64 1
a64 1
   ST_DEBUG = debug_get_option_st_debug();
d78 1
a78 1
   struct st_context *st = st_context(ctx);
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@a55 2
   { "draw",     DEBUG_DRAW, NULL },
   { "buffer",   DEBUG_BUFFER, NULL },
d92 2
a93 2
   if (st->vp->variants)
      tgsi_dump( st->vp->variants[0].tgsi.tokens, 0 );
d97 1
a97 1
   tgsi_dump( st->fp->variants[0].tgsi.tokens, 0 );
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d3 1
a3 1
 * Copyright 2007 VMware, Inc.
d21 1
a21 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
@


1.1.1.4
log
@Import Mesa 10.4.3
@
text
@a57 1
   { "wf",       DEBUG_WIREFRAME, NULL },
@


1.1.1.5
log
@Import Mesa 10.2.9
@
text
@d58 1
@


