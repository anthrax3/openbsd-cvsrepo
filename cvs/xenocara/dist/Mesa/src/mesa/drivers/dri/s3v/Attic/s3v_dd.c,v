head	1.3;
access;
symbols
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.2.0.8
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.6
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v6_5_2:1.1.1.2
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2010.05.22.20.06.25;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.53.47;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.53.47;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.11.57.32;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@/*
 * Author: Max Lingua <sunmax@@libero.it>
 */

#include "s3v_context.h"
#include "s3v_vb.h"
#include "s3v_lock.h"
#if defined(USE_X86_ASM)
#include "x86/common_x86_asm.h"
#endif

#include "main/context.h"
#include "main/framebuffer.h"
#include "swrast/swrast.h"

#define S3V_DATE "20020207"


/* Return the width and height of the current color buffer.
 */
static void s3vDDGetBufferSize( GLframebuffer *buffer,
				 GLuint *width, GLuint *height )
{
   GET_CURRENT_CONTEXT(ctx);
   s3vContextPtr vmesa = S3V_CONTEXT(ctx);

/* S3VHW_LOCK( vmesa ); */
   *width  = vmesa->driDrawable->w;
   *height = vmesa->driDrawable->h;
/* S3VHW_UNLOCK( vmesa ); */
}


/* Return various strings for glGetString().
 */
static const GLubyte *s3vDDGetString( GLcontext *ctx, GLenum name )
{
   static char buffer[128];

   switch ( name ) {
   case GL_VENDOR:
      return (GLubyte *)"Max Lingua (ladybug)";

   case GL_RENDERER:
      sprintf( buffer, "Mesa DRI S3 Virge " S3V_DATE );

      /* Append any CPU-specific information.
       */
#ifdef USE_X86_ASM
      if ( _mesa_x86_cpu_features ) {
	 strncat( buffer, " x86", 4 );
      
}
#ifdef USE_MMX_ASM
      if ( cpu_has_mmx ) {
	 strncat( buffer, "/MMX", 4 );
      }
#endif
#ifdef USE_3DNOW_ASM
      if ( cpu_has_3dnow ) {
	 strncat( buffer, "/3DNow!", 7 );
      }
#endif
#ifdef USE_SSE_ASM
      if ( cpu_has_xmm ) {
	 strncat( buffer, "/SSE", 4 );
      }
#endif
#endif
      return (GLubyte *)buffer;

   default:
      return NULL;
   }
}

/* Enable the extensions supported by this driver.
 */
void s3vInitExtensions( GLcontext *ctx )
{
   /* None... */
}

/* Initialize the driver's misc functions.
 */
void s3vInitDriverFuncs( GLcontext *ctx )
{
   ctx->Driver.GetBufferSize = s3vDDGetBufferSize;
   ctx->Driver.GetString = s3vDDGetString;
}
@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@@


1.1
log
@Initial revision
@
text
@d12 2
a13 2
#include "context.h"
#include "framebuffer.h"
d88 2
a89 20
   ctx->Driver.GetBufferSize	= s3vDDGetBufferSize;
   ctx->Driver.GetString		= s3vDDGetString;

   ctx->Driver.Error			= NULL;

   /* Pixel path fallbacks
    */
   ctx->Driver.Accum                    = _swrast_Accum;
   ctx->Driver.Bitmap                   = _swrast_Bitmap;
   ctx->Driver.CopyPixels               = _swrast_CopyPixels;
   ctx->Driver.DrawPixels               = _swrast_DrawPixels;
   ctx->Driver.ReadPixels               = _swrast_ReadPixels;
   ctx->Driver.ResizeBuffers            = _mesa_resize_framebuffer;

   /* Swrast hooks for imaging extensions:
    */
   ctx->Driver.CopyColorTable			= _swrast_CopyColorTable;
   ctx->Driver.CopyColorSubTable		= _swrast_CopyColorSubTable;
   ctx->Driver.CopyConvolutionFilter1D	= _swrast_CopyConvolutionFilter1D;
   ctx->Driver.CopyConvolutionFilter2D	= _swrast_CopyConvolutionFilter2D;
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@import MesaLibs version 6.5.2
@
text
@d88 20
a107 2
   ctx->Driver.GetBufferSize = s3vDDGetBufferSize;
   ctx->Driver.GetString = s3vDDGetString;
@

