head	1.6;
access;
symbols
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.6
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v6_5_2:1.1.1.2
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2013.09.05.14.04.06;	author jsg;	state dead;
branches;
next	1.5;

1.5
date	2011.10.23.13.37.39;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.22.20.06.17;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.17.20.26.38;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.14.58.13;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.52.12;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.52.12;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.11.57.03;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merge Mesa 9.2.0
@
text
@/* -*- mode: c; c-basic-offset: 3 -*- */
/*
 * (c) Copyright IBM Corporation 2002
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * on the rights to use, copy, modify, merge, publish, distribute, sub
 * license, and/or sell copies of the Software, and to permit persons to whom
 * the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
 * VA LINUX SYSTEM, IBM AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
 * USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Authors:
 *    Ian Romanick <idr@@us.ibm.com>
 */

#ifndef DRI_VBLANK_H
#define DRI_VBLANK_H

#include "main/context.h"
#include "dri_util.h"
#include "xmlconfig.h"

#define VBLANK_FLAG_INTERVAL  (1U << 0)  /* Respect the swap_interval setting
					  */
#define VBLANK_FLAG_THROTTLE  (1U << 1)  /* Wait 1 refresh since last call.
					  */
#define VBLANK_FLAG_SYNC      (1U << 2)  /* Sync to the next refresh.
					  */
#define VBLANK_FLAG_NO_IRQ    (1U << 7)  /* DRM has no IRQ to wait on.
					  */
#define VBLANK_FLAG_SECONDARY (1U << 8)  /* Wait for secondary vblank.
					  */

extern int driGetMSC32( __DRIscreen * priv, int64_t * count );
extern int driDrawableGetMSC32( __DRIscreen * priv,
				__DRIdrawable * drawablePrivate,
				int64_t * count);
extern int driWaitForMSC32( __DRIdrawable *priv,
    int64_t target_msc, int64_t divisor, int64_t remainder, int64_t * msc );
extern GLuint driGetDefaultVBlankFlags( const driOptionCache *optionCache );
extern void driDrawableInitVBlank ( __DRIdrawable *priv );
extern unsigned driGetVBlankInterval( const  __DRIdrawable *priv );
extern void driGetCurrentVBlank( __DRIdrawable *priv );
extern int driWaitForVBlank( __DRIdrawable *priv,
			     GLboolean * missed_deadline );

#undef usleep
#include <unistd.h>  /* for usleep() */
#include <sched.h>   /* for sched_yield() */

#define DO_USLEEP(nr)							\
   do {								 	\
      if (0) fprintf(stderr, "%s: usleep for %u\n", __FUNCTION__, nr );	\
      if (1) usleep( nr );						\
      sched_yield();							\
   } while( 0 )

#endif /* DRI_VBLANK_H */
@


1.5
log
@Merge Mesa 7.10.3
@
text
@@


1.4
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@a63 4
#ifdef linux
#include <sched.h>   /* for sched_yield() */
#endif

@


1.3
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d47 3
a49 3
extern int driGetMSC32( __DRIscreenPrivate * priv, int64_t * count );
extern int driDrawableGetMSC32( __DRIscreenPrivate * priv,
				__DRIdrawablePrivate * drawablePrivate,
d51 1
a51 1
extern int driWaitForMSC32( __DRIdrawablePrivate *priv,
d54 4
a57 4
extern void driDrawableInitVBlank ( __DRIdrawablePrivate *priv );
extern unsigned driGetVBlankInterval( const  __DRIdrawablePrivate *priv );
extern void driGetCurrentVBlank( __DRIdrawablePrivate *priv );
extern int driWaitForVBlank( __DRIdrawablePrivate *priv,
@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@a27 1
/* $XFree86:$ */
d32 1
a32 1
#include "context.h"
@


1.1
log
@Initial revision
@
text
@d45 2
d49 3
d55 5
a59 3
extern void driDrawableInitVBlank ( __DRIdrawablePrivate *priv, GLuint flags );
extern int driWaitForVBlank( const __DRIdrawablePrivate *priv,
    GLuint * vbl_seq, GLuint flags, GLboolean * missed_deadline );
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@import MesaLibs version 6.5.2
@
text
@a44 2
#define VBLANK_FLAG_SECONDARY (1U << 8)  /* Wait for secondary vblank.
					  */
d50 1
a50 6
extern void driDrawableInitVBlank ( __DRIdrawablePrivate *priv, GLuint flags,
				    GLuint *vbl_seq );
extern unsigned driGetVBlankInterval( const  __DRIdrawablePrivate *priv,
				      GLuint flags );
extern void driGetCurrentVBlank( const  __DRIdrawablePrivate *priv,
				 GLuint flags, GLuint *vbl_seq );
@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@d28 1
d33 1
a33 1
#include "main/context.h"
d48 2
a49 5
extern int driGetMSC32( __DRIscreen * priv, int64_t * count );
extern int driDrawableGetMSC32( __DRIscreen * priv,
				__DRIdrawable * drawablePrivate,
				int64_t * count);
extern int driWaitForMSC32( __DRIdrawable *priv,
d52 8
a59 5
extern void driDrawableInitVBlank ( __DRIdrawable *priv );
extern unsigned driGetVBlankInterval( const  __DRIdrawable *priv );
extern void driGetCurrentVBlank( __DRIdrawable *priv );
extern int driWaitForVBlank( __DRIdrawable *priv,
			     GLboolean * missed_deadline );
d64 4
@


