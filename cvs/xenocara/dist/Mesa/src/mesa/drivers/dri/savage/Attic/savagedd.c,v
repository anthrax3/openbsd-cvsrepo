head	1.6;
access;
symbols
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.2.0.8
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.6
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v6_5_2:1.1.1.2
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2013.09.05.14.05.36;	author jsg;	state dead;
branches;
next	1.5;

1.5
date	2012.08.17.13.58.16;	author mpi;	state Exp;
branches;
next	1.4;

1.4
date	2011.10.23.13.37.41;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.22.20.06.25;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.53.51;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.53.51;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.11.57.33;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.42;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merge Mesa 9.2.0
@
text
@/*
 * Copyright 1998-2003 VIA Technologies, Inc. All Rights Reserved.
 * Copyright 2001-2003 S3 Graphics, Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * VIA, S3 GRAPHICS, AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */


#include "main/mtypes.h"
#include "main/framebuffer.h"

#include <stdio.h>

#include "main/mm.h"

#include "savagedd.h"
#include "savagestate.h"
#include "savagetex.h"
#include "savagecontext.h"

#include "utils.h"


/***************************************
 * Mesa's Driver Functions
 ***************************************/


static const GLubyte *savageDDGetString( struct gl_context *ctx, GLenum name )
{
   static char *cardNames[S3_LAST] = {
       "Unknown",
       "Savage3D",
       "Savage/MX/IX",
       "Savage4",
       "ProSavage",
       "Twister",
       "ProSavageDDR",
       "SuperSavage",
       "Savage2000"
   };
   static char buffer[128];
   savageContextPtr imesa = SAVAGE_CONTEXT(ctx);
   savageScreenPrivate *screen = imesa->savageScreen;
   enum S3CHIPTAGS chipset = screen->chipset;
   unsigned offset;

   if (chipset < S3_SAVAGE3D || chipset >= S3_LAST)
      chipset = S3_UNKNOWN; /* should not happen */

   switch (name) {
   case GL_VENDOR:
      return (GLubyte *)"S3 Graphics Inc.";
   case GL_RENDERER:
      offset = driGetRendererString( buffer, cardNames[chipset],
				     screen->agpMode );
      return (GLubyte *)buffer;
   default:
      return 0;
   }
}
#if 0
static GLint savageGetParameteri(const struct gl_context *ctx, GLint param)
{
   switch (param) {
   case DD_HAVE_HARDWARE_FOG:
      return 1;
   default:
      return 0;
   }
}
#endif


void savageDDInitDriverFuncs( struct gl_context *ctx )
{
   ctx->Driver.GetString = savageDDGetString;
}
@


1.5
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@@


1.4
log
@Merge Mesa 7.10.3
@
text
@a40 2
#define DRIVER_DATE "20061110"

d72 1
a72 1
      offset = driGetRendererString( buffer, cardNames[chipset], DRIVER_DATE,
@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d48 1
a48 1
static const GLubyte *savageDDGetString( GLcontext *ctx, GLenum name )
d82 1
a82 1
static GLint savageGetParameteri(const GLcontext *ctx, GLint param)
d94 1
a94 1
void savageDDInitDriverFuncs( GLcontext *ctx )
@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@a31 1
#include "swrast/swrast.h"
a34 1
#include "savagespan.h"
a35 1
#include "savagetris.h"
a36 1
#include "main/extensions.h"
@


1.1
log
@Initial revision
@
text
@d26 2
a27 2
#include "mtypes.h"
#include "framebuffer.h"
d31 1
a31 1
#include "mm.h"
d40 1
a40 1
#include "extensions.h"
d45 1
a45 1
#define DRIVER_DATE "20050829"
a97 16
static void savageBufferSize(GLframebuffer *buffer, GLuint *width, GLuint *height)
{
   GET_CURRENT_CONTEXT(ctx);
   savageContextPtr imesa = SAVAGE_CONTEXT(ctx);

   /* Need to lock to make sure the driDrawable is uptodate.  This
    * information is used to resize Mesa's software buffers, so it has
    * to be correct.
    */
   LOCK_HARDWARE(imesa);
   *width = imesa->driDrawable->w;
   *height = imesa->driDrawable->h;
   UNLOCK_HARDWARE(imesa);
}


a99 2
   ctx->Driver.GetBufferSize = savageBufferSize;
   ctx->Driver.ResizeBuffers = _mesa_resize_framebuffer;
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@import MesaLibs version 6.5.2
@
text
@d45 1
a45 1
#define DRIVER_DATE "20061110"
d98 16
d116 2
@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@d26 2
a27 2
#include "main/mtypes.h"
#include "main/framebuffer.h"
d31 2
a32 1
#include "main/mm.h"
d36 1
d38 1
d40 1
d52 1
a52 1
static const GLubyte *savageDDGetString( struct gl_context *ctx, GLenum name )
d86 1
a86 1
static GLint savageGetParameteri(const struct gl_context *ctx, GLint param)
d98 1
a98 1
void savageDDInitDriverFuncs( struct gl_context *ctx )
@


