head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.12.23.05.17.51;	author jsg;	state dead;
branches;
next	1.5;
commitid	TnlogFl9nOv2eaRf;

1.5
date	2014.07.09.21.09.00;	author jsg;	state Exp;
branches;
next	1.4;
commitid	WPD6rgPryPkvXOr9;

1.4
date	2013.09.05.14.05.35;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.16;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.25;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.42;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.16.08;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.34.57;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.6
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright (C) 2008 Nicolai Haehnle.
 * Copyright (C) The Weather Channel, Inc.  2002.  All Rights Reserved.
 *
 * The Weather Channel (TM) funded Tungsten Graphics to develop the
 * initial release of the Radeon 8500 driver under the XFree86 license.
 * This notice must be preserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef RADEON_TEXTURE_H
#define RADEON_TEXTURE_H

#include "main/formats.h"

extern mesa_format _radeon_texformat_rgba8888;
extern mesa_format _radeon_texformat_argb8888;
extern mesa_format _radeon_texformat_rgb565;
extern mesa_format _radeon_texformat_argb4444;
extern mesa_format _radeon_texformat_argb1555;
extern mesa_format _radeon_texformat_al88;

extern 
void copy_rows(void* dst, GLuint dststride, const void* src, GLuint srcstride,
	GLuint numrows, GLuint rowsize);
struct gl_texture_image *radeonNewTextureImage(struct gl_context *ctx);
void radeonFreeTextureImageBuffer(struct gl_context *ctx, struct gl_texture_image *timage);

int radeon_validate_texture_miptree(struct gl_context * ctx,
				    struct gl_sampler_object *samp,
				    struct gl_texture_object *texObj);


mesa_format radeonChooseTextureFormat_mesa(struct gl_context * ctx,
                                         GLenum target,
                                         GLint internalFormat,
                                         GLenum format,
                                         GLenum type);

mesa_format radeonChooseTextureFormat(struct gl_context * ctx,
                                    GLint internalFormat,
                                    GLenum format,
                                    GLenum type, GLboolean fbo);

void radeonCopyTexSubImage(struct gl_context *ctx, GLuint dims,
                           struct gl_texture_image *texImage,
                           GLint xoffset, GLint yoffset, GLint zoffset,
                           struct gl_renderbuffer *rb,
                           GLint x, GLint y,
                           GLsizei width, GLsizei height);

unsigned radeonIsFormatRenderable(mesa_format mesa_format);

void radeon_image_target_texture_2d(struct gl_context *ctx, GLenum target,
				    struct gl_texture_object *texObj,
				    struct gl_texture_image *texImage,
				    GLeglImageOES image_handle);

void
radeon_init_common_texture_funcs(radeonContextPtr radeon,
				 struct dd_function_table *functions);

#endif
@


1.5
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.4
log
@Merge Mesa 9.2.0
@
text
@d36 6
a41 6
extern gl_format _radeon_texformat_rgba8888;
extern gl_format _radeon_texformat_argb8888;
extern gl_format _radeon_texformat_rgb565;
extern gl_format _radeon_texformat_argb4444;
extern gl_format _radeon_texformat_argb1555;
extern gl_format _radeon_texformat_al88;
d54 1
a54 1
gl_format radeonChooseTextureFormat_mesa(struct gl_context * ctx,
d60 1
a60 1
gl_format radeonChooseTextureFormat(struct gl_context * ctx,
d72 1
a72 1
unsigned radeonIsFormatRenderable(gl_format mesa_format);
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a34 1
#include "main/mfeatures.h"
d36 8
d47 5
a51 1
void radeonFreeTexImageData(struct gl_context *ctx, struct gl_texture_image *timage);
a52 6
void radeon_teximage_map(radeon_texture_image *image, GLboolean write_enable);
void radeon_teximage_unmap(radeon_texture_image *image);
void radeonMapTexture(struct gl_context *ctx, struct gl_texture_object *texObj);
void radeonUnmapTexture(struct gl_context *ctx, struct gl_texture_object *texObj);
void radeonGenerateMipmap(struct gl_context* ctx, GLenum target, struct gl_texture_object *texObj);
int radeon_validate_texture_miptree(struct gl_context * ctx, struct gl_texture_object *texObj);
d55 1
d65 6
a70 79
void radeonTexImage1D(struct gl_context * ctx, GLenum target, GLint level,
		      GLint internalFormat,
		      GLint width, GLint border,
		      GLenum format, GLenum type, const GLvoid * pixels,
		      const struct gl_pixelstore_attrib *packing,
		      struct gl_texture_object *texObj,
		      struct gl_texture_image *texImage);
void radeonTexImage2D(struct gl_context * ctx, GLenum target, GLint level,
		      GLint internalFormat,
		      GLint width, GLint height, GLint border,
		      GLenum format, GLenum type, const GLvoid * pixels,
		      const struct gl_pixelstore_attrib *packing,
		      struct gl_texture_object *texObj,
		      struct gl_texture_image *texImage);
void radeonCompressedTexImage2D(struct gl_context * ctx, GLenum target,
				GLint level, GLint internalFormat,
				GLint width, GLint height, GLint border,
				GLsizei imageSize, const GLvoid * data,
				struct gl_texture_object *texObj,
				struct gl_texture_image *texImage);
void radeonTexImage3D(struct gl_context * ctx, GLenum target, GLint level,
		      GLint internalFormat,
		      GLint width, GLint height, GLint depth,
		      GLint border,
		      GLenum format, GLenum type, const GLvoid * pixels,
		      const struct gl_pixelstore_attrib *packing,
		      struct gl_texture_object *texObj,
		      struct gl_texture_image *texImage);
void radeonTexSubImage1D(struct gl_context * ctx, GLenum target, GLint level,
			 GLint xoffset,
			 GLsizei width,
			 GLenum format, GLenum type,
			 const GLvoid * pixels,
			 const struct gl_pixelstore_attrib *packing,
			 struct gl_texture_object *texObj,
			 struct gl_texture_image *texImage);
void radeonTexSubImage2D(struct gl_context * ctx, GLenum target, GLint level,
				GLint xoffset, GLint yoffset,
				GLsizei width, GLsizei height,
				GLenum format, GLenum type,
				const GLvoid * pixels,
				const struct gl_pixelstore_attrib *packing,
				struct gl_texture_object *texObj,
				struct gl_texture_image *texImage);
void radeonCompressedTexSubImage2D(struct gl_context * ctx, GLenum target,
				   GLint level, GLint xoffset,
				   GLint yoffset, GLsizei width,
				   GLsizei height, GLenum format,
				   GLsizei imageSize, const GLvoid * data,
				   struct gl_texture_object *texObj,
				   struct gl_texture_image *texImage);

void radeonTexSubImage3D(struct gl_context * ctx, GLenum target, GLint level,
			 GLint xoffset, GLint yoffset, GLint zoffset,
			 GLsizei width, GLsizei height, GLsizei depth,
			 GLenum format, GLenum type,
			 const GLvoid * pixels,
			 const struct gl_pixelstore_attrib *packing,
			 struct gl_texture_object *texObj,
			 struct gl_texture_image *texImage);

void radeonGetTexImage(struct gl_context * ctx, GLenum target, GLint level,
		       GLenum format, GLenum type, GLvoid * pixels,
		       struct gl_texture_object *texObj,
		       struct gl_texture_image *texImage);
void radeonGetCompressedTexImage(struct gl_context *ctx, GLenum target, GLint level,
				 GLvoid *pixels,
				 struct gl_texture_object *texObj,
				 struct gl_texture_image *texImage);

void radeonCopyTexImage2D(struct gl_context *ctx, GLenum target, GLint level,
			GLenum internalFormat,
			GLint x, GLint y, GLsizei width, GLsizei height,
			GLint border);

void radeonCopyTexSubImage2D(struct gl_context *ctx, GLenum target, GLint level,
			GLint xoffset, GLint yoffset,
			GLint x, GLint y,
			GLsizei width, GLsizei height);
a73 1
#if FEATURE_OES_EGL_image
d78 4
a81 1
#endif
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d35 1
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d38 2
a39 2
struct gl_texture_image *radeonNewTextureImage(GLcontext *ctx);
void radeonFreeTexImageData(GLcontext *ctx, struct gl_texture_image *timage);
d43 4
a46 4
void radeonMapTexture(GLcontext *ctx, struct gl_texture_object *texObj);
void radeonUnmapTexture(GLcontext *ctx, struct gl_texture_object *texObj);
void radeonGenerateMipmap(GLcontext* ctx, GLenum target, struct gl_texture_object *texObj);
int radeon_validate_texture_miptree(GLcontext * ctx, struct gl_texture_object *texObj);
d48 1
a48 1
gl_format radeonChooseTextureFormat_mesa(GLcontext * ctx,
d53 1
a53 1
gl_format radeonChooseTextureFormat(GLcontext * ctx,
d58 1
a58 1
void radeonTexImage1D(GLcontext * ctx, GLenum target, GLint level,
d65 1
a65 1
void radeonTexImage2D(GLcontext * ctx, GLenum target, GLint level,
d72 1
a72 1
void radeonCompressedTexImage2D(GLcontext * ctx, GLenum target,
d78 1
a78 1
void radeonTexImage3D(GLcontext * ctx, GLenum target, GLint level,
d86 1
a86 1
void radeonTexSubImage1D(GLcontext * ctx, GLenum target, GLint level,
d94 1
a94 1
void radeonTexSubImage2D(GLcontext * ctx, GLenum target, GLint level,
d102 1
a102 1
void radeonCompressedTexSubImage2D(GLcontext * ctx, GLenum target,
d110 1
a110 1
void radeonTexSubImage3D(GLcontext * ctx, GLenum target, GLint level,
d119 1
a119 1
void radeonGetTexImage(GLcontext * ctx, GLenum target, GLint level,
d123 1
a123 1
void radeonGetCompressedTexImage(GLcontext *ctx, GLenum target, GLint level,
d128 1
a128 1
void radeonCopyTexImage2D(GLcontext *ctx, GLenum target, GLint level,
d133 1
a133 1
void radeonCopyTexSubImage2D(GLcontext *ctx, GLenum target, GLint level,
d137 9
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d38 2
a39 2
struct gl_texture_image *radeonNewTextureImage(struct gl_context *ctx);
void radeonFreeTexImageData(struct gl_context *ctx, struct gl_texture_image *timage);
d43 4
a46 4
void radeonMapTexture(struct gl_context *ctx, struct gl_texture_object *texObj);
void radeonUnmapTexture(struct gl_context *ctx, struct gl_texture_object *texObj);
void radeonGenerateMipmap(struct gl_context* ctx, GLenum target, struct gl_texture_object *texObj);
int radeon_validate_texture_miptree(struct gl_context * ctx, struct gl_texture_object *texObj);
d48 1
a48 1
gl_format radeonChooseTextureFormat_mesa(struct gl_context * ctx,
d53 1
a53 1
gl_format radeonChooseTextureFormat(struct gl_context * ctx,
d58 1
a58 1
void radeonTexImage1D(struct gl_context * ctx, GLenum target, GLint level,
d65 1
a65 1
void radeonTexImage2D(struct gl_context * ctx, GLenum target, GLint level,
d72 1
a72 1
void radeonCompressedTexImage2D(struct gl_context * ctx, GLenum target,
d78 1
a78 1
void radeonTexImage3D(struct gl_context * ctx, GLenum target, GLint level,
d86 1
a86 1
void radeonTexSubImage1D(struct gl_context * ctx, GLenum target, GLint level,
d94 1
a94 1
void radeonTexSubImage2D(struct gl_context * ctx, GLenum target, GLint level,
d102 1
a102 1
void radeonCompressedTexSubImage2D(struct gl_context * ctx, GLenum target,
d110 1
a110 1
void radeonTexSubImage3D(struct gl_context * ctx, GLenum target, GLint level,
d119 1
a119 1
void radeonGetTexImage(struct gl_context * ctx, GLenum target, GLint level,
d123 1
a123 1
void radeonGetCompressedTexImage(struct gl_context *ctx, GLenum target, GLint level,
d128 1
a128 1
void radeonCopyTexImage2D(struct gl_context *ctx, GLenum target, GLint level,
d133 1
a133 1
void radeonCopyTexSubImage2D(struct gl_context *ctx, GLenum target, GLint level,
a136 9

unsigned radeonIsFormatRenderable(gl_format mesa_format);

#if FEATURE_OES_EGL_image
void radeon_image_target_texture_2d(struct gl_context *ctx, GLenum target,
				    struct gl_texture_object *texObj,
				    struct gl_texture_image *texImage,
				    GLeglImageOES image_handle);
#endif
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@a35 8
extern gl_format _radeon_texformat_rgba8888;
extern gl_format _radeon_texformat_argb8888;
extern gl_format _radeon_texformat_rgb565;
extern gl_format _radeon_texformat_argb4444;
extern gl_format _radeon_texformat_argb1555;
extern gl_format _radeon_texformat_al88;

extern 
d39 1
a39 5
void radeonFreeTextureImageBuffer(struct gl_context *ctx, struct gl_texture_image *timage);

int radeon_validate_texture_miptree(struct gl_context * ctx,
				    struct gl_sampler_object *samp,
				    struct gl_texture_object *texObj);
d41 6
a48 1
                                         GLenum target,
d58 79
a136 6
void radeonCopyTexSubImage(struct gl_context *ctx, GLuint dims,
                           struct gl_texture_image *texImage,
                           GLint xoffset, GLint yoffset, GLint zoffset,
                           struct gl_renderbuffer *rb,
                           GLint x, GLint y,
                           GLsizei width, GLsizei height);
d140 1
d145 1
a145 4

void
radeon_init_common_texture_funcs(radeonContextPtr radeon,
				 struct dd_function_table *functions);
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d36 6
a41 6
extern mesa_format _radeon_texformat_rgba8888;
extern mesa_format _radeon_texformat_argb8888;
extern mesa_format _radeon_texformat_rgb565;
extern mesa_format _radeon_texformat_argb4444;
extern mesa_format _radeon_texformat_argb1555;
extern mesa_format _radeon_texformat_al88;
d54 1
a54 1
mesa_format radeonChooseTextureFormat_mesa(struct gl_context * ctx,
d60 1
a60 1
mesa_format radeonChooseTextureFormat(struct gl_context * ctx,
d72 1
a72 1
unsigned radeonIsFormatRenderable(mesa_format mesa_format);
@


