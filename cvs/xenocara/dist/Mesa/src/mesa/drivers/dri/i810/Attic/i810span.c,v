head	1.6;
access;
symbols
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	v7_10_3:1.1.1.2
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2013.09.05.14.04.09;	author jsg;	state dead;
branches;
next	1.5;

1.5
date	2011.10.23.13.37.39;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.22.20.06.18;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.17.20.26.38;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.14.58.13;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.52.27;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.52.27;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.10.23.13.29.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merge Mesa 9.2.0
@
text
@#include "main/glheader.h"
#include "main/macros.h"
#include "main/mtypes.h"
#include "main/colormac.h"
#include "swrast/swrast.h"

#include "i810screen.h"
#include "i810_dri.h"

#include "i810span.h"
#include "i810ioctl.h"


#define DBG 0

#define LOCAL_VARS					\
   i810ContextPtr imesa = I810_CONTEXT(ctx);	        \
   __DRIdrawable *dPriv = imesa->driDrawable;	\
   driRenderbuffer *drb = (driRenderbuffer *) rb;	\
   GLuint pitch = drb->pitch;				\
   GLuint height = dPriv->h;				\
   GLushort p;						\
   char *buf = (char *)(drb->flippedData +		\
			dPriv->x * 2 +			\
			dPriv->y * pitch);		\
   (void) buf; (void) p

#define LOCAL_DEPTH_VARS				\
   i810ContextPtr imesa = I810_CONTEXT(ctx);	        \
   __DRIdrawable *dPriv = imesa->driDrawable;	\
   driRenderbuffer *drb = (driRenderbuffer *) rb;	\
   GLuint pitch = drb->pitch;				\
   GLuint height = dPriv->h;				\
   char *buf = (char *)(drb->Base.Data +		\
			dPriv->x * 2 +			\
			dPriv->y * pitch)

#define INIT_MONO_PIXEL(p, color) \
   p = PACK_COLOR_565( color[0], color[1], color[2] )

#define Y_FLIP(_y) (height - _y - 1)

#define HW_LOCK()

#define HW_UNLOCK()

/* 16 bit, 565 rgb color spanline and pixel functions
 */
#define WRITE_RGBA( _x, _y, r, g, b, a )				\
   *(GLushort *)(buf + _x*2 + _y*pitch)  = ( (((int)r & 0xf8) << 8) |	\
		                             (((int)g & 0xfc) << 3) |	\
		                             (((int)b & 0xf8) >> 3))
#define WRITE_PIXEL( _x, _y, p )  \
   *(GLushort *)(buf + _x*2 + _y*pitch) = p

#define READ_RGBA( rgba, _x, _y )					\
do {									\
   GLushort p = *(GLushort *)(buf + _x*2 + _y*pitch);			\
   rgba[0] = ((p >> 8) & 0xf8) * 255 / 0xf8;				\
   rgba[1] = ((p >> 3) & 0xfc) * 255 / 0xfc;				\
   rgba[2] = ((p << 3) & 0xf8) * 255 / 0xf8;				\
   rgba[3] = 255;							\
} while(0)

#define TAG(x) i810##x##_565
#include "spantmp.h"

/* 16 bit depthbuffer functions.
 */
#define VALUE_TYPE GLushort

#define WRITE_DEPTH( _x, _y, d ) \
   *(GLushort *)(buf + (_x)*2 + (_y)*pitch)  = d;

#define READ_DEPTH( d, _x, _y )	\
   d = *(GLushort *)(buf + (_x)*2 + (_y)*pitch);

#define TAG(x) i810##x##_z16
#include "depthtmp.h"


/* Move locking out to get reasonable span performance.
 */
void i810SpanRenderStart( struct gl_context *ctx )
{
   i810ContextPtr imesa = I810_CONTEXT(ctx);
   I810_FIREVERTICES(imesa);
   LOCK_HARDWARE(imesa);
   i810RegetLockQuiescent( imesa );
}

void i810SpanRenderFinish( struct gl_context *ctx )
{
   i810ContextPtr imesa = I810_CONTEXT( ctx );
   _swrast_flush( ctx );
   UNLOCK_HARDWARE( imesa );
}

void i810InitSpanFuncs( struct gl_context *ctx )
{
   struct swrast_device_driver *swdd = _swrast_GetDeviceDriverReference(ctx);
   swdd->SpanRenderStart = i810SpanRenderStart;
   swdd->SpanRenderFinish = i810SpanRenderFinish; 
}



/**
 * Plug in the Get/Put routines for the given driRenderbuffer.
 */
void
i810SetSpanFunctions(driRenderbuffer *drb, const struct gl_config *vis)
{
   if (drb->Base.InternalFormat == GL_RGBA) {
      /* always 565 RGB */
      i810InitPointers_565(&drb->Base);
   }
   else if (drb->Base.InternalFormat == GL_DEPTH_COMPONENT16) {
      i810InitDepthPointers_z16(&drb->Base);
   }
   else if (drb->Base.InternalFormat == GL_DEPTH_COMPONENT24) {
      /* should never get here */
      drb->Base.GetRow        = NULL;
      drb->Base.GetValues     = NULL;
      drb->Base.PutRow        = NULL;
      drb->Base.PutMonoRow    = NULL;
      drb->Base.PutValues     = NULL;
      drb->Base.PutMonoValues = NULL;
   }
   else if (drb->Base.InternalFormat == GL_STENCIL_INDEX8_EXT) {
      drb->Base.GetRow        = NULL;
      drb->Base.GetValues     = NULL;
      drb->Base.PutRow        = NULL;
      drb->Base.PutMonoRow    = NULL;
      drb->Base.PutValues     = NULL;
      drb->Base.PutMonoValues = NULL;
   }
}
@


1.5
log
@Merge Mesa 7.10.3
@
text
@@


1.4
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d84 1
a84 1
void i810SpanRenderStart( GLcontext *ctx )
d92 1
a92 1
void i810SpanRenderFinish( GLcontext *ctx )
d99 1
a99 1
void i810InitSpanFuncs( GLcontext *ctx )
d112 1
a112 1
i810SetSpanFunctions(driRenderbuffer *drb, const GLvisual *vis)
@


1.3
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d18 1
a18 1
   __DRIdrawablePrivate *dPriv = imesa->driDrawable;	\
d30 1
a30 1
   __DRIdrawablePrivate *dPriv = imesa->driDrawable;	\
@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d1 5
a5 4
#include "glheader.h"
#include "macros.h"
#include "mtypes.h"
#include "colormac.h"
a11 1
#include "swrast/swrast.h"
@


1.1
log
@Initial revision
@
text
@d70 2
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Import Mesa 7.10.3
@
text
@d1 4
a4 5
#include "main/glheader.h"
#include "main/macros.h"
#include "main/mtypes.h"
#include "main/colormac.h"
#include "swrast/swrast.h"
d11 1
d18 1
a18 1
   __DRIdrawable *dPriv = imesa->driDrawable;	\
d30 1
a30 1
   __DRIdrawable *dPriv = imesa->driDrawable;	\
a69 2
#define VALUE_TYPE GLushort

d82 1
a82 1
void i810SpanRenderStart( struct gl_context *ctx )
d90 1
a90 1
void i810SpanRenderFinish( struct gl_context *ctx )
d97 1
a97 1
void i810InitSpanFuncs( struct gl_context *ctx )
d110 1
a110 1
i810SetSpanFunctions(driRenderbuffer *drb, const struct gl_config *vis)
@

