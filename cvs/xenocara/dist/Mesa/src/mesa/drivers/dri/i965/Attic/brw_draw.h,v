head	1.10;
access;
symbols
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	v10_2_9:1.1.1.7
	v10_4_3:1.1.1.6
	v10_2_7:1.1.1.5
	OPENBSD_5_6:1.7.0.2
	OPENBSD_5_6_BASE:1.7
	v10_2_3:1.1.1.5
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	v9_2_5:1.1.1.4
	v9_2_3:1.1.1.4
	v9_2_2:1.1.1.4
	v9_2_1:1.1.1.4
	v9_2_0:1.1.1.4
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.12.23.05.17.49;	author jsg;	state dead;
branches;
next	1.9;
commitid	TnlogFl9nOv2eaRf;

1.9
date	2015.02.20.23.09.58;	author jsg;	state Exp;
branches;
next	1.8;
commitid	4ry2gvZGMXkCUD2n;

1.8
date	2015.01.25.14.41.20;	author jsg;	state Exp;
branches;
next	1.7;
commitid	mcxB0JvoI9gTDYXU;

1.7
date	2014.07.09.21.08.59;	author jsg;	state Exp;
branches;
next	1.6;
commitid	WPD6rgPryPkvXOr9;

1.6
date	2013.09.05.14.04.17;	author jsg;	state Exp;
branches;
next	1.5;

1.5
date	2011.10.23.13.37.39;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.22.20.06.18;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.17.20.26.39;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.14.58.15;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.52.42;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.52.42;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.28.33;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.36;	author matthieu;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2013.09.05.13.15.30;	author jsg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2014.07.09.20.34.49;	author jsg;	state Exp;
branches;
next	1.1.1.6;
commitid	3JhLfwcuBALP0ZR7;

1.1.1.6
date	2015.01.25.14.11.33;	author jsg;	state Exp;
branches;
next	1.1.1.7;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.7
date	2015.02.20.22.48.40;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.10
log
@remove the now unused Mesa 10.2.9 code
@
text
@ /**************************************************************************
 *
 * Copyright 2005 VMware, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

#ifndef BRW_DRAW_H
#define BRW_DRAW_H

#include "main/mtypes.h"		/* for struct gl_context... */
#include "vbo/vbo.h"

struct brw_context;


void brw_draw_prims( struct gl_context *ctx,
		     const struct _mesa_prim *prims,
		     GLuint nr_prims,
		     const struct _mesa_index_buffer *ib,
		     GLboolean index_bounds_valid,
		     GLuint min_index,
		     GLuint max_index,
		     struct gl_transform_feedback_object *unused_tfb_object,
		     struct gl_buffer_object *indirect );

void brw_draw_init( struct brw_context *brw );
void brw_draw_destroy( struct brw_context *brw );

/* brw_primitive_restart.c */
GLboolean
brw_handle_primitive_restart(struct gl_context *ctx,
                             const struct _mesa_prim *prims,
                             GLuint nr_prims,
                             const struct _mesa_index_buffer *ib,
                             struct gl_buffer_object *indirect);

#endif
@


1.9
log
@Merge Mesa 10.2.9
@
text
@@


1.8
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@a49 2
void brw_prepare_shader_draw_parameters(struct brw_context *);

@


1.7
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@d50 2
@


1.6
log
@Merge Mesa 9.2.0
@
text
@d2 2
a3 2
 * 
 * Copyright 2005 Tungsten Graphics, Inc., Cedar Park, Texas.
d5 1
a5 1
 * 
d13 1
a13 1
 * 
d17 1
a17 1
 * 
d21 1
a21 1
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
d25 1
a25 1
 * 
d44 2
a45 1
		     struct gl_transform_feedback_object *tfb_vertcount );
d53 1
a53 1
                             const struct _mesa_prim *prim,
d55 2
a56 1
                             const struct _mesa_index_buffer *ib);
@


1.5
log
@Merge Mesa 7.10.3
@
text
@a37 1
		     const struct gl_client_array *arrays[],
d43 2
a44 1
		     GLuint max_index );
d49 6
a54 4
/* brw_draw_current.c
 */
void brw_init_current_values(struct gl_context *ctx,
			     struct gl_client_array *arrays);
@


1.4
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d31 1
a31 1
#include "main/mtypes.h"		/* for GLcontext... */
d37 1
a37 1
void brw_draw_prims( GLcontext *ctx,
d51 1
a51 1
void brw_init_current_values(GLcontext *ctx,
@


1.3
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d42 1
@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d31 1
a31 1
#include "mtypes.h"		/* for GLcontext... */
a33 1
#include "dri_bufmgr.h"
a51 23


/* brw_draw_upload.c
 */
int brw_prepare_indices( struct brw_context *brw,
			 const struct _mesa_index_buffer *index_buffer,
			 dri_bo **bo_return,
			 GLuint *offset_return);

void brw_emit_indices( struct brw_context *brw,
		       const struct _mesa_index_buffer *index_buffer,
		       dri_bo *bo,
		       GLuint offset);

int brw_prepare_vertices( struct brw_context *brw,
			       GLuint min_index,
			       GLuint max_index );

void brw_emit_vertices( struct brw_context *brw,
			       GLuint min_index,
			       GLuint max_index );


@


1.1
log
@Initial revision
@
text
@d32 1
a32 1
#include "brw_attrib.h"
d34 1
d37 8
a44 34
struct brw_draw_prim {
   GLuint mode:8;
   GLuint indexed:1;
   GLuint begin:1;
   GLuint end:1;
   GLuint weak:1;
   GLuint pad:20;

   GLuint start;
   GLuint count;
};

struct brw_draw_index_buffer {
   GLuint count;
   GLenum type;
   struct gl_buffer_object *obj;
   const void *ptr;
   GLuint rebase;
};


#define BRW_DRAW_SORTED           0x1
#define BRW_DRAW_ALL_INTERLEAVED  0x2
#define BRW_DRAW_NON_INTERLEAVED  0x4
#define BRW_DRAW_LOCKED           0x8

GLboolean brw_draw_prims( GLcontext *ctx,
			  const struct gl_client_array *arrays[],
			  const struct brw_draw_prim *prims,
			  GLuint nr_prims,
			  const struct brw_draw_index_buffer *ib,
			  GLuint min_index,
			  GLuint max_index,
			  GLuint flags );
d57 9
a65 2
void brw_upload_indices( struct brw_context *brw,
			 const struct brw_draw_index_buffer *index_buffer);
d67 1
a67 1
GLboolean brw_upload_vertices( struct brw_context *brw,
d71 3
a74 9
/* Helpers for save, exec.  Should probably have their own file:
 */
struct brw_exec_context;
struct brw_save_context;

struct brw_exec_save {
   struct brw_exec_context *exec;
   struct brw_save_context *save;
};
a75 3
/* Doesn't really belong here:
 */
#define IMM_CONTEXT(ctx) ((struct brw_exec_save *)((ctx)->swtnl_im))
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Mesa 7.0.1
@
text
@d32 1
a32 1
#include "vbo/vbo.h"
d36 34
a69 8

void brw_draw_prims( GLcontext *ctx,
		     const struct gl_client_array *arrays[],
		     const struct _mesa_prim *prims,
		     GLuint nr_prims,
		     const struct _mesa_index_buffer *ib,
		     GLuint min_index,
		     GLuint max_index );
d83 1
a83 1
			 const struct _mesa_index_buffer *index_buffer);
d90 13
@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@d31 1
a31 1
#include "main/mtypes.h"		/* for struct gl_context... */
d37 1
a37 1
void brw_draw_prims( struct gl_context *ctx,
a41 1
		     GLboolean index_bounds_valid,
d50 1
a50 1
void brw_init_current_values(struct gl_context *ctx,
d52 12
@


1.1.1.4
log
@Import Mesa 9.2.0
@
text
@d38 1
d44 1
a44 2
		     GLuint max_index,
		     struct gl_transform_feedback_object *tfb_vertcount );
d49 4
a52 6
/* brw_primitive_restart.c */
GLboolean
brw_handle_primitive_restart(struct gl_context *ctx,
                             const struct _mesa_prim *prim,
                             GLuint nr_prims,
                             const struct _mesa_index_buffer *ib);
@


1.1.1.5
log
@Import Mesa 10.2.3
@
text
@d2 2
a3 2
 *
 * Copyright 2005 VMware, Inc.
d5 1
a5 1
 *
d13 1
a13 1
 *
d17 1
a17 1
 *
d21 1
a21 1
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
d25 1
a25 1
 *
d44 1
a44 2
		     struct gl_transform_feedback_object *unused_tfb_object,
		     struct gl_buffer_object *indirect );
d52 1
a52 1
                             const struct _mesa_prim *prims,
d54 1
a54 2
                             const struct _mesa_index_buffer *ib,
                             struct gl_buffer_object *indirect);
@


1.1.1.6
log
@Import Mesa 10.4.3
@
text
@a49 2
void brw_prepare_shader_draw_parameters(struct brw_context *);

@


1.1.1.7
log
@Import Mesa 10.2.9
@
text
@d50 2
@


