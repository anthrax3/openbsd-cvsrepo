head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2008.11.02.14.58.14;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2006.11.25.18.52.37;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.52.37;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@#ifndef INTEL_ROTATE_H
#define INTEL_ROTATE_H 1

struct matrix23
{
   int m00, m01, m02;
   int m10, m11, m12;
};



extern void
matrix23Set(struct matrix23 *m,
            int m00, int m01, int m02,
            int m10, int m11, int m12);

extern void
matrix23TransformCoordi(const struct matrix23 *m, int *x, int *y);

extern void
matrix23TransformCoordf(const struct matrix23 *m, float *x, float *y);

extern void
matrix23TransformDistance(const struct matrix23 *m, int *xDist, int *yDist);

extern void
matrix23TransformRect(const struct matrix23 *m,
                      int *x, int *y, int *w, int *h);

extern void
matrix23Rotate(struct matrix23 *m, int width, int height, int angle);

extern void
matrix23Flip(struct matrix23 *m, int width, int height, int xflip, int yflip);

extern void
matrix23Multiply(struct matrix23 *result,
                 const struct matrix23 *a, const struct matrix23 *b);


#endif /* INTEL_ROTATE_H */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@
