head	1.6;
access;
symbols
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.2.0.8
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.6
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v6_5_2:1.1.1.2
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2013.09.05.14.04.37;	author jsg;	state dead;
branches;
next	1.5;

1.5
date	2012.08.17.13.58.15;	author mpi;	state Exp;
branches;
next	1.4;

1.4
date	2011.10.23.13.37.39;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.22.20.06.19;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.39;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.52.54;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.52.54;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.11.57.19;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.38;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merge Mesa 9.2.0
@
text
@/* -*- mode: c; c-basic-offset: 3 -*- */
/*
 * Copyright 2000 Gareth Hughes
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * GARETH HUGHES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/*
 * Authors:
 *	Gareth Hughes <gareth@@valinux.com>
 *	Leif Delgass <ldelgass@@retinalburn.net>
 *	José Fonseca <j_r_fonseca@@yahoo.co.uk>
 */

#include "mach64_context.h"
#include "mach64_ioctl.h"
#include "mach64_dd.h"

#include "main/context.h"

#include "utils.h"

/* Return the current color buffer size.
 */
static void mach64DDGetBufferSize( struct gl_framebuffer *buffer,
				   GLuint *width, GLuint *height )
{
   GET_CURRENT_CONTEXT(ctx);
   mach64ContextPtr mmesa = MACH64_CONTEXT(ctx);

   LOCK_HARDWARE( mmesa );
   *width  = mmesa->driDrawable->w;
   *height = mmesa->driDrawable->h;
   UNLOCK_HARDWARE( mmesa );
}

/* Return various strings for glGetString().
 */
static const GLubyte *mach64DDGetString( struct gl_context *ctx, GLenum name )
{
   mach64ContextPtr mmesa = MACH64_CONTEXT(ctx);
   static char buffer[128];
   unsigned   offset;
   const char * card_name = "Mach64 [Rage Pro]";
   GLuint agp_mode = mmesa->mach64Screen->IsPCI ? 0 :
      mmesa->mach64Screen->AGPMode;

   switch ( name ) {
   case GL_VENDOR:
      return (GLubyte*)"Gareth Hughes, Leif Delgass, José Fonseca";

   case GL_RENDERER:
 
      offset = driGetRendererString( buffer, card_name, agp_mode );
      return (GLubyte *)buffer;

   default:
      return NULL;
   }
}

/* Send all commands to the hardware.  If vertex buffers or indirect
 * buffers are in use, then we need to make sure they are sent to the
 * hardware.  All commands that are normally sent to the ring are
 * already considered `flushed'.
 */
static void mach64DDFlush( struct gl_context *ctx )
{
   mach64ContextPtr mmesa = MACH64_CONTEXT(ctx);

   LOCK_HARDWARE( mmesa );
   FLUSH_DMA_LOCKED( mmesa );
   UNLOCK_HARDWARE( mmesa );

#if ENABLE_PERF_BOXES
   if ( mmesa->boxes ) {
      LOCK_HARDWARE( mmesa );
      mach64PerformanceBoxesLocked( mmesa );
      UNLOCK_HARDWARE( mmesa );
   }

   /* Log the performance counters if necessary */
   mach64PerformanceCounters( mmesa );
#endif
}

/* Make sure all commands have been sent to the hardware and have
 * completed processing.
 */
static void mach64DDFinish( struct gl_context *ctx )
{
   mach64ContextPtr mmesa = MACH64_CONTEXT(ctx);

#if ENABLE_PERF_BOXES
   /* Bump the performance counter */
   mmesa->c_drawWaits++;
#endif

   mach64DDFlush( ctx );
   mach64WaitForIdle( mmesa );
}

/* Initialize the driver's misc functions.
 */
void mach64InitDriverFuncs( struct dd_function_table *functions )
{
   functions->GetBufferSize	= mach64DDGetBufferSize;
   functions->GetString	= mach64DDGetString;
   functions->Finish		= mach64DDFinish;
   functions->Flush		= mach64DDFlush;

}
@


1.5
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@@


1.4
log
@Merge Mesa 7.10.3
@
text
@a39 2
#define DRIVER_DATE	"20051019"

d71 1
a71 2
      offset = driGetRendererString( buffer, card_name, DRIVER_DATE,
				     agp_mode );
@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d44 1
a44 1
static void mach64DDGetBufferSize( GLframebuffer *buffer,
d58 1
a58 1
static const GLubyte *mach64DDGetString( GLcontext *ctx, GLenum name )
d87 1
a87 1
static void mach64DDFlush( GLcontext *ctx )
d110 1
a110 1
static void mach64DDFinish( GLcontext *ctx )
@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@a33 2
#include "mach64_state.h"
#include "mach64_vb.h"
a36 1
#include "main/framebuffer.h"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $XFree86$ */ /* -*- mode: c; c-basic-offset: 3 -*- */
d38 3
a40 1
#include "context.h"
a41 1
#include "framebuffer.h"
a130 1
   functions->ResizeBuffers    = _mesa_resize_framebuffer;
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@import MesaLibs version 6.5.2
@
text
@d130 1
@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@d1 1
a1 1
/* -*- mode: c; c-basic-offset: 3 -*- */
d34 2
d38 1
a38 2
#include "main/context.h"

d40 1
d46 1
a46 1
static void mach64DDGetBufferSize( struct gl_framebuffer *buffer,
d60 1
a60 1
static const GLubyte *mach64DDGetString( struct gl_context *ctx, GLenum name )
d89 1
a89 1
static void mach64DDFlush( struct gl_context *ctx )
d112 1
a112 1
static void mach64DDFinish( struct gl_context *ctx )
@


