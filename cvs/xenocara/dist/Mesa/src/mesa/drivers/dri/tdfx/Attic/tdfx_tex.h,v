head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.8
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	v7_10_3:1.1.1.2
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.09.05.14.05.49;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2011.10.23.13.37.41;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.54.04;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.54.04;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.10.23.13.29.43;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge Mesa 9.2.0
@
text
@/* -*- mode: c; c-basic-offset: 3 -*-
 *
 * Copyright 2000 VA Linux Systems Inc., Fremont, California.
 *
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * VA LINUX SYSTEMS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Original rewrite:
 *	Gareth Hughes <gareth@@valinux.com>, 29 Sep - 1 Oct 2000
 *
 * Authors:
 *	Gareth Hughes <gareth@@valinux.com>
 *	Brian Paul <brianp@@valinux.com>
 *
 */

#ifndef _TDFX_TEX_H_
#define _TDFX_TEX_H_


#define tdfxDDIsCompressedFormatMacro(internalFormat) \
    (((internalFormat) == GL_COMPRESSED_RGB_FXT1_3DFX) || \
     ((internalFormat) == GL_COMPRESSED_RGBA_FXT1_3DFX))
#define tdfxDDIsCompressedGlideFormatMacro(internalFormat) \
    ((internalFormat) == GR_TEXFMT_ARGB_CMP_FXT1)



extern void
tdfxTexValidate(struct gl_context * ctx, struct gl_texture_object *tObj);


#if 000 /* DEAD? */
extern void
fxDDTexUseGlobalPalette(struct gl_context * ctx, GLboolean state);
#endif

extern GLboolean
tdfxTestProxyTexImage(struct gl_context *ctx, GLenum target,
                        GLint level, GLint internalFormat,
                        GLenum format, GLenum type,
                        GLint width, GLint height,
                        GLint depth, GLint border);

extern GLvoid *
tdfxDDGetTexImage(struct gl_context * ctx, GLenum target, GLint level,
                  const struct gl_texture_object *texObj,
                  GLenum * formatOut, GLenum * typeOut,
                  GLboolean * freeImageOut);

extern void
tdfxDDGetCompressedTexImage( struct gl_context *ctx, GLenum target,
                             GLint lod, void *image,
                             const struct gl_texture_object *texObj,
                             struct gl_texture_image *texImage );

extern GLint
tdfxSpecificCompressedTexFormat(struct gl_context *ctx,
                                  GLint internalFormat,
                                  GLint numDimensions);

extern GLint
tdfxBaseCompressedTexFormat(struct gl_context *ctx,
                              GLint internalFormat);

extern GLboolean
tdfxDDIsCompressedFormat(struct gl_context *ctx, GLint internalFormat);

extern GLsizei
tdfxDDCompressedImageSize(struct gl_context *ctx,
                          GLenum intFormat,
                          GLuint numDimensions,
                          GLuint width,
                          GLuint height,
                          GLuint depth);


extern void
tdfxInitTextureFuncs( struct dd_function_table *functions );

#endif
@


1.3
log
@Merge Mesa 7.10.3
@
text
@@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d50 1
a50 1
tdfxTexValidate(GLcontext * ctx, struct gl_texture_object *tObj);
d55 1
a55 1
fxDDTexUseGlobalPalette(GLcontext * ctx, GLboolean state);
d59 1
a59 1
tdfxTestProxyTexImage(GLcontext *ctx, GLenum target,
d66 1
a66 1
tdfxDDGetTexImage(GLcontext * ctx, GLenum target, GLint level,
d72 1
a72 1
tdfxDDGetCompressedTexImage( GLcontext *ctx, GLenum target,
d78 1
a78 1
tdfxSpecificCompressedTexFormat(GLcontext *ctx,
d83 1
a83 1
tdfxBaseCompressedTexFormat(GLcontext *ctx,
d87 1
a87 1
tdfxDDIsCompressedFormat(GLcontext *ctx, GLint internalFormat);
d90 1
a90 1
tdfxDDCompressedImageSize(GLcontext *ctx,
@


1.1
log
@Initial revision
@
text
@a25 1
/* $XFree86: xc/lib/GL/mesa/src/drv/tdfx/tdfx_tex.h,v 1.2 2002/02/22 21:45:04 dawes Exp $ */
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Import Mesa 7.10.3
@
text
@d26 1
d51 1
a51 1
tdfxTexValidate(struct gl_context * ctx, struct gl_texture_object *tObj);
d56 1
a56 1
fxDDTexUseGlobalPalette(struct gl_context * ctx, GLboolean state);
d60 1
a60 1
tdfxTestProxyTexImage(struct gl_context *ctx, GLenum target,
d67 1
a67 1
tdfxDDGetTexImage(struct gl_context * ctx, GLenum target, GLint level,
d73 1
a73 1
tdfxDDGetCompressedTexImage( struct gl_context *ctx, GLenum target,
d79 1
a79 1
tdfxSpecificCompressedTexFormat(struct gl_context *ctx,
d84 1
a84 1
tdfxBaseCompressedTexFormat(struct gl_context *ctx,
d88 1
a88 1
tdfxDDIsCompressedFormat(struct gl_context *ctx, GLint internalFormat);
d91 1
a91 1
tdfxDDCompressedImageSize(struct gl_context *ctx,
@

