head	1.6;
access;
symbols
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2013.09.05.14.04.35;	author jsg;	state dead;
branches;
next	1.5;

1.5
date	2012.08.17.13.58.15;	author mpi;	state Exp;
branches;
next	1.4;

1.4
date	2011.10.23.13.37.39;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.22.20.06.19;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.39;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.02.14.58.16;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.38;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merge Mesa 9.2.0
@
text
@/**************************************************************************
 * 
 * Copyright 2003 Tungsten Graphics, Inc., Cedar Park, Texas.
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 **************************************************************************/

#ifndef INTELTEX_INC
#define INTELTEX_INC

#include "main/mtypes.h"
#include "main/formats.h"
#include "intel_context.h"

void intelInitTextureFuncs(struct dd_function_table *functions);

void intelInitTextureImageFuncs(struct dd_function_table *functions);

void intelInitTextureSubImageFuncs(struct dd_function_table *functions);

void intelInitTextureCopyImageFuncs(struct dd_function_table *functions);

GLenum intel_mesa_format_to_rb_datatype(gl_format format);

void intelSetTexBuffer(__DRIcontext *pDRICtx,
		       GLint target, __DRIdrawable *pDraw);
void intelSetTexBuffer2(__DRIcontext *pDRICtx,
			GLint target, GLint format, __DRIdrawable *pDraw);

GLuint intel_finalize_mipmap_tree(struct intel_context *intel, GLuint unit);

void intel_tex_map_level_images(struct intel_context *intel,
				struct intel_texture_object *intelObj,
				int level);

void intel_tex_unmap_level_images(struct intel_context *intel,
				  struct intel_texture_object *intelObj,
				  int level);

void intel_tex_map_images(struct intel_context *intel,
                          struct intel_texture_object *intelObj);

void intel_tex_unmap_images(struct intel_context *intel,
                            struct intel_texture_object *intelObj);

int intel_compressed_num_bytes(GLuint mesaFormat);

GLboolean intel_copy_texsubimage(struct intel_context *intel,
                                 GLenum target,
                                 struct intel_texture_image *intelImage,
                                 GLenum internalFormat,
                                 GLint dstx, GLint dsty,
                                 GLint x, GLint y,
                                 GLsizei width, GLsizei height);

#endif
@


1.5
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@@


1.4
log
@Merge Mesa 7.10.3
@
text
@a42 2
gl_format intelChooseTextureFormat(struct gl_context *ctx, GLint internalFormat,
                                   GLenum format, GLenum type);
d67 8
@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@a33 2
#include "texmem.h"

d43 1
a43 1
gl_format intelChooseTextureFormat(GLcontext *ctx, GLint internalFormat,
d45 1
@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d32 1
d39 8
a46 109
const struct gl_texture_format *intelChooseTextureFormat(GLcontext * ctx,
                                                         GLint internalFormat,
                                                         GLenum format,
                                                         GLenum type);


void intelTexImage3D(GLcontext * ctx,
                     GLenum target, GLint level,
                     GLint internalFormat,
                     GLint width, GLint height, GLint depth,
                     GLint border,
                     GLenum format, GLenum type, const void *pixels,
                     const struct gl_pixelstore_attrib *packing,
                     struct gl_texture_object *texObj,
                     struct gl_texture_image *texImage);

void intelTexSubImage3D(GLcontext * ctx,
                        GLenum target,
                        GLint level,
                        GLint xoffset, GLint yoffset, GLint zoffset,
                        GLsizei width, GLsizei height, GLsizei depth,
                        GLenum format, GLenum type,
                        const GLvoid * pixels,
                        const struct gl_pixelstore_attrib *packing,
                        struct gl_texture_object *texObj,
                        struct gl_texture_image *texImage);

void intelTexImage2D(GLcontext * ctx,
                     GLenum target, GLint level,
                     GLint internalFormat,
                     GLint width, GLint height, GLint border,
                     GLenum format, GLenum type, const void *pixels,
                     const struct gl_pixelstore_attrib *packing,
                     struct gl_texture_object *texObj,
                     struct gl_texture_image *texImage);

void intelTexSubImage2D(GLcontext * ctx,
                        GLenum target,
                        GLint level,
                        GLint xoffset, GLint yoffset,
                        GLsizei width, GLsizei height,
                        GLenum format, GLenum type,
                        const GLvoid * pixels,
                        const struct gl_pixelstore_attrib *packing,
                        struct gl_texture_object *texObj,
                        struct gl_texture_image *texImage);

void intelTexImage1D(GLcontext * ctx,
                     GLenum target, GLint level,
                     GLint internalFormat,
                     GLint width, GLint border,
                     GLenum format, GLenum type, const void *pixels,
                     const struct gl_pixelstore_attrib *packing,
                     struct gl_texture_object *texObj,
                     struct gl_texture_image *texImage);

void intelTexSubImage1D(GLcontext * ctx,
                        GLenum target,
                        GLint level,
                        GLint xoffset,
                        GLsizei width,
                        GLenum format, GLenum type,
                        const GLvoid * pixels,
                        const struct gl_pixelstore_attrib *packing,
                        struct gl_texture_object *texObj,
                        struct gl_texture_image *texImage);

void intelCopyTexImage1D(GLcontext * ctx, GLenum target, GLint level,
                         GLenum internalFormat,
                         GLint x, GLint y, GLsizei width, GLint border);

void intelCopyTexImage2D(GLcontext * ctx, GLenum target, GLint level,
                         GLenum internalFormat,
                         GLint x, GLint y, GLsizei width, GLsizei height,
                         GLint border);

void intelCopyTexSubImage1D(GLcontext * ctx, GLenum target, GLint level,
                            GLint xoffset, GLint x, GLint y, GLsizei width);

void intelCopyTexSubImage2D(GLcontext * ctx, GLenum target, GLint level,
                            GLint xoffset, GLint yoffset,
                            GLint x, GLint y, GLsizei width, GLsizei height);

void intelGetTexImage(GLcontext * ctx, GLenum target, GLint level,
                      GLenum format, GLenum type, GLvoid * pixels,
                      struct gl_texture_object *texObj,
                      struct gl_texture_image *texImage);

void intelCompressedTexImage2D( GLcontext *ctx, GLenum target, GLint level,
				GLint internalFormat,
				GLint width, GLint height, GLint border,
				GLsizei imageSize, const GLvoid *data,
				struct gl_texture_object *texObj,
				struct gl_texture_image *texImage );

void intelCompressedTexSubImage2D(GLcontext * ctx,
				  GLenum target,
				  GLint level,
				  GLint xoffset, GLint yoffset,
				  GLsizei width, GLsizei height,
				  GLenum format, GLsizei imageSize,
				  const GLvoid * pixels,
				  struct gl_texture_object *texObj,
				  struct gl_texture_image *texImage);

void intelGetCompressedTexImage(GLcontext *ctx, GLenum target, GLint level,
				GLvoid *pixels,
				struct gl_texture_object *texObj,
				struct gl_texture_image *texImage);
a47 2
void intelSetTexOffset(__DRIcontext *pDRICtx, GLint texname,
		       unsigned long long offset, GLint depth, GLuint pitch);
d50 2
a69 3

void intel_generate_mipmap(GLcontext *ctx, GLenum target,
			   struct gl_texture_object *texObj);
@


1.1
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d31 1
a31 1
#include "mtypes.h"
d132 10
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d31 1
a31 2
#include "main/mtypes.h"
#include "main/formats.h"
d33 2
d38 99
a136 9
void intelInitTextureImageFuncs(struct dd_function_table *functions);

void intelInitTextureSubImageFuncs(struct dd_function_table *functions);

void intelInitTextureCopyImageFuncs(struct dd_function_table *functions);

gl_format intelChooseTextureFormat(struct gl_context *ctx, GLint internalFormat,
                                   GLenum format, GLenum type);
GLenum intel_mesa_format_to_rb_datatype(gl_format format);
d138 2
a141 2
void intelSetTexBuffer2(__DRIcontext *pDRICtx,
			GLint target, GLint format, __DRIdrawable *pDraw);
d160 3
@


