head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v7_0_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2008.11.02.14.58.17;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2007.11.24.17.29.00;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.11.24.17.29.00;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@
#ifndef __NOUVEAU_STATE_CACHE_H__
#define __NOUVEAU_STATE_CACHE_H__

#include "mtypes.h"

#define NOUVEAU_STATE_CACHE_ENTRIES 2048
// size of a dirty requests block
// you can play with that and tune the value to increase/decrease performance
// but keep it a power of 2 !
#define NOUVEAU_STATE_CACHE_HIER_SIZE  32

typedef struct nouveau_state_atom_t{
	uint32_t value;
	uint32_t dirty;
}nouveau_state_atom;

typedef struct nouveau_state_cache_t{
	nouveau_state_atom atoms[NOUVEAU_STATE_CACHE_ENTRIES];
	uint32_t current_pos;
	// hierarchical dirty flags
	uint8_t hdirty[NOUVEAU_STATE_CACHE_ENTRIES/NOUVEAU_STATE_CACHE_HIER_SIZE];
	// master dirty flag
	uint8_t dirty;
}nouveau_state_cache;


#endif

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Mesa 7.0.1
@
text
@@
