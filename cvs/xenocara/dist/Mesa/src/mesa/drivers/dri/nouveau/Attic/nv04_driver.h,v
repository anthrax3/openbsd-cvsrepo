head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.14
	OPENBSD_5_7_BASE:1.2
	v10_2_9:1.1.1.1
	v10_4_3:1.1.1.1
	v10_2_7:1.1.1.1
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	v10_2_3:1.1.1.1
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.12.23.05.17.50;	author jsg;	state dead;
branches;
next	1.2;
commitid	TnlogFl9nOv2eaRf;

1.2
date	2011.10.23.13.37.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.20;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.39;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright (C) 2009 Francisco Jerez.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef __NV04_DRIVER_H__
#define __NV04_DRIVER_H__

#include "nv04_context.h"

enum {
	NOUVEAU_STATE_BLEND = NUM_NOUVEAU_STATE,
	NOUVEAU_STATE_CONTROL,
	NUM_NV04_STATE
};

#define NV04_TEXTURE_UNITS 2

/* nv04_render.c */
void
nv04_render_init(struct gl_context *ctx);

void
nv04_render_destroy(struct gl_context *ctx);

/* nv04_surface.c */
GLboolean
nv04_surface_init(struct gl_context *ctx);

void
nv04_surface_takedown(struct gl_context *ctx);

void
nv04_surface_copy(struct gl_context *ctx,
		  struct nouveau_surface *dst, struct nouveau_surface *src,
		  int dx, int dy, int sx, int sy, int w, int h);

void
nv04_surface_fill(struct gl_context *ctx,
		  struct nouveau_surface *dst,
		  unsigned mask, unsigned value,
		  int dx, int dy, int w, int h);

/* nv04_state_fb.c */
void
nv04_emit_framebuffer(struct gl_context *ctx, int emit);

void
nv04_emit_scissor(struct gl_context *ctx, int emit);

/* nv04_state_raster.c */
void
nv04_defer_control(struct gl_context *ctx, int emit);

void
nv04_emit_control(struct gl_context *ctx, int emit);

void
nv04_defer_blend(struct gl_context *ctx, int emit);

void
nv04_emit_blend(struct gl_context *ctx, int emit);

/* nv04_state_frag.c */
void
nv04_emit_tex_env(struct gl_context *ctx, int emit);

/* nv04_state_tex.c */
void
nv04_emit_tex_obj(struct gl_context *ctx, int emit);

#endif
@


1.2
log
@Merge Mesa 7.10.3
@
text
@@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d42 1
a42 1
nv04_render_init(GLcontext *ctx);
d45 1
a45 1
nv04_render_destroy(GLcontext *ctx);
d49 1
a49 1
nv04_surface_init(GLcontext *ctx);
d52 1
a52 1
nv04_surface_takedown(GLcontext *ctx);
d55 1
a55 1
nv04_surface_copy(GLcontext *ctx,
d60 1
a60 1
nv04_surface_fill(GLcontext *ctx,
d67 1
a67 1
nv04_emit_framebuffer(GLcontext *ctx, int emit);
d70 1
a70 1
nv04_emit_scissor(GLcontext *ctx, int emit);
d74 1
a74 1
nv04_defer_control(GLcontext *ctx, int emit);
d77 1
a77 1
nv04_emit_control(GLcontext *ctx, int emit);
d80 1
a80 1
nv04_defer_blend(GLcontext *ctx, int emit);
d83 1
a83 1
nv04_emit_blend(GLcontext *ctx, int emit);
d87 1
a87 1
nv04_emit_tex_env(GLcontext *ctx, int emit);
d91 1
a91 1
nv04_emit_tex_obj(GLcontext *ctx, int emit);
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d42 1
a42 1
nv04_render_init(struct gl_context *ctx);
d45 1
a45 1
nv04_render_destroy(struct gl_context *ctx);
d49 1
a49 1
nv04_surface_init(struct gl_context *ctx);
d52 1
a52 1
nv04_surface_takedown(struct gl_context *ctx);
d55 1
a55 1
nv04_surface_copy(struct gl_context *ctx,
d60 1
a60 1
nv04_surface_fill(struct gl_context *ctx,
d67 1
a67 1
nv04_emit_framebuffer(struct gl_context *ctx, int emit);
d70 1
a70 1
nv04_emit_scissor(struct gl_context *ctx, int emit);
d74 1
a74 1
nv04_defer_control(struct gl_context *ctx, int emit);
d77 1
a77 1
nv04_emit_control(struct gl_context *ctx, int emit);
d80 1
a80 1
nv04_defer_blend(struct gl_context *ctx, int emit);
d83 1
a83 1
nv04_emit_blend(struct gl_context *ctx, int emit);
d87 1
a87 1
nv04_emit_tex_env(struct gl_context *ctx, int emit);
d91 1
a91 1
nv04_emit_tex_obj(struct gl_context *ctx, int emit);
@

