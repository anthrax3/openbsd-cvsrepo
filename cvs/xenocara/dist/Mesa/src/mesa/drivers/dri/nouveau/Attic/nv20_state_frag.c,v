head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.12.23.05.17.50;	author jsg;	state dead;
branches;
next	1.3;
commitid	TnlogFl9nOv2eaRf;

1.3
date	2013.09.05.14.04.51;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.22;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.40;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.15.57;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright (C) 2009-2010 Francisco Jerez.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

#include "nouveau_driver.h"
#include "nouveau_context.h"
#include "nv20_3d.xml.h"
#include "nv10_driver.h"
#include "nv20_driver.h"

void
nv20_emit_tex_env(struct gl_context *ctx, int emit)
{
	const int i = emit - NOUVEAU_STATE_TEX_ENV0;
	struct nouveau_pushbuf *push = context_push(ctx);
	uint32_t a_in, a_out, c_in, c_out, k;

	nv10_get_general_combiner(ctx, i, &a_in, &a_out, &c_in, &c_out, &k);

	BEGIN_NV04(push, NV20_3D(RC_IN_ALPHA(i)), 1);
	PUSH_DATA (push, a_in);
	BEGIN_NV04(push, NV20_3D(RC_OUT_ALPHA(i)), 1);
	PUSH_DATA (push, a_out);
	BEGIN_NV04(push, NV20_3D(RC_IN_RGB(i)), 1);
	PUSH_DATA (push, c_in);
	BEGIN_NV04(push, NV20_3D(RC_OUT_RGB(i)), 1);
	PUSH_DATA (push, c_out);
	BEGIN_NV04(push, NV20_3D(RC_CONSTANT_COLOR0(i)), 1);
	PUSH_DATA (push, k);

	context_dirty(ctx, FRAG);
}

void
nv20_emit_frag(struct gl_context *ctx, int emit)
{
	struct nouveau_pushbuf *push = context_push(ctx);
	uint64_t in;
	int n;

	nv10_get_final_combiner(ctx, &in, &n);

	BEGIN_NV04(push, NV20_3D(RC_FINAL0), 2);
	PUSH_DATA (push, in);
	PUSH_DATA (push, in >> 32);

	BEGIN_NV04(push, NV20_3D(RC_ENABLE), 1);
	PUSH_DATA (push, n);
}
@


1.3
log
@Merge Mesa 9.2.0
@
text
@@


1.2
log
@Merge Mesa 7.10.3
@
text
@d37 1
a37 2
	struct nouveau_channel *chan = context_chan(ctx);
	struct nouveau_grobj *kelvin = context_eng3d(ctx);
d42 10
a51 10
	BEGIN_RING(chan, kelvin, NV20_3D_RC_IN_ALPHA(i), 1);
	OUT_RING(chan, a_in);
	BEGIN_RING(chan, kelvin, NV20_3D_RC_OUT_ALPHA(i), 1);
	OUT_RING(chan, a_out);
	BEGIN_RING(chan, kelvin, NV20_3D_RC_IN_RGB(i), 1);
	OUT_RING(chan, c_in);
	BEGIN_RING(chan, kelvin, NV20_3D_RC_OUT_RGB(i), 1);
	OUT_RING(chan, c_out);
	BEGIN_RING(chan, kelvin, NV20_3D_RC_CONSTANT_COLOR0(i), 1);
	OUT_RING(chan, k);
d59 1
a59 2
	struct nouveau_channel *chan = context_chan(ctx);
	struct nouveau_grobj *kelvin = context_eng3d(ctx);
d65 3
a67 3
	BEGIN_RING(chan, kelvin, NV20_3D_RC_FINAL0, 2);
	OUT_RING(chan, in);
	OUT_RING(chan, in >> 32);
d69 2
a70 2
	BEGIN_RING(chan, kelvin, NV20_3D_RC_ENABLE, 1);
	OUT_RING(chan, n);
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d29 1
a29 1
#include "nouveau_class.h"
d34 1
a34 1
nv20_emit_tex_env(GLcontext *ctx, int emit)
d43 1
a43 1
	BEGIN_RING(chan, kelvin, NV20TCL_RC_IN_ALPHA(i), 1);
d45 1
a45 1
	BEGIN_RING(chan, kelvin, NV20TCL_RC_OUT_ALPHA(i), 1);
d47 1
a47 1
	BEGIN_RING(chan, kelvin, NV20TCL_RC_IN_RGB(i), 1);
d49 1
a49 1
	BEGIN_RING(chan, kelvin, NV20TCL_RC_OUT_RGB(i), 1);
d51 1
a51 1
	BEGIN_RING(chan, kelvin, NV20TCL_RC_CONSTANT_COLOR0(i), 1);
d58 1
a58 1
nv20_emit_frag(GLcontext *ctx, int emit)
d67 1
a67 1
	BEGIN_RING(chan, kelvin, NV20TCL_RC_FINAL0, 2);
d71 1
a71 1
	BEGIN_RING(chan, kelvin, NV20TCL_RC_ENABLE, 1);
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d29 1
a29 1
#include "nv20_3d.xml.h"
d34 1
a34 1
nv20_emit_tex_env(struct gl_context *ctx, int emit)
d43 1
a43 1
	BEGIN_RING(chan, kelvin, NV20_3D_RC_IN_ALPHA(i), 1);
d45 1
a45 1
	BEGIN_RING(chan, kelvin, NV20_3D_RC_OUT_ALPHA(i), 1);
d47 1
a47 1
	BEGIN_RING(chan, kelvin, NV20_3D_RC_IN_RGB(i), 1);
d49 1
a49 1
	BEGIN_RING(chan, kelvin, NV20_3D_RC_OUT_RGB(i), 1);
d51 1
a51 1
	BEGIN_RING(chan, kelvin, NV20_3D_RC_CONSTANT_COLOR0(i), 1);
d58 1
a58 1
nv20_emit_frag(struct gl_context *ctx, int emit)
d67 1
a67 1
	BEGIN_RING(chan, kelvin, NV20_3D_RC_FINAL0, 2);
d71 1
a71 1
	BEGIN_RING(chan, kelvin, NV20_3D_RC_ENABLE, 1);
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d37 2
a38 1
	struct nouveau_pushbuf *push = context_push(ctx);
d43 10
a52 10
	BEGIN_NV04(push, NV20_3D(RC_IN_ALPHA(i)), 1);
	PUSH_DATA (push, a_in);
	BEGIN_NV04(push, NV20_3D(RC_OUT_ALPHA(i)), 1);
	PUSH_DATA (push, a_out);
	BEGIN_NV04(push, NV20_3D(RC_IN_RGB(i)), 1);
	PUSH_DATA (push, c_in);
	BEGIN_NV04(push, NV20_3D(RC_OUT_RGB(i)), 1);
	PUSH_DATA (push, c_out);
	BEGIN_NV04(push, NV20_3D(RC_CONSTANT_COLOR0(i)), 1);
	PUSH_DATA (push, k);
d60 2
a61 1
	struct nouveau_pushbuf *push = context_push(ctx);
d67 3
a69 3
	BEGIN_NV04(push, NV20_3D(RC_FINAL0), 2);
	PUSH_DATA (push, in);
	PUSH_DATA (push, in >> 32);
d71 2
a72 2
	BEGIN_NV04(push, NV20_3D(RC_ENABLE), 1);
	PUSH_DATA (push, n);
@


