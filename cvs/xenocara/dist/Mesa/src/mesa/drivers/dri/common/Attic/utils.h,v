head	1.9;
access;
symbols
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	v10_2_9:1.1.1.5
	v10_4_3:1.1.1.5
	v10_2_7:1.1.1.5
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	v10_2_3:1.1.1.5
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	v9_2_5:1.1.1.4
	v9_2_3:1.1.1.4
	v9_2_2:1.1.1.4
	v9_2_1:1.1.1.4
	v9_2_0:1.1.1.4
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.6
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v6_5_2:1.1.1.2
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.12.23.05.17.48;	author jsg;	state dead;
branches;
next	1.8;
commitid	TnlogFl9nOv2eaRf;

1.8
date	2014.07.09.21.08.59;	author jsg;	state Exp;
branches;
next	1.7;
commitid	WPD6rgPryPkvXOr9;

1.7
date	2013.09.05.14.04.06;	author jsg;	state Exp;
branches;
next	1.6;

1.6
date	2012.08.17.13.58.14;	author mpi;	state Exp;
branches;
next	1.5;

1.5
date	2011.10.23.13.37.39;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.22.20.06.17;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.17.20.26.38;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.14.58.13;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.52.12;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.52.12;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.11.57.03;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.35;	author matthieu;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2013.09.05.13.15.17;	author jsg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2014.07.09.20.34.46;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.9
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * (C) Copyright IBM Corporation 2002, 2004
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * on the rights to use, copy, modify, merge, publish, distribute, sub
 * license, and/or sell copies of the Software, and to permit persons to whom
 * the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
 * VA LINUX SYSTEM, IBM AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
 * USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Authors:
 *    Ian Romanick <idr@@us.ibm.com>
 */

#ifndef DRI_DEBUG_H
#define DRI_DEBUG_H

#include <GL/gl.h>
#include <GL/internal/dri_interface.h>
#include "main/context.h"

struct dri_debug_control {
    const char * string;
    uint64_t     flag;
};

extern uint64_t driParseDebugString( const char * debug,
    const struct dri_debug_control * control );

extern unsigned driGetRendererString( char * buffer,
    const char * hardware_name, GLuint agp_mode );

struct __DRIconfigRec {
    struct gl_config modes;
};

extern __DRIconfig **
driCreateConfigs(mesa_format format,
		 const uint8_t * depth_bits, const uint8_t * stencil_bits,
		 unsigned num_depth_stencil_bits,
		 const GLenum * db_modes, unsigned num_db_modes,
		 const uint8_t * msaa_samples, unsigned num_msaa_modes,
		 GLboolean enable_accum);

__DRIconfig **driConcatConfigs(__DRIconfig **a,
			       __DRIconfig **b);

int
driGetConfigAttrib(const __DRIconfig *config,
		   unsigned int attrib, unsigned int *value);
int
driIndexConfigAttrib(const __DRIconfig *config, int index,
		     unsigned int *attrib, unsigned int *value);

int
driQueryRendererIntegerCommon(__DRIscreen *psp, int param, unsigned int *value);

#endif /* DRI_DEBUG_H */
@


1.8
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.7
log
@Merge Mesa 9.2.0
@
text
@d37 1
a37 1
    unsigned     flag;
d40 1
a40 1
extern unsigned driParseDebugString( const char * debug,
d51 1
a51 1
driCreateConfigs(gl_format format,
d67 3
@


1.6
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a33 3
#include "main/remap.h"

typedef struct __DRIutilversionRec2    __DRIutilversion2;
a39 32
/**
 * Description of the API for an extension to OpenGL.
 */
struct dri_extension {
    /**
     * Name of the extension.
     */
    const char * name;
    

    /**
     * Pointer to a list of \c dri_extension_function structures.  The list
     * is terminated by a structure with a \c NULL
     * \c dri_extension_function::strings pointer.
     */
    const struct gl_function_remap * functions;
};

/**
 * Used to store a version which includes a major range instead of a single
 * major version number.
 */
struct __DRIutilversionRec2 {
    int    major_min;    /** min allowed Major version number. */
    int    major_max;    /** max allowed Major version number. */
    int    minor;        /**< Minor version number. */
    int    patch;        /**< Patch-level. */
};

extern void
__driUtilMessage(const char *f, ...);

a45 20
extern void driInitExtensions( struct gl_context * ctx, 
    const struct dri_extension * card_extensions, GLboolean enable_imaging );

extern void driInitSingleExtension( struct gl_context * ctx,
    const struct dri_extension * ext );

extern GLboolean driCheckDriDdxDrmVersions2(const char * driver_name,
    const __DRIversion * driActual, const __DRIversion * driExpected,
    const __DRIversion * ddxActual, const __DRIversion * ddxExpected,
    const __DRIversion * drmActual, const __DRIversion * drmExpected);

extern GLboolean driCheckDriDdxDrmVersions3(const char * driver_name,
    const __DRIversion * driActual, const __DRIversion * driExpected,
    const __DRIversion * ddxActual, const __DRIutilversion2 * ddxExpected,
    const __DRIversion * drmActual, const __DRIversion * drmExpected);

extern GLboolean driClipRectToFramebuffer( const struct gl_framebuffer *buffer,
					   GLint *x, GLint *y,
					   GLsizei *width, GLsizei *height );

d51 1
a51 1
driCreateConfigs(GLenum fb_format, GLenum fb_type,
@


1.5
log
@Merge Mesa 7.10.3
@
text
@d79 1
a79 1
    const char * hardware_name, const char * driver_date, GLuint agp_mode );
@


1.4
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d72 3
d81 1
a81 1
extern void driInitExtensions( GLcontext * ctx, 
d84 1
a84 1
extern void driInitSingleExtension( GLcontext * ctx,
d97 1
a97 1
extern GLboolean driClipRectToFramebuffer( const GLframebuffer *buffer,
d102 1
a102 1
    __GLcontextModes modes;
@


1.3
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d34 1
a43 29
 * Description of the entry-points and parameters for an OpenGL function.
 */
struct dri_extension_function {
    /**
     * \brief
     * Packed string describing the parameter signature and the entry-point
     * names.
     * 
     * The parameter signature and the names of the entry-points for this
     * function are packed into a single string.  The substrings are
     * separated by NUL characters.  The whole string is terminated by
     * two consecutive NUL characters.
     */
    const char * strings;


    /**
     * Location in the remap table where the dispatch offset should be
     * stored.
     */
    int remap_index;

    /**
     * Offset of the function in the dispatch table.
     */
    int offset;
};

/**
d58 1
a58 1
    const struct dri_extension_function * functions;
d106 3
a108 1
		 const GLenum * db_modes, unsigned num_db_modes);
d110 2
a111 1
const __DRIconfig **driConcatConfigs(__DRIconfig **a, __DRIconfig **b);
@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@a26 1
/* $XFree86:$ */
d33 1
a33 1
#include "context.h"
d132 1
a132 1
		 const u_int8_t * depth_bits, const u_int8_t * stencil_bits,
@


1.1
log
@Initial revision
@
text
@d32 2
d35 2
a36 1
#include "dri_util.h"
d90 11
d127 18
a144 5
extern GLboolean driFillInModes( __GLcontextModes ** modes,
    GLenum fb_format, GLenum fb_type,
    const u_int8_t * depth_bits, const u_int8_t * stencil_bits,
    unsigned num_depth_stencil_bits,
    const GLenum * db_modes, unsigned num_db_modes, int visType );
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@import MesaLibs version 6.5.2
@
text
@a108 2
extern GLint driIntersectArea( drm_clip_rect_t rect1, drm_clip_rect_t rect2 );

@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@d27 1
d32 2
a33 6
#include <GL/gl.h>
#include <GL/internal/dri_interface.h>
#include "main/context.h"
#include "main/remap.h"

typedef struct __DRIutilversionRec2    __DRIutilversion2;
d41 29
d84 1
a84 1
    const struct gl_function_remap * functions;
a86 14
/**
 * Used to store a version which includes a major range instead of a single
 * major version number.
 */
struct __DRIutilversionRec2 {
    int    major_min;    /** min allowed Major version number. */
    int    major_max;    /** max allowed Major version number. */
    int    minor;        /**< Minor version number. */
    int    patch;        /**< Patch-level. */
};

extern void
__driUtilMessage(const char *f, ...);

d93 1
a93 1
extern void driInitExtensions( struct gl_context * ctx, 
d96 1
a96 1
extern void driInitSingleExtension( struct gl_context * ctx,
d109 3
a111 1
extern GLboolean driClipRectToFramebuffer( const struct gl_framebuffer *buffer,
d115 5
a119 21
struct __DRIconfigRec {
    struct gl_config modes;
};

extern __DRIconfig **
driCreateConfigs(GLenum fb_format, GLenum fb_type,
		 const uint8_t * depth_bits, const uint8_t * stencil_bits,
		 unsigned num_depth_stencil_bits,
		 const GLenum * db_modes, unsigned num_db_modes,
		 const uint8_t * msaa_samples, unsigned num_msaa_modes,
		 GLboolean enable_accum);

__DRIconfig **driConcatConfigs(__DRIconfig **a,
			       __DRIconfig **b);

int
driGetConfigAttrib(const __DRIconfig *config,
		   unsigned int attrib, unsigned int *value);
int
driIndexConfigAttrib(const __DRIconfig *config, int index,
		     unsigned int *attrib, unsigned int *value);
@


1.1.1.4
log
@Import Mesa 9.2.0
@
text
@d34 3
d43 32
d79 21
a99 1
    const char * hardware_name, GLuint agp_mode );
d106 1
a106 1
driCreateConfigs(gl_format format,
@


1.1.1.5
log
@Import Mesa 10.2.3
@
text
@d37 1
a37 1
    uint64_t     flag;
d40 1
a40 1
extern uint64_t driParseDebugString( const char * debug,
d51 1
a51 1
driCreateConfigs(mesa_format format,
a66 3

int
driQueryRendererIntegerCommon(__DRIscreen *psp, int param, unsigned int *value);
@


