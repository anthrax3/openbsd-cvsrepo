head	1.3;
access;
symbols
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2010.05.22.20.06.17;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.38;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.52.15;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.52.15;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@
#ifndef _FFB_FIFO_H
#define _FFB_FIFO_H

#define FFBFifo(__fmesa, __n) \
do {	ffbScreenPrivate *__fScrn = (__fmesa)->ffbScreen; \
	int __cur_slots = __fScrn->fifo_cache; \
	if ((__cur_slots - (__n)) < 0) { \
		ffb_fbcPtr __ffb = __fmesa->regs; \
		do { __cur_slots = (((int)__ffb->ucsr & FFB_UCSR_FIFO_MASK) - 4); \
		} while ((__cur_slots - (__n)) < 0); \
	} (__fScrn)->fifo_cache = (__cur_slots - (__n)); \
} while(0)

#define FFBWait(__fmesa, __ffb) \
do {	ffbScreenPrivate *__fScrn = (__fmesa)->ffbScreen; \
	if (__fScrn->rp_active) { \
		unsigned int __regval = (__ffb)->ucsr; \
		while((__regval & FFB_UCSR_ALL_BUSY) != 0) { \
			__regval = (__ffb)->ucsr; \
		} \
		__fScrn->fifo_cache = ((int)(__regval & FFB_UCSR_FIFO_MASK)) - 4; \
		__fScrn->rp_active = 0; \
	} \
} while(0)

#endif /* !(_FFB_FIFO_H) */
@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@@


1.1
log
@Initial revision
@
text
@a0 1
/* $XFree86: xc/lib/GL/mesa/src/drv/ffb/ffb_fifo.h,v 1.2 2002/02/22 21:32:58 dawes Exp $ */
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@
