head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.12.23.05.17.50;	author jsg;	state dead;
branches;
next	1.3;
commitid	TnlogFl9nOv2eaRf;

1.3
date	2013.09.05.14.04.49;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.20;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.39;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.15.51;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright (C) 2009 Francisco Jerez.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

#include "nouveau_driver.h"
#include "nouveau_context.h"
#include "nouveau_util.h"

#include "main/formats.h"

void
nouveau_surface_alloc(struct gl_context *ctx, struct nouveau_surface *s,
		      enum nouveau_surface_layout layout,
		      unsigned flags, unsigned format,
		      unsigned width, unsigned height)
{
	union nouveau_bo_config config = {};
	int ret, cpp = _mesa_get_format_bytes(format);

	nouveau_bo_ref(NULL, &s->bo);

	*s = (struct nouveau_surface) {
		.layout = layout,
		.format = format,
		.width = width,
		.height = height,
		.cpp = cpp,
		.pitch = _mesa_format_row_stride(format, width),
	};

	if (layout == TILED) {
		s->pitch = align(s->pitch, 256);
		config.nv04.surf_pitch = s->pitch;

		if (cpp == 4)
			config.nv04.surf_flags = NV04_BO_32BPP;
		else if (cpp == 2)
			config.nv04.surf_flags = NV04_BO_16BPP;

		if (_mesa_get_format_bits(format, GL_DEPTH_BITS))
			config.nv04.surf_flags |= NV04_BO_ZETA;

	} else {
		s->pitch = align(s->pitch, 64);
	}

	ret = nouveau_bo_new(context_dev(ctx), flags, 0,
			     get_format_blocksy(format, height) * s->pitch,
			     &config, &s->bo);
	assert(!ret);
}

void
nouveau_surface_ref(struct nouveau_surface *src,
		    struct nouveau_surface *dst)
{
	if (src) {
		dst->offset = src->offset;
		dst->layout = src->layout;
		dst->format = src->format;
		dst->width = src->width;
		dst->height = src->height;
		dst->cpp = src->cpp;
		dst->pitch = src->pitch;
		nouveau_bo_ref(src->bo, &dst->bo);

	} else {
		nouveau_bo_ref(NULL, &dst->bo);
	}
}
@


1.3
log
@Merge Mesa 9.2.0
@
text
@@


1.2
log
@Merge Mesa 7.10.3
@
text
@d31 2
d39 1
a39 1
	unsigned tile_mode = 0, tile_flags = 0;
d50 1
a50 1
		.pitch = width * cpp,
d55 1
a55 1
		tile_mode = s->pitch;
d58 1
a58 1
			tile_flags = NOUVEAU_BO_TILE_32BPP;
d60 1
a60 1
			tile_flags = NOUVEAU_BO_TILE_16BPP;
d63 1
a63 1
			tile_flags |= NOUVEAU_BO_TILE_ZETA;
d69 3
a71 2
	ret = nouveau_bo_new_tile(context_dev(ctx), flags, 0, s->pitch * height,
				  tile_mode, tile_flags, &s->bo);
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d32 1
a32 1
nouveau_surface_alloc(GLcontext *ctx, struct nouveau_surface *s,
d37 2
a38 2
	unsigned tile_mode, cpp = _mesa_get_format_bytes(format);
	int ret;
d54 9
a64 1
		tile_mode = 0;
d68 1
a68 1
				  tile_mode, 0, &s->bo);
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d32 1
a32 1
nouveau_surface_alloc(struct gl_context *ctx, struct nouveau_surface *s,
d37 2
a38 2
	unsigned tile_mode = 0, tile_flags = 0;
	int ret, cpp = _mesa_get_format_bytes(format);
a53 9

		if (cpp == 4)
			tile_flags = NOUVEAU_BO_TILE_32BPP;
		else if (cpp == 2)
			tile_flags = NOUVEAU_BO_TILE_16BPP;

		if (_mesa_get_format_bits(format, GL_DEPTH_BITS))
			tile_flags |= NOUVEAU_BO_TILE_ZETA;

d56 1
d60 1
a60 1
				  tile_mode, tile_flags, &s->bo);
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@a30 2
#include "main/formats.h"

d37 1
a37 1
	union nouveau_bo_config config = {};
d48 1
a48 1
		.pitch = _mesa_format_row_stride(format, width),
d53 1
a53 1
		config.nv04.surf_pitch = s->pitch;
d56 1
a56 1
			config.nv04.surf_flags = NV04_BO_32BPP;
d58 1
a58 1
			config.nv04.surf_flags = NV04_BO_16BPP;
d61 1
a61 1
			config.nv04.surf_flags |= NV04_BO_ZETA;
d67 2
a68 3
	ret = nouveau_bo_new(context_dev(ctx), flags, 0,
			     get_format_blocksy(format, height) * s->pitch,
			     &config, &s->bo);
@


