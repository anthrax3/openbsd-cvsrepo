head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.14
	OPENBSD_5_7_BASE:1.2
	v10_2_9:1.1.1.1
	v10_4_3:1.1.1.1
	v10_2_7:1.1.1.1
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	v10_2_3:1.1.1.1
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.1
	v9_2_3:1.1.1.1
	v9_2_2:1.1.1.1
	v9_2_1:1.1.1.1
	v9_2_0:1.1.1.1
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.12.23.05.17.50;	author jsg;	state dead;
branches;
next	1.2;
commitid	TnlogFl9nOv2eaRf;

1.2
date	2011.10.23.13.37.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.22;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.39;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright (C) 2009 Francisco Jerez.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef __NV10_DRIVER_H__
#define __NV10_DRIVER_H__

enum {
	NOUVEAU_STATE_ZCLEAR = NUM_NOUVEAU_STATE,
	NUM_NV10_STATE
};

#define NV10_TEXTURE_UNITS 2

/* nv10_context.c */
extern const struct nouveau_driver nv10_driver;

GLboolean
nv10_use_viewport_zclear(struct gl_context *ctx);

float
nv10_transform_depth(struct gl_context *ctx, float z);

/* nv10_render.c */
void
nv10_vbo_init(struct gl_context *ctx);

void
nv10_vbo_destroy(struct gl_context *ctx);

void
nv10_swtnl_init(struct gl_context *ctx);

void
nv10_swtnl_destroy(struct gl_context *ctx);

/* nv10_state_fb.c */
void
nv10_emit_framebuffer(struct gl_context *ctx, int emit);

void
nv10_emit_render_mode(struct gl_context *ctx, int emit);

void
nv10_emit_scissor(struct gl_context *ctx, int emit);

void
nv10_emit_viewport(struct gl_context *ctx, int emit);

void
nv10_emit_zclear(struct gl_context *ctx, int emit);

/* nv10_state_polygon.c */
void
nv10_emit_cull_face(struct gl_context *ctx, int emit);

void
nv10_emit_front_face(struct gl_context *ctx, int emit);

void
nv10_emit_line_mode(struct gl_context *ctx, int emit);

void
nv10_emit_line_stipple(struct gl_context *ctx, int emit);

void
nv10_emit_point_mode(struct gl_context *ctx, int emit);

void
nv10_emit_polygon_mode(struct gl_context *ctx, int emit);

void
nv10_emit_polygon_offset(struct gl_context *ctx, int emit);

void
nv10_emit_polygon_stipple(struct gl_context *ctx, int emit);

/* nv10_state_raster.c */
void
nv10_emit_alpha_func(struct gl_context *ctx, int emit);

void
nv10_emit_blend_color(struct gl_context *ctx, int emit);

void
nv10_emit_blend_equation(struct gl_context *ctx, int emit);

void
nv10_emit_blend_func(struct gl_context *ctx, int emit);

void
nv10_emit_color_mask(struct gl_context *ctx, int emit);

void
nv10_emit_depth(struct gl_context *ctx, int emit);

void
nv10_emit_dither(struct gl_context *ctx, int emit);

void
nv10_emit_logic_opcode(struct gl_context *ctx, int emit);

void
nv10_emit_shade_model(struct gl_context *ctx, int emit);

void
nv10_emit_stencil_func(struct gl_context *ctx, int emit);

void
nv10_emit_stencil_mask(struct gl_context *ctx, int emit);

void
nv10_emit_stencil_op(struct gl_context *ctx, int emit);

/* nv10_state_frag.c */
void
nv10_get_general_combiner(struct gl_context *ctx, int i,
			  uint32_t *a_in, uint32_t *a_out,
			  uint32_t *c_in, uint32_t *c_out, uint32_t *k);

void
nv10_get_final_combiner(struct gl_context *ctx, uint64_t *in, int *n);

void
nv10_emit_tex_env(struct gl_context *ctx, int emit);

void
nv10_emit_frag(struct gl_context *ctx, int emit);

/* nv10_state_tex.c */
void
nv10_emit_tex_gen(struct gl_context *ctx, int emit);

void
nv10_emit_tex_mat(struct gl_context *ctx, int emit);

void
nv10_emit_tex_obj(struct gl_context *ctx, int emit);

/* nv10_state_tnl.c */
void
nv10_get_fog_coeff(struct gl_context *ctx, float k[3]);

void
nv10_get_spot_coeff(struct gl_light *l, float k[7]);

void
nv10_get_shininess_coeff(float s, float k[6]);

void
nv10_emit_clip_plane(struct gl_context *ctx, int emit);

void
nv10_emit_color_material(struct gl_context *ctx, int emit);

void
nv10_emit_fog(struct gl_context *ctx, int emit);

void
nv10_emit_light_enable(struct gl_context *ctx, int emit);

void
nv10_emit_light_model(struct gl_context *ctx, int emit);

void
nv10_emit_light_source(struct gl_context *ctx, int emit);

void
nv10_emit_material_ambient(struct gl_context *ctx, int emit);

void
nv10_emit_material_diffuse(struct gl_context *ctx, int emit);

void
nv10_emit_material_specular(struct gl_context *ctx, int emit);

void
nv10_emit_material_shininess(struct gl_context *ctx, int emit);

void
nv10_emit_modelview(struct gl_context *ctx, int emit);

void
nv10_emit_point_parameter(struct gl_context *ctx, int emit);

void
nv10_emit_projection(struct gl_context *ctx, int emit);

#endif
@


1.2
log
@Merge Mesa 7.10.3
@
text
@@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d30 5
d40 6
d48 1
a48 1
nv10_render_init(GLcontext *ctx);
d51 7
a57 1
nv10_render_destroy(GLcontext *ctx);
d61 4
a64 1
nv10_emit_framebuffer(GLcontext *ctx, int emit);
d67 1
a67 1
nv10_emit_render_mode(GLcontext *ctx, int emit);
d70 1
a70 1
nv10_emit_scissor(GLcontext *ctx, int emit);
d73 1
a73 1
nv10_emit_viewport(GLcontext *ctx, int emit);
d77 1
a77 1
nv10_emit_cull_face(GLcontext *ctx, int emit);
d80 1
a80 1
nv10_emit_front_face(GLcontext *ctx, int emit);
d83 1
a83 1
nv10_emit_line_mode(GLcontext *ctx, int emit);
d86 1
a86 1
nv10_emit_line_stipple(GLcontext *ctx, int emit);
d89 1
a89 1
nv10_emit_point_mode(GLcontext *ctx, int emit);
d92 1
a92 1
nv10_emit_polygon_mode(GLcontext *ctx, int emit);
d95 1
a95 1
nv10_emit_polygon_offset(GLcontext *ctx, int emit);
d98 1
a98 1
nv10_emit_polygon_stipple(GLcontext *ctx, int emit);
d102 1
a102 1
nv10_emit_alpha_func(GLcontext *ctx, int emit);
d105 1
a105 1
nv10_emit_blend_color(GLcontext *ctx, int emit);
d108 1
a108 1
nv10_emit_blend_equation(GLcontext *ctx, int emit);
d111 1
a111 1
nv10_emit_blend_func(GLcontext *ctx, int emit);
d114 1
a114 1
nv10_emit_color_mask(GLcontext *ctx, int emit);
d117 1
a117 1
nv10_emit_depth(GLcontext *ctx, int emit);
d120 1
a120 1
nv10_emit_dither(GLcontext *ctx, int emit);
d123 1
a123 1
nv10_emit_logic_opcode(GLcontext *ctx, int emit);
d126 1
a126 1
nv10_emit_shade_model(GLcontext *ctx, int emit);
d129 1
a129 1
nv10_emit_stencil_func(GLcontext *ctx, int emit);
d132 1
a132 1
nv10_emit_stencil_mask(GLcontext *ctx, int emit);
d135 1
a135 1
nv10_emit_stencil_op(GLcontext *ctx, int emit);
d139 1
a139 1
nv10_get_general_combiner(GLcontext *ctx, int i,
d144 1
a144 1
nv10_get_final_combiner(GLcontext *ctx, uint64_t *in, int *n);
d147 1
a147 1
nv10_emit_tex_env(GLcontext *ctx, int emit);
d150 1
a150 1
nv10_emit_frag(GLcontext *ctx, int emit);
d154 4
a157 1
nv10_emit_tex_gen(GLcontext *ctx, int emit);
d160 1
a160 1
nv10_emit_tex_obj(GLcontext *ctx, int emit);
d164 1
a164 1
nv10_get_fog_coeff(GLcontext *ctx, float k[3]);
d173 1
a173 1
nv10_emit_clip_plane(GLcontext *ctx, int emit);
d176 1
a176 1
nv10_emit_color_material(GLcontext *ctx, int emit);
d179 1
a179 1
nv10_emit_fog(GLcontext *ctx, int emit);
d182 1
a182 1
nv10_emit_light_enable(GLcontext *ctx, int emit);
d185 1
a185 1
nv10_emit_light_model(GLcontext *ctx, int emit);
d188 1
a188 1
nv10_emit_light_source(GLcontext *ctx, int emit);
d191 1
a191 1
nv10_emit_material_ambient(GLcontext *ctx, int emit);
d194 1
a194 1
nv10_emit_material_diffuse(GLcontext *ctx, int emit);
d197 1
a197 1
nv10_emit_material_specular(GLcontext *ctx, int emit);
d200 1
a200 1
nv10_emit_material_shininess(GLcontext *ctx, int emit);
d203 1
a203 1
nv10_emit_modelview(GLcontext *ctx, int emit);
d206 1
a206 1
nv10_emit_point_parameter(GLcontext *ctx, int emit);
d209 1
a209 1
nv10_emit_projection(GLcontext *ctx, int emit);
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a29 5
enum {
	NOUVEAU_STATE_ZCLEAR = NUM_NOUVEAU_STATE,
	NUM_NV10_STATE
};

a34 6
GLboolean
nv10_use_viewport_zclear(struct gl_context *ctx);

float
nv10_transform_depth(struct gl_context *ctx, float z);

d37 1
a37 1
nv10_vbo_init(struct gl_context *ctx);
d40 1
a40 7
nv10_vbo_destroy(struct gl_context *ctx);

void
nv10_swtnl_init(struct gl_context *ctx);

void
nv10_swtnl_destroy(struct gl_context *ctx);
d44 1
a44 4
nv10_emit_framebuffer(struct gl_context *ctx, int emit);

void
nv10_emit_render_mode(struct gl_context *ctx, int emit);
d47 1
a47 1
nv10_emit_scissor(struct gl_context *ctx, int emit);
d50 1
a50 1
nv10_emit_viewport(struct gl_context *ctx, int emit);
d53 1
a53 1
nv10_emit_zclear(struct gl_context *ctx, int emit);
d57 1
a57 1
nv10_emit_cull_face(struct gl_context *ctx, int emit);
d60 1
a60 1
nv10_emit_front_face(struct gl_context *ctx, int emit);
d63 1
a63 1
nv10_emit_line_mode(struct gl_context *ctx, int emit);
d66 1
a66 1
nv10_emit_line_stipple(struct gl_context *ctx, int emit);
d69 1
a69 1
nv10_emit_point_mode(struct gl_context *ctx, int emit);
d72 1
a72 1
nv10_emit_polygon_mode(struct gl_context *ctx, int emit);
d75 1
a75 1
nv10_emit_polygon_offset(struct gl_context *ctx, int emit);
d78 1
a78 1
nv10_emit_polygon_stipple(struct gl_context *ctx, int emit);
d82 1
a82 1
nv10_emit_alpha_func(struct gl_context *ctx, int emit);
d85 1
a85 1
nv10_emit_blend_color(struct gl_context *ctx, int emit);
d88 1
a88 1
nv10_emit_blend_equation(struct gl_context *ctx, int emit);
d91 1
a91 1
nv10_emit_blend_func(struct gl_context *ctx, int emit);
d94 1
a94 1
nv10_emit_color_mask(struct gl_context *ctx, int emit);
d97 1
a97 1
nv10_emit_depth(struct gl_context *ctx, int emit);
d100 1
a100 1
nv10_emit_dither(struct gl_context *ctx, int emit);
d103 1
a103 1
nv10_emit_logic_opcode(struct gl_context *ctx, int emit);
d106 1
a106 1
nv10_emit_shade_model(struct gl_context *ctx, int emit);
d109 1
a109 1
nv10_emit_stencil_func(struct gl_context *ctx, int emit);
d112 1
a112 1
nv10_emit_stencil_mask(struct gl_context *ctx, int emit);
d115 1
a115 1
nv10_emit_stencil_op(struct gl_context *ctx, int emit);
d119 1
a119 1
nv10_get_general_combiner(struct gl_context *ctx, int i,
d124 1
a124 1
nv10_get_final_combiner(struct gl_context *ctx, uint64_t *in, int *n);
d127 1
a127 1
nv10_emit_tex_env(struct gl_context *ctx, int emit);
d130 1
a130 1
nv10_emit_frag(struct gl_context *ctx, int emit);
d134 1
a134 4
nv10_emit_tex_gen(struct gl_context *ctx, int emit);

void
nv10_emit_tex_mat(struct gl_context *ctx, int emit);
d137 1
a137 1
nv10_emit_tex_obj(struct gl_context *ctx, int emit);
d141 1
a141 1
nv10_get_fog_coeff(struct gl_context *ctx, float k[3]);
d150 1
a150 1
nv10_emit_clip_plane(struct gl_context *ctx, int emit);
d153 1
a153 1
nv10_emit_color_material(struct gl_context *ctx, int emit);
d156 1
a156 1
nv10_emit_fog(struct gl_context *ctx, int emit);
d159 1
a159 1
nv10_emit_light_enable(struct gl_context *ctx, int emit);
d162 1
a162 1
nv10_emit_light_model(struct gl_context *ctx, int emit);
d165 1
a165 1
nv10_emit_light_source(struct gl_context *ctx, int emit);
d168 1
a168 1
nv10_emit_material_ambient(struct gl_context *ctx, int emit);
d171 1
a171 1
nv10_emit_material_diffuse(struct gl_context *ctx, int emit);
d174 1
a174 1
nv10_emit_material_specular(struct gl_context *ctx, int emit);
d177 1
a177 1
nv10_emit_material_shininess(struct gl_context *ctx, int emit);
d180 1
a180 1
nv10_emit_modelview(struct gl_context *ctx, int emit);
d183 1
a183 1
nv10_emit_point_parameter(struct gl_context *ctx, int emit);
d186 1
a186 1
nv10_emit_projection(struct gl_context *ctx, int emit);
@

