head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.4.0.8
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.12.23.05.17.51;	author jsg;	state dead;
branches;
next	1.5;
commitid	TnlogFl9nOv2eaRf;

1.5
date	2013.09.05.14.05.45;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2011.10.23.13.37.41;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.22.20.06.26;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.02.14.58.18;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.43;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.16.10;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2008  Brian Paul   All Rights Reserved.
 * Copyright 2008, 2010 George Sapountzis <gsapountzis@@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */


#ifndef _SWRAST_PRIV_H
#define _SWRAST_PRIV_H

#include <GL/gl.h>
#include <GL/internal/dri_interface.h>
#include "main/mtypes.h"
#include "dri_util.h"
#include "swrast/s_context.h"


/**
 * Debugging
 */
#define DEBUG_CORE	0
#define DEBUG_SPAN	0

#if DEBUG_CORE
#define TRACE printf("--> %s\n", __FUNCTION__)
#else
#define TRACE
#endif

#if DEBUG_SPAN
#define TRACE_SPAN printf("--> %s\n", __FUNCTION__)
#else
#define TRACE_SPAN
#endif


/**
 * Data types
 */
struct dri_context
{
    /* mesa, base class, must be first */
    struct gl_context Base;

    /* dri */
    __DRIcontext *cPriv;
};

static INLINE struct dri_context *
dri_context(__DRIcontext * driContextPriv)
{
    return (struct dri_context *)driContextPriv->driverPrivate;
}

static INLINE struct dri_context *
swrast_context(struct gl_context *ctx)
{
    return (struct dri_context *) ctx;
}

struct dri_drawable
{
    /* mesa, base class, must be first */
    struct gl_framebuffer Base;

    /* dri */
    __DRIdrawable *dPriv;

    /* scratch row for optimized front-buffer rendering */
    char *row;
};

static INLINE struct dri_drawable *
dri_drawable(__DRIdrawable * driDrawPriv)
{
    return (struct dri_drawable *)driDrawPriv->driverPrivate;
}

static INLINE struct dri_drawable *
swrast_drawable(struct gl_framebuffer *fb)
{
    return (struct dri_drawable *) fb;
}

struct dri_swrast_renderbuffer {
    struct swrast_renderbuffer Base;
    __DRIdrawable *dPriv;

    /* GL_MAP_*_BIT, used for mapping of front buffer. */
    GLbitfield map_mode;
   int map_x, map_y, map_w, map_h;

    /* renderbuffer pitch (in bytes) */
    GLuint pitch;
   /* bits per pixel of storage */
    GLuint bpp;
};

static INLINE struct dri_swrast_renderbuffer *
dri_swrast_renderbuffer(struct gl_renderbuffer *rb)
{
    return (struct dri_swrast_renderbuffer *) rb;
}


/**
 * Pixel formats we support
 */
#define PF_A8R8G8B8   1		/**< 32bpp TrueColor:  8-A, 8-R, 8-G, 8-B bits */
#define PF_R5G6B5     2		/**< 16bpp TrueColor:  5-R, 6-G, 5-B bits */
#define PF_R3G3B2     3		/**<  8bpp TrueColor:  3-R, 3-G, 2-B bits */
#define PF_X8R8G8B8   4		/**< 32bpp TrueColor:  8-R, 8-G, 8-B bits */


#endif /* _SWRAST_PRIV_H_ */
@


1.5
log
@Merge Mesa 9.2.0
@
text
@@


1.4
log
@Merge Mesa 7.10.3
@
text
@a2 1
 * Version:  7.1
d20 4
a23 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
d33 2
a34 1
#include "drisw_util.h"
d104 7
a110 2
struct swrast_renderbuffer {
    struct gl_renderbuffer Base;
d118 2
a119 2
static INLINE struct swrast_renderbuffer *
swrast_renderbuffer(struct gl_renderbuffer *rb)
d121 1
a121 1
    return (struct swrast_renderbuffer *) rb;
a132 10

/* swrast_span.c */

extern void
swrast_set_span_funcs_back(struct swrast_renderbuffer *xrb,
			   GLuint pixel_format);

extern void
swrast_set_span_funcs_front(struct swrast_renderbuffer *xrb,
			    GLuint pixel_format);
@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d6 1
a25 5
/*
 * Authors:
 *    George Sapountzis <gsap7@@yahoo.gr>
 */

d33 1
d58 4
a61 4
struct __DRIscreenRec {
    int num;

    const __DRIextension **extensions;
d63 2
a64 1
    const __DRIswrastLoaderExtension *swrast_loader;
d67 5
a71 2
struct __DRIcontextRec {
    GLcontext Base;
d73 5
a77 1
    void *loaderPrivate;
d79 4
a82 5
    __DRIscreen *driScreenPriv;
};

struct __DRIdrawableRec {
    GLframebuffer Base;
d84 2
a85 3
    void *loaderPrivate;

    __DRIscreen *driScreenPriv;
d91 12
a111 12
static INLINE __DRIcontext *
swrast_context(GLcontext *ctx)
{
    return (__DRIcontext *) ctx;
}

static INLINE __DRIdrawable *
swrast_drawable(GLframebuffer *fb)
{
    return (__DRIdrawable *) fb;
}

a125 8

/**
 * Renderbuffer pitch alignment (in bits).
 *
 * The xorg loader requires padding images to 32 bits. However, this should
 * become a screen/drawable parameter XXX
 */
#define PITCH_ALIGN_BITS 32
@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d46 1
a46 1
#define TRACE _mesa_printf("--> %s\n", __FUNCTION__)
d52 1
a52 1
#define TRACE_SPAN _mesa_printf("--> %s\n", __FUNCTION__)
d119 4
a122 5
#define PF_CI8        1		/**< Color Index mode */
#define PF_A8R8G8B8   2		/**< 32bpp TrueColor:  8-A, 8-R, 8-G, 8-B bits */
#define PF_R5G6B5     3		/**< 16bpp TrueColor:  5-R, 6-G, 5-B bits */
#define PF_R3G3B2     4		/**<  8bpp TrueColor:  3-R, 3-G, 2-B bits */
#define PF_X8R8G8B8   5		/**< 32bpp TrueColor:  8-R, 8-G, 8-B bits */
@


1.1
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d36 1
a36 1
#include "mtypes.h"
d93 2
d120 4
a123 4
#define PF_A8R8G8B8   2		/**< 32-bit TrueColor:  8-A, 8-R, 8-G, 8-B bits */
#define PF_R5G6B5     3		/**< 16-bit TrueColor:  5-R, 6-G, 5-B bits */
#define PF_R3G3B2     4		/**<  8-bit TrueColor:  3-R, 3-G, 2-B bits */

@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@a5 1
 * Copyright 2008, 2010 George Sapountzis <gsapountzis@@gmail.com>
d25 5
d36 1
a36 2
#include "main/mtypes.h"
#include "drisw_util.h"
d46 1
a46 1
#define TRACE printf("--> %s\n", __FUNCTION__)
d52 1
a52 1
#define TRACE_SPAN printf("--> %s\n", __FUNCTION__)
d61 4
a64 4
struct dri_context
{
    /* mesa, base class, must be first */
    struct gl_context Base;
d66 1
a66 2
    /* dri */
    __DRIcontext *cPriv;
d69 7
a75 5
static INLINE struct dri_context *
dri_context(__DRIcontext * driContextPriv)
{
    return (struct dri_context *)driContextPriv->driverPrivate;
}
d77 2
a78 5
static INLINE struct dri_context *
swrast_context(struct gl_context *ctx)
{
    return (struct dri_context *) ctx;
}
d80 1
a80 4
struct dri_drawable
{
    /* mesa, base class, must be first */
    struct gl_framebuffer Base;
d82 1
a82 2
    /* dri */
    __DRIdrawable *dPriv;
a87 12
static INLINE struct dri_drawable *
dri_drawable(__DRIdrawable * driDrawPriv)
{
    return (struct dri_drawable *)driDrawPriv->driverPrivate;
}

static INLINE struct dri_drawable *
swrast_drawable(struct gl_framebuffer *fb)
{
    return (struct dri_drawable *) fb;
}

a92 2
   /* bits per pixel of storage */
    GLuint bpp;
d95 12
d117 13
a129 4
#define PF_A8R8G8B8   1		/**< 32bpp TrueColor:  8-A, 8-R, 8-G, 8-B bits */
#define PF_R5G6B5     2		/**< 16bpp TrueColor:  5-R, 6-G, 5-B bits */
#define PF_R3G3B2     3		/**<  8bpp TrueColor:  3-R, 3-G, 2-B bits */
#define PF_X8R8G8B8   4		/**< 32bpp TrueColor:  8-R, 8-G, 8-B bits */
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d3 1
d21 3
a23 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
d33 1
a33 2
#include "dri_util.h"
#include "swrast/s_context.h"
d103 2
a104 7
struct dri_swrast_renderbuffer {
    struct swrast_renderbuffer Base;
    __DRIdrawable *dPriv;

    /* GL_MAP_*_BIT, used for mapping of front buffer. */
    GLbitfield map_mode;
   int map_x, map_y, map_w, map_h;
d112 2
a113 2
static INLINE struct dri_swrast_renderbuffer *
dri_swrast_renderbuffer(struct gl_renderbuffer *rb)
d115 1
a115 1
    return (struct dri_swrast_renderbuffer *) rb;
d127 10
@


