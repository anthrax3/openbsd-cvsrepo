head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.8
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@// @;


1.3
date	2012.08.17.13.58.17;	author mpi;	state dead;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.41;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.02.14.58.19;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.44;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@#include "glapi.h"
#include "glThread.h"

#ifdef WIN32

extern "C" _glthread_Mutex OneTimeLock;
extern "C" _glthread_Mutex GenTexturesLock;

extern "C" void FreeAllTSD(void);

class _CriticalSectionInit
{
public:
	static _CriticalSectionInit	m_inst;

	_CriticalSectionInit()
	{
		_glthread_INIT_MUTEX(OneTimeLock);
		_glthread_INIT_MUTEX(GenTexturesLock);
	}

	~_CriticalSectionInit()
	{
		_glthread_DESTROY_MUTEX(OneTimeLock);
		_glthread_DESTROY_MUTEX(GenTexturesLock);
		FreeAllTSD();
	}
};

_CriticalSectionInit _CriticalSectionInit::m_inst;


#endif /* WIN32 */
@


1.2
log
@Merge Mesa 7.10.3
@
text
@@


1.1
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d4 2
a5 1
#ifdef WIN32_THREADS
d33 1
a33 1
#endif
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d4 1
a4 2
#ifdef WIN32

d32 1
a32 1
#endif /* WIN32 */
@

