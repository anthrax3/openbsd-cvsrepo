head	1.5;
access;
symbols
	OPENBSD_5_4:1.4.0.8
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2013.09.05.14.04.00;	author jsg;	state dead;
branches;
next	1.4;

1.4
date	2011.10.23.13.37.39;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.22.20.06.15;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.14.58.12;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.49.40;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.49.40;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.27.40;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Merge Mesa 9.2.0
@
text
@# Mesa 3-D graphics library
# Version:  7.0
# 
# Copyright (C) 1999-2003  Brian Paul   All Rights Reserved.
# 
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# MinGW core makefile v1.4 for Mesa
#
#  Copyright (C) 2002 - Daniel Borca
#  Email : dborca@@users.sourceforge.net
#  Web   : http://www.geocities.com/dborca

# MinGW core-gl makefile updated for Mesa 7.0
#
#  updated : by Heromyth, on 2007-7-21
#  Email   : zxpmyth@@yahoo.com.cn
#  Bugs    : 1) All the default settings work fine. But the setting X86=1 can't work. 
#            The others havn't been tested yet.
#            2) The generated DLLs are *not* compatible with the ones built
#            with the other compilers like VC8, especially for GLUT. 
#            3) Although more tests are needed, it can be used individually!


#
#  Available options:
#
#    Environment variables:
#	CFLAGS
#
#	GLIDE		path to Glide3 SDK; used with FX.
#			default = $(TOP)/glide3
#	FX=1		build for 3dfx Glide3. Note that this disables
#			compilation of most WMesa code and requires fxMesa.
#			As a consequence, you'll need the Win32 Glide3
#			library to build any application.
#			default = no
#	ICD=1		build the installable client driver interface
#			(windows opengl driver interface)
#			default = no
#	X86=1		optimize for x86 (if possible, use MMX, SSE, 3DNow).
#			default = no
#
#    Targets:
#	all:		build GL
#	clean:		remove object files
#


.PHONY: all clean
.INTERMEDIATE: x86/gen_matypes.exe
.SUFFIXES: .rc .res

# Set this to the prefix of your build tools, i.e. mingw32-
TOOLS_PREFIX = mingw32-

ifeq ($(ICD),1)
  LIB_NAME = mesa32
else
  LIB_NAME = opengl32
endif

DLL_EXT = .dll
IMP_EXT = .a
LIB_PRE = lib
STRIP = -s

AR = ar
ARFLAGS = crus
DLLTOOL = dlltool

TOP = ../..
GLIDE ?= $(TOP)/glide3
LIBDIR = $(TOP)/lib

GL_DLL = $(LIB_NAME)$(DLL_EXT)
GL_IMP = $(LIB_PRE)$(LIB_NAME)$(IMP_EXT)

MESA_LIB = libmesa.a
CC = $(TOOLS_PREFIX)gcc

LDLIBS = -lgdi32 -luser32 -liberty
LDFLAGS = $(STRIP) -shared -fPIC -Wl,--kill-at

CFLAGS += -DBUILD_GL32 -D_DLL -DMESA_MINWARN
CFLAGS += -DNDEBUG -DUSE_EXTERNAL_DXTN_LIB=1

ifeq ($(FX),1)
  CFLAGS += -I$(GLIDE)/include -DFX
  LDLIBS += -L$(GLIDE)/lib -lglide3x
  GL_DEF = drivers/windows/fx/fxopengl.def
  GL_RES = drivers/windows/fx/fx.rc
else
  ifeq ($(ICD),1)
    CFLAGS += -DUSE_MGL_NAMESPACE
    GL_DEF = drivers/windows/icd/mesa.def
  else    
    GL_DEF = $(LIB_NAME).def
  endif
endif



UNLINK = del $(subst /,\,$(1))
ifneq ($(wildcard $(addsuffix /rm.exe,$(subst ;, ,$(PATH)))),)
UNLINK = $(RM) $(1)
endif
ifneq ($(wildcard $(addsuffix /rm,$(subst :, ,$(PATH)))),)
UNLINK = $(RM) $(1)
endif

include sources.mak

CFLAGS += $(INCLUDE_DIRS) 

ifeq ($(X86),1)
CFLAGS += -DUSE_X86_ASM
CFLAGS += -DUSE_MMX_ASM
CFLAGS += -DUSE_SSE_ASM
CFLAGS += -DUSE_3DNOW_ASM
X86_SOURCES += $(X86_API)
else
X86_SOURCES =
endif

ifeq ($(FX),1)
DRIVER_SOURCES = \
	$(GLIDE_DRIVER_SOURCES) \
	drivers/windows/fx/fxwgl.c
else
ifeq ($(ICD),1)
DRIVER_SOURCES = \
	drivers/windows/gdi/wmesa.c \
	drivers/windows/icd/icd.c
else
DRIVER_SOURCES = \
	drivers/windows/gdi/wmesa.c \
	drivers/windows/gdi/wgl.c
endif
endif

SOURCES = $(MESA_SOURCES) $(GLAPI_SOURCES) $(X86_SOURCES) $(DRIVER_SOURCES)

OBJECTS = $(addsuffix .o,$(basename $(SOURCES)))

X86_OBJECTS = $(addsuffix .o,$(basename $(X86_SOURCES)))

RESOURCE = $(GL_RES:.rc=.res)

.c.o:
	$(CC) -o $@@ $(CFLAGS) -c $<
.s.o:
	$(CC) -o $@@ $(CFLAGS) -x assembler-with-cpp -c $<

.rc.res:
	windres -o $@@ -Irc -Ocoff $<


all: $(LIBDIR) $(LIBDIR)/$(GL_DLL) $(LIBDIR)/$(GL_IMP)

$(LIBDIR):
	mkdir -p $(LIBDIR)

$(LIBDIR)/$(GL_DLL) $(LIBDIR)/$(GL_IMP): $(OBJECTS) $(RESOURCE)
	$(CC) $(LDFLAGS) -o $(LIBDIR)/$(GL_DLL) $^ $(LDLIBS)
	$(DLLTOOL) --as=as --dllname $(LIB_NAME) --output-def $(LIBDIR)/$(GL_DEF) $^
	$(DLLTOOL) --as=as -k --dllname $(LIB_NAME) --output-lib $(LIBDIR)/$(GL_IMP) --def $(LIBDIR)/$(GL_DEF)


$(X86_OBJECTS): x86/matypes.h

x86/matypes.h: x86/gen_matypes.exe
	$(subst /,\,$< > $@@)

x86/gen_matypes.exe: x86/gen_matypes.c
	$(CC) -o $@@ $(CFLAGS) -s $<

# [dBorca]
# glapi_x86.S needs some adjustments
# in order to generate correct entrypoints
# Trick: change the following condition to
# be always false if you need C entrypoints
# with USE_X86_ASM (useful for trace/debug)
ifeq (1,1)
x86/glapi_x86.o: x86/glapi_x86.S
	$(CC) -o $@@ $(CFLAGS) -DSTDCALL_API -c $<
else
glapi/glapi_dispatch.o: glapi/glapi_dispatch.c
	$(CC) -o $@@ $(CFLAGS) -UUSE_X86_ASM -c $<
glapi/glapi.o: glapi/glapi.c
	$(CC) -o $@@ $(CFLAGS) -UUSE_X86_ASM -c $<
endif

# [dBorca]
# if we want codegen, we have to stdcall
tnl/t_vtx_x86_gcc.o: tnl/t_vtx_x86_gcc.S
	$(CC) -o $@@ $(CFLAGS) -DSTDCALL_API -c $<

clean:
	-$(call UNLINK,glapi/*.o)
	-$(call UNLINK,main/*.o)
	-$(call UNLINK,math/*.o)
	-$(call UNLINK,vbo/*.o)
	-$(call UNLINK,program/*.o)
	-$(call UNLINK,slang/*.o)
	-$(call UNLINK,sparc/*.o)
	-$(call UNLINK,ppc/*.o)
	-$(call UNLINK,swrast/*.o)
	-$(call UNLINK,swrast_setup/*.o)
	-$(call UNLINK,tnl/*.o)
	-$(call UNLINK,x86/*.o)
	-$(call UNLINK,x86/rtasm/*.o)
	-$(call UNLINK,x86-64/*.o)
	-$(call UNLINK,drivers/common/*.o)
	-$(call UNLINK,drivers/glide/*.o)
	-$(call UNLINK,drivers/windows/fx/*.o)
	-$(call UNLINK,drivers/windows/fx/*.res)
	-$(call UNLINK,drivers/windows/gdi/*.o)
	-$(call UNLINK,drivers/windows/icd/*.o)
@


1.4
log
@Merge Mesa 7.10.3
@
text
@@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d219 2
a220 2
	-$(call UNLINK,shader/*.o)
	-$(call UNLINK,shader/slang/*.o)
@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d127 1
a127 1
include sources
d203 1
a203 1
main/dispatch.o: main/dispatch.c
a220 1
	-$(call UNLINK,shader/grammar/*.o)
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# Version:  5.1
d29 10
a64 1

d72 15
a89 7
ifeq ($(ICD),1)
  GL_DLL = mesa32.dll
  GL_IMP = libmesa32.a
else
  GL_DLL = opengl32.dll
  GL_IMP = libopengl32.a
endif
d91 2
a92 1
LDLIBS = -lgdi32
d94 1
d96 7
a102 3
CFLAGS += -DBUILD_GL32 -D_OPENGL32_
CFLAGS += $(INCLUDE_DIRS)
CFLAGS += -DUSE_EXTERNAL_DXTN_LIB=1
d113 1
a113 1
    GL_DEF = drivers/windows/gdi/mesa.def
d117 1
a117 2
AR = ar
ARFLAGS = crus
d129 2
d157 1
a157 1
SOURCES = $(CORE_SOURCES) $(X86_SOURCES) $(COMMON_DRIVER_SOURCES) $(DRIVER_SOURCES)
a166 2
.S.o:
	$(CC) -o $@@ $(CFLAGS) -c $<
d169 1
d173 1
d180 4
a183 3
	$(TOOLS_PREFIX)dllwrap -o $(LIBDIR)/$(GL_DLL) --output-lib $(LIBDIR)/$(GL_IMP) \
	                       --target i386-mingw32 --def $(GL_DEF) -Wl,-enable-stdcall-fixup \
	                       $^ $(LDLIBS)
a214 1
	-$(call UNLINK,array_cache/*.o)
d218 1
d220 2
d228 2
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Mesa 7.0.1
@
text
@d2 1
a2 1
# Version:  7.0
a28 10
# MinGW core-gl makefile updated for Mesa 7.0
#
#  updated : by Heromyth, on 2007-7-21
#  Email   : zxpmyth@@yahoo.com.cn
#  Bugs    : 1) All the default settings work fine. But the setting X86=1 can't work. 
#            The others havn't been tested yet.
#            2) The generated DLLs are *not* compatible with the ones built
#            with the other compilers like VC8, especially for GLUT. 
#            3) Although more tests are needed, it can be used individually!

d55 1
d63 3
d67 2
a68 1
  LIB_NAME = mesa32
d70 2
a71 1
  LIB_NAME = opengl32
d74 1
a74 12
DLL_EXT = .dll
IMP_EXT = .a
LIB_PRE = lib
STRIP = -s

AR = ar
ARFLAGS = crus
DLLTOOL = dlltool

TOP = ../..
GLIDE ?= $(TOP)/glide3
LIBDIR = $(TOP)/lib
a75 4
GL_DLL = $(LIB_NAME)$(DLL_EXT)
GL_IMP = $(LIB_PRE)$(LIB_NAME)$(IMP_EXT)

MESA_LIB = libmesa.a
d77 3
a79 7

LDLIBS = -lgdi32 -luser32 -liberty
LDFLAGS = $(STRIP) -shared -fPIC -Wl,--kill-at

CFLAGS += -DBUILD_GL32 -D_DLL -DMESA_MINWARN
CFLAGS += -DNDEBUG -DUSE_EXTERNAL_DXTN_LIB=1

d90 1
a90 1
    GL_DEF = $(LIB_NAME).def
d94 2
a95 1

a106 2
CFLAGS += $(INCLUDE_DIRS) 

d143 2
a146 1

a149 1

d156 3
a158 4
	$(CC) $(LDFLAGS) -o $(LIBDIR)/$(GL_DLL) $^ $(LDLIBS)
	$(DLLTOOL) --as=as --dllname $(LIB_NAME) --output-def $(LIBDIR)/$(GL_DEF) $^
	$(DLLTOOL) --as=as -k --dllname $(LIB_NAME) --output-lib $(LIBDIR)/$(GL_IMP) --def $(LIBDIR)/$(GL_DEF)

d190 1
a193 1
	-$(call UNLINK,vbo/*.o)
a194 2
	-$(call UNLINK,shader/slang/*.o)
	-$(call UNLINK,shader/grammar/*.o)
a200 2
	-$(call UNLINK,x86/rtasm/*.o)
	-$(call UNLINK,x86-64/*.o)
@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@d127 1
a127 1
include sources.mak
d157 1
a157 1
SOURCES = $(MESA_SOURCES) $(GLAPI_SOURCES) $(X86_SOURCES) $(DRIVER_SOURCES)
d203 1
a203 1
glapi/glapi_dispatch.o: glapi/glapi_dispatch.c
d219 3
a221 2
	-$(call UNLINK,program/*.o)
	-$(call UNLINK,slang/*.o)
@


