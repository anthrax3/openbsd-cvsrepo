head	1.8;
access;
symbols
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	v10_2_9:1.1.1.5
	v10_4_3:1.1.1.4
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2015.12.23.05.17.48;	author jsg;	state dead;
branches;
next	1.7;
commitid	TnlogFl9nOv2eaRf;

1.7
date	2015.02.20.23.09.58;	author jsg;	state Exp;
branches;
next	1.6;
commitid	4ry2gvZGMXkCUD2n;

1.6
date	2015.01.25.14.41.20;	author jsg;	state Exp;
branches;
next	1.5;
commitid	mcxB0JvoI9gTDYXU;

1.5
date	2014.07.09.21.08.59;	author jsg;	state Exp;
branches;
next	1.4;
commitid	WPD6rgPryPkvXOr9;

1.4
date	2013.09.05.14.04.00;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.14;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.39;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.16;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.35;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.15.15;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.34.46;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	3JhLfwcuBALP0ZR7;

1.1.1.4
date	2015.01.25.14.11.17;	author jsg;	state Exp;
branches;
next	1.1.1.5;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.5
date	2015.02.20.22.48.24;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.8
log
@remove the now unused Mesa 10.2.9 code
@
text
@#######################################################################
# SConscript for Mesa


Import('*')
import filecmp
import os
import subprocess
from sys import executable as python_cmd

env = env.Clone()

env.Append(CPPPATH = [
    '#/src/mapi',
    '#/src/glsl',
    '#/src/mesa',
    Dir('../mapi'), # src/mapi build path
    Dir('.'), # src/mesa build path
])

if env['platform'] == 'windows':
    env.Append(CPPDEFINES = [
        '_GDI32_', # prevent gl* being declared __declspec(dllimport) in MS headers
        'BUILD_GL32', # declare gl* as __declspec(dllexport) in Mesa headers
    ])
    if not env['gles']:
        # prevent _glapi_* from being declared __declspec(dllimport)
        env.Append(CPPDEFINES = ['_GLAPI_NO_EXPORTS'])
else:
    env.Append(CPPDEFINES = [
        ('HAVE_DLOPEN', '1'),
    ])

#
# Source files
#

main_sources = [
    'main/api_arrayelt.c',
    'main/api_exec.c',
    'main/api_loopback.c',
    'main/api_validate.c',
    'main/accum.c',
    'main/arbprogram.c',
    'main/atifragshader.c',
    'main/attrib.c',
    'main/arrayobj.c',
    'main/blend.c',
    'main/blit.c',
    'main/bufferobj.c',
    'main/buffers.c',
    'main/clear.c',
    'main/clip.c',
    'main/colortab.c',
    'main/compute.c',
    'main/condrender.c',
    'main/context.c',
    'main/convolve.c',
    'main/cpuinfo.c',
    'main/debug.c',
    'main/depth.c',
    'main/dlist.c',
    'main/drawpix.c',
    'main/drawtex.c',
    'main/enable.c',
    'main/enums.c',
    'main/errors.c',
    'main/es1_conversion.c',
    'main/eval.c',
    'main/execmem.c',
    'main/extensions.c',
    'main/fbobject.c',
    'main/feedback.c',
    'main/ff_fragment_shader.cpp',
    'main/ffvertex_prog.c',
    'main/fog.c',
    'main/formatquery.c',
    'main/formats.c',
    'main/format_pack.c',
    'main/format_unpack.c',
    'main/framebuffer.c',
    'main/genmipmap.c',
    'main/getstring.c',
    'main/glformats.c',
    'main/hash.c',
    'main/hash_table.c',
    'main/hint.c',
    'main/histogram.c',
    'main/image.c',
    'main/imports.c',
    'main/light.c',
    'main/lines.c',
    'main/matrix.c',
    'main/mipmap.c',
    'main/mm.c',
    'main/multisample.c',
    'main/objectlabel.c',
    'main/pack.c',
    'main/pbo.c',
    'main/performance_monitor.c',
    'main/pipelineobj.c',
    'main/pixel.c',
    'main/pixelstore.c',
    'main/pixeltransfer.c',
    'main/points.c',
    'main/polygon.c',
    'main/querymatrix.c',
    'main/queryobj.c',
    'main/rastpos.c',
    'main/readpix.c',
    'main/remap.c',
    'main/renderbuffer.c',
    'main/samplerobj.c',
    'main/scissor.c',
    'main/set.c',
    'main/shaderapi.c',
    'main/shaderimage.c',
    'main/shaderobj.c',
    'main/shader_query.cpp',
    'main/shared.c',
    'main/state.c',
    'main/stencil.c',
    'main/syncobj.c',
    'main/texcompress.c',
    'main/texcompress_cpal.c',
    'main/texcompress_rgtc.c',
    'main/texcompress_s3tc.c',
    'main/texcompress_fxt1.c',
    'main/texcompress_etc.c',
    'main/texenv.c',
    'main/texformat.c',
    'main/texgen.c',
    'main/texgetimage.c',
    'main/teximage.c',
    'main/texobj.c',
    'main/texparam.c',
    'main/texstate.c',
    'main/texstorage.c',
    'main/texstore.c',
    'main/texturebarrier.c',
    'main/textureview.c',
    'main/transformfeedback.c',
    'main/uniform_query.cpp',
    'main/uniforms.c',
    'main/varray.c',
    'main/vdpau.c',
    'main/version.c',
    'main/viewport.c',
    'main/vtxfmt.c',
]

glget_sources = [
    'main/get.c',
]

math_sources = [
    'math/m_debug_clip.c',
    'math/m_debug_norm.c',
    'math/m_debug_xform.c',
    'math/m_eval.c',
    'math/m_matrix.c',
    'math/m_translate.c',
    'math/m_vector.c',
    'math/m_xform.c',
]

swrast_sources = [
    'swrast/s_aaline.c',
    'swrast/s_aatriangle.c',
    'swrast/s_alpha.c',
    'swrast/s_atifragshader.c',
    'swrast/s_bitmap.c',
    'swrast/s_blend.c',
    'swrast/s_blit.c',
    'swrast/s_clear.c',
    'swrast/s_copypix.c',
    'swrast/s_context.c',
    'swrast/s_depth.c',
    'swrast/s_drawpix.c',
    'swrast/s_feedback.c',
    'swrast/s_fog.c',
    'swrast/s_fragprog.c',
    'swrast/s_lines.c',
    'swrast/s_logic.c',
    'swrast/s_masking.c',
    'swrast/s_points.c',
    'swrast/s_renderbuffer.c',
    'swrast/s_span.c',
    'swrast/s_stencil.c',
    'swrast/s_texcombine.c',
    'swrast/s_texfetch.c',
    'swrast/s_texfilter.c',
    'swrast/s_texrender.c',
    'swrast/s_texture.c',
    'swrast/s_triangle.c',
    'swrast/s_zoom.c',
]

swrast_setup_sources = [
    'swrast_setup/ss_context.c',
    'swrast_setup/ss_triangle.c',
]

tnl_sources = [
    'tnl/t_context.c',
    'tnl/t_pipeline.c',
    'tnl/t_draw.c',
    'tnl/t_rasterpos.c',
    'tnl/t_vb_program.c',
    'tnl/t_vb_render.c',
    'tnl/t_vb_texgen.c',
    'tnl/t_vb_texmat.c',
    'tnl/t_vb_vertex.c',
    'tnl/t_vb_fog.c',
    'tnl/t_vb_light.c',
    'tnl/t_vb_normals.c',
    'tnl/t_vb_points.c',
    'tnl/t_vp_build.c',
    'tnl/t_vertex.c',
    'tnl/t_vertex_sse.c',
    'tnl/t_vertex_generic.c',
]

vbo_sources = [
    'vbo/vbo_context.c',
    'vbo/vbo_exec.c',
    'vbo/vbo_exec_api.c',
    'vbo/vbo_exec_array.c',
    'vbo/vbo_exec_draw.c',
    'vbo/vbo_exec_eval.c',
    'vbo/vbo_noop.c',
    'vbo/vbo_primitive_restart.c',
    'vbo/vbo_rebase.c',
    'vbo/vbo_split.c',
    'vbo/vbo_split_copy.c',
    'vbo/vbo_split_inplace.c',
    'vbo/vbo_save.c',
    'vbo/vbo_save_api.c',
    'vbo/vbo_save_draw.c',
    'vbo/vbo_save_loopback.c',
]

statetracker_sources = [
    'state_tracker/st_atom.c',
    'state_tracker/st_atom_array.c',
    'state_tracker/st_atom_blend.c',
    'state_tracker/st_atom_clip.c',
    'state_tracker/st_atom_constbuf.c',
    'state_tracker/st_atom_depth.c',
    'state_tracker/st_atom_framebuffer.c',
    'state_tracker/st_atom_msaa.c',
    'state_tracker/st_atom_pixeltransfer.c',
    'state_tracker/st_atom_sampler.c',
    'state_tracker/st_atom_scissor.c',
    'state_tracker/st_atom_shader.c',
    'state_tracker/st_atom_rasterizer.c',
    'state_tracker/st_atom_stipple.c',
    'state_tracker/st_atom_texture.c',
    'state_tracker/st_atom_viewport.c',
    'state_tracker/st_cb_bitmap.c',
    'state_tracker/st_cb_blit.c',
    'state_tracker/st_cb_bufferobjects.c',
    'state_tracker/st_cb_clear.c',
    'state_tracker/st_cb_condrender.c',
    'state_tracker/st_cb_flush.c',
    'state_tracker/st_cb_drawpixels.c',
    'state_tracker/st_cb_drawtex.c',
    'state_tracker/st_cb_eglimage.c',
    'state_tracker/st_cb_fbo.c',
    'state_tracker/st_cb_feedback.c',
    'state_tracker/st_cb_msaa.c',
    'state_tracker/st_cb_program.c',
    'state_tracker/st_cb_queryobj.c',
    'state_tracker/st_cb_rasterpos.c',
    'state_tracker/st_cb_readpixels.c',
    'state_tracker/st_cb_syncobj.c',
    'state_tracker/st_cb_strings.c',
    'state_tracker/st_cb_texture.c',
    'state_tracker/st_cb_texturebarrier.c',
    'state_tracker/st_cb_viewport.c',
    'state_tracker/st_cb_xformfb.c',
    'state_tracker/st_context.c',
    'state_tracker/st_debug.c',
    'state_tracker/st_draw.c',
    'state_tracker/st_draw_feedback.c',
    'state_tracker/st_extensions.c',
    'state_tracker/st_format.c',
    'state_tracker/st_glsl_to_tgsi.cpp',
    'state_tracker/st_gen_mipmap.c',
    'state_tracker/st_manager.c',
    'state_tracker/st_mesa_to_tgsi.c',
    'state_tracker/st_program.c',
    'state_tracker/st_texture.c',
    'state_tracker/st_vdpau.c',
]

env.Append(YACCFLAGS = '-d -p "_mesa_program_"')
program_lex = env.CFile('program/lex.yy.c', 'program/program_lexer.l')
program_parse = env.CFile('program/program_parse.tab.c',
                          'program/program_parse.y')

program_sources = [
    'program/arbprogparse.c',
    'program/prog_hash_table.c',
    'program/ir_to_mesa.cpp',
    'program/program.c',
    'program/program_parse_extra.c',
    'program/prog_cache.c',
    'program/prog_execute.c',
    'program/prog_instruction.c',
    'program/prog_noise.c',
    'program/prog_optimize.c',
    'program/prog_opt_constant_fold.c',
    'program/prog_parameter.c',
    'program/prog_parameter_layout.c',
    'program/prog_print.c',
    'program/prog_statevars.c',
    'program/programopt.c',
    'program/sampler.cpp',
    'program/symbol_table.c',
    'program/string_to_uint_map.cpp',
    program_lex,
    program_parse[0],
]

common_driver_sources =	[
    'drivers/common/driverfuncs.c',
    'drivers/common/meta.c',
    'drivers/common/meta_blit.c',
    'drivers/common/meta_generate_mipmap.c'
]

mesa_sources = (
    main_sources +
    glget_sources +
    math_sources +
    program_sources +
    vbo_sources +
    tnl_sources +
    swrast_sources +
    swrast_setup_sources +
    common_driver_sources +
    statetracker_sources
)

GLAPI = '#src/mapi/glapi/'

get_hash_header = env.CodeGenerate(
      target = 'main/get_hash.h',
      script = 'main/get_hash_generator.py',
      source = GLAPI + 'gen/gl_and_es_API.xml',
      command = python_cmd + ' $SCRIPT ' + ' -f $SOURCE > $TARGET'
)

#
# Assembly sources
#
if (env['gcc'] or env['clang']) and \
   env['platform'] not in ('cygwin', 'darwin', 'windows', 'haiku'):
    if env['machine'] == 'x86':
        env.Append(CPPDEFINES = [
            'USE_X86_ASM',
            'USE_MMX_ASM',
            'USE_3DNOW_ASM',
            'USE_SSE_ASM',
        ])
        mesa_sources += [
            'x86/common_x86.c',
            'x86/x86_xform.c',
            'x86/3dnow.c',
            'x86/sse.c',
            'x86/common_x86_asm.S',
            'x86/x86_xform2.S',
            'x86/x86_xform3.S',
            'x86/x86_xform4.S',
            'x86/x86_cliptest.S',
            'x86/mmx_blend.S',
            'x86/3dnow_xform1.S',
            'x86/3dnow_xform2.S',
            'x86/3dnow_xform3.S',
            'x86/3dnow_xform4.S',
            'x86/3dnow_normal.S',
            'x86/sse_xform1.S',
            'x86/sse_xform2.S',
            'x86/sse_xform3.S',
            'x86/sse_xform4.S',
            'x86/sse_normal.S',
            'x86/read_rgba_span_x86.S',
        ]
    elif env['machine'] == 'x86_64':
        env.Append(CPPDEFINES = [
            'USE_X86_64_ASM',
        ])
        mesa_sources += [
            'x86-64/x86-64.c',
            'x86-64/xform4.S',
        ]
    elif env['machine'] == 'sparc':
        mesa_sources += [
            'sparc/sparc.c',
            'sparc/sparc_clip.S',
            'sparc/norm.S',
            'sparc/xform.S',
        ]
    else:
        pass

    # Generate matypes.h
    if env['machine'] in ('x86', 'x86_64'):
        # See http://www.scons.org/wiki/UsingCodeGenerators
        gen_matypes = env.Program(
            target = 'gen_matypes',
            source = 'x86/gen_matypes.c',
        )
        matypes = env.Command(
            'matypes.h',
            gen_matypes,
            gen_matypes[0].abspath + ' > $TARGET',
        )
        # Add the dir containing the generated header (somewhere inside  the
        # build dir) to the include path
        env.Append(CPPPATH = [matypes[0].dir])


def write_git_sha1_h_file(filename):
    """Mesa looks for a git_sha1.h file at compile time in order to display
    the current git hash id in the GL_VERSION string.  This function tries
    to retrieve the git hashid and write the header file.  An empty file
    will be created if anything goes wrong."""

    args = [ 'git', 'log', '-n', '1', '--oneline' ]
    try:
        (commit, foo) = subprocess.Popen(args, stdout=subprocess.PIPE).communicate()
    except:
        # git log command didn't work
        if not os.path.exists(filename):
            # create an empty file if none already exists
            f = open(filename, "w")
            f.close()
        return

    commit = '#define MESA_GIT_SHA1 "git-%s"\n' % commit[0:7]
    tempfile = "git_sha1.h.tmp"
    f = open(tempfile, "w")
    f.write(commit)
    f.close()
    if not os.path.exists(filename) or not filecmp.cmp(tempfile, filename):
        # The filename does not exist or it's different from the new file,
        # so replace old file with new.
        if os.path.exists(filename):
            os.remove(filename)
        os.rename(tempfile, filename)
    return


# Create the git_sha1.h header file
write_git_sha1_h_file("main/git_sha1.h")
# and update CPPPATH so the git_sha1.h header can be found
env.Append(CPPPATH = ["#" + env['build_dir'] + "/mesa/main"])


#
# Libraries
#

mesa = env.ConvenienceLibrary(
    target = 'mesa',
    source = mesa_sources,
)

env.Alias('mesa', mesa)

Export('mesa')

SConscript('drivers/SConscript')
@


1.7
log
@Merge Mesa 10.2.9
@
text
@@


1.6
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@a13 1
    '#/src',
d34 262
a295 2
# parse Makefile.sources
source_lists = env.ParseSourceList('Makefile.sources')
d301 21
a321 1
program_sources = source_lists['PROGRAM_FILES'] + [
d326 7
d334 3
a336 1
    source_lists['MESA_FILES'] +
d338 6
a343 1
    source_lists['STATETRACKER_FILES']
a354 7
format_info = env.CodeGenerate(
      target = 'main/format_info.c',
      script = 'main/format_info.py',
      source = 'main/formats.csv',
      command = python_cmd + ' $SCRIPT ' + ' $SOURCE > $TARGET'
)

d367 23
a389 1
        mesa_sources += source_lists['X86_FILES']
d394 4
a397 1
        mesa_sources += source_lists['X86_64_FILES']
d399 6
a404 1
        mesa_sources += source_lists['SPARC_FILES']
@


1.5
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@d14 1
d35 2
a36 262
#
# Source files
#

main_sources = [
    'main/api_arrayelt.c',
    'main/api_exec.c',
    'main/api_loopback.c',
    'main/api_validate.c',
    'main/accum.c',
    'main/arbprogram.c',
    'main/atifragshader.c',
    'main/attrib.c',
    'main/arrayobj.c',
    'main/blend.c',
    'main/blit.c',
    'main/bufferobj.c',
    'main/buffers.c',
    'main/clear.c',
    'main/clip.c',
    'main/colortab.c',
    'main/compute.c',
    'main/condrender.c',
    'main/context.c',
    'main/convolve.c',
    'main/cpuinfo.c',
    'main/debug.c',
    'main/depth.c',
    'main/dlist.c',
    'main/drawpix.c',
    'main/drawtex.c',
    'main/enable.c',
    'main/enums.c',
    'main/errors.c',
    'main/es1_conversion.c',
    'main/eval.c',
    'main/execmem.c',
    'main/extensions.c',
    'main/fbobject.c',
    'main/feedback.c',
    'main/ff_fragment_shader.cpp',
    'main/ffvertex_prog.c',
    'main/fog.c',
    'main/formatquery.c',
    'main/formats.c',
    'main/format_pack.c',
    'main/format_unpack.c',
    'main/framebuffer.c',
    'main/genmipmap.c',
    'main/getstring.c',
    'main/glformats.c',
    'main/hash.c',
    'main/hash_table.c',
    'main/hint.c',
    'main/histogram.c',
    'main/image.c',
    'main/imports.c',
    'main/light.c',
    'main/lines.c',
    'main/matrix.c',
    'main/mipmap.c',
    'main/mm.c',
    'main/multisample.c',
    'main/objectlabel.c',
    'main/pack.c',
    'main/pbo.c',
    'main/performance_monitor.c',
    'main/pipelineobj.c',
    'main/pixel.c',
    'main/pixelstore.c',
    'main/pixeltransfer.c',
    'main/points.c',
    'main/polygon.c',
    'main/querymatrix.c',
    'main/queryobj.c',
    'main/rastpos.c',
    'main/readpix.c',
    'main/remap.c',
    'main/renderbuffer.c',
    'main/samplerobj.c',
    'main/scissor.c',
    'main/set.c',
    'main/shaderapi.c',
    'main/shaderimage.c',
    'main/shaderobj.c',
    'main/shader_query.cpp',
    'main/shared.c',
    'main/state.c',
    'main/stencil.c',
    'main/syncobj.c',
    'main/texcompress.c',
    'main/texcompress_cpal.c',
    'main/texcompress_rgtc.c',
    'main/texcompress_s3tc.c',
    'main/texcompress_fxt1.c',
    'main/texcompress_etc.c',
    'main/texenv.c',
    'main/texformat.c',
    'main/texgen.c',
    'main/texgetimage.c',
    'main/teximage.c',
    'main/texobj.c',
    'main/texparam.c',
    'main/texstate.c',
    'main/texstorage.c',
    'main/texstore.c',
    'main/texturebarrier.c',
    'main/textureview.c',
    'main/transformfeedback.c',
    'main/uniform_query.cpp',
    'main/uniforms.c',
    'main/varray.c',
    'main/vdpau.c',
    'main/version.c',
    'main/viewport.c',
    'main/vtxfmt.c',
]

glget_sources = [
    'main/get.c',
]

math_sources = [
    'math/m_debug_clip.c',
    'math/m_debug_norm.c',
    'math/m_debug_xform.c',
    'math/m_eval.c',
    'math/m_matrix.c',
    'math/m_translate.c',
    'math/m_vector.c',
    'math/m_xform.c',
]

swrast_sources = [
    'swrast/s_aaline.c',
    'swrast/s_aatriangle.c',
    'swrast/s_alpha.c',
    'swrast/s_atifragshader.c',
    'swrast/s_bitmap.c',
    'swrast/s_blend.c',
    'swrast/s_blit.c',
    'swrast/s_clear.c',
    'swrast/s_copypix.c',
    'swrast/s_context.c',
    'swrast/s_depth.c',
    'swrast/s_drawpix.c',
    'swrast/s_feedback.c',
    'swrast/s_fog.c',
    'swrast/s_fragprog.c',
    'swrast/s_lines.c',
    'swrast/s_logic.c',
    'swrast/s_masking.c',
    'swrast/s_points.c',
    'swrast/s_renderbuffer.c',
    'swrast/s_span.c',
    'swrast/s_stencil.c',
    'swrast/s_texcombine.c',
    'swrast/s_texfetch.c',
    'swrast/s_texfilter.c',
    'swrast/s_texrender.c',
    'swrast/s_texture.c',
    'swrast/s_triangle.c',
    'swrast/s_zoom.c',
]

swrast_setup_sources = [
    'swrast_setup/ss_context.c',
    'swrast_setup/ss_triangle.c',
]

tnl_sources = [
    'tnl/t_context.c',
    'tnl/t_pipeline.c',
    'tnl/t_draw.c',
    'tnl/t_rasterpos.c',
    'tnl/t_vb_program.c',
    'tnl/t_vb_render.c',
    'tnl/t_vb_texgen.c',
    'tnl/t_vb_texmat.c',
    'tnl/t_vb_vertex.c',
    'tnl/t_vb_fog.c',
    'tnl/t_vb_light.c',
    'tnl/t_vb_normals.c',
    'tnl/t_vb_points.c',
    'tnl/t_vp_build.c',
    'tnl/t_vertex.c',
    'tnl/t_vertex_sse.c',
    'tnl/t_vertex_generic.c',
]

vbo_sources = [
    'vbo/vbo_context.c',
    'vbo/vbo_exec.c',
    'vbo/vbo_exec_api.c',
    'vbo/vbo_exec_array.c',
    'vbo/vbo_exec_draw.c',
    'vbo/vbo_exec_eval.c',
    'vbo/vbo_noop.c',
    'vbo/vbo_primitive_restart.c',
    'vbo/vbo_rebase.c',
    'vbo/vbo_split.c',
    'vbo/vbo_split_copy.c',
    'vbo/vbo_split_inplace.c',
    'vbo/vbo_save.c',
    'vbo/vbo_save_api.c',
    'vbo/vbo_save_draw.c',
    'vbo/vbo_save_loopback.c',
]

statetracker_sources = [
    'state_tracker/st_atom.c',
    'state_tracker/st_atom_array.c',
    'state_tracker/st_atom_blend.c',
    'state_tracker/st_atom_clip.c',
    'state_tracker/st_atom_constbuf.c',
    'state_tracker/st_atom_depth.c',
    'state_tracker/st_atom_framebuffer.c',
    'state_tracker/st_atom_msaa.c',
    'state_tracker/st_atom_pixeltransfer.c',
    'state_tracker/st_atom_sampler.c',
    'state_tracker/st_atom_scissor.c',
    'state_tracker/st_atom_shader.c',
    'state_tracker/st_atom_rasterizer.c',
    'state_tracker/st_atom_stipple.c',
    'state_tracker/st_atom_texture.c',
    'state_tracker/st_atom_viewport.c',
    'state_tracker/st_cb_bitmap.c',
    'state_tracker/st_cb_blit.c',
    'state_tracker/st_cb_bufferobjects.c',
    'state_tracker/st_cb_clear.c',
    'state_tracker/st_cb_condrender.c',
    'state_tracker/st_cb_flush.c',
    'state_tracker/st_cb_drawpixels.c',
    'state_tracker/st_cb_drawtex.c',
    'state_tracker/st_cb_eglimage.c',
    'state_tracker/st_cb_fbo.c',
    'state_tracker/st_cb_feedback.c',
    'state_tracker/st_cb_msaa.c',
    'state_tracker/st_cb_program.c',
    'state_tracker/st_cb_queryobj.c',
    'state_tracker/st_cb_rasterpos.c',
    'state_tracker/st_cb_readpixels.c',
    'state_tracker/st_cb_syncobj.c',
    'state_tracker/st_cb_strings.c',
    'state_tracker/st_cb_texture.c',
    'state_tracker/st_cb_texturebarrier.c',
    'state_tracker/st_cb_viewport.c',
    'state_tracker/st_cb_xformfb.c',
    'state_tracker/st_context.c',
    'state_tracker/st_debug.c',
    'state_tracker/st_draw.c',
    'state_tracker/st_draw_feedback.c',
    'state_tracker/st_extensions.c',
    'state_tracker/st_format.c',
    'state_tracker/st_glsl_to_tgsi.cpp',
    'state_tracker/st_gen_mipmap.c',
    'state_tracker/st_manager.c',
    'state_tracker/st_mesa_to_tgsi.c',
    'state_tracker/st_program.c',
    'state_tracker/st_texture.c',
    'state_tracker/st_vdpau.c',
]
d42 1
a42 21

program_sources = [
    'program/arbprogparse.c',
    'program/prog_hash_table.c',
    'program/ir_to_mesa.cpp',
    'program/program.c',
    'program/program_parse_extra.c',
    'program/prog_cache.c',
    'program/prog_execute.c',
    'program/prog_instruction.c',
    'program/prog_noise.c',
    'program/prog_optimize.c',
    'program/prog_opt_constant_fold.c',
    'program/prog_parameter.c',
    'program/prog_parameter_layout.c',
    'program/prog_print.c',
    'program/prog_statevars.c',
    'program/programopt.c',
    'program/sampler.cpp',
    'program/symbol_table.c',
    'program/string_to_uint_map.cpp',
a46 7
common_driver_sources =	[
    'drivers/common/driverfuncs.c',
    'drivers/common/meta.c',
    'drivers/common/meta_blit.c',
    'drivers/common/meta_generate_mipmap.c'
]

d48 1
a48 3
    main_sources +
    glget_sources +
    math_sources +
d50 1
a50 6
    vbo_sources +
    tnl_sources +
    swrast_sources +
    swrast_setup_sources +
    common_driver_sources +
    statetracker_sources
d62 7
d81 1
a81 23
        mesa_sources += [
            'x86/common_x86.c',
            'x86/x86_xform.c',
            'x86/3dnow.c',
            'x86/sse.c',
            'x86/common_x86_asm.S',
            'x86/x86_xform2.S',
            'x86/x86_xform3.S',
            'x86/x86_xform4.S',
            'x86/x86_cliptest.S',
            'x86/mmx_blend.S',
            'x86/3dnow_xform1.S',
            'x86/3dnow_xform2.S',
            'x86/3dnow_xform3.S',
            'x86/3dnow_xform4.S',
            'x86/3dnow_normal.S',
            'x86/sse_xform1.S',
            'x86/sse_xform2.S',
            'x86/sse_xform3.S',
            'x86/sse_xform4.S',
            'x86/sse_normal.S',
            'x86/read_rgba_span_x86.S',
        ]
d86 1
a86 4
        mesa_sources += [
            'x86-64/x86-64.c',
            'x86-64/xform4.S',
        ]
d88 1
a88 6
        mesa_sources += [
            'sparc/sparc.c',
            'sparc/sparc_clip.S',
            'sparc/norm.S',
            'sparc/xform.S',
        ]
@


1.4
log
@Merge Mesa 9.2.0
@
text
@a20 3
enabled_apis = []
enabled_apis += ['GL']

d49 1
d55 1
d82 1
d97 1
d100 2
d117 1
d141 1
d146 1
d294 1
d329 2
a346 4

if env['gles']:

    enabled_apis += ['ES1', 'ES2']
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d6 4
d17 2
d21 2
a22 3
env.Append(CPPDEFINES = [
    'FEATURE_GL=1',
])
d34 1
a34 1
        'IN_DRI_DRIVER', # enable the remap table (for DRI drivers)
a44 1
    'main/api_noop.c',
a62 1
    'main/depthstencil.c',
a63 1
    'main/dlopen.c',
d68 2
d78 1
d80 2
a82 1
    'main/get.c',
d84 1
d86 1
a96 1
    'main/nvprogram.c',
d112 1
d115 1
d121 1
d125 1
a126 1
    'main/texfetch.c',
a131 1
    'main/texpal.c',
d134 1
d138 1
d146 4
a160 4
math_xform_sources = [
    'math/m_xform.c'
]

a163 1
    'swrast/s_accum.c',
d181 1
a181 1
    'swrast/s_readpix.c',
d185 1
d188 1
d225 2
d239 1
a253 1
    'state_tracker/st_cb_accum.c',
d265 1
d282 1
d290 1
a290 1
env.Append(YACCFLAGS = '-d')
a294 3
# Make program/program_parse.tab.h reacheable from the include path
env.Append(CPPPATH = [Dir('.').abspath])

d297 1
a297 1
    'program/hash_table.c',
a298 2
    'program/nvfragparse.c',
    'program/nvvertparse.c',
d306 1
a310 1
    'program/prog_uniform.c',
d314 1
d326 1
a327 1
    math_xform_sources +
d337 2
a339 1
    from sys import executable as python_cmd
d341 1
a341 1
    env.Append(CPPDEFINES = ['FEATURE_ES1=1', 'FEATURE_ES2=1'])
d343 6
a348 49
    # generate GLES sources
    gles_sources = []
    gles_sources += env.CodeGenerate(
        target = 'main/api_exec_es1.c',
        script = 'main/es_generator.py',
        source = 'main/APIspec.xml',
        command = python_cmd + ' $SCRIPT -S $SOURCE -V GLES1.1 > $TARGET'
    )
    gles_sources += env.CodeGenerate(
        target = 'main/api_exec_es2.c',
        script = 'main/es_generator.py',
        source = 'main/APIspec.xml',
        command = python_cmd + ' $SCRIPT -S $SOURCE -V GLES2.0 > $TARGET'
    )

    # generate GLES headers
    GLAPI = '#src/mapi/glapi/'
    gles_headers = []
    gles_headers += env.CodeGenerate(
        target = 'es1api/main/dispatch.h',
        script = GLAPI + 'gen/gl_table.py',
        source = GLAPI + 'gen-es/es1_API.xml',
        command = python_cmd + ' $SCRIPT -c -m remap_table -f $SOURCE > $TARGET',
    )
    gles_headers += env.CodeGenerate(
        target = 'es1api/main/remap_helper.h',
        script = GLAPI + 'gen/remap_helper.py',
        source = GLAPI + 'gen-es/es1_API.xml',
        command = python_cmd + ' $SCRIPT -f $SOURCE > $TARGET',
    )
    gles_headers += env.CodeGenerate(
        target = 'es2api/main/dispatch.h',
        script = GLAPI + 'gen/gl_table.py',
        source = GLAPI + 'gen-es/es2_API.xml',
        command = python_cmd + ' $SCRIPT -c -m remap_table -f $SOURCE > $TARGET',
    )
    gles_headers += env.CodeGenerate(
        target = 'es2api/main/remap_helper.h',
        script = GLAPI + 'gen/remap_helper.py',
        source = GLAPI + 'gen-es/es2_API.xml',
        command = python_cmd + ' $SCRIPT -f $SOURCE > $TARGET',
    )

    env.Depends(gles_sources, gles_headers)

    # gles_sources #include gles_headers with full path
    env.Append(CPPPATH = [gles_headers[0].dir.up().up()])

    mesa_sources += gles_sources
d353 2
a354 1
if env['gcc'] and env['platform'] != 'windows':
a392 8
    elif env['machine'] == 'ppc':
        env.Append(CPPDEFINES = [
            'USE_PPC_ASM',
            'USE_VMX_ASM',
        ])
        mesa_sources += [
            'ppc/common_ppc.c',
        ]
d396 1
a396 1
            'sparc/clip.S',
d420 21
a440 6
# Create the git_sha1.h file if it doesn't exist already
try:
    f = open('main/git_sha1.h', 'r')
    f.close()
except IOError:
    f = open('main/git_sha1.h', 'w')
d442 11
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d15 4
d24 3
d71 1
d91 1
d103 1
d112 1
a115 1
    'main/texenvprogram.c',
a123 1
    'main/texrender.c',
d126 1
d146 60
a222 6
vf_sources = [
    'vf/vf.c',
    'vf/vf_generic.c',
    'vf/vf_sse.c',
]

d255 1
d258 1
d274 8
a285 1
    'program/lex.yy.c',
a288 1
    'program/program_parse.tab.c',
d303 7
d315 1
d318 4
a321 1
    vf_sources +
d325 55
d456 12
d480 2
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d7 1
a7 1
if env['platform'] != 'winddk':
d9 5
a13 352
	env = env.Clone()
	
	env.Append(CPPPATH = [
		'#/src/mesa',
	])
	
	if env['platform'] == 'windows':
		env.Append(CPPDEFINES = [
			'_GDI32_', # prevent gl* being declared __declspec(dllimport) in MS headers
			'BUILD_GL32', # declare gl* as __declspec(dllexport) in Mesa headers 
			'WIN32_THREADS', # use Win32 thread API
		])	 

	#
	# Source files
	#
	
	main_sources = [
		'main/api_arrayelt.c',
		'main/api_exec.c',
		'main/api_loopback.c',
		'main/api_noop.c',
		'main/api_validate.c',
		'main/accum.c',
		'main/attrib.c',
		'main/arrayobj.c',
		'main/blend.c',
		'main/bufferobj.c',
		'main/buffers.c',
		'main/clear.c',
		'main/clip.c',
		'main/colortab.c',
		'main/condrender.c',
		'main/context.c',
		'main/convolve.c',
		'main/cpuinfo.c',
		'main/debug.c',
		'main/depth.c',
		'main/depthstencil.c',
		'main/dlist.c',
		'main/dlopen.c',
		'main/drawpix.c',
		'main/enable.c',
		'main/enums.c',
		'main/eval.c',
		'main/execmem.c',
		'main/extensions.c',
		'main/fbobject.c',
		'main/feedback.c',
		'main/ffvertex_prog.c',
		'main/fog.c',
		'main/formats.c',
		'main/framebuffer.c',
		'main/get.c',
		'main/getstring.c',
		'main/hash.c',
		'main/hint.c',
		'main/histogram.c',
		'main/image.c',
		'main/imports.c',
		'main/light.c',
		'main/lines.c',
		'main/matrix.c',
		'main/mipmap.c',
		'main/mm.c',
		'main/multisample.c',
		'main/pixel.c',
		'main/pixelstore.c',
		'main/points.c',
		'main/polygon.c',
		'main/queryobj.c',
		'main/rastpos.c',
		'main/rbadaptors.c',
		'main/readpix.c',
		'main/remap.c',
		'main/renderbuffer.c',
		'main/scissor.c',
		'main/shaders.c',
		'main/shared.c',
		'main/state.c',
		'main/stencil.c',
		'main/syncobj.c',
		'main/texcompress.c',
		'main/texcompress_s3tc.c',
		'main/texcompress_fxt1.c',
		'main/texenv.c',
		'main/texenvprogram.c',
		'main/texfetch.c',
		'main/texformat.c',
		'main/texgen.c',
		'main/texgetimage.c',
		'main/teximage.c',
		'main/texobj.c',
		'main/texparam.c',
		'main/texrender.c',
		'main/texstate.c',
		'main/texstore.c',
		'main/varray.c',
		'main/version.c',
		'main/viewport.c',
		'main/vtxfmt.c',
	]
	
	math_sources = [
		'math/m_debug_clip.c',
		'math/m_debug_norm.c',
		'math/m_debug_xform.c',
		'math/m_eval.c',
		'math/m_matrix.c',
		'math/m_translate.c',
		'math/m_vector.c',
		'math/m_xform.c',
	]
	
	vbo_sources = [
		'vbo/vbo_context.c',
		'vbo/vbo_exec.c',
		'vbo/vbo_exec_api.c',
		'vbo/vbo_exec_array.c',
		'vbo/vbo_exec_draw.c',
		'vbo/vbo_exec_eval.c',
		'vbo/vbo_rebase.c',
		'vbo/vbo_split.c',
		'vbo/vbo_split_copy.c',
		'vbo/vbo_split_inplace.c',
		'vbo/vbo_save.c',
		'vbo/vbo_save_api.c',
		'vbo/vbo_save_draw.c',
		'vbo/vbo_save_loopback.c',
	]
	
	vf_sources = [
		'vf/vf.c',
		'vf/vf_generic.c',
		'vf/vf_sse.c',
	]
	
	statetracker_sources = [
		'state_tracker/st_atom.c',
		'state_tracker/st_atom_blend.c',
		'state_tracker/st_atom_clip.c',
		'state_tracker/st_atom_constbuf.c',
		'state_tracker/st_atom_depth.c',
		'state_tracker/st_atom_framebuffer.c',
		'state_tracker/st_atom_pixeltransfer.c',
		'state_tracker/st_atom_sampler.c',
		'state_tracker/st_atom_scissor.c',
		'state_tracker/st_atom_shader.c',
		'state_tracker/st_atom_rasterizer.c',
		'state_tracker/st_atom_stipple.c',
		'state_tracker/st_atom_texture.c',
		'state_tracker/st_atom_viewport.c',
		'state_tracker/st_cb_accum.c',
		'state_tracker/st_cb_bitmap.c',
		'state_tracker/st_cb_blit.c',
		'state_tracker/st_cb_bufferobjects.c',
		'state_tracker/st_cb_clear.c',
		'state_tracker/st_cb_condrender.c',
		'state_tracker/st_cb_flush.c',
		'state_tracker/st_cb_drawpixels.c',
		'state_tracker/st_cb_fbo.c',
		'state_tracker/st_cb_feedback.c',
		'state_tracker/st_cb_program.c',
		'state_tracker/st_cb_queryobj.c',
		'state_tracker/st_cb_rasterpos.c',
		'state_tracker/st_cb_readpixels.c',
		'state_tracker/st_cb_strings.c',
		'state_tracker/st_cb_texture.c',
		'state_tracker/st_context.c',
		'state_tracker/st_debug.c',
		'state_tracker/st_draw.c',
		'state_tracker/st_draw_feedback.c',
		'state_tracker/st_extensions.c',
		'state_tracker/st_format.c',
		'state_tracker/st_framebuffer.c',
		'state_tracker/st_gen_mipmap.c',
		'state_tracker/st_mesa_to_tgsi.c',
		'state_tracker/st_program.c',
		'state_tracker/st_texture.c',
	]
	
	shader_sources = [
		'shader/arbprogparse.c',
		'shader/arbprogram.c',
		'shader/atifragshader.c',
		'shader/hash_table.c',
		'shader/lex.yy.c',
		'shader/nvfragparse.c',
		'shader/nvprogram.c',
		'shader/nvvertparse.c',
		'shader/program.c',
		'shader/program_parse.tab.c',
		'shader/program_parse_extra.c',
		'shader/prog_cache.c',
		'shader/prog_execute.c',
		'shader/prog_instruction.c',
		'shader/prog_noise.c',
		'shader/prog_optimize.c',
		'shader/prog_parameter.c',
		'shader/prog_parameter_layout.c',
		'shader/prog_print.c',
		'shader/prog_statevars.c',
		'shader/prog_uniform.c',
		'shader/programopt.c',
		'shader/symbol_table.c',
		'shader/shader_api.c',
	]
	
	slang_sources = [
		'shader/slang/slang_builtin.c',
		'shader/slang/slang_codegen.c',
		'shader/slang/slang_compile.c',
		'shader/slang/slang_compile_function.c',
		'shader/slang/slang_compile_operation.c',
		'shader/slang/slang_compile_struct.c',
		'shader/slang/slang_compile_variable.c',
		'shader/slang/slang_emit.c',
		'shader/slang/slang_ir.c',
		'shader/slang/slang_label.c',
		'shader/slang/slang_link.c',
		'shader/slang/slang_log.c',
		'shader/slang/slang_mem.c',
		'shader/slang/slang_print.c',
		'shader/slang/slang_simplify.c',
		'shader/slang/slang_storage.c',
		'shader/slang/slang_typeinfo.c',
		'shader/slang/slang_vartable.c',
		'shader/slang/slang_utility.c',
	]
	
	mesa_sources = (
		main_sources +
		math_sources +
		vbo_sources +
		vf_sources +
		statetracker_sources +
		shader_sources +
		slang_sources
	)

	glapi_sources = [
		'glapi/glapi.c',
		'glapi/glapi_dispatch.c',
		'glapi/glapi_getproc.c',
		'glapi/glapi_nop.c',
		'glapi/glthread.c',
	]
	
	#
	# Assembly sources
	#
	if gcc and env['machine'] == 'x86':
		env.Append(CPPDEFINES = [
			'USE_X86_ASM', 
			'USE_MMX_ASM',
			'USE_3DNOW_ASM',
			'USE_SSE_ASM',
		])
		mesa_sources += [
			'x86/common_x86.c',
			'x86/x86_xform.c',
			'x86/3dnow.c',
			'x86/sse.c',
			'x86/common_x86_asm.S',
			'x86/x86_xform2.S',
			'x86/x86_xform3.S',
			'x86/x86_xform4.S',
			'x86/x86_cliptest.S',
			'x86/mmx_blend.S',
			'x86/3dnow_xform1.S',
			'x86/3dnow_xform2.S',
			'x86/3dnow_xform3.S',
			'x86/3dnow_xform4.S',
			'x86/3dnow_normal.S',
			'x86/sse_xform1.S',
			'x86/sse_xform2.S',
			'x86/sse_xform3.S',
			'x86/sse_xform4.S',
			'x86/sse_normal.S',
			'x86/read_rgba_span_x86.S',
		]
		glapi_sources += [
			'x86/glapi_x86.S',
		]
	elif gcc and env['machine'] == 'x86_64':
		env.Append(CPPDEFINES = [
			'USE_X86_64_ASM', 
		])
		mesa_sources += [
			'x86-64/x86-64.c',
			'x86-64/xform4.S',
		]
		glapi_sources += [
			'x86-64/glapi_x86-64.S'
		]
	elif gcc and env['machine'] == 'ppc':
		env.Append(CPPDEFINES = [
			'USE_PPC_ASM', 
			'USE_VMX_ASM', 
		])
		mesa_sources += [
			'ppc/common_ppc.c',
		]
		glapi_sources += [
		]
	elif gcc and env['machine'] == 'sparc':
		mesa_sources += [
			'sparc/sparc.c',
			'sparc/clip.S',
			'sparc/norm.S',
			'sparc/xform.S',
		]
		glapi_sources += [
			'sparc/glapi_sparc.S'
		]
	else:
		pass
	
	# Generate matypes.h
	if gcc and env['machine'] in ('x86', 'x86_64'):
		# See http://www.scons.org/wiki/UsingCodeGenerators
		gen_matypes = env.Program(
			target = 'gen_matypes',
			source = 'x86/gen_matypes.c',
		)
		matypes = env.Command(
			'matypes.h',
			gen_matypes,
			gen_matypes[0].abspath + ' > $TARGET',
		)
		# Add the dir containing the generated header (somewhere inside  the
		# build dir) to the include path  
		env.Append(CPPPATH = [matypes[0].dir])

	SConscript('shader/slang/library/SConscript')

	#
	# Libraries
	# 

	mesa = env.ConvenienceLibrary(
		target = 'mesa',
		source = mesa_sources,
	)
	Export('mesa')
	
	if not dri:
		glapi = env.ConvenienceLibrary(
			target = 'glapi',
			source = glapi_sources,
		)
		Export('glapi')
d15 315
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d7 1
a7 1
env = env.Clone()
d9 352
a360 5
env.Append(CPPPATH = [
    '#/src/mapi',
    '#/src/glsl',
    '#/src/mesa',
])
a361 315
if env['platform'] == 'windows':
    env.Append(CPPDEFINES = [
        '_GDI32_', # prevent gl* being declared __declspec(dllimport) in MS headers
        'BUILD_GL32', # declare gl* as __declspec(dllexport) in Mesa headers
    ])
else:
    env.Append(CPPDEFINES = [
        'IN_DRI_DRIVER', # enable the remap table (for DRI drivers)
    ])

#
# Source files
#

main_sources = [
    'main/api_arrayelt.c',
    'main/api_exec.c',
    'main/api_loopback.c',
    'main/api_noop.c',
    'main/api_validate.c',
    'main/accum.c',
    'main/arbprogram.c',
    'main/atifragshader.c',
    'main/attrib.c',
    'main/arrayobj.c',
    'main/blend.c',
    'main/bufferobj.c',
    'main/buffers.c',
    'main/clear.c',
    'main/clip.c',
    'main/colortab.c',
    'main/condrender.c',
    'main/context.c',
    'main/convolve.c',
    'main/cpuinfo.c',
    'main/debug.c',
    'main/depth.c',
    'main/depthstencil.c',
    'main/dlist.c',
    'main/dlopen.c',
    'main/drawpix.c',
    'main/drawtex.c',
    'main/enable.c',
    'main/enums.c',
    'main/eval.c',
    'main/execmem.c',
    'main/extensions.c',
    'main/fbobject.c',
    'main/feedback.c',
    'main/ffvertex_prog.c',
    'main/fog.c',
    'main/formats.c',
    'main/framebuffer.c',
    'main/get.c',
    'main/getstring.c',
    'main/hash.c',
    'main/hint.c',
    'main/histogram.c',
    'main/image.c',
    'main/imports.c',
    'main/light.c',
    'main/lines.c',
    'main/matrix.c',
    'main/mipmap.c',
    'main/mm.c',
    'main/multisample.c',
    'main/nvprogram.c',
    'main/pack.c',
    'main/pixel.c',
    'main/pixelstore.c',
    'main/pixeltransfer.c',
    'main/points.c',
    'main/polygon.c',
    'main/querymatrix.c',
    'main/queryobj.c',
    'main/rastpos.c',
    'main/readpix.c',
    'main/remap.c',
    'main/renderbuffer.c',
    'main/scissor.c',
    'main/shaderapi.c',
    'main/shaderobj.c',
    'main/shared.c',
    'main/state.c',
    'main/stencil.c',
    'main/syncobj.c',
    'main/texcompress.c',
    'main/texcompress_s3tc.c',
    'main/texcompress_fxt1.c',
    'main/texenv.c',
    'main/texenvprogram.c',
    'main/texfetch.c',
    'main/texformat.c',
    'main/texgen.c',
    'main/texgetimage.c',
    'main/teximage.c',
    'main/texobj.c',
    'main/texpal.c',
    'main/texparam.c',
    'main/texrender.c',
    'main/texstate.c',
    'main/texstore.c',
    'main/transformfeedback.c',
    'main/uniforms.c',
    'main/varray.c',
    'main/version.c',
    'main/viewport.c',
    'main/vtxfmt.c',
]

math_sources = [
    'math/m_debug_clip.c',
    'math/m_debug_norm.c',
    'math/m_debug_xform.c',
    'math/m_eval.c',
    'math/m_matrix.c',
    'math/m_translate.c',
    'math/m_vector.c',
    'math/m_xform.c',
]

vbo_sources = [
    'vbo/vbo_context.c',
    'vbo/vbo_exec.c',
    'vbo/vbo_exec_api.c',
    'vbo/vbo_exec_array.c',
    'vbo/vbo_exec_draw.c',
    'vbo/vbo_exec_eval.c',
    'vbo/vbo_rebase.c',
    'vbo/vbo_split.c',
    'vbo/vbo_split_copy.c',
    'vbo/vbo_split_inplace.c',
    'vbo/vbo_save.c',
    'vbo/vbo_save_api.c',
    'vbo/vbo_save_draw.c',
    'vbo/vbo_save_loopback.c',
]

vf_sources = [
    'vf/vf.c',
    'vf/vf_generic.c',
    'vf/vf_sse.c',
]

statetracker_sources = [
    'state_tracker/st_atom.c',
    'state_tracker/st_atom_blend.c',
    'state_tracker/st_atom_clip.c',
    'state_tracker/st_atom_constbuf.c',
    'state_tracker/st_atom_depth.c',
    'state_tracker/st_atom_framebuffer.c',
    'state_tracker/st_atom_msaa.c',
    'state_tracker/st_atom_pixeltransfer.c',
    'state_tracker/st_atom_sampler.c',
    'state_tracker/st_atom_scissor.c',
    'state_tracker/st_atom_shader.c',
    'state_tracker/st_atom_rasterizer.c',
    'state_tracker/st_atom_stipple.c',
    'state_tracker/st_atom_texture.c',
    'state_tracker/st_atom_viewport.c',
    'state_tracker/st_cb_accum.c',
    'state_tracker/st_cb_bitmap.c',
    'state_tracker/st_cb_blit.c',
    'state_tracker/st_cb_bufferobjects.c',
    'state_tracker/st_cb_clear.c',
    'state_tracker/st_cb_condrender.c',
    'state_tracker/st_cb_flush.c',
    'state_tracker/st_cb_drawpixels.c',
    'state_tracker/st_cb_drawtex.c',
    'state_tracker/st_cb_eglimage.c',
    'state_tracker/st_cb_fbo.c',
    'state_tracker/st_cb_feedback.c',
    'state_tracker/st_cb_program.c',
    'state_tracker/st_cb_queryobj.c',
    'state_tracker/st_cb_rasterpos.c',
    'state_tracker/st_cb_readpixels.c',
    'state_tracker/st_cb_strings.c',
    'state_tracker/st_cb_texture.c',
    'state_tracker/st_cb_viewport.c',
    'state_tracker/st_cb_xformfb.c',
    'state_tracker/st_context.c',
    'state_tracker/st_debug.c',
    'state_tracker/st_draw.c',
    'state_tracker/st_draw_feedback.c',
    'state_tracker/st_extensions.c',
    'state_tracker/st_format.c',
    'state_tracker/st_gen_mipmap.c',
    'state_tracker/st_manager.c',
    'state_tracker/st_mesa_to_tgsi.c',
    'state_tracker/st_program.c',
    'state_tracker/st_texture.c',
]

program_sources = [
    'program/arbprogparse.c',
    'program/hash_table.c',
    'program/ir_to_mesa.cpp',
    'program/lex.yy.c',
    'program/nvfragparse.c',
    'program/nvvertparse.c',
    'program/program.c',
    'program/program_parse.tab.c',
    'program/program_parse_extra.c',
    'program/prog_cache.c',
    'program/prog_execute.c',
    'program/prog_instruction.c',
    'program/prog_noise.c',
    'program/prog_optimize.c',
    'program/prog_parameter.c',
    'program/prog_parameter_layout.c',
    'program/prog_print.c',
    'program/prog_statevars.c',
    'program/prog_uniform.c',
    'program/programopt.c',
    'program/sampler.cpp',
    'program/symbol_table.c',
]

mesa_sources = (
    main_sources +
    math_sources +
    program_sources +
    vbo_sources +
    vf_sources +
    statetracker_sources
)

#
# Assembly sources
#
if env['gcc'] and env['platform'] != 'windows':
    if env['machine'] == 'x86':
        env.Append(CPPDEFINES = [
            'USE_X86_ASM',
            'USE_MMX_ASM',
            'USE_3DNOW_ASM',
            'USE_SSE_ASM',
        ])
        mesa_sources += [
            'x86/common_x86.c',
            'x86/x86_xform.c',
            'x86/3dnow.c',
            'x86/sse.c',
            'x86/common_x86_asm.S',
            'x86/x86_xform2.S',
            'x86/x86_xform3.S',
            'x86/x86_xform4.S',
            'x86/x86_cliptest.S',
            'x86/mmx_blend.S',
            'x86/3dnow_xform1.S',
            'x86/3dnow_xform2.S',
            'x86/3dnow_xform3.S',
            'x86/3dnow_xform4.S',
            'x86/3dnow_normal.S',
            'x86/sse_xform1.S',
            'x86/sse_xform2.S',
            'x86/sse_xform3.S',
            'x86/sse_xform4.S',
            'x86/sse_normal.S',
            'x86/read_rgba_span_x86.S',
        ]
    elif env['machine'] == 'x86_64':
        env.Append(CPPDEFINES = [
            'USE_X86_64_ASM',
        ])
        mesa_sources += [
            'x86-64/x86-64.c',
            'x86-64/xform4.S',
        ]
    elif env['machine'] == 'ppc':
        env.Append(CPPDEFINES = [
            'USE_PPC_ASM',
            'USE_VMX_ASM',
        ])
        mesa_sources += [
            'ppc/common_ppc.c',
        ]
    elif env['machine'] == 'sparc':
        mesa_sources += [
            'sparc/sparc.c',
            'sparc/clip.S',
            'sparc/norm.S',
            'sparc/xform.S',
        ]
    else:
        pass

    # Generate matypes.h
    if env['machine'] in ('x86', 'x86_64'):
        # See http://www.scons.org/wiki/UsingCodeGenerators
        gen_matypes = env.Program(
            target = 'gen_matypes',
            source = 'x86/gen_matypes.c',
        )
        matypes = env.Command(
            'matypes.h',
            gen_matypes,
            gen_matypes[0].abspath + ' > $TARGET',
        )
        # Add the dir containing the generated header (somewhere inside  the
        # build dir) to the include path
        env.Append(CPPPATH = [matypes[0].dir])

#
# Libraries
#

mesa = env.ConvenienceLibrary(
    target = 'mesa',
    source = mesa_sources,
)

env.Alias('mesa', mesa)

Export('mesa')
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@a5 4
import filecmp
import os
import subprocess
from sys import executable as python_cmd
a12 2
    Dir('../mapi'), # src/mapi build path
    Dir('.'), # src/mesa build path
a14 3
enabled_apis = []
enabled_apis += ['GL']

a19 3
    if not env['gles']:
        # prevent _glapi_* from being declared __declspec(dllimport)
        env.Append(CPPDEFINES = ['_GLAPI_NO_EXPORTS'])
d22 1
a22 1
        ('HAVE_DLOPEN', '1'),
d33 1
d52 1
d54 1
a58 2
    'main/errors.c',
    'main/es1_conversion.c',
a63 1
    'main/ff_fragment_shader.cpp',
a65 1
    'main/formatquery.c',
a66 2
    'main/format_pack.c',
    'main/format_unpack.c',
d68 1
a69 1
    'main/glformats.c',
a70 1
    'main/hash_table.c',
d81 1
a82 1
    'main/pbo.c',
a93 1
    'main/samplerobj.c',
a94 1
    'main/set.c',
a96 1
    'main/shader_query.cpp',
a101 2
    'main/texcompress_cpal.c',
    'main/texcompress_rgtc.c',
a103 1
    'main/texcompress_etc.c',
d105 2
d112 1
d114 1
a115 1
    'main/texstorage.c',
a116 1
    'main/texturebarrier.c',
a117 1
    'main/uniform_query.cpp',
a124 4
glget_sources = [
    'main/get.c',
]

a135 57
swrast_sources = [
    'swrast/s_aaline.c',
    'swrast/s_aatriangle.c',
    'swrast/s_alpha.c',
    'swrast/s_atifragshader.c',
    'swrast/s_bitmap.c',
    'swrast/s_blend.c',
    'swrast/s_blit.c',
    'swrast/s_clear.c',
    'swrast/s_copypix.c',
    'swrast/s_context.c',
    'swrast/s_depth.c',
    'swrast/s_drawpix.c',
    'swrast/s_feedback.c',
    'swrast/s_fog.c',
    'swrast/s_fragprog.c',
    'swrast/s_lines.c',
    'swrast/s_logic.c',
    'swrast/s_masking.c',
    'swrast/s_points.c',
    'swrast/s_renderbuffer.c',
    'swrast/s_span.c',
    'swrast/s_stencil.c',
    'swrast/s_texcombine.c',
    'swrast/s_texfetch.c',
    'swrast/s_texfilter.c',
    'swrast/s_texrender.c',
    'swrast/s_texture.c',
    'swrast/s_triangle.c',
    'swrast/s_zoom.c',
]

swrast_setup_sources = [
    'swrast_setup/ss_context.c',
    'swrast_setup/ss_triangle.c',
]

tnl_sources = [
    'tnl/t_context.c',
    'tnl/t_pipeline.c',
    'tnl/t_draw.c',
    'tnl/t_rasterpos.c',
    'tnl/t_vb_program.c',
    'tnl/t_vb_render.c',
    'tnl/t_vb_texgen.c',
    'tnl/t_vb_texmat.c',
    'tnl/t_vb_vertex.c',
    'tnl/t_vb_fog.c',
    'tnl/t_vb_light.c',
    'tnl/t_vb_normals.c',
    'tnl/t_vb_points.c',
    'tnl/t_vp_build.c',
    'tnl/t_vertex.c',
    'tnl/t_vertex_sse.c',
    'tnl/t_vertex_generic.c',
]

a142 2
    'vbo/vbo_noop.c',
    'vbo/vbo_primitive_restart.c',
d153 6
a160 1
    'state_tracker/st_atom_array.c',
d175 1
a186 1
    'state_tracker/st_cb_msaa.c',
a190 1
    'state_tracker/st_cb_syncobj.c',
a192 1
    'state_tracker/st_cb_texturebarrier.c',
a200 1
    'state_tracker/st_glsl_to_tgsi.cpp',
a207 5
env.Append(YACCFLAGS = '-d -p "_mesa_program_"')
program_lex = env.CFile('program/lex.yy.c', 'program/program_lexer.l')
program_parse = env.CFile('program/program_parse.tab.c',
                          'program/program_parse.y')

d210 1
a210 1
    'program/prog_hash_table.c',
d212 3
d216 1
a222 1
    'program/prog_opt_constant_fold.c',
d227 1
a230 8
    'program/string_to_uint_map.cpp',
    program_lex,
    program_parse[0],
]

common_driver_sources =	[
    'drivers/common/driverfuncs.c',
    'drivers/common/meta.c',
a234 1
    glget_sources +
d238 1
a238 4
    tnl_sources +
    swrast_sources +
    swrast_setup_sources +
    common_driver_sources +
a241 13
GLAPI = '#src/mapi/glapi/'

if env['gles']:

    enabled_apis += ['ES1', 'ES2']

get_hash_header = env.CodeGenerate(
      target = 'main/get_hash.h',
      script = 'main/get_hash_generator.py',
      source = GLAPI + 'gen/gl_and_es_API.xml',
      command = python_cmd + ' $SCRIPT ' + ' -f $SOURCE > $TARGET'
)

d245 1
a245 2
if (env['gcc'] or env['clang']) and \
   env['platform'] not in ('cygwin', 'darwin', 'windows', 'haiku'):
d284 8
d295 1
a295 1
            'sparc/sparc_clip.S',
a317 38

def write_git_sha1_h_file(filename):
    """Mesa looks for a git_sha1.h file at compile time in order to display
    the current git hash id in the GL_VERSION string.  This function tries
    to retrieve the git hashid and write the header file.  An empty file
    will be created if anything goes wrong."""

    args = [ 'git', 'log', '-n', '1', '--oneline' ]
    try:
        (commit, foo) = subprocess.Popen(args, stdout=subprocess.PIPE).communicate()
    except:
        # git log command didn't work
        if not os.path.exists(filename):
            # create an empty file if none already exists
            f = open(filename, "w")
            f.close()
        return

    commit = '#define MESA_GIT_SHA1 "git-%s"\n' % commit[0:7]
    tempfile = "git_sha1.h.tmp"
    f = open(tempfile, "w")
    f.write(commit)
    f.close()
    if not os.path.exists(filename) or not filecmp.cmp(tempfile, filename):
        # The filename does not exist or it's different from the new file,
        # so replace old file with new.
        if os.path.exists(filename):
            os.remove(filename)
        os.rename(tempfile, filename)
    return


# Create the git_sha1.h header file
write_git_sha1_h_file("main/git_sha1.h")
# and update CPPPATH so the git_sha1.h header can be found
env.Append(CPPPATH = ["#" + env['build_dir'] + "/mesa/main"])


a329 2

SConscript('drivers/SConscript')
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@d21 3
a51 1
    'main/blit.c',
a56 1
    'main/compute.c',
a82 1
    'main/genmipmap.c',
a96 1
    'main/objectlabel.c',
a98 2
    'main/performance_monitor.c',
    'main/pipelineobj.c',
a113 1
    'main/shaderimage.c',
a136 1
    'main/textureview.c',
a140 1
    'main/vdpau.c',
a287 1
    'state_tracker/st_vdpau.c',
a321 2
    'drivers/common/meta_blit.c',
    'drivers/common/meta_generate_mipmap.c'
d338 4
@


1.1.1.4
log
@Import Mesa 10.4.3
@
text
@a13 1
    '#/src',
d34 262
a295 2
# parse Makefile.sources
source_lists = env.ParseSourceList('Makefile.sources')
d301 21
a321 1
program_sources = source_lists['PROGRAM_FILES'] + [
d326 7
d334 3
a336 1
    source_lists['MESA_FILES'] +
d338 6
a343 1
    source_lists['STATETRACKER_FILES']
a354 7
format_info = env.CodeGenerate(
      target = 'main/format_info.c',
      script = 'main/format_info.py',
      source = 'main/formats.csv',
      command = python_cmd + ' $SCRIPT ' + ' $SOURCE > $TARGET'
)

d367 23
a389 1
        mesa_sources += source_lists['X86_FILES']
d394 4
a397 1
        mesa_sources += source_lists['X86_64_FILES']
d399 6
a404 1
        mesa_sources += source_lists['SPARC_FILES']
@


1.1.1.5
log
@Import Mesa 10.2.9
@
text
@d14 1
d35 2
a36 262
#
# Source files
#

main_sources = [
    'main/api_arrayelt.c',
    'main/api_exec.c',
    'main/api_loopback.c',
    'main/api_validate.c',
    'main/accum.c',
    'main/arbprogram.c',
    'main/atifragshader.c',
    'main/attrib.c',
    'main/arrayobj.c',
    'main/blend.c',
    'main/blit.c',
    'main/bufferobj.c',
    'main/buffers.c',
    'main/clear.c',
    'main/clip.c',
    'main/colortab.c',
    'main/compute.c',
    'main/condrender.c',
    'main/context.c',
    'main/convolve.c',
    'main/cpuinfo.c',
    'main/debug.c',
    'main/depth.c',
    'main/dlist.c',
    'main/drawpix.c',
    'main/drawtex.c',
    'main/enable.c',
    'main/enums.c',
    'main/errors.c',
    'main/es1_conversion.c',
    'main/eval.c',
    'main/execmem.c',
    'main/extensions.c',
    'main/fbobject.c',
    'main/feedback.c',
    'main/ff_fragment_shader.cpp',
    'main/ffvertex_prog.c',
    'main/fog.c',
    'main/formatquery.c',
    'main/formats.c',
    'main/format_pack.c',
    'main/format_unpack.c',
    'main/framebuffer.c',
    'main/genmipmap.c',
    'main/getstring.c',
    'main/glformats.c',
    'main/hash.c',
    'main/hash_table.c',
    'main/hint.c',
    'main/histogram.c',
    'main/image.c',
    'main/imports.c',
    'main/light.c',
    'main/lines.c',
    'main/matrix.c',
    'main/mipmap.c',
    'main/mm.c',
    'main/multisample.c',
    'main/objectlabel.c',
    'main/pack.c',
    'main/pbo.c',
    'main/performance_monitor.c',
    'main/pipelineobj.c',
    'main/pixel.c',
    'main/pixelstore.c',
    'main/pixeltransfer.c',
    'main/points.c',
    'main/polygon.c',
    'main/querymatrix.c',
    'main/queryobj.c',
    'main/rastpos.c',
    'main/readpix.c',
    'main/remap.c',
    'main/renderbuffer.c',
    'main/samplerobj.c',
    'main/scissor.c',
    'main/set.c',
    'main/shaderapi.c',
    'main/shaderimage.c',
    'main/shaderobj.c',
    'main/shader_query.cpp',
    'main/shared.c',
    'main/state.c',
    'main/stencil.c',
    'main/syncobj.c',
    'main/texcompress.c',
    'main/texcompress_cpal.c',
    'main/texcompress_rgtc.c',
    'main/texcompress_s3tc.c',
    'main/texcompress_fxt1.c',
    'main/texcompress_etc.c',
    'main/texenv.c',
    'main/texformat.c',
    'main/texgen.c',
    'main/texgetimage.c',
    'main/teximage.c',
    'main/texobj.c',
    'main/texparam.c',
    'main/texstate.c',
    'main/texstorage.c',
    'main/texstore.c',
    'main/texturebarrier.c',
    'main/textureview.c',
    'main/transformfeedback.c',
    'main/uniform_query.cpp',
    'main/uniforms.c',
    'main/varray.c',
    'main/vdpau.c',
    'main/version.c',
    'main/viewport.c',
    'main/vtxfmt.c',
]

glget_sources = [
    'main/get.c',
]

math_sources = [
    'math/m_debug_clip.c',
    'math/m_debug_norm.c',
    'math/m_debug_xform.c',
    'math/m_eval.c',
    'math/m_matrix.c',
    'math/m_translate.c',
    'math/m_vector.c',
    'math/m_xform.c',
]

swrast_sources = [
    'swrast/s_aaline.c',
    'swrast/s_aatriangle.c',
    'swrast/s_alpha.c',
    'swrast/s_atifragshader.c',
    'swrast/s_bitmap.c',
    'swrast/s_blend.c',
    'swrast/s_blit.c',
    'swrast/s_clear.c',
    'swrast/s_copypix.c',
    'swrast/s_context.c',
    'swrast/s_depth.c',
    'swrast/s_drawpix.c',
    'swrast/s_feedback.c',
    'swrast/s_fog.c',
    'swrast/s_fragprog.c',
    'swrast/s_lines.c',
    'swrast/s_logic.c',
    'swrast/s_masking.c',
    'swrast/s_points.c',
    'swrast/s_renderbuffer.c',
    'swrast/s_span.c',
    'swrast/s_stencil.c',
    'swrast/s_texcombine.c',
    'swrast/s_texfetch.c',
    'swrast/s_texfilter.c',
    'swrast/s_texrender.c',
    'swrast/s_texture.c',
    'swrast/s_triangle.c',
    'swrast/s_zoom.c',
]

swrast_setup_sources = [
    'swrast_setup/ss_context.c',
    'swrast_setup/ss_triangle.c',
]

tnl_sources = [
    'tnl/t_context.c',
    'tnl/t_pipeline.c',
    'tnl/t_draw.c',
    'tnl/t_rasterpos.c',
    'tnl/t_vb_program.c',
    'tnl/t_vb_render.c',
    'tnl/t_vb_texgen.c',
    'tnl/t_vb_texmat.c',
    'tnl/t_vb_vertex.c',
    'tnl/t_vb_fog.c',
    'tnl/t_vb_light.c',
    'tnl/t_vb_normals.c',
    'tnl/t_vb_points.c',
    'tnl/t_vp_build.c',
    'tnl/t_vertex.c',
    'tnl/t_vertex_sse.c',
    'tnl/t_vertex_generic.c',
]

vbo_sources = [
    'vbo/vbo_context.c',
    'vbo/vbo_exec.c',
    'vbo/vbo_exec_api.c',
    'vbo/vbo_exec_array.c',
    'vbo/vbo_exec_draw.c',
    'vbo/vbo_exec_eval.c',
    'vbo/vbo_noop.c',
    'vbo/vbo_primitive_restart.c',
    'vbo/vbo_rebase.c',
    'vbo/vbo_split.c',
    'vbo/vbo_split_copy.c',
    'vbo/vbo_split_inplace.c',
    'vbo/vbo_save.c',
    'vbo/vbo_save_api.c',
    'vbo/vbo_save_draw.c',
    'vbo/vbo_save_loopback.c',
]

statetracker_sources = [
    'state_tracker/st_atom.c',
    'state_tracker/st_atom_array.c',
    'state_tracker/st_atom_blend.c',
    'state_tracker/st_atom_clip.c',
    'state_tracker/st_atom_constbuf.c',
    'state_tracker/st_atom_depth.c',
    'state_tracker/st_atom_framebuffer.c',
    'state_tracker/st_atom_msaa.c',
    'state_tracker/st_atom_pixeltransfer.c',
    'state_tracker/st_atom_sampler.c',
    'state_tracker/st_atom_scissor.c',
    'state_tracker/st_atom_shader.c',
    'state_tracker/st_atom_rasterizer.c',
    'state_tracker/st_atom_stipple.c',
    'state_tracker/st_atom_texture.c',
    'state_tracker/st_atom_viewport.c',
    'state_tracker/st_cb_bitmap.c',
    'state_tracker/st_cb_blit.c',
    'state_tracker/st_cb_bufferobjects.c',
    'state_tracker/st_cb_clear.c',
    'state_tracker/st_cb_condrender.c',
    'state_tracker/st_cb_flush.c',
    'state_tracker/st_cb_drawpixels.c',
    'state_tracker/st_cb_drawtex.c',
    'state_tracker/st_cb_eglimage.c',
    'state_tracker/st_cb_fbo.c',
    'state_tracker/st_cb_feedback.c',
    'state_tracker/st_cb_msaa.c',
    'state_tracker/st_cb_program.c',
    'state_tracker/st_cb_queryobj.c',
    'state_tracker/st_cb_rasterpos.c',
    'state_tracker/st_cb_readpixels.c',
    'state_tracker/st_cb_syncobj.c',
    'state_tracker/st_cb_strings.c',
    'state_tracker/st_cb_texture.c',
    'state_tracker/st_cb_texturebarrier.c',
    'state_tracker/st_cb_viewport.c',
    'state_tracker/st_cb_xformfb.c',
    'state_tracker/st_context.c',
    'state_tracker/st_debug.c',
    'state_tracker/st_draw.c',
    'state_tracker/st_draw_feedback.c',
    'state_tracker/st_extensions.c',
    'state_tracker/st_format.c',
    'state_tracker/st_glsl_to_tgsi.cpp',
    'state_tracker/st_gen_mipmap.c',
    'state_tracker/st_manager.c',
    'state_tracker/st_mesa_to_tgsi.c',
    'state_tracker/st_program.c',
    'state_tracker/st_texture.c',
    'state_tracker/st_vdpau.c',
]
d42 1
a42 21

program_sources = [
    'program/arbprogparse.c',
    'program/prog_hash_table.c',
    'program/ir_to_mesa.cpp',
    'program/program.c',
    'program/program_parse_extra.c',
    'program/prog_cache.c',
    'program/prog_execute.c',
    'program/prog_instruction.c',
    'program/prog_noise.c',
    'program/prog_optimize.c',
    'program/prog_opt_constant_fold.c',
    'program/prog_parameter.c',
    'program/prog_parameter_layout.c',
    'program/prog_print.c',
    'program/prog_statevars.c',
    'program/programopt.c',
    'program/sampler.cpp',
    'program/symbol_table.c',
    'program/string_to_uint_map.cpp',
a46 7
common_driver_sources =	[
    'drivers/common/driverfuncs.c',
    'drivers/common/meta.c',
    'drivers/common/meta_blit.c',
    'drivers/common/meta_generate_mipmap.c'
]

d48 1
a48 3
    main_sources +
    glget_sources +
    math_sources +
d50 1
a50 6
    vbo_sources +
    tnl_sources +
    swrast_sources +
    swrast_setup_sources +
    common_driver_sources +
    statetracker_sources
d62 7
d81 1
a81 23
        mesa_sources += [
            'x86/common_x86.c',
            'x86/x86_xform.c',
            'x86/3dnow.c',
            'x86/sse.c',
            'x86/common_x86_asm.S',
            'x86/x86_xform2.S',
            'x86/x86_xform3.S',
            'x86/x86_xform4.S',
            'x86/x86_cliptest.S',
            'x86/mmx_blend.S',
            'x86/3dnow_xform1.S',
            'x86/3dnow_xform2.S',
            'x86/3dnow_xform3.S',
            'x86/3dnow_xform4.S',
            'x86/3dnow_normal.S',
            'x86/sse_xform1.S',
            'x86/sse_xform2.S',
            'x86/sse_xform3.S',
            'x86/sse_xform4.S',
            'x86/sse_normal.S',
            'x86/read_rgba_span_x86.S',
        ]
d86 1
a86 4
        mesa_sources += [
            'x86-64/x86-64.c',
            'x86-64/xform4.S',
        ]
d88 1
a88 6
        mesa_sources += [
            'sparc/sparc.c',
            'sparc/sparc_clip.S',
            'sparc/norm.S',
            'sparc/xform.S',
        ]
@


