head	1.9;
access;
symbols
	OPENBSD_5_4:1.8.0.4
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	v7_10_3:1.1.1.4
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.2
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	v7_0_1:1.1.1.3
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v6_5_2:1.1.1.2
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2013.09.05.14.04.00;	author jsg;	state dead;
branches;
next	1.8;

1.8
date	2012.08.17.13.58.14;	author mpi;	state Exp;
branches;
next	1.7;

1.7
date	2011.10.23.13.37.39;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.22.20.06.15;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2009.05.17.20.26.38;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2008.11.02.14.58.12;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.31.16.36.47;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.02.12.21.09.26;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.49.40;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.49.40;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.11.56.31;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2007.11.24.17.27.41;	author matthieu;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2011.10.23.13.29.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Merge Mesa 9.2.0
@
text
@# src/mesa/Makefile

TOP = ../..
include $(TOP)/configs/current

MESA_LIBS := libmesa.a libmesagallium.a
DEPENDS := depend

MESA_OBJ_DIR := .
DRICORE_OBJ_DIR := objs-dricore

include sources.mak

# adjust object dirs
MESA_OBJECTS := $(addprefix $(MESA_OBJ_DIR)/, $(MESA_OBJECTS))
MESA_GALLIUM_OBJECTS := $(addprefix $(MESA_OBJ_DIR)/, $(MESA_GALLIUM_OBJECTS))

DRICORE_OBJECTS := $(addprefix $(DRICORE_OBJ_DIR)/, $(MESA_OBJECTS))

# define preprocessor flags
MESA_CPPFLAGS := $(API_DEFINES) $(DEFINES)

# append include dirs
MESA_CPPFLAGS += $(INCLUDE_DIRS)

DRICORE_CPPFLAGS = $(MESA_CPPFLAGS)

# tidy compiler flags
CFLAGS := $(filter-out $(DEFINES), $(CFLAGS))
CXXFLAGS := $(filter-out $(DEFINES), $(CXXFLAGS))

# LLVM is needed for the state tracker
MESA_CFLAGS := $(LLVM_CFLAGS) $(CFLAGS)
DRICORE_CFLAGS := $(LLVM_CFLAGS) $(DRI_CFLAGS)

MESA_CXXFLAGS := $(LLVM_CFLAGS) $(CXXFLAGS)
DRICORE_CXXFLAGS := $(LLVM_CFLAGS) $(DRI_CXXFLAGS)

define mesa-cc-c
	@@mkdir -p $(dir $@@)
	$(CC) -c -o $@@ $< $($(1)_CPPFLAGS) $($(1)_CFLAGS)
endef

define mesa-cxx-c
	@@mkdir -p $(dir $@@)
	$(CXX) -c -o $@@ $< $($(1)_CPPFLAGS) $($(1)_CXXFLAGS)
endef

$(MESA_OBJ_DIR)/%.o: %.c
	$(call mesa-cc-c,MESA)

$(MESA_OBJ_DIR)/%.o: %.cpp
	$(call mesa-cxx-c,MESA)

$(MESA_OBJ_DIR)/%.o: %.S
	$(call mesa-cc-c,MESA)

$(DRICORE_OBJ_DIR)/%.o: %.c
	$(call mesa-cc-c,DRICORE)

$(DRICORE_OBJ_DIR)/%.o: %.cpp
	$(call mesa-cxx-c,DRICORE)

$(DRICORE_OBJ_DIR)/%.o: %.S
	$(call mesa-cc-c,DRICORE)

# Default: build dependencies, then asm_subdirs, GLSL built-in lib,
# then convenience libs (.a) and finally the device drivers:
default: $(DEPENDS) asm_subdirs $(MESA_LIBS) $(DRICORE_LIBS) driver_subdirs

main/api_exec_es1.c: main/APIspec.xml main/es_generator.py main/APIspecutil.py main/APIspec.py
	$(PYTHON2) $(PYTHON_FLAGS) main/es_generator.py -S main/APIspec.xml -V GLES1.1 > $@@

main/api_exec_es2.c: main/APIspec.xml main/es_generator.py main/APIspecutil.py main/APIspec.py
	$(PYTHON2) $(PYTHON_FLAGS) main/es_generator.py -S main/APIspec.xml -V GLES2.0 > $@@

program/program_parse.tab.c program/program_parse.tab.h: program/program_parse.y
	$(BISON) -v -d --output=program/program_parse.tab.c $<

program/lex.yy.c: program/program_lexer.l
	$(FLEX) --never-interactive --outfile=$@@ $<

######################################################################
# Helper libraries used by many drivers:

# Make archive of core mesa object files
libmesa.a: $(MESA_OBJECTS) $(GLSL_LIBS)
	@@ $(MKLIB) -o mesa -static $(MESA_OBJECTS) $(GLSL_LIBS)

# Shared dricore library for classic DRI drivers
$(TOP)/$(LIB_DIR)/libdricore.so: $(DRICORE_OBJECTS) $(DRICORE_GLSL_LIBS)
	@@$(MKLIB) -o $@@ -linker '$(CXX)' -ldflags '$(LDFLAGS)' \
		-cplusplus -noprefix \
		-install $(TOP)/$(LIB_DIR) -id $(DRI_DRIVER_INSTALL_DIR)/$@@.dylib \
		$(DRICORE_LIB_DEPS) $(DRICORE_OBJECTS)

# Make archive of subset of core mesa object files for gallium
libmesagallium.a: $(MESA_GALLIUM_OBJECTS) $(GLSL_LIBS)
	@@ $(MKLIB) -o mesagallium -static $(MESA_GALLIUM_OBJECTS) $(GLSL_LIBS)

######################################################################
# Device drivers
driver_subdirs: $(MESA_LIBS) $(DRICORE_LIBS)
	@@ (cd drivers && $(MAKE))


######################################################################
# Assembly subdirs
asm_subdirs:
	@@ if echo "$(ASM_FLAGS)" | grep -q USE_X86_ASM ; then \
		(cd x86 && $(MAKE)) || exit 1 ; \
	fi
	@@ if echo "$(ASM_FLAGS)" | grep -q USE_X86_64_ASM ; then \
		(cd x86 && $(MAKE)) || exit 1 ; \
		(cd x86-64 && $(MAKE)) || exit 1 ; \
	fi


######################################################################
# Dependency generation

depend: $(ALL_SOURCES)
	@@ echo "running $(MKDEP)"
	@@ touch depend
	@@$(MKDEP) $(MKDEP_OPTIONS) -p$(MESA_OBJ_DIR)/ $(MESA_CPPFLAGS) \
		$(ALL_SOURCES) > /dev/null 2>/dev/null

######################################################################
# Installation rules

# this isn't fleshed out yet but is probably the way to go in the future
new_install:
	(cd drivers && $(MAKE) install)

ifneq (,$(DRICORE_LIBS))
DRICORE_INSTALL_TARGET = install-dricore
endif

# XXX replace this with new_install above someday
install: default $(DRICORE_INSTALL_TARGET)
	@@for driver in $(DRIVER_DIRS) ; do \
	  case "$$driver" in \
	    osmesa) if [ "$(DRIVER_DIRS)" = osmesa ]; then \
	              $(MAKE) install-headers install-osmesa || exit 1 ; \
	            else \
	              $(MAKE) install-osmesa || exit 1 ; \
	            fi ;; \
	    dri)    $(MAKE) install-libgl install-dri || exit 1 ;; \
	    *)      $(MAKE) install-libgl || exit 1 ;; \
	  esac ; \
	done

pcedit = \
	-e 's,@@INSTALL_DIR@@,$(INSTALL_DIR),' \
	-e 's,@@INSTALL_LIB_DIR@@,$(INSTALL_LIB_DIR),' \
	-e 's,@@INSTALL_INC_DIR@@,$(INSTALL_INC_DIR),' \
	-e 's,@@VERSION@@,$(MESA_MAJOR).$(MESA_MINOR).$(MESA_TINY),' \


gl_pcedit = sed \
	$(pcedit) \
	-e 's,@@GL_PC_REQ_PRIV@@,$(GL_PC_REQ_PRIV),' \
	-e 's,@@GL_PC_LIB_PRIV@@,$(GL_PC_LIB_PRIV),' \
	-e 's,@@GL_PC_CFLAGS@@,$(GL_PC_CFLAGS),' \
	-e 's,@@GLX_TLS@@,$(GLX_TLS),' \
	-e 's,@@GL_LIB@@,$(GL_LIB),'

gl.pc: gl.pc.in
	$(gl_pcedit) $< > $@@

osmesa_pcedit = sed \
	$(pcedit) \
	-e 's,@@OSMESA_LIB@@,$(OSMESA_LIB),' \
	-e 's,@@OSMESA_PC_REQ@@,$(OSMESA_PC_REQ),' \
	-e 's,@@OSMESA_PC_LIB_PRIV@@,$(OSMESA_PC_LIB_PRIV),'

osmesa.pc: osmesa.pc.in
	$(osmesa_pcedit) $< > $@@

install-headers:
	$(INSTALL) -d $(DESTDIR)$(INSTALL_INC_DIR)/GL
	$(INSTALL) -m 644 $(TOP)/include/GL/*.h \
		$(DESTDIR)$(INSTALL_INC_DIR)/GL

install-libgl: default gl.pc install-headers
	$(INSTALL) -d $(DESTDIR)$(INSTALL_LIB_DIR)
	$(INSTALL) -d $(DESTDIR)$(INSTALL_LIB_DIR)/pkgconfig
	$(MINSTALL) $(TOP)/$(LIB_DIR)/$(GL_LIB_GLOB) \
		$(DESTDIR)$(INSTALL_LIB_DIR)
	$(INSTALL) -m 644 gl.pc $(DESTDIR)$(INSTALL_LIB_DIR)/pkgconfig

install-osmesa: default osmesa.pc
	$(INSTALL) -d $(DESTDIR)$(INSTALL_LIB_DIR)
	$(INSTALL) -d $(DESTDIR)$(INSTALL_LIB_DIR)/pkgconfig
	$(MINSTALL) $(TOP)/$(LIB_DIR)/$(OSMESA_LIB_GLOB) \
		$(DESTDIR)$(INSTALL_LIB_DIR)
	$(INSTALL) -m 644 osmesa.pc $(DESTDIR)$(INSTALL_LIB_DIR)/pkgconfig

install-dri: default
	cd drivers/dri && $(MAKE) install

# We don't need MINSTALL here because we're not installing symbolic links
install-dricore: default
	$(INSTALL) -d $(DESTDIR)$(DRI_DRIVER_INSTALL_DIR)
	$(INSTALL) -m 755 $(DRICORE_LIBS) $(DESTDIR)$(DRI_DRIVER_INSTALL_DIR)


# Emacs tags
tags:
	etags `find . -name \*.[ch]` $(TOP)/include/GL/*.h

clean-dricore:
	-rm -f libdricore.so
	-rm -f $(DRICORE_LIBS)
	-rm -rf $(DRICORE_OBJ_DIR)

clean: clean-dricore
	-rm -f */*.o
	-rm -f */*/*.o
	-rm -f depend depend.bak libmesa.a libmesagallium.a
	-rm -f drivers/*/*.o
	-rm -f *.pc
	-@@cd drivers/dri && $(MAKE) clean
	-@@cd drivers/x11 && $(MAKE) clean
	-@@cd drivers/osmesa && $(MAKE) clean
	-@@cd x86 && $(MAKE) clean
	-@@cd x86-64 && $(MAKE) clean


-include $(DEPENDS)
@


1.8
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@@


1.7
log
@Merge Mesa 7.10.3
@
text
@a8 6
ifeq ($(GLES_OVERLAY),1)
ES1_LIBS := libes1gallium.a
ES2_LIBS := libes2gallium.a
DEPENDS += depend.es1 depend.es2
endif

d10 1
a10 3
ES1_OBJ_DIR := objs-es1
ES2_OBJ_DIR := objs-es2

a14 2
ES1_OBJECTS := $(addprefix $(ES1_OBJ_DIR)/, $(MESA_OBJECTS))
ES2_OBJECTS := $(addprefix $(ES2_OBJ_DIR)/, $(MESA_OBJECTS))
d16 1
d18 1
a18 3
ES1_GALLIUM_OBJECTS := $(addprefix $(ES1_OBJ_DIR)/, $(MESA_GALLIUM_OBJECTS))
ES2_GALLIUM_OBJECTS := $(addprefix $(ES2_OBJ_DIR)/, $(MESA_GALLIUM_OBJECTS))
MESA_GALLIUM_OBJECTS := $(addprefix $(MESA_OBJ_DIR)/, $(MESA_GALLIUM_OBJECTS))
a21 2
ES1_CPPFLAGS := -DFEATURE_ES1=1 $(DEFINES)
ES2_CPPFLAGS := -DFEATURE_ES2=1 $(DEFINES)
d25 2
a26 2
ES1_CPPFLAGS += -I$(TOP)/src/mapi/es1api $(INCLUDE_DIRS)
ES2_CPPFLAGS += -I$(TOP)/src/mapi/es2api $(INCLUDE_DIRS)
d33 5
a37 3
MESA_CFLAGS := $(LLVM_CFLAGS)
ES1_CFLAGS := $(LLVM_CFLAGS)
ES2_CFLAGS := $(LLVM_CFLAGS)
d41 1
a41 1
	$(CC) -c -o $@@ $< $($(1)_CPPFLAGS) $($(1)_CFLAGS) $(CFLAGS)
d46 1
a46 1
	$(CXX) -c -o $@@ $< $($(1)_CPPFLAGS) $($(1)_CFLAGS) $(CXXFLAGS)
d58 2
a59 14
$(ES1_OBJ_DIR)/%.o: %.c
	$(call mesa-cc-c,ES1)

$(ES1_OBJ_DIR)/%.o: %.cpp
	$(call mesa-cxx-c,ES1)

$(ES1_OBJ_DIR)/%.o: %.S
	$(call mesa-cc-c,ES1)

$(ES2_OBJ_DIR)/%.o: %.c
	$(call mesa-cc-c,ES2)

$(ES2_OBJ_DIR)/%.o: %.cpp
	$(call mesa-cxx-c,ES2)
d61 2
a62 2
$(ES2_OBJ_DIR)/%.o: %.S
	$(call mesa-cc-c,ES2)
d64 2
d69 1
a69 2
default: $(DEPENDS) asm_subdirs \
	$(MESA_LIBS) $(ES1_LIBS) $(ES2_LIBS) driver_subdirs
d77 6
d90 6
a95 5
libes1.a: $(ES1_OBJECTS) $(GLSL_LIBS)
	@@$(MKLIB) -o es1 -static $(ES1_OBJECTS) $(GLSL_LIBS)

libes2.a: $(ES2_OBJECTS) $(GLSL_LIBS)
	@@$(MKLIB) -o es2 -static $(ES2_OBJECTS) $(GLSL_LIBS)
a100 6
libes1gallium.a: $(ES1_GALLIUM_OBJECTS) $(GLSL_LIBS)
	@@$(MKLIB) -o es1gallium -static $(ES1_GALLIUM_OBJECTS) $(GLSL_LIBS)

libes2gallium.a: $(ES2_GALLIUM_OBJECTS) $(GLSL_LIBS)
	@@$(MKLIB) -o es2gallium -static $(ES2_GALLIUM_OBJECTS) $(GLSL_LIBS)

d103 1
a103 1
driver_subdirs: $(MESA_LIBS)
a127 12
depend.es1: $(ALL_SOURCES)
	@@echo "running $(MKDEP) for ES1"
	@@touch $@@
	@@$(MKDEP) $(MKDEP_OPTIONS) -f$@@ -p$(ES1_OBJ_DIR)/ $(ES1_CPPFLAGS) \
		$(ALL_SOURCES) > /dev/null 2>/dev/null

depend.es2: $(ALL_SOURCES)
	@@echo "running $(MKDEP) for ES2"
	@@touch $@@
	@@$(MKDEP) $(MKDEP_OPTIONS) -f$@@ -p$(ES2_OBJ_DIR)/ $(ES2_CPPFLAGS) \
		$(ALL_SOURCES) > /dev/null 2>/dev/null

d135 3
d140 1
a140 1
install: default
d165 1
d202 4
d212 4
a215 9
clean-es1:
	-rm -f $(ES1_LIBS)
	-rm -rf $(ES1_OBJ_DIR)
	-rm -f depend.es1 depend.es1.bak

clean-es2:
	-rm -f $(ES2_LIBS)
	-rm -rf $(ES2_OBJ_DIR)
	-rm -f depend.es2 depend.es2.bak
d217 1
a217 1
clean: clean-es1 clean-es2
@


1.6
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d6 14
d22 55
a76 1
.SUFFIXES : .cpp
d78 2
a79 2
.c.o:
	$(CC) -c $(INCLUDE_DIRS) $(CFLAGS) $< -o $@@
d81 2
a82 5
.cpp.o:
	$(CXX) -c $(INCLUDE_DIRS) $(CXXFLAGS) $< -o $@@

.S.o:
	$(CC) -c $(INCLUDE_DIRS) $(CFLAGS) $< -o $@@
d84 2
d90 2
a91 2
default: depend asm_subdirs glsl_builtin libmesa.a libmesagallium.a \
	libglapi.a driver_subdirs
d93 2
d96 2
d106 6
d116 5
a120 3
# Make archive of gl* API dispatcher functions only
libglapi.a: $(GLAPI_OBJECTS)
	@@ $(MKLIB) -o glapi -static $(GLAPI_OBJECTS)
d124 1
a124 1
driver_subdirs: libmesa.a libglapi.a libmesagallium.a
a140 6
# GLSL built-in library
glsl_builtin:
	(cd shader/slang/library && $(MAKE)) || exit 1 ;


######################################################################
d146 2
a147 2
	@@$(MKDEP) $(MKDEP_OPTIONS) $(DEFINES) $(INCLUDE_DIRS) $(ALL_SOURCES) \
		> /dev/null 2>/dev/null
d149 11
d183 1
a183 2

gl_pcedit = sed \
d188 4
d201 1
a201 4
	-e 's,@@INSTALL_DIR@@,$(INSTALL_DIR),' \
	-e 's,@@INSTALL_LIB_DIR@@,$(INSTALL_LIB_DIR),' \
	-e 's,@@INSTALL_INC_DIR@@,$(INSTALL_INC_DIR),' \
	-e 's,@@VERSION@@,$(MESA_MAJOR).$(MESA_MINOR).$(MESA_TINY),' \
d237 9
d247 1
a247 1
clean:
d250 1
a250 1
	-rm -f depend depend.bak libmesa.a libglapi.a libmesagallium.a
a252 1
	-rm -f shader/slang/library/*_gc.h
d260 1
a260 1
-include depend
@


1.5
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d6 1
a6 2
include sources

d21 4
a24 3
# Default: build dependencies, then asm_subdirs, then convenience
# libs (.a) and finally the device drivers:
default: depend asm_subdirs libmesa.a libglapi.a driver_subdirs
d32 6
a37 2
libmesa.a: $(MESA_OBJECTS)
	@@ $(MKLIB) -o mesa -static $(MESA_OBJECTS)
a42 1

d45 2
a46 2
driver_subdirs: libmesa.a libglapi.a
	(cd drivers && $(MAKE))
d62 6
d107 2
a108 1
	-e 's,@@GL_PC_CFLAGS@@,$(GL_PC_CFLAGS),'
d133 1
a133 1
	$(INSTALL) $(TOP)/$(LIB_DIR)/$(GL_LIB_GLOB) \
d140 1
a140 1
	$(INSTALL) $(TOP)/$(LIB_DIR)/$(OSMESA_LIB_GLOB) \
d157 1
a157 1
	-rm -f depend depend.bak libmesa.a libglapi.a
d160 1
@


1.4
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d91 1
a91 1
pcedit = sed \
d95 4
a98 1
	-e 's,@@VERSION@@,$(MESA_MAJOR).$(MESA_MINOR).$(MESA_TINY),'
d101 13
a113 1
	$(pcedit) $< > $@@
d127 1
a127 1
install-osmesa: default
d129 1
d132 1
@


1.3
log
@Update to Mesa 7.0.3. tested my oga@@ and johan@@
@
text
@a8 5
GL_MAJOR = 1
GL_MINOR = 5
GL_TINY = 0$(MESA_MAJOR)0$(MESA_MINOR)0$(MESA_TINY)


a20 16
# Figure out what to make here
default:
	@@if [ "${DRIVER_DIRS}" = "dri" ] ; then \
		$(MAKE) linux-solo ; \
	elif [ "${DRIVER_DIRS}" = "osmesa" ] ; then \
		$(MAKE) osmesa-only ; \
	elif [ "$(DRIVER_DIRS)" = "beos" ]; then \
		$(MAKE) beos ; \
	elif [ "$(DRIVER_DIRS)" = "directfb" ]; then \
		$(MAKE) directfb ; \
	elif [ "$(DRIVER_DIRS)" = "fbdev osmesa" ]; then \
		$(MAKE) fbdev ; $(MAKE) osmesa-only ; \
	else \
		$(MAKE) stand-alone ; \
	fi

d22 3
a24 2
######################################################################
# BeOS driver target
a25 2
beos: depend subdirs libmesa.a
	cd drivers/beos; $(MAKE)
d29 1
a29 1
# Linux DRI drivers
d31 7
a37 6
# Make archive of core object files
libmesa.a: $(SOLO_OBJECTS)
	@@ $(TOP)/bin/mklib -o mesa -static $(SOLO_OBJECTS);
	@@if [ "${CONFIG_NAME}" = "beos" ] ; then \
		mimeset -f "$@@" ; \
	fi
a38 2
linux-solo: depend subdirs libmesa.a
	cd drivers/dri ; $(MAKE)
d40 4
a44 2
#####################################################################
# Stand-alone Mesa libGL, no built-in drivers (DirectFB)
d46 10
a55 5
libgl-core: $(CORE_OBJECTS)
	@@ $(TOP)/bin/mklib -o $(GL_LIB) -linker '$(CC)' -ldflags '$(LDFLAGS)' \
		-major $(MESA_MAJOR) -minor $(MESA_MINOR) -patch $(MESA_TINY) \
		-install $(TOP)/$(LIB_DIR) $(MKLIB_OPTIONS) $(CORE_OBJECTS) \
		$(GL_LIB_DEPS)
a56 2
directfb: depend subdirs libgl-core
	cd drivers/directfb ; $(MAKE)
d58 2
d61 5
a65 2
#####################################################################
# fbdev Mesa driver (libGL.so)
a66 6
fbdev: $(CORE_OBJECTS) $(FBDEV_DRIVER_OBJECTS) $(COMMON_DRIVER_OBJECTS)
	@@ $(TOP)/bin/mklib -o $(GL_LIB) -linker '$(CC)' -ldflags '$(LDFLAGS)' \
		-major $(MESA_MAJOR) -minor $(MESA_MINOR) -patch $(MESA_TINY) \
		-install $(TOP)/$(LIB_DIR) $(MKLIB_OPTIONS) \
		$(CORE_OBJECTS) $(FBDEV_DRIVER_OBJECTS) \
		$(COMMON_DRIVER_OBJECTS) $(GL_LIB_DEPS)
d68 2
d71 18
a88 47
######################################################################
# Stand-alone Mesa libGL and libOSMesa
STAND_ALONE_DRIVER_SOURCES = \
	$(COMMON_DRIVER_SOURCES) \
	$(X11_DRIVER_SOURCES)

STAND_ALONE_DRIVER_OBJECTS = $(STAND_ALONE_DRIVER_SOURCES:.c=.o)

STAND_ALONE_OBJECTS = \
	$(CORE_OBJECTS) \
	$(STAND_ALONE_DRIVER_OBJECTS)

# For libOSMesa16 or libOSMesa32 we link _all_ the objects into the library,
# not just the osmesa.o object (i.e. we don't have a libGL).
OSMESA16_OBJECTS = \
	$(CORE_OBJECTS) \
	$(COMMON_DRIVER_OBJECTS) \
	$(OSMESA_DRIVER_OBJECTS)


stand-alone: depend subdirs $(TOP)/$(LIB_DIR)/$(GL_LIB_NAME) $(TOP)/$(LIB_DIR)/$(OSMESA_LIB_NAME)

osmesa-only: depend subdirs $(TOP)/$(LIB_DIR)/$(OSMESA_LIB_NAME)

# Make the GL library
$(TOP)/$(LIB_DIR)/$(GL_LIB_NAME): $(STAND_ALONE_OBJECTS)
	@@ $(TOP)/bin/mklib -o $(GL_LIB) -linker '$(CC)' -ldflags '$(LDFLAGS)' \
		-major $(GL_MAJOR) -minor $(GL_MINOR) -patch $(GL_TINY) \
		-install $(TOP)/$(LIB_DIR) \
		$(MKLIB_OPTIONS) $(GL_LIB_DEPS) $(STAND_ALONE_OBJECTS)

# Make the OSMesa library
# Note: version is kept at 6.5.3 to simplify app/linking issues
$(TOP)/$(LIB_DIR)/$(OSMESA_LIB_NAME): $(OSMESA_DRIVER_OBJECTS) $(OSMESA16_OBJECTS)
	@@ if [ "${DRIVER_DIRS}" = "osmesa" ] ; then \
		$(TOP)/bin/mklib -o $(OSMESA_LIB) -linker '$(CC)' \
			-ldflags '$(LDFLAGS)' \
			-major 6 -minor 5 -patch 3 \
			-install $(TOP)/$(LIB_DIR) $(MKLIB_OPTIONS) \
			$(OSMESA_LIB_DEPS) $(OSMESA16_OBJECTS) ; \
	else \
		$(TOP)/bin/mklib -o $(OSMESA_LIB) -linker '$(CC)' \
			-ldflags '$(LDFLAGS)' \
			-major 6 -minor 5 -patch 3 \
			-install $(TOP)/$(LIB_DIR) $(MKLIB_OPTIONS) \
			$(OSMESA_LIB_DEPS) $(OSMESA_DRIVER_OBJECTS) ; \
	fi
a90 2
######################################################################
# libGL pkg-config file
d93 2
a94 1
	-e 's,@@LIB_DIR@@,$(LIB_DIR),' \
d96 1
d100 16
a115 18
######################################################################
# Generic stuff

depend: $(ALL_SOURCES)
	@@ echo "running $(MKDEP)"
	@@ touch depend
	@@$(MKDEP) $(MKDEP_OPTIONS) $(DEFINES) $(INCLUDE_DIRS) $(ALL_SOURCES) \
		> /dev/null 2>/dev/null


subdirs:
	@@ if echo "$(ASM_FLAGS)" | grep -q USE_X86_ASM ; then \
		(cd x86 ; $(MAKE)) ; \
	fi
	@@ if echo "$(ASM_FLAGS)" | grep -q USE_X86_64_ASM ; then \
		(cd x86 ; $(MAKE)) ; \
		(cd x86-64 ; $(MAKE)) ; \
	fi
d117 2
a119 19
install: default gl.pc
	$(INSTALL) -d $(DESTDIR)$(INSTALL_DIR)/include/GL
	$(INSTALL) -d $(DESTDIR)$(INSTALL_DIR)/$(LIB_DIR)
	$(INSTALL) -d $(DESTDIR)$(INSTALL_DIR)/$(LIB_DIR)/pkgconfig
	$(INSTALL) -m 644 $(TOP)/include/GL/*.h $(DESTDIR)$(INSTALL_DIR)/include/GL
	@@if [ -e $(TOP)/$(LIB_DIR)/$(GL_LIB_NAME) ]; then \
		$(INSTALL) $(TOP)/$(LIB_DIR)/libGL* $(DESTDIR)$(INSTALL_DIR)/$(LIB_DIR); \
	fi
	$(INSTALL) -m 644 gl.pc $(DESTDIR)$(INSTALL_DIR)/$(LIB_DIR)/pkgconfig
	@@if [ -e $(TOP)/$(LIB_DIR)/$(OSMESA_LIB_NAME) ]; then \
		$(INSTALL) $(TOP)/$(LIB_DIR)/libOSMesa* $(DESTDIR)$(INSTALL_DIR)/$(LIB_DIR); \
	fi
	@@if [ "${DRIVER_DIRS}" = "dri" ] ; then \
		cd drivers/dri ; $(MAKE) install ; \
	fi

## NOT INSTALLED YET:
## $(INSTALL) -d $(DESTDIR)$(INSTALL_DIR)/include/GLES
## $(INSTALL) -m 644 include/GLES/*.h $(DESTDIR)$(INSTALL_DIR)/include/GLES
d126 1
d130 1
a130 1
	-rm -f depend depend.bak libmesa.a
d132 6
a137 3
	(cd drivers/dri ; $(MAKE) clean)
	(cd x86 ; $(MAKE) clean)
	(cd x86-64 ; $(MAKE) clean)
d140 1
a140 1
include depend
@


1.2
log
@Update to Mesa 7.0.2. Tested by naddy@@ (full ports build), simon@@
and oga@@ (with dri enabled).
@
text
@d68 1
a68 1
	@@ $(TOP)/bin/mklib -o $(GL_LIB) -linker '$(CC)' -ldflags '$(LDFLAGS) \
@


1.1
log
@Initial revision
@
text
@d36 2
a37 2
	elif [ "$(DRIVER_DIRS)" = "fbdev" ]; then \
		$(MAKE) fbdev ; \
d68 1
a68 1
	@@ $(TOP)/bin/mklib -o $(GL_LIB) -linker '$(CC)' \
d81 1
a81 1
	@@ $(TOP)/bin/mklib -o $(GL_LIB) -linker '$(CC)' \
d92 1
a92 3
	$(X11_DRIVER_SOURCES) \
	$(GLIDE_DRIVER_SOURCES) \
	$(SVGA_DRIVER_SOURCES)
d114 1
a114 1
	@@ $(TOP)/bin/mklib -o $(GL_LIB) -linker '$(CC)' \
d120 1
d124 2
a125 2
			-major $(MESA_MAJOR) \
			-minor $(MESA_MINOR) -patch $(MESA_TINY) \
d130 2
a131 2
			-major $(MESA_MAJOR) \
			-minor $(MESA_MINOR) -patch $(GL_TINY) \
d138 9
d152 2
a153 2
	$(MKDEP) $(MKDEP_OPTIONS) $(DEFINES) $(INCLUDE_DIRS) $(ALL_SOURCES) \
		> /dev/null 
d157 7
a163 2
	@@ (cd x86 ; $(MAKE))
	@@ (cd x86-64 ; $(MAKE))
d166 12
a177 5
install: default
	$(INSTALL) -d $(INSTALL_DIR)/include/GL
	$(INSTALL) -d $(INSTALL_DIR)/$(LIB_DIR)
	$(INSTALL) -m 644 $(TOP)/include/GL/*.h $(INSTALL_DIR)/include/GL
	$(COPY_LIBS) $(TOP)/$(LIB_DIR)/libGL.* $(INSTALL_DIR)/$(LIB_DIR)
d182 3
a184 3
	## NOT YET:
	## $(INSTALL) -d $(INSTALL_DIR)/include/GLES
	## $(INSTALL) -m 644 include/GLES/*.h $(INSTALL_DIR)/include/GLES
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@import MesaLibs version 6.5.2
@
text
@d36 2
a37 2
	elif [ "$(DRIVER_DIRS)" = "fbdev osmesa" ]; then \
		$(MAKE) fbdev ; $(MAKE) osmesa-only ; \
d144 1
a144 1
	@@$(MKDEP) $(MKDEP_OPTIONS) $(DEFINES) $(INCLUDE_DIRS) $(ALL_SOURCES) \
d157 1
a157 6
	@@if [ -e $(TOP)/$(LIB_DIR)/$(GL_LIB_NAME) ]; then \
		$(INSTALL) $(TOP)/$(LIB_DIR)/libGL* $(INSTALL_DIR)/$(LIB_DIR); \
	fi
	@@if [ -e $(TOP)/$(LIB_DIR)/$(OSMESA_LIB_NAME) ]; then \
		$(INSTALL) $(TOP)/$(LIB_DIR)/libOSMesa* $(INSTALL_DIR)/$(LIB_DIR); \
	fi
d162 3
a164 3
## NOT INSTALLED YET:
## $(INSTALL) -d $(INSTALL_DIR)/include/GLES
## $(INSTALL) -m 644 include/GLES/*.h $(INSTALL_DIR)/include/GLES
@


1.1.1.3
log
@Mesa 7.0.1
@
text
@d92 3
a94 1
	$(X11_DRIVER_SOURCES)
a121 1
# Note: version is kept at 6.5.3 to simplify app/linking issues
d125 2
a126 1
			-major 6 -minor 5 -patch 3 \
d131 2
a132 1
			-major 6 -minor 5 -patch 3 \
d145 1
a145 1
		> /dev/null 2>/dev/null
@


1.1.1.4
log
@Import Mesa 7.10.3
@
text
@d6 1
a6 2
MESA_LIBS := libmesa.a libmesagallium.a
DEPENDS := depend
a7 5
ifeq ($(GLES_OVERLAY),1)
ES1_LIBS := libes1gallium.a
ES2_LIBS := libes2gallium.a
DEPENDS += depend.es1 depend.es2
endif
d9 3
a11 3
MESA_OBJ_DIR := .
ES1_OBJ_DIR := objs-es1
ES2_OBJ_DIR := objs-es2
d14 1
a14 1
include sources.mak
d16 2
a17 4
# adjust object dirs
ES1_OBJECTS := $(addprefix $(ES1_OBJ_DIR)/, $(MESA_OBJECTS))
ES2_OBJECTS := $(addprefix $(ES2_OBJ_DIR)/, $(MESA_OBJECTS))
MESA_OBJECTS := $(addprefix $(MESA_OBJ_DIR)/, $(MESA_OBJECTS))
d19 2
a20 3
ES1_GALLIUM_OBJECTS := $(addprefix $(ES1_OBJ_DIR)/, $(MESA_GALLIUM_OBJECTS))
ES2_GALLIUM_OBJECTS := $(addprefix $(ES2_OBJ_DIR)/, $(MESA_GALLIUM_OBJECTS))
MESA_GALLIUM_OBJECTS := $(addprefix $(MESA_OBJ_DIR)/, $(MESA_GALLIUM_OBJECTS))
d22 2
a23 4
# define preprocessor flags
MESA_CPPFLAGS := $(API_DEFINES) $(DEFINES)
ES1_CPPFLAGS := -DFEATURE_ES1=1 $(DEFINES)
ES2_CPPFLAGS := -DFEATURE_ES2=1 $(DEFINES)
a24 4
# append include dirs
MESA_CPPFLAGS += $(INCLUDE_DIRS)
ES1_CPPFLAGS += -I$(TOP)/src/mapi/es1api $(INCLUDE_DIRS)
ES2_CPPFLAGS += -I$(TOP)/src/mapi/es2api $(INCLUDE_DIRS)
d26 15
a40 3
# tidy compiler flags
CFLAGS := $(filter-out $(DEFINES), $(CFLAGS))
CXXFLAGS := $(filter-out $(DEFINES), $(CXXFLAGS))
a41 4
# LLVM is needed for the state tracker
MESA_CFLAGS := $(LLVM_CFLAGS)
ES1_CFLAGS := $(LLVM_CFLAGS)
ES2_CFLAGS := $(LLVM_CFLAGS)
d43 2
a44 4
define mesa-cc-c
	@@mkdir -p $(dir $@@)
	$(CC) -c -o $@@ $< $($(1)_CPPFLAGS) $($(1)_CFLAGS) $(CFLAGS)
endef
d46 2
a47 4
define mesa-cxx-c
	@@mkdir -p $(dir $@@)
	$(CXX) -c -o $@@ $< $($(1)_CPPFLAGS) $($(1)_CFLAGS) $(CXXFLAGS)
endef
a48 2
$(MESA_OBJ_DIR)/%.o: %.c
	$(call mesa-cc-c,MESA)
d50 2
a51 2
$(MESA_OBJ_DIR)/%.o: %.cpp
	$(call mesa-cxx-c,MESA)
d53 6
a58 5
$(MESA_OBJ_DIR)/%.o: %.S
	$(call mesa-cc-c,MESA)

$(ES1_OBJ_DIR)/%.o: %.c
	$(call mesa-cc-c,ES1)
d60 2
a61 2
$(ES1_OBJ_DIR)/%.o: %.cpp
	$(call mesa-cxx-c,ES1)
a62 2
$(ES1_OBJ_DIR)/%.o: %.S
	$(call mesa-cc-c,ES1)
d64 2
a65 2
$(ES2_OBJ_DIR)/%.o: %.c
	$(call mesa-cc-c,ES2)
d67 5
a71 2
$(ES2_OBJ_DIR)/%.o: %.cpp
	$(call mesa-cxx-c,ES2)
d73 2
a74 2
$(ES2_OBJ_DIR)/%.o: %.S
	$(call mesa-cc-c,ES2)
d77 2
a78 4
# Default: build dependencies, then asm_subdirs, GLSL built-in lib,
# then convenience libs (.a) and finally the device drivers:
default: $(DEPENDS) asm_subdirs \
	$(MESA_LIBS) $(ES1_LIBS) $(ES2_LIBS) driver_subdirs
d80 6
a85 2
main/api_exec_es1.c: main/APIspec.xml main/es_generator.py main/APIspecutil.py main/APIspec.py
	$(PYTHON2) $(PYTHON_FLAGS) main/es_generator.py -S main/APIspec.xml -V GLES1.1 > $@@
a86 2
main/api_exec_es2.c: main/APIspec.xml main/es_generator.py main/APIspecutil.py main/APIspec.py
	$(PYTHON2) $(PYTHON_FLAGS) main/es_generator.py -S main/APIspec.xml -V GLES2.0 > $@@
d89 43
a131 37
# Helper libraries used by many drivers:

# Make archive of core mesa object files
libmesa.a: $(MESA_OBJECTS) $(GLSL_LIBS)
	@@ $(MKLIB) -o mesa -static $(MESA_OBJECTS) $(GLSL_LIBS)

libes1.a: $(ES1_OBJECTS) $(GLSL_LIBS)
	@@$(MKLIB) -o es1 -static $(ES1_OBJECTS) $(GLSL_LIBS)

libes2.a: $(ES2_OBJECTS) $(GLSL_LIBS)
	@@$(MKLIB) -o es2 -static $(ES2_OBJECTS) $(GLSL_LIBS)

# Make archive of subset of core mesa object files for gallium
libmesagallium.a: $(MESA_GALLIUM_OBJECTS) $(GLSL_LIBS)
	@@ $(MKLIB) -o mesagallium -static $(MESA_GALLIUM_OBJECTS) $(GLSL_LIBS)

libes1gallium.a: $(ES1_GALLIUM_OBJECTS) $(GLSL_LIBS)
	@@$(MKLIB) -o es1gallium -static $(ES1_GALLIUM_OBJECTS) $(GLSL_LIBS)

libes2gallium.a: $(ES2_GALLIUM_OBJECTS) $(GLSL_LIBS)
	@@$(MKLIB) -o es2gallium -static $(ES2_GALLIUM_OBJECTS) $(GLSL_LIBS)

######################################################################
# Device drivers
driver_subdirs: $(MESA_LIBS)
	@@ (cd drivers && $(MAKE))


######################################################################
# Assembly subdirs
asm_subdirs:
	@@ if echo "$(ASM_FLAGS)" | grep -q USE_X86_ASM ; then \
		(cd x86 && $(MAKE)) || exit 1 ; \
	fi
	@@ if echo "$(ASM_FLAGS)" | grep -q USE_X86_64_ASM ; then \
		(cd x86 && $(MAKE)) || exit 1 ; \
		(cd x86-64 && $(MAKE)) || exit 1 ; \
d136 1
a136 1
# Dependency generation
d141 2
a142 14
	@@$(MKDEP) $(MKDEP_OPTIONS) -p$(MESA_OBJ_DIR)/ $(MESA_CPPFLAGS) \
		$(ALL_SOURCES) > /dev/null 2>/dev/null

depend.es1: $(ALL_SOURCES)
	@@echo "running $(MKDEP) for ES1"
	@@touch $@@
	@@$(MKDEP) $(MKDEP_OPTIONS) -f$@@ -p$(ES1_OBJ_DIR)/ $(ES1_CPPFLAGS) \
		$(ALL_SOURCES) > /dev/null 2>/dev/null

depend.es2: $(ALL_SOURCES)
	@@echo "running $(MKDEP) for ES2"
	@@touch $@@
	@@$(MKDEP) $(MKDEP_OPTIONS) -f$@@ -p$(ES2_OBJ_DIR)/ $(ES2_CPPFLAGS) \
		$(ALL_SOURCES) > /dev/null 2>/dev/null
a143 2
######################################################################
# Installation rules
d145 3
a147 3
# this isn't fleshed out yet but is probably the way to go in the future
new_install:
	(cd drivers && $(MAKE) install)
a149 1
# XXX replace this with new_install above someday
d151 12
a162 59
	@@for driver in $(DRIVER_DIRS) ; do \
	  case "$$driver" in \
	    osmesa) if [ "$(DRIVER_DIRS)" = osmesa ]; then \
	              $(MAKE) install-headers install-osmesa || exit 1 ; \
	            else \
	              $(MAKE) install-osmesa || exit 1 ; \
	            fi ;; \
	    dri)    $(MAKE) install-libgl install-dri || exit 1 ;; \
	    *)      $(MAKE) install-libgl || exit 1 ;; \
	  esac ; \
	done

pcedit = \
	-e 's,@@INSTALL_DIR@@,$(INSTALL_DIR),' \
	-e 's,@@INSTALL_LIB_DIR@@,$(INSTALL_LIB_DIR),' \
	-e 's,@@INSTALL_INC_DIR@@,$(INSTALL_INC_DIR),' \
	-e 's,@@VERSION@@,$(MESA_MAJOR).$(MESA_MINOR).$(MESA_TINY),' \


gl_pcedit = sed \
	$(pcedit) \
	-e 's,@@GL_PC_REQ_PRIV@@,$(GL_PC_REQ_PRIV),' \
	-e 's,@@GL_PC_LIB_PRIV@@,$(GL_PC_LIB_PRIV),' \
	-e 's,@@GL_PC_CFLAGS@@,$(GL_PC_CFLAGS),' \
	-e 's,@@GL_LIB@@,$(GL_LIB),'

gl.pc: gl.pc.in
	$(gl_pcedit) $< > $@@

osmesa_pcedit = sed \
	$(pcedit) \
	-e 's,@@OSMESA_LIB@@,$(OSMESA_LIB),' \
	-e 's,@@OSMESA_PC_REQ@@,$(OSMESA_PC_REQ),' \
	-e 's,@@OSMESA_PC_LIB_PRIV@@,$(OSMESA_PC_LIB_PRIV),'

osmesa.pc: osmesa.pc.in
	$(osmesa_pcedit) $< > $@@

install-headers:
	$(INSTALL) -d $(DESTDIR)$(INSTALL_INC_DIR)/GL
	$(INSTALL) -m 644 $(TOP)/include/GL/*.h \
		$(DESTDIR)$(INSTALL_INC_DIR)/GL

install-libgl: default gl.pc install-headers
	$(INSTALL) -d $(DESTDIR)$(INSTALL_LIB_DIR)
	$(INSTALL) -d $(DESTDIR)$(INSTALL_LIB_DIR)/pkgconfig
	$(MINSTALL) $(TOP)/$(LIB_DIR)/$(GL_LIB_GLOB) \
		$(DESTDIR)$(INSTALL_LIB_DIR)
	$(INSTALL) -m 644 gl.pc $(DESTDIR)$(INSTALL_LIB_DIR)/pkgconfig

install-osmesa: default osmesa.pc
	$(INSTALL) -d $(DESTDIR)$(INSTALL_LIB_DIR)
	$(INSTALL) -d $(DESTDIR)$(INSTALL_LIB_DIR)/pkgconfig
	$(MINSTALL) $(TOP)/$(LIB_DIR)/$(OSMESA_LIB_GLOB) \
		$(DESTDIR)$(INSTALL_LIB_DIR)
	$(INSTALL) -m 644 osmesa.pc $(DESTDIR)$(INSTALL_LIB_DIR)/pkgconfig

install-dri: default
	cd drivers/dri && $(MAKE) install
d164 3
d173 1
a173 11
clean-es1:
	-rm -f $(ES1_LIBS)
	-rm -rf $(ES1_OBJ_DIR)
	-rm -f depend.es1 depend.es1.bak

clean-es2:
	-rm -f $(ES2_LIBS)
	-rm -rf $(ES2_OBJ_DIR)
	-rm -f depend.es2 depend.es2.bak

clean: clean-es1 clean-es2
d176 1
a176 1
	-rm -f depend depend.bak libmesa.a libmesagallium.a
d178 3
a180 6
	-rm -f *.pc
	-@@cd drivers/dri && $(MAKE) clean
	-@@cd drivers/x11 && $(MAKE) clean
	-@@cd drivers/osmesa && $(MAKE) clean
	-@@cd x86 && $(MAKE) clean
	-@@cd x86-64 && $(MAKE) clean
d183 1
a183 1
-include $(DEPENDS)
@


