head	1.9;
access;
symbols
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	v10_2_9:1.1.1.5
	v10_4_3:1.1.1.5
	v10_2_7:1.1.1.5
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	v10_2_3:1.1.1.5
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	v9_2_5:1.1.1.4
	v9_2_3:1.1.1.4
	v9_2_2:1.1.1.4
	v9_2_1:1.1.1.4
	v9_2_0:1.1.1.4
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.4
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.12.23.05.17.52;	author jsg;	state dead;
branches;
next	1.8;
commitid	TnlogFl9nOv2eaRf;

1.8
date	2014.07.09.21.09.00;	author jsg;	state Exp;
branches;
next	1.7;
commitid	WPD6rgPryPkvXOr9;

1.7
date	2013.09.05.14.06.24;	author jsg;	state Exp;
branches;
next	1.6;

1.6
date	2012.08.17.13.58.19;	author mpi;	state Exp;
branches;
next	1.5;

1.5
date	2011.10.23.13.37.42;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.22.20.06.31;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.02.14.58.21;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.02.12.21.09.27;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.50.10;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.50.10;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.31.12;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.46;	author matthieu;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2013.09.05.13.16.41;	author jsg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2014.07.09.20.35.02;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.9
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2006  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */


#include "glheader.h"
#include "context.h"
#include "lines.h"
#include "macros.h"
#include "mtypes.h"


/**
 * Set the line width.
 *
 * \param width line width in pixels.
 *
 * \sa glLineWidth().
 */
void GLAPIENTRY
_mesa_LineWidth( GLfloat width )
{
   GET_CURRENT_CONTEXT(ctx);

   if (MESA_VERBOSE & VERBOSE_API)
      _mesa_debug(ctx, "glLineWidth %f\n", width);

   if (width<=0.0) {
      _mesa_error( ctx, GL_INVALID_VALUE, "glLineWidth" );
      return;
   }

   /* Page 407 (page 423 of the PDF) of the OpenGL 3.0 spec says (in the list
    * of deprecated functionality):
    *
    *     "Wide lines and line stipple - LineWidth is not deprecated, but
    *     values greater than 1.0 will generate an INVALID_VALUE error;"
    *
    * This is one of the very few cases where functionality was deprecated but
    * *NOT* removed in a later spec.  Therefore, we only disallow this in a
    * forward compatible context.
    */
   if (ctx->API == API_OPENGL_CORE
       && ((ctx->Const.ContextFlags & GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT)
           != 0)
       && width > 1.0) {
      _mesa_error( ctx, GL_INVALID_VALUE, "glLineWidth" );
      return;
   }

   if (ctx->Line.Width == width)
      return;

   FLUSH_VERTICES(ctx, _NEW_LINE);
   ctx->Line.Width = width;

   if (ctx->Driver.LineWidth)
      ctx->Driver.LineWidth(ctx, width);
}


/**
 * Set the line stipple pattern.
 *
 * \param factor pattern scale factor.
 * \param pattern bit pattern.
 * 
 * \sa glLineStipple().
 *
 * Updates gl_line_attrib::StippleFactor and gl_line_attrib::StipplePattern. On
 * change flushes the vertices and notifies the driver via
 * the dd_function_table::LineStipple callback.
 */
void GLAPIENTRY
_mesa_LineStipple( GLint factor, GLushort pattern )
{
   GET_CURRENT_CONTEXT(ctx);

   if (MESA_VERBOSE & VERBOSE_API)
      _mesa_debug(ctx, "glLineStipple %d %u\n", factor, pattern);

   factor = CLAMP( factor, 1, 256 );

   if (ctx->Line.StippleFactor == factor &&
       ctx->Line.StipplePattern == pattern)
      return;

   FLUSH_VERTICES(ctx, _NEW_LINE);
   ctx->Line.StippleFactor = factor;
   ctx->Line.StipplePattern = pattern;

   if (ctx->Driver.LineStipple)
      ctx->Driver.LineStipple( ctx, factor, pattern );
}


/**
 * Initialize the context line state.
 *
 * \param ctx GL context.
 *
 * Initializes __struct gl_contextRec::Line and line related constants in
 * __struct gl_contextRec::Const.
 */
void GLAPIENTRY
_mesa_init_line( struct gl_context * ctx )
{
   ctx->Line.SmoothFlag = GL_FALSE;
   ctx->Line.StippleFlag = GL_FALSE;
   ctx->Line.Width = 1.0;
   ctx->Line.StipplePattern = 0xffff;
   ctx->Line.StippleFactor = 1;
}
@


1.8
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.7
log
@Merge Mesa 9.2.0
@
text
@d65 2
a66 1
           != 0)) {
@


1.6
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a2 1
 * Version:  6.5.3
d19 4
a22 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
a43 1
   ASSERT_OUTSIDE_BEGIN_END(ctx);
d53 17
a96 1
   ASSERT_OUTSIDE_BEGIN_END(ctx);
@


1.5
log
@Merge Mesa 7.10.3
@
text
@d46 3
d82 3
@


1.4
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@a56 5
   if (width != 1.0F)
      ctx->_TriangleCaps |= DD_LINE_WIDTH;
   else
      ctx->_TriangleCaps &= ~DD_LINE_WIDTH;

d100 2
a101 2
 * Initializes __GLcontextRec::Line and line related constants in
 * __GLcontextRec::Const.
d104 1
a104 1
_mesa_init_line( GLcontext * ctx )
@


1.3
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@a27 1
#include "depth.h"
a29 1
#include "texstate.h"
@


1.2
log
@Update to Mesa 7.0.2. Tested by naddy@@ (full ports build), simon@@
and oga@@ (with dri enabled).
@
text
@a57 3
   ctx->Line._Width = CLAMP(width,
			    ctx->Const.MinLineWidth,
			    ctx->Const.MaxLineWidth);
d110 2
a111 1
void GLAPIENTRY _mesa_init_line( GLcontext * ctx )
a112 1
   /* Line group */
a115 1
   ctx->Line._Width = 1.0;
@


1.1
log
@Initial revision
@
text
@a0 5
/**
 * \file lines.c
 * Line operations.
 */

d3 1
a3 1
 * Version:  5.1
d5 1
a5 1
 * Copyright (C) 1999-2003  Brian Paul   All Rights Reserved.
a40 6
 *
 * Verifies the parameter and updates gl_line_attrib::Width. On a change,
 * flushes the vertices, updates the clamped line width and marks the
 * DD_LINE_WIDTH flag in __GLcontextRec::_TriangleCaps for the drivers if the
 * width is different from one. Notifies the driver via the
 * dd_function_table::LineWidth callback.
d62 1
a62 2

   if (width != 1.0)
d68 1
a68 1
      (*ctx->Driver.LineWidth)(ctx, width);
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Mesa 7.0.1
@
text
@d1 5
d8 1
a8 1
 * Version:  6.5.3
d10 1
a10 1
 * Copyright (C) 1999-2006  Brian Paul   All Rights Reserved.
d46 6
d73 6
d80 1
a80 1
      ctx->Driver.LineWidth(ctx, width);
@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@d28 1
d31 1
d58 3
d105 2
a106 2
 * Initializes __struct gl_contextRec::Line and line related constants in
 * __struct gl_contextRec::Const.
d108 1
a108 2
void GLAPIENTRY
_mesa_init_line( struct gl_context * ctx )
d110 1
d114 1
@


1.1.1.4
log
@Import Mesa 9.2.0
@
text
@d3 1
d20 3
a22 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
d44 1
a44 3

   if (MESA_VERBOSE & VERBOSE_API)
      _mesa_debug(ctx, "glLineWidth %f\n", width);
a50 17
   /* Page 407 (page 423 of the PDF) of the OpenGL 3.0 spec says (in the list
    * of deprecated functionality):
    *
    *     "Wide lines and line stipple - LineWidth is not deprecated, but
    *     values greater than 1.0 will generate an INVALID_VALUE error;"
    *
    * This is one of the very few cases where functionality was deprecated but
    * *NOT* removed in a later spec.  Therefore, we only disallow this in a
    * forward compatible context.
    */
   if (ctx->API == API_OPENGL_CORE
       && ((ctx->Const.ContextFlags & GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT)
           != 0)) {
      _mesa_error( ctx, GL_INVALID_VALUE, "glLineWidth" );
      return;
   }

d78 1
a78 3

   if (MESA_VERBOSE & VERBOSE_API)
      _mesa_debug(ctx, "glLineStipple %d %u\n", factor, pattern);
@


1.1.1.5
log
@Import Mesa 10.2.3
@
text
@d65 1
a65 2
           != 0)
       && width > 1.0) {
@


