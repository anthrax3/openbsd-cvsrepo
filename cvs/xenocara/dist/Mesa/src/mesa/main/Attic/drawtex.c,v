head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.12.23.05.17.52;	author jsg;	state dead;
branches;
next	1.3;
commitid	TnlogFl9nOv2eaRf;

1.3
date	2013.09.05.14.06.20;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.17.13.58.19;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.23.13.29.45;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.45;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.16.30;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright (C) 2009 Chia-I Wu <olv@@0xlab.org>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#include "main/drawtex.h"
#include "main/state.h"
#include "main/imports.h"
#include "main/mtypes.h"


static void
draw_texture(struct gl_context *ctx, GLfloat x, GLfloat y, GLfloat z,
             GLfloat width, GLfloat height)
{
   if (!ctx->Extensions.OES_draw_texture) {
      _mesa_error(ctx, GL_INVALID_OPERATION,
                  "glDrawTex(unsupported)");
      return;
   }
   if (width <= 0.0f || height <= 0.0f) {
      _mesa_error(ctx, GL_INVALID_VALUE, "glDrawTex(width or height <= 0)");
      return;
   }

   _mesa_set_vp_override(ctx, GL_TRUE);

   if (ctx->NewState)
      _mesa_update_state(ctx);

   ASSERT(ctx->Driver.DrawTex);
   ctx->Driver.DrawTex(ctx, x, y, z, width, height);

   _mesa_set_vp_override(ctx, GL_FALSE);
}


void GLAPIENTRY
_mesa_DrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height)
{
   GET_CURRENT_CONTEXT(ctx);
   draw_texture(ctx, x, y, z, width, height);
}


void GLAPIENTRY
_mesa_DrawTexfvOES(const GLfloat *coords)
{
   GET_CURRENT_CONTEXT(ctx);
   draw_texture(ctx, coords[0], coords[1], coords[2], coords[3], coords[4]);
}


void GLAPIENTRY
_mesa_DrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height)
{
   GET_CURRENT_CONTEXT(ctx);
   draw_texture(ctx, (GLfloat) x, (GLfloat) y, (GLfloat) z,
                (GLfloat) width, (GLfloat) height);
}


void GLAPIENTRY
_mesa_DrawTexivOES(const GLint *coords)
{
   GET_CURRENT_CONTEXT(ctx);
   draw_texture(ctx, (GLfloat) coords[0], (GLfloat) coords[1],
                (GLfloat) coords[2], (GLfloat) coords[3], (GLfloat) coords[4]);
}


void GLAPIENTRY
_mesa_DrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height)
{
   GET_CURRENT_CONTEXT(ctx);
   draw_texture(ctx, (GLfloat) x, (GLfloat) y, (GLfloat) z,
                (GLfloat) width, (GLfloat) height);
}


void GLAPIENTRY
_mesa_DrawTexsvOES(const GLshort *coords)
{
   GET_CURRENT_CONTEXT(ctx);
   draw_texture(ctx, (GLfloat) coords[0], (GLfloat) coords[1],
                (GLfloat) coords[2], (GLfloat) coords[3], (GLfloat) coords[4]);
}


void GLAPIENTRY
_mesa_DrawTexx(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height)
{
   GET_CURRENT_CONTEXT(ctx);
   draw_texture(ctx,
                (GLfloat) x / 65536.0f,
                (GLfloat) y / 65536.0f,
                (GLfloat) z / 65536.0f,
                (GLfloat) width / 65536.0f,
                (GLfloat) height / 65536.0f);
}


void GLAPIENTRY
_mesa_DrawTexxv(const GLfixed *coords)
{
   GET_CURRENT_CONTEXT(ctx);
   draw_texture(ctx,
                (GLfloat) coords[0] / 65536.0f,
                (GLfloat) coords[1] / 65536.0f,
                (GLfloat) coords[2] / 65536.0f,
                (GLfloat) coords[3] / 65536.0f,
                (GLfloat) coords[4] / 65536.0f);
}
@


1.3
log
@Merge Mesa 9.2.0
@
text
@@


1.2
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a26 1
#include "main/mfeatures.h"
a29 3
#if FEATURE_OES_draw_texture


d44 2
d51 2
d57 1
a57 1
_mesa_DrawTexf(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height)
d65 1
a65 1
_mesa_DrawTexfv(const GLfloat *coords)
d73 1
a73 1
_mesa_DrawTexi(GLint x, GLint y, GLint z, GLint width, GLint height)
d82 1
a82 1
_mesa_DrawTexiv(const GLint *coords)
d91 1
a91 1
_mesa_DrawTexs(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height)
d100 1
a100 1
_mesa_DrawTexsv(const GLshort *coords)
a131 2

#endif /* FEATURE_OES_draw_texture */
@


1.1
log
@Initial revision
@
text
@d27 2
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d27 3
a29 1
#include "main/mtypes.h"
a45 2
   _mesa_set_vp_override(ctx, GL_TRUE);

a50 2

   _mesa_set_vp_override(ctx, GL_FALSE);
d55 1
a55 1
_mesa_DrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height)
d63 1
a63 1
_mesa_DrawTexfvOES(const GLfloat *coords)
d71 1
a71 1
_mesa_DrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height)
d80 1
a80 1
_mesa_DrawTexivOES(const GLint *coords)
d89 1
a89 1
_mesa_DrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height)
d98 1
a98 1
_mesa_DrawTexsvOES(const GLshort *coords)
d130 2
@

