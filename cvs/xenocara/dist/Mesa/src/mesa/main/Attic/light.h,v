head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.4
	v10_4_3:1.1.1.4
	v10_2_7:1.1.1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.4
	v9_2_3:1.1.1.4
	v9_2_2:1.1.1.4
	v9_2_1:1.1.1.4
	v9_2_0:1.1.1.4
	OPENBSD_5_4:1.3.0.8
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.52;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2013.09.05.14.06.24;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2011.10.23.13.37.42;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.22.20.06.31;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.50.10;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.50.10;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.31.12;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.46;	author matthieu;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2013.09.05.13.16.41;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2008  Brian Paul   All Rights Reserved.
 * Copyright (C) 2009  VMware, Inc.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */


#ifndef LIGHT_H
#define LIGHT_H


#include "glheader.h"

struct gl_context;
struct gl_light;
struct gl_material;

extern void GLAPIENTRY
_mesa_ShadeModel( GLenum mode );

extern void GLAPIENTRY
_mesa_ProvokingVertex(GLenum mode);


extern void GLAPIENTRY
_mesa_ColorMaterial( GLenum face, GLenum mode );

extern void GLAPIENTRY
_mesa_Lightf( GLenum light, GLenum pname, GLfloat param );

extern void GLAPIENTRY
_mesa_Lightfv( GLenum light, GLenum pname, const GLfloat *params );

extern void GLAPIENTRY
_mesa_Lightiv( GLenum light, GLenum pname, const GLint *params );

extern void GLAPIENTRY
_mesa_Lighti( GLenum light, GLenum pname, GLint param );

extern void GLAPIENTRY
_mesa_LightModelf( GLenum pname, GLfloat param );

extern void GLAPIENTRY
_mesa_LightModelfv( GLenum pname, const GLfloat *params );

extern void GLAPIENTRY
_mesa_LightModeli( GLenum pname, GLint param );

extern void GLAPIENTRY
_mesa_LightModeliv( GLenum pname, const GLint *params );

extern void GLAPIENTRY
_mesa_GetLightfv( GLenum light, GLenum pname, GLfloat *params );

extern void GLAPIENTRY
_mesa_GetLightiv( GLenum light, GLenum pname, GLint *params );

extern void GLAPIENTRY
_mesa_GetMaterialfv( GLenum face, GLenum pname, GLfloat *params );

extern void GLAPIENTRY
_mesa_GetMaterialiv( GLenum face, GLenum pname, GLint *params );


extern void
_mesa_light(struct gl_context *ctx, GLuint lnum, GLenum pname, const GLfloat *params);


extern GLuint _mesa_material_bitmask( struct gl_context *ctx,
                                      GLenum face, GLenum pname,
                                      GLuint legal,
                                      const char * );

extern void _mesa_update_lighting( struct gl_context *ctx );

extern void _mesa_update_tnl_spaces( struct gl_context *ctx, GLuint new_state );

extern void _mesa_update_material( struct gl_context *ctx,
                                   GLuint bitmask );

extern void _mesa_update_color_material( struct gl_context *ctx,
                                         const GLfloat rgba[4] );

extern void _mesa_init_lighting( struct gl_context *ctx );

extern void _mesa_free_lighting_data( struct gl_context *ctx );

extern void _mesa_allow_light_in_model( struct gl_context *ctx, GLboolean flag );

#endif
@


1.4
log
@Merge Mesa 9.2.0
@
text
@@


1.3
log
@Merge Mesa 7.10.3
@
text
@a2 1
 * Version:  7.5
d20 4
a23 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
a31 1
#include "mfeatures.h"
d41 1
a41 1
_mesa_ProvokingVertexEXT(GLenum mode);
a43 1
#if _HAVE_FULL_GL
a87 18
/* Lerp between adjacent values in the f(x) lookup table, giving a
 * continuous function, with adequeate overall accuracy.  (Though
 * still pretty good compared to a straight lookup).
 * Result should be a GLfloat.
 */
#define GET_SHINE_TAB_ENTRY( table, dp, result )			\
do {									\
   struct gl_shine_tab *_tab = table;					\
   float f = (dp * (SHINE_TABLE_SIZE-1));				\
   int k = (int) f;							\
   if (k < 0 /* gcc may cast an overflow float value to negative int value*/ \
	|| k > SHINE_TABLE_SIZE-2)					\
      result = (GLfloat) pow( dp, _tab->shininess );		\
   else									\
      result = _tab->tab[k] + (f-k)*(_tab->tab[k+1]-_tab->tab[k]);	\
} while (0)


a92 6
extern void _mesa_invalidate_spot_exp_table( struct gl_light *l );

extern void _mesa_invalidate_shine_table( struct gl_context *ctx, GLuint i );

extern void _mesa_validate_all_lighting_tables( struct gl_context *ctx );

a99 4
extern void _mesa_copy_materials( struct gl_material *dst,
				  const struct gl_material *src,
				  GLuint bitmask );

a107 12

#else
#define _mesa_update_color_material( c, r ) ((void)0)
#define _mesa_validate_all_lighting_tables( c ) ((void)0)
#define _mesa_invalidate_spot_exp_table( l ) ((void)0)
#define _mesa_material_bitmask( c, f, p, l, s ) 0
#define _mesa_init_lighting( c ) ((void)0)
#define _mesa_free_lighting_data( c ) ((void)0)
#define _mesa_update_lighting( c ) ((void)0)
#define _mesa_update_tnl_spaces( c, n ) ((void)0)
#define GET_SHINE_TAB_ENTRY( table, dp, result )  ((result)=0)
#endif
@


1.2
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d31 6
a36 1
#include "mtypes.h"
d87 1
a87 1
_mesa_light(GLcontext *ctx, GLuint lnum, GLenum pname, const GLfloat *params);
d102 1
a102 1
      result = (GLfloat) _mesa_pow( dp, _tab->shininess );		\
d108 1
a108 1
extern GLuint _mesa_material_bitmask( GLcontext *ctx,
d115 1
a115 1
extern void _mesa_invalidate_shine_table( GLcontext *ctx, GLuint i );
d117 1
a117 1
extern void _mesa_validate_all_lighting_tables( GLcontext *ctx );
d119 1
a119 1
extern void _mesa_update_lighting( GLcontext *ctx );
d121 1
a121 1
extern void _mesa_update_tnl_spaces( GLcontext *ctx, GLuint new_state );
d123 1
a123 1
extern void _mesa_update_material( GLcontext *ctx,
d130 1
a130 1
extern void _mesa_update_color_material( GLcontext *ctx,
d133 1
a133 1
extern void _mesa_init_lighting( GLcontext *ctx );
d135 1
a135 1
extern void _mesa_free_lighting_data( GLcontext *ctx );
d137 1
a137 1
extern void _mesa_allow_light_in_model( GLcontext *ctx, GLboolean flag );
@


1.1
log
@Initial revision
@
text
@a0 5
/**
 * \file light.h
 * Lighting.
 */

d3 1
a3 1
 * Version:  3.5
d5 2
a6 1
 * Copyright (C) 1999-2001  Brian Paul   All Rights Reserved.
d36 4
d95 2
a96 1
   if (k > SHINE_TABLE_SIZE-2) 						\
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Mesa 7.0.1
@
text
@d95 1
a95 2
   if (k < 0 /* gcc may cast an overflow float value to negative int value*/ \
	|| k > SHINE_TABLE_SIZE-2)					\
@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@d1 5
d8 1
a8 1
 * Version:  7.5
d10 1
a10 2
 * Copyright (C) 1999-2008  Brian Paul   All Rights Reserved.
 * Copyright (C) 2009  VMware, Inc.  All Rights Reserved.
d35 1
a35 6
#include "glheader.h"
#include "mfeatures.h"

struct gl_context;
struct gl_light;
struct gl_material;
a39 4
extern void GLAPIENTRY
_mesa_ProvokingVertexEXT(GLenum mode);


d82 1
a82 1
_mesa_light(struct gl_context *ctx, GLuint lnum, GLenum pname, const GLfloat *params);
d97 1
a97 1
      result = (GLfloat) pow( dp, _tab->shininess );		\
d103 1
a103 1
extern GLuint _mesa_material_bitmask( struct gl_context *ctx,
d110 1
a110 1
extern void _mesa_invalidate_shine_table( struct gl_context *ctx, GLuint i );
d112 1
a112 1
extern void _mesa_validate_all_lighting_tables( struct gl_context *ctx );
d114 1
a114 1
extern void _mesa_update_lighting( struct gl_context *ctx );
d116 1
a116 1
extern void _mesa_update_tnl_spaces( struct gl_context *ctx, GLuint new_state );
d118 1
a118 1
extern void _mesa_update_material( struct gl_context *ctx,
d125 1
a125 1
extern void _mesa_update_color_material( struct gl_context *ctx,
d128 1
a128 1
extern void _mesa_init_lighting( struct gl_context *ctx );
d130 1
a130 1
extern void _mesa_free_lighting_data( struct gl_context *ctx );
d132 1
a132 1
extern void _mesa_allow_light_in_model( struct gl_context *ctx, GLboolean flag );
@


1.1.1.4
log
@Import Mesa 9.2.0
@
text
@d3 1
d21 3
a23 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
d32 1
d42 1
a42 1
_mesa_ProvokingVertex(GLenum mode);
d45 1
d90 18
d113 6
d126 4
d138 12
@


