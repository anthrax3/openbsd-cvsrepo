head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	v10_2_9:1.1.1.4
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.12.23.05.17.52;	author jsg;	state dead;
branches;
next	1.5;
commitid	TnlogFl9nOv2eaRf;

1.5
date	2015.02.20.23.09.59;	author jsg;	state Exp;
branches;
next	1.4;
commitid	4ry2gvZGMXkCUD2n;

1.4
date	2015.01.25.14.41.21;	author jsg;	state Exp;
branches;
next	1.3;
commitid	mcxB0JvoI9gTDYXU;

1.3
date	2013.09.05.14.06.18;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.17.13.58.17;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.30;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.45;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.16.26;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2015.01.25.14.12.30;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.4
date	2015.02.20.22.49.36;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.6
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 2009  VMware, Inc.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */


#include "main/compiler.h"
#include "main/cpuinfo.h"


/**
 * This function should be called before the various "cpu_has_foo" macros
 * are used.
 */
void
_mesa_get_cpu_features(void)
{
#ifdef USE_X86_ASM
   _mesa_get_x86_features();
#endif
}


/**
 * Return a string describing the CPU architexture and extensions that
 * Mesa is using (such as SSE or Altivec).
 * \return information string, free it with free()
 */
char *
_mesa_get_cpu_string(void)
{
#define MAX_STRING 50
   char *buffer;

   buffer = malloc(MAX_STRING);
   if (!buffer)
      return NULL;

   buffer[0] = 0;

#ifdef USE_X86_ASM

   if (_mesa_x86_cpu_features) {
      strcat(buffer, "x86");
   }

# ifdef USE_MMX_ASM
   if (cpu_has_mmx) {
      strcat(buffer, (cpu_has_mmxext) ? "/MMX+" : "/MMX");
   }
# endif
# ifdef USE_3DNOW_ASM
   if (cpu_has_3dnow) {
      strcat(buffer, (cpu_has_3dnowext) ? "/3DNow!+" : "/3DNow!");
   }
# endif
# ifdef USE_SSE_ASM
   if (cpu_has_xmm) {
      strcat(buffer, (cpu_has_xmm2) ? "/SSE2" : "/SSE");
   }
# endif

#elif defined(USE_SPARC_ASM)

   strcat(buffer, "SPARC");

#endif

   assert(strlen(buffer) < MAX_STRING);

   return buffer;
}
@


1.5
log
@Merge Mesa 10.2.9
@
text
@@


1.4
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@d37 1
a37 1
#if defined USE_X86_ASM || defined USE_X86_64_ASM
@


1.3
log
@Merge Mesa 9.2.0
@
text
@d37 1
a37 1
#ifdef USE_X86_ASM
@


1.2
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a2 1
 * Version:  7.5
d19 4
a22 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
d54 1
a54 1
   buffer = (char *) malloc(MAX_STRING);
a84 18

#elif defined(USE_PPC_ASM)

   if (_mesa_ppc_cpu_features) {
      strcat(buffer, (cpu_has_64) ? "PowerPC 64" : "PowerPC");
   }

# ifdef USE_VMX_ASM

   if (cpu_has_vmx) {
      strcat(buffer, "/Altivec");
   }

# endif

   if (! cpu_has_fpu) {
      strcat(buffer, "/No FPU");
   }
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d26 1
a26 1
#include "main/imports.h"
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d3 1
d20 3
a22 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
d26 1
a26 1
#include "main/compiler.h"
d54 1
a54 1
   buffer = malloc(MAX_STRING);
d85 18
@


1.1.1.3
log
@Import Mesa 10.4.3
@
text
@d37 1
a37 1
#if defined USE_X86_ASM || defined USE_X86_64_ASM
@


1.1.1.4
log
@Import Mesa 10.2.9
@
text
@d37 1
a37 1
#ifdef USE_X86_ASM
@


