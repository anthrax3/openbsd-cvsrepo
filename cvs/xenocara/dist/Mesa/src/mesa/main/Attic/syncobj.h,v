head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.17.53;	author jsg;	state dead;
branches;
next	1.4;
commitid	TnlogFl9nOv2eaRf;

1.4
date	2014.07.09.21.09.00;	author jsg;	state Exp;
branches;
next	1.3;
commitid	WPD6rgPryPkvXOr9;

1.3
date	2013.09.05.14.06.29;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.42;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.31;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.46;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.16.50;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.07.09.20.35.05;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.5
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright Â© 2009 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/**
 * \file syncobj.h
 * Sync object management.
 *
 * \author Ian Romanick <ian.d.romanick@@intel.com>
 */

#ifndef SYNCOBJ_H
#define SYNCOBJ_H

#include "glheader.h"

struct _glapi_table;
struct dd_function_table;
struct gl_context;
struct gl_sync_object;

extern void
_mesa_init_sync_object_functions(struct dd_function_table *driver);

extern void
_mesa_init_sync(struct gl_context *);

extern void
_mesa_free_sync_data(struct gl_context *);

extern void
_mesa_ref_sync_object(struct gl_context *ctx, struct gl_sync_object *syncObj);

extern void
_mesa_unref_sync_object(struct gl_context *ctx, struct gl_sync_object *syncObj);

extern bool
_mesa_validate_sync(struct gl_context *ctx,
                    const struct gl_sync_object *syncObj);

extern GLboolean GLAPIENTRY
_mesa_IsSync(GLsync sync);

extern void GLAPIENTRY
_mesa_DeleteSync(GLsync sync);

extern GLsync GLAPIENTRY
_mesa_FenceSync(GLenum condition, GLbitfield flags);

extern GLenum GLAPIENTRY
_mesa_ClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);

extern void GLAPIENTRY
_mesa_WaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);

extern void GLAPIENTRY
_mesa_GetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length,
		GLint *values);

#endif /* SYNCOBJ_H */
@


1.4
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.3
log
@Merge Mesa 9.2.0
@
text
@d56 4
@


1.2
log
@Merge Mesa 7.10.3
@
text
@a34 1
#include "mfeatures.h"
a40 2
#if FEATURE_ARB_sync

a44 3
_mesa_init_sync_dispatch(struct _glapi_table *disp);

extern void
a73 38

#else /* FEATURE_ARB_sync */

#include "main/compiler.h"

static INLINE void
_mesa_init_sync_object_functions(struct dd_function_table *driver)
{
}

static INLINE void
_mesa_init_sync_dispatch(struct _glapi_table *disp)
{
}

static INLINE void
_mesa_init_sync(struct gl_context *ctx)
{
}

static INLINE void
_mesa_free_sync_data(struct gl_context *ctx)
{
}

static INLINE void
_mesa_ref_sync_object(struct gl_context *ctx, struct gl_sync_object *syncObj)
{
   ASSERT_NO_FEATURE();
}

static INLINE void
_mesa_unref_sync_object(struct gl_context *ctx, struct gl_sync_object *syncObj)
{
   ASSERT_NO_FEATURE();
}

#endif /* FEATURE_ARB_sync */
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d34 9
a42 1
#include "context.h"
d48 4
a51 1
_mesa_init_sync(GLcontext *);
d54 1
a54 1
_mesa_free_sync_data(GLcontext *);
d57 1
a57 1
_mesa_ref_sync_object(GLcontext *ctx, struct gl_sync_object *syncObj);
d60 1
a60 1
_mesa_unref_sync_object(GLcontext *ctx, struct gl_sync_object *syncObj);
d80 38
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d34 1
a34 9
#include "glheader.h"
#include "mfeatures.h"

struct _glapi_table;
struct dd_function_table;
struct gl_context;
struct gl_sync_object;

#if FEATURE_ARB_sync
d40 1
a40 4
_mesa_init_sync_dispatch(struct _glapi_table *disp);

extern void
_mesa_init_sync(struct gl_context *);
d43 1
a43 1
_mesa_free_sync_data(struct gl_context *);
d46 1
a46 1
_mesa_ref_sync_object(struct gl_context *ctx, struct gl_sync_object *syncObj);
d49 1
a49 1
_mesa_unref_sync_object(struct gl_context *ctx, struct gl_sync_object *syncObj);
a68 38

#else /* FEATURE_ARB_sync */

#include "main/compiler.h"

static INLINE void
_mesa_init_sync_object_functions(struct dd_function_table *driver)
{
}

static INLINE void
_mesa_init_sync_dispatch(struct _glapi_table *disp)
{
}

static INLINE void
_mesa_init_sync(struct gl_context *ctx)
{
}

static INLINE void
_mesa_free_sync_data(struct gl_context *ctx)
{
}

static INLINE void
_mesa_ref_sync_object(struct gl_context *ctx, struct gl_sync_object *syncObj)
{
   ASSERT_NO_FEATURE();
}

static INLINE void
_mesa_unref_sync_object(struct gl_context *ctx, struct gl_sync_object *syncObj)
{
   ASSERT_NO_FEATURE();
}

#endif /* FEATURE_ARB_sync */
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d35 1
d42 2
d48 3
d80 38
@


1.1.1.3
log
@Import Mesa 10.2.3
@
text
@a55 4
extern bool
_mesa_validate_sync(struct gl_context *ctx,
                    const struct gl_sync_object *syncObj);

@


