head	1.7;
access;
symbols
	OPENBSD_5_8:1.6.0.8
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	v9_2_5:1.1.1.3
	v9_2_3:1.1.1.3
	v9_2_2:1.1.1.3
	v9_2_1:1.1.1.3
	v9_2_0:1.1.1.3
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	v7_10_3:1.1.1.2
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v7_0_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.12.23.05.17.53;	author jsg;	state dead;
branches;
next	1.6;
commitid	TnlogFl9nOv2eaRf;

1.6
date	2013.09.05.14.06.26;	author jsg;	state Exp;
branches;
next	1.5;

1.5
date	2012.08.17.13.58.19;	author mpi;	state Exp;
branches;
next	1.4;

1.4
date	2011.10.23.13.37.42;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.22.20.06.31;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.41;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.24.17.31.17;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.11.24.17.31.17;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.10.23.13.29.46;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.09.05.13.16.47;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2007  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */


#ifndef QUERYOBJ_H
#define QUERYOBJ_H


#include "main/mtypes.h"
#include "main/hash.h"


static inline struct gl_query_object *
_mesa_lookup_query_object(struct gl_context *ctx, GLuint id)
{
   return (struct gl_query_object *)
      _mesa_HashLookup(ctx->Query.QueryObjects, id);
}


extern void
_mesa_init_query_object_functions(struct dd_function_table *driver);

extern void
_mesa_init_queryobj(struct gl_context *ctx);

extern void
_mesa_free_queryobj_data(struct gl_context *ctx);

void GLAPIENTRY
_mesa_GenQueries(GLsizei n, GLuint *ids);
void GLAPIENTRY
_mesa_DeleteQueries(GLsizei n, const GLuint *ids);
GLboolean GLAPIENTRY
_mesa_IsQuery(GLuint id);
void GLAPIENTRY
_mesa_BeginQueryIndexed(GLenum target, GLuint index, GLuint id);
void GLAPIENTRY
_mesa_EndQueryIndexed(GLenum target, GLuint index);
void GLAPIENTRY
_mesa_BeginQuery(GLenum target, GLuint id);
void GLAPIENTRY
_mesa_EndQuery(GLenum target);
void GLAPIENTRY
_mesa_QueryCounter(GLuint id, GLenum target);
void GLAPIENTRY
_mesa_GetQueryIndexediv(GLenum target, GLuint index, GLenum pname,
                        GLint *params);
void GLAPIENTRY
_mesa_GetQueryiv(GLenum target, GLenum pname, GLint *params);
void GLAPIENTRY
_mesa_GetQueryObjectiv(GLuint id, GLenum pname, GLint *params);
void GLAPIENTRY
_mesa_GetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params);
void GLAPIENTRY
_mesa_GetQueryObjecti64v(GLuint id, GLenum pname, GLint64EXT *params);
void GLAPIENTRY
_mesa_GetQueryObjectui64v(GLuint id, GLenum pname, GLuint64EXT *params);

#endif /* QUERYOBJ_H */
@


1.6
log
@Merge Mesa 9.2.0
@
text
@@


1.5
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a2 1
 * Version:  7.1
d19 4
a22 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
a29 1
#include "main/mfeatures.h"
d34 1
a34 3
#if FEATURE_queryobj

static INLINE struct gl_query_object *
a45 23
_mesa_init_queryobj_dispatch(struct _glapi_table *disp);

#else /* FEATURE_queryobj */

static INLINE struct gl_query_object *
_mesa_lookup_query_object(struct gl_context *ctx, GLuint id)
{
   return NULL;
}

static INLINE void
_mesa_init_query_object_functions(struct dd_function_table *driver)
{
}

static INLINE void
_mesa_init_queryobj_dispatch(struct _glapi_table *disp)
{
}

#endif /* FEATURE_queryobj */

extern void
d51 29
@


1.4
log
@Merge Mesa 7.10.3
@
text
@d30 1
a43 18

extern void GLAPIENTRY
_mesa_GenQueriesARB(GLsizei n, GLuint *ids);

extern void GLAPIENTRY
_mesa_DeleteQueriesARB(GLsizei n, const GLuint *ids);

extern GLboolean GLAPIENTRY
_mesa_IsQueryARB(GLuint id);

extern void GLAPIENTRY
_mesa_GetQueryivARB(GLenum target, GLenum pname, GLint *params);

extern void GLAPIENTRY
_mesa_GetQueryObjectivARB(GLuint id, GLenum pname, GLint *params);

extern void GLAPIENTRY
_mesa_GetQueryObjectuivARB(GLuint id, GLenum pname, GLuint *params);
@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@a35 11
#define _MESA_INIT_QUERYOBJ_FUNCTIONS(driver, impl)      \
   do {                                                  \
      (driver)->NewQueryObject = impl ## NewQueryObject; \
      (driver)->DeleteQuery    = impl ## DeleteQuery;    \
      (driver)->BeginQuery     = impl ## BeginQuery;     \
      (driver)->EndQuery       = impl ## EndQuery;       \
      (driver)->WaitQuery      = impl ## WaitQuery;      \
      (driver)->CheckQuery     = impl ## CheckQuery;     \
   } while (0)


d37 1
a37 1
_mesa_lookup_query_object(GLcontext *ctx, GLuint id)
d70 5
a74 1
#define _MESA_INIT_QUERYOBJ_FUNCTIONS(driver, impl) do { } while (0)
d89 1
a89 1
_mesa_init_queryobj(GLcontext *ctx);
d92 1
a92 1
_mesa_free_queryobj_data(GLcontext *ctx);
@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d26 2
a27 2
#ifndef OCCLUDE_H
#define OCCLUDE_H
d30 2
a31 2
extern struct gl_query_object *
_mesa_new_query_object(GLcontext *ctx, GLuint id);
a32 5
extern void
_mesa_init_query(GLcontext *ctx);

extern void
_mesa_free_query_data(GLcontext *ctx);
d34 1
a34 2
extern void
_mesa_delete_query(GLcontext *ctx, struct gl_query_object *q);
d36 9
a44 2
extern void
_mesa_begin_query(GLcontext *ctx, struct gl_query_object *q);
a45 2
extern void
_mesa_end_query(GLcontext *ctx, struct gl_query_object *q);
d47 6
a52 2
extern void
_mesa_wait_query(GLcontext *ctx, struct gl_query_object *q);
a64 6
_mesa_BeginQueryARB(GLenum target, GLuint id);

extern void GLAPIENTRY
_mesa_EndQueryARB(GLenum target);

extern void GLAPIENTRY
d73 24
a96 2
extern void GLAPIENTRY
_mesa_GetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64EXT *params);
d98 2
a99 2
extern void GLAPIENTRY
_mesa_GetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64EXT *params);
d102 1
a102 1
#endif /* OCCLUDE_H */
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
 * Version:  6.5
d5 1
a5 1
 * Copyright (C) 1999-2005  Brian Paul   All Rights Reserved.
d38 13
@


1.1.1.1
log
@Mesa 7.0.1
@
text
@@


1.1.1.2
log
@Import Mesa 7.10.3
@
text
@d3 1
a3 1
 * Version:  7.1
d5 1
a5 1
 * Copyright (C) 1999-2007  Brian Paul   All Rights Reserved.
d26 2
a27 2
#ifndef QUERYOBJ_H
#define QUERYOBJ_H
d30 2
a31 2
#include "main/mtypes.h"
#include "main/hash.h"
d33 2
d36 2
a37 9
#if FEATURE_queryobj

static INLINE struct gl_query_object *
_mesa_lookup_query_object(struct gl_context *ctx, GLuint id)
{
   return (struct gl_query_object *)
      _mesa_HashLookup(ctx->Query.QueryObjects, id);
}

d49 6
d63 2
a64 2
extern void
_mesa_init_query_object_functions(struct dd_function_table *driver);
d66 2
a67 28
extern void
_mesa_init_queryobj_dispatch(struct _glapi_table *disp);

#else /* FEATURE_queryobj */

static INLINE struct gl_query_object *
_mesa_lookup_query_object(struct gl_context *ctx, GLuint id)
{
   return NULL;
}

static INLINE void
_mesa_init_query_object_functions(struct dd_function_table *driver)
{
}

static INLINE void
_mesa_init_queryobj_dispatch(struct _glapi_table *disp)
{
}

#endif /* FEATURE_queryobj */

extern void
_mesa_init_queryobj(struct gl_context *ctx);

extern void
_mesa_free_queryobj_data(struct gl_context *ctx);
d70 1
a70 1
#endif /* QUERYOBJ_H */
@


1.1.1.3
log
@Import Mesa 9.2.0
@
text
@d3 1
d20 3
a22 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
d34 3
a36 1
static inline struct gl_query_object *
d44 18
d66 23
a93 29
void GLAPIENTRY
_mesa_GenQueries(GLsizei n, GLuint *ids);
void GLAPIENTRY
_mesa_DeleteQueries(GLsizei n, const GLuint *ids);
GLboolean GLAPIENTRY
_mesa_IsQuery(GLuint id);
void GLAPIENTRY
_mesa_BeginQueryIndexed(GLenum target, GLuint index, GLuint id);
void GLAPIENTRY
_mesa_EndQueryIndexed(GLenum target, GLuint index);
void GLAPIENTRY
_mesa_BeginQuery(GLenum target, GLuint id);
void GLAPIENTRY
_mesa_EndQuery(GLenum target);
void GLAPIENTRY
_mesa_QueryCounter(GLuint id, GLenum target);
void GLAPIENTRY
_mesa_GetQueryIndexediv(GLenum target, GLuint index, GLenum pname,
                        GLint *params);
void GLAPIENTRY
_mesa_GetQueryiv(GLenum target, GLenum pname, GLint *params);
void GLAPIENTRY
_mesa_GetQueryObjectiv(GLuint id, GLenum pname, GLint *params);
void GLAPIENTRY
_mesa_GetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params);
void GLAPIENTRY
_mesa_GetQueryObjecti64v(GLuint id, GLenum pname, GLint64EXT *params);
void GLAPIENTRY
_mesa_GetQueryObjectui64v(GLuint id, GLenum pname, GLuint64EXT *params);
@


