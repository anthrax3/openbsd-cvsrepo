head	1.7;
access;
symbols
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	v10_2_9:1.1.1.4
	v10_4_3:1.1.1.4
	v10_2_7:1.1.1.4
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	v10_2_3:1.1.1.4
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	v9_2_5:1.1.1.3
	v9_2_3:1.1.1.3
	v9_2_2:1.1.1.3
	v9_2_1:1.1.1.3
	v9_2_0:1.1.1.3
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	v7_10_3:1.1.1.2
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.12.23.05.17.53;	author jsg;	state dead;
branches;
next	1.6;
commitid	TnlogFl9nOv2eaRf;

1.6
date	2014.07.09.21.09.00;	author jsg;	state Exp;
branches;
next	1.5;
commitid	WPD6rgPryPkvXOr9;

1.5
date	2013.09.05.14.06.29;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.17.13.58.19;	author mpi;	state Exp;
branches;
next	1.3;

1.3
date	2011.10.23.13.37.42;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.22.20.06.31;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.50.19;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.50.19;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.10.23.13.29.46;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.09.05.13.16.50;	author jsg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.07.09.20.35.05;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.7
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2006  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

#ifndef TEXCOMPRESS_H
#define TEXCOMPRESS_H

#include "formats.h"
#include "glheader.h"

struct gl_context;

extern GLenum
_mesa_gl_compressed_format_base_format(GLenum format);

extern GLuint
_mesa_get_compressed_formats(struct gl_context *ctx, GLint *formats);

extern mesa_format
_mesa_glenum_to_compressed_format(GLenum format);

extern GLenum
_mesa_compressed_format_to_glenum(struct gl_context *ctx, mesa_format mesaFormat);

extern GLubyte *
_mesa_compressed_image_address(GLint col, GLint row, GLint img,
                               mesa_format mesaFormat,
                               GLsizei width, const GLubyte *image);


/** A function to fetch one texel from a compressed texture */
typedef void (*compressed_fetch_func)(const GLubyte *map,
                                      GLint rowStride,
                                      GLint i, GLint j,
                                      GLfloat *texel);

extern compressed_fetch_func
_mesa_get_compressed_fetch_func(mesa_format format);


extern void
_mesa_decompress_image(mesa_format format, GLuint width, GLuint height,
                       const GLubyte *src, GLint srcRowStride,
                       GLfloat *dest);

#endif /* TEXCOMPRESS_H */
@


1.6
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.5
log
@Merge Mesa 9.2.0
@
text
@d39 1
a39 1
extern gl_format
d43 1
a43 1
_mesa_compressed_format_to_glenum(struct gl_context *ctx, gl_format mesaFormat);
d47 1
a47 1
                               gl_format mesaFormat,
d58 1
a58 1
_mesa_get_compressed_fetch_func(gl_format format);
d62 1
a62 1
_mesa_decompress_image(gl_format format, GLuint width, GLuint height,
@


1.4
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a2 1
 * Version:  6.5.1
d19 4
a22 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
a29 1
#include "mfeatures.h"
a32 2
#if _HAVE_FULL_GL

d43 1
a43 1
_mesa_compressed_format_to_glenum(struct gl_context *ctx, GLuint mesaFormat);
a49 1
#else /* _HAVE_FULL_GL */
d51 9
a59 4
/* no-op macros */
#define _mesa_get_compressed_formats( c, f ) 0
#define _mesa_compressed_image_address(c, r, i, f, w, i2 ) 0
#define _mesa_compress_teximage( c, w, h, sF, s, sRS, dF, d, drs ) ((void)0)
d61 4
a64 1
#endif /* _HAVE_FULL_GL */
@


1.3
log
@Merge Mesa 7.10.3
@
text
@d36 3
d40 1
a40 1
_mesa_get_compressed_formats(struct gl_context *ctx, GLint *formats, GLboolean all);
@


1.2
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@a27 1
#include "mtypes.h"
d29 4
d37 1
a37 1
_mesa_get_compressed_formats(GLcontext *ctx, GLint *formats, GLboolean all);
d43 1
a43 1
_mesa_compressed_format_to_glenum(GLcontext *ctx, GLuint mesaFormat);
@


1.1
log
@Initial revision
@
text
@d29 1
d36 2
a37 12
extern GLuint
_mesa_compressed_texture_size( GLcontext *ctx,
                               GLsizei width, GLsizei height, GLsizei depth,
                               GLuint mesaFormat );

extern GLuint
_mesa_compressed_texture_size_glenum(GLcontext *ctx,
                                     GLsizei width, GLsizei height,
                                     GLsizei depth, GLenum glformat);

extern GLint
_mesa_compressed_row_stride(GLuint mesaFormat, GLsizei width);
d39 2
d44 1
a44 1
                               GLuint mesaFormat,
a46 8

extern void
_mesa_init_texture_s3tc( GLcontext *ctx );

extern void
_mesa_init_texture_fxt1( GLcontext *ctx );


a50 3
#define _mesa_compressed_texture_size( c, w, h, d, f ) 0
#define _mesa_compressed_texture_size_glenum( c, w, h, d, f ) 0
#define _mesa_compressed_row_stride( f, w) 0
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Import Mesa 7.10.3
@
text
@d28 1
a28 3
#include "formats.h"
#include "glheader.h"
#include "mfeatures.h"
d30 4
a33 1
struct gl_context;
d35 4
a38 1
#if _HAVE_FULL_GL
d41 3
a43 1
_mesa_get_compressed_formats(struct gl_context *ctx, GLint *formats, GLboolean all);
d45 2
a46 2
extern gl_format
_mesa_glenum_to_compressed_format(GLenum format);
a47 2
extern GLenum
_mesa_compressed_format_to_glenum(struct gl_context *ctx, GLuint mesaFormat);
d51 1
a51 1
                               gl_format mesaFormat,
d54 8
d66 3
@


1.1.1.3
log
@Import Mesa 9.2.0
@
text
@d3 1
d20 3
a22 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
d30 1
d34 1
a34 2
extern GLenum
_mesa_gl_compressed_format_base_format(GLenum format);
d37 1
a37 1
_mesa_get_compressed_formats(struct gl_context *ctx, GLint *formats);
d43 1
a43 1
_mesa_compressed_format_to_glenum(struct gl_context *ctx, gl_format mesaFormat);
d50 1
d52 4
a55 9
/** A function to fetch one texel from a compressed texture */
typedef void (*compressed_fetch_func)(const GLubyte *map,
                                      GLint rowStride,
                                      GLint i, GLint j,
                                      GLfloat *texel);

extern compressed_fetch_func
_mesa_get_compressed_fetch_func(gl_format format);

d57 1
a57 4
extern void
_mesa_decompress_image(gl_format format, GLuint width, GLuint height,
                       const GLubyte *src, GLint srcRowStride,
                       GLfloat *dest);
@


1.1.1.4
log
@Import Mesa 10.2.3
@
text
@d39 1
a39 1
extern mesa_format
d43 1
a43 1
_mesa_compressed_format_to_glenum(struct gl_context *ctx, mesa_format mesaFormat);
d47 1
a47 1
                               mesa_format mesaFormat,
d58 1
a58 1
_mesa_get_compressed_fetch_func(mesa_format format);
d62 1
a62 1
_mesa_decompress_image(mesa_format format, GLuint width, GLuint height,
@


