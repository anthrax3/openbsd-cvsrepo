head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	v9_2_5:1.1.1.3
	v9_2_3:1.1.1.3
	v9_2_2:1.1.1.3
	v9_2_1:1.1.1.3
	v9_2_0:1.1.1.3
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	v7_10_3:1.1.1.2
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.12.23.05.17.52;	author jsg;	state dead;
branches;
next	1.5;
commitid	TnlogFl9nOv2eaRf;

1.5
date	2013.09.05.14.06.22;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.17.13.58.19;	author mpi;	state Exp;
branches;
next	1.3;

1.3
date	2011.10.23.13.37.42;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.22.20.06.30;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.50.01;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.50.01;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.10.23.13.29.46;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.09.05.13.16.34;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2008  Brian Paul   All Rights Reserved.
 * Copyright (C) 2009  VMware, Inc.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

#ifndef FEEDBACK_H
#define FEEDBACK_H


#include "main/mtypes.h"


void GLAPIENTRY
_mesa_FeedbackBuffer( GLsizei size, GLenum type, GLfloat *buffer );
void GLAPIENTRY
_mesa_PassThrough( GLfloat token );
void GLAPIENTRY
_mesa_SelectBuffer( GLsizei size, GLuint *buffer );
void GLAPIENTRY
_mesa_InitNames( void );
void GLAPIENTRY
_mesa_LoadName( GLuint name );
void GLAPIENTRY
_mesa_PushName( GLuint name );
void GLAPIENTRY
_mesa_PopName( void );
GLint GLAPIENTRY
_mesa_RenderMode( GLenum mode );

extern void
_mesa_feedback_vertex( struct gl_context *ctx,
                       const GLfloat win[4],
                       const GLfloat color[4],
                       const GLfloat texcoord[4] );


static inline void
_mesa_feedback_token( struct gl_context *ctx, GLfloat token )
{
   if (ctx->Feedback.Count < ctx->Feedback.BufferSize) {
      ctx->Feedback.Buffer[ctx->Feedback.Count] = token;
   }
   ctx->Feedback.Count++;
}


extern void
_mesa_update_hitflag( struct gl_context *ctx, GLfloat z );


extern void
_mesa_init_feedback( struct gl_context *ctx );

#endif /* FEEDBACK_H */
@


1.5
log
@Merge Mesa 9.2.0
@
text
@@


1.4
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a2 1
 * Version:  7.5
d20 4
a23 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
a29 1
#include "main/mfeatures.h"
d33 16
a48 1
#if FEATURE_feedback
d57 1
a57 1
static INLINE void
a69 39

extern void
_mesa_init_feedback_dispatch(struct _glapi_table *disp);

#else /* FEATURE_feedback */

#include "main/compiler.h"

static INLINE void
_mesa_feedback_vertex( struct gl_context *ctx,
                       const GLfloat win[4],
                       const GLfloat color[4],
                       const GLfloat texcoord[4] )
{
   /* render mode is always GL_RENDER */
   ASSERT_NO_FEATURE();
}


static INLINE void
_mesa_feedback_token( struct gl_context *ctx, GLfloat token )
{
   /* render mode is always GL_RENDER */
   ASSERT_NO_FEATURE();
}

static INLINE void
_mesa_update_hitflag( struct gl_context *ctx, GLfloat z )
{
   /* render mode is always GL_RENDER */
   ASSERT_NO_FEATURE();
}

static INLINE void
_mesa_init_feedback_dispatch(struct _glapi_table *disp)
{
}

#endif /* FEATURE_feedback */
@


1.3
log
@Merge Mesa 7.10.3
@
text
@d30 1
@


1.2
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@a34 5
#define _MESA_INIT_FEEDBACK_FUNCTIONS(driver, impl) \
   do {                                             \
      (driver)->RenderMode = impl ## RenderMode;    \
   } while (0)

d36 1
a36 1
_mesa_feedback_vertex( GLcontext *ctx,
d43 1
a43 1
_mesa_feedback_token( GLcontext *ctx, GLfloat token )
d53 1
a53 1
_mesa_update_hitflag( GLcontext *ctx, GLfloat z );
d61 1
a61 1
#define _MESA_INIT_FEEDBACK_FUNCTIONS(driver, impl) do { } while (0)
d64 1
a64 1
_mesa_feedback_vertex( GLcontext *ctx,
d75 1
a75 1
_mesa_feedback_token( GLcontext *ctx, GLfloat token )
d82 1
a82 1
_mesa_update_hitflag( GLcontext *ctx, GLfloat z )
d96 1
a96 1
_mesa_init_feedback( GLcontext *ctx );
@


1.1
log
@Initial revision
@
text
@a0 5
/**
 * \file feedback.h
 * Selection and feedback modes functions.
 */

d3 1
a3 1
 * Version:  3.5
d5 2
a6 1
 * Copyright (C) 1999-2001  Brian Paul   All Rights Reserved.
a25 1

d30 4
a33 1
#include "mtypes.h"
d35 4
d40 5
a44 5
#define FEEDBACK_TOKEN( CTX, T )				\
	if (CTX->Feedback.Count < CTX->Feedback.BufferSize) {	\
	   CTX->Feedback.Buffer[CTX->Feedback.Count] = (GLfloat) (T); \
	}							\
	CTX->Feedback.Count++;
d47 8
a54 1
extern void _mesa_init_feedback( GLcontext * ctx );
a55 5
extern void _mesa_feedback_vertex( GLcontext *ctx,
                                const GLfloat win[4],
                                const GLfloat color[4],
				GLfloat index,
                                const GLfloat texcoord[4] );
d57 2
a59 1
extern void _mesa_update_hitflag( GLcontext *ctx, GLfloat z );
d61 2
d64 1
a64 2
extern void GLAPIENTRY
_mesa_PassThrough( GLfloat token );
d66 1
a66 2
extern void GLAPIENTRY
_mesa_FeedbackBuffer( GLsizei size, GLenum type, GLfloat *buffer );
d68 9
a76 2
extern void GLAPIENTRY
_mesa_SelectBuffer( GLsizei size, GLuint *buffer );
a77 2
extern void GLAPIENTRY
_mesa_InitNames( void );
d79 6
a84 2
extern void GLAPIENTRY
_mesa_LoadName( GLuint name );
d86 6
a91 2
extern void GLAPIENTRY
_mesa_PushName( GLuint name );
d93 4
a96 2
extern void GLAPIENTRY
_mesa_PopName( void );
d98 1
a98 2
extern GLint GLAPIENTRY
_mesa_RenderMode( GLenum mode );
d100 2
d103 1
a103 1
#endif
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Import Mesa 7.10.3
@
text
@d1 5
d8 1
a8 1
 * Version:  7.5
d10 1
a10 2
 * Copyright (C) 1999-2008  Brian Paul   All Rights Reserved.
 * Copyright (C) 2009  VMware, Inc.  All Rights Reserved.
d30 1
d35 1
a35 2
#include "main/mtypes.h"

a36 1
#if FEATURE_feedback
d38 5
a42 5
extern void
_mesa_feedback_vertex( struct gl_context *ctx,
                       const GLfloat win[4],
                       const GLfloat color[4],
                       const GLfloat texcoord[4] );
d45 1
a45 8
static INLINE void
_mesa_feedback_token( struct gl_context *ctx, GLfloat token )
{
   if (ctx->Feedback.Count < ctx->Feedback.BufferSize) {
      ctx->Feedback.Buffer[ctx->Feedback.Count] = token;
   }
   ctx->Feedback.Count++;
}
d47 5
a52 2
extern void
_mesa_update_hitflag( struct gl_context *ctx, GLfloat z );
d54 1
a55 2
extern void
_mesa_init_feedback_dispatch(struct _glapi_table *disp);
d57 2
a58 1
#else /* FEATURE_feedback */
d60 2
a61 1
#include "main/compiler.h"
d63 2
a64 9
static INLINE void
_mesa_feedback_vertex( struct gl_context *ctx,
                       const GLfloat win[4],
                       const GLfloat color[4],
                       const GLfloat texcoord[4] )
{
   /* render mode is always GL_RENDER */
   ASSERT_NO_FEATURE();
}
d66 2
d69 2
a70 6
static INLINE void
_mesa_feedback_token( struct gl_context *ctx, GLfloat token )
{
   /* render mode is always GL_RENDER */
   ASSERT_NO_FEATURE();
}
d72 2
a73 6
static INLINE void
_mesa_update_hitflag( struct gl_context *ctx, GLfloat z )
{
   /* render mode is always GL_RENDER */
   ASSERT_NO_FEATURE();
}
d75 2
a76 4
static INLINE void
_mesa_init_feedback_dispatch(struct _glapi_table *disp)
{
}
d78 2
a79 1
#endif /* FEATURE_feedback */
a80 2
extern void
_mesa_init_feedback( struct gl_context *ctx );
d82 1
a82 1
#endif /* FEEDBACK_H */
@


1.1.1.3
log
@Import Mesa 9.2.0
@
text
@d3 1
d21 3
a23 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
d33 1
a33 16
void GLAPIENTRY
_mesa_FeedbackBuffer( GLsizei size, GLenum type, GLfloat *buffer );
void GLAPIENTRY
_mesa_PassThrough( GLfloat token );
void GLAPIENTRY
_mesa_SelectBuffer( GLsizei size, GLuint *buffer );
void GLAPIENTRY
_mesa_InitNames( void );
void GLAPIENTRY
_mesa_LoadName( GLuint name );
void GLAPIENTRY
_mesa_PushName( GLuint name );
void GLAPIENTRY
_mesa_PopName( void );
GLint GLAPIENTRY
_mesa_RenderMode( GLenum mode );
d42 1
a42 1
static inline void
d55 39
@


