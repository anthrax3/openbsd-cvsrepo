head	1.8;
access;
symbols
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	v10_2_9:1.1.1.5
	v10_4_3:1.1.1.5
	v10_2_7:1.1.1.5
	OPENBSD_5_6:1.7.0.2
	OPENBSD_5_6_BASE:1.7
	v10_2_3:1.1.1.5
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	v9_2_5:1.1.1.4
	v9_2_3:1.1.1.4
	v9_2_2:1.1.1.4
	v9_2_1:1.1.1.4
	v9_2_0:1.1.1.4
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.12.23.05.17.52;	author jsg;	state dead;
branches;
next	1.7;
commitid	TnlogFl9nOv2eaRf;

1.7
date	2014.07.09.21.09.00;	author jsg;	state Exp;
branches;
next	1.6;
commitid	WPD6rgPryPkvXOr9;

1.6
date	2013.09.05.14.06.22;	author jsg;	state Exp;
branches;
next	1.5;

1.5
date	2012.08.17.13.58.19;	author mpi;	state Exp;
branches;
next	1.4;

1.4
date	2011.10.23.13.37.42;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.22.20.06.30;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.41;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.50.01;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.50.01;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.31.04;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.46;	author matthieu;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2013.09.05.13.16.38;	author jsg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2014.07.09.20.35.02;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.8
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2006  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */


#ifndef FRAMEBUFFER_H
#define FRAMEBUFFER_H

#include "glheader.h"

struct gl_config;
struct gl_context;
struct gl_renderbuffer;

extern struct gl_framebuffer *
_mesa_create_framebuffer(const struct gl_config *visual);

extern struct gl_framebuffer *
_mesa_new_framebuffer(struct gl_context *ctx, GLuint name);

extern void
_mesa_initialize_window_framebuffer(struct gl_framebuffer *fb,
				     const struct gl_config *visual);

extern void
_mesa_initialize_user_framebuffer(struct gl_framebuffer *fb, GLuint name);

extern void
_mesa_destroy_framebuffer(struct gl_framebuffer *buffer);

extern void
_mesa_free_framebuffer_data(struct gl_framebuffer *buffer);

extern void
_mesa_reference_framebuffer_(struct gl_framebuffer **ptr,
                             struct gl_framebuffer *fb);

static inline void
_mesa_reference_framebuffer(struct gl_framebuffer **ptr,
                            struct gl_framebuffer *fb)
{
   if (*ptr != fb)
      _mesa_reference_framebuffer_(ptr, fb);
}

extern void
_mesa_resize_framebuffer(struct gl_context *ctx, struct gl_framebuffer *fb,
                         GLuint width, GLuint height);


extern void
_mesa_resizebuffers( struct gl_context *ctx );

extern void
_mesa_scissor_bounding_box(const struct gl_context *ctx,
                           const struct gl_framebuffer *buffer,
                           unsigned idx, int *bbox);

extern void 
_mesa_update_draw_buffer_bounds(struct gl_context *ctx);

extern void
_mesa_update_framebuffer_visual(struct gl_context *ctx,
				struct gl_framebuffer *fb);

extern void
_mesa_update_framebuffer(struct gl_context *ctx);

extern GLboolean
_mesa_source_buffer_exists(struct gl_context *ctx, GLenum format);

extern GLboolean
_mesa_dest_buffer_exists(struct gl_context *ctx, GLenum format);

extern GLenum
_mesa_get_color_read_type(struct gl_context *ctx);

extern GLenum
_mesa_get_color_read_format(struct gl_context *ctx);

extern struct gl_renderbuffer *
_mesa_get_read_renderbuffer_for_format(const struct gl_context *ctx,
                                       GLenum format);

extern void
_mesa_print_framebuffer(const struct gl_framebuffer *fb);

#endif /* FRAMEBUFFER_H */
@


1.7
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.6
log
@Merge Mesa 9.2.0
@
text
@d74 5
@


1.5
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a2 1
 * Version:  6.5
d19 4
a22 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
d33 1
d55 4
d60 5
a64 1
                            struct gl_framebuffer *fb);
a73 4
extern void GLAPIENTRY
_mesa_ResizeBuffersMESA( void );


a81 8
_mesa_update_depth_buffer(struct gl_context *ctx, struct gl_framebuffer *fb,
                            GLuint attIndex);

extern void
_mesa_update_stencil_buffer(struct gl_context *ctx, struct gl_framebuffer *fb,
                            GLuint attIndex);

extern void
d95 4
@


1.4
log
@Merge Mesa 7.10.3
@
text
@d73 2
a74 1
_mesa_update_framebuffer_visual(struct gl_framebuffer *fb);
@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d29 4
d35 1
a35 1
_mesa_create_framebuffer(const GLvisual *visual);
d38 1
a38 1
_mesa_new_framebuffer(GLcontext *ctx, GLuint name);
d42 1
a42 1
				     const GLvisual *visual);
d58 1
a58 1
_mesa_resize_framebuffer(GLcontext *ctx, struct gl_framebuffer *fb,
d63 1
a63 1
_mesa_resizebuffers( GLcontext *ctx );
d70 1
a70 1
_mesa_update_draw_buffer_bounds(GLcontext *ctx);
d76 1
a76 1
_mesa_update_depth_buffer(GLcontext *ctx, struct gl_framebuffer *fb,
d80 1
a80 1
_mesa_update_stencil_buffer(GLcontext *ctx, struct gl_framebuffer *fb,
d84 1
a84 1
_mesa_update_framebuffer(GLcontext *ctx);
d87 1
a87 1
_mesa_source_buffer_exists(GLcontext *ctx, GLenum format);
d90 1
a90 1
_mesa_dest_buffer_exists(GLcontext *ctx, GLenum format);
d93 1
a93 1
_mesa_get_color_read_type(GLcontext *ctx);
d96 4
a99 1
_mesa_get_color_read_format(GLcontext *ctx);
@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d37 5
a41 1
_mesa_initialize_framebuffer(struct gl_framebuffer *fb, const GLvisual *visual);
a53 3
_mesa_unreference_framebuffer(struct gl_framebuffer **fb);

extern void
d88 5
@


1.1
log
@Initial revision
@
text
@d46 5
a50 1
_mesa_dereference_framebuffer(struct gl_framebuffer **fb);
d55 8
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Mesa 7.0.1
@
text
@d46 1
a46 5
_mesa_reference_framebuffer(struct gl_framebuffer **ptr,
                            struct gl_framebuffer *fb);

extern void
_mesa_unreference_framebuffer(struct gl_framebuffer **fb);
@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@a28 4
#include "glheader.h"

struct gl_config;
struct gl_context;
d31 1
a31 1
_mesa_create_framebuffer(const struct gl_config *visual);
d34 1
a34 5
_mesa_new_framebuffer(struct gl_context *ctx, GLuint name);

extern void
_mesa_initialize_window_framebuffer(struct gl_framebuffer *fb,
				     const struct gl_config *visual);
d37 1
a37 1
_mesa_initialize_user_framebuffer(struct gl_framebuffer *fb, GLuint name);
d50 1
a50 3
_mesa_resize_framebuffer(struct gl_context *ctx, struct gl_framebuffer *fb,
                         GLuint width, GLuint height);

d53 2
a54 5
_mesa_resizebuffers( struct gl_context *ctx );

extern void GLAPIENTRY
_mesa_ResizeBuffersMESA( void );

d57 1
a57 1
_mesa_update_draw_buffer_bounds(struct gl_context *ctx);
d63 1
a63 1
_mesa_update_depth_buffer(struct gl_context *ctx, struct gl_framebuffer *fb,
d67 1
a67 1
_mesa_update_stencil_buffer(struct gl_context *ctx, struct gl_framebuffer *fb,
d71 1
a71 1
_mesa_update_framebuffer(struct gl_context *ctx);
d74 1
a74 1
_mesa_source_buffer_exists(struct gl_context *ctx, GLenum format);
d77 1
a77 4
_mesa_dest_buffer_exists(struct gl_context *ctx, GLenum format);

extern GLenum
_mesa_get_color_read_type(struct gl_context *ctx);
a78 5
extern GLenum
_mesa_get_color_read_format(struct gl_context *ctx);

extern void
_mesa_print_framebuffer(const struct gl_framebuffer *fb);
@


1.1.1.4
log
@Import Mesa 9.2.0
@
text
@d3 1
d20 3
a22 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
a32 1
struct gl_renderbuffer;
a53 4
_mesa_reference_framebuffer_(struct gl_framebuffer **ptr,
                             struct gl_framebuffer *fb);

static inline void
d55 1
a55 5
                            struct gl_framebuffer *fb)
{
   if (*ptr != fb)
      _mesa_reference_framebuffer_(ptr, fb);
}
d65 4
d73 9
a81 2
_mesa_update_framebuffer_visual(struct gl_context *ctx,
				struct gl_framebuffer *fb);
a96 4

extern struct gl_renderbuffer *
_mesa_get_read_renderbuffer_for_format(const struct gl_context *ctx,
                                       GLenum format);
@


1.1.1.5
log
@Import Mesa 10.2.3
@
text
@a73 5
extern void
_mesa_scissor_bounding_box(const struct gl_context *ctx,
                           const struct gl_framebuffer *buffer,
                           unsigned idx, int *bbox);

@


