head	1.8;
access;
symbols
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	v10_2_9:1.1.1.4
	v10_4_3:1.1.1.4
	v10_2_7:1.1.1.4
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	v10_2_3:1.1.1.4
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	v9_2_5:1.1.1.3
	v9_2_3:1.1.1.3
	v9_2_2:1.1.1.3
	v9_2_1:1.1.1.3
	v9_2_0:1.1.1.3
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	v7_10_3:1.1.1.2
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.12.23.05.17.52;	author jsg;	state dead;
branches;
next	1.7;
commitid	TnlogFl9nOv2eaRf;

1.7
date	2015.01.31.05.41.14;	author jsg;	state Exp;
branches;
next	1.6;
commitid	MrqvfysMyyM82lGg;

1.6
date	2014.07.09.21.09.00;	author jsg;	state Exp;
branches;
next	1.5;
commitid	WPD6rgPryPkvXOr9;

1.5
date	2013.09.05.14.06.19;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.17.13.58.18;	author mpi;	state Exp;
branches;
next	1.3;

1.3
date	2011.10.23.13.37.42;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.22.20.06.30;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.49.54;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.49.54;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.10.23.13.29.45;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.09.05.13.16.29;	author jsg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.07.09.20.34.59;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.8
log
@remove the now unused Mesa 10.2.9 code
@
text
@/**
 * \file dlist.h
 * Display lists management.
 */

/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2006  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */



#ifndef DLIST_H
#define DLIST_H


#include "main/mtypes.h"


GLboolean GLAPIENTRY
_mesa_IsList(GLuint list);
void GLAPIENTRY
_mesa_DeleteLists(GLuint list, GLsizei range);
GLuint GLAPIENTRY
_mesa_GenLists(GLsizei range);
void GLAPIENTRY
_mesa_NewList(GLuint name, GLenum mode);
void GLAPIENTRY
_mesa_EndList(void);
void GLAPIENTRY
_mesa_CallList( GLuint list );
void GLAPIENTRY
_mesa_CallLists( GLsizei n, GLenum type, const GLvoid *lists );
void GLAPIENTRY
_mesa_ListBase(GLuint base);

extern struct gl_display_list *
_mesa_lookup_list(struct gl_context *ctx, GLuint list);

extern void _mesa_compile_error( struct gl_context *ctx, GLenum error, const char *s );

extern void *_mesa_dlist_alloc(struct gl_context *ctx, GLuint opcode, GLuint sz);

extern void *
_mesa_dlist_alloc_aligned(struct gl_context *ctx, GLuint opcode, GLuint bytes);

extern GLint _mesa_dlist_alloc_opcode( struct gl_context *ctx, GLuint sz,
                                       void (*execute)( struct gl_context *, void * ),
                                       void (*destroy)( struct gl_context *, void * ),
                                       void (*print)( struct gl_context *, void * ) );

extern void _mesa_delete_list(struct gl_context *ctx, struct gl_display_list *dlist);

extern void _mesa_initialize_save_table(const struct gl_context *);

extern void _mesa_install_dlist_vtxfmt(struct _glapi_table *disp,
                                       const GLvertexformat *vfmt);

extern void _mesa_init_display_list( struct gl_context * ctx );

extern void _mesa_free_display_list_data(struct gl_context *ctx);


#endif /* DLIST_H */
@


1.7
log
@Remove the local workaround for alignment faults in the VBO code on
archs with strict 64 bit pointer alignment and use Brian Paul's fix
which has been committed upstream and should end up in future releases
of 10.4.x.
@
text
@@


1.6
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@d63 3
@


1.5
log
@Merge Mesa 9.2.0
@
text
@d56 2
@


1.4
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a7 1
 * Version:  6.5.1
d24 4
a27 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
a35 1
#include "main/mfeatures.h"
d39 16
a54 11
#if FEATURE_dlist

#define _MESA_INIT_DLIST_VTXFMT(vfmt, impl)  \
   do {                                      \
      (vfmt)->CallList  = impl ## CallList;  \
      (vfmt)->CallLists = impl ## CallLists; \
   } while (0)

extern void GLAPIENTRY _mesa_CallList( GLuint list );

extern void GLAPIENTRY _mesa_CallLists( GLsizei n, GLenum type, const GLvoid *lists );
d68 1
a68 3
extern void _mesa_save_vtxfmt_init( GLvertexformat *vfmt );

extern struct _glapi_table *_mesa_create_save_table(void);
a71 28

extern void _mesa_init_dlist_dispatch(struct _glapi_table *disp);

#else /* FEATURE_dlist */

#include "main/compiler.h"

#define _MESA_INIT_DLIST_VTXFMT(vfmt, impl) do { } while (0)

static INLINE void
_mesa_delete_list(struct gl_context *ctx, struct gl_display_list *dlist)
{
   /* there should be no list to delete */
   ASSERT_NO_FEATURE();
}

static INLINE void
_mesa_install_dlist_vtxfmt(struct _glapi_table *disp,
                           const GLvertexformat *vfmt)
{
}

static INLINE void
_mesa_init_dlist_dispatch(struct _glapi_table *disp)
{
}

#endif /* FEATURE_dlist */
@


1.3
log
@Merge Mesa 7.10.3
@
text
@d36 1
@


1.2
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@a40 10
#define _MESA_INIT_DLIST_FUNCTIONS(driver, impl)               \
   do {                                                        \
      (driver)->NewList           = impl ## NewList;           \
      (driver)->EndList           = impl ## EndList;           \
      (driver)->BeginCallList     = impl ## BeginCallList;     \
      (driver)->EndCallList       = impl ## EndCallList;       \
      (driver)->SaveFlushVertices = impl ## SaveFlushVertices; \
      (driver)->NotifySaveBegin   = impl ## NotifyBegin;       \
   } while (0)

d52 1
a52 1
extern void _mesa_compile_error( GLcontext *ctx, GLenum error, const char *s );
d54 1
a54 1
extern void *_mesa_dlist_alloc(GLcontext *ctx, GLuint opcode, GLuint sz);
d56 4
a59 4
extern GLint _mesa_dlist_alloc_opcode( GLcontext *ctx, GLuint sz,
                                       void (*execute)( GLcontext *, void * ),
                                       void (*destroy)( GLcontext *, void * ),
                                       void (*print)( GLcontext *, void * ) );
d61 1
a61 1
extern void _mesa_delete_list(GLcontext *ctx, struct gl_display_list *dlist);
d65 1
a65 1
extern void _mesa_init_save_table( struct _glapi_table *table );
d74 2
a75 1
#define _MESA_INIT_DLIST_FUNCTIONS(driver, impl) do { } while (0)
d79 1
a79 1
_mesa_delete_list(GLcontext *ctx, struct gl_display_list *dlist)
d98 1
a98 1
extern void _mesa_init_display_list( GLcontext * ctx );
d100 1
a100 1
extern void _mesa_free_display_list_data(GLcontext *ctx);
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
#include "mtypes.h"
d39 1
a39 1
#if _HAVE_FULL_GL
d41 15
a55 2
extern void
_mesa_delete_list(GLcontext *ctx, struct mesa_display_list *dlist);
a60 1
extern void GLAPIENTRY _mesa_DeleteLists( GLuint list, GLsizei range );
d62 1
a62 1
extern void GLAPIENTRY _mesa_EndList( void );
d64 1
a64 1
extern GLuint GLAPIENTRY _mesa_GenLists( GLsizei range );
d66 4
a69 1
extern GLboolean GLAPIENTRY _mesa_IsList( GLuint list );
d71 1
a71 1
extern void GLAPIENTRY _mesa_ListBase( GLuint base );
d73 1
a73 1
extern void GLAPIENTRY _mesa_NewList( GLuint list, GLenum mode );
d75 1
a75 1
extern void GLAPIENTRY _mesa_save_CallLists( GLsizei n, GLenum type, const GLvoid *lists );
d77 2
a78 1
extern void GLAPIENTRY _mesa_save_CallList( GLuint list );
d80 1
d82 1
d84 2
a85 1
extern void _mesa_init_dlist_table( struct _glapi_table *table );
d87 6
a92 1
extern void _mesa_compile_error( GLcontext *ctx, GLenum error, const char *s );
d94 5
d100 4
a103 1
extern void *_mesa_alloc_instruction(GLcontext *ctx, GLuint opcode, GLuint sz);
d105 1
a105 4
extern GLint _mesa_alloc_opcode( GLcontext *ctx, GLuint sz,
                                 void (*execute)( GLcontext *, void * ),
                                 void (*destroy)( GLcontext *, void * ),
                                 void (*print)( GLcontext *, void * ) );
d109 1
a109 13
extern void _mesa_save_vtxfmt_init( GLvertexformat *vfmt );


#else

/** No-op */
#define _mesa_init_dlist_table(t,ts) ((void)0)

/** No-op */
#define _mesa_init_display_list(c) ((void)0)

/** No-op */
#define _mesa_save_vtxfmt_init(v) ((void)0)
a110 1
#endif
d112 1
a112 1
#endif
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Import Mesa 7.10.3
@
text
@d36 1
a36 1
#include "main/mtypes.h"
d39 1
a39 1
#if FEATURE_dlist
d41 2
a42 5
#define _MESA_INIT_DLIST_VTXFMT(vfmt, impl)  \
   do {                                      \
      (vfmt)->CallList  = impl ## CallList;  \
      (vfmt)->CallLists = impl ## CallLists; \
   } while (0)
d48 1
d50 1
a50 1
extern void _mesa_compile_error( struct gl_context *ctx, GLenum error, const char *s );
d52 1
a52 1
extern void *_mesa_dlist_alloc(struct gl_context *ctx, GLuint opcode, GLuint sz);
d54 9
a62 4
extern GLint _mesa_dlist_alloc_opcode( struct gl_context *ctx, GLuint sz,
                                       void (*execute)( struct gl_context *, void * ),
                                       void (*destroy)( struct gl_context *, void * ),
                                       void (*print)( struct gl_context *, void * ) );
a63 1
extern void _mesa_delete_list(struct gl_context *ctx, struct gl_display_list *dlist);
a64 1
extern void _mesa_save_vtxfmt_init( GLvertexformat *vfmt );
d66 1
a66 1
extern struct _glapi_table *_mesa_create_save_table(void);
d68 1
a68 2
extern void _mesa_install_dlist_vtxfmt(struct _glapi_table *disp,
                                       const GLvertexformat *vfmt);
a69 1
extern void _mesa_init_dlist_dispatch(struct _glapi_table *disp);
d71 1
a71 1
#else /* FEATURE_dlist */
d73 4
a76 1
#include "main/compiler.h"
d78 1
a78 1
#define _MESA_INIT_DLIST_VTXFMT(vfmt, impl) do { } while (0)
d80 1
a80 6
static INLINE void
_mesa_delete_list(struct gl_context *ctx, struct gl_display_list *dlist)
{
   /* there should be no list to delete */
   ASSERT_NO_FEATURE();
}
a81 5
static INLINE void
_mesa_install_dlist_vtxfmt(struct _glapi_table *disp,
                           const GLvertexformat *vfmt)
{
}
d83 1
a83 4
static INLINE void
_mesa_init_dlist_dispatch(struct _glapi_table *disp)
{
}
d85 2
a86 1
#endif /* FEATURE_dlist */
d88 2
a89 1
extern void _mesa_init_display_list( struct gl_context * ctx );
d91 2
a92 1
extern void _mesa_free_display_list_data(struct gl_context *ctx);
d94 1
d96 1
a96 1
#endif /* DLIST_H */
@


1.1.1.3
log
@Import Mesa 9.2.0
@
text
@d8 1
d25 3
a27 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
d39 11
a49 16
GLboolean GLAPIENTRY
_mesa_IsList(GLuint list);
void GLAPIENTRY
_mesa_DeleteLists(GLuint list, GLsizei range);
GLuint GLAPIENTRY
_mesa_GenLists(GLsizei range);
void GLAPIENTRY
_mesa_NewList(GLuint name, GLenum mode);
void GLAPIENTRY
_mesa_EndList(void);
void GLAPIENTRY
_mesa_CallList( GLuint list );
void GLAPIENTRY
_mesa_CallLists( GLsizei n, GLenum type, const GLvoid *lists );
void GLAPIENTRY
_mesa_ListBase(GLuint base);
d63 3
a65 1
extern void _mesa_initialize_save_table(const struct gl_context *);
d69 28
@


1.1.1.4
log
@Import Mesa 10.2.3
@
text
@a55 2
extern struct gl_display_list *
_mesa_lookup_list(struct gl_context *ctx, GLuint list);
@


