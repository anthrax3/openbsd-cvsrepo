head	1.3;
access;
symbols
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2010.05.22.20.06.32;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.42;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.51.04;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.51.04;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@#include "grammar_crt.h"

#define GRAMMAR_PORT_BUILD 1
#include "grammar.c"
#undef GRAMMAR_PORT_BUILD


void grammar_alloc_free (void *ptr)
{
    free (ptr);
}

void *grammar_alloc_malloc (size_t size)
{
    return malloc (size);
}

void *grammar_alloc_realloc (void *ptr, size_t old_size, size_t size)
{
    return realloc (ptr, size);
}

void *grammar_memory_copy (void *dst, const void * src, size_t size)
{
    return memcpy (dst, src, size);
}

int grammar_string_compare (const byte *str1, const byte *str2)
{
    return strcmp ((const char *) str1, (const char *) str2);
}

int grammar_string_compare_n (const byte *str1, const byte *str2, size_t n)
{
    return strncmp ((const char *) str1, (const char *) str2, n);
}

byte *grammar_string_copy (byte *dst, const byte *src)
{
    return (byte *) strcpy ((char *) dst, (const char *) src);
}

byte *grammar_string_copy_n (byte *dst, const byte *src, size_t n)
{
    return (byte *) strncpy ((char *) dst, (const char *) src, n);
}

unsigned int grammar_string_length (const byte *str)
{
    return strlen ((const char *) str);
}

byte *grammar_string_duplicate (const byte *src)
{
    const unsigned int size = grammar_string_length (src);
    byte *str = grammar_alloc_malloc (size + 1);
    if (str != NULL)
    {
        grammar_memory_copy (str, src, size);
        str[size] = '\0';
    }
    return str;
}

@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
void *grammar_alloc_malloc (unsigned int size)
d18 1
a18 1
void *grammar_alloc_realloc (void *ptr, unsigned int old_size, unsigned int size)
d23 1
a23 1
void *grammar_memory_copy (void *dst, const void * src, unsigned int size)
d33 1
a33 1
int grammar_string_compare_n (const byte *str1, const byte *str2, unsigned int n)
d43 1
a43 1
byte *grammar_string_copy_n (byte *dst, const byte *src, unsigned int n)
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@
