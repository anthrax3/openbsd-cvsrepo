head	1.3;
access;
symbols
	OPENBSD_5_0:1.2.0.12
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v7_0_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2011.10.23.13.37.45;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2008.11.02.14.58.22;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.24.17.31.49;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.11.24.17.31.49;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Merge Mesa 7.10.3
@
text
@#ifndef SLANG_LABEL_H
#define SLANG_LABEL_H 1

#include "main/imports.h"
#include "main/mtypes.h"
#include "shader/prog_instruction.h"


struct slang_label_
{
   char *Name;
   GLint Location;
   /**
    * List of instruction references (numbered starting at zero) which need
    * their BranchTarget field filled in with the location eventually
    * assigned to the label.
    */
   GLuint NumReferences;
   GLuint *References;   /** Array [NumReferences] */
};

typedef struct slang_label_ slang_label;


extern slang_label *
_slang_label_new(const char *name);

extern slang_label *
_slang_label_new_unique(const char *name);

extern void
_slang_label_delete(slang_label *l);

extern void
_slang_label_add_reference(slang_label *l, GLuint inst);

extern GLint
_slang_label_get_location(const slang_label *l);

extern void
_slang_label_set_location(slang_label *l, GLint location,
                          struct gl_program *prog);


#endif /* SLANG_LABEL_H */
@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@@


1.1
log
@Initial revision
@
text
@d4 3
a6 3
#include "imports.h"
#include "mtypes.h"
#include "prog_instruction.h"
@


1.1.1.1
log
@Mesa 7.0.1
@
text
@@
