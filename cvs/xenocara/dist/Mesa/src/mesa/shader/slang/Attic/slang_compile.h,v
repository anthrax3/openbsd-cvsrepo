head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.10
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.8
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2011.10.23.13.37.45;	author matthieu;	state dead;
branches;
next	1.3;

1.3
date	2009.05.17.20.26.42;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.14.58.22;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.51.08;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.51.08;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.31.47;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge Mesa 7.10.3
@
text
@/*
 * Mesa 3-D graphics library
 * Version:  6.5
 *
 * Copyright (C) 2005-2006  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

#if !defined SLANG_COMPILE_H
#define SLANG_COMPILE_H

#include "main/imports.h"
#include "main/mtypes.h"
#include "slang_typeinfo.h"
#include "slang_compile_variable.h"
#include "slang_compile_struct.h"
#include "slang_compile_operation.h"
#include "slang_compile_function.h"

#if defined __cplusplus
extern "C" {
#endif

typedef struct slang_name_space_
{
   struct slang_function_scope_ *funcs;
   struct slang_struct_scope_ *structs;
   struct slang_variable_scope_ *vars;
} slang_name_space;

typedef enum slang_unit_type_
{
   SLANG_UNIT_FRAGMENT_SHADER,
   SLANG_UNIT_VERTEX_SHADER,
   SLANG_UNIT_FRAGMENT_BUILTIN,
   SLANG_UNIT_VERTEX_BUILTIN
} slang_unit_type;


typedef struct slang_code_unit_
{
   slang_variable_scope vars;
   slang_function_scope funs;
   slang_struct_scope structs;
   slang_unit_type type;
   struct slang_code_object_ *object;
} slang_code_unit;


extern GLvoid
_slang_code_unit_ctr (slang_code_unit *, struct slang_code_object_ *);

extern GLvoid
_slang_code_unit_dtr (slang_code_unit *);

#define SLANG_BUILTIN_CORE   0
#define SLANG_BUILTIN_120_CORE   1
#define SLANG_BUILTIN_COMMON 2
#define SLANG_BUILTIN_TARGET 3

#define SLANG_BUILTIN_TOTAL  4

typedef struct slang_code_object_
{
   slang_code_unit builtin[SLANG_BUILTIN_TOTAL];
   slang_code_unit unit;
   slang_atom_pool atompool;
} slang_code_object;

extern GLvoid
_slang_code_object_ctr (slang_code_object *);

extern GLvoid
_slang_code_object_dtr (slang_code_object *);

extern GLboolean
_slang_compile (GLcontext *ctx, struct gl_shader *shader);

#ifdef __cplusplus
}
#endif

#endif

@


1.3
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d40 7
a55 6
typedef struct slang_var_pool_
{
   GLuint next_addr;
} slang_var_pool;


a82 1
   slang_var_pool varpool;
@


1.1
log
@Initial revision
@
text
@d28 3
a30 2
#include "slang_export.h"
#include "slang_execute.h"
d42 4
a45 4
	slang_unit_fragment_shader,
	slang_unit_vertex_shader,
	slang_unit_fragment_builtin,
	slang_unit_vertex_builtin
d48 1
d51 1
a51 1
	GLuint next_addr;
d54 1
d64 1
d72 3
a74 2
#define SLANG_BUILTIN_COMMON 1
#define SLANG_BUILTIN_TARGET 2
a75 2
#if defined(USE_X86_ASM) || defined(SLANG_X86)
#define SLANG_BUILTIN_VEC4   3
a76 3
#else
#define SLANG_BUILTIN_TOTAL  3
#endif
a81 2
   slang_assembly_file assembly;
   slang_machine machine;
a83 2
   slang_export_data_table expdata;
   slang_export_code_table expcode;
a91 13
typedef struct slang_info_log_
{
	char *text;
	int dont_free_text;
} slang_info_log;

void slang_info_log_construct (slang_info_log *);
void slang_info_log_destruct (slang_info_log *);
int slang_info_log_print (slang_info_log *, const char *, ...);
int slang_info_log_error (slang_info_log *, const char *, ...);
int slang_info_log_warning (slang_info_log *, const char *, ...);
void slang_info_log_memory (slang_info_log *);

d93 1
a93 1
_slang_compile (const char *, slang_code_object *, slang_unit_type, slang_info_log *);
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Mesa 7.0.1
@
text
@d28 2
a29 3
#include "imports.h"
#include "mtypes.h"
#include "slang_typeinfo.h"
d41 4
a44 4
   SLANG_UNIT_FRAGMENT_SHADER,
   SLANG_UNIT_VERTEX_SHADER,
   SLANG_UNIT_FRAGMENT_BUILTIN,
   SLANG_UNIT_VERTEX_BUILTIN
a46 1

d49 1
a49 1
   GLuint next_addr;
a51 1

a60 1

d68 2
a69 3
#define SLANG_BUILTIN_120_CORE   1
#define SLANG_BUILTIN_COMMON 2
#define SLANG_BUILTIN_TARGET 3
d71 2
d74 3
d82 2
d86 2
d96 13
d110 1
a110 1
_slang_compile (GLcontext *ctx, struct gl_shader *shader);
@

