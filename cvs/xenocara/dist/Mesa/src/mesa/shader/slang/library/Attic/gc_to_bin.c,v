head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.1.3.0.10
	OPENBSD_4_7_BASE:1.1.1.3
	OPENBSD_4_6:1.1.1.3.0.8
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.6
	OPENBSD_4_5_BASE:1.1.1.3
	OPENBSD_4_4:1.1.1.3.0.4
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.2
	v7_0_1:1.1.1.3
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v6_5_2:1.1.1.2
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2010.05.22.20.06.33;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2006.11.25.18.51.11;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.51.11;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.11.56.48;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2007.11.24.17.31.52;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@#include "../../grammar/grammar_crt.h"
#include "../../grammar/grammar_crt.c"
#include <stdio.h>

static const char *slang_shader_syn =
#include "slang_shader_syn.h"
;

static void gc_to_bin (grammar id, const char *in, const char *out)
{
	FILE *f;
	byte *source, *prod;
	unsigned int size, i, line = 0;

	printf ("Precompiling %s\n", in);

	f = fopen (in, "r");
	if (f == NULL)
		return;
	fseek (f, 0, SEEK_END);
	size = ftell (f);
	fseek (f, 0, SEEK_SET);
	source = (byte *) grammar_alloc_malloc (size + 1);
	source[fread (source, 1, size, f)] = '\0';
	fclose (f);

	if (!grammar_fast_check (id, source, &prod, &size, 65536))
	{
		grammar_alloc_free (source);
		return;
	}

	f = fopen (out, "w");
	fprintf (f, "\n");
	fprintf (f, "/* DO NOT EDIT - THIS FILE IS AUTOMATICALLY GENERATED FROM THE FOLLOWING FILE: */\n");
	fprintf (f, "/* %s */\n", in);
	fprintf (f, "\n");
	for (i = 0; i < size; i++)
	{
		unsigned int a;
		if (prod[i] < 10)
			a = 1;
		else if (prod[i] < 100)
			a = 2;
		else
			a = 3;
		if (i < size - 1)
			a++;
		if (line + a >= 100)
		{
			fprintf (f, "\n");
			line = 0;
		}
		line += a;
		fprintf (f, "%d", prod[i]);
		if (i < size - 1)
			fprintf (f, ",");
	}
	fprintf (f, "\n");
	fclose (f);
	grammar_alloc_free (prod);
}

int main ()
{
	grammar id;

	id = grammar_load_from_text ((const byte *) slang_shader_syn);
	if (id == 0)
		return 1;

	grammar_set_reg8 (id, (const byte *) "parsing_builtin", 1);

	grammar_set_reg8 (id, (const byte *) "shader_type", 1);
	gc_to_bin (id, "slang_core.gc", "slang_core_gc.h");
	gc_to_bin (id, "slang_common_builtin.gc", "slang_common_builtin_gc.h");
	gc_to_bin (id, "slang_fragment_builtin.gc", "slang_fragment_builtin_gc.h");
   gc_to_bin (id, "slang_builtin_vec4.gc", "slang_builtin_vec4_gc.h");

	grammar_set_reg8 (id, (const byte *) "shader_type", 2);
	gc_to_bin (id, "slang_vertex_builtin.gc", "slang_vertex_builtin_gc.h");

	grammar_destroy (id);

	return 0;
}

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@import MesaLibs version 6.5.2
@
text
@a2 1
#include <stdlib.h>
d9 1
a9 1
static int gc_to_bin (grammar id, const char *in, const char *out)
d19 1
a19 1
		return 1;
d30 1
a30 1
		return 1;
a61 1
   return 0;
d64 1
a64 1
int main (int argc, char *argv[])
d66 18
a83 1
   grammar id;
d85 1
a85 11
   id = grammar_load_from_text ((const byte *) slang_shader_syn);
   if (id == 0)
      return 1;
   grammar_set_reg8 (id, (const byte *) "parsing_builtin", 1);
   grammar_set_reg8 (id, (const byte *) "shader_type", atoi (argv[1]));
   if (gc_to_bin (id, argv[2], argv[3])) {
      grammar_destroy (id);
      return 1;
   }
   grammar_destroy (id);
   return 0;
@


1.1.1.3
log
@Mesa 7.0.1
@
text
@d71 1
a71 2
   if (id == 0) {
      fprintf(stderr, "Error loading grammar from text\n");
a72 1
   }
a75 1
      fprintf(stderr, "Error in gc_to_bin %s %s\n", argv[2], argv[3]);
@


