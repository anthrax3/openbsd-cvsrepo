head	1.10;
access;
symbols
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	v10_2_9:1.1.1.5
	v10_4_3:1.1.1.5
	v10_2_7:1.1.1.5
	OPENBSD_5_6:1.9.0.2
	OPENBSD_5_6_BASE:1.9
	v10_2_3:1.1.1.5
	OPENBSD_5_5:1.8.0.2
	OPENBSD_5_5_BASE:1.8
	v9_2_5:1.1.1.4
	v9_2_3:1.1.1.4
	v9_2_2:1.1.1.4
	v9_2_1:1.1.1.4
	v9_2_0:1.1.1.4
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	v7_10_3:1.1.1.3
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v7_0_1:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.12.23.05.17.55;	author jsg;	state dead;
branches;
next	1.9;
commitid	TnlogFl9nOv2eaRf;

1.9
date	2014.07.09.21.09.01;	author jsg;	state Exp;
branches;
next	1.8;
commitid	WPD6rgPryPkvXOr9;

1.8
date	2013.09.05.14.06.55;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2012.08.17.13.58.20;	author mpi;	state Exp;
branches;
next	1.6;

1.6
date	2011.10.23.13.37.46;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.22.20.06.36;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.17.20.26.42;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.02.14.58.23;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.31.16.36.49;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.51.29;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.51.29;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.32.21;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.10.23.13.29.49;	author matthieu;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2013.09.05.13.17.42;	author jsg;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2014.07.09.20.35.13;	author jsg;	state Exp;
branches;
next	;
commitid	3JhLfwcuBALP0ZR7;


desc
@@


1.10
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2007  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * Authors:
 *    Keith Whitwell <keithw@@vmware.com>
 */

#ifndef _TNL_H
#define _TNL_H

#include "main/glheader.h"

struct gl_client_array;
struct gl_context;
struct gl_program;


/* These are the public-access functions exported from tnl.  (A few
 * more are currently hooked into dispatch directly by the module
 * itself.)
 */
extern GLboolean
_tnl_CreateContext( struct gl_context *ctx );

extern void
_tnl_DestroyContext( struct gl_context *ctx );

extern void
_tnl_InvalidateState( struct gl_context *ctx, GLuint new_state );

/* Functions to revive the tnl module after being unhooked from
 * dispatch and/or driver callbacks.
 */

extern void
_tnl_wakeup( struct gl_context *ctx );

/* Driver configuration options:
 */
extern void
_tnl_need_projected_coords( struct gl_context *ctx, GLboolean flag );


/* Control whether T&L does per-vertex fog
 */
extern void
_tnl_allow_vertex_fog( struct gl_context *ctx, GLboolean value );

extern void
_tnl_allow_pixel_fog( struct gl_context *ctx, GLboolean value );

extern GLboolean
_tnl_program_string(struct gl_context *ctx, GLenum target, struct gl_program *program);

struct _mesa_prim;
struct _mesa_index_buffer;

void
_tnl_draw_prims( struct gl_context *ctx,
		     const struct _mesa_prim *prim,
		     GLuint nr_prims,
		     const struct _mesa_index_buffer *ib,
		     GLboolean index_bounds_valid,
		     GLuint min_index,
		     GLuint max_index,
		     struct gl_transform_feedback_object *tfb_vertcount,
		     struct gl_buffer_object *indirect );

extern void
_tnl_RasterPos(struct gl_context *ctx, const GLfloat vObj[4]);

extern void
_tnl_validate_shine_tables( struct gl_context *ctx );

#endif
@


1.9
log
@Merge Mesa 10.2.3
tested by matthieu@@ kettenis@@ mpi@@ brett@@ and myself across a
diverse range of hardware
@
text
@@


1.8
log
@Merge Mesa 9.2.0
@
text
@d25 1
a25 1
 *    Keith Whitwell <keith@@tungstengraphics.com>
a79 9
		 const struct gl_client_array *arrays[],
		 const struct _mesa_prim *prim,
		 GLuint nr_prims,
		 const struct _mesa_index_buffer *ib,
		 GLuint min_index,
		 GLuint max_index);

void
_tnl_vbo_draw_prims( struct gl_context *ctx,
d86 2
a87 1
		     struct gl_transform_feedback_object *tfb_vertcount );
@


1.7
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@a2 1
 * Version:  7.1
d19 4
a22 3
 * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
a88 1
		     const struct gl_client_array *arrays[],
d94 2
a95 1
		     GLuint max_index);
d98 1
a98 1
_mesa_load_tracked_matrices(struct gl_context *ctx);
d101 1
a101 1
_tnl_RasterPos(struct gl_context *ctx, const GLfloat vObj[4]);
@


1.6
log
@Merge Mesa 7.10.3
@
text
@d31 1
a31 1
#include "main/mtypes.h"
d33 3
@


1.5
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d40 1
a40 1
_tnl_CreateContext( GLcontext *ctx );
d43 1
a43 1
_tnl_DestroyContext( GLcontext *ctx );
d46 1
a46 1
_tnl_InvalidateState( GLcontext *ctx, GLuint new_state );
d53 1
a53 1
_tnl_wakeup( GLcontext *ctx );
d58 1
a58 1
_tnl_need_projected_coords( GLcontext *ctx, GLboolean flag );
d64 1
a64 1
_tnl_allow_vertex_fog( GLcontext *ctx, GLboolean value );
d67 1
a67 1
_tnl_allow_pixel_fog( GLcontext *ctx, GLboolean value );
d70 1
a70 1
_tnl_program_string(GLcontext *ctx, GLenum target, struct gl_program *program);
d76 1
a76 1
_tnl_draw_prims( GLcontext *ctx,
d85 1
a85 1
_tnl_vbo_draw_prims( GLcontext *ctx,
d95 1
a95 1
_mesa_load_tracked_matrices(GLcontext *ctx);
d98 1
a98 1
_tnl_RasterPos(GLcontext *ctx, const GLfloat vObj[4]);
@


1.4
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d69 1
a69 1
extern void
d84 12
@


1.3
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d84 4
@


1.2
log
@Update to Mesa 7.0.3. tested my oga@@ and johan@@
@
text
@d31 1
a31 1
#include "mtypes.h"
@


1.1
log
@Initial revision
@
text
@a0 1

d3 1
a3 1
 * Version:  3.5
d5 1
a5 1
 * Copyright (C) 1999-2001  Brian Paul   All Rights Reserved.
a51 2
/* Restore just the ctx->Exec table:
 */
d53 1
a53 6
_tnl_wakeup_exec( GLcontext *ctx );

/* Restore both ctx->Exec and ctx->Save:
 */
extern void
_tnl_wakeup_save_exec( GLcontext *ctx );
a59 9
extern void
_tnl_need_dlist_loopback( GLcontext *ctx, GLboolean flag );

extern void
_tnl_need_dlist_norm_lengths( GLcontext *ctx, GLboolean flag );

extern void
_tnl_isolate_materials( GLcontext *ctx, GLboolean flag );

d71 12
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Mesa 7.0.1
@
text
@d53 7
d61 1
a61 1
_tnl_wakeup( GLcontext *ctx );
d68 9
a87 15

struct _mesa_prim;
struct _mesa_index_buffer;

void
_tnl_draw_prims( GLcontext *ctx,
		 const struct gl_client_array *arrays[],
		 const struct _mesa_prim *prim,
		 GLuint nr_prims,
		 const struct _mesa_index_buffer *ib,
		 GLuint min_index,
		 GLuint max_index);

extern void
_mesa_load_tracked_matrices(GLcontext *ctx);
@


1.1.1.3
log
@Import Mesa 7.10.3
@
text
@d1 1
d4 1
a4 1
 * Version:  7.1
d6 1
a6 1
 * Copyright (C) 1999-2007  Brian Paul   All Rights Reserved.
d32 1
a32 1
#include "main/mtypes.h"
d41 1
a41 1
_tnl_CreateContext( struct gl_context *ctx );
d44 1
a44 1
_tnl_DestroyContext( struct gl_context *ctx );
d47 1
a47 1
_tnl_InvalidateState( struct gl_context *ctx, GLuint new_state );
d54 1
a54 1
_tnl_wakeup( struct gl_context *ctx );
d59 1
a59 1
_tnl_need_projected_coords( struct gl_context *ctx, GLboolean flag );
d65 1
a65 1
_tnl_allow_vertex_fog( struct gl_context *ctx, GLboolean value );
d68 1
a68 1
_tnl_allow_pixel_fog( struct gl_context *ctx, GLboolean value );
d70 2
a71 2
extern GLboolean
_tnl_program_string(struct gl_context *ctx, GLenum target, struct gl_program *program);
d77 1
a77 1
_tnl_draw_prims( struct gl_context *ctx,
a84 13
void
_tnl_vbo_draw_prims( struct gl_context *ctx,
		     const struct gl_client_array *arrays[],
		     const struct _mesa_prim *prim,
		     GLuint nr_prims,
		     const struct _mesa_index_buffer *ib,
		     GLboolean index_bounds_valid,
		     GLuint min_index,
		     GLuint max_index);

extern void
_mesa_load_tracked_matrices(struct gl_context *ctx);

d86 1
a86 1
_tnl_RasterPos(struct gl_context *ctx, const GLfloat vObj[4]);
@


1.1.1.4
log
@Import Mesa 9.2.0
@
text
@d3 1
d20 3
a22 4
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
d31 1
a31 1
#include "main/glheader.h"
a32 3
struct gl_client_array;
struct gl_context;
struct gl_program;
d86 1
d92 1
a92 2
		     GLuint max_index,
		     struct gl_transform_feedback_object *tfb_vertcount );
d95 1
a95 1
_tnl_RasterPos(struct gl_context *ctx, const GLfloat vObj[4]);
d98 1
a98 1
_tnl_validate_shine_tables( struct gl_context *ctx );
@


1.1.1.5
log
@Import Mesa 10.2.3
@
text
@d25 1
a25 1
 *    Keith Whitwell <keithw@@vmware.com>
d80 9
d95 1
a95 2
		     struct gl_transform_feedback_object *tfb_vertcount,
		     struct gl_buffer_object *indirect );
@


