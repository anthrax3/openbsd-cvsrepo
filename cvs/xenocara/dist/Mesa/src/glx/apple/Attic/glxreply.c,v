head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	v10_2_9:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.12.23.05.17.46;	author jsg;	state dead;
branches;
next	1.5;
commitid	TnlogFl9nOv2eaRf;

1.5
date	2015.02.20.23.09.57;	author jsg;	state Exp;
branches;
next	1.4;
commitid	4ry2gvZGMXkCUD2n;

1.4
date	2015.01.25.14.41.20;	author jsg;	state dead;
branches;
next	1.3;
commitid	mcxB0JvoI9gTDYXU;

1.3
date	2013.09.05.14.03.47;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.38;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.14;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.34;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.14.45;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * (C) Copyright Apple Inc. 2008
 * (C) Copyright IBM Corporation 2004, 2005
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
 * IBM,
 * AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#include <GL/gl.h>
#include "glxclient.h"
#include <GL/glxproto.h>

CARD32
__glXReadReply(Display * dpy, size_t size, void *dest,
               GLboolean reply_is_always_array)
{
   xGLXSingleReply reply;

   (void) _XReply(dpy, (xReply *) & reply, 0, False);
   if (size != 0) {
      if ((reply.length > 0) || reply_is_always_array) {
         const GLint bytes = (reply_is_always_array)
            ? (4 * reply.length) : (reply.size * size);
         const GLint extra = 4 - (bytes & 3);

         _XRead(dpy, dest, bytes);
         if (extra < 4) {
            _XEatData(dpy, extra);
         }
      }
      else {
         (void) memcpy(dest, &(reply.pad3), size);
      }
   }

   return reply.retval;
}

void
__glXReadPixelReply(Display * dpy, struct glx_context * gc, unsigned max_dim,
                    GLint width, GLint height, GLint depth, GLenum format,
                    GLenum type, void *dest, GLboolean dimensions_in_reply)
{
   xGLXSingleReply reply;
   GLint size;

   (void) _XReply(dpy, (xReply *) & reply, 0, False);

   if (dimensions_in_reply) {
      width = reply.pad3;
      height = reply.pad4;
      depth = reply.pad5;

      if ((height == 0) || (max_dim < 2)) {
         height = 1;
      }
      if ((depth == 0) || (max_dim < 3)) {
         depth = 1;
      }
   }

   size = reply.length * 4;
   if (size != 0) {
      void *buf = malloc(size);

      if (buf == NULL) {
         _XEatData(dpy, size);
         __glXSetError(gc, GL_OUT_OF_MEMORY);
      }
      else {
         const GLint extra = 4 - (size & 3);

         _XRead(dpy, buf, size);
         if (extra < 4) {
            _XEatData(dpy, extra);
         }

         __glEmptyImage(gc, 3, width, height, depth, format, type, buf, dest);
         free(buf);
      }
   }
}

#if 0
GLubyte *
__glXSetupSingleRequest(struct glx_context * gc, GLint sop, GLint cmdlen)
{
   xGLXSingleReq *req;
   Display *const dpy = gc->currentDpy;

   (void) __glXFlushRenderBuffer(gc, gc->pc);
   LockDisplay(dpy);
   GetReqExtra(GLXSingle, cmdlen, req);
   req->reqType = gc->majorOpcode;
   req->contextTag = gc->currentContextTag;
   req->glxCode = sop;
   return (GLubyte *) (req) + sz_xGLXSingleReq;
}
#endif

GLubyte *
__glXSetupVendorRequest(struct glx_context * gc, GLint code, GLint vop,
                        GLint cmdlen)
{
   xGLXVendorPrivateReq *req;
   Display *const dpy = gc->currentDpy;

   (void) __glXFlushRenderBuffer(gc, gc->pc);
   LockDisplay(dpy);
   GetReqExtra(GLXVendorPrivate, cmdlen, req);
   req->reqType = gc->majorOpcode;
   req->glxCode = code;
   req->vendorCode = vop;
   req->contextTag = gc->currentContextTag;
   return (GLubyte *) (req) + sz_xGLXVendorPrivateReq;
}
@


1.5
log
@Merge Mesa 10.2.9
@
text
@@


1.4
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@@


1.3
log
@Merge Mesa 9.2.0
@
text
@@


1.2
log
@Merge Mesa 7.10.3
@
text
@d82 1
a82 1
      void *buf = Xmalloc(size);
d97 1
a97 1
         Xfree(buf);
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d58 1
a58 1
__glXReadPixelReply(Display * dpy, __GLXcontext * gc, unsigned max_dim,
d104 1
a104 1
__glXSetupSingleRequest(__GLXcontext * gc, GLint sop, GLint cmdlen)
d120 1
a120 1
__glXSetupVendorRequest(__GLXcontext * gc, GLint code, GLint vop,
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d58 1
a58 1
__glXReadPixelReply(Display * dpy, struct glx_context * gc, unsigned max_dim,
d104 1
a104 1
__glXSetupSingleRequest(struct glx_context * gc, GLint sop, GLint cmdlen)
d120 1
a120 1
__glXSetupVendorRequest(struct glx_context * gc, GLint code, GLint vop,
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d82 1
a82 1
      void *buf = malloc(size);
d97 1
a97 1
         free(buf);
@


