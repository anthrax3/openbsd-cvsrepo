head	1.7;
access;
symbols
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	v10_2_9:1.1.1.4
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.12.23.05.17.46;	author jsg;	state dead;
branches;
next	1.6;
commitid	TnlogFl9nOv2eaRf;

1.6
date	2015.02.20.23.09.57;	author jsg;	state Exp;
branches;
next	1.5;
commitid	4ry2gvZGMXkCUD2n;

1.5
date	2015.01.25.14.41.20;	author jsg;	state Exp;
branches;
next	1.4;
commitid	mcxB0JvoI9gTDYXU;

1.4
date	2013.09.05.14.03.46;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.17.13.58.13;	author mpi;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.23.13.37.38;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.14;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.34;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.14.44;	author jsg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2015.01.25.14.10.44;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	ce2W5rH5aF7VS9gi;

1.1.1.4
date	2015.02.20.22.47.52;	author jsg;	state Exp;
branches;
next	;
commitid	F54a1i0WXHMxq7kE;


desc
@@


1.7
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 Copyright (c) 2009-2011 Apple Inc.
 
 Permission is hereby granted, free of charge, to any person
 obtaining a copy of this software and associated documentation files
 (the "Software"), to deal in the Software without restriction,
 including without limitation the rights to use, copy, modify, merge,
 publish, distribute, sublicense, and/or sell copies of the Software,
 and to permit persons to whom the Software is furnished to do so,
 subject to the following conditions:
 
 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.
 
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 NONINFRINGEMENT.  IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT
 HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 DEALINGS IN THE SOFTWARE.
 
 Except as contained in this notice, the name(s) of the above
 copyright holders shall not be used in advertising or otherwise to
 promote the sale, use or other dealings in this Software without
 prior written authorization.
*/

/* This should be removed once stereo hardware bugs are fixed
 * <rdar://problem/6729006>
 */

#include <stdbool.h>

#define GL_GLEXT_PROTOTYPES
#include <GL/gl.h>
#include <GL/glext.h>

#include "glxclient.h"
#include "apple_glx_context.h"
#include "apple_xgl_api.h"
#include "glapitable.h"

extern struct _glapi_table * __ogl_framework_api;

/* 
 * These are special functions for stereoscopic support 
 * differences in MacOS X.
 */
void
__applegl_glDrawBuffer(GLenum mode)
{
   struct glx_context * gc = __glXGetCurrentContext();

   if (gc && apple_glx_context_uses_stereo(gc->driContext)) {
      GLenum buf[2];
      GLsizei n = 0;

      switch (mode) {
      case GL_BACK:
         buf[0] = GL_BACK_LEFT;
         buf[1] = GL_BACK_RIGHT;
         n = 2;
         break;
      case GL_FRONT:
         buf[0] = GL_FRONT_LEFT;
         buf[1] = GL_FRONT_RIGHT;
         n = 2;
         break;

      default:
         buf[0] = mode;
         n = 1;
         break;
      }

      __ogl_framework_api->DrawBuffersARB(n, buf);
   }
   else {
      __ogl_framework_api->DrawBuffer(mode);
   }
}


void
__applegl_glDrawBuffers(GLsizei n, const GLenum * bufs)
{
   struct glx_context * gc = __glXGetCurrentContext();

   if (gc && apple_glx_context_uses_stereo(gc->driContext)) {
      GLenum newbuf[n + 2];
      GLsizei i, outi = 0;
      bool have_back = false;
      bool have_front = false;

      for (i = 0; i < n; ++i) {
         if (GL_BACK == bufs[i]) {
            have_back = true;
         }
         else if (GL_FRONT == bufs[i]) {
            have_back = true;
         }
         else {
            newbuf[outi++] = bufs[i];
         }
      }

      if (have_back) {
         newbuf[outi++] = GL_BACK_LEFT;
         newbuf[outi++] = GL_BACK_RIGHT;
      }

      if (have_front) {
         newbuf[outi++] = GL_FRONT_LEFT;
         newbuf[outi++] = GL_FRONT_RIGHT;
      }

      __ogl_framework_api->DrawBuffersARB(outi, newbuf);
   }
   else {
      __ogl_framework_api->DrawBuffersARB(n, bufs);
   }
}
@


1.6
log
@Merge Mesa 10.2.9
@
text
@@


1.5
log
@Merge Mesa 10.4.3
Tested by matthieu@@ mpi@@ and myself.  landry@@ ran a ports bulk build.
kettenis@@ tracked down the cause of an alignment fault on archs
that require strict eight byte pointer alignment.
@
text
@a42 1
#include "main/glheader.h"
d78 1
a78 1
      __ogl_framework_api->DrawBuffers(n, buf);
d119 1
a119 1
      __ogl_framework_api->DrawBuffers(outi, newbuf);
d122 1
a122 1
      __ogl_framework_api->DrawBuffers(n, bufs);
@


1.4
log
@Merge Mesa 9.2.0
@
text
@d43 1
d79 1
a79 1
      __ogl_framework_api->DrawBuffersARB(n, buf);
d120 1
a120 1
      __ogl_framework_api->DrawBuffersARB(outi, newbuf);
d123 1
a123 1
      __ogl_framework_api->DrawBuffersARB(n, bufs);
@


1.3
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d87 1
a87 1
__applegl_glDrawBuffersARB(GLsizei n, const GLenum * bufs)
@


1.2
log
@Merge Mesa 7.10.3
@
text
@d2 1
a2 1
 Copyright (c) 2009 Apple Inc.
d43 3
a46 1
extern struct apple_xgl_api __gl_api;
d52 1
a52 1
glDrawBuffer(GLenum mode)
d78 1
a78 1
      __gl_api.DrawBuffers(n, buf);
d81 1
a81 1
      __gl_api.DrawBuffer(mode);
d87 1
a87 1
glDrawBuffers(GLsizei n, const GLenum * bufs)
d119 1
a119 1
      __gl_api.DrawBuffers(outi, newbuf);
d122 1
a122 1
      __gl_api.DrawBuffers(n, bufs);
a123 6
}

void
glDrawBuffersARB(GLsizei n, const GLenum * bufs)
{
   glDrawBuffers(n, bufs);
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d52 1
a52 1
   GLXContext gc = glXGetCurrentContext();
d87 1
a87 1
   GLXContext gc = glXGetCurrentContext();
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@d52 1
a52 1
   struct glx_context * gc = __glXGetCurrentContext();
d87 1
a87 1
   struct glx_context * gc = __glXGetCurrentContext();
@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d2 1
a2 1
 Copyright (c) 2009-2011 Apple Inc.
a42 3
#include "glapitable.h"

extern struct _glapi_table * __ogl_framework_api;
d44 1
d50 1
a50 1
__applegl_glDrawBuffer(GLenum mode)
d76 1
a76 1
      __ogl_framework_api->DrawBuffersARB(n, buf);
d79 1
a79 1
      __ogl_framework_api->DrawBuffer(mode);
d85 1
a85 1
__applegl_glDrawBuffers(GLsizei n, const GLenum * bufs)
d117 1
a117 1
      __ogl_framework_api->DrawBuffersARB(outi, newbuf);
d120 1
a120 1
      __ogl_framework_api->DrawBuffersARB(n, bufs);
d122 6
@


1.1.1.3
log
@Import Mesa 10.4.3
@
text
@a42 1
#include "main/glheader.h"
d78 1
a78 1
      __ogl_framework_api->DrawBuffers(n, buf);
d119 1
a119 1
      __ogl_framework_api->DrawBuffers(outi, newbuf);
d122 1
a122 1
      __ogl_framework_api->DrawBuffers(n, bufs);
@


1.1.1.4
log
@Import Mesa 10.2.9
@
text
@d43 1
d79 1
a79 1
      __ogl_framework_api->DrawBuffersARB(n, buf);
d120 1
a120 1
      __ogl_framework_api->DrawBuffersARB(outi, newbuf);
d123 1
a123 1
      __ogl_framework_api->DrawBuffersARB(n, bufs);
@


