head	1.3;
access;
symbols
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2010.05.22.20.06.15;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.38;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.54.43;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.54.43;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@/*
 * (C) Copyright IBM Corporation 2004, 2005
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
 * IBM,
 * AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#ifndef INDIRECT_VERTEX_ARRAY_H
#define INDIRECT_VERTEX_ARRAY_H

extern const GLuint __glXTypeSize_table[16];

#define __glXTypeSize(e) ((((e) & ~0x0f) != 0x1400) \
    ? 0 : __glXTypeSize_table[ (e) & 0x0f ])

extern void __glXArrayDisableAll(__GLXattribute * state);

extern GLboolean __glXSetArrayEnable(__GLXattribute * state,
                                     GLenum key, unsigned index,
                                     GLboolean enable);

extern GLboolean __glXGetArrayEnable(const __GLXattribute * const state,
                                     GLenum key, unsigned index,
                                     GLintptr * dest);
extern GLboolean __glXGetArraySize(const __GLXattribute * const state,
                                   GLenum key, unsigned index,
                                   GLintptr * dest);
extern GLboolean __glXGetArrayType(const __GLXattribute * const state,
                                   GLenum key, unsigned index,
                                   GLintptr * dest);
extern GLboolean __glXGetArrayStride(const __GLXattribute * const state,
                                     GLenum key, unsigned index,
                                     GLintptr * dest);
extern GLboolean __glXGetArrayPointer(const __GLXattribute * const state,
                                      GLenum key, unsigned index,
                                      void **dest);
extern GLboolean __glXGetArrayNormalized(const __GLXattribute * const state,
                                         GLenum key, unsigned index,
                                         GLintptr * dest);

extern void __glXPushArrayState(__GLXattribute * state);
extern void __glXPopArrayState(__GLXattribute * state);

extern GLuint __glXGetActiveTextureUnit(const __GLXattribute * const state);

#endif /* INDIRECT_VERTEX_ARRAY_H */
@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
extern void __glXArrayDisableAll( __GLXattribute * state );
d36 3
a38 2
extern GLboolean __glXSetArrayEnable( __GLXattribute * state,
    GLenum key, unsigned index, GLboolean enable );
d40 18
a57 12
extern GLboolean __glXGetArrayEnable( const __GLXattribute * const state,
    GLenum key, unsigned index, GLintptr * dest );
extern GLboolean __glXGetArraySize( const __GLXattribute * const state,
    GLenum key, unsigned index, GLintptr * dest );
extern GLboolean __glXGetArrayType( const __GLXattribute * const state,
    GLenum key, unsigned index, GLintptr * dest );
extern GLboolean __glXGetArrayStride( const __GLXattribute * const state,
    GLenum key, unsigned index, GLintptr * dest );
extern GLboolean __glXGetArrayPointer( const __GLXattribute * const state,
    GLenum key, unsigned index, void ** dest );
extern GLboolean __glXGetArrayNormalized( const __GLXattribute * const state,
    GLenum key, unsigned index, GLintptr * dest );
d59 2
a60 2
extern void __glXPushArrayState( __GLXattribute * state );
extern void __glXPopArrayState( __GLXattribute * state );
d62 1
a62 1
extern GLuint __glXGetActiveTextureUnit( const __GLXattribute * const state );
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@
