head	1.4;
access;
symbols
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2010.05.22.20.06.15;	author matthieu;	state dead;
branches;
next	1.3;

1.3
date	2009.05.17.20.26.38;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.14.58.12;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.54.32;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.54.32;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@/*
 * SGI FREE SOFTWARE LICENSE B (Version 2.0, Sept. 18, 2008)
 * Copyright (C) 1991-2000 Silicon Graphics, Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice including the dates of first publication and
 * either this permission notice or a reference to
 * http://oss.sgi.com/projects/FreeB/
 * shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Except as contained in this notice, the name of Silicon Graphics, Inc.
 * shall not be used in advertising or otherwise to promote the sale, use or
 * other dealings in this Software without prior written authorization from
 * Silicon Graphics, Inc.
 */

#include "packrender.h"

/*
** Routines to pack evaluator maps into the transport buffer.  Maps are
** allowed to have extra arbitrary data, so these routines extract just
** the information that the GL needs.
*/

void
__glFillMap1f(GLint k, GLint order, GLint stride,
              const GLfloat * points, GLubyte * pc)
{
   if (stride == k) {
      /* Just copy the data */
      __GLX_PUT_FLOAT_ARRAY(0, points, order * k);
   }
   else {
      GLint i;

      for (i = 0; i < order; i++) {
         __GLX_PUT_FLOAT_ARRAY(0, points, k);
         points += stride;
         pc += k * __GLX_SIZE_FLOAT32;
      }
   }
}

void
__glFillMap1d(GLint k, GLint order, GLint stride,
              const GLdouble * points, GLubyte * pc)
{
   if (stride == k) {
      /* Just copy the data */
      __GLX_PUT_DOUBLE_ARRAY(0, points, order * k);
   }
   else {
      GLint i;
      for (i = 0; i < order; i++) {
         __GLX_PUT_DOUBLE_ARRAY(0, points, k);
         points += stride;
         pc += k * __GLX_SIZE_FLOAT64;
      }
   }
}

void
__glFillMap2f(GLint k, GLint majorOrder, GLint minorOrder,
              GLint majorStride, GLint minorStride,
              const GLfloat * points, GLfloat * data)
{
   GLint i, j, x;

   if ((minorStride == k) && (majorStride == minorOrder * k)) {
      /* Just copy the data */
      __GLX_MEM_COPY(data, points, majorOrder * majorStride *
                     __GLX_SIZE_FLOAT32);
      return;
   }
   for (i = 0; i < majorOrder; i++) {
      for (j = 0; j < minorOrder; j++) {
         for (x = 0; x < k; x++) {
            data[x] = points[x];
         }
         points += minorStride;
         data += k;
      }
      points += majorStride - minorStride * minorOrder;
   }
}

void
__glFillMap2d(GLint k, GLint majorOrder, GLint minorOrder,
              GLint majorStride, GLint minorStride,
              const GLdouble * points, GLdouble * data)
{
   int i, j, x;

   if ((minorStride == k) && (majorStride == minorOrder * k)) {
      /* Just copy the data */
      __GLX_MEM_COPY(data, points, majorOrder * majorStride *
                     __GLX_SIZE_FLOAT64);
      return;
   }

#ifdef __GLX_ALIGN64
   x = k * __GLX_SIZE_FLOAT64;
#endif
   for (i = 0; i < majorOrder; i++) {
      for (j = 0; j < minorOrder; j++) {
#ifdef __GLX_ALIGN64
         __GLX_MEM_COPY(data, points, x);
#else
         for (x = 0; x < k; x++) {
            data[x] = points[x];
         }
#endif
         points += minorStride;
         data += k;
      }
      points += majorStride - minorStride * minorOrder;
   }
}
@


1.3
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@d39 3
a41 2
void __glFillMap1f(GLint k, GLint order, GLint stride, 
		   const GLfloat *points, GLubyte *pc)
d43 13
a55 12
    if (stride == k) {
	/* Just copy the data */
	__GLX_PUT_FLOAT_ARRAY(0, points, order * k);
    } else {
	GLint i;

	for (i = 0; i < order; i++) {
	    __GLX_PUT_FLOAT_ARRAY(0, points, k);
	    points += stride;
	    pc += k * __GLX_SIZE_FLOAT32;
	}
    }
d58 3
a60 2
void __glFillMap1d(GLint k, GLint order, GLint stride, 
		   const GLdouble *points, GLubyte *pc)
d62 12
a73 11
    if (stride == k) {
	/* Just copy the data */
	__GLX_PUT_DOUBLE_ARRAY(0, points, order * k);
    } else {
	GLint i;
	for (i = 0; i < order; i++) {
            __GLX_PUT_DOUBLE_ARRAY(0, points, k);
	    points += stride;
	    pc += k * __GLX_SIZE_FLOAT64;
	}
    }
d76 4
a79 3
void __glFillMap2f(GLint k, GLint majorOrder, GLint minorOrder, 
		   GLint majorStride, GLint minorStride,
		   const GLfloat *points, GLfloat *data)
d81 1
a81 1
    GLint i, j, x;
d83 16
a98 16
    if ((minorStride == k) && (majorStride == minorOrder*k)) {
	/* Just copy the data */
	__GLX_MEM_COPY(data, points, majorOrder * majorStride *
		       __GLX_SIZE_FLOAT32);
	return;
    }
    for (i = 0; i < majorOrder; i++) {
	for (j = 0; j < minorOrder; j++) {
	    for (x = 0; x < k; x++) {
		data[x] = points[x];
	    }
	    points += minorStride;
	    data += k;
	}
	points += majorStride - minorStride * minorOrder;
    }
d101 4
a104 3
void __glFillMap2d(GLint k, GLint majorOrder, GLint minorOrder, 
		   GLint majorStride, GLint minorStride,
		   const GLdouble *points, GLdouble *data)
d106 1
a106 1
    int i,j,x;
d108 6
a113 6
    if ((minorStride == k) && (majorStride == minorOrder*k)) {
	/* Just copy the data */
	__GLX_MEM_COPY(data, points, majorOrder * majorStride *
		       __GLX_SIZE_FLOAT64);
	return;
    }
d116 1
a116 1
    x = k * __GLX_SIZE_FLOAT64;
d118 2
a119 2
    for (i = 0; i<majorOrder; i++) {
	for (j = 0; j<minorOrder; j++) {
d121 1
a121 1
	    __GLX_MEM_COPY(data, points, x);
d123 3
a125 3
	    for (x = 0; x<k; x++) {
		data[x] = points[x];
	    }
d127 5
a131 5
	    points += minorStride;
	    data += k;
	}
	points += majorStride - minorStride * minorOrder;
    }
@


1.1
log
@Initial revision
@
text
@a0 1
/* $XFree86$ */
d2 28
a29 33
** License Applicability. Except to the extent portions of this file are
** made subject to an alternative license as permitted in the SGI Free
** Software License B, Version 1.1 (the "License"), the contents of this
** file are subject only to the provisions of the License. You may not use
** this file except in compliance with the License. You may obtain a copy
** of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
** Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
** 
** http://oss.sgi.com/projects/FreeB
** 
** Note that, as provided in the License, the Software is distributed on an
** "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
** DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
** CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
** PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
** 
** Original Code. The Original Code is: OpenGL Sample Implementation,
** Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
** Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
** Copyright in any portions created by third parties is as indicated
** elsewhere herein. All Rights Reserved.
** 
** Additional Notice Provisions: The application programming interfaces
** established by SGI in conjunction with the Original Code are The
** OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
** April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
** 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
** Window System(R) (Version 1.3), released October 19, 1998. This software
** was created using the OpenGL(R) version 1.2.1 Sample Implementation
** published by SGI, but has not been independently verified as being
** compliant with the OpenGL(R) version 1.2.1 Specification.
**
*/
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@
