head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.12.23.05.17.45;	author jsg;	state dead;
branches;
next	1.2;
commitid	TnlogFl9nOv2eaRf;

1.2
date	2013.09.05.14.03.45;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.14;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.34;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.14.40;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * Copyright 1998-1999 Precision Insight, Inc., Cedar Park, Texas.
 * (C) Copyright IBM Corporation 2004
 * All Rights Reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sub license,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
 * PRECISION INSIGHT, IBM,
 * AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#include <GL/gl.h>
#include "indirect.h"

void
__indirect_glWindowPos2d(GLdouble x, GLdouble y)
{
   __indirect_glWindowPos3f(x, y, 0.0);
}

void
__indirect_glWindowPos2i(GLint x, GLint y)
{
   __indirect_glWindowPos3f(x, y, 0.0);
}

void
__indirect_glWindowPos2f(GLfloat x, GLfloat y)
{
   __indirect_glWindowPos3f(x, y, 0.0);
}

void
__indirect_glWindowPos2s(GLshort x, GLshort y)
{
   __indirect_glWindowPos3f(x, y, 0.0);
}

void
__indirect_glWindowPos2dv(const GLdouble * p)
{
   __indirect_glWindowPos3f(p[0], p[1], 0.0);
}

void
__indirect_glWindowPos2fv(const GLfloat * p)
{
   __indirect_glWindowPos3f(p[0], p[1], 0.0);
}

void
__indirect_glWindowPos2iv(const GLint * p)
{
   __indirect_glWindowPos3f(p[0], p[1], 0.0);
}

void
__indirect_glWindowPos2sv(const GLshort * p)
{
   __indirect_glWindowPos3f(p[0], p[1], 0.0);
}

void
__indirect_glWindowPos3d(GLdouble x, GLdouble y, GLdouble z)
{
   __indirect_glWindowPos3f(x, y, z);
}

void
__indirect_glWindowPos3i(GLint x, GLint y, GLint z)
{
   __indirect_glWindowPos3f(x, y, z);
}

void
__indirect_glWindowPos3s(GLshort x, GLshort y, GLshort z)
{
   __indirect_glWindowPos3f(x, y, z);
}

void
__indirect_glWindowPos3dv(const GLdouble * p)
{
   __indirect_glWindowPos3f(p[0], p[1], p[2]);
}

void
__indirect_glWindowPos3iv(const GLint * p)
{
   __indirect_glWindowPos3f(p[0], p[1], p[2]);
}

void
__indirect_glWindowPos3sv(const GLshort * p)
{
   __indirect_glWindowPos3f(p[0], p[1], p[2]);
}
@


1.2
log
@Merge Mesa 9.2.0
@
text
@@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d31 1
a31 1
__indirect_glWindowPos2dMESA(GLdouble x, GLdouble y)
d33 1
a33 1
   __indirect_glWindowPos3fMESA(x, y, 0.0);
d37 1
a37 1
__indirect_glWindowPos2iMESA(GLint x, GLint y)
d39 1
a39 1
   __indirect_glWindowPos3fMESA(x, y, 0.0);
d43 1
a43 1
__indirect_glWindowPos2fMESA(GLfloat x, GLfloat y)
d45 1
a45 1
   __indirect_glWindowPos3fMESA(x, y, 0.0);
d49 1
a49 1
__indirect_glWindowPos2sMESA(GLshort x, GLshort y)
d51 1
a51 1
   __indirect_glWindowPos3fMESA(x, y, 0.0);
d55 1
a55 1
__indirect_glWindowPos2dvMESA(const GLdouble * p)
d57 1
a57 1
   __indirect_glWindowPos3fMESA(p[0], p[1], 0.0);
d61 1
a61 1
__indirect_glWindowPos2fvMESA(const GLfloat * p)
d63 1
a63 1
   __indirect_glWindowPos3fMESA(p[0], p[1], 0.0);
d67 1
a67 1
__indirect_glWindowPos2ivMESA(const GLint * p)
d69 1
a69 1
   __indirect_glWindowPos3fMESA(p[0], p[1], 0.0);
d73 1
a73 1
__indirect_glWindowPos2svMESA(const GLshort * p)
d75 1
a75 1
   __indirect_glWindowPos3fMESA(p[0], p[1], 0.0);
d79 1
a79 1
__indirect_glWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z)
d81 1
a81 1
   __indirect_glWindowPos3fMESA(x, y, z);
d85 1
a85 1
__indirect_glWindowPos3iMESA(GLint x, GLint y, GLint z)
d87 1
a87 1
   __indirect_glWindowPos3fMESA(x, y, z);
d91 1
a91 1
__indirect_glWindowPos3sMESA(GLshort x, GLshort y, GLshort z)
d93 1
a93 1
   __indirect_glWindowPos3fMESA(x, y, z);
d97 1
a97 1
__indirect_glWindowPos3dvMESA(const GLdouble * p)
d99 1
a99 1
   __indirect_glWindowPos3fMESA(p[0], p[1], p[2]);
d103 1
a103 1
__indirect_glWindowPos3ivMESA(const GLint * p)
d105 1
a105 1
   __indirect_glWindowPos3fMESA(p[0], p[1], p[2]);
d109 1
a109 1
__indirect_glWindowPos3svMESA(const GLshort * p)
d111 1
a111 1
   __indirect_glWindowPos3fMESA(p[0], p[1], p[2]);
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d31 1
a31 1
__indirect_glWindowPos2d(GLdouble x, GLdouble y)
d33 1
a33 1
   __indirect_glWindowPos3f(x, y, 0.0);
d37 1
a37 1
__indirect_glWindowPos2i(GLint x, GLint y)
d39 1
a39 1
   __indirect_glWindowPos3f(x, y, 0.0);
d43 1
a43 1
__indirect_glWindowPos2f(GLfloat x, GLfloat y)
d45 1
a45 1
   __indirect_glWindowPos3f(x, y, 0.0);
d49 1
a49 1
__indirect_glWindowPos2s(GLshort x, GLshort y)
d51 1
a51 1
   __indirect_glWindowPos3f(x, y, 0.0);
d55 1
a55 1
__indirect_glWindowPos2dv(const GLdouble * p)
d57 1
a57 1
   __indirect_glWindowPos3f(p[0], p[1], 0.0);
d61 1
a61 1
__indirect_glWindowPos2fv(const GLfloat * p)
d63 1
a63 1
   __indirect_glWindowPos3f(p[0], p[1], 0.0);
d67 1
a67 1
__indirect_glWindowPos2iv(const GLint * p)
d69 1
a69 1
   __indirect_glWindowPos3f(p[0], p[1], 0.0);
d73 1
a73 1
__indirect_glWindowPos2sv(const GLshort * p)
d75 1
a75 1
   __indirect_glWindowPos3f(p[0], p[1], 0.0);
d79 1
a79 1
__indirect_glWindowPos3d(GLdouble x, GLdouble y, GLdouble z)
d81 1
a81 1
   __indirect_glWindowPos3f(x, y, z);
d85 1
a85 1
__indirect_glWindowPos3i(GLint x, GLint y, GLint z)
d87 1
a87 1
   __indirect_glWindowPos3f(x, y, z);
d91 1
a91 1
__indirect_glWindowPos3s(GLshort x, GLshort y, GLshort z)
d93 1
a93 1
   __indirect_glWindowPos3f(x, y, z);
d97 1
a97 1
__indirect_glWindowPos3dv(const GLdouble * p)
d99 1
a99 1
   __indirect_glWindowPos3f(p[0], p[1], p[2]);
d103 1
a103 1
__indirect_glWindowPos3iv(const GLint * p)
d105 1
a105 1
   __indirect_glWindowPos3f(p[0], p[1], p[2]);
d109 1
a109 1
__indirect_glWindowPos3sv(const GLshort * p)
d111 1
a111 1
   __indirect_glWindowPos3f(p[0], p[1], p[2]);
@


