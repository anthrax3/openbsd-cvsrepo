head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.8
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.6
	OPENBSD_5_7_BASE:1.2
	v10_2_9:1.1.1.2
	v10_4_3:1.1.1.2
	v10_2_7:1.1.1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	v10_2_3:1.1.1.2
	OPENBSD_5_5:1.2.0.2
	OPENBSD_5_5_BASE:1.2
	v9_2_5:1.1.1.2
	v9_2_3:1.1.1.2
	v9_2_2:1.1.1.2
	v9_2_1:1.1.1.2
	v9_2_0:1.1.1.2
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	v7_10_3:1.1.1.1
	mesa:1.1.1
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.12.23.05.17.45;	author jsg;	state dead;
branches;
next	1.2;
commitid	TnlogFl9nOv2eaRf;

1.2
date	2013.09.05.14.03.45;	author jsg;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.14;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.34;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2013.09.05.13.14.40;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove the now unused Mesa 10.2.9 code
@
text
@/*
 * (C) Copyright IBM Corporation 2004
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * on the rights to use, copy, modify, merge, publish, distribute, sub
 * license, and/or sell copies of the Software, and to permit persons to whom
 * the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
 * THE COPYRIGHT HOLDERS AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
 * USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

#include <GL/gl.h>
#include "indirect.h"

static void
TransposeMatrixf(const GLfloat s[16], GLfloat d[16])
{
   int i, j;
   for (i = 0; i < 4; i++) {
      for (j = 0; j < 4; j++) {
         d[i * 4 + j] = s[j * 4 + i];
      }
   }
}

static void
TransposeMatrixd(const GLdouble s[16], GLdouble d[16])
{
   int i, j;
   for (i = 0; i < 4; i++) {
      for (j = 0; j < 4; j++) {
         d[i * 4 + j] = s[j * 4 + i];
      }
   }
}


void
__indirect_glLoadTransposeMatrixd(const GLdouble * m)
{
   GLdouble mt[16];

   TransposeMatrixd(m, mt);
   __indirect_glLoadMatrixd(mt);
}

void
__indirect_glLoadTransposeMatrixf(const GLfloat * m)
{
   GLfloat mt[16];

   TransposeMatrixf(m, mt);
   __indirect_glLoadMatrixf(mt);
}

void
__indirect_glMultTransposeMatrixd(const GLdouble * m)
{
   GLdouble mt[16];

   TransposeMatrixd(m, mt);
   __indirect_glMultMatrixd(mt);
}

void
__indirect_glMultTransposeMatrixf(const GLfloat * m)
{
   GLfloat mt[16];

   TransposeMatrixf(m, mt);
   __indirect_glMultMatrixf(mt);
}
@


1.2
log
@Merge Mesa 9.2.0
@
text
@@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d52 1
a52 1
__indirect_glLoadTransposeMatrixdARB(const GLdouble * m)
d61 1
a61 1
__indirect_glLoadTransposeMatrixfARB(const GLfloat * m)
d70 1
a70 1
__indirect_glMultTransposeMatrixdARB(const GLdouble * m)
d79 1
a79 1
__indirect_glMultTransposeMatrixfARB(const GLfloat * m)
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@


1.1.1.2
log
@Import Mesa 9.2.0
@
text
@d52 1
a52 1
__indirect_glLoadTransposeMatrixd(const GLdouble * m)
d61 1
a61 1
__indirect_glLoadTransposeMatrixf(const GLfloat * m)
d70 1
a70 1
__indirect_glMultTransposeMatrixd(const GLdouble * m)
d79 1
a79 1
__indirect_glMultTransposeMatrixf(const GLfloat * m)
@


