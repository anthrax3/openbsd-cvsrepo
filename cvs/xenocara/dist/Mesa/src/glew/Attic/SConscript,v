head	1.2;
access;
symbols
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.05.31.18.50.28;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2010.05.22.20.06.11;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove MesaDemos contents. Not used by Xenocara builds anymore.
@
text
@Import('*')

# Shared environment settings
env = env.Clone()

env.PrependUnique(CPPPATH = [
    '#/include',
])

if env['platform'] == 'windows':
    env.PrependUnique(LIBS = [
        'glu32', 
        'opengl32', 
        'gdi32', 
        'user32', 
    ])
else:
    env.PrependUnique(LIBS = [
        'GLU',
        'GL',
        'X11',
    ])

# Library specific environment settings
lib_env = env.Clone()

lib_env.Append(CPPDEFINES = [
    'GLEW_BUILD',
    #'GLEW_MX', # Multiple Rendering Contexts support
])

if lib_env['platform'] == 'windows':
    target = 'glew'
else:
    target = 'GLEW'

source = [
    'glew.c',
]

if lib_env['platform'] == 'windows':
    glew = lib_env.SharedLibrary(target = target, source = source) 
    env.InstallSharedLibrary(glew, version=(1, 5, 2))
    glew = lib_env.FindIxes(glew, 'LIBPREFIX', 'LIBSUFFIX')
else:
    # Use static library on Unices to avoid binary compatability issues
    lib_env.Append(CPPDEFINES = ['GLEW_STATIC'])
    glew = lib_env.StaticLibrary(target = target, source = source) 

# Program specific environment settings
prog_env = env.Clone()

prog_env.Prepend(LIBS = [glew])

if prog_env['platform'] == 'darwin':
    prog_env.Append(FRAMEWORKS = ['AGL'])

prog_env.Program(
    target = 'glewinfo',
    source = ['glewinfo.c'],
)

prog_env.Program(
    target = 'visualinfo',
    source = ['visualinfo.c'],
)

Export('glew')
@


1.1
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@@

