head	1.3;
access;
symbols
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.09.05.14.02.31;	author jsg;	state dead;
branches;
next	1.2;

1.2
date	2012.08.17.13.58.10;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.23.13.29.31;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.31;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Merge Mesa 9.2.0
@
text
@((function atan
   (signature float
     (parameters
       (declare (in) float y_over_x))
     ((return (call asin ((expression float *
			   (var_ref y_over_x)
			   (expression float rsq
			    (expression float +
			     (expression float *
			      (var_ref y_over_x)
			      (var_ref y_over_x))
			     (constant float (1.0))))))))))

   (signature vec2
     (parameters
       (declare (in) vec2 y_over_x))
     ((return (call asin ((expression vec2 *
			   (var_ref y_over_x)
			   (expression vec2 rsq
			    (expression vec2 +
			     (expression vec2 *
			      (var_ref y_over_x)
			      (var_ref y_over_x))
			     (constant float (1.0))))))))))

   (signature vec3
     (parameters
       (declare (in) vec3 y_over_x))
     ((return (call asin ((expression vec3 *
			   (var_ref y_over_x)
			   (expression vec3 rsq
			    (expression vec3 +
			     (expression vec3 *
			      (var_ref y_over_x)
			      (var_ref y_over_x))
			     (constant float (1.0))))))))))

   (signature vec4
     (parameters
       (declare (in) vec4 y_over_x))
     ((return (call asin ((expression vec4 *
			   (var_ref y_over_x)
			   (expression vec4 rsq
			    (expression vec4 +
			     (expression vec4 *
			      (var_ref y_over_x)
			      (var_ref y_over_x))
			     (constant float (1.0))))))))))

  (signature float
    (parameters
      (declare (in ) float y)
      (declare (in ) float x)
    )
    (
      (declare () float r)
      (if (expression bool >
           (expression float abs (var_ref x))
           (expression float * (constant float (1.0e-8)) (expression float abs (var_ref y)))) (
        (assign (x) (var_ref r) (call atan ((expression float / (var_ref y) (var_ref x)))))
        (if (expression bool < (var_ref x) (constant float (0.000000)) ) (
          (if (expression bool >= (var_ref y) (constant float (0.000000)) )
              ((assign (x) (var_ref r) (expression float + (var_ref r) (constant float (3.141593)))))
              ((assign (x) (var_ref r) (expression float - (var_ref r) (constant float (3.141593))))))
        )
        (
        ))
      )
      (
        (declare () float sgn)
        (assign (x) (var_ref sgn) (expression float sign (var_ref y)))
        (assign (x) (var_ref r) (expression float * (var_ref sgn) (constant float (1.5707965))))
      ))

      (return (var_ref r) )
    ))



   (signature vec2
     (parameters
       (declare (in) vec2 y)
       (declare (in) vec2 x))
     ((declare () vec2 r)
      (assign (x) (var_ref r)
	      (call atan ((swiz x (var_ref y))
			  (swiz x (var_ref x)))))
      (assign (y) (var_ref r)
	      (call atan ((swiz y (var_ref y))
			  (swiz y (var_ref x)))))
      (return (var_ref r))))

   (signature vec3
     (parameters
       (declare (in) vec3 y)
       (declare (in) vec3 x))
     ((declare () vec3 r)
      (assign (x) (var_ref r)
	      (call atan ((swiz x (var_ref y))
			  (swiz x (var_ref x)))))
      (assign (y) (var_ref r)
	      (call atan ((swiz y (var_ref y))
			  (swiz y (var_ref x)))))
      (assign (z) (var_ref r)
	      (call atan ((swiz z (var_ref y))
			  (swiz z (var_ref x)))))
      (return (var_ref r))))

   (signature vec4
     (parameters
       (declare (in) vec4 y)
       (declare (in) vec4 x))
     ((declare () vec4 r)
      (assign (x) (var_ref r)
	      (call atan ((swiz x (var_ref y))
			  (swiz x (var_ref x)))))
      (assign (y) (var_ref r)
	      (call atan ((swiz y (var_ref y))
			  (swiz y (var_ref x)))))
      (assign (z) (var_ref r)
	      (call atan ((swiz z (var_ref y))
			  (swiz z (var_ref x)))))
      (assign (w) (var_ref r)
	      (call atan ((swiz w (var_ref y))
			  (swiz w (var_ref x)))))
      (return (var_ref r)))))

))
@


1.2
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@@


1.1
log
@Initial revision
@
text
@d57 4
a60 2
      (if (expression bool > (expression float abs (var_ref x)) (constant float (0.000100))) (
        (assign (constant bool (1)) (x) (var_ref r) (call atan ((expression float / (var_ref y) (var_ref x)))))
d63 2
a64 2
              ((assign (constant bool (1)) (x) (var_ref r) (expression float + (var_ref r) (constant float (3.141593)))))
              ((assign (constant bool (1)) (x) (var_ref r) (expression float - (var_ref r) (constant float (3.141593))))))
d71 2
a72 2
        (assign (constant bool (1)) (x) (var_ref sgn) (expression float sign (var_ref y)))
        (assign (constant bool (1)) (x) (var_ref r) (expression float * (var_ref sgn) (constant float (1.5707965))))
d85 1
a85 1
      (assign (constant bool (1)) (x) (var_ref r)
d88 1
a88 1
      (assign (constant bool (1)) (y) (var_ref r)
d98 1
a98 1
      (assign (constant bool (1)) (x) (var_ref r)
d101 1
a101 1
      (assign (constant bool (1)) (y) (var_ref r)
d104 1
a104 1
      (assign (constant bool (1)) (z) (var_ref r)
d114 1
a114 1
      (assign (constant bool (1)) (x) (var_ref r)
d117 1
a117 1
      (assign (constant bool (1)) (y) (var_ref r)
d120 1
a120 1
      (assign (constant bool (1)) (z) (var_ref r)
d123 1
a123 1
      (assign (constant bool (1)) (w) (var_ref r)
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@
