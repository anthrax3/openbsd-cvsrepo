head	1.3;
access;
symbols
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2013.09.05.14.02.37;	author jsg;	state dead;
branches;
next	1.2;

1.2
date	2012.08.17.13.58.10;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2011.10.23.13.29.31;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.31;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Merge Mesa 9.2.0
@
text
@((function noise3
  (signature vec3
    (parameters (declare (in) vec4 p))
    (
      (declare () float a)
      (declare () float b)
      (declare () float c)
      (declare () vec3 t)

      (assign (x) (var_ref a) (expression float noise (var_ref p)))
      (assign (x) (var_ref b) (expression float noise (expression vec4 + (var_ref p) (constant vec4 (601.0 313.0 29.0 277.0)))))
      (assign (x) (var_ref c) (expression float noise (expression vec4 + (var_ref p) (constant vec4 (1559.0 113.0 1861.0 797.0)))))

      (assign (x) (var_ref t) (var_ref a))
      (assign (y) (var_ref t) (var_ref b))
      (assign (z) (var_ref t) (var_ref c))
      (return (var_ref t))
    ))

  (signature vec3
    (parameters (declare (in) vec3 p))
    (
      (declare () float a)
      (declare () float b)
      (declare () float c)
      (declare () vec3 t)

      (assign (x) (var_ref a) (expression float noise (var_ref p)))
      (assign (x) (var_ref b) (expression float noise (expression vec3 + (var_ref p) (constant vec3 (601.0 313.0 29.0)))))
      (assign (x) (var_ref c) (expression float noise (expression vec3 + (var_ref p) (constant vec3 (1559.0 113.0 1861.0)))))

      (assign (x) (var_ref t) (var_ref a))
      (assign (y) (var_ref t) (var_ref b))
      (assign (z) (var_ref t) (var_ref c))
      (return (var_ref t))
    ))

  (signature vec3
    (parameters (declare (in) vec2 p))
    (
      (declare () float a)
      (declare () float b)
      (declare () float c)
      (declare () vec3 t)

      (assign (x) (var_ref a) (expression float noise (var_ref p)))
      (assign (x) (var_ref b) (expression float noise (expression vec2 + (var_ref p) (constant vec2 (601.0 313.0)))))
      (assign (x) (var_ref c) (expression float noise (expression vec2 + (var_ref p) (constant vec2 (1559.0 113.0)))))

      (assign (x) (var_ref t) (var_ref a))
      (assign (y) (var_ref t) (var_ref b))
      (assign (z) (var_ref t) (var_ref c))
      (return (var_ref t))
    ))

  (signature vec3
    (parameters (declare (in) float p))
    (
      (declare () float a)
      (declare () float b)
      (declare () float c)
      (declare () vec3 t)

      (assign (x) (var_ref a) (expression float noise (var_ref p)))
      (assign (x) (var_ref b) (expression float noise (expression float + (var_ref p) (constant float (601.0)))))
      (assign (x) (var_ref c) (expression float noise (expression float + (var_ref p) (constant float (1559.0)))))

      (assign (x) (var_ref t) (var_ref a))
      (assign (y) (var_ref t) (var_ref b))
      (assign (z) (var_ref t) (var_ref c))
      (return (var_ref t))
    ))
))
@


1.2
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@@


1.1
log
@Initial revision
@
text
@d10 7
a16 7
      (assign (constant bool (1)) (x) (var_ref a) (expression float noise (var_ref p)))
      (assign (constant bool (1)) (x) (var_ref b) (expression float noise (expression vec4 + (var_ref p) (constant vec4 (601.0 313.0 29.0 277.0)))))
      (assign (constant bool (1)) (x) (var_ref c) (expression float noise (expression vec4 + (var_ref p) (constant vec4 (1559.0 113.0 1861.0 797.0)))))

      (assign (constant bool (1)) (x) (var_ref t) (var_ref a))
      (assign (constant bool (1)) (y) (var_ref t) (var_ref b))
      (assign (constant bool (1)) (z) (var_ref t) (var_ref c))
d28 7
a34 7
      (assign (constant bool (1)) (x) (var_ref a) (expression float noise (var_ref p)))
      (assign (constant bool (1)) (x) (var_ref b) (expression float noise (expression vec3 + (var_ref p) (constant vec3 (601.0 313.0 29.0)))))
      (assign (constant bool (1)) (x) (var_ref c) (expression float noise (expression vec3 + (var_ref p) (constant vec3 (1559.0 113.0 1861.0)))))

      (assign (constant bool (1)) (x) (var_ref t) (var_ref a))
      (assign (constant bool (1)) (y) (var_ref t) (var_ref b))
      (assign (constant bool (1)) (z) (var_ref t) (var_ref c))
d46 7
a52 7
      (assign (constant bool (1)) (x) (var_ref a) (expression float noise (var_ref p)))
      (assign (constant bool (1)) (x) (var_ref b) (expression float noise (expression vec2 + (var_ref p) (constant vec2 (601.0 313.0)))))
      (assign (constant bool (1)) (x) (var_ref c) (expression float noise (expression vec2 + (var_ref p) (constant vec2 (1559.0 113.0)))))

      (assign (constant bool (1)) (x) (var_ref t) (var_ref a))
      (assign (constant bool (1)) (y) (var_ref t) (var_ref b))
      (assign (constant bool (1)) (z) (var_ref t) (var_ref c))
d64 7
a70 7
      (assign (constant bool (1)) (x) (var_ref a) (expression float noise (var_ref p)))
      (assign (constant bool (1)) (x) (var_ref b) (expression float noise (expression float + (var_ref p) (constant float (601.0)))))
      (assign (constant bool (1)) (x) (var_ref c) (expression float noise (expression float + (var_ref p) (constant float (1559.0)))))

      (assign (constant bool (1)) (x) (var_ref t) (var_ref a))
      (assign (constant bool (1)) (y) (var_ref t) (var_ref b))
      (assign (constant bool (1)) (z) (var_ref t) (var_ref c))
@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@
