head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.1.1.0.8
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.6
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.4
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.2
	v7_10_3:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2013.09.05.14.02.36;	author jsg;	state dead;
branches;
next	1.1;

1.1
date	2011.10.23.13.29.31;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2011.10.23.13.29.31;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Merge Mesa 9.2.0
@
text
@((function mix
   (signature float
     (parameters
       (declare (in) float arg0)
       (declare (in) float arg1)
       (declare (in) float arg2))
     ((return (expression float + (expression float * (var_ref arg0) (expression float - (constant float (1.000000)) (var_ref arg2))) (expression float * (var_ref arg1) (var_ref arg2))))))

   (signature vec2
     (parameters
       (declare (in) vec2 arg0)
       (declare (in) vec2 arg1)
       (declare (in) vec2 arg2))
     ((return (expression vec2 + (expression vec2 * (var_ref arg0) (expression vec2 - (constant float (1.000000)) (var_ref arg2))) (expression vec2 * (var_ref arg1) (var_ref arg2))))))

   (signature vec3
     (parameters
       (declare (in) vec3 arg0)
       (declare (in) vec3 arg1)
       (declare (in) vec3 arg2))
     ((return (expression vec3 + (expression vec3 * (var_ref arg0) (expression vec3 - (constant float (1.000000)) (var_ref arg2))) (expression vec3 * (var_ref arg1) (var_ref arg2))))))

   (signature vec4
     (parameters
       (declare (in) vec4 arg0)
       (declare (in) vec4 arg1)
       (declare (in) vec4 arg2))
     ((return (expression vec4 + (expression vec4 * (var_ref arg0) (expression vec4 - (constant float (1.000000)) (var_ref arg2))) (expression vec4 * (var_ref arg1) (var_ref arg2))))))

   (signature vec2
     (parameters
       (declare (in) vec2 arg0)
       (declare (in) vec2 arg1)
       (declare (in) float arg2))
     ((return (expression vec2 + (expression vec2 * (var_ref arg0) (expression float - (constant float (1.000000)) (var_ref arg2))) (expression vec2 * (var_ref arg1) (var_ref arg2))))))

   (signature vec3
     (parameters
       (declare (in) vec3 arg0)
       (declare (in) vec3 arg1)
       (declare (in) float arg2))
     ((return (expression vec3 + (expression vec3 * (var_ref arg0) (expression float - (constant float (1.000000)) (var_ref arg2))) (expression vec3 * (var_ref arg1) (var_ref arg2))))))

   (signature vec4
     (parameters
       (declare (in) vec4 arg0)
       (declare (in) vec4 arg1)
       (declare (in) float arg2))
     ((return (expression vec4 + (expression vec4 * (var_ref arg0) (expression float - (constant float (1.000000)) (var_ref arg2))) (expression vec4 * (var_ref arg1) (var_ref arg2))))))

   (signature float
     (parameters
       (declare (in) float v1)
       (declare (in) float v2)
       (declare (in) bool  a))
     ((assign (var_ref a) (var_ref v1) (var_ref v2))
      (return (var_ref v1))))

   (signature vec2
     (parameters
       (declare (in) vec2 v1)
       (declare (in) vec2 v2)
       (declare (in) bvec2 a))
     ((assign (swiz x (var_ref a)) (x) (var_ref v1) (swiz x (var_ref v2)))
      (assign (swiz y (var_ref a)) (y) (var_ref v1) (swiz y (var_ref v2)))
      (return (var_ref v1))))

   (signature vec3
     (parameters
       (declare (in) vec3 v1)
       (declare (in) vec3 v2)
       (declare (in) bvec3 a))
     ((assign (swiz x (var_ref a)) (x) (var_ref v1) (swiz x (var_ref v2)))
      (assign (swiz y (var_ref a)) (y) (var_ref v1) (swiz y (var_ref v2)))
      (assign (swiz z (var_ref a)) (z) (var_ref v1) (swiz z (var_ref v2)))
      (return (var_ref v1))))

   (signature vec4
     (parameters
       (declare (in) vec4 v1)
       (declare (in) vec4 v2)
       (declare (in) bvec4 a))
     ((assign (swiz x (var_ref a)) (x) (var_ref v1) (swiz x (var_ref v2)))
      (assign (swiz y (var_ref a)) (y) (var_ref v1) (swiz y (var_ref v2)))
      (assign (swiz z (var_ref a)) (z) (var_ref v1) (swiz z (var_ref v2)))
      (assign (swiz w (var_ref a)) (w) (var_ref v1) (swiz w (var_ref v2)))
      (return (var_ref v1))))
))
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import Mesa 7.10.3
@
text
@@
