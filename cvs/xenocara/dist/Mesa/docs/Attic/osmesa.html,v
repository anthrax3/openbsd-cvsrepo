head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.8
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	v10_2_9:1.1.1.3
	v10_4_3:1.1.1.3
	v10_2_7:1.1.1.3
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	v10_2_3:1.1.1.3
	OPENBSD_5_5:1.3.0.2
	OPENBSD_5_5_BASE:1.3
	v9_2_5:1.1.1.3
	v9_2_3:1.1.1.3
	v9_2_2:1.1.1.3
	v9_2_1:1.1.1.3
	v9_2_0:1.1.1.3
	OPENBSD_5_4:1.2.0.14
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	v7_10_3:1.1.1.2
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.12.23.05.17.22;	author jsg;	state dead;
branches;
next	1.3;
commitid	TnlogFl9nOv2eaRf;

1.3
date	2013.09.05.13.59.02;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.22.20.05.53;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.49.21;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.49.21;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.10.23.13.29.22;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.09.05.13.17.52;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove the now unused Mesa 10.2.9 code
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Off-screen Rendering</title>
  <link rel="stylesheet" type="text/css" href="mesa.css">
</head>
<body>

<div class="header">
  <h1>The Mesa 3D Graphics Library</h1>
</div>

<iframe src="contents.html"></iframe>
<div class="content">

<h1>Off-screen Rendering</h1>


<p>
Mesa's off-screen interface is used for rendering into user-allocated memory
without any sort of window system or operating system dependencies.
That is, the GL_FRONT colorbuffer is actually a buffer in main memory,
rather than a window on your display.
</p>

<p>
The OSMesa API provides three basic functions for making off-screen
renderings: OSMesaCreateContext(), OSMesaMakeCurrent(), and
OSMesaDestroyContext().  See the Mesa/include/GL/osmesa.h header for
more information about the API functions.
</p>

<p>
The OSMesa interface may be used with any of three software renderers:
</p>
<ol>
<li>llvmpipe - this is the high-performance Gallium LLVM driver
<li>softpipe - this it the reference Gallium software driver
<li>swrast - this is the legacy Mesa software rasterizer
</ol>


<p>
There are several examples of OSMesa in the mesa/demos repository.
</p>

<h1>Building OSMesa</h1>

<p>
Configure and build Mesa with something like:

<pre>
configure --enable-osmesa --disable-driglx-direct --disable-dri --with-gallium-drivers=swrast
make
</pre>

<p>
Make sure you have LLVM installed first if you want to use the llvmpipe driver.
</p>

<p>
When the build is complete you should find:
</p>
<pre>
lib/libOSMesa.so  (swrast-based OSMesa)
lib/gallium/libOSMsea.so  (gallium-based OSMesa)
</pre>

<p>
Set your LD_LIBRARY_PATH to point to one directory or the other to select
the library you want to use.
</p>

<p>
When you link your application, link with -lOSMesa
</p>

</div>
</body>
</html>
@


1.3
log
@Merge Mesa 9.2.0
@
text
@@


1.2
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@d1 8
a8 1
<HTML>
d10 3
a12 1
<TITLE>Off-screen Rendering</TITLE>
d14 2
a15 1
<link rel="stylesheet" type="text/css" href="mesa.css"></head>
d17 1
a17 3
<BODY>

<H1>Off-screen Rendering</H1>
d21 2
a22 2
Mesa's off-screen rendering interface is used for rendering into
user-allocated blocks of memory.
a24 2
There are no window system or operating system dependencies.
One potential application is to use Mesa as an off-line, batch-style renderer.
d28 1
a28 1
The <B>OSMesa</B> API provides three basic functions for making off-screen
d35 1
a35 2
There are several examples of OSMesa in the <code>progs/osdemos/</code>
directory.
d37 5
a43 2
<H2>Deep color channels</H2>

d45 1
a45 7
For some applications 8-bit color channels don't have sufficient
precision.
OSMesa supports 16-bit and 32-bit color channels through the OSMesa interface.
When using 16-bit channels, channels are GLushorts and RGBA pixels occupy
8 bytes.
When using 32-bit channels, channels are GLfloats and RGBA pixels occupy
16 bytes.
d48 2
d51 1
a51 7
Before version 6.5.1, Mesa had to be recompiled to support exactly
one of 8, 16 or 32-bit channels.
With Mesa 6.5.1, Mesa can be compiled for either 8, 16 or 32-bit channels
and render into any of the smaller size channels.
For example, if Mesa's compiled for 32-bit channels, you can also render
16 and 8-bit channel images.
</p>
a52 2
<p>
To build Mesa/OSMesa for 16 and 8-bit color channel support:
d54 2
a55 2
      make realclean
      make linux-osmesa16
d59 2
a60 5
To build Mesa/OSMesa for 32, 16 and 8-bit color channel support:
<pre>
      make realclean
      make linux-osmesa32
</pre>
d63 1
a63 3
You'll wind up with a library named libOSMesa16.so or libOSMesa32.so.
Otherwise, most Mesa configurations build an 8-bit/channel libOSMesa.so library
by default.
d65 4
d71 2
a72 2
If performance is important, compile Mesa for the channel size you're
most interested in.
d76 1
a76 4
If you need to compile on a non-Linux platform, copy Mesa/configs/linux-osmesa16
to a new config file and edit it as needed.  Then, add the new config name to
the top-level Makefile.  Send a patch to the Mesa developers too, if you're
inclined.
d79 3
a81 2
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@d29 1
a29 1
There are several examples of OSMesa in the <code>progs/osdemo/</code>
@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Import Mesa 7.10.3
@
text
@d29 1
a29 1
There are several examples of OSMesa in the <code>progs/osdemos/</code>
@


1.1.1.3
log
@Import Mesa 9.2.0
@
text
@d1 1
a1 8
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Off-screen Rendering</title>
  <link rel="stylesheet" type="text/css" href="mesa.css">
</head>
<body>
d3 1
a3 3
<div class="header">
  <h1>The Mesa 3D Graphics Library</h1>
</div>
d5 1
a5 2
<iframe src="contents.html"></iframe>
<div class="content">
d7 3
a9 1
<h1>Off-screen Rendering</h1>
d13 2
a14 2
Mesa's off-screen interface is used for rendering into user-allocated memory
without any sort of window system or operating system dependencies.
d17 2
d22 1
a22 1
The OSMesa API provides three basic functions for making off-screen
d29 2
a30 1
The OSMesa interface may be used with any of three software renderers:
a31 5
<ol>
<li>llvmpipe - this is the high-performance Gallium LLVM driver
<li>softpipe - this it the reference Gallium software driver
<li>swrast - this is the legacy Mesa software rasterizer
</ol>
d34 2
d37 7
a43 1
There are several examples of OSMesa in the mesa/demos repository.
d46 8
a53 1
<h1>Building OSMesa</h1>
d56 1
a56 2
Configure and build Mesa with something like:

d58 2
a59 2
configure --enable-osmesa --disable-driglx-direct --disable-dri --with-gallium-drivers=swrast
make
d63 5
a67 2
Make sure you have LLVM installed first if you want to use the llvmpipe driver.
</p>
d70 3
a72 1
When the build is complete you should find:
a73 4
<pre>
lib/libOSMesa.so  (swrast-based OSMesa)
lib/gallium/libOSMsea.so  (gallium-based OSMesa)
</pre>
d76 2
a77 2
Set your LD_LIBRARY_PATH to point to one directory or the other to select
the library you want to use.
d81 4
a84 1
When you link your application, link with -lOSMesa
d87 2
a88 3
</div>
</body>
</html>
@


