head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.18
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.16
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.14
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.12
	v7_10_3:1.1.1.2
	OPENBSD_5_0:1.3.0.10
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.8
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2013.09.05.13.58.55;	author jsg;	state dead;
branches;
next	1.3;

1.3
date	2009.05.17.20.26.36;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.14.58.06;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.49.27;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.49.27;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.10.23.13.29.22;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge Mesa 9.2.0
@
text
@
                           Mesa 4.0 release notes

                             October 18, 2001

                              PLEASE READ!!!!



Introduction
------------

Mesa uses an even/odd version number scheme like the Linux kernel.
Odd numbered versions (such as 3.3) designate new developmental releases.
Even numbered versions (such as 3.4) designate stable releases.

Mesa version 4.0 signifies two things:

  1. A stabilization of the 3.5 development release
  2. Implementation of the OpenGL 1.3 specification


Note that the Mesa major version number is incremented with the OpenGL
minor version number:

   Mesa 1.x  ==  OpenGL 1.0
   Mesa 2.x  ==  OpenGL 1.1
   Mesa 3.x  ==  OpenGL 1.2
   Mesa 4.x  ==  OpenGL 1.3



New Features
------------

Mesa 3.5 already had all the new features of OpenGL 1.3, implemented as
extensions.  These extensions were simply promoted to standard features:

   GL_ARB_multisample
   GL_ARB_multitexture
   GL_ARB_texture_border_clamp
   GL_ARB_texture_compression
   GL_ARB_texture_cube_map
   GL_ARB_texture_env_add
   GL_ARB_texture_env_combine
   GL_ARB_texture_env_dot3
   GL_ARB_transpose_matrix

In Mesa 4.0 the functions defined by these extensions are now available
without the "ARB" suffix.  For example, glLoadTransposeMatrixf() is now
a standard API function.  The new functions in OpenGL 1.3 and Mesa 4.0 are:

   glActiveTexture
   glClientActiveTexture
   glCompressedTexImage1D
   glCompressedTexImage2D
   glCompressedTexImage3D
   glCompressedTexSubImage1D
   glCompressedTexSubImage2D
   glCompressedTexSubImage3D
   glGetCompressedTexImage
   glLoadTransposeMatrixd
   glLoadTransposeMatrixf
   glMultiTexCoord1d
   glMultiTexCoord1dv
   glMultiTexCoord1f
   glMultiTexCoord1fv
   glMultiTexCoord1i
   glMultiTexCoord1iv
   glMultiTexCoord1s
   glMultiTexCoord1sv
   glMultiTexCoord2d
   glMultiTexCoord2dv
   glMultiTexCoord2f
   glMultiTexCoord2fv
   glMultiTexCoord2i
   glMultiTexCoord2iv
   glMultiTexCoord2s
   glMultiTexCoord2sv
   glMultiTexCoord3d
   glMultiTexCoord3dv
   glMultiTexCoord3f
   glMultiTexCoord3fv
   glMultiTexCoord3i
   glMultiTexCoord3iv
   glMultiTexCoord3s
   glMultiTexCoord3sv
   glMultiTexCoord4d
   glMultiTexCoord4dv
   glMultiTexCoord4f
   glMultiTexCoord4fv
   glMultiTexCoord4i
   glMultiTexCoord4iv
   glMultiTexCoord4s
   glMultiTexCoord4sv
   glMultTransposeMatrixd
   glMultTransposeMatrixf
   glSampleCoverage
   glSamplePass


GLX 1.4 is the companion to OpenGL 1.3.  The only new features in GLX 1.4
are support for multisampling and the GLX_ARB_get_proc_address extension.
glXGetProcAddress() is the only new function in GLX 1.4.



Multisample and Texture Compression
-----------------------------------

The OpenGL 1.3 specification allows the multisample and texture compression
features to essentially be no-ops.  For example, if you query for multisample
support you'll find none, but the API functions work.

Similarly, texture compression is not implemented by any of the software
drivers but you can specify a generic compressed texture format (like
GL_COMPRESSED_RGBA) to glTexImage2D and it'll be accepted.



Device Drivers
--------------

Mesa advertises itself as either OpenGL 1.2 or OpenGL 1.3 depending on the
device driver.  If the driver enables all the ARB extensions which are part
of OpenGL 1.3 then glGetString(GL_VERSION) will return "1.3".  Otherwise,
it'll return "1.2".

A number of Mesa's software drivers haven't been actively maintained for
some time.  We rely on volunteers to maintain many of the drivers.
Here's the current status of all included drivers:


Driver			Status
----------------------	---------------------
XMesa (Xlib)		implements OpenGL 1.3
OSMesa (off-screen)	implements OpenGL 1.3
FX (3dfx Voodoo1/2)	implements OpenGL 1.3
SVGA			implements OpenGL 1.3
Wind River UGL		implements OpenGL 1.3
Windows/Win32		implements OpenGL 1.3
GGI			needs updating
DOS/DJGPP		needs updating
BeOS			needs updating
Allegro			needs updating
D3D			needs updating
DOS			needs updating

Special thanks go to Karl Schultz for updating the Windows driver.

The XFree86/DRI drivers	have not yet been updated to use Mesa 4.0 as of
September 2001, but that should happen eventually.



Other Changes
-------------

See the VERSIONS file for more details about bug fixes, etc. in Mesa 4.0.


----------------------------------------------------------------------
@


1.3
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@@


1.2
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@a162 1
$Id: RELNOTES-4.0,v 3.2 2001/10/17 14:59:21 brianp Exp $
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import MesaLibs 6.5.1. (in dist/ since its code is shared between lib 
and xserver)...
@
text
@@


1.1.1.2
log
@Import Mesa 7.10.3
@
text
@d163 1
@

