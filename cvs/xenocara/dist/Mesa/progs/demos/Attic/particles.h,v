head	1.2;
access;
symbols
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2011.05.31.18.50.20;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2006.11.25.18.57.07;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.57.07;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove MesaDemos contents. Not used by Xenocara builds anymore.
@
text
@/*
 * This program is under the GNU GPL.
 * Use at your own risk.
 *
 * written by David Bucciarelli (humanware@@plus.it)
 *            Humanware s.r.l.
 */

#ifndef PARTICLES_H
#define PARTICLES_H

#include <GL/gl.h>

class particle {
 protected:
  float age;         // in seconds
  float acc[3];
  float vel[3];
  float pos[3];

 public:
  particle();
  virtual ~particle() {};

  virtual void beginDraw(void) {};
  virtual void draw(void)=0;
  virtual void endDraw(void) {};

  virtual void elapsedTime(float);
  virtual void checkAge(void) {};
};

class particleSystem {
 protected:
  particle **part;

  float t;

  unsigned long particleNum;
 public:
  particleSystem();
  ~particleSystem();

  void addParticle(particle *);

  void reset(void);

  void draw(void);

  void addTime(float);
};

class rainParticle : public particle {
 protected:
  static float min[3];
  static float max[3];
  static float partLength;

  float oldpos[3];

  void init(void);
 public:
  rainParticle();

  static void setRainingArea(float, float, float,
			     float, float, float);
  static void setLength(float);
  static float getLength(void) { return partLength; };

  void beginDraw(void) { glBegin(GL_LINES); };
  void draw(void);
  void endDraw(void) { glEnd(); };

  void elapsedTime(float);

  void checkAge(void);

  void randomHeight(void);
};

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import MesaDemos 6.5.1
@
text
@@
