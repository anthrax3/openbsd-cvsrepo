head	1.2;
access;
symbols
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v7_0_1:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_5_2:1.1.1.1
	v6_5_1:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2010.05.22.20.06.03;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2006.11.25.18.57.23;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.57.23;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@
/*
 * Test Linux 8-bit SVGA/Mesa color index mode
 *
 * Compile with:  gcc vindex.c -I../include -L../lib -lMesaGL -lX11 -lXext
 *   -lvga -lm -o vindex
 *
 * This program is in the public domain.
 * Brian Paul, January 1996
 */



#include <vga.h>
#include "GL/svgamesa.h"
#include "GL/gl.h"



static GLint width = 640, height = 480;



static void display( void )
{
   int i, j;
   int w, h;

   glViewport( 0, 0, width, height );
   glMatrixMode( GL_PROJECTION );
   glLoadIdentity();
   glOrtho( 0.0, (GLfloat) width, 0.0, (GLfloat) height, -1.0, 1.0 );

   glClear( GL_COLOR_BUFFER_BIT );

   w = width / 16;
   h = height / 16;
   for (i=0;i<16;i++) {
      for (j=0;j<16;j++) {
         glIndexi( i*16+j );
         glRecti( i*w, j*h, i*w+w, j*h+h );
      }
   }
}



int main( int argc, char *argv[] )
{
   SVGAMesaContext vmc;
   int i;

   vga_init();
   vga_setmode( G640x480x256 );

   vmc = SVGAMesaCreateContext( GL_FALSE );
   SVGAMesaMakeCurrent( vmc );

   display();
   sleep(3);

   SVGAMesaDestroyContext( vmc );
   vga_setmode( TEXT );
   return 0;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import MesaDemos 6.5.1
@
text
@@
