head	1.4;
access;
symbols
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.05.31.18.50.26;	author matthieu;	state dead;
branches;
next	1.3;

1.3
date	2010.05.22.20.06.00;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.17.20.26.37;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.02.14.58.09;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove MesaDemos contents. Not used by Xenocara builds anymore.
@
text
@#!/usr/bin/env python


# Helper for the getprocaddress.c test.

import sys, getopt, re
sys.path.append("../../src/mesa/glapi/gen" )
import gl_XML
import license


def FindTestFunctions():
	"""Scan getprocaddress.c for lines that start with "test_" to find
	extension function tests.  Return a list of names found."""
	functions = []
	f = open("getprocaddress.c")
	if not f:
		return functions
	for line in f.readlines():
		v = re.search("^test_([a-zA-Z0-9]+)", line)
		if v:
			func = v.group(1)
			functions.append(func)
	f.close
	return functions


class PrintExports(gl_XML.gl_print_base):
	def __init__(self):
		gl_XML.gl_print_base.__init__(self)

		self.name = "getprocaddress.py (from Mesa)"
		self.license = license.bsd_license_template % ( \
"""Copyright (C) 1999-2001  Brian Paul   All Rights Reserved.
(C) Copyright IBM Corporation 2004""", "BRIAN PAUL, IBM")

		self.tests = FindTestFunctions()
		self.prevCategory = ""
		return


	def printRealHeader(self):
		print """
struct name_test_pair {
   const char *name;
   GLboolean (*test)(generic_func);
};
   
static struct name_test_pair functions[] = {"""

	def printBody(self, api):
		prev_category = None
		

		for f in api.functionIterateByCategory():
			[category, num] = api.get_category_for_name( f.name )
			if category != prev_category:
				print '   { "-%s", NULL},' % category
				prev_category = category
			
			test = "NULL"
			for name in f.entry_points:
				if name in self.tests:
					test = "test_%s" % name
					break

			print '   { "gl%s", %s },' % (f.name, test)

		print ''
		print '   { NULL, NULL }'
		print '};'
		print ''
		return


if __name__ == '__main__':
	file_name = "../../src/mesa/glapi/gen/gl_API.xml"
    
	try:
		(args, trail) = getopt.getopt(sys.argv[1:], "f:")
	except Exception,e:
		show_usage()

	for (arg,val) in args:
		if arg == "-f":
			file_name = val

	printer = PrintExports()

	api = gl_XML.parse_GL_API( file_name, gl_XML.gl_item_factory() )

	printer.Print( api )
@


1.3
log
@Update to Mesa 7.8.1. Tested on a bulk ports build by naddy@@, ok oga@@.
@
text
@@


1.2
log
@Update to Mesa 7.4.2. Tested by oga@@, ckuethe@@ and naddy@@.
@
text
@d7 1
a7 1
sys.path.append("../../src/mesa/glapi/" )
d55 1
a55 1
		for f in api.functionIterateByOffset():
d77 1
a77 1
	file_name = "../../src/mesa/glapi/gl_API.xml"
@


1.1
log
@Mesa 7.2, Tested by ckuethe@@, naddy@@, oga@@, and others.
@
text
@a2 1
# $Id: getprocaddress.py,v 1.7 2005/06/21 23:42:43 idr Exp $
@

