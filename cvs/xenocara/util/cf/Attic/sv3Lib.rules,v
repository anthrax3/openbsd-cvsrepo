head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.11.02.18.59.05;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2006.11.25.16.15.45;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.16.15.45;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove things that are no longer linked to the build: imake,cf and pciids
@
text
@XCOMM $Xorg: sv3Lib.rules,v 1.3 2000/08/17 19:41:48 cpqbld Exp $



XCOMM $XFree86: xc/config/cf/sv3Lib.rules,v 3.5 2002/11/22 22:55:56 tsi Exp $
/*
 * SVR3 shared library rules
 * Copyright (c) 1992, 1993 by Thomas Wolfram, Berlin, Germany
 * Author: Thomas Wolfram, thomas@@aeon.in-berlin.de, wolf@@prz.tu-berlin.de
 * Conception derived partially from work of Thomas Roell
 */

#ifndef HasSharedLibraries
#define HasSharedLibraries NO		/* JUST FOR NOW */
#endif
#ifndef ForceNormalLib
#define ForceNormalLib YES
#endif

#ifndef SharedLibSM
#define SharedLibSM HasSharedLibraries
#endif
#ifndef SharedLibXau
#define SharedLibXau HasSharedLibraries
#endif
#ifndef SharedLibXdmcp
#define SharedLibXdmcp HasSharedLibraries
#endif
#ifndef SharedLibXi
#define SharedLibXi HasSharedLibraries
#endif
#ifndef SharedLibXtst
#define SharedLibXtst HasSharedLibraries
#endif
#ifndef SharedLibICE
#define SharedLibICE HasSharedLibraries
#endif
#ifndef SharedLibFS
#define SharedLibFS HasSharedLibraries
#endif
#ifndef SharedLibX11
#define SharedLibX11 HasSharedLibraries
#endif
#ifndef SharedOldX
#define SharedOldX NO		/* it's obsolete */
#endif
#ifndef SharedLibXt
#define SharedLibXt HasSharedLibraries
#endif
#ifndef SharedLibXaw
#define SharedLibXaw HasSharedLibraries
#endif
#ifndef SharedLibXmu
#define SharedLibXmu HasSharedLibraries
#endif
#ifndef SharedLibXext
#define SharedLibXext HasSharedLibraries
#endif

#ifndef SharedDataSeparation
#define SharedDataSeparation NO
#endif
#ifndef SharedCodeDef
#define SharedCodeDef /**/
#endif
#ifndef SharedLibraryDef
#define SharedLibraryDef -DSVR3SHLIB
#endif
#ifndef ShLibIncludeFile
#define ShLibIncludeFile <sv3Lib.tmpl>
#endif
#ifndef SharedLibraryLoadFlags
#define SharedLibraryLoadFlags -q
#endif

#ifndef PositionIndependentCFlags
# if HasGcc2
#  define PositionIndependentCFlags -msvr3-shlib  
# else
#  define PositionIndependentCFlags /**/
# endif
#endif

#ifndef PositionIndependentCplusplusFlags
# if HasGcc2
#  define PositionIndependentCplusplusFlags -msvr3-shlib  
# else
#  define PositionIndependentCplusplusFlags /**/
# endif
#endif

#ifndef StripInstalledPrograms
# define StripInstalledPrograms NO
#endif

#if 0
/*
 * LibCleanDir - helper for cleaning library object subdirectories
 */
#ifndef LibCleanDir
#define LibCleanDir(dir) -@@if [ -d dir ]; then \                           @@@@\
                (set -x; cd dir; $(RM) *.o *.sd); else exit 0; fi
#endif

/*
 * SharedLibObjCompile - compile fragment for shared objects
 */
#ifndef SharedLibObjCompile
#define SharedLibObjCompile(options) $(RM) shared/$@@ 	                   @@@@\
	cat import.h $*.c >_$*.c                                           @@@@\
        $(CC) -c $(ANSICCOPTIONS) $(CCOPTIONS) $(ALLDEFINES) options \     @@@@\
$(SHLIBDEF) $(SHAREDCODEDEF) $(PICFLAGS) $(CDEBUGFLAGS) $(CLIBDEBUGFLAGS) \@@@@\
_$*.c                                                                      @@@@\
	$(MV) _$*.o shared/$@@                                              @@@@\
	$(RM) _$*.c
#endif

/*
 * NormalSharedLibObjCompile - compile fragment for shared object when
 * a normal library is not being built
 */
#ifndef NormalSharedLibObjCompile
#define NormalSharedLibObjCompile(options) $(RM) $@@                        @@@@\
	cat import.h $*.c >_$*.c                                           @@@@\
        $(CC) -c $(CFLAGS) options $(SHLIBDEF) $(SHAREDCODEDEF) $(PICFLAGS) _$*.c @@@@\
	$(MV) _$*.o $@@                                                     @@@@\
	$(RM) _$*.c
#endif


#ifndef LibraryObjectRule
#define LibraryObjectRule()                                             @@@@\
all::                                                                   @@@@\
        _DebuggedLibMkdir()                                             @@@@\
        _ProfiledLibMkdir()                                             @@@@\
        _SharedLibMkdir()                                               @@@@\
                                                                        @@@@\
includes::                                                              @@@@\
        _DebuggedLibMkdir()                                             @@@@\
        _ProfiledLibMkdir()                                             @@@@\
        _SharedLibMkdir()                                               @@@@\
                                                                        @@@@\
.c.o:                                                                   @@@@\
        _DebuggedObjCompile($(_NOOP_))                                  @@@@\
        _ProfiledObjCompile($(_NOOP_))                                  @@@@\
        _SharedObjCompile($(_NOOP_))                                    @@@@\
        _NormalObjCompile($(_NOOP_))                                    @@@@\
                                                                        @@@@\
.SUFFIXES: .sd                                                          @@@@\
.c.sd:                                                                  @@@@\
        _SharedDatCompile(-DSVR3SHDAT)                                  @@@@\
                                                                        @@@@\
clean::                                                                 @@@@\
        _DebuggedCleanDir()                                             @@@@\
        _ProfiledCleanDir()                                             @@@@\
        _SharedCleanDir()                                               @@@@\

#endif /* LibraryObjectRule */


/*
 * InstallSharedLibrary - generate rules to install the shared library.
 */
#ifndef InstallSharedLibrary
#if StripInstalledPrograms
#define	InstallSharedLibrary(libname,rev,dest)				@@@@\
install:: Concat(lib,libname.rev) 					@@@@\
	MakeDir($(DESTDIR)dest)						@@@@\
	$(INSTALL) -c $(INSTLIBFLAGS) Concat3(lib,libname,_s.a) $(DESTDIR)dest @@@@\
	MakeDir($(DESTDIR)$(LIBDIR)/shlib)                              @@@@\
        $(INSTALL) -c $(INSTPGMFLAGS) Concat(lib,libname.rev) \         @@@@\
	$(DESTDIR)$(LIBDIR)/shlib                                       @@@@\
	strip Concat($(DESTDIR)$(LIBDIR)/shlib/lib,libname.rev)         @@@@\
	mcs -d Concat($(DESTDIR)$(LIBDIR)/shlib/lib,libname.rev)
#else
#define	InstallSharedLibrary(libname,rev,dest)				@@@@\
install:: Concat(lib,libname.rev) 					@@@@\
	MakeDir($(DESTDIR)dest)						@@@@\
	$(INSTALL) -c $(INSTLIBFLAGS) Concat3(lib,libname,_s.a) $(DESTDIR)dest @@@@\
	MakeDir($(DESTDIR)$(LIBDIR)/shlib)                              @@@@\
        $(INSTALL) -c $(INSTPGMFLAGS) Concat(lib,libname.rev) \         @@@@\
	$(DESTDIR)$(LIBDIR)/shlib
#endif

#endif /* InstallSharedLibrary */

/*
 * InstallSharedLibraryData - generate rules to install the shared library data
 */
#ifndef InstallSharedLibraryData
#define	InstallSharedLibraryData(libname,rev,dest)
#endif /* InstallSharedLibraryData */


/*
 * SharedLibraryTarget - generate rules to create a shared library;
 * build it into a different name so that we do not hose people by having
 * the library gone for long periods.
 */
#ifndef SharedLibraryTarget
#define SharedLibraryTarget(libname,rev,solist,down,up)			@@@@\
AllTarget(Concat(lib,libname.rev))					@@@@\
									@@@@\
Concat(lib,libname.rev):  solist					@@@@\
	$(RM) $@@ Concat3(lib,libname,_s.a)				@@@@\
        $(CPP) -DDOWN=down ConnectionFlags ShlibDefines Concat(lib,libname.def) | \ @@@@\
        sed -e '/^#  *[0-9][0-9]*  *.*$$/d; /^$$/d' >spec.cpp           @@@@\
        sed -e '1,/#libraries/d; /#externals/,$$d' spec.cpp | \         @@@@\
        nawk '{ system("ar x " $$1 " " $$2 )}'                          @@@@\
        echo "#target " Concat($(LIBDIR)/shlib/lib,libname.rev) >spec   @@@@\
        sed -e '/#libraries/,$$d' spec.cpp >>spec                             @@@@\
        mkshlib -s spec -t $@@ -h Concat3(lib,libname,_s.a) $(SHLIBLDFLAGS)    @@@@\
        ar rulv Concat3(lib,libname,_s.a) `sed -e '1,/#externals/d' spec.cpp` @@@@\
        $(RM) spec.cpp spec                                             @@@@\
									@@@@\
clean::									@@@@\
	$(RM) Concat(lib,libname.rev) Concat3(lib,libname,_s.a)

#endif /* SharedLibraryTarget */

/*
 * SharedDepLibraryTarget - generate rules to create a shared library.
 */
#ifndef SharedDepLibraryTarget
#define SharedDepLibraryTarget(libname,rev,deplist,solist,down,up)	@@@@\
AllTarget(Concat(lib,libname.rev))					@@@@\
									@@@@\
Concat(lib,libname.rev):  deplist					@@@@\
	$(RM) $@@ Concat3(lib,libname,_s.a)				@@@@\
        $(CPP) -DDOWN=down ConnectionFlags ShlibDefines Concat(lib,libname.def) | \ @@@@\
        sed -e '/^#  *[0-9][0-9]*  *.*$$/d; /^$$/d' >spec.cpp           @@@@\
        sed -e '1,/#libraries/d; /#externals/,$$d' spec.cpp | \         @@@@\
        nawk '{ system("ar x " $$1 " " $$2 )}'                          @@@@\
        echo "#target " Concat($(LIBDIR)/shlib/lib,libname.rev) >spec   @@@@\
        sed -e '/#libraries/,$$d' spec.cpp >>spec                             @@@@\
        mkshlib -s spec -t $@@ -h Concat3(lib,libname,_s.a) $(SHLIBLDFLAGS)    @@@@\
        ar rulv Concat3(lib,libname,_s.a) `sed -e '1,/#externals/d' spec.cpp` @@@@\
        $(RM) spec.cpp spec                                             @@@@\
									@@@@\
clean::									@@@@\
	$(RM) Concat(lib,libname.rev) Concat3(lib,libname,_s.a)

#endif /* SharedDepLibraryTarget */

/*
 * SharedLibraryDataTarget - generate rules to create shlib data file;
 */
#ifndef SharedLibraryDataTarget
#define SharedLibraryDataTarget(libname,rev,salist)
#endif /* SharedLibraryTarget */

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@
