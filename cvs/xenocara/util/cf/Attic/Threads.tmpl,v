head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.11.02.18.59.03;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2006.11.25.16.16.01;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.16.16.01;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove things that are no longer linked to the build: imake,cf and pciids
@
text
@XCOMM $Xorg: Threads.tmpl,v 1.3 2000/08/17 19:41:46 cpqbld Exp $



XCOMM $XFree86: xc/config/cf/Threads.tmpl,v 3.3tsi Exp $

/*
 * For a multi-threaded application or library,
 * Define LocalThreadsDefines in your Imakefile (unless you like the
 * project default), then include this file.
 * Everything else should be automatic. 
 */

#ifndef LocalThreadsDefines
#ifdef ProjectThreadsDefines
#define LocalThreadsDefines ProjectThreadsDefines
#else
#define LocalThreadsDefines /**/
#endif
#endif

#ifndef LocalThreads
#ifdef ThreadedProject
#define LocalThreads ThreadedProject
#else
#define LocalThreads YES
#endif
#endif

#ifndef HasCThreads
#define HasCThreads NO
#endif

#ifndef ThreadTypeDefines
#if HasCThreads
#define ThreadTypeDefines -DCTHREADS
#else
#define ThreadTypeDefines /**/
#endif
#endif
#ifndef SystemMTDefines
#define SystemMTDefines /**/
#endif
#ifndef LibraryMTDefines
#define LibraryMTDefines /**/
#endif
#ifndef HasThreadSafeAPI		/* does it have getpwnam_r, etc. */
#define HasThreadSafeAPI YES
#endif
#ifndef MTSafeAPIDefines
#if HasThreadSafeAPI
#define MTSafeAPIDefines -DXUSE_MTSAFE_API
#else
#define MTSafeAPIDefines /**/
#endif
#endif
#ifndef ThreadPreStdAPIDefines
#define ThreadPreStdAPIDefines /* nominally for POSIX P1003.4a (Draft 4) API */
#endif
#ifndef CplusplusSystemMTDefines
# ifdef SystemMTDefines
#  define CplusplusSystemMTDefines SystemMTDefines
# else
#  define CplusplusSystemMTDefines /**/
# endif
#endif
#ifndef ThreadsCompileFlags
#define ThreadsCompileFlags /**/
#endif
#ifndef ThreadsCplusplusCompileFlags
# ifdef ThreadsCompileFlags
#  define ThreadsCplusplusCompileFlags ThreadsCompileFlags
# else
#  define ThreadsCplusplusCompileFlags /**/
# endif
#endif

#ifndef ThreadsLibraries
#define ThreadsLibraries /**/
#endif
#ifndef ThreadsCplusplusLibraries
# ifdef ThreadsLibraries
#  define ThreadsCplusplusLibraries ThreadsLibraries
# else
#  define ThreadsCplusplusLibraries /**/
# endif
#endif
#ifndef ThreadsLoadFlags
#define ThreadsLoadFlags ThreadsCompileFlags
#endif
#ifndef ThreadsCplusplusLoadFlags
#define ThreadsCplusplusLoadFlags ThreadsCplusplusCompileFlags
#endif

#if LocalThreads
    THREADS_CFLAGS = ThreadsCompileFlags
   THREADS_DEFINES = LocalThreadsDefines ThreadTypeDefines SystemMTDefines MTSafeAPIDefines ThreadPreStdAPIDefines $(LIB_MT_DEFINES)
   THREADS_LDFLAGS = ThreadsLoadFlags
      THREADS_LIBS = ThreadsLibraries

  THREADS_CXXFLAGS = ThreadsCplusplusCompileFlags
THREADS_CXXDEFINES = LocalThreadsDefines ThreadTypeDefines CplusplusSystemMTDefines MTSafeAPIDefines ThreadPreStdAPIDefines $(LIB_MT_DEFINES)
THREADS_CXXLDFLAGS = ThreadsCplusplusLoadFlags
   THREADS_CXXLIBS = ThreadsCplusplusLibraries
#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@
