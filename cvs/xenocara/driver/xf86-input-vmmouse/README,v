head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.32
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.30
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.28
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.26
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.24
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.22
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.20
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.18
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.16
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.14
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.12
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v12_4_3:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v12_4_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.05.03.14.11.13;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.19.58.19;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.19.58.19;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to xf86-input-vmmouse 12.6.3.
HAL tools and files are not built/installed on OpenBSD.
@
text
@VMMouse
-------

The VMMouse driver enables support for the special VMMouse protocol
that is provided by VMware virtual machines to give absolute pointer
positioning. 

Installing the driver will improve the user experience when using the 
mouse to interact with the guest operating system. In particular, use of 
the driver improves mouse "lag", provides mouse speed and acceleration 
consistent with the user's host operating system, and enables the 
auto-grab/ungrab feature in VMware products without requiring the VMware 
toolbox application.

Using the driver
----------------

Assuming you have built and installed the driver in the standard way
for autotools based packages (see INSTALL), or the driver was already
installed by your distro, using it is simply a matter of changing the
driver used for the mouse input device from "mouse" to "vmmouse".

The vmmouse driver is capable of falling back to the standard "mouse"
driver if a VMware virtual machine is not detected. This allows for
dual-booting of an operating system from a virtual machine to real hardware
without having to edit xorg.conf every time.

Implementation
--------------

The following is not necessary reading for anyone who wants to use the
driver, but should help anyone who wants to understand how it works or
who wants to write a driver for a different target, whether it's another
operating system, a linux kernel input driver or even gpm.

The driver is composed of three different layers:

1) The vmmouse protocol layer (vmmouse_proto.[c|h])
   - This provides the call to read and write the port over which 
     the vmmouse packets are transfered.

2) The vmmouse client layer (vmmouse_client.[c|h])
   - This builds on top of the protocol layer to provide higher
     level calls for enabling/disabling the vmmouse mechanism
     and for reading data.
   - A new driver for a different target would use this interface.

3) The Xorg vmmouse driver (vmmouse.c)
   - This is the actual Xorg specific part of the driver.
   - Note that interrupts indicating the presence of mouse data
     are still transmitted on the PS/2 port so it is necessary
     to be set up to receive those interrupts like a standard
     PS/2 driver, but the actual data on the PS/2 port is ignored.

vmmouse_detect
--------------

A simple program to detect whether the vmmouse device is present.
It is used by the HAL callout script to automatically detect a
vmmouse device.

Returns 0 if we are running in a virtual machine where the vmmouse
device is present.

Returns 1 otherwise (either we are not in a VM or the vmmouse device
was disabled).
@


1.1
log
@Initial revision
@
text
@d54 13
@


1.1.1.1
log
@Importing xf86-input-vmmouse 12.4.0
@
text
@@
