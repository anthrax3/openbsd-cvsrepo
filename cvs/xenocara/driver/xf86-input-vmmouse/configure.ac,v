head	1.13;
access;
symbols
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.11.0.12
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.10
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.8
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.6
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.2
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.10.0.6
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.4
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.2
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v12_4_3:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v12_4_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2017.01.22.21.23.51;	author matthieu;	state Exp;
branches;
next	1.12;
commitid	ZieSWxobQQH777ek;

1.12
date	2017.01.21.18.40.20;	author matthieu;	state Exp;
branches;
next	1.11;
commitid	WS4oD9OADRw3XCXL;

1.11
date	2014.01.03.09.41.23;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2012.06.09.09.33.55;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2012.05.13.20.48.40;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2011.04.25.14.10.23;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.08.22.12.11.57;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.24.08.51.42;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2009.11.22.14.29.51;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.18.20.53.43;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.03.14.11.13;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.23.15.46.07;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.19.58.09;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.19.58.09;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.20.46.03;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Disable linking of libi386 too (linking do libamd64 was already disabled,
but I manage to commit the incomplete version). Noticed by sthen@@. Thanks.
@
text
@#  Copyright 2005 Adam Jackson.
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation
#  on the rights to use, copy, modify, merge, publish, distribute, sub
#  license, and/or sell copies of the Software, and to permit persons to whom
#  the Software is furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice (including the next
#  paragraph) shall be included in all copies or substantial portions of the
#  Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
#  ADAM JACKSON BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# Process this file with autoconf to produce a configure script

AC_PREREQ(2.60)
AC_INIT([xf86-input-vmmouse],
        [13.1.0],
        [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg],
        xf86-input-vmmouse)

AC_CONFIG_SRCDIR([Makefile.am])
AC_CONFIG_AUX_DIR(.)
AC_CONFIG_HEADERS([config.h])

AM_INIT_AUTOMAKE([foreign dist-bzip2])

# XORG_DEFAULT_OPTIONS below forces C99. Solaris GCC doesn't like that.
AC_PROG_CC
AC_PROG_CC_C89
save_solaris_cc=$CC

# Require X.Org macros 1.8 or later for MAN_SUBSTS set by XORG_MANPAGE_SECTIONS
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.8 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.8)
XORG_DEFAULT_OPTIONS

DRIVER_NAME=vmmouse
AC_SUBST([DRIVER_NAME])

# Checks for programs.
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

AH_TOP([#include "xorg-server.h"])

AC_ARG_WITH(xorg-module-dir,
            AS_HELP_STRING([--with-xorg-module-dir=DIR],
                           [Default xorg module directory [[default=$libdir/xorg/modules]]]),
            [moduledir="$withval"],
            [moduledir="$libdir/xorg/modules"])
inputdir=${moduledir}/input
AC_SUBST(inputdir)

AC_ARG_WITH(xorg-conf-dir,
            AS_HELP_STRING([--with-xorg-conf-dir=DIR],
                           [Default xorg.conf.d directory [[default=from $PKG_CONFIG xorg-server]]]),
            [XORG_CONF_DIR="$withval"],
            [XORG_CONF_DIR="`$PKG_CONFIG --variable=sysconfigdir xorg-server`"])
AC_SUBST(XORG_CONF_DIR)
AM_CONDITIONAL(HAS_XORG_CONF_DIR, [test "x$XORG_CONF_DIR" != "x" && test "x$XORG_CONF_DIR" != "xno"])

AC_ARG_WITH(hal-bin-dir,
	    AS_HELP_STRING([--with-hal-bin-dir=DIR],
			   [Directory where HAL binaries where installed [[default=$bindir]]]),
	    [halbindir="$withval"],
	    [halbindir="$bindir"])
HAL_BIN_DIR=${halbindir}
AC_SUBST(HAL_BIN_DIR)

AC_ARG_WITH(hal-callouts-dir,
	    AS_HELP_STRING([--with-hal-callouts-dir=DIR],
			   [Directory where HAL expects its callout scripts to be located
			    [[default=$libdir/hal]]]),
	    [halcalloutsdir="$withval"],
	    [halcalloutsdir="$libdir/hal"])
HAL_CALLOUTS_DIR=${halcalloutsdir}
AC_SUBST(HAL_CALLOUTS_DIR)

AC_ARG_WITH(hal-fdi-dir,
	    AS_HELP_STRING([--with-hal-fdi-dir=DIR],
			   [Directory where HAL expects its fdi files to be located
			   [[default=$datadir/hal/fdi/policy/20thirdparty]]]),
	    [halfdidir="$withval"],
	    [halfdidir="$datadir/hal/fdi/policy/20thirdparty"])
HAL_FDI_DIR=${halfdidir}
AC_SUBST(HAL_FDI_DIR)

# Udev location for rules directory
AC_ARG_WITH(udev-rules-dir,
	    AS_HELP_STRING([--with-udev-rules-dir=DIR],
			   [Directory where udev expects its rules files
			   [[default=$libdir/udev/rules.d]]]),
	    [udevdir="$withval"],
	    [udevdir="$libdir/udev/rules.d"])
UDEV_RULES_DIR=${udevdir}
AC_SUBST(UDEV_RULES_DIR)
AM_CONDITIONAL(HAS_UDEV_RULES_DIR, [test "x$UDEV_RULES_DIR" != "xno"])

# Checks for extensions
XORG_DRIVER_CHECK_EXT(RANDR, randrproto)
XORG_DRIVER_CHECK_EXT(XINPUT, inputproto)

# Checks for pkg-config packages
libudev_check=yes
AC_ARG_WITH([libudev],
	[AS_HELP_STRING([--without-libudev],
		[Use to build without libudev on linux])],
	[if test x$withval = xno; then libudev_check=no; fi]
	[])

case $host_os in
     linux*)
	 if test $libudev_check != no; then
             PKG_CHECK_MODULES(LIBUDEV, [libudev],
					[AC_DEFINE([HAVE_LIBUDEV], 1,
					[Has libudev installed])],
					[]);
         fi
	 AC_CHECK_FUNCS(ioperm iopl,[],
			[AC_MSG_ERROR
			([cannot determine how to elevate io permissions)]],[1])
	 AC_DEFINE(VMMOUSE_OS_GENERIC, 1,
	           [Building for iopl / ioperm capable OS])
     ;;
     *bsd*)
         AC_DEFINE(VMMOUSE_OS_BSD, 1, [Building for BSD flavour])
     ;;
     solaris*)
	 if test "x$GCC" == "xyes"; then
            CC="$save_solaris_cc -fms-extensions"
	 fi
         AC_DEFINE(VMMOUSE_OS_SOLARIS, 1, [Building for Solaris flavour])
     ;;
     *)
	 AC_CHECK_FUNCS(ioperm iopl,[],
			[AC_MSG_ERROR
			([cannot determine how to elevate io permissions)]],[1])
	 AC_DEFINE(VMMOUSE_OS_GENERIC, 1)
     ;;
esac

case $host_cpu in
     i*86)
	case $host_os in
		*freebsd*)	AC_DEFINE(USE_DEV_IO) ;;
		*netbsd*)	AC_DEFINE(USE_I386_IOPL)
				use_i386_iopl=yes ;;
	esac
	;;
     x86_64*|amd64*)
	case $host_os in
		*freebsd*)	AC_DEFINE(USE_DEV_IO, 1, [BSD /dev/io]) ;;
		*netbsd*)	AC_DEFINE(USE_I386_IOPL, 1, [BSD i386 iopl])
				use_i386_iopl=yes ;;
	esac
	;;
esac

if test x$use_i386_iopl = xyes; then
   AC_CHECK_LIB(i386, i386_iopl,[],
		[AC_MSG_ERROR([cannot find library for i386_iopl])])
fi

if test x$use_amd64_iopl = xyes; then
   AC_CHECK_LIB(amd64, amd64_iopl,[],
		[AC_MSG_ERROR([cannot find library for amd64_iopl])])
fi

PKG_CHECK_MODULES(XORG, [xorg-server >= 1.0.1] xproto $REQUIRED_MODULES)

PKG_CHECK_EXISTS([xorg-server >= 1.1.0],
                 [AC_DEFINE([HAVE_XORG_SERVER_1_1_0], 1,
                            [Has version 1.1.0 or greater of the Xserver])])

PKG_CHECK_EXISTS([xorg-server > 1.4.99],
		[AC_DEFINE([HAVE_XORG_SERVER_1_5_0], 1,
		[Has version 1.5.0 or greater of the Xserver])])

PKG_CHECK_EXISTS([xorg-server >= 1.3.99.0 xorg-server <= 1.4.0.90],
                 [AC_DEFINE([CALL_CONVERSION_PROC], 1,
                            [Call conversion_proc from within the driver, as
                             Xserver doesn't])])
PKG_CHECK_EXISTS([xorg-server > 1.4.0.90],
		 [AC_DEFINE([ABS_VALUATOR_AXES], 1,
			    [Define absolute valuator axes])])
PKG_CHECK_EXISTS([xorg-server >= 1.6.0],
		 [AC_DEFINE([NO_MOUSE_MODULE], 1,
			    [Do not include built-in mouse module fallback])])

# Checks for libraries.

# Checks for header files.
AC_HEADER_STDC

AC_CONFIG_FILES([Makefile
	shared/Makefile
	src/Makefile
	tools/Makefile
	fdi/Makefile
	man/Makefile])

AC_OUTPUT
@


1.12
log
@Update to xf86-input-vmmouse 13.1.0
@
text
@a156 2
		*openbsd*)	AC_DEFINE(USE_I386_IOPL)
				use_i386_iopl=yes ;;
@


1.11
log
@Update xf86-input-vmmouse to  13.0.0
@
text
@d23 1
a23 1
AC_PREREQ(2.57)
d25 1
a25 1
        [13.0.0],
d35 4
a38 1
AM_MAINTAINER_MODE
a51 1
AC_PROG_CC
d56 1
a56 1
            AC_HELP_STRING([--with-xorg-module-dir=DIR],
d64 1
a64 1
            AC_HELP_STRING([--with-xorg-conf-dir=DIR],
d72 1
a72 1
	    AC_HELP_STRING([--with-hal-bin-dir=DIR],
d80 1
a80 1
	    AC_HELP_STRING([--with-hal-callouts-dir=DIR],
d89 1
a89 1
	    AC_HELP_STRING([--with-hal-fdi-dir=DIR],
d97 1
a97 5

PKG_CHECK_MODULES(UDEV, udev,
                  [UDEV_RULES_DIR="`$PKG_CONFIG --variable=udevdir udev`/rules.d"],
                  [UDEV_RULES_DIR=no])

d99 6
a104 5
	    AC_HELP_STRING([--with-udev-rules-dir=DIR],
			   [Default udev rules.d directory
			    [[default=($prefix)/lib/udev/rules.d on Linux, none otherwise]]]),
	    [UDEV_RULES_DIR="$withval"],
	    [])
d113 67
d206 8
a213 1
AC_OUTPUT([Makefile shared/Makefile src/Makefile tools/Makefile fdi/Makefile man/Makefile])
@


1.10
log
@Update to xf86-input-vmmouse 12.9.0
@
text
@d25 1
a25 1
        [12.9.0],
d95 4
a98 13
case $host_os in
  linux*)
    if test "x$prefix" = "xNONE" -o "x$prefix" = "x/usr" -o "x$prefix" = "x/usr/local" ; then
      slashlibdir=/lib
    else
      slashlibdir=$prefix/lib
    fi
    UDEV_RULES_DIR=$slashlibdir/udev/rules.d
    ;;
  *)
    UDEV_RULES_DIR=no
    ;;
esac
@


1.9
log
@Update to xf86-input-vmmouse 12.8.0
@
text
@d25 1
a25 1
        [12.8.0],
d31 2
a44 2

AM_CONFIG_HEADER([config.h])
@


1.8
log
@Update to xf86-input-vmmouse 12.7.0.
@
text
@d25 1
a25 1
        [12.7.0],
@


1.7
log
@Update to xf86-input-vmmouse 12.6.10. No functionnal change.
@
text
@d25 1
a25 1
        12.6.10,
d35 1
a35 1
# Require xorg-macros: XORG_DEFAULT_OPTIONS
d37 2
a38 2
          [m4_fatal([must install xorg-macros 1.4 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.4)
a49 1
AC_PROG_SED
d128 4
@


1.6
log
@Update to xf86-input-vmmouse 12.6.9
@
text
@d25 1
a25 1
        12.6.9,
a139 3

CFLAGS="$CFLAGS $XORG_CFLAGS "' -I$(top_srcdir)/src'
AC_SUBST([CFLAGS])
@


1.5
log
@Update xf86-input-vmmouse to version 12.6.5
@
text
@d25 1
a25 1
        12.6.5,
d31 1
a31 1
AM_INIT_AUTOMAKE([dist-bzip2])
d35 6
d50 1
a53 18
#AC_DEFINE(XFree86LOADER,1,[Stub define for loadable drivers])
#
#AC_ARG_ENABLE(XINPUT, AS_HELP_STRING([--enable-xinput],
#              [Build XInput support (default: yes)]),
#              [XINPUT=$enableval],[XINPUT=yes])
#AM_CONDITIONAL(XINPUT, test "x$XINPUT" = "xyes")
#if test "x$XINPUT" = "xyes" ; then
#    AC_DEFINE(XINPUT,1,[Enable XInput support])
#fi
#
#AC_ARG_ENABLE(XKB, AS_HELP_STRING([--enable-xkb],
#              [Build XKB support (default: yes)]),
#              [XKB=$enableval],[XKB=yes])
#AM_CONDITIONAL(XKB, test "x$XKB" = "xyes")
#if test "x$XKB" = "xyes" ; then
#    AC_DEFINE(XKB,1,[Enable XKB support])
#fi

d62 8
d96 23
a124 1
sdkdir=$(pkg-config --variable=sdkdir xorg-server)
a147 3

XORG_MANPAGE_SECTIONS
XORG_RELEASE_VERSION
@


1.4
log
@update to xf86-input-vmmouse 12.6.4
@
text
@d25 1
a25 1
        12.6.4,
d118 3
@


1.3
log
@update to xf86-input-vmmouse 12.6.3.
HAL tools and files are not built/installed on OpenBSD.
@
text
@d25 1
a25 1
        12.6.3,
d73 1
a73 1
AC_ARG_WITH(hal_bin_dir,
d81 1
a81 1
AC_ARG_WITH(hal_callouts_dir,
d90 1
a90 1
AC_ARG_WITH(hal_fdi_dir,
@


1.2
log
@xf86-input-vmmouse 12.5.1
@
text
@d25 1
a25 1
        12.5.1,
d73 26
d115 3
d130 1
a130 1
AC_OUTPUT([Makefile src/Makefile man/Makefile])
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
        12.4.0,
d78 1
a78 1
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.0.99.901] xproto $REQUIRED_MODULES)
d80 9
@


1.1.1.1
log
@Importing xf86-input-vmmouse 12.4.0
@
text
@@


1.1.1.2
log
@xf86-input-vmmouse 12.4.3
@
text
@d25 1
a25 1
        12.4.3,
@

