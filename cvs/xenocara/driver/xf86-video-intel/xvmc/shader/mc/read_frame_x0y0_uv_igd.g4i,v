head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.02.03.15.54.55;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to xf86-video-intel 2.99.909
Tested by jsg@@, kettenis@@ and myself on a wide range of intel cards.
@
text
@/* GRF allocation:
   g1~g30: constant buffer
           g1~g2:intra IQ matrix
           g3~g4:non intra IQ matrix
           g5~g20:IDCT table
   g31:    thread payload 
   g32:    message descriptor for reading reference data
   g58~g81:reference data
   g82:    thread payload backup
   g83~g106:IDCT data                          
*/
mov (1) g32.8<1>UD 0x007000fUD  {align1};
and.nz (1) null g32.16<1,1,1>UW 1UW {align1};
(f0) jmpi read_backward;

send (16) 0 g34.0<1>UW g32<8,8,1>UW read(5, 2, 0, 2) mlen 1 rlen 4 {align1};
send (16) 0 g44.0<1>UW g32<8,8,1>UW read(6, 2, 0, 2) mlen 1 rlen 4 {align1};
jmpi put_data;

read_backward:
send (16) 0 g34.0<1>UW g32<8,8,1>UW read(8, 2, 0, 2) mlen 1 rlen 4 {align1};
send (16) 0 g44.0<1>UW g32<8,8,1>UW read(9, 2, 0, 2) mlen 1 rlen 4 {align1};

put_data:
mov (32) g74.0<1>UW g34.0<16,8,1>UB {align1 compr};
mov (32) g76.0<1>UW g36.0<16,8,1>UB {align1 compr};
mov (32) g78.0<1>UW g44.0<16,8,1>UB {align1 compr};
mov (32) g80.0<1>UW g46.0<16,8,1>UB {align1 compr};
@
