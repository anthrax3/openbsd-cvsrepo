head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.16
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.14
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.02.03.15.54.55;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to xf86-video-intel 2.99.909
Tested by jsg@@, kettenis@@ and myself on a wide range of intel cards.
@
text
@/* GRF allocation:
   g1~g30: constant buffer
           g1~g2:intra IQ matrix
           g3~g4:non intra IQ matrix
           g5~g20:IDCT table
   g31:    thread payload 
   g58~g81:reference data
   g82:    thread payload backup
   g84~g107:IDCT data
   g115:   message descriptor for reading reference data   */
mov (8) g82.0<1>UD g31.0<8,8,1>UD {align1};
mov (1) g126.8<1>UD ip {align1};
add (1) ip g21.0<1,1,1>UD 0x50UD {align1};                  //jump to the lib to do IDCT

/*field 0 of Y*/
asr (2) g31.14<1>W g82.14<2,2,1>W 1W {align1};
add (2) g115.0<1>UD g31.0<2,2,1>UD g31.14<2,2,1>W {align1};
and (1) g115.4<1>UD g115.4<1,1,1>UD 0xFFFFFFFEUD {align1};
and.nz (1) null g82.31<1,1,1>UB 0x1UW {align1};             //motion vertical field select
(f0) add (1) g115.4<1>UD g115.4<1,1,1>UD 1UD {align1};
mov (1) g115.16<1>UW 0UW {align1};           	//0:forward 1:backward
mov (1) a0.0<1>UD 0x0A4EUD {align1};        	//g82.14,motion vector
mov (1) g126.8<1>UD ip {align1};
add (1) ip g21.0<1,1,1>UD 0x20UD {align1};   	//jump to the lib to read reference data 

mov (8) g58.0<1>UD g32.0<8,8,1>UD {align1};
mov (8) g60.0<1>UD g33.0<8,8,1>UD {align1};
mov (8) g62.0<1>UD g34.0<8,8,1>UD {align1};
mov (8) g64.0<1>UD g35.0<8,8,1>UD {align1};
mov (8) g66.0<1>UD g36.0<8,8,1>UD {align1};
mov (8) g68.0<1>UD g37.0<8,8,1>UD {align1};
mov (8) g70.0<1>UD g38.0<8,8,1>UD {align1};
mov (8) g72.0<1>UD g39.0<8,8,1>UD {align1};

/*field 1 of Y*/
asr (2) g31.14<1>W g82.22<2,2,1>W 1W {align1};
add (2) g115.0<1>UD g31.0<2,2,1>UD g31.14<2,2,1>W {align1};
and (1) g115.4<1>UD g115.4<1,1,1>UD 0xFFFFFFFEUD {align1};
and.nz (1) null g82.31<1,1,1>UB 0x4UW {align1};
(f0) add (1) g115.4<1>UD g115.4<1,1,1>UD 1UD {align1};
mov (1) a0.0<1>UD 0x0A56UD {align1};        //g82.22,motion vector
mov (1) g126.8<1>UD ip {align1};
add (1) ip g21.0<1,1,1>UD 0x20UD {align1};   //jump to the lib to read reference data 

mov (8) g59.0<1>UD g32.0<8,8,1>UD {align1};
mov (8) g61.0<1>UD g33.0<8,8,1>UD {align1};
mov (8) g63.0<1>UD g34.0<8,8,1>UD {align1};
mov (8) g65.0<1>UD g35.0<8,8,1>UD {align1};
mov (8) g67.0<1>UD g36.0<8,8,1>UD {align1};
mov (8) g69.0<1>UD g37.0<8,8,1>UD {align1};
mov (8) g71.0<1>UD g38.0<8,8,1>UD {align1};
mov (8) g73.0<1>UD g39.0<8,8,1>UD {align1};

/*field 0 of UV*/
shr (2) g31.0<1>UD g31.0<2,2,1>UD 1UD {align1};

asr (2) g31.14<1>W g82.14<2,2,1>W 2W {align1};
add (2) g115.0<1>UD g31.0<2,2,1>UD g31.14<2,2,1>W {align1};
and (1) g115.4<1>UD g115.4<1,1,1>UD 0xFFFFFFFEUD {align1};
and.nz (1) null g82.31<1,1,1>UB 0x1UW {align1};
(f0) add (1) g115.4<1>UD g115.4<1,1,1>UD 1UD {align1};
mov (1) a0.0<1>UD 0x0A4EUD {align1};         //g82.14,motion vector
mov (1) g126.8<1>UD ip {align1};
add (1) ip g21.0<1,1,1>UD 0x30UD {align1};   //jump to the lib to read reference data 

mov (16) g74.0<1>UW g32.0<8,8,1>UW {align1 compr};
mov (16) g76.0<1>UW g34.0<8,8,1>UW {align1 compr};
mov (16) g78.0<1>UW g36.0<8,8,1>UW {align1 compr};
mov (16) g80.0<1>UW g38.0<8,8,1>UW {align1 compr};

/*field 1 of UV*/
asr (2) g31.14<1>W g82.22<2,2,1>W 2W {align1};
add (2) g115.0<1>UD g31.0<2,2,1>UD g31.14<2,2,1>W {align1};
and (1) g115.4<1>UD g115.4<1,1,1>UD 0xFFFFFFFEUD {align1};
and.nz (1) null g82.31<1,1,1>UB 0x4UW {align1};
(f0) add (1) g115.4<1>UD g115.4<1,1,1>UD 1UD {align1};
mov (1) a0.0<1>UD 0x0A56UD {align1};         //g82.22,motion vector
mov (1) g126.8<1>UD ip {align1};
add (1) ip g21.0<1,1,1>UD 0x30UD {align1};   //jump to the lib to read reference data 

mov (16) g74.16<1>UW g32.0<8,8,1>UW {align1 compr};
mov (16) g76.16<1>UW g34.0<8,8,1>UW {align1 compr};
mov (16) g78.16<1>UW g36.0<8,8,1>UW {align1 compr};
mov (16) g80.16<1>UW g38.0<8,8,1>UW {align1 compr};

add (1) ip g21.0<1,1,1>UD 0x40UD {align1};          //jump to the lib to add the reference and idct data
@
