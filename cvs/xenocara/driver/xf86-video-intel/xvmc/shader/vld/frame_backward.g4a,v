head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.12
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.10
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.8
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.6
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2014.02.03.15.54.55;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to xf86-video-intel 2.99.909
Tested by jsg@@, kettenis@@ and myself on a wide range of intel cards.
@
text
@/*
 * Copyright Â© 2009 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Author:
 *    Zou Nan hai <nanhai.zou@@intel.com>
 *    Yan Li <li.l.yan@@intel.com>
 *    Liu Xi bin<xibin.liu@@intel.com>
 */
/* GRF allocation:
   g1~g30: constant buffer
           g1~g2:intra IQ matrix
           g3~g4:non intra IQ matrix
           g5~g20:IDCT table
   g31:    thread payload 
   g32:    message descriptor for reading reference data
   g58~g81:reference data
   g82:    thread payload backup
   g83~g106:IDCT data                           */
mov (8) g82.0<1>UD g31.0<8,8,1>UD {align1};
mov(2) g31.0<1>UD g82.12<2,2,1>UW {align1};
mov (1) g126.8<1>UD ip {align1};
mov (1) ip g21.0<1,1,1>UD {align1};
 
//Y, (x', y') = (x, y) + (motion_vector.x >> 1, motion_vector.y >> 1) 
asr (2) g31.14<1>W g82.20<2,2,1>W 1W {align1};
add (2) g32.0<1>UD g31.0<2,2,1>UD g31.14<2,2,1>W {align1};
define(`input_surface',	`7')
define(`mv1',	`g82.20')
define(`mv2',	`g82.22') 
include(`motion_frame_y.g4i')

//UV, (x', y') = (x >> 1, y >> 1) + (motion_vector.x >> 2, motion_vector.y >> 2)
shr (2) g31.0<1>UD g31.0<2,2,1>UD 1UD {align1};
asr (2) g31.14<1>W g82.20<2,2,1>W 2W {align1};
add (2) g32.0<1>UD g31.0<2,2,1>UD g31.14<2,2,1>W {align1};
define(`input_surface1', `8')
define(`input_surface2', `9')
include(`motion_frame_uv.g4i')

include(`addidct.g4i')
send (16) 0 acc0<1>UW g0<8,8,1>UW 
	thread_spawner(0, 0, 0) mlen 1 rlen 0 { align1 EOT};
@
