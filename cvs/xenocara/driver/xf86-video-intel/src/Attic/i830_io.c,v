head	1.3;
access;
symbols
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v2_2_0_90:1.1.1.1
	v2_2_0:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_7_4:1.1.1.1
	v1_7_3:1.1.1.1
	v1_7_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.03.18.18.38.20;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2011.11.29.12.39.02;	author oga;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.06.36;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.06.36;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xf86-video-intel 2.20.19.

A recent kernel with kernel modesetting support is required.
Thanks to jsg@@ and kettenis@@ for their work.
@
text
@/**************************************************************************

Copyright 1998-1999 Precision Insight, Inc., Cedar Park, Texas.
All Rights Reserved.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sub license, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice (including the
next paragraph) shall be included in all copies or substantial portions
of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
IN NO EVENT SHALL PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR
ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

**************************************************************************/

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

/*
 * Authors:
 *   Daryll Strauss <daryll@@precisioninsight.com>
 *
 */

#include "xf86.h"
#include "xf86_OSproc.h"
#include "compiler.h"

#include "intel.h"
#define pI810 intel
#define I810Ptr intel_screen_private *
#define I810WriteControlPIO I830WriteControlPIO
#define I810ReadControlPIO I830ReadControlPIO
#define I810WriteStandardPIO I830WriteStandardPIO
#define I810ReadStandardPIO I830ReadStandardPIO
#define I810SetPIOAccess I830SetPIOAccess
#define I810WriteControlMMIO I830WriteControlMMIO
#define I810ReadControlMMIO I830ReadControlMMIO
#define I810WriteStandardMMIO I830WriteStandardMMIO
#define I810ReadStandardMMIO I830ReadStandardMMIO
#define I810SetMMIOAccess I830SetMMIOAccess

#define minb(p) *(volatile uint8_t *)(pI810->MMIOBase + (p))
#define moutb(p,v) *(volatile uint8_t *)(pI810->MMIOBase + (p)) = (v)

static void
I810WriteControlPIO(I810Ptr pI810, IOADDRESS addr, uint8_t index, uint8_t val)
{
   addr += pI810->ioBase;
   outb(addr, index);
   outb(addr + 1, val);
}

static uint8_t
I810ReadControlPIO(I810Ptr pI810, IOADDRESS addr, uint8_t index)
{
   addr += pI810->ioBase;
   outb(addr, index);
   return inb(addr + 1);
}

static void
I810WriteStandardPIO(I810Ptr pI810, IOADDRESS addr, uint8_t val)
{
   outb(pI810->ioBase + addr, val);
}

static uint8_t
I810ReadStandardPIO(I810Ptr pI810, IOADDRESS addr)
{
   return inb(pI810->ioBase + addr);
}

void
I810SetPIOAccess(I810Ptr pI810)
{
   pI810->writeControl = I810WriteControlPIO;
   pI810->readControl = I810ReadControlPIO;
   pI810->writeStandard = I810WriteStandardPIO;
   pI810->readStandard = I810ReadStandardPIO;
}

static void
I810WriteControlMMIO(I810Ptr pI810, IOADDRESS addr, uint8_t index, uint8_t val)
{
   moutb(addr, index);
   moutb(addr + 1, val);
}

static uint8_t
I810ReadControlMMIO(I810Ptr pI810, IOADDRESS addr, uint8_t index)
{
   moutb(addr, index);
   return minb(addr + 1);
}

static void
I810WriteStandardMMIO(I810Ptr pI810, IOADDRESS addr, uint8_t val)
{
   moutb(addr, val);
}

static uint8_t
I810ReadStandardMMIO(I810Ptr pI810, IOADDRESS addr)
{
   return minb(addr);
}

void
I810SetMMIOAccess(I810Ptr pI810)
{
   pI810->writeControl = I810WriteControlMMIO;
   pI810->readControl = I810ReadControlMMIO;
   pI810->writeStandard = I810WriteStandardMMIO;
   pI810->readStandard = I810ReadStandardMMIO;
}
@


1.2
log
@Update the intel driver to a more recent version based on more recent
upsteam code.

Backporting keeping UMS changes by me, some bugfixes from kettenis@@.

Has been in snapshots for a while, committed on request so we can be
sure what people are running. This is a prerequesite for sandybridge
support but has those chipsets disabled for now until the correct code
has been added.
@
text
@@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
Copyright 2005 Red Hat, Inc.
d21 1
a21 1
IN NO EVENT SHALL RED HAT, INC AND/OR ITS SUPPLIERS BE LIABLE FOR
d28 4
d34 1
a34 1
 *   Kristian HÃ¸gsberg <krh@@redhat.com>
d38 92
a129 2
#define BUILD_FOR_I830 1
#include "i810_io.c"
@


1.1.1.1
log
@Importing xf86-video-i810 1.7.2
@
text
@@
