head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v2_2_0_90:1.1.1.1
	v2_2_0:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_7_4:1.1.1.1
	v1_7_3:1.1.1.1
	v1_7_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2011.11.29.12.39.02;	author oga;	state dead;
branches;
next	1.3;

1.3
date	2010.05.10.22.32.28;	author oga;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.21.20.19.51;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.06.47;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.06.47;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update the intel driver to a more recent version based on more recent
upsteam code.

Backporting keeping UMS changes by me, some bugfixes from kettenis@@.

Has been in snapshots for a while, committed on request so we can be
sure what people are running. This is a prerequesite for sandybridge
support but has those chipsets disabled for now until the correct code
has been added.
@
text
@/**************************************************************************

Copyright 1998-1999 Precision Insight, Inc., Cedar Park, Texas.
All Rights Reserved.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sub license, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice (including the
next paragraph) shall be included in all copies or substantial portions
of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
IN NO EVENT SHALL PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR
ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

**************************************************************************/

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

/*
 * Authors:
 *   Daryll Strauss <daryll@@precisioninsight.com>
 *
 */

#include "xf86.h"
#include "xf86_OSproc.h"
#include "compiler.h"

#ifdef BUILD_FOR_I830
#include "i830.h"
#define pI810 intel
#define I810Ptr intel_screen_private *
#define I810WriteControlPIO I830WriteControlPIO
#define I810ReadControlPIO I830ReadControlPIO
#define I810WriteStandardPIO I830WriteStandardPIO
#define I810ReadStandardPIO I830ReadStandardPIO
#define I810SetPIOAccess I830SetPIOAccess
#define I810WriteControlMMIO I830WriteControlMMIO
#define I810ReadControlMMIO I830ReadControlMMIO
#define I810WriteStandardMMIO I830WriteStandardMMIO
#define I810ReadStandardMMIO I830ReadStandardMMIO
#define I810SetMMIOAccess I830SetMMIOAccess
#else
#include "i810.h"
#endif

#define minb(p) *(volatile uint8_t *)(pI810->MMIOBase + (p))
#define moutb(p,v) *(volatile uint8_t *)(pI810->MMIOBase + (p)) = (v)

static void
I810WriteControlPIO(I810Ptr pI810, IOADDRESS addr, uint8_t index, uint8_t val)
{
   addr += pI810->ioBase;
   outb(addr, index);
   outb(addr + 1, val);
}

static uint8_t
I810ReadControlPIO(I810Ptr pI810, IOADDRESS addr, uint8_t index)
{
   addr += pI810->ioBase;
   outb(addr, index);
   return inb(addr + 1);
}

static void
I810WriteStandardPIO(I810Ptr pI810, IOADDRESS addr, uint8_t val)
{
   outb(pI810->ioBase + addr, val);
}

static uint8_t
I810ReadStandardPIO(I810Ptr pI810, IOADDRESS addr)
{
   return inb(pI810->ioBase + addr);
}

void
I810SetPIOAccess(I810Ptr pI810)
{
   pI810->writeControl = I810WriteControlPIO;
   pI810->readControl = I810ReadControlPIO;
   pI810->writeStandard = I810WriteStandardPIO;
   pI810->readStandard = I810ReadStandardPIO;
}

static void
I810WriteControlMMIO(I810Ptr pI810, IOADDRESS addr, uint8_t index, uint8_t val)
{
   moutb(addr, index);
   moutb(addr + 1, val);
}

static uint8_t
I810ReadControlMMIO(I810Ptr pI810, IOADDRESS addr, uint8_t index)
{
   moutb(addr, index);
   return minb(addr + 1);
}

static void
I810WriteStandardMMIO(I810Ptr pI810, IOADDRESS addr, uint8_t val)
{
   moutb(addr, val);
}

static uint8_t
I810ReadStandardMMIO(I810Ptr pI810, IOADDRESS addr)
{
   return minb(addr);
}

void
I810SetMMIOAccess(I810Ptr pI810)
{
   pI810->writeControl = I810WriteControlMMIO;
   pI810->readControl = I810ReadControlMMIO;
   pI810->writeStandard = I810WriteStandardMMIO;
   pI810->readStandard = I810ReadStandardMMIO;
}
@


1.3
log
@Update the intel driver to 2.9.1 plus backports.

2.9.1 is the last version of the intel DDX that supports UMS (User
modesetting), with 2.10 onwards being purely KMS only. As such, this
driver contains backports of almost every correctness or performance
related fix to the rendering layer in later intel drivers. This driver
*REQUIRES* a GEM enabled kernel. it claims to support non-gem mode but
this is essentially unmaintained and due to the way the abstraciton
works is slow, if it works at all (it often does not). You have been
warned.

tested by many many people on tech over the last few weeks.
@
text
@@


1.2
log
@Update to xf86-video-intel 2.3.1. Tested by many.
@
text
@a26 1
/* $XFree86: xc/programs/Xserver/hw/xfree86/drivers/i810/i810_io.c,v 1.4 2002/01/25 21:56:04 tsi Exp $ */
a32 13
 * Reformatted with GNU indent (2.2.8), using the following options:
 *
 *    -bad -bap -c41 -cd0 -ncdb -ci6 -cli0 -cp0 -ncs -d0 -di3 -i3 -ip3 -l78
 *    -lp -npcs -psl -sob -ss -br -ce -sc -hnl
 *
 * This provides a good match with the original i810 code and preferred
 * XFree86 formatting conventions.
 *
 * When editing this driver, please follow the existing formatting, and edit
 * with <TAB> characters expanded at 8-column intervals.
 */

/*
d44 2
a45 2
#define pI810 pI830
#define I810Ptr I830Ptr
@


1.1
log
@Initial revision
@
text
@d74 2
a75 2
#define minb(p) *(volatile CARD8 *)(pI810->MMIOBase + (p))
#define moutb(p,v) *(volatile CARD8 *)(pI810->MMIOBase + (p)) = (v)
d78 1
a78 1
I810WriteControlPIO(I810Ptr pI810, IOADDRESS addr, CARD8 index, CARD8 val)
d85 2
a86 2
static CARD8
I810ReadControlPIO(I810Ptr pI810, IOADDRESS addr, CARD8 index)
d94 1
a94 1
I810WriteStandardPIO(I810Ptr pI810, IOADDRESS addr, CARD8 val)
d99 1
a99 1
static CARD8
d115 1
a115 1
I810WriteControlMMIO(I810Ptr pI810, IOADDRESS addr, CARD8 index, CARD8 val)
d121 2
a122 2
static CARD8
I810ReadControlMMIO(I810Ptr pI810, IOADDRESS addr, CARD8 index)
d129 1
a129 1
I810WriteStandardMMIO(I810Ptr pI810, IOADDRESS addr, CARD8 val)
d134 1
a134 1
static CARD8
@


1.1.1.1
log
@Importing xf86-video-i810 1.7.2
@
text
@@
