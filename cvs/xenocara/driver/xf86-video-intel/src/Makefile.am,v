head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.6
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.4
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.2
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.11.0.6
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.2
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.4
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.2
	OPENBSD_5_0:1.7.0.6
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.2
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	v2_2_0_90:1.1.1.2
	v2_2_0:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_7_4:1.1.1.1
	v1_7_3:1.1.1.1
	v1_7_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2015.04.12.19.42.05;	author matthieu;	state Exp;
branches;
next	1.11;
commitid	DK857Z2Au1JEohAk;

1.11
date	2014.02.03.15.54.51;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2013.03.18.18.38.20;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2012.09.09.21.13.06;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2011.11.29.12.39.02;	author oga;	state Exp;
branches;
next	1.7;

1.7
date	2010.05.23.21.28.34;	author oga;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.10.22.32.28;	author oga;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.25.20.16.43;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2008.10.12.15.20.50;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.21.20.19.51;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.01.16.23.20.50;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.06.42;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.06.42;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.19.44.55;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Update to xf86-video-intel 2.99.916
Fixes a display bug seenby ajacoutot@@, ok jsg@@ and kettenis@@.
newer X.Org (2.99.917 or master) version cause corruption on older
machines (X40, i965), probably caused by a bug in our kernel,
under investigation by kettenis@@.
@
text
@#  Copyright 2005 Adam Jackson.
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation
#  on the rights to use, copy, modify, merge, publish, distribute, sub
#  license, and/or sell copies of the Software, and to permit persons to whom
#  the Software is furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice (including the next
#  paragraph) shall be included in all copies or substantial portions of the
#  Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
#  ADAM JACKSON BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

SUBDIRS = render_program legacy

# this is obnoxious:
# -module lets us name the module exactly how we want
# -avoid-version prevents gratuitous .0.0.0 version numbers on the end
# _ladir passes a dummy rpath to libtool so the thing will actually link
# TODO: -nostdlib/-Bstatic/-lgcc platform magic, not installing the .a, etc.

AM_CFLAGS = \
	@@CWARNFLAGS@@ \
	$(XORG_CFLAGS) \
	$(DRM_CFLAGS) \
	$(PCIACCESS_CFLAGS) \
	@@NOWARNFLAGS@@ \
	$(NULL)

if VALGRIND
AM_CFLAGS += $(VALGRIND_CFLAGS)
endif

intel_drv_la_LTLIBRARIES = intel_drv.la
intel_drv_la_LDFLAGS = -module -avoid-version
intel_drv_ladir = $(moduledir)/drivers
intel_drv_la_LIBADD = legacy/liblegacy.la $(PCIACCESS_LIBS) $(XORG_LIBS)

if SNA
SUBDIRS += sna
intel_drv_la_LIBADD += sna/libsna.la
endif

if UXA
SUBDIRS += uxa
intel_drv_la_LIBADD += uxa/libuxa.la
endif

NULL:=#

intel_drv_la_SOURCES = \
	backlight.c \
	backlight.h \
	fd.h \
	fd.c \
	i915_pciids.h \
	intel_list.h \
	intel_options.h \
	intel_device.c \
	intel_driver.h \
	intel_options.c \
	intel_module.c \
	compat-api.h \
	$(NULL)

EXTRA_DIST = \
	scripts/clock.5c \
	scripts/clock-graph.5c \
	scripts/fix.5c \
	scripts/tv.5c \
	$(NULL)
@


1.11
log
@Update to xf86-video-intel 2.99.909
Tested by jsg@@, kettenis@@ and myself on a wide range of intel cards.
@
text
@d37 4
d59 4
@


1.10
log
@Update to xf86-video-intel 2.20.19.

A recent kernel with kernel modesetting support is required.
Thanks to jsg@@ and kettenis@@ for their work.
@
text
@d21 1
a21 1
SUBDIRS = xvmc render_program legacy
d29 7
a35 1
AM_CFLAGS = @@CWARNFLAGS@@ @@XORG_CFLAGS@@ @@DRM_CFLAGS@@ @@PCIACCESS_CFLAGS@@
d39 2
a40 2
intel_drv_ladir = @@moduledir@@/drivers
intel_drv_la_LIBADD = legacy/liblegacy.la @@PCIACCESS_LIBS@@
d47 5
d55 1
d58 2
d65 5
a69 44
if UXA
AM_CFLAGS += @@UDEV_CFLAGS@@ @@DRM_CFLAGS@@ @@DRMINTEL_CFLAGS@@
AM_CFLAGS += -I$(top_srcdir)/uxa -I$(top_srcdir)/src/render_program
intel_drv_la_LIBADD += @@UDEV_LIBS@@ @@DRMINTEL_LIBS@@ @@DRM_LIBS@@ ../uxa/libuxa.la
intel_drv_la_SOURCES += \
         brw_defines.h \
         brw_structs.h \
         common.h \
         intel.h \
         intel_batchbuffer.c \
         intel_batchbuffer.h \
	 intel_display.c \
         intel_driver.c \
         intel_driver.h \
	 intel_glamor.h \
         intel_memory.c \
	 intel_uxa.c \
         intel_video.c \
         intel_video.h \
	 i830_3d.c \
	 i830_render.c \
	 i830_reg.h \
	 i915_3d.h \
	 i915_reg.h \
	 i915_3d.c \
	 i915_render.c \
	 i915_video.c \
	 i965_reg.h \
	 i965_3d.c \
	 i965_video.c \
	 i965_render.c \
	 $(NULL)

if GLAMOR
AM_CFLAGS += @@LIBGLAMOR_CFLAGS@@
intel_drv_la_LIBADD += @@LIBGLAMOR_LIBS@@
intel_drv_la_SOURCES += \
	 intel_glamor.c \
	 $(NULL)
endif

if DRI2
intel_drv_la_SOURCES += \
	intel_dri.c \
a70 12
intel_drv_la_LIBADD += \
	$(DRI_LIBS) \
	$(NULL)
endif

if XVMC
intel_drv_la_SOURCES += \
	intel_hwmc.h \
	intel_hwmc.c \
	$(NULL)
endif
endif
@


1.9
log
@Add compat-api.h. 1st step to get this version of the intel driver
working with xserver 1.13.
@
text
@d21 1
a21 1
SUBDIRS = xvmc ch7017 ch7xxx ivch sil164 tfp410 render_program legacy
d29 1
a29 2
AM_CFLAGS = @@CWARNFLAGS@@ @@XORG_CFLAGS@@ @@DRM_CFLAGS@@ @@DRI_CFLAGS@@ \
	@@PCIACCESS_CFLAGS@@ -I$(top_srcdir)/uxa -I$(top_srcdir)/src/render_program
d34 6
a39 2
intel_drv_la_LIBADD = -lm @@DRM_LIBS@@ -ldrm_intel ../uxa/libuxa.la legacy/liblegacy.la
intel_drv_la_LIBADD += @@PCIACCESS_LIBS@@
d44 12
a58 1
	 i2c_vid.h \
a59 2
	 intel_module.c \
         intel_driver.c \
d62 4
a66 1
	 intel_shadow.c \
a70 15
         i830_bios.c \
         i830_bios.h \
         i830_common.h \
	 i830_crt.c \
         i830_cursor.c \
	 i830_display.c \
	 i830_display.h \
         i830_quirks.c \
	 i830_dvo.c \
         i830.h \
	 i830_hdmi.c \
         i830_i2c.c \
         i830_io.c \
	 i830_lvds.c \
         i830_modes.c \
a72 6
         i830_ring.h \
	 i830_sdvo.c \
	 i830_sdvo.h \
	 i830_sdvo_regs.h \
	 i830_tv.c \
	 i915_3d.c \
d75 1
a81 2
	 drmmode_display.c \
	 compat-api.h \
d84 9
a92 1
if DRI
d106 1
@


1.8
log
@Update the intel driver to a more recent version based on more recent
upsteam code.

Backporting keeping UMS changes by me, some bugfixes from kettenis@@.

Has been in snapshots for a while, committed on request so we can be
sure what people are running. This is a prerequesite for sandybridge
support but has those chipsets disabled for now until the correct code
has been added.
@
text
@d88 1
@


1.7
log
@Pull in the changes in rendering that I skipped when i backported
changes from later intel versions (after the UMS removal). 95% of this
is the xvmc reworks that makes that code even halfway sane. xvmc is now
enabled by default on 965+.

Tested by many on tech@@, thanks!

ok matthieu@@
@
text
@d21 1
a21 1
SUBDIRS = xvmc bios_reader ch7017 ch7xxx ivch sil164 tfp410 reg_dumper render_program
d35 1
a35 1
intel_drv_la_LIBADD = -lm @@DRM_LIBS@@ -ldrm_intel ../uxa/libuxa.la
d38 1
a38 13
INTEL_DRI_SRCS = \
         i810_dri.c \
         i810_dri.h \
         i830_dri.c \
         i810_hwmc.c \
         i830_dri.h

INTEL_XVMC_SRCS = \
	 i830_hwmc.h \
	 i830_hwmc.c \
         i915_hwmc.h \
         i965_hwmc.h

d45 10
a54 12
         i810_accel.c \
         i810_common.h \
         i810_cursor.c \
         i810_dga.c \
         i810_driver.c \
         i810.h \
         i810_io.c \
         i810_memory.c \
         i810_reg.h \
         i810_ring.h \
         i810_video.c \
         i810_wmark.c \
a55 1
         i830_accel.c \
a57 2
         i830_batchbuffer.c \
         i830_batchbuffer.h \
a63 1
         i830_driver.c \
a69 1
         i830_memory.c \
d71 1
a71 2
         i830_video.c \
         i830_video.h \
d81 1
d83 2
a85 3
	 i830_uxa.c \
	 i830_render.c \
	 i915_render.c \
d87 2
a88 6
	 drmmode_display.c

EXTRA_DIST = 		\
	$(XMODE_SRCS)	\
	$(INTEL_DRI_SRCS) \
	$(INTEL_XVMC_SRCS)
d92 2
a93 1
	$(INTEL_DRI_SRCS)
d95 2
a96 1
	$(DRI_LIBS)
d101 3
a103 1
	$(INTEL_XVMC_SRCS)
@


1.6
log
@Update the intel driver to 2.9.1 plus backports.

2.9.1 is the last version of the intel DDX that supports UMS (User
modesetting), with 2.10 onwards being purely KMS only. As such, this
driver contains backports of almost every correctness or performance
related fix to the rendering layer in later intel drivers. This driver
*REQUIRES* a GEM enabled kernel. it claims to support non-gem mode but
this is essentially unmaintained and due to the way the abstraciton
works is slow, if it works at all (it often does not). You have been
warned.

tested by many many people on tech over the last few weeks.
@
text
@a47 1
         i915_hwmc.c \
a48 1
         i965_hwmc.c \
@


1.5
log
@update to xf86-video-intel 2.7.1. Tested by many.
@
text
@d21 1
a21 5
if LIBPCIACCESS
REGDUMPER = reg_dumper
endif

SUBDIRS = xvmc bios_reader ch7017 ch7xxx ivch sil164 tfp410 $(REGDUMPER)
d29 2
a30 3
AM_CFLAGS = @@WARN_CFLAGS@@ @@XORG_CFLAGS@@ @@DRM_CFLAGS@@ @@DRI_CFLAGS@@ \
	@@PCIACCESS_CFLAGS@@ -I$(top_srcdir)/uxa \
	@@XMODES_CFLAGS@@ -DI830_XV -DI830_USE_XAA -DI830_USE_EXA -DI830_USE_UXA
a35 1
if XSERVER_LIBPCIACCESS
a36 18
endif

XMODE_SRCS=\
	 local_xf86Rename.h \
	 parser/xf86Parser.h \
	 parser/xf86Optrec.h \
	 modes/xf86Modes.h \
	 modes/xf86Modes.c \
	 modes/xf86cvt.c \
	 modes/xf86Crtc.h \
	 modes/xf86Crtc.c \
	 modes/xf86Cursors.c \
	 modes/xf86EdidModes.c \
	 modes/xf86RandR12.c \
	 modes/xf86RandR12.h \
	 modes/xf86Rename.h \
	 modes/xf86Rotate.c \
	 modes/xf86DiDGA.c
a79 2
	 i830_debug.c \
	 i830_debug.h \
d105 1
a105 2
	 i830_exa.c \
	 i830_xaa.c \
a110 47
INTEL_G4A =				\
	packed_yuv_sf.g4a		\
	packed_yuv_wm.g4a		\
	exa_sf.g4a 			\
	exa_sf_mask.g4a 		\
	exa_wm_src_affine.g4a 		\
	exa_wm_src_projective.g4a 	\
	exa_wm_src_sample_argb.g4a 	\
	exa_wm_src_sample_a.g4a 	\
	exa_wm_src_sample_planar.g4a 	\
	exa_wm_mask_affine.g4a 		\
	exa_wm_mask_projective.g4a 	\
	exa_wm_mask_sample_argb.g4a 	\
	exa_wm_mask_sample_a.g4a 	\
	exa_wm_noca.g4a			\
	exa_wm_ca.g4a			\
	exa_wm_ca_srcalpha.g4a		\
	exa_wm_write.g4a 		\
	exa_wm_yuv_rgb.g4a		\
	exa_wm_xy.g4a

INTEL_G4I =				\
	exa_wm.g4i			\
	exa_wm_affine.g4i		\
	exa_wm_projective.g4i

INTEL_G4B = 				\
	packed_yuv_sf.g4b		\
	packed_yuv_wm.g4b		\
	exa_sf.g4b 			\
	exa_sf_mask.g4b 		\
	exa_wm_src_affine.g4b 		\
	exa_wm_src_projective.g4b 	\
	exa_wm_src_sample_argb.g4b 	\
	exa_wm_src_sample_a.g4b 	\
	exa_wm_src_sample_planar.g4b 	\
	exa_wm_mask_affine.g4b 		\
	exa_wm_mask_projective.g4b 	\
	exa_wm_mask_sample_argb.g4b 	\
	exa_wm_mask_sample_a.g4b 	\
	exa_wm_noca.g4b			\
	exa_wm_ca.g4b			\
	exa_wm_ca_srcalpha.g4b		\
	exa_wm_write.g4b 		\
	exa_wm_yuv_rgb.g4b		\
	exa_wm_xy.g4b

a112 3
	$(INTEL_G4A)	\
	$(INTEL_G4I)	\
	$(INTEL_G4B)	\
a114 19

if HAVE_GEN4ASM

SUFFIXES = .g4a .g4b
.g4a.g4b:
	m4 -I$(srcdir) -s $< > $*.g4m && intel-gen4asm -o $@@ $*.g4m && rm $*.g4m

$(INTEL_G4B): $(INTEL_G4I)

BUILT_SOURCES= $(INTEL_G4B)

clean-local:
	-rm -f $(INTEL_G4B)
endif

if XMODES
intel_drv_la_SOURCES += \
	$(XMODE_SRCS)
endif
@


1.4
log
@xf86-video-intel 2.4.2. Has been in snapshots for weeks. Ok oga@@.
@
text
@d33 3
a35 2
AM_CFLAGS = @@WARN_CFLAGS@@ @@XORG_CFLAGS@@ @@DRI_CFLAGS@@ @@PCIACCESS_CFLAGS@@ \
	@@XMODES_CFLAGS@@ -DI830_XV -DI830_USE_XAA -DI830_USE_EXA
d40 1
a40 1
intel_drv_la_LIBADD =
d73 3
a75 1
         i915_hwmc.h
d99 2
d135 2
a136 1
	 i965_render.c
a162 1

@


1.3
log
@Update to xf86-video-intel 2.3.1. Tested by many.
@
text
@d39 4
d107 1
d141 1
d150 1
d168 1
d177 1
d192 1
a192 1
	m4 -s $*.g4a > $*.g4m && intel-gen4asm -o $@@ $*.g4m && rm $*.g4m
d210 2
@


1.2
log
@Based on a suggestion and an initial patch by kettenis@@, build
both the old i810 and the new intel drivers on i386, and let X
autoconfiguration code choose the one that is used based on the chipset.
Tested by landry@@ and a few others.
@
text
@d33 2
a34 2
AM_CFLAGS = @@WARN_CFLAGS@@ @@XORG_CFLAGS@@ @@DRI_CFLAGS@@ @@XMODES_CFLAGS@@ \
	-DI830_XV -DI830_USE_XAA -DI830_USE_EXA
d64 7
a73 2
	 sf_prog.h \
         wm_prog.h \
d85 1
d111 1
d132 38
a169 18
	exa_sf_rotation.g4a		\
	exa_wm_maskca.g4a 		\
	exa_wm_maskca_srcalpha.g4a 	\
	exa_wm_masknoca.g4a 		\
	exa_wm_nomask.g4a		\
	exa_wm_rotation.g4a

INTEL_G4H = 				\
	sf_prog.h			\
	wm_prog.h 			\
	exa_sf_mask_prog.h		\
	exa_sf_prog.h 			\
	exa_sf_rotation_prog.h		\
	exa_wm_maskca_prog.h		\
	exa_wm_maskca_srcalpha_prog.h	\
	exa_wm_masknoca_prog.h		\
	exa_wm_nomask_prog.h		\
	exa_wm_rotation_prog.h
d174 4
a177 2
	$(INTEL_G4H)	\
	$(INTEL_DRI_SRCS)
d181 3
a183 11
sf_prog.h: packed_yuv_sf.g4a
	intel-gen4asm -o sf_prog.h packed_yuv_sf.g4a

wm_prog.h: packed_yuv_wm.g4a
	intel-gen4asm -o wm_prog.h packed_yuv_wm.g4a

exa_sf_mask_prog.h: exa_sf_mask.g4a
	intel-gen4asm -o exa_sf_mask_prog.h exa_sf_mask.g4a

exa_sf_prog.h: exa_sf.g4a
	intel-gen4asm -o exa_sf_prog.h exa_sf.g4a
d185 1
a185 2
exa_sf_rotation_prog.h: exa_sf_rotation.g4a
	intel-gen4asm -o exa_sf_rotation_prog.h exa_sf_rotation.g4a
d187 1
a187 14
exa_wm_maskca_prog.h: exa_wm_maskca.g4a
	intel-gen4asm -o exa_wm_maskca_prog.h exa_wm_maskca.g4a

exa_wm_maskca_srcalpha_prog.h: exa_wm_maskca_srcalpha.g4a
	intel-gen4asm -o exa_wm_maskca_srcalpha_prog.h exa_wm_maskca_srcalpha.g4a

exa_wm_masknoca_prog.h: exa_wm_masknoca.g4a
	intel-gen4asm -o exa_wm_masknoca_prog.h exa_wm_masknoca.g4a

exa_wm_nomask_prog.h: exa_wm_nomask.g4a
	intel-gen4asm -o exa_wm_nomask_prog.h exa_wm_nomask.g4a

exa_wm_rotation_prog.h: exa_wm_rotation.g4a
	intel-gen4asm -o exa_wm_rotation_prog.h exa_wm_rotation.g4a
d189 2
d203 4
@


1.1
log
@Initial revision
@
text
@d21 6
a26 1
SUBDIRS = xvmc
a31 1
AM_CFLAGS = @@XORG_CFLAGS@@ @@DRI_CFLAGS@@ -DI830_XV
d33 30
a62 3
i810_drv_la_LTLIBRARIES = i810_drv.la
i810_drv_la_LDFLAGS = -module -avoid-version
i810_drv_ladir = @@moduledir@@/drivers
d64 1
a64 1
i810_drv_la_SOURCES = \
d70 1
d82 1
d84 2
d87 1
d89 5
a93 1
         i830_dga.c \
d95 1
d97 1
d99 1
a103 3
         i830_rotate.c \
	 i830_randr.c \
	 i830_3d.c \
d105 4
d112 37
a148 1
	 i915_video.c
d151 1
d154 1
d157 30
d190 2
a191 6
i810_drv_la_SOURCES += \
         i810_dri.c \
         i810_dri.h \
         i830_dri.c \
         i810_hwmc.c \
         i830_dri.h 
a193 3
EXTRA_DIST = \
	packed_yuv_sf.g4a \
	packed_yuv_wm.g4a
@


1.1.1.1
log
@Importing xf86-video-i810 1.7.2
@
text
@@


1.1.1.2
log
@xf86-video-intel 2.2.0
@
text
@d21 1
a21 6
if LIBPCIACCESS
REGDUMPER = reg_dumper
endif

SUBDIRS = xvmc bios_reader ch7017 ch7xxx ivch sil164 tfp410 $(REGDUMPER)

d27 1
d29 3
a31 23
AM_CFLAGS = @@WARN_CFLAGS@@ @@XORG_CFLAGS@@ @@DRI_CFLAGS@@ @@XMODES_CFLAGS@@ \
	-DI830_XV -DI830_USE_XAA -DI830_USE_EXA

intel_drv_la_LTLIBRARIES = intel_drv.la
intel_drv_la_LDFLAGS = -module -avoid-version
intel_drv_ladir = @@moduledir@@/drivers

XMODE_SRCS=\
	 local_xf86Rename.h \
	 parser/xf86Parser.h \
	 parser/xf86Optrec.h \
	 modes/xf86Modes.h \
	 modes/xf86Modes.c \
	 modes/xf86cvt.c \
	 modes/xf86Crtc.h \
	 modes/xf86Crtc.c \
	 modes/xf86Cursors.c \
	 modes/xf86EdidModes.c \
	 modes/xf86RandR12.c \
	 modes/xf86RandR12.h \
	 modes/xf86Rename.h \
	 modes/xf86Rotate.c \
	 modes/xf86DiDGA.c
d33 1
a33 8
INTEL_DRI_SRCS = \
         i810_dri.c \
         i810_dri.h \
         i830_dri.c \
         i810_hwmc.c \
         i830_dri.h

intel_drv_la_SOURCES = \
a38 1
	 i2c_vid.h \
a49 1
	 i830_3d.c \
a50 2
         i830_bios.c \
         i830_bios.h \
a51 1
	 i830_crt.c \
d53 1
a53 5
	 i830_debug.c \
	 i830_debug.h \
	 i830_display.c \
	 i830_display.h \
         i830_quirks.c \
a54 1
	 i830_dvo.c \
a55 1
         i830_i2c.c \
a56 1
	 i830_lvds.c \
d61 3
a64 4
	 i830_sdvo.c \
	 i830_sdvo.h \
	 i830_sdvo_regs.h \
	 i830_tv.c \
d68 1
a68 37
	 i915_video.c \
	 i965_video.c \
	 i830_exa.c \
	 i830_xaa.c \
	 i830_render.c \
	 i915_render.c \
	 i965_render.c

INTEL_G4A =				\
	packed_yuv_sf.g4a		\
	packed_yuv_wm.g4a		\
	exa_sf.g4a 			\
	exa_sf_mask.g4a 		\
	exa_sf_rotation.g4a		\
	exa_wm_maskca.g4a 		\
	exa_wm_maskca_srcalpha.g4a 	\
	exa_wm_masknoca.g4a 		\
	exa_wm_nomask.g4a		\
	exa_wm_rotation.g4a

INTEL_G4H = 				\
	sf_prog.h			\
	wm_prog.h 			\
	exa_sf_mask_prog.h		\
	exa_sf_prog.h 			\
	exa_sf_rotation_prog.h		\
	exa_wm_maskca_prog.h		\
	exa_wm_maskca_srcalpha_prog.h	\
	exa_wm_masknoca_prog.h		\
	exa_wm_nomask_prog.h		\
	exa_wm_rotation_prog.h

EXTRA_DIST = 		\
	$(XMODE_SRCS)	\
	$(INTEL_G4A)	\
	$(INTEL_G4H)	\
	$(INTEL_DRI_SRCS)
a70 1

a72 1

a74 30

exa_sf_mask_prog.h: exa_sf_mask.g4a
	intel-gen4asm -o exa_sf_mask_prog.h exa_sf_mask.g4a

exa_sf_prog.h: exa_sf.g4a
	intel-gen4asm -o exa_sf_prog.h exa_sf.g4a

exa_sf_rotation_prog.h: exa_sf_rotation.g4a
	intel-gen4asm -o exa_sf_rotation_prog.h exa_sf_rotation.g4a

exa_wm_maskca_prog.h: exa_wm_maskca.g4a
	intel-gen4asm -o exa_wm_maskca_prog.h exa_wm_maskca.g4a

exa_wm_maskca_srcalpha_prog.h: exa_wm_maskca_srcalpha.g4a
	intel-gen4asm -o exa_wm_maskca_srcalpha_prog.h exa_wm_maskca_srcalpha.g4a

exa_wm_masknoca_prog.h: exa_wm_masknoca.g4a
	intel-gen4asm -o exa_wm_masknoca_prog.h exa_wm_masknoca.g4a

exa_wm_nomask_prog.h: exa_wm_nomask.g4a
	intel-gen4asm -o exa_wm_nomask_prog.h exa_wm_nomask.g4a

exa_wm_rotation_prog.h: exa_wm_rotation.g4a
	intel-gen4asm -o exa_wm_rotation_prog.h exa_wm_rotation.g4a

endif

if XMODES
intel_drv_la_SOURCES += \
	$(XMODE_SRCS)
d78 6
a83 2
intel_drv_la_SOURCES += \
	$(INTEL_DRI_SRCS)
d86 3
a88 5
install-data-local: install-intel_drv_laLTLIBRARIES
	(cd $(DESTDIR)$(intel_drv_ladir) && rm -f i810_drv.so && ln -s intel_drv.so i810_drv.so)

uninstall-local:
	(cd $(DESTDIR)$(intel_drv_ladir) && rm -f i810_drv.so)
@

