head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2014.02.03.15.54.54;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2010.05.10.22.32.30;	author oga;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to xf86-video-intel 2.99.909
Tested by jsg@@, kettenis@@ and myself on a wide range of intel cards.
@
text
@/* GRF allocation:
   g1~g30: constant buffer
           g1~g2:intra IQ matrix
           g3~g4:non intra IQ matrix
           g5~g20:IDCT table
   g31:    thread payload 
   g32:    message descriptor for reading reference data
   g58~g81:reference data
   g82:    thread payload backup
   g83~g106:IDCT data                           */

mov (1) g32.8<1>UD 0x007001FUD {align1};
and.nz (1) null g32.16<1,1,1>UW 1UW {align1};
(f0) jmpi read_backward;

send (16) 0 g38.0<1>UW g32<8,8,1>UW read(4, 2, 0, 2) mlen 1 rlen 8 {align1};
add (1) g32.4<1>UD g32.4<1,1,1>UD 8UD {align1};
send (16) 0 g46.0<1>UW g32<8,8,1>UW read(4, 2, 0, 2) mlen 1 rlen 8 {align1};
add (1) g32.4<1>UD g32.4<1,1,1>UD 8UD {align1};
mov (1) g32.8<1>UD 0x1FUD {align1};
send (16) 0 g54.0<1>UW g32<8,8,1>UW read(4, 2, 0, 2) mlen 1 rlen 1 {align1};
jmpi put_data;

read_backward:
send (16) 0 g38.0<1>UW g32<8,8,1>UW read(7, 2, 0, 2) mlen 1 rlen 8 {align1};
add (1) g32.4<1>UD g32.4<1,1,1>UD 8UD {align1};
send (16) 0 g46.0<1>UW g32<8,8,1>UW read(7, 2, 0, 2) mlen 1 rlen 8 {align1};
add (1) g32.4<1>UD g32.4<1,1,1>UD 8UD {align1};
mov (1) g32.8<1>UD 0x1FUD {align1};
send (16) 0 g54.0<1>UW g32<8,8,1>UW read(7, 2, 0, 2) mlen 1 rlen 1 {align1};

put_data:
avg (16) g58.0<1>UW g38.0<16,16,1>UB g39.0<16,16,1>UB {align1};
avg (16) g59.0<1>UW g39.0<16,16,1>UB g40.0<16,16,1>UB {align1};
avg (16) g60.0<1>UW g40.0<16,16,1>UB g41.0<16,16,1>UB {align1};
avg (16) g61.0<1>UW g41.0<16,16,1>UB g42.0<16,16,1>UB {align1};
avg (16) g62.0<1>UW g42.0<16,16,1>UB g43.0<16,16,1>UB {align1};
avg (16) g63.0<1>UW g43.0<16,16,1>UB g44.0<16,16,1>UB {align1};
avg (16) g64.0<1>UW g44.0<16,16,1>UB g45.0<16,16,1>UB {align1};
avg (16) g65.0<1>UW g45.0<16,16,1>UB g46.0<16,16,1>UB {align1};
avg (16) g66.0<1>UW g46.0<16,16,1>UB g47.0<16,16,1>UB {align1};
avg (16) g67.0<1>UW g47.0<16,16,1>UB g48.0<16,16,1>UB {align1};
avg (16) g68.0<1>UW g48.0<16,16,1>UB g49.0<16,16,1>UB {align1};
avg (16) g69.0<1>UW g49.0<16,16,1>UB g50.0<16,16,1>UB {align1};
avg (16) g70.0<1>UW g50.0<16,16,1>UB g51.0<16,16,1>UB {align1};
avg (16) g71.0<1>UW g51.0<16,16,1>UB g52.0<16,16,1>UB {align1};
avg (16) g72.0<1>UW g52.0<16,16,1>UB g53.0<16,16,1>UB {align1};
avg (16) g73.0<1>UW g53.0<16,16,1>UB g54.0<16,16,1>UB {align1};

@


1.1
log
@Update the intel driver to 2.9.1 plus backports.

2.9.1 is the last version of the intel DDX that supports UMS (User
modesetting), with 2.10 onwards being purely KMS only. As such, this
driver contains backports of almost every correctness or performance
related fix to the rendering layer in later intel drivers. This driver
*REQUIRES* a GEM enabled kernel. it claims to support non-gem mode but
this is essentially unmaintained and due to the way the abstraciton
works is slow, if it works at all (it often does not). You have been
warned.

tested by many many people on tech over the last few weeks.
@
text
@@

