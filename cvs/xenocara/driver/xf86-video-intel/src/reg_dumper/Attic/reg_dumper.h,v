head	1.6;
access;
symbols
	OPENBSD_5_3:1.5.0.12
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.10
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.8
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v2_2_0_90:1.1.1.1
	v2_2_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2013.03.18.18.38.21;	author matthieu;	state dead;
branches;
next	1.5;

1.5
date	2010.05.10.22.32.29;	author oga;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.25.20.16.43;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.10.12.15.20.51;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.21.20.19.52;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.24.19.45.02;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.11.24.19.45.02;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xf86-video-intel 2.20.19.

A recent kernel with kernel modesetting support is required.
Thanks to jsg@@ and kettenis@@ for their work.
@
text
@/*
 * Copyright Â© 2007 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Authors:
 *    Eric Anholt <eric@@anholt.net>
 *
 */

#include <inttypes.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <pciaccess.h>
#include "common.h"

/** @@file
 * This file defines the typedefs and stub structures necessary for us to
 * use i830_debug.c mostly unmodified.
 */

typedef char Bool;

#define FALSE 0
#define TRUE 1

#define X_INFO 0
#define X_WARNING 1
#define X_ERROR 2

typedef struct _i830 {
	/* Fields in common with the real pI830 */
	struct pci_device *PciInfo;
	Bool use_drm_mode;

	/* Fields used for setting up reg_dumper */
	volatile unsigned char *mmio;
} I830Rec, *I830Ptr;

typedef struct _scrn {
	/* Fields in common with the real pScrn */
	int scrnIndex;

	/* Fields used for setting up reg_dumper */
	I830Ptr pI830;
} ScrnInfoRec, *ScrnInfoPtr;

#define I830PTR(pScrn) (pScrn->pI830)

#define ARRAY_SIZE(x) (sizeof(x) / sizeof(x[0]))

#define INREG8(reg) (*(volatile uint8_t *)((pI830)->mmio + (reg)))
#define INREG16(reg) (*(volatile uint16_t *)((pI830)->mmio + (reg)))
#define INREG(reg) (*(volatile uint32_t *)((pI830)->mmio + (reg)))
#define OUTREG8(reg, val) \
	*(volatile uint8_t *)((pI830)->mmio + (reg)) = (val)
#define OUTREG16(reg, val) \
	*(volatile uint16_t *)((pI830)->mmio + (reg)) = (val)
#define OUTREG(reg, val) \
	*(volatile uint32_t *)((pI830)->mmio + (reg)) = (val)

#define xalloc malloc
#define xfree free
#define ErrorF printf

char *XNFprintf(const char *format, ...);
void xf86DrvMsg(int scrnIndex, int severity, const char *format, ...);
void i830DumpRegs(ScrnInfoPtr pScrn);
void intel_i830rec_init(I830Ptr pI830);
@


1.5
log
@Update the intel driver to 2.9.1 plus backports.

2.9.1 is the last version of the intel DDX that supports UMS (User
modesetting), with 2.10 onwards being purely KMS only. As such, this
driver contains backports of almost every correctness or performance
related fix to the rendering layer in later intel drivers. This driver
*REQUIRES* a GEM enabled kernel. it claims to support non-gem mode but
this is essentially unmaintained and due to the way the abstraciton
works is slow, if it works at all (it often does not). You have been
warned.

tested by many many people on tech over the last few weeks.
@
text
@@


1.4
log
@update to xf86-video-intel 2.7.1. Tested by many.
@
text
@d32 1
d49 4
a52 3
struct pci_info_rec {
    uint16_t chipType;
};
d54 2
a55 9
typedef struct _i830 {
    /* Fields in common with the real pI830 */
    struct pci_info_rec *PciInfo;
    Bool use_drm_mode;

    /* Fields used for setting up reg_dumper */
    struct pci_device *pci_dev;
    struct pci_info_rec pci_info_rec;
    volatile unsigned char *mmio;
d59 2
a60 2
    /* Fields in common with the real pScrn */
    int scrnIndex;
d62 2
a63 2
    /* Fields used for setting up reg_dumper */
    I830Ptr pI830;
@


1.3
log
@xf86-video-intel 2.4.2. Has been in snapshots for weeks. Ok oga@@.
@
text
@d55 1
d92 1
@


1.2
log
@Update to xf86-video-intel 2.3.1. Tested by many.
@
text
@d72 2
@


1.1
log
@Initial revision
@
text
@a38 1
typedef uint32_t CARD32;
@


1.1.1.1
log
@xf86-video-intel 2.2.0
@
text
@@
