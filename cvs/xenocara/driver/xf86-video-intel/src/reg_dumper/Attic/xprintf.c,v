head	1.3;
access;
symbols
	OPENBSD_5_3:1.2.0.12
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.10
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.10
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.8
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v2_2_0_90:1.1.1.1
	v2_2_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.03.18.18.38.21;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2010.05.10.22.32.29;	author oga;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.24.19.45.02;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.11.24.19.45.02;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xf86-video-intel 2.20.19.

A recent kernel with kernel modesetting support is required.
Thanks to jsg@@ and kettenis@@ for their work.
@
text
@/*
 * Copyright (c) 2004 Alexander Gottwald
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the sale,
 * use or other dealings in this Software without prior written authorization.
 */

#include <string.h>
#include <stdarg.h>
#include "reg_dumper.h"

static char *XNFvprintf(const char *format, va_list va)
{
	char *ret;
	int size;
	va_list va2;

	va_copy(va2, va);
	size = vsnprintf(NULL, 0, format, va2);
	va_end(va2);

	ret = (char *)malloc(size + 1);
	if (ret == NULL)
		return NULL;

	vsnprintf(ret, size + 1, format, va);
	ret[size] = 0;
	return ret;
}

char *XNFprintf(const char *format, ...)
{
	char *ret;
	va_list va;
	va_start(va, format);
	ret = XNFvprintf(format, va);
	va_end(va);
	return ret;
}
@


1.2
log
@Update the intel driver to 2.9.1 plus backports.

2.9.1 is the last version of the intel DDX that supports UMS (User
modesetting), with 2.10 onwards being purely KMS only. As such, this
driver contains backports of almost every correctness or performance
related fix to the rendering layer in later intel drivers. This driver
*REQUIRES* a GEM enabled kernel. it claims to support non-gem mode but
this is essentially unmaintained and due to the way the abstraciton
works is slow, if it works at all (it often does not). You have been
warned.

tested by many many people on tech over the last few weeks.
@
text
@@


1.1
log
@Initial revision
@
text
@d31 1
a31 2
static char *
XNFvprintf(const char *format, va_list va)
d33 3
a35 3
    char *ret;
    int size;
    va_list va2;
d37 3
a39 3
    va_copy(va2, va);
    size = vsnprintf(NULL, 0, format, va2);
    va_end(va2);
d41 3
a43 3
    ret = (char *)malloc(size + 1);
    if (ret == NULL)
        return NULL;
d45 3
a47 3
    vsnprintf(ret, size + 1, format, va);
    ret[size] = 0;
    return ret;
d50 1
a50 2
char *
XNFprintf(const char *format, ...)
d52 6
a57 6
    char *ret;
    va_list va;
    va_start(va, format);
    ret = XNFvprintf(format, va);
    va_end(va);
    return ret;
@


1.1.1.1
log
@xf86-video-intel 2.2.0
@
text
@@
