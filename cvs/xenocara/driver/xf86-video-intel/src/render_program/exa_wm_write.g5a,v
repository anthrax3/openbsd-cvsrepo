head	1.1;
access;
symbols
	OPENBSD_6_0:1.1.0.14
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.12
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.10
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.8
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.6
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2013.03.18.18.38.21;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to xf86-video-intel 2.20.19.

A recent kernel with kernel modesetting support is required.
Thanks to jsg@@ and kettenis@@ for their work.
@
text
@/*
 * Copyright Â© 2006 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * Authors:
 *    Wang Zhenyu <zhenyu.z.wang@@intel.com>
 *    Keith Packard <keithp@@keithp.com>
 */

include(`exa_wm.g4i')

/*
 * Prepare data in m2-m5 for subspan(1,0), m6-m9 for subspan(3,2),
 */

mov (16) m130<1>F	src_sample_r_01<8,8,1>F { align1 compr };
mov (16) m131<1>F	src_sample_g_01<8,8,1>F { align1 compr };
mov (16) m132<1>F	src_sample_b_01<8,8,1>F { align1 compr };
mov (16) m133<1>F	src_sample_a_01<8,8,1>F { align1 compr };

/* m0, m1 are all direct passed by PS thread payload */
mov (8) data_port_msg_1<1>F	g1<8,8,1>F		{ mask_disable align1 };

/* write */
send (16) 
	data_port_msg_0_ind 
	acc0<1>UW
	g0<8,8,1>UW 
	write (
	       0,  /* binding_table */
	       8,  /* pixel scordboard clear, msg type simd16 single source */
	       4,  /* render target write */
	       0   /* no write commit message */
	) 
	mlen 10
	rlen 0
	{ align1 EOT };
@
