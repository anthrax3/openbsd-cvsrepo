head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.34
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.32
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.30
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.28
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.26
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.24
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.22
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.20
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.18
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.16
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.14
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.12
	OPENBSD_5_0:1.1.0.10
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2009.06.25.20.16.43;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@update to xf86-video-intel 2.7.1. Tested by many.
@
text
@int p2 = 14;
int min_p, max_p;

if (p2 == 7 || p2 == 14) {
	/* LVDS */
	min_p = 7;
	max_p = 98;
} else {
	/* SDVO/DAC */
	min_p = 5;
	max_p = 80;
}

for (int m1 = 10; m1 <= 22; m1++) {
	for (int m2 = 5; m2 <= 9; m2++) {
		for (int n = 1; n <= 6; n++) {
			for (int p1 = 1; p1 <= 8; p1++) {
				int ref = 96000000;
				int m = 5 * (m1 + 2) + (m2 + 2);
				int p = p1 * p2;
				int vco = floor(ref * m / (n + 2));
				int clock = floor(vco / p);

				if (p < min_p || p > max_p)
					continue;
				if (m < 70 || m > 120)
					continue;
				if (m2 > m1)
					continue; /* won't happen */
				if (vco < 1400000000 ||
				    vco > 2800000000)
					continue;

				printf("clock: %d (%d,%d),%d,(%d,%d)\n",
					floor(clock / 1000),
					m1, m2, n, p1, p2);
			}
		}
	}
}
@
