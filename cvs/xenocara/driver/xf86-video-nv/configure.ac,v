head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.2
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.16
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.14
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.12
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.10
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.4
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.8
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.6
	OPENBSD_5_0:1.7.0.4
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.7
	OPENBSD_4_3:1.1.1.7.0.2
	v2_1_6:1.1.1.7
	v2_1_5:1.1.1.6
	OPENBSD_4_2:1.1.1.5.0.2
	OPENBSD_4_2_BASE:1.1.1.5
	v2_0_2:1.1.1.5
	v1_2_2_1:1.1.1.4
	v1_2_2:1.1.1.3
	v1_2_1:1.1.1.2
	v1_2_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2017.02.18.17.57.59;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	N7BVmKe3cYvQwzcV;

1.8
date	2012.08.16.16.35.27;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.08.22.12.29.27;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.24.09.45.40;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.10.18.17.43;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.03.16.42.23;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.03.20.35.47;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.07.29.20.04.57;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.09.30;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.09.30;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.12.16.18.33.56;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.12.17.11.09.37;	author matthieu;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2007.03.03.09.06.11;	author matthieu;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2007.06.08.22.09.04;	author matthieu;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2007.09.30.14.17.11;	author matthieu;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2008.01.12.16.28.55;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update to xf86-video-nv 2.1.21
@
text
@#  Copyright 2005 Adam Jackson.
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation
#  on the rights to use, copy, modify, merge, publish, distribute, sub
#  license, and/or sell copies of the Software, and to permit persons to whom
#  the Software is furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice (including the next
#  paragraph) shall be included in all copies or substantial portions of the
#  Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
#  ADAM JACKSON BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# Process this file with autoconf to produce a configure script

# Initialize Autoconf
AC_PREREQ([2.60])
AC_INIT([xf86-video-nv],
        [2.1.21],
        [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg],
        [xf86-video-nv])
AC_CONFIG_SRCDIR([Makefile.am])
AC_CONFIG_HEADERS([config.h])

# Require X.Org macros 1.8 or later for MAN_SUBSTS set by XORG_MANPAGE_SECTIONS
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.8 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.8)
XORG_DEFAULT_OPTIONS

AC_CONFIG_AUX_DIR(.)

# Initialize Automake
AM_INIT_AUTOMAKE([foreign dist-bzip2])
AM_MAINTAINER_MODE

# Initialize libtool
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

AH_TOP([#include "xorg-server.h"])

# Options
# Define a configure option for an alternate module directory
AC_ARG_WITH(xorg-module-dir,
            AS_HELP_STRING([--with-xorg-module-dir=DIR],
                           [Default xorg module directory [[default=$libdir/xorg/modules]]]),
            [moduledir="$withval"],
            [moduledir="$libdir/xorg/modules"])

# Store the list of server defined optional extensions in REQUIRED_MODULES
XORG_DRIVER_CHECK_EXT(RANDR, randrproto)
XORG_DRIVER_CHECK_EXT(RENDER, renderproto)
XORG_DRIVER_CHECK_EXT(XV, videoproto)
XORG_DRIVER_CHECK_EXT(DPMSExtension, xextproto)

# Obtain compiler/linker options for the driver dependencies
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.3 xproto fontsproto $REQUIRED_MODULES])
PKG_CHECK_MODULES(XEXT, [xextproto >= 7.0.99.1],
                  HAVE_XEXTPROTO_71="yes"; AC_DEFINE(HAVE_XEXTPROTO_71, 1, [xextproto 7.1 available]),
                  HAVE_XEXTPROTO_71="no")
AM_CONDITIONAL(HAVE_XEXTPROTO_71, [ test "$HAVE_XEXTPROTO_71" = "yes" ])

# Checks for libraries.


save_CFLAGS="$CFLAGS"
CFLAGS="$XORG_CFLAGS"

# PCI rework
AC_CHECK_DECL(XSERVER_LIBPCIACCESS,
              [XSERVER_LIBPCIACCESS=yes],[XSERVER_LIBPCIACCESS=no],
              [#include "xorg-server.h"])
if test "x$XSERVER_LIBPCIACCESS" = "xyes"; then
    PKG_CHECK_MODULES(PCIACCESS, [pciaccess >= 0.10.7])
fi

CFLAGS="$save_CFLAGS"

AC_ARG_ENABLE(xaa,
              AS_HELP_STRING([--enable-xaa],
                             [Enable legacy X Acceleration Architecture (XAA) [default=auto]]),
              [XAA="$enableval"],
              [XAA=auto])
if test "x$XAA" != xno; then
        save_CFLAGS=$CFLAGS
        save_CPPFLAGS=$CPPFLAGS
        CFLAGS=$XORG_CFLAGS
        CPPFLAGS="$XORG_CFLAGS"
        AC_CHECK_HEADERS([xaa.h], XAA=yes, XAA=no)
        CFLAGS=$save_CFLAGS
        CPPFLAGS=$save_CPPFLAGS
fi
AC_MSG_CHECKING([whether to include XAA support])
AM_CONDITIONAL(XAA, test "x$XAA" = xyes)
AC_MSG_RESULT([$XAA])

# Substitutions
AC_SUBST([moduledir])

DRIVER_NAME=nv
AC_SUBST([DRIVER_NAME])

AC_CONFIG_FILES([
                Makefile
                src/Makefile
                man/Makefile
])
AC_OUTPUT
@


1.8
log
@Update to xf86-video-nv 2.1.20
@
text
@d26 1
a26 1
        [2.1.20],
@


1.7
log
@Update to xf86-video-nv 2.1.18.

Tested at least by krw@@, benoit@@ and giovanni@@.
@
text
@d26 1
a26 1
        [2.1.18],
d86 18
@


1.6
log
@Update to xf86-video-nv 2.1.17.
@
text
@d23 2
a24 1
AC_PREREQ(2.57)
d26 1
a26 1
        2.1.17,
d28 1
a28 2
        xf86-video-nv)

d30 1
a30 1
AM_CONFIG_HEADER([config.h])
d32 4
a35 4
# Require xorg-macros: XORG_DEFAULT_OPTIONS
m4_ifndef([XORG_MACROS_VERSION], 
          [m4_fatal([must install xorg-macros 1.3 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.3)
d40 1
a41 1

d44 1
a44 1
# Checks for programs.
a46 1
AC_PROG_CC
d51 1
d53 1
a53 1
            AC_HELP_STRING([--with-xorg-module-dir=DIR],
d58 1
a58 6
AC_ARG_WITH(xserver-source,AC_HELP_STRING([--with-xserver-source=XSERVER_SOURCE],
                                          [Path to X server source tree]),
                           [ XSERVER_SOURCE="$withval" ],
                           [ XSERVER_SOURCE="" ])

# Checks for extensions
d64 2
a65 2
# Checks for pkg-config packages
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.2 xproto fontsproto $REQUIRED_MODULES])
a72 2
# Checks for header files.
AC_HEADER_STDC
a76 3
# RandR 1.2
AC_CHECK_HEADER(xf86Modes.h,[BUILD_XMODES=no],[BUILD_XMODES=yes],[#include "xorg-server.h"])

d82 1
a82 1
    PKG_CHECK_MODULES(PCIACCESS, [pciaccess >= 0.8.0])
a86 36
AM_CONDITIONAL(BUILD_XMODES, test "x$BUILD_XMODES" = xyes)
if test "x$XSERVER_SOURCE" != x; then
    if test -d "$XSERVER_SOURCE"; then
        XSERVER_SOURCE=`cd "$XSERVER_SOURCE" && pwd`
        if test -f "$XSERVER_SOURCE/hw/xfree86/modes/xf86Modes.h" -a -f "$XSERVER_SOURCE/hw/xfree86/parser/xf86Parser.h"; then
            :
        else
            AC_ERROR([Server source at $XSERVER_SOURCE doesn't have the new mode code])
        fi
    else
        AC_ERROR([Can't find xserver-source path $XSERVER_SOURCE])
    fi
fi
if test "x$BUILD_XMODES" = xno; then
    AC_MSG_NOTICE([X server has new mode code])
    XMODES_CFLAGS=
    parser_dir=
    modes_dir=
else
    if test "x$XSERVER_SOURCE" = x; then
            AC_MSG_NOTICE([X server is missing new mode code and --with-xserver-source not specified, using local copy])
            AC_MSG_NOTICE([If you're building from git, please read compat/README])
            parser_dir='$(top_srcdir)/compat/parser'
            modes_dir='$(top_srcdir)/compat/modes'
    else
            AC_MSG_NOTICE([Using mode code from $XSERVER_SOURCE])
            parser_dir="$XSERVER_SOURCE/hw/xfree86/parser"
            modes_dir="$XSERVER_SOURCE/hw/xfree86/modes"
    fi
    XMODES_CFLAGS="-DXF86_MODES_RENAME -I\"$modes_dir\" -I\"$parser_dir\""
    AC_DEFINE(BUILD_XMODES, 1,[X server doesn't have built-in mode code, so we need to build it])
fi
AC_SUBST([XMODES_CFLAGS])
AC_SUBST([parser_dir])
AC_SUBST([modes_dir])

a87 1
AC_SUBST([XORG_CFLAGS])
d93 4
a96 5
AC_OUTPUT([
	Makefile
	src/Makefile
	man/Makefile
	compat/Makefile
d98 1
@


1.5
log
@update to xf86-video-nv 2.1.15. Tested by espie@@ (not better,
but not worse either on his hardware).
@
text
@d25 1
a25 1
        2.1.15,
d32 5
a36 3
# Require xorg-macros: XORG_RELEASE_VERSION XORG_CHANGELOG
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.2 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.2)
d40 1
a40 1
AM_INIT_AUTOMAKE([dist-bzip2])
a74 1
sdkdir=$(pkg-config --variable=sdkdir xorg-server)
a138 4

XORG_MANPAGE_SECTIONS
XORG_RELEASE_VERSION
XORG_CHANGELOG
@


1.4
log
@update to xf86-video-nv 2.1.13.
@
text
@d25 1
a25 1
        2.1.13,
d31 5
d69 4
d141 1
@


1.3
log
@xf86-video-nv 2.1.12
@
text
@d25 1
a25 1
        2.1.12,
@


1.2
log
@update xf86-video-nv to 2.1.10
@
text
@d25 1
a25 1
        2.1.10,
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
        1.2.0,
a28 10
AC_DEFINE_UNQUOTED([NV_MAJOR_VERSION],
                   [$(echo $PACKAGE_VERSION | sed -e 's/^\([[0-9]]\)\.[[0-9]]\.[[0-9]]/\1/')],
                   [Major version])
AC_DEFINE_UNQUOTED([NV_MINOR_VERSION],
                   [$(echo $PACKAGE_VERSION | sed -e 's/^[[0-9]]\.\([[0-9]]\)\.[[0-9]]/\1/')],
                   [Minor version])
AC_DEFINE_UNQUOTED([NV_PATCHLEVEL],
                   [$(echo $PACKAGE_VERSION | sed -e 's/^[[0-9]]\.[[0-9]]\.\([[0-9]]\)/\1/')],
                   [Patch version])

d44 1
d51 5
a61 6
# Determine whether XV PutImage takes a DrawablePtr and whether or not to use
# the libcwrapper.
PKG_CHECK_EXISTS([xorg-server >= 1.0.99.901],
                 [AC_DEFINE(HAVE_XV_DRAWABLE,1,[XV hooks take a DrawablePtr])],
                 [AC_DEFINE(USE_LIBC_WRAPPER,1,[Use the libc wrapper])])

d63 1
a63 1
PKG_CHECK_MODULES(XORG, [xorg-server xproto fontsproto $REQUIRED_MODULES])
d71 53
d137 1
@


1.1.1.1
log
@Importing xf86-video-nv 1.2.0
@
text
@@


1.1.1.2
log
@xf86-video-nv 1.2.1 from X.Org 7.2RC3
@
text
@d25 1
a25 1
        1.2.1,
d29 9
a37 1
XORG_RELEASE_VERSION
@


1.1.1.3
log
@xf86-video-nv 1.2.2
@
text
@d25 1
a25 1
        1.2.2,
d28 2
@


1.1.1.4
log
@Import xf86-video-nv version 1.2.2.1
@
text
@d25 1
a25 1
        1.2.2.1,
@


1.1.1.5
log
@Import xf86-video-nv version 2.0.2. Adds new chipsets support.
@
text
@d25 1
a25 1
        2.0.2,
a61 3
PKG_CHECK_EXISTS([xorg-server >= 1.1.99.901],
                 [AC_DEFINE(USE_CVTMODE_FUNC,1,[Use xf86CVTMode func])])

a64 11

# Check for optional compile-time support
AC_ARG_ENABLE(g80, AC_HELP_STRING([--disable-g80],
                                  [Disable G80 support [[default=no]]]),
              [SUPPORT_G80="$enableval"],
              [SUPPORT_G80=yes])
AM_CONDITIONAL(SUPPORT_G80, test x$SUPPORT_G80 = xyes)
if test "$SUPPORT_G80" = yes; then
        AC_DEFINE(SUPPORT_G80,1,[Enable G80 support])
        echo "Enabling G80 support"
fi
@


1.1.1.6
log
@xf86-video-nv 2.1.5
@
text
@d25 1
a25 1
        2.1.5,
a43 1
# Options
a49 5
AC_ARG_WITH(xserver-source,AC_HELP_STRING([--with-xserver-source=XSERVER_SOURCE],
                                          [Path to X server source tree]),
                           [ XSERVER_SOURCE="$withval" ],
                           [ XSERVER_SOURCE="" ])

d56 9
d66 1
a66 1
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.2 xproto fontsproto $REQUIRED_MODULES])
d69 11
a84 53
save_CFLAGS="$CFLAGS"
CFLAGS="$XORG_CFLAGS"

# RandR 1.2
AC_CHECK_HEADER(xf86Modes.h,[BUILD_XMODES=no],[BUILD_XMODES=yes],[#include "xorg-server.h"])

# PCI rework
AC_CHECK_DECL(XSERVER_LIBPCIACCESS,
              [XSERVER_LIBPCIACCESS=yes],[XSERVER_LIBPCIACCESS=no],
              [#include "xorg-server.h"])
if test "x$XSERVER_LIBPCIACCESS" = "xyes"; then
    PKG_CHECK_MODULES(PCIACCESS, [pciaccess >= 0.8.0])
fi

CFLAGS="$save_CFLAGS"

AM_CONDITIONAL(BUILD_XMODES, test "x$BUILD_XMODES" = xyes)
if test "x$XSERVER_SOURCE" != x; then
    if test -d "$XSERVER_SOURCE"; then
        XSERVER_SOURCE=`cd "$XSERVER_SOURCE" && pwd`
        if test -f "$XSERVER_SOURCE/hw/xfree86/modes/xf86Modes.h" -a -f "$XSERVER_SOURCE/hw/xfree86/parser/xf86Parser.h"; then
            :
        else
            AC_ERROR([Server source at $XSERVER_SOURCE doesn't have the new mode code])
        fi
    else
        AC_ERROR([Can't find xserver-source path $XSERVER_SOURCE])
    fi
fi
if test "x$BUILD_XMODES" = xno; then
    AC_MSG_NOTICE([X server has new mode code])
    XMODES_CFLAGS=
    parser_dir=
    modes_dir=
else
    if test "x$XSERVER_SOURCE" = x; then
            AC_MSG_NOTICE([X server is missing new mode code and --with-xserver-source not specified, using local copy])
            AC_MSG_NOTICE([If you're building from git, please read compat/README])
            parser_dir='$(top_srcdir)/compat/parser'
            modes_dir='$(top_srcdir)/compat/modes'
    else
            AC_MSG_NOTICE([Using mode code from $XSERVER_SOURCE])
            parser_dir="$XSERVER_SOURCE/hw/xfree86/parser"
            modes_dir="$XSERVER_SOURCE/hw/xfree86/modes"
    fi
    XMODES_CFLAGS="-DXF86_MODES_RENAME -I\"$modes_dir\" -I\"$parser_dir\""
    AC_DEFINE(BUILD_XMODES, 1,[X server doesn't have built-in mode code, so we need to build it])
fi
AC_SUBST([XMODES_CFLAGS])
AC_SUBST([parser_dir])
AC_SUBST([modes_dir])

# Substitutions
a97 1
	compat/Makefile
@


1.1.1.7
log
@xf86-video-nv 2.1.6
@
text
@d25 1
a25 1
        2.1.6,
@


