head	1.7;
access;
symbols
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v2_1_6:1.1.1.2
	v2_1_5:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2010.08.22.12.29.27;	author matthieu;	state dead;
branches;
next	1.6;

1.6
date	2010.05.24.09.45.40;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.10.18.17.44;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.03.16.42.23;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.03.20.35.47;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.07.29.20.04.57;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.30.14.18.12;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.09.30.14.18.12;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.01.12.16.29.28;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to xf86-video-nv 2.1.18.

Tested at least by krw@@, benoit@@ and giovanni@@.
@
text
@/*
 * Copyright © 2006 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Authors:
 *    Eric Anholt <eric@@anholt.net>
 *
 */

#ifndef _XF86MODES_H_
#define _XF86MODES_H_

#include <stddef.h>
#include <string.h>
#include <stdio.h>

#include "xf86.h"
#include "xorgVersion.h"
#include "edid.h"
#include "xf86Parser.h"
#if XF86_MODES_RENAME
#include "xf86Rename.h"
#endif

extern _X_EXPORT double xf86ModeHSync(const DisplayModeRec *mode);
extern _X_EXPORT double xf86ModeVRefresh(const DisplayModeRec *mode);
extern _X_EXPORT unsigned int xf86ModeBandwidth(DisplayModePtr mode, int depth);

extern _X_EXPORT int
xf86ModeWidth (const DisplayModeRec *mode, Rotation rotation);
    
extern _X_EXPORT int
xf86ModeHeight (const DisplayModeRec *mode, Rotation rotation);

extern _X_EXPORT DisplayModePtr xf86DuplicateMode(const DisplayModeRec *pMode);
extern _X_EXPORT DisplayModePtr xf86DuplicateModes(ScrnInfoPtr pScrn,
				       DisplayModePtr modeList);
extern _X_EXPORT void xf86SetModeDefaultName(DisplayModePtr mode);
extern _X_EXPORT void xf86SetModeCrtc(DisplayModePtr p, int adjustFlags);
extern _X_EXPORT Bool xf86ModesEqual(const DisplayModeRec *pMode1,
		    const DisplayModeRec *pMode2);
extern _X_EXPORT void xf86PrintModeline(int scrnIndex,DisplayModePtr mode);
extern _X_EXPORT DisplayModePtr xf86ModesAdd(DisplayModePtr modes, DisplayModePtr new);

extern _X_EXPORT DisplayModePtr xf86DDCGetModes(int scrnIndex, xf86MonPtr DDC);
extern _X_EXPORT DisplayModePtr xf86CVTMode(int HDisplay, int VDisplay, float VRefresh,
			   Bool Reduced, Bool Interlaced);
extern _X_EXPORT DisplayModePtr xf86GTFMode(int h_pixels, int v_lines, float freq, int interlaced, int margins);

extern _X_EXPORT Bool
xf86ModeIsReduced(const DisplayModeRec *mode);

extern _X_EXPORT void
xf86ValidateModesFlags(ScrnInfoPtr pScrn, DisplayModePtr modeList,
		       int flags);

extern _X_EXPORT void
xf86ValidateModesClocks(ScrnInfoPtr pScrn, DisplayModePtr modeList,
			int *min, int *max, int n_ranges);

extern _X_EXPORT void
xf86ValidateModesSize(ScrnInfoPtr pScrn, DisplayModePtr modeList,
		      int maxX, int maxY, int maxPitch);

extern _X_EXPORT void
xf86ValidateModesSync(ScrnInfoPtr pScrn, DisplayModePtr modeList,
		      MonPtr mon);

extern _X_EXPORT void
xf86ValidateModesBandwidth(ScrnInfoPtr pScrn, DisplayModePtr modeList,
			   unsigned int bandwidth, int depth);

extern _X_EXPORT void
xf86ValidateModesReducedBlanking(ScrnInfoPtr pScrn, DisplayModePtr modeList);

extern _X_EXPORT void
xf86PruneInvalidModes(ScrnInfoPtr pScrn, DisplayModePtr *modeList,
		      Bool verbose);

extern _X_EXPORT DisplayModePtr
xf86PruneDuplicateModes(DisplayModePtr modes);

extern _X_EXPORT void
xf86ValidateModesFlags(ScrnInfoPtr pScrn, DisplayModePtr modeList,
		       int flags);

extern _X_EXPORT void
xf86ValidateModesUserConfig(ScrnInfoPtr pScrn, DisplayModePtr modeList);

extern _X_EXPORT DisplayModePtr
xf86GetMonitorModes (ScrnInfoPtr pScrn, XF86ConfMonitorPtr conf_monitor);

extern _X_EXPORT DisplayModePtr
xf86GetDefaultModes (void);

extern _X_EXPORT void
xf86DDCApplyQuirks(int scrnIndex, xf86MonPtr DDC);

#endif /* _XF86MODES_H_ */
@


1.6
log
@Update to xf86-video-nv 2.1.17.
@
text
@@


1.5
log
@update to xf86-video-nv 2.1.15. Tested by espie@@ (not better,
but not worse either on his hardware).
@
text
@d98 3
@


1.4
log
@update to xf86-video-nv 2.1.13.
@
text
@d43 3
a45 3
double xf86ModeHSync(const DisplayModeRec *mode);
double xf86ModeVRefresh(const DisplayModeRec *mode);
unsigned int xf86ModeBandwidth(DisplayModePtr mode, int depth);
d47 1
a47 1
int
d50 1
a50 1
int
d53 2
a54 2
DisplayModePtr xf86DuplicateMode(const DisplayModeRec *pMode);
DisplayModePtr xf86DuplicateModes(ScrnInfoPtr pScrn,
d56 3
a58 3
void xf86SetModeDefaultName(DisplayModePtr mode);
void xf86SetModeCrtc(DisplayModePtr p, int adjustFlags);
Bool xf86ModesEqual(const DisplayModeRec *pMode1,
d60 2
a61 2
void xf86PrintModeline(int scrnIndex,DisplayModePtr mode);
DisplayModePtr xf86ModesAdd(DisplayModePtr modes, DisplayModePtr new);
d63 2
a64 2
DisplayModePtr xf86DDCGetModes(int scrnIndex, xf86MonPtr DDC);
DisplayModePtr xf86CVTMode(int HDisplay, int VDisplay, float VRefresh,
d66 1
a66 1
DisplayModePtr xf86GTFMode(int h_pixels, int v_lines, float freq, int interlaced, int margins);
d68 1
a68 1
Bool
d71 1
a71 1
void
d75 1
a75 1
void
d79 1
a79 1
void
d83 1
a83 1
void
d87 1
a87 1
void
d91 1
a91 1
void
d94 1
a94 1
void
d98 1
a98 1
void
d102 1
a102 1
void
d105 1
a105 1
DisplayModePtr
d108 2
a109 2
DisplayModePtr
xf86GetDefaultModes (Bool interlaceAllowed, Bool doubleScanAllowed);
d111 1
a111 1
void
@


1.3
log
@xf86-video-nv 2.1.12
@
text
@d43 2
a44 2
double xf86ModeHSync(DisplayModePtr mode);
double xf86ModeVRefresh(DisplayModePtr mode);
d48 1
a48 1
xf86ModeWidth (DisplayModePtr mode, Rotation rotation);
d51 1
a51 1
xf86ModeHeight (DisplayModePtr mode, Rotation rotation);
d53 1
a53 1
DisplayModePtr xf86DuplicateMode(DisplayModePtr pMode);
d58 2
a59 1
Bool xf86ModesEqual(DisplayModePtr pMode1, DisplayModePtr pMode2);
d69 1
a69 1
xf86ModeIsReduced(DisplayModePtr mode);
@


1.2
log
@update xf86-video-nv to 2.1.10
@
text
@d67 3
@


1.1
log
@Initial revision
@
text
@d45 1
d65 1
d84 7
d106 3
@


1.1.1.1
log
@xf86-video-nv 2.1.5
@
text
@@


1.1.1.2
log
@xf86-video-nv 2.1.6
@
text
@a97 3
void
xf86DDCApplyQuirks(int scrnIndex, xf86MonPtr DDC);

@

