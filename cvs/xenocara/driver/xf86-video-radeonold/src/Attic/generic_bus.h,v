head	1.2;
access;
symbols
	OPENBSD_5_4:1.1.0.8
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.6
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.4
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@ * @;


1.2
date	2014.02.15.13.55.29;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2012.01.25.21.27.07;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove radeonold driver. it was deconnected from build  months ago.
@
text
@#ifndef __GENERIC_BUS_H__
#define __GENERIC_BUS_H__

/* this is meant to be used for proprietary buses where abstraction is needed
   but they don't occur often enough to warrant a separate helper library */

#include <stdint.h>

#define GB_IOCTL_GET_NAME	1
          /* third argument is size of the buffer, fourth argument is pointer
	     to the buffer. Returns the name of the bus */
#define GB_IOCTL_GET_TYPE	2
          /* third argument is size of the buffer, fourth argument is pointer
	     to the buffer. Returns the type of the bus, driver should check
	     this at initialization time to find out whether they are compatible
	      */


typedef struct _GENERIC_BUS_Rec *GENERIC_BUS_Ptr;

typedef struct _GENERIC_BUS_Rec{
        int scrnIndex;
        DevUnion  DriverPrivate;
	Bool (*ioctl)(GENERIC_BUS_Ptr, long, long, char *);
	Bool (*read)(GENERIC_BUS_Ptr, uint32_t,  uint32_t, uint8_t *);
	Bool (*write)(GENERIC_BUS_Ptr, uint32_t,  uint32_t, uint8_t *);
	Bool (*fifo_read)(GENERIC_BUS_Ptr, uint32_t,  uint32_t, uint8_t *);
	Bool (*fifo_write)(GENERIC_BUS_Ptr, uint32_t,  uint32_t, uint8_t *);

	} GENERIC_BUS_Rec;





#endif
@


1.1
log
@Add radeon driver 6.12.2 renamed as 'radeonold'.

This is the last known working version in 'zaphod' mode (one X
screen per head in multi-head configs). This makes it possible
to update the "real" radeon driver in xf86-video-ati, without
breaking existing zaphod setups.
@
text
@@

