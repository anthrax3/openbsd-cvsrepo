head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.12
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.10
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.6
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2014.09.27.17.39.03;	author matthieu;	state Exp;
branches;
next	;
commitid	wOT9bABZSX4if3Ol;


desc
@@


1.1
log
@Update to xf86-video-vmware 13.0.2
@
text
@/*
 * Copyright 2013 VMWare, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL TUNGSTEN GRAPHICS AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Author: Thomas Hellstrom <thellstrom@@vmware.com>
 */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include "vmwgfx_hosted.h"
#include "vmwgfx_hosted_priv.h"

/*
 * Hook up hosted environments here.
 */

/**
 * vmwgfx_hosted_detect - Check whether we are hosted
 *
 * Check whether we are hosted by a compositor and
 * in that case return a pointer to a valid struct vmwgfx_hosted_driver.
 * If not hosted, return NULL.
 */
const struct vmwgfx_hosted_driver *
vmwgfx_hosted_detect(void)
{
    const struct vmwgfx_hosted_driver *tmp = vmwgfx_xmir_detect();

    if (!tmp)
	tmp = vmwgfx_xwl_detect();

    return tmp;
}

/**
 * vmwgfx_hosted_modify_flags - Modify driver flags if hosted.
 *
 * @@flag: Pointer to the flag argument given to the vmware driver's
 * DriverFunc function, when operation is GET_REQUIRED_HW_INTERFACES.
 *
 * Checks whether we are running hosted, and in that case modifies
 * the flag according to the hosted environment's requirements.
 */
void
vmwgfx_hosted_modify_flags(uint32_t *flags)
{
    vmwgfx_xmir_modify_flags(flags);
    vmwgfx_xwl_modify_flags(flags);
}
@
