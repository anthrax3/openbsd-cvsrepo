head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.42
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v10_14_1:1.1.1.1
	v10_14_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2006.11.26.20.21.17;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.21.17;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* **********************************************************
 * Copyright (C) 1998-2000 VMware, Inc.
 * All Rights Reserved
 * **********************************************************/

#ifndef _SVGA_STRUCT_H_
#define _SVGA_STRUCT_H_

#define INCLUDE_ALLOW_USERLEVEL
#define INCLUDE_ALLOW_MONITOR
#include "includeCheck.h"

 /*
  * Offscreen memory surface structure
  *
  */

enum SVGASurfaceVersion {
   SVGA_SURFACE_VERSION_1 = 1  /* Initial version... */
};

typedef struct _SVGASurface {
   uint32   size;             /* Size of the structure */
   uint32   version;          /* Version of this surface structure.  */
   uint32   bpp;              /* Format of the surface */
   uint32   width;            /* Width of the surface */
   uint32   height;           /* Height of the surface */
   uint32   pitch;            /* Pitch of the surface */
   volatile uint32   numQueued;        /* Number of times this bitmap has been queued */
   volatile uint32   numDequeued;      /* Number of times this bitmap has been dequeued */
   uint32   userData;         /* Driver defined data */
   uint32   dataOffset;       /* Offset to the data */
} SVGASurface;

typedef struct SVGAPoint {
    int16 x;
    int16 y;
} SVGAPoint;

#endif
@


1.1.1.1
log
@Importing xf86-video-vmware 10.14.0
@
text
@@
