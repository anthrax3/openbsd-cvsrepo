head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.14
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.16
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.14
	OPENBSD_5_0:1.2.0.12
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v4_1_3:1.1.1.1
	v4_1_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.08.11.09.44.22;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.12.21.05.42;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.10.21;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.10.21;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xf86-video-rendition 4.2.5
@
text
@/*
 * file vos.h
 *
 * layer to map operating system dependent system calls
 */

#ifndef __VOS_H__
#define __VOS_H__


/* Define IODEBUG if you need to debug out/in functions.  <DI> */
/* IODEBUG define is used in compiler.h. DON'T MOVE DOWN!      */

/* #define IODEBUG */

/*
 * includes
 */

#include "compiler.h"
#include "vtypes.h"

/*
 * function prototypes
 */
#define /*void*/ verite_out8(/*unsigned long*/ port, /*vu8*/ data) \
                   outb(port, data)

#define /*void*/ verite_out16(/*unsigned long*/ port, /*vu16*/ data) \
                   outw(port, data)

#define /*void*/ verite_out32(/*unsigned long*/ port, /*vu32*/ data) \
                   outl(port, data)

#define /*vu8*/  verite_in8(/*unsigned long*/ io_base)  ((vu8)inb(io_base))
#define /*vu16*/ verite_in16(/*unsigned long*/ io_base) ((vu16)inw(io_base))
#define /*vu32*/ verite_in32(/*unsigned long*/ io_base) ((vu32)inl(io_base))

/* memory accesses */
#define verite_read_memory32(base, offset) MMIO_IN32(base, offset)
#define verite_read_memory16(base, offset) MMIO_IN16(base, offset)
#define verite_read_memory8(base, offset)  MMIO_IN8(base, offset)
#define verite_write_memory32(base, offset, data) MMIO_OUT32(base, offset, data)
#define verite_write_memory16(base, offset, data) MMIO_OUT16(base, offset, data)
#define verite_write_memory8(base, offset, data)  MMIO_OUT8(base, offset, data)

/* the rest of it */
void verite_enableio(void);
void verite_disableio(void);
vu8 *verite_mapmemory(vu8 *membase, vu32 size);
void verite_unmapmemory(vu8 *vmembase, vu32 size);

#endif /* #ifndef _VOS_H_ */

/*
 * end of file vos.h
 */
@


1.2
log
@xf86-video-rendision 4.2.0
@
text
@d26 1
a26 1
#define /*void*/ verite_out8(/*IOADDRESS*/ port, /*vu8*/ data) \
d29 1
a29 1
#define /*void*/ verite_out16(/*IOADDRESS*/ port, /*vu16*/ data) \
d32 1
a32 1
#define /*void*/ verite_out32(/*IOADDRESS*/ port, /*vu32*/ data) \
d35 3
a37 3
#define /*vu8*/  verite_in8(/*IOADDRESS*/ io_base)  ((vu8)inb(io_base))
#define /*vu16*/ verite_in16(/*IOADDRESS*/ io_base) ((vu16)inw(io_base))
#define /*vu32*/ verite_in32(/*IOADDRESS*/ io_base) ((vu32)inl(io_base))
@


1.1
log
@Initial revision
@
text
@a0 1
/* $XFree86: xc/programs/Xserver/hw/xfree86/drivers/rendition/vos.h,v 1.9 2002/01/25 21:56:07 tsi Exp $ */
@


1.1.1.1
log
@Importing xf86-video-rendition 4.1.2
@
text
@@
