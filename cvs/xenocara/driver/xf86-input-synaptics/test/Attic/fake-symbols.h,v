head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.05.17.17.18.21;	author shadchin;	state dead;
branches;
next	1.5;

1.5
date	2013.06.02.18.17.24;	author shadchin;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.12.18.59.42;	author shadchin;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.01.12.18.45;	author shadchin;	state Exp;
branches;
next	1.2;

1.2
date	2011.09.23.16.53.49;	author shadchin;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.10.12.04.30;	author shadchin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xf86-input-synaptics 1.8.0.

ok matthieu@@, tested claudio@@
@
text
@#include <xorg-server.h>
#include <xf86Xinput.h>

extern int xf86ReadSerial(int fd, void *buf, int count);
extern int xf86WriteSerial(int fd, const void *buf, int count);
extern int xf86CloseSerial(int fd);
extern int xf86WaitForInput(int fd, int timeout);
extern int xf86OpenSerial(XF86OptionPtr options);
extern int xf86SetSerialSpeed(int fd, int speed);

extern XF86OptionPtr xf86ReplaceIntOption(XF86OptionPtr optlist, const char *name,
                                    const int val);
extern XF86OptionPtr xf86AddNewOption(XF86OptionPtr head, const char *name,
                                const char *val);
extern char *xf86OptionName(XF86OptionPtr opt);
extern const char *xf86FindOptionValue(XF86OptionPtr options, const char *name);
extern int xf86NameCmp(const char *s1, const char *s2);

extern char *xf86SetStrOption(XF86OptionPtr optlist, const char *name,
                              const char *deflt);
extern int xf86SetBoolOption(XF86OptionPtr optlist, const char *name, int deflt);
extern XF86OptionPtr xf86AddNewOption(XF86OptionPtr head, const char *name,
                                const char *val);
extern const char *xf86FindOptionValue(XF86OptionPtr options, const char *name);
extern char *xf86OptionName(XF86OptionPtr opt);
extern char *xf86OptionValue(XF86OptionPtr opt);
extern int xf86NameCmp(const char *s1, const char *s2);
extern void xf86AddEnabledDevice(InputInfoPtr pInfo);
extern void xf86RemoveEnabledDevice(InputInfoPtr pInfo);
extern Atom XIGetKnownProperty(char *name);
extern void xf86AddInputDriver(InputDriverPtr driver, pointer module,
                               int flags);
extern int
 xf86ScaleAxis(int Cx, int to_max, int to_min, int from_max, int from_min);

extern void DeleteInputDeviceRequest(DeviceIntPtr pDev);
extern void FreeInputAttributes(InputAttributes * attrs);
extern void

xf86PostButtonEvent(DeviceIntPtr device,
                    int is_absolute,
                    int button,
                    int is_down, int first_valuator, int num_valuators, ...);
extern int Xasprintf(char **ret, const char *format, ...);
extern int
 XISetDevicePropertyDeletable(DeviceIntPtr dev, Atom property, Bool deletable);

extern InputInfoPtr xf86FirstLocalDevice(void);
extern void xf86DeleteInput(InputInfoPtr pInp, int flags);
extern XF86OptionPtr xf86OptionListDuplicate(XF86OptionPtr options);
extern Bool

InitButtonClassDeviceStruct(DeviceIntPtr dev, int numButtons, Atom *labels,
                            CARD8 *map);
extern void

InitValuatorAxisStruct(DeviceIntPtr dev, int axnum, Atom label, int minval,
                       int maxval, int resolution, int min_res, int max_res,
                       int mode);
extern void
 xf86PostKeyboardEvent(DeviceIntPtr device, unsigned int key_code, int is_down);
extern int
 xf86SetIntOption(XF86OptionPtr optlist, const char *name, int deflt);
extern void

xf86PostButtonEventP(DeviceIntPtr device,
                     int is_absolute,
                     int button,
                     int is_down, int first_valuator, int num_valuators,
                     const int *valuators);
extern Bool
 InitPtrFeedbackClassDeviceStruct(DeviceIntPtr dev, PtrCtrlProcPtr controlProc);

extern int

XIChangeDeviceProperty(DeviceIntPtr dev, Atom property, Atom type,
                       int format, int mode, unsigned long len,
                       XF86OptionPtr value, Bool sendevent);
extern CARD32 GetTimeInMillis(void);

extern int
 NewInputDeviceRequest(InputOption *options,
                       InputAttributes * attrs,
                       DeviceIntPtr *pdev);

extern Bool
 InitLedFeedbackClassDeviceStruct(DeviceIntPtr dev, LedCtrlProcPtr controlProc);

extern InputAttributes *DuplicateInputAttributes(InputAttributes * attrs);
extern int ValidAtom(Atom atom);
extern Bool

InitKeyboardDeviceStruct(DeviceIntPtr dev, XkbRMLVOSet * rmlvo,
                         BellProcPtr bell_func, KbdCtrlProcPtr ctrl_func);
extern long

XIRegisterPropertyHandler(DeviceIntPtr dev,
                          int (*SetProperty) (DeviceIntPtr dev,
                                              Atom property,
                                              XIPropertyValuePtr prop,
                                              BOOL checkonly),
                          int (*GetProperty) (DeviceIntPtr dev,
                                              Atom property),
                          int (*DeleteProperty) (DeviceIntPtr dev,
                                                 Atom property));
extern int InitProximityClassDeviceStruct(DeviceIntPtr dev);
extern void xf86Msg(MessageType type, const char *format, ...);
extern void xf86MsgVerb(MessageType type, int verb, const char *format, ...);
extern void xf86IDrvMsg(InputInfoPtr dev, MessageType type, const char *format,
                        ...);

extern void
xf86PostMotionEventP(DeviceIntPtr device,
                     int is_absolute, int first_valuator, int num_valuators,
                     const int *valuators);

extern Bool

InitValuatorClassDeviceStruct(DeviceIntPtr dev, int numAxes, Atom *labels,
                              int numMotionEvents, int mode);

extern XF86OptionPtr
xf86ReplaceStrOption(XF86OptionPtr optlist, const char *name, const char *val);

extern XF86OptionPtr xf86NextOption(XF86OptionPtr list);

extern int

XIGetDeviceProperty(DeviceIntPtr dev, Atom property, XIPropertyValuePtr *value);

extern Atom MakeAtom(const char *string, unsigned len, Bool makeit);

extern int GetMotionHistorySize(void);

extern void
xf86PostProximityEventP(DeviceIntPtr device,
                        int is_in, int first_valuator, int num_valuators,
                        const int *valuators);

extern Bool InitFocusClassDeviceStruct(DeviceIntPtr dev);

extern void
 xf86ProcessCommonOptions(InputInfoPtr pInfo, XF86OptionPtr list);

extern void
xf86CollectInputOptions(InputInfoPtr pInfo,
                        const char **defaultOpts);

extern InputInfoPtr xf86AllocateInput(void);

extern ClientPtr serverClient;

extern Bool
QueueWorkProc(Bool (*function)
              (ClientPtr /* pClient */ , pointer /* closure */ ),
              ClientPtr client, pointer closure);
@


1.5
log
@Update to xf86-input-synaptics 1.7.1.

ok mpi@@ jcs@@ matthieu@@
@
text
@@


1.4
log
@Update to xf86-input-synaptics 1.6.1

ok matthieu@@
@
text
@a3 8
#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 14
#define OPTTYPE XF86OptionPtr
#define CONST const
#else
#define OPTTYPE pointer
#define CONST
#endif

d8 1
a8 1
extern int xf86OpenSerial(OPTTYPE options);
d11 1
a11 1
extern OPTTYPE xf86ReplaceIntOption(OPTTYPE optlist, const char *name,
d13 1
a13 1
extern OPTTYPE xf86AddNewOption(OPTTYPE head, const char *name,
d15 2
a16 2
extern char *xf86OptionName(OPTTYPE opt);
extern CONST char *xf86FindOptionValue(OPTTYPE options, const char *name);
a17 1
extern char *xf86CheckStrOption(OPTTYPE optlist, const char *name, char *deflt);
d19 4
a22 4
extern char *xf86SetStrOption(OPTTYPE optlist, const char *name,
                              CONST char *deflt);
extern int xf86SetBoolOption(OPTTYPE optlist, const char *name, int deflt);
extern OPTTYPE xf86AddNewOption(OPTTYPE head, const char *name,
d24 3
a26 3
extern CONST char *xf86FindOptionValue(OPTTYPE options, const char *name);
extern char *xf86OptionName(OPTTYPE opt);
extern char *xf86OptionValue(OPTTYPE opt);
a27 1
extern char *xf86CheckStrOption(OPTTYPE optlist, const char *name, char *deflt);
a36 2

#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 11
a37 1
#endif
d50 1
a50 1
extern OPTTYPE xf86OptionListDuplicate(OPTTYPE options);
d63 1
a63 1
 xf86SetIntOption(OPTTYPE optlist, const char *name, int deflt);
d70 1
a70 4
#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 12
                     const
#endif
                     int *valuators);
d78 1
a78 1
                       OPTTYPE value, Bool sendevent);
a82 1
#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 11
a83 1
#endif
a88 1
#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 11
a89 1
#endif
a112 1

d115 1
a115 4
#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 12
                     const
#endif
                     int *valuators);
d122 2
a123 2
extern OPTTYPE
xf86ReplaceStrOption(OPTTYPE optlist, const char *name, const char *val);
d125 1
a125 1
extern OPTTYPE xf86NextOption(OPTTYPE list);
a135 1

d138 1
a138 4
#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) >= 12
                        const
#endif
                        int *valuators);
a141 1
#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) < 12
d143 1
a143 1
 xf86ProcessCommonOptions(InputInfoPtr pInfo, OPTTYPE list);
a145 1

d147 1
a147 1
                        const char **defaultOpts, OPTTYPE extraOpts);
d149 1
a149 1
extern InputInfoPtr xf86AllocateInput(InputDriverPtr drv, int flags);
a156 1
#endif
@


1.3
log
@Update to xf86-input-synaptics 1.5.2.

ok matthieu@@
@
text
@d9 1
a9 1
#define CONST 
d12 13
a24 11
extern int xf86ReadSerial (int fd, void *buf, int count);
extern int xf86WriteSerial (int fd, const void *buf, int count);
extern int xf86CloseSerial (int fd);
extern int xf86WaitForInput (int fd, int timeout);
extern int xf86OpenSerial (OPTTYPE options);
extern int xf86SetSerialSpeed (int fd, int speed);

extern OPTTYPE xf86ReplaceIntOption(OPTTYPE optlist, const char *name, const int val);
extern OPTTYPE xf86AddNewOption(OPTTYPE head, const char *name, const char *val);
extern char* xf86OptionName(OPTTYPE opt);
extern CONST char* xf86FindOptionValue(OPTTYPE options, const char *name);
d26 1
a26 1
extern char* xf86CheckStrOption(OPTTYPE optlist, const char *name, char *deflt);
d28 2
a29 2

extern char * xf86SetStrOption(OPTTYPE optlist, const char *name, CONST char *deflt);
d31 4
a34 3
extern OPTTYPE xf86AddNewOption(OPTTYPE head, const char *name, const char *val);
extern CONST char* xf86FindOptionValue(OPTTYPE options, const char *name);
extern char* xf86OptionName(OPTTYPE opt);
d37 1
a37 1
extern char * xf86CheckStrOption(OPTTYPE optlist, const char *name, char *deflt);
d41 2
a42 1
extern void xf86AddInputDriver(InputDriverPtr driver, pointer module, int flags);
d44 1
a44 5
xf86ScaleAxis(int	Cx,
              int	to_max,
              int	to_min,
              int	from_max,
              int	from_min );
d47 1
d49 1
a49 1
extern void FreeInputAttributes(InputAttributes *attrs);
d52 6
a57 8
xf86PostButtonEvent(DeviceIntPtr	device,
                    int			is_absolute,
                    int			button,
                    int			is_down,
                    int			first_valuator,
                    int			num_valuators,
                    ...);
extern int Xasprintf(char ** ret, const char *format, ...);
d59 1
a59 1
XISetDevicePropertyDeletable(DeviceIntPtr dev, Atom property, Bool deletable);
d65 2
a66 1
InitButtonClassDeviceStruct(DeviceIntPtr dev, int numButtons, Atom* labels,
d69 8
a76 2
InitValuatorAxisStruct(DeviceIntPtr dev, int axnum, Atom label, int minval, int maxval,
		       int resolution, int min_res, int max_res, int mode);
d78 5
a82 12
xf86PostKeyboardEvent(DeviceIntPtr      device,
                      unsigned int      key_code,
                      int               is_down);
extern int
xf86SetIntOption(OPTTYPE optlist, const char *name, int deflt);
extern void
xf86PostButtonEventP(DeviceIntPtr	device,
                     int		is_absolute,
                     int		button,
                     int		is_down,
                     int		first_valuator,
                     int		num_valuators,
d86 1
a86 1
                           int		*valuators);
d88 1
a88 1
InitPtrFeedbackClassDeviceStruct(DeviceIntPtr dev, PtrCtrlProcPtr controlProc);
d91 5
a95 4
XIChangeDeviceProperty (DeviceIntPtr dev, Atom property, Atom type,
                        int format, int mode, unsigned long len,
                        OPTTYPE value, Bool sendevent);
extern CARD32 GetTimeInMillis (void);
d98 1
a98 1
NewInputDeviceRequest (InputOption *options,
d100 1
a100 1
                       InputAttributes *attrs,
d105 1
a105 1
InitLedFeedbackClassDeviceStruct (DeviceIntPtr dev, LedCtrlProcPtr controlProc);
d108 1
a108 1
extern InputAttributes* DuplicateInputAttributes(InputAttributes *attrs);
d112 2
a113 1
InitKeyboardDeviceStruct(DeviceIntPtr dev, XkbRMLVOSet *rmlvo,
d116 2
a117 1
XIRegisterPropertyHandler(DeviceIntPtr         dev,
d129 2
a130 1
extern void xf86IDrvMsg(InputInfoPtr dev, MessageType type, const char *format, ...);
d133 3
a135 4
xf86PostMotionEventP(DeviceIntPtr	device,
                    int			is_absolute,
                    int			first_valuator,
                    int			num_valuators,
d137 1
a137 1
                    const
d139 1
a139 1
                          int		*valuators);
d142 1
d147 1
a147 1
xf86ReplaceStrOption(OPTTYPE optlist, const char *name, const char* val);
d152 2
a153 1
XIGetDeviceProperty (DeviceIntPtr dev, Atom property, XIPropertyValuePtr *value);
d160 3
a162 4
xf86PostProximityEventP(DeviceIntPtr	device,
                        int		is_in,
                        int		first_valuator,
                        int		num_valuators,
d166 1
a166 1
                              int	*valuators);
a169 1

d172 1
a172 1
xf86ProcessCommonOptions(InputInfoPtr pInfo, OPTTYPE list);
d175 1
d177 1
a177 5
                        const char **defaultOpts,
                        OPTTYPE extraOpts);

extern InputInfoPtr
xf86AllocateInput(InputDriverPtr drv, int flags);
d179 1
d183 4
a186 3
extern Bool QueueWorkProc (
    Bool (*function)(ClientPtr /* pClient */, pointer /* closure */),
    ClientPtr client, pointer closure);
@


1.2
log
@Update to xf86-input-synaptics 1.5.0.
ok mpi@@, matthieu@@
@
text
@d4 8
d16 1
a16 1
extern int xf86OpenSerial (pointer options);
d19 4
a22 4
extern pointer xf86ReplaceIntOption(pointer optlist, const char *name, const int val);
extern pointer xf86AddNewOption(pointer head, const char *name, const char *val);
extern char* xf86OptionName(pointer opt);
extern char* xf86FindOptionValue(pointer options, const char *name);
d24 1
a24 1
extern char* xf86CheckStrOption(pointer optlist, const char *name, char *deflt);
d27 6
a32 6
extern char * xf86SetStrOption(pointer optlist, const char *name, char *deflt);
extern int xf86SetBoolOption(pointer optlist, const char *name, int deflt);
extern pointer xf86AddNewOption(pointer head, const char *name, const char *val);
extern char* xf86FindOptionValue(pointer options, const char *name);
extern char* xf86OptionName(pointer opt);
extern char *xf86OptionValue(pointer opt);
d34 1
a34 1
extern char * xf86CheckStrOption(pointer optlist, const char *name, char *deflt);
d64 1
a64 1
extern pointer xf86OptionListDuplicate(pointer options);
d76 1
a76 1
xf86SetIntOption(pointer optlist, const char *name, int deflt);
d94 1
a94 1
                        pointer value, Bool sendevent);
d143 2
a144 2
extern pointer
xf86ReplaceStrOption(pointer optlist, const char *name, const char* val);
d146 1
a146 1
extern pointer xf86NextOption(pointer list);
d170 1
a170 1
xf86ProcessCommonOptions(InputInfoPtr pInfo, pointer list);
d175 1
a175 1
                        pointer extraOpts);
@


1.1
log
@Add support wscons (upstream + implementation)

ok matthieu@@
@
text
@d119 1
@

