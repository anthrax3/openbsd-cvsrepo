head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.26
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.24
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.22
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.20
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.18
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.16
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.14
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.12
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.10
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.6
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_2_1:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_1_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2011.05.07.08.35.18;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.11.22.14.25.33;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.03.13.33.45;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.19.47.34;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.19.47.34;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.21.02.58;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xf86-input-acecad 1.5.0.
@
text
@/* 
 * Copyright (c) 2001 Edouard TISSERANT <tissered@@esstin.u-nancy.fr>
 * Parts inspired from Shane Watts <shane@@bofh.asn.au> Xfree 3 Acecad Driver
 * Thanks to Emily, from AceCad, For giving me documents.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 *
 */

#ifndef _ACECAD_H_
#define _ACECAD_H_

/******************************************************************************
 *		Definitions
 *		structs, typedefs, #defines, enums
 *****************************************************************************/
#define ACECAD_PACKET_SIZE	7

#define ACECAD_CONFIG		"a"		/* Send configuration (max coords) */

#define ACECAD_ABSOLUTE		'F'		/* Absolute mode */
#define ACECAD_RELATIVE		'E'		/* Relative mode */

#define ACECAD_UPPER_ORIGIN	"b"		/* Origin upper left */

#define ACECAD_PROMPT_MODE	"B"		/* Prompt mode */
#define ACECAD_STREAM_MODE	"@@"		/* Stream mode */
#define ACECAD_INCREMENT	'I'		/* Set increment */
#define ACECAD_BINARY_FMT	"zb"		/* Binary reporting */

#define ACECAD_PROMPT		"P"		/* Prompt for current position */

#define PHASING_BIT		0x80
#define PROXIMITY_BIT		0x40
#define TABID_BIT		0x20
#define XSIGN_BIT		0x10
#define YSIGN_BIT		0x08
#define BUTTON_BITS		0x07
#define COORD_BITS		0x7f

#define ABSOLUTE_FLAG		1
#define USB_FLAG		2
#define AUTODEV_FLAG		4
#define AVAIL_FLAG		8

#define NOTAVAIL ((errno == ENODEV) || (errno == ENXIO) || (errno == ENOENT))

#define milisleep(ms) usleep (ms * 1000)

#define SYSCALL(call) while(((call) == -1) && (errno == EINTR))

static const char * acecad_initstr = ACECAD_BINARY_FMT ACECAD_STREAM_MODE;

typedef struct 
{
    XISBuffer	*buffer;
    int		acecadInc;		/* increment between transmits */
    int		acecadOldX;		/* previous X position */
    int		acecadOldY;		/* previous Y position */
    int		acecadOldZ;		/* previous Z position */
    int		acecadOldProximity;	/* previous proximity */
    int		acecadOldButtons;	/* previous buttons state */
    int		acecadMaxX;		/* max X value */
    int		acecadMaxY;		/* max Y value */
    int		acecadMaxZ;		/* max Y value */
    char	acecadReportSpeed;	/* report speed */
    int		flags;			/* various flags */
    int		packeti;		/* number of bytes read */
    int		PacketSize;		/* number of bytes read */
    unsigned char packet[ACECAD_PACKET_SIZE];	/* data read on the device */
} AceCadPrivateRec, *AceCadPrivatePtr;


/******************************************************************************
 *		Declarations
 *****************************************************************************/
#ifdef XFree86LOADER
static MODULESETUPPROTO( SetupProc );
static void TearDownProc (void *);
#endif
static Bool DeviceControl (DeviceIntPtr, int);
static Bool DeviceOn (DeviceIntPtr);
static Bool DeviceOff (DeviceIntPtr);
static Bool DeviceClose (DeviceIntPtr);
static Bool DeviceInit (DeviceIntPtr);
static void ReadInput (InputInfoPtr);
static Bool ConvertProc (InputInfoPtr, int, int, int, int, int, int, int, int, int *, int *);
static Bool ReverseConvertProc(InputInfoPtr , int , int , int*);
static Bool QueryHardware (AceCadPrivatePtr);
static void NewPacket (AceCadPrivatePtr priv);
static Bool AceCadGetPacket (AceCadPrivatePtr);
#if GET_ABI_MAJOR(ABI_XINPUT_VERSION) < 12
static InputInfoPtr AceCadPreInit(InputDriverPtr, IDevPtr , int);
#else
static int AceCadPreInit(InputDriverPtr, InputInfoPtr , int);
#endif
#ifdef HAVE_LINUX_INPUT_H
static void USBReadInput (InputInfoPtr);
static Bool USBQueryHardware (InputInfoPtr);
static int IsUSBLine(int);
static Bool fd_query_acecad(int, char*);
static Bool AceCadAutoDevProbe(InputInfoPtr, int);
#endif

#endif
@


1.3
log
@update xf86-input-acecad to 1.4.0.
@
text
@d103 3
a105 4
static void ReadInput (LocalDevicePtr);
static void CloseProc (LocalDevicePtr);
static Bool ConvertProc (LocalDevicePtr, int, int, int, int, int, int, int, int, int *, int *);
static Bool ReverseConvertProc(LocalDevicePtr , int , int , int*);
d109 1
d111 6
a116 3
#ifdef LINUX_INPUT
static void USBReadInput (LocalDevicePtr);
static Bool USBQueryHardware (LocalDevicePtr);
d119 1
a119 1
static Bool AceCadAutoDevProbe(LocalDevicePtr, int);
a120 1

@


1.2
log
@update to xf86-input-acecad 1.3.0
@
text
@a25 1
/* $XFree86: xc/programs/Xserver/hw/xfree86/input/acecad/acecad.h,v 1.2tsi Exp $ */
@


1.1
log
@Initial revision
@
text
@d28 1
a28 1
#ifndef	_ACECAD_H_
d35 1
a35 1
#define ACECAD_PACKET_SIZE		7
d47 1
a47 1
#define ACECAD_BINARY_FMT	"zb"	/* Binary reporting */
d52 1
a52 1
#define PROXIMITY_BIT	0x40
d60 3
d64 3
a66 1
#define milisleep(ms) xf86usleep (ms * 1000)
d74 1
a74 1
	XISBuffer *buffer;
d84 1
a84 2
    char	acecadReportSpeed;		/* report speed */
    int		acecadUSB;		/*USB flag*/
d116 2
@


1.1.1.1
log
@Importing xf86-input-acecad 1.1.0
@
text
@@


1.1.1.2
log
@xf86-input-acecad 1.2.1
@
text
@d28 1
a28 1
#ifndef _ACECAD_H_
d35 1
a35 1
#define ACECAD_PACKET_SIZE	7
d47 1
a47 1
#define ACECAD_BINARY_FMT	"zb"		/* Binary reporting */
d52 1
a52 1
#define PROXIMITY_BIT		0x40
a59 5
#define USB_FLAG		2
#define AUTODEV_FLAG		4
#define AVAIL_FLAG		8

#define NOTAVAIL ((errno == ENODEV) || (errno == ENXIO) || (errno == ENOENT))
d69 1
a69 1
    XISBuffer	*buffer;
d79 2
a80 1
    char	acecadReportSpeed;	/* report speed */
a111 2
static Bool fd_query_acecad(int, char*);
static Bool AceCadAutoDevProbe(LocalDevicePtr, int);
@

