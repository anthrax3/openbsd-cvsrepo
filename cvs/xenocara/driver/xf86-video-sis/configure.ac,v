head	1.9;
access;
symbols
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.7.0.16
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.14
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.12
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.10
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.8
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.8
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v0_9_3:1.1.1.2
	v0_9_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2017.02.18.18.20.31;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	bloKMUVDO3NHjYjU;

1.8
date	2016.08.31.15.27.09;	author matthieu;	state Exp;
branches;
next	1.7;
commitid	OCj5VopDF9Xl4k53;

1.7
date	2012.09.08.16.13.46;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.06.16.05.54;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.17.14.52.29;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.11.22.17.54.56;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.05.21.05.04;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.19.14.03.12;	author oga;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.12.31;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.12.31;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.12.16.18.07.34;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update to xf86-video-sis 0.10.9
@
text
@#  Copyright 2005 Adam Jackson.
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation
#  on the rights to use, copy, modify, merge, publish, distribute, sub
#  license, and/or sell copies of the Software, and to permit persons to whom
#  the Software is furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice (including the next
#  paragraph) shall be included in all copies or substantial portions of the
#  Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
#  ADAM JACKSON BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# Process this file with autoconf to produce a configure script

# Initialize Autoconf
AC_PREREQ([2.60])
AC_INIT([xf86-video-sis],
        [0.10.9],
        [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg],
        [xf86-video-sis])
AC_CONFIG_SRCDIR([Makefile.am])
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_AUX_DIR(.)

# Initialize Automake
AM_INIT_AUTOMAKE([foreign dist-bzip2])
AM_MAINTAINER_MODE

# Require X.Org macros 1.8 or later for MAN_SUBSTS set by XORG_MANPAGE_SECTIONS
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.8 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.8)
XORG_DEFAULT_OPTIONS

# Initialize libtool
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

AH_TOP([#include "xorg-server.h"])

# Define a configure option for an alternate module directory
AC_ARG_WITH(xorg-module-dir,
            AS_HELP_STRING([--with-xorg-module-dir=DIR],
                           [Default xorg module directory [[default=$libdir/xorg/modules]]]),
            [moduledir="$withval"],
            [moduledir="$libdir/xorg/modules"])

AC_ARG_ENABLE(dri, AS_HELP_STRING([--disable-dri],
                                  [Disable DRI support [[default=auto]]]),
              [DRI="$enableval"],
              [DRI=auto])

# Store the list of server defined optional extensions in REQUIRED_MODULES
XORG_DRIVER_CHECK_EXT(XINERAMA, xineramaproto)
XORG_DRIVER_CHECK_EXT(RANDR, randrproto)
XORG_DRIVER_CHECK_EXT(RENDER, renderproto)
XORG_DRIVER_CHECK_EXT(XV, videoproto)
XORG_DRIVER_CHECK_EXT(DPMSExtension, xextproto)

# Obtain compiler/linker options for the driver dependencies
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.0.99.901 xproto fontsproto xf86dgaproto >= 2.1 $REQUIRED_MODULES])
PKG_CHECK_MODULES(XEXT, [xextproto >= 7.0.99.1],
                  HAVE_XEXTPROTO_71="yes"; AC_DEFINE(HAVE_XEXTPROTO_71, 1, [xextproto 7.1 available]),
                  HAVE_XEXTPROTO_71="no")
AM_CONDITIONAL(HAVE_XEXTPROTO_71, [ test "$HAVE_XEXTPROTO_71" = "yes" ])
sdkdir=`$PKG_CONFIG --variable=sdkdir xorg-server`

# Checks for libraries.

if test "$DRI" != no; then
        AC_CHECK_FILE([${sdkdir}/dri.h],
                      [have_dri_h="yes"], [have_dri_h="no"])
        AC_CHECK_FILE([${sdkdir}/sarea.h],
                      [have_sarea_h="yes"], [have_sarea_h="no"])
        AC_CHECK_FILE([${sdkdir}/dristruct.h],
                      [have_dristruct_h="yes"], [have_dristruct_h="no"])
fi

AC_MSG_CHECKING([whether to include DRI support])
if test x$DRI = xauto; then
        if test "$have_dri_h" = yes -a \
                "$have_sarea_h" = yes -a \
                "$have_dristruct_h" = yes; then
                DRI="yes"
        else
                DRI="no"
        fi
fi
AC_MSG_RESULT([$DRI])

AM_CONDITIONAL(DRI, test x$DRI = xyes)
if test "$DRI" = yes; then
        PKG_CHECK_MODULES(DRI, [libdrm >= 2.0 xf86driproto])
        AC_DEFINE(SISDRI,1,[Enable DRI driver support])
        AC_DEFINE(SISDRI_DEVEL,1,[Enable developmental DRI driver support])
fi

AC_ARG_ENABLE(xaa,
              AS_HELP_STRING([--enable-xaa],
                             [Enable legacy X Acceleration Architecture (XAA) [default=auto]]),
              [XAA="$enableval"],
              [XAA=auto])
if test "x$XAA" != xno; then
        save_CFLAGS=$CFLAGS
        save_CPPFLAGS=$CPPFLAGS
        CFLAGS=$XORG_CFLAGS
        CPPFLAGS="$XORG_CFLAGS"
        AC_CHECK_HEADERS([xaa.h], XAA=yes, XAA=no)
        CFLAGS=$save_CFLAGS
        CPPFLAGS=$save_CPPFLAGS
fi
AC_MSG_CHECKING([whether to include XAA support])
AM_CONDITIONAL(XAA, test "x$XAA" = xyes)
AC_MSG_RESULT([$XAA])

# technically this should be a configure flag.  meh.
AC_DEFINE(XF86EXA, 1, [Build support for Exa])

SAVE_CPPFLAGS="$CPPFLAGS"
CPPFLAGS="$CPPFLAGS $XORG_CFLAGS"
AC_CHECK_DECL(XSERVER_LIBPCIACCESS,
              [XSERVER_LIBPCIACCESS=yes],[XSERVER_LIBPCIACCESS=no],
              [#include "xorg-server.h"])
CPPFLAGS="$SAVE_CPPFLAGS"

if test "x$XSERVER_LIBPCIACCESS" = xyes; then
    PKG_CHECK_MODULES([PCIACCESS], [pciaccess >= 0.12.901])
    XORG_CFLAGS="$XORG_CFLAGS $PCIACCESS_CFLAGS"
fi
AM_CONDITIONAL(XSERVER_LIBPCIACCESS, test "x$XSERVER_LIBPCIACCESS" = xyes)

AC_SUBST([moduledir])

DRIVER_NAME=sis
AC_SUBST([DRIVER_NAME])

AC_CONFIG_FILES([
                Makefile
                src/Makefile
                man/Makefile
])
AC_OUTPUT
@


1.8
log
@Update to xf86-video-sis 0.10.8
@
text
@d26 1
a26 1
        [0.10.8],
@


1.7
log
@Update to xf86-video-sis 0.10.7
@
text
@d26 1
a26 1
        [0.10.7],
@


1.6
log
@Update to xf86-video-sis 0.10.4
@
text
@d26 1
a26 1
        [0.10.4],
d105 18
@


1.5
log
@Update to xf86-video-sis 0.10.3
@
text
@d23 2
a24 1
AC_PREREQ(2.57)
d26 1
a26 1
        0.10.3,
d28 1
a28 2
        xf86-video-sis)

d30 1
a30 1
AM_CONFIG_HEADER([config.h])
d33 1
a34 1

d37 1
a37 1
# Require xorg-macros: XORG_DEFAULT_OPTIONS
d39 2
a40 2
          [m4_fatal([must install xorg-macros 1.3 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.3)
d43 1
a43 1
# Checks for programs.
a45 2
AC_PROG_CC
XORG_PROG_RAWCPP
d49 1
d51 1
a51 1
            AC_HELP_STRING([--with-xorg-module-dir=DIR],
d56 1
a56 1
AC_ARG_ENABLE(dri, AC_HELP_STRING([--disable-dri],
d61 1
a61 1
# Checks for extensions
d68 2
a69 2
# Checks for pkg-config packages
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.0.99.901 xproto fontsproto xf86dgaproto $REQUIRED_MODULES])
a77 3
# Checks for header files.
AC_HEADER_STDC

d102 2
a103 2
        AC_DEFINE(XF86DRI,1,[Enable DRI driver support])
        AC_DEFINE(XF86DRI_DEVEL,1,[Enable developmental DRI driver support])
d117 1
a117 1
    PKG_CHECK_MODULES([PCIACCESS], [pciaccess >= 0.10])
a121 2
AC_SUBST([DRI_CFLAGS])
AC_SUBST([XORG_CFLAGS])
d127 4
a130 4
AC_OUTPUT([
	Makefile
	src/Makefile
	man/Makefile
d132 1
@


1.4
log
@Update to xf86-video-sis 0.10.2
@
text
@d25 1
a25 1
        0.10.2,
d33 1
a33 1
AM_INIT_AUTOMAKE([dist-bzip2])
d37 6
d75 1
a75 1
sdkdir=$(pkg-config --variable=sdkdir xorg-server)
a131 5

XORG_MANPAGE_SECTIONS
XORG_RELEASE_VERSION

XORG_CHECK_LINUXDOC
@


1.3
log
@Update to xf86-video-sis 0.10.1.
@
text
@d25 1
a25 1
        0.10.1,
d65 4
@


1.2
log
@Update SiS driver to 0.10

Tested by todd.
ok Matthieu.
@
text
@d25 1
a25 1
        0.10.0,
a60 1
XORG_DRIVER_CHECK_EXT(XF86MISC, xf86miscproto)
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
        0.9.2,
d103 13
@


1.1.1.1
log
@Importing xf86-video-sis 0.9.2
@
text
@@


1.1.1.2
log
@xf86-video-sis 0.9.3 from X.Org 7.2RC3
@
text
@d25 1
a25 1
        0.9.3,
@

