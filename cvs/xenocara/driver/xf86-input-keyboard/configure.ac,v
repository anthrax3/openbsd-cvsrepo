head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.4
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.2
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.6
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.2
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_2_2:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_1_1:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.14
date	2017.01.22.09.53.08;	author matthieu;	state Exp;
branches;
next	1.13;
commitid	Q0IJuT8efeR0LJns;

1.13
date	2015.12.17.06.03.10;	author shadchin;	state Exp;
branches;
next	1.12;
commitid	5PTtyApnQC9GWVr5;

1.12
date	2013.11.11.16.51.59;	author shadchin;	state Exp;
branches;
next	1.11;

1.11
date	2013.05.03.09.32.18;	author shadchin;	state Exp;
branches;
next	1.10;

1.10
date	2012.08.16.16.38.04;	author shadchin;	state Exp;
branches;
next	1.9;

1.9
date	2012.01.06.08.03.53;	author shadchin;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.17.16.25.32;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2011.05.30.10.52.58;	author shadchin;	state Exp;
branches;
next	1.6;

1.6
date	2011.04.22.18.33.36;	author shadchin;	state Exp;
branches;
next	1.5;

1.5
date	2010.11.27.14.41.06;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.27.19.06.44;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.03.14.57.17;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.27.20.00.22;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.19.52.59;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.19.52.59;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.51.53;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Update to xf86-input-keyboard 1.9.0
@
text
@#  Copyright 2005 Adam Jackson.
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation
#  on the rights to use, copy, modify, merge, publish, distribute, sub
#  license, and/or sell copies of the Software, and to permit persons to whom
#  the Software is furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice (including the next
#  paragraph) shall be included in all copies or substantial portions of the
#  Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
#  ADAM JACKSON BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# Process this file with autoconf to produce a configure script

# Initialize Autoconf
AC_PREREQ([2.60])
AC_INIT([xf86-input-keyboard],
        [1.9.0],
        [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg],
        [xf86-input-keyboard])
AC_CONFIG_SRCDIR([Makefile.am])
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_AUX_DIR(.)

# Initialize Automake
AM_INIT_AUTOMAKE([foreign dist-bzip2])

# Initialize libtool
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

# Initialize X.Org macros 1.8 or later for MAN_SUBSTS set by XORG_MANPAGE_SECTIONS
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.8 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.8)
XORG_DEFAULT_OPTIONS

# Obtain compiler/linker options from server and required extensions
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.10] xproto inputproto)

# Define a configure option for an alternate input module directory
AC_ARG_WITH(xorg-module-dir,
            AC_HELP_STRING([--with-xorg-module-dir=DIR],
                           [Default xorg module directory [[default=$libdir/xorg/modules]]]),
            [moduledir="$withval"],
            [moduledir="$libdir/xorg/modules"])
inputdir=${moduledir}/input
AC_SUBST(inputdir)

# The keyboard driver code is O/S specific
case $host_os in
  linux*)
    IS_LINUX="yes"
    ;;

  freebsd* | kfreebsd-gnu* | netbsd* | openbsd* | dragonfly*)
    IS_BSD="yes"
    ;;

  solaris*)
    IS_SOLARIS="yes"
    ;;

  gnu*)
    IS_HURD="yes"
    ;;

  *)
    AC_MSG_ERROR([Your operating system is not supported by the kbd driver.
                  Contact xorg@@lists.freedesktop.org if you are interested in
                  porting it.])
    ;;
esac
case $host_os in
  netbsd*)
    case $host in
      *powerpc-*|*sparc-*|*sparc64-*|*vax-*)
        OS_FLAGS="$OS_FLAGS -DDEFAULT_TO_WSKBD"
        ;;
    esac
    case "$(uname -m 2>&1)" in
      evbarm|sgimips|shark)
        OS_FLAGS="$OS_FLAGS -DDEFAULT_TO_WSKBD"
        ;;
    esac
    ;;
esac
AC_SUBST([OS_FLAGS])

AM_CONDITIONAL(LINUX, [test "x$IS_LINUX" = xyes])
AM_CONDITIONAL(BSD, [test "x$IS_BSD" = xyes])
AM_CONDITIONAL(SOLARIS, [test "x$IS_SOLARIS" = xyes])
AM_CONDITIONAL(HURD, [test "x$IS_HURD" = xyes])

DRIVER_NAME=kbd
AC_SUBST([DRIVER_NAME])

AC_CONFIG_FILES([Makefile
                 src/Makefile
                 man/Makefile])
AC_OUTPUT
@


1.13
log
@Update to xf86-input-keyboard 1.8.1.

ok matthieu@@
@
text
@d26 1
a26 1
        [1.8.1],
d47 1
a47 1
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.4] xproto inputproto)
@


1.12
log
@Update to xf86-input-keyboard 1.8.0.

ok matthieu@@
@
text
@d26 1
a26 1
        [1.8.0],
@


1.11
log
@Update to xf86-input-keyboard 1.7.0.

ok matthieu@@
@
text
@d26 1
a26 1
        [1.7.0],
d82 16
@


1.10
log
@Update to 1.6.2.

ok matthieu@@
@
text
@d26 1
a26 1
        [1.6.2],
a34 1
AM_MAINTAINER_MODE
@


1.9
log
@Update to 1.6.1.

ok matthieu@@
@
text
@d26 1
a26 1
        [1.6.1],
d65 1
a65 1
  freebsd* | kfreebsd-gnu* | netbsd* | openbsd*)
@


1.8
log
@Remove last bits of having xkeyboard-config optional.
@
text
@d26 1
a26 1
        [1.6.0],
@


1.7
log
@If you do not have XkbOptions in xorg.conf, it is automatically set to
"terminate: ctrl_alt_bksp" (only if XENOCARA_USE_XKEYBOARD_CONFIG=Yes)

tested ajacoutot@@, ok matthieu@@
@
text
@a90 9
AC_ARG_ENABLE(xkeyboard-config,
              AS_HELP_STRING([--enable-xkeyboard-config],
                             [Enable using xkeyboard-config (default: disabled)]),
              [ XKEYBOARD_CONFIG="${enableval}" ],
              [ XKEYBOARD_CONFIG="no" ])
if test "x$XKEYBOARD_CONFIG" = xyes ; then
    AC_DEFINE(USE_XKEYBOARD_CONFIG, 1, [Enable using xkeyboard-config])
fi

@


1.6
log
@update to xf86-input-keyboard 1.6.0

ok matthieu@@
@
text
@d91 9
@


1.5
log
@update to xf86-input-keyboard 1.5.0
Tested by ajacoutot@@, shadchin@@, jasper@@ and landry@@. Thanks.
@
text
@d26 1
a26 1
        [1.5.0],
d48 1
a48 1
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.2.99.0] xproto inputproto)
@


1.4
log
@Update to xf86-input-keyboard 1.4.0. tested by many with xserver 1.8.
ok oga@@, todd@@.
@
text
@d23 2
a24 1
AC_PREREQ(2.57)
d26 1
a26 1
        1.4.0,
d28 1
a28 6
        xf86-input-keyboard)

# Require xorg-macros version 1.3 or newer for XORG_DEFAULT_OPTIONS
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.3 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.3)

d30 1
a31 1
AM_INIT_AUTOMAKE([dist-bzip2])
d33 2
d37 3
a39 2
DRIVER_NAME=kbd
AC_SUBST([DRIVER_NAME])
d41 5
a45 1
AM_CONFIG_HEADER([config.h])
d47 2
a48 4
# Checks for programs.
AC_DISABLE_STATIC
AC_PROG_LIBTOOL
AC_PROG_CC
d50 8
a57 1
AH_TOP([#include "xorg-server.h"])
d59 1
a62 18
    # check whether struct kbd_repeat has the 'period' field.
    # on kernels < 2.5.42 it's called 'rate' instead.
    AC_TRY_COMPILE([
#include <linux/kd.h>
#ifdef __sparc__
#include <asm/param.h>
#include <asm/kbio.h>
#endif
],[
int main () {
        struct kbd_repeat k;
        k.period = 0;
        return 0;
}],
    [period_field="period"],
    [period_field="rate"])
    AC_DEFINE_UNQUOTED(LNX_KBD_PERIOD_NAME, [$period_field],
                       [Name of the period field in struct kbd_repeat])
a86 1
AM_CONDITIONAL(SCO, [test "x$IS_SCO" = xyes])
d88 2
a89 24
AC_ARG_WITH(xorg-module-dir,
            AC_HELP_STRING([--with-xorg-module-dir=DIR],
                           [Default xorg module directory [[default=$libdir/xorg/modules]]]),
            [moduledir="$withval"],
            [moduledir="$libdir/xorg/modules"])
AC_SUBST(moduledir)

# Checks for extensions
XORG_DRIVER_CHECK_EXT(RANDR, randrproto)
XORG_DRIVER_CHECK_EXT(XINPUT, inputproto)
XORG_DRIVER_CHECK_EXT(XKB, kbproto)

# Checks for pkg-config packages
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.2.99.0] xproto $REQUIRED_MODULES)
sdkdir=$(pkg-config --variable=sdkdir xorg-server)

XORG_DEFAULT_OPTIONS
XORG_CFLAGS="$CWARNFLAGS $XORG_CFLAGS"
AC_SUBST([XORG_CFLAGS])

# Checks for libraries.

# Checks for header files.
AC_HEADER_STDC
d91 4
a94 1
AC_OUTPUT([Makefile src/Makefile man/Makefile])
@


1.3
log
@update to xf86-input-keyboard 1.3.2
@
text
@d25 1
a25 1
        1.3.2,
d29 3
a31 4
# Require xorg-macros version 1.2 or newer for XORG_CWARNFLAGS and
# XORG_CHANGELOG macros
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.2.1 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.2.1)
d114 1
a114 1
XORG_CWARNFLAGS
a121 4

XORG_MANPAGE_SECTIONS
XORG_RELEASE_VERSION
XORG_CHANGELOG
@


1.2
log
@xf86-input-keyboard 1.3.1
@
text
@d25 1
a25 1
        1.3.1,
d29 5
a51 2
m4_ifdef([AS_HELP_STRING], , [m4_define([AS_HELP_STRING], m4_defn([AC_HELP_STRING]))])

d104 1
a104 2
inputdir=${moduledir}/input
AC_SUBST(inputdir)
d115 3
a117 2
CFLAGS="$CFLAGS $XORG_CFLAGS "' -I$(top_srcdir)/src'
AC_SUBST([CFLAGS])
d126 1
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
        1.1.1,
a37 3
COMPAT_DRIVER_NAME=keyboard
AC_SUBST([COMPAT_DRIVER_NAME])

d49 46
a94 24
#AC_DEFINE(XFree86LOADER,1,[Stub define for loadable drivers])
#
#AC_ARG_ENABLE(XINPUT, AS_HELP_STRING([--enable-xinput],
#              [Build XInput support (default: yes)]),
#              [XINPUT=$enableval],[XINPUT=yes])
#AM_CONDITIONAL(XINPUT, test "x$XINPUT" = "xyes")
#if test "x$XINPUT" = "xyes" ; then
#    AC_DEFINE(XINPUT,1,[Enable XInput support])
#fi
#
#AC_ARG_ENABLE(XKB, AS_HELP_STRING([--enable-xkb],
#              [Build XKB support (default: yes)]),
#              [XKB=$enableval],[XKB=yes])
#AM_CONDITIONAL(XKB, test "x$XKB" = "xyes")
#if test "x$XKB" = "xyes" ; then
#    AC_DEFINE(XKB,1,[Enable XKB support])
#fi

AC_ARG_ENABLE(depkbd, AS_HELP_STRING([--enable-depkbd],
              [Use deprecated keyboard driver [[default=no]]]),
              [DEPKBD=$enableval],[DEPKBD=no])
if test "x$DEPKBD" = "xyes" ; then
    AC_DEFINE(USE_DEPRECATED_KEYBOARD_DRIVER,1,[Use deprecated keyboard driver])
fi
d110 1
a110 1
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.0.99.901] xproto $REQUIRED_MODULES)
@


1.1.1.1
log
@Importing xf86-input-keyboard 1.1.1
@
text
@@


1.1.1.2
log
@xf86-input-keyboard 1.2.2
@
text
@d25 1
a25 1
        1.2.2,
d38 3
d52 24
a75 46
case $host_os in
  linux*)
    IS_LINUX="yes"
    # check whether struct kbd_repeat has the 'period' field.
    # on kernels < 2.5.42 it's called 'rate' instead.
    AC_TRY_COMPILE([
#include <linux/kd.h>
#ifdef __sparc__
#include <asm/param.h>
#include <asm/kbio.h>
#endif
],[
int main () {
        struct kbd_repeat k;
        k.period = 0;
        return 0;
}],
    [period_field="period"],
    [period_field="rate"])
    AC_DEFINE_UNQUOTED(LNX_KBD_PERIOD_NAME, [$period_field],
                       [Name of the period field in struct kbd_repeat])
    ;;

  freebsd* | kfreebsd-gnu* | netbsd* | openbsd*)
    IS_BSD="yes"
    ;;

  solaris*)
    IS_SOLARIS="yes"
    ;;

  gnu*)
    IS_HURD="yes"
    ;;

  *)
    AC_MSG_ERROR([Your operating system is not supported by the kbd driver.
                  Contact xorg@@lists.freedesktop.org if you are interested in
                  porting it.])
    ;;
esac
AM_CONDITIONAL(LINUX, [test "x$IS_LINUX" = xyes])
AM_CONDITIONAL(BSD, [test "x$IS_BSD" = xyes])
AM_CONDITIONAL(SOLARIS, [test "x$IS_SOLARIS" = xyes])
AM_CONDITIONAL(HURD, [test "x$IS_HURD" = xyes])
AM_CONDITIONAL(SCO, [test "x$IS_SCO" = xyes])
d91 1
a91 1
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.2.99.0] xproto $REQUIRED_MODULES)
@

