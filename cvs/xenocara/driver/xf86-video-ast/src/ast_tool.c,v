head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.6
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.4
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.2
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	v0_99_9:1.1.1.2
	OPENBSD_4_8:1.3.0.6
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v0_81_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.05.24.09.17.25;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	qBZygjuSMc2gFczl;

1.5
date	2014.04.13.10.36.51;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.29.21.17.47;	author matthieu;	state dead;
branches;
next	1.3;

1.3
date	2009.11.22.15.33.58;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.23.21.00.47;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.00.10;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.00.10;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.04.13.10.30.12;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xf86-video-ast 1.0.1
@
text
@/*
 * Copyright (c) 2005 ASPEED Technology Inc.
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of the authors not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  The authors makes no representations
 * about the suitability of this software for any purpose.  It is provided
 * "as is" without express or implied warranty.
 *
 * THE AUTHORS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL THE AUTHORS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif
#include "xf86.h"
#include "xf86_OSproc.h"
#include "xf86cmap.h"
#include "compiler.h"
#include "vgaHW.h"
#include "mipointer.h"
#include "micmap.h"

#include "fb.h"
#include "regionstr.h"
#include "xf86xv.h"
#include <X11/extensions/Xv.h>

#include "xf86Pci.h"

/* framebuffer offscreen manager */
#include "xf86fbman.h"

/* include xaa includes */
#include "xaarop.h"

/* H/W cursor support */
#include "xf86Cursor.h"

/* Driver specific headers */
#include "ast.h"

Bool
ASTMapMem(ScrnInfoPtr pScrn)
{
   ASTRecPtr pAST = ASTPTR(pScrn);

#ifndef XSERVER_LIBPCIACCESS
   pAST->FBVirtualAddr = xf86MapPciMem(pScrn->scrnIndex, VIDMEM_FRAMEBUFFER,
				 pAST->PciTag,
				 pAST->FBPhysAddr, pAST->FbMapSize);
#else
   {
     void** result = (void**)&pAST->FBVirtualAddr;
     int err = pci_device_map_range(pAST->PciInfo,
				    pAST->FBPhysAddr,
				    pAST->FbMapSize,
				    PCI_DEV_MAP_FLAG_WRITABLE |
				    PCI_DEV_MAP_FLAG_WRITE_COMBINE,
				    result);

     if (err)
			return FALSE;
   }
#endif

   if (!pAST->FBVirtualAddr)
      return FALSE;

   return TRUE;
}

Bool
ASTUnmapMem(ScrnInfoPtr pScrn)
{
   ASTRecPtr pAST = ASTPTR(pScrn);

#ifndef XSERVER_LIBPCIACCESS
   xf86UnMapVidMem(pScrn->scrnIndex, (pointer) pAST->FBVirtualAddr,
		   pAST->FbMapSize);
#else
   pci_device_unmap_range(pAST->PciInfo, pAST->FBVirtualAddr, pAST->FbMapSize);
#endif

   pAST->FBVirtualAddr = 0;

   return TRUE;
}

Bool
ASTMapMMIO(ScrnInfoPtr pScrn)
{
   ASTRecPtr pAST = ASTPTR(pScrn);
#ifndef XSERVER_LIBPCIACCESS
   int mmioFlags;

#if !defined(__alpha__)
   mmioFlags = VIDMEM_MMIO | VIDMEM_READSIDEEFFECT;
#else
   mmioFlags = VIDMEM_MMIO | VIDMEM_READSIDEEFFECT | VIDMEM_SPARSE;
#endif


   pAST->MMIOVirtualAddr = xf86MapPciMem(pScrn->scrnIndex, mmioFlags,
				         pAST->PciTag,
				         pAST->MMIOPhysAddr, pAST->MMIOMapSize);

#else
   {
     void** result = (void**)&pAST->MMIOVirtualAddr;
     int err = pci_device_map_range(pAST->PciInfo,
				    pAST->MMIOPhysAddr,
				    pAST->MMIOMapSize,
				    PCI_DEV_MAP_FLAG_WRITABLE,
				    result);

     if (err)
			return FALSE;
   }

#endif
   if (!pAST->MMIOVirtualAddr)
      return FALSE;

   return TRUE;
}

void
ASTUnmapMMIO(ScrnInfoPtr pScrn)
{
   ASTRecPtr pAST = ASTPTR(pScrn);

#ifndef XSERVER_LIBPCIACCESS
   xf86UnMapVidMem(pScrn->scrnIndex, (pointer) pAST->MMIOVirtualAddr,
		   pAST->MMIOMapSize);
#else
   pci_device_unmap_range(pAST->PciInfo, pAST->MMIOVirtualAddr, pAST->MMIOMapSize);
#endif
   pAST->MMIOVirtualAddr = 0;

}
 

@


1.5
log
@Re-add ast files that previous re-import failed to re-add
@
text
@a38 1
#include "xf86PciInfo.h"
a51 6

/* Prototype type declaration*/
Bool ASTMapMem(ScrnInfoPtr pScrn);
Bool ASTUnmapMem(ScrnInfoPtr pScrn);
Bool ASTMapMMIO(ScrnInfoPtr pScrn);
void ASTUnmapMMIO(ScrnInfoPtr pScrn);
@


1.4
log
@Remove a bunch of video drivers that were never built on OpenBSD and
are unlikely to be ported in the future. no objection from miod@@ krw@@.
@
text
@d22 1
a22 1
 
a29 1
#include "mibstore.h"
a37 1
#include "vbe.h"
a45 1
#include "xaa.h"
d78 2
a79 2
     
     if (err) 
d83 1
a83 1
				 
d95 1
a95 1
#ifndef XSERVER_LIBPCIACCESS 
d101 1
a101 1
		   
d103 1
a103 1
   
d133 2
a134 2
     
     if (err) 
d157 1
a157 1
   
@


1.3
log
@Update to xf86-video-ast 0.89.9
@
text
@@


1.2
log
@xf86-video-ast 0.85.0
@
text
@a27 2
#include "xf86Resources.h"
#include "xf86RAC.h"
@


1.1
log
@Initial revision
@
text
@d70 1
a70 1

d74 14
d99 2
a100 1
 
d103 3
d115 2
a117 1
   ASTRecPtr pAST = ASTPTR(pScrn);
d125 1
d129 15
d155 1
d158 3
@


1.1.1.1
log
@Importing xf86-video-ast 0.81.0
@
text
@@


1.1.1.2
log
@Re-import xf86-video-ast.
This chipset is found in HP Proliant MicroServer remote access cards
among others. ok kettenis, seems like a good idea to jasper@@.
@
text
@d22 1
a22 1

d28 2
d32 1
d41 1
d50 1
d70 1
a70 1
#ifndef XSERVER_LIBPCIACCESS
d74 1
a74 15
#else
   {
     void** result = (void**)&pAST->FBVirtualAddr;
     int err = pci_device_map_range(pAST->PciInfo,
				    pAST->FBPhysAddr,
				    pAST->FbMapSize,
				    PCI_DEV_MAP_FLAG_WRITABLE |
				    PCI_DEV_MAP_FLAG_WRITE_COMBINE,
				    result);

     if (err)
			return FALSE;
   }
#endif

d85 1
a85 2

#ifndef XSERVER_LIBPCIACCESS
d88 1
a88 4
#else
   pci_device_unmap_range(pAST->PciInfo, pAST->FBVirtualAddr, pAST->FbMapSize);
#endif

d90 1
a90 1

d97 1
a98 2
#ifndef XSERVER_LIBPCIACCESS
   int mmioFlags;
a105 1

a108 15

#else
   {
     void** result = (void**)&pAST->MMIOVirtualAddr;
     int err = pci_device_map_range(pAST->PciInfo,
				    pAST->MMIOPhysAddr,
				    pAST->MMIOMapSize,
				    PCI_DEV_MAP_FLAG_WRITABLE,
				    result);

     if (err)
			return FALSE;
   }

#endif
a119 1
#ifndef XSERVER_LIBPCIACCESS
a121 3
#else
   pci_device_unmap_range(pAST->PciInfo, pAST->MMIOVirtualAddr, pAST->MMIOMapSize);
#endif
d123 1
a123 1

@

