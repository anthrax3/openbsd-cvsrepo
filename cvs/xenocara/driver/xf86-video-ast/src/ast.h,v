head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.10
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.8
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.6
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.2
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	v0_99_9:1.1.1.2
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v0_81_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.05.24.09.17.25;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	qBZygjuSMc2gFczl;

1.8
date	2014.04.13.10.36.51;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.11.29.21.17.47;	author matthieu;	state dead;
branches;
next	1.6;

1.6
date	2010.11.25.22.03.22;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2009.11.22.15.33.58;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.03.16.31.23;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.07.11.16.36;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.23.21.00.47;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.00.10;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.00.10;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2014.04.13.10.30.12;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update to xf86-video-ast 1.0.1
@
text
@/*
 * Copyright (c) 2005 ASPEED Technology Inc.
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of the authors not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  The authors makes no representations
 * about the suitability of this software for any purpose.  It is provided
 * "as is" without express or implied warranty.
 *
 * THE AUTHORS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL THE AUTHORS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _AST_H_
# define _AST_H_

/* Compiler Options */
#define	Accel_2D
/* #define MMIO_2D */
#define HWC
#define AstVideo
/* #define PATCH_ABI_VERSION */
#define Support_ShadowFB

#include <string.h>
#include <stdlib.h>

#ifdef HAVE_XAA_H
#include "xaa.h"
#endif

#include "ast_pcirename.h"

#include "compat-api.h"

#ifdef	Support_ShadowFB
#include "shadow.h"
#endif

/* Vendor & Device Info */
#ifndef PCI_VENDOR_AST
#define PCI_VENDOR_AST			0x1A03
#endif

#ifndef	PCI_CHIP_AST2000
#define PCI_CHIP_AST2000		0x2000
#endif

#ifndef	PCI_CHIP_AST2100
#define PCI_CHIP_AST2100		0x2010
#endif

#ifndef	PCI_CHIP_AST1180
#define PCI_CHIP_AST1180		0x1180
#endif

typedef enum _CHIP_ID {
    VGALegacy,
    AST2000,
    AST2100,
    AST1100,
    AST2200,
    AST2150,
    AST2300,
    AST2400,
    AST1180
} CHIP_ID;

typedef enum _TX_CHIPTYPE {
    Tx_NONE,
    Tx_Sil164,
    Tx_Ite66121,
    Tx_DP501
} TX_CHIPTYPE;

/* AST REC Info */
#define AST_NAME 			"AST"
#define AST_DRIVER_NAME 		"ast"
#define AST_MAJOR_VERSION 		PACKAGE_VERSION_MAJOR
#define AST_MINOR_VERSION 		PACKAGE_VERSION_MINOR
#define AST_PATCH_VERSION		PACKAGE_VERSION_PATCHLEVEL
#define AST_VERSION	\
        ((AST_MAJOR_VERSION << 20) | (AST_MINOR_VERSION << 10) | AST_PATCH_VERSION)

/* Customized Info */
#define DEFAULT_VIDEOMEM_SIZE		0x00800000
#define DEFAULT_MMIO_SIZE		0x00020000
#define DEFAULT_CMDQ_SIZE		0x00100000
#define MIN_CMDQ_SIZE			0x00040000
#define CMD_QUEUE_GUARD_BAND    	0x00000020
#define DEFAULT_HWC_NUM			0x00000002

/* Customized Info. for DVO */
#define HDMI_I2C_CHANNEL		1
#define HDMI_TX_I2C_SLAVE_ADDR 		0x98

/* Patch Info */
#define ABI_VIDEODRV_VERSION_PATCH	SET_ABI_VERSION(0, 5)

/* Data Type Definition */
typedef INT32  		LONG;
typedef CARD8   	UCHAR;
typedef CARD16  	USHORT;
typedef CARD32  	ULONG;

/* Data Structure Definition */
typedef struct _ASTRegRec {

    UCHAR 	ExtCRTC[0x50];

    UCHAR 	MISC;
    UCHAR 	SEQ[4];
    UCHAR 	CRTC[25];
    UCHAR 	AR[20];
    UCHAR 	GR[9];
    UCHAR	DAC[256][3];

    ULONG	GFX[12];

    UCHAR	REGA4;
    ULONG	ENG8044;
} ASTRegRec, *ASTRegPtr;

typedef struct _VIDEOMODE {

    int			ScreenWidth;
    int			ScreenHeight;
    int			bitsPerPixel;
    int			ScreenPitch;

} VIDEOMODE, *PVIDEOMODE;

typedef struct {

    ULONG		ulCMDQSize;
    ULONG		ulCMDQType;

    ULONG		ulCMDQOffsetAddr;
    UCHAR       *pjCMDQVirtualAddr;

    UCHAR       *pjCmdQBasePort;
    UCHAR       *pjWritePort;
    UCHAR       *pjReadPort;
    UCHAR       *pjEngStatePort;

    ULONG		ulCMDQMask;
    ULONG		ulCurCMDQueueLen;

    ULONG		ulWritePointer;
    ULONG		ulReadPointer;

    ULONG		ulReadPointer_OK;		/* for Eng_DBGChk */

} CMDQINFO, *PCMDQINFO;

typedef struct {

    int			HWC_NUM;
    int			HWC_NUM_Next;

    ULONG		ulHWCOffsetAddr;
    UCHAR       *pjHWCVirtualAddr;

    USHORT		cursortype;
    USHORT		width;
    USHORT   	height;
    USHORT		offset_x;
    USHORT   	offset_y;
    ULONG		fg;
    ULONG		bg;

    UCHAR       cursorpattern[1024];

} HWCINFO, *PHWCINFO;

typedef struct _ASTPortPrivRec{
    FBLinearPtr     linear;
    FBAreaPtr       fbAreaPtr;
    int             fbSize;
    CARD32          bufAddr[2];

    unsigned char   currentBuf;

    short           drw_x, drw_y, drw_w, drw_h;
    short           src_x, src_y, src_w, src_h;
    int             id;
    short           srcPitch, height;

    INT32           brightness;
    INT32           contrast;
    INT32           saturation;
    INT32           hue;

    INT32           gammaR;
    INT32           gammaG;
    INT32           gammaB;

    RegionRec       clip;
    CARD32          colorKey;

    CARD32          videoStatus;
    Time            offTime;
    Time            freeTime;

    CARD32          displayMode;

    int             pitch;
    int             offset;
} ASTPortPrivRec, *ASTPortPrivPtr;

typedef struct _ASTRec {

    EntityInfoPtr 	pEnt;
#ifndef XSERVER_LIBPCIACCESS
	pciVideoPtr		PciInfo;
	PCITAG			PciTag;
#else
	struct pci_device       *PciInfo;
#endif

    OptionInfoPtr 	Options;
    DisplayModePtr  ModePtr;
    FBLinearPtr 	pCMDQPtr;
#ifdef HAVE_XAA_H
    XAAInfoRecPtr	AccelInfoPtr;
#endif
    xf86CursorInfoPtr   HWCInfoPtr;
    FBLinearPtr 	pHWCPtr;

    CloseScreenProcPtr CloseScreen;
    ScreenBlockHandlerProcPtr BlockHandler;

    UCHAR		jChipType;
    UCHAR		jDRAMType;
    ULONG		ulDRAMBusWidth  ;
    ULONG		ulDRAMSize;
    ULONG		ulVRAMSize;
    ULONG		ulVRAMBase;
    ULONG       ulMCLK;

    Bool 		noAccel;
    Bool 		noHWC;
    Bool 		MMIO2D;
    int			ENGCaps;
    int			DBGSelect;
    Bool		VGA2Clone;
    Bool		SupportWideScreen;

    ULONG     		FBPhysAddr;			/* Frame buffer physical address     */
    ULONG     		MMIOPhysAddr;     	/* MMIO region physical address      */
    ULONG     		BIOSPhysAddr;     	/* BIOS physical address             */

    UCHAR     		*FBVirtualAddr;   	/* Map of frame buffer               */
    UCHAR     		*MMIOVirtualAddr; 	/* Map of MMIO region                */

    unsigned long	FbMapSize;
    unsigned long	MMIOMapSize;

#if GET_ABI_MAJOR(ABI_VIDEODRV_VERSION) < 12
    IOADDRESS		RelocateIO;
#else
    int			RelocateIO;
#endif

    VIDEOMODE 		VideoModeInfo;
    ASTRegRec       SavedReg;
    CMDQINFO		CMDQInfo;
    HWCINFO    		HWCInfo;
    ULONG			ulCMDReg;
    Bool			EnableClip;

    int				clip_left;
    int				clip_top;
    int				clip_right;
    int				clip_bottom;

    int				mon_h_active;		/* Monitor Info. */
    int				mon_v_active;

    UCHAR			jTxChipType;		/* 3rd TX */
    UCHAR			DP501_MaxVCLK;
    UCHAR			*pDP501FWBufferVirtualAddress;

#ifdef AstVideo
    XF86VideoAdaptorPtr adaptor;
    Atom        	xvBrightness, xvContrast, xvColorKey, xvHue, xvSaturation;
    Atom			xvGammaRed, xvGammaGreen, xvGammaBlue;
#endif

#ifdef	Support_ShadowFB
    Bool			shadowFB;
    Bool			shadowFB_validation;
    void            *shadow;
    ShadowUpdateProc update;
    ShadowWindowProc window;
    CreateScreenResourcesProcPtr CreateScreenResources;
#endif

} ASTRec, *ASTRecPtr, *ASTPtr;

#define ASTPTR(p) ((ASTRecPtr)((p)->driverPrivate))

/* ast_vgatool.c */
extern Bool bASTIsVGAEnabled(ScrnInfoPtr pScrn);
extern Bool ASTGetVGA2EDID(ScrnInfoPtr pScrn, unsigned char *pEDIDBuffer);
extern void ASTDisplayPowerManagementSet(ScrnInfoPtr pScrn, int PowerManagementMode, int flags);
extern void vASTLoadPalette(ScrnInfoPtr pScrn, int numColors, int *indices, LOCO *colors, VisualPtr pVisual);
extern void ASTBlankScreen(ScrnInfoPtr pScreen, Bool unblack);
extern void vAST1000DisplayOn(ScrnInfoPtr pScrn);
extern void vAST1000DisplayOff(ScrnInfoPtr pScrn);
extern void vASTSetStartAddressCRT1(ASTRecPtr pAST, ULONG base);
extern void ASTGetScratchOptions(ScrnInfoPtr pScrn);
void ASTGetChipType(ScrnInfoPtr pScrn);
ULONG ASTGetMaxDCLK(ScrnInfoPtr pScrn);
ULONG ASTGetVRAMInfo(ScrnInfoPtr pScrn);
void ASTGetDRAMInfo(ScrnInfoPtr pScrn);
Bool bASTRegInit(ScrnInfoPtr pScrn);
void vASTOpenKey(ScrnInfoPtr pScrn);
Bool ASTReadEDID_M68K(ScrnInfoPtr pScrn, BYTE *pEDIDData);
UCHAR ASTGetLinkMaxCLK(ScrnInfoPtr pScrn);
Bool ASTGetVGAEDID(ScrnInfoPtr pScrn, unsigned char *pEDIDBuffer);
Bool bASTInitAST1180(ScrnInfoPtr pScrn);
void ASTGetAST1180DRAMInfo(ScrnInfoPtr pScrn);
void vASTEnableVGAMMIO(ScrnInfoPtr pScrn);
Bool ASTInitVGA(ScrnInfoPtr pScrn, ULONG Flags);

/* ast_2dtool.c */
void vASTWaitEngIdle(ScrnInfoPtr pScrn, ASTRecPtr pAST);
UCHAR *pASTjRequestCMDQ(ASTRecPtr pAST, ULONG ulDataLen);
Bool bASTEnable2D(ScrnInfoPtr pScrn, ASTRecPtr pAST);
void vASTDisable2D(ScrnInfoPtr pScrn, ASTRecPtr pAST);

/* ast_cursor.c */
#ifdef  HWC
Bool ASTCursorInit(ScreenPtr pScreen);
Bool bASTInitHWC(ScrnInfoPtr pScrn, ASTRecPtr pAST);
void ASTDisableHWC(ScrnInfoPtr pScrn);
#endif

/* ast_mode.c */
Bool ASTSetMode(ScrnInfoPtr pScrn, DisplayModePtr mode);

/* ast_accel.c */
#ifdef HAVE_XAA_H
Bool ASTAccelInit(ScreenPtr pScreen);
#endif
void ASTDisplayVideo(ScrnInfoPtr pScrn, ASTPortPrivPtr pPriv, RegionPtr clipBoxes, int id);

/* ast_tool.c */
Bool ASTMapMem(ScrnInfoPtr pScrn);
Bool ASTUnmapMem(ScrnInfoPtr pScrn);
Bool ASTMapMMIO(ScrnInfoPtr pScrn);
void ASTUnmapMMIO(ScrnInfoPtr pScrn);

#endif /* _AST_H_ */
@


1.8
log
@Re-add ast files that previous re-import failed to re-add
@
text
@d22 4
d268 1
a268 2
    IOADDRESS		IODBase;        	/* Base of PIO memory area */
    IOADDRESS		PIOOffset;
d270 3
d312 53
a364 5
/* Include Files */
#include "ast_mode.h"
#include "ast_vgatool.h"
#include "ast_2dtool.h"
#include "ast_cursor.h"
@


1.7
log
@Remove a bunch of video drivers that were never built on OpenBSD and
are unlikely to be ported in the future. no objection from miod@@ krw@@.
@
text
@d22 7
d33 4
d39 5
a43 5
/* Compiler Options */
#define	Accel_2D
/* #define MMIO_2D */
#define HWC
/* #define PATCH_ABI_VERSION */
d47 2
a48 2
#define PCI_VENDOR_AST			0x1A03	
#endif	
d51 1
a51 1
#define PCI_CHIP_AST2000		0x2000		
d58 4
d69 3
a71 1
    AST2300
d74 7
d98 4
d113 1
d115 12
a126 1
    
d135 1
a135 1
    	
d142 1
a142 1
    
d144 7
a150 7
    UCHAR       	*pjCMDQVirtualAddr;
    
    UCHAR       	*pjCmdQBasePort;
    UCHAR       	*pjWritePort;    
    UCHAR       	*pjReadPort;     
    UCHAR       	*pjEngStatePort;
          
d153 1
a153 1
                
d156 1
a156 1
    
d158 1
a158 1
    
d167 2
a168 2
    UCHAR       	*pjHWCVirtualAddr;
    
d171 1
a171 1
    USHORT   		height;   
d173 1
a173 1
    USHORT   		offset_y;
d177 2
a178 2
    UCHAR               cursorpattern[1024];    
        
d181 35
d217 1
a217 1
	
d219 1
a219 1
#ifndef XSERVER_LIBPCIACCESS	
d227 3
a229 2
    DisplayModePtr      ModePtr;		    
    FBLinearPtr 	pCMDQPtr;    
d231 1
d233 1
a233 1
    FBLinearPtr 	pHWCPtr;    
d240 6
a245 1
             
d252 3
a254 2
              	
    ULONG     		FBPhysAddr;		/* Frame buffer physical address     */
d257 1
a257 1
    
d263 1
a263 1
       
d267 1
a267 1
    
d269 1
a269 1
    ASTRegRec           SavedReg;
d272 31
a302 2
    ULONG		ulCMDReg;   
    Bool		EnableClip;
a303 7
    int			clip_left;    
    int			clip_top;
    int			clip_right;    
    int			clip_bottom;    	
   		
} ASTRec, *ASTRecPtr;
	
@


1.6
log
@Update to xf86-video-ast 0.91.10
@
text
@@


1.5
log
@Update to xf86-video-ast 0.89.9
@
text
@d53 2
a54 1
    AST2150
@


1.4
log
@update to xf86-video-ast 0.89.0
@
text
@d161 1
d190 5
@


1.3
log
@update to xf86-video-ast 0.88.8
@
text
@d135 2
a136 1
    
@


1.2
log
@xf86-video-ast 0.85.0
@
text
@d43 4
d50 4
a53 1
    AST2100	
d166 1
@


1.1
log
@Initial revision
@
text
@d26 2
d32 1
d43 6
d52 3
a54 3
#define AST_MAJOR_VERSION 		0
#define AST_MINOR_VERSION 		81
#define AST_PATCH_VERSION		0
d66 3
d135 6
a140 2
    pciVideoPtr 	PciInfo;
    PCITAG 		PciTag;
d151 2
@


1.1.1.1
log
@Importing xf86-video-ast 0.81.0
@
text
@@


1.1.1.2
log
@Re-import xf86-video-ast.
This chipset is found in HP Proliant MicroServer remote access cards
among others. ok kettenis, seems like a good idea to jasper@@.
@
text
@d22 4
a29 18
#define AstVideo
/* #define PATCH_ABI_VERSION */
#define Support_ShadowFB

#include <string.h>
#include <stdlib.h>

#ifdef HAVE_XAA_H
#include "xaa.h"
#endif

#include "ast_pcirename.h"

#include "compat-api.h"

#ifdef	Support_ShadowFB
#include "shadow.h"
#endif
d33 2
a34 2
#define PCI_VENDOR_AST			0x1A03
#endif
d37 1
a37 5
#define PCI_CHIP_AST2000		0x2000
#endif

#ifndef	PCI_CHIP_AST2100
#define PCI_CHIP_AST2100		0x2010
a39 23
#ifndef	PCI_CHIP_AST1180
#define PCI_CHIP_AST1180		0x1180
#endif

typedef enum _CHIP_ID {
    VGALegacy,
    AST2000,
    AST2100,
    AST1100,
    AST2200,
    AST2150,
    AST2300,
    AST2400,
    AST1180
} CHIP_ID;

typedef enum _TX_CHIPTYPE {
    Tx_NONE,
    Tx_Sil164,
    Tx_Ite66121,
    Tx_DP501
} TX_CHIPTYPE;

d43 3
a45 3
#define AST_MAJOR_VERSION 		PACKAGE_VERSION_MAJOR
#define AST_MINOR_VERSION 		PACKAGE_VERSION_MINOR
#define AST_PATCH_VERSION		PACKAGE_VERSION_PATCHLEVEL
a56 7
/* Customized Info. for DVO */
#define HDMI_I2C_CHANNEL		1
#define HDMI_TX_I2C_SLAVE_ADDR 		0x98

/* Patch Info */
#define ABI_VIDEODRV_VERSION_PATCH	SET_ABI_VERSION(0, 5)

a64 1

d66 1
a66 12

    UCHAR 	MISC;
    UCHAR 	SEQ[4];
    UCHAR 	CRTC[25];
    UCHAR 	AR[20];
    UCHAR 	GR[9];
    UCHAR	DAC[256][3];

    ULONG	GFX[12];

    UCHAR	REGA4;
    ULONG	ENG8044;
d75 1
a75 1

d82 1
a82 1

d84 7
a90 7
    UCHAR       *pjCMDQVirtualAddr;

    UCHAR       *pjCmdQBasePort;
    UCHAR       *pjWritePort;
    UCHAR       *pjReadPort;
    UCHAR       *pjEngStatePort;

d93 1
a93 1

d96 1
a96 1

d98 1
a98 1

d107 2
a108 2
    UCHAR       *pjHWCVirtualAddr;

d111 1
a111 1
    USHORT   	height;
d113 1
a113 1
    USHORT   	offset_y;
d116 2
a117 3

    UCHAR       cursorpattern[1024];

a119 35
typedef struct _ASTPortPrivRec{
    FBLinearPtr     linear;
    FBAreaPtr       fbAreaPtr;
    int             fbSize;
    CARD32          bufAddr[2];

    unsigned char   currentBuf;

    short           drw_x, drw_y, drw_w, drw_h;
    short           src_x, src_y, src_w, src_h;
    int             id;
    short           srcPitch, height;

    INT32           brightness;
    INT32           contrast;
    INT32           saturation;
    INT32           hue;

    INT32           gammaR;
    INT32           gammaG;
    INT32           gammaB;

    RegionRec       clip;
    CARD32          colorKey;

    CARD32          videoStatus;
    Time            offTime;
    Time            freeTime;

    CARD32          displayMode;

    int             pitch;
    int             offset;
} ASTPortPrivRec, *ASTPortPrivPtr;

d121 1
a121 1

d123 2
a124 6
#ifndef XSERVER_LIBPCIACCESS
	pciVideoPtr		PciInfo;
	PCITAG			PciTag;
#else
	struct pci_device       *PciInfo;
#endif
d127 2
a128 3
    DisplayModePtr  ModePtr;
    FBLinearPtr 	pCMDQPtr;
#ifdef HAVE_XAA_H
a129 1
#endif
d131 1
a131 1
    FBLinearPtr 	pHWCPtr;
d135 1
a135 9

    UCHAR		jChipType;
    UCHAR		jDRAMType;
    ULONG		ulDRAMBusWidth  ;
    ULONG		ulDRAMSize;
    ULONG		ulVRAMSize;
    ULONG		ulVRAMBase;
    ULONG       ulMCLK;

d141 2
a142 4
    Bool		VGA2Clone;
    Bool		SupportWideScreen;

    ULONG     		FBPhysAddr;			/* Frame buffer physical address     */
d145 1
a145 1

d151 1
a151 1

d155 1
a155 1

d157 1
a157 1
    ASTRegRec       SavedReg;
d160 5
a164 32
    ULONG			ulCMDReg;
    Bool			EnableClip;

    int				clip_left;
    int				clip_top;
    int				clip_right;
    int				clip_bottom;

    int				mon_h_active;		/* Monitor Info. */
    int				mon_v_active;

    UCHAR			jTxChipType;		/* 3rd TX */
    UCHAR			DP501_MaxVCLK;
    UCHAR			*pDP501FWBufferVirtualAddress;

#ifdef AstVideo
    XF86VideoAdaptorPtr adaptor;
    Atom        	xvBrightness, xvContrast, xvColorKey, xvHue, xvSaturation;
    Atom			xvGammaRed, xvGammaGreen, xvGammaBlue;
#endif

#ifdef	Support_ShadowFB
    Bool			shadowFB;
    Bool			shadowFB_validation;
    void            *shadow;
    ShadowUpdateProc update;
    ShadowWindowProc window;
    CreateScreenResourcesProcPtr CreateScreenResources;
#endif

} ASTRec, *ASTRecPtr, *ASTPtr;

@

