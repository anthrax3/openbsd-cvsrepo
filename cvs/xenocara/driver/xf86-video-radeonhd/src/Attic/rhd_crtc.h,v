head	1.7;
access;
symbols
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.4.0.10
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_1_0:1.1.1.2
	v1_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2012.03.04.16.09.06;	author matthieu;	state dead;
branches;
next	1.6;

1.6
date	2012.02.06.22.53.13;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2012.01.31.07.59.54;	author matthieu;	state dead;
branches;
next	1.4;

1.4
date	2009.04.26.13.59.41;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.11.01.18.14.37;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.19.13.41.45;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.12.04.22.20.28;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.12.04.22.20.28;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.01.05.17.28.36;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove xf86-video-radeonhd for good.
@
text
@/*
 * Copyright 2004-2008  Luc Verhaegen <libv@@exsuse.de>
 * Copyright 2007, 2008 Matthias Hopf <mhopf@@novell.com>
 * Copyright 2007, 2008 Egbert Eich   <eich@@novell.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

#ifndef _RHD_CRTC_H
# define _RHD_CRTC_H

struct rhdFMTDither {
    Bool LVDS24Bit;
    Bool LVDSSpatialDither;
    Bool LVDSTemporalDither;
    int LVDSGreyLevel;
};

enum rhdCrtcScaleType {
    RHD_CRTC_SCALE_TYPE_NONE,                     /* top left */
    RHD_CRTC_SCALE_TYPE_CENTER,                   /* center of the actual mode */
    RHD_CRTC_SCALE_TYPE_SCALE,                    /* scaled to fullscreen */
    RHD_CRTC_SCALE_TYPE_SCALE_KEEP_ASPECT_RATIO   /* scaled to fullscreen */
};

#define RHD_CRTC_SCALE_TYPE_DEFAULT RHD_CRTC_SCALE_TYPE_SCALE_KEEP_ASPECT_RATIO


struct rhdCrtc {
    int scrnIndex;

    char *Name;
#define RHD_CRTC_1 0
#define RHD_CRTC_2 1
    int Id; /* for others to hook onto */

    Bool Active;

    int Offset; /* Current offset */
    int bpp;
    int Pitch;
    int Width;
    int Height;
    int X, Y; /* Current frame */
    int MinX, MinY, MaxX, MaxY; /* Panning Area: Max != 0 if used */
    enum rhdCrtcScaleType ScaleType;
    struct rhdPLL *PLL; /* Currently attached PLL: move to private */
    struct rhdLUT *LUT; /* Currently attached LUT: move to private */
    struct rhdCursor *Cursor; /* Fixed to the MODE engine */

    DisplayModePtr CurrentMode;
    DisplayModePtr Modes; /* Validated ones: Cycle through these */

    DisplayModePtr ScaledToMode; /* usually a fixed mode from one of the monitors */

    struct rhdCrtcFMTPrivate *FMTPriv;  /* each CRTC subsystem may define this independently */
    void (*FMTModeSet)(struct rhdCrtc *Crtc, struct rhdFMTDither *FMTDither);
    void (*FMTSave)(struct rhdCrtc *Crtc);
    void (*FMTRestore)(struct rhdCrtc *Crtc);
    void (*FMTDestroy) (struct rhdCrtc *Crtc);

    struct rhdCrtcFBPrivate *FBPriv;  /* each CRTC subsystem may define this independently */
    ModeStatus (*FBValid) (struct rhdCrtc *Crtc, CARD16 Width, CARD16 Height,
			   int bpp, CARD32 Offset, CARD32 Size, CARD32 *pPitch);
    void (*FBSet) (struct rhdCrtc *Crtc, CARD16 Pitch, CARD16 Width,
		   CARD16 Height, int bpp, CARD32 Offset);
    void (*FBSave) (struct rhdCrtc *Crtc);
    void (*FBRestore) (struct rhdCrtc *Crtc);
    void (*FBDestroy) (struct rhdCrtc *Crtc);

    struct rhdCrtcModePrivate *ModePriv;  /* each CRTC subsystem may define this independently */
    ModeStatus (*ModeValid) (struct rhdCrtc *Crtc, DisplayModePtr Mode);
    void (*ModeSet) (struct rhdCrtc *Crtc, DisplayModePtr Mode);
    void (*ModeSave) (struct rhdCrtc *Crtc);
    void (*ModeRestore) (struct rhdCrtc *Crtc);
    void (*ModeDestroy) (struct rhdCrtc *Crtc);

    struct rhdCrtcScalePrivate *ScalePriv;  /* each CRTC subsystem may define this independently */
    ModeStatus (*ScaleValid) (struct rhdCrtc *Crtc, enum rhdCrtcScaleType Type, DisplayModePtr Mode, DisplayModePtr ScaledToMode);
    void (*ScaleSet) (struct rhdCrtc *Crtc, enum rhdCrtcScaleType Type, DisplayModePtr Mode, DisplayModePtr ScaledToMode);
    void (*ScaleSave) (struct rhdCrtc *Crtc);
    void (*ScaleRestore) (struct rhdCrtc *Crtc);
    void (*ScaleDestroy) (struct rhdCrtc *Crtc);

    void (*FrameSet) (struct rhdCrtc *Crtc, CARD16 X, CARD16 Y);

    /* callback for pll setting lives here */
    /* callback for lut setting lives here */
    struct rhdCrtcLUTPrivate *LUTPriv;  /* each CRTC subsystem may define this independently */
    void (*LUTSelect) (struct rhdCrtc *Crtc, struct rhdLUT *LUT);
    void (*LUTSave) (struct rhdCrtc *Crtc);
    void (*LUTRestore) (struct rhdCrtc *Crtc);
    void (*LUTDestroy) (struct rhdCrtc *Crtc);

    Bool (*Power) (struct rhdCrtc *Crtc, int Power);
    void (*Blank) (struct rhdCrtc *Crtc, Bool Blank);
};

Bool RHDCrtcsInit(RHDPtr rhdPtr);
void RHDAtomCrtcsInit(RHDPtr rhdPtr);
void RHDCrtcsDestroy(RHDPtr rhdPtr);
void RHDCrtcSave(struct rhdCrtc *Crtc);
void RHDCrtcRestore(struct rhdCrtc *Crtc);

/*
 * Calculate overscan values for scaler.
 */
struct rhdScalerOverscan
{
    int OverscanTop;
    int OverscanBottom;
    int OverscanLeft;
    int OverscanRight;
    enum rhdCrtcScaleType Type;
};

extern struct rhdScalerOverscan
rhdCalculateOverscan(DisplayModePtr Mode,
		     DisplayModePtr ScaledToMode,
		     enum rhdCrtcScaleType Type);


#endif /* _RHD_CRTC_H */
@


1.6
log
@Revert the update to xf86-video-ati 6.14.3. Requested by espie@@
who experiemnts regressions with this driver.
@
text
@@


1.5
log
@Remove 2 obsolete drivers that have been unlinked from builds.
@
text
@@


1.4
log
@Update to xf86-video-radeonhd 1.2.5. Tested by eric@@

Version 1.2.5 improvements:

  - Added 2D acceleration for R6xx and R7xx.
  - Added XVideo support for R6xx and R7xx.
  - Added support for RS880 and RV790.
  - Added RandR 1.3 mandatory properties.
  - Refactoring of MC code.
  - Enable DRI support by default on R5xx and RS6xx.
  - LUT (color lookup table) fixes.
  - Tons of quirk table entries and bug fixes.
  - Fix register accesses for processors that reorder memory writes.
@
text
@@


1.3
log
@xf86-video-radeonhd 1.2.3
@
text
@d2 1
a2 1
 * Copyright 2004-2008  Luc Verhaegen <lverhaegen@@novell.com>
d111 1
a111 1
    void (*Power) (struct rhdCrtc *Crtc, int Power);
@


1.2
log
@Update to xf86-video-radeonhd 1.2.0. Tested by jdixon@@ and jasper@@
@
text
@d2 3
a4 3
 * Copyright 2004-2007  Luc Verhaegen <lverhaegen@@novell.com>
 * Copyright 2007       Matthias Hopf <mhopf@@novell.com>
 * Copyright 2007       Egbert Eich   <eich@@novell.com>
d26 1
a26 1
#define _RHD_CRTC_H
d35 10
d62 3
a64 3

    struct rhdPLL *PLL; /* Currently attached PLL */
    struct rhdLUT *LUT; /* Currently attached LUT */
d70 1
a70 1
    DisplayModePtr ScaledMode; /* usually a fixed mode from one of the monitors */
d72 7
d83 3
d87 1
d90 10
a99 6

#define RHD_CRTC_SCALE_TYPE_NONE    0   /* top left */
#define RHD_CRTC_SCALE_TYPE_CENTER  1   /* center of the actual mode */
#define RHD_CRTC_SCALE_TYPE_SCALE   2   /* scaled to fullscreen */
    ModeStatus (*ScaleValid) (struct rhdCrtc *Crtc, CARD32 Type, DisplayModePtr Mode, DisplayModePtr ScaledMode);
    void (*ScaleSet) (struct rhdCrtc *Crtc, CARD32 Type, DisplayModePtr Mode, DisplayModePtr ScaledMode);
d103 3
a105 1
    void (*PLLSelect) (struct rhdCrtc *Crtc, struct rhdPLL *PLL);
d107 3
d113 1
d115 5
a119 3
    struct rhdCrtcStore *Store;
    void (*Save) (struct rhdCrtc *Crtc);
    void (*Restore) (struct rhdCrtc *Crtc);
d121 11
a131 4
    struct rhdFMTStore *FMTStore;
    void (*FMTModeSet)(struct rhdCrtc *Crtc, struct rhdFMTDither *FMTDither);
    void (*FMTSave)(struct rhdCrtc *Crtc);
    void (*FMTRestore)(struct rhdCrtc *Crtc);
d133 4
a136 2
    /* Gamma, scaling */
};
a137 2
void RHDCrtcsInit(RHDPtr rhdPtr);
void RHDCrtcsDestroy(RHDPtr rhdPtr);
@


1.1
log
@Initial revision
@
text
@d28 7
d51 1
d58 3
a60 1
    DisplayModePtr Modes; /* Cycle through these */
d70 8
a80 2
    void (*FrameSet) (struct rhdCrtc *Crtc, CARD16 X, CARD16 Y);

d87 5
@


1.1.1.1
log
@xf86-video-radeonhd 1.0
@
text
@@


1.1.1.2
log
@xf86-video-radeonhd 1.1.0
@
text
@a43 1
    int MinX, MinY, MaxX, MaxY; /* Panning Area: Max != 0 if used */
@

