head	1.6;
access;
symbols
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.3.0.10
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.8
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v1_1_0:1.1.1.1
	v1_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.03.04.16.09.07;	author matthieu;	state dead;
branches;
next	1.5;

1.5
date	2012.02.06.22.53.16;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.01.31.07.59.54;	author matthieu;	state dead;
branches;
next	1.3;

1.3
date	2009.04.26.13.59.41;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.19.13.41.46;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.12.04.22.20.28;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.12.04.22.20.28;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove xf86-video-radeonhd for good.
@
text
@/*
 * Copyright 2007  Luc Verhaegen <libv@@exsuse.de>
 * Copyright 2007  Matthias Hopf <mhopf@@novell.com>
 * Copyright 2007  Egbert Eich   <eich@@novell.com>
 * Copyright 2007  Advanced Micro Devices, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

#ifdef HAVE_CONFIG_H
# include "config.h"
#endif

#include "scrnintstr.h"
#include "shadow.h"
#include "fb.h"
#include "xf86.h"
#include "rhd.h"

typedef struct _rhdShadowRec
{
    unsigned char *shadow;
    CreateScreenResourcesProcPtr CreateScreenResources;
} rhdShadowRec;

Bool
RHDShadowPreInit(ScrnInfoPtr pScrn)
{
    RHDPtr rhdPtr = RHDPTR(pScrn);

    RHDFUNC(pScrn);

    if (!xf86LoadSubModule(pScrn, "shadow")) {
	return FALSE;
    }
    if (!(rhdPtr->shadowPtr = (rhdShadowPtr)xalloc(sizeof(rhdShadowRec))))
	return FALSE;

    xf86DrvMsg(pScrn->scrnIndex, X_INFO, "Using ShadowFB\n");

    return TRUE;
}

static void *
rhdShadowWindow(ScreenPtr pScreen, CARD32 row, CARD32 offset, int mode,
	  CARD32 *size, void *closure)
{
    ScrnInfoPtr pScrn = xf86Screens[pScreen->myNum];
    RHDPtr rhdPtr = RHDPTR(pScrn);

    DEBUGP(RHDDebugVerb(pScrn->scrnIndex, 1, "FUNCTION: %s row: %i\n",__func__,row));

    *size = pScrn->displayWidth * (pScrn->bitsPerPixel >> 3);
    return ((CARD8 *)rhdPtr->FbBase + rhdPtr->FbScanoutStart
	    + row * (*size) + offset);
}

static Bool
rhdShadowCreateScreenResources(ScreenPtr pScreen)
{
    ScrnInfoPtr pScrn = xf86Screens[pScreen->myNum];
    RHDPtr rhdPtr = RHDPTR(pScrn);
    rhdShadowPtr shadowPtr = rhdPtr->shadowPtr;
    Bool ret;
    shadowUpdateProc update;

    RHDFUNC(pScrn);

    update = shadowUpdatePackedWeak();
    pScreen->CreateScreenResources = shadowPtr->CreateScreenResources;
    ret = pScreen->CreateScreenResources(pScreen);
    pScreen->CreateScreenResources = rhdShadowCreateScreenResources;

    shadowAdd(pScreen, pScreen->GetScreenPixmap(pScreen),
	      update,
	      rhdShadowWindow, 0, 0);

    return ret;
}

Bool
RHDShadowScreenInit(ScreenPtr pScreen)
{
    ScrnInfoPtr pScrn = xf86Screens[pScreen->myNum];
    RHDPtr rhdPtr = RHDPTR(pScrn);
    rhdShadowPtr shadowPtr = rhdPtr->shadowPtr;
    Bool ret;

    RHDFUNC(pScrn);

    if (shadowPtr) {
	if (!(shadowPtr->shadow
	      = xcalloc(1, pScrn->displayWidth * pScrn->virtualY
			* ((pScrn->bitsPerPixel + 7) >> 3)))) {
	    xf86DrvMsg(pScrn->scrnIndex, X_ERROR,
		       "Failed to allocate shadow FB buffer\n");
	    return FALSE;
	}
	ret =  fbScreenInit(pScreen,
			    (CARD8 *) shadowPtr->shadow,
			    pScrn->virtualX, pScrn->virtualY,
			    pScrn->xDpi, pScrn->yDpi,
			    pScrn->displayWidth, pScrn->bitsPerPixel);
	if (!ret) {
	    xfree(shadowPtr->shadow);
	    shadowPtr->shadow = NULL;
	}
	return ret;
    }
    return FALSE;
}

Bool
RHDShadowSetup(ScreenPtr pScreen)
{
    ScrnInfoPtr pScrn = xf86Screens[pScreen->myNum];
    RHDPtr rhdPtr = RHDPTR(pScrn);
    rhdShadowPtr shadowPtr = rhdPtr->shadowPtr;

    RHDFUNC(pScrn);

    if (!shadowPtr || !shadowPtr->shadow)
	return TRUE;

    if (!shadowSetup(pScreen))
	return FALSE;

    shadowPtr->CreateScreenResources = pScreen->CreateScreenResources;
    pScreen->CreateScreenResources = rhdShadowCreateScreenResources;

    return TRUE;
}

Bool
RHDShadowCloseScreen(ScreenPtr pScreen)
{
    ScrnInfoPtr pScrn = xf86Screens[pScreen->myNum];
    RHDPtr rhdPtr = RHDPTR(pScrn);
    rhdShadowPtr shadowPtr = rhdPtr->shadowPtr;

    RHDFUNC(pScrn);

    if (!shadowPtr)
	return TRUE;

    xfree(shadowPtr->shadow);
    shadowPtr->shadow = NULL;

    return TRUE;
}

void
RHDShadowDestroy(RHDPtr rhdPtr)
{
    RHDFUNC(rhdPtr);

    if (rhdPtr->shadowPtr) {
	xfree(rhdPtr->shadowPtr);
	rhdPtr->shadowPtr = NULL;
    }
}
@


1.5
log
@Revert the update to xf86-video-ati 6.14.3. Requested by espie@@
who experiemnts regressions with this driver.
@
text
@@


1.4
log
@Remove 2 obsolete drivers that have been unlinked from builds.
@
text
@@


1.3
log
@Update to xf86-video-radeonhd 1.2.5. Tested by eric@@

Version 1.2.5 improvements:

  - Added 2D acceleration for R6xx and R7xx.
  - Added XVideo support for R6xx and R7xx.
  - Added support for RS880 and RV790.
  - Added RandR 1.3 mandatory properties.
  - Refactoring of MC code.
  - Enable DRI support by default on R5xx and RS6xx.
  - LUT (color lookup table) fixes.
  - Tons of quirk table entries and bug fixes.
  - Fix register accesses for processors that reorder memory writes.
@
text
@@


1.2
log
@Update to xf86-video-radeonhd 1.2.0. Tested by jdixon@@ and jasper@@
@
text
@d2 1
a2 1
 * Copyright 2007  Luc Verhaegen <lverhaegen@@novell.com>
@


1.1
log
@Initial revision
@
text
@a48 3
    if (!rhdPtr->shadowFB.val.bool)
	return FALSE;

d70 1
a70 1
    return ((CARD8 *)rhdPtr->FbBase + rhdPtr->FbFreeStart
@


1.1.1.1
log
@xf86-video-radeonhd 1.0
@
text
@@
