head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.20
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.16
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.14
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.10
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.16
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.14
	OPENBSD_5_0:1.2.0.12
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_3:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.09.08.16.23.41;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.10.12.21.31.59;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.18.20;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.18.20;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xf86-video-trident 1.3.6
@
text
@/*
 * Copyright 1992-2003 by Alan Hourihane, North Wales, UK.
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of Alan Hourihane not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  Alan Hourihane makes no representations
 * about the suitability of this software for any purpose.  It is provided
 * "as is" without express or implied warranty.
 *
 * ALAN HOURIHANE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL ALAN HOURIHANE BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 *
 * Author:  Alan Hourihane, alanh@@fairlite.demon.co.uk
 */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

/* All drivers should typically include these */
#include "xf86.h"
#include "xf86_OSproc.h"

/* Drivers that need to access the PCI config space directly need this */
#include "xf86Pci.h"

#include "compiler.h"
#include "trident.h"
#include "trident_regs.h"

int TVGA8900SetRead(ScreenPtr pScreen, int bank)
{
  ScrnInfoPtr pScrn;
  TRIDENTPtr pTrident;
  pScrn = xf86ScreenToScrn(pScreen);
  pTrident = TRIDENTPTR(pScrn);
  OUTW(0x3c4, 0xC000 | (((bank & 0x3f) ^ 0x02)<<8)|0x0E);
  return 0;
}
int TGUISetRead(ScreenPtr pScreen, int bank)
{
  ScrnInfoPtr pScrn;
  TRIDENTPtr pTrident;
  pScrn = xf86ScreenToScrn(pScreen);
  pTrident = TRIDENTPTR(pScrn);
  OUTB(0x3d9, bank & 0xff);
  return 0;
}
int TVGA8900SetWrite(ScreenPtr pScreen, int bank)
{
  ScrnInfoPtr pScrn;
  TRIDENTPtr pTrident;
  pScrn = xf86ScreenToScrn(pScreen);
  pTrident = TRIDENTPTR(pScrn);
  OUTW(0x3c4, 0xC000 | (((bank & 0x3f) ^ 0x02)<<8)|0x0E);
  return 0;
}
int TGUISetWrite(ScreenPtr pScreen, int bank)
{
  ScrnInfoPtr pScrn;
  TRIDENTPtr pTrident;
  pScrn = xf86ScreenToScrn(pScreen);
  pTrident = TRIDENTPTR(pScrn);
  OUTB(0x3d8, bank & 0xff);
  return 0;
}
int TVGA8900SetReadWrite(ScreenPtr pScreen, int bank)
{
  ScrnInfoPtr pScrn;
  TRIDENTPtr pTrident;
  pScrn = xf86ScreenToScrn(pScreen);
  pTrident = TRIDENTPTR(pScrn);
  OUTW(0x3c4, 0xC000 | (((bank & 0x3f) ^ 0x02)<<8)|0x0E);
  return 0;
}
int TGUISetReadWrite(ScreenPtr pScreen, int bank)
{
  ScrnInfoPtr pScrn;
  TRIDENTPtr pTrident;
  pScrn = xf86ScreenToScrn(pScreen);
  pTrident = TRIDENTPTR(pScrn);
  OUTB(0x3d8, bank & 0xff);
  OUTB(0x3d9, bank & 0xff);
  return 0;
}
@


1.2
log
@xf86-video-trident 1.3.0
@
text
@a32 3
/* Drivers for PCI hardware need this */
#include "xf86PciInfo.h"

d44 1
a44 1
  pScrn = xf86Screens[pScreen->myNum];
d53 1
a53 1
  pScrn = xf86Screens[pScreen->myNum];
d62 1
a62 1
  pScrn = xf86Screens[pScreen->myNum];
d71 1
a71 1
  pScrn = xf86Screens[pScreen->myNum];
d80 1
a80 1
  pScrn = xf86Screens[pScreen->myNum];
d89 1
a89 1
  pScrn = xf86Screens[pScreen->myNum];
@


1.1
log
@Initial revision
@
text
@a23 1
/* $XFree86: xc/programs/Xserver/hw/xfree86/drivers/trident/trident_bank.c,v 1.4 2000/12/07 16:48:04 alanh Exp $ */
@


1.1.1.1
log
@Importing xf86-video-trident 1.2.3
@
text
@@
