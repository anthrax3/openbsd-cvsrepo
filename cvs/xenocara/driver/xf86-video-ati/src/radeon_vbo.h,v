head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.12
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2013.08.16.17.04.13;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2012.03.04.16.01.20;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.06.22.53.13;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2012.01.25.21.33.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xf86-video-ati 7.2.0, requested by jsg@@

It fixes an endianess problem with kms and the in tree x86-video-ati
among other things.
It has been tested on various i386/amd64/sparc64/macppc machines
on a range of hardware from r100->northern islands.
@
text
@
#ifndef RADEON_VBO_H
#define RADEON_VBO_H

extern void radeon_vb_no_space(ScrnInfoPtr pScrn, struct radeon_vbo_object *vbo, int vert_size);
extern void radeon_vbo_init_lists(ScrnInfoPtr pScrn);
extern void radeon_vbo_free_lists(ScrnInfoPtr pScrn);
extern void radeon_vbo_flush_bos(ScrnInfoPtr pScrn);
extern void radeon_vbo_get(ScrnInfoPtr pScrn, struct radeon_vbo_object *vbo);
extern void radeon_vbo_put(ScrnInfoPtr pScrn, struct radeon_vbo_object *vbo);

static inline void radeon_vbo_check(ScrnInfoPtr pScrn,
				    struct radeon_vbo_object *vbo,
				    int vert_size)
{

    if ((vbo->vb_offset + (vbo->verts_per_op * vert_size)) > vbo->vb_total) {
	radeon_vb_no_space(pScrn, vbo, vert_size);
    }
}

static inline void *
radeon_vbo_space(ScrnInfoPtr pScrn,
		 struct radeon_vbo_object *vbo,
		 int vert_size)
{
    void *vb;

    /* we've ran out of space in the vertex buffer - need to get a
       new one */
    radeon_vbo_check(pScrn, vbo, vert_size);

    vbo->vb_op_vert_size = vert_size;
    vb = (pointer)((char *)vbo->vb_bo->ptr + vbo->vb_offset);
    return vb;
}

static inline void radeon_vbo_commit(ScrnInfoPtr pScrn,
				     struct radeon_vbo_object *vbo)
{

    vbo->vb_offset += vbo->verts_per_op * vbo->vb_op_vert_size;
}

#endif
@


1.3
log
@Re-update xf86-video-ati to 6.14.3.

Because of ati.c revision 1.5, it will not be selected by
autoconfiguration code, so people who want to run this version of the
driver on their radeon cards need an explicit "Device" section in
xorg.conf.
@
text
@a26 3
#if defined(XF86DRM_MODE)
    RADEONInfoPtr info = RADEONPTR(pScrn);
#endif
d34 1
a34 6
#if defined(XF86DRM_MODE)
    if (info->cs)
	vb = (pointer)((char *)vbo->vb_bo->ptr + vbo->vb_offset);
    else
#endif
	vb = (pointer)((char *)vbo->vb_ptr + vbo->vb_offset);
@


1.2
log
@Revert the update to xf86-video-ati 6.14.3. Requested by espie@@
who experiemnts regressions with this driver.
@
text
@@


1.1
log
@Update to xf86-video-ati 6.14.3. Tested by many.
@
text
@@

