head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.6.0.10
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.8
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.2
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4;
locks; strict;
comment	@ * @;


1.8
date	2016.11.13.14.42.27;	author matthieu;	state Exp;
branches;
next	1.7;
commitid	VCI3KGRPv1Ex2rp2;

1.7
date	2016.04.02.07.37.34;	author matthieu;	state Exp;
branches;
next	1.6;
commitid	bsyGwvYIwQ6RE8Qj;

1.6
date	2013.08.16.17.04.06;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2012.08.08.16.25.22;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.07.20.55.34;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2012.03.04.16.01.19;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.06.22.53.12;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2012.01.25.21.33.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to xf86-video-ati 7.7.1
Tested by jsg@@,  Rafael Sadowski and myself on various hardware.
@
text
@/*
 * Copyright Â© 2007 Red Hat, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Authors:
 *     Dave Airlie <airlied@@redhat.com>
 *
 */
#ifndef DRMMODE_DISPLAY_H
#define DRMMODE_DISPLAY_H

#include "xf86drmMode.h"
#ifdef HAVE_LIBUDEV
#include "libudev.h"
#endif

#include "radeon_drm_queue.h"
#include "radeon_probe.h"

#ifndef DRM_CAP_TIMESTAMP_MONOTONIC
#define DRM_CAP_TIMESTAMP_MONOTONIC 0x6
#endif

typedef struct {
  int fd;
  unsigned fb_id;
  drmModeFBPtr mode_fb;
  int cpp;
  struct radeon_bo_manager *bufmgr;
  ScrnInfoPtr scrn;
#ifdef HAVE_LIBUDEV
  struct udev_monitor *uevent_monitor;
  InputHandlerProc uevent_handler;
#endif
  drmEventContext event_context;
  int count_crtcs;

  Bool delete_dp_12_displays;

  Bool dri2_flipping;
  Bool present_flipping;
} drmmode_rec, *drmmode_ptr;

typedef struct {
  unsigned old_fb_id;
  int flip_count;
  void *event_data;
  unsigned int fe_frame;
  uint64_t fe_usec;
  xf86CrtcPtr fe_crtc;
  radeon_drm_handler_proc handler;
  radeon_drm_abort_proc abort;
} drmmode_flipdata_rec, *drmmode_flipdata_ptr;

struct drmmode_scanout {
    struct radeon_bo *bo;
    PixmapPtr pixmap;
    DamagePtr damage;
    unsigned fb_id;
    int width, height;
};

typedef struct {
    drmmode_ptr drmmode;
    drmModeCrtcPtr mode_crtc;
    int hw_id;
    struct radeon_bo *cursor_bo;
    struct drmmode_scanout rotate;
    struct drmmode_scanout scanout[2];
    unsigned scanout_id;
    Bool scanout_update_pending;
    int dpms_mode;
    /* For when a flip is pending when DPMS off requested */
    int pending_dpms_mode;
    CARD64 dpms_last_ust;
    uint32_t dpms_last_seq;
    int dpms_last_fps;
    uint32_t interpolated_vblanks;
    uint16_t lut_r[256], lut_g[256], lut_b[256];
    int prime_pixmap_x;

    /* Modeset needed (for DPMS on or after a page flip crossing with a
     * modeset)
     */
    Bool need_modeset;
    /* A flip is pending for this CRTC */
    Bool flip_pending;
} drmmode_crtc_private_rec, *drmmode_crtc_private_ptr;

typedef struct {
    drmModePropertyPtr mode_prop;
    uint64_t value;
    int num_atoms; /* if range prop, num_atoms == 1; if enum prop, num_atoms == num_enums + 1 */
    Atom *atoms;
} drmmode_prop_rec, *drmmode_prop_ptr;


typedef struct {
    drmmode_ptr drmmode;
    int output_id;
    drmModeConnectorPtr mode_output;
    drmModeEncoderPtr *mode_encoders;
    drmModePropertyBlobPtr edid_blob;
    int dpms_enum_id;
    int num_props;
    drmmode_prop_ptr props;
    int enc_mask;
    int enc_clone_mask;
} drmmode_output_private_rec, *drmmode_output_private_ptr;


extern Bool drmmode_pre_init(ScrnInfoPtr pScrn, drmmode_ptr drmmode, int cpp);
extern void drmmode_init(ScrnInfoPtr pScrn, drmmode_ptr drmmode);
extern void drmmode_fini(ScrnInfoPtr pScrn, drmmode_ptr drmmode);
extern Bool drmmode_set_bufmgr(ScrnInfoPtr pScrn, drmmode_ptr drmmode, struct radeon_bo_manager *bufmgr);
extern void drmmode_set_cursor(ScrnInfoPtr scrn, drmmode_ptr drmmode, int id, struct radeon_bo *bo);
void drmmode_adjust_frame(ScrnInfoPtr pScrn, drmmode_ptr drmmode, int x, int y);
extern Bool drmmode_set_desired_modes(ScrnInfoPtr pScrn, drmmode_ptr drmmode,
				      Bool set_hw);
#if GET_ABI_MAJOR(ABI_VIDEODRV_VERSION) >= 10
extern void drmmode_copy_fb(ScrnInfoPtr pScrn, drmmode_ptr drmmode);
#endif
extern Bool drmmode_setup_colormap(ScreenPtr pScreen, ScrnInfoPtr pScrn);

extern void drmmode_scanout_free(ScrnInfoPtr scrn);

extern void drmmode_uevent_init(ScrnInfoPtr scrn, drmmode_ptr drmmode);
extern void drmmode_uevent_fini(ScrnInfoPtr scrn, drmmode_ptr drmmode);

extern int drmmode_get_crtc_id(xf86CrtcPtr crtc);
extern int drmmode_get_height_align(ScrnInfoPtr scrn, uint32_t tiling);
extern int drmmode_get_pitch_align(ScrnInfoPtr scrn, int bpe, uint32_t tiling);
extern int drmmode_get_base_align(ScrnInfoPtr scrn, int bpe, uint32_t tiling);
extern void drmmode_clear_pending_flip(xf86CrtcPtr crtc);

Bool radeon_do_pageflip(ScrnInfoPtr scrn, ClientPtr client,
			uint32_t new_front_handle, uint64_t id, void *data,
			int ref_crtc_hw_id, radeon_drm_handler_proc handler,
			radeon_drm_abort_proc abort);
int drmmode_crtc_get_ust_msc(xf86CrtcPtr crtc, CARD64 *ust, CARD64 *msc);
int drmmode_get_current_ust(int drm_fd, CARD64 *ust);

#endif

@


1.7
log
@Update to xf86-video-ati 7.6.1. ok jsg@@
@
text
@a62 1
  drmmode_ptr drmmode;
d68 1
a72 5
typedef struct {
  drmmode_flipdata_ptr flipdata;
  Bool dispatch_me;
} drmmode_flipevtcarrier_rec, *drmmode_flipevtcarrier_ptr;

d91 2
d100 3
a102 1
    /* Modeset needed for DPMS on */
d104 2
d152 1
@


1.6
log
@Update to xf86-video-ati 7.2.0, requested by jsg@@

It fixes an endianess problem with kms and the in tree x86-video-ati
among other things.
It has been tested on various i386/amd64/sparc64/macppc machines
on a range of hardware from r100->northern islands.
@
text
@d35 1
a44 1
  drmModeResPtr mode_res;
d54 6
d68 3
a70 2
  unsigned int fe_tv_sec;
  unsigned int fe_tv_usec;
d78 8
d91 4
a94 2
    struct radeon_bo *rotate_bo;
    unsigned rotate_fb_id;
d101 4
a104 1
    int scanout_pixmap_x;
d135 3
a137 1
extern Bool drmmode_set_desired_modes(ScrnInfoPtr pScrn, drmmode_ptr drmmode);
d139 1
d142 2
d147 1
d152 5
a156 1
Bool radeon_do_pageflip(ScrnInfoPtr scrn, struct radeon_bo *new_front, void *data, int ref_crtc_hw_id);
@


1.5
log
@Update to xf86-video-ati 6.14.6. Tested by mpi@@, brad, eric@@, ajacoutot@@.
@
text
@a29 2
#ifdef XF86DRM_MODE

d37 4
d79 4
d84 1
d111 1
d127 1
a130 1
#endif
@


1.4
log
@Update to xf86-video-ati 6.14.4. Tested by jasper@@, krw@@, mpi@@, shadchin@@
@
text
@d76 1
d106 1
a106 1
void drmmode_adjust_frame(ScrnInfoPtr pScrn, drmmode_ptr drmmode, int x, int y, int flags);
@


1.3
log
@Re-update xf86-video-ati to 6.14.3.

Because of ati.c revision 1.5, it will not be selected by
autoconfiguration code, so people who want to run this version of the
driver on their radeon cards need an explicit "Device" section in
xorg.conf.
@
text
@d102 1
@


1.2
log
@Revert the update to xf86-video-ati 6.14.3. Requested by espie@@
who experiemnts regressions with this driver.
@
text
@@


1.1
log
@Update to xf86-video-ati 6.14.3. Tested by many.
@
text
@@

