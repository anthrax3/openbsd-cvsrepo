head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.30
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.28
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.26
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.24
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.22
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.20
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.18
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.16
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.14
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.12
	OPENBSD_5_0:1.4.0.10
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_4_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.4
date	2009.05.03.16.53.46;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.03.26.22.09.36;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.21.19.55.24;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.20.12.22;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.20.12.22;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@update to xf86-video-siliconmotion 1.7.1.
@
text
@.\" Header:   //Mercury/Projects/archives/XFree86/4.0/siliconmotion.cpp-arc   1.4   29 Nov 2000 14:12:56   Frido  $
.\" $XFree86: xc/programs/Xserver/hw/xfree86/drivers/siliconmotion/siliconmotion.man,v 1.4 2001/12/20 21:35:38 eich Exp $
.\" shorthand for double quote that works everywhere.
.ds q \N'34'
.TH siliconmotion __drivermansuffix__ __vendorversion__
.SH NAME
siliconmotion \- Silicon Motion video driver
.SH SYNOPSIS
.B "Section \*qDevice\*q"
.br
.BI "  Identifier \*q"  devname \*q
.br
.B  "  Driver \*qsiliconmotion\*q"
.br
\ \ ...
.br
\ \ [
.B "Option"
"optionname" ["optionvalue"]]
.br
.B EndSection
.SH DESCRIPTION
.B siliconmotion 
is an __xservername__ driver for Silicon Motion based video cards.  The driver is fully
accelerated, and provides support for the following framebuffer depths:
8, 16, and 24.  All
visual types are supported for depth 8, and TrueColor
visuals are supported for the other depths.
.SH SUPPORTED HARDWARE
The
.B siliconmotion
driver supports PCI and AGP video cards based on the following Silicon Motion chips:
.TP 12
.B Lynx
SM910
.TP 12
.B LynxE
SM810
.TP 12
.B Lynx3D
SM820
.TP 12
.B LynxEM
SM710
.TP 12
.B LynxEM+
SM712
.TP 12
.B Lynx3DM
SM720
.TP 12
.B Cougar3DR
SM731
.TP 12
.B MSOC
SM501,SM502
.SH CONFIGURATION DETAILS
Please refer to __xconfigfile__(__filemansuffix__) for general configuration
details.  This section only covers configuration details specific to this
driver.  All options names are case and white space insensitive when
parsed by the server, for example,  "lynxe" and "LynxE" are equivalent.
.PP
Multihead mode configuration is done through the RandR1.2 interface
(see __xconfigfile__(__filemansuffix__) and xrandr(__appmansuffix__)
for further information). Hardware accelerated screen rotation and
framebuffer resizing are only supported with the
.B EXA
acceleration architecture (see the
.B AccelMethod
option below).
.PP
The driver auto-detects the chipset type, but the following
.B ChipSet
names may optionally be specified in the config file
.B \*qDevice\*q
section, and will override the auto-detection:
.PP
.RS 4
"lynx", "lynxe", "lynx3d", "lynxem", "lynxem+", "lynx3dm", "cougar3dr", "msoc".
.RE

.PP
The following Cursor
.B Options
are supported:
.TP
.BI "Option \*qHWCursor\*q \*q" boolean \*q
Enable or disable the HW cursor.  Default: on.
.TP
.BI "Option \*qSWCursor\*q \*q" boolean \*q
Inverse of "HWCursor".  Default: off.

.PP
The following display
.B Options
are supported:
.TP
.BI "Option \*qVideoKey\*q \*q" integer \*q
Set the video color key.  Default: a little off full blue.
.TP
.BI "Option \*qByteSwap\*q \*q" boolean \*q
Turn on byte swapping for capturing using SMI demo board.  Default: off.
.TP
.BI "Option \*qInterlaced\*q \*q" boolean \*q
Turn on interlaced video capturing.  Default: off.
.TP
.BI "Option \*qUseBIOS\*q \*q" boolean \*q
Use the BIOS to set the modes. This is used for custom panel timings.
Default: off for SM72x and SM5xx, otherwise on.
.TP
.BI "Option \*qDualhead\*q \*q" boolean \*q
Enable dualhead mode.
Currently not all chips are supported and hardware video
overlay (XV) support may have some limitations.
Default: off.
.TP
.BI "Option \*qPanelSize\*q \*q" width x height \*q
Override LCD panel dimension autodetection.
.TP
.BI "Option \*qUseFBDev\*q \*q"  boolean \*q
Don't actually program the hardware mode registers, but leave it as
set by the operating system. Only available on MSOC chips. Default: off.
.TP
.BI "Option \*qCSCVideo\*q \*q"  boolean \*q
CSC video uses color space conversion to render video directly to
the framebuffer, without using an overlay.
Only available on MSOC chips. Default: on.
.PP

The following video memory
.B Options
are supported:
.TP
.BI "Option \*qmclk\*q \*q" integer \*q
Sets the memory clock. You must specify the units.  For example \fI50Mhz\fP
is the same as \fI50000Khz\fP or \fI50000000Hz\fP.
On MSOC chips this is the main clock source for all functional blocks, such
as the 2D engine, GPIO, Video Engine, and DMA Engine. This option is only
used for debugging purposes on MSOC chips.
Default: probe the memory clock value, and use it at server start.
.TP
.BI "Option \*qmxclk\*q \*q" integer \*q
Sets the memory clock. You must specify the units.  For example \fI50Mhz\fP
is the same as \fI50000Khz\fP or \fI50000000Hz\fP.
Clock source for the local SDRAM controller. This option is only available
on MSOC chips and used only for debugging purposes.
Default: probe the memory clock value, and use it at server start.
.PP

The following acceleration and graphics engine
.B Options
are supported:
.TP
.B "Option \*qNoAccel\*q"
Disable acceleration.  Very useful for determining if the
driver has problems with drawing and acceleration routines.  This is the first
option to try if your server runs but you see graphic corruption on the screen.
Using it decreases performance, as it uses software emulation for drawing
operations the video driver can accelerate with hardware.
Default: acceleration is enabled.
.TP
.BI "Option \*qAccelMethod\*q \*q" "string" \*q
Chooses between available acceleration architectures.  Valid options are
.B XAA
and
.B EXA.
XAA is the traditional acceleration architecture and support for it is very
stable.  EXA is a newer acceleration architecture with better performance for
the Render and Composite extensions, but the rendering code for it is newer and
possibly unstable.  The default is
.B XAA.

.PP
The following PCI bus
.B Options
are supported:
.TP
.BI "Option \*qPciBurst\*q \*q" boolean \*q
will enable PCI burst mode. This should work on all but a
few broken PCI chipsets, and will increase performance.  Default: on.
.TP
.BI "Option \*qPciRetry\*q \*q" boolean \*q
will allow the driver to rely on PCI Retry to program the registers.
.B "PciBurst"
must be enabled for this to work. 
This will increase performance, especially for small fills/blits, 
because the driver does not have to poll the card before sending it
commands to make sure it is ready. It should work on most 
recent PCI chipsets.  Default: value of
.I PciBurst
option.

.SH SEE ALSO
__xservername__(1), __xconfigfile__(__filemansuffix__), Xserver(1), X(__miscmansuffix__)

.SH SUPPORT
For assistance with this driver, or __xservername__ in general, check the web
site at http://www.x.org/.  If you find a problem with __xservername__ or have a
question not answered in the FAQ please use our bug report form available on
the web site or send mail to xorg@@lists.freedesktop.org.  When reporting problems
with the driver send as much detail as possible, including chipset type, a 
server output log, and operating system specifics.

.SH AUTHORS
Kevin Brosius, 
Matt Grossman, 
Harald Koenig,
Sebastien Marineau,
Mark Vojkovich,
Frido Garritsen,
Corvin Zahn.
@


1.3
log
@Update to xf86-video-siliconmotion 1.7.0.

Tested by ratchov@@. It works a bit better than previous version on his
machine, but still has issues.
@
text
@d109 1
a109 1
Default: on.
d113 2
a114 2
Currently not all chips are supported and on lynx chipsets hardware video
overlay (XV) will only work on the secondary VGA output.
d194 1
a194 1
__xservername__(1), __xconfigfile__(__filemansuffix__), xorgconfig(1), Xserver(1), X(__miscmansuffix__)
@


1.2
log
@update to xf86-video-siliconmotion 1.6.0
@
text
@d51 6
d63 9
d79 1
a79 1
"lynx", "lynxe", "lynx3d", "lynxem", "lynxem+", "lynx3dm".
a97 9
.BI "Option \*qShadowFB\*q \*q" boolean \*q
Use shadow framebuffer.  Default: off.
.TP
.BI "Option \*qRotate\*q \*qCW\*q"
.TP
.BI "Option \*qRotate\*q \*qCCW\*q"
Rotate the screen CW - clockwise or CCW - counter clockwise.
Uses ShadowFB.  Default: no rotation.
.TP
d111 4
a114 2
.BI "Option \*qZoomOnLCD\*q \*q" boolean \*q
Allow changing resolution on LCD (Ctrl-Alt-Plus and Ctrl-Alt-Minus).
d117 12
a128 6
.BI "Option \*qDualhead\*q \*q" boolean \*q
Enable dualhead mode.  Due to hardware limitations, dualhead is limited 
to depth 16 and to the panel size and timings on both the flat panel and 
the CRT and the CRT must be to the right of the flat panel.  Only lynx 
chips are supported at the moment.
Default: off.
a129 1
.PP
d134 15
a148 7
.BI "Option \*qset_mclk\*q \*q" integer \*q
sets the memory clock, where
.I integer
is in kHz, and
.I integer
<= 100000.  Default: probe the memory clock value,
and use it at server start.
a149 2

.PP
a161 39
.B "Option \*qfifo_aggressive\*q"
.TP
.B "Option \*qfifo_moderate\*q"
.TP
.B "Option \*qfifo_conservative\*q"
alter the settings
for the threshold at which the pixel FIFO takes over the internal 
memory bus to refill itself. The smaller this threshold, the better
the acceleration performance of the card. You may try the fastest 
setting
.RB ( "fifo_aggressive" )
and move down if you encounter pixel corruption.
The optimal setting will probably depend on dot-clock and on color 
depth. Note that specifying any of these options will also alter other
memory settings which may increase performance, so trying
.B "fifo_conservative"
will in most cases be a slight benefit (this uses the chip defaults).
If pixel corruption or transient streaking is observed during drawing
operations then removing any fifo options is recommended.  Default: none.

.PP
The following PCI bus
.B Options
are supported:
.TP
.BI "Option \*qpci_burst\*q \*q" boolean \*q
will enable PCI burst mode. This should work on all but a
few broken PCI chipsets, and will increase performance.  Default: off.
.TP
.BI "Option \*qpci_retry\*q \*q" boolean \*q
will allow the driver to rely on PCI Retry to program the 
ViRGE registers. 
.B "pci_burst"
must be enabled for this to work. 
This will increase performance, especially for small fills/blits, 
because the driver does not have to poll the ViRGE before sending it 
commands to make sure it is ready. It should work on most 
recent PCI chipsets.  Default: off.
.TP
d174 1
a174 1
The following additional
d178 14
a191 3
.BI "Option \*qShowCache\*q \*q" boolean \*q
Enable or disable viewing offscreen cache memory.  A
development debug option.  Default: off.
@


1.1
log
@Initial revision
@
text
@d24 1
a24 1
is an XFree86 driver for Silicon Motion based video cards.  The driver is fully
d52 1
a52 1
Please refer to XF86Config(__filemansuffix__) for general configuration
d181 11
d203 1
a203 1
XFree86(1), XF86Config(__filemansuffix__), xf86config(1), Xserver(1), X(__miscmansuffix__)
d206 2
a207 3
For assistance with this driver, or XFree86 in general, check the XFree86 web
site at http://www.xfree86.org.  A FAQ is available on the web site at
http://www.xfree86.org/FAQ/.  If you find a problem with XFree86 or have a
d209 1
a209 1
the web site or send mail to XFree86@@XFree86.org.  When reporting problems
@


1.1.1.1
log
@Importing xf86-video-siliconmotion 1.4.2
@
text
@@
