head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.12
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.8
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.6
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.4
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.2
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.6
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.4
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.2
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.5.0.4
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.6
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_1_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2017.01.22.09.44.15;	author matthieu;	state Exp;
branches;
next	1.10;
commitid	eqnV0ShUiED6Tid5;

1.10
date	2014.01.03.09.37.47;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2012.04.08.17.03.03;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2011.11.05.14.01.47;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.02.21.59.45;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.02.21.03.42;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2009.11.22.14.38.31;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.03.13.54.12;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.08.23.14.59.25;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.08.23.14.16.59;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.19.52.34;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.19.52.34;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Update to xf86-input-joystick 1.6.3
@
text
@#  Copyright 2005 Adam Jackson.
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation
#  on the rights to use, copy, modify, merge, publish, distribute, sub
#  license, and/or sell copies of the Software, and to permit persons to whom
#  the Software is furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice (including the next
#  paragraph) shall be included in all copies or substantial portions of the
#  Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
#  ADAM JACKSON BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# Process this file with autoconf to produce a configure script

# Initialize Autoconf
AC_PREREQ([2.60])
AC_INIT([xf86-input-joystick],
        [1.6.3],
        [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg],
        [xf86-input-joystick])
AC_CONFIG_SRCDIR([Makefile.am])
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_AUX_DIR(.)

# Initialize Automake
AM_INIT_AUTOMAKE([foreign dist-bzip2])
AM_MAINTAINER_MODE

# Initialize libtool
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

# Initialize X.Org macros 1.8 or later for MAN_SUBSTS set by XORG_MANPAGE_SECTIONS
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.8 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.8)
XORG_DEFAULT_OPTIONS

# Checks for extensions
XORG_DRIVER_CHECK_EXT(XINPUT, inputproto)
XORG_DRIVER_CHECK_EXT(XKB, kbproto)

# Checks for pkg-config packages
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.9.99.2] xproto $REQUIRED_MODULES)

DRIVER_NAME=joystick
AC_SUBST([DRIVER_NAME])

# -----------------------------------------------------------------------------
#			Configuration options
# -----------------------------------------------------------------------------
# Define a configure option for an alternate input module directory
AC_ARG_WITH(xorg-module-dir,
            AS_HELP_STRING([--with-xorg-module-dir=DIR],
                           [Default xorg module directory [[default=$libdir/xorg/modules]]]),
            [moduledir="$withval"],
            [moduledir="$libdir/xorg/modules"])
inputdir=${moduledir}/input
AC_SUBST(inputdir)

# Define a configure option for an alternate X Server SDK Headers
# X Server SDK location is required to install joystick header files
AC_ARG_WITH(sdkdir,
            AS_HELP_STRING([--with-sdkdir=<path>],
                           [Xorg X Server sdk headers (default is autodetected)]),
            [sdkdir="$withval"],
            [sdkdir=`$PKG_CONFIG --variable=sdkdir xorg-server`])
AC_SUBST(sdkdir)

# Define a configure option to enable code debugging
AC_ARG_ENABLE(debug, AS_HELP_STRING([--disable-debug],
                                    [Disable debugging code (default: enabled)]),
                                    [DEBUGGING=$enableval], [DEBUGGING=yes])
if test "x$DEBUGGING" = xyes; then
   AC_DEFINE(DEBUG, 1, [Enable debugging code])
fi
AM_CONDITIONAL(DEBUG, [test "x$DEBUGGING" = xyes])

# -----------------------------------------------------------------------------
#		Determine which joystick backend to build
# -----------------------------------------------------------------------------
linux_backend=yes
AC_CHECK_HEADERS([linux/joystick.h],, [linux_backend=no])
AM_CONDITIONAL(LINUX_BACKEND, [test "x$linux_backend" = xyes])
if test "x$linux_backend" = xyes; then
    AC_DEFINE(LINUX_BACKEND, 1, [Compile Linux joystick backend])
fi

bsd_backend=yes
AC_CHECK_HEADERS([dev/usb/usb.h])
AC_CHECK_HEADERS([usbhid.h dev/usb/usbhid.h],, [bsd_backend=no],
[[#if HAVE_DEV_USB_USB_H
#include <dev/usb/usb.h>
#endif
]])
AC_CHECK_LIB([usbhid],[hid_get_item],, [bsd_backend=no])
AM_CONDITIONAL(BSD_BACKEND, [test "x$bsd_backend" = xyes])
if test "x$bsd_backend" = xyes; then
    AC_CHECK_HEADERS([dev/usb/usb_ioctl.h])
    AC_DEFINE(BSD_BACKEND, 1, [Compile BSD usbhid backend])
fi

evdev_backend=yes
AC_CHECK_HEADERS([linux/input.h],, [evdev_backend=no])
AM_CONDITIONAL(EVDEV_BACKEND, [test "x$evdev_backend" = xyes])
if test "x$evdev_backend" = xyes; then
    AC_DEFINE(EVDEV_BACKEND, 1, [Compile Linux evdev backend])
fi
# -----------------------------------------------------------------------------

AC_CONFIG_FILES([Makefile
                src/Makefile
                man/Makefile
                config/Makefile
                include/Makefile
                xorg-joystick.pc])
AC_OUTPUT

# -----------------------------------------------------------------------------

AS_ECHO() 
AS_ECHO("Building Linux joystick backend: $linux_backend")
AS_ECHO("Building Linux evdev backend: $evdev_backend")
AS_ECHO("Building BSD usbhid backend: $bsd_backend")

if test "x$linux_backend" != "xyes" -a \
	"x$bsd_backend" != "xyes" -a \
	"x$evdev_backend" != "xyes"; then
    AC_MSG_ERROR([No backends were found. Your operating system is not
                  supported by the joystick driver. Contact
                  xorg@@lists.freedesktop.org if you are interested in
                  porting it.])
fi
@


1.10
log
@Update to xf86-input-joystick 1.6.2
@
text
@d26 1
a26 1
        [1.6.2],
@


1.9
log
@Update to xf86-input-joystick 1.6.1
@
text
@d26 1
a26 1
        [1.6.1],
d79 3
a81 3
AC_ARG_ENABLE(debug, AS_HELP_STRING([--enable-debug],
                                    [Enable debugging (default: disabled)]),
                                    [DEBUGGING=$enableval], [DEBUGGING=no])
@


1.8
log
@Update to xf86-input-joystick 1.6.0 for good now.
@
text
@d26 1
a26 1
        [1.6.0],
@


1.7
log
@Revert update to xf86-input-joystick 1.6.0.
This driver depends on xserver 1.10.
@
text
@d23 2
a24 1
AC_PREREQ(2.57)
d26 1
a26 1
        1.5.0,
d28 1
a28 2
        xf86-input-joystick)

d30 1
a31 1
AM_INIT_AUTOMAKE([dist-bzip2])
d33 2
d37 1
a37 6
# Require xorg-macros: XORG_CWARNFLAGS, XORG_CHANGELOG
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.2 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.2)
AM_CONFIG_HEADER([config.h])

# Checks for programs.
a39 2
AC_PROG_CC
XORG_CWARNFLAGS
d41 15
a55 1
AH_TOP([#include "xorg-server.h"])
d57 4
d62 2
a63 3
            AC_HELP_STRING([--with-xorg-module-dir=DIR],
                           [Default xorg module directory 
                           [[default=$libdir/xorg/modules]]]),
a65 12

AC_ARG_ENABLE(debug,
            AS_HELP_STRING([--enable-debug],
                           [Enable debugging (default: enabled)]),
			   [DEBUGGING=$enableval], [DEBUGGING=yes])
if test "x$DEBUGGING" = xyes; then
    AC_DEFINE(DEBUG, 1, [Enable debugging code])
else
    AC_DEFINE(NDEBUG, 1, [Disable some debugging code])
fi
AM_CONDITIONAL(DEBUG, [test "x$DEBUGGING" = xyes])

d69 2
a70 9
# Checks for extensions
XORG_DRIVER_CHECK_EXT(XINPUT, inputproto)
XORG_DRIVER_CHECK_EXT(XKB, kbproto)

# Checks for pkg-config packages
PKG_CHECK_MODULES(XORG, 
               [xorg-server >= 1.3.99.901] xproto $REQUIRED_MODULES)
XORG_CFLAGS="$CWARNFLAGS $XORG_CFLAGS"
xorg_sdkdir=$(pkg-config --variable=sdkdir xorg-server)
d72 4
a75 3
	AC_HELP_STRING([--with-sdkdir=<path>],
		[Xorg X Server sdk headers (default is autodetected)]),
	[sdkdir="$withval"], [sdkdir="${xorg_sdkdir}"])
d78 8
a85 1
# Checks for libraries.
d87 3
a89 1
# Checks for header files.
d117 1
d119 14
a132 20
AC_HEADER_STDC

DRIVER_NAME=joystick
AC_SUBST([DRIVER_NAME])

XORG_MANPAGE_SECTIONS
XORG_RELEASE_VERSION
XORG_CHANGELOG

AC_OUTPUT([Makefile
           src/Makefile
           man/Makefile
           config/Makefile
           include/Makefile
           xorg-joystick.pc])

echo 
echo Building Linux joystick backend: $linux_backend
echo Building Linux evdev backend: $evdev_backend
echo Building BSD usbhid backend: $bsd_backend
@


1.6
log
@Update to xf86-input-joystick 1.6.0
@
text
@d23 1
a23 2
# Initialize Autoconf
AC_PREREQ([2.60])
d25 1
a25 1
        [1.6.0],
d27 2
a28 1
        [xf86-input-joystick])
a29 1
AC_CONFIG_HEADERS([config.h])
d31 1
a32 2
# Initialize Automake
AM_INIT_AUTOMAKE([foreign dist-bzip2])
d35 6
a40 1
# Initialize libtool
d43 2
d46 1
a46 15
# Initialize X.Org macros 1.8 or later for MAN_SUBSTS set by XORG_MANPAGE_SECTIONS
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.8 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.8)
XORG_DEFAULT_OPTIONS

# Checks for extensions
XORG_DRIVER_CHECK_EXT(XINPUT, inputproto)
XORG_DRIVER_CHECK_EXT(XKB, kbproto)

# Checks for pkg-config packages
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.9.99.2] xproto $REQUIRED_MODULES)

DRIVER_NAME=joystick
AC_SUBST([DRIVER_NAME])
a47 4
# -----------------------------------------------------------------------------
#			Configuration options
# -----------------------------------------------------------------------------
# Define a configure option for an alternate input module directory
d49 3
a51 2
            AS_HELP_STRING([--with-xorg-module-dir=DIR],
                           [Default xorg module directory [[default=$libdir/xorg/modules]]]),
d54 12
d69 9
a77 2
# Define a configure option for an alternate X Server SDK Headers
# X Server SDK location is required to install joystick header files
d79 3
a81 4
            AS_HELP_STRING([--with-sdkdir=<path>],
                           [Xorg X Server sdk headers (default is autodetected)]),
            [sdkdir="$withval"],
            [sdkdir=`$PKG_CONFIG --variable=sdkdir xorg-server`])
d84 1
a84 8
# Define a configure option to enable code debugging
AC_ARG_ENABLE(debug, AS_HELP_STRING([--enable-debug],
                                    [Enable debugging (default: disabled)]),
                                    [DEBUGGING=$enableval], [DEBUGGING=no])
if test "x$DEBUGGING" = xyes; then
   AC_DEFINE(DEBUG, 1, [Enable debugging code])
fi
AM_CONDITIONAL(DEBUG, [test "x$DEBUGGING" = xyes])
d86 1
a86 3
# -----------------------------------------------------------------------------
#		Determine which joystick backend to build
# -----------------------------------------------------------------------------
a113 1
# -----------------------------------------------------------------------------
d115 20
a134 14
AC_CONFIG_FILES([Makefile
                src/Makefile
                man/Makefile
                config/Makefile
                include/Makefile
                xorg-joystick.pc])
AC_OUTPUT

# -----------------------------------------------------------------------------

AS_ECHO() 
AS_ECHO("Building Linux joystick backend: $linux_backend")
AS_ECHO("Building Linux evdev backend: $evdev_backend")
AS_ECHO("Building BSD usbhid backend: $bsd_backend")
@


1.5
log
@Update to xf86-input-joystick 1.5.0
@
text
@d23 2
a24 1
AC_PREREQ(2.57)
d26 1
a26 1
        1.5.0,
d28 1
a28 2
        xf86-input-joystick)

d30 1
a31 1
AM_INIT_AUTOMAKE([dist-bzip2])
d33 2
d37 1
a37 6
# Require xorg-macros: XORG_CWARNFLAGS, XORG_CHANGELOG
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.2 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.2)
AM_CONFIG_HEADER([config.h])

# Checks for programs.
a39 2
AC_PROG_CC
XORG_CWARNFLAGS
d41 15
a55 1
AH_TOP([#include "xorg-server.h"])
d57 4
d62 2
a63 3
            AC_HELP_STRING([--with-xorg-module-dir=DIR],
                           [Default xorg module directory 
                           [[default=$libdir/xorg/modules]]]),
a65 12

AC_ARG_ENABLE(debug,
            AS_HELP_STRING([--enable-debug],
                           [Enable debugging (default: enabled)]),
			   [DEBUGGING=$enableval], [DEBUGGING=yes])
if test "x$DEBUGGING" = xyes; then
    AC_DEFINE(DEBUG, 1, [Enable debugging code])
else
    AC_DEFINE(NDEBUG, 1, [Disable some debugging code])
fi
AM_CONDITIONAL(DEBUG, [test "x$DEBUGGING" = xyes])

d69 2
a70 9
# Checks for extensions
XORG_DRIVER_CHECK_EXT(XINPUT, inputproto)
XORG_DRIVER_CHECK_EXT(XKB, kbproto)

# Checks for pkg-config packages
PKG_CHECK_MODULES(XORG, 
               [xorg-server >= 1.3.99.901] xproto $REQUIRED_MODULES)
XORG_CFLAGS="$CWARNFLAGS $XORG_CFLAGS"
xorg_sdkdir=$(pkg-config --variable=sdkdir xorg-server)
d72 4
a75 3
	AC_HELP_STRING([--with-sdkdir=<path>],
		[Xorg X Server sdk headers (default is autodetected)]),
	[sdkdir="$withval"], [sdkdir="${xorg_sdkdir}"])
d78 8
a85 1
# Checks for libraries.
d87 3
a89 1
# Checks for header files.
d117 1
d119 14
a132 20
AC_HEADER_STDC

DRIVER_NAME=joystick
AC_SUBST([DRIVER_NAME])

XORG_MANPAGE_SECTIONS
XORG_RELEASE_VERSION
XORG_CHANGELOG

AC_OUTPUT([Makefile
           src/Makefile
           man/Makefile
           config/Makefile
           include/Makefile
           xorg-joystick.pc])

echo 
echo Building Linux joystick backend: $linux_backend
echo Building Linux evdev backend: $evdev_backend
echo Building BSD usbhid backend: $bsd_backend
@


1.4
log
@update to xf86-input-joystick 1.4.1
@
text
@d25 1
a25 1
        1.4.1,
d75 1
a75 1
               [xorg-server >= 1.3.99.901 xorg-server <= 1.6.99] xproto $REQUIRED_MODULES)
d139 4
a142 3
    AC_MSG_ERROR([No backends were found. Your operating is not supported by the
                  joystick driver. Contact xorg@@lists.freedesktop.org if you are 
                  interested in porting it.])
@


1.3
log
@Fix check for dev/usb/usbhid.h (needs dev/usb/usb.h).
@
text
@d25 1
a25 1
        1.3.2,
d35 3
a37 3
DRIVER_NAME=joystick
AC_SUBST([DRIVER_NAME])

d44 1
a69 1
XORG_DRIVER_CHECK_EXT(RANDR, randrproto)
d75 8
a82 5
               [xorg-server >= 1.3.99.901] xproto $REQUIRED_MODULES)
sdkdir=$(pkg-config --variable=sdkdir xorg-server)

CFLAGS="$CFLAGS $XORG_CFLAGS "' -I$(top_srcdir)/src'
AC_SUBST([CFLAGS])
d104 1
d117 3
d122 1
d124 6
a129 1
AC_OUTPUT([Makefile src/Makefile man/Makefile config/Makefile])
@


1.2
log
@xf86-input joystick 1.3.2
@
text
@d92 6
a97 1
AC_CHECK_HEADERS([usbhid.h dev/usb/usb.h dev/usb/usbhid.h],, [bsd_backend=no])
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
        1.1.0,
a46 18
#AC_DEFINE(XFree86LOADER,1,[Stub define for loadable drivers])
#
#AC_ARG_ENABLE(XINPUT, AS_HELP_STRING([--enable-xinput],
#              [Build XInput support (default: yes)]),
#              [XINPUT=$enableval],[XINPUT=yes])
#AM_CONDITIONAL(XINPUT, test "x$XINPUT" = "xyes")
#if test "x$XINPUT" = "xyes" ; then
#    AC_DEFINE(XINPUT,1,[Enable XInput support])
#fi
#
#AC_ARG_ENABLE(XKB, AS_HELP_STRING([--enable-xkb],
#              [Build XKB support (default: yes)]),
#              [XKB=$enableval],[XKB=yes])
#AM_CONDITIONAL(XKB, test "x$XKB" = "xyes")
#if test "x$XKB" = "xyes" ; then
#    AC_DEFINE(XKB,1,[Enable XKB support])
#fi

d49 2
a50 1
                           [Default xorg module directory [[default=$libdir/xorg/modules]]]),
d53 12
d71 1
d74 2
a75 1
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.0.99.901] xproto $REQUIRED_MODULES)
d84 22
d111 14
a124 1
AC_OUTPUT([Makefile src/Makefile man/Makefile])
@


1.1.1.1
log
@Importing xf86-input-joystick 1.1.0
@
text
@@
