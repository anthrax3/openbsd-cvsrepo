head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.37;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.37;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" te
'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 color.gl 
.ds Xs 48493 5 color.gl
.TH GLCOLOR 3G
.SH NAME
.B "glColor3b, glColor3d, glColor3f, glColor3i, glColor3s, glColor3ub, glColor3ui, glColor3us, glColor4b, glColor4d, glColor4f, glColor4i, glColor4s, glColor4ub, glColor4ui, glColor4us, glColor3bv, glColor3dv, glColor3fv, glColor3iv, glColor3sv, glColor3ubv, glColor3uiv, glColor3usv, glColor4bv, glColor4dv, glColor4fv, glColor4iv, glColor4sv, glColor4ubv, glColor4uiv, glColor4usv
\- set the current color

.SH C SPECIFICATION
void \f3glColor3b\fP(
GLbyte \fIred\fP,
.nf
.ta \w'\f3void \fPglColor3b( 'u
	GLbyte \fIgreen\fP,
	GLbyte \fIblue\fP )
.fi
void \f3glColor3d\fP(
GLdouble \fIred\fP,
.nf
.ta \w'\f3void \fPglColor3d( 'u
	GLdouble \fIgreen\fP,
	GLdouble \fIblue\fP )
.fi
void \f3glColor3f\fP(
GLfloat \fIred\fP,
.nf
.ta \w'\f3void \fPglColor3f( 'u
	GLfloat \fIgreen\fP,
	GLfloat \fIblue\fP )
.fi
void \f3glColor3i\fP(
GLint \fIred\fP,
.nf
.ta \w'\f3void \fPglColor3i( 'u
	GLint \fIgreen\fP,
	GLint \fIblue\fP )
.fi
void \f3glColor3s\fP(
GLshort \fIred\fP,
.nf
.ta \w'\f3void \fPglColor3s( 'u
	GLshort \fIgreen\fP,
	GLshort \fIblue\fP )
.fi
void \f3glColor3ub\fP(
GLubyte \fIred\fP,
.nf
.ta \w'\f3void \fPglColor3ub( 'u
	GLubyte \fIgreen\fP,
	GLubyte \fIblue\fP )
.fi
void \f3glColor3ui\fP(
GLuint \fIred\fP,
.nf
.ta \w'\f3void \fPglColor3ui( 'u
	GLuint \fIgreen\fP,
	GLuint \fIblue\fP )
.fi
void \f3glColor3us\fP(
GLushort \fIred\fP,
.nf
.ta \w'\f3void \fPglColor3us( 'u
	GLushort \fIgreen\fP,
	GLushort \fIblue\fP )
.fi
void \f3glColor4b\fP(
GLbyte \fIred\fP,
.nf
.ta \w'\f3void \fPglColor4b( 'u
	GLbyte \fIgreen\fP,
	GLbyte \fIblue\fP,
	GLbyte \fIalpha\fP )
.fi
void \f3glColor4d\fP(
GLdouble \fIred\fP,
.nf
.ta \w'\f3void \fPglColor4d( 'u
	GLdouble \fIgreen\fP,
	GLdouble \fIblue\fP,
	GLdouble \fIalpha\fP )
.fi
void \f3glColor4f\fP(
GLfloat \fIred\fP,
.nf
.ta \w'\f3void \fPglColor4f( 'u
	GLfloat \fIgreen\fP,
	GLfloat \fIblue\fP,
	GLfloat \fIalpha\fP )
.fi
void \f3glColor4i\fP(
GLint \fIred\fP,
.nf
.ta \w'\f3void \fPglColor4i( 'u
	GLint \fIgreen\fP,
	GLint \fIblue\fP,
	GLint \fIalpha\fP )
.fi
void \f3glColor4s\fP(
GLshort \fIred\fP,
.nf
.ta \w'\f3void \fPglColor4s( 'u
	GLshort \fIgreen\fP,
	GLshort \fIblue\fP,
	GLshort \fIalpha\fP )
.fi
void \f3glColor4ub\fP(
GLubyte \fIred\fP,
.nf
.ta \w'\f3void \fPglColor4ub( 'u
	GLubyte \fIgreen\fP,
	GLubyte \fIblue\fP,
	GLubyte \fIalpha\fP )
.fi
void \f3glColor4ui\fP(
GLuint \fIred\fP,
.nf
.ta \w'\f3void \fPglColor4ui( 'u
	GLuint \fIgreen\fP,
	GLuint \fIblue\fP,
	GLuint \fIalpha\fP )
.fi
void \f3glColor4us\fP(
GLushort \fIred\fP,
.nf
.ta \w'\f3void \fPglColor4us( 'u
	GLushort \fIgreen\fP,
	GLushort \fIblue\fP,
	GLushort \fIalpha\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2red\fP\ \f2green\fP\ \f2blue\fP\ \ 'u 
\f2red\fP, \f2green\fP, \f2blue\fP
Specify new red, green, and blue values for the current color.
.TP
\f2alpha\fP
Specifies a new alpha value for the current color.
Included only in the four-argument \%\f3glColor4\fP commands.
.SH C SPECIFICATION
void \f3glColor3bv\fP(
const GLbyte \fI*v\fP )
.nf
.fi
void \f3glColor3dv\fP(
const GLdouble \fI*v\fP )
.nf
.fi
void \f3glColor3fv\fP(
const GLfloat \fI*v\fP )
.nf
.fi
void \f3glColor3iv\fP(
const GLint \fI*v\fP )
.nf
.fi
void \f3glColor3sv\fP(
const GLshort \fI*v\fP )
.nf
.fi
void \f3glColor3ubv\fP(
const GLubyte \fI*v\fP )
.nf
.fi
void \f3glColor3uiv\fP(
const GLuint \fI*v\fP )
.nf
.fi
void \f3glColor3usv\fP(
const GLushort \fI*v\fP )
.nf
.fi
void \f3glColor4bv\fP(
const GLbyte \fI*v\fP )
.nf
.fi
void \f3glColor4dv\fP(
const GLdouble \fI*v\fP )
.nf
.fi
void \f3glColor4fv\fP(
const GLfloat \fI*v\fP )
.nf
.fi
void \f3glColor4iv\fP(
const GLint \fI*v\fP )
.nf
.fi
void \f3glColor4sv\fP(
const GLshort \fI*v\fP )
.nf
.fi
void \f3glColor4ubv\fP(
const GLubyte \fI*v\fP )
.nf
.fi
void \f3glColor4uiv\fP(
const GLuint \fI*v\fP )
.nf
.fi
void \f3glColor4usv\fP(
const GLushort \fI*v\fP )
.nf
.fi

.SH PARAMETERS
.TP
\f2v\fP
Specifies a pointer to an array that contains red, green, blue,
and (sometimes) alpha values.
.SH DESCRIPTION
The GL stores both a current single-valued color index
and a current four-valued RGBA color.
\%\f3glColor\fP sets a new four-valued RGBA color.
\%\f3glColor\fP has two major variants:
\%\f3glColor3\fP and \%\f3glColor4\fP.
\%\f3glColor3\fP variants specify new red,
green,
and blue values explicitly
and set the current alpha value to 1.0 (full intensity) implicitly.
\%\f3glColor4\fP variants specify all four color components explicitly.
.P
\%\f3glColor3b\fP, \%\f3glColor4b\fP,
\%\f3glColor3s\fP, \%\f3glColor4s\fP, \%\f3glColor3i\fP, and \%\f3glColor4i\fP take 
three or four signed byte, short, or long integers as arguments.
When \f3v\fP is appended to the name,
the color commands can take a pointer to an array of such values.
.P
Current color values are stored in floating-point ,
with unspecified mantissa and exponent sizes.
Unsigned integer color components,
when specified,
are linearly mapped to floating-point values such that the largest
representable value maps to 1.0 (full intensity),
and 0 maps to 0.0 (zero intensity).
Signed integer color components,
when specified,
are linearly mapped to floating-point values such that the most positive
representable value maps to 1.0,
and the most negative representable value maps to \-1.0. (Note that
this mapping does not convert 0 precisely to 0.0.)
Floating-point values are mapped directly.
.P
Neither floating-point nor signed integer values are clamped
to the range [0,1] before the current color is updated.
However,
color components are clamped to this range before they are interpolated
or written into a color buffer.
.SH NOTES
The initial value for the current color is (1, 1, 1, 1). 
.P
The current color can be updated at any time.
In particular,
\%\f3glColor\fP can be called between a call to \%\f3glBegin\fP and the corresponding
call to \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_CURRENT_COLOR\fP
.br
\%\f3glGet\fP with argument \%\f3GL_RGBA_MODE\fP
.SH SEE ALSO
\%\f3glIndex(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
