head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.59;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.59;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 scissor.g
.ds Xs 30565 4 scissor.gl
.TH GLSCISSOR 3G
.SH NAME
.B "glScissor
\- define the scissor box

.SH C SPECIFICATION
void \f3glScissor\fP(
GLint \fIx\fP,
.nf
.ta \w'\f3void \fPglScissor( 'u
	GLint \fIy\fP,
	GLsizei \fIwidth\fP,
	GLsizei \fIheight\fP )
.fi

.SH PARAMETERS
.TP \w'\f2x\fP\ \f2y\fP\ \ 'u 
\f2x\fP, \f2y\fP 
Specify the lower left corner of the scissor box.
Initially (0, 0).
.TP
\f2width\fP, \f2height\fP
Specify the width and height of the scissor box.
When a GL context is first attached to a window,
\f2width\fP and \f2height\fP are set to the dimensions of that window.
.SH DESCRIPTION
\%\f3glScissor\fP defines a rectangle, called the scissor box,
in window coordinates.
The first two arguments,
\f2x\fP and \f2y\fP,
specify the lower left corner of the box.
\f2width\fP and \f2height\fP specify the width and height of the box. 
.P
To enable and disable the scissor test, call
\%\f3glEnable\fP and \%\f3glDisable\fP with argument
\%\f3GL_SCISSOR_TEST\fP. The test is initially disabled. 
While the test is enabled, only pixels that lie within the scissor box
can be modified by drawing commands.
Window coordinates have integer values at the shared corners of
frame buffer pixels.
\f7glScissor(0,0,1,1)\fP allows modification of only the lower left
pixel in the window, and \f7glScissor(0,0,0,0)\fP doesn't allow
modification of any pixels in the window.  
.P
When the scissor test is disabled,
it is as though the scissor box includes the entire window.
.SH ERRORS
\%\f3GL_INVALID_VALUE\fP is generated if either \f2width\fP or \f2height\fP is negative.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glScissor\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.bp
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_SCISSOR_BOX\fP
.br
\%\f3glIsEnabled\fP with argument \%\f3GL_SCISSOR_TEST\fP
.SH SEE ALSO
\%\f3glEnable(3G)\fP,
\%\f3glViewport(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
