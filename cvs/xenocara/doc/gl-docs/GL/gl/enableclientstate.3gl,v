head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.40;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.40;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@.\" $XFree86$
'\" te
'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 enablecli
.ds Xs 64367 6 enableclientstate.gl
.TH GLENABLECLIENTSTATE 3G
.SH NAME
.B "glEnableClientState, glDisableClientState
\- enable or disable client-side capability

.SH C SPECIFICATION
void \f3glEnableClientState\fP(
GLenum cap);  \fI1.1\fP )
.nf
.fi

.EN
.SH PARAMETERS
.TP \w'\f21.1\fP\ \ 'u
\f21.1\fP
Specifies the capability to enable.
Symbolic constants
\%\f3GL_COLOR_ARRAY\fP,
\%\f3GL_EDGE_FLAG_ARRAY\fP,
\%\f3GL_INDEX_ARRAY\fP,
\%\f3GL_NORMAL_ARRAY\fP,
\%\f3GL_TEXTURE_COORD_ARRAY\fP, and
\%\f3GL_VERTEX_ARRAY\fP
are accepted.
.SH C SPECIFICATION
void \f3glDisableClientState\fP(
GLenum cap);  \fI1.1\fP )
.nf
.fi

.SH PARAMETERS
.TP
\f21.1\fP
Specifies the capability to disable.
.SH DESCRIPTION
\%\f3glEnableClientState\fP and \%\f3glDisableClientState\fP
enable or disable individual client-side capabilities. By default, all
client-side capabilities are disabled.
Both
\%\f3glEnableClientState\fP and \%\f3glDisableClientState\fP take a
single argument, \f21.1\fP, which can assume one of the following
values:
.TP 25
\%\f3GL_COLOR_ARRAY\fP
If enabled, the color array is enabled for writing and used during
rendering when \%\f3glArrayElement\fP, \%\f3glDrawArrays\fP,
\%\f3glDrawElement\fP, or \%\f3glDrawRangeElements\fP is called. See
\%\f3glColorPointer\fP.
.TP
\%\f3GL_EDGE_FLAG_ARRAY\fP
If enabled, the edge flag array is enabled for writing and used during
rendering when \%\f3glArrayElement\fP, \%\f3glDrawArrays\fP,
\%\f3glDrawElement\fP, or \%\f3glDrawRangeElements\fP is called. See
\%\f3glEdgeFlagPointer\fP.
.TP
\%\f3GL_INDEX_ARRAY\fP
If enabled, the index array is enabled for writing and used during
rendering when \%\f3glArrayElement\fP, \%\f3glDrawArrays\fP,
\%\f3glDrawElement\fP, or \%\f3glDrawRangeElements\fP is called. See
\%\f3glIndexPointer\fP.
.TP
\%\f3GL_NORMAL_ARRAY\fP
If enabled, the normal array is enabled for writing and used during
rendering when \%\f3glArrayElement\fP, \%\f3glDrawArrays\fP,
\%\f3glDrawElement\fP, or \%\f3glDrawRangeElements\fP is called. See
\%\f3glNormalPointer\fP.
.TP
\%\f3GL_TEXTURE_COORD_ARRAY\fP
If enabled, the texture coordinate array is enabled for writing and used during
rendering when \%\f3glArrayElement\fP, \%\f3glDrawArrays\fP,
\%\f3glDrawElement\fP, or \%\f3glDrawRangeElements\fP is called. See
\%\f3glTexCoordPointer\fP.
.TP
\%\f3GL_VERTEX_ARRAY\fP
If enabled, the vertex array is enabled for writing and used during
rendering when \%\f3glArrayElement\fP, \%\f3glDrawArrays\fP,
\%\f3glDrawElement\fP, or \%\f3glDrawRangeElements\fP is called. See
\%\f3glVertexPointer\fP.
.SH NOTES
\%\f3glEnableClientState\fP is available only if the GL version is 1.1 or greater.
.P
If \%\f3GL_ARB_multitexture\fP is supported, enabling and disabling
\%\f3GL_TEXTURE_COORD_ARRAY\fP affects the active client texture unit.
The active client texture unit is controlled with
\%\f3glClientActiveTextureARB\fP.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f21.1\fP is not an accepted value.
.P
\%\f3glEnableClientState\fP is not allowed between the execution of \%\f3glBegin\fP and the
corresponding \%\f3glEnd\fP, but an error may or may not be generated. If
no error is generated, the behavior is undefined.
.SH SEE ALSO
\%\f3glArrayElement(3G)\fP,
\%\f3glClientActiveTextureARB(3G)\fP,
\%\f3glColorPointer(3G)\fP,
\%\f3glDrawArrays(3G)\fP,
\%\f3glDrawElements(3G)\fP,
\%\f3glEdgeFlagPointer(3G)\fP,
\%\f3glEnable(3G)\fP,
\%\f3glGetPointerv(3G)\fP,
\%\f3glIndexPointer(3G)\fP,
\%\f3glInterleavedArrays(3G)\fP,
\%\f3glNormalPointer(3G)\fP,
\%\f3glTexCoordPointer(3G)\fP,
\%\f3glVertexPointer(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
