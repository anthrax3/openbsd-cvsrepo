head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.42
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.42;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.42;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" t
'\"! tbl | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 001 getconvo
.ds Xs 10201 5 getconvolutionparameter.gl
.TH GLGETCONVOLUTIONPARAMETER 3G
.SH NAME
.B "glGetConvolutionParameterfv, glGetConvolutionParameteriv
\- get convolution parameters

.SH C SPECIFICATION
void \f3glGetConvolutionParameterfv\fP(
GLenum \fItarget\fP,
.nf
.ta \w'\f3void \fPglGetConvolutionParameterfv( 'u
	GLenum \fIpname\fP,
	GLfloat \fI*params\fP )
.fi
void \f3glGetConvolutionParameteriv\fP(
GLenum \fItarget\fP,
.nf
.ta \w'\f3void \fPglGetConvolutionParameteriv( 'u
	GLenum \fIpname\fP,
	GLint \fI*params\fP )
.fi

.SH PARAMETERS
.TP \w'\f2target\fP\ \ 'u 
\f2target\fP
The filter whose parameters are to be retrieved.
Must be one of
\%\f3GL_CONVOLUTION_1D\fP,
\%\f3GL_CONVOLUTION_2D\fP, or
\%\f3GL_SEPARABLE_2D\fP.
.TP
\f2pname\fP
The parameter to be retrieved.
Must be one of
\%\f3GL_CONVOLUTION_BORDER_MODE\fP,
\%\f3GL_CONVOLUTION_BORDER_COLOR\fP,
\%\f3GL_CONVOLUTION_FILTER_SCALE\fP,
\%\f3GL_CONVOLUTION_FILTER_BIAS\fP,
\%\f3GL_CONVOLUTION_FORMAT\fP,
\%\f3GL_CONVOLUTION_WIDTH\fP,
\%\f3GL_CONVOLUTION_HEIGHT\fP,
\%\f3GL_MAX_CONVOLUTION_WIDTH\fP, or
\%\f3GL_MAX_CONVOLUTION_HEIGHT\fP.
.TP
\f2params\fP
Pointer to storage for the parameters to be retrieved.
.SH DESCRIPTION
\%\f3glGetConvolutionParameter\fP retrieves convolution parameters.
\f2target\fP determines which convolution filter is queried.
\f2pname\fP determines which parameter is returned:
.TP
\%\f3GL_CONVOLUTION_BORDER_MODE\fP
The convolution border mode.
See \%\f3glConvolutionParameter\fP for a list of border modes.
.TP
\%\f3GL_CONVOLUTION_BORDER_COLOR\fP
The current convolution border color.
\f2params\fP must be a pointer to an array of four elements,
which will receive the red, green, blue, and alpha border colors.
.TP
\%\f3GL_CONVOLUTION_FILTER_SCALE\fP
The current filter scale factors.
\f2params\fP must be a pointer to an array of four elements,
which will receive the red, green, blue, and alpha filter scale
factors in that order.
.TP
\%\f3GL_CONVOLUTION_FILTER_BIAS\fP
The current filter bias factors.
\f2params\fP must be a pointer to an array of four elements,
which will receive the red, green, blue, and alpha filter bias
terms in that order.
.TP
\%\f3GL_CONVOLUTION_FORMAT\fP
The current internal .
See \%\f3glConvolutionFilter1D\fP, \%\f3glConvolutionFilter2D\fP,
and \%\f3glSeparableFilter2D\fP for lists of allowable formats.
.TP
\%\f3GL_CONVOLUTION_WIDTH\fP
The current filter image width.
.TP
\%\f3GL_CONVOLUTION_HEIGHT\fP
The current filter image height.
.TP
\%\f3GL_MAX_CONVOLUTION_WIDTH\fP
The maximum acceptable filter image width.
.TP
\%\f3GL_MAX_CONVOLUTION_HEIGHT\fP
The maximum acceptable filter image height.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2target\fP is not one of the allowable
values.
.P
\%\f3GL_INVALID_ENUM\fP is generated if \f2pname\fP is not one of the allowable
values.
.P
\%\f3GL_INVALID_ENUM\fP is generated if \f2target\fP is \%\f3GL_CONVOLUTION_1D\fP
and \f2pname\fP is \%\f3GL_CONVOLUTION_HEIGHT\fP or
\%\f3GL_MAX_CONVOLUTION_HEIGHT\fP.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glGetConvolutionParameter\fP is executed
between the execution of \%\f3glBegin\fP and the corresponding
execution of \%\f3glEnd\fP.
.SH SEE ALSO
\%\f3glGetConvolutionFilter(3G)\fP,
\%\f3glGetSeparableFilter2D(3G)\fP,
\%\f3glConvolutionParameter(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
