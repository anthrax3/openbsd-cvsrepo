head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.58;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.58;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@.\" $XFree86$
'\" et
'\"! eqn|tbl | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 pushclien
.ds Xs 42589 5 pushclientattrib.gl
.TH GLPUSHCLIENTATTRIB 3G
.SH NAME
.B "glPushClientAttrib, glPopClientAttrib
\- push and pop the client attribute stack

.SH C SPECIFICATION
void \f3glPushClientAttrib\fP(
GLbitfield mask);  \fI1.1\fP )
.nf
.fi

.SH PARAMETERS
.TP \w'\f21.1\fP\ \ 'u
\f21.1\fP
Specifies a mask that indicates which attributes to save.  Values for
\f21.1\fP are listed below.
.SH C SPECIFICATION
void \f3glPopClientAttrib\fP(
void);  \fI1.1\fP )
.nf
.fi

.SH DESCRIPTION
\%\f3glPushClientAttrib\fP takes one argument,
a mask that indicates which groups of client-state variables
to save on the client attribute stack.
Symbolic constants are used to set bits in the mask.
\f21.1\fP
is typically constructed by OR'ing several of these constants together.
The special mask
\%\f3GL_CLIENT_ALL_ATTRIB_BITS\fP
can be used to save all stackable client state.
.P
The symbolic mask constants and their associated GL client state are as follows
(the second column lists which attributes are saved):
.P
\%\f3GL_CLIENT_PIXEL_STORE_BIT\fP	Pixel storage modes
.br
\%\f3GL_CLIENT_VERTEX_ARRAY_BIT\fP	Vertex arrays (and enables)
.P
\%\f3glPopClientAttrib\fP restores the values of the client-state variables
saved with the last \%\f3glPushClientAttrib\fP.
Those not saved are left unchanged.
.P
It is an error to push attributes onto a full client attribute stack,
or to pop attributes off an empty stack.
In either case, the error flag is set,
and no other change is made to GL state.
.P
Initially, the client attribute stack is empty.
.SH NOTES
\%\f3glPushClientAttrib\fP is available only if the GL version is 1.1 or greater.
.P
Not all values for GL client state can be saved on the attribute stack.
For example, select and feedback state cannot be saved.
.P
The depth of the attribute stack depends on the implementation,
but it must be at least 16.
.P
Use \%\f3glPushAttrib\fP and \%\f3glPopAttrib\fP to push and restore
state which is kept on the server. Only pixel storage modes and
vertex array state may be pushed and popped with
\%\f3glPushClientAttrib\fP and \%\f3glPopClientAttrib\fP.
.P
When the \%\f3GL_ARB_multitexture\fP extension is supported, pushing and
popping client vertex array state apples to all supported texture units,
and the active client texture state.
.SH ERRORS
\%\f3GL_STACK_OVERFLOW\fP is generated if \%\f3glPushClientAttrib\fP is called while
the attribute stack is full.
.P
\%\f3GL_STACK_UNDERFLOW\fP is generated if \%\f3glPopClientAttrib\fP is called while
the attribute stack is empty.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_ATTRIB_STACK_DEPTH\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MAX_CLIENT_ATTRIB_STACK_DEPTH\fP
.SH SEE ALSO
\%\f3glColorPointer(3G)\fP,
\%\f3glDisableClientState(3G)\fP,
\%\f3glEdgeFlagPointer(3G)\fP,
\%\f3glEnableClientState(3G)\fP,
\%\f3glGet(3G)\fP,
\%\f3glGetError(3G)\fP,
\%\f3glIndexPointer(3G)\fP,
\%\f3glNormalPointer(3G)\fP,
\%\f3glNewList(3G)\fP,
\%\f3glPixelStore(3G)\fP,
\%\f3glPushAttrib(3G)\fP,
\%\f3glTexCoordPointer(3G)\fP,
\%\f3glVertexPointer(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
