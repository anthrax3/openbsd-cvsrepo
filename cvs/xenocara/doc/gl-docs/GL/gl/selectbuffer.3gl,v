head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.59;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.59;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 selectbuf
.ds Xs 39171 6 selectbuffer.gl
.TH GLSELECTBUFFER 3G
.SH NAME
.B "glSelectBuffer
\- establish a buffer for selection mode values

.SH C SPECIFICATION
void \f3glSelectBuffer\fP(
GLsizei \fIsize\fP,
.nf
.ta \w'\f3void \fPglSelectBuffer( 'u
	GLuint \fI*buffer\fP )
.fi

.SH PARAMETERS
.TP \w'\fIbuffer\fP\ \ 'u 
\f2size\fP
Specifies the size of \f2buffer\fP.
.TP
\f2buffer\fP
Returns the selection data.
.SH DESCRIPTION
\%\f3glSelectBuffer\fP has two arguments:
\f2buffer\fP is a pointer to an array of unsigned integers,
and \f2size\fP indicates the size of the array.
\f2buffer\fP returns values from the name stack
(see \%\f3glInitNames\fP, \%\f3glLoadName\fP, \%\f3glPushName\fP)
when the rendering mode is \%\f3GL_SELECT\fP (see \%\f3glRenderMode\fP).
\%\f3glSelectBuffer\fP must be issued before selection mode is enabled,
and it must not be issued while the rendering mode is \%\f3GL_SELECT\fP.
.P
A programmer can use selection to determine which primitives
are drawn into some region of a window.
The region is defined by the current modelview and perspective matrices. 
.P
In selection mode, no pixel fragments are produced from rasterization.
Instead,
if a primitive or a raster position intersects the clipping 
volume defined by the viewing frustum
and the user-defined clipping planes,
this primitive causes a selection hit.
(With polygons, no hit occurs if the polygon is culled.)
When a change is made to the name stack,
or when \%\f3glRenderMode\fP is called,
a hit record is copied to \f2buffer\fP if any hits have occurred since the
last such event
(name stack change or 
\%\f3glRenderMode\fP call).
The hit record consists of the number of names in the name stack at the
time of the event, followed by the minimum and maximum depth values
of all vertices that hit since the previous event,
followed by the name stack contents,
bottom name first.
.P
Depth values (which are in the range [0,1]) are multiplied by 2^32 - 1,
before being placed in the hit record.
.P
An internal index into \f2buffer\fP is reset to 0 whenever selection mode
is entered.
Each time a hit record is copied into \f2buffer\fP,
the index is incremented to point to the cell just past the end
of the block of names \- that is, to the next available cell.
If the hit record is larger than the number of remaining locations in \f2buffer\fP,
as much data as can fit is copied,
and the overflow flag is set.
If the name stack is empty when a hit record is copied,
that record consists of 0 followed by the minimum and maximum depth values.
.P
To exit selection mode, call \%\f3glRenderMode\fP with an argument
other than \%\f3GL_SELECT\fP.
Whenever \%\f3glRenderMode\fP is called while the render mode is \%\f3GL_SELECT\fP,
it returns the number of hit records copied to \f2buffer\fP,
resets the overflow flag and the selection buffer pointer,
and initializes the name stack to be empty.
If the overflow bit was set when \%\f3glRenderMode\fP was called,
a negative hit record count is returned.
.SH NOTES
The contents of \f2buffer\fP is undefined until \%\f3glRenderMode\fP is called
with an argument other than \%\f3GL_SELECT\fP.
.P
\%\f3glBegin\fP/\%\f3glEnd\fP primitives and calls to \%\f3glRasterPos\fP
can result in hits.
.SH ERRORS
\%\f3GL_INVALID_VALUE\fP is generated if \f2size\fP is negative.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glSelectBuffer\fP is called while the
render mode is \%\f3GL_SELECT\fP,
or if \%\f3glRenderMode\fP is called with argument \%\f3GL_SELECT\fP before
\%\f3glSelectBuffer\fP is called at least once.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glSelectBuffer\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_NAME_STACK_DEPTH\fP
.br
\%\f3glGet\fP with argument \%\f3GL_SELECTION_BUFFER_SIZE\fP
.br
\%\f3glGetPointerv\fP with argument \%\f3GL_SELECTION_BUFFER_POINTER\fP
.SH SEE ALSO
\%\f3glFeedbackBuffer(3G)\fP,
\%\f3glInitNames(3G)\fP,
\%\f3glLoadName(3G)\fP,
\%\f3glPushName(3G)\fP,
\%\f3glRenderMode(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
