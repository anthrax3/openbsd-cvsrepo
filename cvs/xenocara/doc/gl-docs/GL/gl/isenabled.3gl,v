head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.44;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.44;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" et
'\"! eqn|tbl | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 isenabled
.ds Xs 14538 7 isenabled.gl
.TH GLISENABLED 3G
.SH NAME
.B "glIsEnabled
\- test whether a capability is enabled

.SH C SPECIFICATION
GLboolean \f3glIsEnabled\fP(
GLenum \fIcap\fP )
.nf
.fi

.SH PARAMETERS
.TP \w'\f2cap\fP\ \ 'u 
\f2cap\fP
Specifies a symbolic constant indicating a GL capability.
.SH DESCRIPTION
\%\f3glIsEnabled\fP returns \%\f3GL_TRUE\fP if \f2cap\fP is an enabled capability
and returns \%\f3GL_FALSE\fP otherwise.
Initially all capabilities except \%\f3GL_DITHER\fP are disabled;
\%\f3GL_DITHER\fP is initially enabled.
.P
The following capabilities are accepted for \f2cap\fP:
.P

.TS
lb lb
l l.
_
Constant	See
_
\%\f3GL_ALPHA_TEST\fP	\%\f3glAlphaFunc\fP
\%\f3GL_AUTO_NORMAL\fP	\%\f3glEvalCoord\fP
\%\f3GL_BLEND\fP	\%\f3glBlendFunc\fP, \%\f3glLogicOp\fP
\%\f3GL_CLIP_PLANE\fP\f2i\fP	\%\f3glClipPlane\fP
\%\f3GL_COLOR_ARRAY\fP	\%\f3glColorPointer\fP
\%\f3GL_COLOR_LOGIC_OP\fP	\%\f3glLogicOp\fP
\%\f3GL_COLOR_MATERIAL\fP	\%\f3glColorMaterial\fP
\%\f3GL_COLOR_TABLE\fP	\%\f3glColorTable\fP
\%\f3GL_CONVOLUTION_1D\fP	\%\f3glConvolutionFilter1D\fP
\%\f3GL_CONVOLUTION_2D\fP	\%\f3glConvolutionFilter2D\fP
\%\f3GL_CULL_FACE\fP	\%\f3glCullFace\fP
\%\f3GL_DEPTH_TEST\fP	\%\f3glDepthFunc\fP, \%\f3glDepthRange\fP
\%\f3GL_DITHER\fP	\%\f3glEnable\fP
\%\f3GL_EDGE_FLAG_ARRAY\fP	\%\f3glEdgeFlagPointer\fP
\%\f3GL_FOG\fP	\%\f3glFog\fP
\%\f3GL_HISTOGRAM\fP	\%\f3glHistogram\fP
\%\f3GL_INDEX_ARRAY\fP	\%\f3glIndexPointer\fP
\%\f3GL_INDEX_LOGIC_OP\fP	\%\f3glLogicOp\fP
\%\f3GL_LIGHT\fP\f2i\fP	\%\f3glLightModel\fP, \%\f3glLight\fP
\%\f3GL_LIGHTING\fP	\%\f3glMaterial\fP, \%\f3glLightModel\fP, \%\f3glLight\fP
\%\f3GL_LINE_SMOOTH\fP	\%\f3glLineWidth\fP
\%\f3GL_LINE_STIPPLE\fP	\%\f3glLineStipple\fP
\%\f3GL_MAP1_COLOR_4\fP	\%\f3glMap1\fP
\%\f3GL_MAP1_INDEX\fP	\%\f3glMap1\fP
\%\f3GL_MAP1_NORMAL\fP	\%\f3glMap1\fP
\%\f3GL_MAP1_TEXTURE_COORD_1\fP	\%\f3glMap1\fP
\%\f3GL_MAP1_TEXTURE_COORD_2\fP	\%\f3glMap1\fP
\%\f3GL_MAP1_TEXTURE_COORD_3\fP	\%\f3glMap1\fP
\%\f3GL_MAP1_TEXTURE_COORD_4\fP	\%\f3glMap1\fP
\%\f3GL_MAP2_COLOR_4\fP	\%\f3glMap2\fP
\%\f3GL_MAP2_INDEX\fP	\%\f3glMap2\fP
\%\f3GL_MAP2_NORMAL\fP	\%\f3glMap2\fP
\%\f3GL_MAP2_TEXTURE_COORD_1\fP	\%\f3glMap2\fP
\%\f3GL_MAP2_TEXTURE_COORD_2\fP	\%\f3glMap2\fP
\%\f3GL_MAP2_TEXTURE_COORD_3\fP	\%\f3glMap2\fP
\%\f3GL_MAP2_TEXTURE_COORD_4\fP	\%\f3glMap2\fP
\%\f3GL_MAP2_VERTEX_3\fP	\%\f3glMap2\fP
\%\f3GL_MAP2_VERTEX_4\fP	\%\f3glMap2\fP
\%\f3GL_MINMAX\fP	\%\f3glMinmax\fP
\%\f3GL_NORMAL_ARRAY\fP	\%\f3glNormalPointer\fP
\%\f3GL_NORMALIZE\fP	\%\f3glNormal\fP
\%\f3GL_POINT_SMOOTH\fP	\%\f3glPointSize\fP
\%\f3GL_POLYGON_SMOOTH\fP	\%\f3glPolygonMode\fP
\%\f3GL_POLYGON_OFFSET_FILL\fP 	\%\f3glPolygonOffset\fP
\%\f3GL_POLYGON_OFFSET_LINE\fP 	\%\f3glPolygonOffset\fP
\%\f3GL_POLYGON_OFFSET_POINT\fP 	\%\f3glPolygonOffset\fP
\%\f3GL_POLYGON_STIPPLE\fP	\%\f3glPolygonStipple\fP
\%\f3GL_POST_COLOR_MATRIX_COLOR_TABLE\fP	\%\f3glColorTable\fP
\%\f3GL_POST_CONVOLUTION_COLOR_TABLE\fP	\%\f3glColorTable\fP
\%\f3GL_RESCALE_NORMAL\fP	\%\f3glNormal\fP
\%\f3GL_SCISSOR_TEST\fP	\%\f3glScissor\fP
\%\f3GL_SEPARABLE_2D\fP	\%\f3glSeparableFilter2D\fP
\%\f3GL_STENCIL_TEST\fP	\%\f3glStencilFunc\fP, \%\f3glStencilOp\fP
\%\f3GL_TEXTURE_1D\fP	\%\f3glTexImage1D\fP
\%\f3GL_TEXTURE_2D\fP	\%\f3glTexImage2D\fP
\%\f3GL_TEXTURE_3D\fP	\%\f3glTexImage3D\fP
\%\f3GL_TEXTURE_COORD_ARRAY\fP	\%\f3glTexCoordPointer\fP
\%\f3GL_TEXTURE_GEN_Q\fP	\%\f3glTexGen\fP
\%\f3GL_TEXTURE_GEN_R\fP	\%\f3glTexGen\fP
\%\f3GL_TEXTURE_GEN_S\fP	\%\f3glTexGen\fP
\%\f3GL_TEXTURE_GEN_T\fP	\%\f3glTexGen\fP
\%\f3GL_VERTEX_ARRAY\fP	\%\f3glVertexPointer\fP
_
.TE

.SH NOTES
If an error is generated,
\%\f3glIsEnabled\fP returns 0.
.P
\%\f3GL_COLOR_LOGIC_OP\fP, 
\%\f3GL_COLOR_ARRAY\fP,
\%\f3GL_EDGE_FLAG_ARRAY\fP,
\%\f3GL_INDEX_ARRAY\fP,
\%\f3GL_INDEX_LOGIC_OP\fP,
\%\f3GL_NORMAL_ARRAY\fP,
\%\f3GL_POLYGON_OFFSET_FILL\fP,  
\%\f3GL_POLYGON_OFFSET_LINE\fP,
\%\f3GL_POLYGON_OFFSET_POINT\fP,
\%\f3GL_TEXTURE_COORD_ARRAY\fP, and
\%\f3GL_VERTEX_ARRAY\fP
are available only
if the GL version is 1.1 or greater
.P
\%\f3GL_RESCALE_NORMAL\fP, and \%\f3GL_TEXTURE_3D\fP are available only if the GL
version is 1.2 or greater.
.P
\%\f3GL_COLOR_TABLE\fP, \%\f3GL_CONVOLUTION_1D\fP, \%\f3GL_CONVOLUTION_2D\fP,
\%\f3GL_HISTOGRAM\fP, \%\f3GL_MINMAX\fP,
\%\f3GL_POST_COLOR_MATRIX_COLOR_TABLE\fP,
\%\f3GL_POST_CONVOLUTION_COLOR_TABLE\fP, and
\%\f3GL_SEPARABLE_2D\fP are available only if \%\f3GL_ARB_imaging\fP is
returned when \%\f3glGet\fP is called with \%\f3GL_EXTENSIONS\fP.
.P
When the \%\f3GL_ARB_multitexture\fP extension is supported, the following
parameters return the associated value for the active texture unit.
\%\f3GL_TEXTURE_1D\fP, \%\f3GL_TEXTURE_BINDING_1D\fP,
\%\f3GL_TEXTURE_2D\fP, \%\f3GL_TEXTURE_BINDING_2D\fP,
\%\f3GL_TEXTURE_3D\fP, \%\f3GL_TEXTURE_BINDING_3D\fP,
\%\f3GL_TEXTURE_GEN_S\fP,
\%\f3GL_TEXTURE_GEN_T\fP,
\%\f3GL_TEXTURE_GEN_R\fP,
\%\f3GL_TEXTURE_GEN_Q\fP,
\%\f3GL_TEXTURE_MATRIX\fP, and
\%\f3GL_TEXTURE_STACK_DEPTH\fP.
Likewise, the following parameters return the associated value for the
active client texture unit:
\%\f3GL_TEXTURE_COORD_ARRAY\fP,
\%\f3GL_TEXTURE_COORD_ARRAY_SIZE\fP,
\%\f3GL_TEXTURE_COORD_ARRAY_STRIDE\fP,
\%\f3GL_TEXTURE_COORD_ARRAY_TYPE\fP.
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2cap\fP is not an accepted value.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glIsEnabled\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH SEE ALSO
\%\f3glEnable(3G)\fP,
\%\f3glEnableClientState(3G)\fP,
\%\f3glGet(3G)\fP

@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
