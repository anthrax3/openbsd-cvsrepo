head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.42
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.59;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.59;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 rotate.gl
.ds Xs 52762 5 rotate.gl
.TH GLROTATE 3G
.SH NAME
.B "glRotated, glRotatef
\- multiply the current matrix by a rotation matrix

.SH C SPECIFICATION
void \f3glRotated\fP(
GLdouble \fIangle\fP,
.nf
.ta \w'\f3void \fPglRotated( 'u
	GLdouble \fIx\fP,
	GLdouble \fIy\fP,
	GLdouble \fIz\fP )
.fi
void \f3glRotatef\fP(
GLfloat \fIangle\fP,
.nf
.ta \w'\f3void \fPglRotatef( 'u
	GLfloat \fIx\fP,
	GLfloat \fIy\fP,
	GLfloat \fIz\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2angle\fP\ \ 'u 
\f2angle\fP
Specifies the angle of rotation, in degrees.
.TP
\f2x\fP, \f2y\fP, \f2z\fP
Specify the \f2x\fP, \f2y\fP, and \f2z\fP coordinates of a vector, respectively. 
.SH DESCRIPTION
\%\f3glRotate\fP produces a rotation of \f2angle\fP degrees around 
the vector $("x", "y", "z")$.
The current matrix (see \%\f3glMatrixMode\fP) is multiplied by a rotation 
matrix with the product
replacing the current matrix, as if \%\f3glMultMatrix\fP were called
with the following matrix as its argument:
.P
.ce
.EQ 
left ( ~ down 20 matrix {
 ccol { 
   "x" sup 2 (1 ^-^ c)~+~ c above
   "y" "x" (1 ^-^ c)~+~ "z" s above
   "x" "z" (1 ^-^ c)~-~"y" s above
   ~0 
 } 
 ccol {
   ~~ "x" "y" (1 ^-^ c)~-~"z" s above
   ~~ "y" sup 2 (1 ^-^ c)~+~ c above
   ~~ "y" "z" (1 ^-^ c)~+~ "x" s above
   ~~ ~0
 } 
 ccol {
   ~~ "x" "z" (1 ^-^ c)~+~ "y" s above
   ~~ "y" "z" (1 ^-^ c)~-~ "x" s above
   ~~ "z" sup 2 (1 ^-^ c) ~+~  c above
   ~~ ~0
 } 
 ccol { ~0 above ~0 above ~0 above ~1}
} ~~ right )
.EN
.P
.sp
Where $c ~=~ cos ("angle")$, $s ~=~ sin ("angle")$, and 
$||(~"x", "y", "z"~)|| ~=~ 1$ (if not, the GL 
will normalize this vector).
.sp
.sp
.P
If the matrix mode is either \%\f3GL_MODELVIEW\fP or \%\f3GL_PROJECTION\fP,
all objects drawn after \%\f3glRotate\fP is called are rotated.
Use \%\f3glPushMatrix\fP and \%\f3glPopMatrix\fP to save and restore
the unrotated coordinate system.
.SH NOTES
This rotation follows the right-hand rule, so
if the vector $("x", "y", "z")$ points toward the
user, the rotation will be counterclockwise.
.SH ERRORS
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glRotate\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_MATRIX_MODE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_COLOR_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MODELVIEW_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PROJECTION_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_TEXTURE_MATRIX\fP
.SH SEE ALSO
\%\f3glMatrixMode(3G)\fP,
\%\f3glMultMatrix(3G)\fP,
\%\f3glPushMatrix(3G)\fP,
\%\f3glScale(3G)\fP,
\%\f3glTranslate(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
