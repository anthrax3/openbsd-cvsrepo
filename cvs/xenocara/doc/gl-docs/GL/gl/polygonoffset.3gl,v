head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.58;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.58;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 polygonof
.ds Xs 10762 4 polygonoffset.gl
.TH GLPOLYGONOFFSET 3G
.SH NAME
.B "glPolygonOffset
\- set the scale and units used to calculate depth values

.SH C SPECIFICATION
void \f3glPolygonOffset\fP(
GLfloat \fIfactor\fP,
.nf
.ta \w'\f3void \fPglPolygonOffset( 'u
	GLfloat \fIunits\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2factor\fP\ \ 'u 
\f2factor\fP 
Specifies a scale factor that is used to create a variable
depth offset for each polygon. The initial value is 0.
.TP
\f2units\fP 
Is multiplied by an implementation-specific value to
create a constant depth offset. The initial value is 0.
.SH DESCRIPTION
When \%\f3GL_POLYGON_OFFSET_FILL\fP, \%\f3GL_POLYGON_OFFSET_LINE\fP, or
\%\f3GL_POLYGON_OFFSET_POINT\fP is enabled, each
fragment's \f2depth\fP value will be offset after it is interpolated
from the \f2depth\fP values of the appropriate vertices.
The value of the offset is $"factor" ~*~ DZ ~~+~~ r ~*~ "units"$,
where $DZ~$ is a measurement of the change in depth relative to the screen 
area of the polygon, and $r$ is the smallest value that is guaranteed to
produce a resolvable offset for a given implementation.
The offset is added before the depth test is performed and before
the value is written into the depth buffer.
.P
\%\f3glPolygonOffset\fP is useful for rendering hidden-line images, for applying decals 
to surfaces, and for rendering solids with highlighted edges.
.SH NOTES
\%\f3glPolygonOffset\fP is available only if the GL version is 1.1 or greater.
.P
\%\f3glPolygonOffset\fP has no effect on depth coordinates placed in the
feedback buffer.
.P
\%\f3glPolygonOffset\fP has no effect on selection.
.SH ERRORS
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glPolygonOffset\fP is executed
between the execution of \%\f3glBegin\fP and the corresponding
execution of \%\f3glEnd\fP.
.bp
.SH ASSOCIATED GETS
\%\f3glIsEnabled\fP with argument 
\%\f3GL_POLYGON_OFFSET_FILL\fP, 
\%\f3GL_POLYGON_OFFSET_LINE\fP, 
or \%\f3GL_POLYGON_OFFSET_POINT\fP.
.P
\%\f3glGet\fP with argument \%\f3GL_POLYGON_OFFSET_FACTOR\fP or 
\%\f3GL_POLYGON_OFFSET_UNITS\fP.
.SH SEE ALSO
\%\f3glDepthFunc(3G)\fP,
\%\f3glEnable(3G)\fP,
\%\f3glGet(3G)\fP,
\%\f3glIsEnabled(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
