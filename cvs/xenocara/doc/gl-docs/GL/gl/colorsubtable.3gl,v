head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.42
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.37;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.37;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" t
'\"! tbl | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 colorsubt
.ds Xs 37035 5 colorsubtable.gl
.TH GLCOLORSUBTABLE 3G
.SH NAME
.B "glColorSubTable
\- respecify a portion of a color table

.SH C SPECIFICATION
void \f3glColorSubTable\fP(
GLenum \fItarget\fP,
.nf
.ta \w'\f3void \fPglColorSubTable( 'u
	GLsizei \fIstart\fP,
	GLsizei \fIcount\fP,
	GLenum \fIformat\fP,
	GLenum \fItype\fP,
	const GLvoid \fI*data\fP )
.fi

.SH PARAMETERS
.TP \w'\f2target\fP\ \ 'u 
\f2target\fP
Must be one of
\%\f3GL_COLOR_TABLE\fP,
\%\f3GL_POST_CONVOLUTION_COLOR_TABLE\fP, or
\%\f3GL_POST_COLOR_MATRIX_COLOR_TABLE\fP.
.TP
\f2start\fP
The starting index of the portion of the color table to be replaced.
.TP
\f2count\fP
The number of table entries to replace.
.TP
\f2format\fP
The  of the pixel data in \f2data\fP.
The allowable values are
\%\f3GL_RED\fP,
\%\f3GL_GREEN\fP,
\%\f3GL_BLUE\fP,
\%\f3GL_ALPHA\fP,
\%\f3GL_LUMINANCE\fP,
\%\f3GL_LUMINANCE_ALPHA\fP,
\%\f3GL_RGB\fP,
\%\f3GL_BGR\fP,
\%\f3GL_RGBA\fP, and
\%\f3GL_BGRA\fP.
.TP
\f2type\fP
The type of the pixel data in \f2data\fP.
The allowable values are
\%\f3GL_UNSIGNED_BYTE\fP,
\%\f3GL_BYTE\fP,
\%\f3GL_UNSIGNED_SHORT\fP,
\%\f3GL_SHORT\fP,
\%\f3GL_UNSIGNED_INT\fP,
\%\f3GL_INT\fP,
\%\f3GL_FLOAT\fP,
\%\f3GL_UNSIGNED_BYTE_3_3_2\fP,
\%\f3GL_UNSIGNED_BYTE_2_3_3_REV\fP,
\%\f3GL_UNSIGNED_SHORT_5_6_5\fP,
\%\f3GL_UNSIGNED_SHORT_5_6_5_REV\fP,
\%\f3GL_UNSIGNED_SHORT_4_4_4_4\fP,
\%\f3GL_UNSIGNED_SHORT_4_4_4_4_REV\fP,
\%\f3GL_UNSIGNED_SHORT_5_5_5_1\fP,
\%\f3GL_UNSIGNED_SHORT_1_5_5_5_REV\fP,
\%\f3GL_UNSIGNED_INT_8_8_8_8\fP,
\%\f3GL_UNSIGNED_INT_8_8_8_8_REV\fP,
\%\f3GL_UNSIGNED_INT_10_10_10_2\fP, and
\%\f3GL_UNSIGNED_INT_2_10_10_10_REV\fP.
.TP
\f2data\fP
Pointer to a one-dimensional array of pixel data that is processed to
replace the specified region of the color table.
.SH DESCRIPTION
\%\f3glColorSubTable\fP is used to respecify a contiguous portion of a color table previously
defined using \%\f3glColorTable\fP.  The pixels referenced by \f2data\fP replace the
portion of the existing table from indices \f2start\fP to
$"start"~+~"count"~-~1$, inclusive.  This region may not include any
entries outside the range of the color table as it was originally specified.
It is not an error to specify a subtexture with width of 0, but such a
specification has no effect.
.SH NOTES
\%\f3glColorSubTable\fP is present only if \%\f3GL_ARB_imaging\fP is returned when \%\f3glGetString\fP
is called with an argument of \%\f3GL_EXTENSIONS\fP.
.P
.SH ERRORS
\%\f3GL_INVALID_ENUM\fP is generated if \f2target\fP is not one of the allowable
values.
.P
\%\f3GL_INVALID_VALUE\fP is generated if $"start"~+~"count"~>~width$.
.P
\%\f3GL_INVALID_ENUM\fP is generated if \f2format\fP is not one of the allowable
values.
.P
\%\f3GL_INVALID_ENUM\fP is generated if \f2type\fP is not one of the allowable
values.
.P
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glColorSubTable\fP is executed
between the execution of \%\f3glBegin\fP and the corresponding
execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGetColorTable\fP,
\%\f3glGetColorTableParameter\fP
.SH SEE ALSO
\%\f3glColorSubTable(3G)\fP,
\%\f3glColorTableParameter(3G)\fP,
\%\f3glCopyColorTable(3G)\fP,
\%\f3glCopyColorSubTable(3G)\fP,
\%\f3glGetColorTable(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
