head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.42
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.00.44;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.00.44;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@.\" $XFree86$
'\" te
'\"! tbl|eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 index.gl
.ds Xs 37923 4 index.gl
.TH GLINDEX 3G
.SH NAME
.B "glIndexd, glIndexf, glIndexi, glIndexs, glIndexub, glIndexdv, glIndexfv, glIndexiv, glIndexsv, glIndexubv
\- set the current color index

.P
.SH C SPECIFICATION
void \f3glIndexd\fP(
GLdouble \fIc\fP )
.nf
.fi
void \f3glIndexf\fP(
GLfloat \fIc\fP )
.nf
.fi
void \f3glIndexi\fP(
GLint \fIc\fP )
.nf
.fi
void \f3glIndexs\fP(
GLshort \fIc\fP )
.nf
.fi
void \f3glIndexub\fP(
GLubyte c);  \fI1.1\fP )
.nf
.fi

.SH PARAMETERS
.TP \w'\f21.1\fP\ \ 'u
\f21.1\fP
Specifies the new value for the current color index.
.P
.SH C SPECIFICATION
void \f3glIndexdv\fP(
const GLdouble \fI*c\fP )
.nf
.fi
void \f3glIndexfv\fP(
const GLfloat \fI*c\fP )
.nf
.fi
void \f3glIndexiv\fP(
const GLint \fI*c\fP )
.nf
.fi
void \f3glIndexsv\fP(
const GLshort \fI*c\fP )
.nf
.fi
void \f3glIndexubv\fP(
const GLubyte *c);  \fI1.1\fP )
.nf
.fi

.SH PARAMETERS
.TP
\f21.1\fP
Specifies a pointer to a one-element array that contains
the new value for the current color index.
.SH DESCRIPTION
\%\f3glIndex\fP updates the current (single-valued) color index.
It takes one argument, the new value for the current color index.
.P
The current index is stored as a floating-point value.
Integer values are converted directly to floating-point values,
with no special mapping.
The initial value is 1.
.P
Index values outside the representable range of the color index buffer
are not clamped.
However,
before an index is dithered (if enabled) and written to the frame buffer,
it is converted to fixed-point .
Any bits in the integer portion of the resulting fixed-point value
that do not correspond to bits in the frame buffer are masked out.
.SH NOTES
\%\f3glIndexub\fP and \%\f3glIndexubv\fP are available only if the GL version is
1.1 or greater.
.P
The current index can be updated at any time.
In particular,
\%\f3glIndex\fP can be called between a call to \%\f3glBegin\fP and the corresponding
call to \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_CURRENT_INDEX\fP
.SH SEE ALSO
\%\f3glColor(3G)\fP,
\%\f3glIndexPointer(3G)\fP
@


1.1.1.1
log
@OpenGL manual pages from monolithic tree.
@
text
@@
