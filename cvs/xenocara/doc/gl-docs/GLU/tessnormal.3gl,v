head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.01.54;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.01.54;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp May 02 11:53
.ds Dm 37 tessnorma
.ds Xs 47097 4 tessnormal.gl
.TH GLUTESSNORMAL 3G
.SH NAME
.B "gluTessNormal
\- specify a normal for a polygon

.SH C SPECIFICATION
void \f3gluTessNormal\fP(
GLUtesselator* \fItess\fP,
.nf
.ta \w'\f3void \fPgluTessNormal( 'u
	GLdouble \fIvalueX\fP,
	GLdouble \fIvalueY\fP,
	GLdouble \fIvalueZ\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIvalueX\fP\ \ 'u 
\f2tess\fP
Specifies the tessellation object (created with \%\f3gluNewTess\fP).
.TP
\f2valueX\fP
Specifies the first component of the normal.
.TP
\f2valueY\fP
Specifies the second component of the normal.
.TP
\f2valueZ\fP
Specifies the third component of the normal.
.SH DESCRIPTION
\%\f3gluTessNormal\fP describes a normal for a polygon that the program is defining.
All input data will be projected onto a plane perpendicular to one of 
the three coordinate axes before tessellation and all output triangles
will be oriented CCW with 
respect to the normal (CW orientation can be obtained by reversing the
sign of the supplied normal). For example, if you know that all polygons
lie in the x-y plane, call \%\f3gluTessNormal\fP(tess, 0.0, 0.0, 1.0)
before rendering any polygons.
.P
If the supplied normal is (0.0, 0.0, 0.0) (the initial value), the normal is
determined as follows. The direction of the normal, up to its sign, is
found by fitting a plane to the vertices, without regard to how the
vertices are connected. It is expected that the input data lies approximately
in the plane; otherwise, projection perpendicular to one of the three
coordinate axes may substantially change the geometry. The sign of the
normal is chosen so that the sum of the signed areas of all input
contours is nonnegative (where a CCW contour has positive area).
.P
The supplied normal persists until it is changed by another call to 
\%\f3gluTessNormal\fP.
.SH SEE ALSO
\%\f3gluTessBeginPolygon(3G)\fP, 
\%\f3gluTessEndPolygon(3G)\fP



@


1.1.1.1
log
@GLU manual pages from monolithic tree
@
text
@@
