head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.01.52;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.01.52;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp May 02 11:53
.ds Dm 37 errorstri
.ds Xs 24940 3 errorstring.gl
.TH GLUERRORSTRING 3G
.SH NAME
.B "gluErrorString
\- produce an error string from a GL or GLU error code

.SH C SPECIFICATION
const GLubyte * \f3gluErrorString\fP(
GLenum \fIerror\fP )
.nf
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2error\fP\ \ 'u 
\f2error\fP
Specifies a GL or GLU error code.
.SH DESCRIPTION
\%\f3gluErrorString\fP produces an error string from a GL or GLU error code. The string
is in ISO Latin 1 . For example,
\%\f3gluErrorString\fP(\%\f3GL_OUT_OF_MEMORY\fP) returns the string 
\f2out of memory\fP.
.P
The standard GLU error codes are \%\f3GLU_INVALID_ENUM\fP, 
\%\f3GLU_INVALID_VALUE\fP,
and \%\f3GLU_OUT_OF_MEMORY\fP.
Certain other GLU functions can return specialized error codes
through callbacks.
See the \f3glGetError\fP reference page for the list of 
GL error codes.
.SH ERRORS
\%\f3NULL\fP is returned if \f2error\fP is not a valid GL or GLU error code.
.SH SEE ALSO
\f3glGetError(3G)\fP,
\%\f3gluNurbsCallback(3G)\fP,
\%\f3gluQuadricCallback(3G)\fP,
\%\f3gluTessCallback(3G)\fP
@


1.1.1.1
log
@GLU manual pages from monolithic tree
@
text
@@
