head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.1.0.42
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.01.51;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.01.51;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp May 02 11:53
.ds Dm 37 beginpoly
.ds Xs 33625 4 beginpolygon.gl
.TH GLUBEGINPOLYGON 3G
.SH NAME
.B "gluBeginPolygon, gluEndPolygon
\- delimit a polygon description

.SH C SPECIFICATION
void \f3gluBeginPolygon\fP(
GLUtesselator* \fItess\fP )
.nf
.fi

void \f3gluEndPolygon\fP(
GLUtesselator* \fItess\fP )
.nf
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2tess\fP\ \ 'u 
\f2tess\fP
Specifies the tessellation object (created with \%\f3gluNewTess\fP).
.SH DESCRIPTION
\%\f3gluBeginPolygon\fP and \%\f3gluEndPolygon\fP delimit the definition of a
nonconvex polygon.
To define such a polygon, first call \%\f3gluBeginPolygon\fP.
Then define the contours of the polygon
by calling 
\%\f3gluTessVertex\fP for each vertex
and \%\f3gluNextContour\fP to start each new contour.
Finally, call \%\f3gluEndPolygon\fP
to signal the end of the definition.
See the \%\f3gluTessVertex\fP and 
\%\f3gluNextContour\fP reference pages for more details.
.P
Once \%\f3gluEndPolygon\fP is called, the polygon is tessellated, and the
resulting triangles are described through callbacks.
See \%\f3gluTessCallback\fP for descriptions of the callback functions.
.SH NOTES
This command is obsolete and is provided for backward compatibility
only. Calls to \%\f3gluBeginPolygon\fP are mapped to 
\%\f3gluTessBeginPolygon\fP
followed by 
\%\f3gluTessBeginContour\fP. Calls to \%\f3gluEndPolygon\fP are mapped
to \%\f3gluTessEndContour\fP followed by \%\f3gluTessEndPolygon\fP.
.SH EXAMPLE
A quadrilateral with a triangular hole in it can be described like this:
.sp
.Ex
gluBeginPolygon(tobj);
   gluTessVertex(tobj, v1, v1);
   gluTessVertex(tobj, v2, v2);
   gluTessVertex(tobj, v3, v3);
   gluTessVertex(tobj, v4, v4);
gluNextContour(tobj, GLU_INTERIOR);
   gluTessVertex(tobj, v5, v5);
   gluTessVertex(tobj, v6, v6);
   gluTessVertex(tobj, v7, v7);
gluEndPolygon(tobj);
.Ee
.SH SEE ALSO
\%\f3gluNewTess(3G)\fP, \%\f3gluNextContour(3G)\fP, \%\f3gluTessCallback(3G)\fP, \%\f3gluTessVertex(3G)\fP,
\%\f3gluTessBeginPolygon(3G)\fP, \%\f3gluTessBeginContour(3G)\fP



@


1.1.1.1
log
@GLU manual pages from monolithic tree
@
text
@@
