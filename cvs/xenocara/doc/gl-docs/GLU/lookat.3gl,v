head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.01.52;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.01.52;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp May 02 11:53
.ds Dm 37 lookat.gl
.ds Xs 1014 4 lookat.gl
.TH GLULOOKAT 3G
.SH NAME
.B "gluLookAt
\- define a viewing transformation

.SH C SPECIFICATION
void \f3gluLookAt\fP(
GLdouble \fIeyeX\fP,
.nf
.ta \w'\f3void \fPgluLookAt( 'u
	GLdouble \fIeyeY\fP,
	GLdouble \fIeyeZ\fP,
	GLdouble \fIcenterX\fP,
	GLdouble \fIcenterY\fP,
	GLdouble \fIcenterZ\fP,
	GLdouble \fIupX\fP,
	GLdouble \fIupY\fP,
	GLdouble \fIupZ\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2eyeX\fP\ \f2eyeY\fP\ \f2eyeZ\fP\ \ 'u 
\f2eyeX\fP, \f2eyeY\fP, \f2eyeZ\fP
Specifies the position of the eye point.
.TP
\f2centerX\fP, \f2centerY\fP, \f2centerZ\fP
Specifies the position of the reference point.
.TP
\f2upX\fP, \f2upY\fP, \f2upZ\fP
Specifies the direction of the \f2up\fP vector.
.SH DESCRIPTION
\%\f3gluLookAt\fP creates a viewing matrix derived from an eye point, a reference
point indicating the center of the scene, and an \f2UP\fP vector.  
.P
The matrix
maps the reference point to the negative \f2z\fP axis and the
eye point to the origin.
When a typical projection matrix is used,
the center of the scene therefore maps to the center of the viewport.
Similarly, the direction described by the \f2UP\fP
vector projected onto the viewing plane is mapped to the positive \f2y\fP 
axis so that it points upward in the viewport.
The \f2UP\fP vector must not be parallel to the line of sight from the
eye point to the reference point.
.P
Let 
.sp
.EQ
F ~=~ left (  down 20 { ~ matrix {
   ccol {"centerX" above "centerY" above "centerZ"}
   ccol { ~-~ above ~-~ above ~-~}
   ccol {"eyeX" above "eyeY" above "eyeZ"}
} } ~~ right )

.EN

.sp
Let \f2UP\fP be the vector $("upX", "upY", "upZ")$. 
.P
Then normalize as follows: 
.EQ
f ~=~ F over {|| F ||}
.EN
.P
.EQ
UP sup prime ~=~ UP over {|| UP ||}
.EN
.sp
.P
Finally, let $s ~=~ f ~times~ UP sup prime$, and $u ~=~ s ~times~ f$.
.P
.sp
M is then constructed as follows:
.EQ
M ~=~ left (  matrix {
   ccol { ~s[0] above ~u[0] above -f[0] above 0 }
   ccol { ~s[1] above ~u[1] above -f[1] above 0 }
   ccol { ~s[2] above ~u[2] above -f[2] above 0 }
   ccol { 0 above 0 above 0  above 1 }
} ~~right )
.EN
.P
and \%\f3gluLookAt\fP is equivalent to 
.Ex
glMultMatrixf(M);
glTranslated (-eyex, -eyey, -eyez);
.Ee
.SH SEE ALSO
\f3glFrustum(3G)\fP, \%\f3gluPerspective(3G)\fP
@


1.1.1.1
log
@GLU manual pages from monolithic tree
@
text
@@
