head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.40
	OPENBSD_6_1_BASE:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v6_9_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.11.29.17.01.52;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.29.17.01.52;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 6 March 1997
.ds Re Release 1.2.0
.ds Dp May 02 11:53
.ds Dm :37 loadsamp
.ds Xs 25465 4 loadsamplingmatrices.gl
.TH GLULOADSAMPLINGMATRICES 3G
.SH NAME
.B "gluLoadSamplingMatrices
\- load NURBS sampling and culling matrices

.SH C SPECIFICATION
void \f3gluLoadSamplingMatrices\fP(
GLUnurbs* \fInurb\fP,
.nf
.ta \w'\f3void \fPgluLoadSamplingMatrices( 'u
	const GLfloat \fI*model\fP,
	const GLfloat \fI*perspective\fP,
	const GLint \fI*view\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\fIperspective\fP\ \ 'u 
\f2nurb\fP
Specifies the NURBS object (created with \%\f3gluNewNurbsRenderer\fP).
.TP
\f2model\fP
Specifies a modelview matrix (as from a \f3glGetFloatv\fP call).
.TP
\f2perspective\fP
Specifies a projection matrix (as from a \f3glGetFloatv\fP call).
.TP
\f2view\fP
Specifies a viewport (as from a \f3glGetIntegerv\fP call).
.SH DESCRIPTION
\%\f3gluLoadSamplingMatrices\fP uses \f2model\fP, \f2perspective\fP, and \f2view\fP to recompute the sampling and culling 
matrices stored in \f2nurb\fP.
The sampling matrix determines how finely a NURBS curve or surface
must be tessellated to satisfy the sampling tolerance (as determined by the
\%\f3GLU_SAMPLING_TOLERANCE\fP property).
The culling matrix is used in deciding if a NURBS curve or surface
should be culled before 
rendering (when the \%\f3GLU_CULLING\fP property is turned on).
.P
\%\f3gluLoadSamplingMatrices\fP is necessary only if the \%\f3GLU_AUTO_LOAD_MATRIX\fP property is turned
off (see \%\f3gluNurbsProperty\fP).
Although it can be convenient to leave the \%\f3GLU_AUTO_LOAD_MATRIX\fP
property turned on, there can be a performance penalty for doing so.
(A round trip to the GL server is needed to fetch the current values
of the modelview matrix, projection matrix, and viewport.)
.SH SEE ALSO
\%\f3gluGetNurbsProperty(3G)\fP,
\%\f3gluNewNurbsRenderer(3G)\fP,
\%\f3gluNurbsProperty(3G)\fP
@


1.1.1.1
log
@GLU manual pages from monolithic tree
@
text
@@
