head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.2
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.17.0.8
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.6
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.4
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.2
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.12.0.4
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.2
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_1_3:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.20
date	2017.02.19.17.41.29;	author matthieu;	state Exp;
branches;
next	1.19;
commitid	y2DVD2vXeLxXKx9Q;

1.19
date	2016.11.03.09.28.22;	author matthieu;	state Exp;
branches;
next	1.18;
commitid	DGhPjY0C2KOkx0Eg;

1.18
date	2016.08.06.09.56.29;	author matthieu;	state Exp;
branches;
next	1.17;
commitid	LoGpeNS1hy3meocn;

1.17
date	2014.09.28.17.22.58;	author matthieu;	state Exp;
branches;
next	1.16;
commitid	z9e5iyEEqbHgjQHI;

1.16
date	2014.05.09.19.55.33;	author matthieu;	state Exp;
branches;
next	1.15;

1.15
date	2013.05.31.18.38.23;	author matthieu;	state Exp;
branches;
next	1.14;

1.14
date	2013.05.31.15.15.08;	author matthieu;	state Exp;
branches;
next	1.13;

1.13
date	2013.05.23.22.42.10;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2012.06.11.19.24.48;	author matthieu;	state Exp;
branches;
next	1.11;

1.11
date	2011.12.20.20.18.27;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2011.12.17.17.39.20;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2011.07.02.21.21.11;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2011.07.02.21.14.36;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.11.11.10.49.22;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.03.14.26.02;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.09.04.10.16.57;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.21.19.13.11;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.18.19.28.54;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.02.15.23.04;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.17.22.40;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.17.22.40;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.16.45.12;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Update to libXi 1.7.9
@
text
@
# Initialize Autoconf
AC_PREREQ([2.60])
AC_INIT([libXi], [1.7.9],
	[https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], [libXi])
AC_CONFIG_SRCDIR([Makefile.am])
AC_CONFIG_HEADERS([src/config.h])

# Initialize Automake
AM_INIT_AUTOMAKE([foreign dist-bzip2])

# Initialize libtool
AC_PROG_LIBTOOL

# Require xorg-macros minimum of 1.12 for DocBook external references
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.12 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.12)
XORG_DEFAULT_OPTIONS
XORG_ENABLE_DOCS
XORG_ENABLE_SPECS
XORG_WITH_XMLTO(0.0.22)
XORG_WITH_FOP
XORG_WITH_XSLTPROC
XORG_CHECK_SGML_DOCTOOLS(1.8)
XORG_WITH_ASCIIDOC(8.4.5)
XORG_CHECK_MALLOC_ZERO

# Obtain compiler/linker options for dependencies
PKG_CHECK_MODULES(XI, [xproto >= 7.0.13] [x11 >= 1.6] [xextproto >= 7.0.3] [xext >= 1.0.99.1] [inputproto >= 2.2.99.1])
# CFLAGS only for PointerBarrier typedef
PKG_CHECK_MODULES(XFIXES, [xfixes >= 5])

# Check for xmlto and asciidoc for man page conversion
# (only needed by people building tarballs)
if test "$have_xmlto" = yes && test "$have_asciidoc" = yes; then
	have_doctools=yes
else
	have_doctools=no
fi
AM_CONDITIONAL([HAVE_DOCTOOLS], [test $have_doctools = yes])
if test $have_doctools = no; then
	AC_MSG_WARN([xmlto or asciidoc not found - cannot create man pages without it])
fi

# Determine if the source for man pages is available
# It may already be present (tarball) or can be generated using doctools
AM_CONDITIONAL([INSTALL_MANPAGES],
	[test -f "$srcdir/man/XAllowDeviceEvents.man" || \
	  test $have_doctools = yes])

AC_CONFIG_FILES([Makefile
		src/Makefile
		man/Makefile
		specs/Makefile
		xi.pc])
AC_OUTPUT
@


1.19
log
@Update to libXi 1.7.8
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.7.8],
@


1.18
log
@Update to libXi 1.7.6
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.7.6],
a10 1
AM_MAINTAINER_MODE
@


1.17
log
@Update to libXi 1.7.4
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.7.4],
@


1.16
log
@Update to libXi 1.7.2.

Tested by ajacoutot@@ against gnome.
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.7.2],
d11 1
d31 1
a31 1
PKG_CHECK_MODULES(XI, [xproto >= 7.0.13] [x11 >= 1.4.99.1] [xextproto >= 7.0.3] [xext >= 1.0.99.1] [inputproto >= 2.2.99.1])
a33 6

# Check for _XEatDataWords function that may be patched into older Xlib releases
SAVE_LIBS="$LIBS"
LIBS="$XI_LIBS"
AC_CHECK_FUNCS([_XEatDataWords])
LIBS="$SAVE_LIBS"
@


1.15
log
@fix merge issues.
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.6.2.901],
a10 1
AM_MAINTAINER_MODE
d30 3
a32 1
PKG_CHECK_MODULES(XI, [xproto >= 7.0.13] [x11 >= 1.4.99.1] [xextproto >= 7.0.3] [xext >= 1.0.99.1] [inputproto >= 2.1.99.6])
@


1.14
log
@Update to libXi 1.6.3rc1
@
text
@a38 6
# Check for _XEatDataWords function that may be patched into older Xlib releases
SAVE_LIBS="$LIBS"
LIBS="$XI_LIBS"
AC_CHECK_FUNCS([_XEatDataWords])
LIBS="$SAVE_LIBS"

@


1.13
log
@Merge upstream fixes for several X libs vulnerabilities
discovered by Ilja van Sprundel.

CVE-2013-1981 X.org libX11 1.5.99.901 (1.6 RC1) integer overflows
CVE-2013-1982 X.org libXext 1.3.1 integer overflows
CVE-2013-1983 X.org libXfixes 5.0 integer overflows
CVE-2013-1984 X.org libXi 1.7.1 integer overflows
CVE-2013-1985 X.org libXinerama 1.1.2 integer overflows
CVE-2013-1986 X.org libXrandr 1.4.0 integer overflows
CVE-2013-1987 X.org libXrender 0.9.7 integer overflows
CVE-2013-1988 X.org libXRes 1.0.6 integer overflows
CVE-2013-1989 X.org libXv 1.0.7 integer overflows
CVE-2013-1990 X.org libXvMC 1.0.7 integer overflows
CVE-2013-1991 X.org libXxf86dga 1.1.3 integer overflows
CVE-2013-1992 X.org libdmx 1.1.2 integer overflows
CVE-2013-1994 X.org libchromeXvMC & libchromeXvMCPro in openChrome
0.3.2 integer overflows
CVE-2013-1995 X.org libXi 1.7.1 sign extension issues
CVE-2013-1996 X.org libFS 1.0.4 sign extension issues
CVE-2013-1997 X.org libX11 1.5.99.901 (1.6 RC1) buffer overflows
CVE-2013-1998 X.org libXi 1.7.1 buffer overflows
CVE-2013-1999 X.org libXvMC 1.0.7 buffer overflows
CVE-2013-2000 X.org libXxf86dga 1.1.3 buffer overflows
CVE-2013-2001 X.org libXxf86vm 1.1.2 buffer overflows
CVE-2013-2002 X.org libXt 1.1.3 buffer overflows
CVE-2013-2003 X.org libXcursor 1.1.13 integer overflows
CVE-2013-2004 X.org libX11 1.5.99.901 (1.6 RC1) unbounded recursion
CVE-2013-2005 X.org libXt 1.1.3 memory corruption
CVE-2013-2066 X.org libXv 1.0.7 buffer overflows
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.6.1],
d32 6
@


1.12
log
@Update to libXi 1.6.1
@
text
@d33 6
@


1.11
log
@Update to libXi 1.4.5.
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.4.5],
d16 1
a16 1
# Require xorg-macros minimum of 1.10 for DocBook XML documentation
d18 2
a19 2
          [m4_fatal([must install xorg-macros 1.10 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.10)
d21 1
d23 1
a23 1
XORG_WITH_XMLTO(0.0.20)
d25 2
a26 1
XORG_CHECK_SGML_DOCTOOLS(1.5)
d30 2
a31 2
# Obtain compiler/linker options for depedencies
PKG_CHECK_MODULES(XI, [xproto >= 7.0.13] [x11 >= 1.2.99.1] [xextproto >= 7.0.3] [xext >= 1.0.99.1] [inputproto >= 1.9.99.902])
a53 1
		doc/Makefile
@


1.10
log
@Update to libXi 1.4.4.
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.4.4],
@


1.9
log
@Update to libXi 1.4.3.
This contains more doc fixes and a few more bug fixes.
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.4.3],
@


1.8
log
@Update to libXi 1.4.2.
Tested by ajacoutot@@, jasper@@, krw@@, shadchin@@.
I believe that the bugs spotted by krw@@ are fixed in an upcoming
inputproto update.
@
text
@d4 1
a4 1
AC_INIT([libXi], [1.4.2],
@


1.7
log
@Update to libXi 1.4.0. small bug fixes plus doc/spec/autotools churn.
@
text
@a0 1
dnl Process this file with autoconf to create configure.
d2 1
d4 4
d9 1
a9 1
AC_INIT(libXi, 1.4.0, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXi)
d13 3
d26 1
a26 6
AM_CONFIG_HEADER(src/config.h)

# Check for progs
AC_PROG_CC
AC_PROG_LIBTOOL
AC_PROG_SED
d28 1
a28 1
# Checks for pkg-config packages
d49 7
a55 9
XORG_CHECK_MALLOC_ZERO

AC_OUTPUT([Makefile
           src/Makefile
           man/Makefile
           doc/Makefile
           specs/Makefile
           xi.pc])

@


1.6
log
@Use the  XORG_WITH_XMLTO and XORG_WITH_ASCIIDOC macros.

This change was apparently didn't make it upstreams into 1.3.2 and
got lost.
@
text
@d3 1
a3 1
AC_PREREQ([2.57])
d5 1
a5 1
AC_INIT(libXi, 1.3.2, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXi)
d9 1
a9 1
# Require xorg-macros: XORG_DEFAULT_OPTIONS
d11 2
a12 2
          [m4_fatal([must install xorg-macros 1.3 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.3)
d14 5
a27 3
XI_CFLAGS="$CWARNFLAGS $XI_CFLAGS"
AC_SUBST(XI_CFLAGS)
AC_SUBST(XI_LIBS)
d31 1
a31 3
XORG_WITH_XMLTO
XORG_WITH_ASCIIDOC
if test "x$XMLTO" != "x" && test "x$ASCIIDOC" != "x"; then
d50 4
a53 2
	   src/Makefile
	   man/Makefile
@


1.5
log
@Update to libXi 1.3.2
@
text
@d29 2
a30 4
AC_ARG_VAR([XMLTO], [Path to xmlto command])
AC_PATH_PROG([XMLTO], [xmlto])
AC_ARG_VAR([ASCIIDOC], [Path to asciidoc command])
AC_PATH_PROG([ASCIIDOC], [asciidoc])
@


1.4
log
@merge from upstream X.Org: use the AC_WITH_XMLTO and AC_WITH_ASCIIDOC
macros from xorg-macros 1.5 to check for xmlto and asciidoc and
explicitely disable them in Makefile.bsd-wrapper.
Problem noticed by espie@@.
@
text
@d5 2
a6 2
AC_INIT(libXi, 1.3, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXi)
AM_INIT_AUTOMAKE([dist-bzip2 foreign])
d9 4
a12 3
# Require xorg-macros: XORG_CWARNFLAGS, XORG_CHANGELOG
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.5 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.5)
a13 2
XORG_WITH_XMLTO
XORG_WITH_ASCIIDOC
d29 11
a39 2
AM_CONDITIONAL([HAVE_DOCTOOLS], [test "x$XMLTO" != "x" && test "x$ASCIIDOC" != "x"])
if test "x$XMLTO" = "x" || test "x$ASCIIDOC" = "x"; then
d42 6
@


1.3
log
@Update to libXi 1.3. Tested on a bulk ports build by naddy@@.
@
text
@d10 5
a14 2
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.3 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.3)
a20 1
XORG_DEFAULT_OPTIONS
a29 4
AC_ARG_VAR([XMLTO], [Path to xmlto command])
AC_PATH_PROG([XMLTO], [xmlto])
AC_ARG_VAR([ASCIIDOC], [Path to asciidoc command])
AC_PATH_PROG([ASCIIDOC], [asciidoc])
@


1.2
log
@update to libXi 1.2.1
@
text
@a0 2
dnl $XdotOrg: lib/Xi/configure.ac,v 1.9 2005/12/15 00:24:30 kem Exp $
dnl
d5 2
a6 2
AC_INIT(libXi, 1.2.1, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXi)
AM_INIT_AUTOMAKE([dist-bzip2])
d9 3
d17 2
d21 2
a22 1
PKG_CHECK_MODULES(XI, xproto x11 xextproto xext inputproto >= 1.5)
d26 11
a37 2
XORG_MANPAGE_SECTIONS
XORG_RELEASE_VERSION
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
AC_INIT(libXi, 1.0.2, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXi)
d18 1
a18 1
PKG_CHECK_MODULES(XI, xproto x11 xextproto xext inputproto)
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@libXi 1.1.3
@
text
@d7 1
a7 1
AC_INIT(libXi, 1.1.3, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXi)
d18 1
a18 1
PKG_CHECK_MODULES(XI, xproto x11 xextproto xext inputproto >= 1.4)
@

