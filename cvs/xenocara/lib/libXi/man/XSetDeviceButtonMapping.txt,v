head	1.1;
access;
symbols
	OPENBSD_6_1:1.1.0.28
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.26
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.24
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.22
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.05.18.19.28.54;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to libXi 1.3. Tested on a bulk ports build by naddy@@.
@
text
@XSETDEVICEBUTTONMAPPING(libmansuffix)
=====================================

NAME
----

   XSetDeviceButtonMapping, XGetDeviceButtonMapping - query or
   change device button mappings

SYNOPSIS
--------

   #include <X11/extensions/XInput.h>

   int XSetDeviceButtonMapping( Display *display,
                                XDevice *device,
                                unsigned char map[],
                                int nmap);

   int XGetDeviceButtonMapping( Display *display,
                                XDevice *device,
                                unsigned char map_return[],
                                int nmap);

   display
          Specifies the connection to the X server.

   device
          Specifies the device whose button mapping is to be
          queried or changed.

   map
          Specifies the mapping list.

   map_return
          Returns the mapping list.

   nmap
          Specifies the number of items in the mapping list.

DESCRIPTION
-----------

   The XSetDeviceButtonMapping request sets the mapping of the
   specified device. If it succeeds, the X server generates a
   DeviceMappingNotify event, and XSetDeviceButtonMapping returns
   MappingSuccess. Element map[i] defines the logical button
   number for the physical button i+1. The length of the list must
   be the same as XGetDeviceButtonMapping would return, or a
   BadValue error results. A zero element disables a button, and
   elements are not restricted in value by the number of physical
   buttons. However, no two elements can have the same nonzero
   value, or a BadValue error results. If any of the buttons to be
   altered are logically in the down state,
   XSetDeviceButtonMapping returns MappingBusy, and the mapping is
   not changed.

   XSetDeviceButtonMapping can generate BadDevice, BadMatch, and
   BadValue errors.

   The XGetDeviceButtonMapping request returns the current mapping
   of the specified device. Buttons are numbered starting from
   one.XGetDeviceButtonMapping returns the number of physical
   buttons actually on the device. The nominal mapping for a
   device is map[i]=i+1. The nmap argument specifies the length of
   the array where the device mapping is returned, and only the
   first nmap elements are returned in map_return.

   XGetDeviceButtonMapping can generate BadDevice or BadMatch
   errors.

DIAGNOSTICS
-----------

   BadDevice
          An invalid device was specified. The specified device
          does not exist or has not been opened by this client via
          XOpenInputDevice. This error may also occur if the
          specified device is the X keyboard or X pointer device.

   BadMatch
          This error may occur if an XGetDeviceButtonMapping or
          XSetDeviceButtonMapping request was made specifying a
          device that has no buttons.

   BadValue
          Some numeric value falls outside the range of values
          accepted by the request. Unless a specific range is
          specified for an argument, the full range defined by the
          argument's type is accepted. Any argument defined as a
          set of alternatives can generate this error.

SEE ALSO
--------

   XChangeDeviceKeyboardControl(libmansuffix), XChangeDeviceKeyMapping(libmansuffix),
   XChangeDeviceModifierMapping(libmansuffix)
@
