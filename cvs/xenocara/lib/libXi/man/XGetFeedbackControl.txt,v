head	1.2;
access;
symbols
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.20
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.18
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.14
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.12.17.17.39.20;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.18.19.28.54;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to libXi 1.4.4.
@
text
@XGETFEEDBACKCONTROL(libmansuffix)
=================================

NAME
----

   XGetFeedbackControl, XChangeFeedbackControl - query and change
   input device feedbacks

SYNOPSIS
--------

   #include <X11/extensions/XInput.h>

   XFeedbackState *XGetFeedbackControl( Display *display,
                                        XDevice *device,
                                        int *num_feedbacks);

   int XChangeFeedbackControl( Display *display,
                               XDevice *device,
                               Mask mask,
                               XFeedbackControl *control);

   display
          Specifies the connection to the X server.

   device
          Specifies the device whose feedbacks are to be queried
          or modified.

   num_feedbacks
          Specifies an address into which the number of feedbacks
          supported by thedevice is to be returned.

   mask
          Specifies a mask specific to each type of feedback that
          describes howthe feedback is to be modified.

   control
          Specifies the address of an XFeedbackControl structure
          that containsthe new values for the feedback.

DESCRIPTION
-----------

   These requests are provided to manipulate those input devices
   that support feedbacks. A BadMatch error will be generated if
   the requested device does not support feedbacks. Whether or not
   a given device supports feedbacks can be determined by
   examining the information returned by the XOpenDevice request.
   For those devices that support feedbacks, XOpenDevice will
   return an XInputClassInfo structure with the input_class field
   equal to the constant FeedbackClass (defined in the file XI.h).

   The XGetFeedbackControl request returns a pointer to a list of
   XFeedbackState structures. Each item in this list describes one
   of the feedbacks supported by the device. The items are
   variable length, so each contains its length to allow traversal
   to the next item in the list.

   The feedback classes that are currently defined are:
   KbdFeedbackClass, PtrFeedbackClass, StringFeedbackClass,
   IntegerFeedbackClass, LedFeedbackClass, and BellFeedbackClass.
   These constants are defined in the file XI.h. An input device
   may support zero or more classes of feedback, and may support
   multiple feedbacks of the same class. Each feedback contains a
   class identifier and an id that is unique within that class for
   that input device. The id is used to identify the feedback when
   making an XChangeFeedbackControl request.

   XGetFeedbackControl can generate a BadDevice or BadMatch error.

   The XChangeFeedbackControl request modifies the values of one
   feedback on the specified device. The feedback is identified by
   the id field of the XFeedbackControl structure that is passed
   with the request. The fields of the feedback that are to be
   modified are identified by the bits of the mask that is passed
   with the request.

   XChangeFeedbackControl can generate a BadDevice, BadMatch, or
   BadValue error.

Structures
~~~~~~~~~~

   Each class of feedback is described by a structure specific to
   that class. These structures are defined in the file XInput.h.
   XFeedbackState and XFeedbackControl are generic structures that
   contain three fields that are at the beginning of each class of
   feedback:

            typedef struct {
                XID class;
                int length;
                XID id;
            } XFeedbackState, XFeedbackControl;

   The XKbdFeedbackState structure defines the attributes that are
   returned for feedbacks equivalent to those on the X keyboard.

            typedef struct {
                XID class;
                int length;
                XID id;
                int click;
                int percent;
                int pitch;
                int duration;
                int led_mask;
                int global_auto_repeat;
                char auto_repeats[32];
            } XKbdFeedbackState;

   The XPtrFeedbackState structure defines the attributes that are
   returned for feedbacks equivalent to those on the the X
   pointer.

            typedef struct {
                XID class;
                int length;
                XID id;
                int accelNum;
                int accelDenom;
                int threshold;
            } XPtrFeedbackState;

   The XIntegerFeedbackState structure defines attributes that are
   returned for integer feedbacks.

            typedef struct {
                XID class;
                int length;
                XID id;
                int resolution;
                int minVal;
                int maxVal;
            } XIntegerFeedbackState;

   The XStringFeedbackState structure defines the attributes that
   are returned for string feedbacks.

            typedef struct {
                XID class;
                int length;
                XID id;
                int max_symbols;
                int num_syms_supported;
                KeySym *syms_supported;
            } XStringFeedbackState;

   The XBellFeedbackState structure defines the attributes that
   are returned for bell feedbacks.

            typedef struct {
                XID class;
                int length;
                XID id;
                int percent;
                int pitch;
                int duration;
            } XBellFeedbackState;

   The XLedFeedbackState structure defines the attributes that are
   returned for LED feedbacks.

            typedef struct {
                XID class;
                int length;
                XID id;
                int led_values;
            } XLedFeedbackState;

   The XPrtFeedbackControl structure defines the attributes that
   can be controlled for pointer feedbacks.

            typedef struct {
                XID class;
                int length;
                XID id;
                int accelNum;
                int accelDenom;
                int threshold;
            } XPtrFeedbackControl;

   The XKbdFeedbackControl structure defines the attributes that
   can be controlled for keyboard feedbacks.

            typedef struct {
                XID class;
                int length;
                XID id;
                int click;
                int percent;
                int pitch;
                int duration;
                int led_mask;
                int led_value;
                int key;
                int auto_repeat_mode;
            } XKbdFeedbackControl;

   The XStringFeedbackControl structure defines the attributes
   that can be controlled for string feedbacks.

            typedef struct {
                XID class;
                int length;
                XID id;
                int num_keysyms;
                KeySym  *syms_to_display;
            } XStringFeedbackControl;

   The XIntegerFeedbackControl structure defines the attributes
   that can be controlled for integer feedbacks.

            typedef struct {
                XID class;
                int length;
                XID id;
                int int_to_display;
            } XIntegerFeedbackControl;

   The XBellFeedbackControl structure defines the attributes that
   can be controlled for bell feedbacks.

            typedef struct {
                XID     class;
                int     length;
                XID     id;
                int     percent;
                int     pitch;
                int     duration;
            } XBellFeedbackControl;

   The XLedFeedbackControl structure defines the attributes that
   can be controlled for LED feedbacks.

            typedef struct {
                XID     class;
                int     length;
                XID     id;
                int     led_mask;
                int     led_values;
            } XLedFeedbackControl;

DIAGNOSTICS
-----------

   BadDevice
          An invalid device was specified. The specified device
          does not exist or has not been opened by this client via
          XOpenInputDevice. This error may also occur if some
          other client has caused the specified device to become
          the X keyboard or X pointer device via the
          XChangeKeyboardDevice or XChangePointerDevice requests.

   BadMatch
          This error may occur if an XGetFeedbackControl request
          was made specifying a device that has no feedbacks, or
          an XChangeFeedbackControl request was made with an
          XFeedbackControl structure that contains an invalid
          feedback type. It may also occur if an invalid
          combination of mask bits is specified ( DvKey but no
          DvAutoRepeatMode for keyboard feedbacks), or if an
          invalid KeySym is specified for a string feedback.

   BadValue
          Some numeric value falls outside the range of values
          accepted by the XChangeFeedbackControl request. Unless a
          specific range is specified for an argument, the full
          range defined by the argument's type is accepted. Any
          argument defined as a set of alternatives can generate
          this error.
@


1.1
log
@Update to libXi 1.3. Tested on a bulk ports build by naddy@@.
@
text
@d84 1
d92 1
a92 1
                typedef struct {
d96 1
a96 2
                } XFeedbackState,
                XFeedbackControl;
d101 1
a101 1
                typedef struct {
d112 1
a112 1
                } XKbdFeedbackState;
d118 1
a118 1
                typedef struct {
d125 1
a125 1
                } XPtrFeedbackState;
d130 1
a130 1
                typedef struct {
d137 1
a137 1
                } XIntegerFeedbackState;
d142 1
a142 1
                typedef struct {
d149 1
a149 1
                } XStringFeedbackState;
d154 1
a154 1
                typedef struct {
d161 1
a161 1
                } XBellFeedbackState;
d166 2
a167 1
                typedef struct { XID class;
d171 1
a171 1
                } XLedFeedbackState;
d176 1
a176 1
                typedef struct {
d183 1
a183 1
                } XPtrFeedbackControl;
d188 1
a188 1
                typedef struct {
d200 1
a200 1
                } XKbdFeedbackControl;
d205 1
a205 1
                typedef struct {
d211 1
a211 1
                } XStringFeedbackControl;
d216 1
a216 1
                typedef struct {
d221 1
a221 1
                } XIntegerFeedbackControl;
d226 1
a226 1
                typedef struct {
d233 1
a233 1
                } XBellFeedbackControl;
d238 1
a238 1
                typedef struct {
d244 1
a244 1
                } XLedFeedbackControl;
@

