head	1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.26
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.24
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.22
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.05.18.19.28.54;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to libXi 1.3. Tested on a bulk ports build by naddy@@.
@
text
@XIWARPPOINTER(libmansuffix)
===========================

NAME
----

   XIWarpPointer - move a device's pointer.

SYNOPSIS
--------

   #include <X11/extensions/XInput2.h>

   Bool XIWarpPointer( Display *display,
                       int deviceid,
                       Window src_w,
                       Window dest_w,
                       double src_x,
                       double src_y,
                       int src_width,
                       int src_height,
                       double dest_x,
                       double dest_y);
   
   dest_w
          Specifies the destination window or None.

   dest_x, dest_y
          Specify the x and y coordinates within the destination
          window.

   deviceid
          Specifies the master pointer device or floating slave
          device to move.

   display
          Specifies the connection to the X server.

   src_x, src_y, src_width, src_height
          Specify a rectangle in the source window.

   src_w
          Specifies the source window or None.

DESCRIPTION
-----------

   If dest_w is None, XIWarpPointer moves the pointer by the
   offsets (dest_x, dest_y) relative to the current position of
   the pointer. If dest_w is a window, XIWarpPointer moves the
   pointer to the offsets (dest_x, dest_y) relative to the origin
   of dest_w. However, if src_w is a window, the move only takes
   place if the window src_w contains the pointer and if the
   specified rectangle of src_w contains the pointer.

   The src_x and src_y coordinates are relative to the origin of
   src_w. If src_height is zero, it is replaced with the current
   height of src_w minus src_y. If src_width is zero, it is
   replaced with the current width of src_w minus src_x.

   There is seldom any reason for calling this function. The
   pointer should normally be left to the user. If you do use this
   function, however, it generates events just as if the user had
   instantaneously moved the pointer from one position to another.
   Note that you cannot use XIWarpPointer to move the pointer
   outside the confine_to window of an active pointer grab. An
   attempt to do so will only move the pointer as far as the
   closest edge of the confine_to window.

   XIWarpPointer is identical to XWarpPointer but specifies the
   device explicitly.

   XIWarpPointer can generate a BadDevice and a BadWindow error.

DIAGNOSTICS
-----------

   BadDevice
          An invalid device was specified. The device does not
          exist or is not a pointer device.

   BadWindow
          A value for a Window argument does not name a defined
          window.

SEE ALSO
--------

   XWarpPointer(libmansuffix)
@
