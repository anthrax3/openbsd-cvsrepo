head	1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.26
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.24
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.22
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.20
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.18
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.16
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.14
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.12
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.10
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2010.05.18.19.28.54;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Update to libXi 1.3. Tested on a bulk ports build by naddy@@.
@
text
@XISELECTEVENTS(libmansuffix)
============================

NAME
----

   XISelectEvents, XIGetSelectedEvents - select for or get selected XI2 events on the window.

SYNOPSIS
--------

   #include <X11/extensions/XInput2.h>

   Status XISelectEvents( Display *display,
                          Window win,
                          XIEventMask *masks,
                          int num_masks);

   display
          Specifies the connection to the X server.

   masks
          Device event mask.

   num_masks
          Number of masks in masks.

   win
          Specifies the window.

   XIEventMask *XIGetSelectedEvents( Display *display,
                                     Window win,
                                     int *num_masks_return);
 
   display
          Specifies the connection to the X server.

   num_masks_return
          Number of masks in the return value.

   win
          Specifies the window.

DESCRIPTION
-----------

   XI2 events must be selected using XISelectEvents.

   XISelectEvents sets the event mask for this client on win.
   Further events are only reported to this client if the event
   type matches the selected event mask. The masks overrides the
   previously selected event mask for the given device.

   If deviceid is a valid device, the event mask is selected only
   for this device. If deviceid is XIAllDevices or
   XIAllMasterDevices, the event mask is selected for all devices
   or all master devices, respectively. The effective event mask
   is the bit-wise OR of the XIAllDevices, XIAllMasterDevices and
   the respective device's event mask.

            typedef struct {
                int deviceid;
                int mask_len;
                unsigned char* mask;
            } XIEventMask;

   The mask_len specifies the length of mask in bytes. mask is a
   binary mask in the form of (1 << event type). deviceid must be
   either a device or XIAllDevices or XIAllMasterDevices. A client
   may submit several masks with the same deviceid in one request
   but only the last mask will be effective.

   XISelectEvents can generate a BadValue, a BadDevice, and a
   BadWindow error.

   XIGetSelectedEvents returns the events selected by this client on the given
   window. If no events were selected on this window, XIGetSelectedEvents
   returns NULL and num_masks_return is set to 0. If an internal error occurs,
   XIGetSelectedEvents returns NULL and num_masks_return is set to -1.
   Otherwise, XIGetSelectedEvent returns the selected event masks for all
   devices including the masks for XIAllDevices and XIAllMasterDevices

   The caller must free the returned data using XFree().


DIAGNOSTICS
-----------

   BadValue
          A value is outside of the permitted range.

   BadWindow
          A value for a Window argument does not name a defined
          window.

   BadDevice
          An invalid device was specified. The device does not
          exist.
@
