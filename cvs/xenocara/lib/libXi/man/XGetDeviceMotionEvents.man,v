head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.18
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.16
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.14
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.12
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.8
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_1_3:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.8
date	2013.05.31.15.15.09;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2011.12.17.17.39.20;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.02.21.21.11;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.02.21.14.37;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.11.11.10.49.22;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.04.10.17.03;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.18.19.28.54;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.17.23.04;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.17.23.04;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.16.45.36;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to libXi 1.6.3rc1
@
text
@'\" t
.\"     Title: xgetdevicemotionevents
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 03/09/2013
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "XGETDEVICEMOTIONEVEN" "libmansuffix" "03/09/2013" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
XGetDeviceMotionEvents, XDeviceTimeCoord \- get device motion history
.SH "SYNOPSIS"
.sp
.nf
#include <X11/extensions/XInput\&.h>
.fi
.sp
.nf
XDeviceTimeCoord *XGetDeviceMotionEvents( Display *display,
                                          XDevice *device,
                                          Time start,
                                          Time stop,
                                          int *nevents_return,
                                          int *mode_return,
                                          int *axis_count_return);
.fi
.sp
.nf
display
       Specifies the connection to the X server\&.
.fi
.sp
.nf
device
       Specifies the device whose motion history is to be
       queried\&.
.fi
.sp
.nf
start, stop
       Specify the time interval in which the events are
       returned from the motionhistory buffer\&.You can pass a
       timestamp or CurrentTime\&.
.fi
.sp
.nf
nevents_return
       Returns the number of events from the motion history
       buffer\&.
.fi
.sp
.nf
mode_return
       Returns the mode of the device (Absolute or Relative)\&.
.fi
.sp
.nf
axis_count_return
       Returns the count of axes being reported\&.
.fi
.SH "DESCRIPTION"
.sp
.if n \{\
.RS 4
.\}
.nf
The server may retain the recent history of the device motion
and do so to a finer granularity than is reported by
DeviceMotionNotify events\&. The XGetDeviceMotionEvents request
makes this history available\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
The XGetDeviceMotionEvents request returns all events in the
motion history buffer that fall between the specified start and
stop times, inclusive\&. If the start time is later than the stop
time or if the start time is in the future, no events are
returned\&. If the stop time is in the future, it is equivalent
to specifying CurrentTime\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
The mode indicates whether the device is reporting absolute
positional data (mode = Absolute ) or relative motion data
(mode = Relative )\&. Some devices allow their mode to be changed
via the XSetDeviceMode request\&. These constants are defined in
the file XI\&.h\&. The axis_count returns the number of axes or
valuators being reported by the device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
XGetDeviceMotionEvents can generate a BadDevice, or BadMatch
error\&.
.fi
.if n \{\
.RE
.\}
.sp
Structures
.sp
.if n \{\
.RS 4
.\}
.nf
The XDeviceTimeCoord structure contains:
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
typedef struct {
    Time time;
    int *data;
} XDeviceTimeCoord;
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
The time member is set to the time, in milliseconds\&. The data
member is a pointer to an array of integers\&. These integers are
set to the values of each valuator or axis reported by the
device\&. There is one element in the array per axis of motion
reported by the device\&. The value of the array elements depends
on the mode of the device\&. If the mode is Absolute, the values
are the raw values generated by the device\&. These may be scaled
by client programs using the maximum values that the device can
generate\&. The maximum value for each axis of the device is
reported in the max_val field of the XAxisInfo returned by the
XListInputDevices request\&. If the mode is Relative, the data
values are the relative values generated by the device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
You should use XFreeDeviceMotionEvents to free the data
returned by this request\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
Errors returned by this request: BadDevice, BadMatch\&.
.fi
.if n \{\
.RE
.\}
.SH "DIAGNOSTICS"
.sp
.if n \{\
.RS 4
.\}
.nf
BadDevice
       An invalid device was specified\&. The specified device
       does not exist or has not been opened by this client via
       XOpenInputDevice\&. This error may also occur if the
       specified device is the X keyboard or X pointer device\&.
.fi
.if n \{\
.RE
.\}
.sp
.if n \{\
.RS 4
.\}
.nf
BadMatch
       This error may occur if an XGetDeviceMotionEvents
       request is made specifying a device that has no
       valuators and reports no axes of motion\&.
.fi
.if n \{\
.RE
.\}
@


1.7
log
@Update to libXi 1.4.4.
@
text
@d4 4
a7 4
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 09/23/2011
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
d10 1
a10 1
.TH "XGETDEVICEMOTIONEVEN" "libmansuffix" "09/23/2011" "[FIXME: source]" "[FIXME: manual]"
@


1.6
log
@Update to libXi 1.4.3.
This contains more doc fixes and a few more bug fixes.
@
text
@d5 1
a5 1
.\"      Date: 06/02/2011
d10 1
a10 1
.TH "XGETDEVICEMOTIONEVEN" "libmansuffix" "06/02/2011" "[FIXME: source]" "[FIXME: manual]"
@


1.5
log
@Update to libXi 1.4.2.
Tested by ajacoutot@@, jasper@@, krw@@, shadchin@@.
I believe that the bugs spotted by krw@@ are fixed in an upcoming
inputproto update.
@
text
@d5 3
a7 3
.\"      Date: 03/18/2011
.\"    Manual: \ \&
.\"    Source: \ \&
d10 1
a10 1
.TH "XGETDEVICEMOTIONEVEN" "libmansuffix" "03/18/2011" "\ \&" "\ \&"
@


1.4
log
@Update to libXi 1.4.0. small bug fixes plus doc/spec/autotools churn.
@
text
@d4 4
a7 4
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 09/07/2010
.\"    Manual: [FIXME: manual]
.\"    Source: [FIXME: source]
d10 10
a19 1
.TH "XGETDEVICEMOTIONEVEN" "libmansuffix" "09/07/2010" "[FIXME: source]" "[FIXME: manual]"
@


1.3
log
@Update to libXi 1.3.2
@
text
@d5 1
a5 1
.\"      Date: 08/04/2010
d10 1
a10 1
.TH "XGETDEVICEMOTIONEVEN" "libmansuffix" "08/04/2010" "[FIXME: source]" "[FIXME: manual]"
@


1.2
log
@Update to libXi 1.3. Tested on a bulk ports build by naddy@@.
@
text
@d4 2
a5 2
.\" Generator: DocBook XSL Stylesheets v1.74.3 <http://docbook.sf.net/>
.\"      Date: 10/02/2009
d10 1
a10 1
.TH "XGETDEVICEMOTIONEVEN" "libmansuffix" "10/02/2009" "[FIXME: source]" "[FIXME: manual]"
@


1.1
log
@Initial revision
@
text
@d1 8
d10 68
a77 49
.\" $XFree86: xc/doc/man/Xi/XGetDvMo.man,v 1.2 2001/01/27 18:20:21 dawes Exp $
.\"
.\"
.\" Copyright ([\d,\s]*) by Hewlett-Packard Company, Ardent Computer, 
.\" 
.\" Permission to use, copy, modify, distribute, and sell this documentation 
.\" for any purpose and without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\" Ardent, and Hewlett-Packard make no representations about the 
.\" suitability for any purpose of the information in this document.  It is 
.\" provided \`\`as is'' without express or implied warranty.
.\" 
.\" $Xorg: XGetDvMo.man,v 1.3 2000/08/17 19:41:56 cpqbld Exp $
.ds xL Programming with Xlib
.TH XGetDeviceMotionEvents 3X11 __xorgversion__ "X FUNCTIONS"
.SH NAME
XGetDeviceMotionEvents, XDeviceTimeCoord \- get device motion history 
.SH SYNTAX
.HP
XDeviceTimeCoord *XGetDeviceMotionEvents\^(Display *\fIdisplay\fP\^, XDevice
*\fIdevice\fP\^, Time \fIstart\fP\^, Time \fIstop\fP\^, int
*\fInevents_return\fP\^, int *\fImode_return\fP\^, int
*\fIaxis_count_return\fP\^); 
.SH ARGUMENTS
.TP 12
.I display
Specifies the connection to the X server.
.TP 12
.I device
Specifies the device whose motion history is to be queried.
.TP 12
.I start
.br
.ns
.TP 12
.I stop
Specify the time interval in which the events are returned from the motion
history buffer.
You can pass a timestamp or \fICurrentTime\fP.
.TP 12
.I nevents_return
Returns the number of events from the motion history buffer.
.TP 12
.I mode_return
Returns the mode of the device (\fIAbsolute\fP or \fIRelative\fP).
.TP 12
.I axis_count_return
Returns the count of axes being reported.
.SH DESCRIPTION
d80 63
a142 27
\fIDeviceMotionNotify\fP
events.
The \fIXGetDeviceMotionEvents\fP request makes this history available.
.LP
The
\fIXGetDeviceMotionEvents\fP
request returns all events in the motion history buffer that fall between the
specified start and stop times, inclusive.
If the start time is later than the stop time or if the start time is in the
future, no events are returned.
If the stop time is in the future, it is equivalent to specifying
\fICurrentTime\fP.
.LP
The \fImode\fP indicates whether the device is reporting absolute positional
data (mode=\fIAbsolute\fP) or relative motion data (mode=\fIRelative\fP).
Some devices allow their mode to be changed via the \fIXSetDeviceMode\fP
request.
These constants are defined in the file XI.h.  The \fIaxis_count\fP
returns the number of axes or valuators being reported by the device.
.LP
\fIXGetDeviceMotionEvents\fP can generate a \fIBadDevice\fP, or \fIBadMatch\fP
error.
.SH STRUCTURES
The
\fIXDeviceTimeCoord\fP
structure contains:
.LP
d145 2
a146 2
	Time time;
	int *data;
d149 73
a221 32
.LP
The time member is set to the time, in milliseconds. 
The data member is a pointer to an array of integers.  
These integers are set to the values of each valuator or
axis reported by the device.  There is one element in the array
per axis of motion reported by the device.  The value of the array elements
depends on the mode of the device.  If the mode is \fIAbsolute\fP, the
values are the raw values generated by the device.  These may be scaled by
client programs using the maximum values that the device can generate.  The
maximum value for each axis of the device is reported in the max_val
field of the \fIXAxisInfo\fP returned by the \fIXListInputDevices\fP 
request.  If the mode is \fIRelative\fP, the data values are the relative
values generated by the device.
.LP
You should use \fIXFreeDeviceMotionEvents\fP to free the data returned by
this request.
.LP
Errors returned by this request: \fIBadDevice\fP, \fIBadMatch\fP.
.SH DIAGNOSTICS
.TP 12
\fIBadDevice\fP
An invalid device was specified.  The specified device does not exist or has 
not been opened by this client via \fIXOpenInputDevice\fP.  This error may
also occur if the specified device is the X keyboard or X pointer device.
.TP 12
\fIBadMatch\fP
This error may occur if an \fIXGetDeviceMotionEvents\fP request is made 
specifying
a device that has no valuators and reports no axes of motion.
.SH "SEE ALSO"
.br
\fI\*(xL\fP
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@libXi 1.1.3
@
text
@d16 1
a16 1
.TH XGetDeviceMotionEvents __LIB_MAN_SUFFIX__ __xorgversion__ "X FUNCTIONS"
@

