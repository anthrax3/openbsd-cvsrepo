head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.24
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.22
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.20
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.18
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.16
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.14
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.12
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.10
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2011.07.02.21.21.11;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.18.19.28.54;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to libXi 1.4.3.
This contains more doc fixes and a few more bug fixes.
@
text
@XICHANGEHIERARCHY(libmansuffix)
===============================

NAME
----

   XIChangeHierarchy - change the device hierarchy.

SYNOPSIS
--------

   #include <X11/extensions/XInput2.h>

   Status XIChangeHierarchy( Display *display,
                             XIAnyHierarchyChangeInfo *changes,
                             int num_changes);

   display
          Specifies the connection to the X server.

   num_changes
          Specifies the number of elements in changes.

   changes
          Specifies the changes to be made.

DESCRIPTION
-----------

   XIChangeHierarchy modifies the device hierarchy by creating or
   removing master devices or changing the attachment of slave
   devices. If num_changes is non-zero, changes is an array of
   XIAnyHierarchyChangeInfo structures. If num_changes is equal or less than
   zero, XIChangeHierarchy does nothing.

   XIChangeHierarchy processes changes in order, effective
   immediately. If an error occurs, processing is aborted and the
   error is reported to the client. Changes already made remain
   effective.

   The list of changes is any combination of
   XIAnyHierarchyChangeInfo. The type of a hierarchy change can be
   XIAddMaster, XIRemoveMaster, XIAttachSlave or XIDetachSlave.

                typedef union {
                    int type;
                    XIAddMasterInfo add;
                    XIRemoveMasterInfo remove;
                    XIAttachSlave attach;
                    XIDetachSlave detach;
                } XIAnyHierarchyChangeInfo;

                typedef struct {
                    int type; /* XIAddMaster */
                    char* name;
                    Bool send_core;
                    Bool enable;
                } XIAddMasterInfo;

                typedef struct {
                    int type; /* XIRemoveMaster */
                    int deviceid;
                    int return_mode;
                    int return_pointer;
                    int return_keyboard;
                } XIRemoveMasterInfo;

                typedef struct {
                    int type; /* XIAttachSlave */
                    int deviceid;
                    int new_master;
                } XIAttachSlaveInfo;

                typedef struct {
                    int type; /* XIDetachSlave */
                    int deviceid;
                } XIDetachSlaveInfo;

   XIAddMasterInfo creates a new master pointer and a new
   master keyboard labelled "name pointer" and "name keyboard"
   respectively. If sendCore is True, the devices will send core
   events. If enable is True, the device is enabled immediately.

   XIAddMasterInfo can generate a BadValue error.

   XIRemoveMasterInfo removes device and its paired master device.
   If returnMode is XIAttachToMaster, all pointers attached to
   device or its paired master device are attached to
   returnPointer. Likewise, all keyboards are attached to
   returnKeyboard. If returnMode is XIFloating, all attached
   devices are set to floating.

   XIRemoveMasterInfo can generate a BadValue and a BadDevice
   error.

   XIAttachSlaveInfo attaches device to newMaster. If the device
   is currently attached to a master device, it is detached from
   the master device and attached to the new master device.

   XIAttachSlaveInfo can generate a BadDevice error.

   XIDettachSlaveInfo deattaches device from the current master
   device and sets it floating. If the device is already floating,
   no changes are made.

   XIDetachSlaveInfo can generate a BadDevice error.

   XIChangeHierarchy generates an XIHierarchyEvent if any
   modifications were successful.

DIAGNOSTICS
-----------

   BadDevice
          An invalid device was specified. The device does not
          exist or is not a appropriate for the type of change.

   BadValue
          Some numeric value falls out of the allowed range.

@


1.1
log
@Update to libXi 1.3. Tested on a bulk ports build by naddy@@.
@
text
@d33 2
a34 1
   XIAnyHierarchyChangeInfo structures.
@

