head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.22
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.20
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.18
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.16
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v2_1_12:1.1.1.1
	v2_1_11:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.03.10.14.09.34;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.31.18.23.14;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.17.21.39;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.17.21.39;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to libXft 2.3.0
@
text
@/*
 * Copyright Â© 2000 Keith Packard
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of Keith Packard not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  Keith Packard makes no
 * representations about the suitability of this software for any purpose.  It
 * is provided "as is" without express or implied warranty.
 *
 * KEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#include "xftint.h"

static Bool _XftConfigInitialized;

_X_EXPORT Bool
XftInit (_Xconst char *config)
{
    if (_XftConfigInitialized)
	return True;
    _XftConfigInitialized = True;
    if (!FcInit ())
	return False;
    _XftNameInit ();
    return True;
}

_X_EXPORT int
XftGetVersion (void)
{
    return XftVersion;
}

static struct {
    const char *name;
    int	    alloc_count;
    int	    alloc_mem;
    int	    free_count;
    int	    free_mem;
} XftInUse[XFT_MEM_NUM] = {
    { "XftDraw", 0, 0 },
    { "XftFont", 0 ,0 },
    { "XftFtFile", 0, 0 },
    { "XftGlyph", 0, 0 },
};

static int  XftAllocCount, XftAllocMem;
static int  XftFreeCount, XftFreeMem;

static const int  XftMemNotice = 1*1024*1024;

static int  XftAllocNotify, XftFreeNotify;

_X_HIDDEN void
XftMemReport (void)
{
    int	i;
    printf ("Xft Memory Usage:\n");
    printf ("\t   Which       Alloc           Free\n");
    printf ("\t           count   bytes   count   bytes\n");
    for (i = 0; i < XFT_MEM_NUM; i++)
	printf ("\t%8.8s%8d%8d%8d%8d\n",
		XftInUse[i].name,
		XftInUse[i].alloc_count, XftInUse[i].alloc_mem,
		XftInUse[i].free_count, XftInUse[i].free_mem);
    printf ("\t%8.8s%8d%8d%8d%8d\n",
	    "Total",
	    XftAllocCount, XftAllocMem,
	    XftFreeCount, XftFreeMem);
    XftAllocNotify = 0;
    XftFreeNotify = 0;
}

_X_HIDDEN void
XftMemAlloc (int kind, int size)
{
    if (XftDebug() & XFT_DBG_MEMORY)
    {
	XftInUse[kind].alloc_count++;
	XftInUse[kind].alloc_mem += size;
	XftAllocCount++;
	XftAllocMem += size;
	XftAllocNotify += size;
	if (XftAllocNotify > XftMemNotice)
	    XftMemReport ();
    }
}

_X_HIDDEN void
XftMemFree (int kind, int size)
{
    if (XftDebug() & XFT_DBG_MEMORY)
    {
	XftInUse[kind].free_count++;
	XftInUse[kind].free_mem += size;
	XftFreeCount++;
	XftFreeMem += size;
	XftFreeNotify += size;
	if (XftFreeNotify > XftMemNotice)
	    XftMemReport ();
    }
}
@


1.2
log
@Update to libXft 2.1.14
@
text
@d46 1
a46 1
    char    *name;
d61 1
a61 1
static int  XftMemNotice = 1*1024*1024;
@


1.1
log
@Initial revision
@
text
@a1 2
 * $Id$
 *
d25 1
a25 1
_X_HIDDEN Bool	    _XftConfigInitialized;
@


1.1.1.1
log
@import from X.Org 7.2RC1
@
text
@@
