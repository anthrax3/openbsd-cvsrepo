head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.6
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.2
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.2
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.6
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.4
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.8
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.2
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	libpciaccess-070616:1.1.1.2
	libpciaccess-070327:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.05.10.09.31.51;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	oHH7rwfUXCSZpX6V;

1.8
date	2014.01.03.09.44.25;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2012.03.09.21.02.10;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.10.18.56.27;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2009.04.14.20.14.23;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.24.14.14.00;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.16.16.22.10;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.06.21.01.25;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.05.20.08.57;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.06.05.20.08.57;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.06.16.16.14.01;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.9
log
@update to libpciaccess 0.13.4
@
text
@/*
 * (C) Copyright IBM Corporation 2006
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * on the rights to use, copy, modify, merge, publish, distribute, sub
 * license, and/or sell copies of the Software, and to permit persons to whom
 * the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
 * IBM AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/**
 * \file common_init.c
 * Platform independent routines for initializing access to the PCI system.
 *
 * \author Ian Romanick <idr@@us.ibm.com>
 */

#include <stdlib.h>
#include <errno.h>

#include "pciaccess.h"
#include "pciaccess_private.h"

_pci_hidden struct pci_system * pci_sys;

/**
 * Initialize the PCI subsystem for access.
 *
 * \return
 * Zero on success or an errno value on failure.  In particular, if no
 * platform-specific initializers are available, \c ENOSYS will be returned.
 *
 * \sa pci_system_cleanup
 */

int
pci_system_init( void )
{
    int err = ENOSYS;

#ifdef __linux__
    err = pci_system_linux_sysfs_create();
#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__DragonFly__)
    err = pci_system_freebsd_create();
#elif defined(__NetBSD__)
    err = pci_system_netbsd_create();
#elif defined(__OpenBSD__)
    err = pci_system_openbsd_create();
#elif defined(__sun)
    err = pci_system_solx_devfs_create();
#elif defined(__GNU__) || defined(__CYGWIN__)
    err = pci_system_x86_create();
#else
# error "Unsupported OS"
#endif

    return err;
}

void
pci_system_init_dev_mem(int fd)
{
#ifdef __OpenBSD__
    pci_system_openbsd_init_dev_mem(fd);
#endif
}

/**
 * Shutdown all access to the PCI subsystem.
 *
 * \sa pci_system_init
 */
void
pci_system_cleanup( void )
{
    unsigned i;
    unsigned j;


    if ( pci_sys == NULL ) {
	return;
    }

    pci_io_cleanup();

    if ( pci_sys->devices ) {
	for ( i = 0 ; i < pci_sys->num_devices ; i++ ) {
	    for ( j = 0 ; j < 6 ; j++ ) {
		(void) pci_device_unmap_region( & pci_sys->devices[i].base, j );
	    }

	    free( (char *) pci_sys->devices[i].device_string );
	    free( (char *) pci_sys->devices[i].agp );

	    pci_sys->devices[i].device_string = NULL;
	    pci_sys->devices[i].agp = NULL;

	    if ( pci_sys->methods->destroy_device != NULL ) {
		(*pci_sys->methods->destroy_device)( & pci_sys->devices[i].base );
	    }
	}

	free( pci_sys->devices );
	pci_sys->devices = NULL;
	pci_sys->num_devices = 0;
    }

    if ( pci_sys->methods->destroy != NULL ) {
	(*pci_sys->methods->destroy)();
    }

    free( pci_sys );
    pci_sys = NULL;
}
@


1.8
log
@Update to libpciacces 0.13.2.
@
text
@d55 1
a55 1
#ifdef linux
d65 1
a65 1
#elif defined(__GNU__)
d67 2
@


1.7
log
@Update to libpciaccess 0.13. Tested by shadchin@@
@
text
@a119 1

@


1.6
log
@Update to libpciaccess 0.11, with VGA arbiter support code from kettenis@@.
@
text
@d42 1
a42 1
 * 
d54 1
a54 1
    
d82 1
a82 1
 * 
d106 1
a106 1
	    
d114 1
a114 1
	
d124 1
a124 1
    
@


1.5
log
@Merge libpciaccess 0.10.5. No functionnal change on OpenBSD.
@
text
@d65 2
d96 1
@


1.4
log
@Merge libpciaccess 0.10.2, including kettenis@@ OpenBSD port.
@
text
@d57 1
a57 1
#elif defined(__FreeBSD__) || defined(__DragonFly__)
d59 2
@


1.3
log
@merge libpciaccess 2007/06/16
@
text
@d38 1
a38 1
struct pci_system * pci_sys;
d57 1
a57 1
#elif defined(__FreeBSD__)
d62 1
a62 1
	err = pci_system_solx_devfs_create();
d68 7
@


1.2
log
@skeleton OpenBSD port of libpciaccess
@
text
@d61 2
@


1.1
log
@Initial revision
@
text
@d59 2
@


1.1.1.1
log
@import libpciaccess 070327
@
text
@@


1.1.1.2
log
@Import libpciaccess from git as of today.
Changes: solaris support added.
@
text
@a58 2
#elif defined(__sun)
	err = pci_system_solx_devfs_create();
@

