head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.10
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.8
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.6
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.4
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.2
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.12.0.6
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.2
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.6
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.4
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.2
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.8.0.6
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.6.0.4
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.2
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	libpciaccess-070616:1.1.1.2
	libpciaccess-070327:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2015.05.10.09.31.51;	author matthieu;	state Exp;
branches;
next	1.12;
commitid	oHH7rwfUXCSZpX6V;

1.12
date	2014.01.03.09.44.24;	author matthieu;	state Exp;
branches;
next	1.11;

1.11
date	2012.04.09.18.50.44;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2012.03.09.21.02.09;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2011.11.06.21.35.46;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2010.07.31.08.05.06;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.07.10.18.56.27;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2009.04.14.20.14.23;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.15.04.50.02;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2008.05.24.14.14.00;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.16.16.22.09;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.06.21.01.25;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.05.20.08.56;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.06.05.20.08.56;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.06.16.16.13.55;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.13
log
@update to libpciaccess 0.13.4
@
text
@# (C) Copyright IBM Corporation 2006
# All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# on the rights to use, copy, modify, merge, publish, distribute, sub
# license, and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
# IBM AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#

# Initialize Autoconf
AC_PREREQ([2.60])
AC_INIT([libpciaccess],[0.13.4],
        [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg&component=libpciaccess],[libpciaccess])
AC_CONFIG_SRCDIR([Makefile.am])
AC_CONFIG_HEADERS([config.h])

# Initialize Automake
AM_INIT_AUTOMAKE([foreign dist-bzip2])
AC_USE_SYSTEM_EXTENSIONS

# Initialize libtool
AC_PROG_LIBTOOL

# Require X.Org macros 1.8 or later
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.8 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.8)
XORG_DEFAULT_OPTIONS

pciids_path=/usr/share/hwdata
AC_ARG_WITH(pciids-path, AS_HELP_STRING([--with-pciids-path=PCIIDS_PATH],
	[Path to pci.ids file]), [pciids_path="$withval"])
AX_DEFINE_DIR(PCIIDS_PATH, pciids_path, [Path to pci.ids])

AC_ARG_ENABLE(linux-rom-fallback, AS_HELP_STRING([--enable-linux-rom-fallback],
		[Enable support for falling back to /dev/mem for roms (default: disabled)]),
		[LINUX_ROM=$enableval],[LINUX_ROM=no])

if test "x$LINUX_ROM" = xyes; then
	AC_DEFINE(LINUX_ROM, 1, [Linux ROM read fallback])
fi

use_zlib=no
AC_ARG_WITH(zlib, AS_HELP_STRING([--with-zlib],
	[Enable zlib support to read gzip compressed pci.ids]),
	[use_zlib="$withval"])
if test "x$use_zlib" = xyes; then
	AC_CHECK_LIB(z, gzopen,
	[PCIACCESS_LIBS="$PCIACCESS_LIBS -lz"],
	[AC_MSG_ERROR(Check for zlib library failed)])
	AC_CHECK_HEADER([zlib.h],
	[AC_DEFINE(HAVE_ZLIB, 1, [Use zlib to read gzip compressed pci.ids])],
	[AC_MSG_ERROR(Check for zlib.h header file failed)])
fi

case $host_os in
	*freebsd* | *dragonfly*)
		freebsd=yes
		;;
	*linux*)
		linux=yes
		;;
	*netbsd*)
		case $host in
		*i[3-9]86*)
			PCIACCESS_LIBS="$PCIACCESS_LIBS -li386"
			;;
		*x86_64*|*amd64*)
			PCIACCESS_LIBS="$PCIACCESS_LIBS -lx86_64"
			;;
		*alpha*)
			PCIACCESS_LIBS="$PCIACCESS_LIBS -lalpha"
			;;
		esac
		PCIACCESS_LIBS="$PCIACCESS_LIBS -lpci"
		netbsd=yes
		;;
	*openbsd*)
		openbsd=yes
		;;
	*solaris*)
		solaris=yes
		PCIACCESS_LIBS="$PCIACCESS_LIBS -ldevinfo"
		;;
	gnu*)
		gnu=yes
		;;
	*cygwin*)
		cygwin=yes
		PCIACCESS_LIBS="$PCIACCESS_LIBS"
		;;
esac

AM_CONDITIONAL(LINUX, [test "x$linux" = xyes])
AM_CONDITIONAL(FREEBSD, [test "x$freebsd" = xyes])
AM_CONDITIONAL(NETBSD, [test "x$netbsd" = xyes])
AM_CONDITIONAL(OPENBSD, [test "x$openbsd" = xyes])
AM_CONDITIONAL(SOLARIS, [test "x$solaris" = xyes])
AM_CONDITIONAL(GNU, [test "x$gnu" = xyes])
AM_CONDITIONAL(CYGWIN, [test "x$cygwin" = xyes])

AC_SYS_LARGEFILE

AC_CHECK_HEADERS([err.h])

if test "x$netbsd" = xyes; then
AC_CHECK_HEADERS([machine/sysarch.h])
AC_CHECK_HEADERS([machine/mtrr.h], [have_mtrr_h="yes"], [have_mtrr_h="no"],
[#ifdef HAVE_MACHINE_SYSARCH_H
#include <sys/types.h>
#include <machine/sysarch.h>
#endif
])
else
AC_CHECK_HEADER([asm/mtrr.h], [have_mtrr_h="yes"], [have_mtrr_h="no"])
fi

if test "x$have_mtrr_h" = xyes; then
    AC_DEFINE(HAVE_MTRR, 1, [Use MTRRs on mappings])
fi

# check for the pci_io.pi_sel.pc_domain
AC_CHECK_MEMBER([struct pci_io.pi_sel.pc_domain],
               [AC_DEFINE(HAVE_PCI_IO_PC_DOMAIN,1,[Have the pci_io.pi_sel.pc_domain member.])],
               [],
               [ #include <sys/types.h>
                 #include <sys/pciio.h>
               ])

AC_SUBST(PCIACCESS_CFLAGS)
AC_SUBST(PCIACCESS_LIBS)

AC_CONFIG_FILES([Makefile
		include/Makefile
		man/Makefile
		src/Makefile
		scanpci/Makefile
		pciaccess.pc])
AC_OUTPUT
@


1.12
log
@Update to libpciacces 0.13.2.
@
text
@d26 1
a26 1
AC_INIT([libpciaccess],[0.13.2],
d79 2
a80 2
		*i386*)
			PCIACCESS_LIBS="-li386 -lpci"
d83 4
a86 1
			PCIACCESS_LIBS="-lx86_64 -lpci"
d89 1
d102 4
d114 1
@


1.11
log
@Update to libpciaccess 0.13.1
@
text
@d26 1
a26 1
AC_INIT([libpciaccess],[0.13.1],
a32 1
AM_MAINTAINER_MODE
d80 1
a80 1
			PCIACCESS_LIBS="-li386"
d83 1
a83 1
			PCIACCESS_LIBS="-lx86_64"
d111 9
d121 1
@


1.10
log
@Update to libpciaccess 0.13. Tested by shadchin@@
@
text
@d26 1
a26 1
AC_INIT([libpciaccess],[0.13],
d34 1
@


1.9
log
@Update to libpciaccess 0.12.1. Ok kettenis@@, shadchin@@
@
text
@d1 22
a22 23
dnl (C) Copyright IBM Corporation 2006
dnl All Rights Reserved.
dnl
dnl Permission is hereby granted, free of charge, to any person obtaining a
dnl copy of this software and associated documentation files (the "Software"),
dnl to deal in the Software without restriction, including without limitation
dnl on the rights to use, copy, modify, merge, publish, distribute, sub
dnl license, and/or sell copies of the Software, and to permit persons to whom
dnl the Software is furnished to do so, subject to the following conditions:
dnl
dnl The above copyright notice and this permission notice (including the next
dnl paragraph) shall be included in all copies or substantial portions of the
dnl Software.
dnl
dnl THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
dnl IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
dnl FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
dnl IBM AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
dnl LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
dnl FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
dnl DEALINGS IN THE SOFTWARE.
dnl
dnl Process this file with autoconf to create configure.
d26 1
a26 1
AC_INIT([libpciaccess],[0.12.1],
d35 4
a38 1
# Require xorg-macros: XORG_DEFAULT_OPTIONS
d40 2
a41 2
          [m4_fatal([must install xorg-macros 1.3 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.3)
a43 3
# Check for progs
AC_PROG_LIBTOOL

d109 2
d117 1
a117 1
dnl check for the pci_io.pi_sel.pc_domain
a126 1
		  
d129 5
a133 5
	   include/Makefile
	   man/Makefile
	   src/Makefile
	   scanpci/Makefile
           pciaccess.pc])
@


1.8
log
@Update to libpciaccess 0.12.

We already had most of the code from this version, it just add
2 bug fixes. no ABI/API change.
@
text
@d25 1
d27 4
d32 1
a32 1
AC_INIT(libpciaccess, 0.12.0, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg&component=libpciaccess], libpciaccess)
a40 1
AM_CONFIG_HEADER(config.h)
a42 1
AC_PROG_CC
d46 1
a46 1
AC_ARG_WITH(pciids-path, AC_HELP_STRING([--with-pciids-path=PCIIDS_PATH],
d48 1
a48 1
AC_DEFINE_DIR(PCIIDS_PATH, pciids_path, [Path to pci.ids])
d59 1
a59 1
AC_ARG_WITH(zlib, AC_HELP_STRING([--with-zlib],
d128 3
a130 1
AC_OUTPUT([Makefile
d132 1
d134 1
@


1.7
log
@Update to libpciaccess 0.11, with VGA arbiter support code from kettenis@@.
@
text
@d27 1
a27 1
AC_INIT(libpciaccess, 0.11.0, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg&component=libpciaccess], libpciaccess)
@


1.6
log
@Merge libpciaccess 0.10.5. No functionnal change on OpenBSD.
@
text
@d25 1
a25 15
# AC_DEFINE_DIR macro from autoconf-archive.cryp.to
AC_DEFUN([AC_DEFINE_DIR], [
  prefix_NONE=
  exec_prefix_NONE=
  test "x$prefix" = xNONE && prefix_NONE=yes && prefix=$ac_default_prefix
  test "x$exec_prefix" = xNONE && exec_prefix_NONE=yes && exec_prefix=$prefix
dnl In Autoconf 2.60, ${datadir} refers to ${datarootdir}, which in turn
dnl refers to ${prefix}.  Thus we have to use `eval' twice.
  eval ac_define_dir="\"[$]$2\""
  eval ac_define_dir="\"$ac_define_dir\""
  AC_SUBST($1, "$ac_define_dir")
  AC_DEFINE_UNQUOTED($1, "$ac_define_dir", [$3])
  test "$prefix_NONE" && prefix=NONE
  test "$exec_prefix_NONE" && exec_prefix=NONE
])
d27 2
a28 4
AC_PREREQ([2.57])

AC_INIT(libpciaccess, 0.10.5, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg&component=libpciaccess], libpciaccess)
AM_INIT_AUTOMAKE([dist-bzip2])
d31 5
d42 12
a53 1
m4_ifdef([AS_HELP_STRING], , [m4_define([AS_HELP_STRING], m4_defn([AC_HELP_STRING]))])
d55 4
a58 11
DEFAULT_PCIIDS_PATH=/usr/share/hwdata
AC_ARG_WITH(pciids-path,
	AS_HELP_STRING([--with-pciids-path=PCIIDS_PATH], [Path to pci.ids file]),
	[PCIIDS_PATH="$withval"],
	[PCIIDS_PATH="$DEFAULT_PCIIDS_PATH"])
AC_DEFINE_DIR(PCIIDS_PATH, PCIIDS_PATH, [Path to pci.ids])

AC_ARG_WITH(zlib,
	AS_HELP_STRING([--with-zlib], [Enable zlib support to read gzip compressed pci.ids]),
	[use_zlib="$withval"],
	[use_zlib="no"])
a67 11
if test "x$GCC" = "xyes"; then
       GCC_WARNINGS1="-Wall -Wpointer-arith -Wstrict-prototypes"
       GCC_WARNINGS2="-Wmissing-prototypes -Wmissing-declarations"
       GCC_WARNINGS3="-Wnested-externs"
       GCC_WARNINGS="$GCC_WARNINGS1 $GCC_WARNINGS2 $GCC_WARNINGS3"
       if test "x$WERROR" = "xyes"; then
               GCC_WARNINGS="${GCC_WARNINGS} -Werror"
       fi
       PCIACCESS_CFLAGS="$PCIACCESS_CFLAGS $GCC_WARNINGS"
fi

d93 3
d103 3
a123 1
XORG_RELEASE_VERSION
@


1.5
log
@update to libpciaccess 0.10.3.
@
text
@d43 1
a43 1
AC_INIT(libpciaccess, 0.10.3, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg&component=libpciaccess], libpciaccess)
d62 13
d93 11
d115 1
d119 2
a120 2
AC_CHECK_FILE([/usr/include/asm/mtrr.h],
              [have_mtrr_h="yes"], [have_mtrr_h="no"])
d124 8
@


1.4
log
@Merge libpciaccess 0.10.2, including kettenis@@ OpenBSD port.
@
text
@d43 1
a43 1
AC_INIT(libpciaccess, 0.10.2, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg&component=libpciaccess], libpciaccess)
@


1.3
log
@merge libpciaccess 2007/06/16
@
text
@a0 1

d43 1
a43 1
AC_INIT(libpciaccess, 0.8.0, [none yet], libpciaccess)
d74 1
a74 1
	*freebsd*)
d85 1
d93 6
@


1.2
log
@skeleton OpenBSD port of libpciaccess
@
text
@d84 3
d92 1
@


1.1
log
@Initial revision
@
text
@d81 3
d88 1
@


1.1.1.1
log
@import libpciaccess 070327
@
text
@@


1.1.1.2
log
@Import libpciaccess from git as of today.
Changes: solaris support added.
@
text
@a80 3
	*solaris*)
		solaris=yes
		;;
a84 1
AM_CONDITIONAL(SOLARIS, [test "x$solaris" = xyes])
@

