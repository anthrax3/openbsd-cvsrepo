head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_2:1.1.1.1
	XENOCARA:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.09.02.10.09.44;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	mKDGsTNpiR2zRHYQ;

1.4
date	2015.01.26.21.32.11;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	01TEvO4uNHLqFv7N;

1.3
date	2014.04.14.19.20.18;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.22.20.31.32;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.22.16.09.54;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.05.22.16.09.54;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to xcb-proto/libxcb 1.12. "Just commit it" naddy@@
@
text
@/*
 * This file generated automatically from xinerama.xml by c_client.py.
 * Edit at your peril.
 */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <stddef.h>  /* for offsetof() */
#include "xcbext.h"
#include "xinerama.h"

#define ALIGNOF(type) offsetof(struct { char dummy; type member; }, member)
#include "xproto.h"

xcb_extension_t xcb_xinerama_id = { "XINERAMA", 0 };

void
xcb_xinerama_screen_info_next (xcb_xinerama_screen_info_iterator_t *i)
{
    --i->rem;
    ++i->data;
    i->index += sizeof(xcb_xinerama_screen_info_t);
}

xcb_generic_iterator_t
xcb_xinerama_screen_info_end (xcb_xinerama_screen_info_iterator_t i)
{
    xcb_generic_iterator_t ret;
    ret.data = i.data + i.rem;
    ret.index = i.index + ((char *) ret.data - (char *) i.data);
    ret.rem = 0;
    return ret;
}

xcb_xinerama_query_version_cookie_t
xcb_xinerama_query_version (xcb_connection_t *c,
                            uint8_t           major,
                            uint8_t           minor)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_QUERY_VERSION,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_query_version_cookie_t xcb_ret;
    xcb_xinerama_query_version_request_t xcb_out;

    xcb_out.major = major;
    xcb_out.minor = minor;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_query_version_cookie_t
xcb_xinerama_query_version_unchecked (xcb_connection_t *c,
                                      uint8_t           major,
                                      uint8_t           minor)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_QUERY_VERSION,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_query_version_cookie_t xcb_ret;
    xcb_xinerama_query_version_request_t xcb_out;

    xcb_out.major = major;
    xcb_out.minor = minor;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_query_version_reply_t *
xcb_xinerama_query_version_reply (xcb_connection_t                     *c,
                                  xcb_xinerama_query_version_cookie_t   cookie  /**< */,
                                  xcb_generic_error_t                 **e)
{
    return (xcb_xinerama_query_version_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

xcb_xinerama_get_state_cookie_t
xcb_xinerama_get_state (xcb_connection_t *c,
                        xcb_window_t      window)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_GET_STATE,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_get_state_cookie_t xcb_ret;
    xcb_xinerama_get_state_request_t xcb_out;

    xcb_out.window = window;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_get_state_cookie_t
xcb_xinerama_get_state_unchecked (xcb_connection_t *c,
                                  xcb_window_t      window)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_GET_STATE,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_get_state_cookie_t xcb_ret;
    xcb_xinerama_get_state_request_t xcb_out;

    xcb_out.window = window;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_get_state_reply_t *
xcb_xinerama_get_state_reply (xcb_connection_t                 *c,
                              xcb_xinerama_get_state_cookie_t   cookie  /**< */,
                              xcb_generic_error_t             **e)
{
    return (xcb_xinerama_get_state_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

xcb_xinerama_get_screen_count_cookie_t
xcb_xinerama_get_screen_count (xcb_connection_t *c,
                               xcb_window_t      window)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_GET_SCREEN_COUNT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_get_screen_count_cookie_t xcb_ret;
    xcb_xinerama_get_screen_count_request_t xcb_out;

    xcb_out.window = window;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_get_screen_count_cookie_t
xcb_xinerama_get_screen_count_unchecked (xcb_connection_t *c,
                                         xcb_window_t      window)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_GET_SCREEN_COUNT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_get_screen_count_cookie_t xcb_ret;
    xcb_xinerama_get_screen_count_request_t xcb_out;

    xcb_out.window = window;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_get_screen_count_reply_t *
xcb_xinerama_get_screen_count_reply (xcb_connection_t                        *c,
                                     xcb_xinerama_get_screen_count_cookie_t   cookie  /**< */,
                                     xcb_generic_error_t                    **e)
{
    return (xcb_xinerama_get_screen_count_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

xcb_xinerama_get_screen_size_cookie_t
xcb_xinerama_get_screen_size (xcb_connection_t *c,
                              xcb_window_t      window,
                              uint32_t          screen)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_GET_SCREEN_SIZE,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_get_screen_size_cookie_t xcb_ret;
    xcb_xinerama_get_screen_size_request_t xcb_out;

    xcb_out.window = window;
    xcb_out.screen = screen;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_get_screen_size_cookie_t
xcb_xinerama_get_screen_size_unchecked (xcb_connection_t *c,
                                        xcb_window_t      window,
                                        uint32_t          screen)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_GET_SCREEN_SIZE,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_get_screen_size_cookie_t xcb_ret;
    xcb_xinerama_get_screen_size_request_t xcb_out;

    xcb_out.window = window;
    xcb_out.screen = screen;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_get_screen_size_reply_t *
xcb_xinerama_get_screen_size_reply (xcb_connection_t                       *c,
                                    xcb_xinerama_get_screen_size_cookie_t   cookie  /**< */,
                                    xcb_generic_error_t                   **e)
{
    return (xcb_xinerama_get_screen_size_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

xcb_xinerama_is_active_cookie_t
xcb_xinerama_is_active (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_IS_ACTIVE,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_is_active_cookie_t xcb_ret;
    xcb_xinerama_is_active_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_is_active_cookie_t
xcb_xinerama_is_active_unchecked (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_IS_ACTIVE,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_is_active_cookie_t xcb_ret;
    xcb_xinerama_is_active_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_is_active_reply_t *
xcb_xinerama_is_active_reply (xcb_connection_t                 *c,
                              xcb_xinerama_is_active_cookie_t   cookie  /**< */,
                              xcb_generic_error_t             **e)
{
    return (xcb_xinerama_is_active_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_xinerama_query_screens_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_xinerama_query_screens_reply_t *_aux = (xcb_xinerama_query_screens_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_xinerama_query_screens_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* screen_info */
    xcb_block_len += _aux->number * sizeof(xcb_xinerama_screen_info_t);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(xcb_xinerama_screen_info_t);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_xinerama_query_screens_cookie_t
xcb_xinerama_query_screens (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_QUERY_SCREENS,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_query_screens_cookie_t xcb_ret;
    xcb_xinerama_query_screens_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_query_screens_cookie_t
xcb_xinerama_query_screens_unchecked (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_xinerama_id,
        .opcode = XCB_XINERAMA_QUERY_SCREENS,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_xinerama_query_screens_cookie_t xcb_ret;
    xcb_xinerama_query_screens_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_xinerama_screen_info_t *
xcb_xinerama_query_screens_screen_info (const xcb_xinerama_query_screens_reply_t *R)
{
    return (xcb_xinerama_screen_info_t *) (R + 1);
}

int
xcb_xinerama_query_screens_screen_info_length (const xcb_xinerama_query_screens_reply_t *R)
{
    return R->number;
}

xcb_xinerama_screen_info_iterator_t
xcb_xinerama_query_screens_screen_info_iterator (const xcb_xinerama_query_screens_reply_t *R)
{
    xcb_xinerama_screen_info_iterator_t i;
    i.data = (xcb_xinerama_screen_info_t *) (R + 1);
    i.rem = R->number;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_xinerama_query_screens_reply_t *
xcb_xinerama_query_screens_reply (xcb_connection_t                     *c,
                                  xcb_xinerama_query_screens_cookie_t   cookie  /**< */,
                                  xcb_generic_error_t                 **e)
{
    return (xcb_xinerama_query_screens_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

@


1.4
log
@Update to libxcb and xcb-proto 1.11.
Tested on a bulk ports build by naddy@@.
Lots of churn due to white-space and comments changes in generated code.
@
text
@d22 1
a22 1
xcb_xinerama_screen_info_next (xcb_xinerama_screen_info_iterator_t *i  /**< */)
d30 1
a30 1
xcb_xinerama_screen_info_end (xcb_xinerama_screen_info_iterator_t i  /**< */)
d40 3
a42 3
xcb_xinerama_query_version (xcb_connection_t *c  /**< */,
                            uint8_t           major  /**< */,
                            uint8_t           minor  /**< */)
d45 4
a48 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_QUERY_VERSION,
        /* isvoid */ 0
d68 3
a70 3
xcb_xinerama_query_version_unchecked (xcb_connection_t *c  /**< */,
                                      uint8_t           major  /**< */,
                                      uint8_t           minor  /**< */)
d73 4
a76 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_QUERY_VERSION,
        /* isvoid */ 0
d96 1
a96 1
xcb_xinerama_query_version_reply (xcb_connection_t                     *c  /**< */,
d98 1
a98 1
                                  xcb_generic_error_t                 **e  /**< */)
d104 2
a105 2
xcb_xinerama_get_state (xcb_connection_t *c  /**< */,
                        xcb_window_t      window  /**< */)
d108 4
a111 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_GET_STATE,
        /* isvoid */ 0
d130 2
a131 2
xcb_xinerama_get_state_unchecked (xcb_connection_t *c  /**< */,
                                  xcb_window_t      window  /**< */)
d134 4
a137 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_GET_STATE,
        /* isvoid */ 0
d156 1
a156 1
xcb_xinerama_get_state_reply (xcb_connection_t                 *c  /**< */,
d158 1
a158 1
                              xcb_generic_error_t             **e  /**< */)
d164 2
a165 2
xcb_xinerama_get_screen_count (xcb_connection_t *c  /**< */,
                               xcb_window_t      window  /**< */)
d168 4
a171 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_GET_SCREEN_COUNT,
        /* isvoid */ 0
d190 2
a191 2
xcb_xinerama_get_screen_count_unchecked (xcb_connection_t *c  /**< */,
                                         xcb_window_t      window  /**< */)
d194 4
a197 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_GET_SCREEN_COUNT,
        /* isvoid */ 0
d216 1
a216 1
xcb_xinerama_get_screen_count_reply (xcb_connection_t                        *c  /**< */,
d218 1
a218 1
                                     xcb_generic_error_t                    **e  /**< */)
d224 3
a226 3
xcb_xinerama_get_screen_size (xcb_connection_t *c  /**< */,
                              xcb_window_t      window  /**< */,
                              uint32_t          screen  /**< */)
d229 4
a232 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_GET_SCREEN_SIZE,
        /* isvoid */ 0
d252 3
a254 3
xcb_xinerama_get_screen_size_unchecked (xcb_connection_t *c  /**< */,
                                        xcb_window_t      window  /**< */,
                                        uint32_t          screen  /**< */)
d257 4
a260 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_GET_SCREEN_SIZE,
        /* isvoid */ 0
d280 1
a280 1
xcb_xinerama_get_screen_size_reply (xcb_connection_t                       *c  /**< */,
d282 1
a282 1
                                    xcb_generic_error_t                   **e  /**< */)
d288 1
a288 1
xcb_xinerama_is_active (xcb_connection_t *c  /**< */)
d291 4
a294 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_IS_ACTIVE,
        /* isvoid */ 0
d312 1
a312 1
xcb_xinerama_is_active_unchecked (xcb_connection_t *c  /**< */)
d315 4
a318 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_IS_ACTIVE,
        /* isvoid */ 0
d336 1
a336 1
xcb_xinerama_is_active_reply (xcb_connection_t                 *c  /**< */,
d338 1
a338 1
                              xcb_generic_error_t             **e  /**< */)
d344 1
a344 1
xcb_xinerama_query_screens_sizeof (const void  *_buffer  /**< */)
d375 1
a375 1
xcb_xinerama_query_screens (xcb_connection_t *c  /**< */)
d378 4
a381 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_QUERY_SCREENS,
        /* isvoid */ 0
d399 1
a399 1
xcb_xinerama_query_screens_unchecked (xcb_connection_t *c  /**< */)
d402 4
a405 4
        /* count */ 2,
        /* ext */ &xcb_xinerama_id,
        /* opcode */ XCB_XINERAMA_QUERY_SCREENS,
        /* isvoid */ 0
d423 1
a423 1
xcb_xinerama_query_screens_screen_info (const xcb_xinerama_query_screens_reply_t *R  /**< */)
d429 1
a429 1
xcb_xinerama_query_screens_screen_info_length (const xcb_xinerama_query_screens_reply_t *R  /**< */)
d435 1
a435 1
xcb_xinerama_query_screens_screen_info_iterator (const xcb_xinerama_query_screens_reply_t *R  /**< */)
d445 1
a445 1
xcb_xinerama_query_screens_reply (xcb_connection_t                     *c  /**< */,
d447 1
a447 1
                                  xcb_generic_error_t                 **e  /**< */)
@


1.3
log
@Update build system and generated files for libxcb 1.10.
@
text
@a20 10

/*****************************************************************************
 **
 ** void xcb_xinerama_screen_info_next
 ** 
 ** @@param xcb_xinerama_screen_info_iterator_t *i
 ** @@returns void
 **
 *****************************************************************************/
 
a28 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_xinerama_screen_info_end
 ** 
 ** @@param xcb_xinerama_screen_info_iterator_t i
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a38 12

/*****************************************************************************
 **
 ** xcb_xinerama_query_version_cookie_t xcb_xinerama_query_version
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           major
 ** @@param uint8_t           minor
 ** @@returns xcb_xinerama_query_version_cookie_t
 **
 *****************************************************************************/
 
d50 1
a50 1
    
d54 1
a54 1
    
d57 1
a57 1
    
d62 1
a62 1
    
a66 12

/*****************************************************************************
 **
 ** xcb_xinerama_query_version_cookie_t xcb_xinerama_query_version_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           major
 ** @@param uint8_t           minor
 ** @@returns xcb_xinerama_query_version_cookie_t
 **
 *****************************************************************************/
 
d78 1
a78 1
    
d82 1
a82 1
    
d85 1
a85 1
    
d90 1
a90 1
    
a94 12

/*****************************************************************************
 **
 ** xcb_xinerama_query_version_reply_t * xcb_xinerama_query_version_reply
 ** 
 ** @@param xcb_connection_t                     *c
 ** @@param xcb_xinerama_query_version_cookie_t   cookie
 ** @@param xcb_generic_error_t                 **e
 ** @@returns xcb_xinerama_query_version_reply_t *
 **
 *****************************************************************************/
 
a102 11

/*****************************************************************************
 **
 ** xcb_xinerama_get_state_cookie_t xcb_xinerama_get_state
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_xinerama_get_state_cookie_t
 **
 *****************************************************************************/
 
d113 1
a113 1
    
d117 1
a117 1
    
d119 1
a119 1
    
d124 1
a124 1
    
a128 11

/*****************************************************************************
 **
 ** xcb_xinerama_get_state_cookie_t xcb_xinerama_get_state_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_xinerama_get_state_cookie_t
 **
 *****************************************************************************/
 
d139 1
a139 1
    
d143 1
a143 1
    
d145 1
a145 1
    
d150 1
a150 1
    
a154 12

/*****************************************************************************
 **
 ** xcb_xinerama_get_state_reply_t * xcb_xinerama_get_state_reply
 ** 
 ** @@param xcb_connection_t                 *c
 ** @@param xcb_xinerama_get_state_cookie_t   cookie
 ** @@param xcb_generic_error_t             **e
 ** @@returns xcb_xinerama_get_state_reply_t *
 **
 *****************************************************************************/
 
a162 11

/*****************************************************************************
 **
 ** xcb_xinerama_get_screen_count_cookie_t xcb_xinerama_get_screen_count
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_xinerama_get_screen_count_cookie_t
 **
 *****************************************************************************/
 
d173 1
a173 1
    
d177 1
a177 1
    
d179 1
a179 1
    
d184 1
a184 1
    
a188 11

/*****************************************************************************
 **
 ** xcb_xinerama_get_screen_count_cookie_t xcb_xinerama_get_screen_count_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_xinerama_get_screen_count_cookie_t
 **
 *****************************************************************************/
 
d199 1
a199 1
    
d203 1
a203 1
    
d205 1
a205 1
    
d210 1
a210 1
    
a214 12

/*****************************************************************************
 **
 ** xcb_xinerama_get_screen_count_reply_t * xcb_xinerama_get_screen_count_reply
 ** 
 ** @@param xcb_connection_t                        *c
 ** @@param xcb_xinerama_get_screen_count_cookie_t   cookie
 ** @@param xcb_generic_error_t                    **e
 ** @@returns xcb_xinerama_get_screen_count_reply_t *
 **
 *****************************************************************************/
 
a222 12

/*****************************************************************************
 **
 ** xcb_xinerama_get_screen_size_cookie_t xcb_xinerama_get_screen_size
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint32_t          screen
 ** @@returns xcb_xinerama_get_screen_size_cookie_t
 **
 *****************************************************************************/
 
d234 1
a234 1
    
d238 1
a238 1
    
d241 1
a241 1
    
d246 1
a246 1
    
a250 12

/*****************************************************************************
 **
 ** xcb_xinerama_get_screen_size_cookie_t xcb_xinerama_get_screen_size_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint32_t          screen
 ** @@returns xcb_xinerama_get_screen_size_cookie_t
 **
 *****************************************************************************/
 
d262 1
a262 1
    
d266 1
a266 1
    
d269 1
a269 1
    
d274 1
a274 1
    
a278 12

/*****************************************************************************
 **
 ** xcb_xinerama_get_screen_size_reply_t * xcb_xinerama_get_screen_size_reply
 ** 
 ** @@param xcb_connection_t                       *c
 ** @@param xcb_xinerama_get_screen_size_cookie_t   cookie
 ** @@param xcb_generic_error_t                   **e
 ** @@returns xcb_xinerama_get_screen_size_reply_t *
 **
 *****************************************************************************/
 
a286 10

/*****************************************************************************
 **
 ** xcb_xinerama_is_active_cookie_t xcb_xinerama_is_active
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_xinerama_is_active_cookie_t
 **
 *****************************************************************************/
 
d296 1
a296 1
    
d300 2
a301 2
    
    
d306 1
a306 1
    
a310 10

/*****************************************************************************
 **
 ** xcb_xinerama_is_active_cookie_t xcb_xinerama_is_active_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_xinerama_is_active_cookie_t
 **
 *****************************************************************************/
 
d320 1
a320 1
    
d324 2
a325 2
    
    
d330 1
a330 1
    
a334 12

/*****************************************************************************
 **
 ** xcb_xinerama_is_active_reply_t * xcb_xinerama_is_active_reply
 ** 
 ** @@param xcb_connection_t                 *c
 ** @@param xcb_xinerama_is_active_cookie_t   cookie
 ** @@param xcb_generic_error_t             **e
 ** @@returns xcb_xinerama_is_active_reply_t *
 **
 *****************************************************************************/
 
a373 10

/*****************************************************************************
 **
 ** xcb_xinerama_query_screens_cookie_t xcb_xinerama_query_screens
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_xinerama_query_screens_cookie_t
 **
 *****************************************************************************/
 
d383 1
a383 1
    
d387 2
a388 2
    
    
d393 1
a393 1
    
a397 10

/*****************************************************************************
 **
 ** xcb_xinerama_query_screens_cookie_t xcb_xinerama_query_screens_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_xinerama_query_screens_cookie_t
 **
 *****************************************************************************/
 
d407 1
a407 1
    
d411 2
a412 2
    
    
d417 1
a417 1
    
a421 10

/*****************************************************************************
 **
 ** xcb_xinerama_screen_info_t * xcb_xinerama_query_screens_screen_info
 ** 
 ** @@param const xcb_xinerama_query_screens_reply_t *R
 ** @@returns xcb_xinerama_screen_info_t *
 **
 *****************************************************************************/
 
a427 10

/*****************************************************************************
 **
 ** int xcb_xinerama_query_screens_screen_info_length
 ** 
 ** @@param const xcb_xinerama_query_screens_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a433 10

/*****************************************************************************
 **
 ** xcb_xinerama_screen_info_iterator_t xcb_xinerama_query_screens_screen_info_iterator
 ** 
 ** @@param const xcb_xinerama_query_screens_reply_t *R
 ** @@returns xcb_xinerama_screen_info_iterator_t
 **
 *****************************************************************************/
 
a443 12

/*****************************************************************************
 **
 ** xcb_xinerama_query_screens_reply_t * xcb_xinerama_query_screens_reply
 ** 
 ** @@param xcb_connection_t                     *c
 ** @@param xcb_xinerama_query_screens_cookie_t   cookie
 ** @@param xcb_generic_error_t                 **e
 ** @@returns xcb_xinerama_query_screens_reply_t *
 **
 *****************************************************************************/
 
@


1.2
log
@Update to libxcb 1.9.0.
tested by ajacoutot@@ and naddy@@ on a full ports build
@
text
@d543 1
a543 1
    unsigned int xcb_align_to;
d548 2
@


1.1
log
@Initial revision
@
text
@d6 4
d12 1
d15 2
d94 1
d134 1
d191 1
d228 1
d285 1
d322 1
d382 1
d422 1
d476 1
d510 1
d535 29
d593 1
d627 1
@


1.1.1.1
log
@Xenocara build infrastructure for libxcb.

This includes a set of pre-generated sources files in src/ so that
python and xslt are not needed to build.
@
text
@@
