head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_2:1.1.1.1
	XENOCARA:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.09.02.10.09.44;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	mKDGsTNpiR2zRHYQ;

1.4
date	2015.01.26.21.32.11;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	01TEvO4uNHLqFv7N;

1.3
date	2014.04.14.19.20.17;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.22.20.31.32;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.22.16.09.17;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.05.22.16.09.17;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to xcb-proto/libxcb 1.12. "Just commit it" naddy@@
@
text
@/*
 * This file generated automatically from damage.xml by c_client.py.
 * Edit at your peril.
 */

/**
 * @@defgroup XCB_Damage_API XCB Damage API
 * @@brief Damage XCB Protocol Implementation.
 * @@{
 **/

#ifndef __DAMAGE_H
#define __DAMAGE_H

#include "xcb.h"
#include "xproto.h"
#include "xfixes.h"

#ifdef __cplusplus
extern "C" {
#endif

#define XCB_DAMAGE_MAJOR_VERSION 1
#define XCB_DAMAGE_MINOR_VERSION 1

extern xcb_extension_t xcb_damage_id;

typedef uint32_t xcb_damage_damage_t;

/**
 * @@brief xcb_damage_damage_iterator_t
 **/
typedef struct xcb_damage_damage_iterator_t {
    xcb_damage_damage_t *data;
    int                  rem;
    int                  index;
} xcb_damage_damage_iterator_t;

typedef enum xcb_damage_report_level_t {
    XCB_DAMAGE_REPORT_LEVEL_RAW_RECTANGLES = 0,
    XCB_DAMAGE_REPORT_LEVEL_DELTA_RECTANGLES = 1,
    XCB_DAMAGE_REPORT_LEVEL_BOUNDING_BOX = 2,
    XCB_DAMAGE_REPORT_LEVEL_NON_EMPTY = 3
} xcb_damage_report_level_t;

/** Opcode for xcb_damage_bad_damage. */
#define XCB_DAMAGE_BAD_DAMAGE 0

/**
 * @@brief xcb_damage_bad_damage_error_t
 **/
typedef struct xcb_damage_bad_damage_error_t {
    uint8_t  response_type;
    uint8_t  error_code;
    uint16_t sequence;
} xcb_damage_bad_damage_error_t;

/**
 * @@brief xcb_damage_query_version_cookie_t
 **/
typedef struct xcb_damage_query_version_cookie_t {
    unsigned int sequence;
} xcb_damage_query_version_cookie_t;

/** Opcode for xcb_damage_query_version. */
#define XCB_DAMAGE_QUERY_VERSION 0

/**
 * @@brief xcb_damage_query_version_request_t
 **/
typedef struct xcb_damage_query_version_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint32_t client_major_version;
    uint32_t client_minor_version;
} xcb_damage_query_version_request_t;

/**
 * @@brief xcb_damage_query_version_reply_t
 **/
typedef struct xcb_damage_query_version_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t major_version;
    uint32_t minor_version;
    uint8_t  pad1[16];
} xcb_damage_query_version_reply_t;

/** Opcode for xcb_damage_create. */
#define XCB_DAMAGE_CREATE 1

/**
 * @@brief xcb_damage_create_request_t
 **/
typedef struct xcb_damage_create_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_damage_damage_t damage;
    xcb_drawable_t      drawable;
    uint8_t             level;
    uint8_t             pad0[3];
} xcb_damage_create_request_t;

/** Opcode for xcb_damage_destroy. */
#define XCB_DAMAGE_DESTROY 2

/**
 * @@brief xcb_damage_destroy_request_t
 **/
typedef struct xcb_damage_destroy_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_damage_damage_t damage;
} xcb_damage_destroy_request_t;

/** Opcode for xcb_damage_subtract. */
#define XCB_DAMAGE_SUBTRACT 3

/**
 * @@brief xcb_damage_subtract_request_t
 **/
typedef struct xcb_damage_subtract_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_damage_damage_t damage;
    xcb_xfixes_region_t repair;
    xcb_xfixes_region_t parts;
} xcb_damage_subtract_request_t;

/** Opcode for xcb_damage_add. */
#define XCB_DAMAGE_ADD 4

/**
 * @@brief xcb_damage_add_request_t
 **/
typedef struct xcb_damage_add_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_drawable_t      drawable;
    xcb_xfixes_region_t region;
} xcb_damage_add_request_t;

/** Opcode for xcb_damage_notify. */
#define XCB_DAMAGE_NOTIFY 0

/**
 * @@brief xcb_damage_notify_event_t
 **/
typedef struct xcb_damage_notify_event_t {
    uint8_t             response_type;
    uint8_t             level;
    uint16_t            sequence;
    xcb_drawable_t      drawable;
    xcb_damage_damage_t damage;
    xcb_timestamp_t     timestamp;
    xcb_rectangle_t     area;
    xcb_rectangle_t     geometry;
} xcb_damage_notify_event_t;

/**
 * Get the next element of the iterator
 * @@param i Pointer to a xcb_damage_damage_iterator_t
 *
 * Get the next element in the iterator. The member rem is
 * decreased by one. The member data points to the next
 * element. The member index is increased by sizeof(xcb_damage_damage_t)
 */
void
xcb_damage_damage_next (xcb_damage_damage_iterator_t *i);

/**
 * Return the iterator pointing to the last element
 * @@param i An xcb_damage_damage_iterator_t
 * @@return  The iterator pointing to the last element
 *
 * Set the current element in the iterator to the last element.
 * The member rem is set to 0. The member data points to the
 * last element.
 */
xcb_generic_iterator_t
xcb_damage_damage_end (xcb_damage_damage_iterator_t i);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_damage_query_version_cookie_t
xcb_damage_query_version (xcb_connection_t *c,
                          uint32_t          client_major_version,
                          uint32_t          client_minor_version);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_damage_query_version_cookie_t
xcb_damage_query_version_unchecked (xcb_connection_t *c,
                                    uint32_t          client_major_version,
                                    uint32_t          client_minor_version);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_damage_query_version_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_damage_query_version_reply_t *
xcb_damage_query_version_reply (xcb_connection_t                   *c,
                                xcb_damage_query_version_cookie_t   cookie  /**< */,
                                xcb_generic_error_t               **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_damage_create_checked (xcb_connection_t    *c,
                           xcb_damage_damage_t  damage,
                           xcb_drawable_t       drawable,
                           uint8_t              level);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_damage_create (xcb_connection_t    *c,
                   xcb_damage_damage_t  damage,
                   xcb_drawable_t       drawable,
                   uint8_t              level);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_damage_destroy_checked (xcb_connection_t    *c,
                            xcb_damage_damage_t  damage);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_damage_destroy (xcb_connection_t    *c,
                    xcb_damage_damage_t  damage);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_damage_subtract_checked (xcb_connection_t    *c,
                             xcb_damage_damage_t  damage,
                             xcb_xfixes_region_t  repair,
                             xcb_xfixes_region_t  parts);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_damage_subtract (xcb_connection_t    *c,
                     xcb_damage_damage_t  damage,
                     xcb_xfixes_region_t  repair,
                     xcb_xfixes_region_t  parts);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_damage_add_checked (xcb_connection_t    *c,
                        xcb_drawable_t       drawable,
                        xcb_xfixes_region_t  region);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_damage_add (xcb_connection_t    *c,
                xcb_drawable_t       drawable,
                xcb_xfixes_region_t  region);


#ifdef __cplusplus
}
#endif

#endif

/**
 * @@}
 */
@


1.4
log
@Update to libxcb and xcb-proto 1.11.
Tested on a bulk ports build by naddy@@.
Lots of churn due to white-space and comments changes in generated code.
@
text
@d34 3
a36 3
    xcb_damage_damage_t *data; /**<  */
    int                  rem; /**<  */
    int                  index; /**<  */
d53 3
a55 3
    uint8_t  response_type; /**<  */
    uint8_t  error_code; /**<  */
    uint16_t sequence; /**<  */
d62 1
a62 1
    unsigned int sequence; /**<  */
d72 5
a76 5
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint32_t client_major_version; /**<  */
    uint32_t client_minor_version; /**<  */
d83 7
a89 7
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t major_version; /**<  */
    uint32_t minor_version; /**<  */
    uint8_t  pad1[16]; /**<  */
d99 7
a105 7
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_damage_damage_t damage; /**<  */
    xcb_drawable_t      drawable; /**<  */
    uint8_t             level; /**<  */
    uint8_t             pad0[3]; /**<  */
d115 4
a118 4
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_damage_damage_t damage; /**<  */
d128 6
a133 6
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_damage_damage_t damage; /**<  */
    xcb_xfixes_region_t repair; /**<  */
    xcb_xfixes_region_t parts; /**<  */
d143 5
a147 5
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_drawable_t      drawable; /**<  */
    xcb_xfixes_region_t region; /**<  */
d157 8
a164 8
    uint8_t             response_type; /**<  */
    uint8_t             level; /**<  */
    uint16_t            sequence; /**<  */
    xcb_drawable_t      drawable; /**<  */
    xcb_damage_damage_t damage; /**<  */
    xcb_timestamp_t     timestamp; /**<  */
    xcb_rectangle_t     area; /**<  */
    xcb_rectangle_t     geometry; /**<  */
d176 1
a176 1
xcb_damage_damage_next (xcb_damage_damage_iterator_t *i  /**< */);
d188 1
a188 1
xcb_damage_damage_end (xcb_damage_damage_iterator_t i  /**< */);
d199 3
a201 3
xcb_damage_query_version (xcb_connection_t *c  /**< */,
                          uint32_t          client_major_version  /**< */,
                          uint32_t          client_minor_version  /**< */);
d215 3
a217 3
xcb_damage_query_version_unchecked (xcb_connection_t *c  /**< */,
                                    uint32_t          client_major_version  /**< */,
                                    uint32_t          client_minor_version  /**< */);
d234 1
a234 1
xcb_damage_query_version_reply (xcb_connection_t                   *c  /**< */,
d236 1
a236 1
                                xcb_generic_error_t               **e  /**< */);
d250 4
a253 4
xcb_damage_create_checked (xcb_connection_t    *c  /**< */,
                           xcb_damage_damage_t  damage  /**< */,
                           xcb_drawable_t       drawable  /**< */,
                           uint8_t              level  /**< */);
d264 4
a267 4
xcb_damage_create (xcb_connection_t    *c  /**< */,
                   xcb_damage_damage_t  damage  /**< */,
                   xcb_drawable_t       drawable  /**< */,
                   uint8_t              level  /**< */);
d281 2
a282 2
xcb_damage_destroy_checked (xcb_connection_t    *c  /**< */,
                            xcb_damage_damage_t  damage  /**< */);
d293 2
a294 2
xcb_damage_destroy (xcb_connection_t    *c  /**< */,
                    xcb_damage_damage_t  damage  /**< */);
d308 4
a311 4
xcb_damage_subtract_checked (xcb_connection_t    *c  /**< */,
                             xcb_damage_damage_t  damage  /**< */,
                             xcb_xfixes_region_t  repair  /**< */,
                             xcb_xfixes_region_t  parts  /**< */);
d322 4
a325 4
xcb_damage_subtract (xcb_connection_t    *c  /**< */,
                     xcb_damage_damage_t  damage  /**< */,
                     xcb_xfixes_region_t  repair  /**< */,
                     xcb_xfixes_region_t  parts  /**< */);
d339 3
a341 3
xcb_damage_add_checked (xcb_connection_t    *c  /**< */,
                        xcb_drawable_t       drawable  /**< */,
                        xcb_xfixes_region_t  region  /**< */);
d352 3
a354 3
xcb_damage_add (xcb_connection_t    *c  /**< */,
                xcb_drawable_t       drawable  /**< */,
                xcb_xfixes_region_t  region  /**< */);
@


1.3
log
@Update build system and generated files for libxcb 1.10.
@
text
@a16 2
#include "render.h"
#include "shape.h"
d25 1
a25 1
  
a174 10

/*****************************************************************************
 **
 ** void xcb_damage_damage_next
 ** 
 ** @@param xcb_damage_damage_iterator_t *i
 ** @@returns void
 **
 *****************************************************************************/
 
a186 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_damage_damage_end
 ** 
 ** @@param xcb_damage_damage_iterator_t i
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d196 1
a196 1
 * 
a197 12

/*****************************************************************************
 **
 ** xcb_damage_query_version_cookie_t xcb_damage_query_version
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          client_major_version
 ** @@param uint32_t          client_minor_version
 ** @@returns xcb_damage_query_version_cookie_t
 **
 *****************************************************************************/
 
d209 1
a209 1
 * 
a213 12

/*****************************************************************************
 **
 ** xcb_damage_query_version_cookie_t xcb_damage_query_version_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          client_major_version
 ** @@param uint32_t          client_minor_version
 ** @@returns xcb_damage_query_version_cookie_t
 **
 *****************************************************************************/
 
d226 1
a226 1
 * 
a232 12

/*****************************************************************************
 **
 ** xcb_damage_query_version_reply_t * xcb_damage_query_version_reply
 ** 
 ** @@param xcb_connection_t                   *c
 ** @@param xcb_damage_query_version_cookie_t   cookie
 ** @@param xcb_generic_error_t               **e
 ** @@returns xcb_damage_query_version_reply_t *
 **
 *****************************************************************************/
 
d244 1
a244 1
 * 
a248 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_damage_create_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_damage_damage_t  damage
 ** @@param xcb_drawable_t       drawable
 ** @@param uint8_t              level
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d261 1
a261 1
 * 
a262 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_damage_create
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_damage_damage_t  damage
 ** @@param xcb_drawable_t       drawable
 ** @@param uint8_t              level
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d275 1
a275 1
 * 
a279 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_damage_destroy_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_damage_damage_t  damage
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d290 1
a290 1
 * 
a291 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_damage_destroy
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_damage_damage_t  damage
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d302 1
a302 1
 * 
a306 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_damage_subtract_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_damage_damage_t  damage
 ** @@param xcb_xfixes_region_t  repair
 ** @@param xcb_xfixes_region_t  parts
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d319 1
a319 1
 * 
a320 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_damage_subtract
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_damage_damage_t  damage
 ** @@param xcb_xfixes_region_t  repair
 ** @@param xcb_xfixes_region_t  parts
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d333 1
a333 1
 * 
a337 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_damage_add_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_drawable_t       drawable
 ** @@param xcb_xfixes_region_t  region
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d349 1
a349 1
 * 
a350 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_damage_add
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_drawable_t       drawable
 ** @@param xcb_xfixes_region_t  region
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
@


1.2
log
@Update to libxcb 1.9.0.
tested by ajacoutot@@ and naddy@@ on a full ports build
@
text
@d42 4
a45 4
    XCB_DAMAGE_REPORT_LEVEL_RAW_RECTANGLES,
    XCB_DAMAGE_REPORT_LEVEL_DELTA_RECTANGLES,
    XCB_DAMAGE_REPORT_LEVEL_BOUNDING_BOX,
    XCB_DAMAGE_REPORT_LEVEL_NON_EMPTY
@


1.1
log
@Initial revision
@
text
@d213 1
a213 1
 * Delivers a request to the X server
d238 1
a238 1
 * Delivers a request to the X server
d297 1
a297 1
 * Delivers a request to the X server
d327 1
a327 1
 * Delivers a request to the X server
d354 1
a354 1
 * Delivers a request to the X server
d380 1
a380 1
 * Delivers a request to the X server
d403 1
a403 1
 * Delivers a request to the X server
d433 1
a433 1
 * Delivers a request to the X server
d460 1
a460 1
 * Delivers a request to the X server
d488 1
a488 1
 * Delivers a request to the X server
@


1.1.1.1
log
@Xenocara build infrastructure for libxcb.

This includes a set of pre-generated sources files in src/ so that
python and xslt are not needed to build.
@
text
@@
