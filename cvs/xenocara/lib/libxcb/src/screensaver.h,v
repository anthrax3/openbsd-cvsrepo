head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_2:1.1.1.1
	XENOCARA:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.09.02.10.09.44;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	mKDGsTNpiR2zRHYQ;

1.4
date	2015.01.26.21.32.11;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	01TEvO4uNHLqFv7N;

1.3
date	2014.04.14.19.20.17;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.22.20.31.32;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.22.16.09.45;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.05.22.16.09.45;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to xcb-proto/libxcb 1.12. "Just commit it" naddy@@
@
text
@/*
 * This file generated automatically from screensaver.xml by c_client.py.
 * Edit at your peril.
 */

/**
 * @@defgroup XCB_ScreenSaver_API XCB ScreenSaver API
 * @@brief ScreenSaver XCB Protocol Implementation.
 * @@{
 **/

#ifndef __SCREENSAVER_H
#define __SCREENSAVER_H

#include "xcb.h"
#include "xproto.h"

#ifdef __cplusplus
extern "C" {
#endif

#define XCB_SCREENSAVER_MAJOR_VERSION 1
#define XCB_SCREENSAVER_MINOR_VERSION 1

extern xcb_extension_t xcb_screensaver_id;

typedef enum xcb_screensaver_kind_t {
    XCB_SCREENSAVER_KIND_BLANKED = 0,
    XCB_SCREENSAVER_KIND_INTERNAL = 1,
    XCB_SCREENSAVER_KIND_EXTERNAL = 2
} xcb_screensaver_kind_t;

typedef enum xcb_screensaver_event_t {
    XCB_SCREENSAVER_EVENT_NOTIFY_MASK = 1,
    XCB_SCREENSAVER_EVENT_CYCLE_MASK = 2
} xcb_screensaver_event_t;

typedef enum xcb_screensaver_state_t {
    XCB_SCREENSAVER_STATE_OFF = 0,
    XCB_SCREENSAVER_STATE_ON = 1,
    XCB_SCREENSAVER_STATE_CYCLE = 2,
    XCB_SCREENSAVER_STATE_DISABLED = 3
} xcb_screensaver_state_t;

/**
 * @@brief xcb_screensaver_query_version_cookie_t
 **/
typedef struct xcb_screensaver_query_version_cookie_t {
    unsigned int sequence;
} xcb_screensaver_query_version_cookie_t;

/** Opcode for xcb_screensaver_query_version. */
#define XCB_SCREENSAVER_QUERY_VERSION 0

/**
 * @@brief xcb_screensaver_query_version_request_t
 **/
typedef struct xcb_screensaver_query_version_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint8_t  client_major_version;
    uint8_t  client_minor_version;
    uint8_t  pad0[2];
} xcb_screensaver_query_version_request_t;

/**
 * @@brief xcb_screensaver_query_version_reply_t
 **/
typedef struct xcb_screensaver_query_version_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint16_t server_major_version;
    uint16_t server_minor_version;
    uint8_t  pad1[20];
} xcb_screensaver_query_version_reply_t;

/**
 * @@brief xcb_screensaver_query_info_cookie_t
 **/
typedef struct xcb_screensaver_query_info_cookie_t {
    unsigned int sequence;
} xcb_screensaver_query_info_cookie_t;

/** Opcode for xcb_screensaver_query_info. */
#define XCB_SCREENSAVER_QUERY_INFO 1

/**
 * @@brief xcb_screensaver_query_info_request_t
 **/
typedef struct xcb_screensaver_query_info_request_t {
    uint8_t        major_opcode;
    uint8_t        minor_opcode;
    uint16_t       length;
    xcb_drawable_t drawable;
} xcb_screensaver_query_info_request_t;

/**
 * @@brief xcb_screensaver_query_info_reply_t
 **/
typedef struct xcb_screensaver_query_info_reply_t {
    uint8_t      response_type;
    uint8_t      state;
    uint16_t     sequence;
    uint32_t     length;
    xcb_window_t saver_window;
    uint32_t     ms_until_server;
    uint32_t     ms_since_user_input;
    uint32_t     event_mask;
    uint8_t      kind;
    uint8_t      pad0[7];
} xcb_screensaver_query_info_reply_t;

/** Opcode for xcb_screensaver_select_input. */
#define XCB_SCREENSAVER_SELECT_INPUT 2

/**
 * @@brief xcb_screensaver_select_input_request_t
 **/
typedef struct xcb_screensaver_select_input_request_t {
    uint8_t        major_opcode;
    uint8_t        minor_opcode;
    uint16_t       length;
    xcb_drawable_t drawable;
    uint32_t       event_mask;
} xcb_screensaver_select_input_request_t;

/**
 * @@brief xcb_screensaver_set_attributes_value_list_t
 **/
typedef struct xcb_screensaver_set_attributes_value_list_t {
    xcb_pixmap_t   background_pixmap;
    uint32_t       background_pixel;
    xcb_pixmap_t   border_pixmap;
    uint32_t       border_pixel;
    uint32_t       bit_gravity;
    uint32_t       win_gravity;
    uint32_t       backing_store;
    uint32_t       backing_planes;
    uint32_t       backing_pixel;
    xcb_bool32_t   override_redirect;
    xcb_bool32_t   save_under;
    uint32_t       event_mask;
    uint32_t       do_not_propogate_mask;
    xcb_colormap_t colormap;
    xcb_cursor_t   cursor;
} xcb_screensaver_set_attributes_value_list_t;

/** Opcode for xcb_screensaver_set_attributes. */
#define XCB_SCREENSAVER_SET_ATTRIBUTES 3

/**
 * @@brief xcb_screensaver_set_attributes_request_t
 **/
typedef struct xcb_screensaver_set_attributes_request_t {
    uint8_t        major_opcode;
    uint8_t        minor_opcode;
    uint16_t       length;
    xcb_drawable_t drawable;
    int16_t        x;
    int16_t        y;
    uint16_t       width;
    uint16_t       height;
    uint16_t       border_width;
    uint8_t        _class;
    uint8_t        depth;
    xcb_visualid_t visual;
    uint32_t       value_mask;
} xcb_screensaver_set_attributes_request_t;

/** Opcode for xcb_screensaver_unset_attributes. */
#define XCB_SCREENSAVER_UNSET_ATTRIBUTES 4

/**
 * @@brief xcb_screensaver_unset_attributes_request_t
 **/
typedef struct xcb_screensaver_unset_attributes_request_t {
    uint8_t        major_opcode;
    uint8_t        minor_opcode;
    uint16_t       length;
    xcb_drawable_t drawable;
} xcb_screensaver_unset_attributes_request_t;

/** Opcode for xcb_screensaver_suspend. */
#define XCB_SCREENSAVER_SUSPEND 5

/**
 * @@brief xcb_screensaver_suspend_request_t
 **/
typedef struct xcb_screensaver_suspend_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint8_t  suspend;
    uint8_t  pad0[3];
} xcb_screensaver_suspend_request_t;

/** Opcode for xcb_screensaver_notify. */
#define XCB_SCREENSAVER_NOTIFY 0

/**
 * @@brief xcb_screensaver_notify_event_t
 **/
typedef struct xcb_screensaver_notify_event_t {
    uint8_t         response_type;
    uint8_t         state;
    uint16_t        sequence;
    xcb_timestamp_t time;
    xcb_window_t    root;
    xcb_window_t    window;
    uint8_t         kind;
    uint8_t         forced;
    uint8_t         pad0[14];
} xcb_screensaver_notify_event_t;

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_screensaver_query_version_cookie_t
xcb_screensaver_query_version (xcb_connection_t *c,
                               uint8_t           client_major_version,
                               uint8_t           client_minor_version);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_screensaver_query_version_cookie_t
xcb_screensaver_query_version_unchecked (xcb_connection_t *c,
                                         uint8_t           client_major_version,
                                         uint8_t           client_minor_version);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_screensaver_query_version_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_screensaver_query_version_reply_t *
xcb_screensaver_query_version_reply (xcb_connection_t                        *c,
                                     xcb_screensaver_query_version_cookie_t   cookie  /**< */,
                                     xcb_generic_error_t                    **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_screensaver_query_info_cookie_t
xcb_screensaver_query_info (xcb_connection_t *c,
                            xcb_drawable_t    drawable);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_screensaver_query_info_cookie_t
xcb_screensaver_query_info_unchecked (xcb_connection_t *c,
                                      xcb_drawable_t    drawable);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_screensaver_query_info_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_screensaver_query_info_reply_t *
xcb_screensaver_query_info_reply (xcb_connection_t                     *c,
                                  xcb_screensaver_query_info_cookie_t   cookie  /**< */,
                                  xcb_generic_error_t                 **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_screensaver_select_input_checked (xcb_connection_t *c,
                                      xcb_drawable_t    drawable,
                                      uint32_t          event_mask);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_screensaver_select_input (xcb_connection_t *c,
                              xcb_drawable_t    drawable,
                              uint32_t          event_mask);

int
xcb_screensaver_set_attributes_value_list_serialize (void                                              **_buffer,
                                                     uint32_t                                            value_mask,
                                                     const xcb_screensaver_set_attributes_value_list_t  *_aux);

int
xcb_screensaver_set_attributes_value_list_unpack (const void                                   *_buffer,
                                                  uint32_t                                      value_mask,
                                                  xcb_screensaver_set_attributes_value_list_t  *_aux);

int
xcb_screensaver_set_attributes_value_list_sizeof (const void  *_buffer,
                                                  uint32_t     value_mask);

int
xcb_screensaver_set_attributes_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_screensaver_set_attributes_checked (xcb_connection_t *c,
                                        xcb_drawable_t    drawable,
                                        int16_t           x,
                                        int16_t           y,
                                        uint16_t          width,
                                        uint16_t          height,
                                        uint16_t          border_width,
                                        uint8_t           _class,
                                        uint8_t           depth,
                                        xcb_visualid_t    visual,
                                        uint32_t          value_mask,
                                        const void       *value_list);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_screensaver_set_attributes (xcb_connection_t *c,
                                xcb_drawable_t    drawable,
                                int16_t           x,
                                int16_t           y,
                                uint16_t          width,
                                uint16_t          height,
                                uint16_t          border_width,
                                uint8_t           _class,
                                uint8_t           depth,
                                xcb_visualid_t    visual,
                                uint32_t          value_mask,
                                const void       *value_list);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_screensaver_set_attributes_aux_checked (xcb_connection_t                                  *c,
                                            xcb_drawable_t                                     drawable,
                                            int16_t                                            x,
                                            int16_t                                            y,
                                            uint16_t                                           width,
                                            uint16_t                                           height,
                                            uint16_t                                           border_width,
                                            uint8_t                                            _class,
                                            uint8_t                                            depth,
                                            xcb_visualid_t                                     visual,
                                            uint32_t                                           value_mask,
                                            const xcb_screensaver_set_attributes_value_list_t *value_list);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_screensaver_set_attributes_aux (xcb_connection_t                                  *c,
                                    xcb_drawable_t                                     drawable,
                                    int16_t                                            x,
                                    int16_t                                            y,
                                    uint16_t                                           width,
                                    uint16_t                                           height,
                                    uint16_t                                           border_width,
                                    uint8_t                                            _class,
                                    uint8_t                                            depth,
                                    xcb_visualid_t                                     visual,
                                    uint32_t                                           value_mask,
                                    const xcb_screensaver_set_attributes_value_list_t *value_list);

void *
xcb_screensaver_set_attributes_value_list (const xcb_screensaver_set_attributes_request_t *R);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_screensaver_unset_attributes_checked (xcb_connection_t *c,
                                          xcb_drawable_t    drawable);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_screensaver_unset_attributes (xcb_connection_t *c,
                                  xcb_drawable_t    drawable);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_screensaver_suspend_checked (xcb_connection_t *c,
                                 uint8_t           suspend);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_screensaver_suspend (xcb_connection_t *c,
                         uint8_t           suspend);


#ifdef __cplusplus
}
#endif

#endif

/**
 * @@}
 */
@


1.4
log
@Update to libxcb and xcb-proto 1.11.
Tested on a bulk ports build by naddy@@.
Lots of churn due to white-space and comments changes in generated code.
@
text
@d49 1
a49 1
    unsigned int sequence; /**<  */
d59 6
a64 6
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint8_t  client_major_version; /**<  */
    uint8_t  client_minor_version; /**<  */
    uint8_t  pad0[2]; /**<  */
d71 7
a77 7
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint16_t server_major_version; /**<  */
    uint16_t server_minor_version; /**<  */
    uint8_t  pad1[20]; /**<  */
d84 1
a84 1
    unsigned int sequence; /**<  */
d94 4
a97 4
    uint8_t        major_opcode; /**<  */
    uint8_t        minor_opcode; /**<  */
    uint16_t       length; /**<  */
    xcb_drawable_t drawable; /**<  */
d104 10
a113 10
    uint8_t      response_type; /**<  */
    uint8_t      state; /**<  */
    uint16_t     sequence; /**<  */
    uint32_t     length; /**<  */
    xcb_window_t saver_window; /**<  */
    uint32_t     ms_until_server; /**<  */
    uint32_t     ms_since_user_input; /**<  */
    uint32_t     event_mask; /**<  */
    uint8_t      kind; /**<  */
    uint8_t      pad0[7]; /**<  */
d123 5
a127 5
    uint8_t        major_opcode; /**<  */
    uint8_t        minor_opcode; /**<  */
    uint16_t       length; /**<  */
    xcb_drawable_t drawable; /**<  */
    uint32_t       event_mask; /**<  */
d130 21
d158 13
a170 13
    uint8_t        major_opcode; /**<  */
    uint8_t        minor_opcode; /**<  */
    uint16_t       length; /**<  */
    xcb_drawable_t drawable; /**<  */
    int16_t        x; /**<  */
    int16_t        y; /**<  */
    uint16_t       width; /**<  */
    uint16_t       height; /**<  */
    uint16_t       border_width; /**<  */
    uint8_t        _class; /**<  */
    uint8_t        depth; /**<  */
    xcb_visualid_t visual; /**<  */
    uint32_t       value_mask; /**<  */
d180 4
a183 4
    uint8_t        major_opcode; /**<  */
    uint8_t        minor_opcode; /**<  */
    uint16_t       length; /**<  */
    xcb_drawable_t drawable; /**<  */
d193 5
a197 5
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint8_t  suspend; /**<  */
    uint8_t  pad0[3]; /**<  */
d207 9
a215 9
    uint8_t         response_type; /**<  */
    uint8_t         state; /**<  */
    uint16_t        sequence; /**<  */
    xcb_timestamp_t time; /**<  */
    xcb_window_t    root; /**<  */
    xcb_window_t    window; /**<  */
    uint8_t         kind; /**<  */
    uint8_t         forced; /**<  */
    uint8_t         pad0[14]; /**<  */
d227 3
a229 3
xcb_screensaver_query_version (xcb_connection_t *c  /**< */,
                               uint8_t           client_major_version  /**< */,
                               uint8_t           client_minor_version  /**< */);
d243 3
a245 3
xcb_screensaver_query_version_unchecked (xcb_connection_t *c  /**< */,
                                         uint8_t           client_major_version  /**< */,
                                         uint8_t           client_minor_version  /**< */);
d262 1
a262 1
xcb_screensaver_query_version_reply (xcb_connection_t                        *c  /**< */,
d264 1
a264 1
                                     xcb_generic_error_t                    **e  /**< */);
d275 2
a276 2
xcb_screensaver_query_info (xcb_connection_t *c  /**< */,
                            xcb_drawable_t    drawable  /**< */);
d290 2
a291 2
xcb_screensaver_query_info_unchecked (xcb_connection_t *c  /**< */,
                                      xcb_drawable_t    drawable  /**< */);
d308 1
a308 1
xcb_screensaver_query_info_reply (xcb_connection_t                     *c  /**< */,
d310 1
a310 1
                                  xcb_generic_error_t                 **e  /**< */);
d324 3
a326 3
xcb_screensaver_select_input_checked (xcb_connection_t *c  /**< */,
                                      xcb_drawable_t    drawable  /**< */,
                                      uint32_t          event_mask  /**< */);
d337 17
a353 3
xcb_screensaver_select_input (xcb_connection_t *c  /**< */,
                              xcb_drawable_t    drawable  /**< */,
                              uint32_t          event_mask  /**< */);
d356 1
a356 1
xcb_screensaver_set_attributes_sizeof (const void  *_buffer  /**< */);
d370 12
a381 12
xcb_screensaver_set_attributes_checked (xcb_connection_t *c  /**< */,
                                        xcb_drawable_t    drawable  /**< */,
                                        int16_t           x  /**< */,
                                        int16_t           y  /**< */,
                                        uint16_t          width  /**< */,
                                        uint16_t          height  /**< */,
                                        uint16_t          border_width  /**< */,
                                        uint8_t           _class  /**< */,
                                        uint8_t           depth  /**< */,
                                        xcb_visualid_t    visual  /**< */,
                                        uint32_t          value_mask  /**< */,
                                        const uint32_t   *value_list  /**< */);
d392 62
a453 12
xcb_screensaver_set_attributes (xcb_connection_t *c  /**< */,
                                xcb_drawable_t    drawable  /**< */,
                                int16_t           x  /**< */,
                                int16_t           y  /**< */,
                                uint16_t          width  /**< */,
                                uint16_t          height  /**< */,
                                uint16_t          border_width  /**< */,
                                uint8_t           _class  /**< */,
                                uint8_t           depth  /**< */,
                                xcb_visualid_t    visual  /**< */,
                                uint32_t          value_mask  /**< */,
                                const uint32_t   *value_list  /**< */);
d467 2
a468 2
xcb_screensaver_unset_attributes_checked (xcb_connection_t *c  /**< */,
                                          xcb_drawable_t    drawable  /**< */);
d479 2
a480 2
xcb_screensaver_unset_attributes (xcb_connection_t *c  /**< */,
                                  xcb_drawable_t    drawable  /**< */);
d494 2
a495 2
xcb_screensaver_suspend_checked (xcb_connection_t *c  /**< */,
                                 uint8_t           suspend  /**< */);
d506 2
a507 2
xcb_screensaver_suspend (xcb_connection_t *c  /**< */,
                         uint8_t           suspend  /**< */);
@


1.3
log
@Update build system and generated files for libxcb 1.10.
@
text
@d24 1
a24 1
  
d203 1
a203 1
 * 
a204 12

/*****************************************************************************
 **
 ** xcb_screensaver_query_version_cookie_t xcb_screensaver_query_version
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           client_major_version
 ** @@param uint8_t           client_minor_version
 ** @@returns xcb_screensaver_query_version_cookie_t
 **
 *****************************************************************************/
 
d216 1
a216 1
 * 
a220 12

/*****************************************************************************
 **
 ** xcb_screensaver_query_version_cookie_t xcb_screensaver_query_version_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           client_major_version
 ** @@param uint8_t           client_minor_version
 ** @@returns xcb_screensaver_query_version_cookie_t
 **
 *****************************************************************************/
 
d233 1
a233 1
 * 
a239 12

/*****************************************************************************
 **
 ** xcb_screensaver_query_version_reply_t * xcb_screensaver_query_version_reply
 ** 
 ** @@param xcb_connection_t                        *c
 ** @@param xcb_screensaver_query_version_cookie_t   cookie
 ** @@param xcb_generic_error_t                    **e
 ** @@returns xcb_screensaver_query_version_reply_t *
 **
 *****************************************************************************/
 
d251 1
a251 1
 * 
a252 11

/*****************************************************************************
 **
 ** xcb_screensaver_query_info_cookie_t xcb_screensaver_query_info
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_drawable_t    drawable
 ** @@returns xcb_screensaver_query_info_cookie_t
 **
 *****************************************************************************/
 
d263 1
a263 1
 * 
a267 11

/*****************************************************************************
 **
 ** xcb_screensaver_query_info_cookie_t xcb_screensaver_query_info_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_drawable_t    drawable
 ** @@returns xcb_screensaver_query_info_cookie_t
 **
 *****************************************************************************/
 
d279 1
a279 1
 * 
a285 12

/*****************************************************************************
 **
 ** xcb_screensaver_query_info_reply_t * xcb_screensaver_query_info_reply
 ** 
 ** @@param xcb_connection_t                     *c
 ** @@param xcb_screensaver_query_info_cookie_t   cookie
 ** @@param xcb_generic_error_t                 **e
 ** @@returns xcb_screensaver_query_info_reply_t *
 **
 *****************************************************************************/
 
d297 1
a297 1
 * 
a301 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_screensaver_select_input_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_drawable_t    drawable
 ** @@param uint32_t          event_mask
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d313 1
a313 1
 * 
a314 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_screensaver_select_input
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_drawable_t    drawable
 ** @@param uint32_t          event_mask
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d329 1
a329 1
 * 
a333 21

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_screensaver_set_attributes_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_drawable_t    drawable
 ** @@param int16_t           x
 ** @@param int16_t           y
 ** @@param uint16_t          width
 ** @@param uint16_t          height
 ** @@param uint16_t          border_width
 ** @@param uint8_t           _class
 ** @@param uint8_t           depth
 ** @@param xcb_visualid_t    visual
 ** @@param uint32_t          value_mask
 ** @@param const uint32_t   *value_list
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d354 1
a354 1
 * 
a355 21

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_screensaver_set_attributes
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_drawable_t    drawable
 ** @@param int16_t           x
 ** @@param int16_t           y
 ** @@param uint16_t          width
 ** @@param uint16_t          height
 ** @@param uint16_t          border_width
 ** @@param uint8_t           _class
 ** @@param uint8_t           depth
 ** @@param xcb_visualid_t    visual
 ** @@param uint32_t          value_mask
 ** @@param const uint32_t   *value_list
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d376 1
a376 1
 * 
a380 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_screensaver_unset_attributes_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_drawable_t    drawable
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d391 1
a391 1
 * 
a392 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_screensaver_unset_attributes
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_drawable_t    drawable
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d403 1
a403 1
 * 
a407 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_screensaver_suspend_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           suspend
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d418 1
a418 1
 * 
a419 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_screensaver_suspend
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           suspend
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
@


1.2
log
@Update to libxcb 1.9.0.
tested by ajacoutot@@ and naddy@@ on a full ports build
@
text
@d28 3
a30 3
    XCB_SCREENSAVER_KIND_BLANKED,
    XCB_SCREENSAVER_KIND_INTERNAL,
    XCB_SCREENSAVER_KIND_EXTERNAL
d39 4
a42 4
    XCB_SCREENSAVER_STATE_OFF,
    XCB_SCREENSAVER_STATE_ON,
    XCB_SCREENSAVER_STATE_CYCLE,
    XCB_SCREENSAVER_STATE_DISABLED
d187 1
a187 1
    uint8_t         code; /**<  */
a188 3
    uint8_t         state; /**<  */
    uint8_t         pad0; /**<  */
    uint16_t        sequence_number; /**<  */
d194 1
a194 1
    uint8_t         pad1[14]; /**<  */
@


1.1
log
@Initial revision
@
text
@d201 1
a201 1
 * Delivers a request to the X server
d226 1
a226 1
 * Delivers a request to the X server
d285 1
a285 1
 * Delivers a request to the X server
d308 1
a308 1
 * Delivers a request to the X server
d365 1
a365 1
 * Delivers a request to the X server
d393 1
a393 1
 * Delivers a request to the X server
d417 3
d421 1
a421 1
 * Delivers a request to the X server
d467 1
a467 1
 * Delivers a request to the X server
d510 1
a510 1
 * Delivers a request to the X server
d536 1
a536 1
 * Delivers a request to the X server
d559 1
a559 1
 * Delivers a request to the X server
d585 1
a585 1
 * Delivers a request to the X server
@


1.1.1.1
log
@Xenocara build infrastructure for libxcb.

This includes a set of pre-generated sources files in src/ so that
python and xslt are not needed to build.
@
text
@@
