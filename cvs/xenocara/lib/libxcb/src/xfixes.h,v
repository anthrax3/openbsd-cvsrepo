head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.8
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.2
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.14
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.12
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	v1_2:1.1.1.1
	XENOCARA:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2016.09.02.10.09.44;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	mKDGsTNpiR2zRHYQ;

1.5
date	2015.01.26.21.32.11;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	01TEvO4uNHLqFv7N;

1.4
date	2014.04.14.19.20.18;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2012.11.22.20.31.32;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.31.16.43.12;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.22.16.09.52;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.05.22.16.09.52;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xcb-proto/libxcb 1.12. "Just commit it" naddy@@
@
text
@/*
 * This file generated automatically from xfixes.xml by c_client.py.
 * Edit at your peril.
 */

/**
 * @@defgroup XCB_XFixes_API XCB XFixes API
 * @@brief XFixes XCB Protocol Implementation.
 * @@{
 **/

#ifndef __XFIXES_H
#define __XFIXES_H

#include "xcb.h"
#include "xproto.h"
#include "render.h"
#include "shape.h"

#ifdef __cplusplus
extern "C" {
#endif

#define XCB_XFIXES_MAJOR_VERSION 5
#define XCB_XFIXES_MINOR_VERSION 0

extern xcb_extension_t xcb_xfixes_id;

/**
 * @@brief xcb_xfixes_query_version_cookie_t
 **/
typedef struct xcb_xfixes_query_version_cookie_t {
    unsigned int sequence;
} xcb_xfixes_query_version_cookie_t;

/** Opcode for xcb_xfixes_query_version. */
#define XCB_XFIXES_QUERY_VERSION 0

/**
 * @@brief xcb_xfixes_query_version_request_t
 **/
typedef struct xcb_xfixes_query_version_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint32_t client_major_version;
    uint32_t client_minor_version;
} xcb_xfixes_query_version_request_t;

/**
 * @@brief xcb_xfixes_query_version_reply_t
 **/
typedef struct xcb_xfixes_query_version_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t major_version;
    uint32_t minor_version;
    uint8_t  pad1[16];
} xcb_xfixes_query_version_reply_t;

typedef enum xcb_xfixes_save_set_mode_t {
    XCB_XFIXES_SAVE_SET_MODE_INSERT = 0,
    XCB_XFIXES_SAVE_SET_MODE_DELETE = 1
} xcb_xfixes_save_set_mode_t;

typedef enum xcb_xfixes_save_set_target_t {
    XCB_XFIXES_SAVE_SET_TARGET_NEAREST = 0,
    XCB_XFIXES_SAVE_SET_TARGET_ROOT = 1
} xcb_xfixes_save_set_target_t;

typedef enum xcb_xfixes_save_set_mapping_t {
    XCB_XFIXES_SAVE_SET_MAPPING_MAP = 0,
    XCB_XFIXES_SAVE_SET_MAPPING_UNMAP = 1
} xcb_xfixes_save_set_mapping_t;

/** Opcode for xcb_xfixes_change_save_set. */
#define XCB_XFIXES_CHANGE_SAVE_SET 1

/**
 * @@brief xcb_xfixes_change_save_set_request_t
 **/
typedef struct xcb_xfixes_change_save_set_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    uint8_t      mode;
    uint8_t      target;
    uint8_t      map;
    uint8_t      pad0;
    xcb_window_t window;
} xcb_xfixes_change_save_set_request_t;

typedef enum xcb_xfixes_selection_event_t {
    XCB_XFIXES_SELECTION_EVENT_SET_SELECTION_OWNER = 0,
    XCB_XFIXES_SELECTION_EVENT_SELECTION_WINDOW_DESTROY = 1,
    XCB_XFIXES_SELECTION_EVENT_SELECTION_CLIENT_CLOSE = 2
} xcb_xfixes_selection_event_t;

typedef enum xcb_xfixes_selection_event_mask_t {
    XCB_XFIXES_SELECTION_EVENT_MASK_SET_SELECTION_OWNER = 1,
    XCB_XFIXES_SELECTION_EVENT_MASK_SELECTION_WINDOW_DESTROY = 2,
    XCB_XFIXES_SELECTION_EVENT_MASK_SELECTION_CLIENT_CLOSE = 4
} xcb_xfixes_selection_event_mask_t;

/** Opcode for xcb_xfixes_selection_notify. */
#define XCB_XFIXES_SELECTION_NOTIFY 0

/**
 * @@brief xcb_xfixes_selection_notify_event_t
 **/
typedef struct xcb_xfixes_selection_notify_event_t {
    uint8_t         response_type;
    uint8_t         subtype;
    uint16_t        sequence;
    xcb_window_t    window;
    xcb_window_t    owner;
    xcb_atom_t      selection;
    xcb_timestamp_t timestamp;
    xcb_timestamp_t selection_timestamp;
    uint8_t         pad0[8];
} xcb_xfixes_selection_notify_event_t;

/** Opcode for xcb_xfixes_select_selection_input. */
#define XCB_XFIXES_SELECT_SELECTION_INPUT 2

/**
 * @@brief xcb_xfixes_select_selection_input_request_t
 **/
typedef struct xcb_xfixes_select_selection_input_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
    xcb_atom_t   selection;
    uint32_t     event_mask;
} xcb_xfixes_select_selection_input_request_t;

typedef enum xcb_xfixes_cursor_notify_t {
    XCB_XFIXES_CURSOR_NOTIFY_DISPLAY_CURSOR = 0
} xcb_xfixes_cursor_notify_t;

typedef enum xcb_xfixes_cursor_notify_mask_t {
    XCB_XFIXES_CURSOR_NOTIFY_MASK_DISPLAY_CURSOR = 1
} xcb_xfixes_cursor_notify_mask_t;

/** Opcode for xcb_xfixes_cursor_notify. */
#define XCB_XFIXES_CURSOR_NOTIFY 1

/**
 * @@brief xcb_xfixes_cursor_notify_event_t
 **/
typedef struct xcb_xfixes_cursor_notify_event_t {
    uint8_t         response_type;
    uint8_t         subtype;
    uint16_t        sequence;
    xcb_window_t    window;
    uint32_t        cursor_serial;
    xcb_timestamp_t timestamp;
    xcb_atom_t      name;
    uint8_t         pad0[12];
} xcb_xfixes_cursor_notify_event_t;

/** Opcode for xcb_xfixes_select_cursor_input. */
#define XCB_XFIXES_SELECT_CURSOR_INPUT 3

/**
 * @@brief xcb_xfixes_select_cursor_input_request_t
 **/
typedef struct xcb_xfixes_select_cursor_input_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
    uint32_t     event_mask;
} xcb_xfixes_select_cursor_input_request_t;

/**
 * @@brief xcb_xfixes_get_cursor_image_cookie_t
 **/
typedef struct xcb_xfixes_get_cursor_image_cookie_t {
    unsigned int sequence;
} xcb_xfixes_get_cursor_image_cookie_t;

/** Opcode for xcb_xfixes_get_cursor_image. */
#define XCB_XFIXES_GET_CURSOR_IMAGE 4

/**
 * @@brief xcb_xfixes_get_cursor_image_request_t
 **/
typedef struct xcb_xfixes_get_cursor_image_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
} xcb_xfixes_get_cursor_image_request_t;

/**
 * @@brief xcb_xfixes_get_cursor_image_reply_t
 **/
typedef struct xcb_xfixes_get_cursor_image_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    int16_t  x;
    int16_t  y;
    uint16_t width;
    uint16_t height;
    uint16_t xhot;
    uint16_t yhot;
    uint32_t cursor_serial;
    uint8_t  pad1[8];
} xcb_xfixes_get_cursor_image_reply_t;

typedef uint32_t xcb_xfixes_region_t;

/**
 * @@brief xcb_xfixes_region_iterator_t
 **/
typedef struct xcb_xfixes_region_iterator_t {
    xcb_xfixes_region_t *data;
    int                  rem;
    int                  index;
} xcb_xfixes_region_iterator_t;

/** Opcode for xcb_xfixes_bad_region. */
#define XCB_XFIXES_BAD_REGION 0

/**
 * @@brief xcb_xfixes_bad_region_error_t
 **/
typedef struct xcb_xfixes_bad_region_error_t {
    uint8_t  response_type;
    uint8_t  error_code;
    uint16_t sequence;
} xcb_xfixes_bad_region_error_t;

typedef enum xcb_xfixes_region_enum_t {
    XCB_XFIXES_REGION_NONE = 0
} xcb_xfixes_region_enum_t;

/** Opcode for xcb_xfixes_create_region. */
#define XCB_XFIXES_CREATE_REGION 5

/**
 * @@brief xcb_xfixes_create_region_request_t
 **/
typedef struct xcb_xfixes_create_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t region;
} xcb_xfixes_create_region_request_t;

/** Opcode for xcb_xfixes_create_region_from_bitmap. */
#define XCB_XFIXES_CREATE_REGION_FROM_BITMAP 6

/**
 * @@brief xcb_xfixes_create_region_from_bitmap_request_t
 **/
typedef struct xcb_xfixes_create_region_from_bitmap_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t region;
    xcb_pixmap_t        bitmap;
} xcb_xfixes_create_region_from_bitmap_request_t;

/** Opcode for xcb_xfixes_create_region_from_window. */
#define XCB_XFIXES_CREATE_REGION_FROM_WINDOW 7

/**
 * @@brief xcb_xfixes_create_region_from_window_request_t
 **/
typedef struct xcb_xfixes_create_region_from_window_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t region;
    xcb_window_t        window;
    xcb_shape_kind_t    kind;
    uint8_t             pad0[3];
} xcb_xfixes_create_region_from_window_request_t;

/** Opcode for xcb_xfixes_create_region_from_gc. */
#define XCB_XFIXES_CREATE_REGION_FROM_GC 8

/**
 * @@brief xcb_xfixes_create_region_from_gc_request_t
 **/
typedef struct xcb_xfixes_create_region_from_gc_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t region;
    xcb_gcontext_t      gc;
} xcb_xfixes_create_region_from_gc_request_t;

/** Opcode for xcb_xfixes_create_region_from_picture. */
#define XCB_XFIXES_CREATE_REGION_FROM_PICTURE 9

/**
 * @@brief xcb_xfixes_create_region_from_picture_request_t
 **/
typedef struct xcb_xfixes_create_region_from_picture_request_t {
    uint8_t              major_opcode;
    uint8_t              minor_opcode;
    uint16_t             length;
    xcb_xfixes_region_t  region;
    xcb_render_picture_t picture;
} xcb_xfixes_create_region_from_picture_request_t;

/** Opcode for xcb_xfixes_destroy_region. */
#define XCB_XFIXES_DESTROY_REGION 10

/**
 * @@brief xcb_xfixes_destroy_region_request_t
 **/
typedef struct xcb_xfixes_destroy_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t region;
} xcb_xfixes_destroy_region_request_t;

/** Opcode for xcb_xfixes_set_region. */
#define XCB_XFIXES_SET_REGION 11

/**
 * @@brief xcb_xfixes_set_region_request_t
 **/
typedef struct xcb_xfixes_set_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t region;
} xcb_xfixes_set_region_request_t;

/** Opcode for xcb_xfixes_copy_region. */
#define XCB_XFIXES_COPY_REGION 12

/**
 * @@brief xcb_xfixes_copy_region_request_t
 **/
typedef struct xcb_xfixes_copy_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t source;
    xcb_xfixes_region_t destination;
} xcb_xfixes_copy_region_request_t;

/** Opcode for xcb_xfixes_union_region. */
#define XCB_XFIXES_UNION_REGION 13

/**
 * @@brief xcb_xfixes_union_region_request_t
 **/
typedef struct xcb_xfixes_union_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t source1;
    xcb_xfixes_region_t source2;
    xcb_xfixes_region_t destination;
} xcb_xfixes_union_region_request_t;

/** Opcode for xcb_xfixes_intersect_region. */
#define XCB_XFIXES_INTERSECT_REGION 14

/**
 * @@brief xcb_xfixes_intersect_region_request_t
 **/
typedef struct xcb_xfixes_intersect_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t source1;
    xcb_xfixes_region_t source2;
    xcb_xfixes_region_t destination;
} xcb_xfixes_intersect_region_request_t;

/** Opcode for xcb_xfixes_subtract_region. */
#define XCB_XFIXES_SUBTRACT_REGION 15

/**
 * @@brief xcb_xfixes_subtract_region_request_t
 **/
typedef struct xcb_xfixes_subtract_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t source1;
    xcb_xfixes_region_t source2;
    xcb_xfixes_region_t destination;
} xcb_xfixes_subtract_region_request_t;

/** Opcode for xcb_xfixes_invert_region. */
#define XCB_XFIXES_INVERT_REGION 16

/**
 * @@brief xcb_xfixes_invert_region_request_t
 **/
typedef struct xcb_xfixes_invert_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t source;
    xcb_rectangle_t     bounds;
    xcb_xfixes_region_t destination;
} xcb_xfixes_invert_region_request_t;

/** Opcode for xcb_xfixes_translate_region. */
#define XCB_XFIXES_TRANSLATE_REGION 17

/**
 * @@brief xcb_xfixes_translate_region_request_t
 **/
typedef struct xcb_xfixes_translate_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t region;
    int16_t             dx;
    int16_t             dy;
} xcb_xfixes_translate_region_request_t;

/** Opcode for xcb_xfixes_region_extents. */
#define XCB_XFIXES_REGION_EXTENTS 18

/**
 * @@brief xcb_xfixes_region_extents_request_t
 **/
typedef struct xcb_xfixes_region_extents_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t source;
    xcb_xfixes_region_t destination;
} xcb_xfixes_region_extents_request_t;

/**
 * @@brief xcb_xfixes_fetch_region_cookie_t
 **/
typedef struct xcb_xfixes_fetch_region_cookie_t {
    unsigned int sequence;
} xcb_xfixes_fetch_region_cookie_t;

/** Opcode for xcb_xfixes_fetch_region. */
#define XCB_XFIXES_FETCH_REGION 19

/**
 * @@brief xcb_xfixes_fetch_region_request_t
 **/
typedef struct xcb_xfixes_fetch_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t region;
} xcb_xfixes_fetch_region_request_t;

/**
 * @@brief xcb_xfixes_fetch_region_reply_t
 **/
typedef struct xcb_xfixes_fetch_region_reply_t {
    uint8_t         response_type;
    uint8_t         pad0;
    uint16_t        sequence;
    uint32_t        length;
    xcb_rectangle_t extents;
    uint8_t         pad1[16];
} xcb_xfixes_fetch_region_reply_t;

/** Opcode for xcb_xfixes_set_gc_clip_region. */
#define XCB_XFIXES_SET_GC_CLIP_REGION 20

/**
 * @@brief xcb_xfixes_set_gc_clip_region_request_t
 **/
typedef struct xcb_xfixes_set_gc_clip_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_gcontext_t      gc;
    xcb_xfixes_region_t region;
    int16_t             x_origin;
    int16_t             y_origin;
} xcb_xfixes_set_gc_clip_region_request_t;

/** Opcode for xcb_xfixes_set_window_shape_region. */
#define XCB_XFIXES_SET_WINDOW_SHAPE_REGION 21

/**
 * @@brief xcb_xfixes_set_window_shape_region_request_t
 **/
typedef struct xcb_xfixes_set_window_shape_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_window_t        dest;
    xcb_shape_kind_t    dest_kind;
    uint8_t             pad0[3];
    int16_t             x_offset;
    int16_t             y_offset;
    xcb_xfixes_region_t region;
} xcb_xfixes_set_window_shape_region_request_t;

/** Opcode for xcb_xfixes_set_picture_clip_region. */
#define XCB_XFIXES_SET_PICTURE_CLIP_REGION 22

/**
 * @@brief xcb_xfixes_set_picture_clip_region_request_t
 **/
typedef struct xcb_xfixes_set_picture_clip_region_request_t {
    uint8_t              major_opcode;
    uint8_t              minor_opcode;
    uint16_t             length;
    xcb_render_picture_t picture;
    xcb_xfixes_region_t  region;
    int16_t              x_origin;
    int16_t              y_origin;
} xcb_xfixes_set_picture_clip_region_request_t;

/** Opcode for xcb_xfixes_set_cursor_name. */
#define XCB_XFIXES_SET_CURSOR_NAME 23

/**
 * @@brief xcb_xfixes_set_cursor_name_request_t
 **/
typedef struct xcb_xfixes_set_cursor_name_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_cursor_t cursor;
    uint16_t     nbytes;
    uint8_t      pad0[2];
} xcb_xfixes_set_cursor_name_request_t;

/**
 * @@brief xcb_xfixes_get_cursor_name_cookie_t
 **/
typedef struct xcb_xfixes_get_cursor_name_cookie_t {
    unsigned int sequence;
} xcb_xfixes_get_cursor_name_cookie_t;

/** Opcode for xcb_xfixes_get_cursor_name. */
#define XCB_XFIXES_GET_CURSOR_NAME 24

/**
 * @@brief xcb_xfixes_get_cursor_name_request_t
 **/
typedef struct xcb_xfixes_get_cursor_name_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_cursor_t cursor;
} xcb_xfixes_get_cursor_name_request_t;

/**
 * @@brief xcb_xfixes_get_cursor_name_reply_t
 **/
typedef struct xcb_xfixes_get_cursor_name_reply_t {
    uint8_t    response_type;
    uint8_t    pad0;
    uint16_t   sequence;
    uint32_t   length;
    xcb_atom_t atom;
    uint16_t   nbytes;
    uint8_t    pad1[18];
} xcb_xfixes_get_cursor_name_reply_t;

/**
 * @@brief xcb_xfixes_get_cursor_image_and_name_cookie_t
 **/
typedef struct xcb_xfixes_get_cursor_image_and_name_cookie_t {
    unsigned int sequence;
} xcb_xfixes_get_cursor_image_and_name_cookie_t;

/** Opcode for xcb_xfixes_get_cursor_image_and_name. */
#define XCB_XFIXES_GET_CURSOR_IMAGE_AND_NAME 25

/**
 * @@brief xcb_xfixes_get_cursor_image_and_name_request_t
 **/
typedef struct xcb_xfixes_get_cursor_image_and_name_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
} xcb_xfixes_get_cursor_image_and_name_request_t;

/**
 * @@brief xcb_xfixes_get_cursor_image_and_name_reply_t
 **/
typedef struct xcb_xfixes_get_cursor_image_and_name_reply_t {
    uint8_t    response_type;
    uint8_t    pad0;
    uint16_t   sequence;
    uint32_t   length;
    int16_t    x;
    int16_t    y;
    uint16_t   width;
    uint16_t   height;
    uint16_t   xhot;
    uint16_t   yhot;
    uint32_t   cursor_serial;
    xcb_atom_t cursor_atom;
    uint16_t   nbytes;
    uint8_t    pad1[2];
} xcb_xfixes_get_cursor_image_and_name_reply_t;

/** Opcode for xcb_xfixes_change_cursor. */
#define XCB_XFIXES_CHANGE_CURSOR 26

/**
 * @@brief xcb_xfixes_change_cursor_request_t
 **/
typedef struct xcb_xfixes_change_cursor_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_cursor_t source;
    xcb_cursor_t destination;
} xcb_xfixes_change_cursor_request_t;

/** Opcode for xcb_xfixes_change_cursor_by_name. */
#define XCB_XFIXES_CHANGE_CURSOR_BY_NAME 27

/**
 * @@brief xcb_xfixes_change_cursor_by_name_request_t
 **/
typedef struct xcb_xfixes_change_cursor_by_name_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_cursor_t src;
    uint16_t     nbytes;
    uint8_t      pad0[2];
} xcb_xfixes_change_cursor_by_name_request_t;

/** Opcode for xcb_xfixes_expand_region. */
#define XCB_XFIXES_EXPAND_REGION 28

/**
 * @@brief xcb_xfixes_expand_region_request_t
 **/
typedef struct xcb_xfixes_expand_region_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t source;
    xcb_xfixes_region_t destination;
    uint16_t            left;
    uint16_t            right;
    uint16_t            top;
    uint16_t            bottom;
} xcb_xfixes_expand_region_request_t;

/** Opcode for xcb_xfixes_hide_cursor. */
#define XCB_XFIXES_HIDE_CURSOR 29

/**
 * @@brief xcb_xfixes_hide_cursor_request_t
 **/
typedef struct xcb_xfixes_hide_cursor_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
} xcb_xfixes_hide_cursor_request_t;

/** Opcode for xcb_xfixes_show_cursor. */
#define XCB_XFIXES_SHOW_CURSOR 30

/**
 * @@brief xcb_xfixes_show_cursor_request_t
 **/
typedef struct xcb_xfixes_show_cursor_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
} xcb_xfixes_show_cursor_request_t;

typedef uint32_t xcb_xfixes_barrier_t;

/**
 * @@brief xcb_xfixes_barrier_iterator_t
 **/
typedef struct xcb_xfixes_barrier_iterator_t {
    xcb_xfixes_barrier_t *data;
    int                   rem;
    int                   index;
} xcb_xfixes_barrier_iterator_t;

typedef enum xcb_xfixes_barrier_directions_t {
    XCB_XFIXES_BARRIER_DIRECTIONS_POSITIVE_X = 1,
    XCB_XFIXES_BARRIER_DIRECTIONS_POSITIVE_Y = 2,
    XCB_XFIXES_BARRIER_DIRECTIONS_NEGATIVE_X = 4,
    XCB_XFIXES_BARRIER_DIRECTIONS_NEGATIVE_Y = 8
} xcb_xfixes_barrier_directions_t;

/** Opcode for xcb_xfixes_create_pointer_barrier. */
#define XCB_XFIXES_CREATE_POINTER_BARRIER 31

/**
 * @@brief xcb_xfixes_create_pointer_barrier_request_t
 **/
typedef struct xcb_xfixes_create_pointer_barrier_request_t {
    uint8_t              major_opcode;
    uint8_t              minor_opcode;
    uint16_t             length;
    xcb_xfixes_barrier_t barrier;
    xcb_window_t         window;
    uint16_t             x1;
    uint16_t             y1;
    uint16_t             x2;
    uint16_t             y2;
    uint32_t             directions;
    uint8_t              pad0[2];
    uint16_t             num_devices;
} xcb_xfixes_create_pointer_barrier_request_t;

/** Opcode for xcb_xfixes_delete_pointer_barrier. */
#define XCB_XFIXES_DELETE_POINTER_BARRIER 32

/**
 * @@brief xcb_xfixes_delete_pointer_barrier_request_t
 **/
typedef struct xcb_xfixes_delete_pointer_barrier_request_t {
    uint8_t              major_opcode;
    uint8_t              minor_opcode;
    uint16_t             length;
    xcb_xfixes_barrier_t barrier;
} xcb_xfixes_delete_pointer_barrier_request_t;

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_xfixes_query_version_cookie_t
xcb_xfixes_query_version (xcb_connection_t *c,
                          uint32_t          client_major_version,
                          uint32_t          client_minor_version);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_xfixes_query_version_cookie_t
xcb_xfixes_query_version_unchecked (xcb_connection_t *c,
                                    uint32_t          client_major_version,
                                    uint32_t          client_minor_version);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_xfixes_query_version_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_xfixes_query_version_reply_t *
xcb_xfixes_query_version_reply (xcb_connection_t                   *c,
                                xcb_xfixes_query_version_cookie_t   cookie  /**< */,
                                xcb_generic_error_t               **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_change_save_set_checked (xcb_connection_t *c,
                                    uint8_t           mode,
                                    uint8_t           target,
                                    uint8_t           map,
                                    xcb_window_t      window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_change_save_set (xcb_connection_t *c,
                            uint8_t           mode,
                            uint8_t           target,
                            uint8_t           map,
                            xcb_window_t      window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_select_selection_input_checked (xcb_connection_t *c,
                                           xcb_window_t      window,
                                           xcb_atom_t        selection,
                                           uint32_t          event_mask);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_select_selection_input (xcb_connection_t *c,
                                   xcb_window_t      window,
                                   xcb_atom_t        selection,
                                   uint32_t          event_mask);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_select_cursor_input_checked (xcb_connection_t *c,
                                        xcb_window_t      window,
                                        uint32_t          event_mask);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_select_cursor_input (xcb_connection_t *c,
                                xcb_window_t      window,
                                uint32_t          event_mask);

int
xcb_xfixes_get_cursor_image_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_xfixes_get_cursor_image_cookie_t
xcb_xfixes_get_cursor_image (xcb_connection_t *c);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_xfixes_get_cursor_image_cookie_t
xcb_xfixes_get_cursor_image_unchecked (xcb_connection_t *c);

uint32_t *
xcb_xfixes_get_cursor_image_cursor_image (const xcb_xfixes_get_cursor_image_reply_t *R);

int
xcb_xfixes_get_cursor_image_cursor_image_length (const xcb_xfixes_get_cursor_image_reply_t *R);

xcb_generic_iterator_t
xcb_xfixes_get_cursor_image_cursor_image_end (const xcb_xfixes_get_cursor_image_reply_t *R);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_xfixes_get_cursor_image_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_xfixes_get_cursor_image_reply_t *
xcb_xfixes_get_cursor_image_reply (xcb_connection_t                      *c,
                                   xcb_xfixes_get_cursor_image_cookie_t   cookie  /**< */,
                                   xcb_generic_error_t                  **e);

/**
 * Get the next element of the iterator
 * @@param i Pointer to a xcb_xfixes_region_iterator_t
 *
 * Get the next element in the iterator. The member rem is
 * decreased by one. The member data points to the next
 * element. The member index is increased by sizeof(xcb_xfixes_region_t)
 */
void
xcb_xfixes_region_next (xcb_xfixes_region_iterator_t *i);

/**
 * Return the iterator pointing to the last element
 * @@param i An xcb_xfixes_region_iterator_t
 * @@return  The iterator pointing to the last element
 *
 * Set the current element in the iterator to the last element.
 * The member rem is set to 0. The member data points to the
 * last element.
 */
xcb_generic_iterator_t
xcb_xfixes_region_end (xcb_xfixes_region_iterator_t i);

int
xcb_xfixes_create_region_sizeof (const void  *_buffer,
                                 uint32_t     rectangles_len);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_create_region_checked (xcb_connection_t      *c,
                                  xcb_xfixes_region_t    region,
                                  uint32_t               rectangles_len,
                                  const xcb_rectangle_t *rectangles);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_create_region (xcb_connection_t      *c,
                          xcb_xfixes_region_t    region,
                          uint32_t               rectangles_len,
                          const xcb_rectangle_t *rectangles);

xcb_rectangle_t *
xcb_xfixes_create_region_rectangles (const xcb_xfixes_create_region_request_t *R);

int
xcb_xfixes_create_region_rectangles_length (const xcb_xfixes_create_region_request_t *R);

xcb_rectangle_iterator_t
xcb_xfixes_create_region_rectangles_iterator (const xcb_xfixes_create_region_request_t *R);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_create_region_from_bitmap_checked (xcb_connection_t    *c,
                                              xcb_xfixes_region_t  region,
                                              xcb_pixmap_t         bitmap);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_create_region_from_bitmap (xcb_connection_t    *c,
                                      xcb_xfixes_region_t  region,
                                      xcb_pixmap_t         bitmap);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_create_region_from_window_checked (xcb_connection_t    *c,
                                              xcb_xfixes_region_t  region,
                                              xcb_window_t         window,
                                              xcb_shape_kind_t     kind);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_create_region_from_window (xcb_connection_t    *c,
                                      xcb_xfixes_region_t  region,
                                      xcb_window_t         window,
                                      xcb_shape_kind_t     kind);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_create_region_from_gc_checked (xcb_connection_t    *c,
                                          xcb_xfixes_region_t  region,
                                          xcb_gcontext_t       gc);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_create_region_from_gc (xcb_connection_t    *c,
                                  xcb_xfixes_region_t  region,
                                  xcb_gcontext_t       gc);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_create_region_from_picture_checked (xcb_connection_t     *c,
                                               xcb_xfixes_region_t   region,
                                               xcb_render_picture_t  picture);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_create_region_from_picture (xcb_connection_t     *c,
                                       xcb_xfixes_region_t   region,
                                       xcb_render_picture_t  picture);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_destroy_region_checked (xcb_connection_t    *c,
                                   xcb_xfixes_region_t  region);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_destroy_region (xcb_connection_t    *c,
                           xcb_xfixes_region_t  region);

int
xcb_xfixes_set_region_sizeof (const void  *_buffer,
                              uint32_t     rectangles_len);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_set_region_checked (xcb_connection_t      *c,
                               xcb_xfixes_region_t    region,
                               uint32_t               rectangles_len,
                               const xcb_rectangle_t *rectangles);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_set_region (xcb_connection_t      *c,
                       xcb_xfixes_region_t    region,
                       uint32_t               rectangles_len,
                       const xcb_rectangle_t *rectangles);

xcb_rectangle_t *
xcb_xfixes_set_region_rectangles (const xcb_xfixes_set_region_request_t *R);

int
xcb_xfixes_set_region_rectangles_length (const xcb_xfixes_set_region_request_t *R);

xcb_rectangle_iterator_t
xcb_xfixes_set_region_rectangles_iterator (const xcb_xfixes_set_region_request_t *R);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_copy_region_checked (xcb_connection_t    *c,
                                xcb_xfixes_region_t  source,
                                xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_copy_region (xcb_connection_t    *c,
                        xcb_xfixes_region_t  source,
                        xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_union_region_checked (xcb_connection_t    *c,
                                 xcb_xfixes_region_t  source1,
                                 xcb_xfixes_region_t  source2,
                                 xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_union_region (xcb_connection_t    *c,
                         xcb_xfixes_region_t  source1,
                         xcb_xfixes_region_t  source2,
                         xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_intersect_region_checked (xcb_connection_t    *c,
                                     xcb_xfixes_region_t  source1,
                                     xcb_xfixes_region_t  source2,
                                     xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_intersect_region (xcb_connection_t    *c,
                             xcb_xfixes_region_t  source1,
                             xcb_xfixes_region_t  source2,
                             xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_subtract_region_checked (xcb_connection_t    *c,
                                    xcb_xfixes_region_t  source1,
                                    xcb_xfixes_region_t  source2,
                                    xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_subtract_region (xcb_connection_t    *c,
                            xcb_xfixes_region_t  source1,
                            xcb_xfixes_region_t  source2,
                            xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_invert_region_checked (xcb_connection_t    *c,
                                  xcb_xfixes_region_t  source,
                                  xcb_rectangle_t      bounds,
                                  xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_invert_region (xcb_connection_t    *c,
                          xcb_xfixes_region_t  source,
                          xcb_rectangle_t      bounds,
                          xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_translate_region_checked (xcb_connection_t    *c,
                                     xcb_xfixes_region_t  region,
                                     int16_t              dx,
                                     int16_t              dy);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_translate_region (xcb_connection_t    *c,
                             xcb_xfixes_region_t  region,
                             int16_t              dx,
                             int16_t              dy);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_region_extents_checked (xcb_connection_t    *c,
                                   xcb_xfixes_region_t  source,
                                   xcb_xfixes_region_t  destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_region_extents (xcb_connection_t    *c,
                           xcb_xfixes_region_t  source,
                           xcb_xfixes_region_t  destination);

int
xcb_xfixes_fetch_region_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_xfixes_fetch_region_cookie_t
xcb_xfixes_fetch_region (xcb_connection_t    *c,
                         xcb_xfixes_region_t  region);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_xfixes_fetch_region_cookie_t
xcb_xfixes_fetch_region_unchecked (xcb_connection_t    *c,
                                   xcb_xfixes_region_t  region);

xcb_rectangle_t *
xcb_xfixes_fetch_region_rectangles (const xcb_xfixes_fetch_region_reply_t *R);

int
xcb_xfixes_fetch_region_rectangles_length (const xcb_xfixes_fetch_region_reply_t *R);

xcb_rectangle_iterator_t
xcb_xfixes_fetch_region_rectangles_iterator (const xcb_xfixes_fetch_region_reply_t *R);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_xfixes_fetch_region_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_xfixes_fetch_region_reply_t *
xcb_xfixes_fetch_region_reply (xcb_connection_t                  *c,
                               xcb_xfixes_fetch_region_cookie_t   cookie  /**< */,
                               xcb_generic_error_t              **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_set_gc_clip_region_checked (xcb_connection_t    *c,
                                       xcb_gcontext_t       gc,
                                       xcb_xfixes_region_t  region,
                                       int16_t              x_origin,
                                       int16_t              y_origin);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_set_gc_clip_region (xcb_connection_t    *c,
                               xcb_gcontext_t       gc,
                               xcb_xfixes_region_t  region,
                               int16_t              x_origin,
                               int16_t              y_origin);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_set_window_shape_region_checked (xcb_connection_t    *c,
                                            xcb_window_t         dest,
                                            xcb_shape_kind_t     dest_kind,
                                            int16_t              x_offset,
                                            int16_t              y_offset,
                                            xcb_xfixes_region_t  region);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_set_window_shape_region (xcb_connection_t    *c,
                                    xcb_window_t         dest,
                                    xcb_shape_kind_t     dest_kind,
                                    int16_t              x_offset,
                                    int16_t              y_offset,
                                    xcb_xfixes_region_t  region);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_set_picture_clip_region_checked (xcb_connection_t     *c,
                                            xcb_render_picture_t  picture,
                                            xcb_xfixes_region_t   region,
                                            int16_t               x_origin,
                                            int16_t               y_origin);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_set_picture_clip_region (xcb_connection_t     *c,
                                    xcb_render_picture_t  picture,
                                    xcb_xfixes_region_t   region,
                                    int16_t               x_origin,
                                    int16_t               y_origin);

int
xcb_xfixes_set_cursor_name_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_set_cursor_name_checked (xcb_connection_t *c,
                                    xcb_cursor_t      cursor,
                                    uint16_t          nbytes,
                                    const char       *name);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_set_cursor_name (xcb_connection_t *c,
                            xcb_cursor_t      cursor,
                            uint16_t          nbytes,
                            const char       *name);

char *
xcb_xfixes_set_cursor_name_name (const xcb_xfixes_set_cursor_name_request_t *R);

int
xcb_xfixes_set_cursor_name_name_length (const xcb_xfixes_set_cursor_name_request_t *R);

xcb_generic_iterator_t
xcb_xfixes_set_cursor_name_name_end (const xcb_xfixes_set_cursor_name_request_t *R);

int
xcb_xfixes_get_cursor_name_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_xfixes_get_cursor_name_cookie_t
xcb_xfixes_get_cursor_name (xcb_connection_t *c,
                            xcb_cursor_t      cursor);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_xfixes_get_cursor_name_cookie_t
xcb_xfixes_get_cursor_name_unchecked (xcb_connection_t *c,
                                      xcb_cursor_t      cursor);

char *
xcb_xfixes_get_cursor_name_name (const xcb_xfixes_get_cursor_name_reply_t *R);

int
xcb_xfixes_get_cursor_name_name_length (const xcb_xfixes_get_cursor_name_reply_t *R);

xcb_generic_iterator_t
xcb_xfixes_get_cursor_name_name_end (const xcb_xfixes_get_cursor_name_reply_t *R);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_xfixes_get_cursor_name_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_xfixes_get_cursor_name_reply_t *
xcb_xfixes_get_cursor_name_reply (xcb_connection_t                     *c,
                                  xcb_xfixes_get_cursor_name_cookie_t   cookie  /**< */,
                                  xcb_generic_error_t                 **e);

int
xcb_xfixes_get_cursor_image_and_name_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_xfixes_get_cursor_image_and_name_cookie_t
xcb_xfixes_get_cursor_image_and_name (xcb_connection_t *c);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_xfixes_get_cursor_image_and_name_cookie_t
xcb_xfixes_get_cursor_image_and_name_unchecked (xcb_connection_t *c);

uint32_t *
xcb_xfixes_get_cursor_image_and_name_cursor_image (const xcb_xfixes_get_cursor_image_and_name_reply_t *R);

int
xcb_xfixes_get_cursor_image_and_name_cursor_image_length (const xcb_xfixes_get_cursor_image_and_name_reply_t *R);

xcb_generic_iterator_t
xcb_xfixes_get_cursor_image_and_name_cursor_image_end (const xcb_xfixes_get_cursor_image_and_name_reply_t *R);

char *
xcb_xfixes_get_cursor_image_and_name_name (const xcb_xfixes_get_cursor_image_and_name_reply_t *R);

int
xcb_xfixes_get_cursor_image_and_name_name_length (const xcb_xfixes_get_cursor_image_and_name_reply_t *R);

xcb_generic_iterator_t
xcb_xfixes_get_cursor_image_and_name_name_end (const xcb_xfixes_get_cursor_image_and_name_reply_t *R);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_xfixes_get_cursor_image_and_name_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_xfixes_get_cursor_image_and_name_reply_t *
xcb_xfixes_get_cursor_image_and_name_reply (xcb_connection_t                               *c,
                                            xcb_xfixes_get_cursor_image_and_name_cookie_t   cookie  /**< */,
                                            xcb_generic_error_t                           **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_change_cursor_checked (xcb_connection_t *c,
                                  xcb_cursor_t      source,
                                  xcb_cursor_t      destination);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_change_cursor (xcb_connection_t *c,
                          xcb_cursor_t      source,
                          xcb_cursor_t      destination);

int
xcb_xfixes_change_cursor_by_name_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_change_cursor_by_name_checked (xcb_connection_t *c,
                                          xcb_cursor_t      src,
                                          uint16_t          nbytes,
                                          const char       *name);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_change_cursor_by_name (xcb_connection_t *c,
                                  xcb_cursor_t      src,
                                  uint16_t          nbytes,
                                  const char       *name);

char *
xcb_xfixes_change_cursor_by_name_name (const xcb_xfixes_change_cursor_by_name_request_t *R);

int
xcb_xfixes_change_cursor_by_name_name_length (const xcb_xfixes_change_cursor_by_name_request_t *R);

xcb_generic_iterator_t
xcb_xfixes_change_cursor_by_name_name_end (const xcb_xfixes_change_cursor_by_name_request_t *R);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_expand_region_checked (xcb_connection_t    *c,
                                  xcb_xfixes_region_t  source,
                                  xcb_xfixes_region_t  destination,
                                  uint16_t             left,
                                  uint16_t             right,
                                  uint16_t             top,
                                  uint16_t             bottom);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_expand_region (xcb_connection_t    *c,
                          xcb_xfixes_region_t  source,
                          xcb_xfixes_region_t  destination,
                          uint16_t             left,
                          uint16_t             right,
                          uint16_t             top,
                          uint16_t             bottom);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_hide_cursor_checked (xcb_connection_t *c,
                                xcb_window_t      window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_hide_cursor (xcb_connection_t *c,
                        xcb_window_t      window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_show_cursor_checked (xcb_connection_t *c,
                                xcb_window_t      window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_show_cursor (xcb_connection_t *c,
                        xcb_window_t      window);

/**
 * Get the next element of the iterator
 * @@param i Pointer to a xcb_xfixes_barrier_iterator_t
 *
 * Get the next element in the iterator. The member rem is
 * decreased by one. The member data points to the next
 * element. The member index is increased by sizeof(xcb_xfixes_barrier_t)
 */
void
xcb_xfixes_barrier_next (xcb_xfixes_barrier_iterator_t *i);

/**
 * Return the iterator pointing to the last element
 * @@param i An xcb_xfixes_barrier_iterator_t
 * @@return  The iterator pointing to the last element
 *
 * Set the current element in the iterator to the last element.
 * The member rem is set to 0. The member data points to the
 * last element.
 */
xcb_generic_iterator_t
xcb_xfixes_barrier_end (xcb_xfixes_barrier_iterator_t i);

int
xcb_xfixes_create_pointer_barrier_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_create_pointer_barrier_checked (xcb_connection_t     *c,
                                           xcb_xfixes_barrier_t  barrier,
                                           xcb_window_t          window,
                                           uint16_t              x1,
                                           uint16_t              y1,
                                           uint16_t              x2,
                                           uint16_t              y2,
                                           uint32_t              directions,
                                           uint16_t              num_devices,
                                           const uint16_t       *devices);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_create_pointer_barrier (xcb_connection_t     *c,
                                   xcb_xfixes_barrier_t  barrier,
                                   xcb_window_t          window,
                                   uint16_t              x1,
                                   uint16_t              y1,
                                   uint16_t              x2,
                                   uint16_t              y2,
                                   uint32_t              directions,
                                   uint16_t              num_devices,
                                   const uint16_t       *devices);

uint16_t *
xcb_xfixes_create_pointer_barrier_devices (const xcb_xfixes_create_pointer_barrier_request_t *R);

int
xcb_xfixes_create_pointer_barrier_devices_length (const xcb_xfixes_create_pointer_barrier_request_t *R);

xcb_generic_iterator_t
xcb_xfixes_create_pointer_barrier_devices_end (const xcb_xfixes_create_pointer_barrier_request_t *R);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_xfixes_delete_pointer_barrier_checked (xcb_connection_t     *c,
                                           xcb_xfixes_barrier_t  barrier);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_xfixes_delete_pointer_barrier (xcb_connection_t     *c,
                                   xcb_xfixes_barrier_t  barrier);


#ifdef __cplusplus
}
#endif

#endif

/**
 * @@}
 */
@


1.5
log
@Update to libxcb and xcb-proto 1.11.
Tested on a bulk ports build by naddy@@.
Lots of churn due to white-space and comments changes in generated code.
@
text
@d33 1
a33 1
    unsigned int sequence; /**<  */
d43 5
a47 5
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint32_t client_major_version; /**<  */
    uint32_t client_minor_version; /**<  */
d54 7
a60 7
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t major_version; /**<  */
    uint32_t minor_version; /**<  */
    uint8_t  pad1[16]; /**<  */
d85 8
a92 8
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    uint8_t      mode; /**<  */
    uint8_t      target; /**<  */
    uint8_t      map; /**<  */
    uint8_t      pad0; /**<  */
    xcb_window_t window; /**<  */
d114 9
a122 9
    uint8_t         response_type; /**<  */
    uint8_t         subtype; /**<  */
    uint16_t        sequence; /**<  */
    xcb_window_t    window; /**<  */
    xcb_window_t    owner; /**<  */
    xcb_atom_t      selection; /**<  */
    xcb_timestamp_t timestamp; /**<  */
    xcb_timestamp_t selection_timestamp; /**<  */
    uint8_t         pad0[8]; /**<  */
d132 6
a137 6
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
    xcb_atom_t   selection; /**<  */
    uint32_t     event_mask; /**<  */
d155 8
a162 8
    uint8_t         response_type; /**<  */
    uint8_t         subtype; /**<  */
    uint16_t        sequence; /**<  */
    xcb_window_t    window; /**<  */
    uint32_t        cursor_serial; /**<  */
    xcb_timestamp_t timestamp; /**<  */
    xcb_atom_t      name; /**<  */
    uint8_t         pad0[12]; /**<  */
d172 5
a176 5
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
    uint32_t     event_mask; /**<  */
d183 1
a183 1
    unsigned int sequence; /**<  */
d193 3
a195 3
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
d202 12
a213 12
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    int16_t  x; /**<  */
    int16_t  y; /**<  */
    uint16_t width; /**<  */
    uint16_t height; /**<  */
    uint16_t xhot; /**<  */
    uint16_t yhot; /**<  */
    uint32_t cursor_serial; /**<  */
    uint8_t  pad1[8]; /**<  */
d222 3
a224 3
    xcb_xfixes_region_t *data; /**<  */
    int                  rem; /**<  */
    int                  index; /**<  */
d234 3
a236 3
    uint8_t  response_type; /**<  */
    uint8_t  error_code; /**<  */
    uint16_t sequence; /**<  */
d250 4
a253 4
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t region; /**<  */
d263 5
a267 5
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t region; /**<  */
    xcb_pixmap_t        bitmap; /**<  */
d277 7
a283 7
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t region; /**<  */
    xcb_window_t        window; /**<  */
    xcb_shape_kind_t    kind; /**<  */
    uint8_t             pad0[3]; /**<  */
d293 5
a297 5
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t region; /**<  */
    xcb_gcontext_t      gc; /**<  */
d307 5
a311 5
    uint8_t              major_opcode; /**<  */
    uint8_t              minor_opcode; /**<  */
    uint16_t             length; /**<  */
    xcb_xfixes_region_t  region; /**<  */
    xcb_render_picture_t picture; /**<  */
d321 4
a324 4
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t region; /**<  */
d334 4
a337 4
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t region; /**<  */
d347 5
a351 5
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t source; /**<  */
    xcb_xfixes_region_t destination; /**<  */
d361 6
a366 6
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t source1; /**<  */
    xcb_xfixes_region_t source2; /**<  */
    xcb_xfixes_region_t destination; /**<  */
d376 6
a381 6
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t source1; /**<  */
    xcb_xfixes_region_t source2; /**<  */
    xcb_xfixes_region_t destination; /**<  */
d391 6
a396 6
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t source1; /**<  */
    xcb_xfixes_region_t source2; /**<  */
    xcb_xfixes_region_t destination; /**<  */
d406 6
a411 6
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t source; /**<  */
    xcb_rectangle_t     bounds; /**<  */
    xcb_xfixes_region_t destination; /**<  */
d421 6
a426 6
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t region; /**<  */
    int16_t             dx; /**<  */
    int16_t             dy; /**<  */
d436 5
a440 5
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t source; /**<  */
    xcb_xfixes_region_t destination; /**<  */
d447 1
a447 1
    unsigned int sequence; /**<  */
d457 4
a460 4
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t region; /**<  */
d467 6
a472 6
    uint8_t         response_type; /**<  */
    uint8_t         pad0; /**<  */
    uint16_t        sequence; /**<  */
    uint32_t        length; /**<  */
    xcb_rectangle_t extents; /**<  */
    uint8_t         pad1[16]; /**<  */
d482 7
a488 7
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_gcontext_t      gc; /**<  */
    xcb_xfixes_region_t region; /**<  */
    int16_t             x_origin; /**<  */
    int16_t             y_origin; /**<  */
d498 9
a506 9
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_window_t        dest; /**<  */
    xcb_shape_kind_t    dest_kind; /**<  */
    uint8_t             pad0[3]; /**<  */
    int16_t             x_offset; /**<  */
    int16_t             y_offset; /**<  */
    xcb_xfixes_region_t region; /**<  */
d516 7
a522 7
    uint8_t              major_opcode; /**<  */
    uint8_t              minor_opcode; /**<  */
    uint16_t             length; /**<  */
    xcb_render_picture_t picture; /**<  */
    xcb_xfixes_region_t  region; /**<  */
    int16_t              x_origin; /**<  */
    int16_t              y_origin; /**<  */
d532 6
a537 6
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_cursor_t cursor; /**<  */
    uint16_t     nbytes; /**<  */
    uint8_t      pad0[2]; /**<  */
d544 1
a544 1
    unsigned int sequence; /**<  */
d554 4
a557 4
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_cursor_t cursor; /**<  */
d564 7
a570 7
    uint8_t    response_type; /**<  */
    uint8_t    pad0; /**<  */
    uint16_t   sequence; /**<  */
    uint32_t   length; /**<  */
    xcb_atom_t atom; /**<  */
    uint16_t   nbytes; /**<  */
    uint8_t    pad1[18]; /**<  */
d577 1
a577 1
    unsigned int sequence; /**<  */
d587 3
a589 3
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
d596 14
a609 14
    uint8_t    response_type; /**<  */
    uint8_t    pad0; /**<  */
    uint16_t   sequence; /**<  */
    uint32_t   length; /**<  */
    int16_t    x; /**<  */
    int16_t    y; /**<  */
    uint16_t   width; /**<  */
    uint16_t   height; /**<  */
    uint16_t   xhot; /**<  */
    uint16_t   yhot; /**<  */
    uint32_t   cursor_serial; /**<  */
    xcb_atom_t cursor_atom; /**<  */
    uint16_t   nbytes; /**<  */
    uint8_t    pad1[2]; /**<  */
d619 5
a623 5
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_cursor_t source; /**<  */
    xcb_cursor_t destination; /**<  */
d633 6
a638 6
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_cursor_t src; /**<  */
    uint16_t     nbytes; /**<  */
    uint8_t      pad0[2]; /**<  */
d648 9
a656 9
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t source; /**<  */
    xcb_xfixes_region_t destination; /**<  */
    uint16_t            left; /**<  */
    uint16_t            right; /**<  */
    uint16_t            top; /**<  */
    uint16_t            bottom; /**<  */
d666 4
a669 4
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
d679 4
a682 4
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
d691 3
a693 3
    xcb_xfixes_barrier_t *data; /**<  */
    int                   rem; /**<  */
    int                   index; /**<  */
d710 12
a721 12
    uint8_t              major_opcode; /**<  */
    uint8_t              minor_opcode; /**<  */
    uint16_t             length; /**<  */
    xcb_xfixes_barrier_t barrier; /**<  */
    xcb_window_t         window; /**<  */
    uint16_t             x1; /**<  */
    uint16_t             y1; /**<  */
    uint16_t             x2; /**<  */
    uint16_t             y2; /**<  */
    uint32_t             directions; /**<  */
    uint8_t              pad0[2]; /**<  */
    uint16_t             num_devices; /**<  */
d731 4
a734 4
    uint8_t              major_opcode; /**<  */
    uint8_t              minor_opcode; /**<  */
    uint16_t             length; /**<  */
    xcb_xfixes_barrier_t barrier; /**<  */
d746 3
a748 3
xcb_xfixes_query_version (xcb_connection_t *c  /**< */,
                          uint32_t          client_major_version  /**< */,
                          uint32_t          client_minor_version  /**< */);
d762 3
a764 3
xcb_xfixes_query_version_unchecked (xcb_connection_t *c  /**< */,
                                    uint32_t          client_major_version  /**< */,
                                    uint32_t          client_minor_version  /**< */);
d781 1
a781 1
xcb_xfixes_query_version_reply (xcb_connection_t                   *c  /**< */,
d783 1
a783 1
                                xcb_generic_error_t               **e  /**< */);
d797 5
a801 5
xcb_xfixes_change_save_set_checked (xcb_connection_t *c  /**< */,
                                    uint8_t           mode  /**< */,
                                    uint8_t           target  /**< */,
                                    uint8_t           map  /**< */,
                                    xcb_window_t      window  /**< */);
d812 5
a816 5
xcb_xfixes_change_save_set (xcb_connection_t *c  /**< */,
                            uint8_t           mode  /**< */,
                            uint8_t           target  /**< */,
                            uint8_t           map  /**< */,
                            xcb_window_t      window  /**< */);
d830 4
a833 4
xcb_xfixes_select_selection_input_checked (xcb_connection_t *c  /**< */,
                                           xcb_window_t      window  /**< */,
                                           xcb_atom_t        selection  /**< */,
                                           uint32_t          event_mask  /**< */);
d844 4
a847 4
xcb_xfixes_select_selection_input (xcb_connection_t *c  /**< */,
                                   xcb_window_t      window  /**< */,
                                   xcb_atom_t        selection  /**< */,
                                   uint32_t          event_mask  /**< */);
d861 3
a863 3
xcb_xfixes_select_cursor_input_checked (xcb_connection_t *c  /**< */,
                                        xcb_window_t      window  /**< */,
                                        uint32_t          event_mask  /**< */);
d874 3
a876 3
xcb_xfixes_select_cursor_input (xcb_connection_t *c  /**< */,
                                xcb_window_t      window  /**< */,
                                uint32_t          event_mask  /**< */);
d879 1
a879 1
xcb_xfixes_get_cursor_image_sizeof (const void  *_buffer  /**< */);
d890 1
a890 1
xcb_xfixes_get_cursor_image (xcb_connection_t *c  /**< */);
d904 1
a904 1
xcb_xfixes_get_cursor_image_unchecked (xcb_connection_t *c  /**< */);
d907 1
a907 1
xcb_xfixes_get_cursor_image_cursor_image (const xcb_xfixes_get_cursor_image_reply_t *R  /**< */);
d910 1
a910 1
xcb_xfixes_get_cursor_image_cursor_image_length (const xcb_xfixes_get_cursor_image_reply_t *R  /**< */);
d913 1
a913 1
xcb_xfixes_get_cursor_image_cursor_image_end (const xcb_xfixes_get_cursor_image_reply_t *R  /**< */);
d930 1
a930 1
xcb_xfixes_get_cursor_image_reply (xcb_connection_t                      *c  /**< */,
d932 1
a932 1
                                   xcb_generic_error_t                  **e  /**< */);
d943 1
a943 1
xcb_xfixes_region_next (xcb_xfixes_region_iterator_t *i  /**< */);
d955 1
a955 1
xcb_xfixes_region_end (xcb_xfixes_region_iterator_t i  /**< */);
d958 2
a959 2
xcb_xfixes_create_region_sizeof (const void  *_buffer  /**< */,
                                 uint32_t     rectangles_len  /**< */);
d973 4
a976 4
xcb_xfixes_create_region_checked (xcb_connection_t      *c  /**< */,
                                  xcb_xfixes_region_t    region  /**< */,
                                  uint32_t               rectangles_len  /**< */,
                                  const xcb_rectangle_t *rectangles  /**< */);
d987 13
a999 4
xcb_xfixes_create_region (xcb_connection_t      *c  /**< */,
                          xcb_xfixes_region_t    region  /**< */,
                          uint32_t               rectangles_len  /**< */,
                          const xcb_rectangle_t *rectangles  /**< */);
d1013 3
a1015 3
xcb_xfixes_create_region_from_bitmap_checked (xcb_connection_t    *c  /**< */,
                                              xcb_xfixes_region_t  region  /**< */,
                                              xcb_pixmap_t         bitmap  /**< */);
d1026 3
a1028 3
xcb_xfixes_create_region_from_bitmap (xcb_connection_t    *c  /**< */,
                                      xcb_xfixes_region_t  region  /**< */,
                                      xcb_pixmap_t         bitmap  /**< */);
d1042 4
a1045 4
xcb_xfixes_create_region_from_window_checked (xcb_connection_t    *c  /**< */,
                                              xcb_xfixes_region_t  region  /**< */,
                                              xcb_window_t         window  /**< */,
                                              xcb_shape_kind_t     kind  /**< */);
d1056 4
a1059 4
xcb_xfixes_create_region_from_window (xcb_connection_t    *c  /**< */,
                                      xcb_xfixes_region_t  region  /**< */,
                                      xcb_window_t         window  /**< */,
                                      xcb_shape_kind_t     kind  /**< */);
d1073 3
a1075 3
xcb_xfixes_create_region_from_gc_checked (xcb_connection_t    *c  /**< */,
                                          xcb_xfixes_region_t  region  /**< */,
                                          xcb_gcontext_t       gc  /**< */);
d1086 3
a1088 3
xcb_xfixes_create_region_from_gc (xcb_connection_t    *c  /**< */,
                                  xcb_xfixes_region_t  region  /**< */,
                                  xcb_gcontext_t       gc  /**< */);
d1102 3
a1104 3
xcb_xfixes_create_region_from_picture_checked (xcb_connection_t     *c  /**< */,
                                               xcb_xfixes_region_t   region  /**< */,
                                               xcb_render_picture_t  picture  /**< */);
d1115 3
a1117 3
xcb_xfixes_create_region_from_picture (xcb_connection_t     *c  /**< */,
                                       xcb_xfixes_region_t   region  /**< */,
                                       xcb_render_picture_t  picture  /**< */);
d1131 2
a1132 2
xcb_xfixes_destroy_region_checked (xcb_connection_t    *c  /**< */,
                                   xcb_xfixes_region_t  region  /**< */);
d1143 2
a1144 2
xcb_xfixes_destroy_region (xcb_connection_t    *c  /**< */,
                           xcb_xfixes_region_t  region  /**< */);
d1147 2
a1148 2
xcb_xfixes_set_region_sizeof (const void  *_buffer  /**< */,
                              uint32_t     rectangles_len  /**< */);
d1162 4
a1165 4
xcb_xfixes_set_region_checked (xcb_connection_t      *c  /**< */,
                               xcb_xfixes_region_t    region  /**< */,
                               uint32_t               rectangles_len  /**< */,
                               const xcb_rectangle_t *rectangles  /**< */);
d1176 13
a1188 4
xcb_xfixes_set_region (xcb_connection_t      *c  /**< */,
                       xcb_xfixes_region_t    region  /**< */,
                       uint32_t               rectangles_len  /**< */,
                       const xcb_rectangle_t *rectangles  /**< */);
d1202 3
a1204 3
xcb_xfixes_copy_region_checked (xcb_connection_t    *c  /**< */,
                                xcb_xfixes_region_t  source  /**< */,
                                xcb_xfixes_region_t  destination  /**< */);
d1215 3
a1217 3
xcb_xfixes_copy_region (xcb_connection_t    *c  /**< */,
                        xcb_xfixes_region_t  source  /**< */,
                        xcb_xfixes_region_t  destination  /**< */);
d1231 4
a1234 4
xcb_xfixes_union_region_checked (xcb_connection_t    *c  /**< */,
                                 xcb_xfixes_region_t  source1  /**< */,
                                 xcb_xfixes_region_t  source2  /**< */,
                                 xcb_xfixes_region_t  destination  /**< */);
d1245 4
a1248 4
xcb_xfixes_union_region (xcb_connection_t    *c  /**< */,
                         xcb_xfixes_region_t  source1  /**< */,
                         xcb_xfixes_region_t  source2  /**< */,
                         xcb_xfixes_region_t  destination  /**< */);
d1262 4
a1265 4
xcb_xfixes_intersect_region_checked (xcb_connection_t    *c  /**< */,
                                     xcb_xfixes_region_t  source1  /**< */,
                                     xcb_xfixes_region_t  source2  /**< */,
                                     xcb_xfixes_region_t  destination  /**< */);
d1276 4
a1279 4
xcb_xfixes_intersect_region (xcb_connection_t    *c  /**< */,
                             xcb_xfixes_region_t  source1  /**< */,
                             xcb_xfixes_region_t  source2  /**< */,
                             xcb_xfixes_region_t  destination  /**< */);
d1293 4
a1296 4
xcb_xfixes_subtract_region_checked (xcb_connection_t    *c  /**< */,
                                    xcb_xfixes_region_t  source1  /**< */,
                                    xcb_xfixes_region_t  source2  /**< */,
                                    xcb_xfixes_region_t  destination  /**< */);
d1307 4
a1310 4
xcb_xfixes_subtract_region (xcb_connection_t    *c  /**< */,
                            xcb_xfixes_region_t  source1  /**< */,
                            xcb_xfixes_region_t  source2  /**< */,
                            xcb_xfixes_region_t  destination  /**< */);
d1324 4
a1327 4
xcb_xfixes_invert_region_checked (xcb_connection_t    *c  /**< */,
                                  xcb_xfixes_region_t  source  /**< */,
                                  xcb_rectangle_t      bounds  /**< */,
                                  xcb_xfixes_region_t  destination  /**< */);
d1338 4
a1341 4
xcb_xfixes_invert_region (xcb_connection_t    *c  /**< */,
                          xcb_xfixes_region_t  source  /**< */,
                          xcb_rectangle_t      bounds  /**< */,
                          xcb_xfixes_region_t  destination  /**< */);
d1355 4
a1358 4
xcb_xfixes_translate_region_checked (xcb_connection_t    *c  /**< */,
                                     xcb_xfixes_region_t  region  /**< */,
                                     int16_t              dx  /**< */,
                                     int16_t              dy  /**< */);
d1369 4
a1372 4
xcb_xfixes_translate_region (xcb_connection_t    *c  /**< */,
                             xcb_xfixes_region_t  region  /**< */,
                             int16_t              dx  /**< */,
                             int16_t              dy  /**< */);
d1386 3
a1388 3
xcb_xfixes_region_extents_checked (xcb_connection_t    *c  /**< */,
                                   xcb_xfixes_region_t  source  /**< */,
                                   xcb_xfixes_region_t  destination  /**< */);
d1399 3
a1401 3
xcb_xfixes_region_extents (xcb_connection_t    *c  /**< */,
                           xcb_xfixes_region_t  source  /**< */,
                           xcb_xfixes_region_t  destination  /**< */);
d1404 1
a1404 1
xcb_xfixes_fetch_region_sizeof (const void  *_buffer  /**< */);
d1415 2
a1416 2
xcb_xfixes_fetch_region (xcb_connection_t    *c  /**< */,
                         xcb_xfixes_region_t  region  /**< */);
d1430 2
a1431 2
xcb_xfixes_fetch_region_unchecked (xcb_connection_t    *c  /**< */,
                                   xcb_xfixes_region_t  region  /**< */);
d1434 1
a1434 1
xcb_xfixes_fetch_region_rectangles (const xcb_xfixes_fetch_region_reply_t *R  /**< */);
d1437 1
a1437 1
xcb_xfixes_fetch_region_rectangles_length (const xcb_xfixes_fetch_region_reply_t *R  /**< */);
d1440 1
a1440 1
xcb_xfixes_fetch_region_rectangles_iterator (const xcb_xfixes_fetch_region_reply_t *R  /**< */);
d1457 1
a1457 1
xcb_xfixes_fetch_region_reply (xcb_connection_t                  *c  /**< */,
d1459 1
a1459 1
                               xcb_generic_error_t              **e  /**< */);
d1473 5
a1477 5
xcb_xfixes_set_gc_clip_region_checked (xcb_connection_t    *c  /**< */,
                                       xcb_gcontext_t       gc  /**< */,
                                       xcb_xfixes_region_t  region  /**< */,
                                       int16_t              x_origin  /**< */,
                                       int16_t              y_origin  /**< */);
d1488 5
a1492 5
xcb_xfixes_set_gc_clip_region (xcb_connection_t    *c  /**< */,
                               xcb_gcontext_t       gc  /**< */,
                               xcb_xfixes_region_t  region  /**< */,
                               int16_t              x_origin  /**< */,
                               int16_t              y_origin  /**< */);
d1506 6
a1511 6
xcb_xfixes_set_window_shape_region_checked (xcb_connection_t    *c  /**< */,
                                            xcb_window_t         dest  /**< */,
                                            xcb_shape_kind_t     dest_kind  /**< */,
                                            int16_t              x_offset  /**< */,
                                            int16_t              y_offset  /**< */,
                                            xcb_xfixes_region_t  region  /**< */);
d1522 6
a1527 6
xcb_xfixes_set_window_shape_region (xcb_connection_t    *c  /**< */,
                                    xcb_window_t         dest  /**< */,
                                    xcb_shape_kind_t     dest_kind  /**< */,
                                    int16_t              x_offset  /**< */,
                                    int16_t              y_offset  /**< */,
                                    xcb_xfixes_region_t  region  /**< */);
d1541 5
a1545 5
xcb_xfixes_set_picture_clip_region_checked (xcb_connection_t     *c  /**< */,
                                            xcb_render_picture_t  picture  /**< */,
                                            xcb_xfixes_region_t   region  /**< */,
                                            int16_t               x_origin  /**< */,
                                            int16_t               y_origin  /**< */);
d1556 5
a1560 5
xcb_xfixes_set_picture_clip_region (xcb_connection_t     *c  /**< */,
                                    xcb_render_picture_t  picture  /**< */,
                                    xcb_xfixes_region_t   region  /**< */,
                                    int16_t               x_origin  /**< */,
                                    int16_t               y_origin  /**< */);
d1563 1
a1563 1
xcb_xfixes_set_cursor_name_sizeof (const void  *_buffer  /**< */);
d1577 4
a1580 4
xcb_xfixes_set_cursor_name_checked (xcb_connection_t *c  /**< */,
                                    xcb_cursor_t      cursor  /**< */,
                                    uint16_t          nbytes  /**< */,
                                    const char       *name  /**< */);
d1591 7
a1597 4
xcb_xfixes_set_cursor_name (xcb_connection_t *c  /**< */,
                            xcb_cursor_t      cursor  /**< */,
                            uint16_t          nbytes  /**< */,
                            const char       *name  /**< */);
d1600 7
a1606 1
xcb_xfixes_get_cursor_name_sizeof (const void  *_buffer  /**< */);
d1617 2
a1618 2
xcb_xfixes_get_cursor_name (xcb_connection_t *c  /**< */,
                            xcb_cursor_t      cursor  /**< */);
d1632 2
a1633 2
xcb_xfixes_get_cursor_name_unchecked (xcb_connection_t *c  /**< */,
                                      xcb_cursor_t      cursor  /**< */);
d1636 1
a1636 1
xcb_xfixes_get_cursor_name_name (const xcb_xfixes_get_cursor_name_reply_t *R  /**< */);
d1639 1
a1639 1
xcb_xfixes_get_cursor_name_name_length (const xcb_xfixes_get_cursor_name_reply_t *R  /**< */);
d1642 1
a1642 1
xcb_xfixes_get_cursor_name_name_end (const xcb_xfixes_get_cursor_name_reply_t *R  /**< */);
d1659 1
a1659 1
xcb_xfixes_get_cursor_name_reply (xcb_connection_t                     *c  /**< */,
d1661 1
a1661 1
                                  xcb_generic_error_t                 **e  /**< */);
d1664 1
a1664 1
xcb_xfixes_get_cursor_image_and_name_sizeof (const void  *_buffer  /**< */);
d1675 1
a1675 1
xcb_xfixes_get_cursor_image_and_name (xcb_connection_t *c  /**< */);
d1689 1
a1689 1
xcb_xfixes_get_cursor_image_and_name_unchecked (xcb_connection_t *c  /**< */);
d1691 2
a1692 2
char *
xcb_xfixes_get_cursor_image_and_name_name (const xcb_xfixes_get_cursor_image_and_name_reply_t *R  /**< */);
d1695 1
a1695 1
xcb_xfixes_get_cursor_image_and_name_name_length (const xcb_xfixes_get_cursor_image_and_name_reply_t *R  /**< */);
d1698 1
a1698 1
xcb_xfixes_get_cursor_image_and_name_name_end (const xcb_xfixes_get_cursor_image_and_name_reply_t *R  /**< */);
d1700 2
a1701 2
uint32_t *
xcb_xfixes_get_cursor_image_and_name_cursor_image (const xcb_xfixes_get_cursor_image_and_name_reply_t *R  /**< */);
d1704 1
a1704 1
xcb_xfixes_get_cursor_image_and_name_cursor_image_length (const xcb_xfixes_get_cursor_image_and_name_reply_t *R  /**< */);
d1707 1
a1707 1
xcb_xfixes_get_cursor_image_and_name_cursor_image_end (const xcb_xfixes_get_cursor_image_and_name_reply_t *R  /**< */);
d1724 1
a1724 1
xcb_xfixes_get_cursor_image_and_name_reply (xcb_connection_t                               *c  /**< */,
d1726 1
a1726 1
                                            xcb_generic_error_t                           **e  /**< */);
d1740 3
a1742 3
xcb_xfixes_change_cursor_checked (xcb_connection_t *c  /**< */,
                                  xcb_cursor_t      source  /**< */,
                                  xcb_cursor_t      destination  /**< */);
d1753 3
a1755 3
xcb_xfixes_change_cursor (xcb_connection_t *c  /**< */,
                          xcb_cursor_t      source  /**< */,
                          xcb_cursor_t      destination  /**< */);
d1758 1
a1758 1
xcb_xfixes_change_cursor_by_name_sizeof (const void  *_buffer  /**< */);
d1772 4
a1775 4
xcb_xfixes_change_cursor_by_name_checked (xcb_connection_t *c  /**< */,
                                          xcb_cursor_t      src  /**< */,
                                          uint16_t          nbytes  /**< */,
                                          const char       *name  /**< */);
d1786 13
a1798 4
xcb_xfixes_change_cursor_by_name (xcb_connection_t *c  /**< */,
                                  xcb_cursor_t      src  /**< */,
                                  uint16_t          nbytes  /**< */,
                                  const char       *name  /**< */);
d1812 7
a1818 7
xcb_xfixes_expand_region_checked (xcb_connection_t    *c  /**< */,
                                  xcb_xfixes_region_t  source  /**< */,
                                  xcb_xfixes_region_t  destination  /**< */,
                                  uint16_t             left  /**< */,
                                  uint16_t             right  /**< */,
                                  uint16_t             top  /**< */,
                                  uint16_t             bottom  /**< */);
d1829 7
a1835 7
xcb_xfixes_expand_region (xcb_connection_t    *c  /**< */,
                          xcb_xfixes_region_t  source  /**< */,
                          xcb_xfixes_region_t  destination  /**< */,
                          uint16_t             left  /**< */,
                          uint16_t             right  /**< */,
                          uint16_t             top  /**< */,
                          uint16_t             bottom  /**< */);
d1849 2
a1850 2
xcb_xfixes_hide_cursor_checked (xcb_connection_t *c  /**< */,
                                xcb_window_t      window  /**< */);
d1861 2
a1862 2
xcb_xfixes_hide_cursor (xcb_connection_t *c  /**< */,
                        xcb_window_t      window  /**< */);
d1876 2
a1877 2
xcb_xfixes_show_cursor_checked (xcb_connection_t *c  /**< */,
                                xcb_window_t      window  /**< */);
d1888 2
a1889 2
xcb_xfixes_show_cursor (xcb_connection_t *c  /**< */,
                        xcb_window_t      window  /**< */);
d1900 1
a1900 1
xcb_xfixes_barrier_next (xcb_xfixes_barrier_iterator_t *i  /**< */);
d1912 1
a1912 1
xcb_xfixes_barrier_end (xcb_xfixes_barrier_iterator_t i  /**< */);
d1915 1
a1915 1
xcb_xfixes_create_pointer_barrier_sizeof (const void  *_buffer  /**< */);
d1929 10
a1938 10
xcb_xfixes_create_pointer_barrier_checked (xcb_connection_t     *c  /**< */,
                                           xcb_xfixes_barrier_t  barrier  /**< */,
                                           xcb_window_t          window  /**< */,
                                           uint16_t              x1  /**< */,
                                           uint16_t              y1  /**< */,
                                           uint16_t              x2  /**< */,
                                           uint16_t              y2  /**< */,
                                           uint32_t              directions  /**< */,
                                           uint16_t              num_devices  /**< */,
                                           const uint16_t       *devices  /**< */);
d1949 19
a1967 10
xcb_xfixes_create_pointer_barrier (xcb_connection_t     *c  /**< */,
                                   xcb_xfixes_barrier_t  barrier  /**< */,
                                   xcb_window_t          window  /**< */,
                                   uint16_t              x1  /**< */,
                                   uint16_t              y1  /**< */,
                                   uint16_t              x2  /**< */,
                                   uint16_t              y2  /**< */,
                                   uint32_t              directions  /**< */,
                                   uint16_t              num_devices  /**< */,
                                   const uint16_t       *devices  /**< */);
d1981 2
a1982 2
xcb_xfixes_delete_pointer_barrier_checked (xcb_connection_t     *c  /**< */,
                                           xcb_xfixes_barrier_t  barrier  /**< */);
d1993 2
a1994 2
xcb_xfixes_delete_pointer_barrier (xcb_connection_t     *c  /**< */,
                                   xcb_xfixes_barrier_t  barrier  /**< */);
@


1.4
log
@Update build system and generated files for libxcb 1.10.
@
text
@d26 1
a26 1
  
d743 1
a743 1
 * 
a744 12

/*****************************************************************************
 **
 ** xcb_xfixes_query_version_cookie_t xcb_xfixes_query_version
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          client_major_version
 ** @@param uint32_t          client_minor_version
 ** @@returns xcb_xfixes_query_version_cookie_t
 **
 *****************************************************************************/
 
d756 1
a756 1
 * 
a760 12

/*****************************************************************************
 **
 ** xcb_xfixes_query_version_cookie_t xcb_xfixes_query_version_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          client_major_version
 ** @@param uint32_t          client_minor_version
 ** @@returns xcb_xfixes_query_version_cookie_t
 **
 *****************************************************************************/
 
d773 1
a773 1
 * 
a779 12

/*****************************************************************************
 **
 ** xcb_xfixes_query_version_reply_t * xcb_xfixes_query_version_reply
 ** 
 ** @@param xcb_connection_t                   *c
 ** @@param xcb_xfixes_query_version_cookie_t   cookie
 ** @@param xcb_generic_error_t               **e
 ** @@returns xcb_xfixes_query_version_reply_t *
 **
 *****************************************************************************/
 
d791 1
a791 1
 * 
a795 14

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_change_save_set_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           mode
 ** @@param uint8_t           target
 ** @@param uint8_t           map
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d809 1
a809 1
 * 
a810 14

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_change_save_set
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           mode
 ** @@param uint8_t           target
 ** @@param uint8_t           map
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d824 1
a824 1
 * 
a828 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_select_selection_input_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param xcb_atom_t        selection
 ** @@param uint32_t          event_mask
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d841 1
a841 1
 * 
a842 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_select_selection_input
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param xcb_atom_t        selection
 ** @@param uint32_t          event_mask
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d855 1
a855 1
 * 
a859 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_select_cursor_input_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint32_t          event_mask
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d871 1
a871 1
 * 
a872 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_select_cursor_input
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint32_t          event_mask
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d887 1
a887 1
 * 
a888 10

/*****************************************************************************
 **
 ** xcb_xfixes_get_cursor_image_cookie_t xcb_xfixes_get_cursor_image
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_xfixes_get_cursor_image_cookie_t
 **
 *****************************************************************************/
 
d898 1
a898 1
 * 
a902 10

/*****************************************************************************
 **
 ** xcb_xfixes_get_cursor_image_cookie_t xcb_xfixes_get_cursor_image_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_xfixes_get_cursor_image_cookie_t
 **
 *****************************************************************************/
 
a905 10

/*****************************************************************************
 **
 ** uint32_t * xcb_xfixes_get_cursor_image_cursor_image
 ** 
 ** @@param const xcb_xfixes_get_cursor_image_reply_t *R
 ** @@returns uint32_t *
 **
 *****************************************************************************/
 
a908 10

/*****************************************************************************
 **
 ** int xcb_xfixes_get_cursor_image_cursor_image_length
 ** 
 ** @@param const xcb_xfixes_get_cursor_image_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a911 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_xfixes_get_cursor_image_cursor_image_end
 ** 
 ** @@param const xcb_xfixes_get_cursor_image_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d922 1
a922 1
 * 
a928 12

/*****************************************************************************
 **
 ** xcb_xfixes_get_cursor_image_reply_t * xcb_xfixes_get_cursor_image_reply
 ** 
 ** @@param xcb_connection_t                      *c
 ** @@param xcb_xfixes_get_cursor_image_cookie_t   cookie
 ** @@param xcb_generic_error_t                  **e
 ** @@returns xcb_xfixes_get_cursor_image_reply_t *
 **
 *****************************************************************************/
 
a941 10

/*****************************************************************************
 **
 ** void xcb_xfixes_region_next
 ** 
 ** @@param xcb_xfixes_region_iterator_t *i
 ** @@returns void
 **
 *****************************************************************************/
 
a953 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_xfixes_region_end
 ** 
 ** @@param xcb_xfixes_region_iterator_t i
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d967 1
a967 1
 * 
a971 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region_checked
 ** 
 ** @@param xcb_connection_t      *c
 ** @@param xcb_xfixes_region_t    region
 ** @@param uint32_t               rectangles_len
 ** @@param const xcb_rectangle_t *rectangles
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d984 1
a984 1
 * 
a985 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region
 ** 
 ** @@param xcb_connection_t      *c
 ** @@param xcb_xfixes_region_t    region
 ** @@param uint32_t               rectangles_len
 ** @@param const xcb_rectangle_t *rectangles
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d998 1
a998 1
 * 
a1002 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region_from_bitmap_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param xcb_pixmap_t         bitmap
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1014 1
a1014 1
 * 
a1015 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region_from_bitmap
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param xcb_pixmap_t         bitmap
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1027 1
a1027 1
 * 
a1031 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region_from_window_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param xcb_window_t         window
 ** @@param xcb_shape_kind_t     kind
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1044 1
a1044 1
 * 
a1045 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region_from_window
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param xcb_window_t         window
 ** @@param xcb_shape_kind_t     kind
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1058 1
a1058 1
 * 
a1062 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region_from_gc_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param xcb_gcontext_t       gc
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1074 1
a1074 1
 * 
a1075 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region_from_gc
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param xcb_gcontext_t       gc
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1087 1
a1087 1
 * 
a1091 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region_from_picture_checked
 ** 
 ** @@param xcb_connection_t     *c
 ** @@param xcb_xfixes_region_t   region
 ** @@param xcb_render_picture_t  picture
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1103 1
a1103 1
 * 
a1104 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_region_from_picture
 ** 
 ** @@param xcb_connection_t     *c
 ** @@param xcb_xfixes_region_t   region
 ** @@param xcb_render_picture_t  picture
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1116 1
a1116 1
 * 
a1120 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_destroy_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1131 1
a1131 1
 * 
a1132 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_destroy_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1147 1
a1147 1
 * 
a1151 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_region_checked
 ** 
 ** @@param xcb_connection_t      *c
 ** @@param xcb_xfixes_region_t    region
 ** @@param uint32_t               rectangles_len
 ** @@param const xcb_rectangle_t *rectangles
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1164 1
a1164 1
 * 
a1165 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_region
 ** 
 ** @@param xcb_connection_t      *c
 ** @@param xcb_xfixes_region_t    region
 ** @@param uint32_t               rectangles_len
 ** @@param const xcb_rectangle_t *rectangles
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1178 1
a1178 1
 * 
a1182 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_copy_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1194 1
a1194 1
 * 
a1195 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_copy_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1207 1
a1207 1
 * 
a1211 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_union_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source1
 ** @@param xcb_xfixes_region_t  source2
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1224 1
a1224 1
 * 
a1225 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_union_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source1
 ** @@param xcb_xfixes_region_t  source2
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1238 1
a1238 1
 * 
a1242 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_intersect_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source1
 ** @@param xcb_xfixes_region_t  source2
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1255 1
a1255 1
 * 
a1256 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_intersect_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source1
 ** @@param xcb_xfixes_region_t  source2
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1269 1
a1269 1
 * 
a1273 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_subtract_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source1
 ** @@param xcb_xfixes_region_t  source2
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1286 1
a1286 1
 * 
a1287 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_subtract_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source1
 ** @@param xcb_xfixes_region_t  source2
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1300 1
a1300 1
 * 
a1304 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_invert_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source
 ** @@param xcb_rectangle_t      bounds
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1317 1
a1317 1
 * 
a1318 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_invert_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source
 ** @@param xcb_rectangle_t      bounds
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1331 1
a1331 1
 * 
a1335 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_translate_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param int16_t              dx
 ** @@param int16_t              dy
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1348 1
a1348 1
 * 
a1349 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_translate_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param int16_t              dx
 ** @@param int16_t              dy
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1362 1
a1362 1
 * 
a1366 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_region_extents_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1378 1
a1378 1
 * 
a1379 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_region_extents
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source
 ** @@param xcb_xfixes_region_t  destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1394 1
a1394 1
 * 
a1395 11

/*****************************************************************************
 **
 ** xcb_xfixes_fetch_region_cookie_t xcb_xfixes_fetch_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@returns xcb_xfixes_fetch_region_cookie_t
 **
 *****************************************************************************/
 
d1406 1
a1406 1
 * 
a1410 11

/*****************************************************************************
 **
 ** xcb_xfixes_fetch_region_cookie_t xcb_xfixes_fetch_region_unchecked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@returns xcb_xfixes_fetch_region_cookie_t
 **
 *****************************************************************************/
 
a1414 10

/*****************************************************************************
 **
 ** xcb_rectangle_t * xcb_xfixes_fetch_region_rectangles
 ** 
 ** @@param const xcb_xfixes_fetch_region_reply_t *R
 ** @@returns xcb_rectangle_t *
 **
 *****************************************************************************/
 
a1417 10

/*****************************************************************************
 **
 ** int xcb_xfixes_fetch_region_rectangles_length
 ** 
 ** @@param const xcb_xfixes_fetch_region_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1420 10

/*****************************************************************************
 **
 ** xcb_rectangle_iterator_t xcb_xfixes_fetch_region_rectangles_iterator
 ** 
 ** @@param const xcb_xfixes_fetch_region_reply_t *R
 ** @@returns xcb_rectangle_iterator_t
 **
 *****************************************************************************/
 
d1431 1
a1431 1
 * 
a1437 12

/*****************************************************************************
 **
 ** xcb_xfixes_fetch_region_reply_t * xcb_xfixes_fetch_region_reply
 ** 
 ** @@param xcb_connection_t                  *c
 ** @@param xcb_xfixes_fetch_region_cookie_t   cookie
 ** @@param xcb_generic_error_t              **e
 ** @@returns xcb_xfixes_fetch_region_reply_t *
 **
 *****************************************************************************/
 
d1449 1
a1449 1
 * 
a1453 14

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_gc_clip_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_gcontext_t       gc
 ** @@param xcb_xfixes_region_t  region
 ** @@param int16_t              x_origin
 ** @@param int16_t              y_origin
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1467 1
a1467 1
 * 
a1468 14

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_gc_clip_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_gcontext_t       gc
 ** @@param xcb_xfixes_region_t  region
 ** @@param int16_t              x_origin
 ** @@param int16_t              y_origin
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1482 1
a1482 1
 * 
a1486 15

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_window_shape_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_window_t         dest
 ** @@param xcb_shape_kind_t     dest_kind
 ** @@param int16_t              x_offset
 ** @@param int16_t              y_offset
 ** @@param xcb_xfixes_region_t  region
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1501 1
a1501 1
 * 
a1502 15

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_window_shape_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_window_t         dest
 ** @@param xcb_shape_kind_t     dest_kind
 ** @@param int16_t              x_offset
 ** @@param int16_t              y_offset
 ** @@param xcb_xfixes_region_t  region
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1517 1
a1517 1
 * 
a1521 14

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_picture_clip_region_checked
 ** 
 ** @@param xcb_connection_t     *c
 ** @@param xcb_render_picture_t  picture
 ** @@param xcb_xfixes_region_t   region
 ** @@param int16_t               x_origin
 ** @@param int16_t               y_origin
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1535 1
a1535 1
 * 
a1536 14

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_picture_clip_region
 ** 
 ** @@param xcb_connection_t     *c
 ** @@param xcb_render_picture_t  picture
 ** @@param xcb_xfixes_region_t   region
 ** @@param int16_t               x_origin
 ** @@param int16_t               y_origin
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1553 1
a1553 1
 * 
a1557 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_cursor_name_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_cursor_t      cursor
 ** @@param uint16_t          nbytes
 ** @@param const char       *name
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1570 1
a1570 1
 * 
a1571 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_set_cursor_name
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_cursor_t      cursor
 ** @@param uint16_t          nbytes
 ** @@param const char       *name
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1587 1
a1587 1
 * 
a1588 11

/*****************************************************************************
 **
 ** xcb_xfixes_get_cursor_name_cookie_t xcb_xfixes_get_cursor_name
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_cursor_t      cursor
 ** @@returns xcb_xfixes_get_cursor_name_cookie_t
 **
 *****************************************************************************/
 
d1599 1
a1599 1
 * 
a1603 11

/*****************************************************************************
 **
 ** xcb_xfixes_get_cursor_name_cookie_t xcb_xfixes_get_cursor_name_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_cursor_t      cursor
 ** @@returns xcb_xfixes_get_cursor_name_cookie_t
 **
 *****************************************************************************/
 
a1607 10

/*****************************************************************************
 **
 ** char * xcb_xfixes_get_cursor_name_name
 ** 
 ** @@param const xcb_xfixes_get_cursor_name_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a1610 10

/*****************************************************************************
 **
 ** int xcb_xfixes_get_cursor_name_name_length
 ** 
 ** @@param const xcb_xfixes_get_cursor_name_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1613 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_xfixes_get_cursor_name_name_end
 ** 
 ** @@param const xcb_xfixes_get_cursor_name_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d1624 1
a1624 1
 * 
a1630 12

/*****************************************************************************
 **
 ** xcb_xfixes_get_cursor_name_reply_t * xcb_xfixes_get_cursor_name_reply
 ** 
 ** @@param xcb_connection_t                     *c
 ** @@param xcb_xfixes_get_cursor_name_cookie_t   cookie
 ** @@param xcb_generic_error_t                 **e
 ** @@returns xcb_xfixes_get_cursor_name_reply_t *
 **
 *****************************************************************************/
 
d1645 1
a1645 1
 * 
a1646 10

/*****************************************************************************
 **
 ** xcb_xfixes_get_cursor_image_and_name_cookie_t xcb_xfixes_get_cursor_image_and_name
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_xfixes_get_cursor_image_and_name_cookie_t
 **
 *****************************************************************************/
 
d1656 1
a1656 1
 * 
a1660 10

/*****************************************************************************
 **
 ** xcb_xfixes_get_cursor_image_and_name_cookie_t xcb_xfixes_get_cursor_image_and_name_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_xfixes_get_cursor_image_and_name_cookie_t
 **
 *****************************************************************************/
 
a1663 10

/*****************************************************************************
 **
 ** char * xcb_xfixes_get_cursor_image_and_name_name
 ** 
 ** @@param const xcb_xfixes_get_cursor_image_and_name_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a1666 10

/*****************************************************************************
 **
 ** int xcb_xfixes_get_cursor_image_and_name_name_length
 ** 
 ** @@param const xcb_xfixes_get_cursor_image_and_name_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1669 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_xfixes_get_cursor_image_and_name_name_end
 ** 
 ** @@param const xcb_xfixes_get_cursor_image_and_name_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a1672 10

/*****************************************************************************
 **
 ** uint32_t * xcb_xfixes_get_cursor_image_and_name_cursor_image
 ** 
 ** @@param const xcb_xfixes_get_cursor_image_and_name_reply_t *R
 ** @@returns uint32_t *
 **
 *****************************************************************************/
 
a1675 10

/*****************************************************************************
 **
 ** int xcb_xfixes_get_cursor_image_and_name_cursor_image_length
 ** 
 ** @@param const xcb_xfixes_get_cursor_image_and_name_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1678 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_xfixes_get_cursor_image_and_name_cursor_image_end
 ** 
 ** @@param const xcb_xfixes_get_cursor_image_and_name_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d1689 1
a1689 1
 * 
a1695 12

/*****************************************************************************
 **
 ** xcb_xfixes_get_cursor_image_and_name_reply_t * xcb_xfixes_get_cursor_image_and_name_reply
 ** 
 ** @@param xcb_connection_t                               *c
 ** @@param xcb_xfixes_get_cursor_image_and_name_cookie_t   cookie
 ** @@param xcb_generic_error_t                           **e
 ** @@returns xcb_xfixes_get_cursor_image_and_name_reply_t *
 **
 *****************************************************************************/
 
d1707 1
a1707 1
 * 
a1711 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_change_cursor_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_cursor_t      source
 ** @@param xcb_cursor_t      destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1723 1
a1723 1
 * 
a1724 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_change_cursor
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_cursor_t      source
 ** @@param xcb_cursor_t      destination
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1739 1
a1739 1
 * 
a1743 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_change_cursor_by_name_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_cursor_t      src
 ** @@param uint16_t          nbytes
 ** @@param const char       *name
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1756 1
a1756 1
 * 
a1757 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_change_cursor_by_name
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_cursor_t      src
 ** @@param uint16_t          nbytes
 ** @@param const char       *name
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1770 1
a1770 1
 * 
a1774 16

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_expand_region_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source
 ** @@param xcb_xfixes_region_t  destination
 ** @@param uint16_t             left
 ** @@param uint16_t             right
 ** @@param uint16_t             top
 ** @@param uint16_t             bottom
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1790 1
a1790 1
 * 
a1791 16

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_expand_region
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  source
 ** @@param xcb_xfixes_region_t  destination
 ** @@param uint16_t             left
 ** @@param uint16_t             right
 ** @@param uint16_t             top
 ** @@param uint16_t             bottom
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1807 1
a1807 1
 * 
a1811 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_hide_cursor_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1822 1
a1822 1
 * 
a1823 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_hide_cursor
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1834 1
a1834 1
 * 
a1838 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_show_cursor_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1849 1
a1849 1
 * 
a1850 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_show_cursor
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
a1862 10

/*****************************************************************************
 **
 ** void xcb_xfixes_barrier_next
 ** 
 ** @@param xcb_xfixes_barrier_iterator_t *i
 ** @@returns void
 **
 *****************************************************************************/
 
a1874 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_xfixes_barrier_end
 ** 
 ** @@param xcb_xfixes_barrier_iterator_t i
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d1887 1
a1887 1
 * 
a1891 19

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_pointer_barrier_checked
 ** 
 ** @@param xcb_connection_t     *c
 ** @@param xcb_xfixes_barrier_t  barrier
 ** @@param xcb_window_t          window
 ** @@param uint16_t              x1
 ** @@param uint16_t              y1
 ** @@param uint16_t              x2
 ** @@param uint16_t              y2
 ** @@param uint32_t              directions
 ** @@param uint16_t              num_devices
 ** @@param const uint16_t       *devices
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1910 1
a1910 1
 * 
a1911 19

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_create_pointer_barrier
 ** 
 ** @@param xcb_connection_t     *c
 ** @@param xcb_xfixes_barrier_t  barrier
 ** @@param xcb_window_t          window
 ** @@param uint16_t              x1
 ** @@param uint16_t              y1
 ** @@param uint16_t              x2
 ** @@param uint16_t              y2
 ** @@param uint32_t              directions
 ** @@param uint16_t              num_devices
 ** @@param const uint16_t       *devices
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1930 1
a1930 1
 * 
a1934 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_delete_pointer_barrier_checked
 ** 
 ** @@param xcb_connection_t     *c
 ** @@param xcb_xfixes_barrier_t  barrier
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1945 1
a1945 1
 * 
a1946 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_xfixes_delete_pointer_barrier
 ** 
 ** @@param xcb_connection_t     *c
 ** @@param xcb_xfixes_barrier_t  barrier
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
@


1.3
log
@Update to libxcb 1.9.0.
tested by ajacoutot@@ and naddy@@ on a full ports build
@
text
@d24 1
a24 1
#define XCB_XFIXES_MAJOR_VERSION 4
d64 2
a65 2
    XCB_XFIXES_SAVE_SET_MODE_INSERT,
    XCB_XFIXES_SAVE_SET_MODE_DELETE
d69 2
a70 2
    XCB_XFIXES_SAVE_SET_TARGET_NEAREST,
    XCB_XFIXES_SAVE_SET_TARGET_ROOT
d74 2
a75 2
    XCB_XFIXES_SAVE_SET_MAPPING_MAP,
    XCB_XFIXES_SAVE_SET_MAPPING_UNMAP
d96 3
a98 3
    XCB_XFIXES_SELECTION_EVENT_SET_SELECTION_OWNER,
    XCB_XFIXES_SELECTION_EVENT_SELECTION_WINDOW_DESTROY,
    XCB_XFIXES_SELECTION_EVENT_SELECTION_CLIENT_CLOSE
d141 1
a141 1
    XCB_XFIXES_CURSOR_NOTIFY_DISPLAY_CURSOR
d240 1
a240 1
    XCB_XFIXES_REGION_NONE
d685 52
d2858 176
@


1.2
log
@regen for xcb-proto 1.5
@
text
@d686 1
a686 1
 * Delivers a request to the X server
d711 1
a711 1
 * Delivers a request to the X server
d770 1
a770 1
 * Delivers a request to the X server
d802 1
a802 1
 * Delivers a request to the X server
d831 1
a831 1
 * Delivers a request to the X server
d861 1
a861 1
 * Delivers a request to the X server
d888 1
a888 1
 * Delivers a request to the X server
d916 1
a916 1
 * Delivers a request to the X server
d940 3
d944 1
a944 1
 * Delivers a request to the X server
d965 1
a965 1
 * Delivers a request to the X server
d1101 4
d1106 1
a1106 1
 * Delivers a request to the X server
d1136 1
a1136 1
 * Delivers a request to the X server
d1163 1
a1163 1
 * Delivers a request to the X server
d1191 1
a1191 1
 * Delivers a request to the X server
d1216 1
a1216 1
 * Delivers a request to the X server
d1246 1
a1246 1
 * Delivers a request to the X server
d1273 1
a1273 1
 * Delivers a request to the X server
d1301 1
a1301 1
 * Delivers a request to the X server
d1326 1
a1326 1
 * Delivers a request to the X server
d1354 1
a1354 1
 * Delivers a request to the X server
d1379 1
a1379 1
 * Delivers a request to the X server
d1405 1
a1405 1
 * Delivers a request to the X server
d1427 4
d1432 1
a1432 1
 * Delivers a request to the X server
d1462 1
a1462 1
 * Delivers a request to the X server
d1489 1
a1489 1
 * Delivers a request to the X server
d1517 1
a1517 1
 * Delivers a request to the X server
d1542 1
a1542 1
 * Delivers a request to the X server
d1572 1
a1572 1
 * Delivers a request to the X server
d1599 1
a1599 1
 * Delivers a request to the X server
d1629 1
a1629 1
 * Delivers a request to the X server
d1656 1
a1656 1
 * Delivers a request to the X server
d1686 1
a1686 1
 * Delivers a request to the X server
d1713 1
a1713 1
 * Delivers a request to the X server
d1743 1
a1743 1
 * Delivers a request to the X server
d1770 1
a1770 1
 * Delivers a request to the X server
d1800 1
a1800 1
 * Delivers a request to the X server
d1827 1
a1827 1
 * Delivers a request to the X server
d1855 1
a1855 1
 * Delivers a request to the X server
d1879 3
d1883 1
a1883 1
 * Delivers a request to the X server
d1906 1
a1906 1
 * Delivers a request to the X server
d2002 1
a2002 1
 * Delivers a request to the X server
d2034 1
a2034 1
 * Delivers a request to the X server
d2063 1
a2063 1
 * Delivers a request to the X server
d2097 1
a2097 1
 * Delivers a request to the X server
d2128 1
a2128 1
 * Delivers a request to the X server
d2160 1
a2160 1
 * Delivers a request to the X server
d2188 3
d2192 1
a2192 1
 * Delivers a request to the X server
d2222 1
a2222 1
 * Delivers a request to the X server
d2248 3
d2252 1
a2252 1
 * Delivers a request to the X server
d2275 1
a2275 1
 * Delivers a request to the X server
d2370 3
d2374 1
a2374 1
 * Delivers a request to the X server
d2395 1
a2395 1
 * Delivers a request to the X server
d2528 1
a2528 1
 * Delivers a request to the X server
d2556 1
a2556 1
 * Delivers a request to the X server
d2580 3
d2584 1
a2584 1
 * Delivers a request to the X server
d2614 1
a2614 1
 * Delivers a request to the X server
d2641 1
a2641 1
 * Delivers a request to the X server
d2677 1
a2677 1
 * Delivers a request to the X server
d2710 1
a2710 1
 * Delivers a request to the X server
d2736 1
a2736 1
 * Delivers a request to the X server
d2759 1
a2759 1
 * Delivers a request to the X server
d2785 1
a2785 1
 * Delivers a request to the X server
@


1.1
log
@Initial revision
@
text
@d239 4
@


1.1.1.1
log
@Xenocara build infrastructure for libxcb.

This includes a set of pre-generated sources files in src/ so that
python and xslt are not needed to build.
@
text
@@
