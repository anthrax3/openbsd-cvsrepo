head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_2:1.1.1.1
	XENOCARA:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.09.02.10.09.44;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	mKDGsTNpiR2zRHYQ;

1.4
date	2015.01.26.21.32.11;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	01TEvO4uNHLqFv7N;

1.3
date	2014.04.14.19.20.18;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.22.20.31.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.22.16.10.12;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.05.22.16.10.12;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to xcb-proto/libxcb 1.12. "Just commit it" naddy@@
@
text
@/*
 * This file generated automatically from xselinux.xml by c_client.py.
 * Edit at your peril.
 */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <stddef.h>  /* for offsetof() */
#include "xcbext.h"
#include "xselinux.h"

#define ALIGNOF(type) offsetof(struct { char dummy; type member; }, member)
#include "xproto.h"

xcb_extension_t xcb_selinux_id = { "SELinux", 0 };

xcb_selinux_query_version_cookie_t
xcb_selinux_query_version (xcb_connection_t *c,
                           uint8_t           client_major,
                           uint8_t           client_minor)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_QUERY_VERSION,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_query_version_cookie_t xcb_ret;
    xcb_selinux_query_version_request_t xcb_out;

    xcb_out.client_major = client_major;
    xcb_out.client_minor = client_minor;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_query_version_cookie_t
xcb_selinux_query_version_unchecked (xcb_connection_t *c,
                                     uint8_t           client_major,
                                     uint8_t           client_minor)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_QUERY_VERSION,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_query_version_cookie_t xcb_ret;
    xcb_selinux_query_version_request_t xcb_out;

    xcb_out.client_major = client_major;
    xcb_out.client_minor = client_minor;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_query_version_reply_t *
xcb_selinux_query_version_reply (xcb_connection_t                    *c,
                                 xcb_selinux_query_version_cookie_t   cookie  /**< */,
                                 xcb_generic_error_t                **e)
{
    return (xcb_selinux_query_version_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_set_device_create_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_set_device_create_context_request_t *_aux = (xcb_selinux_set_device_create_context_request_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_set_device_create_context_request_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_void_cookie_t
xcb_selinux_set_device_create_context_checked (xcb_connection_t *c,
                                               uint32_t          context_len,
                                               const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_DEVICE_CREATE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_device_create_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_void_cookie_t
xcb_selinux_set_device_create_context (xcb_connection_t *c,
                                       uint32_t          context_len,
                                       const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_DEVICE_CREATE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_device_create_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_set_device_create_context_context (const xcb_selinux_set_device_create_context_request_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_set_device_create_context_context_length (const xcb_selinux_set_device_create_context_request_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_set_device_create_context_context_end (const xcb_selinux_set_device_create_context_request_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

int
xcb_selinux_get_device_create_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_device_create_context_reply_t *_aux = (xcb_selinux_get_device_create_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_device_create_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_device_create_context_cookie_t
xcb_selinux_get_device_create_context (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_DEVICE_CREATE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_device_create_context_cookie_t xcb_ret;
    xcb_selinux_get_device_create_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_device_create_context_cookie_t
xcb_selinux_get_device_create_context_unchecked (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_DEVICE_CREATE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_device_create_context_cookie_t xcb_ret;
    xcb_selinux_get_device_create_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_device_create_context_context (const xcb_selinux_get_device_create_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_device_create_context_context_length (const xcb_selinux_get_device_create_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_device_create_context_context_end (const xcb_selinux_get_device_create_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_device_create_context_reply_t *
xcb_selinux_get_device_create_context_reply (xcb_connection_t                                *c,
                                             xcb_selinux_get_device_create_context_cookie_t   cookie  /**< */,
                                             xcb_generic_error_t                            **e)
{
    return (xcb_selinux_get_device_create_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_set_device_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_set_device_context_request_t *_aux = (xcb_selinux_set_device_context_request_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_set_device_context_request_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_void_cookie_t
xcb_selinux_set_device_context_checked (xcb_connection_t *c,
                                        uint32_t          device,
                                        uint32_t          context_len,
                                        const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_DEVICE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_device_context_request_t xcb_out;

    xcb_out.device = device;
    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_void_cookie_t
xcb_selinux_set_device_context (xcb_connection_t *c,
                                uint32_t          device,
                                uint32_t          context_len,
                                const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_DEVICE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_device_context_request_t xcb_out;

    xcb_out.device = device;
    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_set_device_context_context (const xcb_selinux_set_device_context_request_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_set_device_context_context_length (const xcb_selinux_set_device_context_request_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_set_device_context_context_end (const xcb_selinux_set_device_context_request_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

int
xcb_selinux_get_device_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_device_context_reply_t *_aux = (xcb_selinux_get_device_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_device_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_device_context_cookie_t
xcb_selinux_get_device_context (xcb_connection_t *c,
                                uint32_t          device)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_DEVICE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_device_context_cookie_t xcb_ret;
    xcb_selinux_get_device_context_request_t xcb_out;

    xcb_out.device = device;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_device_context_cookie_t
xcb_selinux_get_device_context_unchecked (xcb_connection_t *c,
                                          uint32_t          device)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_DEVICE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_device_context_cookie_t xcb_ret;
    xcb_selinux_get_device_context_request_t xcb_out;

    xcb_out.device = device;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_device_context_context (const xcb_selinux_get_device_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_device_context_context_length (const xcb_selinux_get_device_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_device_context_context_end (const xcb_selinux_get_device_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_device_context_reply_t *
xcb_selinux_get_device_context_reply (xcb_connection_t                         *c,
                                      xcb_selinux_get_device_context_cookie_t   cookie  /**< */,
                                      xcb_generic_error_t                     **e)
{
    return (xcb_selinux_get_device_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_set_window_create_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_set_window_create_context_request_t *_aux = (xcb_selinux_set_window_create_context_request_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_set_window_create_context_request_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_void_cookie_t
xcb_selinux_set_window_create_context_checked (xcb_connection_t *c,
                                               uint32_t          context_len,
                                               const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_WINDOW_CREATE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_window_create_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_void_cookie_t
xcb_selinux_set_window_create_context (xcb_connection_t *c,
                                       uint32_t          context_len,
                                       const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_WINDOW_CREATE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_window_create_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_set_window_create_context_context (const xcb_selinux_set_window_create_context_request_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_set_window_create_context_context_length (const xcb_selinux_set_window_create_context_request_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_set_window_create_context_context_end (const xcb_selinux_set_window_create_context_request_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

int
xcb_selinux_get_window_create_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_window_create_context_reply_t *_aux = (xcb_selinux_get_window_create_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_window_create_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_window_create_context_cookie_t
xcb_selinux_get_window_create_context (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_WINDOW_CREATE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_window_create_context_cookie_t xcb_ret;
    xcb_selinux_get_window_create_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_window_create_context_cookie_t
xcb_selinux_get_window_create_context_unchecked (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_WINDOW_CREATE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_window_create_context_cookie_t xcb_ret;
    xcb_selinux_get_window_create_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_window_create_context_context (const xcb_selinux_get_window_create_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_window_create_context_context_length (const xcb_selinux_get_window_create_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_window_create_context_context_end (const xcb_selinux_get_window_create_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_window_create_context_reply_t *
xcb_selinux_get_window_create_context_reply (xcb_connection_t                                *c,
                                             xcb_selinux_get_window_create_context_cookie_t   cookie  /**< */,
                                             xcb_generic_error_t                            **e)
{
    return (xcb_selinux_get_window_create_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_get_window_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_window_context_reply_t *_aux = (xcb_selinux_get_window_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_window_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_window_context_cookie_t
xcb_selinux_get_window_context (xcb_connection_t *c,
                                xcb_window_t      window)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_WINDOW_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_window_context_cookie_t xcb_ret;
    xcb_selinux_get_window_context_request_t xcb_out;

    xcb_out.window = window;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_window_context_cookie_t
xcb_selinux_get_window_context_unchecked (xcb_connection_t *c,
                                          xcb_window_t      window)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_WINDOW_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_window_context_cookie_t xcb_ret;
    xcb_selinux_get_window_context_request_t xcb_out;

    xcb_out.window = window;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_window_context_context (const xcb_selinux_get_window_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_window_context_context_length (const xcb_selinux_get_window_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_window_context_context_end (const xcb_selinux_get_window_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_window_context_reply_t *
xcb_selinux_get_window_context_reply (xcb_connection_t                         *c,
                                      xcb_selinux_get_window_context_cookie_t   cookie  /**< */,
                                      xcb_generic_error_t                     **e)
{
    return (xcb_selinux_get_window_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_list_item_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_list_item_t *_aux = (xcb_selinux_list_item_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_list_item_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* object_context */
    xcb_block_len += _aux->object_context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    xcb_align_to = 4;
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;
    /* data_context */
    xcb_block_len += _aux->data_context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    xcb_align_to = 4;
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

char *
xcb_selinux_list_item_object_context (const xcb_selinux_list_item_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_list_item_object_context_length (const xcb_selinux_list_item_t *R)
{
    return R->object_context_len;
}

xcb_generic_iterator_t
xcb_selinux_list_item_object_context_end (const xcb_selinux_list_item_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->object_context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

char *
xcb_selinux_list_item_data_context (const xcb_selinux_list_item_t *R)
{
    xcb_generic_iterator_t prev = xcb_selinux_list_item_object_context_end(R);
    return (char *) ((char *) prev.data + ((-prev.index) & (4 - 1)) + 0);
}

int
xcb_selinux_list_item_data_context_length (const xcb_selinux_list_item_t *R)
{
    return R->data_context_len;
}

xcb_generic_iterator_t
xcb_selinux_list_item_data_context_end (const xcb_selinux_list_item_t *R)
{
    xcb_generic_iterator_t i;
    xcb_generic_iterator_t prev = xcb_selinux_list_item_object_context_end(R);
    i.data = ((char *) ((char*) prev.data + ((-prev.index) & (4 - 1)))) + (R->data_context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

void
xcb_selinux_list_item_next (xcb_selinux_list_item_iterator_t *i)
{
    xcb_selinux_list_item_t *R = i->data;
    xcb_generic_iterator_t child;
    child.data = (xcb_selinux_list_item_t *)(((char *)R) + xcb_selinux_list_item_sizeof(R));
    i->index = (char *) child.data - (char *) i->data;
    --i->rem;
    i->data = (xcb_selinux_list_item_t *) child.data;
}

xcb_generic_iterator_t
xcb_selinux_list_item_end (xcb_selinux_list_item_iterator_t i)
{
    xcb_generic_iterator_t ret;
    while(i.rem > 0)
        xcb_selinux_list_item_next(&i);
    ret.data = i.data;
    ret.rem = i.rem;
    ret.index = i.index;
    return ret;
}

int
xcb_selinux_set_property_create_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_set_property_create_context_request_t *_aux = (xcb_selinux_set_property_create_context_request_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_set_property_create_context_request_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_void_cookie_t
xcb_selinux_set_property_create_context_checked (xcb_connection_t *c,
                                                 uint32_t          context_len,
                                                 const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_PROPERTY_CREATE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_property_create_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_void_cookie_t
xcb_selinux_set_property_create_context (xcb_connection_t *c,
                                         uint32_t          context_len,
                                         const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_PROPERTY_CREATE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_property_create_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_set_property_create_context_context (const xcb_selinux_set_property_create_context_request_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_set_property_create_context_context_length (const xcb_selinux_set_property_create_context_request_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_set_property_create_context_context_end (const xcb_selinux_set_property_create_context_request_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

int
xcb_selinux_get_property_create_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_property_create_context_reply_t *_aux = (xcb_selinux_get_property_create_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_property_create_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_property_create_context_cookie_t
xcb_selinux_get_property_create_context (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_PROPERTY_CREATE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_property_create_context_cookie_t xcb_ret;
    xcb_selinux_get_property_create_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_property_create_context_cookie_t
xcb_selinux_get_property_create_context_unchecked (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_PROPERTY_CREATE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_property_create_context_cookie_t xcb_ret;
    xcb_selinux_get_property_create_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_property_create_context_context (const xcb_selinux_get_property_create_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_property_create_context_context_length (const xcb_selinux_get_property_create_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_property_create_context_context_end (const xcb_selinux_get_property_create_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_property_create_context_reply_t *
xcb_selinux_get_property_create_context_reply (xcb_connection_t                                  *c,
                                               xcb_selinux_get_property_create_context_cookie_t   cookie  /**< */,
                                               xcb_generic_error_t                              **e)
{
    return (xcb_selinux_get_property_create_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_set_property_use_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_set_property_use_context_request_t *_aux = (xcb_selinux_set_property_use_context_request_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_set_property_use_context_request_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_void_cookie_t
xcb_selinux_set_property_use_context_checked (xcb_connection_t *c,
                                              uint32_t          context_len,
                                              const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_PROPERTY_USE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_property_use_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_void_cookie_t
xcb_selinux_set_property_use_context (xcb_connection_t *c,
                                      uint32_t          context_len,
                                      const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_PROPERTY_USE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_property_use_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_set_property_use_context_context (const xcb_selinux_set_property_use_context_request_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_set_property_use_context_context_length (const xcb_selinux_set_property_use_context_request_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_set_property_use_context_context_end (const xcb_selinux_set_property_use_context_request_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

int
xcb_selinux_get_property_use_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_property_use_context_reply_t *_aux = (xcb_selinux_get_property_use_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_property_use_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_property_use_context_cookie_t
xcb_selinux_get_property_use_context (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_PROPERTY_USE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_property_use_context_cookie_t xcb_ret;
    xcb_selinux_get_property_use_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_property_use_context_cookie_t
xcb_selinux_get_property_use_context_unchecked (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_PROPERTY_USE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_property_use_context_cookie_t xcb_ret;
    xcb_selinux_get_property_use_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_property_use_context_context (const xcb_selinux_get_property_use_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_property_use_context_context_length (const xcb_selinux_get_property_use_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_property_use_context_context_end (const xcb_selinux_get_property_use_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_property_use_context_reply_t *
xcb_selinux_get_property_use_context_reply (xcb_connection_t                               *c,
                                            xcb_selinux_get_property_use_context_cookie_t   cookie  /**< */,
                                            xcb_generic_error_t                           **e)
{
    return (xcb_selinux_get_property_use_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_get_property_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_property_context_reply_t *_aux = (xcb_selinux_get_property_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_property_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_property_context_cookie_t
xcb_selinux_get_property_context (xcb_connection_t *c,
                                  xcb_window_t      window,
                                  xcb_atom_t        property)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_PROPERTY_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_property_context_cookie_t xcb_ret;
    xcb_selinux_get_property_context_request_t xcb_out;

    xcb_out.window = window;
    xcb_out.property = property;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_property_context_cookie_t
xcb_selinux_get_property_context_unchecked (xcb_connection_t *c,
                                            xcb_window_t      window,
                                            xcb_atom_t        property)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_PROPERTY_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_property_context_cookie_t xcb_ret;
    xcb_selinux_get_property_context_request_t xcb_out;

    xcb_out.window = window;
    xcb_out.property = property;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_property_context_context (const xcb_selinux_get_property_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_property_context_context_length (const xcb_selinux_get_property_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_property_context_context_end (const xcb_selinux_get_property_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_property_context_reply_t *
xcb_selinux_get_property_context_reply (xcb_connection_t                           *c,
                                        xcb_selinux_get_property_context_cookie_t   cookie  /**< */,
                                        xcb_generic_error_t                       **e)
{
    return (xcb_selinux_get_property_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_get_property_data_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_property_data_context_reply_t *_aux = (xcb_selinux_get_property_data_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_property_data_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_property_data_context_cookie_t
xcb_selinux_get_property_data_context (xcb_connection_t *c,
                                       xcb_window_t      window,
                                       xcb_atom_t        property)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_PROPERTY_DATA_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_property_data_context_cookie_t xcb_ret;
    xcb_selinux_get_property_data_context_request_t xcb_out;

    xcb_out.window = window;
    xcb_out.property = property;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_property_data_context_cookie_t
xcb_selinux_get_property_data_context_unchecked (xcb_connection_t *c,
                                                 xcb_window_t      window,
                                                 xcb_atom_t        property)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_PROPERTY_DATA_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_property_data_context_cookie_t xcb_ret;
    xcb_selinux_get_property_data_context_request_t xcb_out;

    xcb_out.window = window;
    xcb_out.property = property;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_property_data_context_context (const xcb_selinux_get_property_data_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_property_data_context_context_length (const xcb_selinux_get_property_data_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_property_data_context_context_end (const xcb_selinux_get_property_data_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_property_data_context_reply_t *
xcb_selinux_get_property_data_context_reply (xcb_connection_t                                *c,
                                             xcb_selinux_get_property_data_context_cookie_t   cookie  /**< */,
                                             xcb_generic_error_t                            **e)
{
    return (xcb_selinux_get_property_data_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_list_properties_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_list_properties_reply_t *_aux = (xcb_selinux_list_properties_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;

    unsigned int i;
    unsigned int xcb_tmp_len;

    xcb_block_len += sizeof(xcb_selinux_list_properties_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* properties */
    for(i=0; i<_aux->properties_len; i++) {
        xcb_tmp_len = xcb_selinux_list_item_sizeof(xcb_tmp);
        xcb_block_len += xcb_tmp_len;
        xcb_tmp += xcb_tmp_len;
    }
    xcb_align_to = ALIGNOF(xcb_selinux_list_item_t);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_list_properties_cookie_t
xcb_selinux_list_properties (xcb_connection_t *c,
                             xcb_window_t      window)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_LIST_PROPERTIES,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_list_properties_cookie_t xcb_ret;
    xcb_selinux_list_properties_request_t xcb_out;

    xcb_out.window = window;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_list_properties_cookie_t
xcb_selinux_list_properties_unchecked (xcb_connection_t *c,
                                       xcb_window_t      window)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_LIST_PROPERTIES,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_list_properties_cookie_t xcb_ret;
    xcb_selinux_list_properties_request_t xcb_out;

    xcb_out.window = window;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

int
xcb_selinux_list_properties_properties_length (const xcb_selinux_list_properties_reply_t *R)
{
    return R->properties_len;
}

xcb_selinux_list_item_iterator_t
xcb_selinux_list_properties_properties_iterator (const xcb_selinux_list_properties_reply_t *R)
{
    xcb_selinux_list_item_iterator_t i;
    i.data = (xcb_selinux_list_item_t *) (R + 1);
    i.rem = R->properties_len;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_list_properties_reply_t *
xcb_selinux_list_properties_reply (xcb_connection_t                      *c,
                                   xcb_selinux_list_properties_cookie_t   cookie  /**< */,
                                   xcb_generic_error_t                  **e)
{
    return (xcb_selinux_list_properties_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_set_selection_create_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_set_selection_create_context_request_t *_aux = (xcb_selinux_set_selection_create_context_request_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_set_selection_create_context_request_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_void_cookie_t
xcb_selinux_set_selection_create_context_checked (xcb_connection_t *c,
                                                  uint32_t          context_len,
                                                  const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_SELECTION_CREATE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_selection_create_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_void_cookie_t
xcb_selinux_set_selection_create_context (xcb_connection_t *c,
                                          uint32_t          context_len,
                                          const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_SELECTION_CREATE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_selection_create_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_set_selection_create_context_context (const xcb_selinux_set_selection_create_context_request_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_set_selection_create_context_context_length (const xcb_selinux_set_selection_create_context_request_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_set_selection_create_context_context_end (const xcb_selinux_set_selection_create_context_request_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

int
xcb_selinux_get_selection_create_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_selection_create_context_reply_t *_aux = (xcb_selinux_get_selection_create_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_selection_create_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_selection_create_context_cookie_t
xcb_selinux_get_selection_create_context (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_SELECTION_CREATE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_selection_create_context_cookie_t xcb_ret;
    xcb_selinux_get_selection_create_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_selection_create_context_cookie_t
xcb_selinux_get_selection_create_context_unchecked (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_SELECTION_CREATE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_selection_create_context_cookie_t xcb_ret;
    xcb_selinux_get_selection_create_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_selection_create_context_context (const xcb_selinux_get_selection_create_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_selection_create_context_context_length (const xcb_selinux_get_selection_create_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_selection_create_context_context_end (const xcb_selinux_get_selection_create_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_selection_create_context_reply_t *
xcb_selinux_get_selection_create_context_reply (xcb_connection_t                                   *c,
                                                xcb_selinux_get_selection_create_context_cookie_t   cookie  /**< */,
                                                xcb_generic_error_t                               **e)
{
    return (xcb_selinux_get_selection_create_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_set_selection_use_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_set_selection_use_context_request_t *_aux = (xcb_selinux_set_selection_use_context_request_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_set_selection_use_context_request_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_void_cookie_t
xcb_selinux_set_selection_use_context_checked (xcb_connection_t *c,
                                               uint32_t          context_len,
                                               const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_SELECTION_USE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_selection_use_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_void_cookie_t
xcb_selinux_set_selection_use_context (xcb_connection_t *c,
                                       uint32_t          context_len,
                                       const char       *context)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 4,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_SET_SELECTION_USE_CONTEXT,
        .isvoid = 1
    };

    struct iovec xcb_parts[6];
    xcb_void_cookie_t xcb_ret;
    xcb_selinux_set_selection_use_context_request_t xcb_out;

    xcb_out.context_len = context_len;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;
    /* char context */
    xcb_parts[4].iov_base = (char *) context;
    xcb_parts[4].iov_len = context_len * sizeof(char);
    xcb_parts[5].iov_base = 0;
    xcb_parts[5].iov_len = -xcb_parts[4].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_set_selection_use_context_context (const xcb_selinux_set_selection_use_context_request_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_set_selection_use_context_context_length (const xcb_selinux_set_selection_use_context_request_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_set_selection_use_context_context_end (const xcb_selinux_set_selection_use_context_request_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

int
xcb_selinux_get_selection_use_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_selection_use_context_reply_t *_aux = (xcb_selinux_get_selection_use_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_selection_use_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_selection_use_context_cookie_t
xcb_selinux_get_selection_use_context (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_SELECTION_USE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_selection_use_context_cookie_t xcb_ret;
    xcb_selinux_get_selection_use_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_selection_use_context_cookie_t
xcb_selinux_get_selection_use_context_unchecked (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_SELECTION_USE_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_selection_use_context_cookie_t xcb_ret;
    xcb_selinux_get_selection_use_context_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_selection_use_context_context (const xcb_selinux_get_selection_use_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_selection_use_context_context_length (const xcb_selinux_get_selection_use_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_selection_use_context_context_end (const xcb_selinux_get_selection_use_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_selection_use_context_reply_t *
xcb_selinux_get_selection_use_context_reply (xcb_connection_t                                *c,
                                             xcb_selinux_get_selection_use_context_cookie_t   cookie  /**< */,
                                             xcb_generic_error_t                            **e)
{
    return (xcb_selinux_get_selection_use_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_get_selection_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_selection_context_reply_t *_aux = (xcb_selinux_get_selection_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_selection_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_selection_context_cookie_t
xcb_selinux_get_selection_context (xcb_connection_t *c,
                                   xcb_atom_t        selection)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_SELECTION_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_selection_context_cookie_t xcb_ret;
    xcb_selinux_get_selection_context_request_t xcb_out;

    xcb_out.selection = selection;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_selection_context_cookie_t
xcb_selinux_get_selection_context_unchecked (xcb_connection_t *c,
                                             xcb_atom_t        selection)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_SELECTION_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_selection_context_cookie_t xcb_ret;
    xcb_selinux_get_selection_context_request_t xcb_out;

    xcb_out.selection = selection;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_selection_context_context (const xcb_selinux_get_selection_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_selection_context_context_length (const xcb_selinux_get_selection_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_selection_context_context_end (const xcb_selinux_get_selection_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_selection_context_reply_t *
xcb_selinux_get_selection_context_reply (xcb_connection_t                            *c,
                                         xcb_selinux_get_selection_context_cookie_t   cookie  /**< */,
                                         xcb_generic_error_t                        **e)
{
    return (xcb_selinux_get_selection_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_get_selection_data_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_selection_data_context_reply_t *_aux = (xcb_selinux_get_selection_data_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_selection_data_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_selection_data_context_cookie_t
xcb_selinux_get_selection_data_context (xcb_connection_t *c,
                                        xcb_atom_t        selection)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_SELECTION_DATA_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_selection_data_context_cookie_t xcb_ret;
    xcb_selinux_get_selection_data_context_request_t xcb_out;

    xcb_out.selection = selection;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_selection_data_context_cookie_t
xcb_selinux_get_selection_data_context_unchecked (xcb_connection_t *c,
                                                  xcb_atom_t        selection)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_SELECTION_DATA_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_selection_data_context_cookie_t xcb_ret;
    xcb_selinux_get_selection_data_context_request_t xcb_out;

    xcb_out.selection = selection;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_selection_data_context_context (const xcb_selinux_get_selection_data_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_selection_data_context_context_length (const xcb_selinux_get_selection_data_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_selection_data_context_context_end (const xcb_selinux_get_selection_data_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_selection_data_context_reply_t *
xcb_selinux_get_selection_data_context_reply (xcb_connection_t                                 *c,
                                              xcb_selinux_get_selection_data_context_cookie_t   cookie  /**< */,
                                              xcb_generic_error_t                             **e)
{
    return (xcb_selinux_get_selection_data_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_list_selections_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_list_selections_reply_t *_aux = (xcb_selinux_list_selections_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;

    unsigned int i;
    unsigned int xcb_tmp_len;

    xcb_block_len += sizeof(xcb_selinux_list_selections_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* selections */
    for(i=0; i<_aux->selections_len; i++) {
        xcb_tmp_len = xcb_selinux_list_item_sizeof(xcb_tmp);
        xcb_block_len += xcb_tmp_len;
        xcb_tmp += xcb_tmp_len;
    }
    xcb_align_to = ALIGNOF(xcb_selinux_list_item_t);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_list_selections_cookie_t
xcb_selinux_list_selections (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_LIST_SELECTIONS,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_list_selections_cookie_t xcb_ret;
    xcb_selinux_list_selections_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_list_selections_cookie_t
xcb_selinux_list_selections_unchecked (xcb_connection_t *c)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_LIST_SELECTIONS,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_list_selections_cookie_t xcb_ret;
    xcb_selinux_list_selections_request_t xcb_out;


    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

int
xcb_selinux_list_selections_selections_length (const xcb_selinux_list_selections_reply_t *R)
{
    return R->selections_len;
}

xcb_selinux_list_item_iterator_t
xcb_selinux_list_selections_selections_iterator (const xcb_selinux_list_selections_reply_t *R)
{
    xcb_selinux_list_item_iterator_t i;
    i.data = (xcb_selinux_list_item_t *) (R + 1);
    i.rem = R->selections_len;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_list_selections_reply_t *
xcb_selinux_list_selections_reply (xcb_connection_t                      *c,
                                   xcb_selinux_list_selections_cookie_t   cookie  /**< */,
                                   xcb_generic_error_t                  **e)
{
    return (xcb_selinux_list_selections_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

int
xcb_selinux_get_client_context_sizeof (const void  *_buffer)
{
    char *xcb_tmp = (char *)_buffer;
    const xcb_selinux_get_client_context_reply_t *_aux = (xcb_selinux_get_client_context_reply_t *)_buffer;
    unsigned int xcb_buffer_len = 0;
    unsigned int xcb_block_len = 0;
    unsigned int xcb_pad = 0;
    unsigned int xcb_align_to = 0;


    xcb_block_len += sizeof(xcb_selinux_get_client_context_reply_t);
    xcb_tmp += xcb_block_len;
    xcb_buffer_len += xcb_block_len;
    xcb_block_len = 0;
    /* context */
    xcb_block_len += _aux->context_len * sizeof(char);
    xcb_tmp += xcb_block_len;
    xcb_align_to = ALIGNOF(char);
    /* insert padding */
    xcb_pad = -xcb_block_len & (xcb_align_to - 1);
    xcb_buffer_len += xcb_block_len + xcb_pad;
    if (0 != xcb_pad) {
        xcb_tmp += xcb_pad;
        xcb_pad = 0;
    }
    xcb_block_len = 0;

    return xcb_buffer_len;
}

xcb_selinux_get_client_context_cookie_t
xcb_selinux_get_client_context (xcb_connection_t *c,
                                uint32_t          resource)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_CLIENT_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_client_context_cookie_t xcb_ret;
    xcb_selinux_get_client_context_request_t xcb_out;

    xcb_out.resource = resource;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, XCB_REQUEST_CHECKED, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

xcb_selinux_get_client_context_cookie_t
xcb_selinux_get_client_context_unchecked (xcb_connection_t *c,
                                          uint32_t          resource)
{
    static const xcb_protocol_request_t xcb_req = {
        .count = 2,
        .ext = &xcb_selinux_id,
        .opcode = XCB_SELINUX_GET_CLIENT_CONTEXT,
        .isvoid = 0
    };

    struct iovec xcb_parts[4];
    xcb_selinux_get_client_context_cookie_t xcb_ret;
    xcb_selinux_get_client_context_request_t xcb_out;

    xcb_out.resource = resource;

    xcb_parts[2].iov_base = (char *) &xcb_out;
    xcb_parts[2].iov_len = sizeof(xcb_out);
    xcb_parts[3].iov_base = 0;
    xcb_parts[3].iov_len = -xcb_parts[2].iov_len & 3;

    xcb_ret.sequence = xcb_send_request(c, 0, xcb_parts + 2, &xcb_req);
    return xcb_ret;
}

char *
xcb_selinux_get_client_context_context (const xcb_selinux_get_client_context_reply_t *R)
{
    return (char *) (R + 1);
}

int
xcb_selinux_get_client_context_context_length (const xcb_selinux_get_client_context_reply_t *R)
{
    return R->context_len;
}

xcb_generic_iterator_t
xcb_selinux_get_client_context_context_end (const xcb_selinux_get_client_context_reply_t *R)
{
    xcb_generic_iterator_t i;
    i.data = ((char *) (R + 1)) + (R->context_len);
    i.rem = 0;
    i.index = (char *) i.data - (char *) R;
    return i;
}

xcb_selinux_get_client_context_reply_t *
xcb_selinux_get_client_context_reply (xcb_connection_t                         *c,
                                      xcb_selinux_get_client_context_cookie_t   cookie  /**< */,
                                      xcb_generic_error_t                     **e)
{
    return (xcb_selinux_get_client_context_reply_t *) xcb_wait_for_reply(c, cookie.sequence, e);
}

@


1.4
log
@Update to libxcb and xcb-proto 1.11.
Tested on a bulk ports build by naddy@@.
Lots of churn due to white-space and comments changes in generated code.
@
text
@d22 3
a24 3
xcb_selinux_query_version (xcb_connection_t *c  /**< */,
                           uint8_t           client_major  /**< */,
                           uint8_t           client_minor  /**< */)
d27 4
a30 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_QUERY_VERSION,
        /* isvoid */ 0
d50 3
a52 3
xcb_selinux_query_version_unchecked (xcb_connection_t *c  /**< */,
                                     uint8_t           client_major  /**< */,
                                     uint8_t           client_minor  /**< */)
d55 4
a58 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_QUERY_VERSION,
        /* isvoid */ 0
d78 1
a78 1
xcb_selinux_query_version_reply (xcb_connection_t                    *c  /**< */,
d80 1
a80 1
                                 xcb_generic_error_t                **e  /**< */)
d86 1
a86 1
xcb_selinux_set_device_create_context_sizeof (const void  *_buffer  /**< */)
d117 3
a119 3
xcb_selinux_set_device_create_context_checked (xcb_connection_t *c  /**< */,
                                               uint32_t          context_len  /**< */,
                                               const char       *context  /**< */)
d122 4
a125 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_DEVICE_CREATE_CONTEXT,
        /* isvoid */ 1
d149 3
a151 3
xcb_selinux_set_device_create_context (xcb_connection_t *c  /**< */,
                                       uint32_t          context_len  /**< */,
                                       const char       *context  /**< */)
d154 4
a157 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_DEVICE_CREATE_CONTEXT,
        /* isvoid */ 1
d180 22
d203 1
a203 1
xcb_selinux_get_device_create_context_sizeof (const void  *_buffer  /**< */)
d234 1
a234 1
xcb_selinux_get_device_create_context (xcb_connection_t *c  /**< */)
d237 4
a240 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_DEVICE_CREATE_CONTEXT,
        /* isvoid */ 0
d258 1
a258 1
xcb_selinux_get_device_create_context_unchecked (xcb_connection_t *c  /**< */)
d261 4
a264 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_DEVICE_CREATE_CONTEXT,
        /* isvoid */ 0
d282 1
a282 1
xcb_selinux_get_device_create_context_context (const xcb_selinux_get_device_create_context_reply_t *R  /**< */)
d288 1
a288 1
xcb_selinux_get_device_create_context_context_length (const xcb_selinux_get_device_create_context_reply_t *R  /**< */)
d294 1
a294 1
xcb_selinux_get_device_create_context_context_end (const xcb_selinux_get_device_create_context_reply_t *R  /**< */)
d304 1
a304 1
xcb_selinux_get_device_create_context_reply (xcb_connection_t                                *c  /**< */,
d306 1
a306 1
                                             xcb_generic_error_t                            **e  /**< */)
d312 1
a312 1
xcb_selinux_set_device_context_sizeof (const void  *_buffer  /**< */)
d343 4
a346 4
xcb_selinux_set_device_context_checked (xcb_connection_t *c  /**< */,
                                        uint32_t          device  /**< */,
                                        uint32_t          context_len  /**< */,
                                        const char       *context  /**< */)
d349 4
a352 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_DEVICE_CONTEXT,
        /* isvoid */ 1
d377 4
a380 4
xcb_selinux_set_device_context (xcb_connection_t *c  /**< */,
                                uint32_t          device  /**< */,
                                uint32_t          context_len  /**< */,
                                const char       *context  /**< */)
d383 4
a386 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_DEVICE_CONTEXT,
        /* isvoid */ 1
d410 22
d433 1
a433 1
xcb_selinux_get_device_context_sizeof (const void  *_buffer  /**< */)
d464 2
a465 2
xcb_selinux_get_device_context (xcb_connection_t *c  /**< */,
                                uint32_t          device  /**< */)
d468 4
a471 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_DEVICE_CONTEXT,
        /* isvoid */ 0
d490 2
a491 2
xcb_selinux_get_device_context_unchecked (xcb_connection_t *c  /**< */,
                                          uint32_t          device  /**< */)
d494 4
a497 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_DEVICE_CONTEXT,
        /* isvoid */ 0
d516 1
a516 1
xcb_selinux_get_device_context_context (const xcb_selinux_get_device_context_reply_t *R  /**< */)
d522 1
a522 1
xcb_selinux_get_device_context_context_length (const xcb_selinux_get_device_context_reply_t *R  /**< */)
d528 1
a528 1
xcb_selinux_get_device_context_context_end (const xcb_selinux_get_device_context_reply_t *R  /**< */)
d538 1
a538 1
xcb_selinux_get_device_context_reply (xcb_connection_t                         *c  /**< */,
d540 1
a540 1
                                      xcb_generic_error_t                     **e  /**< */)
d546 1
a546 1
xcb_selinux_set_window_create_context_sizeof (const void  *_buffer  /**< */)
d577 3
a579 3
xcb_selinux_set_window_create_context_checked (xcb_connection_t *c  /**< */,
                                               uint32_t          context_len  /**< */,
                                               const char       *context  /**< */)
d582 4
a585 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_WINDOW_CREATE_CONTEXT,
        /* isvoid */ 1
d609 3
a611 3
xcb_selinux_set_window_create_context (xcb_connection_t *c  /**< */,
                                       uint32_t          context_len  /**< */,
                                       const char       *context  /**< */)
d614 4
a617 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_WINDOW_CREATE_CONTEXT,
        /* isvoid */ 1
d640 22
d663 1
a663 1
xcb_selinux_get_window_create_context_sizeof (const void  *_buffer  /**< */)
d694 1
a694 1
xcb_selinux_get_window_create_context (xcb_connection_t *c  /**< */)
d697 4
a700 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_WINDOW_CREATE_CONTEXT,
        /* isvoid */ 0
d718 1
a718 1
xcb_selinux_get_window_create_context_unchecked (xcb_connection_t *c  /**< */)
d721 4
a724 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_WINDOW_CREATE_CONTEXT,
        /* isvoid */ 0
d742 1
a742 1
xcb_selinux_get_window_create_context_context (const xcb_selinux_get_window_create_context_reply_t *R  /**< */)
d748 1
a748 1
xcb_selinux_get_window_create_context_context_length (const xcb_selinux_get_window_create_context_reply_t *R  /**< */)
d754 1
a754 1
xcb_selinux_get_window_create_context_context_end (const xcb_selinux_get_window_create_context_reply_t *R  /**< */)
d764 1
a764 1
xcb_selinux_get_window_create_context_reply (xcb_connection_t                                *c  /**< */,
d766 1
a766 1
                                             xcb_generic_error_t                            **e  /**< */)
d772 1
a772 1
xcb_selinux_get_window_context_sizeof (const void  *_buffer  /**< */)
d803 2
a804 2
xcb_selinux_get_window_context (xcb_connection_t *c  /**< */,
                                xcb_window_t      window  /**< */)
d807 4
a810 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_WINDOW_CONTEXT,
        /* isvoid */ 0
d829 2
a830 2
xcb_selinux_get_window_context_unchecked (xcb_connection_t *c  /**< */,
                                          xcb_window_t      window  /**< */)
d833 4
a836 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_WINDOW_CONTEXT,
        /* isvoid */ 0
d855 1
a855 1
xcb_selinux_get_window_context_context (const xcb_selinux_get_window_context_reply_t *R  /**< */)
d861 1
a861 1
xcb_selinux_get_window_context_context_length (const xcb_selinux_get_window_context_reply_t *R  /**< */)
d867 1
a867 1
xcb_selinux_get_window_context_context_end (const xcb_selinux_get_window_context_reply_t *R  /**< */)
d877 1
a877 1
xcb_selinux_get_window_context_reply (xcb_connection_t                         *c  /**< */,
d879 1
a879 1
                                      xcb_generic_error_t                     **e  /**< */)
d885 1
a885 1
xcb_selinux_list_item_sizeof (const void  *_buffer  /**< */)
d903 9
d924 9
d946 1
a946 1
xcb_selinux_list_item_object_context (const xcb_selinux_list_item_t *R  /**< */)
d952 1
a952 1
xcb_selinux_list_item_object_context_length (const xcb_selinux_list_item_t *R  /**< */)
d958 1
a958 1
xcb_selinux_list_item_object_context_end (const xcb_selinux_list_item_t *R  /**< */)
d968 1
a968 1
xcb_selinux_list_item_data_context (const xcb_selinux_list_item_t *R  /**< */)
d971 1
a971 1
    return (char *) ((char *) prev.data + XCB_TYPE_PAD(char, prev.index) + 0);
d975 1
a975 1
xcb_selinux_list_item_data_context_length (const xcb_selinux_list_item_t *R  /**< */)
d981 1
a981 1
xcb_selinux_list_item_data_context_end (const xcb_selinux_list_item_t *R  /**< */)
d984 2
a985 2
    xcb_generic_iterator_t child = xcb_selinux_list_item_object_context_end(R);
    i.data = ((char *) child.data) + (R->data_context_len);
d992 1
a992 1
xcb_selinux_list_item_next (xcb_selinux_list_item_iterator_t *i  /**< */)
d1003 1
a1003 1
xcb_selinux_list_item_end (xcb_selinux_list_item_iterator_t i  /**< */)
d1015 1
a1015 1
xcb_selinux_set_property_create_context_sizeof (const void  *_buffer  /**< */)
d1046 3
a1048 3
xcb_selinux_set_property_create_context_checked (xcb_connection_t *c  /**< */,
                                                 uint32_t          context_len  /**< */,
                                                 const char       *context  /**< */)
d1051 4
a1054 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_PROPERTY_CREATE_CONTEXT,
        /* isvoid */ 1
d1078 3
a1080 3
xcb_selinux_set_property_create_context (xcb_connection_t *c  /**< */,
                                         uint32_t          context_len  /**< */,
                                         const char       *context  /**< */)
d1083 4
a1086 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_PROPERTY_CREATE_CONTEXT,
        /* isvoid */ 1
d1109 6
d1116 17
a1132 1
xcb_selinux_get_property_create_context_sizeof (const void  *_buffer  /**< */)
d1163 1
a1163 1
xcb_selinux_get_property_create_context (xcb_connection_t *c  /**< */)
d1166 4
a1169 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_PROPERTY_CREATE_CONTEXT,
        /* isvoid */ 0
d1187 1
a1187 1
xcb_selinux_get_property_create_context_unchecked (xcb_connection_t *c  /**< */)
d1190 4
a1193 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_PROPERTY_CREATE_CONTEXT,
        /* isvoid */ 0
d1211 1
a1211 1
xcb_selinux_get_property_create_context_context (const xcb_selinux_get_property_create_context_reply_t *R  /**< */)
d1217 1
a1217 1
xcb_selinux_get_property_create_context_context_length (const xcb_selinux_get_property_create_context_reply_t *R  /**< */)
d1223 1
a1223 1
xcb_selinux_get_property_create_context_context_end (const xcb_selinux_get_property_create_context_reply_t *R  /**< */)
d1233 1
a1233 1
xcb_selinux_get_property_create_context_reply (xcb_connection_t                                  *c  /**< */,
d1235 1
a1235 1
                                               xcb_generic_error_t                              **e  /**< */)
d1241 1
a1241 1
xcb_selinux_set_property_use_context_sizeof (const void  *_buffer  /**< */)
d1272 3
a1274 3
xcb_selinux_set_property_use_context_checked (xcb_connection_t *c  /**< */,
                                              uint32_t          context_len  /**< */,
                                              const char       *context  /**< */)
d1277 4
a1280 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_PROPERTY_USE_CONTEXT,
        /* isvoid */ 1
d1304 3
a1306 3
xcb_selinux_set_property_use_context (xcb_connection_t *c  /**< */,
                                      uint32_t          context_len  /**< */,
                                      const char       *context  /**< */)
d1309 4
a1312 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_PROPERTY_USE_CONTEXT,
        /* isvoid */ 1
d1335 6
d1342 17
a1358 1
xcb_selinux_get_property_use_context_sizeof (const void  *_buffer  /**< */)
d1389 1
a1389 1
xcb_selinux_get_property_use_context (xcb_connection_t *c  /**< */)
d1392 4
a1395 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_PROPERTY_USE_CONTEXT,
        /* isvoid */ 0
d1413 1
a1413 1
xcb_selinux_get_property_use_context_unchecked (xcb_connection_t *c  /**< */)
d1416 4
a1419 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_PROPERTY_USE_CONTEXT,
        /* isvoid */ 0
d1437 1
a1437 1
xcb_selinux_get_property_use_context_context (const xcb_selinux_get_property_use_context_reply_t *R  /**< */)
d1443 1
a1443 1
xcb_selinux_get_property_use_context_context_length (const xcb_selinux_get_property_use_context_reply_t *R  /**< */)
d1449 1
a1449 1
xcb_selinux_get_property_use_context_context_end (const xcb_selinux_get_property_use_context_reply_t *R  /**< */)
d1459 1
a1459 1
xcb_selinux_get_property_use_context_reply (xcb_connection_t                               *c  /**< */,
d1461 1
a1461 1
                                            xcb_generic_error_t                           **e  /**< */)
d1467 1
a1467 1
xcb_selinux_get_property_context_sizeof (const void  *_buffer  /**< */)
d1498 3
a1500 3
xcb_selinux_get_property_context (xcb_connection_t *c  /**< */,
                                  xcb_window_t      window  /**< */,
                                  xcb_atom_t        property  /**< */)
d1503 4
a1506 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_PROPERTY_CONTEXT,
        /* isvoid */ 0
d1526 3
a1528 3
xcb_selinux_get_property_context_unchecked (xcb_connection_t *c  /**< */,
                                            xcb_window_t      window  /**< */,
                                            xcb_atom_t        property  /**< */)
d1531 4
a1534 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_PROPERTY_CONTEXT,
        /* isvoid */ 0
d1554 1
a1554 1
xcb_selinux_get_property_context_context (const xcb_selinux_get_property_context_reply_t *R  /**< */)
d1560 1
a1560 1
xcb_selinux_get_property_context_context_length (const xcb_selinux_get_property_context_reply_t *R  /**< */)
d1566 1
a1566 1
xcb_selinux_get_property_context_context_end (const xcb_selinux_get_property_context_reply_t *R  /**< */)
d1576 1
a1576 1
xcb_selinux_get_property_context_reply (xcb_connection_t                           *c  /**< */,
d1578 1
a1578 1
                                        xcb_generic_error_t                       **e  /**< */)
d1584 1
a1584 1
xcb_selinux_get_property_data_context_sizeof (const void  *_buffer  /**< */)
d1615 3
a1617 3
xcb_selinux_get_property_data_context (xcb_connection_t *c  /**< */,
                                       xcb_window_t      window  /**< */,
                                       xcb_atom_t        property  /**< */)
d1620 4
a1623 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_PROPERTY_DATA_CONTEXT,
        /* isvoid */ 0
d1643 3
a1645 3
xcb_selinux_get_property_data_context_unchecked (xcb_connection_t *c  /**< */,
                                                 xcb_window_t      window  /**< */,
                                                 xcb_atom_t        property  /**< */)
d1648 4
a1651 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_PROPERTY_DATA_CONTEXT,
        /* isvoid */ 0
d1671 1
a1671 1
xcb_selinux_get_property_data_context_context (const xcb_selinux_get_property_data_context_reply_t *R  /**< */)
d1677 1
a1677 1
xcb_selinux_get_property_data_context_context_length (const xcb_selinux_get_property_data_context_reply_t *R  /**< */)
d1683 1
a1683 1
xcb_selinux_get_property_data_context_context_end (const xcb_selinux_get_property_data_context_reply_t *R  /**< */)
d1693 1
a1693 1
xcb_selinux_get_property_data_context_reply (xcb_connection_t                                *c  /**< */,
d1695 1
a1695 1
                                             xcb_generic_error_t                            **e  /**< */)
d1701 1
a1701 1
xcb_selinux_list_properties_sizeof (const void  *_buffer  /**< */)
d1737 2
a1738 2
xcb_selinux_list_properties (xcb_connection_t *c  /**< */,
                             xcb_window_t      window  /**< */)
d1741 4
a1744 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_LIST_PROPERTIES,
        /* isvoid */ 0
d1763 2
a1764 2
xcb_selinux_list_properties_unchecked (xcb_connection_t *c  /**< */,
                                       xcb_window_t      window  /**< */)
d1767 4
a1770 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_LIST_PROPERTIES,
        /* isvoid */ 0
d1789 1
a1789 1
xcb_selinux_list_properties_properties_length (const xcb_selinux_list_properties_reply_t *R  /**< */)
d1795 1
a1795 1
xcb_selinux_list_properties_properties_iterator (const xcb_selinux_list_properties_reply_t *R  /**< */)
d1805 1
a1805 1
xcb_selinux_list_properties_reply (xcb_connection_t                      *c  /**< */,
d1807 1
a1807 1
                                   xcb_generic_error_t                  **e  /**< */)
d1813 1
a1813 1
xcb_selinux_set_selection_create_context_sizeof (const void  *_buffer  /**< */)
d1844 3
a1846 3
xcb_selinux_set_selection_create_context_checked (xcb_connection_t *c  /**< */,
                                                  uint32_t          context_len  /**< */,
                                                  const char       *context  /**< */)
d1849 4
a1852 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_SELECTION_CREATE_CONTEXT,
        /* isvoid */ 1
d1876 3
a1878 3
xcb_selinux_set_selection_create_context (xcb_connection_t *c  /**< */,
                                          uint32_t          context_len  /**< */,
                                          const char       *context  /**< */)
d1881 4
a1884 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_SELECTION_CREATE_CONTEXT,
        /* isvoid */ 1
d1907 6
d1914 17
a1930 1
xcb_selinux_get_selection_create_context_sizeof (const void  *_buffer  /**< */)
d1961 1
a1961 1
xcb_selinux_get_selection_create_context (xcb_connection_t *c  /**< */)
d1964 4
a1967 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_SELECTION_CREATE_CONTEXT,
        /* isvoid */ 0
d1985 1
a1985 1
xcb_selinux_get_selection_create_context_unchecked (xcb_connection_t *c  /**< */)
d1988 4
a1991 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_SELECTION_CREATE_CONTEXT,
        /* isvoid */ 0
d2009 1
a2009 1
xcb_selinux_get_selection_create_context_context (const xcb_selinux_get_selection_create_context_reply_t *R  /**< */)
d2015 1
a2015 1
xcb_selinux_get_selection_create_context_context_length (const xcb_selinux_get_selection_create_context_reply_t *R  /**< */)
d2021 1
a2021 1
xcb_selinux_get_selection_create_context_context_end (const xcb_selinux_get_selection_create_context_reply_t *R  /**< */)
d2031 1
a2031 1
xcb_selinux_get_selection_create_context_reply (xcb_connection_t                                   *c  /**< */,
d2033 1
a2033 1
                                                xcb_generic_error_t                               **e  /**< */)
d2039 1
a2039 1
xcb_selinux_set_selection_use_context_sizeof (const void  *_buffer  /**< */)
d2070 3
a2072 3
xcb_selinux_set_selection_use_context_checked (xcb_connection_t *c  /**< */,
                                               uint32_t          context_len  /**< */,
                                               const char       *context  /**< */)
d2075 4
a2078 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_SELECTION_USE_CONTEXT,
        /* isvoid */ 1
d2102 3
a2104 3
xcb_selinux_set_selection_use_context (xcb_connection_t *c  /**< */,
                                       uint32_t          context_len  /**< */,
                                       const char       *context  /**< */)
d2107 4
a2110 4
        /* count */ 4,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_SET_SELECTION_USE_CONTEXT,
        /* isvoid */ 1
d2133 22
d2156 1
a2156 1
xcb_selinux_get_selection_use_context_sizeof (const void  *_buffer  /**< */)
d2187 1
a2187 1
xcb_selinux_get_selection_use_context (xcb_connection_t *c  /**< */)
d2190 4
a2193 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_SELECTION_USE_CONTEXT,
        /* isvoid */ 0
d2211 1
a2211 1
xcb_selinux_get_selection_use_context_unchecked (xcb_connection_t *c  /**< */)
d2214 4
a2217 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_SELECTION_USE_CONTEXT,
        /* isvoid */ 0
d2235 1
a2235 1
xcb_selinux_get_selection_use_context_context (const xcb_selinux_get_selection_use_context_reply_t *R  /**< */)
d2241 1
a2241 1
xcb_selinux_get_selection_use_context_context_length (const xcb_selinux_get_selection_use_context_reply_t *R  /**< */)
d2247 1
a2247 1
xcb_selinux_get_selection_use_context_context_end (const xcb_selinux_get_selection_use_context_reply_t *R  /**< */)
d2257 1
a2257 1
xcb_selinux_get_selection_use_context_reply (xcb_connection_t                                *c  /**< */,
d2259 1
a2259 1
                                             xcb_generic_error_t                            **e  /**< */)
d2265 1
a2265 1
xcb_selinux_get_selection_context_sizeof (const void  *_buffer  /**< */)
d2296 2
a2297 2
xcb_selinux_get_selection_context (xcb_connection_t *c  /**< */,
                                   xcb_atom_t        selection  /**< */)
d2300 4
a2303 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_SELECTION_CONTEXT,
        /* isvoid */ 0
d2322 2
a2323 2
xcb_selinux_get_selection_context_unchecked (xcb_connection_t *c  /**< */,
                                             xcb_atom_t        selection  /**< */)
d2326 4
a2329 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_SELECTION_CONTEXT,
        /* isvoid */ 0
d2348 1
a2348 1
xcb_selinux_get_selection_context_context (const xcb_selinux_get_selection_context_reply_t *R  /**< */)
d2354 1
a2354 1
xcb_selinux_get_selection_context_context_length (const xcb_selinux_get_selection_context_reply_t *R  /**< */)
d2360 1
a2360 1
xcb_selinux_get_selection_context_context_end (const xcb_selinux_get_selection_context_reply_t *R  /**< */)
d2370 1
a2370 1
xcb_selinux_get_selection_context_reply (xcb_connection_t                            *c  /**< */,
d2372 1
a2372 1
                                         xcb_generic_error_t                        **e  /**< */)
d2378 1
a2378 1
xcb_selinux_get_selection_data_context_sizeof (const void  *_buffer  /**< */)
d2409 2
a2410 2
xcb_selinux_get_selection_data_context (xcb_connection_t *c  /**< */,
                                        xcb_atom_t        selection  /**< */)
d2413 4
a2416 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_SELECTION_DATA_CONTEXT,
        /* isvoid */ 0
d2435 2
a2436 2
xcb_selinux_get_selection_data_context_unchecked (xcb_connection_t *c  /**< */,
                                                  xcb_atom_t        selection  /**< */)
d2439 4
a2442 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_SELECTION_DATA_CONTEXT,
        /* isvoid */ 0
d2461 1
a2461 1
xcb_selinux_get_selection_data_context_context (const xcb_selinux_get_selection_data_context_reply_t *R  /**< */)
d2467 1
a2467 1
xcb_selinux_get_selection_data_context_context_length (const xcb_selinux_get_selection_data_context_reply_t *R  /**< */)
d2473 1
a2473 1
xcb_selinux_get_selection_data_context_context_end (const xcb_selinux_get_selection_data_context_reply_t *R  /**< */)
d2483 1
a2483 1
xcb_selinux_get_selection_data_context_reply (xcb_connection_t                                 *c  /**< */,
d2485 1
a2485 1
                                              xcb_generic_error_t                             **e  /**< */)
d2491 1
a2491 1
xcb_selinux_list_selections_sizeof (const void  *_buffer  /**< */)
d2527 1
a2527 1
xcb_selinux_list_selections (xcb_connection_t *c  /**< */)
d2530 4
a2533 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_LIST_SELECTIONS,
        /* isvoid */ 0
d2551 1
a2551 1
xcb_selinux_list_selections_unchecked (xcb_connection_t *c  /**< */)
d2554 4
a2557 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_LIST_SELECTIONS,
        /* isvoid */ 0
d2575 1
a2575 1
xcb_selinux_list_selections_selections_length (const xcb_selinux_list_selections_reply_t *R  /**< */)
d2581 1
a2581 1
xcb_selinux_list_selections_selections_iterator (const xcb_selinux_list_selections_reply_t *R  /**< */)
d2591 1
a2591 1
xcb_selinux_list_selections_reply (xcb_connection_t                      *c  /**< */,
d2593 1
a2593 1
                                   xcb_generic_error_t                  **e  /**< */)
d2599 1
a2599 1
xcb_selinux_get_client_context_sizeof (const void  *_buffer  /**< */)
d2630 2
a2631 2
xcb_selinux_get_client_context (xcb_connection_t *c  /**< */,
                                uint32_t          resource  /**< */)
d2634 4
a2637 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_CLIENT_CONTEXT,
        /* isvoid */ 0
d2656 2
a2657 2
xcb_selinux_get_client_context_unchecked (xcb_connection_t *c  /**< */,
                                          uint32_t          resource  /**< */)
d2660 4
a2663 4
        /* count */ 2,
        /* ext */ &xcb_selinux_id,
        /* opcode */ XCB_SELINUX_GET_CLIENT_CONTEXT,
        /* isvoid */ 0
d2682 1
a2682 1
xcb_selinux_get_client_context_context (const xcb_selinux_get_client_context_reply_t *R  /**< */)
d2688 1
a2688 1
xcb_selinux_get_client_context_context_length (const xcb_selinux_get_client_context_reply_t *R  /**< */)
d2694 1
a2694 1
xcb_selinux_get_client_context_context_end (const xcb_selinux_get_client_context_reply_t *R  /**< */)
d2704 1
a2704 1
xcb_selinux_get_client_context_reply (xcb_connection_t                         *c  /**< */,
d2706 1
a2706 1
                                      xcb_generic_error_t                     **e  /**< */)
@


1.3
log
@Update build system and generated files for libxcb 1.10.
@
text
@a20 12

/*****************************************************************************
 **
 ** xcb_selinux_query_version_cookie_t xcb_selinux_query_version
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           client_major
 ** @@param uint8_t           client_minor
 ** @@returns xcb_selinux_query_version_cookie_t
 **
 *****************************************************************************/
 
d32 1
a32 1
    
d36 1
a36 1
    
d39 1
a39 1
    
d44 1
a44 1
    
a48 12

/*****************************************************************************
 **
 ** xcb_selinux_query_version_cookie_t xcb_selinux_query_version_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           client_major
 ** @@param uint8_t           client_minor
 ** @@returns xcb_selinux_query_version_cookie_t
 **
 *****************************************************************************/
 
d60 1
a60 1
    
d64 1
a64 1
    
d67 1
a67 1
    
d72 1
a72 1
    
a76 12

/*****************************************************************************
 **
 ** xcb_selinux_query_version_reply_t * xcb_selinux_query_version_reply
 ** 
 ** @@param xcb_connection_t                    *c
 ** @@param xcb_selinux_query_version_cookie_t   cookie
 ** @@param xcb_generic_error_t                **e
 ** @@returns xcb_selinux_query_version_reply_t *
 **
 *****************************************************************************/
 
a115 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_device_create_context_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d127 1
a127 1
    
d131 1
a131 1
    
d133 1
a133 1
    
d143 1
a143 1
    
a147 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_device_create_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d159 1
a159 1
    
d163 1
a163 1
    
d165 1
a165 1
    
d175 1
a175 1
    
a210 10

/*****************************************************************************
 **
 ** xcb_selinux_get_device_create_context_cookie_t xcb_selinux_get_device_create_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_device_create_context_cookie_t
 **
 *****************************************************************************/
 
d220 1
a220 1
    
d224 2
a225 2
    
    
d230 1
a230 1
    
a234 10

/*****************************************************************************
 **
 ** xcb_selinux_get_device_create_context_cookie_t xcb_selinux_get_device_create_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_device_create_context_cookie_t
 **
 *****************************************************************************/
 
d244 1
a244 1
    
d248 2
a249 2
    
    
d254 1
a254 1
    
a258 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_device_create_context_context
 ** 
 ** @@param const xcb_selinux_get_device_create_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a264 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_device_create_context_context_length
 ** 
 ** @@param const xcb_selinux_get_device_create_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a270 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_device_create_context_context_end
 ** 
 ** @@param const xcb_selinux_get_device_create_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a280 12

/*****************************************************************************
 **
 ** xcb_selinux_get_device_create_context_reply_t * xcb_selinux_get_device_create_context_reply
 ** 
 ** @@param xcb_connection_t                                *c
 ** @@param xcb_selinux_get_device_create_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                            **e
 ** @@returns xcb_selinux_get_device_create_context_reply_t *
 **
 *****************************************************************************/
 
a319 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_device_context_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          device
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d332 1
a332 1
    
d336 1
a336 1
    
d339 1
a339 1
    
d349 1
a349 1
    
a353 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_device_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          device
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d366 1
a366 1
    
d370 1
a370 1
    
d373 1
a373 1
    
d383 1
a383 1
    
a418 11

/*****************************************************************************
 **
 ** xcb_selinux_get_device_context_cookie_t xcb_selinux_get_device_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          device
 ** @@returns xcb_selinux_get_device_context_cookie_t
 **
 *****************************************************************************/
 
d429 1
a429 1
    
d433 1
a433 1
    
d435 1
a435 1
    
d440 1
a440 1
    
a444 11

/*****************************************************************************
 **
 ** xcb_selinux_get_device_context_cookie_t xcb_selinux_get_device_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          device
 ** @@returns xcb_selinux_get_device_context_cookie_t
 **
 *****************************************************************************/
 
d455 1
a455 1
    
d459 1
a459 1
    
d461 1
a461 1
    
d466 1
a466 1
    
a470 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_device_context_context
 ** 
 ** @@param const xcb_selinux_get_device_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a476 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_device_context_context_length
 ** 
 ** @@param const xcb_selinux_get_device_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a482 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_device_context_context_end
 ** 
 ** @@param const xcb_selinux_get_device_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a492 12

/*****************************************************************************
 **
 ** xcb_selinux_get_device_context_reply_t * xcb_selinux_get_device_context_reply
 ** 
 ** @@param xcb_connection_t                         *c
 ** @@param xcb_selinux_get_device_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                     **e
 ** @@returns xcb_selinux_get_device_context_reply_t *
 **
 *****************************************************************************/
 
a531 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_window_create_context_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d543 1
a543 1
    
d547 1
a547 1
    
d549 1
a549 1
    
d559 1
a559 1
    
a563 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_window_create_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d575 1
a575 1
    
d579 1
a579 1
    
d581 1
a581 1
    
d591 1
a591 1
    
a626 10

/*****************************************************************************
 **
 ** xcb_selinux_get_window_create_context_cookie_t xcb_selinux_get_window_create_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_window_create_context_cookie_t
 **
 *****************************************************************************/
 
d636 1
a636 1
    
d640 2
a641 2
    
    
d646 1
a646 1
    
a650 10

/*****************************************************************************
 **
 ** xcb_selinux_get_window_create_context_cookie_t xcb_selinux_get_window_create_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_window_create_context_cookie_t
 **
 *****************************************************************************/
 
d660 1
a660 1
    
d664 2
a665 2
    
    
d670 1
a670 1
    
a674 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_window_create_context_context
 ** 
 ** @@param const xcb_selinux_get_window_create_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a680 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_window_create_context_context_length
 ** 
 ** @@param const xcb_selinux_get_window_create_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a686 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_window_create_context_context_end
 ** 
 ** @@param const xcb_selinux_get_window_create_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a696 12

/*****************************************************************************
 **
 ** xcb_selinux_get_window_create_context_reply_t * xcb_selinux_get_window_create_context_reply
 ** 
 ** @@param xcb_connection_t                                *c
 ** @@param xcb_selinux_get_window_create_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                            **e
 ** @@returns xcb_selinux_get_window_create_context_reply_t *
 **
 *****************************************************************************/
 
a735 11

/*****************************************************************************
 **
 ** xcb_selinux_get_window_context_cookie_t xcb_selinux_get_window_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_selinux_get_window_context_cookie_t
 **
 *****************************************************************************/
 
d746 1
a746 1
    
d750 1
a750 1
    
d752 1
a752 1
    
d757 1
a757 1
    
a761 11

/*****************************************************************************
 **
 ** xcb_selinux_get_window_context_cookie_t xcb_selinux_get_window_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_selinux_get_window_context_cookie_t
 **
 *****************************************************************************/
 
d772 1
a772 1
    
d776 1
a776 1
    
d778 1
a778 1
    
d783 1
a783 1
    
a787 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_window_context_context
 ** 
 ** @@param const xcb_selinux_get_window_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a793 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_window_context_context_length
 ** 
 ** @@param const xcb_selinux_get_window_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a799 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_window_context_context_end
 ** 
 ** @@param const xcb_selinux_get_window_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a809 12

/*****************************************************************************
 **
 ** xcb_selinux_get_window_context_reply_t * xcb_selinux_get_window_context_reply
 ** 
 ** @@param xcb_connection_t                         *c
 ** @@param xcb_selinux_get_window_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                     **e
 ** @@returns xcb_selinux_get_window_context_reply_t *
 **
 *****************************************************************************/
 
a860 10

/*****************************************************************************
 **
 ** char * xcb_selinux_list_item_object_context
 ** 
 ** @@param const xcb_selinux_list_item_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a866 10

/*****************************************************************************
 **
 ** int xcb_selinux_list_item_object_context_length
 ** 
 ** @@param const xcb_selinux_list_item_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a872 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_list_item_object_context_end
 ** 
 ** @@param const xcb_selinux_list_item_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a882 10

/*****************************************************************************
 **
 ** char * xcb_selinux_list_item_data_context
 ** 
 ** @@param const xcb_selinux_list_item_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a889 10

/*****************************************************************************
 **
 ** int xcb_selinux_list_item_data_context_length
 ** 
 ** @@param const xcb_selinux_list_item_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a895 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_list_item_data_context_end
 ** 
 ** @@param const xcb_selinux_list_item_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a906 10

/*****************************************************************************
 **
 ** void xcb_selinux_list_item_next
 ** 
 ** @@param xcb_selinux_list_item_iterator_t *i
 ** @@returns void
 **
 *****************************************************************************/
 
a917 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_list_item_end
 ** 
 ** @@param xcb_selinux_list_item_iterator_t i
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a960 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_property_create_context_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d972 1
a972 1
    
d976 1
a976 1
    
d978 1
a978 1
    
d988 1
a988 1
    
a992 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_property_create_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1004 1
a1004 1
    
d1008 1
a1008 1
    
d1010 1
a1010 1
    
d1020 1
a1020 1
    
a1055 10

/*****************************************************************************
 **
 ** xcb_selinux_get_property_create_context_cookie_t xcb_selinux_get_property_create_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_property_create_context_cookie_t
 **
 *****************************************************************************/
 
d1065 1
a1065 1
    
d1069 2
a1070 2
    
    
d1075 1
a1075 1
    
a1079 10

/*****************************************************************************
 **
 ** xcb_selinux_get_property_create_context_cookie_t xcb_selinux_get_property_create_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_property_create_context_cookie_t
 **
 *****************************************************************************/
 
d1089 1
a1089 1
    
d1093 2
a1094 2
    
    
d1099 1
a1099 1
    
a1103 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_property_create_context_context
 ** 
 ** @@param const xcb_selinux_get_property_create_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a1109 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_property_create_context_context_length
 ** 
 ** @@param const xcb_selinux_get_property_create_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1115 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_property_create_context_context_end
 ** 
 ** @@param const xcb_selinux_get_property_create_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a1125 12

/*****************************************************************************
 **
 ** xcb_selinux_get_property_create_context_reply_t * xcb_selinux_get_property_create_context_reply
 ** 
 ** @@param xcb_connection_t                                  *c
 ** @@param xcb_selinux_get_property_create_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                              **e
 ** @@returns xcb_selinux_get_property_create_context_reply_t *
 **
 *****************************************************************************/
 
a1164 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_property_use_context_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1176 1
a1176 1
    
d1180 1
a1180 1
    
d1182 1
a1182 1
    
d1192 1
a1192 1
    
a1196 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_property_use_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1208 1
a1208 1
    
d1212 1
a1212 1
    
d1214 1
a1214 1
    
d1224 1
a1224 1
    
a1259 10

/*****************************************************************************
 **
 ** xcb_selinux_get_property_use_context_cookie_t xcb_selinux_get_property_use_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_property_use_context_cookie_t
 **
 *****************************************************************************/
 
d1269 1
a1269 1
    
d1273 2
a1274 2
    
    
d1279 1
a1279 1
    
a1283 10

/*****************************************************************************
 **
 ** xcb_selinux_get_property_use_context_cookie_t xcb_selinux_get_property_use_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_property_use_context_cookie_t
 **
 *****************************************************************************/
 
d1293 1
a1293 1
    
d1297 2
a1298 2
    
    
d1303 1
a1303 1
    
a1307 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_property_use_context_context
 ** 
 ** @@param const xcb_selinux_get_property_use_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a1313 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_property_use_context_context_length
 ** 
 ** @@param const xcb_selinux_get_property_use_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1319 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_property_use_context_context_end
 ** 
 ** @@param const xcb_selinux_get_property_use_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a1329 12

/*****************************************************************************
 **
 ** xcb_selinux_get_property_use_context_reply_t * xcb_selinux_get_property_use_context_reply
 ** 
 ** @@param xcb_connection_t                               *c
 ** @@param xcb_selinux_get_property_use_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                           **e
 ** @@returns xcb_selinux_get_property_use_context_reply_t *
 **
 *****************************************************************************/
 
a1368 12

/*****************************************************************************
 **
 ** xcb_selinux_get_property_context_cookie_t xcb_selinux_get_property_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param xcb_atom_t        property
 ** @@returns xcb_selinux_get_property_context_cookie_t
 **
 *****************************************************************************/
 
d1380 1
a1380 1
    
d1384 1
a1384 1
    
d1387 1
a1387 1
    
d1392 1
a1392 1
    
a1396 12

/*****************************************************************************
 **
 ** xcb_selinux_get_property_context_cookie_t xcb_selinux_get_property_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param xcb_atom_t        property
 ** @@returns xcb_selinux_get_property_context_cookie_t
 **
 *****************************************************************************/
 
d1408 1
a1408 1
    
d1412 1
a1412 1
    
d1415 1
a1415 1
    
d1420 1
a1420 1
    
a1424 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_property_context_context
 ** 
 ** @@param const xcb_selinux_get_property_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a1430 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_property_context_context_length
 ** 
 ** @@param const xcb_selinux_get_property_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1436 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_property_context_context_end
 ** 
 ** @@param const xcb_selinux_get_property_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a1446 12

/*****************************************************************************
 **
 ** xcb_selinux_get_property_context_reply_t * xcb_selinux_get_property_context_reply
 ** 
 ** @@param xcb_connection_t                           *c
 ** @@param xcb_selinux_get_property_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                       **e
 ** @@returns xcb_selinux_get_property_context_reply_t *
 **
 *****************************************************************************/
 
a1485 12

/*****************************************************************************
 **
 ** xcb_selinux_get_property_data_context_cookie_t xcb_selinux_get_property_data_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param xcb_atom_t        property
 ** @@returns xcb_selinux_get_property_data_context_cookie_t
 **
 *****************************************************************************/
 
d1497 1
a1497 1
    
d1501 1
a1501 1
    
d1504 1
a1504 1
    
d1509 1
a1509 1
    
a1513 12

/*****************************************************************************
 **
 ** xcb_selinux_get_property_data_context_cookie_t xcb_selinux_get_property_data_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param xcb_atom_t        property
 ** @@returns xcb_selinux_get_property_data_context_cookie_t
 **
 *****************************************************************************/
 
d1525 1
a1525 1
    
d1529 1
a1529 1
    
d1532 1
a1532 1
    
d1537 1
a1537 1
    
a1541 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_property_data_context_context
 ** 
 ** @@param const xcb_selinux_get_property_data_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a1547 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_property_data_context_context_length
 ** 
 ** @@param const xcb_selinux_get_property_data_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1553 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_property_data_context_context_end
 ** 
 ** @@param const xcb_selinux_get_property_data_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a1563 12

/*****************************************************************************
 **
 ** xcb_selinux_get_property_data_context_reply_t * xcb_selinux_get_property_data_context_reply
 ** 
 ** @@param xcb_connection_t                                *c
 ** @@param xcb_selinux_get_property_data_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                            **e
 ** @@returns xcb_selinux_get_property_data_context_reply_t *
 **
 *****************************************************************************/
 
a1607 11

/*****************************************************************************
 **
 ** xcb_selinux_list_properties_cookie_t xcb_selinux_list_properties
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_selinux_list_properties_cookie_t
 **
 *****************************************************************************/
 
d1618 1
a1618 1
    
d1622 1
a1622 1
    
d1624 1
a1624 1
    
d1629 1
a1629 1
    
a1633 11

/*****************************************************************************
 **
 ** xcb_selinux_list_properties_cookie_t xcb_selinux_list_properties_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_selinux_list_properties_cookie_t
 **
 *****************************************************************************/
 
d1644 1
a1644 1
    
d1648 1
a1648 1
    
d1650 1
a1650 1
    
d1655 1
a1655 1
    
a1659 10

/*****************************************************************************
 **
 ** int xcb_selinux_list_properties_properties_length
 ** 
 ** @@param const xcb_selinux_list_properties_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1665 10

/*****************************************************************************
 **
 ** xcb_selinux_list_item_iterator_t xcb_selinux_list_properties_properties_iterator
 ** 
 ** @@param const xcb_selinux_list_properties_reply_t *R
 ** @@returns xcb_selinux_list_item_iterator_t
 **
 *****************************************************************************/
 
a1675 12

/*****************************************************************************
 **
 ** xcb_selinux_list_properties_reply_t * xcb_selinux_list_properties_reply
 ** 
 ** @@param xcb_connection_t                      *c
 ** @@param xcb_selinux_list_properties_cookie_t   cookie
 ** @@param xcb_generic_error_t                  **e
 ** @@returns xcb_selinux_list_properties_reply_t *
 **
 *****************************************************************************/
 
a1714 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_selection_create_context_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1726 1
a1726 1
    
d1730 1
a1730 1
    
d1732 1
a1732 1
    
d1742 1
a1742 1
    
a1746 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_selection_create_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1758 1
a1758 1
    
d1762 1
a1762 1
    
d1764 1
a1764 1
    
d1774 1
a1774 1
    
a1809 10

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_create_context_cookie_t xcb_selinux_get_selection_create_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_selection_create_context_cookie_t
 **
 *****************************************************************************/
 
d1819 1
a1819 1
    
d1823 2
a1824 2
    
    
d1829 1
a1829 1
    
a1833 10

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_create_context_cookie_t xcb_selinux_get_selection_create_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_selection_create_context_cookie_t
 **
 *****************************************************************************/
 
d1843 1
a1843 1
    
d1847 2
a1848 2
    
    
d1853 1
a1853 1
    
a1857 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_selection_create_context_context
 ** 
 ** @@param const xcb_selinux_get_selection_create_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a1863 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_selection_create_context_context_length
 ** 
 ** @@param const xcb_selinux_get_selection_create_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1869 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_selection_create_context_context_end
 ** 
 ** @@param const xcb_selinux_get_selection_create_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a1879 12

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_create_context_reply_t * xcb_selinux_get_selection_create_context_reply
 ** 
 ** @@param xcb_connection_t                                   *c
 ** @@param xcb_selinux_get_selection_create_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                               **e
 ** @@returns xcb_selinux_get_selection_create_context_reply_t *
 **
 *****************************************************************************/
 
a1918 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_selection_use_context_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1930 1
a1930 1
    
d1934 1
a1934 1
    
d1936 1
a1936 1
    
d1946 1
a1946 1
    
a1950 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_selinux_set_selection_use_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context_len
 ** @@param const char       *context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1962 1
a1962 1
    
d1966 1
a1966 1
    
d1968 1
a1968 1
    
d1978 1
a1978 1
    
a2013 10

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_use_context_cookie_t xcb_selinux_get_selection_use_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_selection_use_context_cookie_t
 **
 *****************************************************************************/
 
d2023 1
a2023 1
    
d2027 2
a2028 2
    
    
d2033 1
a2033 1
    
a2037 10

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_use_context_cookie_t xcb_selinux_get_selection_use_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_get_selection_use_context_cookie_t
 **
 *****************************************************************************/
 
d2047 1
a2047 1
    
d2051 2
a2052 2
    
    
d2057 1
a2057 1
    
a2061 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_selection_use_context_context
 ** 
 ** @@param const xcb_selinux_get_selection_use_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a2067 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_selection_use_context_context_length
 ** 
 ** @@param const xcb_selinux_get_selection_use_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a2073 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_selection_use_context_context_end
 ** 
 ** @@param const xcb_selinux_get_selection_use_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a2083 12

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_use_context_reply_t * xcb_selinux_get_selection_use_context_reply
 ** 
 ** @@param xcb_connection_t                                *c
 ** @@param xcb_selinux_get_selection_use_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                            **e
 ** @@returns xcb_selinux_get_selection_use_context_reply_t *
 **
 *****************************************************************************/
 
a2122 11

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_context_cookie_t xcb_selinux_get_selection_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_atom_t        selection
 ** @@returns xcb_selinux_get_selection_context_cookie_t
 **
 *****************************************************************************/
 
d2133 1
a2133 1
    
d2137 1
a2137 1
    
d2139 1
a2139 1
    
d2144 1
a2144 1
    
a2148 11

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_context_cookie_t xcb_selinux_get_selection_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_atom_t        selection
 ** @@returns xcb_selinux_get_selection_context_cookie_t
 **
 *****************************************************************************/
 
d2159 1
a2159 1
    
d2163 1
a2163 1
    
d2165 1
a2165 1
    
d2170 1
a2170 1
    
a2174 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_selection_context_context
 ** 
 ** @@param const xcb_selinux_get_selection_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a2180 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_selection_context_context_length
 ** 
 ** @@param const xcb_selinux_get_selection_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a2186 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_selection_context_context_end
 ** 
 ** @@param const xcb_selinux_get_selection_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a2196 12

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_context_reply_t * xcb_selinux_get_selection_context_reply
 ** 
 ** @@param xcb_connection_t                            *c
 ** @@param xcb_selinux_get_selection_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                        **e
 ** @@returns xcb_selinux_get_selection_context_reply_t *
 **
 *****************************************************************************/
 
a2235 11

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_data_context_cookie_t xcb_selinux_get_selection_data_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_atom_t        selection
 ** @@returns xcb_selinux_get_selection_data_context_cookie_t
 **
 *****************************************************************************/
 
d2246 1
a2246 1
    
d2250 1
a2250 1
    
d2252 1
a2252 1
    
d2257 1
a2257 1
    
a2261 11

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_data_context_cookie_t xcb_selinux_get_selection_data_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_atom_t        selection
 ** @@returns xcb_selinux_get_selection_data_context_cookie_t
 **
 *****************************************************************************/
 
d2272 1
a2272 1
    
d2276 1
a2276 1
    
d2278 1
a2278 1
    
d2283 1
a2283 1
    
a2287 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_selection_data_context_context
 ** 
 ** @@param const xcb_selinux_get_selection_data_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a2293 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_selection_data_context_context_length
 ** 
 ** @@param const xcb_selinux_get_selection_data_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a2299 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_selection_data_context_context_end
 ** 
 ** @@param const xcb_selinux_get_selection_data_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a2309 12

/*****************************************************************************
 **
 ** xcb_selinux_get_selection_data_context_reply_t * xcb_selinux_get_selection_data_context_reply
 ** 
 ** @@param xcb_connection_t                                 *c
 ** @@param xcb_selinux_get_selection_data_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                             **e
 ** @@returns xcb_selinux_get_selection_data_context_reply_t *
 **
 *****************************************************************************/
 
a2353 10

/*****************************************************************************
 **
 ** xcb_selinux_list_selections_cookie_t xcb_selinux_list_selections
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_list_selections_cookie_t
 **
 *****************************************************************************/
 
d2363 1
a2363 1
    
d2367 2
a2368 2
    
    
d2373 1
a2373 1
    
a2377 10

/*****************************************************************************
 **
 ** xcb_selinux_list_selections_cookie_t xcb_selinux_list_selections_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_selinux_list_selections_cookie_t
 **
 *****************************************************************************/
 
d2387 1
a2387 1
    
d2391 2
a2392 2
    
    
d2397 1
a2397 1
    
a2401 10

/*****************************************************************************
 **
 ** int xcb_selinux_list_selections_selections_length
 ** 
 ** @@param const xcb_selinux_list_selections_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a2407 10

/*****************************************************************************
 **
 ** xcb_selinux_list_item_iterator_t xcb_selinux_list_selections_selections_iterator
 ** 
 ** @@param const xcb_selinux_list_selections_reply_t *R
 ** @@returns xcb_selinux_list_item_iterator_t
 **
 *****************************************************************************/
 
a2417 12

/*****************************************************************************
 **
 ** xcb_selinux_list_selections_reply_t * xcb_selinux_list_selections_reply
 ** 
 ** @@param xcb_connection_t                      *c
 ** @@param xcb_selinux_list_selections_cookie_t   cookie
 ** @@param xcb_generic_error_t                  **e
 ** @@returns xcb_selinux_list_selections_reply_t *
 **
 *****************************************************************************/
 
a2456 11

/*****************************************************************************
 **
 ** xcb_selinux_get_client_context_cookie_t xcb_selinux_get_client_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          resource
 ** @@returns xcb_selinux_get_client_context_cookie_t
 **
 *****************************************************************************/
 
d2467 1
a2467 1
    
d2471 1
a2471 1
    
d2473 1
a2473 1
    
d2478 1
a2478 1
    
a2482 11

/*****************************************************************************
 **
 ** xcb_selinux_get_client_context_cookie_t xcb_selinux_get_client_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          resource
 ** @@returns xcb_selinux_get_client_context_cookie_t
 **
 *****************************************************************************/
 
d2493 1
a2493 1
    
d2497 1
a2497 1
    
d2499 1
a2499 1
    
d2504 1
a2504 1
    
a2508 10

/*****************************************************************************
 **
 ** char * xcb_selinux_get_client_context_context
 ** 
 ** @@param const xcb_selinux_get_client_context_reply_t *R
 ** @@returns char *
 **
 *****************************************************************************/
 
a2514 10

/*****************************************************************************
 **
 ** int xcb_selinux_get_client_context_context_length
 ** 
 ** @@param const xcb_selinux_get_client_context_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a2520 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_selinux_get_client_context_context_end
 ** 
 ** @@param const xcb_selinux_get_client_context_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a2530 12

/*****************************************************************************
 **
 ** xcb_selinux_get_client_context_reply_t * xcb_selinux_get_client_context_reply
 ** 
 ** @@param xcb_connection_t                         *c
 ** @@param xcb_selinux_get_client_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                     **e
 ** @@returns xcb_selinux_get_client_context_reply_t *
 **
 *****************************************************************************/
 
@


1.2
log
@Update to libxcb 1.9.0.
tested by ajacoutot@@ and naddy@@ on a full ports build
@
text
@d129 1
a129 1
    unsigned int xcb_align_to;
d134 2
d248 1
a248 1
    unsigned int xcb_align_to;
d253 2
d419 1
a419 1
    unsigned int xcb_align_to;
d424 2
d544 1
a544 1
    unsigned int xcb_align_to;
d549 2
d721 1
a721 1
    unsigned int xcb_align_to;
d726 2
d840 1
a840 1
    unsigned int xcb_align_to;
d845 2
d1011 1
a1011 1
    unsigned int xcb_align_to;
d1016 2
d1188 1
a1188 1
    unsigned int xcb_align_to;
d1193 2
d1380 1
a1380 1
    unsigned int xcb_align_to;
d1385 2
d1499 1
a1499 1
    unsigned int xcb_align_to;
d1504 2
d1670 1
a1670 1
    unsigned int xcb_align_to;
d1675 2
d1789 1
a1789 1
    unsigned int xcb_align_to;
d1794 2
d1960 1
a1960 1
    unsigned int xcb_align_to;
d1965 2
d2143 1
a2143 1
    unsigned int xcb_align_to;
d2148 2
d2326 1
a2326 1
    unsigned int xcb_align_to;
d2333 2
d2492 1
a2492 1
    unsigned int xcb_align_to;
d2497 2
d2611 1
a2611 1
    unsigned int xcb_align_to;
d2616 2
d2782 1
a2782 1
    unsigned int xcb_align_to;
d2787 2
d2901 1
a2901 1
    unsigned int xcb_align_to;
d2906 2
d3072 1
a3072 1
    unsigned int xcb_align_to;
d3077 2
d3249 1
a3249 1
    unsigned int xcb_align_to;
d3254 2
d3426 1
a3426 1
    unsigned int xcb_align_to;
d3433 2
d3586 1
a3586 1
    unsigned int xcb_align_to;
d3591 2
@


1.1
log
@Initial revision
@
text
@d6 4
d12 1
d15 2
d56 1
d96 1
d121 29
d184 1
d189 1
d228 1
d233 1
d238 29
d296 1
d330 1
d407 29
d473 1
d478 1
d520 1
d525 1
d530 29
d591 1
d628 1
d705 29
d768 1
d773 1
d812 1
d817 1
d822 29
d880 1
d914 1
d991 29
d1052 1
d1089 1
d1166 41
d1327 3
a1329 1
    xcb_generic_iterator_t child = xcb_selinux_list_item_data_context_end(R);
a1331 1
    i->index = child.index;
d1356 29
d1419 1
d1424 1
d1463 1
d1468 1
d1473 29
d1531 1
d1565 1
d1642 29
d1705 1
d1710 1
d1749 1
d1754 1
d1759 29
d1817 1
d1851 1
d1928 29
d1992 1
d2032 1
d2109 29
d2173 1
d2213 1
d2290 34
d2356 1
d2393 1
d2454 29
d2517 1
d2522 1
d2561 1
d2566 1
d2571 29
d2629 1
d2663 1
d2740 29
d2803 1
d2808 1
d2847 1
d2852 1
d2857 29
d2915 1
d2949 1
d3026 29
d3087 1
d3124 1
d3201 29
d3262 1
d3299 1
d3376 34
d3439 1
d3473 1
d3534 29
d3595 1
d3632 1
@


1.1.1.1
log
@Xenocara build infrastructure for libxcb.

This includes a set of pre-generated sources files in src/ so that
python and xslt are not needed to build.
@
text
@@
