head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.2
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.6
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_2:1.1.1.1
	XENOCARA:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2016.09.02.10.09.44;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	mKDGsTNpiR2zRHYQ;

1.3
date	2015.01.26.21.32.11;	author matthieu;	state Exp;
branches;
next	1.2;
commitid	01TEvO4uNHLqFv7N;

1.2
date	2012.11.22.20.31.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.22.16.10.07;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.05.22.16.10.07;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xcb-proto/libxcb 1.12. "Just commit it" naddy@@
@
text
@/*
 * This file generated automatically from xprint.xml by c_client.py.
 * Edit at your peril.
 */

/**
 * @@defgroup XCB_XPrint_API XCB XPrint API
 * @@brief XPrint XCB Protocol Implementation.
 * @@{
 **/

#ifndef __XPRINT_H
#define __XPRINT_H

#include "xcb.h"
#include "xproto.h"

#ifdef __cplusplus
extern "C" {
#endif

#define XCB_XPRINT_MAJOR_VERSION 1
#define XCB_XPRINT_MINOR_VERSION 0

extern xcb_extension_t xcb_x_print_id;

typedef char xcb_x_print_string8_t;

/**
 * @@brief xcb_x_print_string8_iterator_t
 **/
typedef struct xcb_x_print_string8_iterator_t {
    xcb_x_print_string8_t *data;
    int                    rem;
    int                    index;
} xcb_x_print_string8_iterator_t;

/**
 * @@brief xcb_x_print_printer_t
 **/
typedef struct xcb_x_print_printer_t {
    uint32_t nameLen;
    uint32_t descLen;
} xcb_x_print_printer_t;

/**
 * @@brief xcb_x_print_printer_iterator_t
 **/
typedef struct xcb_x_print_printer_iterator_t {
    xcb_x_print_printer_t *data;
    int                    rem;
    int                    index;
} xcb_x_print_printer_iterator_t;

typedef uint32_t xcb_x_print_pcontext_t;

/**
 * @@brief xcb_x_print_pcontext_iterator_t
 **/
typedef struct xcb_x_print_pcontext_iterator_t {
    xcb_x_print_pcontext_t *data;
    int                     rem;
    int                     index;
} xcb_x_print_pcontext_iterator_t;

typedef enum xcb_x_print_get_doc_t {
    XCB_X_PRINT_GET_DOC_FINISHED = 0,
    XCB_X_PRINT_GET_DOC_SECOND_CONSUMER = 1
} xcb_x_print_get_doc_t;

typedef enum xcb_x_print_ev_mask_t {
    XCB_X_PRINT_EV_MASK_NO_EVENT_MASK = 0,
    XCB_X_PRINT_EV_MASK_PRINT_MASK = 1,
    XCB_X_PRINT_EV_MASK_ATTRIBUTE_MASK = 2
} xcb_x_print_ev_mask_t;

typedef enum xcb_x_print_detail_t {
    XCB_X_PRINT_DETAIL_START_JOB_NOTIFY = 1,
    XCB_X_PRINT_DETAIL_END_JOB_NOTIFY = 2,
    XCB_X_PRINT_DETAIL_START_DOC_NOTIFY = 3,
    XCB_X_PRINT_DETAIL_END_DOC_NOTIFY = 4,
    XCB_X_PRINT_DETAIL_START_PAGE_NOTIFY = 5,
    XCB_X_PRINT_DETAIL_END_PAGE_NOTIFY = 6
} xcb_x_print_detail_t;

typedef enum xcb_x_print_attr_t {
    XCB_X_PRINT_ATTR_JOB_ATTR = 1,
    XCB_X_PRINT_ATTR_DOC_ATTR = 2,
    XCB_X_PRINT_ATTR_PAGE_ATTR = 3,
    XCB_X_PRINT_ATTR_PRINTER_ATTR = 4,
    XCB_X_PRINT_ATTR_SERVER_ATTR = 5,
    XCB_X_PRINT_ATTR_MEDIUM_ATTR = 6,
    XCB_X_PRINT_ATTR_SPOOLER_ATTR = 7
} xcb_x_print_attr_t;

/**
 * @@brief xcb_x_print_print_query_version_cookie_t
 **/
typedef struct xcb_x_print_print_query_version_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_query_version_cookie_t;

/** Opcode for xcb_x_print_print_query_version. */
#define XCB_X_PRINT_PRINT_QUERY_VERSION 0

/**
 * @@brief xcb_x_print_print_query_version_request_t
 **/
typedef struct xcb_x_print_print_query_version_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
} xcb_x_print_print_query_version_request_t;

/**
 * @@brief xcb_x_print_print_query_version_reply_t
 **/
typedef struct xcb_x_print_print_query_version_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint16_t major_version;
    uint16_t minor_version;
} xcb_x_print_print_query_version_reply_t;

/**
 * @@brief xcb_x_print_print_get_printer_list_cookie_t
 **/
typedef struct xcb_x_print_print_get_printer_list_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_get_printer_list_cookie_t;

/** Opcode for xcb_x_print_print_get_printer_list. */
#define XCB_X_PRINT_PRINT_GET_PRINTER_LIST 1

/**
 * @@brief xcb_x_print_print_get_printer_list_request_t
 **/
typedef struct xcb_x_print_print_get_printer_list_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint32_t printerNameLen;
    uint32_t localeLen;
} xcb_x_print_print_get_printer_list_request_t;

/**
 * @@brief xcb_x_print_print_get_printer_list_reply_t
 **/
typedef struct xcb_x_print_print_get_printer_list_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t listCount;
    uint8_t  pad1[20];
} xcb_x_print_print_get_printer_list_reply_t;

/** Opcode for xcb_x_print_print_rehash_printer_list. */
#define XCB_X_PRINT_PRINT_REHASH_PRINTER_LIST 20

/**
 * @@brief xcb_x_print_print_rehash_printer_list_request_t
 **/
typedef struct xcb_x_print_print_rehash_printer_list_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
} xcb_x_print_print_rehash_printer_list_request_t;

/** Opcode for xcb_x_print_create_context. */
#define XCB_X_PRINT_CREATE_CONTEXT 2

/**
 * @@brief xcb_x_print_create_context_request_t
 **/
typedef struct xcb_x_print_create_context_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint32_t context_id;
    uint32_t printerNameLen;
    uint32_t localeLen;
} xcb_x_print_create_context_request_t;

/** Opcode for xcb_x_print_print_set_context. */
#define XCB_X_PRINT_PRINT_SET_CONTEXT 3

/**
 * @@brief xcb_x_print_print_set_context_request_t
 **/
typedef struct xcb_x_print_print_set_context_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint32_t context;
} xcb_x_print_print_set_context_request_t;

/**
 * @@brief xcb_x_print_print_get_context_cookie_t
 **/
typedef struct xcb_x_print_print_get_context_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_get_context_cookie_t;

/** Opcode for xcb_x_print_print_get_context. */
#define XCB_X_PRINT_PRINT_GET_CONTEXT 4

/**
 * @@brief xcb_x_print_print_get_context_request_t
 **/
typedef struct xcb_x_print_print_get_context_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
} xcb_x_print_print_get_context_request_t;

/**
 * @@brief xcb_x_print_print_get_context_reply_t
 **/
typedef struct xcb_x_print_print_get_context_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t context;
} xcb_x_print_print_get_context_reply_t;

/** Opcode for xcb_x_print_print_destroy_context. */
#define XCB_X_PRINT_PRINT_DESTROY_CONTEXT 5

/**
 * @@brief xcb_x_print_print_destroy_context_request_t
 **/
typedef struct xcb_x_print_print_destroy_context_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint32_t context;
} xcb_x_print_print_destroy_context_request_t;

/**
 * @@brief xcb_x_print_print_get_screen_of_context_cookie_t
 **/
typedef struct xcb_x_print_print_get_screen_of_context_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_get_screen_of_context_cookie_t;

/** Opcode for xcb_x_print_print_get_screen_of_context. */
#define XCB_X_PRINT_PRINT_GET_SCREEN_OF_CONTEXT 6

/**
 * @@brief xcb_x_print_print_get_screen_of_context_request_t
 **/
typedef struct xcb_x_print_print_get_screen_of_context_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
} xcb_x_print_print_get_screen_of_context_request_t;

/**
 * @@brief xcb_x_print_print_get_screen_of_context_reply_t
 **/
typedef struct xcb_x_print_print_get_screen_of_context_reply_t {
    uint8_t      response_type;
    uint8_t      pad0;
    uint16_t     sequence;
    uint32_t     length;
    xcb_window_t root;
} xcb_x_print_print_get_screen_of_context_reply_t;

/** Opcode for xcb_x_print_print_start_job. */
#define XCB_X_PRINT_PRINT_START_JOB 7

/**
 * @@brief xcb_x_print_print_start_job_request_t
 **/
typedef struct xcb_x_print_print_start_job_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint8_t  output_mode;
} xcb_x_print_print_start_job_request_t;

/** Opcode for xcb_x_print_print_end_job. */
#define XCB_X_PRINT_PRINT_END_JOB 8

/**
 * @@brief xcb_x_print_print_end_job_request_t
 **/
typedef struct xcb_x_print_print_end_job_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint8_t  cancel;
} xcb_x_print_print_end_job_request_t;

/** Opcode for xcb_x_print_print_start_doc. */
#define XCB_X_PRINT_PRINT_START_DOC 9

/**
 * @@brief xcb_x_print_print_start_doc_request_t
 **/
typedef struct xcb_x_print_print_start_doc_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint8_t  driver_mode;
} xcb_x_print_print_start_doc_request_t;

/** Opcode for xcb_x_print_print_end_doc. */
#define XCB_X_PRINT_PRINT_END_DOC 10

/**
 * @@brief xcb_x_print_print_end_doc_request_t
 **/
typedef struct xcb_x_print_print_end_doc_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint8_t  cancel;
} xcb_x_print_print_end_doc_request_t;

/** Opcode for xcb_x_print_print_put_document_data. */
#define XCB_X_PRINT_PRINT_PUT_DOCUMENT_DATA 11

/**
 * @@brief xcb_x_print_print_put_document_data_request_t
 **/
typedef struct xcb_x_print_print_put_document_data_request_t {
    uint8_t        major_opcode;
    uint8_t        minor_opcode;
    uint16_t       length;
    xcb_drawable_t drawable;
    uint32_t       len_data;
    uint16_t       len_fmt;
    uint16_t       len_options;
} xcb_x_print_print_put_document_data_request_t;

/**
 * @@brief xcb_x_print_print_get_document_data_cookie_t
 **/
typedef struct xcb_x_print_print_get_document_data_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_get_document_data_cookie_t;

/** Opcode for xcb_x_print_print_get_document_data. */
#define XCB_X_PRINT_PRINT_GET_DOCUMENT_DATA 12

/**
 * @@brief xcb_x_print_print_get_document_data_request_t
 **/
typedef struct xcb_x_print_print_get_document_data_request_t {
    uint8_t                major_opcode;
    uint8_t                minor_opcode;
    uint16_t               length;
    xcb_x_print_pcontext_t context;
    uint32_t               max_bytes;
} xcb_x_print_print_get_document_data_request_t;

/**
 * @@brief xcb_x_print_print_get_document_data_reply_t
 **/
typedef struct xcb_x_print_print_get_document_data_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t status_code;
    uint32_t finished_flag;
    uint32_t dataLen;
    uint8_t  pad1[12];
} xcb_x_print_print_get_document_data_reply_t;

/** Opcode for xcb_x_print_print_start_page. */
#define XCB_X_PRINT_PRINT_START_PAGE 13

/**
 * @@brief xcb_x_print_print_start_page_request_t
 **/
typedef struct xcb_x_print_print_start_page_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
} xcb_x_print_print_start_page_request_t;

/** Opcode for xcb_x_print_print_end_page. */
#define XCB_X_PRINT_PRINT_END_PAGE 14

/**
 * @@brief xcb_x_print_print_end_page_request_t
 **/
typedef struct xcb_x_print_print_end_page_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint8_t  cancel;
    uint8_t  pad0[3];
} xcb_x_print_print_end_page_request_t;

/** Opcode for xcb_x_print_print_select_input. */
#define XCB_X_PRINT_PRINT_SELECT_INPUT 15

/**
 * @@brief xcb_x_print_print_select_input_request_t
 **/
typedef struct xcb_x_print_print_select_input_request_t {
    uint8_t                major_opcode;
    uint8_t                minor_opcode;
    uint16_t               length;
    xcb_x_print_pcontext_t context;
    uint32_t               event_mask;
} xcb_x_print_print_select_input_request_t;

/**
 * @@brief xcb_x_print_print_input_selected_cookie_t
 **/
typedef struct xcb_x_print_print_input_selected_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_input_selected_cookie_t;

/** Opcode for xcb_x_print_print_input_selected. */
#define XCB_X_PRINT_PRINT_INPUT_SELECTED 16

/**
 * @@brief xcb_x_print_print_input_selected_request_t
 **/
typedef struct xcb_x_print_print_input_selected_request_t {
    uint8_t                major_opcode;
    uint8_t                minor_opcode;
    uint16_t               length;
    xcb_x_print_pcontext_t context;
} xcb_x_print_print_input_selected_request_t;

/**
 * @@brief xcb_x_print_print_input_selected_reply_t
 **/
typedef struct xcb_x_print_print_input_selected_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t event_mask;
    uint32_t all_events_mask;
} xcb_x_print_print_input_selected_reply_t;

/**
 * @@brief xcb_x_print_print_get_attributes_cookie_t
 **/
typedef struct xcb_x_print_print_get_attributes_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_get_attributes_cookie_t;

/** Opcode for xcb_x_print_print_get_attributes. */
#define XCB_X_PRINT_PRINT_GET_ATTRIBUTES 17

/**
 * @@brief xcb_x_print_print_get_attributes_request_t
 **/
typedef struct xcb_x_print_print_get_attributes_request_t {
    uint8_t                major_opcode;
    uint8_t                minor_opcode;
    uint16_t               length;
    xcb_x_print_pcontext_t context;
    uint8_t                pool;
    uint8_t                pad0[3];
} xcb_x_print_print_get_attributes_request_t;

/**
 * @@brief xcb_x_print_print_get_attributes_reply_t
 **/
typedef struct xcb_x_print_print_get_attributes_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t stringLen;
    uint8_t  pad1[20];
} xcb_x_print_print_get_attributes_reply_t;

/**
 * @@brief xcb_x_print_print_get_one_attributes_cookie_t
 **/
typedef struct xcb_x_print_print_get_one_attributes_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_get_one_attributes_cookie_t;

/** Opcode for xcb_x_print_print_get_one_attributes. */
#define XCB_X_PRINT_PRINT_GET_ONE_ATTRIBUTES 19

/**
 * @@brief xcb_x_print_print_get_one_attributes_request_t
 **/
typedef struct xcb_x_print_print_get_one_attributes_request_t {
    uint8_t                major_opcode;
    uint8_t                minor_opcode;
    uint16_t               length;
    xcb_x_print_pcontext_t context;
    uint32_t               nameLen;
    uint8_t                pool;
    uint8_t                pad0[3];
} xcb_x_print_print_get_one_attributes_request_t;

/**
 * @@brief xcb_x_print_print_get_one_attributes_reply_t
 **/
typedef struct xcb_x_print_print_get_one_attributes_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t valueLen;
    uint8_t  pad1[20];
} xcb_x_print_print_get_one_attributes_reply_t;

/** Opcode for xcb_x_print_print_set_attributes. */
#define XCB_X_PRINT_PRINT_SET_ATTRIBUTES 18

/**
 * @@brief xcb_x_print_print_set_attributes_request_t
 **/
typedef struct xcb_x_print_print_set_attributes_request_t {
    uint8_t                major_opcode;
    uint8_t                minor_opcode;
    uint16_t               length;
    xcb_x_print_pcontext_t context;
    uint32_t               stringLen;
    uint8_t                pool;
    uint8_t                rule;
    uint8_t                pad0[2];
} xcb_x_print_print_set_attributes_request_t;

/**
 * @@brief xcb_x_print_print_get_page_dimensions_cookie_t
 **/
typedef struct xcb_x_print_print_get_page_dimensions_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_get_page_dimensions_cookie_t;

/** Opcode for xcb_x_print_print_get_page_dimensions. */
#define XCB_X_PRINT_PRINT_GET_PAGE_DIMENSIONS 21

/**
 * @@brief xcb_x_print_print_get_page_dimensions_request_t
 **/
typedef struct xcb_x_print_print_get_page_dimensions_request_t {
    uint8_t                major_opcode;
    uint8_t                minor_opcode;
    uint16_t               length;
    xcb_x_print_pcontext_t context;
} xcb_x_print_print_get_page_dimensions_request_t;

/**
 * @@brief xcb_x_print_print_get_page_dimensions_reply_t
 **/
typedef struct xcb_x_print_print_get_page_dimensions_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint16_t width;
    uint16_t height;
    uint16_t offset_x;
    uint16_t offset_y;
    uint16_t reproducible_width;
    uint16_t reproducible_height;
} xcb_x_print_print_get_page_dimensions_reply_t;

/**
 * @@brief xcb_x_print_print_query_screens_cookie_t
 **/
typedef struct xcb_x_print_print_query_screens_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_query_screens_cookie_t;

/** Opcode for xcb_x_print_print_query_screens. */
#define XCB_X_PRINT_PRINT_QUERY_SCREENS 22

/**
 * @@brief xcb_x_print_print_query_screens_request_t
 **/
typedef struct xcb_x_print_print_query_screens_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
} xcb_x_print_print_query_screens_request_t;

/**
 * @@brief xcb_x_print_print_query_screens_reply_t
 **/
typedef struct xcb_x_print_print_query_screens_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t listCount;
    uint8_t  pad1[20];
} xcb_x_print_print_query_screens_reply_t;

/**
 * @@brief xcb_x_print_print_set_image_resolution_cookie_t
 **/
typedef struct xcb_x_print_print_set_image_resolution_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_set_image_resolution_cookie_t;

/** Opcode for xcb_x_print_print_set_image_resolution. */
#define XCB_X_PRINT_PRINT_SET_IMAGE_RESOLUTION 23

/**
 * @@brief xcb_x_print_print_set_image_resolution_request_t
 **/
typedef struct xcb_x_print_print_set_image_resolution_request_t {
    uint8_t                major_opcode;
    uint8_t                minor_opcode;
    uint16_t               length;
    xcb_x_print_pcontext_t context;
    uint16_t               image_resolution;
} xcb_x_print_print_set_image_resolution_request_t;

/**
 * @@brief xcb_x_print_print_set_image_resolution_reply_t
 **/
typedef struct xcb_x_print_print_set_image_resolution_reply_t {
    uint8_t  response_type;
    uint8_t  status;
    uint16_t sequence;
    uint32_t length;
    uint16_t previous_resolutions;
} xcb_x_print_print_set_image_resolution_reply_t;

/**
 * @@brief xcb_x_print_print_get_image_resolution_cookie_t
 **/
typedef struct xcb_x_print_print_get_image_resolution_cookie_t {
    unsigned int sequence;
} xcb_x_print_print_get_image_resolution_cookie_t;

/** Opcode for xcb_x_print_print_get_image_resolution. */
#define XCB_X_PRINT_PRINT_GET_IMAGE_RESOLUTION 24

/**
 * @@brief xcb_x_print_print_get_image_resolution_request_t
 **/
typedef struct xcb_x_print_print_get_image_resolution_request_t {
    uint8_t                major_opcode;
    uint8_t                minor_opcode;
    uint16_t               length;
    xcb_x_print_pcontext_t context;
} xcb_x_print_print_get_image_resolution_request_t;

/**
 * @@brief xcb_x_print_print_get_image_resolution_reply_t
 **/
typedef struct xcb_x_print_print_get_image_resolution_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint16_t image_resolution;
} xcb_x_print_print_get_image_resolution_reply_t;

/** Opcode for xcb_x_print_notify. */
#define XCB_X_PRINT_NOTIFY 0

/**
 * @@brief xcb_x_print_notify_event_t
 **/
typedef struct xcb_x_print_notify_event_t {
    uint8_t                response_type;
    uint8_t                detail;
    uint16_t               sequence;
    xcb_x_print_pcontext_t context;
    uint8_t                cancel;
} xcb_x_print_notify_event_t;

/** Opcode for xcb_x_print_attribut_notify. */
#define XCB_X_PRINT_ATTRIBUT_NOTIFY 1

/**
 * @@brief xcb_x_print_attribut_notify_event_t
 **/
typedef struct xcb_x_print_attribut_notify_event_t {
    uint8_t                response_type;
    uint8_t                detail;
    uint16_t               sequence;
    xcb_x_print_pcontext_t context;
} xcb_x_print_attribut_notify_event_t;

/** Opcode for xcb_x_print_bad_context. */
#define XCB_X_PRINT_BAD_CONTEXT 0

/**
 * @@brief xcb_x_print_bad_context_error_t
 **/
typedef struct xcb_x_print_bad_context_error_t {
    uint8_t  response_type;
    uint8_t  error_code;
    uint16_t sequence;
} xcb_x_print_bad_context_error_t;

/** Opcode for xcb_x_print_bad_sequence. */
#define XCB_X_PRINT_BAD_SEQUENCE 1

/**
 * @@brief xcb_x_print_bad_sequence_error_t
 **/
typedef struct xcb_x_print_bad_sequence_error_t {
    uint8_t  response_type;
    uint8_t  error_code;
    uint16_t sequence;
} xcb_x_print_bad_sequence_error_t;

/**
 * Get the next element of the iterator
 * @@param i Pointer to a xcb_x_print_string8_iterator_t
 *
 * Get the next element in the iterator. The member rem is
 * decreased by one. The member data points to the next
 * element. The member index is increased by sizeof(xcb_x_print_string8_t)
 */
void
xcb_x_print_string8_next (xcb_x_print_string8_iterator_t *i);

/**
 * Return the iterator pointing to the last element
 * @@param i An xcb_x_print_string8_iterator_t
 * @@return  The iterator pointing to the last element
 *
 * Set the current element in the iterator to the last element.
 * The member rem is set to 0. The member data points to the
 * last element.
 */
xcb_generic_iterator_t
xcb_x_print_string8_end (xcb_x_print_string8_iterator_t i);

int
xcb_x_print_printer_serialize (void                        **_buffer,
                               const xcb_x_print_printer_t  *_aux,
                               const xcb_x_print_string8_t  *name,
                               const xcb_x_print_string8_t  *description);

int
xcb_x_print_printer_unserialize (const void              *_buffer,
                                 xcb_x_print_printer_t  **_aux);

int
xcb_x_print_printer_sizeof (const void  *_buffer);

xcb_x_print_string8_t *
xcb_x_print_printer_name (const xcb_x_print_printer_t *R);

int
xcb_x_print_printer_name_length (const xcb_x_print_printer_t *R);

xcb_generic_iterator_t
xcb_x_print_printer_name_end (const xcb_x_print_printer_t *R);

xcb_x_print_string8_t *
xcb_x_print_printer_description (const xcb_x_print_printer_t *R);

int
xcb_x_print_printer_description_length (const xcb_x_print_printer_t *R);

xcb_generic_iterator_t
xcb_x_print_printer_description_end (const xcb_x_print_printer_t *R);

/**
 * Get the next element of the iterator
 * @@param i Pointer to a xcb_x_print_printer_iterator_t
 *
 * Get the next element in the iterator. The member rem is
 * decreased by one. The member data points to the next
 * element. The member index is increased by sizeof(xcb_x_print_printer_t)
 */
void
xcb_x_print_printer_next (xcb_x_print_printer_iterator_t *i);

/**
 * Return the iterator pointing to the last element
 * @@param i An xcb_x_print_printer_iterator_t
 * @@return  The iterator pointing to the last element
 *
 * Set the current element in the iterator to the last element.
 * The member rem is set to 0. The member data points to the
 * last element.
 */
xcb_generic_iterator_t
xcb_x_print_printer_end (xcb_x_print_printer_iterator_t i);

/**
 * Get the next element of the iterator
 * @@param i Pointer to a xcb_x_print_pcontext_iterator_t
 *
 * Get the next element in the iterator. The member rem is
 * decreased by one. The member data points to the next
 * element. The member index is increased by sizeof(xcb_x_print_pcontext_t)
 */
void
xcb_x_print_pcontext_next (xcb_x_print_pcontext_iterator_t *i);

/**
 * Return the iterator pointing to the last element
 * @@param i An xcb_x_print_pcontext_iterator_t
 * @@return  The iterator pointing to the last element
 *
 * Set the current element in the iterator to the last element.
 * The member rem is set to 0. The member data points to the
 * last element.
 */
xcb_generic_iterator_t
xcb_x_print_pcontext_end (xcb_x_print_pcontext_iterator_t i);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_query_version_cookie_t
xcb_x_print_print_query_version (xcb_connection_t *c);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_query_version_cookie_t
xcb_x_print_print_query_version_unchecked (xcb_connection_t *c);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_query_version_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_query_version_reply_t *
xcb_x_print_print_query_version_reply (xcb_connection_t                          *c,
                                       xcb_x_print_print_query_version_cookie_t   cookie  /**< */,
                                       xcb_generic_error_t                      **e);

int
xcb_x_print_print_get_printer_list_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_get_printer_list_cookie_t
xcb_x_print_print_get_printer_list (xcb_connection_t            *c,
                                    uint32_t                     printerNameLen,
                                    uint32_t                     localeLen,
                                    const xcb_x_print_string8_t *printer_name,
                                    const xcb_x_print_string8_t *locale);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_get_printer_list_cookie_t
xcb_x_print_print_get_printer_list_unchecked (xcb_connection_t            *c,
                                              uint32_t                     printerNameLen,
                                              uint32_t                     localeLen,
                                              const xcb_x_print_string8_t *printer_name,
                                              const xcb_x_print_string8_t *locale);

int
xcb_x_print_print_get_printer_list_printers_length (const xcb_x_print_print_get_printer_list_reply_t *R);

xcb_x_print_printer_iterator_t
xcb_x_print_print_get_printer_list_printers_iterator (const xcb_x_print_print_get_printer_list_reply_t *R);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_get_printer_list_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_get_printer_list_reply_t *
xcb_x_print_print_get_printer_list_reply (xcb_connection_t                             *c,
                                          xcb_x_print_print_get_printer_list_cookie_t   cookie  /**< */,
                                          xcb_generic_error_t                         **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_rehash_printer_list_checked (xcb_connection_t *c);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_rehash_printer_list (xcb_connection_t *c);

int
xcb_x_print_create_context_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_create_context_checked (xcb_connection_t            *c,
                                    uint32_t                     context_id,
                                    uint32_t                     printerNameLen,
                                    uint32_t                     localeLen,
                                    const xcb_x_print_string8_t *printerName,
                                    const xcb_x_print_string8_t *locale);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_create_context (xcb_connection_t            *c,
                            uint32_t                     context_id,
                            uint32_t                     printerNameLen,
                            uint32_t                     localeLen,
                            const xcb_x_print_string8_t *printerName,
                            const xcb_x_print_string8_t *locale);

xcb_x_print_string8_t *
xcb_x_print_create_context_printer_name (const xcb_x_print_create_context_request_t *R);

int
xcb_x_print_create_context_printer_name_length (const xcb_x_print_create_context_request_t *R);

xcb_generic_iterator_t
xcb_x_print_create_context_printer_name_end (const xcb_x_print_create_context_request_t *R);

xcb_x_print_string8_t *
xcb_x_print_create_context_locale (const xcb_x_print_create_context_request_t *R);

int
xcb_x_print_create_context_locale_length (const xcb_x_print_create_context_request_t *R);

xcb_generic_iterator_t
xcb_x_print_create_context_locale_end (const xcb_x_print_create_context_request_t *R);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_set_context_checked (xcb_connection_t *c,
                                       uint32_t          context);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_set_context (xcb_connection_t *c,
                               uint32_t          context);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_get_context_cookie_t
xcb_x_print_print_get_context (xcb_connection_t *c);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_get_context_cookie_t
xcb_x_print_print_get_context_unchecked (xcb_connection_t *c);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_get_context_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_get_context_reply_t *
xcb_x_print_print_get_context_reply (xcb_connection_t                        *c,
                                     xcb_x_print_print_get_context_cookie_t   cookie  /**< */,
                                     xcb_generic_error_t                    **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_destroy_context_checked (xcb_connection_t *c,
                                           uint32_t          context);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_destroy_context (xcb_connection_t *c,
                                   uint32_t          context);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_get_screen_of_context_cookie_t
xcb_x_print_print_get_screen_of_context (xcb_connection_t *c);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_get_screen_of_context_cookie_t
xcb_x_print_print_get_screen_of_context_unchecked (xcb_connection_t *c);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_get_screen_of_context_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_get_screen_of_context_reply_t *
xcb_x_print_print_get_screen_of_context_reply (xcb_connection_t                                  *c,
                                               xcb_x_print_print_get_screen_of_context_cookie_t   cookie  /**< */,
                                               xcb_generic_error_t                              **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_start_job_checked (xcb_connection_t *c,
                                     uint8_t           output_mode);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_start_job (xcb_connection_t *c,
                             uint8_t           output_mode);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_end_job_checked (xcb_connection_t *c,
                                   uint8_t           cancel);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_end_job (xcb_connection_t *c,
                           uint8_t           cancel);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_start_doc_checked (xcb_connection_t *c,
                                     uint8_t           driver_mode);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_start_doc (xcb_connection_t *c,
                             uint8_t           driver_mode);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_end_doc_checked (xcb_connection_t *c,
                                   uint8_t           cancel);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_end_doc (xcb_connection_t *c,
                           uint8_t           cancel);

int
xcb_x_print_print_put_document_data_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_put_document_data_checked (xcb_connection_t            *c,
                                             xcb_drawable_t               drawable,
                                             uint32_t                     len_data,
                                             uint16_t                     len_fmt,
                                             uint16_t                     len_options,
                                             const uint8_t               *data,
                                             const xcb_x_print_string8_t *doc_format,
                                             const xcb_x_print_string8_t *options);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_put_document_data (xcb_connection_t            *c,
                                     xcb_drawable_t               drawable,
                                     uint32_t                     len_data,
                                     uint16_t                     len_fmt,
                                     uint16_t                     len_options,
                                     const uint8_t               *data,
                                     const xcb_x_print_string8_t *doc_format,
                                     const xcb_x_print_string8_t *options);

uint8_t *
xcb_x_print_print_put_document_data_data (const xcb_x_print_print_put_document_data_request_t *R);

int
xcb_x_print_print_put_document_data_data_length (const xcb_x_print_print_put_document_data_request_t *R);

xcb_generic_iterator_t
xcb_x_print_print_put_document_data_data_end (const xcb_x_print_print_put_document_data_request_t *R);

xcb_x_print_string8_t *
xcb_x_print_print_put_document_data_doc_format (const xcb_x_print_print_put_document_data_request_t *R);

int
xcb_x_print_print_put_document_data_doc_format_length (const xcb_x_print_print_put_document_data_request_t *R);

xcb_generic_iterator_t
xcb_x_print_print_put_document_data_doc_format_end (const xcb_x_print_print_put_document_data_request_t *R);

xcb_x_print_string8_t *
xcb_x_print_print_put_document_data_options (const xcb_x_print_print_put_document_data_request_t *R);

int
xcb_x_print_print_put_document_data_options_length (const xcb_x_print_print_put_document_data_request_t *R);

xcb_generic_iterator_t
xcb_x_print_print_put_document_data_options_end (const xcb_x_print_print_put_document_data_request_t *R);

int
xcb_x_print_print_get_document_data_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_get_document_data_cookie_t
xcb_x_print_print_get_document_data (xcb_connection_t       *c,
                                     xcb_x_print_pcontext_t  context,
                                     uint32_t                max_bytes);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_get_document_data_cookie_t
xcb_x_print_print_get_document_data_unchecked (xcb_connection_t       *c,
                                               xcb_x_print_pcontext_t  context,
                                               uint32_t                max_bytes);

uint8_t *
xcb_x_print_print_get_document_data_data (const xcb_x_print_print_get_document_data_reply_t *R);

int
xcb_x_print_print_get_document_data_data_length (const xcb_x_print_print_get_document_data_reply_t *R);

xcb_generic_iterator_t
xcb_x_print_print_get_document_data_data_end (const xcb_x_print_print_get_document_data_reply_t *R);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_get_document_data_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_get_document_data_reply_t *
xcb_x_print_print_get_document_data_reply (xcb_connection_t                              *c,
                                           xcb_x_print_print_get_document_data_cookie_t   cookie  /**< */,
                                           xcb_generic_error_t                          **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_start_page_checked (xcb_connection_t *c,
                                      xcb_window_t      window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_start_page (xcb_connection_t *c,
                              xcb_window_t      window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_end_page_checked (xcb_connection_t *c,
                                    uint8_t           cancel);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_end_page (xcb_connection_t *c,
                            uint8_t           cancel);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_select_input_checked (xcb_connection_t       *c,
                                        xcb_x_print_pcontext_t  context,
                                        uint32_t                event_mask);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_select_input (xcb_connection_t       *c,
                                xcb_x_print_pcontext_t  context,
                                uint32_t                event_mask);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_input_selected_cookie_t
xcb_x_print_print_input_selected (xcb_connection_t       *c,
                                  xcb_x_print_pcontext_t  context);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_input_selected_cookie_t
xcb_x_print_print_input_selected_unchecked (xcb_connection_t       *c,
                                            xcb_x_print_pcontext_t  context);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_input_selected_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_input_selected_reply_t *
xcb_x_print_print_input_selected_reply (xcb_connection_t                           *c,
                                        xcb_x_print_print_input_selected_cookie_t   cookie  /**< */,
                                        xcb_generic_error_t                       **e);

int
xcb_x_print_print_get_attributes_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_get_attributes_cookie_t
xcb_x_print_print_get_attributes (xcb_connection_t       *c,
                                  xcb_x_print_pcontext_t  context,
                                  uint8_t                 pool);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_get_attributes_cookie_t
xcb_x_print_print_get_attributes_unchecked (xcb_connection_t       *c,
                                            xcb_x_print_pcontext_t  context,
                                            uint8_t                 pool);

xcb_x_print_string8_t *
xcb_x_print_print_get_attributes_attributes (const xcb_x_print_print_get_attributes_reply_t *R);

int
xcb_x_print_print_get_attributes_attributes_length (const xcb_x_print_print_get_attributes_reply_t *R);

xcb_generic_iterator_t
xcb_x_print_print_get_attributes_attributes_end (const xcb_x_print_print_get_attributes_reply_t *R);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_get_attributes_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_get_attributes_reply_t *
xcb_x_print_print_get_attributes_reply (xcb_connection_t                           *c,
                                        xcb_x_print_print_get_attributes_cookie_t   cookie  /**< */,
                                        xcb_generic_error_t                       **e);

int
xcb_x_print_print_get_one_attributes_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_get_one_attributes_cookie_t
xcb_x_print_print_get_one_attributes (xcb_connection_t            *c,
                                      xcb_x_print_pcontext_t       context,
                                      uint32_t                     nameLen,
                                      uint8_t                      pool,
                                      const xcb_x_print_string8_t *name);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_get_one_attributes_cookie_t
xcb_x_print_print_get_one_attributes_unchecked (xcb_connection_t            *c,
                                                xcb_x_print_pcontext_t       context,
                                                uint32_t                     nameLen,
                                                uint8_t                      pool,
                                                const xcb_x_print_string8_t *name);

xcb_x_print_string8_t *
xcb_x_print_print_get_one_attributes_value (const xcb_x_print_print_get_one_attributes_reply_t *R);

int
xcb_x_print_print_get_one_attributes_value_length (const xcb_x_print_print_get_one_attributes_reply_t *R);

xcb_generic_iterator_t
xcb_x_print_print_get_one_attributes_value_end (const xcb_x_print_print_get_one_attributes_reply_t *R);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_get_one_attributes_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_get_one_attributes_reply_t *
xcb_x_print_print_get_one_attributes_reply (xcb_connection_t                               *c,
                                            xcb_x_print_print_get_one_attributes_cookie_t   cookie  /**< */,
                                            xcb_generic_error_t                           **e);

int
xcb_x_print_print_set_attributes_sizeof (const void  *_buffer,
                                         uint32_t     attributes_len);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_x_print_print_set_attributes_checked (xcb_connection_t            *c,
                                          xcb_x_print_pcontext_t       context,
                                          uint32_t                     stringLen,
                                          uint8_t                      pool,
                                          uint8_t                      rule,
                                          uint32_t                     attributes_len,
                                          const xcb_x_print_string8_t *attributes);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_x_print_print_set_attributes (xcb_connection_t            *c,
                                  xcb_x_print_pcontext_t       context,
                                  uint32_t                     stringLen,
                                  uint8_t                      pool,
                                  uint8_t                      rule,
                                  uint32_t                     attributes_len,
                                  const xcb_x_print_string8_t *attributes);

xcb_x_print_string8_t *
xcb_x_print_print_set_attributes_attributes (const xcb_x_print_print_set_attributes_request_t *R);

int
xcb_x_print_print_set_attributes_attributes_length (const xcb_x_print_print_set_attributes_request_t *R);

xcb_generic_iterator_t
xcb_x_print_print_set_attributes_attributes_end (const xcb_x_print_print_set_attributes_request_t *R);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_get_page_dimensions_cookie_t
xcb_x_print_print_get_page_dimensions (xcb_connection_t       *c,
                                       xcb_x_print_pcontext_t  context);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_get_page_dimensions_cookie_t
xcb_x_print_print_get_page_dimensions_unchecked (xcb_connection_t       *c,
                                                 xcb_x_print_pcontext_t  context);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_get_page_dimensions_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_get_page_dimensions_reply_t *
xcb_x_print_print_get_page_dimensions_reply (xcb_connection_t                                *c,
                                             xcb_x_print_print_get_page_dimensions_cookie_t   cookie  /**< */,
                                             xcb_generic_error_t                            **e);

int
xcb_x_print_print_query_screens_sizeof (const void  *_buffer);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_query_screens_cookie_t
xcb_x_print_print_query_screens (xcb_connection_t *c);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_query_screens_cookie_t
xcb_x_print_print_query_screens_unchecked (xcb_connection_t *c);

xcb_window_t *
xcb_x_print_print_query_screens_roots (const xcb_x_print_print_query_screens_reply_t *R);

int
xcb_x_print_print_query_screens_roots_length (const xcb_x_print_print_query_screens_reply_t *R);

xcb_generic_iterator_t
xcb_x_print_print_query_screens_roots_end (const xcb_x_print_print_query_screens_reply_t *R);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_query_screens_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_query_screens_reply_t *
xcb_x_print_print_query_screens_reply (xcb_connection_t                          *c,
                                       xcb_x_print_print_query_screens_cookie_t   cookie  /**< */,
                                       xcb_generic_error_t                      **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_set_image_resolution_cookie_t
xcb_x_print_print_set_image_resolution (xcb_connection_t       *c,
                                        xcb_x_print_pcontext_t  context,
                                        uint16_t                image_resolution);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_set_image_resolution_cookie_t
xcb_x_print_print_set_image_resolution_unchecked (xcb_connection_t       *c,
                                                  xcb_x_print_pcontext_t  context,
                                                  uint16_t                image_resolution);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_set_image_resolution_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_set_image_resolution_reply_t *
xcb_x_print_print_set_image_resolution_reply (xcb_connection_t                                 *c,
                                              xcb_x_print_print_set_image_resolution_cookie_t   cookie  /**< */,
                                              xcb_generic_error_t                             **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_x_print_print_get_image_resolution_cookie_t
xcb_x_print_print_get_image_resolution (xcb_connection_t       *c,
                                        xcb_x_print_pcontext_t  context);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_x_print_print_get_image_resolution_cookie_t
xcb_x_print_print_get_image_resolution_unchecked (xcb_connection_t       *c,
                                                  xcb_x_print_pcontext_t  context);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_x_print_print_get_image_resolution_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_x_print_print_get_image_resolution_reply_t *
xcb_x_print_print_get_image_resolution_reply (xcb_connection_t                                 *c,
                                              xcb_x_print_print_get_image_resolution_cookie_t   cookie  /**< */,
                                              xcb_generic_error_t                             **e);


#ifdef __cplusplus
}
#endif

#endif

/**
 * @@}
 */
@


1.3
log
@Update to libxcb and xcb-proto 1.11.
Tested on a bulk ports build by naddy@@.
Lots of churn due to white-space and comments changes in generated code.
@
text
@d33 3
a35 3
    xcb_x_print_string8_t *data; /**<  */
    int                    rem; /**<  */
    int                    index; /**<  */
d42 2
a43 2
    uint32_t nameLen; /**<  */
    uint32_t descLen; /**<  */
d50 3
a52 3
    xcb_x_print_printer_t *data; /**<  */
    int                    rem; /**<  */
    int                    index; /**<  */
d61 3
a63 3
    xcb_x_print_pcontext_t *data; /**<  */
    int                     rem; /**<  */
    int                     index; /**<  */
d100 1
a100 1
    unsigned int sequence; /**<  */
d110 3
a112 3
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
d119 6
a124 6
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint16_t major_version; /**<  */
    uint16_t minor_version; /**<  */
d131 1
a131 1
    unsigned int sequence; /**<  */
d141 5
a145 5
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint32_t printerNameLen; /**<  */
    uint32_t localeLen; /**<  */
d152 6
a157 6
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t listCount; /**<  */
    uint8_t  pad1[20]; /**<  */
d167 3
a169 3
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
d179 6
a184 6
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint32_t context_id; /**<  */
    uint32_t printerNameLen; /**<  */
    uint32_t localeLen; /**<  */
d194 4
a197 4
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint32_t context; /**<  */
d204 1
a204 1
    unsigned int sequence; /**<  */
d214 3
a216 3
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
d223 5
a227 5
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t context; /**<  */
d237 4
a240 4
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint32_t context; /**<  */
d247 1
a247 1
    unsigned int sequence; /**<  */
d257 3
a259 3
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
d266 5
a270 5
    uint8_t      response_type; /**<  */
    uint8_t      pad0; /**<  */
    uint16_t     sequence; /**<  */
    uint32_t     length; /**<  */
    xcb_window_t root; /**<  */
d280 4
a283 4
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint8_t  output_mode; /**<  */
d293 4
a296 4
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint8_t  cancel; /**<  */
d306 4
a309 4
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint8_t  driver_mode; /**<  */
d319 4
a322 4
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint8_t  cancel; /**<  */
d332 7
a338 7
    uint8_t        major_opcode; /**<  */
    uint8_t        minor_opcode; /**<  */
    uint16_t       length; /**<  */
    xcb_drawable_t drawable; /**<  */
    uint32_t       len_data; /**<  */
    uint16_t       len_fmt; /**<  */
    uint16_t       len_options; /**<  */
d345 1
a345 1
    unsigned int sequence; /**<  */
d355 5
a359 5
    uint8_t                major_opcode; /**<  */
    uint8_t                minor_opcode; /**<  */
    uint16_t               length; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
    uint32_t               max_bytes; /**<  */
d366 8
a373 8
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t status_code; /**<  */
    uint32_t finished_flag; /**<  */
    uint32_t dataLen; /**<  */
    uint8_t  pad1[12]; /**<  */
d383 4
a386 4
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
d396 5
a400 5
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint8_t  cancel; /**<  */
    uint8_t  pad0[3]; /**<  */
d410 5
a414 5
    uint8_t                major_opcode; /**<  */
    uint8_t                minor_opcode; /**<  */
    uint16_t               length; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
    uint32_t               event_mask; /**<  */
d421 1
a421 1
    unsigned int sequence; /**<  */
d431 4
a434 4
    uint8_t                major_opcode; /**<  */
    uint8_t                minor_opcode; /**<  */
    uint16_t               length; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
d441 6
a446 6
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t event_mask; /**<  */
    uint32_t all_events_mask; /**<  */
d453 1
a453 1
    unsigned int sequence; /**<  */
d463 6
a468 6
    uint8_t                major_opcode; /**<  */
    uint8_t                minor_opcode; /**<  */
    uint16_t               length; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
    uint8_t                pool; /**<  */
    uint8_t                pad0[3]; /**<  */
d475 6
a480 6
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t stringLen; /**<  */
    uint8_t  pad1[20]; /**<  */
d487 1
a487 1
    unsigned int sequence; /**<  */
d497 7
a503 7
    uint8_t                major_opcode; /**<  */
    uint8_t                minor_opcode; /**<  */
    uint16_t               length; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
    uint32_t               nameLen; /**<  */
    uint8_t                pool; /**<  */
    uint8_t                pad0[3]; /**<  */
d510 6
a515 6
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t valueLen; /**<  */
    uint8_t  pad1[20]; /**<  */
d525 8
a532 8
    uint8_t                major_opcode; /**<  */
    uint8_t                minor_opcode; /**<  */
    uint16_t               length; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
    uint32_t               stringLen; /**<  */
    uint8_t                pool; /**<  */
    uint8_t                rule; /**<  */
    uint8_t                pad0[2]; /**<  */
d539 1
a539 1
    unsigned int sequence; /**<  */
d549 4
a552 4
    uint8_t                major_opcode; /**<  */
    uint8_t                minor_opcode; /**<  */
    uint16_t               length; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
d559 10
a568 10
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint16_t width; /**<  */
    uint16_t height; /**<  */
    uint16_t offset_x; /**<  */
    uint16_t offset_y; /**<  */
    uint16_t reproducible_width; /**<  */
    uint16_t reproducible_height; /**<  */
d575 1
a575 1
    unsigned int sequence; /**<  */
d585 3
a587 3
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
d594 6
a599 6
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t listCount; /**<  */
    uint8_t  pad1[20]; /**<  */
d606 1
a606 1
    unsigned int sequence; /**<  */
d616 5
a620 5
    uint8_t                major_opcode; /**<  */
    uint8_t                minor_opcode; /**<  */
    uint16_t               length; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
    uint16_t               image_resolution; /**<  */
d627 5
a631 5
    uint8_t  response_type; /**<  */
    uint8_t  status; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint16_t previous_resolutions; /**<  */
d638 1
a638 1
    unsigned int sequence; /**<  */
d648 4
a651 4
    uint8_t                major_opcode; /**<  */
    uint8_t                minor_opcode; /**<  */
    uint16_t               length; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
d658 5
a662 5
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint16_t image_resolution; /**<  */
d672 5
a676 5
    uint8_t                response_type; /**<  */
    uint8_t                detail; /**<  */
    uint16_t               sequence; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
    uint8_t                cancel; /**<  */
d686 4
a689 4
    uint8_t                response_type; /**<  */
    uint8_t                detail; /**<  */
    uint16_t               sequence; /**<  */
    xcb_x_print_pcontext_t context; /**<  */
d699 3
a701 3
    uint8_t  response_type; /**<  */
    uint8_t  error_code; /**<  */
    uint16_t sequence; /**<  */
d711 3
a713 3
    uint8_t  response_type; /**<  */
    uint8_t  error_code; /**<  */
    uint16_t sequence; /**<  */
d725 1
a725 1
xcb_x_print_string8_next (xcb_x_print_string8_iterator_t *i  /**< */);
d737 1
a737 1
xcb_x_print_string8_end (xcb_x_print_string8_iterator_t i  /**< */);
d740 4
a743 4
xcb_x_print_printer_serialize (void                        **_buffer  /**< */,
                               const xcb_x_print_printer_t  *_aux  /**< */,
                               const xcb_x_print_string8_t  *name  /**< */,
                               const xcb_x_print_string8_t  *description  /**< */);
d746 2
a747 2
xcb_x_print_printer_unserialize (const void              *_buffer  /**< */,
                                 xcb_x_print_printer_t  **_aux  /**< */);
d750 1
a750 1
xcb_x_print_printer_sizeof (const void  *_buffer  /**< */);
d753 1
a753 1
xcb_x_print_printer_name (const xcb_x_print_printer_t *R  /**< */);
d756 1
a756 1
xcb_x_print_printer_name_length (const xcb_x_print_printer_t *R  /**< */);
d759 1
a759 1
xcb_x_print_printer_name_end (const xcb_x_print_printer_t *R  /**< */);
d762 1
a762 1
xcb_x_print_printer_description (const xcb_x_print_printer_t *R  /**< */);
d765 1
a765 1
xcb_x_print_printer_description_length (const xcb_x_print_printer_t *R  /**< */);
d768 1
a768 1
xcb_x_print_printer_description_end (const xcb_x_print_printer_t *R  /**< */);
d779 1
a779 1
xcb_x_print_printer_next (xcb_x_print_printer_iterator_t *i  /**< */);
d791 1
a791 1
xcb_x_print_printer_end (xcb_x_print_printer_iterator_t i  /**< */);
d802 1
a802 1
xcb_x_print_pcontext_next (xcb_x_print_pcontext_iterator_t *i  /**< */);
d814 1
a814 1
xcb_x_print_pcontext_end (xcb_x_print_pcontext_iterator_t i  /**< */);
d825 1
a825 1
xcb_x_print_print_query_version (xcb_connection_t *c  /**< */);
d839 1
a839 1
xcb_x_print_print_query_version_unchecked (xcb_connection_t *c  /**< */);
d856 1
a856 1
xcb_x_print_print_query_version_reply (xcb_connection_t                          *c  /**< */,
d858 1
a858 1
                                       xcb_generic_error_t                      **e  /**< */);
d861 1
a861 1
xcb_x_print_print_get_printer_list_sizeof (const void  *_buffer  /**< */);
d872 5
a876 5
xcb_x_print_print_get_printer_list (xcb_connection_t            *c  /**< */,
                                    uint32_t                     printerNameLen  /**< */,
                                    uint32_t                     localeLen  /**< */,
                                    const xcb_x_print_string8_t *printer_name  /**< */,
                                    const xcb_x_print_string8_t *locale  /**< */);
d890 5
a894 5
xcb_x_print_print_get_printer_list_unchecked (xcb_connection_t            *c  /**< */,
                                              uint32_t                     printerNameLen  /**< */,
                                              uint32_t                     localeLen  /**< */,
                                              const xcb_x_print_string8_t *printer_name  /**< */,
                                              const xcb_x_print_string8_t *locale  /**< */);
d897 1
a897 1
xcb_x_print_print_get_printer_list_printers_length (const xcb_x_print_print_get_printer_list_reply_t *R  /**< */);
d900 1
a900 1
xcb_x_print_print_get_printer_list_printers_iterator (const xcb_x_print_print_get_printer_list_reply_t *R  /**< */);
d917 1
a917 1
xcb_x_print_print_get_printer_list_reply (xcb_connection_t                             *c  /**< */,
d919 1
a919 1
                                          xcb_generic_error_t                         **e  /**< */);
d933 1
a933 1
xcb_x_print_print_rehash_printer_list_checked (xcb_connection_t *c  /**< */);
d944 1
a944 1
xcb_x_print_print_rehash_printer_list (xcb_connection_t *c  /**< */);
d947 1
a947 1
xcb_x_print_create_context_sizeof (const void  *_buffer  /**< */);
d961 6
a966 6
xcb_x_print_create_context_checked (xcb_connection_t            *c  /**< */,
                                    uint32_t                     context_id  /**< */,
                                    uint32_t                     printerNameLen  /**< */,
                                    uint32_t                     localeLen  /**< */,
                                    const xcb_x_print_string8_t *printerName  /**< */,
                                    const xcb_x_print_string8_t *locale  /**< */);
d977 24
a1000 6
xcb_x_print_create_context (xcb_connection_t            *c  /**< */,
                            uint32_t                     context_id  /**< */,
                            uint32_t                     printerNameLen  /**< */,
                            uint32_t                     localeLen  /**< */,
                            const xcb_x_print_string8_t *printerName  /**< */,
                            const xcb_x_print_string8_t *locale  /**< */);
d1014 2
a1015 2
xcb_x_print_print_set_context_checked (xcb_connection_t *c  /**< */,
                                       uint32_t          context  /**< */);
d1026 2
a1027 2
xcb_x_print_print_set_context (xcb_connection_t *c  /**< */,
                               uint32_t          context  /**< */);
d1038 1
a1038 1
xcb_x_print_print_get_context (xcb_connection_t *c  /**< */);
d1052 1
a1052 1
xcb_x_print_print_get_context_unchecked (xcb_connection_t *c  /**< */);
d1069 1
a1069 1
xcb_x_print_print_get_context_reply (xcb_connection_t                        *c  /**< */,
d1071 1
a1071 1
                                     xcb_generic_error_t                    **e  /**< */);
d1085 2
a1086 2
xcb_x_print_print_destroy_context_checked (xcb_connection_t *c  /**< */,
                                           uint32_t          context  /**< */);
d1097 2
a1098 2
xcb_x_print_print_destroy_context (xcb_connection_t *c  /**< */,
                                   uint32_t          context  /**< */);
d1109 1
a1109 1
xcb_x_print_print_get_screen_of_context (xcb_connection_t *c  /**< */);
d1123 1
a1123 1
xcb_x_print_print_get_screen_of_context_unchecked (xcb_connection_t *c  /**< */);
d1140 1
a1140 1
xcb_x_print_print_get_screen_of_context_reply (xcb_connection_t                                  *c  /**< */,
d1142 1
a1142 1
                                               xcb_generic_error_t                              **e  /**< */);
d1156 2
a1157 2
xcb_x_print_print_start_job_checked (xcb_connection_t *c  /**< */,
                                     uint8_t           output_mode  /**< */);
d1168 2
a1169 2
xcb_x_print_print_start_job (xcb_connection_t *c  /**< */,
                             uint8_t           output_mode  /**< */);
d1183 2
a1184 2
xcb_x_print_print_end_job_checked (xcb_connection_t *c  /**< */,
                                   uint8_t           cancel  /**< */);
d1195 2
a1196 2
xcb_x_print_print_end_job (xcb_connection_t *c  /**< */,
                           uint8_t           cancel  /**< */);
d1210 2
a1211 2
xcb_x_print_print_start_doc_checked (xcb_connection_t *c  /**< */,
                                     uint8_t           driver_mode  /**< */);
d1222 2
a1223 2
xcb_x_print_print_start_doc (xcb_connection_t *c  /**< */,
                             uint8_t           driver_mode  /**< */);
d1237 2
a1238 2
xcb_x_print_print_end_doc_checked (xcb_connection_t *c  /**< */,
                                   uint8_t           cancel  /**< */);
d1249 2
a1250 2
xcb_x_print_print_end_doc (xcb_connection_t *c  /**< */,
                           uint8_t           cancel  /**< */);
d1253 1
a1253 3
xcb_x_print_print_put_document_data_sizeof (const void  *_buffer  /**< */,
                                            uint32_t     doc_format_len  /**< */,
                                            uint32_t     options_len  /**< */);
d1267 8
a1274 10
xcb_x_print_print_put_document_data_checked (xcb_connection_t            *c  /**< */,
                                             xcb_drawable_t               drawable  /**< */,
                                             uint32_t                     len_data  /**< */,
                                             uint16_t                     len_fmt  /**< */,
                                             uint16_t                     len_options  /**< */,
                                             const uint8_t               *data  /**< */,
                                             uint32_t                     doc_format_len  /**< */,
                                             const xcb_x_print_string8_t *doc_format  /**< */,
                                             uint32_t                     options_len  /**< */,
                                             const xcb_x_print_string8_t *options  /**< */);
d1285 35
a1319 10
xcb_x_print_print_put_document_data (xcb_connection_t            *c  /**< */,
                                     xcb_drawable_t               drawable  /**< */,
                                     uint32_t                     len_data  /**< */,
                                     uint16_t                     len_fmt  /**< */,
                                     uint16_t                     len_options  /**< */,
                                     const uint8_t               *data  /**< */,
                                     uint32_t                     doc_format_len  /**< */,
                                     const xcb_x_print_string8_t *doc_format  /**< */,
                                     uint32_t                     options_len  /**< */,
                                     const xcb_x_print_string8_t *options  /**< */);
d1322 1
a1322 1
xcb_x_print_print_get_document_data_sizeof (const void  *_buffer  /**< */);
d1333 3
a1335 3
xcb_x_print_print_get_document_data (xcb_connection_t       *c  /**< */,
                                     xcb_x_print_pcontext_t  context  /**< */,
                                     uint32_t                max_bytes  /**< */);
d1349 3
a1351 3
xcb_x_print_print_get_document_data_unchecked (xcb_connection_t       *c  /**< */,
                                               xcb_x_print_pcontext_t  context  /**< */,
                                               uint32_t                max_bytes  /**< */);
d1354 1
a1354 1
xcb_x_print_print_get_document_data_data (const xcb_x_print_print_get_document_data_reply_t *R  /**< */);
d1357 1
a1357 1
xcb_x_print_print_get_document_data_data_length (const xcb_x_print_print_get_document_data_reply_t *R  /**< */);
d1360 1
a1360 1
xcb_x_print_print_get_document_data_data_end (const xcb_x_print_print_get_document_data_reply_t *R  /**< */);
d1377 1
a1377 1
xcb_x_print_print_get_document_data_reply (xcb_connection_t                              *c  /**< */,
d1379 1
a1379 1
                                           xcb_generic_error_t                          **e  /**< */);
d1393 2
a1394 2
xcb_x_print_print_start_page_checked (xcb_connection_t *c  /**< */,
                                      xcb_window_t      window  /**< */);
d1405 2
a1406 2
xcb_x_print_print_start_page (xcb_connection_t *c  /**< */,
                              xcb_window_t      window  /**< */);
d1420 2
a1421 2
xcb_x_print_print_end_page_checked (xcb_connection_t *c  /**< */,
                                    uint8_t           cancel  /**< */);
d1432 2
a1433 5
xcb_x_print_print_end_page (xcb_connection_t *c  /**< */,
                            uint8_t           cancel  /**< */);

int
xcb_x_print_print_select_input_sizeof (const void  *_buffer  /**< */);
d1447 3
a1449 4
xcb_x_print_print_select_input_checked (xcb_connection_t       *c  /**< */,
                                        xcb_x_print_pcontext_t  context  /**< */,
                                        uint32_t                event_mask  /**< */,
                                        const uint32_t         *event_list  /**< */);
d1460 3
a1462 17
xcb_x_print_print_select_input (xcb_connection_t       *c  /**< */,
                                xcb_x_print_pcontext_t  context  /**< */,
                                uint32_t                event_mask  /**< */,
                                const uint32_t         *event_list  /**< */);

int
xcb_x_print_print_input_selected_serialize (void                                           **_buffer  /**< */,
                                            const xcb_x_print_print_input_selected_reply_t  *_aux  /**< */,
                                            const uint32_t                                  *event_list  /**< */,
                                            const uint32_t                                  *all_events_list  /**< */);

int
xcb_x_print_print_input_selected_unserialize (const void                                 *_buffer  /**< */,
                                              xcb_x_print_print_input_selected_reply_t  **_aux  /**< */);

int
xcb_x_print_print_input_selected_sizeof (const void  *_buffer  /**< */);
d1473 2
a1474 2
xcb_x_print_print_input_selected (xcb_connection_t       *c  /**< */,
                                  xcb_x_print_pcontext_t  context  /**< */);
d1488 2
a1489 20
xcb_x_print_print_input_selected_unchecked (xcb_connection_t       *c  /**< */,
                                            xcb_x_print_pcontext_t  context  /**< */);

uint32_t *
xcb_x_print_print_input_selected_event_list (const xcb_x_print_print_input_selected_reply_t *R  /**< */);

int
xcb_x_print_print_input_selected_event_list_length (const xcb_x_print_print_input_selected_reply_t *R  /**< */);

xcb_generic_iterator_t
xcb_x_print_print_input_selected_event_list_end (const xcb_x_print_print_input_selected_reply_t *R  /**< */);

uint32_t *
xcb_x_print_print_input_selected_all_events_list (const xcb_x_print_print_input_selected_reply_t *R  /**< */);

int
xcb_x_print_print_input_selected_all_events_list_length (const xcb_x_print_print_input_selected_reply_t *R  /**< */);

xcb_generic_iterator_t
xcb_x_print_print_input_selected_all_events_list_end (const xcb_x_print_print_input_selected_reply_t *R  /**< */);
d1506 1
a1506 1
xcb_x_print_print_input_selected_reply (xcb_connection_t                           *c  /**< */,
d1508 1
a1508 1
                                        xcb_generic_error_t                       **e  /**< */);
d1511 1
a1511 1
xcb_x_print_print_get_attributes_sizeof (const void  *_buffer  /**< */);
d1522 3
a1524 3
xcb_x_print_print_get_attributes (xcb_connection_t       *c  /**< */,
                                  xcb_x_print_pcontext_t  context  /**< */,
                                  uint8_t                 pool  /**< */);
d1538 3
a1540 3
xcb_x_print_print_get_attributes_unchecked (xcb_connection_t       *c  /**< */,
                                            xcb_x_print_pcontext_t  context  /**< */,
                                            uint8_t                 pool  /**< */);
d1543 1
a1543 1
xcb_x_print_print_get_attributes_attributes (const xcb_x_print_print_get_attributes_reply_t *R  /**< */);
d1546 1
a1546 1
xcb_x_print_print_get_attributes_attributes_length (const xcb_x_print_print_get_attributes_reply_t *R  /**< */);
d1549 1
a1549 1
xcb_x_print_print_get_attributes_attributes_end (const xcb_x_print_print_get_attributes_reply_t *R  /**< */);
d1566 1
a1566 1
xcb_x_print_print_get_attributes_reply (xcb_connection_t                           *c  /**< */,
d1568 1
a1568 1
                                        xcb_generic_error_t                       **e  /**< */);
d1571 1
a1571 1
xcb_x_print_print_get_one_attributes_sizeof (const void  *_buffer  /**< */);
d1582 5
a1586 5
xcb_x_print_print_get_one_attributes (xcb_connection_t            *c  /**< */,
                                      xcb_x_print_pcontext_t       context  /**< */,
                                      uint32_t                     nameLen  /**< */,
                                      uint8_t                      pool  /**< */,
                                      const xcb_x_print_string8_t *name  /**< */);
d1600 5
a1604 5
xcb_x_print_print_get_one_attributes_unchecked (xcb_connection_t            *c  /**< */,
                                                xcb_x_print_pcontext_t       context  /**< */,
                                                uint32_t                     nameLen  /**< */,
                                                uint8_t                      pool  /**< */,
                                                const xcb_x_print_string8_t *name  /**< */);
d1607 1
a1607 1
xcb_x_print_print_get_one_attributes_value (const xcb_x_print_print_get_one_attributes_reply_t *R  /**< */);
d1610 1
a1610 1
xcb_x_print_print_get_one_attributes_value_length (const xcb_x_print_print_get_one_attributes_reply_t *R  /**< */);
d1613 1
a1613 1
xcb_x_print_print_get_one_attributes_value_end (const xcb_x_print_print_get_one_attributes_reply_t *R  /**< */);
d1630 1
a1630 1
xcb_x_print_print_get_one_attributes_reply (xcb_connection_t                               *c  /**< */,
d1632 1
a1632 1
                                            xcb_generic_error_t                           **e  /**< */);
d1635 2
a1636 2
xcb_x_print_print_set_attributes_sizeof (const void  *_buffer  /**< */,
                                         uint32_t     attributes_len  /**< */);
d1650 7
a1656 7
xcb_x_print_print_set_attributes_checked (xcb_connection_t            *c  /**< */,
                                          xcb_x_print_pcontext_t       context  /**< */,
                                          uint32_t                     stringLen  /**< */,
                                          uint8_t                      pool  /**< */,
                                          uint8_t                      rule  /**< */,
                                          uint32_t                     attributes_len  /**< */,
                                          const xcb_x_print_string8_t *attributes  /**< */);
d1667 16
a1682 7
xcb_x_print_print_set_attributes (xcb_connection_t            *c  /**< */,
                                  xcb_x_print_pcontext_t       context  /**< */,
                                  uint32_t                     stringLen  /**< */,
                                  uint8_t                      pool  /**< */,
                                  uint8_t                      rule  /**< */,
                                  uint32_t                     attributes_len  /**< */,
                                  const xcb_x_print_string8_t *attributes  /**< */);
d1693 2
a1694 2
xcb_x_print_print_get_page_dimensions (xcb_connection_t       *c  /**< */,
                                       xcb_x_print_pcontext_t  context  /**< */);
d1708 2
a1709 2
xcb_x_print_print_get_page_dimensions_unchecked (xcb_connection_t       *c  /**< */,
                                                 xcb_x_print_pcontext_t  context  /**< */);
d1726 1
a1726 1
xcb_x_print_print_get_page_dimensions_reply (xcb_connection_t                                *c  /**< */,
d1728 1
a1728 1
                                             xcb_generic_error_t                            **e  /**< */);
d1731 1
a1731 1
xcb_x_print_print_query_screens_sizeof (const void  *_buffer  /**< */);
d1742 1
a1742 1
xcb_x_print_print_query_screens (xcb_connection_t *c  /**< */);
d1756 1
a1756 1
xcb_x_print_print_query_screens_unchecked (xcb_connection_t *c  /**< */);
d1759 1
a1759 1
xcb_x_print_print_query_screens_roots (const xcb_x_print_print_query_screens_reply_t *R  /**< */);
d1762 1
a1762 1
xcb_x_print_print_query_screens_roots_length (const xcb_x_print_print_query_screens_reply_t *R  /**< */);
d1765 1
a1765 1
xcb_x_print_print_query_screens_roots_end (const xcb_x_print_print_query_screens_reply_t *R  /**< */);
d1782 1
a1782 1
xcb_x_print_print_query_screens_reply (xcb_connection_t                          *c  /**< */,
d1784 1
a1784 1
                                       xcb_generic_error_t                      **e  /**< */);
d1795 3
a1797 3
xcb_x_print_print_set_image_resolution (xcb_connection_t       *c  /**< */,
                                        xcb_x_print_pcontext_t  context  /**< */,
                                        uint16_t                image_resolution  /**< */);
d1811 3
a1813 3
xcb_x_print_print_set_image_resolution_unchecked (xcb_connection_t       *c  /**< */,
                                                  xcb_x_print_pcontext_t  context  /**< */,
                                                  uint16_t                image_resolution  /**< */);
d1830 1
a1830 1
xcb_x_print_print_set_image_resolution_reply (xcb_connection_t                                 *c  /**< */,
d1832 1
a1832 1
                                              xcb_generic_error_t                             **e  /**< */);
d1843 2
a1844 2
xcb_x_print_print_get_image_resolution (xcb_connection_t       *c  /**< */,
                                        xcb_x_print_pcontext_t  context  /**< */);
d1858 2
a1859 2
xcb_x_print_print_get_image_resolution_unchecked (xcb_connection_t       *c  /**< */,
                                                  xcb_x_print_pcontext_t  context  /**< */);
d1876 1
a1876 1
xcb_x_print_print_get_image_resolution_reply (xcb_connection_t                                 *c  /**< */,
d1878 1
a1878 1
                                              xcb_generic_error_t                             **e  /**< */);
@


1.2
log
@Update to libxcb 1.9.0.
tested by ajacoutot@@ and naddy@@ on a full ports build
@
text
@d24 1
a24 1
  
d475 6
a480 7
    uint8_t               response_type; /**<  */
    uint8_t               pad0; /**<  */
    uint16_t              sequence; /**<  */
    uint32_t              length; /**<  */
    uint32_t              stringLen; /**<  */
    uint8_t               pad1[20]; /**<  */
    xcb_x_print_string8_t attributes; /**<  */
a723 10

/*****************************************************************************
 **
 ** void xcb_x_print_string8_next
 ** 
 ** @@param xcb_x_print_string8_iterator_t *i
 ** @@returns void
 **
 *****************************************************************************/
 
a735 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_string8_end
 ** 
 ** @@param xcb_x_print_string8_iterator_t i
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a751 10

/*****************************************************************************
 **
 ** xcb_x_print_string8_t * xcb_x_print_printer_name
 ** 
 ** @@param const xcb_x_print_printer_t *R
 ** @@returns xcb_x_print_string8_t *
 **
 *****************************************************************************/
 
a754 10

/*****************************************************************************
 **
 ** int xcb_x_print_printer_name_length
 ** 
 ** @@param const xcb_x_print_printer_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a757 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_printer_name_end
 ** 
 ** @@param const xcb_x_print_printer_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a760 10

/*****************************************************************************
 **
 ** xcb_x_print_string8_t * xcb_x_print_printer_description
 ** 
 ** @@param const xcb_x_print_printer_t *R
 ** @@returns xcb_x_print_string8_t *
 **
 *****************************************************************************/
 
a763 10

/*****************************************************************************
 **
 ** int xcb_x_print_printer_description_length
 ** 
 ** @@param const xcb_x_print_printer_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a766 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_printer_description_end
 ** 
 ** @@param const xcb_x_print_printer_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a777 10

/*****************************************************************************
 **
 ** void xcb_x_print_printer_next
 ** 
 ** @@param xcb_x_print_printer_iterator_t *i
 ** @@returns void
 **
 *****************************************************************************/
 
a789 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_printer_end
 ** 
 ** @@param xcb_x_print_printer_iterator_t i
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a800 10

/*****************************************************************************
 **
 ** void xcb_x_print_pcontext_next
 ** 
 ** @@param xcb_x_print_pcontext_iterator_t *i
 ** @@returns void
 **
 *****************************************************************************/
 
a812 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_pcontext_end
 ** 
 ** @@param xcb_x_print_pcontext_iterator_t i
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d822 1
a822 1
 * 
a823 10

/*****************************************************************************
 **
 ** xcb_x_print_print_query_version_cookie_t xcb_x_print_print_query_version
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_x_print_print_query_version_cookie_t
 **
 *****************************************************************************/
 
d833 1
a833 1
 * 
a837 10

/*****************************************************************************
 **
 ** xcb_x_print_print_query_version_cookie_t xcb_x_print_print_query_version_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_x_print_print_query_version_cookie_t
 **
 *****************************************************************************/
 
d848 1
a848 1
 * 
a854 12

/*****************************************************************************
 **
 ** xcb_x_print_print_query_version_reply_t * xcb_x_print_print_query_version_reply
 ** 
 ** @@param xcb_connection_t                          *c
 ** @@param xcb_x_print_print_query_version_cookie_t   cookie
 ** @@param xcb_generic_error_t                      **e
 ** @@returns xcb_x_print_print_query_version_reply_t *
 **
 *****************************************************************************/
 
d869 1
a869 1
 * 
a870 14

/*****************************************************************************
 **
 ** xcb_x_print_print_get_printer_list_cookie_t xcb_x_print_print_get_printer_list
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param uint32_t                     printerNameLen
 ** @@param uint32_t                     localeLen
 ** @@param const xcb_x_print_string8_t *printer_name
 ** @@param const xcb_x_print_string8_t *locale
 ** @@returns xcb_x_print_print_get_printer_list_cookie_t
 **
 *****************************************************************************/
 
d884 1
a884 1
 * 
a888 14

/*****************************************************************************
 **
 ** xcb_x_print_print_get_printer_list_cookie_t xcb_x_print_print_get_printer_list_unchecked
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param uint32_t                     printerNameLen
 ** @@param uint32_t                     localeLen
 ** @@param const xcb_x_print_string8_t *printer_name
 ** @@param const xcb_x_print_string8_t *locale
 ** @@returns xcb_x_print_print_get_printer_list_cookie_t
 **
 *****************************************************************************/
 
a895 10

/*****************************************************************************
 **
 ** int xcb_x_print_print_get_printer_list_printers_length
 ** 
 ** @@param const xcb_x_print_print_get_printer_list_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a898 10

/*****************************************************************************
 **
 ** xcb_x_print_printer_iterator_t xcb_x_print_print_get_printer_list_printers_iterator
 ** 
 ** @@param const xcb_x_print_print_get_printer_list_reply_t *R
 ** @@returns xcb_x_print_printer_iterator_t
 **
 *****************************************************************************/
 
d909 1
a909 1
 * 
a915 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_printer_list_reply_t * xcb_x_print_print_get_printer_list_reply
 ** 
 ** @@param xcb_connection_t                             *c
 ** @@param xcb_x_print_print_get_printer_list_cookie_t   cookie
 ** @@param xcb_generic_error_t                         **e
 ** @@returns xcb_x_print_print_get_printer_list_reply_t *
 **
 *****************************************************************************/
 
d927 1
a927 1
 * 
a931 10

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_rehash_printer_list_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d941 1
a941 1
 * 
a942 10

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_rehash_printer_list
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d955 1
a955 1
 * 
a959 15

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_create_context_checked
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param uint32_t                     context_id
 ** @@param uint32_t                     printerNameLen
 ** @@param uint32_t                     localeLen
 ** @@param const xcb_x_print_string8_t *printerName
 ** @@param const xcb_x_print_string8_t *locale
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d974 1
a974 1
 * 
a975 15

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_create_context
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param uint32_t                     context_id
 ** @@param uint32_t                     printerNameLen
 ** @@param uint32_t                     localeLen
 ** @@param const xcb_x_print_string8_t *printerName
 ** @@param const xcb_x_print_string8_t *locale
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d990 1
a990 1
 * 
a994 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_set_context_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1005 1
a1005 1
 * 
a1006 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_set_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1017 1
a1017 1
 * 
a1018 10

/*****************************************************************************
 **
 ** xcb_x_print_print_get_context_cookie_t xcb_x_print_print_get_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_x_print_print_get_context_cookie_t
 **
 *****************************************************************************/
 
d1028 1
a1028 1
 * 
a1032 10

/*****************************************************************************
 **
 ** xcb_x_print_print_get_context_cookie_t xcb_x_print_print_get_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_x_print_print_get_context_cookie_t
 **
 *****************************************************************************/
 
d1043 1
a1043 1
 * 
a1049 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_context_reply_t * xcb_x_print_print_get_context_reply
 ** 
 ** @@param xcb_connection_t                        *c
 ** @@param xcb_x_print_print_get_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                    **e
 ** @@returns xcb_x_print_print_get_context_reply_t *
 **
 *****************************************************************************/
 
d1061 1
a1061 1
 * 
a1065 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_destroy_context_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1076 1
a1076 1
 * 
a1077 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_destroy_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          context
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1088 1
a1088 1
 * 
a1089 10

/*****************************************************************************
 **
 ** xcb_x_print_print_get_screen_of_context_cookie_t xcb_x_print_print_get_screen_of_context
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_x_print_print_get_screen_of_context_cookie_t
 **
 *****************************************************************************/
 
d1099 1
a1099 1
 * 
a1103 10

/*****************************************************************************
 **
 ** xcb_x_print_print_get_screen_of_context_cookie_t xcb_x_print_print_get_screen_of_context_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_x_print_print_get_screen_of_context_cookie_t
 **
 *****************************************************************************/
 
d1114 1
a1114 1
 * 
a1120 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_screen_of_context_reply_t * xcb_x_print_print_get_screen_of_context_reply
 ** 
 ** @@param xcb_connection_t                                  *c
 ** @@param xcb_x_print_print_get_screen_of_context_cookie_t   cookie
 ** @@param xcb_generic_error_t                              **e
 ** @@returns xcb_x_print_print_get_screen_of_context_reply_t *
 **
 *****************************************************************************/
 
d1132 1
a1132 1
 * 
a1136 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_start_job_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           output_mode
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1147 1
a1147 1
 * 
a1148 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_start_job
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           output_mode
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1159 1
a1159 1
 * 
a1163 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_end_job_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           cancel
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1174 1
a1174 1
 * 
a1175 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_end_job
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           cancel
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1186 1
a1186 1
 * 
a1190 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_start_doc_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           driver_mode
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1201 1
a1201 1
 * 
a1202 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_start_doc
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           driver_mode
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1213 1
a1213 1
 * 
a1217 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_end_doc_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           cancel
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1228 1
a1228 1
 * 
a1229 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_end_doc
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           cancel
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1245 1
a1245 1
 * 
a1249 19

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_put_document_data_checked
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param xcb_drawable_t               drawable
 ** @@param uint32_t                     len_data
 ** @@param uint16_t                     len_fmt
 ** @@param uint16_t                     len_options
 ** @@param const uint8_t               *data
 ** @@param uint32_t                     doc_format_len
 ** @@param const xcb_x_print_string8_t *doc_format
 ** @@param uint32_t                     options_len
 ** @@param const xcb_x_print_string8_t *options
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1268 1
a1268 1
 * 
a1269 19

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_put_document_data
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param xcb_drawable_t               drawable
 ** @@param uint32_t                     len_data
 ** @@param uint16_t                     len_fmt
 ** @@param uint16_t                     len_options
 ** @@param const uint8_t               *data
 ** @@param uint32_t                     doc_format_len
 ** @@param const xcb_x_print_string8_t *doc_format
 ** @@param uint32_t                     options_len
 ** @@param const xcb_x_print_string8_t *options
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1291 1
a1291 1
 * 
a1292 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_document_data_cookie_t xcb_x_print_print_get_document_data
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@param uint32_t                max_bytes
 ** @@returns xcb_x_print_print_get_document_data_cookie_t
 **
 *****************************************************************************/
 
d1304 1
a1304 1
 * 
a1308 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_document_data_cookie_t xcb_x_print_print_get_document_data_unchecked
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@param uint32_t                max_bytes
 ** @@returns xcb_x_print_print_get_document_data_cookie_t
 **
 *****************************************************************************/
 
a1313 10

/*****************************************************************************
 **
 ** uint8_t * xcb_x_print_print_get_document_data_data
 ** 
 ** @@param const xcb_x_print_print_get_document_data_reply_t *R
 ** @@returns uint8_t *
 **
 *****************************************************************************/
 
a1316 10

/*****************************************************************************
 **
 ** int xcb_x_print_print_get_document_data_data_length
 ** 
 ** @@param const xcb_x_print_print_get_document_data_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1319 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_print_get_document_data_data_end
 ** 
 ** @@param const xcb_x_print_print_get_document_data_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d1330 1
a1330 1
 * 
a1336 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_document_data_reply_t * xcb_x_print_print_get_document_data_reply
 ** 
 ** @@param xcb_connection_t                              *c
 ** @@param xcb_x_print_print_get_document_data_cookie_t   cookie
 ** @@param xcb_generic_error_t                          **e
 ** @@returns xcb_x_print_print_get_document_data_reply_t *
 **
 *****************************************************************************/
 
d1348 1
a1348 1
 * 
a1352 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_start_page_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1363 1
a1363 1
 * 
a1364 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_start_page
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1375 1
a1375 1
 * 
a1379 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_end_page_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           cancel
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1390 1
a1390 1
 * 
a1391 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_end_page
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint8_t           cancel
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1405 1
a1405 1
 * 
a1409 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_select_input_checked
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@param uint32_t                event_mask
 ** @@param const uint32_t         *event_list
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1422 1
a1422 1
 * 
a1423 13

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_select_input
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@param uint32_t                event_mask
 ** @@param const uint32_t         *event_list
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1449 1
a1449 1
 * 
a1450 11

/*****************************************************************************
 **
 ** xcb_x_print_print_input_selected_cookie_t xcb_x_print_print_input_selected
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@returns xcb_x_print_print_input_selected_cookie_t
 **
 *****************************************************************************/
 
d1461 1
a1461 1
 * 
a1465 11

/*****************************************************************************
 **
 ** xcb_x_print_print_input_selected_cookie_t xcb_x_print_print_input_selected_unchecked
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@returns xcb_x_print_print_input_selected_cookie_t
 **
 *****************************************************************************/
 
a1469 10

/*****************************************************************************
 **
 ** uint32_t * xcb_x_print_print_input_selected_event_list
 ** 
 ** @@param const xcb_x_print_print_input_selected_reply_t *R
 ** @@returns uint32_t *
 **
 *****************************************************************************/
 
a1472 10

/*****************************************************************************
 **
 ** int xcb_x_print_print_input_selected_event_list_length
 ** 
 ** @@param const xcb_x_print_print_input_selected_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1475 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_print_input_selected_event_list_end
 ** 
 ** @@param const xcb_x_print_print_input_selected_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
a1478 10

/*****************************************************************************
 **
 ** uint32_t * xcb_x_print_print_input_selected_all_events_list
 ** 
 ** @@param const xcb_x_print_print_input_selected_reply_t *R
 ** @@returns uint32_t *
 **
 *****************************************************************************/
 
a1481 10

/*****************************************************************************
 **
 ** int xcb_x_print_print_input_selected_all_events_list_length
 ** 
 ** @@param const xcb_x_print_print_input_selected_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1484 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_print_input_selected_all_events_list_end
 ** 
 ** @@param const xcb_x_print_print_input_selected_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d1495 1
a1495 1
 * 
a1501 12

/*****************************************************************************
 **
 ** xcb_x_print_print_input_selected_reply_t * xcb_x_print_print_input_selected_reply
 ** 
 ** @@param xcb_connection_t                           *c
 ** @@param xcb_x_print_print_input_selected_cookie_t   cookie
 ** @@param xcb_generic_error_t                       **e
 ** @@returns xcb_x_print_print_input_selected_reply_t *
 **
 *****************************************************************************/
 
d1507 3
d1516 1
a1516 1
 * 
a1517 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_attributes_cookie_t xcb_x_print_print_get_attributes
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@param uint8_t                 pool
 ** @@returns xcb_x_print_print_get_attributes_cookie_t
 **
 *****************************************************************************/
 
d1529 1
a1529 1
 * 
a1533 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_attributes_cookie_t xcb_x_print_print_get_attributes_unchecked
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@param uint8_t                 pool
 ** @@returns xcb_x_print_print_get_attributes_cookie_t
 **
 *****************************************************************************/
 
d1539 9
d1555 1
a1555 1
 * 
a1561 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_attributes_reply_t * xcb_x_print_print_get_attributes_reply
 ** 
 ** @@param xcb_connection_t                           *c
 ** @@param xcb_x_print_print_get_attributes_cookie_t   cookie
 ** @@param xcb_generic_error_t                       **e
 ** @@returns xcb_x_print_print_get_attributes_reply_t *
 **
 *****************************************************************************/
 
d1576 1
a1576 1
 * 
a1577 14

/*****************************************************************************
 **
 ** xcb_x_print_print_get_one_attributes_cookie_t xcb_x_print_print_get_one_attributes
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param xcb_x_print_pcontext_t       context
 ** @@param uint32_t                     nameLen
 ** @@param uint8_t                      pool
 ** @@param const xcb_x_print_string8_t *name
 ** @@returns xcb_x_print_print_get_one_attributes_cookie_t
 **
 *****************************************************************************/
 
d1591 1
a1591 1
 * 
a1595 14

/*****************************************************************************
 **
 ** xcb_x_print_print_get_one_attributes_cookie_t xcb_x_print_print_get_one_attributes_unchecked
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param xcb_x_print_pcontext_t       context
 ** @@param uint32_t                     nameLen
 ** @@param uint8_t                      pool
 ** @@param const xcb_x_print_string8_t *name
 ** @@returns xcb_x_print_print_get_one_attributes_cookie_t
 **
 *****************************************************************************/
 
a1602 10

/*****************************************************************************
 **
 ** xcb_x_print_string8_t * xcb_x_print_print_get_one_attributes_value
 ** 
 ** @@param const xcb_x_print_print_get_one_attributes_reply_t *R
 ** @@returns xcb_x_print_string8_t *
 **
 *****************************************************************************/
 
a1605 10

/*****************************************************************************
 **
 ** int xcb_x_print_print_get_one_attributes_value_length
 ** 
 ** @@param const xcb_x_print_print_get_one_attributes_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1608 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_print_get_one_attributes_value_end
 ** 
 ** @@param const xcb_x_print_print_get_one_attributes_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d1619 1
a1619 1
 * 
a1625 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_one_attributes_reply_t * xcb_x_print_print_get_one_attributes_reply
 ** 
 ** @@param xcb_connection_t                               *c
 ** @@param xcb_x_print_print_get_one_attributes_cookie_t   cookie
 ** @@param xcb_generic_error_t                           **e
 ** @@returns xcb_x_print_print_get_one_attributes_reply_t *
 **
 *****************************************************************************/
 
d1641 1
a1641 1
 * 
a1645 16

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_set_attributes_checked
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param xcb_x_print_pcontext_t       context
 ** @@param uint32_t                     stringLen
 ** @@param uint8_t                      pool
 ** @@param uint8_t                      rule
 ** @@param uint32_t                     attributes_len
 ** @@param const xcb_x_print_string8_t *attributes
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1661 1
a1661 1
 * 
a1662 16

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_x_print_print_set_attributes
 ** 
 ** @@param xcb_connection_t            *c
 ** @@param xcb_x_print_pcontext_t       context
 ** @@param uint32_t                     stringLen
 ** @@param uint8_t                      pool
 ** @@param uint8_t                      rule
 ** @@param uint32_t                     attributes_len
 ** @@param const xcb_x_print_string8_t *attributes
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d1678 1
a1678 1
 * 
a1679 11

/*****************************************************************************
 **
 ** xcb_x_print_print_get_page_dimensions_cookie_t xcb_x_print_print_get_page_dimensions
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@returns xcb_x_print_print_get_page_dimensions_cookie_t
 **
 *****************************************************************************/
 
d1690 1
a1690 1
 * 
a1694 11

/*****************************************************************************
 **
 ** xcb_x_print_print_get_page_dimensions_cookie_t xcb_x_print_print_get_page_dimensions_unchecked
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@returns xcb_x_print_print_get_page_dimensions_cookie_t
 **
 *****************************************************************************/
 
d1706 1
a1706 1
 * 
a1712 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_page_dimensions_reply_t * xcb_x_print_print_get_page_dimensions_reply
 ** 
 ** @@param xcb_connection_t                                *c
 ** @@param xcb_x_print_print_get_page_dimensions_cookie_t   cookie
 ** @@param xcb_generic_error_t                            **e
 ** @@returns xcb_x_print_print_get_page_dimensions_reply_t *
 **
 *****************************************************************************/
 
d1727 1
a1727 1
 * 
a1728 10

/*****************************************************************************
 **
 ** xcb_x_print_print_query_screens_cookie_t xcb_x_print_print_query_screens
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_x_print_print_query_screens_cookie_t
 **
 *****************************************************************************/
 
d1738 1
a1738 1
 * 
a1742 10

/*****************************************************************************
 **
 ** xcb_x_print_print_query_screens_cookie_t xcb_x_print_print_query_screens_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@returns xcb_x_print_print_query_screens_cookie_t
 **
 *****************************************************************************/
 
a1745 10

/*****************************************************************************
 **
 ** xcb_window_t * xcb_x_print_print_query_screens_roots
 ** 
 ** @@param const xcb_x_print_print_query_screens_reply_t *R
 ** @@returns xcb_window_t *
 **
 *****************************************************************************/
 
a1748 10

/*****************************************************************************
 **
 ** int xcb_x_print_print_query_screens_roots_length
 ** 
 ** @@param const xcb_x_print_print_query_screens_reply_t *R
 ** @@returns int
 **
 *****************************************************************************/
 
a1751 10

/*****************************************************************************
 **
 ** xcb_generic_iterator_t xcb_x_print_print_query_screens_roots_end
 ** 
 ** @@param const xcb_x_print_print_query_screens_reply_t *R
 ** @@returns xcb_generic_iterator_t
 **
 *****************************************************************************/
 
d1762 1
a1762 1
 * 
a1768 12

/*****************************************************************************
 **
 ** xcb_x_print_print_query_screens_reply_t * xcb_x_print_print_query_screens_reply
 ** 
 ** @@param xcb_connection_t                          *c
 ** @@param xcb_x_print_print_query_screens_cookie_t   cookie
 ** @@param xcb_generic_error_t                      **e
 ** @@returns xcb_x_print_print_query_screens_reply_t *
 **
 *****************************************************************************/
 
d1780 1
a1780 1
 * 
a1781 12

/*****************************************************************************
 **
 ** xcb_x_print_print_set_image_resolution_cookie_t xcb_x_print_print_set_image_resolution
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@param uint16_t                image_resolution
 ** @@returns xcb_x_print_print_set_image_resolution_cookie_t
 **
 *****************************************************************************/
 
d1793 1
a1793 1
 * 
a1797 12

/*****************************************************************************
 **
 ** xcb_x_print_print_set_image_resolution_cookie_t xcb_x_print_print_set_image_resolution_unchecked
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@param uint16_t                image_resolution
 ** @@returns xcb_x_print_print_set_image_resolution_cookie_t
 **
 *****************************************************************************/
 
d1810 1
a1810 1
 * 
a1816 12

/*****************************************************************************
 **
 ** xcb_x_print_print_set_image_resolution_reply_t * xcb_x_print_print_set_image_resolution_reply
 ** 
 ** @@param xcb_connection_t                                 *c
 ** @@param xcb_x_print_print_set_image_resolution_cookie_t   cookie
 ** @@param xcb_generic_error_t                             **e
 ** @@returns xcb_x_print_print_set_image_resolution_reply_t *
 **
 *****************************************************************************/
 
d1828 1
a1828 1
 * 
a1829 11

/*****************************************************************************
 **
 ** xcb_x_print_print_get_image_resolution_cookie_t xcb_x_print_print_get_image_resolution
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@returns xcb_x_print_print_get_image_resolution_cookie_t
 **
 *****************************************************************************/
 
d1840 1
a1840 1
 * 
a1844 11

/*****************************************************************************
 **
 ** xcb_x_print_print_get_image_resolution_cookie_t xcb_x_print_print_get_image_resolution_unchecked
 ** 
 ** @@param xcb_connection_t       *c
 ** @@param xcb_x_print_pcontext_t  context
 ** @@returns xcb_x_print_print_get_image_resolution_cookie_t
 **
 *****************************************************************************/
 
d1856 1
a1856 1
 * 
a1862 12

/*****************************************************************************
 **
 ** xcb_x_print_print_get_image_resolution_reply_t * xcb_x_print_print_get_image_resolution_reply
 ** 
 ** @@param xcb_connection_t                                 *c
 ** @@param xcb_x_print_print_get_image_resolution_cookie_t   cookie
 ** @@param xcb_generic_error_t                             **e
 ** @@returns xcb_x_print_print_get_image_resolution_reply_t *
 **
 *****************************************************************************/
 
@


1.1
log
@Initial revision
@
text
@d760 13
a814 13
 ** uint32_t xcb_x_print_printer_desc_len
 ** 
 ** @@param const xcb_x_print_printer_t *R
 ** @@returns uint32_t
 **
 *****************************************************************************/
 
uint32_t
xcb_x_print_printer_desc_len (const xcb_x_print_printer_t *R  /**< */);


/*****************************************************************************
 **
d938 1
a938 1
 * Delivers a request to the X server
d959 1
a959 1
 * Delivers a request to the X server
d1013 3
d1017 1
a1017 1
 * Delivers a request to the X server
d1046 1
a1046 1
 * Delivers a request to the X server
d1135 1
a1135 1
 * Delivers a request to the X server
d1159 1
a1159 1
 * Delivers a request to the X server
d1179 3
d1183 1
a1183 1
 * Delivers a request to the X server
d1217 1
a1217 1
 * Delivers a request to the X server
d1248 1
a1248 1
 * Delivers a request to the X server
d1274 1
a1274 1
 * Delivers a request to the X server
d1297 1
a1297 1
 * Delivers a request to the X server
d1318 1
a1318 1
 * Delivers a request to the X server
d1373 1
a1373 1
 * Delivers a request to the X server
d1399 1
a1399 1
 * Delivers a request to the X server
d1422 1
a1422 1
 * Delivers a request to the X server
d1443 1
a1443 1
 * Delivers a request to the X server
d1498 1
a1498 1
 * Delivers a request to the X server
d1524 1
a1524 1
 * Delivers a request to the X server
d1547 1
a1547 1
 * Delivers a request to the X server
d1573 1
a1573 1
 * Delivers a request to the X server
d1596 1
a1596 1
 * Delivers a request to the X server
d1622 1
a1622 1
 * Delivers a request to the X server
d1645 1
a1645 1
 * Delivers a request to the X server
d1671 1
a1671 1
 * Delivers a request to the X server
d1693 5
d1699 1
a1699 1
 * Delivers a request to the X server
d1741 1
a1741 1
 * Delivers a request to the X server
d1779 3
d1783 1
a1783 1
 * Delivers a request to the X server
d1808 1
a1808 1
 * Delivers a request to the X server
d1906 1
a1906 1
 * Delivers a request to the X server
d1932 1
a1932 1
 * Delivers a request to the X server
d1955 1
a1955 1
 * Delivers a request to the X server
d1981 1
a1981 1
 * Delivers a request to the X server
d2003 3
d2007 1
a2007 1
 * Delivers a request to the X server
d2037 1
a2037 1
 * Delivers a request to the X server
d2063 13
d2077 1
a2077 1
 * Delivers a request to the X server
d2100 1
a2100 1
 * Delivers a request to the X server
a2166 13
 ** uint32_t xcb_x_print_print_input_selected_all_events_mask
 ** 
 ** @@param const xcb_x_print_print_input_selected_reply_t *R
 ** @@returns uint32_t
 **
 *****************************************************************************/
 
uint32_t
xcb_x_print_print_input_selected_all_events_mask (const xcb_x_print_print_input_selected_reply_t *R  /**< */);


/*****************************************************************************
 **
d2235 1
a2235 1
 * Delivers a request to the X server
d2260 1
a2260 1
 * Delivers a request to the X server
d2318 3
d2322 1
a2322 1
 * Delivers a request to the X server
d2351 1
a2351 1
 * Delivers a request to the X server
d2452 4
d2457 1
a2457 1
 * Delivers a request to the X server
d2493 1
a2493 1
 * Delivers a request to the X server
d2526 1
a2526 1
 * Delivers a request to the X server
d2549 1
a2549 1
 * Delivers a request to the X server
d2605 3
d2609 1
a2609 1
 * Delivers a request to the X server
d2630 1
a2630 1
 * Delivers a request to the X server
d2724 1
a2724 1
 * Delivers a request to the X server
d2749 1
a2749 1
 * Delivers a request to the X server
d2808 1
a2808 1
 * Delivers a request to the X server
d2831 1
a2831 1
 * Delivers a request to the X server
@


1.1.1.1
log
@Xenocara build infrastructure for libxcb.

This includes a set of pre-generated sources files in src/ so that
python and xslt are not needed to build.
@
text
@@
