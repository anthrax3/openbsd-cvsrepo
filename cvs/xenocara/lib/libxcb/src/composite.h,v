head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.2
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.2
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.12
	OPENBSD_5_0:1.1.1.1.0.10
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.6
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.2
	OPENBSD_4_6_BASE:1.1.1.1
	v1_2:1.1.1.1
	XENOCARA:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.09.02.10.09.44;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	mKDGsTNpiR2zRHYQ;

1.4
date	2015.01.26.21.32.11;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	01TEvO4uNHLqFv7N;

1.3
date	2014.04.14.19.20.17;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.22.20.31.32;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.05.22.16.09.16;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.05.22.16.09.16;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to xcb-proto/libxcb 1.12. "Just commit it" naddy@@
@
text
@/*
 * This file generated automatically from composite.xml by c_client.py.
 * Edit at your peril.
 */

/**
 * @@defgroup XCB_Composite_API XCB Composite API
 * @@brief Composite XCB Protocol Implementation.
 * @@{
 **/

#ifndef __COMPOSITE_H
#define __COMPOSITE_H

#include "xcb.h"
#include "xproto.h"
#include "xfixes.h"

#ifdef __cplusplus
extern "C" {
#endif

#define XCB_COMPOSITE_MAJOR_VERSION 0
#define XCB_COMPOSITE_MINOR_VERSION 4

extern xcb_extension_t xcb_composite_id;

typedef enum xcb_composite_redirect_t {
    XCB_COMPOSITE_REDIRECT_AUTOMATIC = 0,
    XCB_COMPOSITE_REDIRECT_MANUAL = 1
} xcb_composite_redirect_t;

/**
 * @@brief xcb_composite_query_version_cookie_t
 **/
typedef struct xcb_composite_query_version_cookie_t {
    unsigned int sequence;
} xcb_composite_query_version_cookie_t;

/** Opcode for xcb_composite_query_version. */
#define XCB_COMPOSITE_QUERY_VERSION 0

/**
 * @@brief xcb_composite_query_version_request_t
 **/
typedef struct xcb_composite_query_version_request_t {
    uint8_t  major_opcode;
    uint8_t  minor_opcode;
    uint16_t length;
    uint32_t client_major_version;
    uint32_t client_minor_version;
} xcb_composite_query_version_request_t;

/**
 * @@brief xcb_composite_query_version_reply_t
 **/
typedef struct xcb_composite_query_version_reply_t {
    uint8_t  response_type;
    uint8_t  pad0;
    uint16_t sequence;
    uint32_t length;
    uint32_t major_version;
    uint32_t minor_version;
    uint8_t  pad1[16];
} xcb_composite_query_version_reply_t;

/** Opcode for xcb_composite_redirect_window. */
#define XCB_COMPOSITE_REDIRECT_WINDOW 1

/**
 * @@brief xcb_composite_redirect_window_request_t
 **/
typedef struct xcb_composite_redirect_window_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
    uint8_t      update;
    uint8_t      pad0[3];
} xcb_composite_redirect_window_request_t;

/** Opcode for xcb_composite_redirect_subwindows. */
#define XCB_COMPOSITE_REDIRECT_SUBWINDOWS 2

/**
 * @@brief xcb_composite_redirect_subwindows_request_t
 **/
typedef struct xcb_composite_redirect_subwindows_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
    uint8_t      update;
    uint8_t      pad0[3];
} xcb_composite_redirect_subwindows_request_t;

/** Opcode for xcb_composite_unredirect_window. */
#define XCB_COMPOSITE_UNREDIRECT_WINDOW 3

/**
 * @@brief xcb_composite_unredirect_window_request_t
 **/
typedef struct xcb_composite_unredirect_window_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
    uint8_t      update;
    uint8_t      pad0[3];
} xcb_composite_unredirect_window_request_t;

/** Opcode for xcb_composite_unredirect_subwindows. */
#define XCB_COMPOSITE_UNREDIRECT_SUBWINDOWS 4

/**
 * @@brief xcb_composite_unredirect_subwindows_request_t
 **/
typedef struct xcb_composite_unredirect_subwindows_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
    uint8_t      update;
    uint8_t      pad0[3];
} xcb_composite_unredirect_subwindows_request_t;

/** Opcode for xcb_composite_create_region_from_border_clip. */
#define XCB_COMPOSITE_CREATE_REGION_FROM_BORDER_CLIP 5

/**
 * @@brief xcb_composite_create_region_from_border_clip_request_t
 **/
typedef struct xcb_composite_create_region_from_border_clip_request_t {
    uint8_t             major_opcode;
    uint8_t             minor_opcode;
    uint16_t            length;
    xcb_xfixes_region_t region;
    xcb_window_t        window;
} xcb_composite_create_region_from_border_clip_request_t;

/** Opcode for xcb_composite_name_window_pixmap. */
#define XCB_COMPOSITE_NAME_WINDOW_PIXMAP 6

/**
 * @@brief xcb_composite_name_window_pixmap_request_t
 **/
typedef struct xcb_composite_name_window_pixmap_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
    xcb_pixmap_t pixmap;
} xcb_composite_name_window_pixmap_request_t;

/**
 * @@brief xcb_composite_get_overlay_window_cookie_t
 **/
typedef struct xcb_composite_get_overlay_window_cookie_t {
    unsigned int sequence;
} xcb_composite_get_overlay_window_cookie_t;

/** Opcode for xcb_composite_get_overlay_window. */
#define XCB_COMPOSITE_GET_OVERLAY_WINDOW 7

/**
 * @@brief xcb_composite_get_overlay_window_request_t
 **/
typedef struct xcb_composite_get_overlay_window_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
} xcb_composite_get_overlay_window_request_t;

/**
 * @@brief xcb_composite_get_overlay_window_reply_t
 **/
typedef struct xcb_composite_get_overlay_window_reply_t {
    uint8_t      response_type;
    uint8_t      pad0;
    uint16_t     sequence;
    uint32_t     length;
    xcb_window_t overlay_win;
    uint8_t      pad1[20];
} xcb_composite_get_overlay_window_reply_t;

/** Opcode for xcb_composite_release_overlay_window. */
#define XCB_COMPOSITE_RELEASE_OVERLAY_WINDOW 8

/**
 * @@brief xcb_composite_release_overlay_window_request_t
 **/
typedef struct xcb_composite_release_overlay_window_request_t {
    uint8_t      major_opcode;
    uint8_t      minor_opcode;
    uint16_t     length;
    xcb_window_t window;
} xcb_composite_release_overlay_window_request_t;

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_composite_query_version_cookie_t
xcb_composite_query_version (xcb_connection_t *c,
                             uint32_t          client_major_version,
                             uint32_t          client_minor_version);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_composite_query_version_cookie_t
xcb_composite_query_version_unchecked (xcb_connection_t *c,
                                       uint32_t          client_major_version,
                                       uint32_t          client_minor_version);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_composite_query_version_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_composite_query_version_reply_t *
xcb_composite_query_version_reply (xcb_connection_t                      *c,
                                   xcb_composite_query_version_cookie_t   cookie  /**< */,
                                   xcb_generic_error_t                  **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_composite_redirect_window_checked (xcb_connection_t *c,
                                       xcb_window_t      window,
                                       uint8_t           update);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_composite_redirect_window (xcb_connection_t *c,
                               xcb_window_t      window,
                               uint8_t           update);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_composite_redirect_subwindows_checked (xcb_connection_t *c,
                                           xcb_window_t      window,
                                           uint8_t           update);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_composite_redirect_subwindows (xcb_connection_t *c,
                                   xcb_window_t      window,
                                   uint8_t           update);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_composite_unredirect_window_checked (xcb_connection_t *c,
                                         xcb_window_t      window,
                                         uint8_t           update);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_composite_unredirect_window (xcb_connection_t *c,
                                 xcb_window_t      window,
                                 uint8_t           update);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_composite_unredirect_subwindows_checked (xcb_connection_t *c,
                                             xcb_window_t      window,
                                             uint8_t           update);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_composite_unredirect_subwindows (xcb_connection_t *c,
                                     xcb_window_t      window,
                                     uint8_t           update);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_composite_create_region_from_border_clip_checked (xcb_connection_t    *c,
                                                      xcb_xfixes_region_t  region,
                                                      xcb_window_t         window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_composite_create_region_from_border_clip (xcb_connection_t    *c,
                                              xcb_xfixes_region_t  region,
                                              xcb_window_t         window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_composite_name_window_pixmap_checked (xcb_connection_t *c,
                                          xcb_window_t      window,
                                          xcb_pixmap_t      pixmap);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_composite_name_window_pixmap (xcb_connection_t *c,
                                  xcb_window_t      window,
                                  xcb_pixmap_t      pixmap);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_composite_get_overlay_window_cookie_t
xcb_composite_get_overlay_window (xcb_connection_t *c,
                                  xcb_window_t      window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will cause
 * a reply to be generated. Any returned error will be
 * placed in the event queue.
 */
xcb_composite_get_overlay_window_cookie_t
xcb_composite_get_overlay_window_unchecked (xcb_connection_t *c,
                                            xcb_window_t      window);

/**
 * Return the reply
 * @@param c      The connection
 * @@param cookie The cookie
 * @@param e      The xcb_generic_error_t supplied
 *
 * Returns the reply of the request asked by
 *
 * The parameter @@p e supplied to this function must be NULL if
 * xcb_composite_get_overlay_window_unchecked(). is used.
 * Otherwise, it stores the error if any.
 *
 * The returned value must be freed by the caller using free().
 */
xcb_composite_get_overlay_window_reply_t *
xcb_composite_get_overlay_window_reply (xcb_connection_t                           *c,
                                        xcb_composite_get_overlay_window_cookie_t   cookie  /**< */,
                                        xcb_generic_error_t                       **e);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 * This form can be used only if the request will not cause
 * a reply to be generated. Any returned error will be
 * saved for handling by xcb_request_check().
 */
xcb_void_cookie_t
xcb_composite_release_overlay_window_checked (xcb_connection_t *c,
                                              xcb_window_t      window);

/**
 *
 * @@param c The connection
 * @@return A cookie
 *
 * Delivers a request to the X server.
 *
 */
xcb_void_cookie_t
xcb_composite_release_overlay_window (xcb_connection_t *c,
                                      xcb_window_t      window);


#ifdef __cplusplus
}
#endif

#endif

/**
 * @@}
 */
@


1.4
log
@Update to libxcb and xcb-proto 1.11.
Tested on a bulk ports build by naddy@@.
Lots of churn due to white-space and comments changes in generated code.
@
text
@d37 1
a37 1
    unsigned int sequence; /**<  */
d47 5
a51 5
    uint8_t  major_opcode; /**<  */
    uint8_t  minor_opcode; /**<  */
    uint16_t length; /**<  */
    uint32_t client_major_version; /**<  */
    uint32_t client_minor_version; /**<  */
d58 7
a64 7
    uint8_t  response_type; /**<  */
    uint8_t  pad0; /**<  */
    uint16_t sequence; /**<  */
    uint32_t length; /**<  */
    uint32_t major_version; /**<  */
    uint32_t minor_version; /**<  */
    uint8_t  pad1[16]; /**<  */
d74 6
a79 6
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
    uint8_t      update; /**<  */
    uint8_t      pad0[3]; /**<  */
d89 6
a94 6
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
    uint8_t      update; /**<  */
    uint8_t      pad0[3]; /**<  */
d104 6
a109 6
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
    uint8_t      update; /**<  */
    uint8_t      pad0[3]; /**<  */
d119 6
a124 6
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
    uint8_t      update; /**<  */
    uint8_t      pad0[3]; /**<  */
d134 5
a138 5
    uint8_t             major_opcode; /**<  */
    uint8_t             minor_opcode; /**<  */
    uint16_t            length; /**<  */
    xcb_xfixes_region_t region; /**<  */
    xcb_window_t        window; /**<  */
d148 5
a152 5
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
    xcb_pixmap_t pixmap; /**<  */
d159 1
a159 1
    unsigned int sequence; /**<  */
d169 4
a172 4
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
d179 6
a184 6
    uint8_t      response_type; /**<  */
    uint8_t      pad0; /**<  */
    uint16_t     sequence; /**<  */
    uint32_t     length; /**<  */
    xcb_window_t overlay_win; /**<  */
    uint8_t      pad1[20]; /**<  */
d194 4
a197 4
    uint8_t      major_opcode; /**<  */
    uint8_t      minor_opcode; /**<  */
    uint16_t     length; /**<  */
    xcb_window_t window; /**<  */
d209 3
a211 3
xcb_composite_query_version (xcb_connection_t *c  /**< */,
                             uint32_t          client_major_version  /**< */,
                             uint32_t          client_minor_version  /**< */);
d225 3
a227 3
xcb_composite_query_version_unchecked (xcb_connection_t *c  /**< */,
                                       uint32_t          client_major_version  /**< */,
                                       uint32_t          client_minor_version  /**< */);
d244 1
a244 1
xcb_composite_query_version_reply (xcb_connection_t                      *c  /**< */,
d246 1
a246 1
                                   xcb_generic_error_t                  **e  /**< */);
d260 3
a262 3
xcb_composite_redirect_window_checked (xcb_connection_t *c  /**< */,
                                       xcb_window_t      window  /**< */,
                                       uint8_t           update  /**< */);
d273 3
a275 3
xcb_composite_redirect_window (xcb_connection_t *c  /**< */,
                               xcb_window_t      window  /**< */,
                               uint8_t           update  /**< */);
d289 3
a291 3
xcb_composite_redirect_subwindows_checked (xcb_connection_t *c  /**< */,
                                           xcb_window_t      window  /**< */,
                                           uint8_t           update  /**< */);
d302 3
a304 3
xcb_composite_redirect_subwindows (xcb_connection_t *c  /**< */,
                                   xcb_window_t      window  /**< */,
                                   uint8_t           update  /**< */);
d318 3
a320 3
xcb_composite_unredirect_window_checked (xcb_connection_t *c  /**< */,
                                         xcb_window_t      window  /**< */,
                                         uint8_t           update  /**< */);
d331 3
a333 3
xcb_composite_unredirect_window (xcb_connection_t *c  /**< */,
                                 xcb_window_t      window  /**< */,
                                 uint8_t           update  /**< */);
d347 3
a349 3
xcb_composite_unredirect_subwindows_checked (xcb_connection_t *c  /**< */,
                                             xcb_window_t      window  /**< */,
                                             uint8_t           update  /**< */);
d360 3
a362 3
xcb_composite_unredirect_subwindows (xcb_connection_t *c  /**< */,
                                     xcb_window_t      window  /**< */,
                                     uint8_t           update  /**< */);
d376 3
a378 3
xcb_composite_create_region_from_border_clip_checked (xcb_connection_t    *c  /**< */,
                                                      xcb_xfixes_region_t  region  /**< */,
                                                      xcb_window_t         window  /**< */);
d389 3
a391 3
xcb_composite_create_region_from_border_clip (xcb_connection_t    *c  /**< */,
                                              xcb_xfixes_region_t  region  /**< */,
                                              xcb_window_t         window  /**< */);
d405 3
a407 3
xcb_composite_name_window_pixmap_checked (xcb_connection_t *c  /**< */,
                                          xcb_window_t      window  /**< */,
                                          xcb_pixmap_t      pixmap  /**< */);
d418 3
a420 3
xcb_composite_name_window_pixmap (xcb_connection_t *c  /**< */,
                                  xcb_window_t      window  /**< */,
                                  xcb_pixmap_t      pixmap  /**< */);
d431 2
a432 2
xcb_composite_get_overlay_window (xcb_connection_t *c  /**< */,
                                  xcb_window_t      window  /**< */);
d446 2
a447 2
xcb_composite_get_overlay_window_unchecked (xcb_connection_t *c  /**< */,
                                            xcb_window_t      window  /**< */);
d464 1
a464 1
xcb_composite_get_overlay_window_reply (xcb_connection_t                           *c  /**< */,
d466 1
a466 1
                                        xcb_generic_error_t                       **e  /**< */);
d480 2
a481 2
xcb_composite_release_overlay_window_checked (xcb_connection_t *c  /**< */,
                                              xcb_window_t      window  /**< */);
d492 2
a493 2
xcb_composite_release_overlay_window (xcb_connection_t *c  /**< */,
                                      xcb_window_t      window  /**< */);
@


1.3
log
@Update build system and generated files for libxcb 1.10.
@
text
@a16 2
#include "render.h"
#include "shape.h"
d25 1
a25 1
  
d206 1
a206 1
 * 
a207 12

/*****************************************************************************
 **
 ** xcb_composite_query_version_cookie_t xcb_composite_query_version
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          client_major_version
 ** @@param uint32_t          client_minor_version
 ** @@returns xcb_composite_query_version_cookie_t
 **
 *****************************************************************************/
 
d219 1
a219 1
 * 
a223 12

/*****************************************************************************
 **
 ** xcb_composite_query_version_cookie_t xcb_composite_query_version_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param uint32_t          client_major_version
 ** @@param uint32_t          client_minor_version
 ** @@returns xcb_composite_query_version_cookie_t
 **
 *****************************************************************************/
 
d236 1
a236 1
 * 
a242 12

/*****************************************************************************
 **
 ** xcb_composite_query_version_reply_t * xcb_composite_query_version_reply
 ** 
 ** @@param xcb_connection_t                      *c
 ** @@param xcb_composite_query_version_cookie_t   cookie
 ** @@param xcb_generic_error_t                  **e
 ** @@returns xcb_composite_query_version_reply_t *
 **
 *****************************************************************************/
 
d254 1
a254 1
 * 
a258 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_redirect_window_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint8_t           update
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d270 1
a270 1
 * 
a271 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_redirect_window
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint8_t           update
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d283 1
a283 1
 * 
a287 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_redirect_subwindows_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint8_t           update
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d299 1
a299 1
 * 
a300 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_redirect_subwindows
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint8_t           update
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d312 1
a312 1
 * 
a316 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_unredirect_window_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint8_t           update
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d328 1
a328 1
 * 
a329 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_unredirect_window
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint8_t           update
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d341 1
a341 1
 * 
a345 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_unredirect_subwindows_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint8_t           update
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d357 1
a357 1
 * 
a358 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_unredirect_subwindows
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param uint8_t           update
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d370 1
a370 1
 * 
a374 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_create_region_from_border_clip_checked
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param xcb_window_t         window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d386 1
a386 1
 * 
a387 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_create_region_from_border_clip
 ** 
 ** @@param xcb_connection_t    *c
 ** @@param xcb_xfixes_region_t  region
 ** @@param xcb_window_t         window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d399 1
a399 1
 * 
a403 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_name_window_pixmap_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param xcb_pixmap_t      pixmap
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d415 1
a415 1
 * 
a416 12

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_name_window_pixmap
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@param xcb_pixmap_t      pixmap
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d428 1
a428 1
 * 
a429 11

/*****************************************************************************
 **
 ** xcb_composite_get_overlay_window_cookie_t xcb_composite_get_overlay_window
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_composite_get_overlay_window_cookie_t
 **
 *****************************************************************************/
 
d440 1
a440 1
 * 
a444 11

/*****************************************************************************
 **
 ** xcb_composite_get_overlay_window_cookie_t xcb_composite_get_overlay_window_unchecked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_composite_get_overlay_window_cookie_t
 **
 *****************************************************************************/
 
d456 1
a456 1
 * 
a462 12

/*****************************************************************************
 **
 ** xcb_composite_get_overlay_window_reply_t * xcb_composite_get_overlay_window_reply
 ** 
 ** @@param xcb_connection_t                           *c
 ** @@param xcb_composite_get_overlay_window_cookie_t   cookie
 ** @@param xcb_generic_error_t                       **e
 ** @@returns xcb_composite_get_overlay_window_reply_t *
 **
 *****************************************************************************/
 
d474 1
a474 1
 * 
a478 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_release_overlay_window_checked
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
d489 1
a489 1
 * 
a490 11

/*****************************************************************************
 **
 ** xcb_void_cookie_t xcb_composite_release_overlay_window
 ** 
 ** @@param xcb_connection_t *c
 ** @@param xcb_window_t      window
 ** @@returns xcb_void_cookie_t
 **
 *****************************************************************************/
 
@


1.2
log
@Update to libxcb 1.9.0.
tested by ajacoutot@@ and naddy@@ on a full ports build
@
text
@d26 1
a26 1
#define XCB_COMPOSITE_MINOR_VERSION 3
d31 2
a32 2
    XCB_COMPOSITE_REDIRECT_AUTOMATIC,
    XCB_COMPOSITE_REDIRECT_MANUAL
@


1.1
log
@Initial revision
@
text
@d203 1
a203 1
 * Delivers a request to the X server
d228 1
a228 1
 * Delivers a request to the X server
d287 1
a287 1
 * Delivers a request to the X server
d315 1
a315 1
 * Delivers a request to the X server
d340 1
a340 1
 * Delivers a request to the X server
d368 1
a368 1
 * Delivers a request to the X server
d393 1
a393 1
 * Delivers a request to the X server
d421 1
a421 1
 * Delivers a request to the X server
d446 1
a446 1
 * Delivers a request to the X server
d474 1
a474 1
 * Delivers a request to the X server
d499 1
a499 1
 * Delivers a request to the X server
d527 1
a527 1
 * Delivers a request to the X server
d552 1
a552 1
 * Delivers a request to the X server
d580 1
a580 1
 * Delivers a request to the X server
d605 1
a605 1
 * Delivers a request to the X server
d628 1
a628 1
 * Delivers a request to the X server
d685 1
a685 1
 * Delivers a request to the X server
d711 1
a711 1
 * Delivers a request to the X server
@


1.1.1.1
log
@Xenocara build infrastructure for libxcb.

This includes a set of pre-generated sources files in src/ so that
python and xslt are not needed to build.
@
text
@@
