head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.4
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.2
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.14.0.10
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.8
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.2
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.10.0.2
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.2
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v0_9_6:1.1.1.2
	xorg:1.1.1
	v0_9_5:1.1.1.1
	pixman:1.1.1;
locks; strict;
comment	@# @;


1.15
date	2016.10.01.10.17.43;	author matthieu;	state Exp;
branches;
next	1.14;
commitid	FGr8CFhVerRlpSoE;

1.14
date	2014.07.20.19.22.20;	author matthieu;	state Exp;
branches;
next	1.13;
commitid	lHuC72cz4nQROZUb;

1.13
date	2013.12.01.20.34.20;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2013.06.07.17.18.00;	author matthieu;	state Exp;
branches;
next	1.11;

1.11
date	2012.08.17.16.15.20;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2012.02.28.20.36.12;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2011.07.24.13.05.47;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2010.11.14.13.42.49;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.10.03.18.30.04;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.03.25.21.58.52;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2009.06.12.19.33.24;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.05.20.14.27;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.23.19.11.40;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.08.19.00.25;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.03.20.48.51;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.10.03.20.48.51;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.12.10.21.10.19;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Update to pixman 0.34.0.
@
text
@/* config.h.in.  Generated from configure.ac by autoheader.  */

/* Define if building universal (internal helper macro) */
#undef AC_APPLE_UNIVERSAL_BUILD

/* Whether we have alarm() */
#undef HAVE_ALARM

/* Whether the compiler supports __builtin_clz */
#undef HAVE_BUILTIN_CLZ

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Whether we have FE_DIVBYZERO */
#undef HAVE_FEDIVBYZERO

/* Whether we have feenableexcept() */
#undef HAVE_FEENABLEEXCEPT

/* Define to 1 if we have <fenv.h> */
#undef HAVE_FENV_H

/* Whether the tool chain supports __float128 */
#undef HAVE_FLOAT128

/* Whether the compiler supports GCC vector extensions */
#undef HAVE_GCC_VECTOR_EXTENSIONS

/* Define to 1 if you have the `getisax' function. */
#undef HAVE_GETISAX

/* Whether we have getpagesize() */
#undef HAVE_GETPAGESIZE

/* Whether we have gettimeofday() */
#undef HAVE_GETTIMEOFDAY

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the `pixman-1' library (-lpixman-1). */
#undef HAVE_LIBPIXMAN_1

/* Whether we have libpng */
#undef HAVE_LIBPNG

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Whether we have mmap() */
#undef HAVE_MMAP

/* Whether we have mprotect() */
#undef HAVE_MPROTECT

/* Whether we have posix_memalign() */
#undef HAVE_POSIX_MEMALIGN

/* Whether pthreads is supported */
#undef HAVE_PTHREADS

/* Whether we have sigaction() */
#undef HAVE_SIGACTION

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if we have <sys/mman.h> */
#undef HAVE_SYS_MMAN_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#undef LT_OBJDIR

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* enable TIMER_BEGIN/TIMER_END macros */
#undef PIXMAN_TIMERS

/* The size of `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* The compiler supported TLS storage class */
#undef TLS

/* Whether the tool chain supports __attribute__((constructor)) */
#undef TOOLCHAIN_SUPPORTS_ATTRIBUTE_CONSTRUCTOR

/* use ARM IWMMXT compiler intrinsics */
#undef USE_ARM_IWMMXT

/* use ARM NEON assembly optimizations */
#undef USE_ARM_NEON

/* use ARM SIMD assembly optimizations */
#undef USE_ARM_SIMD

/* use GNU-style inline assembler */
#undef USE_GCC_INLINE_ASM

/* use Loongson Multimedia Instructions */
#undef USE_LOONGSON_MMI

/* use MIPS DSPr2 assembly optimizations */
#undef USE_MIPS_DSPR2

/* use OpenMP in the test suite */
#undef USE_OPENMP

/* use SSE2 compiler intrinsics */
#undef USE_SSE2

/* use SSSE3 compiler intrinsics */
#undef USE_SSSE3

/* use VMX compiler intrinsics */
#undef USE_VMX

/* use x86 MMX compiler intrinsics */
#undef USE_X86_MMX

/* Version number of package */
#undef VERSION

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to sqrt if you do not have the `sqrtf' function. */
#undef sqrtf
@


1.14
log
@Update to pixman 0.32.6
@
text
@d15 3
@


1.13
log
@Update to pixman 0.32.4. Tested by naddy@@ and ajacoutot@@
@
text
@d24 3
@


1.12
log
@Update to pixman 0.30.0. Tested by several people during t2k13. Thanks.
@
text
@d9 3
d54 2
a55 2
/* Whether pthread_setspecific() is supported */
#undef HAVE_PTHREAD_SETSPECIFIC
d147 3
@


1.11
log
@Update to pixman 0.26.2. tested at least by ajacoutot@@, mpi@@, shadchin@@.
@
text
@d18 3
d171 3
@


1.10
log
@Update to pixman 0.22.4. Tested by shadchin@@, krw@@.
@
text
@d97 3
d112 3
a117 3
/* Whether the tool chain supports __thread */
#undef TOOLCHAIN_SUPPORTS__THREAD

d129 6
@


1.9
log
@Update to pixman 0.22.2.
0.22.0 was tested by many. 0.22.2 only add a few bug fixes.
Note that on amd64 a recent ld.so is needed to avoid random bus errors.
@
text
@d33 3
d78 4
d115 3
a126 3
/* use MMX compiler intrinsics */
#undef USE_MMX

d135 3
@


1.8
log
@Update to pixman 0.20.0.
tested by ajacoutot@@, krw@@ and on a bulk ports build by landry@@.
@
text
@d12 6
d36 3
d101 3
@


1.7
log
@Update to pixman 0.18.4.

Tweak build to use libpthread-stubs for TLS emulation instead of forcing
every application using pixman to use -pthread.

Tested by jasper@@ and landry@@ on a bulk ports build.
@
text
@d6 3
d15 6
d24 3
d30 3
d39 3
d54 3
d107 3
@


1.6
log
@Update to pixman 0.16.6. Tested on a full ports build by naddy@@.
@
text
@d21 3
d66 3
d72 4
a75 1
/* use ARM NEON compiler intrinsics */
d78 1
a78 1
/* use ARM SIMD compiler intrinsics */
@


1.5
log
@regen with autoconf 2.62p0. Fixes xserver build on macppc.
@
text
@d18 3
d59 3
@


1.4
log
@Update to pixman 0.15.8.
@
text
@d3 3
d82 9
a90 5
   significant byte first (like Motorola and SPARC, unlike Intel and VAX). */
#if defined __BIG_ENDIAN__
# define WORDS_BIGENDIAN 1
#elif ! defined __LITTLE_ENDIAN__
# undef WORDS_BIGENDIAN
@


1.3
log
@pixman 0.12.0. Tested on a full ports build by naddy@@.
@
text
@d57 9
d78 7
a84 3
/* Define to 1 if your processor stores words with the most significant byte
   first (like Motorola and SPARC, unlike Intel and VAX). */
#undef WORDS_BIGENDIAN
@


1.2
log
@Update to pixman 0.10, with one small fix to the sse2 test in configure.ac.
@
text
@d60 2
a61 2
/* use SSE compiler intrinsics */
#undef USE_SSE
d63 2
a64 2
/* use SSE compiler intrinsics */
#undef USE_SSE2
d72 6
@


1.1
log
@Initial revision
@
text
@d60 6
@


1.1.1.1
log
@import pixman 0.9.5
@
text
@@


1.1.1.2
log
@pixman 0.9.6
@
text
@a59 3
/* use SSE compiler intrinsics */
#undef USE_SSE

@

