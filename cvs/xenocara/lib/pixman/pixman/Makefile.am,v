head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.2
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.13.0.12
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.10
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.6
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.9.0.2
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.7.0.2
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v0_9_6:1.1.1.2
	xorg:1.1.1
	v0_9_5:1.1.1.1
	pixman:1.1.1;
locks; strict;
comment	@# @;


1.14
date	2016.10.01.10.17.44;	author matthieu;	state Exp;
branches;
next	1.13;
commitid	FGr8CFhVerRlpSoE;

1.13
date	2013.12.01.20.34.20;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2013.06.07.17.18.00;	author matthieu;	state Exp;
branches;
next	1.11;

1.11
date	2012.11.23.20.44.09;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2012.08.17.16.15.20;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2012.02.28.20.36.12;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2011.07.24.13.05.47;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.11.14.13.42.49;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.03.18.30.04;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.03.25.21.58.52;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.05.20.14.27;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.23.19.11.40;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.08.19.00.26;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.03.20.48.56;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.10.03.20.48.56;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.12.10.21.10.24;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Update to pixman 0.34.0.
@
text
@include $(top_srcdir)/pixman/Makefile.sources

lib_LTLIBRARIES = libpixman-1.la

libpixman_1_la_LDFLAGS = -version-info $(LT_VERSION_INFO) -no-undefined @@PTHREAD_LDFLAGS@@ 
libpixman_1_la_LIBADD = @@PTHREAD_LIBS@@ -lm
libpixman_1_la_SOURCES = $(libpixman_sources) $(libpixman_headers)

libpixmanincludedir = $(includedir)/pixman-1
libpixmaninclude_HEADERS = pixman.h pixman-version.h
noinst_LTLIBRARIES = 

EXTRA_DIST =				\
	Makefile.win32			\
	pixman-region.c			\
	solaris-hwcap.mapfile		\
	$(NULL)

# mmx code
if USE_X86_MMX
noinst_LTLIBRARIES += libpixman-mmx.la
libpixman_mmx_la_SOURCES = \
	pixman-mmx.c
libpixman_mmx_la_CFLAGS = $(MMX_CFLAGS)
libpixman_1_la_LDFLAGS += $(MMX_LDFLAGS)
libpixman_1_la_LIBADD += libpixman-mmx.la

ASM_CFLAGS_mmx=$(MMX_CFLAGS)
endif

# vmx code
if USE_VMX
noinst_LTLIBRARIES += libpixman-vmx.la
libpixman_vmx_la_SOURCES = \
	pixman-vmx.c \
	pixman-combine32.h
libpixman_vmx_la_CFLAGS = $(VMX_CFLAGS)
libpixman_1_la_LIBADD += libpixman-vmx.la

ASM_CFLAGS_vmx=$(VMX_CFLAGS)
endif

# sse2 code
if USE_SSE2
noinst_LTLIBRARIES += libpixman-sse2.la
libpixman_sse2_la_SOURCES = \
	pixman-sse2.c
libpixman_sse2_la_CFLAGS = $(SSE2_CFLAGS)
libpixman_1_la_LDFLAGS += $(SSE2_LDFLAGS)
libpixman_1_la_LIBADD += libpixman-sse2.la

ASM_CFLAGS_sse2=$(SSE2_CFLAGS)
endif

# ssse3 code
if USE_SSSE3
noinst_LTLIBRARIES += libpixman-ssse3.la
libpixman_ssse3_la_SOURCES = \
	pixman-ssse3.c
libpixman_ssse3_la_CFLAGS = $(SSSE3_CFLAGS)
libpixman_1_la_LDFLAGS += $(SSSE3_LDFLAGS)
libpixman_1_la_LIBADD += libpixman-ssse3.la

ASM_CFLAGS_ssse3=$(SSSE3_CFLAGS)
endif

# arm simd code
if USE_ARM_SIMD
noinst_LTLIBRARIES += libpixman-arm-simd.la
libpixman_arm_simd_la_SOURCES = \
	pixman-arm-simd.c	\
	pixman-arm-common.h	\
	pixman-arm-simd-asm.S   \
	pixman-arm-simd-asm-scaled.S \
	pixman-arm-asm.h	\
	pixman-arm-simd-asm.h
libpixman_1_la_LIBADD += libpixman-arm-simd.la

ASM_CFLAGS_arm_simd=
endif

# arm neon code
if USE_ARM_NEON
noinst_LTLIBRARIES += libpixman-arm-neon.la
libpixman_arm_neon_la_SOURCES = \
        pixman-arm-neon.c	\
        pixman-arm-common.h	\
        pixman-arm-neon-asm.S	\
		pixman-arm-neon-asm-bilinear.S \
        pixman-arm-asm.h	\
        pixman-arm-neon-asm.h
libpixman_1_la_LIBADD += libpixman-arm-neon.la

ASM_CFLAGS_arm_neon=
endif

# iwmmxt code
if USE_ARM_IWMMXT
libpixman_iwmmxt_la_SOURCES = pixman-mmx.c
noinst_LTLIBRARIES += libpixman-iwmmxt.la
libpixman_1_la_LIBADD += libpixman-iwmmxt.la

libpixman_iwmmxt_la-pixman-mmx.lo: pixman-mmx.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(AM_CPPFLAGS) $(AM_CPPFLAGS) $(CPPFLAGS) $(CFLAGS) $(IWMMXT_CFLAGS) -MT libpixman_iwmmxt_la-pixman-mmx.lo -MD -MP -MF $(DEPDIR)/libpixman_iwmmxt_la-pixman-mmx.Tpo -c -o libpixman_iwmmxt_la-pixman-mmx.lo `test -f 'pixman-mmx.c' || echo '$(srcdir)/'`pixman-mmx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpixman_iwmmxt_la-pixman-mmx.Tpo $(DEPDIR)/libpixman_iwmmxt_la-pixman-mmx.Plo

libpixman_iwmmxt_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
libpixman_iwmmxt_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
        $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(CFLAGS) $(IWMMXT_CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@@

libpixman-iwmmxt.la: libpixman_iwmmxt_la-pixman-mmx.lo $(libpixman_iwmmxt_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpixman_iwmmxt_la_LINK) libpixman_iwmmxt_la-pixman-mmx.lo $(libpixman_iwmmxt_la_LIBADD) $(LIBS)
endif

# mips dspr2 code
if USE_MIPS_DSPR2
noinst_LTLIBRARIES += libpixman-mips-dspr2.la
libpixman_mips_dspr2_la_SOURCES = \
        pixman-mips-dspr2.c \
        pixman-mips-dspr2.h \
        pixman-mips-dspr2-asm.S \
        pixman-mips-dspr2-asm.h \
        pixman-mips-memcpy-asm.S
libpixman_1_la_LIBADD += libpixman-mips-dspr2.la

ASM_CFLAGS_mips_dspr2=
endif

# loongson code
if USE_LOONGSON_MMI
noinst_LTLIBRARIES += libpixman-loongson-mmi.la
libpixman_loongson_mmi_la_SOURCES = pixman-mmx.c loongson-mmintrin.h
libpixman_loongson_mmi_la_CFLAGS = $(LS_CFLAGS)
libpixman_1_la_LDFLAGS += $(LS_LDFLAGS)
libpixman_1_la_LIBADD += libpixman-loongson-mmi.la
endif

.c.s : $(libpixmaninclude_HEADERS)
	$(CC) $(CFLAGS) $(ASM_CFLAGS_$(@@:pixman-%.s=%)) $(ASM_CFLAGS_$(@@:pixman-arm-%.s=arm_%)) -DHAVE_CONFIG_H -I$(srcdir) -I$(builddir) -I$(top_builddir) -S -o $@@ $<
@


1.13
log
@Update to pixman 0.32.4. Tested by naddy@@ and ajacoutot@@
@
text
@d75 1
d90 1
@


1.12
log
@Update to pixman 0.30.0. Tested by several people during t2k13. Thanks.
@
text
@d55 12
@


1.11
log
@Update to pixman 0.28.0. Tested by ajacoutot@@, mpi@@ and naddy@@ in a full
ports build. Tweaks from mpi@@ for macppc.
@
text
@d61 3
a63 1
	pixman-arm-simd-asm.S
d90 1
a90 1
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(CFLAGS) $(IWMMXT_CFLAGS) -MT libpixman_iwmmxt_la-pixman-mmx.lo -MD -MP -MF $(DEPDIR)/libpixman_iwmmxt_la-pixman-mmx.Tpo -c -o libpixman_iwmmxt_la-pixman-mmx.lo `test -f 'pixman-mmx.c' || echo '$(srcdir)/'`pixman-mmx.c
@


1.10
log
@Update to pixman 0.26.2. tested at least by ajacoutot@@, mpi@@, shadchin@@.
@
text
@d6 1
a6 1
libpixman_1_la_LIBADD = @@PTHREAD_LIBS@@ @@DEP_LIBS@@ -lm
a14 3
	make-combine.pl			\
	pixman-combine.c.template	\
	pixman-combine.h.template	\
a18 2
DISTCLEANFILES = $(BUILT_SOURCES)

d24 1
a24 2
libpixman_mmx_la_CFLAGS = $(DEP_CFLAGS) $(MMX_CFLAGS)
libpixman_mmx_la_LIBADD = $(DEP_LIBS)
d37 1
a37 2
libpixman_vmx_la_CFLAGS = $(DEP_CFLAGS) $(VMX_CFLAGS)
libpixman_vmx_la_LIBADD = $(DEP_LIBS)
d48 1
a48 2
libpixman_sse2_la_CFLAGS = $(DEP_CFLAGS) $(SSE2_CFLAGS)
libpixman_sse2_la_LIBADD = $(DEP_LIBS)
a61 2
libpixman_arm_simd_la_CFLAGS = $(DEP_CFLAGS)
libpixman_arm_simd_la_LIBADD = $(DEP_LIBS)
a75 2
libpixman_arm_neon_la_CFLAGS = $(DEP_CFLAGS)
libpixman_arm_neon_la_LIBADD = $(DEP_LIBS)
a95 1
libpixman_iwmmxt_la_LIBADD = $(DEP_LIBS)
a109 2
libpixman_mips_dspr2_la_CFLAGS = $(DEP_CFLAGS)
libpixman_mips_dspr2_la_LIBADD = $(DEP_LIBS)
d119 1
a119 2
libpixman_loongson_mmi_la_CFLAGS = $(DEP_CFLAGS) $(LS_CFLAGS)
libpixman_loongson_mmi_la_LIBADD = $(DEP_LIBS)
a121 2

ASM_CFLAGS_ls=$(LS_CFLAGS)
d124 1
a124 1
.c.s : $(libpixmaninclude_HEADERS) $(BUILT_SOURCES)
@


1.9
log
@Update to pixman 0.22.4. Tested by shadchin@@, krw@@.
@
text
@d95 1
d97 11
a107 2
libpixman_iwmmxt_la_SOURCES = pixman-mmx.c
libpixman_iwmmxt_la_CFLAGS = $(DEP_CFLAGS) $(IWMMXT_CFLAGS)
a108 2
libpixman_1_la_LDFLAGS += $(IWMMXT_LDFLAGS)
libpixman_1_la_LIBADD += libpixman-iwmmxt.la
d110 30
a139 1
ASM_CFLAGS_IWMMXT=$(IWMMXT_CFLAGS)
@


1.8
log
@Update to pixman 0.22.2.
0.22.0 was tested by many. 0.22.2 only add a few bug fixes.
Note that on amd64 a recent ld.so is needed to avoid random bus errors.
@
text
@d1 2
d4 1
d7 1
a7 33
libpixman_1_la_SOURCES =			\
	pixman.h				\
	pixman-accessor.h			\
	pixman-access.c				\
	pixman-access-accessors.c		\
	pixman-cpu.c				\
	pixman-gradient-walker.c		\
	pixman-region16.c			\
	pixman-region32.c			\
	pixman-compiler.h			\
	pixman-private.h			\
	pixman-image.c				\
	pixman-implementation.c			\
	pixman-combine32.c			\
	pixman-combine32.h			\
	pixman-combine64.c			\
	pixman-combine64.h			\
	pixman-general.c			\
	pixman.c				\
	pixman-fast-path.c			\
	pixman-fast-path.h			\
	pixman-solid-fill.c			\
	pixman-conical-gradient.c		\
	pixman-linear-gradient.c		\
	pixman-radial-gradient.c		\
	pixman-bits-image.c			\
	pixman-utils.c				\
	pixman-edge.c				\
	pixman-edge-accessors.c			\
	pixman-edge-imp.h			\
	pixman-trap.c				\
	pixman-timer.c				\
	pixman-matrix.c
d13 8
a20 1
BUILT_SOURCES = pixman-combine32.h pixman-combine32.c pixman-combine64.h pixman-combine64.c
d22 1
a22 13
pixman-combine32.c : pixman-combine.c.template pixman-combine32.h make-combine.pl
	$(PERL) $(srcdir)/make-combine.pl 8 < $(srcdir)/pixman-combine.c.template > $@@ || ($(RM) $@@; exit 1)
pixman-combine32.h : pixman-combine.h.template make-combine.pl
	$(PERL) $(srcdir)/make-combine.pl 8 < $(srcdir)/pixman-combine.h.template > $@@ || ($(RM) $@@; exit 1)

pixman-combine64.c : pixman-combine.c.template pixman-combine64.h make-combine.pl
	$(PERL) $(srcdir)/make-combine.pl 16 < $(srcdir)/pixman-combine.c.template > $@@ || ($(RM) $@@; exit 1)
pixman-combine64.h : pixman-combine.h.template make-combine.pl
	$(PERL) $(srcdir)/make-combine.pl 16 < $(srcdir)/pixman-combine.h.template > $@@ || ($(RM) $@@; exit 1)

EXTRA_DIST = Makefile.win32 pixman-combine.c.template make-combine.pl pixman-region.c \
	pixman-combine.h.template solaris-hwcap.mapfile
CLEANFILES = pixman-combine32.c pixman-combine64.c pixman-combine32.h pixman-combine64.h
d25 1
a25 1
if USE_MMX
d91 12
@


1.7
log
@Update to pixman 0.20.0.
tested by ajacoutot@@, krw@@ and on a bulk ports build by landry@@.
@
text
@d55 1
a55 1
	pixman-combine.h.template solaris-hwcap.mapfile pixman-x64-mmx-emulation.h
d118 1
@


1.6
log
@Update to pixman 0.18.4.

Tweak build to use libpthread-stubs for TLS emulation instead of forcing
every application using pixman to use -pthread.

Tested by jasper@@ and landry@@ on a bulk ports build.
@
text
@d3 1
a3 1
libpixman_1_la_LIBADD = @@DEP_LIBS@@ -lm
d24 1
d38 1
a38 1
libpixmanincludedir = $(includedir)/pixman-1/
@


1.5
log
@Update to pixman 0.16.6. Tested on a full ports build by naddy@@.
@
text
@d2 1
a2 1
libpixman_1_la_LDFLAGS = -version-info $(LT_VERSION_INFO) -no-undefined
a3 1
libpixman_1_la_CFLAGS = -DPIXMAN_DISABLE_DEPRECATED
d66 2
d79 2
d92 2
d100 4
a103 2
	pixman-arm-simd.c
libpixman_arm_simd_la_CFLAGS = $(DEP_CFLAGS) $(ARM_SIMD_CFLAGS)
d106 2
d114 5
a118 2
        pixman-arm-neon.c
libpixman_arm_neon_la_CFLAGS = $(DEP_CFLAGS) $(ARM_NEON_CFLAGS)
d121 2
d125 2
a126 1

@


1.4
log
@Update to pixman 0.15.8.
@
text
@d7 1
d14 1
d23 1
a23 1
	pixman-pict.c				\
a29 2
	pixman-transformed.c			\
	pixman-transformed-accessors.c		\
a34 1
	pixman-compute-region.c			\
d42 1
a42 9
pixman-combine32.c : combine.inc pixman-combine32.h combine.pl
	$(PERL) $(srcdir)/combine.pl 8 < $(srcdir)/combine.inc > $@@ || ($(RM) $@@; exit 1)
pixman-combine32.h : combine.h.inc combine.pl
	$(PERL) $(srcdir)/combine.pl 8 < $(srcdir)/combine.h.inc > $@@ || ($(RM) $@@; exit 1)

pixman-combine64.c : combine.inc pixman-combine64.h combine.pl
	$(PERL) $(srcdir)/combine.pl 16 < $(srcdir)/combine.inc > $@@ || ($(RM) $@@; exit 1)
pixman-combine64.h : combine.h.inc combine.pl
	$(PERL) $(srcdir)/combine.pl 16 < $(srcdir)/combine.h.inc > $@@ || ($(RM) $@@; exit 1)
d44 12
a55 2
EXTRA_DIST = Makefile.win32 combine.inc combine.pl pixman-region.c \
	combine.h.inc solaris-hwcap.mapfile
d95 1
a95 2
	pixman-arm-simd.c \
	pixman-arm-simd.h
d105 1
a105 2
        pixman-arm-neon.c \
        pixman-arm-neon.h
@


1.3
log
@pixman 0.12.0. Tested on a full ports build by naddy@@.
@
text
@d5 33
a37 25
libpixman_1_la_SOURCES =		\
	pixman.h			\
	pixman-access.c			\
	pixman-access-accessors.c	\
	pixman-region16.c		\
	pixman-region32.c		\
	pixman-private.h		\
	pixman-image.c			\
	pixman-combine32.c		\
	pixman-combine32.h		\
	pixman-combine64.c		\
	pixman-combine64.h		\
	pixman-compose.c		\
	pixman-compose-accessors.c	\
	pixman-pict.c			\
	pixman-source.c			\
	pixman-transformed.c		\
	pixman-transformed-accessors.c	\
	pixman-utils.c			\
	pixman-edge.c			\
	pixman-edge-accessors.c		\
	pixman-edge-imp.h		\
	pixman-trap.c			\
	pixman-compute-region.c		\
	pixman-timer.c
d53 2
a54 1
EXTRA_DIST = Makefile.win32 combine.inc combine.pl pixman-region.c combine.h.inc
d61 1
a61 2
	pixman-mmx.c \
	pixman-mmx.h
d64 1
a72 1
	pixman-vmx.h \
d83 1
a83 2
	pixman-sse2.c \
	pixman-sse2.h
d86 1
d89 23
@


1.2
log
@Update to pixman 0.10, with one small fix to the sse2 test in configure.ac.
@
text
@d2 1
a2 1
libpixman_1_la_LDFLAGS = -version-info $(LT_VERSION_INFO)
d4 1
d9 2
a10 1
	pixman-region.c			\
d13 4
a16 1
	pixman-combine.c		\
d35 12
a46 1
EXTRA_DIST = Makefile.win32
d59 11
d73 7
a79 7
noinst_LTLIBRARIES += libpixman-sse.la
libpixman_sse_la_SOURCES = \
	pixman-sse.c \
	pixman-sse.h
libpixman_sse_la_CFLAGS = $(DEP_CFLAGS) $(SSE_CFLAGS)
libpixman_sse_la_LIBADD = $(DEP_LIBS)
libpixman_1_la_LIBADD += libpixman-sse.la
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
libpixman_1_la_LIBADD = @@DEP_LIBS@@ -lm libpixmanwrapper.la
d5 19
a23 11
	pixman.h		\
	pixman-region.c		\
	pixman-private.h	\
	pixman-image.c		\
	pixman-compose.c	\
	pixman-pict.c		\
	pixman-utils.c		\
	pixman-edge.c		\
	pixman-edge-imp.h	\
	pixman-trap.c		\
	pixman-compute-region.c \
d27 2
a28 9
libpixmaninclude_HEADERS = pixman.h

# wrapper library
noinst_LTLIBRARIES = libpixmanwrapper.la
libpixmanwrapper_la_SOURCES =	\
	pixman-compose.c	\
	pixman-edge.c
libpixmanwrapper_la_CFLAGS = $(DEP_CFLAGS) -DPIXMAN_FB_ACCESSORS

d30 1
d42 13
@


1.1.1.1
log
@import pixman 0.9.5
@
text
@@


1.1.1.2
log
@pixman 0.9.6
@
text
@d3 1
a3 1
libpixman_1_la_LIBADD = @@DEP_LIBS@@ -lm
a9 1
	pixman-compose-accessors.c	\
a12 1
	pixman-edge-accessors.c		\
d21 9
d32 1
a32 1
noinst_LTLIBRARIES = libpixman-mmx.la
@

