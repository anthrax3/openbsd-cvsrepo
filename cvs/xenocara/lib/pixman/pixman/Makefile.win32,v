head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.12
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.10
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.8
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.2
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@# @;


1.8
date	2013.12.01.20.34.20;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2012.11.23.20.44.09;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2012.02.28.20.36.12;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.24.13.05.47;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.03.25.21.58.52;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.06.05.20.14.27;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.09.23.19.11.40;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.08.19.06.14;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to pixman 0.32.4. Tested by naddy@@ and ajacoutot@@
@
text
@default: all

top_srcdir = ..
include $(top_srcdir)/pixman/Makefile.sources
include $(top_srcdir)/Makefile.win32.common

MMX_VAR = $(MMX)
ifeq ($(MMX_VAR),)
MMX_VAR=on
endif

SSE2_VAR = $(SSE2)
ifeq ($(SSE2_VAR),)
SSE2_VAR=on
endif

SSSE3_VAR = $(SSSE3)
ifeq ($(SSSE3_VAR),)
SSSE3_VAR=on
endif

MMX_CFLAGS = -DUSE_X86_MMX -w14710 -w14714
SSE2_CFLAGS = -DUSE_SSE2
SSSE3_CFLAGS = -DUSE_SSSE3

# MMX compilation flags
ifeq ($(MMX_VAR),on)
PIXMAN_CFLAGS += $(MMX_CFLAGS)
libpixman_sources += pixman-mmx.c
endif

# SSE2 compilation flags
ifeq ($(SSE2_VAR),on)
PIXMAN_CFLAGS += $(SSE2_CFLAGS)
libpixman_sources += pixman-sse2.c
endif

# SSSE3 compilation flags
ifeq ($(SSSE3_VAR),on)
PIXMAN_CFLAGS += $(SSSE3_CFLAGS)
libpixman_sources += pixman-ssse3.c
endif

OBJECTS = $(patsubst %.c, $(CFG_VAR)/%.obj, $(libpixman_sources))

# targets
all: inform informMMX informSSE2 informSSSE3 $(CFG_VAR)/$(LIBRARY).lib

informMMX:
ifneq ($(MMX),off)
ifneq ($(MMX),on)
ifneq ($(MMX),)
	@@echo "Invalid specified MMX option : "$(MMX_VAR)"."
	@@echo
	@@echo "Possible choices for MMX are 'on' or 'off'"
	@@exit 1
endif
	@@echo "Setting MMX flag to default value 'on'... (use MMX=on or MMX=off)"
endif
endif

informSSE2:
ifneq ($(SSE2),off)
ifneq ($(SSE2),on)
ifneq ($(SSE2),)
	@@echo "Invalid specified SSE option : "$(SSE2)"."
	@@echo
	@@echo "Possible choices for SSE2 are 'on' or 'off'"
	@@exit 1
endif
	@@echo "Setting SSE2 flag to default value 'on'... (use SSE2=on or SSE2=off)"
endif
endif

informSSSE3:
ifneq ($(SSSE3),off)
ifneq ($(SSSE3),on)
ifneq ($(SSSE3),)
	@@echo "Invalid specified SSE option : "$(SSSE3)"."
	@@echo
	@@echo "Possible choices for SSSE3 are 'on' or 'off'"
	@@exit 1
endif
	@@echo "Setting SSSE3 flag to default value 'on'... (use SSSE3=on or SSSE3=off)"
endif
endif


# pixman linking
$(CFG_VAR)/$(LIBRARY).lib: $(OBJECTS)
	@@$(AR) $(PIXMAN_ARFLAGS) -OUT:$@@ $^

.PHONY: all informMMX informSSE2 informSSSE3
@


1.7
log
@Update to pixman 0.28.0. Tested by ajacoutot@@, mpi@@ and naddy@@ in a full
ports build. Tweaks from mpi@@ for macppc.
@
text
@d17 5
d24 1
d38 6
d47 1
a47 1
all: inform informMMX informSSE2 $(CFG_VAR)/$(LIBRARY).lib
d75 13
d93 1
a93 1
.PHONY: all informMMX informSSE2
@


1.6
log
@Update to pixman 0.22.4. Tested by shadchin@@, krw@@.
@
text
@d67 2
@


1.5
log
@Update to pixman 0.22.2.
0.22.0 was tested by many. 0.22.2 only add a few bug fixes.
Note that on amd64 a recent ld.so is needed to avoid random bus errors.
@
text
@d1 1
a1 1
LIBRARY     = pixman-1
d3 3
a5 7
CC   = cl
LINK = link

CFG_VAR = $(CFG)
ifeq ($(CFG_VAR),)
CFG_VAR=release
endif
d17 1
a17 2
CFLAGS     = -MD -nologo -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE -I../pixman/src -I. -DPACKAGE=$(LIBRARY) -DPACKAGE_VERSION="" -DPACKAGE_BUGREPORT=""
MMX_CFLAGS = -DUSE_MMX -w14710 -w14714
a19 36
# optimization flags
ifeq ($(CFG_VAR),debug)
CFLAGS += -Od -Zi
else
CFLAGS += -O2
endif

SOURCES =				\
	pixman-image.c			\
	pixman-access.c			\
	pixman-access-accessors.c	\
	pixman-region16.c		\
	pixman-region32.c		\
	pixman-combine32.c		\
	pixman-combine64.c		\
	pixman-utils.c			\
	pixman-edge.c			\
	pixman-edge-accessors.c		\
	pixman-trap.c			\
	pixman-timer.c			\
	pixman-matrix.c			\
	pixman-gradient-walker.c	\
	pixman-conical-gradient.c	\
	pixman-linear-gradient.c	\
	pixman-radial-gradient.c	\
	pixman-bits-image.c		\
	pixman.c			\
	pixman-cpu.c			\
	pixman-fast-path.c		\
	pixman-implementation.c		\
	pixman-solid-fill.c		\
	pixman-general.c		\
	$(NULL)

BUILT_SOURCES = pixman-combine32.h pixman-combine32.c pixman-combine64.h pixman-combine64.c

d22 2
a23 2
CFLAGS += $(MMX_CFLAGS)
SOURCES += pixman-mmx.c
d28 2
a29 2
CFLAGS += $(SSE2_CFLAGS)
SOURCES += pixman-sse2.c
d32 1
a32 1
OBJECTS     = $(patsubst %.c, $(CFG_VAR)/%.obj, $(SOURCES))
a35 20
	@@exit 0
clean: inform clean_r 
	@@exit 0
pixman: inform informMMX informSSE2 $(CFG_VAR)/$(LIBRARY).lib 
	@@exit 0

inform:
ifneq ($(CFG),release)
ifneq ($(CFG),debug)
ifneq ($(CFG),)
	@@echo "Invalid specified configuration option : "$(CFG)"."
	@@echo
	@@echo -n "Possible choices for configuration are "
	@@echo "'release' and 'debug'"
	@@echo ""
	@@exit 1
endif
	@@echo "Using default RELEASE configuration... (use CFG=release or CFG=debug)"
endif
endif
d43 1
a43 2
	@@echo -n "Possible choices for MMX are 'on' or 'off'"
	@@echo ""
d56 1
a56 2
	@@echo -n "Possible choices for SSE2 are 'on' or 'off'"
	@@echo ""
a62 4
# pixman compilation and linking
$(CFG_VAR)/%.obj: %.c $(BUILT_SOURCES)
	@@mkdir -p $(CFG_VAR)
	@@$(CC) -c $(CFLAGS) -Fo"$@@" $<
d64 1
d66 1
a66 15
	lib -NOLOGO -OUT:$@@ $(OBJECTS) || exit 0

pixman-combine32.c: pixman-combine.c.template pixman-combine32.h make-combine.pl
	perl ./make-combine.pl 8 < $< > $@@ || ($(RM) $@@; exit 1)
pixman-combine32.h: pixman-combine.h.template make-combine.pl
	perl ./make-combine.pl 8 < $< > $@@ || ($(RM) $@@; exit 1)

pixman-combine64.c: pixman-combine.c.template pixman-combine64.h make-combine.pl
	perl ./make-combine.pl 16 < $< > $@@ || ($(RM) $@@; exit 1)
pixman-combine64.h: pixman-combine.h.template make-combine.pl
	perl ./make-combine.pl 16 < $< > $@@ || ($(RM) $@@; exit 1)

clean_r:
	@@rm -f $(CFG_VAR)/*.obj $(CFG_VAR)/*.lib $(CFG_VAR)/*.pdb $(CFG)/*.ilk || exit 0
	@@rm -f $(CFG)/*.obj $(CFG)/*.lib $(CFG)/*.pdb $(CFG)/*.ilk $(BUILT_SOURCES) || exit 0
@


1.4
log
@Update to pixman 0.16.6. Tested on a full ports build by naddy@@.
@
text
@d47 1
d59 2
d127 1
a127 1
$(CFG_VAR)/%.obj: %.c
d146 1
a146 1
	@@rm -f $(CFG)/*.obj $(CFG)/*.lib $(CFG)/*.pdb $(CFG)/*.ilk pixman-combine32.c pixman-combine64.c pixman-combine64.c pixman-combine64.h || exit 0
@


1.3
log
@Update to pixman 0.15.8.
@
text
@d32 4
a35 4
SOURCES = \
	pixman-image.c					\
	pixman-access.c					\
	pixman-access-accessors.c			\
d38 4
a41 10
	pixman-compose.c				\
	pixman-compose-accessors.c	\
	pixman-combine32.c				\
	pixman-combine64.c				\
	pixman-pict.c					\
	pixman-source.c					\
	pixman-transformed.c				\
	pixman-transformed-accessors.c			\
	pixman-utils.c					\
	pixman-edge.c					\
d43 13
a55 4
	pixman-trap.c					\
	pixman-compute-region.c		\
	pixman-timer.c					\
	pixman-matrix.c					\
d131 9
a139 9
pixman-combine32.c: combine.inc pixman-combine32.h combine.pl
	perl ./combine.pl 8 < $< > $@@ || ($(RM) $@@; exit 1)
pixman-combine32.h: combine.h.inc combine.pl
	perl ./combine.pl 8 < $< > $@@ || ($(RM) $@@; exit 1)

pixman-combine64.c: combine.inc pixman-combine64.h combine.pl
	perl ./combine.pl 16 < $< > $@@ || ($(RM) $@@; exit 1)
pixman-combine64.h: combine.h.inc combine.pl
	perl ./combine.pl 16 < $< > $@@ || ($(RM) $@@; exit 1)
d143 1
a143 1
	@@rm -f $(CFG)/*.obj $(CFG)/*.lib $(CFG)/*.pdb $(CFG)/*.ilk pixman-combine32.c pixman-combine64.c || exit 0
@


1.2
log
@pixman 0.12.0. Tested on a full ports build by naddy@@.
@
text
@d52 1
@


1.1
log
@Update to pixman 0.10, with one small fix to the sse2 test in configure.ac.
@
text
@d6 3
a8 2
ifeq ($(CFG),)
CFG=release
d11 8
a18 2
ifeq ($(MMX),)
MMX=1
d23 1
d26 1
a26 1
ifeq ($(CFG),debug)
a32 1
	pixman-region.c				\
d36 2
a37 1
	pixman-combine.c				\
d40 2
d55 1
a55 1
ifeq ($(MMX),1)
d60 7
a66 1
OBJECTS     = $(patsubst %.c, $(CFG)/%.obj, $(SOURCES))
d69 1
a69 1
all: inform informMMX $(CFG)/$(LIBRARY).lib
d73 1
a73 1
pixman: inform informMMX $(CFG)/$(LIBRARY).lib 
d79 1
d87 2
d92 18
a109 3
ifneq ($(MMX),0)
ifneq ($(MMX),1)
	@@echo "Invalid specified MMX option : "$(MMX)"."
d111 1
a111 1
	@@echo -n "Possible choices for MMX are 0 or 1"
d115 2
d120 2
a121 2
$(CFG)/%.obj: %.c
	@@mkdir -p $(CFG)
d124 1
a124 1
$(CFG)/$(LIBRARY).lib: $(OBJECTS)
d127 10
d138 2
a139 1
	@@rm -f $(CFG)/*.obj $(CFG)/*.lib $(CFG)/*.pdb $(CFG)/*.ilk || exit 0
@

