head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.14
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.12
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.8
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v0_9_6:1.1.1.1
	xorg:1.1.1
	v0_9_5:1.1.1.1
	pixman:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2013.06.07.17.18.00;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2012.08.17.16.15.20;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2012.02.28.20.36.12;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.24.13.05.47;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.06.05.20.14.27;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.23.19.11.40;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.08.19.00.25;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.03.20.48.50;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.10.03.20.48.50;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to pixman 0.30.0. Tested by several people during t2k13. Thanks.
@
text
@SUBDIRS = pixman  

pkgconfigdir=$(libdir)/pkgconfig
pkgconfig_DATA=pixman-1.pc

$(pkgconfig_DATA): pixman-1.pc.in

snapshot:
	distdir="$(distdir)-`date '+%Y%m%d'`"; \
	test -d "$(srcdir)/.git" && distdir=$$distdir-`cd "$(srcdir)" && git rev-parse HEAD | cut -c 1-6`; \
	$(MAKE) $(AM_MAKEFLAGS) distdir="$$distdir" dist

GPGKEY=3892336E
USERNAME=$$USER
RELEASE_OR_SNAPSHOT = $$(if test "x$(PIXMAN_VERSION_MINOR)" = "x$$(echo "$(PIXMAN_VERSION_MINOR)/2*2" | bc)" ; then echo release; else echo snapshot; fi)
RELEASE_CAIRO_HOST =	$(USERNAME)@@cairographics.org
RELEASE_CAIRO_DIR =	/srv/cairo.freedesktop.org/www/$(RELEASE_OR_SNAPSHOT)s
RELEASE_CAIRO_URL = 	http://cairographics.org/$(RELEASE_OR_SNAPSHOT)s
RELEASE_XORG_URL =	http://xorg.freedesktop.org/archive/individual/lib
RELEASE_XORG_HOST =	$(USERNAME)@@xorg.freedesktop.org
RELEASE_XORG_DIR =	/srv/xorg.freedesktop.org/archive/individual/lib
RELEASE_ANNOUNCE_LIST = cairo-announce@@cairographics.org, xorg-announce@@lists.freedesktop.org, pixman@@lists.freedesktop.org

EXTRA_DIST =				\
	Makefile.win32			\
	Makefile.win32.common

tar_gz = $(PACKAGE)-$(VERSION).tar.gz
tar_bz2 = $(PACKAGE)-$(VERSION).tar.bz2

sha1_tgz = $(tar_gz).sha1
md5_tgz = $(tar_gz).md5

sha1_tbz2 = $(tar_bz2).sha1
md5_tbz2 = $(tar_bz2).md5

gpg_file = $(sha1_tgz).asc

$(sha1_tgz): $(tar_gz)
	sha1sum $^ > $@@

$(md5_tgz): $(tar_gz)
	md5sum $^ > $@@

$(sha1_tbz2): $(tar_bz2)
	sha1sum $^ > $@@

$(md5_tbz2): $(tar_bz2)
	md5sum $^ > $@@

$(gpg_file): $(sha1_tgz)
	@@echo "Please enter your GPG password to sign the checksum."
	gpg --armor --sign $^ 

HASHFILES = $(sha1_tgz) $(sha1_tbz2) $(md5_tgz) $(md5_tbz2)

release-verify-newer:
	@@echo -n "Checking that no $(VERSION) release already exists at $(RELEASE_XORG_HOST)..."
	@@ssh $(RELEASE_XORG_HOST) test ! -e $(RELEASE_XORG_DIR)/$(tar_gz) \
		|| (echo "Ouch." && echo "Found: $(RELEASE_XORG_HOST):$(RELEASE_XORG_DIR)/$(tar_gz)" \
		&& echo "Refusing to try to generate a new release of the same name." \
		&& false)
	@@ssh $(RELEASE_CAIRO_HOST) test ! -e $(RELEASE_CAIRO_DIR)/$(tar_gz) \
		|| (echo "Ouch." && echo "Found: $(RELEASE_CAIRO_HOST):$(RELEASE_CAIRO_DIR)/$(tar_gz)" \
		&& echo "Refusing to try to generate a new release of the same name." \
		&& false)
	@@echo "Good."

release-remove-old:
	$(RM) $(tar_gz) $(tar_bz2) $(HASHFILES) $(gpg_file)

ensure-prev:
	@@if [[ "$(PREV)" == "" ]]; then							\
		echo ""							          &&	\
		echo "You must set the PREV variable on the make command line to" &&	\
		echo "the last version."				  	  &&	\
		echo ""								  &&	\
		echo "For example:"						  &&	\
		echo "      make PREV=0.7.3"				  	  &&	\
		echo ""								  &&	\
		false;									\
	fi

release-check: ensure-prev release-verify-newer release-remove-old distcheck

release-tag:
	git tag -u $(GPGKEY) -m "$(PACKAGE) $(VERSION) release" $(PACKAGE)-$(VERSION)

release-upload: release-check $(tar_gz) $(tar_bz2) $(sha1_tgz) $(sha1_tbz2) $(md5_tgz) $(gpg_file)
	scp $(tar_gz) $(sha1_tgz) $(gpg_file) $(RELEASE_CAIRO_HOST):$(RELEASE_CAIRO_DIR)
	scp $(tar_gz) $(tar_bz2) $(RELEASE_XORG_HOST):$(RELEASE_XORG_DIR)
	ssh $(RELEASE_CAIRO_HOST) "rm -f $(RELEASE_CAIRO_DIR)/LATEST-$(PACKAGE)-[0-9]* && ln -s $(tar_gz) $(RELEASE_CAIRO_DIR)/LATEST-$(PACKAGE)-$(VERSION)"

RELEASE_TYPE = $$(if test "x$(PIXMAN_VERSION_MINOR)" = "x$$(echo "$(PIXMAN_VERSION_MINOR)/2*2" | bc)" ; then echo "stable release in the" ; else echo "development snapshot leading up to a stable"; fi)

release-publish-message: $(HASHFILES) ensure-prev
	@@echo "Please follow the instructions in RELEASING to push stuff out and"
	@@echo "send out the announcement mails.  Here is the excerpt you need:"
	@@echo ""
	@@echo "Lists:  $(RELEASE_ANNOUNCE_LIST)"
	@@echo "Subject: [ANNOUNCE] $(PACKAGE) release $(VERSION) now available"
	@@echo "============================== CUT HERE =============================="
	@@echo "A new $(PACKAGE) release $(VERSION) is now available. This is a $(RELEASE_TYPE)"
	@@echo ""
	@@echo "tar.gz:"
	@@echo "	$(RELEASE_CAIRO_URL)/$(tar_gz)"
	@@echo "	$(RELEASE_XORG_URL)/$(tar_gz)"
	@@echo ""
	@@echo "tar.bz2:"
	@@echo "	$(RELEASE_XORG_URL)/$(tar_bz2)"
	@@echo ""
	@@echo "Hashes:"
	@@echo -n "	MD5:  "
	@@cat $(md5_tgz)
	@@echo -n "	MD5:  "
	@@cat $(md5_tbz2)
	@@echo -n "	SHA1: "
	@@cat $(sha1_tgz)
	@@echo -n "	SHA1: "
	@@cat $(sha1_tbz2)
	@@echo ""
	@@echo "GPG signature:"
	@@echo "	$(RELEASE_CAIRO_URL)/$(gpg_file)"
	@@echo "	(signed by`gpg --list-keys $(GPGKEY) | grep uid | cut -b4- | tr -s " "`)"
	@@echo ""
	@@echo "Git:"
	@@echo "	git://git.freedesktop.org/git/pixman"
	@@echo "	tag: $(PACKAGE)-$(VERSION)"
	@@echo ""
	@@echo "Log:"
	@@git log --no-merges "$(PACKAGE)-$(PREV)".."$(PACKAGE)-$(VERSION)" | git shortlog | awk '{ printf "\t"; print ; }' | cut -b1-80
	@@echo "============================== CUT HERE =============================="
	@@echo ""

release-publish: release-upload release-tag release-publish-message

.PHONY: release-upload release-publish release-publish-message release-tag
@


1.7
log
@Update to pixman 0.26.2. tested at least by ajacoutot@@, mpi@@, shadchin@@.
@
text
@d13 1
a13 1
GPGKEY=6FF7C1A8
d124 1
a124 1
	@@echo "	(signed by `git config --get user.name` <`git config --get user.email`>)"
@


1.6
log
@Update to pixman 0.22.4. Tested by shadchin@@, krw@@.
@
text
@d24 4
@


1.5
log
@Update to pixman 0.22.2.
0.22.0 was tested by many. 0.22.2 only add a few bug fixes.
Note that on amd64 a recent ld.so is needed to avoid random bus errors.
@
text
@d1 1
a1 1
SUBDIRS = pixman  test
d22 1
a22 1
RELEASE_ANNOUNCE_LIST = cairo-announce@@cairographics.org, xorg-announce@@lists.freedesktop.org
d90 2
d99 1
a99 1
	@@echo "A new $(PACKAGE) release $(VERSION) is now available"
@


1.4
log
@Update to pixman 0.15.8.
@
text
@d1 1
a1 1
SUBDIRS = pixman test
d15 1
a15 1
RELEASE_OR_SNAPSHOT = $$(if test "x$(CAIRO_VERSION_MINOR)" = "x$$(echo "$(CAIRO_VERSION_MINOR)/2*2" | bc)" ; then echo release; else echo snapshot; fi)
d17 2
a18 2
RELEASE_CAIRO_DIR =	/srv/cairo.freedesktop.org/www/releases
RELEASE_CAIRO_URL = 	http://cairographics.org/releases
a85 1
	mkdir -p releases
@


1.3
log
@pixman 0.12.0. Tested on a full ports build by naddy@@.
@
text
@d10 1
a10 1
	test -d "$(srcdir)/.git" && distdir=$$distdir-`cd "$(srcdir)" && git-rev-parse HEAD | cut -c 1-6`; \
d51 2
d66 1
a66 1
	$(RM) $(tar_gz) $(tar_bz2) $(sha1_tgz) $(gpg_file)
d72 1
a72 1
		echo "the last version."				  &&	\
d75 1
a75 1
		echo "      make PREV=0.7.3"				  &&	\
d83 1
a83 1
	git-tag -u $(GPGKEY) -m "$(PACKAGE) $(VERSION) release" $(PACKAGE)-$(VERSION)
d85 1
a85 1
release-upload: release-check $(tar_gz) $(tar_bz2) $(sha1_tgz) $(gpg_file)
d91 1
a91 1
release-publish-message: $(sha1_tgz) $(md5_tgz) $(sha1_tbz2) $(md5_tbz2) ensure-prev
d126 1
a126 1
	@@git-log --no-merges "$(PACKAGE)-$(PREV)".."$(PACKAGE)-$(VERSION)" | git shortlog | awk '{ printf "\t"; print ; }' | cut -b1-80
@


1.2
log
@Update to pixman 0.10, with one small fix to the sse2 test in configure.ac.
@
text
@d13 1
d70 1
a70 1
		echo "the git tag of the last release."				  &&	\
d73 1
a73 1
		echo "      make PREV=pixman-0.7.3"				  &&	\
d80 3
a87 1
	git-tag -s -m "$(PACKAGE) $(VERSION) release" $(PACKAGE)-$(VERSION)
d117 1
a117 1
	@@echo "	(signed by `getent passwd "$$USER" | cut -d: -f 5 | cut -d, -f 1`)"
d124 1
a124 1
	@@git-log --no-merges "$(PACKAGE)-$(PREV)".."$(PACKAGE)-$(VERSION)" | git shortlog | awk '{ printf "\t"; print ; }' | cut -b0-80
d128 1
a128 1
release-publish: release-upload release-publish-message
d130 1
a130 1
.PHONY: release-upload release-publish release-publish-message
@


1.1
log
@Initial revision
@
text
@d7 121
@


1.1.1.1
log
@import pixman 0.9.5
@
text
@@
