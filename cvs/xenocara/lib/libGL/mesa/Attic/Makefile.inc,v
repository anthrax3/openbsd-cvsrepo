head	1.13;
access;
symbols
	OPENBSD_5_8:1.11.0.4
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.9.0.2
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.2
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2;
locks; strict;
comment	@# @;


1.13
date	2015.12.23.05.06.04;	author jsg;	state dead;
branches;
next	1.12;
commitid	jLBLHykYtPbp9N8b;

1.12
date	2015.08.19.23.00.12;	author matthieu;	state Exp;
branches;
next	1.11;
commitid	fw853FWA6SfHws9e;

1.11
date	2015.02.20.23.31.06;	author jsg;	state Exp;
branches;
next	1.10;
commitid	96FH88ZMzjHy95WG;

1.10
date	2015.01.25.15.09.14;	author jsg;	state Exp;
branches;
next	1.9;
commitid	M1dxZ5qfRB65OrtK;

1.9
date	2014.07.09.21.32.41;	author jsg;	state Exp;
branches;
next	1.8;
commitid	uM5VFgRcH6JLiuF9;

1.8
date	2014.01.19.03.20.40;	author jsg;	state Exp;
branches;
next	1.7;

1.7
date	2014.01.11.12.39.14;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2013.11.24.06.23.35;	author jsg;	state Exp;
branches;
next	1.5;

1.5
date	2013.11.09.02.54.53;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2013.10.05.10.12.57;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2013.09.05.15.12.08;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.28.13.53.16;	author mpi;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.26.18.46.42;	author mpi;	state Exp;
branches;
next	;


desc
@@


1.13
log
@remove now unused local build system for Mesa
@
text
@# $OpenBSD: Makefile.inc,v 1.12 2015/08/19 23:00:12 matthieu Exp $
.include "../config.mk"

MESA=		${.CURDIR}/../../../../dist/Mesa/src/mesa
MAPI=		${.CURDIR}/../../../../dist/Mesa/src/mapi
GLSL=		${.CURDIR}/../../../../dist/Mesa/src/glsl
GALLIUM=	${.CURDIR}/../../../../dist/Mesa/src/gallium

MESA_INCLUDE=	${.CURDIR}/../../../../dist/Mesa/include

CPPFLAGS+= \
	-I. \
	-I${MAPI} \
	-I${MESA_INCLUDE} \
	-I${MESA_INCLUDE}/GL/internal \
	-I${MESA} \
	-I${MESA}/.. \
	-I${MESA}/main \
	-I${MESA}/math \
	-I${MESA}/tnl \
	-I${GLSL} \
	-I${GALLIUM}/auxiliary \
	-I${.OBJDIR}/shader/slang \
	-I${.CURDIR}/../../generated \
	-I${.CURDIR}/../../generated/main \
	-I${X11BASE}/include \
	-D_REENTRANT \
	-DIN_DRI_DRIVER

.if ${MACHINE_ARCH} == "i386"
CPPFLAGS += \
	-I${MESA}/x86 \
	-DUSE_X86_ASM \
	-DUSE_MMX_ASM \
	-DUSE_3DNOW_ASM \
	-DUSE_SSE_ASM
.elif ${MACHINE_ARCH} == "amd64"
CPPFLAGS += \
	-I${MESA}/x86 \
	-D__GLX_ALIGN64 -DUSE_X86_64_ASM
.endif

# this is part of MAIN_SOURCES
MAIN_ES_SOURCES = \
	es1_conversion.c

# main
MAIN_SOURCES = \
	api_arrayelt.c \
	api_exec.c \
	api_loopback.c \
	api_validate.c \
	accum.c \
	arbprogram.c \
	atifragshader.c \
	attrib.c \
	arrayobj.c \
	blend.c \
	blit.c \
	bufferobj.c \
	buffers.c \
	clear.c \
	clip.c \
	colortab.c \
	compute.c \
	condrender.c \
	context.c \
	convolve.c \
	cpuinfo.c \
	debug.c \
	depth.c \
	dlist.c \
	drawpix.c \
	drawtex.c \
	enable.c \
	errors.c \
	eval.c \
	execmem.c \
	extensions.c \
	fbobject.c \
	feedback.c \
	ffvertex_prog.c \
	fog.c \
	formatquery.c \
	formats.c \
	format_pack.c \
	format_unpack.c \
	framebuffer.c \
	get.c \
	genmipmap.c \
	getstring.c \
	glformats.c \
	hash.c \
	hash_table.c \
	hint.c \
	histogram.c \
	image.c \
	imports.c \
	light.c \
	lines.c \
	matrix.c \
	mipmap.c \
	mm.c \
	multisample.c \
        objectlabel.c \
	pack.c \
	pbo.c \
	performance_monitor.c \
	pipelineobj.c \
	pixel.c \
	pixelstore.c \
	pixeltransfer.c \
	points.c \
	polygon.c \
	queryobj.c \
	querymatrix.c \
	rastpos.c \
	readpix.c \
	remap.c \
	renderbuffer.c \
	samplerobj.c \
	scissor.c \
	set.c \
	shaderapi.c \
	shaderimage.c \
	shaderobj.c \
	shared.c \
	state.c \
	stencil.c \
	syncobj.c \
	texcompress.c \
	texcompress_cpal.c \
	texcompress_rgtc.c \
	texcompress_s3tc.c \
	texcompress_fxt1.c \
	texcompress_etc.c \
	texenv.c \
	texformat.c \
	texgen.c \
	texgetimage.c \
	teximage.c \
	texobj.c \
	texparam.c \
	texstate.c \
	texstorage.c \
	texstore.c \
        textureview.c \
	texturebarrier.c \
	transformfeedback.c \
	uniforms.c \
	varray.c \
	vdpau.c \
	version.c \
	viewport.c \
	vtxfmt.c \
	enums.c \
	${MAIN_ES_SOURCES}

MAIN_CXX_SOURCES = \
	ff_fragment_shader.cpp \
	shader_query.cpp \
	uniform_query.cpp

# math
MATH_SOURCES= \
	m_debug_clip.c \
	m_debug_norm.c \
	m_debug_xform.c \
	m_eval.c \
	m_matrix.c \
	m_translate.c \
	m_vector.c

MATH_XFORM_SOURCES = \
	m_xform.c

# swrast
SWRAST_SOURCES= \
	s_aaline.c \
	s_aatriangle.c \
	s_alpha.c \
	s_atifragshader.c \
	s_bitmap.c \
	s_blend.c \
	s_blit.c \
	s_clear.c \
	s_copypix.c \
	s_context.c \
	s_depth.c \
	s_drawpix.c \
	s_feedback.c \
	s_fog.c \
	s_fragprog.c \
	s_lines.c \
	s_logic.c \
	s_masking.c \
	s_points.c \
	s_renderbuffer.c \
	s_span.c \
	s_stencil.c \
	s_texcombine.c \
	s_texfetch.c \
	s_texfilter.c \
	s_texrender.c \
	s_texture.c \
	s_triangle.c \
	s_zoom.c

# swrast_setup
SWRAST_SETUP_SOURCES= \
	ss_context.c \
	ss_triangle.c

# tnl
TNL_SOURCES = \
	t_context.c \
	t_pipeline.c \
	t_draw.c \
	t_rasterpos.c \
	t_vb_program.c \
	t_vb_render.c \
	t_vb_texgen.c \
	t_vb_texmat.c \
	t_vb_vertex.c \
	t_vb_fog.c \
	t_vb_light.c \
	t_vb_normals.c \
	t_vb_points.c \
	t_vp_build.c \
	t_vertex.c \
	t_vertex_sse.c \
	t_vertex_generic.c

VBO_SOURCES = \
	vbo_context.c \
	vbo_exec.c \
	vbo_exec_api.c \
	vbo_exec_array.c \
	vbo_exec_draw.c \
	vbo_exec_eval.c \
	vbo_noop.c \
	vbo_primitive_restart.c \
	vbo_rebase.c \
	vbo_split.c \
	vbo_split_copy.c \
	vbo_split_inplace.c \
	vbo_save.c \
	vbo_save_api.c \
	vbo_save_draw.c \
	vbo_save_loopback.c 

STATETRACKER_SOURCES = \
	st_atom.c \
	st_atom_array.c \
	st_atom_blend.c \
	st_atom_clip.c \
	st_atom_constbuf.c \
	st_atom_depth.c \
	st_atom_framebuffer.c \
	st_atom_msaa.c \
	st_atom_pixeltransfer.c \
	st_atom_sampler.c \
	st_atom_scissor.c \
	st_atom_shader.c \
	st_atom_rasterizer.c \
	st_atom_stipple.c \
	st_atom_texture.c \
	st_atom_viewport.c \
	st_cb_bitmap.c \
	st_cb_blit.c \
	st_cb_bufferobjects.c \
	st_cb_clear.c \
	st_cb_condrender.c \
	st_cb_flush.c \
	st_cb_msaa.c \
	st_cb_drawpixels.c \
	st_cb_drawtex.c \
	st_cb_eglimage.c \
	st_cb_fbo.c \
	st_cb_feedback.c \
	st_cb_program.c \
	st_cb_queryobj.c \
	st_cb_rasterpos.c \
	st_cb_readpixels.c \
	st_cb_syncobj.c \
	st_cb_strings.c \
	st_cb_texture.c \
	st_cb_texturebarrier.c \
	st_cb_viewport.c \
	st_cb_xformfb.c \
	st_context.c \
	st_debug.c \
	st_draw.c \
	st_draw_feedback.c \
	st_extensions.c \
	st_format.c \
	st_gen_mipmap.c \
	st_manager.c \
	st_mesa_to_tgsi.c \
	st_program.c \
	st_texture.c \
	st_vdpau.c

STATETRACKER_CXX_SOURCES = \
	st_glsl_to_tgsi.cpp

PROGRAM_SOURCES = \
	arbprogparse.c \
	hash_table.c \
	lex.yy.c \
	program.c \
	program_parse.tab.c \
	program_parse_extra.c \
	prog_cache.c \
	prog_execute.c \
	prog_hash_table.c \
	prog_instruction.c \
	prog_noise.c \
	prog_opt_constant_fold.c \
	prog_optimize.c \
	prog_parameter.c \
	prog_parameter_layout.c \
	prog_print.c \
	prog_statevars.c \
	programopt.c \
	register_allocate.c \
	symbol_table.c

PROGRAM_CXX_SOURCES = \
	string_to_uint_map.cpp

SHADER_CXX_SOURCES = \
	ir_to_mesa.cpp \
	sampler.cpp

.if ${MACHINE_ARCH} == i386 || ${MACHINE_ARCH} == amd64
ASM_C_SOURCES= \
	common_x86.c \
	x86_xform.c \
	3dnow.c \
	sse.c \
	x86sse.c \
	x86-64.c
.endif

.if ${MACHINE_ARCH} == i386
ASM_SOURCES= \
	common_x86_asm.S \
	x86_xform2.S \
	x86_xform3.S \
	x86_xform4.S \
	x86_cliptest.S \
	mmx_blend.S \
	3dnow_xform1.S \
	3dnow_xform2.S \
	3dnow_xform3.S \
	3dnow_xform4.S \
	3dnow_normal.S \
	sse_xform1.S \
	sse_xform2.S \
	sse_xform3.S \
	sse_xform4.S \
	sse_normal.S \
	read_rgba_span_x86.S
.endif
.if ${MACHINE_ARCH} == amd64
ASM_SOURCES =		\
	xform4.S
.endif
.if ${MACHINE_ARCH} == sparc
ASM_C_SOURCES= \
	sparc.c
SPARC_SOURCES =			\
	clip.S			\
	norm.S			\
	xform.S
.endif

COMMON_DRIVER_SOURCES = \
	driverfuncs.c		\
	meta_blit.c		\
	meta_generate_mipmap.c	\
	meta.c

MESA_SOURCES = \
	$(MAIN_SOURCES)		\
	$(MATH_SOURCES)		\
	$(MATH_XFORM_SOURCES)	\
	$(VBO_SOURCES)		\
	$(TNL_SOURCES)		\
	$(PROGRAM_SOURCES)	\
	$(SWRAST_SOURCES)	\
	$(SWRAST_SETUP_SOURCES) \
	$(COMMON_DRIVER_SOURCES) \
	$(ASM_C_SOURCES)

MESA_CXX_SOURCES = \
	$(MAIN_CXX_SOURCES) \
	$(PROGRAM_CXX_SOURCES) \
	$(SHADER_CXX_SOURCES)

MESAGALLIUM_SOURCES = \
	${MAIN_SOURCES}		\
	${MATH_SOURCES}		\
	${VBO_SOURCES}		\
	${PROGRAM_SOURCES}	\
	${STATETRACKER_SOURCES} \
	${ASM_C_SOURCES}

MESAGALLIUM_CXX_SOURCES = \
	${MAIN_CXX_SOURCES} \
	${SHADER_CXX_SOURCES} \
	${PROGRAM_CXX_SOURCES} \
	${STATETRACKER_CXX_SOURCES}

OBJS+=  ${SRCS:N*.h:R:S/$/.so/g}

all: lib${LIB}_pic.a

obj: _xenocara_obj

install:
	@@echo "Not installing libmesa"

clean: 
	rm -f lib${LIB}_pic.a ${OBJS} $(CLEANFILES)

cleandir:	clean

.SUFFIXES:
.SUFFIXES: .a .c .cpp .o .S .s .so

.c.so:
	@@echo "${COMPILE.c} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.c} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

.if ${MACHINE_ARCH} == alpha
# remove optimization flags to prevent gcc 4.2.1 ICE
prog_execute.so: prog_execute.c
	@@echo "${COMPILE.c} -fno-tree-ter ${PICFLAG} -DPIC ${.ALLSRC} -o ${.TARGET}"
	@@${COMPILE.c} -fno-tree-ter ${PICFLAG} -DPIC ${.ALLSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
.endif

.cpp.so:
	@@echo "${COMPILE.cc} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.cc} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

.S.so .s.so:
	@@echo "${CPP} -DPIC ${CPPFLAGS} ${CFLAGS:M-[ID]*} ${AINC} ${.IMPSRC} | \
	    ${AS} ${ASPICFLAG} -o ${.TARGET}"
	@@${CPP} -DPIC ${CPPFLAGS} ${CFLAGS:M-[ID]*} ${AINC} ${.IMPSRC} | \
	    ${AS} ${ASPICFLAG} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o


lib${LIB}_pic.a:	${OBJS} ${DPADD}
	@@rm -f lib${LIB}_pic.a
	@@${AR} cq lib${LIB}_pic.a `${LORDER} ${OBJS} | tsort -q`
	${RANLIB} lib${LIB}_pic.a

.if ${MACHINE_ARCH} == i386 || ${MACHINE_ARCH} == amd64
gen_matypes: gen_matypes.c
	$(CC) $(CPPFLAGS) $(CFLAGS) ${MESA}/x86/gen_matypes.c -o gen_matypes


matypes.h: mtypes.h t_context.h gen_matypes
	./gen_matypes > matypes.h

CLEANFILES+= gen_matypes matypes.h

xform4.so: matypes.h
common_x86_asm.so: matypes.h
3dnow_normal.so: matypes.h
3dnow_xform1.so: matypes.h
3dnow_xform2.so: matypes.h
3dnow_xform3.so: matypes.h
3dnow_xform4.so: matypes.h
mmx_blend.so: matypes.h
sse_normal.so: matypes.h
sse_xform1.so: matypes.h
sse_xform2.so: matypes.h
sse_xform3.so: matypes.h
sse_xform4.so: matypes.h
x86_cliptest.so: matypes.h
x86_xform2.so: matypes.h
x86_xform3.so: matypes.h
x86_xform4.so: matypes.h
.endif

.if ${MACHINE_ARCH} == i386 || ${MACHINE_ARCH} == amd64
.PATH: ${MESA}/x86
.PATH: ${MESA}/x86/rtasm
.PATH: ${MESA}/x86-64
.endif
.if ${MACHINE_ARCH} == powerpc
.PATH: ${MESA}/ppc
.endif
.if ${MACHINE_ARCH} == sparc
.PATH: ${MESA}/sparc
.endif
.PATH: ${MAPI}/glapi
.PATH: ${MESA}/main
.PATH: ${MESA}/../util
.PATH: ${MESA}/math
.PATH: ${MESA}/swrast
.PATH: ${MESA}/swrast_setup
.PATH: ${MESA}/tnl
.PATH: ${MESA}/state_tracker
.PATH: ${MESA}/program
.PATH: ${MESA}/vbo
.PATH: ${MESA}/drivers/common
.PATH: ${.CURDIR}/..
.PATH: ${.CURDIR}/../../generated
.PATH: ${.CURDIR}/../../generated/main
.PATH: ${.CURDIR}/../../generated/program
@


1.12
log
@Enable the build of libOSMesa. Ports will need it soon.
tested by juanfra@@ ok jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.11 2015/02/20 23:31:06 jsg Exp $
@


1.11
log
@switch back to Mesa 10.2

With 10.4.3 gpu compositing on chromium would result in a black window
on older Intel parts (ie x60s with 945gm) and at least some discrete
Radeon parts.  These problems do not seem to occur on recent Intel
parts, though those have coherent memory and hardware contexts.

It isn't clear what changes in Mesa are involved in the problem
though it also occurs with the 10.3 branch.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.10 2015/01/25 15:09:14 jsg Exp $
d381 2
@


1.10
log
@Mesa 10.4.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.9 2014/07/09 21:32:41 jsg Exp $
a68 1
	copyimage.c \
a87 1
	format_utils.c \
d94 1
a131 1
	texcompress_bptc.c \
d326 1
@


1.9
log
@Mesa 10.2.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.8 2014/01/19 03:20:40 jsg Exp $
d17 1
d69 1
d89 1
a95 1
	hash_table.c \
d133 1
a327 1
	register_allocate.c \
d337 1
a337 1
.if ${MACHINE_ARCH} == i386
d343 3
a345 1
	x86sse.c
d347 1
a367 3
ASM_C_SOURCES= \
	x86-64.c

d462 1
a462 1
lib${LIB}_pic.a:	${OBJS} $(DPADD)
d496 1
a496 1
.if ${MACHINE_ARCH} == i386
d499 1
a506 4
.if ${MACHINE_ARCH} == amd64
.PATH: ${MESA}/x86-64
.PATH: ${MESA}/x86
.endif
d509 1
@


1.8
log
@Mesa 9.2.5
@
text
@d1 2
a2 1
# $OpenBSD: Makefile.inc,v 1.7 2014/01/11 12:39:14 miod Exp $
a10 8
MESA_MAJOR=	9
MESA_MINOR=	2
MESA_TINY=	5

CPP=	cpp -notraditional

CFLAGS+= -std=c99

d21 1
a25 5
	-DHAVE_UNISTD_H \
	-DHAVE_PTHREAD \
	-DHAVE_ALIAS \
	-DHAVE_DLOPEN \
	-DHAVE_POSIX_MEMALIGN \
d27 1
a27 3
	-DIN_DRI_DRIVER \
	-DPACKAGE_VERSION=\"${MESA_MAJOR}.${MESA_MINOR}.${MESA_TINY}\" \
	-DPACKAGE_BUGREPORT=\"bugs@@openbsd.org\"
a47 1
	accum.c \
d52 1
a53 1
	arrayobj.c \
d56 1
d58 1
d64 1
a74 1
	enums.c \
d83 2
a85 1
	formatquery.c \
a86 1
	formats.c \
d89 1
d93 1
d104 1
d107 2
d114 1
a115 1
	queryobj.c \
d124 1
a131 2
	texcompress_etc.c \
	texcompress_fxt1.c \
d134 2
d146 1
d151 1
d155 1
d300 2
a301 1
	st_texture.c
a521 5

.if ${MACHINE_ARCH} == "m68k" || ${MACHINE_ARCH} == "powerpc" || \
    ${MACHINE_ARCH} == "sparc"
PICFLAG=-fPIC
.endif
@


1.7
log
@m68k needs libGL compiled with -fPIC
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.6 2013/11/24 06:23:35 jsg Exp $
d12 1
a12 1
MESA_TINY=	3
@


1.6
log
@Mesa 9.2.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.5 2013/11/09 02:54:53 jsg Exp $
d525 2
a526 1
.if ${MACHINE_ARCH} == powerpc || ${MACHINE_ARCH} == sparc
@


1.5
log
@Mesa 9.2.2
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.4 2013/10/05 10:12:57 jsg Exp $
d12 1
a12 1
MESA_TINY=	2
@


1.4
log
@regen for Mesa 9.2.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.3 2013/09/05 15:12:08 jsg Exp $
d12 1
a12 1
MESA_TINY=	1
@


1.3
log
@build infrastructure changes for Mesa 9.2.0
ok matthieu@@ mpi@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.2 2012/11/28 13:53:16 mpi Exp $
d12 1
a12 1
MESA_TINY=	0
@


1.2
log
@Include the software winsys and state tracker sources in the swrastg
driver rather than in the libmesagallium build. This non functional
change allows to use the libmesagallium in any gallium target (r300g,
nouveau...)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.1 2012/08/26 18:46:42 mpi Exp $
d10 4
d16 2
d29 2
d32 2
a33 1
	-DPTHREADS \
d35 2
d38 3
a40 1
	-DIN_DRI_DRIVER
d57 1
a57 2
	api_exec_es1.c \
	api_exec_es2.c
d61 1
a64 1
	api_noop.c \
a65 1
	accum.c \
d67 1
a69 1
	arrayobj.c \
a81 1
	depthstencil.c \
a82 1
	dlopen.c \
d87 1
d95 3
d102 1
a113 1
	nvprogram.c \
d121 1
a122 1
	querymatrix.c \
d129 1
d137 3
a141 1
	texcompress_fxt1.c \
a142 1
	texfetch.c \
a147 1
	texpal.c \
d150 1
d159 1
a159 1
	$(MAIN_ES_SOURCES)
d162 3
a164 1
	ff_fragment_shader.cpp
a182 1
	s_accum.c \
d200 1
a200 1
	s_readpix.c \
d204 1
d207 1
d243 2
d256 1
a270 1
	st_cb_accum.c \
d277 1
d305 3
a311 2
	nvfragparse.c \
	nvvertparse.c \
d317 1
d320 1
a325 1
	prog_uniform.c \
d330 3
a378 4
.if ${MACHINE_ARCH} == powerpc
ASM_C_SOURCES= \
	common_ppc.c
.endif
d398 1
d411 3
a413 1
	${SHADER_CXX_SOURCES}
d521 3
a523 1
.PATH: ${.CURDIR}/../generated
@


1.1
log
@Merge libmesa and libmesagallium build makefiles because they share
a lot of common sources.

ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2012/08/17 13:58:00 mpi Exp $
a361 8
# drisw
DRISW_SOURCES = \
	dri_sw_winsys.c \
        dri_context.c \
        dri_screen.c \
        dri_drawable.c \
        drisw.c

d384 1
a384 2
	${ASM_C_SOURCES}	\
	${DRISW_SOURCES}
a494 3
.PATH: ${GALLIUM}/winsys/sw/dri
.PATH: ${GALLIUM}/state_trackers/dri/sw
.PATH: ${GALLIUM}/state_trackers/dri/common
@

