head	1.48;
access;
symbols
	OPENBSD_5_8:1.45.0.4
	OPENBSD_5_8_BASE:1.45
	OPENBSD_5_7:1.45.0.2
	OPENBSD_5_7_BASE:1.45
	OPENBSD_5_6:1.43.0.2
	OPENBSD_5_6_BASE:1.43
	OPENBSD_5_5:1.42.0.2
	OPENBSD_5_5_BASE:1.42
	OPENBSD_5_4:1.36.0.2
	OPENBSD_5_4_BASE:1.36
	OPENBSD_5_3:1.33.0.2
	OPENBSD_5_3_BASE:1.33
	OPENBSD_5_2:1.30.0.2
	OPENBSD_5_2_BASE:1.30
	OPENBSD_5_1_BASE:1.29
	OPENBSD_5_1:1.29.0.2
	OPENBSD_5_0:1.28.0.6
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.28.0.2
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.4
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.25.0.4
	OPENBSD_4_7_BASE:1.25
	OPENBSD_4_6:1.25.0.2
	OPENBSD_4_6_BASE:1.25
	OPENBSD_4_5:1.23.0.2
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8;
locks; strict;
comment	@# @;


1.48
date	2015.12.23.05.06.01;	author jsg;	state dead;
branches;
next	1.47;
commitid	jLBLHykYtPbp9N8b;

1.47
date	2015.08.22.00.50.54;	author jsg;	state Exp;
branches;
next	1.46;
commitid	jZtwe3SD2DamfWe4;

1.46
date	2015.08.19.23.00.12;	author matthieu;	state Exp;
branches;
next	1.45;
commitid	fw853FWA6SfHws9e;

1.45
date	2015.02.20.23.31.04;	author jsg;	state Exp;
branches;
next	1.44;
commitid	96FH88ZMzjHy95WG;

1.44
date	2015.01.25.15.09.12;	author jsg;	state Exp;
branches;
next	1.43;
commitid	M1dxZ5qfRB65OrtK;

1.43
date	2014.07.09.21.32.40;	author jsg;	state Exp;
branches;
next	1.42;
commitid	uM5VFgRcH6JLiuF9;

1.42
date	2014.01.19.03.20.40;	author jsg;	state Exp;
branches;
next	1.41;

1.41
date	2014.01.11.12.39.14;	author miod;	state Exp;
branches;
next	1.40;

1.40
date	2013.11.24.06.23.35;	author jsg;	state Exp;
branches;
next	1.39;

1.39
date	2013.11.09.02.54.53;	author jsg;	state Exp;
branches;
next	1.38;

1.38
date	2013.10.05.10.12.55;	author jsg;	state Exp;
branches;
next	1.37;

1.37
date	2013.09.05.15.11.56;	author jsg;	state Exp;
branches;
next	1.36;

1.36
date	2013.06.13.10.39.28;	author jsg;	state Exp;
branches;
next	1.35;

1.35
date	2013.04.14.19.59.03;	author matthieu;	state Exp;
branches;
next	1.34;

1.34
date	2013.04.14.10.23.04;	author mpi;	state Exp;
branches;
next	1.33;

1.33
date	2012.11.11.12.09.09;	author mpi;	state Exp;
branches;
next	1.32;

1.32
date	2012.08.26.18.46.42;	author mpi;	state Exp;
branches;
next	1.31;

1.31
date	2012.08.17.13.57.59;	author mpi;	state Exp;
branches;
next	1.30;

1.30
date	2012.06.04.10.18.45;	author mpi;	state Exp;
branches;
next	1.29;

1.29
date	2011.10.23.13.57.36;	author matthieu;	state Exp;
branches;
next	1.28;

1.28
date	2010.06.22.20.04.22;	author matthieu;	state Exp;
branches;
next	1.27;

1.27
date	2010.05.22.20.14.14;	author matthieu;	state Exp;
branches;
next	1.26;

1.26
date	2010.05.08.14.15.29;	author matthieu;	state Exp;
branches;
next	1.25;

1.25
date	2009.05.25.18.40.11;	author matthieu;	state Exp;
branches;
next	1.24;

1.24
date	2009.05.17.20.20.23;	author matthieu;	state Exp;
branches;
next	1.23;

1.23
date	2009.01.10.16.06.51;	author oga;	state Exp;
branches;
next	1.22;

1.22
date	2009.01.10.16.04.43;	author oga;	state Exp;
branches;
next	1.21;

1.21
date	2008.11.02.16.45.34;	author matthieu;	state Exp;
branches;
next	1.20;

1.20
date	2008.11.02.15.01.32;	author matthieu;	state Exp;
branches;
next	1.19;

1.19
date	2008.07.16.20.24.39;	author brad;	state Exp;
branches;
next	1.18;

1.18
date	2008.03.25.23.41.50;	author matthieu;	state Exp;
branches;
next	1.17;

1.17
date	2008.02.12.21.09.27;	author matthieu;	state Exp;
branches;
next	1.16;

1.16
date	2008.02.02.17.38.56;	author matthieu;	state Exp;
branches;
next	1.15;

1.15
date	2008.02.02.17.24.30;	author matthieu;	state Exp;
branches;
next	1.14;

1.14
date	2008.01.30.21.21.35;	author matthieu;	state Exp;
branches;
next	1.13;

1.13
date	2007.11.27.09.55.06;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2007.11.26.20.47.35;	author todd;	state Exp;
branches;
next	1.11;

1.11
date	2007.11.26.15.10.19;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2007.11.25.10.18.21;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2007.11.24.17.46.55;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2007.04.07.15.37.50;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2007.04.04.22.33.46;	author david;	state Exp;
branches;
next	1.6;

1.6
date	2007.03.03.17.39.42;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.18.21.59.16;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2006.12.03.19.36.18;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2006.12.02.16.28.48;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.29.18.03.09;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.11.21.13;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.48
log
@remove now unused local build system for Mesa
@
text
@# $OpenBSD: Makefile,v 1.47 2015/08/22 00:50:54 jsg Exp $
.include <bsd.xconf.mk>
.include "config.mk"

.if ${XENOCARA_BUILD_GALLIUM:L} == "yes" || ${XENOCARA_BUILD_GALLIUM} == "llvm"
SUBDIR+=gallium
MAKE_FLAGS+= XENOCARA_BUILD_GALLIUM=${XENOCARA_BUILD_GALLIUM}
.endif

.if ${XENOCARA_BUILD_DRI:L} == "yes"
SUBDIR+=glsl mesa dri osmesa
.endif

LIB=	GL

MESA=	${.CURDIR}/../../dist/Mesa/src/mesa
MAPI=	${.CURDIR}/../../dist/Mesa/src/mapi
GL=	${.CURDIR}/../../dist/Mesa/Mesa/src/GL
GLX=	${.CURDIR}/../../dist/Mesa/src/glx
LOADER=	${.CURDIR}/../../dist/Mesa/src/loader
MESA_INCLUDE=	${.CURDIR}/../../dist/Mesa/include
MESA_DRI=	${.CURDIR}/../../dist/Mesa/src/mesa/drivers/dri

DRI_DRIVER_INSTALL_DIR=	${X11BASE}/lib/modules/dri

DRI_DRIVER_SEARCH_DIR=	$(DRI_DRIVER_INSTALL_DIR)

INCSDIR=	${X11BASE}/include/GL

.if ${XENOCARA_BUILD_DRI:L} == "yes"
LDADD=		-L${X11BASE}/lib -lX11 -lXext -lXxf86vm -lXdamage -lXfixes \
		-lxcb -lX11-xcb -lxcb-dri2 -lxcb-glx -ldrm -lstdc++ -lm -lc
# XXX link libGL with -lpthread to be able to dlopen() the llvm-pipe module
LDADD+=		-lpthread
.else
LDADD=		-L${X11BASE}/lib -lX11 -lXext -lxcb -lX11-xcb -lxcb-glx
.endif

LDADD+=		-lglapi

CPPFLAGS+= \
	-I. \
	-I${MESA_INCLUDE} \
	-I${MESA_INCLUDE}/GL/internal \
	-I${MESA} \
	-I${MAPI} \
	-I${MAPI}/glapi \
	-I${GLX} \
	-I${LOADER} \
	-I${X11BASE}/include \
	-I${X11BASE}/include/libdrm \
	-I${.CURDIR}/generated \
	-I${.CURDIR}/generated/glx \
	-DGLX_INDIRECT_RENDERING \
	-D_REENTRANT \
	-DHAVE_SHARED_GLAPI \
	-DGLX_SHARED_GLAPI \
	-DMAPI_MODE_BRIDGE \
	-DMAPI_ABI_HEADER=\"${.CURDIR}/generated/glapi/glapi_mapi_tmp.h\"

.if ${XENOCARA_BUILD_DRI:L} == "yes"
CPPFLAGS+= \
	-DGLX_DIRECT_RENDERING -DXF86VIDMODE \
	-DDEFAULT_DRIVER_DIR=\"${DRI_DRIVER_INSTALL_DIR}\"
.endif

.if ${MACHINE_ARCH} == "i386"
CPPFLAGS += \
	-DUSE_X86_ASM \
	-DUSE_MMX_ASM \
	-DUSE_3DNOW_ASM \
	-DUSE_SSE_ASM
.elif ${MACHINE_ARCH} == "amd64"
CPPFLAGS += -D__GLX_ALIGN64 -DUSE_X86_64_ASM
.endif

INCS= \
	gl.h \
	gl_mangle.h \
	glext.h \
	glx.h \
	glx_mangle.h \
	glxext.h \
	osmesa.h

GLX_SOURCES= \
	clientattrib.c \
	clientinfo.c \
	compsize.c \
	create_context.c \
	glxeval.c \
	glxconfig.c \
	glxcmds.c \
	glxcurrent.c \
	glxext.c \
	glxextensions.c \
	indirect.c \
	indirect_glx.c \
	indirect_init.c \
	indirect_window_pos.c \
	indirect_size.c \
	indirect_texture_compression.c \
	indirect_transpose_matrix.c \
	indirect_vertex_array.c \
	indirect_vertex_program.c \
	glxpixel.c \
	glxpixelstore.c \
	render2.c \
	renderpix.c \
	single2.c \
	singlepix.c \
	vertarr.c \
	xfont.c \
	glx_error.c \
	glx_pbuffer.c \
	glx_query.c \
	drisw_glx.c \
	dri_common.c \
	dri_glx.c \
	XF86dri.c \
	glxhash.c \
	dri2_glx.c \
	dri2.c \
	dri2_query_renderer.c \
	query_renderer.c \
	applegl_glx.c

LOADER_SOURCES = \
	loader.c \
	pci_id_driver_map.c

MAPI_BRIDGE_SOURCES = \
	entry.c

SRCS =	$(GLX_SOURCES) \
	$(GLAPI_SOURCES) \
	$(MAPI_BRIDGE_SOURCES) \
	$(LOADER_SOURCES)

includes: _SUBDIRUSE
	cd ${MESA_INCLUDE}/GL; for i in ${INCS}; do \
	    j="cmp -s $$i ${DESTDIR}${INCSDIR}/GL/$$i || \
		${INSTALL_DATA}	$$i ${DESTDIR}${INCSDIR}/GL"; \
		echo "\tinstalling $$i"; \
		eval "$$j"; \
	done

NOPROFILE=

obj: _xenocara_obj

.include <bsd.lib.mk>
.include <bsd.xorg.mk>

# name conflicts
glxeval.c: ${GLX}/eval.c
	ln -s ${GLX}/eval.c $@@

glxpixel.c: ${GLX}/pixel.c
	ln -s ${GLX}/pixel.c $@@

glxpixelstore.c: ${GLX}/pixelstore.c
	ln -s ${GLX}/pixelstore.c $@@

CLEANFILES+= glxeval.c glxpixel.c glxpixelstore.c

gl.pc: ${MESA}/gl.pc.in Makefile
	sed -e 's,@@prefix@@,$(X11BASE),' \
	    -e 's,@@libdir@@,${LIBDIR},' \
	    -e 's,@@includedir@@,${INCSDIR},' \
	    -e 's,@@GL_PC_REQ_PRIV@@,libdrm >= 2.4.38 x11 xext xdamage xfixes x11-xcb xcb-glx >= 1.8.1 xcb-dri2 >= 1.8 xxf86vm,' \
	    -e 's,@@GL_PC_LIB_PRIV@@,-lm -lpthread,' \
	    -e 's,@@GL_PC_CFLAGS@@,,' \
	    -e 's,@@GL_LIB@@,GL,' \
	    -e 's,@@PACKAGE_VERSION@@,$(MESA_MAJOR).$(MESA_MINOR).$(MESA_TINY),' \
	    -e 's,@@GLX_TLS@@,no,' \
	< ${MESA}/gl.pc.in > gl.pc

.if ${XENOCARA_BUILD_DRI:L} == "yes"
DRI_PC=dri.pc

dri.pc: ${MESA_DRI}/dri.pc.in Makefile
	sed -e 's,@@prefix@@,${X11BASE},' \
	    -e 's,@@exec_prefix@@,${X11BASE},' \
	    -e 's,@@libdir@@,${LIBDIR},' \
	    -e 's,@@includedir@@,${INCSDIR},' \
	    -e 's,@@DRI_DRIVER_INSTALL_DIR@@,${DRI_DRIVER_INSTALL_DIR},' \
	    -e 's,@@VERSION@@,$(MESA_MAJOR).$(MESA_MINOR).$(MESA_TINY),' \
	    -e 's,@@DRI_PC_REQ_PRIV@@,libdrm >= 2.4.38,' \
	< ${MESA_DRI}/dri.pc.in > dri.pc
.endif

afterinstall: gl.pc ${DRI_PC}
	$(INSTALL) -c -m 644 -o root -g wheel gl.pc \
		${DESTDIR}${LIBDIR}/pkgconfig
.if ${XENOCARA_BUILD_DRI:L} == "yes"
	$(INSTALL) -c -m 644 -o root -g wheel dri.pc \
		${DESTDIR}${LIBDIR}/pkgconfig
.endif

CLEANFILES+= gl.pc ${DRI_PC}

.if ${MACHINE_ARCH} == i386
.PATH: ${MESA}/x86
.PATH: ${MESA}/x86/rtasm
.endif
.if ${MACHINE_ARCH} == powerpc
.PATH: ${MESA}/ppc
.endif
.if ${MACHINE_ARCH} == sparc
.PATH: ${MESA}/sparc
.endif
.if ${MACHINE_ARCH} == amd64
.PATH: ${MESA}/x86-64
.endif
.PATH: ${MESA}/main
.PATH: ${MESA}/main
.PATH: ${MAPI}/glapi
.PATH: ${MAPI}
.PATH: ${GLX}
.PATH: ${LOADER}
.PATH: ${.CURDIR}/generated
.PATH: ${.CURDIR}/generated/glapi
.PATH: ${.CURDIR}/generated/glx

.include <bsd.subdir.mk>
@


1.47
log
@use the drm headers from libdrm not the kernel
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2015/08/19 23:00:12 matthieu Exp $
@


1.46
log
@Enable the build of libOSMesa. Ports will need it soon.
tested by juanfra@@ ok jsg@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2015/02/20 23:31:04 jsg Exp $
d51 1
a51 1
	-I/usr/include/dev/pci/drm \
@


1.45
log
@switch back to Mesa 10.2

With 10.4.3 gpu compositing on chromium would result in a black window
on older Intel parts (ie x60s with 945gm) and at least some discrete
Radeon parts.  These problems do not seem to occur on recent Intel
parts, though those have coherent memory and hardware contexts.

It isn't clear what changes in Mesa are involved in the problem
though it also occurs with the 10.3 branch.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2015/01/25 15:09:12 jsg Exp $
d11 1
a11 1
SUBDIR+=glsl mesa dri
@


1.44
log
@Mesa 10.4.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2014/07/09 21:32:40 jsg Exp $
a79 1
	glcorearb.h \
a118 1
	dri_common_query_renderer.c \
d124 1
@


1.43
log
@Mesa 10.2.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2014/01/19 03:20:40 jsg Exp $
d79 2
d83 1
d120 1
a124 1
	dri2_query_renderer.c \
@


1.42
log
@Mesa 9.2.5
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.41 2014/01/11 12:39:14 miod Exp $
d3 1
d20 1
a23 5
# this needs to be updated in mesa/Makefile.inc as well
MESA_MAJOR=	9
MESA_MINOR=	2
MESA_TINY=	5

a40 5
CPP=	cpp -notraditional
DEBUG?=

CFLAGS+= -std=c99

d49 1
a54 4
	-DHAVE_PTHREAD \
	-DHAVE_ALIAS \
	-DHAVE_DLOPEN \
	-DHAVE_POSIX_MEMALIGN \
d121 1
d123 1
d126 4
d135 2
a136 1
	$(MAPI_BRIDGE_SOURCES)
a152 5
.if ${MACHINE_ARCH} == "m68k" || ${MACHINE_ARCH} == "powerpc" || \
    ${MACHINE_ARCH} == "sparc"
PICFLAG = -fPIC
.endif

d169 1
a169 1
	    -e 's,@@GL_PC_REQ_PRIV@@,libdrm >= 2.4.24 x11 xext xdamage xfixes x11-xcb xcb-glx >= 1.8.1 xcb-dri2 >= 1.8 xxf86vm,' \
d187 1
a187 1
	    -e 's,@@DRI_PC_REQ_PRIV@@,libdrm >= 2.4.24,' \
d215 1
d219 1
@


1.41
log
@m68k needs libGL compiled with -fPIC
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2013/11/24 06:23:35 jsg Exp $
d25 1
a25 1
MESA_TINY=	3
@


1.40
log
@Mesa 9.2.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2013/11/09 02:54:53 jsg Exp $
d157 2
a158 1
.if ${MACHINE_ARCH} == powerpc || ${MACHINE_ARCH} == sparc
@


1.39
log
@Mesa 9.2.2
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.38 2013/10/05 10:12:55 jsg Exp $
d25 1
a25 1
MESA_TINY=	2
@


1.38
log
@regen for Mesa 9.2.1
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2013/09/05 15:11:56 jsg Exp $
d25 1
a25 1
MESA_TINY=	1
@


1.37
log
@build infrastructure changes for Mesa 9.2.0
ok matthieu@@ mpi@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2013/06/13 10:39:28 jsg Exp $
d25 1
a25 1
MESA_TINY=	0
@


1.36
log
@add the build infrastructure for the gallium r300 driver
based on an earlier diff from mpi@@
ok mpi@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2013/04/14 19:59:03 matthieu Exp $
d22 4
a25 3
MESA_MAJOR=	7
MESA_MINOR=	11
MESA_TINY=	2
d35 1
a35 1
		-ldrm -lstdc++ -lm -lc
d39 1
a39 1
LDADD=		-L${X11BASE}/lib -lX11 -lXext
d42 2
d47 2
d59 2
d62 1
a62 1
	-DPTHREADS \
d64 2
d67 4
a70 2
	-DMAPI_MODE_UTIL \
	-DMAPI_GLAPI_CURRENT
a94 22
GLAPI_SOURCES= \
	glapi_dispatch.c \
	glapi_entrypoint.c \
	glapi_gentable.c \
	glapi_getproc.c \
	glapi_nop.c \
	glthread.c \
	glapi.c \
	$(ASM_API)

.if ${MACHINE_ARCH} == i386
ASM_API = glapi_x86.S
.endif

.if ${MACHINE_ARCH} == amd64
ASM_API = glapi_x86-64.S
.endif

.if ${MACHINE_ARCH} == sparc
SPARC_API = glapi_sparc.S
.endif

d97 1
d99 1
d106 1
a107 1
	indirect.c \
d109 1
a110 1
	indirect_window_pos.c \
d123 1
d135 2
a136 11
MAPI_GLAPI_SOURCES = \
	u_current.c \
	u_execmem.c \
	u_thread.c

MAPI_SOURCES = \
	entry.c \
	mapi.c \
	stub.c \
	table.c \
	$(MAPI_GLAPI_SOURCES)
d138 1
a138 1
SRCS = $(GLX_SOURCES)	\
d140 1
a140 1
	$(MAPI_GLAPI_SOURCES)
d174 6
a179 6
	sed -e 's,@@INSTALL_DIR@@,$(X11BASE),' \
	    -e 's,@@INSTALL_LIB_DIR@@,${LIBDIR},' \
	    -e 's,@@INSTALL_INC_DIR@@,${INCSDIR},' \
	    -e 's,@@GL_PC_REQ_PRIV@@,libdrm >= 2.4.15 dri2proto >= 2.1 glproto >= 1.4.11 x11 xext xdamage xfixes xxf86vm,' \
	    -e 's,@@GL_PC_LIB_PRIV@@,-L${LIBDIR} -lXxf86vm -lXext -lXdamage -lXfixes -lX11 -lXau -lXdmcp,' \
	    -e 's,@@GL_PC_CFLAGS@@,-I${INCSDIR},' \
d181 2
a182 1
	    -e 's,@@VERSION@@,$(MESA_MAJOR).$(MESA_MINOR).$(MESA_TINY),' \
d189 5
a193 4
	sed -e 's,@@INSTALL_DIR@@,${X11BASE},' \
	    -e 's,@@INSTALL_LIB_DIR@@,${LIBDIR},' \
	    -e 's,@@INSTALL_INC_DIR@@,${INCSDIR},' \
	    -e 's,@@DRI_DRIVER_DIR@@,${DRI_DRIVER_INSTALL_DIR},' \
d195 1
a195 1
	    -e 's,@@DRI_PC_REQ_PRIV@@,libdrm >= 2.4.15,' \
d224 1
a224 1
.PATH: ${MAPI}/mapi
d226 3
@


1.35
log
@Use MAKE_FLAGS to propagate XENOCARA_BUILD_GALLIUM to install step.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2013/04/14 10:23:04 mpi Exp $
d4 3
a6 2
.if ${XENOCARA_BUILD_DRI:L} == "yes"
SUBDIR=glsl mesa dri
d9 2
a10 3
.if ${XENOCARA_BUILD_GALLIUM:L} == "yes" || ${XENOCARA_BUILD_GALLIUM} == "llvm"
SUBDIR+=gallium dri/swrastg
MAKE_FLAGS+= XENOCARA_BUILD_GALLIUM=${XENOCARA_BUILD_GALLIUM}
@


1.34
log
@Add a new option to the xenocara infrastructure be able to automatically
build the Gallium3D software rasterizer as part of the libGL.

Note that it can also makes use of LLVM to build the llvmpipe if the
corresponding port is installed. Please refer to the README for a more
complete documentation.

Prodded by ajacoutot@@, ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2012/11/11 12:09:09 mpi Exp $
d10 1
@


1.33
log
@Link libGL with -lpthread to allow the llvm-pipe driver to be loaded.

ok matthieu@@, ajacoutot@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2012/08/26 18:46:42 mpi Exp $
d6 4
@


1.32
log
@Merge libmesa and libmesagallium build makefiles because they share
a lot of common sources.

ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2012/08/17 13:57:59 mpi Exp $
d30 2
@


1.31
log
@Upate to libGL 7.11.2

Tested by jsg@@, matthieu@@ and ajacoutot@@, ok mattieu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2012/06/04 10:18:45 mpi Exp $
d5 1
a5 1
SUBDIR=glsl libmesa dri
@


1.30
log
@Fix build with XENOCARA_BUILD_DRI=No

ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2011/10/23 13:57:36 matthieu Exp $
d18 2
a19 2
MESA_MINOR=	10
MESA_TINY=	3
d51 1
d80 1
d84 1
@


1.29
log
@Build system updates for Mesa 7.10.3
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2010/06/22 20:04:22 matthieu Exp $
d50 2
a51 1
	-D_REENTRANT
d54 1
a54 1
CPPFLAGS+=	-DMAPI_GLAPI_CURRENT \
@


1.28
log
@Update to Mesa 7.8.2. Tested by johan@@. Thanks.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2010/05/22 20:14:14 matthieu Exp $
d5 1
a5 1
SUBDIR=glsl libmesa/shader/slang/library libmesa dri
d11 2
a12 1
GL=	${.CURDIR}/../../dist/Mesa/src/GL
d18 2
a19 2
MESA_MINOR=	8
MESA_TINY=	2
d28 2
a29 1
LDADD=		-L${X11BASE}/lib -lX11 -lXext -lXxf86vm -lXdamage -lXfixes -ldrm
d31 1
a31 1
LDADD=		-L${X11BASE}/lib -lXext -lX11
d42 2
a43 1
	-I${MESA}/glapi \
d53 2
a54 1
CPPFLAGS+=	-DGLX_DIRECT_RENDERING -DXF86VIDMODE \
a75 1
	glapi.c \
d77 1
a95 1
	glcontextmodes.c \
d99 1
d104 1
d129 14
a142 1
	dri2.c
d145 2
a146 1
	$(GLAPI_SOURCES) 
d183 1
a183 1
	    -e 's,@@GL_PC_REQ_PRIV@@,libdrm >= 2.4.3 dri2proto >= 1.99.3 x11 xext xxf86vm xdamage xfixes,' \
d199 1
a199 1
	    -e 's,@@DRI_PC_REQ_PRIV@@,,' \
d227 2
a228 1
.PATH: ${MESA}/glapi
@


1.27
log
@Build infrastructure for Mesa 7.8.1.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2010/05/08 14:15:29 matthieu Exp $
d18 1
a18 1
MESA_TINY=	1
@


1.26
log
@use INSTALL_DATA in BSD Makefiles. ok oga@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2009/05/25 18:40:11 matthieu Exp $
d5 1
a5 1
SUBDIR=libmesa dri
d12 1
a12 1
GLX=	${.CURDIR}/../../dist/Mesa/src/glx/x11
d17 2
a18 2
MESA_MINOR=	4
MESA_TINY=	2
a71 1
	dispatch.c \
d73 1
d75 1
d167 1
@


1.25
log
@This is Mesa 7.4.2. from Brad.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2009/05/17 20:20:23 matthieu Exp $
d131 1
a131 2
		${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 \
		$$i ${DESTDIR}${INCSDIR}/GL"; \
@


1.24
log
@Update build infrastructure for Mesa 7.4.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2009/01/10 16:06:51 oga Exp $
d18 1
a18 1
MESA_TINY=	0
@


1.23
log
@Switch over to using the kernel *_drm.h headers instead of the copies
thereof provided with libdrm. This has been annoying me forever, and it
a blight caused by developing widely used drivers out of the kernel
tree.

ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2008/11/02 16:45:34 matthieu Exp $
d17 1
a17 1
MESA_MINOR=	2
a39 2
	-I${MESA}/main \
	-I${MESA}/math \
a40 4
	-I${MESA}/tnl \
	-I${MESA}/shader \
	-I${MESA}/shader/grammar \
	-I${MESA}/shader/slang \
d74 1
a89 12
X11_DRIVER_SOURCES = 	\
	glxapi.c	\
	fakeglx.c	\
	xfonts.c	\
	xm_api.c	\
	xm_buffer.c	\
	xm_dd.c	\
	xm_glide.c	\
	xm_line.c	\
	xm_span.c	\
	xm_tri.c

d108 1
a108 1
	pixelstore.c \
d122 2
d155 4
a158 1
CLEANFILES+= glxeval.c glxpixel.c
d164 3
d179 1
d206 1
a207 15
.PATH: ${MESA}/main
.PATH: ${MESA}/math
.PATH: ${MESA}/swrast
.PATH: ${MESA}/swrast_setup
.PATH: ${MESA}/tnl
.PATH: ${MESA}/shader
.PATH: ${MESA}/shader/grammar
.PATH: ${MESA}/shader/slang
.PATH: ${MESA}/shader/slang/MachineIndependent
.PATH: ${MESA}/shader/slang/MachineIndependent/preprocessor
.PATH: ${MESA}/shader/slang/OGLCompilersDLL
.PATH: ${MESA}/shader/slang/OSDependent/Linux
.PATH: ${MESA}/vbo
.PATH: ${MESA}/drivers/common
.PATH: ${MESA}/drivers/x11
@


1.22
log
@Fix substitutions for the pkg-config files. A couple of fields were
missed out, and one was looking for the wrong thing.

ok matthieu@@
@
text
@d49 1
a49 1
	-I${X11BASE}/include/drm \
@


1.21
log
@This is now Mesa 7.2. Noticed by brad@@. Thanks.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2008/11/02 15:01:32 matthieu Exp $
d174 2
a175 1
	    -e 's,@@LIB_DIR@@,lib,' \
d182 1
a182 1
dri.pc: ${MESA_DRI}/dri.pc.in
d184 5
a188 5
		-e 's,@@INSTALL_LIB_DIR@@,${LIBDIR},' \
		-e 's,@@INSTALL_INC_DIR@@,${INCDIR},' \
		-e 's,@@DRI_DRIVER_DIR@@,${DRI_DRIVER_INSTALL_DIR},' \
		-e 's,@@VERSION@@,$(MESA_MAJOR).$(MESA_MINOR).$(MESA_TINY),' \
		< ${MESA_DRI}/dri.pc.in > dri.pc
@


1.20
log
@Update build infrastructure for libGL after Mesa 7.2 update.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2008/07/16 20:24:39 brad Exp $
d17 1
a17 1
MESA_MINOR=	1
@


1.19
log
@Bump MESA_TINY (2 -> 3) after the last update of Mesa to 7.0.3
so that the pkgconfig files have the correct version.

ok okan@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2008/03/25 23:41:50 matthieu Exp $
d14 1
d17 2
a18 2
MESA_MINOR=	0
MESA_TINY=	3
d56 2
a57 1
CPPFLAGS+=	-DGLX_DIRECT_RENDERING
a94 3
COMMON_DRIVER_SOURCES = \
	driverfuncs.c

d113 1
d120 1
d134 2
a135 1
	glx_texture_compression.c \
d137 2
a138 1
	XF86dri.c
d143 1
a143 1
includes:
d178 13
a190 1
afterinstall: gl.pc
d193 6
@


1.18
log
@Introduce bsd.xconf.mk to set default config variables used
at several places in the Xenocara build in a central place instead
of duplicating the checks all over the place. ok oga@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2008/02/12 21:09:27 matthieu Exp $
d17 1
a17 1
MESA_TINY=	2
@


1.17
log
@Update to Mesa 7.0.2. Tested by naddy@@ (full ports build), simon@@
and oga@@ (with dri enabled).
@
text
@d1 2
a2 2
# $OpenBSD: Makefile,v 1.16 2008/02/02 17:38:56 matthieu Exp $
.include <bsd.own.mk>
d4 1
a4 1
.if defined(XENOCARA_BUILD_DRI) && ${XENOCARA_BUILD_DRI:L} == "yes"
d25 1
a25 1
.if defined(XENOCARA_BUILD_DRI) && ${XENOCARA_BUILD_DRI:L} == "yes"
d54 1
a54 1
.if defined(XENOCARA_BUILD_DRI) && ${XENOCARA_BUILD_DRI:L} == "yes"
@


1.16
log
@Don't change the libGL linkage when not using dri.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2008/02/02 17:24:30 matthieu Exp $
d15 4
d168 10
@


1.15
log
@stuff for building libGL with dri support. Also includes clean-up
of the regular libGL build. bump major because some symbols were
removed. ok oga@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2008/01/30 21:21:35 matthieu Exp $
a7 1
all: ${OBJS}
d20 6
a25 1
LDADD=		-L${X11BASE}/lib -lXfixes -lXdamage -lXext -lX11 -ldrm
@


1.14
log
@remove useless rules for .cpp files.
@
text
@d1 6
a6 1
# $OpenBSD: Makefile,v 1.13 2007/11/27 09:55:06 matthieu Exp $
d21 1
a21 2
LDADD=		-L${X11BASE}/lib -lXext -lX11
#LDADD=		-L${X11BASE}/lib -lXfixes -lXdamage -lXext -lX11 -ldrm -lpthread
d46 4
a66 65
# main
MAIN_SOURCES= \
	api_arrayelt.c \
	api_loopback.c \
	api_noop.c \
	api_validate.c \
	accum.c \
	attrib.c \
	arrayobj.c \
	blend.c \
	bufferobj.c \
	buffers.c \
	clip.c \
	colortab.c \
	context.c \
	convolve.c \
	debug.c \
	depth.c \
	depthstencil.c \
	dlist.c \
	drawpix.c \
	enable.c \
	enums.c \
	eval.c \
	execmem.c \
	extensions.c \
	fbobject.c \
	feedback.c \
	fog.c \
	framebuffer.c \
	get.c \
	getstring.c \
	hash.c \
	hint.c \
	histogram.c \
	image.c \
	imports.c \
	light.c \
	lines.c \
	matrix.c \
	mipmap.c \
	mm.c \
	pixel.c \
	points.c \
	polygon.c \
	queryobj.c \
	rastpos.c \
	rbadaptors.c \
	renderbuffer.c \
	shaders.c \
	state.c \
	stencil.c \
	texcompress.c \
	texcompress_s3tc.c \
	texcompress_fxt1.c \
	texenvprogram.c \
	texformat.c \
	teximage.c \
	texobj.c \
	texrender.c \
	texstate.c \
	texstore.c \
	varray.c \
	vtxfmt.c

a72 127
# math
MATH_SOURCES= \
	m_debug_clip.c \
	m_debug_norm.c \
	m_debug_xform.c \
	m_eval.c \
	m_matrix.c \
	m_translate.c \
	m_vector.c \
	m_xform.c

# swrast
SWRAST_SOURCES= \
	s_aaline.c \
	s_aatriangle.c \
	s_accum.c \
	s_alpha.c \
	s_atifragshader.c \
	s_bitmap.c \
	s_blend.c \
	s_blit.c \
	s_buffers.c \
	s_copypix.c \
	s_context.c \
	s_depth.c \
	s_drawpix.c \
	s_feedback.c \
	s_fog.c \
	s_fragprog.c \
	s_imaging.c \
	s_lines.c \
	s_logic.c \
	s_masking.c \
	s_points.c \
	s_readpix.c \
	s_span.c \
	s_stencil.c \
	s_texcombine.c \
	s_texfilter.c \
	s_texstore.c \
	s_triangle.c \
	s_zoom.c

# swrast_setup
SWRAST_SETUP_SOURCES= \
	ss_context.c \
	ss_triangle.c

# tnl
TNL_SOURCES= \
	t_context.c \
	t_pipeline.c \
	t_draw.c \
	t_vb_program.c \
	t_vb_render.c \
	t_vb_texgen.c \
	t_vb_texmat.c \
	t_vb_vertex.c \
	t_vb_cull.c \
	t_vb_fog.c \
	t_vb_light.c \
	t_vb_normals.c \
	t_vb_points.c \
	t_vp_build.c \
	t_vertex.c \
	t_vertex_sse.c \
	t_vertex_generic.c \

VBO_SOURCES = \
	vbo_context.c \
	vbo_exec.c \
	vbo_exec_api.c \
	vbo_exec_array.c \
	vbo_exec_draw.c \
	vbo_exec_eval.c \
	vbo_rebase.c \
	vbo_split.c \
	vbo_split_copy.c \
	vbo_split_inplace.c \
	vbo_save.c \
	vbo_save_api.c \
	vbo_save_draw.c \
	vbo_save_loopback.c 

# shader
SHADER_SOURCES=	\
	arbprogparse.c \
	arbprogram.c \
	atifragshader.c \
	grammar_mesa.c \
	nvfragparse.c \
	nvprogram.c \
	nvvertparse.c \
	program.c \
	prog_debug.c \
	prog_execute.c \
	prog_instruction.c \
	prog_parameter.c \
	prog_print.c \
	prog_statevars.c \
	programopt.c \
	shader_api.c \

# shader/slang
SLANG_SOURCES= \
	slang_builtin.c	\
	slang_codegen.c	\
	slang_compile.c	\
	slang_compile_function.c	\
	slang_compile_operation.c	\
	slang_compile_struct.c	\
	slang_compile_variable.c	\
	slang_emit.c	\
	slang_ir.c	\
	slang_label.c	\
	slang_library_noise.c	\
	slang_link.c	\
	slang_log.c	\
	slang_mem.c	\
	slang_preprocess.c	\
	slang_print.c	\
	slang_simplify.c	\
	slang_storage.c	\
	slang_typeinfo.c	\
	slang_vartable.c	\
	slang_utility.c

d74 1
a74 14
ASM_C_SOURCES= \
	common_x86.c \
	x86.c \
	3dnow.c \
	sse.c \
	x86sse.c
.endif
.if ${MACHINE_ARCH} == sparc
ASM_C_SOURCES= \
	sparc.c
.endif
.if ${MACHINE_ARCH} == powerpc
ASM_C_SOURCES= \
	common_ppc.c
d76 1
d78 1
a78 2
ASM_C_SOURCES= \
	x86-64.c
d81 3
a83 35
X86_SOURCES= \
	common_x86_asm.S \
	x86_xform2.S \
	x86_xform3.S \
	x86_xform4.S \
	x86_cliptest.S \
	mmx_blend.S \
	3dnow_xform1.S \
	3dnow_xform2.S \
	3dnow_xform3.S \
	3dnow_xform4.S \
	3dnow_normal.S \
	sse_xform1.S \
	sse_xform2.S \
	sse_xform3.S \
	sse_xform4.S \
	sse_normal.S \
	read_rgba_span_x86.S \

X86_API = \
	glapi_x86.S

X86-64_SOURCES =		\
	xform4.S

X86-64_API =			\
	glapi_x86-64.S

SPARC_SOURCES =			\
	clip.S			\
	norm.S			\
	xform.S

SPARC_API =			\
	glapi_sparc.S
d85 1
a85 1
COMMON_DRIVER_SOURCES =			\
d88 1
a88 1
X11_DRIVER_SOURCES =		\
a128 38
# x86
.if ${MACHINE_ARCH} == "i386"
ASM_SOURCES = $(X86_SOURCES)
ASM_API = $(X86_API)
.endif

# x86-64
.if ${MACHINE_ARCH} == "amd64"
ASM_SOURCES = $(X86-64_SOURCES)
ASM_API = $(X86-64_API)
.endif

ALL_SOURCES = \
	$(GLAPI_SOURCES)        \
	$(SOLO_SOURCES)         \
	$(ASM_SOURCES)          \
	$(COMMON_DRIVER_SOURCES)\
	$(X11_DRIVER_SOURCES)   \
	$(FBDEV_DRIVER_SOURCES) \
	$(OSMESA_DRIVER_SOURCES)


SOLO_SOURCES = \
	$(MAIN_SOURCES)		\
	$(MATH_SOURCES)		\
	$(VBO_SOURCES)		\
	$(TNL_SOURCES)		\
	$(SHADER_SOURCES)	\
	$(SWRAST_SOURCES)	\
	$(SWRAST_SETUP_SOURCES) \
	$(ASM_C_SOURCES)	\
	$(SLANG_SOURCES)

#SRCS =	$(SOLO_SOURCES)		\
#	$(ASM_SOURCES)		\
#	$(GLX_SOURCES)		\
#	$(GLAPI_SOURCES)

a129 1
	$(ASM_SOURCES)	\
a140 25
gen_matypes: gen_matypes.c
	$(CC) $(CPPFLAGS) $(CFLAGS) ${MESA}/x86/gen_matypes.c -o gen_matypes

matypes.h: mtypes.h t_context.h gen_matypes
	./gen_matypes > matypes.h

CLEANFILES+= gen_matypes matypes.h

common_x86_asm.o: matypes.h
3dnow_normal.o: matypes.h
3dnow_xform1.o: matypes.h
3dnow_xform2.o: matypes.h
3dnow_xform3.o: matypes.h
3dnow_xform4.o: matypes.h
mmx_blend.o: matypes.h
sse_normal.o: matypes.h
sse_xform1.o: matypes.h
sse_xform2.o: matypes.h
sse_xform3.o: matypes.h
sse_xform4.o: matypes.h
x86_cliptest.o: matypes.h
x86_xform2.o: matypes.h
x86_xform3.o: matypes.h
x86_xform4.o: matypes.h

d191 2
@


1.13
log
@I did not intend to commit the XENOCARA_BUILD_DRI bit at all.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2007/11/26 20:47:35 todd Exp $
a483 26

.SUFFIXES: .cpp

.cpp.o:
	@@echo "${COMPILE.cc} ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.cc} ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

.cpp.go:
	@@echo "${COMPILE.cc} -g ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.cc} -g ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

.cpp.po:
	@@echo "${COMPILE.cc} -p ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.cc} -p ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o

.cpp.so:
	@@echo "${COMPILE.cc} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.cc} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
@


1.12
log
@default to not building DRI for now to permit x snaps to build, found by
Johan Lindman, thanks
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.11 2007/11/26 15:10:19 matthieu Exp $
a40 7

XENOCARA_BUILD_DRI?=	n

.if ${XENOCARA_BUILD_DRI} == "y"
CPPFLAGS+= \
	-DGLX_DIRECT_RENDERING
.endif
@


1.11
log
@Re-enable pthread support in libGL, by providing proper weak stubs in
libX11 (together with other pthread stubs, already there for libX11).
ok kurt@@, art@@, kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.10 2007/11/25 10:18:21 matthieu Exp $
d41 2
@


1.10
log
@make libGL config closer to what was in the previous version:
- disable threads support
- link against libXext and libX11
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.9 2007/11/24 17:46:55 matthieu Exp $
d38 1
d41 5
@


1.9
log
@Update to Mesa 7.0.1. For now only indirect GLX is enabled in libGL.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.8 2007/04/07 15:37:50 matthieu Exp $
d16 1
a16 1
LDADD=		-lpthread
d37 1
a37 1
	-DPTHREADS -DGLX_INDIRECT_RENDERING \
@


1.8
log
@Don't include debugging symbols.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.7 2007/04/04 22:33:46 david Exp $
d11 4
d16 2
a17 1
LDADD=		-L${X11BASE}/lib -lXext -lX11
d25 1
a33 5
	-I${MESA}/shader/slang/OSDependent/Linux \
	-I${MESA}/shader/slang/OGLCompilersDLL \
	-I${MESA}/x86 \
	-I${MESA}/drivers/dri/common \
	-I${GL}/dri \
d36 4
a39 5
	-DCSRG_BASED  \
	-DUSE_GAS  \
	-DGLX_INDIRECT_RENDERING \
	-DGLX_USE_MESA  \
	-DXF86VIDMODE 
d48 1
a48 1
CPPFLAGS += -D__GLX_ALIGN64
a59 1
	accum.c \
d64 1
a64 1
	arrayobj.c  \
d66 1
d84 1
a85 1
	fbobject.c \
a99 1
	occlude.c \
d103 1
d105 1
d107 1
d111 1
a112 1
	texcompress_s3tc.c \
d126 2
a127 6
	glthread.c

.if ${MACHINE_ARCH} == "i386"
GLAPI_SOURCES+= \
	glapi_x86.S 
.endif
a139 6
# array_cache
ARRAY_CACHE_SOURCES= \
	ac_context.c \
	ac_import.c


a145 1
	s_arbshader.c \
d157 1
a161 1
	s_nvfragprog.c \
a178 2
	t_array_api.c \
	t_array_import.c \
d181 1
a181 6
	t_save_api.c \
	t_save_loopback.c \
	t_save_playback.c \
	t_vb_arbprogram.c \
	t_vb_arbprogram_sse.c \
	t_vb_arbshader.c\
d196 16
a211 5
	t_vtx_api.c \
	t_vtx_generic.c \
	t_vtx_x86.c \
	t_vtx_eval.c \
	t_vtx_exec.c 
a220 1
	nvvertexec.c \
d223 8
a230 32
	shaderobjects.c \
	shaderobjects_3dlabs.c

# shader/slang C
SLANG_C_SOURCES=	\
	atom.c \
	cpp.c \
	cppstruct.c \
	memory.c \
	scanner.c \
	symbols.c \
	tokens.c

# shader/slang CPP
SLANG_CPP_SOURCES= \
	slang_mesa.cpp	\
	Gen_glslang.cpp	\
	Gen_glslang_tab.cpp	\
	InfoSink.cpp	\
	Initialize.cpp	\
	Intermediate.cpp	\
	intermOut.cpp	\
	IntermTraverse.cpp	\
	parseConst.cpp	\
	ParseHelper.cpp	\
	PoolAlloc.cpp	\
	QualifierAlive.cpp	\
	RemoveTree.cpp	\
	ShaderLang.cpp	\
	SymbolTable.cpp	\
	Initialisation.cpp	\
	ossource.cpp
d234 2
a235 6
	slang_analyse.c	\
	slang_assemble.c	\
	slang_assemble_assignment.c	\
	slang_assemble_conditional.c	\
	slang_assemble_constructor.c	\
	slang_assemble_typeinfo.c	\
d241 3
a243 2
	slang_execute.c	\
	slang_export.c	\
a244 1
	slang_library_texsample.c	\
d246 2
d249 2
d252 2
d256 1
a256 2
.if ${MACHINE_ARCH} == "i386"
# x86
d262 14
a275 2
	x86sse.c \
	slang_execute_x86.c
d295 66
a360 1
	t_vtx_x86_gcc.S
d363 15
a377 27
GLX_SOURCES= \
	  glcontextmodes.c \
	  clientattrib.c \
	  compsize.c \
	  glxeval.c \
	  glxcmds.c \
	  glxext.c \
	  glxextensions.c \
	  indirect.c \
	  indirect_init.c \
	  indirect_size.c \
	  indirect_window_pos.c \
	  indirect_transpose_matrix.c \
	  indirect_vertex_array.c \
	  indirect_vertex_program.c \
	  glxpixel.c \
	  pixelstore.c \
	  render2.c \
	  renderpix.c \
	  single2.c \
	  singlepix.c \
	  vertarr.c \
	  xfont.c \
	  glx_pbuffer.c \
	  glx_query.c \
	  glx_texture_compression.c \
	  dri_glx.c
d379 2
a380 1
SRCS = 	$(MAIN_SOURCES)		\
d382 1
a382 1
	$(ARRAY_CACHE_SOURCES)	\
d386 1
a386 1
	$(SWRAST_SETUP_SOURCES)	\
d388 1
a388 6
	$(SLANG_SOURCES)	\
	$(X86_SOURCES)		\
	$(GLAPI_SOURCES)	\
	$(GLX_SOURCES)

#	$(SLANG_C_SOURCES)
d390 8
d453 1
d456 10
a465 1
.PATH: ${MESA}/array_cache
d479 3
a481 1
.PATH: ${MESA}/drivers/dri/common
a508 1

@


1.7
log
@more $Xenocara$ -> $OpenBSD$; ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD$
d15 1
a15 1
DEBUG=	
@


1.6
log
@o -DGLXEXT -> -DGLX_INDIRECT_RENDERING for 6.5.2
o bump minor rev
@
text
@d1 1
a1 1
# $Xenocara$
@


1.5
log
@link libGL against libXext and libX11, like X.Org 6.9 does.
Noticed by Brad with openoffice.
@
text
@d37 1
a37 1
	-DGLXEXT  \
d98 1
@


1.4
log
@sparc needs -fPIC
@
text
@d12 1
@


1.3
log
@Make 'obj' now can make symlinks to /usr/obj/xenocara (or any other
directory designed by XENOCARA_OBJDIR in /etc/mk.conf).
@
text
@d398 1
a398 1
.if ${MACHINE_ARCH} == powerpc
@


1.2
log
@Disable profiled libs.
@
text
@d393 2
@


1.1
log
@Build infrastructure for GL libs
@
text
@d391 1
@

