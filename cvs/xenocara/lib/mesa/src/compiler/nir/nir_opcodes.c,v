head	1.1;
branch	1.1.1;
access;
symbols
	mesa-13_0_6:1.1.1.2
	mesa-13_0_5:1.1.1.2
	mesa-13_0_3:1.1.1.2
	mesa-13_0_2:1.1.1.2
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.1
date	2016.05.29.10.16.31;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.1
date	2016.05.29.10.16.31;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.2
date	2016.12.11.08.33.45;	author jsg;	state Exp;
branches;
next	;
commitid	uuv5VTS15jglEDZU;


desc
@@


1.1
log
@Initial revision
@
text
@
#include "nir.h"

const nir_op_info nir_op_infos[nir_num_opcodes] = {
{
   .name = "b2f",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_bool
   },
   .algebraic_properties =
      0
},
{
   .name = "b2i",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_bool
   },
   .algebraic_properties =
      0
},
{
   .name = "ball_fequal2",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      2, 2
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "ball_fequal3",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      3, 3
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "ball_fequal4",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      4, 4
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "ball_iequal2",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      2, 2
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "ball_iequal3",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      3, 3
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "ball_iequal4",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      4, 4
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "bany_fnequal2",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      2, 2
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "bany_fnequal3",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      3, 3
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "bany_fnequal4",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      4, 4
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "bany_inequal2",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      2, 2
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "bany_inequal3",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      3, 3
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "bany_inequal4",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_bool,
   .input_sizes = {
      4, 4
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "bcsel",
   .num_inputs = 3,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0, 0
   },
   .input_types = {
      nir_type_bool, nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "bfi",
   .num_inputs = 3,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "bfm",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "bit_count",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "bitfield_insert",
   .num_inputs = 4,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0, 0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint, nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "bitfield_reverse",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "extract_i16",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "extract_i8",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "extract_u16",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "extract_u8",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "f2b",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "f2i",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "f2u",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fabs",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fadd",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "fall_equal2",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      2, 2
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fall_equal3",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      3, 3
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fall_equal4",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      4, 4
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fand",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fany_nequal2",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      2, 2
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fany_nequal3",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      3, 3
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fany_nequal4",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      4, 4
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fceil",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fcos",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fcsel",
   .num_inputs = 3,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fddx",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fddx_coarse",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fddx_fine",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fddy",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fddy_coarse",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fddy_fine",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fdiv",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fdot2",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      2, 2
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fdot3",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      3, 3
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fdot4",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      4, 4
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fdot_replicated2",
   .num_inputs = 2,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      2, 2
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fdot_replicated3",
   .num_inputs = 2,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      3, 3
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fdot_replicated4",
   .num_inputs = 2,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      4, 4
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fdph",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      3, 4
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fdph_replicated",
   .num_inputs = 2,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      3, 4
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "feq",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fexp2",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "ffloor",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "ffma",
   .num_inputs = 3,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "ffract",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fge",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "find_lsb",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "flog2",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "flrp",
   .num_inputs = 3,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "flt",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fmax",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fmin",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fmod",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fmov",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fmul",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "fne",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fneg",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise1_1",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise1_2",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      2
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise1_3",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      3
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise1_4",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      4
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise2_1",
   .num_inputs = 1,
   .output_size = 2,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise2_2",
   .num_inputs = 1,
   .output_size = 2,
   .output_type = nir_type_float,
   .input_sizes = {
      2
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise2_3",
   .num_inputs = 1,
   .output_size = 2,
   .output_type = nir_type_float,
   .input_sizes = {
      3
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise2_4",
   .num_inputs = 1,
   .output_size = 2,
   .output_type = nir_type_float,
   .input_sizes = {
      4
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise3_1",
   .num_inputs = 1,
   .output_size = 3,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise3_2",
   .num_inputs = 1,
   .output_size = 3,
   .output_type = nir_type_float,
   .input_sizes = {
      2
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise3_3",
   .num_inputs = 1,
   .output_size = 3,
   .output_type = nir_type_float,
   .input_sizes = {
      3
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise3_4",
   .num_inputs = 1,
   .output_size = 3,
   .output_type = nir_type_float,
   .input_sizes = {
      4
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise4_1",
   .num_inputs = 1,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise4_2",
   .num_inputs = 1,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      2
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise4_3",
   .num_inputs = 1,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      3
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnoise4_4",
   .num_inputs = 1,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      4
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fnot",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "for",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "fpow",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "frcp",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fround_even",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "frsq",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fsat",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fsign",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fsin",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fsqrt",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fsub",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "ftrunc",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "fxor",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "i2b",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "i2f",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "iabs",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "iadd",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "iand",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "ibfe",
   .num_inputs = 3,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "ibitfield_extract",
   .num_inputs = 3,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "idiv",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "ieq",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "ifind_msb",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "ige",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "ilt",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "imax",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "imin",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "imov",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "imul",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "imul_high",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "ine",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "ineg",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "inot",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "ior",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "ishl",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "ishr",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "isign",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "isub",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "ixor",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "ldexp",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_half_2x16",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_uint,
   .input_sizes = {
      2
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_half_2x16_split",
   .num_inputs = 2,
   .output_size = 1,
   .output_type = nir_type_uint,
   .input_sizes = {
      1, 1
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_snorm_2x16",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_uint,
   .input_sizes = {
      2
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_snorm_4x8",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_uint,
   .input_sizes = {
      4
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_unorm_2x16",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_uint,
   .input_sizes = {
      2
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_unorm_4x8",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_uint,
   .input_sizes = {
      4
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_uvec2_to_uint",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_uint,
   .input_sizes = {
      2
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_uvec4_to_uint",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_uint,
   .input_sizes = {
      4
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "seq",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "sge",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "slt",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
   .name = "sne",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "u2f",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "uadd_carry",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "ubfe",
   .num_inputs = 3,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "ubitfield_extract",
   .num_inputs = 3,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "udiv",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "ufind_msb",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "uge",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "ult",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_bool,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "umax",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "umax_4x8",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "umin",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "umin_4x8",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "umod",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "umul_high",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE
},
{
   .name = "umul_unorm_4x8",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "unpack_half_2x16",
   .num_inputs = 1,
   .output_size = 2,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "unpack_half_2x16_split_x",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "unpack_half_2x16_split_y",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "unpack_snorm_2x16",
   .num_inputs = 1,
   .output_size = 2,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "unpack_snorm_4x8",
   .num_inputs = 1,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "unpack_unorm_2x16",
   .num_inputs = 1,
   .output_size = 2,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "unpack_unorm_4x8",
   .num_inputs = 1,
   .output_size = 4,
   .output_type = nir_type_float,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "usadd_4x8",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      NIR_OP_IS_COMMUTATIVE | NIR_OP_IS_ASSOCIATIVE
},
{
   .name = "ushr",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "ussub_4x8",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
   .name = "usub_borrow",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "vec2",
   .num_inputs = 2,
   .output_size = 2,
   .output_type = nir_type_uint,
   .input_sizes = {
      1, 1
   },
   .input_types = {
      nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "vec3",
   .num_inputs = 3,
   .output_size = 3,
   .output_type = nir_type_uint,
   .input_sizes = {
      1, 1, 1
   },
   .input_types = {
      nir_type_uint, nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
{
   .name = "vec4",
   .num_inputs = 4,
   .output_size = 4,
   .output_type = nir_type_uint,
   .input_sizes = {
      1, 1, 1, 1
   },
   .input_types = {
      nir_type_uint, nir_type_uint, nir_type_uint, nir_type_uint
   },
   .algebraic_properties =
      0
},
};

@


1.1.1.1
log
@Import Mesa 11.2.2
@
text
@@


1.1.1.2
log
@Import Mesa 13.0.2
@
text
@d9 1
a9 1
   .output_type = nir_type_float32,
d14 1
a14 1
      nir_type_bool32
d23 1
a23 1
   .output_type = nir_type_int32,
d28 1
a28 1
      nir_type_bool32
d37 1
a37 1
   .output_type = nir_type_bool32,
d51 1
a51 1
   .output_type = nir_type_bool32,
d65 1
a65 1
   .output_type = nir_type_bool32,
d79 1
a79 1
   .output_type = nir_type_bool32,
d93 1
a93 1
   .output_type = nir_type_bool32,
d107 1
a107 1
   .output_type = nir_type_bool32,
d121 1
a121 1
   .output_type = nir_type_bool32,
d135 1
a135 1
   .output_type = nir_type_bool32,
d149 1
a149 1
   .output_type = nir_type_bool32,
d163 1
a163 1
   .output_type = nir_type_bool32,
d177 1
a177 1
   .output_type = nir_type_bool32,
d191 1
a191 1
   .output_type = nir_type_bool32,
d210 1
a210 1
      nir_type_bool32, nir_type_uint, nir_type_uint
d219 1
a219 1
   .output_type = nir_type_uint32,
d224 1
a224 1
      nir_type_uint32, nir_type_uint32, nir_type_uint32
d233 1
a233 1
   .output_type = nir_type_uint32,
d238 1
a238 1
      nir_type_int32, nir_type_int32
d247 1
a247 1
   .output_type = nir_type_uint32,
d252 1
a252 1
      nir_type_uint32
d261 1
a261 1
   .output_type = nir_type_uint32,
d266 1
a266 1
      nir_type_uint32, nir_type_uint32, nir_type_int32, nir_type_int32
d275 1
a275 1
   .output_type = nir_type_uint32,
d280 1
a280 57
      nir_type_uint32
   },
   .algebraic_properties =
      0
},
{
   .name = "d2b",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_bool32,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float64
   },
   .algebraic_properties =
      0
},
{
   .name = "d2f",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float32,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float64
   },
   .algebraic_properties =
      0
},
{
   .name = "d2i",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_int32,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float64
   },
   .algebraic_properties =
      0
},
{
   .name = "d2u",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_uint32,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float64
d345 1
a345 1
   .output_type = nir_type_bool32,
d350 1
a350 15
      nir_type_float32
   },
   .algebraic_properties =
      0
},
{
   .name = "f2d",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float64,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float32
d359 1
a359 1
   .output_type = nir_type_int32,
d364 1
a364 1
      nir_type_float32
d373 1
a373 1
   .output_type = nir_type_uint32,
d378 1
a378 1
      nir_type_float32
d415 1
a415 1
   .output_type = nir_type_float32,
d420 1
a420 1
      nir_type_float32, nir_type_float32
d429 1
a429 1
   .output_type = nir_type_float32,
d434 1
a434 1
      nir_type_float32, nir_type_float32
d443 1
a443 1
   .output_type = nir_type_float32,
d448 1
a448 1
      nir_type_float32, nir_type_float32
d457 1
a457 1
   .output_type = nir_type_float32,
d462 1
a462 1
      nir_type_float32, nir_type_float32
d471 1
a471 1
   .output_type = nir_type_float32,
d476 1
a476 1
      nir_type_float32, nir_type_float32
d485 1
a485 1
   .output_type = nir_type_float32,
d490 1
a490 1
      nir_type_float32, nir_type_float32
d499 1
a499 1
   .output_type = nir_type_float32,
d504 1
a504 1
      nir_type_float32, nir_type_float32
d541 1
a541 1
   .output_type = nir_type_float32,
d546 1
a546 1
      nir_type_float32, nir_type_float32, nir_type_float32
d765 1
a765 1
   .output_type = nir_type_bool32,
d835 1
a835 1
   .output_type = nir_type_bool32,
d849 1
a849 1
   .output_type = nir_type_int32,
d854 1
a854 1
      nir_type_int32
d891 1
a891 1
   .output_type = nir_type_bool32,
d975 1
a975 1
   .output_type = nir_type_bool32,
d1241 1
a1241 1
   .output_type = nir_type_float32,
d1246 1
a1246 1
      nir_type_float32, nir_type_float32
a1265 14
   .name = "fquantize2f16",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_float
   },
   .algebraic_properties =
      0
},
{
a1279 14
   .name = "frem",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_float,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_float, nir_type_float
   },
   .algebraic_properties =
      0
},
{
d1395 1
a1395 1
   .output_type = nir_type_float32,
d1400 1
a1400 1
      nir_type_float32, nir_type_float32
d1409 1
a1409 1
   .output_type = nir_type_bool32,
d1414 1
a1414 15
      nir_type_int32
   },
   .algebraic_properties =
      0
},
{
   .name = "i2d",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float64,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_int32
d1423 1
a1423 1
   .output_type = nir_type_float32,
d1428 1
a1428 1
      nir_type_int32
d1479 1
a1479 1
   .output_type = nir_type_int32,
d1484 1
a1484 1
      nir_type_int32, nir_type_int32, nir_type_int32
d1493 1
a1493 1
   .output_type = nir_type_int32,
d1498 1
a1498 1
      nir_type_int32, nir_type_int32, nir_type_int32
d1521 1
a1521 1
   .output_type = nir_type_bool32,
d1535 1
a1535 1
   .output_type = nir_type_int32,
d1540 1
a1540 1
      nir_type_int32
d1549 1
a1549 1
   .output_type = nir_type_bool32,
d1563 1
a1563 1
   .output_type = nir_type_bool32,
a1601 14
   .name = "imod",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
d1633 1
a1633 1
   .output_type = nir_type_int32,
d1638 1
a1638 1
      nir_type_int32, nir_type_int32
d1647 1
a1647 1
   .output_type = nir_type_bool32,
a1699 14
   .name = "irem",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_int,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_int, nir_type_int
   },
   .algebraic_properties =
      0
},
{
d1778 1
a1778 29
      nir_type_float, nir_type_int32
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_double_2x32",
   .num_inputs = 1,
   .output_size = 1,
   .output_type = nir_type_uint64,
   .input_sizes = {
      2
   },
   .input_types = {
      nir_type_uint32
   },
   .algebraic_properties =
      0
},
{
   .name = "pack_double_2x32_split",
   .num_inputs = 2,
   .output_size = 0,
   .output_type = nir_type_uint64,
   .input_sizes = {
      0, 0
   },
   .input_types = {
      nir_type_uint32, nir_type_uint32
d1787 1
a1787 1
   .output_type = nir_type_uint32,
d1792 1
a1792 1
      nir_type_float32
d1801 1
a1801 1
   .output_type = nir_type_uint32,
d1806 1
a1806 1
      nir_type_float32, nir_type_float32
d1815 1
a1815 1
   .output_type = nir_type_uint32,
d1820 1
a1820 1
      nir_type_float32
d1829 1
a1829 1
   .output_type = nir_type_uint32,
d1834 1
a1834 1
      nir_type_float32
d1843 1
a1843 1
   .output_type = nir_type_uint32,
d1848 1
a1848 1
      nir_type_float32
d1857 1
a1857 1
   .output_type = nir_type_uint32,
d1862 1
a1862 1
      nir_type_float32
d1871 1
a1871 1
   .output_type = nir_type_uint32,
d1876 1
a1876 1
      nir_type_uint32
d1885 1
a1885 1
   .output_type = nir_type_uint32,
d1890 1
a1890 1
      nir_type_uint32
d1899 1
a1899 1
   .output_type = nir_type_float32,
d1904 1
a1904 1
      nir_type_float32, nir_type_float32
d1913 1
a1913 1
   .output_type = nir_type_float32,
d1918 1
a1918 1
      nir_type_float32, nir_type_float32
d1927 1
a1927 1
   .output_type = nir_type_float32,
d1932 1
a1932 1
      nir_type_float32, nir_type_float32
d1941 1
a1941 1
   .output_type = nir_type_float32,
d1946 1
a1946 1
      nir_type_float32, nir_type_float32
a1951 14
   .name = "u2d",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_float64,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_uint32
   },
   .algebraic_properties =
      0
},
{
d1955 1
a1955 1
   .output_type = nir_type_float32,
d1960 1
a1960 1
      nir_type_uint32
d1983 1
a1983 1
   .output_type = nir_type_uint32,
d1988 1
a1988 1
      nir_type_uint32, nir_type_int32, nir_type_int32
d1997 1
a1997 1
   .output_type = nir_type_uint32,
d2002 1
a2002 1
      nir_type_uint32, nir_type_int32, nir_type_int32
d2025 1
a2025 1
   .output_type = nir_type_int32,
d2030 1
a2030 1
      nir_type_uint32
d2039 1
a2039 1
   .output_type = nir_type_bool32,
d2053 1
a2053 1
   .output_type = nir_type_bool32,
d2081 1
a2081 1
   .output_type = nir_type_int32,
d2086 1
a2086 1
      nir_type_int32, nir_type_int32
d2109 1
a2109 1
   .output_type = nir_type_int32,
d2114 1
a2114 1
      nir_type_int32, nir_type_int32
d2137 1
a2137 1
   .output_type = nir_type_uint32,
d2142 1
a2142 1
      nir_type_uint32, nir_type_uint32
d2151 1
a2151 1
   .output_type = nir_type_int32,
d2156 1
a2156 1
      nir_type_int32, nir_type_int32
a2161 42
   .name = "unpack_double_2x32",
   .num_inputs = 1,
   .output_size = 2,
   .output_type = nir_type_uint32,
   .input_sizes = {
      1
   },
   .input_types = {
      nir_type_uint64
   },
   .algebraic_properties =
      0
},
{
   .name = "unpack_double_2x32_split_x",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_uint32,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_uint64
   },
   .algebraic_properties =
      0
},
{
   .name = "unpack_double_2x32_split_y",
   .num_inputs = 1,
   .output_size = 0,
   .output_type = nir_type_uint32,
   .input_sizes = {
      0
   },
   .input_types = {
      nir_type_uint64
   },
   .algebraic_properties =
      0
},
{
d2165 1
a2165 1
   .output_type = nir_type_float32,
d2170 1
a2170 1
      nir_type_uint32
d2179 1
a2179 1
   .output_type = nir_type_float32,
d2184 1
a2184 1
      nir_type_uint32
d2193 1
a2193 1
   .output_type = nir_type_float32,
d2198 1
a2198 1
      nir_type_uint32
d2207 1
a2207 1
   .output_type = nir_type_float32,
d2212 1
a2212 1
      nir_type_uint32
d2221 1
a2221 1
   .output_type = nir_type_float32,
d2226 1
a2226 1
      nir_type_uint32
d2235 1
a2235 1
   .output_type = nir_type_float32,
d2240 1
a2240 1
      nir_type_uint32
d2249 1
a2249 1
   .output_type = nir_type_float32,
d2254 1
a2254 1
      nir_type_uint32
d2263 1
a2263 1
   .output_type = nir_type_int32,
d2268 1
a2268 1
      nir_type_int32, nir_type_int32
d2291 1
a2291 1
   .output_type = nir_type_int32,
d2296 1
a2296 1
      nir_type_int32, nir_type_int32
@

