head	1.1;
branch	1.1.1;
access;
symbols
	mesa-17_1_6:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.2
	OPENBSD_6_1_BASE:1.1.1.2
	mesa-13_0_6:1.1.1.2
	mesa-13_0_5:1.1.1.2
	mesa-13_0_3:1.1.1.2
	mesa-13_0_2:1.1.1.2
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.11.22.02.42.21;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.42.21;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.12.11.08.30.39;	author jsg;	state Exp;
branches;
next	;
commitid	uuv5VTS15jglEDZU;


desc
@@


1.1
log
@Initial revision
@
text
@Import('*')

env = env.Clone()

env.Prepend(LIBS = [mesautil, gallium])

env.Prepend(LIBPATH = [graw.dir])
env.Prepend(LIBS = ['graw'])
    

if env['platform'] in ('freebsd8', 'sunos'):
    env.Append(LIBS = ['m'])

if env['platform'] == 'freebsd8':
    env.Append(LIBS = ['pthread'])

progs = [
    'clear',
    'disasm',
    'fs-fragcoord',
    'fs-frontface',
    'fs-test',
    'fs-write-z',
    'gs-test',
    'occlusion-query',
    'quad-sample',
    'quad-tex',
    'shader-leak',
    'tex-srgb',
    'tex-swizzle',
    'tri',
    'tri-large',
    'tri-gs',
    'tri-instanced',
    'vs-test',
]

for name in progs:
    program = env.Program(
        target = name,
        source = name + '.c',
    )
    #env.Depends(program, graw)
    env.Alias('graw-progs', program)
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 13.0.2
@
text
@d9 1
a9 1

@

