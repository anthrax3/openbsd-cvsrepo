head	1.2;
access;
symbols
	mesa-17_1_6:1.1.1.4
	OPENBSD_6_1:1.1.1.3.0.2
	OPENBSD_6_1_BASE:1.1.1.3
	mesa-13_0_6:1.1.1.3
	mesa-13_0_5:1.1.1.3
	mesa-13_0_3:1.1.1.3
	mesa-13_0_2:1.1.1.3
	OPENBSD_6_0:1.1.1.2.0.4
	OPENBSD_6_0_BASE:1.1.1.2
	mesa-11_2_2:1.1.1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2017.08.26.16.59.23;	author jsg;	state Exp;
branches;
next	1.1;
commitid	D0k2io1oY8gcsQ2S;

1.1
date	2015.11.22.02.43.18;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.43.18;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.05.29.10.18.49;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.3
date	2016.12.11.08.31.57;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	uuv5VTS15jglEDZU;

1.1.1.4
date	2017.08.14.09.36.35;	author jsg;	state Exp;
branches;
next	;
commitid	enNyoMGkcgwM3Ww6;


desc
@@


1.2
log
@Revert to Mesa 13.0.6 to hopefully address rendering issues a handful of
people have reported with xpdf/fvwm on ivy bridge with modesetting driver.
@
text
@/**************************************************************************
 *
 * Copyright 2009 Younes Manton.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

/*
 * Target makefiles directly refer to vl_winsys_dri.c to avoid DRI dependency
 */

#ifndef vl_winsys_h
#define vl_winsys_h

#include <X11/Xlib.h>
#include "pipe/p_defines.h"
#include "pipe/p_format.h"

struct pipe_screen;
struct pipe_surface;
struct pipe_loader_device;

struct vl_screen
{
   void (*destroy)(struct vl_screen *vscreen);

   struct pipe_resource *
   (*texture_from_drawable)(struct vl_screen *vscreen, void *drawable);

   struct u_rect *
   (*get_dirty_area)(struct vl_screen *vscreen);

   uint64_t
   (*get_timestamp)(struct vl_screen *vscreen, void *drawable);

   void
   (*set_next_timestamp)(struct vl_screen *vscreen, uint64_t stamp);

   void *
   (*get_private)(struct vl_screen *vscreen);

   struct pipe_screen *pscreen;
   struct pipe_loader_device *dev;
};

struct vl_screen *
vl_dri2_screen_create(Display *display, int screen);

struct vl_screen *
vl_drm_screen_create(int fd);

#if defined(HAVE_DRI3)
struct vl_screen *
vl_dri3_screen_create(Display *display, int screen);
#endif

#endif
@


1.1
log
@Initial revision
@
text
@d45 7
a51 3
   struct pipe_screen *pscreen;
   struct pipe_loader_device *dev;
};
d53 2
a54 2
struct vl_screen*
vl_screen_create(Display *display, int screen);
d56 2
a57 1
void vl_screen_destroy(struct vl_screen *vscreen);
d59 2
a60 2
struct pipe_resource*
vl_screen_texture_from_drawable(struct vl_screen *vscreen, Drawable drawable);
d62 3
a64 2
struct u_rect *
vl_screen_get_dirty_area(struct vl_screen *vscreen);
d66 2
a67 2
uint64_t
vl_screen_get_timestamp(struct vl_screen *vscreen, Drawable drawable);
d69 2
a70 2
void
vl_screen_set_next_timestamp(struct vl_screen *vscreen, uint64_t stamp);
d72 4
a75 2
void*
vl_screen_get_private(struct vl_screen *vscreen);
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 11.2.2
@
text
@d45 3
a47 4
   void (*destroy)(struct vl_screen *vscreen);

   struct pipe_resource *
   (*texture_from_drawable)(struct vl_screen *vscreen, void *drawable);
d49 2
a50 2
   struct u_rect *
   (*get_dirty_area)(struct vl_screen *vscreen);
d52 1
a52 2
   uint64_t
   (*get_timestamp)(struct vl_screen *vscreen, void *drawable);
d54 2
a55 2
   void
   (*set_next_timestamp)(struct vl_screen *vscreen, uint64_t stamp);
d57 2
a58 2
   void *
   (*get_private)(struct vl_screen *vscreen);
d60 2
a61 3
   struct pipe_screen *pscreen;
   struct pipe_loader_device *dev;
};
d63 2
a64 2
struct vl_screen *
vl_dri2_screen_create(Display *display, int screen);
d66 2
a67 2
struct vl_screen *
vl_drm_screen_create(int fd);
@


1.1.1.3
log
@Import Mesa 13.0.2
@
text
@a71 5
#if defined(HAVE_DRI3)
struct vl_screen *
vl_dri3_screen_create(Display *display, int screen);
#endif

@


1.1.1.4
log
@Import Mesa 17.1.6
@
text
@a34 1
#ifdef HAVE_X11_PLATFORM
a35 1
#endif
a61 5
   void
   (*set_back_texture_from_output)(struct vl_screen *vscreen,
                                   struct pipe_resource *buffer,
                                   uint32_t width, uint32_t height);

a65 1
#ifdef HAVE_X11_PLATFORM
a67 4
#else
static inline struct vl_screen *
vl_dri2_screen_create(void *display, int screen) { return NULL; };
#endif
a68 1
#if defined(HAVE_X11_PLATFORM) && defined(HAVE_DRI3)
d70 1
a70 5
vl_dri3_screen_create(Display *display, int screen);
#else
static inline struct vl_screen *
vl_dri3_screen_create(void *display, int screen) { return NULL; };
#endif
d72 1
a72 1
#ifdef HAVE_DRM_PLATFORM
d74 1
a74 4
vl_drm_screen_create(int fd);
#else
static inline struct vl_screen *
vl_drm_screen_create(int fd) { return NULL; };
@


