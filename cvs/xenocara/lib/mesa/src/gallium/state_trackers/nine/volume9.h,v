head	1.2;
access;
symbols
	mesa-17_1_6:1.1.1.4
	OPENBSD_6_1:1.1.1.3.0.2
	OPENBSD_6_1_BASE:1.1.1.3
	mesa-13_0_6:1.1.1.3
	mesa-13_0_5:1.1.1.3
	mesa-13_0_3:1.1.1.3
	mesa-13_0_2:1.1.1.3
	OPENBSD_6_0:1.1.1.2.0.4
	OPENBSD_6_0_BASE:1.1.1.2
	mesa-11_2_2:1.1.1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2017.08.26.16.59.30;	author jsg;	state Exp;
branches;
next	1.1;
commitid	D0k2io1oY8gcsQ2S;

1.1
date	2015.11.22.02.42.08;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.42.08;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.05.29.10.17.38;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.3
date	2016.12.11.08.31.13;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	uuv5VTS15jglEDZU;

1.1.1.4
date	2017.08.14.09.35.51;	author jsg;	state Exp;
branches;
next	;
commitid	enNyoMGkcgwM3Ww6;


desc
@@


1.2
log
@Revert to Mesa 13.0.6 to hopefully address rendering issues a handful of
people have reported with xpdf/fvwm on ivy bridge with modesetting driver.
@
text
@/*
 * Copyright 2011 Joakim Sindholt <opensource@@zhasha.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * on the rights to use, copy, modify, merge, publish, distribute, sub
 * license, and/or sell copies of the Software, and to permit persons to whom
 * the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHOR(S) AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
 * USE OR OTHER DEALINGS IN THE SOFTWARE. */

#ifndef _NINE_VOLUME9_H_
#define _NINE_VOLUME9_H_

#include "iunknown.h"

#include "pipe/p_state.h"
#include "util/u_inlines.h"

struct util_hash_table;

struct NineDevice9;

struct NineVolume9
{
    struct NineUnknown base;

    struct pipe_resource *resource;
    unsigned level;
    unsigned level_actual;

    uint8_t *data; /* system memory backing */
    uint8_t *data_conversion; /* for conversions */

    D3DVOLUME_DESC desc;
    struct pipe_resource info;
    enum pipe_format format_conversion;
    unsigned stride;
    unsigned stride_conversion;
    unsigned layer_stride;
    unsigned layer_stride_conversion;

    struct pipe_transfer *transfer;
    unsigned lock_count;

    struct pipe_context *pipe;
};
static inline struct NineVolume9 *
NineVolume9( void *data )
{
    return (struct NineVolume9 *)data;
}

HRESULT
NineVolume9_new( struct NineDevice9 *pDevice,
                 struct NineUnknown *pContainer,
                 struct pipe_resource *pResource,
                 unsigned Level,
                 D3DVOLUME_DESC *pDesc,
                 struct NineVolume9 **ppOut );

/*** Nine private ***/

static inline void
NineVolume9_SetResource( struct NineVolume9 *This,
                         struct pipe_resource *resource, unsigned level )
{
    This->level = level;
    pipe_resource_reference(&This->resource, resource);
}

void
NineVolume9_AddDirtyRegion( struct NineVolume9 *This,
                            const struct pipe_box *box );

void
NineVolume9_CopyMemToDefault( struct NineVolume9 *This,
                              struct NineVolume9 *From,
                              unsigned dstx, unsigned dsty, unsigned dstz,
                              struct pipe_box *pSrcBox );

HRESULT
NineVolume9_UploadSelf( struct NineVolume9 *This,
                        const struct pipe_box *damaged );


/*** Direct3D public ***/

HRESULT NINE_WINAPI
NineVolume9_GetContainer( struct NineVolume9 *This,
                          REFIID riid,
                          void **ppContainer );

HRESULT NINE_WINAPI
NineVolume9_GetDesc( struct NineVolume9 *This,
                     D3DVOLUME_DESC *pDesc );

HRESULT NINE_WINAPI
NineVolume9_LockBox( struct NineVolume9 *This,
                     D3DLOCKED_BOX *pLockedVolume,
                     const D3DBOX *pBox,
                     DWORD Flags );

HRESULT NINE_WINAPI
NineVolume9_UnlockBox( struct NineVolume9 *This );

#endif /* _NINE_VOLUME9_H_ */
@


1.1
log
@Initial revision
@
text
@d44 1
d48 1
d50 1
d52 1
a57 3

    /* for [GS]etPrivateData/FreePrivateData */
    struct util_hash_table *pdata;
d87 1
a87 1
HRESULT
d100 1
a100 18
HRESULT WINAPI
NineVolume9_SetPrivateData( struct NineVolume9 *This,
                            REFGUID refguid,
                            const void *pData,
                            DWORD SizeOfData,
                            DWORD Flags );

HRESULT WINAPI
NineVolume9_GetPrivateData( struct NineVolume9 *This,
                            REFGUID refguid,
                            void *pData,
                            DWORD *pSizeOfData );

HRESULT WINAPI
NineVolume9_FreePrivateData( struct NineVolume9 *This,
                             REFGUID refguid );

HRESULT WINAPI
d105 1
a105 1
HRESULT WINAPI
d109 1
a109 1
HRESULT WINAPI
d115 1
a115 1
HRESULT WINAPI
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 11.2.2
@
text
@d99 1
a99 1
HRESULT NINE_WINAPI
d106 1
a106 1
HRESULT NINE_WINAPI
d112 1
a112 1
HRESULT NINE_WINAPI
d116 1
a116 1
HRESULT NINE_WINAPI
d121 1
a121 1
HRESULT NINE_WINAPI
d125 1
a125 1
HRESULT NINE_WINAPI
d131 1
a131 1
HRESULT NINE_WINAPI
@


1.1.1.3
log
@Import Mesa 13.0.2
@
text
@a43 1
    uint8_t *data_conversion; /* for conversions */
a46 1
    enum pipe_format format_conversion;
a47 1
    unsigned stride_conversion;
a48 1
    unsigned layer_stride_conversion;
d54 3
d86 1
a86 1
void
d98 17
@


1.1.1.4
log
@Import Mesa 17.1.6
@
text
@d57 1
a57 1
    unsigned pending_uploads_counter; /* pending uploads */
@


