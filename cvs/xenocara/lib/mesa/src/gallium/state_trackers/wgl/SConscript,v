head	1.1;
branch	1.1.1;
access;
symbols
	mesa-17_1_6:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.2
	OPENBSD_6_1_BASE:1.1.1.2
	mesa-13_0_6:1.1.1.2
	mesa-13_0_5:1.1.1.2
	mesa-13_0_3:1.1.1.2
	mesa-13_0_2:1.1.1.2
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.11.22.02.42.06;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.42.06;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.12.11.08.31.15;	author jsg;	state Exp;
branches;
next	;
commitid	uuv5VTS15jglEDZU;


desc
@@


1.1
log
@Initial revision
@
text
@import os

Import('*')

env = env.Clone()

env.Append(CPPPATH = [
    '#src/mapi',
    '#src/mesa',
    '.',
])

env.AppendUnique(CPPDEFINES = [
    '_GDI32_', # prevent wgl* being declared __declspec(dllimport)
    'BUILD_GL32', # declare gl* as __declspec(dllexport) in Mesa headers 
    'WIN32_LEAN_AND_MEAN', # http://msdn2.microsoft.com/en-us/library/6dwk3a1z.aspx
])
if not env['gles']:
    # prevent _glapi_* from being declared __declspec(dllimport)
    env.Append(CPPDEFINES = ['_GLAPI_NO_EXPORTS'])

wgl = env.ConvenienceLibrary(
    target ='wgl',
    source = env.ParseSourceList('Makefile.sources', 'C_SOURCES'),
)
Export('wgl')
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 13.0.2
@
text
@d15 1
a15 1
    'BUILD_GL32', # declare gl* as __declspec(dllexport) in Mesa headers
@

