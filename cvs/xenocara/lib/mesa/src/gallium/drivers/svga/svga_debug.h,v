head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.2
	mesa-13_0_6:1.1.1.2
	mesa-13_0_5:1.1.1.2
	mesa-13_0_3:1.1.1.2
	mesa-13_0_2:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.4
	OPENBSD_6_0_BASE:1.1.1.2
	mesa-11_2_2:1.1.1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2015.11.22.02.45.27;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.45.27;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.05.29.10.21.11;	author jsg;	state Exp;
branches;
next	;
commitid	OwGfrJACrYJkCVJ4;


desc
@@


1.1
log
@Initial revision
@
text
@/**********************************************************
 * Copyright 2008-2009 VMware, Inc.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 **********************************************************/

#ifndef SVGA_DEBUG_H
#define SVGA_DEBUG_H

#include "pipe/p_compiler.h"
#include "util/u_debug.h"

#define DEBUG_DMA      0x1
#define DEBUG_TGSI     0x4
#define DEBUG_PIPE     0x8
#define DEBUG_STATE    0x10
#define DEBUG_SCREEN   0x20
#define DEBUG_TEX      0x40
#define DEBUG_SWTNL    0x80
#define DEBUG_CONSTS   0x100
#define DEBUG_VIEWPORT 0x200
#define DEBUG_VIEWS    0x400
#define DEBUG_PERF     0x800    /* print something when we hit any slow path operation */
#define DEBUG_FLUSH    0x1000   /* flush after every draw */
#define DEBUG_SYNC     0x2000   /* sync after every flush */
#define DEBUG_QUERY    0x4000
#define DEBUG_CACHE    0x8000

#ifdef DEBUG
extern int SVGA_DEBUG;
#define DBSTR(x) x
#else
#define SVGA_DEBUG 0
#define DBSTR(x) ""
#endif

static inline void
SVGA_DBG( unsigned flag, const char *fmt, ... )
{
#ifdef DEBUG 
    if (SVGA_DEBUG & flag)
    {
        va_list args;

        va_start( args, fmt );
        debug_vprintf( fmt, args );
        va_end( args );
    }
#else
    (void)flag;
    (void)fmt;
#endif
}


#endif
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 11.2.2
@
text
@d32 15
a46 16
#define DEBUG_DMA          0x1
#define DEBUG_TGSI         0x4
#define DEBUG_PIPE         0x8
#define DEBUG_STATE        0x10
#define DEBUG_SCREEN       0x20
#define DEBUG_TEX          0x40
#define DEBUG_SWTNL        0x80
#define DEBUG_CONSTS       0x100
#define DEBUG_VIEWPORT     0x200
#define DEBUG_VIEWS        0x400
#define DEBUG_PERF         0x800    /* print something when we hit any slow path operation */
#define DEBUG_FLUSH        0x1000   /* flush after every draw */
#define DEBUG_SYNC         0x2000   /* sync after every flush */
#define DEBUG_QUERY        0x4000
#define DEBUG_CACHE        0x8000
#define DEBUG_STREAMOUT    0x10000
@

