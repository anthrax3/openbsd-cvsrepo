head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.3.0.4
	OPENBSD_6_2_BASE:1.1.1.3
	mesa-17_1_6:1.1.1.3
	OPENBSD_6_1:1.1.1.3.0.2
	OPENBSD_6_1_BASE:1.1.1.3
	mesa-13_0_6:1.1.1.3
	mesa-13_0_5:1.1.1.3
	mesa-13_0_3:1.1.1.3
	mesa-13_0_2:1.1.1.3
	OPENBSD_6_0:1.1.1.2.0.4
	OPENBSD_6_0_BASE:1.1.1.2
	mesa-11_2_2:1.1.1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2015.11.22.02.45.28;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.45.28;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.05.29.10.21.12;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.3
date	2016.12.11.08.29.41;	author jsg;	state Exp;
branches;
next	;
commitid	uuv5VTS15jglEDZU;


desc
@@


1.1
log
@Initial revision
@
text
@/**********************************************************
 * Copyright 2008-2009 VMware, Inc.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies
 * of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 **********************************************************/

#ifndef SVGA_DRAW_H
#define SVGA_DRAW_H

#include "pipe/p_compiler.h"

#include "svga_hw_reg.h"

struct svga_hwtnl;
struct svga_winsys_context;
struct svga_screen;
struct svga_context;
struct pipe_resource;

struct svga_hwtnl *
svga_hwtnl_create(struct svga_context *svga);

void svga_hwtnl_destroy( struct svga_hwtnl *hwtnl );

void svga_hwtnl_set_flatshade( struct svga_hwtnl *hwtnl,
                               boolean flatshade,
                               boolean flatshade_first );

void svga_hwtnl_set_unfilled( struct svga_hwtnl *hwtnl,
                              unsigned mode );

void svga_hwtnl_vdecl( struct svga_hwtnl *hwtnl,
                       unsigned i,
                       const SVGA3dVertexDecl *decl,
                       struct pipe_resource *vb);

void svga_hwtnl_reset_vdecl( struct svga_hwtnl *hwtnl,
                             unsigned count );


enum pipe_error 
svga_hwtnl_draw_arrays( struct svga_hwtnl *hwtnl,
                        unsigned prim, 
                        unsigned start, 
                        unsigned count);

enum pipe_error
svga_hwtnl_draw_range_elements( struct svga_hwtnl *hwtnl,
                                struct pipe_resource *indexBuffer,
                                unsigned index_size,
                                int index_bias,
                                unsigned min_index,
                                unsigned max_index,
                                unsigned prim, 
                                unsigned start, 
                                unsigned count );

boolean
svga_hwtnl_is_buffer_referred( struct svga_hwtnl *hwtnl,
                               struct pipe_resource *buffer );

enum pipe_error
svga_hwtnl_flush( struct svga_hwtnl *hwtnl );

void svga_hwtnl_set_index_bias( struct svga_hwtnl *hwtnl,
                                int index_bias);


#endif /* SVGA_DRAW_H_ */
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 11.2.2
@
text
@a37 1
struct u_upload_mgr;
d39 2
a40 1
struct svga_hwtnl *svga_hwtnl_create(struct svga_context *svga);
d42 1
a42 1
void svga_hwtnl_destroy(struct svga_hwtnl *hwtnl);
d44 3
a46 2
void svga_hwtnl_set_flatshade(struct svga_hwtnl *hwtnl,
                              boolean flatshade, boolean flatshade_first);
d48 2
a49 1
void svga_hwtnl_set_fillmode(struct svga_hwtnl *hwtnl, unsigned mode);
d51 4
a54 6
void
svga_hwtnl_vertex_decls(struct svga_hwtnl *hwtnl,
                        unsigned count,
                        const SVGA3dVertexDecl * decls,
                        const unsigned *buffer_indexes,
                        SVGA3dElementLayoutId layoutId);
d56 2
a57 3
void
svga_hwtnl_vertex_buffers(struct svga_hwtnl *hwtnl,
                          unsigned count, struct pipe_vertex_buffer *buffers);
d59 6
a64 4
enum pipe_error
svga_hwtnl_draw_arrays(struct svga_hwtnl *hwtnl,
                       unsigned prim, unsigned start, unsigned count,
                       unsigned start_instance, unsigned instance_count);
d67 9
a75 8
svga_hwtnl_draw_range_elements(struct svga_hwtnl *hwtnl,
                               struct pipe_resource *indexBuffer,
                               unsigned index_size,
                               int index_bias,
                               unsigned min_index,
                               unsigned max_index,
                               unsigned prim, unsigned start, unsigned count,
                               unsigned start_instance, unsigned instance_count);
d78 2
a79 2
svga_hwtnl_is_buffer_referred(struct svga_hwtnl *hwtnl,
                              struct pipe_resource *buffer);
d81 2
a82 1
enum pipe_error svga_hwtnl_flush(struct svga_hwtnl *hwtnl);
d84 2
a85 1
void svga_hwtnl_set_index_bias(struct svga_hwtnl *hwtnl, int index_bias);
@


1.1.1.3
log
@Import Mesa 13.0.2
@
text
@d62 1
a62 1
                       enum pipe_prim_type prim, unsigned start, unsigned count,
d72 1
a72 1
                               enum pipe_prim_type prim, unsigned start, unsigned count,
@


