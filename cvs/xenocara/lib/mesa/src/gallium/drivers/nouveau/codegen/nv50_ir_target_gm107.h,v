head	1.2;
access;
symbols
	mesa-17_1_6:1.1.1.2
	OPENBSD_6_1:1.1.1.1.0.4
	OPENBSD_6_1_BASE:1.1.1.1
	mesa-13_0_6:1.1.1.1
	mesa-13_0_5:1.1.1.1
	mesa-13_0_3:1.1.1.1
	mesa-13_0_2:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2017.08.26.16.59.25;	author jsg;	state Exp;
branches;
next	1.1;
commitid	D0k2io1oY8gcsQ2S;

1.1
date	2015.11.22.02.44.54;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.44.54;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2017.08.14.09.34.47;	author jsg;	state Exp;
branches;
next	;
commitid	enNyoMGkcgwM3Ww6;


desc
@@


1.2
log
@Revert to Mesa 13.0.6 to hopefully address rendering issues a handful of
people have reported with xpdf/fvwm on ivy bridge with modesetting driver.
@
text
@#include "codegen/nv50_ir_target_nvc0.h"

namespace nv50_ir {

class TargetGM107 : public TargetNVC0
{
public:
   TargetGM107(unsigned int chipset) : TargetNVC0(chipset) {}

   virtual CodeEmitter *getCodeEmitter(Program::Type);
   CodeEmitter *createCodeEmitterGM107(Program::Type);

   virtual bool runLegalizePass(Program *, CGStage) const;

   virtual void getBuiltinCode(const uint32_t **, uint32_t *) const;
   virtual uint32_t getBuiltinOffset(int) const;

   virtual bool isOpSupported(operation, DataType) const;
};

} // namespace nv50_ir
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 17.1.6
@
text
@a18 7
   virtual bool isReuseSupported(const Instruction *) const;

   virtual bool isBarrierRequired(const Instruction *) const;

   virtual bool canDualIssue(const Instruction *, const Instruction *) const;
   virtual int getLatency(const Instruction *) const;
   virtual int getReadLatency(const Instruction *) const;
@

