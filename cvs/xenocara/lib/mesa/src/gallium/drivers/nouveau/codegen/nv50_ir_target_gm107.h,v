head	1.1;
branch	1.1.1;
access;
symbols
	mesa-13_0_6:1.1.1.1
	mesa-13_0_5:1.1.1.1
	mesa-13_0_3:1.1.1.1
	mesa-13_0_2:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2015.11.22.02.44.54;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.44.54;	author jsg;	state Exp;
branches;
next	;
commitid	bJUptkbooQfJPk5r;


desc
@@


1.1
log
@Initial revision
@
text
@#include "codegen/nv50_ir_target_nvc0.h"

namespace nv50_ir {

class TargetGM107 : public TargetNVC0
{
public:
   TargetGM107(unsigned int chipset) : TargetNVC0(chipset) {}

   virtual CodeEmitter *getCodeEmitter(Program::Type);
   CodeEmitter *createCodeEmitterGM107(Program::Type);

   virtual bool runLegalizePass(Program *, CGStage) const;

   virtual void getBuiltinCode(const uint32_t **, uint32_t *) const;
   virtual uint32_t getBuiltinOffset(int) const;

   virtual bool isOpSupported(operation, DataType) const;
};

} // namespace nv50_ir
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@
