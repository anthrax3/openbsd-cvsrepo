head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	mesa-17_1_6:1.1.1.3
	OPENBSD_6_1:1.1.1.2.0.2
	OPENBSD_6_1_BASE:1.1.1.2
	mesa-13_0_6:1.1.1.2
	mesa-13_0_5:1.1.1.2
	mesa-13_0_3:1.1.1.2
	mesa-13_0_2:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.4
	OPENBSD_6_0_BASE:1.1.1.2
	mesa-11_2_2:1.1.1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2017.08.26.16.59.28;	author jsg;	state Exp;
branches;
next	1.1;
commitid	D0k2io1oY8gcsQ2S;

1.1
date	2015.11.22.02.44.30;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.44.30;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.05.29.10.20.06;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.3
date	2017.08.14.09.32.08;	author jsg;	state Exp;
branches;
next	;
commitid	enNyoMGkcgwM3Ww6;


desc
@@


1.2
log
@Revert to Mesa 13.0.6 to hopefully address rendering issues a handful of
people have reported with xpdf/fvwm on ivy bridge with modesetting driver.
@
text
@/**************************************************************************
 *
 * Copyright 2008 VMware, Inc.
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
 * IN NO EVENT SHALL VMWARE AND/OR ITS SUPPLIERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/

#ifndef TR_TEXTURE_H_
#define TR_TEXTURE_H_


#include "pipe/p_compiler.h"
#include "pipe/p_state.h"

#include "tr_screen.h"

struct trace_context;


struct tr_list
{
   struct tr_list *next;
   struct tr_list *prev;
};


struct trace_resource
{
   struct pipe_resource base;

   struct pipe_resource *resource;

   struct tr_list list;
};


struct trace_surface
{
   struct pipe_surface base;

   struct pipe_surface *surface;

   struct tr_list list;
};


struct trace_sampler_view
{
   struct pipe_sampler_view base;

   struct pipe_sampler_view *sampler_view;
};


struct trace_transfer
{
   struct pipe_transfer base;

   struct pipe_transfer *transfer;
   struct pipe_context *pipe;

   struct tr_list list;

   void *map;
};


static inline struct trace_resource *
trace_resource(struct pipe_resource *texture)
{
   if (!texture)
      return NULL;
   (void)trace_screen(texture->screen);
   return (struct trace_resource *)texture;
}


static inline struct trace_surface *
trace_surface(struct pipe_surface *surface)
{
   if (!surface)
      return NULL;
   (void)trace_resource(surface->texture);
   return (struct trace_surface *)surface;
}


static inline struct trace_sampler_view *
trace_sampler_view(struct pipe_sampler_view *sampler_view)
{
   if (!sampler_view)
      return NULL;
   return (struct trace_sampler_view *)sampler_view;
}


static inline struct trace_transfer *
trace_transfer(struct pipe_transfer *transfer)
{
   if (!transfer)
      return NULL;
   (void)trace_resource(transfer->resource);
   return (struct trace_transfer *)transfer;
}


struct pipe_resource *
trace_resource_create(struct trace_screen *tr_scr,
                     struct pipe_resource *texture);

void
trace_resource_destroy(struct trace_screen *tr_scr,
		       struct trace_resource *tr_res);

struct pipe_surface *
trace_surf_create(struct trace_context *tr_ctx,
                  struct trace_resource *tr_res,
                  struct pipe_surface *surface);

void
trace_surf_destroy(struct trace_surface *tr_surf);

struct pipe_transfer *
trace_transfer_create(struct trace_context *tr_ctx,
		      struct trace_resource *tr_res,
		      struct pipe_transfer *transfer);

void
trace_transfer_destroy(struct trace_context *tr_ctx,
                       struct trace_transfer *tr_trans);


#endif /* TR_TEXTURE_H_ */
@


1.1
log
@Initial revision
@
text
@d91 1
a91 1
   if(!texture)
d101 1
a101 1
   if(!surface)
d120 1
a120 1
   if(!transfer)
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 11.2.2
@
text
@d91 1
a91 1
   if (!texture)
d101 1
a101 1
   if (!surface)
d120 1
a120 1
   if (!transfer)
@


1.1.1.3
log
@Import Mesa 17.1.6
@
text
@d46 11
d88 10
d103 1
d122 1
d127 8
d137 1
a137 1
                  struct pipe_resource *tr_res,
d145 1
a145 1
		      struct pipe_resource *tr_res,
@


