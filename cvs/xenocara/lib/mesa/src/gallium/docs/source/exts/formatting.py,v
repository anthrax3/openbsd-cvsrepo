head	1.1;
branch	1.1.1;
access;
symbols
	mesa-13_0_6:1.1.1.1
	mesa-13_0_5:1.1.1.1
	mesa-13_0_3:1.1.1.1
	mesa-13_0_2:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.11.22.02.43.26;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.43.26;	author jsg;	state Exp;
branches;
next	;
commitid	bJUptkbooQfJPk5r;


desc
@@


1.1
log
@Initial revision
@
text
@# formatting.py
# Sphinx extension providing formatting for Gallium-specific data
# (c) Corbin Simpson 2010
# Public domain to the extent permitted; contact author for special licensing

import docutils.nodes
import sphinx.addnodes

def parse_envvar(env, sig, signode):
    envvar, t, default = sig.split(" ", 2)
    envvar = envvar.strip().upper()
    t = " Type: %s" % t.strip(" <>").lower()
    default = " Default: %s" % default.strip(" ()")
    signode += sphinx.addnodes.desc_name(envvar, envvar)
    signode += sphinx.addnodes.desc_type(t, t)
    signode += sphinx.addnodes.desc_annotation(default, default)
    return envvar

def parse_opcode(env, sig, signode):
    opcode, desc = sig.split("-", 1)
    opcode = opcode.strip().upper()
    desc = " (%s)" % desc.strip()
    signode += sphinx.addnodes.desc_name(opcode, opcode)
    signode += sphinx.addnodes.desc_annotation(desc, desc)
    return opcode

def setup(app):
    app.add_description_unit("envvar", "envvar", "%s (environment variable)",
        parse_envvar)
    app.add_description_unit("opcode", "opcode", "%s (TGSI opcode)",
        parse_opcode)
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@
