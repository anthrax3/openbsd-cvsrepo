head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	mesa-17_1_6:1.1.1.2
	OPENBSD_6_1:1.1.1.1.0.2
	OPENBSD_6_1_BASE:1.1.1.1
	mesa-13_0_6:1.1.1.1
	mesa-13_0_5:1.1.1.1
	mesa-13_0_3:1.1.1.1
	mesa-13_0_2:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.2
date	2017.08.26.16.59.23;	author jsg;	state Exp;
branches;
next	1.1;
commitid	D0k2io1oY8gcsQ2S;

1.1
date	2016.12.11.08.30.37;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	uuv5VTS15jglEDZU;

1.1.1.1
date	2016.12.11.08.30.37;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	uuv5VTS15jglEDZU;

1.1.1.2
date	2017.08.14.09.35.16;	author jsg;	state Exp;
branches;
next	;
commitid	enNyoMGkcgwM3Ww6;


desc
@@


1.2
log
@Revert to Mesa 13.0.6 to hopefully address rendering issues a handful of
people have reported with xpdf/fvwm on ivy bridge with modesetting driver.
@
text
@Usage
=====

Requirements
^^^^^^^^^^^^

* An x86 processor with AVX or AVX2
* LLVM version 3.6 or later

Building
^^^^^^^^

To build with GNU automake, select building the swr driver at
configure time, for example: ::

  configure --with-gallium-drivers=swrast,swr

Using
^^^^^

On Linux, building will create a drop-in alternative for libGL.so into::

  lib/gallium/libGL.so

or::

  build/foo/gallium/targets/libgl-xlib/libGL.so

To use it set the LD_LIBRARY_PATH environment variable accordingly.

**IMPORTANT:** Mesa will default to using llvmpipe or softpipe as the default software renderer.  To select the OpenSWR driver, set the GALLIUM_DRIVER environment variable appropriately: ::

  GALLIUM_DRIVER=swr

To verify OpenSWR is being used, check to see if a message like the following is printed when the application is started: ::

  SWR detected AVX2

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import Mesa 13.0.2
@
text
@@


1.1.1.2
log
@Import Mesa 17.1.6
@
text
@d7 2
a8 3
* An x86 processor with AVX or above
* LLVM version 3.9 or later
* C++14 capable compiler
d21 1
a21 2
On Linux, building with autotools will create a drop-in alternative
for libGL.so into::
a23 2
  lib/gallium/libswrAVX.so
  lib/gallium/libswrAVX2.so
d25 1
a25 1
Alternatively, building with SCons will produce::
d27 1
a27 3
  build/linux-x86_64/gallium/targets/libgl-xlib/libGL.so
  build/linux-x86_64/gallium/drivers/swr/libswrAVX.so
  build/linux-x86_64/gallium/drivers/swr/libswrAVX2.so
@

