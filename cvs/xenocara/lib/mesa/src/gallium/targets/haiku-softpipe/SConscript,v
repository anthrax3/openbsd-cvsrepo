head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.3.0.4
	OPENBSD_6_2_BASE:1.1.1.3
	mesa-17_1_6:1.1.1.3
	OPENBSD_6_1:1.1.1.3.0.2
	OPENBSD_6_1_BASE:1.1.1.3
	mesa-13_0_6:1.1.1.3
	mesa-13_0_5:1.1.1.3
	mesa-13_0_3:1.1.1.3
	mesa-13_0_2:1.1.1.3
	OPENBSD_6_0:1.1.1.2.0.4
	OPENBSD_6_0_BASE:1.1.1.2
	mesa-11_2_2:1.1.1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.11.22.02.45.39;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.45.39;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.05.29.10.21.29;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.3
date	2016.12.11.08.30.46;	author jsg;	state Exp;
branches;
next	;
commitid	uuv5VTS15jglEDZU;


desc
@@


1.1
log
@Initial revision
@
text
@Import('*')

env.Prepend(LIBS = [
    ws_haiku,
    st_haiku,
    trace,
    rbug,
    mesautil,
    mesa,
    glsl,
    gallium
])

if True:
    env.Append(CPPDEFINES = [
        'GALLIUM_SOFTPIPE',
        'GALLIUM_RBUG',
        'GALLIUM_TRACE',
    ])
    env.Prepend(LIBS = [softpipe])

env.Prepend(LIBS = [libgl])

env.Append(CPPPATH = [
    '#/src/mapi',
    '#/src/mesa',
    '#/src/mesa/main',
    '#/include/HaikuGL',
    '#/src/gallium/winsys',
    '#/src/gallium/state_trackers/hgl',
    '/boot/system/develop/headers/private',
])

if env['llvm']:
    env.Append(CPPDEFINES = ['GALLIUM_LLVMPIPE'])
    env.Prepend(LIBS = [llvmpipe])

softpipe_sources = [
    'GalliumContext.cpp',
    'SoftwareRenderer.cpp'
]

# libswpipe gets turned into "Softpipe" by the haiku package system
module = env.LoadableModule(
    target ='swpipe',
    source = softpipe_sources,
)

@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 11.2.2
@
text
@a8 1
    compiler,
@


1.1.1.3
log
@Import Mesa 13.0.2
@
text
@a11 1
    nir,
@


