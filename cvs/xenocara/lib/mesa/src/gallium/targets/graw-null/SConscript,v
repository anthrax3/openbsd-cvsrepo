head	1.1;
branch	1.1.1;
access;
symbols
	mesa-13_0_6:1.1.1.1
	mesa-13_0_5:1.1.1.1
	mesa-13_0_3:1.1.1.1
	mesa-13_0_2:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.11.22.02.45.39;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.45.39;	author jsg;	state Exp;
branches;
next	;
commitid	bJUptkbooQfJPk5r;


desc
@@


1.1
log
@Initial revision
@
text
@#######################################################################
# SConscript for xlib winsys

Import('*')

env = env.Clone()

graw_util = env.SharedObject(
    source = ['graw_util.c'],
)

env = env.Clone()

sources = [
    'graw_null.c',
    graw_util,
]

env.Prepend(LIBS = [mesautil, gallium])

# TODO: write a wrapper function http://www.scons.org/wiki/WrapperFunctions
graw = env.SharedLibrary(
    target = 'graw',
    source = sources,
)

if env['platform'] == 'windows':
    graw = env.FindIxes(graw, 'LIBPREFIX', 'LIBSUFFIX')
else:
    graw = env.FindIxes(graw, 'SHLIBPREFIX', 'SHLIBSUFFIX')

Export('graw_util', 'graw')
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@
