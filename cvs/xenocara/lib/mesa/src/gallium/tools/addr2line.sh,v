head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1:1.1.1.1.0.4
	OPENBSD_6_1_BASE:1.1.1.1
	mesa-13_0_6:1.1.1.1
	mesa-13_0_5:1.1.1.1
	mesa-13_0_3:1.1.1.1
	mesa-13_0_2:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.11.22.02.41.38;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.41.38;	author jsg;	state Exp;
branches;
next	;
commitid	bJUptkbooQfJPk5r;


desc
@@


1.1
log
@Initial revision
@
text
@#!/bin/bash
# This script processes symbols output by Gallium using glibc to human-readable function names

lastbin=
i=-1
dir="$(mktemp -d)"
input="$1"

# Gather all unique addresses for each binary
sed -nre 's|([^ ]*/[^ ]*)\(\+0x([^)]*).*|\1 \2|p' "$input"|sort|uniq|while read bin addr; do
	if test "$lastbin" != "$bin"; then
		((++i))
		lastbin="$bin"
		echo "$bin" > "$dir/$i.addrs.bin"
	fi
	echo "$addr" >> "$dir/$i.addrs"
done

# Construct a sed script to convert hex address to human readable form, and apply it
for i in "$dir"/*.addrs; do
	bin="$(<"$i.bin")"
	addr2line -p -e "$bin" -a -f < "$i"|sed -nre 's@@^0x0*([^:]*): ([^?]*)$@@s|'"$bin"'(+0x\1)|\2|g@@gp'
	rm -f "$i" "$i.bin"
done|sed -f - "$input"

rmdir "$dir"
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@
