head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.2
	OPENBSD_6_2_BASE:1.2
	mesa-17_1_6:1.1.1.3
	OPENBSD_6_1:1.1.1.2.0.2
	OPENBSD_6_1_BASE:1.1.1.2
	mesa-13_0_6:1.1.1.2
	mesa-13_0_5:1.1.1.2
	mesa-13_0_3:1.1.1.2
	mesa-13_0_2:1.1.1.2
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;
expand	@o@;


1.2
date	2017.08.26.16.59.40;	author jsg;	state Exp;
branches;
next	1.1;
commitid	D0k2io1oY8gcsQ2S;

1.1
date	2016.05.29.10.16.15;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.1
date	2016.05.29.10.16.15;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.2
date	2016.12.11.08.34.19;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	uuv5VTS15jglEDZU;

1.1.1.3
date	2017.08.14.09.39.06;	author jsg;	state Exp;
branches;
next	;
commitid	enNyoMGkcgwM3Ww6;


desc
@@


1.2
log
@Revert to Mesa 13.0.6 to hopefully address rendering issues a handful of
people have reported with xpdf/fvwm on ivy bridge with modesetting driver.
@
text
@/* Copyright Â© 2014 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef SHA1_H
#define SHA1_H

#include <stdlib.h>

#ifdef __cplusplus
extern "C" {
#endif

struct mesa_sha1;

struct mesa_sha1 *
_mesa_sha1_init(void);

int
_mesa_sha1_update(struct mesa_sha1 *ctx, const void *data, int size);

int
_mesa_sha1_final(struct mesa_sha1 *ctx, unsigned char result[20]);

char *
_mesa_sha1_format(char *buf, const unsigned char *sha1);

void
_mesa_sha1_compute(const void *data, size_t size, unsigned char result[20]);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
@


1.1
log
@Initial revision
@
text
@d26 2
a30 2

#include <stdlib.h>
@


1.1.1.1
log
@Import Mesa 11.2.2
@
text
@@


1.1.1.2
log
@Import Mesa 13.0.2
@
text
@a25 2
#include <stdlib.h>

d29 2
@


1.1.1.3
log
@Import Mesa 17.1.6
@
text
@d23 2
a24 2
#ifndef MESA_SHA1_H
#define MESA_SHA1_H
a26 2
#include "c99_compat.h"
#include "sha1/sha1.h"
d32 1
a32 1
#define mesa_sha1 _SHA1_CTX
d34 2
a35 17
static inline void
_mesa_sha1_init(struct mesa_sha1 *ctx)
{
   SHA1Init(ctx);
}

static inline void
_mesa_sha1_update(struct mesa_sha1 *ctx, const void *data, size_t size)
{
   SHA1Update(ctx, (const unsigned char *)data, size);
}

static inline void
_mesa_sha1_final(struct mesa_sha1 *ctx, unsigned char result[20])
{
   SHA1Final(result, ctx);
}
d37 7
a43 1
void
@


