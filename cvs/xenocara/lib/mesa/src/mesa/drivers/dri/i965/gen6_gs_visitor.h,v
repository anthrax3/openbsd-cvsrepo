head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.1.1.2.0.2
	OPENBSD_6_1_BASE:1.1.1.2
	mesa-13_0_6:1.1.1.2
	mesa-13_0_5:1.1.1.2
	mesa-13_0_3:1.1.1.2
	mesa-13_0_2:1.1.1.2
	OPENBSD_6_0:1.1.1.2.0.4
	OPENBSD_6_0_BASE:1.1.1.2
	mesa-11_2_2:1.1.1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2017.08.26.16.59.37;	author jsg;	state Exp;
branches;
next	1.2;
commitid	D0k2io1oY8gcsQ2S;

1.2
date	2017.08.14.09.58.01;	author jsg;	state dead;
branches;
next	1.1;
commitid	bC4bLqwWTo4kLw82;

1.1
date	2015.11.22.02.39.51;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.39.51;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.05.29.10.15.07;	author jsg;	state Exp;
branches;
next	;
commitid	OwGfrJACrYJkCVJ4;


desc
@@


1.3
log
@Revert to Mesa 13.0.6 to hopefully address rendering issues a handful of
people have reported with xpdf/fvwm on ivy bridge with modesetting driver.
@
text
@/*
 * Copyright Â© 2014 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 */

#ifndef GEN6_GS_VISITOR_H
#define GEN6_GS_VISITOR_H

#include "brw_vec4.h"
#include "brw_vec4_gs_visitor.h"

#ifdef __cplusplus

namespace brw {

class gen6_gs_visitor : public vec4_gs_visitor
{
public:
   gen6_gs_visitor(const struct brw_compiler *comp,
                   void *log_data,
                   struct brw_gs_compile *c,
                   struct brw_gs_prog_data *prog_data,
                   struct gl_shader_program *prog,
                   const nir_shader *shader,
                   void *mem_ctx,
                   bool no_spills,
                   int shader_time_index) :
      vec4_gs_visitor(comp, log_data, c, prog_data, shader, mem_ctx, no_spills,
                      shader_time_index),
      shader_prog(prog)
      {
      }

protected:
   virtual void emit_prolog();
   virtual void emit_thread_end();
   virtual void gs_emit_vertex(int stream_id);
   virtual void gs_end_primitive();
   virtual void emit_urb_write_header(int mrf);
   virtual void emit_urb_write_opcode(bool complete,
                                      int base_mrf,
                                      int last_mrf,
                                      int urb_offset);
   virtual void setup_payload();

private:
   void xfb_write();
   void xfb_program(unsigned vertex, unsigned num_verts);
   void xfb_setup();
   int get_vertex_output_offset_for_varying(int vertex, int varying);

   const struct gl_shader_program *shader_prog;

   src_reg vertex_output;
   src_reg vertex_output_offset;
   src_reg temp;
   src_reg first_vertex;
   src_reg prim_count;
   src_reg primitive_id;

   /* Transform Feedback members */
   src_reg sol_prim_written;
   src_reg svbi;
   src_reg max_svbi;
   src_reg destination_indices;
};

} /* namespace brw */

#endif /* __cplusplus */

#endif /* GEN6_GS_VISITOR_H */
@


1.2
log
@Merge Mesa 17.1.6
@
text
@d41 1
d43 1
d47 5
a51 2
      vec4_gs_visitor(comp, log_data, c, prog, mem_ctx, no_spills,
                      shader_time_index) {}
a53 1
   virtual void assign_binding_table_offsets();
a55 2
   virtual void visit(ir_emit_vertex *);
   virtual void visit(ir_end_primitive *);
d70 2
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 11.2.2
@
text
@a40 1
                   struct brw_gs_prog_data *prog_data,
a41 1
                   const nir_shader *shader,
d45 2
a46 5
      vec4_gs_visitor(comp, log_data, c, prog_data, shader, mem_ctx, no_spills,
                      shader_time_index),
      shader_prog(prog)
      {
      }
d49 1
d52 2
a67 2

   const struct gl_shader_program *shader_prog;
@

