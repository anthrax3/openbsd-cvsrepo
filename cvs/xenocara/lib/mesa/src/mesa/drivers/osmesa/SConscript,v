head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_1_BASE:1.1.1.1
	mesa-13_0_6:1.1.1.1
	mesa-13_0_5:1.1.1.1
	mesa-13_0_3:1.1.1.1
	mesa-13_0_2:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2016.12.11.08.36.20;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	uuv5VTS15jglEDZU;

1.1.1.1
date	2016.12.11.08.36.20;	author jsg;	state Exp;
branches;
next	;
commitid	uuv5VTS15jglEDZU;


desc
@@


1.1
log
@Initial revision
@
text
@Import('*')

env = env.Clone()

env.Prepend(CPPPATH = [
    '#src',
    '#src/mapi',
    '#src/mesa',
    Dir('../../../mapi'), # src/mapi build path for python-generated GL API files/headers
])

env.Prepend(LIBS = [
    mesautil,
    glapi,
    compiler,
    mesa,
    glsl,
])

sources = [
    'osmesa.c',
]

if env['platform'] == 'windows':
    env.AppendUnique(CPPDEFINES = [
        '_GDI32_', # prevent wgl* being declared __declspec(dllimport)
        'BUILD_GL32', # declare gl* as __declspec(dllexport) in Mesa headers
    ])
    if not env['gles']:
        # prevent _glapi_* from being declared __declspec(dllimport)
        env.Append(CPPDEFINES = ['_GLAPI_NO_EXPORTS'])

    sources += ['osmesa.def']

osmesa = env.SharedLibrary(
    target ='osmesa',
    source = sources,
)

env.Alias('osmesa', osmesa)
@


1.1.1.1
log
@Import Mesa 13.0.2
@
text
@@
