head	1.1;
branch	1.1.1;
access;
symbols
	mesa-17_1_6:1.1.1.3
	OPENBSD_6_1:1.1.1.2.0.2
	OPENBSD_6_1_BASE:1.1.1.2
	mesa-13_0_6:1.1.1.2
	mesa-13_0_5:1.1.1.2
	mesa-13_0_3:1.1.1.2
	mesa-13_0_2:1.1.1.2
	OPENBSD_6_0:1.1.1.1.0.6
	OPENBSD_6_0_BASE:1.1.1.1
	mesa-11_2_2:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2015.11.22.02.38.23;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.38.23;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.12.11.08.39.25;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	uuv5VTS15jglEDZU;

1.1.1.3
date	2017.08.14.09.45.06;	author jsg;	state Exp;
branches;
next	;
commitid	enNyoMGkcgwM3Ww6;


desc
@@


1.1
log
@Initial revision
@
text
@/*
 * Mesa 3-D graphics library
 *
 * Copyright (C) 1999-2007  Brian Paul   All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */


#ifndef PROG_PRINT_H
#define PROG_PRINT_H

#include <stdio.h>

#include "main/glheader.h"
#include "main/mtypes.h"


#ifdef __cplusplus
extern "C" {
#endif


struct gl_program;
struct gl_program_parameter_list;
struct gl_shader;
struct prog_instruction;


/**
 * The output style to use when printing programs.
 */
typedef enum {
   PROG_PRINT_ARB,
   PROG_PRINT_DEBUG
} gl_prog_print_mode;


extern const char *
_mesa_register_file_name(gl_register_file f);

extern void
_mesa_print_vp_inputs(GLbitfield inputs);

extern void
_mesa_print_fp_inputs(GLbitfield inputs);

extern const char *
_mesa_condcode_string(GLuint condcode);

extern const char *
_mesa_swizzle_string(GLuint swizzle, GLuint negateBase, GLboolean extended);

const char *
_mesa_writemask_string(GLuint writeMask);

extern void
_mesa_print_swizzle(GLuint swizzle);

extern void
_mesa_fprint_alu_instruction(FILE *f,
			     const struct prog_instruction *inst,
			     const char *opcode_string, GLuint numRegs,
			     gl_prog_print_mode mode,
			     const struct gl_program *prog);

extern void
_mesa_print_alu_instruction(const struct prog_instruction *inst,
                            const char *opcode_string, GLuint numRegs);

extern void
_mesa_print_instruction(const struct prog_instruction *inst);

extern GLint
_mesa_fprint_instruction_opt(FILE *f,
                            const struct prog_instruction *inst,
                            GLint indent,
                            gl_prog_print_mode mode,
                            const struct gl_program *prog);

extern GLint
_mesa_print_instruction_opt(const struct prog_instruction *inst, GLint indent,
                            gl_prog_print_mode mode,
                            const struct gl_program *prog);

extern void
_mesa_print_program(const struct gl_program *prog);

extern void
_mesa_fprint_program_opt(FILE *f,
                         const struct gl_program *prog, gl_prog_print_mode mode,
                         GLboolean lineNumbers);

extern void
_mesa_print_program_parameters(struct gl_context *ctx, const struct gl_program *prog);

extern void
_mesa_print_parameter_list(const struct gl_program_parameter_list *list);


extern void
_mesa_write_shader_to_file(const struct gl_shader *shader);

extern void
_mesa_append_uniforms_to_file(const struct gl_shader *shader);


#ifdef __cplusplus
}
#endif


#endif /* PROG_PRINT_H */
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 13.0.2
@
text
@d121 1
a121 1
_mesa_append_uniforms_to_file(const struct gl_linked_shader *shader);
@


1.1.1.3
log
@Import Mesa 17.1.6
@
text
@d121 1
a121 1
_mesa_append_uniforms_to_file(const struct gl_program *prog);
@


