head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.2
	OPENBSD_6_2_BASE:1.11
	mesa-17_1_6:1.1.1.7
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8
	mesa-13_0_6:1.1.1.6
	mesa-13_0_5:1.1.1.5
	mesa-13_0_3:1.1.1.4
	mesa-13_0_2:1.1.1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	mesa-11_2_2:1.1.1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	mesa-11_0_9:1.1.1.2
	mesa-11_0_8:1.1.1.2
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2017.08.26.16.59.21;	author jsg;	state Exp;
branches;
next	1.10;
commitid	D0k2io1oY8gcsQ2S;

1.10
date	2017.08.14.11.21.30;	author jsg;	state Exp;
branches;
next	1.9;
commitid	kdxRPpW1FksuPtkT;

1.9
date	2017.08.14.09.57.57;	author jsg;	state Exp;
branches;
next	1.8;
commitid	bC4bLqwWTo4kLw82;

1.8
date	2017.03.25.00.29.28;	author jsg;	state Exp;
branches;
next	1.7;
commitid	QSdv68ga2IQWi5M4;

1.7
date	2017.02.26.12.28.56;	author jsg;	state Exp;
branches;
next	1.6;
commitid	SR30X8g3mP0BzNJQ;

1.6
date	2016.12.11.08.53.19;	author jsg;	state Exp;
branches;
next	1.5;
commitid	96stMNxtiPBiO554;

1.5
date	2016.10.11.22.15.44;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	i6XBjNSBBv2WDTWp;

1.4
date	2016.05.29.10.40.20;	author jsg;	state Exp;
branches;
next	1.3;
commitid	lFAjX4nNEOTq8hSb;

1.3
date	2015.12.23.13.43.05;	author jsg;	state Exp;
branches;
next	1.2;
commitid	spc6dDx4uaOXaO5x;

1.2
date	2015.11.22.07.14.30;	author jsg;	state Exp;
branches;
next	1.1;
commitid	u9eqebM6S2PMaRfh;

1.1
date	2015.11.22.02.40.50;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.40.50;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2015.12.23.13.22.52;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	bCnCUEGWDw3j16Q3;

1.1.1.3
date	2016.05.29.10.16.09;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.4
date	2016.12.11.08.32.44;	author jsg;	state Exp;
branches;
next	1.1.1.5;
commitid	uuv5VTS15jglEDZU;

1.1.1.5
date	2017.02.26.12.13.15;	author jsg;	state Exp;
branches;
next	1.1.1.6;
commitid	xZcdklZavddTKAf1;

1.1.1.6
date	2017.03.25.00.12.17;	author jsg;	state Exp;
branches;
next	1.1.1.7;
commitid	YgkKuQ9hssScckR1;

1.1.1.7
date	2017.08.14.09.37.23;	author jsg;	state Exp;
branches;
next	;
commitid	enNyoMGkcgwM3Ww6;


desc
@@


1.11
log
@Revert to Mesa 13.0.6 to hopefully address rendering issues a handful of
people have reported with xpdf/fvwm on ivy bridge with modesetting driver.
@
text
@# Makefile.in generated by automake 1.12.6 from Makefile.am.
# @@configure_input@@

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@@SET_MAKE@@

# Copyright Â© 2012 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# Provide compatibility with scripts for the old Mesa build system for
# a while by putting a link to the driver into /lib of the build tree.



VPATH = @@srcdir@@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @@echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@@PACKAGE@@
pkgincludedir = $(includedir)/@@PACKAGE@@
pkglibdir = $(libdir)/@@PACKAGE@@
pkglibexecdir = $(libexecdir)/@@PACKAGE@@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @@build@@
host_triplet = @@host@@
target_triplet = @@target@@
DIST_COMMON = $(egl_HEADERS) $(khr_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.sources \
	$(top_srcdir)/bin/depcomp $(top_srcdir)/install-lib-links.mk
@@HAVE_PLATFORM_X11_TRUE@@am__append_1 = -DHAVE_X11_PLATFORM \
@@HAVE_PLATFORM_X11_TRUE@@	$(XCB_DRI2_CFLAGS)
@@HAVE_PLATFORM_X11_TRUE@@am__append_2 = $(XCB_DRI2_LIBS)
@@HAVE_PLATFORM_X11_TRUE@@am__append_3 = drivers/dri2/platform_x11.c
@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@am__append_4 = \
@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@	drivers/dri2/platform_x11_dri3.c \
@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@	drivers/dri2/platform_x11_dri3.h

@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@am__append_5 = $(top_builddir)/src/loader/libloader_dri3_helper.la
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__append_6 = -DHAVE_WAYLAND_PLATFORM \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(WAYLAND_CFLAGS)
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__append_7 = $(WAYLAND_LIBS) \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(LIBDRM_LIBS) \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(top_builddir)/src/egl/wayland/wayland-drm/libwayland-drm.la
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__append_8 = drivers/dri2/platform_wayland.c
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_9 = -DHAVE_DRM_PLATFORM
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_10 = $(top_builddir)/src/gbm/libgbm.la
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_11 = drivers/dri2/platform_drm.c
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__append_12 = -DHAVE_SURFACELESS_PLATFORM
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__append_13 = drivers/dri2/platform_surfaceless.c
@@HAVE_EGL_PLATFORM_ANDROID_TRUE@@am__append_14 = -DHAVE_ANDROID_PLATFORM
@@HAVE_EGL_PLATFORM_ANDROID_TRUE@@am__append_15 = drivers/dri2/platform_android.c
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_16 = \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/loader \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/egl/drivers/dri2 \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/gbm/backends/dri \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/egl/wayland/wayland-egl \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_builddir)/src/egl/wayland/wayland-drm \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/egl/wayland/wayland-drm \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-DDEFAULT_DRIVER_DIR=\"$(DRI_DRIVER_SEARCH_DIR)\" \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-D_EGL_BUILT_IN_DRIVER_DRI2

@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_17 = \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(dri2_backend_core_FILES) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(dri2_backend_FILES) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(dri3_backend_FILES)

@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_18 = $(top_builddir)/src/loader/libloader.la \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(DLOPEN_LIBS) $(LIBDRM_LIBS) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(CLOCK_LIB)
subdir = src/egl
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_gnu_make.m4 \
	$(top_srcdir)/m4/ax_check_python_mako_module.m4 \
	$(top_srcdir)/m4/ax_gcc_builtin.m4 \
	$(top_srcdir)/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/m4/ax_prog_bison.m4 \
	$(top_srcdir)/m4/ax_prog_flex.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/VERSION $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(egldir)" "$(DESTDIR)$(khrdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
@@HAVE_PLATFORM_X11_TRUE@@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__DEPENDENCIES_3 =  \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(top_builddir)/src/egl/wayland/wayland-drm/libwayland-drm.la
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__DEPENDENCIES_4 = $(top_builddir)/src/loader/libloader.la \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__DEPENDENCIES_1)
libEGL_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__append_5) $(am__DEPENDENCIES_3) $(am__append_10) \
	$(am__DEPENDENCIES_4)
am__libEGL_la_SOURCES_DIST = main/eglapi.c main/eglapi.h \
	main/eglarray.c main/eglarray.h main/eglcompiler.h \
	main/eglconfig.c main/eglconfig.h main/eglcontext.c \
	main/eglcontext.h main/eglcurrent.c main/eglcurrent.h \
	main/egldefines.h main/egldisplay.c main/egldisplay.h \
	main/egldriver.c main/egldriver.h main/eglfallbacks.c \
	main/eglglobals.c main/eglglobals.h main/eglimage.c \
	main/eglimage.h main/egllog.c main/egllog.h main/eglsurface.c \
	main/eglsurface.h main/eglsync.c main/eglsync.h \
	main/egltypedefs.h drivers/dri2/egl_dri2.c \
	drivers/dri2/egl_dri2.h drivers/dri2/egl_dri2_fallbacks.h \
	drivers/dri2/platform_x11.c drivers/dri2/platform_wayland.c \
	drivers/dri2/platform_drm.c \
	drivers/dri2/platform_surfaceless.c \
	drivers/dri2/platform_android.c \
	drivers/dri2/platform_x11_dri3.c \
	drivers/dri2/platform_x11_dri3.h
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = main/eglapi.lo main/eglarray.lo main/eglconfig.lo \
	main/eglcontext.lo main/eglcurrent.lo main/egldisplay.lo \
	main/egldriver.lo main/eglfallbacks.lo main/eglglobals.lo \
	main/eglimage.lo main/egllog.lo main/eglsurface.lo \
	main/eglsync.lo
am__objects_2 = drivers/dri2/egl_dri2.lo
@@HAVE_PLATFORM_X11_TRUE@@am__objects_3 = drivers/dri2/platform_x11.lo
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__objects_4 =  \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	drivers/dri2/platform_wayland.lo
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__objects_5 =  \
@@HAVE_EGL_PLATFORM_DRM_TRUE@@	drivers/dri2/platform_drm.lo
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__objects_6 = drivers/dri2/platform_surfaceless.lo
@@HAVE_EGL_PLATFORM_ANDROID_TRUE@@am__objects_7 = drivers/dri2/platform_android.lo
am__objects_8 = $(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7)
@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@am__objects_9 = drivers/dri2/platform_x11_dri3.lo
am__objects_10 = $(am__objects_9)
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__objects_11 = $(am__objects_2) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__objects_8) $(am__objects_10)
am_libEGL_la_OBJECTS = $(am__objects_1) $(am__objects_11)
libEGL_la_OBJECTS = $(am_libEGL_la_OBJECTS)
AM_V_lt = $(am__v_lt_@@AM_V@@)
am__v_lt_ = $(am__v_lt_@@AM_DEFAULT_V@@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libEGL_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libEGL_la_LDFLAGS) $(LDFLAGS) -o $@@
AM_V_P = $(am__v_P_@@AM_V@@)
am__v_P_ = $(am__v_P_@@AM_DEFAULT_V@@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@@AM_V@@)
am__v_GEN_ = $(am__v_GEN_@@AM_DEFAULT_V@@)
am__v_GEN_0 = @@echo "  GEN     " $@@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@@AM_V@@)
am__v_at_ = $(am__v_at_@@AM_DEFAULT_V@@)
am__v_at_0 = @@
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@@am__isrc@@
depcomp = $(SHELL) $(top_srcdir)/bin/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@@AM_V@@)
am__v_CC_ = $(am__v_CC_@@AM_DEFAULT_V@@)
am__v_CC_0 = @@echo "  CC      " $@@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@@
AM_V_CCLD = $(am__v_CCLD_@@AM_V@@)
am__v_CCLD_ = $(am__v_CCLD_@@AM_DEFAULT_V@@)
am__v_CCLD_0 = @@echo "  CCLD    " $@@;
am__v_CCLD_1 = 
SOURCES = $(libEGL_la_SOURCES)
DIST_SOURCES = $(am__libEGL_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(egl_HEADERS) $(khr_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = $(am__tty_colors_dummy)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @@ACLOCAL@@
AMDGPU_CFLAGS = @@AMDGPU_CFLAGS@@
AMDGPU_LIBS = @@AMDGPU_LIBS@@
AMTAR = @@AMTAR@@
AM_DEFAULT_VERBOSITY = @@AM_DEFAULT_VERBOSITY@@
AR = @@AR@@
AUTOCONF = @@AUTOCONF@@
AUTOHEADER = @@AUTOHEADER@@
AUTOMAKE = @@AUTOMAKE@@
AWK = @@AWK@@
BSYMBOLIC = @@BSYMBOLIC@@
CC = @@CC@@
CCAS = @@CCAS@@
CCASDEPMODE = @@CCASDEPMODE@@
CCASFLAGS = @@CCASFLAGS@@
CCDEPMODE = @@CCDEPMODE@@
CFLAGS = @@CFLAGS@@
CLANG_RESOURCE_DIR = @@CLANG_RESOURCE_DIR@@
CLOCK_LIB = @@CLOCK_LIB@@
CLOVER_STD_OVERRIDE = @@CLOVER_STD_OVERRIDE@@
CPP = @@CPP@@
CPPFLAGS = @@CPPFLAGS@@
CXX = @@CXX@@
CXXCPP = @@CXXCPP@@
CXXDEPMODE = @@CXXDEPMODE@@
CXXFLAGS = @@CXXFLAGS@@
CYGPATH_W = @@CYGPATH_W@@
D3D_DRIVER_INSTALL_DIR = @@D3D_DRIVER_INSTALL_DIR@@
DEFINES = @@DEFINES@@
DEFS = @@DEFS@@
DEPDIR = @@DEPDIR@@
DLLTOOL = @@DLLTOOL@@
DLOPEN_LIBS = @@DLOPEN_LIBS@@
DRI2PROTO_CFLAGS = @@DRI2PROTO_CFLAGS@@
DRI2PROTO_LIBS = @@DRI2PROTO_LIBS@@
DRI3PROTO_CFLAGS = @@DRI3PROTO_CFLAGS@@
DRI3PROTO_LIBS = @@DRI3PROTO_LIBS@@
DRIGL_CFLAGS = @@DRIGL_CFLAGS@@
DRIGL_LIBS = @@DRIGL_LIBS@@
DRI_DRIVER_INSTALL_DIR = @@DRI_DRIVER_INSTALL_DIR@@
DRI_DRIVER_SEARCH_DIR = @@DRI_DRIVER_SEARCH_DIR@@
DRI_LIB_DEPS = @@DRI_LIB_DEPS@@
DRI_PC_REQ_PRIV = @@DRI_PC_REQ_PRIV@@
DSYMUTIL = @@DSYMUTIL@@
DUMPBIN = @@DUMPBIN@@
ECHO_C = @@ECHO_C@@
ECHO_N = @@ECHO_N@@
ECHO_T = @@ECHO_T@@
EGL_CFLAGS = @@EGL_CFLAGS@@
EGL_CLIENT_APIS = @@EGL_CLIENT_APIS@@
EGL_LIB_DEPS = @@EGL_LIB_DEPS@@
EGL_NATIVE_PLATFORM = @@EGL_NATIVE_PLATFORM@@
EGREP = @@EGREP@@
EXEEXT = @@EXEEXT@@
EXPAT_CFLAGS = @@EXPAT_CFLAGS@@
EXPAT_LIBS = @@EXPAT_LIBS@@
FGREP = @@FGREP@@
FREEDRENO_CFLAGS = @@FREEDRENO_CFLAGS@@
FREEDRENO_LIBS = @@FREEDRENO_LIBS@@
GALLIUM_PIPE_LOADER_DEFINES = @@GALLIUM_PIPE_LOADER_DEFINES@@
GBM_PC_LIB_PRIV = @@GBM_PC_LIB_PRIV@@
GBM_PC_REQ_PRIV = @@GBM_PC_REQ_PRIV@@
GC_SECTIONS = @@GC_SECTIONS@@
GLESv1_CM_LIB_DEPS = @@GLESv1_CM_LIB_DEPS@@
GLESv1_CM_PC_LIB_PRIV = @@GLESv1_CM_PC_LIB_PRIV@@
GLESv2_LIB_DEPS = @@GLESv2_LIB_DEPS@@
GLESv2_PC_LIB_PRIV = @@GLESv2_PC_LIB_PRIV@@
GLPROTO_CFLAGS = @@GLPROTO_CFLAGS@@
GLPROTO_LIBS = @@GLPROTO_LIBS@@
GLVND_CFLAGS = @@GLVND_CFLAGS@@
GLVND_LIBS = @@GLVND_LIBS@@
GLX_TLS = @@GLX_TLS@@
GL_LIB = @@GL_LIB@@
GL_LIB_DEPS = @@GL_LIB_DEPS@@
GL_PC_CFLAGS = @@GL_PC_CFLAGS@@
GL_PC_LIB_PRIV = @@GL_PC_LIB_PRIV@@
GL_PC_REQ_PRIV = @@GL_PC_REQ_PRIV@@
GREP = @@GREP@@
HAVE_XF86VIDMODE = @@HAVE_XF86VIDMODE@@
INDENT = @@INDENT@@
INDENT_FLAGS = @@INDENT_FLAGS@@
INSTALL = @@INSTALL@@
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
INSTALL_STRIP_PROGRAM = @@INSTALL_STRIP_PROGRAM@@
INTEL_CFLAGS = @@INTEL_CFLAGS@@
INTEL_LIBS = @@INTEL_LIBS@@
LD = @@LD@@
LDFLAGS = @@LDFLAGS@@
LD_NO_UNDEFINED = @@LD_NO_UNDEFINED@@
LEX = @@LEX@@
LEXLIB = @@LEXLIB@@
LEX_OUTPUT_ROOT = @@LEX_OUTPUT_ROOT@@
LIBCLC_INCLUDEDIR = @@LIBCLC_INCLUDEDIR@@
LIBCLC_LIBEXECDIR = @@LIBCLC_LIBEXECDIR@@
LIBDRM_CFLAGS = @@LIBDRM_CFLAGS@@
LIBDRM_LIBS = @@LIBDRM_LIBS@@
LIBELF_CFLAGS = @@LIBELF_CFLAGS@@
LIBELF_LIBS = @@LIBELF_LIBS@@
LIBOBJS = @@LIBOBJS@@
LIBS = @@LIBS@@
LIBSENSORS_LDFLAGS = @@LIBSENSORS_LDFLAGS@@
LIBSHA1_CFLAGS = @@LIBSHA1_CFLAGS@@
LIBSHA1_LIBS = @@LIBSHA1_LIBS@@
LIBTOOL = @@LIBTOOL@@
LIB_DIR = @@LIB_DIR@@
LIB_EXT = @@LIB_EXT@@
LIPO = @@LIPO@@
LLVM_BINDIR = @@LLVM_BINDIR@@
LLVM_CFLAGS = @@LLVM_CFLAGS@@
LLVM_CONFIG = @@LLVM_CONFIG@@
LLVM_CPPFLAGS = @@LLVM_CPPFLAGS@@
LLVM_CXXFLAGS = @@LLVM_CXXFLAGS@@
LLVM_INCLUDEDIR = @@LLVM_INCLUDEDIR@@
LLVM_LDFLAGS = @@LLVM_LDFLAGS@@
LLVM_LIBDIR = @@LLVM_LIBDIR@@
LLVM_LIBS = @@LLVM_LIBS@@
LLVM_VERSION = @@LLVM_VERSION@@
LN_S = @@LN_S@@
LTLIBOBJS = @@LTLIBOBJS@@
MAINT = @@MAINT@@
MAKEINFO = @@MAKEINFO@@
MANIFEST_TOOL = @@MANIFEST_TOOL@@
MESA_LLVM = @@MESA_LLVM@@
MKDIR_P = @@MKDIR_P@@
MSVC2013_COMPAT_CFLAGS = @@MSVC2013_COMPAT_CFLAGS@@
MSVC2013_COMPAT_CXXFLAGS = @@MSVC2013_COMPAT_CXXFLAGS@@
NINE_MAJOR = @@NINE_MAJOR@@
NINE_MINOR = @@NINE_MINOR@@
NINE_TINY = @@NINE_TINY@@
NINE_VERSION = @@NINE_VERSION@@
NM = @@NM@@
NMEDIT = @@NMEDIT@@
NOUVEAU_CFLAGS = @@NOUVEAU_CFLAGS@@
NOUVEAU_LIBS = @@NOUVEAU_LIBS@@
NVVIEUX_CFLAGS = @@NVVIEUX_CFLAGS@@
NVVIEUX_LIBS = @@NVVIEUX_LIBS@@
OBJDUMP = @@OBJDUMP@@
OBJEXT = @@OBJEXT@@
OMX_CFLAGS = @@OMX_CFLAGS@@
OMX_LIBS = @@OMX_LIBS@@
OMX_LIB_INSTALL_DIR = @@OMX_LIB_INSTALL_DIR@@
OPENCL_LIBNAME = @@OPENCL_LIBNAME@@
OPENCL_VERSION = @@OPENCL_VERSION@@
OPENSSL_CFLAGS = @@OPENSSL_CFLAGS@@
OPENSSL_LIBS = @@OPENSSL_LIBS@@
OSMESA_LIB = @@OSMESA_LIB@@
OSMESA_LIB_DEPS = @@OSMESA_LIB_DEPS@@
OSMESA_PC_LIB_PRIV = @@OSMESA_PC_LIB_PRIV@@
OSMESA_PC_REQ = @@OSMESA_PC_REQ@@
OSMESA_VERSION = @@OSMESA_VERSION@@
OTOOL = @@OTOOL@@
OTOOL64 = @@OTOOL64@@
PACKAGE = @@PACKAGE@@
PACKAGE_BUGREPORT = @@PACKAGE_BUGREPORT@@
PACKAGE_NAME = @@PACKAGE_NAME@@
PACKAGE_STRING = @@PACKAGE_STRING@@
PACKAGE_TARNAME = @@PACKAGE_TARNAME@@
PACKAGE_URL = @@PACKAGE_URL@@
PACKAGE_VERSION = @@PACKAGE_VERSION@@
PATH_SEPARATOR = @@PATH_SEPARATOR@@
PKG_CONFIG = @@PKG_CONFIG@@
PKG_CONFIG_LIBDIR = @@PKG_CONFIG_LIBDIR@@
PKG_CONFIG_PATH = @@PKG_CONFIG_PATH@@
POSIX_SHELL = @@POSIX_SHELL@@
PRESENTPROTO_CFLAGS = @@PRESENTPROTO_CFLAGS@@
PRESENTPROTO_LIBS = @@PRESENTPROTO_LIBS@@
PTHREADSTUBS_CFLAGS = @@PTHREADSTUBS_CFLAGS@@
PTHREADSTUBS_LIBS = @@PTHREADSTUBS_LIBS@@
PTHREAD_CC = @@PTHREAD_CC@@
PTHREAD_CFLAGS = @@PTHREAD_CFLAGS@@
PTHREAD_LIBS = @@PTHREAD_LIBS@@
PWR8_CFLAGS = @@PWR8_CFLAGS@@
PYTHON2 = @@PYTHON2@@
RADEON_CFLAGS = @@RADEON_CFLAGS@@
RADEON_LIBS = @@RADEON_LIBS@@
RANLIB = @@RANLIB@@
RM = @@RM@@
SED = @@SED@@
SELINUX_CFLAGS = @@SELINUX_CFLAGS@@
SELINUX_LIBS = @@SELINUX_LIBS@@
SET_MAKE = @@SET_MAKE@@
SHA1_CFLAGS = @@SHA1_CFLAGS@@
SHA1_LIBS = @@SHA1_LIBS@@
SHELL = @@SHELL@@
SIMPENROSE_CFLAGS = @@SIMPENROSE_CFLAGS@@
SIMPENROSE_LIBS = @@SIMPENROSE_LIBS@@
SSE41_CFLAGS = @@SSE41_CFLAGS@@
STRIP = @@STRIP@@
SWR_AVX2_CXXFLAGS = @@SWR_AVX2_CXXFLAGS@@
SWR_AVX_CXXFLAGS = @@SWR_AVX_CXXFLAGS@@
SWR_CXX11_CXXFLAGS = @@SWR_CXX11_CXXFLAGS@@
TIMESTAMP_CMD = @@TIMESTAMP_CMD@@
VALGRIND_CFLAGS = @@VALGRIND_CFLAGS@@
VALGRIND_LIBS = @@VALGRIND_LIBS@@
VA_CFLAGS = @@VA_CFLAGS@@
VA_LIBS = @@VA_LIBS@@
VA_LIB_INSTALL_DIR = @@VA_LIB_INSTALL_DIR@@
VA_MAJOR = @@VA_MAJOR@@
VA_MINOR = @@VA_MINOR@@
VC4_CFLAGS = @@VC4_CFLAGS@@
VC4_LIBS = @@VC4_LIBS@@
VDPAU_CFLAGS = @@VDPAU_CFLAGS@@
VDPAU_LIBS = @@VDPAU_LIBS@@
VDPAU_LIB_INSTALL_DIR = @@VDPAU_LIB_INSTALL_DIR@@
VDPAU_MAJOR = @@VDPAU_MAJOR@@
VDPAU_MINOR = @@VDPAU_MINOR@@
VERSION = @@VERSION@@
VG_LIB_DEPS = @@VG_LIB_DEPS@@
VISIBILITY_CFLAGS = @@VISIBILITY_CFLAGS@@
VISIBILITY_CXXFLAGS = @@VISIBILITY_CXXFLAGS@@
VL_CFLAGS = @@VL_CFLAGS@@
VL_LIBS = @@VL_LIBS@@
VULKAN_ICD_INSTALL_DIR = @@VULKAN_ICD_INSTALL_DIR@@
WAYLAND_CFLAGS = @@WAYLAND_CFLAGS@@
WAYLAND_LIBS = @@WAYLAND_LIBS@@
WAYLAND_SCANNER = @@WAYLAND_SCANNER@@
WAYLAND_SCANNER_CFLAGS = @@WAYLAND_SCANNER_CFLAGS@@
WAYLAND_SCANNER_LIBS = @@WAYLAND_SCANNER_LIBS@@
X11_INCLUDES = @@X11_INCLUDES@@
XA_MAJOR = @@XA_MAJOR@@
XA_MINOR = @@XA_MINOR@@
XA_TINY = @@XA_TINY@@
XA_VERSION = @@XA_VERSION@@
XCB_DRI2_CFLAGS = @@XCB_DRI2_CFLAGS@@
XCB_DRI2_LIBS = @@XCB_DRI2_LIBS@@
XCB_DRI3_CFLAGS = @@XCB_DRI3_CFLAGS@@
XCB_DRI3_LIBS = @@XCB_DRI3_LIBS@@
XF86VIDMODE_CFLAGS = @@XF86VIDMODE_CFLAGS@@
XF86VIDMODE_LIBS = @@XF86VIDMODE_LIBS@@
XLIBGL_CFLAGS = @@XLIBGL_CFLAGS@@
XLIBGL_LIBS = @@XLIBGL_LIBS@@
XVMC_CFLAGS = @@XVMC_CFLAGS@@
XVMC_LIBS = @@XVMC_LIBS@@
XVMC_LIB_INSTALL_DIR = @@XVMC_LIB_INSTALL_DIR@@
XVMC_MAJOR = @@XVMC_MAJOR@@
XVMC_MINOR = @@XVMC_MINOR@@
XXD = @@XXD@@
YACC = @@YACC@@
YFLAGS = @@YFLAGS@@
abs_builddir = @@abs_builddir@@
abs_srcdir = @@abs_srcdir@@
abs_top_builddir = @@abs_top_builddir@@
abs_top_srcdir = @@abs_top_srcdir@@
ac_ct_AR = @@ac_ct_AR@@
ac_ct_CC = @@ac_ct_CC@@
ac_ct_CXX = @@ac_ct_CXX@@
ac_ct_DUMPBIN = @@ac_ct_DUMPBIN@@
acv_mako_found = @@acv_mako_found@@
am__include = @@am__include@@
am__leading_dot = @@am__leading_dot@@
am__quote = @@am__quote@@
am__tar = @@am__tar@@
am__untar = @@am__untar@@
ax_pthread_config = @@ax_pthread_config@@
bindir = @@bindir@@
build = @@build@@
build_alias = @@build_alias@@
build_cpu = @@build_cpu@@
build_os = @@build_os@@
build_vendor = @@build_vendor@@
builddir = @@builddir@@
datadir = @@datadir@@
datarootdir = @@datarootdir@@
docdir = @@docdir@@
dvidir = @@dvidir@@
exec_prefix = @@exec_prefix@@
host = @@host@@
host_alias = @@host_alias@@
host_cpu = @@host_cpu@@
host_os = @@host_os@@
host_vendor = @@host_vendor@@
htmldir = @@htmldir@@
ifGNUmake = @@ifGNUmake@@
includedir = @@includedir@@
infodir = @@infodir@@
install_sh = @@install_sh@@
libdir = @@libdir@@
libexecdir = @@libexecdir@@
localedir = @@localedir@@
localstatedir = @@localstatedir@@
mandir = @@mandir@@
mkdir_p = @@mkdir_p@@
oldincludedir = @@oldincludedir@@
pdfdir = @@pdfdir@@
prefix = @@prefix@@
program_transform_name = @@program_transform_name@@
psdir = @@psdir@@
sbindir = @@sbindir@@
sharedstatedir = @@sharedstatedir@@
srcdir = @@srcdir@@
sysconfdir = @@sysconfdir@@
target = @@target@@
target_alias = @@target_alias@@
target_cpu = @@target_cpu@@
target_os = @@target_os@@
target_vendor = @@target_vendor@@
top_build_prefix = @@top_build_prefix@@
top_builddir = @@top_builddir@@
top_srcdir = @@top_srcdir@@
LIBEGL_C_FILES := \
	main/eglapi.c \
	main/eglapi.h \
	main/eglarray.c \
	main/eglarray.h \
	main/eglcompiler.h \
	main/eglconfig.c \
	main/eglconfig.h \
	main/eglcontext.c \
	main/eglcontext.h \
	main/eglcurrent.c \
	main/eglcurrent.h \
	main/egldefines.h \
	main/egldisplay.c \
	main/egldisplay.h \
	main/egldriver.c \
	main/egldriver.h \
	main/eglfallbacks.c \
	main/eglglobals.c \
	main/eglglobals.h \
	main/eglimage.c \
	main/eglimage.h \
	main/egllog.c \
	main/egllog.h \
	main/eglsurface.c \
	main/eglsurface.h \
	main/eglsync.c \
	main/eglsync.h \
	main/egltypedefs.h

dri2_backend_core_FILES := \
	drivers/dri2/egl_dri2.c \
	drivers/dri2/egl_dri2.h \
	drivers/dri2/egl_dri2_fallbacks.h

AM_CFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/src/egl/main \
	-I$(top_srcdir)/src/gbm/main -I$(top_srcdir)/src $(DEFINES) \
	$(VISIBILITY_CFLAGS) $(LIBDRM_CFLAGS) $(EGL_CFLAGS) \
	-D_EGL_NATIVE_PLATFORM=$(EGL_NATIVE_PLATFORM) $(am__append_1) \
	$(am__append_6) $(am__append_9) $(am__append_12) \
	$(am__append_14) $(am__append_16)
lib_LTLIBRARIES = libEGL.la
libEGL_la_SOURCES = $(LIBEGL_C_FILES) $(am__append_17)
libEGL_la_LIBADD = $(EGL_LIB_DEPS) $(am__append_2) $(am__append_5) \
	$(am__append_7) $(am__append_10) $(am__append_18)
libEGL_la_LDFLAGS = \
	-no-undefined \
	-version-number 1:0 \
	$(BSYMBOLIC) \
	$(GC_SECTIONS) \
	$(LD_NO_UNDEFINED)

dri2_backend_FILES = $(am__append_3) $(am__append_8) $(am__append_11) \
	$(am__append_13) $(am__append_15)
dri3_backend_FILES = $(am__append_4)
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = main/egl.pc
khrdir = $(includedir)/KHR
khr_HEADERS = $(top_srcdir)/include/KHR/khrplatform.h
egldir = $(includedir)/EGL
egl_HEADERS = \
	$(top_srcdir)/include/EGL/eglext.h \
	$(top_srcdir)/include/EGL/egl.h \
	$(top_srcdir)/include/EGL/eglextchromium.h \
	$(top_srcdir)/include/EGL/eglmesaext.h \
	$(top_srcdir)/include/EGL/eglplatform.h

TESTS = egl-symbols-check
EXTRA_DIST = \
	egl-symbols-check \
	SConscript \
	drivers/haiku \
	main/egl.def \
	main/README.txt

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @@MAINTAINER_MODE_TRUE@@ $(srcdir)/Makefile.am $(srcdir)/Makefile.sources $(top_srcdir)/install-lib-links.mk $(am__configure_deps)
	@@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/egl/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/egl/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.sources $(top_srcdir)/install-lib-links.mk:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @@MAINTAINER_MODE_TRUE@@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @@MAINTAINER_MODE_TRUE@@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@@$(NORMAL_INSTALL)
	@@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@@$(NORMAL_UNINSTALL)
	@@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
main/$(am__dirstamp):
	@@$(MKDIR_P) main
	@@: > main/$(am__dirstamp)
main/$(DEPDIR)/$(am__dirstamp):
	@@$(MKDIR_P) main/$(DEPDIR)
	@@: > main/$(DEPDIR)/$(am__dirstamp)
main/eglapi.lo: main/$(am__dirstamp) main/$(DEPDIR)/$(am__dirstamp)
main/eglarray.lo: main/$(am__dirstamp) main/$(DEPDIR)/$(am__dirstamp)
main/eglconfig.lo: main/$(am__dirstamp) main/$(DEPDIR)/$(am__dirstamp)
main/eglcontext.lo: main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/eglcurrent.lo: main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/egldisplay.lo: main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/egldriver.lo: main/$(am__dirstamp) main/$(DEPDIR)/$(am__dirstamp)
main/eglfallbacks.lo: main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/eglglobals.lo: main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/eglimage.lo: main/$(am__dirstamp) main/$(DEPDIR)/$(am__dirstamp)
main/egllog.lo: main/$(am__dirstamp) main/$(DEPDIR)/$(am__dirstamp)
main/eglsurface.lo: main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
main/eglsync.lo: main/$(am__dirstamp) main/$(DEPDIR)/$(am__dirstamp)
drivers/dri2/$(am__dirstamp):
	@@$(MKDIR_P) drivers/dri2
	@@: > drivers/dri2/$(am__dirstamp)
drivers/dri2/$(DEPDIR)/$(am__dirstamp):
	@@$(MKDIR_P) drivers/dri2/$(DEPDIR)
	@@: > drivers/dri2/$(DEPDIR)/$(am__dirstamp)
drivers/dri2/egl_dri2.lo: drivers/dri2/$(am__dirstamp) \
	drivers/dri2/$(DEPDIR)/$(am__dirstamp)
drivers/dri2/platform_x11.lo: drivers/dri2/$(am__dirstamp) \
	drivers/dri2/$(DEPDIR)/$(am__dirstamp)
drivers/dri2/platform_wayland.lo: drivers/dri2/$(am__dirstamp) \
	drivers/dri2/$(DEPDIR)/$(am__dirstamp)
drivers/dri2/platform_drm.lo: drivers/dri2/$(am__dirstamp) \
	drivers/dri2/$(DEPDIR)/$(am__dirstamp)
drivers/dri2/platform_surfaceless.lo: drivers/dri2/$(am__dirstamp) \
	drivers/dri2/$(DEPDIR)/$(am__dirstamp)
drivers/dri2/platform_android.lo: drivers/dri2/$(am__dirstamp) \
	drivers/dri2/$(DEPDIR)/$(am__dirstamp)
drivers/dri2/platform_x11_dri3.lo: drivers/dri2/$(am__dirstamp) \
	drivers/dri2/$(DEPDIR)/$(am__dirstamp)
libEGL.la: $(libEGL_la_OBJECTS) $(libEGL_la_DEPENDENCIES) $(EXTRA_libEGL_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libEGL_la_LINK) -rpath $(libdir) $(libEGL_la_OBJECTS) $(libEGL_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f drivers/dri2/*.$(OBJEXT)
	-rm -f drivers/dri2/*.lo
	-rm -f main/*.$(OBJEXT)
	-rm -f main/*.lo

distclean-compile:
	-rm -f *.tab.c

@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@drivers/dri2/$(DEPDIR)/egl_dri2.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@drivers/dri2/$(DEPDIR)/platform_android.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@drivers/dri2/$(DEPDIR)/platform_drm.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@drivers/dri2/$(DEPDIR)/platform_surfaceless.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@drivers/dri2/$(DEPDIR)/platform_wayland.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@drivers/dri2/$(DEPDIR)/platform_x11.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@drivers/dri2/$(DEPDIR)/platform_x11_dri3.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglapi.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglarray.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglconfig.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglcontext.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglcurrent.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/egldisplay.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/egldriver.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglfallbacks.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglglobals.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglimage.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/egllog.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglsurface.Plo@@am__quote@@
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglsync.Plo@@am__quote@@

.c.o:
@@am__fastdepCC_TRUE@@	$(AM_V_CC)depbase=`echo $@@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@@am__fastdepCC_TRUE@@	$(COMPILE) -MT $@@ -MD -MP -MF $$depbase.Tpo -c -o $@@ $< &&\
@@am__fastdepCC_TRUE@@	$(am__mv) $$depbase.Tpo $$depbase.Po
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	$(AM_V_CC)source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(AM_V_CC@@am__nodep@@)$(COMPILE) -c -o $@@ $<

.c.obj:
@@am__fastdepCC_TRUE@@	$(AM_V_CC)depbase=`echo $@@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@@am__fastdepCC_TRUE@@	$(COMPILE) -MT $@@ -MD -MP -MF $$depbase.Tpo -c -o $@@ `$(CYGPATH_W) '$<'` &&\
@@am__fastdepCC_TRUE@@	$(am__mv) $$depbase.Tpo $$depbase.Po
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	$(AM_V_CC)source='$<' object='$@@' libtool=no @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(AM_V_CC@@am__nodep@@)$(COMPILE) -c -o $@@ `$(CYGPATH_W) '$<'`

.c.lo:
@@am__fastdepCC_TRUE@@	$(AM_V_CC)depbase=`echo $@@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@@am__fastdepCC_TRUE@@	$(LTCOMPILE) -MT $@@ -MD -MP -MF $$depbase.Tpo -c -o $@@ $< &&\
@@am__fastdepCC_TRUE@@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	$(AM_V_CC)source='$<' object='$@@' libtool=yes @@AMDEPBACKSLASH@@
@@AMDEP_TRUE@@@@am__fastdepCC_FALSE@@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @@AMDEPBACKSLASH@@
@@am__fastdepCC_FALSE@@	$(AM_V_CC@@am__nodep@@)$(LTCOMPILE) -c -o $@@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf drivers/dri2/.libs drivers/dri2/_libs
	-rm -rf main/.libs main/_libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@@$(NORMAL_INSTALL)
	@@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@@$(NORMAL_UNINSTALL)
	@@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-eglHEADERS: $(egl_HEADERS)
	@@$(NORMAL_INSTALL)
	@@list='$(egl_HEADERS)'; test -n "$(egldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(egldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(egldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(egldir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(egldir)" || exit $$?; \
	done

uninstall-eglHEADERS:
	@@$(NORMAL_UNINSTALL)
	@@list='$(egl_HEADERS)'; test -n "$(egldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(egldir)'; $(am__uninstall_files_from_dir)
install-khrHEADERS: $(khr_HEADERS)
	@@$(NORMAL_INSTALL)
	@@list='$(khr_HEADERS)'; test -n "$(khrdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(khrdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(khrdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(khrdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(khrdir)" || exit $$?; \
	done

uninstall-khrHEADERS:
	@@$(NORMAL_UNINSTALL)
	@@list='$(khr_HEADERS)'; test -n "$(khrdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(khrdir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
@@BUILD_SHARED_FALSE@@all-local:
@@HAVE_COMPAT_SYMLINKS_FALSE@@all-local:
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(egldir)" "$(DESTDIR)$(khrdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f drivers/dri2/$(DEPDIR)/$(am__dirstamp)
	-rm -f drivers/dri2/$(am__dirstamp)
	-rm -f main/$(DEPDIR)/$(am__dirstamp)
	-rm -f main/$(am__dirstamp)

maintainer-clean-generic:
	@@echo "This command is intended for maintainers to use"
	@@echo "it deletes files that may require special tools to rebuild."
@@BUILD_SHARED_FALSE@@clean-local:
@@HAVE_COMPAT_SYMLINKS_FALSE@@clean-local:
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -rf drivers/dri2/$(DEPDIR) main/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-eglHEADERS install-khrHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf drivers/dri2/$(DEPDIR) main/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-eglHEADERS uninstall-khrHEADERS \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-TESTS check-am \
	clean clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-local cscopelist ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-eglHEADERS install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-khrHEADERS install-libLTLIBRARIES install-man \
	install-pdf install-pdf-am install-pkgconfigDATA install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-eglHEADERS uninstall-khrHEADERS \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA


@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@all-local : .install-mesa-links

@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@.install-mesa-links : $(lib_LTLIBRARIES)
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@	$(AM_V_GEN)$(MKDIR_P) $(top_builddir)/$(LIB_DIR);	\
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@	for f in $(join $(addsuffix .libs/,$(dir $(lib_LTLIBRARIES))),$(notdir $(lib_LTLIBRARIES:%.la=%.$(LIB_EXT)*))); do \
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@		if test -h .libs/$$f; then			\
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@			cp -d $$f $(top_builddir)/$(LIB_DIR);	\
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@		else						\
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@			ln -f $$f $(top_builddir)/$(LIB_DIR);	\
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@		fi;						\
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@	done && touch $@@

@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@clean-local:
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@	for f in $(notdir $(lib_LTLIBRARIES:%.la=.libs/%.$(LIB_EXT)*)); do \
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@		$(RM) $(top_builddir)/$(LIB_DIR)/$$f;	\
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@	done;
@@BUILD_SHARED_TRUE@@@@HAVE_COMPAT_SYMLINKS_TRUE@@	$(RM) .install-mesa-links

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.10
log
@regen
@
text
@d80 1
a80 1
DIST_COMMON = $(egl_HEADERS) $(srcdir)/Makefile.am \
d83 2
a84 1
@@HAVE_PLATFORM_X11_TRUE@@am__append_1 = $(XCB_DRI2_CFLAGS)
d92 2
a93 1
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__append_6 = $(WAYLAND_CFLAGS)
d98 25
a122 9
@@HAVE_PLATFORM_DRM_TRUE@@am__append_9 = $(top_builddir)/src/gbm/libgbm.la
@@HAVE_PLATFORM_DRM_TRUE@@am__append_10 = drivers/dri2/platform_drm.c
@@HAVE_PLATFORM_SURFACELESS_TRUE@@am__append_11 = drivers/dri2/platform_surfaceless.c
@@HAVE_PLATFORM_ANDROID_TRUE@@am__append_12 = $(ANDROID_CFLAGS)
@@HAVE_PLATFORM_ANDROID_TRUE@@am__append_13 = $(ANDROID_LIBS)
@@HAVE_PLATFORM_ANDROID_TRUE@@am__append_14 = drivers/dri2/platform_android.c
@@USE_LIBGLVND_TRUE@@am__append_15 = \
@@USE_LIBGLVND_TRUE@@	$(GLVND_CFLAGS)

d168 2
a169 13
	"$(DESTDIR)$(vendorjsondir)" "$(DESTDIR)$(egldir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
@@USE_LIBGLVND_FALSE@@libEGL_la_DEPENDENCIES = libEGL_common.la
am_libEGL_la_OBJECTS =
libEGL_la_OBJECTS = $(am_libEGL_la_OBJECTS)
AM_V_lt = $(am__v_lt_@@AM_V@@)
am__v_lt_ = $(am__v_lt_@@AM_DEFAULT_V@@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libEGL_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libEGL_la_LDFLAGS) $(LDFLAGS) -o $@@
@@USE_LIBGLVND_FALSE@@am_libEGL_la_rpath = -rpath $(libdir)
d176 8
a183 8
@@HAVE_PLATFORM_ANDROID_TRUE@@am__DEPENDENCIES_4 =  \
@@HAVE_PLATFORM_ANDROID_TRUE@@	$(am__DEPENDENCIES_1)
libEGL_common_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__append_5) $(am__DEPENDENCIES_3) \
	$(am__append_9) $(am__DEPENDENCIES_4) \
	$(top_builddir)/src/loader/libloader.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libEGL_common_la_SOURCES_DIST = main/eglapi.c main/eglapi.h \
d192 4
a195 4
	main/eglentrypoint.h main/egltypedefs.h \
	drivers/dri2/egl_dri2.c drivers/dri2/egl_dri2.h \
	drivers/dri2/egl_dri2_fallbacks.h drivers/dri2/platform_x11.c \
	drivers/dri2/platform_wayland.c drivers/dri2/platform_drm.c \
d210 4
a213 4
@@HAVE_PLATFORM_DRM_TRUE@@am__objects_5 = drivers/dri2/platform_drm.lo
@@HAVE_PLATFORM_SURFACELESS_TRUE@@am__objects_6 = drivers/dri2/platform_surfaceless.lo
@@HAVE_PLATFORM_ANDROID_TRUE@@am__objects_7 =  \
@@HAVE_PLATFORM_ANDROID_TRUE@@	drivers/dri2/platform_android.lo
d218 11
a228 16
am_libEGL_common_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_8) $(am__objects_10)
libEGL_common_la_OBJECTS = $(am_libEGL_common_la_OBJECTS)
@@USE_LIBGLVND_TRUE@@libEGL_mesa_la_DEPENDENCIES = libEGL_common.la
am__libEGL_mesa_la_SOURCES_DIST = main/eglglvnd.c \
	main/egldispatchstubs.h main/egldispatchstubs.c \
	g_egldispatchstubs.c g_egldispatchstubs.h
@@USE_LIBGLVND_TRUE@@am_libEGL_mesa_la_OBJECTS = main/eglglvnd.lo \
@@USE_LIBGLVND_TRUE@@	main/egldispatchstubs.lo \
@@USE_LIBGLVND_TRUE@@	g_egldispatchstubs.lo
libEGL_mesa_la_OBJECTS = $(am_libEGL_mesa_la_OBJECTS)
libEGL_mesa_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libEGL_mesa_la_LDFLAGS) $(LDFLAGS) -o \
	$@@
@@USE_LIBGLVND_TRUE@@am_libEGL_mesa_la_rpath = -rpath $(libdir)
d263 2
a264 5
SOURCES = $(libEGL_la_SOURCES) $(libEGL_common_la_SOURCES) \
	$(libEGL_mesa_la_SOURCES)
DIST_SOURCES = $(libEGL_la_SOURCES) \
	$(am__libEGL_common_la_SOURCES_DIST) \
	$(am__libEGL_mesa_la_SOURCES_DIST)
d270 2
a271 2
DATA = $(pkgconfig_DATA) $(vendorjson_DATA)
HEADERS = $(egl_HEADERS)
a283 2
ANDROID_CFLAGS = @@ANDROID_CFLAGS@@
ANDROID_LIBS = @@ANDROID_LIBS@@
d314 2
d328 1
a331 2
ETNAVIV_CFLAGS = @@ETNAVIV_CFLAGS@@
ETNAVIV_LIBS = @@ETNAVIV_LIBS@@
a378 1
LIBGLVND_DATADIR = @@LIBGLVND_DATADIR@@
d381 3
a383 1
LIBSENSORS_LIBS = @@LIBSENSORS_LIBS@@
a384 2
LIBUNWIND_CFLAGS = @@LIBUNWIND_CFLAGS@@
LIBUNWIND_LIBS = @@LIBUNWIND_LIBS@@
d388 1
d391 1
d395 1
d397 1
d403 1
d424 2
d445 2
d462 2
d472 1
d488 1
d517 1
a519 2
ZLIB_CFLAGS = @@ZLIB_CFLAGS@@
ZLIB_LIBS = @@ZLIB_LIBS@@
a607 1
	main/eglentrypoint.h \
d619 15
a633 23
	$(am__append_6) $(am__append_12) -I$(top_srcdir)/src/loader \
	-I$(top_srcdir)/src/egl/drivers/dri2 \
	-I$(top_srcdir)/src/gbm/backends/dri \
	-I$(top_srcdir)/src/egl/wayland/wayland-egl \
	-I$(top_builddir)/src/egl/wayland/wayland-drm \
	-I$(top_srcdir)/src/egl/wayland/wayland-drm \
	-DDEFAULT_DRIVER_DIR=\"$(DRI_DRIVER_SEARCH_DIR)\" \
	-D_EGL_BUILT_IN_DRIVER_DRI2 $(am__append_15)

# Depending on whether libglvnd is enabled, we'll build the EGL library as
# either libEGL.so.1 or libEGL_mesa.so.0. Using an automake substitution
# in the variable names breaks "make dist" target, so use a conenience library
# instead.
noinst_LTLIBRARIES = libEGL_common.la
libEGL_common_la_SOURCES = $(LIBEGL_C_FILES) \
	$(dri2_backend_core_FILES) $(dri2_backend_FILES) \
	$(dri3_backend_FILES)
libEGL_common_la_LIBADD = $(EGL_LIB_DEPS) $(am__append_2) \
	$(am__append_5) $(am__append_7) $(am__append_9) \
	$(am__append_13) $(top_builddir)/src/loader/libloader.la \
	$(DLOPEN_LIBS) $(LIBDRM_LIBS) $(CLOCK_LIB)
dri2_backend_FILES = $(am__append_3) $(am__append_8) $(am__append_10) \
	$(am__append_11) $(am__append_14)
a634 35
GLVND_GEN_DEPS = generate/gen_egl_dispatch.py \
	generate/egl.xml generate/eglFunctionList.py generate/genCommon.py \
	generate/egl_other.xml

PYTHON_GEN = $(AM_V_GEN)$(PYTHON2) $(PYTHON_FLAGS)
BUILT_SOURCES = g_egldispatchstubs.c g_egldispatchstubs.h
CLEANFILES = $(BUILT_SOURCES)
@@USE_LIBGLVND_TRUE@@vendorjsondir = @@LIBGLVND_DATADIR@@/glvnd/egl_vendor.d
@@USE_LIBGLVND_TRUE@@vendorjson_DATA = main/50_mesa.json
@@USE_LIBGLVND_FALSE@@lib_LTLIBRARIES = libEGL.la
@@USE_LIBGLVND_TRUE@@lib_LTLIBRARIES = libEGL_mesa.la
@@USE_LIBGLVND_TRUE@@libEGL_mesa_la_SOURCES = \
@@USE_LIBGLVND_TRUE@@	main/eglglvnd.c \
@@USE_LIBGLVND_TRUE@@	main/egldispatchstubs.h \
@@USE_LIBGLVND_TRUE@@	main/egldispatchstubs.c \
@@USE_LIBGLVND_TRUE@@	g_egldispatchstubs.c \
@@USE_LIBGLVND_TRUE@@	g_egldispatchstubs.h

@@USE_LIBGLVND_TRUE@@libEGL_mesa_la_LIBADD = libEGL_common.la
@@USE_LIBGLVND_TRUE@@libEGL_mesa_la_LDFLAGS = \
@@USE_LIBGLVND_TRUE@@	-no-undefined \
@@USE_LIBGLVND_TRUE@@	-version-number 0 \
@@USE_LIBGLVND_TRUE@@	$(BSYMBOLIC) \
@@USE_LIBGLVND_TRUE@@	$(GC_SECTIONS) \
@@USE_LIBGLVND_TRUE@@	$(LD_NO_UNDEFINED)

@@USE_LIBGLVND_FALSE@@libEGL_la_SOURCES = 
@@USE_LIBGLVND_FALSE@@libEGL_la_LIBADD = libEGL_common.la
@@USE_LIBGLVND_FALSE@@libEGL_la_LDFLAGS = \
@@USE_LIBGLVND_FALSE@@	-no-undefined \
@@USE_LIBGLVND_FALSE@@	-version-number 1:0 \
@@USE_LIBGLVND_FALSE@@	$(BSYMBOLIC) \
@@USE_LIBGLVND_FALSE@@	$(GC_SECTIONS) \
@@USE_LIBGLVND_FALSE@@	$(LD_NO_UNDEFINED)

d637 2
d647 1
a647 3
TESTS = egl-symbols-check \
	egl-entrypoint-check

d649 1
a649 1
	$(TESTS) \
d653 1
a653 3
	main/README.txt \
	$(GLVND_GEN_DEPS) \
	main/50_mesa.json
d655 1
a655 2
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am
a723 13

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
libEGL.la: $(libEGL_la_OBJECTS) $(libEGL_la_DEPENDENCIES) $(EXTRA_libEGL_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libEGL_la_LINK) $(am_libEGL_la_rpath) $(libEGL_la_OBJECTS) $(libEGL_la_LIBADD) $(LIBS)
d769 2
a770 7
libEGL_common.la: $(libEGL_common_la_OBJECTS) $(libEGL_common_la_DEPENDENCIES) $(EXTRA_libEGL_common_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libEGL_common_la_OBJECTS) $(libEGL_common_la_LIBADD) $(LIBS)
main/eglglvnd.lo: main/$(am__dirstamp) main/$(DEPDIR)/$(am__dirstamp)
main/egldispatchstubs.lo: main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)
libEGL_mesa.la: $(libEGL_mesa_la_OBJECTS) $(libEGL_mesa_la_DEPENDENCIES) $(EXTRA_libEGL_mesa_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libEGL_mesa_la_LINK) $(am_libEGL_mesa_la_rpath) $(libEGL_mesa_la_OBJECTS) $(libEGL_mesa_la_LIBADD) $(LIBS)
a781 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/g_egldispatchstubs.Plo@@am__quote@@
a793 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/egldispatchstubs.Plo@@am__quote@@
a797 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglglvnd.Plo@@am__quote@@
d855 1
a855 1
install-vendorjsonDATA: $(vendorjson_DATA)
d857 1
a857 1
	@@list='$(vendorjson_DATA)'; test -n "$(vendorjsondir)" || list=; \
d859 2
a860 2
	  echo " $(MKDIR_P) '$(DESTDIR)$(vendorjsondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vendorjsondir)" || exit 1; \
d867 2
a868 2
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vendorjsondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vendorjsondir)" || exit $$?; \
d871 1
a871 1
uninstall-vendorjsonDATA:
d873 1
a873 1
	@@list='$(vendorjson_DATA)'; test -n "$(vendorjsondir)" || list=; \
d875 2
a876 2
	dir='$(DESTDIR)$(vendorjsondir)'; $(am__uninstall_files_from_dir)
install-eglHEADERS: $(egl_HEADERS)
d878 1
a878 1
	@@list='$(egl_HEADERS)'; test -n "$(egldir)" || list=; \
d880 2
a881 2
	  echo " $(MKDIR_P) '$(DESTDIR)$(egldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(egldir)" || exit 1; \
d888 2
a889 2
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(egldir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(egldir)" || exit $$?; \
d892 1
a892 1
uninstall-eglHEADERS:
d894 1
a894 1
	@@list='$(egl_HEADERS)'; test -n "$(egldir)" || list=; \
d896 1
a896 1
	dir='$(DESTDIR)$(egldir)'; $(am__uninstall_files_from_dir)
d1089 1
a1089 2
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
d1094 1
a1094 1
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(vendorjsondir)" "$(DESTDIR)$(egldir)"; do \
d1097 1
a1097 2
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
a1118 1
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
a1130 1
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
d1136 1
a1136 1
	clean-noinstLTLIBRARIES mostlyclean-am
d1139 1
a1139 1
	-rm -rf ./$(DEPDIR) drivers/dri2/$(DEPDIR) main/$(DEPDIR)
d1156 2
a1157 2
install-data-am: install-eglHEADERS install-pkgconfigDATA \
	install-vendorjsonDATA
d1186 1
a1186 1
	-rm -rf ./$(DEPDIR) drivers/dri2/$(DEPDIR) main/$(DEPDIR)
d1203 2
a1204 2
uninstall-am: uninstall-eglHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA uninstall-vendorjsonDATA
d1206 1
a1206 1
.MAKE: all check check-am install install-am install-strip
d1210 9
a1218 9
	clean-local clean-noinstLTLIBRARIES cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-eglHEADERS install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	install-vendorjsonDATA installcheck installcheck-am \
d1222 2
a1223 2
	uninstall-am uninstall-eglHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA uninstall-vendorjsonDATA
a1224 11
@@REGEN_SOURCES_TRUE@@g_egldispatchstubs.c: $(GLVND_GEN_DEPS)
@@REGEN_SOURCES_TRUE@@	$(PYTHON_GEN) $(top_srcdir)/src/egl/generate/gen_egl_dispatch.py source \
@@REGEN_SOURCES_TRUE@@		$(top_srcdir)/src/egl/generate/eglFunctionList.py \
@@REGEN_SOURCES_TRUE@@		$(top_srcdir)/src/egl/generate/egl.xml \
@@REGEN_SOURCES_TRUE@@		$(top_srcdir)/src/egl/generate/egl_other.xml > $@@

@@REGEN_SOURCES_TRUE@@g_egldispatchstubs.h: $(GLVND_GEN_DEPS)
@@REGEN_SOURCES_TRUE@@	$(PYTHON_GEN) $(top_srcdir)/src/egl/generate/gen_egl_dispatch.py header \
@@REGEN_SOURCES_TRUE@@		$(top_srcdir)/src/egl/generate/eglFunctionList.py \
@@REGEN_SOURCES_TRUE@@		$(top_srcdir)/src/egl/generate/egl.xml \
@@REGEN_SOURCES_TRUE@@		$(top_srcdir)/src/egl/generate/egl_other.xml > $@@
@


1.9
log
@Merge Mesa 17.1.6
@
text
@d1288 5
a1292 5
g_egldispatchstubs.c: $(GLVND_GEN_DEPS)
	$(PYTHON_GEN) $(top_srcdir)/src/egl/generate/gen_egl_dispatch.py source \
		$(top_srcdir)/src/egl/generate/eglFunctionList.py \
		$(top_srcdir)/src/egl/generate/egl.xml \
		$(top_srcdir)/src/egl/generate/egl_other.xml > $@@
d1294 5
a1298 5
g_egldispatchstubs.h: $(GLVND_GEN_DEPS)
	$(PYTHON_GEN) $(top_srcdir)/src/egl/generate/gen_egl_dispatch.py header \
		$(top_srcdir)/src/egl/generate/eglFunctionList.py \
		$(top_srcdir)/src/egl/generate/egl.xml \
		$(top_srcdir)/src/egl/generate/egl_other.xml > $@@
@


1.8
log
@Merge Mesa 13.0.6
@
text
@d80 1
a80 1
DIST_COMMON = $(egl_HEADERS) $(khr_HEADERS) $(srcdir)/Makefile.am \
d83 1
a83 2
@@HAVE_PLATFORM_X11_TRUE@@am__append_1 = -DHAVE_X11_PLATFORM \
@@HAVE_PLATFORM_X11_TRUE@@	$(XCB_DRI2_CFLAGS)
d91 1
a91 2
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__append_6 = -DHAVE_WAYLAND_PLATFORM \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(WAYLAND_CFLAGS)
d96 9
a104 25
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_9 = -DHAVE_DRM_PLATFORM
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_10 = $(top_builddir)/src/gbm/libgbm.la
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_11 = drivers/dri2/platform_drm.c
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__append_12 = -DHAVE_SURFACELESS_PLATFORM
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__append_13 = drivers/dri2/platform_surfaceless.c
@@HAVE_EGL_PLATFORM_ANDROID_TRUE@@am__append_14 = -DHAVE_ANDROID_PLATFORM
@@HAVE_EGL_PLATFORM_ANDROID_TRUE@@am__append_15 = drivers/dri2/platform_android.c
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_16 = \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/loader \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/egl/drivers/dri2 \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/gbm/backends/dri \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/egl/wayland/wayland-egl \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_builddir)/src/egl/wayland/wayland-drm \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/egl/wayland/wayland-drm \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-DDEFAULT_DRIVER_DIR=\"$(DRI_DRIVER_SEARCH_DIR)\" \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-D_EGL_BUILT_IN_DRIVER_DRI2

@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_17 = \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(dri2_backend_core_FILES) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(dri2_backend_FILES) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(dri3_backend_FILES)

@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_18 = $(top_builddir)/src/loader/libloader.la \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(DLOPEN_LIBS) $(LIBDRM_LIBS) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(CLOCK_LIB)
d150 13
a162 2
	"$(DESTDIR)$(egldir)" "$(DESTDIR)$(khrdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
d169 8
a176 8
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__DEPENDENCIES_4 = $(top_builddir)/src/loader/libloader.la \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__DEPENDENCIES_1)
libEGL_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__append_5) $(am__DEPENDENCIES_3) $(am__append_10) \
	$(am__DEPENDENCIES_4)
am__libEGL_la_SOURCES_DIST = main/eglapi.c main/eglapi.h \
d185 4
a188 4
	main/egltypedefs.h drivers/dri2/egl_dri2.c \
	drivers/dri2/egl_dri2.h drivers/dri2/egl_dri2_fallbacks.h \
	drivers/dri2/platform_x11.c drivers/dri2/platform_wayland.c \
	drivers/dri2/platform_drm.c \
d203 4
a206 4
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__objects_5 =  \
@@HAVE_EGL_PLATFORM_DRM_TRUE@@	drivers/dri2/platform_drm.lo
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__objects_6 = drivers/dri2/platform_surfaceless.lo
@@HAVE_EGL_PLATFORM_ANDROID_TRUE@@am__objects_7 = drivers/dri2/platform_android.lo
d211 16
a226 11
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__objects_11 = $(am__objects_2) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__objects_8) $(am__objects_10)
am_libEGL_la_OBJECTS = $(am__objects_1) $(am__objects_11)
libEGL_la_OBJECTS = $(am_libEGL_la_OBJECTS)
AM_V_lt = $(am__v_lt_@@AM_V@@)
am__v_lt_ = $(am__v_lt_@@AM_DEFAULT_V@@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libEGL_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libEGL_la_LDFLAGS) $(LDFLAGS) -o $@@
d261 5
a265 2
SOURCES = $(libEGL_la_SOURCES)
DIST_SOURCES = $(am__libEGL_la_SOURCES_DIST)
d271 2
a272 2
DATA = $(pkgconfig_DATA)
HEADERS = $(egl_HEADERS) $(khr_HEADERS)
d285 2
a316 2
DRI3PROTO_CFLAGS = @@DRI3PROTO_CFLAGS@@
DRI3PROTO_LIBS = @@DRI3PROTO_LIBS@@
a328 1
EGL_CLIENT_APIS = @@EGL_CLIENT_APIS@@
d332 2
d381 1
d384 1
a384 3
LIBSENSORS_LDFLAGS = @@LIBSENSORS_LDFLAGS@@
LIBSHA1_CFLAGS = @@LIBSHA1_CFLAGS@@
LIBSHA1_LIBS = @@LIBSHA1_LIBS@@
d386 2
a390 1
LLVM_BINDIR = @@LLVM_BINDIR@@
a392 1
LLVM_CPPFLAGS = @@LLVM_CPPFLAGS@@
a395 1
LLVM_LIBDIR = @@LLVM_LIBDIR@@
a396 1
LLVM_VERSION = @@LLVM_VERSION@@
a401 1
MESA_LLVM = @@MESA_LLVM@@
a421 2
OPENSSL_CFLAGS = @@OPENSSL_CFLAGS@@
OPENSSL_LIBS = @@OPENSSL_LIBS@@
a440 2
PRESENTPROTO_CFLAGS = @@PRESENTPROTO_CFLAGS@@
PRESENTPROTO_LIBS = @@PRESENTPROTO_LIBS@@
a455 2
SHA1_CFLAGS = @@SHA1_CFLAGS@@
SHA1_LIBS = @@SHA1_LIBS@@
a463 1
TIMESTAMP_CMD = @@TIMESTAMP_CMD@@
a478 1
VG_LIB_DEPS = @@VG_LIB_DEPS@@
a506 1
XXD = @@XXD@@
d509 2
d599 1
d611 58
a668 12
	$(am__append_6) $(am__append_9) $(am__append_12) \
	$(am__append_14) $(am__append_16)
lib_LTLIBRARIES = libEGL.la
libEGL_la_SOURCES = $(LIBEGL_C_FILES) $(am__append_17)
libEGL_la_LIBADD = $(EGL_LIB_DEPS) $(am__append_2) $(am__append_5) \
	$(am__append_7) $(am__append_10) $(am__append_18)
libEGL_la_LDFLAGS = \
	-no-undefined \
	-version-number 1:0 \
	$(BSYMBOLIC) \
	$(GC_SECTIONS) \
	$(LD_NO_UNDEFINED)
a669 3
dri2_backend_FILES = $(am__append_3) $(am__append_8) $(am__append_11) \
	$(am__append_13) $(am__append_15)
dri3_backend_FILES = $(am__append_4)
a671 2
khrdir = $(includedir)/KHR
khr_HEADERS = $(top_srcdir)/include/KHR/khrplatform.h
d680 3
a682 1
TESTS = egl-symbols-check
d684 1
a684 1
	egl-symbols-check \
d688 3
a690 1
	main/README.txt
d692 2
a693 1
all: all-am
d762 13
d820 7
a826 2
libEGL.la: $(libEGL_la_OBJECTS) $(libEGL_la_DEPENDENCIES) $(EXTRA_libEGL_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libEGL_la_LINK) -rpath $(libdir) $(libEGL_la_OBJECTS) $(libEGL_la_LIBADD) $(LIBS)
d838 1
d851 1
d856 1
d914 1
a914 1
install-eglHEADERS: $(egl_HEADERS)
d916 1
a916 1
	@@list='$(egl_HEADERS)'; test -n "$(egldir)" || list=; \
d918 2
a919 2
	  echo " $(MKDIR_P) '$(DESTDIR)$(egldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(egldir)" || exit 1; \
d926 2
a927 2
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(egldir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(egldir)" || exit $$?; \
d930 1
a930 1
uninstall-eglHEADERS:
d932 1
a932 1
	@@list='$(egl_HEADERS)'; test -n "$(egldir)" || list=; \
d934 2
a935 2
	dir='$(DESTDIR)$(egldir)'; $(am__uninstall_files_from_dir)
install-khrHEADERS: $(khr_HEADERS)
d937 1
a937 1
	@@list='$(khr_HEADERS)'; test -n "$(khrdir)" || list=; \
d939 2
a940 2
	  echo " $(MKDIR_P) '$(DESTDIR)$(khrdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(khrdir)" || exit 1; \
d947 2
a948 2
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(khrdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(khrdir)" || exit $$?; \
d951 1
a951 1
uninstall-khrHEADERS:
d953 1
a953 1
	@@list='$(khr_HEADERS)'; test -n "$(khrdir)" || list=; \
d955 1
a955 1
	dir='$(DESTDIR)$(khrdir)'; $(am__uninstall_files_from_dir)
d1148 2
a1149 1
check: check-am
d1154 1
a1154 1
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(egldir)" "$(DESTDIR)$(khrdir)"; do \
d1157 2
a1158 1
install: install-am
d1180 1
d1193 1
d1199 1
a1199 1
	mostlyclean-am
d1202 1
a1202 1
	-rm -rf drivers/dri2/$(DEPDIR) main/$(DEPDIR)
d1219 2
a1220 2
install-data-am: install-eglHEADERS install-khrHEADERS \
	install-pkgconfigDATA
d1249 1
a1249 1
	-rm -rf drivers/dri2/$(DEPDIR) main/$(DEPDIR)
d1266 2
a1267 2
uninstall-am: uninstall-eglHEADERS uninstall-khrHEADERS \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA
d1269 1
a1269 1
.MAKE: check-am install-am install-strip
d1273 9
a1281 9
	clean-local cscopelist ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-eglHEADERS install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-khrHEADERS install-libLTLIBRARIES install-man \
	install-pdf install-pdf-am install-pkgconfigDATA install-ps \
	install-ps-am install-strip installcheck installcheck-am \
d1285 2
a1286 2
	uninstall-am uninstall-eglHEADERS uninstall-khrHEADERS \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA
d1288 11
@


1.7
log
@Merge Mesa 13.0.5
@
text
@d298 1
@


1.6
log
@Merge Mesa 13.0.2
@
text
@d110 1
a111 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_builddir)/src/egl/wayland/wayland-drm \
@


1.5
log
@regen
@
text
@d83 15
a97 16
@@HAVE_EGL_PLATFORM_X11_TRUE@@am__append_1 = -DHAVE_X11_PLATFORM \
@@HAVE_EGL_PLATFORM_X11_TRUE@@	$(XCB_DRI2_CFLAGS)
@@HAVE_EGL_PLATFORM_X11_TRUE@@am__append_2 = $(XCB_DRI2_LIBS)
@@HAVE_EGL_PLATFORM_X11_TRUE@@am__append_3 = drivers/dri2/platform_x11.c
@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@am__append_4 = \
@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@	drivers/dri2/platform_x11_dri3.c \
@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@	drivers/dri2/platform_x11_dri3.h

@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@am__append_5 = $(top_builddir)/src/loader/libloader_dri3_helper.la
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__append_6 =  \
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@	-DHAVE_WAYLAND_PLATFORM \
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@	$(WAYLAND_CFLAGS)
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__append_7 = $(WAYLAND_LIBS) \
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@	$(LIBDRM_LIBS) \
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@	$(top_builddir)/src/egl/wayland/wayland-drm/libwayland-drm.la
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__append_8 = drivers/dri2/platform_wayland.c
d103 3
a105 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_14 = \
d115 1
a115 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_15 = \
d120 3
a122 2
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_16 = $(top_builddir)/src/loader/libloader.la \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(DLOPEN_LIBS) $(LIBDRM_LIBS)
d171 5
a175 6
@@HAVE_EGL_PLATFORM_X11_TRUE@@am__DEPENDENCIES_2 =  \
@@HAVE_EGL_PLATFORM_X11_TRUE@@	$(am__DEPENDENCIES_1)
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__DEPENDENCIES_3 =  \
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@	$(top_builddir)/src/egl/wayland/wayland-drm/libwayland-drm.la
d178 1
d197 1
d207 3
a209 3
@@HAVE_EGL_PLATFORM_X11_TRUE@@am__objects_3 =  \
@@HAVE_EGL_PLATFORM_X11_TRUE@@	drivers/dri2/platform_x11.lo
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__objects_4 = drivers/dri2/platform_wayland.lo
d213 8
a220 7
am__objects_7 = $(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6)
@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@am__objects_8 = drivers/dri2/platform_x11_dri3.lo
am__objects_9 = $(am__objects_8)
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__objects_10 = $(am__objects_2) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__objects_7) $(am__objects_9)
am_libEGL_la_OBJECTS = $(am__objects_1) $(am__objects_10)
d347 2
d380 1
a383 2
LIBUDEV_CFLAGS = @@LIBUDEV_CFLAGS@@
LIBUDEV_LIBS = @@LIBUDEV_LIBS@@
d446 2
d468 6
d479 2
d492 1
d516 1
d619 1
a619 1
	$(am__append_14)
d621 1
a621 1
libEGL_la_SOURCES = $(LIBEGL_C_FILES) $(am__append_15)
d623 1
a623 1
	$(am__append_7) $(am__append_10) $(am__append_16)
d632 1
a632 1
	$(am__append_13)
a650 1
	docs \
d764 2
d782 1
@


1.4
log
@Merge Mesa 11.2.2
@
text
@d394 1
d642 1
a642 1
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.sources $(top_srcdir)/install-lib-links.mk $(am__configure_deps)
d668 1
a668 1
$(top_srcdir)/configure:  $(am__configure_deps)
d670 1
a670 1
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
d981 1
a981 1
	  fi; \
d987 1
a987 1
	else \
d990 1
a990 1
	fi; \
d998 1
a998 1
	    else \
d1011 1
a1011 1
	 else								\
d1013 1
a1013 1
	fi;								\
d1016 1
a1016 1
	  fi;								\
d1022 1
a1022 1
	fi;								\
@


1.3
log
@Merge Mesa 11.0.8
@
text
@d87 6
a92 1
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__append_4 =  \
d95 1
a95 1
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__append_5 = $(WAYLAND_LIBS) \
d98 7
a104 7
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__append_6 = drivers/dri2/platform_wayland.c
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_7 = -DHAVE_DRM_PLATFORM
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_8 = $(top_builddir)/src/gbm/libgbm.la
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_9 = drivers/dri2/platform_drm.c
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__append_10 = -DHAVE_SURFACELESS_PLATFORM
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__append_11 = drivers/dri2/platform_surfaceless.c
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_12 = \
d114 1
a114 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_13 = \
d116 2
a117 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(dri2_backend_FILES)
d119 1
a119 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_14 = $(top_builddir)/src/loader/libloader.la \
d179 2
a180 1
	$(am__DEPENDENCIES_3) $(am__append_8) $(am__DEPENDENCIES_4)
d194 3
a196 1
	drivers/dri2/platform_surfaceless.c
d212 5
a216 3
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__objects_8 = $(am__objects_2) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__objects_7)
am_libEGL_la_OBJECTS = $(am__objects_1) $(am__objects_8)
d270 4
d374 2
a397 2
MSVC2008_COMPAT_CFLAGS = @@MSVC2008_COMPAT_CFLAGS@@
MSVC2008_COMPAT_CXXFLAGS = @@MSVC2008_COMPAT_CXXFLAGS@@
d417 2
d443 1
d453 2
d456 2
d488 2
d600 2
a601 2
	$(am__append_4) $(am__append_7) $(am__append_10) \
	$(am__append_12)
d603 1
a603 1
libEGL_la_SOURCES = $(LIBEGL_C_FILES) $(am__append_13)
d605 1
a605 1
	$(am__append_8) $(am__append_14)
d613 3
a615 2
dri2_backend_FILES = $(am__append_3) $(am__append_6) $(am__append_9) \
	$(am__append_11)
d628 1
d630 1
d747 2
d767 1
d943 93
d1067 1
d1185 1
a1185 1
.MAKE: install-am install-strip
d1187 16
a1202 16
.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	cscopelist ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-eglHEADERS \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-khrHEADERS \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-eglHEADERS \
	uninstall-khrHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA
@


1.2
log
@regen
@
text
@a311 1
ELF_LIB = @@ELF_LIB@@
d355 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.15 from Makefile.am.
d4 1
a4 1
# Copyright (C) 1994-2014 Free Software Foundation, Inc.
d44 3
a46 23
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
d49 9
a57 3
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
d59 2
a60 26
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
d80 3
a128 2
DIST_COMMON = $(srcdir)/Makefile.am $(egl_HEADERS) $(khr_HEADERS) \
	$(am__DIST_COMMON)
a256 17
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
a258 2
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.sources \
	$(top_srcdir)/bin/depcomp $(top_srcdir)/install-lib-links.mk
a375 1
LT_SYS_LIBRARY_PATH = @@LT_SYS_LIBRARY_PATH@@
d625 1
d634 1
a634 1
$(srcdir)/Makefile.sources $(top_srcdir)/install-lib-links.mk $(am__empty):
a643 1

a718 1

d846 9
a854 4
ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags
d856 2
a857 1
tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
d860 6
a865 1
	$(am__define_uniq_tagged_files); \
d877 9
a885 5
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
a893 1
cscopelist: cscopelist-am
d895 2
a896 2
cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
d1062 1
a1062 1
.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
d1064 14
a1077 16
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-eglHEADERS install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-khrHEADERS install-libLTLIBRARIES install-man \
	install-pdf install-pdf-am install-pkgconfigDATA install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-eglHEADERS uninstall-khrHEADERS \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA

.PRECIOUS: Makefile
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 11.0.8

This seems to fix some of the problems with clutter/gnome reported to
occur on r600 with 11.0.6
@
text
@d368 1
a411 2
LIBELF_CFLAGS = @@LIBELF_CFLAGS@@
LIBELF_LIBS = @@LIBELF_LIBS@@
@


1.1.1.3
log
@Import Mesa 11.2.2
@
text
@d122 1
a122 6
@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@am__append_4 = \
@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@	drivers/dri2/platform_x11_dri3.c \
@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@	drivers/dri2/platform_x11_dri3.h

@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@am__append_5 = $(top_builddir)/src/loader/libloader_dri3_helper.la
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__append_6 =  \
d125 1
a125 1
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__append_7 = $(WAYLAND_LIBS) \
d128 7
a134 7
@@HAVE_EGL_PLATFORM_WAYLAND_TRUE@@am__append_8 = drivers/dri2/platform_wayland.c
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_9 = -DHAVE_DRM_PLATFORM
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_10 = $(top_builddir)/src/gbm/libgbm.la
@@HAVE_EGL_PLATFORM_DRM_TRUE@@am__append_11 = drivers/dri2/platform_drm.c
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__append_12 = -DHAVE_SURFACELESS_PLATFORM
@@HAVE_EGL_PLATFORM_SURFACELESS_TRUE@@am__append_13 = drivers/dri2/platform_surfaceless.c
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_14 = \
d144 1
a144 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_15 = \
d146 1
a146 2
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(dri2_backend_FILES) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(dri3_backend_FILES)
d148 1
a148 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_16 = $(top_builddir)/src/loader/libloader.la \
d210 1
a210 2
	$(am__append_5) $(am__DEPENDENCIES_3) $(am__append_10) \
	$(am__DEPENDENCIES_4)
d224 1
a224 3
	drivers/dri2/platform_surfaceless.c \
	drivers/dri2/platform_x11_dri3.c \
	drivers/dri2/platform_x11_dri3.h
d240 3
a242 5
@@HAVE_DRI3_TRUE@@@@HAVE_EGL_PLATFORM_X11_TRUE@@am__objects_8 = drivers/dri2/platform_x11_dri3.lo
am__objects_9 = $(am__objects_8)
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__objects_10 = $(am__objects_2) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__objects_7) $(am__objects_9)
am_libEGL_la_OBJECTS = $(am__objects_1) $(am__objects_10)
a312 177
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@@" in						\
  */*) am__odir=`echo "./$@@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @@EXEEXT@@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/bin/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@@EXEEXT@@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/bin/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
d314 1
a314 2
	$(top_srcdir)/bin/depcomp $(top_srcdir)/bin/test-driver \
	$(top_srcdir)/install-lib-links.mk
a414 2
LIBSHA1_CFLAGS = @@LIBSHA1_CFLAGS@@
LIBSHA1_LIBS = @@LIBSHA1_LIBS@@
d438 2
a458 2
OPENSSL_CFLAGS = @@OPENSSL_CFLAGS@@
OPENSSL_LIBS = @@OPENSSL_LIBS@@
a482 1
PWR8_CFLAGS = @@PWR8_CFLAGS@@
a491 2
SHA1_CFLAGS = @@SHA1_CFLAGS@@
SHA1_LIBS = @@SHA1_LIBS@@
a492 2
SIMPENROSE_CFLAGS = @@SIMPENROSE_CFLAGS@@
SIMPENROSE_LIBS = @@SIMPENROSE_LIBS@@
a522 2
XCB_DRI3_CFLAGS = @@XCB_DRI3_CFLAGS@@
XCB_DRI3_LIBS = @@XCB_DRI3_LIBS@@
d633 2
a634 2
	$(am__append_6) $(am__append_9) $(am__append_12) \
	$(am__append_14)
d636 1
a636 1
libEGL_la_SOURCES = $(LIBEGL_C_FILES) $(am__append_15)
d638 1
a638 1
	$(am__append_7) $(am__append_10) $(am__append_16)
d646 2
a647 3
dri2_backend_FILES = $(am__append_3) $(am__append_8) $(am__append_11) \
	$(am__append_13)
dri3_backend_FILES = $(am__append_4)
a659 1
TESTS = egl-symbols-check
a660 1
	egl-symbols-check \
d670 1
a670 1
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
a776 2
drivers/dri2/platform_x11_dri3.lo: drivers/dri2/$(am__dirstamp) \
	drivers/dri2/$(DEPDIR)/$(am__dirstamp)
a795 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@drivers/dri2/$(DEPDIR)/platform_x11_dri3.Plo@@am__quote@@
a956 163
# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
egl-symbols-check.log: egl-symbols-check
	@@p='egl-symbols-check'; \
	b='egl-symbols-check'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@@am__EXEEXT_TRUE@@.test$(EXEEXT).log:
@@am__EXEEXT_TRUE@@	@@p='$<'; \
@@am__EXEEXT_TRUE@@	$(am__set_b); \
@@am__EXEEXT_TRUE@@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@@am__EXEEXT_TRUE@@	--log-file $$b.log --trs-file $$b.trs \
@@am__EXEEXT_TRUE@@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@@am__EXEEXT_TRUE@@	"$$tst" $(AM_TESTS_FD_REDIRECT)

a987 1
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
a1015 3
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
d1105 1
a1105 1
.MAKE: check-am install-am install-strip
d1107 15
a1121 16
.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-TESTS \
	check-am clean clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-eglHEADERS \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-khrHEADERS \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-eglHEADERS uninstall-khrHEADERS \
@


1.1.1.4
log
@Import Mesa 13.0.2
@
text
@d118 16
a133 15
@@HAVE_PLATFORM_X11_TRUE@@am__append_1 = -DHAVE_X11_PLATFORM \
@@HAVE_PLATFORM_X11_TRUE@@	$(XCB_DRI2_CFLAGS)
@@HAVE_PLATFORM_X11_TRUE@@am__append_2 = $(XCB_DRI2_LIBS)
@@HAVE_PLATFORM_X11_TRUE@@am__append_3 = drivers/dri2/platform_x11.c
@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@am__append_4 = \
@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@	drivers/dri2/platform_x11_dri3.c \
@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@	drivers/dri2/platform_x11_dri3.h

@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@am__append_5 = $(top_builddir)/src/loader/libloader_dri3_helper.la
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__append_6 = -DHAVE_WAYLAND_PLATFORM \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(WAYLAND_CFLAGS)
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__append_7 = $(WAYLAND_LIBS) \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(LIBDRM_LIBS) \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(top_builddir)/src/egl/wayland/wayland-drm/libwayland-drm.la
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__append_8 = drivers/dri2/platform_wayland.c
d139 1
a139 3
@@HAVE_EGL_PLATFORM_ANDROID_TRUE@@am__append_14 = -DHAVE_ANDROID_PLATFORM
@@HAVE_EGL_PLATFORM_ANDROID_TRUE@@am__append_15 = drivers/dri2/platform_android.c
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_16 = \
d149 1
a149 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_17 = \
d154 2
a155 3
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__append_18 = $(top_builddir)/src/loader/libloader.la \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(DLOPEN_LIBS) $(LIBDRM_LIBS) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(CLOCK_LIB)
d206 6
a211 5
@@HAVE_PLATFORM_X11_TRUE@@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__DEPENDENCIES_3 =  \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(am__DEPENDENCIES_1) \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	$(top_builddir)/src/egl/wayland/wayland-drm/libwayland-drm.la
a213 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__DEPENDENCIES_1) \
a231 1
	drivers/dri2/platform_android.c \
d241 3
a243 3
@@HAVE_PLATFORM_X11_TRUE@@am__objects_3 = drivers/dri2/platform_x11.lo
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__objects_4 =  \
@@HAVE_PLATFORM_WAYLAND_TRUE@@	drivers/dri2/platform_wayland.lo
d247 7
a253 8
@@HAVE_EGL_PLATFORM_ANDROID_TRUE@@am__objects_7 = drivers/dri2/platform_android.lo
am__objects_8 = $(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7)
@@HAVE_DRI3_TRUE@@@@HAVE_PLATFORM_X11_TRUE@@am__objects_9 = drivers/dri2/platform_x11_dri3.lo
am__objects_10 = $(am__objects_9)
@@HAVE_EGL_DRIVER_DRI2_TRUE@@am__objects_11 = $(am__objects_2) \
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	$(am__objects_8) $(am__objects_10)
am_libEGL_la_OBJECTS = $(am__objects_1) $(am__objects_11)
a572 2
GLVND_CFLAGS = @@GLVND_CFLAGS@@
GLVND_LIBS = @@GLVND_LIBS@@
a603 1
LIBSENSORS_LDFLAGS = @@LIBSENSORS_LDFLAGS@@
d607 2
a670 2
PTHREADSTUBS_CFLAGS = @@PTHREADSTUBS_CFLAGS@@
PTHREADSTUBS_LIBS = @@PTHREADSTUBS_LIBS@@
a690 6
SWR_AVX2_CXXFLAGS = @@SWR_AVX2_CXXFLAGS@@
SWR_AVX_CXXFLAGS = @@SWR_AVX_CXXFLAGS@@
SWR_CXX11_CXXFLAGS = @@SWR_CXX11_CXXFLAGS@@
TIMESTAMP_CMD = @@TIMESTAMP_CMD@@
VALGRIND_CFLAGS = @@VALGRIND_CFLAGS@@
VALGRIND_LIBS = @@VALGRIND_LIBS@@
a695 2
VC4_CFLAGS = @@VC4_CFLAGS@@
VC4_LIBS = @@VC4_LIBS@@
a706 1
VULKAN_ICD_INSTALL_DIR = @@VULKAN_ICD_INSTALL_DIR@@
a729 1
XXD = @@XXD@@
d832 1
a832 1
	$(am__append_14) $(am__append_16)
d834 1
a834 1
libEGL_la_SOURCES = $(LIBEGL_C_FILES) $(am__append_17)
d836 1
a836 1
	$(am__append_7) $(am__append_10) $(am__append_18)
d845 1
a845 1
	$(am__append_13) $(am__append_15)
d864 1
a977 2
drivers/dri2/platform_android.lo: drivers/dri2/$(am__dirstamp) \
	drivers/dri2/$(DEPDIR)/$(am__dirstamp)
a994 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@drivers/dri2/$(DEPDIR)/platform_android.Plo@@am__quote@@
@


1.1.1.5
log
@Import Mesa 13.0.5
@
text
@d145 1
a146 1
@@HAVE_EGL_DRIVER_DRI2_TRUE@@	-I$(top_srcdir)/src/egl/wayland/wayland-drm \
@


1.1.1.6
log
@Import Mesa 13.0.6
@
text
@a527 1
CLOVER_STD_OVERRIDE = @@CLOVER_STD_OVERRIDE@@
@


1.1.1.7
log
@Import Mesa 17.1.6
@
text
@d1 1
a1 1
# Makefile.in generated by automake 1.15.1 from Makefile.am.
d4 1
a4 1
# Copyright (C) 1994-2017 Free Software Foundation, Inc.
d118 2
a119 1
@@HAVE_PLATFORM_X11_TRUE@@am__append_1 = $(XCB_DRI2_CFLAGS)
d127 2
a128 1
@@HAVE_PLATFORM_WAYLAND_TRUE@@am__append_6 = $(WAYLAND_CFLAGS)
d133 25
a157 9
@@HAVE_PLATFORM_DRM_TRUE@@am__append_9 = $(top_builddir)/src/gbm/libgbm.la
@@HAVE_PLATFORM_DRM_TRUE@@am__append_10 = drivers/dri2/platform_drm.c
@@HAVE_PLATFORM_SURFACELESS_TRUE@@am__append_11 = drivers/dri2/platform_surfaceless.c
@@HAVE_PLATFORM_ANDROID_TRUE@@am__append_12 = $(ANDROID_CFLAGS)
@@HAVE_PLATFORM_ANDROID_TRUE@@am__append_13 = $(ANDROID_LIBS)
@@HAVE_PLATFORM_ANDROID_TRUE@@am__append_14 = drivers/dri2/platform_android.c
@@USE_LIBGLVND_TRUE@@am__append_15 = \
@@USE_LIBGLVND_TRUE@@	$(GLVND_CFLAGS)

d172 2
a173 1
DIST_COMMON = $(srcdir)/Makefile.am $(egl_HEADERS) $(am__DIST_COMMON)
d205 2
a206 13
	"$(DESTDIR)$(vendorjsondir)" "$(DESTDIR)$(egldir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
@@USE_LIBGLVND_FALSE@@libEGL_la_DEPENDENCIES = libEGL_common.la
am_libEGL_la_OBJECTS =
libEGL_la_OBJECTS = $(am_libEGL_la_OBJECTS)
AM_V_lt = $(am__v_lt_@@AM_V@@)
am__v_lt_ = $(am__v_lt_@@AM_DEFAULT_V@@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libEGL_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libEGL_la_LDFLAGS) $(LDFLAGS) -o $@@
@@USE_LIBGLVND_FALSE@@am_libEGL_la_rpath = -rpath $(libdir)
d213 8
a220 8
@@HAVE_PLATFORM_ANDROID_TRUE@@am__DEPENDENCIES_4 =  \
@@HAVE_PLATFORM_ANDROID_TRUE@@	$(am__DEPENDENCIES_1)
libEGL_common_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(am__append_5) $(am__DEPENDENCIES_3) \
	$(am__append_9) $(am__DEPENDENCIES_4) \
	$(top_builddir)/src/loader/libloader.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libEGL_common_la_SOURCES_DIST = main/eglapi.c main/eglapi.h \
d229 4
a232 4
	main/eglentrypoint.h main/egltypedefs.h \
	drivers/dri2/egl_dri2.c drivers/dri2/egl_dri2.h \
	drivers/dri2/egl_dri2_fallbacks.h drivers/dri2/platform_x11.c \
	drivers/dri2/platform_wayland.c drivers/dri2/platform_drm.c \
d247 4
a250 4
@@HAVE_PLATFORM_DRM_TRUE@@am__objects_5 = drivers/dri2/platform_drm.lo
@@HAVE_PLATFORM_SURFACELESS_TRUE@@am__objects_6 = drivers/dri2/platform_surfaceless.lo
@@HAVE_PLATFORM_ANDROID_TRUE@@am__objects_7 =  \
@@HAVE_PLATFORM_ANDROID_TRUE@@	drivers/dri2/platform_android.lo
d255 11
a265 16
am_libEGL_common_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_8) $(am__objects_10)
libEGL_common_la_OBJECTS = $(am_libEGL_common_la_OBJECTS)
@@USE_LIBGLVND_TRUE@@libEGL_mesa_la_DEPENDENCIES = libEGL_common.la
am__libEGL_mesa_la_SOURCES_DIST = main/eglglvnd.c \
	main/egldispatchstubs.h main/egldispatchstubs.c \
	g_egldispatchstubs.c g_egldispatchstubs.h
@@USE_LIBGLVND_TRUE@@am_libEGL_mesa_la_OBJECTS = main/eglglvnd.lo \
@@USE_LIBGLVND_TRUE@@	main/egldispatchstubs.lo \
@@USE_LIBGLVND_TRUE@@	g_egldispatchstubs.lo
libEGL_mesa_la_OBJECTS = $(am_libEGL_mesa_la_OBJECTS)
libEGL_mesa_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libEGL_mesa_la_LDFLAGS) $(LDFLAGS) -o \
	$@@
@@USE_LIBGLVND_TRUE@@am_libEGL_mesa_la_rpath = -rpath $(libdir)
d300 2
a301 5
SOURCES = $(libEGL_la_SOURCES) $(libEGL_common_la_SOURCES) \
	$(libEGL_mesa_la_SOURCES)
DIST_SOURCES = $(libEGL_la_SOURCES) \
	$(am__libEGL_common_la_SOURCES_DIST) \
	$(am__libEGL_mesa_la_SOURCES_DIST)
d307 2
a308 2
DATA = $(pkgconfig_DATA) $(vendorjson_DATA)
HEADERS = $(egl_HEADERS)
a513 2
ANDROID_CFLAGS = @@ANDROID_CFLAGS@@
ANDROID_LIBS = @@ANDROID_LIBS@@
d544 2
d558 1
a561 2
ETNAVIV_CFLAGS = @@ETNAVIV_CFLAGS@@
ETNAVIV_LIBS = @@ETNAVIV_LIBS@@
a608 1
LIBGLVND_DATADIR = @@LIBGLVND_DATADIR@@
d611 3
a613 1
LIBSENSORS_LIBS = @@LIBSENSORS_LIBS@@
a614 2
LIBUNWIND_CFLAGS = @@LIBUNWIND_CFLAGS@@
LIBUNWIND_LIBS = @@LIBUNWIND_LIBS@@
d618 1
d621 1
d625 1
d627 1
d633 1
d654 2
d675 2
d692 2
d702 1
d718 1
d747 1
a749 2
ZLIB_CFLAGS = @@ZLIB_CFLAGS@@
ZLIB_LIBS = @@ZLIB_LIBS@@
a837 1
	main/eglentrypoint.h \
d849 15
a863 23
	$(am__append_6) $(am__append_12) -I$(top_srcdir)/src/loader \
	-I$(top_srcdir)/src/egl/drivers/dri2 \
	-I$(top_srcdir)/src/gbm/backends/dri \
	-I$(top_srcdir)/src/egl/wayland/wayland-egl \
	-I$(top_builddir)/src/egl/wayland/wayland-drm \
	-I$(top_srcdir)/src/egl/wayland/wayland-drm \
	-DDEFAULT_DRIVER_DIR=\"$(DRI_DRIVER_SEARCH_DIR)\" \
	-D_EGL_BUILT_IN_DRIVER_DRI2 $(am__append_15)

# Depending on whether libglvnd is enabled, we'll build the EGL library as
# either libEGL.so.1 or libEGL_mesa.so.0. Using an automake substitution
# in the variable names breaks "make dist" target, so use a conenience library
# instead.
noinst_LTLIBRARIES = libEGL_common.la
libEGL_common_la_SOURCES = $(LIBEGL_C_FILES) \
	$(dri2_backend_core_FILES) $(dri2_backend_FILES) \
	$(dri3_backend_FILES)
libEGL_common_la_LIBADD = $(EGL_LIB_DEPS) $(am__append_2) \
	$(am__append_5) $(am__append_7) $(am__append_9) \
	$(am__append_13) $(top_builddir)/src/loader/libloader.la \
	$(DLOPEN_LIBS) $(LIBDRM_LIBS) $(CLOCK_LIB)
dri2_backend_FILES = $(am__append_3) $(am__append_8) $(am__append_10) \
	$(am__append_11) $(am__append_14)
a864 35
GLVND_GEN_DEPS = generate/gen_egl_dispatch.py \
	generate/egl.xml generate/eglFunctionList.py generate/genCommon.py \
	generate/egl_other.xml

PYTHON_GEN = $(AM_V_GEN)$(PYTHON2) $(PYTHON_FLAGS)
BUILT_SOURCES = g_egldispatchstubs.c g_egldispatchstubs.h
CLEANFILES = $(BUILT_SOURCES)
@@USE_LIBGLVND_TRUE@@vendorjsondir = @@LIBGLVND_DATADIR@@/glvnd/egl_vendor.d
@@USE_LIBGLVND_TRUE@@vendorjson_DATA = main/50_mesa.json
@@USE_LIBGLVND_FALSE@@lib_LTLIBRARIES = libEGL.la
@@USE_LIBGLVND_TRUE@@lib_LTLIBRARIES = libEGL_mesa.la
@@USE_LIBGLVND_TRUE@@libEGL_mesa_la_SOURCES = \
@@USE_LIBGLVND_TRUE@@	main/eglglvnd.c \
@@USE_LIBGLVND_TRUE@@	main/egldispatchstubs.h \
@@USE_LIBGLVND_TRUE@@	main/egldispatchstubs.c \
@@USE_LIBGLVND_TRUE@@	g_egldispatchstubs.c \
@@USE_LIBGLVND_TRUE@@	g_egldispatchstubs.h

@@USE_LIBGLVND_TRUE@@libEGL_mesa_la_LIBADD = libEGL_common.la
@@USE_LIBGLVND_TRUE@@libEGL_mesa_la_LDFLAGS = \
@@USE_LIBGLVND_TRUE@@	-no-undefined \
@@USE_LIBGLVND_TRUE@@	-version-number 0 \
@@USE_LIBGLVND_TRUE@@	$(BSYMBOLIC) \
@@USE_LIBGLVND_TRUE@@	$(GC_SECTIONS) \
@@USE_LIBGLVND_TRUE@@	$(LD_NO_UNDEFINED)

@@USE_LIBGLVND_FALSE@@libEGL_la_SOURCES = 
@@USE_LIBGLVND_FALSE@@libEGL_la_LIBADD = libEGL_common.la
@@USE_LIBGLVND_FALSE@@libEGL_la_LDFLAGS = \
@@USE_LIBGLVND_FALSE@@	-no-undefined \
@@USE_LIBGLVND_FALSE@@	-version-number 1:0 \
@@USE_LIBGLVND_FALSE@@	$(BSYMBOLIC) \
@@USE_LIBGLVND_FALSE@@	$(GC_SECTIONS) \
@@USE_LIBGLVND_FALSE@@	$(LD_NO_UNDEFINED)

d867 2
d877 1
a877 3
TESTS = egl-symbols-check \
	egl-entrypoint-check

d879 1
a879 1
	$(TESTS) \
d883 1
a883 3
	main/README.txt \
	$(GLVND_GEN_DEPS) \
	main/50_mesa.json
d885 1
a885 2
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am
a953 14

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libEGL.la: $(libEGL_la_OBJECTS) $(libEGL_la_DEPENDENCIES) $(EXTRA_libEGL_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libEGL_la_LINK) $(am_libEGL_la_rpath) $(libEGL_la_OBJECTS) $(libEGL_la_LIBADD) $(LIBS)
d1000 2
a1001 8
libEGL_common.la: $(libEGL_common_la_OBJECTS) $(libEGL_common_la_DEPENDENCIES) $(EXTRA_libEGL_common_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libEGL_common_la_OBJECTS) $(libEGL_common_la_LIBADD) $(LIBS)
main/eglglvnd.lo: main/$(am__dirstamp) main/$(DEPDIR)/$(am__dirstamp)
main/egldispatchstubs.lo: main/$(am__dirstamp) \
	main/$(DEPDIR)/$(am__dirstamp)

libEGL_mesa.la: $(libEGL_mesa_la_OBJECTS) $(libEGL_mesa_la_DEPENDENCIES) $(EXTRA_libEGL_mesa_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libEGL_mesa_la_LINK) $(am_libEGL_mesa_la_rpath) $(libEGL_mesa_la_OBJECTS) $(libEGL_mesa_la_LIBADD) $(LIBS)
a1012 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@./$(DEPDIR)/g_egldispatchstubs.Plo@@am__quote@@
a1024 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/egldispatchstubs.Plo@@am__quote@@
a1028 1
@@AMDEP_TRUE@@@@am__include@@ @@am__quote@@main/$(DEPDIR)/eglglvnd.Plo@@am__quote@@
d1086 1
a1086 1
install-vendorjsonDATA: $(vendorjson_DATA)
d1088 1
a1088 1
	@@list='$(vendorjson_DATA)'; test -n "$(vendorjsondir)" || list=; \
d1090 2
a1091 2
	  echo " $(MKDIR_P) '$(DESTDIR)$(vendorjsondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vendorjsondir)" || exit 1; \
d1098 2
a1099 2
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vendorjsondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vendorjsondir)" || exit $$?; \
d1102 1
a1102 1
uninstall-vendorjsonDATA:
d1104 1
a1104 1
	@@list='$(vendorjson_DATA)'; test -n "$(vendorjsondir)" || list=; \
d1106 2
a1107 2
	dir='$(DESTDIR)$(vendorjsondir)'; $(am__uninstall_files_from_dir)
install-eglHEADERS: $(egl_HEADERS)
d1109 1
a1109 1
	@@list='$(egl_HEADERS)'; test -n "$(egldir)" || list=; \
d1111 2
a1112 2
	  echo " $(MKDIR_P) '$(DESTDIR)$(egldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(egldir)" || exit 1; \
d1119 2
a1120 2
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(egldir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(egldir)" || exit $$?; \
d1123 1
a1123 1
uninstall-eglHEADERS:
d1125 1
a1125 1
	@@list='$(egl_HEADERS)'; test -n "$(egldir)" || list=; \
d1127 1
a1127 1
	dir='$(DESTDIR)$(egldir)'; $(am__uninstall_files_from_dir)
a1328 7
egl-entrypoint-check.log: egl-entrypoint-check
	@@p='egl-entrypoint-check'; \
	b='egl-entrypoint-check'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
d1376 1
a1376 2
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
d1381 1
a1381 1
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(vendorjsondir)" "$(DESTDIR)$(egldir)"; do \
d1384 1
a1384 2
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
a1408 1
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
a1420 1
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
d1426 1
a1426 1
	clean-noinstLTLIBRARIES mostlyclean-am
d1429 1
a1429 1
	-rm -rf ./$(DEPDIR) drivers/dri2/$(DEPDIR) main/$(DEPDIR)
d1446 2
a1447 2
install-data-am: install-eglHEADERS install-pkgconfigDATA \
	install-vendorjsonDATA
d1476 1
a1476 1
	-rm -rf ./$(DEPDIR) drivers/dri2/$(DEPDIR) main/$(DEPDIR)
d1493 2
a1494 2
uninstall-am: uninstall-eglHEADERS uninstall-libLTLIBRARIES \
	uninstall-pkgconfigDATA uninstall-vendorjsonDATA
d1496 1
a1496 1
.MAKE: all check check-am install install-am install-strip
d1500 7
a1506 7
	clean-libtool clean-local clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-eglHEADERS install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
d1509 6
a1514 7
	install-vendorjsonDATA installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-eglHEADERS \
	uninstall-libLTLIBRARIES uninstall-pkgconfigDATA \
	uninstall-vendorjsonDATA
a1517 11
g_egldispatchstubs.c: $(GLVND_GEN_DEPS)
	$(PYTHON_GEN) $(top_srcdir)/src/egl/generate/gen_egl_dispatch.py source \
		$(top_srcdir)/src/egl/generate/eglFunctionList.py \
		$(top_srcdir)/src/egl/generate/egl.xml \
		$(top_srcdir)/src/egl/generate/egl_other.xml > $@@

g_egldispatchstubs.h: $(GLVND_GEN_DEPS)
	$(PYTHON_GEN) $(top_srcdir)/src/egl/generate/gen_egl_dispatch.py header \
		$(top_srcdir)/src/egl/generate/eglFunctionList.py \
		$(top_srcdir)/src/egl/generate/egl.xml \
		$(top_srcdir)/src/egl/generate/egl_other.xml > $@@
@


