head	1.1;
branch	1.1.1;
access;
symbols
	mesa-17_1_6:1.1.1.5
	OPENBSD_6_1:1.1.1.4.0.2
	OPENBSD_6_1_BASE:1.1.1.4
	mesa-13_0_6:1.1.1.4
	mesa-13_0_5:1.1.1.4
	mesa-13_0_3:1.1.1.3
	mesa-13_0_2:1.1.1.3
	OPENBSD_6_0:1.1.1.2.0.4
	OPENBSD_6_0_BASE:1.1.1.2
	mesa-11_2_2:1.1.1.2
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	mesa-11_0_9:1.1.1.1
	mesa-11_0_8:1.1.1.1
	mesa-11_0_6:1.1.1.1
	mesa:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2015.11.22.02.40.50;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	bJUptkbooQfJPk5r;

1.1.1.1
date	2015.11.22.02.40.50;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	bJUptkbooQfJPk5r;

1.1.1.2
date	2016.05.29.10.16.09;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	OwGfrJACrYJkCVJ4;

1.1.1.3
date	2016.12.11.08.32.44;	author jsg;	state Exp;
branches;
next	1.1.1.4;
commitid	uuv5VTS15jglEDZU;

1.1.1.4
date	2017.02.26.12.13.15;	author jsg;	state Exp;
branches;
next	1.1.1.5;
commitid	xZcdklZavddTKAf1;

1.1.1.5
date	2017.08.14.09.37.23;	author jsg;	state Exp;
branches;
next	;
commitid	enNyoMGkcgwM3Ww6;


desc
@@


1.1
log
@Initial revision
@
text
@# Copyright Â© 2012 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

include Makefile.sources

AM_CFLAGS = \
	-I$(top_srcdir)/include \
	-I$(top_srcdir)/src/egl/main \
	-I$(top_srcdir)/src/gbm/main \
	-I$(top_srcdir)/src \
	$(DEFINES) \
	$(VISIBILITY_CFLAGS) \
	$(LIBDRM_CFLAGS) \
	$(EGL_CFLAGS) \
	-D_EGL_NATIVE_PLATFORM=$(EGL_NATIVE_PLATFORM)

lib_LTLIBRARIES = libEGL.la

libEGL_la_SOURCES = \
	$(LIBEGL_C_FILES)

libEGL_la_LIBADD = \
	$(EGL_LIB_DEPS)
libEGL_la_LDFLAGS = \
	-no-undefined \
	-version-number 1:0 \
	$(BSYMBOLIC) \
	$(GC_SECTIONS) \
	$(LD_NO_UNDEFINED)

dri2_backend_FILES =

if HAVE_EGL_PLATFORM_X11
AM_CFLAGS += -DHAVE_X11_PLATFORM
AM_CFLAGS += $(XCB_DRI2_CFLAGS)
libEGL_la_LIBADD += $(XCB_DRI2_LIBS)
dri2_backend_FILES += drivers/dri2/platform_x11.c
endif

if HAVE_EGL_PLATFORM_WAYLAND
AM_CFLAGS += -DHAVE_WAYLAND_PLATFORM
AM_CFLAGS += $(WAYLAND_CFLAGS)
libEGL_la_LIBADD += $(WAYLAND_LIBS)
libEGL_la_LIBADD += $(LIBDRM_LIBS)
libEGL_la_LIBADD += $(top_builddir)/src/egl/wayland/wayland-drm/libwayland-drm.la
dri2_backend_FILES += drivers/dri2/platform_wayland.c
endif

if HAVE_EGL_PLATFORM_DRM
AM_CFLAGS += -DHAVE_DRM_PLATFORM
libEGL_la_LIBADD += $(top_builddir)/src/gbm/libgbm.la
dri2_backend_FILES += drivers/dri2/platform_drm.c
endif

if HAVE_EGL_PLATFORM_SURFACELESS
AM_CFLAGS += -DHAVE_SURFACELESS_PLATFORM
dri2_backend_FILES += drivers/dri2/platform_surfaceless.c
endif

if HAVE_EGL_DRIVER_DRI2
AM_CFLAGS += \
	-I$(top_srcdir)/src/loader \
	-I$(top_srcdir)/src/egl/drivers/dri2 \
	-I$(top_srcdir)/src/gbm/backends/dri \
	-I$(top_srcdir)/src/egl/wayland/wayland-egl \
	-I$(top_srcdir)/src/egl/wayland/wayland-drm \
	-I$(top_builddir)/src/egl/wayland/wayland-drm \
	-DDEFAULT_DRIVER_DIR=\"$(DRI_DRIVER_SEARCH_DIR)\" \
	-D_EGL_BUILT_IN_DRIVER_DRI2

libEGL_la_SOURCES += \
	$(dri2_backend_core_FILES) \
	$(dri2_backend_FILES)

libEGL_la_LIBADD += $(top_builddir)/src/loader/libloader.la
libEGL_la_LIBADD += $(DLOPEN_LIBS) $(LIBDRM_LIBS)
endif

include $(top_srcdir)/install-lib-links.mk

pkgconfigdir = $(libdir)/pkgconfig

pkgconfig_DATA = main/egl.pc

khrdir = $(includedir)/KHR
khr_HEADERS = $(top_srcdir)/include/KHR/khrplatform.h

egldir = $(includedir)/EGL
egl_HEADERS = \
	$(top_srcdir)/include/EGL/eglext.h \
	$(top_srcdir)/include/EGL/egl.h \
	$(top_srcdir)/include/EGL/eglextchromium.h \
	$(top_srcdir)/include/EGL/eglmesaext.h \
	$(top_srcdir)/include/EGL/eglplatform.h

EXTRA_DIST = \
	SConscript \
	drivers/haiku \
	docs \
	main/egl.def \
	main/README.txt
@


1.1.1.1
log
@import Mesa 11.0.6
@
text
@@


1.1.1.2
log
@Import Mesa 11.2.2
@
text
@a49 1
dri3_backend_FILES =
a55 8

if HAVE_DRI3
dri3_backend_FILES += \
	drivers/dri2/platform_x11_dri3.c \
	drivers/dri2/platform_x11_dri3.h

libEGL_la_LIBADD += $(top_builddir)/src/loader/libloader_dri3_helper.la
endif
d91 1
a91 2
	$(dri2_backend_FILES) \
	$(dri3_backend_FILES)
a113 2
TESTS = egl-symbols-check

a114 1
	egl-symbols-check \
@


1.1.1.3
log
@Import Mesa 13.0.2
@
text
@d52 1
a52 1
if HAVE_PLATFORM_X11
d67 1
a67 1
if HAVE_PLATFORM_WAYLAND
a86 5
if HAVE_EGL_PLATFORM_ANDROID
AM_CFLAGS += -DHAVE_ANDROID_PLATFORM
dri2_backend_FILES += drivers/dri2/platform_android.c
endif

d104 1
a104 1
libEGL_la_LIBADD += $(DLOPEN_LIBS) $(LIBDRM_LIBS) $(CLOCK_LIB)
d130 1
@


1.1.1.4
log
@Import Mesa 13.0.5
@
text
@d98 1
a99 1
	-I$(top_srcdir)/src/egl/wayland/wayland-drm \
@


1.1.1.5
log
@Import Mesa 17.1.6
@
text
@d35 3
a37 6
# Depending on whether libglvnd is enabled, we'll build the EGL library as
# either libEGL.so.1 or libEGL_mesa.so.0. Using an automake substitution
# in the variable names breaks "make dist" target, so use a conenience library
# instead.
noinst_LTLIBRARIES = libEGL_common.la
libEGL_common_la_SOURCES = \
d40 1
a40 1
libEGL_common_la_LIBADD = \
d42 6
d53 1
d55 1
a55 1
libEGL_common_la_LIBADD += $(XCB_DRI2_LIBS)
d63 1
a63 1
libEGL_common_la_LIBADD += $(top_builddir)/src/loader/libloader_dri3_helper.la
d68 1
d70 3
a72 3
libEGL_common_la_LIBADD += $(WAYLAND_LIBS)
libEGL_common_la_LIBADD += $(LIBDRM_LIBS)
libEGL_common_la_LIBADD += $(top_builddir)/src/egl/wayland/wayland-drm/libwayland-drm.la
d76 3
a78 2
if HAVE_PLATFORM_DRM
libEGL_common_la_LIBADD += $(top_builddir)/src/gbm/libgbm.la
d82 2
a83 1
if HAVE_PLATFORM_SURFACELESS
d87 2
a88 3
if HAVE_PLATFORM_ANDROID
AM_CFLAGS += $(ANDROID_CFLAGS)
libEGL_common_la_LIBADD += $(ANDROID_LIBS)
d92 1
d103 1
a103 1
libEGL_common_la_SOURCES += \
d108 3
a110 58
libEGL_common_la_LIBADD += $(top_builddir)/src/loader/libloader.la
libEGL_common_la_LIBADD += $(DLOPEN_LIBS) $(LIBDRM_LIBS) $(CLOCK_LIB)

GLVND_GEN_DEPS = generate/gen_egl_dispatch.py \
	generate/egl.xml generate/eglFunctionList.py generate/genCommon.py \
	generate/egl_other.xml

PYTHON_GEN = $(AM_V_GEN)$(PYTHON2) $(PYTHON_FLAGS)
g_egldispatchstubs.c: $(GLVND_GEN_DEPS)
	$(PYTHON_GEN) $(top_srcdir)/src/egl/generate/gen_egl_dispatch.py source \
		$(top_srcdir)/src/egl/generate/eglFunctionList.py \
		$(top_srcdir)/src/egl/generate/egl.xml \
		$(top_srcdir)/src/egl/generate/egl_other.xml > $@@

g_egldispatchstubs.h: $(GLVND_GEN_DEPS)
	$(PYTHON_GEN) $(top_srcdir)/src/egl/generate/gen_egl_dispatch.py header \
		$(top_srcdir)/src/egl/generate/eglFunctionList.py \
		$(top_srcdir)/src/egl/generate/egl.xml \
		$(top_srcdir)/src/egl/generate/egl_other.xml > $@@

BUILT_SOURCES = g_egldispatchstubs.c g_egldispatchstubs.h
CLEANFILES = $(BUILT_SOURCES)

if USE_LIBGLVND
AM_CFLAGS += \
	$(GLVND_CFLAGS)

vendorjsondir = @@LIBGLVND_DATADIR@@/glvnd/egl_vendor.d
vendorjson_DATA = main/50_mesa.json

lib_LTLIBRARIES = libEGL_mesa.la
libEGL_mesa_la_SOURCES = \
	main/eglglvnd.c \
	main/egldispatchstubs.h \
	main/egldispatchstubs.c \
	g_egldispatchstubs.c \
	g_egldispatchstubs.h
libEGL_mesa_la_LIBADD = libEGL_common.la
libEGL_mesa_la_LDFLAGS = \
	-no-undefined \
	-version-number 0 \
	$(BSYMBOLIC) \
	$(GC_SECTIONS) \
	$(LD_NO_UNDEFINED)

else # USE_LIBGLVND

lib_LTLIBRARIES = libEGL.la
libEGL_la_SOURCES =
libEGL_la_LIBADD = libEGL_common.la
libEGL_la_LDFLAGS = \
	-no-undefined \
	-version-number 1:0 \
	$(BSYMBOLIC) \
	$(GC_SECTIONS) \
	$(LD_NO_UNDEFINED)

endif # USE_LIBGLVND
d118 3
d129 1
a129 2
TESTS = egl-symbols-check \
	egl-entrypoint-check
d132 1
a132 1
	$(TESTS) \
d136 1
a136 3
	main/README.txt \
	$(GLVND_GEN_DEPS) \
	main/50_mesa.json
@


