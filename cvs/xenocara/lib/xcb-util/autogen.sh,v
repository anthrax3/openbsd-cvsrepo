head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.8
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.2
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.4
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.2
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.04.06.12.38.11;	author matthieu;	state Exp;
branches;
next	1.1;
commitid	88U3Nil6dkgP79Vi;

1.1
date	2014.04.14.19.26.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to xcb-util 0.4.0
@
text
@#! /bin/sh

srcdir=`dirname $0`
test -z "$srcdir" && srcdir=.

ORIGDIR=`pwd`
cd $srcdir

# If this is a git checkout, verify that the submodules are initialized,
# otherwise autotools will just fail with an unhelpful error message.
if [ -d ".git" ] && [ -r ".gitmodules" ]
then
	# If git is not in PATH, this will not return 0, thus not keeping us
	# from building. Since the message is worthless when git is not
	# installed, this is what we want.
	if git submodule status 2>/dev/null | grep -q '^-'
	then
		echo "You have uninitialized git submodules." >&2
		echo "Please run: git submodule update --init" >&2
		exit 1
	fi
fi

autoreconf -v --install || exit 1
cd $ORIGDIR || exit $?

if test -z "$NOCONFIGURE"; then
    $srcdir/configure "$@@"
fi
@


1.1
log
@Update xcb-utils to 0.3.9. Tested by naddy@@, shadchin@@ and ajacoutot@@
who I forgot to thank for testing libxcb-1.10 too.
@
text
@d9 15
d27 3
a29 1
$srcdir/configure --enable-maintainer-mode "$@@"
@

