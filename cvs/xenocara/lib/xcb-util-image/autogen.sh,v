head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.6
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.2
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.1.1.0.4
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.2
	OPENBSD_5_6_BASE:1.1.1.1
	v0_3_9:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2015.04.06.12.39.04;	author matthieu;	state Exp;
branches;
next	1.1;
commitid	wzV88ePIVNcVqmTc;

1.1
date	2014.04.14.19.29.34;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2014.04.14.19.29.34;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to xcb-util-image 0.4.0
@
text
@#! /bin/sh

srcdir=`dirname $0`
test -z "$srcdir" && srcdir=.

ORIGDIR=`pwd`
cd $srcdir

# If this is a git checkout, verify that the submodules are initialized,
# otherwise autotools will just fail with an unhelpful error message.
if [ -d ".git" ] && [ -r ".gitmodules" ]
then
	# If git is not in PATH, this will not return 0, thus not keeping us
	# from building. Since the message is worthless when git is not
	# installed, this is what we want.
	if git submodule status 2>/dev/null | grep -q '^-'
	then
		echo "You have uninitialized git submodules." >&2
		echo "Please run: git submodule update --init" >&2
		exit 1
	fi
fi

autoreconf -v --install || exit 1
cd $ORIGDIR || exit $?

$srcdir/configure --enable-maintainer-mode "$@@"
@


1.1
log
@Initial revision
@
text
@d9 15
@


1.1.1.1
log
@Import xcb-util-image 0.3.9
@
text
@@
