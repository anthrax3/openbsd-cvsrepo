head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.18
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.16
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.14
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.12
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v1_0_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.5
date	2012.03.10.14.12.25;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.31.15.23.42;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.27.20.04.38;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.24.13.31.12;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.18.20.59.42;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.09.18.20.59.42;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update to libXinerama 1.1.2
@
text
@.\"
.\" Copyright (c) 2007, Oracle and/or its affiliates. All rights reserved.
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining a
.\" copy of this software and associated documentation files (the "Software"),
.\" to deal in the Software without restriction, including without limitation
.\" the rights to use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or sell copies of the Software, and to permit persons to whom the
.\" Software is furnished to do so, subject to the following conditions:
.\"
.\" The above copyright notice and this permission notice (including the next
.\" paragraph) shall be included in all copies or substantial portions of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.de TQ
.br
.ns
.TP \\$1
..
.TH XINERAMA __libmansuffix__ __vendorversion__
.SH NAME
Xinerama \- API for Xinerama extension to X11 Protocol
.SH SYNOPSIS
\&#include <X11/extensions/Xinerama.h>
.nf
.sp
Bool XineramaQueryExtension \^(\^Display *\fIdpy\fP,
	int *\fIevent_base_return\fP, int *\fIerror_base_return\fP\^);
.sp
Status XineramaQueryVersion \^(\^Display *\fIdpy\fP,
	int *\fImajor_version_return\fP,
	int *\fIminor_version_return\fP\^);
.sp
Bool XineramaIsActive \^(\^Display *\fIdpy\fP\^);
.sp
XineramaScreenInfo * XineramaQueryScreens \^(\^Display *\fIdpy\fP,
	int *\fInumber\fP\^);
.fi
.SH ARGUMENTS
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.IP \fIevent_base_return\fP 1i
Specifies the return location for the assigned base event code
.IP \fIerror_base_return\fP 1i
Specifies the return location for the assigned base error code
.IP \fImajor_version_return\fP 1i
Returns the major version supported by the server
.IP \fIminor_version_return\fP 1i
Returns the minor version supported by the server
.IP \fInumber\fP 1i
Returns the number of entries in the returned XineramaScreenInfo array.
.SH DESCRIPTION
.B Xinerama
is a simple library designed to interface the Xinerama Extension for
retrieving information about physical output devices which may be combined
into a single logical X screen.

.SH FUNCTIONS

.SS \fBXineramaQueryExtension()\fR

.LP
The XineramaQueryExtension function queries the Xserver to determine the
availability of the Xinerama Extension. If the extension is available, the
return value is True, and event_base_return and error_base_return are set to
the base event number and base error number for the extension, respectively.
Otherwise, the return value is False, and the values of event_base_return and
error_base_return are undefined.
.sp

.SS \fBXineramaQueryVersion()\fR

.LP
The XineramaQueryVersion function returns the version of the Xinerama extension
implemented by the Xserver. The version is returned in major_version_return
and minor_version_return. The major version will be incremented for protocol
incompatible changes, and the minor version will be incremented for small,
upwardly compatible changes.
.LP
If the Xinerama library is compatible with the version returned by the
server, it returns nonzero. If the server does not support the
XINERAMA extension, or if there was an error during communications
with the server, or if the server and library protocol versions are
incompatible, it returns zero.
.sp

.SS \fBXineramaIsActive()\fR

.LP
The XineramaIsActive function returns a Boolean operator used to determine if
Xinerama is activated on the screen. Returns True for active and False for
not active.
.sp

.SS \fBXineramaQueryScreens()\fR

.LP
The \fBXineramaQueryScreens()\fR function returns info about each
individual output device within the Xinerama Screen.  The integer
pointed to by the \fInumber\fR argument is updated to the number of
output devices listed in the returned array of \fIXineramaScreenInfo\fR
structures.  \fBXineramaQueryScreens()\fR returns NULL and sets \fInumber\fR
to 0 if Xinerama is not active.

The pointer returned should be released with XFree(__libmansuffix__)
when no longer needed.
.sp

.SH NOTE
The original API provided for interacting with the XINERAMA extension used
function names beginning with \fIXPanoramiX\fR.   That API is now deprecated
and this API should be used instead in new software.



@


1.4
log
@Update to libXinerama 1.1.1. No functional change.
@
text
@d28 1
a28 1
.TH XINERAMA __libmansuffix__ __vendorversion__ 
d33 1
a33 1
.nf    
d35 1
a35 1
Bool XineramaQueryExtension \^(\^Display *\fIdpy\fP, 
d44 1
a44 1
XineramaScreenInfo * XineramaQueryScreens \^(\^Display *\fIdpy\fP, 
d62 1
a62 1
is a simple library designed to interface the Xinerama Extension for 
d71 2
a72 2
The XineramaQueryExtension function queries the Xserver to determine the 
availability of the Xinerama Extension. If the extension is available, the 
d85 1
a85 1
incompatible changes, and the minor version will be incremented for small, 
d98 2
a99 2
The XineramaIsActive function returns a Boolean operator used to determine if 
Xinerama is activated on the screen. Returns True for active and False for 
d110 1
a110 1
structures.  \fBXineramaQueryScreens()\fR returns NULL and sets \fInumber\fR 
d113 1
a113 1
The pointer returned should be released with XFree(__libmansuffix__) 
@


1.3
log
@Update to libXinerama 1.1
@
text
@d2 1
d4 6
a9 1
.\" Copyright Â© 2007 Sun Microsystems, Inc.  All rights reserved.
d11 3
a13 24
.\" Permission is hereby granted, free of charge, to any person obtaining a
.\" copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, and/or sell copies of the Software, and to permit persons
.\" to whom the Software is furnished to do so, provided that the above
.\" copyright notice(s) and this permission notice appear in all copies of
.\" the Software and that both the above copyright notice(s) and this
.\" permission notice appear in supporting documentation.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
.\" OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
.\" HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
.\" INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
.\" FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
.\" NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
.\" WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\" 
.\" Except as contained in this notice, the name of a copyright holder
.\" shall not be used in advertising or otherwise to promote the sale, use
.\" or other dealings in this Software without prior written authorization
.\" of the copyright holder.
d15 7
@


1.2
log
@update to libXinerama 1.0.3
@
text
@d44 1
a44 1
	int *\fIevent_basep\fP, int *\fIerror_basep\fP\^);
d47 2
a48 2
	int *\fImajor_versionp\fP,
	int *\fIminor_versionp\fP\^);
d58 1
a58 1
.IP \fIevent_basep\fP 1i
d60 1
a60 1
.IP \fIerror_basep\fP 1i
d62 1
a62 1
.IP \fImajor_versionp\fP 1i
d64 1
a64 1
.IP \fIminor_versionp\fP 1i
d81 4
a84 4
return value is True, and event_base and error_base are set to the base event 
number and base error number for the extension, respectively. Otherwise, the 
return value is False, and the values of event_base and error_base are 
undefined.
d91 2
a92 2
implemented by the Xserver. The version is returned in major_versionp and 
minor_versionp. The major version will be incremented for protocol 
@


1.1
log
@Initial revision
@
text
@d106 1
a106 1
The XineramaActive function returns a Boolean operator used to determine if 
@


1.1.1.1
log
@libXinerama 1.0.2
@
text
@@
