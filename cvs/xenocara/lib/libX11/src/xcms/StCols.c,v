head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.12
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.14
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_1_3:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_1_1:1.1.1.1
	v1_0_99_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.09.28.17.03.21;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.18.19.37.35;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.03.12.59.11;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.16.37.42;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.16.37.42;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.09.30.10.13.17;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to libX11 1.6.2. No API change.
@
text
@
/*
 * Code and supporting documentation (c) Copyright 1990 1991 Tektronix, Inc.
 * 	All Rights Reserved
 *
 * This file is a component of an X Window System-specific implementation
 * of Xcms based on the TekColor Color Management System.  Permission is
 * hereby granted to use, copy, modify, sell, and otherwise distribute this
 * software and its documentation for any purpose and without fee, provided
 * that this copyright, permission, and disclaimer notice is reproduced in
 * all copies of this software and in supporting documentation.  TekColor
 * is a trademark of Tektronix, Inc.
 *
 * Tektronix makes no representation about the suitability of this software
 * for any purpose.  It is provided "as is" and with all faults.
 *
 * TEKTRONIX DISCLAIMS ALL WARRANTIES APPLICABLE TO THIS SOFTWARE,
 * INCLUDING THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE.  IN NO EVENT SHALL TEKTRONIX BE LIABLE FOR ANY
 * SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER
 * RESULTING FROM LOSS OF USE, DATA, OR PROFITS, WHETHER IN AN ACTION OF
 * CONTRACT, NEGLIGENCE, OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR THE PERFORMANCE OF THIS SOFTWARE.
 *
 *
 *	NAME
 *		XcmsStCols.c
 *
 *	DESCRIPTION
 *		Source for XcmsStoreColors
 *
 *
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif
#include "Xlibint.h"
#include "Xcmsint.h"
#include "Cv.h"


/************************************************************************
 *									*
 *			PUBLIC ROUTINES					*
 *									*
 ************************************************************************/

/*
 *	NAME
 *		XcmsStoreColors - Store Colors
 *
 *	SYNOPSIS
 */
Status
XcmsStoreColors(
    Display *dpy,
    Colormap colormap,
    XcmsColor *pColors_in,
    unsigned int nColors,
    Bool *pCompressed)
/*
 *	DESCRIPTION
 *		Given device-dependent or device-independent color
 *		specifications, this routine will convert them to X RGB
 *		values then use it in a call to XStoreColors.
 *
 *	RETURNS
 *		XcmsFailure if failed;
 *		XcmsSuccess if it succeeded without gamut compression;
 *		XcmsSuccessWithCompression if it succeeded with gamut
 *			compression;
 *
 *		Since XStoreColors has no return value, this routine
 *		does not return color specifications of the colors actually
 *		stored.
 */
{
    XcmsColor Color1;
    XcmsColor *pColors_tmp;
    Status retval;

    /*
     * Make copy of array of color specifications so we don't
     * overwrite the contents.
     */
    if (nColors > 1) {
	pColors_tmp = Xmalloc(nColors * sizeof(XcmsColor));
    } else {
	pColors_tmp = &Color1;
    }
    memcpy((char *)pColors_tmp, (char *)pColors_in,
 	    nColors * sizeof(XcmsColor));

    /*
     * Call routine to store colors using the copied color structures
     */
    retval = _XcmsSetGetColors (XStoreColors, dpy, colormap,
	    pColors_tmp, nColors, XcmsRGBFormat, pCompressed);

    /*
     * Free copies as needed.
     */
    if (nColors > 1) {
	Xfree(pColors_tmp);
    }

    /*
     * Ah, finally return.
     */
    return(retval);
}
@


1.3
log
@Update to libX11 1.3.3. Tested on a bulk ports build by naddy@@.
@
text
@d88 1
a88 1
	pColors_tmp = (XcmsColor *) Xmalloc(nColors * sizeof(XcmsColor));
d105 1
a105 1
	Xfree((char *)pColors_tmp);
@


1.2
log
@update to libX11 1.2.1
@
text
@a0 1
/* $Xorg: StCols.c,v 1.3 2000/08/17 19:44:56 cpqbld Exp $ */
a33 1
/* $XFree86: xc/lib/X11/StCols.c,v 1.3 2001/01/17 19:41:44 dawes Exp $ */
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
 * 
d14 1
a14 1
 * 
d17 1
a17 1
 * 
d58 6
a63 7
XcmsStoreColors(dpy, colormap, pColors_in,
	nColors, pCompressed)
    Display *dpy;
    Colormap colormap;
    XcmsColor *pColors_in;
    unsigned int nColors;
    Bool *pCompressed;
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@libX11 1.1.3
@
text
@d58 7
a64 6
XcmsStoreColors(
    Display *dpy,
    Colormap colormap,
    XcmsColor *pColors_in,
    unsigned int nColors,
    Bool *pCompressed)
@

