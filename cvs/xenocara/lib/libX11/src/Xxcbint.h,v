head	1.7;
access;
symbols
	OPENBSD_6_0:1.6.0.6
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.4
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.2
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.5.0.12
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.3.0.6
	OPENBSD_4_5_BASE:1.1.1.3
	OPENBSD_4_4:1.1.1.3.0.4
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.2
	v1_1_3:1.1.1.3
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v1_1_1:1.1.1.2
	v1_0_99_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.11.03.10.21.31;	author matthieu;	state Exp;
branches;
next	1.6;
commitid	EvOPnI31yB1tDGgg;

1.6
date	2015.04.06.20.57.59;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	L5f7tv2EiGjtzoSu;

1.5
date	2012.03.27.19.19.38;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.30.19.19.38;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.04.10.33.18;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.03.12.59.11;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.16.37.13;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.16.37.13;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.12.16.16.40.47;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2007.09.30.10.12.43;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to libX11 1.6.4
@
text
@/* Copyright (C) 2003-2006 Jamey Sharp, Josh Triplett
 * This file is licensed under the MIT license. See the file COPYING. */

#ifndef XXCBINT_H
#define XXCBINT_H

#include <assert.h>
#include <stdint.h>
#include <X11/Xlibint.h>
#ifdef WIN32
#include <X11/Xwindows.h>
#endif
#include <X11/Xlib-xcb.h>
#include "locking.h"

#define XLIB_SEQUENCE_COMPARE(a,op,b)	(((int64_t) (a) - (int64_t) (b)) op 0)

typedef struct PendingRequest PendingRequest;
struct PendingRequest {
	PendingRequest *next;
	uint64_t sequence;
	unsigned reply_waiter;
};

typedef struct _X11XCBPrivate {
	xcb_connection_t *connection;
	PendingRequest *pending_requests;
	PendingRequest *pending_requests_tail;
	xcb_generic_event_t *next_event;
	char *real_bufmax;
	char *reply_data;
	int reply_length;
	int reply_consumed;
	uint64_t last_flushed;
	enum XEventQueueOwner event_owner;
	XID next_xid;

	/* handle simultaneous threads waiting for responses */
	xcondition_t event_notify;
	int event_waiter;
	xcondition_t reply_notify;
} _X11XCBPrivate;

/* xcb_disp.c */

int _XConnectXCB(Display *dpy, _Xconst char *display, int *screenp);
void _XFreeX11XCBStructure(Display *dpy);

_X_HIDDEN
unsigned long _XNextRequest(Display *dpy);

#endif /* XXCBINT_H */
@


1.6
log
@update to libX11 1.6.3
@
text
@d16 1
a16 1
#define XLIB_SEQUENCE_COMPARE(a,op,b)	(((long) (a) - (long) (b)) op 0)
d21 1
a21 1
	unsigned long sequence;
d49 1
@


1.5
log
@Upate to libX11 1.5rc1. Tested by krw@@, mpi@@, shadchin@@.
@
text
@d49 2
@


1.4
log
@Update to libx11 1.4.2. Tested by ajacoutot@@, jasper@@ krw@@, landry@@,
shadchin@@ on various architectures.
Bump major.
@
text
@d10 3
@


1.3
log
@Update to libX11 1.3.5
@
text
@d43 1
a43 1
int _XConnectXCB(Display *dpy, _Xconst char *display, char **fullnamep, int *screenp);
@


1.2
log
@update to libX11 1.2.1
@
text
@d19 1
d25 1
a25 1
	PendingRequest **pending_requests_tail;
d35 1
a35 3
	/* handle simultaneous threads waiting for events,
	 * used in wait_or_poll_for_event
	 */
d38 1
@


1.1
log
@Initial revision
@
text
@d8 1
d11 1
d13 1
a13 2
#define XCB_SEQUENCE_COMPARE(a,op,b)	((int) ((a) - (b)) op 0)
#define assert_sequence_less(a,b) assert(XCB_SEQUENCE_COMPARE((a), <=, (b)))
d18 1
a18 1
	unsigned int sequence;
a21 1
	struct _XLockPtrs lock_fns;
d26 1
a26 4
	const char *request_extra;
	int request_extra_size;
	char *partial_request;
	int partial_request_offset;
d30 1
d33 6
a44 10

/* xcb_lock.c */

int _XCBInitDisplayLock(Display *dpy);

/* _XGetXCBBuffer and _XPutXCBBuffer calls must be paired and must not
 * be nested. */

void _XGetXCBBuffer(Display *dpy);
void _XPutXCBBuffer(Display *dpy);
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@Import libX11 1.1.1 from X.Org 7.2RC3
@
text
@a9 1
#include "locking.h" /* really just want X11/Xthreads.h but can't have it. */
a16 2
	xcondition_rec condition;
	int waiters; /* Number of threads waiting; -1 if no wait needed */
@


1.1.1.3
log
@libX11 1.1.3
@
text
@a47 1
void _XCBShutdownDisplayLock(Display *dpy);
@


