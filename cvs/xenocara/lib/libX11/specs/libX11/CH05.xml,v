head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.6
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.4
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.2
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.2
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2017.02.28.18.44.56;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	ZtHcePqyefEMgw1S;

1.5
date	2015.04.06.20.57.58;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	L5f7tv2EiGjtzoSu;

1.4
date	2013.08.26.19.57.27;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2012.03.27.19.19.38;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2011.08.27.15.34.15;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.30.19.19.37;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to libX11 1.6.5
@
text
@<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
	  "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd">
<chapter id='Pixmap_and_Cursor_Functions'>
<title>Pixmap and Cursor Functions</title>
<sect1 id="Creating_and_Freeing_Pixmaps">
<title>Creating and Freeing Pixmaps</title>
<!-- .XS -->
<!-- (SN Creating and Freeing Pixmaps -->
<!-- .XE -->
<para>
<!-- .LP -->
Pixmaps can only be used on the screen on which they were created.
Pixmaps are off-screen resources that are used for various operations,
such as defining cursors as tiling patterns 
or as the source for certain raster operations.
Most graphics requests can operate either on a window or on a pixmap.
A bitmap is a single bit-plane pixmap.
</para>
<para>
<!-- .LP -->
<!-- .sp -->
To create a pixmap of a given size, use
<xref linkend='XCreatePixmap' xrefstyle='select: title'/>.
</para>
<indexterm significance="preferred"><primary>XCreatePixmap</primary></indexterm>
<!-- .sM -->
<funcsynopsis id='XCreatePixmap'>
<funcprototype>
  <funcdef>Pixmap <function>XCreatePixmap</function></funcdef>
  <paramdef>Display *<parameter>display</parameter></paramdef>
  <paramdef>Drawable <parameter>d</parameter></paramdef>
  <paramdef>unsigned int <parameter>width</parameter></paramdef>
  <paramdef>unsigned int <parameter>height</parameter></paramdef>
  <paramdef>unsigned int <parameter>depth</parameter></paramdef>
</funcprototype>
</funcsynopsis>
<!-- .FN -->
<variablelist>
  <varlistentry>
    <term>
      <emphasis remap='I'>display</emphasis>
    </term>
    <listitem>
      <para>
Specifies the connection to the X server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>d</emphasis>
    </term>
    <listitem>
      <para>
Specifies which screen the pixmap is created on. 
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>width</emphasis>
    </term>
    <listitem>
      <para>
<!-- .br -->
<!-- .ns -->
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>height</emphasis>
    </term>
    <listitem>
      <para>
Specify the width and height, which define the dimensions of the pixmap.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>depth</emphasis>
    </term>
    <listitem>
      <para>
Specifies the depth of the pixmap.
    </para>
  </listitem>
  </varlistentry>
</variablelist>
<para>
<!-- .LP -->
<!-- .eM  -->
The
<xref linkend='XCreatePixmap' xrefstyle='select: title'/>
function creates a pixmap of the width, height, and depth you specified
and returns a pixmap ID that identifies it.
It is valid to pass an 
<symbol>InputOnly</symbol>
window to the drawable argument.
The width and height arguments must be nonzero,
or a 
<errorname>BadValue</errorname>
error results.
The depth argument must be one of the depths supported by the screen
of the specified drawable,
or a
<errorname>BadValue</errorname>
error results.
</para>
<para>
<!-- .LP -->
The server uses the specified drawable to determine on which screen
to create the pixmap.
The pixmap can be used only on this screen
and only with other drawables of the same depth (see
<xref linkend='XCopyPlane' xrefstyle='select: title'/>
for an exception to this rule).
The initial contents of the pixmap are undefined.
</para>
<para>
<!-- .LP -->
<xref linkend='XCreatePixmap' xrefstyle='select: title'/>
can generate
<errorname>BadAlloc</errorname>,
<errorname>BadDrawable</errorname>,
and
<errorname>BadValue</errorname>
errors.
</para>
<para>
<!-- .LP -->
<!-- .sp -->
To free all storage associated with a specified pixmap, use
<xref linkend='XFreePixmap' xrefstyle='select: title'/>.
</para>
<indexterm significance="preferred"><primary>XFreePixmap</primary></indexterm>
<!-- .sM -->
<funcsynopsis id='XFreePixmap'>
<funcprototype>
  <funcdef><function>XFreePixmap</function></funcdef>
  <paramdef>Display *<parameter>display</parameter></paramdef>
  <paramdef>Pixmap <parameter>pixmap</parameter></paramdef>
</funcprototype>
</funcsynopsis>
<!-- .FN	 -->
<variablelist>
  <varlistentry>
    <term>
      <emphasis remap='I'>display</emphasis>
    </term>
    <listitem>
      <para>
Specifies the connection to the X server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>pixmap</emphasis>
    </term>
    <listitem>
      <para>
Specifies the pixmap.
    </para>
  </listitem>
  </varlistentry>
</variablelist>
<para>
<!-- .LP -->
<!-- .eM  -->
The
<xref linkend='XFreePixmap' xrefstyle='select: title'/>
function first deletes the association between the pixmap ID and the pixmap.
Then, the X server frees the pixmap storage when there are no references to it.
The pixmap should never be referenced again.
</para>
<para>
<!-- .LP -->
<xref linkend='XFreePixmap' xrefstyle='select: title'/>
can generate a
<errorname>BadPixmap</errorname>
error.
</para>
</sect1>
<sect1 id="Creating_Recoloring_and_Freeing_Cursors">
<title>Creating, Recoloring, and Freeing Cursors</title>
<!-- .XS -->
<!-- (SN Creating, Recoloring, and Freeing Cursors  -->
<!-- .XE -->
<para>
<!-- .LP -->
Each window can have a different cursor defined for it.
Whenever the pointer is in a visible window, 
it is set to the cursor defined for that window.
If no cursor was defined for that window, 
the cursor is the one defined for the parent window.
</para>
<para>
<!-- .LP -->
From X's perspective, 
a cursor consists of a cursor source, mask, colors, and a hotspot. 
The mask pixmap determines the shape of the cursor and must be a depth
of one.
The source pixmap must have a depth of one,
and the colors determine the colors of the source.
The hotspot defines the point on the cursor that is reported
when a pointer event occurs.
There may be limitations imposed by the hardware on
cursors as to size and whether a mask is implemented. 
<indexterm><primary>XQueryBestCursor</primary></indexterm>
<xref linkend='XQueryBestCursor' xrefstyle='select: title'/>
can be used to find out what sizes are possible.
There is a standard font for creating cursors, but
Xlib provides functions that you can use to create cursors
from an arbitrary font or from bitmaps.
</para>
<para>
<!-- .LP -->
<!-- .sp -->
To create a cursor from the standard cursor font, use
<xref linkend='XCreateFontCursor' xrefstyle='select: title'/>.
</para>
<para>
#include &lt;X11/cursorfont.h&gt;
</para>

<indexterm significance="preferred"><primary>XCreateFontCursor</primary></indexterm>
<!-- .sM -->
<funcsynopsis id='XCreateFontCursor'>
<funcprototype>
  <funcdef>Cursor <function>XCreateFontCursor</function></funcdef>
  <paramdef>Display *<parameter>display</parameter></paramdef>
  <paramdef>unsigned int <parameter>shape</parameter></paramdef>
</funcprototype>
</funcsynopsis>

<!-- .FN -->
<variablelist>
  <varlistentry>
    <term>
      <emphasis remap='I'>display</emphasis>
    </term>
    <listitem>
      <para>
Specifies the connection to the X server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>shape</emphasis>
    </term>
    <listitem>
      <para>
Specifies the shape of the cursor.
    </para>
  </listitem>
  </varlistentry>
</variablelist>

<para>
<!-- .LP -->
<!-- .eM -->
X provides a set of standard cursor shapes in a special font named
cursor.
Applications are encouraged to use this interface for their cursors
because the font can be customized for the individual display type.
The shape argument specifies which glyph of the standard fonts
to use.
</para>
<para>
<!-- .LP -->
The hotspot comes from the information stored in the cursor font.
The initial colors of a cursor are a black foreground and a white
background (see
<xref linkend='XRecolorCursor' xrefstyle='select: title'/>).
For further information about cursor shapes,
see <link linkend="x_font_cursors">appendix B</link>.
</para>
<para>
<!-- .LP -->
<xref linkend='XCreateFontCursor' xrefstyle='select: title'/>
can generate
<errorname>BadAlloc</errorname>
and
<errorname>BadValue</errorname>
errors.
</para>
<para>
<!-- .LP -->
<!-- .sp -->
To create a cursor from font glyphs, use
<xref linkend='XCreateGlyphCursor' xrefstyle='select: title'/>.
</para>
<indexterm significance="preferred"><primary>XCreateGlyphCursor</primary></indexterm>
<!-- .sM -->
<funcsynopsis id='XCreateGlyphCursor'>
<funcprototype>
  <funcdef>Cursor <function>XCreateGlyphCursor</function></funcdef>
  <paramdef>Display *<parameter>display</parameter></paramdef>
  <paramdef>Font <parameter>source_font</parameter></paramdef>
  <paramdef>Font <parameter>mask_font</parameter></paramdef>
  <paramdef>unsigned int <parameter>source_char</parameter></paramdef>
  <paramdef>unsigned int <parameter>mask_char</parameter></paramdef>
  <paramdef>XColor *<parameter>foreground_color</parameter></paramdef>
  <paramdef>XColor *<parameter>background_color</parameter></paramdef>
</funcprototype>
</funcsynopsis>
<!-- .FN -->
<variablelist>
  <varlistentry>
    <term>
      <emphasis remap='I'>display</emphasis>
    </term>
    <listitem>
      <para>
Specifies the connection to the X server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>source_font</emphasis>
    </term>
    <listitem>
      <para>
Specifies the font for the source glyph.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>mask_font</emphasis>
    </term>
    <listitem>
      <para>
Specifies the font for the mask glyph or
<symbol>None</symbol>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>source_char</emphasis>
    </term>
    <listitem>
      <para>
Specifies the character glyph for the source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>mask_char</emphasis>
    </term>
    <listitem>
      <para>
Specifies the glyph character for the mask. 
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>foreground_color</emphasis>
    </term>
    <listitem>
      <para>
Specifies the <acronym>RGB</acronym> values for the foreground of the source. 
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>background_color</emphasis>
    </term>
    <listitem>
      <para>
Specifies the <acronym>RGB</acronym> values for the background of the source.
    </para>
  </listitem>
  </varlistentry>
</variablelist>
<para>
<!-- .LP -->
<!-- .eM -->
The
<xref linkend='XCreateGlyphCursor' xrefstyle='select: title'/>
function is similar to
<xref linkend='XCreatePixmapCursor' xrefstyle='select: title'/>
except that the source and mask bitmaps are obtained from the specified 
font glyphs.
The source_char must be a defined glyph in source_font, 
or a
<errorname>BadValue</errorname>
error results.
If mask_font is given, 
mask_char must be a defined glyph in mask_font,
or a
<errorname>BadValue</errorname>
error results.
The mask_font and character are optional.
The origins of the source_char and mask_char (if defined) glyphs are
positioned coincidently and define the hotspot. 
The source_char and mask_char need not have the same bounding box metrics, 
and there is no restriction on the placement of the hotspot relative to the bounding
boxes. 
If no mask_char is given, all pixels of the source are displayed.
You can free the fonts immediately by calling
<xref linkend='XFreeFont' xrefstyle='select: title'/>
if no further explicit references to them are to be made. 
</para>
<para>
<!-- .LP -->
For 2-byte matrix fonts, 
the 16-bit value should be formed with the byte1
member in the most significant byte and the byte2 member in the 
least significant byte.
</para>
<para>
<!-- .LP -->
<xref linkend='XCreateGlyphCursor' xrefstyle='select: title'/>
can generate
<errorname>BadAlloc</errorname>,
<errorname>BadFont</errorname>,
and
<errorname>BadValue</errorname>
errors.
</para>
<para>
<!-- .LP -->
<!-- .sp -->
To create a cursor from two bitmaps,
use
<xref linkend='XCreatePixmapCursor' xrefstyle='select: title'/>.
</para>
<indexterm significance="preferred"><primary>XCreatePixmapCursor</primary></indexterm>
<!-- .sM -->
<funcsynopsis id='XCreatePixmapCursor'>
<funcprototype>
  <funcdef>Cursor <function>XCreatePixmapCursor</function></funcdef>
  <paramdef>Display *<parameter>display</parameter></paramdef>
  <paramdef>Pixmap <parameter>source</parameter></paramdef>
  <paramdef>Pixmap <parameter>mask</parameter></paramdef>
  <paramdef>XColor *<parameter>foreground_color</parameter></paramdef>
  <paramdef>XColor *<parameter>background_color</parameter></paramdef>
  <paramdef>unsigned int <parameter>x</parameter></paramdef>
  <paramdef>unsigned int <parameter>y</parameter></paramdef>
</funcprototype>
</funcsynopsis>
<!-- .FN -->
<variablelist>
  <varlistentry>
    <term>
      <emphasis remap='I'>display</emphasis>
    </term>
    <listitem>
      <para>
Specifies the connection to the X server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>source</emphasis>
    </term>
    <listitem>
      <para>
Specifies the shape of the source cursor.
<!-- .\" *** JIM: NEED TO CHECK THIS. *** -->
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>mask</emphasis>
    </term>
    <listitem>
      <para>
Specifies the cursor's source bits to be displayed or
<symbol>None</symbol>.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>foreground_color</emphasis>
    </term>
    <listitem>
      <para>
Specifies the <acronym>RGB</acronym> values for the foreground of the source. 
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>background_color</emphasis>
    </term>
    <listitem>
      <para>
Specifies the <acronym>RGB</acronym> values for the background of the source.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>x</emphasis>
    </term>
    <listitem>
      <para>
<!-- .br -->
<!-- .ns -->
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>y</emphasis>
    </term>
    <listitem>
      <para>
Specify the x and y coordinates, which indicate the hotspot relative to the
source's origin.
    </para>
  </listitem>
  </varlistentry>
</variablelist>
<para>
<!-- .LP -->
<!-- .eM -->
The
<xref linkend='XCreatePixmapCursor' xrefstyle='select: title'/>
function creates a cursor and returns the cursor ID associated with it.
The foreground and background <acronym>RGB</acronym> values must be specified using
foreground_color and background_color,
even if the X server only has a
<symbol>StaticGray</symbol>
or
<symbol>GrayScale</symbol>
screen.
The foreground color is used for the pixels set to 1 in the
source, and the background color is used for the pixels set to 0.
Both source and mask, if specified, must have depth one (or a 
<errorname>BadMatch</errorname>
error results) but can have any root.
The mask argument defines the shape of the cursor.
The pixels set to 1 in the mask define which source pixels are displayed,
and the pixels set to 0 define which pixels are ignored.
If no mask is given, 
all pixels of the source are displayed.
The mask, if present, must be the same size as the pixmap defined by the 
source argument, or a
<errorname>BadMatch</errorname>
error results.
The hotspot must be a point within the source,
or a
<errorname>BadMatch</errorname>
error results.
</para>
<para>
<!-- .LP -->
The components of the cursor can be transformed arbitrarily to meet
display limitations.
The pixmaps can be freed immediately if no further explicit references
to them are to be made.
Subsequent drawing in the source or mask pixmap has an undefined effect on the
cursor.
The X server might or might not make a copy of the pixmap.
</para>
<para>
<!-- .LP -->
<xref linkend='XCreatePixmapCursor' xrefstyle='select: title'/>
can generate
<errorname>BadAlloc</errorname>
and
<errorname>BadPixmap</errorname>
errors.
</para>
<para>
<!-- .LP -->
<!-- .sp -->
To determine useful cursor sizes, use
<xref linkend='XQueryBestCursor' xrefstyle='select: title'/>.
</para>
<indexterm significance="preferred"><primary>XQueryBestCursor</primary></indexterm>
<!-- .sM -->
<funcsynopsis id='XQueryBestCursor'>
<funcprototype>
  <funcdef>Status <function>XQueryBestCursor</function></funcdef>
  <paramdef>Display *<parameter>display</parameter></paramdef>
  <paramdef>Drawable <parameter>d</parameter></paramdef>
  <paramdef>unsigned int <parameter>width</parameter></paramdef>
  <paramdef>unsigned int <parameter>height</parameter></paramdef>
  <paramdef>unsigned int *<parameter>width_return</parameter></paramdef>
  <paramdef>unsigned int *<parameter>height_return</parameter></paramdef>
</funcprototype>
</funcsynopsis>
<!-- .FN -->
<variablelist>
  <varlistentry>
    <term>
      <emphasis remap='I'>display</emphasis>
    </term>
    <listitem>
      <para>
Specifies the connection to the X server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>d</emphasis>
    </term>
    <listitem>
      <para>
Specifies the drawable, which indicates the screen.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>width</emphasis>
    </term>
    <listitem>
      <para>
<!-- .br -->
<!-- .ns -->
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>height</emphasis>
    </term>
    <listitem>
      <para>
Specify the width and height of the cursor that you want the size
information for.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>width_return</emphasis>
    </term>
    <listitem>
      <para>
<!-- .br -->
<!-- .ns -->
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>height_return</emphasis>
    </term>
    <listitem>
      <para>
Return the best width and height that is closest to the specified width 
and height.
    </para>
  </listitem>
  </varlistentry>
</variablelist>
<para>
<!-- .LP -->
<!-- .eM -->
Some displays allow larger cursors than other displays.
The
<xref linkend='XQueryBestCursor' xrefstyle='select: title'/>
function provides a way to find out what size cursors are actually
possible on the display.
<indexterm ><primary>Cursor</primary><secondary>limitations</secondary></indexterm>
It returns the largest size that can be displayed.
Applications should be prepared to use smaller cursors on displays that
cannot support large ones.
</para>
<para>
<!-- .LP -->
<xref linkend='XQueryBestCursor' xrefstyle='select: title'/>
can generate a
<errorname>BadDrawable</errorname>
error.
</para>
<para>
<!-- .LP -->
<!-- .sp -->
To change the color of a given cursor, use
<xref linkend='XRecolorCursor' xrefstyle='select: title'/>.
</para>
<indexterm significance="preferred"><primary>XRecolorCursor</primary></indexterm>
<!-- .sM -->
<funcsynopsis id='XRecolorCursor'>
<funcprototype>
  <funcdef><function>XRecolorCursor</function></funcdef>
  <paramdef>Display *<parameter>display</parameter></paramdef>
  <paramdef>Cursor <parameter>cursor</parameter></paramdef>
  <paramdef>XColor *<parameter>foreground_color</parameter></paramdef>
  <paramdef>XColor *<parameter>background_color</parameter></paramdef>
</funcprototype>
</funcsynopsis>
<!-- .FN -->
<variablelist>
  <varlistentry>
    <term>
      <emphasis remap='I'>display</emphasis>
    </term>
    <listitem>
      <para>
Specifies the connection to the X server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>cursor</emphasis>
    </term>
    <listitem>
      <para>
Specifies the cursor. 
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>foreground_color</emphasis>
    </term>
    <listitem>
      <para>
Specifies the <acronym>RGB</acronym> values for the foreground of the source. 
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>background_color</emphasis>
    </term>
    <listitem>
      <para>
Specifies the <acronym>RGB</acronym> values for the background of the source.
    </para>
  </listitem>
  </varlistentry>
</variablelist>
<para>
<!-- .LP -->
<!-- .eM -->
The
<xref linkend='XRecolorCursor' xrefstyle='select: title'/>
function changes the color of the specified cursor, and
if the cursor is being displayed on a screen,
the change is visible immediately.
The pixel members of the
<structname>XColor</structname>
structures are ignored; only the <acronym>RGB</acronym> values are used.
</para>
<para>
<!-- .LP -->
<xref linkend='XRecolorCursor' xrefstyle='select: title'/>
can generate a
<errorname>BadCursor</errorname>
error.
</para>
<para>
<!-- .LP -->
<!-- .sp -->
To free (destroy) a given cursor, use
<xref linkend='XFreeCursor' xrefstyle='select: title'/>.
</para>
<indexterm significance="preferred"><primary>XFreeCursor</primary></indexterm>
<!-- .sM -->
<funcsynopsis id='XFreeCursor'>
<funcprototype>
  <funcdef><function>XFreeCursor</function></funcdef>
  <paramdef>Display *<parameter>display</parameter></paramdef>
  <paramdef>Cursor <parameter>cursor</parameter></paramdef>
</funcprototype>
</funcsynopsis>
<!-- .FN -->
<variablelist>
  <varlistentry>
    <term>
      <emphasis remap='I'>display</emphasis>
    </term>
    <listitem>
      <para>
Specifies the connection to the X server.
      </para>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>
      <emphasis remap='I'>cursor</emphasis>
    </term>
    <listitem>
      <para>
Specifies the cursor. 
    </para>
  </listitem>
  </varlistentry>
</variablelist>
<para>
<!-- .LP -->
<!-- .eM  -->
The
<xref linkend='XFreeCursor' xrefstyle='select: title'/>
function deletes the association between the cursor resource ID 
and the specified cursor.
The cursor storage is freed when no other resource references it.
The specified cursor ID should not be referred to again.
</para>
<para>
<!-- .LP -->
<xref linkend='XFreeCursor' xrefstyle='select: title'/>
can generate a
<errorname>BadCursor</errorname>
error.
<!-- .bp -->

</para>
</sect1>
</chapter>
@


1.5
log
@update to libX11 1.6.3
@
text
@d31 2
a32 2
  <paramdef>Display<parameter> *display</parameter></paramdef>
  <paramdef>Drawable<parameter> d</parameter></paramdef>
d35 1
a35 1
  <paramdef>unsigned int <parameter> depth</parameter></paramdef>
d143 2
a144 2
  <paramdef>Display<parameter> *display</parameter></paramdef>
  <paramdef>Pixmap<parameter> pixmap</parameter></paramdef>
d234 2
a235 2
  <paramdef>Display<parameter> *display</parameter></paramdef>
  <paramdef>unsigned int <parameter> shape</parameter></paramdef>
d302 7
a308 5
  <paramdef>Display<parameter> *display</parameter></paramdef>
  <paramdef>Fontsource_font,<parameter> mask_font</parameter></paramdef>
  <paramdef>unsigned int source_char,<parameter> mask_char</parameter></paramdef>
  <paramdef>XColor<parameter> *foreground_color</parameter></paramdef>
  <paramdef>XColor<parameter> *background_color</parameter></paramdef>
d443 7
a449 6
  <paramdef>Display<parameter> *display</parameter></paramdef>
  <paramdef>Pixmap<parameter> source</parameter></paramdef>
  <paramdef>Pixmap<parameter> mask</parameter></paramdef>
  <paramdef>XColor<parameter> *foreground_color</parameter></paramdef>
  <paramdef>XColor<parameter> *background_color</parameter></paramdef>
  <paramdef>unsigned int x,<parameter> y</parameter></paramdef>
d591 2
a592 2
  <paramdef>Display<parameter> *display</parameter></paramdef>
  <paramdef>Drawable<parameter> d</parameter></paramdef>
d595 2
a596 2
  <paramdef>unsigned int <parameter>*width_return</parameter></paramdef>
  <paramdef>unsigned int <parameter>*height_return</parameter></paramdef>
d697 4
a700 3
  <paramdef>Display<parameter> *display</parameter></paramdef>
  <paramdef>Cursor<parameter> cursor</parameter></paramdef>
  <paramdef>XColor*foreground_color,<parameter> *background_color</parameter></paramdef>
d776 2
a777 2
  <paramdef>Display<parameter> *display</parameter></paramdef>
  <paramdef>Cursor<parameter> cursor</parameter></paramdef>
@


1.4
log
@Update to libX11 1.6.1.
@
text
@d33 3
a35 2
  <paramdef>unsignedintwidth,<parameter> height</parameter></paramdef>
  <paramdef>unsignedint<parameter> depth</parameter></paramdef>
d235 1
a235 1
  <paramdef>unsignedint<parameter> shape</parameter></paramdef>
d304 1
a304 1
  <paramdef>unsignedintsource_char,<parameter> mask_char</parameter></paramdef>
d446 1
a446 1
  <paramdef>unsignedintx,<parameter> y</parameter></paramdef>
d590 4
a593 2
  <paramdef>unsignedintwidth,<parameter> height</parameter></paramdef>
  <paramdef>unsignedint*width_return,<parameter> *height_return</parameter></paramdef>
@


1.3
log
@Upate to libX11 1.5rc1. Tested by krw@@, mpi@@, shadchin@@.
@
text
@a55 1
<!-- .ds Wh , which define the dimensions of the pixmap -->
d76 1
a76 1
Specify the width and height(Wh.
a498 1
<!-- .ds Xy , which indicate the hotspot relative to the source's origin -->
d519 2
a520 1
Specify the x and y coordinates(Xy.
a601 1
<!-- .ds Dr , which indicates the screen -->
d611 1
a611 2
Specifies the drawable(Dr. 
<!-- .ds Wh \ of the cursor that you want the size information for -->
d632 2
a633 1
Specify the width and height(Wh.
@


1.2
log
@Update to libX11 1.4.4. Tested by ajacoutot@@, shadchin@@.
@
text
@d4 1
a4 1
<chapter id="pixmap_and_cursor_functions">
d24 2
a25 1
<function>XCreatePixmap</function>.
d28 1
a28 1
<funcsynopsis id='xcreatepixmap'>
a91 1
</para>
d96 1
a96 1
<function>XCreatePixmap</function>
d118 1
a118 1
<function>XCopyPlane</function>
d124 1
a124 1
<function>XCreatePixmap</function>
d136 2
a137 1
<function>XFreePixmap</function>.
d140 1
a140 1
<funcsynopsis id='xfreepixmap'>
a169 1
</para>
d174 1
a174 1
<function>XFreePixmap</function>
d181 1
a181 1
<function>XFreePixmap</function>
d213 1
a213 1
<function>XQueryBestCursor</function>
d223 1
a223 1
<function>XCreateFontCursor</function>.
d231 1
a231 1
<funcsynopsis id='xcreatefontcursor'>
d278 1
a278 1
<function>XRecolorCursor</function>).
d284 1
a284 1
<function>XCreateFontCursor</function>
d295 2
a296 1
<function>XCreateGlyphCursor</function>.
d299 1
a299 1
<funcsynopsis id='xcreateglyphcursor'>
a382 1
</para>
d387 1
a387 1
<function>XCreateGlyphCursor</function>
d389 1
a389 1
<function>XCreatePixmapCursor</function>
d409 1
a409 1
<function>XFreeFont</function>
d421 1
a421 1
<function>XCreateGlyphCursor</function>
d434 2
a435 1
<function>XCreatePixmapCursor</function>.
d438 1
a438 1
<funcsynopsis id='xcreatepixmapcursor'>
a525 1
</para>
d530 1
a530 1
<function>XCreatePixmapCursor</function>
d570 1
a570 1
<function>XCreatePixmapCursor</function>
d581 2
a582 1
<function>XQueryBestCursor</function>.
d585 1
a585 1
<funcsynopsis id='xquerybestcursor'>
a661 1
</para>
d667 1
a667 1
<function>XQueryBestCursor</function>
d677 1
a677 1
<function>XQueryBestCursor</function>
d686 2
a687 1
<function>XRecolorCursor</function>.
d690 1
a690 1
<funcsynopsis id='xrecolorcursor'>
a740 1
</para>
d745 1
a745 1
<function>XRecolorCursor</function>
d755 1
a755 1
<function>XRecolorCursor</function>
d764 2
a765 1
<function>XFreeCursor</function>.
d768 1
a768 1
<funcsynopsis id='xfreecursor'>
a797 1
</para>
d802 1
a802 1
<function>XFreeCursor</function>
d810 1
a810 1
<function>XFreeCursor</function>
@


1.1
log
@Update to libx11 1.4.2. Tested by ajacoutot@@, jasper@@ krw@@, landry@@,
shadchin@@ on various architectures.
Bump major.
@
text
@d27 1
a27 1
<funcsynopsis>
d139 1
a139 1
<funcsynopsis>
d231 1
a231 1
<funcsynopsis>
d280 1
a280 1
see appendix B.
d298 1
a298 1
<funcsynopsis>
d437 1
a437 1
<funcsynopsis>
d584 1
a584 1
<funcsynopsis>
d689 1
a689 1
<funcsynopsis>
d767 1
a767 1
<funcsynopsis>
@

