head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.14
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.12
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	v1_1_3:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v1_1_1:1.1.1.2
	v1_0_99_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.4
date	2013.04.28.16.55.55;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.18.19.37.30;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.11.20.55.42;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.16.38.50;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.16.38.50;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.12.16.16.43.12;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to libX11 1.6RC. No bump needed.
@
text
@'\" t
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining
.\" a copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or sell copies of the Software, and to
.\" permit persons to whom the Software is furnished to do so, subject to
.\" the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be included
.\" in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained in this notice, the name of the X Consortium shall
.\" not be used in advertising or otherwise to promote the sale, use or
.\" other dealings in this Software without prior written authorization
.\" from the X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Equipment Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission to use, copy, modify and distribute this documentation for
.\" any purpose and without fee is hereby granted, provided that the above
.\" copyright notice appears in all copies and that both that copyright notice
.\" and this permission notice appear in all copies, and that the names of
.\" Digital and Tektronix not be used in in advertising or publicity pertaining
.\" to this documentation without specific, written prior permission.
.\" Digital and Tektronix makes no representations about the suitability
.\" of this documentation for any purpose.
.\" It is provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" send an index entry to the stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.ny0
'\" t
.TH XGetWindowAttributes __libmansuffix__ __xorgversion__ "XLIB FUNCTIONS"
.SH NAME
XGetWindowAttributes, XGetGeometry, XWindowAttributes \- get current window attribute or geometry and current window attributes structure
.SH SYNTAX
.HP
Status XGetWindowAttributes\^(\^Display *\fIdisplay\fP\^, Window \fIw\fP\^,
XWindowAttributes *\fIwindow_attributes_return\fP\^); 
.HP
Status XGetGeometry\^(\^Display *\fIdisplay\fP\^, Drawable \fId\fP\^, Window
*\fIroot_return\fP\^, int *\fIx_return\fP\^, int *\fIy_return\fP\^, unsigned
int *\fIwidth_return\fP\^, unsigned int *\fIheight_return\fP\^, unsigned int
*\fIborder_width_return\fP\^, unsigned int *\fIdepth_return\fP\^); 
.SH ARGUMENTS
.IP \fIborder_width_return\fP 1i
Returns the border width in pixels. 
.ds Dr , which can be a window or a pixmap
.IP \fId\fP 1i
Specifies the drawable\*(Dr. 
.IP \fIdepth_return\fP 1i
Returns the depth of the drawable (bits per pixel for the object).
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.IP \fIroot_return\fP 1i
Returns the root window.
.ds Wi whose current attributes you want to obtain
.IP \fIw\fP 1i
Specifies the window \*(Wi.
.IP \fIwidth_return\fP 1i
.br
.ns
.IP \fIheight_return\fP 1i
Return the drawable's dimensions (width and height).
.IP \fIwindow_attributes_return\fP 1i
Returns the specified window's attributes in the
.ZN XWindowAttributes
structure.
.IP \fIx_return\fP 1i
.br
.ns
.IP \fIy_return\fP 1i
Return the x and y coordinates that define the location of the drawable.
For a window, 
these coordinates specify the upper-left outer corner relative to
its parent's origin.
For pixmaps, these coordinates are always zero.
.SH DESCRIPTION
The
.ZN XGetWindowAttributes
function returns the current attributes for the specified window to an
.ZN XWindowAttributes
structure.  It returns a nonzero status on success; otherwise, it returns a
zero status.
.LP
.ZN XGetWindowAttributes
can generate
.ZN BadDrawable
and
.ZN BadWindow
errors.
.LP
The
.ZN XGetGeometry
function returns the root window and the current geometry of the drawable.
The geometry of the drawable includes the x and y coordinates, width and height,
border width, and depth.
These are described in the argument list.
It is legal to pass to this function a window whose class is
.ZN InputOnly .
It returns a nonzero status on success; otherwise, it returns a
zero status.
.SH STRUCTURES
The
.ZN XWindowAttributes
structure contains:
.LP
.Ds 0
typedef struct {
        int x, y;       /\&* location of window */
        int width, height;      /\&* width and height of window */
        int border_width;       /\&* border width of window */
        int depth;      /\&* depth of window */
        Visual *visual; /\&* the associated visual structure */
        Window root;    /\&* root of screen containing window */
        int class;      /\&* InputOutput, InputOnly*/
        int bit_gravity;        /\&* one of the bit gravity values */
        int win_gravity;        /\&* one of the window gravity values */
        int backing_store;      /\&* NotUseful, WhenMapped, Always */
        unsigned long backing_planes;   /\&* planes to be preserved if possible */
        unsigned long backing_pixel;    /\&* value to be used when restoring planes */
        Bool save_under;        /\&* boolean, should bits under be saved? */
        Colormap colormap;      /\&* color map to be associated with window */
        Bool map_installed;     /\&* boolean, is color map currently installed*/
        int map_state;  /\&* IsUnmapped, IsUnviewable, IsViewable */
        long all_event_masks;   /\&* set of events all people have interest in*/
        long your_event_mask;   /\&* my event mask */
        long do_not_propagate_mask;     /\&* set of events that should not propagate */
        Bool override_redirect; /\&* boolean value for override-redirect */
        Screen *screen; /\&* back pointer to correct screen */
} XWindowAttributes;
.De
.LP
The x and y members are set to the upper-left outer
corner relative to the parent window's origin.
The width and height members are set to the inside size of the window, 
not including the border.
The border_width member is set to the window's border width in pixels.
The depth member is set to the depth of the window 
(that is, bits per pixel for the object).
The visual member is a pointer to the screen's associated
.ZN Visual
structure.
The root member is set to the root window of the screen containing the window.
The class member is set to the window's class and can be either
.ZN InputOutput
or
.ZN InputOnly .
.LP
The bit_gravity member is set to the window's bit gravity
and can be one of the following:
.LP
.TS
lw(1.5i) lw(1.5i).
T{
.ZN ForgetGravity
T}	T{
.ZN EastGravity
T}
T{
.ZN NorthWestGravity
T}	T{
.ZN SouthWestGravity
T}
T{
.ZN NorthGravity
T}	T{
.ZN SouthGravity
T}
T{
.ZN NorthEastGravity
T}	T{
.ZN SouthEastGravity
T}
T{
.ZN WestGravity
T}	T{
.ZN StaticGravity
T}
.ZN CenterGravity
.TE
.LP
The win_gravity member is set to the window's window gravity
and can be one of the following:
.LP
.TS
lw(1.5i) lw(1.5i).
T{
.ZN UnmapGravity
T}	T{
.ZN EastGravity
T}
T{
.ZN NorthWestGravity
T}	T{
.ZN SouthWestGravity
T}
T{
.ZN NorthGravity
T}	T{
.ZN SouthGravity
T}
T{
.ZN NorthEastGravity
T}	T{
.ZN SouthEastGravity
T}
T{
.ZN WestGravity
T}	T{
.ZN StaticGravity
T}
.ZN CenterGravity
.TE
.LP
For additional information on gravity,
see section 3.3.
.LP
The backing_store member is set to indicate how the X server should maintain
the contents of a window 
and can be 
.ZN WhenMapped ,
.ZN Always ,
or
.ZN NotUseful .
The backing_planes member is set to indicate (with bits set to 1) which bit 
planes of the window hold dynamic data that must be preserved in backing_stores 
and during save_unders.
The backing_pixel member is set to indicate what values to use 
for planes not set in backing_planes.
.LP
The save_under member is set to 
.ZN True
or
.ZN False .
The colormap member is set to the colormap for the specified window and can be
a colormap ID or 
.ZN None .
The map_installed member is set to indicate whether the colormap is 
currently installed and can be 
.ZN True
or
.ZN False .
The map_state member is set to indicate the state of the window and can be
.ZN IsUnmapped ,
.ZN IsUnviewable ,
or
.ZN IsViewable .
.ZN IsUnviewable
is used if the window is mapped but some ancestor is unmapped.
.LP
The all_event_masks member is set to the bitwise inclusive OR of all event 
masks selected on the window by all clients.
The your_event_mask member is set to the bitwise inclusive OR of all event 
masks selected by the querying client.
The do_not_propagate_mask member is set to the bitwise inclusive OR of the 
set of events that should not propagate.
.LP
The override_redirect member is set to indicate whether this window overrides
structure control facilities and can be 
.ZN True
or
.ZN False .
Window manager clients should ignore the window if this member is
.ZN True .
.LP
The screen member is set to a screen pointer that gives you a back pointer 
to the correct screen.
This makes it easier to obtain the screen information without
having to loop over the root window fields to see which field matches.
.SH DIAGNOSTICS
.TP 1i
.ZN BadDrawable
A value for a Drawable argument does not name a defined Window or Pixmap.
.TP 1i
.ZN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XQueryPointer(__libmansuffix__),
XQueryTree(__libmansuffix__)
.br
\fI\*(xL\fP
@


1.3
log
@Update to libX11 1.3.3. Tested on a bulk ports build by naddy@@.
@
text
@d53 1
a53 1
.ft 1
a66 12
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
a68 23
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
a80 26
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
a158 2
.TA .5i 3i
.ta .5i 3i
d160 21
a180 21
	int x, y;	/\&* location of window */
	int width, height;	/\&* width and height of window */
	int border_width;	/\&* border width of window */
	int depth;	/\&* depth of window */
	Visual *visual;	/\&* the associated visual structure */
	Window root;	/\&* root of screen containing window */
	int class;	/\&* InputOutput, InputOnly*/
	int bit_gravity;	/\&* one of the bit gravity values */
	int win_gravity;	/\&* one of the window gravity values */
	int backing_store;	/\&* NotUseful, WhenMapped, Always */
	unsigned long backing_planes;	/\&* planes to be preserved if possible */
	unsigned long backing_pixel;	/\&* value to be used when restoring planes */
	Bool save_under;	/\&* boolean, should bits under be saved? */
	Colormap colormap;	/\&* color map to be associated with window */
	Bool map_installed;	/\&* boolean, is color map currently installed*/
	int map_state;	/\&* IsUnmapped, IsUnviewable, IsViewable */
	long all_event_masks;	/\&* set of events all people have interest in*/
	long your_event_mask;	/\&* my event mask */
	long do_not_propagate_mask;	/\&* set of events that should not propagate */
	Bool override_redirect;	/\&* boolean value for override-redirect */
	Screen *screen;	/\&* back pointer to correct screen */
@


1.2
log
@Update to libX11 1.1.4. I've carefully checked that there's no API/ABI
change in this version. Only small bug fixes, manual page fixes and
some more data in the i18n tables.
@
text
@a43 2
.\" $XFree86: xc/doc/man/X11/XGetWAttr.man,v 1.3 2003/04/28 22:17:55 herrb Exp $
.\" $XdotOrg: lib/X11/man/XGetWindowAttributes.man,v 1.2 2004-04-23 18:42:09 eich Exp $
d392 2
a393 2
XQueryPointer(3X11),
XQueryTree(3X11)
@


1.1
log
@Initial revision
@
text
@d196 2
a197 1
structure.
d214 2
d225 21
a245 21
	int x, y;	/\(** location of window */
	int width, height;	/\(** width and height of window */
	int border_width;	/\(** border width of window */
	int depth;	/\(** depth of window */
	Visual *visual;	/\(** the associated visual structure */
	Window root;	/\(** root of screen containing window */
	int class;	/\(** InputOutput, InputOnly*/
	int bit_gravity;	/\(** one of the bit gravity values */
	int win_gravity;	/\(** one of the window gravity values */
	int backing_store;	/\(** NotUseful, WhenMapped, Always */
	unsigned long backing_planes;	/\(** planes to be preserved if possible */
	unsigned long backing_pixel;	/\(** value to be used when restoring planes */
	Bool save_under;	/\(** boolean, should bits under be saved? */
	Colormap colormap;	/\(** color map to be associated with window */
	Bool map_installed;	/\(** boolean, is color map currently installed*/
	int map_state;	/\(** IsUnmapped, IsUnviewable, IsViewable */
	long all_event_masks;	/\(** set of events all people have interest in*/
	long your_event_mask;	/\(** my event mask */
	long do_not_propagate_mask;	/\(** set of events that should not propagate */
	Bool override_redirect;	/\(** boolean value for override-redirect */
	Screen *screen;	/\(** back pointer to correct screen */
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@Import libX11 1.1.1 from X.Org 7.2RC3
@
text
@d196 1
a196 2
structure.  It returns a nonzero status on success; otherwise, it returns a
zero status.
a212 2
It returns a nonzero status on success; otherwise, it returns a
zero status.
@

