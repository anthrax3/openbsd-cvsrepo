head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.22
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.20
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.18
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.16
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.14
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.12
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.10
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.8
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v1_1_3:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.3
date	2011.05.30.19.19.31;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.18.19.37.31;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.30.10.14.55;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.09.30.10.14.55;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to libx11 1.4.2. Tested by ajacoutot@@, jasper@@ krw@@, landry@@,
shadchin@@ on various architectures.
Bump major.
@
text
@'\" t
.\" Copyright 1999 Oracle and/or its affiliates. All rights reserved.
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining a
.\" copy of this software and associated documentation files (the "Software"),
.\" to deal in the Software without restriction, including without limitation
.\" the rights to use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or sell copies of the Software, and to permit persons to whom the
.\" Software is furnished to do so, subject to the following conditions:
.\"
.\" The above copyright notice and this permission notice (including the next
.\" paragraph) shall be included in all copies or substantial portions of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbFreeClientMap __libmansuffix__ __xorgversion__ "XKB FUNCTIONS"
.SH NAME
XkbFreeClientMap \- Free memory used by the client map member of an XkbDescRec 
structure
.SH SYNOPSIS
.HP
.B void XkbFreeClientMap
.BI "(\^XkbDescPtr " "xkb" "\^,"
.BI "unsigned int " "which" "\^,"
.BI "Bool " "free_all" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- xkb
keyboard description containing client map to free
.TP
.I \- which
mask identifying components of map to free
.TP
.I \- free_all
True => free all client components and map itself 
.SH DESCRIPTION
.LP
.I XkbFreeClientMap 
frees the components of client map specified by 
.I which 
in the XkbDescRec structure specified by the 
.I xkb 
parameter and sets the corresponding structure component values to NULL. The
.I which 
parameter specifies a combination of the client map masks shown in Table 1.

If 
.I free_all 
is True, 
.I which 
is ignored; 
.I XkbFreeClientMap 
frees every non-NULL structure component in the client map, frees the 
XkbClientMapRec 
structure referenced by the 
.I map 
member of the 
.I xkb 
parameter, and sets the 
.I map 
member to NULL.

.TS
c s
l l
l lw(4i).
Table 1 XkbAllocClientMap Masks
_
Mask	Effect
_
XkbKeyTypesMask	T{
The type_count field specifies the number of entries to preallocate for the 
types field of the client map. If the type_count field is less than 
XkbNumRequiredTypes returns BadValue.
T}
.sp
XkbKeySymsMask	T{
The min_key_code and max_key_code fields of the xkb parameter are used to 
allocate the syms and key_sym_map fields of the client map. The fields are 
allocated to contain the maximum number of entries necessary for max_key_code - 
min_key_code + 1 keys.
T}
.sp
XkbModifierMapMask	T{
The min_key_code and max_key_code fields of the xkb parameter are used to 
allocate the modmap field of the client map. The field is allocated to contain 
the maximum number of entries necessary for max_key_code - min_key_code + 1 
keys.
T}
.TE

NOTE: The 
.I min_key_code 
and 
.I max_key_code 
fields of the 
.I xkb 
parameter must be legal values if the XkbKeySymsMask or XkbModifierMapMask masks 
are set in the 
.I which 
parameter. If they are not valid, 
.I XkbAllocClientMap 
returns BadValue. 
.SH STRUCTURES
.LP
The complete description of an Xkb keyboard is given by an XkbDescRec. The 
component 
structures in the XkbDescRec represent the major Xkb components.

.nf
typedef struct {
   struct _XDisplay * display;      /\(** connection to X server */
   unsigned short     flags;        /\(** private to Xkb, do not modify */
   unsigned short     device_spec;  /\(** device of interest */
   KeyCode            min_key_code; /\(** minimum keycode for device */
   KeyCode            max_key_code; /\(** maximum keycode for device */
   XkbControlsPtr     ctrls;        /\(** controls */
   XkbServerMapPtr    server;       /\(** server keymap */
   XkbClientMapPtr    map;          /\(** client keymap */
   XkbIndicatorPtr    indicators;   /\(** indicator map */
   XkbNamesPtr        names;        /\(** names for all components */
   XkbCompatMapPtr    compat;       /\(** compatibility map */
   XkbGeometryPtr     geom;         /\(** physical geometry of keyboard */
} XkbDescRec, *XkbDescPtr;

.fi
The 
.I display 
field points to an X display structure. The 
.I flags field is private to the library: modifying 
.I flags 
may yield unpredictable results. The 
.I device_spec 
field specifies the device identifier of the keyboard input device, or 
XkbUseCoreKeyboard, which specifies the core keyboard device. The 
.I min_key_code
and 
.I max_key_code 
fields specify the least and greatest keycode that can be returned by the 
keyboard. 

Each structure component has a corresponding mask bit that is used in function 
calls to 
indicate that the structure should be manipulated in some manner, such as 
allocating it 
or freeing it. These masks and their relationships to the fields in the 
XkbDescRec are 
shown in Table 2.

.TS
c s s
l l l
l l l.
Table 2 Mask Bits for XkbDescRec
_
Mask Bit	XkbDescRec Field	Value
_
XkbControlsMask	ctrls	(1L<<0)
XkbServerMapMask	server	(1L<<1)
XkbIClientMapMask	map	(1L<<2)
XkbIndicatorMapMask	indicators	(1L<<3)
XkbNamesMask	names	(1L<<4)
XkbCompatMapMask	compat	(1L<<5)
XkbGeometryMask	geom	(1L<<6)
XkbAllComponentsMask	All Fields	(0x7f)
.TE

The 
.I map 
field of the complete Xkb keyboard description is a pointer to the Xkb client 
map, which is 
of type XkbClientMapRec:
.nf
 
   typedef struct {                   /\(** Client Map */
      unsigned char     size_types;   /\(** # occupied entries in types */
      unsigned char     num_types;    /\(** # entries in types */
      XkbKeyTypePtr     types;        /\(** vector of key types used by this keymap */
      unsigned short    size_syms;    /\(** length of the syms array */
      unsigned short    num_syms;     /\(** # entries in syms */
      KeySym *          syms;         /\(** linear 2d tables of keysyms, 1 per key */
      XkbSymMapPtr      key_sym_map;  /\(** 1 per keycode, maps keycode to syms */
      unsigned char *   modmap;       /\(** 1 per keycode, real mods bound to key */
} XkbClientMapRec, *XkbClientMapPtr;

.fi
.SH DIAGNOSTICS
.TP 15
.B BadValue
An argument is out of range
.SH "SEE ALSO"
.BR XkbAllocClientMap (__libmansuffix__)
@


1.2
log
@Update to libX11 1.3.3. Tested on a bulk ports build by naddy@@.
@
text
@d2 1
a2 1
.\" Copyright 1999 Sun Microsystems, Inc.  All rights reserved.
@


1.1
log
@Initial revision
@
text
@d2 2
a3 3
.\" Copyright (c) 1999 - Sun Microsystems, Inc.
.\" All rights reserved.
.\" 
d5 17
a21 23
.\" copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, and/or sell copies of the Software, and to permit persons
.\" to whom the Software is furnished to do so, provided that the above
.\" copyright notice(s) and this permission notice appear in all copies of
.\" the Software and that both the above copyright notice(s) and this
.\" permission notice appear in supporting documentation.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
.\" OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
.\" HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
.\" INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
.\" FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
.\" NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
.\" WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\" 
.\" Except as contained in this notice, the name of a copyright holder
.\" shall not be used in advertising or otherwise to promote the sale, use
.\" or other dealings in this Software without prior written authorization
.\" of the copyright holder.
d28 1
d30 3
a32 11
(
.I xkb,
.I which,
.I free_all
)
.br
      XkbDescPtr \fIxkb\fP\^;
.br
      unsigned int \fIwhich\fP\^;
.br
      Bool \fIfree_all\fP\^;
@


1.1.1.1
log
@libX11 1.1.3
@
text
@@
