head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.24
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.22
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.18
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.12
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.10
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.8
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.3
date	2010.10.31.16.43.22;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.04.25.19.59.53;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.11.04;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.11.04;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to libdmx 1.1.1. No functional change.
@
text
@.\" Copyright 2004 Red Hat Inc., Durham, North Carolina.
.\" All Rights Reserved.
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining
.\" a copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation on the rights to use, copy, modify, merge,
.\" publish, distribute, sublicense, and/or sell copies of the Software,
.\" and to permit persons to whom the Software is furnished to do so,
.\" subject to the following conditions:
.\"
.\" he above copyright notice and this permission notice (including the
.\" next paragraph) shall be included in all copies or substantial
.\" portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
.\" NON-INFRINGEMENT.  IN NO EVENT SHALL RED HAT AND/OR THEIR SUPPLIERS
.\" BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
.\" ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
.\" CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.TH DMX __libmansuffix__ __vendorversion__
.SH NAME
DMX \- X Window System DMX (Distributed Multihead X) extension
.SH DESCRIPTION
The DMX extension provides support for communication with and control of
.BR Xdmx (1)
server.  Attributes of the
.BR Xdmx (1)
server and of the back-end screens attached to the server can be queried
and modified via this protocol.
.SH "SUMMARY OF LIBRARY FUNCTIONS"
The following is a summary of DMX library functions:
.sp
DMXQueryExtension(__libmansuffix__) \- determine if DMX is available
.sp
DMXQueryVersion(__libmansuffix__) \- determine DMX extension version
.sp
DMXSync(__libmansuffix__) \- flush protocol requests between
.BR Xdmx (1)
and back-end X servers
.sp
DMXForceWindowCreation(__libmansuffix__) \- force immediate back-end window creation
.sp
DMXGetScreenCount(__libmansuffix__) \- determine number of back-end screens
.sp
DMXGetScreenAttributes(__libmansuffix__) \- determine back-end screen attributes
.sp
DMXChangeScreensAttributes(__libmansuffix__) \- change back-end screen attributes
.sp
DMXAddScreen(__libmansuffix__) \- attach a new back-end screen
.sp
DMXRemoveScreen(__libmansuffix__) \- detach a back-end screen
.sp
DMXGetWindowAttributes(__libmansuffix__) \- determine back-end window attributes
.sp
DMXGetDesktopAttributes(__libmansuffix__) \- determine global bounding box
.sp
DMXChangeDesktopAttributes(__libmansuffix__) \- change global bounding box
.sp
DMXGetInputCount(__libmansuffix__) \- determine number of input devices
.sp
DMXGetInputAttributes(__libmansuffix__) \- determine input device attributes
.sp
DMXAddInput(__libmansuffix__) \- attach a new backend or console input
.sp
DMXRemoveInput(__libmansuffix__) \- detach an input
.sp
DMXAddBackendInput(__libmansuffix__) \- attach a new back-end input
.sp
DMXAddConsoleInput(__libmansuffix__) \- attach a new console input
.PP
Each of these functions is described in its own man page.
.SH "SEE ALSO"
.BR Xdmx "(1), " xdmxconfig "(1), " vdltodmx (1)
@


1.2
log
@Update to libdmx 1.1.0
@
text
@a0 2
.\" $XFree86$
.\"
@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
.TH DMX 3X __vendorversion__
d39 1
a39 1
DMXQueryExtension(3X) \- determine if DMX is available
d41 1
a41 1
DMXQueryVersion(3X) \- determine DMX extension version
d43 1
a43 1
DMXSync(3X) \- flush protocol requests between
d47 1
a47 1
DMXForceWindowCreation(3X) \- force immediate back-end window creation
d49 1
a49 1
DMXGetScreenCount(3X) \- determine number of back-end screens
d51 1
a51 1
DMXGetScreenAttributes(3X) \- determine back-end screen attributes
d53 1
a53 1
DMXChangeScreensAttributes(3X) \- change back-end screen attributes
d55 1
a55 1
DMXAddScreen(3X) \- attach a new back-end screen
d57 1
a57 1
DMXRemoveScreen(3X) \- detach a back-end screen
d59 1
a59 1
DMXGetWindowAttributes(3X) \- determine back-end window attributes
d61 1
a61 1
DMXGetDesktopAttributes(3X) \- determine global bounding box
d63 1
a63 1
DMXChangeDesktopAttributes(3X) \- change global bounding box
d65 1
a65 1
DMXGetInputCount(3X) \- determine number of input devices
d67 1
a67 1
DMXGetInputAttributes(3X) \- determine input device attributes
d69 1
a69 1
DMXAddInput(3X) \- attach a new backend or console input
d71 1
a71 1
DMXRemoveInput(3X) \- detach an input
d73 1
a73 1
DMXAddBackendInput(3X) \- attach a new back-end input
d75 1
a75 1
DMXAddConsoleInput(3X) \- attach a new console input
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@
