head	1.3;
access;
symbols
	libdrm_2_4_79:1.1.1.1
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	libdrm_2_4_75:1.1.1.1
	libdrm_2_4_73:1.1.1.1
	libdrm_2_4_71:1.1.1.1
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	libdrm_2_4_67:1.1.1.1
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	libdrm_2_4_65:1.1.1.1
	libdrm_2_4_64:1.1.1.1
	libdrm:1.1.1
	OPENBSD_5_8:1.2.0.2
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.10
	OPENBSD_5_7_BASE:1.1
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.08.22.00.30.35;	author jsg;	state Exp;
branches;
next	1.2;
commitid	qzdJ3g11hqB96r2U;

1.2
date	2015.07.15.23.19.17;	author jsg;	state Exp;
branches;
next	1.1;
commitid	NCd5WpEjxT48SV2b;

1.1
date	2012.11.27.14.37.08;	author mpi;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2015.08.21.23.56.04;	author jsg;	state Exp;
branches;
next	;
commitid	IINH94ZNafdY3NZg;


desc
@@


1.3
log
@Merge libdrm 2.4.64.  This changes the build to using the upstream
auto* build system and installing/using a libdrm specific set of drm
headers.  Thanks to Emil Velikov for removing the GNU makeisms
upstream.
@
text
@/**************************************************************************
 *
 * Copyright Â© 2009 VMware, Inc., Palo Alto, CA., USA
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sub license, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial portions
 * of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL
 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
 * USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 **************************************************************************/


#ifndef INTERNAL_H_
#define INTERNAL_H_

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include "libdrm_macros.h"
#include "libkms.h"

struct kms_driver
{
	int (*get_prop)(struct kms_driver *kms, const unsigned key,
			unsigned *out);
	int (*destroy)(struct kms_driver *kms);

	int (*bo_create)(struct kms_driver *kms,
			 unsigned width,
			 unsigned height,
			 enum kms_bo_type type,
			 const unsigned *attr,
			 struct kms_bo **out);
	int (*bo_get_prop)(struct kms_bo *bo, const unsigned key,
			   unsigned *out);
	int (*bo_map)(struct kms_bo *bo, void **out);
	int (*bo_unmap)(struct kms_bo *bo);
	int (*bo_destroy)(struct kms_bo *bo);

	int fd;
};

struct kms_bo
{
	struct kms_driver *kms;
	void *ptr;
	size_t size;
	size_t offset;
	size_t pitch;
	unsigned handle;
};

drm_private int linux_create(int fd, struct kms_driver **out);

drm_private int vmwgfx_create(int fd, struct kms_driver **out);

drm_private int intel_create(int fd, struct kms_driver **out);

drm_private int dumb_create(int fd, struct kms_driver **out);

drm_private int nouveau_create(int fd, struct kms_driver **out);

drm_private int radeon_create(int fd, struct kms_driver **out);

drm_private int exynos_create(int fd, struct kms_driver **out);

#endif
@


1.2
log
@update to libdrm 2.4.62
@
text
@d70 1
a70 1
int linux_create(int fd, struct kms_driver **out);
d72 1
a72 1
int vmwgfx_create(int fd, struct kms_driver **out);
d74 1
a74 1
int intel_create(int fd, struct kms_driver **out);
d76 1
a76 1
int dumb_create(int fd, struct kms_driver **out);
d78 1
a78 1
int nouveau_create(int fd, struct kms_driver **out);
d80 3
a82 1
int radeon_create(int fd, struct kms_driver **out);
@


1.1
log
@Update to libdrm 2.4.31 and add the non-yet-linked libkms, prodded by jsg@@

Tested by jsg@@, ajacoutot@@, shadchin@@ and matthieu@@, ok matthieu@@
@
text
@d32 5
@


1.1.1.1
log
@Import libdrm 2.4.64
@
text
@a31 5
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include "libdrm_macros.h"
d65 1
a65 3
drm_private int linux_create(int fd, struct kms_driver **out);

drm_private int vmwgfx_create(int fd, struct kms_driver **out);
d67 1
a67 1
drm_private int intel_create(int fd, struct kms_driver **out);
d69 1
a69 1
drm_private int dumb_create(int fd, struct kms_driver **out);
d71 1
a71 1
drm_private int nouveau_create(int fd, struct kms_driver **out);
d73 1
a73 1
drm_private int radeon_create(int fd, struct kms_driver **out);
d75 1
a75 1
drm_private int exynos_create(int fd, struct kms_driver **out);
@


