head	1.4;
access;
symbols
	libdrm_2_4_82:1.1.1.3
	libdrm_2_4_79:1.1.1.3
	OPENBSD_6_1:1.4.0.2
	OPENBSD_6_1_BASE:1.4
	libdrm_2_4_75:1.1.1.3
	libdrm_2_4_73:1.1.1.2
	libdrm_2_4_71:1.1.1.2
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	libdrm_2_4_67:1.1.1.2
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	libdrm_2_4_65:1.1.1.2
	libdrm_2_4_64:1.1.1.2
	libdrm:1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v2_3_0:1.1.1.1
	dri:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2017.02.05.05.46.41;	author jsg;	state Exp;
branches;
next	1.3;
commitid	7u73SYrl7j8vU8XM;

1.3
date	2015.08.22.00.30.35;	author jsg;	state Exp;
branches;
next	1.2;
commitid	qzdJ3g11hqB96r2U;

1.2
date	2009.01.10.16.29.26;	author oga;	state dead;
branches;
next	1.1;

1.1
date	2007.01.01.10.30.41;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.01.01.10.30.41;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2015.08.21.23.55.36;	author jsg;	state Exp;
branches;
next	1.1.1.3;
commitid	IINH94ZNafdY3NZg;

1.1.1.3
date	2017.02.05.05.38.00;	author jsg;	state Exp;
branches;
next	;
commitid	GTUS6FM9u0BarnEJ;


desc
@@


1.4
log
@Merge libdrm 2.4.75
@
text
@libdrm - userspace library for drm

This  is libdrm,  a userspace  library for  accessing the  DRM, direct
rendering  manager, on  Linux,  BSD and  other  operating systems that
support the  ioctl interface.  The library  provides wrapper functions
for the  ioctls to avoid  exposing the kernel interface  directly, and
for chipsets with drm memory manager, support for tracking relocations
and  buffers.   libdrm  is  a  low-level library,  typically  used  by
graphics drivers  such as the Mesa  DRI drivers, the  X drivers, libva
and  similar projects.  New  functionality in  the kernel  DRM drivers
typically requires  a new  libdrm, but a  new libdrm will  always work
with an older kernel.


Compiling
---------

libdrm  is  a  standard  autotools  package and  follows  the  normal
configure, build  and install steps.   The first step is  to configure
the package, which is done by running the configure shell script:

	./configure

By default, libdrm  will install into the /usr/local/  prefix.  If you
want  to  install   this  DRM  to  replace  your   system  copy,  pass
--prefix=/usr and  --exec-prefix=/ to configure.  If  you are building
libdrm  from a  git checkout,  you first  need to  run  the autogen.sh
script.  You can  pass any options to autogen.sh  that you would other
wise  pass to configure,  or you  can just  re-run configure  with the
options you need once autogen.sh finishes.

Next step is to build libdrm:

	make

and once make finishes successfully, install the package using

	make install

If you are installing into a system location, you will need to be root
to perform the install step.
@


1.3
log
@Merge libdrm 2.4.64.  This changes the build to using the upstream
auto* build system and installing/using a libdrm specific set of drm
headers.  Thanks to Emil Velikov for removing the GNU makeisms
upstream.
@
text
@d4 1
a4 1
rendering  manager, on  Linux,  BSD and  other  operating systes  that
d18 1
a18 1
libdrm  is  a  standard  autotools  packages and  follows  the  normal
d40 2
a41 2
If you are install into a system location, you will need to be root to
perform the install step.
@


1.2
log
@De-autoconf libdrm.

Now that xenocara has been made clean with respect to using kernel headers
instead of those provided with libdrm, remove the copy of the headers included
here. Since it is now very simple, move it over to using standard bsd makefiles
instead of autoconf.

ok matthieu@@
@
text
@d1 1
a1 2
By default, this will install into /usr/local.  If you want to install this
libdrm to replace your system copy, say:
d3 39
a41 1
./configure --prefix=/usr --exec-prefix=/
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import libdrm 2.3.0 
@
text
@@


1.1.1.2
log
@Import libdrm 2.4.64
@
text
@d1 2
a2 1
libdrm - userspace library for drm
d4 1
a4 39
This  is libdrm,  a userspace  library for  accessing the  DRM, direct
rendering  manager, on  Linux,  BSD and  other  operating systes  that
support the  ioctl interface.  The library  provides wrapper functions
for the  ioctls to avoid  exposing the kernel interface  directly, and
for chipsets with drm memory manager, support for tracking relocations
and  buffers.   libdrm  is  a  low-level library,  typically  used  by
graphics drivers  such as the Mesa  DRI drivers, the  X drivers, libva
and  similar projects.  New  functionality in  the kernel  DRM drivers
typically requires  a new  libdrm, but a  new libdrm will  always work
with an older kernel.


Compiling
---------

libdrm  is  a  standard  autotools  packages and  follows  the  normal
configure, build  and install steps.   The first step is  to configure
the package, which is done by running the configure shell script:

	./configure

By default, libdrm  will install into the /usr/local/  prefix.  If you
want  to  install   this  DRM  to  replace  your   system  copy,  pass
--prefix=/usr and  --exec-prefix=/ to configure.  If  you are building
libdrm  from a  git checkout,  you first  need to  run  the autogen.sh
script.  You can  pass any options to autogen.sh  that you would other
wise  pass to configure,  or you  can just  re-run configure  with the
options you need once autogen.sh finishes.

Next step is to build libdrm:

	make

and once make finishes successfully, install the package using

	make install

If you are install into a system location, you will need to be root to
perform the install step.
@


1.1.1.3
log
@Import libdrm 2.4.75
@
text
@d4 1
a4 1
rendering  manager, on  Linux,  BSD and  other  operating systems that
d18 1
a18 1
libdrm  is  a  standard  autotools  package and  follows  the  normal
d40 2
a41 2
If you are installing into a system location, you will need to be root
to perform the install step.
@


