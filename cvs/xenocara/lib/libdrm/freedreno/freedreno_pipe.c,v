head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2:1.1.1.2.0.4
	OPENBSD_6_2_BASE:1.1.1.2
	libdrm_2_4_82:1.1.1.2
	libdrm_2_4_79:1.1.1.2
	OPENBSD_6_1:1.1.1.2.0.2
	OPENBSD_6_1_BASE:1.1.1.2
	libdrm_2_4_75:1.1.1.2
	libdrm_2_4_73:1.1.1.1
	libdrm_2_4_71:1.1.1.1
	OPENBSD_6_0:1.1.1.1.0.4
	OPENBSD_6_0_BASE:1.1.1.1
	libdrm_2_4_67:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.2
	OPENBSD_5_9_BASE:1.1.1.1
	libdrm_2_4_65:1.1.1.1
	libdrm_2_4_64:1.1.1.1
	libdrm:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2015.08.21.23.56.19;	author jsg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	IINH94ZNafdY3NZg;

1.1.1.1
date	2015.08.21.23.56.19;	author jsg;	state Exp;
branches;
next	1.1.1.2;
commitid	IINH94ZNafdY3NZg;

1.1.1.2
date	2017.02.05.05.38.01;	author jsg;	state Exp;
branches;
next	;
commitid	GTUS6FM9u0BarnEJ;


desc
@@


1.1
log
@Initial revision
@
text
@/* -*- mode: C; c-file-style: "k&r"; tab-width 4; indent-tabs-mode: t; -*- */

/*
 * Copyright (C) 2012 Rob Clark <robclark@@freedesktop.org>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Authors:
 *    Rob Clark <robclark@@freedesktop.org>
 */

#ifdef HAVE_CONFIG_H
# include <config.h>
#endif

#include "freedreno_drmif.h"
#include "freedreno_priv.h"

struct fd_pipe *
fd_pipe_new(struct fd_device *dev, enum fd_pipe_id id)
{
	struct fd_pipe *pipe = NULL;

	if (id > FD_PIPE_MAX) {
		ERROR_MSG("invalid pipe id: %d", id);
		goto fail;
	}

	pipe = dev->funcs->pipe_new(dev, id);
	if (!pipe) {
		ERROR_MSG("allocation failed");
		goto fail;
	}

	pipe->dev = dev;
	pipe->id = id;

	return pipe;
fail:
	if (pipe)
		fd_pipe_del(pipe);
	return NULL;
}

void fd_pipe_del(struct fd_pipe *pipe)
{
	pipe->funcs->destroy(pipe);
}

int fd_pipe_get_param(struct fd_pipe *pipe,
				 enum fd_param_id param, uint64_t *value)
{
	return pipe->funcs->get_param(pipe, param, value);
}

int fd_pipe_wait(struct fd_pipe *pipe, uint32_t timestamp)
{
	return fd_pipe_wait_timeout(pipe, timestamp, ~0);
}

int fd_pipe_wait_timeout(struct fd_pipe *pipe, uint32_t timestamp,
		uint64_t timeout)
{
	return pipe->funcs->wait(pipe, timestamp, timeout);
}
@


1.1.1.1
log
@Import libdrm 2.4.64
@
text
@@


1.1.1.2
log
@Import libdrm 2.4.75
@
text
@a39 1
	uint64_t val;
a53 3

	fd_pipe_get_param(pipe, FD_GPU_ID, &val);
	pipe->gpu_id = val;
@

