head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.6
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.6
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_3_1:1.1.1.2
	v1_3_0:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_8:1.1.1.1
	v1_2_7:1.1.1.1
	v1_2_6:1.1.1.1
	v1_2_5:1.1.1.1
	v1_2_3:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.09.27.17.42.14;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	i8vICzmreDEZmlS0;

1.5
date	2012.03.04.18.13.47;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.31.15.09.46;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.31.17.57.12;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.24.13.29.07;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.17.14.47;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.17.14.47;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.09.08.16.14.31;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to libXfont 1.5.0

Tested together with xserver 1.16.1 by naddy@@, jsg@@ & kettenis@@
@
text
@/*
 * Copyright 1999 SuSE, Inc.
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of SuSE not be used in advertising or
 * publicity pertaining to distribution of the software without specific,
 * written prior permission.  SuSE makes no representations about the
 * suitability of this software for any purpose.  It is provided "as is"
 * without express or implied warranty.
 *
 * SuSE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL SuSE
 * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Author:  Keith Packard, SuSE, Inc.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif
#include <string.h>
#include "builtin.h"

typedef struct _BuiltinIO {
    int		    offset;
    BuiltinFilePtr  file;
} BuiltinIORec, *BuiltinIOPtr;

static int
BuiltinFill (BufFilePtr	f)
{
    int	    left, len;
    BuiltinIOPtr    io = ((BuiltinIOPtr) f->private);

    left = io->file->len - io->offset;
    if (left <= 0)
    {
	f->left = 0;
	return BUFFILEEOF;
    }
    len = BUFFILESIZE;
    if (len > left)
	len = left;
    memcpy (f->buffer, io->file->bits + io->offset, len);
    io->offset += len;
    f->left = len - 1;
    f->bufp = f->buffer + 1;
    return f->buffer[0];
}

static int
BuiltinSkip (BufFilePtr	f, int count)
{
    BuiltinIOPtr    io = ((BuiltinIOPtr) f->private);
    int	    curoff;
    int	    fileoff;
    int	    todo;

    curoff = f->bufp - f->buffer;
    fileoff = curoff + f->left;
    if (curoff + count <= fileoff) {
	f->bufp += count;
	f->left -= count;
    } else {
	todo = count - (fileoff - curoff);
	io->offset += todo;
	if (io->offset > io->file->len)
	    io->offset = io->file->len;
	if (io->offset < 0)
	    io->offset = 0;
	f->left = 0;
    }
    return count;
}

static int
BuiltinClose (BufFilePtr f, int unused)
{
    BuiltinIOPtr    io = ((BuiltinIOPtr) f->private);

    free (io);
    return 1;
}


FontFilePtr
BuiltinFileOpen (const char *name)
{
    int		    i;
    BuiltinIOPtr    io;
    BufFilePtr	    raw, cooked;

    if (*name == '/') name++;
    for (i = 0; i < builtin_files_count; i++)
	if (!strcmp (name, builtin_files[i].name))
	    break;
    if (i == builtin_files_count)
	return NULL;
    io = malloc (sizeof (BuiltinIORec));
    if (!io)
	return NULL;
    io->offset = 0;
    io->file = (void *) &builtin_files[i];
    raw = BufFileCreate ((char *) io, BuiltinFill, 0, BuiltinSkip, BuiltinClose);
    if (!raw)
    {
	free (io);
	return NULL;
    }
    if ((cooked = BufFilePushZIP (raw)))
	raw = cooked;
    else
    {
	raw->left += raw->bufp - raw->buffer;
	raw->bufp = raw->buffer;
    }
    return (FontFilePtr) raw;
}

int
BuiltinFileClose (FontFilePtr f, int unused)
{
    return BufFileClose ((BufFilePtr) f, TRUE);
}
@


1.5
log
@Update to libXfont 1.4.5
@
text
@d93 1
a93 1
BuiltinFileOpen (char *name)
@


1.4
log
@Update to libXfont 1.4.3. No functional change.
@
text
@d18 1
a18 1
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
d86 1
a86 1
    
@


1.3
log
@Update to libXfont 1.4.1
@
text
@a1 2
 * Id: file.c,v 1.2 1999/11/02 06:16:47 keithp Exp $
 *
a22 1
/* $XFree86: xc/lib/font/builtins/file.c,v 1.3 1999/12/30 02:29:49 robin Exp $ */
@


1.2
log
@merge libXfont 1.3.2. bump major since some symbols were removed.
@
text
@d90 1
a90 1
    xfree (io);
d108 1
a108 1
    io = (BuiltinIOPtr) xalloc (sizeof (BuiltinIORec));
d116 1
a116 1
	xfree (io);
@


1.1
log
@Initial revision
@
text
@d30 1
d39 1
a39 2
BuiltinFill (f)
    BufFilePtr	f;
d53 1
a53 1
    bcopy (io->file->bits + io->offset, f->buffer, len);
d61 1
a61 3
BuiltinSkip (f, count)
    BufFilePtr	f;
    int		count;
a66 1
    int	    left;
d86 1
a86 2
BuiltinClose (f, doClose)
    BufFilePtr	f;
d96 1
a96 2
BuiltinFileOpen (name)
    char    *name;
d119 1
a119 1
    if (cooked = BufFilePushZIP (raw))
d130 1
a130 2
BuiltinFileClose (f)
    FontFilePtr	f;
@


1.1.1.1
log
@import from X.Org 7.2RC1
@
text
@@


1.1.1.2
log
@import libXfont 1.3.0
@
text
@d38 2
a39 1
BuiltinFill (BufFilePtr	f)
d61 3
a63 1
BuiltinSkip (BufFilePtr	f, int count)
d69 1
d89 2
a90 1
BuiltinClose (BufFilePtr f, int unused)
d100 2
a101 1
BuiltinFileOpen (char *name)
d124 1
a124 1
    if ((cooked = BufFilePushZIP (raw)))
d135 2
a136 1
BuiltinFileClose (FontFilePtr f, int unused)
@

