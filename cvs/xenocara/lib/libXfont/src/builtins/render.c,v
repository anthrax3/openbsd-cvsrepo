head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.18
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.16
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.14
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.3.0.8
	OPENBSD_4_6_BASE:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.6
	OPENBSD_4_5_BASE:1.1.1.3
	OPENBSD_4_4:1.1.1.3.0.4
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.2
	v1_3_1:1.1.1.3
	v1_3_0:1.1.1.3
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v1_2_8:1.1.1.2
	v1_2_7:1.1.1.2
	v1_2_6:1.1.1.1
	v1_2_5:1.1.1.1
	v1_2_3:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.03.04.18.13.47;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.10.31.15.09.46;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.31.17.57.12;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.17.14.48;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.17.14.48;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.10.10.01;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2007.09.08.16.14.30;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to libXfont 1.4.5
@
text
@/*
 * Copyright 1999 SuSE, Inc.
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of SuSE not be used in advertising or
 * publicity pertaining to distribution of the software without specific,
 * written prior permission.  SuSE makes no representations about the
 * suitability of this software for any purpose.  It is provided "as is"
 * without express or implied warranty.
 *
 * SuSE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL SuSE
 * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Author:  Keith Packard, SuSE, Inc.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif
#include    <X11/fonts/fntfilst.h>
#include    <X11/fonts/fontutil.h>
#include    <X11/fonts/pcf.h>
#include    "builtin.h"

static int
BuiltinOpenBitmap (FontPathElementPtr fpe, FontPtr *ppFont, int	flags,
		   FontEntryPtr entry, char *fileName, fsBitmapFormat format,
		   fsBitmapFormatMask fmask, FontPtr unused)
{
    FontFilePtr	file;
    FontPtr     pFont;
    int         ret;
    int         bit,
                byte,
                glyph,
                scan,
		image;

    file = BuiltinFileOpen (fileName);
    if (!file)
	return BadFontName;
    pFont = malloc(sizeof(FontRec));
    if (!pFont) {
	BuiltinFileClose (file, 0);
	return AllocError;
    }
    /* set up default values */
    FontDefaultFormat(&bit, &byte, &glyph, &scan);
    /* get any changes made from above */
    ret = CheckFSFormat(format, fmask, &bit, &byte, &scan, &glyph, &image);

    /* Fill in font record. Data format filled in by reader. */
    pFont->refcnt = 0;
    pFont->maxPrivate = -1;
    pFont->devPrivates = (pointer *) 0;

    ret = pcfReadFont (pFont, file, bit, byte, glyph, scan);

    BuiltinFileClose (file, 0);
    if (ret != Successful)
	free(pFont);
    else
	*ppFont = pFont;
    return ret;
}

static int
BuiltinGetInfoBitmap (FontPathElementPtr fpe, FontInfoPtr pFontInfo,
		      FontEntryPtr entry, char *fileName)
{
    FontFilePtr file;
    int		ret;

    file = BuiltinFileOpen (fileName);
    if (!file)
	return BadFontName;
    ret = pcfReadFontInfo (pFontInfo, file);
    BuiltinFileClose (file, 0);
    return ret;
}

static int
BuiltinOpenScalable (FontPathElementPtr fpe,
		     FontPtr *pFont,
		     int flags,
		     FontEntryPtr entry,
		     char *fileName,
		     FontScalablePtr vals,
		     fsBitmapFormat format,
		     fsBitmapFormatMask fmask,
		     FontPtr non_cachable_font)	/* We don't do licensing */
{
    return BadFontName;
}

static int
BuiltinGetInfoScalable (FontPathElementPtr fpe,
			FontInfoPtr pFontInfo,
			FontEntryPtr entry,
			FontNamePtr fontName,
			char *fileName,
			FontScalablePtr vals)
{
    return BadFontName;
}

static FontRendererRec renderers[] = {
    { ".builtin", 8,
    BuiltinOpenBitmap,
    BuiltinOpenScalable,
    BuiltinGetInfoBitmap,
    BuiltinGetInfoScalable,
    0 }
};

#define numRenderers	(sizeof renderers / sizeof renderers[0])

void
BuiltinRegisterFontFileFunctions(void)
{
    int	i;
    for (i = 0; i < numRenderers; i++)
	FontFileRegisterRenderer ((FontRendererRec *) &renderers[i]);
}

@


1.3
log
@Update to libXfont 1.4.3. No functional change.
@
text
@d18 1
a18 1
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
@


1.2
log
@Update to libXfont 1.4.1
@
text
@a0 1
/* $XdotOrg: $ */
a1 2
 * Id: render.c,v 1.2 1999/11/02 06:16:48 keithp Exp $
 *
a22 1
/* $XFree86: xc/lib/font/builtins/render.c,v 1.3 1999/12/30 02:29:51 robin Exp $ */
@


1.1
log
@Initial revision
@
text
@d32 2
d36 4
a39 8
BuiltinOpenBitmap (fpe, ppFont, flags, entry, fileName, format, fmask)
    FontPathElementPtr	fpe;
    FontPtr		*ppFont;
    int			flags;
    FontEntryPtr	entry;
    char		*fileName;
    fsBitmapFormat	format;
    fsBitmapFormatMask	fmask;
a42 1
    int         i;
d53 1
a53 1
    pFont = (FontPtr) xalloc(sizeof(FontRec));
d55 1
a55 1
	BuiltinFileClose (file);
d70 1
a70 1
    BuiltinFileClose (file);
d72 1
a72 1
	xfree(pFont);
d78 3
a80 5
BuiltinGetInfoBitmap (fpe, pFontInfo, entry, fileName)
    FontPathElementPtr	fpe;
    FontInfoPtr		pFontInfo;
    FontEntryPtr	entry;
    char		*fileName;
a82 1
    int		i;
a83 1
    FontRendererPtr renderer;
d89 1
a89 1
    BuiltinFileClose (file);
d93 25
d119 6
a124 2
    ".builtin", 8,
    BuiltinOpenBitmap, 0, BuiltinGetInfoBitmap, 0, 0
@


1.1.1.1
log
@import from X.Org 7.2RC1
@
text
@@


1.1.1.2
log
@Import libXfont version 1.2.7
@
text
@a99 25
static int
BuiltinOpenScalable (FontPathElementPtr fpe,
		     FontPtr *pFont,
		     int flags,
		     FontEntryPtr entry,
		     char *fileName,
		     FontScalablePtr vals,
		     fsBitmapFormat format,
		     fsBitmapFormatMask fmask,
		     FontPtr non_cachable_font)	/* We don't do licensing */
{
    return BadFontName;
}

static int
BuiltinGetInfoScalable (FontPathElementPtr fpe,
			FontInfoPtr pFontInfo,
			FontEntryPtr entry,
			FontNamePtr fontName,
			char *fileName,
			FontScalablePtr vals)
{
    return BadFontName;
}

d102 1
a102 5
    BuiltinOpenBitmap,
    BuiltinOpenScalable,
    BuiltinGetInfoBitmap,
    BuiltinGetInfoScalable,
    0
@


1.1.1.3
log
@import libXfont 1.3.0
@
text
@a31 2
#include    <X11/fonts/fontutil.h>
#include    <X11/fonts/pcf.h>
d34 8
a41 4
static int
BuiltinOpenBitmap (FontPathElementPtr fpe, FontPtr *ppFont, int	flags,
		   FontEntryPtr entry, char *fileName, fsBitmapFormat format,
		   fsBitmapFormatMask fmask, FontPtr unused)
d45 1
d58 1
a58 1
	BuiltinFileClose (file, 0);
d73 1
a73 1
    BuiltinFileClose (file, 0);
d81 5
a85 3
static int
BuiltinGetInfoBitmap (FontPathElementPtr fpe, FontInfoPtr pFontInfo,
		      FontEntryPtr entry, char *fileName)
d88 1
d90 1
d96 1
a96 1
    BuiltinFileClose (file, 0);
d126 1
a126 1
    { ".builtin", 8,
d131 1
a131 1
    0 }
@


