head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.10
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.8
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.6
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.4
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.2
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.9.0.8
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.4
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.1.1.2.0.10
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.8
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.6
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v1_0_5:1.1.1.2
	v1_0_4:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2015.05.10.09.26.33;	author matthieu;	state Exp;
branches;
next	1.9;
commitid	6TWFnavsUy316XnG;

1.9
date	2013.05.31.15.37.26;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2012.03.18.11.08.15;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2012.03.10.16.45.48;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2011.09.10.09.36.19;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.10.31.16.05.19;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.05.05.20.18.45;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.31.18.47.41;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.08.23.15.56.08;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.01.46;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.01.46;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.10.44.40;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update to libXt 1.1.5
@
text
@#
#  Copyright © 2003 Keith Packard, Noah Levitt
#
#  Permission to use, copy, modify, distribute, and sell this software and its
#  documentation for any purpose is hereby granted without fee, provided that
#  the above copyright notice appear in all copies and that both that
#  copyright notice and this permission notice appear in supporting
#  documentation, and that the name of Keith Packard not be used in
#  advertising or publicity pertaining to distribution of the software without
#  specific, written prior permission.  Keith Packard makes no
#  representations about the suitability of this software for any purpose.  It
#  is provided "as is" without express or implied warranty.
#
#  KEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
#  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
#  EVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR
#  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
#  DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
#  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
#  PERFORMANCE OF THIS SOFTWARE.
#

# Initialize Autoconf
AC_PREREQ([2.60])
AC_INIT([libXt], [1.1.5],
        [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], [libXt])
AC_CONFIG_SRCDIR([Makefile.am])
AC_CONFIG_HEADERS([config.h])
AC_CONFIG_MACRO_DIR([m4])

# Initialize Automake
AM_INIT_AUTOMAKE([foreign dist-bzip2])

# Initialize libtool
AC_PROG_LIBTOOL

# Require X.Org macros 1.13 or later for XORG_ENABLE_UNIT_TESTS
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.13 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.13)
XORG_DEFAULT_OPTIONS
XORG_CHECK_MALLOC_ZERO
XORG_ENABLE_SPECS
XORG_WITH_XMLTO(0.0.20)
XORG_WITH_FOP
XORG_WITH_XSLTPROC
XORG_CHECK_SGML_DOCTOOLS(1.01)
XORG_PROG_RAWCPP
XORG_WITH_PERL


# Checks for header files.
AC_CHECK_HEADER([alloca.h], AC_DEFINE(INCLUDE_ALLOCA_H, 1, [Define to 1 if Xalloca.h should include <alloca.h>]))

# Obtain compiler/linker options for depedencies
PKG_CHECK_MODULES(XT, sm ice x11 xproto kbproto)

# Set-up variables to use build machine compiler when cross-compiling
if test x"$CC_FOR_BUILD" = x; then
	if test x"$cross_compiling" = xyes; then
		AC_CHECK_PROGS(CC_FOR_BUILD, gcc cc)
	else
	        CC_FOR_BUILD="$CC"
	fi
fi
AC_SUBST([CC_FOR_BUILD])
DEFAULT_CPPFLAGS_FOR_BUILD="${CPPFLAGS}"
AC_CHECK_FUNC(asprintf,
  [DEFAULT_CPPFLAGS_FOR_BUILD="${DEFAULT_CPPFLAGS_FOR_BUILD} -DHAVE_ASPRINTF -D_GNU_SOURCE"])
CPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-${DEFAULT_CPPFLAGS_FOR_BUILD}}
AC_SUBST(CPPFLAGS_FOR_BUILD)
DEFAULT_CFLAGS_FOR_BUILD="${CFLAGS} ${CWARNFLAGS}"
CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${DEFAULT_CFLAGS_FOR_BUILD}}
AC_SUBST(CFLAGS_FOR_BUILD)
LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${LDFLAGS}}
AC_SUBST(LDFLAGS_FOR_BUILD)

# Map function checks to old Imake #defines
case $host_os in
	# darwin through Snow Leopard has poll() but can't be used to poll character devices.
	darwin@@<:@@789@@:>@@*|darwin10*) ;;
	darwin*)
		_ac_xorg_macosx_version_min=""
		if echo $CPPFLAGS $CFLAGS | grep -q mmacosx-version-min ; then
			_ac_xorg_macosx_version_min=`echo $CPPFLAGS $CFLAGS | sed 's/^.*-mmacosx-version-min=\(@@<:@@^ @@:>@@*\).*$/\1/'`
		else
			_ac_xorg_macosx_version_min=$MACOSX_DEPLOYMENT_TARGET
		fi
		case $_ac_xorg_macosx_version_min in
			10.@@<:@@0123456@@:>@@|10.@@<:@@0123456@@:>@@.*) ;;
			*)
				AC_CHECK_FUNC(poll, [AC_DEFINE(USE_POLL, 1, [poll() function is available])], )
			;;
		esac
		unset _ac_xorg_macosx_version_min
		;;
	*)
		AC_CHECK_FUNC(poll, [AC_DEFINE(USE_POLL, 1, [poll() function is available])], )
	;;
esac

# Link with winsock if mingw target
case $host_os in
	*mingw*)
		AC_HAVE_LIBRARY(ws2_32)
	;;
	*)
	;;
esac

# Options
AC_ARG_ENABLE(xkb, AS_HELP_STRING([--disable-xkb], [Disable XKB support]),
	XKB="$enableval", XKB="yes")
if test "x$XKB" = "xyes" ; then
	AC_DEFINE(XKB, 1, [Define to 1 to use XKB for keysym resolution.])
fi

# --enable-unit-tests
XORG_ENABLE_UNIT_TESTS
XORG_WITH_GLIB([2.16])

# Memory checking support
case $host_os in
     solaris*)
        AC_CHECK_LIB([umem], [umem_alloc],
            [MALLOC_DEBUG_ENV='LD_PRELOAD=libumem.so UMEM_DEBUG=default'])
        ;;
     *-gnu*) # GNU libc - Value is used as a single byte bit pattern,
        # both directly and inverted, so should not be 0 or 255.
        MALLOC_DEBUG_ENV='MALLOC_PERTURB_=15'
        ;;
     *bsd*|darwin*)
        MALLOC_DEBUG_ENV='MallocPreScribble=1 MallocScribble=1'
        ;;
esac
AC_SUBST([MALLOC_DEBUG_ENV])

# Replaces XFileSearchPathDefault from Imake configs
XFILESEARCHPATHDEFAULT='$(sysconfdir)/X11/%L/%T/%N%C%S:$(sysconfdir)/X11/%l/%T/%N%C%S:$(sysconfdir)/X11/%T/%N%C%S:$(sysconfdir)/X11/%L/%T/%N%S:$(sysconfdir)/X11/%l/%T/%N%S:$(sysconfdir)/X11/%T/%N%S:$(datadir)/X11/%L/%T/%N%C%S:$(datadir)/X11/%l/%T/%N%C%S:$(datadir)/X11/%T/%N%C%S:$(datadir)/X11/%L/%T/%N%S:$(datadir)/X11/%l/%T/%N%S:$(datadir)/X11/%T/%N%S:$(libdir)/X11/%L/%T/%N%C%S:$(libdir)/X11/%l/%T/%N%C%S:$(libdir)/X11/%T/%N%C%S:$(libdir)/X11/%L/%T/%N%S:$(libdir)/X11/%l/%T/%N%S:$(libdir)/X11/%T/%N%S'

AC_ARG_WITH(xfile-search-path,
	AS_HELP_STRING([--with-xfile-search-path=<path>],
		       [Set path to search for app-defaults and other files]),
	[XFILESEARCHPATHDEFAULT="$withval"], [])
AC_SUBST([XFILESEARCHPATHDEFAULT])

AC_ARG_WITH(appdefaultdir,
	AS_HELP_STRING([--with-appdefaultdir=<path>],
		       [Set app-default directory (default: ${datadir}/X11/app-defaults)]),
	[appdefaultdir="$withval"],
	[appdefaultdir=${datadir}/X11/app-defaults])
AX_DEFINE_DIR([appdefaultdir], [appdefaultdir], [app default data directory])

# Replacement for Imake ToolkitStringsABIOptions, controls string tables
# generated by util/string.list in StringDefs.h & Shell.h
case $host_os in
	solaris*)
		# Solaris uses -intelabi even on SPARC
  		STRINGSABIOPTIONS="-intelabi -solarisabinames"
		;;
	sco* | svr4*)
		case $host_cpu in
		    i*86) STRINGSABIOPTIONS="-intelabi" ;;
		       *) STRINGSABIOPTIONS="" ;;
		esac
		;;
esac
AC_SUBST(STRINGSABIOPTIONS)

ERRORDBDIR=${datadir}/X11
AC_SUBST(ERRORDBDIR)

case $host_os in
    darwin*)
        OS_CFLAGS="-Wl,-flat_namespace"
	;;
    *)
        OS_CFLAGS=
        ;;
esac

XT_CFLAGS="$XT_CFLAGS $OS_CFLAGS"

AC_CONFIG_FILES([Makefile
		src/Makefile
		util/Makefile
		include/Makefile
		man/Makefile
		specs/Makefile
		test/Makefile
		xt.pc])
AC_OUTPUT
@


1.9
log
@Update to libXt 1.1.4
@
text
@d25 1
a25 1
AC_INIT([libXt], [1.1.4],
d67 7
a73 1
CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}
@


1.8
log
@Update to libXt 1.1.3
@
text
@d25 1
a25 1
AC_INIT([libXt], [1.1.3],
a32 1
AM_MAINTAINER_MODE
d163 3
@


1.7
log
@Update to libXt 1.1.2
@
text
@d25 1
a25 1
AC_INIT([libXt], [1.1.2],
@


1.6
log
@Update to libXt 1.1.1
@
text
@d25 1
a25 1
AC_INIT([libXt], [1.1.1],
d38 1
a38 1
# Require X.Org macros 1.8 or later for MAN_SUBSTS set by XORG_MANPAGE_SECTIONS
d40 2
a41 2
          [m4_fatal([must install xorg-macros 1.8 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.8)
d44 8
d97 8
a104 1
AC_HAVE_LIBRARY(ws2_32)
d113 20
d182 1
@


1.5
log
@Update to libXt 1.0.9.  No functional change.
@
text
@d1 21
a21 22
dnl 
dnl  Copyright © 2003 Keith Packard, Noah Levitt
dnl 
dnl  Permission to use, copy, modify, distribute, and sell this software and its
dnl  documentation for any purpose is hereby granted without fee, provided that
dnl  the above copyright notice appear in all copies and that both that
dnl  copyright notice and this permission notice appear in supporting
dnl  documentation, and that the name of Keith Packard not be used in
dnl  advertising or publicity pertaining to distribution of the software without
dnl  specific, written prior permission.  Keith Packard makes no
dnl  representations about the suitability of this software for any purpose.  It
dnl  is provided "as is" without express or implied warranty.
dnl 
dnl  KEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
dnl  INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
dnl  EVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR
dnl  CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
dnl  DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
dnl  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
dnl  PERFORMANCE OF THIS SOFTWARE.
dnl
dnl Process this file with autoconf to create configure.
d23 1
d25 1
a25 4

dnl
dnl
AC_INIT([libXt], [1.0.9],
d27 2
d30 2
d35 3
d43 1
a43 1
AM_CONFIG_HEADER(config.h)
d45 5
a49 4
# Check for progs
AC_PROG_CC
AC_PROG_LIBTOOL
AM_PROG_CC_C_O
d51 1
a64 5
PKG_CHECK_MODULES(XT, sm ice x11 xproto kbproto)

# Needed for including Xalloca.h
AC_CHECK_HEADER([alloca.h], AC_DEFINE(INCLUDE_ALLOCA_H, 1, [Define to 1 if Xalloca.h should include <alloca.h>]))

d67 17
a83 2
	# darwin has poll() but can't be used to poll character devices (atleast through SnowLeopard)
	darwin*) ;;
d85 1
a85 2
		AC_CHECK_FUNC(poll, AC_DEFINE(USE_POLL,1,
	        	[Define to 1 if you have the "poll" function.]))
a87 2
AC_CHECK_FUNC(snprintf, AC_DEFINE(USE_SNPRINTF,1,
        [Define to 1 if you have the "snprintf" function.]))
d92 1
a92 1
AC_ARG_ENABLE(xkb, AC_HELP_STRING([--disable-xkb], [Disable XKB support]),
d102 1
a102 1
	AC_HELP_STRING([--with-xfile-search-path=<path>],
d108 1
a108 1
	AC_HELP_STRING([--with-appdefaultdir=<path>],
d141 8
a148 9
XORG_CHECK_MALLOC_ZERO

AC_OUTPUT([Makefile
	   src/Makefile
	   util/Makefile
	   include/Makefile
	   man/Makefile
	   specs/Makefile
           xt.pc])
@


1.4
log
@Update to libXt 1.0.8. No API change.
@
text
@d24 1
a24 1
AC_PREREQ([2.57])
d28 3
a30 1
AC_INIT(libXt, 1.0.8, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXt)
d34 1
a34 1
# Require xorg-macros: XORG_DEFAULT_OPTIONS
d36 2
a37 2
          [m4_fatal([must install xorg-macros 1.3 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.3)
a127 3
# Man page processing requirements
XORG_PROG_RAWCPP

d135 1
@


1.3
log
@update to libXt 1.0.7
@
text
@d28 2
a29 2
AC_INIT(libXt, 1.0.7, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXt)
AM_INIT_AUTOMAKE([dist-bzip2])
d33 2
a34 1
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.3 or later before running autoconf/autogen])])
d36 1
a42 1
XORG_DEFAULT_OPTIONS
d64 2
a65 3
	# darwin has poll() but can't be used to poll character devices
	# darwin10 (SnowLeopard) should be tested as well once released
	darwin7*) ;; darwin8*) ;; darwin9*) ;;
a81 6

AC_ARG_ENABLE(install-makestrs,
	AC_HELP_STRING([--disable-install-makestrs], [Disable installing makestrs]),
	INSTALL_MAKESTRS="$enableval",
	INSTALL_MAKESTRS="yes")
AM_CONDITIONAL([INSTALL_MAKESTRS], [test "x$INSTALL_MAKESTRS" = xyes])
@


1.2
log
@update to libXt 1.0.6
@
text
@d28 1
a28 1
AC_INIT(libXt, 1.0.6, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXt)
d32 3
a34 3
# Require xorg-macros: XORG_CWARNFLAGS, XORG_CHANGELOG
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.2 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.2)
d41 1
a41 1
XORG_CWARNFLAGS
d51 4
d56 1
a56 1
PKG_CHECK_MODULES(XT, sm x11 xproto kbproto)
d103 1
a103 1
AC_DEFINE_DIR([appdefaultdir], [appdefaultdir], [app default data directory])
d130 1
a130 1
XT_CFLAGS="$CWARNFLAGS $XT_CFLAGS $OS_CFLAGS"
a133 4
XORG_MANPAGE_SECTIONS

# Check render configuration, strip extra digits from package version to
# find the required protocol version
a135 2
XORG_RELEASE_VERSION
XORG_CHANGELOG
@


1.1
log
@Initial revision
@
text
@a1 2
dnl  $Id$
dnl 
d28 1
a28 1
AC_INIT(libXt, 1.0.4, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXt)
d32 3
d40 11
d58 9
a66 2
AC_CHECK_FUNC(poll, AC_DEFINE(USE_POLL,1,
        [Define to 1 if you have the `poll' function.]))
d68 3
a70 1
        [Define to 1 if you have the `snprintf' function.]))
d105 2
a106 4
		case $host_cpu in
		    sparc*) STRINGSABIOPTIONS="-sparcabi -solarisabinames" ;;
	   		 *) STRINGSABIOPTIONS="-intelabi -solarisabinames" ;;
		esac
d117 11
d137 1
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@Import libXt version 1.0.5
@
text
@d30 1
a30 1
AC_INIT(libXt, 1.0.5, [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg], libXt)
@

