head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.12
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.10
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_5:1.1.1.1
	v1_0_4:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.5
date	2013.05.31.15.37.28;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.10.16.45.48;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.10.09.36.19;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.31.16.05.19;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.02.27;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.02.27;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to libXt 1.1.4
@
text
@.\" Copyright 1993 X Consortium
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining
.\" a copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or sell copies of the Software, and to
.\" permit persons to whom the Software is furnished to do so, subject to
.\" the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be
.\" included in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained in this notice, the name of the X Consortium shall
.\" not be used in advertising or otherwise to promote the sale, use or
.\" other dealings in this Software without prior written authorization
.\" from the X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtApp-Add-Input wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" send an index entry to the stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtAppAddInput __libmansuffix__ __xorgversion__ "XT FUNCTIONS"
.SH NAME
XtAppAddInput, XtRemoveInput \- register and remove an input source
.SH SYNTAX
.HP
XtInputId XtAppAddInput(XtAppContext \fIapp_context\fP, int \fIsource\fP,
XtPointer \fIcondition\fP, XtInputCallbackProc \fIproc\fP, XtPointer
\fIclient_data\fP);
.HP
void XtRemoveInput(XtInputId \fIid\fP);
.SH ARGUMENTS
.ds Co that identifies the application
.IP \fIapp_context\fP 1i
Specifies the application context \*(Co.
.ds Cd input is available
.IP \fIclient_data\fP 1i
Specifies the argument that is to be passed to the specified procedure
when \*(Cd.
.IP \fIcondition\fP 1i
Specifies the mask that indicates a read, write, or exception condition
or some operating system dependent condition.
.IP \fIid\fP 1i
Specifies the ID returned from the corresponding
.ZN XtAppAddInput
call.
.ds Pr \ to be called when input is available
.IP \fIproc\fP 1i
Specifies the procedure that is\*(Pr.
.IP \fIsource\fP 1i
Specifies the source file descriptor on a UNIX-based system
or other operating system dependent device specification.
.SH DESCRIPTION
The
.ZN XtAppAddInput
function registers with the \*(xI read routine a new source of events,
which is usually file input but can also be file output.
Note that file should be loosely interpreted to mean any sink
or source of data.
.ZN XtAppAddInput
also specifies the conditions under which the source can generate events.
When input is pending on this source,
the callback procedure is called.
.LP
The legal values for the condition argument are operating-system dependent.
On a UNIX-based system,
the condition is some union of
.ZN XtInputReadMask ,
.ZN XtInputWriteMask ,
and
.ZN XtInputExceptMask .
The
.ZN XtRemoveInput
function causes the \*(xI read routine to stop watching for input
from the input source.
.SH "SEE ALSO"
XtAppAddTimeOut(__libmansuffix__),XtAppAddSignal(__libmansuffix__)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
.LP
.SH "BUGS"
In ANSI C it is necessary to cast the condition to an XtPointer, e.g.:
.RS 4
.br
XtAppAddInput(app_context,
.RS 4
.br
source,
.br
.B (XtPointer)
(XtInputReadMask | XtInputWriteMask),
.br
proc,
.br
client_data);
.RE
@


1.4
log
@Update to libXt 1.1.2
@
text
@d40 1
a40 1
.ft 1
a53 12
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
a55 23
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
a62 26
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
@


1.3
log
@Update to libXt 1.1.1
@
text
@d133 1
a133 1
\fIclient_data\fP); 
d135 1
a135 1
void XtRemoveInput(XtInputId \fIid\fP); 
d162 1
a162 1
Note that file should be loosely interpreted to mean any sink 
d191 1
a191 1
XtAppAddInput(app_context, 
@


1.2
log
@Update to libXt 1.0.9.  No functional change.
@
text
@d181 1
a181 1
XtAppAddTimeOut(3Xt),XtAppAddSignal(3Xt)
@


1.1
log
@Initial revision
@
text
@a0 2
.\" $Xorg: XtAppAI.man,v 1.3 2000/08/17 19:41:57 cpqbld Exp $
.\"
d26 1
a26 1
.\" $XFree86: xc/doc/man/Xt/XtAppAI.man,v 1.5 2001/02/09 03:47:49 tsi Exp $
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@
