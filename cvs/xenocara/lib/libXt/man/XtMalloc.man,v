head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.12
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.10
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_5:1.1.1.1
	v1_0_4:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.5
date	2013.05.31.15.37.34;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.10.16.45.48;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.10.09.36.19;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.31.16.05.20;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.02.31;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.02.31;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to libXt 1.1.4
@
text
@.\" Copyright 1993 X Consortium
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining
.\" a copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or sell copies of the Software, and to
.\" permit persons to whom the Software is furnished to do so, subject to
.\" the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be
.\" included in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained in this notice, the name of the X Consortium shall
.\" not be used in advertising or otherwise to promote the sale, use or
.\" other dealings in this Software without prior written authorization
.\" from the X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtNew-String wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" send an index entry to the stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtMalloc __libmansuffix__ __xorgversion__ "XT FUNCTIONS"
.SH NAME
XtMalloc, XtCalloc, XtRealloc, XtFree, XtNew, XtNewString \- memory management functions
.SH SYNTAX
.HP
char *XtMalloc(Cardinal \fIsize\fP);
.HP
char *XtCalloc(Cardinal \fInum\fP, Cardinal \fIsize\fP);
.HP
char *XtRealloc(char *\fIptr\fP, Cardinal \fInum\fP);
.HP
void XtFree(char *\fIptr\fP);
.HP
\fItype\fP *XtNew(\fItype\fP);
.HP
String XtNewString(String \fIstring\fP);
.HP
Cardinal XtAsprintf(String *\fInew_string\fP, const char *\fIformat\fP, ...);
.SH ARGUMENTS
.IP \fInum\fP 1i
Specifies the number of bytes or array elements.
.ds Po to the old storage or to the block of storage that is to be freed
.IP \fIptr\fP 1i
Specifies a pointer \*(Po.
.IP \fIsize\fP 1i
Specifies the size of an array element (in bytes) or the number of bytes
desired.
.IP \fIstring\fP 1i
Specifies a previously declared string.
.IP \fItype\fP 1i
Specifies a previously declared data type.
.IP \fInew_string\fP 1i
Specifies a pointer to write a newly allocated string to.
.IP \fIformat\fP 1i
Specifies a formatting string as defined by sprintf(3c)
.SH DESCRIPTION
The
.ZN XtMalloc
functions returns a pointer to a block of storage of at least
the specified size bytes.
If there is insufficient memory to allocate the new block,
.ZN XtMalloc
calls
.ZN XtErrorMsg .
.LP
The
.ZN XtCalloc
function allocates space for the specified number of array elements
of the specified size and initializes the space to zero.
If there is insufficient memory to allocate the new block,
.ZN XtCalloc
calls
.ZN XtErrorMsg .
.LP
The
.ZN XtRealloc
function changes the size of a block of storage (possibly moving it).
Then, it copies the old contents (or as much as will fit) into the new block
and frees the old block.
If there is insufficient memory to allocate the new block,
.ZN XtRealloc
calls
.ZN XtErrorMsg .
If ptr is NULL,
.ZN XtRealloc
allocates the new storage without copying the old contents;
that is, it simply calls
.ZN XtMalloc .
.LP
The
.ZN XtFree
function returns storage and allows it to be reused.
If ptr is NULL,
.ZN XtFree
returns immediately.
.LP
.ZN XtNew
returns a pointer to the allocated storage.
If there is insufficient memory to allocate the new block,
.ZN XtNew
calls
.ZN XtErrorMsg .
.ZN XtNew
is a convenience macro that calls
.ZN XtMalloc
with the following arguments specified:
.LP
.Ds
.TA .5i
.ta .5i
((type *) XtMalloc((unsigned) sizeof(type))
.De
.LP
.ZN XtNewString
returns a pointer to the allocated storage.
If there is insufficient memory to allocate the new block,
.ZN XtNewString
calls
.ZN XtErrorMsg .
.ZN XtNewString
is a convenience macro that calls
.ZN XtMalloc
with the following arguments specified:
.LP
.Ds
.TA .5i
.ta .5i
(strcpy(XtMalloc((unsigned) strlen(str) + 1), str))
.De
.LP
The
.ZN XtAsprintf
function allocates space for a string large enough to hold the string
specified by the sprintf(3c) format pattern when used with the remaining
arguments, and fills it with the formatted results.
The address of the allocated string is placed into the pointer passed as ret.
The length of the string (not including the terminating null byte) is returned.
If there is insufficient memory to allocate the new block,
.ZN XtAsprintf
calls
.ZN XtErrorMsg .
.SH "SEE ALSO"
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
@


1.4
log
@Update to libXt 1.1.2
@
text
@d40 1
a40 1
.ft 1
a53 12
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
a55 23
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
a62 26
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
@


1.3
log
@Update to libXt 1.1.1
@
text
@d131 1
a131 1
char *XtMalloc(Cardinal \fIsize\fP); 
d133 1
a133 1
char *XtCalloc(Cardinal \fInum\fP, Cardinal \fIsize\fP); 
d135 1
a135 1
char *XtRealloc(char *\fIptr\fP, Cardinal \fInum\fP); 
d137 1
a137 1
void XtFree(char *\fIptr\fP); 
d139 1
a139 1
\fItype\fP *XtNew(\fItype\fP); 
d141 1
a141 1
String XtNewString(String \fIstring\fP); 
d164 1
a164 1
functions returns a pointer to a block of storage of at least 
d173 1
a173 1
function allocates space for the specified number of array elements 
d230 1
a230 1
.Ds 
@


1.2
log
@Update to libXt 1.0.9.  No functional change.
@
text
@d142 2
d157 4
d235 12
@


1.1
log
@Initial revision
@
text
@a0 2
.\" $Xorg: XtMalloc.man,v 1.3 2000/08/17 19:42:01 cpqbld Exp $
.\"
a25 2
.\"
.\" $XFree86: xc/doc/man/Xt/XtMalloc.man,v 1.2 2001/01/27 18:20:28 dawes Exp $
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@
