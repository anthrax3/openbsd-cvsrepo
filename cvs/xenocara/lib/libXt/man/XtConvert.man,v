head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.18
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.16
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.12
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.10
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_5:1.1.1.1
	v1_0_4:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.5
date	2013.05.31.15.37.30;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.10.16.45.48;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2011.09.10.09.36.19;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.31.16.05.19;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.02.29;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.02.29;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to libXt 1.1.4
@
text
@.\" Copyright 1993 X Consortium
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining
.\" a copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or sell copies of the Software, and to
.\" permit persons to whom the Software is furnished to do so, subject to
.\" the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be
.\" included in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained in this notice, the name of the X Consortium shall
.\" not be used in advertising or otherwise to promote the sale, use or
.\" other dealings in this Software without prior written authorization
.\" from the X Consortium.
.\"
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtDirect-Convert wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft CW
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de IN		\" send an index entry to the stderr
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.ny0
.TH XtConvert __libmansuffix__ __xorgversion__ "XT COMPATIBILITY FUNCTIONS"
.SH NAME
XtConvert, XtDirectConvert \- invoke resource converters
.SH SYNTAX
.HP
void XtConvert(Widget \fIw\fP, String \fIfrom_type\fP, XrmValuePtr \fIfrom\fP,
String \fIto_type\fP, XrmValuePtr \fIto_return\fP);
.HP
void XtDirectConvert(XtConverter \fIconverter\fP, XrmValuePtr \fIargs\fP,
Cardinal \fInum_args\fP, XrmValuePtr \fIfrom\fP, XrmValuePtr \fIto_return\fP);
.SH ARGUMENTS
.ds Al that contains the additional arguments needed to perform \
the conversion (often NULL)
.IP \fIargs\fP 1i
Specifies the argument list \*(Al.
.IP \fIconverter\fP 1i
Specifies the conversion procedure that is to be called.
.IP \fIfrom\fP 1i
Specifies the value to be converted.
.IP \fIfrom_type\fP 1i
Specifies the source type.
.IP \fInum_args\fP 1i
Specifies the number of additional arguments (often zero).
.IP \fIto_type\fP 1i
Specifies the destination type.
.IP \fIto_return\fP 1i
Returns the converted value.
.ds Wi to use for additional arguments (if any are needed)
.IP \fIw\fP 1i
Specifies the widget \*(Wi.
.SH DESCRIPTION
The
.ZN XtConvert
function looks up the type converter registered to convert from_type
to to_type, computes any additional arguments needed, and then calls
.ZN XtDirectConvert .
.ZN XtConvert
has been replaced by
.ZN XtConvertAndStore .
.LP
The
.ZN XtDirectConvert
function looks in the converter cache to see if this conversion procedure
has been called with the specified arguments.
If so, it returns a descriptor for information stored in the cache;
otherwise, it calls the converter and enters the result in the cache.
.LP
Before calling the specified converter,
.ZN XtDirectConvert
sets the return value size to zero and the return value address to NULL.
To determine if the conversion was successful,
the client should check to_return.address for non-NULL.
.ZN XtDirectConvert
has been replaced by
.ZN XtCallConverter .
.SH "SEE ALSO"
XtAppAddConverter(__libmansuffix__),
XtStringConversionWarning(__libmansuffix__),
XtConvertAndStore(__libmansuffix__),
XtCallConverter(__libmansuffix__)
.br
\fI\*(xT\fP
.br
\fI\*(xL\fP
@


1.4
log
@Update to libXt 1.1.2
@
text
@d40 1
a40 1
.ft 1
a53 12
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
a55 23
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
a62 26
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
@


1.3
log
@Update to libXt 1.1.1
@
text
@d132 1
a132 1
String \fIto_type\fP, XrmValuePtr \fIto_return\fP); 
d159 1
a159 1
function looks up the type converter registered to convert from_type 
d162 1
a162 1
.ZN XtConvert 
@


1.2
log
@Update to libXt 1.0.9.  No functional change.
@
text
@d182 4
a185 4
XtAppAddConverter(3Xt),
XtStringConversionWarning(3Xt),
XtConvertAndStore(3Xt),
XtCallConverter(3Xt)
@


1.1
log
@Initial revision
@
text
@a0 3
.\" $Xorg: XtConvert.man,v 1.3 2000/08/17 19:41:59 cpqbld Exp $
.\" $XdotOrg: $
.\"
a25 2
.\"
.\" $XFree86: xc/doc/man/Xt/XtConvert.man,v 1.3 2001/02/09 03:47:50 tsi Exp $
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@
