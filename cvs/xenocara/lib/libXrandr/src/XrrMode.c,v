head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.18
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.16
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.14
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.12
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.2.0.16
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.14
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.12
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.8
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.6
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v1_2_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.06.01.14.22.09;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2013.03.09.16.34.37;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.02.15.20.43;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.24.16.39.04;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.11.24.16.39.04;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to libXrandr 1.4.1
@
text
@/*
 * Copyright Â© 2006 Keith Packard
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that copyright
 * notice and this permission notice appear in supporting documentation, and
 * that the name of the copyright holders not be used in advertising or
 * publicity pertaining to distribution of the software without specific,
 * written prior permission.  The copyright holders make no representations
 * about the suitability of this software for any purpose.  It is provided "as
 * is" without express or implied warranty.
 *
 * THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
 * OF THIS SOFTWARE.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include <stdio.h>
#include <X11/Xlib.h>
/* we need to be able to manipulate the Display structure on events */
#include <X11/Xlibint.h>
#include <X11/extensions/render.h>
#include <X11/extensions/Xrender.h>
#include "Xrandrint.h"

XRRModeInfo *
XRRAllocModeInfo (_Xconst char *name, int nameLength)
{
    XRRModeInfo	*mode_info;

    mode_info = Xmalloc (sizeof (XRRModeInfo) + nameLength + 1);
    if (!mode_info)
	return NULL;
    memset (mode_info, '\0', sizeof (XRRModeInfo));
    mode_info->nameLength = nameLength;
    mode_info->name = (char *) (mode_info + 1);
    memcpy (mode_info->name, name, nameLength);
    mode_info->name[nameLength] = '\0';
    return mode_info;
}

RRMode
XRRCreateMode (Display *dpy, Window window, XRRModeInfo *mode_info)
{
    XExtDisplayInfo	    *info = XRRFindDisplay(dpy);
    xRRCreateModeReq	    *req;
    xRRCreateModeReply	    rep;

    RRCheckExtension (dpy, info, None);

    LockDisplay(dpy);
    GetReq (RRCreateMode, req);
    req->reqType = info->codes->major_opcode;
    req->randrReqType = X_RRCreateMode;
    req->length += (mode_info->nameLength + 3) >> 2;

    req->window = window;

    req->modeInfo.id = 0;
    req->modeInfo.width = mode_info->width;
    req->modeInfo.height = mode_info->height;
    req->modeInfo.dotClock = mode_info->dotClock;
    req->modeInfo.hSyncStart = mode_info->hSyncStart;
    req->modeInfo.hSyncEnd = mode_info->hSyncEnd;
    req->modeInfo.hTotal = mode_info->hTotal;
    req->modeInfo.hSkew = mode_info->hSkew;
    req->modeInfo.vSyncStart = mode_info->vSyncStart;
    req->modeInfo.vSyncEnd = mode_info->vSyncEnd;
    req->modeInfo.vTotal = mode_info->vTotal;
    req->modeInfo.nameLength = mode_info->nameLength;
    req->modeInfo.modeFlags = mode_info->modeFlags;

    Data (dpy, mode_info->name, mode_info->nameLength);
    if (!_XReply (dpy, (xReply *) &rep, 0, xFalse))
    {
	UnlockDisplay (dpy);
	SyncHandle ();
	return None;
    }

    UnlockDisplay (dpy);
    SyncHandle ();
    return rep.mode;
}

void
XRRDestroyMode (Display *dpy, RRMode mode)
{
    XExtDisplayInfo	    *info = XRRFindDisplay(dpy);
    xRRDestroyModeReq	    *req;
    RRSimpleCheckExtension (dpy, info);

    LockDisplay(dpy);
    GetReq (RRDestroyMode, req);
    req->reqType = info->codes->major_opcode;
    req->randrReqType = X_RRDestroyMode;
    req->mode = mode;
    UnlockDisplay (dpy);
    SyncHandle ();
}

void
XRRAddOutputMode (Display *dpy, RROutput output, RRMode mode)
{
    XExtDisplayInfo	    *info = XRRFindDisplay(dpy);
    xRRAddOutputModeReq	    *req;
    RRSimpleCheckExtension (dpy, info);

    LockDisplay(dpy);
    GetReq (RRAddOutputMode, req);
    req->reqType = info->codes->major_opcode;
    req->randrReqType = X_RRAddOutputMode;
    req->output = output;
    req->mode = mode;
    UnlockDisplay (dpy);
    SyncHandle ();
}

void
XRRDeleteOutputMode (Display *dpy, RROutput output, RRMode mode)
{
    XExtDisplayInfo	    *info = XRRFindDisplay(dpy);
    xRRDeleteOutputModeReq  *req;
    RRSimpleCheckExtension (dpy, info);

    LockDisplay(dpy);
    GetReq (RRDeleteOutputMode, req);
    req->reqType = info->codes->major_opcode;
    req->randrReqType = X_RRDeleteOutputMode;
    req->output = output;
    req->mode = mode;
    UnlockDisplay (dpy);
    SyncHandle ();
}

void
XRRFreeModeInfo (XRRModeInfo *modeInfo)
{
    Xfree (modeInfo);
}
@


1.3
log
@Update to libXrandr 1.4.0
@
text
@d36 1
a36 1
XRRAllocModeInfo (char *name, int nameLength)
@


1.2
log
@update to libXrandr 1.3.0
@
text
@d65 1
a65 1
    
d67 1
a67 1
    
d81 1
a81 1
    
d89 1
a89 1
    
@


1.1
log
@Initial revision
@
text
@a56 1
    long		    channelSize;
d58 1
a58 1
    RRSimpleCheckExtension (dpy, info);
@


1.1.1.1
log
@libXrandr 1.2.2
@
text
@@
