head	1.26;
access;
symbols
	OPENBSD_6_1_BASE:1.26
	OPENBSD_6_0:1.23.0.2
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.22.0.2
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.20.0.2
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.19.0.2
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.17.0.2
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.16.0.2
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.4
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2;
locks; strict;
comment	@# @;


1.26
date	2017.01.13.11.19.59;	author dcoppa;	state Exp;
branches;
next	1.25;
commitid	ESXG9TuEmwmBXggf;

1.25
date	2016.10.28.21.41.15;	author dcoppa;	state Exp;
branches;
next	1.24;
commitid	T2hf37tVZU8TmjB1;

1.24
date	2016.08.09.07.16.09;	author dcoppa;	state Exp;
branches;
next	1.23;
commitid	C8TgUUJolulx9B5d;

1.23
date	2016.05.29.11.57.11;	author dcoppa;	state Exp;
branches;
next	1.22;
commitid	1dOLexdOAzW2mQjp;

1.22
date	2015.12.07.09.34.03;	author dcoppa;	state Exp;
branches;
next	1.21;
commitid	wZOPiDmcwgRFTDVL;

1.21
date	2015.10.19.07.51.35;	author dcoppa;	state Exp;
branches;
next	1.20;
commitid	d2XmJCtYff11VIDu;

1.20
date	2015.06.28.08.27.46;	author dcoppa;	state Exp;
branches;
next	1.19;
commitid	qXwIGV2h9uFjxAmt;

1.19
date	2015.01.10.17.17.23;	author dcoppa;	state Exp;
branches;
next	1.18;
commitid	2tSYQMWVSV3t7clo;

1.18
date	2014.12.26.17.52.35;	author dcoppa;	state Exp;
branches;
next	1.17;
commitid	gwhRExMduYqoPQHI;

1.17
date	2014.03.14.08.18.00;	author dcoppa;	state Exp;
branches;
next	1.16;

1.16
date	2014.01.12.15.08.26;	author matthieu;	state Exp;
branches;
next	1.15;

1.15
date	2013.10.10.19.49.43;	author matthieu;	state Exp;
branches;
next	1.14;

1.14
date	2013.06.07.17.21.08;	author matthieu;	state Exp;
branches;
next	1.13;

1.13
date	2013.01.04.16.51.58;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2012.07.07.16.45.03;	author dcoppa;	state Exp;
branches;
next	1.11;

1.11
date	2012.04.14.09.45.46;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2011.11.19.11.32.46;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2011.10.30.10.14.51;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2011.09.28.19.01.22;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.18.20.29.58;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.19.16.08.13;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.10.23.19.30.17;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.09.01.19.14.24;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.03.25.20.49.54;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.26.07.31.45;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.10.20.28.34;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.26
log
@
Update to FreeType-2.7.1

i386 bulk build by sthen@@
amd64 bulk build by naddy@@

OK matthieu@@
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>FreeType-2.7.1 API Reference</title>
<style type="text/css">
  a:link { color: #0000EF; }
  a:visited { color: #51188E; }
  a:hover { color: #FF0000; }

  body { font-family: Verdana, Geneva, Arial, Helvetica, serif;
         color: #000000;
         background: #FFFFFF;
         width: 87%;
         margin: auto; }

  div.section { width: 75%;
                margin: auto; }
  div.section hr { margin: 4ex 0 1ex 0; }
  div.section h4 { background-color: #EEEEFF;
                   font-size: medium;
                   font-style: oblique;
                   font-weight: bold;
                   margin: 3ex 0 1.5ex 9%;
                   padding: 0.3ex 0 0.3ex 1%; }
  div.section p { margin: 1.5ex 0 1.5ex 10%; }
  div.section pre { margin: 3ex 0 3ex 9%;
                    background-color: #D6E8FF;
                    padding: 2ex 0 2ex 1%; }
  div.section table.fields { width: 90%;
                             margin: 1.5ex 0 1.5ex 10%; }
  div.section table.toc { width: 95%;
                          margin: 1.5ex 0 1.5ex 5%; }
  div.timestamp { text-align: center;
                  font-size: 69%;
                  margin: 1.5ex 0 1.5ex 0; }

  h1 { text-align: center; }
  h3 { font-size: medium;
       margin: 4ex 0 1.5ex 0; }

  p { text-align: justify; }

  pre.colored { color: blue; }

  span.keyword { font-family: monospace;
                 text-align: left;
                 white-space: pre;
                 color: darkblue; }

  table.fields td.val { font-weight: bold;
                        text-align: right;
                        width: 30%;
                        vertical-align: baseline;
                        padding: 1ex 1em 1ex 0; }
  table.fields td.desc { vertical-align: baseline;
                         padding: 1ex 0 1ex 1em; }
  table.fields td.desc p:first-child { margin: 0; }
  table.fields td.desc p { margin: 1.5ex 0 0 0; }
  table.index { margin: 6ex auto 6ex auto;
                border: 0;
                border-collapse: separate;
                border-spacing: 1em 0.3ex; }
  table.index tr { padding: 0; }
  table.index td { padding: 0; }
  table.index-toc-link { width: 100%;
                         border: 0;
                         border-spacing: 0;
                         margin: 1ex 0 1ex 0; }
  table.index-toc-link td.left { padding: 0 0.5em 0 0.5em;
                                 font-size: 83%;
                                 text-align: left; }
  table.index-toc-link td.middle { padding: 0 0.5em 0 0.5em;
                                   font-size: 83%;
                                   text-align: center; }
  table.index-toc-link td.right { padding: 0 0.5em 0 0.5em;
                                  font-size: 83%;
                                  text-align: right; }
  table.synopsis { margin: 6ex auto 6ex auto;
                   border: 0;
                   border-collapse: separate;
                   border-spacing: 2em 0.6ex; }
  table.synopsis tr { padding: 0; }
  table.synopsis td { padding: 0; }
  table.toc td.link { width: 30%;
                      text-align: right;
                      vertical-align: baseline;
                      padding: 1ex 1em 1ex 0; }
  table.toc td.desc { vertical-align: baseline;
                      padding: 1ex 0 1ex 1em;
                      text-align: left; }
  table.toc td.desc p:first-child { margin: 0;
                                    text-align: left; }
  table.toc td.desc p { margin: 1.5ex 0 0 0;
                        text-align: left; }

</style>
</head>
<body>

<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table>
<h1>FreeType-2.7.1 API Reference</h1>

<h1 id="quick_advance">Quick retrieval of advance values</h1>
<h2>Synopsis</h2>
<table class="synopsis">
<tr><td><a href="#FT_Get_Advance">FT_Get_Advance</a></td><td>&nbsp;</td></tr>
<tr><td><a href="#FT_Get_Advances">FT_Get_Advances</a></td><td><a href="#FT_ADVANCE_FLAG_FAST_ONLY">FT_ADVANCE_FLAG_FAST_ONLY</a></td></tr>
</table>


<p>This section contains functions to quickly extract advance values without handling glyph outlines, if possible.</p>

<div class="section">
<h3 id="FT_Get_Advance">FT_Get_Advance</h3>
<p>Defined in FT_ADVANCES_H (freetype/ftadvanc.h).</p>
<pre>
  FT_EXPORT( <a href="ft2-basic_types.html#FT_Error">FT_Error</a> )
  <b>FT_Get_Advance</b>( <a href="ft2-base_interface.html#FT_Face">FT_Face</a>    face,
                  <a href="ft2-basic_types.html#FT_UInt">FT_UInt</a>    gindex,
                  <a href="ft2-basic_types.html#FT_Int32">FT_Int32</a>   load_flags,
                  <a href="ft2-basic_types.html#FT_Fixed">FT_Fixed</a>  *padvance );
</pre>

<p>Retrieve the advance value of a given glyph outline in an <a href="ft2-base_interface.html#FT_Face">FT_Face</a>.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="face">face</td><td class="desc">
<p>The source <a href="ft2-base_interface.html#FT_Face">FT_Face</a> handle.</p>
</td></tr>
<tr><td class="val" id="gindex">gindex</td><td class="desc">
<p>The glyph index.</p>
</td></tr>
<tr><td class="val" id="load_flags">load_flags</td><td class="desc">
<p>A set of bit flags similar to those used when calling <a href="ft2-base_interface.html#FT_Load_Glyph">FT_Load_Glyph</a>, used to determine what kind of advances you need.</p>
</td></tr>
</table>

<h4>output</h4>
<table class="fields">
<tr><td class="val" id="padvance">padvance</td><td class="desc">
<p>The advance value. If scaling is performed (based on the value of &lsquo;load_flags&rsquo;), the advance value is in 16.16 format. Otherwise, it is in font units.</p>
<p>If <a href="ft2-base_interface.html#FT_LOAD_XXX">FT_LOAD_VERTICAL_LAYOUT</a> is set, this is the vertical advance corresponding to a vertical layout. Otherwise, it is the horizontal advance in a horizontal layout.</p>
</td></tr>
</table>

<h4>return</h4>
<p>FreeType error code. 0 means success.</p>

<h4>note</h4>
<p>This function may fail if you use <a href="ft2-quick_advance.html#FT_ADVANCE_FLAG_FAST_ONLY">FT_ADVANCE_FLAG_FAST_ONLY</a> and if the corresponding font backend doesn't have a quick way to retrieve the advances.</p>
<p>A scaled advance is returned in 16.16 format but isn't transformed by the affine transformation specified by <a href="ft2-base_interface.html#FT_Set_Transform">FT_Set_Transform</a>.</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_Get_Advances">FT_Get_Advances</h3>
<p>Defined in FT_ADVANCES_H (freetype/ftadvanc.h).</p>
<pre>
  FT_EXPORT( <a href="ft2-basic_types.html#FT_Error">FT_Error</a> )
  <b>FT_Get_Advances</b>( <a href="ft2-base_interface.html#FT_Face">FT_Face</a>    face,
                   <a href="ft2-basic_types.html#FT_UInt">FT_UInt</a>    start,
                   <a href="ft2-basic_types.html#FT_UInt">FT_UInt</a>    count,
                   <a href="ft2-basic_types.html#FT_Int32">FT_Int32</a>   load_flags,
                   <a href="ft2-basic_types.html#FT_Fixed">FT_Fixed</a>  *padvances );
</pre>

<p>Retrieve the advance values of several glyph outlines in an <a href="ft2-base_interface.html#FT_Face">FT_Face</a>.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="face">face</td><td class="desc">
<p>The source <a href="ft2-base_interface.html#FT_Face">FT_Face</a> handle.</p>
</td></tr>
<tr><td class="val" id="start">start</td><td class="desc">
<p>The first glyph index.</p>
</td></tr>
<tr><td class="val" id="count">count</td><td class="desc">
<p>The number of advance values you want to retrieve.</p>
</td></tr>
<tr><td class="val" id="load_flags">load_flags</td><td class="desc">
<p>A set of bit flags similar to those used when calling <a href="ft2-base_interface.html#FT_Load_Glyph">FT_Load_Glyph</a>.</p>
</td></tr>
</table>

<h4>output</h4>
<table class="fields">
<tr><td class="val" id="padvance">padvance</td><td class="desc">
<p>The advance values. This array, to be provided by the caller, must contain at least &lsquo;count&rsquo; elements.</p>
<p>If scaling is performed (based on the value of &lsquo;load_flags&rsquo;), the advance values are in 16.16 format. Otherwise, they are in font units.</p>
<p>If <a href="ft2-base_interface.html#FT_LOAD_XXX">FT_LOAD_VERTICAL_LAYOUT</a> is set, these are the vertical advances corresponding to a vertical layout. Otherwise, they are the horizontal advances in a horizontal layout.</p>
</td></tr>
</table>

<h4>return</h4>
<p>FreeType error code. 0 means success.</p>

<h4>note</h4>
<p>This function may fail if you use <a href="ft2-quick_advance.html#FT_ADVANCE_FLAG_FAST_ONLY">FT_ADVANCE_FLAG_FAST_ONLY</a> and if the corresponding font backend doesn't have a quick way to retrieve the advances.</p>
<p>Scaled advances are returned in 16.16 format but aren't transformed by the affine transformation specified by <a href="ft2-base_interface.html#FT_Set_Transform">FT_Set_Transform</a>.</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_ADVANCE_FLAG_FAST_ONLY">FT_ADVANCE_FLAG_FAST_ONLY</h3>
<p>Defined in FT_ADVANCES_H (freetype/ftadvanc.h).</p>
<pre>
#define <b>FT_ADVANCE_FLAG_FAST_ONLY</b>  0x20000000L
</pre>

<p>A bit-flag to be OR-ed with the &lsquo;flags&rsquo; parameter of the <a href="ft2-quick_advance.html#FT_Get_Advance">FT_Get_Advance</a> and <a href="ft2-quick_advance.html#FT_Get_Advances">FT_Get_Advances</a> functions.</p>
<p>If set, it indicates that you want these functions to fail if the corresponding hinting mode or font driver doesn't allow for very quick advance computation.</p>
<p>Typically, glyphs that are either unscaled, unhinted, bitmapped, or light-hinted can have their advance width computed very quickly.</p>
<p>Normal and bytecode hinted modes that require loading, scaling, and hinting of the glyph outline, are extremely slow by comparison.</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

</body>
</html>
@


1.25
log
@
Update to FreeType 2.7

Now Subpixel hinting, also known as ClearType hinting, is enabled
by default.

OK matthieu@@
@
text
@d6 1
a6 1
<title>FreeType-2.7 API Reference</title>
d103 1
a103 1
<h1>FreeType-2.7 API Reference</h1>
@


1.24
log
@
Update to FreeType 2.6.5

ok matthieu@@
@
text
@d6 1
a6 1
<title>FreeType-2.6.5 API Reference</title>
d103 1
a103 1
<h1>FreeType-2.6.5 API Reference</h1>
@


1.23
log
@
Update to FreeType 2.6.3

ok sthen@@, naddy@@, matthieu@@
@
text
@d6 1
a6 1
<title>FreeType-2.6.3 API Reference</title>
d103 1
a103 1
<h1>FreeType-2.6.3 API Reference</h1>
@


1.22
log
@
Bugfixing update to freetype-2.6.2

Tested on amd64, i386, macppc, sparc64, loongson and compile-tested
on arm by matthieu@@
Also tested in a ports bulk build by naddy@@

OK matthieu@@
@
text
@d6 1
a6 1
<title>FreeType-2.6.2 API Reference</title>
d103 1
a103 1
<h1>FreeType-2.6.2 API Reference</h1>
@


1.21
log
@
Update to freetype-2.6.1

OK matthieu@@

Bulk build by naddy@@, thanks!
@
text
@d6 1
a6 1
<title>FreeType-2.6.1 API Reference</title>
d103 1
a103 1
<h1>FreeType-2.6.1 API Reference</h1>
d105 1
a105 1
<h1>Quick retrieval of advance values</h1>
@


1.20
log
@
Update to FreeType 2.6

OK matthieu@@
@
text
@d6 1
a6 1
<title>FreeType-2.6 API Reference</title>
d103 1
a103 1
<h1>FreeType-2.6 API Reference</h1>
d117 1
a117 1
<p>Defined in FT_ADVANCES_H (ftadvanc.h).</p>
d161 1
a161 1
<p>Defined in FT_ADVANCES_H (ftadvanc.h).</p>
d210 1
a210 1
<p>Defined in FT_ADVANCES_H (ftadvanc.h).</p>
@


1.19
log
@
Bugfixing update to freetype-2.5.5

ok matthieu@@
@
text
@d6 1
a6 1
<title>FreeType-2.5.5 API Reference</title>
d103 1
a103 1
<h1>FreeType-2.5.5 API Reference</h1>
d212 1
a212 1
#define <b>FT_ADVANCE_FLAG_FAST_ONLY</b>  0x20000000UL
@


1.18
log
@
Update to freetype-2.5.4

ports bulk build by landry@@

OK matthieu@@
@
text
@d6 1
a6 1
<title>FreeType-2.5.4 API Reference</title>
d103 1
a103 1
<h1>FreeType-2.5.4 API Reference</h1>
@


1.17
log
@
Security/bugfixing update to freetype-2.5.3, featuring a fix for a
vulnerability in the CFF driver (CVE-2014-2240) and assorted minor
fixes.

ok matthieu@@
@
text
@d6 1
a6 1
<title>FreeType-2.5.3 API Reference</title>
d8 4
d14 28
a41 1
         background: #FFFFFF; }
a43 5
  h1 { text-align: center; }
  li { text-align: justify; }
  td { padding: 0 0.5em 0 0.5em; }
  td.left { padding: 0 0.5em 0 0.5em;
            text-align: left; }
d45 1
a45 3
  a:link { color: #0000EF; }
  a:visited { color: #51188E; }
  a:hover { color: #FF0000; }
d52 45
a96 1
  pre.colored { color: blue; }
a97 1
  ul.empty { list-style-type: none; }
d102 4
a105 8
<table align=center><tr><td><font size=-1>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-1>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
<center><h1>FreeType-2.5.3 API Reference</h1></center>

<center><h1>
Quick retrieval of advance values
</h1></center>
d107 5
a111 4
<table align=center cellspacing=5 cellpadding=0 border=0>
<tr><td></td><td><a href="#FT_ADVANCE_FLAG_FAST_ONLY">FT_ADVANCE_FLAG_FAST_ONLY</a></td><td></td><td><a href="#FT_Get_Advances">FT_Get_Advances</a></td></tr>
<tr><td></td><td><a href="#FT_Get_Advance">FT_Get_Advance</a></td><td></td><td></td></tr>
</table><br><br>
a112 1
<table align=center width="87%"><tr><td>
a113 29
</td></tr></table><br>
<table align=center width="75%"><tr><td>
<h4><a name="FT_ADVANCE_FLAG_FAST_ONLY">FT_ADVANCE_FLAG_FAST_ONLY</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_ADVANCES_H (ftadvanc.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>

#define <b>FT_ADVANCE_FLAG_FAST_ONLY</b>  0x20000000UL

</pre></table><br>
<table align=center width="87%"><tr><td>
<p>A bit-flag to be OR-ed with the &lsquo;flags&rsquo; parameter of the <a href="ft2-quick_advance.html#FT_Get_Advance">FT_Get_Advance</a> and <a href="ft2-quick_advance.html#FT_Get_Advances">FT_Get_Advances</a> functions.</p>
<p>If set, it indicates that you want these functions to fail if the corresponding hinting mode or font driver doesn't allow for very quick advance computation.</p>
<p>Typically, glyphs that are either unscaled, unhinted, bitmapped, or light-hinted can have their advance width computed very quickly.</p>
<p>Normal and bytecode hinted modes that require loading, scaling, and hinting of the glyph outline, are extremely slow by comparison.</p>
</td></tr></table><br>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_Get_Advance">FT_Get_Advance</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_ADVANCES_H (ftadvanc.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d115 4
d124 1
a125 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d127 4
a130 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>input</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>face</b></td><td>
d133 1
a133 1
<tr valign=top><td><b>gindex</b></td><td>
d136 1
a136 1
<tr valign=top><td><b>load_flags</b></td><td>
d140 4
a143 5
</td></tr></table>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>output</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>padvance</b></td><td>
d148 2
a149 2
</td></tr></table>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>return</b></em></td></tr><tr><td>
d151 2
a152 2
</td></tr></table>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>note</b></em></td></tr><tr><td>
a154 13
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_Get_Advances">FT_Get_Advances</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_ADVANCES_H (ftadvanc.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d156 7
d169 1
a170 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d172 4
a175 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>input</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>face</b></td><td>
d178 1
a178 1
<tr valign=top><td><b>start</b></td><td>
d181 1
a181 1
<tr valign=top><td><b>count</b></td><td>
d184 1
a184 1
<tr valign=top><td><b>load_flags</b></td><td>
d188 4
a191 5
</td></tr></table>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>output</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>padvance</b></td><td>
d197 2
a198 2
</td></tr></table>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>return</b></em></td></tr><tr><td>
d200 2
a201 2
</td></tr></table>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>note</b></em></td></tr><tr><td>
d204 18
a221 6
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
@


1.16
log
@Update to freetype 2.5.2.

With help for handling ports breakage from at least landry@@, naddy@@,
ajacoutot@@, jasper@@, and dcoppa@@. Thanks to all.

Need an up to date /etc/mtree/BSD.x11.dist (from a base system build)
before building.
@
text
@d6 1
a6 1
<title>FreeType-2.5.2 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.5.2 API Reference</h1></center>
@


1.15
log
@Update to freetype 2.5.0.1. Tested by many.
@
text
@d6 1
a6 1
<title>FreeType-2.5.0 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.5.0 API Reference</h1></center>
d55 1
a55 1
Defined in FT_ADVANCES_H (freetype/ftadvanc.h).
d65 2
a66 2
<p>Typically, glyphs which are either unscaled, unhinted, bitmapped, or light-hinted can have their advance width computed very quickly.</p>
<p>Normal and bytecode hinted modes, which require loading, scaling, and hinting of the glyph outline, are extremely slow by comparison.</p>
d77 1
a77 1
Defined in FT_ADVANCES_H (freetype/ftadvanc.h).
d130 1
a130 1
Defined in FT_ADVANCES_H (freetype/ftadvanc.h).
@


1.14
log
@Update to freetype 2.4.12. tested by many during t2k13. Thanks.
@
text
@d6 1
a6 1
<title>FreeType-2.4.12 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.12 API Reference</h1></center>
d89 1
a89 1
<p>Retrieve the advance value of a given glyph outline in an <a href="ft2-base_interface.html#FT_Face">FT_Face</a>. By default, the unhinted advance is returned in font units.</p>
d109 1
a109 1
<p>The advance value, in either font units or 16.16 format.</p>
d143 1
a143 1
<p>Retrieve the advance values of several glyph outlines in an <a href="ft2-base_interface.html#FT_Face">FT_Face</a>. By default, the unhinted advances are returned in font units.</p>
d166 2
a167 1
<p>The advances, in either font units or 16.16 format. This array must contain at least &lsquo;count&rsquo; elements.</p>
@


1.13
log
@Update to freetype 2.4.11. Tested by krw@@, jasper@@ and on a bulk ports
build by naddy@@.
@
text
@d6 1
a6 1
<title>FreeType-2.4.11 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.11 API Reference</h1></center>
@


1.12
log
@Update to freetype-2.4.10.

With help and ok matthieu@@
@
text
@d6 1
a6 1
<title>FreeType-2.4.10 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.10 API Reference</h1></center>
@


1.11
log
@Update to freetype 2.4.9
Another round of fixes to better handle invalid fonts.   Many of
them are vulnerabilities  (see CVE-2012-1126 up to CVE-2012-1144
and SA48320).
@
text
@d6 1
a6 1
<title>FreeType-2.4.9 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.9 API Reference</h1></center>
@


1.10
log
@Update to freetype 2.4.8. Security update fixing CVE-2011-3439
@
text
@d6 1
a6 1
<title>FreeType-2.4.8 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.8 API Reference</h1></center>
@


1.9
log
@Update to freetype 2.4.7.

This moslty is a bug-fix release for CVE-2011-3256.
@
text
@d6 1
a6 1
<title>FreeType-2.4.7 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.7 API Reference</h1></center>
@


1.8
log
@Update to freetype 2.4.6.

For now, omit the patch to ttdriver.c that changes some font metrics and
appearance of applications using TrueType fonts. Will revisit once the
issue is solved.
@
text
@d6 1
a6 1
<title>FreeType-2.4.6 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.6 API Reference</h1></center>
@


1.7
log
@Update to freetype 2.4.5. Tested by many.
@
text
@d6 1
a6 1
<title>FreeType-2.4.5 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.5 API Reference</h1></center>
@


1.6
log
@Update to freetype 2.4.4. Tested by shadchin@@, ajacoutot@@, krw@@.
@
text
@d6 1
a6 1
<title>FreeType-2.4.4 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.4 API Reference</h1></center>
@


1.5
log
@Update to freetype 2.4.3. Tested at least by krw@@, ajacoutot@@ and jasper@@
@
text
@d6 1
a6 1
<title>FreeType-2.4.3 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.3 API Reference</h1></center>
@


1.4
log
@Update to freetype 2.4.2. This has been in snapshots for a while
and tested explicitely by ajacoutot@@ jasper@@, jcs@@, krw@@ and others
on various architectures.
@
text
@d6 1
a6 1
<title>FreeType-2.4.2 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.4.2 API Reference</h1></center>
@


1.3
log
@Update to freetpe 2.3.12. Tested against ports by naddy@@.
@
text
@d6 1
a6 1
<title>FreeType-2.3.12 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.3.12 API Reference</h1></center>
@


1.2
log
@Update to Freetype 2.3.9.

Bump major to be safe.
Small arm assembler fix in ftconfig.h by drahn@@
@
text
@d6 1
a6 1
<title>FreeType-2.3.9 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.3.9 API Reference</h1></center>
d54 8
@


1.1
log
@Update to Freetype 2.3.8. Tested by jsg@@.
@
text
@d6 1
a6 1
<title>FreeType-2.3.8 API Reference</title>
d38 1
a38 1
<center><h1>FreeType-2.3.8 API Reference</h1></center>
a53 8
<table align=center width="87%"><tr><td>
Defined in FT_ADVANCES_H (freetype/ftadvanc.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>

#define <b>FT_ADVANCE_FLAG_FAST_ONLY</b>  0x20000000UL

</pre></table><br>
@

