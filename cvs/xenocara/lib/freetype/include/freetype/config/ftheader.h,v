head	1.12;
access;
symbols
	OPENBSD_6_1:1.11.0.4
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v2_3_5:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v2_2_1:1.1.1.1
	freetype:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2017.06.23.16.15.18;	author dcoppa;	state Exp;
branches;
next	1.11;
commitid	nHj0O50aY5QcUcQ4;

1.11
date	2016.05.29.11.57.11;	author dcoppa;	state Exp;
branches;
next	1.10;
commitid	1dOLexdOAzW2mQjp;

1.10
date	2015.10.19.07.51.36;	author dcoppa;	state Exp;
branches;
next	1.9;
commitid	d2XmJCtYff11VIDu;

1.9
date	2014.01.12.15.08.27;	author matthieu;	state dead;
branches;
next	1.8;

1.8
date	2013.10.10.19.49.46;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.07.17.21.08;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.04.16.51.58;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.18.20.29.58;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.03.10.20.28.34;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.08.21.05.09.10;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.22.17.37.36;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.18.46.25;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.18.46.25;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.09.08.16.31.42;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@
Update to freetype-2.8

No fallout in a bulk build on i386 (sthen@@)

OK matthieu@@, sthen@@
@
text
@/***************************************************************************/
/*                                                                         */
/*  ftheader.h                                                             */
/*                                                                         */
/*    Build macros of the FreeType 2 library.                              */
/*                                                                         */
/*  Copyright 1996-2017 by                                                 */
/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/

#ifndef FTHEADER_H_
#define FTHEADER_H_


  /*@@***********************************************************************/
  /*                                                                       */
  /* <Macro>                                                               */
  /*    FT_BEGIN_HEADER                                                    */
  /*                                                                       */
  /* <Description>                                                         */
  /*    This macro is used in association with @@FT_END_HEADER in header    */
  /*    files to ensure that the declarations within are properly          */
  /*    encapsulated in an `extern "C" { .. }' block when included from a  */
  /*    C++ compiler.                                                      */
  /*                                                                       */
#ifdef __cplusplus
#define FT_BEGIN_HEADER  extern "C" {
#else
#define FT_BEGIN_HEADER  /* nothing */
#endif


  /*@@***********************************************************************/
  /*                                                                       */
  /* <Macro>                                                               */
  /*    FT_END_HEADER                                                      */
  /*                                                                       */
  /* <Description>                                                         */
  /*    This macro is used in association with @@FT_BEGIN_HEADER in header  */
  /*    files to ensure that the declarations within are properly          */
  /*    encapsulated in an `extern "C" { .. }' block when included from a  */
  /*    C++ compiler.                                                      */
  /*                                                                       */
#ifdef __cplusplus
#define FT_END_HEADER  }
#else
#define FT_END_HEADER  /* nothing */
#endif


  /*************************************************************************/
  /*                                                                       */
  /* Aliases for the FreeType 2 public and configuration files.            */
  /*                                                                       */
  /*************************************************************************/

  /*************************************************************************/
  /*                                                                       */
  /* <Section>                                                             */
  /*    header_file_macros                                                 */
  /*                                                                       */
  /* <Title>                                                               */
  /*    Header File Macros                                                 */
  /*                                                                       */
  /* <Abstract>                                                            */
  /*    Macro definitions used to #include specific header files.          */
  /*                                                                       */
  /* <Description>                                                         */
  /*    The following macros are defined to the name of specific           */
  /*    FreeType~2 header files.  They can be used directly in #include    */
  /*    statements as in:                                                  */
  /*                                                                       */
  /*    {                                                                  */
  /*      #include FT_FREETYPE_H                                           */
  /*      #include FT_MULTIPLE_MASTERS_H                                   */
  /*      #include FT_GLYPH_H                                              */
  /*    }                                                                  */
  /*                                                                       */
  /*    There are several reasons why we are now using macros to name      */
  /*    public header files.  The first one is that such macros are not    */
  /*    limited to the infamous 8.3~naming rule required by DOS (and       */
  /*    `FT_MULTIPLE_MASTERS_H' is a lot more meaningful than `ftmm.h').   */
  /*                                                                       */
  /*    The second reason is that it allows for more flexibility in the    */
  /*    way FreeType~2 is installed on a given system.                     */
  /*                                                                       */
  /*************************************************************************/


  /* configuration files */

  /*************************************************************************
   *
   * @@macro:
   *   FT_CONFIG_CONFIG_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing
   *   FreeType~2 configuration data.
   *
   */
#ifndef FT_CONFIG_CONFIG_H
#define FT_CONFIG_CONFIG_H  <freetype/config/ftconfig.h>
#endif


  /*************************************************************************
   *
   * @@macro:
   *   FT_CONFIG_STANDARD_LIBRARY_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing
   *   FreeType~2 interface to the standard C library functions.
   *
   */
#ifndef FT_CONFIG_STANDARD_LIBRARY_H
#define FT_CONFIG_STANDARD_LIBRARY_H  <freetype/config/ftstdlib.h>
#endif


  /*************************************************************************
   *
   * @@macro:
   *   FT_CONFIG_OPTIONS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing
   *   FreeType~2 project-specific configuration options.
   *
   */
#ifndef FT_CONFIG_OPTIONS_H
#define FT_CONFIG_OPTIONS_H  <freetype/config/ftoption.h>
#endif


  /*************************************************************************
   *
   * @@macro:
   *   FT_CONFIG_MODULES_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   list of FreeType~2 modules that are statically linked to new library
   *   instances in @@FT_Init_FreeType.
   *
   */
#ifndef FT_CONFIG_MODULES_H
#define FT_CONFIG_MODULES_H  <freetype/config/ftmodule.h>
#endif

  /* */

  /* public headers */

  /*************************************************************************
   *
   * @@macro:
   *   FT_FREETYPE_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   base FreeType~2 API.
   *
   */
#define FT_FREETYPE_H  <freetype/freetype.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_ERRORS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   list of FreeType~2 error codes (and messages).
   *
   *   It is included by @@FT_FREETYPE_H.
   *
   */
#define FT_ERRORS_H  <freetype/fterrors.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_MODULE_ERRORS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   list of FreeType~2 module error offsets (and messages).
   *
   */
#define FT_MODULE_ERRORS_H  <freetype/ftmoderr.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_SYSTEM_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 interface to low-level operations (i.e., memory management
   *   and stream i/o).
   *
   *   It is included by @@FT_FREETYPE_H.
   *
   */
#define FT_SYSTEM_H  <freetype/ftsystem.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_IMAGE_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing type
   *   definitions related to glyph images (i.e., bitmaps, outlines,
   *   scan-converter parameters).
   *
   *   It is included by @@FT_FREETYPE_H.
   *
   */
#define FT_IMAGE_H  <freetype/ftimage.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_TYPES_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   basic data types defined by FreeType~2.
   *
   *   It is included by @@FT_FREETYPE_H.
   *
   */
#define FT_TYPES_H  <freetype/fttypes.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_LIST_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   list management API of FreeType~2.
   *
   *   (Most applications will never need to include this file.)
   *
   */
#define FT_LIST_H  <freetype/ftlist.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_OUTLINE_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   scalable outline management API of FreeType~2.
   *
   */
#define FT_OUTLINE_H  <freetype/ftoutln.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_SIZES_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   API which manages multiple @@FT_Size objects per face.
   *
   */
#define FT_SIZES_H  <freetype/ftsizes.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_MODULE_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   module management API of FreeType~2.
   *
   */
#define FT_MODULE_H  <freetype/ftmodapi.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_RENDER_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   renderer module management API of FreeType~2.
   *
   */
#define FT_RENDER_H  <freetype/ftrender.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_AUTOHINTER_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing
   *   structures and macros related to the auto-hinting module.
   *
   */
#define FT_AUTOHINTER_H  <freetype/ftautoh.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_CFF_DRIVER_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing
   *   structures and macros related to the CFF driver module.
   *
   */
#define FT_CFF_DRIVER_H  <freetype/ftcffdrv.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_TRUETYPE_DRIVER_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing
   *   structures and macros related to the TrueType driver module.
   *
   */
#define FT_TRUETYPE_DRIVER_H  <freetype/ftttdrv.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_PCF_DRIVER_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing
   *   structures and macros related to the PCF driver module.
   *
   */
#define FT_PCF_DRIVER_H  <freetype/ftpcfdrv.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_TYPE1_TABLES_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   types and API specific to the Type~1 format.
   *
   */
#define FT_TYPE1_TABLES_H  <freetype/t1tables.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_TRUETYPE_IDS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   enumeration values which identify name strings, languages, encodings,
   *   etc.  This file really contains a _large_ set of constant macro
   *   definitions, taken from the TrueType and OpenType specifications.
   *
   */
#define FT_TRUETYPE_IDS_H  <freetype/ttnameid.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_TRUETYPE_TABLES_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   types and API specific to the TrueType (as well as OpenType) format.
   *
   */
#define FT_TRUETYPE_TABLES_H  <freetype/tttables.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_TRUETYPE_TAGS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   definitions of TrueType four-byte `tags' which identify blocks in
   *   SFNT-based font formats (i.e., TrueType and OpenType).
   *
   */
#define FT_TRUETYPE_TAGS_H  <freetype/tttags.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_BDF_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   definitions of an API which accesses BDF-specific strings from a
   *   face.
   *
   */
#define FT_BDF_H  <freetype/ftbdf.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_CID_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   definitions of an API which access CID font information from a
   *   face.
   *
   */
#define FT_CID_H  <freetype/ftcid.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_GZIP_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   definitions of an API which supports gzip-compressed files.
   *
   */
#define FT_GZIP_H  <freetype/ftgzip.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_LZW_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   definitions of an API which supports LZW-compressed files.
   *
   */
#define FT_LZW_H  <freetype/ftlzw.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_BZIP2_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   definitions of an API which supports bzip2-compressed files.
   *
   */
#define FT_BZIP2_H  <freetype/ftbzip2.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_WINFONTS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   definitions of an API which supports Windows FNT files.
   *
   */
#define FT_WINFONTS_H   <freetype/ftwinfnt.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_GLYPH_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   API of the optional glyph management component.
   *
   */
#define FT_GLYPH_H  <freetype/ftglyph.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_BITMAP_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   API of the optional bitmap conversion component.
   *
   */
#define FT_BITMAP_H  <freetype/ftbitmap.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_BBOX_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   API of the optional exact bounding box computation routines.
   *
   */
#define FT_BBOX_H  <freetype/ftbbox.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_CACHE_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   API of the optional FreeType~2 cache sub-system.
   *
   */
#define FT_CACHE_H  <freetype/ftcache.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_CACHE_IMAGE_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   `glyph image' API of the FreeType~2 cache sub-system.
   *
   *   It is used to define a cache for @@FT_Glyph elements.  You can also
   *   use the API defined in @@FT_CACHE_SMALL_BITMAPS_H if you only need to
   *   store small glyph bitmaps, as it will use less memory.
   *
   *   This macro is deprecated.  Simply include @@FT_CACHE_H to have all
   *   glyph image-related cache declarations.
   *
   */
#define FT_CACHE_IMAGE_H  FT_CACHE_H


  /*************************************************************************
   *
   * @@macro:
   *   FT_CACHE_SMALL_BITMAPS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   `small bitmaps' API of the FreeType~2 cache sub-system.
   *
   *   It is used to define a cache for small glyph bitmaps in a relatively
   *   memory-efficient way.  You can also use the API defined in
   *   @@FT_CACHE_IMAGE_H if you want to cache arbitrary glyph images,
   *   including scalable outlines.
   *
   *   This macro is deprecated.  Simply include @@FT_CACHE_H to have all
   *   small bitmaps-related cache declarations.
   *
   */
#define FT_CACHE_SMALL_BITMAPS_H  FT_CACHE_H


  /*************************************************************************
   *
   * @@macro:
   *   FT_CACHE_CHARMAP_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   `charmap' API of the FreeType~2 cache sub-system.
   *
   *   This macro is deprecated.  Simply include @@FT_CACHE_H to have all
   *   charmap-based cache declarations.
   *
   */
#define FT_CACHE_CHARMAP_H  FT_CACHE_H


  /*************************************************************************
   *
   * @@macro:
   *   FT_MAC_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   Macintosh-specific FreeType~2 API.  The latter is used to access
   *   fonts embedded in resource forks.
   *
   *   This header file must be explicitly included by client applications
   *   compiled on the Mac (note that the base API still works though).
   *
   */
#define FT_MAC_H  <freetype/ftmac.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_MULTIPLE_MASTERS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   optional multiple-masters management API of FreeType~2.
   *
   */
#define FT_MULTIPLE_MASTERS_H  <freetype/ftmm.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_SFNT_NAMES_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   optional FreeType~2 API which accesses embedded `name' strings in
   *   SFNT-based font formats (i.e., TrueType and OpenType).
   *
   */
#define FT_SFNT_NAMES_H  <freetype/ftsnames.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_OPENTYPE_VALIDATE_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   optional FreeType~2 API which validates OpenType tables (BASE, GDEF,
   *   GPOS, GSUB, JSTF).
   *
   */
#define FT_OPENTYPE_VALIDATE_H  <freetype/ftotval.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_GX_VALIDATE_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   optional FreeType~2 API which validates TrueTypeGX/AAT tables (feat,
   *   mort, morx, bsln, just, kern, opbd, trak, prop).
   *
   */
#define FT_GX_VALIDATE_H  <freetype/ftgxval.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_PFR_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which accesses PFR-specific data.
   *
   */
#define FT_PFR_H  <freetype/ftpfr.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_STROKER_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which provides functions to stroke outline paths.
   */
#define FT_STROKER_H  <freetype/ftstroke.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_SYNTHESIS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which performs artificial obliquing and emboldening.
   */
#define FT_SYNTHESIS_H  <freetype/ftsynth.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_FONT_FORMATS_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which provides functions specific to font formats.
   */
#define FT_FONT_FORMATS_H  <freetype/ftfntfmt.h>

  /* deprecated */
#define FT_XFREE86_H  FT_FONT_FORMATS_H


  /*************************************************************************
   *
   * @@macro:
   *   FT_TRIGONOMETRY_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which performs trigonometric computations (e.g.,
   *   cosines and arc tangents).
   */
#define FT_TRIGONOMETRY_H  <freetype/fttrigon.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_LCD_FILTER_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which performs color filtering for subpixel rendering.
   */
#define FT_LCD_FILTER_H  <freetype/ftlcdfil.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_UNPATENTED_HINTING_H
   *
   * @@description:
   *   Deprecated.
   */
#define FT_UNPATENTED_HINTING_H  <freetype/ttunpat.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_INCREMENTAL_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which performs incremental glyph loading.
   */
#define FT_INCREMENTAL_H  <freetype/ftincrem.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_GASP_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which returns entries from the TrueType GASP table.
   */
#define FT_GASP_H  <freetype/ftgasp.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_ADVANCES_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which returns individual and ranged glyph advances.
   */
#define FT_ADVANCES_H  <freetype/ftadvanc.h>


  /* */

#define FT_ERROR_DEFINITIONS_H  <freetype/fterrdef.h>


  /* The internals of the cache sub-system are no longer exposed.  We */
  /* default to FT_CACHE_H at the moment just in case, but we know of */
  /* no rogue client that uses them.                                  */
  /*                                                                  */
#define FT_CACHE_MANAGER_H           <freetype/ftcache.h>
#define FT_CACHE_INTERNAL_MRU_H      <freetype/ftcache.h>
#define FT_CACHE_INTERNAL_MANAGER_H  <freetype/ftcache.h>
#define FT_CACHE_INTERNAL_CACHE_H    <freetype/ftcache.h>
#define FT_CACHE_INTERNAL_GLYPH_H    <freetype/ftcache.h>
#define FT_CACHE_INTERNAL_IMAGE_H    <freetype/ftcache.h>
#define FT_CACHE_INTERNAL_SBITS_H    <freetype/ftcache.h>


#define FT_INCREMENTAL_H          <freetype/ftincrem.h>

#define FT_TRUETYPE_UNPATENTED_H  <freetype/ttunpat.h>


  /*
   * Include internal headers definitions from <internal/...>
   * only when building the library.
   */
#ifdef FT2_BUILD_LIBRARY
#define  FT_INTERNAL_INTERNAL_H  <freetype/internal/internal.h>
#include FT_INTERNAL_INTERNAL_H
#endif /* FT2_BUILD_LIBRARY */


#endif /* FTHEADER_H_ */


/* END */
@


1.11
log
@
Update to FreeType 2.6.3

ok sthen@@, naddy@@, matthieu@@
@
text
@d7 1
a7 1
/*  Copyright 1996-2016 by                                                 */
d355 13
@


1.10
log
@
Update to freetype-2.6.1

OK matthieu@@

Bulk build by naddy@@, thanks!
@
text
@d7 1
a7 1
/*  Copyright 1996-2015 by                                                 */
d18 2
a19 2
#ifndef __FT_HEADER_H__
#define __FT_HEADER_H__
d756 1
a756 2
   *   A macro used in #include statements to name the file containing the
   *   FreeType~2 API which performs color filtering for subpixel rendering.
d768 1
a768 1
   *   FreeType~2 API which performs color filtering for subpixel rendering.
d830 1
a830 1
#endif /* __FT2_BUILD_H__ */
@


1.9
log
@Update to freetype 2.5.2.

With help for handling ports breakage from at least landry@@, naddy@@,
ajacoutot@@, jasper@@, and dcoppa@@. Thanks to all.

Need an up to date /etc/mtree/BSD.x11.dist (from a base system build)
before building.
@
text
@d7 1
a7 1
/*  Copyright 1996-2008, 2010, 2012, 2013 by                               */
d713 1
a713 1
   *   FT_XFREE86_H
d717 1
a717 2
   *   FreeType~2 API which provides functions specific to the XFree86 and
   *   X.Org X11 servers.
d719 4
a722 1
#define FT_XFREE86_H  <freetype/ftxf86.h>
d822 1
a822 1
   * Include internal headers definitions from <freetype/internal/...>
@


1.8
log
@Update to freetype 2.5.0.1. Tested by many.
@
text
@@


1.7
log
@Update to freetype 2.4.12. tested by many during t2k13. Thanks.
@
text
@d347 13
@


1.6
log
@Update to freetype 2.4.11. Tested by krw@@, jasper@@ and on a bulk ports
build by naddy@@.
@
text
@d7 1
a7 1
/*  Copyright 1996-2008, 2010, 2012 by                                     */
d329 13
@


1.5
log
@Update to freetype 2.4.5. Tested by many.
@
text
@d7 1
a7 1
/*  Copyright 1996-2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010 by */
d316 13
@


1.4
log
@Update to Freetype 2.3.8. Tested by jsg@@.
@
text
@d7 1
a7 1
/*  Copyright 1996-2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008 by       */
d425 13
@


1.3
log
@Update to Freetype 2.3.7. This is a bug fix release. No API change.
@
text
@d732 12
@


1.2
log
@Update to freetype 2.3.6.
Contains security fixes for CVE-2008-1806, CVE-2008-1807 and CVE-2008-1808.
Tested by many.
@
text
@d77 1
a77 1
  /*    FreeType 2 header files.  They can be used directly in #include    */
d88 1
a88 1
  /*    limited to the infamous 8.3 naming rule required by DOS (and       */
d92 1
a92 1
  /*    way FreeType 2 is installed on a given system.                     */
d106 1
a106 1
   *   FreeType 2 configuration data.
d121 1
a121 1
   *   FreeType 2 interface to the standard C library functions.
d136 1
a136 1
   *   FreeType 2 project-specific configuration options.
d151 1
a151 1
   *   list of FreeType 2 modules that are statically linked to new library
d170 1
a170 1
   *   base FreeType 2 API.
d183 1
a183 1
   *   list of FreeType 2 error codes (and messages).
d198 1
a198 1
   *   list of FreeType 2 module error offsets (and messages).
d211 1
a211 1
   *   FreeType 2 interface to low-level operations (i.e., memory management
d243 1
a243 1
   *   basic data types defined by FreeType 2.
d258 1
a258 1
   *   list management API of FreeType 2.
d273 1
a273 1
   *   scalable outline management API of FreeType 2.
d299 1
a299 1
   *   module management API of FreeType 2.
d312 1
a312 1
   *   renderer module management API of FreeType 2.
d325 1
a325 1
   *   types and API specific to the Type 1 format.
d486 1
a486 1
   *   API of the optional FreeType 2 cache sub-system.
d499 1
a499 1
   *   `glyph image' API of the FreeType 2 cache sub-system.
d519 1
a519 1
   *   `small bitmaps' API of the FreeType 2 cache sub-system.
d540 1
a540 1
   *   `charmap' API of the FreeType 2 cache sub-system.
d556 1
a556 1
   *   Macintosh-specific FreeType 2 API.  The latter is used to access
d573 1
a573 1
   *   optional multiple-masters management API of FreeType 2.
d586 1
a586 1
   *   optional FreeType 2 API which accesses embedded `name' strings in
d600 1
a600 1
   *   optional FreeType 2 API which validates OpenType tables (BASE, GDEF,
d614 1
a614 1
   *   optional FreeType 2 API which validates TrueTypeGX/AAT tables (feat,
d628 1
a628 1
   *   FreeType 2 API which accesses PFR-specific data.
d641 1
a641 1
   *   FreeType 2 API which provides functions to stroke outline paths.
d653 1
a653 1
   *   FreeType 2 API which performs artificial obliquing and emboldening.
d665 1
a665 1
   *   FreeType 2 API which provides functions specific to the XFree86 and
d678 1
a678 1
   *   FreeType 2 API which performs trigonometric computations (e.g.,
d691 1
a691 1
   *   FreeType 2 API which performs color filtering for subpixel rendering.
d703 1
a703 1
   *   FreeType 2 API which performs color filtering for subpixel rendering.
d715 1
a715 1
   *   FreeType 2 API which performs color filtering for subpixel rendering.
d727 1
a727 1
   *   FreeType 2 API which returns entries from the TrueType GASP table.
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
/*  Copyright 1996-2001, 2002, 2003, 2004, 2005, 2006 by                   */
d91 1
a91 1
  /*    The second reason is that is allows for more flexibility in the    */
d159 1
d226 1
a226 1
   *   A macro used in #include statements to name the file containing types
d286 1
a286 1
   *   API used to manage multiple @@FT_Size objects per face.
d338 3
a340 4
   *   enumeration values used to identify name strings, languages,
   *   encodings, etc.  This file really contains a _large_ set of constant
   *   macro definitions, taken from the TrueType and OpenType
   *   specifications.
d366 1
a366 1
   *   definitions of TrueType four-byte `tags' used to identify blocks in
d380 2
a381 1
   *   definitions of an API to access BDF-specific strings from a face.
d390 14
d408 1
a408 1
   *   definitions of an API to support for gzip-compressed files.
d421 1
a421 1
   *   definitions of an API to support for LZW-compressed files.
d434 1
a434 1
   *   definitions of an API to support Windows FNT files.
d502 1
a502 1
   *   see the API defined in @@FT_CACHE_SMALL_BITMAPS_H if you only need to
d586 1
a586 1
   *   optional FreeType 2 API used to access embedded `name' strings in
d600 1
a600 1
   *   optional FreeType 2 API used to validate OpenType tables (BASE, GDEF,
d614 1
a614 1
   *   optional FreeType 2 API used to validate TrueTypeGX/AAT tables (feat,
d628 1
a628 1
   *   FreeType 2 API used to access PFR-specific data.
d641 1
a641 1
   *   FreeType 2 API used to stroke outline path.
d653 1
a653 1
   *   FreeType 2 API used to perform artificial obliquing and emboldening.
d665 1
a665 1
   *   FreeType 2 API used to provide functions specific to the XFree86 and
d678 1
a678 1
   *   FreeType 2 API used to perform trigonometric computations (e.g.,
d682 49
@


1.1.1.1
log
@Import freetype 2.2.1
@
text
@@


1.1.1.2
log
@import freetype 2.3.5
@
text
@d7 1
a7 1
/*  Copyright 1996-2001, 2002, 2003, 2004, 2005, 2006, 2007 by             */
d91 1
a91 1
  /*    The second reason is that it allows for more flexibility in the    */
d225 1
a225 1
   *   A macro used in #include statements to name the file containing type
d285 1
a285 1
   *   API which manages multiple @@FT_Size objects per face.
d337 4
a340 3
   *   enumeration values which identify name strings, languages, encodings,
   *   etc.  This file really contains a _large_ set of constant macro
   *   definitions, taken from the TrueType and OpenType specifications.
d366 1
a366 1
   *   definitions of TrueType four-byte `tags' which identify blocks in
d380 1
a380 2
   *   definitions of an API which accesses BDF-specific strings from a
   *   face.
d393 1
a393 1
   *   definitions of an API which supports gzip-compressed files.
d406 1
a406 1
   *   definitions of an API which supports LZW-compressed files.
d419 1
a419 1
   *   definitions of an API which supports Windows FNT files.
d487 1
a487 1
   *   use the API defined in @@FT_CACHE_SMALL_BITMAPS_H if you only need to
d571 1
a571 1
   *   optional FreeType 2 API which accesses embedded `name' strings in
d585 1
a585 1
   *   optional FreeType 2 API which validates OpenType tables (BASE, GDEF,
d599 1
a599 1
   *   optional FreeType 2 API which validates TrueTypeGX/AAT tables (feat,
d613 1
a613 1
   *   FreeType 2 API which accesses PFR-specific data.
d626 1
a626 1
   *   FreeType 2 API which provides functions to stroke outline paths.
d638 1
a638 1
   *   FreeType 2 API which performs artificial obliquing and emboldening.
d650 1
a650 1
   *   FreeType 2 API which provides functions specific to the XFree86 and
d663 1
a663 1
   *   FreeType 2 API which performs trigonometric computations (e.g.,
a666 25


  /*************************************************************************
   *
   * @@macro:
   *   FT_LCD_FILTER_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType 2 API which performs color filtering for subpixel rendering.
   */
#define FT_LCD_FILTER_H  <freetype/ftlcdfil.h>


  /*************************************************************************
   *
   * @@macro:
   *   FT_GASP_H
   *
   * @@description:
   *   A macro used in #include statements to name the file containing the
   *   FreeType 2 API which returns entries from the TrueType GASP table.
   */
#define FT_GASP_H  <freetype/ftgasp.h>

@

