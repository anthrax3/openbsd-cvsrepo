head	1.15;
access;
symbols
	OPENBSD_6_1:1.14.0.2
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.13.0.2
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.10.0.2
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.2
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.2
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v2_3_5:1.1.1.1
	freetype:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2017.06.23.16.15.18;	author dcoppa;	state Exp;
branches;
next	1.14;
commitid	nHj0O50aY5QcUcQ4;

1.14
date	2017.01.13.11.19.59;	author dcoppa;	state Exp;
branches;
next	1.13;
commitid	ESXG9TuEmwmBXggf;

1.13
date	2016.05.29.11.57.12;	author dcoppa;	state Exp;
branches;
next	1.12;
commitid	1dOLexdOAzW2mQjp;

1.12
date	2015.12.07.09.34.03;	author dcoppa;	state Exp;
branches;
next	1.11;
commitid	wZOPiDmcwgRFTDVL;

1.11
date	2015.10.19.07.51.37;	author dcoppa;	state Exp;
branches;
next	1.10;
commitid	d2XmJCtYff11VIDu;

1.10
date	2015.06.28.08.27.47;	author dcoppa;	state Exp;
branches;
next	1.9;
commitid	qXwIGV2h9uFjxAmt;

1.9
date	2014.03.14.08.18.01;	author dcoppa;	state Exp;
branches;
next	1.8;

1.8
date	2014.01.12.15.08.27;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.07.17.21.08;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.04.16.51.58;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2012.04.14.09.45.46;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.18.20.29.58;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.03.25.20.49.54;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.22.17.37.36;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.09.08.16.32.32;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.09.08.16.32.32;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.15
log
@
Update to freetype-2.8

No fallout in a bulk build on i386 (sthen@@)

OK matthieu@@, sthen@@
@
text
@/***************************************************************************/
/*                                                                         */
/*  afindic.c                                                              */
/*                                                                         */
/*    Auto-fitter hinting routines for Indic writing system (body).        */
/*                                                                         */
/*  Copyright 2007-2017 by                                                 */
/*  Rahul Bhalerao <rahul.bhalerao@@redhat.com>, <b.rahul.pm@@gmail.com>.    */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


#include "aftypes.h"
#include "aflatin.h"
#include "afcjk.h"


#ifdef AF_CONFIG_OPTION_INDIC

#include "afindic.h"
#include "aferrors.h"


#ifdef AF_CONFIG_OPTION_USE_WARPER
#include "afwarp.h"
#endif


  static FT_Error
  af_indic_metrics_init( AF_CJKMetrics  metrics,
                         FT_Face        face )
  {
    /* skip blue zone init in CJK routines */
    FT_CharMap  oldmap = face->charmap;


    metrics->units_per_em = face->units_per_EM;

    if ( FT_Select_Charmap( face, FT_ENCODING_UNICODE ) )
      face->charmap = NULL;
    else
    {
      af_cjk_metrics_init_widths( metrics, face );
#if 0
      /* either need indic specific blue_chars[] or just skip blue zones */
      af_cjk_metrics_init_blues( metrics, face, af_cjk_blue_chars );
#endif
      af_cjk_metrics_check_digits( metrics, face );
    }

    FT_Set_Charmap( face, oldmap );

    return FT_Err_Ok;
  }


  static void
  af_indic_metrics_scale( AF_CJKMetrics  metrics,
                          AF_Scaler      scaler )
  {
    /* use CJK routines */
    af_cjk_metrics_scale( metrics, scaler );
  }


  static FT_Error
  af_indic_hints_init( AF_GlyphHints  hints,
                       AF_CJKMetrics  metrics )
  {
    /* use CJK routines */
    return af_cjk_hints_init( hints, metrics );
  }


  static FT_Error
  af_indic_hints_apply( FT_UInt        glyph_index,
                        AF_GlyphHints  hints,
                        FT_Outline*    outline,
                        AF_CJKMetrics  metrics )
  {
    /* use CJK routines */
    return af_cjk_hints_apply( glyph_index, hints, outline, metrics );
  }


  /* Extract standard_width from writing system/script specific */
  /* metrics class.                                             */

  static void
  af_indic_get_standard_widths( AF_CJKMetrics  metrics,
                                FT_Pos*        stdHW,
                                FT_Pos*        stdVW )
  {
    if ( stdHW )
      *stdHW = metrics->axis[AF_DIMENSION_VERT].standard_width;

    if ( stdVW )
      *stdVW = metrics->axis[AF_DIMENSION_HORZ].standard_width;
  }


  /*************************************************************************/
  /*************************************************************************/
  /*****                                                               *****/
  /*****                I N D I C   S C R I P T   C L A S S            *****/
  /*****                                                               *****/
  /*************************************************************************/
  /*************************************************************************/


  AF_DEFINE_WRITING_SYSTEM_CLASS(
    af_indic_writing_system_class,

    AF_WRITING_SYSTEM_INDIC,

    sizeof ( AF_CJKMetricsRec ),

    (AF_WritingSystem_InitMetricsFunc) af_indic_metrics_init,        /* style_metrics_init    */
    (AF_WritingSystem_ScaleMetricsFunc)af_indic_metrics_scale,       /* style_metrics_scale   */
    (AF_WritingSystem_DoneMetricsFunc) NULL,                         /* style_metrics_done    */
    (AF_WritingSystem_GetStdWidthsFunc)af_indic_get_standard_widths, /* style_metrics_getstdw */

    (AF_WritingSystem_InitHintsFunc)   af_indic_hints_init,          /* style_hints_init      */
    (AF_WritingSystem_ApplyHintsFunc)  af_indic_hints_apply          /* style_hints_apply     */
  )


#else /* !AF_CONFIG_OPTION_INDIC */


  AF_DEFINE_WRITING_SYSTEM_CLASS(
    af_indic_writing_system_class,

    AF_WRITING_SYSTEM_INDIC,

    sizeof ( AF_CJKMetricsRec ),

    (AF_WritingSystem_InitMetricsFunc) NULL, /* style_metrics_init    */
    (AF_WritingSystem_ScaleMetricsFunc)NULL, /* style_metrics_scale   */
    (AF_WritingSystem_DoneMetricsFunc) NULL, /* style_metrics_done    */
    (AF_WritingSystem_GetStdWidthsFunc)NULL, /* style_metrics_getstdw */

    (AF_WritingSystem_InitHintsFunc)   NULL, /* style_hints_init      */
    (AF_WritingSystem_ApplyHintsFunc)  NULL  /* style_hints_apply     */
  )


#endif /* !AF_CONFIG_OPTION_INDIC */


/* END */
@


1.14
log
@
Update to FreeType-2.7.1

i386 bulk build by sthen@@
amd64 bulk build by naddy@@

OK matthieu@@
@
text
@d7 1
a7 1
/*  Copyright 2007-2016 by                                                 */
d21 1
a27 1
#include "afcjk.h"
@


1.13
log
@
Update to FreeType 2.6.3

ok sthen@@, naddy@@, matthieu@@
@
text
@d124 4
a127 4
    (AF_WritingSystem_InitMetricsFunc) af_indic_metrics_init,
    (AF_WritingSystem_ScaleMetricsFunc)af_indic_metrics_scale,
    (AF_WritingSystem_DoneMetricsFunc) NULL,
    (AF_WritingSystem_GetStdWidthsFunc)af_indic_get_standard_widths,
d129 2
a130 2
    (AF_WritingSystem_InitHintsFunc)   af_indic_hints_init,
    (AF_WritingSystem_ApplyHintsFunc)  af_indic_hints_apply
d144 4
a147 4
    (AF_WritingSystem_InitMetricsFunc) NULL,
    (AF_WritingSystem_ScaleMetricsFunc)NULL,
    (AF_WritingSystem_DoneMetricsFunc) NULL,
    (AF_WritingSystem_GetStdWidthsFunc)NULL,
d149 2
a150 2
    (AF_WritingSystem_InitHintsFunc)   NULL,
    (AF_WritingSystem_ApplyHintsFunc)  NULL
@


1.12
log
@
Bugfixing update to freetype-2.6.2

Tested on amd64, i386, macppc, sparc64, loongson and compile-tested
on arm by matthieu@@
Also tested in a ports bulk build by naddy@@

OK matthieu@@
@
text
@d7 1
a7 1
/*  Copyright 2007-2015 by                                                 */
@


1.11
log
@
Update to freetype-2.6.1

OK matthieu@@

Bulk build by naddy@@, thanks!
@
text
@d92 16
d127 1
d147 1
@


1.10
log
@
Update to FreeType 2.6

OK matthieu@@
@
text
@d82 2
a83 1
  af_indic_hints_apply( AF_GlyphHints  hints,
d88 1
a88 1
    return af_cjk_hints_apply( hints, outline, metrics );
@


1.9
log
@
Security/bugfixing update to freetype-2.5.3, featuring a fix for a
vulnerability in the CFF driver (CVE-2014-2240) and assorted minor
fixes.

ok matthieu@@
@
text
@d7 1
a7 1
/*  Copyright 2007, 2011-2013 by                                           */
@


1.8
log
@Update to freetype 2.5.2.

With help for handling ports breakage from at least landry@@, naddy@@,
ajacoutot@@, jasper@@, and dcoppa@@. Thanks to all.

Need an up to date /etc/mtree/BSD.x11.dist (from a base system build)
before building.
@
text
@d5 1
a5 1
/*    Auto-fitter hinting routines for Indic scripts (body).               */
d107 3
a109 3
    (AF_Script_InitMetricsFunc) af_indic_metrics_init,
    (AF_Script_ScaleMetricsFunc)af_indic_metrics_scale,
    (AF_Script_DoneMetricsFunc) NULL,
d111 2
a112 2
    (AF_Script_InitHintsFunc)   af_indic_hints_init,
    (AF_Script_ApplyHintsFunc)  af_indic_hints_apply
a114 14
  /* XXX: this should probably fine tuned to differentiate better between */
  /*      scripts...                                                      */

  static const AF_Script_UniRangeRec  af_deva_uniranges[] =
  {
    AF_UNIRANGE_REC(  0x0900UL,  0x0DFFUL ),  /* Indic Range  */
    AF_UNIRANGE_REC(  0x0F00UL,  0x0FFFUL ),  /* Tibetan      */
    AF_UNIRANGE_REC(  0x1900UL,  0x194FUL ),  /* Limbu        */
    AF_UNIRANGE_REC(  0x1B80UL,  0x1BBFUL ),  /* Sundanese    */
    AF_UNIRANGE_REC(  0x1C80UL,  0x1CDFUL ),  /* Meetei Mayak */
    AF_UNIRANGE_REC(  0xA800UL,  0xA82FUL ),  /* Syloti Nagri */
    AF_UNIRANGE_REC( 0x11800UL, 0x118DFUL ),  /* Sharada      */
    AF_UNIRANGE_REC(       0UL,       0UL )
  };
d116 1
a117 1
#else /* !AF_CONFIG_OPTION_INDIC */
d126 3
a128 3
    (AF_Script_InitMetricsFunc) NULL,
    (AF_Script_ScaleMetricsFunc)NULL,
    (AF_Script_DoneMetricsFunc) NULL,
d130 2
a131 2
    (AF_Script_InitHintsFunc)   NULL,
    (AF_Script_ApplyHintsFunc)  NULL
a134 5
  static const AF_Script_UniRangeRec  af_deva_uniranges[] =
  {
    AF_UNIRANGE_REC( 0UL, 0UL )
  };

a135 12


  AF_DEFINE_SCRIPT_CLASS(
    af_deva_script_class,

    AF_SCRIPT_DEVA,
    (AF_Blue_Stringset)0, /* XXX */
    AF_WRITING_SYSTEM_INDIC,

    af_deva_uniranges,
    'o' /* XXX */
  )
@


1.7
log
@Update to freetype 2.4.12. tested by many during t2k13. Thanks.
@
text
@d100 2
a101 14
  static const AF_Script_UniRangeRec  af_indic_uniranges[] =
  {
#if 0
    AF_UNIRANGE_REC( 0x0100UL, 0xFFFFUL ),  /* why this? */
#endif
    AF_UNIRANGE_REC( 0x0900UL, 0x0DFFUL),    /* Indic Range */
    AF_UNIRANGE_REC( 0x0F00UL, 0x0FFFUL),    /* Tibetan */
    AF_UNIRANGE_REC( 0x1900UL, 0x194FUL),    /* Limbu */
    AF_UNIRANGE_REC( 0x1B80UL, 0x1BBFUL),    /* Sundanese */
    AF_UNIRANGE_REC( 0x1C80UL, 0x1CDFUL),    /* Meetei Mayak */
    AF_UNIRANGE_REC( 0xA800UL, 0xA82FUL),    /* Syloti Nagri */
    AF_UNIRANGE_REC( 0x11800UL, 0x118DFUL),  /* Sharada */
    AF_UNIRANGE_REC(      0UL,      0UL)
  };
d103 1
a103 5

  AF_DEFINE_SCRIPT_CLASS( af_indic_script_class,
    AF_SCRIPT_INDIC,
    af_indic_uniranges,
    'o', /* XXX */
d115 2
a116 1
#else /* !AF_CONFIG_OPTION_INDIC */
d118 1
a118 1
  static const AF_Script_UniRangeRec  af_indic_uniranges[] =
d120 8
a127 1
    { 0, 0 }
d131 6
a136 4
  AF_DEFINE_SCRIPT_CLASS( af_indic_script_class,
    AF_SCRIPT_INDIC,
    af_indic_uniranges,
    0,
d148 6
d155 12
@


1.6
log
@Update to freetype 2.4.11. Tested by krw@@, jasper@@ and on a bulk ports
build by naddy@@.
@
text
@d7 1
a7 1
/*  Copyright 2007, 2011, 2012 by                                          */
d59 1
a59 1
    return AF_Err_Ok;
@


1.5
log
@Update to freetype 2.4.9
Another round of fixes to better handle invalid fonts.   Many of
them are vulnerabilities  (see CVE-2012-1126 up to CVE-2012-1144
and SA48320).
@
text
@d7 1
a7 1
/*  Copyright 2007, 2011 by                                                */
d49 1
a49 1
      af_cjk_metrics_init_widths( metrics, face, 0x7530 );
d119 1
d142 1
@


1.4
log
@Update to freetype 2.4.5. Tested by many.
@
text
@d116 1
a116 1
  AF_DEFINE_SCRIPT_CLASS(af_indic_script_class,
d120 1
a120 1
    sizeof( AF_CJKMetricsRec ),
d138 1
a138 1
  AF_DEFINE_SCRIPT_CLASS(af_indic_script_class,
d142 1
a142 1
    sizeof( AF_CJKMetricsRec ),
@


1.3
log
@Update to freetpe 2.3.12. Tested against ports by naddy@@.
@
text
@d7 1
a7 1
/*  Copyright 2007 by                                                      */
d30 1
a30 1
#ifdef AF_USE_WARPER
d36 2
a37 2
  af_indic_metrics_init( AF_LatinMetrics  metrics,
                         FT_Face          face )
d39 21
a59 2
    /* use CJK routines */
    return af_cjk_metrics_init( metrics, face );
d64 2
a65 2
  af_indic_metrics_scale( AF_LatinMetrics  metrics,
                          AF_Scaler        scaler )
d73 2
a74 2
  af_indic_hints_init( AF_GlyphHints    hints,
                       AF_LatinMetrics  metrics )
d82 3
a84 3
  af_indic_hints_apply( AF_GlyphHints    hints,
                        FT_Outline*      outline,
                        AF_LatinMetrics  metrics)
d106 6
d120 1
a120 1
    sizeof( AF_LatinMetricsRec ),
d142 1
a142 1
    sizeof( AF_LatinMetricsRec ),
@


1.2
log
@Update to freetype 2.3.6.
Contains security fixes for CVE-2008-1806, CVE-2008-1807 and CVE-2008-1808.
Tested by many.
@
text
@d84 1
a84 1
    { 0x0100,  0xFFFF },  /* why this? */
d86 2
a87 2
    { 0x0900, 0x0DFF},    /* Indic Range */
    { 0,       0 }
d91 1
a91 3
  FT_CALLBACK_TABLE_DEF const AF_ScriptClassRec
  af_indic_script_class =
  {
d103 1
a103 1
  };
d113 1
a113 3
  FT_CALLBACK_TABLE_DEF const AF_ScriptClassRec
  af_indic_script_class =
  {
d125 1
a125 1
  };
@


1.1
log
@Initial revision
@
text
@d46 1
a46 1
			  AF_Scaler        scaler )
d55 1
a55 1
		       AF_LatinMetrics  metrics )
d64 2
a65 2
			FT_Outline*      outline,
			AF_LatinMetrics  metrics)
@


1.1.1.1
log
@import freetype 2.3.5
@
text
@@
