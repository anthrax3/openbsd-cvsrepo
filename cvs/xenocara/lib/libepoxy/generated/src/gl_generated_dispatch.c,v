head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.6
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.0.2
	OPENBSD_5_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2015.08.20.03.10.38;	author jsg;	state Exp;
branches;
next	1.1;
commitid	VGsagCHtATJ8qjDX;

1.1
date	2015.04.15.07.58.58;	author jsg;	state Exp;
branches;
next	;
commitid	ZhQTCyyZds0N3gWF;


desc
@@


1.2
log
@update to libepoxy 1.3.1
ok aja@@
@
text
@/* GL dispatch code.
 * This is code-generated from the GL API XML files from Khronos.
 * 
 * Copyright (c) 2013-2014 The Khronos Group Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and/or associated documentation files (the
 * "Materials"), to deal in the Materials without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Materials, and to
 * permit persons to whom the Materials are furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Materials.
 * 
 * THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.
 * 
 */

#include <stdlib.h>
#include <string.h>
#include <stdio.h>

#include "dispatch_common.h"
#include "epoxy/gl.h"

#ifdef __GNUC__
#define EPOXY_NOINLINE __attribute__((noinline))
#elif defined (_MSC_VER)
#define EPOXY_NOINLINE __declspec(noinline)
#endif
struct dispatch_table {
    PFNGLACCUMPROC epoxy_glAccum;
    PFNGLACCUMXOESPROC epoxy_glAccumxOES;
    PFNGLACTIVEPROGRAMEXTPROC epoxy_glActiveProgramEXT;
    PFNGLACTIVESHADERPROGRAMPROC epoxy_glActiveShaderProgram;
    PFNGLACTIVESHADERPROGRAMEXTPROC epoxy_glActiveShaderProgramEXT;
    PFNGLACTIVESTENCILFACEEXTPROC epoxy_glActiveStencilFaceEXT;
    PFNGLACTIVETEXTUREPROC epoxy_glActiveTexture;
    PFNGLACTIVETEXTUREARBPROC epoxy_glActiveTextureARB;
    PFNGLACTIVEVARYINGNVPROC epoxy_glActiveVaryingNV;
    PFNGLALPHAFRAGMENTOP1ATIPROC epoxy_glAlphaFragmentOp1ATI;
    PFNGLALPHAFRAGMENTOP2ATIPROC epoxy_glAlphaFragmentOp2ATI;
    PFNGLALPHAFRAGMENTOP3ATIPROC epoxy_glAlphaFragmentOp3ATI;
    PFNGLALPHAFUNCPROC epoxy_glAlphaFunc;
    PFNGLALPHAFUNCQCOMPROC epoxy_glAlphaFuncQCOM;
    PFNGLALPHAFUNCXPROC epoxy_glAlphaFuncx;
    PFNGLALPHAFUNCXOESPROC epoxy_glAlphaFuncxOES;
    PFNGLAPPLYTEXTUREEXTPROC epoxy_glApplyTextureEXT;
    PFNGLAREPROGRAMSRESIDENTNVPROC epoxy_glAreProgramsResidentNV;
    PFNGLARETEXTURESRESIDENTPROC epoxy_glAreTexturesResident;
    PFNGLARETEXTURESRESIDENTEXTPROC epoxy_glAreTexturesResidentEXT;
    PFNGLARRAYELEMENTPROC epoxy_glArrayElement;
    PFNGLARRAYELEMENTEXTPROC epoxy_glArrayElementEXT;
    PFNGLARRAYOBJECTATIPROC epoxy_glArrayObjectATI;
    PFNGLASYNCMARKERSGIXPROC epoxy_glAsyncMarkerSGIX;
    PFNGLATTACHOBJECTARBPROC epoxy_glAttachObjectARB;
    PFNGLATTACHSHADERPROC epoxy_glAttachShader;
    PFNGLBEGINPROC epoxy_glBegin_unwrapped;
    PFNGLBEGINCONDITIONALRENDERPROC epoxy_glBeginConditionalRender;
    PFNGLBEGINCONDITIONALRENDERNVPROC epoxy_glBeginConditionalRenderNV;
    PFNGLBEGINCONDITIONALRENDERNVXPROC epoxy_glBeginConditionalRenderNVX;
    PFNGLBEGINFRAGMENTSHADERATIPROC epoxy_glBeginFragmentShaderATI;
    PFNGLBEGINOCCLUSIONQUERYNVPROC epoxy_glBeginOcclusionQueryNV;
    PFNGLBEGINPERFMONITORAMDPROC epoxy_glBeginPerfMonitorAMD;
    PFNGLBEGINPERFQUERYINTELPROC epoxy_glBeginPerfQueryINTEL;
    PFNGLBEGINQUERYPROC epoxy_glBeginQuery;
    PFNGLBEGINQUERYARBPROC epoxy_glBeginQueryARB;
    PFNGLBEGINQUERYEXTPROC epoxy_glBeginQueryEXT;
    PFNGLBEGINQUERYINDEXEDPROC epoxy_glBeginQueryIndexed;
    PFNGLBEGINTRANSFORMFEEDBACKPROC epoxy_glBeginTransformFeedback;
    PFNGLBEGINTRANSFORMFEEDBACKEXTPROC epoxy_glBeginTransformFeedbackEXT;
    PFNGLBEGINTRANSFORMFEEDBACKNVPROC epoxy_glBeginTransformFeedbackNV;
    PFNGLBEGINVERTEXSHADEREXTPROC epoxy_glBeginVertexShaderEXT;
    PFNGLBEGINVIDEOCAPTURENVPROC epoxy_glBeginVideoCaptureNV;
    PFNGLBINDATTRIBLOCATIONPROC epoxy_glBindAttribLocation;
    PFNGLBINDATTRIBLOCATIONARBPROC epoxy_glBindAttribLocationARB;
    PFNGLBINDBUFFERPROC epoxy_glBindBuffer;
    PFNGLBINDBUFFERARBPROC epoxy_glBindBufferARB;
    PFNGLBINDBUFFERBASEPROC epoxy_glBindBufferBase;
    PFNGLBINDBUFFERBASEEXTPROC epoxy_glBindBufferBaseEXT;
    PFNGLBINDBUFFERBASENVPROC epoxy_glBindBufferBaseNV;
    PFNGLBINDBUFFEROFFSETEXTPROC epoxy_glBindBufferOffsetEXT;
    PFNGLBINDBUFFEROFFSETNVPROC epoxy_glBindBufferOffsetNV;
    PFNGLBINDBUFFERRANGEPROC epoxy_glBindBufferRange;
    PFNGLBINDBUFFERRANGEEXTPROC epoxy_glBindBufferRangeEXT;
    PFNGLBINDBUFFERRANGENVPROC epoxy_glBindBufferRangeNV;
    PFNGLBINDBUFFERSBASEPROC epoxy_glBindBuffersBase;
    PFNGLBINDBUFFERSRANGEPROC epoxy_glBindBuffersRange;
    PFNGLBINDFRAGDATALOCATIONPROC epoxy_glBindFragDataLocation;
    PFNGLBINDFRAGDATALOCATIONEXTPROC epoxy_glBindFragDataLocationEXT;
    PFNGLBINDFRAGDATALOCATIONINDEXEDPROC epoxy_glBindFragDataLocationIndexed;
    PFNGLBINDFRAGMENTSHADERATIPROC epoxy_glBindFragmentShaderATI;
    PFNGLBINDFRAMEBUFFERPROC epoxy_glBindFramebuffer;
    PFNGLBINDFRAMEBUFFEREXTPROC epoxy_glBindFramebufferEXT;
    PFNGLBINDFRAMEBUFFEROESPROC epoxy_glBindFramebufferOES;
    PFNGLBINDIMAGETEXTUREPROC epoxy_glBindImageTexture;
    PFNGLBINDIMAGETEXTUREEXTPROC epoxy_glBindImageTextureEXT;
    PFNGLBINDIMAGETEXTURESPROC epoxy_glBindImageTextures;
    PFNGLBINDLIGHTPARAMETEREXTPROC epoxy_glBindLightParameterEXT;
    PFNGLBINDMATERIALPARAMETEREXTPROC epoxy_glBindMaterialParameterEXT;
    PFNGLBINDMULTITEXTUREEXTPROC epoxy_glBindMultiTextureEXT;
    PFNGLBINDPARAMETEREXTPROC epoxy_glBindParameterEXT;
    PFNGLBINDPROGRAMARBPROC epoxy_glBindProgramARB;
    PFNGLBINDPROGRAMNVPROC epoxy_glBindProgramNV;
    PFNGLBINDPROGRAMPIPELINEPROC epoxy_glBindProgramPipeline;
    PFNGLBINDPROGRAMPIPELINEEXTPROC epoxy_glBindProgramPipelineEXT;
    PFNGLBINDRENDERBUFFERPROC epoxy_glBindRenderbuffer;
    PFNGLBINDRENDERBUFFEREXTPROC epoxy_glBindRenderbufferEXT;
    PFNGLBINDRENDERBUFFEROESPROC epoxy_glBindRenderbufferOES;
    PFNGLBINDSAMPLERPROC epoxy_glBindSampler;
    PFNGLBINDSAMPLERSPROC epoxy_glBindSamplers;
    PFNGLBINDTEXGENPARAMETEREXTPROC epoxy_glBindTexGenParameterEXT;
    PFNGLBINDTEXTUREPROC epoxy_glBindTexture;
    PFNGLBINDTEXTUREEXTPROC epoxy_glBindTextureEXT;
    PFNGLBINDTEXTUREUNITPROC epoxy_glBindTextureUnit;
    PFNGLBINDTEXTUREUNITPARAMETEREXTPROC epoxy_glBindTextureUnitParameterEXT;
    PFNGLBINDTEXTURESPROC epoxy_glBindTextures;
    PFNGLBINDTRANSFORMFEEDBACKPROC epoxy_glBindTransformFeedback;
    PFNGLBINDTRANSFORMFEEDBACKNVPROC epoxy_glBindTransformFeedbackNV;
    PFNGLBINDVERTEXARRAYPROC epoxy_glBindVertexArray;
    PFNGLBINDVERTEXARRAYAPPLEPROC epoxy_glBindVertexArrayAPPLE;
    PFNGLBINDVERTEXARRAYOESPROC epoxy_glBindVertexArrayOES;
    PFNGLBINDVERTEXBUFFERPROC epoxy_glBindVertexBuffer;
    PFNGLBINDVERTEXBUFFERSPROC epoxy_glBindVertexBuffers;
    PFNGLBINDVERTEXSHADEREXTPROC epoxy_glBindVertexShaderEXT;
    PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC epoxy_glBindVideoCaptureStreamBufferNV;
    PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC epoxy_glBindVideoCaptureStreamTextureNV;
    PFNGLBINORMAL3BEXTPROC epoxy_glBinormal3bEXT;
    PFNGLBINORMAL3BVEXTPROC epoxy_glBinormal3bvEXT;
    PFNGLBINORMAL3DEXTPROC epoxy_glBinormal3dEXT;
    PFNGLBINORMAL3DVEXTPROC epoxy_glBinormal3dvEXT;
    PFNGLBINORMAL3FEXTPROC epoxy_glBinormal3fEXT;
    PFNGLBINORMAL3FVEXTPROC epoxy_glBinormal3fvEXT;
    PFNGLBINORMAL3IEXTPROC epoxy_glBinormal3iEXT;
    PFNGLBINORMAL3IVEXTPROC epoxy_glBinormal3ivEXT;
    PFNGLBINORMAL3SEXTPROC epoxy_glBinormal3sEXT;
    PFNGLBINORMAL3SVEXTPROC epoxy_glBinormal3svEXT;
    PFNGLBINORMALPOINTEREXTPROC epoxy_glBinormalPointerEXT;
    PFNGLBITMAPPROC epoxy_glBitmap;
    PFNGLBITMAPXOESPROC epoxy_glBitmapxOES;
    PFNGLBLENDBARRIERKHRPROC epoxy_glBlendBarrierKHR;
    PFNGLBLENDBARRIERNVPROC epoxy_glBlendBarrierNV;
    PFNGLBLENDCOLORPROC epoxy_glBlendColor;
    PFNGLBLENDCOLOREXTPROC epoxy_glBlendColorEXT;
    PFNGLBLENDCOLORXOESPROC epoxy_glBlendColorxOES;
    PFNGLBLENDEQUATIONPROC epoxy_glBlendEquation;
    PFNGLBLENDEQUATIONEXTPROC epoxy_glBlendEquationEXT;
    PFNGLBLENDEQUATIONINDEXEDAMDPROC epoxy_glBlendEquationIndexedAMD;
    PFNGLBLENDEQUATIONOESPROC epoxy_glBlendEquationOES;
    PFNGLBLENDEQUATIONSEPARATEPROC epoxy_glBlendEquationSeparate;
    PFNGLBLENDEQUATIONSEPARATEEXTPROC epoxy_glBlendEquationSeparateEXT;
    PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC epoxy_glBlendEquationSeparateIndexedAMD;
    PFNGLBLENDEQUATIONSEPARATEOESPROC epoxy_glBlendEquationSeparateOES;
    PFNGLBLENDEQUATIONSEPARATEIPROC epoxy_glBlendEquationSeparatei;
    PFNGLBLENDEQUATIONSEPARATEIARBPROC epoxy_glBlendEquationSeparateiARB;
    PFNGLBLENDEQUATIONSEPARATEIEXTPROC epoxy_glBlendEquationSeparateiEXT;
    PFNGLBLENDEQUATIONSEPARATEIOESPROC epoxy_glBlendEquationSeparateiOES;
    PFNGLBLENDEQUATIONIPROC epoxy_glBlendEquationi;
    PFNGLBLENDEQUATIONIARBPROC epoxy_glBlendEquationiARB;
    PFNGLBLENDEQUATIONIEXTPROC epoxy_glBlendEquationiEXT;
    PFNGLBLENDEQUATIONIOESPROC epoxy_glBlendEquationiOES;
    PFNGLBLENDFUNCPROC epoxy_glBlendFunc;
    PFNGLBLENDFUNCINDEXEDAMDPROC epoxy_glBlendFuncIndexedAMD;
    PFNGLBLENDFUNCSEPARATEPROC epoxy_glBlendFuncSeparate;
    PFNGLBLENDFUNCSEPARATEEXTPROC epoxy_glBlendFuncSeparateEXT;
    PFNGLBLENDFUNCSEPARATEINGRPROC epoxy_glBlendFuncSeparateINGR;
    PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC epoxy_glBlendFuncSeparateIndexedAMD;
    PFNGLBLENDFUNCSEPARATEOESPROC epoxy_glBlendFuncSeparateOES;
    PFNGLBLENDFUNCSEPARATEIPROC epoxy_glBlendFuncSeparatei;
    PFNGLBLENDFUNCSEPARATEIARBPROC epoxy_glBlendFuncSeparateiARB;
    PFNGLBLENDFUNCSEPARATEIEXTPROC epoxy_glBlendFuncSeparateiEXT;
    PFNGLBLENDFUNCSEPARATEIOESPROC epoxy_glBlendFuncSeparateiOES;
    PFNGLBLENDFUNCIPROC epoxy_glBlendFunci;
    PFNGLBLENDFUNCIARBPROC epoxy_glBlendFunciARB;
    PFNGLBLENDFUNCIEXTPROC epoxy_glBlendFunciEXT;
    PFNGLBLENDFUNCIOESPROC epoxy_glBlendFunciOES;
    PFNGLBLENDPARAMETERINVPROC epoxy_glBlendParameteriNV;
    PFNGLBLITFRAMEBUFFERPROC epoxy_glBlitFramebuffer;
    PFNGLBLITFRAMEBUFFERANGLEPROC epoxy_glBlitFramebufferANGLE;
    PFNGLBLITFRAMEBUFFEREXTPROC epoxy_glBlitFramebufferEXT;
    PFNGLBLITFRAMEBUFFERNVPROC epoxy_glBlitFramebufferNV;
    PFNGLBLITNAMEDFRAMEBUFFERPROC epoxy_glBlitNamedFramebuffer;
    PFNGLBUFFERADDRESSRANGENVPROC epoxy_glBufferAddressRangeNV;
    PFNGLBUFFERDATAPROC epoxy_glBufferData;
    PFNGLBUFFERDATAARBPROC epoxy_glBufferDataARB;
    PFNGLBUFFERPAGECOMMITMENTARBPROC epoxy_glBufferPageCommitmentARB;
    PFNGLBUFFERPARAMETERIAPPLEPROC epoxy_glBufferParameteriAPPLE;
    PFNGLBUFFERSTORAGEPROC epoxy_glBufferStorage;
    PFNGLBUFFERSTORAGEEXTPROC epoxy_glBufferStorageEXT;
    PFNGLBUFFERSUBDATAPROC epoxy_glBufferSubData;
    PFNGLBUFFERSUBDATAARBPROC epoxy_glBufferSubDataARB;
    PFNGLCALLCOMMANDLISTNVPROC epoxy_glCallCommandListNV;
    PFNGLCALLLISTPROC epoxy_glCallList;
    PFNGLCALLLISTSPROC epoxy_glCallLists;
    PFNGLCHECKFRAMEBUFFERSTATUSPROC epoxy_glCheckFramebufferStatus;
    PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC epoxy_glCheckFramebufferStatusEXT;
    PFNGLCHECKFRAMEBUFFERSTATUSOESPROC epoxy_glCheckFramebufferStatusOES;
    PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC epoxy_glCheckNamedFramebufferStatus;
    PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC epoxy_glCheckNamedFramebufferStatusEXT;
    PFNGLCLAMPCOLORPROC epoxy_glClampColor;
    PFNGLCLAMPCOLORARBPROC epoxy_glClampColorARB;
    PFNGLCLEARPROC epoxy_glClear;
    PFNGLCLEARACCUMPROC epoxy_glClearAccum;
    PFNGLCLEARACCUMXOESPROC epoxy_glClearAccumxOES;
    PFNGLCLEARBUFFERDATAPROC epoxy_glClearBufferData;
    PFNGLCLEARBUFFERSUBDATAPROC epoxy_glClearBufferSubData;
    PFNGLCLEARBUFFERFIPROC epoxy_glClearBufferfi;
    PFNGLCLEARBUFFERFVPROC epoxy_glClearBufferfv;
    PFNGLCLEARBUFFERIVPROC epoxy_glClearBufferiv;
    PFNGLCLEARBUFFERUIVPROC epoxy_glClearBufferuiv;
    PFNGLCLEARCOLORPROC epoxy_glClearColor;
    PFNGLCLEARCOLORIIEXTPROC epoxy_glClearColorIiEXT;
    PFNGLCLEARCOLORIUIEXTPROC epoxy_glClearColorIuiEXT;
    PFNGLCLEARCOLORXPROC epoxy_glClearColorx;
    PFNGLCLEARCOLORXOESPROC epoxy_glClearColorxOES;
    PFNGLCLEARDEPTHPROC epoxy_glClearDepth;
    PFNGLCLEARDEPTHDNVPROC epoxy_glClearDepthdNV;
    PFNGLCLEARDEPTHFPROC epoxy_glClearDepthf;
    PFNGLCLEARDEPTHFOESPROC epoxy_glClearDepthfOES;
    PFNGLCLEARDEPTHXPROC epoxy_glClearDepthx;
    PFNGLCLEARDEPTHXOESPROC epoxy_glClearDepthxOES;
    PFNGLCLEARINDEXPROC epoxy_glClearIndex;
    PFNGLCLEARNAMEDBUFFERDATAPROC epoxy_glClearNamedBufferData;
    PFNGLCLEARNAMEDBUFFERDATAEXTPROC epoxy_glClearNamedBufferDataEXT;
    PFNGLCLEARNAMEDBUFFERSUBDATAPROC epoxy_glClearNamedBufferSubData;
    PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC epoxy_glClearNamedBufferSubDataEXT;
    PFNGLCLEARNAMEDFRAMEBUFFERFIPROC epoxy_glClearNamedFramebufferfi;
    PFNGLCLEARNAMEDFRAMEBUFFERFVPROC epoxy_glClearNamedFramebufferfv;
    PFNGLCLEARNAMEDFRAMEBUFFERIVPROC epoxy_glClearNamedFramebufferiv;
    PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC epoxy_glClearNamedFramebufferuiv;
    PFNGLCLEARSTENCILPROC epoxy_glClearStencil;
    PFNGLCLEARTEXIMAGEPROC epoxy_glClearTexImage;
    PFNGLCLEARTEXSUBIMAGEPROC epoxy_glClearTexSubImage;
    PFNGLCLIENTACTIVETEXTUREPROC epoxy_glClientActiveTexture;
    PFNGLCLIENTACTIVETEXTUREARBPROC epoxy_glClientActiveTextureARB;
    PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC epoxy_glClientActiveVertexStreamATI;
    PFNGLCLIENTATTRIBDEFAULTEXTPROC epoxy_glClientAttribDefaultEXT;
    PFNGLCLIENTWAITSYNCPROC epoxy_glClientWaitSync;
    PFNGLCLIENTWAITSYNCAPPLEPROC epoxy_glClientWaitSyncAPPLE;
    PFNGLCLIPCONTROLPROC epoxy_glClipControl;
    PFNGLCLIPPLANEPROC epoxy_glClipPlane;
    PFNGLCLIPPLANEFPROC epoxy_glClipPlanef;
    PFNGLCLIPPLANEFIMGPROC epoxy_glClipPlanefIMG;
    PFNGLCLIPPLANEFOESPROC epoxy_glClipPlanefOES;
    PFNGLCLIPPLANEXPROC epoxy_glClipPlanex;
    PFNGLCLIPPLANEXIMGPROC epoxy_glClipPlanexIMG;
    PFNGLCLIPPLANEXOESPROC epoxy_glClipPlanexOES;
    PFNGLCOLOR3BPROC epoxy_glColor3b;
    PFNGLCOLOR3BVPROC epoxy_glColor3bv;
    PFNGLCOLOR3DPROC epoxy_glColor3d;
    PFNGLCOLOR3DVPROC epoxy_glColor3dv;
    PFNGLCOLOR3FPROC epoxy_glColor3f;
    PFNGLCOLOR3FVERTEX3FSUNPROC epoxy_glColor3fVertex3fSUN;
    PFNGLCOLOR3FVERTEX3FVSUNPROC epoxy_glColor3fVertex3fvSUN;
    PFNGLCOLOR3FVPROC epoxy_glColor3fv;
    PFNGLCOLOR3HNVPROC epoxy_glColor3hNV;
    PFNGLCOLOR3HVNVPROC epoxy_glColor3hvNV;
    PFNGLCOLOR3IPROC epoxy_glColor3i;
    PFNGLCOLOR3IVPROC epoxy_glColor3iv;
    PFNGLCOLOR3SPROC epoxy_glColor3s;
    PFNGLCOLOR3SVPROC epoxy_glColor3sv;
    PFNGLCOLOR3UBPROC epoxy_glColor3ub;
    PFNGLCOLOR3UBVPROC epoxy_glColor3ubv;
    PFNGLCOLOR3UIPROC epoxy_glColor3ui;
    PFNGLCOLOR3UIVPROC epoxy_glColor3uiv;
    PFNGLCOLOR3USPROC epoxy_glColor3us;
    PFNGLCOLOR3USVPROC epoxy_glColor3usv;
    PFNGLCOLOR3XOESPROC epoxy_glColor3xOES;
    PFNGLCOLOR3XVOESPROC epoxy_glColor3xvOES;
    PFNGLCOLOR4BPROC epoxy_glColor4b;
    PFNGLCOLOR4BVPROC epoxy_glColor4bv;
    PFNGLCOLOR4DPROC epoxy_glColor4d;
    PFNGLCOLOR4DVPROC epoxy_glColor4dv;
    PFNGLCOLOR4FPROC epoxy_glColor4f;
    PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC epoxy_glColor4fNormal3fVertex3fSUN;
    PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC epoxy_glColor4fNormal3fVertex3fvSUN;
    PFNGLCOLOR4FVPROC epoxy_glColor4fv;
    PFNGLCOLOR4HNVPROC epoxy_glColor4hNV;
    PFNGLCOLOR4HVNVPROC epoxy_glColor4hvNV;
    PFNGLCOLOR4IPROC epoxy_glColor4i;
    PFNGLCOLOR4IVPROC epoxy_glColor4iv;
    PFNGLCOLOR4SPROC epoxy_glColor4s;
    PFNGLCOLOR4SVPROC epoxy_glColor4sv;
    PFNGLCOLOR4UBPROC epoxy_glColor4ub;
    PFNGLCOLOR4UBVERTEX2FSUNPROC epoxy_glColor4ubVertex2fSUN;
    PFNGLCOLOR4UBVERTEX2FVSUNPROC epoxy_glColor4ubVertex2fvSUN;
    PFNGLCOLOR4UBVERTEX3FSUNPROC epoxy_glColor4ubVertex3fSUN;
    PFNGLCOLOR4UBVERTEX3FVSUNPROC epoxy_glColor4ubVertex3fvSUN;
    PFNGLCOLOR4UBVPROC epoxy_glColor4ubv;
    PFNGLCOLOR4UIPROC epoxy_glColor4ui;
    PFNGLCOLOR4UIVPROC epoxy_glColor4uiv;
    PFNGLCOLOR4USPROC epoxy_glColor4us;
    PFNGLCOLOR4USVPROC epoxy_glColor4usv;
    PFNGLCOLOR4XPROC epoxy_glColor4x;
    PFNGLCOLOR4XOESPROC epoxy_glColor4xOES;
    PFNGLCOLOR4XVOESPROC epoxy_glColor4xvOES;
    PFNGLCOLORFORMATNVPROC epoxy_glColorFormatNV;
    PFNGLCOLORFRAGMENTOP1ATIPROC epoxy_glColorFragmentOp1ATI;
    PFNGLCOLORFRAGMENTOP2ATIPROC epoxy_glColorFragmentOp2ATI;
    PFNGLCOLORFRAGMENTOP3ATIPROC epoxy_glColorFragmentOp3ATI;
    PFNGLCOLORMASKPROC epoxy_glColorMask;
    PFNGLCOLORMASKINDEXEDEXTPROC epoxy_glColorMaskIndexedEXT;
    PFNGLCOLORMASKIPROC epoxy_glColorMaski;
    PFNGLCOLORMASKIEXTPROC epoxy_glColorMaskiEXT;
    PFNGLCOLORMASKIOESPROC epoxy_glColorMaskiOES;
    PFNGLCOLORMATERIALPROC epoxy_glColorMaterial;
    PFNGLCOLORP3UIPROC epoxy_glColorP3ui;
    PFNGLCOLORP3UIVPROC epoxy_glColorP3uiv;
    PFNGLCOLORP4UIPROC epoxy_glColorP4ui;
    PFNGLCOLORP4UIVPROC epoxy_glColorP4uiv;
    PFNGLCOLORPOINTERPROC epoxy_glColorPointer;
    PFNGLCOLORPOINTEREXTPROC epoxy_glColorPointerEXT;
    PFNGLCOLORPOINTERLISTIBMPROC epoxy_glColorPointerListIBM;
    PFNGLCOLORPOINTERVINTELPROC epoxy_glColorPointervINTEL;
    PFNGLCOLORSUBTABLEPROC epoxy_glColorSubTable;
    PFNGLCOLORSUBTABLEEXTPROC epoxy_glColorSubTableEXT;
    PFNGLCOLORTABLEPROC epoxy_glColorTable;
    PFNGLCOLORTABLEEXTPROC epoxy_glColorTableEXT;
    PFNGLCOLORTABLEPARAMETERFVPROC epoxy_glColorTableParameterfv;
    PFNGLCOLORTABLEPARAMETERFVSGIPROC epoxy_glColorTableParameterfvSGI;
    PFNGLCOLORTABLEPARAMETERIVPROC epoxy_glColorTableParameteriv;
    PFNGLCOLORTABLEPARAMETERIVSGIPROC epoxy_glColorTableParameterivSGI;
    PFNGLCOLORTABLESGIPROC epoxy_glColorTableSGI;
    PFNGLCOMBINERINPUTNVPROC epoxy_glCombinerInputNV;
    PFNGLCOMBINEROUTPUTNVPROC epoxy_glCombinerOutputNV;
    PFNGLCOMBINERPARAMETERFNVPROC epoxy_glCombinerParameterfNV;
    PFNGLCOMBINERPARAMETERFVNVPROC epoxy_glCombinerParameterfvNV;
    PFNGLCOMBINERPARAMETERINVPROC epoxy_glCombinerParameteriNV;
    PFNGLCOMBINERPARAMETERIVNVPROC epoxy_glCombinerParameterivNV;
    PFNGLCOMBINERSTAGEPARAMETERFVNVPROC epoxy_glCombinerStageParameterfvNV;
    PFNGLCOMMANDLISTSEGMENTSNVPROC epoxy_glCommandListSegmentsNV;
    PFNGLCOMPILECOMMANDLISTNVPROC epoxy_glCompileCommandListNV;
    PFNGLCOMPILESHADERPROC epoxy_glCompileShader;
    PFNGLCOMPILESHADERARBPROC epoxy_glCompileShaderARB;
    PFNGLCOMPILESHADERINCLUDEARBPROC epoxy_glCompileShaderIncludeARB;
    PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC epoxy_glCompressedMultiTexImage1DEXT;
    PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC epoxy_glCompressedMultiTexImage2DEXT;
    PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC epoxy_glCompressedMultiTexImage3DEXT;
    PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC epoxy_glCompressedMultiTexSubImage1DEXT;
    PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC epoxy_glCompressedMultiTexSubImage2DEXT;
    PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC epoxy_glCompressedMultiTexSubImage3DEXT;
    PFNGLCOMPRESSEDTEXIMAGE1DPROC epoxy_glCompressedTexImage1D;
    PFNGLCOMPRESSEDTEXIMAGE1DARBPROC epoxy_glCompressedTexImage1DARB;
    PFNGLCOMPRESSEDTEXIMAGE2DPROC epoxy_glCompressedTexImage2D;
    PFNGLCOMPRESSEDTEXIMAGE2DARBPROC epoxy_glCompressedTexImage2DARB;
    PFNGLCOMPRESSEDTEXIMAGE3DPROC epoxy_glCompressedTexImage3D;
    PFNGLCOMPRESSEDTEXIMAGE3DARBPROC epoxy_glCompressedTexImage3DARB;
    PFNGLCOMPRESSEDTEXIMAGE3DOESPROC epoxy_glCompressedTexImage3DOES;
    PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC epoxy_glCompressedTexSubImage1D;
    PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC epoxy_glCompressedTexSubImage1DARB;
    PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC epoxy_glCompressedTexSubImage2D;
    PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC epoxy_glCompressedTexSubImage2DARB;
    PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC epoxy_glCompressedTexSubImage3D;
    PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC epoxy_glCompressedTexSubImage3DARB;
    PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC epoxy_glCompressedTexSubImage3DOES;
    PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC epoxy_glCompressedTextureImage1DEXT;
    PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC epoxy_glCompressedTextureImage2DEXT;
    PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC epoxy_glCompressedTextureImage3DEXT;
    PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC epoxy_glCompressedTextureSubImage1D;
    PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC epoxy_glCompressedTextureSubImage1DEXT;
    PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC epoxy_glCompressedTextureSubImage2D;
    PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC epoxy_glCompressedTextureSubImage2DEXT;
    PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC epoxy_glCompressedTextureSubImage3D;
    PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC epoxy_glCompressedTextureSubImage3DEXT;
    PFNGLCONVOLUTIONFILTER1DPROC epoxy_glConvolutionFilter1D;
    PFNGLCONVOLUTIONFILTER1DEXTPROC epoxy_glConvolutionFilter1DEXT;
    PFNGLCONVOLUTIONFILTER2DPROC epoxy_glConvolutionFilter2D;
    PFNGLCONVOLUTIONFILTER2DEXTPROC epoxy_glConvolutionFilter2DEXT;
    PFNGLCONVOLUTIONPARAMETERFPROC epoxy_glConvolutionParameterf;
    PFNGLCONVOLUTIONPARAMETERFEXTPROC epoxy_glConvolutionParameterfEXT;
    PFNGLCONVOLUTIONPARAMETERFVPROC epoxy_glConvolutionParameterfv;
    PFNGLCONVOLUTIONPARAMETERFVEXTPROC epoxy_glConvolutionParameterfvEXT;
    PFNGLCONVOLUTIONPARAMETERIPROC epoxy_glConvolutionParameteri;
    PFNGLCONVOLUTIONPARAMETERIEXTPROC epoxy_glConvolutionParameteriEXT;
    PFNGLCONVOLUTIONPARAMETERIVPROC epoxy_glConvolutionParameteriv;
    PFNGLCONVOLUTIONPARAMETERIVEXTPROC epoxy_glConvolutionParameterivEXT;
    PFNGLCONVOLUTIONPARAMETERXOESPROC epoxy_glConvolutionParameterxOES;
    PFNGLCONVOLUTIONPARAMETERXVOESPROC epoxy_glConvolutionParameterxvOES;
    PFNGLCOPYBUFFERSUBDATAPROC epoxy_glCopyBufferSubData;
    PFNGLCOPYBUFFERSUBDATANVPROC epoxy_glCopyBufferSubDataNV;
    PFNGLCOPYCOLORSUBTABLEPROC epoxy_glCopyColorSubTable;
    PFNGLCOPYCOLORSUBTABLEEXTPROC epoxy_glCopyColorSubTableEXT;
    PFNGLCOPYCOLORTABLEPROC epoxy_glCopyColorTable;
    PFNGLCOPYCOLORTABLESGIPROC epoxy_glCopyColorTableSGI;
    PFNGLCOPYCONVOLUTIONFILTER1DPROC epoxy_glCopyConvolutionFilter1D;
    PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC epoxy_glCopyConvolutionFilter1DEXT;
    PFNGLCOPYCONVOLUTIONFILTER2DPROC epoxy_glCopyConvolutionFilter2D;
    PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC epoxy_glCopyConvolutionFilter2DEXT;
    PFNGLCOPYIMAGESUBDATAPROC epoxy_glCopyImageSubData;
    PFNGLCOPYIMAGESUBDATAEXTPROC epoxy_glCopyImageSubDataEXT;
    PFNGLCOPYIMAGESUBDATANVPROC epoxy_glCopyImageSubDataNV;
    PFNGLCOPYIMAGESUBDATAOESPROC epoxy_glCopyImageSubDataOES;
    PFNGLCOPYMULTITEXIMAGE1DEXTPROC epoxy_glCopyMultiTexImage1DEXT;
    PFNGLCOPYMULTITEXIMAGE2DEXTPROC epoxy_glCopyMultiTexImage2DEXT;
    PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC epoxy_glCopyMultiTexSubImage1DEXT;
    PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC epoxy_glCopyMultiTexSubImage2DEXT;
    PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC epoxy_glCopyMultiTexSubImage3DEXT;
    PFNGLCOPYNAMEDBUFFERSUBDATAPROC epoxy_glCopyNamedBufferSubData;
    PFNGLCOPYPATHNVPROC epoxy_glCopyPathNV;
    PFNGLCOPYPIXELSPROC epoxy_glCopyPixels;
    PFNGLCOPYTEXIMAGE1DPROC epoxy_glCopyTexImage1D;
    PFNGLCOPYTEXIMAGE1DEXTPROC epoxy_glCopyTexImage1DEXT;
    PFNGLCOPYTEXIMAGE2DPROC epoxy_glCopyTexImage2D;
    PFNGLCOPYTEXIMAGE2DEXTPROC epoxy_glCopyTexImage2DEXT;
    PFNGLCOPYTEXSUBIMAGE1DPROC epoxy_glCopyTexSubImage1D;
    PFNGLCOPYTEXSUBIMAGE1DEXTPROC epoxy_glCopyTexSubImage1DEXT;
    PFNGLCOPYTEXSUBIMAGE2DPROC epoxy_glCopyTexSubImage2D;
    PFNGLCOPYTEXSUBIMAGE2DEXTPROC epoxy_glCopyTexSubImage2DEXT;
    PFNGLCOPYTEXSUBIMAGE3DPROC epoxy_glCopyTexSubImage3D;
    PFNGLCOPYTEXSUBIMAGE3DEXTPROC epoxy_glCopyTexSubImage3DEXT;
    PFNGLCOPYTEXSUBIMAGE3DOESPROC epoxy_glCopyTexSubImage3DOES;
    PFNGLCOPYTEXTUREIMAGE1DEXTPROC epoxy_glCopyTextureImage1DEXT;
    PFNGLCOPYTEXTUREIMAGE2DEXTPROC epoxy_glCopyTextureImage2DEXT;
    PFNGLCOPYTEXTURELEVELSAPPLEPROC epoxy_glCopyTextureLevelsAPPLE;
    PFNGLCOPYTEXTURESUBIMAGE1DPROC epoxy_glCopyTextureSubImage1D;
    PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC epoxy_glCopyTextureSubImage1DEXT;
    PFNGLCOPYTEXTURESUBIMAGE2DPROC epoxy_glCopyTextureSubImage2D;
    PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC epoxy_glCopyTextureSubImage2DEXT;
    PFNGLCOPYTEXTURESUBIMAGE3DPROC epoxy_glCopyTextureSubImage3D;
    PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC epoxy_glCopyTextureSubImage3DEXT;
    PFNGLCOVERFILLPATHINSTANCEDNVPROC epoxy_glCoverFillPathInstancedNV;
    PFNGLCOVERFILLPATHNVPROC epoxy_glCoverFillPathNV;
    PFNGLCOVERSTROKEPATHINSTANCEDNVPROC epoxy_glCoverStrokePathInstancedNV;
    PFNGLCOVERSTROKEPATHNVPROC epoxy_glCoverStrokePathNV;
    PFNGLCOVERAGEMASKNVPROC epoxy_glCoverageMaskNV;
    PFNGLCOVERAGEMODULATIONNVPROC epoxy_glCoverageModulationNV;
    PFNGLCOVERAGEMODULATIONTABLENVPROC epoxy_glCoverageModulationTableNV;
    PFNGLCOVERAGEOPERATIONNVPROC epoxy_glCoverageOperationNV;
    PFNGLCREATEBUFFERSPROC epoxy_glCreateBuffers;
    PFNGLCREATECOMMANDLISTSNVPROC epoxy_glCreateCommandListsNV;
    PFNGLCREATEFRAMEBUFFERSPROC epoxy_glCreateFramebuffers;
    PFNGLCREATEPERFQUERYINTELPROC epoxy_glCreatePerfQueryINTEL;
    PFNGLCREATEPROGRAMPROC epoxy_glCreateProgram;
    PFNGLCREATEPROGRAMOBJECTARBPROC epoxy_glCreateProgramObjectARB;
    PFNGLCREATEPROGRAMPIPELINESPROC epoxy_glCreateProgramPipelines;
    PFNGLCREATEQUERIESPROC epoxy_glCreateQueries;
    PFNGLCREATERENDERBUFFERSPROC epoxy_glCreateRenderbuffers;
    PFNGLCREATESAMPLERSPROC epoxy_glCreateSamplers;
    PFNGLCREATESHADERPROC epoxy_glCreateShader;
    PFNGLCREATESHADEROBJECTARBPROC epoxy_glCreateShaderObjectARB;
    PFNGLCREATESHADERPROGRAMEXTPROC epoxy_glCreateShaderProgramEXT;
    PFNGLCREATESHADERPROGRAMVPROC epoxy_glCreateShaderProgramv;
    PFNGLCREATESHADERPROGRAMVEXTPROC epoxy_glCreateShaderProgramvEXT;
    PFNGLCREATESTATESNVPROC epoxy_glCreateStatesNV;
    PFNGLCREATESYNCFROMCLEVENTARBPROC epoxy_glCreateSyncFromCLeventARB;
    PFNGLCREATETEXTURESPROC epoxy_glCreateTextures;
    PFNGLCREATETRANSFORMFEEDBACKSPROC epoxy_glCreateTransformFeedbacks;
    PFNGLCREATEVERTEXARRAYSPROC epoxy_glCreateVertexArrays;
    PFNGLCULLFACEPROC epoxy_glCullFace;
    PFNGLCULLPARAMETERDVEXTPROC epoxy_glCullParameterdvEXT;
    PFNGLCULLPARAMETERFVEXTPROC epoxy_glCullParameterfvEXT;
    PFNGLCURRENTPALETTEMATRIXARBPROC epoxy_glCurrentPaletteMatrixARB;
    PFNGLCURRENTPALETTEMATRIXOESPROC epoxy_glCurrentPaletteMatrixOES;
    PFNGLDEBUGMESSAGECALLBACKPROC epoxy_glDebugMessageCallback;
    PFNGLDEBUGMESSAGECALLBACKAMDPROC epoxy_glDebugMessageCallbackAMD;
    PFNGLDEBUGMESSAGECALLBACKARBPROC epoxy_glDebugMessageCallbackARB;
    PFNGLDEBUGMESSAGECALLBACKKHRPROC epoxy_glDebugMessageCallbackKHR;
    PFNGLDEBUGMESSAGECONTROLPROC epoxy_glDebugMessageControl;
    PFNGLDEBUGMESSAGECONTROLARBPROC epoxy_glDebugMessageControlARB;
    PFNGLDEBUGMESSAGECONTROLKHRPROC epoxy_glDebugMessageControlKHR;
    PFNGLDEBUGMESSAGEENABLEAMDPROC epoxy_glDebugMessageEnableAMD;
    PFNGLDEBUGMESSAGEINSERTPROC epoxy_glDebugMessageInsert;
    PFNGLDEBUGMESSAGEINSERTAMDPROC epoxy_glDebugMessageInsertAMD;
    PFNGLDEBUGMESSAGEINSERTARBPROC epoxy_glDebugMessageInsertARB;
    PFNGLDEBUGMESSAGEINSERTKHRPROC epoxy_glDebugMessageInsertKHR;
    PFNGLDEFORMSGIXPROC epoxy_glDeformSGIX;
    PFNGLDEFORMATIONMAP3DSGIXPROC epoxy_glDeformationMap3dSGIX;
    PFNGLDEFORMATIONMAP3FSGIXPROC epoxy_glDeformationMap3fSGIX;
    PFNGLDELETEASYNCMARKERSSGIXPROC epoxy_glDeleteAsyncMarkersSGIX;
    PFNGLDELETEBUFFERSPROC epoxy_glDeleteBuffers;
    PFNGLDELETEBUFFERSARBPROC epoxy_glDeleteBuffersARB;
    PFNGLDELETECOMMANDLISTSNVPROC epoxy_glDeleteCommandListsNV;
    PFNGLDELETEFENCESAPPLEPROC epoxy_glDeleteFencesAPPLE;
    PFNGLDELETEFENCESNVPROC epoxy_glDeleteFencesNV;
    PFNGLDELETEFRAGMENTSHADERATIPROC epoxy_glDeleteFragmentShaderATI;
    PFNGLDELETEFRAMEBUFFERSPROC epoxy_glDeleteFramebuffers;
    PFNGLDELETEFRAMEBUFFERSEXTPROC epoxy_glDeleteFramebuffersEXT;
    PFNGLDELETEFRAMEBUFFERSOESPROC epoxy_glDeleteFramebuffersOES;
    PFNGLDELETELISTSPROC epoxy_glDeleteLists;
    PFNGLDELETENAMEDSTRINGARBPROC epoxy_glDeleteNamedStringARB;
    PFNGLDELETENAMESAMDPROC epoxy_glDeleteNamesAMD;
    PFNGLDELETEOBJECTARBPROC epoxy_glDeleteObjectARB;
    PFNGLDELETEOCCLUSIONQUERIESNVPROC epoxy_glDeleteOcclusionQueriesNV;
    PFNGLDELETEPATHSNVPROC epoxy_glDeletePathsNV;
    PFNGLDELETEPERFMONITORSAMDPROC epoxy_glDeletePerfMonitorsAMD;
    PFNGLDELETEPERFQUERYINTELPROC epoxy_glDeletePerfQueryINTEL;
    PFNGLDELETEPROGRAMPROC epoxy_glDeleteProgram;
    PFNGLDELETEPROGRAMPIPELINESPROC epoxy_glDeleteProgramPipelines;
    PFNGLDELETEPROGRAMPIPELINESEXTPROC epoxy_glDeleteProgramPipelinesEXT;
    PFNGLDELETEPROGRAMSARBPROC epoxy_glDeleteProgramsARB;
    PFNGLDELETEPROGRAMSNVPROC epoxy_glDeleteProgramsNV;
    PFNGLDELETEQUERIESPROC epoxy_glDeleteQueries;
    PFNGLDELETEQUERIESARBPROC epoxy_glDeleteQueriesARB;
    PFNGLDELETEQUERIESEXTPROC epoxy_glDeleteQueriesEXT;
    PFNGLDELETERENDERBUFFERSPROC epoxy_glDeleteRenderbuffers;
    PFNGLDELETERENDERBUFFERSEXTPROC epoxy_glDeleteRenderbuffersEXT;
    PFNGLDELETERENDERBUFFERSOESPROC epoxy_glDeleteRenderbuffersOES;
    PFNGLDELETESAMPLERSPROC epoxy_glDeleteSamplers;
    PFNGLDELETESHADERPROC epoxy_glDeleteShader;
    PFNGLDELETESTATESNVPROC epoxy_glDeleteStatesNV;
    PFNGLDELETESYNCPROC epoxy_glDeleteSync;
    PFNGLDELETESYNCAPPLEPROC epoxy_glDeleteSyncAPPLE;
    PFNGLDELETETEXTURESPROC epoxy_glDeleteTextures;
    PFNGLDELETETEXTURESEXTPROC epoxy_glDeleteTexturesEXT;
    PFNGLDELETETRANSFORMFEEDBACKSPROC epoxy_glDeleteTransformFeedbacks;
    PFNGLDELETETRANSFORMFEEDBACKSNVPROC epoxy_glDeleteTransformFeedbacksNV;
    PFNGLDELETEVERTEXARRAYSPROC epoxy_glDeleteVertexArrays;
    PFNGLDELETEVERTEXARRAYSAPPLEPROC epoxy_glDeleteVertexArraysAPPLE;
    PFNGLDELETEVERTEXARRAYSOESPROC epoxy_glDeleteVertexArraysOES;
    PFNGLDELETEVERTEXSHADEREXTPROC epoxy_glDeleteVertexShaderEXT;
    PFNGLDEPTHBOUNDSEXTPROC epoxy_glDepthBoundsEXT;
    PFNGLDEPTHBOUNDSDNVPROC epoxy_glDepthBoundsdNV;
    PFNGLDEPTHFUNCPROC epoxy_glDepthFunc;
    PFNGLDEPTHMASKPROC epoxy_glDepthMask;
    PFNGLDEPTHRANGEPROC epoxy_glDepthRange;
    PFNGLDEPTHRANGEARRAYFVNVPROC epoxy_glDepthRangeArrayfvNV;
    PFNGLDEPTHRANGEARRAYVPROC epoxy_glDepthRangeArrayv;
    PFNGLDEPTHRANGEINDEXEDPROC epoxy_glDepthRangeIndexed;
    PFNGLDEPTHRANGEINDEXEDFNVPROC epoxy_glDepthRangeIndexedfNV;
    PFNGLDEPTHRANGEDNVPROC epoxy_glDepthRangedNV;
    PFNGLDEPTHRANGEFPROC epoxy_glDepthRangef;
    PFNGLDEPTHRANGEFOESPROC epoxy_glDepthRangefOES;
    PFNGLDEPTHRANGEXPROC epoxy_glDepthRangex;
    PFNGLDEPTHRANGEXOESPROC epoxy_glDepthRangexOES;
    PFNGLDETACHOBJECTARBPROC epoxy_glDetachObjectARB;
    PFNGLDETACHSHADERPROC epoxy_glDetachShader;
    PFNGLDETAILTEXFUNCSGISPROC epoxy_glDetailTexFuncSGIS;
    PFNGLDISABLEPROC epoxy_glDisable;
    PFNGLDISABLECLIENTSTATEPROC epoxy_glDisableClientState;
    PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC epoxy_glDisableClientStateIndexedEXT;
    PFNGLDISABLECLIENTSTATEIEXTPROC epoxy_glDisableClientStateiEXT;
    PFNGLDISABLEDRIVERCONTROLQCOMPROC epoxy_glDisableDriverControlQCOM;
    PFNGLDISABLEINDEXEDEXTPROC epoxy_glDisableIndexedEXT;
    PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC epoxy_glDisableVariantClientStateEXT;
    PFNGLDISABLEVERTEXARRAYATTRIBPROC epoxy_glDisableVertexArrayAttrib;
    PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC epoxy_glDisableVertexArrayAttribEXT;
    PFNGLDISABLEVERTEXARRAYEXTPROC epoxy_glDisableVertexArrayEXT;
    PFNGLDISABLEVERTEXATTRIBAPPLEPROC epoxy_glDisableVertexAttribAPPLE;
    PFNGLDISABLEVERTEXATTRIBARRAYPROC epoxy_glDisableVertexAttribArray;
    PFNGLDISABLEVERTEXATTRIBARRAYARBPROC epoxy_glDisableVertexAttribArrayARB;
    PFNGLDISABLEIPROC epoxy_glDisablei;
    PFNGLDISABLEIEXTPROC epoxy_glDisableiEXT;
    PFNGLDISABLEINVPROC epoxy_glDisableiNV;
    PFNGLDISABLEIOESPROC epoxy_glDisableiOES;
    PFNGLDISCARDFRAMEBUFFEREXTPROC epoxy_glDiscardFramebufferEXT;
    PFNGLDISPATCHCOMPUTEPROC epoxy_glDispatchCompute;
    PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC epoxy_glDispatchComputeGroupSizeARB;
    PFNGLDISPATCHCOMPUTEINDIRECTPROC epoxy_glDispatchComputeIndirect;
    PFNGLDRAWARRAYSPROC epoxy_glDrawArrays;
    PFNGLDRAWARRAYSEXTPROC epoxy_glDrawArraysEXT;
    PFNGLDRAWARRAYSINDIRECTPROC epoxy_glDrawArraysIndirect;
    PFNGLDRAWARRAYSINSTANCEDPROC epoxy_glDrawArraysInstanced;
    PFNGLDRAWARRAYSINSTANCEDANGLEPROC epoxy_glDrawArraysInstancedANGLE;
    PFNGLDRAWARRAYSINSTANCEDARBPROC epoxy_glDrawArraysInstancedARB;
    PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC epoxy_glDrawArraysInstancedBaseInstance;
    PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC epoxy_glDrawArraysInstancedBaseInstanceEXT;
    PFNGLDRAWARRAYSINSTANCEDEXTPROC epoxy_glDrawArraysInstancedEXT;
    PFNGLDRAWARRAYSINSTANCEDNVPROC epoxy_glDrawArraysInstancedNV;
    PFNGLDRAWBUFFERPROC epoxy_glDrawBuffer;
    PFNGLDRAWBUFFERSPROC epoxy_glDrawBuffers;
    PFNGLDRAWBUFFERSARBPROC epoxy_glDrawBuffersARB;
    PFNGLDRAWBUFFERSATIPROC epoxy_glDrawBuffersATI;
    PFNGLDRAWBUFFERSEXTPROC epoxy_glDrawBuffersEXT;
    PFNGLDRAWBUFFERSINDEXEDEXTPROC epoxy_glDrawBuffersIndexedEXT;
    PFNGLDRAWBUFFERSNVPROC epoxy_glDrawBuffersNV;
    PFNGLDRAWCOMMANDSADDRESSNVPROC epoxy_glDrawCommandsAddressNV;
    PFNGLDRAWCOMMANDSNVPROC epoxy_glDrawCommandsNV;
    PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC epoxy_glDrawCommandsStatesAddressNV;
    PFNGLDRAWCOMMANDSSTATESNVPROC epoxy_glDrawCommandsStatesNV;
    PFNGLDRAWELEMENTARRAYAPPLEPROC epoxy_glDrawElementArrayAPPLE;
    PFNGLDRAWELEMENTARRAYATIPROC epoxy_glDrawElementArrayATI;
    PFNGLDRAWELEMENTSPROC epoxy_glDrawElements;
    PFNGLDRAWELEMENTSBASEVERTEXPROC epoxy_glDrawElementsBaseVertex;
    PFNGLDRAWELEMENTSBASEVERTEXEXTPROC epoxy_glDrawElementsBaseVertexEXT;
    PFNGLDRAWELEMENTSBASEVERTEXOESPROC epoxy_glDrawElementsBaseVertexOES;
    PFNGLDRAWELEMENTSINDIRECTPROC epoxy_glDrawElementsIndirect;
    PFNGLDRAWELEMENTSINSTANCEDPROC epoxy_glDrawElementsInstanced;
    PFNGLDRAWELEMENTSINSTANCEDANGLEPROC epoxy_glDrawElementsInstancedANGLE;
    PFNGLDRAWELEMENTSINSTANCEDARBPROC epoxy_glDrawElementsInstancedARB;
    PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC epoxy_glDrawElementsInstancedBaseInstance;
    PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC epoxy_glDrawElementsInstancedBaseInstanceEXT;
    PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC epoxy_glDrawElementsInstancedBaseVertex;
    PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC epoxy_glDrawElementsInstancedBaseVertexBaseInstance;
    PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC epoxy_glDrawElementsInstancedBaseVertexBaseInstanceEXT;
    PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC epoxy_glDrawElementsInstancedBaseVertexEXT;
    PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC epoxy_glDrawElementsInstancedBaseVertexOES;
    PFNGLDRAWELEMENTSINSTANCEDEXTPROC epoxy_glDrawElementsInstancedEXT;
    PFNGLDRAWELEMENTSINSTANCEDNVPROC epoxy_glDrawElementsInstancedNV;
    PFNGLDRAWMESHARRAYSSUNPROC epoxy_glDrawMeshArraysSUN;
    PFNGLDRAWPIXELSPROC epoxy_glDrawPixels;
    PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC epoxy_glDrawRangeElementArrayAPPLE;
    PFNGLDRAWRANGEELEMENTARRAYATIPROC epoxy_glDrawRangeElementArrayATI;
    PFNGLDRAWRANGEELEMENTSPROC epoxy_glDrawRangeElements;
    PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC epoxy_glDrawRangeElementsBaseVertex;
    PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC epoxy_glDrawRangeElementsBaseVertexEXT;
    PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC epoxy_glDrawRangeElementsBaseVertexOES;
    PFNGLDRAWRANGEELEMENTSEXTPROC epoxy_glDrawRangeElementsEXT;
    PFNGLDRAWTEXFOESPROC epoxy_glDrawTexfOES;
    PFNGLDRAWTEXFVOESPROC epoxy_glDrawTexfvOES;
    PFNGLDRAWTEXIOESPROC epoxy_glDrawTexiOES;
    PFNGLDRAWTEXIVOESPROC epoxy_glDrawTexivOES;
    PFNGLDRAWTEXSOESPROC epoxy_glDrawTexsOES;
    PFNGLDRAWTEXSVOESPROC epoxy_glDrawTexsvOES;
    PFNGLDRAWTEXTURENVPROC epoxy_glDrawTextureNV;
    PFNGLDRAWTEXXOESPROC epoxy_glDrawTexxOES;
    PFNGLDRAWTEXXVOESPROC epoxy_glDrawTexxvOES;
    PFNGLDRAWTRANSFORMFEEDBACKPROC epoxy_glDrawTransformFeedback;
    PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC epoxy_glDrawTransformFeedbackInstanced;
    PFNGLDRAWTRANSFORMFEEDBACKNVPROC epoxy_glDrawTransformFeedbackNV;
    PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC epoxy_glDrawTransformFeedbackStream;
    PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC epoxy_glDrawTransformFeedbackStreamInstanced;
    PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC epoxy_glEGLImageTargetRenderbufferStorageOES;
    PFNGLEGLIMAGETARGETTEXTURE2DOESPROC epoxy_glEGLImageTargetTexture2DOES;
    PFNGLEDGEFLAGPROC epoxy_glEdgeFlag;
    PFNGLEDGEFLAGFORMATNVPROC epoxy_glEdgeFlagFormatNV;
    PFNGLEDGEFLAGPOINTERPROC epoxy_glEdgeFlagPointer;
    PFNGLEDGEFLAGPOINTEREXTPROC epoxy_glEdgeFlagPointerEXT;
    PFNGLEDGEFLAGPOINTERLISTIBMPROC epoxy_glEdgeFlagPointerListIBM;
    PFNGLEDGEFLAGVPROC epoxy_glEdgeFlagv;
    PFNGLELEMENTPOINTERAPPLEPROC epoxy_glElementPointerAPPLE;
    PFNGLELEMENTPOINTERATIPROC epoxy_glElementPointerATI;
    PFNGLENABLEPROC epoxy_glEnable;
    PFNGLENABLECLIENTSTATEPROC epoxy_glEnableClientState;
    PFNGLENABLECLIENTSTATEINDEXEDEXTPROC epoxy_glEnableClientStateIndexedEXT;
    PFNGLENABLECLIENTSTATEIEXTPROC epoxy_glEnableClientStateiEXT;
    PFNGLENABLEDRIVERCONTROLQCOMPROC epoxy_glEnableDriverControlQCOM;
    PFNGLENABLEINDEXEDEXTPROC epoxy_glEnableIndexedEXT;
    PFNGLENABLEVARIANTCLIENTSTATEEXTPROC epoxy_glEnableVariantClientStateEXT;
    PFNGLENABLEVERTEXARRAYATTRIBPROC epoxy_glEnableVertexArrayAttrib;
    PFNGLENABLEVERTEXARRAYATTRIBEXTPROC epoxy_glEnableVertexArrayAttribEXT;
    PFNGLENABLEVERTEXARRAYEXTPROC epoxy_glEnableVertexArrayEXT;
    PFNGLENABLEVERTEXATTRIBAPPLEPROC epoxy_glEnableVertexAttribAPPLE;
    PFNGLENABLEVERTEXATTRIBARRAYPROC epoxy_glEnableVertexAttribArray;
    PFNGLENABLEVERTEXATTRIBARRAYARBPROC epoxy_glEnableVertexAttribArrayARB;
    PFNGLENABLEIPROC epoxy_glEnablei;
    PFNGLENABLEIEXTPROC epoxy_glEnableiEXT;
    PFNGLENABLEINVPROC epoxy_glEnableiNV;
    PFNGLENABLEIOESPROC epoxy_glEnableiOES;
    PFNGLENDPROC epoxy_glEnd_unwrapped;
    PFNGLENDCONDITIONALRENDERPROC epoxy_glEndConditionalRender;
    PFNGLENDCONDITIONALRENDERNVPROC epoxy_glEndConditionalRenderNV;
    PFNGLENDCONDITIONALRENDERNVXPROC epoxy_glEndConditionalRenderNVX;
    PFNGLENDFRAGMENTSHADERATIPROC epoxy_glEndFragmentShaderATI;
    PFNGLENDLISTPROC epoxy_glEndList;
    PFNGLENDOCCLUSIONQUERYNVPROC epoxy_glEndOcclusionQueryNV;
    PFNGLENDPERFMONITORAMDPROC epoxy_glEndPerfMonitorAMD;
    PFNGLENDPERFQUERYINTELPROC epoxy_glEndPerfQueryINTEL;
    PFNGLENDQUERYPROC epoxy_glEndQuery;
    PFNGLENDQUERYARBPROC epoxy_glEndQueryARB;
    PFNGLENDQUERYEXTPROC epoxy_glEndQueryEXT;
    PFNGLENDQUERYINDEXEDPROC epoxy_glEndQueryIndexed;
    PFNGLENDTILINGQCOMPROC epoxy_glEndTilingQCOM;
    PFNGLENDTRANSFORMFEEDBACKPROC epoxy_glEndTransformFeedback;
    PFNGLENDTRANSFORMFEEDBACKEXTPROC epoxy_glEndTransformFeedbackEXT;
    PFNGLENDTRANSFORMFEEDBACKNVPROC epoxy_glEndTransformFeedbackNV;
    PFNGLENDVERTEXSHADEREXTPROC epoxy_glEndVertexShaderEXT;
    PFNGLENDVIDEOCAPTURENVPROC epoxy_glEndVideoCaptureNV;
    PFNGLEVALCOORD1DPROC epoxy_glEvalCoord1d;
    PFNGLEVALCOORD1DVPROC epoxy_glEvalCoord1dv;
    PFNGLEVALCOORD1FPROC epoxy_glEvalCoord1f;
    PFNGLEVALCOORD1FVPROC epoxy_glEvalCoord1fv;
    PFNGLEVALCOORD1XOESPROC epoxy_glEvalCoord1xOES;
    PFNGLEVALCOORD1XVOESPROC epoxy_glEvalCoord1xvOES;
    PFNGLEVALCOORD2DPROC epoxy_glEvalCoord2d;
    PFNGLEVALCOORD2DVPROC epoxy_glEvalCoord2dv;
    PFNGLEVALCOORD2FPROC epoxy_glEvalCoord2f;
    PFNGLEVALCOORD2FVPROC epoxy_glEvalCoord2fv;
    PFNGLEVALCOORD2XOESPROC epoxy_glEvalCoord2xOES;
    PFNGLEVALCOORD2XVOESPROC epoxy_glEvalCoord2xvOES;
    PFNGLEVALMAPSNVPROC epoxy_glEvalMapsNV;
    PFNGLEVALMESH1PROC epoxy_glEvalMesh1;
    PFNGLEVALMESH2PROC epoxy_glEvalMesh2;
    PFNGLEVALPOINT1PROC epoxy_glEvalPoint1;
    PFNGLEVALPOINT2PROC epoxy_glEvalPoint2;
    PFNGLEXECUTEPROGRAMNVPROC epoxy_glExecuteProgramNV;
    PFNGLEXTGETBUFFERPOINTERVQCOMPROC epoxy_glExtGetBufferPointervQCOM;
    PFNGLEXTGETBUFFERSQCOMPROC epoxy_glExtGetBuffersQCOM;
    PFNGLEXTGETFRAMEBUFFERSQCOMPROC epoxy_glExtGetFramebuffersQCOM;
    PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC epoxy_glExtGetProgramBinarySourceQCOM;
    PFNGLEXTGETPROGRAMSQCOMPROC epoxy_glExtGetProgramsQCOM;
    PFNGLEXTGETRENDERBUFFERSQCOMPROC epoxy_glExtGetRenderbuffersQCOM;
    PFNGLEXTGETSHADERSQCOMPROC epoxy_glExtGetShadersQCOM;
    PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC epoxy_glExtGetTexLevelParameterivQCOM;
    PFNGLEXTGETTEXSUBIMAGEQCOMPROC epoxy_glExtGetTexSubImageQCOM;
    PFNGLEXTGETTEXTURESQCOMPROC epoxy_glExtGetTexturesQCOM;
    PFNGLEXTISPROGRAMBINARYQCOMPROC epoxy_glExtIsProgramBinaryQCOM;
    PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC epoxy_glExtTexObjectStateOverrideiQCOM;
    PFNGLEXTRACTCOMPONENTEXTPROC epoxy_glExtractComponentEXT;
    PFNGLFEEDBACKBUFFERPROC epoxy_glFeedbackBuffer;
    PFNGLFEEDBACKBUFFERXOESPROC epoxy_glFeedbackBufferxOES;
    PFNGLFENCESYNCPROC epoxy_glFenceSync;
    PFNGLFENCESYNCAPPLEPROC epoxy_glFenceSyncAPPLE;
    PFNGLFINALCOMBINERINPUTNVPROC epoxy_glFinalCombinerInputNV;
    PFNGLFINISHPROC epoxy_glFinish;
    PFNGLFINISHASYNCSGIXPROC epoxy_glFinishAsyncSGIX;
    PFNGLFINISHFENCEAPPLEPROC epoxy_glFinishFenceAPPLE;
    PFNGLFINISHFENCENVPROC epoxy_glFinishFenceNV;
    PFNGLFINISHOBJECTAPPLEPROC epoxy_glFinishObjectAPPLE;
    PFNGLFINISHTEXTURESUNXPROC epoxy_glFinishTextureSUNX;
    PFNGLFLUSHPROC epoxy_glFlush;
    PFNGLFLUSHMAPPEDBUFFERRANGEPROC epoxy_glFlushMappedBufferRange;
    PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC epoxy_glFlushMappedBufferRangeAPPLE;
    PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC epoxy_glFlushMappedBufferRangeEXT;
    PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC epoxy_glFlushMappedNamedBufferRange;
    PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC epoxy_glFlushMappedNamedBufferRangeEXT;
    PFNGLFLUSHPIXELDATARANGENVPROC epoxy_glFlushPixelDataRangeNV;
    PFNGLFLUSHRASTERSGIXPROC epoxy_glFlushRasterSGIX;
    PFNGLFLUSHSTATICDATAIBMPROC epoxy_glFlushStaticDataIBM;
    PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC epoxy_glFlushVertexArrayRangeAPPLE;
    PFNGLFLUSHVERTEXARRAYRANGENVPROC epoxy_glFlushVertexArrayRangeNV;
    PFNGLFOGCOORDFORMATNVPROC epoxy_glFogCoordFormatNV;
    PFNGLFOGCOORDPOINTERPROC epoxy_glFogCoordPointer;
    PFNGLFOGCOORDPOINTEREXTPROC epoxy_glFogCoordPointerEXT;
    PFNGLFOGCOORDPOINTERLISTIBMPROC epoxy_glFogCoordPointerListIBM;
    PFNGLFOGCOORDDPROC epoxy_glFogCoordd;
    PFNGLFOGCOORDDEXTPROC epoxy_glFogCoorddEXT;
    PFNGLFOGCOORDDVPROC epoxy_glFogCoorddv;
    PFNGLFOGCOORDDVEXTPROC epoxy_glFogCoorddvEXT;
    PFNGLFOGCOORDFPROC epoxy_glFogCoordf;
    PFNGLFOGCOORDFEXTPROC epoxy_glFogCoordfEXT;
    PFNGLFOGCOORDFVPROC epoxy_glFogCoordfv;
    PFNGLFOGCOORDFVEXTPROC epoxy_glFogCoordfvEXT;
    PFNGLFOGCOORDHNVPROC epoxy_glFogCoordhNV;
    PFNGLFOGCOORDHVNVPROC epoxy_glFogCoordhvNV;
    PFNGLFOGFUNCSGISPROC epoxy_glFogFuncSGIS;
    PFNGLFOGFPROC epoxy_glFogf;
    PFNGLFOGFVPROC epoxy_glFogfv;
    PFNGLFOGIPROC epoxy_glFogi;
    PFNGLFOGIVPROC epoxy_glFogiv;
    PFNGLFOGXPROC epoxy_glFogx;
    PFNGLFOGXOESPROC epoxy_glFogxOES;
    PFNGLFOGXVPROC epoxy_glFogxv;
    PFNGLFOGXVOESPROC epoxy_glFogxvOES;
    PFNGLFRAGMENTCOLORMATERIALSGIXPROC epoxy_glFragmentColorMaterialSGIX;
    PFNGLFRAGMENTCOVERAGECOLORNVPROC epoxy_glFragmentCoverageColorNV;
    PFNGLFRAGMENTLIGHTMODELFSGIXPROC epoxy_glFragmentLightModelfSGIX;
    PFNGLFRAGMENTLIGHTMODELFVSGIXPROC epoxy_glFragmentLightModelfvSGIX;
    PFNGLFRAGMENTLIGHTMODELISGIXPROC epoxy_glFragmentLightModeliSGIX;
    PFNGLFRAGMENTLIGHTMODELIVSGIXPROC epoxy_glFragmentLightModelivSGIX;
    PFNGLFRAGMENTLIGHTFSGIXPROC epoxy_glFragmentLightfSGIX;
    PFNGLFRAGMENTLIGHTFVSGIXPROC epoxy_glFragmentLightfvSGIX;
    PFNGLFRAGMENTLIGHTISGIXPROC epoxy_glFragmentLightiSGIX;
    PFNGLFRAGMENTLIGHTIVSGIXPROC epoxy_glFragmentLightivSGIX;
    PFNGLFRAGMENTMATERIALFSGIXPROC epoxy_glFragmentMaterialfSGIX;
    PFNGLFRAGMENTMATERIALFVSGIXPROC epoxy_glFragmentMaterialfvSGIX;
    PFNGLFRAGMENTMATERIALISGIXPROC epoxy_glFragmentMaterialiSGIX;
    PFNGLFRAGMENTMATERIALIVSGIXPROC epoxy_glFragmentMaterialivSGIX;
    PFNGLFRAMETERMINATORGREMEDYPROC epoxy_glFrameTerminatorGREMEDY;
    PFNGLFRAMEZOOMSGIXPROC epoxy_glFrameZoomSGIX;
    PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC epoxy_glFramebufferDrawBufferEXT;
    PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC epoxy_glFramebufferDrawBuffersEXT;
    PFNGLFRAMEBUFFERPARAMETERIPROC epoxy_glFramebufferParameteri;
    PFNGLFRAMEBUFFERREADBUFFEREXTPROC epoxy_glFramebufferReadBufferEXT;
    PFNGLFRAMEBUFFERRENDERBUFFERPROC epoxy_glFramebufferRenderbuffer;
    PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC epoxy_glFramebufferRenderbufferEXT;
    PFNGLFRAMEBUFFERRENDERBUFFEROESPROC epoxy_glFramebufferRenderbufferOES;
    PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC epoxy_glFramebufferSampleLocationsfvNV;
    PFNGLFRAMEBUFFERTEXTUREPROC epoxy_glFramebufferTexture;
    PFNGLFRAMEBUFFERTEXTURE1DPROC epoxy_glFramebufferTexture1D;
    PFNGLFRAMEBUFFERTEXTURE1DEXTPROC epoxy_glFramebufferTexture1DEXT;
    PFNGLFRAMEBUFFERTEXTURE2DPROC epoxy_glFramebufferTexture2D;
    PFNGLFRAMEBUFFERTEXTURE2DEXTPROC epoxy_glFramebufferTexture2DEXT;
    PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC epoxy_glFramebufferTexture2DMultisampleEXT;
    PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC epoxy_glFramebufferTexture2DMultisampleIMG;
    PFNGLFRAMEBUFFERTEXTURE2DOESPROC epoxy_glFramebufferTexture2DOES;
    PFNGLFRAMEBUFFERTEXTURE3DPROC epoxy_glFramebufferTexture3D;
    PFNGLFRAMEBUFFERTEXTURE3DEXTPROC epoxy_glFramebufferTexture3DEXT;
    PFNGLFRAMEBUFFERTEXTURE3DOESPROC epoxy_glFramebufferTexture3DOES;
    PFNGLFRAMEBUFFERTEXTUREARBPROC epoxy_glFramebufferTextureARB;
    PFNGLFRAMEBUFFERTEXTUREEXTPROC epoxy_glFramebufferTextureEXT;
    PFNGLFRAMEBUFFERTEXTUREFACEARBPROC epoxy_glFramebufferTextureFaceARB;
    PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC epoxy_glFramebufferTextureFaceEXT;
    PFNGLFRAMEBUFFERTEXTURELAYERPROC epoxy_glFramebufferTextureLayer;
    PFNGLFRAMEBUFFERTEXTURELAYERARBPROC epoxy_glFramebufferTextureLayerARB;
    PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC epoxy_glFramebufferTextureLayerEXT;
    PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC epoxy_glFramebufferTextureMultiviewOVR;
    PFNGLFRAMEBUFFERTEXTUREOESPROC epoxy_glFramebufferTextureOES;
    PFNGLFREEOBJECTBUFFERATIPROC epoxy_glFreeObjectBufferATI;
    PFNGLFRONTFACEPROC epoxy_glFrontFace;
    PFNGLFRUSTUMPROC epoxy_glFrustum;
    PFNGLFRUSTUMFPROC epoxy_glFrustumf;
    PFNGLFRUSTUMFOESPROC epoxy_glFrustumfOES;
    PFNGLFRUSTUMXPROC epoxy_glFrustumx;
    PFNGLFRUSTUMXOESPROC epoxy_glFrustumxOES;
    PFNGLGENASYNCMARKERSSGIXPROC epoxy_glGenAsyncMarkersSGIX;
    PFNGLGENBUFFERSPROC epoxy_glGenBuffers;
    PFNGLGENBUFFERSARBPROC epoxy_glGenBuffersARB;
    PFNGLGENFENCESAPPLEPROC epoxy_glGenFencesAPPLE;
    PFNGLGENFENCESNVPROC epoxy_glGenFencesNV;
    PFNGLGENFRAGMENTSHADERSATIPROC epoxy_glGenFragmentShadersATI;
    PFNGLGENFRAMEBUFFERSPROC epoxy_glGenFramebuffers;
    PFNGLGENFRAMEBUFFERSEXTPROC epoxy_glGenFramebuffersEXT;
    PFNGLGENFRAMEBUFFERSOESPROC epoxy_glGenFramebuffersOES;
    PFNGLGENLISTSPROC epoxy_glGenLists;
    PFNGLGENNAMESAMDPROC epoxy_glGenNamesAMD;
    PFNGLGENOCCLUSIONQUERIESNVPROC epoxy_glGenOcclusionQueriesNV;
    PFNGLGENPATHSNVPROC epoxy_glGenPathsNV;
    PFNGLGENPERFMONITORSAMDPROC epoxy_glGenPerfMonitorsAMD;
    PFNGLGENPROGRAMPIPELINESPROC epoxy_glGenProgramPipelines;
    PFNGLGENPROGRAMPIPELINESEXTPROC epoxy_glGenProgramPipelinesEXT;
    PFNGLGENPROGRAMSARBPROC epoxy_glGenProgramsARB;
    PFNGLGENPROGRAMSNVPROC epoxy_glGenProgramsNV;
    PFNGLGENQUERIESPROC epoxy_glGenQueries;
    PFNGLGENQUERIESARBPROC epoxy_glGenQueriesARB;
    PFNGLGENQUERIESEXTPROC epoxy_glGenQueriesEXT;
    PFNGLGENRENDERBUFFERSPROC epoxy_glGenRenderbuffers;
    PFNGLGENRENDERBUFFERSEXTPROC epoxy_glGenRenderbuffersEXT;
    PFNGLGENRENDERBUFFERSOESPROC epoxy_glGenRenderbuffersOES;
    PFNGLGENSAMPLERSPROC epoxy_glGenSamplers;
    PFNGLGENSYMBOLSEXTPROC epoxy_glGenSymbolsEXT;
    PFNGLGENTEXTURESPROC epoxy_glGenTextures;
    PFNGLGENTEXTURESEXTPROC epoxy_glGenTexturesEXT;
    PFNGLGENTRANSFORMFEEDBACKSPROC epoxy_glGenTransformFeedbacks;
    PFNGLGENTRANSFORMFEEDBACKSNVPROC epoxy_glGenTransformFeedbacksNV;
    PFNGLGENVERTEXARRAYSPROC epoxy_glGenVertexArrays;
    PFNGLGENVERTEXARRAYSAPPLEPROC epoxy_glGenVertexArraysAPPLE;
    PFNGLGENVERTEXARRAYSOESPROC epoxy_glGenVertexArraysOES;
    PFNGLGENVERTEXSHADERSEXTPROC epoxy_glGenVertexShadersEXT;
    PFNGLGENERATEMIPMAPPROC epoxy_glGenerateMipmap;
    PFNGLGENERATEMIPMAPEXTPROC epoxy_glGenerateMipmapEXT;
    PFNGLGENERATEMIPMAPOESPROC epoxy_glGenerateMipmapOES;
    PFNGLGENERATEMULTITEXMIPMAPEXTPROC epoxy_glGenerateMultiTexMipmapEXT;
    PFNGLGENERATETEXTUREMIPMAPPROC epoxy_glGenerateTextureMipmap;
    PFNGLGENERATETEXTUREMIPMAPEXTPROC epoxy_glGenerateTextureMipmapEXT;
    PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC epoxy_glGetActiveAtomicCounterBufferiv;
    PFNGLGETACTIVEATTRIBPROC epoxy_glGetActiveAttrib;
    PFNGLGETACTIVEATTRIBARBPROC epoxy_glGetActiveAttribARB;
    PFNGLGETACTIVESUBROUTINENAMEPROC epoxy_glGetActiveSubroutineName;
    PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC epoxy_glGetActiveSubroutineUniformName;
    PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC epoxy_glGetActiveSubroutineUniformiv;
    PFNGLGETACTIVEUNIFORMPROC epoxy_glGetActiveUniform;
    PFNGLGETACTIVEUNIFORMARBPROC epoxy_glGetActiveUniformARB;
    PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC epoxy_glGetActiveUniformBlockName;
    PFNGLGETACTIVEUNIFORMBLOCKIVPROC epoxy_glGetActiveUniformBlockiv;
    PFNGLGETACTIVEUNIFORMNAMEPROC epoxy_glGetActiveUniformName;
    PFNGLGETACTIVEUNIFORMSIVPROC epoxy_glGetActiveUniformsiv;
    PFNGLGETACTIVEVARYINGNVPROC epoxy_glGetActiveVaryingNV;
    PFNGLGETARRAYOBJECTFVATIPROC epoxy_glGetArrayObjectfvATI;
    PFNGLGETARRAYOBJECTIVATIPROC epoxy_glGetArrayObjectivATI;
    PFNGLGETATTACHEDOBJECTSARBPROC epoxy_glGetAttachedObjectsARB;
    PFNGLGETATTACHEDSHADERSPROC epoxy_glGetAttachedShaders;
    PFNGLGETATTRIBLOCATIONPROC epoxy_glGetAttribLocation;
    PFNGLGETATTRIBLOCATIONARBPROC epoxy_glGetAttribLocationARB;
    PFNGLGETBOOLEANINDEXEDVEXTPROC epoxy_glGetBooleanIndexedvEXT;
    PFNGLGETBOOLEANI_VPROC epoxy_glGetBooleani_v;
    PFNGLGETBOOLEANVPROC epoxy_glGetBooleanv;
    PFNGLGETBUFFERPARAMETERI64VPROC epoxy_glGetBufferParameteri64v;
    PFNGLGETBUFFERPARAMETERIVPROC epoxy_glGetBufferParameteriv;
    PFNGLGETBUFFERPARAMETERIVARBPROC epoxy_glGetBufferParameterivARB;
    PFNGLGETBUFFERPARAMETERUI64VNVPROC epoxy_glGetBufferParameterui64vNV;
    PFNGLGETBUFFERPOINTERVPROC epoxy_glGetBufferPointerv;
    PFNGLGETBUFFERPOINTERVARBPROC epoxy_glGetBufferPointervARB;
    PFNGLGETBUFFERPOINTERVOESPROC epoxy_glGetBufferPointervOES;
    PFNGLGETBUFFERSUBDATAPROC epoxy_glGetBufferSubData;
    PFNGLGETBUFFERSUBDATAARBPROC epoxy_glGetBufferSubDataARB;
    PFNGLGETCLIPPLANEPROC epoxy_glGetClipPlane;
    PFNGLGETCLIPPLANEFPROC epoxy_glGetClipPlanef;
    PFNGLGETCLIPPLANEFOESPROC epoxy_glGetClipPlanefOES;
    PFNGLGETCLIPPLANEXPROC epoxy_glGetClipPlanex;
    PFNGLGETCLIPPLANEXOESPROC epoxy_glGetClipPlanexOES;
    PFNGLGETCOLORTABLEPROC epoxy_glGetColorTable;
    PFNGLGETCOLORTABLEEXTPROC epoxy_glGetColorTableEXT;
    PFNGLGETCOLORTABLEPARAMETERFVPROC epoxy_glGetColorTableParameterfv;
    PFNGLGETCOLORTABLEPARAMETERFVEXTPROC epoxy_glGetColorTableParameterfvEXT;
    PFNGLGETCOLORTABLEPARAMETERFVSGIPROC epoxy_glGetColorTableParameterfvSGI;
    PFNGLGETCOLORTABLEPARAMETERIVPROC epoxy_glGetColorTableParameteriv;
    PFNGLGETCOLORTABLEPARAMETERIVEXTPROC epoxy_glGetColorTableParameterivEXT;
    PFNGLGETCOLORTABLEPARAMETERIVSGIPROC epoxy_glGetColorTableParameterivSGI;
    PFNGLGETCOLORTABLESGIPROC epoxy_glGetColorTableSGI;
    PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC epoxy_glGetCombinerInputParameterfvNV;
    PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC epoxy_glGetCombinerInputParameterivNV;
    PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC epoxy_glGetCombinerOutputParameterfvNV;
    PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC epoxy_glGetCombinerOutputParameterivNV;
    PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC epoxy_glGetCombinerStageParameterfvNV;
    PFNGLGETCOMMANDHEADERNVPROC epoxy_glGetCommandHeaderNV;
    PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC epoxy_glGetCompressedMultiTexImageEXT;
    PFNGLGETCOMPRESSEDTEXIMAGEPROC epoxy_glGetCompressedTexImage;
    PFNGLGETCOMPRESSEDTEXIMAGEARBPROC epoxy_glGetCompressedTexImageARB;
    PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC epoxy_glGetCompressedTextureImage;
    PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC epoxy_glGetCompressedTextureImageEXT;
    PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC epoxy_glGetCompressedTextureSubImage;
    PFNGLGETCONVOLUTIONFILTERPROC epoxy_glGetConvolutionFilter;
    PFNGLGETCONVOLUTIONFILTEREXTPROC epoxy_glGetConvolutionFilterEXT;
    PFNGLGETCONVOLUTIONPARAMETERFVPROC epoxy_glGetConvolutionParameterfv;
    PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC epoxy_glGetConvolutionParameterfvEXT;
    PFNGLGETCONVOLUTIONPARAMETERIVPROC epoxy_glGetConvolutionParameteriv;
    PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC epoxy_glGetConvolutionParameterivEXT;
    PFNGLGETCONVOLUTIONPARAMETERXVOESPROC epoxy_glGetConvolutionParameterxvOES;
    PFNGLGETCOVERAGEMODULATIONTABLENVPROC epoxy_glGetCoverageModulationTableNV;
    PFNGLGETDEBUGMESSAGELOGPROC epoxy_glGetDebugMessageLog;
    PFNGLGETDEBUGMESSAGELOGAMDPROC epoxy_glGetDebugMessageLogAMD;
    PFNGLGETDEBUGMESSAGELOGARBPROC epoxy_glGetDebugMessageLogARB;
    PFNGLGETDEBUGMESSAGELOGKHRPROC epoxy_glGetDebugMessageLogKHR;
    PFNGLGETDETAILTEXFUNCSGISPROC epoxy_glGetDetailTexFuncSGIS;
    PFNGLGETDOUBLEINDEXEDVEXTPROC epoxy_glGetDoubleIndexedvEXT;
    PFNGLGETDOUBLEI_VPROC epoxy_glGetDoublei_v;
    PFNGLGETDOUBLEI_VEXTPROC epoxy_glGetDoublei_vEXT;
    PFNGLGETDOUBLEVPROC epoxy_glGetDoublev;
    PFNGLGETDRIVERCONTROLSTRINGQCOMPROC epoxy_glGetDriverControlStringQCOM;
    PFNGLGETDRIVERCONTROLSQCOMPROC epoxy_glGetDriverControlsQCOM;
    PFNGLGETERRORPROC epoxy_glGetError;
    PFNGLGETFENCEIVNVPROC epoxy_glGetFenceivNV;
    PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC epoxy_glGetFinalCombinerInputParameterfvNV;
    PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC epoxy_glGetFinalCombinerInputParameterivNV;
    PFNGLGETFIRSTPERFQUERYIDINTELPROC epoxy_glGetFirstPerfQueryIdINTEL;
    PFNGLGETFIXEDVPROC epoxy_glGetFixedv;
    PFNGLGETFIXEDVOESPROC epoxy_glGetFixedvOES;
    PFNGLGETFLOATINDEXEDVEXTPROC epoxy_glGetFloatIndexedvEXT;
    PFNGLGETFLOATI_VPROC epoxy_glGetFloati_v;
    PFNGLGETFLOATI_VEXTPROC epoxy_glGetFloati_vEXT;
    PFNGLGETFLOATI_VNVPROC epoxy_glGetFloati_vNV;
    PFNGLGETFLOATVPROC epoxy_glGetFloatv;
    PFNGLGETFOGFUNCSGISPROC epoxy_glGetFogFuncSGIS;
    PFNGLGETFRAGDATAINDEXPROC epoxy_glGetFragDataIndex;
    PFNGLGETFRAGDATALOCATIONPROC epoxy_glGetFragDataLocation;
    PFNGLGETFRAGDATALOCATIONEXTPROC epoxy_glGetFragDataLocationEXT;
    PFNGLGETFRAGMENTLIGHTFVSGIXPROC epoxy_glGetFragmentLightfvSGIX;
    PFNGLGETFRAGMENTLIGHTIVSGIXPROC epoxy_glGetFragmentLightivSGIX;
    PFNGLGETFRAGMENTMATERIALFVSGIXPROC epoxy_glGetFragmentMaterialfvSGIX;
    PFNGLGETFRAGMENTMATERIALIVSGIXPROC epoxy_glGetFragmentMaterialivSGIX;
    PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC epoxy_glGetFramebufferAttachmentParameteriv;
    PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC epoxy_glGetFramebufferAttachmentParameterivEXT;
    PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC epoxy_glGetFramebufferAttachmentParameterivOES;
    PFNGLGETFRAMEBUFFERPARAMETERIVPROC epoxy_glGetFramebufferParameteriv;
    PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC epoxy_glGetFramebufferParameterivEXT;
    PFNGLGETGRAPHICSRESETSTATUSPROC epoxy_glGetGraphicsResetStatus;
    PFNGLGETGRAPHICSRESETSTATUSARBPROC epoxy_glGetGraphicsResetStatusARB;
    PFNGLGETGRAPHICSRESETSTATUSEXTPROC epoxy_glGetGraphicsResetStatusEXT;
    PFNGLGETGRAPHICSRESETSTATUSKHRPROC epoxy_glGetGraphicsResetStatusKHR;
    PFNGLGETHANDLEARBPROC epoxy_glGetHandleARB;
    PFNGLGETHISTOGRAMPROC epoxy_glGetHistogram;
    PFNGLGETHISTOGRAMEXTPROC epoxy_glGetHistogramEXT;
    PFNGLGETHISTOGRAMPARAMETERFVPROC epoxy_glGetHistogramParameterfv;
    PFNGLGETHISTOGRAMPARAMETERFVEXTPROC epoxy_glGetHistogramParameterfvEXT;
    PFNGLGETHISTOGRAMPARAMETERIVPROC epoxy_glGetHistogramParameteriv;
    PFNGLGETHISTOGRAMPARAMETERIVEXTPROC epoxy_glGetHistogramParameterivEXT;
    PFNGLGETHISTOGRAMPARAMETERXVOESPROC epoxy_glGetHistogramParameterxvOES;
    PFNGLGETIMAGEHANDLEARBPROC epoxy_glGetImageHandleARB;
    PFNGLGETIMAGEHANDLENVPROC epoxy_glGetImageHandleNV;
    PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC epoxy_glGetImageTransformParameterfvHP;
    PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC epoxy_glGetImageTransformParameterivHP;
    PFNGLGETINFOLOGARBPROC epoxy_glGetInfoLogARB;
    PFNGLGETINSTRUMENTSSGIXPROC epoxy_glGetInstrumentsSGIX;
    PFNGLGETINTEGER64I_VPROC epoxy_glGetInteger64i_v;
    PFNGLGETINTEGER64VPROC epoxy_glGetInteger64v;
    PFNGLGETINTEGER64VAPPLEPROC epoxy_glGetInteger64vAPPLE;
    PFNGLGETINTEGERINDEXEDVEXTPROC epoxy_glGetIntegerIndexedvEXT;
    PFNGLGETINTEGERI_VPROC epoxy_glGetIntegeri_v;
    PFNGLGETINTEGERI_VEXTPROC epoxy_glGetIntegeri_vEXT;
    PFNGLGETINTEGERUI64I_VNVPROC epoxy_glGetIntegerui64i_vNV;
    PFNGLGETINTEGERUI64VNVPROC epoxy_glGetIntegerui64vNV;
    PFNGLGETINTEGERVPROC epoxy_glGetIntegerv;
    PFNGLGETINTERNALFORMATSAMPLEIVNVPROC epoxy_glGetInternalformatSampleivNV;
    PFNGLGETINTERNALFORMATI64VPROC epoxy_glGetInternalformati64v;
    PFNGLGETINTERNALFORMATIVPROC epoxy_glGetInternalformativ;
    PFNGLGETINVARIANTBOOLEANVEXTPROC epoxy_glGetInvariantBooleanvEXT;
    PFNGLGETINVARIANTFLOATVEXTPROC epoxy_glGetInvariantFloatvEXT;
    PFNGLGETINVARIANTINTEGERVEXTPROC epoxy_glGetInvariantIntegervEXT;
    PFNGLGETLIGHTFVPROC epoxy_glGetLightfv;
    PFNGLGETLIGHTIVPROC epoxy_glGetLightiv;
    PFNGLGETLIGHTXOESPROC epoxy_glGetLightxOES;
    PFNGLGETLIGHTXVPROC epoxy_glGetLightxv;
    PFNGLGETLIGHTXVOESPROC epoxy_glGetLightxvOES;
    PFNGLGETLISTPARAMETERFVSGIXPROC epoxy_glGetListParameterfvSGIX;
    PFNGLGETLISTPARAMETERIVSGIXPROC epoxy_glGetListParameterivSGIX;
    PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC epoxy_glGetLocalConstantBooleanvEXT;
    PFNGLGETLOCALCONSTANTFLOATVEXTPROC epoxy_glGetLocalConstantFloatvEXT;
    PFNGLGETLOCALCONSTANTINTEGERVEXTPROC epoxy_glGetLocalConstantIntegervEXT;
    PFNGLGETMAPATTRIBPARAMETERFVNVPROC epoxy_glGetMapAttribParameterfvNV;
    PFNGLGETMAPATTRIBPARAMETERIVNVPROC epoxy_glGetMapAttribParameterivNV;
    PFNGLGETMAPCONTROLPOINTSNVPROC epoxy_glGetMapControlPointsNV;
    PFNGLGETMAPPARAMETERFVNVPROC epoxy_glGetMapParameterfvNV;
    PFNGLGETMAPPARAMETERIVNVPROC epoxy_glGetMapParameterivNV;
    PFNGLGETMAPDVPROC epoxy_glGetMapdv;
    PFNGLGETMAPFVPROC epoxy_glGetMapfv;
    PFNGLGETMAPIVPROC epoxy_glGetMapiv;
    PFNGLGETMAPXVOESPROC epoxy_glGetMapxvOES;
    PFNGLGETMATERIALFVPROC epoxy_glGetMaterialfv;
    PFNGLGETMATERIALIVPROC epoxy_glGetMaterialiv;
    PFNGLGETMATERIALXOESPROC epoxy_glGetMaterialxOES;
    PFNGLGETMATERIALXVPROC epoxy_glGetMaterialxv;
    PFNGLGETMATERIALXVOESPROC epoxy_glGetMaterialxvOES;
    PFNGLGETMINMAXPROC epoxy_glGetMinmax;
    PFNGLGETMINMAXEXTPROC epoxy_glGetMinmaxEXT;
    PFNGLGETMINMAXPARAMETERFVPROC epoxy_glGetMinmaxParameterfv;
    PFNGLGETMINMAXPARAMETERFVEXTPROC epoxy_glGetMinmaxParameterfvEXT;
    PFNGLGETMINMAXPARAMETERIVPROC epoxy_glGetMinmaxParameteriv;
    PFNGLGETMINMAXPARAMETERIVEXTPROC epoxy_glGetMinmaxParameterivEXT;
    PFNGLGETMULTITEXENVFVEXTPROC epoxy_glGetMultiTexEnvfvEXT;
    PFNGLGETMULTITEXENVIVEXTPROC epoxy_glGetMultiTexEnvivEXT;
    PFNGLGETMULTITEXGENDVEXTPROC epoxy_glGetMultiTexGendvEXT;
    PFNGLGETMULTITEXGENFVEXTPROC epoxy_glGetMultiTexGenfvEXT;
    PFNGLGETMULTITEXGENIVEXTPROC epoxy_glGetMultiTexGenivEXT;
    PFNGLGETMULTITEXIMAGEEXTPROC epoxy_glGetMultiTexImageEXT;
    PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC epoxy_glGetMultiTexLevelParameterfvEXT;
    PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC epoxy_glGetMultiTexLevelParameterivEXT;
    PFNGLGETMULTITEXPARAMETERIIVEXTPROC epoxy_glGetMultiTexParameterIivEXT;
    PFNGLGETMULTITEXPARAMETERIUIVEXTPROC epoxy_glGetMultiTexParameterIuivEXT;
    PFNGLGETMULTITEXPARAMETERFVEXTPROC epoxy_glGetMultiTexParameterfvEXT;
    PFNGLGETMULTITEXPARAMETERIVEXTPROC epoxy_glGetMultiTexParameterivEXT;
    PFNGLGETMULTISAMPLEFVPROC epoxy_glGetMultisamplefv;
    PFNGLGETMULTISAMPLEFVNVPROC epoxy_glGetMultisamplefvNV;
    PFNGLGETNAMEDBUFFERPARAMETERI64VPROC epoxy_glGetNamedBufferParameteri64v;
    PFNGLGETNAMEDBUFFERPARAMETERIVPROC epoxy_glGetNamedBufferParameteriv;
    PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC epoxy_glGetNamedBufferParameterivEXT;
    PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC epoxy_glGetNamedBufferParameterui64vNV;
    PFNGLGETNAMEDBUFFERPOINTERVPROC epoxy_glGetNamedBufferPointerv;
    PFNGLGETNAMEDBUFFERPOINTERVEXTPROC epoxy_glGetNamedBufferPointervEXT;
    PFNGLGETNAMEDBUFFERSUBDATAPROC epoxy_glGetNamedBufferSubData;
    PFNGLGETNAMEDBUFFERSUBDATAEXTPROC epoxy_glGetNamedBufferSubDataEXT;
    PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC epoxy_glGetNamedFramebufferAttachmentParameteriv;
    PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC epoxy_glGetNamedFramebufferAttachmentParameterivEXT;
    PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC epoxy_glGetNamedFramebufferParameteriv;
    PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC epoxy_glGetNamedFramebufferParameterivEXT;
    PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC epoxy_glGetNamedProgramLocalParameterIivEXT;
    PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC epoxy_glGetNamedProgramLocalParameterIuivEXT;
    PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC epoxy_glGetNamedProgramLocalParameterdvEXT;
    PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC epoxy_glGetNamedProgramLocalParameterfvEXT;
    PFNGLGETNAMEDPROGRAMSTRINGEXTPROC epoxy_glGetNamedProgramStringEXT;
    PFNGLGETNAMEDPROGRAMIVEXTPROC epoxy_glGetNamedProgramivEXT;
    PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC epoxy_glGetNamedRenderbufferParameteriv;
    PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC epoxy_glGetNamedRenderbufferParameterivEXT;
    PFNGLGETNAMEDSTRINGARBPROC epoxy_glGetNamedStringARB;
    PFNGLGETNAMEDSTRINGIVARBPROC epoxy_glGetNamedStringivARB;
    PFNGLGETNEXTPERFQUERYIDINTELPROC epoxy_glGetNextPerfQueryIdINTEL;
    PFNGLGETOBJECTBUFFERFVATIPROC epoxy_glGetObjectBufferfvATI;
    PFNGLGETOBJECTBUFFERIVATIPROC epoxy_glGetObjectBufferivATI;
    PFNGLGETOBJECTLABELPROC epoxy_glGetObjectLabel;
    PFNGLGETOBJECTLABELEXTPROC epoxy_glGetObjectLabelEXT;
    PFNGLGETOBJECTLABELKHRPROC epoxy_glGetObjectLabelKHR;
    PFNGLGETOBJECTPARAMETERFVARBPROC epoxy_glGetObjectParameterfvARB;
    PFNGLGETOBJECTPARAMETERIVAPPLEPROC epoxy_glGetObjectParameterivAPPLE;
    PFNGLGETOBJECTPARAMETERIVARBPROC epoxy_glGetObjectParameterivARB;
    PFNGLGETOBJECTPTRLABELPROC epoxy_glGetObjectPtrLabel;
    PFNGLGETOBJECTPTRLABELKHRPROC epoxy_glGetObjectPtrLabelKHR;
    PFNGLGETOCCLUSIONQUERYIVNVPROC epoxy_glGetOcclusionQueryivNV;
    PFNGLGETOCCLUSIONQUERYUIVNVPROC epoxy_glGetOcclusionQueryuivNV;
    PFNGLGETPATHCOLORGENFVNVPROC epoxy_glGetPathColorGenfvNV;
    PFNGLGETPATHCOLORGENIVNVPROC epoxy_glGetPathColorGenivNV;
    PFNGLGETPATHCOMMANDSNVPROC epoxy_glGetPathCommandsNV;
    PFNGLGETPATHCOORDSNVPROC epoxy_glGetPathCoordsNV;
    PFNGLGETPATHDASHARRAYNVPROC epoxy_glGetPathDashArrayNV;
    PFNGLGETPATHLENGTHNVPROC epoxy_glGetPathLengthNV;
    PFNGLGETPATHMETRICRANGENVPROC epoxy_glGetPathMetricRangeNV;
    PFNGLGETPATHMETRICSNVPROC epoxy_glGetPathMetricsNV;
    PFNGLGETPATHPARAMETERFVNVPROC epoxy_glGetPathParameterfvNV;
    PFNGLGETPATHPARAMETERIVNVPROC epoxy_glGetPathParameterivNV;
    PFNGLGETPATHSPACINGNVPROC epoxy_glGetPathSpacingNV;
    PFNGLGETPATHTEXGENFVNVPROC epoxy_glGetPathTexGenfvNV;
    PFNGLGETPATHTEXGENIVNVPROC epoxy_glGetPathTexGenivNV;
    PFNGLGETPERFCOUNTERINFOINTELPROC epoxy_glGetPerfCounterInfoINTEL;
    PFNGLGETPERFMONITORCOUNTERDATAAMDPROC epoxy_glGetPerfMonitorCounterDataAMD;
    PFNGLGETPERFMONITORCOUNTERINFOAMDPROC epoxy_glGetPerfMonitorCounterInfoAMD;
    PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC epoxy_glGetPerfMonitorCounterStringAMD;
    PFNGLGETPERFMONITORCOUNTERSAMDPROC epoxy_glGetPerfMonitorCountersAMD;
    PFNGLGETPERFMONITORGROUPSTRINGAMDPROC epoxy_glGetPerfMonitorGroupStringAMD;
    PFNGLGETPERFMONITORGROUPSAMDPROC epoxy_glGetPerfMonitorGroupsAMD;
    PFNGLGETPERFQUERYDATAINTELPROC epoxy_glGetPerfQueryDataINTEL;
    PFNGLGETPERFQUERYIDBYNAMEINTELPROC epoxy_glGetPerfQueryIdByNameINTEL;
    PFNGLGETPERFQUERYINFOINTELPROC epoxy_glGetPerfQueryInfoINTEL;
    PFNGLGETPIXELMAPFVPROC epoxy_glGetPixelMapfv;
    PFNGLGETPIXELMAPUIVPROC epoxy_glGetPixelMapuiv;
    PFNGLGETPIXELMAPUSVPROC epoxy_glGetPixelMapusv;
    PFNGLGETPIXELMAPXVPROC epoxy_glGetPixelMapxv;
    PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC epoxy_glGetPixelTexGenParameterfvSGIS;
    PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC epoxy_glGetPixelTexGenParameterivSGIS;
    PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC epoxy_glGetPixelTransformParameterfvEXT;
    PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC epoxy_glGetPixelTransformParameterivEXT;
    PFNGLGETPOINTERINDEXEDVEXTPROC epoxy_glGetPointerIndexedvEXT;
    PFNGLGETPOINTERI_VEXTPROC epoxy_glGetPointeri_vEXT;
    PFNGLGETPOINTERVPROC epoxy_glGetPointerv;
    PFNGLGETPOINTERVEXTPROC epoxy_glGetPointervEXT;
    PFNGLGETPOINTERVKHRPROC epoxy_glGetPointervKHR;
    PFNGLGETPOLYGONSTIPPLEPROC epoxy_glGetPolygonStipple;
    PFNGLGETPROGRAMBINARYPROC epoxy_glGetProgramBinary;
    PFNGLGETPROGRAMBINARYOESPROC epoxy_glGetProgramBinaryOES;
    PFNGLGETPROGRAMENVPARAMETERIIVNVPROC epoxy_glGetProgramEnvParameterIivNV;
    PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC epoxy_glGetProgramEnvParameterIuivNV;
    PFNGLGETPROGRAMENVPARAMETERDVARBPROC epoxy_glGetProgramEnvParameterdvARB;
    PFNGLGETPROGRAMENVPARAMETERFVARBPROC epoxy_glGetProgramEnvParameterfvARB;
    PFNGLGETPROGRAMINFOLOGPROC epoxy_glGetProgramInfoLog;
    PFNGLGETPROGRAMINTERFACEIVPROC epoxy_glGetProgramInterfaceiv;
    PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC epoxy_glGetProgramLocalParameterIivNV;
    PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC epoxy_glGetProgramLocalParameterIuivNV;
    PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC epoxy_glGetProgramLocalParameterdvARB;
    PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC epoxy_glGetProgramLocalParameterfvARB;
    PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC epoxy_glGetProgramNamedParameterdvNV;
    PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC epoxy_glGetProgramNamedParameterfvNV;
    PFNGLGETPROGRAMPARAMETERDVNVPROC epoxy_glGetProgramParameterdvNV;
    PFNGLGETPROGRAMPARAMETERFVNVPROC epoxy_glGetProgramParameterfvNV;
    PFNGLGETPROGRAMPIPELINEINFOLOGPROC epoxy_glGetProgramPipelineInfoLog;
    PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC epoxy_glGetProgramPipelineInfoLogEXT;
    PFNGLGETPROGRAMPIPELINEIVPROC epoxy_glGetProgramPipelineiv;
    PFNGLGETPROGRAMPIPELINEIVEXTPROC epoxy_glGetProgramPipelineivEXT;
    PFNGLGETPROGRAMRESOURCEINDEXPROC epoxy_glGetProgramResourceIndex;
    PFNGLGETPROGRAMRESOURCELOCATIONPROC epoxy_glGetProgramResourceLocation;
    PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC epoxy_glGetProgramResourceLocationIndex;
    PFNGLGETPROGRAMRESOURCENAMEPROC epoxy_glGetProgramResourceName;
    PFNGLGETPROGRAMRESOURCEFVNVPROC epoxy_glGetProgramResourcefvNV;
    PFNGLGETPROGRAMRESOURCEIVPROC epoxy_glGetProgramResourceiv;
    PFNGLGETPROGRAMSTAGEIVPROC epoxy_glGetProgramStageiv;
    PFNGLGETPROGRAMSTRINGARBPROC epoxy_glGetProgramStringARB;
    PFNGLGETPROGRAMSTRINGNVPROC epoxy_glGetProgramStringNV;
    PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC epoxy_glGetProgramSubroutineParameteruivNV;
    PFNGLGETPROGRAMIVPROC epoxy_glGetProgramiv;
    PFNGLGETPROGRAMIVARBPROC epoxy_glGetProgramivARB;
    PFNGLGETPROGRAMIVNVPROC epoxy_glGetProgramivNV;
    PFNGLGETQUERYBUFFEROBJECTI64VPROC epoxy_glGetQueryBufferObjecti64v;
    PFNGLGETQUERYBUFFEROBJECTIVPROC epoxy_glGetQueryBufferObjectiv;
    PFNGLGETQUERYBUFFEROBJECTUI64VPROC epoxy_glGetQueryBufferObjectui64v;
    PFNGLGETQUERYBUFFEROBJECTUIVPROC epoxy_glGetQueryBufferObjectuiv;
    PFNGLGETQUERYINDEXEDIVPROC epoxy_glGetQueryIndexediv;
    PFNGLGETQUERYOBJECTI64VPROC epoxy_glGetQueryObjecti64v;
    PFNGLGETQUERYOBJECTI64VEXTPROC epoxy_glGetQueryObjecti64vEXT;
    PFNGLGETQUERYOBJECTIVPROC epoxy_glGetQueryObjectiv;
    PFNGLGETQUERYOBJECTIVARBPROC epoxy_glGetQueryObjectivARB;
    PFNGLGETQUERYOBJECTIVEXTPROC epoxy_glGetQueryObjectivEXT;
    PFNGLGETQUERYOBJECTUI64VPROC epoxy_glGetQueryObjectui64v;
    PFNGLGETQUERYOBJECTUI64VEXTPROC epoxy_glGetQueryObjectui64vEXT;
    PFNGLGETQUERYOBJECTUIVPROC epoxy_glGetQueryObjectuiv;
    PFNGLGETQUERYOBJECTUIVARBPROC epoxy_glGetQueryObjectuivARB;
    PFNGLGETQUERYOBJECTUIVEXTPROC epoxy_glGetQueryObjectuivEXT;
    PFNGLGETQUERYIVPROC epoxy_glGetQueryiv;
    PFNGLGETQUERYIVARBPROC epoxy_glGetQueryivARB;
    PFNGLGETQUERYIVEXTPROC epoxy_glGetQueryivEXT;
    PFNGLGETRENDERBUFFERPARAMETERIVPROC epoxy_glGetRenderbufferParameteriv;
    PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC epoxy_glGetRenderbufferParameterivEXT;
    PFNGLGETRENDERBUFFERPARAMETERIVOESPROC epoxy_glGetRenderbufferParameterivOES;
    PFNGLGETSAMPLERPARAMETERIIVPROC epoxy_glGetSamplerParameterIiv;
    PFNGLGETSAMPLERPARAMETERIIVEXTPROC epoxy_glGetSamplerParameterIivEXT;
    PFNGLGETSAMPLERPARAMETERIIVOESPROC epoxy_glGetSamplerParameterIivOES;
    PFNGLGETSAMPLERPARAMETERIUIVPROC epoxy_glGetSamplerParameterIuiv;
    PFNGLGETSAMPLERPARAMETERIUIVEXTPROC epoxy_glGetSamplerParameterIuivEXT;
    PFNGLGETSAMPLERPARAMETERIUIVOESPROC epoxy_glGetSamplerParameterIuivOES;
    PFNGLGETSAMPLERPARAMETERFVPROC epoxy_glGetSamplerParameterfv;
    PFNGLGETSAMPLERPARAMETERIVPROC epoxy_glGetSamplerParameteriv;
    PFNGLGETSEPARABLEFILTERPROC epoxy_glGetSeparableFilter;
    PFNGLGETSEPARABLEFILTEREXTPROC epoxy_glGetSeparableFilterEXT;
    PFNGLGETSHADERINFOLOGPROC epoxy_glGetShaderInfoLog;
    PFNGLGETSHADERPRECISIONFORMATPROC epoxy_glGetShaderPrecisionFormat;
    PFNGLGETSHADERSOURCEPROC epoxy_glGetShaderSource;
    PFNGLGETSHADERSOURCEARBPROC epoxy_glGetShaderSourceARB;
    PFNGLGETSHADERIVPROC epoxy_glGetShaderiv;
    PFNGLGETSHARPENTEXFUNCSGISPROC epoxy_glGetSharpenTexFuncSGIS;
    PFNGLGETSTAGEINDEXNVPROC epoxy_glGetStageIndexNV;
    PFNGLGETSTRINGPROC epoxy_glGetString;
    PFNGLGETSTRINGIPROC epoxy_glGetStringi;
    PFNGLGETSUBROUTINEINDEXPROC epoxy_glGetSubroutineIndex;
    PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC epoxy_glGetSubroutineUniformLocation;
    PFNGLGETSYNCIVPROC epoxy_glGetSynciv;
    PFNGLGETSYNCIVAPPLEPROC epoxy_glGetSyncivAPPLE;
    PFNGLGETTEXBUMPPARAMETERFVATIPROC epoxy_glGetTexBumpParameterfvATI;
    PFNGLGETTEXBUMPPARAMETERIVATIPROC epoxy_glGetTexBumpParameterivATI;
    PFNGLGETTEXENVFVPROC epoxy_glGetTexEnvfv;
    PFNGLGETTEXENVIVPROC epoxy_glGetTexEnviv;
    PFNGLGETTEXENVXVPROC epoxy_glGetTexEnvxv;
    PFNGLGETTEXENVXVOESPROC epoxy_glGetTexEnvxvOES;
    PFNGLGETTEXFILTERFUNCSGISPROC epoxy_glGetTexFilterFuncSGIS;
    PFNGLGETTEXGENDVPROC epoxy_glGetTexGendv;
    PFNGLGETTEXGENFVPROC epoxy_glGetTexGenfv;
    PFNGLGETTEXGENFVOESPROC epoxy_glGetTexGenfvOES;
    PFNGLGETTEXGENIVPROC epoxy_glGetTexGeniv;
    PFNGLGETTEXGENIVOESPROC epoxy_glGetTexGenivOES;
    PFNGLGETTEXGENXVOESPROC epoxy_glGetTexGenxvOES;
    PFNGLGETTEXIMAGEPROC epoxy_glGetTexImage;
    PFNGLGETTEXLEVELPARAMETERFVPROC epoxy_glGetTexLevelParameterfv;
    PFNGLGETTEXLEVELPARAMETERIVPROC epoxy_glGetTexLevelParameteriv;
    PFNGLGETTEXLEVELPARAMETERXVOESPROC epoxy_glGetTexLevelParameterxvOES;
    PFNGLGETTEXPARAMETERIIVPROC epoxy_glGetTexParameterIiv;
    PFNGLGETTEXPARAMETERIIVEXTPROC epoxy_glGetTexParameterIivEXT;
    PFNGLGETTEXPARAMETERIIVOESPROC epoxy_glGetTexParameterIivOES;
    PFNGLGETTEXPARAMETERIUIVPROC epoxy_glGetTexParameterIuiv;
    PFNGLGETTEXPARAMETERIUIVEXTPROC epoxy_glGetTexParameterIuivEXT;
    PFNGLGETTEXPARAMETERIUIVOESPROC epoxy_glGetTexParameterIuivOES;
    PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC epoxy_glGetTexParameterPointervAPPLE;
    PFNGLGETTEXPARAMETERFVPROC epoxy_glGetTexParameterfv;
    PFNGLGETTEXPARAMETERIVPROC epoxy_glGetTexParameteriv;
    PFNGLGETTEXPARAMETERXVPROC epoxy_glGetTexParameterxv;
    PFNGLGETTEXPARAMETERXVOESPROC epoxy_glGetTexParameterxvOES;
    PFNGLGETTEXTUREHANDLEARBPROC epoxy_glGetTextureHandleARB;
    PFNGLGETTEXTUREHANDLENVPROC epoxy_glGetTextureHandleNV;
    PFNGLGETTEXTUREIMAGEPROC epoxy_glGetTextureImage;
    PFNGLGETTEXTUREIMAGEEXTPROC epoxy_glGetTextureImageEXT;
    PFNGLGETTEXTURELEVELPARAMETERFVPROC epoxy_glGetTextureLevelParameterfv;
    PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC epoxy_glGetTextureLevelParameterfvEXT;
    PFNGLGETTEXTURELEVELPARAMETERIVPROC epoxy_glGetTextureLevelParameteriv;
    PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC epoxy_glGetTextureLevelParameterivEXT;
    PFNGLGETTEXTUREPARAMETERIIVPROC epoxy_glGetTextureParameterIiv;
    PFNGLGETTEXTUREPARAMETERIIVEXTPROC epoxy_glGetTextureParameterIivEXT;
    PFNGLGETTEXTUREPARAMETERIUIVPROC epoxy_glGetTextureParameterIuiv;
    PFNGLGETTEXTUREPARAMETERIUIVEXTPROC epoxy_glGetTextureParameterIuivEXT;
    PFNGLGETTEXTUREPARAMETERFVPROC epoxy_glGetTextureParameterfv;
    PFNGLGETTEXTUREPARAMETERFVEXTPROC epoxy_glGetTextureParameterfvEXT;
    PFNGLGETTEXTUREPARAMETERIVPROC epoxy_glGetTextureParameteriv;
    PFNGLGETTEXTUREPARAMETERIVEXTPROC epoxy_glGetTextureParameterivEXT;
    PFNGLGETTEXTURESAMPLERHANDLEARBPROC epoxy_glGetTextureSamplerHandleARB;
    PFNGLGETTEXTURESAMPLERHANDLENVPROC epoxy_glGetTextureSamplerHandleNV;
    PFNGLGETTEXTURESUBIMAGEPROC epoxy_glGetTextureSubImage;
    PFNGLGETTRACKMATRIXIVNVPROC epoxy_glGetTrackMatrixivNV;
    PFNGLGETTRANSFORMFEEDBACKVARYINGPROC epoxy_glGetTransformFeedbackVarying;
    PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC epoxy_glGetTransformFeedbackVaryingEXT;
    PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC epoxy_glGetTransformFeedbackVaryingNV;
    PFNGLGETTRANSFORMFEEDBACKI64_VPROC epoxy_glGetTransformFeedbacki64_v;
    PFNGLGETTRANSFORMFEEDBACKI_VPROC epoxy_glGetTransformFeedbacki_v;
    PFNGLGETTRANSFORMFEEDBACKIVPROC epoxy_glGetTransformFeedbackiv;
    PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC epoxy_glGetTranslatedShaderSourceANGLE;
    PFNGLGETUNIFORMBLOCKINDEXPROC epoxy_glGetUniformBlockIndex;
    PFNGLGETUNIFORMBUFFERSIZEEXTPROC epoxy_glGetUniformBufferSizeEXT;
    PFNGLGETUNIFORMINDICESPROC epoxy_glGetUniformIndices;
    PFNGLGETUNIFORMLOCATIONPROC epoxy_glGetUniformLocation;
    PFNGLGETUNIFORMLOCATIONARBPROC epoxy_glGetUniformLocationARB;
    PFNGLGETUNIFORMOFFSETEXTPROC epoxy_glGetUniformOffsetEXT;
    PFNGLGETUNIFORMSUBROUTINEUIVPROC epoxy_glGetUniformSubroutineuiv;
    PFNGLGETUNIFORMDVPROC epoxy_glGetUniformdv;
    PFNGLGETUNIFORMFVPROC epoxy_glGetUniformfv;
    PFNGLGETUNIFORMFVARBPROC epoxy_glGetUniformfvARB;
    PFNGLGETUNIFORMI64VNVPROC epoxy_glGetUniformi64vNV;
    PFNGLGETUNIFORMIVPROC epoxy_glGetUniformiv;
    PFNGLGETUNIFORMIVARBPROC epoxy_glGetUniformivARB;
    PFNGLGETUNIFORMUI64VNVPROC epoxy_glGetUniformui64vNV;
    PFNGLGETUNIFORMUIVPROC epoxy_glGetUniformuiv;
    PFNGLGETUNIFORMUIVEXTPROC epoxy_glGetUniformuivEXT;
    PFNGLGETVARIANTARRAYOBJECTFVATIPROC epoxy_glGetVariantArrayObjectfvATI;
    PFNGLGETVARIANTARRAYOBJECTIVATIPROC epoxy_glGetVariantArrayObjectivATI;
    PFNGLGETVARIANTBOOLEANVEXTPROC epoxy_glGetVariantBooleanvEXT;
    PFNGLGETVARIANTFLOATVEXTPROC epoxy_glGetVariantFloatvEXT;
    PFNGLGETVARIANTINTEGERVEXTPROC epoxy_glGetVariantIntegervEXT;
    PFNGLGETVARIANTPOINTERVEXTPROC epoxy_glGetVariantPointervEXT;
    PFNGLGETVARYINGLOCATIONNVPROC epoxy_glGetVaryingLocationNV;
    PFNGLGETVERTEXARRAYINDEXED64IVPROC epoxy_glGetVertexArrayIndexed64iv;
    PFNGLGETVERTEXARRAYINDEXEDIVPROC epoxy_glGetVertexArrayIndexediv;
    PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC epoxy_glGetVertexArrayIntegeri_vEXT;
    PFNGLGETVERTEXARRAYINTEGERVEXTPROC epoxy_glGetVertexArrayIntegervEXT;
    PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC epoxy_glGetVertexArrayPointeri_vEXT;
    PFNGLGETVERTEXARRAYPOINTERVEXTPROC epoxy_glGetVertexArrayPointervEXT;
    PFNGLGETVERTEXARRAYIVPROC epoxy_glGetVertexArrayiv;
    PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC epoxy_glGetVertexAttribArrayObjectfvATI;
    PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC epoxy_glGetVertexAttribArrayObjectivATI;
    PFNGLGETVERTEXATTRIBIIVPROC epoxy_glGetVertexAttribIiv;
    PFNGLGETVERTEXATTRIBIIVEXTPROC epoxy_glGetVertexAttribIivEXT;
    PFNGLGETVERTEXATTRIBIUIVPROC epoxy_glGetVertexAttribIuiv;
    PFNGLGETVERTEXATTRIBIUIVEXTPROC epoxy_glGetVertexAttribIuivEXT;
    PFNGLGETVERTEXATTRIBLDVPROC epoxy_glGetVertexAttribLdv;
    PFNGLGETVERTEXATTRIBLDVEXTPROC epoxy_glGetVertexAttribLdvEXT;
    PFNGLGETVERTEXATTRIBLI64VNVPROC epoxy_glGetVertexAttribLi64vNV;
    PFNGLGETVERTEXATTRIBLUI64VARBPROC epoxy_glGetVertexAttribLui64vARB;
    PFNGLGETVERTEXATTRIBLUI64VNVPROC epoxy_glGetVertexAttribLui64vNV;
    PFNGLGETVERTEXATTRIBPOINTERVPROC epoxy_glGetVertexAttribPointerv;
    PFNGLGETVERTEXATTRIBPOINTERVARBPROC epoxy_glGetVertexAttribPointervARB;
    PFNGLGETVERTEXATTRIBPOINTERVNVPROC epoxy_glGetVertexAttribPointervNV;
    PFNGLGETVERTEXATTRIBDVPROC epoxy_glGetVertexAttribdv;
    PFNGLGETVERTEXATTRIBDVARBPROC epoxy_glGetVertexAttribdvARB;
    PFNGLGETVERTEXATTRIBDVNVPROC epoxy_glGetVertexAttribdvNV;
    PFNGLGETVERTEXATTRIBFVPROC epoxy_glGetVertexAttribfv;
    PFNGLGETVERTEXATTRIBFVARBPROC epoxy_glGetVertexAttribfvARB;
    PFNGLGETVERTEXATTRIBFVNVPROC epoxy_glGetVertexAttribfvNV;
    PFNGLGETVERTEXATTRIBIVPROC epoxy_glGetVertexAttribiv;
    PFNGLGETVERTEXATTRIBIVARBPROC epoxy_glGetVertexAttribivARB;
    PFNGLGETVERTEXATTRIBIVNVPROC epoxy_glGetVertexAttribivNV;
    PFNGLGETVIDEOCAPTURESTREAMDVNVPROC epoxy_glGetVideoCaptureStreamdvNV;
    PFNGLGETVIDEOCAPTURESTREAMFVNVPROC epoxy_glGetVideoCaptureStreamfvNV;
    PFNGLGETVIDEOCAPTURESTREAMIVNVPROC epoxy_glGetVideoCaptureStreamivNV;
    PFNGLGETVIDEOCAPTUREIVNVPROC epoxy_glGetVideoCaptureivNV;
    PFNGLGETVIDEOI64VNVPROC epoxy_glGetVideoi64vNV;
    PFNGLGETVIDEOIVNVPROC epoxy_glGetVideoivNV;
    PFNGLGETVIDEOUI64VNVPROC epoxy_glGetVideoui64vNV;
    PFNGLGETVIDEOUIVNVPROC epoxy_glGetVideouivNV;
    PFNGLGETNCOLORTABLEPROC epoxy_glGetnColorTable;
    PFNGLGETNCOLORTABLEARBPROC epoxy_glGetnColorTableARB;
    PFNGLGETNCOMPRESSEDTEXIMAGEPROC epoxy_glGetnCompressedTexImage;
    PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC epoxy_glGetnCompressedTexImageARB;
    PFNGLGETNCONVOLUTIONFILTERPROC epoxy_glGetnConvolutionFilter;
    PFNGLGETNCONVOLUTIONFILTERARBPROC epoxy_glGetnConvolutionFilterARB;
    PFNGLGETNHISTOGRAMPROC epoxy_glGetnHistogram;
    PFNGLGETNHISTOGRAMARBPROC epoxy_glGetnHistogramARB;
    PFNGLGETNMAPDVPROC epoxy_glGetnMapdv;
    PFNGLGETNMAPDVARBPROC epoxy_glGetnMapdvARB;
    PFNGLGETNMAPFVPROC epoxy_glGetnMapfv;
    PFNGLGETNMAPFVARBPROC epoxy_glGetnMapfvARB;
    PFNGLGETNMAPIVPROC epoxy_glGetnMapiv;
    PFNGLGETNMAPIVARBPROC epoxy_glGetnMapivARB;
    PFNGLGETNMINMAXPROC epoxy_glGetnMinmax;
    PFNGLGETNMINMAXARBPROC epoxy_glGetnMinmaxARB;
    PFNGLGETNPIXELMAPFVPROC epoxy_glGetnPixelMapfv;
    PFNGLGETNPIXELMAPFVARBPROC epoxy_glGetnPixelMapfvARB;
    PFNGLGETNPIXELMAPUIVPROC epoxy_glGetnPixelMapuiv;
    PFNGLGETNPIXELMAPUIVARBPROC epoxy_glGetnPixelMapuivARB;
    PFNGLGETNPIXELMAPUSVPROC epoxy_glGetnPixelMapusv;
    PFNGLGETNPIXELMAPUSVARBPROC epoxy_glGetnPixelMapusvARB;
    PFNGLGETNPOLYGONSTIPPLEPROC epoxy_glGetnPolygonStipple;
    PFNGLGETNPOLYGONSTIPPLEARBPROC epoxy_glGetnPolygonStippleARB;
    PFNGLGETNSEPARABLEFILTERPROC epoxy_glGetnSeparableFilter;
    PFNGLGETNSEPARABLEFILTERARBPROC epoxy_glGetnSeparableFilterARB;
    PFNGLGETNTEXIMAGEPROC epoxy_glGetnTexImage;
    PFNGLGETNTEXIMAGEARBPROC epoxy_glGetnTexImageARB;
    PFNGLGETNUNIFORMDVPROC epoxy_glGetnUniformdv;
    PFNGLGETNUNIFORMDVARBPROC epoxy_glGetnUniformdvARB;
    PFNGLGETNUNIFORMFVPROC epoxy_glGetnUniformfv;
    PFNGLGETNUNIFORMFVARBPROC epoxy_glGetnUniformfvARB;
    PFNGLGETNUNIFORMFVEXTPROC epoxy_glGetnUniformfvEXT;
    PFNGLGETNUNIFORMFVKHRPROC epoxy_glGetnUniformfvKHR;
    PFNGLGETNUNIFORMIVPROC epoxy_glGetnUniformiv;
    PFNGLGETNUNIFORMIVARBPROC epoxy_glGetnUniformivARB;
    PFNGLGETNUNIFORMIVEXTPROC epoxy_glGetnUniformivEXT;
    PFNGLGETNUNIFORMIVKHRPROC epoxy_glGetnUniformivKHR;
    PFNGLGETNUNIFORMUIVPROC epoxy_glGetnUniformuiv;
    PFNGLGETNUNIFORMUIVARBPROC epoxy_glGetnUniformuivARB;
    PFNGLGETNUNIFORMUIVKHRPROC epoxy_glGetnUniformuivKHR;
    PFNGLGLOBALALPHAFACTORBSUNPROC epoxy_glGlobalAlphaFactorbSUN;
    PFNGLGLOBALALPHAFACTORDSUNPROC epoxy_glGlobalAlphaFactordSUN;
    PFNGLGLOBALALPHAFACTORFSUNPROC epoxy_glGlobalAlphaFactorfSUN;
    PFNGLGLOBALALPHAFACTORISUNPROC epoxy_glGlobalAlphaFactoriSUN;
    PFNGLGLOBALALPHAFACTORSSUNPROC epoxy_glGlobalAlphaFactorsSUN;
    PFNGLGLOBALALPHAFACTORUBSUNPROC epoxy_glGlobalAlphaFactorubSUN;
    PFNGLGLOBALALPHAFACTORUISUNPROC epoxy_glGlobalAlphaFactoruiSUN;
    PFNGLGLOBALALPHAFACTORUSSUNPROC epoxy_glGlobalAlphaFactorusSUN;
    PFNGLHINTPROC epoxy_glHint;
    PFNGLHINTPGIPROC epoxy_glHintPGI;
    PFNGLHISTOGRAMPROC epoxy_glHistogram;
    PFNGLHISTOGRAMEXTPROC epoxy_glHistogramEXT;
    PFNGLIGLOOINTERFACESGIXPROC epoxy_glIglooInterfaceSGIX;
    PFNGLIMAGETRANSFORMPARAMETERFHPPROC epoxy_glImageTransformParameterfHP;
    PFNGLIMAGETRANSFORMPARAMETERFVHPPROC epoxy_glImageTransformParameterfvHP;
    PFNGLIMAGETRANSFORMPARAMETERIHPPROC epoxy_glImageTransformParameteriHP;
    PFNGLIMAGETRANSFORMPARAMETERIVHPPROC epoxy_glImageTransformParameterivHP;
    PFNGLIMPORTSYNCEXTPROC epoxy_glImportSyncEXT;
    PFNGLINDEXFORMATNVPROC epoxy_glIndexFormatNV;
    PFNGLINDEXFUNCEXTPROC epoxy_glIndexFuncEXT;
    PFNGLINDEXMASKPROC epoxy_glIndexMask;
    PFNGLINDEXMATERIALEXTPROC epoxy_glIndexMaterialEXT;
    PFNGLINDEXPOINTERPROC epoxy_glIndexPointer;
    PFNGLINDEXPOINTEREXTPROC epoxy_glIndexPointerEXT;
    PFNGLINDEXPOINTERLISTIBMPROC epoxy_glIndexPointerListIBM;
    PFNGLINDEXDPROC epoxy_glIndexd;
    PFNGLINDEXDVPROC epoxy_glIndexdv;
    PFNGLINDEXFPROC epoxy_glIndexf;
    PFNGLINDEXFVPROC epoxy_glIndexfv;
    PFNGLINDEXIPROC epoxy_glIndexi;
    PFNGLINDEXIVPROC epoxy_glIndexiv;
    PFNGLINDEXSPROC epoxy_glIndexs;
    PFNGLINDEXSVPROC epoxy_glIndexsv;
    PFNGLINDEXUBPROC epoxy_glIndexub;
    PFNGLINDEXUBVPROC epoxy_glIndexubv;
    PFNGLINDEXXOESPROC epoxy_glIndexxOES;
    PFNGLINDEXXVOESPROC epoxy_glIndexxvOES;
    PFNGLINITNAMESPROC epoxy_glInitNames;
    PFNGLINSERTCOMPONENTEXTPROC epoxy_glInsertComponentEXT;
    PFNGLINSERTEVENTMARKEREXTPROC epoxy_glInsertEventMarkerEXT;
    PFNGLINSTRUMENTSBUFFERSGIXPROC epoxy_glInstrumentsBufferSGIX;
    PFNGLINTERLEAVEDARRAYSPROC epoxy_glInterleavedArrays;
    PFNGLINTERPOLATEPATHSNVPROC epoxy_glInterpolatePathsNV;
    PFNGLINVALIDATEBUFFERDATAPROC epoxy_glInvalidateBufferData;
    PFNGLINVALIDATEBUFFERSUBDATAPROC epoxy_glInvalidateBufferSubData;
    PFNGLINVALIDATEFRAMEBUFFERPROC epoxy_glInvalidateFramebuffer;
    PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC epoxy_glInvalidateNamedFramebufferData;
    PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC epoxy_glInvalidateNamedFramebufferSubData;
    PFNGLINVALIDATESUBFRAMEBUFFERPROC epoxy_glInvalidateSubFramebuffer;
    PFNGLINVALIDATETEXIMAGEPROC epoxy_glInvalidateTexImage;
    PFNGLINVALIDATETEXSUBIMAGEPROC epoxy_glInvalidateTexSubImage;
    PFNGLISASYNCMARKERSGIXPROC epoxy_glIsAsyncMarkerSGIX;
    PFNGLISBUFFERPROC epoxy_glIsBuffer;
    PFNGLISBUFFERARBPROC epoxy_glIsBufferARB;
    PFNGLISBUFFERRESIDENTNVPROC epoxy_glIsBufferResidentNV;
    PFNGLISCOMMANDLISTNVPROC epoxy_glIsCommandListNV;
    PFNGLISENABLEDPROC epoxy_glIsEnabled;
    PFNGLISENABLEDINDEXEDEXTPROC epoxy_glIsEnabledIndexedEXT;
    PFNGLISENABLEDIPROC epoxy_glIsEnabledi;
    PFNGLISENABLEDIEXTPROC epoxy_glIsEnablediEXT;
    PFNGLISENABLEDINVPROC epoxy_glIsEnablediNV;
    PFNGLISENABLEDIOESPROC epoxy_glIsEnablediOES;
    PFNGLISFENCEAPPLEPROC epoxy_glIsFenceAPPLE;
    PFNGLISFENCENVPROC epoxy_glIsFenceNV;
    PFNGLISFRAMEBUFFERPROC epoxy_glIsFramebuffer;
    PFNGLISFRAMEBUFFEREXTPROC epoxy_glIsFramebufferEXT;
    PFNGLISFRAMEBUFFEROESPROC epoxy_glIsFramebufferOES;
    PFNGLISIMAGEHANDLERESIDENTARBPROC epoxy_glIsImageHandleResidentARB;
    PFNGLISIMAGEHANDLERESIDENTNVPROC epoxy_glIsImageHandleResidentNV;
    PFNGLISLISTPROC epoxy_glIsList;
    PFNGLISNAMEAMDPROC epoxy_glIsNameAMD;
    PFNGLISNAMEDBUFFERRESIDENTNVPROC epoxy_glIsNamedBufferResidentNV;
    PFNGLISNAMEDSTRINGARBPROC epoxy_glIsNamedStringARB;
    PFNGLISOBJECTBUFFERATIPROC epoxy_glIsObjectBufferATI;
    PFNGLISOCCLUSIONQUERYNVPROC epoxy_glIsOcclusionQueryNV;
    PFNGLISPATHNVPROC epoxy_glIsPathNV;
    PFNGLISPOINTINFILLPATHNVPROC epoxy_glIsPointInFillPathNV;
    PFNGLISPOINTINSTROKEPATHNVPROC epoxy_glIsPointInStrokePathNV;
    PFNGLISPROGRAMPROC epoxy_glIsProgram;
    PFNGLISPROGRAMARBPROC epoxy_glIsProgramARB;
    PFNGLISPROGRAMNVPROC epoxy_glIsProgramNV;
    PFNGLISPROGRAMPIPELINEPROC epoxy_glIsProgramPipeline;
    PFNGLISPROGRAMPIPELINEEXTPROC epoxy_glIsProgramPipelineEXT;
    PFNGLISQUERYPROC epoxy_glIsQuery;
    PFNGLISQUERYARBPROC epoxy_glIsQueryARB;
    PFNGLISQUERYEXTPROC epoxy_glIsQueryEXT;
    PFNGLISRENDERBUFFERPROC epoxy_glIsRenderbuffer;
    PFNGLISRENDERBUFFEREXTPROC epoxy_glIsRenderbufferEXT;
    PFNGLISRENDERBUFFEROESPROC epoxy_glIsRenderbufferOES;
    PFNGLISSAMPLERPROC epoxy_glIsSampler;
    PFNGLISSHADERPROC epoxy_glIsShader;
    PFNGLISSTATENVPROC epoxy_glIsStateNV;
    PFNGLISSYNCPROC epoxy_glIsSync;
    PFNGLISSYNCAPPLEPROC epoxy_glIsSyncAPPLE;
    PFNGLISTEXTUREPROC epoxy_glIsTexture;
    PFNGLISTEXTUREEXTPROC epoxy_glIsTextureEXT;
    PFNGLISTEXTUREHANDLERESIDENTARBPROC epoxy_glIsTextureHandleResidentARB;
    PFNGLISTEXTUREHANDLERESIDENTNVPROC epoxy_glIsTextureHandleResidentNV;
    PFNGLISTRANSFORMFEEDBACKPROC epoxy_glIsTransformFeedback;
    PFNGLISTRANSFORMFEEDBACKNVPROC epoxy_glIsTransformFeedbackNV;
    PFNGLISVARIANTENABLEDEXTPROC epoxy_glIsVariantEnabledEXT;
    PFNGLISVERTEXARRAYPROC epoxy_glIsVertexArray;
    PFNGLISVERTEXARRAYAPPLEPROC epoxy_glIsVertexArrayAPPLE;
    PFNGLISVERTEXARRAYOESPROC epoxy_glIsVertexArrayOES;
    PFNGLISVERTEXATTRIBENABLEDAPPLEPROC epoxy_glIsVertexAttribEnabledAPPLE;
    PFNGLLABELOBJECTEXTPROC epoxy_glLabelObjectEXT;
    PFNGLLIGHTENVISGIXPROC epoxy_glLightEnviSGIX;
    PFNGLLIGHTMODELFPROC epoxy_glLightModelf;
    PFNGLLIGHTMODELFVPROC epoxy_glLightModelfv;
    PFNGLLIGHTMODELIPROC epoxy_glLightModeli;
    PFNGLLIGHTMODELIVPROC epoxy_glLightModeliv;
    PFNGLLIGHTMODELXPROC epoxy_glLightModelx;
    PFNGLLIGHTMODELXOESPROC epoxy_glLightModelxOES;
    PFNGLLIGHTMODELXVPROC epoxy_glLightModelxv;
    PFNGLLIGHTMODELXVOESPROC epoxy_glLightModelxvOES;
    PFNGLLIGHTFPROC epoxy_glLightf;
    PFNGLLIGHTFVPROC epoxy_glLightfv;
    PFNGLLIGHTIPROC epoxy_glLighti;
    PFNGLLIGHTIVPROC epoxy_glLightiv;
    PFNGLLIGHTXPROC epoxy_glLightx;
    PFNGLLIGHTXOESPROC epoxy_glLightxOES;
    PFNGLLIGHTXVPROC epoxy_glLightxv;
    PFNGLLIGHTXVOESPROC epoxy_glLightxvOES;
    PFNGLLINESTIPPLEPROC epoxy_glLineStipple;
    PFNGLLINEWIDTHPROC epoxy_glLineWidth;
    PFNGLLINEWIDTHXPROC epoxy_glLineWidthx;
    PFNGLLINEWIDTHXOESPROC epoxy_glLineWidthxOES;
    PFNGLLINKPROGRAMPROC epoxy_glLinkProgram;
    PFNGLLINKPROGRAMARBPROC epoxy_glLinkProgramARB;
    PFNGLLISTBASEPROC epoxy_glListBase;
    PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC epoxy_glListDrawCommandsStatesClientNV;
    PFNGLLISTPARAMETERFSGIXPROC epoxy_glListParameterfSGIX;
    PFNGLLISTPARAMETERFVSGIXPROC epoxy_glListParameterfvSGIX;
    PFNGLLISTPARAMETERISGIXPROC epoxy_glListParameteriSGIX;
    PFNGLLISTPARAMETERIVSGIXPROC epoxy_glListParameterivSGIX;
    PFNGLLOADIDENTITYPROC epoxy_glLoadIdentity;
    PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC epoxy_glLoadIdentityDeformationMapSGIX;
    PFNGLLOADMATRIXDPROC epoxy_glLoadMatrixd;
    PFNGLLOADMATRIXFPROC epoxy_glLoadMatrixf;
    PFNGLLOADMATRIXXPROC epoxy_glLoadMatrixx;
    PFNGLLOADMATRIXXOESPROC epoxy_glLoadMatrixxOES;
    PFNGLLOADNAMEPROC epoxy_glLoadName;
    PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC epoxy_glLoadPaletteFromModelViewMatrixOES;
    PFNGLLOADPROGRAMNVPROC epoxy_glLoadProgramNV;
    PFNGLLOADTRANSPOSEMATRIXDPROC epoxy_glLoadTransposeMatrixd;
    PFNGLLOADTRANSPOSEMATRIXDARBPROC epoxy_glLoadTransposeMatrixdARB;
    PFNGLLOADTRANSPOSEMATRIXFPROC epoxy_glLoadTransposeMatrixf;
    PFNGLLOADTRANSPOSEMATRIXFARBPROC epoxy_glLoadTransposeMatrixfARB;
    PFNGLLOADTRANSPOSEMATRIXXOESPROC epoxy_glLoadTransposeMatrixxOES;
    PFNGLLOCKARRAYSEXTPROC epoxy_glLockArraysEXT;
    PFNGLLOGICOPPROC epoxy_glLogicOp;
    PFNGLMAKEBUFFERNONRESIDENTNVPROC epoxy_glMakeBufferNonResidentNV;
    PFNGLMAKEBUFFERRESIDENTNVPROC epoxy_glMakeBufferResidentNV;
    PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC epoxy_glMakeImageHandleNonResidentARB;
    PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC epoxy_glMakeImageHandleNonResidentNV;
    PFNGLMAKEIMAGEHANDLERESIDENTARBPROC epoxy_glMakeImageHandleResidentARB;
    PFNGLMAKEIMAGEHANDLERESIDENTNVPROC epoxy_glMakeImageHandleResidentNV;
    PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC epoxy_glMakeNamedBufferNonResidentNV;
    PFNGLMAKENAMEDBUFFERRESIDENTNVPROC epoxy_glMakeNamedBufferResidentNV;
    PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC epoxy_glMakeTextureHandleNonResidentARB;
    PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC epoxy_glMakeTextureHandleNonResidentNV;
    PFNGLMAKETEXTUREHANDLERESIDENTARBPROC epoxy_glMakeTextureHandleResidentARB;
    PFNGLMAKETEXTUREHANDLERESIDENTNVPROC epoxy_glMakeTextureHandleResidentNV;
    PFNGLMAP1DPROC epoxy_glMap1d;
    PFNGLMAP1FPROC epoxy_glMap1f;
    PFNGLMAP1XOESPROC epoxy_glMap1xOES;
    PFNGLMAP2DPROC epoxy_glMap2d;
    PFNGLMAP2FPROC epoxy_glMap2f;
    PFNGLMAP2XOESPROC epoxy_glMap2xOES;
    PFNGLMAPBUFFERPROC epoxy_glMapBuffer;
    PFNGLMAPBUFFERARBPROC epoxy_glMapBufferARB;
    PFNGLMAPBUFFEROESPROC epoxy_glMapBufferOES;
    PFNGLMAPBUFFERRANGEPROC epoxy_glMapBufferRange;
    PFNGLMAPBUFFERRANGEEXTPROC epoxy_glMapBufferRangeEXT;
    PFNGLMAPCONTROLPOINTSNVPROC epoxy_glMapControlPointsNV;
    PFNGLMAPGRID1DPROC epoxy_glMapGrid1d;
    PFNGLMAPGRID1FPROC epoxy_glMapGrid1f;
    PFNGLMAPGRID1XOESPROC epoxy_glMapGrid1xOES;
    PFNGLMAPGRID2DPROC epoxy_glMapGrid2d;
    PFNGLMAPGRID2FPROC epoxy_glMapGrid2f;
    PFNGLMAPGRID2XOESPROC epoxy_glMapGrid2xOES;
    PFNGLMAPNAMEDBUFFERPROC epoxy_glMapNamedBuffer;
    PFNGLMAPNAMEDBUFFEREXTPROC epoxy_glMapNamedBufferEXT;
    PFNGLMAPNAMEDBUFFERRANGEPROC epoxy_glMapNamedBufferRange;
    PFNGLMAPNAMEDBUFFERRANGEEXTPROC epoxy_glMapNamedBufferRangeEXT;
    PFNGLMAPOBJECTBUFFERATIPROC epoxy_glMapObjectBufferATI;
    PFNGLMAPPARAMETERFVNVPROC epoxy_glMapParameterfvNV;
    PFNGLMAPPARAMETERIVNVPROC epoxy_glMapParameterivNV;
    PFNGLMAPTEXTURE2DINTELPROC epoxy_glMapTexture2DINTEL;
    PFNGLMAPVERTEXATTRIB1DAPPLEPROC epoxy_glMapVertexAttrib1dAPPLE;
    PFNGLMAPVERTEXATTRIB1FAPPLEPROC epoxy_glMapVertexAttrib1fAPPLE;
    PFNGLMAPVERTEXATTRIB2DAPPLEPROC epoxy_glMapVertexAttrib2dAPPLE;
    PFNGLMAPVERTEXATTRIB2FAPPLEPROC epoxy_glMapVertexAttrib2fAPPLE;
    PFNGLMATERIALFPROC epoxy_glMaterialf;
    PFNGLMATERIALFVPROC epoxy_glMaterialfv;
    PFNGLMATERIALIPROC epoxy_glMateriali;
    PFNGLMATERIALIVPROC epoxy_glMaterialiv;
    PFNGLMATERIALXPROC epoxy_glMaterialx;
    PFNGLMATERIALXOESPROC epoxy_glMaterialxOES;
    PFNGLMATERIALXVPROC epoxy_glMaterialxv;
    PFNGLMATERIALXVOESPROC epoxy_glMaterialxvOES;
    PFNGLMATRIXFRUSTUMEXTPROC epoxy_glMatrixFrustumEXT;
    PFNGLMATRIXINDEXPOINTERARBPROC epoxy_glMatrixIndexPointerARB;
    PFNGLMATRIXINDEXPOINTEROESPROC epoxy_glMatrixIndexPointerOES;
    PFNGLMATRIXINDEXUBVARBPROC epoxy_glMatrixIndexubvARB;
    PFNGLMATRIXINDEXUIVARBPROC epoxy_glMatrixIndexuivARB;
    PFNGLMATRIXINDEXUSVARBPROC epoxy_glMatrixIndexusvARB;
    PFNGLMATRIXLOAD3X2FNVPROC epoxy_glMatrixLoad3x2fNV;
    PFNGLMATRIXLOAD3X3FNVPROC epoxy_glMatrixLoad3x3fNV;
    PFNGLMATRIXLOADIDENTITYEXTPROC epoxy_glMatrixLoadIdentityEXT;
    PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC epoxy_glMatrixLoadTranspose3x3fNV;
    PFNGLMATRIXLOADTRANSPOSEDEXTPROC epoxy_glMatrixLoadTransposedEXT;
    PFNGLMATRIXLOADTRANSPOSEFEXTPROC epoxy_glMatrixLoadTransposefEXT;
    PFNGLMATRIXLOADDEXTPROC epoxy_glMatrixLoaddEXT;
    PFNGLMATRIXLOADFEXTPROC epoxy_glMatrixLoadfEXT;
    PFNGLMATRIXMODEPROC epoxy_glMatrixMode;
    PFNGLMATRIXMULT3X2FNVPROC epoxy_glMatrixMult3x2fNV;
    PFNGLMATRIXMULT3X3FNVPROC epoxy_glMatrixMult3x3fNV;
    PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC epoxy_glMatrixMultTranspose3x3fNV;
    PFNGLMATRIXMULTTRANSPOSEDEXTPROC epoxy_glMatrixMultTransposedEXT;
    PFNGLMATRIXMULTTRANSPOSEFEXTPROC epoxy_glMatrixMultTransposefEXT;
    PFNGLMATRIXMULTDEXTPROC epoxy_glMatrixMultdEXT;
    PFNGLMATRIXMULTFEXTPROC epoxy_glMatrixMultfEXT;
    PFNGLMATRIXORTHOEXTPROC epoxy_glMatrixOrthoEXT;
    PFNGLMATRIXPOPEXTPROC epoxy_glMatrixPopEXT;
    PFNGLMATRIXPUSHEXTPROC epoxy_glMatrixPushEXT;
    PFNGLMATRIXROTATEDEXTPROC epoxy_glMatrixRotatedEXT;
    PFNGLMATRIXROTATEFEXTPROC epoxy_glMatrixRotatefEXT;
    PFNGLMATRIXSCALEDEXTPROC epoxy_glMatrixScaledEXT;
    PFNGLMATRIXSCALEFEXTPROC epoxy_glMatrixScalefEXT;
    PFNGLMATRIXTRANSLATEDEXTPROC epoxy_glMatrixTranslatedEXT;
    PFNGLMATRIXTRANSLATEFEXTPROC epoxy_glMatrixTranslatefEXT;
    PFNGLMEMORYBARRIERPROC epoxy_glMemoryBarrier;
    PFNGLMEMORYBARRIERBYREGIONPROC epoxy_glMemoryBarrierByRegion;
    PFNGLMEMORYBARRIEREXTPROC epoxy_glMemoryBarrierEXT;
    PFNGLMINSAMPLESHADINGPROC epoxy_glMinSampleShading;
    PFNGLMINSAMPLESHADINGARBPROC epoxy_glMinSampleShadingARB;
    PFNGLMINSAMPLESHADINGOESPROC epoxy_glMinSampleShadingOES;
    PFNGLMINMAXPROC epoxy_glMinmax;
    PFNGLMINMAXEXTPROC epoxy_glMinmaxEXT;
    PFNGLMULTMATRIXDPROC epoxy_glMultMatrixd;
    PFNGLMULTMATRIXFPROC epoxy_glMultMatrixf;
    PFNGLMULTMATRIXXPROC epoxy_glMultMatrixx;
    PFNGLMULTMATRIXXOESPROC epoxy_glMultMatrixxOES;
    PFNGLMULTTRANSPOSEMATRIXDPROC epoxy_glMultTransposeMatrixd;
    PFNGLMULTTRANSPOSEMATRIXDARBPROC epoxy_glMultTransposeMatrixdARB;
    PFNGLMULTTRANSPOSEMATRIXFPROC epoxy_glMultTransposeMatrixf;
    PFNGLMULTTRANSPOSEMATRIXFARBPROC epoxy_glMultTransposeMatrixfARB;
    PFNGLMULTTRANSPOSEMATRIXXOESPROC epoxy_glMultTransposeMatrixxOES;
    PFNGLMULTIDRAWARRAYSPROC epoxy_glMultiDrawArrays;
    PFNGLMULTIDRAWARRAYSEXTPROC epoxy_glMultiDrawArraysEXT;
    PFNGLMULTIDRAWARRAYSINDIRECTPROC epoxy_glMultiDrawArraysIndirect;
    PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC epoxy_glMultiDrawArraysIndirectAMD;
    PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC epoxy_glMultiDrawArraysIndirectBindlessCountNV;
    PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC epoxy_glMultiDrawArraysIndirectBindlessNV;
    PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC epoxy_glMultiDrawArraysIndirectCountARB;
    PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC epoxy_glMultiDrawArraysIndirectEXT;
    PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC epoxy_glMultiDrawElementArrayAPPLE;
    PFNGLMULTIDRAWELEMENTSPROC epoxy_glMultiDrawElements;
    PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC epoxy_glMultiDrawElementsBaseVertex;
    PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC epoxy_glMultiDrawElementsBaseVertexEXT;
    PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC epoxy_glMultiDrawElementsBaseVertexOES;
    PFNGLMULTIDRAWELEMENTSEXTPROC epoxy_glMultiDrawElementsEXT;
    PFNGLMULTIDRAWELEMENTSINDIRECTPROC epoxy_glMultiDrawElementsIndirect;
    PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC epoxy_glMultiDrawElementsIndirectAMD;
    PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC epoxy_glMultiDrawElementsIndirectBindlessCountNV;
    PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC epoxy_glMultiDrawElementsIndirectBindlessNV;
    PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC epoxy_glMultiDrawElementsIndirectCountARB;
    PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC epoxy_glMultiDrawElementsIndirectEXT;
    PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC epoxy_glMultiDrawRangeElementArrayAPPLE;
    PFNGLMULTIMODEDRAWARRAYSIBMPROC epoxy_glMultiModeDrawArraysIBM;
    PFNGLMULTIMODEDRAWELEMENTSIBMPROC epoxy_glMultiModeDrawElementsIBM;
    PFNGLMULTITEXBUFFEREXTPROC epoxy_glMultiTexBufferEXT;
    PFNGLMULTITEXCOORD1BOESPROC epoxy_glMultiTexCoord1bOES;
    PFNGLMULTITEXCOORD1BVOESPROC epoxy_glMultiTexCoord1bvOES;
    PFNGLMULTITEXCOORD1DPROC epoxy_glMultiTexCoord1d;
    PFNGLMULTITEXCOORD1DARBPROC epoxy_glMultiTexCoord1dARB;
    PFNGLMULTITEXCOORD1DVPROC epoxy_glMultiTexCoord1dv;
    PFNGLMULTITEXCOORD1DVARBPROC epoxy_glMultiTexCoord1dvARB;
    PFNGLMULTITEXCOORD1FPROC epoxy_glMultiTexCoord1f;
    PFNGLMULTITEXCOORD1FARBPROC epoxy_glMultiTexCoord1fARB;
    PFNGLMULTITEXCOORD1FVPROC epoxy_glMultiTexCoord1fv;
    PFNGLMULTITEXCOORD1FVARBPROC epoxy_glMultiTexCoord1fvARB;
    PFNGLMULTITEXCOORD1HNVPROC epoxy_glMultiTexCoord1hNV;
    PFNGLMULTITEXCOORD1HVNVPROC epoxy_glMultiTexCoord1hvNV;
    PFNGLMULTITEXCOORD1IPROC epoxy_glMultiTexCoord1i;
    PFNGLMULTITEXCOORD1IARBPROC epoxy_glMultiTexCoord1iARB;
    PFNGLMULTITEXCOORD1IVPROC epoxy_glMultiTexCoord1iv;
    PFNGLMULTITEXCOORD1IVARBPROC epoxy_glMultiTexCoord1ivARB;
    PFNGLMULTITEXCOORD1SPROC epoxy_glMultiTexCoord1s;
    PFNGLMULTITEXCOORD1SARBPROC epoxy_glMultiTexCoord1sARB;
    PFNGLMULTITEXCOORD1SVPROC epoxy_glMultiTexCoord1sv;
    PFNGLMULTITEXCOORD1SVARBPROC epoxy_glMultiTexCoord1svARB;
    PFNGLMULTITEXCOORD1XOESPROC epoxy_glMultiTexCoord1xOES;
    PFNGLMULTITEXCOORD1XVOESPROC epoxy_glMultiTexCoord1xvOES;
    PFNGLMULTITEXCOORD2BOESPROC epoxy_glMultiTexCoord2bOES;
    PFNGLMULTITEXCOORD2BVOESPROC epoxy_glMultiTexCoord2bvOES;
    PFNGLMULTITEXCOORD2DPROC epoxy_glMultiTexCoord2d;
    PFNGLMULTITEXCOORD2DARBPROC epoxy_glMultiTexCoord2dARB;
    PFNGLMULTITEXCOORD2DVPROC epoxy_glMultiTexCoord2dv;
    PFNGLMULTITEXCOORD2DVARBPROC epoxy_glMultiTexCoord2dvARB;
    PFNGLMULTITEXCOORD2FPROC epoxy_glMultiTexCoord2f;
    PFNGLMULTITEXCOORD2FARBPROC epoxy_glMultiTexCoord2fARB;
    PFNGLMULTITEXCOORD2FVPROC epoxy_glMultiTexCoord2fv;
    PFNGLMULTITEXCOORD2FVARBPROC epoxy_glMultiTexCoord2fvARB;
    PFNGLMULTITEXCOORD2HNVPROC epoxy_glMultiTexCoord2hNV;
    PFNGLMULTITEXCOORD2HVNVPROC epoxy_glMultiTexCoord2hvNV;
    PFNGLMULTITEXCOORD2IPROC epoxy_glMultiTexCoord2i;
    PFNGLMULTITEXCOORD2IARBPROC epoxy_glMultiTexCoord2iARB;
    PFNGLMULTITEXCOORD2IVPROC epoxy_glMultiTexCoord2iv;
    PFNGLMULTITEXCOORD2IVARBPROC epoxy_glMultiTexCoord2ivARB;
    PFNGLMULTITEXCOORD2SPROC epoxy_glMultiTexCoord2s;
    PFNGLMULTITEXCOORD2SARBPROC epoxy_glMultiTexCoord2sARB;
    PFNGLMULTITEXCOORD2SVPROC epoxy_glMultiTexCoord2sv;
    PFNGLMULTITEXCOORD2SVARBPROC epoxy_glMultiTexCoord2svARB;
    PFNGLMULTITEXCOORD2XOESPROC epoxy_glMultiTexCoord2xOES;
    PFNGLMULTITEXCOORD2XVOESPROC epoxy_glMultiTexCoord2xvOES;
    PFNGLMULTITEXCOORD3BOESPROC epoxy_glMultiTexCoord3bOES;
    PFNGLMULTITEXCOORD3BVOESPROC epoxy_glMultiTexCoord3bvOES;
    PFNGLMULTITEXCOORD3DPROC epoxy_glMultiTexCoord3d;
    PFNGLMULTITEXCOORD3DARBPROC epoxy_glMultiTexCoord3dARB;
    PFNGLMULTITEXCOORD3DVPROC epoxy_glMultiTexCoord3dv;
    PFNGLMULTITEXCOORD3DVARBPROC epoxy_glMultiTexCoord3dvARB;
    PFNGLMULTITEXCOORD3FPROC epoxy_glMultiTexCoord3f;
    PFNGLMULTITEXCOORD3FARBPROC epoxy_glMultiTexCoord3fARB;
    PFNGLMULTITEXCOORD3FVPROC epoxy_glMultiTexCoord3fv;
    PFNGLMULTITEXCOORD3FVARBPROC epoxy_glMultiTexCoord3fvARB;
    PFNGLMULTITEXCOORD3HNVPROC epoxy_glMultiTexCoord3hNV;
    PFNGLMULTITEXCOORD3HVNVPROC epoxy_glMultiTexCoord3hvNV;
    PFNGLMULTITEXCOORD3IPROC epoxy_glMultiTexCoord3i;
    PFNGLMULTITEXCOORD3IARBPROC epoxy_glMultiTexCoord3iARB;
    PFNGLMULTITEXCOORD3IVPROC epoxy_glMultiTexCoord3iv;
    PFNGLMULTITEXCOORD3IVARBPROC epoxy_glMultiTexCoord3ivARB;
    PFNGLMULTITEXCOORD3SPROC epoxy_glMultiTexCoord3s;
    PFNGLMULTITEXCOORD3SARBPROC epoxy_glMultiTexCoord3sARB;
    PFNGLMULTITEXCOORD3SVPROC epoxy_glMultiTexCoord3sv;
    PFNGLMULTITEXCOORD3SVARBPROC epoxy_glMultiTexCoord3svARB;
    PFNGLMULTITEXCOORD3XOESPROC epoxy_glMultiTexCoord3xOES;
    PFNGLMULTITEXCOORD3XVOESPROC epoxy_glMultiTexCoord3xvOES;
    PFNGLMULTITEXCOORD4BOESPROC epoxy_glMultiTexCoord4bOES;
    PFNGLMULTITEXCOORD4BVOESPROC epoxy_glMultiTexCoord4bvOES;
    PFNGLMULTITEXCOORD4DPROC epoxy_glMultiTexCoord4d;
    PFNGLMULTITEXCOORD4DARBPROC epoxy_glMultiTexCoord4dARB;
    PFNGLMULTITEXCOORD4DVPROC epoxy_glMultiTexCoord4dv;
    PFNGLMULTITEXCOORD4DVARBPROC epoxy_glMultiTexCoord4dvARB;
    PFNGLMULTITEXCOORD4FPROC epoxy_glMultiTexCoord4f;
    PFNGLMULTITEXCOORD4FARBPROC epoxy_glMultiTexCoord4fARB;
    PFNGLMULTITEXCOORD4FVPROC epoxy_glMultiTexCoord4fv;
    PFNGLMULTITEXCOORD4FVARBPROC epoxy_glMultiTexCoord4fvARB;
    PFNGLMULTITEXCOORD4HNVPROC epoxy_glMultiTexCoord4hNV;
    PFNGLMULTITEXCOORD4HVNVPROC epoxy_glMultiTexCoord4hvNV;
    PFNGLMULTITEXCOORD4IPROC epoxy_glMultiTexCoord4i;
    PFNGLMULTITEXCOORD4IARBPROC epoxy_glMultiTexCoord4iARB;
    PFNGLMULTITEXCOORD4IVPROC epoxy_glMultiTexCoord4iv;
    PFNGLMULTITEXCOORD4IVARBPROC epoxy_glMultiTexCoord4ivARB;
    PFNGLMULTITEXCOORD4SPROC epoxy_glMultiTexCoord4s;
    PFNGLMULTITEXCOORD4SARBPROC epoxy_glMultiTexCoord4sARB;
    PFNGLMULTITEXCOORD4SVPROC epoxy_glMultiTexCoord4sv;
    PFNGLMULTITEXCOORD4SVARBPROC epoxy_glMultiTexCoord4svARB;
    PFNGLMULTITEXCOORD4XPROC epoxy_glMultiTexCoord4x;
    PFNGLMULTITEXCOORD4XOESPROC epoxy_glMultiTexCoord4xOES;
    PFNGLMULTITEXCOORD4XVOESPROC epoxy_glMultiTexCoord4xvOES;
    PFNGLMULTITEXCOORDP1UIPROC epoxy_glMultiTexCoordP1ui;
    PFNGLMULTITEXCOORDP1UIVPROC epoxy_glMultiTexCoordP1uiv;
    PFNGLMULTITEXCOORDP2UIPROC epoxy_glMultiTexCoordP2ui;
    PFNGLMULTITEXCOORDP2UIVPROC epoxy_glMultiTexCoordP2uiv;
    PFNGLMULTITEXCOORDP3UIPROC epoxy_glMultiTexCoordP3ui;
    PFNGLMULTITEXCOORDP3UIVPROC epoxy_glMultiTexCoordP3uiv;
    PFNGLMULTITEXCOORDP4UIPROC epoxy_glMultiTexCoordP4ui;
    PFNGLMULTITEXCOORDP4UIVPROC epoxy_glMultiTexCoordP4uiv;
    PFNGLMULTITEXCOORDPOINTEREXTPROC epoxy_glMultiTexCoordPointerEXT;
    PFNGLMULTITEXENVFEXTPROC epoxy_glMultiTexEnvfEXT;
    PFNGLMULTITEXENVFVEXTPROC epoxy_glMultiTexEnvfvEXT;
    PFNGLMULTITEXENVIEXTPROC epoxy_glMultiTexEnviEXT;
    PFNGLMULTITEXENVIVEXTPROC epoxy_glMultiTexEnvivEXT;
    PFNGLMULTITEXGENDEXTPROC epoxy_glMultiTexGendEXT;
    PFNGLMULTITEXGENDVEXTPROC epoxy_glMultiTexGendvEXT;
    PFNGLMULTITEXGENFEXTPROC epoxy_glMultiTexGenfEXT;
    PFNGLMULTITEXGENFVEXTPROC epoxy_glMultiTexGenfvEXT;
    PFNGLMULTITEXGENIEXTPROC epoxy_glMultiTexGeniEXT;
    PFNGLMULTITEXGENIVEXTPROC epoxy_glMultiTexGenivEXT;
    PFNGLMULTITEXIMAGE1DEXTPROC epoxy_glMultiTexImage1DEXT;
    PFNGLMULTITEXIMAGE2DEXTPROC epoxy_glMultiTexImage2DEXT;
    PFNGLMULTITEXIMAGE3DEXTPROC epoxy_glMultiTexImage3DEXT;
    PFNGLMULTITEXPARAMETERIIVEXTPROC epoxy_glMultiTexParameterIivEXT;
    PFNGLMULTITEXPARAMETERIUIVEXTPROC epoxy_glMultiTexParameterIuivEXT;
    PFNGLMULTITEXPARAMETERFEXTPROC epoxy_glMultiTexParameterfEXT;
    PFNGLMULTITEXPARAMETERFVEXTPROC epoxy_glMultiTexParameterfvEXT;
    PFNGLMULTITEXPARAMETERIEXTPROC epoxy_glMultiTexParameteriEXT;
    PFNGLMULTITEXPARAMETERIVEXTPROC epoxy_glMultiTexParameterivEXT;
    PFNGLMULTITEXRENDERBUFFEREXTPROC epoxy_glMultiTexRenderbufferEXT;
    PFNGLMULTITEXSUBIMAGE1DEXTPROC epoxy_glMultiTexSubImage1DEXT;
    PFNGLMULTITEXSUBIMAGE2DEXTPROC epoxy_glMultiTexSubImage2DEXT;
    PFNGLMULTITEXSUBIMAGE3DEXTPROC epoxy_glMultiTexSubImage3DEXT;
    PFNGLNAMEDBUFFERDATAPROC epoxy_glNamedBufferData;
    PFNGLNAMEDBUFFERDATAEXTPROC epoxy_glNamedBufferDataEXT;
    PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC epoxy_glNamedBufferPageCommitmentARB;
    PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC epoxy_glNamedBufferPageCommitmentEXT;
    PFNGLNAMEDBUFFERSTORAGEPROC epoxy_glNamedBufferStorage;
    PFNGLNAMEDBUFFERSTORAGEEXTPROC epoxy_glNamedBufferStorageEXT;
    PFNGLNAMEDBUFFERSUBDATAPROC epoxy_glNamedBufferSubData;
    PFNGLNAMEDBUFFERSUBDATAEXTPROC epoxy_glNamedBufferSubDataEXT;
    PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC epoxy_glNamedCopyBufferSubDataEXT;
    PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC epoxy_glNamedFramebufferDrawBuffer;
    PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC epoxy_glNamedFramebufferDrawBuffers;
    PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC epoxy_glNamedFramebufferParameteri;
    PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC epoxy_glNamedFramebufferParameteriEXT;
    PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC epoxy_glNamedFramebufferReadBuffer;
    PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC epoxy_glNamedFramebufferRenderbuffer;
    PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC epoxy_glNamedFramebufferRenderbufferEXT;
    PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC epoxy_glNamedFramebufferSampleLocationsfvNV;
    PFNGLNAMEDFRAMEBUFFERTEXTUREPROC epoxy_glNamedFramebufferTexture;
    PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC epoxy_glNamedFramebufferTexture1DEXT;
    PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC epoxy_glNamedFramebufferTexture2DEXT;
    PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC epoxy_glNamedFramebufferTexture3DEXT;
    PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC epoxy_glNamedFramebufferTextureEXT;
    PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC epoxy_glNamedFramebufferTextureFaceEXT;
    PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC epoxy_glNamedFramebufferTextureLayer;
    PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC epoxy_glNamedFramebufferTextureLayerEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC epoxy_glNamedProgramLocalParameter4dEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC epoxy_glNamedProgramLocalParameter4dvEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC epoxy_glNamedProgramLocalParameter4fEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC epoxy_glNamedProgramLocalParameter4fvEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC epoxy_glNamedProgramLocalParameterI4iEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC epoxy_glNamedProgramLocalParameterI4ivEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC epoxy_glNamedProgramLocalParameterI4uiEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC epoxy_glNamedProgramLocalParameterI4uivEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC epoxy_glNamedProgramLocalParameters4fvEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC epoxy_glNamedProgramLocalParametersI4ivEXT;
    PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC epoxy_glNamedProgramLocalParametersI4uivEXT;
    PFNGLNAMEDPROGRAMSTRINGEXTPROC epoxy_glNamedProgramStringEXT;
    PFNGLNAMEDRENDERBUFFERSTORAGEPROC epoxy_glNamedRenderbufferStorage;
    PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC epoxy_glNamedRenderbufferStorageEXT;
    PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC epoxy_glNamedRenderbufferStorageMultisample;
    PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC epoxy_glNamedRenderbufferStorageMultisampleCoverageEXT;
    PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC epoxy_glNamedRenderbufferStorageMultisampleEXT;
    PFNGLNAMEDSTRINGARBPROC epoxy_glNamedStringARB;
    PFNGLNEWLISTPROC epoxy_glNewList;
    PFNGLNEWOBJECTBUFFERATIPROC epoxy_glNewObjectBufferATI;
    PFNGLNORMAL3BPROC epoxy_glNormal3b;
    PFNGLNORMAL3BVPROC epoxy_glNormal3bv;
    PFNGLNORMAL3DPROC epoxy_glNormal3d;
    PFNGLNORMAL3DVPROC epoxy_glNormal3dv;
    PFNGLNORMAL3FPROC epoxy_glNormal3f;
    PFNGLNORMAL3FVERTEX3FSUNPROC epoxy_glNormal3fVertex3fSUN;
    PFNGLNORMAL3FVERTEX3FVSUNPROC epoxy_glNormal3fVertex3fvSUN;
    PFNGLNORMAL3FVPROC epoxy_glNormal3fv;
    PFNGLNORMAL3HNVPROC epoxy_glNormal3hNV;
    PFNGLNORMAL3HVNVPROC epoxy_glNormal3hvNV;
    PFNGLNORMAL3IPROC epoxy_glNormal3i;
    PFNGLNORMAL3IVPROC epoxy_glNormal3iv;
    PFNGLNORMAL3SPROC epoxy_glNormal3s;
    PFNGLNORMAL3SVPROC epoxy_glNormal3sv;
    PFNGLNORMAL3XPROC epoxy_glNormal3x;
    PFNGLNORMAL3XOESPROC epoxy_glNormal3xOES;
    PFNGLNORMAL3XVOESPROC epoxy_glNormal3xvOES;
    PFNGLNORMALFORMATNVPROC epoxy_glNormalFormatNV;
    PFNGLNORMALP3UIPROC epoxy_glNormalP3ui;
    PFNGLNORMALP3UIVPROC epoxy_glNormalP3uiv;
    PFNGLNORMALPOINTERPROC epoxy_glNormalPointer;
    PFNGLNORMALPOINTEREXTPROC epoxy_glNormalPointerEXT;
    PFNGLNORMALPOINTERLISTIBMPROC epoxy_glNormalPointerListIBM;
    PFNGLNORMALPOINTERVINTELPROC epoxy_glNormalPointervINTEL;
    PFNGLNORMALSTREAM3BATIPROC epoxy_glNormalStream3bATI;
    PFNGLNORMALSTREAM3BVATIPROC epoxy_glNormalStream3bvATI;
    PFNGLNORMALSTREAM3DATIPROC epoxy_glNormalStream3dATI;
    PFNGLNORMALSTREAM3DVATIPROC epoxy_glNormalStream3dvATI;
    PFNGLNORMALSTREAM3FATIPROC epoxy_glNormalStream3fATI;
    PFNGLNORMALSTREAM3FVATIPROC epoxy_glNormalStream3fvATI;
    PFNGLNORMALSTREAM3IATIPROC epoxy_glNormalStream3iATI;
    PFNGLNORMALSTREAM3IVATIPROC epoxy_glNormalStream3ivATI;
    PFNGLNORMALSTREAM3SATIPROC epoxy_glNormalStream3sATI;
    PFNGLNORMALSTREAM3SVATIPROC epoxy_glNormalStream3svATI;
    PFNGLOBJECTLABELPROC epoxy_glObjectLabel;
    PFNGLOBJECTLABELKHRPROC epoxy_glObjectLabelKHR;
    PFNGLOBJECTPTRLABELPROC epoxy_glObjectPtrLabel;
    PFNGLOBJECTPTRLABELKHRPROC epoxy_glObjectPtrLabelKHR;
    PFNGLOBJECTPURGEABLEAPPLEPROC epoxy_glObjectPurgeableAPPLE;
    PFNGLOBJECTUNPURGEABLEAPPLEPROC epoxy_glObjectUnpurgeableAPPLE;
    PFNGLORTHOPROC epoxy_glOrtho;
    PFNGLORTHOFPROC epoxy_glOrthof;
    PFNGLORTHOFOESPROC epoxy_glOrthofOES;
    PFNGLORTHOXPROC epoxy_glOrthox;
    PFNGLORTHOXOESPROC epoxy_glOrthoxOES;
    PFNGLPNTRIANGLESFATIPROC epoxy_glPNTrianglesfATI;
    PFNGLPNTRIANGLESIATIPROC epoxy_glPNTrianglesiATI;
    PFNGLPASSTEXCOORDATIPROC epoxy_glPassTexCoordATI;
    PFNGLPASSTHROUGHPROC epoxy_glPassThrough;
    PFNGLPASSTHROUGHXOESPROC epoxy_glPassThroughxOES;
    PFNGLPATCHPARAMETERFVPROC epoxy_glPatchParameterfv;
    PFNGLPATCHPARAMETERIPROC epoxy_glPatchParameteri;
    PFNGLPATCHPARAMETERIEXTPROC epoxy_glPatchParameteriEXT;
    PFNGLPATCHPARAMETERIOESPROC epoxy_glPatchParameteriOES;
    PFNGLPATHCOLORGENNVPROC epoxy_glPathColorGenNV;
    PFNGLPATHCOMMANDSNVPROC epoxy_glPathCommandsNV;
    PFNGLPATHCOORDSNVPROC epoxy_glPathCoordsNV;
    PFNGLPATHCOVERDEPTHFUNCNVPROC epoxy_glPathCoverDepthFuncNV;
    PFNGLPATHDASHARRAYNVPROC epoxy_glPathDashArrayNV;
    PFNGLPATHFOGGENNVPROC epoxy_glPathFogGenNV;
    PFNGLPATHGLYPHINDEXARRAYNVPROC epoxy_glPathGlyphIndexArrayNV;
    PFNGLPATHGLYPHINDEXRANGENVPROC epoxy_glPathGlyphIndexRangeNV;
    PFNGLPATHGLYPHRANGENVPROC epoxy_glPathGlyphRangeNV;
    PFNGLPATHGLYPHSNVPROC epoxy_glPathGlyphsNV;
    PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC epoxy_glPathMemoryGlyphIndexArrayNV;
    PFNGLPATHPARAMETERFNVPROC epoxy_glPathParameterfNV;
    PFNGLPATHPARAMETERFVNVPROC epoxy_glPathParameterfvNV;
    PFNGLPATHPARAMETERINVPROC epoxy_glPathParameteriNV;
    PFNGLPATHPARAMETERIVNVPROC epoxy_glPathParameterivNV;
    PFNGLPATHSTENCILDEPTHOFFSETNVPROC epoxy_glPathStencilDepthOffsetNV;
    PFNGLPATHSTENCILFUNCNVPROC epoxy_glPathStencilFuncNV;
    PFNGLPATHSTRINGNVPROC epoxy_glPathStringNV;
    PFNGLPATHSUBCOMMANDSNVPROC epoxy_glPathSubCommandsNV;
    PFNGLPATHSUBCOORDSNVPROC epoxy_glPathSubCoordsNV;
    PFNGLPATHTEXGENNVPROC epoxy_glPathTexGenNV;
    PFNGLPAUSETRANSFORMFEEDBACKPROC epoxy_glPauseTransformFeedback;
    PFNGLPAUSETRANSFORMFEEDBACKNVPROC epoxy_glPauseTransformFeedbackNV;
    PFNGLPIXELDATARANGENVPROC epoxy_glPixelDataRangeNV;
    PFNGLPIXELMAPFVPROC epoxy_glPixelMapfv;
    PFNGLPIXELMAPUIVPROC epoxy_glPixelMapuiv;
    PFNGLPIXELMAPUSVPROC epoxy_glPixelMapusv;
    PFNGLPIXELMAPXPROC epoxy_glPixelMapx;
    PFNGLPIXELSTOREFPROC epoxy_glPixelStoref;
    PFNGLPIXELSTOREIPROC epoxy_glPixelStorei;
    PFNGLPIXELSTOREXPROC epoxy_glPixelStorex;
    PFNGLPIXELTEXGENPARAMETERFSGISPROC epoxy_glPixelTexGenParameterfSGIS;
    PFNGLPIXELTEXGENPARAMETERFVSGISPROC epoxy_glPixelTexGenParameterfvSGIS;
    PFNGLPIXELTEXGENPARAMETERISGISPROC epoxy_glPixelTexGenParameteriSGIS;
    PFNGLPIXELTEXGENPARAMETERIVSGISPROC epoxy_glPixelTexGenParameterivSGIS;
    PFNGLPIXELTEXGENSGIXPROC epoxy_glPixelTexGenSGIX;
    PFNGLPIXELTRANSFERFPROC epoxy_glPixelTransferf;
    PFNGLPIXELTRANSFERIPROC epoxy_glPixelTransferi;
    PFNGLPIXELTRANSFERXOESPROC epoxy_glPixelTransferxOES;
    PFNGLPIXELTRANSFORMPARAMETERFEXTPROC epoxy_glPixelTransformParameterfEXT;
    PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC epoxy_glPixelTransformParameterfvEXT;
    PFNGLPIXELTRANSFORMPARAMETERIEXTPROC epoxy_glPixelTransformParameteriEXT;
    PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC epoxy_glPixelTransformParameterivEXT;
    PFNGLPIXELZOOMPROC epoxy_glPixelZoom;
    PFNGLPIXELZOOMXOESPROC epoxy_glPixelZoomxOES;
    PFNGLPOINTALONGPATHNVPROC epoxy_glPointAlongPathNV;
    PFNGLPOINTPARAMETERFPROC epoxy_glPointParameterf;
    PFNGLPOINTPARAMETERFARBPROC epoxy_glPointParameterfARB;
    PFNGLPOINTPARAMETERFEXTPROC epoxy_glPointParameterfEXT;
    PFNGLPOINTPARAMETERFSGISPROC epoxy_glPointParameterfSGIS;
    PFNGLPOINTPARAMETERFVPROC epoxy_glPointParameterfv;
    PFNGLPOINTPARAMETERFVARBPROC epoxy_glPointParameterfvARB;
    PFNGLPOINTPARAMETERFVEXTPROC epoxy_glPointParameterfvEXT;
    PFNGLPOINTPARAMETERFVSGISPROC epoxy_glPointParameterfvSGIS;
    PFNGLPOINTPARAMETERIPROC epoxy_glPointParameteri;
    PFNGLPOINTPARAMETERINVPROC epoxy_glPointParameteriNV;
    PFNGLPOINTPARAMETERIVPROC epoxy_glPointParameteriv;
    PFNGLPOINTPARAMETERIVNVPROC epoxy_glPointParameterivNV;
    PFNGLPOINTPARAMETERXPROC epoxy_glPointParameterx;
    PFNGLPOINTPARAMETERXOESPROC epoxy_glPointParameterxOES;
    PFNGLPOINTPARAMETERXVPROC epoxy_glPointParameterxv;
    PFNGLPOINTPARAMETERXVOESPROC epoxy_glPointParameterxvOES;
    PFNGLPOINTSIZEPROC epoxy_glPointSize;
    PFNGLPOINTSIZEPOINTEROESPROC epoxy_glPointSizePointerOES;
    PFNGLPOINTSIZEXPROC epoxy_glPointSizex;
    PFNGLPOINTSIZEXOESPROC epoxy_glPointSizexOES;
    PFNGLPOLLASYNCSGIXPROC epoxy_glPollAsyncSGIX;
    PFNGLPOLLINSTRUMENTSSGIXPROC epoxy_glPollInstrumentsSGIX;
    PFNGLPOLYGONMODEPROC epoxy_glPolygonMode;
    PFNGLPOLYGONMODENVPROC epoxy_glPolygonModeNV;
    PFNGLPOLYGONOFFSETPROC epoxy_glPolygonOffset;
    PFNGLPOLYGONOFFSETCLAMPEXTPROC epoxy_glPolygonOffsetClampEXT;
    PFNGLPOLYGONOFFSETEXTPROC epoxy_glPolygonOffsetEXT;
    PFNGLPOLYGONOFFSETXPROC epoxy_glPolygonOffsetx;
    PFNGLPOLYGONOFFSETXOESPROC epoxy_glPolygonOffsetxOES;
    PFNGLPOLYGONSTIPPLEPROC epoxy_glPolygonStipple;
    PFNGLPOPATTRIBPROC epoxy_glPopAttrib;
    PFNGLPOPCLIENTATTRIBPROC epoxy_glPopClientAttrib;
    PFNGLPOPDEBUGGROUPPROC epoxy_glPopDebugGroup;
    PFNGLPOPDEBUGGROUPKHRPROC epoxy_glPopDebugGroupKHR;
    PFNGLPOPGROUPMARKEREXTPROC epoxy_glPopGroupMarkerEXT;
    PFNGLPOPMATRIXPROC epoxy_glPopMatrix;
    PFNGLPOPNAMEPROC epoxy_glPopName;
    PFNGLPRESENTFRAMEDUALFILLNVPROC epoxy_glPresentFrameDualFillNV;
    PFNGLPRESENTFRAMEKEYEDNVPROC epoxy_glPresentFrameKeyedNV;
    PFNGLPRIMITIVEBOUNDINGBOXEXTPROC epoxy_glPrimitiveBoundingBoxEXT;
    PFNGLPRIMITIVEBOUNDINGBOXOESPROC epoxy_glPrimitiveBoundingBoxOES;
    PFNGLPRIMITIVERESTARTINDEXPROC epoxy_glPrimitiveRestartIndex;
    PFNGLPRIMITIVERESTARTINDEXNVPROC epoxy_glPrimitiveRestartIndexNV;
    PFNGLPRIMITIVERESTARTNVPROC epoxy_glPrimitiveRestartNV;
    PFNGLPRIORITIZETEXTURESPROC epoxy_glPrioritizeTextures;
    PFNGLPRIORITIZETEXTURESEXTPROC epoxy_glPrioritizeTexturesEXT;
    PFNGLPRIORITIZETEXTURESXOESPROC epoxy_glPrioritizeTexturesxOES;
    PFNGLPROGRAMBINARYPROC epoxy_glProgramBinary;
    PFNGLPROGRAMBINARYOESPROC epoxy_glProgramBinaryOES;
    PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC epoxy_glProgramBufferParametersIivNV;
    PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC epoxy_glProgramBufferParametersIuivNV;
    PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC epoxy_glProgramBufferParametersfvNV;
    PFNGLPROGRAMENVPARAMETER4DARBPROC epoxy_glProgramEnvParameter4dARB;
    PFNGLPROGRAMENVPARAMETER4DVARBPROC epoxy_glProgramEnvParameter4dvARB;
    PFNGLPROGRAMENVPARAMETER4FARBPROC epoxy_glProgramEnvParameter4fARB;
    PFNGLPROGRAMENVPARAMETER4FVARBPROC epoxy_glProgramEnvParameter4fvARB;
    PFNGLPROGRAMENVPARAMETERI4INVPROC epoxy_glProgramEnvParameterI4iNV;
    PFNGLPROGRAMENVPARAMETERI4IVNVPROC epoxy_glProgramEnvParameterI4ivNV;
    PFNGLPROGRAMENVPARAMETERI4UINVPROC epoxy_glProgramEnvParameterI4uiNV;
    PFNGLPROGRAMENVPARAMETERI4UIVNVPROC epoxy_glProgramEnvParameterI4uivNV;
    PFNGLPROGRAMENVPARAMETERS4FVEXTPROC epoxy_glProgramEnvParameters4fvEXT;
    PFNGLPROGRAMENVPARAMETERSI4IVNVPROC epoxy_glProgramEnvParametersI4ivNV;
    PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC epoxy_glProgramEnvParametersI4uivNV;
    PFNGLPROGRAMLOCALPARAMETER4DARBPROC epoxy_glProgramLocalParameter4dARB;
    PFNGLPROGRAMLOCALPARAMETER4DVARBPROC epoxy_glProgramLocalParameter4dvARB;
    PFNGLPROGRAMLOCALPARAMETER4FARBPROC epoxy_glProgramLocalParameter4fARB;
    PFNGLPROGRAMLOCALPARAMETER4FVARBPROC epoxy_glProgramLocalParameter4fvARB;
    PFNGLPROGRAMLOCALPARAMETERI4INVPROC epoxy_glProgramLocalParameterI4iNV;
    PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC epoxy_glProgramLocalParameterI4ivNV;
    PFNGLPROGRAMLOCALPARAMETERI4UINVPROC epoxy_glProgramLocalParameterI4uiNV;
    PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC epoxy_glProgramLocalParameterI4uivNV;
    PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC epoxy_glProgramLocalParameters4fvEXT;
    PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC epoxy_glProgramLocalParametersI4ivNV;
    PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC epoxy_glProgramLocalParametersI4uivNV;
    PFNGLPROGRAMNAMEDPARAMETER4DNVPROC epoxy_glProgramNamedParameter4dNV;
    PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC epoxy_glProgramNamedParameter4dvNV;
    PFNGLPROGRAMNAMEDPARAMETER4FNVPROC epoxy_glProgramNamedParameter4fNV;
    PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC epoxy_glProgramNamedParameter4fvNV;
    PFNGLPROGRAMPARAMETER4DNVPROC epoxy_glProgramParameter4dNV;
    PFNGLPROGRAMPARAMETER4DVNVPROC epoxy_glProgramParameter4dvNV;
    PFNGLPROGRAMPARAMETER4FNVPROC epoxy_glProgramParameter4fNV;
    PFNGLPROGRAMPARAMETER4FVNVPROC epoxy_glProgramParameter4fvNV;
    PFNGLPROGRAMPARAMETERIPROC epoxy_glProgramParameteri;
    PFNGLPROGRAMPARAMETERIARBPROC epoxy_glProgramParameteriARB;
    PFNGLPROGRAMPARAMETERIEXTPROC epoxy_glProgramParameteriEXT;
    PFNGLPROGRAMPARAMETERS4DVNVPROC epoxy_glProgramParameters4dvNV;
    PFNGLPROGRAMPARAMETERS4FVNVPROC epoxy_glProgramParameters4fvNV;
    PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC epoxy_glProgramPathFragmentInputGenNV;
    PFNGLPROGRAMSTRINGARBPROC epoxy_glProgramStringARB;
    PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC epoxy_glProgramSubroutineParametersuivNV;
    PFNGLPROGRAMUNIFORM1DPROC epoxy_glProgramUniform1d;
    PFNGLPROGRAMUNIFORM1DEXTPROC epoxy_glProgramUniform1dEXT;
    PFNGLPROGRAMUNIFORM1DVPROC epoxy_glProgramUniform1dv;
    PFNGLPROGRAMUNIFORM1DVEXTPROC epoxy_glProgramUniform1dvEXT;
    PFNGLPROGRAMUNIFORM1FPROC epoxy_glProgramUniform1f;
    PFNGLPROGRAMUNIFORM1FEXTPROC epoxy_glProgramUniform1fEXT;
    PFNGLPROGRAMUNIFORM1FVPROC epoxy_glProgramUniform1fv;
    PFNGLPROGRAMUNIFORM1FVEXTPROC epoxy_glProgramUniform1fvEXT;
    PFNGLPROGRAMUNIFORM1IPROC epoxy_glProgramUniform1i;
    PFNGLPROGRAMUNIFORM1I64NVPROC epoxy_glProgramUniform1i64NV;
    PFNGLPROGRAMUNIFORM1I64VNVPROC epoxy_glProgramUniform1i64vNV;
    PFNGLPROGRAMUNIFORM1IEXTPROC epoxy_glProgramUniform1iEXT;
    PFNGLPROGRAMUNIFORM1IVPROC epoxy_glProgramUniform1iv;
    PFNGLPROGRAMUNIFORM1IVEXTPROC epoxy_glProgramUniform1ivEXT;
    PFNGLPROGRAMUNIFORM1UIPROC epoxy_glProgramUniform1ui;
    PFNGLPROGRAMUNIFORM1UI64NVPROC epoxy_glProgramUniform1ui64NV;
    PFNGLPROGRAMUNIFORM1UI64VNVPROC epoxy_glProgramUniform1ui64vNV;
    PFNGLPROGRAMUNIFORM1UIEXTPROC epoxy_glProgramUniform1uiEXT;
    PFNGLPROGRAMUNIFORM1UIVPROC epoxy_glProgramUniform1uiv;
    PFNGLPROGRAMUNIFORM1UIVEXTPROC epoxy_glProgramUniform1uivEXT;
    PFNGLPROGRAMUNIFORM2DPROC epoxy_glProgramUniform2d;
    PFNGLPROGRAMUNIFORM2DEXTPROC epoxy_glProgramUniform2dEXT;
    PFNGLPROGRAMUNIFORM2DVPROC epoxy_glProgramUniform2dv;
    PFNGLPROGRAMUNIFORM2DVEXTPROC epoxy_glProgramUniform2dvEXT;
    PFNGLPROGRAMUNIFORM2FPROC epoxy_glProgramUniform2f;
    PFNGLPROGRAMUNIFORM2FEXTPROC epoxy_glProgramUniform2fEXT;
    PFNGLPROGRAMUNIFORM2FVPROC epoxy_glProgramUniform2fv;
    PFNGLPROGRAMUNIFORM2FVEXTPROC epoxy_glProgramUniform2fvEXT;
    PFNGLPROGRAMUNIFORM2IPROC epoxy_glProgramUniform2i;
    PFNGLPROGRAMUNIFORM2I64NVPROC epoxy_glProgramUniform2i64NV;
    PFNGLPROGRAMUNIFORM2I64VNVPROC epoxy_glProgramUniform2i64vNV;
    PFNGLPROGRAMUNIFORM2IEXTPROC epoxy_glProgramUniform2iEXT;
    PFNGLPROGRAMUNIFORM2IVPROC epoxy_glProgramUniform2iv;
    PFNGLPROGRAMUNIFORM2IVEXTPROC epoxy_glProgramUniform2ivEXT;
    PFNGLPROGRAMUNIFORM2UIPROC epoxy_glProgramUniform2ui;
    PFNGLPROGRAMUNIFORM2UI64NVPROC epoxy_glProgramUniform2ui64NV;
    PFNGLPROGRAMUNIFORM2UI64VNVPROC epoxy_glProgramUniform2ui64vNV;
    PFNGLPROGRAMUNIFORM2UIEXTPROC epoxy_glProgramUniform2uiEXT;
    PFNGLPROGRAMUNIFORM2UIVPROC epoxy_glProgramUniform2uiv;
    PFNGLPROGRAMUNIFORM2UIVEXTPROC epoxy_glProgramUniform2uivEXT;
    PFNGLPROGRAMUNIFORM3DPROC epoxy_glProgramUniform3d;
    PFNGLPROGRAMUNIFORM3DEXTPROC epoxy_glProgramUniform3dEXT;
    PFNGLPROGRAMUNIFORM3DVPROC epoxy_glProgramUniform3dv;
    PFNGLPROGRAMUNIFORM3DVEXTPROC epoxy_glProgramUniform3dvEXT;
    PFNGLPROGRAMUNIFORM3FPROC epoxy_glProgramUniform3f;
    PFNGLPROGRAMUNIFORM3FEXTPROC epoxy_glProgramUniform3fEXT;
    PFNGLPROGRAMUNIFORM3FVPROC epoxy_glProgramUniform3fv;
    PFNGLPROGRAMUNIFORM3FVEXTPROC epoxy_glProgramUniform3fvEXT;
    PFNGLPROGRAMUNIFORM3IPROC epoxy_glProgramUniform3i;
    PFNGLPROGRAMUNIFORM3I64NVPROC epoxy_glProgramUniform3i64NV;
    PFNGLPROGRAMUNIFORM3I64VNVPROC epoxy_glProgramUniform3i64vNV;
    PFNGLPROGRAMUNIFORM3IEXTPROC epoxy_glProgramUniform3iEXT;
    PFNGLPROGRAMUNIFORM3IVPROC epoxy_glProgramUniform3iv;
    PFNGLPROGRAMUNIFORM3IVEXTPROC epoxy_glProgramUniform3ivEXT;
    PFNGLPROGRAMUNIFORM3UIPROC epoxy_glProgramUniform3ui;
    PFNGLPROGRAMUNIFORM3UI64NVPROC epoxy_glProgramUniform3ui64NV;
    PFNGLPROGRAMUNIFORM3UI64VNVPROC epoxy_glProgramUniform3ui64vNV;
    PFNGLPROGRAMUNIFORM3UIEXTPROC epoxy_glProgramUniform3uiEXT;
    PFNGLPROGRAMUNIFORM3UIVPROC epoxy_glProgramUniform3uiv;
    PFNGLPROGRAMUNIFORM3UIVEXTPROC epoxy_glProgramUniform3uivEXT;
    PFNGLPROGRAMUNIFORM4DPROC epoxy_glProgramUniform4d;
    PFNGLPROGRAMUNIFORM4DEXTPROC epoxy_glProgramUniform4dEXT;
    PFNGLPROGRAMUNIFORM4DVPROC epoxy_glProgramUniform4dv;
    PFNGLPROGRAMUNIFORM4DVEXTPROC epoxy_glProgramUniform4dvEXT;
    PFNGLPROGRAMUNIFORM4FPROC epoxy_glProgramUniform4f;
    PFNGLPROGRAMUNIFORM4FEXTPROC epoxy_glProgramUniform4fEXT;
    PFNGLPROGRAMUNIFORM4FVPROC epoxy_glProgramUniform4fv;
    PFNGLPROGRAMUNIFORM4FVEXTPROC epoxy_glProgramUniform4fvEXT;
    PFNGLPROGRAMUNIFORM4IPROC epoxy_glProgramUniform4i;
    PFNGLPROGRAMUNIFORM4I64NVPROC epoxy_glProgramUniform4i64NV;
    PFNGLPROGRAMUNIFORM4I64VNVPROC epoxy_glProgramUniform4i64vNV;
    PFNGLPROGRAMUNIFORM4IEXTPROC epoxy_glProgramUniform4iEXT;
    PFNGLPROGRAMUNIFORM4IVPROC epoxy_glProgramUniform4iv;
    PFNGLPROGRAMUNIFORM4IVEXTPROC epoxy_glProgramUniform4ivEXT;
    PFNGLPROGRAMUNIFORM4UIPROC epoxy_glProgramUniform4ui;
    PFNGLPROGRAMUNIFORM4UI64NVPROC epoxy_glProgramUniform4ui64NV;
    PFNGLPROGRAMUNIFORM4UI64VNVPROC epoxy_glProgramUniform4ui64vNV;
    PFNGLPROGRAMUNIFORM4UIEXTPROC epoxy_glProgramUniform4uiEXT;
    PFNGLPROGRAMUNIFORM4UIVPROC epoxy_glProgramUniform4uiv;
    PFNGLPROGRAMUNIFORM4UIVEXTPROC epoxy_glProgramUniform4uivEXT;
    PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC epoxy_glProgramUniformHandleui64ARB;
    PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC epoxy_glProgramUniformHandleui64NV;
    PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC epoxy_glProgramUniformHandleui64vARB;
    PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC epoxy_glProgramUniformHandleui64vNV;
    PFNGLPROGRAMUNIFORMMATRIX2DVPROC epoxy_glProgramUniformMatrix2dv;
    PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC epoxy_glProgramUniformMatrix2dvEXT;
    PFNGLPROGRAMUNIFORMMATRIX2FVPROC epoxy_glProgramUniformMatrix2fv;
    PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC epoxy_glProgramUniformMatrix2fvEXT;
    PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC epoxy_glProgramUniformMatrix2x3dv;
    PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC epoxy_glProgramUniformMatrix2x3dvEXT;
    PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC epoxy_glProgramUniformMatrix2x3fv;
    PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC epoxy_glProgramUniformMatrix2x3fvEXT;
    PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC epoxy_glProgramUniformMatrix2x4dv;
    PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC epoxy_glProgramUniformMatrix2x4dvEXT;
    PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC epoxy_glProgramUniformMatrix2x4fv;
    PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC epoxy_glProgramUniformMatrix2x4fvEXT;
    PFNGLPROGRAMUNIFORMMATRIX3DVPROC epoxy_glProgramUniformMatrix3dv;
    PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC epoxy_glProgramUniformMatrix3dvEXT;
    PFNGLPROGRAMUNIFORMMATRIX3FVPROC epoxy_glProgramUniformMatrix3fv;
    PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC epoxy_glProgramUniformMatrix3fvEXT;
    PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC epoxy_glProgramUniformMatrix3x2dv;
    PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC epoxy_glProgramUniformMatrix3x2dvEXT;
    PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC epoxy_glProgramUniformMatrix3x2fv;
    PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC epoxy_glProgramUniformMatrix3x2fvEXT;
    PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC epoxy_glProgramUniformMatrix3x4dv;
    PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC epoxy_glProgramUniformMatrix3x4dvEXT;
    PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC epoxy_glProgramUniformMatrix3x4fv;
    PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC epoxy_glProgramUniformMatrix3x4fvEXT;
    PFNGLPROGRAMUNIFORMMATRIX4DVPROC epoxy_glProgramUniformMatrix4dv;
    PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC epoxy_glProgramUniformMatrix4dvEXT;
    PFNGLPROGRAMUNIFORMMATRIX4FVPROC epoxy_glProgramUniformMatrix4fv;
    PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC epoxy_glProgramUniformMatrix4fvEXT;
    PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC epoxy_glProgramUniformMatrix4x2dv;
    PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC epoxy_glProgramUniformMatrix4x2dvEXT;
    PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC epoxy_glProgramUniformMatrix4x2fv;
    PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC epoxy_glProgramUniformMatrix4x2fvEXT;
    PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC epoxy_glProgramUniformMatrix4x3dv;
    PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC epoxy_glProgramUniformMatrix4x3dvEXT;
    PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC epoxy_glProgramUniformMatrix4x3fv;
    PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC epoxy_glProgramUniformMatrix4x3fvEXT;
    PFNGLPROGRAMUNIFORMUI64NVPROC epoxy_glProgramUniformui64NV;
    PFNGLPROGRAMUNIFORMUI64VNVPROC epoxy_glProgramUniformui64vNV;
    PFNGLPROGRAMVERTEXLIMITNVPROC epoxy_glProgramVertexLimitNV;
    PFNGLPROVOKINGVERTEXPROC epoxy_glProvokingVertex;
    PFNGLPROVOKINGVERTEXEXTPROC epoxy_glProvokingVertexEXT;
    PFNGLPUSHATTRIBPROC epoxy_glPushAttrib;
    PFNGLPUSHCLIENTATTRIBPROC epoxy_glPushClientAttrib;
    PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC epoxy_glPushClientAttribDefaultEXT;
    PFNGLPUSHDEBUGGROUPPROC epoxy_glPushDebugGroup;
    PFNGLPUSHDEBUGGROUPKHRPROC epoxy_glPushDebugGroupKHR;
    PFNGLPUSHGROUPMARKEREXTPROC epoxy_glPushGroupMarkerEXT;
    PFNGLPUSHMATRIXPROC epoxy_glPushMatrix;
    PFNGLPUSHNAMEPROC epoxy_glPushName;
    PFNGLQUERYCOUNTERPROC epoxy_glQueryCounter;
    PFNGLQUERYCOUNTEREXTPROC epoxy_glQueryCounterEXT;
    PFNGLQUERYMATRIXXOESPROC epoxy_glQueryMatrixxOES;
    PFNGLQUERYOBJECTPARAMETERUIAMDPROC epoxy_glQueryObjectParameteruiAMD;
    PFNGLRASTERPOS2DPROC epoxy_glRasterPos2d;
    PFNGLRASTERPOS2DVPROC epoxy_glRasterPos2dv;
    PFNGLRASTERPOS2FPROC epoxy_glRasterPos2f;
    PFNGLRASTERPOS2FVPROC epoxy_glRasterPos2fv;
    PFNGLRASTERPOS2IPROC epoxy_glRasterPos2i;
    PFNGLRASTERPOS2IVPROC epoxy_glRasterPos2iv;
    PFNGLRASTERPOS2SPROC epoxy_glRasterPos2s;
    PFNGLRASTERPOS2SVPROC epoxy_glRasterPos2sv;
    PFNGLRASTERPOS2XOESPROC epoxy_glRasterPos2xOES;
    PFNGLRASTERPOS2XVOESPROC epoxy_glRasterPos2xvOES;
    PFNGLRASTERPOS3DPROC epoxy_glRasterPos3d;
    PFNGLRASTERPOS3DVPROC epoxy_glRasterPos3dv;
    PFNGLRASTERPOS3FPROC epoxy_glRasterPos3f;
    PFNGLRASTERPOS3FVPROC epoxy_glRasterPos3fv;
    PFNGLRASTERPOS3IPROC epoxy_glRasterPos3i;
    PFNGLRASTERPOS3IVPROC epoxy_glRasterPos3iv;
    PFNGLRASTERPOS3SPROC epoxy_glRasterPos3s;
    PFNGLRASTERPOS3SVPROC epoxy_glRasterPos3sv;
    PFNGLRASTERPOS3XOESPROC epoxy_glRasterPos3xOES;
    PFNGLRASTERPOS3XVOESPROC epoxy_glRasterPos3xvOES;
    PFNGLRASTERPOS4DPROC epoxy_glRasterPos4d;
    PFNGLRASTERPOS4DVPROC epoxy_glRasterPos4dv;
    PFNGLRASTERPOS4FPROC epoxy_glRasterPos4f;
    PFNGLRASTERPOS4FVPROC epoxy_glRasterPos4fv;
    PFNGLRASTERPOS4IPROC epoxy_glRasterPos4i;
    PFNGLRASTERPOS4IVPROC epoxy_glRasterPos4iv;
    PFNGLRASTERPOS4SPROC epoxy_glRasterPos4s;
    PFNGLRASTERPOS4SVPROC epoxy_glRasterPos4sv;
    PFNGLRASTERPOS4XOESPROC epoxy_glRasterPos4xOES;
    PFNGLRASTERPOS4XVOESPROC epoxy_glRasterPos4xvOES;
    PFNGLRASTERSAMPLESEXTPROC epoxy_glRasterSamplesEXT;
    PFNGLREADBUFFERPROC epoxy_glReadBuffer;
    PFNGLREADBUFFERINDEXEDEXTPROC epoxy_glReadBufferIndexedEXT;
    PFNGLREADBUFFERNVPROC epoxy_glReadBufferNV;
    PFNGLREADINSTRUMENTSSGIXPROC epoxy_glReadInstrumentsSGIX;
    PFNGLREADPIXELSPROC epoxy_glReadPixels;
    PFNGLREADNPIXELSPROC epoxy_glReadnPixels;
    PFNGLREADNPIXELSARBPROC epoxy_glReadnPixelsARB;
    PFNGLREADNPIXELSEXTPROC epoxy_glReadnPixelsEXT;
    PFNGLREADNPIXELSKHRPROC epoxy_glReadnPixelsKHR;
    PFNGLRECTDPROC epoxy_glRectd;
    PFNGLRECTDVPROC epoxy_glRectdv;
    PFNGLRECTFPROC epoxy_glRectf;
    PFNGLRECTFVPROC epoxy_glRectfv;
    PFNGLRECTIPROC epoxy_glRecti;
    PFNGLRECTIVPROC epoxy_glRectiv;
    PFNGLRECTSPROC epoxy_glRects;
    PFNGLRECTSVPROC epoxy_glRectsv;
    PFNGLRECTXOESPROC epoxy_glRectxOES;
    PFNGLRECTXVOESPROC epoxy_glRectxvOES;
    PFNGLREFERENCEPLANESGIXPROC epoxy_glReferencePlaneSGIX;
    PFNGLRELEASESHADERCOMPILERPROC epoxy_glReleaseShaderCompiler;
    PFNGLRENDERMODEPROC epoxy_glRenderMode;
    PFNGLRENDERBUFFERSTORAGEPROC epoxy_glRenderbufferStorage;
    PFNGLRENDERBUFFERSTORAGEEXTPROC epoxy_glRenderbufferStorageEXT;
    PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC epoxy_glRenderbufferStorageMultisample;
    PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC epoxy_glRenderbufferStorageMultisampleANGLE;
    PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC epoxy_glRenderbufferStorageMultisampleAPPLE;
    PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC epoxy_glRenderbufferStorageMultisampleCoverageNV;
    PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC epoxy_glRenderbufferStorageMultisampleEXT;
    PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC epoxy_glRenderbufferStorageMultisampleIMG;
    PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC epoxy_glRenderbufferStorageMultisampleNV;
    PFNGLRENDERBUFFERSTORAGEOESPROC epoxy_glRenderbufferStorageOES;
    PFNGLREPLACEMENTCODEPOINTERSUNPROC epoxy_glReplacementCodePointerSUN;
    PFNGLREPLACEMENTCODEUBSUNPROC epoxy_glReplacementCodeubSUN;
    PFNGLREPLACEMENTCODEUBVSUNPROC epoxy_glReplacementCodeubvSUN;
    PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiColor3fVertex3fSUN;
    PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiColor3fVertex3fvSUN;
    PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
    PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
    PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC epoxy_glReplacementCodeuiColor4ubVertex3fSUN;
    PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC epoxy_glReplacementCodeuiColor4ubVertex3fvSUN;
    PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiNormal3fVertex3fSUN;
    PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiNormal3fVertex3fvSUN;
    PFNGLREPLACEMENTCODEUISUNPROC epoxy_glReplacementCodeuiSUN;
    PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
    PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
    PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
    PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
    PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC epoxy_glReplacementCodeuiTexCoord2fVertex3fSUN;
    PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiTexCoord2fVertex3fvSUN;
    PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC epoxy_glReplacementCodeuiVertex3fSUN;
    PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC epoxy_glReplacementCodeuiVertex3fvSUN;
    PFNGLREPLACEMENTCODEUIVSUNPROC epoxy_glReplacementCodeuivSUN;
    PFNGLREPLACEMENTCODEUSSUNPROC epoxy_glReplacementCodeusSUN;
    PFNGLREPLACEMENTCODEUSVSUNPROC epoxy_glReplacementCodeusvSUN;
    PFNGLREQUESTRESIDENTPROGRAMSNVPROC epoxy_glRequestResidentProgramsNV;
    PFNGLRESETHISTOGRAMPROC epoxy_glResetHistogram;
    PFNGLRESETHISTOGRAMEXTPROC epoxy_glResetHistogramEXT;
    PFNGLRESETMINMAXPROC epoxy_glResetMinmax;
    PFNGLRESETMINMAXEXTPROC epoxy_glResetMinmaxEXT;
    PFNGLRESIZEBUFFERSMESAPROC epoxy_glResizeBuffersMESA;
    PFNGLRESOLVEDEPTHVALUESNVPROC epoxy_glResolveDepthValuesNV;
    PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC epoxy_glResolveMultisampleFramebufferAPPLE;
    PFNGLRESUMETRANSFORMFEEDBACKPROC epoxy_glResumeTransformFeedback;
    PFNGLRESUMETRANSFORMFEEDBACKNVPROC epoxy_glResumeTransformFeedbackNV;
    PFNGLROTATEDPROC epoxy_glRotated;
    PFNGLROTATEFPROC epoxy_glRotatef;
    PFNGLROTATEXPROC epoxy_glRotatex;
    PFNGLROTATEXOESPROC epoxy_glRotatexOES;
    PFNGLSAMPLECOVERAGEPROC epoxy_glSampleCoverage;
    PFNGLSAMPLECOVERAGEARBPROC epoxy_glSampleCoverageARB;
    PFNGLSAMPLECOVERAGEXPROC epoxy_glSampleCoveragex;
    PFNGLSAMPLECOVERAGEXOESPROC epoxy_glSampleCoveragexOES;
    PFNGLSAMPLEMAPATIPROC epoxy_glSampleMapATI;
    PFNGLSAMPLEMASKEXTPROC epoxy_glSampleMaskEXT;
    PFNGLSAMPLEMASKINDEXEDNVPROC epoxy_glSampleMaskIndexedNV;
    PFNGLSAMPLEMASKSGISPROC epoxy_glSampleMaskSGIS;
    PFNGLSAMPLEMASKIPROC epoxy_glSampleMaski;
    PFNGLSAMPLEPATTERNEXTPROC epoxy_glSamplePatternEXT;
    PFNGLSAMPLEPATTERNSGISPROC epoxy_glSamplePatternSGIS;
    PFNGLSAMPLERPARAMETERIIVPROC epoxy_glSamplerParameterIiv;
    PFNGLSAMPLERPARAMETERIIVEXTPROC epoxy_glSamplerParameterIivEXT;
    PFNGLSAMPLERPARAMETERIIVOESPROC epoxy_glSamplerParameterIivOES;
    PFNGLSAMPLERPARAMETERIUIVPROC epoxy_glSamplerParameterIuiv;
    PFNGLSAMPLERPARAMETERIUIVEXTPROC epoxy_glSamplerParameterIuivEXT;
    PFNGLSAMPLERPARAMETERIUIVOESPROC epoxy_glSamplerParameterIuivOES;
    PFNGLSAMPLERPARAMETERFPROC epoxy_glSamplerParameterf;
    PFNGLSAMPLERPARAMETERFVPROC epoxy_glSamplerParameterfv;
    PFNGLSAMPLERPARAMETERIPROC epoxy_glSamplerParameteri;
    PFNGLSAMPLERPARAMETERIVPROC epoxy_glSamplerParameteriv;
    PFNGLSCALEDPROC epoxy_glScaled;
    PFNGLSCALEFPROC epoxy_glScalef;
    PFNGLSCALEXPROC epoxy_glScalex;
    PFNGLSCALEXOESPROC epoxy_glScalexOES;
    PFNGLSCISSORPROC epoxy_glScissor;
    PFNGLSCISSORARRAYVPROC epoxy_glScissorArrayv;
    PFNGLSCISSORARRAYVNVPROC epoxy_glScissorArrayvNV;
    PFNGLSCISSORINDEXEDPROC epoxy_glScissorIndexed;
    PFNGLSCISSORINDEXEDNVPROC epoxy_glScissorIndexedNV;
    PFNGLSCISSORINDEXEDVPROC epoxy_glScissorIndexedv;
    PFNGLSCISSORINDEXEDVNVPROC epoxy_glScissorIndexedvNV;
    PFNGLSECONDARYCOLOR3BPROC epoxy_glSecondaryColor3b;
    PFNGLSECONDARYCOLOR3BEXTPROC epoxy_glSecondaryColor3bEXT;
    PFNGLSECONDARYCOLOR3BVPROC epoxy_glSecondaryColor3bv;
    PFNGLSECONDARYCOLOR3BVEXTPROC epoxy_glSecondaryColor3bvEXT;
    PFNGLSECONDARYCOLOR3DPROC epoxy_glSecondaryColor3d;
    PFNGLSECONDARYCOLOR3DEXTPROC epoxy_glSecondaryColor3dEXT;
    PFNGLSECONDARYCOLOR3DVPROC epoxy_glSecondaryColor3dv;
    PFNGLSECONDARYCOLOR3DVEXTPROC epoxy_glSecondaryColor3dvEXT;
    PFNGLSECONDARYCOLOR3FPROC epoxy_glSecondaryColor3f;
    PFNGLSECONDARYCOLOR3FEXTPROC epoxy_glSecondaryColor3fEXT;
    PFNGLSECONDARYCOLOR3FVPROC epoxy_glSecondaryColor3fv;
    PFNGLSECONDARYCOLOR3FVEXTPROC epoxy_glSecondaryColor3fvEXT;
    PFNGLSECONDARYCOLOR3HNVPROC epoxy_glSecondaryColor3hNV;
    PFNGLSECONDARYCOLOR3HVNVPROC epoxy_glSecondaryColor3hvNV;
    PFNGLSECONDARYCOLOR3IPROC epoxy_glSecondaryColor3i;
    PFNGLSECONDARYCOLOR3IEXTPROC epoxy_glSecondaryColor3iEXT;
    PFNGLSECONDARYCOLOR3IVPROC epoxy_glSecondaryColor3iv;
    PFNGLSECONDARYCOLOR3IVEXTPROC epoxy_glSecondaryColor3ivEXT;
    PFNGLSECONDARYCOLOR3SPROC epoxy_glSecondaryColor3s;
    PFNGLSECONDARYCOLOR3SEXTPROC epoxy_glSecondaryColor3sEXT;
    PFNGLSECONDARYCOLOR3SVPROC epoxy_glSecondaryColor3sv;
    PFNGLSECONDARYCOLOR3SVEXTPROC epoxy_glSecondaryColor3svEXT;
    PFNGLSECONDARYCOLOR3UBPROC epoxy_glSecondaryColor3ub;
    PFNGLSECONDARYCOLOR3UBEXTPROC epoxy_glSecondaryColor3ubEXT;
    PFNGLSECONDARYCOLOR3UBVPROC epoxy_glSecondaryColor3ubv;
    PFNGLSECONDARYCOLOR3UBVEXTPROC epoxy_glSecondaryColor3ubvEXT;
    PFNGLSECONDARYCOLOR3UIPROC epoxy_glSecondaryColor3ui;
    PFNGLSECONDARYCOLOR3UIEXTPROC epoxy_glSecondaryColor3uiEXT;
    PFNGLSECONDARYCOLOR3UIVPROC epoxy_glSecondaryColor3uiv;
    PFNGLSECONDARYCOLOR3UIVEXTPROC epoxy_glSecondaryColor3uivEXT;
    PFNGLSECONDARYCOLOR3USPROC epoxy_glSecondaryColor3us;
    PFNGLSECONDARYCOLOR3USEXTPROC epoxy_glSecondaryColor3usEXT;
    PFNGLSECONDARYCOLOR3USVPROC epoxy_glSecondaryColor3usv;
    PFNGLSECONDARYCOLOR3USVEXTPROC epoxy_glSecondaryColor3usvEXT;
    PFNGLSECONDARYCOLORFORMATNVPROC epoxy_glSecondaryColorFormatNV;
    PFNGLSECONDARYCOLORP3UIPROC epoxy_glSecondaryColorP3ui;
    PFNGLSECONDARYCOLORP3UIVPROC epoxy_glSecondaryColorP3uiv;
    PFNGLSECONDARYCOLORPOINTERPROC epoxy_glSecondaryColorPointer;
    PFNGLSECONDARYCOLORPOINTEREXTPROC epoxy_glSecondaryColorPointerEXT;
    PFNGLSECONDARYCOLORPOINTERLISTIBMPROC epoxy_glSecondaryColorPointerListIBM;
    PFNGLSELECTBUFFERPROC epoxy_glSelectBuffer;
    PFNGLSELECTPERFMONITORCOUNTERSAMDPROC epoxy_glSelectPerfMonitorCountersAMD;
    PFNGLSEPARABLEFILTER2DPROC epoxy_glSeparableFilter2D;
    PFNGLSEPARABLEFILTER2DEXTPROC epoxy_glSeparableFilter2DEXT;
    PFNGLSETFENCEAPPLEPROC epoxy_glSetFenceAPPLE;
    PFNGLSETFENCENVPROC epoxy_glSetFenceNV;
    PFNGLSETFRAGMENTSHADERCONSTANTATIPROC epoxy_glSetFragmentShaderConstantATI;
    PFNGLSETINVARIANTEXTPROC epoxy_glSetInvariantEXT;
    PFNGLSETLOCALCONSTANTEXTPROC epoxy_glSetLocalConstantEXT;
    PFNGLSETMULTISAMPLEFVAMDPROC epoxy_glSetMultisamplefvAMD;
    PFNGLSHADEMODELPROC epoxy_glShadeModel;
    PFNGLSHADERBINARYPROC epoxy_glShaderBinary;
    PFNGLSHADEROP1EXTPROC epoxy_glShaderOp1EXT;
    PFNGLSHADEROP2EXTPROC epoxy_glShaderOp2EXT;
    PFNGLSHADEROP3EXTPROC epoxy_glShaderOp3EXT;
    PFNGLSHADERSOURCEPROC epoxy_glShaderSource;
    PFNGLSHADERSOURCEARBPROC epoxy_glShaderSourceARB;
    PFNGLSHADERSTORAGEBLOCKBINDINGPROC epoxy_glShaderStorageBlockBinding;
    PFNGLSHARPENTEXFUNCSGISPROC epoxy_glSharpenTexFuncSGIS;
    PFNGLSPRITEPARAMETERFSGIXPROC epoxy_glSpriteParameterfSGIX;
    PFNGLSPRITEPARAMETERFVSGIXPROC epoxy_glSpriteParameterfvSGIX;
    PFNGLSPRITEPARAMETERISGIXPROC epoxy_glSpriteParameteriSGIX;
    PFNGLSPRITEPARAMETERIVSGIXPROC epoxy_glSpriteParameterivSGIX;
    PFNGLSTARTINSTRUMENTSSGIXPROC epoxy_glStartInstrumentsSGIX;
    PFNGLSTARTTILINGQCOMPROC epoxy_glStartTilingQCOM;
    PFNGLSTATECAPTURENVPROC epoxy_glStateCaptureNV;
    PFNGLSTENCILCLEARTAGEXTPROC epoxy_glStencilClearTagEXT;
    PFNGLSTENCILFILLPATHINSTANCEDNVPROC epoxy_glStencilFillPathInstancedNV;
    PFNGLSTENCILFILLPATHNVPROC epoxy_glStencilFillPathNV;
    PFNGLSTENCILFUNCPROC epoxy_glStencilFunc;
    PFNGLSTENCILFUNCSEPARATEPROC epoxy_glStencilFuncSeparate;
    PFNGLSTENCILFUNCSEPARATEATIPROC epoxy_glStencilFuncSeparateATI;
    PFNGLSTENCILMASKPROC epoxy_glStencilMask;
    PFNGLSTENCILMASKSEPARATEPROC epoxy_glStencilMaskSeparate;
    PFNGLSTENCILOPPROC epoxy_glStencilOp;
    PFNGLSTENCILOPSEPARATEPROC epoxy_glStencilOpSeparate;
    PFNGLSTENCILOPSEPARATEATIPROC epoxy_glStencilOpSeparateATI;
    PFNGLSTENCILOPVALUEAMDPROC epoxy_glStencilOpValueAMD;
    PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC epoxy_glStencilStrokePathInstancedNV;
    PFNGLSTENCILSTROKEPATHNVPROC epoxy_glStencilStrokePathNV;
    PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC epoxy_glStencilThenCoverFillPathInstancedNV;
    PFNGLSTENCILTHENCOVERFILLPATHNVPROC epoxy_glStencilThenCoverFillPathNV;
    PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC epoxy_glStencilThenCoverStrokePathInstancedNV;
    PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC epoxy_glStencilThenCoverStrokePathNV;
    PFNGLSTOPINSTRUMENTSSGIXPROC epoxy_glStopInstrumentsSGIX;
    PFNGLSTRINGMARKERGREMEDYPROC epoxy_glStringMarkerGREMEDY;
    PFNGLSUBPIXELPRECISIONBIASNVPROC epoxy_glSubpixelPrecisionBiasNV;
    PFNGLSWIZZLEEXTPROC epoxy_glSwizzleEXT;
    PFNGLSYNCTEXTUREINTELPROC epoxy_glSyncTextureINTEL;
    PFNGLTAGSAMPLEBUFFERSGIXPROC epoxy_glTagSampleBufferSGIX;
    PFNGLTANGENT3BEXTPROC epoxy_glTangent3bEXT;
    PFNGLTANGENT3BVEXTPROC epoxy_glTangent3bvEXT;
    PFNGLTANGENT3DEXTPROC epoxy_glTangent3dEXT;
    PFNGLTANGENT3DVEXTPROC epoxy_glTangent3dvEXT;
    PFNGLTANGENT3FEXTPROC epoxy_glTangent3fEXT;
    PFNGLTANGENT3FVEXTPROC epoxy_glTangent3fvEXT;
    PFNGLTANGENT3IEXTPROC epoxy_glTangent3iEXT;
    PFNGLTANGENT3IVEXTPROC epoxy_glTangent3ivEXT;
    PFNGLTANGENT3SEXTPROC epoxy_glTangent3sEXT;
    PFNGLTANGENT3SVEXTPROC epoxy_glTangent3svEXT;
    PFNGLTANGENTPOINTEREXTPROC epoxy_glTangentPointerEXT;
    PFNGLTBUFFERMASK3DFXPROC epoxy_glTbufferMask3DFX;
    PFNGLTESSELLATIONFACTORAMDPROC epoxy_glTessellationFactorAMD;
    PFNGLTESSELLATIONMODEAMDPROC epoxy_glTessellationModeAMD;
    PFNGLTESTFENCEAPPLEPROC epoxy_glTestFenceAPPLE;
    PFNGLTESTFENCENVPROC epoxy_glTestFenceNV;
    PFNGLTESTOBJECTAPPLEPROC epoxy_glTestObjectAPPLE;
    PFNGLTEXBUFFERPROC epoxy_glTexBuffer;
    PFNGLTEXBUFFERARBPROC epoxy_glTexBufferARB;
    PFNGLTEXBUFFEREXTPROC epoxy_glTexBufferEXT;
    PFNGLTEXBUFFEROESPROC epoxy_glTexBufferOES;
    PFNGLTEXBUFFERRANGEPROC epoxy_glTexBufferRange;
    PFNGLTEXBUFFERRANGEEXTPROC epoxy_glTexBufferRangeEXT;
    PFNGLTEXBUFFERRANGEOESPROC epoxy_glTexBufferRangeOES;
    PFNGLTEXBUMPPARAMETERFVATIPROC epoxy_glTexBumpParameterfvATI;
    PFNGLTEXBUMPPARAMETERIVATIPROC epoxy_glTexBumpParameterivATI;
    PFNGLTEXCOORD1BOESPROC epoxy_glTexCoord1bOES;
    PFNGLTEXCOORD1BVOESPROC epoxy_glTexCoord1bvOES;
    PFNGLTEXCOORD1DPROC epoxy_glTexCoord1d;
    PFNGLTEXCOORD1DVPROC epoxy_glTexCoord1dv;
    PFNGLTEXCOORD1FPROC epoxy_glTexCoord1f;
    PFNGLTEXCOORD1FVPROC epoxy_glTexCoord1fv;
    PFNGLTEXCOORD1HNVPROC epoxy_glTexCoord1hNV;
    PFNGLTEXCOORD1HVNVPROC epoxy_glTexCoord1hvNV;
    PFNGLTEXCOORD1IPROC epoxy_glTexCoord1i;
    PFNGLTEXCOORD1IVPROC epoxy_glTexCoord1iv;
    PFNGLTEXCOORD1SPROC epoxy_glTexCoord1s;
    PFNGLTEXCOORD1SVPROC epoxy_glTexCoord1sv;
    PFNGLTEXCOORD1XOESPROC epoxy_glTexCoord1xOES;
    PFNGLTEXCOORD1XVOESPROC epoxy_glTexCoord1xvOES;
    PFNGLTEXCOORD2BOESPROC epoxy_glTexCoord2bOES;
    PFNGLTEXCOORD2BVOESPROC epoxy_glTexCoord2bvOES;
    PFNGLTEXCOORD2DPROC epoxy_glTexCoord2d;
    PFNGLTEXCOORD2DVPROC epoxy_glTexCoord2dv;
    PFNGLTEXCOORD2FPROC epoxy_glTexCoord2f;
    PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC epoxy_glTexCoord2fColor3fVertex3fSUN;
    PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC epoxy_glTexCoord2fColor3fVertex3fvSUN;
    PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC epoxy_glTexCoord2fColor4fNormal3fVertex3fSUN;
    PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC epoxy_glTexCoord2fColor4fNormal3fVertex3fvSUN;
    PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC epoxy_glTexCoord2fColor4ubVertex3fSUN;
    PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC epoxy_glTexCoord2fColor4ubVertex3fvSUN;
    PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC epoxy_glTexCoord2fNormal3fVertex3fSUN;
    PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC epoxy_glTexCoord2fNormal3fVertex3fvSUN;
    PFNGLTEXCOORD2FVERTEX3FSUNPROC epoxy_glTexCoord2fVertex3fSUN;
    PFNGLTEXCOORD2FVERTEX3FVSUNPROC epoxy_glTexCoord2fVertex3fvSUN;
    PFNGLTEXCOORD2FVPROC epoxy_glTexCoord2fv;
    PFNGLTEXCOORD2HNVPROC epoxy_glTexCoord2hNV;
    PFNGLTEXCOORD2HVNVPROC epoxy_glTexCoord2hvNV;
    PFNGLTEXCOORD2IPROC epoxy_glTexCoord2i;
    PFNGLTEXCOORD2IVPROC epoxy_glTexCoord2iv;
    PFNGLTEXCOORD2SPROC epoxy_glTexCoord2s;
    PFNGLTEXCOORD2SVPROC epoxy_glTexCoord2sv;
    PFNGLTEXCOORD2XOESPROC epoxy_glTexCoord2xOES;
    PFNGLTEXCOORD2XVOESPROC epoxy_glTexCoord2xvOES;
    PFNGLTEXCOORD3BOESPROC epoxy_glTexCoord3bOES;
    PFNGLTEXCOORD3BVOESPROC epoxy_glTexCoord3bvOES;
    PFNGLTEXCOORD3DPROC epoxy_glTexCoord3d;
    PFNGLTEXCOORD3DVPROC epoxy_glTexCoord3dv;
    PFNGLTEXCOORD3FPROC epoxy_glTexCoord3f;
    PFNGLTEXCOORD3FVPROC epoxy_glTexCoord3fv;
    PFNGLTEXCOORD3HNVPROC epoxy_glTexCoord3hNV;
    PFNGLTEXCOORD3HVNVPROC epoxy_glTexCoord3hvNV;
    PFNGLTEXCOORD3IPROC epoxy_glTexCoord3i;
    PFNGLTEXCOORD3IVPROC epoxy_glTexCoord3iv;
    PFNGLTEXCOORD3SPROC epoxy_glTexCoord3s;
    PFNGLTEXCOORD3SVPROC epoxy_glTexCoord3sv;
    PFNGLTEXCOORD3XOESPROC epoxy_glTexCoord3xOES;
    PFNGLTEXCOORD3XVOESPROC epoxy_glTexCoord3xvOES;
    PFNGLTEXCOORD4BOESPROC epoxy_glTexCoord4bOES;
    PFNGLTEXCOORD4BVOESPROC epoxy_glTexCoord4bvOES;
    PFNGLTEXCOORD4DPROC epoxy_glTexCoord4d;
    PFNGLTEXCOORD4DVPROC epoxy_glTexCoord4dv;
    PFNGLTEXCOORD4FPROC epoxy_glTexCoord4f;
    PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC epoxy_glTexCoord4fColor4fNormal3fVertex4fSUN;
    PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC epoxy_glTexCoord4fColor4fNormal3fVertex4fvSUN;
    PFNGLTEXCOORD4FVERTEX4FSUNPROC epoxy_glTexCoord4fVertex4fSUN;
    PFNGLTEXCOORD4FVERTEX4FVSUNPROC epoxy_glTexCoord4fVertex4fvSUN;
    PFNGLTEXCOORD4FVPROC epoxy_glTexCoord4fv;
    PFNGLTEXCOORD4HNVPROC epoxy_glTexCoord4hNV;
    PFNGLTEXCOORD4HVNVPROC epoxy_glTexCoord4hvNV;
    PFNGLTEXCOORD4IPROC epoxy_glTexCoord4i;
    PFNGLTEXCOORD4IVPROC epoxy_glTexCoord4iv;
    PFNGLTEXCOORD4SPROC epoxy_glTexCoord4s;
    PFNGLTEXCOORD4SVPROC epoxy_glTexCoord4sv;
    PFNGLTEXCOORD4XOESPROC epoxy_glTexCoord4xOES;
    PFNGLTEXCOORD4XVOESPROC epoxy_glTexCoord4xvOES;
    PFNGLTEXCOORDFORMATNVPROC epoxy_glTexCoordFormatNV;
    PFNGLTEXCOORDP1UIPROC epoxy_glTexCoordP1ui;
    PFNGLTEXCOORDP1UIVPROC epoxy_glTexCoordP1uiv;
    PFNGLTEXCOORDP2UIPROC epoxy_glTexCoordP2ui;
    PFNGLTEXCOORDP2UIVPROC epoxy_glTexCoordP2uiv;
    PFNGLTEXCOORDP3UIPROC epoxy_glTexCoordP3ui;
    PFNGLTEXCOORDP3UIVPROC epoxy_glTexCoordP3uiv;
    PFNGLTEXCOORDP4UIPROC epoxy_glTexCoordP4ui;
    PFNGLTEXCOORDP4UIVPROC epoxy_glTexCoordP4uiv;
    PFNGLTEXCOORDPOINTERPROC epoxy_glTexCoordPointer;
    PFNGLTEXCOORDPOINTEREXTPROC epoxy_glTexCoordPointerEXT;
    PFNGLTEXCOORDPOINTERLISTIBMPROC epoxy_glTexCoordPointerListIBM;
    PFNGLTEXCOORDPOINTERVINTELPROC epoxy_glTexCoordPointervINTEL;
    PFNGLTEXENVFPROC epoxy_glTexEnvf;
    PFNGLTEXENVFVPROC epoxy_glTexEnvfv;
    PFNGLTEXENVIPROC epoxy_glTexEnvi;
    PFNGLTEXENVIVPROC epoxy_glTexEnviv;
    PFNGLTEXENVXPROC epoxy_glTexEnvx;
    PFNGLTEXENVXOESPROC epoxy_glTexEnvxOES;
    PFNGLTEXENVXVPROC epoxy_glTexEnvxv;
    PFNGLTEXENVXVOESPROC epoxy_glTexEnvxvOES;
    PFNGLTEXFILTERFUNCSGISPROC epoxy_glTexFilterFuncSGIS;
    PFNGLTEXGENDPROC epoxy_glTexGend;
    PFNGLTEXGENDVPROC epoxy_glTexGendv;
    PFNGLTEXGENFPROC epoxy_glTexGenf;
    PFNGLTEXGENFOESPROC epoxy_glTexGenfOES;
    PFNGLTEXGENFVPROC epoxy_glTexGenfv;
    PFNGLTEXGENFVOESPROC epoxy_glTexGenfvOES;
    PFNGLTEXGENIPROC epoxy_glTexGeni;
    PFNGLTEXGENIOESPROC epoxy_glTexGeniOES;
    PFNGLTEXGENIVPROC epoxy_glTexGeniv;
    PFNGLTEXGENIVOESPROC epoxy_glTexGenivOES;
    PFNGLTEXGENXOESPROC epoxy_glTexGenxOES;
    PFNGLTEXGENXVOESPROC epoxy_glTexGenxvOES;
    PFNGLTEXIMAGE1DPROC epoxy_glTexImage1D;
    PFNGLTEXIMAGE2DPROC epoxy_glTexImage2D;
    PFNGLTEXIMAGE2DMULTISAMPLEPROC epoxy_glTexImage2DMultisample;
    PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC epoxy_glTexImage2DMultisampleCoverageNV;
    PFNGLTEXIMAGE3DPROC epoxy_glTexImage3D;
    PFNGLTEXIMAGE3DEXTPROC epoxy_glTexImage3DEXT;
    PFNGLTEXIMAGE3DMULTISAMPLEPROC epoxy_glTexImage3DMultisample;
    PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC epoxy_glTexImage3DMultisampleCoverageNV;
    PFNGLTEXIMAGE3DOESPROC epoxy_glTexImage3DOES;
    PFNGLTEXIMAGE4DSGISPROC epoxy_glTexImage4DSGIS;
    PFNGLTEXPAGECOMMITMENTARBPROC epoxy_glTexPageCommitmentARB;
    PFNGLTEXPAGECOMMITMENTEXTPROC epoxy_glTexPageCommitmentEXT;
    PFNGLTEXPARAMETERIIVPROC epoxy_glTexParameterIiv;
    PFNGLTEXPARAMETERIIVEXTPROC epoxy_glTexParameterIivEXT;
    PFNGLTEXPARAMETERIIVOESPROC epoxy_glTexParameterIivOES;
    PFNGLTEXPARAMETERIUIVPROC epoxy_glTexParameterIuiv;
    PFNGLTEXPARAMETERIUIVEXTPROC epoxy_glTexParameterIuivEXT;
    PFNGLTEXPARAMETERIUIVOESPROC epoxy_glTexParameterIuivOES;
    PFNGLTEXPARAMETERFPROC epoxy_glTexParameterf;
    PFNGLTEXPARAMETERFVPROC epoxy_glTexParameterfv;
    PFNGLTEXPARAMETERIPROC epoxy_glTexParameteri;
    PFNGLTEXPARAMETERIVPROC epoxy_glTexParameteriv;
    PFNGLTEXPARAMETERXPROC epoxy_glTexParameterx;
    PFNGLTEXPARAMETERXOESPROC epoxy_glTexParameterxOES;
    PFNGLTEXPARAMETERXVPROC epoxy_glTexParameterxv;
    PFNGLTEXPARAMETERXVOESPROC epoxy_glTexParameterxvOES;
    PFNGLTEXRENDERBUFFERNVPROC epoxy_glTexRenderbufferNV;
    PFNGLTEXSTORAGE1DPROC epoxy_glTexStorage1D;
    PFNGLTEXSTORAGE1DEXTPROC epoxy_glTexStorage1DEXT;
    PFNGLTEXSTORAGE2DPROC epoxy_glTexStorage2D;
    PFNGLTEXSTORAGE2DEXTPROC epoxy_glTexStorage2DEXT;
    PFNGLTEXSTORAGE2DMULTISAMPLEPROC epoxy_glTexStorage2DMultisample;
    PFNGLTEXSTORAGE3DPROC epoxy_glTexStorage3D;
    PFNGLTEXSTORAGE3DEXTPROC epoxy_glTexStorage3DEXT;
    PFNGLTEXSTORAGE3DMULTISAMPLEPROC epoxy_glTexStorage3DMultisample;
    PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC epoxy_glTexStorage3DMultisampleOES;
    PFNGLTEXSTORAGESPARSEAMDPROC epoxy_glTexStorageSparseAMD;
    PFNGLTEXSUBIMAGE1DPROC epoxy_glTexSubImage1D;
    PFNGLTEXSUBIMAGE1DEXTPROC epoxy_glTexSubImage1DEXT;
    PFNGLTEXSUBIMAGE2DPROC epoxy_glTexSubImage2D;
    PFNGLTEXSUBIMAGE2DEXTPROC epoxy_glTexSubImage2DEXT;
    PFNGLTEXSUBIMAGE3DPROC epoxy_glTexSubImage3D;
    PFNGLTEXSUBIMAGE3DEXTPROC epoxy_glTexSubImage3DEXT;
    PFNGLTEXSUBIMAGE3DOESPROC epoxy_glTexSubImage3DOES;
    PFNGLTEXSUBIMAGE4DSGISPROC epoxy_glTexSubImage4DSGIS;
    PFNGLTEXTUREBARRIERPROC epoxy_glTextureBarrier;
    PFNGLTEXTUREBARRIERNVPROC epoxy_glTextureBarrierNV;
    PFNGLTEXTUREBUFFERPROC epoxy_glTextureBuffer;
    PFNGLTEXTUREBUFFEREXTPROC epoxy_glTextureBufferEXT;
    PFNGLTEXTUREBUFFERRANGEPROC epoxy_glTextureBufferRange;
    PFNGLTEXTUREBUFFERRANGEEXTPROC epoxy_glTextureBufferRangeEXT;
    PFNGLTEXTURECOLORMASKSGISPROC epoxy_glTextureColorMaskSGIS;
    PFNGLTEXTUREIMAGE1DEXTPROC epoxy_glTextureImage1DEXT;
    PFNGLTEXTUREIMAGE2DEXTPROC epoxy_glTextureImage2DEXT;
    PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC epoxy_glTextureImage2DMultisampleCoverageNV;
    PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC epoxy_glTextureImage2DMultisampleNV;
    PFNGLTEXTUREIMAGE3DEXTPROC epoxy_glTextureImage3DEXT;
    PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC epoxy_glTextureImage3DMultisampleCoverageNV;
    PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC epoxy_glTextureImage3DMultisampleNV;
    PFNGLTEXTURELIGHTEXTPROC epoxy_glTextureLightEXT;
    PFNGLTEXTUREMATERIALEXTPROC epoxy_glTextureMaterialEXT;
    PFNGLTEXTURENORMALEXTPROC epoxy_glTextureNormalEXT;
    PFNGLTEXTUREPAGECOMMITMENTEXTPROC epoxy_glTexturePageCommitmentEXT;
    PFNGLTEXTUREPARAMETERIIVPROC epoxy_glTextureParameterIiv;
    PFNGLTEXTUREPARAMETERIIVEXTPROC epoxy_glTextureParameterIivEXT;
    PFNGLTEXTUREPARAMETERIUIVPROC epoxy_glTextureParameterIuiv;
    PFNGLTEXTUREPARAMETERIUIVEXTPROC epoxy_glTextureParameterIuivEXT;
    PFNGLTEXTUREPARAMETERFPROC epoxy_glTextureParameterf;
    PFNGLTEXTUREPARAMETERFEXTPROC epoxy_glTextureParameterfEXT;
    PFNGLTEXTUREPARAMETERFVPROC epoxy_glTextureParameterfv;
    PFNGLTEXTUREPARAMETERFVEXTPROC epoxy_glTextureParameterfvEXT;
    PFNGLTEXTUREPARAMETERIPROC epoxy_glTextureParameteri;
    PFNGLTEXTUREPARAMETERIEXTPROC epoxy_glTextureParameteriEXT;
    PFNGLTEXTUREPARAMETERIVPROC epoxy_glTextureParameteriv;
    PFNGLTEXTUREPARAMETERIVEXTPROC epoxy_glTextureParameterivEXT;
    PFNGLTEXTURERANGEAPPLEPROC epoxy_glTextureRangeAPPLE;
    PFNGLTEXTURERENDERBUFFEREXTPROC epoxy_glTextureRenderbufferEXT;
    PFNGLTEXTURESTORAGE1DPROC epoxy_glTextureStorage1D;
    PFNGLTEXTURESTORAGE1DEXTPROC epoxy_glTextureStorage1DEXT;
    PFNGLTEXTURESTORAGE2DPROC epoxy_glTextureStorage2D;
    PFNGLTEXTURESTORAGE2DEXTPROC epoxy_glTextureStorage2DEXT;
    PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC epoxy_glTextureStorage2DMultisample;
    PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC epoxy_glTextureStorage2DMultisampleEXT;
    PFNGLTEXTURESTORAGE3DPROC epoxy_glTextureStorage3D;
    PFNGLTEXTURESTORAGE3DEXTPROC epoxy_glTextureStorage3DEXT;
    PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC epoxy_glTextureStorage3DMultisample;
    PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC epoxy_glTextureStorage3DMultisampleEXT;
    PFNGLTEXTURESTORAGESPARSEAMDPROC epoxy_glTextureStorageSparseAMD;
    PFNGLTEXTURESUBIMAGE1DPROC epoxy_glTextureSubImage1D;
    PFNGLTEXTURESUBIMAGE1DEXTPROC epoxy_glTextureSubImage1DEXT;
    PFNGLTEXTURESUBIMAGE2DPROC epoxy_glTextureSubImage2D;
    PFNGLTEXTURESUBIMAGE2DEXTPROC epoxy_glTextureSubImage2DEXT;
    PFNGLTEXTURESUBIMAGE3DPROC epoxy_glTextureSubImage3D;
    PFNGLTEXTURESUBIMAGE3DEXTPROC epoxy_glTextureSubImage3DEXT;
    PFNGLTEXTUREVIEWPROC epoxy_glTextureView;
    PFNGLTEXTUREVIEWEXTPROC epoxy_glTextureViewEXT;
    PFNGLTEXTUREVIEWOESPROC epoxy_glTextureViewOES;
    PFNGLTRACKMATRIXNVPROC epoxy_glTrackMatrixNV;
    PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC epoxy_glTransformFeedbackAttribsNV;
    PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC epoxy_glTransformFeedbackBufferBase;
    PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC epoxy_glTransformFeedbackBufferRange;
    PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC epoxy_glTransformFeedbackStreamAttribsNV;
    PFNGLTRANSFORMFEEDBACKVARYINGSPROC epoxy_glTransformFeedbackVaryings;
    PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC epoxy_glTransformFeedbackVaryingsEXT;
    PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC epoxy_glTransformFeedbackVaryingsNV;
    PFNGLTRANSFORMPATHNVPROC epoxy_glTransformPathNV;
    PFNGLTRANSLATEDPROC epoxy_glTranslated;
    PFNGLTRANSLATEFPROC epoxy_glTranslatef;
    PFNGLTRANSLATEXPROC epoxy_glTranslatex;
    PFNGLTRANSLATEXOESPROC epoxy_glTranslatexOES;
    PFNGLUNIFORM1DPROC epoxy_glUniform1d;
    PFNGLUNIFORM1DVPROC epoxy_glUniform1dv;
    PFNGLUNIFORM1FPROC epoxy_glUniform1f;
    PFNGLUNIFORM1FARBPROC epoxy_glUniform1fARB;
    PFNGLUNIFORM1FVPROC epoxy_glUniform1fv;
    PFNGLUNIFORM1FVARBPROC epoxy_glUniform1fvARB;
    PFNGLUNIFORM1IPROC epoxy_glUniform1i;
    PFNGLUNIFORM1I64NVPROC epoxy_glUniform1i64NV;
    PFNGLUNIFORM1I64VNVPROC epoxy_glUniform1i64vNV;
    PFNGLUNIFORM1IARBPROC epoxy_glUniform1iARB;
    PFNGLUNIFORM1IVPROC epoxy_glUniform1iv;
    PFNGLUNIFORM1IVARBPROC epoxy_glUniform1ivARB;
    PFNGLUNIFORM1UIPROC epoxy_glUniform1ui;
    PFNGLUNIFORM1UI64NVPROC epoxy_glUniform1ui64NV;
    PFNGLUNIFORM1UI64VNVPROC epoxy_glUniform1ui64vNV;
    PFNGLUNIFORM1UIEXTPROC epoxy_glUniform1uiEXT;
    PFNGLUNIFORM1UIVPROC epoxy_glUniform1uiv;
    PFNGLUNIFORM1UIVEXTPROC epoxy_glUniform1uivEXT;
    PFNGLUNIFORM2DPROC epoxy_glUniform2d;
    PFNGLUNIFORM2DVPROC epoxy_glUniform2dv;
    PFNGLUNIFORM2FPROC epoxy_glUniform2f;
    PFNGLUNIFORM2FARBPROC epoxy_glUniform2fARB;
    PFNGLUNIFORM2FVPROC epoxy_glUniform2fv;
    PFNGLUNIFORM2FVARBPROC epoxy_glUniform2fvARB;
    PFNGLUNIFORM2IPROC epoxy_glUniform2i;
    PFNGLUNIFORM2I64NVPROC epoxy_glUniform2i64NV;
    PFNGLUNIFORM2I64VNVPROC epoxy_glUniform2i64vNV;
    PFNGLUNIFORM2IARBPROC epoxy_glUniform2iARB;
    PFNGLUNIFORM2IVPROC epoxy_glUniform2iv;
    PFNGLUNIFORM2IVARBPROC epoxy_glUniform2ivARB;
    PFNGLUNIFORM2UIPROC epoxy_glUniform2ui;
    PFNGLUNIFORM2UI64NVPROC epoxy_glUniform2ui64NV;
    PFNGLUNIFORM2UI64VNVPROC epoxy_glUniform2ui64vNV;
    PFNGLUNIFORM2UIEXTPROC epoxy_glUniform2uiEXT;
    PFNGLUNIFORM2UIVPROC epoxy_glUniform2uiv;
    PFNGLUNIFORM2UIVEXTPROC epoxy_glUniform2uivEXT;
    PFNGLUNIFORM3DPROC epoxy_glUniform3d;
    PFNGLUNIFORM3DVPROC epoxy_glUniform3dv;
    PFNGLUNIFORM3FPROC epoxy_glUniform3f;
    PFNGLUNIFORM3FARBPROC epoxy_glUniform3fARB;
    PFNGLUNIFORM3FVPROC epoxy_glUniform3fv;
    PFNGLUNIFORM3FVARBPROC epoxy_glUniform3fvARB;
    PFNGLUNIFORM3IPROC epoxy_glUniform3i;
    PFNGLUNIFORM3I64NVPROC epoxy_glUniform3i64NV;
    PFNGLUNIFORM3I64VNVPROC epoxy_glUniform3i64vNV;
    PFNGLUNIFORM3IARBPROC epoxy_glUniform3iARB;
    PFNGLUNIFORM3IVPROC epoxy_glUniform3iv;
    PFNGLUNIFORM3IVARBPROC epoxy_glUniform3ivARB;
    PFNGLUNIFORM3UIPROC epoxy_glUniform3ui;
    PFNGLUNIFORM3UI64NVPROC epoxy_glUniform3ui64NV;
    PFNGLUNIFORM3UI64VNVPROC epoxy_glUniform3ui64vNV;
    PFNGLUNIFORM3UIEXTPROC epoxy_glUniform3uiEXT;
    PFNGLUNIFORM3UIVPROC epoxy_glUniform3uiv;
    PFNGLUNIFORM3UIVEXTPROC epoxy_glUniform3uivEXT;
    PFNGLUNIFORM4DPROC epoxy_glUniform4d;
    PFNGLUNIFORM4DVPROC epoxy_glUniform4dv;
    PFNGLUNIFORM4FPROC epoxy_glUniform4f;
    PFNGLUNIFORM4FARBPROC epoxy_glUniform4fARB;
    PFNGLUNIFORM4FVPROC epoxy_glUniform4fv;
    PFNGLUNIFORM4FVARBPROC epoxy_glUniform4fvARB;
    PFNGLUNIFORM4IPROC epoxy_glUniform4i;
    PFNGLUNIFORM4I64NVPROC epoxy_glUniform4i64NV;
    PFNGLUNIFORM4I64VNVPROC epoxy_glUniform4i64vNV;
    PFNGLUNIFORM4IARBPROC epoxy_glUniform4iARB;
    PFNGLUNIFORM4IVPROC epoxy_glUniform4iv;
    PFNGLUNIFORM4IVARBPROC epoxy_glUniform4ivARB;
    PFNGLUNIFORM4UIPROC epoxy_glUniform4ui;
    PFNGLUNIFORM4UI64NVPROC epoxy_glUniform4ui64NV;
    PFNGLUNIFORM4UI64VNVPROC epoxy_glUniform4ui64vNV;
    PFNGLUNIFORM4UIEXTPROC epoxy_glUniform4uiEXT;
    PFNGLUNIFORM4UIVPROC epoxy_glUniform4uiv;
    PFNGLUNIFORM4UIVEXTPROC epoxy_glUniform4uivEXT;
    PFNGLUNIFORMBLOCKBINDINGPROC epoxy_glUniformBlockBinding;
    PFNGLUNIFORMBUFFEREXTPROC epoxy_glUniformBufferEXT;
    PFNGLUNIFORMHANDLEUI64ARBPROC epoxy_glUniformHandleui64ARB;
    PFNGLUNIFORMHANDLEUI64NVPROC epoxy_glUniformHandleui64NV;
    PFNGLUNIFORMHANDLEUI64VARBPROC epoxy_glUniformHandleui64vARB;
    PFNGLUNIFORMHANDLEUI64VNVPROC epoxy_glUniformHandleui64vNV;
    PFNGLUNIFORMMATRIX2DVPROC epoxy_glUniformMatrix2dv;
    PFNGLUNIFORMMATRIX2FVPROC epoxy_glUniformMatrix2fv;
    PFNGLUNIFORMMATRIX2FVARBPROC epoxy_glUniformMatrix2fvARB;
    PFNGLUNIFORMMATRIX2X3DVPROC epoxy_glUniformMatrix2x3dv;
    PFNGLUNIFORMMATRIX2X3FVPROC epoxy_glUniformMatrix2x3fv;
    PFNGLUNIFORMMATRIX2X3FVNVPROC epoxy_glUniformMatrix2x3fvNV;
    PFNGLUNIFORMMATRIX2X4DVPROC epoxy_glUniformMatrix2x4dv;
    PFNGLUNIFORMMATRIX2X4FVPROC epoxy_glUniformMatrix2x4fv;
    PFNGLUNIFORMMATRIX2X4FVNVPROC epoxy_glUniformMatrix2x4fvNV;
    PFNGLUNIFORMMATRIX3DVPROC epoxy_glUniformMatrix3dv;
    PFNGLUNIFORMMATRIX3FVPROC epoxy_glUniformMatrix3fv;
    PFNGLUNIFORMMATRIX3FVARBPROC epoxy_glUniformMatrix3fvARB;
    PFNGLUNIFORMMATRIX3X2DVPROC epoxy_glUniformMatrix3x2dv;
    PFNGLUNIFORMMATRIX3X2FVPROC epoxy_glUniformMatrix3x2fv;
    PFNGLUNIFORMMATRIX3X2FVNVPROC epoxy_glUniformMatrix3x2fvNV;
    PFNGLUNIFORMMATRIX3X4DVPROC epoxy_glUniformMatrix3x4dv;
    PFNGLUNIFORMMATRIX3X4FVPROC epoxy_glUniformMatrix3x4fv;
    PFNGLUNIFORMMATRIX3X4FVNVPROC epoxy_glUniformMatrix3x4fvNV;
    PFNGLUNIFORMMATRIX4DVPROC epoxy_glUniformMatrix4dv;
    PFNGLUNIFORMMATRIX4FVPROC epoxy_glUniformMatrix4fv;
    PFNGLUNIFORMMATRIX4FVARBPROC epoxy_glUniformMatrix4fvARB;
    PFNGLUNIFORMMATRIX4X2DVPROC epoxy_glUniformMatrix4x2dv;
    PFNGLUNIFORMMATRIX4X2FVPROC epoxy_glUniformMatrix4x2fv;
    PFNGLUNIFORMMATRIX4X2FVNVPROC epoxy_glUniformMatrix4x2fvNV;
    PFNGLUNIFORMMATRIX4X3DVPROC epoxy_glUniformMatrix4x3dv;
    PFNGLUNIFORMMATRIX4X3FVPROC epoxy_glUniformMatrix4x3fv;
    PFNGLUNIFORMMATRIX4X3FVNVPROC epoxy_glUniformMatrix4x3fvNV;
    PFNGLUNIFORMSUBROUTINESUIVPROC epoxy_glUniformSubroutinesuiv;
    PFNGLUNIFORMUI64NVPROC epoxy_glUniformui64NV;
    PFNGLUNIFORMUI64VNVPROC epoxy_glUniformui64vNV;
    PFNGLUNLOCKARRAYSEXTPROC epoxy_glUnlockArraysEXT;
    PFNGLUNMAPBUFFERPROC epoxy_glUnmapBuffer;
    PFNGLUNMAPBUFFERARBPROC epoxy_glUnmapBufferARB;
    PFNGLUNMAPBUFFEROESPROC epoxy_glUnmapBufferOES;
    PFNGLUNMAPNAMEDBUFFERPROC epoxy_glUnmapNamedBuffer;
    PFNGLUNMAPNAMEDBUFFEREXTPROC epoxy_glUnmapNamedBufferEXT;
    PFNGLUNMAPOBJECTBUFFERATIPROC epoxy_glUnmapObjectBufferATI;
    PFNGLUNMAPTEXTURE2DINTELPROC epoxy_glUnmapTexture2DINTEL;
    PFNGLUPDATEOBJECTBUFFERATIPROC epoxy_glUpdateObjectBufferATI;
    PFNGLUSEPROGRAMPROC epoxy_glUseProgram;
    PFNGLUSEPROGRAMOBJECTARBPROC epoxy_glUseProgramObjectARB;
    PFNGLUSEPROGRAMSTAGESPROC epoxy_glUseProgramStages;
    PFNGLUSEPROGRAMSTAGESEXTPROC epoxy_glUseProgramStagesEXT;
    PFNGLUSESHADERPROGRAMEXTPROC epoxy_glUseShaderProgramEXT;
    PFNGLVDPAUFININVPROC epoxy_glVDPAUFiniNV;
    PFNGLVDPAUGETSURFACEIVNVPROC epoxy_glVDPAUGetSurfaceivNV;
    PFNGLVDPAUINITNVPROC epoxy_glVDPAUInitNV;
    PFNGLVDPAUISSURFACENVPROC epoxy_glVDPAUIsSurfaceNV;
    PFNGLVDPAUMAPSURFACESNVPROC epoxy_glVDPAUMapSurfacesNV;
    PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC epoxy_glVDPAURegisterOutputSurfaceNV;
    PFNGLVDPAUREGISTERVIDEOSURFACENVPROC epoxy_glVDPAURegisterVideoSurfaceNV;
    PFNGLVDPAUSURFACEACCESSNVPROC epoxy_glVDPAUSurfaceAccessNV;
    PFNGLVDPAUUNMAPSURFACESNVPROC epoxy_glVDPAUUnmapSurfacesNV;
    PFNGLVDPAUUNREGISTERSURFACENVPROC epoxy_glVDPAUUnregisterSurfaceNV;
    PFNGLVALIDATEPROGRAMPROC epoxy_glValidateProgram;
    PFNGLVALIDATEPROGRAMARBPROC epoxy_glValidateProgramARB;
    PFNGLVALIDATEPROGRAMPIPELINEPROC epoxy_glValidateProgramPipeline;
    PFNGLVALIDATEPROGRAMPIPELINEEXTPROC epoxy_glValidateProgramPipelineEXT;
    PFNGLVARIANTARRAYOBJECTATIPROC epoxy_glVariantArrayObjectATI;
    PFNGLVARIANTPOINTEREXTPROC epoxy_glVariantPointerEXT;
    PFNGLVARIANTBVEXTPROC epoxy_glVariantbvEXT;
    PFNGLVARIANTDVEXTPROC epoxy_glVariantdvEXT;
    PFNGLVARIANTFVEXTPROC epoxy_glVariantfvEXT;
    PFNGLVARIANTIVEXTPROC epoxy_glVariantivEXT;
    PFNGLVARIANTSVEXTPROC epoxy_glVariantsvEXT;
    PFNGLVARIANTUBVEXTPROC epoxy_glVariantubvEXT;
    PFNGLVARIANTUIVEXTPROC epoxy_glVariantuivEXT;
    PFNGLVARIANTUSVEXTPROC epoxy_glVariantusvEXT;
    PFNGLVERTEX2BOESPROC epoxy_glVertex2bOES;
    PFNGLVERTEX2BVOESPROC epoxy_glVertex2bvOES;
    PFNGLVERTEX2DPROC epoxy_glVertex2d;
    PFNGLVERTEX2DVPROC epoxy_glVertex2dv;
    PFNGLVERTEX2FPROC epoxy_glVertex2f;
    PFNGLVERTEX2FVPROC epoxy_glVertex2fv;
    PFNGLVERTEX2HNVPROC epoxy_glVertex2hNV;
    PFNGLVERTEX2HVNVPROC epoxy_glVertex2hvNV;
    PFNGLVERTEX2IPROC epoxy_glVertex2i;
    PFNGLVERTEX2IVPROC epoxy_glVertex2iv;
    PFNGLVERTEX2SPROC epoxy_glVertex2s;
    PFNGLVERTEX2SVPROC epoxy_glVertex2sv;
    PFNGLVERTEX2XOESPROC epoxy_glVertex2xOES;
    PFNGLVERTEX2XVOESPROC epoxy_glVertex2xvOES;
    PFNGLVERTEX3BOESPROC epoxy_glVertex3bOES;
    PFNGLVERTEX3BVOESPROC epoxy_glVertex3bvOES;
    PFNGLVERTEX3DPROC epoxy_glVertex3d;
    PFNGLVERTEX3DVPROC epoxy_glVertex3dv;
    PFNGLVERTEX3FPROC epoxy_glVertex3f;
    PFNGLVERTEX3FVPROC epoxy_glVertex3fv;
    PFNGLVERTEX3HNVPROC epoxy_glVertex3hNV;
    PFNGLVERTEX3HVNVPROC epoxy_glVertex3hvNV;
    PFNGLVERTEX3IPROC epoxy_glVertex3i;
    PFNGLVERTEX3IVPROC epoxy_glVertex3iv;
    PFNGLVERTEX3SPROC epoxy_glVertex3s;
    PFNGLVERTEX3SVPROC epoxy_glVertex3sv;
    PFNGLVERTEX3XOESPROC epoxy_glVertex3xOES;
    PFNGLVERTEX3XVOESPROC epoxy_glVertex3xvOES;
    PFNGLVERTEX4BOESPROC epoxy_glVertex4bOES;
    PFNGLVERTEX4BVOESPROC epoxy_glVertex4bvOES;
    PFNGLVERTEX4DPROC epoxy_glVertex4d;
    PFNGLVERTEX4DVPROC epoxy_glVertex4dv;
    PFNGLVERTEX4FPROC epoxy_glVertex4f;
    PFNGLVERTEX4FVPROC epoxy_glVertex4fv;
    PFNGLVERTEX4HNVPROC epoxy_glVertex4hNV;
    PFNGLVERTEX4HVNVPROC epoxy_glVertex4hvNV;
    PFNGLVERTEX4IPROC epoxy_glVertex4i;
    PFNGLVERTEX4IVPROC epoxy_glVertex4iv;
    PFNGLVERTEX4SPROC epoxy_glVertex4s;
    PFNGLVERTEX4SVPROC epoxy_glVertex4sv;
    PFNGLVERTEX4XOESPROC epoxy_glVertex4xOES;
    PFNGLVERTEX4XVOESPROC epoxy_glVertex4xvOES;
    PFNGLVERTEXARRAYATTRIBBINDINGPROC epoxy_glVertexArrayAttribBinding;
    PFNGLVERTEXARRAYATTRIBFORMATPROC epoxy_glVertexArrayAttribFormat;
    PFNGLVERTEXARRAYATTRIBIFORMATPROC epoxy_glVertexArrayAttribIFormat;
    PFNGLVERTEXARRAYATTRIBLFORMATPROC epoxy_glVertexArrayAttribLFormat;
    PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC epoxy_glVertexArrayBindVertexBufferEXT;
    PFNGLVERTEXARRAYBINDINGDIVISORPROC epoxy_glVertexArrayBindingDivisor;
    PFNGLVERTEXARRAYCOLOROFFSETEXTPROC epoxy_glVertexArrayColorOffsetEXT;
    PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC epoxy_glVertexArrayEdgeFlagOffsetEXT;
    PFNGLVERTEXARRAYELEMENTBUFFERPROC epoxy_glVertexArrayElementBuffer;
    PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC epoxy_glVertexArrayFogCoordOffsetEXT;
    PFNGLVERTEXARRAYINDEXOFFSETEXTPROC epoxy_glVertexArrayIndexOffsetEXT;
    PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC epoxy_glVertexArrayMultiTexCoordOffsetEXT;
    PFNGLVERTEXARRAYNORMALOFFSETEXTPROC epoxy_glVertexArrayNormalOffsetEXT;
    PFNGLVERTEXARRAYPARAMETERIAPPLEPROC epoxy_glVertexArrayParameteriAPPLE;
    PFNGLVERTEXARRAYRANGEAPPLEPROC epoxy_glVertexArrayRangeAPPLE;
    PFNGLVERTEXARRAYRANGENVPROC epoxy_glVertexArrayRangeNV;
    PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC epoxy_glVertexArraySecondaryColorOffsetEXT;
    PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC epoxy_glVertexArrayTexCoordOffsetEXT;
    PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC epoxy_glVertexArrayVertexAttribBindingEXT;
    PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC epoxy_glVertexArrayVertexAttribDivisorEXT;
    PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC epoxy_glVertexArrayVertexAttribFormatEXT;
    PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC epoxy_glVertexArrayVertexAttribIFormatEXT;
    PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC epoxy_glVertexArrayVertexAttribIOffsetEXT;
    PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC epoxy_glVertexArrayVertexAttribLFormatEXT;
    PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC epoxy_glVertexArrayVertexAttribLOffsetEXT;
    PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC epoxy_glVertexArrayVertexAttribOffsetEXT;
    PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC epoxy_glVertexArrayVertexBindingDivisorEXT;
    PFNGLVERTEXARRAYVERTEXBUFFERPROC epoxy_glVertexArrayVertexBuffer;
    PFNGLVERTEXARRAYVERTEXBUFFERSPROC epoxy_glVertexArrayVertexBuffers;
    PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC epoxy_glVertexArrayVertexOffsetEXT;
    PFNGLVERTEXATTRIB1DPROC epoxy_glVertexAttrib1d;
    PFNGLVERTEXATTRIB1DARBPROC epoxy_glVertexAttrib1dARB;
    PFNGLVERTEXATTRIB1DNVPROC epoxy_glVertexAttrib1dNV;
    PFNGLVERTEXATTRIB1DVPROC epoxy_glVertexAttrib1dv;
    PFNGLVERTEXATTRIB1DVARBPROC epoxy_glVertexAttrib1dvARB;
    PFNGLVERTEXATTRIB1DVNVPROC epoxy_glVertexAttrib1dvNV;
    PFNGLVERTEXATTRIB1FPROC epoxy_glVertexAttrib1f;
    PFNGLVERTEXATTRIB1FARBPROC epoxy_glVertexAttrib1fARB;
    PFNGLVERTEXATTRIB1FNVPROC epoxy_glVertexAttrib1fNV;
    PFNGLVERTEXATTRIB1FVPROC epoxy_glVertexAttrib1fv;
    PFNGLVERTEXATTRIB1FVARBPROC epoxy_glVertexAttrib1fvARB;
    PFNGLVERTEXATTRIB1FVNVPROC epoxy_glVertexAttrib1fvNV;
    PFNGLVERTEXATTRIB1HNVPROC epoxy_glVertexAttrib1hNV;
    PFNGLVERTEXATTRIB1HVNVPROC epoxy_glVertexAttrib1hvNV;
    PFNGLVERTEXATTRIB1SPROC epoxy_glVertexAttrib1s;
    PFNGLVERTEXATTRIB1SARBPROC epoxy_glVertexAttrib1sARB;
    PFNGLVERTEXATTRIB1SNVPROC epoxy_glVertexAttrib1sNV;
    PFNGLVERTEXATTRIB1SVPROC epoxy_glVertexAttrib1sv;
    PFNGLVERTEXATTRIB1SVARBPROC epoxy_glVertexAttrib1svARB;
    PFNGLVERTEXATTRIB1SVNVPROC epoxy_glVertexAttrib1svNV;
    PFNGLVERTEXATTRIB2DPROC epoxy_glVertexAttrib2d;
    PFNGLVERTEXATTRIB2DARBPROC epoxy_glVertexAttrib2dARB;
    PFNGLVERTEXATTRIB2DNVPROC epoxy_glVertexAttrib2dNV;
    PFNGLVERTEXATTRIB2DVPROC epoxy_glVertexAttrib2dv;
    PFNGLVERTEXATTRIB2DVARBPROC epoxy_glVertexAttrib2dvARB;
    PFNGLVERTEXATTRIB2DVNVPROC epoxy_glVertexAttrib2dvNV;
    PFNGLVERTEXATTRIB2FPROC epoxy_glVertexAttrib2f;
    PFNGLVERTEXATTRIB2FARBPROC epoxy_glVertexAttrib2fARB;
    PFNGLVERTEXATTRIB2FNVPROC epoxy_glVertexAttrib2fNV;
    PFNGLVERTEXATTRIB2FVPROC epoxy_glVertexAttrib2fv;
    PFNGLVERTEXATTRIB2FVARBPROC epoxy_glVertexAttrib2fvARB;
    PFNGLVERTEXATTRIB2FVNVPROC epoxy_glVertexAttrib2fvNV;
    PFNGLVERTEXATTRIB2HNVPROC epoxy_glVertexAttrib2hNV;
    PFNGLVERTEXATTRIB2HVNVPROC epoxy_glVertexAttrib2hvNV;
    PFNGLVERTEXATTRIB2SPROC epoxy_glVertexAttrib2s;
    PFNGLVERTEXATTRIB2SARBPROC epoxy_glVertexAttrib2sARB;
    PFNGLVERTEXATTRIB2SNVPROC epoxy_glVertexAttrib2sNV;
    PFNGLVERTEXATTRIB2SVPROC epoxy_glVertexAttrib2sv;
    PFNGLVERTEXATTRIB2SVARBPROC epoxy_glVertexAttrib2svARB;
    PFNGLVERTEXATTRIB2SVNVPROC epoxy_glVertexAttrib2svNV;
    PFNGLVERTEXATTRIB3DPROC epoxy_glVertexAttrib3d;
    PFNGLVERTEXATTRIB3DARBPROC epoxy_glVertexAttrib3dARB;
    PFNGLVERTEXATTRIB3DNVPROC epoxy_glVertexAttrib3dNV;
    PFNGLVERTEXATTRIB3DVPROC epoxy_glVertexAttrib3dv;
    PFNGLVERTEXATTRIB3DVARBPROC epoxy_glVertexAttrib3dvARB;
    PFNGLVERTEXATTRIB3DVNVPROC epoxy_glVertexAttrib3dvNV;
    PFNGLVERTEXATTRIB3FPROC epoxy_glVertexAttrib3f;
    PFNGLVERTEXATTRIB3FARBPROC epoxy_glVertexAttrib3fARB;
    PFNGLVERTEXATTRIB3FNVPROC epoxy_glVertexAttrib3fNV;
    PFNGLVERTEXATTRIB3FVPROC epoxy_glVertexAttrib3fv;
    PFNGLVERTEXATTRIB3FVARBPROC epoxy_glVertexAttrib3fvARB;
    PFNGLVERTEXATTRIB3FVNVPROC epoxy_glVertexAttrib3fvNV;
    PFNGLVERTEXATTRIB3HNVPROC epoxy_glVertexAttrib3hNV;
    PFNGLVERTEXATTRIB3HVNVPROC epoxy_glVertexAttrib3hvNV;
    PFNGLVERTEXATTRIB3SPROC epoxy_glVertexAttrib3s;
    PFNGLVERTEXATTRIB3SARBPROC epoxy_glVertexAttrib3sARB;
    PFNGLVERTEXATTRIB3SNVPROC epoxy_glVertexAttrib3sNV;
    PFNGLVERTEXATTRIB3SVPROC epoxy_glVertexAttrib3sv;
    PFNGLVERTEXATTRIB3SVARBPROC epoxy_glVertexAttrib3svARB;
    PFNGLVERTEXATTRIB3SVNVPROC epoxy_glVertexAttrib3svNV;
    PFNGLVERTEXATTRIB4NBVPROC epoxy_glVertexAttrib4Nbv;
    PFNGLVERTEXATTRIB4NBVARBPROC epoxy_glVertexAttrib4NbvARB;
    PFNGLVERTEXATTRIB4NIVPROC epoxy_glVertexAttrib4Niv;
    PFNGLVERTEXATTRIB4NIVARBPROC epoxy_glVertexAttrib4NivARB;
    PFNGLVERTEXATTRIB4NSVPROC epoxy_glVertexAttrib4Nsv;
    PFNGLVERTEXATTRIB4NSVARBPROC epoxy_glVertexAttrib4NsvARB;
    PFNGLVERTEXATTRIB4NUBPROC epoxy_glVertexAttrib4Nub;
    PFNGLVERTEXATTRIB4NUBARBPROC epoxy_glVertexAttrib4NubARB;
    PFNGLVERTEXATTRIB4NUBVPROC epoxy_glVertexAttrib4Nubv;
    PFNGLVERTEXATTRIB4NUBVARBPROC epoxy_glVertexAttrib4NubvARB;
    PFNGLVERTEXATTRIB4NUIVPROC epoxy_glVertexAttrib4Nuiv;
    PFNGLVERTEXATTRIB4NUIVARBPROC epoxy_glVertexAttrib4NuivARB;
    PFNGLVERTEXATTRIB4NUSVPROC epoxy_glVertexAttrib4Nusv;
    PFNGLVERTEXATTRIB4NUSVARBPROC epoxy_glVertexAttrib4NusvARB;
    PFNGLVERTEXATTRIB4BVPROC epoxy_glVertexAttrib4bv;
    PFNGLVERTEXATTRIB4BVARBPROC epoxy_glVertexAttrib4bvARB;
    PFNGLVERTEXATTRIB4DPROC epoxy_glVertexAttrib4d;
    PFNGLVERTEXATTRIB4DARBPROC epoxy_glVertexAttrib4dARB;
    PFNGLVERTEXATTRIB4DNVPROC epoxy_glVertexAttrib4dNV;
    PFNGLVERTEXATTRIB4DVPROC epoxy_glVertexAttrib4dv;
    PFNGLVERTEXATTRIB4DVARBPROC epoxy_glVertexAttrib4dvARB;
    PFNGLVERTEXATTRIB4DVNVPROC epoxy_glVertexAttrib4dvNV;
    PFNGLVERTEXATTRIB4FPROC epoxy_glVertexAttrib4f;
    PFNGLVERTEXATTRIB4FARBPROC epoxy_glVertexAttrib4fARB;
    PFNGLVERTEXATTRIB4FNVPROC epoxy_glVertexAttrib4fNV;
    PFNGLVERTEXATTRIB4FVPROC epoxy_glVertexAttrib4fv;
    PFNGLVERTEXATTRIB4FVARBPROC epoxy_glVertexAttrib4fvARB;
    PFNGLVERTEXATTRIB4FVNVPROC epoxy_glVertexAttrib4fvNV;
    PFNGLVERTEXATTRIB4HNVPROC epoxy_glVertexAttrib4hNV;
    PFNGLVERTEXATTRIB4HVNVPROC epoxy_glVertexAttrib4hvNV;
    PFNGLVERTEXATTRIB4IVPROC epoxy_glVertexAttrib4iv;
    PFNGLVERTEXATTRIB4IVARBPROC epoxy_glVertexAttrib4ivARB;
    PFNGLVERTEXATTRIB4SPROC epoxy_glVertexAttrib4s;
    PFNGLVERTEXATTRIB4SARBPROC epoxy_glVertexAttrib4sARB;
    PFNGLVERTEXATTRIB4SNVPROC epoxy_glVertexAttrib4sNV;
    PFNGLVERTEXATTRIB4SVPROC epoxy_glVertexAttrib4sv;
    PFNGLVERTEXATTRIB4SVARBPROC epoxy_glVertexAttrib4svARB;
    PFNGLVERTEXATTRIB4SVNVPROC epoxy_glVertexAttrib4svNV;
    PFNGLVERTEXATTRIB4UBNVPROC epoxy_glVertexAttrib4ubNV;
    PFNGLVERTEXATTRIB4UBVPROC epoxy_glVertexAttrib4ubv;
    PFNGLVERTEXATTRIB4UBVARBPROC epoxy_glVertexAttrib4ubvARB;
    PFNGLVERTEXATTRIB4UBVNVPROC epoxy_glVertexAttrib4ubvNV;
    PFNGLVERTEXATTRIB4UIVPROC epoxy_glVertexAttrib4uiv;
    PFNGLVERTEXATTRIB4UIVARBPROC epoxy_glVertexAttrib4uivARB;
    PFNGLVERTEXATTRIB4USVPROC epoxy_glVertexAttrib4usv;
    PFNGLVERTEXATTRIB4USVARBPROC epoxy_glVertexAttrib4usvARB;
    PFNGLVERTEXATTRIBARRAYOBJECTATIPROC epoxy_glVertexAttribArrayObjectATI;
    PFNGLVERTEXATTRIBBINDINGPROC epoxy_glVertexAttribBinding;
    PFNGLVERTEXATTRIBDIVISORPROC epoxy_glVertexAttribDivisor;
    PFNGLVERTEXATTRIBDIVISORANGLEPROC epoxy_glVertexAttribDivisorANGLE;
    PFNGLVERTEXATTRIBDIVISORARBPROC epoxy_glVertexAttribDivisorARB;
    PFNGLVERTEXATTRIBDIVISOREXTPROC epoxy_glVertexAttribDivisorEXT;
    PFNGLVERTEXATTRIBDIVISORNVPROC epoxy_glVertexAttribDivisorNV;
    PFNGLVERTEXATTRIBFORMATPROC epoxy_glVertexAttribFormat;
    PFNGLVERTEXATTRIBFORMATNVPROC epoxy_glVertexAttribFormatNV;
    PFNGLVERTEXATTRIBI1IPROC epoxy_glVertexAttribI1i;
    PFNGLVERTEXATTRIBI1IEXTPROC epoxy_glVertexAttribI1iEXT;
    PFNGLVERTEXATTRIBI1IVPROC epoxy_glVertexAttribI1iv;
    PFNGLVERTEXATTRIBI1IVEXTPROC epoxy_glVertexAttribI1ivEXT;
    PFNGLVERTEXATTRIBI1UIPROC epoxy_glVertexAttribI1ui;
    PFNGLVERTEXATTRIBI1UIEXTPROC epoxy_glVertexAttribI1uiEXT;
    PFNGLVERTEXATTRIBI1UIVPROC epoxy_glVertexAttribI1uiv;
    PFNGLVERTEXATTRIBI1UIVEXTPROC epoxy_glVertexAttribI1uivEXT;
    PFNGLVERTEXATTRIBI2IPROC epoxy_glVertexAttribI2i;
    PFNGLVERTEXATTRIBI2IEXTPROC epoxy_glVertexAttribI2iEXT;
    PFNGLVERTEXATTRIBI2IVPROC epoxy_glVertexAttribI2iv;
    PFNGLVERTEXATTRIBI2IVEXTPROC epoxy_glVertexAttribI2ivEXT;
    PFNGLVERTEXATTRIBI2UIPROC epoxy_glVertexAttribI2ui;
    PFNGLVERTEXATTRIBI2UIEXTPROC epoxy_glVertexAttribI2uiEXT;
    PFNGLVERTEXATTRIBI2UIVPROC epoxy_glVertexAttribI2uiv;
    PFNGLVERTEXATTRIBI2UIVEXTPROC epoxy_glVertexAttribI2uivEXT;
    PFNGLVERTEXATTRIBI3IPROC epoxy_glVertexAttribI3i;
    PFNGLVERTEXATTRIBI3IEXTPROC epoxy_glVertexAttribI3iEXT;
    PFNGLVERTEXATTRIBI3IVPROC epoxy_glVertexAttribI3iv;
    PFNGLVERTEXATTRIBI3IVEXTPROC epoxy_glVertexAttribI3ivEXT;
    PFNGLVERTEXATTRIBI3UIPROC epoxy_glVertexAttribI3ui;
    PFNGLVERTEXATTRIBI3UIEXTPROC epoxy_glVertexAttribI3uiEXT;
    PFNGLVERTEXATTRIBI3UIVPROC epoxy_glVertexAttribI3uiv;
    PFNGLVERTEXATTRIBI3UIVEXTPROC epoxy_glVertexAttribI3uivEXT;
    PFNGLVERTEXATTRIBI4BVPROC epoxy_glVertexAttribI4bv;
    PFNGLVERTEXATTRIBI4BVEXTPROC epoxy_glVertexAttribI4bvEXT;
    PFNGLVERTEXATTRIBI4IPROC epoxy_glVertexAttribI4i;
    PFNGLVERTEXATTRIBI4IEXTPROC epoxy_glVertexAttribI4iEXT;
    PFNGLVERTEXATTRIBI4IVPROC epoxy_glVertexAttribI4iv;
    PFNGLVERTEXATTRIBI4IVEXTPROC epoxy_glVertexAttribI4ivEXT;
    PFNGLVERTEXATTRIBI4SVPROC epoxy_glVertexAttribI4sv;
    PFNGLVERTEXATTRIBI4SVEXTPROC epoxy_glVertexAttribI4svEXT;
    PFNGLVERTEXATTRIBI4UBVPROC epoxy_glVertexAttribI4ubv;
    PFNGLVERTEXATTRIBI4UBVEXTPROC epoxy_glVertexAttribI4ubvEXT;
    PFNGLVERTEXATTRIBI4UIPROC epoxy_glVertexAttribI4ui;
    PFNGLVERTEXATTRIBI4UIEXTPROC epoxy_glVertexAttribI4uiEXT;
    PFNGLVERTEXATTRIBI4UIVPROC epoxy_glVertexAttribI4uiv;
    PFNGLVERTEXATTRIBI4UIVEXTPROC epoxy_glVertexAttribI4uivEXT;
    PFNGLVERTEXATTRIBI4USVPROC epoxy_glVertexAttribI4usv;
    PFNGLVERTEXATTRIBI4USVEXTPROC epoxy_glVertexAttribI4usvEXT;
    PFNGLVERTEXATTRIBIFORMATPROC epoxy_glVertexAttribIFormat;
    PFNGLVERTEXATTRIBIFORMATNVPROC epoxy_glVertexAttribIFormatNV;
    PFNGLVERTEXATTRIBIPOINTERPROC epoxy_glVertexAttribIPointer;
    PFNGLVERTEXATTRIBIPOINTEREXTPROC epoxy_glVertexAttribIPointerEXT;
    PFNGLVERTEXATTRIBL1DPROC epoxy_glVertexAttribL1d;
    PFNGLVERTEXATTRIBL1DEXTPROC epoxy_glVertexAttribL1dEXT;
    PFNGLVERTEXATTRIBL1DVPROC epoxy_glVertexAttribL1dv;
    PFNGLVERTEXATTRIBL1DVEXTPROC epoxy_glVertexAttribL1dvEXT;
    PFNGLVERTEXATTRIBL1I64NVPROC epoxy_glVertexAttribL1i64NV;
    PFNGLVERTEXATTRIBL1I64VNVPROC epoxy_glVertexAttribL1i64vNV;
    PFNGLVERTEXATTRIBL1UI64ARBPROC epoxy_glVertexAttribL1ui64ARB;
    PFNGLVERTEXATTRIBL1UI64NVPROC epoxy_glVertexAttribL1ui64NV;
    PFNGLVERTEXATTRIBL1UI64VARBPROC epoxy_glVertexAttribL1ui64vARB;
    PFNGLVERTEXATTRIBL1UI64VNVPROC epoxy_glVertexAttribL1ui64vNV;
    PFNGLVERTEXATTRIBL2DPROC epoxy_glVertexAttribL2d;
    PFNGLVERTEXATTRIBL2DEXTPROC epoxy_glVertexAttribL2dEXT;
    PFNGLVERTEXATTRIBL2DVPROC epoxy_glVertexAttribL2dv;
    PFNGLVERTEXATTRIBL2DVEXTPROC epoxy_glVertexAttribL2dvEXT;
    PFNGLVERTEXATTRIBL2I64NVPROC epoxy_glVertexAttribL2i64NV;
    PFNGLVERTEXATTRIBL2I64VNVPROC epoxy_glVertexAttribL2i64vNV;
    PFNGLVERTEXATTRIBL2UI64NVPROC epoxy_glVertexAttribL2ui64NV;
    PFNGLVERTEXATTRIBL2UI64VNVPROC epoxy_glVertexAttribL2ui64vNV;
    PFNGLVERTEXATTRIBL3DPROC epoxy_glVertexAttribL3d;
    PFNGLVERTEXATTRIBL3DEXTPROC epoxy_glVertexAttribL3dEXT;
    PFNGLVERTEXATTRIBL3DVPROC epoxy_glVertexAttribL3dv;
    PFNGLVERTEXATTRIBL3DVEXTPROC epoxy_glVertexAttribL3dvEXT;
    PFNGLVERTEXATTRIBL3I64NVPROC epoxy_glVertexAttribL3i64NV;
    PFNGLVERTEXATTRIBL3I64VNVPROC epoxy_glVertexAttribL3i64vNV;
    PFNGLVERTEXATTRIBL3UI64NVPROC epoxy_glVertexAttribL3ui64NV;
    PFNGLVERTEXATTRIBL3UI64VNVPROC epoxy_glVertexAttribL3ui64vNV;
    PFNGLVERTEXATTRIBL4DPROC epoxy_glVertexAttribL4d;
    PFNGLVERTEXATTRIBL4DEXTPROC epoxy_glVertexAttribL4dEXT;
    PFNGLVERTEXATTRIBL4DVPROC epoxy_glVertexAttribL4dv;
    PFNGLVERTEXATTRIBL4DVEXTPROC epoxy_glVertexAttribL4dvEXT;
    PFNGLVERTEXATTRIBL4I64NVPROC epoxy_glVertexAttribL4i64NV;
    PFNGLVERTEXATTRIBL4I64VNVPROC epoxy_glVertexAttribL4i64vNV;
    PFNGLVERTEXATTRIBL4UI64NVPROC epoxy_glVertexAttribL4ui64NV;
    PFNGLVERTEXATTRIBL4UI64VNVPROC epoxy_glVertexAttribL4ui64vNV;
    PFNGLVERTEXATTRIBLFORMATPROC epoxy_glVertexAttribLFormat;
    PFNGLVERTEXATTRIBLFORMATNVPROC epoxy_glVertexAttribLFormatNV;
    PFNGLVERTEXATTRIBLPOINTERPROC epoxy_glVertexAttribLPointer;
    PFNGLVERTEXATTRIBLPOINTEREXTPROC epoxy_glVertexAttribLPointerEXT;
    PFNGLVERTEXATTRIBP1UIPROC epoxy_glVertexAttribP1ui;
    PFNGLVERTEXATTRIBP1UIVPROC epoxy_glVertexAttribP1uiv;
    PFNGLVERTEXATTRIBP2UIPROC epoxy_glVertexAttribP2ui;
    PFNGLVERTEXATTRIBP2UIVPROC epoxy_glVertexAttribP2uiv;
    PFNGLVERTEXATTRIBP3UIPROC epoxy_glVertexAttribP3ui;
    PFNGLVERTEXATTRIBP3UIVPROC epoxy_glVertexAttribP3uiv;
    PFNGLVERTEXATTRIBP4UIPROC epoxy_glVertexAttribP4ui;
    PFNGLVERTEXATTRIBP4UIVPROC epoxy_glVertexAttribP4uiv;
    PFNGLVERTEXATTRIBPARAMETERIAMDPROC epoxy_glVertexAttribParameteriAMD;
    PFNGLVERTEXATTRIBPOINTERPROC epoxy_glVertexAttribPointer;
    PFNGLVERTEXATTRIBPOINTERARBPROC epoxy_glVertexAttribPointerARB;
    PFNGLVERTEXATTRIBPOINTERNVPROC epoxy_glVertexAttribPointerNV;
    PFNGLVERTEXATTRIBS1DVNVPROC epoxy_glVertexAttribs1dvNV;
    PFNGLVERTEXATTRIBS1FVNVPROC epoxy_glVertexAttribs1fvNV;
    PFNGLVERTEXATTRIBS1HVNVPROC epoxy_glVertexAttribs1hvNV;
    PFNGLVERTEXATTRIBS1SVNVPROC epoxy_glVertexAttribs1svNV;
    PFNGLVERTEXATTRIBS2DVNVPROC epoxy_glVertexAttribs2dvNV;
    PFNGLVERTEXATTRIBS2FVNVPROC epoxy_glVertexAttribs2fvNV;
    PFNGLVERTEXATTRIBS2HVNVPROC epoxy_glVertexAttribs2hvNV;
    PFNGLVERTEXATTRIBS2SVNVPROC epoxy_glVertexAttribs2svNV;
    PFNGLVERTEXATTRIBS3DVNVPROC epoxy_glVertexAttribs3dvNV;
    PFNGLVERTEXATTRIBS3FVNVPROC epoxy_glVertexAttribs3fvNV;
    PFNGLVERTEXATTRIBS3HVNVPROC epoxy_glVertexAttribs3hvNV;
    PFNGLVERTEXATTRIBS3SVNVPROC epoxy_glVertexAttribs3svNV;
    PFNGLVERTEXATTRIBS4DVNVPROC epoxy_glVertexAttribs4dvNV;
    PFNGLVERTEXATTRIBS4FVNVPROC epoxy_glVertexAttribs4fvNV;
    PFNGLVERTEXATTRIBS4HVNVPROC epoxy_glVertexAttribs4hvNV;
    PFNGLVERTEXATTRIBS4SVNVPROC epoxy_glVertexAttribs4svNV;
    PFNGLVERTEXATTRIBS4UBVNVPROC epoxy_glVertexAttribs4ubvNV;
    PFNGLVERTEXBINDINGDIVISORPROC epoxy_glVertexBindingDivisor;
    PFNGLVERTEXBLENDARBPROC epoxy_glVertexBlendARB;
    PFNGLVERTEXBLENDENVFATIPROC epoxy_glVertexBlendEnvfATI;
    PFNGLVERTEXBLENDENVIATIPROC epoxy_glVertexBlendEnviATI;
    PFNGLVERTEXFORMATNVPROC epoxy_glVertexFormatNV;
    PFNGLVERTEXP2UIPROC epoxy_glVertexP2ui;
    PFNGLVERTEXP2UIVPROC epoxy_glVertexP2uiv;
    PFNGLVERTEXP3UIPROC epoxy_glVertexP3ui;
    PFNGLVERTEXP3UIVPROC epoxy_glVertexP3uiv;
    PFNGLVERTEXP4UIPROC epoxy_glVertexP4ui;
    PFNGLVERTEXP4UIVPROC epoxy_glVertexP4uiv;
    PFNGLVERTEXPOINTERPROC epoxy_glVertexPointer;
    PFNGLVERTEXPOINTEREXTPROC epoxy_glVertexPointerEXT;
    PFNGLVERTEXPOINTERLISTIBMPROC epoxy_glVertexPointerListIBM;
    PFNGLVERTEXPOINTERVINTELPROC epoxy_glVertexPointervINTEL;
    PFNGLVERTEXSTREAM1DATIPROC epoxy_glVertexStream1dATI;
    PFNGLVERTEXSTREAM1DVATIPROC epoxy_glVertexStream1dvATI;
    PFNGLVERTEXSTREAM1FATIPROC epoxy_glVertexStream1fATI;
    PFNGLVERTEXSTREAM1FVATIPROC epoxy_glVertexStream1fvATI;
    PFNGLVERTEXSTREAM1IATIPROC epoxy_glVertexStream1iATI;
    PFNGLVERTEXSTREAM1IVATIPROC epoxy_glVertexStream1ivATI;
    PFNGLVERTEXSTREAM1SATIPROC epoxy_glVertexStream1sATI;
    PFNGLVERTEXSTREAM1SVATIPROC epoxy_glVertexStream1svATI;
    PFNGLVERTEXSTREAM2DATIPROC epoxy_glVertexStream2dATI;
    PFNGLVERTEXSTREAM2DVATIPROC epoxy_glVertexStream2dvATI;
    PFNGLVERTEXSTREAM2FATIPROC epoxy_glVertexStream2fATI;
    PFNGLVERTEXSTREAM2FVATIPROC epoxy_glVertexStream2fvATI;
    PFNGLVERTEXSTREAM2IATIPROC epoxy_glVertexStream2iATI;
    PFNGLVERTEXSTREAM2IVATIPROC epoxy_glVertexStream2ivATI;
    PFNGLVERTEXSTREAM2SATIPROC epoxy_glVertexStream2sATI;
    PFNGLVERTEXSTREAM2SVATIPROC epoxy_glVertexStream2svATI;
    PFNGLVERTEXSTREAM3DATIPROC epoxy_glVertexStream3dATI;
    PFNGLVERTEXSTREAM3DVATIPROC epoxy_glVertexStream3dvATI;
    PFNGLVERTEXSTREAM3FATIPROC epoxy_glVertexStream3fATI;
    PFNGLVERTEXSTREAM3FVATIPROC epoxy_glVertexStream3fvATI;
    PFNGLVERTEXSTREAM3IATIPROC epoxy_glVertexStream3iATI;
    PFNGLVERTEXSTREAM3IVATIPROC epoxy_glVertexStream3ivATI;
    PFNGLVERTEXSTREAM3SATIPROC epoxy_glVertexStream3sATI;
    PFNGLVERTEXSTREAM3SVATIPROC epoxy_glVertexStream3svATI;
    PFNGLVERTEXSTREAM4DATIPROC epoxy_glVertexStream4dATI;
    PFNGLVERTEXSTREAM4DVATIPROC epoxy_glVertexStream4dvATI;
    PFNGLVERTEXSTREAM4FATIPROC epoxy_glVertexStream4fATI;
    PFNGLVERTEXSTREAM4FVATIPROC epoxy_glVertexStream4fvATI;
    PFNGLVERTEXSTREAM4IATIPROC epoxy_glVertexStream4iATI;
    PFNGLVERTEXSTREAM4IVATIPROC epoxy_glVertexStream4ivATI;
    PFNGLVERTEXSTREAM4SATIPROC epoxy_glVertexStream4sATI;
    PFNGLVERTEXSTREAM4SVATIPROC epoxy_glVertexStream4svATI;
    PFNGLVERTEXWEIGHTPOINTEREXTPROC epoxy_glVertexWeightPointerEXT;
    PFNGLVERTEXWEIGHTFEXTPROC epoxy_glVertexWeightfEXT;
    PFNGLVERTEXWEIGHTFVEXTPROC epoxy_glVertexWeightfvEXT;
    PFNGLVERTEXWEIGHTHNVPROC epoxy_glVertexWeighthNV;
    PFNGLVERTEXWEIGHTHVNVPROC epoxy_glVertexWeighthvNV;
    PFNGLVIDEOCAPTURENVPROC epoxy_glVideoCaptureNV;
    PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC epoxy_glVideoCaptureStreamParameterdvNV;
    PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC epoxy_glVideoCaptureStreamParameterfvNV;
    PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC epoxy_glVideoCaptureStreamParameterivNV;
    PFNGLVIEWPORTPROC epoxy_glViewport;
    PFNGLVIEWPORTARRAYVPROC epoxy_glViewportArrayv;
    PFNGLVIEWPORTARRAYVNVPROC epoxy_glViewportArrayvNV;
    PFNGLVIEWPORTINDEXEDFPROC epoxy_glViewportIndexedf;
    PFNGLVIEWPORTINDEXEDFNVPROC epoxy_glViewportIndexedfNV;
    PFNGLVIEWPORTINDEXEDFVPROC epoxy_glViewportIndexedfv;
    PFNGLVIEWPORTINDEXEDFVNVPROC epoxy_glViewportIndexedfvNV;
    PFNGLWAITSYNCPROC epoxy_glWaitSync;
    PFNGLWAITSYNCAPPLEPROC epoxy_glWaitSyncAPPLE;
    PFNGLWEIGHTPATHSNVPROC epoxy_glWeightPathsNV;
    PFNGLWEIGHTPOINTERARBPROC epoxy_glWeightPointerARB;
    PFNGLWEIGHTPOINTEROESPROC epoxy_glWeightPointerOES;
    PFNGLWEIGHTBVARBPROC epoxy_glWeightbvARB;
    PFNGLWEIGHTDVARBPROC epoxy_glWeightdvARB;
    PFNGLWEIGHTFVARBPROC epoxy_glWeightfvARB;
    PFNGLWEIGHTIVARBPROC epoxy_glWeightivARB;
    PFNGLWEIGHTSVARBPROC epoxy_glWeightsvARB;
    PFNGLWEIGHTUBVARBPROC epoxy_glWeightubvARB;
    PFNGLWEIGHTUIVARBPROC epoxy_glWeightuivARB;
    PFNGLWEIGHTUSVARBPROC epoxy_glWeightusvARB;
    PFNGLWINDOWPOS2DPROC epoxy_glWindowPos2d;
    PFNGLWINDOWPOS2DARBPROC epoxy_glWindowPos2dARB;
    PFNGLWINDOWPOS2DMESAPROC epoxy_glWindowPos2dMESA;
    PFNGLWINDOWPOS2DVPROC epoxy_glWindowPos2dv;
    PFNGLWINDOWPOS2DVARBPROC epoxy_glWindowPos2dvARB;
    PFNGLWINDOWPOS2DVMESAPROC epoxy_glWindowPos2dvMESA;
    PFNGLWINDOWPOS2FPROC epoxy_glWindowPos2f;
    PFNGLWINDOWPOS2FARBPROC epoxy_glWindowPos2fARB;
    PFNGLWINDOWPOS2FMESAPROC epoxy_glWindowPos2fMESA;
    PFNGLWINDOWPOS2FVPROC epoxy_glWindowPos2fv;
    PFNGLWINDOWPOS2FVARBPROC epoxy_glWindowPos2fvARB;
    PFNGLWINDOWPOS2FVMESAPROC epoxy_glWindowPos2fvMESA;
    PFNGLWINDOWPOS2IPROC epoxy_glWindowPos2i;
    PFNGLWINDOWPOS2IARBPROC epoxy_glWindowPos2iARB;
    PFNGLWINDOWPOS2IMESAPROC epoxy_glWindowPos2iMESA;
    PFNGLWINDOWPOS2IVPROC epoxy_glWindowPos2iv;
    PFNGLWINDOWPOS2IVARBPROC epoxy_glWindowPos2ivARB;
    PFNGLWINDOWPOS2IVMESAPROC epoxy_glWindowPos2ivMESA;
    PFNGLWINDOWPOS2SPROC epoxy_glWindowPos2s;
    PFNGLWINDOWPOS2SARBPROC epoxy_glWindowPos2sARB;
    PFNGLWINDOWPOS2SMESAPROC epoxy_glWindowPos2sMESA;
    PFNGLWINDOWPOS2SVPROC epoxy_glWindowPos2sv;
    PFNGLWINDOWPOS2SVARBPROC epoxy_glWindowPos2svARB;
    PFNGLWINDOWPOS2SVMESAPROC epoxy_glWindowPos2svMESA;
    PFNGLWINDOWPOS3DPROC epoxy_glWindowPos3d;
    PFNGLWINDOWPOS3DARBPROC epoxy_glWindowPos3dARB;
    PFNGLWINDOWPOS3DMESAPROC epoxy_glWindowPos3dMESA;
    PFNGLWINDOWPOS3DVPROC epoxy_glWindowPos3dv;
    PFNGLWINDOWPOS3DVARBPROC epoxy_glWindowPos3dvARB;
    PFNGLWINDOWPOS3DVMESAPROC epoxy_glWindowPos3dvMESA;
    PFNGLWINDOWPOS3FPROC epoxy_glWindowPos3f;
    PFNGLWINDOWPOS3FARBPROC epoxy_glWindowPos3fARB;
    PFNGLWINDOWPOS3FMESAPROC epoxy_glWindowPos3fMESA;
    PFNGLWINDOWPOS3FVPROC epoxy_glWindowPos3fv;
    PFNGLWINDOWPOS3FVARBPROC epoxy_glWindowPos3fvARB;
    PFNGLWINDOWPOS3FVMESAPROC epoxy_glWindowPos3fvMESA;
    PFNGLWINDOWPOS3IPROC epoxy_glWindowPos3i;
    PFNGLWINDOWPOS3IARBPROC epoxy_glWindowPos3iARB;
    PFNGLWINDOWPOS3IMESAPROC epoxy_glWindowPos3iMESA;
    PFNGLWINDOWPOS3IVPROC epoxy_glWindowPos3iv;
    PFNGLWINDOWPOS3IVARBPROC epoxy_glWindowPos3ivARB;
    PFNGLWINDOWPOS3IVMESAPROC epoxy_glWindowPos3ivMESA;
    PFNGLWINDOWPOS3SPROC epoxy_glWindowPos3s;
    PFNGLWINDOWPOS3SARBPROC epoxy_glWindowPos3sARB;
    PFNGLWINDOWPOS3SMESAPROC epoxy_glWindowPos3sMESA;
    PFNGLWINDOWPOS3SVPROC epoxy_glWindowPos3sv;
    PFNGLWINDOWPOS3SVARBPROC epoxy_glWindowPos3svARB;
    PFNGLWINDOWPOS3SVMESAPROC epoxy_glWindowPos3svMESA;
    PFNGLWINDOWPOS4DMESAPROC epoxy_glWindowPos4dMESA;
    PFNGLWINDOWPOS4DVMESAPROC epoxy_glWindowPos4dvMESA;
    PFNGLWINDOWPOS4FMESAPROC epoxy_glWindowPos4fMESA;
    PFNGLWINDOWPOS4FVMESAPROC epoxy_glWindowPos4fvMESA;
    PFNGLWINDOWPOS4IMESAPROC epoxy_glWindowPos4iMESA;
    PFNGLWINDOWPOS4IVMESAPROC epoxy_glWindowPos4ivMESA;
    PFNGLWINDOWPOS4SMESAPROC epoxy_glWindowPos4sMESA;
    PFNGLWINDOWPOS4SVMESAPROC epoxy_glWindowPos4svMESA;
    PFNGLWRITEMASKEXTPROC epoxy_glWriteMaskEXT;
};

#if USING_DISPATCH_TABLE
static inline struct dispatch_table *
get_dispatch_table(void);

#endif
enum gl_provider {
    gl_provider_terminator = 0,
    Desktop_OpenGL_1_0,
    Desktop_OpenGL_1_1,
    Desktop_OpenGL_1_2,
    Desktop_OpenGL_1_3,
    Desktop_OpenGL_1_4,
    Desktop_OpenGL_1_5,
    Desktop_OpenGL_2_0,
    Desktop_OpenGL_2_1,
    Desktop_OpenGL_3_0,
    Desktop_OpenGL_3_1,
    Desktop_OpenGL_3_2,
    Desktop_OpenGL_3_3,
    Desktop_OpenGL_4_0,
    Desktop_OpenGL_4_1,
    Desktop_OpenGL_4_2,
    Desktop_OpenGL_4_3,
    Desktop_OpenGL_4_4,
    Desktop_OpenGL_4_5,
    GL_extension_GL_3DFX_tbuffer,
    GL_extension_GL_AMD_debug_output,
    GL_extension_GL_AMD_draw_buffers_blend,
    GL_extension_GL_AMD_gpu_shader_int64,
    GL_extension_GL_AMD_interleaved_elements,
    GL_extension_GL_AMD_multi_draw_indirect,
    GL_extension_GL_AMD_name_gen_delete,
    GL_extension_GL_AMD_occlusion_query_event,
    GL_extension_GL_AMD_performance_monitor,
    GL_extension_GL_AMD_sample_positions,
    GL_extension_GL_AMD_sparse_texture,
    GL_extension_GL_AMD_stencil_operation_extended,
    GL_extension_GL_AMD_vertex_shader_tessellator,
    GL_extension_GL_ANGLE_framebuffer_blit,
    GL_extension_GL_ANGLE_framebuffer_multisample,
    GL_extension_GL_ANGLE_instanced_arrays,
    GL_extension_GL_ANGLE_translated_shader_source,
    GL_extension_GL_APPLE_copy_texture_levels,
    GL_extension_GL_APPLE_element_array,
    GL_extension_GL_APPLE_fence,
    GL_extension_GL_APPLE_flush_buffer_range,
    GL_extension_GL_APPLE_framebuffer_multisample,
    GL_extension_GL_APPLE_object_purgeable,
    GL_extension_GL_APPLE_sync,
    GL_extension_GL_APPLE_texture_range,
    GL_extension_GL_APPLE_vertex_array_object,
    GL_extension_GL_APPLE_vertex_array_range,
    GL_extension_GL_APPLE_vertex_program_evaluators,
    GL_extension_GL_ARB_ES2_compatibility,
    GL_extension_GL_ARB_ES3_1_compatibility,
    GL_extension_GL_ARB_base_instance,
    GL_extension_GL_ARB_bindless_texture,
    GL_extension_GL_ARB_blend_func_extended,
    GL_extension_GL_ARB_buffer_storage,
    GL_extension_GL_ARB_cl_event,
    GL_extension_GL_ARB_clear_buffer_object,
    GL_extension_GL_ARB_clear_texture,
    GL_extension_GL_ARB_clip_control,
    GL_extension_GL_ARB_color_buffer_float,
    GL_extension_GL_ARB_compute_shader,
    GL_extension_GL_ARB_compute_variable_group_size,
    GL_extension_GL_ARB_copy_buffer,
    GL_extension_GL_ARB_copy_image,
    GL_extension_GL_ARB_debug_output,
    GL_extension_GL_ARB_direct_state_access,
    GL_extension_GL_ARB_draw_buffers,
    GL_extension_GL_ARB_draw_buffers_blend,
    GL_extension_GL_ARB_draw_elements_base_vertex,
    GL_extension_GL_ARB_draw_indirect,
    GL_extension_GL_ARB_draw_instanced,
    GL_extension_GL_ARB_fragment_program,
    GL_extension_GL_ARB_framebuffer_no_attachments,
    GL_extension_GL_ARB_framebuffer_object,
    GL_extension_GL_ARB_geometry_shader4,
    GL_extension_GL_ARB_get_program_binary,
    GL_extension_GL_ARB_get_texture_sub_image,
    GL_extension_GL_ARB_gpu_shader_fp64,
    GL_extension_GL_ARB_imaging,
    GL_extension_GL_ARB_indirect_parameters,
    GL_extension_GL_ARB_instanced_arrays,
    GL_extension_GL_ARB_internalformat_query2,
    GL_extension_GL_ARB_internalformat_query,
    GL_extension_GL_ARB_invalidate_subdata,
    GL_extension_GL_ARB_map_buffer_range,
    GL_extension_GL_ARB_matrix_palette,
    GL_extension_GL_ARB_multi_bind,
    GL_extension_GL_ARB_multi_draw_indirect,
    GL_extension_GL_ARB_multisample,
    GL_extension_GL_ARB_multitexture,
    GL_extension_GL_ARB_occlusion_query,
    GL_extension_GL_ARB_point_parameters,
    GL_extension_GL_ARB_program_interface_query,
    GL_extension_GL_ARB_provoking_vertex,
    GL_extension_GL_ARB_robustness,
    GL_extension_GL_ARB_sample_shading,
    GL_extension_GL_ARB_sampler_objects,
    GL_extension_GL_ARB_separate_shader_objects,
    GL_extension_GL_ARB_shader_atomic_counters,
    GL_extension_GL_ARB_shader_image_load_store,
    GL_extension_GL_ARB_shader_objects,
    GL_extension_GL_ARB_shader_storage_buffer_object,
    GL_extension_GL_ARB_shader_subroutine,
    GL_extension_GL_ARB_shading_language_include,
    GL_extension_GL_ARB_sparse_buffer,
    GL_extension_GL_ARB_sparse_texture,
    GL_extension_GL_ARB_sync,
    GL_extension_GL_ARB_tessellation_shader,
    GL_extension_GL_ARB_texture_barrier,
    GL_extension_GL_ARB_texture_buffer_object,
    GL_extension_GL_ARB_texture_buffer_range,
    GL_extension_GL_ARB_texture_compression,
    GL_extension_GL_ARB_texture_multisample,
    GL_extension_GL_ARB_texture_storage,
    GL_extension_GL_ARB_texture_storage_multisample,
    GL_extension_GL_ARB_texture_view,
    GL_extension_GL_ARB_timer_query,
    GL_extension_GL_ARB_transform_feedback2,
    GL_extension_GL_ARB_transform_feedback3,
    GL_extension_GL_ARB_transform_feedback_instanced,
    GL_extension_GL_ARB_transpose_matrix,
    GL_extension_GL_ARB_uniform_buffer_object,
    GL_extension_GL_ARB_vertex_array_object,
    GL_extension_GL_ARB_vertex_attrib_64bit,
    GL_extension_GL_ARB_vertex_attrib_binding,
    GL_extension_GL_ARB_vertex_blend,
    GL_extension_GL_ARB_vertex_buffer_object,
    GL_extension_GL_ARB_vertex_program,
    GL_extension_GL_ARB_vertex_shader,
    GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
    GL_extension_GL_ARB_viewport_array,
    GL_extension_GL_ARB_window_pos,
    GL_extension_GL_ATI_draw_buffers,
    GL_extension_GL_ATI_element_array,
    GL_extension_GL_ATI_envmap_bumpmap,
    GL_extension_GL_ATI_fragment_shader,
    GL_extension_GL_ATI_map_object_buffer,
    GL_extension_GL_ATI_pn_triangles,
    GL_extension_GL_ATI_separate_stencil,
    GL_extension_GL_ATI_vertex_array_object,
    GL_extension_GL_ATI_vertex_attrib_array_object,
    GL_extension_GL_ATI_vertex_streams,
    GL_extension_GL_EXT_base_instance,
    GL_extension_GL_EXT_bindable_uniform,
    GL_extension_GL_EXT_blend_color,
    GL_extension_GL_EXT_blend_equation_separate,
    GL_extension_GL_EXT_blend_func_separate,
    GL_extension_GL_EXT_blend_minmax,
    GL_extension_GL_EXT_buffer_storage,
    GL_extension_GL_EXT_color_subtable,
    GL_extension_GL_EXT_compiled_vertex_array,
    GL_extension_GL_EXT_convolution,
    GL_extension_GL_EXT_coordinate_frame,
    GL_extension_GL_EXT_copy_image,
    GL_extension_GL_EXT_copy_texture,
    GL_extension_GL_EXT_cull_vertex,
    GL_extension_GL_EXT_debug_label,
    GL_extension_GL_EXT_debug_marker,
    GL_extension_GL_EXT_depth_bounds_test,
    GL_extension_GL_EXT_direct_state_access,
    GL_extension_GL_EXT_discard_framebuffer,
    GL_extension_GL_EXT_disjoint_timer_query,
    GL_extension_GL_EXT_draw_buffers2,
    GL_extension_GL_EXT_draw_buffers,
    GL_extension_GL_EXT_draw_buffers_indexed,
    GL_extension_GL_EXT_draw_elements_base_vertex,
    GL_extension_GL_EXT_draw_instanced,
    GL_extension_GL_EXT_draw_range_elements,
    GL_extension_GL_EXT_fog_coord,
    GL_extension_GL_EXT_framebuffer_blit,
    GL_extension_GL_EXT_framebuffer_multisample,
    GL_extension_GL_EXT_framebuffer_object,
    GL_extension_GL_EXT_geometry_shader4,
    GL_extension_GL_EXT_geometry_shader,
    GL_extension_GL_EXT_gpu_program_parameters,
    GL_extension_GL_EXT_gpu_shader4,
    GL_extension_GL_EXT_histogram,
    GL_extension_GL_EXT_index_func,
    GL_extension_GL_EXT_index_material,
    GL_extension_GL_EXT_instanced_arrays,
    GL_extension_GL_EXT_light_texture,
    GL_extension_GL_EXT_map_buffer_range,
    GL_extension_GL_EXT_multi_draw_arrays,
    GL_extension_GL_EXT_multi_draw_indirect,
    GL_extension_GL_EXT_multisample,
    GL_extension_GL_EXT_multisampled_render_to_texture,
    GL_extension_GL_EXT_multiview_draw_buffers,
    GL_extension_GL_EXT_occlusion_query_boolean,
    GL_extension_GL_EXT_paletted_texture,
    GL_extension_GL_EXT_pixel_transform,
    GL_extension_GL_EXT_point_parameters,
    GL_extension_GL_EXT_polygon_offset,
    GL_extension_GL_EXT_polygon_offset_clamp,
    GL_extension_GL_EXT_primitive_bounding_box,
    GL_extension_GL_EXT_provoking_vertex,
    GL_extension_GL_EXT_raster_multisample,
    GL_extension_GL_EXT_robustness,
    GL_extension_GL_EXT_secondary_color,
    GL_extension_GL_EXT_separate_shader_objects,
    GL_extension_GL_EXT_shader_image_load_store,
    GL_extension_GL_EXT_sparse_texture,
    GL_extension_GL_EXT_stencil_clear_tag,
    GL_extension_GL_EXT_stencil_two_side,
    GL_extension_GL_EXT_subtexture,
    GL_extension_GL_EXT_tessellation_shader,
    GL_extension_GL_EXT_texture3D,
    GL_extension_GL_EXT_texture_array,
    GL_extension_GL_EXT_texture_border_clamp,
    GL_extension_GL_EXT_texture_buffer,
    GL_extension_GL_EXT_texture_buffer_object,
    GL_extension_GL_EXT_texture_filter_minmax,
    GL_extension_GL_EXT_texture_integer,
    GL_extension_GL_EXT_texture_object,
    GL_extension_GL_EXT_texture_perturb_normal,
    GL_extension_GL_EXT_texture_storage,
    GL_extension_GL_EXT_texture_view,
    GL_extension_GL_EXT_timer_query,
    GL_extension_GL_EXT_transform_feedback,
    GL_extension_GL_EXT_vertex_array,
    GL_extension_GL_EXT_vertex_attrib_64bit,
    GL_extension_GL_EXT_vertex_shader,
    GL_extension_GL_EXT_vertex_weighting,
    GL_extension_GL_EXT_x11_sync_object,
    GL_extension_GL_GREMEDY_frame_terminator,
    GL_extension_GL_GREMEDY_string_marker,
    GL_extension_GL_HP_image_transform,
    GL_extension_GL_IBM_multimode_draw_arrays,
    GL_extension_GL_IBM_static_data,
    GL_extension_GL_IBM_vertex_array_lists,
    GL_extension_GL_IMG_multisampled_render_to_texture,
    GL_extension_GL_IMG_user_clip_plane,
    GL_extension_GL_INGR_blend_func_separate,
    GL_extension_GL_INTEL_map_texture,
    GL_extension_GL_INTEL_parallel_arrays,
    GL_extension_GL_INTEL_performance_query,
    GL_extension_GL_KHR_blend_equation_advanced,
    GL_extension_GL_KHR_debug,
    GL_extension_GL_KHR_robustness,
    GL_extension_GL_MESA_resize_buffers,
    GL_extension_GL_MESA_window_pos,
    GL_extension_GL_NVX_conditional_render,
    GL_extension_GL_NV_bindless_multi_draw_indirect,
    GL_extension_GL_NV_bindless_multi_draw_indirect_count,
    GL_extension_GL_NV_bindless_texture,
    GL_extension_GL_NV_blend_equation_advanced,
    GL_extension_GL_NV_command_list,
    GL_extension_GL_NV_conditional_render,
    GL_extension_GL_NV_conservative_raster,
    GL_extension_GL_NV_copy_buffer,
    GL_extension_GL_NV_copy_image,
    GL_extension_GL_NV_coverage_sample,
    GL_extension_GL_NV_depth_buffer_float,
    GL_extension_GL_NV_draw_buffers,
    GL_extension_GL_NV_draw_instanced,
    GL_extension_GL_NV_draw_texture,
    GL_extension_GL_NV_evaluators,
    GL_extension_GL_NV_explicit_multisample,
    GL_extension_GL_NV_fence,
    GL_extension_GL_NV_fragment_coverage_to_color,
    GL_extension_GL_NV_fragment_program,
    GL_extension_GL_NV_framebuffer_blit,
    GL_extension_GL_NV_framebuffer_mixed_samples,
    GL_extension_GL_NV_framebuffer_multisample,
    GL_extension_GL_NV_framebuffer_multisample_coverage,
    GL_extension_GL_NV_geometry_program4,
    GL_extension_GL_NV_gpu_program4,
    GL_extension_GL_NV_gpu_program5,
    GL_extension_GL_NV_gpu_shader5,
    GL_extension_GL_NV_half_float,
    GL_extension_GL_NV_instanced_arrays,
    GL_extension_GL_NV_internalformat_sample_query,
    GL_extension_GL_NV_non_square_matrices,
    GL_extension_GL_NV_occlusion_query,
    GL_extension_GL_NV_parameter_buffer_object,
    GL_extension_GL_NV_path_rendering,
    GL_extension_GL_NV_pixel_data_range,
    GL_extension_GL_NV_point_sprite,
    GL_extension_GL_NV_polygon_mode,
    GL_extension_GL_NV_present_video,
    GL_extension_GL_NV_primitive_restart,
    GL_extension_GL_NV_read_buffer,
    GL_extension_GL_NV_register_combiners2,
    GL_extension_GL_NV_register_combiners,
    GL_extension_GL_NV_sample_locations,
    GL_extension_GL_NV_shader_buffer_load,
    GL_extension_GL_NV_texture_barrier,
    GL_extension_GL_NV_texture_multisample,
    GL_extension_GL_NV_transform_feedback2,
    GL_extension_GL_NV_transform_feedback,
    GL_extension_GL_NV_vdpau_interop,
    GL_extension_GL_NV_vertex_array_range,
    GL_extension_GL_NV_vertex_attrib_integer_64bit,
    GL_extension_GL_NV_vertex_buffer_unified_memory,
    GL_extension_GL_NV_vertex_program4,
    GL_extension_GL_NV_vertex_program,
    GL_extension_GL_NV_video_capture,
    GL_extension_GL_NV_viewport_array,
    GL_extension_GL_OES_EGL_image,
    GL_extension_GL_OES_blend_equation_separate,
    GL_extension_GL_OES_blend_func_separate,
    GL_extension_GL_OES_blend_subtract,
    GL_extension_GL_OES_byte_coordinates,
    GL_extension_GL_OES_copy_image,
    GL_extension_GL_OES_draw_buffers_indexed,
    GL_extension_GL_OES_draw_elements_base_vertex,
    GL_extension_GL_OES_draw_texture,
    GL_extension_GL_OES_fixed_point,
    GL_extension_GL_OES_framebuffer_object,
    GL_extension_GL_OES_geometry_shader,
    GL_extension_GL_OES_get_program_binary,
    GL_extension_GL_OES_mapbuffer,
    GL_extension_GL_OES_matrix_palette,
    GL_extension_GL_OES_point_size_array,
    GL_extension_GL_OES_primitive_bounding_box,
    GL_extension_GL_OES_query_matrix,
    GL_extension_GL_OES_sample_shading,
    GL_extension_GL_OES_single_precision,
    GL_extension_GL_OES_tessellation_shader,
    GL_extension_GL_OES_texture_3D,
    GL_extension_GL_OES_texture_border_clamp,
    GL_extension_GL_OES_texture_buffer,
    GL_extension_GL_OES_texture_cube_map,
    GL_extension_GL_OES_texture_storage_multisample_2d_array,
    GL_extension_GL_OES_texture_view,
    GL_extension_GL_OES_vertex_array_object,
    GL_extension_GL_OVR_multiview,
    GL_extension_GL_PGI_misc_hints,
    GL_extension_GL_QCOM_alpha_test,
    GL_extension_GL_QCOM_driver_control,
    GL_extension_GL_QCOM_extended_get2,
    GL_extension_GL_QCOM_extended_get,
    GL_extension_GL_QCOM_tiled_rendering,
    GL_extension_GL_SGIS_detail_texture,
    GL_extension_GL_SGIS_fog_function,
    GL_extension_GL_SGIS_multisample,
    GL_extension_GL_SGIS_pixel_texture,
    GL_extension_GL_SGIS_point_parameters,
    GL_extension_GL_SGIS_sharpen_texture,
    GL_extension_GL_SGIS_texture4D,
    GL_extension_GL_SGIS_texture_color_mask,
    GL_extension_GL_SGIS_texture_filter4,
    GL_extension_GL_SGIX_async,
    GL_extension_GL_SGIX_flush_raster,
    GL_extension_GL_SGIX_fragment_lighting,
    GL_extension_GL_SGIX_framezoom,
    GL_extension_GL_SGIX_igloo_interface,
    GL_extension_GL_SGIX_instruments,
    GL_extension_GL_SGIX_list_priority,
    GL_extension_GL_SGIX_pixel_texture,
    GL_extension_GL_SGIX_polynomial_ffd,
    GL_extension_GL_SGIX_reference_plane,
    GL_extension_GL_SGIX_sprite,
    GL_extension_GL_SGIX_tag_sample_buffer,
    GL_extension_GL_SGI_color_table,
    GL_extension_GL_SUNX_constant_data,
    GL_extension_GL_SUN_global_alpha,
    GL_extension_GL_SUN_mesh_array,
    GL_extension_GL_SUN_triangle_list,
    GL_extension_GL_SUN_vertex,
    OpenGL_ES_1_0,
    OpenGL_ES_2_0,
    OpenGL_ES_3_0,
    OpenGL_ES_3_1,
    always_present,
} PACKED;

static const char *enum_string =
    "Desktop OpenGL 1.0\0"
    "Desktop OpenGL 1.1\0"
    "Desktop OpenGL 1.2\0"
    "Desktop OpenGL 1.3\0"
    "Desktop OpenGL 1.4\0"
    "Desktop OpenGL 1.5\0"
    "Desktop OpenGL 2.0\0"
    "Desktop OpenGL 2.1\0"
    "Desktop OpenGL 3.0\0"
    "Desktop OpenGL 3.1\0"
    "Desktop OpenGL 3.2\0"
    "Desktop OpenGL 3.3\0"
    "Desktop OpenGL 4.0\0"
    "Desktop OpenGL 4.1\0"
    "Desktop OpenGL 4.2\0"
    "Desktop OpenGL 4.3\0"
    "Desktop OpenGL 4.4\0"
    "Desktop OpenGL 4.5\0"
    "GL extension \"GL_3DFX_tbuffer\"\0"
    "GL extension \"GL_AMD_debug_output\"\0"
    "GL extension \"GL_AMD_draw_buffers_blend\"\0"
    "GL extension \"GL_AMD_gpu_shader_int64\"\0"
    "GL extension \"GL_AMD_interleaved_elements\"\0"
    "GL extension \"GL_AMD_multi_draw_indirect\"\0"
    "GL extension \"GL_AMD_name_gen_delete\"\0"
    "GL extension \"GL_AMD_occlusion_query_event\"\0"
    "GL extension \"GL_AMD_performance_monitor\"\0"
    "GL extension \"GL_AMD_sample_positions\"\0"
    "GL extension \"GL_AMD_sparse_texture\"\0"
    "GL extension \"GL_AMD_stencil_operation_extended\"\0"
    "GL extension \"GL_AMD_vertex_shader_tessellator\"\0"
    "GL extension \"GL_ANGLE_framebuffer_blit\"\0"
    "GL extension \"GL_ANGLE_framebuffer_multisample\"\0"
    "GL extension \"GL_ANGLE_instanced_arrays\"\0"
    "GL extension \"GL_ANGLE_translated_shader_source\"\0"
    "GL extension \"GL_APPLE_copy_texture_levels\"\0"
    "GL extension \"GL_APPLE_element_array\"\0"
    "GL extension \"GL_APPLE_fence\"\0"
    "GL extension \"GL_APPLE_flush_buffer_range\"\0"
    "GL extension \"GL_APPLE_framebuffer_multisample\"\0"
    "GL extension \"GL_APPLE_object_purgeable\"\0"
    "GL extension \"GL_APPLE_sync\"\0"
    "GL extension \"GL_APPLE_texture_range\"\0"
    "GL extension \"GL_APPLE_vertex_array_object\"\0"
    "GL extension \"GL_APPLE_vertex_array_range\"\0"
    "GL extension \"GL_APPLE_vertex_program_evaluators\"\0"
    "GL extension \"GL_ARB_ES2_compatibility\"\0"
    "GL extension \"GL_ARB_ES3_1_compatibility\"\0"
    "GL extension \"GL_ARB_base_instance\"\0"
    "GL extension \"GL_ARB_bindless_texture\"\0"
    "GL extension \"GL_ARB_blend_func_extended\"\0"
    "GL extension \"GL_ARB_buffer_storage\"\0"
    "GL extension \"GL_ARB_cl_event\"\0"
    "GL extension \"GL_ARB_clear_buffer_object\"\0"
    "GL extension \"GL_ARB_clear_texture\"\0"
    "GL extension \"GL_ARB_clip_control\"\0"
    "GL extension \"GL_ARB_color_buffer_float\"\0"
    "GL extension \"GL_ARB_compute_shader\"\0"
    "GL extension \"GL_ARB_compute_variable_group_size\"\0"
    "GL extension \"GL_ARB_copy_buffer\"\0"
    "GL extension \"GL_ARB_copy_image\"\0"
    "GL extension \"GL_ARB_debug_output\"\0"
    "GL extension \"GL_ARB_direct_state_access\"\0"
    "GL extension \"GL_ARB_draw_buffers\"\0"
    "GL extension \"GL_ARB_draw_buffers_blend\"\0"
    "GL extension \"GL_ARB_draw_elements_base_vertex\"\0"
    "GL extension \"GL_ARB_draw_indirect\"\0"
    "GL extension \"GL_ARB_draw_instanced\"\0"
    "GL extension \"GL_ARB_fragment_program\"\0"
    "GL extension \"GL_ARB_framebuffer_no_attachments\"\0"
    "GL extension \"GL_ARB_framebuffer_object\"\0"
    "GL extension \"GL_ARB_geometry_shader4\"\0"
    "GL extension \"GL_ARB_get_program_binary\"\0"
    "GL extension \"GL_ARB_get_texture_sub_image\"\0"
    "GL extension \"GL_ARB_gpu_shader_fp64\"\0"
    "GL extension \"GL_ARB_imaging\"\0"
    "GL extension \"GL_ARB_indirect_parameters\"\0"
    "GL extension \"GL_ARB_instanced_arrays\"\0"
    "GL extension \"GL_ARB_internalformat_query2\"\0"
    "GL extension \"GL_ARB_internalformat_query\"\0"
    "GL extension \"GL_ARB_invalidate_subdata\"\0"
    "GL extension \"GL_ARB_map_buffer_range\"\0"
    "GL extension \"GL_ARB_matrix_palette\"\0"
    "GL extension \"GL_ARB_multi_bind\"\0"
    "GL extension \"GL_ARB_multi_draw_indirect\"\0"
    "GL extension \"GL_ARB_multisample\"\0"
    "GL extension \"GL_ARB_multitexture\"\0"
    "GL extension \"GL_ARB_occlusion_query\"\0"
    "GL extension \"GL_ARB_point_parameters\"\0"
    "GL extension \"GL_ARB_program_interface_query\"\0"
    "GL extension \"GL_ARB_provoking_vertex\"\0"
    "GL extension \"GL_ARB_robustness\"\0"
    "GL extension \"GL_ARB_sample_shading\"\0"
    "GL extension \"GL_ARB_sampler_objects\"\0"
    "GL extension \"GL_ARB_separate_shader_objects\"\0"
    "GL extension \"GL_ARB_shader_atomic_counters\"\0"
    "GL extension \"GL_ARB_shader_image_load_store\"\0"
    "GL extension \"GL_ARB_shader_objects\"\0"
    "GL extension \"GL_ARB_shader_storage_buffer_object\"\0"
    "GL extension \"GL_ARB_shader_subroutine\"\0"
    "GL extension \"GL_ARB_shading_language_include\"\0"
    "GL extension \"GL_ARB_sparse_buffer\"\0"
    "GL extension \"GL_ARB_sparse_texture\"\0"
    "GL extension \"GL_ARB_sync\"\0"
    "GL extension \"GL_ARB_tessellation_shader\"\0"
    "GL extension \"GL_ARB_texture_barrier\"\0"
    "GL extension \"GL_ARB_texture_buffer_object\"\0"
    "GL extension \"GL_ARB_texture_buffer_range\"\0"
    "GL extension \"GL_ARB_texture_compression\"\0"
    "GL extension \"GL_ARB_texture_multisample\"\0"
    "GL extension \"GL_ARB_texture_storage\"\0"
    "GL extension \"GL_ARB_texture_storage_multisample\"\0"
    "GL extension \"GL_ARB_texture_view\"\0"
    "GL extension \"GL_ARB_timer_query\"\0"
    "GL extension \"GL_ARB_transform_feedback2\"\0"
    "GL extension \"GL_ARB_transform_feedback3\"\0"
    "GL extension \"GL_ARB_transform_feedback_instanced\"\0"
    "GL extension \"GL_ARB_transpose_matrix\"\0"
    "GL extension \"GL_ARB_uniform_buffer_object\"\0"
    "GL extension \"GL_ARB_vertex_array_object\"\0"
    "GL extension \"GL_ARB_vertex_attrib_64bit\"\0"
    "GL extension \"GL_ARB_vertex_attrib_binding\"\0"
    "GL extension \"GL_ARB_vertex_blend\"\0"
    "GL extension \"GL_ARB_vertex_buffer_object\"\0"
    "GL extension \"GL_ARB_vertex_program\"\0"
    "GL extension \"GL_ARB_vertex_shader\"\0"
    "GL extension \"GL_ARB_vertex_type_2_10_10_10_rev\"\0"
    "GL extension \"GL_ARB_viewport_array\"\0"
    "GL extension \"GL_ARB_window_pos\"\0"
    "GL extension \"GL_ATI_draw_buffers\"\0"
    "GL extension \"GL_ATI_element_array\"\0"
    "GL extension \"GL_ATI_envmap_bumpmap\"\0"
    "GL extension \"GL_ATI_fragment_shader\"\0"
    "GL extension \"GL_ATI_map_object_buffer\"\0"
    "GL extension \"GL_ATI_pn_triangles\"\0"
    "GL extension \"GL_ATI_separate_stencil\"\0"
    "GL extension \"GL_ATI_vertex_array_object\"\0"
    "GL extension \"GL_ATI_vertex_attrib_array_object\"\0"
    "GL extension \"GL_ATI_vertex_streams\"\0"
    "GL extension \"GL_EXT_base_instance\"\0"
    "GL extension \"GL_EXT_bindable_uniform\"\0"
    "GL extension \"GL_EXT_blend_color\"\0"
    "GL extension \"GL_EXT_blend_equation_separate\"\0"
    "GL extension \"GL_EXT_blend_func_separate\"\0"
    "GL extension \"GL_EXT_blend_minmax\"\0"
    "GL extension \"GL_EXT_buffer_storage\"\0"
    "GL extension \"GL_EXT_color_subtable\"\0"
    "GL extension \"GL_EXT_compiled_vertex_array\"\0"
    "GL extension \"GL_EXT_convolution\"\0"
    "GL extension \"GL_EXT_coordinate_frame\"\0"
    "GL extension \"GL_EXT_copy_image\"\0"
    "GL extension \"GL_EXT_copy_texture\"\0"
    "GL extension \"GL_EXT_cull_vertex\"\0"
    "GL extension \"GL_EXT_debug_label\"\0"
    "GL extension \"GL_EXT_debug_marker\"\0"
    "GL extension \"GL_EXT_depth_bounds_test\"\0"
    "GL extension \"GL_EXT_direct_state_access\"\0"
    "GL extension \"GL_EXT_discard_framebuffer\"\0"
    "GL extension \"GL_EXT_disjoint_timer_query\"\0"
    "GL extension \"GL_EXT_draw_buffers2\"\0"
    "GL extension \"GL_EXT_draw_buffers\"\0"
    "GL extension \"GL_EXT_draw_buffers_indexed\"\0"
    "GL extension \"GL_EXT_draw_elements_base_vertex\"\0"
    "GL extension \"GL_EXT_draw_instanced\"\0"
    "GL extension \"GL_EXT_draw_range_elements\"\0"
    "GL extension \"GL_EXT_fog_coord\"\0"
    "GL extension \"GL_EXT_framebuffer_blit\"\0"
    "GL extension \"GL_EXT_framebuffer_multisample\"\0"
    "GL extension \"GL_EXT_framebuffer_object\"\0"
    "GL extension \"GL_EXT_geometry_shader4\"\0"
    "GL extension \"GL_EXT_geometry_shader\"\0"
    "GL extension \"GL_EXT_gpu_program_parameters\"\0"
    "GL extension \"GL_EXT_gpu_shader4\"\0"
    "GL extension \"GL_EXT_histogram\"\0"
    "GL extension \"GL_EXT_index_func\"\0"
    "GL extension \"GL_EXT_index_material\"\0"
    "GL extension \"GL_EXT_instanced_arrays\"\0"
    "GL extension \"GL_EXT_light_texture\"\0"
    "GL extension \"GL_EXT_map_buffer_range\"\0"
    "GL extension \"GL_EXT_multi_draw_arrays\"\0"
    "GL extension \"GL_EXT_multi_draw_indirect\"\0"
    "GL extension \"GL_EXT_multisample\"\0"
    "GL extension \"GL_EXT_multisampled_render_to_texture\"\0"
    "GL extension \"GL_EXT_multiview_draw_buffers\"\0"
    "GL extension \"GL_EXT_occlusion_query_boolean\"\0"
    "GL extension \"GL_EXT_paletted_texture\"\0"
    "GL extension \"GL_EXT_pixel_transform\"\0"
    "GL extension \"GL_EXT_point_parameters\"\0"
    "GL extension \"GL_EXT_polygon_offset\"\0"
    "GL extension \"GL_EXT_polygon_offset_clamp\"\0"
    "GL extension \"GL_EXT_primitive_bounding_box\"\0"
    "GL extension \"GL_EXT_provoking_vertex\"\0"
    "GL extension \"GL_EXT_raster_multisample\"\0"
    "GL extension \"GL_EXT_robustness\"\0"
    "GL extension \"GL_EXT_secondary_color\"\0"
    "GL extension \"GL_EXT_separate_shader_objects\"\0"
    "GL extension \"GL_EXT_shader_image_load_store\"\0"
    "GL extension \"GL_EXT_sparse_texture\"\0"
    "GL extension \"GL_EXT_stencil_clear_tag\"\0"
    "GL extension \"GL_EXT_stencil_two_side\"\0"
    "GL extension \"GL_EXT_subtexture\"\0"
    "GL extension \"GL_EXT_tessellation_shader\"\0"
    "GL extension \"GL_EXT_texture3D\"\0"
    "GL extension \"GL_EXT_texture_array\"\0"
    "GL extension \"GL_EXT_texture_border_clamp\"\0"
    "GL extension \"GL_EXT_texture_buffer\"\0"
    "GL extension \"GL_EXT_texture_buffer_object\"\0"
    "GL extension \"GL_EXT_texture_filter_minmax\"\0"
    "GL extension \"GL_EXT_texture_integer\"\0"
    "GL extension \"GL_EXT_texture_object\"\0"
    "GL extension \"GL_EXT_texture_perturb_normal\"\0"
    "GL extension \"GL_EXT_texture_storage\"\0"
    "GL extension \"GL_EXT_texture_view\"\0"
    "GL extension \"GL_EXT_timer_query\"\0"
    "GL extension \"GL_EXT_transform_feedback\"\0"
    "GL extension \"GL_EXT_vertex_array\"\0"
    "GL extension \"GL_EXT_vertex_attrib_64bit\"\0"
    "GL extension \"GL_EXT_vertex_shader\"\0"
    "GL extension \"GL_EXT_vertex_weighting\"\0"
    "GL extension \"GL_EXT_x11_sync_object\"\0"
    "GL extension \"GL_GREMEDY_frame_terminator\"\0"
    "GL extension \"GL_GREMEDY_string_marker\"\0"
    "GL extension \"GL_HP_image_transform\"\0"
    "GL extension \"GL_IBM_multimode_draw_arrays\"\0"
    "GL extension \"GL_IBM_static_data\"\0"
    "GL extension \"GL_IBM_vertex_array_lists\"\0"
    "GL extension \"GL_IMG_multisampled_render_to_texture\"\0"
    "GL extension \"GL_IMG_user_clip_plane\"\0"
    "GL extension \"GL_INGR_blend_func_separate\"\0"
    "GL extension \"GL_INTEL_map_texture\"\0"
    "GL extension \"GL_INTEL_parallel_arrays\"\0"
    "GL extension \"GL_INTEL_performance_query\"\0"
    "GL extension \"GL_KHR_blend_equation_advanced\"\0"
    "GL extension \"GL_KHR_debug\"\0"
    "GL extension \"GL_KHR_robustness\"\0"
    "GL extension \"GL_MESA_resize_buffers\"\0"
    "GL extension \"GL_MESA_window_pos\"\0"
    "GL extension \"GL_NVX_conditional_render\"\0"
    "GL extension \"GL_NV_bindless_multi_draw_indirect\"\0"
    "GL extension \"GL_NV_bindless_multi_draw_indirect_count\"\0"
    "GL extension \"GL_NV_bindless_texture\"\0"
    "GL extension \"GL_NV_blend_equation_advanced\"\0"
    "GL extension \"GL_NV_command_list\"\0"
    "GL extension \"GL_NV_conditional_render\"\0"
    "GL extension \"GL_NV_conservative_raster\"\0"
    "GL extension \"GL_NV_copy_buffer\"\0"
    "GL extension \"GL_NV_copy_image\"\0"
    "GL extension \"GL_NV_coverage_sample\"\0"
    "GL extension \"GL_NV_depth_buffer_float\"\0"
    "GL extension \"GL_NV_draw_buffers\"\0"
    "GL extension \"GL_NV_draw_instanced\"\0"
    "GL extension \"GL_NV_draw_texture\"\0"
    "GL extension \"GL_NV_evaluators\"\0"
    "GL extension \"GL_NV_explicit_multisample\"\0"
    "GL extension \"GL_NV_fence\"\0"
    "GL extension \"GL_NV_fragment_coverage_to_color\"\0"
    "GL extension \"GL_NV_fragment_program\"\0"
    "GL extension \"GL_NV_framebuffer_blit\"\0"
    "GL extension \"GL_NV_framebuffer_mixed_samples\"\0"
    "GL extension \"GL_NV_framebuffer_multisample\"\0"
    "GL extension \"GL_NV_framebuffer_multisample_coverage\"\0"
    "GL extension \"GL_NV_geometry_program4\"\0"
    "GL extension \"GL_NV_gpu_program4\"\0"
    "GL extension \"GL_NV_gpu_program5\"\0"
    "GL extension \"GL_NV_gpu_shader5\"\0"
    "GL extension \"GL_NV_half_float\"\0"
    "GL extension \"GL_NV_instanced_arrays\"\0"
    "GL extension \"GL_NV_internalformat_sample_query\"\0"
    "GL extension \"GL_NV_non_square_matrices\"\0"
    "GL extension \"GL_NV_occlusion_query\"\0"
    "GL extension \"GL_NV_parameter_buffer_object\"\0"
    "GL extension \"GL_NV_path_rendering\"\0"
    "GL extension \"GL_NV_pixel_data_range\"\0"
    "GL extension \"GL_NV_point_sprite\"\0"
    "GL extension \"GL_NV_polygon_mode\"\0"
    "GL extension \"GL_NV_present_video\"\0"
    "GL extension \"GL_NV_primitive_restart\"\0"
    "GL extension \"GL_NV_read_buffer\"\0"
    "GL extension \"GL_NV_register_combiners2\"\0"
    "GL extension \"GL_NV_register_combiners\"\0"
    "GL extension \"GL_NV_sample_locations\"\0"
    "GL extension \"GL_NV_shader_buffer_load\"\0"
    "GL extension \"GL_NV_texture_barrier\"\0"
    "GL extension \"GL_NV_texture_multisample\"\0"
    "GL extension \"GL_NV_transform_feedback2\"\0"
    "GL extension \"GL_NV_transform_feedback\"\0"
    "GL extension \"GL_NV_vdpau_interop\"\0"
    "GL extension \"GL_NV_vertex_array_range\"\0"
    "GL extension \"GL_NV_vertex_attrib_integer_64bit\"\0"
    "GL extension \"GL_NV_vertex_buffer_unified_memory\"\0"
    "GL extension \"GL_NV_vertex_program4\"\0"
    "GL extension \"GL_NV_vertex_program\"\0"
    "GL extension \"GL_NV_video_capture\"\0"
    "GL extension \"GL_NV_viewport_array\"\0"
    "GL extension \"GL_OES_EGL_image\"\0"
    "GL extension \"GL_OES_blend_equation_separate\"\0"
    "GL extension \"GL_OES_blend_func_separate\"\0"
    "GL extension \"GL_OES_blend_subtract\"\0"
    "GL extension \"GL_OES_byte_coordinates\"\0"
    "GL extension \"GL_OES_copy_image\"\0"
    "GL extension \"GL_OES_draw_buffers_indexed\"\0"
    "GL extension \"GL_OES_draw_elements_base_vertex\"\0"
    "GL extension \"GL_OES_draw_texture\"\0"
    "GL extension \"GL_OES_fixed_point\"\0"
    "GL extension \"GL_OES_framebuffer_object\"\0"
    "GL extension \"GL_OES_geometry_shader\"\0"
    "GL extension \"GL_OES_get_program_binary\"\0"
    "GL extension \"GL_OES_mapbuffer\"\0"
    "GL extension \"GL_OES_matrix_palette\"\0"
    "GL extension \"GL_OES_point_size_array\"\0"
    "GL extension \"GL_OES_primitive_bounding_box\"\0"
    "GL extension \"GL_OES_query_matrix\"\0"
    "GL extension \"GL_OES_sample_shading\"\0"
    "GL extension \"GL_OES_single_precision\"\0"
    "GL extension \"GL_OES_tessellation_shader\"\0"
    "GL extension \"GL_OES_texture_3D\"\0"
    "GL extension \"GL_OES_texture_border_clamp\"\0"
    "GL extension \"GL_OES_texture_buffer\"\0"
    "GL extension \"GL_OES_texture_cube_map\"\0"
    "GL extension \"GL_OES_texture_storage_multisample_2d_array\"\0"
    "GL extension \"GL_OES_texture_view\"\0"
    "GL extension \"GL_OES_vertex_array_object\"\0"
    "GL extension \"GL_OVR_multiview\"\0"
    "GL extension \"GL_PGI_misc_hints\"\0"
    "GL extension \"GL_QCOM_alpha_test\"\0"
    "GL extension \"GL_QCOM_driver_control\"\0"
    "GL extension \"GL_QCOM_extended_get2\"\0"
    "GL extension \"GL_QCOM_extended_get\"\0"
    "GL extension \"GL_QCOM_tiled_rendering\"\0"
    "GL extension \"GL_SGIS_detail_texture\"\0"
    "GL extension \"GL_SGIS_fog_function\"\0"
    "GL extension \"GL_SGIS_multisample\"\0"
    "GL extension \"GL_SGIS_pixel_texture\"\0"
    "GL extension \"GL_SGIS_point_parameters\"\0"
    "GL extension \"GL_SGIS_sharpen_texture\"\0"
    "GL extension \"GL_SGIS_texture4D\"\0"
    "GL extension \"GL_SGIS_texture_color_mask\"\0"
    "GL extension \"GL_SGIS_texture_filter4\"\0"
    "GL extension \"GL_SGIX_async\"\0"
    "GL extension \"GL_SGIX_flush_raster\"\0"
    "GL extension \"GL_SGIX_fragment_lighting\"\0"
    "GL extension \"GL_SGIX_framezoom\"\0"
    "GL extension \"GL_SGIX_igloo_interface\"\0"
    "GL extension \"GL_SGIX_instruments\"\0"
    "GL extension \"GL_SGIX_list_priority\"\0"
    "GL extension \"GL_SGIX_pixel_texture\"\0"
    "GL extension \"GL_SGIX_polynomial_ffd\"\0"
    "GL extension \"GL_SGIX_reference_plane\"\0"
    "GL extension \"GL_SGIX_sprite\"\0"
    "GL extension \"GL_SGIX_tag_sample_buffer\"\0"
    "GL extension \"GL_SGI_color_table\"\0"
    "GL extension \"GL_SUNX_constant_data\"\0"
    "GL extension \"GL_SUN_global_alpha\"\0"
    "GL extension \"GL_SUN_mesh_array\"\0"
    "GL extension \"GL_SUN_triangle_list\"\0"
    "GL extension \"GL_SUN_vertex\"\0"
    "OpenGL ES 1.0\0"
    "OpenGL ES 2.0\0"
    "OpenGL ES 3.0\0"
    "OpenGL ES 3.1\0"
    "always present\0"
     ;

static const uint16_t enum_string_offsets[] = {
    [Desktop_OpenGL_1_0] = 0,
    [Desktop_OpenGL_1_1] = 19,
    [Desktop_OpenGL_1_2] = 38,
    [Desktop_OpenGL_1_3] = 57,
    [Desktop_OpenGL_1_4] = 76,
    [Desktop_OpenGL_1_5] = 95,
    [Desktop_OpenGL_2_0] = 114,
    [Desktop_OpenGL_2_1] = 133,
    [Desktop_OpenGL_3_0] = 152,
    [Desktop_OpenGL_3_1] = 171,
    [Desktop_OpenGL_3_2] = 190,
    [Desktop_OpenGL_3_3] = 209,
    [Desktop_OpenGL_4_0] = 228,
    [Desktop_OpenGL_4_1] = 247,
    [Desktop_OpenGL_4_2] = 266,
    [Desktop_OpenGL_4_3] = 285,
    [Desktop_OpenGL_4_4] = 304,
    [Desktop_OpenGL_4_5] = 323,
    [GL_extension_GL_3DFX_tbuffer] = 342,
    [GL_extension_GL_AMD_debug_output] = 373,
    [GL_extension_GL_AMD_draw_buffers_blend] = 408,
    [GL_extension_GL_AMD_gpu_shader_int64] = 449,
    [GL_extension_GL_AMD_interleaved_elements] = 488,
    [GL_extension_GL_AMD_multi_draw_indirect] = 531,
    [GL_extension_GL_AMD_name_gen_delete] = 573,
    [GL_extension_GL_AMD_occlusion_query_event] = 611,
    [GL_extension_GL_AMD_performance_monitor] = 655,
    [GL_extension_GL_AMD_sample_positions] = 697,
    [GL_extension_GL_AMD_sparse_texture] = 736,
    [GL_extension_GL_AMD_stencil_operation_extended] = 773,
    [GL_extension_GL_AMD_vertex_shader_tessellator] = 822,
    [GL_extension_GL_ANGLE_framebuffer_blit] = 870,
    [GL_extension_GL_ANGLE_framebuffer_multisample] = 911,
    [GL_extension_GL_ANGLE_instanced_arrays] = 959,
    [GL_extension_GL_ANGLE_translated_shader_source] = 1000,
    [GL_extension_GL_APPLE_copy_texture_levels] = 1049,
    [GL_extension_GL_APPLE_element_array] = 1093,
    [GL_extension_GL_APPLE_fence] = 1131,
    [GL_extension_GL_APPLE_flush_buffer_range] = 1161,
    [GL_extension_GL_APPLE_framebuffer_multisample] = 1204,
    [GL_extension_GL_APPLE_object_purgeable] = 1252,
    [GL_extension_GL_APPLE_sync] = 1293,
    [GL_extension_GL_APPLE_texture_range] = 1322,
    [GL_extension_GL_APPLE_vertex_array_object] = 1360,
    [GL_extension_GL_APPLE_vertex_array_range] = 1404,
    [GL_extension_GL_APPLE_vertex_program_evaluators] = 1447,
    [GL_extension_GL_ARB_ES2_compatibility] = 1497,
    [GL_extension_GL_ARB_ES3_1_compatibility] = 1537,
    [GL_extension_GL_ARB_base_instance] = 1579,
    [GL_extension_GL_ARB_bindless_texture] = 1615,
    [GL_extension_GL_ARB_blend_func_extended] = 1654,
    [GL_extension_GL_ARB_buffer_storage] = 1696,
    [GL_extension_GL_ARB_cl_event] = 1733,
    [GL_extension_GL_ARB_clear_buffer_object] = 1764,
    [GL_extension_GL_ARB_clear_texture] = 1806,
    [GL_extension_GL_ARB_clip_control] = 1842,
    [GL_extension_GL_ARB_color_buffer_float] = 1877,
    [GL_extension_GL_ARB_compute_shader] = 1918,
    [GL_extension_GL_ARB_compute_variable_group_size] = 1955,
    [GL_extension_GL_ARB_copy_buffer] = 2005,
    [GL_extension_GL_ARB_copy_image] = 2039,
    [GL_extension_GL_ARB_debug_output] = 2072,
    [GL_extension_GL_ARB_direct_state_access] = 2107,
    [GL_extension_GL_ARB_draw_buffers] = 2149,
    [GL_extension_GL_ARB_draw_buffers_blend] = 2184,
    [GL_extension_GL_ARB_draw_elements_base_vertex] = 2225,
    [GL_extension_GL_ARB_draw_indirect] = 2273,
    [GL_extension_GL_ARB_draw_instanced] = 2309,
    [GL_extension_GL_ARB_fragment_program] = 2346,
    [GL_extension_GL_ARB_framebuffer_no_attachments] = 2385,
    [GL_extension_GL_ARB_framebuffer_object] = 2434,
    [GL_extension_GL_ARB_geometry_shader4] = 2475,
    [GL_extension_GL_ARB_get_program_binary] = 2514,
    [GL_extension_GL_ARB_get_texture_sub_image] = 2555,
    [GL_extension_GL_ARB_gpu_shader_fp64] = 2599,
    [GL_extension_GL_ARB_imaging] = 2637,
    [GL_extension_GL_ARB_indirect_parameters] = 2667,
    [GL_extension_GL_ARB_instanced_arrays] = 2709,
    [GL_extension_GL_ARB_internalformat_query2] = 2748,
    [GL_extension_GL_ARB_internalformat_query] = 2792,
    [GL_extension_GL_ARB_invalidate_subdata] = 2835,
    [GL_extension_GL_ARB_map_buffer_range] = 2876,
    [GL_extension_GL_ARB_matrix_palette] = 2915,
    [GL_extension_GL_ARB_multi_bind] = 2952,
    [GL_extension_GL_ARB_multi_draw_indirect] = 2985,
    [GL_extension_GL_ARB_multisample] = 3027,
    [GL_extension_GL_ARB_multitexture] = 3061,
    [GL_extension_GL_ARB_occlusion_query] = 3096,
    [GL_extension_GL_ARB_point_parameters] = 3134,
    [GL_extension_GL_ARB_program_interface_query] = 3173,
    [GL_extension_GL_ARB_provoking_vertex] = 3219,
    [GL_extension_GL_ARB_robustness] = 3258,
    [GL_extension_GL_ARB_sample_shading] = 3291,
    [GL_extension_GL_ARB_sampler_objects] = 3328,
    [GL_extension_GL_ARB_separate_shader_objects] = 3366,
    [GL_extension_GL_ARB_shader_atomic_counters] = 3412,
    [GL_extension_GL_ARB_shader_image_load_store] = 3457,
    [GL_extension_GL_ARB_shader_objects] = 3503,
    [GL_extension_GL_ARB_shader_storage_buffer_object] = 3540,
    [GL_extension_GL_ARB_shader_subroutine] = 3591,
    [GL_extension_GL_ARB_shading_language_include] = 3631,
    [GL_extension_GL_ARB_sparse_buffer] = 3678,
    [GL_extension_GL_ARB_sparse_texture] = 3714,
    [GL_extension_GL_ARB_sync] = 3751,
    [GL_extension_GL_ARB_tessellation_shader] = 3778,
    [GL_extension_GL_ARB_texture_barrier] = 3820,
    [GL_extension_GL_ARB_texture_buffer_object] = 3858,
    [GL_extension_GL_ARB_texture_buffer_range] = 3902,
    [GL_extension_GL_ARB_texture_compression] = 3945,
    [GL_extension_GL_ARB_texture_multisample] = 3987,
    [GL_extension_GL_ARB_texture_storage] = 4029,
    [GL_extension_GL_ARB_texture_storage_multisample] = 4067,
    [GL_extension_GL_ARB_texture_view] = 4117,
    [GL_extension_GL_ARB_timer_query] = 4152,
    [GL_extension_GL_ARB_transform_feedback2] = 4186,
    [GL_extension_GL_ARB_transform_feedback3] = 4228,
    [GL_extension_GL_ARB_transform_feedback_instanced] = 4270,
    [GL_extension_GL_ARB_transpose_matrix] = 4321,
    [GL_extension_GL_ARB_uniform_buffer_object] = 4360,
    [GL_extension_GL_ARB_vertex_array_object] = 4404,
    [GL_extension_GL_ARB_vertex_attrib_64bit] = 4446,
    [GL_extension_GL_ARB_vertex_attrib_binding] = 4488,
    [GL_extension_GL_ARB_vertex_blend] = 4532,
    [GL_extension_GL_ARB_vertex_buffer_object] = 4567,
    [GL_extension_GL_ARB_vertex_program] = 4610,
    [GL_extension_GL_ARB_vertex_shader] = 4647,
    [GL_extension_GL_ARB_vertex_type_2_10_10_10_rev] = 4683,
    [GL_extension_GL_ARB_viewport_array] = 4732,
    [GL_extension_GL_ARB_window_pos] = 4769,
    [GL_extension_GL_ATI_draw_buffers] = 4802,
    [GL_extension_GL_ATI_element_array] = 4837,
    [GL_extension_GL_ATI_envmap_bumpmap] = 4873,
    [GL_extension_GL_ATI_fragment_shader] = 4910,
    [GL_extension_GL_ATI_map_object_buffer] = 4948,
    [GL_extension_GL_ATI_pn_triangles] = 4988,
    [GL_extension_GL_ATI_separate_stencil] = 5023,
    [GL_extension_GL_ATI_vertex_array_object] = 5062,
    [GL_extension_GL_ATI_vertex_attrib_array_object] = 5104,
    [GL_extension_GL_ATI_vertex_streams] = 5153,
    [GL_extension_GL_EXT_base_instance] = 5190,
    [GL_extension_GL_EXT_bindable_uniform] = 5226,
    [GL_extension_GL_EXT_blend_color] = 5265,
    [GL_extension_GL_EXT_blend_equation_separate] = 5299,
    [GL_extension_GL_EXT_blend_func_separate] = 5345,
    [GL_extension_GL_EXT_blend_minmax] = 5387,
    [GL_extension_GL_EXT_buffer_storage] = 5422,
    [GL_extension_GL_EXT_color_subtable] = 5459,
    [GL_extension_GL_EXT_compiled_vertex_array] = 5496,
    [GL_extension_GL_EXT_convolution] = 5540,
    [GL_extension_GL_EXT_coordinate_frame] = 5574,
    [GL_extension_GL_EXT_copy_image] = 5613,
    [GL_extension_GL_EXT_copy_texture] = 5646,
    [GL_extension_GL_EXT_cull_vertex] = 5681,
    [GL_extension_GL_EXT_debug_label] = 5715,
    [GL_extension_GL_EXT_debug_marker] = 5749,
    [GL_extension_GL_EXT_depth_bounds_test] = 5784,
    [GL_extension_GL_EXT_direct_state_access] = 5824,
    [GL_extension_GL_EXT_discard_framebuffer] = 5866,
    [GL_extension_GL_EXT_disjoint_timer_query] = 5908,
    [GL_extension_GL_EXT_draw_buffers2] = 5951,
    [GL_extension_GL_EXT_draw_buffers] = 5987,
    [GL_extension_GL_EXT_draw_buffers_indexed] = 6022,
    [GL_extension_GL_EXT_draw_elements_base_vertex] = 6065,
    [GL_extension_GL_EXT_draw_instanced] = 6113,
    [GL_extension_GL_EXT_draw_range_elements] = 6150,
    [GL_extension_GL_EXT_fog_coord] = 6192,
    [GL_extension_GL_EXT_framebuffer_blit] = 6224,
    [GL_extension_GL_EXT_framebuffer_multisample] = 6263,
    [GL_extension_GL_EXT_framebuffer_object] = 6309,
    [GL_extension_GL_EXT_geometry_shader4] = 6350,
    [GL_extension_GL_EXT_geometry_shader] = 6389,
    [GL_extension_GL_EXT_gpu_program_parameters] = 6427,
    [GL_extension_GL_EXT_gpu_shader4] = 6472,
    [GL_extension_GL_EXT_histogram] = 6506,
    [GL_extension_GL_EXT_index_func] = 6538,
    [GL_extension_GL_EXT_index_material] = 6571,
    [GL_extension_GL_EXT_instanced_arrays] = 6608,
    [GL_extension_GL_EXT_light_texture] = 6647,
    [GL_extension_GL_EXT_map_buffer_range] = 6683,
    [GL_extension_GL_EXT_multi_draw_arrays] = 6722,
    [GL_extension_GL_EXT_multi_draw_indirect] = 6762,
    [GL_extension_GL_EXT_multisample] = 6804,
    [GL_extension_GL_EXT_multisampled_render_to_texture] = 6838,
    [GL_extension_GL_EXT_multiview_draw_buffers] = 6891,
    [GL_extension_GL_EXT_occlusion_query_boolean] = 6936,
    [GL_extension_GL_EXT_paletted_texture] = 6982,
    [GL_extension_GL_EXT_pixel_transform] = 7021,
    [GL_extension_GL_EXT_point_parameters] = 7059,
    [GL_extension_GL_EXT_polygon_offset] = 7098,
    [GL_extension_GL_EXT_polygon_offset_clamp] = 7135,
    [GL_extension_GL_EXT_primitive_bounding_box] = 7178,
    [GL_extension_GL_EXT_provoking_vertex] = 7223,
    [GL_extension_GL_EXT_raster_multisample] = 7262,
    [GL_extension_GL_EXT_robustness] = 7303,
    [GL_extension_GL_EXT_secondary_color] = 7336,
    [GL_extension_GL_EXT_separate_shader_objects] = 7374,
    [GL_extension_GL_EXT_shader_image_load_store] = 7420,
    [GL_extension_GL_EXT_sparse_texture] = 7466,
    [GL_extension_GL_EXT_stencil_clear_tag] = 7503,
    [GL_extension_GL_EXT_stencil_two_side] = 7543,
    [GL_extension_GL_EXT_subtexture] = 7582,
    [GL_extension_GL_EXT_tessellation_shader] = 7615,
    [GL_extension_GL_EXT_texture3D] = 7657,
    [GL_extension_GL_EXT_texture_array] = 7689,
    [GL_extension_GL_EXT_texture_border_clamp] = 7725,
    [GL_extension_GL_EXT_texture_buffer] = 7768,
    [GL_extension_GL_EXT_texture_buffer_object] = 7805,
    [GL_extension_GL_EXT_texture_filter_minmax] = 7849,
    [GL_extension_GL_EXT_texture_integer] = 7893,
    [GL_extension_GL_EXT_texture_object] = 7931,
    [GL_extension_GL_EXT_texture_perturb_normal] = 7968,
    [GL_extension_GL_EXT_texture_storage] = 8013,
    [GL_extension_GL_EXT_texture_view] = 8051,
    [GL_extension_GL_EXT_timer_query] = 8086,
    [GL_extension_GL_EXT_transform_feedback] = 8120,
    [GL_extension_GL_EXT_vertex_array] = 8161,
    [GL_extension_GL_EXT_vertex_attrib_64bit] = 8196,
    [GL_extension_GL_EXT_vertex_shader] = 8238,
    [GL_extension_GL_EXT_vertex_weighting] = 8274,
    [GL_extension_GL_EXT_x11_sync_object] = 8313,
    [GL_extension_GL_GREMEDY_frame_terminator] = 8351,
    [GL_extension_GL_GREMEDY_string_marker] = 8394,
    [GL_extension_GL_HP_image_transform] = 8434,
    [GL_extension_GL_IBM_multimode_draw_arrays] = 8471,
    [GL_extension_GL_IBM_static_data] = 8515,
    [GL_extension_GL_IBM_vertex_array_lists] = 8549,
    [GL_extension_GL_IMG_multisampled_render_to_texture] = 8590,
    [GL_extension_GL_IMG_user_clip_plane] = 8643,
    [GL_extension_GL_INGR_blend_func_separate] = 8681,
    [GL_extension_GL_INTEL_map_texture] = 8724,
    [GL_extension_GL_INTEL_parallel_arrays] = 8760,
    [GL_extension_GL_INTEL_performance_query] = 8800,
    [GL_extension_GL_KHR_blend_equation_advanced] = 8842,
    [GL_extension_GL_KHR_debug] = 8888,
    [GL_extension_GL_KHR_robustness] = 8916,
    [GL_extension_GL_MESA_resize_buffers] = 8949,
    [GL_extension_GL_MESA_window_pos] = 8987,
    [GL_extension_GL_NVX_conditional_render] = 9021,
    [GL_extension_GL_NV_bindless_multi_draw_indirect] = 9062,
    [GL_extension_GL_NV_bindless_multi_draw_indirect_count] = 9112,
    [GL_extension_GL_NV_bindless_texture] = 9168,
    [GL_extension_GL_NV_blend_equation_advanced] = 9206,
    [GL_extension_GL_NV_command_list] = 9251,
    [GL_extension_GL_NV_conditional_render] = 9285,
    [GL_extension_GL_NV_conservative_raster] = 9325,
    [GL_extension_GL_NV_copy_buffer] = 9366,
    [GL_extension_GL_NV_copy_image] = 9399,
    [GL_extension_GL_NV_coverage_sample] = 9431,
    [GL_extension_GL_NV_depth_buffer_float] = 9468,
    [GL_extension_GL_NV_draw_buffers] = 9508,
    [GL_extension_GL_NV_draw_instanced] = 9542,
    [GL_extension_GL_NV_draw_texture] = 9578,
    [GL_extension_GL_NV_evaluators] = 9612,
    [GL_extension_GL_NV_explicit_multisample] = 9644,
    [GL_extension_GL_NV_fence] = 9686,
    [GL_extension_GL_NV_fragment_coverage_to_color] = 9713,
    [GL_extension_GL_NV_fragment_program] = 9761,
    [GL_extension_GL_NV_framebuffer_blit] = 9799,
    [GL_extension_GL_NV_framebuffer_mixed_samples] = 9837,
    [GL_extension_GL_NV_framebuffer_multisample] = 9884,
    [GL_extension_GL_NV_framebuffer_multisample_coverage] = 9929,
    [GL_extension_GL_NV_geometry_program4] = 9983,
    [GL_extension_GL_NV_gpu_program4] = 10022,
    [GL_extension_GL_NV_gpu_program5] = 10056,
    [GL_extension_GL_NV_gpu_shader5] = 10090,
    [GL_extension_GL_NV_half_float] = 10123,
    [GL_extension_GL_NV_instanced_arrays] = 10155,
    [GL_extension_GL_NV_internalformat_sample_query] = 10193,
    [GL_extension_GL_NV_non_square_matrices] = 10242,
    [GL_extension_GL_NV_occlusion_query] = 10283,
    [GL_extension_GL_NV_parameter_buffer_object] = 10320,
    [GL_extension_GL_NV_path_rendering] = 10365,
    [GL_extension_GL_NV_pixel_data_range] = 10401,
    [GL_extension_GL_NV_point_sprite] = 10439,
    [GL_extension_GL_NV_polygon_mode] = 10473,
    [GL_extension_GL_NV_present_video] = 10507,
    [GL_extension_GL_NV_primitive_restart] = 10542,
    [GL_extension_GL_NV_read_buffer] = 10581,
    [GL_extension_GL_NV_register_combiners2] = 10614,
    [GL_extension_GL_NV_register_combiners] = 10655,
    [GL_extension_GL_NV_sample_locations] = 10695,
    [GL_extension_GL_NV_shader_buffer_load] = 10733,
    [GL_extension_GL_NV_texture_barrier] = 10773,
    [GL_extension_GL_NV_texture_multisample] = 10810,
    [GL_extension_GL_NV_transform_feedback2] = 10851,
    [GL_extension_GL_NV_transform_feedback] = 10892,
    [GL_extension_GL_NV_vdpau_interop] = 10932,
    [GL_extension_GL_NV_vertex_array_range] = 10967,
    [GL_extension_GL_NV_vertex_attrib_integer_64bit] = 11007,
    [GL_extension_GL_NV_vertex_buffer_unified_memory] = 11056,
    [GL_extension_GL_NV_vertex_program4] = 11106,
    [GL_extension_GL_NV_vertex_program] = 11143,
    [GL_extension_GL_NV_video_capture] = 11179,
    [GL_extension_GL_NV_viewport_array] = 11214,
    [GL_extension_GL_OES_EGL_image] = 11250,
    [GL_extension_GL_OES_blend_equation_separate] = 11282,
    [GL_extension_GL_OES_blend_func_separate] = 11328,
    [GL_extension_GL_OES_blend_subtract] = 11370,
    [GL_extension_GL_OES_byte_coordinates] = 11407,
    [GL_extension_GL_OES_copy_image] = 11446,
    [GL_extension_GL_OES_draw_buffers_indexed] = 11479,
    [GL_extension_GL_OES_draw_elements_base_vertex] = 11522,
    [GL_extension_GL_OES_draw_texture] = 11570,
    [GL_extension_GL_OES_fixed_point] = 11605,
    [GL_extension_GL_OES_framebuffer_object] = 11639,
    [GL_extension_GL_OES_geometry_shader] = 11680,
    [GL_extension_GL_OES_get_program_binary] = 11718,
    [GL_extension_GL_OES_mapbuffer] = 11759,
    [GL_extension_GL_OES_matrix_palette] = 11791,
    [GL_extension_GL_OES_point_size_array] = 11828,
    [GL_extension_GL_OES_primitive_bounding_box] = 11867,
    [GL_extension_GL_OES_query_matrix] = 11912,
    [GL_extension_GL_OES_sample_shading] = 11947,
    [GL_extension_GL_OES_single_precision] = 11984,
    [GL_extension_GL_OES_tessellation_shader] = 12023,
    [GL_extension_GL_OES_texture_3D] = 12065,
    [GL_extension_GL_OES_texture_border_clamp] = 12098,
    [GL_extension_GL_OES_texture_buffer] = 12141,
    [GL_extension_GL_OES_texture_cube_map] = 12178,
    [GL_extension_GL_OES_texture_storage_multisample_2d_array] = 12217,
    [GL_extension_GL_OES_texture_view] = 12276,
    [GL_extension_GL_OES_vertex_array_object] = 12311,
    [GL_extension_GL_OVR_multiview] = 12353,
    [GL_extension_GL_PGI_misc_hints] = 12385,
    [GL_extension_GL_QCOM_alpha_test] = 12418,
    [GL_extension_GL_QCOM_driver_control] = 12452,
    [GL_extension_GL_QCOM_extended_get2] = 12490,
    [GL_extension_GL_QCOM_extended_get] = 12527,
    [GL_extension_GL_QCOM_tiled_rendering] = 12563,
    [GL_extension_GL_SGIS_detail_texture] = 12602,
    [GL_extension_GL_SGIS_fog_function] = 12640,
    [GL_extension_GL_SGIS_multisample] = 12676,
    [GL_extension_GL_SGIS_pixel_texture] = 12711,
    [GL_extension_GL_SGIS_point_parameters] = 12748,
    [GL_extension_GL_SGIS_sharpen_texture] = 12788,
    [GL_extension_GL_SGIS_texture4D] = 12827,
    [GL_extension_GL_SGIS_texture_color_mask] = 12860,
    [GL_extension_GL_SGIS_texture_filter4] = 12902,
    [GL_extension_GL_SGIX_async] = 12941,
    [GL_extension_GL_SGIX_flush_raster] = 12970,
    [GL_extension_GL_SGIX_fragment_lighting] = 13006,
    [GL_extension_GL_SGIX_framezoom] = 13047,
    [GL_extension_GL_SGIX_igloo_interface] = 13080,
    [GL_extension_GL_SGIX_instruments] = 13119,
    [GL_extension_GL_SGIX_list_priority] = 13154,
    [GL_extension_GL_SGIX_pixel_texture] = 13191,
    [GL_extension_GL_SGIX_polynomial_ffd] = 13228,
    [GL_extension_GL_SGIX_reference_plane] = 13266,
    [GL_extension_GL_SGIX_sprite] = 13305,
    [GL_extension_GL_SGIX_tag_sample_buffer] = 13335,
    [GL_extension_GL_SGI_color_table] = 13376,
    [GL_extension_GL_SUNX_constant_data] = 13410,
    [GL_extension_GL_SUN_global_alpha] = 13447,
    [GL_extension_GL_SUN_mesh_array] = 13482,
    [GL_extension_GL_SUN_triangle_list] = 13515,
    [GL_extension_GL_SUN_vertex] = 13551,
    [OpenGL_ES_1_0] = 13580,
    [OpenGL_ES_2_0] = 13594,
    [OpenGL_ES_3_0] = 13608,
    [OpenGL_ES_3_1] = 13622,
    [always_present] = 13636,
};

static const char entrypoint_strings[] = 
   "glAccum\0"
   "glAccumxOES\0"
   "glActiveProgramEXT\0"
   "glActiveShaderProgram\0"
   "glActiveShaderProgramEXT\0"
   "glActiveStencilFaceEXT\0"
   "glActiveTexture\0"
   "glActiveTextureARB\0"
   "glActiveVaryingNV\0"
   "glAlphaFragmentOp1ATI\0"
   "glAlphaFragmentOp2ATI\0"
   "glAlphaFragmentOp3ATI\0"
   "glAlphaFunc\0"
   "glAlphaFuncQCOM\0"
   "glAlphaFuncx\0"
   "glAlphaFuncxOES\0"
   "glApplyTextureEXT\0"
   "glAreProgramsResidentNV\0"
   "glAreTexturesResident\0"
   "glAreTexturesResidentEXT\0"
   "glArrayElement\0"
   "glArrayElementEXT\0"
   "glArrayObjectATI\0"
   "glAsyncMarkerSGIX\0"
   "glAttachObjectARB\0"
   "glAttachShader\0"
   "glBegin\0"
   "glBeginConditionalRender\0"
   "glBeginConditionalRenderNV\0"
   "glBeginConditionalRenderNVX\0"
   "glBeginFragmentShaderATI\0"
   "glBeginOcclusionQueryNV\0"
   "glBeginPerfMonitorAMD\0"
   "glBeginPerfQueryINTEL\0"
   "glBeginQuery\0"
   "glBeginQueryARB\0"
   "glBeginQueryEXT\0"
   "glBeginQueryIndexed\0"
   "glBeginTransformFeedback\0"
   "glBeginTransformFeedbackEXT\0"
   "glBeginTransformFeedbackNV\0"
   "glBeginVertexShaderEXT\0"
   "glBeginVideoCaptureNV\0"
   "glBindAttribLocation\0"
   "glBindAttribLocationARB\0"
   "glBindBuffer\0"
   "glBindBufferARB\0"
   "glBindBufferBase\0"
   "glBindBufferBaseEXT\0"
   "glBindBufferBaseNV\0"
   "glBindBufferOffsetEXT\0"
   "glBindBufferOffsetNV\0"
   "glBindBufferRange\0"
   "glBindBufferRangeEXT\0"
   "glBindBufferRangeNV\0"
   "glBindBuffersBase\0"
   "glBindBuffersRange\0"
   "glBindFragDataLocation\0"
   "glBindFragDataLocationEXT\0"
   "glBindFragDataLocationIndexed\0"
   "glBindFragmentShaderATI\0"
   "glBindFramebuffer\0"
   "glBindFramebufferEXT\0"
   "glBindFramebufferOES\0"
   "glBindImageTexture\0"
   "glBindImageTextureEXT\0"
   "glBindImageTextures\0"
   "glBindLightParameterEXT\0"
   "glBindMaterialParameterEXT\0"
   "glBindMultiTextureEXT\0"
   "glBindParameterEXT\0"
   "glBindProgramARB\0"
   "glBindProgramNV\0"
   "glBindProgramPipeline\0"
   "glBindProgramPipelineEXT\0"
   "glBindRenderbuffer\0"
   "glBindRenderbufferEXT\0"
   "glBindRenderbufferOES\0"
   "glBindSampler\0"
   "glBindSamplers\0"
   "glBindTexGenParameterEXT\0"
   "glBindTexture\0"
   "glBindTextureEXT\0"
   "glBindTextureUnit\0"
   "glBindTextureUnitParameterEXT\0"
   "glBindTextures\0"
   "glBindTransformFeedback\0"
   "glBindTransformFeedbackNV\0"
   "glBindVertexArray\0"
   "glBindVertexArrayAPPLE\0"
   "glBindVertexArrayOES\0"
   "glBindVertexBuffer\0"
   "glBindVertexBuffers\0"
   "glBindVertexShaderEXT\0"
   "glBindVideoCaptureStreamBufferNV\0"
   "glBindVideoCaptureStreamTextureNV\0"
   "glBinormal3bEXT\0"
   "glBinormal3bvEXT\0"
   "glBinormal3dEXT\0"
   "glBinormal3dvEXT\0"
   "glBinormal3fEXT\0"
   "glBinormal3fvEXT\0"
   "glBinormal3iEXT\0"
   "glBinormal3ivEXT\0"
   "glBinormal3sEXT\0"
   "glBinormal3svEXT\0"
   "glBinormalPointerEXT\0"
   "glBitmap\0"
   "glBitmapxOES\0"
   "glBlendBarrierKHR\0"
   "glBlendBarrierNV\0"
   "glBlendColor\0"
   "glBlendColorEXT\0"
   "glBlendColorxOES\0"
   "glBlendEquation\0"
   "glBlendEquationEXT\0"
   "glBlendEquationIndexedAMD\0"
   "glBlendEquationOES\0"
   "glBlendEquationSeparate\0"
   "glBlendEquationSeparateEXT\0"
   "glBlendEquationSeparateIndexedAMD\0"
   "glBlendEquationSeparateOES\0"
   "glBlendEquationSeparatei\0"
   "glBlendEquationSeparateiARB\0"
   "glBlendEquationSeparateiEXT\0"
   "glBlendEquationSeparateiOES\0"
   "glBlendEquationi\0"
   "glBlendEquationiARB\0"
   "glBlendEquationiEXT\0"
   "glBlendEquationiOES\0"
   "glBlendFunc\0"
   "glBlendFuncIndexedAMD\0"
   "glBlendFuncSeparate\0"
   "glBlendFuncSeparateEXT\0"
   "glBlendFuncSeparateINGR\0"
   "glBlendFuncSeparateIndexedAMD\0"
   "glBlendFuncSeparateOES\0"
   "glBlendFuncSeparatei\0"
   "glBlendFuncSeparateiARB\0"
   "glBlendFuncSeparateiEXT\0"
   "glBlendFuncSeparateiOES\0"
   "glBlendFunci\0"
   "glBlendFunciARB\0"
   "glBlendFunciEXT\0"
   "glBlendFunciOES\0"
   "glBlendParameteriNV\0"
   "glBlitFramebuffer\0"
   "glBlitFramebufferANGLE\0"
   "glBlitFramebufferEXT\0"
   "glBlitFramebufferNV\0"
   "glBlitNamedFramebuffer\0"
   "glBufferAddressRangeNV\0"
   "glBufferData\0"
   "glBufferDataARB\0"
   "glBufferPageCommitmentARB\0"
   "glBufferParameteriAPPLE\0"
   "glBufferStorage\0"
   "glBufferStorageEXT\0"
   "glBufferSubData\0"
   "glBufferSubDataARB\0"
   "glCallCommandListNV\0"
   "glCallList\0"
   "glCallLists\0"
   "glCheckFramebufferStatus\0"
   "glCheckFramebufferStatusEXT\0"
   "glCheckFramebufferStatusOES\0"
   "glCheckNamedFramebufferStatus\0"
   "glCheckNamedFramebufferStatusEXT\0"
   "glClampColor\0"
   "glClampColorARB\0"
   "glClear\0"
   "glClearAccum\0"
   "glClearAccumxOES\0"
   "glClearBufferData\0"
   "glClearBufferSubData\0"
   "glClearBufferfi\0"
   "glClearBufferfv\0"
   "glClearBufferiv\0"
   "glClearBufferuiv\0"
   "glClearColor\0"
   "glClearColorIiEXT\0"
   "glClearColorIuiEXT\0"
   "glClearColorx\0"
   "glClearColorxOES\0"
   "glClearDepth\0"
   "glClearDepthdNV\0"
   "glClearDepthf\0"
   "glClearDepthfOES\0"
   "glClearDepthx\0"
   "glClearDepthxOES\0"
   "glClearIndex\0"
   "glClearNamedBufferData\0"
   "glClearNamedBufferDataEXT\0"
   "glClearNamedBufferSubData\0"
   "glClearNamedBufferSubDataEXT\0"
   "glClearNamedFramebufferfi\0"
   "glClearNamedFramebufferfv\0"
   "glClearNamedFramebufferiv\0"
   "glClearNamedFramebufferuiv\0"
   "glClearStencil\0"
   "glClearTexImage\0"
   "glClearTexSubImage\0"
   "glClientActiveTexture\0"
   "glClientActiveTextureARB\0"
   "glClientActiveVertexStreamATI\0"
   "glClientAttribDefaultEXT\0"
   "glClientWaitSync\0"
   "glClientWaitSyncAPPLE\0"
   "glClipControl\0"
   "glClipPlane\0"
   "glClipPlanef\0"
   "glClipPlanefIMG\0"
   "glClipPlanefOES\0"
   "glClipPlanex\0"
   "glClipPlanexIMG\0"
   "glClipPlanexOES\0"
   "glColor3b\0"
   "glColor3bv\0"
   "glColor3d\0"
   "glColor3dv\0"
   "glColor3f\0"
   "glColor3fVertex3fSUN\0"
   "glColor3fVertex3fvSUN\0"
   "glColor3fv\0"
   "glColor3hNV\0"
   "glColor3hvNV\0"
   "glColor3i\0"
   "glColor3iv\0"
   "glColor3s\0"
   "glColor3sv\0"
   "glColor3ub\0"
   "glColor3ubv\0"
   "glColor3ui\0"
   "glColor3uiv\0"
   "glColor3us\0"
   "glColor3usv\0"
   "glColor3xOES\0"
   "glColor3xvOES\0"
   "glColor4b\0"
   "glColor4bv\0"
   "glColor4d\0"
   "glColor4dv\0"
   "glColor4f\0"
   "glColor4fNormal3fVertex3fSUN\0"
   "glColor4fNormal3fVertex3fvSUN\0"
   "glColor4fv\0"
   "glColor4hNV\0"
   "glColor4hvNV\0"
   "glColor4i\0"
   "glColor4iv\0"
   "glColor4s\0"
   "glColor4sv\0"
   "glColor4ub\0"
   "glColor4ubVertex2fSUN\0"
   "glColor4ubVertex2fvSUN\0"
   "glColor4ubVertex3fSUN\0"
   "glColor4ubVertex3fvSUN\0"
   "glColor4ubv\0"
   "glColor4ui\0"
   "glColor4uiv\0"
   "glColor4us\0"
   "glColor4usv\0"
   "glColor4x\0"
   "glColor4xOES\0"
   "glColor4xvOES\0"
   "glColorFormatNV\0"
   "glColorFragmentOp1ATI\0"
   "glColorFragmentOp2ATI\0"
   "glColorFragmentOp3ATI\0"
   "glColorMask\0"
   "glColorMaskIndexedEXT\0"
   "glColorMaski\0"
   "glColorMaskiEXT\0"
   "glColorMaskiOES\0"
   "glColorMaterial\0"
   "glColorP3ui\0"
   "glColorP3uiv\0"
   "glColorP4ui\0"
   "glColorP4uiv\0"
   "glColorPointer\0"
   "glColorPointerEXT\0"
   "glColorPointerListIBM\0"
   "glColorPointervINTEL\0"
   "glColorSubTable\0"
   "glColorSubTableEXT\0"
   "glColorTable\0"
   "glColorTableEXT\0"
   "glColorTableParameterfv\0"
   "glColorTableParameterfvSGI\0"
   "glColorTableParameteriv\0"
   "glColorTableParameterivSGI\0"
   "glColorTableSGI\0"
   "glCombinerInputNV\0"
   "glCombinerOutputNV\0"
   "glCombinerParameterfNV\0"
   "glCombinerParameterfvNV\0"
   "glCombinerParameteriNV\0"
   "glCombinerParameterivNV\0"
   "glCombinerStageParameterfvNV\0"
   "glCommandListSegmentsNV\0"
   "glCompileCommandListNV\0"
   "glCompileShader\0"
   "glCompileShaderARB\0"
   "glCompileShaderIncludeARB\0"
   "glCompressedMultiTexImage1DEXT\0"
   "glCompressedMultiTexImage2DEXT\0"
   "glCompressedMultiTexImage3DEXT\0"
   "glCompressedMultiTexSubImage1DEXT\0"
   "glCompressedMultiTexSubImage2DEXT\0"
   "glCompressedMultiTexSubImage3DEXT\0"
   "glCompressedTexImage1D\0"
   "glCompressedTexImage1DARB\0"
   "glCompressedTexImage2D\0"
   "glCompressedTexImage2DARB\0"
   "glCompressedTexImage3D\0"
   "glCompressedTexImage3DARB\0"
   "glCompressedTexImage3DOES\0"
   "glCompressedTexSubImage1D\0"
   "glCompressedTexSubImage1DARB\0"
   "glCompressedTexSubImage2D\0"
   "glCompressedTexSubImage2DARB\0"
   "glCompressedTexSubImage3D\0"
   "glCompressedTexSubImage3DARB\0"
   "glCompressedTexSubImage3DOES\0"
   "glCompressedTextureImage1DEXT\0"
   "glCompressedTextureImage2DEXT\0"
   "glCompressedTextureImage3DEXT\0"
   "glCompressedTextureSubImage1D\0"
   "glCompressedTextureSubImage1DEXT\0"
   "glCompressedTextureSubImage2D\0"
   "glCompressedTextureSubImage2DEXT\0"
   "glCompressedTextureSubImage3D\0"
   "glCompressedTextureSubImage3DEXT\0"
   "glConvolutionFilter1D\0"
   "glConvolutionFilter1DEXT\0"
   "glConvolutionFilter2D\0"
   "glConvolutionFilter2DEXT\0"
   "glConvolutionParameterf\0"
   "glConvolutionParameterfEXT\0"
   "glConvolutionParameterfv\0"
   "glConvolutionParameterfvEXT\0"
   "glConvolutionParameteri\0"
   "glConvolutionParameteriEXT\0"
   "glConvolutionParameteriv\0"
   "glConvolutionParameterivEXT\0"
   "glConvolutionParameterxOES\0"
   "glConvolutionParameterxvOES\0"
   "glCopyBufferSubData\0"
   "glCopyBufferSubDataNV\0"
   "glCopyColorSubTable\0"
   "glCopyColorSubTableEXT\0"
   "glCopyColorTable\0"
   "glCopyColorTableSGI\0"
   "glCopyConvolutionFilter1D\0"
   "glCopyConvolutionFilter1DEXT\0"
   "glCopyConvolutionFilter2D\0"
   "glCopyConvolutionFilter2DEXT\0"
   "glCopyImageSubData\0"
   "glCopyImageSubDataEXT\0"
   "glCopyImageSubDataNV\0"
   "glCopyImageSubDataOES\0"
   "glCopyMultiTexImage1DEXT\0"
   "glCopyMultiTexImage2DEXT\0"
   "glCopyMultiTexSubImage1DEXT\0"
   "glCopyMultiTexSubImage2DEXT\0"
   "glCopyMultiTexSubImage3DEXT\0"
   "glCopyNamedBufferSubData\0"
   "glCopyPathNV\0"
   "glCopyPixels\0"
   "glCopyTexImage1D\0"
   "glCopyTexImage1DEXT\0"
   "glCopyTexImage2D\0"
   "glCopyTexImage2DEXT\0"
   "glCopyTexSubImage1D\0"
   "glCopyTexSubImage1DEXT\0"
   "glCopyTexSubImage2D\0"
   "glCopyTexSubImage2DEXT\0"
   "glCopyTexSubImage3D\0"
   "glCopyTexSubImage3DEXT\0"
   "glCopyTexSubImage3DOES\0"
   "glCopyTextureImage1DEXT\0"
   "glCopyTextureImage2DEXT\0"
   "glCopyTextureLevelsAPPLE\0"
   "glCopyTextureSubImage1D\0"
   "glCopyTextureSubImage1DEXT\0"
   "glCopyTextureSubImage2D\0"
   "glCopyTextureSubImage2DEXT\0"
   "glCopyTextureSubImage3D\0"
   "glCopyTextureSubImage3DEXT\0"
   "glCoverFillPathInstancedNV\0"
   "glCoverFillPathNV\0"
   "glCoverStrokePathInstancedNV\0"
   "glCoverStrokePathNV\0"
   "glCoverageMaskNV\0"
   "glCoverageModulationNV\0"
   "glCoverageModulationTableNV\0"
   "glCoverageOperationNV\0"
   "glCreateBuffers\0"
   "glCreateCommandListsNV\0"
   "glCreateFramebuffers\0"
   "glCreatePerfQueryINTEL\0"
   "glCreateProgram\0"
   "glCreateProgramObjectARB\0"
   "glCreateProgramPipelines\0"
   "glCreateQueries\0"
   "glCreateRenderbuffers\0"
   "glCreateSamplers\0"
   "glCreateShader\0"
   "glCreateShaderObjectARB\0"
   "glCreateShaderProgramEXT\0"
   "glCreateShaderProgramv\0"
   "glCreateShaderProgramvEXT\0"
   "glCreateStatesNV\0"
   "glCreateSyncFromCLeventARB\0"
   "glCreateTextures\0"
   "glCreateTransformFeedbacks\0"
   "glCreateVertexArrays\0"
   "glCullFace\0"
   "glCullParameterdvEXT\0"
   "glCullParameterfvEXT\0"
   "glCurrentPaletteMatrixARB\0"
   "glCurrentPaletteMatrixOES\0"
   "glDebugMessageCallback\0"
   "glDebugMessageCallbackAMD\0"
   "glDebugMessageCallbackARB\0"
   "glDebugMessageCallbackKHR\0"
   "glDebugMessageControl\0"
   "glDebugMessageControlARB\0"
   "glDebugMessageControlKHR\0"
   "glDebugMessageEnableAMD\0"
   "glDebugMessageInsert\0"
   "glDebugMessageInsertAMD\0"
   "glDebugMessageInsertARB\0"
   "glDebugMessageInsertKHR\0"
   "glDeformSGIX\0"
   "glDeformationMap3dSGIX\0"
   "glDeformationMap3fSGIX\0"
   "glDeleteAsyncMarkersSGIX\0"
   "glDeleteBuffers\0"
   "glDeleteBuffersARB\0"
   "glDeleteCommandListsNV\0"
   "glDeleteFencesAPPLE\0"
   "glDeleteFencesNV\0"
   "glDeleteFragmentShaderATI\0"
   "glDeleteFramebuffers\0"
   "glDeleteFramebuffersEXT\0"
   "glDeleteFramebuffersOES\0"
   "glDeleteLists\0"
   "glDeleteNamedStringARB\0"
   "glDeleteNamesAMD\0"
   "glDeleteObjectARB\0"
   "glDeleteOcclusionQueriesNV\0"
   "glDeletePathsNV\0"
   "glDeletePerfMonitorsAMD\0"
   "glDeletePerfQueryINTEL\0"
   "glDeleteProgram\0"
   "glDeleteProgramPipelines\0"
   "glDeleteProgramPipelinesEXT\0"
   "glDeleteProgramsARB\0"
   "glDeleteProgramsNV\0"
   "glDeleteQueries\0"
   "glDeleteQueriesARB\0"
   "glDeleteQueriesEXT\0"
   "glDeleteRenderbuffers\0"
   "glDeleteRenderbuffersEXT\0"
   "glDeleteRenderbuffersOES\0"
   "glDeleteSamplers\0"
   "glDeleteShader\0"
   "glDeleteStatesNV\0"
   "glDeleteSync\0"
   "glDeleteSyncAPPLE\0"
   "glDeleteTextures\0"
   "glDeleteTexturesEXT\0"
   "glDeleteTransformFeedbacks\0"
   "glDeleteTransformFeedbacksNV\0"
   "glDeleteVertexArrays\0"
   "glDeleteVertexArraysAPPLE\0"
   "glDeleteVertexArraysOES\0"
   "glDeleteVertexShaderEXT\0"
   "glDepthBoundsEXT\0"
   "glDepthBoundsdNV\0"
   "glDepthFunc\0"
   "glDepthMask\0"
   "glDepthRange\0"
   "glDepthRangeArrayfvNV\0"
   "glDepthRangeArrayv\0"
   "glDepthRangeIndexed\0"
   "glDepthRangeIndexedfNV\0"
   "glDepthRangedNV\0"
   "glDepthRangef\0"
   "glDepthRangefOES\0"
   "glDepthRangex\0"
   "glDepthRangexOES\0"
   "glDetachObjectARB\0"
   "glDetachShader\0"
   "glDetailTexFuncSGIS\0"
   "glDisable\0"
   "glDisableClientState\0"
   "glDisableClientStateIndexedEXT\0"
   "glDisableClientStateiEXT\0"
   "glDisableDriverControlQCOM\0"
   "glDisableIndexedEXT\0"
   "glDisableVariantClientStateEXT\0"
   "glDisableVertexArrayAttrib\0"
   "glDisableVertexArrayAttribEXT\0"
   "glDisableVertexArrayEXT\0"
   "glDisableVertexAttribAPPLE\0"
   "glDisableVertexAttribArray\0"
   "glDisableVertexAttribArrayARB\0"
   "glDisablei\0"
   "glDisableiEXT\0"
   "glDisableiNV\0"
   "glDisableiOES\0"
   "glDiscardFramebufferEXT\0"
   "glDispatchCompute\0"
   "glDispatchComputeGroupSizeARB\0"
   "glDispatchComputeIndirect\0"
   "glDrawArrays\0"
   "glDrawArraysEXT\0"
   "glDrawArraysIndirect\0"
   "glDrawArraysInstanced\0"
   "glDrawArraysInstancedANGLE\0"
   "glDrawArraysInstancedARB\0"
   "glDrawArraysInstancedBaseInstance\0"
   "glDrawArraysInstancedBaseInstanceEXT\0"
   "glDrawArraysInstancedEXT\0"
   "glDrawArraysInstancedNV\0"
   "glDrawBuffer\0"
   "glDrawBuffers\0"
   "glDrawBuffersARB\0"
   "glDrawBuffersATI\0"
   "glDrawBuffersEXT\0"
   "glDrawBuffersIndexedEXT\0"
   "glDrawBuffersNV\0"
   "glDrawCommandsAddressNV\0"
   "glDrawCommandsNV\0"
   "glDrawCommandsStatesAddressNV\0"
   "glDrawCommandsStatesNV\0"
   "glDrawElementArrayAPPLE\0"
   "glDrawElementArrayATI\0"
   "glDrawElements\0"
   "glDrawElementsBaseVertex\0"
   "glDrawElementsBaseVertexEXT\0"
   "glDrawElementsBaseVertexOES\0"
   "glDrawElementsIndirect\0"
   "glDrawElementsInstanced\0"
   "glDrawElementsInstancedANGLE\0"
   "glDrawElementsInstancedARB\0"
   "glDrawElementsInstancedBaseInstance\0"
   "glDrawElementsInstancedBaseInstanceEXT\0"
   "glDrawElementsInstancedBaseVertex\0"
   "glDrawElementsInstancedBaseVertexBaseInstance\0"
   "glDrawElementsInstancedBaseVertexBaseInstanceEXT\0"
   "glDrawElementsInstancedBaseVertexEXT\0"
   "glDrawElementsInstancedBaseVertexOES\0"
   "glDrawElementsInstancedEXT\0"
   "glDrawElementsInstancedNV\0"
   "glDrawMeshArraysSUN\0"
   "glDrawPixels\0"
   "glDrawRangeElementArrayAPPLE\0"
   "glDrawRangeElementArrayATI\0"
   "glDrawRangeElements\0"
   "glDrawRangeElementsBaseVertex\0"
   "glDrawRangeElementsBaseVertexEXT\0"
   "glDrawRangeElementsBaseVertexOES\0"
   "glDrawRangeElementsEXT\0"
   "glDrawTexfOES\0"
   "glDrawTexfvOES\0"
   "glDrawTexiOES\0"
   "glDrawTexivOES\0"
   "glDrawTexsOES\0"
   "glDrawTexsvOES\0"
   "glDrawTextureNV\0"
   "glDrawTexxOES\0"
   "glDrawTexxvOES\0"
   "glDrawTransformFeedback\0"
   "glDrawTransformFeedbackInstanced\0"
   "glDrawTransformFeedbackNV\0"
   "glDrawTransformFeedbackStream\0"
   "glDrawTransformFeedbackStreamInstanced\0"
   "glEGLImageTargetRenderbufferStorageOES\0"
   "glEGLImageTargetTexture2DOES\0"
   "glEdgeFlag\0"
   "glEdgeFlagFormatNV\0"
   "glEdgeFlagPointer\0"
   "glEdgeFlagPointerEXT\0"
   "glEdgeFlagPointerListIBM\0"
   "glEdgeFlagv\0"
   "glElementPointerAPPLE\0"
   "glElementPointerATI\0"
   "glEnable\0"
   "glEnableClientState\0"
   "glEnableClientStateIndexedEXT\0"
   "glEnableClientStateiEXT\0"
   "glEnableDriverControlQCOM\0"
   "glEnableIndexedEXT\0"
   "glEnableVariantClientStateEXT\0"
   "glEnableVertexArrayAttrib\0"
   "glEnableVertexArrayAttribEXT\0"
   "glEnableVertexArrayEXT\0"
   "glEnableVertexAttribAPPLE\0"
   "glEnableVertexAttribArray\0"
   "glEnableVertexAttribArrayARB\0"
   "glEnablei\0"
   "glEnableiEXT\0"
   "glEnableiNV\0"
   "glEnableiOES\0"
   "glEnd\0"
   "glEndConditionalRender\0"
   "glEndConditionalRenderNV\0"
   "glEndConditionalRenderNVX\0"
   "glEndFragmentShaderATI\0"
   "glEndList\0"
   "glEndOcclusionQueryNV\0"
   "glEndPerfMonitorAMD\0"
   "glEndPerfQueryINTEL\0"
   "glEndQuery\0"
   "glEndQueryARB\0"
   "glEndQueryEXT\0"
   "glEndQueryIndexed\0"
   "glEndTilingQCOM\0"
   "glEndTransformFeedback\0"
   "glEndTransformFeedbackEXT\0"
   "glEndTransformFeedbackNV\0"
   "glEndVertexShaderEXT\0"
   "glEndVideoCaptureNV\0"
   "glEvalCoord1d\0"
   "glEvalCoord1dv\0"
   "glEvalCoord1f\0"
   "glEvalCoord1fv\0"
   "glEvalCoord1xOES\0"
   "glEvalCoord1xvOES\0"
   "glEvalCoord2d\0"
   "glEvalCoord2dv\0"
   "glEvalCoord2f\0"
   "glEvalCoord2fv\0"
   "glEvalCoord2xOES\0"
   "glEvalCoord2xvOES\0"
   "glEvalMapsNV\0"
   "glEvalMesh1\0"
   "glEvalMesh2\0"
   "glEvalPoint1\0"
   "glEvalPoint2\0"
   "glExecuteProgramNV\0"
   "glExtGetBufferPointervQCOM\0"
   "glExtGetBuffersQCOM\0"
   "glExtGetFramebuffersQCOM\0"
   "glExtGetProgramBinarySourceQCOM\0"
   "glExtGetProgramsQCOM\0"
   "glExtGetRenderbuffersQCOM\0"
   "glExtGetShadersQCOM\0"
   "glExtGetTexLevelParameterivQCOM\0"
   "glExtGetTexSubImageQCOM\0"
   "glExtGetTexturesQCOM\0"
   "glExtIsProgramBinaryQCOM\0"
   "glExtTexObjectStateOverrideiQCOM\0"
   "glExtractComponentEXT\0"
   "glFeedbackBuffer\0"
   "glFeedbackBufferxOES\0"
   "glFenceSync\0"
   "glFenceSyncAPPLE\0"
   "glFinalCombinerInputNV\0"
   "glFinish\0"
   "glFinishAsyncSGIX\0"
   "glFinishFenceAPPLE\0"
   "glFinishFenceNV\0"
   "glFinishObjectAPPLE\0"
   "glFinishTextureSUNX\0"
   "glFlush\0"
   "glFlushMappedBufferRange\0"
   "glFlushMappedBufferRangeAPPLE\0"
   "glFlushMappedBufferRangeEXT\0"
   "glFlushMappedNamedBufferRange\0"
   "glFlushMappedNamedBufferRangeEXT\0"
   "glFlushPixelDataRangeNV\0"
   "glFlushRasterSGIX\0"
   "glFlushStaticDataIBM\0"
   "glFlushVertexArrayRangeAPPLE\0"
   "glFlushVertexArrayRangeNV\0"
   "glFogCoordFormatNV\0"
   "glFogCoordPointer\0"
   "glFogCoordPointerEXT\0"
   "glFogCoordPointerListIBM\0"
   "glFogCoordd\0"
   "glFogCoorddEXT\0"
   "glFogCoorddv\0"
   "glFogCoorddvEXT\0"
   "glFogCoordf\0"
   "glFogCoordfEXT\0"
   "glFogCoordfv\0"
   "glFogCoordfvEXT\0"
   "glFogCoordhNV\0"
   "glFogCoordhvNV\0"
   "glFogFuncSGIS\0"
   "glFogf\0"
   "glFogfv\0"
   "glFogi\0"
   "glFogiv\0"
   "glFogx\0"
   "glFogxOES\0"
   "glFogxv\0"
   "glFogxvOES\0"
   "glFragmentColorMaterialSGIX\0"
   "glFragmentCoverageColorNV\0"
   "glFragmentLightModelfSGIX\0"
   "glFragmentLightModelfvSGIX\0"
   "glFragmentLightModeliSGIX\0"
   "glFragmentLightModelivSGIX\0"
   "glFragmentLightfSGIX\0"
   "glFragmentLightfvSGIX\0"
   "glFragmentLightiSGIX\0"
   "glFragmentLightivSGIX\0"
   "glFragmentMaterialfSGIX\0"
   "glFragmentMaterialfvSGIX\0"
   "glFragmentMaterialiSGIX\0"
   "glFragmentMaterialivSGIX\0"
   "glFrameTerminatorGREMEDY\0"
   "glFrameZoomSGIX\0"
   "glFramebufferDrawBufferEXT\0"
   "glFramebufferDrawBuffersEXT\0"
   "glFramebufferParameteri\0"
   "glFramebufferReadBufferEXT\0"
   "glFramebufferRenderbuffer\0"
   "glFramebufferRenderbufferEXT\0"
   "glFramebufferRenderbufferOES\0"
   "glFramebufferSampleLocationsfvNV\0"
   "glFramebufferTexture\0"
   "glFramebufferTexture1D\0"
   "glFramebufferTexture1DEXT\0"
   "glFramebufferTexture2D\0"
   "glFramebufferTexture2DEXT\0"
   "glFramebufferTexture2DMultisampleEXT\0"
   "glFramebufferTexture2DMultisampleIMG\0"
   "glFramebufferTexture2DOES\0"
   "glFramebufferTexture3D\0"
   "glFramebufferTexture3DEXT\0"
   "glFramebufferTexture3DOES\0"
   "glFramebufferTextureARB\0"
   "glFramebufferTextureEXT\0"
   "glFramebufferTextureFaceARB\0"
   "glFramebufferTextureFaceEXT\0"
   "glFramebufferTextureLayer\0"
   "glFramebufferTextureLayerARB\0"
   "glFramebufferTextureLayerEXT\0"
   "glFramebufferTextureMultiviewOVR\0"
   "glFramebufferTextureOES\0"
   "glFreeObjectBufferATI\0"
   "glFrontFace\0"
   "glFrustum\0"
   "glFrustumf\0"
   "glFrustumfOES\0"
   "glFrustumx\0"
   "glFrustumxOES\0"
   "glGenAsyncMarkersSGIX\0"
   "glGenBuffers\0"
   "glGenBuffersARB\0"
   "glGenFencesAPPLE\0"
   "glGenFencesNV\0"
   "glGenFragmentShadersATI\0"
   "glGenFramebuffers\0"
   "glGenFramebuffersEXT\0"
   "glGenFramebuffersOES\0"
   "glGenLists\0"
   "glGenNamesAMD\0"
   "glGenOcclusionQueriesNV\0"
   "glGenPathsNV\0"
   "glGenPerfMonitorsAMD\0"
   "glGenProgramPipelines\0"
   "glGenProgramPipelinesEXT\0"
   "glGenProgramsARB\0"
   "glGenProgramsNV\0"
   "glGenQueries\0"
   "glGenQueriesARB\0"
   "glGenQueriesEXT\0"
   "glGenRenderbuffers\0"
   "glGenRenderbuffersEXT\0"
   "glGenRenderbuffersOES\0"
   "glGenSamplers\0"
   "glGenSymbolsEXT\0"
   "glGenTextures\0"
   "glGenTexturesEXT\0"
   "glGenTransformFeedbacks\0"
   "glGenTransformFeedbacksNV\0"
   "glGenVertexArrays\0"
   "glGenVertexArraysAPPLE\0"
   "glGenVertexArraysOES\0"
   "glGenVertexShadersEXT\0"
   "glGenerateMipmap\0"
   "glGenerateMipmapEXT\0"
   "glGenerateMipmapOES\0"
   "glGenerateMultiTexMipmapEXT\0"
   "glGenerateTextureMipmap\0"
   "glGenerateTextureMipmapEXT\0"
   "glGetActiveAtomicCounterBufferiv\0"
   "glGetActiveAttrib\0"
   "glGetActiveAttribARB\0"
   "glGetActiveSubroutineName\0"
   "glGetActiveSubroutineUniformName\0"
   "glGetActiveSubroutineUniformiv\0"
   "glGetActiveUniform\0"
   "glGetActiveUniformARB\0"
   "glGetActiveUniformBlockName\0"
   "glGetActiveUniformBlockiv\0"
   "glGetActiveUniformName\0"
   "glGetActiveUniformsiv\0"
   "glGetActiveVaryingNV\0"
   "glGetArrayObjectfvATI\0"
   "glGetArrayObjectivATI\0"
   "glGetAttachedObjectsARB\0"
   "glGetAttachedShaders\0"
   "glGetAttribLocation\0"
   "glGetAttribLocationARB\0"
   "glGetBooleanIndexedvEXT\0"
   "glGetBooleani_v\0"
   "glGetBooleanv\0"
   "glGetBufferParameteri64v\0"
   "glGetBufferParameteriv\0"
   "glGetBufferParameterivARB\0"
   "glGetBufferParameterui64vNV\0"
   "glGetBufferPointerv\0"
   "glGetBufferPointervARB\0"
   "glGetBufferPointervOES\0"
   "glGetBufferSubData\0"
   "glGetBufferSubDataARB\0"
   "glGetClipPlane\0"
   "glGetClipPlanef\0"
   "glGetClipPlanefOES\0"
   "glGetClipPlanex\0"
   "glGetClipPlanexOES\0"
   "glGetColorTable\0"
   "glGetColorTableEXT\0"
   "glGetColorTableParameterfv\0"
   "glGetColorTableParameterfvEXT\0"
   "glGetColorTableParameterfvSGI\0"
   "glGetColorTableParameteriv\0"
   "glGetColorTableParameterivEXT\0"
   "glGetColorTableParameterivSGI\0"
   "glGetColorTableSGI\0"
   "glGetCombinerInputParameterfvNV\0"
   "glGetCombinerInputParameterivNV\0"
   "glGetCombinerOutputParameterfvNV\0"
   "glGetCombinerOutputParameterivNV\0"
   "glGetCombinerStageParameterfvNV\0"
   "glGetCommandHeaderNV\0"
   "glGetCompressedMultiTexImageEXT\0"
   "glGetCompressedTexImage\0"
   "glGetCompressedTexImageARB\0"
   "glGetCompressedTextureImage\0"
   "glGetCompressedTextureImageEXT\0"
   "glGetCompressedTextureSubImage\0"
   "glGetConvolutionFilter\0"
   "glGetConvolutionFilterEXT\0"
   "glGetConvolutionParameterfv\0"
   "glGetConvolutionParameterfvEXT\0"
   "glGetConvolutionParameteriv\0"
   "glGetConvolutionParameterivEXT\0"
   "glGetConvolutionParameterxvOES\0"
   "glGetCoverageModulationTableNV\0"
   "glGetDebugMessageLog\0"
   "glGetDebugMessageLogAMD\0"
   "glGetDebugMessageLogARB\0"
   "glGetDebugMessageLogKHR\0"
   "glGetDetailTexFuncSGIS\0"
   "glGetDoubleIndexedvEXT\0"
   "glGetDoublei_v\0"
   "glGetDoublei_vEXT\0"
   "glGetDoublev\0"
   "glGetDriverControlStringQCOM\0"
   "glGetDriverControlsQCOM\0"
   "glGetError\0"
   "glGetFenceivNV\0"
   "glGetFinalCombinerInputParameterfvNV\0"
   "glGetFinalCombinerInputParameterivNV\0"
   "glGetFirstPerfQueryIdINTEL\0"
   "glGetFixedv\0"
   "glGetFixedvOES\0"
   "glGetFloatIndexedvEXT\0"
   "glGetFloati_v\0"
   "glGetFloati_vEXT\0"
   "glGetFloati_vNV\0"
   "glGetFloatv\0"
   "glGetFogFuncSGIS\0"
   "glGetFragDataIndex\0"
   "glGetFragDataLocation\0"
   "glGetFragDataLocationEXT\0"
   "glGetFragmentLightfvSGIX\0"
   "glGetFragmentLightivSGIX\0"
   "glGetFragmentMaterialfvSGIX\0"
   "glGetFragmentMaterialivSGIX\0"
   "glGetFramebufferAttachmentParameteriv\0"
   "glGetFramebufferAttachmentParameterivEXT\0"
   "glGetFramebufferAttachmentParameterivOES\0"
   "glGetFramebufferParameteriv\0"
   "glGetFramebufferParameterivEXT\0"
   "glGetGraphicsResetStatus\0"
   "glGetGraphicsResetStatusARB\0"
   "glGetGraphicsResetStatusEXT\0"
   "glGetGraphicsResetStatusKHR\0"
   "glGetHandleARB\0"
   "glGetHistogram\0"
   "glGetHistogramEXT\0"
   "glGetHistogramParameterfv\0"
   "glGetHistogramParameterfvEXT\0"
   "glGetHistogramParameteriv\0"
   "glGetHistogramParameterivEXT\0"
   "glGetHistogramParameterxvOES\0"
   "glGetImageHandleARB\0"
   "glGetImageHandleNV\0"
   "glGetImageTransformParameterfvHP\0"
   "glGetImageTransformParameterivHP\0"
   "glGetInfoLogARB\0"
   "glGetInstrumentsSGIX\0"
   "glGetInteger64i_v\0"
   "glGetInteger64v\0"
   "glGetInteger64vAPPLE\0"
   "glGetIntegerIndexedvEXT\0"
   "glGetIntegeri_v\0"
   "glGetIntegeri_vEXT\0"
   "glGetIntegerui64i_vNV\0"
   "glGetIntegerui64vNV\0"
   "glGetIntegerv\0"
   "glGetInternalformatSampleivNV\0"
   "glGetInternalformati64v\0"
   "glGetInternalformativ\0"
   "glGetInvariantBooleanvEXT\0"
   "glGetInvariantFloatvEXT\0"
   "glGetInvariantIntegervEXT\0"
   "glGetLightfv\0"
   "glGetLightiv\0"
   "glGetLightxOES\0"
   "glGetLightxv\0"
   "glGetLightxvOES\0"
   "glGetListParameterfvSGIX\0"
   "glGetListParameterivSGIX\0"
   "glGetLocalConstantBooleanvEXT\0"
   "glGetLocalConstantFloatvEXT\0"
   "glGetLocalConstantIntegervEXT\0"
   "glGetMapAttribParameterfvNV\0"
   "glGetMapAttribParameterivNV\0"
   "glGetMapControlPointsNV\0"
   "glGetMapParameterfvNV\0"
   "glGetMapParameterivNV\0"
   "glGetMapdv\0"
   "glGetMapfv\0"
   "glGetMapiv\0"
   "glGetMapxvOES\0"
   "glGetMaterialfv\0"
   "glGetMaterialiv\0"
   "glGetMaterialxOES\0"
   "glGetMaterialxv\0"
   "glGetMaterialxvOES\0"
   "glGetMinmax\0"
   "glGetMinmaxEXT\0"
   "glGetMinmaxParameterfv\0"
   "glGetMinmaxParameterfvEXT\0"
   "glGetMinmaxParameteriv\0"
   "glGetMinmaxParameterivEXT\0"
   "glGetMultiTexEnvfvEXT\0"
   "glGetMultiTexEnvivEXT\0"
   "glGetMultiTexGendvEXT\0"
   "glGetMultiTexGenfvEXT\0"
   "glGetMultiTexGenivEXT\0"
   "glGetMultiTexImageEXT\0"
   "glGetMultiTexLevelParameterfvEXT\0"
   "glGetMultiTexLevelParameterivEXT\0"
   "glGetMultiTexParameterIivEXT\0"
   "glGetMultiTexParameterIuivEXT\0"
   "glGetMultiTexParameterfvEXT\0"
   "glGetMultiTexParameterivEXT\0"
   "glGetMultisamplefv\0"
   "glGetMultisamplefvNV\0"
   "glGetNamedBufferParameteri64v\0"
   "glGetNamedBufferParameteriv\0"
   "glGetNamedBufferParameterivEXT\0"
   "glGetNamedBufferParameterui64vNV\0"
   "glGetNamedBufferPointerv\0"
   "glGetNamedBufferPointervEXT\0"
   "glGetNamedBufferSubData\0"
   "glGetNamedBufferSubDataEXT\0"
   "glGetNamedFramebufferAttachmentParameteriv\0"
   "glGetNamedFramebufferAttachmentParameterivEXT\0"
   "glGetNamedFramebufferParameteriv\0"
   "glGetNamedFramebufferParameterivEXT\0"
   "glGetNamedProgramLocalParameterIivEXT\0"
   "glGetNamedProgramLocalParameterIuivEXT\0"
   "glGetNamedProgramLocalParameterdvEXT\0"
   "glGetNamedProgramLocalParameterfvEXT\0"
   "glGetNamedProgramStringEXT\0"
   "glGetNamedProgramivEXT\0"
   "glGetNamedRenderbufferParameteriv\0"
   "glGetNamedRenderbufferParameterivEXT\0"
   "glGetNamedStringARB\0"
   "glGetNamedStringivARB\0"
   "glGetNextPerfQueryIdINTEL\0"
   "glGetObjectBufferfvATI\0"
   "glGetObjectBufferivATI\0"
   "glGetObjectLabel\0"
   "glGetObjectLabelEXT\0"
   "glGetObjectLabelKHR\0"
   "glGetObjectParameterfvARB\0"
   "glGetObjectParameterivAPPLE\0"
   "glGetObjectParameterivARB\0"
   "glGetObjectPtrLabel\0"
   "glGetObjectPtrLabelKHR\0"
   "glGetOcclusionQueryivNV\0"
   "glGetOcclusionQueryuivNV\0"
   "glGetPathColorGenfvNV\0"
   "glGetPathColorGenivNV\0"
   "glGetPathCommandsNV\0"
   "glGetPathCoordsNV\0"
   "glGetPathDashArrayNV\0"
   "glGetPathLengthNV\0"
   "glGetPathMetricRangeNV\0"
   "glGetPathMetricsNV\0"
   "glGetPathParameterfvNV\0"
   "glGetPathParameterivNV\0"
   "glGetPathSpacingNV\0"
   "glGetPathTexGenfvNV\0"
   "glGetPathTexGenivNV\0"
   "glGetPerfCounterInfoINTEL\0"
   "glGetPerfMonitorCounterDataAMD\0"
   "glGetPerfMonitorCounterInfoAMD\0"
   "glGetPerfMonitorCounterStringAMD\0"
   "glGetPerfMonitorCountersAMD\0"
   "glGetPerfMonitorGroupStringAMD\0"
   "glGetPerfMonitorGroupsAMD\0"
   "glGetPerfQueryDataINTEL\0"
   "glGetPerfQueryIdByNameINTEL\0"
   "glGetPerfQueryInfoINTEL\0"
   "glGetPixelMapfv\0"
   "glGetPixelMapuiv\0"
   "glGetPixelMapusv\0"
   "glGetPixelMapxv\0"
   "glGetPixelTexGenParameterfvSGIS\0"
   "glGetPixelTexGenParameterivSGIS\0"
   "glGetPixelTransformParameterfvEXT\0"
   "glGetPixelTransformParameterivEXT\0"
   "glGetPointerIndexedvEXT\0"
   "glGetPointeri_vEXT\0"
   "glGetPointerv\0"
   "glGetPointervEXT\0"
   "glGetPointervKHR\0"
   "glGetPolygonStipple\0"
   "glGetProgramBinary\0"
   "glGetProgramBinaryOES\0"
   "glGetProgramEnvParameterIivNV\0"
   "glGetProgramEnvParameterIuivNV\0"
   "glGetProgramEnvParameterdvARB\0"
   "glGetProgramEnvParameterfvARB\0"
   "glGetProgramInfoLog\0"
   "glGetProgramInterfaceiv\0"
   "glGetProgramLocalParameterIivNV\0"
   "glGetProgramLocalParameterIuivNV\0"
   "glGetProgramLocalParameterdvARB\0"
   "glGetProgramLocalParameterfvARB\0"
   "glGetProgramNamedParameterdvNV\0"
   "glGetProgramNamedParameterfvNV\0"
   "glGetProgramParameterdvNV\0"
   "glGetProgramParameterfvNV\0"
   "glGetProgramPipelineInfoLog\0"
   "glGetProgramPipelineInfoLogEXT\0"
   "glGetProgramPipelineiv\0"
   "glGetProgramPipelineivEXT\0"
   "glGetProgramResourceIndex\0"
   "glGetProgramResourceLocation\0"
   "glGetProgramResourceLocationIndex\0"
   "glGetProgramResourceName\0"
   "glGetProgramResourcefvNV\0"
   "glGetProgramResourceiv\0"
   "glGetProgramStageiv\0"
   "glGetProgramStringARB\0"
   "glGetProgramStringNV\0"
   "glGetProgramSubroutineParameteruivNV\0"
   "glGetProgramiv\0"
   "glGetProgramivARB\0"
   "glGetProgramivNV\0"
   "glGetQueryBufferObjecti64v\0"
   "glGetQueryBufferObjectiv\0"
   "glGetQueryBufferObjectui64v\0"
   "glGetQueryBufferObjectuiv\0"
   "glGetQueryIndexediv\0"
   "glGetQueryObjecti64v\0"
   "glGetQueryObjecti64vEXT\0"
   "glGetQueryObjectiv\0"
   "glGetQueryObjectivARB\0"
   "glGetQueryObjectivEXT\0"
   "glGetQueryObjectui64v\0"
   "glGetQueryObjectui64vEXT\0"
   "glGetQueryObjectuiv\0"
   "glGetQueryObjectuivARB\0"
   "glGetQueryObjectuivEXT\0"
   "glGetQueryiv\0"
   "glGetQueryivARB\0"
   "glGetQueryivEXT\0"
   "glGetRenderbufferParameteriv\0"
   "glGetRenderbufferParameterivEXT\0"
   "glGetRenderbufferParameterivOES\0"
   "glGetSamplerParameterIiv\0"
   "glGetSamplerParameterIivEXT\0"
   "glGetSamplerParameterIivOES\0"
   "glGetSamplerParameterIuiv\0"
   "glGetSamplerParameterIuivEXT\0"
   "glGetSamplerParameterIuivOES\0"
   "glGetSamplerParameterfv\0"
   "glGetSamplerParameteriv\0"
   "glGetSeparableFilter\0"
   "glGetSeparableFilterEXT\0"
   "glGetShaderInfoLog\0"
   "glGetShaderPrecisionFormat\0"
   "glGetShaderSource\0"
   "glGetShaderSourceARB\0"
   "glGetShaderiv\0"
   "glGetSharpenTexFuncSGIS\0"
   "glGetStageIndexNV\0"
   "glGetString\0"
   "glGetStringi\0"
   "glGetSubroutineIndex\0"
   "glGetSubroutineUniformLocation\0"
   "glGetSynciv\0"
   "glGetSyncivAPPLE\0"
   "glGetTexBumpParameterfvATI\0"
   "glGetTexBumpParameterivATI\0"
   "glGetTexEnvfv\0"
   "glGetTexEnviv\0"
   "glGetTexEnvxv\0"
   "glGetTexEnvxvOES\0"
   "glGetTexFilterFuncSGIS\0"
   "glGetTexGendv\0"
   "glGetTexGenfv\0"
   "glGetTexGenfvOES\0"
   "glGetTexGeniv\0"
   "glGetTexGenivOES\0"
   "glGetTexGenxvOES\0"
   "glGetTexImage\0"
   "glGetTexLevelParameterfv\0"
   "glGetTexLevelParameteriv\0"
   "glGetTexLevelParameterxvOES\0"
   "glGetTexParameterIiv\0"
   "glGetTexParameterIivEXT\0"
   "glGetTexParameterIivOES\0"
   "glGetTexParameterIuiv\0"
   "glGetTexParameterIuivEXT\0"
   "glGetTexParameterIuivOES\0"
   "glGetTexParameterPointervAPPLE\0"
   "glGetTexParameterfv\0"
   "glGetTexParameteriv\0"
   "glGetTexParameterxv\0"
   "glGetTexParameterxvOES\0"
   "glGetTextureHandleARB\0"
   "glGetTextureHandleNV\0"
   "glGetTextureImage\0"
   "glGetTextureImageEXT\0"
   "glGetTextureLevelParameterfv\0"
   "glGetTextureLevelParameterfvEXT\0"
   "glGetTextureLevelParameteriv\0"
   "glGetTextureLevelParameterivEXT\0"
   "glGetTextureParameterIiv\0"
   "glGetTextureParameterIivEXT\0"
   "glGetTextureParameterIuiv\0"
   "glGetTextureParameterIuivEXT\0"
   "glGetTextureParameterfv\0"
   "glGetTextureParameterfvEXT\0"
   "glGetTextureParameteriv\0"
   "glGetTextureParameterivEXT\0"
   "glGetTextureSamplerHandleARB\0"
   "glGetTextureSamplerHandleNV\0"
   "glGetTextureSubImage\0"
   "glGetTrackMatrixivNV\0"
   "glGetTransformFeedbackVarying\0"
   "glGetTransformFeedbackVaryingEXT\0"
   "glGetTransformFeedbackVaryingNV\0"
   "glGetTransformFeedbacki64_v\0"
   "glGetTransformFeedbacki_v\0"
   "glGetTransformFeedbackiv\0"
   "glGetTranslatedShaderSourceANGLE\0"
   "glGetUniformBlockIndex\0"
   "glGetUniformBufferSizeEXT\0"
   "glGetUniformIndices\0"
   "glGetUniformLocation\0"
   "glGetUniformLocationARB\0"
   "glGetUniformOffsetEXT\0"
   "glGetUniformSubroutineuiv\0"
   "glGetUniformdv\0"
   "glGetUniformfv\0"
   "glGetUniformfvARB\0"
   "glGetUniformi64vNV\0"
   "glGetUniformiv\0"
   "glGetUniformivARB\0"
   "glGetUniformui64vNV\0"
   "glGetUniformuiv\0"
   "glGetUniformuivEXT\0"
   "glGetVariantArrayObjectfvATI\0"
   "glGetVariantArrayObjectivATI\0"
   "glGetVariantBooleanvEXT\0"
   "glGetVariantFloatvEXT\0"
   "glGetVariantIntegervEXT\0"
   "glGetVariantPointervEXT\0"
   "glGetVaryingLocationNV\0"
   "glGetVertexArrayIndexed64iv\0"
   "glGetVertexArrayIndexediv\0"
   "glGetVertexArrayIntegeri_vEXT\0"
   "glGetVertexArrayIntegervEXT\0"
   "glGetVertexArrayPointeri_vEXT\0"
   "glGetVertexArrayPointervEXT\0"
   "glGetVertexArrayiv\0"
   "glGetVertexAttribArrayObjectfvATI\0"
   "glGetVertexAttribArrayObjectivATI\0"
   "glGetVertexAttribIiv\0"
   "glGetVertexAttribIivEXT\0"
   "glGetVertexAttribIuiv\0"
   "glGetVertexAttribIuivEXT\0"
   "glGetVertexAttribLdv\0"
   "glGetVertexAttribLdvEXT\0"
   "glGetVertexAttribLi64vNV\0"
   "glGetVertexAttribLui64vARB\0"
   "glGetVertexAttribLui64vNV\0"
   "glGetVertexAttribPointerv\0"
   "glGetVertexAttribPointervARB\0"
   "glGetVertexAttribPointervNV\0"
   "glGetVertexAttribdv\0"
   "glGetVertexAttribdvARB\0"
   "glGetVertexAttribdvNV\0"
   "glGetVertexAttribfv\0"
   "glGetVertexAttribfvARB\0"
   "glGetVertexAttribfvNV\0"
   "glGetVertexAttribiv\0"
   "glGetVertexAttribivARB\0"
   "glGetVertexAttribivNV\0"
   "glGetVideoCaptureStreamdvNV\0"
   "glGetVideoCaptureStreamfvNV\0"
   "glGetVideoCaptureStreamivNV\0"
   "glGetVideoCaptureivNV\0"
   "glGetVideoi64vNV\0"
   "glGetVideoivNV\0"
   "glGetVideoui64vNV\0"
   "glGetVideouivNV\0"
   "glGetnColorTable\0"
   "glGetnColorTableARB\0"
   "glGetnCompressedTexImage\0"
   "glGetnCompressedTexImageARB\0"
   "glGetnConvolutionFilter\0"
   "glGetnConvolutionFilterARB\0"
   "glGetnHistogram\0"
   "glGetnHistogramARB\0"
   "glGetnMapdv\0"
   "glGetnMapdvARB\0"
   "glGetnMapfv\0"
   "glGetnMapfvARB\0"
   "glGetnMapiv\0"
   "glGetnMapivARB\0"
   "glGetnMinmax\0"
   "glGetnMinmaxARB\0"
   "glGetnPixelMapfv\0"
   "glGetnPixelMapfvARB\0"
   "glGetnPixelMapuiv\0"
   "glGetnPixelMapuivARB\0"
   "glGetnPixelMapusv\0"
   "glGetnPixelMapusvARB\0"
   "glGetnPolygonStipple\0"
   "glGetnPolygonStippleARB\0"
   "glGetnSeparableFilter\0"
   "glGetnSeparableFilterARB\0"
   "glGetnTexImage\0"
   "glGetnTexImageARB\0"
   "glGetnUniformdv\0"
   "glGetnUniformdvARB\0"
   "glGetnUniformfv\0"
   "glGetnUniformfvARB\0"
   "glGetnUniformfvEXT\0"
   "glGetnUniformfvKHR\0"
   "glGetnUniformiv\0"
   "glGetnUniformivARB\0"
   "glGetnUniformivEXT\0"
   "glGetnUniformivKHR\0"
   "glGetnUniformuiv\0"
   "glGetnUniformuivARB\0"
   "glGetnUniformuivKHR\0"
   "glGlobalAlphaFactorbSUN\0"
   "glGlobalAlphaFactordSUN\0"
   "glGlobalAlphaFactorfSUN\0"
   "glGlobalAlphaFactoriSUN\0"
   "glGlobalAlphaFactorsSUN\0"
   "glGlobalAlphaFactorubSUN\0"
   "glGlobalAlphaFactoruiSUN\0"
   "glGlobalAlphaFactorusSUN\0"
   "glHint\0"
   "glHintPGI\0"
   "glHistogram\0"
   "glHistogramEXT\0"
   "glIglooInterfaceSGIX\0"
   "glImageTransformParameterfHP\0"
   "glImageTransformParameterfvHP\0"
   "glImageTransformParameteriHP\0"
   "glImageTransformParameterivHP\0"
   "glImportSyncEXT\0"
   "glIndexFormatNV\0"
   "glIndexFuncEXT\0"
   "glIndexMask\0"
   "glIndexMaterialEXT\0"
   "glIndexPointer\0"
   "glIndexPointerEXT\0"
   "glIndexPointerListIBM\0"
   "glIndexd\0"
   "glIndexdv\0"
   "glIndexf\0"
   "glIndexfv\0"
   "glIndexi\0"
   "glIndexiv\0"
   "glIndexs\0"
   "glIndexsv\0"
   "glIndexub\0"
   "glIndexubv\0"
   "glIndexxOES\0"
   "glIndexxvOES\0"
   "glInitNames\0"
   "glInsertComponentEXT\0"
   "glInsertEventMarkerEXT\0"
   "glInstrumentsBufferSGIX\0"
   "glInterleavedArrays\0"
   "glInterpolatePathsNV\0"
   "glInvalidateBufferData\0"
   "glInvalidateBufferSubData\0"
   "glInvalidateFramebuffer\0"
   "glInvalidateNamedFramebufferData\0"
   "glInvalidateNamedFramebufferSubData\0"
   "glInvalidateSubFramebuffer\0"
   "glInvalidateTexImage\0"
   "glInvalidateTexSubImage\0"
   "glIsAsyncMarkerSGIX\0"
   "glIsBuffer\0"
   "glIsBufferARB\0"
   "glIsBufferResidentNV\0"
   "glIsCommandListNV\0"
   "glIsEnabled\0"
   "glIsEnabledIndexedEXT\0"
   "glIsEnabledi\0"
   "glIsEnablediEXT\0"
   "glIsEnablediNV\0"
   "glIsEnablediOES\0"
   "glIsFenceAPPLE\0"
   "glIsFenceNV\0"
   "glIsFramebuffer\0"
   "glIsFramebufferEXT\0"
   "glIsFramebufferOES\0"
   "glIsImageHandleResidentARB\0"
   "glIsImageHandleResidentNV\0"
   "glIsList\0"
   "glIsNameAMD\0"
   "glIsNamedBufferResidentNV\0"
   "glIsNamedStringARB\0"
   "glIsObjectBufferATI\0"
   "glIsOcclusionQueryNV\0"
   "glIsPathNV\0"
   "glIsPointInFillPathNV\0"
   "glIsPointInStrokePathNV\0"
   "glIsProgram\0"
   "glIsProgramARB\0"
   "glIsProgramNV\0"
   "glIsProgramPipeline\0"
   "glIsProgramPipelineEXT\0"
   "glIsQuery\0"
   "glIsQueryARB\0"
   "glIsQueryEXT\0"
   "glIsRenderbuffer\0"
   "glIsRenderbufferEXT\0"
   "glIsRenderbufferOES\0"
   "glIsSampler\0"
   "glIsShader\0"
   "glIsStateNV\0"
   "glIsSync\0"
   "glIsSyncAPPLE\0"
   "glIsTexture\0"
   "glIsTextureEXT\0"
   "glIsTextureHandleResidentARB\0"
   "glIsTextureHandleResidentNV\0"
   "glIsTransformFeedback\0"
   "glIsTransformFeedbackNV\0"
   "glIsVariantEnabledEXT\0"
   "glIsVertexArray\0"
   "glIsVertexArrayAPPLE\0"
   "glIsVertexArrayOES\0"
   "glIsVertexAttribEnabledAPPLE\0"
   "glLabelObjectEXT\0"
   "glLightEnviSGIX\0"
   "glLightModelf\0"
   "glLightModelfv\0"
   "glLightModeli\0"
   "glLightModeliv\0"
   "glLightModelx\0"
   "glLightModelxOES\0"
   "glLightModelxv\0"
   "glLightModelxvOES\0"
   "glLightf\0"
   "glLightfv\0"
   "glLighti\0"
   "glLightiv\0"
   "glLightx\0"
   "glLightxOES\0"
   "glLightxv\0"
   "glLightxvOES\0"
   "glLineStipple\0"
   "glLineWidth\0"
   "glLineWidthx\0"
   "glLineWidthxOES\0"
   "glLinkProgram\0"
   "glLinkProgramARB\0"
   "glListBase\0"
   "glListDrawCommandsStatesClientNV\0"
   "glListParameterfSGIX\0"
   "glListParameterfvSGIX\0"
   "glListParameteriSGIX\0"
   "glListParameterivSGIX\0"
   "glLoadIdentity\0"
   "glLoadIdentityDeformationMapSGIX\0"
   "glLoadMatrixd\0"
   "glLoadMatrixf\0"
   "glLoadMatrixx\0"
   "glLoadMatrixxOES\0"
   "glLoadName\0"
   "glLoadPaletteFromModelViewMatrixOES\0"
   "glLoadProgramNV\0"
   "glLoadTransposeMatrixd\0"
   "glLoadTransposeMatrixdARB\0"
   "glLoadTransposeMatrixf\0"
   "glLoadTransposeMatrixfARB\0"
   "glLoadTransposeMatrixxOES\0"
   "glLockArraysEXT\0"
   "glLogicOp\0"
   "glMakeBufferNonResidentNV\0"
   "glMakeBufferResidentNV\0"
   "glMakeImageHandleNonResidentARB\0"
   "glMakeImageHandleNonResidentNV\0"
   "glMakeImageHandleResidentARB\0"
   "glMakeImageHandleResidentNV\0"
   "glMakeNamedBufferNonResidentNV\0"
   "glMakeNamedBufferResidentNV\0"
   "glMakeTextureHandleNonResidentARB\0"
   "glMakeTextureHandleNonResidentNV\0"
   "glMakeTextureHandleResidentARB\0"
   "glMakeTextureHandleResidentNV\0"
   "glMap1d\0"
   "glMap1f\0"
   "glMap1xOES\0"
   "glMap2d\0"
   "glMap2f\0"
   "glMap2xOES\0"
   "glMapBuffer\0"
   "glMapBufferARB\0"
   "glMapBufferOES\0"
   "glMapBufferRange\0"
   "glMapBufferRangeEXT\0"
   "glMapControlPointsNV\0"
   "glMapGrid1d\0"
   "glMapGrid1f\0"
   "glMapGrid1xOES\0"
   "glMapGrid2d\0"
   "glMapGrid2f\0"
   "glMapGrid2xOES\0"
   "glMapNamedBuffer\0"
   "glMapNamedBufferEXT\0"
   "glMapNamedBufferRange\0"
   "glMapNamedBufferRangeEXT\0"
   "glMapObjectBufferATI\0"
   "glMapParameterfvNV\0"
   "glMapParameterivNV\0"
   "glMapTexture2DINTEL\0"
   "glMapVertexAttrib1dAPPLE\0"
   "glMapVertexAttrib1fAPPLE\0"
   "glMapVertexAttrib2dAPPLE\0"
   "glMapVertexAttrib2fAPPLE\0"
   "glMaterialf\0"
   "glMaterialfv\0"
   "glMateriali\0"
   "glMaterialiv\0"
   "glMaterialx\0"
   "glMaterialxOES\0"
   "glMaterialxv\0"
   "glMaterialxvOES\0"
   "glMatrixFrustumEXT\0"
   "glMatrixIndexPointerARB\0"
   "glMatrixIndexPointerOES\0"
   "glMatrixIndexubvARB\0"
   "glMatrixIndexuivARB\0"
   "glMatrixIndexusvARB\0"
   "glMatrixLoad3x2fNV\0"
   "glMatrixLoad3x3fNV\0"
   "glMatrixLoadIdentityEXT\0"
   "glMatrixLoadTranspose3x3fNV\0"
   "glMatrixLoadTransposedEXT\0"
   "glMatrixLoadTransposefEXT\0"
   "glMatrixLoaddEXT\0"
   "glMatrixLoadfEXT\0"
   "glMatrixMode\0"
   "glMatrixMult3x2fNV\0"
   "glMatrixMult3x3fNV\0"
   "glMatrixMultTranspose3x3fNV\0"
   "glMatrixMultTransposedEXT\0"
   "glMatrixMultTransposefEXT\0"
   "glMatrixMultdEXT\0"
   "glMatrixMultfEXT\0"
   "glMatrixOrthoEXT\0"
   "glMatrixPopEXT\0"
   "glMatrixPushEXT\0"
   "glMatrixRotatedEXT\0"
   "glMatrixRotatefEXT\0"
   "glMatrixScaledEXT\0"
   "glMatrixScalefEXT\0"
   "glMatrixTranslatedEXT\0"
   "glMatrixTranslatefEXT\0"
   "glMemoryBarrier\0"
   "glMemoryBarrierByRegion\0"
   "glMemoryBarrierEXT\0"
   "glMinSampleShading\0"
   "glMinSampleShadingARB\0"
   "glMinSampleShadingOES\0"
   "glMinmax\0"
   "glMinmaxEXT\0"
   "glMultMatrixd\0"
   "glMultMatrixf\0"
   "glMultMatrixx\0"
   "glMultMatrixxOES\0"
   "glMultTransposeMatrixd\0"
   "glMultTransposeMatrixdARB\0"
   "glMultTransposeMatrixf\0"
   "glMultTransposeMatrixfARB\0"
   "glMultTransposeMatrixxOES\0"
   "glMultiDrawArrays\0"
   "glMultiDrawArraysEXT\0"
   "glMultiDrawArraysIndirect\0"
   "glMultiDrawArraysIndirectAMD\0"
   "glMultiDrawArraysIndirectBindlessCountNV\0"
   "glMultiDrawArraysIndirectBindlessNV\0"
   "glMultiDrawArraysIndirectCountARB\0"
   "glMultiDrawArraysIndirectEXT\0"
   "glMultiDrawElementArrayAPPLE\0"
   "glMultiDrawElements\0"
   "glMultiDrawElementsBaseVertex\0"
   "glMultiDrawElementsBaseVertexEXT\0"
   "glMultiDrawElementsBaseVertexOES\0"
   "glMultiDrawElementsEXT\0"
   "glMultiDrawElementsIndirect\0"
   "glMultiDrawElementsIndirectAMD\0"
   "glMultiDrawElementsIndirectBindlessCountNV\0"
   "glMultiDrawElementsIndirectBindlessNV\0"
   "glMultiDrawElementsIndirectCountARB\0"
   "glMultiDrawElementsIndirectEXT\0"
   "glMultiDrawRangeElementArrayAPPLE\0"
   "glMultiModeDrawArraysIBM\0"
   "glMultiModeDrawElementsIBM\0"
   "glMultiTexBufferEXT\0"
   "glMultiTexCoord1bOES\0"
   "glMultiTexCoord1bvOES\0"
   "glMultiTexCoord1d\0"
   "glMultiTexCoord1dARB\0"
   "glMultiTexCoord1dv\0"
   "glMultiTexCoord1dvARB\0"
   "glMultiTexCoord1f\0"
   "glMultiTexCoord1fARB\0"
   "glMultiTexCoord1fv\0"
   "glMultiTexCoord1fvARB\0"
   "glMultiTexCoord1hNV\0"
   "glMultiTexCoord1hvNV\0"
   "glMultiTexCoord1i\0"
   "glMultiTexCoord1iARB\0"
   "glMultiTexCoord1iv\0"
   "glMultiTexCoord1ivARB\0"
   "glMultiTexCoord1s\0"
   "glMultiTexCoord1sARB\0"
   "glMultiTexCoord1sv\0"
   "glMultiTexCoord1svARB\0"
   "glMultiTexCoord1xOES\0"
   "glMultiTexCoord1xvOES\0"
   "glMultiTexCoord2bOES\0"
   "glMultiTexCoord2bvOES\0"
   "glMultiTexCoord2d\0"
   "glMultiTexCoord2dARB\0"
   "glMultiTexCoord2dv\0"
   "glMultiTexCoord2dvARB\0"
   "glMultiTexCoord2f\0"
   "glMultiTexCoord2fARB\0"
   "glMultiTexCoord2fv\0"
   "glMultiTexCoord2fvARB\0"
   "glMultiTexCoord2hNV\0"
   "glMultiTexCoord2hvNV\0"
   "glMultiTexCoord2i\0"
   "glMultiTexCoord2iARB\0"
   "glMultiTexCoord2iv\0"
   "glMultiTexCoord2ivARB\0"
   "glMultiTexCoord2s\0"
   "glMultiTexCoord2sARB\0"
   "glMultiTexCoord2sv\0"
   "glMultiTexCoord2svARB\0"
   "glMultiTexCoord2xOES\0"
   "glMultiTexCoord2xvOES\0"
   "glMultiTexCoord3bOES\0"
   "glMultiTexCoord3bvOES\0"
   "glMultiTexCoord3d\0"
   "glMultiTexCoord3dARB\0"
   "glMultiTexCoord3dv\0"
   "glMultiTexCoord3dvARB\0"
   "glMultiTexCoord3f\0"
   "glMultiTexCoord3fARB\0"
   "glMultiTexCoord3fv\0"
   "glMultiTexCoord3fvARB\0"
   "glMultiTexCoord3hNV\0"
   "glMultiTexCoord3hvNV\0"
   "glMultiTexCoord3i\0"
   "glMultiTexCoord3iARB\0"
   "glMultiTexCoord3iv\0"
   "glMultiTexCoord3ivARB\0"
   "glMultiTexCoord3s\0"
   "glMultiTexCoord3sARB\0"
   "glMultiTexCoord3sv\0"
   "glMultiTexCoord3svARB\0"
   "glMultiTexCoord3xOES\0"
   "glMultiTexCoord3xvOES\0"
   "glMultiTexCoord4bOES\0"
   "glMultiTexCoord4bvOES\0"
   "glMultiTexCoord4d\0"
   "glMultiTexCoord4dARB\0"
   "glMultiTexCoord4dv\0"
   "glMultiTexCoord4dvARB\0"
   "glMultiTexCoord4f\0"
   "glMultiTexCoord4fARB\0"
   "glMultiTexCoord4fv\0"
   "glMultiTexCoord4fvARB\0"
   "glMultiTexCoord4hNV\0"
   "glMultiTexCoord4hvNV\0"
   "glMultiTexCoord4i\0"
   "glMultiTexCoord4iARB\0"
   "glMultiTexCoord4iv\0"
   "glMultiTexCoord4ivARB\0"
   "glMultiTexCoord4s\0"
   "glMultiTexCoord4sARB\0"
   "glMultiTexCoord4sv\0"
   "glMultiTexCoord4svARB\0"
   "glMultiTexCoord4x\0"
   "glMultiTexCoord4xOES\0"
   "glMultiTexCoord4xvOES\0"
   "glMultiTexCoordP1ui\0"
   "glMultiTexCoordP1uiv\0"
   "glMultiTexCoordP2ui\0"
   "glMultiTexCoordP2uiv\0"
   "glMultiTexCoordP3ui\0"
   "glMultiTexCoordP3uiv\0"
   "glMultiTexCoordP4ui\0"
   "glMultiTexCoordP4uiv\0"
   "glMultiTexCoordPointerEXT\0"
   "glMultiTexEnvfEXT\0"
   "glMultiTexEnvfvEXT\0"
   "glMultiTexEnviEXT\0"
   "glMultiTexEnvivEXT\0"
   "glMultiTexGendEXT\0"
   "glMultiTexGendvEXT\0"
   "glMultiTexGenfEXT\0"
   "glMultiTexGenfvEXT\0"
   "glMultiTexGeniEXT\0"
   "glMultiTexGenivEXT\0"
   "glMultiTexImage1DEXT\0"
   "glMultiTexImage2DEXT\0"
   "glMultiTexImage3DEXT\0"
   "glMultiTexParameterIivEXT\0"
   "glMultiTexParameterIuivEXT\0"
   "glMultiTexParameterfEXT\0"
   "glMultiTexParameterfvEXT\0"
   "glMultiTexParameteriEXT\0"
   "glMultiTexParameterivEXT\0"
   "glMultiTexRenderbufferEXT\0"
   "glMultiTexSubImage1DEXT\0"
   "glMultiTexSubImage2DEXT\0"
   "glMultiTexSubImage3DEXT\0"
   "glNamedBufferData\0"
   "glNamedBufferDataEXT\0"
   "glNamedBufferPageCommitmentARB\0"
   "glNamedBufferPageCommitmentEXT\0"
   "glNamedBufferStorage\0"
   "glNamedBufferStorageEXT\0"
   "glNamedBufferSubData\0"
   "glNamedBufferSubDataEXT\0"
   "glNamedCopyBufferSubDataEXT\0"
   "glNamedFramebufferDrawBuffer\0"
   "glNamedFramebufferDrawBuffers\0"
   "glNamedFramebufferParameteri\0"
   "glNamedFramebufferParameteriEXT\0"
   "glNamedFramebufferReadBuffer\0"
   "glNamedFramebufferRenderbuffer\0"
   "glNamedFramebufferRenderbufferEXT\0"
   "glNamedFramebufferSampleLocationsfvNV\0"
   "glNamedFramebufferTexture\0"
   "glNamedFramebufferTexture1DEXT\0"
   "glNamedFramebufferTexture2DEXT\0"
   "glNamedFramebufferTexture3DEXT\0"
   "glNamedFramebufferTextureEXT\0"
   "glNamedFramebufferTextureFaceEXT\0"
   "glNamedFramebufferTextureLayer\0"
   "glNamedFramebufferTextureLayerEXT\0"
   "glNamedProgramLocalParameter4dEXT\0"
   "glNamedProgramLocalParameter4dvEXT\0"
   "glNamedProgramLocalParameter4fEXT\0"
   "glNamedProgramLocalParameter4fvEXT\0"
   "glNamedProgramLocalParameterI4iEXT\0"
   "glNamedProgramLocalParameterI4ivEXT\0"
   "glNamedProgramLocalParameterI4uiEXT\0"
   "glNamedProgramLocalParameterI4uivEXT\0"
   "glNamedProgramLocalParameters4fvEXT\0"
   "glNamedProgramLocalParametersI4ivEXT\0"
   "glNamedProgramLocalParametersI4uivEXT\0"
   "glNamedProgramStringEXT\0"
   "glNamedRenderbufferStorage\0"
   "glNamedRenderbufferStorageEXT\0"
   "glNamedRenderbufferStorageMultisample\0"
   "glNamedRenderbufferStorageMultisampleCoverageEXT\0"
   "glNamedRenderbufferStorageMultisampleEXT\0"
   "glNamedStringARB\0"
   "glNewList\0"
   "glNewObjectBufferATI\0"
   "glNormal3b\0"
   "glNormal3bv\0"
   "glNormal3d\0"
   "glNormal3dv\0"
   "glNormal3f\0"
   "glNormal3fVertex3fSUN\0"
   "glNormal3fVertex3fvSUN\0"
   "glNormal3fv\0"
   "glNormal3hNV\0"
   "glNormal3hvNV\0"
   "glNormal3i\0"
   "glNormal3iv\0"
   "glNormal3s\0"
   "glNormal3sv\0"
   "glNormal3x\0"
   "glNormal3xOES\0"
   "glNormal3xvOES\0"
   "glNormalFormatNV\0"
   "glNormalP3ui\0"
   "glNormalP3uiv\0"
   "glNormalPointer\0"
   "glNormalPointerEXT\0"
   "glNormalPointerListIBM\0"
   "glNormalPointervINTEL\0"
   "glNormalStream3bATI\0"
   "glNormalStream3bvATI\0"
   "glNormalStream3dATI\0"
   "glNormalStream3dvATI\0"
   "glNormalStream3fATI\0"
   "glNormalStream3fvATI\0"
   "glNormalStream3iATI\0"
   "glNormalStream3ivATI\0"
   "glNormalStream3sATI\0"
   "glNormalStream3svATI\0"
   "glObjectLabel\0"
   "glObjectLabelKHR\0"
   "glObjectPtrLabel\0"
   "glObjectPtrLabelKHR\0"
   "glObjectPurgeableAPPLE\0"
   "glObjectUnpurgeableAPPLE\0"
   "glOrtho\0"
   "glOrthof\0"
   "glOrthofOES\0"
   "glOrthox\0"
   "glOrthoxOES\0"
   "glPNTrianglesfATI\0"
   "glPNTrianglesiATI\0"
   "glPassTexCoordATI\0"
   "glPassThrough\0"
   "glPassThroughxOES\0"
   "glPatchParameterfv\0"
   "glPatchParameteri\0"
   "glPatchParameteriEXT\0"
   "glPatchParameteriOES\0"
   "glPathColorGenNV\0"
   "glPathCommandsNV\0"
   "glPathCoordsNV\0"
   "glPathCoverDepthFuncNV\0"
   "glPathDashArrayNV\0"
   "glPathFogGenNV\0"
   "glPathGlyphIndexArrayNV\0"
   "glPathGlyphIndexRangeNV\0"
   "glPathGlyphRangeNV\0"
   "glPathGlyphsNV\0"
   "glPathMemoryGlyphIndexArrayNV\0"
   "glPathParameterfNV\0"
   "glPathParameterfvNV\0"
   "glPathParameteriNV\0"
   "glPathParameterivNV\0"
   "glPathStencilDepthOffsetNV\0"
   "glPathStencilFuncNV\0"
   "glPathStringNV\0"
   "glPathSubCommandsNV\0"
   "glPathSubCoordsNV\0"
   "glPathTexGenNV\0"
   "glPauseTransformFeedback\0"
   "glPauseTransformFeedbackNV\0"
   "glPixelDataRangeNV\0"
   "glPixelMapfv\0"
   "glPixelMapuiv\0"
   "glPixelMapusv\0"
   "glPixelMapx\0"
   "glPixelStoref\0"
   "glPixelStorei\0"
   "glPixelStorex\0"
   "glPixelTexGenParameterfSGIS\0"
   "glPixelTexGenParameterfvSGIS\0"
   "glPixelTexGenParameteriSGIS\0"
   "glPixelTexGenParameterivSGIS\0"
   "glPixelTexGenSGIX\0"
   "glPixelTransferf\0"
   "glPixelTransferi\0"
   "glPixelTransferxOES\0"
   "glPixelTransformParameterfEXT\0"
   "glPixelTransformParameterfvEXT\0"
   "glPixelTransformParameteriEXT\0"
   "glPixelTransformParameterivEXT\0"
   "glPixelZoom\0"
   "glPixelZoomxOES\0"
   "glPointAlongPathNV\0"
   "glPointParameterf\0"
   "glPointParameterfARB\0"
   "glPointParameterfEXT\0"
   "glPointParameterfSGIS\0"
   "glPointParameterfv\0"
   "glPointParameterfvARB\0"
   "glPointParameterfvEXT\0"
   "glPointParameterfvSGIS\0"
   "glPointParameteri\0"
   "glPointParameteriNV\0"
   "glPointParameteriv\0"
   "glPointParameterivNV\0"
   "glPointParameterx\0"
   "glPointParameterxOES\0"
   "glPointParameterxv\0"
   "glPointParameterxvOES\0"
   "glPointSize\0"
   "glPointSizePointerOES\0"
   "glPointSizex\0"
   "glPointSizexOES\0"
   "glPollAsyncSGIX\0"
   "glPollInstrumentsSGIX\0"
   "glPolygonMode\0"
   "glPolygonModeNV\0"
   "glPolygonOffset\0"
   "glPolygonOffsetClampEXT\0"
   "glPolygonOffsetEXT\0"
   "glPolygonOffsetx\0"
   "glPolygonOffsetxOES\0"
   "glPolygonStipple\0"
   "glPopAttrib\0"
   "glPopClientAttrib\0"
   "glPopDebugGroup\0"
   "glPopDebugGroupKHR\0"
   "glPopGroupMarkerEXT\0"
   "glPopMatrix\0"
   "glPopName\0"
   "glPresentFrameDualFillNV\0"
   "glPresentFrameKeyedNV\0"
   "glPrimitiveBoundingBoxEXT\0"
   "glPrimitiveBoundingBoxOES\0"
   "glPrimitiveRestartIndex\0"
   "glPrimitiveRestartIndexNV\0"
   "glPrimitiveRestartNV\0"
   "glPrioritizeTextures\0"
   "glPrioritizeTexturesEXT\0"
   "glPrioritizeTexturesxOES\0"
   "glProgramBinary\0"
   "glProgramBinaryOES\0"
   "glProgramBufferParametersIivNV\0"
   "glProgramBufferParametersIuivNV\0"
   "glProgramBufferParametersfvNV\0"
   "glProgramEnvParameter4dARB\0"
   "glProgramEnvParameter4dvARB\0"
   "glProgramEnvParameter4fARB\0"
   "glProgramEnvParameter4fvARB\0"
   "glProgramEnvParameterI4iNV\0"
   "glProgramEnvParameterI4ivNV\0"
   "glProgramEnvParameterI4uiNV\0"
   "glProgramEnvParameterI4uivNV\0"
   "glProgramEnvParameters4fvEXT\0"
   "glProgramEnvParametersI4ivNV\0"
   "glProgramEnvParametersI4uivNV\0"
   "glProgramLocalParameter4dARB\0"
   "glProgramLocalParameter4dvARB\0"
   "glProgramLocalParameter4fARB\0"
   "glProgramLocalParameter4fvARB\0"
   "glProgramLocalParameterI4iNV\0"
   "glProgramLocalParameterI4ivNV\0"
   "glProgramLocalParameterI4uiNV\0"
   "glProgramLocalParameterI4uivNV\0"
   "glProgramLocalParameters4fvEXT\0"
   "glProgramLocalParametersI4ivNV\0"
   "glProgramLocalParametersI4uivNV\0"
   "glProgramNamedParameter4dNV\0"
   "glProgramNamedParameter4dvNV\0"
   "glProgramNamedParameter4fNV\0"
   "glProgramNamedParameter4fvNV\0"
   "glProgramParameter4dNV\0"
   "glProgramParameter4dvNV\0"
   "glProgramParameter4fNV\0"
   "glProgramParameter4fvNV\0"
   "glProgramParameteri\0"
   "glProgramParameteriARB\0"
   "glProgramParameteriEXT\0"
   "glProgramParameters4dvNV\0"
   "glProgramParameters4fvNV\0"
   "glProgramPathFragmentInputGenNV\0"
   "glProgramStringARB\0"
   "glProgramSubroutineParametersuivNV\0"
   "glProgramUniform1d\0"
   "glProgramUniform1dEXT\0"
   "glProgramUniform1dv\0"
   "glProgramUniform1dvEXT\0"
   "glProgramUniform1f\0"
   "glProgramUniform1fEXT\0"
   "glProgramUniform1fv\0"
   "glProgramUniform1fvEXT\0"
   "glProgramUniform1i\0"
   "glProgramUniform1i64NV\0"
   "glProgramUniform1i64vNV\0"
   "glProgramUniform1iEXT\0"
   "glProgramUniform1iv\0"
   "glProgramUniform1ivEXT\0"
   "glProgramUniform1ui\0"
   "glProgramUniform1ui64NV\0"
   "glProgramUniform1ui64vNV\0"
   "glProgramUniform1uiEXT\0"
   "glProgramUniform1uiv\0"
   "glProgramUniform1uivEXT\0"
   "glProgramUniform2d\0"
   "glProgramUniform2dEXT\0"
   "glProgramUniform2dv\0"
   "glProgramUniform2dvEXT\0"
   "glProgramUniform2f\0"
   "glProgramUniform2fEXT\0"
   "glProgramUniform2fv\0"
   "glProgramUniform2fvEXT\0"
   "glProgramUniform2i\0"
   "glProgramUniform2i64NV\0"
   "glProgramUniform2i64vNV\0"
   "glProgramUniform2iEXT\0"
   "glProgramUniform2iv\0"
   "glProgramUniform2ivEXT\0"
   "glProgramUniform2ui\0"
   "glProgramUniform2ui64NV\0"
   "glProgramUniform2ui64vNV\0"
   "glProgramUniform2uiEXT\0"
   "glProgramUniform2uiv\0"
   "glProgramUniform2uivEXT\0"
   "glProgramUniform3d\0"
   "glProgramUniform3dEXT\0"
   "glProgramUniform3dv\0"
   "glProgramUniform3dvEXT\0"
   "glProgramUniform3f\0"
   "glProgramUniform3fEXT\0"
   "glProgramUniform3fv\0"
   "glProgramUniform3fvEXT\0"
   "glProgramUniform3i\0"
   "glProgramUniform3i64NV\0"
   "glProgramUniform3i64vNV\0"
   "glProgramUniform3iEXT\0"
   "glProgramUniform3iv\0"
   "glProgramUniform3ivEXT\0"
   "glProgramUniform3ui\0"
   "glProgramUniform3ui64NV\0"
   "glProgramUniform3ui64vNV\0"
   "glProgramUniform3uiEXT\0"
   "glProgramUniform3uiv\0"
   "glProgramUniform3uivEXT\0"
   "glProgramUniform4d\0"
   "glProgramUniform4dEXT\0"
   "glProgramUniform4dv\0"
   "glProgramUniform4dvEXT\0"
   "glProgramUniform4f\0"
   "glProgramUniform4fEXT\0"
   "glProgramUniform4fv\0"
   "glProgramUniform4fvEXT\0"
   "glProgramUniform4i\0"
   "glProgramUniform4i64NV\0"
   "glProgramUniform4i64vNV\0"
   "glProgramUniform4iEXT\0"
   "glProgramUniform4iv\0"
   "glProgramUniform4ivEXT\0"
   "glProgramUniform4ui\0"
   "glProgramUniform4ui64NV\0"
   "glProgramUniform4ui64vNV\0"
   "glProgramUniform4uiEXT\0"
   "glProgramUniform4uiv\0"
   "glProgramUniform4uivEXT\0"
   "glProgramUniformHandleui64ARB\0"
   "glProgramUniformHandleui64NV\0"
   "glProgramUniformHandleui64vARB\0"
   "glProgramUniformHandleui64vNV\0"
   "glProgramUniformMatrix2dv\0"
   "glProgramUniformMatrix2dvEXT\0"
   "glProgramUniformMatrix2fv\0"
   "glProgramUniformMatrix2fvEXT\0"
   "glProgramUniformMatrix2x3dv\0"
   "glProgramUniformMatrix2x3dvEXT\0"
   "glProgramUniformMatrix2x3fv\0"
   "glProgramUniformMatrix2x3fvEXT\0"
   "glProgramUniformMatrix2x4dv\0"
   "glProgramUniformMatrix2x4dvEXT\0"
   "glProgramUniformMatrix2x4fv\0"
   "glProgramUniformMatrix2x4fvEXT\0"
   "glProgramUniformMatrix3dv\0"
   "glProgramUniformMatrix3dvEXT\0"
   "glProgramUniformMatrix3fv\0"
   "glProgramUniformMatrix3fvEXT\0"
   "glProgramUniformMatrix3x2dv\0"
   "glProgramUniformMatrix3x2dvEXT\0"
   "glProgramUniformMatrix3x2fv\0"
   "glProgramUniformMatrix3x2fvEXT\0"
   "glProgramUniformMatrix3x4dv\0"
   "glProgramUniformMatrix3x4dvEXT\0"
   "glProgramUniformMatrix3x4fv\0"
   "glProgramUniformMatrix3x4fvEXT\0"
   "glProgramUniformMatrix4dv\0"
   "glProgramUniformMatrix4dvEXT\0"
   "glProgramUniformMatrix4fv\0"
   "glProgramUniformMatrix4fvEXT\0"
   "glProgramUniformMatrix4x2dv\0"
   "glProgramUniformMatrix4x2dvEXT\0"
   "glProgramUniformMatrix4x2fv\0"
   "glProgramUniformMatrix4x2fvEXT\0"
   "glProgramUniformMatrix4x3dv\0"
   "glProgramUniformMatrix4x3dvEXT\0"
   "glProgramUniformMatrix4x3fv\0"
   "glProgramUniformMatrix4x3fvEXT\0"
   "glProgramUniformui64NV\0"
   "glProgramUniformui64vNV\0"
   "glProgramVertexLimitNV\0"
   "glProvokingVertex\0"
   "glProvokingVertexEXT\0"
   "glPushAttrib\0"
   "glPushClientAttrib\0"
   "glPushClientAttribDefaultEXT\0"
   "glPushDebugGroup\0"
   "glPushDebugGroupKHR\0"
   "glPushGroupMarkerEXT\0"
   "glPushMatrix\0"
   "glPushName\0"
   "glQueryCounter\0"
   "glQueryCounterEXT\0"
   "glQueryMatrixxOES\0"
   "glQueryObjectParameteruiAMD\0"
   "glRasterPos2d\0"
   "glRasterPos2dv\0"
   "glRasterPos2f\0"
   "glRasterPos2fv\0"
   "glRasterPos2i\0"
   "glRasterPos2iv\0"
   "glRasterPos2s\0"
   "glRasterPos2sv\0"
   "glRasterPos2xOES\0"
   "glRasterPos2xvOES\0"
   "glRasterPos3d\0"
   "glRasterPos3dv\0"
   "glRasterPos3f\0"
   "glRasterPos3fv\0"
   "glRasterPos3i\0"
   "glRasterPos3iv\0"
   "glRasterPos3s\0"
   "glRasterPos3sv\0"
   "glRasterPos3xOES\0"
   "glRasterPos3xvOES\0"
   "glRasterPos4d\0"
   "glRasterPos4dv\0"
   "glRasterPos4f\0"
   "glRasterPos4fv\0"
   "glRasterPos4i\0"
   "glRasterPos4iv\0"
   "glRasterPos4s\0"
   "glRasterPos4sv\0"
   "glRasterPos4xOES\0"
   "glRasterPos4xvOES\0"
   "glRasterSamplesEXT\0"
   "glReadBuffer\0"
   "glReadBufferIndexedEXT\0"
   "glReadBufferNV\0"
   "glReadInstrumentsSGIX\0"
   "glReadPixels\0"
   "glReadnPixels\0"
   "glReadnPixelsARB\0"
   "glReadnPixelsEXT\0"
   "glReadnPixelsKHR\0"
   "glRectd\0"
   "glRectdv\0"
   "glRectf\0"
   "glRectfv\0"
   "glRecti\0"
   "glRectiv\0"
   "glRects\0"
   "glRectsv\0"
   "glRectxOES\0"
   "glRectxvOES\0"
   "glReferencePlaneSGIX\0"
   "glReleaseShaderCompiler\0"
   "glRenderMode\0"
   "glRenderbufferStorage\0"
   "glRenderbufferStorageEXT\0"
   "glRenderbufferStorageMultisample\0"
   "glRenderbufferStorageMultisampleANGLE\0"
   "glRenderbufferStorageMultisampleAPPLE\0"
   "glRenderbufferStorageMultisampleCoverageNV\0"
   "glRenderbufferStorageMultisampleEXT\0"
   "glRenderbufferStorageMultisampleIMG\0"
   "glRenderbufferStorageMultisampleNV\0"
   "glRenderbufferStorageOES\0"
   "glReplacementCodePointerSUN\0"
   "glReplacementCodeubSUN\0"
   "glReplacementCodeubvSUN\0"
   "glReplacementCodeuiColor3fVertex3fSUN\0"
   "glReplacementCodeuiColor3fVertex3fvSUN\0"
   "glReplacementCodeuiColor4fNormal3fVertex3fSUN\0"
   "glReplacementCodeuiColor4fNormal3fVertex3fvSUN\0"
   "glReplacementCodeuiColor4ubVertex3fSUN\0"
   "glReplacementCodeuiColor4ubVertex3fvSUN\0"
   "glReplacementCodeuiNormal3fVertex3fSUN\0"
   "glReplacementCodeuiNormal3fVertex3fvSUN\0"
   "glReplacementCodeuiSUN\0"
   "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\0"
   "glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\0"
   "glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\0"
   "glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\0"
   "glReplacementCodeuiTexCoord2fVertex3fSUN\0"
   "glReplacementCodeuiTexCoord2fVertex3fvSUN\0"
   "glReplacementCodeuiVertex3fSUN\0"
   "glReplacementCodeuiVertex3fvSUN\0"
   "glReplacementCodeuivSUN\0"
   "glReplacementCodeusSUN\0"
   "glReplacementCodeusvSUN\0"
   "glRequestResidentProgramsNV\0"
   "glResetHistogram\0"
   "glResetHistogramEXT\0"
   "glResetMinmax\0"
   "glResetMinmaxEXT\0"
   "glResizeBuffersMESA\0"
   "glResolveDepthValuesNV\0"
   "glResolveMultisampleFramebufferAPPLE\0"
   "glResumeTransformFeedback\0"
   "glResumeTransformFeedbackNV\0"
   "glRotated\0"
   "glRotatef\0"
   "glRotatex\0"
   "glRotatexOES\0"
   "glSampleCoverage\0"
   "glSampleCoverageARB\0"
   "glSampleCoveragex\0"
   "glSampleCoveragexOES\0"
   "glSampleMapATI\0"
   "glSampleMaskEXT\0"
   "glSampleMaskIndexedNV\0"
   "glSampleMaskSGIS\0"
   "glSampleMaski\0"
   "glSamplePatternEXT\0"
   "glSamplePatternSGIS\0"
   "glSamplerParameterIiv\0"
   "glSamplerParameterIivEXT\0"
   "glSamplerParameterIivOES\0"
   "glSamplerParameterIuiv\0"
   "glSamplerParameterIuivEXT\0"
   "glSamplerParameterIuivOES\0"
   "glSamplerParameterf\0"
   "glSamplerParameterfv\0"
   "glSamplerParameteri\0"
   "glSamplerParameteriv\0"
   "glScaled\0"
   "glScalef\0"
   "glScalex\0"
   "glScalexOES\0"
   "glScissor\0"
   "glScissorArrayv\0"
   "glScissorArrayvNV\0"
   "glScissorIndexed\0"
   "glScissorIndexedNV\0"
   "glScissorIndexedv\0"
   "glScissorIndexedvNV\0"
   "glSecondaryColor3b\0"
   "glSecondaryColor3bEXT\0"
   "glSecondaryColor3bv\0"
   "glSecondaryColor3bvEXT\0"
   "glSecondaryColor3d\0"
   "glSecondaryColor3dEXT\0"
   "glSecondaryColor3dv\0"
   "glSecondaryColor3dvEXT\0"
   "glSecondaryColor3f\0"
   "glSecondaryColor3fEXT\0"
   "glSecondaryColor3fv\0"
   "glSecondaryColor3fvEXT\0"
   "glSecondaryColor3hNV\0"
   "glSecondaryColor3hvNV\0"
   "glSecondaryColor3i\0"
   "glSecondaryColor3iEXT\0"
   "glSecondaryColor3iv\0"
   "glSecondaryColor3ivEXT\0"
   "glSecondaryColor3s\0"
   "glSecondaryColor3sEXT\0"
   "glSecondaryColor3sv\0"
   "glSecondaryColor3svEXT\0"
   "glSecondaryColor3ub\0"
   "glSecondaryColor3ubEXT\0"
   "glSecondaryColor3ubv\0"
   "glSecondaryColor3ubvEXT\0"
   "glSecondaryColor3ui\0"
   "glSecondaryColor3uiEXT\0"
   "glSecondaryColor3uiv\0"
   "glSecondaryColor3uivEXT\0"
   "glSecondaryColor3us\0"
   "glSecondaryColor3usEXT\0"
   "glSecondaryColor3usv\0"
   "glSecondaryColor3usvEXT\0"
   "glSecondaryColorFormatNV\0"
   "glSecondaryColorP3ui\0"
   "glSecondaryColorP3uiv\0"
   "glSecondaryColorPointer\0"
   "glSecondaryColorPointerEXT\0"
   "glSecondaryColorPointerListIBM\0"
   "glSelectBuffer\0"
   "glSelectPerfMonitorCountersAMD\0"
   "glSeparableFilter2D\0"
   "glSeparableFilter2DEXT\0"
   "glSetFenceAPPLE\0"
   "glSetFenceNV\0"
   "glSetFragmentShaderConstantATI\0"
   "glSetInvariantEXT\0"
   "glSetLocalConstantEXT\0"
   "glSetMultisamplefvAMD\0"
   "glShadeModel\0"
   "glShaderBinary\0"
   "glShaderOp1EXT\0"
   "glShaderOp2EXT\0"
   "glShaderOp3EXT\0"
   "glShaderSource\0"
   "glShaderSourceARB\0"
   "glShaderStorageBlockBinding\0"
   "glSharpenTexFuncSGIS\0"
   "glSpriteParameterfSGIX\0"
   "glSpriteParameterfvSGIX\0"
   "glSpriteParameteriSGIX\0"
   "glSpriteParameterivSGIX\0"
   "glStartInstrumentsSGIX\0"
   "glStartTilingQCOM\0"
   "glStateCaptureNV\0"
   "glStencilClearTagEXT\0"
   "glStencilFillPathInstancedNV\0"
   "glStencilFillPathNV\0"
   "glStencilFunc\0"
   "glStencilFuncSeparate\0"
   "glStencilFuncSeparateATI\0"
   "glStencilMask\0"
   "glStencilMaskSeparate\0"
   "glStencilOp\0"
   "glStencilOpSeparate\0"
   "glStencilOpSeparateATI\0"
   "glStencilOpValueAMD\0"
   "glStencilStrokePathInstancedNV\0"
   "glStencilStrokePathNV\0"
   "glStencilThenCoverFillPathInstancedNV\0"
   "glStencilThenCoverFillPathNV\0"
   "glStencilThenCoverStrokePathInstancedNV\0"
   "glStencilThenCoverStrokePathNV\0"
   "glStopInstrumentsSGIX\0"
   "glStringMarkerGREMEDY\0"
   "glSubpixelPrecisionBiasNV\0"
   "glSwizzleEXT\0"
   "glSyncTextureINTEL\0"
   "glTagSampleBufferSGIX\0"
   "glTangent3bEXT\0"
   "glTangent3bvEXT\0"
   "glTangent3dEXT\0"
   "glTangent3dvEXT\0"
   "glTangent3fEXT\0"
   "glTangent3fvEXT\0"
   "glTangent3iEXT\0"
   "glTangent3ivEXT\0"
   "glTangent3sEXT\0"
   "glTangent3svEXT\0"
   "glTangentPointerEXT\0"
   "glTbufferMask3DFX\0"
   "glTessellationFactorAMD\0"
   "glTessellationModeAMD\0"
   "glTestFenceAPPLE\0"
   "glTestFenceNV\0"
   "glTestObjectAPPLE\0"
   "glTexBuffer\0"
   "glTexBufferARB\0"
   "glTexBufferEXT\0"
   "glTexBufferOES\0"
   "glTexBufferRange\0"
   "glTexBufferRangeEXT\0"
   "glTexBufferRangeOES\0"
   "glTexBumpParameterfvATI\0"
   "glTexBumpParameterivATI\0"
   "glTexCoord1bOES\0"
   "glTexCoord1bvOES\0"
   "glTexCoord1d\0"
   "glTexCoord1dv\0"
   "glTexCoord1f\0"
   "glTexCoord1fv\0"
   "glTexCoord1hNV\0"
   "glTexCoord1hvNV\0"
   "glTexCoord1i\0"
   "glTexCoord1iv\0"
   "glTexCoord1s\0"
   "glTexCoord1sv\0"
   "glTexCoord1xOES\0"
   "glTexCoord1xvOES\0"
   "glTexCoord2bOES\0"
   "glTexCoord2bvOES\0"
   "glTexCoord2d\0"
   "glTexCoord2dv\0"
   "glTexCoord2f\0"
   "glTexCoord2fColor3fVertex3fSUN\0"
   "glTexCoord2fColor3fVertex3fvSUN\0"
   "glTexCoord2fColor4fNormal3fVertex3fSUN\0"
   "glTexCoord2fColor4fNormal3fVertex3fvSUN\0"
   "glTexCoord2fColor4ubVertex3fSUN\0"
   "glTexCoord2fColor4ubVertex3fvSUN\0"
   "glTexCoord2fNormal3fVertex3fSUN\0"
   "glTexCoord2fNormal3fVertex3fvSUN\0"
   "glTexCoord2fVertex3fSUN\0"
   "glTexCoord2fVertex3fvSUN\0"
   "glTexCoord2fv\0"
   "glTexCoord2hNV\0"
   "glTexCoord2hvNV\0"
   "glTexCoord2i\0"
   "glTexCoord2iv\0"
   "glTexCoord2s\0"
   "glTexCoord2sv\0"
   "glTexCoord2xOES\0"
   "glTexCoord2xvOES\0"
   "glTexCoord3bOES\0"
   "glTexCoord3bvOES\0"
   "glTexCoord3d\0"
   "glTexCoord3dv\0"
   "glTexCoord3f\0"
   "glTexCoord3fv\0"
   "glTexCoord3hNV\0"
   "glTexCoord3hvNV\0"
   "glTexCoord3i\0"
   "glTexCoord3iv\0"
   "glTexCoord3s\0"
   "glTexCoord3sv\0"
   "glTexCoord3xOES\0"
   "glTexCoord3xvOES\0"
   "glTexCoord4bOES\0"
   "glTexCoord4bvOES\0"
   "glTexCoord4d\0"
   "glTexCoord4dv\0"
   "glTexCoord4f\0"
   "glTexCoord4fColor4fNormal3fVertex4fSUN\0"
   "glTexCoord4fColor4fNormal3fVertex4fvSUN\0"
   "glTexCoord4fVertex4fSUN\0"
   "glTexCoord4fVertex4fvSUN\0"
   "glTexCoord4fv\0"
   "glTexCoord4hNV\0"
   "glTexCoord4hvNV\0"
   "glTexCoord4i\0"
   "glTexCoord4iv\0"
   "glTexCoord4s\0"
   "glTexCoord4sv\0"
   "glTexCoord4xOES\0"
   "glTexCoord4xvOES\0"
   "glTexCoordFormatNV\0"
   "glTexCoordP1ui\0"
   "glTexCoordP1uiv\0"
   "glTexCoordP2ui\0"
   "glTexCoordP2uiv\0"
   "glTexCoordP3ui\0"
   "glTexCoordP3uiv\0"
   "glTexCoordP4ui\0"
   "glTexCoordP4uiv\0"
   "glTexCoordPointer\0"
   "glTexCoordPointerEXT\0"
   "glTexCoordPointerListIBM\0"
   "glTexCoordPointervINTEL\0"
   "glTexEnvf\0"
   "glTexEnvfv\0"
   "glTexEnvi\0"
   "glTexEnviv\0"
   "glTexEnvx\0"
   "glTexEnvxOES\0"
   "glTexEnvxv\0"
   "glTexEnvxvOES\0"
   "glTexFilterFuncSGIS\0"
   "glTexGend\0"
   "glTexGendv\0"
   "glTexGenf\0"
   "glTexGenfOES\0"
   "glTexGenfv\0"
   "glTexGenfvOES\0"
   "glTexGeni\0"
   "glTexGeniOES\0"
   "glTexGeniv\0"
   "glTexGenivOES\0"
   "glTexGenxOES\0"
   "glTexGenxvOES\0"
   "glTexImage1D\0"
   "glTexImage2D\0"
   "glTexImage2DMultisample\0"
   "glTexImage2DMultisampleCoverageNV\0"
   "glTexImage3D\0"
   "glTexImage3DEXT\0"
   "glTexImage3DMultisample\0"
   "glTexImage3DMultisampleCoverageNV\0"
   "glTexImage3DOES\0"
   "glTexImage4DSGIS\0"
   "glTexPageCommitmentARB\0"
   "glTexPageCommitmentEXT\0"
   "glTexParameterIiv\0"
   "glTexParameterIivEXT\0"
   "glTexParameterIivOES\0"
   "glTexParameterIuiv\0"
   "glTexParameterIuivEXT\0"
   "glTexParameterIuivOES\0"
   "glTexParameterf\0"
   "glTexParameterfv\0"
   "glTexParameteri\0"
   "glTexParameteriv\0"
   "glTexParameterx\0"
   "glTexParameterxOES\0"
   "glTexParameterxv\0"
   "glTexParameterxvOES\0"
   "glTexRenderbufferNV\0"
   "glTexStorage1D\0"
   "glTexStorage1DEXT\0"
   "glTexStorage2D\0"
   "glTexStorage2DEXT\0"
   "glTexStorage2DMultisample\0"
   "glTexStorage3D\0"
   "glTexStorage3DEXT\0"
   "glTexStorage3DMultisample\0"
   "glTexStorage3DMultisampleOES\0"
   "glTexStorageSparseAMD\0"
   "glTexSubImage1D\0"
   "glTexSubImage1DEXT\0"
   "glTexSubImage2D\0"
   "glTexSubImage2DEXT\0"
   "glTexSubImage3D\0"
   "glTexSubImage3DEXT\0"
   "glTexSubImage3DOES\0"
   "glTexSubImage4DSGIS\0"
   "glTextureBarrier\0"
   "glTextureBarrierNV\0"
   "glTextureBuffer\0"
   "glTextureBufferEXT\0"
   "glTextureBufferRange\0"
   "glTextureBufferRangeEXT\0"
   "glTextureColorMaskSGIS\0"
   "glTextureImage1DEXT\0"
   "glTextureImage2DEXT\0"
   "glTextureImage2DMultisampleCoverageNV\0"
   "glTextureImage2DMultisampleNV\0"
   "glTextureImage3DEXT\0"
   "glTextureImage3DMultisampleCoverageNV\0"
   "glTextureImage3DMultisampleNV\0"
   "glTextureLightEXT\0"
   "glTextureMaterialEXT\0"
   "glTextureNormalEXT\0"
   "glTexturePageCommitmentEXT\0"
   "glTextureParameterIiv\0"
   "glTextureParameterIivEXT\0"
   "glTextureParameterIuiv\0"
   "glTextureParameterIuivEXT\0"
   "glTextureParameterf\0"
   "glTextureParameterfEXT\0"
   "glTextureParameterfv\0"
   "glTextureParameterfvEXT\0"
   "glTextureParameteri\0"
   "glTextureParameteriEXT\0"
   "glTextureParameteriv\0"
   "glTextureParameterivEXT\0"
   "glTextureRangeAPPLE\0"
   "glTextureRenderbufferEXT\0"
   "glTextureStorage1D\0"
   "glTextureStorage1DEXT\0"
   "glTextureStorage2D\0"
   "glTextureStorage2DEXT\0"
   "glTextureStorage2DMultisample\0"
   "glTextureStorage2DMultisampleEXT\0"
   "glTextureStorage3D\0"
   "glTextureStorage3DEXT\0"
   "glTextureStorage3DMultisample\0"
   "glTextureStorage3DMultisampleEXT\0"
   "glTextureStorageSparseAMD\0"
   "glTextureSubImage1D\0"
   "glTextureSubImage1DEXT\0"
   "glTextureSubImage2D\0"
   "glTextureSubImage2DEXT\0"
   "glTextureSubImage3D\0"
   "glTextureSubImage3DEXT\0"
   "glTextureView\0"
   "glTextureViewEXT\0"
   "glTextureViewOES\0"
   "glTrackMatrixNV\0"
   "glTransformFeedbackAttribsNV\0"
   "glTransformFeedbackBufferBase\0"
   "glTransformFeedbackBufferRange\0"
   "glTransformFeedbackStreamAttribsNV\0"
   "glTransformFeedbackVaryings\0"
   "glTransformFeedbackVaryingsEXT\0"
   "glTransformFeedbackVaryingsNV\0"
   "glTransformPathNV\0"
   "glTranslated\0"
   "glTranslatef\0"
   "glTranslatex\0"
   "glTranslatexOES\0"
   "glUniform1d\0"
   "glUniform1dv\0"
   "glUniform1f\0"
   "glUniform1fARB\0"
   "glUniform1fv\0"
   "glUniform1fvARB\0"
   "glUniform1i\0"
   "glUniform1i64NV\0"
   "glUniform1i64vNV\0"
   "glUniform1iARB\0"
   "glUniform1iv\0"
   "glUniform1ivARB\0"
   "glUniform1ui\0"
   "glUniform1ui64NV\0"
   "glUniform1ui64vNV\0"
   "glUniform1uiEXT\0"
   "glUniform1uiv\0"
   "glUniform1uivEXT\0"
   "glUniform2d\0"
   "glUniform2dv\0"
   "glUniform2f\0"
   "glUniform2fARB\0"
   "glUniform2fv\0"
   "glUniform2fvARB\0"
   "glUniform2i\0"
   "glUniform2i64NV\0"
   "glUniform2i64vNV\0"
   "glUniform2iARB\0"
   "glUniform2iv\0"
   "glUniform2ivARB\0"
   "glUniform2ui\0"
   "glUniform2ui64NV\0"
   "glUniform2ui64vNV\0"
   "glUniform2uiEXT\0"
   "glUniform2uiv\0"
   "glUniform2uivEXT\0"
   "glUniform3d\0"
   "glUniform3dv\0"
   "glUniform3f\0"
   "glUniform3fARB\0"
   "glUniform3fv\0"
   "glUniform3fvARB\0"
   "glUniform3i\0"
   "glUniform3i64NV\0"
   "glUniform3i64vNV\0"
   "glUniform3iARB\0"
   "glUniform3iv\0"
   "glUniform3ivARB\0"
   "glUniform3ui\0"
   "glUniform3ui64NV\0"
   "glUniform3ui64vNV\0"
   "glUniform3uiEXT\0"
   "glUniform3uiv\0"
   "glUniform3uivEXT\0"
   "glUniform4d\0"
   "glUniform4dv\0"
   "glUniform4f\0"
   "glUniform4fARB\0"
   "glUniform4fv\0"
   "glUniform4fvARB\0"
   "glUniform4i\0"
   "glUniform4i64NV\0"
   "glUniform4i64vNV\0"
   "glUniform4iARB\0"
   "glUniform4iv\0"
   "glUniform4ivARB\0"
   "glUniform4ui\0"
   "glUniform4ui64NV\0"
   "glUniform4ui64vNV\0"
   "glUniform4uiEXT\0"
   "glUniform4uiv\0"
   "glUniform4uivEXT\0"
   "glUniformBlockBinding\0"
   "glUniformBufferEXT\0"
   "glUniformHandleui64ARB\0"
   "glUniformHandleui64NV\0"
   "glUniformHandleui64vARB\0"
   "glUniformHandleui64vNV\0"
   "glUniformMatrix2dv\0"
   "glUniformMatrix2fv\0"
   "glUniformMatrix2fvARB\0"
   "glUniformMatrix2x3dv\0"
   "glUniformMatrix2x3fv\0"
   "glUniformMatrix2x3fvNV\0"
   "glUniformMatrix2x4dv\0"
   "glUniformMatrix2x4fv\0"
   "glUniformMatrix2x4fvNV\0"
   "glUniformMatrix3dv\0"
   "glUniformMatrix3fv\0"
   "glUniformMatrix3fvARB\0"
   "glUniformMatrix3x2dv\0"
   "glUniformMatrix3x2fv\0"
   "glUniformMatrix3x2fvNV\0"
   "glUniformMatrix3x4dv\0"
   "glUniformMatrix3x4fv\0"
   "glUniformMatrix3x4fvNV\0"
   "glUniformMatrix4dv\0"
   "glUniformMatrix4fv\0"
   "glUniformMatrix4fvARB\0"
   "glUniformMatrix4x2dv\0"
   "glUniformMatrix4x2fv\0"
   "glUniformMatrix4x2fvNV\0"
   "glUniformMatrix4x3dv\0"
   "glUniformMatrix4x3fv\0"
   "glUniformMatrix4x3fvNV\0"
   "glUniformSubroutinesuiv\0"
   "glUniformui64NV\0"
   "glUniformui64vNV\0"
   "glUnlockArraysEXT\0"
   "glUnmapBuffer\0"
   "glUnmapBufferARB\0"
   "glUnmapBufferOES\0"
   "glUnmapNamedBuffer\0"
   "glUnmapNamedBufferEXT\0"
   "glUnmapObjectBufferATI\0"
   "glUnmapTexture2DINTEL\0"
   "glUpdateObjectBufferATI\0"
   "glUseProgram\0"
   "glUseProgramObjectARB\0"
   "glUseProgramStages\0"
   "glUseProgramStagesEXT\0"
   "glUseShaderProgramEXT\0"
   "glVDPAUFiniNV\0"
   "glVDPAUGetSurfaceivNV\0"
   "glVDPAUInitNV\0"
   "glVDPAUIsSurfaceNV\0"
   "glVDPAUMapSurfacesNV\0"
   "glVDPAURegisterOutputSurfaceNV\0"
   "glVDPAURegisterVideoSurfaceNV\0"
   "glVDPAUSurfaceAccessNV\0"
   "glVDPAUUnmapSurfacesNV\0"
   "glVDPAUUnregisterSurfaceNV\0"
   "glValidateProgram\0"
   "glValidateProgramARB\0"
   "glValidateProgramPipeline\0"
   "glValidateProgramPipelineEXT\0"
   "glVariantArrayObjectATI\0"
   "glVariantPointerEXT\0"
   "glVariantbvEXT\0"
   "glVariantdvEXT\0"
   "glVariantfvEXT\0"
   "glVariantivEXT\0"
   "glVariantsvEXT\0"
   "glVariantubvEXT\0"
   "glVariantuivEXT\0"
   "glVariantusvEXT\0"
   "glVertex2bOES\0"
   "glVertex2bvOES\0"
   "glVertex2d\0"
   "glVertex2dv\0"
   "glVertex2f\0"
   "glVertex2fv\0"
   "glVertex2hNV\0"
   "glVertex2hvNV\0"
   "glVertex2i\0"
   "glVertex2iv\0"
   "glVertex2s\0"
   "glVertex2sv\0"
   "glVertex2xOES\0"
   "glVertex2xvOES\0"
   "glVertex3bOES\0"
   "glVertex3bvOES\0"
   "glVertex3d\0"
   "glVertex3dv\0"
   "glVertex3f\0"
   "glVertex3fv\0"
   "glVertex3hNV\0"
   "glVertex3hvNV\0"
   "glVertex3i\0"
   "glVertex3iv\0"
   "glVertex3s\0"
   "glVertex3sv\0"
   "glVertex3xOES\0"
   "glVertex3xvOES\0"
   "glVertex4bOES\0"
   "glVertex4bvOES\0"
   "glVertex4d\0"
   "glVertex4dv\0"
   "glVertex4f\0"
   "glVertex4fv\0"
   "glVertex4hNV\0"
   "glVertex4hvNV\0"
   "glVertex4i\0"
   "glVertex4iv\0"
   "glVertex4s\0"
   "glVertex4sv\0"
   "glVertex4xOES\0"
   "glVertex4xvOES\0"
   "glVertexArrayAttribBinding\0"
   "glVertexArrayAttribFormat\0"
   "glVertexArrayAttribIFormat\0"
   "glVertexArrayAttribLFormat\0"
   "glVertexArrayBindVertexBufferEXT\0"
   "glVertexArrayBindingDivisor\0"
   "glVertexArrayColorOffsetEXT\0"
   "glVertexArrayEdgeFlagOffsetEXT\0"
   "glVertexArrayElementBuffer\0"
   "glVertexArrayFogCoordOffsetEXT\0"
   "glVertexArrayIndexOffsetEXT\0"
   "glVertexArrayMultiTexCoordOffsetEXT\0"
   "glVertexArrayNormalOffsetEXT\0"
   "glVertexArrayParameteriAPPLE\0"
   "glVertexArrayRangeAPPLE\0"
   "glVertexArrayRangeNV\0"
   "glVertexArraySecondaryColorOffsetEXT\0"
   "glVertexArrayTexCoordOffsetEXT\0"
   "glVertexArrayVertexAttribBindingEXT\0"
   "glVertexArrayVertexAttribDivisorEXT\0"
   "glVertexArrayVertexAttribFormatEXT\0"
   "glVertexArrayVertexAttribIFormatEXT\0"
   "glVertexArrayVertexAttribIOffsetEXT\0"
   "glVertexArrayVertexAttribLFormatEXT\0"
   "glVertexArrayVertexAttribLOffsetEXT\0"
   "glVertexArrayVertexAttribOffsetEXT\0"
   "glVertexArrayVertexBindingDivisorEXT\0"
   "glVertexArrayVertexBuffer\0"
   "glVertexArrayVertexBuffers\0"
   "glVertexArrayVertexOffsetEXT\0"
   "glVertexAttrib1d\0"
   "glVertexAttrib1dARB\0"
   "glVertexAttrib1dNV\0"
   "glVertexAttrib1dv\0"
   "glVertexAttrib1dvARB\0"
   "glVertexAttrib1dvNV\0"
   "glVertexAttrib1f\0"
   "glVertexAttrib1fARB\0"
   "glVertexAttrib1fNV\0"
   "glVertexAttrib1fv\0"
   "glVertexAttrib1fvARB\0"
   "glVertexAttrib1fvNV\0"
   "glVertexAttrib1hNV\0"
   "glVertexAttrib1hvNV\0"
   "glVertexAttrib1s\0"
   "glVertexAttrib1sARB\0"
   "glVertexAttrib1sNV\0"
   "glVertexAttrib1sv\0"
   "glVertexAttrib1svARB\0"
   "glVertexAttrib1svNV\0"
   "glVertexAttrib2d\0"
   "glVertexAttrib2dARB\0"
   "glVertexAttrib2dNV\0"
   "glVertexAttrib2dv\0"
   "glVertexAttrib2dvARB\0"
   "glVertexAttrib2dvNV\0"
   "glVertexAttrib2f\0"
   "glVertexAttrib2fARB\0"
   "glVertexAttrib2fNV\0"
   "glVertexAttrib2fv\0"
   "glVertexAttrib2fvARB\0"
   "glVertexAttrib2fvNV\0"
   "glVertexAttrib2hNV\0"
   "glVertexAttrib2hvNV\0"
   "glVertexAttrib2s\0"
   "glVertexAttrib2sARB\0"
   "glVertexAttrib2sNV\0"
   "glVertexAttrib2sv\0"
   "glVertexAttrib2svARB\0"
   "glVertexAttrib2svNV\0"
   "glVertexAttrib3d\0"
   "glVertexAttrib3dARB\0"
   "glVertexAttrib3dNV\0"
   "glVertexAttrib3dv\0"
   "glVertexAttrib3dvARB\0"
   "glVertexAttrib3dvNV\0"
   "glVertexAttrib3f\0"
   "glVertexAttrib3fARB\0"
   "glVertexAttrib3fNV\0"
   "glVertexAttrib3fv\0"
   "glVertexAttrib3fvARB\0"
   "glVertexAttrib3fvNV\0"
   "glVertexAttrib3hNV\0"
   "glVertexAttrib3hvNV\0"
   "glVertexAttrib3s\0"
   "glVertexAttrib3sARB\0"
   "glVertexAttrib3sNV\0"
   "glVertexAttrib3sv\0"
   "glVertexAttrib3svARB\0"
   "glVertexAttrib3svNV\0"
   "glVertexAttrib4Nbv\0"
   "glVertexAttrib4NbvARB\0"
   "glVertexAttrib4Niv\0"
   "glVertexAttrib4NivARB\0"
   "glVertexAttrib4Nsv\0"
   "glVertexAttrib4NsvARB\0"
   "glVertexAttrib4Nub\0"
   "glVertexAttrib4NubARB\0"
   "glVertexAttrib4Nubv\0"
   "glVertexAttrib4NubvARB\0"
   "glVertexAttrib4Nuiv\0"
   "glVertexAttrib4NuivARB\0"
   "glVertexAttrib4Nusv\0"
   "glVertexAttrib4NusvARB\0"
   "glVertexAttrib4bv\0"
   "glVertexAttrib4bvARB\0"
   "glVertexAttrib4d\0"
   "glVertexAttrib4dARB\0"
   "glVertexAttrib4dNV\0"
   "glVertexAttrib4dv\0"
   "glVertexAttrib4dvARB\0"
   "glVertexAttrib4dvNV\0"
   "glVertexAttrib4f\0"
   "glVertexAttrib4fARB\0"
   "glVertexAttrib4fNV\0"
   "glVertexAttrib4fv\0"
   "glVertexAttrib4fvARB\0"
   "glVertexAttrib4fvNV\0"
   "glVertexAttrib4hNV\0"
   "glVertexAttrib4hvNV\0"
   "glVertexAttrib4iv\0"
   "glVertexAttrib4ivARB\0"
   "glVertexAttrib4s\0"
   "glVertexAttrib4sARB\0"
   "glVertexAttrib4sNV\0"
   "glVertexAttrib4sv\0"
   "glVertexAttrib4svARB\0"
   "glVertexAttrib4svNV\0"
   "glVertexAttrib4ubNV\0"
   "glVertexAttrib4ubv\0"
   "glVertexAttrib4ubvARB\0"
   "glVertexAttrib4ubvNV\0"
   "glVertexAttrib4uiv\0"
   "glVertexAttrib4uivARB\0"
   "glVertexAttrib4usv\0"
   "glVertexAttrib4usvARB\0"
   "glVertexAttribArrayObjectATI\0"
   "glVertexAttribBinding\0"
   "glVertexAttribDivisor\0"
   "glVertexAttribDivisorANGLE\0"
   "glVertexAttribDivisorARB\0"
   "glVertexAttribDivisorEXT\0"
   "glVertexAttribDivisorNV\0"
   "glVertexAttribFormat\0"
   "glVertexAttribFormatNV\0"
   "glVertexAttribI1i\0"
   "glVertexAttribI1iEXT\0"
   "glVertexAttribI1iv\0"
   "glVertexAttribI1ivEXT\0"
   "glVertexAttribI1ui\0"
   "glVertexAttribI1uiEXT\0"
   "glVertexAttribI1uiv\0"
   "glVertexAttribI1uivEXT\0"
   "glVertexAttribI2i\0"
   "glVertexAttribI2iEXT\0"
   "glVertexAttribI2iv\0"
   "glVertexAttribI2ivEXT\0"
   "glVertexAttribI2ui\0"
   "glVertexAttribI2uiEXT\0"
   "glVertexAttribI2uiv\0"
   "glVertexAttribI2uivEXT\0"
   "glVertexAttribI3i\0"
   "glVertexAttribI3iEXT\0"
   "glVertexAttribI3iv\0"
   "glVertexAttribI3ivEXT\0"
   "glVertexAttribI3ui\0"
   "glVertexAttribI3uiEXT\0"
   "glVertexAttribI3uiv\0"
   "glVertexAttribI3uivEXT\0"
   "glVertexAttribI4bv\0"
   "glVertexAttribI4bvEXT\0"
   "glVertexAttribI4i\0"
   "glVertexAttribI4iEXT\0"
   "glVertexAttribI4iv\0"
   "glVertexAttribI4ivEXT\0"
   "glVertexAttribI4sv\0"
   "glVertexAttribI4svEXT\0"
   "glVertexAttribI4ubv\0"
   "glVertexAttribI4ubvEXT\0"
   "glVertexAttribI4ui\0"
   "glVertexAttribI4uiEXT\0"
   "glVertexAttribI4uiv\0"
   "glVertexAttribI4uivEXT\0"
   "glVertexAttribI4usv\0"
   "glVertexAttribI4usvEXT\0"
   "glVertexAttribIFormat\0"
   "glVertexAttribIFormatNV\0"
   "glVertexAttribIPointer\0"
   "glVertexAttribIPointerEXT\0"
   "glVertexAttribL1d\0"
   "glVertexAttribL1dEXT\0"
   "glVertexAttribL1dv\0"
   "glVertexAttribL1dvEXT\0"
   "glVertexAttribL1i64NV\0"
   "glVertexAttribL1i64vNV\0"
   "glVertexAttribL1ui64ARB\0"
   "glVertexAttribL1ui64NV\0"
   "glVertexAttribL1ui64vARB\0"
   "glVertexAttribL1ui64vNV\0"
   "glVertexAttribL2d\0"
   "glVertexAttribL2dEXT\0"
   "glVertexAttribL2dv\0"
   "glVertexAttribL2dvEXT\0"
   "glVertexAttribL2i64NV\0"
   "glVertexAttribL2i64vNV\0"
   "glVertexAttribL2ui64NV\0"
   "glVertexAttribL2ui64vNV\0"
   "glVertexAttribL3d\0"
   "glVertexAttribL3dEXT\0"
   "glVertexAttribL3dv\0"
   "glVertexAttribL3dvEXT\0"
   "glVertexAttribL3i64NV\0"
   "glVertexAttribL3i64vNV\0"
   "glVertexAttribL3ui64NV\0"
   "glVertexAttribL3ui64vNV\0"
   "glVertexAttribL4d\0"
   "glVertexAttribL4dEXT\0"
   "glVertexAttribL4dv\0"
   "glVertexAttribL4dvEXT\0"
   "glVertexAttribL4i64NV\0"
   "glVertexAttribL4i64vNV\0"
   "glVertexAttribL4ui64NV\0"
   "glVertexAttribL4ui64vNV\0"
   "glVertexAttribLFormat\0"
   "glVertexAttribLFormatNV\0"
   "glVertexAttribLPointer\0"
   "glVertexAttribLPointerEXT\0"
   "glVertexAttribP1ui\0"
   "glVertexAttribP1uiv\0"
   "glVertexAttribP2ui\0"
   "glVertexAttribP2uiv\0"
   "glVertexAttribP3ui\0"
   "glVertexAttribP3uiv\0"
   "glVertexAttribP4ui\0"
   "glVertexAttribP4uiv\0"
   "glVertexAttribParameteriAMD\0"
   "glVertexAttribPointer\0"
   "glVertexAttribPointerARB\0"
   "glVertexAttribPointerNV\0"
   "glVertexAttribs1dvNV\0"
   "glVertexAttribs1fvNV\0"
   "glVertexAttribs1hvNV\0"
   "glVertexAttribs1svNV\0"
   "glVertexAttribs2dvNV\0"
   "glVertexAttribs2fvNV\0"
   "glVertexAttribs2hvNV\0"
   "glVertexAttribs2svNV\0"
   "glVertexAttribs3dvNV\0"
   "glVertexAttribs3fvNV\0"
   "glVertexAttribs3hvNV\0"
   "glVertexAttribs3svNV\0"
   "glVertexAttribs4dvNV\0"
   "glVertexAttribs4fvNV\0"
   "glVertexAttribs4hvNV\0"
   "glVertexAttribs4svNV\0"
   "glVertexAttribs4ubvNV\0"
   "glVertexBindingDivisor\0"
   "glVertexBlendARB\0"
   "glVertexBlendEnvfATI\0"
   "glVertexBlendEnviATI\0"
   "glVertexFormatNV\0"
   "glVertexP2ui\0"
   "glVertexP2uiv\0"
   "glVertexP3ui\0"
   "glVertexP3uiv\0"
   "glVertexP4ui\0"
   "glVertexP4uiv\0"
   "glVertexPointer\0"
   "glVertexPointerEXT\0"
   "glVertexPointerListIBM\0"
   "glVertexPointervINTEL\0"
   "glVertexStream1dATI\0"
   "glVertexStream1dvATI\0"
   "glVertexStream1fATI\0"
   "glVertexStream1fvATI\0"
   "glVertexStream1iATI\0"
   "glVertexStream1ivATI\0"
   "glVertexStream1sATI\0"
   "glVertexStream1svATI\0"
   "glVertexStream2dATI\0"
   "glVertexStream2dvATI\0"
   "glVertexStream2fATI\0"
   "glVertexStream2fvATI\0"
   "glVertexStream2iATI\0"
   "glVertexStream2ivATI\0"
   "glVertexStream2sATI\0"
   "glVertexStream2svATI\0"
   "glVertexStream3dATI\0"
   "glVertexStream3dvATI\0"
   "glVertexStream3fATI\0"
   "glVertexStream3fvATI\0"
   "glVertexStream3iATI\0"
   "glVertexStream3ivATI\0"
   "glVertexStream3sATI\0"
   "glVertexStream3svATI\0"
   "glVertexStream4dATI\0"
   "glVertexStream4dvATI\0"
   "glVertexStream4fATI\0"
   "glVertexStream4fvATI\0"
   "glVertexStream4iATI\0"
   "glVertexStream4ivATI\0"
   "glVertexStream4sATI\0"
   "glVertexStream4svATI\0"
   "glVertexWeightPointerEXT\0"
   "glVertexWeightfEXT\0"
   "glVertexWeightfvEXT\0"
   "glVertexWeighthNV\0"
   "glVertexWeighthvNV\0"
   "glVideoCaptureNV\0"
   "glVideoCaptureStreamParameterdvNV\0"
   "glVideoCaptureStreamParameterfvNV\0"
   "glVideoCaptureStreamParameterivNV\0"
   "glViewport\0"
   "glViewportArrayv\0"
   "glViewportArrayvNV\0"
   "glViewportIndexedf\0"
   "glViewportIndexedfNV\0"
   "glViewportIndexedfv\0"
   "glViewportIndexedfvNV\0"
   "glWaitSync\0"
   "glWaitSyncAPPLE\0"
   "glWeightPathsNV\0"
   "glWeightPointerARB\0"
   "glWeightPointerOES\0"
   "glWeightbvARB\0"
   "glWeightdvARB\0"
   "glWeightfvARB\0"
   "glWeightivARB\0"
   "glWeightsvARB\0"
   "glWeightubvARB\0"
   "glWeightuivARB\0"
   "glWeightusvARB\0"
   "glWindowPos2d\0"
   "glWindowPos2dARB\0"
   "glWindowPos2dMESA\0"
   "glWindowPos2dv\0"
   "glWindowPos2dvARB\0"
   "glWindowPos2dvMESA\0"
   "glWindowPos2f\0"
   "glWindowPos2fARB\0"
   "glWindowPos2fMESA\0"
   "glWindowPos2fv\0"
   "glWindowPos2fvARB\0"
   "glWindowPos2fvMESA\0"
   "glWindowPos2i\0"
   "glWindowPos2iARB\0"
   "glWindowPos2iMESA\0"
   "glWindowPos2iv\0"
   "glWindowPos2ivARB\0"
   "glWindowPos2ivMESA\0"
   "glWindowPos2s\0"
   "glWindowPos2sARB\0"
   "glWindowPos2sMESA\0"
   "glWindowPos2sv\0"
   "glWindowPos2svARB\0"
   "glWindowPos2svMESA\0"
   "glWindowPos3d\0"
   "glWindowPos3dARB\0"
   "glWindowPos3dMESA\0"
   "glWindowPos3dv\0"
   "glWindowPos3dvARB\0"
   "glWindowPos3dvMESA\0"
   "glWindowPos3f\0"
   "glWindowPos3fARB\0"
   "glWindowPos3fMESA\0"
   "glWindowPos3fv\0"
   "glWindowPos3fvARB\0"
   "glWindowPos3fvMESA\0"
   "glWindowPos3i\0"
   "glWindowPos3iARB\0"
   "glWindowPos3iMESA\0"
   "glWindowPos3iv\0"
   "glWindowPos3ivARB\0"
   "glWindowPos3ivMESA\0"
   "glWindowPos3s\0"
   "glWindowPos3sARB\0"
   "glWindowPos3sMESA\0"
   "glWindowPos3sv\0"
   "glWindowPos3svARB\0"
   "glWindowPos3svMESA\0"
   "glWindowPos4dMESA\0"
   "glWindowPos4dvMESA\0"
   "glWindowPos4fMESA\0"
   "glWindowPos4fvMESA\0"
   "glWindowPos4iMESA\0"
   "glWindowPos4ivMESA\0"
   "glWindowPos4sMESA\0"
   "glWindowPos4svMESA\0"
   "glWriteMaskEXT\0"
    ;

static void *gl_provider_resolver(const char *name,
                                   const enum gl_provider *providers,
                                   const uint16_t *entrypoints)
{
    int i;
    for (i = 0; providers[i] != gl_provider_terminator; i++) {
        switch (providers[i]) {
        case Desktop_OpenGL_1_0:
            if (epoxy_is_desktop_gl())
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 10);
            break;
        case Desktop_OpenGL_1_1:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 11)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 11);
            break;
        case Desktop_OpenGL_1_2:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 12)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 12);
            break;
        case Desktop_OpenGL_1_3:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 13)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 13);
            break;
        case Desktop_OpenGL_1_4:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 14)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 14);
            break;
        case Desktop_OpenGL_1_5:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 15)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 15);
            break;
        case Desktop_OpenGL_2_0:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 20)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 20);
            break;
        case Desktop_OpenGL_2_1:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 21)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 21);
            break;
        case Desktop_OpenGL_3_0:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 30)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 30);
            break;
        case Desktop_OpenGL_3_1:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 31)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 31);
            break;
        case Desktop_OpenGL_3_2:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 32)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 32);
            break;
        case Desktop_OpenGL_3_3:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 33)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 33);
            break;
        case Desktop_OpenGL_4_0:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 40)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 40);
            break;
        case Desktop_OpenGL_4_1:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 41)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 41);
            break;
        case Desktop_OpenGL_4_2:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 42)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 42);
            break;
        case Desktop_OpenGL_4_3:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 43)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 43);
            break;
        case Desktop_OpenGL_4_4:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 44)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 44);
            break;
        case Desktop_OpenGL_4_5:
            if (epoxy_is_desktop_gl() && epoxy_conservative_gl_version() >= 45)
                return epoxy_get_core_proc_address(entrypoint_strings + entrypoints[i], 45);
            break;
        case GL_extension_GL_3DFX_tbuffer:
            if (epoxy_conservative_has_gl_extension("GL_3DFX_tbuffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_debug_output:
            if (epoxy_conservative_has_gl_extension("GL_AMD_debug_output"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_draw_buffers_blend:
            if (epoxy_conservative_has_gl_extension("GL_AMD_draw_buffers_blend"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_gpu_shader_int64:
            if (epoxy_conservative_has_gl_extension("GL_AMD_gpu_shader_int64"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_interleaved_elements:
            if (epoxy_conservative_has_gl_extension("GL_AMD_interleaved_elements"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_multi_draw_indirect:
            if (epoxy_conservative_has_gl_extension("GL_AMD_multi_draw_indirect"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_name_gen_delete:
            if (epoxy_conservative_has_gl_extension("GL_AMD_name_gen_delete"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_occlusion_query_event:
            if (epoxy_conservative_has_gl_extension("GL_AMD_occlusion_query_event"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_performance_monitor:
            if (epoxy_conservative_has_gl_extension("GL_AMD_performance_monitor"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_sample_positions:
            if (epoxy_conservative_has_gl_extension("GL_AMD_sample_positions"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_sparse_texture:
            if (epoxy_conservative_has_gl_extension("GL_AMD_sparse_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_stencil_operation_extended:
            if (epoxy_conservative_has_gl_extension("GL_AMD_stencil_operation_extended"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_AMD_vertex_shader_tessellator:
            if (epoxy_conservative_has_gl_extension("GL_AMD_vertex_shader_tessellator"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ANGLE_framebuffer_blit:
            if (epoxy_conservative_has_gl_extension("GL_ANGLE_framebuffer_blit"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ANGLE_framebuffer_multisample:
            if (epoxy_conservative_has_gl_extension("GL_ANGLE_framebuffer_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ANGLE_instanced_arrays:
            if (epoxy_conservative_has_gl_extension("GL_ANGLE_instanced_arrays"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ANGLE_translated_shader_source:
            if (epoxy_conservative_has_gl_extension("GL_ANGLE_translated_shader_source"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_copy_texture_levels:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_copy_texture_levels"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_element_array:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_element_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_fence:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_fence"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_flush_buffer_range:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_flush_buffer_range"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_framebuffer_multisample:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_framebuffer_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_object_purgeable:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_object_purgeable"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_sync:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_sync"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_texture_range:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_texture_range"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_vertex_array_object:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_vertex_array_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_vertex_array_range:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_vertex_array_range"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_APPLE_vertex_program_evaluators:
            if (epoxy_conservative_has_gl_extension("GL_APPLE_vertex_program_evaluators"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_ES2_compatibility:
            if (epoxy_conservative_has_gl_extension("GL_ARB_ES2_compatibility"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_ES3_1_compatibility:
            if (epoxy_conservative_has_gl_extension("GL_ARB_ES3_1_compatibility"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_base_instance:
            if (epoxy_conservative_has_gl_extension("GL_ARB_base_instance"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_bindless_texture:
            if (epoxy_conservative_has_gl_extension("GL_ARB_bindless_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_blend_func_extended:
            if (epoxy_conservative_has_gl_extension("GL_ARB_blend_func_extended"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_buffer_storage:
            if (epoxy_conservative_has_gl_extension("GL_ARB_buffer_storage"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_cl_event:
            if (epoxy_conservative_has_gl_extension("GL_ARB_cl_event"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_clear_buffer_object:
            if (epoxy_conservative_has_gl_extension("GL_ARB_clear_buffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_clear_texture:
            if (epoxy_conservative_has_gl_extension("GL_ARB_clear_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_clip_control:
            if (epoxy_conservative_has_gl_extension("GL_ARB_clip_control"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_color_buffer_float:
            if (epoxy_conservative_has_gl_extension("GL_ARB_color_buffer_float"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_compute_shader:
            if (epoxy_conservative_has_gl_extension("GL_ARB_compute_shader"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_compute_variable_group_size:
            if (epoxy_conservative_has_gl_extension("GL_ARB_compute_variable_group_size"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_copy_buffer:
            if (epoxy_conservative_has_gl_extension("GL_ARB_copy_buffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_copy_image:
            if (epoxy_conservative_has_gl_extension("GL_ARB_copy_image"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_debug_output:
            if (epoxy_conservative_has_gl_extension("GL_ARB_debug_output"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_direct_state_access:
            if (epoxy_conservative_has_gl_extension("GL_ARB_direct_state_access"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_draw_buffers:
            if (epoxy_conservative_has_gl_extension("GL_ARB_draw_buffers"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_draw_buffers_blend:
            if (epoxy_conservative_has_gl_extension("GL_ARB_draw_buffers_blend"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_draw_elements_base_vertex:
            if (epoxy_conservative_has_gl_extension("GL_ARB_draw_elements_base_vertex"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_draw_indirect:
            if (epoxy_conservative_has_gl_extension("GL_ARB_draw_indirect"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_draw_instanced:
            if (epoxy_conservative_has_gl_extension("GL_ARB_draw_instanced"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_fragment_program:
            if (epoxy_conservative_has_gl_extension("GL_ARB_fragment_program"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_framebuffer_no_attachments:
            if (epoxy_conservative_has_gl_extension("GL_ARB_framebuffer_no_attachments"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_framebuffer_object:
            if (epoxy_conservative_has_gl_extension("GL_ARB_framebuffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_geometry_shader4:
            if (epoxy_conservative_has_gl_extension("GL_ARB_geometry_shader4"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_get_program_binary:
            if (epoxy_conservative_has_gl_extension("GL_ARB_get_program_binary"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_get_texture_sub_image:
            if (epoxy_conservative_has_gl_extension("GL_ARB_get_texture_sub_image"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_gpu_shader_fp64:
            if (epoxy_conservative_has_gl_extension("GL_ARB_gpu_shader_fp64"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_imaging:
            if (epoxy_conservative_has_gl_extension("GL_ARB_imaging"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_indirect_parameters:
            if (epoxy_conservative_has_gl_extension("GL_ARB_indirect_parameters"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_instanced_arrays:
            if (epoxy_conservative_has_gl_extension("GL_ARB_instanced_arrays"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_internalformat_query2:
            if (epoxy_conservative_has_gl_extension("GL_ARB_internalformat_query2"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_internalformat_query:
            if (epoxy_conservative_has_gl_extension("GL_ARB_internalformat_query"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_invalidate_subdata:
            if (epoxy_conservative_has_gl_extension("GL_ARB_invalidate_subdata"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_map_buffer_range:
            if (epoxy_conservative_has_gl_extension("GL_ARB_map_buffer_range"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_matrix_palette:
            if (epoxy_conservative_has_gl_extension("GL_ARB_matrix_palette"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_multi_bind:
            if (epoxy_conservative_has_gl_extension("GL_ARB_multi_bind"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_multi_draw_indirect:
            if (epoxy_conservative_has_gl_extension("GL_ARB_multi_draw_indirect"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_multisample:
            if (epoxy_conservative_has_gl_extension("GL_ARB_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_multitexture:
            if (epoxy_conservative_has_gl_extension("GL_ARB_multitexture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_occlusion_query:
            if (epoxy_conservative_has_gl_extension("GL_ARB_occlusion_query"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_point_parameters:
            if (epoxy_conservative_has_gl_extension("GL_ARB_point_parameters"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_program_interface_query:
            if (epoxy_conservative_has_gl_extension("GL_ARB_program_interface_query"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_provoking_vertex:
            if (epoxy_conservative_has_gl_extension("GL_ARB_provoking_vertex"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_robustness:
            if (epoxy_conservative_has_gl_extension("GL_ARB_robustness"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_sample_shading:
            if (epoxy_conservative_has_gl_extension("GL_ARB_sample_shading"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_sampler_objects:
            if (epoxy_conservative_has_gl_extension("GL_ARB_sampler_objects"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_separate_shader_objects:
            if (epoxy_conservative_has_gl_extension("GL_ARB_separate_shader_objects"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_shader_atomic_counters:
            if (epoxy_conservative_has_gl_extension("GL_ARB_shader_atomic_counters"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_shader_image_load_store:
            if (epoxy_conservative_has_gl_extension("GL_ARB_shader_image_load_store"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_shader_objects:
            if (epoxy_conservative_has_gl_extension("GL_ARB_shader_objects"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_shader_storage_buffer_object:
            if (epoxy_conservative_has_gl_extension("GL_ARB_shader_storage_buffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_shader_subroutine:
            if (epoxy_conservative_has_gl_extension("GL_ARB_shader_subroutine"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_shading_language_include:
            if (epoxy_conservative_has_gl_extension("GL_ARB_shading_language_include"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_sparse_buffer:
            if (epoxy_conservative_has_gl_extension("GL_ARB_sparse_buffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_sparse_texture:
            if (epoxy_conservative_has_gl_extension("GL_ARB_sparse_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_sync:
            if (epoxy_conservative_has_gl_extension("GL_ARB_sync"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_tessellation_shader:
            if (epoxy_conservative_has_gl_extension("GL_ARB_tessellation_shader"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_texture_barrier:
            if (epoxy_conservative_has_gl_extension("GL_ARB_texture_barrier"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_texture_buffer_object:
            if (epoxy_conservative_has_gl_extension("GL_ARB_texture_buffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_texture_buffer_range:
            if (epoxy_conservative_has_gl_extension("GL_ARB_texture_buffer_range"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_texture_compression:
            if (epoxy_conservative_has_gl_extension("GL_ARB_texture_compression"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_texture_multisample:
            if (epoxy_conservative_has_gl_extension("GL_ARB_texture_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_texture_storage:
            if (epoxy_conservative_has_gl_extension("GL_ARB_texture_storage"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_texture_storage_multisample:
            if (epoxy_conservative_has_gl_extension("GL_ARB_texture_storage_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_texture_view:
            if (epoxy_conservative_has_gl_extension("GL_ARB_texture_view"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_timer_query:
            if (epoxy_conservative_has_gl_extension("GL_ARB_timer_query"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_transform_feedback2:
            if (epoxy_conservative_has_gl_extension("GL_ARB_transform_feedback2"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_transform_feedback3:
            if (epoxy_conservative_has_gl_extension("GL_ARB_transform_feedback3"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_transform_feedback_instanced:
            if (epoxy_conservative_has_gl_extension("GL_ARB_transform_feedback_instanced"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_transpose_matrix:
            if (epoxy_conservative_has_gl_extension("GL_ARB_transpose_matrix"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_uniform_buffer_object:
            if (epoxy_conservative_has_gl_extension("GL_ARB_uniform_buffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_vertex_array_object:
            if (epoxy_conservative_has_gl_extension("GL_ARB_vertex_array_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_vertex_attrib_64bit:
            if (epoxy_conservative_has_gl_extension("GL_ARB_vertex_attrib_64bit"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_vertex_attrib_binding:
            if (epoxy_conservative_has_gl_extension("GL_ARB_vertex_attrib_binding"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_vertex_blend:
            if (epoxy_conservative_has_gl_extension("GL_ARB_vertex_blend"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_vertex_buffer_object:
            if (epoxy_conservative_has_gl_extension("GL_ARB_vertex_buffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_vertex_program:
            if (epoxy_conservative_has_gl_extension("GL_ARB_vertex_program"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_vertex_shader:
            if (epoxy_conservative_has_gl_extension("GL_ARB_vertex_shader"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_vertex_type_2_10_10_10_rev:
            if (epoxy_conservative_has_gl_extension("GL_ARB_vertex_type_2_10_10_10_rev"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_viewport_array:
            if (epoxy_conservative_has_gl_extension("GL_ARB_viewport_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ARB_window_pos:
            if (epoxy_conservative_has_gl_extension("GL_ARB_window_pos"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_draw_buffers:
            if (epoxy_conservative_has_gl_extension("GL_ATI_draw_buffers"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_element_array:
            if (epoxy_conservative_has_gl_extension("GL_ATI_element_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_envmap_bumpmap:
            if (epoxy_conservative_has_gl_extension("GL_ATI_envmap_bumpmap"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_fragment_shader:
            if (epoxy_conservative_has_gl_extension("GL_ATI_fragment_shader"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_map_object_buffer:
            if (epoxy_conservative_has_gl_extension("GL_ATI_map_object_buffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_pn_triangles:
            if (epoxy_conservative_has_gl_extension("GL_ATI_pn_triangles"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_separate_stencil:
            if (epoxy_conservative_has_gl_extension("GL_ATI_separate_stencil"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_vertex_array_object:
            if (epoxy_conservative_has_gl_extension("GL_ATI_vertex_array_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_vertex_attrib_array_object:
            if (epoxy_conservative_has_gl_extension("GL_ATI_vertex_attrib_array_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_ATI_vertex_streams:
            if (epoxy_conservative_has_gl_extension("GL_ATI_vertex_streams"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_base_instance:
            if (epoxy_conservative_has_gl_extension("GL_EXT_base_instance"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_bindable_uniform:
            if (epoxy_conservative_has_gl_extension("GL_EXT_bindable_uniform"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_blend_color:
            if (epoxy_conservative_has_gl_extension("GL_EXT_blend_color"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_blend_equation_separate:
            if (epoxy_conservative_has_gl_extension("GL_EXT_blend_equation_separate"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_blend_func_separate:
            if (epoxy_conservative_has_gl_extension("GL_EXT_blend_func_separate"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_blend_minmax:
            if (epoxy_conservative_has_gl_extension("GL_EXT_blend_minmax"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_buffer_storage:
            if (epoxy_conservative_has_gl_extension("GL_EXT_buffer_storage"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_color_subtable:
            if (epoxy_conservative_has_gl_extension("GL_EXT_color_subtable"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_compiled_vertex_array:
            if (epoxy_conservative_has_gl_extension("GL_EXT_compiled_vertex_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_convolution:
            if (epoxy_conservative_has_gl_extension("GL_EXT_convolution"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_coordinate_frame:
            if (epoxy_conservative_has_gl_extension("GL_EXT_coordinate_frame"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_copy_image:
            if (epoxy_conservative_has_gl_extension("GL_EXT_copy_image"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_copy_texture:
            if (epoxy_conservative_has_gl_extension("GL_EXT_copy_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_cull_vertex:
            if (epoxy_conservative_has_gl_extension("GL_EXT_cull_vertex"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_debug_label:
            if (epoxy_conservative_has_gl_extension("GL_EXT_debug_label"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_debug_marker:
            if (epoxy_conservative_has_gl_extension("GL_EXT_debug_marker"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_depth_bounds_test:
            if (epoxy_conservative_has_gl_extension("GL_EXT_depth_bounds_test"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_direct_state_access:
            if (epoxy_conservative_has_gl_extension("GL_EXT_direct_state_access"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_discard_framebuffer:
            if (epoxy_conservative_has_gl_extension("GL_EXT_discard_framebuffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_disjoint_timer_query:
            if (epoxy_conservative_has_gl_extension("GL_EXT_disjoint_timer_query"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_draw_buffers2:
            if (epoxy_conservative_has_gl_extension("GL_EXT_draw_buffers2"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_draw_buffers:
            if (epoxy_conservative_has_gl_extension("GL_EXT_draw_buffers"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_draw_buffers_indexed:
            if (epoxy_conservative_has_gl_extension("GL_EXT_draw_buffers_indexed"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_draw_elements_base_vertex:
            if (epoxy_conservative_has_gl_extension("GL_EXT_draw_elements_base_vertex"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_draw_instanced:
            if (epoxy_conservative_has_gl_extension("GL_EXT_draw_instanced"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_draw_range_elements:
            if (epoxy_conservative_has_gl_extension("GL_EXT_draw_range_elements"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_fog_coord:
            if (epoxy_conservative_has_gl_extension("GL_EXT_fog_coord"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_framebuffer_blit:
            if (epoxy_conservative_has_gl_extension("GL_EXT_framebuffer_blit"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_framebuffer_multisample:
            if (epoxy_conservative_has_gl_extension("GL_EXT_framebuffer_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_framebuffer_object:
            if (epoxy_conservative_has_gl_extension("GL_EXT_framebuffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_geometry_shader4:
            if (epoxy_conservative_has_gl_extension("GL_EXT_geometry_shader4"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_geometry_shader:
            if (epoxy_conservative_has_gl_extension("GL_EXT_geometry_shader"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_gpu_program_parameters:
            if (epoxy_conservative_has_gl_extension("GL_EXT_gpu_program_parameters"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_gpu_shader4:
            if (epoxy_conservative_has_gl_extension("GL_EXT_gpu_shader4"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_histogram:
            if (epoxy_conservative_has_gl_extension("GL_EXT_histogram"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_index_func:
            if (epoxy_conservative_has_gl_extension("GL_EXT_index_func"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_index_material:
            if (epoxy_conservative_has_gl_extension("GL_EXT_index_material"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_instanced_arrays:
            if (epoxy_conservative_has_gl_extension("GL_EXT_instanced_arrays"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_light_texture:
            if (epoxy_conservative_has_gl_extension("GL_EXT_light_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_map_buffer_range:
            if (epoxy_conservative_has_gl_extension("GL_EXT_map_buffer_range"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_multi_draw_arrays:
            if (epoxy_conservative_has_gl_extension("GL_EXT_multi_draw_arrays"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_multi_draw_indirect:
            if (epoxy_conservative_has_gl_extension("GL_EXT_multi_draw_indirect"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_multisample:
            if (epoxy_conservative_has_gl_extension("GL_EXT_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_multisampled_render_to_texture:
            if (epoxy_conservative_has_gl_extension("GL_EXT_multisampled_render_to_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_multiview_draw_buffers:
            if (epoxy_conservative_has_gl_extension("GL_EXT_multiview_draw_buffers"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_occlusion_query_boolean:
            if (epoxy_conservative_has_gl_extension("GL_EXT_occlusion_query_boolean"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_paletted_texture:
            if (epoxy_conservative_has_gl_extension("GL_EXT_paletted_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_pixel_transform:
            if (epoxy_conservative_has_gl_extension("GL_EXT_pixel_transform"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_point_parameters:
            if (epoxy_conservative_has_gl_extension("GL_EXT_point_parameters"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_polygon_offset:
            if (epoxy_conservative_has_gl_extension("GL_EXT_polygon_offset"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_polygon_offset_clamp:
            if (epoxy_conservative_has_gl_extension("GL_EXT_polygon_offset_clamp"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_primitive_bounding_box:
            if (epoxy_conservative_has_gl_extension("GL_EXT_primitive_bounding_box"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_provoking_vertex:
            if (epoxy_conservative_has_gl_extension("GL_EXT_provoking_vertex"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_raster_multisample:
            if (epoxy_conservative_has_gl_extension("GL_EXT_raster_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_robustness:
            if (epoxy_conservative_has_gl_extension("GL_EXT_robustness"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_secondary_color:
            if (epoxy_conservative_has_gl_extension("GL_EXT_secondary_color"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_separate_shader_objects:
            if (epoxy_conservative_has_gl_extension("GL_EXT_separate_shader_objects"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_shader_image_load_store:
            if (epoxy_conservative_has_gl_extension("GL_EXT_shader_image_load_store"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_sparse_texture:
            if (epoxy_conservative_has_gl_extension("GL_EXT_sparse_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_stencil_clear_tag:
            if (epoxy_conservative_has_gl_extension("GL_EXT_stencil_clear_tag"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_stencil_two_side:
            if (epoxy_conservative_has_gl_extension("GL_EXT_stencil_two_side"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_subtexture:
            if (epoxy_conservative_has_gl_extension("GL_EXT_subtexture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_tessellation_shader:
            if (epoxy_conservative_has_gl_extension("GL_EXT_tessellation_shader"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture3D:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture3D"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_array:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_border_clamp:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_border_clamp"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_buffer:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_buffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_buffer_object:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_buffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_filter_minmax:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_filter_minmax"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_integer:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_integer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_object:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_perturb_normal:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_perturb_normal"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_storage:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_storage"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_texture_view:
            if (epoxy_conservative_has_gl_extension("GL_EXT_texture_view"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_timer_query:
            if (epoxy_conservative_has_gl_extension("GL_EXT_timer_query"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_transform_feedback:
            if (epoxy_conservative_has_gl_extension("GL_EXT_transform_feedback"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_vertex_array:
            if (epoxy_conservative_has_gl_extension("GL_EXT_vertex_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_vertex_attrib_64bit:
            if (epoxy_conservative_has_gl_extension("GL_EXT_vertex_attrib_64bit"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_vertex_shader:
            if (epoxy_conservative_has_gl_extension("GL_EXT_vertex_shader"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_vertex_weighting:
            if (epoxy_conservative_has_gl_extension("GL_EXT_vertex_weighting"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_EXT_x11_sync_object:
            if (epoxy_conservative_has_gl_extension("GL_EXT_x11_sync_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_GREMEDY_frame_terminator:
            if (epoxy_conservative_has_gl_extension("GL_GREMEDY_frame_terminator"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_GREMEDY_string_marker:
            if (epoxy_conservative_has_gl_extension("GL_GREMEDY_string_marker"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_HP_image_transform:
            if (epoxy_conservative_has_gl_extension("GL_HP_image_transform"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_IBM_multimode_draw_arrays:
            if (epoxy_conservative_has_gl_extension("GL_IBM_multimode_draw_arrays"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_IBM_static_data:
            if (epoxy_conservative_has_gl_extension("GL_IBM_static_data"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_IBM_vertex_array_lists:
            if (epoxy_conservative_has_gl_extension("GL_IBM_vertex_array_lists"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_IMG_multisampled_render_to_texture:
            if (epoxy_conservative_has_gl_extension("GL_IMG_multisampled_render_to_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_IMG_user_clip_plane:
            if (epoxy_conservative_has_gl_extension("GL_IMG_user_clip_plane"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_INGR_blend_func_separate:
            if (epoxy_conservative_has_gl_extension("GL_INGR_blend_func_separate"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_INTEL_map_texture:
            if (epoxy_conservative_has_gl_extension("GL_INTEL_map_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_INTEL_parallel_arrays:
            if (epoxy_conservative_has_gl_extension("GL_INTEL_parallel_arrays"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_INTEL_performance_query:
            if (epoxy_conservative_has_gl_extension("GL_INTEL_performance_query"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_KHR_blend_equation_advanced:
            if (epoxy_conservative_has_gl_extension("GL_KHR_blend_equation_advanced"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_KHR_debug:
            if (epoxy_conservative_has_gl_extension("GL_KHR_debug"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_KHR_robustness:
            if (epoxy_conservative_has_gl_extension("GL_KHR_robustness"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_MESA_resize_buffers:
            if (epoxy_conservative_has_gl_extension("GL_MESA_resize_buffers"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_MESA_window_pos:
            if (epoxy_conservative_has_gl_extension("GL_MESA_window_pos"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NVX_conditional_render:
            if (epoxy_conservative_has_gl_extension("GL_NVX_conditional_render"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_bindless_multi_draw_indirect:
            if (epoxy_conservative_has_gl_extension("GL_NV_bindless_multi_draw_indirect"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_bindless_multi_draw_indirect_count:
            if (epoxy_conservative_has_gl_extension("GL_NV_bindless_multi_draw_indirect_count"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_bindless_texture:
            if (epoxy_conservative_has_gl_extension("GL_NV_bindless_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_blend_equation_advanced:
            if (epoxy_conservative_has_gl_extension("GL_NV_blend_equation_advanced"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_command_list:
            if (epoxy_conservative_has_gl_extension("GL_NV_command_list"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_conditional_render:
            if (epoxy_conservative_has_gl_extension("GL_NV_conditional_render"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_conservative_raster:
            if (epoxy_conservative_has_gl_extension("GL_NV_conservative_raster"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_copy_buffer:
            if (epoxy_conservative_has_gl_extension("GL_NV_copy_buffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_copy_image:
            if (epoxy_conservative_has_gl_extension("GL_NV_copy_image"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_coverage_sample:
            if (epoxy_conservative_has_gl_extension("GL_NV_coverage_sample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_depth_buffer_float:
            if (epoxy_conservative_has_gl_extension("GL_NV_depth_buffer_float"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_draw_buffers:
            if (epoxy_conservative_has_gl_extension("GL_NV_draw_buffers"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_draw_instanced:
            if (epoxy_conservative_has_gl_extension("GL_NV_draw_instanced"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_draw_texture:
            if (epoxy_conservative_has_gl_extension("GL_NV_draw_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_evaluators:
            if (epoxy_conservative_has_gl_extension("GL_NV_evaluators"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_explicit_multisample:
            if (epoxy_conservative_has_gl_extension("GL_NV_explicit_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_fence:
            if (epoxy_conservative_has_gl_extension("GL_NV_fence"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_fragment_coverage_to_color:
            if (epoxy_conservative_has_gl_extension("GL_NV_fragment_coverage_to_color"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_fragment_program:
            if (epoxy_conservative_has_gl_extension("GL_NV_fragment_program"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_framebuffer_blit:
            if (epoxy_conservative_has_gl_extension("GL_NV_framebuffer_blit"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_framebuffer_mixed_samples:
            if (epoxy_conservative_has_gl_extension("GL_NV_framebuffer_mixed_samples"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_framebuffer_multisample:
            if (epoxy_conservative_has_gl_extension("GL_NV_framebuffer_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_framebuffer_multisample_coverage:
            if (epoxy_conservative_has_gl_extension("GL_NV_framebuffer_multisample_coverage"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_geometry_program4:
            if (epoxy_conservative_has_gl_extension("GL_NV_geometry_program4"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_gpu_program4:
            if (epoxy_conservative_has_gl_extension("GL_NV_gpu_program4"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_gpu_program5:
            if (epoxy_conservative_has_gl_extension("GL_NV_gpu_program5"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_gpu_shader5:
            if (epoxy_conservative_has_gl_extension("GL_NV_gpu_shader5"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_half_float:
            if (epoxy_conservative_has_gl_extension("GL_NV_half_float"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_instanced_arrays:
            if (epoxy_conservative_has_gl_extension("GL_NV_instanced_arrays"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_internalformat_sample_query:
            if (epoxy_conservative_has_gl_extension("GL_NV_internalformat_sample_query"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_non_square_matrices:
            if (epoxy_conservative_has_gl_extension("GL_NV_non_square_matrices"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_occlusion_query:
            if (epoxy_conservative_has_gl_extension("GL_NV_occlusion_query"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_parameter_buffer_object:
            if (epoxy_conservative_has_gl_extension("GL_NV_parameter_buffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_path_rendering:
            if (epoxy_conservative_has_gl_extension("GL_NV_path_rendering"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_pixel_data_range:
            if (epoxy_conservative_has_gl_extension("GL_NV_pixel_data_range"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_point_sprite:
            if (epoxy_conservative_has_gl_extension("GL_NV_point_sprite"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_polygon_mode:
            if (epoxy_conservative_has_gl_extension("GL_NV_polygon_mode"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_present_video:
            if (epoxy_conservative_has_gl_extension("GL_NV_present_video"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_primitive_restart:
            if (epoxy_conservative_has_gl_extension("GL_NV_primitive_restart"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_read_buffer:
            if (epoxy_conservative_has_gl_extension("GL_NV_read_buffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_register_combiners2:
            if (epoxy_conservative_has_gl_extension("GL_NV_register_combiners2"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_register_combiners:
            if (epoxy_conservative_has_gl_extension("GL_NV_register_combiners"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_sample_locations:
            if (epoxy_conservative_has_gl_extension("GL_NV_sample_locations"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_shader_buffer_load:
            if (epoxy_conservative_has_gl_extension("GL_NV_shader_buffer_load"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_texture_barrier:
            if (epoxy_conservative_has_gl_extension("GL_NV_texture_barrier"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_texture_multisample:
            if (epoxy_conservative_has_gl_extension("GL_NV_texture_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_transform_feedback2:
            if (epoxy_conservative_has_gl_extension("GL_NV_transform_feedback2"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_transform_feedback:
            if (epoxy_conservative_has_gl_extension("GL_NV_transform_feedback"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_vdpau_interop:
            if (epoxy_conservative_has_gl_extension("GL_NV_vdpau_interop"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_vertex_array_range:
            if (epoxy_conservative_has_gl_extension("GL_NV_vertex_array_range"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_vertex_attrib_integer_64bit:
            if (epoxy_conservative_has_gl_extension("GL_NV_vertex_attrib_integer_64bit"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_vertex_buffer_unified_memory:
            if (epoxy_conservative_has_gl_extension("GL_NV_vertex_buffer_unified_memory"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_vertex_program4:
            if (epoxy_conservative_has_gl_extension("GL_NV_vertex_program4"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_vertex_program:
            if (epoxy_conservative_has_gl_extension("GL_NV_vertex_program"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_video_capture:
            if (epoxy_conservative_has_gl_extension("GL_NV_video_capture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_NV_viewport_array:
            if (epoxy_conservative_has_gl_extension("GL_NV_viewport_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_EGL_image:
            if (epoxy_conservative_has_gl_extension("GL_OES_EGL_image"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_blend_equation_separate:
            if (epoxy_conservative_has_gl_extension("GL_OES_blend_equation_separate"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_blend_func_separate:
            if (epoxy_conservative_has_gl_extension("GL_OES_blend_func_separate"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_blend_subtract:
            if (epoxy_conservative_has_gl_extension("GL_OES_blend_subtract"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_byte_coordinates:
            if (epoxy_conservative_has_gl_extension("GL_OES_byte_coordinates"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_copy_image:
            if (epoxy_conservative_has_gl_extension("GL_OES_copy_image"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_draw_buffers_indexed:
            if (epoxy_conservative_has_gl_extension("GL_OES_draw_buffers_indexed"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_draw_elements_base_vertex:
            if (epoxy_conservative_has_gl_extension("GL_OES_draw_elements_base_vertex"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_draw_texture:
            if (epoxy_conservative_has_gl_extension("GL_OES_draw_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_fixed_point:
            if (epoxy_conservative_has_gl_extension("GL_OES_fixed_point"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_framebuffer_object:
            if (epoxy_conservative_has_gl_extension("GL_OES_framebuffer_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_geometry_shader:
            if (epoxy_conservative_has_gl_extension("GL_OES_geometry_shader"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_get_program_binary:
            if (epoxy_conservative_has_gl_extension("GL_OES_get_program_binary"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_mapbuffer:
            if (epoxy_conservative_has_gl_extension("GL_OES_mapbuffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_matrix_palette:
            if (epoxy_conservative_has_gl_extension("GL_OES_matrix_palette"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_point_size_array:
            if (epoxy_conservative_has_gl_extension("GL_OES_point_size_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_primitive_bounding_box:
            if (epoxy_conservative_has_gl_extension("GL_OES_primitive_bounding_box"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_query_matrix:
            if (epoxy_conservative_has_gl_extension("GL_OES_query_matrix"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_sample_shading:
            if (epoxy_conservative_has_gl_extension("GL_OES_sample_shading"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_single_precision:
            if (epoxy_conservative_has_gl_extension("GL_OES_single_precision"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_tessellation_shader:
            if (epoxy_conservative_has_gl_extension("GL_OES_tessellation_shader"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_texture_3D:
            if (epoxy_conservative_has_gl_extension("GL_OES_texture_3D"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_texture_border_clamp:
            if (epoxy_conservative_has_gl_extension("GL_OES_texture_border_clamp"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_texture_buffer:
            if (epoxy_conservative_has_gl_extension("GL_OES_texture_buffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_texture_cube_map:
            if (epoxy_conservative_has_gl_extension("GL_OES_texture_cube_map"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_texture_storage_multisample_2d_array:
            if (epoxy_conservative_has_gl_extension("GL_OES_texture_storage_multisample_2d_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_texture_view:
            if (epoxy_conservative_has_gl_extension("GL_OES_texture_view"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OES_vertex_array_object:
            if (epoxy_conservative_has_gl_extension("GL_OES_vertex_array_object"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_OVR_multiview:
            if (epoxy_conservative_has_gl_extension("GL_OVR_multiview"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_PGI_misc_hints:
            if (epoxy_conservative_has_gl_extension("GL_PGI_misc_hints"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_QCOM_alpha_test:
            if (epoxy_conservative_has_gl_extension("GL_QCOM_alpha_test"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_QCOM_driver_control:
            if (epoxy_conservative_has_gl_extension("GL_QCOM_driver_control"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_QCOM_extended_get2:
            if (epoxy_conservative_has_gl_extension("GL_QCOM_extended_get2"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_QCOM_extended_get:
            if (epoxy_conservative_has_gl_extension("GL_QCOM_extended_get"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_QCOM_tiled_rendering:
            if (epoxy_conservative_has_gl_extension("GL_QCOM_tiled_rendering"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIS_detail_texture:
            if (epoxy_conservative_has_gl_extension("GL_SGIS_detail_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIS_fog_function:
            if (epoxy_conservative_has_gl_extension("GL_SGIS_fog_function"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIS_multisample:
            if (epoxy_conservative_has_gl_extension("GL_SGIS_multisample"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIS_pixel_texture:
            if (epoxy_conservative_has_gl_extension("GL_SGIS_pixel_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIS_point_parameters:
            if (epoxy_conservative_has_gl_extension("GL_SGIS_point_parameters"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIS_sharpen_texture:
            if (epoxy_conservative_has_gl_extension("GL_SGIS_sharpen_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIS_texture4D:
            if (epoxy_conservative_has_gl_extension("GL_SGIS_texture4D"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIS_texture_color_mask:
            if (epoxy_conservative_has_gl_extension("GL_SGIS_texture_color_mask"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIS_texture_filter4:
            if (epoxy_conservative_has_gl_extension("GL_SGIS_texture_filter4"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_async:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_async"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_flush_raster:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_flush_raster"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_fragment_lighting:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_fragment_lighting"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_framezoom:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_framezoom"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_igloo_interface:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_igloo_interface"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_instruments:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_instruments"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_list_priority:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_list_priority"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_pixel_texture:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_pixel_texture"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_polynomial_ffd:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_polynomial_ffd"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_reference_plane:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_reference_plane"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_sprite:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_sprite"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGIX_tag_sample_buffer:
            if (epoxy_conservative_has_gl_extension("GL_SGIX_tag_sample_buffer"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SGI_color_table:
            if (epoxy_conservative_has_gl_extension("GL_SGI_color_table"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SUNX_constant_data:
            if (epoxy_conservative_has_gl_extension("GL_SUNX_constant_data"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SUN_global_alpha:
            if (epoxy_conservative_has_gl_extension("GL_SUN_global_alpha"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SUN_mesh_array:
            if (epoxy_conservative_has_gl_extension("GL_SUN_mesh_array"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SUN_triangle_list:
            if (epoxy_conservative_has_gl_extension("GL_SUN_triangle_list"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case GL_extension_GL_SUN_vertex:
            if (epoxy_conservative_has_gl_extension("GL_SUN_vertex"))
                return epoxy_get_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case OpenGL_ES_1_0:
            if (!epoxy_is_desktop_gl() && epoxy_gl_version() >= 10 && epoxy_gl_version() < 20)
                return epoxy_gles1_dlsym(entrypoint_strings + entrypoints[i]);
            break;
        case OpenGL_ES_2_0:
            if (!epoxy_is_desktop_gl() && epoxy_gl_version() >= 20)
                return epoxy_gles2_dlsym(entrypoint_strings + entrypoints[i]);
            break;
        case OpenGL_ES_3_0:
            if (!epoxy_is_desktop_gl() && epoxy_gl_version() >= 30)
                return epoxy_gles3_dlsym(entrypoint_strings + entrypoints[i]);
            break;
        case OpenGL_ES_3_1:
            if (!epoxy_is_desktop_gl() && epoxy_gl_version() >= 31)
                return epoxy_gles3_dlsym(entrypoint_strings + entrypoints[i]);
            break;
        case always_present:
            if (true)
                return epoxy_get_bootstrap_proc_address(entrypoint_strings + entrypoints[i]);
            break;
        case gl_provider_terminator:
            abort(); /* Not reached */
        }
    }

    fprintf(stderr, "No provider of %s found.  Requires one of:\n", name);
    for (i = 0; providers[i] != gl_provider_terminator; i++) {
        fprintf(stderr, "    %s\n", enum_string + enum_string_offsets[providers[i]]);
    }
    if (providers[0] == gl_provider_terminator) {
        fprintf(stderr, "    No known providers.  This is likely a bug "
                        "in libepoxy code generation\n");
    }
    abort();
}

EPOXY_NOINLINE static void *
gl_single_resolver(enum gl_provider provider, uint16_t entrypoint_offset);

static void *
gl_single_resolver(enum gl_provider provider, uint16_t entrypoint_offset)
{
    enum gl_provider providers[] = {
        provider,
        gl_provider_terminator
    };
    return gl_provider_resolver(entrypoint_strings + entrypoint_offset,
                                providers, &entrypoint_offset);
}

static PFNGLACCUMPROC
epoxy_glAccum_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 0 /* glAccum */);
}

static PFNGLACCUMXOESPROC
epoxy_glAccumxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 8 /* glAccumxOES */);
}

static PFNGLACTIVEPROGRAMEXTPROC
epoxy_glActiveProgramEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 20 /* glActiveProgramEXT */);
}

static PFNGLACTIVESHADERPROGRAMPROC
epoxy_glActiveShaderProgram_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39 /* "glActiveShaderProgram" */,
        39 /* "glActiveShaderProgram" */,
        39 /* "glActiveShaderProgram" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39 /* "glActiveShaderProgram" */,
                                providers, entrypoints);
}

static PFNGLACTIVESHADERPROGRAMEXTPROC
epoxy_glActiveShaderProgramEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 61 /* glActiveShaderProgramEXT */);
}

static PFNGLACTIVESTENCILFACEEXTPROC
epoxy_glActiveStencilFaceEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_stencil_two_side, 86 /* glActiveStencilFaceEXT */);
}

static PFNGLACTIVETEXTUREPROC
epoxy_glActiveTexture_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        109 /* "glActiveTexture" */,
        109 /* "glActiveTexture" */,
        109 /* "glActiveTexture" */,
        125 /* "glActiveTextureARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 109 /* "glActiveTexture" */,
                                providers, entrypoints);
}

static PFNGLACTIVETEXTUREARBPROC
epoxy_glActiveTextureARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        125 /* "glActiveTextureARB" */,
        109 /* "glActiveTexture" */,
        109 /* "glActiveTexture" */,
        109 /* "glActiveTexture" */,
    };
    return gl_provider_resolver(entrypoint_strings + 125 /* "glActiveTextureARB" */,
                                providers, entrypoints);
}

static PFNGLACTIVEVARYINGNVPROC
epoxy_glActiveVaryingNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 144 /* glActiveVaryingNV */);
}

static PFNGLALPHAFRAGMENTOP1ATIPROC
epoxy_glAlphaFragmentOp1ATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 162 /* glAlphaFragmentOp1ATI */);
}

static PFNGLALPHAFRAGMENTOP2ATIPROC
epoxy_glAlphaFragmentOp2ATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 184 /* glAlphaFragmentOp2ATI */);
}

static PFNGLALPHAFRAGMENTOP3ATIPROC
epoxy_glAlphaFragmentOp3ATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 206 /* glAlphaFragmentOp3ATI */);
}

static PFNGLALPHAFUNCPROC
epoxy_glAlphaFunc_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        228 /* "glAlphaFunc" */,
        228 /* "glAlphaFunc" */,
    };
    return gl_provider_resolver(entrypoint_strings + 228 /* "glAlphaFunc" */,
                                providers, entrypoints);
}

static PFNGLALPHAFUNCQCOMPROC
epoxy_glAlphaFuncQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_alpha_test, 240 /* glAlphaFuncQCOM */);
}

static PFNGLALPHAFUNCXPROC
epoxy_glAlphaFuncx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 256 /* glAlphaFuncx */);
}

static PFNGLALPHAFUNCXOESPROC
epoxy_glAlphaFuncxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 269 /* glAlphaFuncxOES */);
}

static PFNGLAPPLYTEXTUREEXTPROC
epoxy_glApplyTextureEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_light_texture, 285 /* glApplyTextureEXT */);
}

static PFNGLAREPROGRAMSRESIDENTNVPROC
epoxy_glAreProgramsResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 303 /* glAreProgramsResidentNV */);
}

static PFNGLARETEXTURESRESIDENTPROC
epoxy_glAreTexturesResident_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_1, 327 /* glAreTexturesResident */);
}

static PFNGLARETEXTURESRESIDENTEXTPROC
epoxy_glAreTexturesResidentEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_texture_object, 349 /* glAreTexturesResidentEXT */);
}

static PFNGLARRAYELEMENTPROC
epoxy_glArrayElement_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        GL_extension_GL_EXT_vertex_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        374 /* "glArrayElement" */,
        389 /* "glArrayElementEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 374 /* "glArrayElement" */,
                                providers, entrypoints);
}

static PFNGLARRAYELEMENTEXTPROC
epoxy_glArrayElementEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_array,
        Desktop_OpenGL_1_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        389 /* "glArrayElementEXT" */,
        374 /* "glArrayElement" */,
    };
    return gl_provider_resolver(entrypoint_strings + 389 /* "glArrayElementEXT" */,
                                providers, entrypoints);
}

static PFNGLARRAYOBJECTATIPROC
epoxy_glArrayObjectATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 407 /* glArrayObjectATI */);
}

static PFNGLASYNCMARKERSGIXPROC
epoxy_glAsyncMarkerSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_async, 424 /* glAsyncMarkerSGIX */);
}

static PFNGLATTACHOBJECTARBPROC
epoxy_glAttachObjectARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        442 /* "glAttachObjectARB" */,
        460 /* "glAttachShader" */,
        460 /* "glAttachShader" */,
    };
    return gl_provider_resolver(entrypoint_strings + 442 /* "glAttachObjectARB" */,
                                providers, entrypoints);
}

static PFNGLATTACHSHADERPROC
epoxy_glAttachShader_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        460 /* "glAttachShader" */,
        460 /* "glAttachShader" */,
        442 /* "glAttachObjectARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 460 /* "glAttachShader" */,
                                providers, entrypoints);
}

static PFNGLBEGINPROC
epoxy_glBegin_unwrapped_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 475 /* glBegin */);
}

static PFNGLBEGINCONDITIONALRENDERPROC
epoxy_glBeginConditionalRender_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_conditional_render,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        483 /* "glBeginConditionalRender" */,
        508 /* "glBeginConditionalRenderNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 483 /* "glBeginConditionalRender" */,
                                providers, entrypoints);
}

static PFNGLBEGINCONDITIONALRENDERNVPROC
epoxy_glBeginConditionalRenderNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_conditional_render,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        508 /* "glBeginConditionalRenderNV" */,
        483 /* "glBeginConditionalRender" */,
    };
    return gl_provider_resolver(entrypoint_strings + 508 /* "glBeginConditionalRenderNV" */,
                                providers, entrypoints);
}

static PFNGLBEGINCONDITIONALRENDERNVXPROC
epoxy_glBeginConditionalRenderNVX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NVX_conditional_render, 535 /* glBeginConditionalRenderNVX */);
}

static PFNGLBEGINFRAGMENTSHADERATIPROC
epoxy_glBeginFragmentShaderATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 563 /* glBeginFragmentShaderATI */);
}

static PFNGLBEGINOCCLUSIONQUERYNVPROC
epoxy_glBeginOcclusionQueryNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 588 /* glBeginOcclusionQueryNV */);
}

static PFNGLBEGINPERFMONITORAMDPROC
epoxy_glBeginPerfMonitorAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 612 /* glBeginPerfMonitorAMD */);
}

static PFNGLBEGINPERFQUERYINTELPROC
epoxy_glBeginPerfQueryINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 634 /* glBeginPerfQueryINTEL */);
}

static PFNGLBEGINQUERYPROC
epoxy_glBeginQuery_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_occlusion_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        656 /* "glBeginQuery" */,
        656 /* "glBeginQuery" */,
        669 /* "glBeginQueryARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 656 /* "glBeginQuery" */,
                                providers, entrypoints);
}

static PFNGLBEGINQUERYARBPROC
epoxy_glBeginQueryARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_occlusion_query,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        669 /* "glBeginQueryARB" */,
        656 /* "glBeginQuery" */,
        656 /* "glBeginQuery" */,
    };
    return gl_provider_resolver(entrypoint_strings + 669 /* "glBeginQueryARB" */,
                                providers, entrypoints);
}

static PFNGLBEGINQUERYEXTPROC
epoxy_glBeginQueryEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_occlusion_query_boolean,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        685 /* "glBeginQueryEXT" */,
        685 /* "glBeginQueryEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 685 /* "glBeginQueryEXT" */,
                                providers, entrypoints);
}

static PFNGLBEGINQUERYINDEXEDPROC
epoxy_glBeginQueryIndexed_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        701 /* "glBeginQueryIndexed" */,
        701 /* "glBeginQueryIndexed" */,
    };
    return gl_provider_resolver(entrypoint_strings + 701 /* "glBeginQueryIndexed" */,
                                providers, entrypoints);
}

static PFNGLBEGINTRANSFORMFEEDBACKPROC
epoxy_glBeginTransformFeedback_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        GL_extension_GL_NV_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        721 /* "glBeginTransformFeedback" */,
        721 /* "glBeginTransformFeedback" */,
        746 /* "glBeginTransformFeedbackEXT" */,
        774 /* "glBeginTransformFeedbackNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 721 /* "glBeginTransformFeedback" */,
                                providers, entrypoints);
}

static PFNGLBEGINTRANSFORMFEEDBACKEXTPROC
epoxy_glBeginTransformFeedbackEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_transform_feedback,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        746 /* "glBeginTransformFeedbackEXT" */,
        721 /* "glBeginTransformFeedback" */,
        721 /* "glBeginTransformFeedback" */,
        774 /* "glBeginTransformFeedbackNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 746 /* "glBeginTransformFeedbackEXT" */,
                                providers, entrypoints);
}

static PFNGLBEGINTRANSFORMFEEDBACKNVPROC
epoxy_glBeginTransformFeedbackNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        774 /* "glBeginTransformFeedbackNV" */,
        721 /* "glBeginTransformFeedback" */,
        721 /* "glBeginTransformFeedback" */,
        746 /* "glBeginTransformFeedbackEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 774 /* "glBeginTransformFeedbackNV" */,
                                providers, entrypoints);
}

static PFNGLBEGINVERTEXSHADEREXTPROC
epoxy_glBeginVertexShaderEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 801 /* glBeginVertexShaderEXT */);
}

static PFNGLBEGINVIDEOCAPTURENVPROC
epoxy_glBeginVideoCaptureNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 824 /* glBeginVideoCaptureNV */);
}

static PFNGLBINDATTRIBLOCATIONPROC
epoxy_glBindAttribLocation_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        846 /* "glBindAttribLocation" */,
        846 /* "glBindAttribLocation" */,
        867 /* "glBindAttribLocationARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 846 /* "glBindAttribLocation" */,
                                providers, entrypoints);
}

static PFNGLBINDATTRIBLOCATIONARBPROC
epoxy_glBindAttribLocationARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        867 /* "glBindAttribLocationARB" */,
        846 /* "glBindAttribLocation" */,
        846 /* "glBindAttribLocation" */,
    };
    return gl_provider_resolver(entrypoint_strings + 867 /* "glBindAttribLocationARB" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERPROC
epoxy_glBindBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        891 /* "glBindBuffer" */,
        891 /* "glBindBuffer" */,
        891 /* "glBindBuffer" */,
        904 /* "glBindBufferARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 891 /* "glBindBuffer" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERARBPROC
epoxy_glBindBufferARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        904 /* "glBindBufferARB" */,
        891 /* "glBindBuffer" */,
        891 /* "glBindBuffer" */,
        891 /* "glBindBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 904 /* "glBindBufferARB" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERBASEPROC
epoxy_glBindBufferBase_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        GL_extension_GL_NV_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        920 /* "glBindBufferBase" */,
        920 /* "glBindBufferBase" */,
        920 /* "glBindBufferBase" */,
        920 /* "glBindBufferBase" */,
        937 /* "glBindBufferBaseEXT" */,
        957 /* "glBindBufferBaseNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 920 /* "glBindBufferBase" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERBASEEXTPROC
epoxy_glBindBufferBaseEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_transform_feedback,
        Desktop_OpenGL_3_0,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        937 /* "glBindBufferBaseEXT" */,
        920 /* "glBindBufferBase" */,
        920 /* "glBindBufferBase" */,
        920 /* "glBindBufferBase" */,
        920 /* "glBindBufferBase" */,
        957 /* "glBindBufferBaseNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 937 /* "glBindBufferBaseEXT" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERBASENVPROC
epoxy_glBindBufferBaseNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback,
        Desktop_OpenGL_3_0,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        957 /* "glBindBufferBaseNV" */,
        920 /* "glBindBufferBase" */,
        920 /* "glBindBufferBase" */,
        920 /* "glBindBufferBase" */,
        920 /* "glBindBufferBase" */,
        937 /* "glBindBufferBaseEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 957 /* "glBindBufferBaseNV" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFEROFFSETEXTPROC
epoxy_glBindBufferOffsetEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_transform_feedback,
        GL_extension_GL_NV_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        976 /* "glBindBufferOffsetEXT" */,
        998 /* "glBindBufferOffsetNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 976 /* "glBindBufferOffsetEXT" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFEROFFSETNVPROC
epoxy_glBindBufferOffsetNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback,
        GL_extension_GL_EXT_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        998 /* "glBindBufferOffsetNV" */,
        976 /* "glBindBufferOffsetEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 998 /* "glBindBufferOffsetNV" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERRANGEPROC
epoxy_glBindBufferRange_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        GL_extension_GL_NV_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1019 /* "glBindBufferRange" */,
        1019 /* "glBindBufferRange" */,
        1019 /* "glBindBufferRange" */,
        1019 /* "glBindBufferRange" */,
        1037 /* "glBindBufferRangeEXT" */,
        1058 /* "glBindBufferRangeNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1019 /* "glBindBufferRange" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERRANGEEXTPROC
epoxy_glBindBufferRangeEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_transform_feedback,
        Desktop_OpenGL_3_0,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1037 /* "glBindBufferRangeEXT" */,
        1019 /* "glBindBufferRange" */,
        1019 /* "glBindBufferRange" */,
        1019 /* "glBindBufferRange" */,
        1019 /* "glBindBufferRange" */,
        1058 /* "glBindBufferRangeNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1037 /* "glBindBufferRangeEXT" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERRANGENVPROC
epoxy_glBindBufferRangeNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback,
        Desktop_OpenGL_3_0,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1058 /* "glBindBufferRangeNV" */,
        1019 /* "glBindBufferRange" */,
        1019 /* "glBindBufferRange" */,
        1019 /* "glBindBufferRange" */,
        1019 /* "glBindBufferRange" */,
        1037 /* "glBindBufferRangeEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1058 /* "glBindBufferRangeNV" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERSBASEPROC
epoxy_glBindBuffersBase_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_multi_bind,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1078 /* "glBindBuffersBase" */,
        1078 /* "glBindBuffersBase" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1078 /* "glBindBuffersBase" */,
                                providers, entrypoints);
}

static PFNGLBINDBUFFERSRANGEPROC
epoxy_glBindBuffersRange_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_multi_bind,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1096 /* "glBindBuffersRange" */,
        1096 /* "glBindBuffersRange" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1096 /* "glBindBuffersRange" */,
                                providers, entrypoints);
}

static PFNGLBINDFRAGDATALOCATIONPROC
epoxy_glBindFragDataLocation_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1115 /* "glBindFragDataLocation" */,
        1138 /* "glBindFragDataLocationEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1115 /* "glBindFragDataLocation" */,
                                providers, entrypoints);
}

static PFNGLBINDFRAGDATALOCATIONEXTPROC
epoxy_glBindFragDataLocationEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1138 /* "glBindFragDataLocationEXT" */,
        1115 /* "glBindFragDataLocation" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1138 /* "glBindFragDataLocationEXT" */,
                                providers, entrypoints);
}

static PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
epoxy_glBindFragDataLocationIndexed_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_blend_func_extended,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1164 /* "glBindFragDataLocationIndexed" */,
        1164 /* "glBindFragDataLocationIndexed" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1164 /* "glBindFragDataLocationIndexed" */,
                                providers, entrypoints);
}

static PFNGLBINDFRAGMENTSHADERATIPROC
epoxy_glBindFragmentShaderATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 1194 /* glBindFragmentShaderATI */);
}

static PFNGLBINDFRAMEBUFFERPROC
epoxy_glBindFramebuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1218 /* "glBindFramebuffer" */,
        1218 /* "glBindFramebuffer" */,
        1218 /* "glBindFramebuffer" */,
        1236 /* "glBindFramebufferEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1218 /* "glBindFramebuffer" */,
                                providers, entrypoints);
}

static PFNGLBINDFRAMEBUFFEREXTPROC
epoxy_glBindFramebufferEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1236 /* "glBindFramebufferEXT" */,
        1218 /* "glBindFramebuffer" */,
        1218 /* "glBindFramebuffer" */,
        1218 /* "glBindFramebuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1236 /* "glBindFramebufferEXT" */,
                                providers, entrypoints);
}

static PFNGLBINDFRAMEBUFFEROESPROC
epoxy_glBindFramebufferOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 1257 /* glBindFramebufferOES */);
}

static PFNGLBINDIMAGETEXTUREPROC
epoxy_glBindImageTexture_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_shader_image_load_store,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1278 /* "glBindImageTexture" */,
        1278 /* "glBindImageTexture" */,
        1278 /* "glBindImageTexture" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1278 /* "glBindImageTexture" */,
                                providers, entrypoints);
}

static PFNGLBINDIMAGETEXTUREEXTPROC
epoxy_glBindImageTextureEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_shader_image_load_store, 1297 /* glBindImageTextureEXT */);
}

static PFNGLBINDIMAGETEXTURESPROC
epoxy_glBindImageTextures_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_multi_bind,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1319 /* "glBindImageTextures" */,
        1319 /* "glBindImageTextures" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1319 /* "glBindImageTextures" */,
                                providers, entrypoints);
}

static PFNGLBINDLIGHTPARAMETEREXTPROC
epoxy_glBindLightParameterEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 1339 /* glBindLightParameterEXT */);
}

static PFNGLBINDMATERIALPARAMETEREXTPROC
epoxy_glBindMaterialParameterEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 1363 /* glBindMaterialParameterEXT */);
}

static PFNGLBINDMULTITEXTUREEXTPROC
epoxy_glBindMultiTextureEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 1390 /* glBindMultiTextureEXT */);
}

static PFNGLBINDPARAMETEREXTPROC
epoxy_glBindParameterEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 1412 /* glBindParameterEXT */);
}

static PFNGLBINDPROGRAMARBPROC
epoxy_glBindProgramARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1431 /* "glBindProgramARB" */,
        1431 /* "glBindProgramARB" */,
        1448 /* "glBindProgramNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1431 /* "glBindProgramARB" */,
                                providers, entrypoints);
}

static PFNGLBINDPROGRAMNVPROC
epoxy_glBindProgramNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1448 /* "glBindProgramNV" */,
        1431 /* "glBindProgramARB" */,
        1431 /* "glBindProgramARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1448 /* "glBindProgramNV" */,
                                providers, entrypoints);
}

static PFNGLBINDPROGRAMPIPELINEPROC
epoxy_glBindProgramPipeline_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1464 /* "glBindProgramPipeline" */,
        1464 /* "glBindProgramPipeline" */,
        1464 /* "glBindProgramPipeline" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1464 /* "glBindProgramPipeline" */,
                                providers, entrypoints);
}

static PFNGLBINDPROGRAMPIPELINEEXTPROC
epoxy_glBindProgramPipelineEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 1486 /* glBindProgramPipelineEXT */);
}

static PFNGLBINDRENDERBUFFERPROC
epoxy_glBindRenderbuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1511 /* "glBindRenderbuffer" */,
        1511 /* "glBindRenderbuffer" */,
        1511 /* "glBindRenderbuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1511 /* "glBindRenderbuffer" */,
                                providers, entrypoints);
}

static PFNGLBINDRENDERBUFFEREXTPROC
epoxy_glBindRenderbufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_framebuffer_object, 1530 /* glBindRenderbufferEXT */);
}

static PFNGLBINDRENDERBUFFEROESPROC
epoxy_glBindRenderbufferOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 1552 /* glBindRenderbufferOES */);
}

static PFNGLBINDSAMPLERPROC
epoxy_glBindSampler_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1574 /* "glBindSampler" */,
        1574 /* "glBindSampler" */,
        1574 /* "glBindSampler" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1574 /* "glBindSampler" */,
                                providers, entrypoints);
}

static PFNGLBINDSAMPLERSPROC
epoxy_glBindSamplers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_multi_bind,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1588 /* "glBindSamplers" */,
        1588 /* "glBindSamplers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1588 /* "glBindSamplers" */,
                                providers, entrypoints);
}

static PFNGLBINDTEXGENPARAMETEREXTPROC
epoxy_glBindTexGenParameterEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 1603 /* glBindTexGenParameterEXT */);
}

static PFNGLBINDTEXTUREPROC
epoxy_glBindTexture_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_texture_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1628 /* "glBindTexture" */,
        1628 /* "glBindTexture" */,
        1628 /* "glBindTexture" */,
        1642 /* "glBindTextureEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1628 /* "glBindTexture" */,
                                providers, entrypoints);
}

static PFNGLBINDTEXTUREEXTPROC
epoxy_glBindTextureEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_object,
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1642 /* "glBindTextureEXT" */,
        1628 /* "glBindTexture" */,
        1628 /* "glBindTexture" */,
        1628 /* "glBindTexture" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1642 /* "glBindTextureEXT" */,
                                providers, entrypoints);
}

static PFNGLBINDTEXTUREUNITPROC
epoxy_glBindTextureUnit_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1659 /* "glBindTextureUnit" */,
        1659 /* "glBindTextureUnit" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1659 /* "glBindTextureUnit" */,
                                providers, entrypoints);
}

static PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
epoxy_glBindTextureUnitParameterEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 1677 /* glBindTextureUnitParameterEXT */);
}

static PFNGLBINDTEXTURESPROC
epoxy_glBindTextures_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_multi_bind,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1707 /* "glBindTextures" */,
        1707 /* "glBindTextures" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1707 /* "glBindTextures" */,
                                providers, entrypoints);
}

static PFNGLBINDTRANSFORMFEEDBACKPROC
epoxy_glBindTransformFeedback_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1722 /* "glBindTransformFeedback" */,
        1722 /* "glBindTransformFeedback" */,
        1722 /* "glBindTransformFeedback" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1722 /* "glBindTransformFeedback" */,
                                providers, entrypoints);
}

static PFNGLBINDTRANSFORMFEEDBACKNVPROC
epoxy_glBindTransformFeedbackNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback2, 1746 /* glBindTransformFeedbackNV */);
}

static PFNGLBINDVERTEXARRAYPROC
epoxy_glBindVertexArray_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_vertex_array_object,
        GL_extension_GL_OES_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1772 /* "glBindVertexArray" */,
        1772 /* "glBindVertexArray" */,
        1772 /* "glBindVertexArray" */,
        1790 /* "glBindVertexArrayAPPLE" */,
        1813 /* "glBindVertexArrayOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1772 /* "glBindVertexArray" */,
                                providers, entrypoints);
}

static PFNGLBINDVERTEXARRAYAPPLEPROC
epoxy_glBindVertexArrayAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_vertex_array_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1790 /* "glBindVertexArrayAPPLE" */,
        1772 /* "glBindVertexArray" */,
        1772 /* "glBindVertexArray" */,
        1772 /* "glBindVertexArray" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1790 /* "glBindVertexArrayAPPLE" */,
                                providers, entrypoints);
}

static PFNGLBINDVERTEXARRAYOESPROC
epoxy_glBindVertexArrayOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_vertex_array_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1813 /* "glBindVertexArrayOES" */,
        1772 /* "glBindVertexArray" */,
        1772 /* "glBindVertexArray" */,
        1772 /* "glBindVertexArray" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1813 /* "glBindVertexArrayOES" */,
                                providers, entrypoints);
}

static PFNGLBINDVERTEXBUFFERPROC
epoxy_glBindVertexBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_vertex_attrib_binding,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1834 /* "glBindVertexBuffer" */,
        1834 /* "glBindVertexBuffer" */,
        1834 /* "glBindVertexBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1834 /* "glBindVertexBuffer" */,
                                providers, entrypoints);
}

static PFNGLBINDVERTEXBUFFERSPROC
epoxy_glBindVertexBuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_multi_bind,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        1853 /* "glBindVertexBuffers" */,
        1853 /* "glBindVertexBuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 1853 /* "glBindVertexBuffers" */,
                                providers, entrypoints);
}

static PFNGLBINDVERTEXSHADEREXTPROC
epoxy_glBindVertexShaderEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 1873 /* glBindVertexShaderEXT */);
}

static PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
epoxy_glBindVideoCaptureStreamBufferNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 1895 /* glBindVideoCaptureStreamBufferNV */);
}

static PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
epoxy_glBindVideoCaptureStreamTextureNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 1928 /* glBindVideoCaptureStreamTextureNV */);
}

static PFNGLBINORMAL3BEXTPROC
epoxy_glBinormal3bEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 1962 /* glBinormal3bEXT */);
}

static PFNGLBINORMAL3BVEXTPROC
epoxy_glBinormal3bvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 1978 /* glBinormal3bvEXT */);
}

static PFNGLBINORMAL3DEXTPROC
epoxy_glBinormal3dEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 1995 /* glBinormal3dEXT */);
}

static PFNGLBINORMAL3DVEXTPROC
epoxy_glBinormal3dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2011 /* glBinormal3dvEXT */);
}

static PFNGLBINORMAL3FEXTPROC
epoxy_glBinormal3fEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2028 /* glBinormal3fEXT */);
}

static PFNGLBINORMAL3FVEXTPROC
epoxy_glBinormal3fvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2044 /* glBinormal3fvEXT */);
}

static PFNGLBINORMAL3IEXTPROC
epoxy_glBinormal3iEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2061 /* glBinormal3iEXT */);
}

static PFNGLBINORMAL3IVEXTPROC
epoxy_glBinormal3ivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2077 /* glBinormal3ivEXT */);
}

static PFNGLBINORMAL3SEXTPROC
epoxy_glBinormal3sEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2094 /* glBinormal3sEXT */);
}

static PFNGLBINORMAL3SVEXTPROC
epoxy_glBinormal3svEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2110 /* glBinormal3svEXT */);
}

static PFNGLBINORMALPOINTEREXTPROC
epoxy_glBinormalPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2127 /* glBinormalPointerEXT */);
}

static PFNGLBITMAPPROC
epoxy_glBitmap_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 2148 /* glBitmap */);
}

static PFNGLBITMAPXOESPROC
epoxy_glBitmapxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 2157 /* glBitmapxOES */);
}

static PFNGLBLENDBARRIERKHRPROC
epoxy_glBlendBarrierKHR_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_KHR_blend_equation_advanced, 2170 /* glBlendBarrierKHR */);
}

static PFNGLBLENDBARRIERNVPROC
epoxy_glBlendBarrierNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_blend_equation_advanced, 2188 /* glBlendBarrierNV */);
}

static PFNGLBLENDCOLORPROC
epoxy_glBlendColor_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_imaging,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_blend_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2205 /* "glBlendColor" */,
        2205 /* "glBlendColor" */,
        2205 /* "glBlendColor" */,
        2218 /* "glBlendColorEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2205 /* "glBlendColor" */,
                                providers, entrypoints);
}

static PFNGLBLENDCOLOREXTPROC
epoxy_glBlendColorEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_blend_color,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_imaging,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2218 /* "glBlendColorEXT" */,
        2205 /* "glBlendColor" */,
        2205 /* "glBlendColor" */,
        2205 /* "glBlendColor" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2218 /* "glBlendColorEXT" */,
                                providers, entrypoints);
}

static PFNGLBLENDCOLORXOESPROC
epoxy_glBlendColorxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 2234 /* glBlendColorxOES */);
}

static PFNGLBLENDEQUATIONPROC
epoxy_glBlendEquation_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_imaging,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_blend_minmax,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2251 /* "glBlendEquation" */,
        2251 /* "glBlendEquation" */,
        2251 /* "glBlendEquation" */,
        2267 /* "glBlendEquationEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2251 /* "glBlendEquation" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONEXTPROC
epoxy_glBlendEquationEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_blend_minmax,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_imaging,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2267 /* "glBlendEquationEXT" */,
        2251 /* "glBlendEquation" */,
        2251 /* "glBlendEquation" */,
        2251 /* "glBlendEquation" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2267 /* "glBlendEquationEXT" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONINDEXEDAMDPROC
epoxy_glBlendEquationIndexedAMD_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2286 /* "glBlendEquationIndexedAMD" */,
        2552 /* "glBlendEquationi" */,
        2569 /* "glBlendEquationiARB" */,
        2589 /* "glBlendEquationiEXT" */,
        2609 /* "glBlendEquationiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2286 /* "glBlendEquationIndexedAMD" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONOESPROC
epoxy_glBlendEquationOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_blend_subtract, 2312 /* glBlendEquationOES */);
}

static PFNGLBLENDEQUATIONSEPARATEPROC
epoxy_glBlendEquationSeparate_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_blend_equation_separate,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2331 /* "glBlendEquationSeparate" */,
        2331 /* "glBlendEquationSeparate" */,
        2355 /* "glBlendEquationSeparateEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2331 /* "glBlendEquationSeparate" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONSEPARATEEXTPROC
epoxy_glBlendEquationSeparateEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_blend_equation_separate,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2355 /* "glBlendEquationSeparateEXT" */,
        2331 /* "glBlendEquationSeparate" */,
        2331 /* "glBlendEquationSeparate" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2355 /* "glBlendEquationSeparateEXT" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
epoxy_glBlendEquationSeparateIndexedAMD_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2382 /* "glBlendEquationSeparateIndexedAMD" */,
        2443 /* "glBlendEquationSeparatei" */,
        2468 /* "glBlendEquationSeparateiARB" */,
        2496 /* "glBlendEquationSeparateiEXT" */,
        2524 /* "glBlendEquationSeparateiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2382 /* "glBlendEquationSeparateIndexedAMD" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONSEPARATEOESPROC
epoxy_glBlendEquationSeparateOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_blend_equation_separate, 2416 /* glBlendEquationSeparateOES */);
}

static PFNGLBLENDEQUATIONSEPARATEIPROC
epoxy_glBlendEquationSeparatei_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_AMD_draw_buffers_blend,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2443 /* "glBlendEquationSeparatei" */,
        2382 /* "glBlendEquationSeparateIndexedAMD" */,
        2468 /* "glBlendEquationSeparateiARB" */,
        2496 /* "glBlendEquationSeparateiEXT" */,
        2524 /* "glBlendEquationSeparateiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2443 /* "glBlendEquationSeparatei" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONSEPARATEIARBPROC
epoxy_glBlendEquationSeparateiARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2468 /* "glBlendEquationSeparateiARB" */,
        2382 /* "glBlendEquationSeparateIndexedAMD" */,
        2443 /* "glBlendEquationSeparatei" */,
        2496 /* "glBlendEquationSeparateiEXT" */,
        2524 /* "glBlendEquationSeparateiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2468 /* "glBlendEquationSeparateiARB" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONSEPARATEIEXTPROC
epoxy_glBlendEquationSeparateiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2496 /* "glBlendEquationSeparateiEXT" */,
        2382 /* "glBlendEquationSeparateIndexedAMD" */,
        2443 /* "glBlendEquationSeparatei" */,
        2468 /* "glBlendEquationSeparateiARB" */,
        2524 /* "glBlendEquationSeparateiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2496 /* "glBlendEquationSeparateiEXT" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONSEPARATEIOESPROC
epoxy_glBlendEquationSeparateiOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_buffers_indexed,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2524 /* "glBlendEquationSeparateiOES" */,
        2382 /* "glBlendEquationSeparateIndexedAMD" */,
        2443 /* "glBlendEquationSeparatei" */,
        2468 /* "glBlendEquationSeparateiARB" */,
        2496 /* "glBlendEquationSeparateiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2524 /* "glBlendEquationSeparateiOES" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONIPROC
epoxy_glBlendEquationi_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_AMD_draw_buffers_blend,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2552 /* "glBlendEquationi" */,
        2286 /* "glBlendEquationIndexedAMD" */,
        2569 /* "glBlendEquationiARB" */,
        2589 /* "glBlendEquationiEXT" */,
        2609 /* "glBlendEquationiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2552 /* "glBlendEquationi" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONIARBPROC
epoxy_glBlendEquationiARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2569 /* "glBlendEquationiARB" */,
        2286 /* "glBlendEquationIndexedAMD" */,
        2552 /* "glBlendEquationi" */,
        2589 /* "glBlendEquationiEXT" */,
        2609 /* "glBlendEquationiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2569 /* "glBlendEquationiARB" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONIEXTPROC
epoxy_glBlendEquationiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2589 /* "glBlendEquationiEXT" */,
        2286 /* "glBlendEquationIndexedAMD" */,
        2552 /* "glBlendEquationi" */,
        2569 /* "glBlendEquationiARB" */,
        2609 /* "glBlendEquationiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2589 /* "glBlendEquationiEXT" */,
                                providers, entrypoints);
}

static PFNGLBLENDEQUATIONIOESPROC
epoxy_glBlendEquationiOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_buffers_indexed,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2609 /* "glBlendEquationiOES" */,
        2286 /* "glBlendEquationIndexedAMD" */,
        2552 /* "glBlendEquationi" */,
        2569 /* "glBlendEquationiARB" */,
        2589 /* "glBlendEquationiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2609 /* "glBlendEquationiOES" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCPROC
epoxy_glBlendFunc_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2629 /* "glBlendFunc" */,
        2629 /* "glBlendFunc" */,
        2629 /* "glBlendFunc" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2629 /* "glBlendFunc" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCINDEXEDAMDPROC
epoxy_glBlendFuncIndexedAMD_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2641 /* "glBlendFuncIndexedAMD" */,
        2876 /* "glBlendFunci" */,
        2889 /* "glBlendFunciARB" */,
        2905 /* "glBlendFunciEXT" */,
        2921 /* "glBlendFunciOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2641 /* "glBlendFuncIndexedAMD" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCSEPARATEPROC
epoxy_glBlendFuncSeparate_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_blend_func_separate,
        GL_extension_GL_INGR_blend_func_separate,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2663 /* "glBlendFuncSeparate" */,
        2663 /* "glBlendFuncSeparate" */,
        2683 /* "glBlendFuncSeparateEXT" */,
        2706 /* "glBlendFuncSeparateINGR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2663 /* "glBlendFuncSeparate" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCSEPARATEEXTPROC
epoxy_glBlendFuncSeparateEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_blend_func_separate,
        Desktop_OpenGL_1_4,
        OpenGL_ES_2_0,
        GL_extension_GL_INGR_blend_func_separate,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2683 /* "glBlendFuncSeparateEXT" */,
        2663 /* "glBlendFuncSeparate" */,
        2663 /* "glBlendFuncSeparate" */,
        2706 /* "glBlendFuncSeparateINGR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2683 /* "glBlendFuncSeparateEXT" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCSEPARATEINGRPROC
epoxy_glBlendFuncSeparateINGR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_INGR_blend_func_separate,
        Desktop_OpenGL_1_4,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_blend_func_separate,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2706 /* "glBlendFuncSeparateINGR" */,
        2663 /* "glBlendFuncSeparate" */,
        2663 /* "glBlendFuncSeparate" */,
        2683 /* "glBlendFuncSeparateEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2706 /* "glBlendFuncSeparateINGR" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
epoxy_glBlendFuncSeparateIndexedAMD_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2730 /* "glBlendFuncSeparateIndexedAMD" */,
        2783 /* "glBlendFuncSeparatei" */,
        2804 /* "glBlendFuncSeparateiARB" */,
        2828 /* "glBlendFuncSeparateiEXT" */,
        2852 /* "glBlendFuncSeparateiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2730 /* "glBlendFuncSeparateIndexedAMD" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCSEPARATEOESPROC
epoxy_glBlendFuncSeparateOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_blend_func_separate, 2760 /* glBlendFuncSeparateOES */);
}

static PFNGLBLENDFUNCSEPARATEIPROC
epoxy_glBlendFuncSeparatei_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_AMD_draw_buffers_blend,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2783 /* "glBlendFuncSeparatei" */,
        2730 /* "glBlendFuncSeparateIndexedAMD" */,
        2804 /* "glBlendFuncSeparateiARB" */,
        2828 /* "glBlendFuncSeparateiEXT" */,
        2852 /* "glBlendFuncSeparateiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2783 /* "glBlendFuncSeparatei" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCSEPARATEIARBPROC
epoxy_glBlendFuncSeparateiARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2804 /* "glBlendFuncSeparateiARB" */,
        2730 /* "glBlendFuncSeparateIndexedAMD" */,
        2783 /* "glBlendFuncSeparatei" */,
        2828 /* "glBlendFuncSeparateiEXT" */,
        2852 /* "glBlendFuncSeparateiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2804 /* "glBlendFuncSeparateiARB" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCSEPARATEIEXTPROC
epoxy_glBlendFuncSeparateiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2828 /* "glBlendFuncSeparateiEXT" */,
        2730 /* "glBlendFuncSeparateIndexedAMD" */,
        2783 /* "glBlendFuncSeparatei" */,
        2804 /* "glBlendFuncSeparateiARB" */,
        2852 /* "glBlendFuncSeparateiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2828 /* "glBlendFuncSeparateiEXT" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCSEPARATEIOESPROC
epoxy_glBlendFuncSeparateiOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_buffers_indexed,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2852 /* "glBlendFuncSeparateiOES" */,
        2730 /* "glBlendFuncSeparateIndexedAMD" */,
        2783 /* "glBlendFuncSeparatei" */,
        2804 /* "glBlendFuncSeparateiARB" */,
        2828 /* "glBlendFuncSeparateiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2852 /* "glBlendFuncSeparateiOES" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCIPROC
epoxy_glBlendFunci_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_AMD_draw_buffers_blend,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2876 /* "glBlendFunci" */,
        2641 /* "glBlendFuncIndexedAMD" */,
        2889 /* "glBlendFunciARB" */,
        2905 /* "glBlendFunciEXT" */,
        2921 /* "glBlendFunciOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2876 /* "glBlendFunci" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCIARBPROC
epoxy_glBlendFunciARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2889 /* "glBlendFunciARB" */,
        2641 /* "glBlendFuncIndexedAMD" */,
        2876 /* "glBlendFunci" */,
        2905 /* "glBlendFunciEXT" */,
        2921 /* "glBlendFunciOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2889 /* "glBlendFunciARB" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCIEXTPROC
epoxy_glBlendFunciEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2905 /* "glBlendFunciEXT" */,
        2641 /* "glBlendFuncIndexedAMD" */,
        2876 /* "glBlendFunci" */,
        2889 /* "glBlendFunciARB" */,
        2921 /* "glBlendFunciOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2905 /* "glBlendFunciEXT" */,
                                providers, entrypoints);
}

static PFNGLBLENDFUNCIOESPROC
epoxy_glBlendFunciOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_buffers_indexed,
        GL_extension_GL_AMD_draw_buffers_blend,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_buffers_blend,
        GL_extension_GL_EXT_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2921 /* "glBlendFunciOES" */,
        2641 /* "glBlendFuncIndexedAMD" */,
        2876 /* "glBlendFunci" */,
        2889 /* "glBlendFunciARB" */,
        2905 /* "glBlendFunciEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2921 /* "glBlendFunciOES" */,
                                providers, entrypoints);
}

static PFNGLBLENDPARAMETERINVPROC
epoxy_glBlendParameteriNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_blend_equation_advanced, 2937 /* glBlendParameteriNV */);
}

static PFNGLBLITFRAMEBUFFERPROC
epoxy_glBlitFramebuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_framebuffer_blit,
        GL_extension_GL_NV_framebuffer_blit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2957 /* "glBlitFramebuffer" */,
        2957 /* "glBlitFramebuffer" */,
        2957 /* "glBlitFramebuffer" */,
        2998 /* "glBlitFramebufferEXT" */,
        3019 /* "glBlitFramebufferNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2957 /* "glBlitFramebuffer" */,
                                providers, entrypoints);
}

static PFNGLBLITFRAMEBUFFERANGLEPROC
epoxy_glBlitFramebufferANGLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ANGLE_framebuffer_blit, 2975 /* glBlitFramebufferANGLE */);
}

static PFNGLBLITFRAMEBUFFEREXTPROC
epoxy_glBlitFramebufferEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_blit,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_framebuffer_blit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        2998 /* "glBlitFramebufferEXT" */,
        2957 /* "glBlitFramebuffer" */,
        2957 /* "glBlitFramebuffer" */,
        2957 /* "glBlitFramebuffer" */,
        3019 /* "glBlitFramebufferNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 2998 /* "glBlitFramebufferEXT" */,
                                providers, entrypoints);
}

static PFNGLBLITFRAMEBUFFERNVPROC
epoxy_glBlitFramebufferNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_framebuffer_blit,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_framebuffer_blit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3019 /* "glBlitFramebufferNV" */,
        2957 /* "glBlitFramebuffer" */,
        2957 /* "glBlitFramebuffer" */,
        2957 /* "glBlitFramebuffer" */,
        2998 /* "glBlitFramebufferEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3019 /* "glBlitFramebufferNV" */,
                                providers, entrypoints);
}

static PFNGLBLITNAMEDFRAMEBUFFERPROC
epoxy_glBlitNamedFramebuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3039 /* "glBlitNamedFramebuffer" */,
        3039 /* "glBlitNamedFramebuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3039 /* "glBlitNamedFramebuffer" */,
                                providers, entrypoints);
}

static PFNGLBUFFERADDRESSRANGENVPROC
epoxy_glBufferAddressRangeNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 3062 /* glBufferAddressRangeNV */);
}

static PFNGLBUFFERDATAPROC
epoxy_glBufferData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3085 /* "glBufferData" */,
        3085 /* "glBufferData" */,
        3085 /* "glBufferData" */,
        3098 /* "glBufferDataARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3085 /* "glBufferData" */,
                                providers, entrypoints);
}

static PFNGLBUFFERDATAARBPROC
epoxy_glBufferDataARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3098 /* "glBufferDataARB" */,
        3085 /* "glBufferData" */,
        3085 /* "glBufferData" */,
        3085 /* "glBufferData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3098 /* "glBufferDataARB" */,
                                providers, entrypoints);
}

static PFNGLBUFFERPAGECOMMITMENTARBPROC
epoxy_glBufferPageCommitmentARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_sparse_buffer, 3114 /* glBufferPageCommitmentARB */);
}

static PFNGLBUFFERPARAMETERIAPPLEPROC
epoxy_glBufferParameteriAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_flush_buffer_range, 3140 /* glBufferParameteriAPPLE */);
}

static PFNGLBUFFERSTORAGEPROC
epoxy_glBufferStorage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_buffer_storage,
        GL_extension_GL_EXT_buffer_storage,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3164 /* "glBufferStorage" */,
        3164 /* "glBufferStorage" */,
        3180 /* "glBufferStorageEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3164 /* "glBufferStorage" */,
                                providers, entrypoints);
}

static PFNGLBUFFERSTORAGEEXTPROC
epoxy_glBufferStorageEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_buffer_storage,
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_buffer_storage,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3180 /* "glBufferStorageEXT" */,
        3164 /* "glBufferStorage" */,
        3164 /* "glBufferStorage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3180 /* "glBufferStorageEXT" */,
                                providers, entrypoints);
}

static PFNGLBUFFERSUBDATAPROC
epoxy_glBufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3199 /* "glBufferSubData" */,
        3199 /* "glBufferSubData" */,
        3199 /* "glBufferSubData" */,
        3215 /* "glBufferSubDataARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3199 /* "glBufferSubData" */,
                                providers, entrypoints);
}

static PFNGLBUFFERSUBDATAARBPROC
epoxy_glBufferSubDataARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3215 /* "glBufferSubDataARB" */,
        3199 /* "glBufferSubData" */,
        3199 /* "glBufferSubData" */,
        3199 /* "glBufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3215 /* "glBufferSubDataARB" */,
                                providers, entrypoints);
}

static PFNGLCALLCOMMANDLISTNVPROC
epoxy_glCallCommandListNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 3234 /* glCallCommandListNV */);
}

static PFNGLCALLLISTPROC
epoxy_glCallList_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 3254 /* glCallList */);
}

static PFNGLCALLLISTSPROC
epoxy_glCallLists_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 3265 /* glCallLists */);
}

static PFNGLCHECKFRAMEBUFFERSTATUSPROC
epoxy_glCheckFramebufferStatus_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3277 /* "glCheckFramebufferStatus" */,
        3277 /* "glCheckFramebufferStatus" */,
        3277 /* "glCheckFramebufferStatus" */,
        3302 /* "glCheckFramebufferStatusEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3277 /* "glCheckFramebufferStatus" */,
                                providers, entrypoints);
}

static PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
epoxy_glCheckFramebufferStatusEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3302 /* "glCheckFramebufferStatusEXT" */,
        3277 /* "glCheckFramebufferStatus" */,
        3277 /* "glCheckFramebufferStatus" */,
        3277 /* "glCheckFramebufferStatus" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3302 /* "glCheckFramebufferStatusEXT" */,
                                providers, entrypoints);
}

static PFNGLCHECKFRAMEBUFFERSTATUSOESPROC
epoxy_glCheckFramebufferStatusOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 3330 /* glCheckFramebufferStatusOES */);
}

static PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC
epoxy_glCheckNamedFramebufferStatus_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3358 /* "glCheckNamedFramebufferStatus" */,
        3358 /* "glCheckNamedFramebufferStatus" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3358 /* "glCheckNamedFramebufferStatus" */,
                                providers, entrypoints);
}

static PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
epoxy_glCheckNamedFramebufferStatusEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 3388 /* glCheckNamedFramebufferStatusEXT */);
}

static PFNGLCLAMPCOLORPROC
epoxy_glClampColor_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_color_buffer_float,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3421 /* "glClampColor" */,
        3434 /* "glClampColorARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3421 /* "glClampColor" */,
                                providers, entrypoints);
}

static PFNGLCLAMPCOLORARBPROC
epoxy_glClampColorARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_color_buffer_float,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3434 /* "glClampColorARB" */,
        3421 /* "glClampColor" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3434 /* "glClampColorARB" */,
                                providers, entrypoints);
}

static PFNGLCLEARPROC
epoxy_glClear_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3450 /* "glClear" */,
        3450 /* "glClear" */,
        3450 /* "glClear" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3450 /* "glClear" */,
                                providers, entrypoints);
}

static PFNGLCLEARACCUMPROC
epoxy_glClearAccum_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 3458 /* glClearAccum */);
}

static PFNGLCLEARACCUMXOESPROC
epoxy_glClearAccumxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 3471 /* glClearAccumxOES */);
}

static PFNGLCLEARBUFFERDATAPROC
epoxy_glClearBufferData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_clear_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3488 /* "glClearBufferData" */,
        3488 /* "glClearBufferData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3488 /* "glClearBufferData" */,
                                providers, entrypoints);
}

static PFNGLCLEARBUFFERSUBDATAPROC
epoxy_glClearBufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_clear_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3506 /* "glClearBufferSubData" */,
        3506 /* "glClearBufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3506 /* "glClearBufferSubData" */,
                                providers, entrypoints);
}

static PFNGLCLEARBUFFERFIPROC
epoxy_glClearBufferfi_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3527 /* "glClearBufferfi" */,
        3527 /* "glClearBufferfi" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3527 /* "glClearBufferfi" */,
                                providers, entrypoints);
}

static PFNGLCLEARBUFFERFVPROC
epoxy_glClearBufferfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3543 /* "glClearBufferfv" */,
        3543 /* "glClearBufferfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3543 /* "glClearBufferfv" */,
                                providers, entrypoints);
}

static PFNGLCLEARBUFFERIVPROC
epoxy_glClearBufferiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3559 /* "glClearBufferiv" */,
        3559 /* "glClearBufferiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3559 /* "glClearBufferiv" */,
                                providers, entrypoints);
}

static PFNGLCLEARBUFFERUIVPROC
epoxy_glClearBufferuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3575 /* "glClearBufferuiv" */,
        3575 /* "glClearBufferuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3575 /* "glClearBufferuiv" */,
                                providers, entrypoints);
}

static PFNGLCLEARCOLORPROC
epoxy_glClearColor_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3592 /* "glClearColor" */,
        3592 /* "glClearColor" */,
        3592 /* "glClearColor" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3592 /* "glClearColor" */,
                                providers, entrypoints);
}

static PFNGLCLEARCOLORIIEXTPROC
epoxy_glClearColorIiEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_texture_integer, 3605 /* glClearColorIiEXT */);
}

static PFNGLCLEARCOLORIUIEXTPROC
epoxy_glClearColorIuiEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_texture_integer, 3623 /* glClearColorIuiEXT */);
}

static PFNGLCLEARCOLORXPROC
epoxy_glClearColorx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 3642 /* glClearColorx */);
}

static PFNGLCLEARCOLORXOESPROC
epoxy_glClearColorxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 3656 /* glClearColorxOES */);
}

static PFNGLCLEARDEPTHPROC
epoxy_glClearDepth_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 3673 /* glClearDepth */);
}

static PFNGLCLEARDEPTHDNVPROC
epoxy_glClearDepthdNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_depth_buffer_float, 3686 /* glClearDepthdNV */);
}

static PFNGLCLEARDEPTHFPROC
epoxy_glClearDepthf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_ES2_compatibility,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_OES_single_precision,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3702 /* "glClearDepthf" */,
        3702 /* "glClearDepthf" */,
        3702 /* "glClearDepthf" */,
        3702 /* "glClearDepthf" */,
        3716 /* "glClearDepthfOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3702 /* "glClearDepthf" */,
                                providers, entrypoints);
}

static PFNGLCLEARDEPTHFOESPROC
epoxy_glClearDepthfOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_single_precision,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_ES2_compatibility,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3716 /* "glClearDepthfOES" */,
        3702 /* "glClearDepthf" */,
        3702 /* "glClearDepthf" */,
        3702 /* "glClearDepthf" */,
        3702 /* "glClearDepthf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3716 /* "glClearDepthfOES" */,
                                providers, entrypoints);
}

static PFNGLCLEARDEPTHXPROC
epoxy_glClearDepthx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 3733 /* glClearDepthx */);
}

static PFNGLCLEARDEPTHXOESPROC
epoxy_glClearDepthxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 3747 /* glClearDepthxOES */);
}

static PFNGLCLEARINDEXPROC
epoxy_glClearIndex_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 3764 /* glClearIndex */);
}

static PFNGLCLEARNAMEDBUFFERDATAPROC
epoxy_glClearNamedBufferData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3777 /* "glClearNamedBufferData" */,
        3777 /* "glClearNamedBufferData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3777 /* "glClearNamedBufferData" */,
                                providers, entrypoints);
}

static PFNGLCLEARNAMEDBUFFERDATAEXTPROC
epoxy_glClearNamedBufferDataEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 3800 /* glClearNamedBufferDataEXT */);
}

static PFNGLCLEARNAMEDBUFFERSUBDATAPROC
epoxy_glClearNamedBufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3826 /* "glClearNamedBufferSubData" */,
        3826 /* "glClearNamedBufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3826 /* "glClearNamedBufferSubData" */,
                                providers, entrypoints);
}

static PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC
epoxy_glClearNamedBufferSubDataEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 3852 /* glClearNamedBufferSubDataEXT */);
}

static PFNGLCLEARNAMEDFRAMEBUFFERFIPROC
epoxy_glClearNamedFramebufferfi_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3881 /* "glClearNamedFramebufferfi" */,
        3881 /* "glClearNamedFramebufferfi" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3881 /* "glClearNamedFramebufferfi" */,
                                providers, entrypoints);
}

static PFNGLCLEARNAMEDFRAMEBUFFERFVPROC
epoxy_glClearNamedFramebufferfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3907 /* "glClearNamedFramebufferfv" */,
        3907 /* "glClearNamedFramebufferfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3907 /* "glClearNamedFramebufferfv" */,
                                providers, entrypoints);
}

static PFNGLCLEARNAMEDFRAMEBUFFERIVPROC
epoxy_glClearNamedFramebufferiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3933 /* "glClearNamedFramebufferiv" */,
        3933 /* "glClearNamedFramebufferiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3933 /* "glClearNamedFramebufferiv" */,
                                providers, entrypoints);
}

static PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC
epoxy_glClearNamedFramebufferuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3959 /* "glClearNamedFramebufferuiv" */,
        3959 /* "glClearNamedFramebufferuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3959 /* "glClearNamedFramebufferuiv" */,
                                providers, entrypoints);
}

static PFNGLCLEARSTENCILPROC
epoxy_glClearStencil_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        3986 /* "glClearStencil" */,
        3986 /* "glClearStencil" */,
        3986 /* "glClearStencil" */,
    };
    return gl_provider_resolver(entrypoint_strings + 3986 /* "glClearStencil" */,
                                providers, entrypoints);
}

static PFNGLCLEARTEXIMAGEPROC
epoxy_glClearTexImage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_clear_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        4001 /* "glClearTexImage" */,
        4001 /* "glClearTexImage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 4001 /* "glClearTexImage" */,
                                providers, entrypoints);
}

static PFNGLCLEARTEXSUBIMAGEPROC
epoxy_glClearTexSubImage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_4,
        GL_extension_GL_ARB_clear_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        4017 /* "glClearTexSubImage" */,
        4017 /* "glClearTexSubImage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 4017 /* "glClearTexSubImage" */,
                                providers, entrypoints);
}

static PFNGLCLIENTACTIVETEXTUREPROC
epoxy_glClientActiveTexture_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        4036 /* "glClientActiveTexture" */,
        4036 /* "glClientActiveTexture" */,
        4058 /* "glClientActiveTextureARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 4036 /* "glClientActiveTexture" */,
                                providers, entrypoints);
}

static PFNGLCLIENTACTIVETEXTUREARBPROC
epoxy_glClientActiveTextureARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        4058 /* "glClientActiveTextureARB" */,
        4036 /* "glClientActiveTexture" */,
        4036 /* "glClientActiveTexture" */,
    };
    return gl_provider_resolver(entrypoint_strings + 4058 /* "glClientActiveTextureARB" */,
                                providers, entrypoints);
}

static PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
epoxy_glClientActiveVertexStreamATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 4083 /* glClientActiveVertexStreamATI */);
}

static PFNGLCLIENTATTRIBDEFAULTEXTPROC
epoxy_glClientAttribDefaultEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 4113 /* glClientAttribDefaultEXT */);
}

static PFNGLCLIENTWAITSYNCPROC
epoxy_glClientWaitSync_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_sync,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        4138 /* "glClientWaitSync" */,
        4138 /* "glClientWaitSync" */,
        4138 /* "glClientWaitSync" */,
        4155 /* "glClientWaitSyncAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 4138 /* "glClientWaitSync" */,
                                providers, entrypoints);
}

static PFNGLCLIENTWAITSYNCAPPLEPROC
epoxy_glClientWaitSyncAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_sync,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        4155 /* "glClientWaitSyncAPPLE" */,
        4138 /* "glClientWaitSync" */,
        4138 /* "glClientWaitSync" */,
        4138 /* "glClientWaitSync" */,
    };
    return gl_provider_resolver(entrypoint_strings + 4155 /* "glClientWaitSyncAPPLE" */,
                                providers, entrypoints);
}

static PFNGLCLIPCONTROLPROC
epoxy_glClipControl_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_clip_control,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        4177 /* "glClipControl" */,
        4177 /* "glClipControl" */,
    };
    return gl_provider_resolver(entrypoint_strings + 4177 /* "glClipControl" */,
                                providers, entrypoints);
}

static PFNGLCLIPPLANEPROC
epoxy_glClipPlane_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4191 /* glClipPlane */);
}

static PFNGLCLIPPLANEFPROC
epoxy_glClipPlanef_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 4203 /* glClipPlanef */);
}

static PFNGLCLIPPLANEFIMGPROC
epoxy_glClipPlanefIMG_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IMG_user_clip_plane, 4216 /* glClipPlanefIMG */);
}

static PFNGLCLIPPLANEFOESPROC
epoxy_glClipPlanefOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_single_precision, 4232 /* glClipPlanefOES */);
}

static PFNGLCLIPPLANEXPROC
epoxy_glClipPlanex_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 4248 /* glClipPlanex */);
}

static PFNGLCLIPPLANEXIMGPROC
epoxy_glClipPlanexIMG_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IMG_user_clip_plane, 4261 /* glClipPlanexIMG */);
}

static PFNGLCLIPPLANEXOESPROC
epoxy_glClipPlanexOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 4277 /* glClipPlanexOES */);
}

static PFNGLCOLOR3BPROC
epoxy_glColor3b_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4293 /* glColor3b */);
}

static PFNGLCOLOR3BVPROC
epoxy_glColor3bv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4303 /* glColor3bv */);
}

static PFNGLCOLOR3DPROC
epoxy_glColor3d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4314 /* glColor3d */);
}

static PFNGLCOLOR3DVPROC
epoxy_glColor3dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4324 /* glColor3dv */);
}

static PFNGLCOLOR3FPROC
epoxy_glColor3f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4335 /* glColor3f */);
}

static PFNGLCOLOR3FVERTEX3FSUNPROC
epoxy_glColor3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4345 /* glColor3fVertex3fSUN */);
}

static PFNGLCOLOR3FVERTEX3FVSUNPROC
epoxy_glColor3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4366 /* glColor3fVertex3fvSUN */);
}

static PFNGLCOLOR3FVPROC
epoxy_glColor3fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4388 /* glColor3fv */);
}

static PFNGLCOLOR3HNVPROC
epoxy_glColor3hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 4399 /* glColor3hNV */);
}

static PFNGLCOLOR3HVNVPROC
epoxy_glColor3hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 4411 /* glColor3hvNV */);
}

static PFNGLCOLOR3IPROC
epoxy_glColor3i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4424 /* glColor3i */);
}

static PFNGLCOLOR3IVPROC
epoxy_glColor3iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4434 /* glColor3iv */);
}

static PFNGLCOLOR3SPROC
epoxy_glColor3s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4445 /* glColor3s */);
}

static PFNGLCOLOR3SVPROC
epoxy_glColor3sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4455 /* glColor3sv */);
}

static PFNGLCOLOR3UBPROC
epoxy_glColor3ub_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4466 /* glColor3ub */);
}

static PFNGLCOLOR3UBVPROC
epoxy_glColor3ubv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4477 /* glColor3ubv */);
}

static PFNGLCOLOR3UIPROC
epoxy_glColor3ui_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4489 /* glColor3ui */);
}

static PFNGLCOLOR3UIVPROC
epoxy_glColor3uiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4500 /* glColor3uiv */);
}

static PFNGLCOLOR3USPROC
epoxy_glColor3us_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4512 /* glColor3us */);
}

static PFNGLCOLOR3USVPROC
epoxy_glColor3usv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4523 /* glColor3usv */);
}

static PFNGLCOLOR3XOESPROC
epoxy_glColor3xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 4535 /* glColor3xOES */);
}

static PFNGLCOLOR3XVOESPROC
epoxy_glColor3xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 4548 /* glColor3xvOES */);
}

static PFNGLCOLOR4BPROC
epoxy_glColor4b_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4562 /* glColor4b */);
}

static PFNGLCOLOR4BVPROC
epoxy_glColor4bv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4572 /* glColor4bv */);
}

static PFNGLCOLOR4DPROC
epoxy_glColor4d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4583 /* glColor4d */);
}

static PFNGLCOLOR4DVPROC
epoxy_glColor4dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4593 /* glColor4dv */);
}

static PFNGLCOLOR4FPROC
epoxy_glColor4f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        4604 /* "glColor4f" */,
        4604 /* "glColor4f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 4604 /* "glColor4f" */,
                                providers, entrypoints);
}

static PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
epoxy_glColor4fNormal3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4614 /* glColor4fNormal3fVertex3fSUN */);
}

static PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
epoxy_glColor4fNormal3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4643 /* glColor4fNormal3fVertex3fvSUN */);
}

static PFNGLCOLOR4FVPROC
epoxy_glColor4fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4673 /* glColor4fv */);
}

static PFNGLCOLOR4HNVPROC
epoxy_glColor4hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 4684 /* glColor4hNV */);
}

static PFNGLCOLOR4HVNVPROC
epoxy_glColor4hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 4696 /* glColor4hvNV */);
}

static PFNGLCOLOR4IPROC
epoxy_glColor4i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4709 /* glColor4i */);
}

static PFNGLCOLOR4IVPROC
epoxy_glColor4iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4719 /* glColor4iv */);
}

static PFNGLCOLOR4SPROC
epoxy_glColor4s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4730 /* glColor4s */);
}

static PFNGLCOLOR4SVPROC
epoxy_glColor4sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4740 /* glColor4sv */);
}

static PFNGLCOLOR4UBPROC
epoxy_glColor4ub_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        4751 /* "glColor4ub" */,
        4751 /* "glColor4ub" */,
    };
    return gl_provider_resolver(entrypoint_strings + 4751 /* "glColor4ub" */,
                                providers, entrypoints);
}

static PFNGLCOLOR4UBVERTEX2FSUNPROC
epoxy_glColor4ubVertex2fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4762 /* glColor4ubVertex2fSUN */);
}

static PFNGLCOLOR4UBVERTEX2FVSUNPROC
epoxy_glColor4ubVertex2fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4784 /* glColor4ubVertex2fvSUN */);
}

static PFNGLCOLOR4UBVERTEX3FSUNPROC
epoxy_glColor4ubVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4807 /* glColor4ubVertex3fSUN */);
}

static PFNGLCOLOR4UBVERTEX3FVSUNPROC
epoxy_glColor4ubVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4829 /* glColor4ubVertex3fvSUN */);
}

static PFNGLCOLOR4UBVPROC
epoxy_glColor4ubv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4852 /* glColor4ubv */);
}

static PFNGLCOLOR4UIPROC
epoxy_glColor4ui_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4864 /* glColor4ui */);
}

static PFNGLCOLOR4UIVPROC
epoxy_glColor4uiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4875 /* glColor4uiv */);
}

static PFNGLCOLOR4USPROC
epoxy_glColor4us_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4887 /* glColor4us */);
}

static PFNGLCOLOR4USVPROC
epoxy_glColor4usv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 4898 /* glColor4usv */);
}

static PFNGLCOLOR4XPROC
epoxy_glColor4x_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 4910 /* glColor4x */);
}

static PFNGLCOLOR4XOESPROC
epoxy_glColor4xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 4920 /* glColor4xOES */);
}

static PFNGLCOLOR4XVOESPROC
epoxy_glColor4xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 4933 /* glColor4xvOES */);
}

static PFNGLCOLORFORMATNVPROC
epoxy_glColorFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 4947 /* glColorFormatNV */);
}

static PFNGLCOLORFRAGMENTOP1ATIPROC
epoxy_glColorFragmentOp1ATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 4963 /* glColorFragmentOp1ATI */);
}

static PFNGLCOLORFRAGMENTOP2ATIPROC
epoxy_glColorFragmentOp2ATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 4985 /* glColorFragmentOp2ATI */);
}

static PFNGLCOLORFRAGMENTOP3ATIPROC
epoxy_glColorFragmentOp3ATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 5007 /* glColorFragmentOp3ATI */);
}

static PFNGLCOLORMASKPROC
epoxy_glColorMask_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5029 /* "glColorMask" */,
        5029 /* "glColorMask" */,
        5029 /* "glColorMask" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5029 /* "glColorMask" */,
                                providers, entrypoints);
}

static PFNGLCOLORMASKINDEXEDEXTPROC
epoxy_glColorMaskIndexedEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5041 /* "glColorMaskIndexedEXT" */,
        5063 /* "glColorMaski" */,
        5076 /* "glColorMaskiEXT" */,
        5092 /* "glColorMaskiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5041 /* "glColorMaskIndexedEXT" */,
                                providers, entrypoints);
}

static PFNGLCOLORMASKIPROC
epoxy_glColorMaski_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers2,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5063 /* "glColorMaski" */,
        5041 /* "glColorMaskIndexedEXT" */,
        5076 /* "glColorMaskiEXT" */,
        5092 /* "glColorMaskiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5063 /* "glColorMaski" */,
                                providers, entrypoints);
}

static PFNGLCOLORMASKIEXTPROC
epoxy_glColorMaskiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5076 /* "glColorMaskiEXT" */,
        5041 /* "glColorMaskIndexedEXT" */,
        5063 /* "glColorMaski" */,
        5092 /* "glColorMaskiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5076 /* "glColorMaskiEXT" */,
                                providers, entrypoints);
}

static PFNGLCOLORMASKIOESPROC
epoxy_glColorMaskiOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_buffers_indexed,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5092 /* "glColorMaskiOES" */,
        5041 /* "glColorMaskIndexedEXT" */,
        5063 /* "glColorMaski" */,
        5076 /* "glColorMaskiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5092 /* "glColorMaskiOES" */,
                                providers, entrypoints);
}

static PFNGLCOLORMATERIALPROC
epoxy_glColorMaterial_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 5108 /* glColorMaterial */);
}

static PFNGLCOLORP3UIPROC
epoxy_glColorP3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5124 /* "glColorP3ui" */,
        5124 /* "glColorP3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5124 /* "glColorP3ui" */,
                                providers, entrypoints);
}

static PFNGLCOLORP3UIVPROC
epoxy_glColorP3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5136 /* "glColorP3uiv" */,
        5136 /* "glColorP3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5136 /* "glColorP3uiv" */,
                                providers, entrypoints);
}

static PFNGLCOLORP4UIPROC
epoxy_glColorP4ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5149 /* "glColorP4ui" */,
        5149 /* "glColorP4ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5149 /* "glColorP4ui" */,
                                providers, entrypoints);
}

static PFNGLCOLORP4UIVPROC
epoxy_glColorP4uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5161 /* "glColorP4uiv" */,
        5161 /* "glColorP4uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5161 /* "glColorP4uiv" */,
                                providers, entrypoints);
}

static PFNGLCOLORPOINTERPROC
epoxy_glColorPointer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5174 /* "glColorPointer" */,
        5174 /* "glColorPointer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5174 /* "glColorPointer" */,
                                providers, entrypoints);
}

static PFNGLCOLORPOINTEREXTPROC
epoxy_glColorPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 5189 /* glColorPointerEXT */);
}

static PFNGLCOLORPOINTERLISTIBMPROC
epoxy_glColorPointerListIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 5207 /* glColorPointerListIBM */);
}

static PFNGLCOLORPOINTERVINTELPROC
epoxy_glColorPointervINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_parallel_arrays, 5229 /* glColorPointervINTEL */);
}

static PFNGLCOLORSUBTABLEPROC
epoxy_glColorSubTable_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_color_subtable,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5250 /* "glColorSubTable" */,
        5266 /* "glColorSubTableEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5250 /* "glColorSubTable" */,
                                providers, entrypoints);
}

static PFNGLCOLORSUBTABLEEXTPROC
epoxy_glColorSubTableEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_color_subtable,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5266 /* "glColorSubTableEXT" */,
        5250 /* "glColorSubTable" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5266 /* "glColorSubTableEXT" */,
                                providers, entrypoints);
}

static PFNGLCOLORTABLEPROC
epoxy_glColorTable_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_paletted_texture,
        GL_extension_GL_SGI_color_table,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5285 /* "glColorTable" */,
        5298 /* "glColorTableEXT" */,
        5416 /* "glColorTableSGI" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5285 /* "glColorTable" */,
                                providers, entrypoints);
}

static PFNGLCOLORTABLEEXTPROC
epoxy_glColorTableEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_paletted_texture,
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_SGI_color_table,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5298 /* "glColorTableEXT" */,
        5285 /* "glColorTable" */,
        5416 /* "glColorTableSGI" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5298 /* "glColorTableEXT" */,
                                providers, entrypoints);
}

static PFNGLCOLORTABLEPARAMETERFVPROC
epoxy_glColorTableParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_SGI_color_table,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5314 /* "glColorTableParameterfv" */,
        5338 /* "glColorTableParameterfvSGI" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5314 /* "glColorTableParameterfv" */,
                                providers, entrypoints);
}

static PFNGLCOLORTABLEPARAMETERFVSGIPROC
epoxy_glColorTableParameterfvSGI_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_SGI_color_table,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5338 /* "glColorTableParameterfvSGI" */,
        5314 /* "glColorTableParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5338 /* "glColorTableParameterfvSGI" */,
                                providers, entrypoints);
}

static PFNGLCOLORTABLEPARAMETERIVPROC
epoxy_glColorTableParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_SGI_color_table,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5365 /* "glColorTableParameteriv" */,
        5389 /* "glColorTableParameterivSGI" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5365 /* "glColorTableParameteriv" */,
                                providers, entrypoints);
}

static PFNGLCOLORTABLEPARAMETERIVSGIPROC
epoxy_glColorTableParameterivSGI_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_SGI_color_table,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5389 /* "glColorTableParameterivSGI" */,
        5365 /* "glColorTableParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5389 /* "glColorTableParameterivSGI" */,
                                providers, entrypoints);
}

static PFNGLCOLORTABLESGIPROC
epoxy_glColorTableSGI_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_SGI_color_table,
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_paletted_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5416 /* "glColorTableSGI" */,
        5285 /* "glColorTable" */,
        5298 /* "glColorTableEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5416 /* "glColorTableSGI" */,
                                providers, entrypoints);
}

static PFNGLCOMBINERINPUTNVPROC
epoxy_glCombinerInputNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 5432 /* glCombinerInputNV */);
}

static PFNGLCOMBINEROUTPUTNVPROC
epoxy_glCombinerOutputNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 5450 /* glCombinerOutputNV */);
}

static PFNGLCOMBINERPARAMETERFNVPROC
epoxy_glCombinerParameterfNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 5469 /* glCombinerParameterfNV */);
}

static PFNGLCOMBINERPARAMETERFVNVPROC
epoxy_glCombinerParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 5492 /* glCombinerParameterfvNV */);
}

static PFNGLCOMBINERPARAMETERINVPROC
epoxy_glCombinerParameteriNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 5516 /* glCombinerParameteriNV */);
}

static PFNGLCOMBINERPARAMETERIVNVPROC
epoxy_glCombinerParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 5539 /* glCombinerParameterivNV */);
}

static PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
epoxy_glCombinerStageParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners2, 5563 /* glCombinerStageParameterfvNV */);
}

static PFNGLCOMMANDLISTSEGMENTSNVPROC
epoxy_glCommandListSegmentsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 5592 /* glCommandListSegmentsNV */);
}

static PFNGLCOMPILECOMMANDLISTNVPROC
epoxy_glCompileCommandListNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 5616 /* glCompileCommandListNV */);
}

static PFNGLCOMPILESHADERPROC
epoxy_glCompileShader_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5639 /* "glCompileShader" */,
        5639 /* "glCompileShader" */,
        5655 /* "glCompileShaderARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5639 /* "glCompileShader" */,
                                providers, entrypoints);
}

static PFNGLCOMPILESHADERARBPROC
epoxy_glCompileShaderARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5655 /* "glCompileShaderARB" */,
        5639 /* "glCompileShader" */,
        5639 /* "glCompileShader" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5655 /* "glCompileShaderARB" */,
                                providers, entrypoints);
}

static PFNGLCOMPILESHADERINCLUDEARBPROC
epoxy_glCompileShaderIncludeARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 5674 /* glCompileShaderIncludeARB */);
}

static PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
epoxy_glCompressedMultiTexImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5700 /* glCompressedMultiTexImage1DEXT */);
}

static PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
epoxy_glCompressedMultiTexImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5731 /* glCompressedMultiTexImage2DEXT */);
}

static PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
epoxy_glCompressedMultiTexImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5762 /* glCompressedMultiTexImage3DEXT */);
}

static PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
epoxy_glCompressedMultiTexSubImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5793 /* glCompressedMultiTexSubImage1DEXT */);
}

static PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
epoxy_glCompressedMultiTexSubImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5827 /* glCompressedMultiTexSubImage2DEXT */);
}

static PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
epoxy_glCompressedMultiTexSubImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5861 /* glCompressedMultiTexSubImage3DEXT */);
}

static PFNGLCOMPRESSEDTEXIMAGE1DPROC
epoxy_glCompressedTexImage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_texture_compression,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5895 /* "glCompressedTexImage1D" */,
        5918 /* "glCompressedTexImage1DARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5895 /* "glCompressedTexImage1D" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
epoxy_glCompressedTexImage1DARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_texture_compression,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5918 /* "glCompressedTexImage1DARB" */,
        5895 /* "glCompressedTexImage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5918 /* "glCompressedTexImage1DARB" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXIMAGE2DPROC
epoxy_glCompressedTexImage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_texture_compression,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5944 /* "glCompressedTexImage2D" */,
        5944 /* "glCompressedTexImage2D" */,
        5944 /* "glCompressedTexImage2D" */,
        5967 /* "glCompressedTexImage2DARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5944 /* "glCompressedTexImage2D" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
epoxy_glCompressedTexImage2DARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_texture_compression,
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5967 /* "glCompressedTexImage2DARB" */,
        5944 /* "glCompressedTexImage2D" */,
        5944 /* "glCompressedTexImage2D" */,
        5944 /* "glCompressedTexImage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5967 /* "glCompressedTexImage2DARB" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXIMAGE3DPROC
epoxy_glCompressedTexImage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_texture_compression,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        5993 /* "glCompressedTexImage3D" */,
        5993 /* "glCompressedTexImage3D" */,
        6016 /* "glCompressedTexImage3DARB" */,
        6042 /* "glCompressedTexImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 5993 /* "glCompressedTexImage3D" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
epoxy_glCompressedTexImage3DARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_texture_compression,
        Desktop_OpenGL_1_3,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6016 /* "glCompressedTexImage3DARB" */,
        5993 /* "glCompressedTexImage3D" */,
        5993 /* "glCompressedTexImage3D" */,
        6042 /* "glCompressedTexImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6016 /* "glCompressedTexImage3DARB" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXIMAGE3DOESPROC
epoxy_glCompressedTexImage3DOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_3D,
        Desktop_OpenGL_1_3,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_texture_compression,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6042 /* "glCompressedTexImage3DOES" */,
        5993 /* "glCompressedTexImage3D" */,
        5993 /* "glCompressedTexImage3D" */,
        6016 /* "glCompressedTexImage3DARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6042 /* "glCompressedTexImage3DOES" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
epoxy_glCompressedTexSubImage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_texture_compression,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6068 /* "glCompressedTexSubImage1D" */,
        6094 /* "glCompressedTexSubImage1DARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6068 /* "glCompressedTexSubImage1D" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
epoxy_glCompressedTexSubImage1DARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_texture_compression,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6094 /* "glCompressedTexSubImage1DARB" */,
        6068 /* "glCompressedTexSubImage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6094 /* "glCompressedTexSubImage1DARB" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
epoxy_glCompressedTexSubImage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_texture_compression,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6123 /* "glCompressedTexSubImage2D" */,
        6123 /* "glCompressedTexSubImage2D" */,
        6123 /* "glCompressedTexSubImage2D" */,
        6149 /* "glCompressedTexSubImage2DARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6123 /* "glCompressedTexSubImage2D" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
epoxy_glCompressedTexSubImage2DARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_texture_compression,
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6149 /* "glCompressedTexSubImage2DARB" */,
        6123 /* "glCompressedTexSubImage2D" */,
        6123 /* "glCompressedTexSubImage2D" */,
        6123 /* "glCompressedTexSubImage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6149 /* "glCompressedTexSubImage2DARB" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
epoxy_glCompressedTexSubImage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_texture_compression,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6178 /* "glCompressedTexSubImage3D" */,
        6178 /* "glCompressedTexSubImage3D" */,
        6204 /* "glCompressedTexSubImage3DARB" */,
        6233 /* "glCompressedTexSubImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6178 /* "glCompressedTexSubImage3D" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
epoxy_glCompressedTexSubImage3DARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_texture_compression,
        Desktop_OpenGL_1_3,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6204 /* "glCompressedTexSubImage3DARB" */,
        6178 /* "glCompressedTexSubImage3D" */,
        6178 /* "glCompressedTexSubImage3D" */,
        6233 /* "glCompressedTexSubImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6204 /* "glCompressedTexSubImage3DARB" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC
epoxy_glCompressedTexSubImage3DOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_3D,
        Desktop_OpenGL_1_3,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_texture_compression,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6233 /* "glCompressedTexSubImage3DOES" */,
        6178 /* "glCompressedTexSubImage3D" */,
        6178 /* "glCompressedTexSubImage3D" */,
        6204 /* "glCompressedTexSubImage3DARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6233 /* "glCompressedTexSubImage3DOES" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
epoxy_glCompressedTextureImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6262 /* glCompressedTextureImage1DEXT */);
}

static PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
epoxy_glCompressedTextureImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6292 /* glCompressedTextureImage2DEXT */);
}

static PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
epoxy_glCompressedTextureImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6322 /* glCompressedTextureImage3DEXT */);
}

static PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC
epoxy_glCompressedTextureSubImage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6352 /* "glCompressedTextureSubImage1D" */,
        6352 /* "glCompressedTextureSubImage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6352 /* "glCompressedTextureSubImage1D" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
epoxy_glCompressedTextureSubImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6382 /* glCompressedTextureSubImage1DEXT */);
}

static PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC
epoxy_glCompressedTextureSubImage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6415 /* "glCompressedTextureSubImage2D" */,
        6415 /* "glCompressedTextureSubImage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6415 /* "glCompressedTextureSubImage2D" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
epoxy_glCompressedTextureSubImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6445 /* glCompressedTextureSubImage2DEXT */);
}

static PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC
epoxy_glCompressedTextureSubImage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6478 /* "glCompressedTextureSubImage3D" */,
        6478 /* "glCompressedTextureSubImage3D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6478 /* "glCompressedTextureSubImage3D" */,
                                providers, entrypoints);
}

static PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
epoxy_glCompressedTextureSubImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6508 /* glCompressedTextureSubImage3DEXT */);
}

static PFNGLCONVOLUTIONFILTER1DPROC
epoxy_glConvolutionFilter1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_convolution,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6541 /* "glConvolutionFilter1D" */,
        6563 /* "glConvolutionFilter1DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6541 /* "glConvolutionFilter1D" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONFILTER1DEXTPROC
epoxy_glConvolutionFilter1DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_convolution,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6563 /* "glConvolutionFilter1DEXT" */,
        6541 /* "glConvolutionFilter1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6563 /* "glConvolutionFilter1DEXT" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONFILTER2DPROC
epoxy_glConvolutionFilter2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_convolution,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6588 /* "glConvolutionFilter2D" */,
        6610 /* "glConvolutionFilter2DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6588 /* "glConvolutionFilter2D" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONFILTER2DEXTPROC
epoxy_glConvolutionFilter2DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_convolution,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6610 /* "glConvolutionFilter2DEXT" */,
        6588 /* "glConvolutionFilter2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6610 /* "glConvolutionFilter2DEXT" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONPARAMETERFPROC
epoxy_glConvolutionParameterf_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_convolution,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6635 /* "glConvolutionParameterf" */,
        6659 /* "glConvolutionParameterfEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6635 /* "glConvolutionParameterf" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONPARAMETERFEXTPROC
epoxy_glConvolutionParameterfEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_convolution,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6659 /* "glConvolutionParameterfEXT" */,
        6635 /* "glConvolutionParameterf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6659 /* "glConvolutionParameterfEXT" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONPARAMETERFVPROC
epoxy_glConvolutionParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_convolution,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6686 /* "glConvolutionParameterfv" */,
        6711 /* "glConvolutionParameterfvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6686 /* "glConvolutionParameterfv" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONPARAMETERFVEXTPROC
epoxy_glConvolutionParameterfvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_convolution,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6711 /* "glConvolutionParameterfvEXT" */,
        6686 /* "glConvolutionParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6711 /* "glConvolutionParameterfvEXT" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONPARAMETERIPROC
epoxy_glConvolutionParameteri_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_convolution,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6739 /* "glConvolutionParameteri" */,
        6763 /* "glConvolutionParameteriEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6739 /* "glConvolutionParameteri" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONPARAMETERIEXTPROC
epoxy_glConvolutionParameteriEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_convolution,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6763 /* "glConvolutionParameteriEXT" */,
        6739 /* "glConvolutionParameteri" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6763 /* "glConvolutionParameteriEXT" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONPARAMETERIVPROC
epoxy_glConvolutionParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_convolution,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6790 /* "glConvolutionParameteriv" */,
        6815 /* "glConvolutionParameterivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6790 /* "glConvolutionParameteriv" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONPARAMETERIVEXTPROC
epoxy_glConvolutionParameterivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_convolution,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6815 /* "glConvolutionParameterivEXT" */,
        6790 /* "glConvolutionParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6815 /* "glConvolutionParameterivEXT" */,
                                providers, entrypoints);
}

static PFNGLCONVOLUTIONPARAMETERXOESPROC
epoxy_glConvolutionParameterxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 6843 /* glConvolutionParameterxOES */);
}

static PFNGLCONVOLUTIONPARAMETERXVOESPROC
epoxy_glConvolutionParameterxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 6870 /* glConvolutionParameterxvOES */);
}

static PFNGLCOPYBUFFERSUBDATAPROC
epoxy_glCopyBufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_copy_buffer,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_copy_buffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6898 /* "glCopyBufferSubData" */,
        6898 /* "glCopyBufferSubData" */,
        6898 /* "glCopyBufferSubData" */,
        6918 /* "glCopyBufferSubDataNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6898 /* "glCopyBufferSubData" */,
                                providers, entrypoints);
}

static PFNGLCOPYBUFFERSUBDATANVPROC
epoxy_glCopyBufferSubDataNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_copy_buffer,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_copy_buffer,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6918 /* "glCopyBufferSubDataNV" */,
        6898 /* "glCopyBufferSubData" */,
        6898 /* "glCopyBufferSubData" */,
        6898 /* "glCopyBufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6918 /* "glCopyBufferSubDataNV" */,
                                providers, entrypoints);
}

static PFNGLCOPYCOLORSUBTABLEPROC
epoxy_glCopyColorSubTable_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_color_subtable,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6940 /* "glCopyColorSubTable" */,
        6960 /* "glCopyColorSubTableEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6940 /* "glCopyColorSubTable" */,
                                providers, entrypoints);
}

static PFNGLCOPYCOLORSUBTABLEEXTPROC
epoxy_glCopyColorSubTableEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_color_subtable,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6960 /* "glCopyColorSubTableEXT" */,
        6940 /* "glCopyColorSubTable" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6960 /* "glCopyColorSubTableEXT" */,
                                providers, entrypoints);
}

static PFNGLCOPYCOLORTABLEPROC
epoxy_glCopyColorTable_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_SGI_color_table,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        6983 /* "glCopyColorTable" */,
        7000 /* "glCopyColorTableSGI" */,
    };
    return gl_provider_resolver(entrypoint_strings + 6983 /* "glCopyColorTable" */,
                                providers, entrypoints);
}

static PFNGLCOPYCOLORTABLESGIPROC
epoxy_glCopyColorTableSGI_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_SGI_color_table,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7000 /* "glCopyColorTableSGI" */,
        6983 /* "glCopyColorTable" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7000 /* "glCopyColorTableSGI" */,
                                providers, entrypoints);
}

static PFNGLCOPYCONVOLUTIONFILTER1DPROC
epoxy_glCopyConvolutionFilter1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_convolution,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7020 /* "glCopyConvolutionFilter1D" */,
        7046 /* "glCopyConvolutionFilter1DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7020 /* "glCopyConvolutionFilter1D" */,
                                providers, entrypoints);
}

static PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
epoxy_glCopyConvolutionFilter1DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_convolution,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7046 /* "glCopyConvolutionFilter1DEXT" */,
        7020 /* "glCopyConvolutionFilter1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7046 /* "glCopyConvolutionFilter1DEXT" */,
                                providers, entrypoints);
}

static PFNGLCOPYCONVOLUTIONFILTER2DPROC
epoxy_glCopyConvolutionFilter2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_convolution,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7075 /* "glCopyConvolutionFilter2D" */,
        7101 /* "glCopyConvolutionFilter2DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7075 /* "glCopyConvolutionFilter2D" */,
                                providers, entrypoints);
}

static PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
epoxy_glCopyConvolutionFilter2DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_convolution,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7101 /* "glCopyConvolutionFilter2DEXT" */,
        7075 /* "glCopyConvolutionFilter2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7101 /* "glCopyConvolutionFilter2DEXT" */,
                                providers, entrypoints);
}

static PFNGLCOPYIMAGESUBDATAPROC
epoxy_glCopyImageSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_copy_image,
        GL_extension_GL_EXT_copy_image,
        GL_extension_GL_OES_copy_image,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7130 /* "glCopyImageSubData" */,
        7130 /* "glCopyImageSubData" */,
        7149 /* "glCopyImageSubDataEXT" */,
        7192 /* "glCopyImageSubDataOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7130 /* "glCopyImageSubData" */,
                                providers, entrypoints);
}

static PFNGLCOPYIMAGESUBDATAEXTPROC
epoxy_glCopyImageSubDataEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_copy_image,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_copy_image,
        GL_extension_GL_OES_copy_image,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7149 /* "glCopyImageSubDataEXT" */,
        7130 /* "glCopyImageSubData" */,
        7130 /* "glCopyImageSubData" */,
        7192 /* "glCopyImageSubDataOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7149 /* "glCopyImageSubDataEXT" */,
                                providers, entrypoints);
}

static PFNGLCOPYIMAGESUBDATANVPROC
epoxy_glCopyImageSubDataNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_copy_image, 7171 /* glCopyImageSubDataNV */);
}

static PFNGLCOPYIMAGESUBDATAOESPROC
epoxy_glCopyImageSubDataOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_copy_image,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_copy_image,
        GL_extension_GL_EXT_copy_image,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7192 /* "glCopyImageSubDataOES" */,
        7130 /* "glCopyImageSubData" */,
        7130 /* "glCopyImageSubData" */,
        7149 /* "glCopyImageSubDataEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7192 /* "glCopyImageSubDataOES" */,
                                providers, entrypoints);
}

static PFNGLCOPYMULTITEXIMAGE1DEXTPROC
epoxy_glCopyMultiTexImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7214 /* glCopyMultiTexImage1DEXT */);
}

static PFNGLCOPYMULTITEXIMAGE2DEXTPROC
epoxy_glCopyMultiTexImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7239 /* glCopyMultiTexImage2DEXT */);
}

static PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
epoxy_glCopyMultiTexSubImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7264 /* glCopyMultiTexSubImage1DEXT */);
}

static PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
epoxy_glCopyMultiTexSubImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7292 /* glCopyMultiTexSubImage2DEXT */);
}

static PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
epoxy_glCopyMultiTexSubImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7320 /* glCopyMultiTexSubImage3DEXT */);
}

static PFNGLCOPYNAMEDBUFFERSUBDATAPROC
epoxy_glCopyNamedBufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7348 /* "glCopyNamedBufferSubData" */,
        7348 /* "glCopyNamedBufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7348 /* "glCopyNamedBufferSubData" */,
                                providers, entrypoints);
}

static PFNGLCOPYPATHNVPROC
epoxy_glCopyPathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 7373 /* glCopyPathNV */);
}

static PFNGLCOPYPIXELSPROC
epoxy_glCopyPixels_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 7386 /* glCopyPixels */);
}

static PFNGLCOPYTEXIMAGE1DPROC
epoxy_glCopyTexImage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        GL_extension_GL_EXT_copy_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7399 /* "glCopyTexImage1D" */,
        7416 /* "glCopyTexImage1DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7399 /* "glCopyTexImage1D" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXIMAGE1DEXTPROC
epoxy_glCopyTexImage1DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_copy_texture,
        Desktop_OpenGL_1_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7416 /* "glCopyTexImage1DEXT" */,
        7399 /* "glCopyTexImage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7416 /* "glCopyTexImage1DEXT" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXIMAGE2DPROC
epoxy_glCopyTexImage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_copy_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7436 /* "glCopyTexImage2D" */,
        7436 /* "glCopyTexImage2D" */,
        7436 /* "glCopyTexImage2D" */,
        7453 /* "glCopyTexImage2DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7436 /* "glCopyTexImage2D" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXIMAGE2DEXTPROC
epoxy_glCopyTexImage2DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_copy_texture,
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7453 /* "glCopyTexImage2DEXT" */,
        7436 /* "glCopyTexImage2D" */,
        7436 /* "glCopyTexImage2D" */,
        7436 /* "glCopyTexImage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7453 /* "glCopyTexImage2DEXT" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXSUBIMAGE1DPROC
epoxy_glCopyTexSubImage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        GL_extension_GL_EXT_copy_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7473 /* "glCopyTexSubImage1D" */,
        7493 /* "glCopyTexSubImage1DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7473 /* "glCopyTexSubImage1D" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXSUBIMAGE1DEXTPROC
epoxy_glCopyTexSubImage1DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_copy_texture,
        Desktop_OpenGL_1_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7493 /* "glCopyTexSubImage1DEXT" */,
        7473 /* "glCopyTexSubImage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7493 /* "glCopyTexSubImage1DEXT" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXSUBIMAGE2DPROC
epoxy_glCopyTexSubImage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_copy_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7516 /* "glCopyTexSubImage2D" */,
        7516 /* "glCopyTexSubImage2D" */,
        7516 /* "glCopyTexSubImage2D" */,
        7536 /* "glCopyTexSubImage2DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7516 /* "glCopyTexSubImage2D" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXSUBIMAGE2DEXTPROC
epoxy_glCopyTexSubImage2DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_copy_texture,
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7536 /* "glCopyTexSubImage2DEXT" */,
        7516 /* "glCopyTexSubImage2D" */,
        7516 /* "glCopyTexSubImage2D" */,
        7516 /* "glCopyTexSubImage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7536 /* "glCopyTexSubImage2DEXT" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXSUBIMAGE3DPROC
epoxy_glCopyTexSubImage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_copy_texture,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7559 /* "glCopyTexSubImage3D" */,
        7559 /* "glCopyTexSubImage3D" */,
        7579 /* "glCopyTexSubImage3DEXT" */,
        7602 /* "glCopyTexSubImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7559 /* "glCopyTexSubImage3D" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXSUBIMAGE3DEXTPROC
epoxy_glCopyTexSubImage3DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_copy_texture,
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7579 /* "glCopyTexSubImage3DEXT" */,
        7559 /* "glCopyTexSubImage3D" */,
        7559 /* "glCopyTexSubImage3D" */,
        7602 /* "glCopyTexSubImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7579 /* "glCopyTexSubImage3DEXT" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXSUBIMAGE3DOESPROC
epoxy_glCopyTexSubImage3DOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_3D,
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_copy_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7602 /* "glCopyTexSubImage3DOES" */,
        7559 /* "glCopyTexSubImage3D" */,
        7559 /* "glCopyTexSubImage3D" */,
        7579 /* "glCopyTexSubImage3DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7602 /* "glCopyTexSubImage3DOES" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXTUREIMAGE1DEXTPROC
epoxy_glCopyTextureImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7625 /* glCopyTextureImage1DEXT */);
}

static PFNGLCOPYTEXTUREIMAGE2DEXTPROC
epoxy_glCopyTextureImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7649 /* glCopyTextureImage2DEXT */);
}

static PFNGLCOPYTEXTURELEVELSAPPLEPROC
epoxy_glCopyTextureLevelsAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_copy_texture_levels, 7673 /* glCopyTextureLevelsAPPLE */);
}

static PFNGLCOPYTEXTURESUBIMAGE1DPROC
epoxy_glCopyTextureSubImage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7698 /* "glCopyTextureSubImage1D" */,
        7698 /* "glCopyTextureSubImage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7698 /* "glCopyTextureSubImage1D" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
epoxy_glCopyTextureSubImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7722 /* glCopyTextureSubImage1DEXT */);
}

static PFNGLCOPYTEXTURESUBIMAGE2DPROC
epoxy_glCopyTextureSubImage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7749 /* "glCopyTextureSubImage2D" */,
        7749 /* "glCopyTextureSubImage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7749 /* "glCopyTextureSubImage2D" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
epoxy_glCopyTextureSubImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7773 /* glCopyTextureSubImage2DEXT */);
}

static PFNGLCOPYTEXTURESUBIMAGE3DPROC
epoxy_glCopyTextureSubImage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        7800 /* "glCopyTextureSubImage3D" */,
        7800 /* "glCopyTextureSubImage3D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 7800 /* "glCopyTextureSubImage3D" */,
                                providers, entrypoints);
}

static PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
epoxy_glCopyTextureSubImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7824 /* glCopyTextureSubImage3DEXT */);
}

static PFNGLCOVERFILLPATHINSTANCEDNVPROC
epoxy_glCoverFillPathInstancedNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 7851 /* glCoverFillPathInstancedNV */);
}

static PFNGLCOVERFILLPATHNVPROC
epoxy_glCoverFillPathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 7878 /* glCoverFillPathNV */);
}

static PFNGLCOVERSTROKEPATHINSTANCEDNVPROC
epoxy_glCoverStrokePathInstancedNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 7896 /* glCoverStrokePathInstancedNV */);
}

static PFNGLCOVERSTROKEPATHNVPROC
epoxy_glCoverStrokePathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 7925 /* glCoverStrokePathNV */);
}

static PFNGLCOVERAGEMASKNVPROC
epoxy_glCoverageMaskNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_coverage_sample, 7945 /* glCoverageMaskNV */);
}

static PFNGLCOVERAGEMODULATIONNVPROC
epoxy_glCoverageModulationNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_framebuffer_mixed_samples, 7962 /* glCoverageModulationNV */);
}

static PFNGLCOVERAGEMODULATIONTABLENVPROC
epoxy_glCoverageModulationTableNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_framebuffer_mixed_samples, 7985 /* glCoverageModulationTableNV */);
}

static PFNGLCOVERAGEOPERATIONNVPROC
epoxy_glCoverageOperationNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_coverage_sample, 8013 /* glCoverageOperationNV */);
}

static PFNGLCREATEBUFFERSPROC
epoxy_glCreateBuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8035 /* "glCreateBuffers" */,
        8035 /* "glCreateBuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8035 /* "glCreateBuffers" */,
                                providers, entrypoints);
}

static PFNGLCREATECOMMANDLISTSNVPROC
epoxy_glCreateCommandListsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 8051 /* glCreateCommandListsNV */);
}

static PFNGLCREATEFRAMEBUFFERSPROC
epoxy_glCreateFramebuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8074 /* "glCreateFramebuffers" */,
        8074 /* "glCreateFramebuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8074 /* "glCreateFramebuffers" */,
                                providers, entrypoints);
}

static PFNGLCREATEPERFQUERYINTELPROC
epoxy_glCreatePerfQueryINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 8095 /* glCreatePerfQueryINTEL */);
}

static PFNGLCREATEPROGRAMPROC
epoxy_glCreateProgram_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8118 /* "glCreateProgram" */,
        8118 /* "glCreateProgram" */,
        8134 /* "glCreateProgramObjectARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8118 /* "glCreateProgram" */,
                                providers, entrypoints);
}

static PFNGLCREATEPROGRAMOBJECTARBPROC
epoxy_glCreateProgramObjectARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8134 /* "glCreateProgramObjectARB" */,
        8118 /* "glCreateProgram" */,
        8118 /* "glCreateProgram" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8134 /* "glCreateProgramObjectARB" */,
                                providers, entrypoints);
}

static PFNGLCREATEPROGRAMPIPELINESPROC
epoxy_glCreateProgramPipelines_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8159 /* "glCreateProgramPipelines" */,
        8159 /* "glCreateProgramPipelines" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8159 /* "glCreateProgramPipelines" */,
                                providers, entrypoints);
}

static PFNGLCREATEQUERIESPROC
epoxy_glCreateQueries_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8184 /* "glCreateQueries" */,
        8184 /* "glCreateQueries" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8184 /* "glCreateQueries" */,
                                providers, entrypoints);
}

static PFNGLCREATERENDERBUFFERSPROC
epoxy_glCreateRenderbuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8200 /* "glCreateRenderbuffers" */,
        8200 /* "glCreateRenderbuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8200 /* "glCreateRenderbuffers" */,
                                providers, entrypoints);
}

static PFNGLCREATESAMPLERSPROC
epoxy_glCreateSamplers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8222 /* "glCreateSamplers" */,
        8222 /* "glCreateSamplers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8222 /* "glCreateSamplers" */,
                                providers, entrypoints);
}

static PFNGLCREATESHADERPROC
epoxy_glCreateShader_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8239 /* "glCreateShader" */,
        8239 /* "glCreateShader" */,
        8254 /* "glCreateShaderObjectARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8239 /* "glCreateShader" */,
                                providers, entrypoints);
}

static PFNGLCREATESHADEROBJECTARBPROC
epoxy_glCreateShaderObjectARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8254 /* "glCreateShaderObjectARB" */,
        8239 /* "glCreateShader" */,
        8239 /* "glCreateShader" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8254 /* "glCreateShaderObjectARB" */,
                                providers, entrypoints);
}

static PFNGLCREATESHADERPROGRAMEXTPROC
epoxy_glCreateShaderProgramEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 8278 /* glCreateShaderProgramEXT */);
}

static PFNGLCREATESHADERPROGRAMVPROC
epoxy_glCreateShaderProgramv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8303 /* "glCreateShaderProgramv" */,
        8303 /* "glCreateShaderProgramv" */,
        8303 /* "glCreateShaderProgramv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8303 /* "glCreateShaderProgramv" */,
                                providers, entrypoints);
}

static PFNGLCREATESHADERPROGRAMVEXTPROC
epoxy_glCreateShaderProgramvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 8326 /* glCreateShaderProgramvEXT */);
}

static PFNGLCREATESTATESNVPROC
epoxy_glCreateStatesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 8352 /* glCreateStatesNV */);
}

static PFNGLCREATESYNCFROMCLEVENTARBPROC
epoxy_glCreateSyncFromCLeventARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_cl_event, 8369 /* glCreateSyncFromCLeventARB */);
}

static PFNGLCREATETEXTURESPROC
epoxy_glCreateTextures_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8396 /* "glCreateTextures" */,
        8396 /* "glCreateTextures" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8396 /* "glCreateTextures" */,
                                providers, entrypoints);
}

static PFNGLCREATETRANSFORMFEEDBACKSPROC
epoxy_glCreateTransformFeedbacks_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8413 /* "glCreateTransformFeedbacks" */,
        8413 /* "glCreateTransformFeedbacks" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8413 /* "glCreateTransformFeedbacks" */,
                                providers, entrypoints);
}

static PFNGLCREATEVERTEXARRAYSPROC
epoxy_glCreateVertexArrays_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8440 /* "glCreateVertexArrays" */,
        8440 /* "glCreateVertexArrays" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8440 /* "glCreateVertexArrays" */,
                                providers, entrypoints);
}

static PFNGLCULLFACEPROC
epoxy_glCullFace_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8461 /* "glCullFace" */,
        8461 /* "glCullFace" */,
        8461 /* "glCullFace" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8461 /* "glCullFace" */,
                                providers, entrypoints);
}

static PFNGLCULLPARAMETERDVEXTPROC
epoxy_glCullParameterdvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_cull_vertex, 8472 /* glCullParameterdvEXT */);
}

static PFNGLCULLPARAMETERFVEXTPROC
epoxy_glCullParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_cull_vertex, 8493 /* glCullParameterfvEXT */);
}

static PFNGLCURRENTPALETTEMATRIXARBPROC
epoxy_glCurrentPaletteMatrixARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 8514 /* glCurrentPaletteMatrixARB */);
}

static PFNGLCURRENTPALETTEMATRIXOESPROC
epoxy_glCurrentPaletteMatrixOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_matrix_palette, 8540 /* glCurrentPaletteMatrixOES */);
}

static PFNGLDEBUGMESSAGECALLBACKPROC
epoxy_glDebugMessageCallback_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_ARB_debug_output,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8566 /* "glDebugMessageCallback" */,
        8566 /* "glDebugMessageCallback" */,
        8615 /* "glDebugMessageCallbackARB" */,
        8641 /* "glDebugMessageCallbackKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8566 /* "glDebugMessageCallback" */,
                                providers, entrypoints);
}

static PFNGLDEBUGMESSAGECALLBACKAMDPROC
epoxy_glDebugMessageCallbackAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_debug_output, 8589 /* glDebugMessageCallbackAMD */);
}

static PFNGLDEBUGMESSAGECALLBACKARBPROC
epoxy_glDebugMessageCallbackARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_debug_output,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8615 /* "glDebugMessageCallbackARB" */,
        8566 /* "glDebugMessageCallback" */,
        8566 /* "glDebugMessageCallback" */,
        8641 /* "glDebugMessageCallbackKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8615 /* "glDebugMessageCallbackARB" */,
                                providers, entrypoints);
}

static PFNGLDEBUGMESSAGECALLBACKKHRPROC
epoxy_glDebugMessageCallbackKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_ARB_debug_output,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8641 /* "glDebugMessageCallbackKHR" */,
        8566 /* "glDebugMessageCallback" */,
        8566 /* "glDebugMessageCallback" */,
        8615 /* "glDebugMessageCallbackARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8641 /* "glDebugMessageCallbackKHR" */,
                                providers, entrypoints);
}

static PFNGLDEBUGMESSAGECONTROLPROC
epoxy_glDebugMessageControl_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_ARB_debug_output,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8667 /* "glDebugMessageControl" */,
        8667 /* "glDebugMessageControl" */,
        8689 /* "glDebugMessageControlARB" */,
        8714 /* "glDebugMessageControlKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8667 /* "glDebugMessageControl" */,
                                providers, entrypoints);
}

static PFNGLDEBUGMESSAGECONTROLARBPROC
epoxy_glDebugMessageControlARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_debug_output,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8689 /* "glDebugMessageControlARB" */,
        8667 /* "glDebugMessageControl" */,
        8667 /* "glDebugMessageControl" */,
        8714 /* "glDebugMessageControlKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8689 /* "glDebugMessageControlARB" */,
                                providers, entrypoints);
}

static PFNGLDEBUGMESSAGECONTROLKHRPROC
epoxy_glDebugMessageControlKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_ARB_debug_output,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8714 /* "glDebugMessageControlKHR" */,
        8667 /* "glDebugMessageControl" */,
        8667 /* "glDebugMessageControl" */,
        8689 /* "glDebugMessageControlARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8714 /* "glDebugMessageControlKHR" */,
                                providers, entrypoints);
}

static PFNGLDEBUGMESSAGEENABLEAMDPROC
epoxy_glDebugMessageEnableAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_debug_output, 8739 /* glDebugMessageEnableAMD */);
}

static PFNGLDEBUGMESSAGEINSERTPROC
epoxy_glDebugMessageInsert_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_ARB_debug_output,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8763 /* "glDebugMessageInsert" */,
        8763 /* "glDebugMessageInsert" */,
        8808 /* "glDebugMessageInsertARB" */,
        8832 /* "glDebugMessageInsertKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8763 /* "glDebugMessageInsert" */,
                                providers, entrypoints);
}

static PFNGLDEBUGMESSAGEINSERTAMDPROC
epoxy_glDebugMessageInsertAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_debug_output, 8784 /* glDebugMessageInsertAMD */);
}

static PFNGLDEBUGMESSAGEINSERTARBPROC
epoxy_glDebugMessageInsertARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_debug_output,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8808 /* "glDebugMessageInsertARB" */,
        8763 /* "glDebugMessageInsert" */,
        8763 /* "glDebugMessageInsert" */,
        8832 /* "glDebugMessageInsertKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8808 /* "glDebugMessageInsertARB" */,
                                providers, entrypoints);
}

static PFNGLDEBUGMESSAGEINSERTKHRPROC
epoxy_glDebugMessageInsertKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_ARB_debug_output,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8832 /* "glDebugMessageInsertKHR" */,
        8763 /* "glDebugMessageInsert" */,
        8763 /* "glDebugMessageInsert" */,
        8808 /* "glDebugMessageInsertARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8832 /* "glDebugMessageInsertKHR" */,
                                providers, entrypoints);
}

static PFNGLDEFORMSGIXPROC
epoxy_glDeformSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_polynomial_ffd, 8856 /* glDeformSGIX */);
}

static PFNGLDEFORMATIONMAP3DSGIXPROC
epoxy_glDeformationMap3dSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_polynomial_ffd, 8869 /* glDeformationMap3dSGIX */);
}

static PFNGLDEFORMATIONMAP3FSGIXPROC
epoxy_glDeformationMap3fSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_polynomial_ffd, 8892 /* glDeformationMap3fSGIX */);
}

static PFNGLDELETEASYNCMARKERSSGIXPROC
epoxy_glDeleteAsyncMarkersSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_async, 8915 /* glDeleteAsyncMarkersSGIX */);
}

static PFNGLDELETEBUFFERSPROC
epoxy_glDeleteBuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8940 /* "glDeleteBuffers" */,
        8940 /* "glDeleteBuffers" */,
        8940 /* "glDeleteBuffers" */,
        8956 /* "glDeleteBuffersARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8940 /* "glDeleteBuffers" */,
                                providers, entrypoints);
}

static PFNGLDELETEBUFFERSARBPROC
epoxy_glDeleteBuffersARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        8956 /* "glDeleteBuffersARB" */,
        8940 /* "glDeleteBuffers" */,
        8940 /* "glDeleteBuffers" */,
        8940 /* "glDeleteBuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 8956 /* "glDeleteBuffersARB" */,
                                providers, entrypoints);
}

static PFNGLDELETECOMMANDLISTSNVPROC
epoxy_glDeleteCommandListsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 8975 /* glDeleteCommandListsNV */);
}

static PFNGLDELETEFENCESAPPLEPROC
epoxy_glDeleteFencesAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 8998 /* glDeleteFencesAPPLE */);
}

static PFNGLDELETEFENCESNVPROC
epoxy_glDeleteFencesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fence, 9018 /* glDeleteFencesNV */);
}

static PFNGLDELETEFRAGMENTSHADERATIPROC
epoxy_glDeleteFragmentShaderATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 9035 /* glDeleteFragmentShaderATI */);
}

static PFNGLDELETEFRAMEBUFFERSPROC
epoxy_glDeleteFramebuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9061 /* "glDeleteFramebuffers" */,
        9061 /* "glDeleteFramebuffers" */,
        9061 /* "glDeleteFramebuffers" */,
        9082 /* "glDeleteFramebuffersEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9061 /* "glDeleteFramebuffers" */,
                                providers, entrypoints);
}

static PFNGLDELETEFRAMEBUFFERSEXTPROC
epoxy_glDeleteFramebuffersEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9082 /* "glDeleteFramebuffersEXT" */,
        9061 /* "glDeleteFramebuffers" */,
        9061 /* "glDeleteFramebuffers" */,
        9061 /* "glDeleteFramebuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9082 /* "glDeleteFramebuffersEXT" */,
                                providers, entrypoints);
}

static PFNGLDELETEFRAMEBUFFERSOESPROC
epoxy_glDeleteFramebuffersOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 9106 /* glDeleteFramebuffersOES */);
}

static PFNGLDELETELISTSPROC
epoxy_glDeleteLists_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 9130 /* glDeleteLists */);
}

static PFNGLDELETENAMEDSTRINGARBPROC
epoxy_glDeleteNamedStringARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 9144 /* glDeleteNamedStringARB */);
}

static PFNGLDELETENAMESAMDPROC
epoxy_glDeleteNamesAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_name_gen_delete, 9167 /* glDeleteNamesAMD */);
}

static PFNGLDELETEOBJECTARBPROC
epoxy_glDeleteObjectARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 9184 /* glDeleteObjectARB */);
}

static PFNGLDELETEOCCLUSIONQUERIESNVPROC
epoxy_glDeleteOcclusionQueriesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 9202 /* glDeleteOcclusionQueriesNV */);
}

static PFNGLDELETEPATHSNVPROC
epoxy_glDeletePathsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 9229 /* glDeletePathsNV */);
}

static PFNGLDELETEPERFMONITORSAMDPROC
epoxy_glDeletePerfMonitorsAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 9245 /* glDeletePerfMonitorsAMD */);
}

static PFNGLDELETEPERFQUERYINTELPROC
epoxy_glDeletePerfQueryINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 9269 /* glDeletePerfQueryINTEL */);
}

static PFNGLDELETEPROGRAMPROC
epoxy_glDeleteProgram_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9292 /* "glDeleteProgram" */,
        9292 /* "glDeleteProgram" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9292 /* "glDeleteProgram" */,
                                providers, entrypoints);
}

static PFNGLDELETEPROGRAMPIPELINESPROC
epoxy_glDeleteProgramPipelines_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9308 /* "glDeleteProgramPipelines" */,
        9308 /* "glDeleteProgramPipelines" */,
        9308 /* "glDeleteProgramPipelines" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9308 /* "glDeleteProgramPipelines" */,
                                providers, entrypoints);
}

static PFNGLDELETEPROGRAMPIPELINESEXTPROC
epoxy_glDeleteProgramPipelinesEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 9333 /* glDeleteProgramPipelinesEXT */);
}

static PFNGLDELETEPROGRAMSARBPROC
epoxy_glDeleteProgramsARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9361 /* "glDeleteProgramsARB" */,
        9361 /* "glDeleteProgramsARB" */,
        9381 /* "glDeleteProgramsNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9361 /* "glDeleteProgramsARB" */,
                                providers, entrypoints);
}

static PFNGLDELETEPROGRAMSNVPROC
epoxy_glDeleteProgramsNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9381 /* "glDeleteProgramsNV" */,
        9361 /* "glDeleteProgramsARB" */,
        9361 /* "glDeleteProgramsARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9381 /* "glDeleteProgramsNV" */,
                                providers, entrypoints);
}

static PFNGLDELETEQUERIESPROC
epoxy_glDeleteQueries_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_occlusion_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9400 /* "glDeleteQueries" */,
        9400 /* "glDeleteQueries" */,
        9416 /* "glDeleteQueriesARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9400 /* "glDeleteQueries" */,
                                providers, entrypoints);
}

static PFNGLDELETEQUERIESARBPROC
epoxy_glDeleteQueriesARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_occlusion_query,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9416 /* "glDeleteQueriesARB" */,
        9400 /* "glDeleteQueries" */,
        9400 /* "glDeleteQueries" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9416 /* "glDeleteQueriesARB" */,
                                providers, entrypoints);
}

static PFNGLDELETEQUERIESEXTPROC
epoxy_glDeleteQueriesEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_occlusion_query_boolean,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9435 /* "glDeleteQueriesEXT" */,
        9435 /* "glDeleteQueriesEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9435 /* "glDeleteQueriesEXT" */,
                                providers, entrypoints);
}

static PFNGLDELETERENDERBUFFERSPROC
epoxy_glDeleteRenderbuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9454 /* "glDeleteRenderbuffers" */,
        9454 /* "glDeleteRenderbuffers" */,
        9454 /* "glDeleteRenderbuffers" */,
        9476 /* "glDeleteRenderbuffersEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9454 /* "glDeleteRenderbuffers" */,
                                providers, entrypoints);
}

static PFNGLDELETERENDERBUFFERSEXTPROC
epoxy_glDeleteRenderbuffersEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9476 /* "glDeleteRenderbuffersEXT" */,
        9454 /* "glDeleteRenderbuffers" */,
        9454 /* "glDeleteRenderbuffers" */,
        9454 /* "glDeleteRenderbuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9476 /* "glDeleteRenderbuffersEXT" */,
                                providers, entrypoints);
}

static PFNGLDELETERENDERBUFFERSOESPROC
epoxy_glDeleteRenderbuffersOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 9501 /* glDeleteRenderbuffersOES */);
}

static PFNGLDELETESAMPLERSPROC
epoxy_glDeleteSamplers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9526 /* "glDeleteSamplers" */,
        9526 /* "glDeleteSamplers" */,
        9526 /* "glDeleteSamplers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9526 /* "glDeleteSamplers" */,
                                providers, entrypoints);
}

static PFNGLDELETESHADERPROC
epoxy_glDeleteShader_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9543 /* "glDeleteShader" */,
        9543 /* "glDeleteShader" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9543 /* "glDeleteShader" */,
                                providers, entrypoints);
}

static PFNGLDELETESTATESNVPROC
epoxy_glDeleteStatesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 9558 /* glDeleteStatesNV */);
}

static PFNGLDELETESYNCPROC
epoxy_glDeleteSync_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_sync,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9575 /* "glDeleteSync" */,
        9575 /* "glDeleteSync" */,
        9575 /* "glDeleteSync" */,
        9588 /* "glDeleteSyncAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9575 /* "glDeleteSync" */,
                                providers, entrypoints);
}

static PFNGLDELETESYNCAPPLEPROC
epoxy_glDeleteSyncAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_sync,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9588 /* "glDeleteSyncAPPLE" */,
        9575 /* "glDeleteSync" */,
        9575 /* "glDeleteSync" */,
        9575 /* "glDeleteSync" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9588 /* "glDeleteSyncAPPLE" */,
                                providers, entrypoints);
}

static PFNGLDELETETEXTURESPROC
epoxy_glDeleteTextures_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9606 /* "glDeleteTextures" */,
        9606 /* "glDeleteTextures" */,
        9606 /* "glDeleteTextures" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9606 /* "glDeleteTextures" */,
                                providers, entrypoints);
}

static PFNGLDELETETEXTURESEXTPROC
epoxy_glDeleteTexturesEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_texture_object, 9623 /* glDeleteTexturesEXT */);
}

static PFNGLDELETETRANSFORMFEEDBACKSPROC
epoxy_glDeleteTransformFeedbacks_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_transform_feedback2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9643 /* "glDeleteTransformFeedbacks" */,
        9643 /* "glDeleteTransformFeedbacks" */,
        9643 /* "glDeleteTransformFeedbacks" */,
        9670 /* "glDeleteTransformFeedbacksNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9643 /* "glDeleteTransformFeedbacks" */,
                                providers, entrypoints);
}

static PFNGLDELETETRANSFORMFEEDBACKSNVPROC
epoxy_glDeleteTransformFeedbacksNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback2,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9670 /* "glDeleteTransformFeedbacksNV" */,
        9643 /* "glDeleteTransformFeedbacks" */,
        9643 /* "glDeleteTransformFeedbacks" */,
        9643 /* "glDeleteTransformFeedbacks" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9670 /* "glDeleteTransformFeedbacksNV" */,
                                providers, entrypoints);
}

static PFNGLDELETEVERTEXARRAYSPROC
epoxy_glDeleteVertexArrays_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_vertex_array_object,
        GL_extension_GL_OES_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9699 /* "glDeleteVertexArrays" */,
        9699 /* "glDeleteVertexArrays" */,
        9699 /* "glDeleteVertexArrays" */,
        9720 /* "glDeleteVertexArraysAPPLE" */,
        9746 /* "glDeleteVertexArraysOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9699 /* "glDeleteVertexArrays" */,
                                providers, entrypoints);
}

static PFNGLDELETEVERTEXARRAYSAPPLEPROC
epoxy_glDeleteVertexArraysAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_vertex_array_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9720 /* "glDeleteVertexArraysAPPLE" */,
        9699 /* "glDeleteVertexArrays" */,
        9699 /* "glDeleteVertexArrays" */,
        9699 /* "glDeleteVertexArrays" */,
        9746 /* "glDeleteVertexArraysOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9720 /* "glDeleteVertexArraysAPPLE" */,
                                providers, entrypoints);
}

static PFNGLDELETEVERTEXARRAYSOESPROC
epoxy_glDeleteVertexArraysOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_vertex_array_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9746 /* "glDeleteVertexArraysOES" */,
        9699 /* "glDeleteVertexArrays" */,
        9699 /* "glDeleteVertexArrays" */,
        9699 /* "glDeleteVertexArrays" */,
        9720 /* "glDeleteVertexArraysAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9746 /* "glDeleteVertexArraysOES" */,
                                providers, entrypoints);
}

static PFNGLDELETEVERTEXSHADEREXTPROC
epoxy_glDeleteVertexShaderEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 9770 /* glDeleteVertexShaderEXT */);
}

static PFNGLDEPTHBOUNDSEXTPROC
epoxy_glDepthBoundsEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_depth_bounds_test, 9794 /* glDepthBoundsEXT */);
}

static PFNGLDEPTHBOUNDSDNVPROC
epoxy_glDepthBoundsdNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_depth_buffer_float, 9811 /* glDepthBoundsdNV */);
}

static PFNGLDEPTHFUNCPROC
epoxy_glDepthFunc_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9828 /* "glDepthFunc" */,
        9828 /* "glDepthFunc" */,
        9828 /* "glDepthFunc" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9828 /* "glDepthFunc" */,
                                providers, entrypoints);
}

static PFNGLDEPTHMASKPROC
epoxy_glDepthMask_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9840 /* "glDepthMask" */,
        9840 /* "glDepthMask" */,
        9840 /* "glDepthMask" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9840 /* "glDepthMask" */,
                                providers, entrypoints);
}

static PFNGLDEPTHRANGEPROC
epoxy_glDepthRange_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 9852 /* glDepthRange */);
}

static PFNGLDEPTHRANGEARRAYFVNVPROC
epoxy_glDepthRangeArrayfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_viewport_array, 9865 /* glDepthRangeArrayfvNV */);
}

static PFNGLDEPTHRANGEARRAYVPROC
epoxy_glDepthRangeArrayv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9887 /* "glDepthRangeArrayv" */,
        9887 /* "glDepthRangeArrayv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9887 /* "glDepthRangeArrayv" */,
                                providers, entrypoints);
}

static PFNGLDEPTHRANGEINDEXEDPROC
epoxy_glDepthRangeIndexed_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9906 /* "glDepthRangeIndexed" */,
        9906 /* "glDepthRangeIndexed" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9906 /* "glDepthRangeIndexed" */,
                                providers, entrypoints);
}

static PFNGLDEPTHRANGEINDEXEDFNVPROC
epoxy_glDepthRangeIndexedfNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_viewport_array, 9926 /* glDepthRangeIndexedfNV */);
}

static PFNGLDEPTHRANGEDNVPROC
epoxy_glDepthRangedNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_depth_buffer_float, 9949 /* glDepthRangedNV */);
}

static PFNGLDEPTHRANGEFPROC
epoxy_glDepthRangef_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_ES2_compatibility,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_OES_single_precision,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9965 /* "glDepthRangef" */,
        9965 /* "glDepthRangef" */,
        9965 /* "glDepthRangef" */,
        9965 /* "glDepthRangef" */,
        9979 /* "glDepthRangefOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9965 /* "glDepthRangef" */,
                                providers, entrypoints);
}

static PFNGLDEPTHRANGEFOESPROC
epoxy_glDepthRangefOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_single_precision,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_ES2_compatibility,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        9979 /* "glDepthRangefOES" */,
        9965 /* "glDepthRangef" */,
        9965 /* "glDepthRangef" */,
        9965 /* "glDepthRangef" */,
        9965 /* "glDepthRangef" */,
    };
    return gl_provider_resolver(entrypoint_strings + 9979 /* "glDepthRangefOES" */,
                                providers, entrypoints);
}

static PFNGLDEPTHRANGEXPROC
epoxy_glDepthRangex_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 9996 /* glDepthRangex */);
}

static PFNGLDEPTHRANGEXOESPROC
epoxy_glDepthRangexOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 10010 /* glDepthRangexOES */);
}

static PFNGLDETACHOBJECTARBPROC
epoxy_glDetachObjectARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10027 /* "glDetachObjectARB" */,
        10045 /* "glDetachShader" */,
        10045 /* "glDetachShader" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10027 /* "glDetachObjectARB" */,
                                providers, entrypoints);
}

static PFNGLDETACHSHADERPROC
epoxy_glDetachShader_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10045 /* "glDetachShader" */,
        10045 /* "glDetachShader" */,
        10027 /* "glDetachObjectARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10045 /* "glDetachShader" */,
                                providers, entrypoints);
}

static PFNGLDETAILTEXFUNCSGISPROC
epoxy_glDetailTexFuncSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_detail_texture, 10060 /* glDetailTexFuncSGIS */);
}

static PFNGLDISABLEPROC
epoxy_glDisable_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10080 /* "glDisable" */,
        10080 /* "glDisable" */,
        10080 /* "glDisable" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10080 /* "glDisable" */,
                                providers, entrypoints);
}

static PFNGLDISABLECLIENTSTATEPROC
epoxy_glDisableClientState_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10090 /* "glDisableClientState" */,
        10090 /* "glDisableClientState" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10090 /* "glDisableClientState" */,
                                providers, entrypoints);
}

static PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
epoxy_glDisableClientStateIndexedEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 10111 /* glDisableClientStateIndexedEXT */);
}

static PFNGLDISABLECLIENTSTATEIEXTPROC
epoxy_glDisableClientStateiEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 10142 /* glDisableClientStateiEXT */);
}

static PFNGLDISABLEDRIVERCONTROLQCOMPROC
epoxy_glDisableDriverControlQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_driver_control, 10167 /* glDisableDriverControlQCOM */);
}

static PFNGLDISABLEINDEXEDEXTPROC
epoxy_glDisableIndexedEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10194 /* "glDisableIndexedEXT" */,
        10194 /* "glDisableIndexedEXT" */,
        10410 /* "glDisablei" */,
        10421 /* "glDisableiEXT" */,
        10435 /* "glDisableiNV" */,
        10448 /* "glDisableiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10194 /* "glDisableIndexedEXT" */,
                                providers, entrypoints);
}

static PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
epoxy_glDisableVariantClientStateEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 10214 /* glDisableVariantClientStateEXT */);
}

static PFNGLDISABLEVERTEXARRAYATTRIBPROC
epoxy_glDisableVertexArrayAttrib_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10245 /* "glDisableVertexArrayAttrib" */,
        10245 /* "glDisableVertexArrayAttrib" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10245 /* "glDisableVertexArrayAttrib" */,
                                providers, entrypoints);
}

static PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC
epoxy_glDisableVertexArrayAttribEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 10272 /* glDisableVertexArrayAttribEXT */);
}

static PFNGLDISABLEVERTEXARRAYEXTPROC
epoxy_glDisableVertexArrayEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 10302 /* glDisableVertexArrayEXT */);
}

static PFNGLDISABLEVERTEXATTRIBAPPLEPROC
epoxy_glDisableVertexAttribAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 10326 /* glDisableVertexAttribAPPLE */);
}

static PFNGLDISABLEVERTEXATTRIBARRAYPROC
epoxy_glDisableVertexAttribArray_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10353 /* "glDisableVertexAttribArray" */,
        10353 /* "glDisableVertexAttribArray" */,
        10380 /* "glDisableVertexAttribArrayARB" */,
        10380 /* "glDisableVertexAttribArrayARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10353 /* "glDisableVertexAttribArray" */,
                                providers, entrypoints);
}

static PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
epoxy_glDisableVertexAttribArrayARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10380 /* "glDisableVertexAttribArrayARB" */,
        10380 /* "glDisableVertexAttribArrayARB" */,
        10353 /* "glDisableVertexAttribArray" */,
        10353 /* "glDisableVertexAttribArray" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10380 /* "glDisableVertexAttribArrayARB" */,
                                providers, entrypoints);
}

static PFNGLDISABLEIPROC
epoxy_glDisablei_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10410 /* "glDisablei" */,
        10194 /* "glDisableIndexedEXT" */,
        10194 /* "glDisableIndexedEXT" */,
        10421 /* "glDisableiEXT" */,
        10435 /* "glDisableiNV" */,
        10448 /* "glDisableiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10410 /* "glDisablei" */,
                                providers, entrypoints);
}

static PFNGLDISABLEIEXTPROC
epoxy_glDisableiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10421 /* "glDisableiEXT" */,
        10194 /* "glDisableIndexedEXT" */,
        10194 /* "glDisableIndexedEXT" */,
        10410 /* "glDisablei" */,
        10435 /* "glDisableiNV" */,
        10448 /* "glDisableiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10421 /* "glDisableiEXT" */,
                                providers, entrypoints);
}

static PFNGLDISABLEINVPROC
epoxy_glDisableiNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10435 /* "glDisableiNV" */,
        10194 /* "glDisableIndexedEXT" */,
        10194 /* "glDisableIndexedEXT" */,
        10410 /* "glDisablei" */,
        10421 /* "glDisableiEXT" */,
        10448 /* "glDisableiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10435 /* "glDisableiNV" */,
                                providers, entrypoints);
}

static PFNGLDISABLEIOESPROC
epoxy_glDisableiOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_buffers_indexed,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10448 /* "glDisableiOES" */,
        10194 /* "glDisableIndexedEXT" */,
        10194 /* "glDisableIndexedEXT" */,
        10410 /* "glDisablei" */,
        10421 /* "glDisableiEXT" */,
        10435 /* "glDisableiNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10448 /* "glDisableiOES" */,
                                providers, entrypoints);
}

static PFNGLDISCARDFRAMEBUFFEREXTPROC
epoxy_glDiscardFramebufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_discard_framebuffer, 10462 /* glDiscardFramebufferEXT */);
}

static PFNGLDISPATCHCOMPUTEPROC
epoxy_glDispatchCompute_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_compute_shader,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10486 /* "glDispatchCompute" */,
        10486 /* "glDispatchCompute" */,
        10486 /* "glDispatchCompute" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10486 /* "glDispatchCompute" */,
                                providers, entrypoints);
}

static PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC
epoxy_glDispatchComputeGroupSizeARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_compute_variable_group_size, 10504 /* glDispatchComputeGroupSizeARB */);
}

static PFNGLDISPATCHCOMPUTEINDIRECTPROC
epoxy_glDispatchComputeIndirect_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_compute_shader,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10534 /* "glDispatchComputeIndirect" */,
        10534 /* "glDispatchComputeIndirect" */,
        10534 /* "glDispatchComputeIndirect" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10534 /* "glDispatchComputeIndirect" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSPROC
epoxy_glDrawArrays_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_vertex_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10560 /* "glDrawArrays" */,
        10560 /* "glDrawArrays" */,
        10560 /* "glDrawArrays" */,
        10573 /* "glDrawArraysEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10560 /* "glDrawArrays" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSEXTPROC
epoxy_glDrawArraysEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_array,
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10573 /* "glDrawArraysEXT" */,
        10560 /* "glDrawArrays" */,
        10560 /* "glDrawArrays" */,
        10560 /* "glDrawArrays" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10573 /* "glDrawArraysEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSINDIRECTPROC
epoxy_glDrawArraysIndirect_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_indirect,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10589 /* "glDrawArraysIndirect" */,
        10589 /* "glDrawArraysIndirect" */,
        10589 /* "glDrawArraysIndirect" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10589 /* "glDrawArraysIndirect" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSINSTANCEDPROC
epoxy_glDrawArraysInstanced_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_ARB_draw_instanced,
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        GL_extension_GL_NV_draw_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10610 /* "glDrawArraysInstanced" */,
        10610 /* "glDrawArraysInstanced" */,
        10632 /* "glDrawArraysInstancedANGLE" */,
        10659 /* "glDrawArraysInstancedARB" */,
        10755 /* "glDrawArraysInstancedEXT" */,
        10755 /* "glDrawArraysInstancedEXT" */,
        10780 /* "glDrawArraysInstancedNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10610 /* "glDrawArraysInstanced" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSINSTANCEDANGLEPROC
epoxy_glDrawArraysInstancedANGLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ANGLE_instanced_arrays,
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_draw_instanced,
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        GL_extension_GL_NV_draw_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10632 /* "glDrawArraysInstancedANGLE" */,
        10610 /* "glDrawArraysInstanced" */,
        10610 /* "glDrawArraysInstanced" */,
        10659 /* "glDrawArraysInstancedARB" */,
        10755 /* "glDrawArraysInstancedEXT" */,
        10755 /* "glDrawArraysInstancedEXT" */,
        10780 /* "glDrawArraysInstancedNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10632 /* "glDrawArraysInstancedANGLE" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSINSTANCEDARBPROC
epoxy_glDrawArraysInstancedARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_draw_instanced,
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        GL_extension_GL_NV_draw_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10659 /* "glDrawArraysInstancedARB" */,
        10610 /* "glDrawArraysInstanced" */,
        10610 /* "glDrawArraysInstanced" */,
        10632 /* "glDrawArraysInstancedANGLE" */,
        10755 /* "glDrawArraysInstancedEXT" */,
        10755 /* "glDrawArraysInstancedEXT" */,
        10780 /* "glDrawArraysInstancedNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10659 /* "glDrawArraysInstancedARB" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
epoxy_glDrawArraysInstancedBaseInstance_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_base_instance,
        GL_extension_GL_EXT_base_instance,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10684 /* "glDrawArraysInstancedBaseInstance" */,
        10684 /* "glDrawArraysInstancedBaseInstance" */,
        10718 /* "glDrawArraysInstancedBaseInstanceEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10684 /* "glDrawArraysInstancedBaseInstance" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC
epoxy_glDrawArraysInstancedBaseInstanceEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_base_instance,
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_base_instance,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10718 /* "glDrawArraysInstancedBaseInstanceEXT" */,
        10684 /* "glDrawArraysInstancedBaseInstance" */,
        10684 /* "glDrawArraysInstancedBaseInstance" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10718 /* "glDrawArraysInstancedBaseInstanceEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSINSTANCEDEXTPROC
epoxy_glDrawArraysInstancedEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_ARB_draw_instanced,
        GL_extension_GL_NV_draw_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10755 /* "glDrawArraysInstancedEXT" */,
        10755 /* "glDrawArraysInstancedEXT" */,
        10610 /* "glDrawArraysInstanced" */,
        10610 /* "glDrawArraysInstanced" */,
        10632 /* "glDrawArraysInstancedANGLE" */,
        10659 /* "glDrawArraysInstancedARB" */,
        10780 /* "glDrawArraysInstancedNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10755 /* "glDrawArraysInstancedEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWARRAYSINSTANCEDNVPROC
epoxy_glDrawArraysInstancedNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_draw_instanced,
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_ARB_draw_instanced,
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10780 /* "glDrawArraysInstancedNV" */,
        10610 /* "glDrawArraysInstanced" */,
        10610 /* "glDrawArraysInstanced" */,
        10632 /* "glDrawArraysInstancedANGLE" */,
        10659 /* "glDrawArraysInstancedARB" */,
        10755 /* "glDrawArraysInstancedEXT" */,
        10755 /* "glDrawArraysInstancedEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10780 /* "glDrawArraysInstancedNV" */,
                                providers, entrypoints);
}

static PFNGLDRAWBUFFERPROC
epoxy_glDrawBuffer_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 10804 /* glDrawBuffer */);
}

static PFNGLDRAWBUFFERSPROC
epoxy_glDrawBuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_draw_buffers,
        GL_extension_GL_ATI_draw_buffers,
        GL_extension_GL_EXT_draw_buffers,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10817 /* "glDrawBuffers" */,
        10817 /* "glDrawBuffers" */,
        10831 /* "glDrawBuffersARB" */,
        10848 /* "glDrawBuffersATI" */,
        10865 /* "glDrawBuffersEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10817 /* "glDrawBuffers" */,
                                providers, entrypoints);
}

static PFNGLDRAWBUFFERSARBPROC
epoxy_glDrawBuffersARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_draw_buffers,
        Desktop_OpenGL_2_0,
        OpenGL_ES_3_0,
        GL_extension_GL_ATI_draw_buffers,
        GL_extension_GL_EXT_draw_buffers,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10831 /* "glDrawBuffersARB" */,
        10817 /* "glDrawBuffers" */,
        10817 /* "glDrawBuffers" */,
        10848 /* "glDrawBuffersATI" */,
        10865 /* "glDrawBuffersEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10831 /* "glDrawBuffersARB" */,
                                providers, entrypoints);
}

static PFNGLDRAWBUFFERSATIPROC
epoxy_glDrawBuffersATI_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ATI_draw_buffers,
        Desktop_OpenGL_2_0,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_draw_buffers,
        GL_extension_GL_EXT_draw_buffers,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10848 /* "glDrawBuffersATI" */,
        10817 /* "glDrawBuffers" */,
        10817 /* "glDrawBuffers" */,
        10831 /* "glDrawBuffersARB" */,
        10865 /* "glDrawBuffersEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10848 /* "glDrawBuffersATI" */,
                                providers, entrypoints);
}

static PFNGLDRAWBUFFERSEXTPROC
epoxy_glDrawBuffersEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers,
        Desktop_OpenGL_2_0,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_draw_buffers,
        GL_extension_GL_ATI_draw_buffers,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        10865 /* "glDrawBuffersEXT" */,
        10817 /* "glDrawBuffers" */,
        10817 /* "glDrawBuffers" */,
        10831 /* "glDrawBuffersARB" */,
        10848 /* "glDrawBuffersATI" */,
    };
    return gl_provider_resolver(entrypoint_strings + 10865 /* "glDrawBuffersEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWBUFFERSINDEXEDEXTPROC
epoxy_glDrawBuffersIndexedEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_multiview_draw_buffers, 10882 /* glDrawBuffersIndexedEXT */);
}

static PFNGLDRAWBUFFERSNVPROC
epoxy_glDrawBuffersNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_draw_buffers, 10906 /* glDrawBuffersNV */);
}

static PFNGLDRAWCOMMANDSADDRESSNVPROC
epoxy_glDrawCommandsAddressNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 10922 /* glDrawCommandsAddressNV */);
}

static PFNGLDRAWCOMMANDSNVPROC
epoxy_glDrawCommandsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 10946 /* glDrawCommandsNV */);
}

static PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC
epoxy_glDrawCommandsStatesAddressNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 10963 /* glDrawCommandsStatesAddressNV */);
}

static PFNGLDRAWCOMMANDSSTATESNVPROC
epoxy_glDrawCommandsStatesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 10993 /* glDrawCommandsStatesNV */);
}

static PFNGLDRAWELEMENTARRAYAPPLEPROC
epoxy_glDrawElementArrayAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 11016 /* glDrawElementArrayAPPLE */);
}

static PFNGLDRAWELEMENTARRAYATIPROC
epoxy_glDrawElementArrayATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_element_array, 11040 /* glDrawElementArrayATI */);
}

static PFNGLDRAWELEMENTSPROC
epoxy_glDrawElements_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11062 /* "glDrawElements" */,
        11062 /* "glDrawElements" */,
        11062 /* "glDrawElements" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11062 /* "glDrawElements" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSBASEVERTEXPROC
epoxy_glDrawElementsBaseVertex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_EXT_draw_elements_base_vertex,
        GL_extension_GL_OES_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11077 /* "glDrawElementsBaseVertex" */,
        11077 /* "glDrawElementsBaseVertex" */,
        11102 /* "glDrawElementsBaseVertexEXT" */,
        11130 /* "glDrawElementsBaseVertexOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11077 /* "glDrawElementsBaseVertex" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSBASEVERTEXEXTPROC
epoxy_glDrawElementsBaseVertexEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_elements_base_vertex,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_OES_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11102 /* "glDrawElementsBaseVertexEXT" */,
        11077 /* "glDrawElementsBaseVertex" */,
        11077 /* "glDrawElementsBaseVertex" */,
        11130 /* "glDrawElementsBaseVertexOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11102 /* "glDrawElementsBaseVertexEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSBASEVERTEXOESPROC
epoxy_glDrawElementsBaseVertexOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_elements_base_vertex,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_EXT_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11130 /* "glDrawElementsBaseVertexOES" */,
        11077 /* "glDrawElementsBaseVertex" */,
        11077 /* "glDrawElementsBaseVertex" */,
        11102 /* "glDrawElementsBaseVertexEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11130 /* "glDrawElementsBaseVertexOES" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINDIRECTPROC
epoxy_glDrawElementsIndirect_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_draw_indirect,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11158 /* "glDrawElementsIndirect" */,
        11158 /* "glDrawElementsIndirect" */,
        11158 /* "glDrawElementsIndirect" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11158 /* "glDrawElementsIndirect" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDPROC
epoxy_glDrawElementsInstanced_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_ARB_draw_instanced,
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        GL_extension_GL_NV_draw_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11181 /* "glDrawElementsInstanced" */,
        11181 /* "glDrawElementsInstanced" */,
        11205 /* "glDrawElementsInstancedANGLE" */,
        11234 /* "glDrawElementsInstancedARB" */,
        11539 /* "glDrawElementsInstancedEXT" */,
        11539 /* "glDrawElementsInstancedEXT" */,
        11566 /* "glDrawElementsInstancedNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11181 /* "glDrawElementsInstanced" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDANGLEPROC
epoxy_glDrawElementsInstancedANGLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ANGLE_instanced_arrays,
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_draw_instanced,
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        GL_extension_GL_NV_draw_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11205 /* "glDrawElementsInstancedANGLE" */,
        11181 /* "glDrawElementsInstanced" */,
        11181 /* "glDrawElementsInstanced" */,
        11234 /* "glDrawElementsInstancedARB" */,
        11539 /* "glDrawElementsInstancedEXT" */,
        11539 /* "glDrawElementsInstancedEXT" */,
        11566 /* "glDrawElementsInstancedNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11205 /* "glDrawElementsInstancedANGLE" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDARBPROC
epoxy_glDrawElementsInstancedARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_draw_instanced,
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        GL_extension_GL_NV_draw_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11234 /* "glDrawElementsInstancedARB" */,
        11181 /* "glDrawElementsInstanced" */,
        11181 /* "glDrawElementsInstanced" */,
        11205 /* "glDrawElementsInstancedANGLE" */,
        11539 /* "glDrawElementsInstancedEXT" */,
        11539 /* "glDrawElementsInstancedEXT" */,
        11566 /* "glDrawElementsInstancedNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11234 /* "glDrawElementsInstancedARB" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
epoxy_glDrawElementsInstancedBaseInstance_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_base_instance,
        GL_extension_GL_EXT_base_instance,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11261 /* "glDrawElementsInstancedBaseInstance" */,
        11261 /* "glDrawElementsInstancedBaseInstance" */,
        11297 /* "glDrawElementsInstancedBaseInstanceEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11261 /* "glDrawElementsInstancedBaseInstance" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC
epoxy_glDrawElementsInstancedBaseInstanceEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_base_instance,
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_base_instance,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11297 /* "glDrawElementsInstancedBaseInstanceEXT" */,
        11261 /* "glDrawElementsInstancedBaseInstance" */,
        11261 /* "glDrawElementsInstancedBaseInstance" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11297 /* "glDrawElementsInstancedBaseInstanceEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
epoxy_glDrawElementsInstancedBaseVertex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_EXT_draw_elements_base_vertex,
        GL_extension_GL_OES_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11336 /* "glDrawElementsInstancedBaseVertex" */,
        11336 /* "glDrawElementsInstancedBaseVertex" */,
        11465 /* "glDrawElementsInstancedBaseVertexEXT" */,
        11502 /* "glDrawElementsInstancedBaseVertexOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11336 /* "glDrawElementsInstancedBaseVertex" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
epoxy_glDrawElementsInstancedBaseVertexBaseInstance_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_base_instance,
        GL_extension_GL_EXT_base_instance,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11370 /* "glDrawElementsInstancedBaseVertexBaseInstance" */,
        11370 /* "glDrawElementsInstancedBaseVertexBaseInstance" */,
        11416 /* "glDrawElementsInstancedBaseVertexBaseInstanceEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11370 /* "glDrawElementsInstancedBaseVertexBaseInstance" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC
epoxy_glDrawElementsInstancedBaseVertexBaseInstanceEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_base_instance,
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_base_instance,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11416 /* "glDrawElementsInstancedBaseVertexBaseInstanceEXT" */,
        11370 /* "glDrawElementsInstancedBaseVertexBaseInstance" */,
        11370 /* "glDrawElementsInstancedBaseVertexBaseInstance" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11416 /* "glDrawElementsInstancedBaseVertexBaseInstanceEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC
epoxy_glDrawElementsInstancedBaseVertexEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_elements_base_vertex,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_OES_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11465 /* "glDrawElementsInstancedBaseVertexEXT" */,
        11336 /* "glDrawElementsInstancedBaseVertex" */,
        11336 /* "glDrawElementsInstancedBaseVertex" */,
        11502 /* "glDrawElementsInstancedBaseVertexOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11465 /* "glDrawElementsInstancedBaseVertexEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC
epoxy_glDrawElementsInstancedBaseVertexOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_elements_base_vertex,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_EXT_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11502 /* "glDrawElementsInstancedBaseVertexOES" */,
        11336 /* "glDrawElementsInstancedBaseVertex" */,
        11336 /* "glDrawElementsInstancedBaseVertex" */,
        11465 /* "glDrawElementsInstancedBaseVertexEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11502 /* "glDrawElementsInstancedBaseVertexOES" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDEXTPROC
epoxy_glDrawElementsInstancedEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_ARB_draw_instanced,
        GL_extension_GL_NV_draw_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11539 /* "glDrawElementsInstancedEXT" */,
        11539 /* "glDrawElementsInstancedEXT" */,
        11181 /* "glDrawElementsInstanced" */,
        11181 /* "glDrawElementsInstanced" */,
        11205 /* "glDrawElementsInstancedANGLE" */,
        11234 /* "glDrawElementsInstancedARB" */,
        11566 /* "glDrawElementsInstancedNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11539 /* "glDrawElementsInstancedEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWELEMENTSINSTANCEDNVPROC
epoxy_glDrawElementsInstancedNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_draw_instanced,
        Desktop_OpenGL_3_1,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_ARB_draw_instanced,
        GL_extension_GL_EXT_draw_instanced,
        GL_extension_GL_EXT_instanced_arrays,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11566 /* "glDrawElementsInstancedNV" */,
        11181 /* "glDrawElementsInstanced" */,
        11181 /* "glDrawElementsInstanced" */,
        11205 /* "glDrawElementsInstancedANGLE" */,
        11234 /* "glDrawElementsInstancedARB" */,
        11539 /* "glDrawElementsInstancedEXT" */,
        11539 /* "glDrawElementsInstancedEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11566 /* "glDrawElementsInstancedNV" */,
                                providers, entrypoints);
}

static PFNGLDRAWMESHARRAYSSUNPROC
epoxy_glDrawMeshArraysSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_mesh_array, 11592 /* glDrawMeshArraysSUN */);
}

static PFNGLDRAWPIXELSPROC
epoxy_glDrawPixels_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 11612 /* glDrawPixels */);
}

static PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
epoxy_glDrawRangeElementArrayAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 11625 /* glDrawRangeElementArrayAPPLE */);
}

static PFNGLDRAWRANGEELEMENTARRAYATIPROC
epoxy_glDrawRangeElementArrayATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_element_array, 11654 /* glDrawRangeElementArrayATI */);
}

static PFNGLDRAWRANGEELEMENTSPROC
epoxy_glDrawRangeElements_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_draw_range_elements,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11681 /* "glDrawRangeElements" */,
        11681 /* "glDrawRangeElements" */,
        11797 /* "glDrawRangeElementsEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11681 /* "glDrawRangeElements" */,
                                providers, entrypoints);
}

static PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
epoxy_glDrawRangeElementsBaseVertex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_EXT_draw_elements_base_vertex,
        GL_extension_GL_OES_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11701 /* "glDrawRangeElementsBaseVertex" */,
        11701 /* "glDrawRangeElementsBaseVertex" */,
        11731 /* "glDrawRangeElementsBaseVertexEXT" */,
        11764 /* "glDrawRangeElementsBaseVertexOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11701 /* "glDrawRangeElementsBaseVertex" */,
                                providers, entrypoints);
}

static PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC
epoxy_glDrawRangeElementsBaseVertexEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_elements_base_vertex,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_OES_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11731 /* "glDrawRangeElementsBaseVertexEXT" */,
        11701 /* "glDrawRangeElementsBaseVertex" */,
        11701 /* "glDrawRangeElementsBaseVertex" */,
        11764 /* "glDrawRangeElementsBaseVertexOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11731 /* "glDrawRangeElementsBaseVertexEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC
epoxy_glDrawRangeElementsBaseVertexOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_elements_base_vertex,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_EXT_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11764 /* "glDrawRangeElementsBaseVertexOES" */,
        11701 /* "glDrawRangeElementsBaseVertex" */,
        11701 /* "glDrawRangeElementsBaseVertex" */,
        11731 /* "glDrawRangeElementsBaseVertexEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11764 /* "glDrawRangeElementsBaseVertexOES" */,
                                providers, entrypoints);
}

static PFNGLDRAWRANGEELEMENTSEXTPROC
epoxy_glDrawRangeElementsEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_range_elements,
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11797 /* "glDrawRangeElementsEXT" */,
        11681 /* "glDrawRangeElements" */,
        11681 /* "glDrawRangeElements" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11797 /* "glDrawRangeElementsEXT" */,
                                providers, entrypoints);
}

static PFNGLDRAWTEXFOESPROC
epoxy_glDrawTexfOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 11820 /* glDrawTexfOES */);
}

static PFNGLDRAWTEXFVOESPROC
epoxy_glDrawTexfvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 11834 /* glDrawTexfvOES */);
}

static PFNGLDRAWTEXIOESPROC
epoxy_glDrawTexiOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 11849 /* glDrawTexiOES */);
}

static PFNGLDRAWTEXIVOESPROC
epoxy_glDrawTexivOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 11863 /* glDrawTexivOES */);
}

static PFNGLDRAWTEXSOESPROC
epoxy_glDrawTexsOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 11878 /* glDrawTexsOES */);
}

static PFNGLDRAWTEXSVOESPROC
epoxy_glDrawTexsvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 11892 /* glDrawTexsvOES */);
}

static PFNGLDRAWTEXTURENVPROC
epoxy_glDrawTextureNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_draw_texture, 11907 /* glDrawTextureNV */);
}

static PFNGLDRAWTEXXOESPROC
epoxy_glDrawTexxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 11923 /* glDrawTexxOES */);
}

static PFNGLDRAWTEXXVOESPROC
epoxy_glDrawTexxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 11937 /* glDrawTexxvOES */);
}

static PFNGLDRAWTRANSFORMFEEDBACKPROC
epoxy_glDrawTransformFeedback_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        GL_extension_GL_NV_transform_feedback2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11952 /* "glDrawTransformFeedback" */,
        11952 /* "glDrawTransformFeedback" */,
        12009 /* "glDrawTransformFeedbackNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11952 /* "glDrawTransformFeedback" */,
                                providers, entrypoints);
}

static PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
epoxy_glDrawTransformFeedbackInstanced_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_transform_feedback_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        11976 /* "glDrawTransformFeedbackInstanced" */,
        11976 /* "glDrawTransformFeedbackInstanced" */,
    };
    return gl_provider_resolver(entrypoint_strings + 11976 /* "glDrawTransformFeedbackInstanced" */,
                                providers, entrypoints);
}

static PFNGLDRAWTRANSFORMFEEDBACKNVPROC
epoxy_glDrawTransformFeedbackNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback2,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12009 /* "glDrawTransformFeedbackNV" */,
        11952 /* "glDrawTransformFeedback" */,
        11952 /* "glDrawTransformFeedback" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12009 /* "glDrawTransformFeedbackNV" */,
                                providers, entrypoints);
}

static PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
epoxy_glDrawTransformFeedbackStream_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12035 /* "glDrawTransformFeedbackStream" */,
        12035 /* "glDrawTransformFeedbackStream" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12035 /* "glDrawTransformFeedbackStream" */,
                                providers, entrypoints);
}

static PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
epoxy_glDrawTransformFeedbackStreamInstanced_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_transform_feedback_instanced,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12065 /* "glDrawTransformFeedbackStreamInstanced" */,
        12065 /* "glDrawTransformFeedbackStreamInstanced" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12065 /* "glDrawTransformFeedbackStreamInstanced" */,
                                providers, entrypoints);
}

static PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC
epoxy_glEGLImageTargetRenderbufferStorageOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_EGL_image, 12104 /* glEGLImageTargetRenderbufferStorageOES */);
}

static PFNGLEGLIMAGETARGETTEXTURE2DOESPROC
epoxy_glEGLImageTargetTexture2DOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_EGL_image, 12143 /* glEGLImageTargetTexture2DOES */);
}

static PFNGLEDGEFLAGPROC
epoxy_glEdgeFlag_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 12172 /* glEdgeFlag */);
}

static PFNGLEDGEFLAGFORMATNVPROC
epoxy_glEdgeFlagFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 12183 /* glEdgeFlagFormatNV */);
}

static PFNGLEDGEFLAGPOINTERPROC
epoxy_glEdgeFlagPointer_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_1, 12202 /* glEdgeFlagPointer */);
}

static PFNGLEDGEFLAGPOINTEREXTPROC
epoxy_glEdgeFlagPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 12220 /* glEdgeFlagPointerEXT */);
}

static PFNGLEDGEFLAGPOINTERLISTIBMPROC
epoxy_glEdgeFlagPointerListIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 12241 /* glEdgeFlagPointerListIBM */);
}

static PFNGLEDGEFLAGVPROC
epoxy_glEdgeFlagv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 12266 /* glEdgeFlagv */);
}

static PFNGLELEMENTPOINTERAPPLEPROC
epoxy_glElementPointerAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 12278 /* glElementPointerAPPLE */);
}

static PFNGLELEMENTPOINTERATIPROC
epoxy_glElementPointerATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_element_array, 12300 /* glElementPointerATI */);
}

static PFNGLENABLEPROC
epoxy_glEnable_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12320 /* "glEnable" */,
        12320 /* "glEnable" */,
        12320 /* "glEnable" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12320 /* "glEnable" */,
                                providers, entrypoints);
}

static PFNGLENABLECLIENTSTATEPROC
epoxy_glEnableClientState_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12329 /* "glEnableClientState" */,
        12329 /* "glEnableClientState" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12329 /* "glEnableClientState" */,
                                providers, entrypoints);
}

static PFNGLENABLECLIENTSTATEINDEXEDEXTPROC
epoxy_glEnableClientStateIndexedEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 12349 /* glEnableClientStateIndexedEXT */);
}

static PFNGLENABLECLIENTSTATEIEXTPROC
epoxy_glEnableClientStateiEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 12379 /* glEnableClientStateiEXT */);
}

static PFNGLENABLEDRIVERCONTROLQCOMPROC
epoxy_glEnableDriverControlQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_driver_control, 12403 /* glEnableDriverControlQCOM */);
}

static PFNGLENABLEINDEXEDEXTPROC
epoxy_glEnableIndexedEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12429 /* "glEnableIndexedEXT" */,
        12429 /* "glEnableIndexedEXT" */,
        12637 /* "glEnablei" */,
        12647 /* "glEnableiEXT" */,
        12660 /* "glEnableiNV" */,
        12672 /* "glEnableiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12429 /* "glEnableIndexedEXT" */,
                                providers, entrypoints);
}

static PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
epoxy_glEnableVariantClientStateEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 12448 /* glEnableVariantClientStateEXT */);
}

static PFNGLENABLEVERTEXARRAYATTRIBPROC
epoxy_glEnableVertexArrayAttrib_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12478 /* "glEnableVertexArrayAttrib" */,
        12478 /* "glEnableVertexArrayAttrib" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12478 /* "glEnableVertexArrayAttrib" */,
                                providers, entrypoints);
}

static PFNGLENABLEVERTEXARRAYATTRIBEXTPROC
epoxy_glEnableVertexArrayAttribEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 12504 /* glEnableVertexArrayAttribEXT */);
}

static PFNGLENABLEVERTEXARRAYEXTPROC
epoxy_glEnableVertexArrayEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 12533 /* glEnableVertexArrayEXT */);
}

static PFNGLENABLEVERTEXATTRIBAPPLEPROC
epoxy_glEnableVertexAttribAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 12556 /* glEnableVertexAttribAPPLE */);
}

static PFNGLENABLEVERTEXATTRIBARRAYPROC
epoxy_glEnableVertexAttribArray_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12582 /* "glEnableVertexAttribArray" */,
        12582 /* "glEnableVertexAttribArray" */,
        12608 /* "glEnableVertexAttribArrayARB" */,
        12608 /* "glEnableVertexAttribArrayARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12582 /* "glEnableVertexAttribArray" */,
                                providers, entrypoints);
}

static PFNGLENABLEVERTEXATTRIBARRAYARBPROC
epoxy_glEnableVertexAttribArrayARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12608 /* "glEnableVertexAttribArrayARB" */,
        12608 /* "glEnableVertexAttribArrayARB" */,
        12582 /* "glEnableVertexAttribArray" */,
        12582 /* "glEnableVertexAttribArray" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12608 /* "glEnableVertexAttribArrayARB" */,
                                providers, entrypoints);
}

static PFNGLENABLEIPROC
epoxy_glEnablei_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12637 /* "glEnablei" */,
        12429 /* "glEnableIndexedEXT" */,
        12429 /* "glEnableIndexedEXT" */,
        12647 /* "glEnableiEXT" */,
        12660 /* "glEnableiNV" */,
        12672 /* "glEnableiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12637 /* "glEnablei" */,
                                providers, entrypoints);
}

static PFNGLENABLEIEXTPROC
epoxy_glEnableiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12647 /* "glEnableiEXT" */,
        12429 /* "glEnableIndexedEXT" */,
        12429 /* "glEnableIndexedEXT" */,
        12637 /* "glEnablei" */,
        12660 /* "glEnableiNV" */,
        12672 /* "glEnableiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12647 /* "glEnableiEXT" */,
                                providers, entrypoints);
}

static PFNGLENABLEINVPROC
epoxy_glEnableiNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12660 /* "glEnableiNV" */,
        12429 /* "glEnableIndexedEXT" */,
        12429 /* "glEnableIndexedEXT" */,
        12637 /* "glEnablei" */,
        12647 /* "glEnableiEXT" */,
        12672 /* "glEnableiOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12660 /* "glEnableiNV" */,
                                providers, entrypoints);
}

static PFNGLENABLEIOESPROC
epoxy_glEnableiOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_buffers_indexed,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12672 /* "glEnableiOES" */,
        12429 /* "glEnableIndexedEXT" */,
        12429 /* "glEnableIndexedEXT" */,
        12637 /* "glEnablei" */,
        12647 /* "glEnableiEXT" */,
        12660 /* "glEnableiNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12672 /* "glEnableiOES" */,
                                providers, entrypoints);
}

static PFNGLENDPROC
epoxy_glEnd_unwrapped_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 12685 /* glEnd */);
}

static PFNGLENDCONDITIONALRENDERPROC
epoxy_glEndConditionalRender_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_conditional_render,
        GL_extension_GL_NVX_conditional_render,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12691 /* "glEndConditionalRender" */,
        12714 /* "glEndConditionalRenderNV" */,
        12739 /* "glEndConditionalRenderNVX" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12691 /* "glEndConditionalRender" */,
                                providers, entrypoints);
}

static PFNGLENDCONDITIONALRENDERNVPROC
epoxy_glEndConditionalRenderNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_conditional_render,
        Desktop_OpenGL_3_0,
        GL_extension_GL_NVX_conditional_render,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12714 /* "glEndConditionalRenderNV" */,
        12691 /* "glEndConditionalRender" */,
        12739 /* "glEndConditionalRenderNVX" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12714 /* "glEndConditionalRenderNV" */,
                                providers, entrypoints);
}

static PFNGLENDCONDITIONALRENDERNVXPROC
epoxy_glEndConditionalRenderNVX_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NVX_conditional_render,
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_conditional_render,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12739 /* "glEndConditionalRenderNVX" */,
        12691 /* "glEndConditionalRender" */,
        12714 /* "glEndConditionalRenderNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12739 /* "glEndConditionalRenderNVX" */,
                                providers, entrypoints);
}

static PFNGLENDFRAGMENTSHADERATIPROC
epoxy_glEndFragmentShaderATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 12765 /* glEndFragmentShaderATI */);
}

static PFNGLENDLISTPROC
epoxy_glEndList_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 12788 /* glEndList */);
}

static PFNGLENDOCCLUSIONQUERYNVPROC
epoxy_glEndOcclusionQueryNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 12798 /* glEndOcclusionQueryNV */);
}

static PFNGLENDPERFMONITORAMDPROC
epoxy_glEndPerfMonitorAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 12820 /* glEndPerfMonitorAMD */);
}

static PFNGLENDPERFQUERYINTELPROC
epoxy_glEndPerfQueryINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 12840 /* glEndPerfQueryINTEL */);
}

static PFNGLENDQUERYPROC
epoxy_glEndQuery_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_occlusion_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12860 /* "glEndQuery" */,
        12860 /* "glEndQuery" */,
        12871 /* "glEndQueryARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12860 /* "glEndQuery" */,
                                providers, entrypoints);
}

static PFNGLENDQUERYARBPROC
epoxy_glEndQueryARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_occlusion_query,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12871 /* "glEndQueryARB" */,
        12860 /* "glEndQuery" */,
        12860 /* "glEndQuery" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12871 /* "glEndQueryARB" */,
                                providers, entrypoints);
}

static PFNGLENDQUERYEXTPROC
epoxy_glEndQueryEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_occlusion_query_boolean,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12885 /* "glEndQueryEXT" */,
        12885 /* "glEndQueryEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12885 /* "glEndQueryEXT" */,
                                providers, entrypoints);
}

static PFNGLENDQUERYINDEXEDPROC
epoxy_glEndQueryIndexed_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12899 /* "glEndQueryIndexed" */,
        12899 /* "glEndQueryIndexed" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12899 /* "glEndQueryIndexed" */,
                                providers, entrypoints);
}

static PFNGLENDTILINGQCOMPROC
epoxy_glEndTilingQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_tiled_rendering, 12917 /* glEndTilingQCOM */);
}

static PFNGLENDTRANSFORMFEEDBACKPROC
epoxy_glEndTransformFeedback_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        GL_extension_GL_NV_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12933 /* "glEndTransformFeedback" */,
        12933 /* "glEndTransformFeedback" */,
        12956 /* "glEndTransformFeedbackEXT" */,
        12982 /* "glEndTransformFeedbackNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12933 /* "glEndTransformFeedback" */,
                                providers, entrypoints);
}

static PFNGLENDTRANSFORMFEEDBACKEXTPROC
epoxy_glEndTransformFeedbackEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_transform_feedback,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12956 /* "glEndTransformFeedbackEXT" */,
        12933 /* "glEndTransformFeedback" */,
        12933 /* "glEndTransformFeedback" */,
        12982 /* "glEndTransformFeedbackNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12956 /* "glEndTransformFeedbackEXT" */,
                                providers, entrypoints);
}

static PFNGLENDTRANSFORMFEEDBACKNVPROC
epoxy_glEndTransformFeedbackNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        12982 /* "glEndTransformFeedbackNV" */,
        12933 /* "glEndTransformFeedback" */,
        12933 /* "glEndTransformFeedback" */,
        12956 /* "glEndTransformFeedbackEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 12982 /* "glEndTransformFeedbackNV" */,
                                providers, entrypoints);
}

static PFNGLENDVERTEXSHADEREXTPROC
epoxy_glEndVertexShaderEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 13007 /* glEndVertexShaderEXT */);
}

static PFNGLENDVIDEOCAPTURENVPROC
epoxy_glEndVideoCaptureNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 13028 /* glEndVideoCaptureNV */);
}

static PFNGLEVALCOORD1DPROC
epoxy_glEvalCoord1d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13048 /* glEvalCoord1d */);
}

static PFNGLEVALCOORD1DVPROC
epoxy_glEvalCoord1dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13062 /* glEvalCoord1dv */);
}

static PFNGLEVALCOORD1FPROC
epoxy_glEvalCoord1f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13077 /* glEvalCoord1f */);
}

static PFNGLEVALCOORD1FVPROC
epoxy_glEvalCoord1fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13091 /* glEvalCoord1fv */);
}

static PFNGLEVALCOORD1XOESPROC
epoxy_glEvalCoord1xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 13106 /* glEvalCoord1xOES */);
}

static PFNGLEVALCOORD1XVOESPROC
epoxy_glEvalCoord1xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 13123 /* glEvalCoord1xvOES */);
}

static PFNGLEVALCOORD2DPROC
epoxy_glEvalCoord2d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13141 /* glEvalCoord2d */);
}

static PFNGLEVALCOORD2DVPROC
epoxy_glEvalCoord2dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13155 /* glEvalCoord2dv */);
}

static PFNGLEVALCOORD2FPROC
epoxy_glEvalCoord2f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13170 /* glEvalCoord2f */);
}

static PFNGLEVALCOORD2FVPROC
epoxy_glEvalCoord2fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13184 /* glEvalCoord2fv */);
}

static PFNGLEVALCOORD2XOESPROC
epoxy_glEvalCoord2xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 13199 /* glEvalCoord2xOES */);
}

static PFNGLEVALCOORD2XVOESPROC
epoxy_glEvalCoord2xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 13216 /* glEvalCoord2xvOES */);
}

static PFNGLEVALMAPSNVPROC
epoxy_glEvalMapsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 13234 /* glEvalMapsNV */);
}

static PFNGLEVALMESH1PROC
epoxy_glEvalMesh1_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13247 /* glEvalMesh1 */);
}

static PFNGLEVALMESH2PROC
epoxy_glEvalMesh2_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13259 /* glEvalMesh2 */);
}

static PFNGLEVALPOINT1PROC
epoxy_glEvalPoint1_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13271 /* glEvalPoint1 */);
}

static PFNGLEVALPOINT2PROC
epoxy_glEvalPoint2_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13284 /* glEvalPoint2 */);
}

static PFNGLEXECUTEPROGRAMNVPROC
epoxy_glExecuteProgramNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 13297 /* glExecuteProgramNV */);
}

static PFNGLEXTGETBUFFERPOINTERVQCOMPROC
epoxy_glExtGetBufferPointervQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 13316 /* glExtGetBufferPointervQCOM */);
}

static PFNGLEXTGETBUFFERSQCOMPROC
epoxy_glExtGetBuffersQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 13343 /* glExtGetBuffersQCOM */);
}

static PFNGLEXTGETFRAMEBUFFERSQCOMPROC
epoxy_glExtGetFramebuffersQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 13363 /* glExtGetFramebuffersQCOM */);
}

static PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC
epoxy_glExtGetProgramBinarySourceQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get2, 13388 /* glExtGetProgramBinarySourceQCOM */);
}

static PFNGLEXTGETPROGRAMSQCOMPROC
epoxy_glExtGetProgramsQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get2, 13420 /* glExtGetProgramsQCOM */);
}

static PFNGLEXTGETRENDERBUFFERSQCOMPROC
epoxy_glExtGetRenderbuffersQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 13441 /* glExtGetRenderbuffersQCOM */);
}

static PFNGLEXTGETSHADERSQCOMPROC
epoxy_glExtGetShadersQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get2, 13467 /* glExtGetShadersQCOM */);
}

static PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC
epoxy_glExtGetTexLevelParameterivQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 13487 /* glExtGetTexLevelParameterivQCOM */);
}

static PFNGLEXTGETTEXSUBIMAGEQCOMPROC
epoxy_glExtGetTexSubImageQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 13519 /* glExtGetTexSubImageQCOM */);
}

static PFNGLEXTGETTEXTURESQCOMPROC
epoxy_glExtGetTexturesQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 13543 /* glExtGetTexturesQCOM */);
}

static PFNGLEXTISPROGRAMBINARYQCOMPROC
epoxy_glExtIsProgramBinaryQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get2, 13564 /* glExtIsProgramBinaryQCOM */);
}

static PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC
epoxy_glExtTexObjectStateOverrideiQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 13589 /* glExtTexObjectStateOverrideiQCOM */);
}

static PFNGLEXTRACTCOMPONENTEXTPROC
epoxy_glExtractComponentEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 13622 /* glExtractComponentEXT */);
}

static PFNGLFEEDBACKBUFFERPROC
epoxy_glFeedbackBuffer_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 13644 /* glFeedbackBuffer */);
}

static PFNGLFEEDBACKBUFFERXOESPROC
epoxy_glFeedbackBufferxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 13661 /* glFeedbackBufferxOES */);
}

static PFNGLFENCESYNCPROC
epoxy_glFenceSync_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_sync,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        13682 /* "glFenceSync" */,
        13682 /* "glFenceSync" */,
        13682 /* "glFenceSync" */,
        13694 /* "glFenceSyncAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 13682 /* "glFenceSync" */,
                                providers, entrypoints);
}

static PFNGLFENCESYNCAPPLEPROC
epoxy_glFenceSyncAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_sync,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        13694 /* "glFenceSyncAPPLE" */,
        13682 /* "glFenceSync" */,
        13682 /* "glFenceSync" */,
        13682 /* "glFenceSync" */,
    };
    return gl_provider_resolver(entrypoint_strings + 13694 /* "glFenceSyncAPPLE" */,
                                providers, entrypoints);
}

static PFNGLFINALCOMBINERINPUTNVPROC
epoxy_glFinalCombinerInputNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 13711 /* glFinalCombinerInputNV */);
}

static PFNGLFINISHPROC
epoxy_glFinish_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        13734 /* "glFinish" */,
        13734 /* "glFinish" */,
        13734 /* "glFinish" */,
    };
    return gl_provider_resolver(entrypoint_strings + 13734 /* "glFinish" */,
                                providers, entrypoints);
}

static PFNGLFINISHASYNCSGIXPROC
epoxy_glFinishAsyncSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_async, 13743 /* glFinishAsyncSGIX */);
}

static PFNGLFINISHFENCEAPPLEPROC
epoxy_glFinishFenceAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 13761 /* glFinishFenceAPPLE */);
}

static PFNGLFINISHFENCENVPROC
epoxy_glFinishFenceNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fence, 13780 /* glFinishFenceNV */);
}

static PFNGLFINISHOBJECTAPPLEPROC
epoxy_glFinishObjectAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 13796 /* glFinishObjectAPPLE */);
}

static PFNGLFINISHTEXTURESUNXPROC
epoxy_glFinishTextureSUNX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUNX_constant_data, 13816 /* glFinishTextureSUNX */);
}

static PFNGLFLUSHPROC
epoxy_glFlush_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        13836 /* "glFlush" */,
        13836 /* "glFlush" */,
        13836 /* "glFlush" */,
    };
    return gl_provider_resolver(entrypoint_strings + 13836 /* "glFlush" */,
                                providers, entrypoints);
}

static PFNGLFLUSHMAPPEDBUFFERRANGEPROC
epoxy_glFlushMappedBufferRange_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_map_buffer_range,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_flush_buffer_range,
        GL_extension_GL_EXT_map_buffer_range,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        13844 /* "glFlushMappedBufferRange" */,
        13844 /* "glFlushMappedBufferRange" */,
        13844 /* "glFlushMappedBufferRange" */,
        13869 /* "glFlushMappedBufferRangeAPPLE" */,
        13899 /* "glFlushMappedBufferRangeEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 13844 /* "glFlushMappedBufferRange" */,
                                providers, entrypoints);
}

static PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
epoxy_glFlushMappedBufferRangeAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_flush_buffer_range,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_map_buffer_range,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_map_buffer_range,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        13869 /* "glFlushMappedBufferRangeAPPLE" */,
        13844 /* "glFlushMappedBufferRange" */,
        13844 /* "glFlushMappedBufferRange" */,
        13844 /* "glFlushMappedBufferRange" */,
        13899 /* "glFlushMappedBufferRangeEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 13869 /* "glFlushMappedBufferRangeAPPLE" */,
                                providers, entrypoints);
}

static PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC
epoxy_glFlushMappedBufferRangeEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_map_buffer_range,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_map_buffer_range,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_flush_buffer_range,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        13899 /* "glFlushMappedBufferRangeEXT" */,
        13844 /* "glFlushMappedBufferRange" */,
        13844 /* "glFlushMappedBufferRange" */,
        13844 /* "glFlushMappedBufferRange" */,
        13869 /* "glFlushMappedBufferRangeAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 13899 /* "glFlushMappedBufferRangeEXT" */,
                                providers, entrypoints);
}

static PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC
epoxy_glFlushMappedNamedBufferRange_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        13927 /* "glFlushMappedNamedBufferRange" */,
        13927 /* "glFlushMappedNamedBufferRange" */,
    };
    return gl_provider_resolver(entrypoint_strings + 13927 /* "glFlushMappedNamedBufferRange" */,
                                providers, entrypoints);
}

static PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC
epoxy_glFlushMappedNamedBufferRangeEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 13957 /* glFlushMappedNamedBufferRangeEXT */);
}

static PFNGLFLUSHPIXELDATARANGENVPROC
epoxy_glFlushPixelDataRangeNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_pixel_data_range, 13990 /* glFlushPixelDataRangeNV */);
}

static PFNGLFLUSHRASTERSGIXPROC
epoxy_glFlushRasterSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_flush_raster, 14014 /* glFlushRasterSGIX */);
}

static PFNGLFLUSHSTATICDATAIBMPROC
epoxy_glFlushStaticDataIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_static_data, 14032 /* glFlushStaticDataIBM */);
}

static PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
epoxy_glFlushVertexArrayRangeAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_array_range, 14053 /* glFlushVertexArrayRangeAPPLE */);
}

static PFNGLFLUSHVERTEXARRAYRANGENVPROC
epoxy_glFlushVertexArrayRangeNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_array_range, 14082 /* glFlushVertexArrayRangeNV */);
}

static PFNGLFOGCOORDFORMATNVPROC
epoxy_glFogCoordFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 14108 /* glFogCoordFormatNV */);
}

static PFNGLFOGCOORDPOINTERPROC
epoxy_glFogCoordPointer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_fog_coord,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14127 /* "glFogCoordPointer" */,
        14145 /* "glFogCoordPointerEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14127 /* "glFogCoordPointer" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDPOINTEREXTPROC
epoxy_glFogCoordPointerEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_fog_coord,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14145 /* "glFogCoordPointerEXT" */,
        14127 /* "glFogCoordPointer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14145 /* "glFogCoordPointerEXT" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDPOINTERLISTIBMPROC
epoxy_glFogCoordPointerListIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 14166 /* glFogCoordPointerListIBM */);
}

static PFNGLFOGCOORDDPROC
epoxy_glFogCoordd_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_fog_coord,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14191 /* "glFogCoordd" */,
        14203 /* "glFogCoorddEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14191 /* "glFogCoordd" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDDEXTPROC
epoxy_glFogCoorddEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_fog_coord,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14203 /* "glFogCoorddEXT" */,
        14191 /* "glFogCoordd" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14203 /* "glFogCoorddEXT" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDDVPROC
epoxy_glFogCoorddv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_fog_coord,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14218 /* "glFogCoorddv" */,
        14231 /* "glFogCoorddvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14218 /* "glFogCoorddv" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDDVEXTPROC
epoxy_glFogCoorddvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_fog_coord,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14231 /* "glFogCoorddvEXT" */,
        14218 /* "glFogCoorddv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14231 /* "glFogCoorddvEXT" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDFPROC
epoxy_glFogCoordf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_fog_coord,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14247 /* "glFogCoordf" */,
        14259 /* "glFogCoordfEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14247 /* "glFogCoordf" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDFEXTPROC
epoxy_glFogCoordfEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_fog_coord,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14259 /* "glFogCoordfEXT" */,
        14247 /* "glFogCoordf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14259 /* "glFogCoordfEXT" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDFVPROC
epoxy_glFogCoordfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_fog_coord,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14274 /* "glFogCoordfv" */,
        14287 /* "glFogCoordfvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14274 /* "glFogCoordfv" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDFVEXTPROC
epoxy_glFogCoordfvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_fog_coord,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14287 /* "glFogCoordfvEXT" */,
        14274 /* "glFogCoordfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14287 /* "glFogCoordfvEXT" */,
                                providers, entrypoints);
}

static PFNGLFOGCOORDHNVPROC
epoxy_glFogCoordhNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 14303 /* glFogCoordhNV */);
}

static PFNGLFOGCOORDHVNVPROC
epoxy_glFogCoordhvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 14317 /* glFogCoordhvNV */);
}

static PFNGLFOGFUNCSGISPROC
epoxy_glFogFuncSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_fog_function, 14332 /* glFogFuncSGIS */);
}

static PFNGLFOGFPROC
epoxy_glFogf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14346 /* "glFogf" */,
        14346 /* "glFogf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14346 /* "glFogf" */,
                                providers, entrypoints);
}

static PFNGLFOGFVPROC
epoxy_glFogfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14353 /* "glFogfv" */,
        14353 /* "glFogfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14353 /* "glFogfv" */,
                                providers, entrypoints);
}

static PFNGLFOGIPROC
epoxy_glFogi_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 14361 /* glFogi */);
}

static PFNGLFOGIVPROC
epoxy_glFogiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 14368 /* glFogiv */);
}

static PFNGLFOGXPROC
epoxy_glFogx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 14376 /* glFogx */);
}

static PFNGLFOGXOESPROC
epoxy_glFogxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 14383 /* glFogxOES */);
}

static PFNGLFOGXVPROC
epoxy_glFogxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 14393 /* glFogxv */);
}

static PFNGLFOGXVOESPROC
epoxy_glFogxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 14401 /* glFogxvOES */);
}

static PFNGLFRAGMENTCOLORMATERIALSGIXPROC
epoxy_glFragmentColorMaterialSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14412 /* glFragmentColorMaterialSGIX */);
}

static PFNGLFRAGMENTCOVERAGECOLORNVPROC
epoxy_glFragmentCoverageColorNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fragment_coverage_to_color, 14440 /* glFragmentCoverageColorNV */);
}

static PFNGLFRAGMENTLIGHTMODELFSGIXPROC
epoxy_glFragmentLightModelfSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14466 /* glFragmentLightModelfSGIX */);
}

static PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
epoxy_glFragmentLightModelfvSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14492 /* glFragmentLightModelfvSGIX */);
}

static PFNGLFRAGMENTLIGHTMODELISGIXPROC
epoxy_glFragmentLightModeliSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14519 /* glFragmentLightModeliSGIX */);
}

static PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
epoxy_glFragmentLightModelivSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14545 /* glFragmentLightModelivSGIX */);
}

static PFNGLFRAGMENTLIGHTFSGIXPROC
epoxy_glFragmentLightfSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14572 /* glFragmentLightfSGIX */);
}

static PFNGLFRAGMENTLIGHTFVSGIXPROC
epoxy_glFragmentLightfvSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14593 /* glFragmentLightfvSGIX */);
}

static PFNGLFRAGMENTLIGHTISGIXPROC
epoxy_glFragmentLightiSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14615 /* glFragmentLightiSGIX */);
}

static PFNGLFRAGMENTLIGHTIVSGIXPROC
epoxy_glFragmentLightivSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14636 /* glFragmentLightivSGIX */);
}

static PFNGLFRAGMENTMATERIALFSGIXPROC
epoxy_glFragmentMaterialfSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14658 /* glFragmentMaterialfSGIX */);
}

static PFNGLFRAGMENTMATERIALFVSGIXPROC
epoxy_glFragmentMaterialfvSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14682 /* glFragmentMaterialfvSGIX */);
}

static PFNGLFRAGMENTMATERIALISGIXPROC
epoxy_glFragmentMaterialiSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14707 /* glFragmentMaterialiSGIX */);
}

static PFNGLFRAGMENTMATERIALIVSGIXPROC
epoxy_glFragmentMaterialivSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 14731 /* glFragmentMaterialivSGIX */);
}

static PFNGLFRAMETERMINATORGREMEDYPROC
epoxy_glFrameTerminatorGREMEDY_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_GREMEDY_frame_terminator, 14756 /* glFrameTerminatorGREMEDY */);
}

static PFNGLFRAMEZOOMSGIXPROC
epoxy_glFrameZoomSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_framezoom, 14781 /* glFrameZoomSGIX */);
}

static PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
epoxy_glFramebufferDrawBufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 14797 /* glFramebufferDrawBufferEXT */);
}

static PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
epoxy_glFramebufferDrawBuffersEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 14824 /* glFramebufferDrawBuffersEXT */);
}

static PFNGLFRAMEBUFFERPARAMETERIPROC
epoxy_glFramebufferParameteri_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_framebuffer_no_attachments,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14852 /* "glFramebufferParameteri" */,
        14852 /* "glFramebufferParameteri" */,
        14852 /* "glFramebufferParameteri" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14852 /* "glFramebufferParameteri" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERREADBUFFEREXTPROC
epoxy_glFramebufferReadBufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 14876 /* glFramebufferReadBufferEXT */);
}

static PFNGLFRAMEBUFFERRENDERBUFFERPROC
epoxy_glFramebufferRenderbuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14903 /* "glFramebufferRenderbuffer" */,
        14903 /* "glFramebufferRenderbuffer" */,
        14903 /* "glFramebufferRenderbuffer" */,
        14929 /* "glFramebufferRenderbufferEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14903 /* "glFramebufferRenderbuffer" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
epoxy_glFramebufferRenderbufferEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        14929 /* "glFramebufferRenderbufferEXT" */,
        14903 /* "glFramebufferRenderbuffer" */,
        14903 /* "glFramebufferRenderbuffer" */,
        14903 /* "glFramebufferRenderbuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 14929 /* "glFramebufferRenderbufferEXT" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERRENDERBUFFEROESPROC
epoxy_glFramebufferRenderbufferOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 14958 /* glFramebufferRenderbufferOES */);
}

static PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
epoxy_glFramebufferSampleLocationsfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_sample_locations, 14987 /* glFramebufferSampleLocationsfvNV */);
}

static PFNGLFRAMEBUFFERTEXTUREPROC
epoxy_glFramebufferTexture_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_geometry_shader4,
        GL_extension_GL_EXT_geometry_shader,
        GL_extension_GL_NV_geometry_program4,
        GL_extension_GL_OES_geometry_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15020 /* "glFramebufferTexture" */,
        15314 /* "glFramebufferTextureARB" */,
        15338 /* "glFramebufferTextureEXT" */,
        15338 /* "glFramebufferTextureEXT" */,
        15535 /* "glFramebufferTextureOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15020 /* "glFramebufferTexture" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURE1DPROC
epoxy_glFramebufferTexture1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15041 /* "glFramebufferTexture1D" */,
        15041 /* "glFramebufferTexture1D" */,
        15064 /* "glFramebufferTexture1DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15041 /* "glFramebufferTexture1D" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
epoxy_glFramebufferTexture1DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15064 /* "glFramebufferTexture1DEXT" */,
        15041 /* "glFramebufferTexture1D" */,
        15041 /* "glFramebufferTexture1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15064 /* "glFramebufferTexture1DEXT" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURE2DPROC
epoxy_glFramebufferTexture2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15090 /* "glFramebufferTexture2D" */,
        15090 /* "glFramebufferTexture2D" */,
        15090 /* "glFramebufferTexture2D" */,
        15113 /* "glFramebufferTexture2DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15090 /* "glFramebufferTexture2D" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
epoxy_glFramebufferTexture2DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15113 /* "glFramebufferTexture2DEXT" */,
        15090 /* "glFramebufferTexture2D" */,
        15090 /* "glFramebufferTexture2D" */,
        15090 /* "glFramebufferTexture2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15113 /* "glFramebufferTexture2DEXT" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
epoxy_glFramebufferTexture2DMultisampleEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_multisampled_render_to_texture, 15139 /* glFramebufferTexture2DMultisampleEXT */);
}

static PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC
epoxy_glFramebufferTexture2DMultisampleIMG_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IMG_multisampled_render_to_texture, 15176 /* glFramebufferTexture2DMultisampleIMG */);
}

static PFNGLFRAMEBUFFERTEXTURE2DOESPROC
epoxy_glFramebufferTexture2DOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 15213 /* glFramebufferTexture2DOES */);
}

static PFNGLFRAMEBUFFERTEXTURE3DPROC
epoxy_glFramebufferTexture3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        GL_extension_GL_EXT_framebuffer_object,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15239 /* "glFramebufferTexture3D" */,
        15239 /* "glFramebufferTexture3D" */,
        15262 /* "glFramebufferTexture3DEXT" */,
        15288 /* "glFramebufferTexture3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15239 /* "glFramebufferTexture3D" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
epoxy_glFramebufferTexture3DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15262 /* "glFramebufferTexture3DEXT" */,
        15239 /* "glFramebufferTexture3D" */,
        15239 /* "glFramebufferTexture3D" */,
        15288 /* "glFramebufferTexture3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15262 /* "glFramebufferTexture3DEXT" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURE3DOESPROC
epoxy_glFramebufferTexture3DOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_3D,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15288 /* "glFramebufferTexture3DOES" */,
        15239 /* "glFramebufferTexture3D" */,
        15239 /* "glFramebufferTexture3D" */,
        15262 /* "glFramebufferTexture3DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15288 /* "glFramebufferTexture3DOES" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTUREARBPROC
epoxy_glFramebufferTextureARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_geometry_shader4,
        Desktop_OpenGL_3_2,
        GL_extension_GL_EXT_geometry_shader,
        GL_extension_GL_NV_geometry_program4,
        GL_extension_GL_OES_geometry_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15314 /* "glFramebufferTextureARB" */,
        15020 /* "glFramebufferTexture" */,
        15338 /* "glFramebufferTextureEXT" */,
        15338 /* "glFramebufferTextureEXT" */,
        15535 /* "glFramebufferTextureOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15314 /* "glFramebufferTextureARB" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTUREEXTPROC
epoxy_glFramebufferTextureEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_geometry_shader,
        GL_extension_GL_NV_geometry_program4,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_geometry_shader4,
        GL_extension_GL_OES_geometry_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15338 /* "glFramebufferTextureEXT" */,
        15338 /* "glFramebufferTextureEXT" */,
        15020 /* "glFramebufferTexture" */,
        15314 /* "glFramebufferTextureARB" */,
        15535 /* "glFramebufferTextureOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15338 /* "glFramebufferTextureEXT" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTUREFACEARBPROC
epoxy_glFramebufferTextureFaceARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_geometry_shader4,
        GL_extension_GL_NV_geometry_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15362 /* "glFramebufferTextureFaceARB" */,
        15390 /* "glFramebufferTextureFaceEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15362 /* "glFramebufferTextureFaceARB" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
epoxy_glFramebufferTextureFaceEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_geometry_program4,
        GL_extension_GL_ARB_geometry_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15390 /* "glFramebufferTextureFaceEXT" */,
        15362 /* "glFramebufferTextureFaceARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15390 /* "glFramebufferTextureFaceEXT" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURELAYERPROC
epoxy_glFramebufferTextureLayer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_geometry_shader4,
        GL_extension_GL_EXT_texture_array,
        GL_extension_GL_NV_geometry_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15418 /* "glFramebufferTextureLayer" */,
        15418 /* "glFramebufferTextureLayer" */,
        15418 /* "glFramebufferTextureLayer" */,
        15444 /* "glFramebufferTextureLayerARB" */,
        15473 /* "glFramebufferTextureLayerEXT" */,
        15473 /* "glFramebufferTextureLayerEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15418 /* "glFramebufferTextureLayer" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURELAYERARBPROC
epoxy_glFramebufferTextureLayerARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_geometry_shader4,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_texture_array,
        GL_extension_GL_NV_geometry_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15444 /* "glFramebufferTextureLayerARB" */,
        15418 /* "glFramebufferTextureLayer" */,
        15418 /* "glFramebufferTextureLayer" */,
        15418 /* "glFramebufferTextureLayer" */,
        15473 /* "glFramebufferTextureLayerEXT" */,
        15473 /* "glFramebufferTextureLayerEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15444 /* "glFramebufferTextureLayerARB" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
epoxy_glFramebufferTextureLayerEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_array,
        GL_extension_GL_NV_geometry_program4,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_geometry_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15473 /* "glFramebufferTextureLayerEXT" */,
        15473 /* "glFramebufferTextureLayerEXT" */,
        15418 /* "glFramebufferTextureLayer" */,
        15418 /* "glFramebufferTextureLayer" */,
        15418 /* "glFramebufferTextureLayer" */,
        15444 /* "glFramebufferTextureLayerARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15473 /* "glFramebufferTextureLayerEXT" */,
                                providers, entrypoints);
}

static PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC
epoxy_glFramebufferTextureMultiviewOVR_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OVR_multiview, 15502 /* glFramebufferTextureMultiviewOVR */);
}

static PFNGLFRAMEBUFFERTEXTUREOESPROC
epoxy_glFramebufferTextureOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_geometry_shader,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_geometry_shader4,
        GL_extension_GL_EXT_geometry_shader,
        GL_extension_GL_NV_geometry_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15535 /* "glFramebufferTextureOES" */,
        15020 /* "glFramebufferTexture" */,
        15314 /* "glFramebufferTextureARB" */,
        15338 /* "glFramebufferTextureEXT" */,
        15338 /* "glFramebufferTextureEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15535 /* "glFramebufferTextureOES" */,
                                providers, entrypoints);
}

static PFNGLFREEOBJECTBUFFERATIPROC
epoxy_glFreeObjectBufferATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 15559 /* glFreeObjectBufferATI */);
}

static PFNGLFRONTFACEPROC
epoxy_glFrontFace_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15581 /* "glFrontFace" */,
        15581 /* "glFrontFace" */,
        15581 /* "glFrontFace" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15581 /* "glFrontFace" */,
                                providers, entrypoints);
}

static PFNGLFRUSTUMPROC
epoxy_glFrustum_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 15593 /* glFrustum */);
}

static PFNGLFRUSTUMFPROC
epoxy_glFrustumf_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 15603 /* glFrustumf */);
}

static PFNGLFRUSTUMFOESPROC
epoxy_glFrustumfOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_single_precision, 15614 /* glFrustumfOES */);
}

static PFNGLFRUSTUMXPROC
epoxy_glFrustumx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 15628 /* glFrustumx */);
}

static PFNGLFRUSTUMXOESPROC
epoxy_glFrustumxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 15639 /* glFrustumxOES */);
}

static PFNGLGENASYNCMARKERSSGIXPROC
epoxy_glGenAsyncMarkersSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_async, 15653 /* glGenAsyncMarkersSGIX */);
}

static PFNGLGENBUFFERSPROC
epoxy_glGenBuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15675 /* "glGenBuffers" */,
        15675 /* "glGenBuffers" */,
        15675 /* "glGenBuffers" */,
        15688 /* "glGenBuffersARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15675 /* "glGenBuffers" */,
                                providers, entrypoints);
}

static PFNGLGENBUFFERSARBPROC
epoxy_glGenBuffersARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15688 /* "glGenBuffersARB" */,
        15675 /* "glGenBuffers" */,
        15675 /* "glGenBuffers" */,
        15675 /* "glGenBuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15688 /* "glGenBuffersARB" */,
                                providers, entrypoints);
}

static PFNGLGENFENCESAPPLEPROC
epoxy_glGenFencesAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 15704 /* glGenFencesAPPLE */);
}

static PFNGLGENFENCESNVPROC
epoxy_glGenFencesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fence, 15721 /* glGenFencesNV */);
}

static PFNGLGENFRAGMENTSHADERSATIPROC
epoxy_glGenFragmentShadersATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 15735 /* glGenFragmentShadersATI */);
}

static PFNGLGENFRAMEBUFFERSPROC
epoxy_glGenFramebuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15759 /* "glGenFramebuffers" */,
        15759 /* "glGenFramebuffers" */,
        15759 /* "glGenFramebuffers" */,
        15777 /* "glGenFramebuffersEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15759 /* "glGenFramebuffers" */,
                                providers, entrypoints);
}

static PFNGLGENFRAMEBUFFERSEXTPROC
epoxy_glGenFramebuffersEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15777 /* "glGenFramebuffersEXT" */,
        15759 /* "glGenFramebuffers" */,
        15759 /* "glGenFramebuffers" */,
        15759 /* "glGenFramebuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15777 /* "glGenFramebuffersEXT" */,
                                providers, entrypoints);
}

static PFNGLGENFRAMEBUFFERSOESPROC
epoxy_glGenFramebuffersOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 15798 /* glGenFramebuffersOES */);
}

static PFNGLGENLISTSPROC
epoxy_glGenLists_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 15819 /* glGenLists */);
}

static PFNGLGENNAMESAMDPROC
epoxy_glGenNamesAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_name_gen_delete, 15830 /* glGenNamesAMD */);
}

static PFNGLGENOCCLUSIONQUERIESNVPROC
epoxy_glGenOcclusionQueriesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 15844 /* glGenOcclusionQueriesNV */);
}

static PFNGLGENPATHSNVPROC
epoxy_glGenPathsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 15868 /* glGenPathsNV */);
}

static PFNGLGENPERFMONITORSAMDPROC
epoxy_glGenPerfMonitorsAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 15881 /* glGenPerfMonitorsAMD */);
}

static PFNGLGENPROGRAMPIPELINESPROC
epoxy_glGenProgramPipelines_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15902 /* "glGenProgramPipelines" */,
        15902 /* "glGenProgramPipelines" */,
        15902 /* "glGenProgramPipelines" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15902 /* "glGenProgramPipelines" */,
                                providers, entrypoints);
}

static PFNGLGENPROGRAMPIPELINESEXTPROC
epoxy_glGenProgramPipelinesEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 15924 /* glGenProgramPipelinesEXT */);
}

static PFNGLGENPROGRAMSARBPROC
epoxy_glGenProgramsARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15949 /* "glGenProgramsARB" */,
        15949 /* "glGenProgramsARB" */,
        15966 /* "glGenProgramsNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15949 /* "glGenProgramsARB" */,
                                providers, entrypoints);
}

static PFNGLGENPROGRAMSNVPROC
epoxy_glGenProgramsNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15966 /* "glGenProgramsNV" */,
        15949 /* "glGenProgramsARB" */,
        15949 /* "glGenProgramsARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15966 /* "glGenProgramsNV" */,
                                providers, entrypoints);
}

static PFNGLGENQUERIESPROC
epoxy_glGenQueries_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_occlusion_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15982 /* "glGenQueries" */,
        15982 /* "glGenQueries" */,
        15995 /* "glGenQueriesARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15982 /* "glGenQueries" */,
                                providers, entrypoints);
}

static PFNGLGENQUERIESARBPROC
epoxy_glGenQueriesARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_occlusion_query,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        15995 /* "glGenQueriesARB" */,
        15982 /* "glGenQueries" */,
        15982 /* "glGenQueries" */,
    };
    return gl_provider_resolver(entrypoint_strings + 15995 /* "glGenQueriesARB" */,
                                providers, entrypoints);
}

static PFNGLGENQUERIESEXTPROC
epoxy_glGenQueriesEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_occlusion_query_boolean,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16011 /* "glGenQueriesEXT" */,
        16011 /* "glGenQueriesEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16011 /* "glGenQueriesEXT" */,
                                providers, entrypoints);
}

static PFNGLGENRENDERBUFFERSPROC
epoxy_glGenRenderbuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16027 /* "glGenRenderbuffers" */,
        16027 /* "glGenRenderbuffers" */,
        16027 /* "glGenRenderbuffers" */,
        16046 /* "glGenRenderbuffersEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16027 /* "glGenRenderbuffers" */,
                                providers, entrypoints);
}

static PFNGLGENRENDERBUFFERSEXTPROC
epoxy_glGenRenderbuffersEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16046 /* "glGenRenderbuffersEXT" */,
        16027 /* "glGenRenderbuffers" */,
        16027 /* "glGenRenderbuffers" */,
        16027 /* "glGenRenderbuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16046 /* "glGenRenderbuffersEXT" */,
                                providers, entrypoints);
}

static PFNGLGENRENDERBUFFERSOESPROC
epoxy_glGenRenderbuffersOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 16068 /* glGenRenderbuffersOES */);
}

static PFNGLGENSAMPLERSPROC
epoxy_glGenSamplers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16090 /* "glGenSamplers" */,
        16090 /* "glGenSamplers" */,
        16090 /* "glGenSamplers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16090 /* "glGenSamplers" */,
                                providers, entrypoints);
}

static PFNGLGENSYMBOLSEXTPROC
epoxy_glGenSymbolsEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 16104 /* glGenSymbolsEXT */);
}

static PFNGLGENTEXTURESPROC
epoxy_glGenTextures_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16120 /* "glGenTextures" */,
        16120 /* "glGenTextures" */,
        16120 /* "glGenTextures" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16120 /* "glGenTextures" */,
                                providers, entrypoints);
}

static PFNGLGENTEXTURESEXTPROC
epoxy_glGenTexturesEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_texture_object, 16134 /* glGenTexturesEXT */);
}

static PFNGLGENTRANSFORMFEEDBACKSPROC
epoxy_glGenTransformFeedbacks_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_transform_feedback2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16151 /* "glGenTransformFeedbacks" */,
        16151 /* "glGenTransformFeedbacks" */,
        16151 /* "glGenTransformFeedbacks" */,
        16175 /* "glGenTransformFeedbacksNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16151 /* "glGenTransformFeedbacks" */,
                                providers, entrypoints);
}

static PFNGLGENTRANSFORMFEEDBACKSNVPROC
epoxy_glGenTransformFeedbacksNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback2,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16175 /* "glGenTransformFeedbacksNV" */,
        16151 /* "glGenTransformFeedbacks" */,
        16151 /* "glGenTransformFeedbacks" */,
        16151 /* "glGenTransformFeedbacks" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16175 /* "glGenTransformFeedbacksNV" */,
                                providers, entrypoints);
}

static PFNGLGENVERTEXARRAYSPROC
epoxy_glGenVertexArrays_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_vertex_array_object,
        GL_extension_GL_OES_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16201 /* "glGenVertexArrays" */,
        16201 /* "glGenVertexArrays" */,
        16201 /* "glGenVertexArrays" */,
        16219 /* "glGenVertexArraysAPPLE" */,
        16242 /* "glGenVertexArraysOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16201 /* "glGenVertexArrays" */,
                                providers, entrypoints);
}

static PFNGLGENVERTEXARRAYSAPPLEPROC
epoxy_glGenVertexArraysAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_vertex_array_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16219 /* "glGenVertexArraysAPPLE" */,
        16201 /* "glGenVertexArrays" */,
        16201 /* "glGenVertexArrays" */,
        16201 /* "glGenVertexArrays" */,
        16242 /* "glGenVertexArraysOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16219 /* "glGenVertexArraysAPPLE" */,
                                providers, entrypoints);
}

static PFNGLGENVERTEXARRAYSOESPROC
epoxy_glGenVertexArraysOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_vertex_array_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16242 /* "glGenVertexArraysOES" */,
        16201 /* "glGenVertexArrays" */,
        16201 /* "glGenVertexArrays" */,
        16201 /* "glGenVertexArrays" */,
        16219 /* "glGenVertexArraysAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16242 /* "glGenVertexArraysOES" */,
                                providers, entrypoints);
}

static PFNGLGENVERTEXSHADERSEXTPROC
epoxy_glGenVertexShadersEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 16263 /* glGenVertexShadersEXT */);
}

static PFNGLGENERATEMIPMAPPROC
epoxy_glGenerateMipmap_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16285 /* "glGenerateMipmap" */,
        16285 /* "glGenerateMipmap" */,
        16285 /* "glGenerateMipmap" */,
        16302 /* "glGenerateMipmapEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16285 /* "glGenerateMipmap" */,
                                providers, entrypoints);
}

static PFNGLGENERATEMIPMAPEXTPROC
epoxy_glGenerateMipmapEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16302 /* "glGenerateMipmapEXT" */,
        16285 /* "glGenerateMipmap" */,
        16285 /* "glGenerateMipmap" */,
        16285 /* "glGenerateMipmap" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16302 /* "glGenerateMipmapEXT" */,
                                providers, entrypoints);
}

static PFNGLGENERATEMIPMAPOESPROC
epoxy_glGenerateMipmapOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 16322 /* glGenerateMipmapOES */);
}

static PFNGLGENERATEMULTITEXMIPMAPEXTPROC
epoxy_glGenerateMultiTexMipmapEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 16342 /* glGenerateMultiTexMipmapEXT */);
}

static PFNGLGENERATETEXTUREMIPMAPPROC
epoxy_glGenerateTextureMipmap_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16370 /* "glGenerateTextureMipmap" */,
        16370 /* "glGenerateTextureMipmap" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16370 /* "glGenerateTextureMipmap" */,
                                providers, entrypoints);
}

static PFNGLGENERATETEXTUREMIPMAPEXTPROC
epoxy_glGenerateTextureMipmapEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 16394 /* glGenerateTextureMipmapEXT */);
}

static PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
epoxy_glGetActiveAtomicCounterBufferiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_shader_atomic_counters,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16421 /* "glGetActiveAtomicCounterBufferiv" */,
        16421 /* "glGetActiveAtomicCounterBufferiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16421 /* "glGetActiveAtomicCounterBufferiv" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVEATTRIBPROC
epoxy_glGetActiveAttrib_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16454 /* "glGetActiveAttrib" */,
        16454 /* "glGetActiveAttrib" */,
        16472 /* "glGetActiveAttribARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16454 /* "glGetActiveAttrib" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVEATTRIBARBPROC
epoxy_glGetActiveAttribARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16472 /* "glGetActiveAttribARB" */,
        16454 /* "glGetActiveAttrib" */,
        16454 /* "glGetActiveAttrib" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16472 /* "glGetActiveAttribARB" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVESUBROUTINENAMEPROC
epoxy_glGetActiveSubroutineName_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_shader_subroutine,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16493 /* "glGetActiveSubroutineName" */,
        16493 /* "glGetActiveSubroutineName" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16493 /* "glGetActiveSubroutineName" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
epoxy_glGetActiveSubroutineUniformName_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_shader_subroutine,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16519 /* "glGetActiveSubroutineUniformName" */,
        16519 /* "glGetActiveSubroutineUniformName" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16519 /* "glGetActiveSubroutineUniformName" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
epoxy_glGetActiveSubroutineUniformiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_shader_subroutine,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16552 /* "glGetActiveSubroutineUniformiv" */,
        16552 /* "glGetActiveSubroutineUniformiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16552 /* "glGetActiveSubroutineUniformiv" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVEUNIFORMPROC
epoxy_glGetActiveUniform_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16583 /* "glGetActiveUniform" */,
        16583 /* "glGetActiveUniform" */,
        16602 /* "glGetActiveUniformARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16583 /* "glGetActiveUniform" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVEUNIFORMARBPROC
epoxy_glGetActiveUniformARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16602 /* "glGetActiveUniformARB" */,
        16583 /* "glGetActiveUniform" */,
        16583 /* "glGetActiveUniform" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16602 /* "glGetActiveUniformARB" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
epoxy_glGetActiveUniformBlockName_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16624 /* "glGetActiveUniformBlockName" */,
        16624 /* "glGetActiveUniformBlockName" */,
        16624 /* "glGetActiveUniformBlockName" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16624 /* "glGetActiveUniformBlockName" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVEUNIFORMBLOCKIVPROC
epoxy_glGetActiveUniformBlockiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16652 /* "glGetActiveUniformBlockiv" */,
        16652 /* "glGetActiveUniformBlockiv" */,
        16652 /* "glGetActiveUniformBlockiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16652 /* "glGetActiveUniformBlockiv" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVEUNIFORMNAMEPROC
epoxy_glGetActiveUniformName_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16678 /* "glGetActiveUniformName" */,
        16678 /* "glGetActiveUniformName" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16678 /* "glGetActiveUniformName" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVEUNIFORMSIVPROC
epoxy_glGetActiveUniformsiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16701 /* "glGetActiveUniformsiv" */,
        16701 /* "glGetActiveUniformsiv" */,
        16701 /* "glGetActiveUniformsiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16701 /* "glGetActiveUniformsiv" */,
                                providers, entrypoints);
}

static PFNGLGETACTIVEVARYINGNVPROC
epoxy_glGetActiveVaryingNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 16723 /* glGetActiveVaryingNV */);
}

static PFNGLGETARRAYOBJECTFVATIPROC
epoxy_glGetArrayObjectfvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 16744 /* glGetArrayObjectfvATI */);
}

static PFNGLGETARRAYOBJECTIVATIPROC
epoxy_glGetArrayObjectivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 16766 /* glGetArrayObjectivATI */);
}

static PFNGLGETATTACHEDOBJECTSARBPROC
epoxy_glGetAttachedObjectsARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 16788 /* glGetAttachedObjectsARB */);
}

static PFNGLGETATTACHEDSHADERSPROC
epoxy_glGetAttachedShaders_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16812 /* "glGetAttachedShaders" */,
        16812 /* "glGetAttachedShaders" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16812 /* "glGetAttachedShaders" */,
                                providers, entrypoints);
}

static PFNGLGETATTRIBLOCATIONPROC
epoxy_glGetAttribLocation_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16833 /* "glGetAttribLocation" */,
        16833 /* "glGetAttribLocation" */,
        16853 /* "glGetAttribLocationARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16833 /* "glGetAttribLocation" */,
                                providers, entrypoints);
}

static PFNGLGETATTRIBLOCATIONARBPROC
epoxy_glGetAttribLocationARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16853 /* "glGetAttribLocationARB" */,
        16833 /* "glGetAttribLocation" */,
        16833 /* "glGetAttribLocation" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16853 /* "glGetAttribLocationARB" */,
                                providers, entrypoints);
}

static PFNGLGETBOOLEANINDEXEDVEXTPROC
epoxy_glGetBooleanIndexedvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16876 /* "glGetBooleanIndexedvEXT" */,
        16876 /* "glGetBooleanIndexedvEXT" */,
        16900 /* "glGetBooleani_v" */,
        16900 /* "glGetBooleani_v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16876 /* "glGetBooleanIndexedvEXT" */,
                                providers, entrypoints);
}

static PFNGLGETBOOLEANI_VPROC
epoxy_glGetBooleani_v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16900 /* "glGetBooleani_v" */,
        16900 /* "glGetBooleani_v" */,
        16876 /* "glGetBooleanIndexedvEXT" */,
        16876 /* "glGetBooleanIndexedvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16900 /* "glGetBooleani_v" */,
                                providers, entrypoints);
}

static PFNGLGETBOOLEANVPROC
epoxy_glGetBooleanv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16916 /* "glGetBooleanv" */,
        16916 /* "glGetBooleanv" */,
        16916 /* "glGetBooleanv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16916 /* "glGetBooleanv" */,
                                providers, entrypoints);
}

static PFNGLGETBUFFERPARAMETERI64VPROC
epoxy_glGetBufferParameteri64v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16930 /* "glGetBufferParameteri64v" */,
        16930 /* "glGetBufferParameteri64v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16930 /* "glGetBufferParameteri64v" */,
                                providers, entrypoints);
}

static PFNGLGETBUFFERPARAMETERIVPROC
epoxy_glGetBufferParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16955 /* "glGetBufferParameteriv" */,
        16955 /* "glGetBufferParameteriv" */,
        16955 /* "glGetBufferParameteriv" */,
        16978 /* "glGetBufferParameterivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16955 /* "glGetBufferParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETBUFFERPARAMETERIVARBPROC
epoxy_glGetBufferParameterivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        16978 /* "glGetBufferParameterivARB" */,
        16955 /* "glGetBufferParameteriv" */,
        16955 /* "glGetBufferParameteriv" */,
        16955 /* "glGetBufferParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 16978 /* "glGetBufferParameterivARB" */,
                                providers, entrypoints);
}

static PFNGLGETBUFFERPARAMETERUI64VNVPROC
epoxy_glGetBufferParameterui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 17004 /* glGetBufferParameterui64vNV */);
}

static PFNGLGETBUFFERPOINTERVPROC
epoxy_glGetBufferPointerv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        GL_extension_GL_OES_mapbuffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17032 /* "glGetBufferPointerv" */,
        17032 /* "glGetBufferPointerv" */,
        17052 /* "glGetBufferPointervARB" */,
        17075 /* "glGetBufferPointervOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17032 /* "glGetBufferPointerv" */,
                                providers, entrypoints);
}

static PFNGLGETBUFFERPOINTERVARBPROC
epoxy_glGetBufferPointervARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_mapbuffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17052 /* "glGetBufferPointervARB" */,
        17032 /* "glGetBufferPointerv" */,
        17032 /* "glGetBufferPointerv" */,
        17075 /* "glGetBufferPointervOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17052 /* "glGetBufferPointervARB" */,
                                providers, entrypoints);
}

static PFNGLGETBUFFERPOINTERVOESPROC
epoxy_glGetBufferPointervOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_mapbuffer,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17075 /* "glGetBufferPointervOES" */,
        17032 /* "glGetBufferPointerv" */,
        17032 /* "glGetBufferPointerv" */,
        17052 /* "glGetBufferPointervARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17075 /* "glGetBufferPointervOES" */,
                                providers, entrypoints);
}

static PFNGLGETBUFFERSUBDATAPROC
epoxy_glGetBufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17098 /* "glGetBufferSubData" */,
        17117 /* "glGetBufferSubDataARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17098 /* "glGetBufferSubData" */,
                                providers, entrypoints);
}

static PFNGLGETBUFFERSUBDATAARBPROC
epoxy_glGetBufferSubDataARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17117 /* "glGetBufferSubDataARB" */,
        17098 /* "glGetBufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17117 /* "glGetBufferSubDataARB" */,
                                providers, entrypoints);
}

static PFNGLGETCLIPPLANEPROC
epoxy_glGetClipPlane_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 17139 /* glGetClipPlane */);
}

static PFNGLGETCLIPPLANEFPROC
epoxy_glGetClipPlanef_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 17154 /* glGetClipPlanef */);
}

static PFNGLGETCLIPPLANEFOESPROC
epoxy_glGetClipPlanefOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_single_precision, 17170 /* glGetClipPlanefOES */);
}

static PFNGLGETCLIPPLANEXPROC
epoxy_glGetClipPlanex_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 17189 /* glGetClipPlanex */);
}

static PFNGLGETCLIPPLANEXOESPROC
epoxy_glGetClipPlanexOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 17205 /* glGetClipPlanexOES */);
}

static PFNGLGETCOLORTABLEPROC
epoxy_glGetColorTable_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_paletted_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17224 /* "glGetColorTable" */,
        17240 /* "glGetColorTableEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17224 /* "glGetColorTable" */,
                                providers, entrypoints);
}

static PFNGLGETCOLORTABLEEXTPROC
epoxy_glGetColorTableEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_paletted_texture,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17240 /* "glGetColorTableEXT" */,
        17224 /* "glGetColorTable" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17240 /* "glGetColorTableEXT" */,
                                providers, entrypoints);
}

static PFNGLGETCOLORTABLEPARAMETERFVPROC
epoxy_glGetColorTableParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_paletted_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17259 /* "glGetColorTableParameterfv" */,
        17286 /* "glGetColorTableParameterfvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17259 /* "glGetColorTableParameterfv" */,
                                providers, entrypoints);
}

static PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
epoxy_glGetColorTableParameterfvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_paletted_texture,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17286 /* "glGetColorTableParameterfvEXT" */,
        17259 /* "glGetColorTableParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17286 /* "glGetColorTableParameterfvEXT" */,
                                providers, entrypoints);
}

static PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
epoxy_glGetColorTableParameterfvSGI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGI_color_table, 17316 /* glGetColorTableParameterfvSGI */);
}

static PFNGLGETCOLORTABLEPARAMETERIVPROC
epoxy_glGetColorTableParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_paletted_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17346 /* "glGetColorTableParameteriv" */,
        17373 /* "glGetColorTableParameterivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17346 /* "glGetColorTableParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
epoxy_glGetColorTableParameterivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_paletted_texture,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17373 /* "glGetColorTableParameterivEXT" */,
        17346 /* "glGetColorTableParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17373 /* "glGetColorTableParameterivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
epoxy_glGetColorTableParameterivSGI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGI_color_table, 17403 /* glGetColorTableParameterivSGI */);
}

static PFNGLGETCOLORTABLESGIPROC
epoxy_glGetColorTableSGI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGI_color_table, 17433 /* glGetColorTableSGI */);
}

static PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
epoxy_glGetCombinerInputParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 17452 /* glGetCombinerInputParameterfvNV */);
}

static PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
epoxy_glGetCombinerInputParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 17484 /* glGetCombinerInputParameterivNV */);
}

static PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
epoxy_glGetCombinerOutputParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 17516 /* glGetCombinerOutputParameterfvNV */);
}

static PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
epoxy_glGetCombinerOutputParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 17549 /* glGetCombinerOutputParameterivNV */);
}

static PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
epoxy_glGetCombinerStageParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners2, 17582 /* glGetCombinerStageParameterfvNV */);
}

static PFNGLGETCOMMANDHEADERNVPROC
epoxy_glGetCommandHeaderNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 17614 /* glGetCommandHeaderNV */);
}

static PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
epoxy_glGetCompressedMultiTexImageEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 17635 /* glGetCompressedMultiTexImageEXT */);
}

static PFNGLGETCOMPRESSEDTEXIMAGEPROC
epoxy_glGetCompressedTexImage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_texture_compression,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17667 /* "glGetCompressedTexImage" */,
        17691 /* "glGetCompressedTexImageARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17667 /* "glGetCompressedTexImage" */,
                                providers, entrypoints);
}

static PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
epoxy_glGetCompressedTexImageARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_texture_compression,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17691 /* "glGetCompressedTexImageARB" */,
        17667 /* "glGetCompressedTexImage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17691 /* "glGetCompressedTexImageARB" */,
                                providers, entrypoints);
}

static PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC
epoxy_glGetCompressedTextureImage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17718 /* "glGetCompressedTextureImage" */,
        17718 /* "glGetCompressedTextureImage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17718 /* "glGetCompressedTextureImage" */,
                                providers, entrypoints);
}

static PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
epoxy_glGetCompressedTextureImageEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 17746 /* glGetCompressedTextureImageEXT */);
}

static PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC
epoxy_glGetCompressedTextureSubImage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_get_texture_sub_image,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        17777 /* "glGetCompressedTextureSubImage" */,
        17777 /* "glGetCompressedTextureSubImage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 17777 /* "glGetCompressedTextureSubImage" */,
                                providers, entrypoints);
}

static PFNGLGETCONVOLUTIONFILTERPROC
epoxy_glGetConvolutionFilter_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 17808 /* glGetConvolutionFilter */);
}

static PFNGLGETCONVOLUTIONFILTEREXTPROC
epoxy_glGetConvolutionFilterEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_convolution, 17831 /* glGetConvolutionFilterEXT */);
}

static PFNGLGETCONVOLUTIONPARAMETERFVPROC
epoxy_glGetConvolutionParameterfv_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 17857 /* glGetConvolutionParameterfv */);
}

static PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
epoxy_glGetConvolutionParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_convolution, 17885 /* glGetConvolutionParameterfvEXT */);
}

static PFNGLGETCONVOLUTIONPARAMETERIVPROC
epoxy_glGetConvolutionParameteriv_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 17916 /* glGetConvolutionParameteriv */);
}

static PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
epoxy_glGetConvolutionParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_convolution, 17944 /* glGetConvolutionParameterivEXT */);
}

static PFNGLGETCONVOLUTIONPARAMETERXVOESPROC
epoxy_glGetConvolutionParameterxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 17975 /* glGetConvolutionParameterxvOES */);
}

static PFNGLGETCOVERAGEMODULATIONTABLENVPROC
epoxy_glGetCoverageModulationTableNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_framebuffer_mixed_samples, 18006 /* glGetCoverageModulationTableNV */);
}

static PFNGLGETDEBUGMESSAGELOGPROC
epoxy_glGetDebugMessageLog_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_ARB_debug_output,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18037 /* "glGetDebugMessageLog" */,
        18037 /* "glGetDebugMessageLog" */,
        18082 /* "glGetDebugMessageLogARB" */,
        18106 /* "glGetDebugMessageLogKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18037 /* "glGetDebugMessageLog" */,
                                providers, entrypoints);
}

static PFNGLGETDEBUGMESSAGELOGAMDPROC
epoxy_glGetDebugMessageLogAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_debug_output, 18058 /* glGetDebugMessageLogAMD */);
}

static PFNGLGETDEBUGMESSAGELOGARBPROC
epoxy_glGetDebugMessageLogARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_debug_output,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18082 /* "glGetDebugMessageLogARB" */,
        18037 /* "glGetDebugMessageLog" */,
        18037 /* "glGetDebugMessageLog" */,
        18106 /* "glGetDebugMessageLogKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18082 /* "glGetDebugMessageLogARB" */,
                                providers, entrypoints);
}

static PFNGLGETDEBUGMESSAGELOGKHRPROC
epoxy_glGetDebugMessageLogKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_ARB_debug_output,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18106 /* "glGetDebugMessageLogKHR" */,
        18037 /* "glGetDebugMessageLog" */,
        18037 /* "glGetDebugMessageLog" */,
        18082 /* "glGetDebugMessageLogARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18106 /* "glGetDebugMessageLogKHR" */,
                                providers, entrypoints);
}

static PFNGLGETDETAILTEXFUNCSGISPROC
epoxy_glGetDetailTexFuncSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_detail_texture, 18130 /* glGetDetailTexFuncSGIS */);
}

static PFNGLGETDOUBLEINDEXEDVEXTPROC
epoxy_glGetDoubleIndexedvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_EXT_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18153 /* "glGetDoubleIndexedvEXT" */,
        18176 /* "glGetDoublei_v" */,
        18176 /* "glGetDoublei_v" */,
        18191 /* "glGetDoublei_vEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18153 /* "glGetDoubleIndexedvEXT" */,
                                providers, entrypoints);
}

static PFNGLGETDOUBLEI_VPROC
epoxy_glGetDoublei_v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18176 /* "glGetDoublei_v" */,
        18176 /* "glGetDoublei_v" */,
        18153 /* "glGetDoubleIndexedvEXT" */,
        18191 /* "glGetDoublei_vEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18176 /* "glGetDoublei_v" */,
                                providers, entrypoints);
}

static PFNGLGETDOUBLEI_VEXTPROC
epoxy_glGetDoublei_vEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_direct_state_access,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18191 /* "glGetDoublei_vEXT" */,
        18153 /* "glGetDoubleIndexedvEXT" */,
        18176 /* "glGetDoublei_v" */,
        18176 /* "glGetDoublei_v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18191 /* "glGetDoublei_vEXT" */,
                                providers, entrypoints);
}

static PFNGLGETDOUBLEVPROC
epoxy_glGetDoublev_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 18209 /* glGetDoublev */);
}

static PFNGLGETDRIVERCONTROLSTRINGQCOMPROC
epoxy_glGetDriverControlStringQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_driver_control, 18222 /* glGetDriverControlStringQCOM */);
}

static PFNGLGETDRIVERCONTROLSQCOMPROC
epoxy_glGetDriverControlsQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_driver_control, 18251 /* glGetDriverControlsQCOM */);
}

static PFNGLGETERRORPROC
epoxy_glGetError_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18275 /* "glGetError" */,
        18275 /* "glGetError" */,
        18275 /* "glGetError" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18275 /* "glGetError" */,
                                providers, entrypoints);
}

static PFNGLGETFENCEIVNVPROC
epoxy_glGetFenceivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fence, 18286 /* glGetFenceivNV */);
}

static PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
epoxy_glGetFinalCombinerInputParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 18301 /* glGetFinalCombinerInputParameterfvNV */);
}

static PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
epoxy_glGetFinalCombinerInputParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 18338 /* glGetFinalCombinerInputParameterivNV */);
}

static PFNGLGETFIRSTPERFQUERYIDINTELPROC
epoxy_glGetFirstPerfQueryIdINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 18375 /* glGetFirstPerfQueryIdINTEL */);
}

static PFNGLGETFIXEDVPROC
epoxy_glGetFixedv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 18402 /* glGetFixedv */);
}

static PFNGLGETFIXEDVOESPROC
epoxy_glGetFixedvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 18414 /* glGetFixedvOES */);
}

static PFNGLGETFLOATINDEXEDVEXTPROC
epoxy_glGetFloatIndexedvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18429 /* "glGetFloatIndexedvEXT" */,
        18451 /* "glGetFloati_v" */,
        18451 /* "glGetFloati_v" */,
        18465 /* "glGetFloati_vEXT" */,
        18482 /* "glGetFloati_vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18429 /* "glGetFloatIndexedvEXT" */,
                                providers, entrypoints);
}

static PFNGLGETFLOATI_VPROC
epoxy_glGetFloati_v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18451 /* "glGetFloati_v" */,
        18451 /* "glGetFloati_v" */,
        18429 /* "glGetFloatIndexedvEXT" */,
        18465 /* "glGetFloati_vEXT" */,
        18482 /* "glGetFloati_vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18451 /* "glGetFloati_v" */,
                                providers, entrypoints);
}

static PFNGLGETFLOATI_VEXTPROC
epoxy_glGetFloati_vEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_direct_state_access,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18465 /* "glGetFloati_vEXT" */,
        18429 /* "glGetFloatIndexedvEXT" */,
        18451 /* "glGetFloati_v" */,
        18451 /* "glGetFloati_v" */,
        18482 /* "glGetFloati_vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18465 /* "glGetFloati_vEXT" */,
                                providers, entrypoints);
}

static PFNGLGETFLOATI_VNVPROC
epoxy_glGetFloati_vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_EXT_direct_state_access,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_EXT_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18482 /* "glGetFloati_vNV" */,
        18429 /* "glGetFloatIndexedvEXT" */,
        18451 /* "glGetFloati_v" */,
        18451 /* "glGetFloati_v" */,
        18465 /* "glGetFloati_vEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18482 /* "glGetFloati_vNV" */,
                                providers, entrypoints);
}

static PFNGLGETFLOATVPROC
epoxy_glGetFloatv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18498 /* "glGetFloatv" */,
        18498 /* "glGetFloatv" */,
        18498 /* "glGetFloatv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18498 /* "glGetFloatv" */,
                                providers, entrypoints);
}

static PFNGLGETFOGFUNCSGISPROC
epoxy_glGetFogFuncSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_fog_function, 18510 /* glGetFogFuncSGIS */);
}

static PFNGLGETFRAGDATAINDEXPROC
epoxy_glGetFragDataIndex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_blend_func_extended,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18527 /* "glGetFragDataIndex" */,
        18527 /* "glGetFragDataIndex" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18527 /* "glGetFragDataIndex" */,
                                providers, entrypoints);
}

static PFNGLGETFRAGDATALOCATIONPROC
epoxy_glGetFragDataLocation_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18546 /* "glGetFragDataLocation" */,
        18546 /* "glGetFragDataLocation" */,
        18568 /* "glGetFragDataLocationEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18546 /* "glGetFragDataLocation" */,
                                providers, entrypoints);
}

static PFNGLGETFRAGDATALOCATIONEXTPROC
epoxy_glGetFragDataLocationEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18568 /* "glGetFragDataLocationEXT" */,
        18546 /* "glGetFragDataLocation" */,
        18546 /* "glGetFragDataLocation" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18568 /* "glGetFragDataLocationEXT" */,
                                providers, entrypoints);
}

static PFNGLGETFRAGMENTLIGHTFVSGIXPROC
epoxy_glGetFragmentLightfvSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 18593 /* glGetFragmentLightfvSGIX */);
}

static PFNGLGETFRAGMENTLIGHTIVSGIXPROC
epoxy_glGetFragmentLightivSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 18618 /* glGetFragmentLightivSGIX */);
}

static PFNGLGETFRAGMENTMATERIALFVSGIXPROC
epoxy_glGetFragmentMaterialfvSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 18643 /* glGetFragmentMaterialfvSGIX */);
}

static PFNGLGETFRAGMENTMATERIALIVSGIXPROC
epoxy_glGetFragmentMaterialivSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 18671 /* glGetFragmentMaterialivSGIX */);
}

static PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
epoxy_glGetFramebufferAttachmentParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18699 /* "glGetFramebufferAttachmentParameteriv" */,
        18699 /* "glGetFramebufferAttachmentParameteriv" */,
        18699 /* "glGetFramebufferAttachmentParameteriv" */,
        18737 /* "glGetFramebufferAttachmentParameterivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18699 /* "glGetFramebufferAttachmentParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
epoxy_glGetFramebufferAttachmentParameterivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18737 /* "glGetFramebufferAttachmentParameterivEXT" */,
        18699 /* "glGetFramebufferAttachmentParameteriv" */,
        18699 /* "glGetFramebufferAttachmentParameteriv" */,
        18699 /* "glGetFramebufferAttachmentParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18737 /* "glGetFramebufferAttachmentParameterivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC
epoxy_glGetFramebufferAttachmentParameterivOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 18778 /* glGetFramebufferAttachmentParameterivOES */);
}

static PFNGLGETFRAMEBUFFERPARAMETERIVPROC
epoxy_glGetFramebufferParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_framebuffer_no_attachments,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18819 /* "glGetFramebufferParameteriv" */,
        18819 /* "glGetFramebufferParameteriv" */,
        18819 /* "glGetFramebufferParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18819 /* "glGetFramebufferParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
epoxy_glGetFramebufferParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18847 /* glGetFramebufferParameterivEXT */);
}

static PFNGLGETGRAPHICSRESETSTATUSPROC
epoxy_glGetGraphicsResetStatus_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18878 /* "glGetGraphicsResetStatus" */,
        18878 /* "glGetGraphicsResetStatus" */,
        18959 /* "glGetGraphicsResetStatusKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18878 /* "glGetGraphicsResetStatus" */,
                                providers, entrypoints);
}

static PFNGLGETGRAPHICSRESETSTATUSARBPROC
epoxy_glGetGraphicsResetStatusARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 18903 /* glGetGraphicsResetStatusARB */);
}

static PFNGLGETGRAPHICSRESETSTATUSEXTPROC
epoxy_glGetGraphicsResetStatusEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_robustness, 18931 /* glGetGraphicsResetStatusEXT */);
}

static PFNGLGETGRAPHICSRESETSTATUSKHRPROC
epoxy_glGetGraphicsResetStatusKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_robustness,
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        18959 /* "glGetGraphicsResetStatusKHR" */,
        18878 /* "glGetGraphicsResetStatus" */,
        18878 /* "glGetGraphicsResetStatus" */,
    };
    return gl_provider_resolver(entrypoint_strings + 18959 /* "glGetGraphicsResetStatusKHR" */,
                                providers, entrypoints);
}

static PFNGLGETHANDLEARBPROC
epoxy_glGetHandleARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 18987 /* glGetHandleARB */);
}

static PFNGLGETHISTOGRAMPROC
epoxy_glGetHistogram_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 19002 /* glGetHistogram */);
}

static PFNGLGETHISTOGRAMEXTPROC
epoxy_glGetHistogramEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 19017 /* glGetHistogramEXT */);
}

static PFNGLGETHISTOGRAMPARAMETERFVPROC
epoxy_glGetHistogramParameterfv_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 19035 /* glGetHistogramParameterfv */);
}

static PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
epoxy_glGetHistogramParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 19061 /* glGetHistogramParameterfvEXT */);
}

static PFNGLGETHISTOGRAMPARAMETERIVPROC
epoxy_glGetHistogramParameteriv_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 19090 /* glGetHistogramParameteriv */);
}

static PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
epoxy_glGetHistogramParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 19116 /* glGetHistogramParameterivEXT */);
}

static PFNGLGETHISTOGRAMPARAMETERXVOESPROC
epoxy_glGetHistogramParameterxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 19145 /* glGetHistogramParameterxvOES */);
}

static PFNGLGETIMAGEHANDLEARBPROC
epoxy_glGetImageHandleARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 19174 /* glGetImageHandleARB */);
}

static PFNGLGETIMAGEHANDLENVPROC
epoxy_glGetImageHandleNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 19194 /* glGetImageHandleNV */);
}

static PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
epoxy_glGetImageTransformParameterfvHP_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 19213 /* glGetImageTransformParameterfvHP */);
}

static PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
epoxy_glGetImageTransformParameterivHP_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 19246 /* glGetImageTransformParameterivHP */);
}

static PFNGLGETINFOLOGARBPROC
epoxy_glGetInfoLogARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 19279 /* glGetInfoLogARB */);
}

static PFNGLGETINSTRUMENTSSGIXPROC
epoxy_glGetInstrumentsSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 19295 /* glGetInstrumentsSGIX */);
}

static PFNGLGETINTEGER64I_VPROC
epoxy_glGetInteger64i_v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        19316 /* "glGetInteger64i_v" */,
        19316 /* "glGetInteger64i_v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 19316 /* "glGetInteger64i_v" */,
                                providers, entrypoints);
}

static PFNGLGETINTEGER64VPROC
epoxy_glGetInteger64v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_sync,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        19334 /* "glGetInteger64v" */,
        19334 /* "glGetInteger64v" */,
        19334 /* "glGetInteger64v" */,
        19350 /* "glGetInteger64vAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 19334 /* "glGetInteger64v" */,
                                providers, entrypoints);
}

static PFNGLGETINTEGER64VAPPLEPROC
epoxy_glGetInteger64vAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_sync,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        19350 /* "glGetInteger64vAPPLE" */,
        19334 /* "glGetInteger64v" */,
        19334 /* "glGetInteger64v" */,
        19334 /* "glGetInteger64v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 19350 /* "glGetInteger64vAPPLE" */,
                                providers, entrypoints);
}

static PFNGLGETINTEGERINDEXEDVEXTPROC
epoxy_glGetIntegerIndexedvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        19371 /* "glGetIntegerIndexedvEXT" */,
        19371 /* "glGetIntegerIndexedvEXT" */,
        19395 /* "glGetIntegeri_v" */,
        19395 /* "glGetIntegeri_v" */,
        19395 /* "glGetIntegeri_v" */,
        19395 /* "glGetIntegeri_v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 19371 /* "glGetIntegerIndexedvEXT" */,
                                providers, entrypoints);
}

static PFNGLGETINTEGERI_VPROC
epoxy_glGetIntegeri_v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        19395 /* "glGetIntegeri_v" */,
        19395 /* "glGetIntegeri_v" */,
        19395 /* "glGetIntegeri_v" */,
        19395 /* "glGetIntegeri_v" */,
        19371 /* "glGetIntegerIndexedvEXT" */,
        19371 /* "glGetIntegerIndexedvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 19395 /* "glGetIntegeri_v" */,
                                providers, entrypoints);
}

static PFNGLGETINTEGERI_VEXTPROC
epoxy_glGetIntegeri_vEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_multiview_draw_buffers, 19411 /* glGetIntegeri_vEXT */);
}

static PFNGLGETINTEGERUI64I_VNVPROC
epoxy_glGetIntegerui64i_vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 19430 /* glGetIntegerui64i_vNV */);
}

static PFNGLGETINTEGERUI64VNVPROC
epoxy_glGetIntegerui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 19452 /* glGetIntegerui64vNV */);
}

static PFNGLGETINTEGERVPROC
epoxy_glGetIntegerv_resolver(void)
{
    return gl_single_resolver(always_present, 19472 /* glGetIntegerv */);
}

static PFNGLGETINTERNALFORMATSAMPLEIVNVPROC
epoxy_glGetInternalformatSampleivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_internalformat_sample_query, 19486 /* glGetInternalformatSampleivNV */);
}

static PFNGLGETINTERNALFORMATI64VPROC
epoxy_glGetInternalformati64v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_internalformat_query2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        19516 /* "glGetInternalformati64v" */,
        19516 /* "glGetInternalformati64v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 19516 /* "glGetInternalformati64v" */,
                                providers, entrypoints);
}

static PFNGLGETINTERNALFORMATIVPROC
epoxy_glGetInternalformativ_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_internalformat_query,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        19540 /* "glGetInternalformativ" */,
        19540 /* "glGetInternalformativ" */,
        19540 /* "glGetInternalformativ" */,
    };
    return gl_provider_resolver(entrypoint_strings + 19540 /* "glGetInternalformativ" */,
                                providers, entrypoints);
}

static PFNGLGETINVARIANTBOOLEANVEXTPROC
epoxy_glGetInvariantBooleanvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 19562 /* glGetInvariantBooleanvEXT */);
}

static PFNGLGETINVARIANTFLOATVEXTPROC
epoxy_glGetInvariantFloatvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 19588 /* glGetInvariantFloatvEXT */);
}

static PFNGLGETINVARIANTINTEGERVEXTPROC
epoxy_glGetInvariantIntegervEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 19612 /* glGetInvariantIntegervEXT */);
}

static PFNGLGETLIGHTFVPROC
epoxy_glGetLightfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        19638 /* "glGetLightfv" */,
        19638 /* "glGetLightfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 19638 /* "glGetLightfv" */,
                                providers, entrypoints);
}

static PFNGLGETLIGHTIVPROC
epoxy_glGetLightiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 19651 /* glGetLightiv */);
}

static PFNGLGETLIGHTXOESPROC
epoxy_glGetLightxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 19664 /* glGetLightxOES */);
}

static PFNGLGETLIGHTXVPROC
epoxy_glGetLightxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 19679 /* glGetLightxv */);
}

static PFNGLGETLIGHTXVOESPROC
epoxy_glGetLightxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 19692 /* glGetLightxvOES */);
}

static PFNGLGETLISTPARAMETERFVSGIXPROC
epoxy_glGetListParameterfvSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 19708 /* glGetListParameterfvSGIX */);
}

static PFNGLGETLISTPARAMETERIVSGIXPROC
epoxy_glGetListParameterivSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 19733 /* glGetListParameterivSGIX */);
}

static PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
epoxy_glGetLocalConstantBooleanvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 19758 /* glGetLocalConstantBooleanvEXT */);
}

static PFNGLGETLOCALCONSTANTFLOATVEXTPROC
epoxy_glGetLocalConstantFloatvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 19788 /* glGetLocalConstantFloatvEXT */);
}

static PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
epoxy_glGetLocalConstantIntegervEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 19816 /* glGetLocalConstantIntegervEXT */);
}

static PFNGLGETMAPATTRIBPARAMETERFVNVPROC
epoxy_glGetMapAttribParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 19846 /* glGetMapAttribParameterfvNV */);
}

static PFNGLGETMAPATTRIBPARAMETERIVNVPROC
epoxy_glGetMapAttribParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 19874 /* glGetMapAttribParameterivNV */);
}

static PFNGLGETMAPCONTROLPOINTSNVPROC
epoxy_glGetMapControlPointsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 19902 /* glGetMapControlPointsNV */);
}

static PFNGLGETMAPPARAMETERFVNVPROC
epoxy_glGetMapParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 19926 /* glGetMapParameterfvNV */);
}

static PFNGLGETMAPPARAMETERIVNVPROC
epoxy_glGetMapParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 19948 /* glGetMapParameterivNV */);
}

static PFNGLGETMAPDVPROC
epoxy_glGetMapdv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 19970 /* glGetMapdv */);
}

static PFNGLGETMAPFVPROC
epoxy_glGetMapfv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 19981 /* glGetMapfv */);
}

static PFNGLGETMAPIVPROC
epoxy_glGetMapiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 19992 /* glGetMapiv */);
}

static PFNGLGETMAPXVOESPROC
epoxy_glGetMapxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 20003 /* glGetMapxvOES */);
}

static PFNGLGETMATERIALFVPROC
epoxy_glGetMaterialfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        20017 /* "glGetMaterialfv" */,
        20017 /* "glGetMaterialfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 20017 /* "glGetMaterialfv" */,
                                providers, entrypoints);
}

static PFNGLGETMATERIALIVPROC
epoxy_glGetMaterialiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 20033 /* glGetMaterialiv */);
}

static PFNGLGETMATERIALXOESPROC
epoxy_glGetMaterialxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 20049 /* glGetMaterialxOES */);
}

static PFNGLGETMATERIALXVPROC
epoxy_glGetMaterialxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 20067 /* glGetMaterialxv */);
}

static PFNGLGETMATERIALXVOESPROC
epoxy_glGetMaterialxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 20083 /* glGetMaterialxvOES */);
}

static PFNGLGETMINMAXPROC
epoxy_glGetMinmax_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 20102 /* glGetMinmax */);
}

static PFNGLGETMINMAXEXTPROC
epoxy_glGetMinmaxEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 20114 /* glGetMinmaxEXT */);
}

static PFNGLGETMINMAXPARAMETERFVPROC
epoxy_glGetMinmaxParameterfv_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 20129 /* glGetMinmaxParameterfv */);
}

static PFNGLGETMINMAXPARAMETERFVEXTPROC
epoxy_glGetMinmaxParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 20152 /* glGetMinmaxParameterfvEXT */);
}

static PFNGLGETMINMAXPARAMETERIVPROC
epoxy_glGetMinmaxParameteriv_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 20178 /* glGetMinmaxParameteriv */);
}

static PFNGLGETMINMAXPARAMETERIVEXTPROC
epoxy_glGetMinmaxParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 20201 /* glGetMinmaxParameterivEXT */);
}

static PFNGLGETMULTITEXENVFVEXTPROC
epoxy_glGetMultiTexEnvfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20227 /* glGetMultiTexEnvfvEXT */);
}

static PFNGLGETMULTITEXENVIVEXTPROC
epoxy_glGetMultiTexEnvivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20249 /* glGetMultiTexEnvivEXT */);
}

static PFNGLGETMULTITEXGENDVEXTPROC
epoxy_glGetMultiTexGendvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20271 /* glGetMultiTexGendvEXT */);
}

static PFNGLGETMULTITEXGENFVEXTPROC
epoxy_glGetMultiTexGenfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20293 /* glGetMultiTexGenfvEXT */);
}

static PFNGLGETMULTITEXGENIVEXTPROC
epoxy_glGetMultiTexGenivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20315 /* glGetMultiTexGenivEXT */);
}

static PFNGLGETMULTITEXIMAGEEXTPROC
epoxy_glGetMultiTexImageEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20337 /* glGetMultiTexImageEXT */);
}

static PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
epoxy_glGetMultiTexLevelParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20359 /* glGetMultiTexLevelParameterfvEXT */);
}

static PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
epoxy_glGetMultiTexLevelParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20392 /* glGetMultiTexLevelParameterivEXT */);
}

static PFNGLGETMULTITEXPARAMETERIIVEXTPROC
epoxy_glGetMultiTexParameterIivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20425 /* glGetMultiTexParameterIivEXT */);
}

static PFNGLGETMULTITEXPARAMETERIUIVEXTPROC
epoxy_glGetMultiTexParameterIuivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20454 /* glGetMultiTexParameterIuivEXT */);
}

static PFNGLGETMULTITEXPARAMETERFVEXTPROC
epoxy_glGetMultiTexParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20484 /* glGetMultiTexParameterfvEXT */);
}

static PFNGLGETMULTITEXPARAMETERIVEXTPROC
epoxy_glGetMultiTexParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20512 /* glGetMultiTexParameterivEXT */);
}

static PFNGLGETMULTISAMPLEFVPROC
epoxy_glGetMultisamplefv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_texture_multisample,
        OpenGL_ES_3_1,
        GL_extension_GL_NV_explicit_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        20540 /* "glGetMultisamplefv" */,
        20540 /* "glGetMultisamplefv" */,
        20540 /* "glGetMultisamplefv" */,
        20559 /* "glGetMultisamplefvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 20540 /* "glGetMultisamplefv" */,
                                providers, entrypoints);
}

static PFNGLGETMULTISAMPLEFVNVPROC
epoxy_glGetMultisamplefvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_explicit_multisample,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_texture_multisample,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        20559 /* "glGetMultisamplefvNV" */,
        20540 /* "glGetMultisamplefv" */,
        20540 /* "glGetMultisamplefv" */,
        20540 /* "glGetMultisamplefv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 20559 /* "glGetMultisamplefvNV" */,
                                providers, entrypoints);
}

static PFNGLGETNAMEDBUFFERPARAMETERI64VPROC
epoxy_glGetNamedBufferParameteri64v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        20580 /* "glGetNamedBufferParameteri64v" */,
        20580 /* "glGetNamedBufferParameteri64v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 20580 /* "glGetNamedBufferParameteri64v" */,
                                providers, entrypoints);
}

static PFNGLGETNAMEDBUFFERPARAMETERIVPROC
epoxy_glGetNamedBufferParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        20610 /* "glGetNamedBufferParameteriv" */,
        20610 /* "glGetNamedBufferParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 20610 /* "glGetNamedBufferParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
epoxy_glGetNamedBufferParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20638 /* glGetNamedBufferParameterivEXT */);
}

static PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
epoxy_glGetNamedBufferParameterui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 20669 /* glGetNamedBufferParameterui64vNV */);
}

static PFNGLGETNAMEDBUFFERPOINTERVPROC
epoxy_glGetNamedBufferPointerv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        20702 /* "glGetNamedBufferPointerv" */,
        20702 /* "glGetNamedBufferPointerv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 20702 /* "glGetNamedBufferPointerv" */,
                                providers, entrypoints);
}

static PFNGLGETNAMEDBUFFERPOINTERVEXTPROC
epoxy_glGetNamedBufferPointervEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20727 /* glGetNamedBufferPointervEXT */);
}

static PFNGLGETNAMEDBUFFERSUBDATAPROC
epoxy_glGetNamedBufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        20755 /* "glGetNamedBufferSubData" */,
        20755 /* "glGetNamedBufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 20755 /* "glGetNamedBufferSubData" */,
                                providers, entrypoints);
}

static PFNGLGETNAMEDBUFFERSUBDATAEXTPROC
epoxy_glGetNamedBufferSubDataEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20779 /* glGetNamedBufferSubDataEXT */);
}

static PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
epoxy_glGetNamedFramebufferAttachmentParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        20806 /* "glGetNamedFramebufferAttachmentParameteriv" */,
        20806 /* "glGetNamedFramebufferAttachmentParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 20806 /* "glGetNamedFramebufferAttachmentParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
epoxy_glGetNamedFramebufferAttachmentParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20849 /* glGetNamedFramebufferAttachmentParameterivEXT */);
}

static PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC
epoxy_glGetNamedFramebufferParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        20895 /* "glGetNamedFramebufferParameteriv" */,
        20895 /* "glGetNamedFramebufferParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 20895 /* "glGetNamedFramebufferParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC
epoxy_glGetNamedFramebufferParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20928 /* glGetNamedFramebufferParameterivEXT */);
}

static PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
epoxy_glGetNamedProgramLocalParameterIivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20964 /* glGetNamedProgramLocalParameterIivEXT */);
}

static PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
epoxy_glGetNamedProgramLocalParameterIuivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 21002 /* glGetNamedProgramLocalParameterIuivEXT */);
}

static PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
epoxy_glGetNamedProgramLocalParameterdvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 21041 /* glGetNamedProgramLocalParameterdvEXT */);
}

static PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
epoxy_glGetNamedProgramLocalParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 21078 /* glGetNamedProgramLocalParameterfvEXT */);
}

static PFNGLGETNAMEDPROGRAMSTRINGEXTPROC
epoxy_glGetNamedProgramStringEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 21115 /* glGetNamedProgramStringEXT */);
}

static PFNGLGETNAMEDPROGRAMIVEXTPROC
epoxy_glGetNamedProgramivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 21142 /* glGetNamedProgramivEXT */);
}

static PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
epoxy_glGetNamedRenderbufferParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        21165 /* "glGetNamedRenderbufferParameteriv" */,
        21165 /* "glGetNamedRenderbufferParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 21165 /* "glGetNamedRenderbufferParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
epoxy_glGetNamedRenderbufferParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 21199 /* glGetNamedRenderbufferParameterivEXT */);
}

static PFNGLGETNAMEDSTRINGARBPROC
epoxy_glGetNamedStringARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 21236 /* glGetNamedStringARB */);
}

static PFNGLGETNAMEDSTRINGIVARBPROC
epoxy_glGetNamedStringivARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 21256 /* glGetNamedStringivARB */);
}

static PFNGLGETNEXTPERFQUERYIDINTELPROC
epoxy_glGetNextPerfQueryIdINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 21278 /* glGetNextPerfQueryIdINTEL */);
}

static PFNGLGETOBJECTBUFFERFVATIPROC
epoxy_glGetObjectBufferfvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 21304 /* glGetObjectBufferfvATI */);
}

static PFNGLGETOBJECTBUFFERIVATIPROC
epoxy_glGetObjectBufferivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 21327 /* glGetObjectBufferivATI */);
}

static PFNGLGETOBJECTLABELPROC
epoxy_glGetObjectLabel_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        21350 /* "glGetObjectLabel" */,
        21350 /* "glGetObjectLabel" */,
        21387 /* "glGetObjectLabelKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 21350 /* "glGetObjectLabel" */,
                                providers, entrypoints);
}

static PFNGLGETOBJECTLABELEXTPROC
epoxy_glGetObjectLabelEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_debug_label, 21367 /* glGetObjectLabelEXT */);
}

static PFNGLGETOBJECTLABELKHRPROC
epoxy_glGetObjectLabelKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        21387 /* "glGetObjectLabelKHR" */,
        21350 /* "glGetObjectLabel" */,
        21350 /* "glGetObjectLabel" */,
    };
    return gl_provider_resolver(entrypoint_strings + 21387 /* "glGetObjectLabelKHR" */,
                                providers, entrypoints);
}

static PFNGLGETOBJECTPARAMETERFVARBPROC
epoxy_glGetObjectParameterfvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 21407 /* glGetObjectParameterfvARB */);
}

static PFNGLGETOBJECTPARAMETERIVAPPLEPROC
epoxy_glGetObjectParameterivAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_object_purgeable, 21433 /* glGetObjectParameterivAPPLE */);
}

static PFNGLGETOBJECTPARAMETERIVARBPROC
epoxy_glGetObjectParameterivARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 21461 /* glGetObjectParameterivARB */);
}

static PFNGLGETOBJECTPTRLABELPROC
epoxy_glGetObjectPtrLabel_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        21487 /* "glGetObjectPtrLabel" */,
        21487 /* "glGetObjectPtrLabel" */,
        21507 /* "glGetObjectPtrLabelKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 21487 /* "glGetObjectPtrLabel" */,
                                providers, entrypoints);
}

static PFNGLGETOBJECTPTRLABELKHRPROC
epoxy_glGetObjectPtrLabelKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        21507 /* "glGetObjectPtrLabelKHR" */,
        21487 /* "glGetObjectPtrLabel" */,
        21487 /* "glGetObjectPtrLabel" */,
    };
    return gl_provider_resolver(entrypoint_strings + 21507 /* "glGetObjectPtrLabelKHR" */,
                                providers, entrypoints);
}

static PFNGLGETOCCLUSIONQUERYIVNVPROC
epoxy_glGetOcclusionQueryivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 21530 /* glGetOcclusionQueryivNV */);
}

static PFNGLGETOCCLUSIONQUERYUIVNVPROC
epoxy_glGetOcclusionQueryuivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 21554 /* glGetOcclusionQueryuivNV */);
}

static PFNGLGETPATHCOLORGENFVNVPROC
epoxy_glGetPathColorGenfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21579 /* glGetPathColorGenfvNV */);
}

static PFNGLGETPATHCOLORGENIVNVPROC
epoxy_glGetPathColorGenivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21601 /* glGetPathColorGenivNV */);
}

static PFNGLGETPATHCOMMANDSNVPROC
epoxy_glGetPathCommandsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21623 /* glGetPathCommandsNV */);
}

static PFNGLGETPATHCOORDSNVPROC
epoxy_glGetPathCoordsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21643 /* glGetPathCoordsNV */);
}

static PFNGLGETPATHDASHARRAYNVPROC
epoxy_glGetPathDashArrayNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21661 /* glGetPathDashArrayNV */);
}

static PFNGLGETPATHLENGTHNVPROC
epoxy_glGetPathLengthNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21682 /* glGetPathLengthNV */);
}

static PFNGLGETPATHMETRICRANGENVPROC
epoxy_glGetPathMetricRangeNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21700 /* glGetPathMetricRangeNV */);
}

static PFNGLGETPATHMETRICSNVPROC
epoxy_glGetPathMetricsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21723 /* glGetPathMetricsNV */);
}

static PFNGLGETPATHPARAMETERFVNVPROC
epoxy_glGetPathParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21742 /* glGetPathParameterfvNV */);
}

static PFNGLGETPATHPARAMETERIVNVPROC
epoxy_glGetPathParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21765 /* glGetPathParameterivNV */);
}

static PFNGLGETPATHSPACINGNVPROC
epoxy_glGetPathSpacingNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21788 /* glGetPathSpacingNV */);
}

static PFNGLGETPATHTEXGENFVNVPROC
epoxy_glGetPathTexGenfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21807 /* glGetPathTexGenfvNV */);
}

static PFNGLGETPATHTEXGENIVNVPROC
epoxy_glGetPathTexGenivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 21827 /* glGetPathTexGenivNV */);
}

static PFNGLGETPERFCOUNTERINFOINTELPROC
epoxy_glGetPerfCounterInfoINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 21847 /* glGetPerfCounterInfoINTEL */);
}

static PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
epoxy_glGetPerfMonitorCounterDataAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 21873 /* glGetPerfMonitorCounterDataAMD */);
}

static PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
epoxy_glGetPerfMonitorCounterInfoAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 21904 /* glGetPerfMonitorCounterInfoAMD */);
}

static PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
epoxy_glGetPerfMonitorCounterStringAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 21935 /* glGetPerfMonitorCounterStringAMD */);
}

static PFNGLGETPERFMONITORCOUNTERSAMDPROC
epoxy_glGetPerfMonitorCountersAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 21968 /* glGetPerfMonitorCountersAMD */);
}

static PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
epoxy_glGetPerfMonitorGroupStringAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 21996 /* glGetPerfMonitorGroupStringAMD */);
}

static PFNGLGETPERFMONITORGROUPSAMDPROC
epoxy_glGetPerfMonitorGroupsAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 22027 /* glGetPerfMonitorGroupsAMD */);
}

static PFNGLGETPERFQUERYDATAINTELPROC
epoxy_glGetPerfQueryDataINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 22053 /* glGetPerfQueryDataINTEL */);
}

static PFNGLGETPERFQUERYIDBYNAMEINTELPROC
epoxy_glGetPerfQueryIdByNameINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 22077 /* glGetPerfQueryIdByNameINTEL */);
}

static PFNGLGETPERFQUERYINFOINTELPROC
epoxy_glGetPerfQueryInfoINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 22105 /* glGetPerfQueryInfoINTEL */);
}

static PFNGLGETPIXELMAPFVPROC
epoxy_glGetPixelMapfv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 22129 /* glGetPixelMapfv */);
}

static PFNGLGETPIXELMAPUIVPROC
epoxy_glGetPixelMapuiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 22145 /* glGetPixelMapuiv */);
}

static PFNGLGETPIXELMAPUSVPROC
epoxy_glGetPixelMapusv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 22162 /* glGetPixelMapusv */);
}

static PFNGLGETPIXELMAPXVPROC
epoxy_glGetPixelMapxv_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 22179 /* glGetPixelMapxv */);
}

static PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
epoxy_glGetPixelTexGenParameterfvSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 22195 /* glGetPixelTexGenParameterfvSGIS */);
}

static PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
epoxy_glGetPixelTexGenParameterivSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 22227 /* glGetPixelTexGenParameterivSGIS */);
}

static PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC
epoxy_glGetPixelTransformParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 22259 /* glGetPixelTransformParameterfvEXT */);
}

static PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC
epoxy_glGetPixelTransformParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 22293 /* glGetPixelTransformParameterivEXT */);
}

static PFNGLGETPOINTERINDEXEDVEXTPROC
epoxy_glGetPointerIndexedvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 22327 /* glGetPointerIndexedvEXT */);
}

static PFNGLGETPOINTERI_VEXTPROC
epoxy_glGetPointeri_vEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 22351 /* glGetPointeri_vEXT */);
}

static PFNGLGETPOINTERVPROC
epoxy_glGetPointerv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        OpenGL_ES_1_0,
        GL_extension_GL_EXT_vertex_array,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22370 /* "glGetPointerv" */,
        22370 /* "glGetPointerv" */,
        22370 /* "glGetPointerv" */,
        22370 /* "glGetPointerv" */,
        22384 /* "glGetPointervEXT" */,
        22401 /* "glGetPointervKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22370 /* "glGetPointerv" */,
                                providers, entrypoints);
}

static PFNGLGETPOINTERVEXTPROC
epoxy_glGetPointervEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_array,
        Desktop_OpenGL_1_1,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        OpenGL_ES_1_0,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22384 /* "glGetPointervEXT" */,
        22370 /* "glGetPointerv" */,
        22370 /* "glGetPointerv" */,
        22370 /* "glGetPointerv" */,
        22370 /* "glGetPointerv" */,
        22401 /* "glGetPointervKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22384 /* "glGetPointervEXT" */,
                                providers, entrypoints);
}

static PFNGLGETPOINTERVKHRPROC
epoxy_glGetPointervKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_1_1,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        OpenGL_ES_1_0,
        GL_extension_GL_EXT_vertex_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22401 /* "glGetPointervKHR" */,
        22370 /* "glGetPointerv" */,
        22370 /* "glGetPointerv" */,
        22370 /* "glGetPointerv" */,
        22370 /* "glGetPointerv" */,
        22384 /* "glGetPointervEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22401 /* "glGetPointervKHR" */,
                                providers, entrypoints);
}

static PFNGLGETPOLYGONSTIPPLEPROC
epoxy_glGetPolygonStipple_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 22418 /* glGetPolygonStipple */);
}

static PFNGLGETPROGRAMBINARYPROC
epoxy_glGetProgramBinary_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_get_program_binary,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_get_program_binary,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22438 /* "glGetProgramBinary" */,
        22438 /* "glGetProgramBinary" */,
        22438 /* "glGetProgramBinary" */,
        22457 /* "glGetProgramBinaryOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22438 /* "glGetProgramBinary" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMBINARYOESPROC
epoxy_glGetProgramBinaryOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_get_program_binary,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_get_program_binary,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22457 /* "glGetProgramBinaryOES" */,
        22438 /* "glGetProgramBinary" */,
        22438 /* "glGetProgramBinary" */,
        22438 /* "glGetProgramBinary" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22457 /* "glGetProgramBinaryOES" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMENVPARAMETERIIVNVPROC
epoxy_glGetProgramEnvParameterIivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 22479 /* glGetProgramEnvParameterIivNV */);
}

static PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
epoxy_glGetProgramEnvParameterIuivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 22509 /* glGetProgramEnvParameterIuivNV */);
}

static PFNGLGETPROGRAMENVPARAMETERDVARBPROC
epoxy_glGetProgramEnvParameterdvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22540 /* "glGetProgramEnvParameterdvARB" */,
        22540 /* "glGetProgramEnvParameterdvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22540 /* "glGetProgramEnvParameterdvARB" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMENVPARAMETERFVARBPROC
epoxy_glGetProgramEnvParameterfvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22570 /* "glGetProgramEnvParameterfvARB" */,
        22570 /* "glGetProgramEnvParameterfvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22570 /* "glGetProgramEnvParameterfvARB" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMINFOLOGPROC
epoxy_glGetProgramInfoLog_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22600 /* "glGetProgramInfoLog" */,
        22600 /* "glGetProgramInfoLog" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22600 /* "glGetProgramInfoLog" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMINTERFACEIVPROC
epoxy_glGetProgramInterfaceiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_program_interface_query,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22620 /* "glGetProgramInterfaceiv" */,
        22620 /* "glGetProgramInterfaceiv" */,
        22620 /* "glGetProgramInterfaceiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22620 /* "glGetProgramInterfaceiv" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
epoxy_glGetProgramLocalParameterIivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 22644 /* glGetProgramLocalParameterIivNV */);
}

static PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
epoxy_glGetProgramLocalParameterIuivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 22676 /* glGetProgramLocalParameterIuivNV */);
}

static PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
epoxy_glGetProgramLocalParameterdvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22709 /* "glGetProgramLocalParameterdvARB" */,
        22709 /* "glGetProgramLocalParameterdvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22709 /* "glGetProgramLocalParameterdvARB" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
epoxy_glGetProgramLocalParameterfvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22741 /* "glGetProgramLocalParameterfvARB" */,
        22741 /* "glGetProgramLocalParameterfvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22741 /* "glGetProgramLocalParameterfvARB" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
epoxy_glGetProgramNamedParameterdvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 22773 /* glGetProgramNamedParameterdvNV */);
}

static PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
epoxy_glGetProgramNamedParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 22804 /* glGetProgramNamedParameterfvNV */);
}

static PFNGLGETPROGRAMPARAMETERDVNVPROC
epoxy_glGetProgramParameterdvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 22835 /* glGetProgramParameterdvNV */);
}

static PFNGLGETPROGRAMPARAMETERFVNVPROC
epoxy_glGetProgramParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 22861 /* glGetProgramParameterfvNV */);
}

static PFNGLGETPROGRAMPIPELINEINFOLOGPROC
epoxy_glGetProgramPipelineInfoLog_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22887 /* "glGetProgramPipelineInfoLog" */,
        22887 /* "glGetProgramPipelineInfoLog" */,
        22887 /* "glGetProgramPipelineInfoLog" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22887 /* "glGetProgramPipelineInfoLog" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC
epoxy_glGetProgramPipelineInfoLogEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 22915 /* glGetProgramPipelineInfoLogEXT */);
}

static PFNGLGETPROGRAMPIPELINEIVPROC
epoxy_glGetProgramPipelineiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22946 /* "glGetProgramPipelineiv" */,
        22946 /* "glGetProgramPipelineiv" */,
        22946 /* "glGetProgramPipelineiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22946 /* "glGetProgramPipelineiv" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMPIPELINEIVEXTPROC
epoxy_glGetProgramPipelineivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 22969 /* glGetProgramPipelineivEXT */);
}

static PFNGLGETPROGRAMRESOURCEINDEXPROC
epoxy_glGetProgramResourceIndex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_program_interface_query,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        22995 /* "glGetProgramResourceIndex" */,
        22995 /* "glGetProgramResourceIndex" */,
        22995 /* "glGetProgramResourceIndex" */,
    };
    return gl_provider_resolver(entrypoint_strings + 22995 /* "glGetProgramResourceIndex" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMRESOURCELOCATIONPROC
epoxy_glGetProgramResourceLocation_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_program_interface_query,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23021 /* "glGetProgramResourceLocation" */,
        23021 /* "glGetProgramResourceLocation" */,
        23021 /* "glGetProgramResourceLocation" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23021 /* "glGetProgramResourceLocation" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
epoxy_glGetProgramResourceLocationIndex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_program_interface_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23050 /* "glGetProgramResourceLocationIndex" */,
        23050 /* "glGetProgramResourceLocationIndex" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23050 /* "glGetProgramResourceLocationIndex" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMRESOURCENAMEPROC
epoxy_glGetProgramResourceName_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_program_interface_query,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23084 /* "glGetProgramResourceName" */,
        23084 /* "glGetProgramResourceName" */,
        23084 /* "glGetProgramResourceName" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23084 /* "glGetProgramResourceName" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMRESOURCEFVNVPROC
epoxy_glGetProgramResourcefvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 23109 /* glGetProgramResourcefvNV */);
}

static PFNGLGETPROGRAMRESOURCEIVPROC
epoxy_glGetProgramResourceiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_program_interface_query,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23134 /* "glGetProgramResourceiv" */,
        23134 /* "glGetProgramResourceiv" */,
        23134 /* "glGetProgramResourceiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23134 /* "glGetProgramResourceiv" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMSTAGEIVPROC
epoxy_glGetProgramStageiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_shader_subroutine,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23157 /* "glGetProgramStageiv" */,
        23157 /* "glGetProgramStageiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23157 /* "glGetProgramStageiv" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMSTRINGARBPROC
epoxy_glGetProgramStringARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23177 /* "glGetProgramStringARB" */,
        23177 /* "glGetProgramStringARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23177 /* "glGetProgramStringARB" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMSTRINGNVPROC
epoxy_glGetProgramStringNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 23199 /* glGetProgramStringNV */);
}

static PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC
epoxy_glGetProgramSubroutineParameteruivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program5, 23220 /* glGetProgramSubroutineParameteruivNV */);
}

static PFNGLGETPROGRAMIVPROC
epoxy_glGetProgramiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23257 /* "glGetProgramiv" */,
        23257 /* "glGetProgramiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23257 /* "glGetProgramiv" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMIVARBPROC
epoxy_glGetProgramivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23272 /* "glGetProgramivARB" */,
        23272 /* "glGetProgramivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23272 /* "glGetProgramivARB" */,
                                providers, entrypoints);
}

static PFNGLGETPROGRAMIVNVPROC
epoxy_glGetProgramivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 23290 /* glGetProgramivNV */);
}

static PFNGLGETQUERYBUFFEROBJECTI64VPROC
epoxy_glGetQueryBufferObjecti64v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23307 /* "glGetQueryBufferObjecti64v" */,
        23307 /* "glGetQueryBufferObjecti64v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23307 /* "glGetQueryBufferObjecti64v" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYBUFFEROBJECTIVPROC
epoxy_glGetQueryBufferObjectiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23334 /* "glGetQueryBufferObjectiv" */,
        23334 /* "glGetQueryBufferObjectiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23334 /* "glGetQueryBufferObjectiv" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYBUFFEROBJECTUI64VPROC
epoxy_glGetQueryBufferObjectui64v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23359 /* "glGetQueryBufferObjectui64v" */,
        23359 /* "glGetQueryBufferObjectui64v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23359 /* "glGetQueryBufferObjectui64v" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYBUFFEROBJECTUIVPROC
epoxy_glGetQueryBufferObjectuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23387 /* "glGetQueryBufferObjectuiv" */,
        23387 /* "glGetQueryBufferObjectuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23387 /* "glGetQueryBufferObjectuiv" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYINDEXEDIVPROC
epoxy_glGetQueryIndexediv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23413 /* "glGetQueryIndexediv" */,
        23413 /* "glGetQueryIndexediv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23413 /* "glGetQueryIndexediv" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTI64VPROC
epoxy_glGetQueryObjecti64v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_timer_query,
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_timer_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23433 /* "glGetQueryObjecti64v" */,
        23433 /* "glGetQueryObjecti64v" */,
        23454 /* "glGetQueryObjecti64vEXT" */,
        23454 /* "glGetQueryObjecti64vEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23433 /* "glGetQueryObjecti64v" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTI64VEXTPROC
epoxy_glGetQueryObjecti64vEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_timer_query,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_timer_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23454 /* "glGetQueryObjecti64vEXT" */,
        23454 /* "glGetQueryObjecti64vEXT" */,
        23433 /* "glGetQueryObjecti64v" */,
        23433 /* "glGetQueryObjecti64v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23454 /* "glGetQueryObjecti64vEXT" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTIVPROC
epoxy_glGetQueryObjectiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        GL_extension_GL_ARB_occlusion_query,
        GL_extension_GL_EXT_disjoint_timer_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23478 /* "glGetQueryObjectiv" */,
        23497 /* "glGetQueryObjectivARB" */,
        23519 /* "glGetQueryObjectivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23478 /* "glGetQueryObjectiv" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTIVARBPROC
epoxy_glGetQueryObjectivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_occlusion_query,
        Desktop_OpenGL_1_5,
        GL_extension_GL_EXT_disjoint_timer_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23497 /* "glGetQueryObjectivARB" */,
        23478 /* "glGetQueryObjectiv" */,
        23519 /* "glGetQueryObjectivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23497 /* "glGetQueryObjectivARB" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTIVEXTPROC
epoxy_glGetQueryObjectivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        Desktop_OpenGL_1_5,
        GL_extension_GL_ARB_occlusion_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23519 /* "glGetQueryObjectivEXT" */,
        23478 /* "glGetQueryObjectiv" */,
        23497 /* "glGetQueryObjectivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23519 /* "glGetQueryObjectivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTUI64VPROC
epoxy_glGetQueryObjectui64v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_timer_query,
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_timer_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23541 /* "glGetQueryObjectui64v" */,
        23541 /* "glGetQueryObjectui64v" */,
        23563 /* "glGetQueryObjectui64vEXT" */,
        23563 /* "glGetQueryObjectui64vEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23541 /* "glGetQueryObjectui64v" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTUI64VEXTPROC
epoxy_glGetQueryObjectui64vEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_timer_query,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_timer_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23563 /* "glGetQueryObjectui64vEXT" */,
        23563 /* "glGetQueryObjectui64vEXT" */,
        23541 /* "glGetQueryObjectui64v" */,
        23541 /* "glGetQueryObjectui64v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23563 /* "glGetQueryObjectui64vEXT" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTUIVPROC
epoxy_glGetQueryObjectuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_occlusion_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23588 /* "glGetQueryObjectuiv" */,
        23588 /* "glGetQueryObjectuiv" */,
        23608 /* "glGetQueryObjectuivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23588 /* "glGetQueryObjectuiv" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTUIVARBPROC
epoxy_glGetQueryObjectuivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_occlusion_query,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23608 /* "glGetQueryObjectuivARB" */,
        23588 /* "glGetQueryObjectuiv" */,
        23588 /* "glGetQueryObjectuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23608 /* "glGetQueryObjectuivARB" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYOBJECTUIVEXTPROC
epoxy_glGetQueryObjectuivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_occlusion_query_boolean,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23631 /* "glGetQueryObjectuivEXT" */,
        23631 /* "glGetQueryObjectuivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23631 /* "glGetQueryObjectuivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYIVPROC
epoxy_glGetQueryiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_occlusion_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23654 /* "glGetQueryiv" */,
        23654 /* "glGetQueryiv" */,
        23667 /* "glGetQueryivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23654 /* "glGetQueryiv" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYIVARBPROC
epoxy_glGetQueryivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_occlusion_query,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23667 /* "glGetQueryivARB" */,
        23654 /* "glGetQueryiv" */,
        23654 /* "glGetQueryiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23667 /* "glGetQueryivARB" */,
                                providers, entrypoints);
}

static PFNGLGETQUERYIVEXTPROC
epoxy_glGetQueryivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_occlusion_query_boolean,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23683 /* "glGetQueryivEXT" */,
        23683 /* "glGetQueryivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23683 /* "glGetQueryivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETRENDERBUFFERPARAMETERIVPROC
epoxy_glGetRenderbufferParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23699 /* "glGetRenderbufferParameteriv" */,
        23699 /* "glGetRenderbufferParameteriv" */,
        23699 /* "glGetRenderbufferParameteriv" */,
        23728 /* "glGetRenderbufferParameterivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23699 /* "glGetRenderbufferParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
epoxy_glGetRenderbufferParameterivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23728 /* "glGetRenderbufferParameterivEXT" */,
        23699 /* "glGetRenderbufferParameteriv" */,
        23699 /* "glGetRenderbufferParameteriv" */,
        23699 /* "glGetRenderbufferParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23728 /* "glGetRenderbufferParameterivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETRENDERBUFFERPARAMETERIVOESPROC
epoxy_glGetRenderbufferParameterivOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 23760 /* glGetRenderbufferParameterivOES */);
}

static PFNGLGETSAMPLERPARAMETERIIVPROC
epoxy_glGetSamplerParameterIiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23792 /* "glGetSamplerParameterIiv" */,
        23792 /* "glGetSamplerParameterIiv" */,
        23817 /* "glGetSamplerParameterIivEXT" */,
        23845 /* "glGetSamplerParameterIivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23792 /* "glGetSamplerParameterIiv" */,
                                providers, entrypoints);
}

static PFNGLGETSAMPLERPARAMETERIIVEXTPROC
epoxy_glGetSamplerParameterIivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_border_clamp,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23817 /* "glGetSamplerParameterIivEXT" */,
        23792 /* "glGetSamplerParameterIiv" */,
        23792 /* "glGetSamplerParameterIiv" */,
        23845 /* "glGetSamplerParameterIivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23817 /* "glGetSamplerParameterIivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETSAMPLERPARAMETERIIVOESPROC
epoxy_glGetSamplerParameterIivOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_border_clamp,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_EXT_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23845 /* "glGetSamplerParameterIivOES" */,
        23792 /* "glGetSamplerParameterIiv" */,
        23792 /* "glGetSamplerParameterIiv" */,
        23817 /* "glGetSamplerParameterIivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23845 /* "glGetSamplerParameterIivOES" */,
                                providers, entrypoints);
}

static PFNGLGETSAMPLERPARAMETERIUIVPROC
epoxy_glGetSamplerParameterIuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23873 /* "glGetSamplerParameterIuiv" */,
        23873 /* "glGetSamplerParameterIuiv" */,
        23899 /* "glGetSamplerParameterIuivEXT" */,
        23928 /* "glGetSamplerParameterIuivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23873 /* "glGetSamplerParameterIuiv" */,
                                providers, entrypoints);
}

static PFNGLGETSAMPLERPARAMETERIUIVEXTPROC
epoxy_glGetSamplerParameterIuivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_border_clamp,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23899 /* "glGetSamplerParameterIuivEXT" */,
        23873 /* "glGetSamplerParameterIuiv" */,
        23873 /* "glGetSamplerParameterIuiv" */,
        23928 /* "glGetSamplerParameterIuivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23899 /* "glGetSamplerParameterIuivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETSAMPLERPARAMETERIUIVOESPROC
epoxy_glGetSamplerParameterIuivOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_border_clamp,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_EXT_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23928 /* "glGetSamplerParameterIuivOES" */,
        23873 /* "glGetSamplerParameterIuiv" */,
        23873 /* "glGetSamplerParameterIuiv" */,
        23899 /* "glGetSamplerParameterIuivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23928 /* "glGetSamplerParameterIuivOES" */,
                                providers, entrypoints);
}

static PFNGLGETSAMPLERPARAMETERFVPROC
epoxy_glGetSamplerParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23957 /* "glGetSamplerParameterfv" */,
        23957 /* "glGetSamplerParameterfv" */,
        23957 /* "glGetSamplerParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23957 /* "glGetSamplerParameterfv" */,
                                providers, entrypoints);
}

static PFNGLGETSAMPLERPARAMETERIVPROC
epoxy_glGetSamplerParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        23981 /* "glGetSamplerParameteriv" */,
        23981 /* "glGetSamplerParameteriv" */,
        23981 /* "glGetSamplerParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 23981 /* "glGetSamplerParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETSEPARABLEFILTERPROC
epoxy_glGetSeparableFilter_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 24005 /* glGetSeparableFilter */);
}

static PFNGLGETSEPARABLEFILTEREXTPROC
epoxy_glGetSeparableFilterEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_convolution, 24026 /* glGetSeparableFilterEXT */);
}

static PFNGLGETSHADERINFOLOGPROC
epoxy_glGetShaderInfoLog_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24050 /* "glGetShaderInfoLog" */,
        24050 /* "glGetShaderInfoLog" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24050 /* "glGetShaderInfoLog" */,
                                providers, entrypoints);
}

static PFNGLGETSHADERPRECISIONFORMATPROC
epoxy_glGetShaderPrecisionFormat_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_ES2_compatibility,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24069 /* "glGetShaderPrecisionFormat" */,
        24069 /* "glGetShaderPrecisionFormat" */,
        24069 /* "glGetShaderPrecisionFormat" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24069 /* "glGetShaderPrecisionFormat" */,
                                providers, entrypoints);
}

static PFNGLGETSHADERSOURCEPROC
epoxy_glGetShaderSource_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24096 /* "glGetShaderSource" */,
        24096 /* "glGetShaderSource" */,
        24114 /* "glGetShaderSourceARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24096 /* "glGetShaderSource" */,
                                providers, entrypoints);
}

static PFNGLGETSHADERSOURCEARBPROC
epoxy_glGetShaderSourceARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24114 /* "glGetShaderSourceARB" */,
        24096 /* "glGetShaderSource" */,
        24096 /* "glGetShaderSource" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24114 /* "glGetShaderSourceARB" */,
                                providers, entrypoints);
}

static PFNGLGETSHADERIVPROC
epoxy_glGetShaderiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24135 /* "glGetShaderiv" */,
        24135 /* "glGetShaderiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24135 /* "glGetShaderiv" */,
                                providers, entrypoints);
}

static PFNGLGETSHARPENTEXFUNCSGISPROC
epoxy_glGetSharpenTexFuncSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_sharpen_texture, 24149 /* glGetSharpenTexFuncSGIS */);
}

static PFNGLGETSTAGEINDEXNVPROC
epoxy_glGetStageIndexNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 24173 /* glGetStageIndexNV */);
}

static PFNGLGETSTRINGPROC
epoxy_glGetString_resolver(void)
{
    return gl_single_resolver(always_present, 24191 /* glGetString */);
}

static PFNGLGETSTRINGIPROC
epoxy_glGetStringi_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24203 /* "glGetStringi" */,
        24203 /* "glGetStringi" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24203 /* "glGetStringi" */,
                                providers, entrypoints);
}

static PFNGLGETSUBROUTINEINDEXPROC
epoxy_glGetSubroutineIndex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_shader_subroutine,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24216 /* "glGetSubroutineIndex" */,
        24216 /* "glGetSubroutineIndex" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24216 /* "glGetSubroutineIndex" */,
                                providers, entrypoints);
}

static PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
epoxy_glGetSubroutineUniformLocation_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_shader_subroutine,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24237 /* "glGetSubroutineUniformLocation" */,
        24237 /* "glGetSubroutineUniformLocation" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24237 /* "glGetSubroutineUniformLocation" */,
                                providers, entrypoints);
}

static PFNGLGETSYNCIVPROC
epoxy_glGetSynciv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_sync,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24268 /* "glGetSynciv" */,
        24268 /* "glGetSynciv" */,
        24268 /* "glGetSynciv" */,
        24280 /* "glGetSyncivAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24268 /* "glGetSynciv" */,
                                providers, entrypoints);
}

static PFNGLGETSYNCIVAPPLEPROC
epoxy_glGetSyncivAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_sync,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24280 /* "glGetSyncivAPPLE" */,
        24268 /* "glGetSynciv" */,
        24268 /* "glGetSynciv" */,
        24268 /* "glGetSynciv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24280 /* "glGetSyncivAPPLE" */,
                                providers, entrypoints);
}

static PFNGLGETTEXBUMPPARAMETERFVATIPROC
epoxy_glGetTexBumpParameterfvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_envmap_bumpmap, 24297 /* glGetTexBumpParameterfvATI */);
}

static PFNGLGETTEXBUMPPARAMETERIVATIPROC
epoxy_glGetTexBumpParameterivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_envmap_bumpmap, 24324 /* glGetTexBumpParameterivATI */);
}

static PFNGLGETTEXENVFVPROC
epoxy_glGetTexEnvfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24351 /* "glGetTexEnvfv" */,
        24351 /* "glGetTexEnvfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24351 /* "glGetTexEnvfv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXENVIVPROC
epoxy_glGetTexEnviv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24365 /* "glGetTexEnviv" */,
        24365 /* "glGetTexEnviv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24365 /* "glGetTexEnviv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXENVXVPROC
epoxy_glGetTexEnvxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 24379 /* glGetTexEnvxv */);
}

static PFNGLGETTEXENVXVOESPROC
epoxy_glGetTexEnvxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 24393 /* glGetTexEnvxvOES */);
}

static PFNGLGETTEXFILTERFUNCSGISPROC
epoxy_glGetTexFilterFuncSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_texture_filter4, 24410 /* glGetTexFilterFuncSGIS */);
}

static PFNGLGETTEXGENDVPROC
epoxy_glGetTexGendv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 24433 /* glGetTexGendv */);
}

static PFNGLGETTEXGENFVPROC
epoxy_glGetTexGenfv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 24447 /* glGetTexGenfv */);
}

static PFNGLGETTEXGENFVOESPROC
epoxy_glGetTexGenfvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 24461 /* glGetTexGenfvOES */);
}

static PFNGLGETTEXGENIVPROC
epoxy_glGetTexGeniv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 24478 /* glGetTexGeniv */);
}

static PFNGLGETTEXGENIVOESPROC
epoxy_glGetTexGenivOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 24492 /* glGetTexGenivOES */);
}

static PFNGLGETTEXGENXVOESPROC
epoxy_glGetTexGenxvOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_fixed_point,
        GL_extension_GL_OES_texture_cube_map,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24509 /* "glGetTexGenxvOES" */,
        24509 /* "glGetTexGenxvOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24509 /* "glGetTexGenxvOES" */,
                                providers, entrypoints);
}

static PFNGLGETTEXIMAGEPROC
epoxy_glGetTexImage_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 24526 /* glGetTexImage */);
}

static PFNGLGETTEXLEVELPARAMETERFVPROC
epoxy_glGetTexLevelParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24540 /* "glGetTexLevelParameterfv" */,
        24540 /* "glGetTexLevelParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24540 /* "glGetTexLevelParameterfv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXLEVELPARAMETERIVPROC
epoxy_glGetTexLevelParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24565 /* "glGetTexLevelParameteriv" */,
        24565 /* "glGetTexLevelParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24565 /* "glGetTexLevelParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXLEVELPARAMETERXVOESPROC
epoxy_glGetTexLevelParameterxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 24590 /* glGetTexLevelParameterxvOES */);
}

static PFNGLGETTEXPARAMETERIIVPROC
epoxy_glGetTexParameterIiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24618 /* "glGetTexParameterIiv" */,
        24639 /* "glGetTexParameterIivEXT" */,
        24639 /* "glGetTexParameterIivEXT" */,
        24663 /* "glGetTexParameterIivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24618 /* "glGetTexParameterIiv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXPARAMETERIIVEXTPROC
epoxy_glGetTexParameterIivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        Desktop_OpenGL_3_0,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24639 /* "glGetTexParameterIivEXT" */,
        24639 /* "glGetTexParameterIivEXT" */,
        24618 /* "glGetTexParameterIiv" */,
        24663 /* "glGetTexParameterIivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24639 /* "glGetTexParameterIivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETTEXPARAMETERIIVOESPROC
epoxy_glGetTexParameterIivOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_border_clamp,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24663 /* "glGetTexParameterIivOES" */,
        24618 /* "glGetTexParameterIiv" */,
        24639 /* "glGetTexParameterIivEXT" */,
        24639 /* "glGetTexParameterIivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24663 /* "glGetTexParameterIivOES" */,
                                providers, entrypoints);
}

static PFNGLGETTEXPARAMETERIUIVPROC
epoxy_glGetTexParameterIuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24687 /* "glGetTexParameterIuiv" */,
        24709 /* "glGetTexParameterIuivEXT" */,
        24709 /* "glGetTexParameterIuivEXT" */,
        24734 /* "glGetTexParameterIuivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24687 /* "glGetTexParameterIuiv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXPARAMETERIUIVEXTPROC
epoxy_glGetTexParameterIuivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        Desktop_OpenGL_3_0,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24709 /* "glGetTexParameterIuivEXT" */,
        24709 /* "glGetTexParameterIuivEXT" */,
        24687 /* "glGetTexParameterIuiv" */,
        24734 /* "glGetTexParameterIuivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24709 /* "glGetTexParameterIuivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETTEXPARAMETERIUIVOESPROC
epoxy_glGetTexParameterIuivOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_border_clamp,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24734 /* "glGetTexParameterIuivOES" */,
        24687 /* "glGetTexParameterIuiv" */,
        24709 /* "glGetTexParameterIuivEXT" */,
        24709 /* "glGetTexParameterIuivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24734 /* "glGetTexParameterIuivOES" */,
                                providers, entrypoints);
}

static PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
epoxy_glGetTexParameterPointervAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_texture_range, 24759 /* glGetTexParameterPointervAPPLE */);
}

static PFNGLGETTEXPARAMETERFVPROC
epoxy_glGetTexParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24790 /* "glGetTexParameterfv" */,
        24790 /* "glGetTexParameterfv" */,
        24790 /* "glGetTexParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24790 /* "glGetTexParameterfv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXPARAMETERIVPROC
epoxy_glGetTexParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24810 /* "glGetTexParameteriv" */,
        24810 /* "glGetTexParameteriv" */,
        24810 /* "glGetTexParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24810 /* "glGetTexParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXPARAMETERXVPROC
epoxy_glGetTexParameterxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 24830 /* glGetTexParameterxv */);
}

static PFNGLGETTEXPARAMETERXVOESPROC
epoxy_glGetTexParameterxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 24850 /* glGetTexParameterxvOES */);
}

static PFNGLGETTEXTUREHANDLEARBPROC
epoxy_glGetTextureHandleARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 24873 /* glGetTextureHandleARB */);
}

static PFNGLGETTEXTUREHANDLENVPROC
epoxy_glGetTextureHandleNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 24895 /* glGetTextureHandleNV */);
}

static PFNGLGETTEXTUREIMAGEPROC
epoxy_glGetTextureImage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24916 /* "glGetTextureImage" */,
        24916 /* "glGetTextureImage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24916 /* "glGetTextureImage" */,
                                providers, entrypoints);
}

static PFNGLGETTEXTUREIMAGEEXTPROC
epoxy_glGetTextureImageEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 24934 /* glGetTextureImageEXT */);
}

static PFNGLGETTEXTURELEVELPARAMETERFVPROC
epoxy_glGetTextureLevelParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        24955 /* "glGetTextureLevelParameterfv" */,
        24955 /* "glGetTextureLevelParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 24955 /* "glGetTextureLevelParameterfv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
epoxy_glGetTextureLevelParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 24984 /* glGetTextureLevelParameterfvEXT */);
}

static PFNGLGETTEXTURELEVELPARAMETERIVPROC
epoxy_glGetTextureLevelParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25016 /* "glGetTextureLevelParameteriv" */,
        25016 /* "glGetTextureLevelParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25016 /* "glGetTextureLevelParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
epoxy_glGetTextureLevelParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 25045 /* glGetTextureLevelParameterivEXT */);
}

static PFNGLGETTEXTUREPARAMETERIIVPROC
epoxy_glGetTextureParameterIiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25077 /* "glGetTextureParameterIiv" */,
        25077 /* "glGetTextureParameterIiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25077 /* "glGetTextureParameterIiv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXTUREPARAMETERIIVEXTPROC
epoxy_glGetTextureParameterIivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 25102 /* glGetTextureParameterIivEXT */);
}

static PFNGLGETTEXTUREPARAMETERIUIVPROC
epoxy_glGetTextureParameterIuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25130 /* "glGetTextureParameterIuiv" */,
        25130 /* "glGetTextureParameterIuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25130 /* "glGetTextureParameterIuiv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXTUREPARAMETERIUIVEXTPROC
epoxy_glGetTextureParameterIuivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 25156 /* glGetTextureParameterIuivEXT */);
}

static PFNGLGETTEXTUREPARAMETERFVPROC
epoxy_glGetTextureParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25185 /* "glGetTextureParameterfv" */,
        25185 /* "glGetTextureParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25185 /* "glGetTextureParameterfv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXTUREPARAMETERFVEXTPROC
epoxy_glGetTextureParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 25209 /* glGetTextureParameterfvEXT */);
}

static PFNGLGETTEXTUREPARAMETERIVPROC
epoxy_glGetTextureParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25236 /* "glGetTextureParameteriv" */,
        25236 /* "glGetTextureParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25236 /* "glGetTextureParameteriv" */,
                                providers, entrypoints);
}

static PFNGLGETTEXTUREPARAMETERIVEXTPROC
epoxy_glGetTextureParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 25260 /* glGetTextureParameterivEXT */);
}

static PFNGLGETTEXTURESAMPLERHANDLEARBPROC
epoxy_glGetTextureSamplerHandleARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 25287 /* glGetTextureSamplerHandleARB */);
}

static PFNGLGETTEXTURESAMPLERHANDLENVPROC
epoxy_glGetTextureSamplerHandleNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 25316 /* glGetTextureSamplerHandleNV */);
}

static PFNGLGETTEXTURESUBIMAGEPROC
epoxy_glGetTextureSubImage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_get_texture_sub_image,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25344 /* "glGetTextureSubImage" */,
        25344 /* "glGetTextureSubImage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25344 /* "glGetTextureSubImage" */,
                                providers, entrypoints);
}

static PFNGLGETTRACKMATRIXIVNVPROC
epoxy_glGetTrackMatrixivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 25365 /* glGetTrackMatrixivNV */);
}

static PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
epoxy_glGetTransformFeedbackVarying_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25386 /* "glGetTransformFeedbackVarying" */,
        25386 /* "glGetTransformFeedbackVarying" */,
        25416 /* "glGetTransformFeedbackVaryingEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25386 /* "glGetTransformFeedbackVarying" */,
                                providers, entrypoints);
}

static PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
epoxy_glGetTransformFeedbackVaryingEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_transform_feedback,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25416 /* "glGetTransformFeedbackVaryingEXT" */,
        25386 /* "glGetTransformFeedbackVarying" */,
        25386 /* "glGetTransformFeedbackVarying" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25416 /* "glGetTransformFeedbackVaryingEXT" */,
                                providers, entrypoints);
}

static PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
epoxy_glGetTransformFeedbackVaryingNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 25449 /* glGetTransformFeedbackVaryingNV */);
}

static PFNGLGETTRANSFORMFEEDBACKI64_VPROC
epoxy_glGetTransformFeedbacki64_v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25481 /* "glGetTransformFeedbacki64_v" */,
        25481 /* "glGetTransformFeedbacki64_v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25481 /* "glGetTransformFeedbacki64_v" */,
                                providers, entrypoints);
}

static PFNGLGETTRANSFORMFEEDBACKI_VPROC
epoxy_glGetTransformFeedbacki_v_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25509 /* "glGetTransformFeedbacki_v" */,
        25509 /* "glGetTransformFeedbacki_v" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25509 /* "glGetTransformFeedbacki_v" */,
                                providers, entrypoints);
}

static PFNGLGETTRANSFORMFEEDBACKIVPROC
epoxy_glGetTransformFeedbackiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25535 /* "glGetTransformFeedbackiv" */,
        25535 /* "glGetTransformFeedbackiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25535 /* "glGetTransformFeedbackiv" */,
                                providers, entrypoints);
}

static PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC
epoxy_glGetTranslatedShaderSourceANGLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ANGLE_translated_shader_source, 25560 /* glGetTranslatedShaderSourceANGLE */);
}

static PFNGLGETUNIFORMBLOCKINDEXPROC
epoxy_glGetUniformBlockIndex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25593 /* "glGetUniformBlockIndex" */,
        25593 /* "glGetUniformBlockIndex" */,
        25593 /* "glGetUniformBlockIndex" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25593 /* "glGetUniformBlockIndex" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMBUFFERSIZEEXTPROC
epoxy_glGetUniformBufferSizeEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_bindable_uniform, 25616 /* glGetUniformBufferSizeEXT */);
}

static PFNGLGETUNIFORMINDICESPROC
epoxy_glGetUniformIndices_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25642 /* "glGetUniformIndices" */,
        25642 /* "glGetUniformIndices" */,
        25642 /* "glGetUniformIndices" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25642 /* "glGetUniformIndices" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMLOCATIONPROC
epoxy_glGetUniformLocation_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25662 /* "glGetUniformLocation" */,
        25662 /* "glGetUniformLocation" */,
        25683 /* "glGetUniformLocationARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25662 /* "glGetUniformLocation" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMLOCATIONARBPROC
epoxy_glGetUniformLocationARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25683 /* "glGetUniformLocationARB" */,
        25662 /* "glGetUniformLocation" */,
        25662 /* "glGetUniformLocation" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25683 /* "glGetUniformLocationARB" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMOFFSETEXTPROC
epoxy_glGetUniformOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_bindable_uniform, 25707 /* glGetUniformOffsetEXT */);
}

static PFNGLGETUNIFORMSUBROUTINEUIVPROC
epoxy_glGetUniformSubroutineuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_shader_subroutine,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25729 /* "glGetUniformSubroutineuiv" */,
        25729 /* "glGetUniformSubroutineuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25729 /* "glGetUniformSubroutineuiv" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMDVPROC
epoxy_glGetUniformdv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25755 /* "glGetUniformdv" */,
        25755 /* "glGetUniformdv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25755 /* "glGetUniformdv" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMFVPROC
epoxy_glGetUniformfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25770 /* "glGetUniformfv" */,
        25770 /* "glGetUniformfv" */,
        25785 /* "glGetUniformfvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25770 /* "glGetUniformfv" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMFVARBPROC
epoxy_glGetUniformfvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25785 /* "glGetUniformfvARB" */,
        25770 /* "glGetUniformfv" */,
        25770 /* "glGetUniformfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25785 /* "glGetUniformfvARB" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMI64VNVPROC
epoxy_glGetUniformi64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25803 /* "glGetUniformi64vNV" */,
        25803 /* "glGetUniformi64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25803 /* "glGetUniformi64vNV" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMIVPROC
epoxy_glGetUniformiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25822 /* "glGetUniformiv" */,
        25822 /* "glGetUniformiv" */,
        25837 /* "glGetUniformivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25822 /* "glGetUniformiv" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMIVARBPROC
epoxy_glGetUniformivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25837 /* "glGetUniformivARB" */,
        25822 /* "glGetUniformiv" */,
        25822 /* "glGetUniformiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25837 /* "glGetUniformivARB" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMUI64VNVPROC
epoxy_glGetUniformui64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_shader_buffer_load,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25855 /* "glGetUniformui64vNV" */,
        25855 /* "glGetUniformui64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25855 /* "glGetUniformui64vNV" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMUIVPROC
epoxy_glGetUniformuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25875 /* "glGetUniformuiv" */,
        25875 /* "glGetUniformuiv" */,
        25891 /* "glGetUniformuivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25875 /* "glGetUniformuiv" */,
                                providers, entrypoints);
}

static PFNGLGETUNIFORMUIVEXTPROC
epoxy_glGetUniformuivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        25891 /* "glGetUniformuivEXT" */,
        25875 /* "glGetUniformuiv" */,
        25875 /* "glGetUniformuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 25891 /* "glGetUniformuivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETVARIANTARRAYOBJECTFVATIPROC
epoxy_glGetVariantArrayObjectfvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 25910 /* glGetVariantArrayObjectfvATI */);
}

static PFNGLGETVARIANTARRAYOBJECTIVATIPROC
epoxy_glGetVariantArrayObjectivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 25939 /* glGetVariantArrayObjectivATI */);
}

static PFNGLGETVARIANTBOOLEANVEXTPROC
epoxy_glGetVariantBooleanvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 25968 /* glGetVariantBooleanvEXT */);
}

static PFNGLGETVARIANTFLOATVEXTPROC
epoxy_glGetVariantFloatvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 25992 /* glGetVariantFloatvEXT */);
}

static PFNGLGETVARIANTINTEGERVEXTPROC
epoxy_glGetVariantIntegervEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 26014 /* glGetVariantIntegervEXT */);
}

static PFNGLGETVARIANTPOINTERVEXTPROC
epoxy_glGetVariantPointervEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 26038 /* glGetVariantPointervEXT */);
}

static PFNGLGETVARYINGLOCATIONNVPROC
epoxy_glGetVaryingLocationNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 26062 /* glGetVaryingLocationNV */);
}

static PFNGLGETVERTEXARRAYINDEXED64IVPROC
epoxy_glGetVertexArrayIndexed64iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26085 /* "glGetVertexArrayIndexed64iv" */,
        26085 /* "glGetVertexArrayIndexed64iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26085 /* "glGetVertexArrayIndexed64iv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXARRAYINDEXEDIVPROC
epoxy_glGetVertexArrayIndexediv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26113 /* "glGetVertexArrayIndexediv" */,
        26113 /* "glGetVertexArrayIndexediv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26113 /* "glGetVertexArrayIndexediv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC
epoxy_glGetVertexArrayIntegeri_vEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 26139 /* glGetVertexArrayIntegeri_vEXT */);
}

static PFNGLGETVERTEXARRAYINTEGERVEXTPROC
epoxy_glGetVertexArrayIntegervEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 26169 /* glGetVertexArrayIntegervEXT */);
}

static PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC
epoxy_glGetVertexArrayPointeri_vEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 26197 /* glGetVertexArrayPointeri_vEXT */);
}

static PFNGLGETVERTEXARRAYPOINTERVEXTPROC
epoxy_glGetVertexArrayPointervEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 26227 /* glGetVertexArrayPointervEXT */);
}

static PFNGLGETVERTEXARRAYIVPROC
epoxy_glGetVertexArrayiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26255 /* "glGetVertexArrayiv" */,
        26255 /* "glGetVertexArrayiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26255 /* "glGetVertexArrayiv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
epoxy_glGetVertexAttribArrayObjectfvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_attrib_array_object, 26274 /* glGetVertexAttribArrayObjectfvATI */);
}

static PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
epoxy_glGetVertexAttribArrayObjectivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_attrib_array_object, 26308 /* glGetVertexAttribArrayObjectivATI */);
}

static PFNGLGETVERTEXATTRIBIIVPROC
epoxy_glGetVertexAttribIiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26342 /* "glGetVertexAttribIiv" */,
        26342 /* "glGetVertexAttribIiv" */,
        26363 /* "glGetVertexAttribIivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26342 /* "glGetVertexAttribIiv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBIIVEXTPROC
epoxy_glGetVertexAttribIivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26363 /* "glGetVertexAttribIivEXT" */,
        26342 /* "glGetVertexAttribIiv" */,
        26342 /* "glGetVertexAttribIiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26363 /* "glGetVertexAttribIivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBIUIVPROC
epoxy_glGetVertexAttribIuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26387 /* "glGetVertexAttribIuiv" */,
        26387 /* "glGetVertexAttribIuiv" */,
        26409 /* "glGetVertexAttribIuivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26387 /* "glGetVertexAttribIuiv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBIUIVEXTPROC
epoxy_glGetVertexAttribIuivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26409 /* "glGetVertexAttribIuivEXT" */,
        26387 /* "glGetVertexAttribIuiv" */,
        26387 /* "glGetVertexAttribIuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26409 /* "glGetVertexAttribIuivEXT" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBLDVPROC
epoxy_glGetVertexAttribLdv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26434 /* "glGetVertexAttribLdv" */,
        26434 /* "glGetVertexAttribLdv" */,
        26455 /* "glGetVertexAttribLdvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26434 /* "glGetVertexAttribLdv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBLDVEXTPROC
epoxy_glGetVertexAttribLdvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26455 /* "glGetVertexAttribLdvEXT" */,
        26434 /* "glGetVertexAttribLdv" */,
        26434 /* "glGetVertexAttribLdv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26455 /* "glGetVertexAttribLdvEXT" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBLI64VNVPROC
epoxy_glGetVertexAttribLi64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 26479 /* glGetVertexAttribLi64vNV */);
}

static PFNGLGETVERTEXATTRIBLUI64VARBPROC
epoxy_glGetVertexAttribLui64vARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 26504 /* glGetVertexAttribLui64vARB */);
}

static PFNGLGETVERTEXATTRIBLUI64VNVPROC
epoxy_glGetVertexAttribLui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 26531 /* glGetVertexAttribLui64vNV */);
}

static PFNGLGETVERTEXATTRIBPOINTERVPROC
epoxy_glGetVertexAttribPointerv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26557 /* "glGetVertexAttribPointerv" */,
        26557 /* "glGetVertexAttribPointerv" */,
        26583 /* "glGetVertexAttribPointervARB" */,
        26583 /* "glGetVertexAttribPointervARB" */,
        26612 /* "glGetVertexAttribPointervNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26557 /* "glGetVertexAttribPointerv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBPOINTERVARBPROC
epoxy_glGetVertexAttribPointervARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26583 /* "glGetVertexAttribPointervARB" */,
        26583 /* "glGetVertexAttribPointervARB" */,
        26557 /* "glGetVertexAttribPointerv" */,
        26557 /* "glGetVertexAttribPointerv" */,
        26612 /* "glGetVertexAttribPointervNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26583 /* "glGetVertexAttribPointervARB" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBPOINTERVNVPROC
epoxy_glGetVertexAttribPointervNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26612 /* "glGetVertexAttribPointervNV" */,
        26557 /* "glGetVertexAttribPointerv" */,
        26557 /* "glGetVertexAttribPointerv" */,
        26583 /* "glGetVertexAttribPointervARB" */,
        26583 /* "glGetVertexAttribPointervARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26612 /* "glGetVertexAttribPointervNV" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBDVPROC
epoxy_glGetVertexAttribdv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26640 /* "glGetVertexAttribdv" */,
        26660 /* "glGetVertexAttribdvARB" */,
        26660 /* "glGetVertexAttribdvARB" */,
        26683 /* "glGetVertexAttribdvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26640 /* "glGetVertexAttribdv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBDVARBPROC
epoxy_glGetVertexAttribdvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26660 /* "glGetVertexAttribdvARB" */,
        26660 /* "glGetVertexAttribdvARB" */,
        26640 /* "glGetVertexAttribdv" */,
        26683 /* "glGetVertexAttribdvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26660 /* "glGetVertexAttribdvARB" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBDVNVPROC
epoxy_glGetVertexAttribdvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26683 /* "glGetVertexAttribdvNV" */,
        26640 /* "glGetVertexAttribdv" */,
        26660 /* "glGetVertexAttribdvARB" */,
        26660 /* "glGetVertexAttribdvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26683 /* "glGetVertexAttribdvNV" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBFVPROC
epoxy_glGetVertexAttribfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26705 /* "glGetVertexAttribfv" */,
        26705 /* "glGetVertexAttribfv" */,
        26725 /* "glGetVertexAttribfvARB" */,
        26725 /* "glGetVertexAttribfvARB" */,
        26748 /* "glGetVertexAttribfvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26705 /* "glGetVertexAttribfv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBFVARBPROC
epoxy_glGetVertexAttribfvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26725 /* "glGetVertexAttribfvARB" */,
        26725 /* "glGetVertexAttribfvARB" */,
        26705 /* "glGetVertexAttribfv" */,
        26705 /* "glGetVertexAttribfv" */,
        26748 /* "glGetVertexAttribfvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26725 /* "glGetVertexAttribfvARB" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBFVNVPROC
epoxy_glGetVertexAttribfvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26748 /* "glGetVertexAttribfvNV" */,
        26705 /* "glGetVertexAttribfv" */,
        26705 /* "glGetVertexAttribfv" */,
        26725 /* "glGetVertexAttribfvARB" */,
        26725 /* "glGetVertexAttribfvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26748 /* "glGetVertexAttribfvNV" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBIVPROC
epoxy_glGetVertexAttribiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26770 /* "glGetVertexAttribiv" */,
        26770 /* "glGetVertexAttribiv" */,
        26790 /* "glGetVertexAttribivARB" */,
        26790 /* "glGetVertexAttribivARB" */,
        26813 /* "glGetVertexAttribivNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26770 /* "glGetVertexAttribiv" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBIVARBPROC
epoxy_glGetVertexAttribivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26790 /* "glGetVertexAttribivARB" */,
        26790 /* "glGetVertexAttribivARB" */,
        26770 /* "glGetVertexAttribiv" */,
        26770 /* "glGetVertexAttribiv" */,
        26813 /* "glGetVertexAttribivNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26790 /* "glGetVertexAttribivARB" */,
                                providers, entrypoints);
}

static PFNGLGETVERTEXATTRIBIVNVPROC
epoxy_glGetVertexAttribivNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        26813 /* "glGetVertexAttribivNV" */,
        26770 /* "glGetVertexAttribiv" */,
        26770 /* "glGetVertexAttribiv" */,
        26790 /* "glGetVertexAttribivARB" */,
        26790 /* "glGetVertexAttribivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 26813 /* "glGetVertexAttribivNV" */,
                                providers, entrypoints);
}

static PFNGLGETVIDEOCAPTURESTREAMDVNVPROC
epoxy_glGetVideoCaptureStreamdvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 26835 /* glGetVideoCaptureStreamdvNV */);
}

static PFNGLGETVIDEOCAPTURESTREAMFVNVPROC
epoxy_glGetVideoCaptureStreamfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 26863 /* glGetVideoCaptureStreamfvNV */);
}

static PFNGLGETVIDEOCAPTURESTREAMIVNVPROC
epoxy_glGetVideoCaptureStreamivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 26891 /* glGetVideoCaptureStreamivNV */);
}

static PFNGLGETVIDEOCAPTUREIVNVPROC
epoxy_glGetVideoCaptureivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 26919 /* glGetVideoCaptureivNV */);
}

static PFNGLGETVIDEOI64VNVPROC
epoxy_glGetVideoi64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_present_video, 26941 /* glGetVideoi64vNV */);
}

static PFNGLGETVIDEOIVNVPROC
epoxy_glGetVideoivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_present_video, 26958 /* glGetVideoivNV */);
}

static PFNGLGETVIDEOUI64VNVPROC
epoxy_glGetVideoui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_present_video, 26973 /* glGetVideoui64vNV */);
}

static PFNGLGETVIDEOUIVNVPROC
epoxy_glGetVideouivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_present_video, 26991 /* glGetVideouivNV */);
}

static PFNGLGETNCOLORTABLEPROC
epoxy_glGetnColorTable_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27007 /* glGetnColorTable */);
}

static PFNGLGETNCOLORTABLEARBPROC
epoxy_glGetnColorTableARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27024 /* glGetnColorTableARB */);
}

static PFNGLGETNCOMPRESSEDTEXIMAGEPROC
epoxy_glGetnCompressedTexImage_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27044 /* glGetnCompressedTexImage */);
}

static PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
epoxy_glGetnCompressedTexImageARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27069 /* glGetnCompressedTexImageARB */);
}

static PFNGLGETNCONVOLUTIONFILTERPROC
epoxy_glGetnConvolutionFilter_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27097 /* glGetnConvolutionFilter */);
}

static PFNGLGETNCONVOLUTIONFILTERARBPROC
epoxy_glGetnConvolutionFilterARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27121 /* glGetnConvolutionFilterARB */);
}

static PFNGLGETNHISTOGRAMPROC
epoxy_glGetnHistogram_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27148 /* glGetnHistogram */);
}

static PFNGLGETNHISTOGRAMARBPROC
epoxy_glGetnHistogramARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27164 /* glGetnHistogramARB */);
}

static PFNGLGETNMAPDVPROC
epoxy_glGetnMapdv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27183 /* glGetnMapdv */);
}

static PFNGLGETNMAPDVARBPROC
epoxy_glGetnMapdvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27195 /* glGetnMapdvARB */);
}

static PFNGLGETNMAPFVPROC
epoxy_glGetnMapfv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27210 /* glGetnMapfv */);
}

static PFNGLGETNMAPFVARBPROC
epoxy_glGetnMapfvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27222 /* glGetnMapfvARB */);
}

static PFNGLGETNMAPIVPROC
epoxy_glGetnMapiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27237 /* glGetnMapiv */);
}

static PFNGLGETNMAPIVARBPROC
epoxy_glGetnMapivARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27249 /* glGetnMapivARB */);
}

static PFNGLGETNMINMAXPROC
epoxy_glGetnMinmax_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27264 /* glGetnMinmax */);
}

static PFNGLGETNMINMAXARBPROC
epoxy_glGetnMinmaxARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27277 /* glGetnMinmaxARB */);
}

static PFNGLGETNPIXELMAPFVPROC
epoxy_glGetnPixelMapfv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27293 /* glGetnPixelMapfv */);
}

static PFNGLGETNPIXELMAPFVARBPROC
epoxy_glGetnPixelMapfvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27310 /* glGetnPixelMapfvARB */);
}

static PFNGLGETNPIXELMAPUIVPROC
epoxy_glGetnPixelMapuiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27330 /* glGetnPixelMapuiv */);
}

static PFNGLGETNPIXELMAPUIVARBPROC
epoxy_glGetnPixelMapuivARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27348 /* glGetnPixelMapuivARB */);
}

static PFNGLGETNPIXELMAPUSVPROC
epoxy_glGetnPixelMapusv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27369 /* glGetnPixelMapusv */);
}

static PFNGLGETNPIXELMAPUSVARBPROC
epoxy_glGetnPixelMapusvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27387 /* glGetnPixelMapusvARB */);
}

static PFNGLGETNPOLYGONSTIPPLEPROC
epoxy_glGetnPolygonStipple_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27408 /* glGetnPolygonStipple */);
}

static PFNGLGETNPOLYGONSTIPPLEARBPROC
epoxy_glGetnPolygonStippleARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27429 /* glGetnPolygonStippleARB */);
}

static PFNGLGETNSEPARABLEFILTERPROC
epoxy_glGetnSeparableFilter_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27453 /* glGetnSeparableFilter */);
}

static PFNGLGETNSEPARABLEFILTERARBPROC
epoxy_glGetnSeparableFilterARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27475 /* glGetnSeparableFilterARB */);
}

static PFNGLGETNTEXIMAGEPROC
epoxy_glGetnTexImage_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27500 /* glGetnTexImage */);
}

static PFNGLGETNTEXIMAGEARBPROC
epoxy_glGetnTexImageARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27515 /* glGetnTexImageARB */);
}

static PFNGLGETNUNIFORMDVPROC
epoxy_glGetnUniformdv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_4_5, 27533 /* glGetnUniformdv */);
}

static PFNGLGETNUNIFORMDVARBPROC
epoxy_glGetnUniformdvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27549 /* glGetnUniformdvARB */);
}

static PFNGLGETNUNIFORMFVPROC
epoxy_glGetnUniformfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        27568 /* "glGetnUniformfv" */,
        27568 /* "glGetnUniformfv" */,
        27622 /* "glGetnUniformfvKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 27568 /* "glGetnUniformfv" */,
                                providers, entrypoints);
}

static PFNGLGETNUNIFORMFVARBPROC
epoxy_glGetnUniformfvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27584 /* glGetnUniformfvARB */);
}

static PFNGLGETNUNIFORMFVEXTPROC
epoxy_glGetnUniformfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_robustness, 27603 /* glGetnUniformfvEXT */);
}

static PFNGLGETNUNIFORMFVKHRPROC
epoxy_glGetnUniformfvKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_robustness,
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        27622 /* "glGetnUniformfvKHR" */,
        27568 /* "glGetnUniformfv" */,
        27568 /* "glGetnUniformfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 27622 /* "glGetnUniformfvKHR" */,
                                providers, entrypoints);
}

static PFNGLGETNUNIFORMIVPROC
epoxy_glGetnUniformiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        27641 /* "glGetnUniformiv" */,
        27641 /* "glGetnUniformiv" */,
        27695 /* "glGetnUniformivKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 27641 /* "glGetnUniformiv" */,
                                providers, entrypoints);
}

static PFNGLGETNUNIFORMIVARBPROC
epoxy_glGetnUniformivARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27657 /* glGetnUniformivARB */);
}

static PFNGLGETNUNIFORMIVEXTPROC
epoxy_glGetnUniformivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_robustness, 27676 /* glGetnUniformivEXT */);
}

static PFNGLGETNUNIFORMIVKHRPROC
epoxy_glGetnUniformivKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_robustness,
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        27695 /* "glGetnUniformivKHR" */,
        27641 /* "glGetnUniformiv" */,
        27641 /* "glGetnUniformiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 27695 /* "glGetnUniformivKHR" */,
                                providers, entrypoints);
}

static PFNGLGETNUNIFORMUIVPROC
epoxy_glGetnUniformuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        27714 /* "glGetnUniformuiv" */,
        27714 /* "glGetnUniformuiv" */,
        27751 /* "glGetnUniformuivKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 27714 /* "glGetnUniformuiv" */,
                                providers, entrypoints);
}

static PFNGLGETNUNIFORMUIVARBPROC
epoxy_glGetnUniformuivARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 27731 /* glGetnUniformuivARB */);
}

static PFNGLGETNUNIFORMUIVKHRPROC
epoxy_glGetnUniformuivKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_robustness,
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        27751 /* "glGetnUniformuivKHR" */,
        27714 /* "glGetnUniformuiv" */,
        27714 /* "glGetnUniformuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 27751 /* "glGetnUniformuivKHR" */,
                                providers, entrypoints);
}

static PFNGLGLOBALALPHAFACTORBSUNPROC
epoxy_glGlobalAlphaFactorbSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 27771 /* glGlobalAlphaFactorbSUN */);
}

static PFNGLGLOBALALPHAFACTORDSUNPROC
epoxy_glGlobalAlphaFactordSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 27795 /* glGlobalAlphaFactordSUN */);
}

static PFNGLGLOBALALPHAFACTORFSUNPROC
epoxy_glGlobalAlphaFactorfSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 27819 /* glGlobalAlphaFactorfSUN */);
}

static PFNGLGLOBALALPHAFACTORISUNPROC
epoxy_glGlobalAlphaFactoriSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 27843 /* glGlobalAlphaFactoriSUN */);
}

static PFNGLGLOBALALPHAFACTORSSUNPROC
epoxy_glGlobalAlphaFactorsSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 27867 /* glGlobalAlphaFactorsSUN */);
}

static PFNGLGLOBALALPHAFACTORUBSUNPROC
epoxy_glGlobalAlphaFactorubSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 27891 /* glGlobalAlphaFactorubSUN */);
}

static PFNGLGLOBALALPHAFACTORUISUNPROC
epoxy_glGlobalAlphaFactoruiSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 27916 /* glGlobalAlphaFactoruiSUN */);
}

static PFNGLGLOBALALPHAFACTORUSSUNPROC
epoxy_glGlobalAlphaFactorusSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 27941 /* glGlobalAlphaFactorusSUN */);
}

static PFNGLHINTPROC
epoxy_glHint_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        27966 /* "glHint" */,
        27966 /* "glHint" */,
        27966 /* "glHint" */,
    };
    return gl_provider_resolver(entrypoint_strings + 27966 /* "glHint" */,
                                providers, entrypoints);
}

static PFNGLHINTPGIPROC
epoxy_glHintPGI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_PGI_misc_hints, 27973 /* glHintPGI */);
}

static PFNGLHISTOGRAMPROC
epoxy_glHistogram_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_histogram,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        27983 /* "glHistogram" */,
        27995 /* "glHistogramEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 27983 /* "glHistogram" */,
                                providers, entrypoints);
}

static PFNGLHISTOGRAMEXTPROC
epoxy_glHistogramEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_histogram,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        27995 /* "glHistogramEXT" */,
        27983 /* "glHistogram" */,
    };
    return gl_provider_resolver(entrypoint_strings + 27995 /* "glHistogramEXT" */,
                                providers, entrypoints);
}

static PFNGLIGLOOINTERFACESGIXPROC
epoxy_glIglooInterfaceSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_igloo_interface, 28010 /* glIglooInterfaceSGIX */);
}

static PFNGLIMAGETRANSFORMPARAMETERFHPPROC
epoxy_glImageTransformParameterfHP_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 28031 /* glImageTransformParameterfHP */);
}

static PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
epoxy_glImageTransformParameterfvHP_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 28060 /* glImageTransformParameterfvHP */);
}

static PFNGLIMAGETRANSFORMPARAMETERIHPPROC
epoxy_glImageTransformParameteriHP_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 28090 /* glImageTransformParameteriHP */);
}

static PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
epoxy_glImageTransformParameterivHP_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 28119 /* glImageTransformParameterivHP */);
}

static PFNGLIMPORTSYNCEXTPROC
epoxy_glImportSyncEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_x11_sync_object, 28149 /* glImportSyncEXT */);
}

static PFNGLINDEXFORMATNVPROC
epoxy_glIndexFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 28165 /* glIndexFormatNV */);
}

static PFNGLINDEXFUNCEXTPROC
epoxy_glIndexFuncEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_index_func, 28181 /* glIndexFuncEXT */);
}

static PFNGLINDEXMASKPROC
epoxy_glIndexMask_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28196 /* glIndexMask */);
}

static PFNGLINDEXMATERIALEXTPROC
epoxy_glIndexMaterialEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_index_material, 28208 /* glIndexMaterialEXT */);
}

static PFNGLINDEXPOINTERPROC
epoxy_glIndexPointer_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_1, 28227 /* glIndexPointer */);
}

static PFNGLINDEXPOINTEREXTPROC
epoxy_glIndexPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 28242 /* glIndexPointerEXT */);
}

static PFNGLINDEXPOINTERLISTIBMPROC
epoxy_glIndexPointerListIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 28260 /* glIndexPointerListIBM */);
}

static PFNGLINDEXDPROC
epoxy_glIndexd_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28282 /* glIndexd */);
}

static PFNGLINDEXDVPROC
epoxy_glIndexdv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28291 /* glIndexdv */);
}

static PFNGLINDEXFPROC
epoxy_glIndexf_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28301 /* glIndexf */);
}

static PFNGLINDEXFVPROC
epoxy_glIndexfv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28310 /* glIndexfv */);
}

static PFNGLINDEXIPROC
epoxy_glIndexi_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28320 /* glIndexi */);
}

static PFNGLINDEXIVPROC
epoxy_glIndexiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28329 /* glIndexiv */);
}

static PFNGLINDEXSPROC
epoxy_glIndexs_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28339 /* glIndexs */);
}

static PFNGLINDEXSVPROC
epoxy_glIndexsv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28348 /* glIndexsv */);
}

static PFNGLINDEXUBPROC
epoxy_glIndexub_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_1, 28358 /* glIndexub */);
}

static PFNGLINDEXUBVPROC
epoxy_glIndexubv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_1, 28368 /* glIndexubv */);
}

static PFNGLINDEXXOESPROC
epoxy_glIndexxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 28379 /* glIndexxOES */);
}

static PFNGLINDEXXVOESPROC
epoxy_glIndexxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 28391 /* glIndexxvOES */);
}

static PFNGLINITNAMESPROC
epoxy_glInitNames_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 28404 /* glInitNames */);
}

static PFNGLINSERTCOMPONENTEXTPROC
epoxy_glInsertComponentEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 28416 /* glInsertComponentEXT */);
}

static PFNGLINSERTEVENTMARKEREXTPROC
epoxy_glInsertEventMarkerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_debug_marker, 28437 /* glInsertEventMarkerEXT */);
}

static PFNGLINSTRUMENTSBUFFERSGIXPROC
epoxy_glInstrumentsBufferSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 28460 /* glInstrumentsBufferSGIX */);
}

static PFNGLINTERLEAVEDARRAYSPROC
epoxy_glInterleavedArrays_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_1, 28484 /* glInterleavedArrays */);
}

static PFNGLINTERPOLATEPATHSNVPROC
epoxy_glInterpolatePathsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 28504 /* glInterpolatePathsNV */);
}

static PFNGLINVALIDATEBUFFERDATAPROC
epoxy_glInvalidateBufferData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_invalidate_subdata,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28525 /* "glInvalidateBufferData" */,
        28525 /* "glInvalidateBufferData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28525 /* "glInvalidateBufferData" */,
                                providers, entrypoints);
}

static PFNGLINVALIDATEBUFFERSUBDATAPROC
epoxy_glInvalidateBufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_invalidate_subdata,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28548 /* "glInvalidateBufferSubData" */,
        28548 /* "glInvalidateBufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28548 /* "glInvalidateBufferSubData" */,
                                providers, entrypoints);
}

static PFNGLINVALIDATEFRAMEBUFFERPROC
epoxy_glInvalidateFramebuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_invalidate_subdata,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28574 /* "glInvalidateFramebuffer" */,
        28574 /* "glInvalidateFramebuffer" */,
        28574 /* "glInvalidateFramebuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28574 /* "glInvalidateFramebuffer" */,
                                providers, entrypoints);
}

static PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC
epoxy_glInvalidateNamedFramebufferData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28598 /* "glInvalidateNamedFramebufferData" */,
        28598 /* "glInvalidateNamedFramebufferData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28598 /* "glInvalidateNamedFramebufferData" */,
                                providers, entrypoints);
}

static PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
epoxy_glInvalidateNamedFramebufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28631 /* "glInvalidateNamedFramebufferSubData" */,
        28631 /* "glInvalidateNamedFramebufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28631 /* "glInvalidateNamedFramebufferSubData" */,
                                providers, entrypoints);
}

static PFNGLINVALIDATESUBFRAMEBUFFERPROC
epoxy_glInvalidateSubFramebuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_invalidate_subdata,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28667 /* "glInvalidateSubFramebuffer" */,
        28667 /* "glInvalidateSubFramebuffer" */,
        28667 /* "glInvalidateSubFramebuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28667 /* "glInvalidateSubFramebuffer" */,
                                providers, entrypoints);
}

static PFNGLINVALIDATETEXIMAGEPROC
epoxy_glInvalidateTexImage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_invalidate_subdata,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28694 /* "glInvalidateTexImage" */,
        28694 /* "glInvalidateTexImage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28694 /* "glInvalidateTexImage" */,
                                providers, entrypoints);
}

static PFNGLINVALIDATETEXSUBIMAGEPROC
epoxy_glInvalidateTexSubImage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_invalidate_subdata,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28715 /* "glInvalidateTexSubImage" */,
        28715 /* "glInvalidateTexSubImage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28715 /* "glInvalidateTexSubImage" */,
                                providers, entrypoints);
}

static PFNGLISASYNCMARKERSGIXPROC
epoxy_glIsAsyncMarkerSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_async, 28739 /* glIsAsyncMarkerSGIX */);
}

static PFNGLISBUFFERPROC
epoxy_glIsBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28759 /* "glIsBuffer" */,
        28759 /* "glIsBuffer" */,
        28759 /* "glIsBuffer" */,
        28770 /* "glIsBufferARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28759 /* "glIsBuffer" */,
                                providers, entrypoints);
}

static PFNGLISBUFFERARBPROC
epoxy_glIsBufferARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28770 /* "glIsBufferARB" */,
        28759 /* "glIsBuffer" */,
        28759 /* "glIsBuffer" */,
        28759 /* "glIsBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28770 /* "glIsBufferARB" */,
                                providers, entrypoints);
}

static PFNGLISBUFFERRESIDENTNVPROC
epoxy_glIsBufferResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 28784 /* glIsBufferResidentNV */);
}

static PFNGLISCOMMANDLISTNVPROC
epoxy_glIsCommandListNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 28805 /* glIsCommandListNV */);
}

static PFNGLISENABLEDPROC
epoxy_glIsEnabled_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28823 /* "glIsEnabled" */,
        28823 /* "glIsEnabled" */,
        28823 /* "glIsEnabled" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28823 /* "glIsEnabled" */,
                                providers, entrypoints);
}

static PFNGLISENABLEDINDEXEDEXTPROC
epoxy_glIsEnabledIndexedEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28835 /* "glIsEnabledIndexedEXT" */,
        28835 /* "glIsEnabledIndexedEXT" */,
        28857 /* "glIsEnabledi" */,
        28870 /* "glIsEnablediEXT" */,
        28886 /* "glIsEnablediNV" */,
        28901 /* "glIsEnablediOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28835 /* "glIsEnabledIndexedEXT" */,
                                providers, entrypoints);
}

static PFNGLISENABLEDIPROC
epoxy_glIsEnabledi_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28857 /* "glIsEnabledi" */,
        28835 /* "glIsEnabledIndexedEXT" */,
        28835 /* "glIsEnabledIndexedEXT" */,
        28870 /* "glIsEnablediEXT" */,
        28886 /* "glIsEnablediNV" */,
        28901 /* "glIsEnablediOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28857 /* "glIsEnabledi" */,
                                providers, entrypoints);
}

static PFNGLISENABLEDIEXTPROC
epoxy_glIsEnablediEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28870 /* "glIsEnablediEXT" */,
        28835 /* "glIsEnabledIndexedEXT" */,
        28835 /* "glIsEnabledIndexedEXT" */,
        28857 /* "glIsEnabledi" */,
        28886 /* "glIsEnablediNV" */,
        28901 /* "glIsEnablediOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28870 /* "glIsEnablediEXT" */,
                                providers, entrypoints);
}

static PFNGLISENABLEDINVPROC
epoxy_glIsEnablediNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_OES_draw_buffers_indexed,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28886 /* "glIsEnablediNV" */,
        28835 /* "glIsEnabledIndexedEXT" */,
        28835 /* "glIsEnabledIndexedEXT" */,
        28857 /* "glIsEnabledi" */,
        28870 /* "glIsEnablediEXT" */,
        28901 /* "glIsEnablediOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28886 /* "glIsEnablediNV" */,
                                providers, entrypoints);
}

static PFNGLISENABLEDIOESPROC
epoxy_glIsEnablediOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_buffers_indexed,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_draw_buffers2,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_draw_buffers_indexed,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28901 /* "glIsEnablediOES" */,
        28835 /* "glIsEnabledIndexedEXT" */,
        28835 /* "glIsEnabledIndexedEXT" */,
        28857 /* "glIsEnabledi" */,
        28870 /* "glIsEnablediEXT" */,
        28886 /* "glIsEnablediNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28901 /* "glIsEnablediOES" */,
                                providers, entrypoints);
}

static PFNGLISFENCEAPPLEPROC
epoxy_glIsFenceAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 28917 /* glIsFenceAPPLE */);
}

static PFNGLISFENCENVPROC
epoxy_glIsFenceNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fence, 28932 /* glIsFenceNV */);
}

static PFNGLISFRAMEBUFFERPROC
epoxy_glIsFramebuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28944 /* "glIsFramebuffer" */,
        28944 /* "glIsFramebuffer" */,
        28944 /* "glIsFramebuffer" */,
        28960 /* "glIsFramebufferEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28944 /* "glIsFramebuffer" */,
                                providers, entrypoints);
}

static PFNGLISFRAMEBUFFEREXTPROC
epoxy_glIsFramebufferEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        28960 /* "glIsFramebufferEXT" */,
        28944 /* "glIsFramebuffer" */,
        28944 /* "glIsFramebuffer" */,
        28944 /* "glIsFramebuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 28960 /* "glIsFramebufferEXT" */,
                                providers, entrypoints);
}

static PFNGLISFRAMEBUFFEROESPROC
epoxy_glIsFramebufferOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 28979 /* glIsFramebufferOES */);
}

static PFNGLISIMAGEHANDLERESIDENTARBPROC
epoxy_glIsImageHandleResidentARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 28998 /* glIsImageHandleResidentARB */);
}

static PFNGLISIMAGEHANDLERESIDENTNVPROC
epoxy_glIsImageHandleResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 29025 /* glIsImageHandleResidentNV */);
}

static PFNGLISLISTPROC
epoxy_glIsList_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 29051 /* glIsList */);
}

static PFNGLISNAMEAMDPROC
epoxy_glIsNameAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_name_gen_delete, 29060 /* glIsNameAMD */);
}

static PFNGLISNAMEDBUFFERRESIDENTNVPROC
epoxy_glIsNamedBufferResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 29072 /* glIsNamedBufferResidentNV */);
}

static PFNGLISNAMEDSTRINGARBPROC
epoxy_glIsNamedStringARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 29098 /* glIsNamedStringARB */);
}

static PFNGLISOBJECTBUFFERATIPROC
epoxy_glIsObjectBufferATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 29117 /* glIsObjectBufferATI */);
}

static PFNGLISOCCLUSIONQUERYNVPROC
epoxy_glIsOcclusionQueryNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 29137 /* glIsOcclusionQueryNV */);
}

static PFNGLISPATHNVPROC
epoxy_glIsPathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 29158 /* glIsPathNV */);
}

static PFNGLISPOINTINFILLPATHNVPROC
epoxy_glIsPointInFillPathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 29169 /* glIsPointInFillPathNV */);
}

static PFNGLISPOINTINSTROKEPATHNVPROC
epoxy_glIsPointInStrokePathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 29191 /* glIsPointInStrokePathNV */);
}

static PFNGLISPROGRAMPROC
epoxy_glIsProgram_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29215 /* "glIsProgram" */,
        29215 /* "glIsProgram" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29215 /* "glIsProgram" */,
                                providers, entrypoints);
}

static PFNGLISPROGRAMARBPROC
epoxy_glIsProgramARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29227 /* "glIsProgramARB" */,
        29227 /* "glIsProgramARB" */,
        29242 /* "glIsProgramNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29227 /* "glIsProgramARB" */,
                                providers, entrypoints);
}

static PFNGLISPROGRAMNVPROC
epoxy_glIsProgramNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29242 /* "glIsProgramNV" */,
        29227 /* "glIsProgramARB" */,
        29227 /* "glIsProgramARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29242 /* "glIsProgramNV" */,
                                providers, entrypoints);
}

static PFNGLISPROGRAMPIPELINEPROC
epoxy_glIsProgramPipeline_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29256 /* "glIsProgramPipeline" */,
        29256 /* "glIsProgramPipeline" */,
        29256 /* "glIsProgramPipeline" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29256 /* "glIsProgramPipeline" */,
                                providers, entrypoints);
}

static PFNGLISPROGRAMPIPELINEEXTPROC
epoxy_glIsProgramPipelineEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 29276 /* glIsProgramPipelineEXT */);
}

static PFNGLISQUERYPROC
epoxy_glIsQuery_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_occlusion_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29299 /* "glIsQuery" */,
        29299 /* "glIsQuery" */,
        29309 /* "glIsQueryARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29299 /* "glIsQuery" */,
                                providers, entrypoints);
}

static PFNGLISQUERYARBPROC
epoxy_glIsQueryARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_occlusion_query,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29309 /* "glIsQueryARB" */,
        29299 /* "glIsQuery" */,
        29299 /* "glIsQuery" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29309 /* "glIsQueryARB" */,
                                providers, entrypoints);
}

static PFNGLISQUERYEXTPROC
epoxy_glIsQueryEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        GL_extension_GL_EXT_occlusion_query_boolean,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29322 /* "glIsQueryEXT" */,
        29322 /* "glIsQueryEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29322 /* "glIsQueryEXT" */,
                                providers, entrypoints);
}

static PFNGLISRENDERBUFFERPROC
epoxy_glIsRenderbuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29335 /* "glIsRenderbuffer" */,
        29335 /* "glIsRenderbuffer" */,
        29335 /* "glIsRenderbuffer" */,
        29352 /* "glIsRenderbufferEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29335 /* "glIsRenderbuffer" */,
                                providers, entrypoints);
}

static PFNGLISRENDERBUFFEREXTPROC
epoxy_glIsRenderbufferEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29352 /* "glIsRenderbufferEXT" */,
        29335 /* "glIsRenderbuffer" */,
        29335 /* "glIsRenderbuffer" */,
        29335 /* "glIsRenderbuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29352 /* "glIsRenderbufferEXT" */,
                                providers, entrypoints);
}

static PFNGLISRENDERBUFFEROESPROC
epoxy_glIsRenderbufferOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 29372 /* glIsRenderbufferOES */);
}

static PFNGLISSAMPLERPROC
epoxy_glIsSampler_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29392 /* "glIsSampler" */,
        29392 /* "glIsSampler" */,
        29392 /* "glIsSampler" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29392 /* "glIsSampler" */,
                                providers, entrypoints);
}

static PFNGLISSHADERPROC
epoxy_glIsShader_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29404 /* "glIsShader" */,
        29404 /* "glIsShader" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29404 /* "glIsShader" */,
                                providers, entrypoints);
}

static PFNGLISSTATENVPROC
epoxy_glIsStateNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 29415 /* glIsStateNV */);
}

static PFNGLISSYNCPROC
epoxy_glIsSync_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_sync,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29427 /* "glIsSync" */,
        29427 /* "glIsSync" */,
        29427 /* "glIsSync" */,
        29436 /* "glIsSyncAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29427 /* "glIsSync" */,
                                providers, entrypoints);
}

static PFNGLISSYNCAPPLEPROC
epoxy_glIsSyncAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_sync,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29436 /* "glIsSyncAPPLE" */,
        29427 /* "glIsSync" */,
        29427 /* "glIsSync" */,
        29427 /* "glIsSync" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29436 /* "glIsSyncAPPLE" */,
                                providers, entrypoints);
}

static PFNGLISTEXTUREPROC
epoxy_glIsTexture_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29450 /* "glIsTexture" */,
        29450 /* "glIsTexture" */,
        29450 /* "glIsTexture" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29450 /* "glIsTexture" */,
                                providers, entrypoints);
}

static PFNGLISTEXTUREEXTPROC
epoxy_glIsTextureEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_texture_object, 29462 /* glIsTextureEXT */);
}

static PFNGLISTEXTUREHANDLERESIDENTARBPROC
epoxy_glIsTextureHandleResidentARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 29477 /* glIsTextureHandleResidentARB */);
}

static PFNGLISTEXTUREHANDLERESIDENTNVPROC
epoxy_glIsTextureHandleResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 29506 /* glIsTextureHandleResidentNV */);
}

static PFNGLISTRANSFORMFEEDBACKPROC
epoxy_glIsTransformFeedback_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_transform_feedback2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29534 /* "glIsTransformFeedback" */,
        29534 /* "glIsTransformFeedback" */,
        29534 /* "glIsTransformFeedback" */,
        29556 /* "glIsTransformFeedbackNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29534 /* "glIsTransformFeedback" */,
                                providers, entrypoints);
}

static PFNGLISTRANSFORMFEEDBACKNVPROC
epoxy_glIsTransformFeedbackNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback2,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29556 /* "glIsTransformFeedbackNV" */,
        29534 /* "glIsTransformFeedback" */,
        29534 /* "glIsTransformFeedback" */,
        29534 /* "glIsTransformFeedback" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29556 /* "glIsTransformFeedbackNV" */,
                                providers, entrypoints);
}

static PFNGLISVARIANTENABLEDEXTPROC
epoxy_glIsVariantEnabledEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 29580 /* glIsVariantEnabledEXT */);
}

static PFNGLISVERTEXARRAYPROC
epoxy_glIsVertexArray_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_vertex_array_object,
        GL_extension_GL_OES_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29602 /* "glIsVertexArray" */,
        29602 /* "glIsVertexArray" */,
        29602 /* "glIsVertexArray" */,
        29618 /* "glIsVertexArrayAPPLE" */,
        29639 /* "glIsVertexArrayOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29602 /* "glIsVertexArray" */,
                                providers, entrypoints);
}

static PFNGLISVERTEXARRAYAPPLEPROC
epoxy_glIsVertexArrayAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_vertex_array_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29618 /* "glIsVertexArrayAPPLE" */,
        29602 /* "glIsVertexArray" */,
        29602 /* "glIsVertexArray" */,
        29602 /* "glIsVertexArray" */,
        29639 /* "glIsVertexArrayOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29618 /* "glIsVertexArrayAPPLE" */,
                                providers, entrypoints);
}

static PFNGLISVERTEXARRAYOESPROC
epoxy_glIsVertexArrayOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_vertex_array_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_vertex_array_object,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_vertex_array_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29639 /* "glIsVertexArrayOES" */,
        29602 /* "glIsVertexArray" */,
        29602 /* "glIsVertexArray" */,
        29602 /* "glIsVertexArray" */,
        29618 /* "glIsVertexArrayAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29639 /* "glIsVertexArrayOES" */,
                                providers, entrypoints);
}

static PFNGLISVERTEXATTRIBENABLEDAPPLEPROC
epoxy_glIsVertexAttribEnabledAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 29658 /* glIsVertexAttribEnabledAPPLE */);
}

static PFNGLLABELOBJECTEXTPROC
epoxy_glLabelObjectEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_debug_label, 29687 /* glLabelObjectEXT */);
}

static PFNGLLIGHTENVISGIXPROC
epoxy_glLightEnviSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 29704 /* glLightEnviSGIX */);
}

static PFNGLLIGHTMODELFPROC
epoxy_glLightModelf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29720 /* "glLightModelf" */,
        29720 /* "glLightModelf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29720 /* "glLightModelf" */,
                                providers, entrypoints);
}

static PFNGLLIGHTMODELFVPROC
epoxy_glLightModelfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29734 /* "glLightModelfv" */,
        29734 /* "glLightModelfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29734 /* "glLightModelfv" */,
                                providers, entrypoints);
}

static PFNGLLIGHTMODELIPROC
epoxy_glLightModeli_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 29749 /* glLightModeli */);
}

static PFNGLLIGHTMODELIVPROC
epoxy_glLightModeliv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 29763 /* glLightModeliv */);
}

static PFNGLLIGHTMODELXPROC
epoxy_glLightModelx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 29778 /* glLightModelx */);
}

static PFNGLLIGHTMODELXOESPROC
epoxy_glLightModelxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 29792 /* glLightModelxOES */);
}

static PFNGLLIGHTMODELXVPROC
epoxy_glLightModelxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 29809 /* glLightModelxv */);
}

static PFNGLLIGHTMODELXVOESPROC
epoxy_glLightModelxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 29824 /* glLightModelxvOES */);
}

static PFNGLLIGHTFPROC
epoxy_glLightf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29842 /* "glLightf" */,
        29842 /* "glLightf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29842 /* "glLightf" */,
                                providers, entrypoints);
}

static PFNGLLIGHTFVPROC
epoxy_glLightfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29851 /* "glLightfv" */,
        29851 /* "glLightfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29851 /* "glLightfv" */,
                                providers, entrypoints);
}

static PFNGLLIGHTIPROC
epoxy_glLighti_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 29861 /* glLighti */);
}

static PFNGLLIGHTIVPROC
epoxy_glLightiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 29870 /* glLightiv */);
}

static PFNGLLIGHTXPROC
epoxy_glLightx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 29880 /* glLightx */);
}

static PFNGLLIGHTXOESPROC
epoxy_glLightxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 29889 /* glLightxOES */);
}

static PFNGLLIGHTXVPROC
epoxy_glLightxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 29901 /* glLightxv */);
}

static PFNGLLIGHTXVOESPROC
epoxy_glLightxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 29911 /* glLightxvOES */);
}

static PFNGLLINESTIPPLEPROC
epoxy_glLineStipple_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 29924 /* glLineStipple */);
}

static PFNGLLINEWIDTHPROC
epoxy_glLineWidth_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29938 /* "glLineWidth" */,
        29938 /* "glLineWidth" */,
        29938 /* "glLineWidth" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29938 /* "glLineWidth" */,
                                providers, entrypoints);
}

static PFNGLLINEWIDTHXPROC
epoxy_glLineWidthx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 29950 /* glLineWidthx */);
}

static PFNGLLINEWIDTHXOESPROC
epoxy_glLineWidthxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 29963 /* glLineWidthxOES */);
}

static PFNGLLINKPROGRAMPROC
epoxy_glLinkProgram_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29979 /* "glLinkProgram" */,
        29979 /* "glLinkProgram" */,
        29993 /* "glLinkProgramARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29979 /* "glLinkProgram" */,
                                providers, entrypoints);
}

static PFNGLLINKPROGRAMARBPROC
epoxy_glLinkProgramARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        29993 /* "glLinkProgramARB" */,
        29979 /* "glLinkProgram" */,
        29979 /* "glLinkProgram" */,
    };
    return gl_provider_resolver(entrypoint_strings + 29993 /* "glLinkProgramARB" */,
                                providers, entrypoints);
}

static PFNGLLISTBASEPROC
epoxy_glListBase_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 30010 /* glListBase */);
}

static PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC
epoxy_glListDrawCommandsStatesClientNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 30021 /* glListDrawCommandsStatesClientNV */);
}

static PFNGLLISTPARAMETERFSGIXPROC
epoxy_glListParameterfSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 30054 /* glListParameterfSGIX */);
}

static PFNGLLISTPARAMETERFVSGIXPROC
epoxy_glListParameterfvSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 30075 /* glListParameterfvSGIX */);
}

static PFNGLLISTPARAMETERISGIXPROC
epoxy_glListParameteriSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 30097 /* glListParameteriSGIX */);
}

static PFNGLLISTPARAMETERIVSGIXPROC
epoxy_glListParameterivSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 30118 /* glListParameterivSGIX */);
}

static PFNGLLOADIDENTITYPROC
epoxy_glLoadIdentity_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30140 /* "glLoadIdentity" */,
        30140 /* "glLoadIdentity" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30140 /* "glLoadIdentity" */,
                                providers, entrypoints);
}

static PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
epoxy_glLoadIdentityDeformationMapSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_polynomial_ffd, 30155 /* glLoadIdentityDeformationMapSGIX */);
}

static PFNGLLOADMATRIXDPROC
epoxy_glLoadMatrixd_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 30188 /* glLoadMatrixd */);
}

static PFNGLLOADMATRIXFPROC
epoxy_glLoadMatrixf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30202 /* "glLoadMatrixf" */,
        30202 /* "glLoadMatrixf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30202 /* "glLoadMatrixf" */,
                                providers, entrypoints);
}

static PFNGLLOADMATRIXXPROC
epoxy_glLoadMatrixx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 30216 /* glLoadMatrixx */);
}

static PFNGLLOADMATRIXXOESPROC
epoxy_glLoadMatrixxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30230 /* glLoadMatrixxOES */);
}

static PFNGLLOADNAMEPROC
epoxy_glLoadName_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 30247 /* glLoadName */);
}

static PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC
epoxy_glLoadPaletteFromModelViewMatrixOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_matrix_palette, 30258 /* glLoadPaletteFromModelViewMatrixOES */);
}

static PFNGLLOADPROGRAMNVPROC
epoxy_glLoadProgramNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 30294 /* glLoadProgramNV */);
}

static PFNGLLOADTRANSPOSEMATRIXDPROC
epoxy_glLoadTransposeMatrixd_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_transpose_matrix,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30310 /* "glLoadTransposeMatrixd" */,
        30333 /* "glLoadTransposeMatrixdARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30310 /* "glLoadTransposeMatrixd" */,
                                providers, entrypoints);
}

static PFNGLLOADTRANSPOSEMATRIXDARBPROC
epoxy_glLoadTransposeMatrixdARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_transpose_matrix,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30333 /* "glLoadTransposeMatrixdARB" */,
        30310 /* "glLoadTransposeMatrixd" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30333 /* "glLoadTransposeMatrixdARB" */,
                                providers, entrypoints);
}

static PFNGLLOADTRANSPOSEMATRIXFPROC
epoxy_glLoadTransposeMatrixf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_transpose_matrix,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30359 /* "glLoadTransposeMatrixf" */,
        30382 /* "glLoadTransposeMatrixfARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30359 /* "glLoadTransposeMatrixf" */,
                                providers, entrypoints);
}

static PFNGLLOADTRANSPOSEMATRIXFARBPROC
epoxy_glLoadTransposeMatrixfARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_transpose_matrix,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30382 /* "glLoadTransposeMatrixfARB" */,
        30359 /* "glLoadTransposeMatrixf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30382 /* "glLoadTransposeMatrixfARB" */,
                                providers, entrypoints);
}

static PFNGLLOADTRANSPOSEMATRIXXOESPROC
epoxy_glLoadTransposeMatrixxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30408 /* glLoadTransposeMatrixxOES */);
}

static PFNGLLOCKARRAYSEXTPROC
epoxy_glLockArraysEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_compiled_vertex_array, 30434 /* glLockArraysEXT */);
}

static PFNGLLOGICOPPROC
epoxy_glLogicOp_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30450 /* "glLogicOp" */,
        30450 /* "glLogicOp" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30450 /* "glLogicOp" */,
                                providers, entrypoints);
}

static PFNGLMAKEBUFFERNONRESIDENTNVPROC
epoxy_glMakeBufferNonResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 30460 /* glMakeBufferNonResidentNV */);
}

static PFNGLMAKEBUFFERRESIDENTNVPROC
epoxy_glMakeBufferResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 30486 /* glMakeBufferResidentNV */);
}

static PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC
epoxy_glMakeImageHandleNonResidentARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 30509 /* glMakeImageHandleNonResidentARB */);
}

static PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC
epoxy_glMakeImageHandleNonResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 30541 /* glMakeImageHandleNonResidentNV */);
}

static PFNGLMAKEIMAGEHANDLERESIDENTARBPROC
epoxy_glMakeImageHandleResidentARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 30572 /* glMakeImageHandleResidentARB */);
}

static PFNGLMAKEIMAGEHANDLERESIDENTNVPROC
epoxy_glMakeImageHandleResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 30601 /* glMakeImageHandleResidentNV */);
}

static PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC
epoxy_glMakeNamedBufferNonResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 30629 /* glMakeNamedBufferNonResidentNV */);
}

static PFNGLMAKENAMEDBUFFERRESIDENTNVPROC
epoxy_glMakeNamedBufferResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 30660 /* glMakeNamedBufferResidentNV */);
}

static PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC
epoxy_glMakeTextureHandleNonResidentARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 30688 /* glMakeTextureHandleNonResidentARB */);
}

static PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC
epoxy_glMakeTextureHandleNonResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 30722 /* glMakeTextureHandleNonResidentNV */);
}

static PFNGLMAKETEXTUREHANDLERESIDENTARBPROC
epoxy_glMakeTextureHandleResidentARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 30755 /* glMakeTextureHandleResidentARB */);
}

static PFNGLMAKETEXTUREHANDLERESIDENTNVPROC
epoxy_glMakeTextureHandleResidentNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 30786 /* glMakeTextureHandleResidentNV */);
}

static PFNGLMAP1DPROC
epoxy_glMap1d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 30816 /* glMap1d */);
}

static PFNGLMAP1FPROC
epoxy_glMap1f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 30824 /* glMap1f */);
}

static PFNGLMAP1XOESPROC
epoxy_glMap1xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30832 /* glMap1xOES */);
}

static PFNGLMAP2DPROC
epoxy_glMap2d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 30843 /* glMap2d */);
}

static PFNGLMAP2FPROC
epoxy_glMap2f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 30851 /* glMap2f */);
}

static PFNGLMAP2XOESPROC
epoxy_glMap2xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30859 /* glMap2xOES */);
}

static PFNGLMAPBUFFERPROC
epoxy_glMapBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        GL_extension_GL_ARB_vertex_buffer_object,
        GL_extension_GL_OES_mapbuffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30870 /* "glMapBuffer" */,
        30882 /* "glMapBufferARB" */,
        30897 /* "glMapBufferOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30870 /* "glMapBuffer" */,
                                providers, entrypoints);
}

static PFNGLMAPBUFFERARBPROC
epoxy_glMapBufferARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        GL_extension_GL_OES_mapbuffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30882 /* "glMapBufferARB" */,
        30870 /* "glMapBuffer" */,
        30897 /* "glMapBufferOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30882 /* "glMapBufferARB" */,
                                providers, entrypoints);
}

static PFNGLMAPBUFFEROESPROC
epoxy_glMapBufferOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_mapbuffer,
        Desktop_OpenGL_1_5,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30897 /* "glMapBufferOES" */,
        30870 /* "glMapBuffer" */,
        30882 /* "glMapBufferARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30897 /* "glMapBufferOES" */,
                                providers, entrypoints);
}

static PFNGLMAPBUFFERRANGEPROC
epoxy_glMapBufferRange_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_map_buffer_range,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_map_buffer_range,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30912 /* "glMapBufferRange" */,
        30912 /* "glMapBufferRange" */,
        30912 /* "glMapBufferRange" */,
        30929 /* "glMapBufferRangeEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30912 /* "glMapBufferRange" */,
                                providers, entrypoints);
}

static PFNGLMAPBUFFERRANGEEXTPROC
epoxy_glMapBufferRangeEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_map_buffer_range,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_map_buffer_range,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        30929 /* "glMapBufferRangeEXT" */,
        30912 /* "glMapBufferRange" */,
        30912 /* "glMapBufferRange" */,
        30912 /* "glMapBufferRange" */,
    };
    return gl_provider_resolver(entrypoint_strings + 30929 /* "glMapBufferRangeEXT" */,
                                providers, entrypoints);
}

static PFNGLMAPCONTROLPOINTSNVPROC
epoxy_glMapControlPointsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 30949 /* glMapControlPointsNV */);
}

static PFNGLMAPGRID1DPROC
epoxy_glMapGrid1d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 30970 /* glMapGrid1d */);
}

static PFNGLMAPGRID1FPROC
epoxy_glMapGrid1f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 30982 /* glMapGrid1f */);
}

static PFNGLMAPGRID1XOESPROC
epoxy_glMapGrid1xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30994 /* glMapGrid1xOES */);
}

static PFNGLMAPGRID2DPROC
epoxy_glMapGrid2d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 31009 /* glMapGrid2d */);
}

static PFNGLMAPGRID2FPROC
epoxy_glMapGrid2f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 31021 /* glMapGrid2f */);
}

static PFNGLMAPGRID2XOESPROC
epoxy_glMapGrid2xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 31033 /* glMapGrid2xOES */);
}

static PFNGLMAPNAMEDBUFFERPROC
epoxy_glMapNamedBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        31048 /* "glMapNamedBuffer" */,
        31048 /* "glMapNamedBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 31048 /* "glMapNamedBuffer" */,
                                providers, entrypoints);
}

static PFNGLMAPNAMEDBUFFEREXTPROC
epoxy_glMapNamedBufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31065 /* glMapNamedBufferEXT */);
}

static PFNGLMAPNAMEDBUFFERRANGEPROC
epoxy_glMapNamedBufferRange_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        31085 /* "glMapNamedBufferRange" */,
        31085 /* "glMapNamedBufferRange" */,
    };
    return gl_provider_resolver(entrypoint_strings + 31085 /* "glMapNamedBufferRange" */,
                                providers, entrypoints);
}

static PFNGLMAPNAMEDBUFFERRANGEEXTPROC
epoxy_glMapNamedBufferRangeEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31107 /* glMapNamedBufferRangeEXT */);
}

static PFNGLMAPOBJECTBUFFERATIPROC
epoxy_glMapObjectBufferATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_map_object_buffer, 31132 /* glMapObjectBufferATI */);
}

static PFNGLMAPPARAMETERFVNVPROC
epoxy_glMapParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 31153 /* glMapParameterfvNV */);
}

static PFNGLMAPPARAMETERIVNVPROC
epoxy_glMapParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 31172 /* glMapParameterivNV */);
}

static PFNGLMAPTEXTURE2DINTELPROC
epoxy_glMapTexture2DINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_map_texture, 31191 /* glMapTexture2DINTEL */);
}

static PFNGLMAPVERTEXATTRIB1DAPPLEPROC
epoxy_glMapVertexAttrib1dAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 31211 /* glMapVertexAttrib1dAPPLE */);
}

static PFNGLMAPVERTEXATTRIB1FAPPLEPROC
epoxy_glMapVertexAttrib1fAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 31236 /* glMapVertexAttrib1fAPPLE */);
}

static PFNGLMAPVERTEXATTRIB2DAPPLEPROC
epoxy_glMapVertexAttrib2dAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 31261 /* glMapVertexAttrib2dAPPLE */);
}

static PFNGLMAPVERTEXATTRIB2FAPPLEPROC
epoxy_glMapVertexAttrib2fAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 31286 /* glMapVertexAttrib2fAPPLE */);
}

static PFNGLMATERIALFPROC
epoxy_glMaterialf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        31311 /* "glMaterialf" */,
        31311 /* "glMaterialf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 31311 /* "glMaterialf" */,
                                providers, entrypoints);
}

static PFNGLMATERIALFVPROC
epoxy_glMaterialfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        31323 /* "glMaterialfv" */,
        31323 /* "glMaterialfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 31323 /* "glMaterialfv" */,
                                providers, entrypoints);
}

static PFNGLMATERIALIPROC
epoxy_glMateriali_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 31336 /* glMateriali */);
}

static PFNGLMATERIALIVPROC
epoxy_glMaterialiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 31348 /* glMaterialiv */);
}

static PFNGLMATERIALXPROC
epoxy_glMaterialx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 31361 /* glMaterialx */);
}

static PFNGLMATERIALXOESPROC
epoxy_glMaterialxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 31373 /* glMaterialxOES */);
}

static PFNGLMATERIALXVPROC
epoxy_glMaterialxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 31388 /* glMaterialxv */);
}

static PFNGLMATERIALXVOESPROC
epoxy_glMaterialxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 31401 /* glMaterialxvOES */);
}

static PFNGLMATRIXFRUSTUMEXTPROC
epoxy_glMatrixFrustumEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31417 /* glMatrixFrustumEXT */);
}

static PFNGLMATRIXINDEXPOINTERARBPROC
epoxy_glMatrixIndexPointerARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 31436 /* glMatrixIndexPointerARB */);
}

static PFNGLMATRIXINDEXPOINTEROESPROC
epoxy_glMatrixIndexPointerOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_matrix_palette, 31460 /* glMatrixIndexPointerOES */);
}

static PFNGLMATRIXINDEXUBVARBPROC
epoxy_glMatrixIndexubvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 31484 /* glMatrixIndexubvARB */);
}

static PFNGLMATRIXINDEXUIVARBPROC
epoxy_glMatrixIndexuivARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 31504 /* glMatrixIndexuivARB */);
}

static PFNGLMATRIXINDEXUSVARBPROC
epoxy_glMatrixIndexusvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 31524 /* glMatrixIndexusvARB */);
}

static PFNGLMATRIXLOAD3X2FNVPROC
epoxy_glMatrixLoad3x2fNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 31544 /* glMatrixLoad3x2fNV */);
}

static PFNGLMATRIXLOAD3X3FNVPROC
epoxy_glMatrixLoad3x3fNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 31563 /* glMatrixLoad3x3fNV */);
}

static PFNGLMATRIXLOADIDENTITYEXTPROC
epoxy_glMatrixLoadIdentityEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31582 /* glMatrixLoadIdentityEXT */);
}

static PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC
epoxy_glMatrixLoadTranspose3x3fNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 31606 /* glMatrixLoadTranspose3x3fNV */);
}

static PFNGLMATRIXLOADTRANSPOSEDEXTPROC
epoxy_glMatrixLoadTransposedEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31634 /* glMatrixLoadTransposedEXT */);
}

static PFNGLMATRIXLOADTRANSPOSEFEXTPROC
epoxy_glMatrixLoadTransposefEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31660 /* glMatrixLoadTransposefEXT */);
}

static PFNGLMATRIXLOADDEXTPROC
epoxy_glMatrixLoaddEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31686 /* glMatrixLoaddEXT */);
}

static PFNGLMATRIXLOADFEXTPROC
epoxy_glMatrixLoadfEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31703 /* glMatrixLoadfEXT */);
}

static PFNGLMATRIXMODEPROC
epoxy_glMatrixMode_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        31720 /* "glMatrixMode" */,
        31720 /* "glMatrixMode" */,
    };
    return gl_provider_resolver(entrypoint_strings + 31720 /* "glMatrixMode" */,
                                providers, entrypoints);
}

static PFNGLMATRIXMULT3X2FNVPROC
epoxy_glMatrixMult3x2fNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 31733 /* glMatrixMult3x2fNV */);
}

static PFNGLMATRIXMULT3X3FNVPROC
epoxy_glMatrixMult3x3fNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 31752 /* glMatrixMult3x3fNV */);
}

static PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC
epoxy_glMatrixMultTranspose3x3fNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 31771 /* glMatrixMultTranspose3x3fNV */);
}

static PFNGLMATRIXMULTTRANSPOSEDEXTPROC
epoxy_glMatrixMultTransposedEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31799 /* glMatrixMultTransposedEXT */);
}

static PFNGLMATRIXMULTTRANSPOSEFEXTPROC
epoxy_glMatrixMultTransposefEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31825 /* glMatrixMultTransposefEXT */);
}

static PFNGLMATRIXMULTDEXTPROC
epoxy_glMatrixMultdEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31851 /* glMatrixMultdEXT */);
}

static PFNGLMATRIXMULTFEXTPROC
epoxy_glMatrixMultfEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31868 /* glMatrixMultfEXT */);
}

static PFNGLMATRIXORTHOEXTPROC
epoxy_glMatrixOrthoEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31885 /* glMatrixOrthoEXT */);
}

static PFNGLMATRIXPOPEXTPROC
epoxy_glMatrixPopEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31902 /* glMatrixPopEXT */);
}

static PFNGLMATRIXPUSHEXTPROC
epoxy_glMatrixPushEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31917 /* glMatrixPushEXT */);
}

static PFNGLMATRIXROTATEDEXTPROC
epoxy_glMatrixRotatedEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31933 /* glMatrixRotatedEXT */);
}

static PFNGLMATRIXROTATEFEXTPROC
epoxy_glMatrixRotatefEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31952 /* glMatrixRotatefEXT */);
}

static PFNGLMATRIXSCALEDEXTPROC
epoxy_glMatrixScaledEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31971 /* glMatrixScaledEXT */);
}

static PFNGLMATRIXSCALEFEXTPROC
epoxy_glMatrixScalefEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31989 /* glMatrixScalefEXT */);
}

static PFNGLMATRIXTRANSLATEDEXTPROC
epoxy_glMatrixTranslatedEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32007 /* glMatrixTranslatedEXT */);
}

static PFNGLMATRIXTRANSLATEFEXTPROC
epoxy_glMatrixTranslatefEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32029 /* glMatrixTranslatefEXT */);
}

static PFNGLMEMORYBARRIERPROC
epoxy_glMemoryBarrier_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_shader_image_load_store,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_shader_image_load_store,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32051 /* "glMemoryBarrier" */,
        32051 /* "glMemoryBarrier" */,
        32051 /* "glMemoryBarrier" */,
        32091 /* "glMemoryBarrierEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32051 /* "glMemoryBarrier" */,
                                providers, entrypoints);
}

static PFNGLMEMORYBARRIERBYREGIONPROC
epoxy_glMemoryBarrierByRegion_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_ES3_1_compatibility,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32067 /* "glMemoryBarrierByRegion" */,
        32067 /* "glMemoryBarrierByRegion" */,
        32067 /* "glMemoryBarrierByRegion" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32067 /* "glMemoryBarrierByRegion" */,
                                providers, entrypoints);
}

static PFNGLMEMORYBARRIEREXTPROC
epoxy_glMemoryBarrierEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_shader_image_load_store,
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_shader_image_load_store,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32091 /* "glMemoryBarrierEXT" */,
        32051 /* "glMemoryBarrier" */,
        32051 /* "glMemoryBarrier" */,
        32051 /* "glMemoryBarrier" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32091 /* "glMemoryBarrierEXT" */,
                                providers, entrypoints);
}

static PFNGLMINSAMPLESHADINGPROC
epoxy_glMinSampleShading_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_sample_shading,
        GL_extension_GL_OES_sample_shading,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32110 /* "glMinSampleShading" */,
        32129 /* "glMinSampleShadingARB" */,
        32151 /* "glMinSampleShadingOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32110 /* "glMinSampleShading" */,
                                providers, entrypoints);
}

static PFNGLMINSAMPLESHADINGARBPROC
epoxy_glMinSampleShadingARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_sample_shading,
        Desktop_OpenGL_4_0,
        GL_extension_GL_OES_sample_shading,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32129 /* "glMinSampleShadingARB" */,
        32110 /* "glMinSampleShading" */,
        32151 /* "glMinSampleShadingOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32129 /* "glMinSampleShadingARB" */,
                                providers, entrypoints);
}

static PFNGLMINSAMPLESHADINGOESPROC
epoxy_glMinSampleShadingOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_sample_shading,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_sample_shading,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32151 /* "glMinSampleShadingOES" */,
        32110 /* "glMinSampleShading" */,
        32129 /* "glMinSampleShadingARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32151 /* "glMinSampleShadingOES" */,
                                providers, entrypoints);
}

static PFNGLMINMAXPROC
epoxy_glMinmax_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_histogram,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32173 /* "glMinmax" */,
        32182 /* "glMinmaxEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32173 /* "glMinmax" */,
                                providers, entrypoints);
}

static PFNGLMINMAXEXTPROC
epoxy_glMinmaxEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_histogram,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32182 /* "glMinmaxEXT" */,
        32173 /* "glMinmax" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32182 /* "glMinmaxEXT" */,
                                providers, entrypoints);
}

static PFNGLMULTMATRIXDPROC
epoxy_glMultMatrixd_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 32194 /* glMultMatrixd */);
}

static PFNGLMULTMATRIXFPROC
epoxy_glMultMatrixf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32208 /* "glMultMatrixf" */,
        32208 /* "glMultMatrixf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32208 /* "glMultMatrixf" */,
                                providers, entrypoints);
}

static PFNGLMULTMATRIXXPROC
epoxy_glMultMatrixx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 32222 /* glMultMatrixx */);
}

static PFNGLMULTMATRIXXOESPROC
epoxy_glMultMatrixxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 32236 /* glMultMatrixxOES */);
}

static PFNGLMULTTRANSPOSEMATRIXDPROC
epoxy_glMultTransposeMatrixd_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_transpose_matrix,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32253 /* "glMultTransposeMatrixd" */,
        32276 /* "glMultTransposeMatrixdARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32253 /* "glMultTransposeMatrixd" */,
                                providers, entrypoints);
}

static PFNGLMULTTRANSPOSEMATRIXDARBPROC
epoxy_glMultTransposeMatrixdARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_transpose_matrix,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32276 /* "glMultTransposeMatrixdARB" */,
        32253 /* "glMultTransposeMatrixd" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32276 /* "glMultTransposeMatrixdARB" */,
                                providers, entrypoints);
}

static PFNGLMULTTRANSPOSEMATRIXFPROC
epoxy_glMultTransposeMatrixf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_transpose_matrix,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32302 /* "glMultTransposeMatrixf" */,
        32325 /* "glMultTransposeMatrixfARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32302 /* "glMultTransposeMatrixf" */,
                                providers, entrypoints);
}

static PFNGLMULTTRANSPOSEMATRIXFARBPROC
epoxy_glMultTransposeMatrixfARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_transpose_matrix,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32325 /* "glMultTransposeMatrixfARB" */,
        32302 /* "glMultTransposeMatrixf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32325 /* "glMultTransposeMatrixfARB" */,
                                providers, entrypoints);
}

static PFNGLMULTTRANSPOSEMATRIXXOESPROC
epoxy_glMultTransposeMatrixxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 32351 /* glMultTransposeMatrixxOES */);
}

static PFNGLMULTIDRAWARRAYSPROC
epoxy_glMultiDrawArrays_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_multi_draw_arrays,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32377 /* "glMultiDrawArrays" */,
        32395 /* "glMultiDrawArraysEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32377 /* "glMultiDrawArrays" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWARRAYSEXTPROC
epoxy_glMultiDrawArraysEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_multi_draw_arrays,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32395 /* "glMultiDrawArraysEXT" */,
        32377 /* "glMultiDrawArrays" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32395 /* "glMultiDrawArraysEXT" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWARRAYSINDIRECTPROC
epoxy_glMultiDrawArraysIndirect_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_multi_draw_indirect,
        GL_extension_GL_AMD_multi_draw_indirect,
        GL_extension_GL_EXT_multi_draw_indirect,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32416 /* "glMultiDrawArraysIndirect" */,
        32416 /* "glMultiDrawArraysIndirect" */,
        32442 /* "glMultiDrawArraysIndirectAMD" */,
        32582 /* "glMultiDrawArraysIndirectEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32416 /* "glMultiDrawArraysIndirect" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC
epoxy_glMultiDrawArraysIndirectAMD_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_multi_draw_indirect,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_multi_draw_indirect,
        GL_extension_GL_EXT_multi_draw_indirect,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32442 /* "glMultiDrawArraysIndirectAMD" */,
        32416 /* "glMultiDrawArraysIndirect" */,
        32416 /* "glMultiDrawArraysIndirect" */,
        32582 /* "glMultiDrawArraysIndirectEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32442 /* "glMultiDrawArraysIndirectAMD" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC
epoxy_glMultiDrawArraysIndirectBindlessCountNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_multi_draw_indirect_count, 32471 /* glMultiDrawArraysIndirectBindlessCountNV */);
}

static PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC
epoxy_glMultiDrawArraysIndirectBindlessNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_multi_draw_indirect, 32512 /* glMultiDrawArraysIndirectBindlessNV */);
}

static PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC
epoxy_glMultiDrawArraysIndirectCountARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_indirect_parameters, 32548 /* glMultiDrawArraysIndirectCountARB */);
}

static PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC
epoxy_glMultiDrawArraysIndirectEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_multi_draw_indirect,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_multi_draw_indirect,
        GL_extension_GL_AMD_multi_draw_indirect,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32582 /* "glMultiDrawArraysIndirectEXT" */,
        32416 /* "glMultiDrawArraysIndirect" */,
        32416 /* "glMultiDrawArraysIndirect" */,
        32442 /* "glMultiDrawArraysIndirectAMD" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32582 /* "glMultiDrawArraysIndirectEXT" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
epoxy_glMultiDrawElementArrayAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 32611 /* glMultiDrawElementArrayAPPLE */);
}

static PFNGLMULTIDRAWELEMENTSPROC
epoxy_glMultiDrawElements_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_multi_draw_arrays,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32640 /* "glMultiDrawElements" */,
        32756 /* "glMultiDrawElementsEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32640 /* "glMultiDrawElements" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
epoxy_glMultiDrawElementsBaseVertex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_EXT_draw_elements_base_vertex,
        GL_extension_GL_OES_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32660 /* "glMultiDrawElementsBaseVertex" */,
        32660 /* "glMultiDrawElementsBaseVertex" */,
        32690 /* "glMultiDrawElementsBaseVertexEXT" */,
        32723 /* "glMultiDrawElementsBaseVertexOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32660 /* "glMultiDrawElementsBaseVertex" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC
epoxy_glMultiDrawElementsBaseVertexEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_draw_elements_base_vertex,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_OES_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32690 /* "glMultiDrawElementsBaseVertexEXT" */,
        32660 /* "glMultiDrawElementsBaseVertex" */,
        32660 /* "glMultiDrawElementsBaseVertex" */,
        32723 /* "glMultiDrawElementsBaseVertexOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32690 /* "glMultiDrawElementsBaseVertexEXT" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC
epoxy_glMultiDrawElementsBaseVertexOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_draw_elements_base_vertex,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_draw_elements_base_vertex,
        GL_extension_GL_EXT_draw_elements_base_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32723 /* "glMultiDrawElementsBaseVertexOES" */,
        32660 /* "glMultiDrawElementsBaseVertex" */,
        32660 /* "glMultiDrawElementsBaseVertex" */,
        32690 /* "glMultiDrawElementsBaseVertexEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32723 /* "glMultiDrawElementsBaseVertexOES" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWELEMENTSEXTPROC
epoxy_glMultiDrawElementsEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_multi_draw_arrays,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32756 /* "glMultiDrawElementsEXT" */,
        32640 /* "glMultiDrawElements" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32756 /* "glMultiDrawElementsEXT" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWELEMENTSINDIRECTPROC
epoxy_glMultiDrawElementsIndirect_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_multi_draw_indirect,
        GL_extension_GL_AMD_multi_draw_indirect,
        GL_extension_GL_EXT_multi_draw_indirect,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32779 /* "glMultiDrawElementsIndirect" */,
        32779 /* "glMultiDrawElementsIndirect" */,
        32807 /* "glMultiDrawElementsIndirectAMD" */,
        32955 /* "glMultiDrawElementsIndirectEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32779 /* "glMultiDrawElementsIndirect" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC
epoxy_glMultiDrawElementsIndirectAMD_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_multi_draw_indirect,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_multi_draw_indirect,
        GL_extension_GL_EXT_multi_draw_indirect,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32807 /* "glMultiDrawElementsIndirectAMD" */,
        32779 /* "glMultiDrawElementsIndirect" */,
        32779 /* "glMultiDrawElementsIndirect" */,
        32955 /* "glMultiDrawElementsIndirectEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32807 /* "glMultiDrawElementsIndirectAMD" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC
epoxy_glMultiDrawElementsIndirectBindlessCountNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_multi_draw_indirect_count, 32838 /* glMultiDrawElementsIndirectBindlessCountNV */);
}

static PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC
epoxy_glMultiDrawElementsIndirectBindlessNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_multi_draw_indirect, 32881 /* glMultiDrawElementsIndirectBindlessNV */);
}

static PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC
epoxy_glMultiDrawElementsIndirectCountARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_indirect_parameters, 32919 /* glMultiDrawElementsIndirectCountARB */);
}

static PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC
epoxy_glMultiDrawElementsIndirectEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_multi_draw_indirect,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_multi_draw_indirect,
        GL_extension_GL_AMD_multi_draw_indirect,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        32955 /* "glMultiDrawElementsIndirectEXT" */,
        32779 /* "glMultiDrawElementsIndirect" */,
        32779 /* "glMultiDrawElementsIndirect" */,
        32807 /* "glMultiDrawElementsIndirectAMD" */,
    };
    return gl_provider_resolver(entrypoint_strings + 32955 /* "glMultiDrawElementsIndirectEXT" */,
                                providers, entrypoints);
}

static PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
epoxy_glMultiDrawRangeElementArrayAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 32986 /* glMultiDrawRangeElementArrayAPPLE */);
}

static PFNGLMULTIMODEDRAWARRAYSIBMPROC
epoxy_glMultiModeDrawArraysIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_multimode_draw_arrays, 33020 /* glMultiModeDrawArraysIBM */);
}

static PFNGLMULTIMODEDRAWELEMENTSIBMPROC
epoxy_glMultiModeDrawElementsIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_multimode_draw_arrays, 33045 /* glMultiModeDrawElementsIBM */);
}

static PFNGLMULTITEXBUFFEREXTPROC
epoxy_glMultiTexBufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 33072 /* glMultiTexBufferEXT */);
}

static PFNGLMULTITEXCOORD1BOESPROC
epoxy_glMultiTexCoord1bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 33092 /* glMultiTexCoord1bOES */);
}

static PFNGLMULTITEXCOORD1BVOESPROC
epoxy_glMultiTexCoord1bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 33113 /* glMultiTexCoord1bvOES */);
}

static PFNGLMULTITEXCOORD1DPROC
epoxy_glMultiTexCoord1d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33135 /* "glMultiTexCoord1d" */,
        33153 /* "glMultiTexCoord1dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33135 /* "glMultiTexCoord1d" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1DARBPROC
epoxy_glMultiTexCoord1dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33153 /* "glMultiTexCoord1dARB" */,
        33135 /* "glMultiTexCoord1d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33153 /* "glMultiTexCoord1dARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1DVPROC
epoxy_glMultiTexCoord1dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33174 /* "glMultiTexCoord1dv" */,
        33193 /* "glMultiTexCoord1dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33174 /* "glMultiTexCoord1dv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1DVARBPROC
epoxy_glMultiTexCoord1dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33193 /* "glMultiTexCoord1dvARB" */,
        33174 /* "glMultiTexCoord1dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33193 /* "glMultiTexCoord1dvARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1FPROC
epoxy_glMultiTexCoord1f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33215 /* "glMultiTexCoord1f" */,
        33233 /* "glMultiTexCoord1fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33215 /* "glMultiTexCoord1f" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1FARBPROC
epoxy_glMultiTexCoord1fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33233 /* "glMultiTexCoord1fARB" */,
        33215 /* "glMultiTexCoord1f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33233 /* "glMultiTexCoord1fARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1FVPROC
epoxy_glMultiTexCoord1fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33254 /* "glMultiTexCoord1fv" */,
        33273 /* "glMultiTexCoord1fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33254 /* "glMultiTexCoord1fv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1FVARBPROC
epoxy_glMultiTexCoord1fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33273 /* "glMultiTexCoord1fvARB" */,
        33254 /* "glMultiTexCoord1fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33273 /* "glMultiTexCoord1fvARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1HNVPROC
epoxy_glMultiTexCoord1hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 33295 /* glMultiTexCoord1hNV */);
}

static PFNGLMULTITEXCOORD1HVNVPROC
epoxy_glMultiTexCoord1hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 33315 /* glMultiTexCoord1hvNV */);
}

static PFNGLMULTITEXCOORD1IPROC
epoxy_glMultiTexCoord1i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33336 /* "glMultiTexCoord1i" */,
        33354 /* "glMultiTexCoord1iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33336 /* "glMultiTexCoord1i" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1IARBPROC
epoxy_glMultiTexCoord1iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33354 /* "glMultiTexCoord1iARB" */,
        33336 /* "glMultiTexCoord1i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33354 /* "glMultiTexCoord1iARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1IVPROC
epoxy_glMultiTexCoord1iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33375 /* "glMultiTexCoord1iv" */,
        33394 /* "glMultiTexCoord1ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33375 /* "glMultiTexCoord1iv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1IVARBPROC
epoxy_glMultiTexCoord1ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33394 /* "glMultiTexCoord1ivARB" */,
        33375 /* "glMultiTexCoord1iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33394 /* "glMultiTexCoord1ivARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1SPROC
epoxy_glMultiTexCoord1s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33416 /* "glMultiTexCoord1s" */,
        33434 /* "glMultiTexCoord1sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33416 /* "glMultiTexCoord1s" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1SARBPROC
epoxy_glMultiTexCoord1sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33434 /* "glMultiTexCoord1sARB" */,
        33416 /* "glMultiTexCoord1s" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33434 /* "glMultiTexCoord1sARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1SVPROC
epoxy_glMultiTexCoord1sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33455 /* "glMultiTexCoord1sv" */,
        33474 /* "glMultiTexCoord1svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33455 /* "glMultiTexCoord1sv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1SVARBPROC
epoxy_glMultiTexCoord1svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33474 /* "glMultiTexCoord1svARB" */,
        33455 /* "glMultiTexCoord1sv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33474 /* "glMultiTexCoord1svARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD1XOESPROC
epoxy_glMultiTexCoord1xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 33496 /* glMultiTexCoord1xOES */);
}

static PFNGLMULTITEXCOORD1XVOESPROC
epoxy_glMultiTexCoord1xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 33517 /* glMultiTexCoord1xvOES */);
}

static PFNGLMULTITEXCOORD2BOESPROC
epoxy_glMultiTexCoord2bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 33539 /* glMultiTexCoord2bOES */);
}

static PFNGLMULTITEXCOORD2BVOESPROC
epoxy_glMultiTexCoord2bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 33560 /* glMultiTexCoord2bvOES */);
}

static PFNGLMULTITEXCOORD2DPROC
epoxy_glMultiTexCoord2d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33582 /* "glMultiTexCoord2d" */,
        33600 /* "glMultiTexCoord2dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33582 /* "glMultiTexCoord2d" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2DARBPROC
epoxy_glMultiTexCoord2dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33600 /* "glMultiTexCoord2dARB" */,
        33582 /* "glMultiTexCoord2d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33600 /* "glMultiTexCoord2dARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2DVPROC
epoxy_glMultiTexCoord2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33621 /* "glMultiTexCoord2dv" */,
        33640 /* "glMultiTexCoord2dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33621 /* "glMultiTexCoord2dv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2DVARBPROC
epoxy_glMultiTexCoord2dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33640 /* "glMultiTexCoord2dvARB" */,
        33621 /* "glMultiTexCoord2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33640 /* "glMultiTexCoord2dvARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2FPROC
epoxy_glMultiTexCoord2f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33662 /* "glMultiTexCoord2f" */,
        33680 /* "glMultiTexCoord2fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33662 /* "glMultiTexCoord2f" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2FARBPROC
epoxy_glMultiTexCoord2fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33680 /* "glMultiTexCoord2fARB" */,
        33662 /* "glMultiTexCoord2f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33680 /* "glMultiTexCoord2fARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2FVPROC
epoxy_glMultiTexCoord2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33701 /* "glMultiTexCoord2fv" */,
        33720 /* "glMultiTexCoord2fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33701 /* "glMultiTexCoord2fv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2FVARBPROC
epoxy_glMultiTexCoord2fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33720 /* "glMultiTexCoord2fvARB" */,
        33701 /* "glMultiTexCoord2fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33720 /* "glMultiTexCoord2fvARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2HNVPROC
epoxy_glMultiTexCoord2hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 33742 /* glMultiTexCoord2hNV */);
}

static PFNGLMULTITEXCOORD2HVNVPROC
epoxy_glMultiTexCoord2hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 33762 /* glMultiTexCoord2hvNV */);
}

static PFNGLMULTITEXCOORD2IPROC
epoxy_glMultiTexCoord2i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33783 /* "glMultiTexCoord2i" */,
        33801 /* "glMultiTexCoord2iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33783 /* "glMultiTexCoord2i" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2IARBPROC
epoxy_glMultiTexCoord2iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33801 /* "glMultiTexCoord2iARB" */,
        33783 /* "glMultiTexCoord2i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33801 /* "glMultiTexCoord2iARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2IVPROC
epoxy_glMultiTexCoord2iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33822 /* "glMultiTexCoord2iv" */,
        33841 /* "glMultiTexCoord2ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33822 /* "glMultiTexCoord2iv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2IVARBPROC
epoxy_glMultiTexCoord2ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33841 /* "glMultiTexCoord2ivARB" */,
        33822 /* "glMultiTexCoord2iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33841 /* "glMultiTexCoord2ivARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2SPROC
epoxy_glMultiTexCoord2s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33863 /* "glMultiTexCoord2s" */,
        33881 /* "glMultiTexCoord2sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33863 /* "glMultiTexCoord2s" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2SARBPROC
epoxy_glMultiTexCoord2sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33881 /* "glMultiTexCoord2sARB" */,
        33863 /* "glMultiTexCoord2s" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33881 /* "glMultiTexCoord2sARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2SVPROC
epoxy_glMultiTexCoord2sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33902 /* "glMultiTexCoord2sv" */,
        33921 /* "glMultiTexCoord2svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33902 /* "glMultiTexCoord2sv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2SVARBPROC
epoxy_glMultiTexCoord2svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        33921 /* "glMultiTexCoord2svARB" */,
        33902 /* "glMultiTexCoord2sv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 33921 /* "glMultiTexCoord2svARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD2XOESPROC
epoxy_glMultiTexCoord2xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 33943 /* glMultiTexCoord2xOES */);
}

static PFNGLMULTITEXCOORD2XVOESPROC
epoxy_glMultiTexCoord2xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 33964 /* glMultiTexCoord2xvOES */);
}

static PFNGLMULTITEXCOORD3BOESPROC
epoxy_glMultiTexCoord3bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 33986 /* glMultiTexCoord3bOES */);
}

static PFNGLMULTITEXCOORD3BVOESPROC
epoxy_glMultiTexCoord3bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 34007 /* glMultiTexCoord3bvOES */);
}

static PFNGLMULTITEXCOORD3DPROC
epoxy_glMultiTexCoord3d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34029 /* "glMultiTexCoord3d" */,
        34047 /* "glMultiTexCoord3dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34029 /* "glMultiTexCoord3d" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3DARBPROC
epoxy_glMultiTexCoord3dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34047 /* "glMultiTexCoord3dARB" */,
        34029 /* "glMultiTexCoord3d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34047 /* "glMultiTexCoord3dARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3DVPROC
epoxy_glMultiTexCoord3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34068 /* "glMultiTexCoord3dv" */,
        34087 /* "glMultiTexCoord3dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34068 /* "glMultiTexCoord3dv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3DVARBPROC
epoxy_glMultiTexCoord3dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34087 /* "glMultiTexCoord3dvARB" */,
        34068 /* "glMultiTexCoord3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34087 /* "glMultiTexCoord3dvARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3FPROC
epoxy_glMultiTexCoord3f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34109 /* "glMultiTexCoord3f" */,
        34127 /* "glMultiTexCoord3fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34109 /* "glMultiTexCoord3f" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3FARBPROC
epoxy_glMultiTexCoord3fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34127 /* "glMultiTexCoord3fARB" */,
        34109 /* "glMultiTexCoord3f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34127 /* "glMultiTexCoord3fARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3FVPROC
epoxy_glMultiTexCoord3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34148 /* "glMultiTexCoord3fv" */,
        34167 /* "glMultiTexCoord3fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34148 /* "glMultiTexCoord3fv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3FVARBPROC
epoxy_glMultiTexCoord3fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34167 /* "glMultiTexCoord3fvARB" */,
        34148 /* "glMultiTexCoord3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34167 /* "glMultiTexCoord3fvARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3HNVPROC
epoxy_glMultiTexCoord3hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 34189 /* glMultiTexCoord3hNV */);
}

static PFNGLMULTITEXCOORD3HVNVPROC
epoxy_glMultiTexCoord3hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 34209 /* glMultiTexCoord3hvNV */);
}

static PFNGLMULTITEXCOORD3IPROC
epoxy_glMultiTexCoord3i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34230 /* "glMultiTexCoord3i" */,
        34248 /* "glMultiTexCoord3iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34230 /* "glMultiTexCoord3i" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3IARBPROC
epoxy_glMultiTexCoord3iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34248 /* "glMultiTexCoord3iARB" */,
        34230 /* "glMultiTexCoord3i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34248 /* "glMultiTexCoord3iARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3IVPROC
epoxy_glMultiTexCoord3iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34269 /* "glMultiTexCoord3iv" */,
        34288 /* "glMultiTexCoord3ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34269 /* "glMultiTexCoord3iv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3IVARBPROC
epoxy_glMultiTexCoord3ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34288 /* "glMultiTexCoord3ivARB" */,
        34269 /* "glMultiTexCoord3iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34288 /* "glMultiTexCoord3ivARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3SPROC
epoxy_glMultiTexCoord3s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34310 /* "glMultiTexCoord3s" */,
        34328 /* "glMultiTexCoord3sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34310 /* "glMultiTexCoord3s" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3SARBPROC
epoxy_glMultiTexCoord3sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34328 /* "glMultiTexCoord3sARB" */,
        34310 /* "glMultiTexCoord3s" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34328 /* "glMultiTexCoord3sARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3SVPROC
epoxy_glMultiTexCoord3sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34349 /* "glMultiTexCoord3sv" */,
        34368 /* "glMultiTexCoord3svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34349 /* "glMultiTexCoord3sv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3SVARBPROC
epoxy_glMultiTexCoord3svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34368 /* "glMultiTexCoord3svARB" */,
        34349 /* "glMultiTexCoord3sv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34368 /* "glMultiTexCoord3svARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD3XOESPROC
epoxy_glMultiTexCoord3xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34390 /* glMultiTexCoord3xOES */);
}

static PFNGLMULTITEXCOORD3XVOESPROC
epoxy_glMultiTexCoord3xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34411 /* glMultiTexCoord3xvOES */);
}

static PFNGLMULTITEXCOORD4BOESPROC
epoxy_glMultiTexCoord4bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 34433 /* glMultiTexCoord4bOES */);
}

static PFNGLMULTITEXCOORD4BVOESPROC
epoxy_glMultiTexCoord4bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 34454 /* glMultiTexCoord4bvOES */);
}

static PFNGLMULTITEXCOORD4DPROC
epoxy_glMultiTexCoord4d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34476 /* "glMultiTexCoord4d" */,
        34494 /* "glMultiTexCoord4dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34476 /* "glMultiTexCoord4d" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4DARBPROC
epoxy_glMultiTexCoord4dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34494 /* "glMultiTexCoord4dARB" */,
        34476 /* "glMultiTexCoord4d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34494 /* "glMultiTexCoord4dARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4DVPROC
epoxy_glMultiTexCoord4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34515 /* "glMultiTexCoord4dv" */,
        34534 /* "glMultiTexCoord4dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34515 /* "glMultiTexCoord4dv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4DVARBPROC
epoxy_glMultiTexCoord4dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34534 /* "glMultiTexCoord4dvARB" */,
        34515 /* "glMultiTexCoord4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34534 /* "glMultiTexCoord4dvARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4FPROC
epoxy_glMultiTexCoord4f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34556 /* "glMultiTexCoord4f" */,
        34556 /* "glMultiTexCoord4f" */,
        34574 /* "glMultiTexCoord4fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34556 /* "glMultiTexCoord4f" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4FARBPROC
epoxy_glMultiTexCoord4fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34574 /* "glMultiTexCoord4fARB" */,
        34556 /* "glMultiTexCoord4f" */,
        34556 /* "glMultiTexCoord4f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34574 /* "glMultiTexCoord4fARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4FVPROC
epoxy_glMultiTexCoord4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34595 /* "glMultiTexCoord4fv" */,
        34614 /* "glMultiTexCoord4fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34595 /* "glMultiTexCoord4fv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4FVARBPROC
epoxy_glMultiTexCoord4fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34614 /* "glMultiTexCoord4fvARB" */,
        34595 /* "glMultiTexCoord4fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34614 /* "glMultiTexCoord4fvARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4HNVPROC
epoxy_glMultiTexCoord4hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 34636 /* glMultiTexCoord4hNV */);
}

static PFNGLMULTITEXCOORD4HVNVPROC
epoxy_glMultiTexCoord4hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 34656 /* glMultiTexCoord4hvNV */);
}

static PFNGLMULTITEXCOORD4IPROC
epoxy_glMultiTexCoord4i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34677 /* "glMultiTexCoord4i" */,
        34695 /* "glMultiTexCoord4iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34677 /* "glMultiTexCoord4i" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4IARBPROC
epoxy_glMultiTexCoord4iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34695 /* "glMultiTexCoord4iARB" */,
        34677 /* "glMultiTexCoord4i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34695 /* "glMultiTexCoord4iARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4IVPROC
epoxy_glMultiTexCoord4iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34716 /* "glMultiTexCoord4iv" */,
        34735 /* "glMultiTexCoord4ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34716 /* "glMultiTexCoord4iv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4IVARBPROC
epoxy_glMultiTexCoord4ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34735 /* "glMultiTexCoord4ivARB" */,
        34716 /* "glMultiTexCoord4iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34735 /* "glMultiTexCoord4ivARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4SPROC
epoxy_glMultiTexCoord4s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34757 /* "glMultiTexCoord4s" */,
        34775 /* "glMultiTexCoord4sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34757 /* "glMultiTexCoord4s" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4SARBPROC
epoxy_glMultiTexCoord4sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34775 /* "glMultiTexCoord4sARB" */,
        34757 /* "glMultiTexCoord4s" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34775 /* "glMultiTexCoord4sARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4SVPROC
epoxy_glMultiTexCoord4sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        GL_extension_GL_ARB_multitexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34796 /* "glMultiTexCoord4sv" */,
        34815 /* "glMultiTexCoord4svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34796 /* "glMultiTexCoord4sv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4SVARBPROC
epoxy_glMultiTexCoord4svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multitexture,
        Desktop_OpenGL_1_3,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34815 /* "glMultiTexCoord4svARB" */,
        34796 /* "glMultiTexCoord4sv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34815 /* "glMultiTexCoord4svARB" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORD4XPROC
epoxy_glMultiTexCoord4x_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 34837 /* glMultiTexCoord4x */);
}

static PFNGLMULTITEXCOORD4XOESPROC
epoxy_glMultiTexCoord4xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34855 /* glMultiTexCoord4xOES */);
}

static PFNGLMULTITEXCOORD4XVOESPROC
epoxy_glMultiTexCoord4xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34876 /* glMultiTexCoord4xvOES */);
}

static PFNGLMULTITEXCOORDP1UIPROC
epoxy_glMultiTexCoordP1ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34898 /* "glMultiTexCoordP1ui" */,
        34898 /* "glMultiTexCoordP1ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34898 /* "glMultiTexCoordP1ui" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORDP1UIVPROC
epoxy_glMultiTexCoordP1uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34918 /* "glMultiTexCoordP1uiv" */,
        34918 /* "glMultiTexCoordP1uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34918 /* "glMultiTexCoordP1uiv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORDP2UIPROC
epoxy_glMultiTexCoordP2ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34939 /* "glMultiTexCoordP2ui" */,
        34939 /* "glMultiTexCoordP2ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34939 /* "glMultiTexCoordP2ui" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORDP2UIVPROC
epoxy_glMultiTexCoordP2uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34959 /* "glMultiTexCoordP2uiv" */,
        34959 /* "glMultiTexCoordP2uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34959 /* "glMultiTexCoordP2uiv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORDP3UIPROC
epoxy_glMultiTexCoordP3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        34980 /* "glMultiTexCoordP3ui" */,
        34980 /* "glMultiTexCoordP3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 34980 /* "glMultiTexCoordP3ui" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORDP3UIVPROC
epoxy_glMultiTexCoordP3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35000 /* "glMultiTexCoordP3uiv" */,
        35000 /* "glMultiTexCoordP3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35000 /* "glMultiTexCoordP3uiv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORDP4UIPROC
epoxy_glMultiTexCoordP4ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35021 /* "glMultiTexCoordP4ui" */,
        35021 /* "glMultiTexCoordP4ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35021 /* "glMultiTexCoordP4ui" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORDP4UIVPROC
epoxy_glMultiTexCoordP4uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35041 /* "glMultiTexCoordP4uiv" */,
        35041 /* "glMultiTexCoordP4uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35041 /* "glMultiTexCoordP4uiv" */,
                                providers, entrypoints);
}

static PFNGLMULTITEXCOORDPOINTEREXTPROC
epoxy_glMultiTexCoordPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35062 /* glMultiTexCoordPointerEXT */);
}

static PFNGLMULTITEXENVFEXTPROC
epoxy_glMultiTexEnvfEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35088 /* glMultiTexEnvfEXT */);
}

static PFNGLMULTITEXENVFVEXTPROC
epoxy_glMultiTexEnvfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35106 /* glMultiTexEnvfvEXT */);
}

static PFNGLMULTITEXENVIEXTPROC
epoxy_glMultiTexEnviEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35125 /* glMultiTexEnviEXT */);
}

static PFNGLMULTITEXENVIVEXTPROC
epoxy_glMultiTexEnvivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35143 /* glMultiTexEnvivEXT */);
}

static PFNGLMULTITEXGENDEXTPROC
epoxy_glMultiTexGendEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35162 /* glMultiTexGendEXT */);
}

static PFNGLMULTITEXGENDVEXTPROC
epoxy_glMultiTexGendvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35180 /* glMultiTexGendvEXT */);
}

static PFNGLMULTITEXGENFEXTPROC
epoxy_glMultiTexGenfEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35199 /* glMultiTexGenfEXT */);
}

static PFNGLMULTITEXGENFVEXTPROC
epoxy_glMultiTexGenfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35217 /* glMultiTexGenfvEXT */);
}

static PFNGLMULTITEXGENIEXTPROC
epoxy_glMultiTexGeniEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35236 /* glMultiTexGeniEXT */);
}

static PFNGLMULTITEXGENIVEXTPROC
epoxy_glMultiTexGenivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35254 /* glMultiTexGenivEXT */);
}

static PFNGLMULTITEXIMAGE1DEXTPROC
epoxy_glMultiTexImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35273 /* glMultiTexImage1DEXT */);
}

static PFNGLMULTITEXIMAGE2DEXTPROC
epoxy_glMultiTexImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35294 /* glMultiTexImage2DEXT */);
}

static PFNGLMULTITEXIMAGE3DEXTPROC
epoxy_glMultiTexImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35315 /* glMultiTexImage3DEXT */);
}

static PFNGLMULTITEXPARAMETERIIVEXTPROC
epoxy_glMultiTexParameterIivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35336 /* glMultiTexParameterIivEXT */);
}

static PFNGLMULTITEXPARAMETERIUIVEXTPROC
epoxy_glMultiTexParameterIuivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35362 /* glMultiTexParameterIuivEXT */);
}

static PFNGLMULTITEXPARAMETERFEXTPROC
epoxy_glMultiTexParameterfEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35389 /* glMultiTexParameterfEXT */);
}

static PFNGLMULTITEXPARAMETERFVEXTPROC
epoxy_glMultiTexParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35413 /* glMultiTexParameterfvEXT */);
}

static PFNGLMULTITEXPARAMETERIEXTPROC
epoxy_glMultiTexParameteriEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35438 /* glMultiTexParameteriEXT */);
}

static PFNGLMULTITEXPARAMETERIVEXTPROC
epoxy_glMultiTexParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35462 /* glMultiTexParameterivEXT */);
}

static PFNGLMULTITEXRENDERBUFFEREXTPROC
epoxy_glMultiTexRenderbufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35487 /* glMultiTexRenderbufferEXT */);
}

static PFNGLMULTITEXSUBIMAGE1DEXTPROC
epoxy_glMultiTexSubImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35513 /* glMultiTexSubImage1DEXT */);
}

static PFNGLMULTITEXSUBIMAGE2DEXTPROC
epoxy_glMultiTexSubImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35537 /* glMultiTexSubImage2DEXT */);
}

static PFNGLMULTITEXSUBIMAGE3DEXTPROC
epoxy_glMultiTexSubImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35561 /* glMultiTexSubImage3DEXT */);
}

static PFNGLNAMEDBUFFERDATAPROC
epoxy_glNamedBufferData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35585 /* "glNamedBufferData" */,
        35585 /* "glNamedBufferData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35585 /* "glNamedBufferData" */,
                                providers, entrypoints);
}

static PFNGLNAMEDBUFFERDATAEXTPROC
epoxy_glNamedBufferDataEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35603 /* glNamedBufferDataEXT */);
}

static PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC
epoxy_glNamedBufferPageCommitmentARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_sparse_buffer, 35624 /* glNamedBufferPageCommitmentARB */);
}

static PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC
epoxy_glNamedBufferPageCommitmentEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_sparse_buffer, 35655 /* glNamedBufferPageCommitmentEXT */);
}

static PFNGLNAMEDBUFFERSTORAGEPROC
epoxy_glNamedBufferStorage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        GL_extension_GL_EXT_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35686 /* "glNamedBufferStorage" */,
        35686 /* "glNamedBufferStorage" */,
        35707 /* "glNamedBufferStorageEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35686 /* "glNamedBufferStorage" */,
                                providers, entrypoints);
}

static PFNGLNAMEDBUFFERSTORAGEEXTPROC
epoxy_glNamedBufferStorageEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35707 /* "glNamedBufferStorageEXT" */,
        35686 /* "glNamedBufferStorage" */,
        35686 /* "glNamedBufferStorage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35707 /* "glNamedBufferStorageEXT" */,
                                providers, entrypoints);
}

static PFNGLNAMEDBUFFERSUBDATAPROC
epoxy_glNamedBufferSubData_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        GL_extension_GL_EXT_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35731 /* "glNamedBufferSubData" */,
        35731 /* "glNamedBufferSubData" */,
        35752 /* "glNamedBufferSubDataEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35731 /* "glNamedBufferSubData" */,
                                providers, entrypoints);
}

static PFNGLNAMEDBUFFERSUBDATAEXTPROC
epoxy_glNamedBufferSubDataEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35752 /* "glNamedBufferSubDataEXT" */,
        35731 /* "glNamedBufferSubData" */,
        35731 /* "glNamedBufferSubData" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35752 /* "glNamedBufferSubDataEXT" */,
                                providers, entrypoints);
}

static PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC
epoxy_glNamedCopyBufferSubDataEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35776 /* glNamedCopyBufferSubDataEXT */);
}

static PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC
epoxy_glNamedFramebufferDrawBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35804 /* "glNamedFramebufferDrawBuffer" */,
        35804 /* "glNamedFramebufferDrawBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35804 /* "glNamedFramebufferDrawBuffer" */,
                                providers, entrypoints);
}

static PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC
epoxy_glNamedFramebufferDrawBuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35833 /* "glNamedFramebufferDrawBuffers" */,
        35833 /* "glNamedFramebufferDrawBuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35833 /* "glNamedFramebufferDrawBuffers" */,
                                providers, entrypoints);
}

static PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC
epoxy_glNamedFramebufferParameteri_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35863 /* "glNamedFramebufferParameteri" */,
        35863 /* "glNamedFramebufferParameteri" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35863 /* "glNamedFramebufferParameteri" */,
                                providers, entrypoints);
}

static PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC
epoxy_glNamedFramebufferParameteriEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35892 /* glNamedFramebufferParameteriEXT */);
}

static PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC
epoxy_glNamedFramebufferReadBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35924 /* "glNamedFramebufferReadBuffer" */,
        35924 /* "glNamedFramebufferReadBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35924 /* "glNamedFramebufferReadBuffer" */,
                                providers, entrypoints);
}

static PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC
epoxy_glNamedFramebufferRenderbuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        35953 /* "glNamedFramebufferRenderbuffer" */,
        35953 /* "glNamedFramebufferRenderbuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 35953 /* "glNamedFramebufferRenderbuffer" */,
                                providers, entrypoints);
}

static PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
epoxy_glNamedFramebufferRenderbufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 35984 /* glNamedFramebufferRenderbufferEXT */);
}

static PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
epoxy_glNamedFramebufferSampleLocationsfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_sample_locations, 36018 /* glNamedFramebufferSampleLocationsfvNV */);
}

static PFNGLNAMEDFRAMEBUFFERTEXTUREPROC
epoxy_glNamedFramebufferTexture_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        36056 /* "glNamedFramebufferTexture" */,
        36056 /* "glNamedFramebufferTexture" */,
    };
    return gl_provider_resolver(entrypoint_strings + 36056 /* "glNamedFramebufferTexture" */,
                                providers, entrypoints);
}

static PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
epoxy_glNamedFramebufferTexture1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36082 /* glNamedFramebufferTexture1DEXT */);
}

static PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
epoxy_glNamedFramebufferTexture2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36113 /* glNamedFramebufferTexture2DEXT */);
}

static PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
epoxy_glNamedFramebufferTexture3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36144 /* glNamedFramebufferTexture3DEXT */);
}

static PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
epoxy_glNamedFramebufferTextureEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36175 /* glNamedFramebufferTextureEXT */);
}

static PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
epoxy_glNamedFramebufferTextureFaceEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36204 /* glNamedFramebufferTextureFaceEXT */);
}

static PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC
epoxy_glNamedFramebufferTextureLayer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        36237 /* "glNamedFramebufferTextureLayer" */,
        36237 /* "glNamedFramebufferTextureLayer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 36237 /* "glNamedFramebufferTextureLayer" */,
                                providers, entrypoints);
}

static PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
epoxy_glNamedFramebufferTextureLayerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36268 /* glNamedFramebufferTextureLayerEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
epoxy_glNamedProgramLocalParameter4dEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36302 /* glNamedProgramLocalParameter4dEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
epoxy_glNamedProgramLocalParameter4dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36336 /* glNamedProgramLocalParameter4dvEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
epoxy_glNamedProgramLocalParameter4fEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36371 /* glNamedProgramLocalParameter4fEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
epoxy_glNamedProgramLocalParameter4fvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36405 /* glNamedProgramLocalParameter4fvEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
epoxy_glNamedProgramLocalParameterI4iEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36440 /* glNamedProgramLocalParameterI4iEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
epoxy_glNamedProgramLocalParameterI4ivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36475 /* glNamedProgramLocalParameterI4ivEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
epoxy_glNamedProgramLocalParameterI4uiEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36511 /* glNamedProgramLocalParameterI4uiEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
epoxy_glNamedProgramLocalParameterI4uivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36547 /* glNamedProgramLocalParameterI4uivEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
epoxy_glNamedProgramLocalParameters4fvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36584 /* glNamedProgramLocalParameters4fvEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
epoxy_glNamedProgramLocalParametersI4ivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36620 /* glNamedProgramLocalParametersI4ivEXT */);
}

static PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
epoxy_glNamedProgramLocalParametersI4uivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36657 /* glNamedProgramLocalParametersI4uivEXT */);
}

static PFNGLNAMEDPROGRAMSTRINGEXTPROC
epoxy_glNamedProgramStringEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36695 /* glNamedProgramStringEXT */);
}

static PFNGLNAMEDRENDERBUFFERSTORAGEPROC
epoxy_glNamedRenderbufferStorage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        36719 /* "glNamedRenderbufferStorage" */,
        36719 /* "glNamedRenderbufferStorage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 36719 /* "glNamedRenderbufferStorage" */,
                                providers, entrypoints);
}

static PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
epoxy_glNamedRenderbufferStorageEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36746 /* glNamedRenderbufferStorageEXT */);
}

static PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
epoxy_glNamedRenderbufferStorageMultisample_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        36776 /* "glNamedRenderbufferStorageMultisample" */,
        36776 /* "glNamedRenderbufferStorageMultisample" */,
    };
    return gl_provider_resolver(entrypoint_strings + 36776 /* "glNamedRenderbufferStorageMultisample" */,
                                providers, entrypoints);
}

static PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
epoxy_glNamedRenderbufferStorageMultisampleCoverageEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36814 /* glNamedRenderbufferStorageMultisampleCoverageEXT */);
}

static PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
epoxy_glNamedRenderbufferStorageMultisampleEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36863 /* glNamedRenderbufferStorageMultisampleEXT */);
}

static PFNGLNAMEDSTRINGARBPROC
epoxy_glNamedStringARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 36904 /* glNamedStringARB */);
}

static PFNGLNEWLISTPROC
epoxy_glNewList_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 36921 /* glNewList */);
}

static PFNGLNEWOBJECTBUFFERATIPROC
epoxy_glNewObjectBufferATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 36931 /* glNewObjectBufferATI */);
}

static PFNGLNORMAL3BPROC
epoxy_glNormal3b_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 36952 /* glNormal3b */);
}

static PFNGLNORMAL3BVPROC
epoxy_glNormal3bv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 36963 /* glNormal3bv */);
}

static PFNGLNORMAL3DPROC
epoxy_glNormal3d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 36975 /* glNormal3d */);
}

static PFNGLNORMAL3DVPROC
epoxy_glNormal3dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 36986 /* glNormal3dv */);
}

static PFNGLNORMAL3FPROC
epoxy_glNormal3f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        36998 /* "glNormal3f" */,
        36998 /* "glNormal3f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 36998 /* "glNormal3f" */,
                                providers, entrypoints);
}

static PFNGLNORMAL3FVERTEX3FSUNPROC
epoxy_glNormal3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 37009 /* glNormal3fVertex3fSUN */);
}

static PFNGLNORMAL3FVERTEX3FVSUNPROC
epoxy_glNormal3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 37031 /* glNormal3fVertex3fvSUN */);
}

static PFNGLNORMAL3FVPROC
epoxy_glNormal3fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 37054 /* glNormal3fv */);
}

static PFNGLNORMAL3HNVPROC
epoxy_glNormal3hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 37066 /* glNormal3hNV */);
}

static PFNGLNORMAL3HVNVPROC
epoxy_glNormal3hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 37079 /* glNormal3hvNV */);
}

static PFNGLNORMAL3IPROC
epoxy_glNormal3i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 37093 /* glNormal3i */);
}

static PFNGLNORMAL3IVPROC
epoxy_glNormal3iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 37104 /* glNormal3iv */);
}

static PFNGLNORMAL3SPROC
epoxy_glNormal3s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 37116 /* glNormal3s */);
}

static PFNGLNORMAL3SVPROC
epoxy_glNormal3sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 37127 /* glNormal3sv */);
}

static PFNGLNORMAL3XPROC
epoxy_glNormal3x_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 37139 /* glNormal3x */);
}

static PFNGLNORMAL3XOESPROC
epoxy_glNormal3xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 37150 /* glNormal3xOES */);
}

static PFNGLNORMAL3XVOESPROC
epoxy_glNormal3xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 37164 /* glNormal3xvOES */);
}

static PFNGLNORMALFORMATNVPROC
epoxy_glNormalFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 37179 /* glNormalFormatNV */);
}

static PFNGLNORMALP3UIPROC
epoxy_glNormalP3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37196 /* "glNormalP3ui" */,
        37196 /* "glNormalP3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37196 /* "glNormalP3ui" */,
                                providers, entrypoints);
}

static PFNGLNORMALP3UIVPROC
epoxy_glNormalP3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37209 /* "glNormalP3uiv" */,
        37209 /* "glNormalP3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37209 /* "glNormalP3uiv" */,
                                providers, entrypoints);
}

static PFNGLNORMALPOINTERPROC
epoxy_glNormalPointer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37223 /* "glNormalPointer" */,
        37223 /* "glNormalPointer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37223 /* "glNormalPointer" */,
                                providers, entrypoints);
}

static PFNGLNORMALPOINTEREXTPROC
epoxy_glNormalPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 37239 /* glNormalPointerEXT */);
}

static PFNGLNORMALPOINTERLISTIBMPROC
epoxy_glNormalPointerListIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 37258 /* glNormalPointerListIBM */);
}

static PFNGLNORMALPOINTERVINTELPROC
epoxy_glNormalPointervINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_parallel_arrays, 37281 /* glNormalPointervINTEL */);
}

static PFNGLNORMALSTREAM3BATIPROC
epoxy_glNormalStream3bATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37303 /* glNormalStream3bATI */);
}

static PFNGLNORMALSTREAM3BVATIPROC
epoxy_glNormalStream3bvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37323 /* glNormalStream3bvATI */);
}

static PFNGLNORMALSTREAM3DATIPROC
epoxy_glNormalStream3dATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37344 /* glNormalStream3dATI */);
}

static PFNGLNORMALSTREAM3DVATIPROC
epoxy_glNormalStream3dvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37364 /* glNormalStream3dvATI */);
}

static PFNGLNORMALSTREAM3FATIPROC
epoxy_glNormalStream3fATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37385 /* glNormalStream3fATI */);
}

static PFNGLNORMALSTREAM3FVATIPROC
epoxy_glNormalStream3fvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37405 /* glNormalStream3fvATI */);
}

static PFNGLNORMALSTREAM3IATIPROC
epoxy_glNormalStream3iATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37426 /* glNormalStream3iATI */);
}

static PFNGLNORMALSTREAM3IVATIPROC
epoxy_glNormalStream3ivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37446 /* glNormalStream3ivATI */);
}

static PFNGLNORMALSTREAM3SATIPROC
epoxy_glNormalStream3sATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37467 /* glNormalStream3sATI */);
}

static PFNGLNORMALSTREAM3SVATIPROC
epoxy_glNormalStream3svATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 37487 /* glNormalStream3svATI */);
}

static PFNGLOBJECTLABELPROC
epoxy_glObjectLabel_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37508 /* "glObjectLabel" */,
        37508 /* "glObjectLabel" */,
        37522 /* "glObjectLabelKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37508 /* "glObjectLabel" */,
                                providers, entrypoints);
}

static PFNGLOBJECTLABELKHRPROC
epoxy_glObjectLabelKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37522 /* "glObjectLabelKHR" */,
        37508 /* "glObjectLabel" */,
        37508 /* "glObjectLabel" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37522 /* "glObjectLabelKHR" */,
                                providers, entrypoints);
}

static PFNGLOBJECTPTRLABELPROC
epoxy_glObjectPtrLabel_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37539 /* "glObjectPtrLabel" */,
        37539 /* "glObjectPtrLabel" */,
        37556 /* "glObjectPtrLabelKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37539 /* "glObjectPtrLabel" */,
                                providers, entrypoints);
}

static PFNGLOBJECTPTRLABELKHRPROC
epoxy_glObjectPtrLabelKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37556 /* "glObjectPtrLabelKHR" */,
        37539 /* "glObjectPtrLabel" */,
        37539 /* "glObjectPtrLabel" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37556 /* "glObjectPtrLabelKHR" */,
                                providers, entrypoints);
}

static PFNGLOBJECTPURGEABLEAPPLEPROC
epoxy_glObjectPurgeableAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_object_purgeable, 37576 /* glObjectPurgeableAPPLE */);
}

static PFNGLOBJECTUNPURGEABLEAPPLEPROC
epoxy_glObjectUnpurgeableAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_object_purgeable, 37599 /* glObjectUnpurgeableAPPLE */);
}

static PFNGLORTHOPROC
epoxy_glOrtho_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 37624 /* glOrtho */);
}

static PFNGLORTHOFPROC
epoxy_glOrthof_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 37632 /* glOrthof */);
}

static PFNGLORTHOFOESPROC
epoxy_glOrthofOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_single_precision, 37641 /* glOrthofOES */);
}

static PFNGLORTHOXPROC
epoxy_glOrthox_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 37653 /* glOrthox */);
}

static PFNGLORTHOXOESPROC
epoxy_glOrthoxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 37662 /* glOrthoxOES */);
}

static PFNGLPNTRIANGLESFATIPROC
epoxy_glPNTrianglesfATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_pn_triangles, 37674 /* glPNTrianglesfATI */);
}

static PFNGLPNTRIANGLESIATIPROC
epoxy_glPNTrianglesiATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_pn_triangles, 37692 /* glPNTrianglesiATI */);
}

static PFNGLPASSTEXCOORDATIPROC
epoxy_glPassTexCoordATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 37710 /* glPassTexCoordATI */);
}

static PFNGLPASSTHROUGHPROC
epoxy_glPassThrough_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 37728 /* glPassThrough */);
}

static PFNGLPASSTHROUGHXOESPROC
epoxy_glPassThroughxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 37742 /* glPassThroughxOES */);
}

static PFNGLPATCHPARAMETERFVPROC
epoxy_glPatchParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_tessellation_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37760 /* "glPatchParameterfv" */,
        37760 /* "glPatchParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37760 /* "glPatchParameterfv" */,
                                providers, entrypoints);
}

static PFNGLPATCHPARAMETERIPROC
epoxy_glPatchParameteri_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_tessellation_shader,
        GL_extension_GL_EXT_tessellation_shader,
        GL_extension_GL_OES_tessellation_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37779 /* "glPatchParameteri" */,
        37779 /* "glPatchParameteri" */,
        37797 /* "glPatchParameteriEXT" */,
        37818 /* "glPatchParameteriOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37779 /* "glPatchParameteri" */,
                                providers, entrypoints);
}

static PFNGLPATCHPARAMETERIEXTPROC
epoxy_glPatchParameteriEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_tessellation_shader,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_tessellation_shader,
        GL_extension_GL_OES_tessellation_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37797 /* "glPatchParameteriEXT" */,
        37779 /* "glPatchParameteri" */,
        37779 /* "glPatchParameteri" */,
        37818 /* "glPatchParameteriOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37797 /* "glPatchParameteriEXT" */,
                                providers, entrypoints);
}

static PFNGLPATCHPARAMETERIOESPROC
epoxy_glPatchParameteriOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_tessellation_shader,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_tessellation_shader,
        GL_extension_GL_EXT_tessellation_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        37818 /* "glPatchParameteriOES" */,
        37779 /* "glPatchParameteri" */,
        37779 /* "glPatchParameteri" */,
        37797 /* "glPatchParameteriEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 37818 /* "glPatchParameteriOES" */,
                                providers, entrypoints);
}

static PFNGLPATHCOLORGENNVPROC
epoxy_glPathColorGenNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 37839 /* glPathColorGenNV */);
}

static PFNGLPATHCOMMANDSNVPROC
epoxy_glPathCommandsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 37856 /* glPathCommandsNV */);
}

static PFNGLPATHCOORDSNVPROC
epoxy_glPathCoordsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 37873 /* glPathCoordsNV */);
}

static PFNGLPATHCOVERDEPTHFUNCNVPROC
epoxy_glPathCoverDepthFuncNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 37888 /* glPathCoverDepthFuncNV */);
}

static PFNGLPATHDASHARRAYNVPROC
epoxy_glPathDashArrayNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 37911 /* glPathDashArrayNV */);
}

static PFNGLPATHFOGGENNVPROC
epoxy_glPathFogGenNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 37929 /* glPathFogGenNV */);
}

static PFNGLPATHGLYPHINDEXARRAYNVPROC
epoxy_glPathGlyphIndexArrayNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 37944 /* glPathGlyphIndexArrayNV */);
}

static PFNGLPATHGLYPHINDEXRANGENVPROC
epoxy_glPathGlyphIndexRangeNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 37968 /* glPathGlyphIndexRangeNV */);
}

static PFNGLPATHGLYPHRANGENVPROC
epoxy_glPathGlyphRangeNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 37992 /* glPathGlyphRangeNV */);
}

static PFNGLPATHGLYPHSNVPROC
epoxy_glPathGlyphsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38011 /* glPathGlyphsNV */);
}

static PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC
epoxy_glPathMemoryGlyphIndexArrayNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38026 /* glPathMemoryGlyphIndexArrayNV */);
}

static PFNGLPATHPARAMETERFNVPROC
epoxy_glPathParameterfNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38056 /* glPathParameterfNV */);
}

static PFNGLPATHPARAMETERFVNVPROC
epoxy_glPathParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38075 /* glPathParameterfvNV */);
}

static PFNGLPATHPARAMETERINVPROC
epoxy_glPathParameteriNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38095 /* glPathParameteriNV */);
}

static PFNGLPATHPARAMETERIVNVPROC
epoxy_glPathParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38114 /* glPathParameterivNV */);
}

static PFNGLPATHSTENCILDEPTHOFFSETNVPROC
epoxy_glPathStencilDepthOffsetNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38134 /* glPathStencilDepthOffsetNV */);
}

static PFNGLPATHSTENCILFUNCNVPROC
epoxy_glPathStencilFuncNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38161 /* glPathStencilFuncNV */);
}

static PFNGLPATHSTRINGNVPROC
epoxy_glPathStringNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38181 /* glPathStringNV */);
}

static PFNGLPATHSUBCOMMANDSNVPROC
epoxy_glPathSubCommandsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38196 /* glPathSubCommandsNV */);
}

static PFNGLPATHSUBCOORDSNVPROC
epoxy_glPathSubCoordsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38216 /* glPathSubCoordsNV */);
}

static PFNGLPATHTEXGENNVPROC
epoxy_glPathTexGenNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38234 /* glPathTexGenNV */);
}

static PFNGLPAUSETRANSFORMFEEDBACKPROC
epoxy_glPauseTransformFeedback_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_transform_feedback2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38249 /* "glPauseTransformFeedback" */,
        38249 /* "glPauseTransformFeedback" */,
        38249 /* "glPauseTransformFeedback" */,
        38274 /* "glPauseTransformFeedbackNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38249 /* "glPauseTransformFeedback" */,
                                providers, entrypoints);
}

static PFNGLPAUSETRANSFORMFEEDBACKNVPROC
epoxy_glPauseTransformFeedbackNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback2,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38274 /* "glPauseTransformFeedbackNV" */,
        38249 /* "glPauseTransformFeedback" */,
        38249 /* "glPauseTransformFeedback" */,
        38249 /* "glPauseTransformFeedback" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38274 /* "glPauseTransformFeedbackNV" */,
                                providers, entrypoints);
}

static PFNGLPIXELDATARANGENVPROC
epoxy_glPixelDataRangeNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_pixel_data_range, 38301 /* glPixelDataRangeNV */);
}

static PFNGLPIXELMAPFVPROC
epoxy_glPixelMapfv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 38320 /* glPixelMapfv */);
}

static PFNGLPIXELMAPUIVPROC
epoxy_glPixelMapuiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 38333 /* glPixelMapuiv */);
}

static PFNGLPIXELMAPUSVPROC
epoxy_glPixelMapusv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 38347 /* glPixelMapusv */);
}

static PFNGLPIXELMAPXPROC
epoxy_glPixelMapx_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 38361 /* glPixelMapx */);
}

static PFNGLPIXELSTOREFPROC
epoxy_glPixelStoref_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 38373 /* glPixelStoref */);
}

static PFNGLPIXELSTOREIPROC
epoxy_glPixelStorei_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38387 /* "glPixelStorei" */,
        38387 /* "glPixelStorei" */,
        38387 /* "glPixelStorei" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38387 /* "glPixelStorei" */,
                                providers, entrypoints);
}

static PFNGLPIXELSTOREXPROC
epoxy_glPixelStorex_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 38401 /* glPixelStorex */);
}

static PFNGLPIXELTEXGENPARAMETERFSGISPROC
epoxy_glPixelTexGenParameterfSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 38415 /* glPixelTexGenParameterfSGIS */);
}

static PFNGLPIXELTEXGENPARAMETERFVSGISPROC
epoxy_glPixelTexGenParameterfvSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 38443 /* glPixelTexGenParameterfvSGIS */);
}

static PFNGLPIXELTEXGENPARAMETERISGISPROC
epoxy_glPixelTexGenParameteriSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 38472 /* glPixelTexGenParameteriSGIS */);
}

static PFNGLPIXELTEXGENPARAMETERIVSGISPROC
epoxy_glPixelTexGenParameterivSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 38500 /* glPixelTexGenParameterivSGIS */);
}

static PFNGLPIXELTEXGENSGIXPROC
epoxy_glPixelTexGenSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_pixel_texture, 38529 /* glPixelTexGenSGIX */);
}

static PFNGLPIXELTRANSFERFPROC
epoxy_glPixelTransferf_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 38547 /* glPixelTransferf */);
}

static PFNGLPIXELTRANSFERIPROC
epoxy_glPixelTransferi_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 38564 /* glPixelTransferi */);
}

static PFNGLPIXELTRANSFERXOESPROC
epoxy_glPixelTransferxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 38581 /* glPixelTransferxOES */);
}

static PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
epoxy_glPixelTransformParameterfEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 38601 /* glPixelTransformParameterfEXT */);
}

static PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
epoxy_glPixelTransformParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 38631 /* glPixelTransformParameterfvEXT */);
}

static PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
epoxy_glPixelTransformParameteriEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 38662 /* glPixelTransformParameteriEXT */);
}

static PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
epoxy_glPixelTransformParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 38692 /* glPixelTransformParameterivEXT */);
}

static PFNGLPIXELZOOMPROC
epoxy_glPixelZoom_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 38723 /* glPixelZoom */);
}

static PFNGLPIXELZOOMXOESPROC
epoxy_glPixelZoomxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 38735 /* glPixelZoomxOES */);
}

static PFNGLPOINTALONGPATHNVPROC
epoxy_glPointAlongPathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 38751 /* glPointAlongPathNV */);
}

static PFNGLPOINTPARAMETERFPROC
epoxy_glPointParameterf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        OpenGL_ES_1_0,
        GL_extension_GL_ARB_point_parameters,
        GL_extension_GL_EXT_point_parameters,
        GL_extension_GL_SGIS_point_parameters,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38770 /* "glPointParameterf" */,
        38770 /* "glPointParameterf" */,
        38788 /* "glPointParameterfARB" */,
        38809 /* "glPointParameterfEXT" */,
        38830 /* "glPointParameterfSGIS" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38770 /* "glPointParameterf" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERFARBPROC
epoxy_glPointParameterfARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_point_parameters,
        Desktop_OpenGL_1_4,
        OpenGL_ES_1_0,
        GL_extension_GL_EXT_point_parameters,
        GL_extension_GL_SGIS_point_parameters,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38788 /* "glPointParameterfARB" */,
        38770 /* "glPointParameterf" */,
        38770 /* "glPointParameterf" */,
        38809 /* "glPointParameterfEXT" */,
        38830 /* "glPointParameterfSGIS" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38788 /* "glPointParameterfARB" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERFEXTPROC
epoxy_glPointParameterfEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_point_parameters,
        Desktop_OpenGL_1_4,
        OpenGL_ES_1_0,
        GL_extension_GL_ARB_point_parameters,
        GL_extension_GL_SGIS_point_parameters,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38809 /* "glPointParameterfEXT" */,
        38770 /* "glPointParameterf" */,
        38770 /* "glPointParameterf" */,
        38788 /* "glPointParameterfARB" */,
        38830 /* "glPointParameterfSGIS" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38809 /* "glPointParameterfEXT" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERFSGISPROC
epoxy_glPointParameterfSGIS_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_SGIS_point_parameters,
        Desktop_OpenGL_1_4,
        OpenGL_ES_1_0,
        GL_extension_GL_ARB_point_parameters,
        GL_extension_GL_EXT_point_parameters,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38830 /* "glPointParameterfSGIS" */,
        38770 /* "glPointParameterf" */,
        38770 /* "glPointParameterf" */,
        38788 /* "glPointParameterfARB" */,
        38809 /* "glPointParameterfEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38830 /* "glPointParameterfSGIS" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERFVPROC
epoxy_glPointParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        OpenGL_ES_1_0,
        GL_extension_GL_ARB_point_parameters,
        GL_extension_GL_EXT_point_parameters,
        GL_extension_GL_SGIS_point_parameters,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38852 /* "glPointParameterfv" */,
        38852 /* "glPointParameterfv" */,
        38871 /* "glPointParameterfvARB" */,
        38893 /* "glPointParameterfvEXT" */,
        38915 /* "glPointParameterfvSGIS" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38852 /* "glPointParameterfv" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERFVARBPROC
epoxy_glPointParameterfvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_point_parameters,
        Desktop_OpenGL_1_4,
        OpenGL_ES_1_0,
        GL_extension_GL_EXT_point_parameters,
        GL_extension_GL_SGIS_point_parameters,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38871 /* "glPointParameterfvARB" */,
        38852 /* "glPointParameterfv" */,
        38852 /* "glPointParameterfv" */,
        38893 /* "glPointParameterfvEXT" */,
        38915 /* "glPointParameterfvSGIS" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38871 /* "glPointParameterfvARB" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERFVEXTPROC
epoxy_glPointParameterfvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_point_parameters,
        Desktop_OpenGL_1_4,
        OpenGL_ES_1_0,
        GL_extension_GL_ARB_point_parameters,
        GL_extension_GL_SGIS_point_parameters,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38893 /* "glPointParameterfvEXT" */,
        38852 /* "glPointParameterfv" */,
        38852 /* "glPointParameterfv" */,
        38871 /* "glPointParameterfvARB" */,
        38915 /* "glPointParameterfvSGIS" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38893 /* "glPointParameterfvEXT" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERFVSGISPROC
epoxy_glPointParameterfvSGIS_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_SGIS_point_parameters,
        Desktop_OpenGL_1_4,
        OpenGL_ES_1_0,
        GL_extension_GL_ARB_point_parameters,
        GL_extension_GL_EXT_point_parameters,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38915 /* "glPointParameterfvSGIS" */,
        38852 /* "glPointParameterfv" */,
        38852 /* "glPointParameterfv" */,
        38871 /* "glPointParameterfvARB" */,
        38893 /* "glPointParameterfvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38915 /* "glPointParameterfvSGIS" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERIPROC
epoxy_glPointParameteri_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_NV_point_sprite,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38938 /* "glPointParameteri" */,
        38956 /* "glPointParameteriNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38938 /* "glPointParameteri" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERINVPROC
epoxy_glPointParameteriNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_point_sprite,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38956 /* "glPointParameteriNV" */,
        38938 /* "glPointParameteri" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38956 /* "glPointParameteriNV" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERIVPROC
epoxy_glPointParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_NV_point_sprite,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38976 /* "glPointParameteriv" */,
        38995 /* "glPointParameterivNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38976 /* "glPointParameteriv" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERIVNVPROC
epoxy_glPointParameterivNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_point_sprite,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        38995 /* "glPointParameterivNV" */,
        38976 /* "glPointParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 38995 /* "glPointParameterivNV" */,
                                providers, entrypoints);
}

static PFNGLPOINTPARAMETERXPROC
epoxy_glPointParameterx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 39016 /* glPointParameterx */);
}

static PFNGLPOINTPARAMETERXOESPROC
epoxy_glPointParameterxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39034 /* glPointParameterxOES */);
}

static PFNGLPOINTPARAMETERXVPROC
epoxy_glPointParameterxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 39055 /* glPointParameterxv */);
}

static PFNGLPOINTPARAMETERXVOESPROC
epoxy_glPointParameterxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39074 /* glPointParameterxvOES */);
}

static PFNGLPOINTSIZEPROC
epoxy_glPointSize_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39096 /* "glPointSize" */,
        39096 /* "glPointSize" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39096 /* "glPointSize" */,
                                providers, entrypoints);
}

static PFNGLPOINTSIZEPOINTEROESPROC
epoxy_glPointSizePointerOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_point_size_array, 39108 /* glPointSizePointerOES */);
}

static PFNGLPOINTSIZEXPROC
epoxy_glPointSizex_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 39130 /* glPointSizex */);
}

static PFNGLPOINTSIZEXOESPROC
epoxy_glPointSizexOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39143 /* glPointSizexOES */);
}

static PFNGLPOLLASYNCSGIXPROC
epoxy_glPollAsyncSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_async, 39159 /* glPollAsyncSGIX */);
}

static PFNGLPOLLINSTRUMENTSSGIXPROC
epoxy_glPollInstrumentsSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 39175 /* glPollInstrumentsSGIX */);
}

static PFNGLPOLYGONMODEPROC
epoxy_glPolygonMode_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        GL_extension_GL_NV_polygon_mode,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39197 /* "glPolygonMode" */,
        39211 /* "glPolygonModeNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39197 /* "glPolygonMode" */,
                                providers, entrypoints);
}

static PFNGLPOLYGONMODENVPROC
epoxy_glPolygonModeNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_polygon_mode,
        Desktop_OpenGL_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39211 /* "glPolygonModeNV" */,
        39197 /* "glPolygonMode" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39211 /* "glPolygonModeNV" */,
                                providers, entrypoints);
}

static PFNGLPOLYGONOFFSETPROC
epoxy_glPolygonOffset_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39227 /* "glPolygonOffset" */,
        39227 /* "glPolygonOffset" */,
        39227 /* "glPolygonOffset" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39227 /* "glPolygonOffset" */,
                                providers, entrypoints);
}

static PFNGLPOLYGONOFFSETCLAMPEXTPROC
epoxy_glPolygonOffsetClampEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_polygon_offset_clamp, 39243 /* glPolygonOffsetClampEXT */);
}

static PFNGLPOLYGONOFFSETEXTPROC
epoxy_glPolygonOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_polygon_offset, 39267 /* glPolygonOffsetEXT */);
}

static PFNGLPOLYGONOFFSETXPROC
epoxy_glPolygonOffsetx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 39286 /* glPolygonOffsetx */);
}

static PFNGLPOLYGONOFFSETXOESPROC
epoxy_glPolygonOffsetxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39303 /* glPolygonOffsetxOES */);
}

static PFNGLPOLYGONSTIPPLEPROC
epoxy_glPolygonStipple_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 39323 /* glPolygonStipple */);
}

static PFNGLPOPATTRIBPROC
epoxy_glPopAttrib_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 39340 /* glPopAttrib */);
}

static PFNGLPOPCLIENTATTRIBPROC
epoxy_glPopClientAttrib_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_1, 39352 /* glPopClientAttrib */);
}

static PFNGLPOPDEBUGGROUPPROC
epoxy_glPopDebugGroup_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39370 /* "glPopDebugGroup" */,
        39370 /* "glPopDebugGroup" */,
        39386 /* "glPopDebugGroupKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39370 /* "glPopDebugGroup" */,
                                providers, entrypoints);
}

static PFNGLPOPDEBUGGROUPKHRPROC
epoxy_glPopDebugGroupKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39386 /* "glPopDebugGroupKHR" */,
        39370 /* "glPopDebugGroup" */,
        39370 /* "glPopDebugGroup" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39386 /* "glPopDebugGroupKHR" */,
                                providers, entrypoints);
}

static PFNGLPOPGROUPMARKEREXTPROC
epoxy_glPopGroupMarkerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_debug_marker, 39405 /* glPopGroupMarkerEXT */);
}

static PFNGLPOPMATRIXPROC
epoxy_glPopMatrix_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39425 /* "glPopMatrix" */,
        39425 /* "glPopMatrix" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39425 /* "glPopMatrix" */,
                                providers, entrypoints);
}

static PFNGLPOPNAMEPROC
epoxy_glPopName_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 39437 /* glPopName */);
}

static PFNGLPRESENTFRAMEDUALFILLNVPROC
epoxy_glPresentFrameDualFillNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_present_video, 39447 /* glPresentFrameDualFillNV */);
}

static PFNGLPRESENTFRAMEKEYEDNVPROC
epoxy_glPresentFrameKeyedNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_present_video, 39472 /* glPresentFrameKeyedNV */);
}

static PFNGLPRIMITIVEBOUNDINGBOXEXTPROC
epoxy_glPrimitiveBoundingBoxEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_primitive_bounding_box, 39494 /* glPrimitiveBoundingBoxEXT */);
}

static PFNGLPRIMITIVEBOUNDINGBOXOESPROC
epoxy_glPrimitiveBoundingBoxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_primitive_bounding_box, 39520 /* glPrimitiveBoundingBoxOES */);
}

static PFNGLPRIMITIVERESTARTINDEXPROC
epoxy_glPrimitiveRestartIndex_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_3_1, 39546 /* glPrimitiveRestartIndex */);
}

static PFNGLPRIMITIVERESTARTINDEXNVPROC
epoxy_glPrimitiveRestartIndexNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_primitive_restart, 39570 /* glPrimitiveRestartIndexNV */);
}

static PFNGLPRIMITIVERESTARTNVPROC
epoxy_glPrimitiveRestartNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_primitive_restart, 39596 /* glPrimitiveRestartNV */);
}

static PFNGLPRIORITIZETEXTURESPROC
epoxy_glPrioritizeTextures_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        GL_extension_GL_EXT_texture_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39617 /* "glPrioritizeTextures" */,
        39638 /* "glPrioritizeTexturesEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39617 /* "glPrioritizeTextures" */,
                                providers, entrypoints);
}

static PFNGLPRIORITIZETEXTURESEXTPROC
epoxy_glPrioritizeTexturesEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_object,
        Desktop_OpenGL_1_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39638 /* "glPrioritizeTexturesEXT" */,
        39617 /* "glPrioritizeTextures" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39638 /* "glPrioritizeTexturesEXT" */,
                                providers, entrypoints);
}

static PFNGLPRIORITIZETEXTURESXOESPROC
epoxy_glPrioritizeTexturesxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39662 /* glPrioritizeTexturesxOES */);
}

static PFNGLPROGRAMBINARYPROC
epoxy_glProgramBinary_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_get_program_binary,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_get_program_binary,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39687 /* "glProgramBinary" */,
        39687 /* "glProgramBinary" */,
        39687 /* "glProgramBinary" */,
        39703 /* "glProgramBinaryOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39687 /* "glProgramBinary" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMBINARYOESPROC
epoxy_glProgramBinaryOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_get_program_binary,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_get_program_binary,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39703 /* "glProgramBinaryOES" */,
        39687 /* "glProgramBinary" */,
        39687 /* "glProgramBinary" */,
        39687 /* "glProgramBinary" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39703 /* "glProgramBinaryOES" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
epoxy_glProgramBufferParametersIivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_parameter_buffer_object, 39722 /* glProgramBufferParametersIivNV */);
}

static PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
epoxy_glProgramBufferParametersIuivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_parameter_buffer_object, 39753 /* glProgramBufferParametersIuivNV */);
}

static PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
epoxy_glProgramBufferParametersfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_parameter_buffer_object, 39785 /* glProgramBufferParametersfvNV */);
}

static PFNGLPROGRAMENVPARAMETER4DARBPROC
epoxy_glProgramEnvParameter4dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39815 /* "glProgramEnvParameter4dARB" */,
        39815 /* "glProgramEnvParameter4dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39815 /* "glProgramEnvParameter4dARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMENVPARAMETER4DVARBPROC
epoxy_glProgramEnvParameter4dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39842 /* "glProgramEnvParameter4dvARB" */,
        39842 /* "glProgramEnvParameter4dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39842 /* "glProgramEnvParameter4dvARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMENVPARAMETER4FARBPROC
epoxy_glProgramEnvParameter4fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39870 /* "glProgramEnvParameter4fARB" */,
        39870 /* "glProgramEnvParameter4fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39870 /* "glProgramEnvParameter4fARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMENVPARAMETER4FVARBPROC
epoxy_glProgramEnvParameter4fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        39897 /* "glProgramEnvParameter4fvARB" */,
        39897 /* "glProgramEnvParameter4fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 39897 /* "glProgramEnvParameter4fvARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMENVPARAMETERI4INVPROC
epoxy_glProgramEnvParameterI4iNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 39925 /* glProgramEnvParameterI4iNV */);
}

static PFNGLPROGRAMENVPARAMETERI4IVNVPROC
epoxy_glProgramEnvParameterI4ivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 39952 /* glProgramEnvParameterI4ivNV */);
}

static PFNGLPROGRAMENVPARAMETERI4UINVPROC
epoxy_glProgramEnvParameterI4uiNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 39980 /* glProgramEnvParameterI4uiNV */);
}

static PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
epoxy_glProgramEnvParameterI4uivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 40008 /* glProgramEnvParameterI4uivNV */);
}

static PFNGLPROGRAMENVPARAMETERS4FVEXTPROC
epoxy_glProgramEnvParameters4fvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_gpu_program_parameters, 40037 /* glProgramEnvParameters4fvEXT */);
}

static PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
epoxy_glProgramEnvParametersI4ivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 40066 /* glProgramEnvParametersI4ivNV */);
}

static PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
epoxy_glProgramEnvParametersI4uivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 40095 /* glProgramEnvParametersI4uivNV */);
}

static PFNGLPROGRAMLOCALPARAMETER4DARBPROC
epoxy_glProgramLocalParameter4dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40125 /* "glProgramLocalParameter4dARB" */,
        40125 /* "glProgramLocalParameter4dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40125 /* "glProgramLocalParameter4dARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
epoxy_glProgramLocalParameter4dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40154 /* "glProgramLocalParameter4dvARB" */,
        40154 /* "glProgramLocalParameter4dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40154 /* "glProgramLocalParameter4dvARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMLOCALPARAMETER4FARBPROC
epoxy_glProgramLocalParameter4fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40184 /* "glProgramLocalParameter4fARB" */,
        40184 /* "glProgramLocalParameter4fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40184 /* "glProgramLocalParameter4fARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
epoxy_glProgramLocalParameter4fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40213 /* "glProgramLocalParameter4fvARB" */,
        40213 /* "glProgramLocalParameter4fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40213 /* "glProgramLocalParameter4fvARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMLOCALPARAMETERI4INVPROC
epoxy_glProgramLocalParameterI4iNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 40243 /* glProgramLocalParameterI4iNV */);
}

static PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
epoxy_glProgramLocalParameterI4ivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 40272 /* glProgramLocalParameterI4ivNV */);
}

static PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
epoxy_glProgramLocalParameterI4uiNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 40302 /* glProgramLocalParameterI4uiNV */);
}

static PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
epoxy_glProgramLocalParameterI4uivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 40332 /* glProgramLocalParameterI4uivNV */);
}

static PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
epoxy_glProgramLocalParameters4fvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_gpu_program_parameters, 40363 /* glProgramLocalParameters4fvEXT */);
}

static PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
epoxy_glProgramLocalParametersI4ivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 40394 /* glProgramLocalParametersI4ivNV */);
}

static PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
epoxy_glProgramLocalParametersI4uivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 40425 /* glProgramLocalParametersI4uivNV */);
}

static PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
epoxy_glProgramNamedParameter4dNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 40457 /* glProgramNamedParameter4dNV */);
}

static PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
epoxy_glProgramNamedParameter4dvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 40485 /* glProgramNamedParameter4dvNV */);
}

static PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
epoxy_glProgramNamedParameter4fNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 40514 /* glProgramNamedParameter4fNV */);
}

static PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
epoxy_glProgramNamedParameter4fvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 40542 /* glProgramNamedParameter4fvNV */);
}

static PFNGLPROGRAMPARAMETER4DNVPROC
epoxy_glProgramParameter4dNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 40571 /* glProgramParameter4dNV */);
}

static PFNGLPROGRAMPARAMETER4DVNVPROC
epoxy_glProgramParameter4dvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 40594 /* glProgramParameter4dvNV */);
}

static PFNGLPROGRAMPARAMETER4FNVPROC
epoxy_glProgramParameter4fNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 40618 /* glProgramParameter4fNV */);
}

static PFNGLPROGRAMPARAMETER4FVNVPROC
epoxy_glProgramParameter4fvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 40641 /* glProgramParameter4fvNV */);
}

static PFNGLPROGRAMPARAMETERIPROC
epoxy_glProgramParameteri_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_get_program_binary,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_geometry_shader4,
        GL_extension_GL_EXT_geometry_shader4,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40665 /* "glProgramParameteri" */,
        40665 /* "glProgramParameteri" */,
        40665 /* "glProgramParameteri" */,
        40685 /* "glProgramParameteriARB" */,
        40708 /* "glProgramParameteriEXT" */,
        40708 /* "glProgramParameteriEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40665 /* "glProgramParameteri" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMPARAMETERIARBPROC
epoxy_glProgramParameteriARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_geometry_shader4,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_get_program_binary,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_geometry_shader4,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40685 /* "glProgramParameteriARB" */,
        40665 /* "glProgramParameteri" */,
        40665 /* "glProgramParameteri" */,
        40665 /* "glProgramParameteri" */,
        40708 /* "glProgramParameteriEXT" */,
        40708 /* "glProgramParameteriEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40685 /* "glProgramParameteriARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMPARAMETERIEXTPROC
epoxy_glProgramParameteriEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_geometry_shader4,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_get_program_binary,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_geometry_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40708 /* "glProgramParameteriEXT" */,
        40708 /* "glProgramParameteriEXT" */,
        40665 /* "glProgramParameteri" */,
        40665 /* "glProgramParameteri" */,
        40665 /* "glProgramParameteri" */,
        40685 /* "glProgramParameteriARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40708 /* "glProgramParameteriEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMPARAMETERS4DVNVPROC
epoxy_glProgramParameters4dvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 40731 /* glProgramParameters4dvNV */);
}

static PFNGLPROGRAMPARAMETERS4FVNVPROC
epoxy_glProgramParameters4fvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 40756 /* glProgramParameters4fvNV */);
}

static PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC
epoxy_glProgramPathFragmentInputGenNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 40781 /* glProgramPathFragmentInputGenNV */);
}

static PFNGLPROGRAMSTRINGARBPROC
epoxy_glProgramStringARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_fragment_program,
        GL_extension_GL_ARB_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40813 /* "glProgramStringARB" */,
        40813 /* "glProgramStringARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40813 /* "glProgramStringARB" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC
epoxy_glProgramSubroutineParametersuivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_gpu_program5, 40832 /* glProgramSubroutineParametersuivNV */);
}

static PFNGLPROGRAMUNIFORM1DPROC
epoxy_glProgramUniform1d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40867 /* "glProgramUniform1d" */,
        40867 /* "glProgramUniform1d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40867 /* "glProgramUniform1d" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1DEXTPROC
epoxy_glProgramUniform1dEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 40886 /* glProgramUniform1dEXT */);
}

static PFNGLPROGRAMUNIFORM1DVPROC
epoxy_glProgramUniform1dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40908 /* "glProgramUniform1dv" */,
        40908 /* "glProgramUniform1dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40908 /* "glProgramUniform1dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1DVEXTPROC
epoxy_glProgramUniform1dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 40928 /* glProgramUniform1dvEXT */);
}

static PFNGLPROGRAMUNIFORM1FPROC
epoxy_glProgramUniform1f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40951 /* "glProgramUniform1f" */,
        40951 /* "glProgramUniform1f" */,
        40951 /* "glProgramUniform1f" */,
        40970 /* "glProgramUniform1fEXT" */,
        40970 /* "glProgramUniform1fEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40951 /* "glProgramUniform1f" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1FEXTPROC
epoxy_glProgramUniform1fEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40970 /* "glProgramUniform1fEXT" */,
        40970 /* "glProgramUniform1fEXT" */,
        40951 /* "glProgramUniform1f" */,
        40951 /* "glProgramUniform1f" */,
        40951 /* "glProgramUniform1f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40970 /* "glProgramUniform1fEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1FVPROC
epoxy_glProgramUniform1fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        40992 /* "glProgramUniform1fv" */,
        40992 /* "glProgramUniform1fv" */,
        40992 /* "glProgramUniform1fv" */,
        41012 /* "glProgramUniform1fvEXT" */,
        41012 /* "glProgramUniform1fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 40992 /* "glProgramUniform1fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1FVEXTPROC
epoxy_glProgramUniform1fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41012 /* "glProgramUniform1fvEXT" */,
        41012 /* "glProgramUniform1fvEXT" */,
        40992 /* "glProgramUniform1fv" */,
        40992 /* "glProgramUniform1fv" */,
        40992 /* "glProgramUniform1fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41012 /* "glProgramUniform1fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1IPROC
epoxy_glProgramUniform1i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41035 /* "glProgramUniform1i" */,
        41035 /* "glProgramUniform1i" */,
        41035 /* "glProgramUniform1i" */,
        41101 /* "glProgramUniform1iEXT" */,
        41101 /* "glProgramUniform1iEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41035 /* "glProgramUniform1i" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1I64NVPROC
epoxy_glProgramUniform1i64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41054 /* "glProgramUniform1i64NV" */,
        41054 /* "glProgramUniform1i64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41054 /* "glProgramUniform1i64NV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1I64VNVPROC
epoxy_glProgramUniform1i64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41077 /* "glProgramUniform1i64vNV" */,
        41077 /* "glProgramUniform1i64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41077 /* "glProgramUniform1i64vNV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1IEXTPROC
epoxy_glProgramUniform1iEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41101 /* "glProgramUniform1iEXT" */,
        41101 /* "glProgramUniform1iEXT" */,
        41035 /* "glProgramUniform1i" */,
        41035 /* "glProgramUniform1i" */,
        41035 /* "glProgramUniform1i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41101 /* "glProgramUniform1iEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1IVPROC
epoxy_glProgramUniform1iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41123 /* "glProgramUniform1iv" */,
        41123 /* "glProgramUniform1iv" */,
        41123 /* "glProgramUniform1iv" */,
        41143 /* "glProgramUniform1ivEXT" */,
        41143 /* "glProgramUniform1ivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41123 /* "glProgramUniform1iv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1IVEXTPROC
epoxy_glProgramUniform1ivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41143 /* "glProgramUniform1ivEXT" */,
        41143 /* "glProgramUniform1ivEXT" */,
        41123 /* "glProgramUniform1iv" */,
        41123 /* "glProgramUniform1iv" */,
        41123 /* "glProgramUniform1iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41143 /* "glProgramUniform1ivEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1UIPROC
epoxy_glProgramUniform1ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41166 /* "glProgramUniform1ui" */,
        41166 /* "glProgramUniform1ui" */,
        41166 /* "glProgramUniform1ui" */,
        41235 /* "glProgramUniform1uiEXT" */,
        41235 /* "glProgramUniform1uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41166 /* "glProgramUniform1ui" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1UI64NVPROC
epoxy_glProgramUniform1ui64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41186 /* "glProgramUniform1ui64NV" */,
        41186 /* "glProgramUniform1ui64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41186 /* "glProgramUniform1ui64NV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1UI64VNVPROC
epoxy_glProgramUniform1ui64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41210 /* "glProgramUniform1ui64vNV" */,
        41210 /* "glProgramUniform1ui64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41210 /* "glProgramUniform1ui64vNV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1UIEXTPROC
epoxy_glProgramUniform1uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41235 /* "glProgramUniform1uiEXT" */,
        41235 /* "glProgramUniform1uiEXT" */,
        41166 /* "glProgramUniform1ui" */,
        41166 /* "glProgramUniform1ui" */,
        41166 /* "glProgramUniform1ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41235 /* "glProgramUniform1uiEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1UIVPROC
epoxy_glProgramUniform1uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41258 /* "glProgramUniform1uiv" */,
        41258 /* "glProgramUniform1uiv" */,
        41258 /* "glProgramUniform1uiv" */,
        41279 /* "glProgramUniform1uivEXT" */,
        41279 /* "glProgramUniform1uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41258 /* "glProgramUniform1uiv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM1UIVEXTPROC
epoxy_glProgramUniform1uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41279 /* "glProgramUniform1uivEXT" */,
        41279 /* "glProgramUniform1uivEXT" */,
        41258 /* "glProgramUniform1uiv" */,
        41258 /* "glProgramUniform1uiv" */,
        41258 /* "glProgramUniform1uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41279 /* "glProgramUniform1uivEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2DPROC
epoxy_glProgramUniform2d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41303 /* "glProgramUniform2d" */,
        41303 /* "glProgramUniform2d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41303 /* "glProgramUniform2d" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2DEXTPROC
epoxy_glProgramUniform2dEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 41322 /* glProgramUniform2dEXT */);
}

static PFNGLPROGRAMUNIFORM2DVPROC
epoxy_glProgramUniform2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41344 /* "glProgramUniform2dv" */,
        41344 /* "glProgramUniform2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41344 /* "glProgramUniform2dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2DVEXTPROC
epoxy_glProgramUniform2dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 41364 /* glProgramUniform2dvEXT */);
}

static PFNGLPROGRAMUNIFORM2FPROC
epoxy_glProgramUniform2f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41387 /* "glProgramUniform2f" */,
        41387 /* "glProgramUniform2f" */,
        41387 /* "glProgramUniform2f" */,
        41406 /* "glProgramUniform2fEXT" */,
        41406 /* "glProgramUniform2fEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41387 /* "glProgramUniform2f" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2FEXTPROC
epoxy_glProgramUniform2fEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41406 /* "glProgramUniform2fEXT" */,
        41406 /* "glProgramUniform2fEXT" */,
        41387 /* "glProgramUniform2f" */,
        41387 /* "glProgramUniform2f" */,
        41387 /* "glProgramUniform2f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41406 /* "glProgramUniform2fEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2FVPROC
epoxy_glProgramUniform2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41428 /* "glProgramUniform2fv" */,
        41428 /* "glProgramUniform2fv" */,
        41428 /* "glProgramUniform2fv" */,
        41448 /* "glProgramUniform2fvEXT" */,
        41448 /* "glProgramUniform2fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41428 /* "glProgramUniform2fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2FVEXTPROC
epoxy_glProgramUniform2fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41448 /* "glProgramUniform2fvEXT" */,
        41448 /* "glProgramUniform2fvEXT" */,
        41428 /* "glProgramUniform2fv" */,
        41428 /* "glProgramUniform2fv" */,
        41428 /* "glProgramUniform2fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41448 /* "glProgramUniform2fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2IPROC
epoxy_glProgramUniform2i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41471 /* "glProgramUniform2i" */,
        41471 /* "glProgramUniform2i" */,
        41471 /* "glProgramUniform2i" */,
        41537 /* "glProgramUniform2iEXT" */,
        41537 /* "glProgramUniform2iEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41471 /* "glProgramUniform2i" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2I64NVPROC
epoxy_glProgramUniform2i64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41490 /* "glProgramUniform2i64NV" */,
        41490 /* "glProgramUniform2i64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41490 /* "glProgramUniform2i64NV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2I64VNVPROC
epoxy_glProgramUniform2i64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41513 /* "glProgramUniform2i64vNV" */,
        41513 /* "glProgramUniform2i64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41513 /* "glProgramUniform2i64vNV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2IEXTPROC
epoxy_glProgramUniform2iEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41537 /* "glProgramUniform2iEXT" */,
        41537 /* "glProgramUniform2iEXT" */,
        41471 /* "glProgramUniform2i" */,
        41471 /* "glProgramUniform2i" */,
        41471 /* "glProgramUniform2i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41537 /* "glProgramUniform2iEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2IVPROC
epoxy_glProgramUniform2iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41559 /* "glProgramUniform2iv" */,
        41559 /* "glProgramUniform2iv" */,
        41559 /* "glProgramUniform2iv" */,
        41579 /* "glProgramUniform2ivEXT" */,
        41579 /* "glProgramUniform2ivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41559 /* "glProgramUniform2iv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2IVEXTPROC
epoxy_glProgramUniform2ivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41579 /* "glProgramUniform2ivEXT" */,
        41579 /* "glProgramUniform2ivEXT" */,
        41559 /* "glProgramUniform2iv" */,
        41559 /* "glProgramUniform2iv" */,
        41559 /* "glProgramUniform2iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41579 /* "glProgramUniform2ivEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2UIPROC
epoxy_glProgramUniform2ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41602 /* "glProgramUniform2ui" */,
        41602 /* "glProgramUniform2ui" */,
        41602 /* "glProgramUniform2ui" */,
        41671 /* "glProgramUniform2uiEXT" */,
        41671 /* "glProgramUniform2uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41602 /* "glProgramUniform2ui" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2UI64NVPROC
epoxy_glProgramUniform2ui64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41622 /* "glProgramUniform2ui64NV" */,
        41622 /* "glProgramUniform2ui64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41622 /* "glProgramUniform2ui64NV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2UI64VNVPROC
epoxy_glProgramUniform2ui64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41646 /* "glProgramUniform2ui64vNV" */,
        41646 /* "glProgramUniform2ui64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41646 /* "glProgramUniform2ui64vNV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2UIEXTPROC
epoxy_glProgramUniform2uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41671 /* "glProgramUniform2uiEXT" */,
        41671 /* "glProgramUniform2uiEXT" */,
        41602 /* "glProgramUniform2ui" */,
        41602 /* "glProgramUniform2ui" */,
        41602 /* "glProgramUniform2ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41671 /* "glProgramUniform2uiEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2UIVPROC
epoxy_glProgramUniform2uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41694 /* "glProgramUniform2uiv" */,
        41694 /* "glProgramUniform2uiv" */,
        41694 /* "glProgramUniform2uiv" */,
        41715 /* "glProgramUniform2uivEXT" */,
        41715 /* "glProgramUniform2uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41694 /* "glProgramUniform2uiv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM2UIVEXTPROC
epoxy_glProgramUniform2uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41715 /* "glProgramUniform2uivEXT" */,
        41715 /* "glProgramUniform2uivEXT" */,
        41694 /* "glProgramUniform2uiv" */,
        41694 /* "glProgramUniform2uiv" */,
        41694 /* "glProgramUniform2uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41715 /* "glProgramUniform2uivEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3DPROC
epoxy_glProgramUniform3d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41739 /* "glProgramUniform3d" */,
        41739 /* "glProgramUniform3d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41739 /* "glProgramUniform3d" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3DEXTPROC
epoxy_glProgramUniform3dEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 41758 /* glProgramUniform3dEXT */);
}

static PFNGLPROGRAMUNIFORM3DVPROC
epoxy_glProgramUniform3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41780 /* "glProgramUniform3dv" */,
        41780 /* "glProgramUniform3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41780 /* "glProgramUniform3dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3DVEXTPROC
epoxy_glProgramUniform3dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 41800 /* glProgramUniform3dvEXT */);
}

static PFNGLPROGRAMUNIFORM3FPROC
epoxy_glProgramUniform3f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41823 /* "glProgramUniform3f" */,
        41823 /* "glProgramUniform3f" */,
        41823 /* "glProgramUniform3f" */,
        41842 /* "glProgramUniform3fEXT" */,
        41842 /* "glProgramUniform3fEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41823 /* "glProgramUniform3f" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3FEXTPROC
epoxy_glProgramUniform3fEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41842 /* "glProgramUniform3fEXT" */,
        41842 /* "glProgramUniform3fEXT" */,
        41823 /* "glProgramUniform3f" */,
        41823 /* "glProgramUniform3f" */,
        41823 /* "glProgramUniform3f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41842 /* "glProgramUniform3fEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3FVPROC
epoxy_glProgramUniform3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41864 /* "glProgramUniform3fv" */,
        41864 /* "glProgramUniform3fv" */,
        41864 /* "glProgramUniform3fv" */,
        41884 /* "glProgramUniform3fvEXT" */,
        41884 /* "glProgramUniform3fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41864 /* "glProgramUniform3fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3FVEXTPROC
epoxy_glProgramUniform3fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41884 /* "glProgramUniform3fvEXT" */,
        41884 /* "glProgramUniform3fvEXT" */,
        41864 /* "glProgramUniform3fv" */,
        41864 /* "glProgramUniform3fv" */,
        41864 /* "glProgramUniform3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41884 /* "glProgramUniform3fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3IPROC
epoxy_glProgramUniform3i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41907 /* "glProgramUniform3i" */,
        41907 /* "glProgramUniform3i" */,
        41907 /* "glProgramUniform3i" */,
        41973 /* "glProgramUniform3iEXT" */,
        41973 /* "glProgramUniform3iEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41907 /* "glProgramUniform3i" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3I64NVPROC
epoxy_glProgramUniform3i64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41926 /* "glProgramUniform3i64NV" */,
        41926 /* "glProgramUniform3i64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41926 /* "glProgramUniform3i64NV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3I64VNVPROC
epoxy_glProgramUniform3i64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41949 /* "glProgramUniform3i64vNV" */,
        41949 /* "glProgramUniform3i64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41949 /* "glProgramUniform3i64vNV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3IEXTPROC
epoxy_glProgramUniform3iEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41973 /* "glProgramUniform3iEXT" */,
        41973 /* "glProgramUniform3iEXT" */,
        41907 /* "glProgramUniform3i" */,
        41907 /* "glProgramUniform3i" */,
        41907 /* "glProgramUniform3i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41973 /* "glProgramUniform3iEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3IVPROC
epoxy_glProgramUniform3iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        41995 /* "glProgramUniform3iv" */,
        41995 /* "glProgramUniform3iv" */,
        41995 /* "glProgramUniform3iv" */,
        42015 /* "glProgramUniform3ivEXT" */,
        42015 /* "glProgramUniform3ivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 41995 /* "glProgramUniform3iv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3IVEXTPROC
epoxy_glProgramUniform3ivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42015 /* "glProgramUniform3ivEXT" */,
        42015 /* "glProgramUniform3ivEXT" */,
        41995 /* "glProgramUniform3iv" */,
        41995 /* "glProgramUniform3iv" */,
        41995 /* "glProgramUniform3iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42015 /* "glProgramUniform3ivEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3UIPROC
epoxy_glProgramUniform3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42038 /* "glProgramUniform3ui" */,
        42038 /* "glProgramUniform3ui" */,
        42038 /* "glProgramUniform3ui" */,
        42107 /* "glProgramUniform3uiEXT" */,
        42107 /* "glProgramUniform3uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42038 /* "glProgramUniform3ui" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3UI64NVPROC
epoxy_glProgramUniform3ui64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42058 /* "glProgramUniform3ui64NV" */,
        42058 /* "glProgramUniform3ui64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42058 /* "glProgramUniform3ui64NV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3UI64VNVPROC
epoxy_glProgramUniform3ui64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42082 /* "glProgramUniform3ui64vNV" */,
        42082 /* "glProgramUniform3ui64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42082 /* "glProgramUniform3ui64vNV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3UIEXTPROC
epoxy_glProgramUniform3uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42107 /* "glProgramUniform3uiEXT" */,
        42107 /* "glProgramUniform3uiEXT" */,
        42038 /* "glProgramUniform3ui" */,
        42038 /* "glProgramUniform3ui" */,
        42038 /* "glProgramUniform3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42107 /* "glProgramUniform3uiEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3UIVPROC
epoxy_glProgramUniform3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42130 /* "glProgramUniform3uiv" */,
        42130 /* "glProgramUniform3uiv" */,
        42130 /* "glProgramUniform3uiv" */,
        42151 /* "glProgramUniform3uivEXT" */,
        42151 /* "glProgramUniform3uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42130 /* "glProgramUniform3uiv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM3UIVEXTPROC
epoxy_glProgramUniform3uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42151 /* "glProgramUniform3uivEXT" */,
        42151 /* "glProgramUniform3uivEXT" */,
        42130 /* "glProgramUniform3uiv" */,
        42130 /* "glProgramUniform3uiv" */,
        42130 /* "glProgramUniform3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42151 /* "glProgramUniform3uivEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4DPROC
epoxy_glProgramUniform4d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42175 /* "glProgramUniform4d" */,
        42175 /* "glProgramUniform4d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42175 /* "glProgramUniform4d" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4DEXTPROC
epoxy_glProgramUniform4dEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 42194 /* glProgramUniform4dEXT */);
}

static PFNGLPROGRAMUNIFORM4DVPROC
epoxy_glProgramUniform4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42216 /* "glProgramUniform4dv" */,
        42216 /* "glProgramUniform4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42216 /* "glProgramUniform4dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4DVEXTPROC
epoxy_glProgramUniform4dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 42236 /* glProgramUniform4dvEXT */);
}

static PFNGLPROGRAMUNIFORM4FPROC
epoxy_glProgramUniform4f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42259 /* "glProgramUniform4f" */,
        42259 /* "glProgramUniform4f" */,
        42259 /* "glProgramUniform4f" */,
        42278 /* "glProgramUniform4fEXT" */,
        42278 /* "glProgramUniform4fEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42259 /* "glProgramUniform4f" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4FEXTPROC
epoxy_glProgramUniform4fEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42278 /* "glProgramUniform4fEXT" */,
        42278 /* "glProgramUniform4fEXT" */,
        42259 /* "glProgramUniform4f" */,
        42259 /* "glProgramUniform4f" */,
        42259 /* "glProgramUniform4f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42278 /* "glProgramUniform4fEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4FVPROC
epoxy_glProgramUniform4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42300 /* "glProgramUniform4fv" */,
        42300 /* "glProgramUniform4fv" */,
        42300 /* "glProgramUniform4fv" */,
        42320 /* "glProgramUniform4fvEXT" */,
        42320 /* "glProgramUniform4fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42300 /* "glProgramUniform4fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4FVEXTPROC
epoxy_glProgramUniform4fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42320 /* "glProgramUniform4fvEXT" */,
        42320 /* "glProgramUniform4fvEXT" */,
        42300 /* "glProgramUniform4fv" */,
        42300 /* "glProgramUniform4fv" */,
        42300 /* "glProgramUniform4fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42320 /* "glProgramUniform4fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4IPROC
epoxy_glProgramUniform4i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42343 /* "glProgramUniform4i" */,
        42343 /* "glProgramUniform4i" */,
        42343 /* "glProgramUniform4i" */,
        42409 /* "glProgramUniform4iEXT" */,
        42409 /* "glProgramUniform4iEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42343 /* "glProgramUniform4i" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4I64NVPROC
epoxy_glProgramUniform4i64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42362 /* "glProgramUniform4i64NV" */,
        42362 /* "glProgramUniform4i64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42362 /* "glProgramUniform4i64NV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4I64VNVPROC
epoxy_glProgramUniform4i64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42385 /* "glProgramUniform4i64vNV" */,
        42385 /* "glProgramUniform4i64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42385 /* "glProgramUniform4i64vNV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4IEXTPROC
epoxy_glProgramUniform4iEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42409 /* "glProgramUniform4iEXT" */,
        42409 /* "glProgramUniform4iEXT" */,
        42343 /* "glProgramUniform4i" */,
        42343 /* "glProgramUniform4i" */,
        42343 /* "glProgramUniform4i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42409 /* "glProgramUniform4iEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4IVPROC
epoxy_glProgramUniform4iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42431 /* "glProgramUniform4iv" */,
        42431 /* "glProgramUniform4iv" */,
        42431 /* "glProgramUniform4iv" */,
        42451 /* "glProgramUniform4ivEXT" */,
        42451 /* "glProgramUniform4ivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42431 /* "glProgramUniform4iv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4IVEXTPROC
epoxy_glProgramUniform4ivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42451 /* "glProgramUniform4ivEXT" */,
        42451 /* "glProgramUniform4ivEXT" */,
        42431 /* "glProgramUniform4iv" */,
        42431 /* "glProgramUniform4iv" */,
        42431 /* "glProgramUniform4iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42451 /* "glProgramUniform4ivEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4UIPROC
epoxy_glProgramUniform4ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42474 /* "glProgramUniform4ui" */,
        42474 /* "glProgramUniform4ui" */,
        42474 /* "glProgramUniform4ui" */,
        42543 /* "glProgramUniform4uiEXT" */,
        42543 /* "glProgramUniform4uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42474 /* "glProgramUniform4ui" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4UI64NVPROC
epoxy_glProgramUniform4ui64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42494 /* "glProgramUniform4ui64NV" */,
        42494 /* "glProgramUniform4ui64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42494 /* "glProgramUniform4ui64NV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4UI64VNVPROC
epoxy_glProgramUniform4ui64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42518 /* "glProgramUniform4ui64vNV" */,
        42518 /* "glProgramUniform4ui64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42518 /* "glProgramUniform4ui64vNV" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4UIEXTPROC
epoxy_glProgramUniform4uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42543 /* "glProgramUniform4uiEXT" */,
        42543 /* "glProgramUniform4uiEXT" */,
        42474 /* "glProgramUniform4ui" */,
        42474 /* "glProgramUniform4ui" */,
        42474 /* "glProgramUniform4ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42543 /* "glProgramUniform4uiEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4UIVPROC
epoxy_glProgramUniform4uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42566 /* "glProgramUniform4uiv" */,
        42566 /* "glProgramUniform4uiv" */,
        42566 /* "glProgramUniform4uiv" */,
        42587 /* "glProgramUniform4uivEXT" */,
        42587 /* "glProgramUniform4uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42566 /* "glProgramUniform4uiv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORM4UIVEXTPROC
epoxy_glProgramUniform4uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42587 /* "glProgramUniform4uivEXT" */,
        42587 /* "glProgramUniform4uivEXT" */,
        42566 /* "glProgramUniform4uiv" */,
        42566 /* "glProgramUniform4uiv" */,
        42566 /* "glProgramUniform4uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42587 /* "glProgramUniform4uivEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC
epoxy_glProgramUniformHandleui64ARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 42611 /* glProgramUniformHandleui64ARB */);
}

static PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC
epoxy_glProgramUniformHandleui64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 42641 /* glProgramUniformHandleui64NV */);
}

static PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC
epoxy_glProgramUniformHandleui64vARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 42670 /* glProgramUniformHandleui64vARB */);
}

static PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC
epoxy_glProgramUniformHandleui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 42701 /* glProgramUniformHandleui64vNV */);
}

static PFNGLPROGRAMUNIFORMMATRIX2DVPROC
epoxy_glProgramUniformMatrix2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42731 /* "glProgramUniformMatrix2dv" */,
        42731 /* "glProgramUniformMatrix2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42731 /* "glProgramUniformMatrix2dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC
epoxy_glProgramUniformMatrix2dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 42757 /* glProgramUniformMatrix2dvEXT */);
}

static PFNGLPROGRAMUNIFORMMATRIX2FVPROC
epoxy_glProgramUniformMatrix2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42786 /* "glProgramUniformMatrix2fv" */,
        42786 /* "glProgramUniformMatrix2fv" */,
        42786 /* "glProgramUniformMatrix2fv" */,
        42812 /* "glProgramUniformMatrix2fvEXT" */,
        42812 /* "glProgramUniformMatrix2fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42786 /* "glProgramUniformMatrix2fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
epoxy_glProgramUniformMatrix2fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42812 /* "glProgramUniformMatrix2fvEXT" */,
        42812 /* "glProgramUniformMatrix2fvEXT" */,
        42786 /* "glProgramUniformMatrix2fv" */,
        42786 /* "glProgramUniformMatrix2fv" */,
        42786 /* "glProgramUniformMatrix2fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42812 /* "glProgramUniformMatrix2fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
epoxy_glProgramUniformMatrix2x3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42841 /* "glProgramUniformMatrix2x3dv" */,
        42841 /* "glProgramUniformMatrix2x3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42841 /* "glProgramUniformMatrix2x3dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC
epoxy_glProgramUniformMatrix2x3dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 42869 /* glProgramUniformMatrix2x3dvEXT */);
}

static PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
epoxy_glProgramUniformMatrix2x3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42900 /* "glProgramUniformMatrix2x3fv" */,
        42900 /* "glProgramUniformMatrix2x3fv" */,
        42900 /* "glProgramUniformMatrix2x3fv" */,
        42928 /* "glProgramUniformMatrix2x3fvEXT" */,
        42928 /* "glProgramUniformMatrix2x3fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42900 /* "glProgramUniformMatrix2x3fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
epoxy_glProgramUniformMatrix2x3fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42928 /* "glProgramUniformMatrix2x3fvEXT" */,
        42928 /* "glProgramUniformMatrix2x3fvEXT" */,
        42900 /* "glProgramUniformMatrix2x3fv" */,
        42900 /* "glProgramUniformMatrix2x3fv" */,
        42900 /* "glProgramUniformMatrix2x3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42928 /* "glProgramUniformMatrix2x3fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
epoxy_glProgramUniformMatrix2x4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        42959 /* "glProgramUniformMatrix2x4dv" */,
        42959 /* "glProgramUniformMatrix2x4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 42959 /* "glProgramUniformMatrix2x4dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC
epoxy_glProgramUniformMatrix2x4dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 42987 /* glProgramUniformMatrix2x4dvEXT */);
}

static PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
epoxy_glProgramUniformMatrix2x4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43018 /* "glProgramUniformMatrix2x4fv" */,
        43018 /* "glProgramUniformMatrix2x4fv" */,
        43018 /* "glProgramUniformMatrix2x4fv" */,
        43046 /* "glProgramUniformMatrix2x4fvEXT" */,
        43046 /* "glProgramUniformMatrix2x4fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43018 /* "glProgramUniformMatrix2x4fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
epoxy_glProgramUniformMatrix2x4fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43046 /* "glProgramUniformMatrix2x4fvEXT" */,
        43046 /* "glProgramUniformMatrix2x4fvEXT" */,
        43018 /* "glProgramUniformMatrix2x4fv" */,
        43018 /* "glProgramUniformMatrix2x4fv" */,
        43018 /* "glProgramUniformMatrix2x4fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43046 /* "glProgramUniformMatrix2x4fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX3DVPROC
epoxy_glProgramUniformMatrix3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43077 /* "glProgramUniformMatrix3dv" */,
        43077 /* "glProgramUniformMatrix3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43077 /* "glProgramUniformMatrix3dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC
epoxy_glProgramUniformMatrix3dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 43103 /* glProgramUniformMatrix3dvEXT */);
}

static PFNGLPROGRAMUNIFORMMATRIX3FVPROC
epoxy_glProgramUniformMatrix3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43132 /* "glProgramUniformMatrix3fv" */,
        43132 /* "glProgramUniformMatrix3fv" */,
        43132 /* "glProgramUniformMatrix3fv" */,
        43158 /* "glProgramUniformMatrix3fvEXT" */,
        43158 /* "glProgramUniformMatrix3fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43132 /* "glProgramUniformMatrix3fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
epoxy_glProgramUniformMatrix3fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43158 /* "glProgramUniformMatrix3fvEXT" */,
        43158 /* "glProgramUniformMatrix3fvEXT" */,
        43132 /* "glProgramUniformMatrix3fv" */,
        43132 /* "glProgramUniformMatrix3fv" */,
        43132 /* "glProgramUniformMatrix3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43158 /* "glProgramUniformMatrix3fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
epoxy_glProgramUniformMatrix3x2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43187 /* "glProgramUniformMatrix3x2dv" */,
        43187 /* "glProgramUniformMatrix3x2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43187 /* "glProgramUniformMatrix3x2dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC
epoxy_glProgramUniformMatrix3x2dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 43215 /* glProgramUniformMatrix3x2dvEXT */);
}

static PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
epoxy_glProgramUniformMatrix3x2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43246 /* "glProgramUniformMatrix3x2fv" */,
        43246 /* "glProgramUniformMatrix3x2fv" */,
        43246 /* "glProgramUniformMatrix3x2fv" */,
        43274 /* "glProgramUniformMatrix3x2fvEXT" */,
        43274 /* "glProgramUniformMatrix3x2fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43246 /* "glProgramUniformMatrix3x2fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
epoxy_glProgramUniformMatrix3x2fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43274 /* "glProgramUniformMatrix3x2fvEXT" */,
        43274 /* "glProgramUniformMatrix3x2fvEXT" */,
        43246 /* "glProgramUniformMatrix3x2fv" */,
        43246 /* "glProgramUniformMatrix3x2fv" */,
        43246 /* "glProgramUniformMatrix3x2fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43274 /* "glProgramUniformMatrix3x2fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
epoxy_glProgramUniformMatrix3x4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43305 /* "glProgramUniformMatrix3x4dv" */,
        43305 /* "glProgramUniformMatrix3x4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43305 /* "glProgramUniformMatrix3x4dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC
epoxy_glProgramUniformMatrix3x4dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 43333 /* glProgramUniformMatrix3x4dvEXT */);
}

static PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
epoxy_glProgramUniformMatrix3x4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43364 /* "glProgramUniformMatrix3x4fv" */,
        43364 /* "glProgramUniformMatrix3x4fv" */,
        43364 /* "glProgramUniformMatrix3x4fv" */,
        43392 /* "glProgramUniformMatrix3x4fvEXT" */,
        43392 /* "glProgramUniformMatrix3x4fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43364 /* "glProgramUniformMatrix3x4fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
epoxy_glProgramUniformMatrix3x4fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43392 /* "glProgramUniformMatrix3x4fvEXT" */,
        43392 /* "glProgramUniformMatrix3x4fvEXT" */,
        43364 /* "glProgramUniformMatrix3x4fv" */,
        43364 /* "glProgramUniformMatrix3x4fv" */,
        43364 /* "glProgramUniformMatrix3x4fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43392 /* "glProgramUniformMatrix3x4fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX4DVPROC
epoxy_glProgramUniformMatrix4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43423 /* "glProgramUniformMatrix4dv" */,
        43423 /* "glProgramUniformMatrix4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43423 /* "glProgramUniformMatrix4dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC
epoxy_glProgramUniformMatrix4dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 43449 /* glProgramUniformMatrix4dvEXT */);
}

static PFNGLPROGRAMUNIFORMMATRIX4FVPROC
epoxy_glProgramUniformMatrix4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43478 /* "glProgramUniformMatrix4fv" */,
        43478 /* "glProgramUniformMatrix4fv" */,
        43478 /* "glProgramUniformMatrix4fv" */,
        43504 /* "glProgramUniformMatrix4fvEXT" */,
        43504 /* "glProgramUniformMatrix4fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43478 /* "glProgramUniformMatrix4fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
epoxy_glProgramUniformMatrix4fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43504 /* "glProgramUniformMatrix4fvEXT" */,
        43504 /* "glProgramUniformMatrix4fvEXT" */,
        43478 /* "glProgramUniformMatrix4fv" */,
        43478 /* "glProgramUniformMatrix4fv" */,
        43478 /* "glProgramUniformMatrix4fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43504 /* "glProgramUniformMatrix4fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
epoxy_glProgramUniformMatrix4x2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43533 /* "glProgramUniformMatrix4x2dv" */,
        43533 /* "glProgramUniformMatrix4x2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43533 /* "glProgramUniformMatrix4x2dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC
epoxy_glProgramUniformMatrix4x2dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 43561 /* glProgramUniformMatrix4x2dvEXT */);
}

static PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
epoxy_glProgramUniformMatrix4x2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43592 /* "glProgramUniformMatrix4x2fv" */,
        43592 /* "glProgramUniformMatrix4x2fv" */,
        43592 /* "glProgramUniformMatrix4x2fv" */,
        43620 /* "glProgramUniformMatrix4x2fvEXT" */,
        43620 /* "glProgramUniformMatrix4x2fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43592 /* "glProgramUniformMatrix4x2fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
epoxy_glProgramUniformMatrix4x2fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43620 /* "glProgramUniformMatrix4x2fvEXT" */,
        43620 /* "glProgramUniformMatrix4x2fvEXT" */,
        43592 /* "glProgramUniformMatrix4x2fv" */,
        43592 /* "glProgramUniformMatrix4x2fv" */,
        43592 /* "glProgramUniformMatrix4x2fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43620 /* "glProgramUniformMatrix4x2fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
epoxy_glProgramUniformMatrix4x3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43651 /* "glProgramUniformMatrix4x3dv" */,
        43651 /* "glProgramUniformMatrix4x3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43651 /* "glProgramUniformMatrix4x3dv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC
epoxy_glProgramUniformMatrix4x3dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 43679 /* glProgramUniformMatrix4x3dvEXT */);
}

static PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
epoxy_glProgramUniformMatrix4x3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43710 /* "glProgramUniformMatrix4x3fv" */,
        43710 /* "glProgramUniformMatrix4x3fv" */,
        43710 /* "glProgramUniformMatrix4x3fv" */,
        43738 /* "glProgramUniformMatrix4x3fvEXT" */,
        43738 /* "glProgramUniformMatrix4x3fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43710 /* "glProgramUniformMatrix4x3fv" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
epoxy_glProgramUniformMatrix4x3fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_separate_shader_objects,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43738 /* "glProgramUniformMatrix4x3fvEXT" */,
        43738 /* "glProgramUniformMatrix4x3fvEXT" */,
        43710 /* "glProgramUniformMatrix4x3fv" */,
        43710 /* "glProgramUniformMatrix4x3fv" */,
        43710 /* "glProgramUniformMatrix4x3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43738 /* "glProgramUniformMatrix4x3fvEXT" */,
                                providers, entrypoints);
}

static PFNGLPROGRAMUNIFORMUI64NVPROC
epoxy_glProgramUniformui64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 43769 /* glProgramUniformui64NV */);
}

static PFNGLPROGRAMUNIFORMUI64VNVPROC
epoxy_glProgramUniformui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 43792 /* glProgramUniformui64vNV */);
}

static PFNGLPROGRAMVERTEXLIMITNVPROC
epoxy_glProgramVertexLimitNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_geometry_program4, 43816 /* glProgramVertexLimitNV */);
}

static PFNGLPROVOKINGVERTEXPROC
epoxy_glProvokingVertex_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_provoking_vertex,
        GL_extension_GL_EXT_provoking_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43839 /* "glProvokingVertex" */,
        43839 /* "glProvokingVertex" */,
        43857 /* "glProvokingVertexEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43839 /* "glProvokingVertex" */,
                                providers, entrypoints);
}

static PFNGLPROVOKINGVERTEXEXTPROC
epoxy_glProvokingVertexEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_provoking_vertex,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_provoking_vertex,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43857 /* "glProvokingVertexEXT" */,
        43839 /* "glProvokingVertex" */,
        43839 /* "glProvokingVertex" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43857 /* "glProvokingVertexEXT" */,
                                providers, entrypoints);
}

static PFNGLPUSHATTRIBPROC
epoxy_glPushAttrib_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 43878 /* glPushAttrib */);
}

static PFNGLPUSHCLIENTATTRIBPROC
epoxy_glPushClientAttrib_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_1, 43891 /* glPushClientAttrib */);
}

static PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
epoxy_glPushClientAttribDefaultEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 43910 /* glPushClientAttribDefaultEXT */);
}

static PFNGLPUSHDEBUGGROUPPROC
epoxy_glPushDebugGroup_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43939 /* "glPushDebugGroup" */,
        43939 /* "glPushDebugGroup" */,
        43956 /* "glPushDebugGroupKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43939 /* "glPushDebugGroup" */,
                                providers, entrypoints);
}

static PFNGLPUSHDEBUGGROUPKHRPROC
epoxy_glPushDebugGroupKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_debug,
        Desktop_OpenGL_4_3,
        GL_extension_GL_KHR_debug,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43956 /* "glPushDebugGroupKHR" */,
        43939 /* "glPushDebugGroup" */,
        43939 /* "glPushDebugGroup" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43956 /* "glPushDebugGroupKHR" */,
                                providers, entrypoints);
}

static PFNGLPUSHGROUPMARKEREXTPROC
epoxy_glPushGroupMarkerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_debug_marker, 43976 /* glPushGroupMarkerEXT */);
}

static PFNGLPUSHMATRIXPROC
epoxy_glPushMatrix_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        43997 /* "glPushMatrix" */,
        43997 /* "glPushMatrix" */,
    };
    return gl_provider_resolver(entrypoint_strings + 43997 /* "glPushMatrix" */,
                                providers, entrypoints);
}

static PFNGLPUSHNAMEPROC
epoxy_glPushName_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44010 /* glPushName */);
}

static PFNGLQUERYCOUNTERPROC
epoxy_glQueryCounter_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_timer_query,
        GL_extension_GL_EXT_disjoint_timer_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44021 /* "glQueryCounter" */,
        44021 /* "glQueryCounter" */,
        44036 /* "glQueryCounterEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44021 /* "glQueryCounter" */,
                                providers, entrypoints);
}

static PFNGLQUERYCOUNTEREXTPROC
epoxy_glQueryCounterEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_disjoint_timer_query,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_timer_query,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44036 /* "glQueryCounterEXT" */,
        44021 /* "glQueryCounter" */,
        44021 /* "glQueryCounter" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44036 /* "glQueryCounterEXT" */,
                                providers, entrypoints);
}

static PFNGLQUERYMATRIXXOESPROC
epoxy_glQueryMatrixxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_query_matrix, 44054 /* glQueryMatrixxOES */);
}

static PFNGLQUERYOBJECTPARAMETERUIAMDPROC
epoxy_glQueryObjectParameteruiAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_occlusion_query_event, 44072 /* glQueryObjectParameteruiAMD */);
}

static PFNGLRASTERPOS2DPROC
epoxy_glRasterPos2d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44100 /* glRasterPos2d */);
}

static PFNGLRASTERPOS2DVPROC
epoxy_glRasterPos2dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44114 /* glRasterPos2dv */);
}

static PFNGLRASTERPOS2FPROC
epoxy_glRasterPos2f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44129 /* glRasterPos2f */);
}

static PFNGLRASTERPOS2FVPROC
epoxy_glRasterPos2fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44143 /* glRasterPos2fv */);
}

static PFNGLRASTERPOS2IPROC
epoxy_glRasterPos2i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44158 /* glRasterPos2i */);
}

static PFNGLRASTERPOS2IVPROC
epoxy_glRasterPos2iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44172 /* glRasterPos2iv */);
}

static PFNGLRASTERPOS2SPROC
epoxy_glRasterPos2s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44187 /* glRasterPos2s */);
}

static PFNGLRASTERPOS2SVPROC
epoxy_glRasterPos2sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44201 /* glRasterPos2sv */);
}

static PFNGLRASTERPOS2XOESPROC
epoxy_glRasterPos2xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44216 /* glRasterPos2xOES */);
}

static PFNGLRASTERPOS2XVOESPROC
epoxy_glRasterPos2xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44233 /* glRasterPos2xvOES */);
}

static PFNGLRASTERPOS3DPROC
epoxy_glRasterPos3d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44251 /* glRasterPos3d */);
}

static PFNGLRASTERPOS3DVPROC
epoxy_glRasterPos3dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44265 /* glRasterPos3dv */);
}

static PFNGLRASTERPOS3FPROC
epoxy_glRasterPos3f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44280 /* glRasterPos3f */);
}

static PFNGLRASTERPOS3FVPROC
epoxy_glRasterPos3fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44294 /* glRasterPos3fv */);
}

static PFNGLRASTERPOS3IPROC
epoxy_glRasterPos3i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44309 /* glRasterPos3i */);
}

static PFNGLRASTERPOS3IVPROC
epoxy_glRasterPos3iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44323 /* glRasterPos3iv */);
}

static PFNGLRASTERPOS3SPROC
epoxy_glRasterPos3s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44338 /* glRasterPos3s */);
}

static PFNGLRASTERPOS3SVPROC
epoxy_glRasterPos3sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44352 /* glRasterPos3sv */);
}

static PFNGLRASTERPOS3XOESPROC
epoxy_glRasterPos3xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44367 /* glRasterPos3xOES */);
}

static PFNGLRASTERPOS3XVOESPROC
epoxy_glRasterPos3xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44384 /* glRasterPos3xvOES */);
}

static PFNGLRASTERPOS4DPROC
epoxy_glRasterPos4d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44402 /* glRasterPos4d */);
}

static PFNGLRASTERPOS4DVPROC
epoxy_glRasterPos4dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44416 /* glRasterPos4dv */);
}

static PFNGLRASTERPOS4FPROC
epoxy_glRasterPos4f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44431 /* glRasterPos4f */);
}

static PFNGLRASTERPOS4FVPROC
epoxy_glRasterPos4fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44445 /* glRasterPos4fv */);
}

static PFNGLRASTERPOS4IPROC
epoxy_glRasterPos4i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44460 /* glRasterPos4i */);
}

static PFNGLRASTERPOS4IVPROC
epoxy_glRasterPos4iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44474 /* glRasterPos4iv */);
}

static PFNGLRASTERPOS4SPROC
epoxy_glRasterPos4s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44489 /* glRasterPos4s */);
}

static PFNGLRASTERPOS4SVPROC
epoxy_glRasterPos4sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44503 /* glRasterPos4sv */);
}

static PFNGLRASTERPOS4XOESPROC
epoxy_glRasterPos4xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44518 /* glRasterPos4xOES */);
}

static PFNGLRASTERPOS4XVOESPROC
epoxy_glRasterPos4xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44535 /* glRasterPos4xvOES */);
}

static PFNGLRASTERSAMPLESEXTPROC
epoxy_glRasterSamplesEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_raster_multisample,
        GL_extension_GL_EXT_texture_filter_minmax,
        GL_extension_GL_NV_framebuffer_mixed_samples,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44553 /* "glRasterSamplesEXT" */,
        44553 /* "glRasterSamplesEXT" */,
        44553 /* "glRasterSamplesEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44553 /* "glRasterSamplesEXT" */,
                                providers, entrypoints);
}

static PFNGLREADBUFFERPROC
epoxy_glReadBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44572 /* "glReadBuffer" */,
        44572 /* "glReadBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44572 /* "glReadBuffer" */,
                                providers, entrypoints);
}

static PFNGLREADBUFFERINDEXEDEXTPROC
epoxy_glReadBufferIndexedEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_multiview_draw_buffers, 44585 /* glReadBufferIndexedEXT */);
}

static PFNGLREADBUFFERNVPROC
epoxy_glReadBufferNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_read_buffer, 44608 /* glReadBufferNV */);
}

static PFNGLREADINSTRUMENTSSGIXPROC
epoxy_glReadInstrumentsSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 44623 /* glReadInstrumentsSGIX */);
}

static PFNGLREADPIXELSPROC
epoxy_glReadPixels_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44645 /* "glReadPixels" */,
        44645 /* "glReadPixels" */,
        44645 /* "glReadPixels" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44645 /* "glReadPixels" */,
                                providers, entrypoints);
}

static PFNGLREADNPIXELSPROC
epoxy_glReadnPixels_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        GL_extension_GL_ARB_robustness,
        GL_extension_GL_EXT_robustness,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44658 /* "glReadnPixels" */,
        44658 /* "glReadnPixels" */,
        44672 /* "glReadnPixelsARB" */,
        44689 /* "glReadnPixelsEXT" */,
        44706 /* "glReadnPixelsKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44658 /* "glReadnPixels" */,
                                providers, entrypoints);
}

static PFNGLREADNPIXELSARBPROC
epoxy_glReadnPixelsARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_robustness,
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        GL_extension_GL_EXT_robustness,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44672 /* "glReadnPixelsARB" */,
        44658 /* "glReadnPixels" */,
        44658 /* "glReadnPixels" */,
        44689 /* "glReadnPixelsEXT" */,
        44706 /* "glReadnPixelsKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44672 /* "glReadnPixelsARB" */,
                                providers, entrypoints);
}

static PFNGLREADNPIXELSEXTPROC
epoxy_glReadnPixelsEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_robustness,
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        GL_extension_GL_ARB_robustness,
        GL_extension_GL_KHR_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44689 /* "glReadnPixelsEXT" */,
        44658 /* "glReadnPixels" */,
        44658 /* "glReadnPixels" */,
        44672 /* "glReadnPixelsARB" */,
        44706 /* "glReadnPixelsKHR" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44689 /* "glReadnPixelsEXT" */,
                                providers, entrypoints);
}

static PFNGLREADNPIXELSKHRPROC
epoxy_glReadnPixelsKHR_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_KHR_robustness,
        Desktop_OpenGL_4_5,
        GL_extension_GL_KHR_robustness,
        GL_extension_GL_ARB_robustness,
        GL_extension_GL_EXT_robustness,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44706 /* "glReadnPixelsKHR" */,
        44658 /* "glReadnPixels" */,
        44658 /* "glReadnPixels" */,
        44672 /* "glReadnPixelsARB" */,
        44689 /* "glReadnPixelsEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44706 /* "glReadnPixelsKHR" */,
                                providers, entrypoints);
}

static PFNGLRECTDPROC
epoxy_glRectd_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44723 /* glRectd */);
}

static PFNGLRECTDVPROC
epoxy_glRectdv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44731 /* glRectdv */);
}

static PFNGLRECTFPROC
epoxy_glRectf_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44740 /* glRectf */);
}

static PFNGLRECTFVPROC
epoxy_glRectfv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44748 /* glRectfv */);
}

static PFNGLRECTIPROC
epoxy_glRecti_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44757 /* glRecti */);
}

static PFNGLRECTIVPROC
epoxy_glRectiv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44765 /* glRectiv */);
}

static PFNGLRECTSPROC
epoxy_glRects_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44774 /* glRects */);
}

static PFNGLRECTSVPROC
epoxy_glRectsv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44782 /* glRectsv */);
}

static PFNGLRECTXOESPROC
epoxy_glRectxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44791 /* glRectxOES */);
}

static PFNGLRECTXVOESPROC
epoxy_glRectxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44802 /* glRectxvOES */);
}

static PFNGLREFERENCEPLANESGIXPROC
epoxy_glReferencePlaneSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_reference_plane, 44814 /* glReferencePlaneSGIX */);
}

static PFNGLRELEASESHADERCOMPILERPROC
epoxy_glReleaseShaderCompiler_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_ES2_compatibility,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44835 /* "glReleaseShaderCompiler" */,
        44835 /* "glReleaseShaderCompiler" */,
        44835 /* "glReleaseShaderCompiler" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44835 /* "glReleaseShaderCompiler" */,
                                providers, entrypoints);
}

static PFNGLRENDERMODEPROC
epoxy_glRenderMode_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 44859 /* glRenderMode */);
}

static PFNGLRENDERBUFFERSTORAGEPROC
epoxy_glRenderbufferStorage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_framebuffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44872 /* "glRenderbufferStorage" */,
        44872 /* "glRenderbufferStorage" */,
        44872 /* "glRenderbufferStorage" */,
        44894 /* "glRenderbufferStorageEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44872 /* "glRenderbufferStorage" */,
                                providers, entrypoints);
}

static PFNGLRENDERBUFFERSTORAGEEXTPROC
epoxy_glRenderbufferStorageEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_object,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44894 /* "glRenderbufferStorageEXT" */,
        44872 /* "glRenderbufferStorage" */,
        44872 /* "glRenderbufferStorage" */,
        44872 /* "glRenderbufferStorage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44894 /* "glRenderbufferStorageEXT" */,
                                providers, entrypoints);
}

static PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
epoxy_glRenderbufferStorageMultisample_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_framebuffer_multisample,
        GL_extension_GL_EXT_multisampled_render_to_texture,
        GL_extension_GL_NV_framebuffer_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        44919 /* "glRenderbufferStorageMultisample" */,
        44919 /* "glRenderbufferStorageMultisample" */,
        44919 /* "glRenderbufferStorageMultisample" */,
        45071 /* "glRenderbufferStorageMultisampleEXT" */,
        45071 /* "glRenderbufferStorageMultisampleEXT" */,
        45143 /* "glRenderbufferStorageMultisampleNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 44919 /* "glRenderbufferStorageMultisample" */,
                                providers, entrypoints);
}

static PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
epoxy_glRenderbufferStorageMultisampleANGLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ANGLE_framebuffer_multisample, 44952 /* glRenderbufferStorageMultisampleANGLE */);
}

static PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC
epoxy_glRenderbufferStorageMultisampleAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_framebuffer_multisample, 44990 /* glRenderbufferStorageMultisampleAPPLE */);
}

static PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
epoxy_glRenderbufferStorageMultisampleCoverageNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_framebuffer_multisample_coverage, 45028 /* glRenderbufferStorageMultisampleCoverageNV */);
}

static PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
epoxy_glRenderbufferStorageMultisampleEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_framebuffer_multisample,
        GL_extension_GL_EXT_multisampled_render_to_texture,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_framebuffer_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        45071 /* "glRenderbufferStorageMultisampleEXT" */,
        45071 /* "glRenderbufferStorageMultisampleEXT" */,
        44919 /* "glRenderbufferStorageMultisample" */,
        44919 /* "glRenderbufferStorageMultisample" */,
        44919 /* "glRenderbufferStorageMultisample" */,
        45143 /* "glRenderbufferStorageMultisampleNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 45071 /* "glRenderbufferStorageMultisampleEXT" */,
                                providers, entrypoints);
}

static PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC
epoxy_glRenderbufferStorageMultisampleIMG_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IMG_multisampled_render_to_texture, 45107 /* glRenderbufferStorageMultisampleIMG */);
}

static PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC
epoxy_glRenderbufferStorageMultisampleNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_framebuffer_multisample,
        Desktop_OpenGL_3_0,
        GL_extension_GL_ARB_framebuffer_object,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_framebuffer_multisample,
        GL_extension_GL_EXT_multisampled_render_to_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        45143 /* "glRenderbufferStorageMultisampleNV" */,
        44919 /* "glRenderbufferStorageMultisample" */,
        44919 /* "glRenderbufferStorageMultisample" */,
        44919 /* "glRenderbufferStorageMultisample" */,
        45071 /* "glRenderbufferStorageMultisampleEXT" */,
        45071 /* "glRenderbufferStorageMultisampleEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 45143 /* "glRenderbufferStorageMultisampleNV" */,
                                providers, entrypoints);
}

static PFNGLRENDERBUFFERSTORAGEOESPROC
epoxy_glRenderbufferStorageOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 45178 /* glRenderbufferStorageOES */);
}

static PFNGLREPLACEMENTCODEPOINTERSUNPROC
epoxy_glReplacementCodePointerSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 45203 /* glReplacementCodePointerSUN */);
}

static PFNGLREPLACEMENTCODEUBSUNPROC
epoxy_glReplacementCodeubSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 45231 /* glReplacementCodeubSUN */);
}

static PFNGLREPLACEMENTCODEUBVSUNPROC
epoxy_glReplacementCodeubvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 45254 /* glReplacementCodeubvSUN */);
}

static PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
epoxy_glReplacementCodeuiColor3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45278 /* glReplacementCodeuiColor3fVertex3fSUN */);
}

static PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
epoxy_glReplacementCodeuiColor3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45316 /* glReplacementCodeuiColor3fVertex3fvSUN */);
}

static PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
epoxy_glReplacementCodeuiColor4fNormal3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45355 /* glReplacementCodeuiColor4fNormal3fVertex3fSUN */);
}

static PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
epoxy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45401 /* glReplacementCodeuiColor4fNormal3fVertex3fvSUN */);
}

static PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
epoxy_glReplacementCodeuiColor4ubVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45448 /* glReplacementCodeuiColor4ubVertex3fSUN */);
}

static PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
epoxy_glReplacementCodeuiColor4ubVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45487 /* glReplacementCodeuiColor4ubVertex3fvSUN */);
}

static PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
epoxy_glReplacementCodeuiNormal3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45527 /* glReplacementCodeuiNormal3fVertex3fSUN */);
}

static PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
epoxy_glReplacementCodeuiNormal3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45566 /* glReplacementCodeuiNormal3fVertex3fvSUN */);
}

static PFNGLREPLACEMENTCODEUISUNPROC
epoxy_glReplacementCodeuiSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 45606 /* glReplacementCodeuiSUN */);
}

static PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45629 /* glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN */);
}

static PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45685 /* glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN */);
}

static PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45742 /* glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN */);
}

static PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45791 /* glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN */);
}

static PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
epoxy_glReplacementCodeuiTexCoord2fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45841 /* glReplacementCodeuiTexCoord2fVertex3fSUN */);
}

static PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
epoxy_glReplacementCodeuiTexCoord2fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45882 /* glReplacementCodeuiTexCoord2fVertex3fvSUN */);
}

static PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
epoxy_glReplacementCodeuiVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45924 /* glReplacementCodeuiVertex3fSUN */);
}

static PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
epoxy_glReplacementCodeuiVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45955 /* glReplacementCodeuiVertex3fvSUN */);
}

static PFNGLREPLACEMENTCODEUIVSUNPROC
epoxy_glReplacementCodeuivSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 45987 /* glReplacementCodeuivSUN */);
}

static PFNGLREPLACEMENTCODEUSSUNPROC
epoxy_glReplacementCodeusSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 46011 /* glReplacementCodeusSUN */);
}

static PFNGLREPLACEMENTCODEUSVSUNPROC
epoxy_glReplacementCodeusvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 46034 /* glReplacementCodeusvSUN */);
}

static PFNGLREQUESTRESIDENTPROGRAMSNVPROC
epoxy_glRequestResidentProgramsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 46058 /* glRequestResidentProgramsNV */);
}

static PFNGLRESETHISTOGRAMPROC
epoxy_glResetHistogram_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_histogram,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46086 /* "glResetHistogram" */,
        46103 /* "glResetHistogramEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46086 /* "glResetHistogram" */,
                                providers, entrypoints);
}

static PFNGLRESETHISTOGRAMEXTPROC
epoxy_glResetHistogramEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_histogram,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46103 /* "glResetHistogramEXT" */,
        46086 /* "glResetHistogram" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46103 /* "glResetHistogramEXT" */,
                                providers, entrypoints);
}

static PFNGLRESETMINMAXPROC
epoxy_glResetMinmax_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_histogram,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46123 /* "glResetMinmax" */,
        46137 /* "glResetMinmaxEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46123 /* "glResetMinmax" */,
                                providers, entrypoints);
}

static PFNGLRESETMINMAXEXTPROC
epoxy_glResetMinmaxEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_histogram,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46137 /* "glResetMinmaxEXT" */,
        46123 /* "glResetMinmax" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46137 /* "glResetMinmaxEXT" */,
                                providers, entrypoints);
}

static PFNGLRESIZEBUFFERSMESAPROC
epoxy_glResizeBuffersMESA_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_MESA_resize_buffers, 46154 /* glResizeBuffersMESA */);
}

static PFNGLRESOLVEDEPTHVALUESNVPROC
epoxy_glResolveDepthValuesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_sample_locations, 46174 /* glResolveDepthValuesNV */);
}

static PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC
epoxy_glResolveMultisampleFramebufferAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_framebuffer_multisample, 46197 /* glResolveMultisampleFramebufferAPPLE */);
}

static PFNGLRESUMETRANSFORMFEEDBACKPROC
epoxy_glResumeTransformFeedback_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_transform_feedback2,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46234 /* "glResumeTransformFeedback" */,
        46234 /* "glResumeTransformFeedback" */,
        46234 /* "glResumeTransformFeedback" */,
        46260 /* "glResumeTransformFeedbackNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46234 /* "glResumeTransformFeedback" */,
                                providers, entrypoints);
}

static PFNGLRESUMETRANSFORMFEEDBACKNVPROC
epoxy_glResumeTransformFeedbackNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_transform_feedback2,
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_transform_feedback2,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46260 /* "glResumeTransformFeedbackNV" */,
        46234 /* "glResumeTransformFeedback" */,
        46234 /* "glResumeTransformFeedback" */,
        46234 /* "glResumeTransformFeedback" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46260 /* "glResumeTransformFeedbackNV" */,
                                providers, entrypoints);
}

static PFNGLROTATEDPROC
epoxy_glRotated_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 46288 /* glRotated */);
}

static PFNGLROTATEFPROC
epoxy_glRotatef_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46298 /* "glRotatef" */,
        46298 /* "glRotatef" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46298 /* "glRotatef" */,
                                providers, entrypoints);
}

static PFNGLROTATEXPROC
epoxy_glRotatex_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 46308 /* glRotatex */);
}

static PFNGLROTATEXOESPROC
epoxy_glRotatexOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 46318 /* glRotatexOES */);
}

static PFNGLSAMPLECOVERAGEPROC
epoxy_glSampleCoverage_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46331 /* "glSampleCoverage" */,
        46331 /* "glSampleCoverage" */,
        46331 /* "glSampleCoverage" */,
        46348 /* "glSampleCoverageARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46331 /* "glSampleCoverage" */,
                                providers, entrypoints);
}

static PFNGLSAMPLECOVERAGEARBPROC
epoxy_glSampleCoverageARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_multisample,
        Desktop_OpenGL_1_3,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46348 /* "glSampleCoverageARB" */,
        46331 /* "glSampleCoverage" */,
        46331 /* "glSampleCoverage" */,
        46331 /* "glSampleCoverage" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46348 /* "glSampleCoverageARB" */,
                                providers, entrypoints);
}

static PFNGLSAMPLECOVERAGEXPROC
epoxy_glSampleCoveragex_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 46368 /* glSampleCoveragex */);
}

static PFNGLSAMPLECOVERAGEXOESPROC
epoxy_glSampleCoveragexOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 46386 /* glSampleCoveragexOES */);
}

static PFNGLSAMPLEMAPATIPROC
epoxy_glSampleMapATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 46407 /* glSampleMapATI */);
}

static PFNGLSAMPLEMASKEXTPROC
epoxy_glSampleMaskEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_multisample,
        GL_extension_GL_SGIS_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46422 /* "glSampleMaskEXT" */,
        46460 /* "glSampleMaskSGIS" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46422 /* "glSampleMaskEXT" */,
                                providers, entrypoints);
}

static PFNGLSAMPLEMASKINDEXEDNVPROC
epoxy_glSampleMaskIndexedNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_explicit_multisample, 46438 /* glSampleMaskIndexedNV */);
}

static PFNGLSAMPLEMASKSGISPROC
epoxy_glSampleMaskSGIS_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_SGIS_multisample,
        GL_extension_GL_EXT_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46460 /* "glSampleMaskSGIS" */,
        46422 /* "glSampleMaskEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46460 /* "glSampleMaskSGIS" */,
                                providers, entrypoints);
}

static PFNGLSAMPLEMASKIPROC
epoxy_glSampleMaski_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_texture_multisample,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46477 /* "glSampleMaski" */,
        46477 /* "glSampleMaski" */,
        46477 /* "glSampleMaski" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46477 /* "glSampleMaski" */,
                                providers, entrypoints);
}

static PFNGLSAMPLEPATTERNEXTPROC
epoxy_glSamplePatternEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_multisample,
        GL_extension_GL_SGIS_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46491 /* "glSamplePatternEXT" */,
        46510 /* "glSamplePatternSGIS" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46491 /* "glSamplePatternEXT" */,
                                providers, entrypoints);
}

static PFNGLSAMPLEPATTERNSGISPROC
epoxy_glSamplePatternSGIS_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_SGIS_multisample,
        GL_extension_GL_EXT_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46510 /* "glSamplePatternSGIS" */,
        46491 /* "glSamplePatternEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46510 /* "glSamplePatternSGIS" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERIIVPROC
epoxy_glSamplerParameterIiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46530 /* "glSamplerParameterIiv" */,
        46530 /* "glSamplerParameterIiv" */,
        46552 /* "glSamplerParameterIivEXT" */,
        46577 /* "glSamplerParameterIivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46530 /* "glSamplerParameterIiv" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERIIVEXTPROC
epoxy_glSamplerParameterIivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_border_clamp,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46552 /* "glSamplerParameterIivEXT" */,
        46530 /* "glSamplerParameterIiv" */,
        46530 /* "glSamplerParameterIiv" */,
        46577 /* "glSamplerParameterIivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46552 /* "glSamplerParameterIivEXT" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERIIVOESPROC
epoxy_glSamplerParameterIivOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_border_clamp,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_EXT_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46577 /* "glSamplerParameterIivOES" */,
        46530 /* "glSamplerParameterIiv" */,
        46530 /* "glSamplerParameterIiv" */,
        46552 /* "glSamplerParameterIivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46577 /* "glSamplerParameterIivOES" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERIUIVPROC
epoxy_glSamplerParameterIuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46602 /* "glSamplerParameterIuiv" */,
        46602 /* "glSamplerParameterIuiv" */,
        46625 /* "glSamplerParameterIuivEXT" */,
        46651 /* "glSamplerParameterIuivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46602 /* "glSamplerParameterIuiv" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERIUIVEXTPROC
epoxy_glSamplerParameterIuivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_border_clamp,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46625 /* "glSamplerParameterIuivEXT" */,
        46602 /* "glSamplerParameterIuiv" */,
        46602 /* "glSamplerParameterIuiv" */,
        46651 /* "glSamplerParameterIuivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46625 /* "glSamplerParameterIuivEXT" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERIUIVOESPROC
epoxy_glSamplerParameterIuivOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_border_clamp,
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        GL_extension_GL_EXT_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46651 /* "glSamplerParameterIuivOES" */,
        46602 /* "glSamplerParameterIuiv" */,
        46602 /* "glSamplerParameterIuiv" */,
        46625 /* "glSamplerParameterIuivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46651 /* "glSamplerParameterIuivOES" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERFPROC
epoxy_glSamplerParameterf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46677 /* "glSamplerParameterf" */,
        46677 /* "glSamplerParameterf" */,
        46677 /* "glSamplerParameterf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46677 /* "glSamplerParameterf" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERFVPROC
epoxy_glSamplerParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46697 /* "glSamplerParameterfv" */,
        46697 /* "glSamplerParameterfv" */,
        46697 /* "glSamplerParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46697 /* "glSamplerParameterfv" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERIPROC
epoxy_glSamplerParameteri_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46718 /* "glSamplerParameteri" */,
        46718 /* "glSamplerParameteri" */,
        46718 /* "glSamplerParameteri" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46718 /* "glSamplerParameteri" */,
                                providers, entrypoints);
}

static PFNGLSAMPLERPARAMETERIVPROC
epoxy_glSamplerParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_sampler_objects,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46738 /* "glSamplerParameteriv" */,
        46738 /* "glSamplerParameteriv" */,
        46738 /* "glSamplerParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46738 /* "glSamplerParameteriv" */,
                                providers, entrypoints);
}

static PFNGLSCALEDPROC
epoxy_glScaled_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 46759 /* glScaled */);
}

static PFNGLSCALEFPROC
epoxy_glScalef_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46768 /* "glScalef" */,
        46768 /* "glScalef" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46768 /* "glScalef" */,
                                providers, entrypoints);
}

static PFNGLSCALEXPROC
epoxy_glScalex_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 46777 /* glScalex */);
}

static PFNGLSCALEXOESPROC
epoxy_glScalexOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 46786 /* glScalexOES */);
}

static PFNGLSCISSORPROC
epoxy_glScissor_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46798 /* "glScissor" */,
        46798 /* "glScissor" */,
        46798 /* "glScissor" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46798 /* "glScissor" */,
                                providers, entrypoints);
}

static PFNGLSCISSORARRAYVPROC
epoxy_glScissorArrayv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46808 /* "glScissorArrayv" */,
        46808 /* "glScissorArrayv" */,
        46824 /* "glScissorArrayvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46808 /* "glScissorArrayv" */,
                                providers, entrypoints);
}

static PFNGLSCISSORARRAYVNVPROC
epoxy_glScissorArrayvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46824 /* "glScissorArrayvNV" */,
        46808 /* "glScissorArrayv" */,
        46808 /* "glScissorArrayv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46824 /* "glScissorArrayvNV" */,
                                providers, entrypoints);
}

static PFNGLSCISSORINDEXEDPROC
epoxy_glScissorIndexed_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46842 /* "glScissorIndexed" */,
        46842 /* "glScissorIndexed" */,
        46859 /* "glScissorIndexedNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46842 /* "glScissorIndexed" */,
                                providers, entrypoints);
}

static PFNGLSCISSORINDEXEDNVPROC
epoxy_glScissorIndexedNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46859 /* "glScissorIndexedNV" */,
        46842 /* "glScissorIndexed" */,
        46842 /* "glScissorIndexed" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46859 /* "glScissorIndexedNV" */,
                                providers, entrypoints);
}

static PFNGLSCISSORINDEXEDVPROC
epoxy_glScissorIndexedv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46878 /* "glScissorIndexedv" */,
        46878 /* "glScissorIndexedv" */,
        46896 /* "glScissorIndexedvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46878 /* "glScissorIndexedv" */,
                                providers, entrypoints);
}

static PFNGLSCISSORINDEXEDVNVPROC
epoxy_glScissorIndexedvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46896 /* "glScissorIndexedvNV" */,
        46878 /* "glScissorIndexedv" */,
        46878 /* "glScissorIndexedv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46896 /* "glScissorIndexedvNV" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3BPROC
epoxy_glSecondaryColor3b_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46916 /* "glSecondaryColor3b" */,
        46935 /* "glSecondaryColor3bEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46916 /* "glSecondaryColor3b" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3BEXTPROC
epoxy_glSecondaryColor3bEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46935 /* "glSecondaryColor3bEXT" */,
        46916 /* "glSecondaryColor3b" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46935 /* "glSecondaryColor3bEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3BVPROC
epoxy_glSecondaryColor3bv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46957 /* "glSecondaryColor3bv" */,
        46977 /* "glSecondaryColor3bvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46957 /* "glSecondaryColor3bv" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3BVEXTPROC
epoxy_glSecondaryColor3bvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        46977 /* "glSecondaryColor3bvEXT" */,
        46957 /* "glSecondaryColor3bv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 46977 /* "glSecondaryColor3bvEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3DPROC
epoxy_glSecondaryColor3d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47000 /* "glSecondaryColor3d" */,
        47019 /* "glSecondaryColor3dEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47000 /* "glSecondaryColor3d" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3DEXTPROC
epoxy_glSecondaryColor3dEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47019 /* "glSecondaryColor3dEXT" */,
        47000 /* "glSecondaryColor3d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47019 /* "glSecondaryColor3dEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3DVPROC
epoxy_glSecondaryColor3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47041 /* "glSecondaryColor3dv" */,
        47061 /* "glSecondaryColor3dvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47041 /* "glSecondaryColor3dv" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3DVEXTPROC
epoxy_glSecondaryColor3dvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47061 /* "glSecondaryColor3dvEXT" */,
        47041 /* "glSecondaryColor3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47061 /* "glSecondaryColor3dvEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3FPROC
epoxy_glSecondaryColor3f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47084 /* "glSecondaryColor3f" */,
        47103 /* "glSecondaryColor3fEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47084 /* "glSecondaryColor3f" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3FEXTPROC
epoxy_glSecondaryColor3fEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47103 /* "glSecondaryColor3fEXT" */,
        47084 /* "glSecondaryColor3f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47103 /* "glSecondaryColor3fEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3FVPROC
epoxy_glSecondaryColor3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47125 /* "glSecondaryColor3fv" */,
        47145 /* "glSecondaryColor3fvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47125 /* "glSecondaryColor3fv" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3FVEXTPROC
epoxy_glSecondaryColor3fvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47145 /* "glSecondaryColor3fvEXT" */,
        47125 /* "glSecondaryColor3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47145 /* "glSecondaryColor3fvEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3HNVPROC
epoxy_glSecondaryColor3hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 47168 /* glSecondaryColor3hNV */);
}

static PFNGLSECONDARYCOLOR3HVNVPROC
epoxy_glSecondaryColor3hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 47189 /* glSecondaryColor3hvNV */);
}

static PFNGLSECONDARYCOLOR3IPROC
epoxy_glSecondaryColor3i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47211 /* "glSecondaryColor3i" */,
        47230 /* "glSecondaryColor3iEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47211 /* "glSecondaryColor3i" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3IEXTPROC
epoxy_glSecondaryColor3iEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47230 /* "glSecondaryColor3iEXT" */,
        47211 /* "glSecondaryColor3i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47230 /* "glSecondaryColor3iEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3IVPROC
epoxy_glSecondaryColor3iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47252 /* "glSecondaryColor3iv" */,
        47272 /* "glSecondaryColor3ivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47252 /* "glSecondaryColor3iv" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3IVEXTPROC
epoxy_glSecondaryColor3ivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47272 /* "glSecondaryColor3ivEXT" */,
        47252 /* "glSecondaryColor3iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47272 /* "glSecondaryColor3ivEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3SPROC
epoxy_glSecondaryColor3s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47295 /* "glSecondaryColor3s" */,
        47314 /* "glSecondaryColor3sEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47295 /* "glSecondaryColor3s" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3SEXTPROC
epoxy_glSecondaryColor3sEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47314 /* "glSecondaryColor3sEXT" */,
        47295 /* "glSecondaryColor3s" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47314 /* "glSecondaryColor3sEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3SVPROC
epoxy_glSecondaryColor3sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47336 /* "glSecondaryColor3sv" */,
        47356 /* "glSecondaryColor3svEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47336 /* "glSecondaryColor3sv" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3SVEXTPROC
epoxy_glSecondaryColor3svEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47356 /* "glSecondaryColor3svEXT" */,
        47336 /* "glSecondaryColor3sv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47356 /* "glSecondaryColor3svEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3UBPROC
epoxy_glSecondaryColor3ub_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47379 /* "glSecondaryColor3ub" */,
        47399 /* "glSecondaryColor3ubEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47379 /* "glSecondaryColor3ub" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3UBEXTPROC
epoxy_glSecondaryColor3ubEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47399 /* "glSecondaryColor3ubEXT" */,
        47379 /* "glSecondaryColor3ub" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47399 /* "glSecondaryColor3ubEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3UBVPROC
epoxy_glSecondaryColor3ubv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47422 /* "glSecondaryColor3ubv" */,
        47443 /* "glSecondaryColor3ubvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47422 /* "glSecondaryColor3ubv" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3UBVEXTPROC
epoxy_glSecondaryColor3ubvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47443 /* "glSecondaryColor3ubvEXT" */,
        47422 /* "glSecondaryColor3ubv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47443 /* "glSecondaryColor3ubvEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3UIPROC
epoxy_glSecondaryColor3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47467 /* "glSecondaryColor3ui" */,
        47487 /* "glSecondaryColor3uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47467 /* "glSecondaryColor3ui" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3UIEXTPROC
epoxy_glSecondaryColor3uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47487 /* "glSecondaryColor3uiEXT" */,
        47467 /* "glSecondaryColor3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47487 /* "glSecondaryColor3uiEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3UIVPROC
epoxy_glSecondaryColor3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47510 /* "glSecondaryColor3uiv" */,
        47531 /* "glSecondaryColor3uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47510 /* "glSecondaryColor3uiv" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3UIVEXTPROC
epoxy_glSecondaryColor3uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47531 /* "glSecondaryColor3uivEXT" */,
        47510 /* "glSecondaryColor3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47531 /* "glSecondaryColor3uivEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3USPROC
epoxy_glSecondaryColor3us_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47555 /* "glSecondaryColor3us" */,
        47575 /* "glSecondaryColor3usEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47555 /* "glSecondaryColor3us" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3USEXTPROC
epoxy_glSecondaryColor3usEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47575 /* "glSecondaryColor3usEXT" */,
        47555 /* "glSecondaryColor3us" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47575 /* "glSecondaryColor3usEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3USVPROC
epoxy_glSecondaryColor3usv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47598 /* "glSecondaryColor3usv" */,
        47619 /* "glSecondaryColor3usvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47598 /* "glSecondaryColor3usv" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLOR3USVEXTPROC
epoxy_glSecondaryColor3usvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47619 /* "glSecondaryColor3usvEXT" */,
        47598 /* "glSecondaryColor3usv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47619 /* "glSecondaryColor3usvEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLORFORMATNVPROC
epoxy_glSecondaryColorFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 47643 /* glSecondaryColorFormatNV */);
}

static PFNGLSECONDARYCOLORP3UIPROC
epoxy_glSecondaryColorP3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47668 /* "glSecondaryColorP3ui" */,
        47668 /* "glSecondaryColorP3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47668 /* "glSecondaryColorP3ui" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLORP3UIVPROC
epoxy_glSecondaryColorP3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47689 /* "glSecondaryColorP3uiv" */,
        47689 /* "glSecondaryColorP3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47689 /* "glSecondaryColorP3uiv" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLORPOINTERPROC
epoxy_glSecondaryColorPointer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_EXT_secondary_color,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47711 /* "glSecondaryColorPointer" */,
        47735 /* "glSecondaryColorPointerEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47711 /* "glSecondaryColorPointer" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLORPOINTEREXTPROC
epoxy_glSecondaryColorPointerEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_secondary_color,
        Desktop_OpenGL_1_4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47735 /* "glSecondaryColorPointerEXT" */,
        47711 /* "glSecondaryColorPointer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47735 /* "glSecondaryColorPointerEXT" */,
                                providers, entrypoints);
}

static PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
epoxy_glSecondaryColorPointerListIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 47762 /* glSecondaryColorPointerListIBM */);
}

static PFNGLSELECTBUFFERPROC
epoxy_glSelectBuffer_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 47793 /* glSelectBuffer */);
}

static PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
epoxy_glSelectPerfMonitorCountersAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 47808 /* glSelectPerfMonitorCountersAMD */);
}

static PFNGLSEPARABLEFILTER2DPROC
epoxy_glSeparableFilter2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_imaging,
        GL_extension_GL_EXT_convolution,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47839 /* "glSeparableFilter2D" */,
        47859 /* "glSeparableFilter2DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47839 /* "glSeparableFilter2D" */,
                                providers, entrypoints);
}

static PFNGLSEPARABLEFILTER2DEXTPROC
epoxy_glSeparableFilter2DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_convolution,
        GL_extension_GL_ARB_imaging,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        47859 /* "glSeparableFilter2DEXT" */,
        47839 /* "glSeparableFilter2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 47859 /* "glSeparableFilter2DEXT" */,
                                providers, entrypoints);
}

static PFNGLSETFENCEAPPLEPROC
epoxy_glSetFenceAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 47882 /* glSetFenceAPPLE */);
}

static PFNGLSETFENCENVPROC
epoxy_glSetFenceNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fence, 47898 /* glSetFenceNV */);
}

static PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
epoxy_glSetFragmentShaderConstantATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 47911 /* glSetFragmentShaderConstantATI */);
}

static PFNGLSETINVARIANTEXTPROC
epoxy_glSetInvariantEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 47942 /* glSetInvariantEXT */);
}

static PFNGLSETLOCALCONSTANTEXTPROC
epoxy_glSetLocalConstantEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 47960 /* glSetLocalConstantEXT */);
}

static PFNGLSETMULTISAMPLEFVAMDPROC
epoxy_glSetMultisamplefvAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_sample_positions, 47982 /* glSetMultisamplefvAMD */);
}

static PFNGLSHADEMODELPROC
epoxy_glShadeModel_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48004 /* "glShadeModel" */,
        48004 /* "glShadeModel" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48004 /* "glShadeModel" */,
                                providers, entrypoints);
}

static PFNGLSHADERBINARYPROC
epoxy_glShaderBinary_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_ES2_compatibility,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48017 /* "glShaderBinary" */,
        48017 /* "glShaderBinary" */,
        48017 /* "glShaderBinary" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48017 /* "glShaderBinary" */,
                                providers, entrypoints);
}

static PFNGLSHADEROP1EXTPROC
epoxy_glShaderOp1EXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 48032 /* glShaderOp1EXT */);
}

static PFNGLSHADEROP2EXTPROC
epoxy_glShaderOp2EXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 48047 /* glShaderOp2EXT */);
}

static PFNGLSHADEROP3EXTPROC
epoxy_glShaderOp3EXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 48062 /* glShaderOp3EXT */);
}

static PFNGLSHADERSOURCEPROC
epoxy_glShaderSource_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48077 /* "glShaderSource" */,
        48077 /* "glShaderSource" */,
        48092 /* "glShaderSourceARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48077 /* "glShaderSource" */,
                                providers, entrypoints);
}

static PFNGLSHADERSOURCEARBPROC
epoxy_glShaderSourceARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48092 /* "glShaderSourceARB" */,
        48077 /* "glShaderSource" */,
        48077 /* "glShaderSource" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48092 /* "glShaderSourceARB" */,
                                providers, entrypoints);
}

static PFNGLSHADERSTORAGEBLOCKBINDINGPROC
epoxy_glShaderStorageBlockBinding_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_shader_storage_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48110 /* "glShaderStorageBlockBinding" */,
        48110 /* "glShaderStorageBlockBinding" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48110 /* "glShaderStorageBlockBinding" */,
                                providers, entrypoints);
}

static PFNGLSHARPENTEXFUNCSGISPROC
epoxy_glSharpenTexFuncSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_sharpen_texture, 48138 /* glSharpenTexFuncSGIS */);
}

static PFNGLSPRITEPARAMETERFSGIXPROC
epoxy_glSpriteParameterfSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_sprite, 48159 /* glSpriteParameterfSGIX */);
}

static PFNGLSPRITEPARAMETERFVSGIXPROC
epoxy_glSpriteParameterfvSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_sprite, 48182 /* glSpriteParameterfvSGIX */);
}

static PFNGLSPRITEPARAMETERISGIXPROC
epoxy_glSpriteParameteriSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_sprite, 48206 /* glSpriteParameteriSGIX */);
}

static PFNGLSPRITEPARAMETERIVSGIXPROC
epoxy_glSpriteParameterivSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_sprite, 48229 /* glSpriteParameterivSGIX */);
}

static PFNGLSTARTINSTRUMENTSSGIXPROC
epoxy_glStartInstrumentsSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 48253 /* glStartInstrumentsSGIX */);
}

static PFNGLSTARTTILINGQCOMPROC
epoxy_glStartTilingQCOM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_QCOM_tiled_rendering, 48276 /* glStartTilingQCOM */);
}

static PFNGLSTATECAPTURENVPROC
epoxy_glStateCaptureNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_command_list, 48294 /* glStateCaptureNV */);
}

static PFNGLSTENCILCLEARTAGEXTPROC
epoxy_glStencilClearTagEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_stencil_clear_tag, 48311 /* glStencilClearTagEXT */);
}

static PFNGLSTENCILFILLPATHINSTANCEDNVPROC
epoxy_glStencilFillPathInstancedNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 48332 /* glStencilFillPathInstancedNV */);
}

static PFNGLSTENCILFILLPATHNVPROC
epoxy_glStencilFillPathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 48361 /* glStencilFillPathNV */);
}

static PFNGLSTENCILFUNCPROC
epoxy_glStencilFunc_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48381 /* "glStencilFunc" */,
        48381 /* "glStencilFunc" */,
        48381 /* "glStencilFunc" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48381 /* "glStencilFunc" */,
                                providers, entrypoints);
}

static PFNGLSTENCILFUNCSEPARATEPROC
epoxy_glStencilFuncSeparate_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48395 /* "glStencilFuncSeparate" */,
        48395 /* "glStencilFuncSeparate" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48395 /* "glStencilFuncSeparate" */,
                                providers, entrypoints);
}

static PFNGLSTENCILFUNCSEPARATEATIPROC
epoxy_glStencilFuncSeparateATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_separate_stencil, 48417 /* glStencilFuncSeparateATI */);
}

static PFNGLSTENCILMASKPROC
epoxy_glStencilMask_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48442 /* "glStencilMask" */,
        48442 /* "glStencilMask" */,
        48442 /* "glStencilMask" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48442 /* "glStencilMask" */,
                                providers, entrypoints);
}

static PFNGLSTENCILMASKSEPARATEPROC
epoxy_glStencilMaskSeparate_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48456 /* "glStencilMaskSeparate" */,
        48456 /* "glStencilMaskSeparate" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48456 /* "glStencilMaskSeparate" */,
                                providers, entrypoints);
}

static PFNGLSTENCILOPPROC
epoxy_glStencilOp_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48478 /* "glStencilOp" */,
        48478 /* "glStencilOp" */,
        48478 /* "glStencilOp" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48478 /* "glStencilOp" */,
                                providers, entrypoints);
}

static PFNGLSTENCILOPSEPARATEPROC
epoxy_glStencilOpSeparate_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ATI_separate_stencil,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48490 /* "glStencilOpSeparate" */,
        48490 /* "glStencilOpSeparate" */,
        48510 /* "glStencilOpSeparateATI" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48490 /* "glStencilOpSeparate" */,
                                providers, entrypoints);
}

static PFNGLSTENCILOPSEPARATEATIPROC
epoxy_glStencilOpSeparateATI_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ATI_separate_stencil,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        48510 /* "glStencilOpSeparateATI" */,
        48490 /* "glStencilOpSeparate" */,
        48490 /* "glStencilOpSeparate" */,
    };
    return gl_provider_resolver(entrypoint_strings + 48510 /* "glStencilOpSeparateATI" */,
                                providers, entrypoints);
}

static PFNGLSTENCILOPVALUEAMDPROC
epoxy_glStencilOpValueAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_stencil_operation_extended, 48533 /* glStencilOpValueAMD */);
}

static PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC
epoxy_glStencilStrokePathInstancedNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 48553 /* glStencilStrokePathInstancedNV */);
}

static PFNGLSTENCILSTROKEPATHNVPROC
epoxy_glStencilStrokePathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 48584 /* glStencilStrokePathNV */);
}

static PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC
epoxy_glStencilThenCoverFillPathInstancedNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 48606 /* glStencilThenCoverFillPathInstancedNV */);
}

static PFNGLSTENCILTHENCOVERFILLPATHNVPROC
epoxy_glStencilThenCoverFillPathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 48644 /* glStencilThenCoverFillPathNV */);
}

static PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC
epoxy_glStencilThenCoverStrokePathInstancedNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 48673 /* glStencilThenCoverStrokePathInstancedNV */);
}

static PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC
epoxy_glStencilThenCoverStrokePathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 48713 /* glStencilThenCoverStrokePathNV */);
}

static PFNGLSTOPINSTRUMENTSSGIXPROC
epoxy_glStopInstrumentsSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 48744 /* glStopInstrumentsSGIX */);
}

static PFNGLSTRINGMARKERGREMEDYPROC
epoxy_glStringMarkerGREMEDY_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_GREMEDY_string_marker, 48766 /* glStringMarkerGREMEDY */);
}

static PFNGLSUBPIXELPRECISIONBIASNVPROC
epoxy_glSubpixelPrecisionBiasNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_conservative_raster, 48788 /* glSubpixelPrecisionBiasNV */);
}

static PFNGLSWIZZLEEXTPROC
epoxy_glSwizzleEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 48814 /* glSwizzleEXT */);
}

static PFNGLSYNCTEXTUREINTELPROC
epoxy_glSyncTextureINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_map_texture, 48827 /* glSyncTextureINTEL */);
}

static PFNGLTAGSAMPLEBUFFERSGIXPROC
epoxy_glTagSampleBufferSGIX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIX_tag_sample_buffer, 48846 /* glTagSampleBufferSGIX */);
}

static PFNGLTANGENT3BEXTPROC
epoxy_glTangent3bEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 48868 /* glTangent3bEXT */);
}

static PFNGLTANGENT3BVEXTPROC
epoxy_glTangent3bvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 48883 /* glTangent3bvEXT */);
}

static PFNGLTANGENT3DEXTPROC
epoxy_glTangent3dEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 48899 /* glTangent3dEXT */);
}

static PFNGLTANGENT3DVEXTPROC
epoxy_glTangent3dvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 48914 /* glTangent3dvEXT */);
}

static PFNGLTANGENT3FEXTPROC
epoxy_glTangent3fEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 48930 /* glTangent3fEXT */);
}

static PFNGLTANGENT3FVEXTPROC
epoxy_glTangent3fvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 48945 /* glTangent3fvEXT */);
}

static PFNGLTANGENT3IEXTPROC
epoxy_glTangent3iEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 48961 /* glTangent3iEXT */);
}

static PFNGLTANGENT3IVEXTPROC
epoxy_glTangent3ivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 48976 /* glTangent3ivEXT */);
}

static PFNGLTANGENT3SEXTPROC
epoxy_glTangent3sEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 48992 /* glTangent3sEXT */);
}

static PFNGLTANGENT3SVEXTPROC
epoxy_glTangent3svEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 49007 /* glTangent3svEXT */);
}

static PFNGLTANGENTPOINTEREXTPROC
epoxy_glTangentPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 49023 /* glTangentPointerEXT */);
}

static PFNGLTBUFFERMASK3DFXPROC
epoxy_glTbufferMask3DFX_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_3DFX_tbuffer, 49043 /* glTbufferMask3DFX */);
}

static PFNGLTESSELLATIONFACTORAMDPROC
epoxy_glTessellationFactorAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_vertex_shader_tessellator, 49061 /* glTessellationFactorAMD */);
}

static PFNGLTESSELLATIONMODEAMDPROC
epoxy_glTessellationModeAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_vertex_shader_tessellator, 49085 /* glTessellationModeAMD */);
}

static PFNGLTESTFENCEAPPLEPROC
epoxy_glTestFenceAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 49107 /* glTestFenceAPPLE */);
}

static PFNGLTESTFENCENVPROC
epoxy_glTestFenceNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_fence, 49124 /* glTestFenceNV */);
}

static PFNGLTESTOBJECTAPPLEPROC
epoxy_glTestObjectAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 49138 /* glTestObjectAPPLE */);
}

static PFNGLTEXBUFFERPROC
epoxy_glTexBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_texture_buffer_object,
        GL_extension_GL_EXT_texture_buffer,
        GL_extension_GL_EXT_texture_buffer_object,
        GL_extension_GL_OES_texture_buffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        49156 /* "glTexBuffer" */,
        49168 /* "glTexBufferARB" */,
        49183 /* "glTexBufferEXT" */,
        49183 /* "glTexBufferEXT" */,
        49198 /* "glTexBufferOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 49156 /* "glTexBuffer" */,
                                providers, entrypoints);
}

static PFNGLTEXBUFFERARBPROC
epoxy_glTexBufferARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_texture_buffer_object,
        Desktop_OpenGL_3_1,
        GL_extension_GL_EXT_texture_buffer,
        GL_extension_GL_EXT_texture_buffer_object,
        GL_extension_GL_OES_texture_buffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        49168 /* "glTexBufferARB" */,
        49156 /* "glTexBuffer" */,
        49183 /* "glTexBufferEXT" */,
        49183 /* "glTexBufferEXT" */,
        49198 /* "glTexBufferOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 49168 /* "glTexBufferARB" */,
                                providers, entrypoints);
}

static PFNGLTEXBUFFEREXTPROC
epoxy_glTexBufferEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_buffer,
        GL_extension_GL_EXT_texture_buffer_object,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_texture_buffer_object,
        GL_extension_GL_OES_texture_buffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        49183 /* "glTexBufferEXT" */,
        49183 /* "glTexBufferEXT" */,
        49156 /* "glTexBuffer" */,
        49168 /* "glTexBufferARB" */,
        49198 /* "glTexBufferOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 49183 /* "glTexBufferEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXBUFFEROESPROC
epoxy_glTexBufferOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_buffer,
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_texture_buffer_object,
        GL_extension_GL_EXT_texture_buffer,
        GL_extension_GL_EXT_texture_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        49198 /* "glTexBufferOES" */,
        49156 /* "glTexBuffer" */,
        49168 /* "glTexBufferARB" */,
        49183 /* "glTexBufferEXT" */,
        49183 /* "glTexBufferEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 49198 /* "glTexBufferOES" */,
                                providers, entrypoints);
}

static PFNGLTEXBUFFERRANGEPROC
epoxy_glTexBufferRange_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_texture_buffer_range,
        GL_extension_GL_EXT_texture_buffer,
        GL_extension_GL_OES_texture_buffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        49213 /* "glTexBufferRange" */,
        49213 /* "glTexBufferRange" */,
        49230 /* "glTexBufferRangeEXT" */,
        49250 /* "glTexBufferRangeOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 49213 /* "glTexBufferRange" */,
                                providers, entrypoints);
}

static PFNGLTEXBUFFERRANGEEXTPROC
epoxy_glTexBufferRangeEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_buffer,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_texture_buffer_range,
        GL_extension_GL_OES_texture_buffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        49230 /* "glTexBufferRangeEXT" */,
        49213 /* "glTexBufferRange" */,
        49213 /* "glTexBufferRange" */,
        49250 /* "glTexBufferRangeOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 49230 /* "glTexBufferRangeEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXBUFFERRANGEOESPROC
epoxy_glTexBufferRangeOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_buffer,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_texture_buffer_range,
        GL_extension_GL_EXT_texture_buffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        49250 /* "glTexBufferRangeOES" */,
        49213 /* "glTexBufferRange" */,
        49213 /* "glTexBufferRange" */,
        49230 /* "glTexBufferRangeEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 49250 /* "glTexBufferRangeOES" */,
                                providers, entrypoints);
}

static PFNGLTEXBUMPPARAMETERFVATIPROC
epoxy_glTexBumpParameterfvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_envmap_bumpmap, 49270 /* glTexBumpParameterfvATI */);
}

static PFNGLTEXBUMPPARAMETERIVATIPROC
epoxy_glTexBumpParameterivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_envmap_bumpmap, 49294 /* glTexBumpParameterivATI */);
}

static PFNGLTEXCOORD1BOESPROC
epoxy_glTexCoord1bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 49318 /* glTexCoord1bOES */);
}

static PFNGLTEXCOORD1BVOESPROC
epoxy_glTexCoord1bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 49334 /* glTexCoord1bvOES */);
}

static PFNGLTEXCOORD1DPROC
epoxy_glTexCoord1d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49351 /* glTexCoord1d */);
}

static PFNGLTEXCOORD1DVPROC
epoxy_glTexCoord1dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49364 /* glTexCoord1dv */);
}

static PFNGLTEXCOORD1FPROC
epoxy_glTexCoord1f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49378 /* glTexCoord1f */);
}

static PFNGLTEXCOORD1FVPROC
epoxy_glTexCoord1fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49391 /* glTexCoord1fv */);
}

static PFNGLTEXCOORD1HNVPROC
epoxy_glTexCoord1hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 49405 /* glTexCoord1hNV */);
}

static PFNGLTEXCOORD1HVNVPROC
epoxy_glTexCoord1hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 49420 /* glTexCoord1hvNV */);
}

static PFNGLTEXCOORD1IPROC
epoxy_glTexCoord1i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49436 /* glTexCoord1i */);
}

static PFNGLTEXCOORD1IVPROC
epoxy_glTexCoord1iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49449 /* glTexCoord1iv */);
}

static PFNGLTEXCOORD1SPROC
epoxy_glTexCoord1s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49463 /* glTexCoord1s */);
}

static PFNGLTEXCOORD1SVPROC
epoxy_glTexCoord1sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49476 /* glTexCoord1sv */);
}

static PFNGLTEXCOORD1XOESPROC
epoxy_glTexCoord1xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 49490 /* glTexCoord1xOES */);
}

static PFNGLTEXCOORD1XVOESPROC
epoxy_glTexCoord1xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 49506 /* glTexCoord1xvOES */);
}

static PFNGLTEXCOORD2BOESPROC
epoxy_glTexCoord2bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 49523 /* glTexCoord2bOES */);
}

static PFNGLTEXCOORD2BVOESPROC
epoxy_glTexCoord2bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 49539 /* glTexCoord2bvOES */);
}

static PFNGLTEXCOORD2DPROC
epoxy_glTexCoord2d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49556 /* glTexCoord2d */);
}

static PFNGLTEXCOORD2DVPROC
epoxy_glTexCoord2dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49569 /* glTexCoord2dv */);
}

static PFNGLTEXCOORD2FPROC
epoxy_glTexCoord2f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49583 /* glTexCoord2f */);
}

static PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
epoxy_glTexCoord2fColor3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49596 /* glTexCoord2fColor3fVertex3fSUN */);
}

static PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
epoxy_glTexCoord2fColor3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49627 /* glTexCoord2fColor3fVertex3fvSUN */);
}

static PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
epoxy_glTexCoord2fColor4fNormal3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49659 /* glTexCoord2fColor4fNormal3fVertex3fSUN */);
}

static PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
epoxy_glTexCoord2fColor4fNormal3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49698 /* glTexCoord2fColor4fNormal3fVertex3fvSUN */);
}

static PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
epoxy_glTexCoord2fColor4ubVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49738 /* glTexCoord2fColor4ubVertex3fSUN */);
}

static PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
epoxy_glTexCoord2fColor4ubVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49770 /* glTexCoord2fColor4ubVertex3fvSUN */);
}

static PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
epoxy_glTexCoord2fNormal3fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49803 /* glTexCoord2fNormal3fVertex3fSUN */);
}

static PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
epoxy_glTexCoord2fNormal3fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49835 /* glTexCoord2fNormal3fVertex3fvSUN */);
}

static PFNGLTEXCOORD2FVERTEX3FSUNPROC
epoxy_glTexCoord2fVertex3fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49868 /* glTexCoord2fVertex3fSUN */);
}

static PFNGLTEXCOORD2FVERTEX3FVSUNPROC
epoxy_glTexCoord2fVertex3fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 49892 /* glTexCoord2fVertex3fvSUN */);
}

static PFNGLTEXCOORD2FVPROC
epoxy_glTexCoord2fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49917 /* glTexCoord2fv */);
}

static PFNGLTEXCOORD2HNVPROC
epoxy_glTexCoord2hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 49931 /* glTexCoord2hNV */);
}

static PFNGLTEXCOORD2HVNVPROC
epoxy_glTexCoord2hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 49946 /* glTexCoord2hvNV */);
}

static PFNGLTEXCOORD2IPROC
epoxy_glTexCoord2i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49962 /* glTexCoord2i */);
}

static PFNGLTEXCOORD2IVPROC
epoxy_glTexCoord2iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49975 /* glTexCoord2iv */);
}

static PFNGLTEXCOORD2SPROC
epoxy_glTexCoord2s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 49989 /* glTexCoord2s */);
}

static PFNGLTEXCOORD2SVPROC
epoxy_glTexCoord2sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50002 /* glTexCoord2sv */);
}

static PFNGLTEXCOORD2XOESPROC
epoxy_glTexCoord2xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50016 /* glTexCoord2xOES */);
}

static PFNGLTEXCOORD2XVOESPROC
epoxy_glTexCoord2xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50032 /* glTexCoord2xvOES */);
}

static PFNGLTEXCOORD3BOESPROC
epoxy_glTexCoord3bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50049 /* glTexCoord3bOES */);
}

static PFNGLTEXCOORD3BVOESPROC
epoxy_glTexCoord3bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50065 /* glTexCoord3bvOES */);
}

static PFNGLTEXCOORD3DPROC
epoxy_glTexCoord3d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50082 /* glTexCoord3d */);
}

static PFNGLTEXCOORD3DVPROC
epoxy_glTexCoord3dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50095 /* glTexCoord3dv */);
}

static PFNGLTEXCOORD3FPROC
epoxy_glTexCoord3f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50109 /* glTexCoord3f */);
}

static PFNGLTEXCOORD3FVPROC
epoxy_glTexCoord3fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50122 /* glTexCoord3fv */);
}

static PFNGLTEXCOORD3HNVPROC
epoxy_glTexCoord3hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50136 /* glTexCoord3hNV */);
}

static PFNGLTEXCOORD3HVNVPROC
epoxy_glTexCoord3hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50151 /* glTexCoord3hvNV */);
}

static PFNGLTEXCOORD3IPROC
epoxy_glTexCoord3i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50167 /* glTexCoord3i */);
}

static PFNGLTEXCOORD3IVPROC
epoxy_glTexCoord3iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50180 /* glTexCoord3iv */);
}

static PFNGLTEXCOORD3SPROC
epoxy_glTexCoord3s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50194 /* glTexCoord3s */);
}

static PFNGLTEXCOORD3SVPROC
epoxy_glTexCoord3sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50207 /* glTexCoord3sv */);
}

static PFNGLTEXCOORD3XOESPROC
epoxy_glTexCoord3xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50221 /* glTexCoord3xOES */);
}

static PFNGLTEXCOORD3XVOESPROC
epoxy_glTexCoord3xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50237 /* glTexCoord3xvOES */);
}

static PFNGLTEXCOORD4BOESPROC
epoxy_glTexCoord4bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50254 /* glTexCoord4bOES */);
}

static PFNGLTEXCOORD4BVOESPROC
epoxy_glTexCoord4bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50270 /* glTexCoord4bvOES */);
}

static PFNGLTEXCOORD4DPROC
epoxy_glTexCoord4d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50287 /* glTexCoord4d */);
}

static PFNGLTEXCOORD4DVPROC
epoxy_glTexCoord4dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50300 /* glTexCoord4dv */);
}

static PFNGLTEXCOORD4FPROC
epoxy_glTexCoord4f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50314 /* glTexCoord4f */);
}

static PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
epoxy_glTexCoord4fColor4fNormal3fVertex4fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 50327 /* glTexCoord4fColor4fNormal3fVertex4fSUN */);
}

static PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
epoxy_glTexCoord4fColor4fNormal3fVertex4fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 50366 /* glTexCoord4fColor4fNormal3fVertex4fvSUN */);
}

static PFNGLTEXCOORD4FVERTEX4FSUNPROC
epoxy_glTexCoord4fVertex4fSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 50406 /* glTexCoord4fVertex4fSUN */);
}

static PFNGLTEXCOORD4FVERTEX4FVSUNPROC
epoxy_glTexCoord4fVertex4fvSUN_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 50430 /* glTexCoord4fVertex4fvSUN */);
}

static PFNGLTEXCOORD4FVPROC
epoxy_glTexCoord4fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50455 /* glTexCoord4fv */);
}

static PFNGLTEXCOORD4HNVPROC
epoxy_glTexCoord4hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50469 /* glTexCoord4hNV */);
}

static PFNGLTEXCOORD4HVNVPROC
epoxy_glTexCoord4hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50484 /* glTexCoord4hvNV */);
}

static PFNGLTEXCOORD4IPROC
epoxy_glTexCoord4i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50500 /* glTexCoord4i */);
}

static PFNGLTEXCOORD4IVPROC
epoxy_glTexCoord4iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50513 /* glTexCoord4iv */);
}

static PFNGLTEXCOORD4SPROC
epoxy_glTexCoord4s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50527 /* glTexCoord4s */);
}

static PFNGLTEXCOORD4SVPROC
epoxy_glTexCoord4sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50540 /* glTexCoord4sv */);
}

static PFNGLTEXCOORD4XOESPROC
epoxy_glTexCoord4xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50554 /* glTexCoord4xOES */);
}

static PFNGLTEXCOORD4XVOESPROC
epoxy_glTexCoord4xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50570 /* glTexCoord4xvOES */);
}

static PFNGLTEXCOORDFORMATNVPROC
epoxy_glTexCoordFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 50587 /* glTexCoordFormatNV */);
}

static PFNGLTEXCOORDP1UIPROC
epoxy_glTexCoordP1ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50606 /* "glTexCoordP1ui" */,
        50606 /* "glTexCoordP1ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50606 /* "glTexCoordP1ui" */,
                                providers, entrypoints);
}

static PFNGLTEXCOORDP1UIVPROC
epoxy_glTexCoordP1uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50621 /* "glTexCoordP1uiv" */,
        50621 /* "glTexCoordP1uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50621 /* "glTexCoordP1uiv" */,
                                providers, entrypoints);
}

static PFNGLTEXCOORDP2UIPROC
epoxy_glTexCoordP2ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50637 /* "glTexCoordP2ui" */,
        50637 /* "glTexCoordP2ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50637 /* "glTexCoordP2ui" */,
                                providers, entrypoints);
}

static PFNGLTEXCOORDP2UIVPROC
epoxy_glTexCoordP2uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50652 /* "glTexCoordP2uiv" */,
        50652 /* "glTexCoordP2uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50652 /* "glTexCoordP2uiv" */,
                                providers, entrypoints);
}

static PFNGLTEXCOORDP3UIPROC
epoxy_glTexCoordP3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50668 /* "glTexCoordP3ui" */,
        50668 /* "glTexCoordP3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50668 /* "glTexCoordP3ui" */,
                                providers, entrypoints);
}

static PFNGLTEXCOORDP3UIVPROC
epoxy_glTexCoordP3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50683 /* "glTexCoordP3uiv" */,
        50683 /* "glTexCoordP3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50683 /* "glTexCoordP3uiv" */,
                                providers, entrypoints);
}

static PFNGLTEXCOORDP4UIPROC
epoxy_glTexCoordP4ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50699 /* "glTexCoordP4ui" */,
        50699 /* "glTexCoordP4ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50699 /* "glTexCoordP4ui" */,
                                providers, entrypoints);
}

static PFNGLTEXCOORDP4UIVPROC
epoxy_glTexCoordP4uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50714 /* "glTexCoordP4uiv" */,
        50714 /* "glTexCoordP4uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50714 /* "glTexCoordP4uiv" */,
                                providers, entrypoints);
}

static PFNGLTEXCOORDPOINTERPROC
epoxy_glTexCoordPointer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50730 /* "glTexCoordPointer" */,
        50730 /* "glTexCoordPointer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50730 /* "glTexCoordPointer" */,
                                providers, entrypoints);
}

static PFNGLTEXCOORDPOINTEREXTPROC
epoxy_glTexCoordPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 50748 /* glTexCoordPointerEXT */);
}

static PFNGLTEXCOORDPOINTERLISTIBMPROC
epoxy_glTexCoordPointerListIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 50769 /* glTexCoordPointerListIBM */);
}

static PFNGLTEXCOORDPOINTERVINTELPROC
epoxy_glTexCoordPointervINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_parallel_arrays, 50794 /* glTexCoordPointervINTEL */);
}

static PFNGLTEXENVFPROC
epoxy_glTexEnvf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50818 /* "glTexEnvf" */,
        50818 /* "glTexEnvf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50818 /* "glTexEnvf" */,
                                providers, entrypoints);
}

static PFNGLTEXENVFVPROC
epoxy_glTexEnvfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50828 /* "glTexEnvfv" */,
        50828 /* "glTexEnvfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50828 /* "glTexEnvfv" */,
                                providers, entrypoints);
}

static PFNGLTEXENVIPROC
epoxy_glTexEnvi_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50839 /* "glTexEnvi" */,
        50839 /* "glTexEnvi" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50839 /* "glTexEnvi" */,
                                providers, entrypoints);
}

static PFNGLTEXENVIVPROC
epoxy_glTexEnviv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        50849 /* "glTexEnviv" */,
        50849 /* "glTexEnviv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 50849 /* "glTexEnviv" */,
                                providers, entrypoints);
}

static PFNGLTEXENVXPROC
epoxy_glTexEnvx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 50860 /* glTexEnvx */);
}

static PFNGLTEXENVXOESPROC
epoxy_glTexEnvxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50870 /* glTexEnvxOES */);
}

static PFNGLTEXENVXVPROC
epoxy_glTexEnvxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 50883 /* glTexEnvxv */);
}

static PFNGLTEXENVXVOESPROC
epoxy_glTexEnvxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50894 /* glTexEnvxvOES */);
}

static PFNGLTEXFILTERFUNCSGISPROC
epoxy_glTexFilterFuncSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_texture_filter4, 50908 /* glTexFilterFuncSGIS */);
}

static PFNGLTEXGENDPROC
epoxy_glTexGend_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50928 /* glTexGend */);
}

static PFNGLTEXGENDVPROC
epoxy_glTexGendv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50938 /* glTexGendv */);
}

static PFNGLTEXGENFPROC
epoxy_glTexGenf_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50949 /* glTexGenf */);
}

static PFNGLTEXGENFOESPROC
epoxy_glTexGenfOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 50959 /* glTexGenfOES */);
}

static PFNGLTEXGENFVPROC
epoxy_glTexGenfv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50972 /* glTexGenfv */);
}

static PFNGLTEXGENFVOESPROC
epoxy_glTexGenfvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 50983 /* glTexGenfvOES */);
}

static PFNGLTEXGENIPROC
epoxy_glTexGeni_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 50997 /* glTexGeni */);
}

static PFNGLTEXGENIOESPROC
epoxy_glTexGeniOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 51007 /* glTexGeniOES */);
}

static PFNGLTEXGENIVPROC
epoxy_glTexGeniv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 51020 /* glTexGeniv */);
}

static PFNGLTEXGENIVOESPROC
epoxy_glTexGenivOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 51031 /* glTexGenivOES */);
}

static PFNGLTEXGENXOESPROC
epoxy_glTexGenxOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_fixed_point,
        GL_extension_GL_OES_texture_cube_map,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51045 /* "glTexGenxOES" */,
        51045 /* "glTexGenxOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51045 /* "glTexGenxOES" */,
                                providers, entrypoints);
}

static PFNGLTEXGENXVOESPROC
epoxy_glTexGenxvOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_fixed_point,
        GL_extension_GL_OES_texture_cube_map,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51058 /* "glTexGenxvOES" */,
        51058 /* "glTexGenxvOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51058 /* "glTexGenxvOES" */,
                                providers, entrypoints);
}

static PFNGLTEXIMAGE1DPROC
epoxy_glTexImage1D_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 51072 /* glTexImage1D */);
}

static PFNGLTEXIMAGE2DPROC
epoxy_glTexImage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51085 /* "glTexImage2D" */,
        51085 /* "glTexImage2D" */,
        51085 /* "glTexImage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51085 /* "glTexImage2D" */,
                                providers, entrypoints);
}

static PFNGLTEXIMAGE2DMULTISAMPLEPROC
epoxy_glTexImage2DMultisample_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_texture_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51098 /* "glTexImage2DMultisample" */,
        51098 /* "glTexImage2DMultisample" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51098 /* "glTexImage2DMultisample" */,
                                providers, entrypoints);
}

static PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC
epoxy_glTexImage2DMultisampleCoverageNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 51122 /* glTexImage2DMultisampleCoverageNV */);
}

static PFNGLTEXIMAGE3DPROC
epoxy_glTexImage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_texture3D,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51156 /* "glTexImage3D" */,
        51156 /* "glTexImage3D" */,
        51169 /* "glTexImage3DEXT" */,
        51243 /* "glTexImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51156 /* "glTexImage3D" */,
                                providers, entrypoints);
}

static PFNGLTEXIMAGE3DEXTPROC
epoxy_glTexImage3DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture3D,
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51169 /* "glTexImage3DEXT" */,
        51156 /* "glTexImage3D" */,
        51156 /* "glTexImage3D" */,
        51243 /* "glTexImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51169 /* "glTexImage3DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXIMAGE3DMULTISAMPLEPROC
epoxy_glTexImage3DMultisample_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_texture_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51185 /* "glTexImage3DMultisample" */,
        51185 /* "glTexImage3DMultisample" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51185 /* "glTexImage3DMultisample" */,
                                providers, entrypoints);
}

static PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC
epoxy_glTexImage3DMultisampleCoverageNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 51209 /* glTexImage3DMultisampleCoverageNV */);
}

static PFNGLTEXIMAGE3DOESPROC
epoxy_glTexImage3DOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_3D,
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_texture3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51243 /* "glTexImage3DOES" */,
        51156 /* "glTexImage3D" */,
        51156 /* "glTexImage3D" */,
        51169 /* "glTexImage3DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51243 /* "glTexImage3DOES" */,
                                providers, entrypoints);
}

static PFNGLTEXIMAGE4DSGISPROC
epoxy_glTexImage4DSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_texture4D, 51259 /* glTexImage4DSGIS */);
}

static PFNGLTEXPAGECOMMITMENTARBPROC
epoxy_glTexPageCommitmentARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_sparse_texture,
        GL_extension_GL_EXT_sparse_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51276 /* "glTexPageCommitmentARB" */,
        51276 /* "glTexPageCommitmentARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51276 /* "glTexPageCommitmentARB" */,
                                providers, entrypoints);
}

static PFNGLTEXPAGECOMMITMENTEXTPROC
epoxy_glTexPageCommitmentEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_sparse_texture,
        GL_extension_GL_EXT_sparse_texture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51276 /* "glTexPageCommitmentARB" */,
        51276 /* "glTexPageCommitmentARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51299 /* "glTexPageCommitmentEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERIIVPROC
epoxy_glTexParameterIiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51322 /* "glTexParameterIiv" */,
        51340 /* "glTexParameterIivEXT" */,
        51340 /* "glTexParameterIivEXT" */,
        51361 /* "glTexParameterIivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51322 /* "glTexParameterIiv" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERIIVEXTPROC
epoxy_glTexParameterIivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        Desktop_OpenGL_3_0,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51340 /* "glTexParameterIivEXT" */,
        51340 /* "glTexParameterIivEXT" */,
        51322 /* "glTexParameterIiv" */,
        51361 /* "glTexParameterIivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51340 /* "glTexParameterIivEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERIIVOESPROC
epoxy_glTexParameterIivOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_border_clamp,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51361 /* "glTexParameterIivOES" */,
        51322 /* "glTexParameterIiv" */,
        51340 /* "glTexParameterIivEXT" */,
        51340 /* "glTexParameterIivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51361 /* "glTexParameterIivOES" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERIUIVPROC
epoxy_glTexParameterIuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51382 /* "glTexParameterIuiv" */,
        51401 /* "glTexParameterIuivEXT" */,
        51401 /* "glTexParameterIuivEXT" */,
        51423 /* "glTexParameterIuivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51382 /* "glTexParameterIuiv" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERIUIVEXTPROC
epoxy_glTexParameterIuivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        Desktop_OpenGL_3_0,
        GL_extension_GL_OES_texture_border_clamp,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51401 /* "glTexParameterIuivEXT" */,
        51401 /* "glTexParameterIuivEXT" */,
        51382 /* "glTexParameterIuiv" */,
        51423 /* "glTexParameterIuivOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51401 /* "glTexParameterIuivEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERIUIVOESPROC
epoxy_glTexParameterIuivOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_border_clamp,
        Desktop_OpenGL_3_0,
        GL_extension_GL_EXT_texture_border_clamp,
        GL_extension_GL_EXT_texture_integer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51423 /* "glTexParameterIuivOES" */,
        51382 /* "glTexParameterIuiv" */,
        51401 /* "glTexParameterIuivEXT" */,
        51401 /* "glTexParameterIuivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51423 /* "glTexParameterIuivOES" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERFPROC
epoxy_glTexParameterf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51445 /* "glTexParameterf" */,
        51445 /* "glTexParameterf" */,
        51445 /* "glTexParameterf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51445 /* "glTexParameterf" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERFVPROC
epoxy_glTexParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51461 /* "glTexParameterfv" */,
        51461 /* "glTexParameterfv" */,
        51461 /* "glTexParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51461 /* "glTexParameterfv" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERIPROC
epoxy_glTexParameteri_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51478 /* "glTexParameteri" */,
        51478 /* "glTexParameteri" */,
        51478 /* "glTexParameteri" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51478 /* "glTexParameteri" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERIVPROC
epoxy_glTexParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51494 /* "glTexParameteriv" */,
        51494 /* "glTexParameteriv" */,
        51494 /* "glTexParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51494 /* "glTexParameteriv" */,
                                providers, entrypoints);
}

static PFNGLTEXPARAMETERXPROC
epoxy_glTexParameterx_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 51511 /* glTexParameterx */);
}

static PFNGLTEXPARAMETERXOESPROC
epoxy_glTexParameterxOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 51527 /* glTexParameterxOES */);
}

static PFNGLTEXPARAMETERXVPROC
epoxy_glTexParameterxv_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 51546 /* glTexParameterxv */);
}

static PFNGLTEXPARAMETERXVOESPROC
epoxy_glTexParameterxvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 51563 /* glTexParameterxvOES */);
}

static PFNGLTEXRENDERBUFFERNVPROC
epoxy_glTexRenderbufferNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_explicit_multisample, 51583 /* glTexRenderbufferNV */);
}

static PFNGLTEXSTORAGE1DPROC
epoxy_glTexStorage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_texture_storage,
        GL_extension_GL_EXT_texture_storage,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51603 /* "glTexStorage1D" */,
        51603 /* "glTexStorage1D" */,
        51618 /* "glTexStorage1DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51603 /* "glTexStorage1D" */,
                                providers, entrypoints);
}

static PFNGLTEXSTORAGE1DEXTPROC
epoxy_glTexStorage1DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_storage,
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_texture_storage,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51618 /* "glTexStorage1DEXT" */,
        51603 /* "glTexStorage1D" */,
        51603 /* "glTexStorage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51618 /* "glTexStorage1DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXSTORAGE2DPROC
epoxy_glTexStorage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_texture_storage,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_texture_storage,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51636 /* "glTexStorage2D" */,
        51636 /* "glTexStorage2D" */,
        51636 /* "glTexStorage2D" */,
        51651 /* "glTexStorage2DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51636 /* "glTexStorage2D" */,
                                providers, entrypoints);
}

static PFNGLTEXSTORAGE2DEXTPROC
epoxy_glTexStorage2DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_storage,
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_texture_storage,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51651 /* "glTexStorage2DEXT" */,
        51636 /* "glTexStorage2D" */,
        51636 /* "glTexStorage2D" */,
        51636 /* "glTexStorage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51651 /* "glTexStorage2DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXSTORAGE2DMULTISAMPLEPROC
epoxy_glTexStorage2DMultisample_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_texture_storage_multisample,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51669 /* "glTexStorage2DMultisample" */,
        51669 /* "glTexStorage2DMultisample" */,
        51669 /* "glTexStorage2DMultisample" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51669 /* "glTexStorage2DMultisample" */,
                                providers, entrypoints);
}

static PFNGLTEXSTORAGE3DPROC
epoxy_glTexStorage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_texture_storage,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_texture_storage,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51695 /* "glTexStorage3D" */,
        51695 /* "glTexStorage3D" */,
        51695 /* "glTexStorage3D" */,
        51710 /* "glTexStorage3DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51695 /* "glTexStorage3D" */,
                                providers, entrypoints);
}

static PFNGLTEXSTORAGE3DEXTPROC
epoxy_glTexStorage3DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_storage,
        Desktop_OpenGL_4_2,
        GL_extension_GL_ARB_texture_storage,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51710 /* "glTexStorage3DEXT" */,
        51695 /* "glTexStorage3D" */,
        51695 /* "glTexStorage3D" */,
        51695 /* "glTexStorage3D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51710 /* "glTexStorage3DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXSTORAGE3DMULTISAMPLEPROC
epoxy_glTexStorage3DMultisample_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_texture_storage_multisample,
        GL_extension_GL_OES_texture_storage_multisample_2d_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51728 /* "glTexStorage3DMultisample" */,
        51728 /* "glTexStorage3DMultisample" */,
        51754 /* "glTexStorage3DMultisampleOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51728 /* "glTexStorage3DMultisample" */,
                                providers, entrypoints);
}

static PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC
epoxy_glTexStorage3DMultisampleOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_storage_multisample_2d_array,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_texture_storage_multisample,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51754 /* "glTexStorage3DMultisampleOES" */,
        51728 /* "glTexStorage3DMultisample" */,
        51728 /* "glTexStorage3DMultisample" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51754 /* "glTexStorage3DMultisampleOES" */,
                                providers, entrypoints);
}

static PFNGLTEXSTORAGESPARSEAMDPROC
epoxy_glTexStorageSparseAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_sparse_texture, 51783 /* glTexStorageSparseAMD */);
}

static PFNGLTEXSUBIMAGE1DPROC
epoxy_glTexSubImage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        GL_extension_GL_EXT_subtexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51805 /* "glTexSubImage1D" */,
        51821 /* "glTexSubImage1DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51805 /* "glTexSubImage1D" */,
                                providers, entrypoints);
}

static PFNGLTEXSUBIMAGE1DEXTPROC
epoxy_glTexSubImage1DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_subtexture,
        Desktop_OpenGL_1_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51821 /* "glTexSubImage1DEXT" */,
        51805 /* "glTexSubImage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51821 /* "glTexSubImage1DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXSUBIMAGE2DPROC
epoxy_glTexSubImage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        GL_extension_GL_EXT_subtexture,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51840 /* "glTexSubImage2D" */,
        51840 /* "glTexSubImage2D" */,
        51840 /* "glTexSubImage2D" */,
        51856 /* "glTexSubImage2DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51840 /* "glTexSubImage2D" */,
                                providers, entrypoints);
}

static PFNGLTEXSUBIMAGE2DEXTPROC
epoxy_glTexSubImage2DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_subtexture,
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51856 /* "glTexSubImage2DEXT" */,
        51840 /* "glTexSubImage2D" */,
        51840 /* "glTexSubImage2D" */,
        51840 /* "glTexSubImage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51856 /* "glTexSubImage2DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXSUBIMAGE3DPROC
epoxy_glTexSubImage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_texture3D,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51875 /* "glTexSubImage3D" */,
        51875 /* "glTexSubImage3D" */,
        51891 /* "glTexSubImage3DEXT" */,
        51910 /* "glTexSubImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51875 /* "glTexSubImage3D" */,
                                providers, entrypoints);
}

static PFNGLTEXSUBIMAGE3DEXTPROC
epoxy_glTexSubImage3DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture3D,
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_texture_3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51891 /* "glTexSubImage3DEXT" */,
        51875 /* "glTexSubImage3D" */,
        51875 /* "glTexSubImage3D" */,
        51910 /* "glTexSubImage3DOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51891 /* "glTexSubImage3DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXSUBIMAGE3DOESPROC
epoxy_glTexSubImage3DOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_3D,
        Desktop_OpenGL_1_2,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_texture3D,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51910 /* "glTexSubImage3DOES" */,
        51875 /* "glTexSubImage3D" */,
        51875 /* "glTexSubImage3D" */,
        51891 /* "glTexSubImage3DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51910 /* "glTexSubImage3DOES" */,
                                providers, entrypoints);
}

static PFNGLTEXSUBIMAGE4DSGISPROC
epoxy_glTexSubImage4DSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_texture4D, 51929 /* glTexSubImage4DSGIS */);
}

static PFNGLTEXTUREBARRIERPROC
epoxy_glTextureBarrier_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_texture_barrier,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51949 /* "glTextureBarrier" */,
        51949 /* "glTextureBarrier" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51949 /* "glTextureBarrier" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREBARRIERNVPROC
epoxy_glTextureBarrierNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_texture_barrier, 51966 /* glTextureBarrierNV */);
}

static PFNGLTEXTUREBUFFERPROC
epoxy_glTextureBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        51985 /* "glTextureBuffer" */,
        51985 /* "glTextureBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 51985 /* "glTextureBuffer" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREBUFFEREXTPROC
epoxy_glTextureBufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52001 /* glTextureBufferEXT */);
}

static PFNGLTEXTUREBUFFERRANGEPROC
epoxy_glTextureBufferRange_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52020 /* "glTextureBufferRange" */,
        52020 /* "glTextureBufferRange" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52020 /* "glTextureBufferRange" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREBUFFERRANGEEXTPROC
epoxy_glTextureBufferRangeEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52041 /* glTextureBufferRangeEXT */);
}

static PFNGLTEXTURECOLORMASKSGISPROC
epoxy_glTextureColorMaskSGIS_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_SGIS_texture_color_mask, 52065 /* glTextureColorMaskSGIS */);
}

static PFNGLTEXTUREIMAGE1DEXTPROC
epoxy_glTextureImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52088 /* glTextureImage1DEXT */);
}

static PFNGLTEXTUREIMAGE2DEXTPROC
epoxy_glTextureImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52108 /* glTextureImage2DEXT */);
}

static PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC
epoxy_glTextureImage2DMultisampleCoverageNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 52128 /* glTextureImage2DMultisampleCoverageNV */);
}

static PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC
epoxy_glTextureImage2DMultisampleNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 52166 /* glTextureImage2DMultisampleNV */);
}

static PFNGLTEXTUREIMAGE3DEXTPROC
epoxy_glTextureImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52196 /* glTextureImage3DEXT */);
}

static PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC
epoxy_glTextureImage3DMultisampleCoverageNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 52216 /* glTextureImage3DMultisampleCoverageNV */);
}

static PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC
epoxy_glTextureImage3DMultisampleNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 52254 /* glTextureImage3DMultisampleNV */);
}

static PFNGLTEXTURELIGHTEXTPROC
epoxy_glTextureLightEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_light_texture, 52284 /* glTextureLightEXT */);
}

static PFNGLTEXTUREMATERIALEXTPROC
epoxy_glTextureMaterialEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_light_texture, 52302 /* glTextureMaterialEXT */);
}

static PFNGLTEXTURENORMALEXTPROC
epoxy_glTextureNormalEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_texture_perturb_normal, 52323 /* glTextureNormalEXT */);
}

static PFNGLTEXTUREPAGECOMMITMENTEXTPROC
epoxy_glTexturePageCommitmentEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52342 /* glTexturePageCommitmentEXT */);
}

static PFNGLTEXTUREPARAMETERIIVPROC
epoxy_glTextureParameterIiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52369 /* "glTextureParameterIiv" */,
        52369 /* "glTextureParameterIiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52369 /* "glTextureParameterIiv" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREPARAMETERIIVEXTPROC
epoxy_glTextureParameterIivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52391 /* glTextureParameterIivEXT */);
}

static PFNGLTEXTUREPARAMETERIUIVPROC
epoxy_glTextureParameterIuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52416 /* "glTextureParameterIuiv" */,
        52416 /* "glTextureParameterIuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52416 /* "glTextureParameterIuiv" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREPARAMETERIUIVEXTPROC
epoxy_glTextureParameterIuivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52439 /* glTextureParameterIuivEXT */);
}

static PFNGLTEXTUREPARAMETERFPROC
epoxy_glTextureParameterf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52465 /* "glTextureParameterf" */,
        52465 /* "glTextureParameterf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52465 /* "glTextureParameterf" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREPARAMETERFEXTPROC
epoxy_glTextureParameterfEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52485 /* glTextureParameterfEXT */);
}

static PFNGLTEXTUREPARAMETERFVPROC
epoxy_glTextureParameterfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52508 /* "glTextureParameterfv" */,
        52508 /* "glTextureParameterfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52508 /* "glTextureParameterfv" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREPARAMETERFVEXTPROC
epoxy_glTextureParameterfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52529 /* glTextureParameterfvEXT */);
}

static PFNGLTEXTUREPARAMETERIPROC
epoxy_glTextureParameteri_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52553 /* "glTextureParameteri" */,
        52553 /* "glTextureParameteri" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52553 /* "glTextureParameteri" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREPARAMETERIEXTPROC
epoxy_glTextureParameteriEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52573 /* glTextureParameteriEXT */);
}

static PFNGLTEXTUREPARAMETERIVPROC
epoxy_glTextureParameteriv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52596 /* "glTextureParameteriv" */,
        52596 /* "glTextureParameteriv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52596 /* "glTextureParameteriv" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREPARAMETERIVEXTPROC
epoxy_glTextureParameterivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52617 /* glTextureParameterivEXT */);
}

static PFNGLTEXTURERANGEAPPLEPROC
epoxy_glTextureRangeAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_texture_range, 52641 /* glTextureRangeAPPLE */);
}

static PFNGLTEXTURERENDERBUFFEREXTPROC
epoxy_glTextureRenderbufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52661 /* glTextureRenderbufferEXT */);
}

static PFNGLTEXTURESTORAGE1DPROC
epoxy_glTextureStorage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52686 /* "glTextureStorage1D" */,
        52686 /* "glTextureStorage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52686 /* "glTextureStorage1D" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESTORAGE1DEXTPROC
epoxy_glTextureStorage1DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_texture_storage,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52705 /* "glTextureStorage1DEXT" */,
        52705 /* "glTextureStorage1DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52705 /* "glTextureStorage1DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESTORAGE2DPROC
epoxy_glTextureStorage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52727 /* "glTextureStorage2D" */,
        52727 /* "glTextureStorage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52727 /* "glTextureStorage2D" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESTORAGE2DEXTPROC
epoxy_glTextureStorage2DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_texture_storage,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52746 /* "glTextureStorage2DEXT" */,
        52746 /* "glTextureStorage2DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52746 /* "glTextureStorage2DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC
epoxy_glTextureStorage2DMultisample_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52768 /* "glTextureStorage2DMultisample" */,
        52768 /* "glTextureStorage2DMultisample" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52768 /* "glTextureStorage2DMultisample" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC
epoxy_glTextureStorage2DMultisampleEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52798 /* glTextureStorage2DMultisampleEXT */);
}

static PFNGLTEXTURESTORAGE3DPROC
epoxy_glTextureStorage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52831 /* "glTextureStorage3D" */,
        52831 /* "glTextureStorage3D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52831 /* "glTextureStorage3D" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESTORAGE3DEXTPROC
epoxy_glTextureStorage3DEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_direct_state_access,
        GL_extension_GL_EXT_texture_storage,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52850 /* "glTextureStorage3DEXT" */,
        52850 /* "glTextureStorage3DEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52850 /* "glTextureStorage3DEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC
epoxy_glTextureStorage3DMultisample_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52872 /* "glTextureStorage3DMultisample" */,
        52872 /* "glTextureStorage3DMultisample" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52872 /* "glTextureStorage3DMultisample" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC
epoxy_glTextureStorage3DMultisampleEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52902 /* glTextureStorage3DMultisampleEXT */);
}

static PFNGLTEXTURESTORAGESPARSEAMDPROC
epoxy_glTextureStorageSparseAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_sparse_texture, 52935 /* glTextureStorageSparseAMD */);
}

static PFNGLTEXTURESUBIMAGE1DPROC
epoxy_glTextureSubImage1D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        52961 /* "glTextureSubImage1D" */,
        52961 /* "glTextureSubImage1D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 52961 /* "glTextureSubImage1D" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESUBIMAGE1DEXTPROC
epoxy_glTextureSubImage1DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 52981 /* glTextureSubImage1DEXT */);
}

static PFNGLTEXTURESUBIMAGE2DPROC
epoxy_glTextureSubImage2D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53004 /* "glTextureSubImage2D" */,
        53004 /* "glTextureSubImage2D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53004 /* "glTextureSubImage2D" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESUBIMAGE2DEXTPROC
epoxy_glTextureSubImage2DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 53024 /* glTextureSubImage2DEXT */);
}

static PFNGLTEXTURESUBIMAGE3DPROC
epoxy_glTextureSubImage3D_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53047 /* "glTextureSubImage3D" */,
        53047 /* "glTextureSubImage3D" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53047 /* "glTextureSubImage3D" */,
                                providers, entrypoints);
}

static PFNGLTEXTURESUBIMAGE3DEXTPROC
epoxy_glTextureSubImage3DEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 53067 /* glTextureSubImage3DEXT */);
}

static PFNGLTEXTUREVIEWPROC
epoxy_glTextureView_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_texture_view,
        GL_extension_GL_EXT_texture_view,
        GL_extension_GL_OES_texture_view,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53090 /* "glTextureView" */,
        53090 /* "glTextureView" */,
        53104 /* "glTextureViewEXT" */,
        53121 /* "glTextureViewOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53090 /* "glTextureView" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREVIEWEXTPROC
epoxy_glTextureViewEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_texture_view,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_texture_view,
        GL_extension_GL_OES_texture_view,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53104 /* "glTextureViewEXT" */,
        53090 /* "glTextureView" */,
        53090 /* "glTextureView" */,
        53121 /* "glTextureViewOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53104 /* "glTextureViewEXT" */,
                                providers, entrypoints);
}

static PFNGLTEXTUREVIEWOESPROC
epoxy_glTextureViewOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_texture_view,
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_texture_view,
        GL_extension_GL_EXT_texture_view,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53121 /* "glTextureViewOES" */,
        53090 /* "glTextureView" */,
        53090 /* "glTextureView" */,
        53104 /* "glTextureViewEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53121 /* "glTextureViewOES" */,
                                providers, entrypoints);
}

static PFNGLTRACKMATRIXNVPROC
epoxy_glTrackMatrixNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 53138 /* glTrackMatrixNV */);
}

static PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
epoxy_glTransformFeedbackAttribsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 53154 /* glTransformFeedbackAttribsNV */);
}

static PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC
epoxy_glTransformFeedbackBufferBase_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53183 /* "glTransformFeedbackBufferBase" */,
        53183 /* "glTransformFeedbackBufferBase" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53183 /* "glTransformFeedbackBufferBase" */,
                                providers, entrypoints);
}

static PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC
epoxy_glTransformFeedbackBufferRange_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53213 /* "glTransformFeedbackBufferRange" */,
        53213 /* "glTransformFeedbackBufferRange" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53213 /* "glTransformFeedbackBufferRange" */,
                                providers, entrypoints);
}

static PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC
epoxy_glTransformFeedbackStreamAttribsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 53244 /* glTransformFeedbackStreamAttribsNV */);
}

static PFNGLTRANSFORMFEEDBACKVARYINGSPROC
epoxy_glTransformFeedbackVaryings_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_transform_feedback,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53279 /* "glTransformFeedbackVaryings" */,
        53279 /* "glTransformFeedbackVaryings" */,
        53307 /* "glTransformFeedbackVaryingsEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53279 /* "glTransformFeedbackVaryings" */,
                                providers, entrypoints);
}

static PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
epoxy_glTransformFeedbackVaryingsEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_transform_feedback,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53307 /* "glTransformFeedbackVaryingsEXT" */,
        53279 /* "glTransformFeedbackVaryings" */,
        53279 /* "glTransformFeedbackVaryings" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53307 /* "glTransformFeedbackVaryingsEXT" */,
                                providers, entrypoints);
}

static PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
epoxy_glTransformFeedbackVaryingsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 53338 /* glTransformFeedbackVaryingsNV */);
}

static PFNGLTRANSFORMPATHNVPROC
epoxy_glTransformPathNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 53368 /* glTransformPathNV */);
}

static PFNGLTRANSLATEDPROC
epoxy_glTranslated_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 53386 /* glTranslated */);
}

static PFNGLTRANSLATEFPROC
epoxy_glTranslatef_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53399 /* "glTranslatef" */,
        53399 /* "glTranslatef" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53399 /* "glTranslatef" */,
                                providers, entrypoints);
}

static PFNGLTRANSLATEXPROC
epoxy_glTranslatex_resolver(void)
{
    return gl_single_resolver(OpenGL_ES_1_0, 53412 /* glTranslatex */);
}

static PFNGLTRANSLATEXOESPROC
epoxy_glTranslatexOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 53425 /* glTranslatexOES */);
}

static PFNGLUNIFORM1DPROC
epoxy_glUniform1d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53441 /* "glUniform1d" */,
        53441 /* "glUniform1d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53441 /* "glUniform1d" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1DVPROC
epoxy_glUniform1dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53453 /* "glUniform1dv" */,
        53453 /* "glUniform1dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53453 /* "glUniform1dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1FPROC
epoxy_glUniform1f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53466 /* "glUniform1f" */,
        53466 /* "glUniform1f" */,
        53478 /* "glUniform1fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53466 /* "glUniform1f" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1FARBPROC
epoxy_glUniform1fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53478 /* "glUniform1fARB" */,
        53466 /* "glUniform1f" */,
        53466 /* "glUniform1f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53478 /* "glUniform1fARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1FVPROC
epoxy_glUniform1fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53493 /* "glUniform1fv" */,
        53493 /* "glUniform1fv" */,
        53506 /* "glUniform1fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53493 /* "glUniform1fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1FVARBPROC
epoxy_glUniform1fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53506 /* "glUniform1fvARB" */,
        53493 /* "glUniform1fv" */,
        53493 /* "glUniform1fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53506 /* "glUniform1fvARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1IPROC
epoxy_glUniform1i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53522 /* "glUniform1i" */,
        53522 /* "glUniform1i" */,
        53567 /* "glUniform1iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53522 /* "glUniform1i" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1I64NVPROC
epoxy_glUniform1i64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53534 /* "glUniform1i64NV" */,
        53534 /* "glUniform1i64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53534 /* "glUniform1i64NV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1I64VNVPROC
epoxy_glUniform1i64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53550 /* "glUniform1i64vNV" */,
        53550 /* "glUniform1i64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53550 /* "glUniform1i64vNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1IARBPROC
epoxy_glUniform1iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53567 /* "glUniform1iARB" */,
        53522 /* "glUniform1i" */,
        53522 /* "glUniform1i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53567 /* "glUniform1iARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1IVPROC
epoxy_glUniform1iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53582 /* "glUniform1iv" */,
        53582 /* "glUniform1iv" */,
        53595 /* "glUniform1ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53582 /* "glUniform1iv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1IVARBPROC
epoxy_glUniform1ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53595 /* "glUniform1ivARB" */,
        53582 /* "glUniform1iv" */,
        53582 /* "glUniform1iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53595 /* "glUniform1ivARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1UIPROC
epoxy_glUniform1ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53611 /* "glUniform1ui" */,
        53611 /* "glUniform1ui" */,
        53659 /* "glUniform1uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53611 /* "glUniform1ui" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1UI64NVPROC
epoxy_glUniform1ui64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53624 /* "glUniform1ui64NV" */,
        53624 /* "glUniform1ui64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53624 /* "glUniform1ui64NV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1UI64VNVPROC
epoxy_glUniform1ui64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53641 /* "glUniform1ui64vNV" */,
        53641 /* "glUniform1ui64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53641 /* "glUniform1ui64vNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1UIEXTPROC
epoxy_glUniform1uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53659 /* "glUniform1uiEXT" */,
        53611 /* "glUniform1ui" */,
        53611 /* "glUniform1ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53659 /* "glUniform1uiEXT" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1UIVPROC
epoxy_glUniform1uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53675 /* "glUniform1uiv" */,
        53675 /* "glUniform1uiv" */,
        53689 /* "glUniform1uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53675 /* "glUniform1uiv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM1UIVEXTPROC
epoxy_glUniform1uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53689 /* "glUniform1uivEXT" */,
        53675 /* "glUniform1uiv" */,
        53675 /* "glUniform1uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53689 /* "glUniform1uivEXT" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2DPROC
epoxy_glUniform2d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53706 /* "glUniform2d" */,
        53706 /* "glUniform2d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53706 /* "glUniform2d" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2DVPROC
epoxy_glUniform2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53718 /* "glUniform2dv" */,
        53718 /* "glUniform2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53718 /* "glUniform2dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2FPROC
epoxy_glUniform2f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53731 /* "glUniform2f" */,
        53731 /* "glUniform2f" */,
        53743 /* "glUniform2fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53731 /* "glUniform2f" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2FARBPROC
epoxy_glUniform2fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53743 /* "glUniform2fARB" */,
        53731 /* "glUniform2f" */,
        53731 /* "glUniform2f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53743 /* "glUniform2fARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2FVPROC
epoxy_glUniform2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53758 /* "glUniform2fv" */,
        53758 /* "glUniform2fv" */,
        53771 /* "glUniform2fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53758 /* "glUniform2fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2FVARBPROC
epoxy_glUniform2fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53771 /* "glUniform2fvARB" */,
        53758 /* "glUniform2fv" */,
        53758 /* "glUniform2fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53771 /* "glUniform2fvARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2IPROC
epoxy_glUniform2i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53787 /* "glUniform2i" */,
        53787 /* "glUniform2i" */,
        53832 /* "glUniform2iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53787 /* "glUniform2i" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2I64NVPROC
epoxy_glUniform2i64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53799 /* "glUniform2i64NV" */,
        53799 /* "glUniform2i64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53799 /* "glUniform2i64NV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2I64VNVPROC
epoxy_glUniform2i64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53815 /* "glUniform2i64vNV" */,
        53815 /* "glUniform2i64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53815 /* "glUniform2i64vNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2IARBPROC
epoxy_glUniform2iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53832 /* "glUniform2iARB" */,
        53787 /* "glUniform2i" */,
        53787 /* "glUniform2i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53832 /* "glUniform2iARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2IVPROC
epoxy_glUniform2iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53847 /* "glUniform2iv" */,
        53847 /* "glUniform2iv" */,
        53860 /* "glUniform2ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53847 /* "glUniform2iv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2IVARBPROC
epoxy_glUniform2ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53860 /* "glUniform2ivARB" */,
        53847 /* "glUniform2iv" */,
        53847 /* "glUniform2iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53860 /* "glUniform2ivARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2UIPROC
epoxy_glUniform2ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53876 /* "glUniform2ui" */,
        53876 /* "glUniform2ui" */,
        53924 /* "glUniform2uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53876 /* "glUniform2ui" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2UI64NVPROC
epoxy_glUniform2ui64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53889 /* "glUniform2ui64NV" */,
        53889 /* "glUniform2ui64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53889 /* "glUniform2ui64NV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2UI64VNVPROC
epoxy_glUniform2ui64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53906 /* "glUniform2ui64vNV" */,
        53906 /* "glUniform2ui64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53906 /* "glUniform2ui64vNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2UIEXTPROC
epoxy_glUniform2uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53924 /* "glUniform2uiEXT" */,
        53876 /* "glUniform2ui" */,
        53876 /* "glUniform2ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53924 /* "glUniform2uiEXT" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2UIVPROC
epoxy_glUniform2uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53940 /* "glUniform2uiv" */,
        53940 /* "glUniform2uiv" */,
        53954 /* "glUniform2uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53940 /* "glUniform2uiv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM2UIVEXTPROC
epoxy_glUniform2uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53954 /* "glUniform2uivEXT" */,
        53940 /* "glUniform2uiv" */,
        53940 /* "glUniform2uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53954 /* "glUniform2uivEXT" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3DPROC
epoxy_glUniform3d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53971 /* "glUniform3d" */,
        53971 /* "glUniform3d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53971 /* "glUniform3d" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3DVPROC
epoxy_glUniform3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53983 /* "glUniform3dv" */,
        53983 /* "glUniform3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53983 /* "glUniform3dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3FPROC
epoxy_glUniform3f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        53996 /* "glUniform3f" */,
        53996 /* "glUniform3f" */,
        54008 /* "glUniform3fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 53996 /* "glUniform3f" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3FARBPROC
epoxy_glUniform3fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54008 /* "glUniform3fARB" */,
        53996 /* "glUniform3f" */,
        53996 /* "glUniform3f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54008 /* "glUniform3fARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3FVPROC
epoxy_glUniform3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54023 /* "glUniform3fv" */,
        54023 /* "glUniform3fv" */,
        54036 /* "glUniform3fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54023 /* "glUniform3fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3FVARBPROC
epoxy_glUniform3fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54036 /* "glUniform3fvARB" */,
        54023 /* "glUniform3fv" */,
        54023 /* "glUniform3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54036 /* "glUniform3fvARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3IPROC
epoxy_glUniform3i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54052 /* "glUniform3i" */,
        54052 /* "glUniform3i" */,
        54097 /* "glUniform3iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54052 /* "glUniform3i" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3I64NVPROC
epoxy_glUniform3i64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54064 /* "glUniform3i64NV" */,
        54064 /* "glUniform3i64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54064 /* "glUniform3i64NV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3I64VNVPROC
epoxy_glUniform3i64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54080 /* "glUniform3i64vNV" */,
        54080 /* "glUniform3i64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54080 /* "glUniform3i64vNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3IARBPROC
epoxy_glUniform3iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54097 /* "glUniform3iARB" */,
        54052 /* "glUniform3i" */,
        54052 /* "glUniform3i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54097 /* "glUniform3iARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3IVPROC
epoxy_glUniform3iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54112 /* "glUniform3iv" */,
        54112 /* "glUniform3iv" */,
        54125 /* "glUniform3ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54112 /* "glUniform3iv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3IVARBPROC
epoxy_glUniform3ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54125 /* "glUniform3ivARB" */,
        54112 /* "glUniform3iv" */,
        54112 /* "glUniform3iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54125 /* "glUniform3ivARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3UIPROC
epoxy_glUniform3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54141 /* "glUniform3ui" */,
        54141 /* "glUniform3ui" */,
        54189 /* "glUniform3uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54141 /* "glUniform3ui" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3UI64NVPROC
epoxy_glUniform3ui64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54154 /* "glUniform3ui64NV" */,
        54154 /* "glUniform3ui64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54154 /* "glUniform3ui64NV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3UI64VNVPROC
epoxy_glUniform3ui64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54171 /* "glUniform3ui64vNV" */,
        54171 /* "glUniform3ui64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54171 /* "glUniform3ui64vNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3UIEXTPROC
epoxy_glUniform3uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54189 /* "glUniform3uiEXT" */,
        54141 /* "glUniform3ui" */,
        54141 /* "glUniform3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54189 /* "glUniform3uiEXT" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3UIVPROC
epoxy_glUniform3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54205 /* "glUniform3uiv" */,
        54205 /* "glUniform3uiv" */,
        54219 /* "glUniform3uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54205 /* "glUniform3uiv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM3UIVEXTPROC
epoxy_glUniform3uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54219 /* "glUniform3uivEXT" */,
        54205 /* "glUniform3uiv" */,
        54205 /* "glUniform3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54219 /* "glUniform3uivEXT" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4DPROC
epoxy_glUniform4d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54236 /* "glUniform4d" */,
        54236 /* "glUniform4d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54236 /* "glUniform4d" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4DVPROC
epoxy_glUniform4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54248 /* "glUniform4dv" */,
        54248 /* "glUniform4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54248 /* "glUniform4dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4FPROC
epoxy_glUniform4f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54261 /* "glUniform4f" */,
        54261 /* "glUniform4f" */,
        54273 /* "glUniform4fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54261 /* "glUniform4f" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4FARBPROC
epoxy_glUniform4fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54273 /* "glUniform4fARB" */,
        54261 /* "glUniform4f" */,
        54261 /* "glUniform4f" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54273 /* "glUniform4fARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4FVPROC
epoxy_glUniform4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54288 /* "glUniform4fv" */,
        54288 /* "glUniform4fv" */,
        54301 /* "glUniform4fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54288 /* "glUniform4fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4FVARBPROC
epoxy_glUniform4fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54301 /* "glUniform4fvARB" */,
        54288 /* "glUniform4fv" */,
        54288 /* "glUniform4fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54301 /* "glUniform4fvARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4IPROC
epoxy_glUniform4i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54317 /* "glUniform4i" */,
        54317 /* "glUniform4i" */,
        54362 /* "glUniform4iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54317 /* "glUniform4i" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4I64NVPROC
epoxy_glUniform4i64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54329 /* "glUniform4i64NV" */,
        54329 /* "glUniform4i64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54329 /* "glUniform4i64NV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4I64VNVPROC
epoxy_glUniform4i64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54345 /* "glUniform4i64vNV" */,
        54345 /* "glUniform4i64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54345 /* "glUniform4i64vNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4IARBPROC
epoxy_glUniform4iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54362 /* "glUniform4iARB" */,
        54317 /* "glUniform4i" */,
        54317 /* "glUniform4i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54362 /* "glUniform4iARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4IVPROC
epoxy_glUniform4iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54377 /* "glUniform4iv" */,
        54377 /* "glUniform4iv" */,
        54390 /* "glUniform4ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54377 /* "glUniform4iv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4IVARBPROC
epoxy_glUniform4ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54390 /* "glUniform4ivARB" */,
        54377 /* "glUniform4iv" */,
        54377 /* "glUniform4iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54390 /* "glUniform4ivARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4UIPROC
epoxy_glUniform4ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54406 /* "glUniform4ui" */,
        54406 /* "glUniform4ui" */,
        54454 /* "glUniform4uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54406 /* "glUniform4ui" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4UI64NVPROC
epoxy_glUniform4ui64NV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54419 /* "glUniform4ui64NV" */,
        54419 /* "glUniform4ui64NV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54419 /* "glUniform4ui64NV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4UI64VNVPROC
epoxy_glUniform4ui64vNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_AMD_gpu_shader_int64,
        GL_extension_GL_NV_gpu_shader5,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54436 /* "glUniform4ui64vNV" */,
        54436 /* "glUniform4ui64vNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54436 /* "glUniform4ui64vNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4UIEXTPROC
epoxy_glUniform4uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54454 /* "glUniform4uiEXT" */,
        54406 /* "glUniform4ui" */,
        54406 /* "glUniform4ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54454 /* "glUniform4uiEXT" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4UIVPROC
epoxy_glUniform4uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_EXT_gpu_shader4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54470 /* "glUniform4uiv" */,
        54470 /* "glUniform4uiv" */,
        54484 /* "glUniform4uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54470 /* "glUniform4uiv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORM4UIVEXTPROC
epoxy_glUniform4uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_gpu_shader4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54484 /* "glUniform4uivEXT" */,
        54470 /* "glUniform4uiv" */,
        54470 /* "glUniform4uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54484 /* "glUniform4uivEXT" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMBLOCKBINDINGPROC
epoxy_glUniformBlockBinding_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_1,
        GL_extension_GL_ARB_uniform_buffer_object,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54501 /* "glUniformBlockBinding" */,
        54501 /* "glUniformBlockBinding" */,
        54501 /* "glUniformBlockBinding" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54501 /* "glUniformBlockBinding" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMBUFFEREXTPROC
epoxy_glUniformBufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_bindable_uniform, 54523 /* glUniformBufferEXT */);
}

static PFNGLUNIFORMHANDLEUI64ARBPROC
epoxy_glUniformHandleui64ARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 54542 /* glUniformHandleui64ARB */);
}

static PFNGLUNIFORMHANDLEUI64NVPROC
epoxy_glUniformHandleui64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 54565 /* glUniformHandleui64NV */);
}

static PFNGLUNIFORMHANDLEUI64VARBPROC
epoxy_glUniformHandleui64vARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 54587 /* glUniformHandleui64vARB */);
}

static PFNGLUNIFORMHANDLEUI64VNVPROC
epoxy_glUniformHandleui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 54611 /* glUniformHandleui64vNV */);
}

static PFNGLUNIFORMMATRIX2DVPROC
epoxy_glUniformMatrix2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54634 /* "glUniformMatrix2dv" */,
        54634 /* "glUniformMatrix2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54634 /* "glUniformMatrix2dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX2FVPROC
epoxy_glUniformMatrix2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54653 /* "glUniformMatrix2fv" */,
        54653 /* "glUniformMatrix2fv" */,
        54672 /* "glUniformMatrix2fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54653 /* "glUniformMatrix2fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX2FVARBPROC
epoxy_glUniformMatrix2fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54672 /* "glUniformMatrix2fvARB" */,
        54653 /* "glUniformMatrix2fv" */,
        54653 /* "glUniformMatrix2fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54672 /* "glUniformMatrix2fvARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX2X3DVPROC
epoxy_glUniformMatrix2x3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54694 /* "glUniformMatrix2x3dv" */,
        54694 /* "glUniformMatrix2x3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54694 /* "glUniformMatrix2x3dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX2X3FVPROC
epoxy_glUniformMatrix2x3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_non_square_matrices,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54715 /* "glUniformMatrix2x3fv" */,
        54715 /* "glUniformMatrix2x3fv" */,
        54736 /* "glUniformMatrix2x3fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54715 /* "glUniformMatrix2x3fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX2X3FVNVPROC
epoxy_glUniformMatrix2x3fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_non_square_matrices,
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54736 /* "glUniformMatrix2x3fvNV" */,
        54715 /* "glUniformMatrix2x3fv" */,
        54715 /* "glUniformMatrix2x3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54736 /* "glUniformMatrix2x3fvNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX2X4DVPROC
epoxy_glUniformMatrix2x4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54759 /* "glUniformMatrix2x4dv" */,
        54759 /* "glUniformMatrix2x4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54759 /* "glUniformMatrix2x4dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX2X4FVPROC
epoxy_glUniformMatrix2x4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_non_square_matrices,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54780 /* "glUniformMatrix2x4fv" */,
        54780 /* "glUniformMatrix2x4fv" */,
        54801 /* "glUniformMatrix2x4fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54780 /* "glUniformMatrix2x4fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX2X4FVNVPROC
epoxy_glUniformMatrix2x4fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_non_square_matrices,
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54801 /* "glUniformMatrix2x4fvNV" */,
        54780 /* "glUniformMatrix2x4fv" */,
        54780 /* "glUniformMatrix2x4fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54801 /* "glUniformMatrix2x4fvNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX3DVPROC
epoxy_glUniformMatrix3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54824 /* "glUniformMatrix3dv" */,
        54824 /* "glUniformMatrix3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54824 /* "glUniformMatrix3dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX3FVPROC
epoxy_glUniformMatrix3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54843 /* "glUniformMatrix3fv" */,
        54843 /* "glUniformMatrix3fv" */,
        54862 /* "glUniformMatrix3fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54843 /* "glUniformMatrix3fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX3FVARBPROC
epoxy_glUniformMatrix3fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54862 /* "glUniformMatrix3fvARB" */,
        54843 /* "glUniformMatrix3fv" */,
        54843 /* "glUniformMatrix3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54862 /* "glUniformMatrix3fvARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX3X2DVPROC
epoxy_glUniformMatrix3x2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54884 /* "glUniformMatrix3x2dv" */,
        54884 /* "glUniformMatrix3x2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54884 /* "glUniformMatrix3x2dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX3X2FVPROC
epoxy_glUniformMatrix3x2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_non_square_matrices,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54905 /* "glUniformMatrix3x2fv" */,
        54905 /* "glUniformMatrix3x2fv" */,
        54926 /* "glUniformMatrix3x2fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54905 /* "glUniformMatrix3x2fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX3X2FVNVPROC
epoxy_glUniformMatrix3x2fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_non_square_matrices,
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54926 /* "glUniformMatrix3x2fvNV" */,
        54905 /* "glUniformMatrix3x2fv" */,
        54905 /* "glUniformMatrix3x2fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54926 /* "glUniformMatrix3x2fvNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX3X4DVPROC
epoxy_glUniformMatrix3x4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54949 /* "glUniformMatrix3x4dv" */,
        54949 /* "glUniformMatrix3x4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54949 /* "glUniformMatrix3x4dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX3X4FVPROC
epoxy_glUniformMatrix3x4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_non_square_matrices,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54970 /* "glUniformMatrix3x4fv" */,
        54970 /* "glUniformMatrix3x4fv" */,
        54991 /* "glUniformMatrix3x4fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54970 /* "glUniformMatrix3x4fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX3X4FVNVPROC
epoxy_glUniformMatrix3x4fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_non_square_matrices,
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        54991 /* "glUniformMatrix3x4fvNV" */,
        54970 /* "glUniformMatrix3x4fv" */,
        54970 /* "glUniformMatrix3x4fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 54991 /* "glUniformMatrix3x4fvNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX4DVPROC
epoxy_glUniformMatrix4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55014 /* "glUniformMatrix4dv" */,
        55014 /* "glUniformMatrix4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55014 /* "glUniformMatrix4dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX4FVPROC
epoxy_glUniformMatrix4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55033 /* "glUniformMatrix4fv" */,
        55033 /* "glUniformMatrix4fv" */,
        55052 /* "glUniformMatrix4fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55033 /* "glUniformMatrix4fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX4FVARBPROC
epoxy_glUniformMatrix4fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55052 /* "glUniformMatrix4fvARB" */,
        55033 /* "glUniformMatrix4fv" */,
        55033 /* "glUniformMatrix4fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55052 /* "glUniformMatrix4fvARB" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX4X2DVPROC
epoxy_glUniformMatrix4x2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55074 /* "glUniformMatrix4x2dv" */,
        55074 /* "glUniformMatrix4x2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55074 /* "glUniformMatrix4x2dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX4X2FVPROC
epoxy_glUniformMatrix4x2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_non_square_matrices,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55095 /* "glUniformMatrix4x2fv" */,
        55095 /* "glUniformMatrix4x2fv" */,
        55116 /* "glUniformMatrix4x2fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55095 /* "glUniformMatrix4x2fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX4X2FVNVPROC
epoxy_glUniformMatrix4x2fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_non_square_matrices,
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55116 /* "glUniformMatrix4x2fvNV" */,
        55095 /* "glUniformMatrix4x2fv" */,
        55095 /* "glUniformMatrix4x2fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55116 /* "glUniformMatrix4x2fvNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX4X3DVPROC
epoxy_glUniformMatrix4x3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_gpu_shader_fp64,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55139 /* "glUniformMatrix4x3dv" */,
        55139 /* "glUniformMatrix4x3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55139 /* "glUniformMatrix4x3dv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX4X3FVPROC
epoxy_glUniformMatrix4x3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_non_square_matrices,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55160 /* "glUniformMatrix4x3fv" */,
        55160 /* "glUniformMatrix4x3fv" */,
        55181 /* "glUniformMatrix4x3fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55160 /* "glUniformMatrix4x3fv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMMATRIX4X3FVNVPROC
epoxy_glUniformMatrix4x3fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_non_square_matrices,
        Desktop_OpenGL_2_1,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55181 /* "glUniformMatrix4x3fvNV" */,
        55160 /* "glUniformMatrix4x3fv" */,
        55160 /* "glUniformMatrix4x3fv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55181 /* "glUniformMatrix4x3fvNV" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMSUBROUTINESUIVPROC
epoxy_glUniformSubroutinesuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_0,
        GL_extension_GL_ARB_shader_subroutine,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55204 /* "glUniformSubroutinesuiv" */,
        55204 /* "glUniformSubroutinesuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55204 /* "glUniformSubroutinesuiv" */,
                                providers, entrypoints);
}

static PFNGLUNIFORMUI64NVPROC
epoxy_glUniformui64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 55228 /* glUniformui64NV */);
}

static PFNGLUNIFORMUI64VNVPROC
epoxy_glUniformui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 55244 /* glUniformui64vNV */);
}

static PFNGLUNLOCKARRAYSEXTPROC
epoxy_glUnlockArraysEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_compiled_vertex_array, 55261 /* glUnlockArraysEXT */);
}

static PFNGLUNMAPBUFFERPROC
epoxy_glUnmapBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        GL_extension_GL_OES_mapbuffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55279 /* "glUnmapBuffer" */,
        55279 /* "glUnmapBuffer" */,
        55293 /* "glUnmapBufferARB" */,
        55310 /* "glUnmapBufferOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55279 /* "glUnmapBuffer" */,
                                providers, entrypoints);
}

static PFNGLUNMAPBUFFERARBPROC
epoxy_glUnmapBufferARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_buffer_object,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_OES_mapbuffer,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55293 /* "glUnmapBufferARB" */,
        55279 /* "glUnmapBuffer" */,
        55279 /* "glUnmapBuffer" */,
        55310 /* "glUnmapBufferOES" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55293 /* "glUnmapBufferARB" */,
                                providers, entrypoints);
}

static PFNGLUNMAPBUFFEROESPROC
epoxy_glUnmapBufferOES_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_OES_mapbuffer,
        Desktop_OpenGL_1_5,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_vertex_buffer_object,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55310 /* "glUnmapBufferOES" */,
        55279 /* "glUnmapBuffer" */,
        55279 /* "glUnmapBuffer" */,
        55293 /* "glUnmapBufferARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55310 /* "glUnmapBufferOES" */,
                                providers, entrypoints);
}

static PFNGLUNMAPNAMEDBUFFERPROC
epoxy_glUnmapNamedBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55327 /* "glUnmapNamedBuffer" */,
        55327 /* "glUnmapNamedBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55327 /* "glUnmapNamedBuffer" */,
                                providers, entrypoints);
}

static PFNGLUNMAPNAMEDBUFFEREXTPROC
epoxy_glUnmapNamedBufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 55346 /* glUnmapNamedBufferEXT */);
}

static PFNGLUNMAPOBJECTBUFFERATIPROC
epoxy_glUnmapObjectBufferATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_map_object_buffer, 55368 /* glUnmapObjectBufferATI */);
}

static PFNGLUNMAPTEXTURE2DINTELPROC
epoxy_glUnmapTexture2DINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_map_texture, 55391 /* glUnmapTexture2DINTEL */);
}

static PFNGLUPDATEOBJECTBUFFERATIPROC
epoxy_glUpdateObjectBufferATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 55413 /* glUpdateObjectBufferATI */);
}

static PFNGLUSEPROGRAMPROC
epoxy_glUseProgram_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55437 /* "glUseProgram" */,
        55437 /* "glUseProgram" */,
        55450 /* "glUseProgramObjectARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55437 /* "glUseProgram" */,
                                providers, entrypoints);
}

static PFNGLUSEPROGRAMOBJECTARBPROC
epoxy_glUseProgramObjectARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55450 /* "glUseProgramObjectARB" */,
        55437 /* "glUseProgram" */,
        55437 /* "glUseProgram" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55450 /* "glUseProgramObjectARB" */,
                                providers, entrypoints);
}

static PFNGLUSEPROGRAMSTAGESPROC
epoxy_glUseProgramStages_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55472 /* "glUseProgramStages" */,
        55472 /* "glUseProgramStages" */,
        55472 /* "glUseProgramStages" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55472 /* "glUseProgramStages" */,
                                providers, entrypoints);
}

static PFNGLUSEPROGRAMSTAGESEXTPROC
epoxy_glUseProgramStagesEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 55491 /* glUseProgramStagesEXT */);
}

static PFNGLUSESHADERPROGRAMEXTPROC
epoxy_glUseShaderProgramEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 55513 /* glUseShaderProgramEXT */);
}

static PFNGLVDPAUFININVPROC
epoxy_glVDPAUFiniNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55535 /* glVDPAUFiniNV */);
}

static PFNGLVDPAUGETSURFACEIVNVPROC
epoxy_glVDPAUGetSurfaceivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55549 /* glVDPAUGetSurfaceivNV */);
}

static PFNGLVDPAUINITNVPROC
epoxy_glVDPAUInitNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55571 /* glVDPAUInitNV */);
}

static PFNGLVDPAUISSURFACENVPROC
epoxy_glVDPAUIsSurfaceNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55585 /* glVDPAUIsSurfaceNV */);
}

static PFNGLVDPAUMAPSURFACESNVPROC
epoxy_glVDPAUMapSurfacesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55604 /* glVDPAUMapSurfacesNV */);
}

static PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC
epoxy_glVDPAURegisterOutputSurfaceNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55625 /* glVDPAURegisterOutputSurfaceNV */);
}

static PFNGLVDPAUREGISTERVIDEOSURFACENVPROC
epoxy_glVDPAURegisterVideoSurfaceNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55656 /* glVDPAURegisterVideoSurfaceNV */);
}

static PFNGLVDPAUSURFACEACCESSNVPROC
epoxy_glVDPAUSurfaceAccessNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55686 /* glVDPAUSurfaceAccessNV */);
}

static PFNGLVDPAUUNMAPSURFACESNVPROC
epoxy_glVDPAUUnmapSurfacesNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55709 /* glVDPAUUnmapSurfacesNV */);
}

static PFNGLVDPAUUNREGISTERSURFACENVPROC
epoxy_glVDPAUUnregisterSurfaceNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 55732 /* glVDPAUUnregisterSurfaceNV */);
}

static PFNGLVALIDATEPROGRAMPROC
epoxy_glValidateProgram_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_shader_objects,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55759 /* "glValidateProgram" */,
        55759 /* "glValidateProgram" */,
        55777 /* "glValidateProgramARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55759 /* "glValidateProgram" */,
                                providers, entrypoints);
}

static PFNGLVALIDATEPROGRAMARBPROC
epoxy_glValidateProgramARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_shader_objects,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55777 /* "glValidateProgramARB" */,
        55759 /* "glValidateProgram" */,
        55759 /* "glValidateProgram" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55777 /* "glValidateProgramARB" */,
                                providers, entrypoints);
}

static PFNGLVALIDATEPROGRAMPIPELINEPROC
epoxy_glValidateProgramPipeline_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_separate_shader_objects,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        55798 /* "glValidateProgramPipeline" */,
        55798 /* "glValidateProgramPipeline" */,
        55798 /* "glValidateProgramPipeline" */,
    };
    return gl_provider_resolver(entrypoint_strings + 55798 /* "glValidateProgramPipeline" */,
                                providers, entrypoints);
}

static PFNGLVALIDATEPROGRAMPIPELINEEXTPROC
epoxy_glValidateProgramPipelineEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 55824 /* glValidateProgramPipelineEXT */);
}

static PFNGLVARIANTARRAYOBJECTATIPROC
epoxy_glVariantArrayObjectATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 55853 /* glVariantArrayObjectATI */);
}

static PFNGLVARIANTPOINTEREXTPROC
epoxy_glVariantPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 55877 /* glVariantPointerEXT */);
}

static PFNGLVARIANTBVEXTPROC
epoxy_glVariantbvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 55897 /* glVariantbvEXT */);
}

static PFNGLVARIANTDVEXTPROC
epoxy_glVariantdvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 55912 /* glVariantdvEXT */);
}

static PFNGLVARIANTFVEXTPROC
epoxy_glVariantfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 55927 /* glVariantfvEXT */);
}

static PFNGLVARIANTIVEXTPROC
epoxy_glVariantivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 55942 /* glVariantivEXT */);
}

static PFNGLVARIANTSVEXTPROC
epoxy_glVariantsvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 55957 /* glVariantsvEXT */);
}

static PFNGLVARIANTUBVEXTPROC
epoxy_glVariantubvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 55972 /* glVariantubvEXT */);
}

static PFNGLVARIANTUIVEXTPROC
epoxy_glVariantuivEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 55988 /* glVariantuivEXT */);
}

static PFNGLVARIANTUSVEXTPROC
epoxy_glVariantusvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 56004 /* glVariantusvEXT */);
}

static PFNGLVERTEX2BOESPROC
epoxy_glVertex2bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 56020 /* glVertex2bOES */);
}

static PFNGLVERTEX2BVOESPROC
epoxy_glVertex2bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 56034 /* glVertex2bvOES */);
}

static PFNGLVERTEX2DPROC
epoxy_glVertex2d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56049 /* glVertex2d */);
}

static PFNGLVERTEX2DVPROC
epoxy_glVertex2dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56060 /* glVertex2dv */);
}

static PFNGLVERTEX2FPROC
epoxy_glVertex2f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56072 /* glVertex2f */);
}

static PFNGLVERTEX2FVPROC
epoxy_glVertex2fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56083 /* glVertex2fv */);
}

static PFNGLVERTEX2HNVPROC
epoxy_glVertex2hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56095 /* glVertex2hNV */);
}

static PFNGLVERTEX2HVNVPROC
epoxy_glVertex2hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56108 /* glVertex2hvNV */);
}

static PFNGLVERTEX2IPROC
epoxy_glVertex2i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56122 /* glVertex2i */);
}

static PFNGLVERTEX2IVPROC
epoxy_glVertex2iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56133 /* glVertex2iv */);
}

static PFNGLVERTEX2SPROC
epoxy_glVertex2s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56145 /* glVertex2s */);
}

static PFNGLVERTEX2SVPROC
epoxy_glVertex2sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56156 /* glVertex2sv */);
}

static PFNGLVERTEX2XOESPROC
epoxy_glVertex2xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 56168 /* glVertex2xOES */);
}

static PFNGLVERTEX2XVOESPROC
epoxy_glVertex2xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 56182 /* glVertex2xvOES */);
}

static PFNGLVERTEX3BOESPROC
epoxy_glVertex3bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 56197 /* glVertex3bOES */);
}

static PFNGLVERTEX3BVOESPROC
epoxy_glVertex3bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 56211 /* glVertex3bvOES */);
}

static PFNGLVERTEX3DPROC
epoxy_glVertex3d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56226 /* glVertex3d */);
}

static PFNGLVERTEX3DVPROC
epoxy_glVertex3dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56237 /* glVertex3dv */);
}

static PFNGLVERTEX3FPROC
epoxy_glVertex3f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56249 /* glVertex3f */);
}

static PFNGLVERTEX3FVPROC
epoxy_glVertex3fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56260 /* glVertex3fv */);
}

static PFNGLVERTEX3HNVPROC
epoxy_glVertex3hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56272 /* glVertex3hNV */);
}

static PFNGLVERTEX3HVNVPROC
epoxy_glVertex3hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56285 /* glVertex3hvNV */);
}

static PFNGLVERTEX3IPROC
epoxy_glVertex3i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56299 /* glVertex3i */);
}

static PFNGLVERTEX3IVPROC
epoxy_glVertex3iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56310 /* glVertex3iv */);
}

static PFNGLVERTEX3SPROC
epoxy_glVertex3s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56322 /* glVertex3s */);
}

static PFNGLVERTEX3SVPROC
epoxy_glVertex3sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56333 /* glVertex3sv */);
}

static PFNGLVERTEX3XOESPROC
epoxy_glVertex3xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 56345 /* glVertex3xOES */);
}

static PFNGLVERTEX3XVOESPROC
epoxy_glVertex3xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 56359 /* glVertex3xvOES */);
}

static PFNGLVERTEX4BOESPROC
epoxy_glVertex4bOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 56374 /* glVertex4bOES */);
}

static PFNGLVERTEX4BVOESPROC
epoxy_glVertex4bvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 56388 /* glVertex4bvOES */);
}

static PFNGLVERTEX4DPROC
epoxy_glVertex4d_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56403 /* glVertex4d */);
}

static PFNGLVERTEX4DVPROC
epoxy_glVertex4dv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56414 /* glVertex4dv */);
}

static PFNGLVERTEX4FPROC
epoxy_glVertex4f_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56426 /* glVertex4f */);
}

static PFNGLVERTEX4FVPROC
epoxy_glVertex4fv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56437 /* glVertex4fv */);
}

static PFNGLVERTEX4HNVPROC
epoxy_glVertex4hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56449 /* glVertex4hNV */);
}

static PFNGLVERTEX4HVNVPROC
epoxy_glVertex4hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56462 /* glVertex4hvNV */);
}

static PFNGLVERTEX4IPROC
epoxy_glVertex4i_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56476 /* glVertex4i */);
}

static PFNGLVERTEX4IVPROC
epoxy_glVertex4iv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56487 /* glVertex4iv */);
}

static PFNGLVERTEX4SPROC
epoxy_glVertex4s_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56499 /* glVertex4s */);
}

static PFNGLVERTEX4SVPROC
epoxy_glVertex4sv_resolver(void)
{
    return gl_single_resolver(Desktop_OpenGL_1_0, 56510 /* glVertex4sv */);
}

static PFNGLVERTEX4XOESPROC
epoxy_glVertex4xOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 56522 /* glVertex4xOES */);
}

static PFNGLVERTEX4XVOESPROC
epoxy_glVertex4xvOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 56536 /* glVertex4xvOES */);
}

static PFNGLVERTEXARRAYATTRIBBINDINGPROC
epoxy_glVertexArrayAttribBinding_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        56551 /* "glVertexArrayAttribBinding" */,
        56551 /* "glVertexArrayAttribBinding" */,
    };
    return gl_provider_resolver(entrypoint_strings + 56551 /* "glVertexArrayAttribBinding" */,
                                providers, entrypoints);
}

static PFNGLVERTEXARRAYATTRIBFORMATPROC
epoxy_glVertexArrayAttribFormat_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        56578 /* "glVertexArrayAttribFormat" */,
        56578 /* "glVertexArrayAttribFormat" */,
    };
    return gl_provider_resolver(entrypoint_strings + 56578 /* "glVertexArrayAttribFormat" */,
                                providers, entrypoints);
}

static PFNGLVERTEXARRAYATTRIBIFORMATPROC
epoxy_glVertexArrayAttribIFormat_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        56604 /* "glVertexArrayAttribIFormat" */,
        56604 /* "glVertexArrayAttribIFormat" */,
    };
    return gl_provider_resolver(entrypoint_strings + 56604 /* "glVertexArrayAttribIFormat" */,
                                providers, entrypoints);
}

static PFNGLVERTEXARRAYATTRIBLFORMATPROC
epoxy_glVertexArrayAttribLFormat_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        56631 /* "glVertexArrayAttribLFormat" */,
        56631 /* "glVertexArrayAttribLFormat" */,
    };
    return gl_provider_resolver(entrypoint_strings + 56631 /* "glVertexArrayAttribLFormat" */,
                                providers, entrypoints);
}

static PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC
epoxy_glVertexArrayBindVertexBufferEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 56658 /* glVertexArrayBindVertexBufferEXT */);
}

static PFNGLVERTEXARRAYBINDINGDIVISORPROC
epoxy_glVertexArrayBindingDivisor_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        56691 /* "glVertexArrayBindingDivisor" */,
        56691 /* "glVertexArrayBindingDivisor" */,
    };
    return gl_provider_resolver(entrypoint_strings + 56691 /* "glVertexArrayBindingDivisor" */,
                                providers, entrypoints);
}

static PFNGLVERTEXARRAYCOLOROFFSETEXTPROC
epoxy_glVertexArrayColorOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 56719 /* glVertexArrayColorOffsetEXT */);
}

static PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC
epoxy_glVertexArrayEdgeFlagOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 56747 /* glVertexArrayEdgeFlagOffsetEXT */);
}

static PFNGLVERTEXARRAYELEMENTBUFFERPROC
epoxy_glVertexArrayElementBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        56778 /* "glVertexArrayElementBuffer" */,
        56778 /* "glVertexArrayElementBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 56778 /* "glVertexArrayElementBuffer" */,
                                providers, entrypoints);
}

static PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC
epoxy_glVertexArrayFogCoordOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 56805 /* glVertexArrayFogCoordOffsetEXT */);
}

static PFNGLVERTEXARRAYINDEXOFFSETEXTPROC
epoxy_glVertexArrayIndexOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 56836 /* glVertexArrayIndexOffsetEXT */);
}

static PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC
epoxy_glVertexArrayMultiTexCoordOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 56864 /* glVertexArrayMultiTexCoordOffsetEXT */);
}

static PFNGLVERTEXARRAYNORMALOFFSETEXTPROC
epoxy_glVertexArrayNormalOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 56900 /* glVertexArrayNormalOffsetEXT */);
}

static PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
epoxy_glVertexArrayParameteriAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_array_range, 56929 /* glVertexArrayParameteriAPPLE */);
}

static PFNGLVERTEXARRAYRANGEAPPLEPROC
epoxy_glVertexArrayRangeAPPLE_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_array_range, 56958 /* glVertexArrayRangeAPPLE */);
}

static PFNGLVERTEXARRAYRANGENVPROC
epoxy_glVertexArrayRangeNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_array_range, 56982 /* glVertexArrayRangeNV */);
}

static PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC
epoxy_glVertexArraySecondaryColorOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57003 /* glVertexArraySecondaryColorOffsetEXT */);
}

static PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC
epoxy_glVertexArrayTexCoordOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57040 /* glVertexArrayTexCoordOffsetEXT */);
}

static PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC
epoxy_glVertexArrayVertexAttribBindingEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57071 /* glVertexArrayVertexAttribBindingEXT */);
}

static PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC
epoxy_glVertexArrayVertexAttribDivisorEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57107 /* glVertexArrayVertexAttribDivisorEXT */);
}

static PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC
epoxy_glVertexArrayVertexAttribFormatEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57143 /* glVertexArrayVertexAttribFormatEXT */);
}

static PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC
epoxy_glVertexArrayVertexAttribIFormatEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57178 /* glVertexArrayVertexAttribIFormatEXT */);
}

static PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC
epoxy_glVertexArrayVertexAttribIOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57214 /* glVertexArrayVertexAttribIOffsetEXT */);
}

static PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC
epoxy_glVertexArrayVertexAttribLFormatEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57250 /* glVertexArrayVertexAttribLFormatEXT */);
}

static PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC
epoxy_glVertexArrayVertexAttribLOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57286 /* glVertexArrayVertexAttribLOffsetEXT */);
}

static PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC
epoxy_glVertexArrayVertexAttribOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57322 /* glVertexArrayVertexAttribOffsetEXT */);
}

static PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC
epoxy_glVertexArrayVertexBindingDivisorEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57357 /* glVertexArrayVertexBindingDivisorEXT */);
}

static PFNGLVERTEXARRAYVERTEXBUFFERPROC
epoxy_glVertexArrayVertexBuffer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57394 /* "glVertexArrayVertexBuffer" */,
        57394 /* "glVertexArrayVertexBuffer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57394 /* "glVertexArrayVertexBuffer" */,
                                providers, entrypoints);
}

static PFNGLVERTEXARRAYVERTEXBUFFERSPROC
epoxy_glVertexArrayVertexBuffers_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_5,
        GL_extension_GL_ARB_direct_state_access,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57420 /* "glVertexArrayVertexBuffers" */,
        57420 /* "glVertexArrayVertexBuffers" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57420 /* "glVertexArrayVertexBuffers" */,
                                providers, entrypoints);
}

static PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC
epoxy_glVertexArrayVertexOffsetEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 57447 /* glVertexArrayVertexOffsetEXT */);
}

static PFNGLVERTEXATTRIB1DPROC
epoxy_glVertexAttrib1d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57476 /* "glVertexAttrib1d" */,
        57493 /* "glVertexAttrib1dARB" */,
        57493 /* "glVertexAttrib1dARB" */,
        57513 /* "glVertexAttrib1dNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57476 /* "glVertexAttrib1d" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1DARBPROC
epoxy_glVertexAttrib1dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57493 /* "glVertexAttrib1dARB" */,
        57493 /* "glVertexAttrib1dARB" */,
        57476 /* "glVertexAttrib1d" */,
        57513 /* "glVertexAttrib1dNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57493 /* "glVertexAttrib1dARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1DNVPROC
epoxy_glVertexAttrib1dNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57513 /* "glVertexAttrib1dNV" */,
        57476 /* "glVertexAttrib1d" */,
        57493 /* "glVertexAttrib1dARB" */,
        57493 /* "glVertexAttrib1dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57513 /* "glVertexAttrib1dNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1DVPROC
epoxy_glVertexAttrib1dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57532 /* "glVertexAttrib1dv" */,
        57550 /* "glVertexAttrib1dvARB" */,
        57550 /* "glVertexAttrib1dvARB" */,
        57571 /* "glVertexAttrib1dvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57532 /* "glVertexAttrib1dv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1DVARBPROC
epoxy_glVertexAttrib1dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57550 /* "glVertexAttrib1dvARB" */,
        57550 /* "glVertexAttrib1dvARB" */,
        57532 /* "glVertexAttrib1dv" */,
        57571 /* "glVertexAttrib1dvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57550 /* "glVertexAttrib1dvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1DVNVPROC
epoxy_glVertexAttrib1dvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57571 /* "glVertexAttrib1dvNV" */,
        57532 /* "glVertexAttrib1dv" */,
        57550 /* "glVertexAttrib1dvARB" */,
        57550 /* "glVertexAttrib1dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57571 /* "glVertexAttrib1dvNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1FPROC
epoxy_glVertexAttrib1f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57591 /* "glVertexAttrib1f" */,
        57591 /* "glVertexAttrib1f" */,
        57608 /* "glVertexAttrib1fARB" */,
        57608 /* "glVertexAttrib1fARB" */,
        57628 /* "glVertexAttrib1fNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57591 /* "glVertexAttrib1f" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1FARBPROC
epoxy_glVertexAttrib1fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57608 /* "glVertexAttrib1fARB" */,
        57608 /* "glVertexAttrib1fARB" */,
        57591 /* "glVertexAttrib1f" */,
        57591 /* "glVertexAttrib1f" */,
        57628 /* "glVertexAttrib1fNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57608 /* "glVertexAttrib1fARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1FNVPROC
epoxy_glVertexAttrib1fNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57628 /* "glVertexAttrib1fNV" */,
        57591 /* "glVertexAttrib1f" */,
        57591 /* "glVertexAttrib1f" */,
        57608 /* "glVertexAttrib1fARB" */,
        57608 /* "glVertexAttrib1fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57628 /* "glVertexAttrib1fNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1FVPROC
epoxy_glVertexAttrib1fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57647 /* "glVertexAttrib1fv" */,
        57647 /* "glVertexAttrib1fv" */,
        57665 /* "glVertexAttrib1fvARB" */,
        57665 /* "glVertexAttrib1fvARB" */,
        57686 /* "glVertexAttrib1fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57647 /* "glVertexAttrib1fv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1FVARBPROC
epoxy_glVertexAttrib1fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57665 /* "glVertexAttrib1fvARB" */,
        57665 /* "glVertexAttrib1fvARB" */,
        57647 /* "glVertexAttrib1fv" */,
        57647 /* "glVertexAttrib1fv" */,
        57686 /* "glVertexAttrib1fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57665 /* "glVertexAttrib1fvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1FVNVPROC
epoxy_glVertexAttrib1fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57686 /* "glVertexAttrib1fvNV" */,
        57647 /* "glVertexAttrib1fv" */,
        57647 /* "glVertexAttrib1fv" */,
        57665 /* "glVertexAttrib1fvARB" */,
        57665 /* "glVertexAttrib1fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57686 /* "glVertexAttrib1fvNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1HNVPROC
epoxy_glVertexAttrib1hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 57706 /* glVertexAttrib1hNV */);
}

static PFNGLVERTEXATTRIB1HVNVPROC
epoxy_glVertexAttrib1hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 57725 /* glVertexAttrib1hvNV */);
}

static PFNGLVERTEXATTRIB1SPROC
epoxy_glVertexAttrib1s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57745 /* "glVertexAttrib1s" */,
        57762 /* "glVertexAttrib1sARB" */,
        57762 /* "glVertexAttrib1sARB" */,
        57782 /* "glVertexAttrib1sNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57745 /* "glVertexAttrib1s" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1SARBPROC
epoxy_glVertexAttrib1sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57762 /* "glVertexAttrib1sARB" */,
        57762 /* "glVertexAttrib1sARB" */,
        57745 /* "glVertexAttrib1s" */,
        57782 /* "glVertexAttrib1sNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57762 /* "glVertexAttrib1sARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1SNVPROC
epoxy_glVertexAttrib1sNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57782 /* "glVertexAttrib1sNV" */,
        57745 /* "glVertexAttrib1s" */,
        57762 /* "glVertexAttrib1sARB" */,
        57762 /* "glVertexAttrib1sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57782 /* "glVertexAttrib1sNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1SVPROC
epoxy_glVertexAttrib1sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57801 /* "glVertexAttrib1sv" */,
        57819 /* "glVertexAttrib1svARB" */,
        57819 /* "glVertexAttrib1svARB" */,
        57840 /* "glVertexAttrib1svNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57801 /* "glVertexAttrib1sv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1SVARBPROC
epoxy_glVertexAttrib1svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57819 /* "glVertexAttrib1svARB" */,
        57819 /* "glVertexAttrib1svARB" */,
        57801 /* "glVertexAttrib1sv" */,
        57840 /* "glVertexAttrib1svNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57819 /* "glVertexAttrib1svARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB1SVNVPROC
epoxy_glVertexAttrib1svNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57840 /* "glVertexAttrib1svNV" */,
        57801 /* "glVertexAttrib1sv" */,
        57819 /* "glVertexAttrib1svARB" */,
        57819 /* "glVertexAttrib1svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57840 /* "glVertexAttrib1svNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2DPROC
epoxy_glVertexAttrib2d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57860 /* "glVertexAttrib2d" */,
        57877 /* "glVertexAttrib2dARB" */,
        57877 /* "glVertexAttrib2dARB" */,
        57897 /* "glVertexAttrib2dNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57860 /* "glVertexAttrib2d" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2DARBPROC
epoxy_glVertexAttrib2dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57877 /* "glVertexAttrib2dARB" */,
        57877 /* "glVertexAttrib2dARB" */,
        57860 /* "glVertexAttrib2d" */,
        57897 /* "glVertexAttrib2dNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57877 /* "glVertexAttrib2dARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2DNVPROC
epoxy_glVertexAttrib2dNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57897 /* "glVertexAttrib2dNV" */,
        57860 /* "glVertexAttrib2d" */,
        57877 /* "glVertexAttrib2dARB" */,
        57877 /* "glVertexAttrib2dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57897 /* "glVertexAttrib2dNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2DVPROC
epoxy_glVertexAttrib2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57916 /* "glVertexAttrib2dv" */,
        57934 /* "glVertexAttrib2dvARB" */,
        57934 /* "glVertexAttrib2dvARB" */,
        57955 /* "glVertexAttrib2dvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57916 /* "glVertexAttrib2dv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2DVARBPROC
epoxy_glVertexAttrib2dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57934 /* "glVertexAttrib2dvARB" */,
        57934 /* "glVertexAttrib2dvARB" */,
        57916 /* "glVertexAttrib2dv" */,
        57955 /* "glVertexAttrib2dvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57934 /* "glVertexAttrib2dvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2DVNVPROC
epoxy_glVertexAttrib2dvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57955 /* "glVertexAttrib2dvNV" */,
        57916 /* "glVertexAttrib2dv" */,
        57934 /* "glVertexAttrib2dvARB" */,
        57934 /* "glVertexAttrib2dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57955 /* "glVertexAttrib2dvNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2FPROC
epoxy_glVertexAttrib2f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57975 /* "glVertexAttrib2f" */,
        57975 /* "glVertexAttrib2f" */,
        57992 /* "glVertexAttrib2fARB" */,
        57992 /* "glVertexAttrib2fARB" */,
        58012 /* "glVertexAttrib2fNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57975 /* "glVertexAttrib2f" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2FARBPROC
epoxy_glVertexAttrib2fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        57992 /* "glVertexAttrib2fARB" */,
        57992 /* "glVertexAttrib2fARB" */,
        57975 /* "glVertexAttrib2f" */,
        57975 /* "glVertexAttrib2f" */,
        58012 /* "glVertexAttrib2fNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 57992 /* "glVertexAttrib2fARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2FNVPROC
epoxy_glVertexAttrib2fNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58012 /* "glVertexAttrib2fNV" */,
        57975 /* "glVertexAttrib2f" */,
        57975 /* "glVertexAttrib2f" */,
        57992 /* "glVertexAttrib2fARB" */,
        57992 /* "glVertexAttrib2fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58012 /* "glVertexAttrib2fNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2FVPROC
epoxy_glVertexAttrib2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58031 /* "glVertexAttrib2fv" */,
        58031 /* "glVertexAttrib2fv" */,
        58049 /* "glVertexAttrib2fvARB" */,
        58049 /* "glVertexAttrib2fvARB" */,
        58070 /* "glVertexAttrib2fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58031 /* "glVertexAttrib2fv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2FVARBPROC
epoxy_glVertexAttrib2fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58049 /* "glVertexAttrib2fvARB" */,
        58049 /* "glVertexAttrib2fvARB" */,
        58031 /* "glVertexAttrib2fv" */,
        58031 /* "glVertexAttrib2fv" */,
        58070 /* "glVertexAttrib2fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58049 /* "glVertexAttrib2fvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2FVNVPROC
epoxy_glVertexAttrib2fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58070 /* "glVertexAttrib2fvNV" */,
        58031 /* "glVertexAttrib2fv" */,
        58031 /* "glVertexAttrib2fv" */,
        58049 /* "glVertexAttrib2fvARB" */,
        58049 /* "glVertexAttrib2fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58070 /* "glVertexAttrib2fvNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2HNVPROC
epoxy_glVertexAttrib2hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 58090 /* glVertexAttrib2hNV */);
}

static PFNGLVERTEXATTRIB2HVNVPROC
epoxy_glVertexAttrib2hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 58109 /* glVertexAttrib2hvNV */);
}

static PFNGLVERTEXATTRIB2SPROC
epoxy_glVertexAttrib2s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58129 /* "glVertexAttrib2s" */,
        58146 /* "glVertexAttrib2sARB" */,
        58146 /* "glVertexAttrib2sARB" */,
        58166 /* "glVertexAttrib2sNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58129 /* "glVertexAttrib2s" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2SARBPROC
epoxy_glVertexAttrib2sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58146 /* "glVertexAttrib2sARB" */,
        58146 /* "glVertexAttrib2sARB" */,
        58129 /* "glVertexAttrib2s" */,
        58166 /* "glVertexAttrib2sNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58146 /* "glVertexAttrib2sARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2SNVPROC
epoxy_glVertexAttrib2sNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58166 /* "glVertexAttrib2sNV" */,
        58129 /* "glVertexAttrib2s" */,
        58146 /* "glVertexAttrib2sARB" */,
        58146 /* "glVertexAttrib2sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58166 /* "glVertexAttrib2sNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2SVPROC
epoxy_glVertexAttrib2sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58185 /* "glVertexAttrib2sv" */,
        58203 /* "glVertexAttrib2svARB" */,
        58203 /* "glVertexAttrib2svARB" */,
        58224 /* "glVertexAttrib2svNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58185 /* "glVertexAttrib2sv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2SVARBPROC
epoxy_glVertexAttrib2svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58203 /* "glVertexAttrib2svARB" */,
        58203 /* "glVertexAttrib2svARB" */,
        58185 /* "glVertexAttrib2sv" */,
        58224 /* "glVertexAttrib2svNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58203 /* "glVertexAttrib2svARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB2SVNVPROC
epoxy_glVertexAttrib2svNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58224 /* "glVertexAttrib2svNV" */,
        58185 /* "glVertexAttrib2sv" */,
        58203 /* "glVertexAttrib2svARB" */,
        58203 /* "glVertexAttrib2svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58224 /* "glVertexAttrib2svNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3DPROC
epoxy_glVertexAttrib3d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58244 /* "glVertexAttrib3d" */,
        58261 /* "glVertexAttrib3dARB" */,
        58261 /* "glVertexAttrib3dARB" */,
        58281 /* "glVertexAttrib3dNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58244 /* "glVertexAttrib3d" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3DARBPROC
epoxy_glVertexAttrib3dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58261 /* "glVertexAttrib3dARB" */,
        58261 /* "glVertexAttrib3dARB" */,
        58244 /* "glVertexAttrib3d" */,
        58281 /* "glVertexAttrib3dNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58261 /* "glVertexAttrib3dARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3DNVPROC
epoxy_glVertexAttrib3dNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58281 /* "glVertexAttrib3dNV" */,
        58244 /* "glVertexAttrib3d" */,
        58261 /* "glVertexAttrib3dARB" */,
        58261 /* "glVertexAttrib3dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58281 /* "glVertexAttrib3dNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3DVPROC
epoxy_glVertexAttrib3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58300 /* "glVertexAttrib3dv" */,
        58318 /* "glVertexAttrib3dvARB" */,
        58318 /* "glVertexAttrib3dvARB" */,
        58339 /* "glVertexAttrib3dvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58300 /* "glVertexAttrib3dv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3DVARBPROC
epoxy_glVertexAttrib3dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58318 /* "glVertexAttrib3dvARB" */,
        58318 /* "glVertexAttrib3dvARB" */,
        58300 /* "glVertexAttrib3dv" */,
        58339 /* "glVertexAttrib3dvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58318 /* "glVertexAttrib3dvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3DVNVPROC
epoxy_glVertexAttrib3dvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58339 /* "glVertexAttrib3dvNV" */,
        58300 /* "glVertexAttrib3dv" */,
        58318 /* "glVertexAttrib3dvARB" */,
        58318 /* "glVertexAttrib3dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58339 /* "glVertexAttrib3dvNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3FPROC
epoxy_glVertexAttrib3f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58359 /* "glVertexAttrib3f" */,
        58359 /* "glVertexAttrib3f" */,
        58376 /* "glVertexAttrib3fARB" */,
        58376 /* "glVertexAttrib3fARB" */,
        58396 /* "glVertexAttrib3fNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58359 /* "glVertexAttrib3f" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3FARBPROC
epoxy_glVertexAttrib3fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58376 /* "glVertexAttrib3fARB" */,
        58376 /* "glVertexAttrib3fARB" */,
        58359 /* "glVertexAttrib3f" */,
        58359 /* "glVertexAttrib3f" */,
        58396 /* "glVertexAttrib3fNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58376 /* "glVertexAttrib3fARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3FNVPROC
epoxy_glVertexAttrib3fNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58396 /* "glVertexAttrib3fNV" */,
        58359 /* "glVertexAttrib3f" */,
        58359 /* "glVertexAttrib3f" */,
        58376 /* "glVertexAttrib3fARB" */,
        58376 /* "glVertexAttrib3fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58396 /* "glVertexAttrib3fNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3FVPROC
epoxy_glVertexAttrib3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58415 /* "glVertexAttrib3fv" */,
        58415 /* "glVertexAttrib3fv" */,
        58433 /* "glVertexAttrib3fvARB" */,
        58433 /* "glVertexAttrib3fvARB" */,
        58454 /* "glVertexAttrib3fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58415 /* "glVertexAttrib3fv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3FVARBPROC
epoxy_glVertexAttrib3fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58433 /* "glVertexAttrib3fvARB" */,
        58433 /* "glVertexAttrib3fvARB" */,
        58415 /* "glVertexAttrib3fv" */,
        58415 /* "glVertexAttrib3fv" */,
        58454 /* "glVertexAttrib3fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58433 /* "glVertexAttrib3fvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3FVNVPROC
epoxy_glVertexAttrib3fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58454 /* "glVertexAttrib3fvNV" */,
        58415 /* "glVertexAttrib3fv" */,
        58415 /* "glVertexAttrib3fv" */,
        58433 /* "glVertexAttrib3fvARB" */,
        58433 /* "glVertexAttrib3fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58454 /* "glVertexAttrib3fvNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3HNVPROC
epoxy_glVertexAttrib3hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 58474 /* glVertexAttrib3hNV */);
}

static PFNGLVERTEXATTRIB3HVNVPROC
epoxy_glVertexAttrib3hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 58493 /* glVertexAttrib3hvNV */);
}

static PFNGLVERTEXATTRIB3SPROC
epoxy_glVertexAttrib3s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58513 /* "glVertexAttrib3s" */,
        58530 /* "glVertexAttrib3sARB" */,
        58530 /* "glVertexAttrib3sARB" */,
        58550 /* "glVertexAttrib3sNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58513 /* "glVertexAttrib3s" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3SARBPROC
epoxy_glVertexAttrib3sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58530 /* "glVertexAttrib3sARB" */,
        58530 /* "glVertexAttrib3sARB" */,
        58513 /* "glVertexAttrib3s" */,
        58550 /* "glVertexAttrib3sNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58530 /* "glVertexAttrib3sARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3SNVPROC
epoxy_glVertexAttrib3sNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58550 /* "glVertexAttrib3sNV" */,
        58513 /* "glVertexAttrib3s" */,
        58530 /* "glVertexAttrib3sARB" */,
        58530 /* "glVertexAttrib3sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58550 /* "glVertexAttrib3sNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3SVPROC
epoxy_glVertexAttrib3sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58569 /* "glVertexAttrib3sv" */,
        58587 /* "glVertexAttrib3svARB" */,
        58587 /* "glVertexAttrib3svARB" */,
        58608 /* "glVertexAttrib3svNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58569 /* "glVertexAttrib3sv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3SVARBPROC
epoxy_glVertexAttrib3svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58587 /* "glVertexAttrib3svARB" */,
        58587 /* "glVertexAttrib3svARB" */,
        58569 /* "glVertexAttrib3sv" */,
        58608 /* "glVertexAttrib3svNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58587 /* "glVertexAttrib3svARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB3SVNVPROC
epoxy_glVertexAttrib3svNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58608 /* "glVertexAttrib3svNV" */,
        58569 /* "glVertexAttrib3sv" */,
        58587 /* "glVertexAttrib3svARB" */,
        58587 /* "glVertexAttrib3svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58608 /* "glVertexAttrib3svNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NBVPROC
epoxy_glVertexAttrib4Nbv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58628 /* "glVertexAttrib4Nbv" */,
        58647 /* "glVertexAttrib4NbvARB" */,
        58647 /* "glVertexAttrib4NbvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58628 /* "glVertexAttrib4Nbv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NBVARBPROC
epoxy_glVertexAttrib4NbvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58647 /* "glVertexAttrib4NbvARB" */,
        58647 /* "glVertexAttrib4NbvARB" */,
        58628 /* "glVertexAttrib4Nbv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58647 /* "glVertexAttrib4NbvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NIVPROC
epoxy_glVertexAttrib4Niv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58669 /* "glVertexAttrib4Niv" */,
        58688 /* "glVertexAttrib4NivARB" */,
        58688 /* "glVertexAttrib4NivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58669 /* "glVertexAttrib4Niv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NIVARBPROC
epoxy_glVertexAttrib4NivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58688 /* "glVertexAttrib4NivARB" */,
        58688 /* "glVertexAttrib4NivARB" */,
        58669 /* "glVertexAttrib4Niv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58688 /* "glVertexAttrib4NivARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NSVPROC
epoxy_glVertexAttrib4Nsv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58710 /* "glVertexAttrib4Nsv" */,
        58729 /* "glVertexAttrib4NsvARB" */,
        58729 /* "glVertexAttrib4NsvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58710 /* "glVertexAttrib4Nsv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NSVARBPROC
epoxy_glVertexAttrib4NsvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58729 /* "glVertexAttrib4NsvARB" */,
        58729 /* "glVertexAttrib4NsvARB" */,
        58710 /* "glVertexAttrib4Nsv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58729 /* "glVertexAttrib4NsvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NUBPROC
epoxy_glVertexAttrib4Nub_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58751 /* "glVertexAttrib4Nub" */,
        58770 /* "glVertexAttrib4NubARB" */,
        58770 /* "glVertexAttrib4NubARB" */,
        59383 /* "glVertexAttrib4ubNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58751 /* "glVertexAttrib4Nub" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NUBARBPROC
epoxy_glVertexAttrib4NubARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58770 /* "glVertexAttrib4NubARB" */,
        58770 /* "glVertexAttrib4NubARB" */,
        58751 /* "glVertexAttrib4Nub" */,
        59383 /* "glVertexAttrib4ubNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58770 /* "glVertexAttrib4NubARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NUBVPROC
epoxy_glVertexAttrib4Nubv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58792 /* "glVertexAttrib4Nubv" */,
        58812 /* "glVertexAttrib4NubvARB" */,
        58812 /* "glVertexAttrib4NubvARB" */,
        59444 /* "glVertexAttrib4ubvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58792 /* "glVertexAttrib4Nubv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NUBVARBPROC
epoxy_glVertexAttrib4NubvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58812 /* "glVertexAttrib4NubvARB" */,
        58812 /* "glVertexAttrib4NubvARB" */,
        58792 /* "glVertexAttrib4Nubv" */,
        59444 /* "glVertexAttrib4ubvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58812 /* "glVertexAttrib4NubvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NUIVPROC
epoxy_glVertexAttrib4Nuiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58835 /* "glVertexAttrib4Nuiv" */,
        58855 /* "glVertexAttrib4NuivARB" */,
        58855 /* "glVertexAttrib4NuivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58835 /* "glVertexAttrib4Nuiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NUIVARBPROC
epoxy_glVertexAttrib4NuivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58855 /* "glVertexAttrib4NuivARB" */,
        58855 /* "glVertexAttrib4NuivARB" */,
        58835 /* "glVertexAttrib4Nuiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58855 /* "glVertexAttrib4NuivARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NUSVPROC
epoxy_glVertexAttrib4Nusv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58878 /* "glVertexAttrib4Nusv" */,
        58898 /* "glVertexAttrib4NusvARB" */,
        58898 /* "glVertexAttrib4NusvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58878 /* "glVertexAttrib4Nusv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4NUSVARBPROC
epoxy_glVertexAttrib4NusvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58898 /* "glVertexAttrib4NusvARB" */,
        58898 /* "glVertexAttrib4NusvARB" */,
        58878 /* "glVertexAttrib4Nusv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58898 /* "glVertexAttrib4NusvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4BVPROC
epoxy_glVertexAttrib4bv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58921 /* "glVertexAttrib4bv" */,
        58939 /* "glVertexAttrib4bvARB" */,
        58939 /* "glVertexAttrib4bvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58921 /* "glVertexAttrib4bv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4BVARBPROC
epoxy_glVertexAttrib4bvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58939 /* "glVertexAttrib4bvARB" */,
        58939 /* "glVertexAttrib4bvARB" */,
        58921 /* "glVertexAttrib4bv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58939 /* "glVertexAttrib4bvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4DPROC
epoxy_glVertexAttrib4d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58960 /* "glVertexAttrib4d" */,
        58977 /* "glVertexAttrib4dARB" */,
        58977 /* "glVertexAttrib4dARB" */,
        58997 /* "glVertexAttrib4dNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58960 /* "glVertexAttrib4d" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4DARBPROC
epoxy_glVertexAttrib4dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58977 /* "glVertexAttrib4dARB" */,
        58977 /* "glVertexAttrib4dARB" */,
        58960 /* "glVertexAttrib4d" */,
        58997 /* "glVertexAttrib4dNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58977 /* "glVertexAttrib4dARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4DNVPROC
epoxy_glVertexAttrib4dNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        58997 /* "glVertexAttrib4dNV" */,
        58960 /* "glVertexAttrib4d" */,
        58977 /* "glVertexAttrib4dARB" */,
        58977 /* "glVertexAttrib4dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 58997 /* "glVertexAttrib4dNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4DVPROC
epoxy_glVertexAttrib4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59016 /* "glVertexAttrib4dv" */,
        59034 /* "glVertexAttrib4dvARB" */,
        59034 /* "glVertexAttrib4dvARB" */,
        59055 /* "glVertexAttrib4dvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59016 /* "glVertexAttrib4dv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4DVARBPROC
epoxy_glVertexAttrib4dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59034 /* "glVertexAttrib4dvARB" */,
        59034 /* "glVertexAttrib4dvARB" */,
        59016 /* "glVertexAttrib4dv" */,
        59055 /* "glVertexAttrib4dvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59034 /* "glVertexAttrib4dvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4DVNVPROC
epoxy_glVertexAttrib4dvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59055 /* "glVertexAttrib4dvNV" */,
        59016 /* "glVertexAttrib4dv" */,
        59034 /* "glVertexAttrib4dvARB" */,
        59034 /* "glVertexAttrib4dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59055 /* "glVertexAttrib4dvNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4FPROC
epoxy_glVertexAttrib4f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59075 /* "glVertexAttrib4f" */,
        59075 /* "glVertexAttrib4f" */,
        59092 /* "glVertexAttrib4fARB" */,
        59092 /* "glVertexAttrib4fARB" */,
        59112 /* "glVertexAttrib4fNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59075 /* "glVertexAttrib4f" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4FARBPROC
epoxy_glVertexAttrib4fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59092 /* "glVertexAttrib4fARB" */,
        59092 /* "glVertexAttrib4fARB" */,
        59075 /* "glVertexAttrib4f" */,
        59075 /* "glVertexAttrib4f" */,
        59112 /* "glVertexAttrib4fNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59092 /* "glVertexAttrib4fARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4FNVPROC
epoxy_glVertexAttrib4fNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59112 /* "glVertexAttrib4fNV" */,
        59075 /* "glVertexAttrib4f" */,
        59075 /* "glVertexAttrib4f" */,
        59092 /* "glVertexAttrib4fARB" */,
        59092 /* "glVertexAttrib4fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59112 /* "glVertexAttrib4fNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4FVPROC
epoxy_glVertexAttrib4fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59131 /* "glVertexAttrib4fv" */,
        59131 /* "glVertexAttrib4fv" */,
        59149 /* "glVertexAttrib4fvARB" */,
        59149 /* "glVertexAttrib4fvARB" */,
        59170 /* "glVertexAttrib4fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59131 /* "glVertexAttrib4fv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4FVARBPROC
epoxy_glVertexAttrib4fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59149 /* "glVertexAttrib4fvARB" */,
        59149 /* "glVertexAttrib4fvARB" */,
        59131 /* "glVertexAttrib4fv" */,
        59131 /* "glVertexAttrib4fv" */,
        59170 /* "glVertexAttrib4fvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59149 /* "glVertexAttrib4fvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4FVNVPROC
epoxy_glVertexAttrib4fvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59170 /* "glVertexAttrib4fvNV" */,
        59131 /* "glVertexAttrib4fv" */,
        59131 /* "glVertexAttrib4fv" */,
        59149 /* "glVertexAttrib4fvARB" */,
        59149 /* "glVertexAttrib4fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59170 /* "glVertexAttrib4fvNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4HNVPROC
epoxy_glVertexAttrib4hNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 59190 /* glVertexAttrib4hNV */);
}

static PFNGLVERTEXATTRIB4HVNVPROC
epoxy_glVertexAttrib4hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 59209 /* glVertexAttrib4hvNV */);
}

static PFNGLVERTEXATTRIB4IVPROC
epoxy_glVertexAttrib4iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59229 /* "glVertexAttrib4iv" */,
        59247 /* "glVertexAttrib4ivARB" */,
        59247 /* "glVertexAttrib4ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59229 /* "glVertexAttrib4iv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4IVARBPROC
epoxy_glVertexAttrib4ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59247 /* "glVertexAttrib4ivARB" */,
        59247 /* "glVertexAttrib4ivARB" */,
        59229 /* "glVertexAttrib4iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59247 /* "glVertexAttrib4ivARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4SPROC
epoxy_glVertexAttrib4s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59268 /* "glVertexAttrib4s" */,
        59285 /* "glVertexAttrib4sARB" */,
        59285 /* "glVertexAttrib4sARB" */,
        59305 /* "glVertexAttrib4sNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59268 /* "glVertexAttrib4s" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4SARBPROC
epoxy_glVertexAttrib4sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59285 /* "glVertexAttrib4sARB" */,
        59285 /* "glVertexAttrib4sARB" */,
        59268 /* "glVertexAttrib4s" */,
        59305 /* "glVertexAttrib4sNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59285 /* "glVertexAttrib4sARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4SNVPROC
epoxy_glVertexAttrib4sNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59305 /* "glVertexAttrib4sNV" */,
        59268 /* "glVertexAttrib4s" */,
        59285 /* "glVertexAttrib4sARB" */,
        59285 /* "glVertexAttrib4sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59305 /* "glVertexAttrib4sNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4SVPROC
epoxy_glVertexAttrib4sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59324 /* "glVertexAttrib4sv" */,
        59342 /* "glVertexAttrib4svARB" */,
        59342 /* "glVertexAttrib4svARB" */,
        59363 /* "glVertexAttrib4svNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59324 /* "glVertexAttrib4sv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4SVARBPROC
epoxy_glVertexAttrib4svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        GL_extension_GL_NV_vertex_program,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59342 /* "glVertexAttrib4svARB" */,
        59342 /* "glVertexAttrib4svARB" */,
        59324 /* "glVertexAttrib4sv" */,
        59363 /* "glVertexAttrib4svNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59342 /* "glVertexAttrib4svARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4SVNVPROC
epoxy_glVertexAttrib4svNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59363 /* "glVertexAttrib4svNV" */,
        59324 /* "glVertexAttrib4sv" */,
        59342 /* "glVertexAttrib4svARB" */,
        59342 /* "glVertexAttrib4svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59363 /* "glVertexAttrib4svNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4UBNVPROC
epoxy_glVertexAttrib4ubNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59383 /* "glVertexAttrib4ubNV" */,
        58751 /* "glVertexAttrib4Nub" */,
        58770 /* "glVertexAttrib4NubARB" */,
        58770 /* "glVertexAttrib4NubARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59383 /* "glVertexAttrib4ubNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4UBVPROC
epoxy_glVertexAttrib4ubv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59403 /* "glVertexAttrib4ubv" */,
        59422 /* "glVertexAttrib4ubvARB" */,
        59422 /* "glVertexAttrib4ubvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59403 /* "glVertexAttrib4ubv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4UBVARBPROC
epoxy_glVertexAttrib4ubvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59422 /* "glVertexAttrib4ubvARB" */,
        59422 /* "glVertexAttrib4ubvARB" */,
        59403 /* "glVertexAttrib4ubv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59422 /* "glVertexAttrib4ubvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4UBVNVPROC
epoxy_glVertexAttrib4ubvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program,
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59444 /* "glVertexAttrib4ubvNV" */,
        58792 /* "glVertexAttrib4Nubv" */,
        58812 /* "glVertexAttrib4NubvARB" */,
        58812 /* "glVertexAttrib4NubvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59444 /* "glVertexAttrib4ubvNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4UIVPROC
epoxy_glVertexAttrib4uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59465 /* "glVertexAttrib4uiv" */,
        59484 /* "glVertexAttrib4uivARB" */,
        59484 /* "glVertexAttrib4uivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59465 /* "glVertexAttrib4uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4UIVARBPROC
epoxy_glVertexAttrib4uivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59484 /* "glVertexAttrib4uivARB" */,
        59484 /* "glVertexAttrib4uivARB" */,
        59465 /* "glVertexAttrib4uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59484 /* "glVertexAttrib4uivARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4USVPROC
epoxy_glVertexAttrib4usv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59506 /* "glVertexAttrib4usv" */,
        59525 /* "glVertexAttrib4usvARB" */,
        59525 /* "glVertexAttrib4usvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59506 /* "glVertexAttrib4usv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIB4USVARBPROC
epoxy_glVertexAttrib4usvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59525 /* "glVertexAttrib4usvARB" */,
        59525 /* "glVertexAttrib4usvARB" */,
        59506 /* "glVertexAttrib4usv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59525 /* "glVertexAttrib4usvARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
epoxy_glVertexAttribArrayObjectATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_attrib_array_object, 59547 /* glVertexAttribArrayObjectATI */);
}

static PFNGLVERTEXATTRIBBINDINGPROC
epoxy_glVertexAttribBinding_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_vertex_attrib_binding,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59576 /* "glVertexAttribBinding" */,
        59576 /* "glVertexAttribBinding" */,
        59576 /* "glVertexAttribBinding" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59576 /* "glVertexAttribBinding" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBDIVISORPROC
epoxy_glVertexAttribDivisor_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_ARB_instanced_arrays,
        GL_extension_GL_EXT_instanced_arrays,
        GL_extension_GL_NV_instanced_arrays,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59598 /* "glVertexAttribDivisor" */,
        59598 /* "glVertexAttribDivisor" */,
        59620 /* "glVertexAttribDivisorANGLE" */,
        59647 /* "glVertexAttribDivisorARB" */,
        59672 /* "glVertexAttribDivisorEXT" */,
        59697 /* "glVertexAttribDivisorNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59598 /* "glVertexAttribDivisor" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBDIVISORANGLEPROC
epoxy_glVertexAttribDivisorANGLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ANGLE_instanced_arrays,
        Desktop_OpenGL_3_3,
        OpenGL_ES_3_0,
        GL_extension_GL_ARB_instanced_arrays,
        GL_extension_GL_EXT_instanced_arrays,
        GL_extension_GL_NV_instanced_arrays,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59620 /* "glVertexAttribDivisorANGLE" */,
        59598 /* "glVertexAttribDivisor" */,
        59598 /* "glVertexAttribDivisor" */,
        59647 /* "glVertexAttribDivisorARB" */,
        59672 /* "glVertexAttribDivisorEXT" */,
        59697 /* "glVertexAttribDivisorNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59620 /* "glVertexAttribDivisorANGLE" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBDIVISORARBPROC
epoxy_glVertexAttribDivisorARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_instanced_arrays,
        Desktop_OpenGL_3_3,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_EXT_instanced_arrays,
        GL_extension_GL_NV_instanced_arrays,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59647 /* "glVertexAttribDivisorARB" */,
        59598 /* "glVertexAttribDivisor" */,
        59598 /* "glVertexAttribDivisor" */,
        59620 /* "glVertexAttribDivisorANGLE" */,
        59672 /* "glVertexAttribDivisorEXT" */,
        59697 /* "glVertexAttribDivisorNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59647 /* "glVertexAttribDivisorARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBDIVISOREXTPROC
epoxy_glVertexAttribDivisorEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_instanced_arrays,
        Desktop_OpenGL_3_3,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_ARB_instanced_arrays,
        GL_extension_GL_NV_instanced_arrays,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59672 /* "glVertexAttribDivisorEXT" */,
        59598 /* "glVertexAttribDivisor" */,
        59598 /* "glVertexAttribDivisor" */,
        59620 /* "glVertexAttribDivisorANGLE" */,
        59647 /* "glVertexAttribDivisorARB" */,
        59697 /* "glVertexAttribDivisorNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59672 /* "glVertexAttribDivisorEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBDIVISORNVPROC
epoxy_glVertexAttribDivisorNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_instanced_arrays,
        Desktop_OpenGL_3_3,
        OpenGL_ES_3_0,
        GL_extension_GL_ANGLE_instanced_arrays,
        GL_extension_GL_ARB_instanced_arrays,
        GL_extension_GL_EXT_instanced_arrays,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59697 /* "glVertexAttribDivisorNV" */,
        59598 /* "glVertexAttribDivisor" */,
        59598 /* "glVertexAttribDivisor" */,
        59620 /* "glVertexAttribDivisorANGLE" */,
        59647 /* "glVertexAttribDivisorARB" */,
        59672 /* "glVertexAttribDivisorEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59697 /* "glVertexAttribDivisorNV" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBFORMATPROC
epoxy_glVertexAttribFormat_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_vertex_attrib_binding,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59721 /* "glVertexAttribFormat" */,
        59721 /* "glVertexAttribFormat" */,
        59721 /* "glVertexAttribFormat" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59721 /* "glVertexAttribFormat" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBFORMATNVPROC
epoxy_glVertexAttribFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 59742 /* glVertexAttribFormatNV */);
}

static PFNGLVERTEXATTRIBI1IPROC
epoxy_glVertexAttribI1i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59765 /* "glVertexAttribI1i" */,
        59783 /* "glVertexAttribI1iEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59765 /* "glVertexAttribI1i" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI1IEXTPROC
epoxy_glVertexAttribI1iEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59783 /* "glVertexAttribI1iEXT" */,
        59765 /* "glVertexAttribI1i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59783 /* "glVertexAttribI1iEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI1IVPROC
epoxy_glVertexAttribI1iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59804 /* "glVertexAttribI1iv" */,
        59823 /* "glVertexAttribI1ivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59804 /* "glVertexAttribI1iv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI1IVEXTPROC
epoxy_glVertexAttribI1ivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59823 /* "glVertexAttribI1ivEXT" */,
        59804 /* "glVertexAttribI1iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59823 /* "glVertexAttribI1ivEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI1UIPROC
epoxy_glVertexAttribI1ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59845 /* "glVertexAttribI1ui" */,
        59864 /* "glVertexAttribI1uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59845 /* "glVertexAttribI1ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI1UIEXTPROC
epoxy_glVertexAttribI1uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59864 /* "glVertexAttribI1uiEXT" */,
        59845 /* "glVertexAttribI1ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59864 /* "glVertexAttribI1uiEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI1UIVPROC
epoxy_glVertexAttribI1uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59886 /* "glVertexAttribI1uiv" */,
        59906 /* "glVertexAttribI1uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59886 /* "glVertexAttribI1uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI1UIVEXTPROC
epoxy_glVertexAttribI1uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59906 /* "glVertexAttribI1uivEXT" */,
        59886 /* "glVertexAttribI1uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59906 /* "glVertexAttribI1uivEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI2IPROC
epoxy_glVertexAttribI2i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59929 /* "glVertexAttribI2i" */,
        59947 /* "glVertexAttribI2iEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59929 /* "glVertexAttribI2i" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI2IEXTPROC
epoxy_glVertexAttribI2iEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59947 /* "glVertexAttribI2iEXT" */,
        59929 /* "glVertexAttribI2i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59947 /* "glVertexAttribI2iEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI2IVPROC
epoxy_glVertexAttribI2iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59968 /* "glVertexAttribI2iv" */,
        59987 /* "glVertexAttribI2ivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59968 /* "glVertexAttribI2iv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI2IVEXTPROC
epoxy_glVertexAttribI2ivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        59987 /* "glVertexAttribI2ivEXT" */,
        59968 /* "glVertexAttribI2iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 59987 /* "glVertexAttribI2ivEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI2UIPROC
epoxy_glVertexAttribI2ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60009 /* "glVertexAttribI2ui" */,
        60028 /* "glVertexAttribI2uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60009 /* "glVertexAttribI2ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI2UIEXTPROC
epoxy_glVertexAttribI2uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60028 /* "glVertexAttribI2uiEXT" */,
        60009 /* "glVertexAttribI2ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60028 /* "glVertexAttribI2uiEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI2UIVPROC
epoxy_glVertexAttribI2uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60050 /* "glVertexAttribI2uiv" */,
        60070 /* "glVertexAttribI2uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60050 /* "glVertexAttribI2uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI2UIVEXTPROC
epoxy_glVertexAttribI2uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60070 /* "glVertexAttribI2uivEXT" */,
        60050 /* "glVertexAttribI2uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60070 /* "glVertexAttribI2uivEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI3IPROC
epoxy_glVertexAttribI3i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60093 /* "glVertexAttribI3i" */,
        60111 /* "glVertexAttribI3iEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60093 /* "glVertexAttribI3i" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI3IEXTPROC
epoxy_glVertexAttribI3iEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60111 /* "glVertexAttribI3iEXT" */,
        60093 /* "glVertexAttribI3i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60111 /* "glVertexAttribI3iEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI3IVPROC
epoxy_glVertexAttribI3iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60132 /* "glVertexAttribI3iv" */,
        60151 /* "glVertexAttribI3ivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60132 /* "glVertexAttribI3iv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI3IVEXTPROC
epoxy_glVertexAttribI3ivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60151 /* "glVertexAttribI3ivEXT" */,
        60132 /* "glVertexAttribI3iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60151 /* "glVertexAttribI3ivEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI3UIPROC
epoxy_glVertexAttribI3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60173 /* "glVertexAttribI3ui" */,
        60192 /* "glVertexAttribI3uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60173 /* "glVertexAttribI3ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI3UIEXTPROC
epoxy_glVertexAttribI3uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60192 /* "glVertexAttribI3uiEXT" */,
        60173 /* "glVertexAttribI3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60192 /* "glVertexAttribI3uiEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI3UIVPROC
epoxy_glVertexAttribI3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60214 /* "glVertexAttribI3uiv" */,
        60234 /* "glVertexAttribI3uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60214 /* "glVertexAttribI3uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI3UIVEXTPROC
epoxy_glVertexAttribI3uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60234 /* "glVertexAttribI3uivEXT" */,
        60214 /* "glVertexAttribI3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60234 /* "glVertexAttribI3uivEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4BVPROC
epoxy_glVertexAttribI4bv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60257 /* "glVertexAttribI4bv" */,
        60276 /* "glVertexAttribI4bvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60257 /* "glVertexAttribI4bv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4BVEXTPROC
epoxy_glVertexAttribI4bvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60276 /* "glVertexAttribI4bvEXT" */,
        60257 /* "glVertexAttribI4bv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60276 /* "glVertexAttribI4bvEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4IPROC
epoxy_glVertexAttribI4i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60298 /* "glVertexAttribI4i" */,
        60298 /* "glVertexAttribI4i" */,
        60316 /* "glVertexAttribI4iEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60298 /* "glVertexAttribI4i" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4IEXTPROC
epoxy_glVertexAttribI4iEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60316 /* "glVertexAttribI4iEXT" */,
        60298 /* "glVertexAttribI4i" */,
        60298 /* "glVertexAttribI4i" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60316 /* "glVertexAttribI4iEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4IVPROC
epoxy_glVertexAttribI4iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60337 /* "glVertexAttribI4iv" */,
        60337 /* "glVertexAttribI4iv" */,
        60356 /* "glVertexAttribI4ivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60337 /* "glVertexAttribI4iv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4IVEXTPROC
epoxy_glVertexAttribI4ivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60356 /* "glVertexAttribI4ivEXT" */,
        60337 /* "glVertexAttribI4iv" */,
        60337 /* "glVertexAttribI4iv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60356 /* "glVertexAttribI4ivEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4SVPROC
epoxy_glVertexAttribI4sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60378 /* "glVertexAttribI4sv" */,
        60397 /* "glVertexAttribI4svEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60378 /* "glVertexAttribI4sv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4SVEXTPROC
epoxy_glVertexAttribI4svEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60397 /* "glVertexAttribI4svEXT" */,
        60378 /* "glVertexAttribI4sv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60397 /* "glVertexAttribI4svEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4UBVPROC
epoxy_glVertexAttribI4ubv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60419 /* "glVertexAttribI4ubv" */,
        60439 /* "glVertexAttribI4ubvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60419 /* "glVertexAttribI4ubv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4UBVEXTPROC
epoxy_glVertexAttribI4ubvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60439 /* "glVertexAttribI4ubvEXT" */,
        60419 /* "glVertexAttribI4ubv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60439 /* "glVertexAttribI4ubvEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4UIPROC
epoxy_glVertexAttribI4ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60462 /* "glVertexAttribI4ui" */,
        60462 /* "glVertexAttribI4ui" */,
        60481 /* "glVertexAttribI4uiEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60462 /* "glVertexAttribI4ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4UIEXTPROC
epoxy_glVertexAttribI4uiEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60481 /* "glVertexAttribI4uiEXT" */,
        60462 /* "glVertexAttribI4ui" */,
        60462 /* "glVertexAttribI4ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60481 /* "glVertexAttribI4uiEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4UIVPROC
epoxy_glVertexAttribI4uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60503 /* "glVertexAttribI4uiv" */,
        60503 /* "glVertexAttribI4uiv" */,
        60523 /* "glVertexAttribI4uivEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60503 /* "glVertexAttribI4uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4UIVEXTPROC
epoxy_glVertexAttribI4uivEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60523 /* "glVertexAttribI4uivEXT" */,
        60503 /* "glVertexAttribI4uiv" */,
        60503 /* "glVertexAttribI4uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60523 /* "glVertexAttribI4uivEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4USVPROC
epoxy_glVertexAttribI4usv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60546 /* "glVertexAttribI4usv" */,
        60566 /* "glVertexAttribI4usvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60546 /* "glVertexAttribI4usv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBI4USVEXTPROC
epoxy_glVertexAttribI4usvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60566 /* "glVertexAttribI4usvEXT" */,
        60546 /* "glVertexAttribI4usv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60566 /* "glVertexAttribI4usvEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBIFORMATPROC
epoxy_glVertexAttribIFormat_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_vertex_attrib_binding,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60589 /* "glVertexAttribIFormat" */,
        60589 /* "glVertexAttribIFormat" */,
        60589 /* "glVertexAttribIFormat" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60589 /* "glVertexAttribIFormat" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBIFORMATNVPROC
epoxy_glVertexAttribIFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 60611 /* glVertexAttribIFormatNV */);
}

static PFNGLVERTEXATTRIBIPOINTERPROC
epoxy_glVertexAttribIPointer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        GL_extension_GL_NV_vertex_program4,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60635 /* "glVertexAttribIPointer" */,
        60635 /* "glVertexAttribIPointer" */,
        60658 /* "glVertexAttribIPointerEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60635 /* "glVertexAttribIPointer" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBIPOINTEREXTPROC
epoxy_glVertexAttribIPointerEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_vertex_program4,
        Desktop_OpenGL_3_0,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60658 /* "glVertexAttribIPointerEXT" */,
        60635 /* "glVertexAttribIPointer" */,
        60635 /* "glVertexAttribIPointer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60658 /* "glVertexAttribIPointerEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL1DPROC
epoxy_glVertexAttribL1d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60684 /* "glVertexAttribL1d" */,
        60684 /* "glVertexAttribL1d" */,
        60702 /* "glVertexAttribL1dEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60684 /* "glVertexAttribL1d" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL1DEXTPROC
epoxy_glVertexAttribL1dEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60702 /* "glVertexAttribL1dEXT" */,
        60684 /* "glVertexAttribL1d" */,
        60684 /* "glVertexAttribL1d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60702 /* "glVertexAttribL1dEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL1DVPROC
epoxy_glVertexAttribL1dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60723 /* "glVertexAttribL1dv" */,
        60723 /* "glVertexAttribL1dv" */,
        60742 /* "glVertexAttribL1dvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60723 /* "glVertexAttribL1dv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL1DVEXTPROC
epoxy_glVertexAttribL1dvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60742 /* "glVertexAttribL1dvEXT" */,
        60723 /* "glVertexAttribL1dv" */,
        60723 /* "glVertexAttribL1dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60742 /* "glVertexAttribL1dvEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL1I64NVPROC
epoxy_glVertexAttribL1i64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 60764 /* glVertexAttribL1i64NV */);
}

static PFNGLVERTEXATTRIBL1I64VNVPROC
epoxy_glVertexAttribL1i64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 60786 /* glVertexAttribL1i64vNV */);
}

static PFNGLVERTEXATTRIBL1UI64ARBPROC
epoxy_glVertexAttribL1ui64ARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 60809 /* glVertexAttribL1ui64ARB */);
}

static PFNGLVERTEXATTRIBL1UI64NVPROC
epoxy_glVertexAttribL1ui64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 60833 /* glVertexAttribL1ui64NV */);
}

static PFNGLVERTEXATTRIBL1UI64VARBPROC
epoxy_glVertexAttribL1ui64vARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 60856 /* glVertexAttribL1ui64vARB */);
}

static PFNGLVERTEXATTRIBL1UI64VNVPROC
epoxy_glVertexAttribL1ui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 60881 /* glVertexAttribL1ui64vNV */);
}

static PFNGLVERTEXATTRIBL2DPROC
epoxy_glVertexAttribL2d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60905 /* "glVertexAttribL2d" */,
        60905 /* "glVertexAttribL2d" */,
        60923 /* "glVertexAttribL2dEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60905 /* "glVertexAttribL2d" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL2DEXTPROC
epoxy_glVertexAttribL2dEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60923 /* "glVertexAttribL2dEXT" */,
        60905 /* "glVertexAttribL2d" */,
        60905 /* "glVertexAttribL2d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60923 /* "glVertexAttribL2dEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL2DVPROC
epoxy_glVertexAttribL2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60944 /* "glVertexAttribL2dv" */,
        60944 /* "glVertexAttribL2dv" */,
        60963 /* "glVertexAttribL2dvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60944 /* "glVertexAttribL2dv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL2DVEXTPROC
epoxy_glVertexAttribL2dvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        60963 /* "glVertexAttribL2dvEXT" */,
        60944 /* "glVertexAttribL2dv" */,
        60944 /* "glVertexAttribL2dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 60963 /* "glVertexAttribL2dvEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL2I64NVPROC
epoxy_glVertexAttribL2i64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 60985 /* glVertexAttribL2i64NV */);
}

static PFNGLVERTEXATTRIBL2I64VNVPROC
epoxy_glVertexAttribL2i64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61007 /* glVertexAttribL2i64vNV */);
}

static PFNGLVERTEXATTRIBL2UI64NVPROC
epoxy_glVertexAttribL2ui64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61030 /* glVertexAttribL2ui64NV */);
}

static PFNGLVERTEXATTRIBL2UI64VNVPROC
epoxy_glVertexAttribL2ui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61053 /* glVertexAttribL2ui64vNV */);
}

static PFNGLVERTEXATTRIBL3DPROC
epoxy_glVertexAttribL3d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61077 /* "glVertexAttribL3d" */,
        61077 /* "glVertexAttribL3d" */,
        61095 /* "glVertexAttribL3dEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61077 /* "glVertexAttribL3d" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL3DEXTPROC
epoxy_glVertexAttribL3dEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61095 /* "glVertexAttribL3dEXT" */,
        61077 /* "glVertexAttribL3d" */,
        61077 /* "glVertexAttribL3d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61095 /* "glVertexAttribL3dEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL3DVPROC
epoxy_glVertexAttribL3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61116 /* "glVertexAttribL3dv" */,
        61116 /* "glVertexAttribL3dv" */,
        61135 /* "glVertexAttribL3dvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61116 /* "glVertexAttribL3dv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL3DVEXTPROC
epoxy_glVertexAttribL3dvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61135 /* "glVertexAttribL3dvEXT" */,
        61116 /* "glVertexAttribL3dv" */,
        61116 /* "glVertexAttribL3dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61135 /* "glVertexAttribL3dvEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL3I64NVPROC
epoxy_glVertexAttribL3i64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61157 /* glVertexAttribL3i64NV */);
}

static PFNGLVERTEXATTRIBL3I64VNVPROC
epoxy_glVertexAttribL3i64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61179 /* glVertexAttribL3i64vNV */);
}

static PFNGLVERTEXATTRIBL3UI64NVPROC
epoxy_glVertexAttribL3ui64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61202 /* glVertexAttribL3ui64NV */);
}

static PFNGLVERTEXATTRIBL3UI64VNVPROC
epoxy_glVertexAttribL3ui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61225 /* glVertexAttribL3ui64vNV */);
}

static PFNGLVERTEXATTRIBL4DPROC
epoxy_glVertexAttribL4d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61249 /* "glVertexAttribL4d" */,
        61249 /* "glVertexAttribL4d" */,
        61267 /* "glVertexAttribL4dEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61249 /* "glVertexAttribL4d" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL4DEXTPROC
epoxy_glVertexAttribL4dEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61267 /* "glVertexAttribL4dEXT" */,
        61249 /* "glVertexAttribL4d" */,
        61249 /* "glVertexAttribL4d" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61267 /* "glVertexAttribL4dEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL4DVPROC
epoxy_glVertexAttribL4dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61288 /* "glVertexAttribL4dv" */,
        61288 /* "glVertexAttribL4dv" */,
        61307 /* "glVertexAttribL4dvEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61288 /* "glVertexAttribL4dv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL4DVEXTPROC
epoxy_glVertexAttribL4dvEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61307 /* "glVertexAttribL4dvEXT" */,
        61288 /* "glVertexAttribL4dv" */,
        61288 /* "glVertexAttribL4dv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61307 /* "glVertexAttribL4dvEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBL4I64NVPROC
epoxy_glVertexAttribL4i64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61329 /* glVertexAttribL4i64NV */);
}

static PFNGLVERTEXATTRIBL4I64VNVPROC
epoxy_glVertexAttribL4i64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61351 /* glVertexAttribL4i64vNV */);
}

static PFNGLVERTEXATTRIBL4UI64NVPROC
epoxy_glVertexAttribL4ui64NV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61374 /* glVertexAttribL4ui64NV */);
}

static PFNGLVERTEXATTRIBL4UI64VNVPROC
epoxy_glVertexAttribL4ui64vNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61397 /* glVertexAttribL4ui64vNV */);
}

static PFNGLVERTEXATTRIBLFORMATPROC
epoxy_glVertexAttribLFormat_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_vertex_attrib_binding,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61421 /* "glVertexAttribLFormat" */,
        61421 /* "glVertexAttribLFormat" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61421 /* "glVertexAttribLFormat" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBLFORMATNVPROC
epoxy_glVertexAttribLFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 61443 /* glVertexAttribLFormatNV */);
}

static PFNGLVERTEXATTRIBLPOINTERPROC
epoxy_glVertexAttribLPointer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        GL_extension_GL_EXT_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61467 /* "glVertexAttribLPointer" */,
        61467 /* "glVertexAttribLPointer" */,
        61490 /* "glVertexAttribLPointerEXT" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61467 /* "glVertexAttribLPointer" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBLPOINTEREXTPROC
epoxy_glVertexAttribLPointerEXT_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_EXT_vertex_attrib_64bit,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_vertex_attrib_64bit,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61490 /* "glVertexAttribLPointerEXT" */,
        61467 /* "glVertexAttribLPointer" */,
        61467 /* "glVertexAttribLPointer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61490 /* "glVertexAttribLPointerEXT" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBP1UIPROC
epoxy_glVertexAttribP1ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61516 /* "glVertexAttribP1ui" */,
        61516 /* "glVertexAttribP1ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61516 /* "glVertexAttribP1ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBP1UIVPROC
epoxy_glVertexAttribP1uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61535 /* "glVertexAttribP1uiv" */,
        61535 /* "glVertexAttribP1uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61535 /* "glVertexAttribP1uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBP2UIPROC
epoxy_glVertexAttribP2ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61555 /* "glVertexAttribP2ui" */,
        61555 /* "glVertexAttribP2ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61555 /* "glVertexAttribP2ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBP2UIVPROC
epoxy_glVertexAttribP2uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61574 /* "glVertexAttribP2uiv" */,
        61574 /* "glVertexAttribP2uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61574 /* "glVertexAttribP2uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBP3UIPROC
epoxy_glVertexAttribP3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61594 /* "glVertexAttribP3ui" */,
        61594 /* "glVertexAttribP3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61594 /* "glVertexAttribP3ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBP3UIVPROC
epoxy_glVertexAttribP3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61613 /* "glVertexAttribP3uiv" */,
        61613 /* "glVertexAttribP3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61613 /* "glVertexAttribP3uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBP4UIPROC
epoxy_glVertexAttribP4ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61633 /* "glVertexAttribP4ui" */,
        61633 /* "glVertexAttribP4ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61633 /* "glVertexAttribP4ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBP4UIVPROC
epoxy_glVertexAttribP4uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61652 /* "glVertexAttribP4uiv" */,
        61652 /* "glVertexAttribP4uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61652 /* "glVertexAttribP4uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBPARAMETERIAMDPROC
epoxy_glVertexAttribParameteriAMD_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_AMD_interleaved_elements, 61672 /* glVertexAttribParameteriAMD */);
}

static PFNGLVERTEXATTRIBPOINTERPROC
epoxy_glVertexAttribPointer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61700 /* "glVertexAttribPointer" */,
        61700 /* "glVertexAttribPointer" */,
        61722 /* "glVertexAttribPointerARB" */,
        61722 /* "glVertexAttribPointerARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61700 /* "glVertexAttribPointer" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBPOINTERARBPROC
epoxy_glVertexAttribPointerARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_vertex_program,
        GL_extension_GL_ARB_vertex_shader,
        Desktop_OpenGL_2_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        61722 /* "glVertexAttribPointerARB" */,
        61722 /* "glVertexAttribPointerARB" */,
        61700 /* "glVertexAttribPointer" */,
        61700 /* "glVertexAttribPointer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 61722 /* "glVertexAttribPointerARB" */,
                                providers, entrypoints);
}

static PFNGLVERTEXATTRIBPOINTERNVPROC
epoxy_glVertexAttribPointerNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 61747 /* glVertexAttribPointerNV */);
}

static PFNGLVERTEXATTRIBS1DVNVPROC
epoxy_glVertexAttribs1dvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 61771 /* glVertexAttribs1dvNV */);
}

static PFNGLVERTEXATTRIBS1FVNVPROC
epoxy_glVertexAttribs1fvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 61792 /* glVertexAttribs1fvNV */);
}

static PFNGLVERTEXATTRIBS1HVNVPROC
epoxy_glVertexAttribs1hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 61813 /* glVertexAttribs1hvNV */);
}

static PFNGLVERTEXATTRIBS1SVNVPROC
epoxy_glVertexAttribs1svNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 61834 /* glVertexAttribs1svNV */);
}

static PFNGLVERTEXATTRIBS2DVNVPROC
epoxy_glVertexAttribs2dvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 61855 /* glVertexAttribs2dvNV */);
}

static PFNGLVERTEXATTRIBS2FVNVPROC
epoxy_glVertexAttribs2fvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 61876 /* glVertexAttribs2fvNV */);
}

static PFNGLVERTEXATTRIBS2HVNVPROC
epoxy_glVertexAttribs2hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 61897 /* glVertexAttribs2hvNV */);
}

static PFNGLVERTEXATTRIBS2SVNVPROC
epoxy_glVertexAttribs2svNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 61918 /* glVertexAttribs2svNV */);
}

static PFNGLVERTEXATTRIBS3DVNVPROC
epoxy_glVertexAttribs3dvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 61939 /* glVertexAttribs3dvNV */);
}

static PFNGLVERTEXATTRIBS3FVNVPROC
epoxy_glVertexAttribs3fvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 61960 /* glVertexAttribs3fvNV */);
}

static PFNGLVERTEXATTRIBS3HVNVPROC
epoxy_glVertexAttribs3hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 61981 /* glVertexAttribs3hvNV */);
}

static PFNGLVERTEXATTRIBS3SVNVPROC
epoxy_glVertexAttribs3svNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 62002 /* glVertexAttribs3svNV */);
}

static PFNGLVERTEXATTRIBS4DVNVPROC
epoxy_glVertexAttribs4dvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 62023 /* glVertexAttribs4dvNV */);
}

static PFNGLVERTEXATTRIBS4FVNVPROC
epoxy_glVertexAttribs4fvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 62044 /* glVertexAttribs4fvNV */);
}

static PFNGLVERTEXATTRIBS4HVNVPROC
epoxy_glVertexAttribs4hvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 62065 /* glVertexAttribs4hvNV */);
}

static PFNGLVERTEXATTRIBS4SVNVPROC
epoxy_glVertexAttribs4svNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 62086 /* glVertexAttribs4svNV */);
}

static PFNGLVERTEXATTRIBS4UBVNVPROC
epoxy_glVertexAttribs4ubvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 62107 /* glVertexAttribs4ubvNV */);
}

static PFNGLVERTEXBINDINGDIVISORPROC
epoxy_glVertexBindingDivisor_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_3,
        GL_extension_GL_ARB_vertex_attrib_binding,
        OpenGL_ES_3_1,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        62129 /* "glVertexBindingDivisor" */,
        62129 /* "glVertexBindingDivisor" */,
        62129 /* "glVertexBindingDivisor" */,
    };
    return gl_provider_resolver(entrypoint_strings + 62129 /* "glVertexBindingDivisor" */,
                                providers, entrypoints);
}

static PFNGLVERTEXBLENDARBPROC
epoxy_glVertexBlendARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 62152 /* glVertexBlendARB */);
}

static PFNGLVERTEXBLENDENVFATIPROC
epoxy_glVertexBlendEnvfATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62169 /* glVertexBlendEnvfATI */);
}

static PFNGLVERTEXBLENDENVIATIPROC
epoxy_glVertexBlendEnviATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62190 /* glVertexBlendEnviATI */);
}

static PFNGLVERTEXFORMATNVPROC
epoxy_glVertexFormatNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 62211 /* glVertexFormatNV */);
}

static PFNGLVERTEXP2UIPROC
epoxy_glVertexP2ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        62228 /* "glVertexP2ui" */,
        62228 /* "glVertexP2ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 62228 /* "glVertexP2ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXP2UIVPROC
epoxy_glVertexP2uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        62241 /* "glVertexP2uiv" */,
        62241 /* "glVertexP2uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 62241 /* "glVertexP2uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXP3UIPROC
epoxy_glVertexP3ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        62255 /* "glVertexP3ui" */,
        62255 /* "glVertexP3ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 62255 /* "glVertexP3ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXP3UIVPROC
epoxy_glVertexP3uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        62268 /* "glVertexP3uiv" */,
        62268 /* "glVertexP3uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 62268 /* "glVertexP3uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXP4UIPROC
epoxy_glVertexP4ui_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        62282 /* "glVertexP4ui" */,
        62282 /* "glVertexP4ui" */,
    };
    return gl_provider_resolver(entrypoint_strings + 62282 /* "glVertexP4ui" */,
                                providers, entrypoints);
}

static PFNGLVERTEXP4UIVPROC
epoxy_glVertexP4uiv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_3,
        GL_extension_GL_ARB_vertex_type_2_10_10_10_rev,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        62295 /* "glVertexP4uiv" */,
        62295 /* "glVertexP4uiv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 62295 /* "glVertexP4uiv" */,
                                providers, entrypoints);
}

static PFNGLVERTEXPOINTERPROC
epoxy_glVertexPointer_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_1,
        OpenGL_ES_1_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        62309 /* "glVertexPointer" */,
        62309 /* "glVertexPointer" */,
    };
    return gl_provider_resolver(entrypoint_strings + 62309 /* "glVertexPointer" */,
                                providers, entrypoints);
}

static PFNGLVERTEXPOINTEREXTPROC
epoxy_glVertexPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 62325 /* glVertexPointerEXT */);
}

static PFNGLVERTEXPOINTERLISTIBMPROC
epoxy_glVertexPointerListIBM_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 62344 /* glVertexPointerListIBM */);
}

static PFNGLVERTEXPOINTERVINTELPROC
epoxy_glVertexPointervINTEL_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_INTEL_parallel_arrays, 62367 /* glVertexPointervINTEL */);
}

static PFNGLVERTEXSTREAM1DATIPROC
epoxy_glVertexStream1dATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62389 /* glVertexStream1dATI */);
}

static PFNGLVERTEXSTREAM1DVATIPROC
epoxy_glVertexStream1dvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62409 /* glVertexStream1dvATI */);
}

static PFNGLVERTEXSTREAM1FATIPROC
epoxy_glVertexStream1fATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62430 /* glVertexStream1fATI */);
}

static PFNGLVERTEXSTREAM1FVATIPROC
epoxy_glVertexStream1fvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62450 /* glVertexStream1fvATI */);
}

static PFNGLVERTEXSTREAM1IATIPROC
epoxy_glVertexStream1iATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62471 /* glVertexStream1iATI */);
}

static PFNGLVERTEXSTREAM1IVATIPROC
epoxy_glVertexStream1ivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62491 /* glVertexStream1ivATI */);
}

static PFNGLVERTEXSTREAM1SATIPROC
epoxy_glVertexStream1sATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62512 /* glVertexStream1sATI */);
}

static PFNGLVERTEXSTREAM1SVATIPROC
epoxy_glVertexStream1svATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62532 /* glVertexStream1svATI */);
}

static PFNGLVERTEXSTREAM2DATIPROC
epoxy_glVertexStream2dATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62553 /* glVertexStream2dATI */);
}

static PFNGLVERTEXSTREAM2DVATIPROC
epoxy_glVertexStream2dvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62573 /* glVertexStream2dvATI */);
}

static PFNGLVERTEXSTREAM2FATIPROC
epoxy_glVertexStream2fATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62594 /* glVertexStream2fATI */);
}

static PFNGLVERTEXSTREAM2FVATIPROC
epoxy_glVertexStream2fvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62614 /* glVertexStream2fvATI */);
}

static PFNGLVERTEXSTREAM2IATIPROC
epoxy_glVertexStream2iATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62635 /* glVertexStream2iATI */);
}

static PFNGLVERTEXSTREAM2IVATIPROC
epoxy_glVertexStream2ivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62655 /* glVertexStream2ivATI */);
}

static PFNGLVERTEXSTREAM2SATIPROC
epoxy_glVertexStream2sATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62676 /* glVertexStream2sATI */);
}

static PFNGLVERTEXSTREAM2SVATIPROC
epoxy_glVertexStream2svATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62696 /* glVertexStream2svATI */);
}

static PFNGLVERTEXSTREAM3DATIPROC
epoxy_glVertexStream3dATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62717 /* glVertexStream3dATI */);
}

static PFNGLVERTEXSTREAM3DVATIPROC
epoxy_glVertexStream3dvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62737 /* glVertexStream3dvATI */);
}

static PFNGLVERTEXSTREAM3FATIPROC
epoxy_glVertexStream3fATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62758 /* glVertexStream3fATI */);
}

static PFNGLVERTEXSTREAM3FVATIPROC
epoxy_glVertexStream3fvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62778 /* glVertexStream3fvATI */);
}

static PFNGLVERTEXSTREAM3IATIPROC
epoxy_glVertexStream3iATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62799 /* glVertexStream3iATI */);
}

static PFNGLVERTEXSTREAM3IVATIPROC
epoxy_glVertexStream3ivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62819 /* glVertexStream3ivATI */);
}

static PFNGLVERTEXSTREAM3SATIPROC
epoxy_glVertexStream3sATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62840 /* glVertexStream3sATI */);
}

static PFNGLVERTEXSTREAM3SVATIPROC
epoxy_glVertexStream3svATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62860 /* glVertexStream3svATI */);
}

static PFNGLVERTEXSTREAM4DATIPROC
epoxy_glVertexStream4dATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62881 /* glVertexStream4dATI */);
}

static PFNGLVERTEXSTREAM4DVATIPROC
epoxy_glVertexStream4dvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62901 /* glVertexStream4dvATI */);
}

static PFNGLVERTEXSTREAM4FATIPROC
epoxy_glVertexStream4fATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62922 /* glVertexStream4fATI */);
}

static PFNGLVERTEXSTREAM4FVATIPROC
epoxy_glVertexStream4fvATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62942 /* glVertexStream4fvATI */);
}

static PFNGLVERTEXSTREAM4IATIPROC
epoxy_glVertexStream4iATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62963 /* glVertexStream4iATI */);
}

static PFNGLVERTEXSTREAM4IVATIPROC
epoxy_glVertexStream4ivATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 62983 /* glVertexStream4ivATI */);
}

static PFNGLVERTEXSTREAM4SATIPROC
epoxy_glVertexStream4sATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 63004 /* glVertexStream4sATI */);
}

static PFNGLVERTEXSTREAM4SVATIPROC
epoxy_glVertexStream4svATI_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 63024 /* glVertexStream4svATI */);
}

static PFNGLVERTEXWEIGHTPOINTEREXTPROC
epoxy_glVertexWeightPointerEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_weighting, 63045 /* glVertexWeightPointerEXT */);
}

static PFNGLVERTEXWEIGHTFEXTPROC
epoxy_glVertexWeightfEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_weighting, 63070 /* glVertexWeightfEXT */);
}

static PFNGLVERTEXWEIGHTFVEXTPROC
epoxy_glVertexWeightfvEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_weighting, 63089 /* glVertexWeightfvEXT */);
}

static PFNGLVERTEXWEIGHTHNVPROC
epoxy_glVertexWeighthNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 63109 /* glVertexWeighthNV */);
}

static PFNGLVERTEXWEIGHTHVNVPROC
epoxy_glVertexWeighthvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_half_float, 63127 /* glVertexWeighthvNV */);
}

static PFNGLVIDEOCAPTURENVPROC
epoxy_glVideoCaptureNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 63146 /* glVideoCaptureNV */);
}

static PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
epoxy_glVideoCaptureStreamParameterdvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 63163 /* glVideoCaptureStreamParameterdvNV */);
}

static PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
epoxy_glVideoCaptureStreamParameterfvNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 63197 /* glVideoCaptureStreamParameterfvNV */);
}

static PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
epoxy_glVideoCaptureStreamParameterivNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 63231 /* glVideoCaptureStreamParameterivNV */);
}

static PFNGLVIEWPORTPROC
epoxy_glViewport_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_0,
        OpenGL_ES_1_0,
        OpenGL_ES_2_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63265 /* "glViewport" */,
        63265 /* "glViewport" */,
        63265 /* "glViewport" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63265 /* "glViewport" */,
                                providers, entrypoints);
}

static PFNGLVIEWPORTARRAYVPROC
epoxy_glViewportArrayv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63276 /* "glViewportArrayv" */,
        63276 /* "glViewportArrayv" */,
        63293 /* "glViewportArrayvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63276 /* "glViewportArrayv" */,
                                providers, entrypoints);
}

static PFNGLVIEWPORTARRAYVNVPROC
epoxy_glViewportArrayvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63293 /* "glViewportArrayvNV" */,
        63276 /* "glViewportArrayv" */,
        63276 /* "glViewportArrayv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63293 /* "glViewportArrayvNV" */,
                                providers, entrypoints);
}

static PFNGLVIEWPORTINDEXEDFPROC
epoxy_glViewportIndexedf_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63312 /* "glViewportIndexedf" */,
        63312 /* "glViewportIndexedf" */,
        63331 /* "glViewportIndexedfNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63312 /* "glViewportIndexedf" */,
                                providers, entrypoints);
}

static PFNGLVIEWPORTINDEXEDFNVPROC
epoxy_glViewportIndexedfNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63331 /* "glViewportIndexedfNV" */,
        63312 /* "glViewportIndexedf" */,
        63312 /* "glViewportIndexedf" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63331 /* "glViewportIndexedfNV" */,
                                providers, entrypoints);
}

static PFNGLVIEWPORTINDEXEDFVPROC
epoxy_glViewportIndexedfv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        GL_extension_GL_NV_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63352 /* "glViewportIndexedfv" */,
        63352 /* "glViewportIndexedfv" */,
        63372 /* "glViewportIndexedfvNV" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63352 /* "glViewportIndexedfv" */,
                                providers, entrypoints);
}

static PFNGLVIEWPORTINDEXEDFVNVPROC
epoxy_glViewportIndexedfvNV_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_NV_viewport_array,
        Desktop_OpenGL_4_1,
        GL_extension_GL_ARB_viewport_array,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63372 /* "glViewportIndexedfvNV" */,
        63352 /* "glViewportIndexedfv" */,
        63352 /* "glViewportIndexedfv" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63372 /* "glViewportIndexedfvNV" */,
                                providers, entrypoints);
}

static PFNGLWAITSYNCPROC
epoxy_glWaitSync_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        GL_extension_GL_APPLE_sync,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63394 /* "glWaitSync" */,
        63394 /* "glWaitSync" */,
        63394 /* "glWaitSync" */,
        63405 /* "glWaitSyncAPPLE" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63394 /* "glWaitSync" */,
                                providers, entrypoints);
}

static PFNGLWAITSYNCAPPLEPROC
epoxy_glWaitSyncAPPLE_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_APPLE_sync,
        Desktop_OpenGL_3_2,
        GL_extension_GL_ARB_sync,
        OpenGL_ES_3_0,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63405 /* "glWaitSyncAPPLE" */,
        63394 /* "glWaitSync" */,
        63394 /* "glWaitSync" */,
        63394 /* "glWaitSync" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63405 /* "glWaitSyncAPPLE" */,
                                providers, entrypoints);
}

static PFNGLWEIGHTPATHSNVPROC
epoxy_glWeightPathsNV_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 63421 /* glWeightPathsNV */);
}

static PFNGLWEIGHTPOINTERARBPROC
epoxy_glWeightPointerARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 63437 /* glWeightPointerARB */);
}

static PFNGLWEIGHTPOINTEROESPROC
epoxy_glWeightPointerOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_matrix_palette, 63456 /* glWeightPointerOES */);
}

static PFNGLWEIGHTBVARBPROC
epoxy_glWeightbvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 63475 /* glWeightbvARB */);
}

static PFNGLWEIGHTDVARBPROC
epoxy_glWeightdvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 63489 /* glWeightdvARB */);
}

static PFNGLWEIGHTFVARBPROC
epoxy_glWeightfvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 63503 /* glWeightfvARB */);
}

static PFNGLWEIGHTIVARBPROC
epoxy_glWeightivARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 63517 /* glWeightivARB */);
}

static PFNGLWEIGHTSVARBPROC
epoxy_glWeightsvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 63531 /* glWeightsvARB */);
}

static PFNGLWEIGHTUBVARBPROC
epoxy_glWeightubvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 63545 /* glWeightubvARB */);
}

static PFNGLWEIGHTUIVARBPROC
epoxy_glWeightuivARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 63560 /* glWeightuivARB */);
}

static PFNGLWEIGHTUSVARBPROC
epoxy_glWeightusvARB_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 63575 /* glWeightusvARB */);
}

static PFNGLWINDOWPOS2DPROC
epoxy_glWindowPos2d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63590 /* "glWindowPos2d" */,
        63604 /* "glWindowPos2dARB" */,
        63621 /* "glWindowPos2dMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63590 /* "glWindowPos2d" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2DARBPROC
epoxy_glWindowPos2dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63604 /* "glWindowPos2dARB" */,
        63590 /* "glWindowPos2d" */,
        63621 /* "glWindowPos2dMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63604 /* "glWindowPos2dARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2DMESAPROC
epoxy_glWindowPos2dMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63621 /* "glWindowPos2dMESA" */,
        63590 /* "glWindowPos2d" */,
        63604 /* "glWindowPos2dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63621 /* "glWindowPos2dMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2DVPROC
epoxy_glWindowPos2dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63639 /* "glWindowPos2dv" */,
        63654 /* "glWindowPos2dvARB" */,
        63672 /* "glWindowPos2dvMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63639 /* "glWindowPos2dv" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2DVARBPROC
epoxy_glWindowPos2dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63654 /* "glWindowPos2dvARB" */,
        63639 /* "glWindowPos2dv" */,
        63672 /* "glWindowPos2dvMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63654 /* "glWindowPos2dvARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2DVMESAPROC
epoxy_glWindowPos2dvMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63672 /* "glWindowPos2dvMESA" */,
        63639 /* "glWindowPos2dv" */,
        63654 /* "glWindowPos2dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63672 /* "glWindowPos2dvMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2FPROC
epoxy_glWindowPos2f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63691 /* "glWindowPos2f" */,
        63705 /* "glWindowPos2fARB" */,
        63722 /* "glWindowPos2fMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63691 /* "glWindowPos2f" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2FARBPROC
epoxy_glWindowPos2fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63705 /* "glWindowPos2fARB" */,
        63691 /* "glWindowPos2f" */,
        63722 /* "glWindowPos2fMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63705 /* "glWindowPos2fARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2FMESAPROC
epoxy_glWindowPos2fMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63722 /* "glWindowPos2fMESA" */,
        63691 /* "glWindowPos2f" */,
        63705 /* "glWindowPos2fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63722 /* "glWindowPos2fMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2FVPROC
epoxy_glWindowPos2fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63740 /* "glWindowPos2fv" */,
        63755 /* "glWindowPos2fvARB" */,
        63773 /* "glWindowPos2fvMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63740 /* "glWindowPos2fv" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2FVARBPROC
epoxy_glWindowPos2fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63755 /* "glWindowPos2fvARB" */,
        63740 /* "glWindowPos2fv" */,
        63773 /* "glWindowPos2fvMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63755 /* "glWindowPos2fvARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2FVMESAPROC
epoxy_glWindowPos2fvMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63773 /* "glWindowPos2fvMESA" */,
        63740 /* "glWindowPos2fv" */,
        63755 /* "glWindowPos2fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63773 /* "glWindowPos2fvMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2IPROC
epoxy_glWindowPos2i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63792 /* "glWindowPos2i" */,
        63806 /* "glWindowPos2iARB" */,
        63823 /* "glWindowPos2iMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63792 /* "glWindowPos2i" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2IARBPROC
epoxy_glWindowPos2iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63806 /* "glWindowPos2iARB" */,
        63792 /* "glWindowPos2i" */,
        63823 /* "glWindowPos2iMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63806 /* "glWindowPos2iARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2IMESAPROC
epoxy_glWindowPos2iMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63823 /* "glWindowPos2iMESA" */,
        63792 /* "glWindowPos2i" */,
        63806 /* "glWindowPos2iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63823 /* "glWindowPos2iMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2IVPROC
epoxy_glWindowPos2iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63841 /* "glWindowPos2iv" */,
        63856 /* "glWindowPos2ivARB" */,
        63874 /* "glWindowPos2ivMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63841 /* "glWindowPos2iv" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2IVARBPROC
epoxy_glWindowPos2ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63856 /* "glWindowPos2ivARB" */,
        63841 /* "glWindowPos2iv" */,
        63874 /* "glWindowPos2ivMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63856 /* "glWindowPos2ivARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2IVMESAPROC
epoxy_glWindowPos2ivMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63874 /* "glWindowPos2ivMESA" */,
        63841 /* "glWindowPos2iv" */,
        63856 /* "glWindowPos2ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63874 /* "glWindowPos2ivMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2SPROC
epoxy_glWindowPos2s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63893 /* "glWindowPos2s" */,
        63907 /* "glWindowPos2sARB" */,
        63924 /* "glWindowPos2sMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63893 /* "glWindowPos2s" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2SARBPROC
epoxy_glWindowPos2sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63907 /* "glWindowPos2sARB" */,
        63893 /* "glWindowPos2s" */,
        63924 /* "glWindowPos2sMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63907 /* "glWindowPos2sARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2SMESAPROC
epoxy_glWindowPos2sMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63924 /* "glWindowPos2sMESA" */,
        63893 /* "glWindowPos2s" */,
        63907 /* "glWindowPos2sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63924 /* "glWindowPos2sMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2SVPROC
epoxy_glWindowPos2sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63942 /* "glWindowPos2sv" */,
        63957 /* "glWindowPos2svARB" */,
        63975 /* "glWindowPos2svMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63942 /* "glWindowPos2sv" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2SVARBPROC
epoxy_glWindowPos2svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63957 /* "glWindowPos2svARB" */,
        63942 /* "glWindowPos2sv" */,
        63975 /* "glWindowPos2svMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63957 /* "glWindowPos2svARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS2SVMESAPROC
epoxy_glWindowPos2svMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63975 /* "glWindowPos2svMESA" */,
        63942 /* "glWindowPos2sv" */,
        63957 /* "glWindowPos2svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63975 /* "glWindowPos2svMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3DPROC
epoxy_glWindowPos3d_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        63994 /* "glWindowPos3d" */,
        64008 /* "glWindowPos3dARB" */,
        64025 /* "glWindowPos3dMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 63994 /* "glWindowPos3d" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3DARBPROC
epoxy_glWindowPos3dARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64008 /* "glWindowPos3dARB" */,
        63994 /* "glWindowPos3d" */,
        64025 /* "glWindowPos3dMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64008 /* "glWindowPos3dARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3DMESAPROC
epoxy_glWindowPos3dMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64025 /* "glWindowPos3dMESA" */,
        63994 /* "glWindowPos3d" */,
        64008 /* "glWindowPos3dARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64025 /* "glWindowPos3dMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3DVPROC
epoxy_glWindowPos3dv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64043 /* "glWindowPos3dv" */,
        64058 /* "glWindowPos3dvARB" */,
        64076 /* "glWindowPos3dvMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64043 /* "glWindowPos3dv" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3DVARBPROC
epoxy_glWindowPos3dvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64058 /* "glWindowPos3dvARB" */,
        64043 /* "glWindowPos3dv" */,
        64076 /* "glWindowPos3dvMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64058 /* "glWindowPos3dvARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3DVMESAPROC
epoxy_glWindowPos3dvMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64076 /* "glWindowPos3dvMESA" */,
        64043 /* "glWindowPos3dv" */,
        64058 /* "glWindowPos3dvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64076 /* "glWindowPos3dvMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3FPROC
epoxy_glWindowPos3f_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64095 /* "glWindowPos3f" */,
        64109 /* "glWindowPos3fARB" */,
        64126 /* "glWindowPos3fMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64095 /* "glWindowPos3f" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3FARBPROC
epoxy_glWindowPos3fARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64109 /* "glWindowPos3fARB" */,
        64095 /* "glWindowPos3f" */,
        64126 /* "glWindowPos3fMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64109 /* "glWindowPos3fARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3FMESAPROC
epoxy_glWindowPos3fMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64126 /* "glWindowPos3fMESA" */,
        64095 /* "glWindowPos3f" */,
        64109 /* "glWindowPos3fARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64126 /* "glWindowPos3fMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3FVPROC
epoxy_glWindowPos3fv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64144 /* "glWindowPos3fv" */,
        64159 /* "glWindowPos3fvARB" */,
        64177 /* "glWindowPos3fvMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64144 /* "glWindowPos3fv" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3FVARBPROC
epoxy_glWindowPos3fvARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64159 /* "glWindowPos3fvARB" */,
        64144 /* "glWindowPos3fv" */,
        64177 /* "glWindowPos3fvMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64159 /* "glWindowPos3fvARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3FVMESAPROC
epoxy_glWindowPos3fvMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64177 /* "glWindowPos3fvMESA" */,
        64144 /* "glWindowPos3fv" */,
        64159 /* "glWindowPos3fvARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64177 /* "glWindowPos3fvMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3IPROC
epoxy_glWindowPos3i_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64196 /* "glWindowPos3i" */,
        64210 /* "glWindowPos3iARB" */,
        64227 /* "glWindowPos3iMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64196 /* "glWindowPos3i" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3IARBPROC
epoxy_glWindowPos3iARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64210 /* "glWindowPos3iARB" */,
        64196 /* "glWindowPos3i" */,
        64227 /* "glWindowPos3iMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64210 /* "glWindowPos3iARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3IMESAPROC
epoxy_glWindowPos3iMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64227 /* "glWindowPos3iMESA" */,
        64196 /* "glWindowPos3i" */,
        64210 /* "glWindowPos3iARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64227 /* "glWindowPos3iMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3IVPROC
epoxy_glWindowPos3iv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64245 /* "glWindowPos3iv" */,
        64260 /* "glWindowPos3ivARB" */,
        64278 /* "glWindowPos3ivMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64245 /* "glWindowPos3iv" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3IVARBPROC
epoxy_glWindowPos3ivARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64260 /* "glWindowPos3ivARB" */,
        64245 /* "glWindowPos3iv" */,
        64278 /* "glWindowPos3ivMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64260 /* "glWindowPos3ivARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3IVMESAPROC
epoxy_glWindowPos3ivMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64278 /* "glWindowPos3ivMESA" */,
        64245 /* "glWindowPos3iv" */,
        64260 /* "glWindowPos3ivARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64278 /* "glWindowPos3ivMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3SPROC
epoxy_glWindowPos3s_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64297 /* "glWindowPos3s" */,
        64311 /* "glWindowPos3sARB" */,
        64328 /* "glWindowPos3sMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64297 /* "glWindowPos3s" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3SARBPROC
epoxy_glWindowPos3sARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64311 /* "glWindowPos3sARB" */,
        64297 /* "glWindowPos3s" */,
        64328 /* "glWindowPos3sMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64311 /* "glWindowPos3sARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3SMESAPROC
epoxy_glWindowPos3sMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64328 /* "glWindowPos3sMESA" */,
        64297 /* "glWindowPos3s" */,
        64311 /* "glWindowPos3sARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64328 /* "glWindowPos3sMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3SVPROC
epoxy_glWindowPos3sv_resolver(void)
{
    static const enum gl_provider providers[] = {
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64346 /* "glWindowPos3sv" */,
        64361 /* "glWindowPos3svARB" */,
        64379 /* "glWindowPos3svMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64346 /* "glWindowPos3sv" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3SVARBPROC
epoxy_glWindowPos3svARB_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_ARB_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_MESA_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64361 /* "glWindowPos3svARB" */,
        64346 /* "glWindowPos3sv" */,
        64379 /* "glWindowPos3svMESA" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64361 /* "glWindowPos3svARB" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS3SVMESAPROC
epoxy_glWindowPos3svMESA_resolver(void)
{
    static const enum gl_provider providers[] = {
        GL_extension_GL_MESA_window_pos,
        Desktop_OpenGL_1_4,
        GL_extension_GL_ARB_window_pos,
        gl_provider_terminator
    };
    static const uint16_t entrypoints[] = {
        64379 /* "glWindowPos3svMESA" */,
        64346 /* "glWindowPos3sv" */,
        64361 /* "glWindowPos3svARB" */,
    };
    return gl_provider_resolver(entrypoint_strings + 64379 /* "glWindowPos3svMESA" */,
                                providers, entrypoints);
}

static PFNGLWINDOWPOS4DMESAPROC
epoxy_glWindowPos4dMESA_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 64398 /* glWindowPos4dMESA */);
}

static PFNGLWINDOWPOS4DVMESAPROC
epoxy_glWindowPos4dvMESA_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 64416 /* glWindowPos4dvMESA */);
}

static PFNGLWINDOWPOS4FMESAPROC
epoxy_glWindowPos4fMESA_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 64435 /* glWindowPos4fMESA */);
}

static PFNGLWINDOWPOS4FVMESAPROC
epoxy_glWindowPos4fvMESA_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 64453 /* glWindowPos4fvMESA */);
}

static PFNGLWINDOWPOS4IMESAPROC
epoxy_glWindowPos4iMESA_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 64472 /* glWindowPos4iMESA */);
}

static PFNGLWINDOWPOS4IVMESAPROC
epoxy_glWindowPos4ivMESA_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 64490 /* glWindowPos4ivMESA */);
}

static PFNGLWINDOWPOS4SMESAPROC
epoxy_glWindowPos4sMESA_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 64509 /* glWindowPos4sMESA */);
}

static PFNGLWINDOWPOS4SVMESAPROC
epoxy_glWindowPos4svMESA_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 64527 /* glWindowPos4svMESA */);
}

static PFNGLWRITEMASKEXTPROC
epoxy_glWriteMaskEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 64546 /* glWriteMaskEXT */);
}

GEN_THUNKS(glAccum, (GLenum op, GLfloat value), (op, value))
GEN_THUNKS(glAccumxOES, (GLenum op, GLfixed value), (op, value))
GEN_THUNKS(glActiveProgramEXT, (GLuint program), (program))
GEN_THUNKS(glActiveShaderProgram, (GLuint pipeline, GLuint program), (pipeline, program))
GEN_THUNKS(glActiveShaderProgramEXT, (GLuint pipeline, GLuint program), (pipeline, program))
GEN_THUNKS(glActiveStencilFaceEXT, (GLenum face), (face))
GEN_THUNKS(glActiveTexture, (GLenum texture), (texture))
GEN_THUNKS(glActiveTextureARB, (GLenum texture), (texture))
GEN_THUNKS(glActiveVaryingNV, (GLuint program, const GLchar * name), (program, name))
GEN_THUNKS(glAlphaFragmentOp1ATI, (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod), (op, dst, dstMod, arg1, arg1Rep, arg1Mod))
GEN_THUNKS(glAlphaFragmentOp2ATI, (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod), (op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod))
GEN_THUNKS(glAlphaFragmentOp3ATI, (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod), (op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod))
GEN_THUNKS(glAlphaFunc, (GLenum func, GLfloat ref), (func, ref))
GEN_THUNKS(glAlphaFuncQCOM, (GLenum func, GLclampf ref), (func, ref))
GEN_THUNKS(glAlphaFuncx, (GLenum func, GLfixed ref), (func, ref))
GEN_THUNKS(glAlphaFuncxOES, (GLenum func, GLfixed ref), (func, ref))
GEN_THUNKS(glApplyTextureEXT, (GLenum mode), (mode))
GEN_THUNKS_RET(GLboolean, glAreProgramsResidentNV, (GLsizei n, const GLuint * programs, GLboolean * residences), (n, programs, residences))
GEN_THUNKS_RET(GLboolean, glAreTexturesResident, (GLsizei n, const GLuint * textures, GLboolean * residences), (n, textures, residences))
GEN_THUNKS_RET(GLboolean, glAreTexturesResidentEXT, (GLsizei n, const GLuint * textures, GLboolean * residences), (n, textures, residences))
GEN_THUNKS(glArrayElement, (GLint i), (i))
GEN_THUNKS(glArrayElementEXT, (GLint i), (i))
GEN_THUNKS(glArrayObjectATI, (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset), (array, size, type, stride, buffer, offset))
GEN_THUNKS(glAsyncMarkerSGIX, (GLuint marker), (marker))
GEN_THUNKS(glAttachObjectARB, (GLhandleARB containerObj, GLhandleARB obj), ((uintptr_t)containerObj, (uintptr_t)obj))
GEN_THUNKS(glAttachShader, (GLuint program, GLuint shader), (program, shader))
GEN_THUNKS(glBegin_unwrapped, (GLenum mode), (mode))
GEN_THUNKS(glBeginConditionalRender, (GLuint id, GLenum mode), (id, mode))
GEN_THUNKS(glBeginConditionalRenderNV, (GLuint id, GLenum mode), (id, mode))
GEN_THUNKS(glBeginConditionalRenderNVX, (GLuint id), (id))
GEN_THUNKS(glBeginFragmentShaderATI, (void), ())
GEN_THUNKS(glBeginOcclusionQueryNV, (GLuint id), (id))
GEN_THUNKS(glBeginPerfMonitorAMD, (GLuint monitor), (monitor))
GEN_THUNKS(glBeginPerfQueryINTEL, (GLuint queryHandle), (queryHandle))
GEN_THUNKS(glBeginQuery, (GLenum target, GLuint id), (target, id))
GEN_THUNKS(glBeginQueryARB, (GLenum target, GLuint id), (target, id))
GEN_THUNKS(glBeginQueryEXT, (GLenum target, GLuint id), (target, id))
GEN_THUNKS(glBeginQueryIndexed, (GLenum target, GLuint index, GLuint id), (target, index, id))
GEN_THUNKS(glBeginTransformFeedback, (GLenum primitiveMode), (primitiveMode))
GEN_THUNKS(glBeginTransformFeedbackEXT, (GLenum primitiveMode), (primitiveMode))
GEN_THUNKS(glBeginTransformFeedbackNV, (GLenum primitiveMode), (primitiveMode))
GEN_THUNKS(glBeginVertexShaderEXT, (void), ())
GEN_THUNKS(glBeginVideoCaptureNV, (GLuint video_capture_slot), (video_capture_slot))
GEN_THUNKS(glBindAttribLocation, (GLuint program, GLuint index, const GLchar * name), (program, index, name))
GEN_THUNKS(glBindAttribLocationARB, (GLhandleARB programObj, GLuint index, const GLcharARB * name), ((uintptr_t)programObj, index, name))
GEN_THUNKS(glBindBuffer, (GLenum target, GLuint buffer), (target, buffer))
GEN_THUNKS(glBindBufferARB, (GLenum target, GLuint buffer), (target, buffer))
GEN_THUNKS(glBindBufferBase, (GLenum target, GLuint index, GLuint buffer), (target, index, buffer))
GEN_THUNKS(glBindBufferBaseEXT, (GLenum target, GLuint index, GLuint buffer), (target, index, buffer))
GEN_THUNKS(glBindBufferBaseNV, (GLenum target, GLuint index, GLuint buffer), (target, index, buffer))
GEN_THUNKS(glBindBufferOffsetEXT, (GLenum target, GLuint index, GLuint buffer, GLintptr offset), (target, index, buffer, offset))
GEN_THUNKS(glBindBufferOffsetNV, (GLenum target, GLuint index, GLuint buffer, GLintptr offset), (target, index, buffer, offset))
GEN_THUNKS(glBindBufferRange, (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size), (target, index, buffer, offset, size))
GEN_THUNKS(glBindBufferRangeEXT, (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size), (target, index, buffer, offset, size))
GEN_THUNKS(glBindBufferRangeNV, (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size), (target, index, buffer, offset, size))
GEN_THUNKS(glBindBuffersBase, (GLenum target, GLuint first, GLsizei count, const GLuint * buffers), (target, first, count, buffers))
GEN_THUNKS(glBindBuffersRange, (GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes), (target, first, count, buffers, offsets, sizes))
GEN_THUNKS(glBindFragDataLocation, (GLuint program, GLuint color, const GLchar * name), (program, color, name))
GEN_THUNKS(glBindFragDataLocationEXT, (GLuint program, GLuint color, const GLchar * name), (program, color, name))
GEN_THUNKS(glBindFragDataLocationIndexed, (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name), (program, colorNumber, index, name))
GEN_THUNKS(glBindFragmentShaderATI, (GLuint id), (id))
GEN_THUNKS(glBindFramebuffer, (GLenum target, GLuint framebuffer), (target, framebuffer))
GEN_THUNKS(glBindFramebufferEXT, (GLenum target, GLuint framebuffer), (target, framebuffer))
GEN_THUNKS(glBindFramebufferOES, (GLenum target, GLuint framebuffer), (target, framebuffer))
GEN_THUNKS(glBindImageTexture, (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format), (unit, texture, level, layered, layer, access, format))
GEN_THUNKS(glBindImageTextureEXT, (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format), (index, texture, level, layered, layer, access, format))
GEN_THUNKS(glBindImageTextures, (GLuint first, GLsizei count, const GLuint * textures), (first, count, textures))
GEN_THUNKS_RET(GLuint, glBindLightParameterEXT, (GLenum light, GLenum value), (light, value))
GEN_THUNKS_RET(GLuint, glBindMaterialParameterEXT, (GLenum face, GLenum value), (face, value))
GEN_THUNKS(glBindMultiTextureEXT, (GLenum texunit, GLenum target, GLuint texture), (texunit, target, texture))
GEN_THUNKS_RET(GLuint, glBindParameterEXT, (GLenum value), (value))
GEN_THUNKS(glBindProgramARB, (GLenum target, GLuint program), (target, program))
GEN_THUNKS(glBindProgramNV, (GLenum target, GLuint id), (target, id))
GEN_THUNKS(glBindProgramPipeline, (GLuint pipeline), (pipeline))
GEN_THUNKS(glBindProgramPipelineEXT, (GLuint pipeline), (pipeline))
GEN_THUNKS(glBindRenderbuffer, (GLenum target, GLuint renderbuffer), (target, renderbuffer))
GEN_THUNKS(glBindRenderbufferEXT, (GLenum target, GLuint renderbuffer), (target, renderbuffer))
GEN_THUNKS(glBindRenderbufferOES, (GLenum target, GLuint renderbuffer), (target, renderbuffer))
GEN_THUNKS(glBindSampler, (GLuint unit, GLuint sampler), (unit, sampler))
GEN_THUNKS(glBindSamplers, (GLuint first, GLsizei count, const GLuint * samplers), (first, count, samplers))
GEN_THUNKS_RET(GLuint, glBindTexGenParameterEXT, (GLenum unit, GLenum coord, GLenum value), (unit, coord, value))
GEN_THUNKS(glBindTexture, (GLenum target, GLuint texture), (target, texture))
GEN_THUNKS(glBindTextureEXT, (GLenum target, GLuint texture), (target, texture))
GEN_THUNKS(glBindTextureUnit, (GLuint unit, GLuint texture), (unit, texture))
GEN_THUNKS_RET(GLuint, glBindTextureUnitParameterEXT, (GLenum unit, GLenum value), (unit, value))
GEN_THUNKS(glBindTextures, (GLuint first, GLsizei count, const GLuint * textures), (first, count, textures))
GEN_THUNKS(glBindTransformFeedback, (GLenum target, GLuint id), (target, id))
GEN_THUNKS(glBindTransformFeedbackNV, (GLenum target, GLuint id), (target, id))
GEN_THUNKS(glBindVertexArray, (GLuint array), (array))
GEN_THUNKS(glBindVertexArrayAPPLE, (GLuint array), (array))
GEN_THUNKS(glBindVertexArrayOES, (GLuint array), (array))
GEN_THUNKS(glBindVertexBuffer, (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride), (bindingindex, buffer, offset, stride))
GEN_THUNKS(glBindVertexBuffers, (GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides), (first, count, buffers, offsets, strides))
GEN_THUNKS(glBindVertexShaderEXT, (GLuint id), (id))
GEN_THUNKS(glBindVideoCaptureStreamBufferNV, (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset), (video_capture_slot, stream, frame_region, offset))
GEN_THUNKS(glBindVideoCaptureStreamTextureNV, (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture), (video_capture_slot, stream, frame_region, target, texture))
GEN_THUNKS(glBinormal3bEXT, (GLbyte bx, GLbyte by, GLbyte bz), (bx, by, bz))
GEN_THUNKS(glBinormal3bvEXT, (const GLbyte * v), (v))
GEN_THUNKS(glBinormal3dEXT, (GLdouble bx, GLdouble by, GLdouble bz), (bx, by, bz))
GEN_THUNKS(glBinormal3dvEXT, (const GLdouble * v), (v))
GEN_THUNKS(glBinormal3fEXT, (GLfloat bx, GLfloat by, GLfloat bz), (bx, by, bz))
GEN_THUNKS(glBinormal3fvEXT, (const GLfloat * v), (v))
GEN_THUNKS(glBinormal3iEXT, (GLint bx, GLint by, GLint bz), (bx, by, bz))
GEN_THUNKS(glBinormal3ivEXT, (const GLint * v), (v))
GEN_THUNKS(glBinormal3sEXT, (GLshort bx, GLshort by, GLshort bz), (bx, by, bz))
GEN_THUNKS(glBinormal3svEXT, (const GLshort * v), (v))
GEN_THUNKS(glBinormalPointerEXT, (GLenum type, GLsizei stride, const void * pointer), (type, stride, pointer))
GEN_THUNKS(glBitmap, (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap), (width, height, xorig, yorig, xmove, ymove, bitmap))
GEN_THUNKS(glBitmapxOES, (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap), (width, height, xorig, yorig, xmove, ymove, bitmap))
GEN_THUNKS(glBlendBarrierKHR, (void), ())
GEN_THUNKS(glBlendBarrierNV, (void), ())
GEN_THUNKS(glBlendColor, (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha), (red, green, blue, alpha))
GEN_THUNKS(glBlendColorEXT, (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha), (red, green, blue, alpha))
GEN_THUNKS(glBlendColorxOES, (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha), (red, green, blue, alpha))
GEN_THUNKS(glBlendEquation, (GLenum mode), (mode))
GEN_THUNKS(glBlendEquationEXT, (GLenum mode), (mode))
GEN_THUNKS(glBlendEquationIndexedAMD, (GLuint buf, GLenum mode), (buf, mode))
GEN_THUNKS(glBlendEquationOES, (GLenum mode), (mode))
GEN_THUNKS(glBlendEquationSeparate, (GLenum modeRGB, GLenum modeAlpha), (modeRGB, modeAlpha))
GEN_THUNKS(glBlendEquationSeparateEXT, (GLenum modeRGB, GLenum modeAlpha), (modeRGB, modeAlpha))
GEN_THUNKS(glBlendEquationSeparateIndexedAMD, (GLuint buf, GLenum modeRGB, GLenum modeAlpha), (buf, modeRGB, modeAlpha))
GEN_THUNKS(glBlendEquationSeparateOES, (GLenum modeRGB, GLenum modeAlpha), (modeRGB, modeAlpha))
GEN_THUNKS(glBlendEquationSeparatei, (GLuint buf, GLenum modeRGB, GLenum modeAlpha), (buf, modeRGB, modeAlpha))
GEN_THUNKS(glBlendEquationSeparateiARB, (GLuint buf, GLenum modeRGB, GLenum modeAlpha), (buf, modeRGB, modeAlpha))
GEN_THUNKS(glBlendEquationSeparateiEXT, (GLuint buf, GLenum modeRGB, GLenum modeAlpha), (buf, modeRGB, modeAlpha))
GEN_THUNKS(glBlendEquationSeparateiOES, (GLuint buf, GLenum modeRGB, GLenum modeAlpha), (buf, modeRGB, modeAlpha))
GEN_THUNKS(glBlendEquationi, (GLuint buf, GLenum mode), (buf, mode))
GEN_THUNKS(glBlendEquationiARB, (GLuint buf, GLenum mode), (buf, mode))
GEN_THUNKS(glBlendEquationiEXT, (GLuint buf, GLenum mode), (buf, mode))
GEN_THUNKS(glBlendEquationiOES, (GLuint buf, GLenum mode), (buf, mode))
GEN_THUNKS(glBlendFunc, (GLenum sfactor, GLenum dfactor), (sfactor, dfactor))
GEN_THUNKS(glBlendFuncIndexedAMD, (GLuint buf, GLenum src, GLenum dst), (buf, src, dst))
GEN_THUNKS(glBlendFuncSeparate, (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha), (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha))
GEN_THUNKS(glBlendFuncSeparateEXT, (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha), (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha))
GEN_THUNKS(glBlendFuncSeparateINGR, (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha), (sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha))
GEN_THUNKS(glBlendFuncSeparateIndexedAMD, (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha), (buf, srcRGB, dstRGB, srcAlpha, dstAlpha))
GEN_THUNKS(glBlendFuncSeparateOES, (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha), (srcRGB, dstRGB, srcAlpha, dstAlpha))
GEN_THUNKS(glBlendFuncSeparatei, (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha), (buf, srcRGB, dstRGB, srcAlpha, dstAlpha))
GEN_THUNKS(glBlendFuncSeparateiARB, (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha), (buf, srcRGB, dstRGB, srcAlpha, dstAlpha))
GEN_THUNKS(glBlendFuncSeparateiEXT, (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha), (buf, srcRGB, dstRGB, srcAlpha, dstAlpha))
GEN_THUNKS(glBlendFuncSeparateiOES, (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha), (buf, srcRGB, dstRGB, srcAlpha, dstAlpha))
GEN_THUNKS(glBlendFunci, (GLuint buf, GLenum src, GLenum dst), (buf, src, dst))
GEN_THUNKS(glBlendFunciARB, (GLuint buf, GLenum src, GLenum dst), (buf, src, dst))
GEN_THUNKS(glBlendFunciEXT, (GLuint buf, GLenum src, GLenum dst), (buf, src, dst))
GEN_THUNKS(glBlendFunciOES, (GLuint buf, GLenum src, GLenum dst), (buf, src, dst))
GEN_THUNKS(glBlendParameteriNV, (GLenum pname, GLint value), (pname, value))
GEN_THUNKS(glBlitFramebuffer, (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter), (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter))
GEN_THUNKS(glBlitFramebufferANGLE, (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter), (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter))
GEN_THUNKS(glBlitFramebufferEXT, (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter), (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter))
GEN_THUNKS(glBlitFramebufferNV, (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter), (srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter))
GEN_THUNKS(glBlitNamedFramebuffer, (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter), (readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter))
GEN_THUNKS(glBufferAddressRangeNV, (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length), (pname, index, address, length))
GEN_THUNKS(glBufferData, (GLenum target, GLsizeiptr size, const void * data, GLenum usage), (target, size, data, usage))
GEN_THUNKS(glBufferDataARB, (GLenum target, GLsizeiptrARB size, const void * data, GLenum usage), (target, size, data, usage))
GEN_THUNKS(glBufferPageCommitmentARB, (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit), (target, offset, size, commit))
GEN_THUNKS(glBufferParameteriAPPLE, (GLenum target, GLenum pname, GLint param), (target, pname, param))
GEN_THUNKS(glBufferStorage, (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags), (target, size, data, flags))
GEN_THUNKS(glBufferStorageEXT, (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags), (target, size, data, flags))
GEN_THUNKS(glBufferSubData, (GLenum target, GLintptr offset, GLsizeiptr size, const void * data), (target, offset, size, data))
GEN_THUNKS(glBufferSubDataARB, (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data), (target, offset, size, data))
GEN_THUNKS(glCallCommandListNV, (GLuint list), (list))
GEN_THUNKS(glCallList, (GLuint list), (list))
GEN_THUNKS(glCallLists, (GLsizei n, GLenum type, const void * lists), (n, type, lists))
GEN_THUNKS_RET(GLenum, glCheckFramebufferStatus, (GLenum target), (target))
GEN_THUNKS_RET(GLenum, glCheckFramebufferStatusEXT, (GLenum target), (target))
GEN_THUNKS_RET(GLenum, glCheckFramebufferStatusOES, (GLenum target), (target))
GEN_THUNKS_RET(GLenum, glCheckNamedFramebufferStatus, (GLuint framebuffer, GLenum target), (framebuffer, target))
GEN_THUNKS_RET(GLenum, glCheckNamedFramebufferStatusEXT, (GLuint framebuffer, GLenum target), (framebuffer, target))
GEN_THUNKS(glClampColor, (GLenum target, GLenum clamp), (target, clamp))
GEN_THUNKS(glClampColorARB, (GLenum target, GLenum clamp), (target, clamp))
GEN_THUNKS(glClear, (GLbitfield mask), (mask))
GEN_THUNKS(glClearAccum, (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha), (red, green, blue, alpha))
GEN_THUNKS(glClearAccumxOES, (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha), (red, green, blue, alpha))
GEN_THUNKS(glClearBufferData, (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data), (target, internalformat, format, type, data))
GEN_THUNKS(glClearBufferSubData, (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data), (target, internalformat, offset, size, format, type, data))
GEN_THUNKS(glClearBufferfi, (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil), (buffer, drawbuffer, depth, stencil))
GEN_THUNKS(glClearBufferfv, (GLenum buffer, GLint drawbuffer, const GLfloat * value), (buffer, drawbuffer, value))
GEN_THUNKS(glClearBufferiv, (GLenum buffer, GLint drawbuffer, const GLint * value), (buffer, drawbuffer, value))
GEN_THUNKS(glClearBufferuiv, (GLenum buffer, GLint drawbuffer, const GLuint * value), (buffer, drawbuffer, value))
GEN_THUNKS(glClearColor, (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha), (red, green, blue, alpha))
GEN_THUNKS(glClearColorIiEXT, (GLint red, GLint green, GLint blue, GLint alpha), (red, green, blue, alpha))
GEN_THUNKS(glClearColorIuiEXT, (GLuint red, GLuint green, GLuint blue, GLuint alpha), (red, green, blue, alpha))
GEN_THUNKS(glClearColorx, (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha), (red, green, blue, alpha))
GEN_THUNKS(glClearColorxOES, (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha), (red, green, blue, alpha))
GEN_THUNKS(glClearDepth, (GLdouble depth), (depth))
GEN_THUNKS(glClearDepthdNV, (GLdouble depth), (depth))
GEN_THUNKS(glClearDepthf, (GLfloat d), (d))
GEN_THUNKS(glClearDepthfOES, (GLclampf depth), (depth))
GEN_THUNKS(glClearDepthx, (GLfixed depth), (depth))
GEN_THUNKS(glClearDepthxOES, (GLfixed depth), (depth))
GEN_THUNKS(glClearIndex, (GLfloat c), (c))
GEN_THUNKS(glClearNamedBufferData, (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data), (buffer, internalformat, format, type, data))
GEN_THUNKS(glClearNamedBufferDataEXT, (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data), (buffer, internalformat, format, type, data))
GEN_THUNKS(glClearNamedBufferSubData, (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data), (buffer, internalformat, offset, size, format, type, data))
GEN_THUNKS(glClearNamedBufferSubDataEXT, (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data), (buffer, internalformat, offset, size, format, type, data))
GEN_THUNKS(glClearNamedFramebufferfi, (GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil), (framebuffer, buffer, depth, stencil))
GEN_THUNKS(glClearNamedFramebufferfv, (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value), (framebuffer, buffer, drawbuffer, value))
GEN_THUNKS(glClearNamedFramebufferiv, (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value), (framebuffer, buffer, drawbuffer, value))
GEN_THUNKS(glClearNamedFramebufferuiv, (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value), (framebuffer, buffer, drawbuffer, value))
GEN_THUNKS(glClearStencil, (GLint s), (s))
GEN_THUNKS(glClearTexImage, (GLuint texture, GLint level, GLenum format, GLenum type, const void * data), (texture, level, format, type, data))
GEN_THUNKS(glClearTexSubImage, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data), (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, data))
GEN_THUNKS(glClientActiveTexture, (GLenum texture), (texture))
GEN_THUNKS(glClientActiveTextureARB, (GLenum texture), (texture))
GEN_THUNKS(glClientActiveVertexStreamATI, (GLenum stream), (stream))
GEN_THUNKS(glClientAttribDefaultEXT, (GLbitfield mask), (mask))
GEN_THUNKS_RET(GLenum, glClientWaitSync, (GLsync sync, GLbitfield flags, GLuint64 timeout), (sync, flags, timeout))
GEN_THUNKS_RET(GLenum, glClientWaitSyncAPPLE, (GLsync sync, GLbitfield flags, GLuint64 timeout), (sync, flags, timeout))
GEN_THUNKS(glClipControl, (GLenum origin, GLenum depth), (origin, depth))
GEN_THUNKS(glClipPlane, (GLenum plane, const GLdouble * equation), (plane, equation))
GEN_THUNKS(glClipPlanef, (GLenum p, const GLfloat * eqn), (p, eqn))
GEN_THUNKS(glClipPlanefIMG, (GLenum p, const GLfloat * eqn), (p, eqn))
GEN_THUNKS(glClipPlanefOES, (GLenum plane, const GLfloat * equation), (plane, equation))
GEN_THUNKS(glClipPlanex, (GLenum plane, const GLfixed * equation), (plane, equation))
GEN_THUNKS(glClipPlanexIMG, (GLenum p, const GLfixed * eqn), (p, eqn))
GEN_THUNKS(glClipPlanexOES, (GLenum plane, const GLfixed * equation), (plane, equation))
GEN_THUNKS(glColor3b, (GLbyte red, GLbyte green, GLbyte blue), (red, green, blue))
GEN_THUNKS(glColor3bv, (const GLbyte * v), (v))
GEN_THUNKS(glColor3d, (GLdouble red, GLdouble green, GLdouble blue), (red, green, blue))
GEN_THUNKS(glColor3dv, (const GLdouble * v), (v))
GEN_THUNKS(glColor3f, (GLfloat red, GLfloat green, GLfloat blue), (red, green, blue))
GEN_THUNKS(glColor3fVertex3fSUN, (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z), (r, g, b, x, y, z))
GEN_THUNKS(glColor3fVertex3fvSUN, (const GLfloat * c, const GLfloat * v), (c, v))
GEN_THUNKS(glColor3fv, (const GLfloat * v), (v))
GEN_THUNKS(glColor3hNV, (GLhalfNV red, GLhalfNV green, GLhalfNV blue), (red, green, blue))
GEN_THUNKS(glColor3hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glColor3i, (GLint red, GLint green, GLint blue), (red, green, blue))
GEN_THUNKS(glColor3iv, (const GLint * v), (v))
GEN_THUNKS(glColor3s, (GLshort red, GLshort green, GLshort blue), (red, green, blue))
GEN_THUNKS(glColor3sv, (const GLshort * v), (v))
GEN_THUNKS(glColor3ub, (GLubyte red, GLubyte green, GLubyte blue), (red, green, blue))
GEN_THUNKS(glColor3ubv, (const GLubyte * v), (v))
GEN_THUNKS(glColor3ui, (GLuint red, GLuint green, GLuint blue), (red, green, blue))
GEN_THUNKS(glColor3uiv, (const GLuint * v), (v))
GEN_THUNKS(glColor3us, (GLushort red, GLushort green, GLushort blue), (red, green, blue))
GEN_THUNKS(glColor3usv, (const GLushort * v), (v))
GEN_THUNKS(glColor3xOES, (GLfixed red, GLfixed green, GLfixed blue), (red, green, blue))
GEN_THUNKS(glColor3xvOES, (const GLfixed * components), (components))
GEN_THUNKS(glColor4b, (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4bv, (const GLbyte * v), (v))
GEN_THUNKS(glColor4d, (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4dv, (const GLdouble * v), (v))
GEN_THUNKS(glColor4f, (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4fNormal3fVertex3fSUN, (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z), (r, g, b, a, nx, ny, nz, x, y, z))
GEN_THUNKS(glColor4fNormal3fVertex3fvSUN, (const GLfloat * c, const GLfloat * n, const GLfloat * v), (c, n, v))
GEN_THUNKS(glColor4fv, (const GLfloat * v), (v))
GEN_THUNKS(glColor4hNV, (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glColor4i, (GLint red, GLint green, GLint blue, GLint alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4iv, (const GLint * v), (v))
GEN_THUNKS(glColor4s, (GLshort red, GLshort green, GLshort blue, GLshort alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4sv, (const GLshort * v), (v))
GEN_THUNKS(glColor4ub, (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4ubVertex2fSUN, (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y), (r, g, b, a, x, y))
GEN_THUNKS(glColor4ubVertex2fvSUN, (const GLubyte * c, const GLfloat * v), (c, v))
GEN_THUNKS(glColor4ubVertex3fSUN, (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z), (r, g, b, a, x, y, z))
GEN_THUNKS(glColor4ubVertex3fvSUN, (const GLubyte * c, const GLfloat * v), (c, v))
GEN_THUNKS(glColor4ubv, (const GLubyte * v), (v))
GEN_THUNKS(glColor4ui, (GLuint red, GLuint green, GLuint blue, GLuint alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4uiv, (const GLuint * v), (v))
GEN_THUNKS(glColor4us, (GLushort red, GLushort green, GLushort blue, GLushort alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4usv, (const GLushort * v), (v))
GEN_THUNKS(glColor4x, (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4xOES, (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha), (red, green, blue, alpha))
GEN_THUNKS(glColor4xvOES, (const GLfixed * components), (components))
GEN_THUNKS(glColorFormatNV, (GLint size, GLenum type, GLsizei stride), (size, type, stride))
GEN_THUNKS(glColorFragmentOp1ATI, (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod), (op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod))
GEN_THUNKS(glColorFragmentOp2ATI, (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod), (op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod))
GEN_THUNKS(glColorFragmentOp3ATI, (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod), (op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod))
GEN_THUNKS(glColorMask, (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha), (red, green, blue, alpha))
GEN_THUNKS(glColorMaskIndexedEXT, (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a), (index, r, g, b, a))
GEN_THUNKS(glColorMaski, (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a), (index, r, g, b, a))
GEN_THUNKS(glColorMaskiEXT, (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a), (index, r, g, b, a))
GEN_THUNKS(glColorMaskiOES, (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a), (index, r, g, b, a))
GEN_THUNKS(glColorMaterial, (GLenum face, GLenum mode), (face, mode))
GEN_THUNKS(glColorP3ui, (GLenum type, GLuint color), (type, color))
GEN_THUNKS(glColorP3uiv, (GLenum type, const GLuint * color), (type, color))
GEN_THUNKS(glColorP4ui, (GLenum type, GLuint color), (type, color))
GEN_THUNKS(glColorP4uiv, (GLenum type, const GLuint * color), (type, color))
GEN_THUNKS(glColorPointer, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glColorPointerEXT, (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer), (size, type, stride, count, pointer))
GEN_THUNKS(glColorPointerListIBM, (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride), (size, type, stride, pointer, ptrstride))
GEN_THUNKS(glColorPointervINTEL, (GLint size, GLenum type, const void ** pointer), (size, type, pointer))
GEN_THUNKS(glColorSubTable, (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data), (target, start, count, format, type, data))
GEN_THUNKS(glColorSubTableEXT, (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data), (target, start, count, format, type, data))
GEN_THUNKS(glColorTable, (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table), (target, internalformat, width, format, type, table))
GEN_THUNKS(glColorTableEXT, (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table), (target, internalFormat, width, format, type, table))
GEN_THUNKS(glColorTableParameterfv, (GLenum target, GLenum pname, const GLfloat * params), (target, pname, params))
GEN_THUNKS(glColorTableParameterfvSGI, (GLenum target, GLenum pname, const GLfloat * params), (target, pname, params))
GEN_THUNKS(glColorTableParameteriv, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glColorTableParameterivSGI, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glColorTableSGI, (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table), (target, internalformat, width, format, type, table))
GEN_THUNKS(glCombinerInputNV, (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage), (stage, portion, variable, input, mapping, componentUsage))
GEN_THUNKS(glCombinerOutputNV, (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum), (stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum))
GEN_THUNKS(glCombinerParameterfNV, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glCombinerParameterfvNV, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glCombinerParameteriNV, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glCombinerParameterivNV, (GLenum pname, const GLint * params), (pname, params))
GEN_THUNKS(glCombinerStageParameterfvNV, (GLenum stage, GLenum pname, const GLfloat * params), (stage, pname, params))
GEN_THUNKS(glCommandListSegmentsNV, (GLuint list, GLuint segments), (list, segments))
GEN_THUNKS(glCompileCommandListNV, (GLuint list), (list))
GEN_THUNKS(glCompileShader, (GLuint shader), (shader))
GEN_THUNKS(glCompileShaderARB, (GLhandleARB shaderObj), ((uintptr_t)shaderObj))
GEN_THUNKS(glCompileShaderIncludeARB, (GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length), (shader, count, path, length))
GEN_THUNKS(glCompressedMultiTexImage1DEXT, (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits), (texunit, target, level, internalformat, width, border, imageSize, bits))
GEN_THUNKS(glCompressedMultiTexImage2DEXT, (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits), (texunit, target, level, internalformat, width, height, border, imageSize, bits))
GEN_THUNKS(glCompressedMultiTexImage3DEXT, (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits), (texunit, target, level, internalformat, width, height, depth, border, imageSize, bits))
GEN_THUNKS(glCompressedMultiTexSubImage1DEXT, (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits), (texunit, target, level, xoffset, width, format, imageSize, bits))
GEN_THUNKS(glCompressedMultiTexSubImage2DEXT, (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits), (texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits))
GEN_THUNKS(glCompressedMultiTexSubImage3DEXT, (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits), (texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits))
GEN_THUNKS(glCompressedTexImage1D, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data), (target, level, internalformat, width, border, imageSize, data))
GEN_THUNKS(glCompressedTexImage1DARB, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data), (target, level, internalformat, width, border, imageSize, data))
GEN_THUNKS(glCompressedTexImage2D, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data), (target, level, internalformat, width, height, border, imageSize, data))
GEN_THUNKS(glCompressedTexImage2DARB, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data), (target, level, internalformat, width, height, border, imageSize, data))
GEN_THUNKS(glCompressedTexImage3D, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data), (target, level, internalformat, width, height, depth, border, imageSize, data))
GEN_THUNKS(glCompressedTexImage3DARB, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data), (target, level, internalformat, width, height, depth, border, imageSize, data))
GEN_THUNKS(glCompressedTexImage3DOES, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data), (target, level, internalformat, width, height, depth, border, imageSize, data))
GEN_THUNKS(glCompressedTexSubImage1D, (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data), (target, level, xoffset, width, format, imageSize, data))
GEN_THUNKS(glCompressedTexSubImage1DARB, (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data), (target, level, xoffset, width, format, imageSize, data))
GEN_THUNKS(glCompressedTexSubImage2D, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data), (target, level, xoffset, yoffset, width, height, format, imageSize, data))
GEN_THUNKS(glCompressedTexSubImage2DARB, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data), (target, level, xoffset, yoffset, width, height, format, imageSize, data))
GEN_THUNKS(glCompressedTexSubImage3D, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data), (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data))
GEN_THUNKS(glCompressedTexSubImage3DARB, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data), (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data))
GEN_THUNKS(glCompressedTexSubImage3DOES, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data), (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data))
GEN_THUNKS(glCompressedTextureImage1DEXT, (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits), (texture, target, level, internalformat, width, border, imageSize, bits))
GEN_THUNKS(glCompressedTextureImage2DEXT, (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits), (texture, target, level, internalformat, width, height, border, imageSize, bits))
GEN_THUNKS(glCompressedTextureImage3DEXT, (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits), (texture, target, level, internalformat, width, height, depth, border, imageSize, bits))
GEN_THUNKS(glCompressedTextureSubImage1D, (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data), (texture, level, xoffset, width, format, imageSize, data))
GEN_THUNKS(glCompressedTextureSubImage1DEXT, (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits), (texture, target, level, xoffset, width, format, imageSize, bits))
GEN_THUNKS(glCompressedTextureSubImage2D, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data), (texture, level, xoffset, yoffset, width, height, format, imageSize, data))
GEN_THUNKS(glCompressedTextureSubImage2DEXT, (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits), (texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits))
GEN_THUNKS(glCompressedTextureSubImage3D, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data), (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data))
GEN_THUNKS(glCompressedTextureSubImage3DEXT, (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits), (texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits))
GEN_THUNKS(glConvolutionFilter1D, (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image), (target, internalformat, width, format, type, image))
GEN_THUNKS(glConvolutionFilter1DEXT, (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image), (target, internalformat, width, format, type, image))
GEN_THUNKS(glConvolutionFilter2D, (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image), (target, internalformat, width, height, format, type, image))
GEN_THUNKS(glConvolutionFilter2DEXT, (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image), (target, internalformat, width, height, format, type, image))
GEN_THUNKS(glConvolutionParameterf, (GLenum target, GLenum pname, GLfloat params), (target, pname, params))
GEN_THUNKS(glConvolutionParameterfEXT, (GLenum target, GLenum pname, GLfloat params), (target, pname, params))
GEN_THUNKS(glConvolutionParameterfv, (GLenum target, GLenum pname, const GLfloat * params), (target, pname, params))
GEN_THUNKS(glConvolutionParameterfvEXT, (GLenum target, GLenum pname, const GLfloat * params), (target, pname, params))
GEN_THUNKS(glConvolutionParameteri, (GLenum target, GLenum pname, GLint params), (target, pname, params))
GEN_THUNKS(glConvolutionParameteriEXT, (GLenum target, GLenum pname, GLint params), (target, pname, params))
GEN_THUNKS(glConvolutionParameteriv, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glConvolutionParameterivEXT, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glConvolutionParameterxOES, (GLenum target, GLenum pname, GLfixed param), (target, pname, param))
GEN_THUNKS(glConvolutionParameterxvOES, (GLenum target, GLenum pname, const GLfixed * params), (target, pname, params))
GEN_THUNKS(glCopyBufferSubData, (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size), (readTarget, writeTarget, readOffset, writeOffset, size))
GEN_THUNKS(glCopyBufferSubDataNV, (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size), (readTarget, writeTarget, readOffset, writeOffset, size))
GEN_THUNKS(glCopyColorSubTable, (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width), (target, start, x, y, width))
GEN_THUNKS(glCopyColorSubTableEXT, (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width), (target, start, x, y, width))
GEN_THUNKS(glCopyColorTable, (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width), (target, internalformat, x, y, width))
GEN_THUNKS(glCopyColorTableSGI, (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width), (target, internalformat, x, y, width))
GEN_THUNKS(glCopyConvolutionFilter1D, (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width), (target, internalformat, x, y, width))
GEN_THUNKS(glCopyConvolutionFilter1DEXT, (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width), (target, internalformat, x, y, width))
GEN_THUNKS(glCopyConvolutionFilter2D, (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height), (target, internalformat, x, y, width, height))
GEN_THUNKS(glCopyConvolutionFilter2DEXT, (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height), (target, internalformat, x, y, width, height))
GEN_THUNKS(glCopyImageSubData, (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth), (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth))
GEN_THUNKS(glCopyImageSubDataEXT, (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth), (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth))
GEN_THUNKS(glCopyImageSubDataNV, (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth), (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth))
GEN_THUNKS(glCopyImageSubDataOES, (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth), (srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth))
GEN_THUNKS(glCopyMultiTexImage1DEXT, (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border), (texunit, target, level, internalformat, x, y, width, border))
GEN_THUNKS(glCopyMultiTexImage2DEXT, (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border), (texunit, target, level, internalformat, x, y, width, height, border))
GEN_THUNKS(glCopyMultiTexSubImage1DEXT, (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width), (texunit, target, level, xoffset, x, y, width))
GEN_THUNKS(glCopyMultiTexSubImage2DEXT, (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height), (texunit, target, level, xoffset, yoffset, x, y, width, height))
GEN_THUNKS(glCopyMultiTexSubImage3DEXT, (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height), (texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height))
GEN_THUNKS(glCopyNamedBufferSubData, (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size), (readBuffer, writeBuffer, readOffset, writeOffset, size))
GEN_THUNKS(glCopyPathNV, (GLuint resultPath, GLuint srcPath), (resultPath, srcPath))
GEN_THUNKS(glCopyPixels, (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type), (x, y, width, height, type))
GEN_THUNKS(glCopyTexImage1D, (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border), (target, level, internalformat, x, y, width, border))
GEN_THUNKS(glCopyTexImage1DEXT, (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border), (target, level, internalformat, x, y, width, border))
GEN_THUNKS(glCopyTexImage2D, (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border), (target, level, internalformat, x, y, width, height, border))
GEN_THUNKS(glCopyTexImage2DEXT, (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border), (target, level, internalformat, x, y, width, height, border))
GEN_THUNKS(glCopyTexSubImage1D, (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width), (target, level, xoffset, x, y, width))
GEN_THUNKS(glCopyTexSubImage1DEXT, (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width), (target, level, xoffset, x, y, width))
GEN_THUNKS(glCopyTexSubImage2D, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height), (target, level, xoffset, yoffset, x, y, width, height))
GEN_THUNKS(glCopyTexSubImage2DEXT, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height), (target, level, xoffset, yoffset, x, y, width, height))
GEN_THUNKS(glCopyTexSubImage3D, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height), (target, level, xoffset, yoffset, zoffset, x, y, width, height))
GEN_THUNKS(glCopyTexSubImage3DEXT, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height), (target, level, xoffset, yoffset, zoffset, x, y, width, height))
GEN_THUNKS(glCopyTexSubImage3DOES, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height), (target, level, xoffset, yoffset, zoffset, x, y, width, height))
GEN_THUNKS(glCopyTextureImage1DEXT, (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border), (texture, target, level, internalformat, x, y, width, border))
GEN_THUNKS(glCopyTextureImage2DEXT, (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border), (texture, target, level, internalformat, x, y, width, height, border))
GEN_THUNKS(glCopyTextureLevelsAPPLE, (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount), (destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount))
GEN_THUNKS(glCopyTextureSubImage1D, (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width), (texture, level, xoffset, x, y, width))
GEN_THUNKS(glCopyTextureSubImage1DEXT, (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width), (texture, target, level, xoffset, x, y, width))
GEN_THUNKS(glCopyTextureSubImage2D, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height), (texture, level, xoffset, yoffset, x, y, width, height))
GEN_THUNKS(glCopyTextureSubImage2DEXT, (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height), (texture, target, level, xoffset, yoffset, x, y, width, height))
GEN_THUNKS(glCopyTextureSubImage3D, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height), (texture, level, xoffset, yoffset, zoffset, x, y, width, height))
GEN_THUNKS(glCopyTextureSubImage3DEXT, (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height), (texture, target, level, xoffset, yoffset, zoffset, x, y, width, height))
GEN_THUNKS(glCoverFillPathInstancedNV, (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues), (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues))
GEN_THUNKS(glCoverFillPathNV, (GLuint path, GLenum coverMode), (path, coverMode))
GEN_THUNKS(glCoverStrokePathInstancedNV, (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues), (numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues))
GEN_THUNKS(glCoverStrokePathNV, (GLuint path, GLenum coverMode), (path, coverMode))
GEN_THUNKS(glCoverageMaskNV, (GLboolean mask), (mask))
GEN_THUNKS(glCoverageModulationNV, (GLenum components), (components))
GEN_THUNKS(glCoverageModulationTableNV, (GLsizei n, const GLfloat * v), (n, v))
GEN_THUNKS(glCoverageOperationNV, (GLenum operation), (operation))
GEN_THUNKS(glCreateBuffers, (GLsizei n, GLuint * buffers), (n, buffers))
GEN_THUNKS(glCreateCommandListsNV, (GLsizei n, GLuint * lists), (n, lists))
GEN_THUNKS(glCreateFramebuffers, (GLsizei n, GLuint * framebuffers), (n, framebuffers))
GEN_THUNKS(glCreatePerfQueryINTEL, (GLuint queryId, GLuint * queryHandle), (queryId, queryHandle))
GEN_THUNKS_RET(GLuint, glCreateProgram, (void), ())
GEN_THUNKS_RET(GLhandleARB, glCreateProgramObjectARB, (void), ())
GEN_THUNKS(glCreateProgramPipelines, (GLsizei n, GLuint * pipelines), (n, pipelines))
GEN_THUNKS(glCreateQueries, (GLenum target, GLsizei n, GLuint * ids), (target, n, ids))
GEN_THUNKS(glCreateRenderbuffers, (GLsizei n, GLuint * renderbuffers), (n, renderbuffers))
GEN_THUNKS(glCreateSamplers, (GLsizei n, GLuint * samplers), (n, samplers))
GEN_THUNKS_RET(GLuint, glCreateShader, (GLenum type), (type))
GEN_THUNKS_RET(GLhandleARB, glCreateShaderObjectARB, (GLenum shaderType), (shaderType))
GEN_THUNKS_RET(GLuint, glCreateShaderProgramEXT, (GLenum type, const GLchar * string), (type, string))
GEN_THUNKS_RET(GLuint, glCreateShaderProgramv, (GLenum type, GLsizei count, const GLchar *const* strings), (type, count, strings))
GEN_THUNKS_RET(GLuint, glCreateShaderProgramvEXT, (GLenum type, GLsizei count, const GLchar ** strings), (type, count, strings))
GEN_THUNKS(glCreateStatesNV, (GLsizei n, GLuint * states), (n, states))
GEN_THUNKS_RET(GLsync, glCreateSyncFromCLeventARB, (struct _cl_context * context, struct _cl_event * event, GLbitfield flags), (context, event, flags))
GEN_THUNKS(glCreateTextures, (GLenum target, GLsizei n, GLuint * textures), (target, n, textures))
GEN_THUNKS(glCreateTransformFeedbacks, (GLsizei n, GLuint * ids), (n, ids))
GEN_THUNKS(glCreateVertexArrays, (GLsizei n, GLuint * arrays), (n, arrays))
GEN_THUNKS(glCullFace, (GLenum mode), (mode))
GEN_THUNKS(glCullParameterdvEXT, (GLenum pname, GLdouble * params), (pname, params))
GEN_THUNKS(glCullParameterfvEXT, (GLenum pname, GLfloat * params), (pname, params))
GEN_THUNKS(glCurrentPaletteMatrixARB, (GLint index), (index))
GEN_THUNKS(glCurrentPaletteMatrixOES, (GLuint matrixpaletteindex), (matrixpaletteindex))
GEN_THUNKS(glDebugMessageCallback, (GLDEBUGPROC callback, const void * userParam), (callback, userParam))
GEN_THUNKS(glDebugMessageCallbackAMD, (GLDEBUGPROCAMD callback, void * userParam), (callback, userParam))
GEN_THUNKS(glDebugMessageCallbackARB, (GLDEBUGPROCARB callback, const void * userParam), (callback, userParam))
GEN_THUNKS(glDebugMessageCallbackKHR, (GLDEBUGPROCKHR callback, const void * userParam), (callback, userParam))
GEN_THUNKS(glDebugMessageControl, (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled), (source, type, severity, count, ids, enabled))
GEN_THUNKS(glDebugMessageControlARB, (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled), (source, type, severity, count, ids, enabled))
GEN_THUNKS(glDebugMessageControlKHR, (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled), (source, type, severity, count, ids, enabled))
GEN_THUNKS(glDebugMessageEnableAMD, (GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled), (category, severity, count, ids, enabled))
GEN_THUNKS(glDebugMessageInsert, (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf), (source, type, id, severity, length, buf))
GEN_THUNKS(glDebugMessageInsertAMD, (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf), (category, severity, id, length, buf))
GEN_THUNKS(glDebugMessageInsertARB, (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf), (source, type, id, severity, length, buf))
GEN_THUNKS(glDebugMessageInsertKHR, (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf), (source, type, id, severity, length, buf))
GEN_THUNKS(glDeformSGIX, (GLbitfield mask), (mask))
GEN_THUNKS(glDeformationMap3dSGIX, (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points), (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points))
GEN_THUNKS(glDeformationMap3fSGIX, (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points), (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points))
GEN_THUNKS(glDeleteAsyncMarkersSGIX, (GLuint marker, GLsizei range), (marker, range))
GEN_THUNKS(glDeleteBuffers, (GLsizei n, const GLuint * buffers), (n, buffers))
GEN_THUNKS(glDeleteBuffersARB, (GLsizei n, const GLuint * buffers), (n, buffers))
GEN_THUNKS(glDeleteCommandListsNV, (GLsizei n, const GLuint * lists), (n, lists))
GEN_THUNKS(glDeleteFencesAPPLE, (GLsizei n, const GLuint * fences), (n, fences))
GEN_THUNKS(glDeleteFencesNV, (GLsizei n, const GLuint * fences), (n, fences))
GEN_THUNKS(glDeleteFragmentShaderATI, (GLuint id), (id))
GEN_THUNKS(glDeleteFramebuffers, (GLsizei n, const GLuint * framebuffers), (n, framebuffers))
GEN_THUNKS(glDeleteFramebuffersEXT, (GLsizei n, const GLuint * framebuffers), (n, framebuffers))
GEN_THUNKS(glDeleteFramebuffersOES, (GLsizei n, const GLuint * framebuffers), (n, framebuffers))
GEN_THUNKS(glDeleteLists, (GLuint list, GLsizei range), (list, range))
GEN_THUNKS(glDeleteNamedStringARB, (GLint namelen, const GLchar * name), (namelen, name))
GEN_THUNKS(glDeleteNamesAMD, (GLenum identifier, GLuint num, const GLuint * names), (identifier, num, names))
GEN_THUNKS(glDeleteObjectARB, (GLhandleARB obj), ((uintptr_t)obj))
GEN_THUNKS(glDeleteOcclusionQueriesNV, (GLsizei n, const GLuint * ids), (n, ids))
GEN_THUNKS(glDeletePathsNV, (GLuint path, GLsizei range), (path, range))
GEN_THUNKS(glDeletePerfMonitorsAMD, (GLsizei n, GLuint * monitors), (n, monitors))
GEN_THUNKS(glDeletePerfQueryINTEL, (GLuint queryHandle), (queryHandle))
GEN_THUNKS(glDeleteProgram, (GLuint program), (program))
GEN_THUNKS(glDeleteProgramPipelines, (GLsizei n, const GLuint * pipelines), (n, pipelines))
GEN_THUNKS(glDeleteProgramPipelinesEXT, (GLsizei n, const GLuint * pipelines), (n, pipelines))
GEN_THUNKS(glDeleteProgramsARB, (GLsizei n, const GLuint * programs), (n, programs))
GEN_THUNKS(glDeleteProgramsNV, (GLsizei n, const GLuint * programs), (n, programs))
GEN_THUNKS(glDeleteQueries, (GLsizei n, const GLuint * ids), (n, ids))
GEN_THUNKS(glDeleteQueriesARB, (GLsizei n, const GLuint * ids), (n, ids))
GEN_THUNKS(glDeleteQueriesEXT, (GLsizei n, const GLuint * ids), (n, ids))
GEN_THUNKS(glDeleteRenderbuffers, (GLsizei n, const GLuint * renderbuffers), (n, renderbuffers))
GEN_THUNKS(glDeleteRenderbuffersEXT, (GLsizei n, const GLuint * renderbuffers), (n, renderbuffers))
GEN_THUNKS(glDeleteRenderbuffersOES, (GLsizei n, const GLuint * renderbuffers), (n, renderbuffers))
GEN_THUNKS(glDeleteSamplers, (GLsizei count, const GLuint * samplers), (count, samplers))
GEN_THUNKS(glDeleteShader, (GLuint shader), (shader))
GEN_THUNKS(glDeleteStatesNV, (GLsizei n, const GLuint * states), (n, states))
GEN_THUNKS(glDeleteSync, (GLsync sync), (sync))
GEN_THUNKS(glDeleteSyncAPPLE, (GLsync sync), (sync))
GEN_THUNKS(glDeleteTextures, (GLsizei n, const GLuint * textures), (n, textures))
GEN_THUNKS(glDeleteTexturesEXT, (GLsizei n, const GLuint * textures), (n, textures))
GEN_THUNKS(glDeleteTransformFeedbacks, (GLsizei n, const GLuint * ids), (n, ids))
GEN_THUNKS(glDeleteTransformFeedbacksNV, (GLsizei n, const GLuint * ids), (n, ids))
GEN_THUNKS(glDeleteVertexArrays, (GLsizei n, const GLuint * arrays), (n, arrays))
GEN_THUNKS(glDeleteVertexArraysAPPLE, (GLsizei n, const GLuint * arrays), (n, arrays))
GEN_THUNKS(glDeleteVertexArraysOES, (GLsizei n, const GLuint * arrays), (n, arrays))
GEN_THUNKS(glDeleteVertexShaderEXT, (GLuint id), (id))
GEN_THUNKS(glDepthBoundsEXT, (GLclampd zmin, GLclampd zmax), (zmin, zmax))
GEN_THUNKS(glDepthBoundsdNV, (GLdouble zmin, GLdouble zmax), (zmin, zmax))
GEN_THUNKS(glDepthFunc, (GLenum func), (func))
GEN_THUNKS(glDepthMask, (GLboolean flag), (flag))
GEN_THUNKS(glDepthRange, (GLdouble hither, GLdouble yon), (hither, yon))
GEN_THUNKS(glDepthRangeArrayfvNV, (GLuint first, GLsizei count, const GLfloat * v), (first, count, v))
GEN_THUNKS(glDepthRangeArrayv, (GLuint first, GLsizei count, const GLdouble * v), (first, count, v))
GEN_THUNKS(glDepthRangeIndexed, (GLuint index, GLdouble n, GLdouble f), (index, n, f))
GEN_THUNKS(glDepthRangeIndexedfNV, (GLuint index, GLfloat n, GLfloat f), (index, n, f))
GEN_THUNKS(glDepthRangedNV, (GLdouble zNear, GLdouble zFar), (zNear, zFar))
GEN_THUNKS(glDepthRangef, (GLfloat n, GLfloat f), (n, f))
GEN_THUNKS(glDepthRangefOES, (GLclampf n, GLclampf f), (n, f))
GEN_THUNKS(glDepthRangex, (GLfixed n, GLfixed f), (n, f))
GEN_THUNKS(glDepthRangexOES, (GLfixed n, GLfixed f), (n, f))
GEN_THUNKS(glDetachObjectARB, (GLhandleARB containerObj, GLhandleARB attachedObj), ((uintptr_t)containerObj, (uintptr_t)attachedObj))
GEN_THUNKS(glDetachShader, (GLuint program, GLuint shader), (program, shader))
GEN_THUNKS(glDetailTexFuncSGIS, (GLenum target, GLsizei n, const GLfloat * points), (target, n, points))
GEN_THUNKS(glDisable, (GLenum cap), (cap))
GEN_THUNKS(glDisableClientState, (GLenum array), (array))
GEN_THUNKS(glDisableClientStateIndexedEXT, (GLenum array, GLuint index), (array, index))
GEN_THUNKS(glDisableClientStateiEXT, (GLenum array, GLuint index), (array, index))
GEN_THUNKS(glDisableDriverControlQCOM, (GLuint driverControl), (driverControl))
GEN_THUNKS(glDisableIndexedEXT, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glDisableVariantClientStateEXT, (GLuint id), (id))
GEN_THUNKS(glDisableVertexArrayAttrib, (GLuint vaobj, GLuint index), (vaobj, index))
GEN_THUNKS(glDisableVertexArrayAttribEXT, (GLuint vaobj, GLuint index), (vaobj, index))
GEN_THUNKS(glDisableVertexArrayEXT, (GLuint vaobj, GLenum array), (vaobj, array))
GEN_THUNKS(glDisableVertexAttribAPPLE, (GLuint index, GLenum pname), (index, pname))
GEN_THUNKS(glDisableVertexAttribArray, (GLuint index), (index))
GEN_THUNKS(glDisableVertexAttribArrayARB, (GLuint index), (index))
GEN_THUNKS(glDisablei, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glDisableiEXT, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glDisableiNV, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glDisableiOES, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glDiscardFramebufferEXT, (GLenum target, GLsizei numAttachments, const GLenum * attachments), (target, numAttachments, attachments))
GEN_THUNKS(glDispatchCompute, (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z), (num_groups_x, num_groups_y, num_groups_z))
GEN_THUNKS(glDispatchComputeGroupSizeARB, (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z), (num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z))
GEN_THUNKS(glDispatchComputeIndirect, (GLintptr indirect), (indirect))
GEN_THUNKS(glDrawArrays, (GLenum mode, GLint first, GLsizei count), (mode, first, count))
GEN_THUNKS(glDrawArraysEXT, (GLenum mode, GLint first, GLsizei count), (mode, first, count))
GEN_THUNKS(glDrawArraysIndirect, (GLenum mode, const void * indirect), (mode, indirect))
GEN_THUNKS(glDrawArraysInstanced, (GLenum mode, GLint first, GLsizei count, GLsizei instancecount), (mode, first, count, instancecount))
GEN_THUNKS(glDrawArraysInstancedANGLE, (GLenum mode, GLint first, GLsizei count, GLsizei primcount), (mode, first, count, primcount))
GEN_THUNKS(glDrawArraysInstancedARB, (GLenum mode, GLint first, GLsizei count, GLsizei primcount), (mode, first, count, primcount))
GEN_THUNKS(glDrawArraysInstancedBaseInstance, (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance), (mode, first, count, instancecount, baseinstance))
GEN_THUNKS(glDrawArraysInstancedBaseInstanceEXT, (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance), (mode, first, count, instancecount, baseinstance))
GEN_THUNKS(glDrawArraysInstancedEXT, (GLenum mode, GLint start, GLsizei count, GLsizei primcount), (mode, start, count, primcount))
GEN_THUNKS(glDrawArraysInstancedNV, (GLenum mode, GLint first, GLsizei count, GLsizei primcount), (mode, first, count, primcount))
GEN_THUNKS(glDrawBuffer, (GLenum buf), (buf))
GEN_THUNKS(glDrawBuffers, (GLsizei n, const GLenum * bufs), (n, bufs))
GEN_THUNKS(glDrawBuffersARB, (GLsizei n, const GLenum * bufs), (n, bufs))
GEN_THUNKS(glDrawBuffersATI, (GLsizei n, const GLenum * bufs), (n, bufs))
GEN_THUNKS(glDrawBuffersEXT, (GLsizei n, const GLenum * bufs), (n, bufs))
GEN_THUNKS(glDrawBuffersIndexedEXT, (GLint n, const GLenum * location, const GLint * indices), (n, location, indices))
GEN_THUNKS(glDrawBuffersNV, (GLsizei n, const GLenum * bufs), (n, bufs))
GEN_THUNKS(glDrawCommandsAddressNV, (GLenum primitiveMode, const GLuint64 * indirects, const GLsizei * sizes, GLuint count), (primitiveMode, indirects, sizes, count))
GEN_THUNKS(glDrawCommandsNV, (GLenum primitiveMode, GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, GLuint count), (primitiveMode, buffer, indirects, sizes, count))
GEN_THUNKS(glDrawCommandsStatesAddressNV, (const GLuint64 * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count), (indirects, sizes, states, fbos, count))
GEN_THUNKS(glDrawCommandsStatesNV, (GLuint buffer, const GLintptr * indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count), (buffer, indirects, sizes, states, fbos, count))
GEN_THUNKS(glDrawElementArrayAPPLE, (GLenum mode, GLint first, GLsizei count), (mode, first, count))
GEN_THUNKS(glDrawElementArrayATI, (GLenum mode, GLsizei count), (mode, count))
GEN_THUNKS(glDrawElements, (GLenum mode, GLsizei count, GLenum type, const void * indices), (mode, count, type, indices))
GEN_THUNKS(glDrawElementsBaseVertex, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex), (mode, count, type, indices, basevertex))
GEN_THUNKS(glDrawElementsBaseVertexEXT, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex), (mode, count, type, indices, basevertex))
GEN_THUNKS(glDrawElementsBaseVertexOES, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex), (mode, count, type, indices, basevertex))
GEN_THUNKS(glDrawElementsIndirect, (GLenum mode, GLenum type, const void * indirect), (mode, type, indirect))
GEN_THUNKS(glDrawElementsInstanced, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount), (mode, count, type, indices, instancecount))
GEN_THUNKS(glDrawElementsInstancedANGLE, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount), (mode, count, type, indices, primcount))
GEN_THUNKS(glDrawElementsInstancedARB, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount), (mode, count, type, indices, primcount))
GEN_THUNKS(glDrawElementsInstancedBaseInstance, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance), (mode, count, type, indices, instancecount, baseinstance))
GEN_THUNKS(glDrawElementsInstancedBaseInstanceEXT, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance), (mode, count, type, indices, instancecount, baseinstance))
GEN_THUNKS(glDrawElementsInstancedBaseVertex, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex), (mode, count, type, indices, instancecount, basevertex))
GEN_THUNKS(glDrawElementsInstancedBaseVertexBaseInstance, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance), (mode, count, type, indices, instancecount, basevertex, baseinstance))
GEN_THUNKS(glDrawElementsInstancedBaseVertexBaseInstanceEXT, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance), (mode, count, type, indices, instancecount, basevertex, baseinstance))
GEN_THUNKS(glDrawElementsInstancedBaseVertexEXT, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex), (mode, count, type, indices, instancecount, basevertex))
GEN_THUNKS(glDrawElementsInstancedBaseVertexOES, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex), (mode, count, type, indices, instancecount, basevertex))
GEN_THUNKS(glDrawElementsInstancedEXT, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount), (mode, count, type, indices, primcount))
GEN_THUNKS(glDrawElementsInstancedNV, (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount), (mode, count, type, indices, primcount))
GEN_THUNKS(glDrawMeshArraysSUN, (GLenum mode, GLint first, GLsizei count, GLsizei width), (mode, first, count, width))
GEN_THUNKS(glDrawPixels, (GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels), (width, height, format, type, pixels))
GEN_THUNKS(glDrawRangeElementArrayAPPLE, (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count), (mode, start, end, first, count))
GEN_THUNKS(glDrawRangeElementArrayATI, (GLenum mode, GLuint start, GLuint end, GLsizei count), (mode, start, end, count))
GEN_THUNKS(glDrawRangeElements, (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices), (mode, start, end, count, type, indices))
GEN_THUNKS(glDrawRangeElementsBaseVertex, (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex), (mode, start, end, count, type, indices, basevertex))
GEN_THUNKS(glDrawRangeElementsBaseVertexEXT, (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex), (mode, start, end, count, type, indices, basevertex))
GEN_THUNKS(glDrawRangeElementsBaseVertexOES, (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex), (mode, start, end, count, type, indices, basevertex))
GEN_THUNKS(glDrawRangeElementsEXT, (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices), (mode, start, end, count, type, indices))
GEN_THUNKS(glDrawTexfOES, (GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height), (x, y, z, width, height))
GEN_THUNKS(glDrawTexfvOES, (const GLfloat * coords), (coords))
GEN_THUNKS(glDrawTexiOES, (GLint x, GLint y, GLint z, GLint width, GLint height), (x, y, z, width, height))
GEN_THUNKS(glDrawTexivOES, (const GLint * coords), (coords))
GEN_THUNKS(glDrawTexsOES, (GLshort x, GLshort y, GLshort z, GLshort width, GLshort height), (x, y, z, width, height))
GEN_THUNKS(glDrawTexsvOES, (const GLshort * coords), (coords))
GEN_THUNKS(glDrawTextureNV, (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1), (texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1))
GEN_THUNKS(glDrawTexxOES, (GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height), (x, y, z, width, height))
GEN_THUNKS(glDrawTexxvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glDrawTransformFeedback, (GLenum mode, GLuint id), (mode, id))
GEN_THUNKS(glDrawTransformFeedbackInstanced, (GLenum mode, GLuint id, GLsizei instancecount), (mode, id, instancecount))
GEN_THUNKS(glDrawTransformFeedbackNV, (GLenum mode, GLuint id), (mode, id))
GEN_THUNKS(glDrawTransformFeedbackStream, (GLenum mode, GLuint id, GLuint stream), (mode, id, stream))
GEN_THUNKS(glDrawTransformFeedbackStreamInstanced, (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount), (mode, id, stream, instancecount))
GEN_THUNKS(glEGLImageTargetRenderbufferStorageOES, (GLenum target, GLeglImageOES image), (target, image))
GEN_THUNKS(glEGLImageTargetTexture2DOES, (GLenum target, GLeglImageOES image), (target, image))
GEN_THUNKS(glEdgeFlag, (GLboolean flag), (flag))
GEN_THUNKS(glEdgeFlagFormatNV, (GLsizei stride), (stride))
GEN_THUNKS(glEdgeFlagPointer, (GLsizei stride, const void * pointer), (stride, pointer))
GEN_THUNKS(glEdgeFlagPointerEXT, (GLsizei stride, GLsizei count, const GLboolean * pointer), (stride, count, pointer))
GEN_THUNKS(glEdgeFlagPointerListIBM, (GLint stride, const GLboolean ** pointer, GLint ptrstride), (stride, pointer, ptrstride))
GEN_THUNKS(glEdgeFlagv, (const GLboolean * flag), (flag))
GEN_THUNKS(glElementPointerAPPLE, (GLenum type, const void * pointer), (type, pointer))
GEN_THUNKS(glElementPointerATI, (GLenum type, const void * pointer), (type, pointer))
GEN_THUNKS(glEnable, (GLenum cap), (cap))
GEN_THUNKS(glEnableClientState, (GLenum array), (array))
GEN_THUNKS(glEnableClientStateIndexedEXT, (GLenum array, GLuint index), (array, index))
GEN_THUNKS(glEnableClientStateiEXT, (GLenum array, GLuint index), (array, index))
GEN_THUNKS(glEnableDriverControlQCOM, (GLuint driverControl), (driverControl))
GEN_THUNKS(glEnableIndexedEXT, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glEnableVariantClientStateEXT, (GLuint id), (id))
GEN_THUNKS(glEnableVertexArrayAttrib, (GLuint vaobj, GLuint index), (vaobj, index))
GEN_THUNKS(glEnableVertexArrayAttribEXT, (GLuint vaobj, GLuint index), (vaobj, index))
GEN_THUNKS(glEnableVertexArrayEXT, (GLuint vaobj, GLenum array), (vaobj, array))
GEN_THUNKS(glEnableVertexAttribAPPLE, (GLuint index, GLenum pname), (index, pname))
GEN_THUNKS(glEnableVertexAttribArray, (GLuint index), (index))
GEN_THUNKS(glEnableVertexAttribArrayARB, (GLuint index), (index))
GEN_THUNKS(glEnablei, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glEnableiEXT, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glEnableiNV, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glEnableiOES, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glEnd_unwrapped, (void), ())
GEN_THUNKS(glEndConditionalRender, (void), ())
GEN_THUNKS(glEndConditionalRenderNV, (void), ())
GEN_THUNKS(glEndConditionalRenderNVX, (void), ())
GEN_THUNKS(glEndFragmentShaderATI, (void), ())
GEN_THUNKS(glEndList, (void), ())
GEN_THUNKS(glEndOcclusionQueryNV, (void), ())
GEN_THUNKS(glEndPerfMonitorAMD, (GLuint monitor), (monitor))
GEN_THUNKS(glEndPerfQueryINTEL, (GLuint queryHandle), (queryHandle))
GEN_THUNKS(glEndQuery, (GLenum target), (target))
GEN_THUNKS(glEndQueryARB, (GLenum target), (target))
GEN_THUNKS(glEndQueryEXT, (GLenum target), (target))
GEN_THUNKS(glEndQueryIndexed, (GLenum target, GLuint index), (target, index))
GEN_THUNKS(glEndTilingQCOM, (GLbitfield preserveMask), (preserveMask))
GEN_THUNKS(glEndTransformFeedback, (void), ())
GEN_THUNKS(glEndTransformFeedbackEXT, (void), ())
GEN_THUNKS(glEndTransformFeedbackNV, (void), ())
GEN_THUNKS(glEndVertexShaderEXT, (void), ())
GEN_THUNKS(glEndVideoCaptureNV, (GLuint video_capture_slot), (video_capture_slot))
GEN_THUNKS(glEvalCoord1d, (GLdouble u), (u))
GEN_THUNKS(glEvalCoord1dv, (const GLdouble * u), (u))
GEN_THUNKS(glEvalCoord1f, (GLfloat u), (u))
GEN_THUNKS(glEvalCoord1fv, (const GLfloat * u), (u))
GEN_THUNKS(glEvalCoord1xOES, (GLfixed u), (u))
GEN_THUNKS(glEvalCoord1xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glEvalCoord2d, (GLdouble u, GLdouble v), (u, v))
GEN_THUNKS(glEvalCoord2dv, (const GLdouble * u), (u))
GEN_THUNKS(glEvalCoord2f, (GLfloat u, GLfloat v), (u, v))
GEN_THUNKS(glEvalCoord2fv, (const GLfloat * u), (u))
GEN_THUNKS(glEvalCoord2xOES, (GLfixed u, GLfixed v), (u, v))
GEN_THUNKS(glEvalCoord2xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glEvalMapsNV, (GLenum target, GLenum mode), (target, mode))
GEN_THUNKS(glEvalMesh1, (GLenum mode, GLint i1, GLint i2), (mode, i1, i2))
GEN_THUNKS(glEvalMesh2, (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2), (mode, i1, i2, j1, j2))
GEN_THUNKS(glEvalPoint1, (GLint i), (i))
GEN_THUNKS(glEvalPoint2, (GLint i, GLint j), (i, j))
GEN_THUNKS(glExecuteProgramNV, (GLenum target, GLuint id, const GLfloat * params), (target, id, params))
GEN_THUNKS(glExtGetBufferPointervQCOM, (GLenum target, void ** params), (target, params))
GEN_THUNKS(glExtGetBuffersQCOM, (GLuint * buffers, GLint maxBuffers, GLint * numBuffers), (buffers, maxBuffers, numBuffers))
GEN_THUNKS(glExtGetFramebuffersQCOM, (GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers), (framebuffers, maxFramebuffers, numFramebuffers))
GEN_THUNKS(glExtGetProgramBinarySourceQCOM, (GLuint program, GLenum shadertype, GLchar * source, GLint * length), (program, shadertype, source, length))
GEN_THUNKS(glExtGetProgramsQCOM, (GLuint * programs, GLint maxPrograms, GLint * numPrograms), (programs, maxPrograms, numPrograms))
GEN_THUNKS(glExtGetRenderbuffersQCOM, (GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers), (renderbuffers, maxRenderbuffers, numRenderbuffers))
GEN_THUNKS(glExtGetShadersQCOM, (GLuint * shaders, GLint maxShaders, GLint * numShaders), (shaders, maxShaders, numShaders))
GEN_THUNKS(glExtGetTexLevelParameterivQCOM, (GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params), (texture, face, level, pname, params))
GEN_THUNKS(glExtGetTexSubImageQCOM, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels), (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, texels))
GEN_THUNKS(glExtGetTexturesQCOM, (GLuint * textures, GLint maxTextures, GLint * numTextures), (textures, maxTextures, numTextures))
GEN_THUNKS_RET(GLboolean, glExtIsProgramBinaryQCOM, (GLuint program), (program))
GEN_THUNKS(glExtTexObjectStateOverrideiQCOM, (GLenum target, GLenum pname, GLint param), (target, pname, param))
GEN_THUNKS(glExtractComponentEXT, (GLuint res, GLuint src, GLuint num), (res, src, num))
GEN_THUNKS(glFeedbackBuffer, (GLsizei size, GLenum type, GLfloat * buffer), (size, type, buffer))
GEN_THUNKS(glFeedbackBufferxOES, (GLsizei n, GLenum type, const GLfixed * buffer), (n, type, buffer))
GEN_THUNKS_RET(GLsync, glFenceSync, (GLenum condition, GLbitfield flags), (condition, flags))
GEN_THUNKS_RET(GLsync, glFenceSyncAPPLE, (GLenum condition, GLbitfield flags), (condition, flags))
GEN_THUNKS(glFinalCombinerInputNV, (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage), (variable, input, mapping, componentUsage))
GEN_THUNKS(glFinish, (void), ())
GEN_THUNKS_RET(GLint, glFinishAsyncSGIX, (GLuint * markerp), (markerp))
GEN_THUNKS(glFinishFenceAPPLE, (GLuint fence), (fence))
GEN_THUNKS(glFinishFenceNV, (GLuint fence), (fence))
GEN_THUNKS(glFinishObjectAPPLE, (GLenum object, GLint name), (object, name))
GEN_THUNKS(glFinishTextureSUNX, (void), ())
GEN_THUNKS(glFlush, (void), ())
GEN_THUNKS(glFlushMappedBufferRange, (GLenum target, GLintptr offset, GLsizeiptr length), (target, offset, length))
GEN_THUNKS(glFlushMappedBufferRangeAPPLE, (GLenum target, GLintptr offset, GLsizeiptr size), (target, offset, size))
GEN_THUNKS(glFlushMappedBufferRangeEXT, (GLenum target, GLintptr offset, GLsizeiptr length), (target, offset, length))
GEN_THUNKS(glFlushMappedNamedBufferRange, (GLuint buffer, GLintptr offset, GLsizeiptr length), (buffer, offset, length))
GEN_THUNKS(glFlushMappedNamedBufferRangeEXT, (GLuint buffer, GLintptr offset, GLsizeiptr length), (buffer, offset, length))
GEN_THUNKS(glFlushPixelDataRangeNV, (GLenum target), (target))
GEN_THUNKS(glFlushRasterSGIX, (void), ())
GEN_THUNKS(glFlushStaticDataIBM, (GLenum target), (target))
GEN_THUNKS(glFlushVertexArrayRangeAPPLE, (GLsizei length, void * pointer), (length, pointer))
GEN_THUNKS(glFlushVertexArrayRangeNV, (void), ())
GEN_THUNKS(glFogCoordFormatNV, (GLenum type, GLsizei stride), (type, stride))
GEN_THUNKS(glFogCoordPointer, (GLenum type, GLsizei stride, const void * pointer), (type, stride, pointer))
GEN_THUNKS(glFogCoordPointerEXT, (GLenum type, GLsizei stride, const void * pointer), (type, stride, pointer))
GEN_THUNKS(glFogCoordPointerListIBM, (GLenum type, GLint stride, const void ** pointer, GLint ptrstride), (type, stride, pointer, ptrstride))
GEN_THUNKS(glFogCoordd, (GLdouble coord), (coord))
GEN_THUNKS(glFogCoorddEXT, (GLdouble coord), (coord))
GEN_THUNKS(glFogCoorddv, (const GLdouble * coord), (coord))
GEN_THUNKS(glFogCoorddvEXT, (const GLdouble * coord), (coord))
GEN_THUNKS(glFogCoordf, (GLfloat coord), (coord))
GEN_THUNKS(glFogCoordfEXT, (GLfloat coord), (coord))
GEN_THUNKS(glFogCoordfv, (const GLfloat * coord), (coord))
GEN_THUNKS(glFogCoordfvEXT, (const GLfloat * coord), (coord))
GEN_THUNKS(glFogCoordhNV, (GLhalfNV fog), (fog))
GEN_THUNKS(glFogCoordhvNV, (const GLhalfNV * fog), (fog))
GEN_THUNKS(glFogFuncSGIS, (GLsizei n, const GLfloat * points), (n, points))
GEN_THUNKS(glFogf, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glFogfv, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glFogi, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glFogiv, (GLenum pname, const GLint * params), (pname, params))
GEN_THUNKS(glFogx, (GLenum pname, GLfixed param), (pname, param))
GEN_THUNKS(glFogxOES, (GLenum pname, GLfixed param), (pname, param))
GEN_THUNKS(glFogxv, (GLenum pname, const GLfixed * param), (pname, param))
GEN_THUNKS(glFogxvOES, (GLenum pname, const GLfixed * param), (pname, param))
GEN_THUNKS(glFragmentColorMaterialSGIX, (GLenum face, GLenum mode), (face, mode))
GEN_THUNKS(glFragmentCoverageColorNV, (GLuint color), (color))
GEN_THUNKS(glFragmentLightModelfSGIX, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glFragmentLightModelfvSGIX, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glFragmentLightModeliSGIX, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glFragmentLightModelivSGIX, (GLenum pname, const GLint * params), (pname, params))
GEN_THUNKS(glFragmentLightfSGIX, (GLenum light, GLenum pname, GLfloat param), (light, pname, param))
GEN_THUNKS(glFragmentLightfvSGIX, (GLenum light, GLenum pname, const GLfloat * params), (light, pname, params))
GEN_THUNKS(glFragmentLightiSGIX, (GLenum light, GLenum pname, GLint param), (light, pname, param))
GEN_THUNKS(glFragmentLightivSGIX, (GLenum light, GLenum pname, const GLint * params), (light, pname, params))
GEN_THUNKS(glFragmentMaterialfSGIX, (GLenum face, GLenum pname, GLfloat param), (face, pname, param))
GEN_THUNKS(glFragmentMaterialfvSGIX, (GLenum face, GLenum pname, const GLfloat * params), (face, pname, params))
GEN_THUNKS(glFragmentMaterialiSGIX, (GLenum face, GLenum pname, GLint param), (face, pname, param))
GEN_THUNKS(glFragmentMaterialivSGIX, (GLenum face, GLenum pname, const GLint * params), (face, pname, params))
GEN_THUNKS(glFrameTerminatorGREMEDY, (void), ())
GEN_THUNKS(glFrameZoomSGIX, (GLint factor), (factor))
GEN_THUNKS(glFramebufferDrawBufferEXT, (GLuint framebuffer, GLenum mode), (framebuffer, mode))
GEN_THUNKS(glFramebufferDrawBuffersEXT, (GLuint framebuffer, GLsizei n, const GLenum * bufs), (framebuffer, n, bufs))
GEN_THUNKS(glFramebufferParameteri, (GLenum target, GLenum pname, GLint param), (target, pname, param))
GEN_THUNKS(glFramebufferReadBufferEXT, (GLuint framebuffer, GLenum mode), (framebuffer, mode))
GEN_THUNKS(glFramebufferRenderbuffer, (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer), (target, attachment, renderbuffertarget, renderbuffer))
GEN_THUNKS(glFramebufferRenderbufferEXT, (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer), (target, attachment, renderbuffertarget, renderbuffer))
GEN_THUNKS(glFramebufferRenderbufferOES, (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer), (target, attachment, renderbuffertarget, renderbuffer))
GEN_THUNKS(glFramebufferSampleLocationsfvNV, (GLenum target, GLuint start, GLsizei count, const GLfloat * v), (target, start, count, v))
GEN_THUNKS(glFramebufferTexture, (GLenum target, GLenum attachment, GLuint texture, GLint level), (target, attachment, texture, level))
GEN_THUNKS(glFramebufferTexture1D, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level), (target, attachment, textarget, texture, level))
GEN_THUNKS(glFramebufferTexture1DEXT, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level), (target, attachment, textarget, texture, level))
GEN_THUNKS(glFramebufferTexture2D, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level), (target, attachment, textarget, texture, level))
GEN_THUNKS(glFramebufferTexture2DEXT, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level), (target, attachment, textarget, texture, level))
GEN_THUNKS(glFramebufferTexture2DMultisampleEXT, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples), (target, attachment, textarget, texture, level, samples))
GEN_THUNKS(glFramebufferTexture2DMultisampleIMG, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples), (target, attachment, textarget, texture, level, samples))
GEN_THUNKS(glFramebufferTexture2DOES, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level), (target, attachment, textarget, texture, level))
GEN_THUNKS(glFramebufferTexture3D, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset), (target, attachment, textarget, texture, level, zoffset))
GEN_THUNKS(glFramebufferTexture3DEXT, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset), (target, attachment, textarget, texture, level, zoffset))
GEN_THUNKS(glFramebufferTexture3DOES, (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset), (target, attachment, textarget, texture, level, zoffset))
GEN_THUNKS(glFramebufferTextureARB, (GLenum target, GLenum attachment, GLuint texture, GLint level), (target, attachment, texture, level))
GEN_THUNKS(glFramebufferTextureEXT, (GLenum target, GLenum attachment, GLuint texture, GLint level), (target, attachment, texture, level))
GEN_THUNKS(glFramebufferTextureFaceARB, (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face), (target, attachment, texture, level, face))
GEN_THUNKS(glFramebufferTextureFaceEXT, (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face), (target, attachment, texture, level, face))
GEN_THUNKS(glFramebufferTextureLayer, (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer), (target, attachment, texture, level, layer))
GEN_THUNKS(glFramebufferTextureLayerARB, (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer), (target, attachment, texture, level, layer))
GEN_THUNKS(glFramebufferTextureLayerEXT, (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer), (target, attachment, texture, level, layer))
GEN_THUNKS(glFramebufferTextureMultiviewOVR, (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews), (target, attachment, texture, level, baseViewIndex, numViews))
GEN_THUNKS(glFramebufferTextureOES, (GLenum target, GLenum attachment, GLuint texture, GLint level), (target, attachment, texture, level))
GEN_THUNKS(glFreeObjectBufferATI, (GLuint buffer), (buffer))
GEN_THUNKS(glFrontFace, (GLenum mode), (mode))
GEN_THUNKS(glFrustum, (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar), (left, right, bottom, top, zNear, zFar))
GEN_THUNKS(glFrustumf, (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f), (l, r, b, t, n, f))
GEN_THUNKS(glFrustumfOES, (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f), (l, r, b, t, n, f))
GEN_THUNKS(glFrustumx, (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f), (l, r, b, t, n, f))
GEN_THUNKS(glFrustumxOES, (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f), (l, r, b, t, n, f))
GEN_THUNKS_RET(GLuint, glGenAsyncMarkersSGIX, (GLsizei range), (range))
GEN_THUNKS(glGenBuffers, (GLsizei n, GLuint * buffers), (n, buffers))
GEN_THUNKS(glGenBuffersARB, (GLsizei n, GLuint * buffers), (n, buffers))
GEN_THUNKS(glGenFencesAPPLE, (GLsizei n, GLuint * fences), (n, fences))
GEN_THUNKS(glGenFencesNV, (GLsizei n, GLuint * fences), (n, fences))
GEN_THUNKS_RET(GLuint, glGenFragmentShadersATI, (GLuint range), (range))
GEN_THUNKS(glGenFramebuffers, (GLsizei n, GLuint * framebuffers), (n, framebuffers))
GEN_THUNKS(glGenFramebuffersEXT, (GLsizei n, GLuint * framebuffers), (n, framebuffers))
GEN_THUNKS(glGenFramebuffersOES, (GLsizei n, GLuint * framebuffers), (n, framebuffers))
GEN_THUNKS_RET(GLuint, glGenLists, (GLsizei range), (range))
GEN_THUNKS(glGenNamesAMD, (GLenum identifier, GLuint num, GLuint * names), (identifier, num, names))
GEN_THUNKS(glGenOcclusionQueriesNV, (GLsizei n, GLuint * ids), (n, ids))
GEN_THUNKS_RET(GLuint, glGenPathsNV, (GLsizei range), (range))
GEN_THUNKS(glGenPerfMonitorsAMD, (GLsizei n, GLuint * monitors), (n, monitors))
GEN_THUNKS(glGenProgramPipelines, (GLsizei n, GLuint * pipelines), (n, pipelines))
GEN_THUNKS(glGenProgramPipelinesEXT, (GLsizei n, GLuint * pipelines), (n, pipelines))
GEN_THUNKS(glGenProgramsARB, (GLsizei n, GLuint * programs), (n, programs))
GEN_THUNKS(glGenProgramsNV, (GLsizei n, GLuint * programs), (n, programs))
GEN_THUNKS(glGenQueries, (GLsizei n, GLuint * ids), (n, ids))
GEN_THUNKS(glGenQueriesARB, (GLsizei n, GLuint * ids), (n, ids))
GEN_THUNKS(glGenQueriesEXT, (GLsizei n, GLuint * ids), (n, ids))
GEN_THUNKS(glGenRenderbuffers, (GLsizei n, GLuint * renderbuffers), (n, renderbuffers))
GEN_THUNKS(glGenRenderbuffersEXT, (GLsizei n, GLuint * renderbuffers), (n, renderbuffers))
GEN_THUNKS(glGenRenderbuffersOES, (GLsizei n, GLuint * renderbuffers), (n, renderbuffers))
GEN_THUNKS(glGenSamplers, (GLsizei count, GLuint * samplers), (count, samplers))
GEN_THUNKS_RET(GLuint, glGenSymbolsEXT, (GLenum datatype, GLenum storagetype, GLenum range, GLuint components), (datatype, storagetype, range, components))
GEN_THUNKS(glGenTextures, (GLsizei n, GLuint * textures), (n, textures))
GEN_THUNKS(glGenTexturesEXT, (GLsizei n, GLuint * textures), (n, textures))
GEN_THUNKS(glGenTransformFeedbacks, (GLsizei n, GLuint * ids), (n, ids))
GEN_THUNKS(glGenTransformFeedbacksNV, (GLsizei n, GLuint * ids), (n, ids))
GEN_THUNKS(glGenVertexArrays, (GLsizei n, GLuint * arrays), (n, arrays))
GEN_THUNKS(glGenVertexArraysAPPLE, (GLsizei n, GLuint * arrays), (n, arrays))
GEN_THUNKS(glGenVertexArraysOES, (GLsizei n, GLuint * arrays), (n, arrays))
GEN_THUNKS_RET(GLuint, glGenVertexShadersEXT, (GLuint range), (range))
GEN_THUNKS(glGenerateMipmap, (GLenum target), (target))
GEN_THUNKS(glGenerateMipmapEXT, (GLenum target), (target))
GEN_THUNKS(glGenerateMipmapOES, (GLenum target), (target))
GEN_THUNKS(glGenerateMultiTexMipmapEXT, (GLenum texunit, GLenum target), (texunit, target))
GEN_THUNKS(glGenerateTextureMipmap, (GLuint texture), (texture))
GEN_THUNKS(glGenerateTextureMipmapEXT, (GLuint texture, GLenum target), (texture, target))
GEN_THUNKS(glGetActiveAtomicCounterBufferiv, (GLuint program, GLuint bufferIndex, GLenum pname, GLint * params), (program, bufferIndex, pname, params))
GEN_THUNKS(glGetActiveAttrib, (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name), (program, index, bufSize, length, size, type, name))
GEN_THUNKS(glGetActiveAttribARB, (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name), ((uintptr_t)programObj, index, maxLength, length, size, type, name))
GEN_THUNKS(glGetActiveSubroutineName, (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name), (program, shadertype, index, bufsize, length, name))
GEN_THUNKS(glGetActiveSubroutineUniformName, (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name), (program, shadertype, index, bufsize, length, name))
GEN_THUNKS(glGetActiveSubroutineUniformiv, (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values), (program, shadertype, index, pname, values))
GEN_THUNKS(glGetActiveUniform, (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name), (program, index, bufSize, length, size, type, name))
GEN_THUNKS(glGetActiveUniformARB, (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name), ((uintptr_t)programObj, index, maxLength, length, size, type, name))
GEN_THUNKS(glGetActiveUniformBlockName, (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName), (program, uniformBlockIndex, bufSize, length, uniformBlockName))
GEN_THUNKS(glGetActiveUniformBlockiv, (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params), (program, uniformBlockIndex, pname, params))
GEN_THUNKS(glGetActiveUniformName, (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName), (program, uniformIndex, bufSize, length, uniformName))
GEN_THUNKS(glGetActiveUniformsiv, (GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params), (program, uniformCount, uniformIndices, pname, params))
GEN_THUNKS(glGetActiveVaryingNV, (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name), (program, index, bufSize, length, size, type, name))
GEN_THUNKS(glGetArrayObjectfvATI, (GLenum array, GLenum pname, GLfloat * params), (array, pname, params))
GEN_THUNKS(glGetArrayObjectivATI, (GLenum array, GLenum pname, GLint * params), (array, pname, params))
GEN_THUNKS(glGetAttachedObjectsARB, (GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj), ((uintptr_t)containerObj, maxCount, count, obj))
GEN_THUNKS(glGetAttachedShaders, (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders), (program, maxCount, count, shaders))
GEN_THUNKS_RET(GLint, glGetAttribLocation, (GLuint program, const GLchar * name), (program, name))
GEN_THUNKS_RET(GLint, glGetAttribLocationARB, (GLhandleARB programObj, const GLcharARB * name), ((uintptr_t)programObj, name))
GEN_THUNKS(glGetBooleanIndexedvEXT, (GLenum target, GLuint index, GLboolean * data), (target, index, data))
GEN_THUNKS(glGetBooleani_v, (GLenum target, GLuint index, GLboolean * data), (target, index, data))
GEN_THUNKS(glGetBooleanv, (GLenum pname, GLboolean * data), (pname, data))
GEN_THUNKS(glGetBufferParameteri64v, (GLenum target, GLenum pname, GLint64 * params), (target, pname, params))
GEN_THUNKS(glGetBufferParameteriv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetBufferParameterivARB, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetBufferParameterui64vNV, (GLenum target, GLenum pname, GLuint64EXT * params), (target, pname, params))
GEN_THUNKS(glGetBufferPointerv, (GLenum target, GLenum pname, void ** params), (target, pname, params))
GEN_THUNKS(glGetBufferPointervARB, (GLenum target, GLenum pname, void ** params), (target, pname, params))
GEN_THUNKS(glGetBufferPointervOES, (GLenum target, GLenum pname, void ** params), (target, pname, params))
GEN_THUNKS(glGetBufferSubData, (GLenum target, GLintptr offset, GLsizeiptr size, void * data), (target, offset, size, data))
GEN_THUNKS(glGetBufferSubDataARB, (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data), (target, offset, size, data))
GEN_THUNKS(glGetClipPlane, (GLenum plane, GLdouble * equation), (plane, equation))
GEN_THUNKS(glGetClipPlanef, (GLenum plane, GLfloat * equation), (plane, equation))
GEN_THUNKS(glGetClipPlanefOES, (GLenum plane, GLfloat * equation), (plane, equation))
GEN_THUNKS(glGetClipPlanex, (GLenum plane, GLfixed * equation), (plane, equation))
GEN_THUNKS(glGetClipPlanexOES, (GLenum plane, GLfixed * equation), (plane, equation))
GEN_THUNKS(glGetColorTable, (GLenum target, GLenum format, GLenum type, void * table), (target, format, type, table))
GEN_THUNKS(glGetColorTableEXT, (GLenum target, GLenum format, GLenum type, void * data), (target, format, type, data))
GEN_THUNKS(glGetColorTableParameterfv, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetColorTableParameterfvEXT, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetColorTableParameterfvSGI, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetColorTableParameteriv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetColorTableParameterivEXT, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetColorTableParameterivSGI, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetColorTableSGI, (GLenum target, GLenum format, GLenum type, void * table), (target, format, type, table))
GEN_THUNKS(glGetCombinerInputParameterfvNV, (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params), (stage, portion, variable, pname, params))
GEN_THUNKS(glGetCombinerInputParameterivNV, (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params), (stage, portion, variable, pname, params))
GEN_THUNKS(glGetCombinerOutputParameterfvNV, (GLenum stage, GLenum portion, GLenum pname, GLfloat * params), (stage, portion, pname, params))
GEN_THUNKS(glGetCombinerOutputParameterivNV, (GLenum stage, GLenum portion, GLenum pname, GLint * params), (stage, portion, pname, params))
GEN_THUNKS(glGetCombinerStageParameterfvNV, (GLenum stage, GLenum pname, GLfloat * params), (stage, pname, params))
GEN_THUNKS_RET(GLuint, glGetCommandHeaderNV, (GLenum tokenID, GLuint size), (tokenID, size))
GEN_THUNKS(glGetCompressedMultiTexImageEXT, (GLenum texunit, GLenum target, GLint lod, void * img), (texunit, target, lod, img))
GEN_THUNKS(glGetCompressedTexImage, (GLenum target, GLint level, void * img), (target, level, img))
GEN_THUNKS(glGetCompressedTexImageARB, (GLenum target, GLint level, void * img), (target, level, img))
GEN_THUNKS(glGetCompressedTextureImage, (GLuint texture, GLint level, GLsizei bufSize, void * pixels), (texture, level, bufSize, pixels))
GEN_THUNKS(glGetCompressedTextureImageEXT, (GLuint texture, GLenum target, GLint lod, void * img), (texture, target, lod, img))
GEN_THUNKS(glGetCompressedTextureSubImage, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels), (texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels))
GEN_THUNKS(glGetConvolutionFilter, (GLenum target, GLenum format, GLenum type, void * image), (target, format, type, image))
GEN_THUNKS(glGetConvolutionFilterEXT, (GLenum target, GLenum format, GLenum type, void * image), (target, format, type, image))
GEN_THUNKS(glGetConvolutionParameterfv, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetConvolutionParameterfvEXT, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetConvolutionParameteriv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetConvolutionParameterivEXT, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetConvolutionParameterxvOES, (GLenum target, GLenum pname, GLfixed * params), (target, pname, params))
GEN_THUNKS(glGetCoverageModulationTableNV, (GLsizei bufsize, GLfloat * v), (bufsize, v))
GEN_THUNKS_RET(GLuint, glGetDebugMessageLog, (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog), (count, bufSize, sources, types, ids, severities, lengths, messageLog))
GEN_THUNKS_RET(GLuint, glGetDebugMessageLogAMD, (GLuint count, GLsizei bufsize, GLenum * categories, GLuint * severities, GLuint * ids, GLsizei * lengths, GLchar * message), (count, bufsize, categories, severities, ids, lengths, message))
GEN_THUNKS_RET(GLuint, glGetDebugMessageLogARB, (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog), (count, bufSize, sources, types, ids, severities, lengths, messageLog))
GEN_THUNKS_RET(GLuint, glGetDebugMessageLogKHR, (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog), (count, bufSize, sources, types, ids, severities, lengths, messageLog))
GEN_THUNKS(glGetDetailTexFuncSGIS, (GLenum target, GLfloat * points), (target, points))
GEN_THUNKS(glGetDoubleIndexedvEXT, (GLenum target, GLuint index, GLdouble * data), (target, index, data))
GEN_THUNKS(glGetDoublei_v, (GLenum target, GLuint index, GLdouble * data), (target, index, data))
GEN_THUNKS(glGetDoublei_vEXT, (GLenum pname, GLuint index, GLdouble * params), (pname, index, params))
GEN_THUNKS(glGetDoublev, (GLenum pname, GLdouble * data), (pname, data))
GEN_THUNKS(glGetDriverControlStringQCOM, (GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString), (driverControl, bufSize, length, driverControlString))
GEN_THUNKS(glGetDriverControlsQCOM, (GLint * num, GLsizei size, GLuint * driverControls), (num, size, driverControls))
GEN_THUNKS_RET(GLenum, glGetError, (void), ())
GEN_THUNKS(glGetFenceivNV, (GLuint fence, GLenum pname, GLint * params), (fence, pname, params))
GEN_THUNKS(glGetFinalCombinerInputParameterfvNV, (GLenum variable, GLenum pname, GLfloat * params), (variable, pname, params))
GEN_THUNKS(glGetFinalCombinerInputParameterivNV, (GLenum variable, GLenum pname, GLint * params), (variable, pname, params))
GEN_THUNKS(glGetFirstPerfQueryIdINTEL, (GLuint * queryId), (queryId))
GEN_THUNKS(glGetFixedv, (GLenum pname, GLfixed * params), (pname, params))
GEN_THUNKS(glGetFixedvOES, (GLenum pname, GLfixed * params), (pname, params))
GEN_THUNKS(glGetFloatIndexedvEXT, (GLenum target, GLuint index, GLfloat * data), (target, index, data))
GEN_THUNKS(glGetFloati_v, (GLenum target, GLuint index, GLfloat * data), (target, index, data))
GEN_THUNKS(glGetFloati_vEXT, (GLenum pname, GLuint index, GLfloat * params), (pname, index, params))
GEN_THUNKS(glGetFloati_vNV, (GLenum target, GLuint index, GLfloat * data), (target, index, data))
GEN_THUNKS(glGetFloatv, (GLenum pname, GLfloat * data), (pname, data))
GEN_THUNKS(glGetFogFuncSGIS, (GLfloat * points), (points))
GEN_THUNKS_RET(GLint, glGetFragDataIndex, (GLuint program, const GLchar * name), (program, name))
GEN_THUNKS_RET(GLint, glGetFragDataLocation, (GLuint program, const GLchar * name), (program, name))
GEN_THUNKS_RET(GLint, glGetFragDataLocationEXT, (GLuint program, const GLchar * name), (program, name))
GEN_THUNKS(glGetFragmentLightfvSGIX, (GLenum light, GLenum pname, GLfloat * params), (light, pname, params))
GEN_THUNKS(glGetFragmentLightivSGIX, (GLenum light, GLenum pname, GLint * params), (light, pname, params))
GEN_THUNKS(glGetFragmentMaterialfvSGIX, (GLenum face, GLenum pname, GLfloat * params), (face, pname, params))
GEN_THUNKS(glGetFragmentMaterialivSGIX, (GLenum face, GLenum pname, GLint * params), (face, pname, params))
GEN_THUNKS(glGetFramebufferAttachmentParameteriv, (GLenum target, GLenum attachment, GLenum pname, GLint * params), (target, attachment, pname, params))
GEN_THUNKS(glGetFramebufferAttachmentParameterivEXT, (GLenum target, GLenum attachment, GLenum pname, GLint * params), (target, attachment, pname, params))
GEN_THUNKS(glGetFramebufferAttachmentParameterivOES, (GLenum target, GLenum attachment, GLenum pname, GLint * params), (target, attachment, pname, params))
GEN_THUNKS(glGetFramebufferParameteriv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetFramebufferParameterivEXT, (GLuint framebuffer, GLenum pname, GLint * params), (framebuffer, pname, params))
GEN_THUNKS_RET(GLenum, glGetGraphicsResetStatus, (void), ())
GEN_THUNKS_RET(GLenum, glGetGraphicsResetStatusARB, (void), ())
GEN_THUNKS_RET(GLenum, glGetGraphicsResetStatusEXT, (void), ())
GEN_THUNKS_RET(GLenum, glGetGraphicsResetStatusKHR, (void), ())
GEN_THUNKS_RET(GLhandleARB, glGetHandleARB, (GLenum pname), (pname))
GEN_THUNKS(glGetHistogram, (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values), (target, reset, format, type, values))
GEN_THUNKS(glGetHistogramEXT, (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values), (target, reset, format, type, values))
GEN_THUNKS(glGetHistogramParameterfv, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetHistogramParameterfvEXT, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetHistogramParameteriv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetHistogramParameterivEXT, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetHistogramParameterxvOES, (GLenum target, GLenum pname, GLfixed * params), (target, pname, params))
GEN_THUNKS_RET(GLuint64, glGetImageHandleARB, (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format), (texture, level, layered, layer, format))
GEN_THUNKS_RET(GLuint64, glGetImageHandleNV, (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format), (texture, level, layered, layer, format))
GEN_THUNKS(glGetImageTransformParameterfvHP, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetImageTransformParameterivHP, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetInfoLogARB, (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog), ((uintptr_t)obj, maxLength, length, infoLog))
GEN_THUNKS_RET(GLint, glGetInstrumentsSGIX, (void), ())
GEN_THUNKS(glGetInteger64i_v, (GLenum target, GLuint index, GLint64 * data), (target, index, data))
GEN_THUNKS(glGetInteger64v, (GLenum pname, GLint64 * data), (pname, data))
GEN_THUNKS(glGetInteger64vAPPLE, (GLenum pname, GLint64 * params), (pname, params))
GEN_THUNKS(glGetIntegerIndexedvEXT, (GLenum target, GLuint index, GLint * data), (target, index, data))
GEN_THUNKS(glGetIntegeri_v, (GLenum target, GLuint index, GLint * data), (target, index, data))
GEN_THUNKS(glGetIntegeri_vEXT, (GLenum target, GLuint index, GLint * data), (target, index, data))
GEN_THUNKS(glGetIntegerui64i_vNV, (GLenum value, GLuint index, GLuint64EXT * result), (value, index, result))
GEN_THUNKS(glGetIntegerui64vNV, (GLenum value, GLuint64EXT * result), (value, result))
GEN_THUNKS(glGetIntegerv, (GLenum pname, GLint * data), (pname, data))
GEN_THUNKS(glGetInternalformatSampleivNV, (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint * params), (target, internalformat, samples, pname, bufSize, params))
GEN_THUNKS(glGetInternalformati64v, (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 * params), (target, internalformat, pname, bufSize, params))
GEN_THUNKS(glGetInternalformativ, (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params), (target, internalformat, pname, bufSize, params))
GEN_THUNKS(glGetInvariantBooleanvEXT, (GLuint id, GLenum value, GLboolean * data), (id, value, data))
GEN_THUNKS(glGetInvariantFloatvEXT, (GLuint id, GLenum value, GLfloat * data), (id, value, data))
GEN_THUNKS(glGetInvariantIntegervEXT, (GLuint id, GLenum value, GLint * data), (id, value, data))
GEN_THUNKS(glGetLightfv, (GLenum light, GLenum pname, GLfloat * params), (light, pname, params))
GEN_THUNKS(glGetLightiv, (GLenum light, GLenum pname, GLint * params), (light, pname, params))
GEN_THUNKS(glGetLightxOES, (GLenum light, GLenum pname, GLfixed * params), (light, pname, params))
GEN_THUNKS(glGetLightxv, (GLenum light, GLenum pname, GLfixed * params), (light, pname, params))
GEN_THUNKS(glGetLightxvOES, (GLenum light, GLenum pname, GLfixed * params), (light, pname, params))
GEN_THUNKS(glGetListParameterfvSGIX, (GLuint list, GLenum pname, GLfloat * params), (list, pname, params))
GEN_THUNKS(glGetListParameterivSGIX, (GLuint list, GLenum pname, GLint * params), (list, pname, params))
GEN_THUNKS(glGetLocalConstantBooleanvEXT, (GLuint id, GLenum value, GLboolean * data), (id, value, data))
GEN_THUNKS(glGetLocalConstantFloatvEXT, (GLuint id, GLenum value, GLfloat * data), (id, value, data))
GEN_THUNKS(glGetLocalConstantIntegervEXT, (GLuint id, GLenum value, GLint * data), (id, value, data))
GEN_THUNKS(glGetMapAttribParameterfvNV, (GLenum target, GLuint index, GLenum pname, GLfloat * params), (target, index, pname, params))
GEN_THUNKS(glGetMapAttribParameterivNV, (GLenum target, GLuint index, GLenum pname, GLint * params), (target, index, pname, params))
GEN_THUNKS(glGetMapControlPointsNV, (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points), (target, index, type, ustride, vstride, packed, points))
GEN_THUNKS(glGetMapParameterfvNV, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetMapParameterivNV, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetMapdv, (GLenum target, GLenum query, GLdouble * v), (target, query, v))
GEN_THUNKS(glGetMapfv, (GLenum target, GLenum query, GLfloat * v), (target, query, v))
GEN_THUNKS(glGetMapiv, (GLenum target, GLenum query, GLint * v), (target, query, v))
GEN_THUNKS(glGetMapxvOES, (GLenum target, GLenum query, GLfixed * v), (target, query, v))
GEN_THUNKS(glGetMaterialfv, (GLenum face, GLenum pname, GLfloat * params), (face, pname, params))
GEN_THUNKS(glGetMaterialiv, (GLenum face, GLenum pname, GLint * params), (face, pname, params))
GEN_THUNKS(glGetMaterialxOES, (GLenum face, GLenum pname, GLfixed param), (face, pname, param))
GEN_THUNKS(glGetMaterialxv, (GLenum face, GLenum pname, GLfixed * params), (face, pname, params))
GEN_THUNKS(glGetMaterialxvOES, (GLenum face, GLenum pname, GLfixed * params), (face, pname, params))
GEN_THUNKS(glGetMinmax, (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values), (target, reset, format, type, values))
GEN_THUNKS(glGetMinmaxEXT, (GLenum target, GLboolean reset, GLenum format, GLenum type, void * values), (target, reset, format, type, values))
GEN_THUNKS(glGetMinmaxParameterfv, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetMinmaxParameterfvEXT, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetMinmaxParameteriv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetMinmaxParameterivEXT, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetMultiTexEnvfvEXT, (GLenum texunit, GLenum target, GLenum pname, GLfloat * params), (texunit, target, pname, params))
GEN_THUNKS(glGetMultiTexEnvivEXT, (GLenum texunit, GLenum target, GLenum pname, GLint * params), (texunit, target, pname, params))
GEN_THUNKS(glGetMultiTexGendvEXT, (GLenum texunit, GLenum coord, GLenum pname, GLdouble * params), (texunit, coord, pname, params))
GEN_THUNKS(glGetMultiTexGenfvEXT, (GLenum texunit, GLenum coord, GLenum pname, GLfloat * params), (texunit, coord, pname, params))
GEN_THUNKS(glGetMultiTexGenivEXT, (GLenum texunit, GLenum coord, GLenum pname, GLint * params), (texunit, coord, pname, params))
GEN_THUNKS(glGetMultiTexImageEXT, (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels), (texunit, target, level, format, type, pixels))
GEN_THUNKS(glGetMultiTexLevelParameterfvEXT, (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params), (texunit, target, level, pname, params))
GEN_THUNKS(glGetMultiTexLevelParameterivEXT, (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params), (texunit, target, level, pname, params))
GEN_THUNKS(glGetMultiTexParameterIivEXT, (GLenum texunit, GLenum target, GLenum pname, GLint * params), (texunit, target, pname, params))
GEN_THUNKS(glGetMultiTexParameterIuivEXT, (GLenum texunit, GLenum target, GLenum pname, GLuint * params), (texunit, target, pname, params))
GEN_THUNKS(glGetMultiTexParameterfvEXT, (GLenum texunit, GLenum target, GLenum pname, GLfloat * params), (texunit, target, pname, params))
GEN_THUNKS(glGetMultiTexParameterivEXT, (GLenum texunit, GLenum target, GLenum pname, GLint * params), (texunit, target, pname, params))
GEN_THUNKS(glGetMultisamplefv, (GLenum pname, GLuint index, GLfloat * val), (pname, index, val))
GEN_THUNKS(glGetMultisamplefvNV, (GLenum pname, GLuint index, GLfloat * val), (pname, index, val))
GEN_THUNKS(glGetNamedBufferParameteri64v, (GLuint buffer, GLenum pname, GLint64 * params), (buffer, pname, params))
GEN_THUNKS(glGetNamedBufferParameteriv, (GLuint buffer, GLenum pname, GLint * params), (buffer, pname, params))
GEN_THUNKS(glGetNamedBufferParameterivEXT, (GLuint buffer, GLenum pname, GLint * params), (buffer, pname, params))
GEN_THUNKS(glGetNamedBufferParameterui64vNV, (GLuint buffer, GLenum pname, GLuint64EXT * params), (buffer, pname, params))
GEN_THUNKS(glGetNamedBufferPointerv, (GLuint buffer, GLenum pname, void ** params), (buffer, pname, params))
GEN_THUNKS(glGetNamedBufferPointervEXT, (GLuint buffer, GLenum pname, void ** params), (buffer, pname, params))
GEN_THUNKS(glGetNamedBufferSubData, (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data), (buffer, offset, size, data))
GEN_THUNKS(glGetNamedBufferSubDataEXT, (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data), (buffer, offset, size, data))
GEN_THUNKS(glGetNamedFramebufferAttachmentParameteriv, (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params), (framebuffer, attachment, pname, params))
GEN_THUNKS(glGetNamedFramebufferAttachmentParameterivEXT, (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params), (framebuffer, attachment, pname, params))
GEN_THUNKS(glGetNamedFramebufferParameteriv, (GLuint framebuffer, GLenum pname, GLint * param), (framebuffer, pname, param))
GEN_THUNKS(glGetNamedFramebufferParameterivEXT, (GLuint framebuffer, GLenum pname, GLint * params), (framebuffer, pname, params))
GEN_THUNKS(glGetNamedProgramLocalParameterIivEXT, (GLuint program, GLenum target, GLuint index, GLint * params), (program, target, index, params))
GEN_THUNKS(glGetNamedProgramLocalParameterIuivEXT, (GLuint program, GLenum target, GLuint index, GLuint * params), (program, target, index, params))
GEN_THUNKS(glGetNamedProgramLocalParameterdvEXT, (GLuint program, GLenum target, GLuint index, GLdouble * params), (program, target, index, params))
GEN_THUNKS(glGetNamedProgramLocalParameterfvEXT, (GLuint program, GLenum target, GLuint index, GLfloat * params), (program, target, index, params))
GEN_THUNKS(glGetNamedProgramStringEXT, (GLuint program, GLenum target, GLenum pname, void * string), (program, target, pname, string))
GEN_THUNKS(glGetNamedProgramivEXT, (GLuint program, GLenum target, GLenum pname, GLint * params), (program, target, pname, params))
GEN_THUNKS(glGetNamedRenderbufferParameteriv, (GLuint renderbuffer, GLenum pname, GLint * params), (renderbuffer, pname, params))
GEN_THUNKS(glGetNamedRenderbufferParameterivEXT, (GLuint renderbuffer, GLenum pname, GLint * params), (renderbuffer, pname, params))
GEN_THUNKS(glGetNamedStringARB, (GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string), (namelen, name, bufSize, stringlen, string))
GEN_THUNKS(glGetNamedStringivARB, (GLint namelen, const GLchar * name, GLenum pname, GLint * params), (namelen, name, pname, params))
GEN_THUNKS(glGetNextPerfQueryIdINTEL, (GLuint queryId, GLuint * nextQueryId), (queryId, nextQueryId))
GEN_THUNKS(glGetObjectBufferfvATI, (GLuint buffer, GLenum pname, GLfloat * params), (buffer, pname, params))
GEN_THUNKS(glGetObjectBufferivATI, (GLuint buffer, GLenum pname, GLint * params), (buffer, pname, params))
GEN_THUNKS(glGetObjectLabel, (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label), (identifier, name, bufSize, length, label))
GEN_THUNKS(glGetObjectLabelEXT, (GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label), (type, object, bufSize, length, label))
GEN_THUNKS(glGetObjectLabelKHR, (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label), (identifier, name, bufSize, length, label))
GEN_THUNKS(glGetObjectParameterfvARB, (GLhandleARB obj, GLenum pname, GLfloat * params), ((uintptr_t)obj, pname, params))
GEN_THUNKS(glGetObjectParameterivAPPLE, (GLenum objectType, GLuint name, GLenum pname, GLint * params), (objectType, name, pname, params))
GEN_THUNKS(glGetObjectParameterivARB, (GLhandleARB obj, GLenum pname, GLint * params), ((uintptr_t)obj, pname, params))
GEN_THUNKS(glGetObjectPtrLabel, (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label), (ptr, bufSize, length, label))
GEN_THUNKS(glGetObjectPtrLabelKHR, (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label), (ptr, bufSize, length, label))
GEN_THUNKS(glGetOcclusionQueryivNV, (GLuint id, GLenum pname, GLint * params), (id, pname, params))
GEN_THUNKS(glGetOcclusionQueryuivNV, (GLuint id, GLenum pname, GLuint * params), (id, pname, params))
GEN_THUNKS(glGetPathColorGenfvNV, (GLenum color, GLenum pname, GLfloat * value), (color, pname, value))
GEN_THUNKS(glGetPathColorGenivNV, (GLenum color, GLenum pname, GLint * value), (color, pname, value))
GEN_THUNKS(glGetPathCommandsNV, (GLuint path, GLubyte * commands), (path, commands))
GEN_THUNKS(glGetPathCoordsNV, (GLuint path, GLfloat * coords), (path, coords))
GEN_THUNKS(glGetPathDashArrayNV, (GLuint path, GLfloat * dashArray), (path, dashArray))
GEN_THUNKS_RET(GLfloat, glGetPathLengthNV, (GLuint path, GLsizei startSegment, GLsizei numSegments), (path, startSegment, numSegments))
GEN_THUNKS(glGetPathMetricRangeNV, (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics), (metricQueryMask, firstPathName, numPaths, stride, metrics))
GEN_THUNKS(glGetPathMetricsNV, (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics), (metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics))
GEN_THUNKS(glGetPathParameterfvNV, (GLuint path, GLenum pname, GLfloat * value), (path, pname, value))
GEN_THUNKS(glGetPathParameterivNV, (GLuint path, GLenum pname, GLint * value), (path, pname, value))
GEN_THUNKS(glGetPathSpacingNV, (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing), (pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing))
GEN_THUNKS(glGetPathTexGenfvNV, (GLenum texCoordSet, GLenum pname, GLfloat * value), (texCoordSet, pname, value))
GEN_THUNKS(glGetPathTexGenivNV, (GLenum texCoordSet, GLenum pname, GLint * value), (texCoordSet, pname, value))
GEN_THUNKS(glGetPerfCounterInfoINTEL, (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue), (queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue))
GEN_THUNKS(glGetPerfMonitorCounterDataAMD, (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten), (monitor, pname, dataSize, data, bytesWritten))
GEN_THUNKS(glGetPerfMonitorCounterInfoAMD, (GLuint group, GLuint counter, GLenum pname, void * data), (group, counter, pname, data))
GEN_THUNKS(glGetPerfMonitorCounterStringAMD, (GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString), (group, counter, bufSize, length, counterString))
GEN_THUNKS(glGetPerfMonitorCountersAMD, (GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters), (group, numCounters, maxActiveCounters, counterSize, counters))
GEN_THUNKS(glGetPerfMonitorGroupStringAMD, (GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString), (group, bufSize, length, groupString))
GEN_THUNKS(glGetPerfMonitorGroupsAMD, (GLint * numGroups, GLsizei groupsSize, GLuint * groups), (numGroups, groupsSize, groups))
GEN_THUNKS(glGetPerfQueryDataINTEL, (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten), (queryHandle, flags, dataSize, data, bytesWritten))
GEN_THUNKS(glGetPerfQueryIdByNameINTEL, (GLchar * queryName, GLuint * queryId), (queryName, queryId))
GEN_THUNKS(glGetPerfQueryInfoINTEL, (GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask), (queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask))
GEN_THUNKS(glGetPixelMapfv, (GLenum map, GLfloat * values), (map, values))
GEN_THUNKS(glGetPixelMapuiv, (GLenum map, GLuint * values), (map, values))
GEN_THUNKS(glGetPixelMapusv, (GLenum map, GLushort * values), (map, values))
GEN_THUNKS(glGetPixelMapxv, (GLenum map, GLint size, GLfixed * values), (map, size, values))
GEN_THUNKS(glGetPixelTexGenParameterfvSGIS, (GLenum pname, GLfloat * params), (pname, params))
GEN_THUNKS(glGetPixelTexGenParameterivSGIS, (GLenum pname, GLint * params), (pname, params))
GEN_THUNKS(glGetPixelTransformParameterfvEXT, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetPixelTransformParameterivEXT, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetPointerIndexedvEXT, (GLenum target, GLuint index, void ** data), (target, index, data))
GEN_THUNKS(glGetPointeri_vEXT, (GLenum pname, GLuint index, void ** params), (pname, index, params))
GEN_THUNKS(glGetPointerv, (GLenum pname, void ** params), (pname, params))
GEN_THUNKS(glGetPointervEXT, (GLenum pname, void ** params), (pname, params))
GEN_THUNKS(glGetPointervKHR, (GLenum pname, void ** params), (pname, params))
GEN_THUNKS(glGetPolygonStipple, (GLubyte * mask), (mask))
GEN_THUNKS(glGetProgramBinary, (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary), (program, bufSize, length, binaryFormat, binary))
GEN_THUNKS(glGetProgramBinaryOES, (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary), (program, bufSize, length, binaryFormat, binary))
GEN_THUNKS(glGetProgramEnvParameterIivNV, (GLenum target, GLuint index, GLint * params), (target, index, params))
GEN_THUNKS(glGetProgramEnvParameterIuivNV, (GLenum target, GLuint index, GLuint * params), (target, index, params))
GEN_THUNKS(glGetProgramEnvParameterdvARB, (GLenum target, GLuint index, GLdouble * params), (target, index, params))
GEN_THUNKS(glGetProgramEnvParameterfvARB, (GLenum target, GLuint index, GLfloat * params), (target, index, params))
GEN_THUNKS(glGetProgramInfoLog, (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog), (program, bufSize, length, infoLog))
GEN_THUNKS(glGetProgramInterfaceiv, (GLuint program, GLenum programInterface, GLenum pname, GLint * params), (program, programInterface, pname, params))
GEN_THUNKS(glGetProgramLocalParameterIivNV, (GLenum target, GLuint index, GLint * params), (target, index, params))
GEN_THUNKS(glGetProgramLocalParameterIuivNV, (GLenum target, GLuint index, GLuint * params), (target, index, params))
GEN_THUNKS(glGetProgramLocalParameterdvARB, (GLenum target, GLuint index, GLdouble * params), (target, index, params))
GEN_THUNKS(glGetProgramLocalParameterfvARB, (GLenum target, GLuint index, GLfloat * params), (target, index, params))
GEN_THUNKS(glGetProgramNamedParameterdvNV, (GLuint id, GLsizei len, const GLubyte * name, GLdouble * params), (id, len, name, params))
GEN_THUNKS(glGetProgramNamedParameterfvNV, (GLuint id, GLsizei len, const GLubyte * name, GLfloat * params), (id, len, name, params))
GEN_THUNKS(glGetProgramParameterdvNV, (GLenum target, GLuint index, GLenum pname, GLdouble * params), (target, index, pname, params))
GEN_THUNKS(glGetProgramParameterfvNV, (GLenum target, GLuint index, GLenum pname, GLfloat * params), (target, index, pname, params))
GEN_THUNKS(glGetProgramPipelineInfoLog, (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog), (pipeline, bufSize, length, infoLog))
GEN_THUNKS(glGetProgramPipelineInfoLogEXT, (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog), (pipeline, bufSize, length, infoLog))
GEN_THUNKS(glGetProgramPipelineiv, (GLuint pipeline, GLenum pname, GLint * params), (pipeline, pname, params))
GEN_THUNKS(glGetProgramPipelineivEXT, (GLuint pipeline, GLenum pname, GLint * params), (pipeline, pname, params))
GEN_THUNKS_RET(GLuint, glGetProgramResourceIndex, (GLuint program, GLenum programInterface, const GLchar * name), (program, programInterface, name))
GEN_THUNKS_RET(GLint, glGetProgramResourceLocation, (GLuint program, GLenum programInterface, const GLchar * name), (program, programInterface, name))
GEN_THUNKS_RET(GLint, glGetProgramResourceLocationIndex, (GLuint program, GLenum programInterface, const GLchar * name), (program, programInterface, name))
GEN_THUNKS(glGetProgramResourceName, (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name), (program, programInterface, index, bufSize, length, name))
GEN_THUNKS(glGetProgramResourcefvNV, (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLfloat * params), (program, programInterface, index, propCount, props, bufSize, length, params))
GEN_THUNKS(glGetProgramResourceiv, (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params), (program, programInterface, index, propCount, props, bufSize, length, params))
GEN_THUNKS(glGetProgramStageiv, (GLuint program, GLenum shadertype, GLenum pname, GLint * values), (program, shadertype, pname, values))
GEN_THUNKS(glGetProgramStringARB, (GLenum target, GLenum pname, void * string), (target, pname, string))
GEN_THUNKS(glGetProgramStringNV, (GLuint id, GLenum pname, GLubyte * program), (id, pname, program))
GEN_THUNKS(glGetProgramSubroutineParameteruivNV, (GLenum target, GLuint index, GLuint * param), (target, index, param))
GEN_THUNKS(glGetProgramiv, (GLuint program, GLenum pname, GLint * params), (program, pname, params))
GEN_THUNKS(glGetProgramivARB, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetProgramivNV, (GLuint id, GLenum pname, GLint * params), (id, pname, params))
GEN_THUNKS(glGetQueryBufferObjecti64v, (GLuint id, GLuint buffer, GLenum pname, GLintptr offset), (id, buffer, pname, offset))
GEN_THUNKS(glGetQueryBufferObjectiv, (GLuint id, GLuint buffer, GLenum pname, GLintptr offset), (id, buffer, pname, offset))
GEN_THUNKS(glGetQueryBufferObjectui64v, (GLuint id, GLuint buffer, GLenum pname, GLintptr offset), (id, buffer, pname, offset))
GEN_THUNKS(glGetQueryBufferObjectuiv, (GLuint id, GLuint buffer, GLenum pname, GLintptr offset), (id, buffer, pname, offset))
GEN_THUNKS(glGetQueryIndexediv, (GLenum target, GLuint index, GLenum pname, GLint * params), (target, index, pname, params))
GEN_THUNKS(glGetQueryObjecti64v, (GLuint id, GLenum pname, GLint64 * params), (id, pname, params))
GEN_THUNKS(glGetQueryObjecti64vEXT, (GLuint id, GLenum pname, GLint64 * params), (id, pname, params))
GEN_THUNKS(glGetQueryObjectiv, (GLuint id, GLenum pname, GLint * params), (id, pname, params))
GEN_THUNKS(glGetQueryObjectivARB, (GLuint id, GLenum pname, GLint * params), (id, pname, params))
GEN_THUNKS(glGetQueryObjectivEXT, (GLuint id, GLenum pname, GLint * params), (id, pname, params))
GEN_THUNKS(glGetQueryObjectui64v, (GLuint id, GLenum pname, GLuint64 * params), (id, pname, params))
GEN_THUNKS(glGetQueryObjectui64vEXT, (GLuint id, GLenum pname, GLuint64 * params), (id, pname, params))
GEN_THUNKS(glGetQueryObjectuiv, (GLuint id, GLenum pname, GLuint * params), (id, pname, params))
GEN_THUNKS(glGetQueryObjectuivARB, (GLuint id, GLenum pname, GLuint * params), (id, pname, params))
GEN_THUNKS(glGetQueryObjectuivEXT, (GLuint id, GLenum pname, GLuint * params), (id, pname, params))
GEN_THUNKS(glGetQueryiv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetQueryivARB, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetQueryivEXT, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetRenderbufferParameteriv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetRenderbufferParameterivEXT, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetRenderbufferParameterivOES, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetSamplerParameterIiv, (GLuint sampler, GLenum pname, GLint * params), (sampler, pname, params))
GEN_THUNKS(glGetSamplerParameterIivEXT, (GLuint sampler, GLenum pname, GLint * params), (sampler, pname, params))
GEN_THUNKS(glGetSamplerParameterIivOES, (GLuint sampler, GLenum pname, GLint * params), (sampler, pname, params))
GEN_THUNKS(glGetSamplerParameterIuiv, (GLuint sampler, GLenum pname, GLuint * params), (sampler, pname, params))
GEN_THUNKS(glGetSamplerParameterIuivEXT, (GLuint sampler, GLenum pname, GLuint * params), (sampler, pname, params))
GEN_THUNKS(glGetSamplerParameterIuivOES, (GLuint sampler, GLenum pname, GLuint * params), (sampler, pname, params))
GEN_THUNKS(glGetSamplerParameterfv, (GLuint sampler, GLenum pname, GLfloat * params), (sampler, pname, params))
GEN_THUNKS(glGetSamplerParameteriv, (GLuint sampler, GLenum pname, GLint * params), (sampler, pname, params))
GEN_THUNKS(glGetSeparableFilter, (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span), (target, format, type, row, column, span))
GEN_THUNKS(glGetSeparableFilterEXT, (GLenum target, GLenum format, GLenum type, void * row, void * column, void * span), (target, format, type, row, column, span))
GEN_THUNKS(glGetShaderInfoLog, (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog), (shader, bufSize, length, infoLog))
GEN_THUNKS(glGetShaderPrecisionFormat, (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision), (shadertype, precisiontype, range, precision))
GEN_THUNKS(glGetShaderSource, (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source), (shader, bufSize, length, source))
GEN_THUNKS(glGetShaderSourceARB, (GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source), ((uintptr_t)obj, maxLength, length, source))
GEN_THUNKS(glGetShaderiv, (GLuint shader, GLenum pname, GLint * params), (shader, pname, params))
GEN_THUNKS(glGetSharpenTexFuncSGIS, (GLenum target, GLfloat * points), (target, points))
GEN_THUNKS_RET(GLushort, glGetStageIndexNV, (GLenum shadertype), (shadertype))
GEN_THUNKS_RET(const GLubyte *, glGetString, (GLenum name), (name))
GEN_THUNKS_RET(const GLubyte *, glGetStringi, (GLenum name, GLuint index), (name, index))
GEN_THUNKS_RET(GLuint, glGetSubroutineIndex, (GLuint program, GLenum shadertype, const GLchar * name), (program, shadertype, name))
GEN_THUNKS_RET(GLint, glGetSubroutineUniformLocation, (GLuint program, GLenum shadertype, const GLchar * name), (program, shadertype, name))
GEN_THUNKS(glGetSynciv, (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values), (sync, pname, bufSize, length, values))
GEN_THUNKS(glGetSyncivAPPLE, (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values), (sync, pname, bufSize, length, values))
GEN_THUNKS(glGetTexBumpParameterfvATI, (GLenum pname, GLfloat * param), (pname, param))
GEN_THUNKS(glGetTexBumpParameterivATI, (GLenum pname, GLint * param), (pname, param))
GEN_THUNKS(glGetTexEnvfv, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetTexEnviv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetTexEnvxv, (GLenum target, GLenum pname, GLfixed * params), (target, pname, params))
GEN_THUNKS(glGetTexEnvxvOES, (GLenum target, GLenum pname, GLfixed * params), (target, pname, params))
GEN_THUNKS(glGetTexFilterFuncSGIS, (GLenum target, GLenum filter, GLfloat * weights), (target, filter, weights))
GEN_THUNKS(glGetTexGendv, (GLenum coord, GLenum pname, GLdouble * params), (coord, pname, params))
GEN_THUNKS(glGetTexGenfv, (GLenum coord, GLenum pname, GLfloat * params), (coord, pname, params))
GEN_THUNKS(glGetTexGenfvOES, (GLenum coord, GLenum pname, GLfloat * params), (coord, pname, params))
GEN_THUNKS(glGetTexGeniv, (GLenum coord, GLenum pname, GLint * params), (coord, pname, params))
GEN_THUNKS(glGetTexGenivOES, (GLenum coord, GLenum pname, GLint * params), (coord, pname, params))
GEN_THUNKS(glGetTexGenxvOES, (GLenum coord, GLenum pname, GLfixed * params), (coord, pname, params))
GEN_THUNKS(glGetTexImage, (GLenum target, GLint level, GLenum format, GLenum type, void * pixels), (target, level, format, type, pixels))
GEN_THUNKS(glGetTexLevelParameterfv, (GLenum target, GLint level, GLenum pname, GLfloat * params), (target, level, pname, params))
GEN_THUNKS(glGetTexLevelParameteriv, (GLenum target, GLint level, GLenum pname, GLint * params), (target, level, pname, params))
GEN_THUNKS(glGetTexLevelParameterxvOES, (GLenum target, GLint level, GLenum pname, GLfixed * params), (target, level, pname, params))
GEN_THUNKS(glGetTexParameterIiv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetTexParameterIivEXT, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetTexParameterIivOES, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetTexParameterIuiv, (GLenum target, GLenum pname, GLuint * params), (target, pname, params))
GEN_THUNKS(glGetTexParameterIuivEXT, (GLenum target, GLenum pname, GLuint * params), (target, pname, params))
GEN_THUNKS(glGetTexParameterIuivOES, (GLenum target, GLenum pname, GLuint * params), (target, pname, params))
GEN_THUNKS(glGetTexParameterPointervAPPLE, (GLenum target, GLenum pname, void ** params), (target, pname, params))
GEN_THUNKS(glGetTexParameterfv, (GLenum target, GLenum pname, GLfloat * params), (target, pname, params))
GEN_THUNKS(glGetTexParameteriv, (GLenum target, GLenum pname, GLint * params), (target, pname, params))
GEN_THUNKS(glGetTexParameterxv, (GLenum target, GLenum pname, GLfixed * params), (target, pname, params))
GEN_THUNKS(glGetTexParameterxvOES, (GLenum target, GLenum pname, GLfixed * params), (target, pname, params))
GEN_THUNKS_RET(GLuint64, glGetTextureHandleARB, (GLuint texture), (texture))
GEN_THUNKS_RET(GLuint64, glGetTextureHandleNV, (GLuint texture), (texture))
GEN_THUNKS(glGetTextureImage, (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels), (texture, level, format, type, bufSize, pixels))
GEN_THUNKS(glGetTextureImageEXT, (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels), (texture, target, level, format, type, pixels))
GEN_THUNKS(glGetTextureLevelParameterfv, (GLuint texture, GLint level, GLenum pname, GLfloat * params), (texture, level, pname, params))
GEN_THUNKS(glGetTextureLevelParameterfvEXT, (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params), (texture, target, level, pname, params))
GEN_THUNKS(glGetTextureLevelParameteriv, (GLuint texture, GLint level, GLenum pname, GLint * params), (texture, level, pname, params))
GEN_THUNKS(glGetTextureLevelParameterivEXT, (GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params), (texture, target, level, pname, params))
GEN_THUNKS(glGetTextureParameterIiv, (GLuint texture, GLenum pname, GLint * params), (texture, pname, params))
GEN_THUNKS(glGetTextureParameterIivEXT, (GLuint texture, GLenum target, GLenum pname, GLint * params), (texture, target, pname, params))
GEN_THUNKS(glGetTextureParameterIuiv, (GLuint texture, GLenum pname, GLuint * params), (texture, pname, params))
GEN_THUNKS(glGetTextureParameterIuivEXT, (GLuint texture, GLenum target, GLenum pname, GLuint * params), (texture, target, pname, params))
GEN_THUNKS(glGetTextureParameterfv, (GLuint texture, GLenum pname, GLfloat * params), (texture, pname, params))
GEN_THUNKS(glGetTextureParameterfvEXT, (GLuint texture, GLenum target, GLenum pname, GLfloat * params), (texture, target, pname, params))
GEN_THUNKS(glGetTextureParameteriv, (GLuint texture, GLenum pname, GLint * params), (texture, pname, params))
GEN_THUNKS(glGetTextureParameterivEXT, (GLuint texture, GLenum target, GLenum pname, GLint * params), (texture, target, pname, params))
GEN_THUNKS_RET(GLuint64, glGetTextureSamplerHandleARB, (GLuint texture, GLuint sampler), (texture, sampler))
GEN_THUNKS_RET(GLuint64, glGetTextureSamplerHandleNV, (GLuint texture, GLuint sampler), (texture, sampler))
GEN_THUNKS(glGetTextureSubImage, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels), (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, bufSize, pixels))
GEN_THUNKS(glGetTrackMatrixivNV, (GLenum target, GLuint address, GLenum pname, GLint * params), (target, address, pname, params))
GEN_THUNKS(glGetTransformFeedbackVarying, (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name), (program, index, bufSize, length, size, type, name))
GEN_THUNKS(glGetTransformFeedbackVaryingEXT, (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name), (program, index, bufSize, length, size, type, name))
GEN_THUNKS(glGetTransformFeedbackVaryingNV, (GLuint program, GLuint index, GLint * location), (program, index, location))
GEN_THUNKS(glGetTransformFeedbacki64_v, (GLuint xfb, GLenum pname, GLuint index, GLint64 * param), (xfb, pname, index, param))
GEN_THUNKS(glGetTransformFeedbacki_v, (GLuint xfb, GLenum pname, GLuint index, GLint * param), (xfb, pname, index, param))
GEN_THUNKS(glGetTransformFeedbackiv, (GLuint xfb, GLenum pname, GLint * param), (xfb, pname, param))
GEN_THUNKS(glGetTranslatedShaderSourceANGLE, (GLuint shader, GLsizei bufsize, GLsizei * length, GLchar * source), (shader, bufsize, length, source))
GEN_THUNKS_RET(GLuint, glGetUniformBlockIndex, (GLuint program, const GLchar * uniformBlockName), (program, uniformBlockName))
GEN_THUNKS_RET(GLint, glGetUniformBufferSizeEXT, (GLuint program, GLint location), (program, location))
GEN_THUNKS(glGetUniformIndices, (GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices), (program, uniformCount, uniformNames, uniformIndices))
GEN_THUNKS_RET(GLint, glGetUniformLocation, (GLuint program, const GLchar * name), (program, name))
GEN_THUNKS_RET(GLint, glGetUniformLocationARB, (GLhandleARB programObj, const GLcharARB * name), ((uintptr_t)programObj, name))
GEN_THUNKS_RET(GLintptr, glGetUniformOffsetEXT, (GLuint program, GLint location), (program, location))
GEN_THUNKS(glGetUniformSubroutineuiv, (GLenum shadertype, GLint location, GLuint * params), (shadertype, location, params))
GEN_THUNKS(glGetUniformdv, (GLuint program, GLint location, GLdouble * params), (program, location, params))
GEN_THUNKS(glGetUniformfv, (GLuint program, GLint location, GLfloat * params), (program, location, params))
GEN_THUNKS(glGetUniformfvARB, (GLhandleARB programObj, GLint location, GLfloat * params), ((uintptr_t)programObj, location, params))
GEN_THUNKS(glGetUniformi64vNV, (GLuint program, GLint location, GLint64EXT * params), (program, location, params))
GEN_THUNKS(glGetUniformiv, (GLuint program, GLint location, GLint * params), (program, location, params))
GEN_THUNKS(glGetUniformivARB, (GLhandleARB programObj, GLint location, GLint * params), ((uintptr_t)programObj, location, params))
GEN_THUNKS(glGetUniformui64vNV, (GLuint program, GLint location, GLuint64EXT * params), (program, location, params))
GEN_THUNKS(glGetUniformuiv, (GLuint program, GLint location, GLuint * params), (program, location, params))
GEN_THUNKS(glGetUniformuivEXT, (GLuint program, GLint location, GLuint * params), (program, location, params))
GEN_THUNKS(glGetVariantArrayObjectfvATI, (GLuint id, GLenum pname, GLfloat * params), (id, pname, params))
GEN_THUNKS(glGetVariantArrayObjectivATI, (GLuint id, GLenum pname, GLint * params), (id, pname, params))
GEN_THUNKS(glGetVariantBooleanvEXT, (GLuint id, GLenum value, GLboolean * data), (id, value, data))
GEN_THUNKS(glGetVariantFloatvEXT, (GLuint id, GLenum value, GLfloat * data), (id, value, data))
GEN_THUNKS(glGetVariantIntegervEXT, (GLuint id, GLenum value, GLint * data), (id, value, data))
GEN_THUNKS(glGetVariantPointervEXT, (GLuint id, GLenum value, void ** data), (id, value, data))
GEN_THUNKS_RET(GLint, glGetVaryingLocationNV, (GLuint program, const GLchar * name), (program, name))
GEN_THUNKS(glGetVertexArrayIndexed64iv, (GLuint vaobj, GLuint index, GLenum pname, GLint64 * param), (vaobj, index, pname, param))
GEN_THUNKS(glGetVertexArrayIndexediv, (GLuint vaobj, GLuint index, GLenum pname, GLint * param), (vaobj, index, pname, param))
GEN_THUNKS(glGetVertexArrayIntegeri_vEXT, (GLuint vaobj, GLuint index, GLenum pname, GLint * param), (vaobj, index, pname, param))
GEN_THUNKS(glGetVertexArrayIntegervEXT, (GLuint vaobj, GLenum pname, GLint * param), (vaobj, pname, param))
GEN_THUNKS(glGetVertexArrayPointeri_vEXT, (GLuint vaobj, GLuint index, GLenum pname, void ** param), (vaobj, index, pname, param))
GEN_THUNKS(glGetVertexArrayPointervEXT, (GLuint vaobj, GLenum pname, void ** param), (vaobj, pname, param))
GEN_THUNKS(glGetVertexArrayiv, (GLuint vaobj, GLenum pname, GLint * param), (vaobj, pname, param))
GEN_THUNKS(glGetVertexAttribArrayObjectfvATI, (GLuint index, GLenum pname, GLfloat * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribArrayObjectivATI, (GLuint index, GLenum pname, GLint * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribIiv, (GLuint index, GLenum pname, GLint * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribIivEXT, (GLuint index, GLenum pname, GLint * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribIuiv, (GLuint index, GLenum pname, GLuint * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribIuivEXT, (GLuint index, GLenum pname, GLuint * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribLdv, (GLuint index, GLenum pname, GLdouble * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribLdvEXT, (GLuint index, GLenum pname, GLdouble * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribLi64vNV, (GLuint index, GLenum pname, GLint64EXT * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribLui64vARB, (GLuint index, GLenum pname, GLuint64EXT * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribLui64vNV, (GLuint index, GLenum pname, GLuint64EXT * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribPointerv, (GLuint index, GLenum pname, void ** pointer), (index, pname, pointer))
GEN_THUNKS(glGetVertexAttribPointervARB, (GLuint index, GLenum pname, void ** pointer), (index, pname, pointer))
GEN_THUNKS(glGetVertexAttribPointervNV, (GLuint index, GLenum pname, void ** pointer), (index, pname, pointer))
GEN_THUNKS(glGetVertexAttribdv, (GLuint index, GLenum pname, GLdouble * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribdvARB, (GLuint index, GLenum pname, GLdouble * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribdvNV, (GLuint index, GLenum pname, GLdouble * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribfv, (GLuint index, GLenum pname, GLfloat * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribfvARB, (GLuint index, GLenum pname, GLfloat * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribfvNV, (GLuint index, GLenum pname, GLfloat * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribiv, (GLuint index, GLenum pname, GLint * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribivARB, (GLuint index, GLenum pname, GLint * params), (index, pname, params))
GEN_THUNKS(glGetVertexAttribivNV, (GLuint index, GLenum pname, GLint * params), (index, pname, params))
GEN_THUNKS(glGetVideoCaptureStreamdvNV, (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params), (video_capture_slot, stream, pname, params))
GEN_THUNKS(glGetVideoCaptureStreamfvNV, (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params), (video_capture_slot, stream, pname, params))
GEN_THUNKS(glGetVideoCaptureStreamivNV, (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params), (video_capture_slot, stream, pname, params))
GEN_THUNKS(glGetVideoCaptureivNV, (GLuint video_capture_slot, GLenum pname, GLint * params), (video_capture_slot, pname, params))
GEN_THUNKS(glGetVideoi64vNV, (GLuint video_slot, GLenum pname, GLint64EXT * params), (video_slot, pname, params))
GEN_THUNKS(glGetVideoivNV, (GLuint video_slot, GLenum pname, GLint * params), (video_slot, pname, params))
GEN_THUNKS(glGetVideoui64vNV, (GLuint video_slot, GLenum pname, GLuint64EXT * params), (video_slot, pname, params))
GEN_THUNKS(glGetVideouivNV, (GLuint video_slot, GLenum pname, GLuint * params), (video_slot, pname, params))
GEN_THUNKS(glGetnColorTable, (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table), (target, format, type, bufSize, table))
GEN_THUNKS(glGetnColorTableARB, (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table), (target, format, type, bufSize, table))
GEN_THUNKS(glGetnCompressedTexImage, (GLenum target, GLint lod, GLsizei bufSize, void * pixels), (target, lod, bufSize, pixels))
GEN_THUNKS(glGetnCompressedTexImageARB, (GLenum target, GLint lod, GLsizei bufSize, void * img), (target, lod, bufSize, img))
GEN_THUNKS(glGetnConvolutionFilter, (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image), (target, format, type, bufSize, image))
GEN_THUNKS(glGetnConvolutionFilterARB, (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image), (target, format, type, bufSize, image))
GEN_THUNKS(glGetnHistogram, (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values), (target, reset, format, type, bufSize, values))
GEN_THUNKS(glGetnHistogramARB, (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values), (target, reset, format, type, bufSize, values))
GEN_THUNKS(glGetnMapdv, (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v), (target, query, bufSize, v))
GEN_THUNKS(glGetnMapdvARB, (GLenum target, GLenum query, GLsizei bufSize, GLdouble * v), (target, query, bufSize, v))
GEN_THUNKS(glGetnMapfv, (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v), (target, query, bufSize, v))
GEN_THUNKS(glGetnMapfvARB, (GLenum target, GLenum query, GLsizei bufSize, GLfloat * v), (target, query, bufSize, v))
GEN_THUNKS(glGetnMapiv, (GLenum target, GLenum query, GLsizei bufSize, GLint * v), (target, query, bufSize, v))
GEN_THUNKS(glGetnMapivARB, (GLenum target, GLenum query, GLsizei bufSize, GLint * v), (target, query, bufSize, v))
GEN_THUNKS(glGetnMinmax, (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values), (target, reset, format, type, bufSize, values))
GEN_THUNKS(glGetnMinmaxARB, (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values), (target, reset, format, type, bufSize, values))
GEN_THUNKS(glGetnPixelMapfv, (GLenum map, GLsizei bufSize, GLfloat * values), (map, bufSize, values))
GEN_THUNKS(glGetnPixelMapfvARB, (GLenum map, GLsizei bufSize, GLfloat * values), (map, bufSize, values))
GEN_THUNKS(glGetnPixelMapuiv, (GLenum map, GLsizei bufSize, GLuint * values), (map, bufSize, values))
GEN_THUNKS(glGetnPixelMapuivARB, (GLenum map, GLsizei bufSize, GLuint * values), (map, bufSize, values))
GEN_THUNKS(glGetnPixelMapusv, (GLenum map, GLsizei bufSize, GLushort * values), (map, bufSize, values))
GEN_THUNKS(glGetnPixelMapusvARB, (GLenum map, GLsizei bufSize, GLushort * values), (map, bufSize, values))
GEN_THUNKS(glGetnPolygonStipple, (GLsizei bufSize, GLubyte * pattern), (bufSize, pattern))
GEN_THUNKS(glGetnPolygonStippleARB, (GLsizei bufSize, GLubyte * pattern), (bufSize, pattern))
GEN_THUNKS(glGetnSeparableFilter, (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span), (target, format, type, rowBufSize, row, columnBufSize, column, span))
GEN_THUNKS(glGetnSeparableFilterARB, (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span), (target, format, type, rowBufSize, row, columnBufSize, column, span))
GEN_THUNKS(glGetnTexImage, (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels), (target, level, format, type, bufSize, pixels))
GEN_THUNKS(glGetnTexImageARB, (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img), (target, level, format, type, bufSize, img))
GEN_THUNKS(glGetnUniformdv, (GLuint program, GLint location, GLsizei bufSize, GLdouble * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformdvARB, (GLuint program, GLint location, GLsizei bufSize, GLdouble * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformfv, (GLuint program, GLint location, GLsizei bufSize, GLfloat * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformfvARB, (GLuint program, GLint location, GLsizei bufSize, GLfloat * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformfvEXT, (GLuint program, GLint location, GLsizei bufSize, GLfloat * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformfvKHR, (GLuint program, GLint location, GLsizei bufSize, GLfloat * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformiv, (GLuint program, GLint location, GLsizei bufSize, GLint * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformivARB, (GLuint program, GLint location, GLsizei bufSize, GLint * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformivEXT, (GLuint program, GLint location, GLsizei bufSize, GLint * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformivKHR, (GLuint program, GLint location, GLsizei bufSize, GLint * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformuiv, (GLuint program, GLint location, GLsizei bufSize, GLuint * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformuivARB, (GLuint program, GLint location, GLsizei bufSize, GLuint * params), (program, location, bufSize, params))
GEN_THUNKS(glGetnUniformuivKHR, (GLuint program, GLint location, GLsizei bufSize, GLuint * params), (program, location, bufSize, params))
GEN_THUNKS(glGlobalAlphaFactorbSUN, (GLbyte factor), (factor))
GEN_THUNKS(glGlobalAlphaFactordSUN, (GLdouble factor), (factor))
GEN_THUNKS(glGlobalAlphaFactorfSUN, (GLfloat factor), (factor))
GEN_THUNKS(glGlobalAlphaFactoriSUN, (GLint factor), (factor))
GEN_THUNKS(glGlobalAlphaFactorsSUN, (GLshort factor), (factor))
GEN_THUNKS(glGlobalAlphaFactorubSUN, (GLubyte factor), (factor))
GEN_THUNKS(glGlobalAlphaFactoruiSUN, (GLuint factor), (factor))
GEN_THUNKS(glGlobalAlphaFactorusSUN, (GLushort factor), (factor))
GEN_THUNKS(glHint, (GLenum target, GLenum mode), (target, mode))
GEN_THUNKS(glHintPGI, (GLenum target, GLint mode), (target, mode))
GEN_THUNKS(glHistogram, (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink), (target, width, internalformat, sink))
GEN_THUNKS(glHistogramEXT, (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink), (target, width, internalformat, sink))
GEN_THUNKS(glIglooInterfaceSGIX, (GLenum pname, const void * params), (pname, params))
GEN_THUNKS(glImageTransformParameterfHP, (GLenum target, GLenum pname, GLfloat param), (target, pname, param))
GEN_THUNKS(glImageTransformParameterfvHP, (GLenum target, GLenum pname, const GLfloat * params), (target, pname, params))
GEN_THUNKS(glImageTransformParameteriHP, (GLenum target, GLenum pname, GLint param), (target, pname, param))
GEN_THUNKS(glImageTransformParameterivHP, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS_RET(GLsync, glImportSyncEXT, (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags), (external_sync_type, external_sync, flags))
GEN_THUNKS(glIndexFormatNV, (GLenum type, GLsizei stride), (type, stride))
GEN_THUNKS(glIndexFuncEXT, (GLenum func, GLclampf ref), (func, ref))
GEN_THUNKS(glIndexMask, (GLuint mask), (mask))
GEN_THUNKS(glIndexMaterialEXT, (GLenum face, GLenum mode), (face, mode))
GEN_THUNKS(glIndexPointer, (GLenum type, GLsizei stride, const void * pointer), (type, stride, pointer))
GEN_THUNKS(glIndexPointerEXT, (GLenum type, GLsizei stride, GLsizei count, const void * pointer), (type, stride, count, pointer))
GEN_THUNKS(glIndexPointerListIBM, (GLenum type, GLint stride, const void ** pointer, GLint ptrstride), (type, stride, pointer, ptrstride))
GEN_THUNKS(glIndexd, (GLdouble c), (c))
GEN_THUNKS(glIndexdv, (const GLdouble * c), (c))
GEN_THUNKS(glIndexf, (GLfloat c), (c))
GEN_THUNKS(glIndexfv, (const GLfloat * c), (c))
GEN_THUNKS(glIndexi, (GLint c), (c))
GEN_THUNKS(glIndexiv, (const GLint * c), (c))
GEN_THUNKS(glIndexs, (GLshort c), (c))
GEN_THUNKS(glIndexsv, (const GLshort * c), (c))
GEN_THUNKS(glIndexub, (GLubyte c), (c))
GEN_THUNKS(glIndexubv, (const GLubyte * c), (c))
GEN_THUNKS(glIndexxOES, (GLfixed component), (component))
GEN_THUNKS(glIndexxvOES, (const GLfixed * component), (component))
GEN_THUNKS(glInitNames, (void), ())
GEN_THUNKS(glInsertComponentEXT, (GLuint res, GLuint src, GLuint num), (res, src, num))
GEN_THUNKS(glInsertEventMarkerEXT, (GLsizei length, const GLchar * marker), (length, marker))
GEN_THUNKS(glInstrumentsBufferSGIX, (GLsizei size, GLint * buffer), (size, buffer))
GEN_THUNKS(glInterleavedArrays, (GLenum format, GLsizei stride, const void * pointer), (format, stride, pointer))
GEN_THUNKS(glInterpolatePathsNV, (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight), (resultPath, pathA, pathB, weight))
GEN_THUNKS(glInvalidateBufferData, (GLuint buffer), (buffer))
GEN_THUNKS(glInvalidateBufferSubData, (GLuint buffer, GLintptr offset, GLsizeiptr length), (buffer, offset, length))
GEN_THUNKS(glInvalidateFramebuffer, (GLenum target, GLsizei numAttachments, const GLenum * attachments), (target, numAttachments, attachments))
GEN_THUNKS(glInvalidateNamedFramebufferData, (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments), (framebuffer, numAttachments, attachments))
GEN_THUNKS(glInvalidateNamedFramebufferSubData, (GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height), (framebuffer, numAttachments, attachments, x, y, width, height))
GEN_THUNKS(glInvalidateSubFramebuffer, (GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height), (target, numAttachments, attachments, x, y, width, height))
GEN_THUNKS(glInvalidateTexImage, (GLuint texture, GLint level), (texture, level))
GEN_THUNKS(glInvalidateTexSubImage, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth), (texture, level, xoffset, yoffset, zoffset, width, height, depth))
GEN_THUNKS_RET(GLboolean, glIsAsyncMarkerSGIX, (GLuint marker), (marker))
GEN_THUNKS_RET(GLboolean, glIsBuffer, (GLuint buffer), (buffer))
GEN_THUNKS_RET(GLboolean, glIsBufferARB, (GLuint buffer), (buffer))
GEN_THUNKS_RET(GLboolean, glIsBufferResidentNV, (GLenum target), (target))
GEN_THUNKS_RET(GLboolean, glIsCommandListNV, (GLuint list), (list))
GEN_THUNKS_RET(GLboolean, glIsEnabled, (GLenum cap), (cap))
GEN_THUNKS_RET(GLboolean, glIsEnabledIndexedEXT, (GLenum target, GLuint index), (target, index))
GEN_THUNKS_RET(GLboolean, glIsEnabledi, (GLenum target, GLuint index), (target, index))
GEN_THUNKS_RET(GLboolean, glIsEnablediEXT, (GLenum target, GLuint index), (target, index))
GEN_THUNKS_RET(GLboolean, glIsEnablediNV, (GLenum target, GLuint index), (target, index))
GEN_THUNKS_RET(GLboolean, glIsEnablediOES, (GLenum target, GLuint index), (target, index))
GEN_THUNKS_RET(GLboolean, glIsFenceAPPLE, (GLuint fence), (fence))
GEN_THUNKS_RET(GLboolean, glIsFenceNV, (GLuint fence), (fence))
GEN_THUNKS_RET(GLboolean, glIsFramebuffer, (GLuint framebuffer), (framebuffer))
GEN_THUNKS_RET(GLboolean, glIsFramebufferEXT, (GLuint framebuffer), (framebuffer))
GEN_THUNKS_RET(GLboolean, glIsFramebufferOES, (GLuint framebuffer), (framebuffer))
GEN_THUNKS_RET(GLboolean, glIsImageHandleResidentARB, (GLuint64 handle), (handle))
GEN_THUNKS_RET(GLboolean, glIsImageHandleResidentNV, (GLuint64 handle), (handle))
GEN_THUNKS_RET(GLboolean, glIsList, (GLuint list), (list))
GEN_THUNKS_RET(GLboolean, glIsNameAMD, (GLenum identifier, GLuint name), (identifier, name))
GEN_THUNKS_RET(GLboolean, glIsNamedBufferResidentNV, (GLuint buffer), (buffer))
GEN_THUNKS_RET(GLboolean, glIsNamedStringARB, (GLint namelen, const GLchar * name), (namelen, name))
GEN_THUNKS_RET(GLboolean, glIsObjectBufferATI, (GLuint buffer), (buffer))
GEN_THUNKS_RET(GLboolean, glIsOcclusionQueryNV, (GLuint id), (id))
GEN_THUNKS_RET(GLboolean, glIsPathNV, (GLuint path), (path))
GEN_THUNKS_RET(GLboolean, glIsPointInFillPathNV, (GLuint path, GLuint mask, GLfloat x, GLfloat y), (path, mask, x, y))
GEN_THUNKS_RET(GLboolean, glIsPointInStrokePathNV, (GLuint path, GLfloat x, GLfloat y), (path, x, y))
GEN_THUNKS_RET(GLboolean, glIsProgram, (GLuint program), (program))
GEN_THUNKS_RET(GLboolean, glIsProgramARB, (GLuint program), (program))
GEN_THUNKS_RET(GLboolean, glIsProgramNV, (GLuint id), (id))
GEN_THUNKS_RET(GLboolean, glIsProgramPipeline, (GLuint pipeline), (pipeline))
GEN_THUNKS_RET(GLboolean, glIsProgramPipelineEXT, (GLuint pipeline), (pipeline))
GEN_THUNKS_RET(GLboolean, glIsQuery, (GLuint id), (id))
GEN_THUNKS_RET(GLboolean, glIsQueryARB, (GLuint id), (id))
GEN_THUNKS_RET(GLboolean, glIsQueryEXT, (GLuint id), (id))
GEN_THUNKS_RET(GLboolean, glIsRenderbuffer, (GLuint renderbuffer), (renderbuffer))
GEN_THUNKS_RET(GLboolean, glIsRenderbufferEXT, (GLuint renderbuffer), (renderbuffer))
GEN_THUNKS_RET(GLboolean, glIsRenderbufferOES, (GLuint renderbuffer), (renderbuffer))
GEN_THUNKS_RET(GLboolean, glIsSampler, (GLuint sampler), (sampler))
GEN_THUNKS_RET(GLboolean, glIsShader, (GLuint shader), (shader))
GEN_THUNKS_RET(GLboolean, glIsStateNV, (GLuint state), (state))
GEN_THUNKS_RET(GLboolean, glIsSync, (GLsync sync), (sync))
GEN_THUNKS_RET(GLboolean, glIsSyncAPPLE, (GLsync sync), (sync))
GEN_THUNKS_RET(GLboolean, glIsTexture, (GLuint texture), (texture))
GEN_THUNKS_RET(GLboolean, glIsTextureEXT, (GLuint texture), (texture))
GEN_THUNKS_RET(GLboolean, glIsTextureHandleResidentARB, (GLuint64 handle), (handle))
GEN_THUNKS_RET(GLboolean, glIsTextureHandleResidentNV, (GLuint64 handle), (handle))
GEN_THUNKS_RET(GLboolean, glIsTransformFeedback, (GLuint id), (id))
GEN_THUNKS_RET(GLboolean, glIsTransformFeedbackNV, (GLuint id), (id))
GEN_THUNKS_RET(GLboolean, glIsVariantEnabledEXT, (GLuint id, GLenum cap), (id, cap))
GEN_THUNKS_RET(GLboolean, glIsVertexArray, (GLuint array), (array))
GEN_THUNKS_RET(GLboolean, glIsVertexArrayAPPLE, (GLuint array), (array))
GEN_THUNKS_RET(GLboolean, glIsVertexArrayOES, (GLuint array), (array))
GEN_THUNKS_RET(GLboolean, glIsVertexAttribEnabledAPPLE, (GLuint index, GLenum pname), (index, pname))
GEN_THUNKS(glLabelObjectEXT, (GLenum type, GLuint object, GLsizei length, const GLchar * label), (type, object, length, label))
GEN_THUNKS(glLightEnviSGIX, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glLightModelf, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glLightModelfv, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glLightModeli, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glLightModeliv, (GLenum pname, const GLint * params), (pname, params))
GEN_THUNKS(glLightModelx, (GLenum pname, GLfixed param), (pname, param))
GEN_THUNKS(glLightModelxOES, (GLenum pname, GLfixed param), (pname, param))
GEN_THUNKS(glLightModelxv, (GLenum pname, const GLfixed * param), (pname, param))
GEN_THUNKS(glLightModelxvOES, (GLenum pname, const GLfixed * param), (pname, param))
GEN_THUNKS(glLightf, (GLenum light, GLenum pname, GLfloat param), (light, pname, param))
GEN_THUNKS(glLightfv, (GLenum light, GLenum pname, const GLfloat * params), (light, pname, params))
GEN_THUNKS(glLighti, (GLenum light, GLenum pname, GLint param), (light, pname, param))
GEN_THUNKS(glLightiv, (GLenum light, GLenum pname, const GLint * params), (light, pname, params))
GEN_THUNKS(glLightx, (GLenum light, GLenum pname, GLfixed param), (light, pname, param))
GEN_THUNKS(glLightxOES, (GLenum light, GLenum pname, GLfixed param), (light, pname, param))
GEN_THUNKS(glLightxv, (GLenum light, GLenum pname, const GLfixed * params), (light, pname, params))
GEN_THUNKS(glLightxvOES, (GLenum light, GLenum pname, const GLfixed * params), (light, pname, params))
GEN_THUNKS(glLineStipple, (GLint factor, GLushort pattern), (factor, pattern))
GEN_THUNKS(glLineWidth, (GLfloat width), (width))
GEN_THUNKS(glLineWidthx, (GLfixed width), (width))
GEN_THUNKS(glLineWidthxOES, (GLfixed width), (width))
GEN_THUNKS(glLinkProgram, (GLuint program), (program))
GEN_THUNKS(glLinkProgramARB, (GLhandleARB programObj), ((uintptr_t)programObj))
GEN_THUNKS(glListBase, (GLuint base), (base))
GEN_THUNKS(glListDrawCommandsStatesClientNV, (GLuint list, GLuint segment, const void ** indirects, const GLsizei * sizes, const GLuint * states, const GLuint * fbos, GLuint count), (list, segment, indirects, sizes, states, fbos, count))
GEN_THUNKS(glListParameterfSGIX, (GLuint list, GLenum pname, GLfloat param), (list, pname, param))
GEN_THUNKS(glListParameterfvSGIX, (GLuint list, GLenum pname, const GLfloat * params), (list, pname, params))
GEN_THUNKS(glListParameteriSGIX, (GLuint list, GLenum pname, GLint param), (list, pname, param))
GEN_THUNKS(glListParameterivSGIX, (GLuint list, GLenum pname, const GLint * params), (list, pname, params))
GEN_THUNKS(glLoadIdentity, (void), ())
GEN_THUNKS(glLoadIdentityDeformationMapSGIX, (GLbitfield mask), (mask))
GEN_THUNKS(glLoadMatrixd, (const GLdouble * m), (m))
GEN_THUNKS(glLoadMatrixf, (const GLfloat * m), (m))
GEN_THUNKS(glLoadMatrixx, (const GLfixed * m), (m))
GEN_THUNKS(glLoadMatrixxOES, (const GLfixed * m), (m))
GEN_THUNKS(glLoadName, (GLuint name), (name))
GEN_THUNKS(glLoadPaletteFromModelViewMatrixOES, (void), ())
GEN_THUNKS(glLoadProgramNV, (GLenum target, GLuint id, GLsizei len, const GLubyte * program), (target, id, len, program))
GEN_THUNKS(glLoadTransposeMatrixd, (const GLdouble * m), (m))
GEN_THUNKS(glLoadTransposeMatrixdARB, (const GLdouble * m), (m))
GEN_THUNKS(glLoadTransposeMatrixf, (const GLfloat * m), (m))
GEN_THUNKS(glLoadTransposeMatrixfARB, (const GLfloat * m), (m))
GEN_THUNKS(glLoadTransposeMatrixxOES, (const GLfixed * m), (m))
GEN_THUNKS(glLockArraysEXT, (GLint first, GLsizei count), (first, count))
GEN_THUNKS(glLogicOp, (GLenum opcode), (opcode))
GEN_THUNKS(glMakeBufferNonResidentNV, (GLenum target), (target))
GEN_THUNKS(glMakeBufferResidentNV, (GLenum target, GLenum access), (target, access))
GEN_THUNKS(glMakeImageHandleNonResidentARB, (GLuint64 handle), (handle))
GEN_THUNKS(glMakeImageHandleNonResidentNV, (GLuint64 handle), (handle))
GEN_THUNKS(glMakeImageHandleResidentARB, (GLuint64 handle, GLenum access), (handle, access))
GEN_THUNKS(glMakeImageHandleResidentNV, (GLuint64 handle, GLenum access), (handle, access))
GEN_THUNKS(glMakeNamedBufferNonResidentNV, (GLuint buffer), (buffer))
GEN_THUNKS(glMakeNamedBufferResidentNV, (GLuint buffer, GLenum access), (buffer, access))
GEN_THUNKS(glMakeTextureHandleNonResidentARB, (GLuint64 handle), (handle))
GEN_THUNKS(glMakeTextureHandleNonResidentNV, (GLuint64 handle), (handle))
GEN_THUNKS(glMakeTextureHandleResidentARB, (GLuint64 handle), (handle))
GEN_THUNKS(glMakeTextureHandleResidentNV, (GLuint64 handle), (handle))
GEN_THUNKS(glMap1d, (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points), (target, u1, u2, stride, order, points))
GEN_THUNKS(glMap1f, (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points), (target, u1, u2, stride, order, points))
GEN_THUNKS(glMap1xOES, (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points), (target, u1, u2, stride, order, points))
GEN_THUNKS(glMap2d, (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points), (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points))
GEN_THUNKS(glMap2f, (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points), (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points))
GEN_THUNKS(glMap2xOES, (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points), (target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points))
GEN_THUNKS_RET(void *, glMapBuffer, (GLenum target, GLenum access), (target, access))
GEN_THUNKS_RET(void *, glMapBufferARB, (GLenum target, GLenum access), (target, access))
GEN_THUNKS_RET(void *, glMapBufferOES, (GLenum target, GLenum access), (target, access))
GEN_THUNKS_RET(void *, glMapBufferRange, (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access), (target, offset, length, access))
GEN_THUNKS_RET(void *, glMapBufferRangeEXT, (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access), (target, offset, length, access))
GEN_THUNKS(glMapControlPointsNV, (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points), (target, index, type, ustride, vstride, uorder, vorder, packed, points))
GEN_THUNKS(glMapGrid1d, (GLint un, GLdouble u1, GLdouble u2), (un, u1, u2))
GEN_THUNKS(glMapGrid1f, (GLint un, GLfloat u1, GLfloat u2), (un, u1, u2))
GEN_THUNKS(glMapGrid1xOES, (GLint n, GLfixed u1, GLfixed u2), (n, u1, u2))
GEN_THUNKS(glMapGrid2d, (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2), (un, u1, u2, vn, v1, v2))
GEN_THUNKS(glMapGrid2f, (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2), (un, u1, u2, vn, v1, v2))
GEN_THUNKS(glMapGrid2xOES, (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2), (n, u1, u2, v1, v2))
GEN_THUNKS_RET(void *, glMapNamedBuffer, (GLuint buffer, GLenum access), (buffer, access))
GEN_THUNKS_RET(void *, glMapNamedBufferEXT, (GLuint buffer, GLenum access), (buffer, access))
GEN_THUNKS_RET(void *, glMapNamedBufferRange, (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access), (buffer, offset, length, access))
GEN_THUNKS_RET(void *, glMapNamedBufferRangeEXT, (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access), (buffer, offset, length, access))
GEN_THUNKS_RET(void *, glMapObjectBufferATI, (GLuint buffer), (buffer))
GEN_THUNKS(glMapParameterfvNV, (GLenum target, GLenum pname, const GLfloat * params), (target, pname, params))
GEN_THUNKS(glMapParameterivNV, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS_RET(void *, glMapTexture2DINTEL, (GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout), (texture, level, access, stride, layout))
GEN_THUNKS(glMapVertexAttrib1dAPPLE, (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points), (index, size, u1, u2, stride, order, points))
GEN_THUNKS(glMapVertexAttrib1fAPPLE, (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points), (index, size, u1, u2, stride, order, points))
GEN_THUNKS(glMapVertexAttrib2dAPPLE, (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points), (index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points))
GEN_THUNKS(glMapVertexAttrib2fAPPLE, (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points), (index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points))
GEN_THUNKS(glMaterialf, (GLenum face, GLenum pname, GLfloat param), (face, pname, param))
GEN_THUNKS(glMaterialfv, (GLenum face, GLenum pname, const GLfloat * params), (face, pname, params))
GEN_THUNKS(glMateriali, (GLenum face, GLenum pname, GLint param), (face, pname, param))
GEN_THUNKS(glMaterialiv, (GLenum face, GLenum pname, const GLint * params), (face, pname, params))
GEN_THUNKS(glMaterialx, (GLenum face, GLenum pname, GLfixed param), (face, pname, param))
GEN_THUNKS(glMaterialxOES, (GLenum face, GLenum pname, GLfixed param), (face, pname, param))
GEN_THUNKS(glMaterialxv, (GLenum face, GLenum pname, const GLfixed * param), (face, pname, param))
GEN_THUNKS(glMaterialxvOES, (GLenum face, GLenum pname, const GLfixed * param), (face, pname, param))
GEN_THUNKS(glMatrixFrustumEXT, (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar), (mode, left, right, bottom, top, zNear, zFar))
GEN_THUNKS(glMatrixIndexPointerARB, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glMatrixIndexPointerOES, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glMatrixIndexubvARB, (GLint size, const GLubyte * indices), (size, indices))
GEN_THUNKS(glMatrixIndexuivARB, (GLint size, const GLuint * indices), (size, indices))
GEN_THUNKS(glMatrixIndexusvARB, (GLint size, const GLushort * indices), (size, indices))
GEN_THUNKS(glMatrixLoad3x2fNV, (GLenum matrixMode, const GLfloat * m), (matrixMode, m))
GEN_THUNKS(glMatrixLoad3x3fNV, (GLenum matrixMode, const GLfloat * m), (matrixMode, m))
GEN_THUNKS(glMatrixLoadIdentityEXT, (GLenum mode), (mode))
GEN_THUNKS(glMatrixLoadTranspose3x3fNV, (GLenum matrixMode, const GLfloat * m), (matrixMode, m))
GEN_THUNKS(glMatrixLoadTransposedEXT, (GLenum mode, const GLdouble * m), (mode, m))
GEN_THUNKS(glMatrixLoadTransposefEXT, (GLenum mode, const GLfloat * m), (mode, m))
GEN_THUNKS(glMatrixLoaddEXT, (GLenum mode, const GLdouble * m), (mode, m))
GEN_THUNKS(glMatrixLoadfEXT, (GLenum mode, const GLfloat * m), (mode, m))
GEN_THUNKS(glMatrixMode, (GLenum mode), (mode))
GEN_THUNKS(glMatrixMult3x2fNV, (GLenum matrixMode, const GLfloat * m), (matrixMode, m))
GEN_THUNKS(glMatrixMult3x3fNV, (GLenum matrixMode, const GLfloat * m), (matrixMode, m))
GEN_THUNKS(glMatrixMultTranspose3x3fNV, (GLenum matrixMode, const GLfloat * m), (matrixMode, m))
GEN_THUNKS(glMatrixMultTransposedEXT, (GLenum mode, const GLdouble * m), (mode, m))
GEN_THUNKS(glMatrixMultTransposefEXT, (GLenum mode, const GLfloat * m), (mode, m))
GEN_THUNKS(glMatrixMultdEXT, (GLenum mode, const GLdouble * m), (mode, m))
GEN_THUNKS(glMatrixMultfEXT, (GLenum mode, const GLfloat * m), (mode, m))
GEN_THUNKS(glMatrixOrthoEXT, (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar), (mode, left, right, bottom, top, zNear, zFar))
GEN_THUNKS(glMatrixPopEXT, (GLenum mode), (mode))
GEN_THUNKS(glMatrixPushEXT, (GLenum mode), (mode))
GEN_THUNKS(glMatrixRotatedEXT, (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z), (mode, angle, x, y, z))
GEN_THUNKS(glMatrixRotatefEXT, (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z), (mode, angle, x, y, z))
GEN_THUNKS(glMatrixScaledEXT, (GLenum mode, GLdouble x, GLdouble y, GLdouble z), (mode, x, y, z))
GEN_THUNKS(glMatrixScalefEXT, (GLenum mode, GLfloat x, GLfloat y, GLfloat z), (mode, x, y, z))
GEN_THUNKS(glMatrixTranslatedEXT, (GLenum mode, GLdouble x, GLdouble y, GLdouble z), (mode, x, y, z))
GEN_THUNKS(glMatrixTranslatefEXT, (GLenum mode, GLfloat x, GLfloat y, GLfloat z), (mode, x, y, z))
GEN_THUNKS(glMemoryBarrier, (GLbitfield barriers), (barriers))
GEN_THUNKS(glMemoryBarrierByRegion, (GLbitfield barriers), (barriers))
GEN_THUNKS(glMemoryBarrierEXT, (GLbitfield barriers), (barriers))
GEN_THUNKS(glMinSampleShading, (GLfloat value), (value))
GEN_THUNKS(glMinSampleShadingARB, (GLfloat value), (value))
GEN_THUNKS(glMinSampleShadingOES, (GLfloat value), (value))
GEN_THUNKS(glMinmax, (GLenum target, GLenum internalformat, GLboolean sink), (target, internalformat, sink))
GEN_THUNKS(glMinmaxEXT, (GLenum target, GLenum internalformat, GLboolean sink), (target, internalformat, sink))
GEN_THUNKS(glMultMatrixd, (const GLdouble * m), (m))
GEN_THUNKS(glMultMatrixf, (const GLfloat * m), (m))
GEN_THUNKS(glMultMatrixx, (const GLfixed * m), (m))
GEN_THUNKS(glMultMatrixxOES, (const GLfixed * m), (m))
GEN_THUNKS(glMultTransposeMatrixd, (const GLdouble * m), (m))
GEN_THUNKS(glMultTransposeMatrixdARB, (const GLdouble * m), (m))
GEN_THUNKS(glMultTransposeMatrixf, (const GLfloat * m), (m))
GEN_THUNKS(glMultTransposeMatrixfARB, (const GLfloat * m), (m))
GEN_THUNKS(glMultTransposeMatrixxOES, (const GLfixed * m), (m))
GEN_THUNKS(glMultiDrawArrays, (GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount), (mode, first, count, drawcount))
GEN_THUNKS(glMultiDrawArraysEXT, (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount), (mode, first, count, primcount))
GEN_THUNKS(glMultiDrawArraysIndirect, (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride), (mode, indirect, drawcount, stride))
GEN_THUNKS(glMultiDrawArraysIndirectAMD, (GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride), (mode, indirect, primcount, stride))
GEN_THUNKS(glMultiDrawArraysIndirectBindlessCountNV, (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount), (mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount))
GEN_THUNKS(glMultiDrawArraysIndirectBindlessNV, (GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount), (mode, indirect, drawCount, stride, vertexBufferCount))
GEN_THUNKS(glMultiDrawArraysIndirectCountARB, (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride), (mode, indirect, drawcount, maxdrawcount, stride))
GEN_THUNKS(glMultiDrawArraysIndirectEXT, (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride), (mode, indirect, drawcount, stride))
GEN_THUNKS(glMultiDrawElementArrayAPPLE, (GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount), (mode, first, count, primcount))
GEN_THUNKS(glMultiDrawElements, (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount), (mode, count, type, indices, drawcount))
GEN_THUNKS(glMultiDrawElementsBaseVertex, (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex), (mode, count, type, indices, drawcount, basevertex))
GEN_THUNKS(glMultiDrawElementsBaseVertexEXT, (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex), (mode, count, type, indices, primcount, basevertex))
GEN_THUNKS(glMultiDrawElementsBaseVertexOES, (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, const GLint * basevertex), (mode, count, type, indices, primcount, basevertex))
GEN_THUNKS(glMultiDrawElementsEXT, (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount), (mode, count, type, indices, primcount))
GEN_THUNKS(glMultiDrawElementsIndirect, (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride), (mode, type, indirect, drawcount, stride))
GEN_THUNKS(glMultiDrawElementsIndirectAMD, (GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride), (mode, type, indirect, primcount, stride))
GEN_THUNKS(glMultiDrawElementsIndirectBindlessCountNV, (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount), (mode, type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount))
GEN_THUNKS(glMultiDrawElementsIndirectBindlessNV, (GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount), (mode, type, indirect, drawCount, stride, vertexBufferCount))
GEN_THUNKS(glMultiDrawElementsIndirectCountARB, (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride), (mode, type, indirect, drawcount, maxdrawcount, stride))
GEN_THUNKS(glMultiDrawElementsIndirectEXT, (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride), (mode, type, indirect, drawcount, stride))
GEN_THUNKS(glMultiDrawRangeElementArrayAPPLE, (GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount), (mode, start, end, first, count, primcount))
GEN_THUNKS(glMultiModeDrawArraysIBM, (const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride), (mode, first, count, primcount, modestride))
GEN_THUNKS(glMultiModeDrawElementsIBM, (const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride), (mode, count, type, indices, primcount, modestride))
GEN_THUNKS(glMultiTexBufferEXT, (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer), (texunit, target, internalformat, buffer))
GEN_THUNKS(glMultiTexCoord1bOES, (GLenum texture, GLbyte s), (texture, s))
GEN_THUNKS(glMultiTexCoord1bvOES, (GLenum texture, const GLbyte * coords), (texture, coords))
GEN_THUNKS(glMultiTexCoord1d, (GLenum target, GLdouble s), (target, s))
GEN_THUNKS(glMultiTexCoord1dARB, (GLenum target, GLdouble s), (target, s))
GEN_THUNKS(glMultiTexCoord1dv, (GLenum target, const GLdouble * v), (target, v))
GEN_THUNKS(glMultiTexCoord1dvARB, (GLenum target, const GLdouble * v), (target, v))
GEN_THUNKS(glMultiTexCoord1f, (GLenum target, GLfloat s), (target, s))
GEN_THUNKS(glMultiTexCoord1fARB, (GLenum target, GLfloat s), (target, s))
GEN_THUNKS(glMultiTexCoord1fv, (GLenum target, const GLfloat * v), (target, v))
GEN_THUNKS(glMultiTexCoord1fvARB, (GLenum target, const GLfloat * v), (target, v))
GEN_THUNKS(glMultiTexCoord1hNV, (GLenum target, GLhalfNV s), (target, s))
GEN_THUNKS(glMultiTexCoord1hvNV, (GLenum target, const GLhalfNV * v), (target, v))
GEN_THUNKS(glMultiTexCoord1i, (GLenum target, GLint s), (target, s))
GEN_THUNKS(glMultiTexCoord1iARB, (GLenum target, GLint s), (target, s))
GEN_THUNKS(glMultiTexCoord1iv, (GLenum target, const GLint * v), (target, v))
GEN_THUNKS(glMultiTexCoord1ivARB, (GLenum target, const GLint * v), (target, v))
GEN_THUNKS(glMultiTexCoord1s, (GLenum target, GLshort s), (target, s))
GEN_THUNKS(glMultiTexCoord1sARB, (GLenum target, GLshort s), (target, s))
GEN_THUNKS(glMultiTexCoord1sv, (GLenum target, const GLshort * v), (target, v))
GEN_THUNKS(glMultiTexCoord1svARB, (GLenum target, const GLshort * v), (target, v))
GEN_THUNKS(glMultiTexCoord1xOES, (GLenum texture, GLfixed s), (texture, s))
GEN_THUNKS(glMultiTexCoord1xvOES, (GLenum texture, const GLfixed * coords), (texture, coords))
GEN_THUNKS(glMultiTexCoord2bOES, (GLenum texture, GLbyte s, GLbyte t), (texture, s, t))
GEN_THUNKS(glMultiTexCoord2bvOES, (GLenum texture, const GLbyte * coords), (texture, coords))
GEN_THUNKS(glMultiTexCoord2d, (GLenum target, GLdouble s, GLdouble t), (target, s, t))
GEN_THUNKS(glMultiTexCoord2dARB, (GLenum target, GLdouble s, GLdouble t), (target, s, t))
GEN_THUNKS(glMultiTexCoord2dv, (GLenum target, const GLdouble * v), (target, v))
GEN_THUNKS(glMultiTexCoord2dvARB, (GLenum target, const GLdouble * v), (target, v))
GEN_THUNKS(glMultiTexCoord2f, (GLenum target, GLfloat s, GLfloat t), (target, s, t))
GEN_THUNKS(glMultiTexCoord2fARB, (GLenum target, GLfloat s, GLfloat t), (target, s, t))
GEN_THUNKS(glMultiTexCoord2fv, (GLenum target, const GLfloat * v), (target, v))
GEN_THUNKS(glMultiTexCoord2fvARB, (GLenum target, const GLfloat * v), (target, v))
GEN_THUNKS(glMultiTexCoord2hNV, (GLenum target, GLhalfNV s, GLhalfNV t), (target, s, t))
GEN_THUNKS(glMultiTexCoord2hvNV, (GLenum target, const GLhalfNV * v), (target, v))
GEN_THUNKS(glMultiTexCoord2i, (GLenum target, GLint s, GLint t), (target, s, t))
GEN_THUNKS(glMultiTexCoord2iARB, (GLenum target, GLint s, GLint t), (target, s, t))
GEN_THUNKS(glMultiTexCoord2iv, (GLenum target, const GLint * v), (target, v))
GEN_THUNKS(glMultiTexCoord2ivARB, (GLenum target, const GLint * v), (target, v))
GEN_THUNKS(glMultiTexCoord2s, (GLenum target, GLshort s, GLshort t), (target, s, t))
GEN_THUNKS(glMultiTexCoord2sARB, (GLenum target, GLshort s, GLshort t), (target, s, t))
GEN_THUNKS(glMultiTexCoord2sv, (GLenum target, const GLshort * v), (target, v))
GEN_THUNKS(glMultiTexCoord2svARB, (GLenum target, const GLshort * v), (target, v))
GEN_THUNKS(glMultiTexCoord2xOES, (GLenum texture, GLfixed s, GLfixed t), (texture, s, t))
GEN_THUNKS(glMultiTexCoord2xvOES, (GLenum texture, const GLfixed * coords), (texture, coords))
GEN_THUNKS(glMultiTexCoord3bOES, (GLenum texture, GLbyte s, GLbyte t, GLbyte r), (texture, s, t, r))
GEN_THUNKS(glMultiTexCoord3bvOES, (GLenum texture, const GLbyte * coords), (texture, coords))
GEN_THUNKS(glMultiTexCoord3d, (GLenum target, GLdouble s, GLdouble t, GLdouble r), (target, s, t, r))
GEN_THUNKS(glMultiTexCoord3dARB, (GLenum target, GLdouble s, GLdouble t, GLdouble r), (target, s, t, r))
GEN_THUNKS(glMultiTexCoord3dv, (GLenum target, const GLdouble * v), (target, v))
GEN_THUNKS(glMultiTexCoord3dvARB, (GLenum target, const GLdouble * v), (target, v))
GEN_THUNKS(glMultiTexCoord3f, (GLenum target, GLfloat s, GLfloat t, GLfloat r), (target, s, t, r))
GEN_THUNKS(glMultiTexCoord3fARB, (GLenum target, GLfloat s, GLfloat t, GLfloat r), (target, s, t, r))
GEN_THUNKS(glMultiTexCoord3fv, (GLenum target, const GLfloat * v), (target, v))
GEN_THUNKS(glMultiTexCoord3fvARB, (GLenum target, const GLfloat * v), (target, v))
GEN_THUNKS(glMultiTexCoord3hNV, (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r), (target, s, t, r))
GEN_THUNKS(glMultiTexCoord3hvNV, (GLenum target, const GLhalfNV * v), (target, v))
GEN_THUNKS(glMultiTexCoord3i, (GLenum target, GLint s, GLint t, GLint r), (target, s, t, r))
GEN_THUNKS(glMultiTexCoord3iARB, (GLenum target, GLint s, GLint t, GLint r), (target, s, t, r))
GEN_THUNKS(glMultiTexCoord3iv, (GLenum target, const GLint * v), (target, v))
GEN_THUNKS(glMultiTexCoord3ivARB, (GLenum target, const GLint * v), (target, v))
GEN_THUNKS(glMultiTexCoord3s, (GLenum target, GLshort s, GLshort t, GLshort r), (target, s, t, r))
GEN_THUNKS(glMultiTexCoord3sARB, (GLenum target, GLshort s, GLshort t, GLshort r), (target, s, t, r))
GEN_THUNKS(glMultiTexCoord3sv, (GLenum target, const GLshort * v), (target, v))
GEN_THUNKS(glMultiTexCoord3svARB, (GLenum target, const GLshort * v), (target, v))
GEN_THUNKS(glMultiTexCoord3xOES, (GLenum texture, GLfixed s, GLfixed t, GLfixed r), (texture, s, t, r))
GEN_THUNKS(glMultiTexCoord3xvOES, (GLenum texture, const GLfixed * coords), (texture, coords))
GEN_THUNKS(glMultiTexCoord4bOES, (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q), (texture, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4bvOES, (GLenum texture, const GLbyte * coords), (texture, coords))
GEN_THUNKS(glMultiTexCoord4d, (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q), (target, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4dARB, (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q), (target, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4dv, (GLenum target, const GLdouble * v), (target, v))
GEN_THUNKS(glMultiTexCoord4dvARB, (GLenum target, const GLdouble * v), (target, v))
GEN_THUNKS(glMultiTexCoord4f, (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q), (target, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4fARB, (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q), (target, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4fv, (GLenum target, const GLfloat * v), (target, v))
GEN_THUNKS(glMultiTexCoord4fvARB, (GLenum target, const GLfloat * v), (target, v))
GEN_THUNKS(glMultiTexCoord4hNV, (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q), (target, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4hvNV, (GLenum target, const GLhalfNV * v), (target, v))
GEN_THUNKS(glMultiTexCoord4i, (GLenum target, GLint s, GLint t, GLint r, GLint q), (target, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4iARB, (GLenum target, GLint s, GLint t, GLint r, GLint q), (target, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4iv, (GLenum target, const GLint * v), (target, v))
GEN_THUNKS(glMultiTexCoord4ivARB, (GLenum target, const GLint * v), (target, v))
GEN_THUNKS(glMultiTexCoord4s, (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q), (target, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4sARB, (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q), (target, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4sv, (GLenum target, const GLshort * v), (target, v))
GEN_THUNKS(glMultiTexCoord4svARB, (GLenum target, const GLshort * v), (target, v))
GEN_THUNKS(glMultiTexCoord4x, (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q), (texture, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4xOES, (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q), (texture, s, t, r, q))
GEN_THUNKS(glMultiTexCoord4xvOES, (GLenum texture, const GLfixed * coords), (texture, coords))
GEN_THUNKS(glMultiTexCoordP1ui, (GLenum texture, GLenum type, GLuint coords), (texture, type, coords))
GEN_THUNKS(glMultiTexCoordP1uiv, (GLenum texture, GLenum type, const GLuint * coords), (texture, type, coords))
GEN_THUNKS(glMultiTexCoordP2ui, (GLenum texture, GLenum type, GLuint coords), (texture, type, coords))
GEN_THUNKS(glMultiTexCoordP2uiv, (GLenum texture, GLenum type, const GLuint * coords), (texture, type, coords))
GEN_THUNKS(glMultiTexCoordP3ui, (GLenum texture, GLenum type, GLuint coords), (texture, type, coords))
GEN_THUNKS(glMultiTexCoordP3uiv, (GLenum texture, GLenum type, const GLuint * coords), (texture, type, coords))
GEN_THUNKS(glMultiTexCoordP4ui, (GLenum texture, GLenum type, GLuint coords), (texture, type, coords))
GEN_THUNKS(glMultiTexCoordP4uiv, (GLenum texture, GLenum type, const GLuint * coords), (texture, type, coords))
GEN_THUNKS(glMultiTexCoordPointerEXT, (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer), (texunit, size, type, stride, pointer))
GEN_THUNKS(glMultiTexEnvfEXT, (GLenum texunit, GLenum target, GLenum pname, GLfloat param), (texunit, target, pname, param))
GEN_THUNKS(glMultiTexEnvfvEXT, (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params), (texunit, target, pname, params))
GEN_THUNKS(glMultiTexEnviEXT, (GLenum texunit, GLenum target, GLenum pname, GLint param), (texunit, target, pname, param))
GEN_THUNKS(glMultiTexEnvivEXT, (GLenum texunit, GLenum target, GLenum pname, const GLint * params), (texunit, target, pname, params))
GEN_THUNKS(glMultiTexGendEXT, (GLenum texunit, GLenum coord, GLenum pname, GLdouble param), (texunit, coord, pname, param))
GEN_THUNKS(glMultiTexGendvEXT, (GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params), (texunit, coord, pname, params))
GEN_THUNKS(glMultiTexGenfEXT, (GLenum texunit, GLenum coord, GLenum pname, GLfloat param), (texunit, coord, pname, param))
GEN_THUNKS(glMultiTexGenfvEXT, (GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params), (texunit, coord, pname, params))
GEN_THUNKS(glMultiTexGeniEXT, (GLenum texunit, GLenum coord, GLenum pname, GLint param), (texunit, coord, pname, param))
GEN_THUNKS(glMultiTexGenivEXT, (GLenum texunit, GLenum coord, GLenum pname, const GLint * params), (texunit, coord, pname, params))
GEN_THUNKS(glMultiTexImage1DEXT, (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels), (texunit, target, level, internalformat, width, border, format, type, pixels))
GEN_THUNKS(glMultiTexImage2DEXT, (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels), (texunit, target, level, internalformat, width, height, border, format, type, pixels))
GEN_THUNKS(glMultiTexImage3DEXT, (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels), (texunit, target, level, internalformat, width, height, depth, border, format, type, pixels))
GEN_THUNKS(glMultiTexParameterIivEXT, (GLenum texunit, GLenum target, GLenum pname, const GLint * params), (texunit, target, pname, params))
GEN_THUNKS(glMultiTexParameterIuivEXT, (GLenum texunit, GLenum target, GLenum pname, const GLuint * params), (texunit, target, pname, params))
GEN_THUNKS(glMultiTexParameterfEXT, (GLenum texunit, GLenum target, GLenum pname, GLfloat param), (texunit, target, pname, param))
GEN_THUNKS(glMultiTexParameterfvEXT, (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params), (texunit, target, pname, params))
GEN_THUNKS(glMultiTexParameteriEXT, (GLenum texunit, GLenum target, GLenum pname, GLint param), (texunit, target, pname, param))
GEN_THUNKS(glMultiTexParameterivEXT, (GLenum texunit, GLenum target, GLenum pname, const GLint * params), (texunit, target, pname, params))
GEN_THUNKS(glMultiTexRenderbufferEXT, (GLenum texunit, GLenum target, GLuint renderbuffer), (texunit, target, renderbuffer))
GEN_THUNKS(glMultiTexSubImage1DEXT, (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels), (texunit, target, level, xoffset, width, format, type, pixels))
GEN_THUNKS(glMultiTexSubImage2DEXT, (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels), (texunit, target, level, xoffset, yoffset, width, height, format, type, pixels))
GEN_THUNKS(glMultiTexSubImage3DEXT, (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels), (texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels))
GEN_THUNKS(glNamedBufferData, (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage), (buffer, size, data, usage))
GEN_THUNKS(glNamedBufferDataEXT, (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage), (buffer, size, data, usage))
GEN_THUNKS(glNamedBufferPageCommitmentARB, (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit), (buffer, offset, size, commit))
GEN_THUNKS(glNamedBufferPageCommitmentEXT, (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit), (buffer, offset, size, commit))
GEN_THUNKS(glNamedBufferStorage, (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags), (buffer, size, data, flags))
GEN_THUNKS(glNamedBufferStorageEXT, (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags), (buffer, size, data, flags))
GEN_THUNKS(glNamedBufferSubData, (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data), (buffer, offset, size, data))
GEN_THUNKS(glNamedBufferSubDataEXT, (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data), (buffer, offset, size, data))
GEN_THUNKS(glNamedCopyBufferSubDataEXT, (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size), (readBuffer, writeBuffer, readOffset, writeOffset, size))
GEN_THUNKS(glNamedFramebufferDrawBuffer, (GLuint framebuffer, GLenum buf), (framebuffer, buf))
GEN_THUNKS(glNamedFramebufferDrawBuffers, (GLuint framebuffer, GLsizei n, const GLenum * bufs), (framebuffer, n, bufs))
GEN_THUNKS(glNamedFramebufferParameteri, (GLuint framebuffer, GLenum pname, GLint param), (framebuffer, pname, param))
GEN_THUNKS(glNamedFramebufferParameteriEXT, (GLuint framebuffer, GLenum pname, GLint param), (framebuffer, pname, param))
GEN_THUNKS(glNamedFramebufferReadBuffer, (GLuint framebuffer, GLenum src), (framebuffer, src))
GEN_THUNKS(glNamedFramebufferRenderbuffer, (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer), (framebuffer, attachment, renderbuffertarget, renderbuffer))
GEN_THUNKS(glNamedFramebufferRenderbufferEXT, (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer), (framebuffer, attachment, renderbuffertarget, renderbuffer))
GEN_THUNKS(glNamedFramebufferSampleLocationsfvNV, (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat * v), (framebuffer, start, count, v))
GEN_THUNKS(glNamedFramebufferTexture, (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level), (framebuffer, attachment, texture, level))
GEN_THUNKS(glNamedFramebufferTexture1DEXT, (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level), (framebuffer, attachment, textarget, texture, level))
GEN_THUNKS(glNamedFramebufferTexture2DEXT, (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level), (framebuffer, attachment, textarget, texture, level))
GEN_THUNKS(glNamedFramebufferTexture3DEXT, (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset), (framebuffer, attachment, textarget, texture, level, zoffset))
GEN_THUNKS(glNamedFramebufferTextureEXT, (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level), (framebuffer, attachment, texture, level))
GEN_THUNKS(glNamedFramebufferTextureFaceEXT, (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face), (framebuffer, attachment, texture, level, face))
GEN_THUNKS(glNamedFramebufferTextureLayer, (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer), (framebuffer, attachment, texture, level, layer))
GEN_THUNKS(glNamedFramebufferTextureLayerEXT, (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer), (framebuffer, attachment, texture, level, layer))
GEN_THUNKS(glNamedProgramLocalParameter4dEXT, (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (program, target, index, x, y, z, w))
GEN_THUNKS(glNamedProgramLocalParameter4dvEXT, (GLuint program, GLenum target, GLuint index, const GLdouble * params), (program, target, index, params))
GEN_THUNKS(glNamedProgramLocalParameter4fEXT, (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (program, target, index, x, y, z, w))
GEN_THUNKS(glNamedProgramLocalParameter4fvEXT, (GLuint program, GLenum target, GLuint index, const GLfloat * params), (program, target, index, params))
GEN_THUNKS(glNamedProgramLocalParameterI4iEXT, (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w), (program, target, index, x, y, z, w))
GEN_THUNKS(glNamedProgramLocalParameterI4ivEXT, (GLuint program, GLenum target, GLuint index, const GLint * params), (program, target, index, params))
GEN_THUNKS(glNamedProgramLocalParameterI4uiEXT, (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w), (program, target, index, x, y, z, w))
GEN_THUNKS(glNamedProgramLocalParameterI4uivEXT, (GLuint program, GLenum target, GLuint index, const GLuint * params), (program, target, index, params))
GEN_THUNKS(glNamedProgramLocalParameters4fvEXT, (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params), (program, target, index, count, params))
GEN_THUNKS(glNamedProgramLocalParametersI4ivEXT, (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params), (program, target, index, count, params))
GEN_THUNKS(glNamedProgramLocalParametersI4uivEXT, (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params), (program, target, index, count, params))
GEN_THUNKS(glNamedProgramStringEXT, (GLuint program, GLenum target, GLenum format, GLsizei len, const void * string), (program, target, format, len, string))
GEN_THUNKS(glNamedRenderbufferStorage, (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height), (renderbuffer, internalformat, width, height))
GEN_THUNKS(glNamedRenderbufferStorageEXT, (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height), (renderbuffer, internalformat, width, height))
GEN_THUNKS(glNamedRenderbufferStorageMultisample, (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height), (renderbuffer, samples, internalformat, width, height))
GEN_THUNKS(glNamedRenderbufferStorageMultisampleCoverageEXT, (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height), (renderbuffer, coverageSamples, colorSamples, internalformat, width, height))
GEN_THUNKS(glNamedRenderbufferStorageMultisampleEXT, (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height), (renderbuffer, samples, internalformat, width, height))
GEN_THUNKS(glNamedStringARB, (GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string), (type, namelen, name, stringlen, string))
GEN_THUNKS(glNewList, (GLuint list, GLenum mode), (list, mode))
GEN_THUNKS_RET(GLuint, glNewObjectBufferATI, (GLsizei size, const void * pointer, GLenum usage), (size, pointer, usage))
GEN_THUNKS(glNormal3b, (GLbyte nx, GLbyte ny, GLbyte nz), (nx, ny, nz))
GEN_THUNKS(glNormal3bv, (const GLbyte * v), (v))
GEN_THUNKS(glNormal3d, (GLdouble nx, GLdouble ny, GLdouble nz), (nx, ny, nz))
GEN_THUNKS(glNormal3dv, (const GLdouble * v), (v))
GEN_THUNKS(glNormal3f, (GLfloat nx, GLfloat ny, GLfloat nz), (nx, ny, nz))
GEN_THUNKS(glNormal3fVertex3fSUN, (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z), (nx, ny, nz, x, y, z))
GEN_THUNKS(glNormal3fVertex3fvSUN, (const GLfloat * n, const GLfloat * v), (n, v))
GEN_THUNKS(glNormal3fv, (const GLfloat * v), (v))
GEN_THUNKS(glNormal3hNV, (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz), (nx, ny, nz))
GEN_THUNKS(glNormal3hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glNormal3i, (GLint nx, GLint ny, GLint nz), (nx, ny, nz))
GEN_THUNKS(glNormal3iv, (const GLint * v), (v))
GEN_THUNKS(glNormal3s, (GLshort nx, GLshort ny, GLshort nz), (nx, ny, nz))
GEN_THUNKS(glNormal3sv, (const GLshort * v), (v))
GEN_THUNKS(glNormal3x, (GLfixed nx, GLfixed ny, GLfixed nz), (nx, ny, nz))
GEN_THUNKS(glNormal3xOES, (GLfixed nx, GLfixed ny, GLfixed nz), (nx, ny, nz))
GEN_THUNKS(glNormal3xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glNormalFormatNV, (GLenum type, GLsizei stride), (type, stride))
GEN_THUNKS(glNormalP3ui, (GLenum type, GLuint coords), (type, coords))
GEN_THUNKS(glNormalP3uiv, (GLenum type, const GLuint * coords), (type, coords))
GEN_THUNKS(glNormalPointer, (GLenum type, GLsizei stride, const void * pointer), (type, stride, pointer))
GEN_THUNKS(glNormalPointerEXT, (GLenum type, GLsizei stride, GLsizei count, const void * pointer), (type, stride, count, pointer))
GEN_THUNKS(glNormalPointerListIBM, (GLenum type, GLint stride, const void ** pointer, GLint ptrstride), (type, stride, pointer, ptrstride))
GEN_THUNKS(glNormalPointervINTEL, (GLenum type, const void ** pointer), (type, pointer))
GEN_THUNKS(glNormalStream3bATI, (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz), (stream, nx, ny, nz))
GEN_THUNKS(glNormalStream3bvATI, (GLenum stream, const GLbyte * coords), (stream, coords))
GEN_THUNKS(glNormalStream3dATI, (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz), (stream, nx, ny, nz))
GEN_THUNKS(glNormalStream3dvATI, (GLenum stream, const GLdouble * coords), (stream, coords))
GEN_THUNKS(glNormalStream3fATI, (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz), (stream, nx, ny, nz))
GEN_THUNKS(glNormalStream3fvATI, (GLenum stream, const GLfloat * coords), (stream, coords))
GEN_THUNKS(glNormalStream3iATI, (GLenum stream, GLint nx, GLint ny, GLint nz), (stream, nx, ny, nz))
GEN_THUNKS(glNormalStream3ivATI, (GLenum stream, const GLint * coords), (stream, coords))
GEN_THUNKS(glNormalStream3sATI, (GLenum stream, GLshort nx, GLshort ny, GLshort nz), (stream, nx, ny, nz))
GEN_THUNKS(glNormalStream3svATI, (GLenum stream, const GLshort * coords), (stream, coords))
GEN_THUNKS(glObjectLabel, (GLenum identifier, GLuint name, GLsizei length, const GLchar * label), (identifier, name, length, label))
GEN_THUNKS(glObjectLabelKHR, (GLenum identifier, GLuint name, GLsizei length, const GLchar * label), (identifier, name, length, label))
GEN_THUNKS(glObjectPtrLabel, (const void * ptr, GLsizei length, const GLchar * label), (ptr, length, label))
GEN_THUNKS(glObjectPtrLabelKHR, (const void * ptr, GLsizei length, const GLchar * label), (ptr, length, label))
GEN_THUNKS_RET(GLenum, glObjectPurgeableAPPLE, (GLenum objectType, GLuint name, GLenum option), (objectType, name, option))
GEN_THUNKS_RET(GLenum, glObjectUnpurgeableAPPLE, (GLenum objectType, GLuint name, GLenum option), (objectType, name, option))
GEN_THUNKS(glOrtho, (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar), (left, right, bottom, top, zNear, zFar))
GEN_THUNKS(glOrthof, (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f), (l, r, b, t, n, f))
GEN_THUNKS(glOrthofOES, (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f), (l, r, b, t, n, f))
GEN_THUNKS(glOrthox, (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f), (l, r, b, t, n, f))
GEN_THUNKS(glOrthoxOES, (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f), (l, r, b, t, n, f))
GEN_THUNKS(glPNTrianglesfATI, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glPNTrianglesiATI, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glPassTexCoordATI, (GLuint dst, GLuint coord, GLenum swizzle), (dst, coord, swizzle))
GEN_THUNKS(glPassThrough, (GLfloat token), (token))
GEN_THUNKS(glPassThroughxOES, (GLfixed token), (token))
GEN_THUNKS(glPatchParameterfv, (GLenum pname, const GLfloat * values), (pname, values))
GEN_THUNKS(glPatchParameteri, (GLenum pname, GLint value), (pname, value))
GEN_THUNKS(glPatchParameteriEXT, (GLenum pname, GLint value), (pname, value))
GEN_THUNKS(glPatchParameteriOES, (GLenum pname, GLint value), (pname, value))
GEN_THUNKS(glPathColorGenNV, (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat * coeffs), (color, genMode, colorFormat, coeffs))
GEN_THUNKS(glPathCommandsNV, (GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords), (path, numCommands, commands, numCoords, coordType, coords))
GEN_THUNKS(glPathCoordsNV, (GLuint path, GLsizei numCoords, GLenum coordType, const void * coords), (path, numCoords, coordType, coords))
GEN_THUNKS(glPathCoverDepthFuncNV, (GLenum func), (func))
GEN_THUNKS(glPathDashArrayNV, (GLuint path, GLsizei dashCount, const GLfloat * dashArray), (path, dashCount, dashArray))
GEN_THUNKS(glPathFogGenNV, (GLenum genMode), (genMode))
GEN_THUNKS_RET(GLenum, glPathGlyphIndexArrayNV, (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale), (firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale))
GEN_THUNKS_RET(GLenum, glPathGlyphIndexRangeNV, (GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount), (fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount))
GEN_THUNKS(glPathGlyphRangeNV, (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale), (firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale))
GEN_THUNKS(glPathGlyphsNV, (GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale), (firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale))
GEN_THUNKS_RET(GLenum, glPathMemoryGlyphIndexArrayNV, (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void * fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale), (firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale))
GEN_THUNKS(glPathParameterfNV, (GLuint path, GLenum pname, GLfloat value), (path, pname, value))
GEN_THUNKS(glPathParameterfvNV, (GLuint path, GLenum pname, const GLfloat * value), (path, pname, value))
GEN_THUNKS(glPathParameteriNV, (GLuint path, GLenum pname, GLint value), (path, pname, value))
GEN_THUNKS(glPathParameterivNV, (GLuint path, GLenum pname, const GLint * value), (path, pname, value))
GEN_THUNKS(glPathStencilDepthOffsetNV, (GLfloat factor, GLfloat units), (factor, units))
GEN_THUNKS(glPathStencilFuncNV, (GLenum func, GLint ref, GLuint mask), (func, ref, mask))
GEN_THUNKS(glPathStringNV, (GLuint path, GLenum format, GLsizei length, const void * pathString), (path, format, length, pathString))
GEN_THUNKS(glPathSubCommandsNV, (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords), (path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords))
GEN_THUNKS(glPathSubCoordsNV, (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords), (path, coordStart, numCoords, coordType, coords))
GEN_THUNKS(glPathTexGenNV, (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat * coeffs), (texCoordSet, genMode, components, coeffs))
GEN_THUNKS(glPauseTransformFeedback, (void), ())
GEN_THUNKS(glPauseTransformFeedbackNV, (void), ())
GEN_THUNKS(glPixelDataRangeNV, (GLenum target, GLsizei length, const void * pointer), (target, length, pointer))
GEN_THUNKS(glPixelMapfv, (GLenum map, GLsizei mapsize, const GLfloat * values), (map, mapsize, values))
GEN_THUNKS(glPixelMapuiv, (GLenum map, GLsizei mapsize, const GLuint * values), (map, mapsize, values))
GEN_THUNKS(glPixelMapusv, (GLenum map, GLsizei mapsize, const GLushort * values), (map, mapsize, values))
GEN_THUNKS(glPixelMapx, (GLenum map, GLint size, const GLfixed * values), (map, size, values))
GEN_THUNKS(glPixelStoref, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glPixelStorei, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glPixelStorex, (GLenum pname, GLfixed param), (pname, param))
GEN_THUNKS(glPixelTexGenParameterfSGIS, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glPixelTexGenParameterfvSGIS, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glPixelTexGenParameteriSGIS, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glPixelTexGenParameterivSGIS, (GLenum pname, const GLint * params), (pname, params))
GEN_THUNKS(glPixelTexGenSGIX, (GLenum mode), (mode))
GEN_THUNKS(glPixelTransferf, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glPixelTransferi, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glPixelTransferxOES, (GLenum pname, GLfixed param), (pname, param))
GEN_THUNKS(glPixelTransformParameterfEXT, (GLenum target, GLenum pname, GLfloat param), (target, pname, param))
GEN_THUNKS(glPixelTransformParameterfvEXT, (GLenum target, GLenum pname, const GLfloat * params), (target, pname, params))
GEN_THUNKS(glPixelTransformParameteriEXT, (GLenum target, GLenum pname, GLint param), (target, pname, param))
GEN_THUNKS(glPixelTransformParameterivEXT, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glPixelZoom, (GLfloat xfactor, GLfloat yfactor), (xfactor, yfactor))
GEN_THUNKS(glPixelZoomxOES, (GLfixed xfactor, GLfixed yfactor), (xfactor, yfactor))
GEN_THUNKS_RET(GLboolean, glPointAlongPathNV, (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY), (path, startSegment, numSegments, distance, x, y, tangentX, tangentY))
GEN_THUNKS(glPointParameterf, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glPointParameterfARB, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glPointParameterfEXT, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glPointParameterfSGIS, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glPointParameterfv, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glPointParameterfvARB, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glPointParameterfvEXT, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glPointParameterfvSGIS, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glPointParameteri, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glPointParameteriNV, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glPointParameteriv, (GLenum pname, const GLint * params), (pname, params))
GEN_THUNKS(glPointParameterivNV, (GLenum pname, const GLint * params), (pname, params))
GEN_THUNKS(glPointParameterx, (GLenum pname, GLfixed param), (pname, param))
GEN_THUNKS(glPointParameterxOES, (GLenum pname, GLfixed param), (pname, param))
GEN_THUNKS(glPointParameterxv, (GLenum pname, const GLfixed * params), (pname, params))
GEN_THUNKS(glPointParameterxvOES, (GLenum pname, const GLfixed * params), (pname, params))
GEN_THUNKS(glPointSize, (GLfloat size), (size))
GEN_THUNKS(glPointSizePointerOES, (GLenum type, GLsizei stride, const void * pointer), (type, stride, pointer))
GEN_THUNKS(glPointSizex, (GLfixed size), (size))
GEN_THUNKS(glPointSizexOES, (GLfixed size), (size))
GEN_THUNKS_RET(GLint, glPollAsyncSGIX, (GLuint * markerp), (markerp))
GEN_THUNKS_RET(GLint, glPollInstrumentsSGIX, (GLint * marker_p), (marker_p))
GEN_THUNKS(glPolygonMode, (GLenum face, GLenum mode), (face, mode))
GEN_THUNKS(glPolygonModeNV, (GLenum face, GLenum mode), (face, mode))
GEN_THUNKS(glPolygonOffset, (GLfloat factor, GLfloat units), (factor, units))
GEN_THUNKS(glPolygonOffsetClampEXT, (GLfloat factor, GLfloat units, GLfloat clamp), (factor, units, clamp))
GEN_THUNKS(glPolygonOffsetEXT, (GLfloat factor, GLfloat bias), (factor, bias))
GEN_THUNKS(glPolygonOffsetx, (GLfixed factor, GLfixed units), (factor, units))
GEN_THUNKS(glPolygonOffsetxOES, (GLfixed factor, GLfixed units), (factor, units))
GEN_THUNKS(glPolygonStipple, (const GLubyte * mask), (mask))
GEN_THUNKS(glPopAttrib, (void), ())
GEN_THUNKS(glPopClientAttrib, (void), ())
GEN_THUNKS(glPopDebugGroup, (void), ())
GEN_THUNKS(glPopDebugGroupKHR, (void), ())
GEN_THUNKS(glPopGroupMarkerEXT, (void), ())
GEN_THUNKS(glPopMatrix, (void), ())
GEN_THUNKS(glPopName, (void), ())
GEN_THUNKS(glPresentFrameDualFillNV, (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3), (video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3))
GEN_THUNKS(glPresentFrameKeyedNV, (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1), (video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1))
GEN_THUNKS(glPrimitiveBoundingBoxEXT, (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW), (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW))
GEN_THUNKS(glPrimitiveBoundingBoxOES, (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW), (minX, minY, minZ, minW, maxX, maxY, maxZ, maxW))
GEN_THUNKS(glPrimitiveRestartIndex, (GLuint index), (index))
GEN_THUNKS(glPrimitiveRestartIndexNV, (GLuint index), (index))
GEN_THUNKS(glPrimitiveRestartNV, (void), ())
GEN_THUNKS(glPrioritizeTextures, (GLsizei n, const GLuint * textures, const GLfloat * priorities), (n, textures, priorities))
GEN_THUNKS(glPrioritizeTexturesEXT, (GLsizei n, const GLuint * textures, const GLclampf * priorities), (n, textures, priorities))
GEN_THUNKS(glPrioritizeTexturesxOES, (GLsizei n, const GLuint * textures, const GLfixed * priorities), (n, textures, priorities))
GEN_THUNKS(glProgramBinary, (GLuint program, GLenum binaryFormat, const void * binary, GLsizei length), (program, binaryFormat, binary, length))
GEN_THUNKS(glProgramBinaryOES, (GLuint program, GLenum binaryFormat, const void * binary, GLint length), (program, binaryFormat, binary, length))
GEN_THUNKS(glProgramBufferParametersIivNV, (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params), (target, bindingIndex, wordIndex, count, params))
GEN_THUNKS(glProgramBufferParametersIuivNV, (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params), (target, bindingIndex, wordIndex, count, params))
GEN_THUNKS(glProgramBufferParametersfvNV, (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params), (target, bindingIndex, wordIndex, count, params))
GEN_THUNKS(glProgramEnvParameter4dARB, (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramEnvParameter4dvARB, (GLenum target, GLuint index, const GLdouble * params), (target, index, params))
GEN_THUNKS(glProgramEnvParameter4fARB, (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramEnvParameter4fvARB, (GLenum target, GLuint index, const GLfloat * params), (target, index, params))
GEN_THUNKS(glProgramEnvParameterI4iNV, (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramEnvParameterI4ivNV, (GLenum target, GLuint index, const GLint * params), (target, index, params))
GEN_THUNKS(glProgramEnvParameterI4uiNV, (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramEnvParameterI4uivNV, (GLenum target, GLuint index, const GLuint * params), (target, index, params))
GEN_THUNKS(glProgramEnvParameters4fvEXT, (GLenum target, GLuint index, GLsizei count, const GLfloat * params), (target, index, count, params))
GEN_THUNKS(glProgramEnvParametersI4ivNV, (GLenum target, GLuint index, GLsizei count, const GLint * params), (target, index, count, params))
GEN_THUNKS(glProgramEnvParametersI4uivNV, (GLenum target, GLuint index, GLsizei count, const GLuint * params), (target, index, count, params))
GEN_THUNKS(glProgramLocalParameter4dARB, (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramLocalParameter4dvARB, (GLenum target, GLuint index, const GLdouble * params), (target, index, params))
GEN_THUNKS(glProgramLocalParameter4fARB, (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramLocalParameter4fvARB, (GLenum target, GLuint index, const GLfloat * params), (target, index, params))
GEN_THUNKS(glProgramLocalParameterI4iNV, (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramLocalParameterI4ivNV, (GLenum target, GLuint index, const GLint * params), (target, index, params))
GEN_THUNKS(glProgramLocalParameterI4uiNV, (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramLocalParameterI4uivNV, (GLenum target, GLuint index, const GLuint * params), (target, index, params))
GEN_THUNKS(glProgramLocalParameters4fvEXT, (GLenum target, GLuint index, GLsizei count, const GLfloat * params), (target, index, count, params))
GEN_THUNKS(glProgramLocalParametersI4ivNV, (GLenum target, GLuint index, GLsizei count, const GLint * params), (target, index, count, params))
GEN_THUNKS(glProgramLocalParametersI4uivNV, (GLenum target, GLuint index, GLsizei count, const GLuint * params), (target, index, count, params))
GEN_THUNKS(glProgramNamedParameter4dNV, (GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (id, len, name, x, y, z, w))
GEN_THUNKS(glProgramNamedParameter4dvNV, (GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v), (id, len, name, v))
GEN_THUNKS(glProgramNamedParameter4fNV, (GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (id, len, name, x, y, z, w))
GEN_THUNKS(glProgramNamedParameter4fvNV, (GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v), (id, len, name, v))
GEN_THUNKS(glProgramParameter4dNV, (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramParameter4dvNV, (GLenum target, GLuint index, const GLdouble * v), (target, index, v))
GEN_THUNKS(glProgramParameter4fNV, (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (target, index, x, y, z, w))
GEN_THUNKS(glProgramParameter4fvNV, (GLenum target, GLuint index, const GLfloat * v), (target, index, v))
GEN_THUNKS(glProgramParameteri, (GLuint program, GLenum pname, GLint value), (program, pname, value))
GEN_THUNKS(glProgramParameteriARB, (GLuint program, GLenum pname, GLint value), (program, pname, value))
GEN_THUNKS(glProgramParameteriEXT, (GLuint program, GLenum pname, GLint value), (program, pname, value))
GEN_THUNKS(glProgramParameters4dvNV, (GLenum target, GLuint index, GLsizei count, const GLdouble * v), (target, index, count, v))
GEN_THUNKS(glProgramParameters4fvNV, (GLenum target, GLuint index, GLsizei count, const GLfloat * v), (target, index, count, v))
GEN_THUNKS(glProgramPathFragmentInputGenNV, (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat * coeffs), (program, location, genMode, components, coeffs))
GEN_THUNKS(glProgramStringARB, (GLenum target, GLenum format, GLsizei len, const void * string), (target, format, len, string))
GEN_THUNKS(glProgramSubroutineParametersuivNV, (GLenum target, GLsizei count, const GLuint * params), (target, count, params))
GEN_THUNKS(glProgramUniform1d, (GLuint program, GLint location, GLdouble v0), (program, location, v0))
GEN_THUNKS(glProgramUniform1dEXT, (GLuint program, GLint location, GLdouble x), (program, location, x))
GEN_THUNKS(glProgramUniform1dv, (GLuint program, GLint location, GLsizei count, const GLdouble * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform1dvEXT, (GLuint program, GLint location, GLsizei count, const GLdouble * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform1f, (GLuint program, GLint location, GLfloat v0), (program, location, v0))
GEN_THUNKS(glProgramUniform1fEXT, (GLuint program, GLint location, GLfloat v0), (program, location, v0))
GEN_THUNKS(glProgramUniform1fv, (GLuint program, GLint location, GLsizei count, const GLfloat * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform1fvEXT, (GLuint program, GLint location, GLsizei count, const GLfloat * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform1i, (GLuint program, GLint location, GLint v0), (program, location, v0))
GEN_THUNKS(glProgramUniform1i64NV, (GLuint program, GLint location, GLint64EXT x), (program, location, x))
GEN_THUNKS(glProgramUniform1i64vNV, (GLuint program, GLint location, GLsizei count, const GLint64EXT * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform1iEXT, (GLuint program, GLint location, GLint v0), (program, location, v0))
GEN_THUNKS(glProgramUniform1iv, (GLuint program, GLint location, GLsizei count, const GLint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform1ivEXT, (GLuint program, GLint location, GLsizei count, const GLint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform1ui, (GLuint program, GLint location, GLuint v0), (program, location, v0))
GEN_THUNKS(glProgramUniform1ui64NV, (GLuint program, GLint location, GLuint64EXT x), (program, location, x))
GEN_THUNKS(glProgramUniform1ui64vNV, (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform1uiEXT, (GLuint program, GLint location, GLuint v0), (program, location, v0))
GEN_THUNKS(glProgramUniform1uiv, (GLuint program, GLint location, GLsizei count, const GLuint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform1uivEXT, (GLuint program, GLint location, GLsizei count, const GLuint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2d, (GLuint program, GLint location, GLdouble v0, GLdouble v1), (program, location, v0, v1))
GEN_THUNKS(glProgramUniform2dEXT, (GLuint program, GLint location, GLdouble x, GLdouble y), (program, location, x, y))
GEN_THUNKS(glProgramUniform2dv, (GLuint program, GLint location, GLsizei count, const GLdouble * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2dvEXT, (GLuint program, GLint location, GLsizei count, const GLdouble * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2f, (GLuint program, GLint location, GLfloat v0, GLfloat v1), (program, location, v0, v1))
GEN_THUNKS(glProgramUniform2fEXT, (GLuint program, GLint location, GLfloat v0, GLfloat v1), (program, location, v0, v1))
GEN_THUNKS(glProgramUniform2fv, (GLuint program, GLint location, GLsizei count, const GLfloat * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2fvEXT, (GLuint program, GLint location, GLsizei count, const GLfloat * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2i, (GLuint program, GLint location, GLint v0, GLint v1), (program, location, v0, v1))
GEN_THUNKS(glProgramUniform2i64NV, (GLuint program, GLint location, GLint64EXT x, GLint64EXT y), (program, location, x, y))
GEN_THUNKS(glProgramUniform2i64vNV, (GLuint program, GLint location, GLsizei count, const GLint64EXT * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2iEXT, (GLuint program, GLint location, GLint v0, GLint v1), (program, location, v0, v1))
GEN_THUNKS(glProgramUniform2iv, (GLuint program, GLint location, GLsizei count, const GLint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2ivEXT, (GLuint program, GLint location, GLsizei count, const GLint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2ui, (GLuint program, GLint location, GLuint v0, GLuint v1), (program, location, v0, v1))
GEN_THUNKS(glProgramUniform2ui64NV, (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y), (program, location, x, y))
GEN_THUNKS(glProgramUniform2ui64vNV, (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2uiEXT, (GLuint program, GLint location, GLuint v0, GLuint v1), (program, location, v0, v1))
GEN_THUNKS(glProgramUniform2uiv, (GLuint program, GLint location, GLsizei count, const GLuint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform2uivEXT, (GLuint program, GLint location, GLsizei count, const GLuint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3d, (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2), (program, location, v0, v1, v2))
GEN_THUNKS(glProgramUniform3dEXT, (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z), (program, location, x, y, z))
GEN_THUNKS(glProgramUniform3dv, (GLuint program, GLint location, GLsizei count, const GLdouble * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3dvEXT, (GLuint program, GLint location, GLsizei count, const GLdouble * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3f, (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2), (program, location, v0, v1, v2))
GEN_THUNKS(glProgramUniform3fEXT, (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2), (program, location, v0, v1, v2))
GEN_THUNKS(glProgramUniform3fv, (GLuint program, GLint location, GLsizei count, const GLfloat * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3fvEXT, (GLuint program, GLint location, GLsizei count, const GLfloat * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3i, (GLuint program, GLint location, GLint v0, GLint v1, GLint v2), (program, location, v0, v1, v2))
GEN_THUNKS(glProgramUniform3i64NV, (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z), (program, location, x, y, z))
GEN_THUNKS(glProgramUniform3i64vNV, (GLuint program, GLint location, GLsizei count, const GLint64EXT * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3iEXT, (GLuint program, GLint location, GLint v0, GLint v1, GLint v2), (program, location, v0, v1, v2))
GEN_THUNKS(glProgramUniform3iv, (GLuint program, GLint location, GLsizei count, const GLint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3ivEXT, (GLuint program, GLint location, GLsizei count, const GLint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3ui, (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2), (program, location, v0, v1, v2))
GEN_THUNKS(glProgramUniform3ui64NV, (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z), (program, location, x, y, z))
GEN_THUNKS(glProgramUniform3ui64vNV, (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3uiEXT, (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2), (program, location, v0, v1, v2))
GEN_THUNKS(glProgramUniform3uiv, (GLuint program, GLint location, GLsizei count, const GLuint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform3uivEXT, (GLuint program, GLint location, GLsizei count, const GLuint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4d, (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3), (program, location, v0, v1, v2, v3))
GEN_THUNKS(glProgramUniform4dEXT, (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (program, location, x, y, z, w))
GEN_THUNKS(glProgramUniform4dv, (GLuint program, GLint location, GLsizei count, const GLdouble * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4dvEXT, (GLuint program, GLint location, GLsizei count, const GLdouble * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4f, (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3), (program, location, v0, v1, v2, v3))
GEN_THUNKS(glProgramUniform4fEXT, (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3), (program, location, v0, v1, v2, v3))
GEN_THUNKS(glProgramUniform4fv, (GLuint program, GLint location, GLsizei count, const GLfloat * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4fvEXT, (GLuint program, GLint location, GLsizei count, const GLfloat * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4i, (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3), (program, location, v0, v1, v2, v3))
GEN_THUNKS(glProgramUniform4i64NV, (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w), (program, location, x, y, z, w))
GEN_THUNKS(glProgramUniform4i64vNV, (GLuint program, GLint location, GLsizei count, const GLint64EXT * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4iEXT, (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3), (program, location, v0, v1, v2, v3))
GEN_THUNKS(glProgramUniform4iv, (GLuint program, GLint location, GLsizei count, const GLint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4ivEXT, (GLuint program, GLint location, GLsizei count, const GLint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4ui, (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3), (program, location, v0, v1, v2, v3))
GEN_THUNKS(glProgramUniform4ui64NV, (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w), (program, location, x, y, z, w))
GEN_THUNKS(glProgramUniform4ui64vNV, (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4uiEXT, (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3), (program, location, v0, v1, v2, v3))
GEN_THUNKS(glProgramUniform4uiv, (GLuint program, GLint location, GLsizei count, const GLuint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniform4uivEXT, (GLuint program, GLint location, GLsizei count, const GLuint * value), (program, location, count, value))
GEN_THUNKS(glProgramUniformHandleui64ARB, (GLuint program, GLint location, GLuint64 value), (program, location, value))
GEN_THUNKS(glProgramUniformHandleui64NV, (GLuint program, GLint location, GLuint64 value), (program, location, value))
GEN_THUNKS(glProgramUniformHandleui64vARB, (GLuint program, GLint location, GLsizei count, const GLuint64 * values), (program, location, count, values))
GEN_THUNKS(glProgramUniformHandleui64vNV, (GLuint program, GLint location, GLsizei count, const GLuint64 * values), (program, location, count, values))
GEN_THUNKS(glProgramUniformMatrix2dv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2dvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2fv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2fvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2x3dv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2x3dvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2x3fv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2x3fvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2x4dv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2x4dvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2x4fv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix2x4fvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3dv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3dvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3fv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3fvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3x2dv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3x2dvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3x2fv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3x2fvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3x4dv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3x4dvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3x4fv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix3x4fvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4dv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4dvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4fv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4fvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4x2dv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4x2dvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4x2fv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4x2fvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4x3dv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4x3dvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4x3fv, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformMatrix4x3fvEXT, (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (program, location, count, transpose, value))
GEN_THUNKS(glProgramUniformui64NV, (GLuint program, GLint location, GLuint64EXT value), (program, location, value))
GEN_THUNKS(glProgramUniformui64vNV, (GLuint program, GLint location, GLsizei count, const GLuint64EXT * value), (program, location, count, value))
GEN_THUNKS(glProgramVertexLimitNV, (GLenum target, GLint limit), (target, limit))
GEN_THUNKS(glProvokingVertex, (GLenum mode), (mode))
GEN_THUNKS(glProvokingVertexEXT, (GLenum mode), (mode))
GEN_THUNKS(glPushAttrib, (GLbitfield mask), (mask))
GEN_THUNKS(glPushClientAttrib, (GLbitfield mask), (mask))
GEN_THUNKS(glPushClientAttribDefaultEXT, (GLbitfield mask), (mask))
GEN_THUNKS(glPushDebugGroup, (GLenum source, GLuint id, GLsizei length, const GLchar * message), (source, id, length, message))
GEN_THUNKS(glPushDebugGroupKHR, (GLenum source, GLuint id, GLsizei length, const GLchar * message), (source, id, length, message))
GEN_THUNKS(glPushGroupMarkerEXT, (GLsizei length, const GLchar * marker), (length, marker))
GEN_THUNKS(glPushMatrix, (void), ())
GEN_THUNKS(glPushName, (GLuint name), (name))
GEN_THUNKS(glQueryCounter, (GLuint id, GLenum target), (id, target))
GEN_THUNKS(glQueryCounterEXT, (GLuint id, GLenum target), (id, target))
GEN_THUNKS_RET(GLbitfield, glQueryMatrixxOES, (GLfixed * mantissa, GLint * exponent), (mantissa, exponent))
GEN_THUNKS(glQueryObjectParameteruiAMD, (GLenum target, GLuint id, GLenum pname, GLuint param), (target, id, pname, param))
GEN_THUNKS(glRasterPos2d, (GLdouble x, GLdouble y), (x, y))
GEN_THUNKS(glRasterPos2dv, (const GLdouble * v), (v))
GEN_THUNKS(glRasterPos2f, (GLfloat x, GLfloat y), (x, y))
GEN_THUNKS(glRasterPos2fv, (const GLfloat * v), (v))
GEN_THUNKS(glRasterPos2i, (GLint x, GLint y), (x, y))
GEN_THUNKS(glRasterPos2iv, (const GLint * v), (v))
GEN_THUNKS(glRasterPos2s, (GLshort x, GLshort y), (x, y))
GEN_THUNKS(glRasterPos2sv, (const GLshort * v), (v))
GEN_THUNKS(glRasterPos2xOES, (GLfixed x, GLfixed y), (x, y))
GEN_THUNKS(glRasterPos2xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glRasterPos3d, (GLdouble x, GLdouble y, GLdouble z), (x, y, z))
GEN_THUNKS(glRasterPos3dv, (const GLdouble * v), (v))
GEN_THUNKS(glRasterPos3f, (GLfloat x, GLfloat y, GLfloat z), (x, y, z))
GEN_THUNKS(glRasterPos3fv, (const GLfloat * v), (v))
GEN_THUNKS(glRasterPos3i, (GLint x, GLint y, GLint z), (x, y, z))
GEN_THUNKS(glRasterPos3iv, (const GLint * v), (v))
GEN_THUNKS(glRasterPos3s, (GLshort x, GLshort y, GLshort z), (x, y, z))
GEN_THUNKS(glRasterPos3sv, (const GLshort * v), (v))
GEN_THUNKS(glRasterPos3xOES, (GLfixed x, GLfixed y, GLfixed z), (x, y, z))
GEN_THUNKS(glRasterPos3xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glRasterPos4d, (GLdouble x, GLdouble y, GLdouble z, GLdouble w), (x, y, z, w))
GEN_THUNKS(glRasterPos4dv, (const GLdouble * v), (v))
GEN_THUNKS(glRasterPos4f, (GLfloat x, GLfloat y, GLfloat z, GLfloat w), (x, y, z, w))
GEN_THUNKS(glRasterPos4fv, (const GLfloat * v), (v))
GEN_THUNKS(glRasterPos4i, (GLint x, GLint y, GLint z, GLint w), (x, y, z, w))
GEN_THUNKS(glRasterPos4iv, (const GLint * v), (v))
GEN_THUNKS(glRasterPos4s, (GLshort x, GLshort y, GLshort z, GLshort w), (x, y, z, w))
GEN_THUNKS(glRasterPos4sv, (const GLshort * v), (v))
GEN_THUNKS(glRasterPos4xOES, (GLfixed x, GLfixed y, GLfixed z, GLfixed w), (x, y, z, w))
GEN_THUNKS(glRasterPos4xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glRasterSamplesEXT, (GLuint samples, GLboolean fixedsamplelocations), (samples, fixedsamplelocations))
GEN_THUNKS(glReadBuffer, (GLenum src), (src))
GEN_THUNKS(glReadBufferIndexedEXT, (GLenum src, GLint index), (src, index))
GEN_THUNKS(glReadBufferNV, (GLenum mode), (mode))
GEN_THUNKS(glReadInstrumentsSGIX, (GLint marker), (marker))
GEN_THUNKS(glReadPixels, (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels), (x, y, width, height, format, type, pixels))
GEN_THUNKS(glReadnPixels, (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data), (x, y, width, height, format, type, bufSize, data))
GEN_THUNKS(glReadnPixelsARB, (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data), (x, y, width, height, format, type, bufSize, data))
GEN_THUNKS(glReadnPixelsEXT, (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data), (x, y, width, height, format, type, bufSize, data))
GEN_THUNKS(glReadnPixelsKHR, (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data), (x, y, width, height, format, type, bufSize, data))
GEN_THUNKS(glRectd, (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2), (x1, y1, x2, y2))
GEN_THUNKS(glRectdv, (const GLdouble * v1, const GLdouble * v2), (v1, v2))
GEN_THUNKS(glRectf, (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2), (x1, y1, x2, y2))
GEN_THUNKS(glRectfv, (const GLfloat * v1, const GLfloat * v2), (v1, v2))
GEN_THUNKS(glRecti, (GLint x1, GLint y1, GLint x2, GLint y2), (x1, y1, x2, y2))
GEN_THUNKS(glRectiv, (const GLint * v1, const GLint * v2), (v1, v2))
GEN_THUNKS(glRects, (GLshort x1, GLshort y1, GLshort x2, GLshort y2), (x1, y1, x2, y2))
GEN_THUNKS(glRectsv, (const GLshort * v1, const GLshort * v2), (v1, v2))
GEN_THUNKS(glRectxOES, (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2), (x1, y1, x2, y2))
GEN_THUNKS(glRectxvOES, (const GLfixed * v1, const GLfixed * v2), (v1, v2))
GEN_THUNKS(glReferencePlaneSGIX, (const GLdouble * equation), (equation))
GEN_THUNKS(glReleaseShaderCompiler, (void), ())
GEN_THUNKS_RET(GLint, glRenderMode, (GLenum mode), (mode))
GEN_THUNKS(glRenderbufferStorage, (GLenum target, GLenum internalformat, GLsizei width, GLsizei height), (target, internalformat, width, height))
GEN_THUNKS(glRenderbufferStorageEXT, (GLenum target, GLenum internalformat, GLsizei width, GLsizei height), (target, internalformat, width, height))
GEN_THUNKS(glRenderbufferStorageMultisample, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height), (target, samples, internalformat, width, height))
GEN_THUNKS(glRenderbufferStorageMultisampleANGLE, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height), (target, samples, internalformat, width, height))
GEN_THUNKS(glRenderbufferStorageMultisampleAPPLE, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height), (target, samples, internalformat, width, height))
GEN_THUNKS(glRenderbufferStorageMultisampleCoverageNV, (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height), (target, coverageSamples, colorSamples, internalformat, width, height))
GEN_THUNKS(glRenderbufferStorageMultisampleEXT, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height), (target, samples, internalformat, width, height))
GEN_THUNKS(glRenderbufferStorageMultisampleIMG, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height), (target, samples, internalformat, width, height))
GEN_THUNKS(glRenderbufferStorageMultisampleNV, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height), (target, samples, internalformat, width, height))
GEN_THUNKS(glRenderbufferStorageOES, (GLenum target, GLenum internalformat, GLsizei width, GLsizei height), (target, internalformat, width, height))
GEN_THUNKS(glReplacementCodePointerSUN, (GLenum type, GLsizei stride, const void ** pointer), (type, stride, pointer))
GEN_THUNKS(glReplacementCodeubSUN, (GLubyte code), (code))
GEN_THUNKS(glReplacementCodeubvSUN, (const GLubyte * code), (code))
GEN_THUNKS(glReplacementCodeuiColor3fVertex3fSUN, (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z), (rc, r, g, b, x, y, z))
GEN_THUNKS(glReplacementCodeuiColor3fVertex3fvSUN, (const GLuint * rc, const GLfloat * c, const GLfloat * v), (rc, c, v))
GEN_THUNKS(glReplacementCodeuiColor4fNormal3fVertex3fSUN, (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z), (rc, r, g, b, a, nx, ny, nz, x, y, z))
GEN_THUNKS(glReplacementCodeuiColor4fNormal3fVertex3fvSUN, (const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v), (rc, c, n, v))
GEN_THUNKS(glReplacementCodeuiColor4ubVertex3fSUN, (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z), (rc, r, g, b, a, x, y, z))
GEN_THUNKS(glReplacementCodeuiColor4ubVertex3fvSUN, (const GLuint * rc, const GLubyte * c, const GLfloat * v), (rc, c, v))
GEN_THUNKS(glReplacementCodeuiNormal3fVertex3fSUN, (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z), (rc, nx, ny, nz, x, y, z))
GEN_THUNKS(glReplacementCodeuiNormal3fVertex3fvSUN, (const GLuint * rc, const GLfloat * n, const GLfloat * v), (rc, n, v))
GEN_THUNKS(glReplacementCodeuiSUN, (GLuint code), (code))
GEN_THUNKS(glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN, (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z), (rc, s, t, r, g, b, a, nx, ny, nz, x, y, z))
GEN_THUNKS(glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN, (const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v), (rc, tc, c, n, v))
GEN_THUNKS(glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN, (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z), (rc, s, t, nx, ny, nz, x, y, z))
GEN_THUNKS(glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN, (const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v), (rc, tc, n, v))
GEN_THUNKS(glReplacementCodeuiTexCoord2fVertex3fSUN, (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z), (rc, s, t, x, y, z))
GEN_THUNKS(glReplacementCodeuiTexCoord2fVertex3fvSUN, (const GLuint * rc, const GLfloat * tc, const GLfloat * v), (rc, tc, v))
GEN_THUNKS(glReplacementCodeuiVertex3fSUN, (GLuint rc, GLfloat x, GLfloat y, GLfloat z), (rc, x, y, z))
GEN_THUNKS(glReplacementCodeuiVertex3fvSUN, (const GLuint * rc, const GLfloat * v), (rc, v))
GEN_THUNKS(glReplacementCodeuivSUN, (const GLuint * code), (code))
GEN_THUNKS(glReplacementCodeusSUN, (GLushort code), (code))
GEN_THUNKS(glReplacementCodeusvSUN, (const GLushort * code), (code))
GEN_THUNKS(glRequestResidentProgramsNV, (GLsizei n, const GLuint * programs), (n, programs))
GEN_THUNKS(glResetHistogram, (GLenum target), (target))
GEN_THUNKS(glResetHistogramEXT, (GLenum target), (target))
GEN_THUNKS(glResetMinmax, (GLenum target), (target))
GEN_THUNKS(glResetMinmaxEXT, (GLenum target), (target))
GEN_THUNKS(glResizeBuffersMESA, (void), ())
GEN_THUNKS(glResolveDepthValuesNV, (void), ())
GEN_THUNKS(glResolveMultisampleFramebufferAPPLE, (void), ())
GEN_THUNKS(glResumeTransformFeedback, (void), ())
GEN_THUNKS(glResumeTransformFeedbackNV, (void), ())
GEN_THUNKS(glRotated, (GLdouble angle, GLdouble x, GLdouble y, GLdouble z), (angle, x, y, z))
GEN_THUNKS(glRotatef, (GLfloat angle, GLfloat x, GLfloat y, GLfloat z), (angle, x, y, z))
GEN_THUNKS(glRotatex, (GLfixed angle, GLfixed x, GLfixed y, GLfixed z), (angle, x, y, z))
GEN_THUNKS(glRotatexOES, (GLfixed angle, GLfixed x, GLfixed y, GLfixed z), (angle, x, y, z))
GEN_THUNKS(glSampleCoverage, (GLfloat value, GLboolean invert), (value, invert))
GEN_THUNKS(glSampleCoverageARB, (GLfloat value, GLboolean invert), (value, invert))
GEN_THUNKS(glSampleCoveragex, (GLclampx value, GLboolean invert), (value, invert))
GEN_THUNKS(glSampleCoveragexOES, (GLclampx value, GLboolean invert), (value, invert))
GEN_THUNKS(glSampleMapATI, (GLuint dst, GLuint interp, GLenum swizzle), (dst, interp, swizzle))
GEN_THUNKS(glSampleMaskEXT, (GLclampf value, GLboolean invert), (value, invert))
GEN_THUNKS(glSampleMaskIndexedNV, (GLuint index, GLbitfield mask), (index, mask))
GEN_THUNKS(glSampleMaskSGIS, (GLclampf value, GLboolean invert), (value, invert))
GEN_THUNKS(glSampleMaski, (GLuint maskNumber, GLbitfield mask), (maskNumber, mask))
GEN_THUNKS(glSamplePatternEXT, (GLenum pattern), (pattern))
GEN_THUNKS(glSamplePatternSGIS, (GLenum pattern), (pattern))
GEN_THUNKS(glSamplerParameterIiv, (GLuint sampler, GLenum pname, const GLint * param), (sampler, pname, param))
GEN_THUNKS(glSamplerParameterIivEXT, (GLuint sampler, GLenum pname, const GLint * param), (sampler, pname, param))
GEN_THUNKS(glSamplerParameterIivOES, (GLuint sampler, GLenum pname, const GLint * param), (sampler, pname, param))
GEN_THUNKS(glSamplerParameterIuiv, (GLuint sampler, GLenum pname, const GLuint * param), (sampler, pname, param))
GEN_THUNKS(glSamplerParameterIuivEXT, (GLuint sampler, GLenum pname, const GLuint * param), (sampler, pname, param))
GEN_THUNKS(glSamplerParameterIuivOES, (GLuint sampler, GLenum pname, const GLuint * param), (sampler, pname, param))
GEN_THUNKS(glSamplerParameterf, (GLuint sampler, GLenum pname, GLfloat param), (sampler, pname, param))
GEN_THUNKS(glSamplerParameterfv, (GLuint sampler, GLenum pname, const GLfloat * param), (sampler, pname, param))
GEN_THUNKS(glSamplerParameteri, (GLuint sampler, GLenum pname, GLint param), (sampler, pname, param))
GEN_THUNKS(glSamplerParameteriv, (GLuint sampler, GLenum pname, const GLint * param), (sampler, pname, param))
GEN_THUNKS(glScaled, (GLdouble x, GLdouble y, GLdouble z), (x, y, z))
GEN_THUNKS(glScalef, (GLfloat x, GLfloat y, GLfloat z), (x, y, z))
GEN_THUNKS(glScalex, (GLfixed x, GLfixed y, GLfixed z), (x, y, z))
GEN_THUNKS(glScalexOES, (GLfixed x, GLfixed y, GLfixed z), (x, y, z))
GEN_THUNKS(glScissor, (GLint x, GLint y, GLsizei width, GLsizei height), (x, y, width, height))
GEN_THUNKS(glScissorArrayv, (GLuint first, GLsizei count, const GLint * v), (first, count, v))
GEN_THUNKS(glScissorArrayvNV, (GLuint first, GLsizei count, const GLint * v), (first, count, v))
GEN_THUNKS(glScissorIndexed, (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height), (index, left, bottom, width, height))
GEN_THUNKS(glScissorIndexedNV, (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height), (index, left, bottom, width, height))
GEN_THUNKS(glScissorIndexedv, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glScissorIndexedvNV, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glSecondaryColor3b, (GLbyte red, GLbyte green, GLbyte blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3bEXT, (GLbyte red, GLbyte green, GLbyte blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3bv, (const GLbyte * v), (v))
GEN_THUNKS(glSecondaryColor3bvEXT, (const GLbyte * v), (v))
GEN_THUNKS(glSecondaryColor3d, (GLdouble red, GLdouble green, GLdouble blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3dEXT, (GLdouble red, GLdouble green, GLdouble blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3dv, (const GLdouble * v), (v))
GEN_THUNKS(glSecondaryColor3dvEXT, (const GLdouble * v), (v))
GEN_THUNKS(glSecondaryColor3f, (GLfloat red, GLfloat green, GLfloat blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3fEXT, (GLfloat red, GLfloat green, GLfloat blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3fv, (const GLfloat * v), (v))
GEN_THUNKS(glSecondaryColor3fvEXT, (const GLfloat * v), (v))
GEN_THUNKS(glSecondaryColor3hNV, (GLhalfNV red, GLhalfNV green, GLhalfNV blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glSecondaryColor3i, (GLint red, GLint green, GLint blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3iEXT, (GLint red, GLint green, GLint blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3iv, (const GLint * v), (v))
GEN_THUNKS(glSecondaryColor3ivEXT, (const GLint * v), (v))
GEN_THUNKS(glSecondaryColor3s, (GLshort red, GLshort green, GLshort blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3sEXT, (GLshort red, GLshort green, GLshort blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3sv, (const GLshort * v), (v))
GEN_THUNKS(glSecondaryColor3svEXT, (const GLshort * v), (v))
GEN_THUNKS(glSecondaryColor3ub, (GLubyte red, GLubyte green, GLubyte blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3ubEXT, (GLubyte red, GLubyte green, GLubyte blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3ubv, (const GLubyte * v), (v))
GEN_THUNKS(glSecondaryColor3ubvEXT, (const GLubyte * v), (v))
GEN_THUNKS(glSecondaryColor3ui, (GLuint red, GLuint green, GLuint blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3uiEXT, (GLuint red, GLuint green, GLuint blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3uiv, (const GLuint * v), (v))
GEN_THUNKS(glSecondaryColor3uivEXT, (const GLuint * v), (v))
GEN_THUNKS(glSecondaryColor3us, (GLushort red, GLushort green, GLushort blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3usEXT, (GLushort red, GLushort green, GLushort blue), (red, green, blue))
GEN_THUNKS(glSecondaryColor3usv, (const GLushort * v), (v))
GEN_THUNKS(glSecondaryColor3usvEXT, (const GLushort * v), (v))
GEN_THUNKS(glSecondaryColorFormatNV, (GLint size, GLenum type, GLsizei stride), (size, type, stride))
GEN_THUNKS(glSecondaryColorP3ui, (GLenum type, GLuint color), (type, color))
GEN_THUNKS(glSecondaryColorP3uiv, (GLenum type, const GLuint * color), (type, color))
GEN_THUNKS(glSecondaryColorPointer, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glSecondaryColorPointerEXT, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glSecondaryColorPointerListIBM, (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride), (size, type, stride, pointer, ptrstride))
GEN_THUNKS(glSelectBuffer, (GLsizei size, GLuint * buffer), (size, buffer))
GEN_THUNKS(glSelectPerfMonitorCountersAMD, (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList), (monitor, enable, group, numCounters, counterList))
GEN_THUNKS(glSeparableFilter2D, (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column), (target, internalformat, width, height, format, type, row, column))
GEN_THUNKS(glSeparableFilter2DEXT, (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column), (target, internalformat, width, height, format, type, row, column))
GEN_THUNKS(glSetFenceAPPLE, (GLuint fence), (fence))
GEN_THUNKS(glSetFenceNV, (GLuint fence, GLenum condition), (fence, condition))
GEN_THUNKS(glSetFragmentShaderConstantATI, (GLuint dst, const GLfloat * value), (dst, value))
GEN_THUNKS(glSetInvariantEXT, (GLuint id, GLenum type, const void * addr), (id, type, addr))
GEN_THUNKS(glSetLocalConstantEXT, (GLuint id, GLenum type, const void * addr), (id, type, addr))
GEN_THUNKS(glSetMultisamplefvAMD, (GLenum pname, GLuint index, const GLfloat * val), (pname, index, val))
GEN_THUNKS(glShadeModel, (GLenum mode), (mode))
GEN_THUNKS(glShaderBinary, (GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length), (count, shaders, binaryformat, binary, length))
GEN_THUNKS(glShaderOp1EXT, (GLenum op, GLuint res, GLuint arg1), (op, res, arg1))
GEN_THUNKS(glShaderOp2EXT, (GLenum op, GLuint res, GLuint arg1, GLuint arg2), (op, res, arg1, arg2))
GEN_THUNKS(glShaderOp3EXT, (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3), (op, res, arg1, arg2, arg3))
GEN_THUNKS(glShaderSource, (GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length), (shader, count, string, length))
GEN_THUNKS(glShaderSourceARB, (GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length), ((uintptr_t)shaderObj, count, string, length))
GEN_THUNKS(glShaderStorageBlockBinding, (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding), (program, storageBlockIndex, storageBlockBinding))
GEN_THUNKS(glSharpenTexFuncSGIS, (GLenum target, GLsizei n, const GLfloat * points), (target, n, points))
GEN_THUNKS(glSpriteParameterfSGIX, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glSpriteParameterfvSGIX, (GLenum pname, const GLfloat * params), (pname, params))
GEN_THUNKS(glSpriteParameteriSGIX, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glSpriteParameterivSGIX, (GLenum pname, const GLint * params), (pname, params))
GEN_THUNKS(glStartInstrumentsSGIX, (void), ())
GEN_THUNKS(glStartTilingQCOM, (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask), (x, y, width, height, preserveMask))
GEN_THUNKS(glStateCaptureNV, (GLuint state, GLenum mode), (state, mode))
GEN_THUNKS(glStencilClearTagEXT, (GLsizei stencilTagBits, GLuint stencilClearTag), (stencilTagBits, stencilClearTag))
GEN_THUNKS(glStencilFillPathInstancedNV, (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues), (numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues))
GEN_THUNKS(glStencilFillPathNV, (GLuint path, GLenum fillMode, GLuint mask), (path, fillMode, mask))
GEN_THUNKS(glStencilFunc, (GLenum func, GLint ref, GLuint mask), (func, ref, mask))
GEN_THUNKS(glStencilFuncSeparate, (GLenum face, GLenum func, GLint ref, GLuint mask), (face, func, ref, mask))
GEN_THUNKS(glStencilFuncSeparateATI, (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask), (frontfunc, backfunc, ref, mask))
GEN_THUNKS(glStencilMask, (GLuint mask), (mask))
GEN_THUNKS(glStencilMaskSeparate, (GLenum face, GLuint mask), (face, mask))
GEN_THUNKS(glStencilOp, (GLenum fail, GLenum zfail, GLenum zpass), (fail, zfail, zpass))
GEN_THUNKS(glStencilOpSeparate, (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass), (face, sfail, dpfail, dppass))
GEN_THUNKS(glStencilOpSeparateATI, (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass), (face, sfail, dpfail, dppass))
GEN_THUNKS(glStencilOpValueAMD, (GLenum face, GLuint value), (face, value))
GEN_THUNKS(glStencilStrokePathInstancedNV, (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues), (numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues))
GEN_THUNKS(glStencilStrokePathNV, (GLuint path, GLint reference, GLuint mask), (path, reference, mask))
GEN_THUNKS(glStencilThenCoverFillPathInstancedNV, (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues), (numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues))
GEN_THUNKS(glStencilThenCoverFillPathNV, (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode), (path, fillMode, mask, coverMode))
GEN_THUNKS(glStencilThenCoverStrokePathInstancedNV, (GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat * transformValues), (numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues))
GEN_THUNKS(glStencilThenCoverStrokePathNV, (GLuint path, GLint reference, GLuint mask, GLenum coverMode), (path, reference, mask, coverMode))
GEN_THUNKS(glStopInstrumentsSGIX, (GLint marker), (marker))
GEN_THUNKS(glStringMarkerGREMEDY, (GLsizei len, const void * string), (len, string))
GEN_THUNKS(glSubpixelPrecisionBiasNV, (GLuint xbits, GLuint ybits), (xbits, ybits))
GEN_THUNKS(glSwizzleEXT, (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW), (res, in, outX, outY, outZ, outW))
GEN_THUNKS(glSyncTextureINTEL, (GLuint texture), (texture))
GEN_THUNKS(glTagSampleBufferSGIX, (void), ())
GEN_THUNKS(glTangent3bEXT, (GLbyte tx, GLbyte ty, GLbyte tz), (tx, ty, tz))
GEN_THUNKS(glTangent3bvEXT, (const GLbyte * v), (v))
GEN_THUNKS(glTangent3dEXT, (GLdouble tx, GLdouble ty, GLdouble tz), (tx, ty, tz))
GEN_THUNKS(glTangent3dvEXT, (const GLdouble * v), (v))
GEN_THUNKS(glTangent3fEXT, (GLfloat tx, GLfloat ty, GLfloat tz), (tx, ty, tz))
GEN_THUNKS(glTangent3fvEXT, (const GLfloat * v), (v))
GEN_THUNKS(glTangent3iEXT, (GLint tx, GLint ty, GLint tz), (tx, ty, tz))
GEN_THUNKS(glTangent3ivEXT, (const GLint * v), (v))
GEN_THUNKS(glTangent3sEXT, (GLshort tx, GLshort ty, GLshort tz), (tx, ty, tz))
GEN_THUNKS(glTangent3svEXT, (const GLshort * v), (v))
GEN_THUNKS(glTangentPointerEXT, (GLenum type, GLsizei stride, const void * pointer), (type, stride, pointer))
GEN_THUNKS(glTbufferMask3DFX, (GLuint mask), (mask))
GEN_THUNKS(glTessellationFactorAMD, (GLfloat factor), (factor))
GEN_THUNKS(glTessellationModeAMD, (GLenum mode), (mode))
GEN_THUNKS_RET(GLboolean, glTestFenceAPPLE, (GLuint fence), (fence))
GEN_THUNKS_RET(GLboolean, glTestFenceNV, (GLuint fence), (fence))
GEN_THUNKS_RET(GLboolean, glTestObjectAPPLE, (GLenum object, GLuint name), (object, name))
GEN_THUNKS(glTexBuffer, (GLenum target, GLenum internalformat, GLuint buffer), (target, internalformat, buffer))
GEN_THUNKS(glTexBufferARB, (GLenum target, GLenum internalformat, GLuint buffer), (target, internalformat, buffer))
GEN_THUNKS(glTexBufferEXT, (GLenum target, GLenum internalformat, GLuint buffer), (target, internalformat, buffer))
GEN_THUNKS(glTexBufferOES, (GLenum target, GLenum internalformat, GLuint buffer), (target, internalformat, buffer))
GEN_THUNKS(glTexBufferRange, (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size), (target, internalformat, buffer, offset, size))
GEN_THUNKS(glTexBufferRangeEXT, (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size), (target, internalformat, buffer, offset, size))
GEN_THUNKS(glTexBufferRangeOES, (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size), (target, internalformat, buffer, offset, size))
GEN_THUNKS(glTexBumpParameterfvATI, (GLenum pname, const GLfloat * param), (pname, param))
GEN_THUNKS(glTexBumpParameterivATI, (GLenum pname, const GLint * param), (pname, param))
GEN_THUNKS(glTexCoord1bOES, (GLbyte s), (s))
GEN_THUNKS(glTexCoord1bvOES, (const GLbyte * coords), (coords))
GEN_THUNKS(glTexCoord1d, (GLdouble s), (s))
GEN_THUNKS(glTexCoord1dv, (const GLdouble * v), (v))
GEN_THUNKS(glTexCoord1f, (GLfloat s), (s))
GEN_THUNKS(glTexCoord1fv, (const GLfloat * v), (v))
GEN_THUNKS(glTexCoord1hNV, (GLhalfNV s), (s))
GEN_THUNKS(glTexCoord1hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glTexCoord1i, (GLint s), (s))
GEN_THUNKS(glTexCoord1iv, (const GLint * v), (v))
GEN_THUNKS(glTexCoord1s, (GLshort s), (s))
GEN_THUNKS(glTexCoord1sv, (const GLshort * v), (v))
GEN_THUNKS(glTexCoord1xOES, (GLfixed s), (s))
GEN_THUNKS(glTexCoord1xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glTexCoord2bOES, (GLbyte s, GLbyte t), (s, t))
GEN_THUNKS(glTexCoord2bvOES, (const GLbyte * coords), (coords))
GEN_THUNKS(glTexCoord2d, (GLdouble s, GLdouble t), (s, t))
GEN_THUNKS(glTexCoord2dv, (const GLdouble * v), (v))
GEN_THUNKS(glTexCoord2f, (GLfloat s, GLfloat t), (s, t))
GEN_THUNKS(glTexCoord2fColor3fVertex3fSUN, (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z), (s, t, r, g, b, x, y, z))
GEN_THUNKS(glTexCoord2fColor3fVertex3fvSUN, (const GLfloat * tc, const GLfloat * c, const GLfloat * v), (tc, c, v))
GEN_THUNKS(glTexCoord2fColor4fNormal3fVertex3fSUN, (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z), (s, t, r, g, b, a, nx, ny, nz, x, y, z))
GEN_THUNKS(glTexCoord2fColor4fNormal3fVertex3fvSUN, (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v), (tc, c, n, v))
GEN_THUNKS(glTexCoord2fColor4ubVertex3fSUN, (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z), (s, t, r, g, b, a, x, y, z))
GEN_THUNKS(glTexCoord2fColor4ubVertex3fvSUN, (const GLfloat * tc, const GLubyte * c, const GLfloat * v), (tc, c, v))
GEN_THUNKS(glTexCoord2fNormal3fVertex3fSUN, (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z), (s, t, nx, ny, nz, x, y, z))
GEN_THUNKS(glTexCoord2fNormal3fVertex3fvSUN, (const GLfloat * tc, const GLfloat * n, const GLfloat * v), (tc, n, v))
GEN_THUNKS(glTexCoord2fVertex3fSUN, (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z), (s, t, x, y, z))
GEN_THUNKS(glTexCoord2fVertex3fvSUN, (const GLfloat * tc, const GLfloat * v), (tc, v))
GEN_THUNKS(glTexCoord2fv, (const GLfloat * v), (v))
GEN_THUNKS(glTexCoord2hNV, (GLhalfNV s, GLhalfNV t), (s, t))
GEN_THUNKS(glTexCoord2hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glTexCoord2i, (GLint s, GLint t), (s, t))
GEN_THUNKS(glTexCoord2iv, (const GLint * v), (v))
GEN_THUNKS(glTexCoord2s, (GLshort s, GLshort t), (s, t))
GEN_THUNKS(glTexCoord2sv, (const GLshort * v), (v))
GEN_THUNKS(glTexCoord2xOES, (GLfixed s, GLfixed t), (s, t))
GEN_THUNKS(glTexCoord2xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glTexCoord3bOES, (GLbyte s, GLbyte t, GLbyte r), (s, t, r))
GEN_THUNKS(glTexCoord3bvOES, (const GLbyte * coords), (coords))
GEN_THUNKS(glTexCoord3d, (GLdouble s, GLdouble t, GLdouble r), (s, t, r))
GEN_THUNKS(glTexCoord3dv, (const GLdouble * v), (v))
GEN_THUNKS(glTexCoord3f, (GLfloat s, GLfloat t, GLfloat r), (s, t, r))
GEN_THUNKS(glTexCoord3fv, (const GLfloat * v), (v))
GEN_THUNKS(glTexCoord3hNV, (GLhalfNV s, GLhalfNV t, GLhalfNV r), (s, t, r))
GEN_THUNKS(glTexCoord3hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glTexCoord3i, (GLint s, GLint t, GLint r), (s, t, r))
GEN_THUNKS(glTexCoord3iv, (const GLint * v), (v))
GEN_THUNKS(glTexCoord3s, (GLshort s, GLshort t, GLshort r), (s, t, r))
GEN_THUNKS(glTexCoord3sv, (const GLshort * v), (v))
GEN_THUNKS(glTexCoord3xOES, (GLfixed s, GLfixed t, GLfixed r), (s, t, r))
GEN_THUNKS(glTexCoord3xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glTexCoord4bOES, (GLbyte s, GLbyte t, GLbyte r, GLbyte q), (s, t, r, q))
GEN_THUNKS(glTexCoord4bvOES, (const GLbyte * coords), (coords))
GEN_THUNKS(glTexCoord4d, (GLdouble s, GLdouble t, GLdouble r, GLdouble q), (s, t, r, q))
GEN_THUNKS(glTexCoord4dv, (const GLdouble * v), (v))
GEN_THUNKS(glTexCoord4f, (GLfloat s, GLfloat t, GLfloat r, GLfloat q), (s, t, r, q))
GEN_THUNKS(glTexCoord4fColor4fNormal3fVertex4fSUN, (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w))
GEN_THUNKS(glTexCoord4fColor4fNormal3fVertex4fvSUN, (const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v), (tc, c, n, v))
GEN_THUNKS(glTexCoord4fVertex4fSUN, (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (s, t, p, q, x, y, z, w))
GEN_THUNKS(glTexCoord4fVertex4fvSUN, (const GLfloat * tc, const GLfloat * v), (tc, v))
GEN_THUNKS(glTexCoord4fv, (const GLfloat * v), (v))
GEN_THUNKS(glTexCoord4hNV, (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q), (s, t, r, q))
GEN_THUNKS(glTexCoord4hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glTexCoord4i, (GLint s, GLint t, GLint r, GLint q), (s, t, r, q))
GEN_THUNKS(glTexCoord4iv, (const GLint * v), (v))
GEN_THUNKS(glTexCoord4s, (GLshort s, GLshort t, GLshort r, GLshort q), (s, t, r, q))
GEN_THUNKS(glTexCoord4sv, (const GLshort * v), (v))
GEN_THUNKS(glTexCoord4xOES, (GLfixed s, GLfixed t, GLfixed r, GLfixed q), (s, t, r, q))
GEN_THUNKS(glTexCoord4xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glTexCoordFormatNV, (GLint size, GLenum type, GLsizei stride), (size, type, stride))
GEN_THUNKS(glTexCoordP1ui, (GLenum type, GLuint coords), (type, coords))
GEN_THUNKS(glTexCoordP1uiv, (GLenum type, const GLuint * coords), (type, coords))
GEN_THUNKS(glTexCoordP2ui, (GLenum type, GLuint coords), (type, coords))
GEN_THUNKS(glTexCoordP2uiv, (GLenum type, const GLuint * coords), (type, coords))
GEN_THUNKS(glTexCoordP3ui, (GLenum type, GLuint coords), (type, coords))
GEN_THUNKS(glTexCoordP3uiv, (GLenum type, const GLuint * coords), (type, coords))
GEN_THUNKS(glTexCoordP4ui, (GLenum type, GLuint coords), (type, coords))
GEN_THUNKS(glTexCoordP4uiv, (GLenum type, const GLuint * coords), (type, coords))
GEN_THUNKS(glTexCoordPointer, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glTexCoordPointerEXT, (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer), (size, type, stride, count, pointer))
GEN_THUNKS(glTexCoordPointerListIBM, (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride), (size, type, stride, pointer, ptrstride))
GEN_THUNKS(glTexCoordPointervINTEL, (GLint size, GLenum type, const void ** pointer), (size, type, pointer))
GEN_THUNKS(glTexEnvf, (GLenum target, GLenum pname, GLfloat param), (target, pname, param))
GEN_THUNKS(glTexEnvfv, (GLenum target, GLenum pname, const GLfloat * params), (target, pname, params))
GEN_THUNKS(glTexEnvi, (GLenum target, GLenum pname, GLint param), (target, pname, param))
GEN_THUNKS(glTexEnviv, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glTexEnvx, (GLenum target, GLenum pname, GLfixed param), (target, pname, param))
GEN_THUNKS(glTexEnvxOES, (GLenum target, GLenum pname, GLfixed param), (target, pname, param))
GEN_THUNKS(glTexEnvxv, (GLenum target, GLenum pname, const GLfixed * params), (target, pname, params))
GEN_THUNKS(glTexEnvxvOES, (GLenum target, GLenum pname, const GLfixed * params), (target, pname, params))
GEN_THUNKS(glTexFilterFuncSGIS, (GLenum target, GLenum filter, GLsizei n, const GLfloat * weights), (target, filter, n, weights))
GEN_THUNKS(glTexGend, (GLenum coord, GLenum pname, GLdouble param), (coord, pname, param))
GEN_THUNKS(glTexGendv, (GLenum coord, GLenum pname, const GLdouble * params), (coord, pname, params))
GEN_THUNKS(glTexGenf, (GLenum coord, GLenum pname, GLfloat param), (coord, pname, param))
GEN_THUNKS(glTexGenfOES, (GLenum coord, GLenum pname, GLfloat param), (coord, pname, param))
GEN_THUNKS(glTexGenfv, (GLenum coord, GLenum pname, const GLfloat * params), (coord, pname, params))
GEN_THUNKS(glTexGenfvOES, (GLenum coord, GLenum pname, const GLfloat * params), (coord, pname, params))
GEN_THUNKS(glTexGeni, (GLenum coord, GLenum pname, GLint param), (coord, pname, param))
GEN_THUNKS(glTexGeniOES, (GLenum coord, GLenum pname, GLint param), (coord, pname, param))
GEN_THUNKS(glTexGeniv, (GLenum coord, GLenum pname, const GLint * params), (coord, pname, params))
GEN_THUNKS(glTexGenivOES, (GLenum coord, GLenum pname, const GLint * params), (coord, pname, params))
GEN_THUNKS(glTexGenxOES, (GLenum coord, GLenum pname, GLfixed param), (coord, pname, param))
GEN_THUNKS(glTexGenxvOES, (GLenum coord, GLenum pname, const GLfixed * params), (coord, pname, params))
GEN_THUNKS(glTexImage1D, (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels), (target, level, internalformat, width, border, format, type, pixels))
GEN_THUNKS(glTexImage2D, (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels), (target, level, internalformat, width, height, border, format, type, pixels))
GEN_THUNKS(glTexImage2DMultisample, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations), (target, samples, internalformat, width, height, fixedsamplelocations))
GEN_THUNKS(glTexImage2DMultisampleCoverageNV, (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations), (target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations))
GEN_THUNKS(glTexImage3D, (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels), (target, level, internalformat, width, height, depth, border, format, type, pixels))
GEN_THUNKS(glTexImage3DEXT, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels), (target, level, internalformat, width, height, depth, border, format, type, pixels))
GEN_THUNKS(glTexImage3DMultisample, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations), (target, samples, internalformat, width, height, depth, fixedsamplelocations))
GEN_THUNKS(glTexImage3DMultisampleCoverageNV, (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations), (target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations))
GEN_THUNKS(glTexImage3DOES, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels), (target, level, internalformat, width, height, depth, border, format, type, pixels))
GEN_THUNKS(glTexImage4DSGIS, (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels), (target, level, internalformat, width, height, depth, size4d, border, format, type, pixels))
GEN_THUNKS(glTexPageCommitmentARB, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit), (target, level, xoffset, yoffset, zoffset, width, height, depth, commit))
GEN_THUNKS(glTexPageCommitmentEXT, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit), (target, level, xoffset, yoffset, zoffset, width, height, depth, commit))
GEN_THUNKS(glTexParameterIiv, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glTexParameterIivEXT, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glTexParameterIivOES, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glTexParameterIuiv, (GLenum target, GLenum pname, const GLuint * params), (target, pname, params))
GEN_THUNKS(glTexParameterIuivEXT, (GLenum target, GLenum pname, const GLuint * params), (target, pname, params))
GEN_THUNKS(glTexParameterIuivOES, (GLenum target, GLenum pname, const GLuint * params), (target, pname, params))
GEN_THUNKS(glTexParameterf, (GLenum target, GLenum pname, GLfloat param), (target, pname, param))
GEN_THUNKS(glTexParameterfv, (GLenum target, GLenum pname, const GLfloat * params), (target, pname, params))
GEN_THUNKS(glTexParameteri, (GLenum target, GLenum pname, GLint param), (target, pname, param))
GEN_THUNKS(glTexParameteriv, (GLenum target, GLenum pname, const GLint * params), (target, pname, params))
GEN_THUNKS(glTexParameterx, (GLenum target, GLenum pname, GLfixed param), (target, pname, param))
GEN_THUNKS(glTexParameterxOES, (GLenum target, GLenum pname, GLfixed param), (target, pname, param))
GEN_THUNKS(glTexParameterxv, (GLenum target, GLenum pname, const GLfixed * params), (target, pname, params))
GEN_THUNKS(glTexParameterxvOES, (GLenum target, GLenum pname, const GLfixed * params), (target, pname, params))
GEN_THUNKS(glTexRenderbufferNV, (GLenum target, GLuint renderbuffer), (target, renderbuffer))
GEN_THUNKS(glTexStorage1D, (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width), (target, levels, internalformat, width))
GEN_THUNKS(glTexStorage1DEXT, (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width), (target, levels, internalformat, width))
GEN_THUNKS(glTexStorage2D, (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height), (target, levels, internalformat, width, height))
GEN_THUNKS(glTexStorage2DEXT, (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height), (target, levels, internalformat, width, height))
GEN_THUNKS(glTexStorage2DMultisample, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations), (target, samples, internalformat, width, height, fixedsamplelocations))
GEN_THUNKS(glTexStorage3D, (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth), (target, levels, internalformat, width, height, depth))
GEN_THUNKS(glTexStorage3DEXT, (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth), (target, levels, internalformat, width, height, depth))
GEN_THUNKS(glTexStorage3DMultisample, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations), (target, samples, internalformat, width, height, depth, fixedsamplelocations))
GEN_THUNKS(glTexStorage3DMultisampleOES, (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations), (target, samples, internalformat, width, height, depth, fixedsamplelocations))
GEN_THUNKS(glTexStorageSparseAMD, (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags), (target, internalFormat, width, height, depth, layers, flags))
GEN_THUNKS(glTexSubImage1D, (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels), (target, level, xoffset, width, format, type, pixels))
GEN_THUNKS(glTexSubImage1DEXT, (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels), (target, level, xoffset, width, format, type, pixels))
GEN_THUNKS(glTexSubImage2D, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels), (target, level, xoffset, yoffset, width, height, format, type, pixels))
GEN_THUNKS(glTexSubImage2DEXT, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels), (target, level, xoffset, yoffset, width, height, format, type, pixels))
GEN_THUNKS(glTexSubImage3D, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels), (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels))
GEN_THUNKS(glTexSubImage3DEXT, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels), (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels))
GEN_THUNKS(glTexSubImage3DOES, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels), (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels))
GEN_THUNKS(glTexSubImage4DSGIS, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels), (target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels))
GEN_THUNKS(glTextureBarrier, (void), ())
GEN_THUNKS(glTextureBarrierNV, (void), ())
GEN_THUNKS(glTextureBuffer, (GLuint texture, GLenum internalformat, GLuint buffer), (texture, internalformat, buffer))
GEN_THUNKS(glTextureBufferEXT, (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer), (texture, target, internalformat, buffer))
GEN_THUNKS(glTextureBufferRange, (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size), (texture, internalformat, buffer, offset, size))
GEN_THUNKS(glTextureBufferRangeEXT, (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size), (texture, target, internalformat, buffer, offset, size))
GEN_THUNKS(glTextureColorMaskSGIS, (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha), (red, green, blue, alpha))
GEN_THUNKS(glTextureImage1DEXT, (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels), (texture, target, level, internalformat, width, border, format, type, pixels))
GEN_THUNKS(glTextureImage2DEXT, (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels), (texture, target, level, internalformat, width, height, border, format, type, pixels))
GEN_THUNKS(glTextureImage2DMultisampleCoverageNV, (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations), (texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations))
GEN_THUNKS(glTextureImage2DMultisampleNV, (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations), (texture, target, samples, internalFormat, width, height, fixedSampleLocations))
GEN_THUNKS(glTextureImage3DEXT, (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels), (texture, target, level, internalformat, width, height, depth, border, format, type, pixels))
GEN_THUNKS(glTextureImage3DMultisampleCoverageNV, (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations), (texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations))
GEN_THUNKS(glTextureImage3DMultisampleNV, (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations), (texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations))
GEN_THUNKS(glTextureLightEXT, (GLenum pname), (pname))
GEN_THUNKS(glTextureMaterialEXT, (GLenum face, GLenum mode), (face, mode))
GEN_THUNKS(glTextureNormalEXT, (GLenum mode), (mode))
GEN_THUNKS(glTexturePageCommitmentEXT, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit), (texture, level, xoffset, yoffset, zoffset, width, height, depth, commit))
GEN_THUNKS(glTextureParameterIiv, (GLuint texture, GLenum pname, const GLint * params), (texture, pname, params))
GEN_THUNKS(glTextureParameterIivEXT, (GLuint texture, GLenum target, GLenum pname, const GLint * params), (texture, target, pname, params))
GEN_THUNKS(glTextureParameterIuiv, (GLuint texture, GLenum pname, const GLuint * params), (texture, pname, params))
GEN_THUNKS(glTextureParameterIuivEXT, (GLuint texture, GLenum target, GLenum pname, const GLuint * params), (texture, target, pname, params))
GEN_THUNKS(glTextureParameterf, (GLuint texture, GLenum pname, GLfloat param), (texture, pname, param))
GEN_THUNKS(glTextureParameterfEXT, (GLuint texture, GLenum target, GLenum pname, GLfloat param), (texture, target, pname, param))
GEN_THUNKS(glTextureParameterfv, (GLuint texture, GLenum pname, const GLfloat * param), (texture, pname, param))
GEN_THUNKS(glTextureParameterfvEXT, (GLuint texture, GLenum target, GLenum pname, const GLfloat * params), (texture, target, pname, params))
GEN_THUNKS(glTextureParameteri, (GLuint texture, GLenum pname, GLint param), (texture, pname, param))
GEN_THUNKS(glTextureParameteriEXT, (GLuint texture, GLenum target, GLenum pname, GLint param), (texture, target, pname, param))
GEN_THUNKS(glTextureParameteriv, (GLuint texture, GLenum pname, const GLint * param), (texture, pname, param))
GEN_THUNKS(glTextureParameterivEXT, (GLuint texture, GLenum target, GLenum pname, const GLint * params), (texture, target, pname, params))
GEN_THUNKS(glTextureRangeAPPLE, (GLenum target, GLsizei length, const void * pointer), (target, length, pointer))
GEN_THUNKS(glTextureRenderbufferEXT, (GLuint texture, GLenum target, GLuint renderbuffer), (texture, target, renderbuffer))
GEN_THUNKS(glTextureStorage1D, (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width), (texture, levels, internalformat, width))
GEN_THUNKS(glTextureStorage1DEXT, (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width), (texture, target, levels, internalformat, width))
GEN_THUNKS(glTextureStorage2D, (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height), (texture, levels, internalformat, width, height))
GEN_THUNKS(glTextureStorage2DEXT, (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height), (texture, target, levels, internalformat, width, height))
GEN_THUNKS(glTextureStorage2DMultisample, (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations), (texture, samples, internalformat, width, height, fixedsamplelocations))
GEN_THUNKS(glTextureStorage2DMultisampleEXT, (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations), (texture, target, samples, internalformat, width, height, fixedsamplelocations))
GEN_THUNKS(glTextureStorage3D, (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth), (texture, levels, internalformat, width, height, depth))
GEN_THUNKS(glTextureStorage3DEXT, (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth), (texture, target, levels, internalformat, width, height, depth))
GEN_THUNKS(glTextureStorage3DMultisample, (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations), (texture, samples, internalformat, width, height, depth, fixedsamplelocations))
GEN_THUNKS(glTextureStorage3DMultisampleEXT, (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations), (texture, target, samples, internalformat, width, height, depth, fixedsamplelocations))
GEN_THUNKS(glTextureStorageSparseAMD, (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags), (texture, target, internalFormat, width, height, depth, layers, flags))
GEN_THUNKS(glTextureSubImage1D, (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels), (texture, level, xoffset, width, format, type, pixels))
GEN_THUNKS(glTextureSubImage1DEXT, (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels), (texture, target, level, xoffset, width, format, type, pixels))
GEN_THUNKS(glTextureSubImage2D, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels), (texture, level, xoffset, yoffset, width, height, format, type, pixels))
GEN_THUNKS(glTextureSubImage2DEXT, (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels), (texture, target, level, xoffset, yoffset, width, height, format, type, pixels))
GEN_THUNKS(glTextureSubImage3D, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels), (texture, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels))
GEN_THUNKS(glTextureSubImage3DEXT, (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels), (texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels))
GEN_THUNKS(glTextureView, (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers), (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers))
GEN_THUNKS(glTextureViewEXT, (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers), (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers))
GEN_THUNKS(glTextureViewOES, (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers), (texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers))
GEN_THUNKS(glTrackMatrixNV, (GLenum target, GLuint address, GLenum matrix, GLenum transform), (target, address, matrix, transform))
GEN_THUNKS(glTransformFeedbackAttribsNV, (GLsizei count, const GLint * attribs, GLenum bufferMode), (count, attribs, bufferMode))
GEN_THUNKS(glTransformFeedbackBufferBase, (GLuint xfb, GLuint index, GLuint buffer), (xfb, index, buffer))
GEN_THUNKS(glTransformFeedbackBufferRange, (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size), (xfb, index, buffer, offset, size))
GEN_THUNKS(glTransformFeedbackStreamAttribsNV, (GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode), (count, attribs, nbuffers, bufstreams, bufferMode))
GEN_THUNKS(glTransformFeedbackVaryings, (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode), (program, count, varyings, bufferMode))
GEN_THUNKS(glTransformFeedbackVaryingsEXT, (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode), (program, count, varyings, bufferMode))
GEN_THUNKS(glTransformFeedbackVaryingsNV, (GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode), (program, count, locations, bufferMode))
GEN_THUNKS(glTransformPathNV, (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues), (resultPath, srcPath, transformType, transformValues))
GEN_THUNKS(glTranslated, (GLdouble x, GLdouble y, GLdouble z), (x, y, z))
GEN_THUNKS(glTranslatef, (GLfloat x, GLfloat y, GLfloat z), (x, y, z))
GEN_THUNKS(glTranslatex, (GLfixed x, GLfixed y, GLfixed z), (x, y, z))
GEN_THUNKS(glTranslatexOES, (GLfixed x, GLfixed y, GLfixed z), (x, y, z))
GEN_THUNKS(glUniform1d, (GLint location, GLdouble x), (location, x))
GEN_THUNKS(glUniform1dv, (GLint location, GLsizei count, const GLdouble * value), (location, count, value))
GEN_THUNKS(glUniform1f, (GLint location, GLfloat v0), (location, v0))
GEN_THUNKS(glUniform1fARB, (GLint location, GLfloat v0), (location, v0))
GEN_THUNKS(glUniform1fv, (GLint location, GLsizei count, const GLfloat * value), (location, count, value))
GEN_THUNKS(glUniform1fvARB, (GLint location, GLsizei count, const GLfloat * value), (location, count, value))
GEN_THUNKS(glUniform1i, (GLint location, GLint v0), (location, v0))
GEN_THUNKS(glUniform1i64NV, (GLint location, GLint64EXT x), (location, x))
GEN_THUNKS(glUniform1i64vNV, (GLint location, GLsizei count, const GLint64EXT * value), (location, count, value))
GEN_THUNKS(glUniform1iARB, (GLint location, GLint v0), (location, v0))
GEN_THUNKS(glUniform1iv, (GLint location, GLsizei count, const GLint * value), (location, count, value))
GEN_THUNKS(glUniform1ivARB, (GLint location, GLsizei count, const GLint * value), (location, count, value))
GEN_THUNKS(glUniform1ui, (GLint location, GLuint v0), (location, v0))
GEN_THUNKS(glUniform1ui64NV, (GLint location, GLuint64EXT x), (location, x))
GEN_THUNKS(glUniform1ui64vNV, (GLint location, GLsizei count, const GLuint64EXT * value), (location, count, value))
GEN_THUNKS(glUniform1uiEXT, (GLint location, GLuint v0), (location, v0))
GEN_THUNKS(glUniform1uiv, (GLint location, GLsizei count, const GLuint * value), (location, count, value))
GEN_THUNKS(glUniform1uivEXT, (GLint location, GLsizei count, const GLuint * value), (location, count, value))
GEN_THUNKS(glUniform2d, (GLint location, GLdouble x, GLdouble y), (location, x, y))
GEN_THUNKS(glUniform2dv, (GLint location, GLsizei count, const GLdouble * value), (location, count, value))
GEN_THUNKS(glUniform2f, (GLint location, GLfloat v0, GLfloat v1), (location, v0, v1))
GEN_THUNKS(glUniform2fARB, (GLint location, GLfloat v0, GLfloat v1), (location, v0, v1))
GEN_THUNKS(glUniform2fv, (GLint location, GLsizei count, const GLfloat * value), (location, count, value))
GEN_THUNKS(glUniform2fvARB, (GLint location, GLsizei count, const GLfloat * value), (location, count, value))
GEN_THUNKS(glUniform2i, (GLint location, GLint v0, GLint v1), (location, v0, v1))
GEN_THUNKS(glUniform2i64NV, (GLint location, GLint64EXT x, GLint64EXT y), (location, x, y))
GEN_THUNKS(glUniform2i64vNV, (GLint location, GLsizei count, const GLint64EXT * value), (location, count, value))
GEN_THUNKS(glUniform2iARB, (GLint location, GLint v0, GLint v1), (location, v0, v1))
GEN_THUNKS(glUniform2iv, (GLint location, GLsizei count, const GLint * value), (location, count, value))
GEN_THUNKS(glUniform2ivARB, (GLint location, GLsizei count, const GLint * value), (location, count, value))
GEN_THUNKS(glUniform2ui, (GLint location, GLuint v0, GLuint v1), (location, v0, v1))
GEN_THUNKS(glUniform2ui64NV, (GLint location, GLuint64EXT x, GLuint64EXT y), (location, x, y))
GEN_THUNKS(glUniform2ui64vNV, (GLint location, GLsizei count, const GLuint64EXT * value), (location, count, value))
GEN_THUNKS(glUniform2uiEXT, (GLint location, GLuint v0, GLuint v1), (location, v0, v1))
GEN_THUNKS(glUniform2uiv, (GLint location, GLsizei count, const GLuint * value), (location, count, value))
GEN_THUNKS(glUniform2uivEXT, (GLint location, GLsizei count, const GLuint * value), (location, count, value))
GEN_THUNKS(glUniform3d, (GLint location, GLdouble x, GLdouble y, GLdouble z), (location, x, y, z))
GEN_THUNKS(glUniform3dv, (GLint location, GLsizei count, const GLdouble * value), (location, count, value))
GEN_THUNKS(glUniform3f, (GLint location, GLfloat v0, GLfloat v1, GLfloat v2), (location, v0, v1, v2))
GEN_THUNKS(glUniform3fARB, (GLint location, GLfloat v0, GLfloat v1, GLfloat v2), (location, v0, v1, v2))
GEN_THUNKS(glUniform3fv, (GLint location, GLsizei count, const GLfloat * value), (location, count, value))
GEN_THUNKS(glUniform3fvARB, (GLint location, GLsizei count, const GLfloat * value), (location, count, value))
GEN_THUNKS(glUniform3i, (GLint location, GLint v0, GLint v1, GLint v2), (location, v0, v1, v2))
GEN_THUNKS(glUniform3i64NV, (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z), (location, x, y, z))
GEN_THUNKS(glUniform3i64vNV, (GLint location, GLsizei count, const GLint64EXT * value), (location, count, value))
GEN_THUNKS(glUniform3iARB, (GLint location, GLint v0, GLint v1, GLint v2), (location, v0, v1, v2))
GEN_THUNKS(glUniform3iv, (GLint location, GLsizei count, const GLint * value), (location, count, value))
GEN_THUNKS(glUniform3ivARB, (GLint location, GLsizei count, const GLint * value), (location, count, value))
GEN_THUNKS(glUniform3ui, (GLint location, GLuint v0, GLuint v1, GLuint v2), (location, v0, v1, v2))
GEN_THUNKS(glUniform3ui64NV, (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z), (location, x, y, z))
GEN_THUNKS(glUniform3ui64vNV, (GLint location, GLsizei count, const GLuint64EXT * value), (location, count, value))
GEN_THUNKS(glUniform3uiEXT, (GLint location, GLuint v0, GLuint v1, GLuint v2), (location, v0, v1, v2))
GEN_THUNKS(glUniform3uiv, (GLint location, GLsizei count, const GLuint * value), (location, count, value))
GEN_THUNKS(glUniform3uivEXT, (GLint location, GLsizei count, const GLuint * value), (location, count, value))
GEN_THUNKS(glUniform4d, (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (location, x, y, z, w))
GEN_THUNKS(glUniform4dv, (GLint location, GLsizei count, const GLdouble * value), (location, count, value))
GEN_THUNKS(glUniform4f, (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3), (location, v0, v1, v2, v3))
GEN_THUNKS(glUniform4fARB, (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3), (location, v0, v1, v2, v3))
GEN_THUNKS(glUniform4fv, (GLint location, GLsizei count, const GLfloat * value), (location, count, value))
GEN_THUNKS(glUniform4fvARB, (GLint location, GLsizei count, const GLfloat * value), (location, count, value))
GEN_THUNKS(glUniform4i, (GLint location, GLint v0, GLint v1, GLint v2, GLint v3), (location, v0, v1, v2, v3))
GEN_THUNKS(glUniform4i64NV, (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w), (location, x, y, z, w))
GEN_THUNKS(glUniform4i64vNV, (GLint location, GLsizei count, const GLint64EXT * value), (location, count, value))
GEN_THUNKS(glUniform4iARB, (GLint location, GLint v0, GLint v1, GLint v2, GLint v3), (location, v0, v1, v2, v3))
GEN_THUNKS(glUniform4iv, (GLint location, GLsizei count, const GLint * value), (location, count, value))
GEN_THUNKS(glUniform4ivARB, (GLint location, GLsizei count, const GLint * value), (location, count, value))
GEN_THUNKS(glUniform4ui, (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3), (location, v0, v1, v2, v3))
GEN_THUNKS(glUniform4ui64NV, (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w), (location, x, y, z, w))
GEN_THUNKS(glUniform4ui64vNV, (GLint location, GLsizei count, const GLuint64EXT * value), (location, count, value))
GEN_THUNKS(glUniform4uiEXT, (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3), (location, v0, v1, v2, v3))
GEN_THUNKS(glUniform4uiv, (GLint location, GLsizei count, const GLuint * value), (location, count, value))
GEN_THUNKS(glUniform4uivEXT, (GLint location, GLsizei count, const GLuint * value), (location, count, value))
GEN_THUNKS(glUniformBlockBinding, (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding), (program, uniformBlockIndex, uniformBlockBinding))
GEN_THUNKS(glUniformBufferEXT, (GLuint program, GLint location, GLuint buffer), (program, location, buffer))
GEN_THUNKS(glUniformHandleui64ARB, (GLint location, GLuint64 value), (location, value))
GEN_THUNKS(glUniformHandleui64NV, (GLint location, GLuint64 value), (location, value))
GEN_THUNKS(glUniformHandleui64vARB, (GLint location, GLsizei count, const GLuint64 * value), (location, count, value))
GEN_THUNKS(glUniformHandleui64vNV, (GLint location, GLsizei count, const GLuint64 * value), (location, count, value))
GEN_THUNKS(glUniformMatrix2dv, (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix2fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix2fvARB, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix2x3dv, (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix2x3fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix2x3fvNV, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix2x4dv, (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix2x4fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix2x4fvNV, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix3dv, (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix3fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix3fvARB, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix3x2dv, (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix3x2fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix3x2fvNV, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix3x4dv, (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix3x4fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix3x4fvNV, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix4dv, (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix4fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix4fvARB, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix4x2dv, (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix4x2fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix4x2fvNV, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix4x3dv, (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix4x3fv, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformMatrix4x3fvNV, (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value), (location, count, transpose, value))
GEN_THUNKS(glUniformSubroutinesuiv, (GLenum shadertype, GLsizei count, const GLuint * indices), (shadertype, count, indices))
GEN_THUNKS(glUniformui64NV, (GLint location, GLuint64EXT value), (location, value))
GEN_THUNKS(glUniformui64vNV, (GLint location, GLsizei count, const GLuint64EXT * value), (location, count, value))
GEN_THUNKS(glUnlockArraysEXT, (void), ())
GEN_THUNKS_RET(GLboolean, glUnmapBuffer, (GLenum target), (target))
GEN_THUNKS_RET(GLboolean, glUnmapBufferARB, (GLenum target), (target))
GEN_THUNKS_RET(GLboolean, glUnmapBufferOES, (GLenum target), (target))
GEN_THUNKS_RET(GLboolean, glUnmapNamedBuffer, (GLuint buffer), (buffer))
GEN_THUNKS_RET(GLboolean, glUnmapNamedBufferEXT, (GLuint buffer), (buffer))
GEN_THUNKS(glUnmapObjectBufferATI, (GLuint buffer), (buffer))
GEN_THUNKS(glUnmapTexture2DINTEL, (GLuint texture, GLint level), (texture, level))
GEN_THUNKS(glUpdateObjectBufferATI, (GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve), (buffer, offset, size, pointer, preserve))
GEN_THUNKS(glUseProgram, (GLuint program), (program))
GEN_THUNKS(glUseProgramObjectARB, (GLhandleARB programObj), ((uintptr_t)programObj))
GEN_THUNKS(glUseProgramStages, (GLuint pipeline, GLbitfield stages, GLuint program), (pipeline, stages, program))
GEN_THUNKS(glUseProgramStagesEXT, (GLuint pipeline, GLbitfield stages, GLuint program), (pipeline, stages, program))
GEN_THUNKS(glUseShaderProgramEXT, (GLenum type, GLuint program), (type, program))
GEN_THUNKS(glVDPAUFiniNV, (void), ())
GEN_THUNKS(glVDPAUGetSurfaceivNV, (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values), (surface, pname, bufSize, length, values))
GEN_THUNKS(glVDPAUInitNV, (const void * vdpDevice, const void * getProcAddress), (vdpDevice, getProcAddress))
GEN_THUNKS_RET(GLboolean, glVDPAUIsSurfaceNV, (GLvdpauSurfaceNV surface), (surface))
GEN_THUNKS(glVDPAUMapSurfacesNV, (GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces), (numSurfaces, surfaces))
GEN_THUNKS_RET(GLvdpauSurfaceNV, glVDPAURegisterOutputSurfaceNV, (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames), (vdpSurface, target, numTextureNames, textureNames))
GEN_THUNKS_RET(GLvdpauSurfaceNV, glVDPAURegisterVideoSurfaceNV, (const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames), (vdpSurface, target, numTextureNames, textureNames))
GEN_THUNKS(glVDPAUSurfaceAccessNV, (GLvdpauSurfaceNV surface, GLenum access), (surface, access))
GEN_THUNKS(glVDPAUUnmapSurfacesNV, (GLsizei numSurface, const GLvdpauSurfaceNV * surfaces), (numSurface, surfaces))
GEN_THUNKS(glVDPAUUnregisterSurfaceNV, (GLvdpauSurfaceNV surface), (surface))
GEN_THUNKS(glValidateProgram, (GLuint program), (program))
GEN_THUNKS(glValidateProgramARB, (GLhandleARB programObj), ((uintptr_t)programObj))
GEN_THUNKS(glValidateProgramPipeline, (GLuint pipeline), (pipeline))
GEN_THUNKS(glValidateProgramPipelineEXT, (GLuint pipeline), (pipeline))
GEN_THUNKS(glVariantArrayObjectATI, (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset), (id, type, stride, buffer, offset))
GEN_THUNKS(glVariantPointerEXT, (GLuint id, GLenum type, GLuint stride, const void * addr), (id, type, stride, addr))
GEN_THUNKS(glVariantbvEXT, (GLuint id, const GLbyte * addr), (id, addr))
GEN_THUNKS(glVariantdvEXT, (GLuint id, const GLdouble * addr), (id, addr))
GEN_THUNKS(glVariantfvEXT, (GLuint id, const GLfloat * addr), (id, addr))
GEN_THUNKS(glVariantivEXT, (GLuint id, const GLint * addr), (id, addr))
GEN_THUNKS(glVariantsvEXT, (GLuint id, const GLshort * addr), (id, addr))
GEN_THUNKS(glVariantubvEXT, (GLuint id, const GLubyte * addr), (id, addr))
GEN_THUNKS(glVariantuivEXT, (GLuint id, const GLuint * addr), (id, addr))
GEN_THUNKS(glVariantusvEXT, (GLuint id, const GLushort * addr), (id, addr))
GEN_THUNKS(glVertex2bOES, (GLbyte x, GLbyte y), (x, y))
GEN_THUNKS(glVertex2bvOES, (const GLbyte * coords), (coords))
GEN_THUNKS(glVertex2d, (GLdouble x, GLdouble y), (x, y))
GEN_THUNKS(glVertex2dv, (const GLdouble * v), (v))
GEN_THUNKS(glVertex2f, (GLfloat x, GLfloat y), (x, y))
GEN_THUNKS(glVertex2fv, (const GLfloat * v), (v))
GEN_THUNKS(glVertex2hNV, (GLhalfNV x, GLhalfNV y), (x, y))
GEN_THUNKS(glVertex2hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glVertex2i, (GLint x, GLint y), (x, y))
GEN_THUNKS(glVertex2iv, (const GLint * v), (v))
GEN_THUNKS(glVertex2s, (GLshort x, GLshort y), (x, y))
GEN_THUNKS(glVertex2sv, (const GLshort * v), (v))
GEN_THUNKS(glVertex2xOES, (GLfixed x), (x))
GEN_THUNKS(glVertex2xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glVertex3bOES, (GLbyte x, GLbyte y, GLbyte z), (x, y, z))
GEN_THUNKS(glVertex3bvOES, (const GLbyte * coords), (coords))
GEN_THUNKS(glVertex3d, (GLdouble x, GLdouble y, GLdouble z), (x, y, z))
GEN_THUNKS(glVertex3dv, (const GLdouble * v), (v))
GEN_THUNKS(glVertex3f, (GLfloat x, GLfloat y, GLfloat z), (x, y, z))
GEN_THUNKS(glVertex3fv, (const GLfloat * v), (v))
GEN_THUNKS(glVertex3hNV, (GLhalfNV x, GLhalfNV y, GLhalfNV z), (x, y, z))
GEN_THUNKS(glVertex3hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glVertex3i, (GLint x, GLint y, GLint z), (x, y, z))
GEN_THUNKS(glVertex3iv, (const GLint * v), (v))
GEN_THUNKS(glVertex3s, (GLshort x, GLshort y, GLshort z), (x, y, z))
GEN_THUNKS(glVertex3sv, (const GLshort * v), (v))
GEN_THUNKS(glVertex3xOES, (GLfixed x, GLfixed y), (x, y))
GEN_THUNKS(glVertex3xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glVertex4bOES, (GLbyte x, GLbyte y, GLbyte z, GLbyte w), (x, y, z, w))
GEN_THUNKS(glVertex4bvOES, (const GLbyte * coords), (coords))
GEN_THUNKS(glVertex4d, (GLdouble x, GLdouble y, GLdouble z, GLdouble w), (x, y, z, w))
GEN_THUNKS(glVertex4dv, (const GLdouble * v), (v))
GEN_THUNKS(glVertex4f, (GLfloat x, GLfloat y, GLfloat z, GLfloat w), (x, y, z, w))
GEN_THUNKS(glVertex4fv, (const GLfloat * v), (v))
GEN_THUNKS(glVertex4hNV, (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w), (x, y, z, w))
GEN_THUNKS(glVertex4hvNV, (const GLhalfNV * v), (v))
GEN_THUNKS(glVertex4i, (GLint x, GLint y, GLint z, GLint w), (x, y, z, w))
GEN_THUNKS(glVertex4iv, (const GLint * v), (v))
GEN_THUNKS(glVertex4s, (GLshort x, GLshort y, GLshort z, GLshort w), (x, y, z, w))
GEN_THUNKS(glVertex4sv, (const GLshort * v), (v))
GEN_THUNKS(glVertex4xOES, (GLfixed x, GLfixed y, GLfixed z), (x, y, z))
GEN_THUNKS(glVertex4xvOES, (const GLfixed * coords), (coords))
GEN_THUNKS(glVertexArrayAttribBinding, (GLuint vaobj, GLuint attribindex, GLuint bindingindex), (vaobj, attribindex, bindingindex))
GEN_THUNKS(glVertexArrayAttribFormat, (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset), (vaobj, attribindex, size, type, normalized, relativeoffset))
GEN_THUNKS(glVertexArrayAttribIFormat, (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset), (vaobj, attribindex, size, type, relativeoffset))
GEN_THUNKS(glVertexArrayAttribLFormat, (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset), (vaobj, attribindex, size, type, relativeoffset))
GEN_THUNKS(glVertexArrayBindVertexBufferEXT, (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride), (vaobj, bindingindex, buffer, offset, stride))
GEN_THUNKS(glVertexArrayBindingDivisor, (GLuint vaobj, GLuint bindingindex, GLuint divisor), (vaobj, bindingindex, divisor))
GEN_THUNKS(glVertexArrayColorOffsetEXT, (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, size, type, stride, offset))
GEN_THUNKS(glVertexArrayEdgeFlagOffsetEXT, (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset), (vaobj, buffer, stride, offset))
GEN_THUNKS(glVertexArrayElementBuffer, (GLuint vaobj, GLuint buffer), (vaobj, buffer))
GEN_THUNKS(glVertexArrayFogCoordOffsetEXT, (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, type, stride, offset))
GEN_THUNKS(glVertexArrayIndexOffsetEXT, (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, type, stride, offset))
GEN_THUNKS(glVertexArrayMultiTexCoordOffsetEXT, (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, texunit, size, type, stride, offset))
GEN_THUNKS(glVertexArrayNormalOffsetEXT, (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, type, stride, offset))
GEN_THUNKS(glVertexArrayParameteriAPPLE, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glVertexArrayRangeAPPLE, (GLsizei length, void * pointer), (length, pointer))
GEN_THUNKS(glVertexArrayRangeNV, (GLsizei length, const void * pointer), (length, pointer))
GEN_THUNKS(glVertexArraySecondaryColorOffsetEXT, (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, size, type, stride, offset))
GEN_THUNKS(glVertexArrayTexCoordOffsetEXT, (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, size, type, stride, offset))
GEN_THUNKS(glVertexArrayVertexAttribBindingEXT, (GLuint vaobj, GLuint attribindex, GLuint bindingindex), (vaobj, attribindex, bindingindex))
GEN_THUNKS(glVertexArrayVertexAttribDivisorEXT, (GLuint vaobj, GLuint index, GLuint divisor), (vaobj, index, divisor))
GEN_THUNKS(glVertexArrayVertexAttribFormatEXT, (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset), (vaobj, attribindex, size, type, normalized, relativeoffset))
GEN_THUNKS(glVertexArrayVertexAttribIFormatEXT, (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset), (vaobj, attribindex, size, type, relativeoffset))
GEN_THUNKS(glVertexArrayVertexAttribIOffsetEXT, (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, index, size, type, stride, offset))
GEN_THUNKS(glVertexArrayVertexAttribLFormatEXT, (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset), (vaobj, attribindex, size, type, relativeoffset))
GEN_THUNKS(glVertexArrayVertexAttribLOffsetEXT, (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, index, size, type, stride, offset))
GEN_THUNKS(glVertexArrayVertexAttribOffsetEXT, (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset), (vaobj, buffer, index, size, type, normalized, stride, offset))
GEN_THUNKS(glVertexArrayVertexBindingDivisorEXT, (GLuint vaobj, GLuint bindingindex, GLuint divisor), (vaobj, bindingindex, divisor))
GEN_THUNKS(glVertexArrayVertexBuffer, (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride), (vaobj, bindingindex, buffer, offset, stride))
GEN_THUNKS(glVertexArrayVertexBuffers, (GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides), (vaobj, first, count, buffers, offsets, strides))
GEN_THUNKS(glVertexArrayVertexOffsetEXT, (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset), (vaobj, buffer, size, type, stride, offset))
GEN_THUNKS(glVertexAttrib1d, (GLuint index, GLdouble x), (index, x))
GEN_THUNKS(glVertexAttrib1dARB, (GLuint index, GLdouble x), (index, x))
GEN_THUNKS(glVertexAttrib1dNV, (GLuint index, GLdouble x), (index, x))
GEN_THUNKS(glVertexAttrib1dv, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib1dvARB, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib1dvNV, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib1f, (GLuint index, GLfloat x), (index, x))
GEN_THUNKS(glVertexAttrib1fARB, (GLuint index, GLfloat x), (index, x))
GEN_THUNKS(glVertexAttrib1fNV, (GLuint index, GLfloat x), (index, x))
GEN_THUNKS(glVertexAttrib1fv, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib1fvARB, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib1fvNV, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib1hNV, (GLuint index, GLhalfNV x), (index, x))
GEN_THUNKS(glVertexAttrib1hvNV, (GLuint index, const GLhalfNV * v), (index, v))
GEN_THUNKS(glVertexAttrib1s, (GLuint index, GLshort x), (index, x))
GEN_THUNKS(glVertexAttrib1sARB, (GLuint index, GLshort x), (index, x))
GEN_THUNKS(glVertexAttrib1sNV, (GLuint index, GLshort x), (index, x))
GEN_THUNKS(glVertexAttrib1sv, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib1svARB, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib1svNV, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib2d, (GLuint index, GLdouble x, GLdouble y), (index, x, y))
GEN_THUNKS(glVertexAttrib2dARB, (GLuint index, GLdouble x, GLdouble y), (index, x, y))
GEN_THUNKS(glVertexAttrib2dNV, (GLuint index, GLdouble x, GLdouble y), (index, x, y))
GEN_THUNKS(glVertexAttrib2dv, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib2dvARB, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib2dvNV, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib2f, (GLuint index, GLfloat x, GLfloat y), (index, x, y))
GEN_THUNKS(glVertexAttrib2fARB, (GLuint index, GLfloat x, GLfloat y), (index, x, y))
GEN_THUNKS(glVertexAttrib2fNV, (GLuint index, GLfloat x, GLfloat y), (index, x, y))
GEN_THUNKS(glVertexAttrib2fv, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib2fvARB, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib2fvNV, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib2hNV, (GLuint index, GLhalfNV x, GLhalfNV y), (index, x, y))
GEN_THUNKS(glVertexAttrib2hvNV, (GLuint index, const GLhalfNV * v), (index, v))
GEN_THUNKS(glVertexAttrib2s, (GLuint index, GLshort x, GLshort y), (index, x, y))
GEN_THUNKS(glVertexAttrib2sARB, (GLuint index, GLshort x, GLshort y), (index, x, y))
GEN_THUNKS(glVertexAttrib2sNV, (GLuint index, GLshort x, GLshort y), (index, x, y))
GEN_THUNKS(glVertexAttrib2sv, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib2svARB, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib2svNV, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib3d, (GLuint index, GLdouble x, GLdouble y, GLdouble z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3dARB, (GLuint index, GLdouble x, GLdouble y, GLdouble z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3dNV, (GLuint index, GLdouble x, GLdouble y, GLdouble z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3dv, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib3dvARB, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib3dvNV, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib3f, (GLuint index, GLfloat x, GLfloat y, GLfloat z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3fARB, (GLuint index, GLfloat x, GLfloat y, GLfloat z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3fNV, (GLuint index, GLfloat x, GLfloat y, GLfloat z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3fv, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib3fvARB, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib3fvNV, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib3hNV, (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3hvNV, (GLuint index, const GLhalfNV * v), (index, v))
GEN_THUNKS(glVertexAttrib3s, (GLuint index, GLshort x, GLshort y, GLshort z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3sARB, (GLuint index, GLshort x, GLshort y, GLshort z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3sNV, (GLuint index, GLshort x, GLshort y, GLshort z), (index, x, y, z))
GEN_THUNKS(glVertexAttrib3sv, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib3svARB, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib3svNV, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib4Nbv, (GLuint index, const GLbyte * v), (index, v))
GEN_THUNKS(glVertexAttrib4NbvARB, (GLuint index, const GLbyte * v), (index, v))
GEN_THUNKS(glVertexAttrib4Niv, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttrib4NivARB, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttrib4Nsv, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib4NsvARB, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib4Nub, (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4NubARB, (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4Nubv, (GLuint index, const GLubyte * v), (index, v))
GEN_THUNKS(glVertexAttrib4NubvARB, (GLuint index, const GLubyte * v), (index, v))
GEN_THUNKS(glVertexAttrib4Nuiv, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttrib4NuivARB, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttrib4Nusv, (GLuint index, const GLushort * v), (index, v))
GEN_THUNKS(glVertexAttrib4NusvARB, (GLuint index, const GLushort * v), (index, v))
GEN_THUNKS(glVertexAttrib4bv, (GLuint index, const GLbyte * v), (index, v))
GEN_THUNKS(glVertexAttrib4bvARB, (GLuint index, const GLbyte * v), (index, v))
GEN_THUNKS(glVertexAttrib4d, (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4dARB, (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4dNV, (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4dv, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib4dvARB, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib4dvNV, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttrib4f, (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4fARB, (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4fNV, (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4fv, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib4fvARB, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib4fvNV, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glVertexAttrib4hNV, (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4hvNV, (GLuint index, const GLhalfNV * v), (index, v))
GEN_THUNKS(glVertexAttrib4iv, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttrib4ivARB, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttrib4s, (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4sARB, (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4sNV, (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4sv, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib4svARB, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib4svNV, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttrib4ubNV, (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttrib4ubv, (GLuint index, const GLubyte * v), (index, v))
GEN_THUNKS(glVertexAttrib4ubvARB, (GLuint index, const GLubyte * v), (index, v))
GEN_THUNKS(glVertexAttrib4ubvNV, (GLuint index, const GLubyte * v), (index, v))
GEN_THUNKS(glVertexAttrib4uiv, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttrib4uivARB, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttrib4usv, (GLuint index, const GLushort * v), (index, v))
GEN_THUNKS(glVertexAttrib4usvARB, (GLuint index, const GLushort * v), (index, v))
GEN_THUNKS(glVertexAttribArrayObjectATI, (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset), (index, size, type, normalized, stride, buffer, offset))
GEN_THUNKS(glVertexAttribBinding, (GLuint attribindex, GLuint bindingindex), (attribindex, bindingindex))
GEN_THUNKS(glVertexAttribDivisor, (GLuint index, GLuint divisor), (index, divisor))
GEN_THUNKS(glVertexAttribDivisorANGLE, (GLuint index, GLuint divisor), (index, divisor))
GEN_THUNKS(glVertexAttribDivisorARB, (GLuint index, GLuint divisor), (index, divisor))
GEN_THUNKS(glVertexAttribDivisorEXT, (GLuint index, GLuint divisor), (index, divisor))
GEN_THUNKS(glVertexAttribDivisorNV, (GLuint index, GLuint divisor), (index, divisor))
GEN_THUNKS(glVertexAttribFormat, (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset), (attribindex, size, type, normalized, relativeoffset))
GEN_THUNKS(glVertexAttribFormatNV, (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride), (index, size, type, normalized, stride))
GEN_THUNKS(glVertexAttribI1i, (GLuint index, GLint x), (index, x))
GEN_THUNKS(glVertexAttribI1iEXT, (GLuint index, GLint x), (index, x))
GEN_THUNKS(glVertexAttribI1iv, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttribI1ivEXT, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttribI1ui, (GLuint index, GLuint x), (index, x))
GEN_THUNKS(glVertexAttribI1uiEXT, (GLuint index, GLuint x), (index, x))
GEN_THUNKS(glVertexAttribI1uiv, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttribI1uivEXT, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttribI2i, (GLuint index, GLint x, GLint y), (index, x, y))
GEN_THUNKS(glVertexAttribI2iEXT, (GLuint index, GLint x, GLint y), (index, x, y))
GEN_THUNKS(glVertexAttribI2iv, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttribI2ivEXT, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttribI2ui, (GLuint index, GLuint x, GLuint y), (index, x, y))
GEN_THUNKS(glVertexAttribI2uiEXT, (GLuint index, GLuint x, GLuint y), (index, x, y))
GEN_THUNKS(glVertexAttribI2uiv, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttribI2uivEXT, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttribI3i, (GLuint index, GLint x, GLint y, GLint z), (index, x, y, z))
GEN_THUNKS(glVertexAttribI3iEXT, (GLuint index, GLint x, GLint y, GLint z), (index, x, y, z))
GEN_THUNKS(glVertexAttribI3iv, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttribI3ivEXT, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttribI3ui, (GLuint index, GLuint x, GLuint y, GLuint z), (index, x, y, z))
GEN_THUNKS(glVertexAttribI3uiEXT, (GLuint index, GLuint x, GLuint y, GLuint z), (index, x, y, z))
GEN_THUNKS(glVertexAttribI3uiv, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttribI3uivEXT, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttribI4bv, (GLuint index, const GLbyte * v), (index, v))
GEN_THUNKS(glVertexAttribI4bvEXT, (GLuint index, const GLbyte * v), (index, v))
GEN_THUNKS(glVertexAttribI4i, (GLuint index, GLint x, GLint y, GLint z, GLint w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttribI4iEXT, (GLuint index, GLint x, GLint y, GLint z, GLint w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttribI4iv, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttribI4ivEXT, (GLuint index, const GLint * v), (index, v))
GEN_THUNKS(glVertexAttribI4sv, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttribI4svEXT, (GLuint index, const GLshort * v), (index, v))
GEN_THUNKS(glVertexAttribI4ubv, (GLuint index, const GLubyte * v), (index, v))
GEN_THUNKS(glVertexAttribI4ubvEXT, (GLuint index, const GLubyte * v), (index, v))
GEN_THUNKS(glVertexAttribI4ui, (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttribI4uiEXT, (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttribI4uiv, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttribI4uivEXT, (GLuint index, const GLuint * v), (index, v))
GEN_THUNKS(glVertexAttribI4usv, (GLuint index, const GLushort * v), (index, v))
GEN_THUNKS(glVertexAttribI4usvEXT, (GLuint index, const GLushort * v), (index, v))
GEN_THUNKS(glVertexAttribIFormat, (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset), (attribindex, size, type, relativeoffset))
GEN_THUNKS(glVertexAttribIFormatNV, (GLuint index, GLint size, GLenum type, GLsizei stride), (index, size, type, stride))
GEN_THUNKS(glVertexAttribIPointer, (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer), (index, size, type, stride, pointer))
GEN_THUNKS(glVertexAttribIPointerEXT, (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer), (index, size, type, stride, pointer))
GEN_THUNKS(glVertexAttribL1d, (GLuint index, GLdouble x), (index, x))
GEN_THUNKS(glVertexAttribL1dEXT, (GLuint index, GLdouble x), (index, x))
GEN_THUNKS(glVertexAttribL1dv, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttribL1dvEXT, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttribL1i64NV, (GLuint index, GLint64EXT x), (index, x))
GEN_THUNKS(glVertexAttribL1i64vNV, (GLuint index, const GLint64EXT * v), (index, v))
GEN_THUNKS(glVertexAttribL1ui64ARB, (GLuint index, GLuint64EXT x), (index, x))
GEN_THUNKS(glVertexAttribL1ui64NV, (GLuint index, GLuint64EXT x), (index, x))
GEN_THUNKS(glVertexAttribL1ui64vARB, (GLuint index, const GLuint64EXT * v), (index, v))
GEN_THUNKS(glVertexAttribL1ui64vNV, (GLuint index, const GLuint64EXT * v), (index, v))
GEN_THUNKS(glVertexAttribL2d, (GLuint index, GLdouble x, GLdouble y), (index, x, y))
GEN_THUNKS(glVertexAttribL2dEXT, (GLuint index, GLdouble x, GLdouble y), (index, x, y))
GEN_THUNKS(glVertexAttribL2dv, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttribL2dvEXT, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttribL2i64NV, (GLuint index, GLint64EXT x, GLint64EXT y), (index, x, y))
GEN_THUNKS(glVertexAttribL2i64vNV, (GLuint index, const GLint64EXT * v), (index, v))
GEN_THUNKS(glVertexAttribL2ui64NV, (GLuint index, GLuint64EXT x, GLuint64EXT y), (index, x, y))
GEN_THUNKS(glVertexAttribL2ui64vNV, (GLuint index, const GLuint64EXT * v), (index, v))
GEN_THUNKS(glVertexAttribL3d, (GLuint index, GLdouble x, GLdouble y, GLdouble z), (index, x, y, z))
GEN_THUNKS(glVertexAttribL3dEXT, (GLuint index, GLdouble x, GLdouble y, GLdouble z), (index, x, y, z))
GEN_THUNKS(glVertexAttribL3dv, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttribL3dvEXT, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttribL3i64NV, (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z), (index, x, y, z))
GEN_THUNKS(glVertexAttribL3i64vNV, (GLuint index, const GLint64EXT * v), (index, v))
GEN_THUNKS(glVertexAttribL3ui64NV, (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z), (index, x, y, z))
GEN_THUNKS(glVertexAttribL3ui64vNV, (GLuint index, const GLuint64EXT * v), (index, v))
GEN_THUNKS(glVertexAttribL4d, (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttribL4dEXT, (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttribL4dv, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttribL4dvEXT, (GLuint index, const GLdouble * v), (index, v))
GEN_THUNKS(glVertexAttribL4i64NV, (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttribL4i64vNV, (GLuint index, const GLint64EXT * v), (index, v))
GEN_THUNKS(glVertexAttribL4ui64NV, (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w), (index, x, y, z, w))
GEN_THUNKS(glVertexAttribL4ui64vNV, (GLuint index, const GLuint64EXT * v), (index, v))
GEN_THUNKS(glVertexAttribLFormat, (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset), (attribindex, size, type, relativeoffset))
GEN_THUNKS(glVertexAttribLFormatNV, (GLuint index, GLint size, GLenum type, GLsizei stride), (index, size, type, stride))
GEN_THUNKS(glVertexAttribLPointer, (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer), (index, size, type, stride, pointer))
GEN_THUNKS(glVertexAttribLPointerEXT, (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer), (index, size, type, stride, pointer))
GEN_THUNKS(glVertexAttribP1ui, (GLuint index, GLenum type, GLboolean normalized, GLuint value), (index, type, normalized, value))
GEN_THUNKS(glVertexAttribP1uiv, (GLuint index, GLenum type, GLboolean normalized, const GLuint * value), (index, type, normalized, value))
GEN_THUNKS(glVertexAttribP2ui, (GLuint index, GLenum type, GLboolean normalized, GLuint value), (index, type, normalized, value))
GEN_THUNKS(glVertexAttribP2uiv, (GLuint index, GLenum type, GLboolean normalized, const GLuint * value), (index, type, normalized, value))
GEN_THUNKS(glVertexAttribP3ui, (GLuint index, GLenum type, GLboolean normalized, GLuint value), (index, type, normalized, value))
GEN_THUNKS(glVertexAttribP3uiv, (GLuint index, GLenum type, GLboolean normalized, const GLuint * value), (index, type, normalized, value))
GEN_THUNKS(glVertexAttribP4ui, (GLuint index, GLenum type, GLboolean normalized, GLuint value), (index, type, normalized, value))
GEN_THUNKS(glVertexAttribP4uiv, (GLuint index, GLenum type, GLboolean normalized, const GLuint * value), (index, type, normalized, value))
GEN_THUNKS(glVertexAttribParameteriAMD, (GLuint index, GLenum pname, GLint param), (index, pname, param))
GEN_THUNKS(glVertexAttribPointer, (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer), (index, size, type, normalized, stride, pointer))
GEN_THUNKS(glVertexAttribPointerARB, (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer), (index, size, type, normalized, stride, pointer))
GEN_THUNKS(glVertexAttribPointerNV, (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer), (index, fsize, type, stride, pointer))
GEN_THUNKS(glVertexAttribs1dvNV, (GLuint index, GLsizei count, const GLdouble * v), (index, count, v))
GEN_THUNKS(glVertexAttribs1fvNV, (GLuint index, GLsizei count, const GLfloat * v), (index, count, v))
GEN_THUNKS(glVertexAttribs1hvNV, (GLuint index, GLsizei n, const GLhalfNV * v), (index, n, v))
GEN_THUNKS(glVertexAttribs1svNV, (GLuint index, GLsizei count, const GLshort * v), (index, count, v))
GEN_THUNKS(glVertexAttribs2dvNV, (GLuint index, GLsizei count, const GLdouble * v), (index, count, v))
GEN_THUNKS(glVertexAttribs2fvNV, (GLuint index, GLsizei count, const GLfloat * v), (index, count, v))
GEN_THUNKS(glVertexAttribs2hvNV, (GLuint index, GLsizei n, const GLhalfNV * v), (index, n, v))
GEN_THUNKS(glVertexAttribs2svNV, (GLuint index, GLsizei count, const GLshort * v), (index, count, v))
GEN_THUNKS(glVertexAttribs3dvNV, (GLuint index, GLsizei count, const GLdouble * v), (index, count, v))
GEN_THUNKS(glVertexAttribs3fvNV, (GLuint index, GLsizei count, const GLfloat * v), (index, count, v))
GEN_THUNKS(glVertexAttribs3hvNV, (GLuint index, GLsizei n, const GLhalfNV * v), (index, n, v))
GEN_THUNKS(glVertexAttribs3svNV, (GLuint index, GLsizei count, const GLshort * v), (index, count, v))
GEN_THUNKS(glVertexAttribs4dvNV, (GLuint index, GLsizei count, const GLdouble * v), (index, count, v))
GEN_THUNKS(glVertexAttribs4fvNV, (GLuint index, GLsizei count, const GLfloat * v), (index, count, v))
GEN_THUNKS(glVertexAttribs4hvNV, (GLuint index, GLsizei n, const GLhalfNV * v), (index, n, v))
GEN_THUNKS(glVertexAttribs4svNV, (GLuint index, GLsizei count, const GLshort * v), (index, count, v))
GEN_THUNKS(glVertexAttribs4ubvNV, (GLuint index, GLsizei count, const GLubyte * v), (index, count, v))
GEN_THUNKS(glVertexBindingDivisor, (GLuint bindingindex, GLuint divisor), (bindingindex, divisor))
GEN_THUNKS(glVertexBlendARB, (GLint count), (count))
GEN_THUNKS(glVertexBlendEnvfATI, (GLenum pname, GLfloat param), (pname, param))
GEN_THUNKS(glVertexBlendEnviATI, (GLenum pname, GLint param), (pname, param))
GEN_THUNKS(glVertexFormatNV, (GLint size, GLenum type, GLsizei stride), (size, type, stride))
GEN_THUNKS(glVertexP2ui, (GLenum type, GLuint value), (type, value))
GEN_THUNKS(glVertexP2uiv, (GLenum type, const GLuint * value), (type, value))
GEN_THUNKS(glVertexP3ui, (GLenum type, GLuint value), (type, value))
GEN_THUNKS(glVertexP3uiv, (GLenum type, const GLuint * value), (type, value))
GEN_THUNKS(glVertexP4ui, (GLenum type, GLuint value), (type, value))
GEN_THUNKS(glVertexP4uiv, (GLenum type, const GLuint * value), (type, value))
GEN_THUNKS(glVertexPointer, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glVertexPointerEXT, (GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer), (size, type, stride, count, pointer))
GEN_THUNKS(glVertexPointerListIBM, (GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride), (size, type, stride, pointer, ptrstride))
GEN_THUNKS(glVertexPointervINTEL, (GLint size, GLenum type, const void ** pointer), (size, type, pointer))
GEN_THUNKS(glVertexStream1dATI, (GLenum stream, GLdouble x), (stream, x))
GEN_THUNKS(glVertexStream1dvATI, (GLenum stream, const GLdouble * coords), (stream, coords))
GEN_THUNKS(glVertexStream1fATI, (GLenum stream, GLfloat x), (stream, x))
GEN_THUNKS(glVertexStream1fvATI, (GLenum stream, const GLfloat * coords), (stream, coords))
GEN_THUNKS(glVertexStream1iATI, (GLenum stream, GLint x), (stream, x))
GEN_THUNKS(glVertexStream1ivATI, (GLenum stream, const GLint * coords), (stream, coords))
GEN_THUNKS(glVertexStream1sATI, (GLenum stream, GLshort x), (stream, x))
GEN_THUNKS(glVertexStream1svATI, (GLenum stream, const GLshort * coords), (stream, coords))
GEN_THUNKS(glVertexStream2dATI, (GLenum stream, GLdouble x, GLdouble y), (stream, x, y))
GEN_THUNKS(glVertexStream2dvATI, (GLenum stream, const GLdouble * coords), (stream, coords))
GEN_THUNKS(glVertexStream2fATI, (GLenum stream, GLfloat x, GLfloat y), (stream, x, y))
GEN_THUNKS(glVertexStream2fvATI, (GLenum stream, const GLfloat * coords), (stream, coords))
GEN_THUNKS(glVertexStream2iATI, (GLenum stream, GLint x, GLint y), (stream, x, y))
GEN_THUNKS(glVertexStream2ivATI, (GLenum stream, const GLint * coords), (stream, coords))
GEN_THUNKS(glVertexStream2sATI, (GLenum stream, GLshort x, GLshort y), (stream, x, y))
GEN_THUNKS(glVertexStream2svATI, (GLenum stream, const GLshort * coords), (stream, coords))
GEN_THUNKS(glVertexStream3dATI, (GLenum stream, GLdouble x, GLdouble y, GLdouble z), (stream, x, y, z))
GEN_THUNKS(glVertexStream3dvATI, (GLenum stream, const GLdouble * coords), (stream, coords))
GEN_THUNKS(glVertexStream3fATI, (GLenum stream, GLfloat x, GLfloat y, GLfloat z), (stream, x, y, z))
GEN_THUNKS(glVertexStream3fvATI, (GLenum stream, const GLfloat * coords), (stream, coords))
GEN_THUNKS(glVertexStream3iATI, (GLenum stream, GLint x, GLint y, GLint z), (stream, x, y, z))
GEN_THUNKS(glVertexStream3ivATI, (GLenum stream, const GLint * coords), (stream, coords))
GEN_THUNKS(glVertexStream3sATI, (GLenum stream, GLshort x, GLshort y, GLshort z), (stream, x, y, z))
GEN_THUNKS(glVertexStream3svATI, (GLenum stream, const GLshort * coords), (stream, coords))
GEN_THUNKS(glVertexStream4dATI, (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w), (stream, x, y, z, w))
GEN_THUNKS(glVertexStream4dvATI, (GLenum stream, const GLdouble * coords), (stream, coords))
GEN_THUNKS(glVertexStream4fATI, (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w), (stream, x, y, z, w))
GEN_THUNKS(glVertexStream4fvATI, (GLenum stream, const GLfloat * coords), (stream, coords))
GEN_THUNKS(glVertexStream4iATI, (GLenum stream, GLint x, GLint y, GLint z, GLint w), (stream, x, y, z, w))
GEN_THUNKS(glVertexStream4ivATI, (GLenum stream, const GLint * coords), (stream, coords))
GEN_THUNKS(glVertexStream4sATI, (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w), (stream, x, y, z, w))
GEN_THUNKS(glVertexStream4svATI, (GLenum stream, const GLshort * coords), (stream, coords))
GEN_THUNKS(glVertexWeightPointerEXT, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glVertexWeightfEXT, (GLfloat weight), (weight))
GEN_THUNKS(glVertexWeightfvEXT, (const GLfloat * weight), (weight))
GEN_THUNKS(glVertexWeighthNV, (GLhalfNV weight), (weight))
GEN_THUNKS(glVertexWeighthvNV, (const GLhalfNV * weight), (weight))
GEN_THUNKS_RET(GLenum, glVideoCaptureNV, (GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time), (video_capture_slot, sequence_num, capture_time))
GEN_THUNKS(glVideoCaptureStreamParameterdvNV, (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params), (video_capture_slot, stream, pname, params))
GEN_THUNKS(glVideoCaptureStreamParameterfvNV, (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params), (video_capture_slot, stream, pname, params))
GEN_THUNKS(glVideoCaptureStreamParameterivNV, (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params), (video_capture_slot, stream, pname, params))
GEN_THUNKS(glViewport, (GLint x, GLint y, GLsizei width, GLsizei height), (x, y, width, height))
GEN_THUNKS(glViewportArrayv, (GLuint first, GLsizei count, const GLfloat * v), (first, count, v))
GEN_THUNKS(glViewportArrayvNV, (GLuint first, GLsizei count, const GLfloat * v), (first, count, v))
GEN_THUNKS(glViewportIndexedf, (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h), (index, x, y, w, h))
GEN_THUNKS(glViewportIndexedfNV, (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h), (index, x, y, w, h))
GEN_THUNKS(glViewportIndexedfv, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glViewportIndexedfvNV, (GLuint index, const GLfloat * v), (index, v))
GEN_THUNKS(glWaitSync, (GLsync sync, GLbitfield flags, GLuint64 timeout), (sync, flags, timeout))
GEN_THUNKS(glWaitSyncAPPLE, (GLsync sync, GLbitfield flags, GLuint64 timeout), (sync, flags, timeout))
GEN_THUNKS(glWeightPathsNV, (GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights), (resultPath, numPaths, paths, weights))
GEN_THUNKS(glWeightPointerARB, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glWeightPointerOES, (GLint size, GLenum type, GLsizei stride, const void * pointer), (size, type, stride, pointer))
GEN_THUNKS(glWeightbvARB, (GLint size, const GLbyte * weights), (size, weights))
GEN_THUNKS(glWeightdvARB, (GLint size, const GLdouble * weights), (size, weights))
GEN_THUNKS(glWeightfvARB, (GLint size, const GLfloat * weights), (size, weights))
GEN_THUNKS(glWeightivARB, (GLint size, const GLint * weights), (size, weights))
GEN_THUNKS(glWeightsvARB, (GLint size, const GLshort * weights), (size, weights))
GEN_THUNKS(glWeightubvARB, (GLint size, const GLubyte * weights), (size, weights))
GEN_THUNKS(glWeightuivARB, (GLint size, const GLuint * weights), (size, weights))
GEN_THUNKS(glWeightusvARB, (GLint size, const GLushort * weights), (size, weights))
GEN_THUNKS(glWindowPos2d, (GLdouble x, GLdouble y), (x, y))
GEN_THUNKS(glWindowPos2dARB, (GLdouble x, GLdouble y), (x, y))
GEN_THUNKS(glWindowPos2dMESA, (GLdouble x, GLdouble y), (x, y))
GEN_THUNKS(glWindowPos2dv, (const GLdouble * v), (v))
GEN_THUNKS(glWindowPos2dvARB, (const GLdouble * v), (v))
GEN_THUNKS(glWindowPos2dvMESA, (const GLdouble * v), (v))
GEN_THUNKS(glWindowPos2f, (GLfloat x, GLfloat y), (x, y))
GEN_THUNKS(glWindowPos2fARB, (GLfloat x, GLfloat y), (x, y))
GEN_THUNKS(glWindowPos2fMESA, (GLfloat x, GLfloat y), (x, y))
GEN_THUNKS(glWindowPos2fv, (const GLfloat * v), (v))
GEN_THUNKS(glWindowPos2fvARB, (const GLfloat * v), (v))
GEN_THUNKS(glWindowPos2fvMESA, (const GLfloat * v), (v))
GEN_THUNKS(glWindowPos2i, (GLint x, GLint y), (x, y))
GEN_THUNKS(glWindowPos2iARB, (GLint x, GLint y), (x, y))
GEN_THUNKS(glWindowPos2iMESA, (GLint x, GLint y), (x, y))
GEN_THUNKS(glWindowPos2iv, (const GLint * v), (v))
GEN_THUNKS(glWindowPos2ivARB, (const GLint * v), (v))
GEN_THUNKS(glWindowPos2ivMESA, (const GLint * v), (v))
GEN_THUNKS(glWindowPos2s, (GLshort x, GLshort y), (x, y))
GEN_THUNKS(glWindowPos2sARB, (GLshort x, GLshort y), (x, y))
GEN_THUNKS(glWindowPos2sMESA, (GLshort x, GLshort y), (x, y))
GEN_THUNKS(glWindowPos2sv, (const GLshort * v), (v))
GEN_THUNKS(glWindowPos2svARB, (const GLshort * v), (v))
GEN_THUNKS(glWindowPos2svMESA, (const GLshort * v), (v))
GEN_THUNKS(glWindowPos3d, (GLdouble x, GLdouble y, GLdouble z), (x, y, z))
GEN_THUNKS(glWindowPos3dARB, (GLdouble x, GLdouble y, GLdouble z), (x, y, z))
GEN_THUNKS(glWindowPos3dMESA, (GLdouble x, GLdouble y, GLdouble z), (x, y, z))
GEN_THUNKS(glWindowPos3dv, (const GLdouble * v), (v))
GEN_THUNKS(glWindowPos3dvARB, (const GLdouble * v), (v))
GEN_THUNKS(glWindowPos3dvMESA, (const GLdouble * v), (v))
GEN_THUNKS(glWindowPos3f, (GLfloat x, GLfloat y, GLfloat z), (x, y, z))
GEN_THUNKS(glWindowPos3fARB, (GLfloat x, GLfloat y, GLfloat z), (x, y, z))
GEN_THUNKS(glWindowPos3fMESA, (GLfloat x, GLfloat y, GLfloat z), (x, y, z))
GEN_THUNKS(glWindowPos3fv, (const GLfloat * v), (v))
GEN_THUNKS(glWindowPos3fvARB, (const GLfloat * v), (v))
GEN_THUNKS(glWindowPos3fvMESA, (const GLfloat * v), (v))
GEN_THUNKS(glWindowPos3i, (GLint x, GLint y, GLint z), (x, y, z))
GEN_THUNKS(glWindowPos3iARB, (GLint x, GLint y, GLint z), (x, y, z))
GEN_THUNKS(glWindowPos3iMESA, (GLint x, GLint y, GLint z), (x, y, z))
GEN_THUNKS(glWindowPos3iv, (const GLint * v), (v))
GEN_THUNKS(glWindowPos3ivARB, (const GLint * v), (v))
GEN_THUNKS(glWindowPos3ivMESA, (const GLint * v), (v))
GEN_THUNKS(glWindowPos3s, (GLshort x, GLshort y, GLshort z), (x, y, z))
GEN_THUNKS(glWindowPos3sARB, (GLshort x, GLshort y, GLshort z), (x, y, z))
GEN_THUNKS(glWindowPos3sMESA, (GLshort x, GLshort y, GLshort z), (x, y, z))
GEN_THUNKS(glWindowPos3sv, (const GLshort * v), (v))
GEN_THUNKS(glWindowPos3svARB, (const GLshort * v), (v))
GEN_THUNKS(glWindowPos3svMESA, (const GLshort * v), (v))
GEN_THUNKS(glWindowPos4dMESA, (GLdouble x, GLdouble y, GLdouble z, GLdouble w), (x, y, z, w))
GEN_THUNKS(glWindowPos4dvMESA, (const GLdouble * v), (v))
GEN_THUNKS(glWindowPos4fMESA, (GLfloat x, GLfloat y, GLfloat z, GLfloat w), (x, y, z, w))
GEN_THUNKS(glWindowPos4fvMESA, (const GLfloat * v), (v))
GEN_THUNKS(glWindowPos4iMESA, (GLint x, GLint y, GLint z, GLint w), (x, y, z, w))
GEN_THUNKS(glWindowPos4ivMESA, (const GLint * v), (v))
GEN_THUNKS(glWindowPos4sMESA, (GLshort x, GLshort y, GLshort z, GLshort w), (x, y, z, w))
GEN_THUNKS(glWindowPos4svMESA, (const GLshort * v), (v))
GEN_THUNKS(glWriteMaskEXT, (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW), (res, in, outX, outY, outZ, outW))

#if USING_DISPATCH_TABLE
static struct dispatch_table resolver_table = {
    .glAccum = epoxy_glAccum_dispatch_table_rewrite_ptr,
    .glAccumxOES = epoxy_glAccumxOES_dispatch_table_rewrite_ptr,
    .glActiveProgramEXT = epoxy_glActiveProgramEXT_dispatch_table_rewrite_ptr,
    .glActiveShaderProgram = epoxy_glActiveShaderProgram_dispatch_table_rewrite_ptr,
    .glActiveShaderProgramEXT = epoxy_glActiveShaderProgramEXT_dispatch_table_rewrite_ptr,
    .glActiveStencilFaceEXT = epoxy_glActiveStencilFaceEXT_dispatch_table_rewrite_ptr,
    .glActiveTexture = epoxy_glActiveTexture_dispatch_table_rewrite_ptr,
    .glActiveTextureARB = epoxy_glActiveTextureARB_dispatch_table_rewrite_ptr,
    .glActiveVaryingNV = epoxy_glActiveVaryingNV_dispatch_table_rewrite_ptr,
    .glAlphaFragmentOp1ATI = epoxy_glAlphaFragmentOp1ATI_dispatch_table_rewrite_ptr,
    .glAlphaFragmentOp2ATI = epoxy_glAlphaFragmentOp2ATI_dispatch_table_rewrite_ptr,
    .glAlphaFragmentOp3ATI = epoxy_glAlphaFragmentOp3ATI_dispatch_table_rewrite_ptr,
    .glAlphaFunc = epoxy_glAlphaFunc_dispatch_table_rewrite_ptr,
    .glAlphaFuncQCOM = epoxy_glAlphaFuncQCOM_dispatch_table_rewrite_ptr,
    .glAlphaFuncx = epoxy_glAlphaFuncx_dispatch_table_rewrite_ptr,
    .glAlphaFuncxOES = epoxy_glAlphaFuncxOES_dispatch_table_rewrite_ptr,
    .glApplyTextureEXT = epoxy_glApplyTextureEXT_dispatch_table_rewrite_ptr,
    .glAreProgramsResidentNV = epoxy_glAreProgramsResidentNV_dispatch_table_rewrite_ptr,
    .glAreTexturesResident = epoxy_glAreTexturesResident_dispatch_table_rewrite_ptr,
    .glAreTexturesResidentEXT = epoxy_glAreTexturesResidentEXT_dispatch_table_rewrite_ptr,
    .glArrayElement = epoxy_glArrayElement_dispatch_table_rewrite_ptr,
    .glArrayElementEXT = epoxy_glArrayElementEXT_dispatch_table_rewrite_ptr,
    .glArrayObjectATI = epoxy_glArrayObjectATI_dispatch_table_rewrite_ptr,
    .glAsyncMarkerSGIX = epoxy_glAsyncMarkerSGIX_dispatch_table_rewrite_ptr,
    .glAttachObjectARB = epoxy_glAttachObjectARB_dispatch_table_rewrite_ptr,
    .glAttachShader = epoxy_glAttachShader_dispatch_table_rewrite_ptr,
    .glBegin_unwrapped = epoxy_glBegin_unwrapped_dispatch_table_rewrite_ptr,
    .glBeginConditionalRender = epoxy_glBeginConditionalRender_dispatch_table_rewrite_ptr,
    .glBeginConditionalRenderNV = epoxy_glBeginConditionalRenderNV_dispatch_table_rewrite_ptr,
    .glBeginConditionalRenderNVX = epoxy_glBeginConditionalRenderNVX_dispatch_table_rewrite_ptr,
    .glBeginFragmentShaderATI = epoxy_glBeginFragmentShaderATI_dispatch_table_rewrite_ptr,
    .glBeginOcclusionQueryNV = epoxy_glBeginOcclusionQueryNV_dispatch_table_rewrite_ptr,
    .glBeginPerfMonitorAMD = epoxy_glBeginPerfMonitorAMD_dispatch_table_rewrite_ptr,
    .glBeginPerfQueryINTEL = epoxy_glBeginPerfQueryINTEL_dispatch_table_rewrite_ptr,
    .glBeginQuery = epoxy_glBeginQuery_dispatch_table_rewrite_ptr,
    .glBeginQueryARB = epoxy_glBeginQueryARB_dispatch_table_rewrite_ptr,
    .glBeginQueryEXT = epoxy_glBeginQueryEXT_dispatch_table_rewrite_ptr,
    .glBeginQueryIndexed = epoxy_glBeginQueryIndexed_dispatch_table_rewrite_ptr,
    .glBeginTransformFeedback = epoxy_glBeginTransformFeedback_dispatch_table_rewrite_ptr,
    .glBeginTransformFeedbackEXT = epoxy_glBeginTransformFeedbackEXT_dispatch_table_rewrite_ptr,
    .glBeginTransformFeedbackNV = epoxy_glBeginTransformFeedbackNV_dispatch_table_rewrite_ptr,
    .glBeginVertexShaderEXT = epoxy_glBeginVertexShaderEXT_dispatch_table_rewrite_ptr,
    .glBeginVideoCaptureNV = epoxy_glBeginVideoCaptureNV_dispatch_table_rewrite_ptr,
    .glBindAttribLocation = epoxy_glBindAttribLocation_dispatch_table_rewrite_ptr,
    .glBindAttribLocationARB = epoxy_glBindAttribLocationARB_dispatch_table_rewrite_ptr,
    .glBindBuffer = epoxy_glBindBuffer_dispatch_table_rewrite_ptr,
    .glBindBufferARB = epoxy_glBindBufferARB_dispatch_table_rewrite_ptr,
    .glBindBufferBase = epoxy_glBindBufferBase_dispatch_table_rewrite_ptr,
    .glBindBufferBaseEXT = epoxy_glBindBufferBaseEXT_dispatch_table_rewrite_ptr,
    .glBindBufferBaseNV = epoxy_glBindBufferBaseNV_dispatch_table_rewrite_ptr,
    .glBindBufferOffsetEXT = epoxy_glBindBufferOffsetEXT_dispatch_table_rewrite_ptr,
    .glBindBufferOffsetNV = epoxy_glBindBufferOffsetNV_dispatch_table_rewrite_ptr,
    .glBindBufferRange = epoxy_glBindBufferRange_dispatch_table_rewrite_ptr,
    .glBindBufferRangeEXT = epoxy_glBindBufferRangeEXT_dispatch_table_rewrite_ptr,
    .glBindBufferRangeNV = epoxy_glBindBufferRangeNV_dispatch_table_rewrite_ptr,
    .glBindBuffersBase = epoxy_glBindBuffersBase_dispatch_table_rewrite_ptr,
    .glBindBuffersRange = epoxy_glBindBuffersRange_dispatch_table_rewrite_ptr,
    .glBindFragDataLocation = epoxy_glBindFragDataLocation_dispatch_table_rewrite_ptr,
    .glBindFragDataLocationEXT = epoxy_glBindFragDataLocationEXT_dispatch_table_rewrite_ptr,
    .glBindFragDataLocationIndexed = epoxy_glBindFragDataLocationIndexed_dispatch_table_rewrite_ptr,
    .glBindFragmentShaderATI = epoxy_glBindFragmentShaderATI_dispatch_table_rewrite_ptr,
    .glBindFramebuffer = epoxy_glBindFramebuffer_dispatch_table_rewrite_ptr,
    .glBindFramebufferEXT = epoxy_glBindFramebufferEXT_dispatch_table_rewrite_ptr,
    .glBindFramebufferOES = epoxy_glBindFramebufferOES_dispatch_table_rewrite_ptr,
    .glBindImageTexture = epoxy_glBindImageTexture_dispatch_table_rewrite_ptr,
    .glBindImageTextureEXT = epoxy_glBindImageTextureEXT_dispatch_table_rewrite_ptr,
    .glBindImageTextures = epoxy_glBindImageTextures_dispatch_table_rewrite_ptr,
    .glBindLightParameterEXT = epoxy_glBindLightParameterEXT_dispatch_table_rewrite_ptr,
    .glBindMaterialParameterEXT = epoxy_glBindMaterialParameterEXT_dispatch_table_rewrite_ptr,
    .glBindMultiTextureEXT = epoxy_glBindMultiTextureEXT_dispatch_table_rewrite_ptr,
    .glBindParameterEXT = epoxy_glBindParameterEXT_dispatch_table_rewrite_ptr,
    .glBindProgramARB = epoxy_glBindProgramARB_dispatch_table_rewrite_ptr,
    .glBindProgramNV = epoxy_glBindProgramNV_dispatch_table_rewrite_ptr,
    .glBindProgramPipeline = epoxy_glBindProgramPipeline_dispatch_table_rewrite_ptr,
    .glBindProgramPipelineEXT = epoxy_glBindProgramPipelineEXT_dispatch_table_rewrite_ptr,
    .glBindRenderbuffer = epoxy_glBindRenderbuffer_dispatch_table_rewrite_ptr,
    .glBindRenderbufferEXT = epoxy_glBindRenderbufferEXT_dispatch_table_rewrite_ptr,
    .glBindRenderbufferOES = epoxy_glBindRenderbufferOES_dispatch_table_rewrite_ptr,
    .glBindSampler = epoxy_glBindSampler_dispatch_table_rewrite_ptr,
    .glBindSamplers = epoxy_glBindSamplers_dispatch_table_rewrite_ptr,
    .glBindTexGenParameterEXT = epoxy_glBindTexGenParameterEXT_dispatch_table_rewrite_ptr,
    .glBindTexture = epoxy_glBindTexture_dispatch_table_rewrite_ptr,
    .glBindTextureEXT = epoxy_glBindTextureEXT_dispatch_table_rewrite_ptr,
    .glBindTextureUnit = epoxy_glBindTextureUnit_dispatch_table_rewrite_ptr,
    .glBindTextureUnitParameterEXT = epoxy_glBindTextureUnitParameterEXT_dispatch_table_rewrite_ptr,
    .glBindTextures = epoxy_glBindTextures_dispatch_table_rewrite_ptr,
    .glBindTransformFeedback = epoxy_glBindTransformFeedback_dispatch_table_rewrite_ptr,
    .glBindTransformFeedbackNV = epoxy_glBindTransformFeedbackNV_dispatch_table_rewrite_ptr,
    .glBindVertexArray = epoxy_glBindVertexArray_dispatch_table_rewrite_ptr,
    .glBindVertexArrayAPPLE = epoxy_glBindVertexArrayAPPLE_dispatch_table_rewrite_ptr,
    .glBindVertexArrayOES = epoxy_glBindVertexArrayOES_dispatch_table_rewrite_ptr,
    .glBindVertexBuffer = epoxy_glBindVertexBuffer_dispatch_table_rewrite_ptr,
    .glBindVertexBuffers = epoxy_glBindVertexBuffers_dispatch_table_rewrite_ptr,
    .glBindVertexShaderEXT = epoxy_glBindVertexShaderEXT_dispatch_table_rewrite_ptr,
    .glBindVideoCaptureStreamBufferNV = epoxy_glBindVideoCaptureStreamBufferNV_dispatch_table_rewrite_ptr,
    .glBindVideoCaptureStreamTextureNV = epoxy_glBindVideoCaptureStreamTextureNV_dispatch_table_rewrite_ptr,
    .glBinormal3bEXT = epoxy_glBinormal3bEXT_dispatch_table_rewrite_ptr,
    .glBinormal3bvEXT = epoxy_glBinormal3bvEXT_dispatch_table_rewrite_ptr,
    .glBinormal3dEXT = epoxy_glBinormal3dEXT_dispatch_table_rewrite_ptr,
    .glBinormal3dvEXT = epoxy_glBinormal3dvEXT_dispatch_table_rewrite_ptr,
    .glBinormal3fEXT = epoxy_glBinormal3fEXT_dispatch_table_rewrite_ptr,
    .glBinormal3fvEXT = epoxy_glBinormal3fvEXT_dispatch_table_rewrite_ptr,
    .glBinormal3iEXT = epoxy_glBinormal3iEXT_dispatch_table_rewrite_ptr,
    .glBinormal3ivEXT = epoxy_glBinormal3ivEXT_dispatch_table_rewrite_ptr,
    .glBinormal3sEXT = epoxy_glBinormal3sEXT_dispatch_table_rewrite_ptr,
    .glBinormal3svEXT = epoxy_glBinormal3svEXT_dispatch_table_rewrite_ptr,
    .glBinormalPointerEXT = epoxy_glBinormalPointerEXT_dispatch_table_rewrite_ptr,
    .glBitmap = epoxy_glBitmap_dispatch_table_rewrite_ptr,
    .glBitmapxOES = epoxy_glBitmapxOES_dispatch_table_rewrite_ptr,
    .glBlendBarrierKHR = epoxy_glBlendBarrierKHR_dispatch_table_rewrite_ptr,
    .glBlendBarrierNV = epoxy_glBlendBarrierNV_dispatch_table_rewrite_ptr,
    .glBlendColor = epoxy_glBlendColor_dispatch_table_rewrite_ptr,
    .glBlendColorEXT = epoxy_glBlendColorEXT_dispatch_table_rewrite_ptr,
    .glBlendColorxOES = epoxy_glBlendColorxOES_dispatch_table_rewrite_ptr,
    .glBlendEquation = epoxy_glBlendEquation_dispatch_table_rewrite_ptr,
    .glBlendEquationEXT = epoxy_glBlendEquationEXT_dispatch_table_rewrite_ptr,
    .glBlendEquationIndexedAMD = epoxy_glBlendEquationIndexedAMD_dispatch_table_rewrite_ptr,
    .glBlendEquationOES = epoxy_glBlendEquationOES_dispatch_table_rewrite_ptr,
    .glBlendEquationSeparate = epoxy_glBlendEquationSeparate_dispatch_table_rewrite_ptr,
    .glBlendEquationSeparateEXT = epoxy_glBlendEquationSeparateEXT_dispatch_table_rewrite_ptr,
    .glBlendEquationSeparateIndexedAMD = epoxy_glBlendEquationSeparateIndexedAMD_dispatch_table_rewrite_ptr,
    .glBlendEquationSeparateOES = epoxy_glBlendEquationSeparateOES_dispatch_table_rewrite_ptr,
    .glBlendEquationSeparatei = epoxy_glBlendEquationSeparatei_dispatch_table_rewrite_ptr,
    .glBlendEquationSeparateiARB = epoxy_glBlendEquationSeparateiARB_dispatch_table_rewrite_ptr,
    .glBlendEquationSeparateiEXT = epoxy_glBlendEquationSeparateiEXT_dispatch_table_rewrite_ptr,
    .glBlendEquationSeparateiOES = epoxy_glBlendEquationSeparateiOES_dispatch_table_rewrite_ptr,
    .glBlendEquationi = epoxy_glBlendEquationi_dispatch_table_rewrite_ptr,
    .glBlendEquationiARB = epoxy_glBlendEquationiARB_dispatch_table_rewrite_ptr,
    .glBlendEquationiEXT = epoxy_glBlendEquationiEXT_dispatch_table_rewrite_ptr,
    .glBlendEquationiOES = epoxy_glBlendEquationiOES_dispatch_table_rewrite_ptr,
    .glBlendFunc = epoxy_glBlendFunc_dispatch_table_rewrite_ptr,
    .glBlendFuncIndexedAMD = epoxy_glBlendFuncIndexedAMD_dispatch_table_rewrite_ptr,
    .glBlendFuncSeparate = epoxy_glBlendFuncSeparate_dispatch_table_rewrite_ptr,
    .glBlendFuncSeparateEXT = epoxy_glBlendFuncSeparateEXT_dispatch_table_rewrite_ptr,
    .glBlendFuncSeparateINGR = epoxy_glBlendFuncSeparateINGR_dispatch_table_rewrite_ptr,
    .glBlendFuncSeparateIndexedAMD = epoxy_glBlendFuncSeparateIndexedAMD_dispatch_table_rewrite_ptr,
    .glBlendFuncSeparateOES = epoxy_glBlendFuncSeparateOES_dispatch_table_rewrite_ptr,
    .glBlendFuncSeparatei = epoxy_glBlendFuncSeparatei_dispatch_table_rewrite_ptr,
    .glBlendFuncSeparateiARB = epoxy_glBlendFuncSeparateiARB_dispatch_table_rewrite_ptr,
    .glBlendFuncSeparateiEXT = epoxy_glBlendFuncSeparateiEXT_dispatch_table_rewrite_ptr,
    .glBlendFuncSeparateiOES = epoxy_glBlendFuncSeparateiOES_dispatch_table_rewrite_ptr,
    .glBlendFunci = epoxy_glBlendFunci_dispatch_table_rewrite_ptr,
    .glBlendFunciARB = epoxy_glBlendFunciARB_dispatch_table_rewrite_ptr,
    .glBlendFunciEXT = epoxy_glBlendFunciEXT_dispatch_table_rewrite_ptr,
    .glBlendFunciOES = epoxy_glBlendFunciOES_dispatch_table_rewrite_ptr,
    .glBlendParameteriNV = epoxy_glBlendParameteriNV_dispatch_table_rewrite_ptr,
    .glBlitFramebuffer = epoxy_glBlitFramebuffer_dispatch_table_rewrite_ptr,
    .glBlitFramebufferANGLE = epoxy_glBlitFramebufferANGLE_dispatch_table_rewrite_ptr,
    .glBlitFramebufferEXT = epoxy_glBlitFramebufferEXT_dispatch_table_rewrite_ptr,
    .glBlitFramebufferNV = epoxy_glBlitFramebufferNV_dispatch_table_rewrite_ptr,
    .glBlitNamedFramebuffer = epoxy_glBlitNamedFramebuffer_dispatch_table_rewrite_ptr,
    .glBufferAddressRangeNV = epoxy_glBufferAddressRangeNV_dispatch_table_rewrite_ptr,
    .glBufferData = epoxy_glBufferData_dispatch_table_rewrite_ptr,
    .glBufferDataARB = epoxy_glBufferDataARB_dispatch_table_rewrite_ptr,
    .glBufferPageCommitmentARB = epoxy_glBufferPageCommitmentARB_dispatch_table_rewrite_ptr,
    .glBufferParameteriAPPLE = epoxy_glBufferParameteriAPPLE_dispatch_table_rewrite_ptr,
    .glBufferStorage = epoxy_glBufferStorage_dispatch_table_rewrite_ptr,
    .glBufferStorageEXT = epoxy_glBufferStorageEXT_dispatch_table_rewrite_ptr,
    .glBufferSubData = epoxy_glBufferSubData_dispatch_table_rewrite_ptr,
    .glBufferSubDataARB = epoxy_glBufferSubDataARB_dispatch_table_rewrite_ptr,
    .glCallCommandListNV = epoxy_glCallCommandListNV_dispatch_table_rewrite_ptr,
    .glCallList = epoxy_glCallList_dispatch_table_rewrite_ptr,
    .glCallLists = epoxy_glCallLists_dispatch_table_rewrite_ptr,
    .glCheckFramebufferStatus = epoxy_glCheckFramebufferStatus_dispatch_table_rewrite_ptr,
    .glCheckFramebufferStatusEXT = epoxy_glCheckFramebufferStatusEXT_dispatch_table_rewrite_ptr,
    .glCheckFramebufferStatusOES = epoxy_glCheckFramebufferStatusOES_dispatch_table_rewrite_ptr,
    .glCheckNamedFramebufferStatus = epoxy_glCheckNamedFramebufferStatus_dispatch_table_rewrite_ptr,
    .glCheckNamedFramebufferStatusEXT = epoxy_glCheckNamedFramebufferStatusEXT_dispatch_table_rewrite_ptr,
    .glClampColor = epoxy_glClampColor_dispatch_table_rewrite_ptr,
    .glClampColorARB = epoxy_glClampColorARB_dispatch_table_rewrite_ptr,
    .glClear = epoxy_glClear_dispatch_table_rewrite_ptr,
    .glClearAccum = epoxy_glClearAccum_dispatch_table_rewrite_ptr,
    .glClearAccumxOES = epoxy_glClearAccumxOES_dispatch_table_rewrite_ptr,
    .glClearBufferData = epoxy_glClearBufferData_dispatch_table_rewrite_ptr,
    .glClearBufferSubData = epoxy_glClearBufferSubData_dispatch_table_rewrite_ptr,
    .glClearBufferfi = epoxy_glClearBufferfi_dispatch_table_rewrite_ptr,
    .glClearBufferfv = epoxy_glClearBufferfv_dispatch_table_rewrite_ptr,
    .glClearBufferiv = epoxy_glClearBufferiv_dispatch_table_rewrite_ptr,
    .glClearBufferuiv = epoxy_glClearBufferuiv_dispatch_table_rewrite_ptr,
    .glClearColor = epoxy_glClearColor_dispatch_table_rewrite_ptr,
    .glClearColorIiEXT = epoxy_glClearColorIiEXT_dispatch_table_rewrite_ptr,
    .glClearColorIuiEXT = epoxy_glClearColorIuiEXT_dispatch_table_rewrite_ptr,
    .glClearColorx = epoxy_glClearColorx_dispatch_table_rewrite_ptr,
    .glClearColorxOES = epoxy_glClearColorxOES_dispatch_table_rewrite_ptr,
    .glClearDepth = epoxy_glClearDepth_dispatch_table_rewrite_ptr,
    .glClearDepthdNV = epoxy_glClearDepthdNV_dispatch_table_rewrite_ptr,
    .glClearDepthf = epoxy_glClearDepthf_dispatch_table_rewrite_ptr,
    .glClearDepthfOES = epoxy_glClearDepthfOES_dispatch_table_rewrite_ptr,
    .glClearDepthx = epoxy_glClearDepthx_dispatch_table_rewrite_ptr,
    .glClearDepthxOES = epoxy_glClearDepthxOES_dispatch_table_rewrite_ptr,
    .glClearIndex = epoxy_glClearIndex_dispatch_table_rewrite_ptr,
    .glClearNamedBufferData = epoxy_glClearNamedBufferData_dispatch_table_rewrite_ptr,
    .glClearNamedBufferDataEXT = epoxy_glClearNamedBufferDataEXT_dispatch_table_rewrite_ptr,
    .glClearNamedBufferSubData = epoxy_glClearNamedBufferSubData_dispatch_table_rewrite_ptr,
    .glClearNamedBufferSubDataEXT = epoxy_glClearNamedBufferSubDataEXT_dispatch_table_rewrite_ptr,
    .glClearNamedFramebufferfi = epoxy_glClearNamedFramebufferfi_dispatch_table_rewrite_ptr,
    .glClearNamedFramebufferfv = epoxy_glClearNamedFramebufferfv_dispatch_table_rewrite_ptr,
    .glClearNamedFramebufferiv = epoxy_glClearNamedFramebufferiv_dispatch_table_rewrite_ptr,
    .glClearNamedFramebufferuiv = epoxy_glClearNamedFramebufferuiv_dispatch_table_rewrite_ptr,
    .glClearStencil = epoxy_glClearStencil_dispatch_table_rewrite_ptr,
    .glClearTexImage = epoxy_glClearTexImage_dispatch_table_rewrite_ptr,
    .glClearTexSubImage = epoxy_glClearTexSubImage_dispatch_table_rewrite_ptr,
    .glClientActiveTexture = epoxy_glClientActiveTexture_dispatch_table_rewrite_ptr,
    .glClientActiveTextureARB = epoxy_glClientActiveTextureARB_dispatch_table_rewrite_ptr,
    .glClientActiveVertexStreamATI = epoxy_glClientActiveVertexStreamATI_dispatch_table_rewrite_ptr,
    .glClientAttribDefaultEXT = epoxy_glClientAttribDefaultEXT_dispatch_table_rewrite_ptr,
    .glClientWaitSync = epoxy_glClientWaitSync_dispatch_table_rewrite_ptr,
    .glClientWaitSyncAPPLE = epoxy_glClientWaitSyncAPPLE_dispatch_table_rewrite_ptr,
    .glClipControl = epoxy_glClipControl_dispatch_table_rewrite_ptr,
    .glClipPlane = epoxy_glClipPlane_dispatch_table_rewrite_ptr,
    .glClipPlanef = epoxy_glClipPlanef_dispatch_table_rewrite_ptr,
    .glClipPlanefIMG = epoxy_glClipPlanefIMG_dispatch_table_rewrite_ptr,
    .glClipPlanefOES = epoxy_glClipPlanefOES_dispatch_table_rewrite_ptr,
    .glClipPlanex = epoxy_glClipPlanex_dispatch_table_rewrite_ptr,
    .glClipPlanexIMG = epoxy_glClipPlanexIMG_dispatch_table_rewrite_ptr,
    .glClipPlanexOES = epoxy_glClipPlanexOES_dispatch_table_rewrite_ptr,
    .glColor3b = epoxy_glColor3b_dispatch_table_rewrite_ptr,
    .glColor3bv = epoxy_glColor3bv_dispatch_table_rewrite_ptr,
    .glColor3d = epoxy_glColor3d_dispatch_table_rewrite_ptr,
    .glColor3dv = epoxy_glColor3dv_dispatch_table_rewrite_ptr,
    .glColor3f = epoxy_glColor3f_dispatch_table_rewrite_ptr,
    .glColor3fVertex3fSUN = epoxy_glColor3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glColor3fVertex3fvSUN = epoxy_glColor3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glColor3fv = epoxy_glColor3fv_dispatch_table_rewrite_ptr,
    .glColor3hNV = epoxy_glColor3hNV_dispatch_table_rewrite_ptr,
    .glColor3hvNV = epoxy_glColor3hvNV_dispatch_table_rewrite_ptr,
    .glColor3i = epoxy_glColor3i_dispatch_table_rewrite_ptr,
    .glColor3iv = epoxy_glColor3iv_dispatch_table_rewrite_ptr,
    .glColor3s = epoxy_glColor3s_dispatch_table_rewrite_ptr,
    .glColor3sv = epoxy_glColor3sv_dispatch_table_rewrite_ptr,
    .glColor3ub = epoxy_glColor3ub_dispatch_table_rewrite_ptr,
    .glColor3ubv = epoxy_glColor3ubv_dispatch_table_rewrite_ptr,
    .glColor3ui = epoxy_glColor3ui_dispatch_table_rewrite_ptr,
    .glColor3uiv = epoxy_glColor3uiv_dispatch_table_rewrite_ptr,
    .glColor3us = epoxy_glColor3us_dispatch_table_rewrite_ptr,
    .glColor3usv = epoxy_glColor3usv_dispatch_table_rewrite_ptr,
    .glColor3xOES = epoxy_glColor3xOES_dispatch_table_rewrite_ptr,
    .glColor3xvOES = epoxy_glColor3xvOES_dispatch_table_rewrite_ptr,
    .glColor4b = epoxy_glColor4b_dispatch_table_rewrite_ptr,
    .glColor4bv = epoxy_glColor4bv_dispatch_table_rewrite_ptr,
    .glColor4d = epoxy_glColor4d_dispatch_table_rewrite_ptr,
    .glColor4dv = epoxy_glColor4dv_dispatch_table_rewrite_ptr,
    .glColor4f = epoxy_glColor4f_dispatch_table_rewrite_ptr,
    .glColor4fNormal3fVertex3fSUN = epoxy_glColor4fNormal3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glColor4fNormal3fVertex3fvSUN = epoxy_glColor4fNormal3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glColor4fv = epoxy_glColor4fv_dispatch_table_rewrite_ptr,
    .glColor4hNV = epoxy_glColor4hNV_dispatch_table_rewrite_ptr,
    .glColor4hvNV = epoxy_glColor4hvNV_dispatch_table_rewrite_ptr,
    .glColor4i = epoxy_glColor4i_dispatch_table_rewrite_ptr,
    .glColor4iv = epoxy_glColor4iv_dispatch_table_rewrite_ptr,
    .glColor4s = epoxy_glColor4s_dispatch_table_rewrite_ptr,
    .glColor4sv = epoxy_glColor4sv_dispatch_table_rewrite_ptr,
    .glColor4ub = epoxy_glColor4ub_dispatch_table_rewrite_ptr,
    .glColor4ubVertex2fSUN = epoxy_glColor4ubVertex2fSUN_dispatch_table_rewrite_ptr,
    .glColor4ubVertex2fvSUN = epoxy_glColor4ubVertex2fvSUN_dispatch_table_rewrite_ptr,
    .glColor4ubVertex3fSUN = epoxy_glColor4ubVertex3fSUN_dispatch_table_rewrite_ptr,
    .glColor4ubVertex3fvSUN = epoxy_glColor4ubVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glColor4ubv = epoxy_glColor4ubv_dispatch_table_rewrite_ptr,
    .glColor4ui = epoxy_glColor4ui_dispatch_table_rewrite_ptr,
    .glColor4uiv = epoxy_glColor4uiv_dispatch_table_rewrite_ptr,
    .glColor4us = epoxy_glColor4us_dispatch_table_rewrite_ptr,
    .glColor4usv = epoxy_glColor4usv_dispatch_table_rewrite_ptr,
    .glColor4x = epoxy_glColor4x_dispatch_table_rewrite_ptr,
    .glColor4xOES = epoxy_glColor4xOES_dispatch_table_rewrite_ptr,
    .glColor4xvOES = epoxy_glColor4xvOES_dispatch_table_rewrite_ptr,
    .glColorFormatNV = epoxy_glColorFormatNV_dispatch_table_rewrite_ptr,
    .glColorFragmentOp1ATI = epoxy_glColorFragmentOp1ATI_dispatch_table_rewrite_ptr,
    .glColorFragmentOp2ATI = epoxy_glColorFragmentOp2ATI_dispatch_table_rewrite_ptr,
    .glColorFragmentOp3ATI = epoxy_glColorFragmentOp3ATI_dispatch_table_rewrite_ptr,
    .glColorMask = epoxy_glColorMask_dispatch_table_rewrite_ptr,
    .glColorMaskIndexedEXT = epoxy_glColorMaskIndexedEXT_dispatch_table_rewrite_ptr,
    .glColorMaski = epoxy_glColorMaski_dispatch_table_rewrite_ptr,
    .glColorMaskiEXT = epoxy_glColorMaskiEXT_dispatch_table_rewrite_ptr,
    .glColorMaskiOES = epoxy_glColorMaskiOES_dispatch_table_rewrite_ptr,
    .glColorMaterial = epoxy_glColorMaterial_dispatch_table_rewrite_ptr,
    .glColorP3ui = epoxy_glColorP3ui_dispatch_table_rewrite_ptr,
    .glColorP3uiv = epoxy_glColorP3uiv_dispatch_table_rewrite_ptr,
    .glColorP4ui = epoxy_glColorP4ui_dispatch_table_rewrite_ptr,
    .glColorP4uiv = epoxy_glColorP4uiv_dispatch_table_rewrite_ptr,
    .glColorPointer = epoxy_glColorPointer_dispatch_table_rewrite_ptr,
    .glColorPointerEXT = epoxy_glColorPointerEXT_dispatch_table_rewrite_ptr,
    .glColorPointerListIBM = epoxy_glColorPointerListIBM_dispatch_table_rewrite_ptr,
    .glColorPointervINTEL = epoxy_glColorPointervINTEL_dispatch_table_rewrite_ptr,
    .glColorSubTable = epoxy_glColorSubTable_dispatch_table_rewrite_ptr,
    .glColorSubTableEXT = epoxy_glColorSubTableEXT_dispatch_table_rewrite_ptr,
    .glColorTable = epoxy_glColorTable_dispatch_table_rewrite_ptr,
    .glColorTableEXT = epoxy_glColorTableEXT_dispatch_table_rewrite_ptr,
    .glColorTableParameterfv = epoxy_glColorTableParameterfv_dispatch_table_rewrite_ptr,
    .glColorTableParameterfvSGI = epoxy_glColorTableParameterfvSGI_dispatch_table_rewrite_ptr,
    .glColorTableParameteriv = epoxy_glColorTableParameteriv_dispatch_table_rewrite_ptr,
    .glColorTableParameterivSGI = epoxy_glColorTableParameterivSGI_dispatch_table_rewrite_ptr,
    .glColorTableSGI = epoxy_glColorTableSGI_dispatch_table_rewrite_ptr,
    .glCombinerInputNV = epoxy_glCombinerInputNV_dispatch_table_rewrite_ptr,
    .glCombinerOutputNV = epoxy_glCombinerOutputNV_dispatch_table_rewrite_ptr,
    .glCombinerParameterfNV = epoxy_glCombinerParameterfNV_dispatch_table_rewrite_ptr,
    .glCombinerParameterfvNV = epoxy_glCombinerParameterfvNV_dispatch_table_rewrite_ptr,
    .glCombinerParameteriNV = epoxy_glCombinerParameteriNV_dispatch_table_rewrite_ptr,
    .glCombinerParameterivNV = epoxy_glCombinerParameterivNV_dispatch_table_rewrite_ptr,
    .glCombinerStageParameterfvNV = epoxy_glCombinerStageParameterfvNV_dispatch_table_rewrite_ptr,
    .glCommandListSegmentsNV = epoxy_glCommandListSegmentsNV_dispatch_table_rewrite_ptr,
    .glCompileCommandListNV = epoxy_glCompileCommandListNV_dispatch_table_rewrite_ptr,
    .glCompileShader = epoxy_glCompileShader_dispatch_table_rewrite_ptr,
    .glCompileShaderARB = epoxy_glCompileShaderARB_dispatch_table_rewrite_ptr,
    .glCompileShaderIncludeARB = epoxy_glCompileShaderIncludeARB_dispatch_table_rewrite_ptr,
    .glCompressedMultiTexImage1DEXT = epoxy_glCompressedMultiTexImage1DEXT_dispatch_table_rewrite_ptr,
    .glCompressedMultiTexImage2DEXT = epoxy_glCompressedMultiTexImage2DEXT_dispatch_table_rewrite_ptr,
    .glCompressedMultiTexImage3DEXT = epoxy_glCompressedMultiTexImage3DEXT_dispatch_table_rewrite_ptr,
    .glCompressedMultiTexSubImage1DEXT = epoxy_glCompressedMultiTexSubImage1DEXT_dispatch_table_rewrite_ptr,
    .glCompressedMultiTexSubImage2DEXT = epoxy_glCompressedMultiTexSubImage2DEXT_dispatch_table_rewrite_ptr,
    .glCompressedMultiTexSubImage3DEXT = epoxy_glCompressedMultiTexSubImage3DEXT_dispatch_table_rewrite_ptr,
    .glCompressedTexImage1D = epoxy_glCompressedTexImage1D_dispatch_table_rewrite_ptr,
    .glCompressedTexImage1DARB = epoxy_glCompressedTexImage1DARB_dispatch_table_rewrite_ptr,
    .glCompressedTexImage2D = epoxy_glCompressedTexImage2D_dispatch_table_rewrite_ptr,
    .glCompressedTexImage2DARB = epoxy_glCompressedTexImage2DARB_dispatch_table_rewrite_ptr,
    .glCompressedTexImage3D = epoxy_glCompressedTexImage3D_dispatch_table_rewrite_ptr,
    .glCompressedTexImage3DARB = epoxy_glCompressedTexImage3DARB_dispatch_table_rewrite_ptr,
    .glCompressedTexImage3DOES = epoxy_glCompressedTexImage3DOES_dispatch_table_rewrite_ptr,
    .glCompressedTexSubImage1D = epoxy_glCompressedTexSubImage1D_dispatch_table_rewrite_ptr,
    .glCompressedTexSubImage1DARB = epoxy_glCompressedTexSubImage1DARB_dispatch_table_rewrite_ptr,
    .glCompressedTexSubImage2D = epoxy_glCompressedTexSubImage2D_dispatch_table_rewrite_ptr,
    .glCompressedTexSubImage2DARB = epoxy_glCompressedTexSubImage2DARB_dispatch_table_rewrite_ptr,
    .glCompressedTexSubImage3D = epoxy_glCompressedTexSubImage3D_dispatch_table_rewrite_ptr,
    .glCompressedTexSubImage3DARB = epoxy_glCompressedTexSubImage3DARB_dispatch_table_rewrite_ptr,
    .glCompressedTexSubImage3DOES = epoxy_glCompressedTexSubImage3DOES_dispatch_table_rewrite_ptr,
    .glCompressedTextureImage1DEXT = epoxy_glCompressedTextureImage1DEXT_dispatch_table_rewrite_ptr,
    .glCompressedTextureImage2DEXT = epoxy_glCompressedTextureImage2DEXT_dispatch_table_rewrite_ptr,
    .glCompressedTextureImage3DEXT = epoxy_glCompressedTextureImage3DEXT_dispatch_table_rewrite_ptr,
    .glCompressedTextureSubImage1D = epoxy_glCompressedTextureSubImage1D_dispatch_table_rewrite_ptr,
    .glCompressedTextureSubImage1DEXT = epoxy_glCompressedTextureSubImage1DEXT_dispatch_table_rewrite_ptr,
    .glCompressedTextureSubImage2D = epoxy_glCompressedTextureSubImage2D_dispatch_table_rewrite_ptr,
    .glCompressedTextureSubImage2DEXT = epoxy_glCompressedTextureSubImage2DEXT_dispatch_table_rewrite_ptr,
    .glCompressedTextureSubImage3D = epoxy_glCompressedTextureSubImage3D_dispatch_table_rewrite_ptr,
    .glCompressedTextureSubImage3DEXT = epoxy_glCompressedTextureSubImage3DEXT_dispatch_table_rewrite_ptr,
    .glConvolutionFilter1D = epoxy_glConvolutionFilter1D_dispatch_table_rewrite_ptr,
    .glConvolutionFilter1DEXT = epoxy_glConvolutionFilter1DEXT_dispatch_table_rewrite_ptr,
    .glConvolutionFilter2D = epoxy_glConvolutionFilter2D_dispatch_table_rewrite_ptr,
    .glConvolutionFilter2DEXT = epoxy_glConvolutionFilter2DEXT_dispatch_table_rewrite_ptr,
    .glConvolutionParameterf = epoxy_glConvolutionParameterf_dispatch_table_rewrite_ptr,
    .glConvolutionParameterfEXT = epoxy_glConvolutionParameterfEXT_dispatch_table_rewrite_ptr,
    .glConvolutionParameterfv = epoxy_glConvolutionParameterfv_dispatch_table_rewrite_ptr,
    .glConvolutionParameterfvEXT = epoxy_glConvolutionParameterfvEXT_dispatch_table_rewrite_ptr,
    .glConvolutionParameteri = epoxy_glConvolutionParameteri_dispatch_table_rewrite_ptr,
    .glConvolutionParameteriEXT = epoxy_glConvolutionParameteriEXT_dispatch_table_rewrite_ptr,
    .glConvolutionParameteriv = epoxy_glConvolutionParameteriv_dispatch_table_rewrite_ptr,
    .glConvolutionParameterivEXT = epoxy_glConvolutionParameterivEXT_dispatch_table_rewrite_ptr,
    .glConvolutionParameterxOES = epoxy_glConvolutionParameterxOES_dispatch_table_rewrite_ptr,
    .glConvolutionParameterxvOES = epoxy_glConvolutionParameterxvOES_dispatch_table_rewrite_ptr,
    .glCopyBufferSubData = epoxy_glCopyBufferSubData_dispatch_table_rewrite_ptr,
    .glCopyBufferSubDataNV = epoxy_glCopyBufferSubDataNV_dispatch_table_rewrite_ptr,
    .glCopyColorSubTable = epoxy_glCopyColorSubTable_dispatch_table_rewrite_ptr,
    .glCopyColorSubTableEXT = epoxy_glCopyColorSubTableEXT_dispatch_table_rewrite_ptr,
    .glCopyColorTable = epoxy_glCopyColorTable_dispatch_table_rewrite_ptr,
    .glCopyColorTableSGI = epoxy_glCopyColorTableSGI_dispatch_table_rewrite_ptr,
    .glCopyConvolutionFilter1D = epoxy_glCopyConvolutionFilter1D_dispatch_table_rewrite_ptr,
    .glCopyConvolutionFilter1DEXT = epoxy_glCopyConvolutionFilter1DEXT_dispatch_table_rewrite_ptr,
    .glCopyConvolutionFilter2D = epoxy_glCopyConvolutionFilter2D_dispatch_table_rewrite_ptr,
    .glCopyConvolutionFilter2DEXT = epoxy_glCopyConvolutionFilter2DEXT_dispatch_table_rewrite_ptr,
    .glCopyImageSubData = epoxy_glCopyImageSubData_dispatch_table_rewrite_ptr,
    .glCopyImageSubDataEXT = epoxy_glCopyImageSubDataEXT_dispatch_table_rewrite_ptr,
    .glCopyImageSubDataNV = epoxy_glCopyImageSubDataNV_dispatch_table_rewrite_ptr,
    .glCopyImageSubDataOES = epoxy_glCopyImageSubDataOES_dispatch_table_rewrite_ptr,
    .glCopyMultiTexImage1DEXT = epoxy_glCopyMultiTexImage1DEXT_dispatch_table_rewrite_ptr,
    .glCopyMultiTexImage2DEXT = epoxy_glCopyMultiTexImage2DEXT_dispatch_table_rewrite_ptr,
    .glCopyMultiTexSubImage1DEXT = epoxy_glCopyMultiTexSubImage1DEXT_dispatch_table_rewrite_ptr,
    .glCopyMultiTexSubImage2DEXT = epoxy_glCopyMultiTexSubImage2DEXT_dispatch_table_rewrite_ptr,
    .glCopyMultiTexSubImage3DEXT = epoxy_glCopyMultiTexSubImage3DEXT_dispatch_table_rewrite_ptr,
    .glCopyNamedBufferSubData = epoxy_glCopyNamedBufferSubData_dispatch_table_rewrite_ptr,
    .glCopyPathNV = epoxy_glCopyPathNV_dispatch_table_rewrite_ptr,
    .glCopyPixels = epoxy_glCopyPixels_dispatch_table_rewrite_ptr,
    .glCopyTexImage1D = epoxy_glCopyTexImage1D_dispatch_table_rewrite_ptr,
    .glCopyTexImage1DEXT = epoxy_glCopyTexImage1DEXT_dispatch_table_rewrite_ptr,
    .glCopyTexImage2D = epoxy_glCopyTexImage2D_dispatch_table_rewrite_ptr,
    .glCopyTexImage2DEXT = epoxy_glCopyTexImage2DEXT_dispatch_table_rewrite_ptr,
    .glCopyTexSubImage1D = epoxy_glCopyTexSubImage1D_dispatch_table_rewrite_ptr,
    .glCopyTexSubImage1DEXT = epoxy_glCopyTexSubImage1DEXT_dispatch_table_rewrite_ptr,
    .glCopyTexSubImage2D = epoxy_glCopyTexSubImage2D_dispatch_table_rewrite_ptr,
    .glCopyTexSubImage2DEXT = epoxy_glCopyTexSubImage2DEXT_dispatch_table_rewrite_ptr,
    .glCopyTexSubImage3D = epoxy_glCopyTexSubImage3D_dispatch_table_rewrite_ptr,
    .glCopyTexSubImage3DEXT = epoxy_glCopyTexSubImage3DEXT_dispatch_table_rewrite_ptr,
    .glCopyTexSubImage3DOES = epoxy_glCopyTexSubImage3DOES_dispatch_table_rewrite_ptr,
    .glCopyTextureImage1DEXT = epoxy_glCopyTextureImage1DEXT_dispatch_table_rewrite_ptr,
    .glCopyTextureImage2DEXT = epoxy_glCopyTextureImage2DEXT_dispatch_table_rewrite_ptr,
    .glCopyTextureLevelsAPPLE = epoxy_glCopyTextureLevelsAPPLE_dispatch_table_rewrite_ptr,
    .glCopyTextureSubImage1D = epoxy_glCopyTextureSubImage1D_dispatch_table_rewrite_ptr,
    .glCopyTextureSubImage1DEXT = epoxy_glCopyTextureSubImage1DEXT_dispatch_table_rewrite_ptr,
    .glCopyTextureSubImage2D = epoxy_glCopyTextureSubImage2D_dispatch_table_rewrite_ptr,
    .glCopyTextureSubImage2DEXT = epoxy_glCopyTextureSubImage2DEXT_dispatch_table_rewrite_ptr,
    .glCopyTextureSubImage3D = epoxy_glCopyTextureSubImage3D_dispatch_table_rewrite_ptr,
    .glCopyTextureSubImage3DEXT = epoxy_glCopyTextureSubImage3DEXT_dispatch_table_rewrite_ptr,
    .glCoverFillPathInstancedNV = epoxy_glCoverFillPathInstancedNV_dispatch_table_rewrite_ptr,
    .glCoverFillPathNV = epoxy_glCoverFillPathNV_dispatch_table_rewrite_ptr,
    .glCoverStrokePathInstancedNV = epoxy_glCoverStrokePathInstancedNV_dispatch_table_rewrite_ptr,
    .glCoverStrokePathNV = epoxy_glCoverStrokePathNV_dispatch_table_rewrite_ptr,
    .glCoverageMaskNV = epoxy_glCoverageMaskNV_dispatch_table_rewrite_ptr,
    .glCoverageModulationNV = epoxy_glCoverageModulationNV_dispatch_table_rewrite_ptr,
    .glCoverageModulationTableNV = epoxy_glCoverageModulationTableNV_dispatch_table_rewrite_ptr,
    .glCoverageOperationNV = epoxy_glCoverageOperationNV_dispatch_table_rewrite_ptr,
    .glCreateBuffers = epoxy_glCreateBuffers_dispatch_table_rewrite_ptr,
    .glCreateCommandListsNV = epoxy_glCreateCommandListsNV_dispatch_table_rewrite_ptr,
    .glCreateFramebuffers = epoxy_glCreateFramebuffers_dispatch_table_rewrite_ptr,
    .glCreatePerfQueryINTEL = epoxy_glCreatePerfQueryINTEL_dispatch_table_rewrite_ptr,
    .glCreateProgram = epoxy_glCreateProgram_dispatch_table_rewrite_ptr,
    .glCreateProgramObjectARB = epoxy_glCreateProgramObjectARB_dispatch_table_rewrite_ptr,
    .glCreateProgramPipelines = epoxy_glCreateProgramPipelines_dispatch_table_rewrite_ptr,
    .glCreateQueries = epoxy_glCreateQueries_dispatch_table_rewrite_ptr,
    .glCreateRenderbuffers = epoxy_glCreateRenderbuffers_dispatch_table_rewrite_ptr,
    .glCreateSamplers = epoxy_glCreateSamplers_dispatch_table_rewrite_ptr,
    .glCreateShader = epoxy_glCreateShader_dispatch_table_rewrite_ptr,
    .glCreateShaderObjectARB = epoxy_glCreateShaderObjectARB_dispatch_table_rewrite_ptr,
    .glCreateShaderProgramEXT = epoxy_glCreateShaderProgramEXT_dispatch_table_rewrite_ptr,
    .glCreateShaderProgramv = epoxy_glCreateShaderProgramv_dispatch_table_rewrite_ptr,
    .glCreateShaderProgramvEXT = epoxy_glCreateShaderProgramvEXT_dispatch_table_rewrite_ptr,
    .glCreateStatesNV = epoxy_glCreateStatesNV_dispatch_table_rewrite_ptr,
    .glCreateSyncFromCLeventARB = epoxy_glCreateSyncFromCLeventARB_dispatch_table_rewrite_ptr,
    .glCreateTextures = epoxy_glCreateTextures_dispatch_table_rewrite_ptr,
    .glCreateTransformFeedbacks = epoxy_glCreateTransformFeedbacks_dispatch_table_rewrite_ptr,
    .glCreateVertexArrays = epoxy_glCreateVertexArrays_dispatch_table_rewrite_ptr,
    .glCullFace = epoxy_glCullFace_dispatch_table_rewrite_ptr,
    .glCullParameterdvEXT = epoxy_glCullParameterdvEXT_dispatch_table_rewrite_ptr,
    .glCullParameterfvEXT = epoxy_glCullParameterfvEXT_dispatch_table_rewrite_ptr,
    .glCurrentPaletteMatrixARB = epoxy_glCurrentPaletteMatrixARB_dispatch_table_rewrite_ptr,
    .glCurrentPaletteMatrixOES = epoxy_glCurrentPaletteMatrixOES_dispatch_table_rewrite_ptr,
    .glDebugMessageCallback = epoxy_glDebugMessageCallback_dispatch_table_rewrite_ptr,
    .glDebugMessageCallbackAMD = epoxy_glDebugMessageCallbackAMD_dispatch_table_rewrite_ptr,
    .glDebugMessageCallbackARB = epoxy_glDebugMessageCallbackARB_dispatch_table_rewrite_ptr,
    .glDebugMessageCallbackKHR = epoxy_glDebugMessageCallbackKHR_dispatch_table_rewrite_ptr,
    .glDebugMessageControl = epoxy_glDebugMessageControl_dispatch_table_rewrite_ptr,
    .glDebugMessageControlARB = epoxy_glDebugMessageControlARB_dispatch_table_rewrite_ptr,
    .glDebugMessageControlKHR = epoxy_glDebugMessageControlKHR_dispatch_table_rewrite_ptr,
    .glDebugMessageEnableAMD = epoxy_glDebugMessageEnableAMD_dispatch_table_rewrite_ptr,
    .glDebugMessageInsert = epoxy_glDebugMessageInsert_dispatch_table_rewrite_ptr,
    .glDebugMessageInsertAMD = epoxy_glDebugMessageInsertAMD_dispatch_table_rewrite_ptr,
    .glDebugMessageInsertARB = epoxy_glDebugMessageInsertARB_dispatch_table_rewrite_ptr,
    .glDebugMessageInsertKHR = epoxy_glDebugMessageInsertKHR_dispatch_table_rewrite_ptr,
    .glDeformSGIX = epoxy_glDeformSGIX_dispatch_table_rewrite_ptr,
    .glDeformationMap3dSGIX = epoxy_glDeformationMap3dSGIX_dispatch_table_rewrite_ptr,
    .glDeformationMap3fSGIX = epoxy_glDeformationMap3fSGIX_dispatch_table_rewrite_ptr,
    .glDeleteAsyncMarkersSGIX = epoxy_glDeleteAsyncMarkersSGIX_dispatch_table_rewrite_ptr,
    .glDeleteBuffers = epoxy_glDeleteBuffers_dispatch_table_rewrite_ptr,
    .glDeleteBuffersARB = epoxy_glDeleteBuffersARB_dispatch_table_rewrite_ptr,
    .glDeleteCommandListsNV = epoxy_glDeleteCommandListsNV_dispatch_table_rewrite_ptr,
    .glDeleteFencesAPPLE = epoxy_glDeleteFencesAPPLE_dispatch_table_rewrite_ptr,
    .glDeleteFencesNV = epoxy_glDeleteFencesNV_dispatch_table_rewrite_ptr,
    .glDeleteFragmentShaderATI = epoxy_glDeleteFragmentShaderATI_dispatch_table_rewrite_ptr,
    .glDeleteFramebuffers = epoxy_glDeleteFramebuffers_dispatch_table_rewrite_ptr,
    .glDeleteFramebuffersEXT = epoxy_glDeleteFramebuffersEXT_dispatch_table_rewrite_ptr,
    .glDeleteFramebuffersOES = epoxy_glDeleteFramebuffersOES_dispatch_table_rewrite_ptr,
    .glDeleteLists = epoxy_glDeleteLists_dispatch_table_rewrite_ptr,
    .glDeleteNamedStringARB = epoxy_glDeleteNamedStringARB_dispatch_table_rewrite_ptr,
    .glDeleteNamesAMD = epoxy_glDeleteNamesAMD_dispatch_table_rewrite_ptr,
    .glDeleteObjectARB = epoxy_glDeleteObjectARB_dispatch_table_rewrite_ptr,
    .glDeleteOcclusionQueriesNV = epoxy_glDeleteOcclusionQueriesNV_dispatch_table_rewrite_ptr,
    .glDeletePathsNV = epoxy_glDeletePathsNV_dispatch_table_rewrite_ptr,
    .glDeletePerfMonitorsAMD = epoxy_glDeletePerfMonitorsAMD_dispatch_table_rewrite_ptr,
    .glDeletePerfQueryINTEL = epoxy_glDeletePerfQueryINTEL_dispatch_table_rewrite_ptr,
    .glDeleteProgram = epoxy_glDeleteProgram_dispatch_table_rewrite_ptr,
    .glDeleteProgramPipelines = epoxy_glDeleteProgramPipelines_dispatch_table_rewrite_ptr,
    .glDeleteProgramPipelinesEXT = epoxy_glDeleteProgramPipelinesEXT_dispatch_table_rewrite_ptr,
    .glDeleteProgramsARB = epoxy_glDeleteProgramsARB_dispatch_table_rewrite_ptr,
    .glDeleteProgramsNV = epoxy_glDeleteProgramsNV_dispatch_table_rewrite_ptr,
    .glDeleteQueries = epoxy_glDeleteQueries_dispatch_table_rewrite_ptr,
    .glDeleteQueriesARB = epoxy_glDeleteQueriesARB_dispatch_table_rewrite_ptr,
    .glDeleteQueriesEXT = epoxy_glDeleteQueriesEXT_dispatch_table_rewrite_ptr,
    .glDeleteRenderbuffers = epoxy_glDeleteRenderbuffers_dispatch_table_rewrite_ptr,
    .glDeleteRenderbuffersEXT = epoxy_glDeleteRenderbuffersEXT_dispatch_table_rewrite_ptr,
    .glDeleteRenderbuffersOES = epoxy_glDeleteRenderbuffersOES_dispatch_table_rewrite_ptr,
    .glDeleteSamplers = epoxy_glDeleteSamplers_dispatch_table_rewrite_ptr,
    .glDeleteShader = epoxy_glDeleteShader_dispatch_table_rewrite_ptr,
    .glDeleteStatesNV = epoxy_glDeleteStatesNV_dispatch_table_rewrite_ptr,
    .glDeleteSync = epoxy_glDeleteSync_dispatch_table_rewrite_ptr,
    .glDeleteSyncAPPLE = epoxy_glDeleteSyncAPPLE_dispatch_table_rewrite_ptr,
    .glDeleteTextures = epoxy_glDeleteTextures_dispatch_table_rewrite_ptr,
    .glDeleteTexturesEXT = epoxy_glDeleteTexturesEXT_dispatch_table_rewrite_ptr,
    .glDeleteTransformFeedbacks = epoxy_glDeleteTransformFeedbacks_dispatch_table_rewrite_ptr,
    .glDeleteTransformFeedbacksNV = epoxy_glDeleteTransformFeedbacksNV_dispatch_table_rewrite_ptr,
    .glDeleteVertexArrays = epoxy_glDeleteVertexArrays_dispatch_table_rewrite_ptr,
    .glDeleteVertexArraysAPPLE = epoxy_glDeleteVertexArraysAPPLE_dispatch_table_rewrite_ptr,
    .glDeleteVertexArraysOES = epoxy_glDeleteVertexArraysOES_dispatch_table_rewrite_ptr,
    .glDeleteVertexShaderEXT = epoxy_glDeleteVertexShaderEXT_dispatch_table_rewrite_ptr,
    .glDepthBoundsEXT = epoxy_glDepthBoundsEXT_dispatch_table_rewrite_ptr,
    .glDepthBoundsdNV = epoxy_glDepthBoundsdNV_dispatch_table_rewrite_ptr,
    .glDepthFunc = epoxy_glDepthFunc_dispatch_table_rewrite_ptr,
    .glDepthMask = epoxy_glDepthMask_dispatch_table_rewrite_ptr,
    .glDepthRange = epoxy_glDepthRange_dispatch_table_rewrite_ptr,
    .glDepthRangeArrayfvNV = epoxy_glDepthRangeArrayfvNV_dispatch_table_rewrite_ptr,
    .glDepthRangeArrayv = epoxy_glDepthRangeArrayv_dispatch_table_rewrite_ptr,
    .glDepthRangeIndexed = epoxy_glDepthRangeIndexed_dispatch_table_rewrite_ptr,
    .glDepthRangeIndexedfNV = epoxy_glDepthRangeIndexedfNV_dispatch_table_rewrite_ptr,
    .glDepthRangedNV = epoxy_glDepthRangedNV_dispatch_table_rewrite_ptr,
    .glDepthRangef = epoxy_glDepthRangef_dispatch_table_rewrite_ptr,
    .glDepthRangefOES = epoxy_glDepthRangefOES_dispatch_table_rewrite_ptr,
    .glDepthRangex = epoxy_glDepthRangex_dispatch_table_rewrite_ptr,
    .glDepthRangexOES = epoxy_glDepthRangexOES_dispatch_table_rewrite_ptr,
    .glDetachObjectARB = epoxy_glDetachObjectARB_dispatch_table_rewrite_ptr,
    .glDetachShader = epoxy_glDetachShader_dispatch_table_rewrite_ptr,
    .glDetailTexFuncSGIS = epoxy_glDetailTexFuncSGIS_dispatch_table_rewrite_ptr,
    .glDisable = epoxy_glDisable_dispatch_table_rewrite_ptr,
    .glDisableClientState = epoxy_glDisableClientState_dispatch_table_rewrite_ptr,
    .glDisableClientStateIndexedEXT = epoxy_glDisableClientStateIndexedEXT_dispatch_table_rewrite_ptr,
    .glDisableClientStateiEXT = epoxy_glDisableClientStateiEXT_dispatch_table_rewrite_ptr,
    .glDisableDriverControlQCOM = epoxy_glDisableDriverControlQCOM_dispatch_table_rewrite_ptr,
    .glDisableIndexedEXT = epoxy_glDisableIndexedEXT_dispatch_table_rewrite_ptr,
    .glDisableVariantClientStateEXT = epoxy_glDisableVariantClientStateEXT_dispatch_table_rewrite_ptr,
    .glDisableVertexArrayAttrib = epoxy_glDisableVertexArrayAttrib_dispatch_table_rewrite_ptr,
    .glDisableVertexArrayAttribEXT = epoxy_glDisableVertexArrayAttribEXT_dispatch_table_rewrite_ptr,
    .glDisableVertexArrayEXT = epoxy_glDisableVertexArrayEXT_dispatch_table_rewrite_ptr,
    .glDisableVertexAttribAPPLE = epoxy_glDisableVertexAttribAPPLE_dispatch_table_rewrite_ptr,
    .glDisableVertexAttribArray = epoxy_glDisableVertexAttribArray_dispatch_table_rewrite_ptr,
    .glDisableVertexAttribArrayARB = epoxy_glDisableVertexAttribArrayARB_dispatch_table_rewrite_ptr,
    .glDisablei = epoxy_glDisablei_dispatch_table_rewrite_ptr,
    .glDisableiEXT = epoxy_glDisableiEXT_dispatch_table_rewrite_ptr,
    .glDisableiNV = epoxy_glDisableiNV_dispatch_table_rewrite_ptr,
    .glDisableiOES = epoxy_glDisableiOES_dispatch_table_rewrite_ptr,
    .glDiscardFramebufferEXT = epoxy_glDiscardFramebufferEXT_dispatch_table_rewrite_ptr,
    .glDispatchCompute = epoxy_glDispatchCompute_dispatch_table_rewrite_ptr,
    .glDispatchComputeGroupSizeARB = epoxy_glDispatchComputeGroupSizeARB_dispatch_table_rewrite_ptr,
    .glDispatchComputeIndirect = epoxy_glDispatchComputeIndirect_dispatch_table_rewrite_ptr,
    .glDrawArrays = epoxy_glDrawArrays_dispatch_table_rewrite_ptr,
    .glDrawArraysEXT = epoxy_glDrawArraysEXT_dispatch_table_rewrite_ptr,
    .glDrawArraysIndirect = epoxy_glDrawArraysIndirect_dispatch_table_rewrite_ptr,
    .glDrawArraysInstanced = epoxy_glDrawArraysInstanced_dispatch_table_rewrite_ptr,
    .glDrawArraysInstancedANGLE = epoxy_glDrawArraysInstancedANGLE_dispatch_table_rewrite_ptr,
    .glDrawArraysInstancedARB = epoxy_glDrawArraysInstancedARB_dispatch_table_rewrite_ptr,
    .glDrawArraysInstancedBaseInstance = epoxy_glDrawArraysInstancedBaseInstance_dispatch_table_rewrite_ptr,
    .glDrawArraysInstancedBaseInstanceEXT = epoxy_glDrawArraysInstancedBaseInstanceEXT_dispatch_table_rewrite_ptr,
    .glDrawArraysInstancedEXT = epoxy_glDrawArraysInstancedEXT_dispatch_table_rewrite_ptr,
    .glDrawArraysInstancedNV = epoxy_glDrawArraysInstancedNV_dispatch_table_rewrite_ptr,
    .glDrawBuffer = epoxy_glDrawBuffer_dispatch_table_rewrite_ptr,
    .glDrawBuffers = epoxy_glDrawBuffers_dispatch_table_rewrite_ptr,
    .glDrawBuffersARB = epoxy_glDrawBuffersARB_dispatch_table_rewrite_ptr,
    .glDrawBuffersATI = epoxy_glDrawBuffersATI_dispatch_table_rewrite_ptr,
    .glDrawBuffersEXT = epoxy_glDrawBuffersEXT_dispatch_table_rewrite_ptr,
    .glDrawBuffersIndexedEXT = epoxy_glDrawBuffersIndexedEXT_dispatch_table_rewrite_ptr,
    .glDrawBuffersNV = epoxy_glDrawBuffersNV_dispatch_table_rewrite_ptr,
    .glDrawCommandsAddressNV = epoxy_glDrawCommandsAddressNV_dispatch_table_rewrite_ptr,
    .glDrawCommandsNV = epoxy_glDrawCommandsNV_dispatch_table_rewrite_ptr,
    .glDrawCommandsStatesAddressNV = epoxy_glDrawCommandsStatesAddressNV_dispatch_table_rewrite_ptr,
    .glDrawCommandsStatesNV = epoxy_glDrawCommandsStatesNV_dispatch_table_rewrite_ptr,
    .glDrawElementArrayAPPLE = epoxy_glDrawElementArrayAPPLE_dispatch_table_rewrite_ptr,
    .glDrawElementArrayATI = epoxy_glDrawElementArrayATI_dispatch_table_rewrite_ptr,
    .glDrawElements = epoxy_glDrawElements_dispatch_table_rewrite_ptr,
    .glDrawElementsBaseVertex = epoxy_glDrawElementsBaseVertex_dispatch_table_rewrite_ptr,
    .glDrawElementsBaseVertexEXT = epoxy_glDrawElementsBaseVertexEXT_dispatch_table_rewrite_ptr,
    .glDrawElementsBaseVertexOES = epoxy_glDrawElementsBaseVertexOES_dispatch_table_rewrite_ptr,
    .glDrawElementsIndirect = epoxy_glDrawElementsIndirect_dispatch_table_rewrite_ptr,
    .glDrawElementsInstanced = epoxy_glDrawElementsInstanced_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedANGLE = epoxy_glDrawElementsInstancedANGLE_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedARB = epoxy_glDrawElementsInstancedARB_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedBaseInstance = epoxy_glDrawElementsInstancedBaseInstance_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedBaseInstanceEXT = epoxy_glDrawElementsInstancedBaseInstanceEXT_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedBaseVertex = epoxy_glDrawElementsInstancedBaseVertex_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedBaseVertexBaseInstance = epoxy_glDrawElementsInstancedBaseVertexBaseInstance_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedBaseVertexBaseInstanceEXT = epoxy_glDrawElementsInstancedBaseVertexBaseInstanceEXT_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedBaseVertexEXT = epoxy_glDrawElementsInstancedBaseVertexEXT_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedBaseVertexOES = epoxy_glDrawElementsInstancedBaseVertexOES_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedEXT = epoxy_glDrawElementsInstancedEXT_dispatch_table_rewrite_ptr,
    .glDrawElementsInstancedNV = epoxy_glDrawElementsInstancedNV_dispatch_table_rewrite_ptr,
    .glDrawMeshArraysSUN = epoxy_glDrawMeshArraysSUN_dispatch_table_rewrite_ptr,
    .glDrawPixels = epoxy_glDrawPixels_dispatch_table_rewrite_ptr,
    .glDrawRangeElementArrayAPPLE = epoxy_glDrawRangeElementArrayAPPLE_dispatch_table_rewrite_ptr,
    .glDrawRangeElementArrayATI = epoxy_glDrawRangeElementArrayATI_dispatch_table_rewrite_ptr,
    .glDrawRangeElements = epoxy_glDrawRangeElements_dispatch_table_rewrite_ptr,
    .glDrawRangeElementsBaseVertex = epoxy_glDrawRangeElementsBaseVertex_dispatch_table_rewrite_ptr,
    .glDrawRangeElementsBaseVertexEXT = epoxy_glDrawRangeElementsBaseVertexEXT_dispatch_table_rewrite_ptr,
    .glDrawRangeElementsBaseVertexOES = epoxy_glDrawRangeElementsBaseVertexOES_dispatch_table_rewrite_ptr,
    .glDrawRangeElementsEXT = epoxy_glDrawRangeElementsEXT_dispatch_table_rewrite_ptr,
    .glDrawTexfOES = epoxy_glDrawTexfOES_dispatch_table_rewrite_ptr,
    .glDrawTexfvOES = epoxy_glDrawTexfvOES_dispatch_table_rewrite_ptr,
    .glDrawTexiOES = epoxy_glDrawTexiOES_dispatch_table_rewrite_ptr,
    .glDrawTexivOES = epoxy_glDrawTexivOES_dispatch_table_rewrite_ptr,
    .glDrawTexsOES = epoxy_glDrawTexsOES_dispatch_table_rewrite_ptr,
    .glDrawTexsvOES = epoxy_glDrawTexsvOES_dispatch_table_rewrite_ptr,
    .glDrawTextureNV = epoxy_glDrawTextureNV_dispatch_table_rewrite_ptr,
    .glDrawTexxOES = epoxy_glDrawTexxOES_dispatch_table_rewrite_ptr,
    .glDrawTexxvOES = epoxy_glDrawTexxvOES_dispatch_table_rewrite_ptr,
    .glDrawTransformFeedback = epoxy_glDrawTransformFeedback_dispatch_table_rewrite_ptr,
    .glDrawTransformFeedbackInstanced = epoxy_glDrawTransformFeedbackInstanced_dispatch_table_rewrite_ptr,
    .glDrawTransformFeedbackNV = epoxy_glDrawTransformFeedbackNV_dispatch_table_rewrite_ptr,
    .glDrawTransformFeedbackStream = epoxy_glDrawTransformFeedbackStream_dispatch_table_rewrite_ptr,
    .glDrawTransformFeedbackStreamInstanced = epoxy_glDrawTransformFeedbackStreamInstanced_dispatch_table_rewrite_ptr,
    .glEGLImageTargetRenderbufferStorageOES = epoxy_glEGLImageTargetRenderbufferStorageOES_dispatch_table_rewrite_ptr,
    .glEGLImageTargetTexture2DOES = epoxy_glEGLImageTargetTexture2DOES_dispatch_table_rewrite_ptr,
    .glEdgeFlag = epoxy_glEdgeFlag_dispatch_table_rewrite_ptr,
    .glEdgeFlagFormatNV = epoxy_glEdgeFlagFormatNV_dispatch_table_rewrite_ptr,
    .glEdgeFlagPointer = epoxy_glEdgeFlagPointer_dispatch_table_rewrite_ptr,
    .glEdgeFlagPointerEXT = epoxy_glEdgeFlagPointerEXT_dispatch_table_rewrite_ptr,
    .glEdgeFlagPointerListIBM = epoxy_glEdgeFlagPointerListIBM_dispatch_table_rewrite_ptr,
    .glEdgeFlagv = epoxy_glEdgeFlagv_dispatch_table_rewrite_ptr,
    .glElementPointerAPPLE = epoxy_glElementPointerAPPLE_dispatch_table_rewrite_ptr,
    .glElementPointerATI = epoxy_glElementPointerATI_dispatch_table_rewrite_ptr,
    .glEnable = epoxy_glEnable_dispatch_table_rewrite_ptr,
    .glEnableClientState = epoxy_glEnableClientState_dispatch_table_rewrite_ptr,
    .glEnableClientStateIndexedEXT = epoxy_glEnableClientStateIndexedEXT_dispatch_table_rewrite_ptr,
    .glEnableClientStateiEXT = epoxy_glEnableClientStateiEXT_dispatch_table_rewrite_ptr,
    .glEnableDriverControlQCOM = epoxy_glEnableDriverControlQCOM_dispatch_table_rewrite_ptr,
    .glEnableIndexedEXT = epoxy_glEnableIndexedEXT_dispatch_table_rewrite_ptr,
    .glEnableVariantClientStateEXT = epoxy_glEnableVariantClientStateEXT_dispatch_table_rewrite_ptr,
    .glEnableVertexArrayAttrib = epoxy_glEnableVertexArrayAttrib_dispatch_table_rewrite_ptr,
    .glEnableVertexArrayAttribEXT = epoxy_glEnableVertexArrayAttribEXT_dispatch_table_rewrite_ptr,
    .glEnableVertexArrayEXT = epoxy_glEnableVertexArrayEXT_dispatch_table_rewrite_ptr,
    .glEnableVertexAttribAPPLE = epoxy_glEnableVertexAttribAPPLE_dispatch_table_rewrite_ptr,
    .glEnableVertexAttribArray = epoxy_glEnableVertexAttribArray_dispatch_table_rewrite_ptr,
    .glEnableVertexAttribArrayARB = epoxy_glEnableVertexAttribArrayARB_dispatch_table_rewrite_ptr,
    .glEnablei = epoxy_glEnablei_dispatch_table_rewrite_ptr,
    .glEnableiEXT = epoxy_glEnableiEXT_dispatch_table_rewrite_ptr,
    .glEnableiNV = epoxy_glEnableiNV_dispatch_table_rewrite_ptr,
    .glEnableiOES = epoxy_glEnableiOES_dispatch_table_rewrite_ptr,
    .glEnd_unwrapped = epoxy_glEnd_unwrapped_dispatch_table_rewrite_ptr,
    .glEndConditionalRender = epoxy_glEndConditionalRender_dispatch_table_rewrite_ptr,
    .glEndConditionalRenderNV = epoxy_glEndConditionalRenderNV_dispatch_table_rewrite_ptr,
    .glEndConditionalRenderNVX = epoxy_glEndConditionalRenderNVX_dispatch_table_rewrite_ptr,
    .glEndFragmentShaderATI = epoxy_glEndFragmentShaderATI_dispatch_table_rewrite_ptr,
    .glEndList = epoxy_glEndList_dispatch_table_rewrite_ptr,
    .glEndOcclusionQueryNV = epoxy_glEndOcclusionQueryNV_dispatch_table_rewrite_ptr,
    .glEndPerfMonitorAMD = epoxy_glEndPerfMonitorAMD_dispatch_table_rewrite_ptr,
    .glEndPerfQueryINTEL = epoxy_glEndPerfQueryINTEL_dispatch_table_rewrite_ptr,
    .glEndQuery = epoxy_glEndQuery_dispatch_table_rewrite_ptr,
    .glEndQueryARB = epoxy_glEndQueryARB_dispatch_table_rewrite_ptr,
    .glEndQueryEXT = epoxy_glEndQueryEXT_dispatch_table_rewrite_ptr,
    .glEndQueryIndexed = epoxy_glEndQueryIndexed_dispatch_table_rewrite_ptr,
    .glEndTilingQCOM = epoxy_glEndTilingQCOM_dispatch_table_rewrite_ptr,
    .glEndTransformFeedback = epoxy_glEndTransformFeedback_dispatch_table_rewrite_ptr,
    .glEndTransformFeedbackEXT = epoxy_glEndTransformFeedbackEXT_dispatch_table_rewrite_ptr,
    .glEndTransformFeedbackNV = epoxy_glEndTransformFeedbackNV_dispatch_table_rewrite_ptr,
    .glEndVertexShaderEXT = epoxy_glEndVertexShaderEXT_dispatch_table_rewrite_ptr,
    .glEndVideoCaptureNV = epoxy_glEndVideoCaptureNV_dispatch_table_rewrite_ptr,
    .glEvalCoord1d = epoxy_glEvalCoord1d_dispatch_table_rewrite_ptr,
    .glEvalCoord1dv = epoxy_glEvalCoord1dv_dispatch_table_rewrite_ptr,
    .glEvalCoord1f = epoxy_glEvalCoord1f_dispatch_table_rewrite_ptr,
    .glEvalCoord1fv = epoxy_glEvalCoord1fv_dispatch_table_rewrite_ptr,
    .glEvalCoord1xOES = epoxy_glEvalCoord1xOES_dispatch_table_rewrite_ptr,
    .glEvalCoord1xvOES = epoxy_glEvalCoord1xvOES_dispatch_table_rewrite_ptr,
    .glEvalCoord2d = epoxy_glEvalCoord2d_dispatch_table_rewrite_ptr,
    .glEvalCoord2dv = epoxy_glEvalCoord2dv_dispatch_table_rewrite_ptr,
    .glEvalCoord2f = epoxy_glEvalCoord2f_dispatch_table_rewrite_ptr,
    .glEvalCoord2fv = epoxy_glEvalCoord2fv_dispatch_table_rewrite_ptr,
    .glEvalCoord2xOES = epoxy_glEvalCoord2xOES_dispatch_table_rewrite_ptr,
    .glEvalCoord2xvOES = epoxy_glEvalCoord2xvOES_dispatch_table_rewrite_ptr,
    .glEvalMapsNV = epoxy_glEvalMapsNV_dispatch_table_rewrite_ptr,
    .glEvalMesh1 = epoxy_glEvalMesh1_dispatch_table_rewrite_ptr,
    .glEvalMesh2 = epoxy_glEvalMesh2_dispatch_table_rewrite_ptr,
    .glEvalPoint1 = epoxy_glEvalPoint1_dispatch_table_rewrite_ptr,
    .glEvalPoint2 = epoxy_glEvalPoint2_dispatch_table_rewrite_ptr,
    .glExecuteProgramNV = epoxy_glExecuteProgramNV_dispatch_table_rewrite_ptr,
    .glExtGetBufferPointervQCOM = epoxy_glExtGetBufferPointervQCOM_dispatch_table_rewrite_ptr,
    .glExtGetBuffersQCOM = epoxy_glExtGetBuffersQCOM_dispatch_table_rewrite_ptr,
    .glExtGetFramebuffersQCOM = epoxy_glExtGetFramebuffersQCOM_dispatch_table_rewrite_ptr,
    .glExtGetProgramBinarySourceQCOM = epoxy_glExtGetProgramBinarySourceQCOM_dispatch_table_rewrite_ptr,
    .glExtGetProgramsQCOM = epoxy_glExtGetProgramsQCOM_dispatch_table_rewrite_ptr,
    .glExtGetRenderbuffersQCOM = epoxy_glExtGetRenderbuffersQCOM_dispatch_table_rewrite_ptr,
    .glExtGetShadersQCOM = epoxy_glExtGetShadersQCOM_dispatch_table_rewrite_ptr,
    .glExtGetTexLevelParameterivQCOM = epoxy_glExtGetTexLevelParameterivQCOM_dispatch_table_rewrite_ptr,
    .glExtGetTexSubImageQCOM = epoxy_glExtGetTexSubImageQCOM_dispatch_table_rewrite_ptr,
    .glExtGetTexturesQCOM = epoxy_glExtGetTexturesQCOM_dispatch_table_rewrite_ptr,
    .glExtIsProgramBinaryQCOM = epoxy_glExtIsProgramBinaryQCOM_dispatch_table_rewrite_ptr,
    .glExtTexObjectStateOverrideiQCOM = epoxy_glExtTexObjectStateOverrideiQCOM_dispatch_table_rewrite_ptr,
    .glExtractComponentEXT = epoxy_glExtractComponentEXT_dispatch_table_rewrite_ptr,
    .glFeedbackBuffer = epoxy_glFeedbackBuffer_dispatch_table_rewrite_ptr,
    .glFeedbackBufferxOES = epoxy_glFeedbackBufferxOES_dispatch_table_rewrite_ptr,
    .glFenceSync = epoxy_glFenceSync_dispatch_table_rewrite_ptr,
    .glFenceSyncAPPLE = epoxy_glFenceSyncAPPLE_dispatch_table_rewrite_ptr,
    .glFinalCombinerInputNV = epoxy_glFinalCombinerInputNV_dispatch_table_rewrite_ptr,
    .glFinish = epoxy_glFinish_dispatch_table_rewrite_ptr,
    .glFinishAsyncSGIX = epoxy_glFinishAsyncSGIX_dispatch_table_rewrite_ptr,
    .glFinishFenceAPPLE = epoxy_glFinishFenceAPPLE_dispatch_table_rewrite_ptr,
    .glFinishFenceNV = epoxy_glFinishFenceNV_dispatch_table_rewrite_ptr,
    .glFinishObjectAPPLE = epoxy_glFinishObjectAPPLE_dispatch_table_rewrite_ptr,
    .glFinishTextureSUNX = epoxy_glFinishTextureSUNX_dispatch_table_rewrite_ptr,
    .glFlush = epoxy_glFlush_dispatch_table_rewrite_ptr,
    .glFlushMappedBufferRange = epoxy_glFlushMappedBufferRange_dispatch_table_rewrite_ptr,
    .glFlushMappedBufferRangeAPPLE = epoxy_glFlushMappedBufferRangeAPPLE_dispatch_table_rewrite_ptr,
    .glFlushMappedBufferRangeEXT = epoxy_glFlushMappedBufferRangeEXT_dispatch_table_rewrite_ptr,
    .glFlushMappedNamedBufferRange = epoxy_glFlushMappedNamedBufferRange_dispatch_table_rewrite_ptr,
    .glFlushMappedNamedBufferRangeEXT = epoxy_glFlushMappedNamedBufferRangeEXT_dispatch_table_rewrite_ptr,
    .glFlushPixelDataRangeNV = epoxy_glFlushPixelDataRangeNV_dispatch_table_rewrite_ptr,
    .glFlushRasterSGIX = epoxy_glFlushRasterSGIX_dispatch_table_rewrite_ptr,
    .glFlushStaticDataIBM = epoxy_glFlushStaticDataIBM_dispatch_table_rewrite_ptr,
    .glFlushVertexArrayRangeAPPLE = epoxy_glFlushVertexArrayRangeAPPLE_dispatch_table_rewrite_ptr,
    .glFlushVertexArrayRangeNV = epoxy_glFlushVertexArrayRangeNV_dispatch_table_rewrite_ptr,
    .glFogCoordFormatNV = epoxy_glFogCoordFormatNV_dispatch_table_rewrite_ptr,
    .glFogCoordPointer = epoxy_glFogCoordPointer_dispatch_table_rewrite_ptr,
    .glFogCoordPointerEXT = epoxy_glFogCoordPointerEXT_dispatch_table_rewrite_ptr,
    .glFogCoordPointerListIBM = epoxy_glFogCoordPointerListIBM_dispatch_table_rewrite_ptr,
    .glFogCoordd = epoxy_glFogCoordd_dispatch_table_rewrite_ptr,
    .glFogCoorddEXT = epoxy_glFogCoorddEXT_dispatch_table_rewrite_ptr,
    .glFogCoorddv = epoxy_glFogCoorddv_dispatch_table_rewrite_ptr,
    .glFogCoorddvEXT = epoxy_glFogCoorddvEXT_dispatch_table_rewrite_ptr,
    .glFogCoordf = epoxy_glFogCoordf_dispatch_table_rewrite_ptr,
    .glFogCoordfEXT = epoxy_glFogCoordfEXT_dispatch_table_rewrite_ptr,
    .glFogCoordfv = epoxy_glFogCoordfv_dispatch_table_rewrite_ptr,
    .glFogCoordfvEXT = epoxy_glFogCoordfvEXT_dispatch_table_rewrite_ptr,
    .glFogCoordhNV = epoxy_glFogCoordhNV_dispatch_table_rewrite_ptr,
    .glFogCoordhvNV = epoxy_glFogCoordhvNV_dispatch_table_rewrite_ptr,
    .glFogFuncSGIS = epoxy_glFogFuncSGIS_dispatch_table_rewrite_ptr,
    .glFogf = epoxy_glFogf_dispatch_table_rewrite_ptr,
    .glFogfv = epoxy_glFogfv_dispatch_table_rewrite_ptr,
    .glFogi = epoxy_glFogi_dispatch_table_rewrite_ptr,
    .glFogiv = epoxy_glFogiv_dispatch_table_rewrite_ptr,
    .glFogx = epoxy_glFogx_dispatch_table_rewrite_ptr,
    .glFogxOES = epoxy_glFogxOES_dispatch_table_rewrite_ptr,
    .glFogxv = epoxy_glFogxv_dispatch_table_rewrite_ptr,
    .glFogxvOES = epoxy_glFogxvOES_dispatch_table_rewrite_ptr,
    .glFragmentColorMaterialSGIX = epoxy_glFragmentColorMaterialSGIX_dispatch_table_rewrite_ptr,
    .glFragmentCoverageColorNV = epoxy_glFragmentCoverageColorNV_dispatch_table_rewrite_ptr,
    .glFragmentLightModelfSGIX = epoxy_glFragmentLightModelfSGIX_dispatch_table_rewrite_ptr,
    .glFragmentLightModelfvSGIX = epoxy_glFragmentLightModelfvSGIX_dispatch_table_rewrite_ptr,
    .glFragmentLightModeliSGIX = epoxy_glFragmentLightModeliSGIX_dispatch_table_rewrite_ptr,
    .glFragmentLightModelivSGIX = epoxy_glFragmentLightModelivSGIX_dispatch_table_rewrite_ptr,
    .glFragmentLightfSGIX = epoxy_glFragmentLightfSGIX_dispatch_table_rewrite_ptr,
    .glFragmentLightfvSGIX = epoxy_glFragmentLightfvSGIX_dispatch_table_rewrite_ptr,
    .glFragmentLightiSGIX = epoxy_glFragmentLightiSGIX_dispatch_table_rewrite_ptr,
    .glFragmentLightivSGIX = epoxy_glFragmentLightivSGIX_dispatch_table_rewrite_ptr,
    .glFragmentMaterialfSGIX = epoxy_glFragmentMaterialfSGIX_dispatch_table_rewrite_ptr,
    .glFragmentMaterialfvSGIX = epoxy_glFragmentMaterialfvSGIX_dispatch_table_rewrite_ptr,
    .glFragmentMaterialiSGIX = epoxy_glFragmentMaterialiSGIX_dispatch_table_rewrite_ptr,
    .glFragmentMaterialivSGIX = epoxy_glFragmentMaterialivSGIX_dispatch_table_rewrite_ptr,
    .glFrameTerminatorGREMEDY = epoxy_glFrameTerminatorGREMEDY_dispatch_table_rewrite_ptr,
    .glFrameZoomSGIX = epoxy_glFrameZoomSGIX_dispatch_table_rewrite_ptr,
    .glFramebufferDrawBufferEXT = epoxy_glFramebufferDrawBufferEXT_dispatch_table_rewrite_ptr,
    .glFramebufferDrawBuffersEXT = epoxy_glFramebufferDrawBuffersEXT_dispatch_table_rewrite_ptr,
    .glFramebufferParameteri = epoxy_glFramebufferParameteri_dispatch_table_rewrite_ptr,
    .glFramebufferReadBufferEXT = epoxy_glFramebufferReadBufferEXT_dispatch_table_rewrite_ptr,
    .glFramebufferRenderbuffer = epoxy_glFramebufferRenderbuffer_dispatch_table_rewrite_ptr,
    .glFramebufferRenderbufferEXT = epoxy_glFramebufferRenderbufferEXT_dispatch_table_rewrite_ptr,
    .glFramebufferRenderbufferOES = epoxy_glFramebufferRenderbufferOES_dispatch_table_rewrite_ptr,
    .glFramebufferSampleLocationsfvNV = epoxy_glFramebufferSampleLocationsfvNV_dispatch_table_rewrite_ptr,
    .glFramebufferTexture = epoxy_glFramebufferTexture_dispatch_table_rewrite_ptr,
    .glFramebufferTexture1D = epoxy_glFramebufferTexture1D_dispatch_table_rewrite_ptr,
    .glFramebufferTexture1DEXT = epoxy_glFramebufferTexture1DEXT_dispatch_table_rewrite_ptr,
    .glFramebufferTexture2D = epoxy_glFramebufferTexture2D_dispatch_table_rewrite_ptr,
    .glFramebufferTexture2DEXT = epoxy_glFramebufferTexture2DEXT_dispatch_table_rewrite_ptr,
    .glFramebufferTexture2DMultisampleEXT = epoxy_glFramebufferTexture2DMultisampleEXT_dispatch_table_rewrite_ptr,
    .glFramebufferTexture2DMultisampleIMG = epoxy_glFramebufferTexture2DMultisampleIMG_dispatch_table_rewrite_ptr,
    .glFramebufferTexture2DOES = epoxy_glFramebufferTexture2DOES_dispatch_table_rewrite_ptr,
    .glFramebufferTexture3D = epoxy_glFramebufferTexture3D_dispatch_table_rewrite_ptr,
    .glFramebufferTexture3DEXT = epoxy_glFramebufferTexture3DEXT_dispatch_table_rewrite_ptr,
    .glFramebufferTexture3DOES = epoxy_glFramebufferTexture3DOES_dispatch_table_rewrite_ptr,
    .glFramebufferTextureARB = epoxy_glFramebufferTextureARB_dispatch_table_rewrite_ptr,
    .glFramebufferTextureEXT = epoxy_glFramebufferTextureEXT_dispatch_table_rewrite_ptr,
    .glFramebufferTextureFaceARB = epoxy_glFramebufferTextureFaceARB_dispatch_table_rewrite_ptr,
    .glFramebufferTextureFaceEXT = epoxy_glFramebufferTextureFaceEXT_dispatch_table_rewrite_ptr,
    .glFramebufferTextureLayer = epoxy_glFramebufferTextureLayer_dispatch_table_rewrite_ptr,
    .glFramebufferTextureLayerARB = epoxy_glFramebufferTextureLayerARB_dispatch_table_rewrite_ptr,
    .glFramebufferTextureLayerEXT = epoxy_glFramebufferTextureLayerEXT_dispatch_table_rewrite_ptr,
    .glFramebufferTextureMultiviewOVR = epoxy_glFramebufferTextureMultiviewOVR_dispatch_table_rewrite_ptr,
    .glFramebufferTextureOES = epoxy_glFramebufferTextureOES_dispatch_table_rewrite_ptr,
    .glFreeObjectBufferATI = epoxy_glFreeObjectBufferATI_dispatch_table_rewrite_ptr,
    .glFrontFace = epoxy_glFrontFace_dispatch_table_rewrite_ptr,
    .glFrustum = epoxy_glFrustum_dispatch_table_rewrite_ptr,
    .glFrustumf = epoxy_glFrustumf_dispatch_table_rewrite_ptr,
    .glFrustumfOES = epoxy_glFrustumfOES_dispatch_table_rewrite_ptr,
    .glFrustumx = epoxy_glFrustumx_dispatch_table_rewrite_ptr,
    .glFrustumxOES = epoxy_glFrustumxOES_dispatch_table_rewrite_ptr,
    .glGenAsyncMarkersSGIX = epoxy_glGenAsyncMarkersSGIX_dispatch_table_rewrite_ptr,
    .glGenBuffers = epoxy_glGenBuffers_dispatch_table_rewrite_ptr,
    .glGenBuffersARB = epoxy_glGenBuffersARB_dispatch_table_rewrite_ptr,
    .glGenFencesAPPLE = epoxy_glGenFencesAPPLE_dispatch_table_rewrite_ptr,
    .glGenFencesNV = epoxy_glGenFencesNV_dispatch_table_rewrite_ptr,
    .glGenFragmentShadersATI = epoxy_glGenFragmentShadersATI_dispatch_table_rewrite_ptr,
    .glGenFramebuffers = epoxy_glGenFramebuffers_dispatch_table_rewrite_ptr,
    .glGenFramebuffersEXT = epoxy_glGenFramebuffersEXT_dispatch_table_rewrite_ptr,
    .glGenFramebuffersOES = epoxy_glGenFramebuffersOES_dispatch_table_rewrite_ptr,
    .glGenLists = epoxy_glGenLists_dispatch_table_rewrite_ptr,
    .glGenNamesAMD = epoxy_glGenNamesAMD_dispatch_table_rewrite_ptr,
    .glGenOcclusionQueriesNV = epoxy_glGenOcclusionQueriesNV_dispatch_table_rewrite_ptr,
    .glGenPathsNV = epoxy_glGenPathsNV_dispatch_table_rewrite_ptr,
    .glGenPerfMonitorsAMD = epoxy_glGenPerfMonitorsAMD_dispatch_table_rewrite_ptr,
    .glGenProgramPipelines = epoxy_glGenProgramPipelines_dispatch_table_rewrite_ptr,
    .glGenProgramPipelinesEXT = epoxy_glGenProgramPipelinesEXT_dispatch_table_rewrite_ptr,
    .glGenProgramsARB = epoxy_glGenProgramsARB_dispatch_table_rewrite_ptr,
    .glGenProgramsNV = epoxy_glGenProgramsNV_dispatch_table_rewrite_ptr,
    .glGenQueries = epoxy_glGenQueries_dispatch_table_rewrite_ptr,
    .glGenQueriesARB = epoxy_glGenQueriesARB_dispatch_table_rewrite_ptr,
    .glGenQueriesEXT = epoxy_glGenQueriesEXT_dispatch_table_rewrite_ptr,
    .glGenRenderbuffers = epoxy_glGenRenderbuffers_dispatch_table_rewrite_ptr,
    .glGenRenderbuffersEXT = epoxy_glGenRenderbuffersEXT_dispatch_table_rewrite_ptr,
    .glGenRenderbuffersOES = epoxy_glGenRenderbuffersOES_dispatch_table_rewrite_ptr,
    .glGenSamplers = epoxy_glGenSamplers_dispatch_table_rewrite_ptr,
    .glGenSymbolsEXT = epoxy_glGenSymbolsEXT_dispatch_table_rewrite_ptr,
    .glGenTextures = epoxy_glGenTextures_dispatch_table_rewrite_ptr,
    .glGenTexturesEXT = epoxy_glGenTexturesEXT_dispatch_table_rewrite_ptr,
    .glGenTransformFeedbacks = epoxy_glGenTransformFeedbacks_dispatch_table_rewrite_ptr,
    .glGenTransformFeedbacksNV = epoxy_glGenTransformFeedbacksNV_dispatch_table_rewrite_ptr,
    .glGenVertexArrays = epoxy_glGenVertexArrays_dispatch_table_rewrite_ptr,
    .glGenVertexArraysAPPLE = epoxy_glGenVertexArraysAPPLE_dispatch_table_rewrite_ptr,
    .glGenVertexArraysOES = epoxy_glGenVertexArraysOES_dispatch_table_rewrite_ptr,
    .glGenVertexShadersEXT = epoxy_glGenVertexShadersEXT_dispatch_table_rewrite_ptr,
    .glGenerateMipmap = epoxy_glGenerateMipmap_dispatch_table_rewrite_ptr,
    .glGenerateMipmapEXT = epoxy_glGenerateMipmapEXT_dispatch_table_rewrite_ptr,
    .glGenerateMipmapOES = epoxy_glGenerateMipmapOES_dispatch_table_rewrite_ptr,
    .glGenerateMultiTexMipmapEXT = epoxy_glGenerateMultiTexMipmapEXT_dispatch_table_rewrite_ptr,
    .glGenerateTextureMipmap = epoxy_glGenerateTextureMipmap_dispatch_table_rewrite_ptr,
    .glGenerateTextureMipmapEXT = epoxy_glGenerateTextureMipmapEXT_dispatch_table_rewrite_ptr,
    .glGetActiveAtomicCounterBufferiv = epoxy_glGetActiveAtomicCounterBufferiv_dispatch_table_rewrite_ptr,
    .glGetActiveAttrib = epoxy_glGetActiveAttrib_dispatch_table_rewrite_ptr,
    .glGetActiveAttribARB = epoxy_glGetActiveAttribARB_dispatch_table_rewrite_ptr,
    .glGetActiveSubroutineName = epoxy_glGetActiveSubroutineName_dispatch_table_rewrite_ptr,
    .glGetActiveSubroutineUniformName = epoxy_glGetActiveSubroutineUniformName_dispatch_table_rewrite_ptr,
    .glGetActiveSubroutineUniformiv = epoxy_glGetActiveSubroutineUniformiv_dispatch_table_rewrite_ptr,
    .glGetActiveUniform = epoxy_glGetActiveUniform_dispatch_table_rewrite_ptr,
    .glGetActiveUniformARB = epoxy_glGetActiveUniformARB_dispatch_table_rewrite_ptr,
    .glGetActiveUniformBlockName = epoxy_glGetActiveUniformBlockName_dispatch_table_rewrite_ptr,
    .glGetActiveUniformBlockiv = epoxy_glGetActiveUniformBlockiv_dispatch_table_rewrite_ptr,
    .glGetActiveUniformName = epoxy_glGetActiveUniformName_dispatch_table_rewrite_ptr,
    .glGetActiveUniformsiv = epoxy_glGetActiveUniformsiv_dispatch_table_rewrite_ptr,
    .glGetActiveVaryingNV = epoxy_glGetActiveVaryingNV_dispatch_table_rewrite_ptr,
    .glGetArrayObjectfvATI = epoxy_glGetArrayObjectfvATI_dispatch_table_rewrite_ptr,
    .glGetArrayObjectivATI = epoxy_glGetArrayObjectivATI_dispatch_table_rewrite_ptr,
    .glGetAttachedObjectsARB = epoxy_glGetAttachedObjectsARB_dispatch_table_rewrite_ptr,
    .glGetAttachedShaders = epoxy_glGetAttachedShaders_dispatch_table_rewrite_ptr,
    .glGetAttribLocation = epoxy_glGetAttribLocation_dispatch_table_rewrite_ptr,
    .glGetAttribLocationARB = epoxy_glGetAttribLocationARB_dispatch_table_rewrite_ptr,
    .glGetBooleanIndexedvEXT = epoxy_glGetBooleanIndexedvEXT_dispatch_table_rewrite_ptr,
    .glGetBooleani_v = epoxy_glGetBooleani_v_dispatch_table_rewrite_ptr,
    .glGetBooleanv = epoxy_glGetBooleanv_dispatch_table_rewrite_ptr,
    .glGetBufferParameteri64v = epoxy_glGetBufferParameteri64v_dispatch_table_rewrite_ptr,
    .glGetBufferParameteriv = epoxy_glGetBufferParameteriv_dispatch_table_rewrite_ptr,
    .glGetBufferParameterivARB = epoxy_glGetBufferParameterivARB_dispatch_table_rewrite_ptr,
    .glGetBufferParameterui64vNV = epoxy_glGetBufferParameterui64vNV_dispatch_table_rewrite_ptr,
    .glGetBufferPointerv = epoxy_glGetBufferPointerv_dispatch_table_rewrite_ptr,
    .glGetBufferPointervARB = epoxy_glGetBufferPointervARB_dispatch_table_rewrite_ptr,
    .glGetBufferPointervOES = epoxy_glGetBufferPointervOES_dispatch_table_rewrite_ptr,
    .glGetBufferSubData = epoxy_glGetBufferSubData_dispatch_table_rewrite_ptr,
    .glGetBufferSubDataARB = epoxy_glGetBufferSubDataARB_dispatch_table_rewrite_ptr,
    .glGetClipPlane = epoxy_glGetClipPlane_dispatch_table_rewrite_ptr,
    .glGetClipPlanef = epoxy_glGetClipPlanef_dispatch_table_rewrite_ptr,
    .glGetClipPlanefOES = epoxy_glGetClipPlanefOES_dispatch_table_rewrite_ptr,
    .glGetClipPlanex = epoxy_glGetClipPlanex_dispatch_table_rewrite_ptr,
    .glGetClipPlanexOES = epoxy_glGetClipPlanexOES_dispatch_table_rewrite_ptr,
    .glGetColorTable = epoxy_glGetColorTable_dispatch_table_rewrite_ptr,
    .glGetColorTableEXT = epoxy_glGetColorTableEXT_dispatch_table_rewrite_ptr,
    .glGetColorTableParameterfv = epoxy_glGetColorTableParameterfv_dispatch_table_rewrite_ptr,
    .glGetColorTableParameterfvEXT = epoxy_glGetColorTableParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetColorTableParameterfvSGI = epoxy_glGetColorTableParameterfvSGI_dispatch_table_rewrite_ptr,
    .glGetColorTableParameteriv = epoxy_glGetColorTableParameteriv_dispatch_table_rewrite_ptr,
    .glGetColorTableParameterivEXT = epoxy_glGetColorTableParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetColorTableParameterivSGI = epoxy_glGetColorTableParameterivSGI_dispatch_table_rewrite_ptr,
    .glGetColorTableSGI = epoxy_glGetColorTableSGI_dispatch_table_rewrite_ptr,
    .glGetCombinerInputParameterfvNV = epoxy_glGetCombinerInputParameterfvNV_dispatch_table_rewrite_ptr,
    .glGetCombinerInputParameterivNV = epoxy_glGetCombinerInputParameterivNV_dispatch_table_rewrite_ptr,
    .glGetCombinerOutputParameterfvNV = epoxy_glGetCombinerOutputParameterfvNV_dispatch_table_rewrite_ptr,
    .glGetCombinerOutputParameterivNV = epoxy_glGetCombinerOutputParameterivNV_dispatch_table_rewrite_ptr,
    .glGetCombinerStageParameterfvNV = epoxy_glGetCombinerStageParameterfvNV_dispatch_table_rewrite_ptr,
    .glGetCommandHeaderNV = epoxy_glGetCommandHeaderNV_dispatch_table_rewrite_ptr,
    .glGetCompressedMultiTexImageEXT = epoxy_glGetCompressedMultiTexImageEXT_dispatch_table_rewrite_ptr,
    .glGetCompressedTexImage = epoxy_glGetCompressedTexImage_dispatch_table_rewrite_ptr,
    .glGetCompressedTexImageARB = epoxy_glGetCompressedTexImageARB_dispatch_table_rewrite_ptr,
    .glGetCompressedTextureImage = epoxy_glGetCompressedTextureImage_dispatch_table_rewrite_ptr,
    .glGetCompressedTextureImageEXT = epoxy_glGetCompressedTextureImageEXT_dispatch_table_rewrite_ptr,
    .glGetCompressedTextureSubImage = epoxy_glGetCompressedTextureSubImage_dispatch_table_rewrite_ptr,
    .glGetConvolutionFilter = epoxy_glGetConvolutionFilter_dispatch_table_rewrite_ptr,
    .glGetConvolutionFilterEXT = epoxy_glGetConvolutionFilterEXT_dispatch_table_rewrite_ptr,
    .glGetConvolutionParameterfv = epoxy_glGetConvolutionParameterfv_dispatch_table_rewrite_ptr,
    .glGetConvolutionParameterfvEXT = epoxy_glGetConvolutionParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetConvolutionParameteriv = epoxy_glGetConvolutionParameteriv_dispatch_table_rewrite_ptr,
    .glGetConvolutionParameterivEXT = epoxy_glGetConvolutionParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetConvolutionParameterxvOES = epoxy_glGetConvolutionParameterxvOES_dispatch_table_rewrite_ptr,
    .glGetCoverageModulationTableNV = epoxy_glGetCoverageModulationTableNV_dispatch_table_rewrite_ptr,
    .glGetDebugMessageLog = epoxy_glGetDebugMessageLog_dispatch_table_rewrite_ptr,
    .glGetDebugMessageLogAMD = epoxy_glGetDebugMessageLogAMD_dispatch_table_rewrite_ptr,
    .glGetDebugMessageLogARB = epoxy_glGetDebugMessageLogARB_dispatch_table_rewrite_ptr,
    .glGetDebugMessageLogKHR = epoxy_glGetDebugMessageLogKHR_dispatch_table_rewrite_ptr,
    .glGetDetailTexFuncSGIS = epoxy_glGetDetailTexFuncSGIS_dispatch_table_rewrite_ptr,
    .glGetDoubleIndexedvEXT = epoxy_glGetDoubleIndexedvEXT_dispatch_table_rewrite_ptr,
    .glGetDoublei_v = epoxy_glGetDoublei_v_dispatch_table_rewrite_ptr,
    .glGetDoublei_vEXT = epoxy_glGetDoublei_vEXT_dispatch_table_rewrite_ptr,
    .glGetDoublev = epoxy_glGetDoublev_dispatch_table_rewrite_ptr,
    .glGetDriverControlStringQCOM = epoxy_glGetDriverControlStringQCOM_dispatch_table_rewrite_ptr,
    .glGetDriverControlsQCOM = epoxy_glGetDriverControlsQCOM_dispatch_table_rewrite_ptr,
    .glGetError = epoxy_glGetError_dispatch_table_rewrite_ptr,
    .glGetFenceivNV = epoxy_glGetFenceivNV_dispatch_table_rewrite_ptr,
    .glGetFinalCombinerInputParameterfvNV = epoxy_glGetFinalCombinerInputParameterfvNV_dispatch_table_rewrite_ptr,
    .glGetFinalCombinerInputParameterivNV = epoxy_glGetFinalCombinerInputParameterivNV_dispatch_table_rewrite_ptr,
    .glGetFirstPerfQueryIdINTEL = epoxy_glGetFirstPerfQueryIdINTEL_dispatch_table_rewrite_ptr,
    .glGetFixedv = epoxy_glGetFixedv_dispatch_table_rewrite_ptr,
    .glGetFixedvOES = epoxy_glGetFixedvOES_dispatch_table_rewrite_ptr,
    .glGetFloatIndexedvEXT = epoxy_glGetFloatIndexedvEXT_dispatch_table_rewrite_ptr,
    .glGetFloati_v = epoxy_glGetFloati_v_dispatch_table_rewrite_ptr,
    .glGetFloati_vEXT = epoxy_glGetFloati_vEXT_dispatch_table_rewrite_ptr,
    .glGetFloati_vNV = epoxy_glGetFloati_vNV_dispatch_table_rewrite_ptr,
    .glGetFloatv = epoxy_glGetFloatv_dispatch_table_rewrite_ptr,
    .glGetFogFuncSGIS = epoxy_glGetFogFuncSGIS_dispatch_table_rewrite_ptr,
    .glGetFragDataIndex = epoxy_glGetFragDataIndex_dispatch_table_rewrite_ptr,
    .glGetFragDataLocation = epoxy_glGetFragDataLocation_dispatch_table_rewrite_ptr,
    .glGetFragDataLocationEXT = epoxy_glGetFragDataLocationEXT_dispatch_table_rewrite_ptr,
    .glGetFragmentLightfvSGIX = epoxy_glGetFragmentLightfvSGIX_dispatch_table_rewrite_ptr,
    .glGetFragmentLightivSGIX = epoxy_glGetFragmentLightivSGIX_dispatch_table_rewrite_ptr,
    .glGetFragmentMaterialfvSGIX = epoxy_glGetFragmentMaterialfvSGIX_dispatch_table_rewrite_ptr,
    .glGetFragmentMaterialivSGIX = epoxy_glGetFragmentMaterialivSGIX_dispatch_table_rewrite_ptr,
    .glGetFramebufferAttachmentParameteriv = epoxy_glGetFramebufferAttachmentParameteriv_dispatch_table_rewrite_ptr,
    .glGetFramebufferAttachmentParameterivEXT = epoxy_glGetFramebufferAttachmentParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetFramebufferAttachmentParameterivOES = epoxy_glGetFramebufferAttachmentParameterivOES_dispatch_table_rewrite_ptr,
    .glGetFramebufferParameteriv = epoxy_glGetFramebufferParameteriv_dispatch_table_rewrite_ptr,
    .glGetFramebufferParameterivEXT = epoxy_glGetFramebufferParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetGraphicsResetStatus = epoxy_glGetGraphicsResetStatus_dispatch_table_rewrite_ptr,
    .glGetGraphicsResetStatusARB = epoxy_glGetGraphicsResetStatusARB_dispatch_table_rewrite_ptr,
    .glGetGraphicsResetStatusEXT = epoxy_glGetGraphicsResetStatusEXT_dispatch_table_rewrite_ptr,
    .glGetGraphicsResetStatusKHR = epoxy_glGetGraphicsResetStatusKHR_dispatch_table_rewrite_ptr,
    .glGetHandleARB = epoxy_glGetHandleARB_dispatch_table_rewrite_ptr,
    .glGetHistogram = epoxy_glGetHistogram_dispatch_table_rewrite_ptr,
    .glGetHistogramEXT = epoxy_glGetHistogramEXT_dispatch_table_rewrite_ptr,
    .glGetHistogramParameterfv = epoxy_glGetHistogramParameterfv_dispatch_table_rewrite_ptr,
    .glGetHistogramParameterfvEXT = epoxy_glGetHistogramParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetHistogramParameteriv = epoxy_glGetHistogramParameteriv_dispatch_table_rewrite_ptr,
    .glGetHistogramParameterivEXT = epoxy_glGetHistogramParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetHistogramParameterxvOES = epoxy_glGetHistogramParameterxvOES_dispatch_table_rewrite_ptr,
    .glGetImageHandleARB = epoxy_glGetImageHandleARB_dispatch_table_rewrite_ptr,
    .glGetImageHandleNV = epoxy_glGetImageHandleNV_dispatch_table_rewrite_ptr,
    .glGetImageTransformParameterfvHP = epoxy_glGetImageTransformParameterfvHP_dispatch_table_rewrite_ptr,
    .glGetImageTransformParameterivHP = epoxy_glGetImageTransformParameterivHP_dispatch_table_rewrite_ptr,
    .glGetInfoLogARB = epoxy_glGetInfoLogARB_dispatch_table_rewrite_ptr,
    .glGetInstrumentsSGIX = epoxy_glGetInstrumentsSGIX_dispatch_table_rewrite_ptr,
    .glGetInteger64i_v = epoxy_glGetInteger64i_v_dispatch_table_rewrite_ptr,
    .glGetInteger64v = epoxy_glGetInteger64v_dispatch_table_rewrite_ptr,
    .glGetInteger64vAPPLE = epoxy_glGetInteger64vAPPLE_dispatch_table_rewrite_ptr,
    .glGetIntegerIndexedvEXT = epoxy_glGetIntegerIndexedvEXT_dispatch_table_rewrite_ptr,
    .glGetIntegeri_v = epoxy_glGetIntegeri_v_dispatch_table_rewrite_ptr,
    .glGetIntegeri_vEXT = epoxy_glGetIntegeri_vEXT_dispatch_table_rewrite_ptr,
    .glGetIntegerui64i_vNV = epoxy_glGetIntegerui64i_vNV_dispatch_table_rewrite_ptr,
    .glGetIntegerui64vNV = epoxy_glGetIntegerui64vNV_dispatch_table_rewrite_ptr,
    .glGetIntegerv = epoxy_glGetIntegerv_dispatch_table_rewrite_ptr,
    .glGetInternalformatSampleivNV = epoxy_glGetInternalformatSampleivNV_dispatch_table_rewrite_ptr,
    .glGetInternalformati64v = epoxy_glGetInternalformati64v_dispatch_table_rewrite_ptr,
    .glGetInternalformativ = epoxy_glGetInternalformativ_dispatch_table_rewrite_ptr,
    .glGetInvariantBooleanvEXT = epoxy_glGetInvariantBooleanvEXT_dispatch_table_rewrite_ptr,
    .glGetInvariantFloatvEXT = epoxy_glGetInvariantFloatvEXT_dispatch_table_rewrite_ptr,
    .glGetInvariantIntegervEXT = epoxy_glGetInvariantIntegervEXT_dispatch_table_rewrite_ptr,
    .glGetLightfv = epoxy_glGetLightfv_dispatch_table_rewrite_ptr,
    .glGetLightiv = epoxy_glGetLightiv_dispatch_table_rewrite_ptr,
    .glGetLightxOES = epoxy_glGetLightxOES_dispatch_table_rewrite_ptr,
    .glGetLightxv = epoxy_glGetLightxv_dispatch_table_rewrite_ptr,
    .glGetLightxvOES = epoxy_glGetLightxvOES_dispatch_table_rewrite_ptr,
    .glGetListParameterfvSGIX = epoxy_glGetListParameterfvSGIX_dispatch_table_rewrite_ptr,
    .glGetListParameterivSGIX = epoxy_glGetListParameterivSGIX_dispatch_table_rewrite_ptr,
    .glGetLocalConstantBooleanvEXT = epoxy_glGetLocalConstantBooleanvEXT_dispatch_table_rewrite_ptr,
    .glGetLocalConstantFloatvEXT = epoxy_glGetLocalConstantFloatvEXT_dispatch_table_rewrite_ptr,
    .glGetLocalConstantIntegervEXT = epoxy_glGetLocalConstantIntegervEXT_dispatch_table_rewrite_ptr,
    .glGetMapAttribParameterfvNV = epoxy_glGetMapAttribParameterfvNV_dispatch_table_rewrite_ptr,
    .glGetMapAttribParameterivNV = epoxy_glGetMapAttribParameterivNV_dispatch_table_rewrite_ptr,
    .glGetMapControlPointsNV = epoxy_glGetMapControlPointsNV_dispatch_table_rewrite_ptr,
    .glGetMapParameterfvNV = epoxy_glGetMapParameterfvNV_dispatch_table_rewrite_ptr,
    .glGetMapParameterivNV = epoxy_glGetMapParameterivNV_dispatch_table_rewrite_ptr,
    .glGetMapdv = epoxy_glGetMapdv_dispatch_table_rewrite_ptr,
    .glGetMapfv = epoxy_glGetMapfv_dispatch_table_rewrite_ptr,
    .glGetMapiv = epoxy_glGetMapiv_dispatch_table_rewrite_ptr,
    .glGetMapxvOES = epoxy_glGetMapxvOES_dispatch_table_rewrite_ptr,
    .glGetMaterialfv = epoxy_glGetMaterialfv_dispatch_table_rewrite_ptr,
    .glGetMaterialiv = epoxy_glGetMaterialiv_dispatch_table_rewrite_ptr,
    .glGetMaterialxOES = epoxy_glGetMaterialxOES_dispatch_table_rewrite_ptr,
    .glGetMaterialxv = epoxy_glGetMaterialxv_dispatch_table_rewrite_ptr,
    .glGetMaterialxvOES = epoxy_glGetMaterialxvOES_dispatch_table_rewrite_ptr,
    .glGetMinmax = epoxy_glGetMinmax_dispatch_table_rewrite_ptr,
    .glGetMinmaxEXT = epoxy_glGetMinmaxEXT_dispatch_table_rewrite_ptr,
    .glGetMinmaxParameterfv = epoxy_glGetMinmaxParameterfv_dispatch_table_rewrite_ptr,
    .glGetMinmaxParameterfvEXT = epoxy_glGetMinmaxParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetMinmaxParameteriv = epoxy_glGetMinmaxParameteriv_dispatch_table_rewrite_ptr,
    .glGetMinmaxParameterivEXT = epoxy_glGetMinmaxParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexEnvfvEXT = epoxy_glGetMultiTexEnvfvEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexEnvivEXT = epoxy_glGetMultiTexEnvivEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexGendvEXT = epoxy_glGetMultiTexGendvEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexGenfvEXT = epoxy_glGetMultiTexGenfvEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexGenivEXT = epoxy_glGetMultiTexGenivEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexImageEXT = epoxy_glGetMultiTexImageEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexLevelParameterfvEXT = epoxy_glGetMultiTexLevelParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexLevelParameterivEXT = epoxy_glGetMultiTexLevelParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexParameterIivEXT = epoxy_glGetMultiTexParameterIivEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexParameterIuivEXT = epoxy_glGetMultiTexParameterIuivEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexParameterfvEXT = epoxy_glGetMultiTexParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetMultiTexParameterivEXT = epoxy_glGetMultiTexParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetMultisamplefv = epoxy_glGetMultisamplefv_dispatch_table_rewrite_ptr,
    .glGetMultisamplefvNV = epoxy_glGetMultisamplefvNV_dispatch_table_rewrite_ptr,
    .glGetNamedBufferParameteri64v = epoxy_glGetNamedBufferParameteri64v_dispatch_table_rewrite_ptr,
    .glGetNamedBufferParameteriv = epoxy_glGetNamedBufferParameteriv_dispatch_table_rewrite_ptr,
    .glGetNamedBufferParameterivEXT = epoxy_glGetNamedBufferParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetNamedBufferParameterui64vNV = epoxy_glGetNamedBufferParameterui64vNV_dispatch_table_rewrite_ptr,
    .glGetNamedBufferPointerv = epoxy_glGetNamedBufferPointerv_dispatch_table_rewrite_ptr,
    .glGetNamedBufferPointervEXT = epoxy_glGetNamedBufferPointervEXT_dispatch_table_rewrite_ptr,
    .glGetNamedBufferSubData = epoxy_glGetNamedBufferSubData_dispatch_table_rewrite_ptr,
    .glGetNamedBufferSubDataEXT = epoxy_glGetNamedBufferSubDataEXT_dispatch_table_rewrite_ptr,
    .glGetNamedFramebufferAttachmentParameteriv = epoxy_glGetNamedFramebufferAttachmentParameteriv_dispatch_table_rewrite_ptr,
    .glGetNamedFramebufferAttachmentParameterivEXT = epoxy_glGetNamedFramebufferAttachmentParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetNamedFramebufferParameteriv = epoxy_glGetNamedFramebufferParameteriv_dispatch_table_rewrite_ptr,
    .glGetNamedFramebufferParameterivEXT = epoxy_glGetNamedFramebufferParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetNamedProgramLocalParameterIivEXT = epoxy_glGetNamedProgramLocalParameterIivEXT_dispatch_table_rewrite_ptr,
    .glGetNamedProgramLocalParameterIuivEXT = epoxy_glGetNamedProgramLocalParameterIuivEXT_dispatch_table_rewrite_ptr,
    .glGetNamedProgramLocalParameterdvEXT = epoxy_glGetNamedProgramLocalParameterdvEXT_dispatch_table_rewrite_ptr,
    .glGetNamedProgramLocalParameterfvEXT = epoxy_glGetNamedProgramLocalParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetNamedProgramStringEXT = epoxy_glGetNamedProgramStringEXT_dispatch_table_rewrite_ptr,
    .glGetNamedProgramivEXT = epoxy_glGetNamedProgramivEXT_dispatch_table_rewrite_ptr,
    .glGetNamedRenderbufferParameteriv = epoxy_glGetNamedRenderbufferParameteriv_dispatch_table_rewrite_ptr,
    .glGetNamedRenderbufferParameterivEXT = epoxy_glGetNamedRenderbufferParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetNamedStringARB = epoxy_glGetNamedStringARB_dispatch_table_rewrite_ptr,
    .glGetNamedStringivARB = epoxy_glGetNamedStringivARB_dispatch_table_rewrite_ptr,
    .glGetNextPerfQueryIdINTEL = epoxy_glGetNextPerfQueryIdINTEL_dispatch_table_rewrite_ptr,
    .glGetObjectBufferfvATI = epoxy_glGetObjectBufferfvATI_dispatch_table_rewrite_ptr,
    .glGetObjectBufferivATI = epoxy_glGetObjectBufferivATI_dispatch_table_rewrite_ptr,
    .glGetObjectLabel = epoxy_glGetObjectLabel_dispatch_table_rewrite_ptr,
    .glGetObjectLabelEXT = epoxy_glGetObjectLabelEXT_dispatch_table_rewrite_ptr,
    .glGetObjectLabelKHR = epoxy_glGetObjectLabelKHR_dispatch_table_rewrite_ptr,
    .glGetObjectParameterfvARB = epoxy_glGetObjectParameterfvARB_dispatch_table_rewrite_ptr,
    .glGetObjectParameterivAPPLE = epoxy_glGetObjectParameterivAPPLE_dispatch_table_rewrite_ptr,
    .glGetObjectParameterivARB = epoxy_glGetObjectParameterivARB_dispatch_table_rewrite_ptr,
    .glGetObjectPtrLabel = epoxy_glGetObjectPtrLabel_dispatch_table_rewrite_ptr,
    .glGetObjectPtrLabelKHR = epoxy_glGetObjectPtrLabelKHR_dispatch_table_rewrite_ptr,
    .glGetOcclusionQueryivNV = epoxy_glGetOcclusionQueryivNV_dispatch_table_rewrite_ptr,
    .glGetOcclusionQueryuivNV = epoxy_glGetOcclusionQueryuivNV_dispatch_table_rewrite_ptr,
    .glGetPathColorGenfvNV = epoxy_glGetPathColorGenfvNV_dispatch_table_rewrite_ptr,
    .glGetPathColorGenivNV = epoxy_glGetPathColorGenivNV_dispatch_table_rewrite_ptr,
    .glGetPathCommandsNV = epoxy_glGetPathCommandsNV_dispatch_table_rewrite_ptr,
    .glGetPathCoordsNV = epoxy_glGetPathCoordsNV_dispatch_table_rewrite_ptr,
    .glGetPathDashArrayNV = epoxy_glGetPathDashArrayNV_dispatch_table_rewrite_ptr,
    .glGetPathLengthNV = epoxy_glGetPathLengthNV_dispatch_table_rewrite_ptr,
    .glGetPathMetricRangeNV = epoxy_glGetPathMetricRangeNV_dispatch_table_rewrite_ptr,
    .glGetPathMetricsNV = epoxy_glGetPathMetricsNV_dispatch_table_rewrite_ptr,
    .glGetPathParameterfvNV = epoxy_glGetPathParameterfvNV_dispatch_table_rewrite_ptr,
    .glGetPathParameterivNV = epoxy_glGetPathParameterivNV_dispatch_table_rewrite_ptr,
    .glGetPathSpacingNV = epoxy_glGetPathSpacingNV_dispatch_table_rewrite_ptr,
    .glGetPathTexGenfvNV = epoxy_glGetPathTexGenfvNV_dispatch_table_rewrite_ptr,
    .glGetPathTexGenivNV = epoxy_glGetPathTexGenivNV_dispatch_table_rewrite_ptr,
    .glGetPerfCounterInfoINTEL = epoxy_glGetPerfCounterInfoINTEL_dispatch_table_rewrite_ptr,
    .glGetPerfMonitorCounterDataAMD = epoxy_glGetPerfMonitorCounterDataAMD_dispatch_table_rewrite_ptr,
    .glGetPerfMonitorCounterInfoAMD = epoxy_glGetPerfMonitorCounterInfoAMD_dispatch_table_rewrite_ptr,
    .glGetPerfMonitorCounterStringAMD = epoxy_glGetPerfMonitorCounterStringAMD_dispatch_table_rewrite_ptr,
    .glGetPerfMonitorCountersAMD = epoxy_glGetPerfMonitorCountersAMD_dispatch_table_rewrite_ptr,
    .glGetPerfMonitorGroupStringAMD = epoxy_glGetPerfMonitorGroupStringAMD_dispatch_table_rewrite_ptr,
    .glGetPerfMonitorGroupsAMD = epoxy_glGetPerfMonitorGroupsAMD_dispatch_table_rewrite_ptr,
    .glGetPerfQueryDataINTEL = epoxy_glGetPerfQueryDataINTEL_dispatch_table_rewrite_ptr,
    .glGetPerfQueryIdByNameINTEL = epoxy_glGetPerfQueryIdByNameINTEL_dispatch_table_rewrite_ptr,
    .glGetPerfQueryInfoINTEL = epoxy_glGetPerfQueryInfoINTEL_dispatch_table_rewrite_ptr,
    .glGetPixelMapfv = epoxy_glGetPixelMapfv_dispatch_table_rewrite_ptr,
    .glGetPixelMapuiv = epoxy_glGetPixelMapuiv_dispatch_table_rewrite_ptr,
    .glGetPixelMapusv = epoxy_glGetPixelMapusv_dispatch_table_rewrite_ptr,
    .glGetPixelMapxv = epoxy_glGetPixelMapxv_dispatch_table_rewrite_ptr,
    .glGetPixelTexGenParameterfvSGIS = epoxy_glGetPixelTexGenParameterfvSGIS_dispatch_table_rewrite_ptr,
    .glGetPixelTexGenParameterivSGIS = epoxy_glGetPixelTexGenParameterivSGIS_dispatch_table_rewrite_ptr,
    .glGetPixelTransformParameterfvEXT = epoxy_glGetPixelTransformParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetPixelTransformParameterivEXT = epoxy_glGetPixelTransformParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetPointerIndexedvEXT = epoxy_glGetPointerIndexedvEXT_dispatch_table_rewrite_ptr,
    .glGetPointeri_vEXT = epoxy_glGetPointeri_vEXT_dispatch_table_rewrite_ptr,
    .glGetPointerv = epoxy_glGetPointerv_dispatch_table_rewrite_ptr,
    .glGetPointervEXT = epoxy_glGetPointervEXT_dispatch_table_rewrite_ptr,
    .glGetPointervKHR = epoxy_glGetPointervKHR_dispatch_table_rewrite_ptr,
    .glGetPolygonStipple = epoxy_glGetPolygonStipple_dispatch_table_rewrite_ptr,
    .glGetProgramBinary = epoxy_glGetProgramBinary_dispatch_table_rewrite_ptr,
    .glGetProgramBinaryOES = epoxy_glGetProgramBinaryOES_dispatch_table_rewrite_ptr,
    .glGetProgramEnvParameterIivNV = epoxy_glGetProgramEnvParameterIivNV_dispatch_table_rewrite_ptr,
    .glGetProgramEnvParameterIuivNV = epoxy_glGetProgramEnvParameterIuivNV_dispatch_table_rewrite_ptr,
    .glGetProgramEnvParameterdvARB = epoxy_glGetProgramEnvParameterdvARB_dispatch_table_rewrite_ptr,
    .glGetProgramEnvParameterfvARB = epoxy_glGetProgramEnvParameterfvARB_dispatch_table_rewrite_ptr,
    .glGetProgramInfoLog = epoxy_glGetProgramInfoLog_dispatch_table_rewrite_ptr,
    .glGetProgramInterfaceiv = epoxy_glGetProgramInterfaceiv_dispatch_table_rewrite_ptr,
    .glGetProgramLocalParameterIivNV = epoxy_glGetProgramLocalParameterIivNV_dispatch_table_rewrite_ptr,
    .glGetProgramLocalParameterIuivNV = epoxy_glGetProgramLocalParameterIuivNV_dispatch_table_rewrite_ptr,
    .glGetProgramLocalParameterdvARB = epoxy_glGetProgramLocalParameterdvARB_dispatch_table_rewrite_ptr,
    .glGetProgramLocalParameterfvARB = epoxy_glGetProgramLocalParameterfvARB_dispatch_table_rewrite_ptr,
    .glGetProgramNamedParameterdvNV = epoxy_glGetProgramNamedParameterdvNV_dispatch_table_rewrite_ptr,
    .glGetProgramNamedParameterfvNV = epoxy_glGetProgramNamedParameterfvNV_dispatch_table_rewrite_ptr,
    .glGetProgramParameterdvNV = epoxy_glGetProgramParameterdvNV_dispatch_table_rewrite_ptr,
    .glGetProgramParameterfvNV = epoxy_glGetProgramParameterfvNV_dispatch_table_rewrite_ptr,
    .glGetProgramPipelineInfoLog = epoxy_glGetProgramPipelineInfoLog_dispatch_table_rewrite_ptr,
    .glGetProgramPipelineInfoLogEXT = epoxy_glGetProgramPipelineInfoLogEXT_dispatch_table_rewrite_ptr,
    .glGetProgramPipelineiv = epoxy_glGetProgramPipelineiv_dispatch_table_rewrite_ptr,
    .glGetProgramPipelineivEXT = epoxy_glGetProgramPipelineivEXT_dispatch_table_rewrite_ptr,
    .glGetProgramResourceIndex = epoxy_glGetProgramResourceIndex_dispatch_table_rewrite_ptr,
    .glGetProgramResourceLocation = epoxy_glGetProgramResourceLocation_dispatch_table_rewrite_ptr,
    .glGetProgramResourceLocationIndex = epoxy_glGetProgramResourceLocationIndex_dispatch_table_rewrite_ptr,
    .glGetProgramResourceName = epoxy_glGetProgramResourceName_dispatch_table_rewrite_ptr,
    .glGetProgramResourcefvNV = epoxy_glGetProgramResourcefvNV_dispatch_table_rewrite_ptr,
    .glGetProgramResourceiv = epoxy_glGetProgramResourceiv_dispatch_table_rewrite_ptr,
    .glGetProgramStageiv = epoxy_glGetProgramStageiv_dispatch_table_rewrite_ptr,
    .glGetProgramStringARB = epoxy_glGetProgramStringARB_dispatch_table_rewrite_ptr,
    .glGetProgramStringNV = epoxy_glGetProgramStringNV_dispatch_table_rewrite_ptr,
    .glGetProgramSubroutineParameteruivNV = epoxy_glGetProgramSubroutineParameteruivNV_dispatch_table_rewrite_ptr,
    .glGetProgramiv = epoxy_glGetProgramiv_dispatch_table_rewrite_ptr,
    .glGetProgramivARB = epoxy_glGetProgramivARB_dispatch_table_rewrite_ptr,
    .glGetProgramivNV = epoxy_glGetProgramivNV_dispatch_table_rewrite_ptr,
    .glGetQueryBufferObjecti64v = epoxy_glGetQueryBufferObjecti64v_dispatch_table_rewrite_ptr,
    .glGetQueryBufferObjectiv = epoxy_glGetQueryBufferObjectiv_dispatch_table_rewrite_ptr,
    .glGetQueryBufferObjectui64v = epoxy_glGetQueryBufferObjectui64v_dispatch_table_rewrite_ptr,
    .glGetQueryBufferObjectuiv = epoxy_glGetQueryBufferObjectuiv_dispatch_table_rewrite_ptr,
    .glGetQueryIndexediv = epoxy_glGetQueryIndexediv_dispatch_table_rewrite_ptr,
    .glGetQueryObjecti64v = epoxy_glGetQueryObjecti64v_dispatch_table_rewrite_ptr,
    .glGetQueryObjecti64vEXT = epoxy_glGetQueryObjecti64vEXT_dispatch_table_rewrite_ptr,
    .glGetQueryObjectiv = epoxy_glGetQueryObjectiv_dispatch_table_rewrite_ptr,
    .glGetQueryObjectivARB = epoxy_glGetQueryObjectivARB_dispatch_table_rewrite_ptr,
    .glGetQueryObjectivEXT = epoxy_glGetQueryObjectivEXT_dispatch_table_rewrite_ptr,
    .glGetQueryObjectui64v = epoxy_glGetQueryObjectui64v_dispatch_table_rewrite_ptr,
    .glGetQueryObjectui64vEXT = epoxy_glGetQueryObjectui64vEXT_dispatch_table_rewrite_ptr,
    .glGetQueryObjectuiv = epoxy_glGetQueryObjectuiv_dispatch_table_rewrite_ptr,
    .glGetQueryObjectuivARB = epoxy_glGetQueryObjectuivARB_dispatch_table_rewrite_ptr,
    .glGetQueryObjectuivEXT = epoxy_glGetQueryObjectuivEXT_dispatch_table_rewrite_ptr,
    .glGetQueryiv = epoxy_glGetQueryiv_dispatch_table_rewrite_ptr,
    .glGetQueryivARB = epoxy_glGetQueryivARB_dispatch_table_rewrite_ptr,
    .glGetQueryivEXT = epoxy_glGetQueryivEXT_dispatch_table_rewrite_ptr,
    .glGetRenderbufferParameteriv = epoxy_glGetRenderbufferParameteriv_dispatch_table_rewrite_ptr,
    .glGetRenderbufferParameterivEXT = epoxy_glGetRenderbufferParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetRenderbufferParameterivOES = epoxy_glGetRenderbufferParameterivOES_dispatch_table_rewrite_ptr,
    .glGetSamplerParameterIiv = epoxy_glGetSamplerParameterIiv_dispatch_table_rewrite_ptr,
    .glGetSamplerParameterIivEXT = epoxy_glGetSamplerParameterIivEXT_dispatch_table_rewrite_ptr,
    .glGetSamplerParameterIivOES = epoxy_glGetSamplerParameterIivOES_dispatch_table_rewrite_ptr,
    .glGetSamplerParameterIuiv = epoxy_glGetSamplerParameterIuiv_dispatch_table_rewrite_ptr,
    .glGetSamplerParameterIuivEXT = epoxy_glGetSamplerParameterIuivEXT_dispatch_table_rewrite_ptr,
    .glGetSamplerParameterIuivOES = epoxy_glGetSamplerParameterIuivOES_dispatch_table_rewrite_ptr,
    .glGetSamplerParameterfv = epoxy_glGetSamplerParameterfv_dispatch_table_rewrite_ptr,
    .glGetSamplerParameteriv = epoxy_glGetSamplerParameteriv_dispatch_table_rewrite_ptr,
    .glGetSeparableFilter = epoxy_glGetSeparableFilter_dispatch_table_rewrite_ptr,
    .glGetSeparableFilterEXT = epoxy_glGetSeparableFilterEXT_dispatch_table_rewrite_ptr,
    .glGetShaderInfoLog = epoxy_glGetShaderInfoLog_dispatch_table_rewrite_ptr,
    .glGetShaderPrecisionFormat = epoxy_glGetShaderPrecisionFormat_dispatch_table_rewrite_ptr,
    .glGetShaderSource = epoxy_glGetShaderSource_dispatch_table_rewrite_ptr,
    .glGetShaderSourceARB = epoxy_glGetShaderSourceARB_dispatch_table_rewrite_ptr,
    .glGetShaderiv = epoxy_glGetShaderiv_dispatch_table_rewrite_ptr,
    .glGetSharpenTexFuncSGIS = epoxy_glGetSharpenTexFuncSGIS_dispatch_table_rewrite_ptr,
    .glGetStageIndexNV = epoxy_glGetStageIndexNV_dispatch_table_rewrite_ptr,
    .glGetString = epoxy_glGetString_dispatch_table_rewrite_ptr,
    .glGetStringi = epoxy_glGetStringi_dispatch_table_rewrite_ptr,
    .glGetSubroutineIndex = epoxy_glGetSubroutineIndex_dispatch_table_rewrite_ptr,
    .glGetSubroutineUniformLocation = epoxy_glGetSubroutineUniformLocation_dispatch_table_rewrite_ptr,
    .glGetSynciv = epoxy_glGetSynciv_dispatch_table_rewrite_ptr,
    .glGetSyncivAPPLE = epoxy_glGetSyncivAPPLE_dispatch_table_rewrite_ptr,
    .glGetTexBumpParameterfvATI = epoxy_glGetTexBumpParameterfvATI_dispatch_table_rewrite_ptr,
    .glGetTexBumpParameterivATI = epoxy_glGetTexBumpParameterivATI_dispatch_table_rewrite_ptr,
    .glGetTexEnvfv = epoxy_glGetTexEnvfv_dispatch_table_rewrite_ptr,
    .glGetTexEnviv = epoxy_glGetTexEnviv_dispatch_table_rewrite_ptr,
    .glGetTexEnvxv = epoxy_glGetTexEnvxv_dispatch_table_rewrite_ptr,
    .glGetTexEnvxvOES = epoxy_glGetTexEnvxvOES_dispatch_table_rewrite_ptr,
    .glGetTexFilterFuncSGIS = epoxy_glGetTexFilterFuncSGIS_dispatch_table_rewrite_ptr,
    .glGetTexGendv = epoxy_glGetTexGendv_dispatch_table_rewrite_ptr,
    .glGetTexGenfv = epoxy_glGetTexGenfv_dispatch_table_rewrite_ptr,
    .glGetTexGenfvOES = epoxy_glGetTexGenfvOES_dispatch_table_rewrite_ptr,
    .glGetTexGeniv = epoxy_glGetTexGeniv_dispatch_table_rewrite_ptr,
    .glGetTexGenivOES = epoxy_glGetTexGenivOES_dispatch_table_rewrite_ptr,
    .glGetTexGenxvOES = epoxy_glGetTexGenxvOES_dispatch_table_rewrite_ptr,
    .glGetTexImage = epoxy_glGetTexImage_dispatch_table_rewrite_ptr,
    .glGetTexLevelParameterfv = epoxy_glGetTexLevelParameterfv_dispatch_table_rewrite_ptr,
    .glGetTexLevelParameteriv = epoxy_glGetTexLevelParameteriv_dispatch_table_rewrite_ptr,
    .glGetTexLevelParameterxvOES = epoxy_glGetTexLevelParameterxvOES_dispatch_table_rewrite_ptr,
    .glGetTexParameterIiv = epoxy_glGetTexParameterIiv_dispatch_table_rewrite_ptr,
    .glGetTexParameterIivEXT = epoxy_glGetTexParameterIivEXT_dispatch_table_rewrite_ptr,
    .glGetTexParameterIivOES = epoxy_glGetTexParameterIivOES_dispatch_table_rewrite_ptr,
    .glGetTexParameterIuiv = epoxy_glGetTexParameterIuiv_dispatch_table_rewrite_ptr,
    .glGetTexParameterIuivEXT = epoxy_glGetTexParameterIuivEXT_dispatch_table_rewrite_ptr,
    .glGetTexParameterIuivOES = epoxy_glGetTexParameterIuivOES_dispatch_table_rewrite_ptr,
    .glGetTexParameterPointervAPPLE = epoxy_glGetTexParameterPointervAPPLE_dispatch_table_rewrite_ptr,
    .glGetTexParameterfv = epoxy_glGetTexParameterfv_dispatch_table_rewrite_ptr,
    .glGetTexParameteriv = epoxy_glGetTexParameteriv_dispatch_table_rewrite_ptr,
    .glGetTexParameterxv = epoxy_glGetTexParameterxv_dispatch_table_rewrite_ptr,
    .glGetTexParameterxvOES = epoxy_glGetTexParameterxvOES_dispatch_table_rewrite_ptr,
    .glGetTextureHandleARB = epoxy_glGetTextureHandleARB_dispatch_table_rewrite_ptr,
    .glGetTextureHandleNV = epoxy_glGetTextureHandleNV_dispatch_table_rewrite_ptr,
    .glGetTextureImage = epoxy_glGetTextureImage_dispatch_table_rewrite_ptr,
    .glGetTextureImageEXT = epoxy_glGetTextureImageEXT_dispatch_table_rewrite_ptr,
    .glGetTextureLevelParameterfv = epoxy_glGetTextureLevelParameterfv_dispatch_table_rewrite_ptr,
    .glGetTextureLevelParameterfvEXT = epoxy_glGetTextureLevelParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetTextureLevelParameteriv = epoxy_glGetTextureLevelParameteriv_dispatch_table_rewrite_ptr,
    .glGetTextureLevelParameterivEXT = epoxy_glGetTextureLevelParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetTextureParameterIiv = epoxy_glGetTextureParameterIiv_dispatch_table_rewrite_ptr,
    .glGetTextureParameterIivEXT = epoxy_glGetTextureParameterIivEXT_dispatch_table_rewrite_ptr,
    .glGetTextureParameterIuiv = epoxy_glGetTextureParameterIuiv_dispatch_table_rewrite_ptr,
    .glGetTextureParameterIuivEXT = epoxy_glGetTextureParameterIuivEXT_dispatch_table_rewrite_ptr,
    .glGetTextureParameterfv = epoxy_glGetTextureParameterfv_dispatch_table_rewrite_ptr,
    .glGetTextureParameterfvEXT = epoxy_glGetTextureParameterfvEXT_dispatch_table_rewrite_ptr,
    .glGetTextureParameteriv = epoxy_glGetTextureParameteriv_dispatch_table_rewrite_ptr,
    .glGetTextureParameterivEXT = epoxy_glGetTextureParameterivEXT_dispatch_table_rewrite_ptr,
    .glGetTextureSamplerHandleARB = epoxy_glGetTextureSamplerHandleARB_dispatch_table_rewrite_ptr,
    .glGetTextureSamplerHandleNV = epoxy_glGetTextureSamplerHandleNV_dispatch_table_rewrite_ptr,
    .glGetTextureSubImage = epoxy_glGetTextureSubImage_dispatch_table_rewrite_ptr,
    .glGetTrackMatrixivNV = epoxy_glGetTrackMatrixivNV_dispatch_table_rewrite_ptr,
    .glGetTransformFeedbackVarying = epoxy_glGetTransformFeedbackVarying_dispatch_table_rewrite_ptr,
    .glGetTransformFeedbackVaryingEXT = epoxy_glGetTransformFeedbackVaryingEXT_dispatch_table_rewrite_ptr,
    .glGetTransformFeedbackVaryingNV = epoxy_glGetTransformFeedbackVaryingNV_dispatch_table_rewrite_ptr,
    .glGetTransformFeedbacki64_v = epoxy_glGetTransformFeedbacki64_v_dispatch_table_rewrite_ptr,
    .glGetTransformFeedbacki_v = epoxy_glGetTransformFeedbacki_v_dispatch_table_rewrite_ptr,
    .glGetTransformFeedbackiv = epoxy_glGetTransformFeedbackiv_dispatch_table_rewrite_ptr,
    .glGetTranslatedShaderSourceANGLE = epoxy_glGetTranslatedShaderSourceANGLE_dispatch_table_rewrite_ptr,
    .glGetUniformBlockIndex = epoxy_glGetUniformBlockIndex_dispatch_table_rewrite_ptr,
    .glGetUniformBufferSizeEXT = epoxy_glGetUniformBufferSizeEXT_dispatch_table_rewrite_ptr,
    .glGetUniformIndices = epoxy_glGetUniformIndices_dispatch_table_rewrite_ptr,
    .glGetUniformLocation = epoxy_glGetUniformLocation_dispatch_table_rewrite_ptr,
    .glGetUniformLocationARB = epoxy_glGetUniformLocationARB_dispatch_table_rewrite_ptr,
    .glGetUniformOffsetEXT = epoxy_glGetUniformOffsetEXT_dispatch_table_rewrite_ptr,
    .glGetUniformSubroutineuiv = epoxy_glGetUniformSubroutineuiv_dispatch_table_rewrite_ptr,
    .glGetUniformdv = epoxy_glGetUniformdv_dispatch_table_rewrite_ptr,
    .glGetUniformfv = epoxy_glGetUniformfv_dispatch_table_rewrite_ptr,
    .glGetUniformfvARB = epoxy_glGetUniformfvARB_dispatch_table_rewrite_ptr,
    .glGetUniformi64vNV = epoxy_glGetUniformi64vNV_dispatch_table_rewrite_ptr,
    .glGetUniformiv = epoxy_glGetUniformiv_dispatch_table_rewrite_ptr,
    .glGetUniformivARB = epoxy_glGetUniformivARB_dispatch_table_rewrite_ptr,
    .glGetUniformui64vNV = epoxy_glGetUniformui64vNV_dispatch_table_rewrite_ptr,
    .glGetUniformuiv = epoxy_glGetUniformuiv_dispatch_table_rewrite_ptr,
    .glGetUniformuivEXT = epoxy_glGetUniformuivEXT_dispatch_table_rewrite_ptr,
    .glGetVariantArrayObjectfvATI = epoxy_glGetVariantArrayObjectfvATI_dispatch_table_rewrite_ptr,
    .glGetVariantArrayObjectivATI = epoxy_glGetVariantArrayObjectivATI_dispatch_table_rewrite_ptr,
    .glGetVariantBooleanvEXT = epoxy_glGetVariantBooleanvEXT_dispatch_table_rewrite_ptr,
    .glGetVariantFloatvEXT = epoxy_glGetVariantFloatvEXT_dispatch_table_rewrite_ptr,
    .glGetVariantIntegervEXT = epoxy_glGetVariantIntegervEXT_dispatch_table_rewrite_ptr,
    .glGetVariantPointervEXT = epoxy_glGetVariantPointervEXT_dispatch_table_rewrite_ptr,
    .glGetVaryingLocationNV = epoxy_glGetVaryingLocationNV_dispatch_table_rewrite_ptr,
    .glGetVertexArrayIndexed64iv = epoxy_glGetVertexArrayIndexed64iv_dispatch_table_rewrite_ptr,
    .glGetVertexArrayIndexediv = epoxy_glGetVertexArrayIndexediv_dispatch_table_rewrite_ptr,
    .glGetVertexArrayIntegeri_vEXT = epoxy_glGetVertexArrayIntegeri_vEXT_dispatch_table_rewrite_ptr,
    .glGetVertexArrayIntegervEXT = epoxy_glGetVertexArrayIntegervEXT_dispatch_table_rewrite_ptr,
    .glGetVertexArrayPointeri_vEXT = epoxy_glGetVertexArrayPointeri_vEXT_dispatch_table_rewrite_ptr,
    .glGetVertexArrayPointervEXT = epoxy_glGetVertexArrayPointervEXT_dispatch_table_rewrite_ptr,
    .glGetVertexArrayiv = epoxy_glGetVertexArrayiv_dispatch_table_rewrite_ptr,
    .glGetVertexAttribArrayObjectfvATI = epoxy_glGetVertexAttribArrayObjectfvATI_dispatch_table_rewrite_ptr,
    .glGetVertexAttribArrayObjectivATI = epoxy_glGetVertexAttribArrayObjectivATI_dispatch_table_rewrite_ptr,
    .glGetVertexAttribIiv = epoxy_glGetVertexAttribIiv_dispatch_table_rewrite_ptr,
    .glGetVertexAttribIivEXT = epoxy_glGetVertexAttribIivEXT_dispatch_table_rewrite_ptr,
    .glGetVertexAttribIuiv = epoxy_glGetVertexAttribIuiv_dispatch_table_rewrite_ptr,
    .glGetVertexAttribIuivEXT = epoxy_glGetVertexAttribIuivEXT_dispatch_table_rewrite_ptr,
    .glGetVertexAttribLdv = epoxy_glGetVertexAttribLdv_dispatch_table_rewrite_ptr,
    .glGetVertexAttribLdvEXT = epoxy_glGetVertexAttribLdvEXT_dispatch_table_rewrite_ptr,
    .glGetVertexAttribLi64vNV = epoxy_glGetVertexAttribLi64vNV_dispatch_table_rewrite_ptr,
    .glGetVertexAttribLui64vARB = epoxy_glGetVertexAttribLui64vARB_dispatch_table_rewrite_ptr,
    .glGetVertexAttribLui64vNV = epoxy_glGetVertexAttribLui64vNV_dispatch_table_rewrite_ptr,
    .glGetVertexAttribPointerv = epoxy_glGetVertexAttribPointerv_dispatch_table_rewrite_ptr,
    .glGetVertexAttribPointervARB = epoxy_glGetVertexAttribPointervARB_dispatch_table_rewrite_ptr,
    .glGetVertexAttribPointervNV = epoxy_glGetVertexAttribPointervNV_dispatch_table_rewrite_ptr,
    .glGetVertexAttribdv = epoxy_glGetVertexAttribdv_dispatch_table_rewrite_ptr,
    .glGetVertexAttribdvARB = epoxy_glGetVertexAttribdvARB_dispatch_table_rewrite_ptr,
    .glGetVertexAttribdvNV = epoxy_glGetVertexAttribdvNV_dispatch_table_rewrite_ptr,
    .glGetVertexAttribfv = epoxy_glGetVertexAttribfv_dispatch_table_rewrite_ptr,
    .glGetVertexAttribfvARB = epoxy_glGetVertexAttribfvARB_dispatch_table_rewrite_ptr,
    .glGetVertexAttribfvNV = epoxy_glGetVertexAttribfvNV_dispatch_table_rewrite_ptr,
    .glGetVertexAttribiv = epoxy_glGetVertexAttribiv_dispatch_table_rewrite_ptr,
    .glGetVertexAttribivARB = epoxy_glGetVertexAttribivARB_dispatch_table_rewrite_ptr,
    .glGetVertexAttribivNV = epoxy_glGetVertexAttribivNV_dispatch_table_rewrite_ptr,
    .glGetVideoCaptureStreamdvNV = epoxy_glGetVideoCaptureStreamdvNV_dispatch_table_rewrite_ptr,
    .glGetVideoCaptureStreamfvNV = epoxy_glGetVideoCaptureStreamfvNV_dispatch_table_rewrite_ptr,
    .glGetVideoCaptureStreamivNV = epoxy_glGetVideoCaptureStreamivNV_dispatch_table_rewrite_ptr,
    .glGetVideoCaptureivNV = epoxy_glGetVideoCaptureivNV_dispatch_table_rewrite_ptr,
    .glGetVideoi64vNV = epoxy_glGetVideoi64vNV_dispatch_table_rewrite_ptr,
    .glGetVideoivNV = epoxy_glGetVideoivNV_dispatch_table_rewrite_ptr,
    .glGetVideoui64vNV = epoxy_glGetVideoui64vNV_dispatch_table_rewrite_ptr,
    .glGetVideouivNV = epoxy_glGetVideouivNV_dispatch_table_rewrite_ptr,
    .glGetnColorTable = epoxy_glGetnColorTable_dispatch_table_rewrite_ptr,
    .glGetnColorTableARB = epoxy_glGetnColorTableARB_dispatch_table_rewrite_ptr,
    .glGetnCompressedTexImage = epoxy_glGetnCompressedTexImage_dispatch_table_rewrite_ptr,
    .glGetnCompressedTexImageARB = epoxy_glGetnCompressedTexImageARB_dispatch_table_rewrite_ptr,
    .glGetnConvolutionFilter = epoxy_glGetnConvolutionFilter_dispatch_table_rewrite_ptr,
    .glGetnConvolutionFilterARB = epoxy_glGetnConvolutionFilterARB_dispatch_table_rewrite_ptr,
    .glGetnHistogram = epoxy_glGetnHistogram_dispatch_table_rewrite_ptr,
    .glGetnHistogramARB = epoxy_glGetnHistogramARB_dispatch_table_rewrite_ptr,
    .glGetnMapdv = epoxy_glGetnMapdv_dispatch_table_rewrite_ptr,
    .glGetnMapdvARB = epoxy_glGetnMapdvARB_dispatch_table_rewrite_ptr,
    .glGetnMapfv = epoxy_glGetnMapfv_dispatch_table_rewrite_ptr,
    .glGetnMapfvARB = epoxy_glGetnMapfvARB_dispatch_table_rewrite_ptr,
    .glGetnMapiv = epoxy_glGetnMapiv_dispatch_table_rewrite_ptr,
    .glGetnMapivARB = epoxy_glGetnMapivARB_dispatch_table_rewrite_ptr,
    .glGetnMinmax = epoxy_glGetnMinmax_dispatch_table_rewrite_ptr,
    .glGetnMinmaxARB = epoxy_glGetnMinmaxARB_dispatch_table_rewrite_ptr,
    .glGetnPixelMapfv = epoxy_glGetnPixelMapfv_dispatch_table_rewrite_ptr,
    .glGetnPixelMapfvARB = epoxy_glGetnPixelMapfvARB_dispatch_table_rewrite_ptr,
    .glGetnPixelMapuiv = epoxy_glGetnPixelMapuiv_dispatch_table_rewrite_ptr,
    .glGetnPixelMapuivARB = epoxy_glGetnPixelMapuivARB_dispatch_table_rewrite_ptr,
    .glGetnPixelMapusv = epoxy_glGetnPixelMapusv_dispatch_table_rewrite_ptr,
    .glGetnPixelMapusvARB = epoxy_glGetnPixelMapusvARB_dispatch_table_rewrite_ptr,
    .glGetnPolygonStipple = epoxy_glGetnPolygonStipple_dispatch_table_rewrite_ptr,
    .glGetnPolygonStippleARB = epoxy_glGetnPolygonStippleARB_dispatch_table_rewrite_ptr,
    .glGetnSeparableFilter = epoxy_glGetnSeparableFilter_dispatch_table_rewrite_ptr,
    .glGetnSeparableFilterARB = epoxy_glGetnSeparableFilterARB_dispatch_table_rewrite_ptr,
    .glGetnTexImage = epoxy_glGetnTexImage_dispatch_table_rewrite_ptr,
    .glGetnTexImageARB = epoxy_glGetnTexImageARB_dispatch_table_rewrite_ptr,
    .glGetnUniformdv = epoxy_glGetnUniformdv_dispatch_table_rewrite_ptr,
    .glGetnUniformdvARB = epoxy_glGetnUniformdvARB_dispatch_table_rewrite_ptr,
    .glGetnUniformfv = epoxy_glGetnUniformfv_dispatch_table_rewrite_ptr,
    .glGetnUniformfvARB = epoxy_glGetnUniformfvARB_dispatch_table_rewrite_ptr,
    .glGetnUniformfvEXT = epoxy_glGetnUniformfvEXT_dispatch_table_rewrite_ptr,
    .glGetnUniformfvKHR = epoxy_glGetnUniformfvKHR_dispatch_table_rewrite_ptr,
    .glGetnUniformiv = epoxy_glGetnUniformiv_dispatch_table_rewrite_ptr,
    .glGetnUniformivARB = epoxy_glGetnUniformivARB_dispatch_table_rewrite_ptr,
    .glGetnUniformivEXT = epoxy_glGetnUniformivEXT_dispatch_table_rewrite_ptr,
    .glGetnUniformivKHR = epoxy_glGetnUniformivKHR_dispatch_table_rewrite_ptr,
    .glGetnUniformuiv = epoxy_glGetnUniformuiv_dispatch_table_rewrite_ptr,
    .glGetnUniformuivARB = epoxy_glGetnUniformuivARB_dispatch_table_rewrite_ptr,
    .glGetnUniformuivKHR = epoxy_glGetnUniformuivKHR_dispatch_table_rewrite_ptr,
    .glGlobalAlphaFactorbSUN = epoxy_glGlobalAlphaFactorbSUN_dispatch_table_rewrite_ptr,
    .glGlobalAlphaFactordSUN = epoxy_glGlobalAlphaFactordSUN_dispatch_table_rewrite_ptr,
    .glGlobalAlphaFactorfSUN = epoxy_glGlobalAlphaFactorfSUN_dispatch_table_rewrite_ptr,
    .glGlobalAlphaFactoriSUN = epoxy_glGlobalAlphaFactoriSUN_dispatch_table_rewrite_ptr,
    .glGlobalAlphaFactorsSUN = epoxy_glGlobalAlphaFactorsSUN_dispatch_table_rewrite_ptr,
    .glGlobalAlphaFactorubSUN = epoxy_glGlobalAlphaFactorubSUN_dispatch_table_rewrite_ptr,
    .glGlobalAlphaFactoruiSUN = epoxy_glGlobalAlphaFactoruiSUN_dispatch_table_rewrite_ptr,
    .glGlobalAlphaFactorusSUN = epoxy_glGlobalAlphaFactorusSUN_dispatch_table_rewrite_ptr,
    .glHint = epoxy_glHint_dispatch_table_rewrite_ptr,
    .glHintPGI = epoxy_glHintPGI_dispatch_table_rewrite_ptr,
    .glHistogram = epoxy_glHistogram_dispatch_table_rewrite_ptr,
    .glHistogramEXT = epoxy_glHistogramEXT_dispatch_table_rewrite_ptr,
    .glIglooInterfaceSGIX = epoxy_glIglooInterfaceSGIX_dispatch_table_rewrite_ptr,
    .glImageTransformParameterfHP = epoxy_glImageTransformParameterfHP_dispatch_table_rewrite_ptr,
    .glImageTransformParameterfvHP = epoxy_glImageTransformParameterfvHP_dispatch_table_rewrite_ptr,
    .glImageTransformParameteriHP = epoxy_glImageTransformParameteriHP_dispatch_table_rewrite_ptr,
    .glImageTransformParameterivHP = epoxy_glImageTransformParameterivHP_dispatch_table_rewrite_ptr,
    .glImportSyncEXT = epoxy_glImportSyncEXT_dispatch_table_rewrite_ptr,
    .glIndexFormatNV = epoxy_glIndexFormatNV_dispatch_table_rewrite_ptr,
    .glIndexFuncEXT = epoxy_glIndexFuncEXT_dispatch_table_rewrite_ptr,
    .glIndexMask = epoxy_glIndexMask_dispatch_table_rewrite_ptr,
    .glIndexMaterialEXT = epoxy_glIndexMaterialEXT_dispatch_table_rewrite_ptr,
    .glIndexPointer = epoxy_glIndexPointer_dispatch_table_rewrite_ptr,
    .glIndexPointerEXT = epoxy_glIndexPointerEXT_dispatch_table_rewrite_ptr,
    .glIndexPointerListIBM = epoxy_glIndexPointerListIBM_dispatch_table_rewrite_ptr,
    .glIndexd = epoxy_glIndexd_dispatch_table_rewrite_ptr,
    .glIndexdv = epoxy_glIndexdv_dispatch_table_rewrite_ptr,
    .glIndexf = epoxy_glIndexf_dispatch_table_rewrite_ptr,
    .glIndexfv = epoxy_glIndexfv_dispatch_table_rewrite_ptr,
    .glIndexi = epoxy_glIndexi_dispatch_table_rewrite_ptr,
    .glIndexiv = epoxy_glIndexiv_dispatch_table_rewrite_ptr,
    .glIndexs = epoxy_glIndexs_dispatch_table_rewrite_ptr,
    .glIndexsv = epoxy_glIndexsv_dispatch_table_rewrite_ptr,
    .glIndexub = epoxy_glIndexub_dispatch_table_rewrite_ptr,
    .glIndexubv = epoxy_glIndexubv_dispatch_table_rewrite_ptr,
    .glIndexxOES = epoxy_glIndexxOES_dispatch_table_rewrite_ptr,
    .glIndexxvOES = epoxy_glIndexxvOES_dispatch_table_rewrite_ptr,
    .glInitNames = epoxy_glInitNames_dispatch_table_rewrite_ptr,
    .glInsertComponentEXT = epoxy_glInsertComponentEXT_dispatch_table_rewrite_ptr,
    .glInsertEventMarkerEXT = epoxy_glInsertEventMarkerEXT_dispatch_table_rewrite_ptr,
    .glInstrumentsBufferSGIX = epoxy_glInstrumentsBufferSGIX_dispatch_table_rewrite_ptr,
    .glInterleavedArrays = epoxy_glInterleavedArrays_dispatch_table_rewrite_ptr,
    .glInterpolatePathsNV = epoxy_glInterpolatePathsNV_dispatch_table_rewrite_ptr,
    .glInvalidateBufferData = epoxy_glInvalidateBufferData_dispatch_table_rewrite_ptr,
    .glInvalidateBufferSubData = epoxy_glInvalidateBufferSubData_dispatch_table_rewrite_ptr,
    .glInvalidateFramebuffer = epoxy_glInvalidateFramebuffer_dispatch_table_rewrite_ptr,
    .glInvalidateNamedFramebufferData = epoxy_glInvalidateNamedFramebufferData_dispatch_table_rewrite_ptr,
    .glInvalidateNamedFramebufferSubData = epoxy_glInvalidateNamedFramebufferSubData_dispatch_table_rewrite_ptr,
    .glInvalidateSubFramebuffer = epoxy_glInvalidateSubFramebuffer_dispatch_table_rewrite_ptr,
    .glInvalidateTexImage = epoxy_glInvalidateTexImage_dispatch_table_rewrite_ptr,
    .glInvalidateTexSubImage = epoxy_glInvalidateTexSubImage_dispatch_table_rewrite_ptr,
    .glIsAsyncMarkerSGIX = epoxy_glIsAsyncMarkerSGIX_dispatch_table_rewrite_ptr,
    .glIsBuffer = epoxy_glIsBuffer_dispatch_table_rewrite_ptr,
    .glIsBufferARB = epoxy_glIsBufferARB_dispatch_table_rewrite_ptr,
    .glIsBufferResidentNV = epoxy_glIsBufferResidentNV_dispatch_table_rewrite_ptr,
    .glIsCommandListNV = epoxy_glIsCommandListNV_dispatch_table_rewrite_ptr,
    .glIsEnabled = epoxy_glIsEnabled_dispatch_table_rewrite_ptr,
    .glIsEnabledIndexedEXT = epoxy_glIsEnabledIndexedEXT_dispatch_table_rewrite_ptr,
    .glIsEnabledi = epoxy_glIsEnabledi_dispatch_table_rewrite_ptr,
    .glIsEnablediEXT = epoxy_glIsEnablediEXT_dispatch_table_rewrite_ptr,
    .glIsEnablediNV = epoxy_glIsEnablediNV_dispatch_table_rewrite_ptr,
    .glIsEnablediOES = epoxy_glIsEnablediOES_dispatch_table_rewrite_ptr,
    .glIsFenceAPPLE = epoxy_glIsFenceAPPLE_dispatch_table_rewrite_ptr,
    .glIsFenceNV = epoxy_glIsFenceNV_dispatch_table_rewrite_ptr,
    .glIsFramebuffer = epoxy_glIsFramebuffer_dispatch_table_rewrite_ptr,
    .glIsFramebufferEXT = epoxy_glIsFramebufferEXT_dispatch_table_rewrite_ptr,
    .glIsFramebufferOES = epoxy_glIsFramebufferOES_dispatch_table_rewrite_ptr,
    .glIsImageHandleResidentARB = epoxy_glIsImageHandleResidentARB_dispatch_table_rewrite_ptr,
    .glIsImageHandleResidentNV = epoxy_glIsImageHandleResidentNV_dispatch_table_rewrite_ptr,
    .glIsList = epoxy_glIsList_dispatch_table_rewrite_ptr,
    .glIsNameAMD = epoxy_glIsNameAMD_dispatch_table_rewrite_ptr,
    .glIsNamedBufferResidentNV = epoxy_glIsNamedBufferResidentNV_dispatch_table_rewrite_ptr,
    .glIsNamedStringARB = epoxy_glIsNamedStringARB_dispatch_table_rewrite_ptr,
    .glIsObjectBufferATI = epoxy_glIsObjectBufferATI_dispatch_table_rewrite_ptr,
    .glIsOcclusionQueryNV = epoxy_glIsOcclusionQueryNV_dispatch_table_rewrite_ptr,
    .glIsPathNV = epoxy_glIsPathNV_dispatch_table_rewrite_ptr,
    .glIsPointInFillPathNV = epoxy_glIsPointInFillPathNV_dispatch_table_rewrite_ptr,
    .glIsPointInStrokePathNV = epoxy_glIsPointInStrokePathNV_dispatch_table_rewrite_ptr,
    .glIsProgram = epoxy_glIsProgram_dispatch_table_rewrite_ptr,
    .glIsProgramARB = epoxy_glIsProgramARB_dispatch_table_rewrite_ptr,
    .glIsProgramNV = epoxy_glIsProgramNV_dispatch_table_rewrite_ptr,
    .glIsProgramPipeline = epoxy_glIsProgramPipeline_dispatch_table_rewrite_ptr,
    .glIsProgramPipelineEXT = epoxy_glIsProgramPipelineEXT_dispatch_table_rewrite_ptr,
    .glIsQuery = epoxy_glIsQuery_dispatch_table_rewrite_ptr,
    .glIsQueryARB = epoxy_glIsQueryARB_dispatch_table_rewrite_ptr,
    .glIsQueryEXT = epoxy_glIsQueryEXT_dispatch_table_rewrite_ptr,
    .glIsRenderbuffer = epoxy_glIsRenderbuffer_dispatch_table_rewrite_ptr,
    .glIsRenderbufferEXT = epoxy_glIsRenderbufferEXT_dispatch_table_rewrite_ptr,
    .glIsRenderbufferOES = epoxy_glIsRenderbufferOES_dispatch_table_rewrite_ptr,
    .glIsSampler = epoxy_glIsSampler_dispatch_table_rewrite_ptr,
    .glIsShader = epoxy_glIsShader_dispatch_table_rewrite_ptr,
    .glIsStateNV = epoxy_glIsStateNV_dispatch_table_rewrite_ptr,
    .glIsSync = epoxy_glIsSync_dispatch_table_rewrite_ptr,
    .glIsSyncAPPLE = epoxy_glIsSyncAPPLE_dispatch_table_rewrite_ptr,
    .glIsTexture = epoxy_glIsTexture_dispatch_table_rewrite_ptr,
    .glIsTextureEXT = epoxy_glIsTextureEXT_dispatch_table_rewrite_ptr,
    .glIsTextureHandleResidentARB = epoxy_glIsTextureHandleResidentARB_dispatch_table_rewrite_ptr,
    .glIsTextureHandleResidentNV = epoxy_glIsTextureHandleResidentNV_dispatch_table_rewrite_ptr,
    .glIsTransformFeedback = epoxy_glIsTransformFeedback_dispatch_table_rewrite_ptr,
    .glIsTransformFeedbackNV = epoxy_glIsTransformFeedbackNV_dispatch_table_rewrite_ptr,
    .glIsVariantEnabledEXT = epoxy_glIsVariantEnabledEXT_dispatch_table_rewrite_ptr,
    .glIsVertexArray = epoxy_glIsVertexArray_dispatch_table_rewrite_ptr,
    .glIsVertexArrayAPPLE = epoxy_glIsVertexArrayAPPLE_dispatch_table_rewrite_ptr,
    .glIsVertexArrayOES = epoxy_glIsVertexArrayOES_dispatch_table_rewrite_ptr,
    .glIsVertexAttribEnabledAPPLE = epoxy_glIsVertexAttribEnabledAPPLE_dispatch_table_rewrite_ptr,
    .glLabelObjectEXT = epoxy_glLabelObjectEXT_dispatch_table_rewrite_ptr,
    .glLightEnviSGIX = epoxy_glLightEnviSGIX_dispatch_table_rewrite_ptr,
    .glLightModelf = epoxy_glLightModelf_dispatch_table_rewrite_ptr,
    .glLightModelfv = epoxy_glLightModelfv_dispatch_table_rewrite_ptr,
    .glLightModeli = epoxy_glLightModeli_dispatch_table_rewrite_ptr,
    .glLightModeliv = epoxy_glLightModeliv_dispatch_table_rewrite_ptr,
    .glLightModelx = epoxy_glLightModelx_dispatch_table_rewrite_ptr,
    .glLightModelxOES = epoxy_glLightModelxOES_dispatch_table_rewrite_ptr,
    .glLightModelxv = epoxy_glLightModelxv_dispatch_table_rewrite_ptr,
    .glLightModelxvOES = epoxy_glLightModelxvOES_dispatch_table_rewrite_ptr,
    .glLightf = epoxy_glLightf_dispatch_table_rewrite_ptr,
    .glLightfv = epoxy_glLightfv_dispatch_table_rewrite_ptr,
    .glLighti = epoxy_glLighti_dispatch_table_rewrite_ptr,
    .glLightiv = epoxy_glLightiv_dispatch_table_rewrite_ptr,
    .glLightx = epoxy_glLightx_dispatch_table_rewrite_ptr,
    .glLightxOES = epoxy_glLightxOES_dispatch_table_rewrite_ptr,
    .glLightxv = epoxy_glLightxv_dispatch_table_rewrite_ptr,
    .glLightxvOES = epoxy_glLightxvOES_dispatch_table_rewrite_ptr,
    .glLineStipple = epoxy_glLineStipple_dispatch_table_rewrite_ptr,
    .glLineWidth = epoxy_glLineWidth_dispatch_table_rewrite_ptr,
    .glLineWidthx = epoxy_glLineWidthx_dispatch_table_rewrite_ptr,
    .glLineWidthxOES = epoxy_glLineWidthxOES_dispatch_table_rewrite_ptr,
    .glLinkProgram = epoxy_glLinkProgram_dispatch_table_rewrite_ptr,
    .glLinkProgramARB = epoxy_glLinkProgramARB_dispatch_table_rewrite_ptr,
    .glListBase = epoxy_glListBase_dispatch_table_rewrite_ptr,
    .glListDrawCommandsStatesClientNV = epoxy_glListDrawCommandsStatesClientNV_dispatch_table_rewrite_ptr,
    .glListParameterfSGIX = epoxy_glListParameterfSGIX_dispatch_table_rewrite_ptr,
    .glListParameterfvSGIX = epoxy_glListParameterfvSGIX_dispatch_table_rewrite_ptr,
    .glListParameteriSGIX = epoxy_glListParameteriSGIX_dispatch_table_rewrite_ptr,
    .glListParameterivSGIX = epoxy_glListParameterivSGIX_dispatch_table_rewrite_ptr,
    .glLoadIdentity = epoxy_glLoadIdentity_dispatch_table_rewrite_ptr,
    .glLoadIdentityDeformationMapSGIX = epoxy_glLoadIdentityDeformationMapSGIX_dispatch_table_rewrite_ptr,
    .glLoadMatrixd = epoxy_glLoadMatrixd_dispatch_table_rewrite_ptr,
    .glLoadMatrixf = epoxy_glLoadMatrixf_dispatch_table_rewrite_ptr,
    .glLoadMatrixx = epoxy_glLoadMatrixx_dispatch_table_rewrite_ptr,
    .glLoadMatrixxOES = epoxy_glLoadMatrixxOES_dispatch_table_rewrite_ptr,
    .glLoadName = epoxy_glLoadName_dispatch_table_rewrite_ptr,
    .glLoadPaletteFromModelViewMatrixOES = epoxy_glLoadPaletteFromModelViewMatrixOES_dispatch_table_rewrite_ptr,
    .glLoadProgramNV = epoxy_glLoadProgramNV_dispatch_table_rewrite_ptr,
    .glLoadTransposeMatrixd = epoxy_glLoadTransposeMatrixd_dispatch_table_rewrite_ptr,
    .glLoadTransposeMatrixdARB = epoxy_glLoadTransposeMatrixdARB_dispatch_table_rewrite_ptr,
    .glLoadTransposeMatrixf = epoxy_glLoadTransposeMatrixf_dispatch_table_rewrite_ptr,
    .glLoadTransposeMatrixfARB = epoxy_glLoadTransposeMatrixfARB_dispatch_table_rewrite_ptr,
    .glLoadTransposeMatrixxOES = epoxy_glLoadTransposeMatrixxOES_dispatch_table_rewrite_ptr,
    .glLockArraysEXT = epoxy_glLockArraysEXT_dispatch_table_rewrite_ptr,
    .glLogicOp = epoxy_glLogicOp_dispatch_table_rewrite_ptr,
    .glMakeBufferNonResidentNV = epoxy_glMakeBufferNonResidentNV_dispatch_table_rewrite_ptr,
    .glMakeBufferResidentNV = epoxy_glMakeBufferResidentNV_dispatch_table_rewrite_ptr,
    .glMakeImageHandleNonResidentARB = epoxy_glMakeImageHandleNonResidentARB_dispatch_table_rewrite_ptr,
    .glMakeImageHandleNonResidentNV = epoxy_glMakeImageHandleNonResidentNV_dispatch_table_rewrite_ptr,
    .glMakeImageHandleResidentARB = epoxy_glMakeImageHandleResidentARB_dispatch_table_rewrite_ptr,
    .glMakeImageHandleResidentNV = epoxy_glMakeImageHandleResidentNV_dispatch_table_rewrite_ptr,
    .glMakeNamedBufferNonResidentNV = epoxy_glMakeNamedBufferNonResidentNV_dispatch_table_rewrite_ptr,
    .glMakeNamedBufferResidentNV = epoxy_glMakeNamedBufferResidentNV_dispatch_table_rewrite_ptr,
    .glMakeTextureHandleNonResidentARB = epoxy_glMakeTextureHandleNonResidentARB_dispatch_table_rewrite_ptr,
    .glMakeTextureHandleNonResidentNV = epoxy_glMakeTextureHandleNonResidentNV_dispatch_table_rewrite_ptr,
    .glMakeTextureHandleResidentARB = epoxy_glMakeTextureHandleResidentARB_dispatch_table_rewrite_ptr,
    .glMakeTextureHandleResidentNV = epoxy_glMakeTextureHandleResidentNV_dispatch_table_rewrite_ptr,
    .glMap1d = epoxy_glMap1d_dispatch_table_rewrite_ptr,
    .glMap1f = epoxy_glMap1f_dispatch_table_rewrite_ptr,
    .glMap1xOES = epoxy_glMap1xOES_dispatch_table_rewrite_ptr,
    .glMap2d = epoxy_glMap2d_dispatch_table_rewrite_ptr,
    .glMap2f = epoxy_glMap2f_dispatch_table_rewrite_ptr,
    .glMap2xOES = epoxy_glMap2xOES_dispatch_table_rewrite_ptr,
    .glMapBuffer = epoxy_glMapBuffer_dispatch_table_rewrite_ptr,
    .glMapBufferARB = epoxy_glMapBufferARB_dispatch_table_rewrite_ptr,
    .glMapBufferOES = epoxy_glMapBufferOES_dispatch_table_rewrite_ptr,
    .glMapBufferRange = epoxy_glMapBufferRange_dispatch_table_rewrite_ptr,
    .glMapBufferRangeEXT = epoxy_glMapBufferRangeEXT_dispatch_table_rewrite_ptr,
    .glMapControlPointsNV = epoxy_glMapControlPointsNV_dispatch_table_rewrite_ptr,
    .glMapGrid1d = epoxy_glMapGrid1d_dispatch_table_rewrite_ptr,
    .glMapGrid1f = epoxy_glMapGrid1f_dispatch_table_rewrite_ptr,
    .glMapGrid1xOES = epoxy_glMapGrid1xOES_dispatch_table_rewrite_ptr,
    .glMapGrid2d = epoxy_glMapGrid2d_dispatch_table_rewrite_ptr,
    .glMapGrid2f = epoxy_glMapGrid2f_dispatch_table_rewrite_ptr,
    .glMapGrid2xOES = epoxy_glMapGrid2xOES_dispatch_table_rewrite_ptr,
    .glMapNamedBuffer = epoxy_glMapNamedBuffer_dispatch_table_rewrite_ptr,
    .glMapNamedBufferEXT = epoxy_glMapNamedBufferEXT_dispatch_table_rewrite_ptr,
    .glMapNamedBufferRange = epoxy_glMapNamedBufferRange_dispatch_table_rewrite_ptr,
    .glMapNamedBufferRangeEXT = epoxy_glMapNamedBufferRangeEXT_dispatch_table_rewrite_ptr,
    .glMapObjectBufferATI = epoxy_glMapObjectBufferATI_dispatch_table_rewrite_ptr,
    .glMapParameterfvNV = epoxy_glMapParameterfvNV_dispatch_table_rewrite_ptr,
    .glMapParameterivNV = epoxy_glMapParameterivNV_dispatch_table_rewrite_ptr,
    .glMapTexture2DINTEL = epoxy_glMapTexture2DINTEL_dispatch_table_rewrite_ptr,
    .glMapVertexAttrib1dAPPLE = epoxy_glMapVertexAttrib1dAPPLE_dispatch_table_rewrite_ptr,
    .glMapVertexAttrib1fAPPLE = epoxy_glMapVertexAttrib1fAPPLE_dispatch_table_rewrite_ptr,
    .glMapVertexAttrib2dAPPLE = epoxy_glMapVertexAttrib2dAPPLE_dispatch_table_rewrite_ptr,
    .glMapVertexAttrib2fAPPLE = epoxy_glMapVertexAttrib2fAPPLE_dispatch_table_rewrite_ptr,
    .glMaterialf = epoxy_glMaterialf_dispatch_table_rewrite_ptr,
    .glMaterialfv = epoxy_glMaterialfv_dispatch_table_rewrite_ptr,
    .glMateriali = epoxy_glMateriali_dispatch_table_rewrite_ptr,
    .glMaterialiv = epoxy_glMaterialiv_dispatch_table_rewrite_ptr,
    .glMaterialx = epoxy_glMaterialx_dispatch_table_rewrite_ptr,
    .glMaterialxOES = epoxy_glMaterialxOES_dispatch_table_rewrite_ptr,
    .glMaterialxv = epoxy_glMaterialxv_dispatch_table_rewrite_ptr,
    .glMaterialxvOES = epoxy_glMaterialxvOES_dispatch_table_rewrite_ptr,
    .glMatrixFrustumEXT = epoxy_glMatrixFrustumEXT_dispatch_table_rewrite_ptr,
    .glMatrixIndexPointerARB = epoxy_glMatrixIndexPointerARB_dispatch_table_rewrite_ptr,
    .glMatrixIndexPointerOES = epoxy_glMatrixIndexPointerOES_dispatch_table_rewrite_ptr,
    .glMatrixIndexubvARB = epoxy_glMatrixIndexubvARB_dispatch_table_rewrite_ptr,
    .glMatrixIndexuivARB = epoxy_glMatrixIndexuivARB_dispatch_table_rewrite_ptr,
    .glMatrixIndexusvARB = epoxy_glMatrixIndexusvARB_dispatch_table_rewrite_ptr,
    .glMatrixLoad3x2fNV = epoxy_glMatrixLoad3x2fNV_dispatch_table_rewrite_ptr,
    .glMatrixLoad3x3fNV = epoxy_glMatrixLoad3x3fNV_dispatch_table_rewrite_ptr,
    .glMatrixLoadIdentityEXT = epoxy_glMatrixLoadIdentityEXT_dispatch_table_rewrite_ptr,
    .glMatrixLoadTranspose3x3fNV = epoxy_glMatrixLoadTranspose3x3fNV_dispatch_table_rewrite_ptr,
    .glMatrixLoadTransposedEXT = epoxy_glMatrixLoadTransposedEXT_dispatch_table_rewrite_ptr,
    .glMatrixLoadTransposefEXT = epoxy_glMatrixLoadTransposefEXT_dispatch_table_rewrite_ptr,
    .glMatrixLoaddEXT = epoxy_glMatrixLoaddEXT_dispatch_table_rewrite_ptr,
    .glMatrixLoadfEXT = epoxy_glMatrixLoadfEXT_dispatch_table_rewrite_ptr,
    .glMatrixMode = epoxy_glMatrixMode_dispatch_table_rewrite_ptr,
    .glMatrixMult3x2fNV = epoxy_glMatrixMult3x2fNV_dispatch_table_rewrite_ptr,
    .glMatrixMult3x3fNV = epoxy_glMatrixMult3x3fNV_dispatch_table_rewrite_ptr,
    .glMatrixMultTranspose3x3fNV = epoxy_glMatrixMultTranspose3x3fNV_dispatch_table_rewrite_ptr,
    .glMatrixMultTransposedEXT = epoxy_glMatrixMultTransposedEXT_dispatch_table_rewrite_ptr,
    .glMatrixMultTransposefEXT = epoxy_glMatrixMultTransposefEXT_dispatch_table_rewrite_ptr,
    .glMatrixMultdEXT = epoxy_glMatrixMultdEXT_dispatch_table_rewrite_ptr,
    .glMatrixMultfEXT = epoxy_glMatrixMultfEXT_dispatch_table_rewrite_ptr,
    .glMatrixOrthoEXT = epoxy_glMatrixOrthoEXT_dispatch_table_rewrite_ptr,
    .glMatrixPopEXT = epoxy_glMatrixPopEXT_dispatch_table_rewrite_ptr,
    .glMatrixPushEXT = epoxy_glMatrixPushEXT_dispatch_table_rewrite_ptr,
    .glMatrixRotatedEXT = epoxy_glMatrixRotatedEXT_dispatch_table_rewrite_ptr,
    .glMatrixRotatefEXT = epoxy_glMatrixRotatefEXT_dispatch_table_rewrite_ptr,
    .glMatrixScaledEXT = epoxy_glMatrixScaledEXT_dispatch_table_rewrite_ptr,
    .glMatrixScalefEXT = epoxy_glMatrixScalefEXT_dispatch_table_rewrite_ptr,
    .glMatrixTranslatedEXT = epoxy_glMatrixTranslatedEXT_dispatch_table_rewrite_ptr,
    .glMatrixTranslatefEXT = epoxy_glMatrixTranslatefEXT_dispatch_table_rewrite_ptr,
    .glMemoryBarrier = epoxy_glMemoryBarrier_dispatch_table_rewrite_ptr,
    .glMemoryBarrierByRegion = epoxy_glMemoryBarrierByRegion_dispatch_table_rewrite_ptr,
    .glMemoryBarrierEXT = epoxy_glMemoryBarrierEXT_dispatch_table_rewrite_ptr,
    .glMinSampleShading = epoxy_glMinSampleShading_dispatch_table_rewrite_ptr,
    .glMinSampleShadingARB = epoxy_glMinSampleShadingARB_dispatch_table_rewrite_ptr,
    .glMinSampleShadingOES = epoxy_glMinSampleShadingOES_dispatch_table_rewrite_ptr,
    .glMinmax = epoxy_glMinmax_dispatch_table_rewrite_ptr,
    .glMinmaxEXT = epoxy_glMinmaxEXT_dispatch_table_rewrite_ptr,
    .glMultMatrixd = epoxy_glMultMatrixd_dispatch_table_rewrite_ptr,
    .glMultMatrixf = epoxy_glMultMatrixf_dispatch_table_rewrite_ptr,
    .glMultMatrixx = epoxy_glMultMatrixx_dispatch_table_rewrite_ptr,
    .glMultMatrixxOES = epoxy_glMultMatrixxOES_dispatch_table_rewrite_ptr,
    .glMultTransposeMatrixd = epoxy_glMultTransposeMatrixd_dispatch_table_rewrite_ptr,
    .glMultTransposeMatrixdARB = epoxy_glMultTransposeMatrixdARB_dispatch_table_rewrite_ptr,
    .glMultTransposeMatrixf = epoxy_glMultTransposeMatrixf_dispatch_table_rewrite_ptr,
    .glMultTransposeMatrixfARB = epoxy_glMultTransposeMatrixfARB_dispatch_table_rewrite_ptr,
    .glMultTransposeMatrixxOES = epoxy_glMultTransposeMatrixxOES_dispatch_table_rewrite_ptr,
    .glMultiDrawArrays = epoxy_glMultiDrawArrays_dispatch_table_rewrite_ptr,
    .glMultiDrawArraysEXT = epoxy_glMultiDrawArraysEXT_dispatch_table_rewrite_ptr,
    .glMultiDrawArraysIndirect = epoxy_glMultiDrawArraysIndirect_dispatch_table_rewrite_ptr,
    .glMultiDrawArraysIndirectAMD = epoxy_glMultiDrawArraysIndirectAMD_dispatch_table_rewrite_ptr,
    .glMultiDrawArraysIndirectBindlessCountNV = epoxy_glMultiDrawArraysIndirectBindlessCountNV_dispatch_table_rewrite_ptr,
    .glMultiDrawArraysIndirectBindlessNV = epoxy_glMultiDrawArraysIndirectBindlessNV_dispatch_table_rewrite_ptr,
    .glMultiDrawArraysIndirectCountARB = epoxy_glMultiDrawArraysIndirectCountARB_dispatch_table_rewrite_ptr,
    .glMultiDrawArraysIndirectEXT = epoxy_glMultiDrawArraysIndirectEXT_dispatch_table_rewrite_ptr,
    .glMultiDrawElementArrayAPPLE = epoxy_glMultiDrawElementArrayAPPLE_dispatch_table_rewrite_ptr,
    .glMultiDrawElements = epoxy_glMultiDrawElements_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsBaseVertex = epoxy_glMultiDrawElementsBaseVertex_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsBaseVertexEXT = epoxy_glMultiDrawElementsBaseVertexEXT_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsBaseVertexOES = epoxy_glMultiDrawElementsBaseVertexOES_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsEXT = epoxy_glMultiDrawElementsEXT_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsIndirect = epoxy_glMultiDrawElementsIndirect_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsIndirectAMD = epoxy_glMultiDrawElementsIndirectAMD_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsIndirectBindlessCountNV = epoxy_glMultiDrawElementsIndirectBindlessCountNV_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsIndirectBindlessNV = epoxy_glMultiDrawElementsIndirectBindlessNV_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsIndirectCountARB = epoxy_glMultiDrawElementsIndirectCountARB_dispatch_table_rewrite_ptr,
    .glMultiDrawElementsIndirectEXT = epoxy_glMultiDrawElementsIndirectEXT_dispatch_table_rewrite_ptr,
    .glMultiDrawRangeElementArrayAPPLE = epoxy_glMultiDrawRangeElementArrayAPPLE_dispatch_table_rewrite_ptr,
    .glMultiModeDrawArraysIBM = epoxy_glMultiModeDrawArraysIBM_dispatch_table_rewrite_ptr,
    .glMultiModeDrawElementsIBM = epoxy_glMultiModeDrawElementsIBM_dispatch_table_rewrite_ptr,
    .glMultiTexBufferEXT = epoxy_glMultiTexBufferEXT_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1bOES = epoxy_glMultiTexCoord1bOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1bvOES = epoxy_glMultiTexCoord1bvOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1d = epoxy_glMultiTexCoord1d_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1dARB = epoxy_glMultiTexCoord1dARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1dv = epoxy_glMultiTexCoord1dv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1dvARB = epoxy_glMultiTexCoord1dvARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1f = epoxy_glMultiTexCoord1f_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1fARB = epoxy_glMultiTexCoord1fARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1fv = epoxy_glMultiTexCoord1fv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1fvARB = epoxy_glMultiTexCoord1fvARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1hNV = epoxy_glMultiTexCoord1hNV_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1hvNV = epoxy_glMultiTexCoord1hvNV_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1i = epoxy_glMultiTexCoord1i_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1iARB = epoxy_glMultiTexCoord1iARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1iv = epoxy_glMultiTexCoord1iv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1ivARB = epoxy_glMultiTexCoord1ivARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1s = epoxy_glMultiTexCoord1s_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1sARB = epoxy_glMultiTexCoord1sARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1sv = epoxy_glMultiTexCoord1sv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1svARB = epoxy_glMultiTexCoord1svARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1xOES = epoxy_glMultiTexCoord1xOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord1xvOES = epoxy_glMultiTexCoord1xvOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2bOES = epoxy_glMultiTexCoord2bOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2bvOES = epoxy_glMultiTexCoord2bvOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2d = epoxy_glMultiTexCoord2d_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2dARB = epoxy_glMultiTexCoord2dARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2dv = epoxy_glMultiTexCoord2dv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2dvARB = epoxy_glMultiTexCoord2dvARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2f = epoxy_glMultiTexCoord2f_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2fARB = epoxy_glMultiTexCoord2fARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2fv = epoxy_glMultiTexCoord2fv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2fvARB = epoxy_glMultiTexCoord2fvARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2hNV = epoxy_glMultiTexCoord2hNV_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2hvNV = epoxy_glMultiTexCoord2hvNV_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2i = epoxy_glMultiTexCoord2i_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2iARB = epoxy_glMultiTexCoord2iARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2iv = epoxy_glMultiTexCoord2iv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2ivARB = epoxy_glMultiTexCoord2ivARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2s = epoxy_glMultiTexCoord2s_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2sARB = epoxy_glMultiTexCoord2sARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2sv = epoxy_glMultiTexCoord2sv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2svARB = epoxy_glMultiTexCoord2svARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2xOES = epoxy_glMultiTexCoord2xOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord2xvOES = epoxy_glMultiTexCoord2xvOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3bOES = epoxy_glMultiTexCoord3bOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3bvOES = epoxy_glMultiTexCoord3bvOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3d = epoxy_glMultiTexCoord3d_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3dARB = epoxy_glMultiTexCoord3dARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3dv = epoxy_glMultiTexCoord3dv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3dvARB = epoxy_glMultiTexCoord3dvARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3f = epoxy_glMultiTexCoord3f_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3fARB = epoxy_glMultiTexCoord3fARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3fv = epoxy_glMultiTexCoord3fv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3fvARB = epoxy_glMultiTexCoord3fvARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3hNV = epoxy_glMultiTexCoord3hNV_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3hvNV = epoxy_glMultiTexCoord3hvNV_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3i = epoxy_glMultiTexCoord3i_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3iARB = epoxy_glMultiTexCoord3iARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3iv = epoxy_glMultiTexCoord3iv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3ivARB = epoxy_glMultiTexCoord3ivARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3s = epoxy_glMultiTexCoord3s_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3sARB = epoxy_glMultiTexCoord3sARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3sv = epoxy_glMultiTexCoord3sv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3svARB = epoxy_glMultiTexCoord3svARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3xOES = epoxy_glMultiTexCoord3xOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord3xvOES = epoxy_glMultiTexCoord3xvOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4bOES = epoxy_glMultiTexCoord4bOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4bvOES = epoxy_glMultiTexCoord4bvOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4d = epoxy_glMultiTexCoord4d_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4dARB = epoxy_glMultiTexCoord4dARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4dv = epoxy_glMultiTexCoord4dv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4dvARB = epoxy_glMultiTexCoord4dvARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4f = epoxy_glMultiTexCoord4f_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4fARB = epoxy_glMultiTexCoord4fARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4fv = epoxy_glMultiTexCoord4fv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4fvARB = epoxy_glMultiTexCoord4fvARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4hNV = epoxy_glMultiTexCoord4hNV_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4hvNV = epoxy_glMultiTexCoord4hvNV_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4i = epoxy_glMultiTexCoord4i_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4iARB = epoxy_glMultiTexCoord4iARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4iv = epoxy_glMultiTexCoord4iv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4ivARB = epoxy_glMultiTexCoord4ivARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4s = epoxy_glMultiTexCoord4s_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4sARB = epoxy_glMultiTexCoord4sARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4sv = epoxy_glMultiTexCoord4sv_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4svARB = epoxy_glMultiTexCoord4svARB_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4x = epoxy_glMultiTexCoord4x_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4xOES = epoxy_glMultiTexCoord4xOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoord4xvOES = epoxy_glMultiTexCoord4xvOES_dispatch_table_rewrite_ptr,
    .glMultiTexCoordP1ui = epoxy_glMultiTexCoordP1ui_dispatch_table_rewrite_ptr,
    .glMultiTexCoordP1uiv = epoxy_glMultiTexCoordP1uiv_dispatch_table_rewrite_ptr,
    .glMultiTexCoordP2ui = epoxy_glMultiTexCoordP2ui_dispatch_table_rewrite_ptr,
    .glMultiTexCoordP2uiv = epoxy_glMultiTexCoordP2uiv_dispatch_table_rewrite_ptr,
    .glMultiTexCoordP3ui = epoxy_glMultiTexCoordP3ui_dispatch_table_rewrite_ptr,
    .glMultiTexCoordP3uiv = epoxy_glMultiTexCoordP3uiv_dispatch_table_rewrite_ptr,
    .glMultiTexCoordP4ui = epoxy_glMultiTexCoordP4ui_dispatch_table_rewrite_ptr,
    .glMultiTexCoordP4uiv = epoxy_glMultiTexCoordP4uiv_dispatch_table_rewrite_ptr,
    .glMultiTexCoordPointerEXT = epoxy_glMultiTexCoordPointerEXT_dispatch_table_rewrite_ptr,
    .glMultiTexEnvfEXT = epoxy_glMultiTexEnvfEXT_dispatch_table_rewrite_ptr,
    .glMultiTexEnvfvEXT = epoxy_glMultiTexEnvfvEXT_dispatch_table_rewrite_ptr,
    .glMultiTexEnviEXT = epoxy_glMultiTexEnviEXT_dispatch_table_rewrite_ptr,
    .glMultiTexEnvivEXT = epoxy_glMultiTexEnvivEXT_dispatch_table_rewrite_ptr,
    .glMultiTexGendEXT = epoxy_glMultiTexGendEXT_dispatch_table_rewrite_ptr,
    .glMultiTexGendvEXT = epoxy_glMultiTexGendvEXT_dispatch_table_rewrite_ptr,
    .glMultiTexGenfEXT = epoxy_glMultiTexGenfEXT_dispatch_table_rewrite_ptr,
    .glMultiTexGenfvEXT = epoxy_glMultiTexGenfvEXT_dispatch_table_rewrite_ptr,
    .glMultiTexGeniEXT = epoxy_glMultiTexGeniEXT_dispatch_table_rewrite_ptr,
    .glMultiTexGenivEXT = epoxy_glMultiTexGenivEXT_dispatch_table_rewrite_ptr,
    .glMultiTexImage1DEXT = epoxy_glMultiTexImage1DEXT_dispatch_table_rewrite_ptr,
    .glMultiTexImage2DEXT = epoxy_glMultiTexImage2DEXT_dispatch_table_rewrite_ptr,
    .glMultiTexImage3DEXT = epoxy_glMultiTexImage3DEXT_dispatch_table_rewrite_ptr,
    .glMultiTexParameterIivEXT = epoxy_glMultiTexParameterIivEXT_dispatch_table_rewrite_ptr,
    .glMultiTexParameterIuivEXT = epoxy_glMultiTexParameterIuivEXT_dispatch_table_rewrite_ptr,
    .glMultiTexParameterfEXT = epoxy_glMultiTexParameterfEXT_dispatch_table_rewrite_ptr,
    .glMultiTexParameterfvEXT = epoxy_glMultiTexParameterfvEXT_dispatch_table_rewrite_ptr,
    .glMultiTexParameteriEXT = epoxy_glMultiTexParameteriEXT_dispatch_table_rewrite_ptr,
    .glMultiTexParameterivEXT = epoxy_glMultiTexParameterivEXT_dispatch_table_rewrite_ptr,
    .glMultiTexRenderbufferEXT = epoxy_glMultiTexRenderbufferEXT_dispatch_table_rewrite_ptr,
    .glMultiTexSubImage1DEXT = epoxy_glMultiTexSubImage1DEXT_dispatch_table_rewrite_ptr,
    .glMultiTexSubImage2DEXT = epoxy_glMultiTexSubImage2DEXT_dispatch_table_rewrite_ptr,
    .glMultiTexSubImage3DEXT = epoxy_glMultiTexSubImage3DEXT_dispatch_table_rewrite_ptr,
    .glNamedBufferData = epoxy_glNamedBufferData_dispatch_table_rewrite_ptr,
    .glNamedBufferDataEXT = epoxy_glNamedBufferDataEXT_dispatch_table_rewrite_ptr,
    .glNamedBufferPageCommitmentARB = epoxy_glNamedBufferPageCommitmentARB_dispatch_table_rewrite_ptr,
    .glNamedBufferPageCommitmentEXT = epoxy_glNamedBufferPageCommitmentEXT_dispatch_table_rewrite_ptr,
    .glNamedBufferStorage = epoxy_glNamedBufferStorage_dispatch_table_rewrite_ptr,
    .glNamedBufferStorageEXT = epoxy_glNamedBufferStorageEXT_dispatch_table_rewrite_ptr,
    .glNamedBufferSubData = epoxy_glNamedBufferSubData_dispatch_table_rewrite_ptr,
    .glNamedBufferSubDataEXT = epoxy_glNamedBufferSubDataEXT_dispatch_table_rewrite_ptr,
    .glNamedCopyBufferSubDataEXT = epoxy_glNamedCopyBufferSubDataEXT_dispatch_table_rewrite_ptr,
    .glNamedFramebufferDrawBuffer = epoxy_glNamedFramebufferDrawBuffer_dispatch_table_rewrite_ptr,
    .glNamedFramebufferDrawBuffers = epoxy_glNamedFramebufferDrawBuffers_dispatch_table_rewrite_ptr,
    .glNamedFramebufferParameteri = epoxy_glNamedFramebufferParameteri_dispatch_table_rewrite_ptr,
    .glNamedFramebufferParameteriEXT = epoxy_glNamedFramebufferParameteriEXT_dispatch_table_rewrite_ptr,
    .glNamedFramebufferReadBuffer = epoxy_glNamedFramebufferReadBuffer_dispatch_table_rewrite_ptr,
    .glNamedFramebufferRenderbuffer = epoxy_glNamedFramebufferRenderbuffer_dispatch_table_rewrite_ptr,
    .glNamedFramebufferRenderbufferEXT = epoxy_glNamedFramebufferRenderbufferEXT_dispatch_table_rewrite_ptr,
    .glNamedFramebufferSampleLocationsfvNV = epoxy_glNamedFramebufferSampleLocationsfvNV_dispatch_table_rewrite_ptr,
    .glNamedFramebufferTexture = epoxy_glNamedFramebufferTexture_dispatch_table_rewrite_ptr,
    .glNamedFramebufferTexture1DEXT = epoxy_glNamedFramebufferTexture1DEXT_dispatch_table_rewrite_ptr,
    .glNamedFramebufferTexture2DEXT = epoxy_glNamedFramebufferTexture2DEXT_dispatch_table_rewrite_ptr,
    .glNamedFramebufferTexture3DEXT = epoxy_glNamedFramebufferTexture3DEXT_dispatch_table_rewrite_ptr,
    .glNamedFramebufferTextureEXT = epoxy_glNamedFramebufferTextureEXT_dispatch_table_rewrite_ptr,
    .glNamedFramebufferTextureFaceEXT = epoxy_glNamedFramebufferTextureFaceEXT_dispatch_table_rewrite_ptr,
    .glNamedFramebufferTextureLayer = epoxy_glNamedFramebufferTextureLayer_dispatch_table_rewrite_ptr,
    .glNamedFramebufferTextureLayerEXT = epoxy_glNamedFramebufferTextureLayerEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParameter4dEXT = epoxy_glNamedProgramLocalParameter4dEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParameter4dvEXT = epoxy_glNamedProgramLocalParameter4dvEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParameter4fEXT = epoxy_glNamedProgramLocalParameter4fEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParameter4fvEXT = epoxy_glNamedProgramLocalParameter4fvEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParameterI4iEXT = epoxy_glNamedProgramLocalParameterI4iEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParameterI4ivEXT = epoxy_glNamedProgramLocalParameterI4ivEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParameterI4uiEXT = epoxy_glNamedProgramLocalParameterI4uiEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParameterI4uivEXT = epoxy_glNamedProgramLocalParameterI4uivEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParameters4fvEXT = epoxy_glNamedProgramLocalParameters4fvEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParametersI4ivEXT = epoxy_glNamedProgramLocalParametersI4ivEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramLocalParametersI4uivEXT = epoxy_glNamedProgramLocalParametersI4uivEXT_dispatch_table_rewrite_ptr,
    .glNamedProgramStringEXT = epoxy_glNamedProgramStringEXT_dispatch_table_rewrite_ptr,
    .glNamedRenderbufferStorage = epoxy_glNamedRenderbufferStorage_dispatch_table_rewrite_ptr,
    .glNamedRenderbufferStorageEXT = epoxy_glNamedRenderbufferStorageEXT_dispatch_table_rewrite_ptr,
    .glNamedRenderbufferStorageMultisample = epoxy_glNamedRenderbufferStorageMultisample_dispatch_table_rewrite_ptr,
    .glNamedRenderbufferStorageMultisampleCoverageEXT = epoxy_glNamedRenderbufferStorageMultisampleCoverageEXT_dispatch_table_rewrite_ptr,
    .glNamedRenderbufferStorageMultisampleEXT = epoxy_glNamedRenderbufferStorageMultisampleEXT_dispatch_table_rewrite_ptr,
    .glNamedStringARB = epoxy_glNamedStringARB_dispatch_table_rewrite_ptr,
    .glNewList = epoxy_glNewList_dispatch_table_rewrite_ptr,
    .glNewObjectBufferATI = epoxy_glNewObjectBufferATI_dispatch_table_rewrite_ptr,
    .glNormal3b = epoxy_glNormal3b_dispatch_table_rewrite_ptr,
    .glNormal3bv = epoxy_glNormal3bv_dispatch_table_rewrite_ptr,
    .glNormal3d = epoxy_glNormal3d_dispatch_table_rewrite_ptr,
    .glNormal3dv = epoxy_glNormal3dv_dispatch_table_rewrite_ptr,
    .glNormal3f = epoxy_glNormal3f_dispatch_table_rewrite_ptr,
    .glNormal3fVertex3fSUN = epoxy_glNormal3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glNormal3fVertex3fvSUN = epoxy_glNormal3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glNormal3fv = epoxy_glNormal3fv_dispatch_table_rewrite_ptr,
    .glNormal3hNV = epoxy_glNormal3hNV_dispatch_table_rewrite_ptr,
    .glNormal3hvNV = epoxy_glNormal3hvNV_dispatch_table_rewrite_ptr,
    .glNormal3i = epoxy_glNormal3i_dispatch_table_rewrite_ptr,
    .glNormal3iv = epoxy_glNormal3iv_dispatch_table_rewrite_ptr,
    .glNormal3s = epoxy_glNormal3s_dispatch_table_rewrite_ptr,
    .glNormal3sv = epoxy_glNormal3sv_dispatch_table_rewrite_ptr,
    .glNormal3x = epoxy_glNormal3x_dispatch_table_rewrite_ptr,
    .glNormal3xOES = epoxy_glNormal3xOES_dispatch_table_rewrite_ptr,
    .glNormal3xvOES = epoxy_glNormal3xvOES_dispatch_table_rewrite_ptr,
    .glNormalFormatNV = epoxy_glNormalFormatNV_dispatch_table_rewrite_ptr,
    .glNormalP3ui = epoxy_glNormalP3ui_dispatch_table_rewrite_ptr,
    .glNormalP3uiv = epoxy_glNormalP3uiv_dispatch_table_rewrite_ptr,
    .glNormalPointer = epoxy_glNormalPointer_dispatch_table_rewrite_ptr,
    .glNormalPointerEXT = epoxy_glNormalPointerEXT_dispatch_table_rewrite_ptr,
    .glNormalPointerListIBM = epoxy_glNormalPointerListIBM_dispatch_table_rewrite_ptr,
    .glNormalPointervINTEL = epoxy_glNormalPointervINTEL_dispatch_table_rewrite_ptr,
    .glNormalStream3bATI = epoxy_glNormalStream3bATI_dispatch_table_rewrite_ptr,
    .glNormalStream3bvATI = epoxy_glNormalStream3bvATI_dispatch_table_rewrite_ptr,
    .glNormalStream3dATI = epoxy_glNormalStream3dATI_dispatch_table_rewrite_ptr,
    .glNormalStream3dvATI = epoxy_glNormalStream3dvATI_dispatch_table_rewrite_ptr,
    .glNormalStream3fATI = epoxy_glNormalStream3fATI_dispatch_table_rewrite_ptr,
    .glNormalStream3fvATI = epoxy_glNormalStream3fvATI_dispatch_table_rewrite_ptr,
    .glNormalStream3iATI = epoxy_glNormalStream3iATI_dispatch_table_rewrite_ptr,
    .glNormalStream3ivATI = epoxy_glNormalStream3ivATI_dispatch_table_rewrite_ptr,
    .glNormalStream3sATI = epoxy_glNormalStream3sATI_dispatch_table_rewrite_ptr,
    .glNormalStream3svATI = epoxy_glNormalStream3svATI_dispatch_table_rewrite_ptr,
    .glObjectLabel = epoxy_glObjectLabel_dispatch_table_rewrite_ptr,
    .glObjectLabelKHR = epoxy_glObjectLabelKHR_dispatch_table_rewrite_ptr,
    .glObjectPtrLabel = epoxy_glObjectPtrLabel_dispatch_table_rewrite_ptr,
    .glObjectPtrLabelKHR = epoxy_glObjectPtrLabelKHR_dispatch_table_rewrite_ptr,
    .glObjectPurgeableAPPLE = epoxy_glObjectPurgeableAPPLE_dispatch_table_rewrite_ptr,
    .glObjectUnpurgeableAPPLE = epoxy_glObjectUnpurgeableAPPLE_dispatch_table_rewrite_ptr,
    .glOrtho = epoxy_glOrtho_dispatch_table_rewrite_ptr,
    .glOrthof = epoxy_glOrthof_dispatch_table_rewrite_ptr,
    .glOrthofOES = epoxy_glOrthofOES_dispatch_table_rewrite_ptr,
    .glOrthox = epoxy_glOrthox_dispatch_table_rewrite_ptr,
    .glOrthoxOES = epoxy_glOrthoxOES_dispatch_table_rewrite_ptr,
    .glPNTrianglesfATI = epoxy_glPNTrianglesfATI_dispatch_table_rewrite_ptr,
    .glPNTrianglesiATI = epoxy_glPNTrianglesiATI_dispatch_table_rewrite_ptr,
    .glPassTexCoordATI = epoxy_glPassTexCoordATI_dispatch_table_rewrite_ptr,
    .glPassThrough = epoxy_glPassThrough_dispatch_table_rewrite_ptr,
    .glPassThroughxOES = epoxy_glPassThroughxOES_dispatch_table_rewrite_ptr,
    .glPatchParameterfv = epoxy_glPatchParameterfv_dispatch_table_rewrite_ptr,
    .glPatchParameteri = epoxy_glPatchParameteri_dispatch_table_rewrite_ptr,
    .glPatchParameteriEXT = epoxy_glPatchParameteriEXT_dispatch_table_rewrite_ptr,
    .glPatchParameteriOES = epoxy_glPatchParameteriOES_dispatch_table_rewrite_ptr,
    .glPathColorGenNV = epoxy_glPathColorGenNV_dispatch_table_rewrite_ptr,
    .glPathCommandsNV = epoxy_glPathCommandsNV_dispatch_table_rewrite_ptr,
    .glPathCoordsNV = epoxy_glPathCoordsNV_dispatch_table_rewrite_ptr,
    .glPathCoverDepthFuncNV = epoxy_glPathCoverDepthFuncNV_dispatch_table_rewrite_ptr,
    .glPathDashArrayNV = epoxy_glPathDashArrayNV_dispatch_table_rewrite_ptr,
    .glPathFogGenNV = epoxy_glPathFogGenNV_dispatch_table_rewrite_ptr,
    .glPathGlyphIndexArrayNV = epoxy_glPathGlyphIndexArrayNV_dispatch_table_rewrite_ptr,
    .glPathGlyphIndexRangeNV = epoxy_glPathGlyphIndexRangeNV_dispatch_table_rewrite_ptr,
    .glPathGlyphRangeNV = epoxy_glPathGlyphRangeNV_dispatch_table_rewrite_ptr,
    .glPathGlyphsNV = epoxy_glPathGlyphsNV_dispatch_table_rewrite_ptr,
    .glPathMemoryGlyphIndexArrayNV = epoxy_glPathMemoryGlyphIndexArrayNV_dispatch_table_rewrite_ptr,
    .glPathParameterfNV = epoxy_glPathParameterfNV_dispatch_table_rewrite_ptr,
    .glPathParameterfvNV = epoxy_glPathParameterfvNV_dispatch_table_rewrite_ptr,
    .glPathParameteriNV = epoxy_glPathParameteriNV_dispatch_table_rewrite_ptr,
    .glPathParameterivNV = epoxy_glPathParameterivNV_dispatch_table_rewrite_ptr,
    .glPathStencilDepthOffsetNV = epoxy_glPathStencilDepthOffsetNV_dispatch_table_rewrite_ptr,
    .glPathStencilFuncNV = epoxy_glPathStencilFuncNV_dispatch_table_rewrite_ptr,
    .glPathStringNV = epoxy_glPathStringNV_dispatch_table_rewrite_ptr,
    .glPathSubCommandsNV = epoxy_glPathSubCommandsNV_dispatch_table_rewrite_ptr,
    .glPathSubCoordsNV = epoxy_glPathSubCoordsNV_dispatch_table_rewrite_ptr,
    .glPathTexGenNV = epoxy_glPathTexGenNV_dispatch_table_rewrite_ptr,
    .glPauseTransformFeedback = epoxy_glPauseTransformFeedback_dispatch_table_rewrite_ptr,
    .glPauseTransformFeedbackNV = epoxy_glPauseTransformFeedbackNV_dispatch_table_rewrite_ptr,
    .glPixelDataRangeNV = epoxy_glPixelDataRangeNV_dispatch_table_rewrite_ptr,
    .glPixelMapfv = epoxy_glPixelMapfv_dispatch_table_rewrite_ptr,
    .glPixelMapuiv = epoxy_glPixelMapuiv_dispatch_table_rewrite_ptr,
    .glPixelMapusv = epoxy_glPixelMapusv_dispatch_table_rewrite_ptr,
    .glPixelMapx = epoxy_glPixelMapx_dispatch_table_rewrite_ptr,
    .glPixelStoref = epoxy_glPixelStoref_dispatch_table_rewrite_ptr,
    .glPixelStorei = epoxy_glPixelStorei_dispatch_table_rewrite_ptr,
    .glPixelStorex = epoxy_glPixelStorex_dispatch_table_rewrite_ptr,
    .glPixelTexGenParameterfSGIS = epoxy_glPixelTexGenParameterfSGIS_dispatch_table_rewrite_ptr,
    .glPixelTexGenParameterfvSGIS = epoxy_glPixelTexGenParameterfvSGIS_dispatch_table_rewrite_ptr,
    .glPixelTexGenParameteriSGIS = epoxy_glPixelTexGenParameteriSGIS_dispatch_table_rewrite_ptr,
    .glPixelTexGenParameterivSGIS = epoxy_glPixelTexGenParameterivSGIS_dispatch_table_rewrite_ptr,
    .glPixelTexGenSGIX = epoxy_glPixelTexGenSGIX_dispatch_table_rewrite_ptr,
    .glPixelTransferf = epoxy_glPixelTransferf_dispatch_table_rewrite_ptr,
    .glPixelTransferi = epoxy_glPixelTransferi_dispatch_table_rewrite_ptr,
    .glPixelTransferxOES = epoxy_glPixelTransferxOES_dispatch_table_rewrite_ptr,
    .glPixelTransformParameterfEXT = epoxy_glPixelTransformParameterfEXT_dispatch_table_rewrite_ptr,
    .glPixelTransformParameterfvEXT = epoxy_glPixelTransformParameterfvEXT_dispatch_table_rewrite_ptr,
    .glPixelTransformParameteriEXT = epoxy_glPixelTransformParameteriEXT_dispatch_table_rewrite_ptr,
    .glPixelTransformParameterivEXT = epoxy_glPixelTransformParameterivEXT_dispatch_table_rewrite_ptr,
    .glPixelZoom = epoxy_glPixelZoom_dispatch_table_rewrite_ptr,
    .glPixelZoomxOES = epoxy_glPixelZoomxOES_dispatch_table_rewrite_ptr,
    .glPointAlongPathNV = epoxy_glPointAlongPathNV_dispatch_table_rewrite_ptr,
    .glPointParameterf = epoxy_glPointParameterf_dispatch_table_rewrite_ptr,
    .glPointParameterfARB = epoxy_glPointParameterfARB_dispatch_table_rewrite_ptr,
    .glPointParameterfEXT = epoxy_glPointParameterfEXT_dispatch_table_rewrite_ptr,
    .glPointParameterfSGIS = epoxy_glPointParameterfSGIS_dispatch_table_rewrite_ptr,
    .glPointParameterfv = epoxy_glPointParameterfv_dispatch_table_rewrite_ptr,
    .glPointParameterfvARB = epoxy_glPointParameterfvARB_dispatch_table_rewrite_ptr,
    .glPointParameterfvEXT = epoxy_glPointParameterfvEXT_dispatch_table_rewrite_ptr,
    .glPointParameterfvSGIS = epoxy_glPointParameterfvSGIS_dispatch_table_rewrite_ptr,
    .glPointParameteri = epoxy_glPointParameteri_dispatch_table_rewrite_ptr,
    .glPointParameteriNV = epoxy_glPointParameteriNV_dispatch_table_rewrite_ptr,
    .glPointParameteriv = epoxy_glPointParameteriv_dispatch_table_rewrite_ptr,
    .glPointParameterivNV = epoxy_glPointParameterivNV_dispatch_table_rewrite_ptr,
    .glPointParameterx = epoxy_glPointParameterx_dispatch_table_rewrite_ptr,
    .glPointParameterxOES = epoxy_glPointParameterxOES_dispatch_table_rewrite_ptr,
    .glPointParameterxv = epoxy_glPointParameterxv_dispatch_table_rewrite_ptr,
    .glPointParameterxvOES = epoxy_glPointParameterxvOES_dispatch_table_rewrite_ptr,
    .glPointSize = epoxy_glPointSize_dispatch_table_rewrite_ptr,
    .glPointSizePointerOES = epoxy_glPointSizePointerOES_dispatch_table_rewrite_ptr,
    .glPointSizex = epoxy_glPointSizex_dispatch_table_rewrite_ptr,
    .glPointSizexOES = epoxy_glPointSizexOES_dispatch_table_rewrite_ptr,
    .glPollAsyncSGIX = epoxy_glPollAsyncSGIX_dispatch_table_rewrite_ptr,
    .glPollInstrumentsSGIX = epoxy_glPollInstrumentsSGIX_dispatch_table_rewrite_ptr,
    .glPolygonMode = epoxy_glPolygonMode_dispatch_table_rewrite_ptr,
    .glPolygonModeNV = epoxy_glPolygonModeNV_dispatch_table_rewrite_ptr,
    .glPolygonOffset = epoxy_glPolygonOffset_dispatch_table_rewrite_ptr,
    .glPolygonOffsetClampEXT = epoxy_glPolygonOffsetClampEXT_dispatch_table_rewrite_ptr,
    .glPolygonOffsetEXT = epoxy_glPolygonOffsetEXT_dispatch_table_rewrite_ptr,
    .glPolygonOffsetx = epoxy_glPolygonOffsetx_dispatch_table_rewrite_ptr,
    .glPolygonOffsetxOES = epoxy_glPolygonOffsetxOES_dispatch_table_rewrite_ptr,
    .glPolygonStipple = epoxy_glPolygonStipple_dispatch_table_rewrite_ptr,
    .glPopAttrib = epoxy_glPopAttrib_dispatch_table_rewrite_ptr,
    .glPopClientAttrib = epoxy_glPopClientAttrib_dispatch_table_rewrite_ptr,
    .glPopDebugGroup = epoxy_glPopDebugGroup_dispatch_table_rewrite_ptr,
    .glPopDebugGroupKHR = epoxy_glPopDebugGroupKHR_dispatch_table_rewrite_ptr,
    .glPopGroupMarkerEXT = epoxy_glPopGroupMarkerEXT_dispatch_table_rewrite_ptr,
    .glPopMatrix = epoxy_glPopMatrix_dispatch_table_rewrite_ptr,
    .glPopName = epoxy_glPopName_dispatch_table_rewrite_ptr,
    .glPresentFrameDualFillNV = epoxy_glPresentFrameDualFillNV_dispatch_table_rewrite_ptr,
    .glPresentFrameKeyedNV = epoxy_glPresentFrameKeyedNV_dispatch_table_rewrite_ptr,
    .glPrimitiveBoundingBoxEXT = epoxy_glPrimitiveBoundingBoxEXT_dispatch_table_rewrite_ptr,
    .glPrimitiveBoundingBoxOES = epoxy_glPrimitiveBoundingBoxOES_dispatch_table_rewrite_ptr,
    .glPrimitiveRestartIndex = epoxy_glPrimitiveRestartIndex_dispatch_table_rewrite_ptr,
    .glPrimitiveRestartIndexNV = epoxy_glPrimitiveRestartIndexNV_dispatch_table_rewrite_ptr,
    .glPrimitiveRestartNV = epoxy_glPrimitiveRestartNV_dispatch_table_rewrite_ptr,
    .glPrioritizeTextures = epoxy_glPrioritizeTextures_dispatch_table_rewrite_ptr,
    .glPrioritizeTexturesEXT = epoxy_glPrioritizeTexturesEXT_dispatch_table_rewrite_ptr,
    .glPrioritizeTexturesxOES = epoxy_glPrioritizeTexturesxOES_dispatch_table_rewrite_ptr,
    .glProgramBinary = epoxy_glProgramBinary_dispatch_table_rewrite_ptr,
    .glProgramBinaryOES = epoxy_glProgramBinaryOES_dispatch_table_rewrite_ptr,
    .glProgramBufferParametersIivNV = epoxy_glProgramBufferParametersIivNV_dispatch_table_rewrite_ptr,
    .glProgramBufferParametersIuivNV = epoxy_glProgramBufferParametersIuivNV_dispatch_table_rewrite_ptr,
    .glProgramBufferParametersfvNV = epoxy_glProgramBufferParametersfvNV_dispatch_table_rewrite_ptr,
    .glProgramEnvParameter4dARB = epoxy_glProgramEnvParameter4dARB_dispatch_table_rewrite_ptr,
    .glProgramEnvParameter4dvARB = epoxy_glProgramEnvParameter4dvARB_dispatch_table_rewrite_ptr,
    .glProgramEnvParameter4fARB = epoxy_glProgramEnvParameter4fARB_dispatch_table_rewrite_ptr,
    .glProgramEnvParameter4fvARB = epoxy_glProgramEnvParameter4fvARB_dispatch_table_rewrite_ptr,
    .glProgramEnvParameterI4iNV = epoxy_glProgramEnvParameterI4iNV_dispatch_table_rewrite_ptr,
    .glProgramEnvParameterI4ivNV = epoxy_glProgramEnvParameterI4ivNV_dispatch_table_rewrite_ptr,
    .glProgramEnvParameterI4uiNV = epoxy_glProgramEnvParameterI4uiNV_dispatch_table_rewrite_ptr,
    .glProgramEnvParameterI4uivNV = epoxy_glProgramEnvParameterI4uivNV_dispatch_table_rewrite_ptr,
    .glProgramEnvParameters4fvEXT = epoxy_glProgramEnvParameters4fvEXT_dispatch_table_rewrite_ptr,
    .glProgramEnvParametersI4ivNV = epoxy_glProgramEnvParametersI4ivNV_dispatch_table_rewrite_ptr,
    .glProgramEnvParametersI4uivNV = epoxy_glProgramEnvParametersI4uivNV_dispatch_table_rewrite_ptr,
    .glProgramLocalParameter4dARB = epoxy_glProgramLocalParameter4dARB_dispatch_table_rewrite_ptr,
    .glProgramLocalParameter4dvARB = epoxy_glProgramLocalParameter4dvARB_dispatch_table_rewrite_ptr,
    .glProgramLocalParameter4fARB = epoxy_glProgramLocalParameter4fARB_dispatch_table_rewrite_ptr,
    .glProgramLocalParameter4fvARB = epoxy_glProgramLocalParameter4fvARB_dispatch_table_rewrite_ptr,
    .glProgramLocalParameterI4iNV = epoxy_glProgramLocalParameterI4iNV_dispatch_table_rewrite_ptr,
    .glProgramLocalParameterI4ivNV = epoxy_glProgramLocalParameterI4ivNV_dispatch_table_rewrite_ptr,
    .glProgramLocalParameterI4uiNV = epoxy_glProgramLocalParameterI4uiNV_dispatch_table_rewrite_ptr,
    .glProgramLocalParameterI4uivNV = epoxy_glProgramLocalParameterI4uivNV_dispatch_table_rewrite_ptr,
    .glProgramLocalParameters4fvEXT = epoxy_glProgramLocalParameters4fvEXT_dispatch_table_rewrite_ptr,
    .glProgramLocalParametersI4ivNV = epoxy_glProgramLocalParametersI4ivNV_dispatch_table_rewrite_ptr,
    .glProgramLocalParametersI4uivNV = epoxy_glProgramLocalParametersI4uivNV_dispatch_table_rewrite_ptr,
    .glProgramNamedParameter4dNV = epoxy_glProgramNamedParameter4dNV_dispatch_table_rewrite_ptr,
    .glProgramNamedParameter4dvNV = epoxy_glProgramNamedParameter4dvNV_dispatch_table_rewrite_ptr,
    .glProgramNamedParameter4fNV = epoxy_glProgramNamedParameter4fNV_dispatch_table_rewrite_ptr,
    .glProgramNamedParameter4fvNV = epoxy_glProgramNamedParameter4fvNV_dispatch_table_rewrite_ptr,
    .glProgramParameter4dNV = epoxy_glProgramParameter4dNV_dispatch_table_rewrite_ptr,
    .glProgramParameter4dvNV = epoxy_glProgramParameter4dvNV_dispatch_table_rewrite_ptr,
    .glProgramParameter4fNV = epoxy_glProgramParameter4fNV_dispatch_table_rewrite_ptr,
    .glProgramParameter4fvNV = epoxy_glProgramParameter4fvNV_dispatch_table_rewrite_ptr,
    .glProgramParameteri = epoxy_glProgramParameteri_dispatch_table_rewrite_ptr,
    .glProgramParameteriARB = epoxy_glProgramParameteriARB_dispatch_table_rewrite_ptr,
    .glProgramParameteriEXT = epoxy_glProgramParameteriEXT_dispatch_table_rewrite_ptr,
    .glProgramParameters4dvNV = epoxy_glProgramParameters4dvNV_dispatch_table_rewrite_ptr,
    .glProgramParameters4fvNV = epoxy_glProgramParameters4fvNV_dispatch_table_rewrite_ptr,
    .glProgramPathFragmentInputGenNV = epoxy_glProgramPathFragmentInputGenNV_dispatch_table_rewrite_ptr,
    .glProgramStringARB = epoxy_glProgramStringARB_dispatch_table_rewrite_ptr,
    .glProgramSubroutineParametersuivNV = epoxy_glProgramSubroutineParametersuivNV_dispatch_table_rewrite_ptr,
    .glProgramUniform1d = epoxy_glProgramUniform1d_dispatch_table_rewrite_ptr,
    .glProgramUniform1dEXT = epoxy_glProgramUniform1dEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform1dv = epoxy_glProgramUniform1dv_dispatch_table_rewrite_ptr,
    .glProgramUniform1dvEXT = epoxy_glProgramUniform1dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform1f = epoxy_glProgramUniform1f_dispatch_table_rewrite_ptr,
    .glProgramUniform1fEXT = epoxy_glProgramUniform1fEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform1fv = epoxy_glProgramUniform1fv_dispatch_table_rewrite_ptr,
    .glProgramUniform1fvEXT = epoxy_glProgramUniform1fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform1i = epoxy_glProgramUniform1i_dispatch_table_rewrite_ptr,
    .glProgramUniform1i64NV = epoxy_glProgramUniform1i64NV_dispatch_table_rewrite_ptr,
    .glProgramUniform1i64vNV = epoxy_glProgramUniform1i64vNV_dispatch_table_rewrite_ptr,
    .glProgramUniform1iEXT = epoxy_glProgramUniform1iEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform1iv = epoxy_glProgramUniform1iv_dispatch_table_rewrite_ptr,
    .glProgramUniform1ivEXT = epoxy_glProgramUniform1ivEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform1ui = epoxy_glProgramUniform1ui_dispatch_table_rewrite_ptr,
    .glProgramUniform1ui64NV = epoxy_glProgramUniform1ui64NV_dispatch_table_rewrite_ptr,
    .glProgramUniform1ui64vNV = epoxy_glProgramUniform1ui64vNV_dispatch_table_rewrite_ptr,
    .glProgramUniform1uiEXT = epoxy_glProgramUniform1uiEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform1uiv = epoxy_glProgramUniform1uiv_dispatch_table_rewrite_ptr,
    .glProgramUniform1uivEXT = epoxy_glProgramUniform1uivEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform2d = epoxy_glProgramUniform2d_dispatch_table_rewrite_ptr,
    .glProgramUniform2dEXT = epoxy_glProgramUniform2dEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform2dv = epoxy_glProgramUniform2dv_dispatch_table_rewrite_ptr,
    .glProgramUniform2dvEXT = epoxy_glProgramUniform2dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform2f = epoxy_glProgramUniform2f_dispatch_table_rewrite_ptr,
    .glProgramUniform2fEXT = epoxy_glProgramUniform2fEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform2fv = epoxy_glProgramUniform2fv_dispatch_table_rewrite_ptr,
    .glProgramUniform2fvEXT = epoxy_glProgramUniform2fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform2i = epoxy_glProgramUniform2i_dispatch_table_rewrite_ptr,
    .glProgramUniform2i64NV = epoxy_glProgramUniform2i64NV_dispatch_table_rewrite_ptr,
    .glProgramUniform2i64vNV = epoxy_glProgramUniform2i64vNV_dispatch_table_rewrite_ptr,
    .glProgramUniform2iEXT = epoxy_glProgramUniform2iEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform2iv = epoxy_glProgramUniform2iv_dispatch_table_rewrite_ptr,
    .glProgramUniform2ivEXT = epoxy_glProgramUniform2ivEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform2ui = epoxy_glProgramUniform2ui_dispatch_table_rewrite_ptr,
    .glProgramUniform2ui64NV = epoxy_glProgramUniform2ui64NV_dispatch_table_rewrite_ptr,
    .glProgramUniform2ui64vNV = epoxy_glProgramUniform2ui64vNV_dispatch_table_rewrite_ptr,
    .glProgramUniform2uiEXT = epoxy_glProgramUniform2uiEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform2uiv = epoxy_glProgramUniform2uiv_dispatch_table_rewrite_ptr,
    .glProgramUniform2uivEXT = epoxy_glProgramUniform2uivEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform3d = epoxy_glProgramUniform3d_dispatch_table_rewrite_ptr,
    .glProgramUniform3dEXT = epoxy_glProgramUniform3dEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform3dv = epoxy_glProgramUniform3dv_dispatch_table_rewrite_ptr,
    .glProgramUniform3dvEXT = epoxy_glProgramUniform3dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform3f = epoxy_glProgramUniform3f_dispatch_table_rewrite_ptr,
    .glProgramUniform3fEXT = epoxy_glProgramUniform3fEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform3fv = epoxy_glProgramUniform3fv_dispatch_table_rewrite_ptr,
    .glProgramUniform3fvEXT = epoxy_glProgramUniform3fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform3i = epoxy_glProgramUniform3i_dispatch_table_rewrite_ptr,
    .glProgramUniform3i64NV = epoxy_glProgramUniform3i64NV_dispatch_table_rewrite_ptr,
    .glProgramUniform3i64vNV = epoxy_glProgramUniform3i64vNV_dispatch_table_rewrite_ptr,
    .glProgramUniform3iEXT = epoxy_glProgramUniform3iEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform3iv = epoxy_glProgramUniform3iv_dispatch_table_rewrite_ptr,
    .glProgramUniform3ivEXT = epoxy_glProgramUniform3ivEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform3ui = epoxy_glProgramUniform3ui_dispatch_table_rewrite_ptr,
    .glProgramUniform3ui64NV = epoxy_glProgramUniform3ui64NV_dispatch_table_rewrite_ptr,
    .glProgramUniform3ui64vNV = epoxy_glProgramUniform3ui64vNV_dispatch_table_rewrite_ptr,
    .glProgramUniform3uiEXT = epoxy_glProgramUniform3uiEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform3uiv = epoxy_glProgramUniform3uiv_dispatch_table_rewrite_ptr,
    .glProgramUniform3uivEXT = epoxy_glProgramUniform3uivEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform4d = epoxy_glProgramUniform4d_dispatch_table_rewrite_ptr,
    .glProgramUniform4dEXT = epoxy_glProgramUniform4dEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform4dv = epoxy_glProgramUniform4dv_dispatch_table_rewrite_ptr,
    .glProgramUniform4dvEXT = epoxy_glProgramUniform4dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform4f = epoxy_glProgramUniform4f_dispatch_table_rewrite_ptr,
    .glProgramUniform4fEXT = epoxy_glProgramUniform4fEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform4fv = epoxy_glProgramUniform4fv_dispatch_table_rewrite_ptr,
    .glProgramUniform4fvEXT = epoxy_glProgramUniform4fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform4i = epoxy_glProgramUniform4i_dispatch_table_rewrite_ptr,
    .glProgramUniform4i64NV = epoxy_glProgramUniform4i64NV_dispatch_table_rewrite_ptr,
    .glProgramUniform4i64vNV = epoxy_glProgramUniform4i64vNV_dispatch_table_rewrite_ptr,
    .glProgramUniform4iEXT = epoxy_glProgramUniform4iEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform4iv = epoxy_glProgramUniform4iv_dispatch_table_rewrite_ptr,
    .glProgramUniform4ivEXT = epoxy_glProgramUniform4ivEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform4ui = epoxy_glProgramUniform4ui_dispatch_table_rewrite_ptr,
    .glProgramUniform4ui64NV = epoxy_glProgramUniform4ui64NV_dispatch_table_rewrite_ptr,
    .glProgramUniform4ui64vNV = epoxy_glProgramUniform4ui64vNV_dispatch_table_rewrite_ptr,
    .glProgramUniform4uiEXT = epoxy_glProgramUniform4uiEXT_dispatch_table_rewrite_ptr,
    .glProgramUniform4uiv = epoxy_glProgramUniform4uiv_dispatch_table_rewrite_ptr,
    .glProgramUniform4uivEXT = epoxy_glProgramUniform4uivEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformHandleui64ARB = epoxy_glProgramUniformHandleui64ARB_dispatch_table_rewrite_ptr,
    .glProgramUniformHandleui64NV = epoxy_glProgramUniformHandleui64NV_dispatch_table_rewrite_ptr,
    .glProgramUniformHandleui64vARB = epoxy_glProgramUniformHandleui64vARB_dispatch_table_rewrite_ptr,
    .glProgramUniformHandleui64vNV = epoxy_glProgramUniformHandleui64vNV_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2dv = epoxy_glProgramUniformMatrix2dv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2dvEXT = epoxy_glProgramUniformMatrix2dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2fv = epoxy_glProgramUniformMatrix2fv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2fvEXT = epoxy_glProgramUniformMatrix2fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2x3dv = epoxy_glProgramUniformMatrix2x3dv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2x3dvEXT = epoxy_glProgramUniformMatrix2x3dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2x3fv = epoxy_glProgramUniformMatrix2x3fv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2x3fvEXT = epoxy_glProgramUniformMatrix2x3fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2x4dv = epoxy_glProgramUniformMatrix2x4dv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2x4dvEXT = epoxy_glProgramUniformMatrix2x4dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2x4fv = epoxy_glProgramUniformMatrix2x4fv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix2x4fvEXT = epoxy_glProgramUniformMatrix2x4fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3dv = epoxy_glProgramUniformMatrix3dv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3dvEXT = epoxy_glProgramUniformMatrix3dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3fv = epoxy_glProgramUniformMatrix3fv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3fvEXT = epoxy_glProgramUniformMatrix3fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3x2dv = epoxy_glProgramUniformMatrix3x2dv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3x2dvEXT = epoxy_glProgramUniformMatrix3x2dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3x2fv = epoxy_glProgramUniformMatrix3x2fv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3x2fvEXT = epoxy_glProgramUniformMatrix3x2fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3x4dv = epoxy_glProgramUniformMatrix3x4dv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3x4dvEXT = epoxy_glProgramUniformMatrix3x4dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3x4fv = epoxy_glProgramUniformMatrix3x4fv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix3x4fvEXT = epoxy_glProgramUniformMatrix3x4fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4dv = epoxy_glProgramUniformMatrix4dv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4dvEXT = epoxy_glProgramUniformMatrix4dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4fv = epoxy_glProgramUniformMatrix4fv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4fvEXT = epoxy_glProgramUniformMatrix4fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4x2dv = epoxy_glProgramUniformMatrix4x2dv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4x2dvEXT = epoxy_glProgramUniformMatrix4x2dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4x2fv = epoxy_glProgramUniformMatrix4x2fv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4x2fvEXT = epoxy_glProgramUniformMatrix4x2fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4x3dv = epoxy_glProgramUniformMatrix4x3dv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4x3dvEXT = epoxy_glProgramUniformMatrix4x3dvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4x3fv = epoxy_glProgramUniformMatrix4x3fv_dispatch_table_rewrite_ptr,
    .glProgramUniformMatrix4x3fvEXT = epoxy_glProgramUniformMatrix4x3fvEXT_dispatch_table_rewrite_ptr,
    .glProgramUniformui64NV = epoxy_glProgramUniformui64NV_dispatch_table_rewrite_ptr,
    .glProgramUniformui64vNV = epoxy_glProgramUniformui64vNV_dispatch_table_rewrite_ptr,
    .glProgramVertexLimitNV = epoxy_glProgramVertexLimitNV_dispatch_table_rewrite_ptr,
    .glProvokingVertex = epoxy_glProvokingVertex_dispatch_table_rewrite_ptr,
    .glProvokingVertexEXT = epoxy_glProvokingVertexEXT_dispatch_table_rewrite_ptr,
    .glPushAttrib = epoxy_glPushAttrib_dispatch_table_rewrite_ptr,
    .glPushClientAttrib = epoxy_glPushClientAttrib_dispatch_table_rewrite_ptr,
    .glPushClientAttribDefaultEXT = epoxy_glPushClientAttribDefaultEXT_dispatch_table_rewrite_ptr,
    .glPushDebugGroup = epoxy_glPushDebugGroup_dispatch_table_rewrite_ptr,
    .glPushDebugGroupKHR = epoxy_glPushDebugGroupKHR_dispatch_table_rewrite_ptr,
    .glPushGroupMarkerEXT = epoxy_glPushGroupMarkerEXT_dispatch_table_rewrite_ptr,
    .glPushMatrix = epoxy_glPushMatrix_dispatch_table_rewrite_ptr,
    .glPushName = epoxy_glPushName_dispatch_table_rewrite_ptr,
    .glQueryCounter = epoxy_glQueryCounter_dispatch_table_rewrite_ptr,
    .glQueryCounterEXT = epoxy_glQueryCounterEXT_dispatch_table_rewrite_ptr,
    .glQueryMatrixxOES = epoxy_glQueryMatrixxOES_dispatch_table_rewrite_ptr,
    .glQueryObjectParameteruiAMD = epoxy_glQueryObjectParameteruiAMD_dispatch_table_rewrite_ptr,
    .glRasterPos2d = epoxy_glRasterPos2d_dispatch_table_rewrite_ptr,
    .glRasterPos2dv = epoxy_glRasterPos2dv_dispatch_table_rewrite_ptr,
    .glRasterPos2f = epoxy_glRasterPos2f_dispatch_table_rewrite_ptr,
    .glRasterPos2fv = epoxy_glRasterPos2fv_dispatch_table_rewrite_ptr,
    .glRasterPos2i = epoxy_glRasterPos2i_dispatch_table_rewrite_ptr,
    .glRasterPos2iv = epoxy_glRasterPos2iv_dispatch_table_rewrite_ptr,
    .glRasterPos2s = epoxy_glRasterPos2s_dispatch_table_rewrite_ptr,
    .glRasterPos2sv = epoxy_glRasterPos2sv_dispatch_table_rewrite_ptr,
    .glRasterPos2xOES = epoxy_glRasterPos2xOES_dispatch_table_rewrite_ptr,
    .glRasterPos2xvOES = epoxy_glRasterPos2xvOES_dispatch_table_rewrite_ptr,
    .glRasterPos3d = epoxy_glRasterPos3d_dispatch_table_rewrite_ptr,
    .glRasterPos3dv = epoxy_glRasterPos3dv_dispatch_table_rewrite_ptr,
    .glRasterPos3f = epoxy_glRasterPos3f_dispatch_table_rewrite_ptr,
    .glRasterPos3fv = epoxy_glRasterPos3fv_dispatch_table_rewrite_ptr,
    .glRasterPos3i = epoxy_glRasterPos3i_dispatch_table_rewrite_ptr,
    .glRasterPos3iv = epoxy_glRasterPos3iv_dispatch_table_rewrite_ptr,
    .glRasterPos3s = epoxy_glRasterPos3s_dispatch_table_rewrite_ptr,
    .glRasterPos3sv = epoxy_glRasterPos3sv_dispatch_table_rewrite_ptr,
    .glRasterPos3xOES = epoxy_glRasterPos3xOES_dispatch_table_rewrite_ptr,
    .glRasterPos3xvOES = epoxy_glRasterPos3xvOES_dispatch_table_rewrite_ptr,
    .glRasterPos4d = epoxy_glRasterPos4d_dispatch_table_rewrite_ptr,
    .glRasterPos4dv = epoxy_glRasterPos4dv_dispatch_table_rewrite_ptr,
    .glRasterPos4f = epoxy_glRasterPos4f_dispatch_table_rewrite_ptr,
    .glRasterPos4fv = epoxy_glRasterPos4fv_dispatch_table_rewrite_ptr,
    .glRasterPos4i = epoxy_glRasterPos4i_dispatch_table_rewrite_ptr,
    .glRasterPos4iv = epoxy_glRasterPos4iv_dispatch_table_rewrite_ptr,
    .glRasterPos4s = epoxy_glRasterPos4s_dispatch_table_rewrite_ptr,
    .glRasterPos4sv = epoxy_glRasterPos4sv_dispatch_table_rewrite_ptr,
    .glRasterPos4xOES = epoxy_glRasterPos4xOES_dispatch_table_rewrite_ptr,
    .glRasterPos4xvOES = epoxy_glRasterPos4xvOES_dispatch_table_rewrite_ptr,
    .glRasterSamplesEXT = epoxy_glRasterSamplesEXT_dispatch_table_rewrite_ptr,
    .glReadBuffer = epoxy_glReadBuffer_dispatch_table_rewrite_ptr,
    .glReadBufferIndexedEXT = epoxy_glReadBufferIndexedEXT_dispatch_table_rewrite_ptr,
    .glReadBufferNV = epoxy_glReadBufferNV_dispatch_table_rewrite_ptr,
    .glReadInstrumentsSGIX = epoxy_glReadInstrumentsSGIX_dispatch_table_rewrite_ptr,
    .glReadPixels = epoxy_glReadPixels_dispatch_table_rewrite_ptr,
    .glReadnPixels = epoxy_glReadnPixels_dispatch_table_rewrite_ptr,
    .glReadnPixelsARB = epoxy_glReadnPixelsARB_dispatch_table_rewrite_ptr,
    .glReadnPixelsEXT = epoxy_glReadnPixelsEXT_dispatch_table_rewrite_ptr,
    .glReadnPixelsKHR = epoxy_glReadnPixelsKHR_dispatch_table_rewrite_ptr,
    .glRectd = epoxy_glRectd_dispatch_table_rewrite_ptr,
    .glRectdv = epoxy_glRectdv_dispatch_table_rewrite_ptr,
    .glRectf = epoxy_glRectf_dispatch_table_rewrite_ptr,
    .glRectfv = epoxy_glRectfv_dispatch_table_rewrite_ptr,
    .glRecti = epoxy_glRecti_dispatch_table_rewrite_ptr,
    .glRectiv = epoxy_glRectiv_dispatch_table_rewrite_ptr,
    .glRects = epoxy_glRects_dispatch_table_rewrite_ptr,
    .glRectsv = epoxy_glRectsv_dispatch_table_rewrite_ptr,
    .glRectxOES = epoxy_glRectxOES_dispatch_table_rewrite_ptr,
    .glRectxvOES = epoxy_glRectxvOES_dispatch_table_rewrite_ptr,
    .glReferencePlaneSGIX = epoxy_glReferencePlaneSGIX_dispatch_table_rewrite_ptr,
    .glReleaseShaderCompiler = epoxy_glReleaseShaderCompiler_dispatch_table_rewrite_ptr,
    .glRenderMode = epoxy_glRenderMode_dispatch_table_rewrite_ptr,
    .glRenderbufferStorage = epoxy_glRenderbufferStorage_dispatch_table_rewrite_ptr,
    .glRenderbufferStorageEXT = epoxy_glRenderbufferStorageEXT_dispatch_table_rewrite_ptr,
    .glRenderbufferStorageMultisample = epoxy_glRenderbufferStorageMultisample_dispatch_table_rewrite_ptr,
    .glRenderbufferStorageMultisampleANGLE = epoxy_glRenderbufferStorageMultisampleANGLE_dispatch_table_rewrite_ptr,
    .glRenderbufferStorageMultisampleAPPLE = epoxy_glRenderbufferStorageMultisampleAPPLE_dispatch_table_rewrite_ptr,
    .glRenderbufferStorageMultisampleCoverageNV = epoxy_glRenderbufferStorageMultisampleCoverageNV_dispatch_table_rewrite_ptr,
    .glRenderbufferStorageMultisampleEXT = epoxy_glRenderbufferStorageMultisampleEXT_dispatch_table_rewrite_ptr,
    .glRenderbufferStorageMultisampleIMG = epoxy_glRenderbufferStorageMultisampleIMG_dispatch_table_rewrite_ptr,
    .glRenderbufferStorageMultisampleNV = epoxy_glRenderbufferStorageMultisampleNV_dispatch_table_rewrite_ptr,
    .glRenderbufferStorageOES = epoxy_glRenderbufferStorageOES_dispatch_table_rewrite_ptr,
    .glReplacementCodePointerSUN = epoxy_glReplacementCodePointerSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeubSUN = epoxy_glReplacementCodeubSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeubvSUN = epoxy_glReplacementCodeubvSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiColor3fVertex3fSUN = epoxy_glReplacementCodeuiColor3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiColor3fVertex3fvSUN = epoxy_glReplacementCodeuiColor3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiColor4fNormal3fVertex3fSUN = epoxy_glReplacementCodeuiColor4fNormal3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiColor4fNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiColor4ubVertex3fSUN = epoxy_glReplacementCodeuiColor4ubVertex3fSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiColor4ubVertex3fvSUN = epoxy_glReplacementCodeuiColor4ubVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiNormal3fVertex3fSUN = epoxy_glReplacementCodeuiNormal3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiNormal3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiSUN = epoxy_glReplacementCodeuiSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiTexCoord2fVertex3fSUN = epoxy_glReplacementCodeuiTexCoord2fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiTexCoord2fVertex3fvSUN = epoxy_glReplacementCodeuiTexCoord2fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiVertex3fSUN = epoxy_glReplacementCodeuiVertex3fSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuiVertex3fvSUN = epoxy_glReplacementCodeuiVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeuivSUN = epoxy_glReplacementCodeuivSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeusSUN = epoxy_glReplacementCodeusSUN_dispatch_table_rewrite_ptr,
    .glReplacementCodeusvSUN = epoxy_glReplacementCodeusvSUN_dispatch_table_rewrite_ptr,
    .glRequestResidentProgramsNV = epoxy_glRequestResidentProgramsNV_dispatch_table_rewrite_ptr,
    .glResetHistogram = epoxy_glResetHistogram_dispatch_table_rewrite_ptr,
    .glResetHistogramEXT = epoxy_glResetHistogramEXT_dispatch_table_rewrite_ptr,
    .glResetMinmax = epoxy_glResetMinmax_dispatch_table_rewrite_ptr,
    .glResetMinmaxEXT = epoxy_glResetMinmaxEXT_dispatch_table_rewrite_ptr,
    .glResizeBuffersMESA = epoxy_glResizeBuffersMESA_dispatch_table_rewrite_ptr,
    .glResolveDepthValuesNV = epoxy_glResolveDepthValuesNV_dispatch_table_rewrite_ptr,
    .glResolveMultisampleFramebufferAPPLE = epoxy_glResolveMultisampleFramebufferAPPLE_dispatch_table_rewrite_ptr,
    .glResumeTransformFeedback = epoxy_glResumeTransformFeedback_dispatch_table_rewrite_ptr,
    .glResumeTransformFeedbackNV = epoxy_glResumeTransformFeedbackNV_dispatch_table_rewrite_ptr,
    .glRotated = epoxy_glRotated_dispatch_table_rewrite_ptr,
    .glRotatef = epoxy_glRotatef_dispatch_table_rewrite_ptr,
    .glRotatex = epoxy_glRotatex_dispatch_table_rewrite_ptr,
    .glRotatexOES = epoxy_glRotatexOES_dispatch_table_rewrite_ptr,
    .glSampleCoverage = epoxy_glSampleCoverage_dispatch_table_rewrite_ptr,
    .glSampleCoverageARB = epoxy_glSampleCoverageARB_dispatch_table_rewrite_ptr,
    .glSampleCoveragex = epoxy_glSampleCoveragex_dispatch_table_rewrite_ptr,
    .glSampleCoveragexOES = epoxy_glSampleCoveragexOES_dispatch_table_rewrite_ptr,
    .glSampleMapATI = epoxy_glSampleMapATI_dispatch_table_rewrite_ptr,
    .glSampleMaskEXT = epoxy_glSampleMaskEXT_dispatch_table_rewrite_ptr,
    .glSampleMaskIndexedNV = epoxy_glSampleMaskIndexedNV_dispatch_table_rewrite_ptr,
    .glSampleMaskSGIS = epoxy_glSampleMaskSGIS_dispatch_table_rewrite_ptr,
    .glSampleMaski = epoxy_glSampleMaski_dispatch_table_rewrite_ptr,
    .glSamplePatternEXT = epoxy_glSamplePatternEXT_dispatch_table_rewrite_ptr,
    .glSamplePatternSGIS = epoxy_glSamplePatternSGIS_dispatch_table_rewrite_ptr,
    .glSamplerParameterIiv = epoxy_glSamplerParameterIiv_dispatch_table_rewrite_ptr,
    .glSamplerParameterIivEXT = epoxy_glSamplerParameterIivEXT_dispatch_table_rewrite_ptr,
    .glSamplerParameterIivOES = epoxy_glSamplerParameterIivOES_dispatch_table_rewrite_ptr,
    .glSamplerParameterIuiv = epoxy_glSamplerParameterIuiv_dispatch_table_rewrite_ptr,
    .glSamplerParameterIuivEXT = epoxy_glSamplerParameterIuivEXT_dispatch_table_rewrite_ptr,
    .glSamplerParameterIuivOES = epoxy_glSamplerParameterIuivOES_dispatch_table_rewrite_ptr,
    .glSamplerParameterf = epoxy_glSamplerParameterf_dispatch_table_rewrite_ptr,
    .glSamplerParameterfv = epoxy_glSamplerParameterfv_dispatch_table_rewrite_ptr,
    .glSamplerParameteri = epoxy_glSamplerParameteri_dispatch_table_rewrite_ptr,
    .glSamplerParameteriv = epoxy_glSamplerParameteriv_dispatch_table_rewrite_ptr,
    .glScaled = epoxy_glScaled_dispatch_table_rewrite_ptr,
    .glScalef = epoxy_glScalef_dispatch_table_rewrite_ptr,
    .glScalex = epoxy_glScalex_dispatch_table_rewrite_ptr,
    .glScalexOES = epoxy_glScalexOES_dispatch_table_rewrite_ptr,
    .glScissor = epoxy_glScissor_dispatch_table_rewrite_ptr,
    .glScissorArrayv = epoxy_glScissorArrayv_dispatch_table_rewrite_ptr,
    .glScissorArrayvNV = epoxy_glScissorArrayvNV_dispatch_table_rewrite_ptr,
    .glScissorIndexed = epoxy_glScissorIndexed_dispatch_table_rewrite_ptr,
    .glScissorIndexedNV = epoxy_glScissorIndexedNV_dispatch_table_rewrite_ptr,
    .glScissorIndexedv = epoxy_glScissorIndexedv_dispatch_table_rewrite_ptr,
    .glScissorIndexedvNV = epoxy_glScissorIndexedvNV_dispatch_table_rewrite_ptr,
    .glSecondaryColor3b = epoxy_glSecondaryColor3b_dispatch_table_rewrite_ptr,
    .glSecondaryColor3bEXT = epoxy_glSecondaryColor3bEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3bv = epoxy_glSecondaryColor3bv_dispatch_table_rewrite_ptr,
    .glSecondaryColor3bvEXT = epoxy_glSecondaryColor3bvEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3d = epoxy_glSecondaryColor3d_dispatch_table_rewrite_ptr,
    .glSecondaryColor3dEXT = epoxy_glSecondaryColor3dEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3dv = epoxy_glSecondaryColor3dv_dispatch_table_rewrite_ptr,
    .glSecondaryColor3dvEXT = epoxy_glSecondaryColor3dvEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3f = epoxy_glSecondaryColor3f_dispatch_table_rewrite_ptr,
    .glSecondaryColor3fEXT = epoxy_glSecondaryColor3fEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3fv = epoxy_glSecondaryColor3fv_dispatch_table_rewrite_ptr,
    .glSecondaryColor3fvEXT = epoxy_glSecondaryColor3fvEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3hNV = epoxy_glSecondaryColor3hNV_dispatch_table_rewrite_ptr,
    .glSecondaryColor3hvNV = epoxy_glSecondaryColor3hvNV_dispatch_table_rewrite_ptr,
    .glSecondaryColor3i = epoxy_glSecondaryColor3i_dispatch_table_rewrite_ptr,
    .glSecondaryColor3iEXT = epoxy_glSecondaryColor3iEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3iv = epoxy_glSecondaryColor3iv_dispatch_table_rewrite_ptr,
    .glSecondaryColor3ivEXT = epoxy_glSecondaryColor3ivEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3s = epoxy_glSecondaryColor3s_dispatch_table_rewrite_ptr,
    .glSecondaryColor3sEXT = epoxy_glSecondaryColor3sEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3sv = epoxy_glSecondaryColor3sv_dispatch_table_rewrite_ptr,
    .glSecondaryColor3svEXT = epoxy_glSecondaryColor3svEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3ub = epoxy_glSecondaryColor3ub_dispatch_table_rewrite_ptr,
    .glSecondaryColor3ubEXT = epoxy_glSecondaryColor3ubEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3ubv = epoxy_glSecondaryColor3ubv_dispatch_table_rewrite_ptr,
    .glSecondaryColor3ubvEXT = epoxy_glSecondaryColor3ubvEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3ui = epoxy_glSecondaryColor3ui_dispatch_table_rewrite_ptr,
    .glSecondaryColor3uiEXT = epoxy_glSecondaryColor3uiEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3uiv = epoxy_glSecondaryColor3uiv_dispatch_table_rewrite_ptr,
    .glSecondaryColor3uivEXT = epoxy_glSecondaryColor3uivEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3us = epoxy_glSecondaryColor3us_dispatch_table_rewrite_ptr,
    .glSecondaryColor3usEXT = epoxy_glSecondaryColor3usEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColor3usv = epoxy_glSecondaryColor3usv_dispatch_table_rewrite_ptr,
    .glSecondaryColor3usvEXT = epoxy_glSecondaryColor3usvEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColorFormatNV = epoxy_glSecondaryColorFormatNV_dispatch_table_rewrite_ptr,
    .glSecondaryColorP3ui = epoxy_glSecondaryColorP3ui_dispatch_table_rewrite_ptr,
    .glSecondaryColorP3uiv = epoxy_glSecondaryColorP3uiv_dispatch_table_rewrite_ptr,
    .glSecondaryColorPointer = epoxy_glSecondaryColorPointer_dispatch_table_rewrite_ptr,
    .glSecondaryColorPointerEXT = epoxy_glSecondaryColorPointerEXT_dispatch_table_rewrite_ptr,
    .glSecondaryColorPointerListIBM = epoxy_glSecondaryColorPointerListIBM_dispatch_table_rewrite_ptr,
    .glSelectBuffer = epoxy_glSelectBuffer_dispatch_table_rewrite_ptr,
    .glSelectPerfMonitorCountersAMD = epoxy_glSelectPerfMonitorCountersAMD_dispatch_table_rewrite_ptr,
    .glSeparableFilter2D = epoxy_glSeparableFilter2D_dispatch_table_rewrite_ptr,
    .glSeparableFilter2DEXT = epoxy_glSeparableFilter2DEXT_dispatch_table_rewrite_ptr,
    .glSetFenceAPPLE = epoxy_glSetFenceAPPLE_dispatch_table_rewrite_ptr,
    .glSetFenceNV = epoxy_glSetFenceNV_dispatch_table_rewrite_ptr,
    .glSetFragmentShaderConstantATI = epoxy_glSetFragmentShaderConstantATI_dispatch_table_rewrite_ptr,
    .glSetInvariantEXT = epoxy_glSetInvariantEXT_dispatch_table_rewrite_ptr,
    .glSetLocalConstantEXT = epoxy_glSetLocalConstantEXT_dispatch_table_rewrite_ptr,
    .glSetMultisamplefvAMD = epoxy_glSetMultisamplefvAMD_dispatch_table_rewrite_ptr,
    .glShadeModel = epoxy_glShadeModel_dispatch_table_rewrite_ptr,
    .glShaderBinary = epoxy_glShaderBinary_dispatch_table_rewrite_ptr,
    .glShaderOp1EXT = epoxy_glShaderOp1EXT_dispatch_table_rewrite_ptr,
    .glShaderOp2EXT = epoxy_glShaderOp2EXT_dispatch_table_rewrite_ptr,
    .glShaderOp3EXT = epoxy_glShaderOp3EXT_dispatch_table_rewrite_ptr,
    .glShaderSource = epoxy_glShaderSource_dispatch_table_rewrite_ptr,
    .glShaderSourceARB = epoxy_glShaderSourceARB_dispatch_table_rewrite_ptr,
    .glShaderStorageBlockBinding = epoxy_glShaderStorageBlockBinding_dispatch_table_rewrite_ptr,
    .glSharpenTexFuncSGIS = epoxy_glSharpenTexFuncSGIS_dispatch_table_rewrite_ptr,
    .glSpriteParameterfSGIX = epoxy_glSpriteParameterfSGIX_dispatch_table_rewrite_ptr,
    .glSpriteParameterfvSGIX = epoxy_glSpriteParameterfvSGIX_dispatch_table_rewrite_ptr,
    .glSpriteParameteriSGIX = epoxy_glSpriteParameteriSGIX_dispatch_table_rewrite_ptr,
    .glSpriteParameterivSGIX = epoxy_glSpriteParameterivSGIX_dispatch_table_rewrite_ptr,
    .glStartInstrumentsSGIX = epoxy_glStartInstrumentsSGIX_dispatch_table_rewrite_ptr,
    .glStartTilingQCOM = epoxy_glStartTilingQCOM_dispatch_table_rewrite_ptr,
    .glStateCaptureNV = epoxy_glStateCaptureNV_dispatch_table_rewrite_ptr,
    .glStencilClearTagEXT = epoxy_glStencilClearTagEXT_dispatch_table_rewrite_ptr,
    .glStencilFillPathInstancedNV = epoxy_glStencilFillPathInstancedNV_dispatch_table_rewrite_ptr,
    .glStencilFillPathNV = epoxy_glStencilFillPathNV_dispatch_table_rewrite_ptr,
    .glStencilFunc = epoxy_glStencilFunc_dispatch_table_rewrite_ptr,
    .glStencilFuncSeparate = epoxy_glStencilFuncSeparate_dispatch_table_rewrite_ptr,
    .glStencilFuncSeparateATI = epoxy_glStencilFuncSeparateATI_dispatch_table_rewrite_ptr,
    .glStencilMask = epoxy_glStencilMask_dispatch_table_rewrite_ptr,
    .glStencilMaskSeparate = epoxy_glStencilMaskSeparate_dispatch_table_rewrite_ptr,
    .glStencilOp = epoxy_glStencilOp_dispatch_table_rewrite_ptr,
    .glStencilOpSeparate = epoxy_glStencilOpSeparate_dispatch_table_rewrite_ptr,
    .glStencilOpSeparateATI = epoxy_glStencilOpSeparateATI_dispatch_table_rewrite_ptr,
    .glStencilOpValueAMD = epoxy_glStencilOpValueAMD_dispatch_table_rewrite_ptr,
    .glStencilStrokePathInstancedNV = epoxy_glStencilStrokePathInstancedNV_dispatch_table_rewrite_ptr,
    .glStencilStrokePathNV = epoxy_glStencilStrokePathNV_dispatch_table_rewrite_ptr,
    .glStencilThenCoverFillPathInstancedNV = epoxy_glStencilThenCoverFillPathInstancedNV_dispatch_table_rewrite_ptr,
    .glStencilThenCoverFillPathNV = epoxy_glStencilThenCoverFillPathNV_dispatch_table_rewrite_ptr,
    .glStencilThenCoverStrokePathInstancedNV = epoxy_glStencilThenCoverStrokePathInstancedNV_dispatch_table_rewrite_ptr,
    .glStencilThenCoverStrokePathNV = epoxy_glStencilThenCoverStrokePathNV_dispatch_table_rewrite_ptr,
    .glStopInstrumentsSGIX = epoxy_glStopInstrumentsSGIX_dispatch_table_rewrite_ptr,
    .glStringMarkerGREMEDY = epoxy_glStringMarkerGREMEDY_dispatch_table_rewrite_ptr,
    .glSubpixelPrecisionBiasNV = epoxy_glSubpixelPrecisionBiasNV_dispatch_table_rewrite_ptr,
    .glSwizzleEXT = epoxy_glSwizzleEXT_dispatch_table_rewrite_ptr,
    .glSyncTextureINTEL = epoxy_glSyncTextureINTEL_dispatch_table_rewrite_ptr,
    .glTagSampleBufferSGIX = epoxy_glTagSampleBufferSGIX_dispatch_table_rewrite_ptr,
    .glTangent3bEXT = epoxy_glTangent3bEXT_dispatch_table_rewrite_ptr,
    .glTangent3bvEXT = epoxy_glTangent3bvEXT_dispatch_table_rewrite_ptr,
    .glTangent3dEXT = epoxy_glTangent3dEXT_dispatch_table_rewrite_ptr,
    .glTangent3dvEXT = epoxy_glTangent3dvEXT_dispatch_table_rewrite_ptr,
    .glTangent3fEXT = epoxy_glTangent3fEXT_dispatch_table_rewrite_ptr,
    .glTangent3fvEXT = epoxy_glTangent3fvEXT_dispatch_table_rewrite_ptr,
    .glTangent3iEXT = epoxy_glTangent3iEXT_dispatch_table_rewrite_ptr,
    .glTangent3ivEXT = epoxy_glTangent3ivEXT_dispatch_table_rewrite_ptr,
    .glTangent3sEXT = epoxy_glTangent3sEXT_dispatch_table_rewrite_ptr,
    .glTangent3svEXT = epoxy_glTangent3svEXT_dispatch_table_rewrite_ptr,
    .glTangentPointerEXT = epoxy_glTangentPointerEXT_dispatch_table_rewrite_ptr,
    .glTbufferMask3DFX = epoxy_glTbufferMask3DFX_dispatch_table_rewrite_ptr,
    .glTessellationFactorAMD = epoxy_glTessellationFactorAMD_dispatch_table_rewrite_ptr,
    .glTessellationModeAMD = epoxy_glTessellationModeAMD_dispatch_table_rewrite_ptr,
    .glTestFenceAPPLE = epoxy_glTestFenceAPPLE_dispatch_table_rewrite_ptr,
    .glTestFenceNV = epoxy_glTestFenceNV_dispatch_table_rewrite_ptr,
    .glTestObjectAPPLE = epoxy_glTestObjectAPPLE_dispatch_table_rewrite_ptr,
    .glTexBuffer = epoxy_glTexBuffer_dispatch_table_rewrite_ptr,
    .glTexBufferARB = epoxy_glTexBufferARB_dispatch_table_rewrite_ptr,
    .glTexBufferEXT = epoxy_glTexBufferEXT_dispatch_table_rewrite_ptr,
    .glTexBufferOES = epoxy_glTexBufferOES_dispatch_table_rewrite_ptr,
    .glTexBufferRange = epoxy_glTexBufferRange_dispatch_table_rewrite_ptr,
    .glTexBufferRangeEXT = epoxy_glTexBufferRangeEXT_dispatch_table_rewrite_ptr,
    .glTexBufferRangeOES = epoxy_glTexBufferRangeOES_dispatch_table_rewrite_ptr,
    .glTexBumpParameterfvATI = epoxy_glTexBumpParameterfvATI_dispatch_table_rewrite_ptr,
    .glTexBumpParameterivATI = epoxy_glTexBumpParameterivATI_dispatch_table_rewrite_ptr,
    .glTexCoord1bOES = epoxy_glTexCoord1bOES_dispatch_table_rewrite_ptr,
    .glTexCoord1bvOES = epoxy_glTexCoord1bvOES_dispatch_table_rewrite_ptr,
    .glTexCoord1d = epoxy_glTexCoord1d_dispatch_table_rewrite_ptr,
    .glTexCoord1dv = epoxy_glTexCoord1dv_dispatch_table_rewrite_ptr,
    .glTexCoord1f = epoxy_glTexCoord1f_dispatch_table_rewrite_ptr,
    .glTexCoord1fv = epoxy_glTexCoord1fv_dispatch_table_rewrite_ptr,
    .glTexCoord1hNV = epoxy_glTexCoord1hNV_dispatch_table_rewrite_ptr,
    .glTexCoord1hvNV = epoxy_glTexCoord1hvNV_dispatch_table_rewrite_ptr,
    .glTexCoord1i = epoxy_glTexCoord1i_dispatch_table_rewrite_ptr,
    .glTexCoord1iv = epoxy_glTexCoord1iv_dispatch_table_rewrite_ptr,
    .glTexCoord1s = epoxy_glTexCoord1s_dispatch_table_rewrite_ptr,
    .glTexCoord1sv = epoxy_glTexCoord1sv_dispatch_table_rewrite_ptr,
    .glTexCoord1xOES = epoxy_glTexCoord1xOES_dispatch_table_rewrite_ptr,
    .glTexCoord1xvOES = epoxy_glTexCoord1xvOES_dispatch_table_rewrite_ptr,
    .glTexCoord2bOES = epoxy_glTexCoord2bOES_dispatch_table_rewrite_ptr,
    .glTexCoord2bvOES = epoxy_glTexCoord2bvOES_dispatch_table_rewrite_ptr,
    .glTexCoord2d = epoxy_glTexCoord2d_dispatch_table_rewrite_ptr,
    .glTexCoord2dv = epoxy_glTexCoord2dv_dispatch_table_rewrite_ptr,
    .glTexCoord2f = epoxy_glTexCoord2f_dispatch_table_rewrite_ptr,
    .glTexCoord2fColor3fVertex3fSUN = epoxy_glTexCoord2fColor3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fColor3fVertex3fvSUN = epoxy_glTexCoord2fColor3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fColor4fNormal3fVertex3fSUN = epoxy_glTexCoord2fColor4fNormal3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fColor4fNormal3fVertex3fvSUN = epoxy_glTexCoord2fColor4fNormal3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fColor4ubVertex3fSUN = epoxy_glTexCoord2fColor4ubVertex3fSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fColor4ubVertex3fvSUN = epoxy_glTexCoord2fColor4ubVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fNormal3fVertex3fSUN = epoxy_glTexCoord2fNormal3fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fNormal3fVertex3fvSUN = epoxy_glTexCoord2fNormal3fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fVertex3fSUN = epoxy_glTexCoord2fVertex3fSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fVertex3fvSUN = epoxy_glTexCoord2fVertex3fvSUN_dispatch_table_rewrite_ptr,
    .glTexCoord2fv = epoxy_glTexCoord2fv_dispatch_table_rewrite_ptr,
    .glTexCoord2hNV = epoxy_glTexCoord2hNV_dispatch_table_rewrite_ptr,
    .glTexCoord2hvNV = epoxy_glTexCoord2hvNV_dispatch_table_rewrite_ptr,
    .glTexCoord2i = epoxy_glTexCoord2i_dispatch_table_rewrite_ptr,
    .glTexCoord2iv = epoxy_glTexCoord2iv_dispatch_table_rewrite_ptr,
    .glTexCoord2s = epoxy_glTexCoord2s_dispatch_table_rewrite_ptr,
    .glTexCoord2sv = epoxy_glTexCoord2sv_dispatch_table_rewrite_ptr,
    .glTexCoord2xOES = epoxy_glTexCoord2xOES_dispatch_table_rewrite_ptr,
    .glTexCoord2xvOES = epoxy_glTexCoord2xvOES_dispatch_table_rewrite_ptr,
    .glTexCoord3bOES = epoxy_glTexCoord3bOES_dispatch_table_rewrite_ptr,
    .glTexCoord3bvOES = epoxy_glTexCoord3bvOES_dispatch_table_rewrite_ptr,
    .glTexCoord3d = epoxy_glTexCoord3d_dispatch_table_rewrite_ptr,
    .glTexCoord3dv = epoxy_glTexCoord3dv_dispatch_table_rewrite_ptr,
    .glTexCoord3f = epoxy_glTexCoord3f_dispatch_table_rewrite_ptr,
    .glTexCoord3fv = epoxy_glTexCoord3fv_dispatch_table_rewrite_ptr,
    .glTexCoord3hNV = epoxy_glTexCoord3hNV_dispatch_table_rewrite_ptr,
    .glTexCoord3hvNV = epoxy_glTexCoord3hvNV_dispatch_table_rewrite_ptr,
    .glTexCoord3i = epoxy_glTexCoord3i_dispatch_table_rewrite_ptr,
    .glTexCoord3iv = epoxy_glTexCoord3iv_dispatch_table_rewrite_ptr,
    .glTexCoord3s = epoxy_glTexCoord3s_dispatch_table_rewrite_ptr,
    .glTexCoord3sv = epoxy_glTexCoord3sv_dispatch_table_rewrite_ptr,
    .glTexCoord3xOES = epoxy_glTexCoord3xOES_dispatch_table_rewrite_ptr,
    .glTexCoord3xvOES = epoxy_glTexCoord3xvOES_dispatch_table_rewrite_ptr,
    .glTexCoord4bOES = epoxy_glTexCoord4bOES_dispatch_table_rewrite_ptr,
    .glTexCoord4bvOES = epoxy_glTexCoord4bvOES_dispatch_table_rewrite_ptr,
    .glTexCoord4d = epoxy_glTexCoord4d_dispatch_table_rewrite_ptr,
    .glTexCoord4dv = epoxy_glTexCoord4dv_dispatch_table_rewrite_ptr,
    .glTexCoord4f = epoxy_glTexCoord4f_dispatch_table_rewrite_ptr,
    .glTexCoord4fColor4fNormal3fVertex4fSUN = epoxy_glTexCoord4fColor4fNormal3fVertex4fSUN_dispatch_table_rewrite_ptr,
    .glTexCoord4fColor4fNormal3fVertex4fvSUN = epoxy_glTexCoord4fColor4fNormal3fVertex4fvSUN_dispatch_table_rewrite_ptr,
    .glTexCoord4fVertex4fSUN = epoxy_glTexCoord4fVertex4fSUN_dispatch_table_rewrite_ptr,
    .glTexCoord4fVertex4fvSUN = epoxy_glTexCoord4fVertex4fvSUN_dispatch_table_rewrite_ptr,
    .glTexCoord4fv = epoxy_glTexCoord4fv_dispatch_table_rewrite_ptr,
    .glTexCoord4hNV = epoxy_glTexCoord4hNV_dispatch_table_rewrite_ptr,
    .glTexCoord4hvNV = epoxy_glTexCoord4hvNV_dispatch_table_rewrite_ptr,
    .glTexCoord4i = epoxy_glTexCoord4i_dispatch_table_rewrite_ptr,
    .glTexCoord4iv = epoxy_glTexCoord4iv_dispatch_table_rewrite_ptr,
    .glTexCoord4s = epoxy_glTexCoord4s_dispatch_table_rewrite_ptr,
    .glTexCoord4sv = epoxy_glTexCoord4sv_dispatch_table_rewrite_ptr,
    .glTexCoord4xOES = epoxy_glTexCoord4xOES_dispatch_table_rewrite_ptr,
    .glTexCoord4xvOES = epoxy_glTexCoord4xvOES_dispatch_table_rewrite_ptr,
    .glTexCoordFormatNV = epoxy_glTexCoordFormatNV_dispatch_table_rewrite_ptr,
    .glTexCoordP1ui = epoxy_glTexCoordP1ui_dispatch_table_rewrite_ptr,
    .glTexCoordP1uiv = epoxy_glTexCoordP1uiv_dispatch_table_rewrite_ptr,
    .glTexCoordP2ui = epoxy_glTexCoordP2ui_dispatch_table_rewrite_ptr,
    .glTexCoordP2uiv = epoxy_glTexCoordP2uiv_dispatch_table_rewrite_ptr,
    .glTexCoordP3ui = epoxy_glTexCoordP3ui_dispatch_table_rewrite_ptr,
    .glTexCoordP3uiv = epoxy_glTexCoordP3uiv_dispatch_table_rewrite_ptr,
    .glTexCoordP4ui = epoxy_glTexCoordP4ui_dispatch_table_rewrite_ptr,
    .glTexCoordP4uiv = epoxy_glTexCoordP4uiv_dispatch_table_rewrite_ptr,
    .glTexCoordPointer = epoxy_glTexCoordPointer_dispatch_table_rewrite_ptr,
    .glTexCoordPointerEXT = epoxy_glTexCoordPointerEXT_dispatch_table_rewrite_ptr,
    .glTexCoordPointerListIBM = epoxy_glTexCoordPointerListIBM_dispatch_table_rewrite_ptr,
    .glTexCoordPointervINTEL = epoxy_glTexCoordPointervINTEL_dispatch_table_rewrite_ptr,
    .glTexEnvf = epoxy_glTexEnvf_dispatch_table_rewrite_ptr,
    .glTexEnvfv = epoxy_glTexEnvfv_dispatch_table_rewrite_ptr,
    .glTexEnvi = epoxy_glTexEnvi_dispatch_table_rewrite_ptr,
    .glTexEnviv = epoxy_glTexEnviv_dispatch_table_rewrite_ptr,
    .glTexEnvx = epoxy_glTexEnvx_dispatch_table_rewrite_ptr,
    .glTexEnvxOES = epoxy_glTexEnvxOES_dispatch_table_rewrite_ptr,
    .glTexEnvxv = epoxy_glTexEnvxv_dispatch_table_rewrite_ptr,
    .glTexEnvxvOES = epoxy_glTexEnvxvOES_dispatch_table_rewrite_ptr,
    .glTexFilterFuncSGIS = epoxy_glTexFilterFuncSGIS_dispatch_table_rewrite_ptr,
    .glTexGend = epoxy_glTexGend_dispatch_table_rewrite_ptr,
    .glTexGendv = epoxy_glTexGendv_dispatch_table_rewrite_ptr,
    .glTexGenf = epoxy_glTexGenf_dispatch_table_rewrite_ptr,
    .glTexGenfOES = epoxy_glTexGenfOES_dispatch_table_rewrite_ptr,
    .glTexGenfv = epoxy_glTexGenfv_dispatch_table_rewrite_ptr,
    .glTexGenfvOES = epoxy_glTexGenfvOES_dispatch_table_rewrite_ptr,
    .glTexGeni = epoxy_glTexGeni_dispatch_table_rewrite_ptr,
    .glTexGeniOES = epoxy_glTexGeniOES_dispatch_table_rewrite_ptr,
    .glTexGeniv = epoxy_glTexGeniv_dispatch_table_rewrite_ptr,
    .glTexGenivOES = epoxy_glTexGenivOES_dispatch_table_rewrite_ptr,
    .glTexGenxOES = epoxy_glTexGenxOES_dispatch_table_rewrite_ptr,
    .glTexGenxvOES = epoxy_glTexGenxvOES_dispatch_table_rewrite_ptr,
    .glTexImage1D = epoxy_glTexImage1D_dispatch_table_rewrite_ptr,
    .glTexImage2D = epoxy_glTexImage2D_dispatch_table_rewrite_ptr,
    .glTexImage2DMultisample = epoxy_glTexImage2DMultisample_dispatch_table_rewrite_ptr,
    .glTexImage2DMultisampleCoverageNV = epoxy_glTexImage2DMultisampleCoverageNV_dispatch_table_rewrite_ptr,
    .glTexImage3D = epoxy_glTexImage3D_dispatch_table_rewrite_ptr,
    .glTexImage3DEXT = epoxy_glTexImage3DEXT_dispatch_table_rewrite_ptr,
    .glTexImage3DMultisample = epoxy_glTexImage3DMultisample_dispatch_table_rewrite_ptr,
    .glTexImage3DMultisampleCoverageNV = epoxy_glTexImage3DMultisampleCoverageNV_dispatch_table_rewrite_ptr,
    .glTexImage3DOES = epoxy_glTexImage3DOES_dispatch_table_rewrite_ptr,
    .glTexImage4DSGIS = epoxy_glTexImage4DSGIS_dispatch_table_rewrite_ptr,
    .glTexPageCommitmentARB = epoxy_glTexPageCommitmentARB_dispatch_table_rewrite_ptr,
    .glTexPageCommitmentEXT = epoxy_glTexPageCommitmentEXT_dispatch_table_rewrite_ptr,
    .glTexParameterIiv = epoxy_glTexParameterIiv_dispatch_table_rewrite_ptr,
    .glTexParameterIivEXT = epoxy_glTexParameterIivEXT_dispatch_table_rewrite_ptr,
    .glTexParameterIivOES = epoxy_glTexParameterIivOES_dispatch_table_rewrite_ptr,
    .glTexParameterIuiv = epoxy_glTexParameterIuiv_dispatch_table_rewrite_ptr,
    .glTexParameterIuivEXT = epoxy_glTexParameterIuivEXT_dispatch_table_rewrite_ptr,
    .glTexParameterIuivOES = epoxy_glTexParameterIuivOES_dispatch_table_rewrite_ptr,
    .glTexParameterf = epoxy_glTexParameterf_dispatch_table_rewrite_ptr,
    .glTexParameterfv = epoxy_glTexParameterfv_dispatch_table_rewrite_ptr,
    .glTexParameteri = epoxy_glTexParameteri_dispatch_table_rewrite_ptr,
    .glTexParameteriv = epoxy_glTexParameteriv_dispatch_table_rewrite_ptr,
    .glTexParameterx = epoxy_glTexParameterx_dispatch_table_rewrite_ptr,
    .glTexParameterxOES = epoxy_glTexParameterxOES_dispatch_table_rewrite_ptr,
    .glTexParameterxv = epoxy_glTexParameterxv_dispatch_table_rewrite_ptr,
    .glTexParameterxvOES = epoxy_glTexParameterxvOES_dispatch_table_rewrite_ptr,
    .glTexRenderbufferNV = epoxy_glTexRenderbufferNV_dispatch_table_rewrite_ptr,
    .glTexStorage1D = epoxy_glTexStorage1D_dispatch_table_rewrite_ptr,
    .glTexStorage1DEXT = epoxy_glTexStorage1DEXT_dispatch_table_rewrite_ptr,
    .glTexStorage2D = epoxy_glTexStorage2D_dispatch_table_rewrite_ptr,
    .glTexStorage2DEXT = epoxy_glTexStorage2DEXT_dispatch_table_rewrite_ptr,
    .glTexStorage2DMultisample = epoxy_glTexStorage2DMultisample_dispatch_table_rewrite_ptr,
    .glTexStorage3D = epoxy_glTexStorage3D_dispatch_table_rewrite_ptr,
    .glTexStorage3DEXT = epoxy_glTexStorage3DEXT_dispatch_table_rewrite_ptr,
    .glTexStorage3DMultisample = epoxy_glTexStorage3DMultisample_dispatch_table_rewrite_ptr,
    .glTexStorage3DMultisampleOES = epoxy_glTexStorage3DMultisampleOES_dispatch_table_rewrite_ptr,
    .glTexStorageSparseAMD = epoxy_glTexStorageSparseAMD_dispatch_table_rewrite_ptr,
    .glTexSubImage1D = epoxy_glTexSubImage1D_dispatch_table_rewrite_ptr,
    .glTexSubImage1DEXT = epoxy_glTexSubImage1DEXT_dispatch_table_rewrite_ptr,
    .glTexSubImage2D = epoxy_glTexSubImage2D_dispatch_table_rewrite_ptr,
    .glTexSubImage2DEXT = epoxy_glTexSubImage2DEXT_dispatch_table_rewrite_ptr,
    .glTexSubImage3D = epoxy_glTexSubImage3D_dispatch_table_rewrite_ptr,
    .glTexSubImage3DEXT = epoxy_glTexSubImage3DEXT_dispatch_table_rewrite_ptr,
    .glTexSubImage3DOES = epoxy_glTexSubImage3DOES_dispatch_table_rewrite_ptr,
    .glTexSubImage4DSGIS = epoxy_glTexSubImage4DSGIS_dispatch_table_rewrite_ptr,
    .glTextureBarrier = epoxy_glTextureBarrier_dispatch_table_rewrite_ptr,
    .glTextureBarrierNV = epoxy_glTextureBarrierNV_dispatch_table_rewrite_ptr,
    .glTextureBuffer = epoxy_glTextureBuffer_dispatch_table_rewrite_ptr,
    .glTextureBufferEXT = epoxy_glTextureBufferEXT_dispatch_table_rewrite_ptr,
    .glTextureBufferRange = epoxy_glTextureBufferRange_dispatch_table_rewrite_ptr,
    .glTextureBufferRangeEXT = epoxy_glTextureBufferRangeEXT_dispatch_table_rewrite_ptr,
    .glTextureColorMaskSGIS = epoxy_glTextureColorMaskSGIS_dispatch_table_rewrite_ptr,
    .glTextureImage1DEXT = epoxy_glTextureImage1DEXT_dispatch_table_rewrite_ptr,
    .glTextureImage2DEXT = epoxy_glTextureImage2DEXT_dispatch_table_rewrite_ptr,
    .glTextureImage2DMultisampleCoverageNV = epoxy_glTextureImage2DMultisampleCoverageNV_dispatch_table_rewrite_ptr,
    .glTextureImage2DMultisampleNV = epoxy_glTextureImage2DMultisampleNV_dispatch_table_rewrite_ptr,
    .glTextureImage3DEXT = epoxy_glTextureImage3DEXT_dispatch_table_rewrite_ptr,
    .glTextureImage3DMultisampleCoverageNV = epoxy_glTextureImage3DMultisampleCoverageNV_dispatch_table_rewrite_ptr,
    .glTextureImage3DMultisampleNV = epoxy_glTextureImage3DMultisampleNV_dispatch_table_rewrite_ptr,
    .glTextureLightEXT = epoxy_glTextureLightEXT_dispatch_table_rewrite_ptr,
    .glTextureMaterialEXT = epoxy_glTextureMaterialEXT_dispatch_table_rewrite_ptr,
    .glTextureNormalEXT = epoxy_glTextureNormalEXT_dispatch_table_rewrite_ptr,
    .glTexturePageCommitmentEXT = epoxy_glTexturePageCommitmentEXT_dispatch_table_rewrite_ptr,
    .glTextureParameterIiv = epoxy_glTextureParameterIiv_dispatch_table_rewrite_ptr,
    .glTextureParameterIivEXT = epoxy_glTextureParameterIivEXT_dispatch_table_rewrite_ptr,
    .glTextureParameterIuiv = epoxy_glTextureParameterIuiv_dispatch_table_rewrite_ptr,
    .glTextureParameterIuivEXT = epoxy_glTextureParameterIuivEXT_dispatch_table_rewrite_ptr,
    .glTextureParameterf = epoxy_glTextureParameterf_dispatch_table_rewrite_ptr,
    .glTextureParameterfEXT = epoxy_glTextureParameterfEXT_dispatch_table_rewrite_ptr,
    .glTextureParameterfv = epoxy_glTextureParameterfv_dispatch_table_rewrite_ptr,
    .glTextureParameterfvEXT = epoxy_glTextureParameterfvEXT_dispatch_table_rewrite_ptr,
    .glTextureParameteri = epoxy_glTextureParameteri_dispatch_table_rewrite_ptr,
    .glTextureParameteriEXT = epoxy_glTextureParameteriEXT_dispatch_table_rewrite_ptr,
    .glTextureParameteriv = epoxy_glTextureParameteriv_dispatch_table_rewrite_ptr,
    .glTextureParameterivEXT = epoxy_glTextureParameterivEXT_dispatch_table_rewrite_ptr,
    .glTextureRangeAPPLE = epoxy_glTextureRangeAPPLE_dispatch_table_rewrite_ptr,
    .glTextureRenderbufferEXT = epoxy_glTextureRenderbufferEXT_dispatch_table_rewrite_ptr,
    .glTextureStorage1D = epoxy_glTextureStorage1D_dispatch_table_rewrite_ptr,
    .glTextureStorage1DEXT = epoxy_glTextureStorage1DEXT_dispatch_table_rewrite_ptr,
    .glTextureStorage2D = epoxy_glTextureStorage2D_dispatch_table_rewrite_ptr,
    .glTextureStorage2DEXT = epoxy_glTextureStorage2DEXT_dispatch_table_rewrite_ptr,
    .glTextureStorage2DMultisample = epoxy_glTextureStorage2DMultisample_dispatch_table_rewrite_ptr,
    .glTextureStorage2DMultisampleEXT = epoxy_glTextureStorage2DMultisampleEXT_dispatch_table_rewrite_ptr,
    .glTextureStorage3D = epoxy_glTextureStorage3D_dispatch_table_rewrite_ptr,
    .glTextureStorage3DEXT = epoxy_glTextureStorage3DEXT_dispatch_table_rewrite_ptr,
    .glTextureStorage3DMultisample = epoxy_glTextureStorage3DMultisample_dispatch_table_rewrite_ptr,
    .glTextureStorage3DMultisampleEXT = epoxy_glTextureStorage3DMultisampleEXT_dispatch_table_rewrite_ptr,
    .glTextureStorageSparseAMD = epoxy_glTextureStorageSparseAMD_dispatch_table_rewrite_ptr,
    .glTextureSubImage1D = epoxy_glTextureSubImage1D_dispatch_table_rewrite_ptr,
    .glTextureSubImage1DEXT = epoxy_glTextureSubImage1DEXT_dispatch_table_rewrite_ptr,
    .glTextureSubImage2D = epoxy_glTextureSubImage2D_dispatch_table_rewrite_ptr,
    .glTextureSubImage2DEXT = epoxy_glTextureSubImage2DEXT_dispatch_table_rewrite_ptr,
    .glTextureSubImage3D = epoxy_glTextureSubImage3D_dispatch_table_rewrite_ptr,
    .glTextureSubImage3DEXT = epoxy_glTextureSubImage3DEXT_dispatch_table_rewrite_ptr,
    .glTextureView = epoxy_glTextureView_dispatch_table_rewrite_ptr,
    .glTextureViewEXT = epoxy_glTextureViewEXT_dispatch_table_rewrite_ptr,
    .glTextureViewOES = epoxy_glTextureViewOES_dispatch_table_rewrite_ptr,
    .glTrackMatrixNV = epoxy_glTrackMatrixNV_dispatch_table_rewrite_ptr,
    .glTransformFeedbackAttribsNV = epoxy_glTransformFeedbackAttribsNV_dispatch_table_rewrite_ptr,
    .glTransformFeedbackBufferBase = epoxy_glTransformFeedbackBufferBase_dispatch_table_rewrite_ptr,
    .glTransformFeedbackBufferRange = epoxy_glTransformFeedbackBufferRange_dispatch_table_rewrite_ptr,
    .glTransformFeedbackStreamAttribsNV = epoxy_glTransformFeedbackStreamAttribsNV_dispatch_table_rewrite_ptr,
    .glTransformFeedbackVaryings = epoxy_glTransformFeedbackVaryings_dispatch_table_rewrite_ptr,
    .glTransformFeedbackVaryingsEXT = epoxy_glTransformFeedbackVaryingsEXT_dispatch_table_rewrite_ptr,
    .glTransformFeedbackVaryingsNV = epoxy_glTransformFeedbackVaryingsNV_dispatch_table_rewrite_ptr,
    .glTransformPathNV = epoxy_glTransformPathNV_dispatch_table_rewrite_ptr,
    .glTranslated = epoxy_glTranslated_dispatch_table_rewrite_ptr,
    .glTranslatef = epoxy_glTranslatef_dispatch_table_rewrite_ptr,
    .glTranslatex = epoxy_glTranslatex_dispatch_table_rewrite_ptr,
    .glTranslatexOES = epoxy_glTranslatexOES_dispatch_table_rewrite_ptr,
    .glUniform1d = epoxy_glUniform1d_dispatch_table_rewrite_ptr,
    .glUniform1dv = epoxy_glUniform1dv_dispatch_table_rewrite_ptr,
    .glUniform1f = epoxy_glUniform1f_dispatch_table_rewrite_ptr,
    .glUniform1fARB = epoxy_glUniform1fARB_dispatch_table_rewrite_ptr,
    .glUniform1fv = epoxy_glUniform1fv_dispatch_table_rewrite_ptr,
    .glUniform1fvARB = epoxy_glUniform1fvARB_dispatch_table_rewrite_ptr,
    .glUniform1i = epoxy_glUniform1i_dispatch_table_rewrite_ptr,
    .glUniform1i64NV = epoxy_glUniform1i64NV_dispatch_table_rewrite_ptr,
    .glUniform1i64vNV = epoxy_glUniform1i64vNV_dispatch_table_rewrite_ptr,
    .glUniform1iARB = epoxy_glUniform1iARB_dispatch_table_rewrite_ptr,
    .glUniform1iv = epoxy_glUniform1iv_dispatch_table_rewrite_ptr,
    .glUniform1ivARB = epoxy_glUniform1ivARB_dispatch_table_rewrite_ptr,
    .glUniform1ui = epoxy_glUniform1ui_dispatch_table_rewrite_ptr,
    .glUniform1ui64NV = epoxy_glUniform1ui64NV_dispatch_table_rewrite_ptr,
    .glUniform1ui64vNV = epoxy_glUniform1ui64vNV_dispatch_table_rewrite_ptr,
    .glUniform1uiEXT = epoxy_glUniform1uiEXT_dispatch_table_rewrite_ptr,
    .glUniform1uiv = epoxy_glUniform1uiv_dispatch_table_rewrite_ptr,
    .glUniform1uivEXT = epoxy_glUniform1uivEXT_dispatch_table_rewrite_ptr,
    .glUniform2d = epoxy_glUniform2d_dispatch_table_rewrite_ptr,
    .glUniform2dv = epoxy_glUniform2dv_dispatch_table_rewrite_ptr,
    .glUniform2f = epoxy_glUniform2f_dispatch_table_rewrite_ptr,
    .glUniform2fARB = epoxy_glUniform2fARB_dispatch_table_rewrite_ptr,
    .glUniform2fv = epoxy_glUniform2fv_dispatch_table_rewrite_ptr,
    .glUniform2fvARB = epoxy_glUniform2fvARB_dispatch_table_rewrite_ptr,
    .glUniform2i = epoxy_glUniform2i_dispatch_table_rewrite_ptr,
    .glUniform2i64NV = epoxy_glUniform2i64NV_dispatch_table_rewrite_ptr,
    .glUniform2i64vNV = epoxy_glUniform2i64vNV_dispatch_table_rewrite_ptr,
    .glUniform2iARB = epoxy_glUniform2iARB_dispatch_table_rewrite_ptr,
    .glUniform2iv = epoxy_glUniform2iv_dispatch_table_rewrite_ptr,
    .glUniform2ivARB = epoxy_glUniform2ivARB_dispatch_table_rewrite_ptr,
    .glUniform2ui = epoxy_glUniform2ui_dispatch_table_rewrite_ptr,
    .glUniform2ui64NV = epoxy_glUniform2ui64NV_dispatch_table_rewrite_ptr,
    .glUniform2ui64vNV = epoxy_glUniform2ui64vNV_dispatch_table_rewrite_ptr,
    .glUniform2uiEXT = epoxy_glUniform2uiEXT_dispatch_table_rewrite_ptr,
    .glUniform2uiv = epoxy_glUniform2uiv_dispatch_table_rewrite_ptr,
    .glUniform2uivEXT = epoxy_glUniform2uivEXT_dispatch_table_rewrite_ptr,
    .glUniform3d = epoxy_glUniform3d_dispatch_table_rewrite_ptr,
    .glUniform3dv = epoxy_glUniform3dv_dispatch_table_rewrite_ptr,
    .glUniform3f = epoxy_glUniform3f_dispatch_table_rewrite_ptr,
    .glUniform3fARB = epoxy_glUniform3fARB_dispatch_table_rewrite_ptr,
    .glUniform3fv = epoxy_glUniform3fv_dispatch_table_rewrite_ptr,
    .glUniform3fvARB = epoxy_glUniform3fvARB_dispatch_table_rewrite_ptr,
    .glUniform3i = epoxy_glUniform3i_dispatch_table_rewrite_ptr,
    .glUniform3i64NV = epoxy_glUniform3i64NV_dispatch_table_rewrite_ptr,
    .glUniform3i64vNV = epoxy_glUniform3i64vNV_dispatch_table_rewrite_ptr,
    .glUniform3iARB = epoxy_glUniform3iARB_dispatch_table_rewrite_ptr,
    .glUniform3iv = epoxy_glUniform3iv_dispatch_table_rewrite_ptr,
    .glUniform3ivARB = epoxy_glUniform3ivARB_dispatch_table_rewrite_ptr,
    .glUniform3ui = epoxy_glUniform3ui_dispatch_table_rewrite_ptr,
    .glUniform3ui64NV = epoxy_glUniform3ui64NV_dispatch_table_rewrite_ptr,
    .glUniform3ui64vNV = epoxy_glUniform3ui64vNV_dispatch_table_rewrite_ptr,
    .glUniform3uiEXT = epoxy_glUniform3uiEXT_dispatch_table_rewrite_ptr,
    .glUniform3uiv = epoxy_glUniform3uiv_dispatch_table_rewrite_ptr,
    .glUniform3uivEXT = epoxy_glUniform3uivEXT_dispatch_table_rewrite_ptr,
    .glUniform4d = epoxy_glUniform4d_dispatch_table_rewrite_ptr,
    .glUniform4dv = epoxy_glUniform4dv_dispatch_table_rewrite_ptr,
    .glUniform4f = epoxy_glUniform4f_dispatch_table_rewrite_ptr,
    .glUniform4fARB = epoxy_glUniform4fARB_dispatch_table_rewrite_ptr,
    .glUniform4fv = epoxy_glUniform4fv_dispatch_table_rewrite_ptr,
    .glUniform4fvARB = epoxy_glUniform4fvARB_dispatch_table_rewrite_ptr,
    .glUniform4i = epoxy_glUniform4i_dispatch_table_rewrite_ptr,
    .glUniform4i64NV = epoxy_glUniform4i64NV_dispatch_table_rewrite_ptr,
    .glUniform4i64vNV = epoxy_glUniform4i64vNV_dispatch_table_rewrite_ptr,
    .glUniform4iARB = epoxy_glUniform4iARB_dispatch_table_rewrite_ptr,
    .glUniform4iv = epoxy_glUniform4iv_dispatch_table_rewrite_ptr,
    .glUniform4ivARB = epoxy_glUniform4ivARB_dispatch_table_rewrite_ptr,
    .glUniform4ui = epoxy_glUniform4ui_dispatch_table_rewrite_ptr,
    .glUniform4ui64NV = epoxy_glUniform4ui64NV_dispatch_table_rewrite_ptr,
    .glUniform4ui64vNV = epoxy_glUniform4ui64vNV_dispatch_table_rewrite_ptr,
    .glUniform4uiEXT = epoxy_glUniform4uiEXT_dispatch_table_rewrite_ptr,
    .glUniform4uiv = epoxy_glUniform4uiv_dispatch_table_rewrite_ptr,
    .glUniform4uivEXT = epoxy_glUniform4uivEXT_dispatch_table_rewrite_ptr,
    .glUniformBlockBinding = epoxy_glUniformBlockBinding_dispatch_table_rewrite_ptr,
    .glUniformBufferEXT = epoxy_glUniformBufferEXT_dispatch_table_rewrite_ptr,
    .glUniformHandleui64ARB = epoxy_glUniformHandleui64ARB_dispatch_table_rewrite_ptr,
    .glUniformHandleui64NV = epoxy_glUniformHandleui64NV_dispatch_table_rewrite_ptr,
    .glUniformHandleui64vARB = epoxy_glUniformHandleui64vARB_dispatch_table_rewrite_ptr,
    .glUniformHandleui64vNV = epoxy_glUniformHandleui64vNV_dispatch_table_rewrite_ptr,
    .glUniformMatrix2dv = epoxy_glUniformMatrix2dv_dispatch_table_rewrite_ptr,
    .glUniformMatrix2fv = epoxy_glUniformMatrix2fv_dispatch_table_rewrite_ptr,
    .glUniformMatrix2fvARB = epoxy_glUniformMatrix2fvARB_dispatch_table_rewrite_ptr,
    .glUniformMatrix2x3dv = epoxy_glUniformMatrix2x3dv_dispatch_table_rewrite_ptr,
    .glUniformMatrix2x3fv = epoxy_glUniformMatrix2x3fv_dispatch_table_rewrite_ptr,
    .glUniformMatrix2x3fvNV = epoxy_glUniformMatrix2x3fvNV_dispatch_table_rewrite_ptr,
    .glUniformMatrix2x4dv = epoxy_glUniformMatrix2x4dv_dispatch_table_rewrite_ptr,
    .glUniformMatrix2x4fv = epoxy_glUniformMatrix2x4fv_dispatch_table_rewrite_ptr,
    .glUniformMatrix2x4fvNV = epoxy_glUniformMatrix2x4fvNV_dispatch_table_rewrite_ptr,
    .glUniformMatrix3dv = epoxy_glUniformMatrix3dv_dispatch_table_rewrite_ptr,
    .glUniformMatrix3fv = epoxy_glUniformMatrix3fv_dispatch_table_rewrite_ptr,
    .glUniformMatrix3fvARB = epoxy_glUniformMatrix3fvARB_dispatch_table_rewrite_ptr,
    .glUniformMatrix3x2dv = epoxy_glUniformMatrix3x2dv_dispatch_table_rewrite_ptr,
    .glUniformMatrix3x2fv = epoxy_glUniformMatrix3x2fv_dispatch_table_rewrite_ptr,
    .glUniformMatrix3x2fvNV = epoxy_glUniformMatrix3x2fvNV_dispatch_table_rewrite_ptr,
    .glUniformMatrix3x4dv = epoxy_glUniformMatrix3x4dv_dispatch_table_rewrite_ptr,
    .glUniformMatrix3x4fv = epoxy_glUniformMatrix3x4fv_dispatch_table_rewrite_ptr,
    .glUniformMatrix3x4fvNV = epoxy_glUniformMatrix3x4fvNV_dispatch_table_rewrite_ptr,
    .glUniformMatrix4dv = epoxy_glUniformMatrix4dv_dispatch_table_rewrite_ptr,
    .glUniformMatrix4fv = epoxy_glUniformMatrix4fv_dispatch_table_rewrite_ptr,
    .glUniformMatrix4fvARB = epoxy_glUniformMatrix4fvARB_dispatch_table_rewrite_ptr,
    .glUniformMatrix4x2dv = epoxy_glUniformMatrix4x2dv_dispatch_table_rewrite_ptr,
    .glUniformMatrix4x2fv = epoxy_glUniformMatrix4x2fv_dispatch_table_rewrite_ptr,
    .glUniformMatrix4x2fvNV = epoxy_glUniformMatrix4x2fvNV_dispatch_table_rewrite_ptr,
    .glUniformMatrix4x3dv = epoxy_glUniformMatrix4x3dv_dispatch_table_rewrite_ptr,
    .glUniformMatrix4x3fv = epoxy_glUniformMatrix4x3fv_dispatch_table_rewrite_ptr,
    .glUniformMatrix4x3fvNV = epoxy_glUniformMatrix4x3fvNV_dispatch_table_rewrite_ptr,
    .glUniformSubroutinesuiv = epoxy_glUniformSubroutinesuiv_dispatch_table_rewrite_ptr,
    .glUniformui64NV = epoxy_glUniformui64NV_dispatch_table_rewrite_ptr,
    .glUniformui64vNV = epoxy_glUniformui64vNV_dispatch_table_rewrite_ptr,
    .glUnlockArraysEXT = epoxy_glUnlockArraysEXT_dispatch_table_rewrite_ptr,
    .glUnmapBuffer = epoxy_glUnmapBuffer_dispatch_table_rewrite_ptr,
    .glUnmapBufferARB = epoxy_glUnmapBufferARB_dispatch_table_rewrite_ptr,
    .glUnmapBufferOES = epoxy_glUnmapBufferOES_dispatch_table_rewrite_ptr,
    .glUnmapNamedBuffer = epoxy_glUnmapNamedBuffer_dispatch_table_rewrite_ptr,
    .glUnmapNamedBufferEXT = epoxy_glUnmapNamedBufferEXT_dispatch_table_rewrite_ptr,
    .glUnmapObjectBufferATI = epoxy_glUnmapObjectBufferATI_dispatch_table_rewrite_ptr,
    .glUnmapTexture2DINTEL = epoxy_glUnmapTexture2DINTEL_dispatch_table_rewrite_ptr,
    .glUpdateObjectBufferATI = epoxy_glUpdateObjectBufferATI_dispatch_table_rewrite_ptr,
    .glUseProgram = epoxy_glUseProgram_dispatch_table_rewrite_ptr,
    .glUseProgramObjectARB = epoxy_glUseProgramObjectARB_dispatch_table_rewrite_ptr,
    .glUseProgramStages = epoxy_glUseProgramStages_dispatch_table_rewrite_ptr,
    .glUseProgramStagesEXT = epoxy_glUseProgramStagesEXT_dispatch_table_rewrite_ptr,
    .glUseShaderProgramEXT = epoxy_glUseShaderProgramEXT_dispatch_table_rewrite_ptr,
    .glVDPAUFiniNV = epoxy_glVDPAUFiniNV_dispatch_table_rewrite_ptr,
    .glVDPAUGetSurfaceivNV = epoxy_glVDPAUGetSurfaceivNV_dispatch_table_rewrite_ptr,
    .glVDPAUInitNV = epoxy_glVDPAUInitNV_dispatch_table_rewrite_ptr,
    .glVDPAUIsSurfaceNV = epoxy_glVDPAUIsSurfaceNV_dispatch_table_rewrite_ptr,
    .glVDPAUMapSurfacesNV = epoxy_glVDPAUMapSurfacesNV_dispatch_table_rewrite_ptr,
    .glVDPAURegisterOutputSurfaceNV = epoxy_glVDPAURegisterOutputSurfaceNV_dispatch_table_rewrite_ptr,
    .glVDPAURegisterVideoSurfaceNV = epoxy_glVDPAURegisterVideoSurfaceNV_dispatch_table_rewrite_ptr,
    .glVDPAUSurfaceAccessNV = epoxy_glVDPAUSurfaceAccessNV_dispatch_table_rewrite_ptr,
    .glVDPAUUnmapSurfacesNV = epoxy_glVDPAUUnmapSurfacesNV_dispatch_table_rewrite_ptr,
    .glVDPAUUnregisterSurfaceNV = epoxy_glVDPAUUnregisterSurfaceNV_dispatch_table_rewrite_ptr,
    .glValidateProgram = epoxy_glValidateProgram_dispatch_table_rewrite_ptr,
    .glValidateProgramARB = epoxy_glValidateProgramARB_dispatch_table_rewrite_ptr,
    .glValidateProgramPipeline = epoxy_glValidateProgramPipeline_dispatch_table_rewrite_ptr,
    .glValidateProgramPipelineEXT = epoxy_glValidateProgramPipelineEXT_dispatch_table_rewrite_ptr,
    .glVariantArrayObjectATI = epoxy_glVariantArrayObjectATI_dispatch_table_rewrite_ptr,
    .glVariantPointerEXT = epoxy_glVariantPointerEXT_dispatch_table_rewrite_ptr,
    .glVariantbvEXT = epoxy_glVariantbvEXT_dispatch_table_rewrite_ptr,
    .glVariantdvEXT = epoxy_glVariantdvEXT_dispatch_table_rewrite_ptr,
    .glVariantfvEXT = epoxy_glVariantfvEXT_dispatch_table_rewrite_ptr,
    .glVariantivEXT = epoxy_glVariantivEXT_dispatch_table_rewrite_ptr,
    .glVariantsvEXT = epoxy_glVariantsvEXT_dispatch_table_rewrite_ptr,
    .glVariantubvEXT = epoxy_glVariantubvEXT_dispatch_table_rewrite_ptr,
    .glVariantuivEXT = epoxy_glVariantuivEXT_dispatch_table_rewrite_ptr,
    .glVariantusvEXT = epoxy_glVariantusvEXT_dispatch_table_rewrite_ptr,
    .glVertex2bOES = epoxy_glVertex2bOES_dispatch_table_rewrite_ptr,
    .glVertex2bvOES = epoxy_glVertex2bvOES_dispatch_table_rewrite_ptr,
    .glVertex2d = epoxy_glVertex2d_dispatch_table_rewrite_ptr,
    .glVertex2dv = epoxy_glVertex2dv_dispatch_table_rewrite_ptr,
    .glVertex2f = epoxy_glVertex2f_dispatch_table_rewrite_ptr,
    .glVertex2fv = epoxy_glVertex2fv_dispatch_table_rewrite_ptr,
    .glVertex2hNV = epoxy_glVertex2hNV_dispatch_table_rewrite_ptr,
    .glVertex2hvNV = epoxy_glVertex2hvNV_dispatch_table_rewrite_ptr,
    .glVertex2i = epoxy_glVertex2i_dispatch_table_rewrite_ptr,
    .glVertex2iv = epoxy_glVertex2iv_dispatch_table_rewrite_ptr,
    .glVertex2s = epoxy_glVertex2s_dispatch_table_rewrite_ptr,
    .glVertex2sv = epoxy_glVertex2sv_dispatch_table_rewrite_ptr,
    .glVertex2xOES = epoxy_glVertex2xOES_dispatch_table_rewrite_ptr,
    .glVertex2xvOES = epoxy_glVertex2xvOES_dispatch_table_rewrite_ptr,
    .glVertex3bOES = epoxy_glVertex3bOES_dispatch_table_rewrite_ptr,
    .glVertex3bvOES = epoxy_glVertex3bvOES_dispatch_table_rewrite_ptr,
    .glVertex3d = epoxy_glVertex3d_dispatch_table_rewrite_ptr,
    .glVertex3dv = epoxy_glVertex3dv_dispatch_table_rewrite_ptr,
    .glVertex3f = epoxy_glVertex3f_dispatch_table_rewrite_ptr,
    .glVertex3fv = epoxy_glVertex3fv_dispatch_table_rewrite_ptr,
    .glVertex3hNV = epoxy_glVertex3hNV_dispatch_table_rewrite_ptr,
    .glVertex3hvNV = epoxy_glVertex3hvNV_dispatch_table_rewrite_ptr,
    .glVertex3i = epoxy_glVertex3i_dispatch_table_rewrite_ptr,
    .glVertex3iv = epoxy_glVertex3iv_dispatch_table_rewrite_ptr,
    .glVertex3s = epoxy_glVertex3s_dispatch_table_rewrite_ptr,
    .glVertex3sv = epoxy_glVertex3sv_dispatch_table_rewrite_ptr,
    .glVertex3xOES = epoxy_glVertex3xOES_dispatch_table_rewrite_ptr,
    .glVertex3xvOES = epoxy_glVertex3xvOES_dispatch_table_rewrite_ptr,
    .glVertex4bOES = epoxy_glVertex4bOES_dispatch_table_rewrite_ptr,
    .glVertex4bvOES = epoxy_glVertex4bvOES_dispatch_table_rewrite_ptr,
    .glVertex4d = epoxy_glVertex4d_dispatch_table_rewrite_ptr,
    .glVertex4dv = epoxy_glVertex4dv_dispatch_table_rewrite_ptr,
    .glVertex4f = epoxy_glVertex4f_dispatch_table_rewrite_ptr,
    .glVertex4fv = epoxy_glVertex4fv_dispatch_table_rewrite_ptr,
    .glVertex4hNV = epoxy_glVertex4hNV_dispatch_table_rewrite_ptr,
    .glVertex4hvNV = epoxy_glVertex4hvNV_dispatch_table_rewrite_ptr,
    .glVertex4i = epoxy_glVertex4i_dispatch_table_rewrite_ptr,
    .glVertex4iv = epoxy_glVertex4iv_dispatch_table_rewrite_ptr,
    .glVertex4s = epoxy_glVertex4s_dispatch_table_rewrite_ptr,
    .glVertex4sv = epoxy_glVertex4sv_dispatch_table_rewrite_ptr,
    .glVertex4xOES = epoxy_glVertex4xOES_dispatch_table_rewrite_ptr,
    .glVertex4xvOES = epoxy_glVertex4xvOES_dispatch_table_rewrite_ptr,
    .glVertexArrayAttribBinding = epoxy_glVertexArrayAttribBinding_dispatch_table_rewrite_ptr,
    .glVertexArrayAttribFormat = epoxy_glVertexArrayAttribFormat_dispatch_table_rewrite_ptr,
    .glVertexArrayAttribIFormat = epoxy_glVertexArrayAttribIFormat_dispatch_table_rewrite_ptr,
    .glVertexArrayAttribLFormat = epoxy_glVertexArrayAttribLFormat_dispatch_table_rewrite_ptr,
    .glVertexArrayBindVertexBufferEXT = epoxy_glVertexArrayBindVertexBufferEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayBindingDivisor = epoxy_glVertexArrayBindingDivisor_dispatch_table_rewrite_ptr,
    .glVertexArrayColorOffsetEXT = epoxy_glVertexArrayColorOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayEdgeFlagOffsetEXT = epoxy_glVertexArrayEdgeFlagOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayElementBuffer = epoxy_glVertexArrayElementBuffer_dispatch_table_rewrite_ptr,
    .glVertexArrayFogCoordOffsetEXT = epoxy_glVertexArrayFogCoordOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayIndexOffsetEXT = epoxy_glVertexArrayIndexOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayMultiTexCoordOffsetEXT = epoxy_glVertexArrayMultiTexCoordOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayNormalOffsetEXT = epoxy_glVertexArrayNormalOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayParameteriAPPLE = epoxy_glVertexArrayParameteriAPPLE_dispatch_table_rewrite_ptr,
    .glVertexArrayRangeAPPLE = epoxy_glVertexArrayRangeAPPLE_dispatch_table_rewrite_ptr,
    .glVertexArrayRangeNV = epoxy_glVertexArrayRangeNV_dispatch_table_rewrite_ptr,
    .glVertexArraySecondaryColorOffsetEXT = epoxy_glVertexArraySecondaryColorOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayTexCoordOffsetEXT = epoxy_glVertexArrayTexCoordOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexAttribBindingEXT = epoxy_glVertexArrayVertexAttribBindingEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexAttribDivisorEXT = epoxy_glVertexArrayVertexAttribDivisorEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexAttribFormatEXT = epoxy_glVertexArrayVertexAttribFormatEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexAttribIFormatEXT = epoxy_glVertexArrayVertexAttribIFormatEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexAttribIOffsetEXT = epoxy_glVertexArrayVertexAttribIOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexAttribLFormatEXT = epoxy_glVertexArrayVertexAttribLFormatEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexAttribLOffsetEXT = epoxy_glVertexArrayVertexAttribLOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexAttribOffsetEXT = epoxy_glVertexArrayVertexAttribOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexBindingDivisorEXT = epoxy_glVertexArrayVertexBindingDivisorEXT_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexBuffer = epoxy_glVertexArrayVertexBuffer_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexBuffers = epoxy_glVertexArrayVertexBuffers_dispatch_table_rewrite_ptr,
    .glVertexArrayVertexOffsetEXT = epoxy_glVertexArrayVertexOffsetEXT_dispatch_table_rewrite_ptr,
    .glVertexAttrib1d = epoxy_glVertexAttrib1d_dispatch_table_rewrite_ptr,
    .glVertexAttrib1dARB = epoxy_glVertexAttrib1dARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib1dNV = epoxy_glVertexAttrib1dNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib1dv = epoxy_glVertexAttrib1dv_dispatch_table_rewrite_ptr,
    .glVertexAttrib1dvARB = epoxy_glVertexAttrib1dvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib1dvNV = epoxy_glVertexAttrib1dvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib1f = epoxy_glVertexAttrib1f_dispatch_table_rewrite_ptr,
    .glVertexAttrib1fARB = epoxy_glVertexAttrib1fARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib1fNV = epoxy_glVertexAttrib1fNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib1fv = epoxy_glVertexAttrib1fv_dispatch_table_rewrite_ptr,
    .glVertexAttrib1fvARB = epoxy_glVertexAttrib1fvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib1fvNV = epoxy_glVertexAttrib1fvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib1hNV = epoxy_glVertexAttrib1hNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib1hvNV = epoxy_glVertexAttrib1hvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib1s = epoxy_glVertexAttrib1s_dispatch_table_rewrite_ptr,
    .glVertexAttrib1sARB = epoxy_glVertexAttrib1sARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib1sNV = epoxy_glVertexAttrib1sNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib1sv = epoxy_glVertexAttrib1sv_dispatch_table_rewrite_ptr,
    .glVertexAttrib1svARB = epoxy_glVertexAttrib1svARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib1svNV = epoxy_glVertexAttrib1svNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib2d = epoxy_glVertexAttrib2d_dispatch_table_rewrite_ptr,
    .glVertexAttrib2dARB = epoxy_glVertexAttrib2dARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib2dNV = epoxy_glVertexAttrib2dNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib2dv = epoxy_glVertexAttrib2dv_dispatch_table_rewrite_ptr,
    .glVertexAttrib2dvARB = epoxy_glVertexAttrib2dvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib2dvNV = epoxy_glVertexAttrib2dvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib2f = epoxy_glVertexAttrib2f_dispatch_table_rewrite_ptr,
    .glVertexAttrib2fARB = epoxy_glVertexAttrib2fARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib2fNV = epoxy_glVertexAttrib2fNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib2fv = epoxy_glVertexAttrib2fv_dispatch_table_rewrite_ptr,
    .glVertexAttrib2fvARB = epoxy_glVertexAttrib2fvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib2fvNV = epoxy_glVertexAttrib2fvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib2hNV = epoxy_glVertexAttrib2hNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib2hvNV = epoxy_glVertexAttrib2hvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib2s = epoxy_glVertexAttrib2s_dispatch_table_rewrite_ptr,
    .glVertexAttrib2sARB = epoxy_glVertexAttrib2sARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib2sNV = epoxy_glVertexAttrib2sNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib2sv = epoxy_glVertexAttrib2sv_dispatch_table_rewrite_ptr,
    .glVertexAttrib2svARB = epoxy_glVertexAttrib2svARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib2svNV = epoxy_glVertexAttrib2svNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib3d = epoxy_glVertexAttrib3d_dispatch_table_rewrite_ptr,
    .glVertexAttrib3dARB = epoxy_glVertexAttrib3dARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib3dNV = epoxy_glVertexAttrib3dNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib3dv = epoxy_glVertexAttrib3dv_dispatch_table_rewrite_ptr,
    .glVertexAttrib3dvARB = epoxy_glVertexAttrib3dvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib3dvNV = epoxy_glVertexAttrib3dvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib3f = epoxy_glVertexAttrib3f_dispatch_table_rewrite_ptr,
    .glVertexAttrib3fARB = epoxy_glVertexAttrib3fARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib3fNV = epoxy_glVertexAttrib3fNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib3fv = epoxy_glVertexAttrib3fv_dispatch_table_rewrite_ptr,
    .glVertexAttrib3fvARB = epoxy_glVertexAttrib3fvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib3fvNV = epoxy_glVertexAttrib3fvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib3hNV = epoxy_glVertexAttrib3hNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib3hvNV = epoxy_glVertexAttrib3hvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib3s = epoxy_glVertexAttrib3s_dispatch_table_rewrite_ptr,
    .glVertexAttrib3sARB = epoxy_glVertexAttrib3sARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib3sNV = epoxy_glVertexAttrib3sNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib3sv = epoxy_glVertexAttrib3sv_dispatch_table_rewrite_ptr,
    .glVertexAttrib3svARB = epoxy_glVertexAttrib3svARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib3svNV = epoxy_glVertexAttrib3svNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4Nbv = epoxy_glVertexAttrib4Nbv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4NbvARB = epoxy_glVertexAttrib4NbvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4Niv = epoxy_glVertexAttrib4Niv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4NivARB = epoxy_glVertexAttrib4NivARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4Nsv = epoxy_glVertexAttrib4Nsv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4NsvARB = epoxy_glVertexAttrib4NsvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4Nub = epoxy_glVertexAttrib4Nub_dispatch_table_rewrite_ptr,
    .glVertexAttrib4NubARB = epoxy_glVertexAttrib4NubARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4Nubv = epoxy_glVertexAttrib4Nubv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4NubvARB = epoxy_glVertexAttrib4NubvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4Nuiv = epoxy_glVertexAttrib4Nuiv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4NuivARB = epoxy_glVertexAttrib4NuivARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4Nusv = epoxy_glVertexAttrib4Nusv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4NusvARB = epoxy_glVertexAttrib4NusvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4bv = epoxy_glVertexAttrib4bv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4bvARB = epoxy_glVertexAttrib4bvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4d = epoxy_glVertexAttrib4d_dispatch_table_rewrite_ptr,
    .glVertexAttrib4dARB = epoxy_glVertexAttrib4dARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4dNV = epoxy_glVertexAttrib4dNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4dv = epoxy_glVertexAttrib4dv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4dvARB = epoxy_glVertexAttrib4dvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4dvNV = epoxy_glVertexAttrib4dvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4f = epoxy_glVertexAttrib4f_dispatch_table_rewrite_ptr,
    .glVertexAttrib4fARB = epoxy_glVertexAttrib4fARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4fNV = epoxy_glVertexAttrib4fNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4fv = epoxy_glVertexAttrib4fv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4fvARB = epoxy_glVertexAttrib4fvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4fvNV = epoxy_glVertexAttrib4fvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4hNV = epoxy_glVertexAttrib4hNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4hvNV = epoxy_glVertexAttrib4hvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4iv = epoxy_glVertexAttrib4iv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4ivARB = epoxy_glVertexAttrib4ivARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4s = epoxy_glVertexAttrib4s_dispatch_table_rewrite_ptr,
    .glVertexAttrib4sARB = epoxy_glVertexAttrib4sARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4sNV = epoxy_glVertexAttrib4sNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4sv = epoxy_glVertexAttrib4sv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4svARB = epoxy_glVertexAttrib4svARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4svNV = epoxy_glVertexAttrib4svNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4ubNV = epoxy_glVertexAttrib4ubNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4ubv = epoxy_glVertexAttrib4ubv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4ubvARB = epoxy_glVertexAttrib4ubvARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4ubvNV = epoxy_glVertexAttrib4ubvNV_dispatch_table_rewrite_ptr,
    .glVertexAttrib4uiv = epoxy_glVertexAttrib4uiv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4uivARB = epoxy_glVertexAttrib4uivARB_dispatch_table_rewrite_ptr,
    .glVertexAttrib4usv = epoxy_glVertexAttrib4usv_dispatch_table_rewrite_ptr,
    .glVertexAttrib4usvARB = epoxy_glVertexAttrib4usvARB_dispatch_table_rewrite_ptr,
    .glVertexAttribArrayObjectATI = epoxy_glVertexAttribArrayObjectATI_dispatch_table_rewrite_ptr,
    .glVertexAttribBinding = epoxy_glVertexAttribBinding_dispatch_table_rewrite_ptr,
    .glVertexAttribDivisor = epoxy_glVertexAttribDivisor_dispatch_table_rewrite_ptr,
    .glVertexAttribDivisorANGLE = epoxy_glVertexAttribDivisorANGLE_dispatch_table_rewrite_ptr,
    .glVertexAttribDivisorARB = epoxy_glVertexAttribDivisorARB_dispatch_table_rewrite_ptr,
    .glVertexAttribDivisorEXT = epoxy_glVertexAttribDivisorEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribDivisorNV = epoxy_glVertexAttribDivisorNV_dispatch_table_rewrite_ptr,
    .glVertexAttribFormat = epoxy_glVertexAttribFormat_dispatch_table_rewrite_ptr,
    .glVertexAttribFormatNV = epoxy_glVertexAttribFormatNV_dispatch_table_rewrite_ptr,
    .glVertexAttribI1i = epoxy_glVertexAttribI1i_dispatch_table_rewrite_ptr,
    .glVertexAttribI1iEXT = epoxy_glVertexAttribI1iEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI1iv = epoxy_glVertexAttribI1iv_dispatch_table_rewrite_ptr,
    .glVertexAttribI1ivEXT = epoxy_glVertexAttribI1ivEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI1ui = epoxy_glVertexAttribI1ui_dispatch_table_rewrite_ptr,
    .glVertexAttribI1uiEXT = epoxy_glVertexAttribI1uiEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI1uiv = epoxy_glVertexAttribI1uiv_dispatch_table_rewrite_ptr,
    .glVertexAttribI1uivEXT = epoxy_glVertexAttribI1uivEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI2i = epoxy_glVertexAttribI2i_dispatch_table_rewrite_ptr,
    .glVertexAttribI2iEXT = epoxy_glVertexAttribI2iEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI2iv = epoxy_glVertexAttribI2iv_dispatch_table_rewrite_ptr,
    .glVertexAttribI2ivEXT = epoxy_glVertexAttribI2ivEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI2ui = epoxy_glVertexAttribI2ui_dispatch_table_rewrite_ptr,
    .glVertexAttribI2uiEXT = epoxy_glVertexAttribI2uiEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI2uiv = epoxy_glVertexAttribI2uiv_dispatch_table_rewrite_ptr,
    .glVertexAttribI2uivEXT = epoxy_glVertexAttribI2uivEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI3i = epoxy_glVertexAttribI3i_dispatch_table_rewrite_ptr,
    .glVertexAttribI3iEXT = epoxy_glVertexAttribI3iEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI3iv = epoxy_glVertexAttribI3iv_dispatch_table_rewrite_ptr,
    .glVertexAttribI3ivEXT = epoxy_glVertexAttribI3ivEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI3ui = epoxy_glVertexAttribI3ui_dispatch_table_rewrite_ptr,
    .glVertexAttribI3uiEXT = epoxy_glVertexAttribI3uiEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI3uiv = epoxy_glVertexAttribI3uiv_dispatch_table_rewrite_ptr,
    .glVertexAttribI3uivEXT = epoxy_glVertexAttribI3uivEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI4bv = epoxy_glVertexAttribI4bv_dispatch_table_rewrite_ptr,
    .glVertexAttribI4bvEXT = epoxy_glVertexAttribI4bvEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI4i = epoxy_glVertexAttribI4i_dispatch_table_rewrite_ptr,
    .glVertexAttribI4iEXT = epoxy_glVertexAttribI4iEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI4iv = epoxy_glVertexAttribI4iv_dispatch_table_rewrite_ptr,
    .glVertexAttribI4ivEXT = epoxy_glVertexAttribI4ivEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI4sv = epoxy_glVertexAttribI4sv_dispatch_table_rewrite_ptr,
    .glVertexAttribI4svEXT = epoxy_glVertexAttribI4svEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI4ubv = epoxy_glVertexAttribI4ubv_dispatch_table_rewrite_ptr,
    .glVertexAttribI4ubvEXT = epoxy_glVertexAttribI4ubvEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI4ui = epoxy_glVertexAttribI4ui_dispatch_table_rewrite_ptr,
    .glVertexAttribI4uiEXT = epoxy_glVertexAttribI4uiEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI4uiv = epoxy_glVertexAttribI4uiv_dispatch_table_rewrite_ptr,
    .glVertexAttribI4uivEXT = epoxy_glVertexAttribI4uivEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribI4usv = epoxy_glVertexAttribI4usv_dispatch_table_rewrite_ptr,
    .glVertexAttribI4usvEXT = epoxy_glVertexAttribI4usvEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribIFormat = epoxy_glVertexAttribIFormat_dispatch_table_rewrite_ptr,
    .glVertexAttribIFormatNV = epoxy_glVertexAttribIFormatNV_dispatch_table_rewrite_ptr,
    .glVertexAttribIPointer = epoxy_glVertexAttribIPointer_dispatch_table_rewrite_ptr,
    .glVertexAttribIPointerEXT = epoxy_glVertexAttribIPointerEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribL1d = epoxy_glVertexAttribL1d_dispatch_table_rewrite_ptr,
    .glVertexAttribL1dEXT = epoxy_glVertexAttribL1dEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribL1dv = epoxy_glVertexAttribL1dv_dispatch_table_rewrite_ptr,
    .glVertexAttribL1dvEXT = epoxy_glVertexAttribL1dvEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribL1i64NV = epoxy_glVertexAttribL1i64NV_dispatch_table_rewrite_ptr,
    .glVertexAttribL1i64vNV = epoxy_glVertexAttribL1i64vNV_dispatch_table_rewrite_ptr,
    .glVertexAttribL1ui64ARB = epoxy_glVertexAttribL1ui64ARB_dispatch_table_rewrite_ptr,
    .glVertexAttribL1ui64NV = epoxy_glVertexAttribL1ui64NV_dispatch_table_rewrite_ptr,
    .glVertexAttribL1ui64vARB = epoxy_glVertexAttribL1ui64vARB_dispatch_table_rewrite_ptr,
    .glVertexAttribL1ui64vNV = epoxy_glVertexAttribL1ui64vNV_dispatch_table_rewrite_ptr,
    .glVertexAttribL2d = epoxy_glVertexAttribL2d_dispatch_table_rewrite_ptr,
    .glVertexAttribL2dEXT = epoxy_glVertexAttribL2dEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribL2dv = epoxy_glVertexAttribL2dv_dispatch_table_rewrite_ptr,
    .glVertexAttribL2dvEXT = epoxy_glVertexAttribL2dvEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribL2i64NV = epoxy_glVertexAttribL2i64NV_dispatch_table_rewrite_ptr,
    .glVertexAttribL2i64vNV = epoxy_glVertexAttribL2i64vNV_dispatch_table_rewrite_ptr,
    .glVertexAttribL2ui64NV = epoxy_glVertexAttribL2ui64NV_dispatch_table_rewrite_ptr,
    .glVertexAttribL2ui64vNV = epoxy_glVertexAttribL2ui64vNV_dispatch_table_rewrite_ptr,
    .glVertexAttribL3d = epoxy_glVertexAttribL3d_dispatch_table_rewrite_ptr,
    .glVertexAttribL3dEXT = epoxy_glVertexAttribL3dEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribL3dv = epoxy_glVertexAttribL3dv_dispatch_table_rewrite_ptr,
    .glVertexAttribL3dvEXT = epoxy_glVertexAttribL3dvEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribL3i64NV = epoxy_glVertexAttribL3i64NV_dispatch_table_rewrite_ptr,
    .glVertexAttribL3i64vNV = epoxy_glVertexAttribL3i64vNV_dispatch_table_rewrite_ptr,
    .glVertexAttribL3ui64NV = epoxy_glVertexAttribL3ui64NV_dispatch_table_rewrite_ptr,
    .glVertexAttribL3ui64vNV = epoxy_glVertexAttribL3ui64vNV_dispatch_table_rewrite_ptr,
    .glVertexAttribL4d = epoxy_glVertexAttribL4d_dispatch_table_rewrite_ptr,
    .glVertexAttribL4dEXT = epoxy_glVertexAttribL4dEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribL4dv = epoxy_glVertexAttribL4dv_dispatch_table_rewrite_ptr,
    .glVertexAttribL4dvEXT = epoxy_glVertexAttribL4dvEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribL4i64NV = epoxy_glVertexAttribL4i64NV_dispatch_table_rewrite_ptr,
    .glVertexAttribL4i64vNV = epoxy_glVertexAttribL4i64vNV_dispatch_table_rewrite_ptr,
    .glVertexAttribL4ui64NV = epoxy_glVertexAttribL4ui64NV_dispatch_table_rewrite_ptr,
    .glVertexAttribL4ui64vNV = epoxy_glVertexAttribL4ui64vNV_dispatch_table_rewrite_ptr,
    .glVertexAttribLFormat = epoxy_glVertexAttribLFormat_dispatch_table_rewrite_ptr,
    .glVertexAttribLFormatNV = epoxy_glVertexAttribLFormatNV_dispatch_table_rewrite_ptr,
    .glVertexAttribLPointer = epoxy_glVertexAttribLPointer_dispatch_table_rewrite_ptr,
    .glVertexAttribLPointerEXT = epoxy_glVertexAttribLPointerEXT_dispatch_table_rewrite_ptr,
    .glVertexAttribP1ui = epoxy_glVertexAttribP1ui_dispatch_table_rewrite_ptr,
    .glVertexAttribP1uiv = epoxy_glVertexAttribP1uiv_dispatch_table_rewrite_ptr,
    .glVertexAttribP2ui = epoxy_glVertexAttribP2ui_dispatch_table_rewrite_ptr,
    .glVertexAttribP2uiv = epoxy_glVertexAttribP2uiv_dispatch_table_rewrite_ptr,
    .glVertexAttribP3ui = epoxy_glVertexAttribP3ui_dispatch_table_rewrite_ptr,
    .glVertexAttribP3uiv = epoxy_glVertexAttribP3uiv_dispatch_table_rewrite_ptr,
    .glVertexAttribP4ui = epoxy_glVertexAttribP4ui_dispatch_table_rewrite_ptr,
    .glVertexAttribP4uiv = epoxy_glVertexAttribP4uiv_dispatch_table_rewrite_ptr,
    .glVertexAttribParameteriAMD = epoxy_glVertexAttribParameteriAMD_dispatch_table_rewrite_ptr,
    .glVertexAttribPointer = epoxy_glVertexAttribPointer_dispatch_table_rewrite_ptr,
    .glVertexAttribPointerARB = epoxy_glVertexAttribPointerARB_dispatch_table_rewrite_ptr,
    .glVertexAttribPointerNV = epoxy_glVertexAttribPointerNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs1dvNV = epoxy_glVertexAttribs1dvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs1fvNV = epoxy_glVertexAttribs1fvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs1hvNV = epoxy_glVertexAttribs1hvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs1svNV = epoxy_glVertexAttribs1svNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs2dvNV = epoxy_glVertexAttribs2dvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs2fvNV = epoxy_glVertexAttribs2fvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs2hvNV = epoxy_glVertexAttribs2hvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs2svNV = epoxy_glVertexAttribs2svNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs3dvNV = epoxy_glVertexAttribs3dvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs3fvNV = epoxy_glVertexAttribs3fvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs3hvNV = epoxy_glVertexAttribs3hvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs3svNV = epoxy_glVertexAttribs3svNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs4dvNV = epoxy_glVertexAttribs4dvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs4fvNV = epoxy_glVertexAttribs4fvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs4hvNV = epoxy_glVertexAttribs4hvNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs4svNV = epoxy_glVertexAttribs4svNV_dispatch_table_rewrite_ptr,
    .glVertexAttribs4ubvNV = epoxy_glVertexAttribs4ubvNV_dispatch_table_rewrite_ptr,
    .glVertexBindingDivisor = epoxy_glVertexBindingDivisor_dispatch_table_rewrite_ptr,
    .glVertexBlendARB = epoxy_glVertexBlendARB_dispatch_table_rewrite_ptr,
    .glVertexBlendEnvfATI = epoxy_glVertexBlendEnvfATI_dispatch_table_rewrite_ptr,
    .glVertexBlendEnviATI = epoxy_glVertexBlendEnviATI_dispatch_table_rewrite_ptr,
    .glVertexFormatNV = epoxy_glVertexFormatNV_dispatch_table_rewrite_ptr,
    .glVertexP2ui = epoxy_glVertexP2ui_dispatch_table_rewrite_ptr,
    .glVertexP2uiv = epoxy_glVertexP2uiv_dispatch_table_rewrite_ptr,
    .glVertexP3ui = epoxy_glVertexP3ui_dispatch_table_rewrite_ptr,
    .glVertexP3uiv = epoxy_glVertexP3uiv_dispatch_table_rewrite_ptr,
    .glVertexP4ui = epoxy_glVertexP4ui_dispatch_table_rewrite_ptr,
    .glVertexP4uiv = epoxy_glVertexP4uiv_dispatch_table_rewrite_ptr,
    .glVertexPointer = epoxy_glVertexPointer_dispatch_table_rewrite_ptr,
    .glVertexPointerEXT = epoxy_glVertexPointerEXT_dispatch_table_rewrite_ptr,
    .glVertexPointerListIBM = epoxy_glVertexPointerListIBM_dispatch_table_rewrite_ptr,
    .glVertexPointervINTEL = epoxy_glVertexPointervINTEL_dispatch_table_rewrite_ptr,
    .glVertexStream1dATI = epoxy_glVertexStream1dATI_dispatch_table_rewrite_ptr,
    .glVertexStream1dvATI = epoxy_glVertexStream1dvATI_dispatch_table_rewrite_ptr,
    .glVertexStream1fATI = epoxy_glVertexStream1fATI_dispatch_table_rewrite_ptr,
    .glVertexStream1fvATI = epoxy_glVertexStream1fvATI_dispatch_table_rewrite_ptr,
    .glVertexStream1iATI = epoxy_glVertexStream1iATI_dispatch_table_rewrite_ptr,
    .glVertexStream1ivATI = epoxy_glVertexStream1ivATI_dispatch_table_rewrite_ptr,
    .glVertexStream1sATI = epoxy_glVertexStream1sATI_dispatch_table_rewrite_ptr,
    .glVertexStream1svATI = epoxy_glVertexStream1svATI_dispatch_table_rewrite_ptr,
    .glVertexStream2dATI = epoxy_glVertexStream2dATI_dispatch_table_rewrite_ptr,
    .glVertexStream2dvATI = epoxy_glVertexStream2dvATI_dispatch_table_rewrite_ptr,
    .glVertexStream2fATI = epoxy_glVertexStream2fATI_dispatch_table_rewrite_ptr,
    .glVertexStream2fvATI = epoxy_glVertexStream2fvATI_dispatch_table_rewrite_ptr,
    .glVertexStream2iATI = epoxy_glVertexStream2iATI_dispatch_table_rewrite_ptr,
    .glVertexStream2ivATI = epoxy_glVertexStream2ivATI_dispatch_table_rewrite_ptr,
    .glVertexStream2sATI = epoxy_glVertexStream2sATI_dispatch_table_rewrite_ptr,
    .glVertexStream2svATI = epoxy_glVertexStream2svATI_dispatch_table_rewrite_ptr,
    .glVertexStream3dATI = epoxy_glVertexStream3dATI_dispatch_table_rewrite_ptr,
    .glVertexStream3dvATI = epoxy_glVertexStream3dvATI_dispatch_table_rewrite_ptr,
    .glVertexStream3fATI = epoxy_glVertexStream3fATI_dispatch_table_rewrite_ptr,
    .glVertexStream3fvATI = epoxy_glVertexStream3fvATI_dispatch_table_rewrite_ptr,
    .glVertexStream3iATI = epoxy_glVertexStream3iATI_dispatch_table_rewrite_ptr,
    .glVertexStream3ivATI = epoxy_glVertexStream3ivATI_dispatch_table_rewrite_ptr,
    .glVertexStream3sATI = epoxy_glVertexStream3sATI_dispatch_table_rewrite_ptr,
    .glVertexStream3svATI = epoxy_glVertexStream3svATI_dispatch_table_rewrite_ptr,
    .glVertexStream4dATI = epoxy_glVertexStream4dATI_dispatch_table_rewrite_ptr,
    .glVertexStream4dvATI = epoxy_glVertexStream4dvATI_dispatch_table_rewrite_ptr,
    .glVertexStream4fATI = epoxy_glVertexStream4fATI_dispatch_table_rewrite_ptr,
    .glVertexStream4fvATI = epoxy_glVertexStream4fvATI_dispatch_table_rewrite_ptr,
    .glVertexStream4iATI = epoxy_glVertexStream4iATI_dispatch_table_rewrite_ptr,
    .glVertexStream4ivATI = epoxy_glVertexStream4ivATI_dispatch_table_rewrite_ptr,
    .glVertexStream4sATI = epoxy_glVertexStream4sATI_dispatch_table_rewrite_ptr,
    .glVertexStream4svATI = epoxy_glVertexStream4svATI_dispatch_table_rewrite_ptr,
    .glVertexWeightPointerEXT = epoxy_glVertexWeightPointerEXT_dispatch_table_rewrite_ptr,
    .glVertexWeightfEXT = epoxy_glVertexWeightfEXT_dispatch_table_rewrite_ptr,
    .glVertexWeightfvEXT = epoxy_glVertexWeightfvEXT_dispatch_table_rewrite_ptr,
    .glVertexWeighthNV = epoxy_glVertexWeighthNV_dispatch_table_rewrite_ptr,
    .glVertexWeighthvNV = epoxy_glVertexWeighthvNV_dispatch_table_rewrite_ptr,
    .glVideoCaptureNV = epoxy_glVideoCaptureNV_dispatch_table_rewrite_ptr,
    .glVideoCaptureStreamParameterdvNV = epoxy_glVideoCaptureStreamParameterdvNV_dispatch_table_rewrite_ptr,
    .glVideoCaptureStreamParameterfvNV = epoxy_glVideoCaptureStreamParameterfvNV_dispatch_table_rewrite_ptr,
    .glVideoCaptureStreamParameterivNV = epoxy_glVideoCaptureStreamParameterivNV_dispatch_table_rewrite_ptr,
    .glViewport = epoxy_glViewport_dispatch_table_rewrite_ptr,
    .glViewportArrayv = epoxy_glViewportArrayv_dispatch_table_rewrite_ptr,
    .glViewportArrayvNV = epoxy_glViewportArrayvNV_dispatch_table_rewrite_ptr,
    .glViewportIndexedf = epoxy_glViewportIndexedf_dispatch_table_rewrite_ptr,
    .glViewportIndexedfNV = epoxy_glViewportIndexedfNV_dispatch_table_rewrite_ptr,
    .glViewportIndexedfv = epoxy_glViewportIndexedfv_dispatch_table_rewrite_ptr,
    .glViewportIndexedfvNV = epoxy_glViewportIndexedfvNV_dispatch_table_rewrite_ptr,
    .glWaitSync = epoxy_glWaitSync_dispatch_table_rewrite_ptr,
    .glWaitSyncAPPLE = epoxy_glWaitSyncAPPLE_dispatch_table_rewrite_ptr,
    .glWeightPathsNV = epoxy_glWeightPathsNV_dispatch_table_rewrite_ptr,
    .glWeightPointerARB = epoxy_glWeightPointerARB_dispatch_table_rewrite_ptr,
    .glWeightPointerOES = epoxy_glWeightPointerOES_dispatch_table_rewrite_ptr,
    .glWeightbvARB = epoxy_glWeightbvARB_dispatch_table_rewrite_ptr,
    .glWeightdvARB = epoxy_glWeightdvARB_dispatch_table_rewrite_ptr,
    .glWeightfvARB = epoxy_glWeightfvARB_dispatch_table_rewrite_ptr,
    .glWeightivARB = epoxy_glWeightivARB_dispatch_table_rewrite_ptr,
    .glWeightsvARB = epoxy_glWeightsvARB_dispatch_table_rewrite_ptr,
    .glWeightubvARB = epoxy_glWeightubvARB_dispatch_table_rewrite_ptr,
    .glWeightuivARB = epoxy_glWeightuivARB_dispatch_table_rewrite_ptr,
    .glWeightusvARB = epoxy_glWeightusvARB_dispatch_table_rewrite_ptr,
    .glWindowPos2d = epoxy_glWindowPos2d_dispatch_table_rewrite_ptr,
    .glWindowPos2dARB = epoxy_glWindowPos2dARB_dispatch_table_rewrite_ptr,
    .glWindowPos2dMESA = epoxy_glWindowPos2dMESA_dispatch_table_rewrite_ptr,
    .glWindowPos2dv = epoxy_glWindowPos2dv_dispatch_table_rewrite_ptr,
    .glWindowPos2dvARB = epoxy_glWindowPos2dvARB_dispatch_table_rewrite_ptr,
    .glWindowPos2dvMESA = epoxy_glWindowPos2dvMESA_dispatch_table_rewrite_ptr,
    .glWindowPos2f = epoxy_glWindowPos2f_dispatch_table_rewrite_ptr,
    .glWindowPos2fARB = epoxy_glWindowPos2fARB_dispatch_table_rewrite_ptr,
    .glWindowPos2fMESA = epoxy_glWindowPos2fMESA_dispatch_table_rewrite_ptr,
    .glWindowPos2fv = epoxy_glWindowPos2fv_dispatch_table_rewrite_ptr,
    .glWindowPos2fvARB = epoxy_glWindowPos2fvARB_dispatch_table_rewrite_ptr,
    .glWindowPos2fvMESA = epoxy_glWindowPos2fvMESA_dispatch_table_rewrite_ptr,
    .glWindowPos2i = epoxy_glWindowPos2i_dispatch_table_rewrite_ptr,
    .glWindowPos2iARB = epoxy_glWindowPos2iARB_dispatch_table_rewrite_ptr,
    .glWindowPos2iMESA = epoxy_glWindowPos2iMESA_dispatch_table_rewrite_ptr,
    .glWindowPos2iv = epoxy_glWindowPos2iv_dispatch_table_rewrite_ptr,
    .glWindowPos2ivARB = epoxy_glWindowPos2ivARB_dispatch_table_rewrite_ptr,
    .glWindowPos2ivMESA = epoxy_glWindowPos2ivMESA_dispatch_table_rewrite_ptr,
    .glWindowPos2s = epoxy_glWindowPos2s_dispatch_table_rewrite_ptr,
    .glWindowPos2sARB = epoxy_glWindowPos2sARB_dispatch_table_rewrite_ptr,
    .glWindowPos2sMESA = epoxy_glWindowPos2sMESA_dispatch_table_rewrite_ptr,
    .glWindowPos2sv = epoxy_glWindowPos2sv_dispatch_table_rewrite_ptr,
    .glWindowPos2svARB = epoxy_glWindowPos2svARB_dispatch_table_rewrite_ptr,
    .glWindowPos2svMESA = epoxy_glWindowPos2svMESA_dispatch_table_rewrite_ptr,
    .glWindowPos3d = epoxy_glWindowPos3d_dispatch_table_rewrite_ptr,
    .glWindowPos3dARB = epoxy_glWindowPos3dARB_dispatch_table_rewrite_ptr,
    .glWindowPos3dMESA = epoxy_glWindowPos3dMESA_dispatch_table_rewrite_ptr,
    .glWindowPos3dv = epoxy_glWindowPos3dv_dispatch_table_rewrite_ptr,
    .glWindowPos3dvARB = epoxy_glWindowPos3dvARB_dispatch_table_rewrite_ptr,
    .glWindowPos3dvMESA = epoxy_glWindowPos3dvMESA_dispatch_table_rewrite_ptr,
    .glWindowPos3f = epoxy_glWindowPos3f_dispatch_table_rewrite_ptr,
    .glWindowPos3fARB = epoxy_glWindowPos3fARB_dispatch_table_rewrite_ptr,
    .glWindowPos3fMESA = epoxy_glWindowPos3fMESA_dispatch_table_rewrite_ptr,
    .glWindowPos3fv = epoxy_glWindowPos3fv_dispatch_table_rewrite_ptr,
    .glWindowPos3fvARB = epoxy_glWindowPos3fvARB_dispatch_table_rewrite_ptr,
    .glWindowPos3fvMESA = epoxy_glWindowPos3fvMESA_dispatch_table_rewrite_ptr,
    .glWindowPos3i = epoxy_glWindowPos3i_dispatch_table_rewrite_ptr,
    .glWindowPos3iARB = epoxy_glWindowPos3iARB_dispatch_table_rewrite_ptr,
    .glWindowPos3iMESA = epoxy_glWindowPos3iMESA_dispatch_table_rewrite_ptr,
    .glWindowPos3iv = epoxy_glWindowPos3iv_dispatch_table_rewrite_ptr,
    .glWindowPos3ivARB = epoxy_glWindowPos3ivARB_dispatch_table_rewrite_ptr,
    .glWindowPos3ivMESA = epoxy_glWindowPos3ivMESA_dispatch_table_rewrite_ptr,
    .glWindowPos3s = epoxy_glWindowPos3s_dispatch_table_rewrite_ptr,
    .glWindowPos3sARB = epoxy_glWindowPos3sARB_dispatch_table_rewrite_ptr,
    .glWindowPos3sMESA = epoxy_glWindowPos3sMESA_dispatch_table_rewrite_ptr,
    .glWindowPos3sv = epoxy_glWindowPos3sv_dispatch_table_rewrite_ptr,
    .glWindowPos3svARB = epoxy_glWindowPos3svARB_dispatch_table_rewrite_ptr,
    .glWindowPos3svMESA = epoxy_glWindowPos3svMESA_dispatch_table_rewrite_ptr,
    .glWindowPos4dMESA = epoxy_glWindowPos4dMESA_dispatch_table_rewrite_ptr,
    .glWindowPos4dvMESA = epoxy_glWindowPos4dvMESA_dispatch_table_rewrite_ptr,
    .glWindowPos4fMESA = epoxy_glWindowPos4fMESA_dispatch_table_rewrite_ptr,
    .glWindowPos4fvMESA = epoxy_glWindowPos4fvMESA_dispatch_table_rewrite_ptr,
    .glWindowPos4iMESA = epoxy_glWindowPos4iMESA_dispatch_table_rewrite_ptr,
    .glWindowPos4ivMESA = epoxy_glWindowPos4ivMESA_dispatch_table_rewrite_ptr,
    .glWindowPos4sMESA = epoxy_glWindowPos4sMESA_dispatch_table_rewrite_ptr,
    .glWindowPos4svMESA = epoxy_glWindowPos4svMESA_dispatch_table_rewrite_ptr,
    .glWriteMaskEXT = epoxy_glWriteMaskEXT_dispatch_table_rewrite_ptr,
};

uint32_t gl_tls_index;
uint32_t gl_tls_size = sizeof(struct dispatch_table);

static inline struct dispatch_table *
get_dispatch_table(void)
{
	return TlsGetValue(gl_tls_index);
}

void
gl_init_dispatch_table(void)
{
    struct dispatch_table *dispatch_table = get_dispatch_table();
    memcpy(dispatch_table, &resolver_table, sizeof(resolver_table));
}

void
gl_switch_to_dispatch_table(void)
{
    epoxy_glAccum = epoxy_glAccum_dispatch_table_thunk;
    epoxy_glAccumxOES = epoxy_glAccumxOES_dispatch_table_thunk;
    epoxy_glActiveProgramEXT = epoxy_glActiveProgramEXT_dispatch_table_thunk;
    epoxy_glActiveShaderProgram = epoxy_glActiveShaderProgram_dispatch_table_thunk;
    epoxy_glActiveShaderProgramEXT = epoxy_glActiveShaderProgramEXT_dispatch_table_thunk;
    epoxy_glActiveStencilFaceEXT = epoxy_glActiveStencilFaceEXT_dispatch_table_thunk;
    epoxy_glActiveTexture = epoxy_glActiveTexture_dispatch_table_thunk;
    epoxy_glActiveTextureARB = epoxy_glActiveTextureARB_dispatch_table_thunk;
    epoxy_glActiveVaryingNV = epoxy_glActiveVaryingNV_dispatch_table_thunk;
    epoxy_glAlphaFragmentOp1ATI = epoxy_glAlphaFragmentOp1ATI_dispatch_table_thunk;
    epoxy_glAlphaFragmentOp2ATI = epoxy_glAlphaFragmentOp2ATI_dispatch_table_thunk;
    epoxy_glAlphaFragmentOp3ATI = epoxy_glAlphaFragmentOp3ATI_dispatch_table_thunk;
    epoxy_glAlphaFunc = epoxy_glAlphaFunc_dispatch_table_thunk;
    epoxy_glAlphaFuncQCOM = epoxy_glAlphaFuncQCOM_dispatch_table_thunk;
    epoxy_glAlphaFuncx = epoxy_glAlphaFuncx_dispatch_table_thunk;
    epoxy_glAlphaFuncxOES = epoxy_glAlphaFuncxOES_dispatch_table_thunk;
    epoxy_glApplyTextureEXT = epoxy_glApplyTextureEXT_dispatch_table_thunk;
    epoxy_glAreProgramsResidentNV = epoxy_glAreProgramsResidentNV_dispatch_table_thunk;
    epoxy_glAreTexturesResident = epoxy_glAreTexturesResident_dispatch_table_thunk;
    epoxy_glAreTexturesResidentEXT = epoxy_glAreTexturesResidentEXT_dispatch_table_thunk;
    epoxy_glArrayElement = epoxy_glArrayElement_dispatch_table_thunk;
    epoxy_glArrayElementEXT = epoxy_glArrayElementEXT_dispatch_table_thunk;
    epoxy_glArrayObjectATI = epoxy_glArrayObjectATI_dispatch_table_thunk;
    epoxy_glAsyncMarkerSGIX = epoxy_glAsyncMarkerSGIX_dispatch_table_thunk;
    epoxy_glAttachObjectARB = epoxy_glAttachObjectARB_dispatch_table_thunk;
    epoxy_glAttachShader = epoxy_glAttachShader_dispatch_table_thunk;
    epoxy_glBegin_unwrapped = epoxy_glBegin_unwrapped_dispatch_table_thunk;
    epoxy_glBeginConditionalRender = epoxy_glBeginConditionalRender_dispatch_table_thunk;
    epoxy_glBeginConditionalRenderNV = epoxy_glBeginConditionalRenderNV_dispatch_table_thunk;
    epoxy_glBeginConditionalRenderNVX = epoxy_glBeginConditionalRenderNVX_dispatch_table_thunk;
    epoxy_glBeginFragmentShaderATI = epoxy_glBeginFragmentShaderATI_dispatch_table_thunk;
    epoxy_glBeginOcclusionQueryNV = epoxy_glBeginOcclusionQueryNV_dispatch_table_thunk;
    epoxy_glBeginPerfMonitorAMD = epoxy_glBeginPerfMonitorAMD_dispatch_table_thunk;
    epoxy_glBeginPerfQueryINTEL = epoxy_glBeginPerfQueryINTEL_dispatch_table_thunk;
    epoxy_glBeginQuery = epoxy_glBeginQuery_dispatch_table_thunk;
    epoxy_glBeginQueryARB = epoxy_glBeginQueryARB_dispatch_table_thunk;
    epoxy_glBeginQueryEXT = epoxy_glBeginQueryEXT_dispatch_table_thunk;
    epoxy_glBeginQueryIndexed = epoxy_glBeginQueryIndexed_dispatch_table_thunk;
    epoxy_glBeginTransformFeedback = epoxy_glBeginTransformFeedback_dispatch_table_thunk;
    epoxy_glBeginTransformFeedbackEXT = epoxy_glBeginTransformFeedbackEXT_dispatch_table_thunk;
    epoxy_glBeginTransformFeedbackNV = epoxy_glBeginTransformFeedbackNV_dispatch_table_thunk;
    epoxy_glBeginVertexShaderEXT = epoxy_glBeginVertexShaderEXT_dispatch_table_thunk;
    epoxy_glBeginVideoCaptureNV = epoxy_glBeginVideoCaptureNV_dispatch_table_thunk;
    epoxy_glBindAttribLocation = epoxy_glBindAttribLocation_dispatch_table_thunk;
    epoxy_glBindAttribLocationARB = epoxy_glBindAttribLocationARB_dispatch_table_thunk;
    epoxy_glBindBuffer = epoxy_glBindBuffer_dispatch_table_thunk;
    epoxy_glBindBufferARB = epoxy_glBindBufferARB_dispatch_table_thunk;
    epoxy_glBindBufferBase = epoxy_glBindBufferBase_dispatch_table_thunk;
    epoxy_glBindBufferBaseEXT = epoxy_glBindBufferBaseEXT_dispatch_table_thunk;
    epoxy_glBindBufferBaseNV = epoxy_glBindBufferBaseNV_dispatch_table_thunk;
    epoxy_glBindBufferOffsetEXT = epoxy_glBindBufferOffsetEXT_dispatch_table_thunk;
    epoxy_glBindBufferOffsetNV = epoxy_glBindBufferOffsetNV_dispatch_table_thunk;
    epoxy_glBindBufferRange = epoxy_glBindBufferRange_dispatch_table_thunk;
    epoxy_glBindBufferRangeEXT = epoxy_glBindBufferRangeEXT_dispatch_table_thunk;
    epoxy_glBindBufferRangeNV = epoxy_glBindBufferRangeNV_dispatch_table_thunk;
    epoxy_glBindBuffersBase = epoxy_glBindBuffersBase_dispatch_table_thunk;
    epoxy_glBindBuffersRange = epoxy_glBindBuffersRange_dispatch_table_thunk;
    epoxy_glBindFragDataLocation = epoxy_glBindFragDataLocation_dispatch_table_thunk;
    epoxy_glBindFragDataLocationEXT = epoxy_glBindFragDataLocationEXT_dispatch_table_thunk;
    epoxy_glBindFragDataLocationIndexed = epoxy_glBindFragDataLocationIndexed_dispatch_table_thunk;
    epoxy_glBindFragmentShaderATI = epoxy_glBindFragmentShaderATI_dispatch_table_thunk;
    epoxy_glBindFramebuffer = epoxy_glBindFramebuffer_dispatch_table_thunk;
    epoxy_glBindFramebufferEXT = epoxy_glBindFramebufferEXT_dispatch_table_thunk;
    epoxy_glBindFramebufferOES = epoxy_glBindFramebufferOES_dispatch_table_thunk;
    epoxy_glBindImageTexture = epoxy_glBindImageTexture_dispatch_table_thunk;
    epoxy_glBindImageTextureEXT = epoxy_glBindImageTextureEXT_dispatch_table_thunk;
    epoxy_glBindImageTextures = epoxy_glBindImageTextures_dispatch_table_thunk;
    epoxy_glBindLightParameterEXT = epoxy_glBindLightParameterEXT_dispatch_table_thunk;
    epoxy_glBindMaterialParameterEXT = epoxy_glBindMaterialParameterEXT_dispatch_table_thunk;
    epoxy_glBindMultiTextureEXT = epoxy_glBindMultiTextureEXT_dispatch_table_thunk;
    epoxy_glBindParameterEXT = epoxy_glBindParameterEXT_dispatch_table_thunk;
    epoxy_glBindProgramARB = epoxy_glBindProgramARB_dispatch_table_thunk;
    epoxy_glBindProgramNV = epoxy_glBindProgramNV_dispatch_table_thunk;
    epoxy_glBindProgramPipeline = epoxy_glBindProgramPipeline_dispatch_table_thunk;
    epoxy_glBindProgramPipelineEXT = epoxy_glBindProgramPipelineEXT_dispatch_table_thunk;
    epoxy_glBindRenderbuffer = epoxy_glBindRenderbuffer_dispatch_table_thunk;
    epoxy_glBindRenderbufferEXT = epoxy_glBindRenderbufferEXT_dispatch_table_thunk;
    epoxy_glBindRenderbufferOES = epoxy_glBindRenderbufferOES_dispatch_table_thunk;
    epoxy_glBindSampler = epoxy_glBindSampler_dispatch_table_thunk;
    epoxy_glBindSamplers = epoxy_glBindSamplers_dispatch_table_thunk;
    epoxy_glBindTexGenParameterEXT = epoxy_glBindTexGenParameterEXT_dispatch_table_thunk;
    epoxy_glBindTexture = epoxy_glBindTexture_dispatch_table_thunk;
    epoxy_glBindTextureEXT = epoxy_glBindTextureEXT_dispatch_table_thunk;
    epoxy_glBindTextureUnit = epoxy_glBindTextureUnit_dispatch_table_thunk;
    epoxy_glBindTextureUnitParameterEXT = epoxy_glBindTextureUnitParameterEXT_dispatch_table_thunk;
    epoxy_glBindTextures = epoxy_glBindTextures_dispatch_table_thunk;
    epoxy_glBindTransformFeedback = epoxy_glBindTransformFeedback_dispatch_table_thunk;
    epoxy_glBindTransformFeedbackNV = epoxy_glBindTransformFeedbackNV_dispatch_table_thunk;
    epoxy_glBindVertexArray = epoxy_glBindVertexArray_dispatch_table_thunk;
    epoxy_glBindVertexArrayAPPLE = epoxy_glBindVertexArrayAPPLE_dispatch_table_thunk;
    epoxy_glBindVertexArrayOES = epoxy_glBindVertexArrayOES_dispatch_table_thunk;
    epoxy_glBindVertexBuffer = epoxy_glBindVertexBuffer_dispatch_table_thunk;
    epoxy_glBindVertexBuffers = epoxy_glBindVertexBuffers_dispatch_table_thunk;
    epoxy_glBindVertexShaderEXT = epoxy_glBindVertexShaderEXT_dispatch_table_thunk;
    epoxy_glBindVideoCaptureStreamBufferNV = epoxy_glBindVideoCaptureStreamBufferNV_dispatch_table_thunk;
    epoxy_glBindVideoCaptureStreamTextureNV = epoxy_glBindVideoCaptureStreamTextureNV_dispatch_table_thunk;
    epoxy_glBinormal3bEXT = epoxy_glBinormal3bEXT_dispatch_table_thunk;
    epoxy_glBinormal3bvEXT = epoxy_glBinormal3bvEXT_dispatch_table_thunk;
    epoxy_glBinormal3dEXT = epoxy_glBinormal3dEXT_dispatch_table_thunk;
    epoxy_glBinormal3dvEXT = epoxy_glBinormal3dvEXT_dispatch_table_thunk;
    epoxy_glBinormal3fEXT = epoxy_glBinormal3fEXT_dispatch_table_thunk;
    epoxy_glBinormal3fvEXT = epoxy_glBinormal3fvEXT_dispatch_table_thunk;
    epoxy_glBinormal3iEXT = epoxy_glBinormal3iEXT_dispatch_table_thunk;
    epoxy_glBinormal3ivEXT = epoxy_glBinormal3ivEXT_dispatch_table_thunk;
    epoxy_glBinormal3sEXT = epoxy_glBinormal3sEXT_dispatch_table_thunk;
    epoxy_glBinormal3svEXT = epoxy_glBinormal3svEXT_dispatch_table_thunk;
    epoxy_glBinormalPointerEXT = epoxy_glBinormalPointerEXT_dispatch_table_thunk;
    epoxy_glBitmap = epoxy_glBitmap_dispatch_table_thunk;
    epoxy_glBitmapxOES = epoxy_glBitmapxOES_dispatch_table_thunk;
    epoxy_glBlendBarrierKHR = epoxy_glBlendBarrierKHR_dispatch_table_thunk;
    epoxy_glBlendBarrierNV = epoxy_glBlendBarrierNV_dispatch_table_thunk;
    epoxy_glBlendColor = epoxy_glBlendColor_dispatch_table_thunk;
    epoxy_glBlendColorEXT = epoxy_glBlendColorEXT_dispatch_table_thunk;
    epoxy_glBlendColorxOES = epoxy_glBlendColorxOES_dispatch_table_thunk;
    epoxy_glBlendEquation = epoxy_glBlendEquation_dispatch_table_thunk;
    epoxy_glBlendEquationEXT = epoxy_glBlendEquationEXT_dispatch_table_thunk;
    epoxy_glBlendEquationIndexedAMD = epoxy_glBlendEquationIndexedAMD_dispatch_table_thunk;
    epoxy_glBlendEquationOES = epoxy_glBlendEquationOES_dispatch_table_thunk;
    epoxy_glBlendEquationSeparate = epoxy_glBlendEquationSeparate_dispatch_table_thunk;
    epoxy_glBlendEquationSeparateEXT = epoxy_glBlendEquationSeparateEXT_dispatch_table_thunk;
    epoxy_glBlendEquationSeparateIndexedAMD = epoxy_glBlendEquationSeparateIndexedAMD_dispatch_table_thunk;
    epoxy_glBlendEquationSeparateOES = epoxy_glBlendEquationSeparateOES_dispatch_table_thunk;
    epoxy_glBlendEquationSeparatei = epoxy_glBlendEquationSeparatei_dispatch_table_thunk;
    epoxy_glBlendEquationSeparateiARB = epoxy_glBlendEquationSeparateiARB_dispatch_table_thunk;
    epoxy_glBlendEquationSeparateiEXT = epoxy_glBlendEquationSeparateiEXT_dispatch_table_thunk;
    epoxy_glBlendEquationSeparateiOES = epoxy_glBlendEquationSeparateiOES_dispatch_table_thunk;
    epoxy_glBlendEquationi = epoxy_glBlendEquationi_dispatch_table_thunk;
    epoxy_glBlendEquationiARB = epoxy_glBlendEquationiARB_dispatch_table_thunk;
    epoxy_glBlendEquationiEXT = epoxy_glBlendEquationiEXT_dispatch_table_thunk;
    epoxy_glBlendEquationiOES = epoxy_glBlendEquationiOES_dispatch_table_thunk;
    epoxy_glBlendFunc = epoxy_glBlendFunc_dispatch_table_thunk;
    epoxy_glBlendFuncIndexedAMD = epoxy_glBlendFuncIndexedAMD_dispatch_table_thunk;
    epoxy_glBlendFuncSeparate = epoxy_glBlendFuncSeparate_dispatch_table_thunk;
    epoxy_glBlendFuncSeparateEXT = epoxy_glBlendFuncSeparateEXT_dispatch_table_thunk;
    epoxy_glBlendFuncSeparateINGR = epoxy_glBlendFuncSeparateINGR_dispatch_table_thunk;
    epoxy_glBlendFuncSeparateIndexedAMD = epoxy_glBlendFuncSeparateIndexedAMD_dispatch_table_thunk;
    epoxy_glBlendFuncSeparateOES = epoxy_glBlendFuncSeparateOES_dispatch_table_thunk;
    epoxy_glBlendFuncSeparatei = epoxy_glBlendFuncSeparatei_dispatch_table_thunk;
    epoxy_glBlendFuncSeparateiARB = epoxy_glBlendFuncSeparateiARB_dispatch_table_thunk;
    epoxy_glBlendFuncSeparateiEXT = epoxy_glBlendFuncSeparateiEXT_dispatch_table_thunk;
    epoxy_glBlendFuncSeparateiOES = epoxy_glBlendFuncSeparateiOES_dispatch_table_thunk;
    epoxy_glBlendFunci = epoxy_glBlendFunci_dispatch_table_thunk;
    epoxy_glBlendFunciARB = epoxy_glBlendFunciARB_dispatch_table_thunk;
    epoxy_glBlendFunciEXT = epoxy_glBlendFunciEXT_dispatch_table_thunk;
    epoxy_glBlendFunciOES = epoxy_glBlendFunciOES_dispatch_table_thunk;
    epoxy_glBlendParameteriNV = epoxy_glBlendParameteriNV_dispatch_table_thunk;
    epoxy_glBlitFramebuffer = epoxy_glBlitFramebuffer_dispatch_table_thunk;
    epoxy_glBlitFramebufferANGLE = epoxy_glBlitFramebufferANGLE_dispatch_table_thunk;
    epoxy_glBlitFramebufferEXT = epoxy_glBlitFramebufferEXT_dispatch_table_thunk;
    epoxy_glBlitFramebufferNV = epoxy_glBlitFramebufferNV_dispatch_table_thunk;
    epoxy_glBlitNamedFramebuffer = epoxy_glBlitNamedFramebuffer_dispatch_table_thunk;
    epoxy_glBufferAddressRangeNV = epoxy_glBufferAddressRangeNV_dispatch_table_thunk;
    epoxy_glBufferData = epoxy_glBufferData_dispatch_table_thunk;
    epoxy_glBufferDataARB = epoxy_glBufferDataARB_dispatch_table_thunk;
    epoxy_glBufferPageCommitmentARB = epoxy_glBufferPageCommitmentARB_dispatch_table_thunk;
    epoxy_glBufferParameteriAPPLE = epoxy_glBufferParameteriAPPLE_dispatch_table_thunk;
    epoxy_glBufferStorage = epoxy_glBufferStorage_dispatch_table_thunk;
    epoxy_glBufferStorageEXT = epoxy_glBufferStorageEXT_dispatch_table_thunk;
    epoxy_glBufferSubData = epoxy_glBufferSubData_dispatch_table_thunk;
    epoxy_glBufferSubDataARB = epoxy_glBufferSubDataARB_dispatch_table_thunk;
    epoxy_glCallCommandListNV = epoxy_glCallCommandListNV_dispatch_table_thunk;
    epoxy_glCallList = epoxy_glCallList_dispatch_table_thunk;
    epoxy_glCallLists = epoxy_glCallLists_dispatch_table_thunk;
    epoxy_glCheckFramebufferStatus = epoxy_glCheckFramebufferStatus_dispatch_table_thunk;
    epoxy_glCheckFramebufferStatusEXT = epoxy_glCheckFramebufferStatusEXT_dispatch_table_thunk;
    epoxy_glCheckFramebufferStatusOES = epoxy_glCheckFramebufferStatusOES_dispatch_table_thunk;
    epoxy_glCheckNamedFramebufferStatus = epoxy_glCheckNamedFramebufferStatus_dispatch_table_thunk;
    epoxy_glCheckNamedFramebufferStatusEXT = epoxy_glCheckNamedFramebufferStatusEXT_dispatch_table_thunk;
    epoxy_glClampColor = epoxy_glClampColor_dispatch_table_thunk;
    epoxy_glClampColorARB = epoxy_glClampColorARB_dispatch_table_thunk;
    epoxy_glClear = epoxy_glClear_dispatch_table_thunk;
    epoxy_glClearAccum = epoxy_glClearAccum_dispatch_table_thunk;
    epoxy_glClearAccumxOES = epoxy_glClearAccumxOES_dispatch_table_thunk;
    epoxy_glClearBufferData = epoxy_glClearBufferData_dispatch_table_thunk;
    epoxy_glClearBufferSubData = epoxy_glClearBufferSubData_dispatch_table_thunk;
    epoxy_glClearBufferfi = epoxy_glClearBufferfi_dispatch_table_thunk;
    epoxy_glClearBufferfv = epoxy_glClearBufferfv_dispatch_table_thunk;
    epoxy_glClearBufferiv = epoxy_glClearBufferiv_dispatch_table_thunk;
    epoxy_glClearBufferuiv = epoxy_glClearBufferuiv_dispatch_table_thunk;
    epoxy_glClearColor = epoxy_glClearColor_dispatch_table_thunk;
    epoxy_glClearColorIiEXT = epoxy_glClearColorIiEXT_dispatch_table_thunk;
    epoxy_glClearColorIuiEXT = epoxy_glClearColorIuiEXT_dispatch_table_thunk;
    epoxy_glClearColorx = epoxy_glClearColorx_dispatch_table_thunk;
    epoxy_glClearColorxOES = epoxy_glClearColorxOES_dispatch_table_thunk;
    epoxy_glClearDepth = epoxy_glClearDepth_dispatch_table_thunk;
    epoxy_glClearDepthdNV = epoxy_glClearDepthdNV_dispatch_table_thunk;
    epoxy_glClearDepthf = epoxy_glClearDepthf_dispatch_table_thunk;
    epoxy_glClearDepthfOES = epoxy_glClearDepthfOES_dispatch_table_thunk;
    epoxy_glClearDepthx = epoxy_glClearDepthx_dispatch_table_thunk;
    epoxy_glClearDepthxOES = epoxy_glClearDepthxOES_dispatch_table_thunk;
    epoxy_glClearIndex = epoxy_glClearIndex_dispatch_table_thunk;
    epoxy_glClearNamedBufferData = epoxy_glClearNamedBufferData_dispatch_table_thunk;
    epoxy_glClearNamedBufferDataEXT = epoxy_glClearNamedBufferDataEXT_dispatch_table_thunk;
    epoxy_glClearNamedBufferSubData = epoxy_glClearNamedBufferSubData_dispatch_table_thunk;
    epoxy_glClearNamedBufferSubDataEXT = epoxy_glClearNamedBufferSubDataEXT_dispatch_table_thunk;
    epoxy_glClearNamedFramebufferfi = epoxy_glClearNamedFramebufferfi_dispatch_table_thunk;
    epoxy_glClearNamedFramebufferfv = epoxy_glClearNamedFramebufferfv_dispatch_table_thunk;
    epoxy_glClearNamedFramebufferiv = epoxy_glClearNamedFramebufferiv_dispatch_table_thunk;
    epoxy_glClearNamedFramebufferuiv = epoxy_glClearNamedFramebufferuiv_dispatch_table_thunk;
    epoxy_glClearStencil = epoxy_glClearStencil_dispatch_table_thunk;
    epoxy_glClearTexImage = epoxy_glClearTexImage_dispatch_table_thunk;
    epoxy_glClearTexSubImage = epoxy_glClearTexSubImage_dispatch_table_thunk;
    epoxy_glClientActiveTexture = epoxy_glClientActiveTexture_dispatch_table_thunk;
    epoxy_glClientActiveTextureARB = epoxy_glClientActiveTextureARB_dispatch_table_thunk;
    epoxy_glClientActiveVertexStreamATI = epoxy_glClientActiveVertexStreamATI_dispatch_table_thunk;
    epoxy_glClientAttribDefaultEXT = epoxy_glClientAttribDefaultEXT_dispatch_table_thunk;
    epoxy_glClientWaitSync = epoxy_glClientWaitSync_dispatch_table_thunk;
    epoxy_glClientWaitSyncAPPLE = epoxy_glClientWaitSyncAPPLE_dispatch_table_thunk;
    epoxy_glClipControl = epoxy_glClipControl_dispatch_table_thunk;
    epoxy_glClipPlane = epoxy_glClipPlane_dispatch_table_thunk;
    epoxy_glClipPlanef = epoxy_glClipPlanef_dispatch_table_thunk;
    epoxy_glClipPlanefIMG = epoxy_glClipPlanefIMG_dispatch_table_thunk;
    epoxy_glClipPlanefOES = epoxy_glClipPlanefOES_dispatch_table_thunk;
    epoxy_glClipPlanex = epoxy_glClipPlanex_dispatch_table_thunk;
    epoxy_glClipPlanexIMG = epoxy_glClipPlanexIMG_dispatch_table_thunk;
    epoxy_glClipPlanexOES = epoxy_glClipPlanexOES_dispatch_table_thunk;
    epoxy_glColor3b = epoxy_glColor3b_dispatch_table_thunk;
    epoxy_glColor3bv = epoxy_glColor3bv_dispatch_table_thunk;
    epoxy_glColor3d = epoxy_glColor3d_dispatch_table_thunk;
    epoxy_glColor3dv = epoxy_glColor3dv_dispatch_table_thunk;
    epoxy_glColor3f = epoxy_glColor3f_dispatch_table_thunk;
    epoxy_glColor3fVertex3fSUN = epoxy_glColor3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glColor3fVertex3fvSUN = epoxy_glColor3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glColor3fv = epoxy_glColor3fv_dispatch_table_thunk;
    epoxy_glColor3hNV = epoxy_glColor3hNV_dispatch_table_thunk;
    epoxy_glColor3hvNV = epoxy_glColor3hvNV_dispatch_table_thunk;
    epoxy_glColor3i = epoxy_glColor3i_dispatch_table_thunk;
    epoxy_glColor3iv = epoxy_glColor3iv_dispatch_table_thunk;
    epoxy_glColor3s = epoxy_glColor3s_dispatch_table_thunk;
    epoxy_glColor3sv = epoxy_glColor3sv_dispatch_table_thunk;
    epoxy_glColor3ub = epoxy_glColor3ub_dispatch_table_thunk;
    epoxy_glColor3ubv = epoxy_glColor3ubv_dispatch_table_thunk;
    epoxy_glColor3ui = epoxy_glColor3ui_dispatch_table_thunk;
    epoxy_glColor3uiv = epoxy_glColor3uiv_dispatch_table_thunk;
    epoxy_glColor3us = epoxy_glColor3us_dispatch_table_thunk;
    epoxy_glColor3usv = epoxy_glColor3usv_dispatch_table_thunk;
    epoxy_glColor3xOES = epoxy_glColor3xOES_dispatch_table_thunk;
    epoxy_glColor3xvOES = epoxy_glColor3xvOES_dispatch_table_thunk;
    epoxy_glColor4b = epoxy_glColor4b_dispatch_table_thunk;
    epoxy_glColor4bv = epoxy_glColor4bv_dispatch_table_thunk;
    epoxy_glColor4d = epoxy_glColor4d_dispatch_table_thunk;
    epoxy_glColor4dv = epoxy_glColor4dv_dispatch_table_thunk;
    epoxy_glColor4f = epoxy_glColor4f_dispatch_table_thunk;
    epoxy_glColor4fNormal3fVertex3fSUN = epoxy_glColor4fNormal3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glColor4fNormal3fVertex3fvSUN = epoxy_glColor4fNormal3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glColor4fv = epoxy_glColor4fv_dispatch_table_thunk;
    epoxy_glColor4hNV = epoxy_glColor4hNV_dispatch_table_thunk;
    epoxy_glColor4hvNV = epoxy_glColor4hvNV_dispatch_table_thunk;
    epoxy_glColor4i = epoxy_glColor4i_dispatch_table_thunk;
    epoxy_glColor4iv = epoxy_glColor4iv_dispatch_table_thunk;
    epoxy_glColor4s = epoxy_glColor4s_dispatch_table_thunk;
    epoxy_glColor4sv = epoxy_glColor4sv_dispatch_table_thunk;
    epoxy_glColor4ub = epoxy_glColor4ub_dispatch_table_thunk;
    epoxy_glColor4ubVertex2fSUN = epoxy_glColor4ubVertex2fSUN_dispatch_table_thunk;
    epoxy_glColor4ubVertex2fvSUN = epoxy_glColor4ubVertex2fvSUN_dispatch_table_thunk;
    epoxy_glColor4ubVertex3fSUN = epoxy_glColor4ubVertex3fSUN_dispatch_table_thunk;
    epoxy_glColor4ubVertex3fvSUN = epoxy_glColor4ubVertex3fvSUN_dispatch_table_thunk;
    epoxy_glColor4ubv = epoxy_glColor4ubv_dispatch_table_thunk;
    epoxy_glColor4ui = epoxy_glColor4ui_dispatch_table_thunk;
    epoxy_glColor4uiv = epoxy_glColor4uiv_dispatch_table_thunk;
    epoxy_glColor4us = epoxy_glColor4us_dispatch_table_thunk;
    epoxy_glColor4usv = epoxy_glColor4usv_dispatch_table_thunk;
    epoxy_glColor4x = epoxy_glColor4x_dispatch_table_thunk;
    epoxy_glColor4xOES = epoxy_glColor4xOES_dispatch_table_thunk;
    epoxy_glColor4xvOES = epoxy_glColor4xvOES_dispatch_table_thunk;
    epoxy_glColorFormatNV = epoxy_glColorFormatNV_dispatch_table_thunk;
    epoxy_glColorFragmentOp1ATI = epoxy_glColorFragmentOp1ATI_dispatch_table_thunk;
    epoxy_glColorFragmentOp2ATI = epoxy_glColorFragmentOp2ATI_dispatch_table_thunk;
    epoxy_glColorFragmentOp3ATI = epoxy_glColorFragmentOp3ATI_dispatch_table_thunk;
    epoxy_glColorMask = epoxy_glColorMask_dispatch_table_thunk;
    epoxy_glColorMaskIndexedEXT = epoxy_glColorMaskIndexedEXT_dispatch_table_thunk;
    epoxy_glColorMaski = epoxy_glColorMaski_dispatch_table_thunk;
    epoxy_glColorMaskiEXT = epoxy_glColorMaskiEXT_dispatch_table_thunk;
    epoxy_glColorMaskiOES = epoxy_glColorMaskiOES_dispatch_table_thunk;
    epoxy_glColorMaterial = epoxy_glColorMaterial_dispatch_table_thunk;
    epoxy_glColorP3ui = epoxy_glColorP3ui_dispatch_table_thunk;
    epoxy_glColorP3uiv = epoxy_glColorP3uiv_dispatch_table_thunk;
    epoxy_glColorP4ui = epoxy_glColorP4ui_dispatch_table_thunk;
    epoxy_glColorP4uiv = epoxy_glColorP4uiv_dispatch_table_thunk;
    epoxy_glColorPointer = epoxy_glColorPointer_dispatch_table_thunk;
    epoxy_glColorPointerEXT = epoxy_glColorPointerEXT_dispatch_table_thunk;
    epoxy_glColorPointerListIBM = epoxy_glColorPointerListIBM_dispatch_table_thunk;
    epoxy_glColorPointervINTEL = epoxy_glColorPointervINTEL_dispatch_table_thunk;
    epoxy_glColorSubTable = epoxy_glColorSubTable_dispatch_table_thunk;
    epoxy_glColorSubTableEXT = epoxy_glColorSubTableEXT_dispatch_table_thunk;
    epoxy_glColorTable = epoxy_glColorTable_dispatch_table_thunk;
    epoxy_glColorTableEXT = epoxy_glColorTableEXT_dispatch_table_thunk;
    epoxy_glColorTableParameterfv = epoxy_glColorTableParameterfv_dispatch_table_thunk;
    epoxy_glColorTableParameterfvSGI = epoxy_glColorTableParameterfvSGI_dispatch_table_thunk;
    epoxy_glColorTableParameteriv = epoxy_glColorTableParameteriv_dispatch_table_thunk;
    epoxy_glColorTableParameterivSGI = epoxy_glColorTableParameterivSGI_dispatch_table_thunk;
    epoxy_glColorTableSGI = epoxy_glColorTableSGI_dispatch_table_thunk;
    epoxy_glCombinerInputNV = epoxy_glCombinerInputNV_dispatch_table_thunk;
    epoxy_glCombinerOutputNV = epoxy_glCombinerOutputNV_dispatch_table_thunk;
    epoxy_glCombinerParameterfNV = epoxy_glCombinerParameterfNV_dispatch_table_thunk;
    epoxy_glCombinerParameterfvNV = epoxy_glCombinerParameterfvNV_dispatch_table_thunk;
    epoxy_glCombinerParameteriNV = epoxy_glCombinerParameteriNV_dispatch_table_thunk;
    epoxy_glCombinerParameterivNV = epoxy_glCombinerParameterivNV_dispatch_table_thunk;
    epoxy_glCombinerStageParameterfvNV = epoxy_glCombinerStageParameterfvNV_dispatch_table_thunk;
    epoxy_glCommandListSegmentsNV = epoxy_glCommandListSegmentsNV_dispatch_table_thunk;
    epoxy_glCompileCommandListNV = epoxy_glCompileCommandListNV_dispatch_table_thunk;
    epoxy_glCompileShader = epoxy_glCompileShader_dispatch_table_thunk;
    epoxy_glCompileShaderARB = epoxy_glCompileShaderARB_dispatch_table_thunk;
    epoxy_glCompileShaderIncludeARB = epoxy_glCompileShaderIncludeARB_dispatch_table_thunk;
    epoxy_glCompressedMultiTexImage1DEXT = epoxy_glCompressedMultiTexImage1DEXT_dispatch_table_thunk;
    epoxy_glCompressedMultiTexImage2DEXT = epoxy_glCompressedMultiTexImage2DEXT_dispatch_table_thunk;
    epoxy_glCompressedMultiTexImage3DEXT = epoxy_glCompressedMultiTexImage3DEXT_dispatch_table_thunk;
    epoxy_glCompressedMultiTexSubImage1DEXT = epoxy_glCompressedMultiTexSubImage1DEXT_dispatch_table_thunk;
    epoxy_glCompressedMultiTexSubImage2DEXT = epoxy_glCompressedMultiTexSubImage2DEXT_dispatch_table_thunk;
    epoxy_glCompressedMultiTexSubImage3DEXT = epoxy_glCompressedMultiTexSubImage3DEXT_dispatch_table_thunk;
    epoxy_glCompressedTexImage1D = epoxy_glCompressedTexImage1D_dispatch_table_thunk;
    epoxy_glCompressedTexImage1DARB = epoxy_glCompressedTexImage1DARB_dispatch_table_thunk;
    epoxy_glCompressedTexImage2D = epoxy_glCompressedTexImage2D_dispatch_table_thunk;
    epoxy_glCompressedTexImage2DARB = epoxy_glCompressedTexImage2DARB_dispatch_table_thunk;
    epoxy_glCompressedTexImage3D = epoxy_glCompressedTexImage3D_dispatch_table_thunk;
    epoxy_glCompressedTexImage3DARB = epoxy_glCompressedTexImage3DARB_dispatch_table_thunk;
    epoxy_glCompressedTexImage3DOES = epoxy_glCompressedTexImage3DOES_dispatch_table_thunk;
    epoxy_glCompressedTexSubImage1D = epoxy_glCompressedTexSubImage1D_dispatch_table_thunk;
    epoxy_glCompressedTexSubImage1DARB = epoxy_glCompressedTexSubImage1DARB_dispatch_table_thunk;
    epoxy_glCompressedTexSubImage2D = epoxy_glCompressedTexSubImage2D_dispatch_table_thunk;
    epoxy_glCompressedTexSubImage2DARB = epoxy_glCompressedTexSubImage2DARB_dispatch_table_thunk;
    epoxy_glCompressedTexSubImage3D = epoxy_glCompressedTexSubImage3D_dispatch_table_thunk;
    epoxy_glCompressedTexSubImage3DARB = epoxy_glCompressedTexSubImage3DARB_dispatch_table_thunk;
    epoxy_glCompressedTexSubImage3DOES = epoxy_glCompressedTexSubImage3DOES_dispatch_table_thunk;
    epoxy_glCompressedTextureImage1DEXT = epoxy_glCompressedTextureImage1DEXT_dispatch_table_thunk;
    epoxy_glCompressedTextureImage2DEXT = epoxy_glCompressedTextureImage2DEXT_dispatch_table_thunk;
    epoxy_glCompressedTextureImage3DEXT = epoxy_glCompressedTextureImage3DEXT_dispatch_table_thunk;
    epoxy_glCompressedTextureSubImage1D = epoxy_glCompressedTextureSubImage1D_dispatch_table_thunk;
    epoxy_glCompressedTextureSubImage1DEXT = epoxy_glCompressedTextureSubImage1DEXT_dispatch_table_thunk;
    epoxy_glCompressedTextureSubImage2D = epoxy_glCompressedTextureSubImage2D_dispatch_table_thunk;
    epoxy_glCompressedTextureSubImage2DEXT = epoxy_glCompressedTextureSubImage2DEXT_dispatch_table_thunk;
    epoxy_glCompressedTextureSubImage3D = epoxy_glCompressedTextureSubImage3D_dispatch_table_thunk;
    epoxy_glCompressedTextureSubImage3DEXT = epoxy_glCompressedTextureSubImage3DEXT_dispatch_table_thunk;
    epoxy_glConvolutionFilter1D = epoxy_glConvolutionFilter1D_dispatch_table_thunk;
    epoxy_glConvolutionFilter1DEXT = epoxy_glConvolutionFilter1DEXT_dispatch_table_thunk;
    epoxy_glConvolutionFilter2D = epoxy_glConvolutionFilter2D_dispatch_table_thunk;
    epoxy_glConvolutionFilter2DEXT = epoxy_glConvolutionFilter2DEXT_dispatch_table_thunk;
    epoxy_glConvolutionParameterf = epoxy_glConvolutionParameterf_dispatch_table_thunk;
    epoxy_glConvolutionParameterfEXT = epoxy_glConvolutionParameterfEXT_dispatch_table_thunk;
    epoxy_glConvolutionParameterfv = epoxy_glConvolutionParameterfv_dispatch_table_thunk;
    epoxy_glConvolutionParameterfvEXT = epoxy_glConvolutionParameterfvEXT_dispatch_table_thunk;
    epoxy_glConvolutionParameteri = epoxy_glConvolutionParameteri_dispatch_table_thunk;
    epoxy_glConvolutionParameteriEXT = epoxy_glConvolutionParameteriEXT_dispatch_table_thunk;
    epoxy_glConvolutionParameteriv = epoxy_glConvolutionParameteriv_dispatch_table_thunk;
    epoxy_glConvolutionParameterivEXT = epoxy_glConvolutionParameterivEXT_dispatch_table_thunk;
    epoxy_glConvolutionParameterxOES = epoxy_glConvolutionParameterxOES_dispatch_table_thunk;
    epoxy_glConvolutionParameterxvOES = epoxy_glConvolutionParameterxvOES_dispatch_table_thunk;
    epoxy_glCopyBufferSubData = epoxy_glCopyBufferSubData_dispatch_table_thunk;
    epoxy_glCopyBufferSubDataNV = epoxy_glCopyBufferSubDataNV_dispatch_table_thunk;
    epoxy_glCopyColorSubTable = epoxy_glCopyColorSubTable_dispatch_table_thunk;
    epoxy_glCopyColorSubTableEXT = epoxy_glCopyColorSubTableEXT_dispatch_table_thunk;
    epoxy_glCopyColorTable = epoxy_glCopyColorTable_dispatch_table_thunk;
    epoxy_glCopyColorTableSGI = epoxy_glCopyColorTableSGI_dispatch_table_thunk;
    epoxy_glCopyConvolutionFilter1D = epoxy_glCopyConvolutionFilter1D_dispatch_table_thunk;
    epoxy_glCopyConvolutionFilter1DEXT = epoxy_glCopyConvolutionFilter1DEXT_dispatch_table_thunk;
    epoxy_glCopyConvolutionFilter2D = epoxy_glCopyConvolutionFilter2D_dispatch_table_thunk;
    epoxy_glCopyConvolutionFilter2DEXT = epoxy_glCopyConvolutionFilter2DEXT_dispatch_table_thunk;
    epoxy_glCopyImageSubData = epoxy_glCopyImageSubData_dispatch_table_thunk;
    epoxy_glCopyImageSubDataEXT = epoxy_glCopyImageSubDataEXT_dispatch_table_thunk;
    epoxy_glCopyImageSubDataNV = epoxy_glCopyImageSubDataNV_dispatch_table_thunk;
    epoxy_glCopyImageSubDataOES = epoxy_glCopyImageSubDataOES_dispatch_table_thunk;
    epoxy_glCopyMultiTexImage1DEXT = epoxy_glCopyMultiTexImage1DEXT_dispatch_table_thunk;
    epoxy_glCopyMultiTexImage2DEXT = epoxy_glCopyMultiTexImage2DEXT_dispatch_table_thunk;
    epoxy_glCopyMultiTexSubImage1DEXT = epoxy_glCopyMultiTexSubImage1DEXT_dispatch_table_thunk;
    epoxy_glCopyMultiTexSubImage2DEXT = epoxy_glCopyMultiTexSubImage2DEXT_dispatch_table_thunk;
    epoxy_glCopyMultiTexSubImage3DEXT = epoxy_glCopyMultiTexSubImage3DEXT_dispatch_table_thunk;
    epoxy_glCopyNamedBufferSubData = epoxy_glCopyNamedBufferSubData_dispatch_table_thunk;
    epoxy_glCopyPathNV = epoxy_glCopyPathNV_dispatch_table_thunk;
    epoxy_glCopyPixels = epoxy_glCopyPixels_dispatch_table_thunk;
    epoxy_glCopyTexImage1D = epoxy_glCopyTexImage1D_dispatch_table_thunk;
    epoxy_glCopyTexImage1DEXT = epoxy_glCopyTexImage1DEXT_dispatch_table_thunk;
    epoxy_glCopyTexImage2D = epoxy_glCopyTexImage2D_dispatch_table_thunk;
    epoxy_glCopyTexImage2DEXT = epoxy_glCopyTexImage2DEXT_dispatch_table_thunk;
    epoxy_glCopyTexSubImage1D = epoxy_glCopyTexSubImage1D_dispatch_table_thunk;
    epoxy_glCopyTexSubImage1DEXT = epoxy_glCopyTexSubImage1DEXT_dispatch_table_thunk;
    epoxy_glCopyTexSubImage2D = epoxy_glCopyTexSubImage2D_dispatch_table_thunk;
    epoxy_glCopyTexSubImage2DEXT = epoxy_glCopyTexSubImage2DEXT_dispatch_table_thunk;
    epoxy_glCopyTexSubImage3D = epoxy_glCopyTexSubImage3D_dispatch_table_thunk;
    epoxy_glCopyTexSubImage3DEXT = epoxy_glCopyTexSubImage3DEXT_dispatch_table_thunk;
    epoxy_glCopyTexSubImage3DOES = epoxy_glCopyTexSubImage3DOES_dispatch_table_thunk;
    epoxy_glCopyTextureImage1DEXT = epoxy_glCopyTextureImage1DEXT_dispatch_table_thunk;
    epoxy_glCopyTextureImage2DEXT = epoxy_glCopyTextureImage2DEXT_dispatch_table_thunk;
    epoxy_glCopyTextureLevelsAPPLE = epoxy_glCopyTextureLevelsAPPLE_dispatch_table_thunk;
    epoxy_glCopyTextureSubImage1D = epoxy_glCopyTextureSubImage1D_dispatch_table_thunk;
    epoxy_glCopyTextureSubImage1DEXT = epoxy_glCopyTextureSubImage1DEXT_dispatch_table_thunk;
    epoxy_glCopyTextureSubImage2D = epoxy_glCopyTextureSubImage2D_dispatch_table_thunk;
    epoxy_glCopyTextureSubImage2DEXT = epoxy_glCopyTextureSubImage2DEXT_dispatch_table_thunk;
    epoxy_glCopyTextureSubImage3D = epoxy_glCopyTextureSubImage3D_dispatch_table_thunk;
    epoxy_glCopyTextureSubImage3DEXT = epoxy_glCopyTextureSubImage3DEXT_dispatch_table_thunk;
    epoxy_glCoverFillPathInstancedNV = epoxy_glCoverFillPathInstancedNV_dispatch_table_thunk;
    epoxy_glCoverFillPathNV = epoxy_glCoverFillPathNV_dispatch_table_thunk;
    epoxy_glCoverStrokePathInstancedNV = epoxy_glCoverStrokePathInstancedNV_dispatch_table_thunk;
    epoxy_glCoverStrokePathNV = epoxy_glCoverStrokePathNV_dispatch_table_thunk;
    epoxy_glCoverageMaskNV = epoxy_glCoverageMaskNV_dispatch_table_thunk;
    epoxy_glCoverageModulationNV = epoxy_glCoverageModulationNV_dispatch_table_thunk;
    epoxy_glCoverageModulationTableNV = epoxy_glCoverageModulationTableNV_dispatch_table_thunk;
    epoxy_glCoverageOperationNV = epoxy_glCoverageOperationNV_dispatch_table_thunk;
    epoxy_glCreateBuffers = epoxy_glCreateBuffers_dispatch_table_thunk;
    epoxy_glCreateCommandListsNV = epoxy_glCreateCommandListsNV_dispatch_table_thunk;
    epoxy_glCreateFramebuffers = epoxy_glCreateFramebuffers_dispatch_table_thunk;
    epoxy_glCreatePerfQueryINTEL = epoxy_glCreatePerfQueryINTEL_dispatch_table_thunk;
    epoxy_glCreateProgram = epoxy_glCreateProgram_dispatch_table_thunk;
    epoxy_glCreateProgramObjectARB = epoxy_glCreateProgramObjectARB_dispatch_table_thunk;
    epoxy_glCreateProgramPipelines = epoxy_glCreateProgramPipelines_dispatch_table_thunk;
    epoxy_glCreateQueries = epoxy_glCreateQueries_dispatch_table_thunk;
    epoxy_glCreateRenderbuffers = epoxy_glCreateRenderbuffers_dispatch_table_thunk;
    epoxy_glCreateSamplers = epoxy_glCreateSamplers_dispatch_table_thunk;
    epoxy_glCreateShader = epoxy_glCreateShader_dispatch_table_thunk;
    epoxy_glCreateShaderObjectARB = epoxy_glCreateShaderObjectARB_dispatch_table_thunk;
    epoxy_glCreateShaderProgramEXT = epoxy_glCreateShaderProgramEXT_dispatch_table_thunk;
    epoxy_glCreateShaderProgramv = epoxy_glCreateShaderProgramv_dispatch_table_thunk;
    epoxy_glCreateShaderProgramvEXT = epoxy_glCreateShaderProgramvEXT_dispatch_table_thunk;
    epoxy_glCreateStatesNV = epoxy_glCreateStatesNV_dispatch_table_thunk;
    epoxy_glCreateSyncFromCLeventARB = epoxy_glCreateSyncFromCLeventARB_dispatch_table_thunk;
    epoxy_glCreateTextures = epoxy_glCreateTextures_dispatch_table_thunk;
    epoxy_glCreateTransformFeedbacks = epoxy_glCreateTransformFeedbacks_dispatch_table_thunk;
    epoxy_glCreateVertexArrays = epoxy_glCreateVertexArrays_dispatch_table_thunk;
    epoxy_glCullFace = epoxy_glCullFace_dispatch_table_thunk;
    epoxy_glCullParameterdvEXT = epoxy_glCullParameterdvEXT_dispatch_table_thunk;
    epoxy_glCullParameterfvEXT = epoxy_glCullParameterfvEXT_dispatch_table_thunk;
    epoxy_glCurrentPaletteMatrixARB = epoxy_glCurrentPaletteMatrixARB_dispatch_table_thunk;
    epoxy_glCurrentPaletteMatrixOES = epoxy_glCurrentPaletteMatrixOES_dispatch_table_thunk;
    epoxy_glDebugMessageCallback = epoxy_glDebugMessageCallback_dispatch_table_thunk;
    epoxy_glDebugMessageCallbackAMD = epoxy_glDebugMessageCallbackAMD_dispatch_table_thunk;
    epoxy_glDebugMessageCallbackARB = epoxy_glDebugMessageCallbackARB_dispatch_table_thunk;
    epoxy_glDebugMessageCallbackKHR = epoxy_glDebugMessageCallbackKHR_dispatch_table_thunk;
    epoxy_glDebugMessageControl = epoxy_glDebugMessageControl_dispatch_table_thunk;
    epoxy_glDebugMessageControlARB = epoxy_glDebugMessageControlARB_dispatch_table_thunk;
    epoxy_glDebugMessageControlKHR = epoxy_glDebugMessageControlKHR_dispatch_table_thunk;
    epoxy_glDebugMessageEnableAMD = epoxy_glDebugMessageEnableAMD_dispatch_table_thunk;
    epoxy_glDebugMessageInsert = epoxy_glDebugMessageInsert_dispatch_table_thunk;
    epoxy_glDebugMessageInsertAMD = epoxy_glDebugMessageInsertAMD_dispatch_table_thunk;
    epoxy_glDebugMessageInsertARB = epoxy_glDebugMessageInsertARB_dispatch_table_thunk;
    epoxy_glDebugMessageInsertKHR = epoxy_glDebugMessageInsertKHR_dispatch_table_thunk;
    epoxy_glDeformSGIX = epoxy_glDeformSGIX_dispatch_table_thunk;
    epoxy_glDeformationMap3dSGIX = epoxy_glDeformationMap3dSGIX_dispatch_table_thunk;
    epoxy_glDeformationMap3fSGIX = epoxy_glDeformationMap3fSGIX_dispatch_table_thunk;
    epoxy_glDeleteAsyncMarkersSGIX = epoxy_glDeleteAsyncMarkersSGIX_dispatch_table_thunk;
    epoxy_glDeleteBuffers = epoxy_glDeleteBuffers_dispatch_table_thunk;
    epoxy_glDeleteBuffersARB = epoxy_glDeleteBuffersARB_dispatch_table_thunk;
    epoxy_glDeleteCommandListsNV = epoxy_glDeleteCommandListsNV_dispatch_table_thunk;
    epoxy_glDeleteFencesAPPLE = epoxy_glDeleteFencesAPPLE_dispatch_table_thunk;
    epoxy_glDeleteFencesNV = epoxy_glDeleteFencesNV_dispatch_table_thunk;
    epoxy_glDeleteFragmentShaderATI = epoxy_glDeleteFragmentShaderATI_dispatch_table_thunk;
    epoxy_glDeleteFramebuffers = epoxy_glDeleteFramebuffers_dispatch_table_thunk;
    epoxy_glDeleteFramebuffersEXT = epoxy_glDeleteFramebuffersEXT_dispatch_table_thunk;
    epoxy_glDeleteFramebuffersOES = epoxy_glDeleteFramebuffersOES_dispatch_table_thunk;
    epoxy_glDeleteLists = epoxy_glDeleteLists_dispatch_table_thunk;
    epoxy_glDeleteNamedStringARB = epoxy_glDeleteNamedStringARB_dispatch_table_thunk;
    epoxy_glDeleteNamesAMD = epoxy_glDeleteNamesAMD_dispatch_table_thunk;
    epoxy_glDeleteObjectARB = epoxy_glDeleteObjectARB_dispatch_table_thunk;
    epoxy_glDeleteOcclusionQueriesNV = epoxy_glDeleteOcclusionQueriesNV_dispatch_table_thunk;
    epoxy_glDeletePathsNV = epoxy_glDeletePathsNV_dispatch_table_thunk;
    epoxy_glDeletePerfMonitorsAMD = epoxy_glDeletePerfMonitorsAMD_dispatch_table_thunk;
    epoxy_glDeletePerfQueryINTEL = epoxy_glDeletePerfQueryINTEL_dispatch_table_thunk;
    epoxy_glDeleteProgram = epoxy_glDeleteProgram_dispatch_table_thunk;
    epoxy_glDeleteProgramPipelines = epoxy_glDeleteProgramPipelines_dispatch_table_thunk;
    epoxy_glDeleteProgramPipelinesEXT = epoxy_glDeleteProgramPipelinesEXT_dispatch_table_thunk;
    epoxy_glDeleteProgramsARB = epoxy_glDeleteProgramsARB_dispatch_table_thunk;
    epoxy_glDeleteProgramsNV = epoxy_glDeleteProgramsNV_dispatch_table_thunk;
    epoxy_glDeleteQueries = epoxy_glDeleteQueries_dispatch_table_thunk;
    epoxy_glDeleteQueriesARB = epoxy_glDeleteQueriesARB_dispatch_table_thunk;
    epoxy_glDeleteQueriesEXT = epoxy_glDeleteQueriesEXT_dispatch_table_thunk;
    epoxy_glDeleteRenderbuffers = epoxy_glDeleteRenderbuffers_dispatch_table_thunk;
    epoxy_glDeleteRenderbuffersEXT = epoxy_glDeleteRenderbuffersEXT_dispatch_table_thunk;
    epoxy_glDeleteRenderbuffersOES = epoxy_glDeleteRenderbuffersOES_dispatch_table_thunk;
    epoxy_glDeleteSamplers = epoxy_glDeleteSamplers_dispatch_table_thunk;
    epoxy_glDeleteShader = epoxy_glDeleteShader_dispatch_table_thunk;
    epoxy_glDeleteStatesNV = epoxy_glDeleteStatesNV_dispatch_table_thunk;
    epoxy_glDeleteSync = epoxy_glDeleteSync_dispatch_table_thunk;
    epoxy_glDeleteSyncAPPLE = epoxy_glDeleteSyncAPPLE_dispatch_table_thunk;
    epoxy_glDeleteTextures = epoxy_glDeleteTextures_dispatch_table_thunk;
    epoxy_glDeleteTexturesEXT = epoxy_glDeleteTexturesEXT_dispatch_table_thunk;
    epoxy_glDeleteTransformFeedbacks = epoxy_glDeleteTransformFeedbacks_dispatch_table_thunk;
    epoxy_glDeleteTransformFeedbacksNV = epoxy_glDeleteTransformFeedbacksNV_dispatch_table_thunk;
    epoxy_glDeleteVertexArrays = epoxy_glDeleteVertexArrays_dispatch_table_thunk;
    epoxy_glDeleteVertexArraysAPPLE = epoxy_glDeleteVertexArraysAPPLE_dispatch_table_thunk;
    epoxy_glDeleteVertexArraysOES = epoxy_glDeleteVertexArraysOES_dispatch_table_thunk;
    epoxy_glDeleteVertexShaderEXT = epoxy_glDeleteVertexShaderEXT_dispatch_table_thunk;
    epoxy_glDepthBoundsEXT = epoxy_glDepthBoundsEXT_dispatch_table_thunk;
    epoxy_glDepthBoundsdNV = epoxy_glDepthBoundsdNV_dispatch_table_thunk;
    epoxy_glDepthFunc = epoxy_glDepthFunc_dispatch_table_thunk;
    epoxy_glDepthMask = epoxy_glDepthMask_dispatch_table_thunk;
    epoxy_glDepthRange = epoxy_glDepthRange_dispatch_table_thunk;
    epoxy_glDepthRangeArrayfvNV = epoxy_glDepthRangeArrayfvNV_dispatch_table_thunk;
    epoxy_glDepthRangeArrayv = epoxy_glDepthRangeArrayv_dispatch_table_thunk;
    epoxy_glDepthRangeIndexed = epoxy_glDepthRangeIndexed_dispatch_table_thunk;
    epoxy_glDepthRangeIndexedfNV = epoxy_glDepthRangeIndexedfNV_dispatch_table_thunk;
    epoxy_glDepthRangedNV = epoxy_glDepthRangedNV_dispatch_table_thunk;
    epoxy_glDepthRangef = epoxy_glDepthRangef_dispatch_table_thunk;
    epoxy_glDepthRangefOES = epoxy_glDepthRangefOES_dispatch_table_thunk;
    epoxy_glDepthRangex = epoxy_glDepthRangex_dispatch_table_thunk;
    epoxy_glDepthRangexOES = epoxy_glDepthRangexOES_dispatch_table_thunk;
    epoxy_glDetachObjectARB = epoxy_glDetachObjectARB_dispatch_table_thunk;
    epoxy_glDetachShader = epoxy_glDetachShader_dispatch_table_thunk;
    epoxy_glDetailTexFuncSGIS = epoxy_glDetailTexFuncSGIS_dispatch_table_thunk;
    epoxy_glDisable = epoxy_glDisable_dispatch_table_thunk;
    epoxy_glDisableClientState = epoxy_glDisableClientState_dispatch_table_thunk;
    epoxy_glDisableClientStateIndexedEXT = epoxy_glDisableClientStateIndexedEXT_dispatch_table_thunk;
    epoxy_glDisableClientStateiEXT = epoxy_glDisableClientStateiEXT_dispatch_table_thunk;
    epoxy_glDisableDriverControlQCOM = epoxy_glDisableDriverControlQCOM_dispatch_table_thunk;
    epoxy_glDisableIndexedEXT = epoxy_glDisableIndexedEXT_dispatch_table_thunk;
    epoxy_glDisableVariantClientStateEXT = epoxy_glDisableVariantClientStateEXT_dispatch_table_thunk;
    epoxy_glDisableVertexArrayAttrib = epoxy_glDisableVertexArrayAttrib_dispatch_table_thunk;
    epoxy_glDisableVertexArrayAttribEXT = epoxy_glDisableVertexArrayAttribEXT_dispatch_table_thunk;
    epoxy_glDisableVertexArrayEXT = epoxy_glDisableVertexArrayEXT_dispatch_table_thunk;
    epoxy_glDisableVertexAttribAPPLE = epoxy_glDisableVertexAttribAPPLE_dispatch_table_thunk;
    epoxy_glDisableVertexAttribArray = epoxy_glDisableVertexAttribArray_dispatch_table_thunk;
    epoxy_glDisableVertexAttribArrayARB = epoxy_glDisableVertexAttribArrayARB_dispatch_table_thunk;
    epoxy_glDisablei = epoxy_glDisablei_dispatch_table_thunk;
    epoxy_glDisableiEXT = epoxy_glDisableiEXT_dispatch_table_thunk;
    epoxy_glDisableiNV = epoxy_glDisableiNV_dispatch_table_thunk;
    epoxy_glDisableiOES = epoxy_glDisableiOES_dispatch_table_thunk;
    epoxy_glDiscardFramebufferEXT = epoxy_glDiscardFramebufferEXT_dispatch_table_thunk;
    epoxy_glDispatchCompute = epoxy_glDispatchCompute_dispatch_table_thunk;
    epoxy_glDispatchComputeGroupSizeARB = epoxy_glDispatchComputeGroupSizeARB_dispatch_table_thunk;
    epoxy_glDispatchComputeIndirect = epoxy_glDispatchComputeIndirect_dispatch_table_thunk;
    epoxy_glDrawArrays = epoxy_glDrawArrays_dispatch_table_thunk;
    epoxy_glDrawArraysEXT = epoxy_glDrawArraysEXT_dispatch_table_thunk;
    epoxy_glDrawArraysIndirect = epoxy_glDrawArraysIndirect_dispatch_table_thunk;
    epoxy_glDrawArraysInstanced = epoxy_glDrawArraysInstanced_dispatch_table_thunk;
    epoxy_glDrawArraysInstancedANGLE = epoxy_glDrawArraysInstancedANGLE_dispatch_table_thunk;
    epoxy_glDrawArraysInstancedARB = epoxy_glDrawArraysInstancedARB_dispatch_table_thunk;
    epoxy_glDrawArraysInstancedBaseInstance = epoxy_glDrawArraysInstancedBaseInstance_dispatch_table_thunk;
    epoxy_glDrawArraysInstancedBaseInstanceEXT = epoxy_glDrawArraysInstancedBaseInstanceEXT_dispatch_table_thunk;
    epoxy_glDrawArraysInstancedEXT = epoxy_glDrawArraysInstancedEXT_dispatch_table_thunk;
    epoxy_glDrawArraysInstancedNV = epoxy_glDrawArraysInstancedNV_dispatch_table_thunk;
    epoxy_glDrawBuffer = epoxy_glDrawBuffer_dispatch_table_thunk;
    epoxy_glDrawBuffers = epoxy_glDrawBuffers_dispatch_table_thunk;
    epoxy_glDrawBuffersARB = epoxy_glDrawBuffersARB_dispatch_table_thunk;
    epoxy_glDrawBuffersATI = epoxy_glDrawBuffersATI_dispatch_table_thunk;
    epoxy_glDrawBuffersEXT = epoxy_glDrawBuffersEXT_dispatch_table_thunk;
    epoxy_glDrawBuffersIndexedEXT = epoxy_glDrawBuffersIndexedEXT_dispatch_table_thunk;
    epoxy_glDrawBuffersNV = epoxy_glDrawBuffersNV_dispatch_table_thunk;
    epoxy_glDrawCommandsAddressNV = epoxy_glDrawCommandsAddressNV_dispatch_table_thunk;
    epoxy_glDrawCommandsNV = epoxy_glDrawCommandsNV_dispatch_table_thunk;
    epoxy_glDrawCommandsStatesAddressNV = epoxy_glDrawCommandsStatesAddressNV_dispatch_table_thunk;
    epoxy_glDrawCommandsStatesNV = epoxy_glDrawCommandsStatesNV_dispatch_table_thunk;
    epoxy_glDrawElementArrayAPPLE = epoxy_glDrawElementArrayAPPLE_dispatch_table_thunk;
    epoxy_glDrawElementArrayATI = epoxy_glDrawElementArrayATI_dispatch_table_thunk;
    epoxy_glDrawElements = epoxy_glDrawElements_dispatch_table_thunk;
    epoxy_glDrawElementsBaseVertex = epoxy_glDrawElementsBaseVertex_dispatch_table_thunk;
    epoxy_glDrawElementsBaseVertexEXT = epoxy_glDrawElementsBaseVertexEXT_dispatch_table_thunk;
    epoxy_glDrawElementsBaseVertexOES = epoxy_glDrawElementsBaseVertexOES_dispatch_table_thunk;
    epoxy_glDrawElementsIndirect = epoxy_glDrawElementsIndirect_dispatch_table_thunk;
    epoxy_glDrawElementsInstanced = epoxy_glDrawElementsInstanced_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedANGLE = epoxy_glDrawElementsInstancedANGLE_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedARB = epoxy_glDrawElementsInstancedARB_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedBaseInstance = epoxy_glDrawElementsInstancedBaseInstance_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedBaseInstanceEXT = epoxy_glDrawElementsInstancedBaseInstanceEXT_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedBaseVertex = epoxy_glDrawElementsInstancedBaseVertex_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedBaseVertexBaseInstance = epoxy_glDrawElementsInstancedBaseVertexBaseInstance_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedBaseVertexBaseInstanceEXT = epoxy_glDrawElementsInstancedBaseVertexBaseInstanceEXT_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedBaseVertexEXT = epoxy_glDrawElementsInstancedBaseVertexEXT_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedBaseVertexOES = epoxy_glDrawElementsInstancedBaseVertexOES_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedEXT = epoxy_glDrawElementsInstancedEXT_dispatch_table_thunk;
    epoxy_glDrawElementsInstancedNV = epoxy_glDrawElementsInstancedNV_dispatch_table_thunk;
    epoxy_glDrawMeshArraysSUN = epoxy_glDrawMeshArraysSUN_dispatch_table_thunk;
    epoxy_glDrawPixels = epoxy_glDrawPixels_dispatch_table_thunk;
    epoxy_glDrawRangeElementArrayAPPLE = epoxy_glDrawRangeElementArrayAPPLE_dispatch_table_thunk;
    epoxy_glDrawRangeElementArrayATI = epoxy_glDrawRangeElementArrayATI_dispatch_table_thunk;
    epoxy_glDrawRangeElements = epoxy_glDrawRangeElements_dispatch_table_thunk;
    epoxy_glDrawRangeElementsBaseVertex = epoxy_glDrawRangeElementsBaseVertex_dispatch_table_thunk;
    epoxy_glDrawRangeElementsBaseVertexEXT = epoxy_glDrawRangeElementsBaseVertexEXT_dispatch_table_thunk;
    epoxy_glDrawRangeElementsBaseVertexOES = epoxy_glDrawRangeElementsBaseVertexOES_dispatch_table_thunk;
    epoxy_glDrawRangeElementsEXT = epoxy_glDrawRangeElementsEXT_dispatch_table_thunk;
    epoxy_glDrawTexfOES = epoxy_glDrawTexfOES_dispatch_table_thunk;
    epoxy_glDrawTexfvOES = epoxy_glDrawTexfvOES_dispatch_table_thunk;
    epoxy_glDrawTexiOES = epoxy_glDrawTexiOES_dispatch_table_thunk;
    epoxy_glDrawTexivOES = epoxy_glDrawTexivOES_dispatch_table_thunk;
    epoxy_glDrawTexsOES = epoxy_glDrawTexsOES_dispatch_table_thunk;
    epoxy_glDrawTexsvOES = epoxy_glDrawTexsvOES_dispatch_table_thunk;
    epoxy_glDrawTextureNV = epoxy_glDrawTextureNV_dispatch_table_thunk;
    epoxy_glDrawTexxOES = epoxy_glDrawTexxOES_dispatch_table_thunk;
    epoxy_glDrawTexxvOES = epoxy_glDrawTexxvOES_dispatch_table_thunk;
    epoxy_glDrawTransformFeedback = epoxy_glDrawTransformFeedback_dispatch_table_thunk;
    epoxy_glDrawTransformFeedbackInstanced = epoxy_glDrawTransformFeedbackInstanced_dispatch_table_thunk;
    epoxy_glDrawTransformFeedbackNV = epoxy_glDrawTransformFeedbackNV_dispatch_table_thunk;
    epoxy_glDrawTransformFeedbackStream = epoxy_glDrawTransformFeedbackStream_dispatch_table_thunk;
    epoxy_glDrawTransformFeedbackStreamInstanced = epoxy_glDrawTransformFeedbackStreamInstanced_dispatch_table_thunk;
    epoxy_glEGLImageTargetRenderbufferStorageOES = epoxy_glEGLImageTargetRenderbufferStorageOES_dispatch_table_thunk;
    epoxy_glEGLImageTargetTexture2DOES = epoxy_glEGLImageTargetTexture2DOES_dispatch_table_thunk;
    epoxy_glEdgeFlag = epoxy_glEdgeFlag_dispatch_table_thunk;
    epoxy_glEdgeFlagFormatNV = epoxy_glEdgeFlagFormatNV_dispatch_table_thunk;
    epoxy_glEdgeFlagPointer = epoxy_glEdgeFlagPointer_dispatch_table_thunk;
    epoxy_glEdgeFlagPointerEXT = epoxy_glEdgeFlagPointerEXT_dispatch_table_thunk;
    epoxy_glEdgeFlagPointerListIBM = epoxy_glEdgeFlagPointerListIBM_dispatch_table_thunk;
    epoxy_glEdgeFlagv = epoxy_glEdgeFlagv_dispatch_table_thunk;
    epoxy_glElementPointerAPPLE = epoxy_glElementPointerAPPLE_dispatch_table_thunk;
    epoxy_glElementPointerATI = epoxy_glElementPointerATI_dispatch_table_thunk;
    epoxy_glEnable = epoxy_glEnable_dispatch_table_thunk;
    epoxy_glEnableClientState = epoxy_glEnableClientState_dispatch_table_thunk;
    epoxy_glEnableClientStateIndexedEXT = epoxy_glEnableClientStateIndexedEXT_dispatch_table_thunk;
    epoxy_glEnableClientStateiEXT = epoxy_glEnableClientStateiEXT_dispatch_table_thunk;
    epoxy_glEnableDriverControlQCOM = epoxy_glEnableDriverControlQCOM_dispatch_table_thunk;
    epoxy_glEnableIndexedEXT = epoxy_glEnableIndexedEXT_dispatch_table_thunk;
    epoxy_glEnableVariantClientStateEXT = epoxy_glEnableVariantClientStateEXT_dispatch_table_thunk;
    epoxy_glEnableVertexArrayAttrib = epoxy_glEnableVertexArrayAttrib_dispatch_table_thunk;
    epoxy_glEnableVertexArrayAttribEXT = epoxy_glEnableVertexArrayAttribEXT_dispatch_table_thunk;
    epoxy_glEnableVertexArrayEXT = epoxy_glEnableVertexArrayEXT_dispatch_table_thunk;
    epoxy_glEnableVertexAttribAPPLE = epoxy_glEnableVertexAttribAPPLE_dispatch_table_thunk;
    epoxy_glEnableVertexAttribArray = epoxy_glEnableVertexAttribArray_dispatch_table_thunk;
    epoxy_glEnableVertexAttribArrayARB = epoxy_glEnableVertexAttribArrayARB_dispatch_table_thunk;
    epoxy_glEnablei = epoxy_glEnablei_dispatch_table_thunk;
    epoxy_glEnableiEXT = epoxy_glEnableiEXT_dispatch_table_thunk;
    epoxy_glEnableiNV = epoxy_glEnableiNV_dispatch_table_thunk;
    epoxy_glEnableiOES = epoxy_glEnableiOES_dispatch_table_thunk;
    epoxy_glEnd_unwrapped = epoxy_glEnd_unwrapped_dispatch_table_thunk;
    epoxy_glEndConditionalRender = epoxy_glEndConditionalRender_dispatch_table_thunk;
    epoxy_glEndConditionalRenderNV = epoxy_glEndConditionalRenderNV_dispatch_table_thunk;
    epoxy_glEndConditionalRenderNVX = epoxy_glEndConditionalRenderNVX_dispatch_table_thunk;
    epoxy_glEndFragmentShaderATI = epoxy_glEndFragmentShaderATI_dispatch_table_thunk;
    epoxy_glEndList = epoxy_glEndList_dispatch_table_thunk;
    epoxy_glEndOcclusionQueryNV = epoxy_glEndOcclusionQueryNV_dispatch_table_thunk;
    epoxy_glEndPerfMonitorAMD = epoxy_glEndPerfMonitorAMD_dispatch_table_thunk;
    epoxy_glEndPerfQueryINTEL = epoxy_glEndPerfQueryINTEL_dispatch_table_thunk;
    epoxy_glEndQuery = epoxy_glEndQuery_dispatch_table_thunk;
    epoxy_glEndQueryARB = epoxy_glEndQueryARB_dispatch_table_thunk;
    epoxy_glEndQueryEXT = epoxy_glEndQueryEXT_dispatch_table_thunk;
    epoxy_glEndQueryIndexed = epoxy_glEndQueryIndexed_dispatch_table_thunk;
    epoxy_glEndTilingQCOM = epoxy_glEndTilingQCOM_dispatch_table_thunk;
    epoxy_glEndTransformFeedback = epoxy_glEndTransformFeedback_dispatch_table_thunk;
    epoxy_glEndTransformFeedbackEXT = epoxy_glEndTransformFeedbackEXT_dispatch_table_thunk;
    epoxy_glEndTransformFeedbackNV = epoxy_glEndTransformFeedbackNV_dispatch_table_thunk;
    epoxy_glEndVertexShaderEXT = epoxy_glEndVertexShaderEXT_dispatch_table_thunk;
    epoxy_glEndVideoCaptureNV = epoxy_glEndVideoCaptureNV_dispatch_table_thunk;
    epoxy_glEvalCoord1d = epoxy_glEvalCoord1d_dispatch_table_thunk;
    epoxy_glEvalCoord1dv = epoxy_glEvalCoord1dv_dispatch_table_thunk;
    epoxy_glEvalCoord1f = epoxy_glEvalCoord1f_dispatch_table_thunk;
    epoxy_glEvalCoord1fv = epoxy_glEvalCoord1fv_dispatch_table_thunk;
    epoxy_glEvalCoord1xOES = epoxy_glEvalCoord1xOES_dispatch_table_thunk;
    epoxy_glEvalCoord1xvOES = epoxy_glEvalCoord1xvOES_dispatch_table_thunk;
    epoxy_glEvalCoord2d = epoxy_glEvalCoord2d_dispatch_table_thunk;
    epoxy_glEvalCoord2dv = epoxy_glEvalCoord2dv_dispatch_table_thunk;
    epoxy_glEvalCoord2f = epoxy_glEvalCoord2f_dispatch_table_thunk;
    epoxy_glEvalCoord2fv = epoxy_glEvalCoord2fv_dispatch_table_thunk;
    epoxy_glEvalCoord2xOES = epoxy_glEvalCoord2xOES_dispatch_table_thunk;
    epoxy_glEvalCoord2xvOES = epoxy_glEvalCoord2xvOES_dispatch_table_thunk;
    epoxy_glEvalMapsNV = epoxy_glEvalMapsNV_dispatch_table_thunk;
    epoxy_glEvalMesh1 = epoxy_glEvalMesh1_dispatch_table_thunk;
    epoxy_glEvalMesh2 = epoxy_glEvalMesh2_dispatch_table_thunk;
    epoxy_glEvalPoint1 = epoxy_glEvalPoint1_dispatch_table_thunk;
    epoxy_glEvalPoint2 = epoxy_glEvalPoint2_dispatch_table_thunk;
    epoxy_glExecuteProgramNV = epoxy_glExecuteProgramNV_dispatch_table_thunk;
    epoxy_glExtGetBufferPointervQCOM = epoxy_glExtGetBufferPointervQCOM_dispatch_table_thunk;
    epoxy_glExtGetBuffersQCOM = epoxy_glExtGetBuffersQCOM_dispatch_table_thunk;
    epoxy_glExtGetFramebuffersQCOM = epoxy_glExtGetFramebuffersQCOM_dispatch_table_thunk;
    epoxy_glExtGetProgramBinarySourceQCOM = epoxy_glExtGetProgramBinarySourceQCOM_dispatch_table_thunk;
    epoxy_glExtGetProgramsQCOM = epoxy_glExtGetProgramsQCOM_dispatch_table_thunk;
    epoxy_glExtGetRenderbuffersQCOM = epoxy_glExtGetRenderbuffersQCOM_dispatch_table_thunk;
    epoxy_glExtGetShadersQCOM = epoxy_glExtGetShadersQCOM_dispatch_table_thunk;
    epoxy_glExtGetTexLevelParameterivQCOM = epoxy_glExtGetTexLevelParameterivQCOM_dispatch_table_thunk;
    epoxy_glExtGetTexSubImageQCOM = epoxy_glExtGetTexSubImageQCOM_dispatch_table_thunk;
    epoxy_glExtGetTexturesQCOM = epoxy_glExtGetTexturesQCOM_dispatch_table_thunk;
    epoxy_glExtIsProgramBinaryQCOM = epoxy_glExtIsProgramBinaryQCOM_dispatch_table_thunk;
    epoxy_glExtTexObjectStateOverrideiQCOM = epoxy_glExtTexObjectStateOverrideiQCOM_dispatch_table_thunk;
    epoxy_glExtractComponentEXT = epoxy_glExtractComponentEXT_dispatch_table_thunk;
    epoxy_glFeedbackBuffer = epoxy_glFeedbackBuffer_dispatch_table_thunk;
    epoxy_glFeedbackBufferxOES = epoxy_glFeedbackBufferxOES_dispatch_table_thunk;
    epoxy_glFenceSync = epoxy_glFenceSync_dispatch_table_thunk;
    epoxy_glFenceSyncAPPLE = epoxy_glFenceSyncAPPLE_dispatch_table_thunk;
    epoxy_glFinalCombinerInputNV = epoxy_glFinalCombinerInputNV_dispatch_table_thunk;
    epoxy_glFinish = epoxy_glFinish_dispatch_table_thunk;
    epoxy_glFinishAsyncSGIX = epoxy_glFinishAsyncSGIX_dispatch_table_thunk;
    epoxy_glFinishFenceAPPLE = epoxy_glFinishFenceAPPLE_dispatch_table_thunk;
    epoxy_glFinishFenceNV = epoxy_glFinishFenceNV_dispatch_table_thunk;
    epoxy_glFinishObjectAPPLE = epoxy_glFinishObjectAPPLE_dispatch_table_thunk;
    epoxy_glFinishTextureSUNX = epoxy_glFinishTextureSUNX_dispatch_table_thunk;
    epoxy_glFlush = epoxy_glFlush_dispatch_table_thunk;
    epoxy_glFlushMappedBufferRange = epoxy_glFlushMappedBufferRange_dispatch_table_thunk;
    epoxy_glFlushMappedBufferRangeAPPLE = epoxy_glFlushMappedBufferRangeAPPLE_dispatch_table_thunk;
    epoxy_glFlushMappedBufferRangeEXT = epoxy_glFlushMappedBufferRangeEXT_dispatch_table_thunk;
    epoxy_glFlushMappedNamedBufferRange = epoxy_glFlushMappedNamedBufferRange_dispatch_table_thunk;
    epoxy_glFlushMappedNamedBufferRangeEXT = epoxy_glFlushMappedNamedBufferRangeEXT_dispatch_table_thunk;
    epoxy_glFlushPixelDataRangeNV = epoxy_glFlushPixelDataRangeNV_dispatch_table_thunk;
    epoxy_glFlushRasterSGIX = epoxy_glFlushRasterSGIX_dispatch_table_thunk;
    epoxy_glFlushStaticDataIBM = epoxy_glFlushStaticDataIBM_dispatch_table_thunk;
    epoxy_glFlushVertexArrayRangeAPPLE = epoxy_glFlushVertexArrayRangeAPPLE_dispatch_table_thunk;
    epoxy_glFlushVertexArrayRangeNV = epoxy_glFlushVertexArrayRangeNV_dispatch_table_thunk;
    epoxy_glFogCoordFormatNV = epoxy_glFogCoordFormatNV_dispatch_table_thunk;
    epoxy_glFogCoordPointer = epoxy_glFogCoordPointer_dispatch_table_thunk;
    epoxy_glFogCoordPointerEXT = epoxy_glFogCoordPointerEXT_dispatch_table_thunk;
    epoxy_glFogCoordPointerListIBM = epoxy_glFogCoordPointerListIBM_dispatch_table_thunk;
    epoxy_glFogCoordd = epoxy_glFogCoordd_dispatch_table_thunk;
    epoxy_glFogCoorddEXT = epoxy_glFogCoorddEXT_dispatch_table_thunk;
    epoxy_glFogCoorddv = epoxy_glFogCoorddv_dispatch_table_thunk;
    epoxy_glFogCoorddvEXT = epoxy_glFogCoorddvEXT_dispatch_table_thunk;
    epoxy_glFogCoordf = epoxy_glFogCoordf_dispatch_table_thunk;
    epoxy_glFogCoordfEXT = epoxy_glFogCoordfEXT_dispatch_table_thunk;
    epoxy_glFogCoordfv = epoxy_glFogCoordfv_dispatch_table_thunk;
    epoxy_glFogCoordfvEXT = epoxy_glFogCoordfvEXT_dispatch_table_thunk;
    epoxy_glFogCoordhNV = epoxy_glFogCoordhNV_dispatch_table_thunk;
    epoxy_glFogCoordhvNV = epoxy_glFogCoordhvNV_dispatch_table_thunk;
    epoxy_glFogFuncSGIS = epoxy_glFogFuncSGIS_dispatch_table_thunk;
    epoxy_glFogf = epoxy_glFogf_dispatch_table_thunk;
    epoxy_glFogfv = epoxy_glFogfv_dispatch_table_thunk;
    epoxy_glFogi = epoxy_glFogi_dispatch_table_thunk;
    epoxy_glFogiv = epoxy_glFogiv_dispatch_table_thunk;
    epoxy_glFogx = epoxy_glFogx_dispatch_table_thunk;
    epoxy_glFogxOES = epoxy_glFogxOES_dispatch_table_thunk;
    epoxy_glFogxv = epoxy_glFogxv_dispatch_table_thunk;
    epoxy_glFogxvOES = epoxy_glFogxvOES_dispatch_table_thunk;
    epoxy_glFragmentColorMaterialSGIX = epoxy_glFragmentColorMaterialSGIX_dispatch_table_thunk;
    epoxy_glFragmentCoverageColorNV = epoxy_glFragmentCoverageColorNV_dispatch_table_thunk;
    epoxy_glFragmentLightModelfSGIX = epoxy_glFragmentLightModelfSGIX_dispatch_table_thunk;
    epoxy_glFragmentLightModelfvSGIX = epoxy_glFragmentLightModelfvSGIX_dispatch_table_thunk;
    epoxy_glFragmentLightModeliSGIX = epoxy_glFragmentLightModeliSGIX_dispatch_table_thunk;
    epoxy_glFragmentLightModelivSGIX = epoxy_glFragmentLightModelivSGIX_dispatch_table_thunk;
    epoxy_glFragmentLightfSGIX = epoxy_glFragmentLightfSGIX_dispatch_table_thunk;
    epoxy_glFragmentLightfvSGIX = epoxy_glFragmentLightfvSGIX_dispatch_table_thunk;
    epoxy_glFragmentLightiSGIX = epoxy_glFragmentLightiSGIX_dispatch_table_thunk;
    epoxy_glFragmentLightivSGIX = epoxy_glFragmentLightivSGIX_dispatch_table_thunk;
    epoxy_glFragmentMaterialfSGIX = epoxy_glFragmentMaterialfSGIX_dispatch_table_thunk;
    epoxy_glFragmentMaterialfvSGIX = epoxy_glFragmentMaterialfvSGIX_dispatch_table_thunk;
    epoxy_glFragmentMaterialiSGIX = epoxy_glFragmentMaterialiSGIX_dispatch_table_thunk;
    epoxy_glFragmentMaterialivSGIX = epoxy_glFragmentMaterialivSGIX_dispatch_table_thunk;
    epoxy_glFrameTerminatorGREMEDY = epoxy_glFrameTerminatorGREMEDY_dispatch_table_thunk;
    epoxy_glFrameZoomSGIX = epoxy_glFrameZoomSGIX_dispatch_table_thunk;
    epoxy_glFramebufferDrawBufferEXT = epoxy_glFramebufferDrawBufferEXT_dispatch_table_thunk;
    epoxy_glFramebufferDrawBuffersEXT = epoxy_glFramebufferDrawBuffersEXT_dispatch_table_thunk;
    epoxy_glFramebufferParameteri = epoxy_glFramebufferParameteri_dispatch_table_thunk;
    epoxy_glFramebufferReadBufferEXT = epoxy_glFramebufferReadBufferEXT_dispatch_table_thunk;
    epoxy_glFramebufferRenderbuffer = epoxy_glFramebufferRenderbuffer_dispatch_table_thunk;
    epoxy_glFramebufferRenderbufferEXT = epoxy_glFramebufferRenderbufferEXT_dispatch_table_thunk;
    epoxy_glFramebufferRenderbufferOES = epoxy_glFramebufferRenderbufferOES_dispatch_table_thunk;
    epoxy_glFramebufferSampleLocationsfvNV = epoxy_glFramebufferSampleLocationsfvNV_dispatch_table_thunk;
    epoxy_glFramebufferTexture = epoxy_glFramebufferTexture_dispatch_table_thunk;
    epoxy_glFramebufferTexture1D = epoxy_glFramebufferTexture1D_dispatch_table_thunk;
    epoxy_glFramebufferTexture1DEXT = epoxy_glFramebufferTexture1DEXT_dispatch_table_thunk;
    epoxy_glFramebufferTexture2D = epoxy_glFramebufferTexture2D_dispatch_table_thunk;
    epoxy_glFramebufferTexture2DEXT = epoxy_glFramebufferTexture2DEXT_dispatch_table_thunk;
    epoxy_glFramebufferTexture2DMultisampleEXT = epoxy_glFramebufferTexture2DMultisampleEXT_dispatch_table_thunk;
    epoxy_glFramebufferTexture2DMultisampleIMG = epoxy_glFramebufferTexture2DMultisampleIMG_dispatch_table_thunk;
    epoxy_glFramebufferTexture2DOES = epoxy_glFramebufferTexture2DOES_dispatch_table_thunk;
    epoxy_glFramebufferTexture3D = epoxy_glFramebufferTexture3D_dispatch_table_thunk;
    epoxy_glFramebufferTexture3DEXT = epoxy_glFramebufferTexture3DEXT_dispatch_table_thunk;
    epoxy_glFramebufferTexture3DOES = epoxy_glFramebufferTexture3DOES_dispatch_table_thunk;
    epoxy_glFramebufferTextureARB = epoxy_glFramebufferTextureARB_dispatch_table_thunk;
    epoxy_glFramebufferTextureEXT = epoxy_glFramebufferTextureEXT_dispatch_table_thunk;
    epoxy_glFramebufferTextureFaceARB = epoxy_glFramebufferTextureFaceARB_dispatch_table_thunk;
    epoxy_glFramebufferTextureFaceEXT = epoxy_glFramebufferTextureFaceEXT_dispatch_table_thunk;
    epoxy_glFramebufferTextureLayer = epoxy_glFramebufferTextureLayer_dispatch_table_thunk;
    epoxy_glFramebufferTextureLayerARB = epoxy_glFramebufferTextureLayerARB_dispatch_table_thunk;
    epoxy_glFramebufferTextureLayerEXT = epoxy_glFramebufferTextureLayerEXT_dispatch_table_thunk;
    epoxy_glFramebufferTextureMultiviewOVR = epoxy_glFramebufferTextureMultiviewOVR_dispatch_table_thunk;
    epoxy_glFramebufferTextureOES = epoxy_glFramebufferTextureOES_dispatch_table_thunk;
    epoxy_glFreeObjectBufferATI = epoxy_glFreeObjectBufferATI_dispatch_table_thunk;
    epoxy_glFrontFace = epoxy_glFrontFace_dispatch_table_thunk;
    epoxy_glFrustum = epoxy_glFrustum_dispatch_table_thunk;
    epoxy_glFrustumf = epoxy_glFrustumf_dispatch_table_thunk;
    epoxy_glFrustumfOES = epoxy_glFrustumfOES_dispatch_table_thunk;
    epoxy_glFrustumx = epoxy_glFrustumx_dispatch_table_thunk;
    epoxy_glFrustumxOES = epoxy_glFrustumxOES_dispatch_table_thunk;
    epoxy_glGenAsyncMarkersSGIX = epoxy_glGenAsyncMarkersSGIX_dispatch_table_thunk;
    epoxy_glGenBuffers = epoxy_glGenBuffers_dispatch_table_thunk;
    epoxy_glGenBuffersARB = epoxy_glGenBuffersARB_dispatch_table_thunk;
    epoxy_glGenFencesAPPLE = epoxy_glGenFencesAPPLE_dispatch_table_thunk;
    epoxy_glGenFencesNV = epoxy_glGenFencesNV_dispatch_table_thunk;
    epoxy_glGenFragmentShadersATI = epoxy_glGenFragmentShadersATI_dispatch_table_thunk;
    epoxy_glGenFramebuffers = epoxy_glGenFramebuffers_dispatch_table_thunk;
    epoxy_glGenFramebuffersEXT = epoxy_glGenFramebuffersEXT_dispatch_table_thunk;
    epoxy_glGenFramebuffersOES = epoxy_glGenFramebuffersOES_dispatch_table_thunk;
    epoxy_glGenLists = epoxy_glGenLists_dispatch_table_thunk;
    epoxy_glGenNamesAMD = epoxy_glGenNamesAMD_dispatch_table_thunk;
    epoxy_glGenOcclusionQueriesNV = epoxy_glGenOcclusionQueriesNV_dispatch_table_thunk;
    epoxy_glGenPathsNV = epoxy_glGenPathsNV_dispatch_table_thunk;
    epoxy_glGenPerfMonitorsAMD = epoxy_glGenPerfMonitorsAMD_dispatch_table_thunk;
    epoxy_glGenProgramPipelines = epoxy_glGenProgramPipelines_dispatch_table_thunk;
    epoxy_glGenProgramPipelinesEXT = epoxy_glGenProgramPipelinesEXT_dispatch_table_thunk;
    epoxy_glGenProgramsARB = epoxy_glGenProgramsARB_dispatch_table_thunk;
    epoxy_glGenProgramsNV = epoxy_glGenProgramsNV_dispatch_table_thunk;
    epoxy_glGenQueries = epoxy_glGenQueries_dispatch_table_thunk;
    epoxy_glGenQueriesARB = epoxy_glGenQueriesARB_dispatch_table_thunk;
    epoxy_glGenQueriesEXT = epoxy_glGenQueriesEXT_dispatch_table_thunk;
    epoxy_glGenRenderbuffers = epoxy_glGenRenderbuffers_dispatch_table_thunk;
    epoxy_glGenRenderbuffersEXT = epoxy_glGenRenderbuffersEXT_dispatch_table_thunk;
    epoxy_glGenRenderbuffersOES = epoxy_glGenRenderbuffersOES_dispatch_table_thunk;
    epoxy_glGenSamplers = epoxy_glGenSamplers_dispatch_table_thunk;
    epoxy_glGenSymbolsEXT = epoxy_glGenSymbolsEXT_dispatch_table_thunk;
    epoxy_glGenTextures = epoxy_glGenTextures_dispatch_table_thunk;
    epoxy_glGenTexturesEXT = epoxy_glGenTexturesEXT_dispatch_table_thunk;
    epoxy_glGenTransformFeedbacks = epoxy_glGenTransformFeedbacks_dispatch_table_thunk;
    epoxy_glGenTransformFeedbacksNV = epoxy_glGenTransformFeedbacksNV_dispatch_table_thunk;
    epoxy_glGenVertexArrays = epoxy_glGenVertexArrays_dispatch_table_thunk;
    epoxy_glGenVertexArraysAPPLE = epoxy_glGenVertexArraysAPPLE_dispatch_table_thunk;
    epoxy_glGenVertexArraysOES = epoxy_glGenVertexArraysOES_dispatch_table_thunk;
    epoxy_glGenVertexShadersEXT = epoxy_glGenVertexShadersEXT_dispatch_table_thunk;
    epoxy_glGenerateMipmap = epoxy_glGenerateMipmap_dispatch_table_thunk;
    epoxy_glGenerateMipmapEXT = epoxy_glGenerateMipmapEXT_dispatch_table_thunk;
    epoxy_glGenerateMipmapOES = epoxy_glGenerateMipmapOES_dispatch_table_thunk;
    epoxy_glGenerateMultiTexMipmapEXT = epoxy_glGenerateMultiTexMipmapEXT_dispatch_table_thunk;
    epoxy_glGenerateTextureMipmap = epoxy_glGenerateTextureMipmap_dispatch_table_thunk;
    epoxy_glGenerateTextureMipmapEXT = epoxy_glGenerateTextureMipmapEXT_dispatch_table_thunk;
    epoxy_glGetActiveAtomicCounterBufferiv = epoxy_glGetActiveAtomicCounterBufferiv_dispatch_table_thunk;
    epoxy_glGetActiveAttrib = epoxy_glGetActiveAttrib_dispatch_table_thunk;
    epoxy_glGetActiveAttribARB = epoxy_glGetActiveAttribARB_dispatch_table_thunk;
    epoxy_glGetActiveSubroutineName = epoxy_glGetActiveSubroutineName_dispatch_table_thunk;
    epoxy_glGetActiveSubroutineUniformName = epoxy_glGetActiveSubroutineUniformName_dispatch_table_thunk;
    epoxy_glGetActiveSubroutineUniformiv = epoxy_glGetActiveSubroutineUniformiv_dispatch_table_thunk;
    epoxy_glGetActiveUniform = epoxy_glGetActiveUniform_dispatch_table_thunk;
    epoxy_glGetActiveUniformARB = epoxy_glGetActiveUniformARB_dispatch_table_thunk;
    epoxy_glGetActiveUniformBlockName = epoxy_glGetActiveUniformBlockName_dispatch_table_thunk;
    epoxy_glGetActiveUniformBlockiv = epoxy_glGetActiveUniformBlockiv_dispatch_table_thunk;
    epoxy_glGetActiveUniformName = epoxy_glGetActiveUniformName_dispatch_table_thunk;
    epoxy_glGetActiveUniformsiv = epoxy_glGetActiveUniformsiv_dispatch_table_thunk;
    epoxy_glGetActiveVaryingNV = epoxy_glGetActiveVaryingNV_dispatch_table_thunk;
    epoxy_glGetArrayObjectfvATI = epoxy_glGetArrayObjectfvATI_dispatch_table_thunk;
    epoxy_glGetArrayObjectivATI = epoxy_glGetArrayObjectivATI_dispatch_table_thunk;
    epoxy_glGetAttachedObjectsARB = epoxy_glGetAttachedObjectsARB_dispatch_table_thunk;
    epoxy_glGetAttachedShaders = epoxy_glGetAttachedShaders_dispatch_table_thunk;
    epoxy_glGetAttribLocation = epoxy_glGetAttribLocation_dispatch_table_thunk;
    epoxy_glGetAttribLocationARB = epoxy_glGetAttribLocationARB_dispatch_table_thunk;
    epoxy_glGetBooleanIndexedvEXT = epoxy_glGetBooleanIndexedvEXT_dispatch_table_thunk;
    epoxy_glGetBooleani_v = epoxy_glGetBooleani_v_dispatch_table_thunk;
    epoxy_glGetBooleanv = epoxy_glGetBooleanv_dispatch_table_thunk;
    epoxy_glGetBufferParameteri64v = epoxy_glGetBufferParameteri64v_dispatch_table_thunk;
    epoxy_glGetBufferParameteriv = epoxy_glGetBufferParameteriv_dispatch_table_thunk;
    epoxy_glGetBufferParameterivARB = epoxy_glGetBufferParameterivARB_dispatch_table_thunk;
    epoxy_glGetBufferParameterui64vNV = epoxy_glGetBufferParameterui64vNV_dispatch_table_thunk;
    epoxy_glGetBufferPointerv = epoxy_glGetBufferPointerv_dispatch_table_thunk;
    epoxy_glGetBufferPointervARB = epoxy_glGetBufferPointervARB_dispatch_table_thunk;
    epoxy_glGetBufferPointervOES = epoxy_glGetBufferPointervOES_dispatch_table_thunk;
    epoxy_glGetBufferSubData = epoxy_glGetBufferSubData_dispatch_table_thunk;
    epoxy_glGetBufferSubDataARB = epoxy_glGetBufferSubDataARB_dispatch_table_thunk;
    epoxy_glGetClipPlane = epoxy_glGetClipPlane_dispatch_table_thunk;
    epoxy_glGetClipPlanef = epoxy_glGetClipPlanef_dispatch_table_thunk;
    epoxy_glGetClipPlanefOES = epoxy_glGetClipPlanefOES_dispatch_table_thunk;
    epoxy_glGetClipPlanex = epoxy_glGetClipPlanex_dispatch_table_thunk;
    epoxy_glGetClipPlanexOES = epoxy_glGetClipPlanexOES_dispatch_table_thunk;
    epoxy_glGetColorTable = epoxy_glGetColorTable_dispatch_table_thunk;
    epoxy_glGetColorTableEXT = epoxy_glGetColorTableEXT_dispatch_table_thunk;
    epoxy_glGetColorTableParameterfv = epoxy_glGetColorTableParameterfv_dispatch_table_thunk;
    epoxy_glGetColorTableParameterfvEXT = epoxy_glGetColorTableParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetColorTableParameterfvSGI = epoxy_glGetColorTableParameterfvSGI_dispatch_table_thunk;
    epoxy_glGetColorTableParameteriv = epoxy_glGetColorTableParameteriv_dispatch_table_thunk;
    epoxy_glGetColorTableParameterivEXT = epoxy_glGetColorTableParameterivEXT_dispatch_table_thunk;
    epoxy_glGetColorTableParameterivSGI = epoxy_glGetColorTableParameterivSGI_dispatch_table_thunk;
    epoxy_glGetColorTableSGI = epoxy_glGetColorTableSGI_dispatch_table_thunk;
    epoxy_glGetCombinerInputParameterfvNV = epoxy_glGetCombinerInputParameterfvNV_dispatch_table_thunk;
    epoxy_glGetCombinerInputParameterivNV = epoxy_glGetCombinerInputParameterivNV_dispatch_table_thunk;
    epoxy_glGetCombinerOutputParameterfvNV = epoxy_glGetCombinerOutputParameterfvNV_dispatch_table_thunk;
    epoxy_glGetCombinerOutputParameterivNV = epoxy_glGetCombinerOutputParameterivNV_dispatch_table_thunk;
    epoxy_glGetCombinerStageParameterfvNV = epoxy_glGetCombinerStageParameterfvNV_dispatch_table_thunk;
    epoxy_glGetCommandHeaderNV = epoxy_glGetCommandHeaderNV_dispatch_table_thunk;
    epoxy_glGetCompressedMultiTexImageEXT = epoxy_glGetCompressedMultiTexImageEXT_dispatch_table_thunk;
    epoxy_glGetCompressedTexImage = epoxy_glGetCompressedTexImage_dispatch_table_thunk;
    epoxy_glGetCompressedTexImageARB = epoxy_glGetCompressedTexImageARB_dispatch_table_thunk;
    epoxy_glGetCompressedTextureImage = epoxy_glGetCompressedTextureImage_dispatch_table_thunk;
    epoxy_glGetCompressedTextureImageEXT = epoxy_glGetCompressedTextureImageEXT_dispatch_table_thunk;
    epoxy_glGetCompressedTextureSubImage = epoxy_glGetCompressedTextureSubImage_dispatch_table_thunk;
    epoxy_glGetConvolutionFilter = epoxy_glGetConvolutionFilter_dispatch_table_thunk;
    epoxy_glGetConvolutionFilterEXT = epoxy_glGetConvolutionFilterEXT_dispatch_table_thunk;
    epoxy_glGetConvolutionParameterfv = epoxy_glGetConvolutionParameterfv_dispatch_table_thunk;
    epoxy_glGetConvolutionParameterfvEXT = epoxy_glGetConvolutionParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetConvolutionParameteriv = epoxy_glGetConvolutionParameteriv_dispatch_table_thunk;
    epoxy_glGetConvolutionParameterivEXT = epoxy_glGetConvolutionParameterivEXT_dispatch_table_thunk;
    epoxy_glGetConvolutionParameterxvOES = epoxy_glGetConvolutionParameterxvOES_dispatch_table_thunk;
    epoxy_glGetCoverageModulationTableNV = epoxy_glGetCoverageModulationTableNV_dispatch_table_thunk;
    epoxy_glGetDebugMessageLog = epoxy_glGetDebugMessageLog_dispatch_table_thunk;
    epoxy_glGetDebugMessageLogAMD = epoxy_glGetDebugMessageLogAMD_dispatch_table_thunk;
    epoxy_glGetDebugMessageLogARB = epoxy_glGetDebugMessageLogARB_dispatch_table_thunk;
    epoxy_glGetDebugMessageLogKHR = epoxy_glGetDebugMessageLogKHR_dispatch_table_thunk;
    epoxy_glGetDetailTexFuncSGIS = epoxy_glGetDetailTexFuncSGIS_dispatch_table_thunk;
    epoxy_glGetDoubleIndexedvEXT = epoxy_glGetDoubleIndexedvEXT_dispatch_table_thunk;
    epoxy_glGetDoublei_v = epoxy_glGetDoublei_v_dispatch_table_thunk;
    epoxy_glGetDoublei_vEXT = epoxy_glGetDoublei_vEXT_dispatch_table_thunk;
    epoxy_glGetDoublev = epoxy_glGetDoublev_dispatch_table_thunk;
    epoxy_glGetDriverControlStringQCOM = epoxy_glGetDriverControlStringQCOM_dispatch_table_thunk;
    epoxy_glGetDriverControlsQCOM = epoxy_glGetDriverControlsQCOM_dispatch_table_thunk;
    epoxy_glGetError = epoxy_glGetError_dispatch_table_thunk;
    epoxy_glGetFenceivNV = epoxy_glGetFenceivNV_dispatch_table_thunk;
    epoxy_glGetFinalCombinerInputParameterfvNV = epoxy_glGetFinalCombinerInputParameterfvNV_dispatch_table_thunk;
    epoxy_glGetFinalCombinerInputParameterivNV = epoxy_glGetFinalCombinerInputParameterivNV_dispatch_table_thunk;
    epoxy_glGetFirstPerfQueryIdINTEL = epoxy_glGetFirstPerfQueryIdINTEL_dispatch_table_thunk;
    epoxy_glGetFixedv = epoxy_glGetFixedv_dispatch_table_thunk;
    epoxy_glGetFixedvOES = epoxy_glGetFixedvOES_dispatch_table_thunk;
    epoxy_glGetFloatIndexedvEXT = epoxy_glGetFloatIndexedvEXT_dispatch_table_thunk;
    epoxy_glGetFloati_v = epoxy_glGetFloati_v_dispatch_table_thunk;
    epoxy_glGetFloati_vEXT = epoxy_glGetFloati_vEXT_dispatch_table_thunk;
    epoxy_glGetFloati_vNV = epoxy_glGetFloati_vNV_dispatch_table_thunk;
    epoxy_glGetFloatv = epoxy_glGetFloatv_dispatch_table_thunk;
    epoxy_glGetFogFuncSGIS = epoxy_glGetFogFuncSGIS_dispatch_table_thunk;
    epoxy_glGetFragDataIndex = epoxy_glGetFragDataIndex_dispatch_table_thunk;
    epoxy_glGetFragDataLocation = epoxy_glGetFragDataLocation_dispatch_table_thunk;
    epoxy_glGetFragDataLocationEXT = epoxy_glGetFragDataLocationEXT_dispatch_table_thunk;
    epoxy_glGetFragmentLightfvSGIX = epoxy_glGetFragmentLightfvSGIX_dispatch_table_thunk;
    epoxy_glGetFragmentLightivSGIX = epoxy_glGetFragmentLightivSGIX_dispatch_table_thunk;
    epoxy_glGetFragmentMaterialfvSGIX = epoxy_glGetFragmentMaterialfvSGIX_dispatch_table_thunk;
    epoxy_glGetFragmentMaterialivSGIX = epoxy_glGetFragmentMaterialivSGIX_dispatch_table_thunk;
    epoxy_glGetFramebufferAttachmentParameteriv = epoxy_glGetFramebufferAttachmentParameteriv_dispatch_table_thunk;
    epoxy_glGetFramebufferAttachmentParameterivEXT = epoxy_glGetFramebufferAttachmentParameterivEXT_dispatch_table_thunk;
    epoxy_glGetFramebufferAttachmentParameterivOES = epoxy_glGetFramebufferAttachmentParameterivOES_dispatch_table_thunk;
    epoxy_glGetFramebufferParameteriv = epoxy_glGetFramebufferParameteriv_dispatch_table_thunk;
    epoxy_glGetFramebufferParameterivEXT = epoxy_glGetFramebufferParameterivEXT_dispatch_table_thunk;
    epoxy_glGetGraphicsResetStatus = epoxy_glGetGraphicsResetStatus_dispatch_table_thunk;
    epoxy_glGetGraphicsResetStatusARB = epoxy_glGetGraphicsResetStatusARB_dispatch_table_thunk;
    epoxy_glGetGraphicsResetStatusEXT = epoxy_glGetGraphicsResetStatusEXT_dispatch_table_thunk;
    epoxy_glGetGraphicsResetStatusKHR = epoxy_glGetGraphicsResetStatusKHR_dispatch_table_thunk;
    epoxy_glGetHandleARB = epoxy_glGetHandleARB_dispatch_table_thunk;
    epoxy_glGetHistogram = epoxy_glGetHistogram_dispatch_table_thunk;
    epoxy_glGetHistogramEXT = epoxy_glGetHistogramEXT_dispatch_table_thunk;
    epoxy_glGetHistogramParameterfv = epoxy_glGetHistogramParameterfv_dispatch_table_thunk;
    epoxy_glGetHistogramParameterfvEXT = epoxy_glGetHistogramParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetHistogramParameteriv = epoxy_glGetHistogramParameteriv_dispatch_table_thunk;
    epoxy_glGetHistogramParameterivEXT = epoxy_glGetHistogramParameterivEXT_dispatch_table_thunk;
    epoxy_glGetHistogramParameterxvOES = epoxy_glGetHistogramParameterxvOES_dispatch_table_thunk;
    epoxy_glGetImageHandleARB = epoxy_glGetImageHandleARB_dispatch_table_thunk;
    epoxy_glGetImageHandleNV = epoxy_glGetImageHandleNV_dispatch_table_thunk;
    epoxy_glGetImageTransformParameterfvHP = epoxy_glGetImageTransformParameterfvHP_dispatch_table_thunk;
    epoxy_glGetImageTransformParameterivHP = epoxy_glGetImageTransformParameterivHP_dispatch_table_thunk;
    epoxy_glGetInfoLogARB = epoxy_glGetInfoLogARB_dispatch_table_thunk;
    epoxy_glGetInstrumentsSGIX = epoxy_glGetInstrumentsSGIX_dispatch_table_thunk;
    epoxy_glGetInteger64i_v = epoxy_glGetInteger64i_v_dispatch_table_thunk;
    epoxy_glGetInteger64v = epoxy_glGetInteger64v_dispatch_table_thunk;
    epoxy_glGetInteger64vAPPLE = epoxy_glGetInteger64vAPPLE_dispatch_table_thunk;
    epoxy_glGetIntegerIndexedvEXT = epoxy_glGetIntegerIndexedvEXT_dispatch_table_thunk;
    epoxy_glGetIntegeri_v = epoxy_glGetIntegeri_v_dispatch_table_thunk;
    epoxy_glGetIntegeri_vEXT = epoxy_glGetIntegeri_vEXT_dispatch_table_thunk;
    epoxy_glGetIntegerui64i_vNV = epoxy_glGetIntegerui64i_vNV_dispatch_table_thunk;
    epoxy_glGetIntegerui64vNV = epoxy_glGetIntegerui64vNV_dispatch_table_thunk;
    epoxy_glGetIntegerv = epoxy_glGetIntegerv_dispatch_table_thunk;
    epoxy_glGetInternalformatSampleivNV = epoxy_glGetInternalformatSampleivNV_dispatch_table_thunk;
    epoxy_glGetInternalformati64v = epoxy_glGetInternalformati64v_dispatch_table_thunk;
    epoxy_glGetInternalformativ = epoxy_glGetInternalformativ_dispatch_table_thunk;
    epoxy_glGetInvariantBooleanvEXT = epoxy_glGetInvariantBooleanvEXT_dispatch_table_thunk;
    epoxy_glGetInvariantFloatvEXT = epoxy_glGetInvariantFloatvEXT_dispatch_table_thunk;
    epoxy_glGetInvariantIntegervEXT = epoxy_glGetInvariantIntegervEXT_dispatch_table_thunk;
    epoxy_glGetLightfv = epoxy_glGetLightfv_dispatch_table_thunk;
    epoxy_glGetLightiv = epoxy_glGetLightiv_dispatch_table_thunk;
    epoxy_glGetLightxOES = epoxy_glGetLightxOES_dispatch_table_thunk;
    epoxy_glGetLightxv = epoxy_glGetLightxv_dispatch_table_thunk;
    epoxy_glGetLightxvOES = epoxy_glGetLightxvOES_dispatch_table_thunk;
    epoxy_glGetListParameterfvSGIX = epoxy_glGetListParameterfvSGIX_dispatch_table_thunk;
    epoxy_glGetListParameterivSGIX = epoxy_glGetListParameterivSGIX_dispatch_table_thunk;
    epoxy_glGetLocalConstantBooleanvEXT = epoxy_glGetLocalConstantBooleanvEXT_dispatch_table_thunk;
    epoxy_glGetLocalConstantFloatvEXT = epoxy_glGetLocalConstantFloatvEXT_dispatch_table_thunk;
    epoxy_glGetLocalConstantIntegervEXT = epoxy_glGetLocalConstantIntegervEXT_dispatch_table_thunk;
    epoxy_glGetMapAttribParameterfvNV = epoxy_glGetMapAttribParameterfvNV_dispatch_table_thunk;
    epoxy_glGetMapAttribParameterivNV = epoxy_glGetMapAttribParameterivNV_dispatch_table_thunk;
    epoxy_glGetMapControlPointsNV = epoxy_glGetMapControlPointsNV_dispatch_table_thunk;
    epoxy_glGetMapParameterfvNV = epoxy_glGetMapParameterfvNV_dispatch_table_thunk;
    epoxy_glGetMapParameterivNV = epoxy_glGetMapParameterivNV_dispatch_table_thunk;
    epoxy_glGetMapdv = epoxy_glGetMapdv_dispatch_table_thunk;
    epoxy_glGetMapfv = epoxy_glGetMapfv_dispatch_table_thunk;
    epoxy_glGetMapiv = epoxy_glGetMapiv_dispatch_table_thunk;
    epoxy_glGetMapxvOES = epoxy_glGetMapxvOES_dispatch_table_thunk;
    epoxy_glGetMaterialfv = epoxy_glGetMaterialfv_dispatch_table_thunk;
    epoxy_glGetMaterialiv = epoxy_glGetMaterialiv_dispatch_table_thunk;
    epoxy_glGetMaterialxOES = epoxy_glGetMaterialxOES_dispatch_table_thunk;
    epoxy_glGetMaterialxv = epoxy_glGetMaterialxv_dispatch_table_thunk;
    epoxy_glGetMaterialxvOES = epoxy_glGetMaterialxvOES_dispatch_table_thunk;
    epoxy_glGetMinmax = epoxy_glGetMinmax_dispatch_table_thunk;
    epoxy_glGetMinmaxEXT = epoxy_glGetMinmaxEXT_dispatch_table_thunk;
    epoxy_glGetMinmaxParameterfv = epoxy_glGetMinmaxParameterfv_dispatch_table_thunk;
    epoxy_glGetMinmaxParameterfvEXT = epoxy_glGetMinmaxParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetMinmaxParameteriv = epoxy_glGetMinmaxParameteriv_dispatch_table_thunk;
    epoxy_glGetMinmaxParameterivEXT = epoxy_glGetMinmaxParameterivEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexEnvfvEXT = epoxy_glGetMultiTexEnvfvEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexEnvivEXT = epoxy_glGetMultiTexEnvivEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexGendvEXT = epoxy_glGetMultiTexGendvEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexGenfvEXT = epoxy_glGetMultiTexGenfvEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexGenivEXT = epoxy_glGetMultiTexGenivEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexImageEXT = epoxy_glGetMultiTexImageEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexLevelParameterfvEXT = epoxy_glGetMultiTexLevelParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexLevelParameterivEXT = epoxy_glGetMultiTexLevelParameterivEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexParameterIivEXT = epoxy_glGetMultiTexParameterIivEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexParameterIuivEXT = epoxy_glGetMultiTexParameterIuivEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexParameterfvEXT = epoxy_glGetMultiTexParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetMultiTexParameterivEXT = epoxy_glGetMultiTexParameterivEXT_dispatch_table_thunk;
    epoxy_glGetMultisamplefv = epoxy_glGetMultisamplefv_dispatch_table_thunk;
    epoxy_glGetMultisamplefvNV = epoxy_glGetMultisamplefvNV_dispatch_table_thunk;
    epoxy_glGetNamedBufferParameteri64v = epoxy_glGetNamedBufferParameteri64v_dispatch_table_thunk;
    epoxy_glGetNamedBufferParameteriv = epoxy_glGetNamedBufferParameteriv_dispatch_table_thunk;
    epoxy_glGetNamedBufferParameterivEXT = epoxy_glGetNamedBufferParameterivEXT_dispatch_table_thunk;
    epoxy_glGetNamedBufferParameterui64vNV = epoxy_glGetNamedBufferParameterui64vNV_dispatch_table_thunk;
    epoxy_glGetNamedBufferPointerv = epoxy_glGetNamedBufferPointerv_dispatch_table_thunk;
    epoxy_glGetNamedBufferPointervEXT = epoxy_glGetNamedBufferPointervEXT_dispatch_table_thunk;
    epoxy_glGetNamedBufferSubData = epoxy_glGetNamedBufferSubData_dispatch_table_thunk;
    epoxy_glGetNamedBufferSubDataEXT = epoxy_glGetNamedBufferSubDataEXT_dispatch_table_thunk;
    epoxy_glGetNamedFramebufferAttachmentParameteriv = epoxy_glGetNamedFramebufferAttachmentParameteriv_dispatch_table_thunk;
    epoxy_glGetNamedFramebufferAttachmentParameterivEXT = epoxy_glGetNamedFramebufferAttachmentParameterivEXT_dispatch_table_thunk;
    epoxy_glGetNamedFramebufferParameteriv = epoxy_glGetNamedFramebufferParameteriv_dispatch_table_thunk;
    epoxy_glGetNamedFramebufferParameterivEXT = epoxy_glGetNamedFramebufferParameterivEXT_dispatch_table_thunk;
    epoxy_glGetNamedProgramLocalParameterIivEXT = epoxy_glGetNamedProgramLocalParameterIivEXT_dispatch_table_thunk;
    epoxy_glGetNamedProgramLocalParameterIuivEXT = epoxy_glGetNamedProgramLocalParameterIuivEXT_dispatch_table_thunk;
    epoxy_glGetNamedProgramLocalParameterdvEXT = epoxy_glGetNamedProgramLocalParameterdvEXT_dispatch_table_thunk;
    epoxy_glGetNamedProgramLocalParameterfvEXT = epoxy_glGetNamedProgramLocalParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetNamedProgramStringEXT = epoxy_glGetNamedProgramStringEXT_dispatch_table_thunk;
    epoxy_glGetNamedProgramivEXT = epoxy_glGetNamedProgramivEXT_dispatch_table_thunk;
    epoxy_glGetNamedRenderbufferParameteriv = epoxy_glGetNamedRenderbufferParameteriv_dispatch_table_thunk;
    epoxy_glGetNamedRenderbufferParameterivEXT = epoxy_glGetNamedRenderbufferParameterivEXT_dispatch_table_thunk;
    epoxy_glGetNamedStringARB = epoxy_glGetNamedStringARB_dispatch_table_thunk;
    epoxy_glGetNamedStringivARB = epoxy_glGetNamedStringivARB_dispatch_table_thunk;
    epoxy_glGetNextPerfQueryIdINTEL = epoxy_glGetNextPerfQueryIdINTEL_dispatch_table_thunk;
    epoxy_glGetObjectBufferfvATI = epoxy_glGetObjectBufferfvATI_dispatch_table_thunk;
    epoxy_glGetObjectBufferivATI = epoxy_glGetObjectBufferivATI_dispatch_table_thunk;
    epoxy_glGetObjectLabel = epoxy_glGetObjectLabel_dispatch_table_thunk;
    epoxy_glGetObjectLabelEXT = epoxy_glGetObjectLabelEXT_dispatch_table_thunk;
    epoxy_glGetObjectLabelKHR = epoxy_glGetObjectLabelKHR_dispatch_table_thunk;
    epoxy_glGetObjectParameterfvARB = epoxy_glGetObjectParameterfvARB_dispatch_table_thunk;
    epoxy_glGetObjectParameterivAPPLE = epoxy_glGetObjectParameterivAPPLE_dispatch_table_thunk;
    epoxy_glGetObjectParameterivARB = epoxy_glGetObjectParameterivARB_dispatch_table_thunk;
    epoxy_glGetObjectPtrLabel = epoxy_glGetObjectPtrLabel_dispatch_table_thunk;
    epoxy_glGetObjectPtrLabelKHR = epoxy_glGetObjectPtrLabelKHR_dispatch_table_thunk;
    epoxy_glGetOcclusionQueryivNV = epoxy_glGetOcclusionQueryivNV_dispatch_table_thunk;
    epoxy_glGetOcclusionQueryuivNV = epoxy_glGetOcclusionQueryuivNV_dispatch_table_thunk;
    epoxy_glGetPathColorGenfvNV = epoxy_glGetPathColorGenfvNV_dispatch_table_thunk;
    epoxy_glGetPathColorGenivNV = epoxy_glGetPathColorGenivNV_dispatch_table_thunk;
    epoxy_glGetPathCommandsNV = epoxy_glGetPathCommandsNV_dispatch_table_thunk;
    epoxy_glGetPathCoordsNV = epoxy_glGetPathCoordsNV_dispatch_table_thunk;
    epoxy_glGetPathDashArrayNV = epoxy_glGetPathDashArrayNV_dispatch_table_thunk;
    epoxy_glGetPathLengthNV = epoxy_glGetPathLengthNV_dispatch_table_thunk;
    epoxy_glGetPathMetricRangeNV = epoxy_glGetPathMetricRangeNV_dispatch_table_thunk;
    epoxy_glGetPathMetricsNV = epoxy_glGetPathMetricsNV_dispatch_table_thunk;
    epoxy_glGetPathParameterfvNV = epoxy_glGetPathParameterfvNV_dispatch_table_thunk;
    epoxy_glGetPathParameterivNV = epoxy_glGetPathParameterivNV_dispatch_table_thunk;
    epoxy_glGetPathSpacingNV = epoxy_glGetPathSpacingNV_dispatch_table_thunk;
    epoxy_glGetPathTexGenfvNV = epoxy_glGetPathTexGenfvNV_dispatch_table_thunk;
    epoxy_glGetPathTexGenivNV = epoxy_glGetPathTexGenivNV_dispatch_table_thunk;
    epoxy_glGetPerfCounterInfoINTEL = epoxy_glGetPerfCounterInfoINTEL_dispatch_table_thunk;
    epoxy_glGetPerfMonitorCounterDataAMD = epoxy_glGetPerfMonitorCounterDataAMD_dispatch_table_thunk;
    epoxy_glGetPerfMonitorCounterInfoAMD = epoxy_glGetPerfMonitorCounterInfoAMD_dispatch_table_thunk;
    epoxy_glGetPerfMonitorCounterStringAMD = epoxy_glGetPerfMonitorCounterStringAMD_dispatch_table_thunk;
    epoxy_glGetPerfMonitorCountersAMD = epoxy_glGetPerfMonitorCountersAMD_dispatch_table_thunk;
    epoxy_glGetPerfMonitorGroupStringAMD = epoxy_glGetPerfMonitorGroupStringAMD_dispatch_table_thunk;
    epoxy_glGetPerfMonitorGroupsAMD = epoxy_glGetPerfMonitorGroupsAMD_dispatch_table_thunk;
    epoxy_glGetPerfQueryDataINTEL = epoxy_glGetPerfQueryDataINTEL_dispatch_table_thunk;
    epoxy_glGetPerfQueryIdByNameINTEL = epoxy_glGetPerfQueryIdByNameINTEL_dispatch_table_thunk;
    epoxy_glGetPerfQueryInfoINTEL = epoxy_glGetPerfQueryInfoINTEL_dispatch_table_thunk;
    epoxy_glGetPixelMapfv = epoxy_glGetPixelMapfv_dispatch_table_thunk;
    epoxy_glGetPixelMapuiv = epoxy_glGetPixelMapuiv_dispatch_table_thunk;
    epoxy_glGetPixelMapusv = epoxy_glGetPixelMapusv_dispatch_table_thunk;
    epoxy_glGetPixelMapxv = epoxy_glGetPixelMapxv_dispatch_table_thunk;
    epoxy_glGetPixelTexGenParameterfvSGIS = epoxy_glGetPixelTexGenParameterfvSGIS_dispatch_table_thunk;
    epoxy_glGetPixelTexGenParameterivSGIS = epoxy_glGetPixelTexGenParameterivSGIS_dispatch_table_thunk;
    epoxy_glGetPixelTransformParameterfvEXT = epoxy_glGetPixelTransformParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetPixelTransformParameterivEXT = epoxy_glGetPixelTransformParameterivEXT_dispatch_table_thunk;
    epoxy_glGetPointerIndexedvEXT = epoxy_glGetPointerIndexedvEXT_dispatch_table_thunk;
    epoxy_glGetPointeri_vEXT = epoxy_glGetPointeri_vEXT_dispatch_table_thunk;
    epoxy_glGetPointerv = epoxy_glGetPointerv_dispatch_table_thunk;
    epoxy_glGetPointervEXT = epoxy_glGetPointervEXT_dispatch_table_thunk;
    epoxy_glGetPointervKHR = epoxy_glGetPointervKHR_dispatch_table_thunk;
    epoxy_glGetPolygonStipple = epoxy_glGetPolygonStipple_dispatch_table_thunk;
    epoxy_glGetProgramBinary = epoxy_glGetProgramBinary_dispatch_table_thunk;
    epoxy_glGetProgramBinaryOES = epoxy_glGetProgramBinaryOES_dispatch_table_thunk;
    epoxy_glGetProgramEnvParameterIivNV = epoxy_glGetProgramEnvParameterIivNV_dispatch_table_thunk;
    epoxy_glGetProgramEnvParameterIuivNV = epoxy_glGetProgramEnvParameterIuivNV_dispatch_table_thunk;
    epoxy_glGetProgramEnvParameterdvARB = epoxy_glGetProgramEnvParameterdvARB_dispatch_table_thunk;
    epoxy_glGetProgramEnvParameterfvARB = epoxy_glGetProgramEnvParameterfvARB_dispatch_table_thunk;
    epoxy_glGetProgramInfoLog = epoxy_glGetProgramInfoLog_dispatch_table_thunk;
    epoxy_glGetProgramInterfaceiv = epoxy_glGetProgramInterfaceiv_dispatch_table_thunk;
    epoxy_glGetProgramLocalParameterIivNV = epoxy_glGetProgramLocalParameterIivNV_dispatch_table_thunk;
    epoxy_glGetProgramLocalParameterIuivNV = epoxy_glGetProgramLocalParameterIuivNV_dispatch_table_thunk;
    epoxy_glGetProgramLocalParameterdvARB = epoxy_glGetProgramLocalParameterdvARB_dispatch_table_thunk;
    epoxy_glGetProgramLocalParameterfvARB = epoxy_glGetProgramLocalParameterfvARB_dispatch_table_thunk;
    epoxy_glGetProgramNamedParameterdvNV = epoxy_glGetProgramNamedParameterdvNV_dispatch_table_thunk;
    epoxy_glGetProgramNamedParameterfvNV = epoxy_glGetProgramNamedParameterfvNV_dispatch_table_thunk;
    epoxy_glGetProgramParameterdvNV = epoxy_glGetProgramParameterdvNV_dispatch_table_thunk;
    epoxy_glGetProgramParameterfvNV = epoxy_glGetProgramParameterfvNV_dispatch_table_thunk;
    epoxy_glGetProgramPipelineInfoLog = epoxy_glGetProgramPipelineInfoLog_dispatch_table_thunk;
    epoxy_glGetProgramPipelineInfoLogEXT = epoxy_glGetProgramPipelineInfoLogEXT_dispatch_table_thunk;
    epoxy_glGetProgramPipelineiv = epoxy_glGetProgramPipelineiv_dispatch_table_thunk;
    epoxy_glGetProgramPipelineivEXT = epoxy_glGetProgramPipelineivEXT_dispatch_table_thunk;
    epoxy_glGetProgramResourceIndex = epoxy_glGetProgramResourceIndex_dispatch_table_thunk;
    epoxy_glGetProgramResourceLocation = epoxy_glGetProgramResourceLocation_dispatch_table_thunk;
    epoxy_glGetProgramResourceLocationIndex = epoxy_glGetProgramResourceLocationIndex_dispatch_table_thunk;
    epoxy_glGetProgramResourceName = epoxy_glGetProgramResourceName_dispatch_table_thunk;
    epoxy_glGetProgramResourcefvNV = epoxy_glGetProgramResourcefvNV_dispatch_table_thunk;
    epoxy_glGetProgramResourceiv = epoxy_glGetProgramResourceiv_dispatch_table_thunk;
    epoxy_glGetProgramStageiv = epoxy_glGetProgramStageiv_dispatch_table_thunk;
    epoxy_glGetProgramStringARB = epoxy_glGetProgramStringARB_dispatch_table_thunk;
    epoxy_glGetProgramStringNV = epoxy_glGetProgramStringNV_dispatch_table_thunk;
    epoxy_glGetProgramSubroutineParameteruivNV = epoxy_glGetProgramSubroutineParameteruivNV_dispatch_table_thunk;
    epoxy_glGetProgramiv = epoxy_glGetProgramiv_dispatch_table_thunk;
    epoxy_glGetProgramivARB = epoxy_glGetProgramivARB_dispatch_table_thunk;
    epoxy_glGetProgramivNV = epoxy_glGetProgramivNV_dispatch_table_thunk;
    epoxy_glGetQueryBufferObjecti64v = epoxy_glGetQueryBufferObjecti64v_dispatch_table_thunk;
    epoxy_glGetQueryBufferObjectiv = epoxy_glGetQueryBufferObjectiv_dispatch_table_thunk;
    epoxy_glGetQueryBufferObjectui64v = epoxy_glGetQueryBufferObjectui64v_dispatch_table_thunk;
    epoxy_glGetQueryBufferObjectuiv = epoxy_glGetQueryBufferObjectuiv_dispatch_table_thunk;
    epoxy_glGetQueryIndexediv = epoxy_glGetQueryIndexediv_dispatch_table_thunk;
    epoxy_glGetQueryObjecti64v = epoxy_glGetQueryObjecti64v_dispatch_table_thunk;
    epoxy_glGetQueryObjecti64vEXT = epoxy_glGetQueryObjecti64vEXT_dispatch_table_thunk;
    epoxy_glGetQueryObjectiv = epoxy_glGetQueryObjectiv_dispatch_table_thunk;
    epoxy_glGetQueryObjectivARB = epoxy_glGetQueryObjectivARB_dispatch_table_thunk;
    epoxy_glGetQueryObjectivEXT = epoxy_glGetQueryObjectivEXT_dispatch_table_thunk;
    epoxy_glGetQueryObjectui64v = epoxy_glGetQueryObjectui64v_dispatch_table_thunk;
    epoxy_glGetQueryObjectui64vEXT = epoxy_glGetQueryObjectui64vEXT_dispatch_table_thunk;
    epoxy_glGetQueryObjectuiv = epoxy_glGetQueryObjectuiv_dispatch_table_thunk;
    epoxy_glGetQueryObjectuivARB = epoxy_glGetQueryObjectuivARB_dispatch_table_thunk;
    epoxy_glGetQueryObjectuivEXT = epoxy_glGetQueryObjectuivEXT_dispatch_table_thunk;
    epoxy_glGetQueryiv = epoxy_glGetQueryiv_dispatch_table_thunk;
    epoxy_glGetQueryivARB = epoxy_glGetQueryivARB_dispatch_table_thunk;
    epoxy_glGetQueryivEXT = epoxy_glGetQueryivEXT_dispatch_table_thunk;
    epoxy_glGetRenderbufferParameteriv = epoxy_glGetRenderbufferParameteriv_dispatch_table_thunk;
    epoxy_glGetRenderbufferParameterivEXT = epoxy_glGetRenderbufferParameterivEXT_dispatch_table_thunk;
    epoxy_glGetRenderbufferParameterivOES = epoxy_glGetRenderbufferParameterivOES_dispatch_table_thunk;
    epoxy_glGetSamplerParameterIiv = epoxy_glGetSamplerParameterIiv_dispatch_table_thunk;
    epoxy_glGetSamplerParameterIivEXT = epoxy_glGetSamplerParameterIivEXT_dispatch_table_thunk;
    epoxy_glGetSamplerParameterIivOES = epoxy_glGetSamplerParameterIivOES_dispatch_table_thunk;
    epoxy_glGetSamplerParameterIuiv = epoxy_glGetSamplerParameterIuiv_dispatch_table_thunk;
    epoxy_glGetSamplerParameterIuivEXT = epoxy_glGetSamplerParameterIuivEXT_dispatch_table_thunk;
    epoxy_glGetSamplerParameterIuivOES = epoxy_glGetSamplerParameterIuivOES_dispatch_table_thunk;
    epoxy_glGetSamplerParameterfv = epoxy_glGetSamplerParameterfv_dispatch_table_thunk;
    epoxy_glGetSamplerParameteriv = epoxy_glGetSamplerParameteriv_dispatch_table_thunk;
    epoxy_glGetSeparableFilter = epoxy_glGetSeparableFilter_dispatch_table_thunk;
    epoxy_glGetSeparableFilterEXT = epoxy_glGetSeparableFilterEXT_dispatch_table_thunk;
    epoxy_glGetShaderInfoLog = epoxy_glGetShaderInfoLog_dispatch_table_thunk;
    epoxy_glGetShaderPrecisionFormat = epoxy_glGetShaderPrecisionFormat_dispatch_table_thunk;
    epoxy_glGetShaderSource = epoxy_glGetShaderSource_dispatch_table_thunk;
    epoxy_glGetShaderSourceARB = epoxy_glGetShaderSourceARB_dispatch_table_thunk;
    epoxy_glGetShaderiv = epoxy_glGetShaderiv_dispatch_table_thunk;
    epoxy_glGetSharpenTexFuncSGIS = epoxy_glGetSharpenTexFuncSGIS_dispatch_table_thunk;
    epoxy_glGetStageIndexNV = epoxy_glGetStageIndexNV_dispatch_table_thunk;
    epoxy_glGetString = epoxy_glGetString_dispatch_table_thunk;
    epoxy_glGetStringi = epoxy_glGetStringi_dispatch_table_thunk;
    epoxy_glGetSubroutineIndex = epoxy_glGetSubroutineIndex_dispatch_table_thunk;
    epoxy_glGetSubroutineUniformLocation = epoxy_glGetSubroutineUniformLocation_dispatch_table_thunk;
    epoxy_glGetSynciv = epoxy_glGetSynciv_dispatch_table_thunk;
    epoxy_glGetSyncivAPPLE = epoxy_glGetSyncivAPPLE_dispatch_table_thunk;
    epoxy_glGetTexBumpParameterfvATI = epoxy_glGetTexBumpParameterfvATI_dispatch_table_thunk;
    epoxy_glGetTexBumpParameterivATI = epoxy_glGetTexBumpParameterivATI_dispatch_table_thunk;
    epoxy_glGetTexEnvfv = epoxy_glGetTexEnvfv_dispatch_table_thunk;
    epoxy_glGetTexEnviv = epoxy_glGetTexEnviv_dispatch_table_thunk;
    epoxy_glGetTexEnvxv = epoxy_glGetTexEnvxv_dispatch_table_thunk;
    epoxy_glGetTexEnvxvOES = epoxy_glGetTexEnvxvOES_dispatch_table_thunk;
    epoxy_glGetTexFilterFuncSGIS = epoxy_glGetTexFilterFuncSGIS_dispatch_table_thunk;
    epoxy_glGetTexGendv = epoxy_glGetTexGendv_dispatch_table_thunk;
    epoxy_glGetTexGenfv = epoxy_glGetTexGenfv_dispatch_table_thunk;
    epoxy_glGetTexGenfvOES = epoxy_glGetTexGenfvOES_dispatch_table_thunk;
    epoxy_glGetTexGeniv = epoxy_glGetTexGeniv_dispatch_table_thunk;
    epoxy_glGetTexGenivOES = epoxy_glGetTexGenivOES_dispatch_table_thunk;
    epoxy_glGetTexGenxvOES = epoxy_glGetTexGenxvOES_dispatch_table_thunk;
    epoxy_glGetTexImage = epoxy_glGetTexImage_dispatch_table_thunk;
    epoxy_glGetTexLevelParameterfv = epoxy_glGetTexLevelParameterfv_dispatch_table_thunk;
    epoxy_glGetTexLevelParameteriv = epoxy_glGetTexLevelParameteriv_dispatch_table_thunk;
    epoxy_glGetTexLevelParameterxvOES = epoxy_glGetTexLevelParameterxvOES_dispatch_table_thunk;
    epoxy_glGetTexParameterIiv = epoxy_glGetTexParameterIiv_dispatch_table_thunk;
    epoxy_glGetTexParameterIivEXT = epoxy_glGetTexParameterIivEXT_dispatch_table_thunk;
    epoxy_glGetTexParameterIivOES = epoxy_glGetTexParameterIivOES_dispatch_table_thunk;
    epoxy_glGetTexParameterIuiv = epoxy_glGetTexParameterIuiv_dispatch_table_thunk;
    epoxy_glGetTexParameterIuivEXT = epoxy_glGetTexParameterIuivEXT_dispatch_table_thunk;
    epoxy_glGetTexParameterIuivOES = epoxy_glGetTexParameterIuivOES_dispatch_table_thunk;
    epoxy_glGetTexParameterPointervAPPLE = epoxy_glGetTexParameterPointervAPPLE_dispatch_table_thunk;
    epoxy_glGetTexParameterfv = epoxy_glGetTexParameterfv_dispatch_table_thunk;
    epoxy_glGetTexParameteriv = epoxy_glGetTexParameteriv_dispatch_table_thunk;
    epoxy_glGetTexParameterxv = epoxy_glGetTexParameterxv_dispatch_table_thunk;
    epoxy_glGetTexParameterxvOES = epoxy_glGetTexParameterxvOES_dispatch_table_thunk;
    epoxy_glGetTextureHandleARB = epoxy_glGetTextureHandleARB_dispatch_table_thunk;
    epoxy_glGetTextureHandleNV = epoxy_glGetTextureHandleNV_dispatch_table_thunk;
    epoxy_glGetTextureImage = epoxy_glGetTextureImage_dispatch_table_thunk;
    epoxy_glGetTextureImageEXT = epoxy_glGetTextureImageEXT_dispatch_table_thunk;
    epoxy_glGetTextureLevelParameterfv = epoxy_glGetTextureLevelParameterfv_dispatch_table_thunk;
    epoxy_glGetTextureLevelParameterfvEXT = epoxy_glGetTextureLevelParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetTextureLevelParameteriv = epoxy_glGetTextureLevelParameteriv_dispatch_table_thunk;
    epoxy_glGetTextureLevelParameterivEXT = epoxy_glGetTextureLevelParameterivEXT_dispatch_table_thunk;
    epoxy_glGetTextureParameterIiv = epoxy_glGetTextureParameterIiv_dispatch_table_thunk;
    epoxy_glGetTextureParameterIivEXT = epoxy_glGetTextureParameterIivEXT_dispatch_table_thunk;
    epoxy_glGetTextureParameterIuiv = epoxy_glGetTextureParameterIuiv_dispatch_table_thunk;
    epoxy_glGetTextureParameterIuivEXT = epoxy_glGetTextureParameterIuivEXT_dispatch_table_thunk;
    epoxy_glGetTextureParameterfv = epoxy_glGetTextureParameterfv_dispatch_table_thunk;
    epoxy_glGetTextureParameterfvEXT = epoxy_glGetTextureParameterfvEXT_dispatch_table_thunk;
    epoxy_glGetTextureParameteriv = epoxy_glGetTextureParameteriv_dispatch_table_thunk;
    epoxy_glGetTextureParameterivEXT = epoxy_glGetTextureParameterivEXT_dispatch_table_thunk;
    epoxy_glGetTextureSamplerHandleARB = epoxy_glGetTextureSamplerHandleARB_dispatch_table_thunk;
    epoxy_glGetTextureSamplerHandleNV = epoxy_glGetTextureSamplerHandleNV_dispatch_table_thunk;
    epoxy_glGetTextureSubImage = epoxy_glGetTextureSubImage_dispatch_table_thunk;
    epoxy_glGetTrackMatrixivNV = epoxy_glGetTrackMatrixivNV_dispatch_table_thunk;
    epoxy_glGetTransformFeedbackVarying = epoxy_glGetTransformFeedbackVarying_dispatch_table_thunk;
    epoxy_glGetTransformFeedbackVaryingEXT = epoxy_glGetTransformFeedbackVaryingEXT_dispatch_table_thunk;
    epoxy_glGetTransformFeedbackVaryingNV = epoxy_glGetTransformFeedbackVaryingNV_dispatch_table_thunk;
    epoxy_glGetTransformFeedbacki64_v = epoxy_glGetTransformFeedbacki64_v_dispatch_table_thunk;
    epoxy_glGetTransformFeedbacki_v = epoxy_glGetTransformFeedbacki_v_dispatch_table_thunk;
    epoxy_glGetTransformFeedbackiv = epoxy_glGetTransformFeedbackiv_dispatch_table_thunk;
    epoxy_glGetTranslatedShaderSourceANGLE = epoxy_glGetTranslatedShaderSourceANGLE_dispatch_table_thunk;
    epoxy_glGetUniformBlockIndex = epoxy_glGetUniformBlockIndex_dispatch_table_thunk;
    epoxy_glGetUniformBufferSizeEXT = epoxy_glGetUniformBufferSizeEXT_dispatch_table_thunk;
    epoxy_glGetUniformIndices = epoxy_glGetUniformIndices_dispatch_table_thunk;
    epoxy_glGetUniformLocation = epoxy_glGetUniformLocation_dispatch_table_thunk;
    epoxy_glGetUniformLocationARB = epoxy_glGetUniformLocationARB_dispatch_table_thunk;
    epoxy_glGetUniformOffsetEXT = epoxy_glGetUniformOffsetEXT_dispatch_table_thunk;
    epoxy_glGetUniformSubroutineuiv = epoxy_glGetUniformSubroutineuiv_dispatch_table_thunk;
    epoxy_glGetUniformdv = epoxy_glGetUniformdv_dispatch_table_thunk;
    epoxy_glGetUniformfv = epoxy_glGetUniformfv_dispatch_table_thunk;
    epoxy_glGetUniformfvARB = epoxy_glGetUniformfvARB_dispatch_table_thunk;
    epoxy_glGetUniformi64vNV = epoxy_glGetUniformi64vNV_dispatch_table_thunk;
    epoxy_glGetUniformiv = epoxy_glGetUniformiv_dispatch_table_thunk;
    epoxy_glGetUniformivARB = epoxy_glGetUniformivARB_dispatch_table_thunk;
    epoxy_glGetUniformui64vNV = epoxy_glGetUniformui64vNV_dispatch_table_thunk;
    epoxy_glGetUniformuiv = epoxy_glGetUniformuiv_dispatch_table_thunk;
    epoxy_glGetUniformuivEXT = epoxy_glGetUniformuivEXT_dispatch_table_thunk;
    epoxy_glGetVariantArrayObjectfvATI = epoxy_glGetVariantArrayObjectfvATI_dispatch_table_thunk;
    epoxy_glGetVariantArrayObjectivATI = epoxy_glGetVariantArrayObjectivATI_dispatch_table_thunk;
    epoxy_glGetVariantBooleanvEXT = epoxy_glGetVariantBooleanvEXT_dispatch_table_thunk;
    epoxy_glGetVariantFloatvEXT = epoxy_glGetVariantFloatvEXT_dispatch_table_thunk;
    epoxy_glGetVariantIntegervEXT = epoxy_glGetVariantIntegervEXT_dispatch_table_thunk;
    epoxy_glGetVariantPointervEXT = epoxy_glGetVariantPointervEXT_dispatch_table_thunk;
    epoxy_glGetVaryingLocationNV = epoxy_glGetVaryingLocationNV_dispatch_table_thunk;
    epoxy_glGetVertexArrayIndexed64iv = epoxy_glGetVertexArrayIndexed64iv_dispatch_table_thunk;
    epoxy_glGetVertexArrayIndexediv = epoxy_glGetVertexArrayIndexediv_dispatch_table_thunk;
    epoxy_glGetVertexArrayIntegeri_vEXT = epoxy_glGetVertexArrayIntegeri_vEXT_dispatch_table_thunk;
    epoxy_glGetVertexArrayIntegervEXT = epoxy_glGetVertexArrayIntegervEXT_dispatch_table_thunk;
    epoxy_glGetVertexArrayPointeri_vEXT = epoxy_glGetVertexArrayPointeri_vEXT_dispatch_table_thunk;
    epoxy_glGetVertexArrayPointervEXT = epoxy_glGetVertexArrayPointervEXT_dispatch_table_thunk;
    epoxy_glGetVertexArrayiv = epoxy_glGetVertexArrayiv_dispatch_table_thunk;
    epoxy_glGetVertexAttribArrayObjectfvATI = epoxy_glGetVertexAttribArrayObjectfvATI_dispatch_table_thunk;
    epoxy_glGetVertexAttribArrayObjectivATI = epoxy_glGetVertexAttribArrayObjectivATI_dispatch_table_thunk;
    epoxy_glGetVertexAttribIiv = epoxy_glGetVertexAttribIiv_dispatch_table_thunk;
    epoxy_glGetVertexAttribIivEXT = epoxy_glGetVertexAttribIivEXT_dispatch_table_thunk;
    epoxy_glGetVertexAttribIuiv = epoxy_glGetVertexAttribIuiv_dispatch_table_thunk;
    epoxy_glGetVertexAttribIuivEXT = epoxy_glGetVertexAttribIuivEXT_dispatch_table_thunk;
    epoxy_glGetVertexAttribLdv = epoxy_glGetVertexAttribLdv_dispatch_table_thunk;
    epoxy_glGetVertexAttribLdvEXT = epoxy_glGetVertexAttribLdvEXT_dispatch_table_thunk;
    epoxy_glGetVertexAttribLi64vNV = epoxy_glGetVertexAttribLi64vNV_dispatch_table_thunk;
    epoxy_glGetVertexAttribLui64vARB = epoxy_glGetVertexAttribLui64vARB_dispatch_table_thunk;
    epoxy_glGetVertexAttribLui64vNV = epoxy_glGetVertexAttribLui64vNV_dispatch_table_thunk;
    epoxy_glGetVertexAttribPointerv = epoxy_glGetVertexAttribPointerv_dispatch_table_thunk;
    epoxy_glGetVertexAttribPointervARB = epoxy_glGetVertexAttribPointervARB_dispatch_table_thunk;
    epoxy_glGetVertexAttribPointervNV = epoxy_glGetVertexAttribPointervNV_dispatch_table_thunk;
    epoxy_glGetVertexAttribdv = epoxy_glGetVertexAttribdv_dispatch_table_thunk;
    epoxy_glGetVertexAttribdvARB = epoxy_glGetVertexAttribdvARB_dispatch_table_thunk;
    epoxy_glGetVertexAttribdvNV = epoxy_glGetVertexAttribdvNV_dispatch_table_thunk;
    epoxy_glGetVertexAttribfv = epoxy_glGetVertexAttribfv_dispatch_table_thunk;
    epoxy_glGetVertexAttribfvARB = epoxy_glGetVertexAttribfvARB_dispatch_table_thunk;
    epoxy_glGetVertexAttribfvNV = epoxy_glGetVertexAttribfvNV_dispatch_table_thunk;
    epoxy_glGetVertexAttribiv = epoxy_glGetVertexAttribiv_dispatch_table_thunk;
    epoxy_glGetVertexAttribivARB = epoxy_glGetVertexAttribivARB_dispatch_table_thunk;
    epoxy_glGetVertexAttribivNV = epoxy_glGetVertexAttribivNV_dispatch_table_thunk;
    epoxy_glGetVideoCaptureStreamdvNV = epoxy_glGetVideoCaptureStreamdvNV_dispatch_table_thunk;
    epoxy_glGetVideoCaptureStreamfvNV = epoxy_glGetVideoCaptureStreamfvNV_dispatch_table_thunk;
    epoxy_glGetVideoCaptureStreamivNV = epoxy_glGetVideoCaptureStreamivNV_dispatch_table_thunk;
    epoxy_glGetVideoCaptureivNV = epoxy_glGetVideoCaptureivNV_dispatch_table_thunk;
    epoxy_glGetVideoi64vNV = epoxy_glGetVideoi64vNV_dispatch_table_thunk;
    epoxy_glGetVideoivNV = epoxy_glGetVideoivNV_dispatch_table_thunk;
    epoxy_glGetVideoui64vNV = epoxy_glGetVideoui64vNV_dispatch_table_thunk;
    epoxy_glGetVideouivNV = epoxy_glGetVideouivNV_dispatch_table_thunk;
    epoxy_glGetnColorTable = epoxy_glGetnColorTable_dispatch_table_thunk;
    epoxy_glGetnColorTableARB = epoxy_glGetnColorTableARB_dispatch_table_thunk;
    epoxy_glGetnCompressedTexImage = epoxy_glGetnCompressedTexImage_dispatch_table_thunk;
    epoxy_glGetnCompressedTexImageARB = epoxy_glGetnCompressedTexImageARB_dispatch_table_thunk;
    epoxy_glGetnConvolutionFilter = epoxy_glGetnConvolutionFilter_dispatch_table_thunk;
    epoxy_glGetnConvolutionFilterARB = epoxy_glGetnConvolutionFilterARB_dispatch_table_thunk;
    epoxy_glGetnHistogram = epoxy_glGetnHistogram_dispatch_table_thunk;
    epoxy_glGetnHistogramARB = epoxy_glGetnHistogramARB_dispatch_table_thunk;
    epoxy_glGetnMapdv = epoxy_glGetnMapdv_dispatch_table_thunk;
    epoxy_glGetnMapdvARB = epoxy_glGetnMapdvARB_dispatch_table_thunk;
    epoxy_glGetnMapfv = epoxy_glGetnMapfv_dispatch_table_thunk;
    epoxy_glGetnMapfvARB = epoxy_glGetnMapfvARB_dispatch_table_thunk;
    epoxy_glGetnMapiv = epoxy_glGetnMapiv_dispatch_table_thunk;
    epoxy_glGetnMapivARB = epoxy_glGetnMapivARB_dispatch_table_thunk;
    epoxy_glGetnMinmax = epoxy_glGetnMinmax_dispatch_table_thunk;
    epoxy_glGetnMinmaxARB = epoxy_glGetnMinmaxARB_dispatch_table_thunk;
    epoxy_glGetnPixelMapfv = epoxy_glGetnPixelMapfv_dispatch_table_thunk;
    epoxy_glGetnPixelMapfvARB = epoxy_glGetnPixelMapfvARB_dispatch_table_thunk;
    epoxy_glGetnPixelMapuiv = epoxy_glGetnPixelMapuiv_dispatch_table_thunk;
    epoxy_glGetnPixelMapuivARB = epoxy_glGetnPixelMapuivARB_dispatch_table_thunk;
    epoxy_glGetnPixelMapusv = epoxy_glGetnPixelMapusv_dispatch_table_thunk;
    epoxy_glGetnPixelMapusvARB = epoxy_glGetnPixelMapusvARB_dispatch_table_thunk;
    epoxy_glGetnPolygonStipple = epoxy_glGetnPolygonStipple_dispatch_table_thunk;
    epoxy_glGetnPolygonStippleARB = epoxy_glGetnPolygonStippleARB_dispatch_table_thunk;
    epoxy_glGetnSeparableFilter = epoxy_glGetnSeparableFilter_dispatch_table_thunk;
    epoxy_glGetnSeparableFilterARB = epoxy_glGetnSeparableFilterARB_dispatch_table_thunk;
    epoxy_glGetnTexImage = epoxy_glGetnTexImage_dispatch_table_thunk;
    epoxy_glGetnTexImageARB = epoxy_glGetnTexImageARB_dispatch_table_thunk;
    epoxy_glGetnUniformdv = epoxy_glGetnUniformdv_dispatch_table_thunk;
    epoxy_glGetnUniformdvARB = epoxy_glGetnUniformdvARB_dispatch_table_thunk;
    epoxy_glGetnUniformfv = epoxy_glGetnUniformfv_dispatch_table_thunk;
    epoxy_glGetnUniformfvARB = epoxy_glGetnUniformfvARB_dispatch_table_thunk;
    epoxy_glGetnUniformfvEXT = epoxy_glGetnUniformfvEXT_dispatch_table_thunk;
    epoxy_glGetnUniformfvKHR = epoxy_glGetnUniformfvKHR_dispatch_table_thunk;
    epoxy_glGetnUniformiv = epoxy_glGetnUniformiv_dispatch_table_thunk;
    epoxy_glGetnUniformivARB = epoxy_glGetnUniformivARB_dispatch_table_thunk;
    epoxy_glGetnUniformivEXT = epoxy_glGetnUniformivEXT_dispatch_table_thunk;
    epoxy_glGetnUniformivKHR = epoxy_glGetnUniformivKHR_dispatch_table_thunk;
    epoxy_glGetnUniformuiv = epoxy_glGetnUniformuiv_dispatch_table_thunk;
    epoxy_glGetnUniformuivARB = epoxy_glGetnUniformuivARB_dispatch_table_thunk;
    epoxy_glGetnUniformuivKHR = epoxy_glGetnUniformuivKHR_dispatch_table_thunk;
    epoxy_glGlobalAlphaFactorbSUN = epoxy_glGlobalAlphaFactorbSUN_dispatch_table_thunk;
    epoxy_glGlobalAlphaFactordSUN = epoxy_glGlobalAlphaFactordSUN_dispatch_table_thunk;
    epoxy_glGlobalAlphaFactorfSUN = epoxy_glGlobalAlphaFactorfSUN_dispatch_table_thunk;
    epoxy_glGlobalAlphaFactoriSUN = epoxy_glGlobalAlphaFactoriSUN_dispatch_table_thunk;
    epoxy_glGlobalAlphaFactorsSUN = epoxy_glGlobalAlphaFactorsSUN_dispatch_table_thunk;
    epoxy_glGlobalAlphaFactorubSUN = epoxy_glGlobalAlphaFactorubSUN_dispatch_table_thunk;
    epoxy_glGlobalAlphaFactoruiSUN = epoxy_glGlobalAlphaFactoruiSUN_dispatch_table_thunk;
    epoxy_glGlobalAlphaFactorusSUN = epoxy_glGlobalAlphaFactorusSUN_dispatch_table_thunk;
    epoxy_glHint = epoxy_glHint_dispatch_table_thunk;
    epoxy_glHintPGI = epoxy_glHintPGI_dispatch_table_thunk;
    epoxy_glHistogram = epoxy_glHistogram_dispatch_table_thunk;
    epoxy_glHistogramEXT = epoxy_glHistogramEXT_dispatch_table_thunk;
    epoxy_glIglooInterfaceSGIX = epoxy_glIglooInterfaceSGIX_dispatch_table_thunk;
    epoxy_glImageTransformParameterfHP = epoxy_glImageTransformParameterfHP_dispatch_table_thunk;
    epoxy_glImageTransformParameterfvHP = epoxy_glImageTransformParameterfvHP_dispatch_table_thunk;
    epoxy_glImageTransformParameteriHP = epoxy_glImageTransformParameteriHP_dispatch_table_thunk;
    epoxy_glImageTransformParameterivHP = epoxy_glImageTransformParameterivHP_dispatch_table_thunk;
    epoxy_glImportSyncEXT = epoxy_glImportSyncEXT_dispatch_table_thunk;
    epoxy_glIndexFormatNV = epoxy_glIndexFormatNV_dispatch_table_thunk;
    epoxy_glIndexFuncEXT = epoxy_glIndexFuncEXT_dispatch_table_thunk;
    epoxy_glIndexMask = epoxy_glIndexMask_dispatch_table_thunk;
    epoxy_glIndexMaterialEXT = epoxy_glIndexMaterialEXT_dispatch_table_thunk;
    epoxy_glIndexPointer = epoxy_glIndexPointer_dispatch_table_thunk;
    epoxy_glIndexPointerEXT = epoxy_glIndexPointerEXT_dispatch_table_thunk;
    epoxy_glIndexPointerListIBM = epoxy_glIndexPointerListIBM_dispatch_table_thunk;
    epoxy_glIndexd = epoxy_glIndexd_dispatch_table_thunk;
    epoxy_glIndexdv = epoxy_glIndexdv_dispatch_table_thunk;
    epoxy_glIndexf = epoxy_glIndexf_dispatch_table_thunk;
    epoxy_glIndexfv = epoxy_glIndexfv_dispatch_table_thunk;
    epoxy_glIndexi = epoxy_glIndexi_dispatch_table_thunk;
    epoxy_glIndexiv = epoxy_glIndexiv_dispatch_table_thunk;
    epoxy_glIndexs = epoxy_glIndexs_dispatch_table_thunk;
    epoxy_glIndexsv = epoxy_glIndexsv_dispatch_table_thunk;
    epoxy_glIndexub = epoxy_glIndexub_dispatch_table_thunk;
    epoxy_glIndexubv = epoxy_glIndexubv_dispatch_table_thunk;
    epoxy_glIndexxOES = epoxy_glIndexxOES_dispatch_table_thunk;
    epoxy_glIndexxvOES = epoxy_glIndexxvOES_dispatch_table_thunk;
    epoxy_glInitNames = epoxy_glInitNames_dispatch_table_thunk;
    epoxy_glInsertComponentEXT = epoxy_glInsertComponentEXT_dispatch_table_thunk;
    epoxy_glInsertEventMarkerEXT = epoxy_glInsertEventMarkerEXT_dispatch_table_thunk;
    epoxy_glInstrumentsBufferSGIX = epoxy_glInstrumentsBufferSGIX_dispatch_table_thunk;
    epoxy_glInterleavedArrays = epoxy_glInterleavedArrays_dispatch_table_thunk;
    epoxy_glInterpolatePathsNV = epoxy_glInterpolatePathsNV_dispatch_table_thunk;
    epoxy_glInvalidateBufferData = epoxy_glInvalidateBufferData_dispatch_table_thunk;
    epoxy_glInvalidateBufferSubData = epoxy_glInvalidateBufferSubData_dispatch_table_thunk;
    epoxy_glInvalidateFramebuffer = epoxy_glInvalidateFramebuffer_dispatch_table_thunk;
    epoxy_glInvalidateNamedFramebufferData = epoxy_glInvalidateNamedFramebufferData_dispatch_table_thunk;
    epoxy_glInvalidateNamedFramebufferSubData = epoxy_glInvalidateNamedFramebufferSubData_dispatch_table_thunk;
    epoxy_glInvalidateSubFramebuffer = epoxy_glInvalidateSubFramebuffer_dispatch_table_thunk;
    epoxy_glInvalidateTexImage = epoxy_glInvalidateTexImage_dispatch_table_thunk;
    epoxy_glInvalidateTexSubImage = epoxy_glInvalidateTexSubImage_dispatch_table_thunk;
    epoxy_glIsAsyncMarkerSGIX = epoxy_glIsAsyncMarkerSGIX_dispatch_table_thunk;
    epoxy_glIsBuffer = epoxy_glIsBuffer_dispatch_table_thunk;
    epoxy_glIsBufferARB = epoxy_glIsBufferARB_dispatch_table_thunk;
    epoxy_glIsBufferResidentNV = epoxy_glIsBufferResidentNV_dispatch_table_thunk;
    epoxy_glIsCommandListNV = epoxy_glIsCommandListNV_dispatch_table_thunk;
    epoxy_glIsEnabled = epoxy_glIsEnabled_dispatch_table_thunk;
    epoxy_glIsEnabledIndexedEXT = epoxy_glIsEnabledIndexedEXT_dispatch_table_thunk;
    epoxy_glIsEnabledi = epoxy_glIsEnabledi_dispatch_table_thunk;
    epoxy_glIsEnablediEXT = epoxy_glIsEnablediEXT_dispatch_table_thunk;
    epoxy_glIsEnablediNV = epoxy_glIsEnablediNV_dispatch_table_thunk;
    epoxy_glIsEnablediOES = epoxy_glIsEnablediOES_dispatch_table_thunk;
    epoxy_glIsFenceAPPLE = epoxy_glIsFenceAPPLE_dispatch_table_thunk;
    epoxy_glIsFenceNV = epoxy_glIsFenceNV_dispatch_table_thunk;
    epoxy_glIsFramebuffer = epoxy_glIsFramebuffer_dispatch_table_thunk;
    epoxy_glIsFramebufferEXT = epoxy_glIsFramebufferEXT_dispatch_table_thunk;
    epoxy_glIsFramebufferOES = epoxy_glIsFramebufferOES_dispatch_table_thunk;
    epoxy_glIsImageHandleResidentARB = epoxy_glIsImageHandleResidentARB_dispatch_table_thunk;
    epoxy_glIsImageHandleResidentNV = epoxy_glIsImageHandleResidentNV_dispatch_table_thunk;
    epoxy_glIsList = epoxy_glIsList_dispatch_table_thunk;
    epoxy_glIsNameAMD = epoxy_glIsNameAMD_dispatch_table_thunk;
    epoxy_glIsNamedBufferResidentNV = epoxy_glIsNamedBufferResidentNV_dispatch_table_thunk;
    epoxy_glIsNamedStringARB = epoxy_glIsNamedStringARB_dispatch_table_thunk;
    epoxy_glIsObjectBufferATI = epoxy_glIsObjectBufferATI_dispatch_table_thunk;
    epoxy_glIsOcclusionQueryNV = epoxy_glIsOcclusionQueryNV_dispatch_table_thunk;
    epoxy_glIsPathNV = epoxy_glIsPathNV_dispatch_table_thunk;
    epoxy_glIsPointInFillPathNV = epoxy_glIsPointInFillPathNV_dispatch_table_thunk;
    epoxy_glIsPointInStrokePathNV = epoxy_glIsPointInStrokePathNV_dispatch_table_thunk;
    epoxy_glIsProgram = epoxy_glIsProgram_dispatch_table_thunk;
    epoxy_glIsProgramARB = epoxy_glIsProgramARB_dispatch_table_thunk;
    epoxy_glIsProgramNV = epoxy_glIsProgramNV_dispatch_table_thunk;
    epoxy_glIsProgramPipeline = epoxy_glIsProgramPipeline_dispatch_table_thunk;
    epoxy_glIsProgramPipelineEXT = epoxy_glIsProgramPipelineEXT_dispatch_table_thunk;
    epoxy_glIsQuery = epoxy_glIsQuery_dispatch_table_thunk;
    epoxy_glIsQueryARB = epoxy_glIsQueryARB_dispatch_table_thunk;
    epoxy_glIsQueryEXT = epoxy_glIsQueryEXT_dispatch_table_thunk;
    epoxy_glIsRenderbuffer = epoxy_glIsRenderbuffer_dispatch_table_thunk;
    epoxy_glIsRenderbufferEXT = epoxy_glIsRenderbufferEXT_dispatch_table_thunk;
    epoxy_glIsRenderbufferOES = epoxy_glIsRenderbufferOES_dispatch_table_thunk;
    epoxy_glIsSampler = epoxy_glIsSampler_dispatch_table_thunk;
    epoxy_glIsShader = epoxy_glIsShader_dispatch_table_thunk;
    epoxy_glIsStateNV = epoxy_glIsStateNV_dispatch_table_thunk;
    epoxy_glIsSync = epoxy_glIsSync_dispatch_table_thunk;
    epoxy_glIsSyncAPPLE = epoxy_glIsSyncAPPLE_dispatch_table_thunk;
    epoxy_glIsTexture = epoxy_glIsTexture_dispatch_table_thunk;
    epoxy_glIsTextureEXT = epoxy_glIsTextureEXT_dispatch_table_thunk;
    epoxy_glIsTextureHandleResidentARB = epoxy_glIsTextureHandleResidentARB_dispatch_table_thunk;
    epoxy_glIsTextureHandleResidentNV = epoxy_glIsTextureHandleResidentNV_dispatch_table_thunk;
    epoxy_glIsTransformFeedback = epoxy_glIsTransformFeedback_dispatch_table_thunk;
    epoxy_glIsTransformFeedbackNV = epoxy_glIsTransformFeedbackNV_dispatch_table_thunk;
    epoxy_glIsVariantEnabledEXT = epoxy_glIsVariantEnabledEXT_dispatch_table_thunk;
    epoxy_glIsVertexArray = epoxy_glIsVertexArray_dispatch_table_thunk;
    epoxy_glIsVertexArrayAPPLE = epoxy_glIsVertexArrayAPPLE_dispatch_table_thunk;
    epoxy_glIsVertexArrayOES = epoxy_glIsVertexArrayOES_dispatch_table_thunk;
    epoxy_glIsVertexAttribEnabledAPPLE = epoxy_glIsVertexAttribEnabledAPPLE_dispatch_table_thunk;
    epoxy_glLabelObjectEXT = epoxy_glLabelObjectEXT_dispatch_table_thunk;
    epoxy_glLightEnviSGIX = epoxy_glLightEnviSGIX_dispatch_table_thunk;
    epoxy_glLightModelf = epoxy_glLightModelf_dispatch_table_thunk;
    epoxy_glLightModelfv = epoxy_glLightModelfv_dispatch_table_thunk;
    epoxy_glLightModeli = epoxy_glLightModeli_dispatch_table_thunk;
    epoxy_glLightModeliv = epoxy_glLightModeliv_dispatch_table_thunk;
    epoxy_glLightModelx = epoxy_glLightModelx_dispatch_table_thunk;
    epoxy_glLightModelxOES = epoxy_glLightModelxOES_dispatch_table_thunk;
    epoxy_glLightModelxv = epoxy_glLightModelxv_dispatch_table_thunk;
    epoxy_glLightModelxvOES = epoxy_glLightModelxvOES_dispatch_table_thunk;
    epoxy_glLightf = epoxy_glLightf_dispatch_table_thunk;
    epoxy_glLightfv = epoxy_glLightfv_dispatch_table_thunk;
    epoxy_glLighti = epoxy_glLighti_dispatch_table_thunk;
    epoxy_glLightiv = epoxy_glLightiv_dispatch_table_thunk;
    epoxy_glLightx = epoxy_glLightx_dispatch_table_thunk;
    epoxy_glLightxOES = epoxy_glLightxOES_dispatch_table_thunk;
    epoxy_glLightxv = epoxy_glLightxv_dispatch_table_thunk;
    epoxy_glLightxvOES = epoxy_glLightxvOES_dispatch_table_thunk;
    epoxy_glLineStipple = epoxy_glLineStipple_dispatch_table_thunk;
    epoxy_glLineWidth = epoxy_glLineWidth_dispatch_table_thunk;
    epoxy_glLineWidthx = epoxy_glLineWidthx_dispatch_table_thunk;
    epoxy_glLineWidthxOES = epoxy_glLineWidthxOES_dispatch_table_thunk;
    epoxy_glLinkProgram = epoxy_glLinkProgram_dispatch_table_thunk;
    epoxy_glLinkProgramARB = epoxy_glLinkProgramARB_dispatch_table_thunk;
    epoxy_glListBase = epoxy_glListBase_dispatch_table_thunk;
    epoxy_glListDrawCommandsStatesClientNV = epoxy_glListDrawCommandsStatesClientNV_dispatch_table_thunk;
    epoxy_glListParameterfSGIX = epoxy_glListParameterfSGIX_dispatch_table_thunk;
    epoxy_glListParameterfvSGIX = epoxy_glListParameterfvSGIX_dispatch_table_thunk;
    epoxy_glListParameteriSGIX = epoxy_glListParameteriSGIX_dispatch_table_thunk;
    epoxy_glListParameterivSGIX = epoxy_glListParameterivSGIX_dispatch_table_thunk;
    epoxy_glLoadIdentity = epoxy_glLoadIdentity_dispatch_table_thunk;
    epoxy_glLoadIdentityDeformationMapSGIX = epoxy_glLoadIdentityDeformationMapSGIX_dispatch_table_thunk;
    epoxy_glLoadMatrixd = epoxy_glLoadMatrixd_dispatch_table_thunk;
    epoxy_glLoadMatrixf = epoxy_glLoadMatrixf_dispatch_table_thunk;
    epoxy_glLoadMatrixx = epoxy_glLoadMatrixx_dispatch_table_thunk;
    epoxy_glLoadMatrixxOES = epoxy_glLoadMatrixxOES_dispatch_table_thunk;
    epoxy_glLoadName = epoxy_glLoadName_dispatch_table_thunk;
    epoxy_glLoadPaletteFromModelViewMatrixOES = epoxy_glLoadPaletteFromModelViewMatrixOES_dispatch_table_thunk;
    epoxy_glLoadProgramNV = epoxy_glLoadProgramNV_dispatch_table_thunk;
    epoxy_glLoadTransposeMatrixd = epoxy_glLoadTransposeMatrixd_dispatch_table_thunk;
    epoxy_glLoadTransposeMatrixdARB = epoxy_glLoadTransposeMatrixdARB_dispatch_table_thunk;
    epoxy_glLoadTransposeMatrixf = epoxy_glLoadTransposeMatrixf_dispatch_table_thunk;
    epoxy_glLoadTransposeMatrixfARB = epoxy_glLoadTransposeMatrixfARB_dispatch_table_thunk;
    epoxy_glLoadTransposeMatrixxOES = epoxy_glLoadTransposeMatrixxOES_dispatch_table_thunk;
    epoxy_glLockArraysEXT = epoxy_glLockArraysEXT_dispatch_table_thunk;
    epoxy_glLogicOp = epoxy_glLogicOp_dispatch_table_thunk;
    epoxy_glMakeBufferNonResidentNV = epoxy_glMakeBufferNonResidentNV_dispatch_table_thunk;
    epoxy_glMakeBufferResidentNV = epoxy_glMakeBufferResidentNV_dispatch_table_thunk;
    epoxy_glMakeImageHandleNonResidentARB = epoxy_glMakeImageHandleNonResidentARB_dispatch_table_thunk;
    epoxy_glMakeImageHandleNonResidentNV = epoxy_glMakeImageHandleNonResidentNV_dispatch_table_thunk;
    epoxy_glMakeImageHandleResidentARB = epoxy_glMakeImageHandleResidentARB_dispatch_table_thunk;
    epoxy_glMakeImageHandleResidentNV = epoxy_glMakeImageHandleResidentNV_dispatch_table_thunk;
    epoxy_glMakeNamedBufferNonResidentNV = epoxy_glMakeNamedBufferNonResidentNV_dispatch_table_thunk;
    epoxy_glMakeNamedBufferResidentNV = epoxy_glMakeNamedBufferResidentNV_dispatch_table_thunk;
    epoxy_glMakeTextureHandleNonResidentARB = epoxy_glMakeTextureHandleNonResidentARB_dispatch_table_thunk;
    epoxy_glMakeTextureHandleNonResidentNV = epoxy_glMakeTextureHandleNonResidentNV_dispatch_table_thunk;
    epoxy_glMakeTextureHandleResidentARB = epoxy_glMakeTextureHandleResidentARB_dispatch_table_thunk;
    epoxy_glMakeTextureHandleResidentNV = epoxy_glMakeTextureHandleResidentNV_dispatch_table_thunk;
    epoxy_glMap1d = epoxy_glMap1d_dispatch_table_thunk;
    epoxy_glMap1f = epoxy_glMap1f_dispatch_table_thunk;
    epoxy_glMap1xOES = epoxy_glMap1xOES_dispatch_table_thunk;
    epoxy_glMap2d = epoxy_glMap2d_dispatch_table_thunk;
    epoxy_glMap2f = epoxy_glMap2f_dispatch_table_thunk;
    epoxy_glMap2xOES = epoxy_glMap2xOES_dispatch_table_thunk;
    epoxy_glMapBuffer = epoxy_glMapBuffer_dispatch_table_thunk;
    epoxy_glMapBufferARB = epoxy_glMapBufferARB_dispatch_table_thunk;
    epoxy_glMapBufferOES = epoxy_glMapBufferOES_dispatch_table_thunk;
    epoxy_glMapBufferRange = epoxy_glMapBufferRange_dispatch_table_thunk;
    epoxy_glMapBufferRangeEXT = epoxy_glMapBufferRangeEXT_dispatch_table_thunk;
    epoxy_glMapControlPointsNV = epoxy_glMapControlPointsNV_dispatch_table_thunk;
    epoxy_glMapGrid1d = epoxy_glMapGrid1d_dispatch_table_thunk;
    epoxy_glMapGrid1f = epoxy_glMapGrid1f_dispatch_table_thunk;
    epoxy_glMapGrid1xOES = epoxy_glMapGrid1xOES_dispatch_table_thunk;
    epoxy_glMapGrid2d = epoxy_glMapGrid2d_dispatch_table_thunk;
    epoxy_glMapGrid2f = epoxy_glMapGrid2f_dispatch_table_thunk;
    epoxy_glMapGrid2xOES = epoxy_glMapGrid2xOES_dispatch_table_thunk;
    epoxy_glMapNamedBuffer = epoxy_glMapNamedBuffer_dispatch_table_thunk;
    epoxy_glMapNamedBufferEXT = epoxy_glMapNamedBufferEXT_dispatch_table_thunk;
    epoxy_glMapNamedBufferRange = epoxy_glMapNamedBufferRange_dispatch_table_thunk;
    epoxy_glMapNamedBufferRangeEXT = epoxy_glMapNamedBufferRangeEXT_dispatch_table_thunk;
    epoxy_glMapObjectBufferATI = epoxy_glMapObjectBufferATI_dispatch_table_thunk;
    epoxy_glMapParameterfvNV = epoxy_glMapParameterfvNV_dispatch_table_thunk;
    epoxy_glMapParameterivNV = epoxy_glMapParameterivNV_dispatch_table_thunk;
    epoxy_glMapTexture2DINTEL = epoxy_glMapTexture2DINTEL_dispatch_table_thunk;
    epoxy_glMapVertexAttrib1dAPPLE = epoxy_glMapVertexAttrib1dAPPLE_dispatch_table_thunk;
    epoxy_glMapVertexAttrib1fAPPLE = epoxy_glMapVertexAttrib1fAPPLE_dispatch_table_thunk;
    epoxy_glMapVertexAttrib2dAPPLE = epoxy_glMapVertexAttrib2dAPPLE_dispatch_table_thunk;
    epoxy_glMapVertexAttrib2fAPPLE = epoxy_glMapVertexAttrib2fAPPLE_dispatch_table_thunk;
    epoxy_glMaterialf = epoxy_glMaterialf_dispatch_table_thunk;
    epoxy_glMaterialfv = epoxy_glMaterialfv_dispatch_table_thunk;
    epoxy_glMateriali = epoxy_glMateriali_dispatch_table_thunk;
    epoxy_glMaterialiv = epoxy_glMaterialiv_dispatch_table_thunk;
    epoxy_glMaterialx = epoxy_glMaterialx_dispatch_table_thunk;
    epoxy_glMaterialxOES = epoxy_glMaterialxOES_dispatch_table_thunk;
    epoxy_glMaterialxv = epoxy_glMaterialxv_dispatch_table_thunk;
    epoxy_glMaterialxvOES = epoxy_glMaterialxvOES_dispatch_table_thunk;
    epoxy_glMatrixFrustumEXT = epoxy_glMatrixFrustumEXT_dispatch_table_thunk;
    epoxy_glMatrixIndexPointerARB = epoxy_glMatrixIndexPointerARB_dispatch_table_thunk;
    epoxy_glMatrixIndexPointerOES = epoxy_glMatrixIndexPointerOES_dispatch_table_thunk;
    epoxy_glMatrixIndexubvARB = epoxy_glMatrixIndexubvARB_dispatch_table_thunk;
    epoxy_glMatrixIndexuivARB = epoxy_glMatrixIndexuivARB_dispatch_table_thunk;
    epoxy_glMatrixIndexusvARB = epoxy_glMatrixIndexusvARB_dispatch_table_thunk;
    epoxy_glMatrixLoad3x2fNV = epoxy_glMatrixLoad3x2fNV_dispatch_table_thunk;
    epoxy_glMatrixLoad3x3fNV = epoxy_glMatrixLoad3x3fNV_dispatch_table_thunk;
    epoxy_glMatrixLoadIdentityEXT = epoxy_glMatrixLoadIdentityEXT_dispatch_table_thunk;
    epoxy_glMatrixLoadTranspose3x3fNV = epoxy_glMatrixLoadTranspose3x3fNV_dispatch_table_thunk;
    epoxy_glMatrixLoadTransposedEXT = epoxy_glMatrixLoadTransposedEXT_dispatch_table_thunk;
    epoxy_glMatrixLoadTransposefEXT = epoxy_glMatrixLoadTransposefEXT_dispatch_table_thunk;
    epoxy_glMatrixLoaddEXT = epoxy_glMatrixLoaddEXT_dispatch_table_thunk;
    epoxy_glMatrixLoadfEXT = epoxy_glMatrixLoadfEXT_dispatch_table_thunk;
    epoxy_glMatrixMode = epoxy_glMatrixMode_dispatch_table_thunk;
    epoxy_glMatrixMult3x2fNV = epoxy_glMatrixMult3x2fNV_dispatch_table_thunk;
    epoxy_glMatrixMult3x3fNV = epoxy_glMatrixMult3x3fNV_dispatch_table_thunk;
    epoxy_glMatrixMultTranspose3x3fNV = epoxy_glMatrixMultTranspose3x3fNV_dispatch_table_thunk;
    epoxy_glMatrixMultTransposedEXT = epoxy_glMatrixMultTransposedEXT_dispatch_table_thunk;
    epoxy_glMatrixMultTransposefEXT = epoxy_glMatrixMultTransposefEXT_dispatch_table_thunk;
    epoxy_glMatrixMultdEXT = epoxy_glMatrixMultdEXT_dispatch_table_thunk;
    epoxy_glMatrixMultfEXT = epoxy_glMatrixMultfEXT_dispatch_table_thunk;
    epoxy_glMatrixOrthoEXT = epoxy_glMatrixOrthoEXT_dispatch_table_thunk;
    epoxy_glMatrixPopEXT = epoxy_glMatrixPopEXT_dispatch_table_thunk;
    epoxy_glMatrixPushEXT = epoxy_glMatrixPushEXT_dispatch_table_thunk;
    epoxy_glMatrixRotatedEXT = epoxy_glMatrixRotatedEXT_dispatch_table_thunk;
    epoxy_glMatrixRotatefEXT = epoxy_glMatrixRotatefEXT_dispatch_table_thunk;
    epoxy_glMatrixScaledEXT = epoxy_glMatrixScaledEXT_dispatch_table_thunk;
    epoxy_glMatrixScalefEXT = epoxy_glMatrixScalefEXT_dispatch_table_thunk;
    epoxy_glMatrixTranslatedEXT = epoxy_glMatrixTranslatedEXT_dispatch_table_thunk;
    epoxy_glMatrixTranslatefEXT = epoxy_glMatrixTranslatefEXT_dispatch_table_thunk;
    epoxy_glMemoryBarrier = epoxy_glMemoryBarrier_dispatch_table_thunk;
    epoxy_glMemoryBarrierByRegion = epoxy_glMemoryBarrierByRegion_dispatch_table_thunk;
    epoxy_glMemoryBarrierEXT = epoxy_glMemoryBarrierEXT_dispatch_table_thunk;
    epoxy_glMinSampleShading = epoxy_glMinSampleShading_dispatch_table_thunk;
    epoxy_glMinSampleShadingARB = epoxy_glMinSampleShadingARB_dispatch_table_thunk;
    epoxy_glMinSampleShadingOES = epoxy_glMinSampleShadingOES_dispatch_table_thunk;
    epoxy_glMinmax = epoxy_glMinmax_dispatch_table_thunk;
    epoxy_glMinmaxEXT = epoxy_glMinmaxEXT_dispatch_table_thunk;
    epoxy_glMultMatrixd = epoxy_glMultMatrixd_dispatch_table_thunk;
    epoxy_glMultMatrixf = epoxy_glMultMatrixf_dispatch_table_thunk;
    epoxy_glMultMatrixx = epoxy_glMultMatrixx_dispatch_table_thunk;
    epoxy_glMultMatrixxOES = epoxy_glMultMatrixxOES_dispatch_table_thunk;
    epoxy_glMultTransposeMatrixd = epoxy_glMultTransposeMatrixd_dispatch_table_thunk;
    epoxy_glMultTransposeMatrixdARB = epoxy_glMultTransposeMatrixdARB_dispatch_table_thunk;
    epoxy_glMultTransposeMatrixf = epoxy_glMultTransposeMatrixf_dispatch_table_thunk;
    epoxy_glMultTransposeMatrixfARB = epoxy_glMultTransposeMatrixfARB_dispatch_table_thunk;
    epoxy_glMultTransposeMatrixxOES = epoxy_glMultTransposeMatrixxOES_dispatch_table_thunk;
    epoxy_glMultiDrawArrays = epoxy_glMultiDrawArrays_dispatch_table_thunk;
    epoxy_glMultiDrawArraysEXT = epoxy_glMultiDrawArraysEXT_dispatch_table_thunk;
    epoxy_glMultiDrawArraysIndirect = epoxy_glMultiDrawArraysIndirect_dispatch_table_thunk;
    epoxy_glMultiDrawArraysIndirectAMD = epoxy_glMultiDrawArraysIndirectAMD_dispatch_table_thunk;
    epoxy_glMultiDrawArraysIndirectBindlessCountNV = epoxy_glMultiDrawArraysIndirectBindlessCountNV_dispatch_table_thunk;
    epoxy_glMultiDrawArraysIndirectBindlessNV = epoxy_glMultiDrawArraysIndirectBindlessNV_dispatch_table_thunk;
    epoxy_glMultiDrawArraysIndirectCountARB = epoxy_glMultiDrawArraysIndirectCountARB_dispatch_table_thunk;
    epoxy_glMultiDrawArraysIndirectEXT = epoxy_glMultiDrawArraysIndirectEXT_dispatch_table_thunk;
    epoxy_glMultiDrawElementArrayAPPLE = epoxy_glMultiDrawElementArrayAPPLE_dispatch_table_thunk;
    epoxy_glMultiDrawElements = epoxy_glMultiDrawElements_dispatch_table_thunk;
    epoxy_glMultiDrawElementsBaseVertex = epoxy_glMultiDrawElementsBaseVertex_dispatch_table_thunk;
    epoxy_glMultiDrawElementsBaseVertexEXT = epoxy_glMultiDrawElementsBaseVertexEXT_dispatch_table_thunk;
    epoxy_glMultiDrawElementsBaseVertexOES = epoxy_glMultiDrawElementsBaseVertexOES_dispatch_table_thunk;
    epoxy_glMultiDrawElementsEXT = epoxy_glMultiDrawElementsEXT_dispatch_table_thunk;
    epoxy_glMultiDrawElementsIndirect = epoxy_glMultiDrawElementsIndirect_dispatch_table_thunk;
    epoxy_glMultiDrawElementsIndirectAMD = epoxy_glMultiDrawElementsIndirectAMD_dispatch_table_thunk;
    epoxy_glMultiDrawElementsIndirectBindlessCountNV = epoxy_glMultiDrawElementsIndirectBindlessCountNV_dispatch_table_thunk;
    epoxy_glMultiDrawElementsIndirectBindlessNV = epoxy_glMultiDrawElementsIndirectBindlessNV_dispatch_table_thunk;
    epoxy_glMultiDrawElementsIndirectCountARB = epoxy_glMultiDrawElementsIndirectCountARB_dispatch_table_thunk;
    epoxy_glMultiDrawElementsIndirectEXT = epoxy_glMultiDrawElementsIndirectEXT_dispatch_table_thunk;
    epoxy_glMultiDrawRangeElementArrayAPPLE = epoxy_glMultiDrawRangeElementArrayAPPLE_dispatch_table_thunk;
    epoxy_glMultiModeDrawArraysIBM = epoxy_glMultiModeDrawArraysIBM_dispatch_table_thunk;
    epoxy_glMultiModeDrawElementsIBM = epoxy_glMultiModeDrawElementsIBM_dispatch_table_thunk;
    epoxy_glMultiTexBufferEXT = epoxy_glMultiTexBufferEXT_dispatch_table_thunk;
    epoxy_glMultiTexCoord1bOES = epoxy_glMultiTexCoord1bOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord1bvOES = epoxy_glMultiTexCoord1bvOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord1d = epoxy_glMultiTexCoord1d_dispatch_table_thunk;
    epoxy_glMultiTexCoord1dARB = epoxy_glMultiTexCoord1dARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord1dv = epoxy_glMultiTexCoord1dv_dispatch_table_thunk;
    epoxy_glMultiTexCoord1dvARB = epoxy_glMultiTexCoord1dvARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord1f = epoxy_glMultiTexCoord1f_dispatch_table_thunk;
    epoxy_glMultiTexCoord1fARB = epoxy_glMultiTexCoord1fARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord1fv = epoxy_glMultiTexCoord1fv_dispatch_table_thunk;
    epoxy_glMultiTexCoord1fvARB = epoxy_glMultiTexCoord1fvARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord1hNV = epoxy_glMultiTexCoord1hNV_dispatch_table_thunk;
    epoxy_glMultiTexCoord1hvNV = epoxy_glMultiTexCoord1hvNV_dispatch_table_thunk;
    epoxy_glMultiTexCoord1i = epoxy_glMultiTexCoord1i_dispatch_table_thunk;
    epoxy_glMultiTexCoord1iARB = epoxy_glMultiTexCoord1iARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord1iv = epoxy_glMultiTexCoord1iv_dispatch_table_thunk;
    epoxy_glMultiTexCoord1ivARB = epoxy_glMultiTexCoord1ivARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord1s = epoxy_glMultiTexCoord1s_dispatch_table_thunk;
    epoxy_glMultiTexCoord1sARB = epoxy_glMultiTexCoord1sARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord1sv = epoxy_glMultiTexCoord1sv_dispatch_table_thunk;
    epoxy_glMultiTexCoord1svARB = epoxy_glMultiTexCoord1svARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord1xOES = epoxy_glMultiTexCoord1xOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord1xvOES = epoxy_glMultiTexCoord1xvOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord2bOES = epoxy_glMultiTexCoord2bOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord2bvOES = epoxy_glMultiTexCoord2bvOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord2d = epoxy_glMultiTexCoord2d_dispatch_table_thunk;
    epoxy_glMultiTexCoord2dARB = epoxy_glMultiTexCoord2dARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord2dv = epoxy_glMultiTexCoord2dv_dispatch_table_thunk;
    epoxy_glMultiTexCoord2dvARB = epoxy_glMultiTexCoord2dvARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord2f = epoxy_glMultiTexCoord2f_dispatch_table_thunk;
    epoxy_glMultiTexCoord2fARB = epoxy_glMultiTexCoord2fARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord2fv = epoxy_glMultiTexCoord2fv_dispatch_table_thunk;
    epoxy_glMultiTexCoord2fvARB = epoxy_glMultiTexCoord2fvARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord2hNV = epoxy_glMultiTexCoord2hNV_dispatch_table_thunk;
    epoxy_glMultiTexCoord2hvNV = epoxy_glMultiTexCoord2hvNV_dispatch_table_thunk;
    epoxy_glMultiTexCoord2i = epoxy_glMultiTexCoord2i_dispatch_table_thunk;
    epoxy_glMultiTexCoord2iARB = epoxy_glMultiTexCoord2iARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord2iv = epoxy_glMultiTexCoord2iv_dispatch_table_thunk;
    epoxy_glMultiTexCoord2ivARB = epoxy_glMultiTexCoord2ivARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord2s = epoxy_glMultiTexCoord2s_dispatch_table_thunk;
    epoxy_glMultiTexCoord2sARB = epoxy_glMultiTexCoord2sARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord2sv = epoxy_glMultiTexCoord2sv_dispatch_table_thunk;
    epoxy_glMultiTexCoord2svARB = epoxy_glMultiTexCoord2svARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord2xOES = epoxy_glMultiTexCoord2xOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord2xvOES = epoxy_glMultiTexCoord2xvOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord3bOES = epoxy_glMultiTexCoord3bOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord3bvOES = epoxy_glMultiTexCoord3bvOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord3d = epoxy_glMultiTexCoord3d_dispatch_table_thunk;
    epoxy_glMultiTexCoord3dARB = epoxy_glMultiTexCoord3dARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord3dv = epoxy_glMultiTexCoord3dv_dispatch_table_thunk;
    epoxy_glMultiTexCoord3dvARB = epoxy_glMultiTexCoord3dvARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord3f = epoxy_glMultiTexCoord3f_dispatch_table_thunk;
    epoxy_glMultiTexCoord3fARB = epoxy_glMultiTexCoord3fARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord3fv = epoxy_glMultiTexCoord3fv_dispatch_table_thunk;
    epoxy_glMultiTexCoord3fvARB = epoxy_glMultiTexCoord3fvARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord3hNV = epoxy_glMultiTexCoord3hNV_dispatch_table_thunk;
    epoxy_glMultiTexCoord3hvNV = epoxy_glMultiTexCoord3hvNV_dispatch_table_thunk;
    epoxy_glMultiTexCoord3i = epoxy_glMultiTexCoord3i_dispatch_table_thunk;
    epoxy_glMultiTexCoord3iARB = epoxy_glMultiTexCoord3iARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord3iv = epoxy_glMultiTexCoord3iv_dispatch_table_thunk;
    epoxy_glMultiTexCoord3ivARB = epoxy_glMultiTexCoord3ivARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord3s = epoxy_glMultiTexCoord3s_dispatch_table_thunk;
    epoxy_glMultiTexCoord3sARB = epoxy_glMultiTexCoord3sARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord3sv = epoxy_glMultiTexCoord3sv_dispatch_table_thunk;
    epoxy_glMultiTexCoord3svARB = epoxy_glMultiTexCoord3svARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord3xOES = epoxy_glMultiTexCoord3xOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord3xvOES = epoxy_glMultiTexCoord3xvOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord4bOES = epoxy_glMultiTexCoord4bOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord4bvOES = epoxy_glMultiTexCoord4bvOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord4d = epoxy_glMultiTexCoord4d_dispatch_table_thunk;
    epoxy_glMultiTexCoord4dARB = epoxy_glMultiTexCoord4dARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord4dv = epoxy_glMultiTexCoord4dv_dispatch_table_thunk;
    epoxy_glMultiTexCoord4dvARB = epoxy_glMultiTexCoord4dvARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord4f = epoxy_glMultiTexCoord4f_dispatch_table_thunk;
    epoxy_glMultiTexCoord4fARB = epoxy_glMultiTexCoord4fARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord4fv = epoxy_glMultiTexCoord4fv_dispatch_table_thunk;
    epoxy_glMultiTexCoord4fvARB = epoxy_glMultiTexCoord4fvARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord4hNV = epoxy_glMultiTexCoord4hNV_dispatch_table_thunk;
    epoxy_glMultiTexCoord4hvNV = epoxy_glMultiTexCoord4hvNV_dispatch_table_thunk;
    epoxy_glMultiTexCoord4i = epoxy_glMultiTexCoord4i_dispatch_table_thunk;
    epoxy_glMultiTexCoord4iARB = epoxy_glMultiTexCoord4iARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord4iv = epoxy_glMultiTexCoord4iv_dispatch_table_thunk;
    epoxy_glMultiTexCoord4ivARB = epoxy_glMultiTexCoord4ivARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord4s = epoxy_glMultiTexCoord4s_dispatch_table_thunk;
    epoxy_glMultiTexCoord4sARB = epoxy_glMultiTexCoord4sARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord4sv = epoxy_glMultiTexCoord4sv_dispatch_table_thunk;
    epoxy_glMultiTexCoord4svARB = epoxy_glMultiTexCoord4svARB_dispatch_table_thunk;
    epoxy_glMultiTexCoord4x = epoxy_glMultiTexCoord4x_dispatch_table_thunk;
    epoxy_glMultiTexCoord4xOES = epoxy_glMultiTexCoord4xOES_dispatch_table_thunk;
    epoxy_glMultiTexCoord4xvOES = epoxy_glMultiTexCoord4xvOES_dispatch_table_thunk;
    epoxy_glMultiTexCoordP1ui = epoxy_glMultiTexCoordP1ui_dispatch_table_thunk;
    epoxy_glMultiTexCoordP1uiv = epoxy_glMultiTexCoordP1uiv_dispatch_table_thunk;
    epoxy_glMultiTexCoordP2ui = epoxy_glMultiTexCoordP2ui_dispatch_table_thunk;
    epoxy_glMultiTexCoordP2uiv = epoxy_glMultiTexCoordP2uiv_dispatch_table_thunk;
    epoxy_glMultiTexCoordP3ui = epoxy_glMultiTexCoordP3ui_dispatch_table_thunk;
    epoxy_glMultiTexCoordP3uiv = epoxy_glMultiTexCoordP3uiv_dispatch_table_thunk;
    epoxy_glMultiTexCoordP4ui = epoxy_glMultiTexCoordP4ui_dispatch_table_thunk;
    epoxy_glMultiTexCoordP4uiv = epoxy_glMultiTexCoordP4uiv_dispatch_table_thunk;
    epoxy_glMultiTexCoordPointerEXT = epoxy_glMultiTexCoordPointerEXT_dispatch_table_thunk;
    epoxy_glMultiTexEnvfEXT = epoxy_glMultiTexEnvfEXT_dispatch_table_thunk;
    epoxy_glMultiTexEnvfvEXT = epoxy_glMultiTexEnvfvEXT_dispatch_table_thunk;
    epoxy_glMultiTexEnviEXT = epoxy_glMultiTexEnviEXT_dispatch_table_thunk;
    epoxy_glMultiTexEnvivEXT = epoxy_glMultiTexEnvivEXT_dispatch_table_thunk;
    epoxy_glMultiTexGendEXT = epoxy_glMultiTexGendEXT_dispatch_table_thunk;
    epoxy_glMultiTexGendvEXT = epoxy_glMultiTexGendvEXT_dispatch_table_thunk;
    epoxy_glMultiTexGenfEXT = epoxy_glMultiTexGenfEXT_dispatch_table_thunk;
    epoxy_glMultiTexGenfvEXT = epoxy_glMultiTexGenfvEXT_dispatch_table_thunk;
    epoxy_glMultiTexGeniEXT = epoxy_glMultiTexGeniEXT_dispatch_table_thunk;
    epoxy_glMultiTexGenivEXT = epoxy_glMultiTexGenivEXT_dispatch_table_thunk;
    epoxy_glMultiTexImage1DEXT = epoxy_glMultiTexImage1DEXT_dispatch_table_thunk;
    epoxy_glMultiTexImage2DEXT = epoxy_glMultiTexImage2DEXT_dispatch_table_thunk;
    epoxy_glMultiTexImage3DEXT = epoxy_glMultiTexImage3DEXT_dispatch_table_thunk;
    epoxy_glMultiTexParameterIivEXT = epoxy_glMultiTexParameterIivEXT_dispatch_table_thunk;
    epoxy_glMultiTexParameterIuivEXT = epoxy_glMultiTexParameterIuivEXT_dispatch_table_thunk;
    epoxy_glMultiTexParameterfEXT = epoxy_glMultiTexParameterfEXT_dispatch_table_thunk;
    epoxy_glMultiTexParameterfvEXT = epoxy_glMultiTexParameterfvEXT_dispatch_table_thunk;
    epoxy_glMultiTexParameteriEXT = epoxy_glMultiTexParameteriEXT_dispatch_table_thunk;
    epoxy_glMultiTexParameterivEXT = epoxy_glMultiTexParameterivEXT_dispatch_table_thunk;
    epoxy_glMultiTexRenderbufferEXT = epoxy_glMultiTexRenderbufferEXT_dispatch_table_thunk;
    epoxy_glMultiTexSubImage1DEXT = epoxy_glMultiTexSubImage1DEXT_dispatch_table_thunk;
    epoxy_glMultiTexSubImage2DEXT = epoxy_glMultiTexSubImage2DEXT_dispatch_table_thunk;
    epoxy_glMultiTexSubImage3DEXT = epoxy_glMultiTexSubImage3DEXT_dispatch_table_thunk;
    epoxy_glNamedBufferData = epoxy_glNamedBufferData_dispatch_table_thunk;
    epoxy_glNamedBufferDataEXT = epoxy_glNamedBufferDataEXT_dispatch_table_thunk;
    epoxy_glNamedBufferPageCommitmentARB = epoxy_glNamedBufferPageCommitmentARB_dispatch_table_thunk;
    epoxy_glNamedBufferPageCommitmentEXT = epoxy_glNamedBufferPageCommitmentEXT_dispatch_table_thunk;
    epoxy_glNamedBufferStorage = epoxy_glNamedBufferStorage_dispatch_table_thunk;
    epoxy_glNamedBufferStorageEXT = epoxy_glNamedBufferStorageEXT_dispatch_table_thunk;
    epoxy_glNamedBufferSubData = epoxy_glNamedBufferSubData_dispatch_table_thunk;
    epoxy_glNamedBufferSubDataEXT = epoxy_glNamedBufferSubDataEXT_dispatch_table_thunk;
    epoxy_glNamedCopyBufferSubDataEXT = epoxy_glNamedCopyBufferSubDataEXT_dispatch_table_thunk;
    epoxy_glNamedFramebufferDrawBuffer = epoxy_glNamedFramebufferDrawBuffer_dispatch_table_thunk;
    epoxy_glNamedFramebufferDrawBuffers = epoxy_glNamedFramebufferDrawBuffers_dispatch_table_thunk;
    epoxy_glNamedFramebufferParameteri = epoxy_glNamedFramebufferParameteri_dispatch_table_thunk;
    epoxy_glNamedFramebufferParameteriEXT = epoxy_glNamedFramebufferParameteriEXT_dispatch_table_thunk;
    epoxy_glNamedFramebufferReadBuffer = epoxy_glNamedFramebufferReadBuffer_dispatch_table_thunk;
    epoxy_glNamedFramebufferRenderbuffer = epoxy_glNamedFramebufferRenderbuffer_dispatch_table_thunk;
    epoxy_glNamedFramebufferRenderbufferEXT = epoxy_glNamedFramebufferRenderbufferEXT_dispatch_table_thunk;
    epoxy_glNamedFramebufferSampleLocationsfvNV = epoxy_glNamedFramebufferSampleLocationsfvNV_dispatch_table_thunk;
    epoxy_glNamedFramebufferTexture = epoxy_glNamedFramebufferTexture_dispatch_table_thunk;
    epoxy_glNamedFramebufferTexture1DEXT = epoxy_glNamedFramebufferTexture1DEXT_dispatch_table_thunk;
    epoxy_glNamedFramebufferTexture2DEXT = epoxy_glNamedFramebufferTexture2DEXT_dispatch_table_thunk;
    epoxy_glNamedFramebufferTexture3DEXT = epoxy_glNamedFramebufferTexture3DEXT_dispatch_table_thunk;
    epoxy_glNamedFramebufferTextureEXT = epoxy_glNamedFramebufferTextureEXT_dispatch_table_thunk;
    epoxy_glNamedFramebufferTextureFaceEXT = epoxy_glNamedFramebufferTextureFaceEXT_dispatch_table_thunk;
    epoxy_glNamedFramebufferTextureLayer = epoxy_glNamedFramebufferTextureLayer_dispatch_table_thunk;
    epoxy_glNamedFramebufferTextureLayerEXT = epoxy_glNamedFramebufferTextureLayerEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParameter4dEXT = epoxy_glNamedProgramLocalParameter4dEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParameter4dvEXT = epoxy_glNamedProgramLocalParameter4dvEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParameter4fEXT = epoxy_glNamedProgramLocalParameter4fEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParameter4fvEXT = epoxy_glNamedProgramLocalParameter4fvEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParameterI4iEXT = epoxy_glNamedProgramLocalParameterI4iEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParameterI4ivEXT = epoxy_glNamedProgramLocalParameterI4ivEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParameterI4uiEXT = epoxy_glNamedProgramLocalParameterI4uiEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParameterI4uivEXT = epoxy_glNamedProgramLocalParameterI4uivEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParameters4fvEXT = epoxy_glNamedProgramLocalParameters4fvEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParametersI4ivEXT = epoxy_glNamedProgramLocalParametersI4ivEXT_dispatch_table_thunk;
    epoxy_glNamedProgramLocalParametersI4uivEXT = epoxy_glNamedProgramLocalParametersI4uivEXT_dispatch_table_thunk;
    epoxy_glNamedProgramStringEXT = epoxy_glNamedProgramStringEXT_dispatch_table_thunk;
    epoxy_glNamedRenderbufferStorage = epoxy_glNamedRenderbufferStorage_dispatch_table_thunk;
    epoxy_glNamedRenderbufferStorageEXT = epoxy_glNamedRenderbufferStorageEXT_dispatch_table_thunk;
    epoxy_glNamedRenderbufferStorageMultisample = epoxy_glNamedRenderbufferStorageMultisample_dispatch_table_thunk;
    epoxy_glNamedRenderbufferStorageMultisampleCoverageEXT = epoxy_glNamedRenderbufferStorageMultisampleCoverageEXT_dispatch_table_thunk;
    epoxy_glNamedRenderbufferStorageMultisampleEXT = epoxy_glNamedRenderbufferStorageMultisampleEXT_dispatch_table_thunk;
    epoxy_glNamedStringARB = epoxy_glNamedStringARB_dispatch_table_thunk;
    epoxy_glNewList = epoxy_glNewList_dispatch_table_thunk;
    epoxy_glNewObjectBufferATI = epoxy_glNewObjectBufferATI_dispatch_table_thunk;
    epoxy_glNormal3b = epoxy_glNormal3b_dispatch_table_thunk;
    epoxy_glNormal3bv = epoxy_glNormal3bv_dispatch_table_thunk;
    epoxy_glNormal3d = epoxy_glNormal3d_dispatch_table_thunk;
    epoxy_glNormal3dv = epoxy_glNormal3dv_dispatch_table_thunk;
    epoxy_glNormal3f = epoxy_glNormal3f_dispatch_table_thunk;
    epoxy_glNormal3fVertex3fSUN = epoxy_glNormal3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glNormal3fVertex3fvSUN = epoxy_glNormal3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glNormal3fv = epoxy_glNormal3fv_dispatch_table_thunk;
    epoxy_glNormal3hNV = epoxy_glNormal3hNV_dispatch_table_thunk;
    epoxy_glNormal3hvNV = epoxy_glNormal3hvNV_dispatch_table_thunk;
    epoxy_glNormal3i = epoxy_glNormal3i_dispatch_table_thunk;
    epoxy_glNormal3iv = epoxy_glNormal3iv_dispatch_table_thunk;
    epoxy_glNormal3s = epoxy_glNormal3s_dispatch_table_thunk;
    epoxy_glNormal3sv = epoxy_glNormal3sv_dispatch_table_thunk;
    epoxy_glNormal3x = epoxy_glNormal3x_dispatch_table_thunk;
    epoxy_glNormal3xOES = epoxy_glNormal3xOES_dispatch_table_thunk;
    epoxy_glNormal3xvOES = epoxy_glNormal3xvOES_dispatch_table_thunk;
    epoxy_glNormalFormatNV = epoxy_glNormalFormatNV_dispatch_table_thunk;
    epoxy_glNormalP3ui = epoxy_glNormalP3ui_dispatch_table_thunk;
    epoxy_glNormalP3uiv = epoxy_glNormalP3uiv_dispatch_table_thunk;
    epoxy_glNormalPointer = epoxy_glNormalPointer_dispatch_table_thunk;
    epoxy_glNormalPointerEXT = epoxy_glNormalPointerEXT_dispatch_table_thunk;
    epoxy_glNormalPointerListIBM = epoxy_glNormalPointerListIBM_dispatch_table_thunk;
    epoxy_glNormalPointervINTEL = epoxy_glNormalPointervINTEL_dispatch_table_thunk;
    epoxy_glNormalStream3bATI = epoxy_glNormalStream3bATI_dispatch_table_thunk;
    epoxy_glNormalStream3bvATI = epoxy_glNormalStream3bvATI_dispatch_table_thunk;
    epoxy_glNormalStream3dATI = epoxy_glNormalStream3dATI_dispatch_table_thunk;
    epoxy_glNormalStream3dvATI = epoxy_glNormalStream3dvATI_dispatch_table_thunk;
    epoxy_glNormalStream3fATI = epoxy_glNormalStream3fATI_dispatch_table_thunk;
    epoxy_glNormalStream3fvATI = epoxy_glNormalStream3fvATI_dispatch_table_thunk;
    epoxy_glNormalStream3iATI = epoxy_glNormalStream3iATI_dispatch_table_thunk;
    epoxy_glNormalStream3ivATI = epoxy_glNormalStream3ivATI_dispatch_table_thunk;
    epoxy_glNormalStream3sATI = epoxy_glNormalStream3sATI_dispatch_table_thunk;
    epoxy_glNormalStream3svATI = epoxy_glNormalStream3svATI_dispatch_table_thunk;
    epoxy_glObjectLabel = epoxy_glObjectLabel_dispatch_table_thunk;
    epoxy_glObjectLabelKHR = epoxy_glObjectLabelKHR_dispatch_table_thunk;
    epoxy_glObjectPtrLabel = epoxy_glObjectPtrLabel_dispatch_table_thunk;
    epoxy_glObjectPtrLabelKHR = epoxy_glObjectPtrLabelKHR_dispatch_table_thunk;
    epoxy_glObjectPurgeableAPPLE = epoxy_glObjectPurgeableAPPLE_dispatch_table_thunk;
    epoxy_glObjectUnpurgeableAPPLE = epoxy_glObjectUnpurgeableAPPLE_dispatch_table_thunk;
    epoxy_glOrtho = epoxy_glOrtho_dispatch_table_thunk;
    epoxy_glOrthof = epoxy_glOrthof_dispatch_table_thunk;
    epoxy_glOrthofOES = epoxy_glOrthofOES_dispatch_table_thunk;
    epoxy_glOrthox = epoxy_glOrthox_dispatch_table_thunk;
    epoxy_glOrthoxOES = epoxy_glOrthoxOES_dispatch_table_thunk;
    epoxy_glPNTrianglesfATI = epoxy_glPNTrianglesfATI_dispatch_table_thunk;
    epoxy_glPNTrianglesiATI = epoxy_glPNTrianglesiATI_dispatch_table_thunk;
    epoxy_glPassTexCoordATI = epoxy_glPassTexCoordATI_dispatch_table_thunk;
    epoxy_glPassThrough = epoxy_glPassThrough_dispatch_table_thunk;
    epoxy_glPassThroughxOES = epoxy_glPassThroughxOES_dispatch_table_thunk;
    epoxy_glPatchParameterfv = epoxy_glPatchParameterfv_dispatch_table_thunk;
    epoxy_glPatchParameteri = epoxy_glPatchParameteri_dispatch_table_thunk;
    epoxy_glPatchParameteriEXT = epoxy_glPatchParameteriEXT_dispatch_table_thunk;
    epoxy_glPatchParameteriOES = epoxy_glPatchParameteriOES_dispatch_table_thunk;
    epoxy_glPathColorGenNV = epoxy_glPathColorGenNV_dispatch_table_thunk;
    epoxy_glPathCommandsNV = epoxy_glPathCommandsNV_dispatch_table_thunk;
    epoxy_glPathCoordsNV = epoxy_glPathCoordsNV_dispatch_table_thunk;
    epoxy_glPathCoverDepthFuncNV = epoxy_glPathCoverDepthFuncNV_dispatch_table_thunk;
    epoxy_glPathDashArrayNV = epoxy_glPathDashArrayNV_dispatch_table_thunk;
    epoxy_glPathFogGenNV = epoxy_glPathFogGenNV_dispatch_table_thunk;
    epoxy_glPathGlyphIndexArrayNV = epoxy_glPathGlyphIndexArrayNV_dispatch_table_thunk;
    epoxy_glPathGlyphIndexRangeNV = epoxy_glPathGlyphIndexRangeNV_dispatch_table_thunk;
    epoxy_glPathGlyphRangeNV = epoxy_glPathGlyphRangeNV_dispatch_table_thunk;
    epoxy_glPathGlyphsNV = epoxy_glPathGlyphsNV_dispatch_table_thunk;
    epoxy_glPathMemoryGlyphIndexArrayNV = epoxy_glPathMemoryGlyphIndexArrayNV_dispatch_table_thunk;
    epoxy_glPathParameterfNV = epoxy_glPathParameterfNV_dispatch_table_thunk;
    epoxy_glPathParameterfvNV = epoxy_glPathParameterfvNV_dispatch_table_thunk;
    epoxy_glPathParameteriNV = epoxy_glPathParameteriNV_dispatch_table_thunk;
    epoxy_glPathParameterivNV = epoxy_glPathParameterivNV_dispatch_table_thunk;
    epoxy_glPathStencilDepthOffsetNV = epoxy_glPathStencilDepthOffsetNV_dispatch_table_thunk;
    epoxy_glPathStencilFuncNV = epoxy_glPathStencilFuncNV_dispatch_table_thunk;
    epoxy_glPathStringNV = epoxy_glPathStringNV_dispatch_table_thunk;
    epoxy_glPathSubCommandsNV = epoxy_glPathSubCommandsNV_dispatch_table_thunk;
    epoxy_glPathSubCoordsNV = epoxy_glPathSubCoordsNV_dispatch_table_thunk;
    epoxy_glPathTexGenNV = epoxy_glPathTexGenNV_dispatch_table_thunk;
    epoxy_glPauseTransformFeedback = epoxy_glPauseTransformFeedback_dispatch_table_thunk;
    epoxy_glPauseTransformFeedbackNV = epoxy_glPauseTransformFeedbackNV_dispatch_table_thunk;
    epoxy_glPixelDataRangeNV = epoxy_glPixelDataRangeNV_dispatch_table_thunk;
    epoxy_glPixelMapfv = epoxy_glPixelMapfv_dispatch_table_thunk;
    epoxy_glPixelMapuiv = epoxy_glPixelMapuiv_dispatch_table_thunk;
    epoxy_glPixelMapusv = epoxy_glPixelMapusv_dispatch_table_thunk;
    epoxy_glPixelMapx = epoxy_glPixelMapx_dispatch_table_thunk;
    epoxy_glPixelStoref = epoxy_glPixelStoref_dispatch_table_thunk;
    epoxy_glPixelStorei = epoxy_glPixelStorei_dispatch_table_thunk;
    epoxy_glPixelStorex = epoxy_glPixelStorex_dispatch_table_thunk;
    epoxy_glPixelTexGenParameterfSGIS = epoxy_glPixelTexGenParameterfSGIS_dispatch_table_thunk;
    epoxy_glPixelTexGenParameterfvSGIS = epoxy_glPixelTexGenParameterfvSGIS_dispatch_table_thunk;
    epoxy_glPixelTexGenParameteriSGIS = epoxy_glPixelTexGenParameteriSGIS_dispatch_table_thunk;
    epoxy_glPixelTexGenParameterivSGIS = epoxy_glPixelTexGenParameterivSGIS_dispatch_table_thunk;
    epoxy_glPixelTexGenSGIX = epoxy_glPixelTexGenSGIX_dispatch_table_thunk;
    epoxy_glPixelTransferf = epoxy_glPixelTransferf_dispatch_table_thunk;
    epoxy_glPixelTransferi = epoxy_glPixelTransferi_dispatch_table_thunk;
    epoxy_glPixelTransferxOES = epoxy_glPixelTransferxOES_dispatch_table_thunk;
    epoxy_glPixelTransformParameterfEXT = epoxy_glPixelTransformParameterfEXT_dispatch_table_thunk;
    epoxy_glPixelTransformParameterfvEXT = epoxy_glPixelTransformParameterfvEXT_dispatch_table_thunk;
    epoxy_glPixelTransformParameteriEXT = epoxy_glPixelTransformParameteriEXT_dispatch_table_thunk;
    epoxy_glPixelTransformParameterivEXT = epoxy_glPixelTransformParameterivEXT_dispatch_table_thunk;
    epoxy_glPixelZoom = epoxy_glPixelZoom_dispatch_table_thunk;
    epoxy_glPixelZoomxOES = epoxy_glPixelZoomxOES_dispatch_table_thunk;
    epoxy_glPointAlongPathNV = epoxy_glPointAlongPathNV_dispatch_table_thunk;
    epoxy_glPointParameterf = epoxy_glPointParameterf_dispatch_table_thunk;
    epoxy_glPointParameterfARB = epoxy_glPointParameterfARB_dispatch_table_thunk;
    epoxy_glPointParameterfEXT = epoxy_glPointParameterfEXT_dispatch_table_thunk;
    epoxy_glPointParameterfSGIS = epoxy_glPointParameterfSGIS_dispatch_table_thunk;
    epoxy_glPointParameterfv = epoxy_glPointParameterfv_dispatch_table_thunk;
    epoxy_glPointParameterfvARB = epoxy_glPointParameterfvARB_dispatch_table_thunk;
    epoxy_glPointParameterfvEXT = epoxy_glPointParameterfvEXT_dispatch_table_thunk;
    epoxy_glPointParameterfvSGIS = epoxy_glPointParameterfvSGIS_dispatch_table_thunk;
    epoxy_glPointParameteri = epoxy_glPointParameteri_dispatch_table_thunk;
    epoxy_glPointParameteriNV = epoxy_glPointParameteriNV_dispatch_table_thunk;
    epoxy_glPointParameteriv = epoxy_glPointParameteriv_dispatch_table_thunk;
    epoxy_glPointParameterivNV = epoxy_glPointParameterivNV_dispatch_table_thunk;
    epoxy_glPointParameterx = epoxy_glPointParameterx_dispatch_table_thunk;
    epoxy_glPointParameterxOES = epoxy_glPointParameterxOES_dispatch_table_thunk;
    epoxy_glPointParameterxv = epoxy_glPointParameterxv_dispatch_table_thunk;
    epoxy_glPointParameterxvOES = epoxy_glPointParameterxvOES_dispatch_table_thunk;
    epoxy_glPointSize = epoxy_glPointSize_dispatch_table_thunk;
    epoxy_glPointSizePointerOES = epoxy_glPointSizePointerOES_dispatch_table_thunk;
    epoxy_glPointSizex = epoxy_glPointSizex_dispatch_table_thunk;
    epoxy_glPointSizexOES = epoxy_glPointSizexOES_dispatch_table_thunk;
    epoxy_glPollAsyncSGIX = epoxy_glPollAsyncSGIX_dispatch_table_thunk;
    epoxy_glPollInstrumentsSGIX = epoxy_glPollInstrumentsSGIX_dispatch_table_thunk;
    epoxy_glPolygonMode = epoxy_glPolygonMode_dispatch_table_thunk;
    epoxy_glPolygonModeNV = epoxy_glPolygonModeNV_dispatch_table_thunk;
    epoxy_glPolygonOffset = epoxy_glPolygonOffset_dispatch_table_thunk;
    epoxy_glPolygonOffsetClampEXT = epoxy_glPolygonOffsetClampEXT_dispatch_table_thunk;
    epoxy_glPolygonOffsetEXT = epoxy_glPolygonOffsetEXT_dispatch_table_thunk;
    epoxy_glPolygonOffsetx = epoxy_glPolygonOffsetx_dispatch_table_thunk;
    epoxy_glPolygonOffsetxOES = epoxy_glPolygonOffsetxOES_dispatch_table_thunk;
    epoxy_glPolygonStipple = epoxy_glPolygonStipple_dispatch_table_thunk;
    epoxy_glPopAttrib = epoxy_glPopAttrib_dispatch_table_thunk;
    epoxy_glPopClientAttrib = epoxy_glPopClientAttrib_dispatch_table_thunk;
    epoxy_glPopDebugGroup = epoxy_glPopDebugGroup_dispatch_table_thunk;
    epoxy_glPopDebugGroupKHR = epoxy_glPopDebugGroupKHR_dispatch_table_thunk;
    epoxy_glPopGroupMarkerEXT = epoxy_glPopGroupMarkerEXT_dispatch_table_thunk;
    epoxy_glPopMatrix = epoxy_glPopMatrix_dispatch_table_thunk;
    epoxy_glPopName = epoxy_glPopName_dispatch_table_thunk;
    epoxy_glPresentFrameDualFillNV = epoxy_glPresentFrameDualFillNV_dispatch_table_thunk;
    epoxy_glPresentFrameKeyedNV = epoxy_glPresentFrameKeyedNV_dispatch_table_thunk;
    epoxy_glPrimitiveBoundingBoxEXT = epoxy_glPrimitiveBoundingBoxEXT_dispatch_table_thunk;
    epoxy_glPrimitiveBoundingBoxOES = epoxy_glPrimitiveBoundingBoxOES_dispatch_table_thunk;
    epoxy_glPrimitiveRestartIndex = epoxy_glPrimitiveRestartIndex_dispatch_table_thunk;
    epoxy_glPrimitiveRestartIndexNV = epoxy_glPrimitiveRestartIndexNV_dispatch_table_thunk;
    epoxy_glPrimitiveRestartNV = epoxy_glPrimitiveRestartNV_dispatch_table_thunk;
    epoxy_glPrioritizeTextures = epoxy_glPrioritizeTextures_dispatch_table_thunk;
    epoxy_glPrioritizeTexturesEXT = epoxy_glPrioritizeTexturesEXT_dispatch_table_thunk;
    epoxy_glPrioritizeTexturesxOES = epoxy_glPrioritizeTexturesxOES_dispatch_table_thunk;
    epoxy_glProgramBinary = epoxy_glProgramBinary_dispatch_table_thunk;
    epoxy_glProgramBinaryOES = epoxy_glProgramBinaryOES_dispatch_table_thunk;
    epoxy_glProgramBufferParametersIivNV = epoxy_glProgramBufferParametersIivNV_dispatch_table_thunk;
    epoxy_glProgramBufferParametersIuivNV = epoxy_glProgramBufferParametersIuivNV_dispatch_table_thunk;
    epoxy_glProgramBufferParametersfvNV = epoxy_glProgramBufferParametersfvNV_dispatch_table_thunk;
    epoxy_glProgramEnvParameter4dARB = epoxy_glProgramEnvParameter4dARB_dispatch_table_thunk;
    epoxy_glProgramEnvParameter4dvARB = epoxy_glProgramEnvParameter4dvARB_dispatch_table_thunk;
    epoxy_glProgramEnvParameter4fARB = epoxy_glProgramEnvParameter4fARB_dispatch_table_thunk;
    epoxy_glProgramEnvParameter4fvARB = epoxy_glProgramEnvParameter4fvARB_dispatch_table_thunk;
    epoxy_glProgramEnvParameterI4iNV = epoxy_glProgramEnvParameterI4iNV_dispatch_table_thunk;
    epoxy_glProgramEnvParameterI4ivNV = epoxy_glProgramEnvParameterI4ivNV_dispatch_table_thunk;
    epoxy_glProgramEnvParameterI4uiNV = epoxy_glProgramEnvParameterI4uiNV_dispatch_table_thunk;
    epoxy_glProgramEnvParameterI4uivNV = epoxy_glProgramEnvParameterI4uivNV_dispatch_table_thunk;
    epoxy_glProgramEnvParameters4fvEXT = epoxy_glProgramEnvParameters4fvEXT_dispatch_table_thunk;
    epoxy_glProgramEnvParametersI4ivNV = epoxy_glProgramEnvParametersI4ivNV_dispatch_table_thunk;
    epoxy_glProgramEnvParametersI4uivNV = epoxy_glProgramEnvParametersI4uivNV_dispatch_table_thunk;
    epoxy_glProgramLocalParameter4dARB = epoxy_glProgramLocalParameter4dARB_dispatch_table_thunk;
    epoxy_glProgramLocalParameter4dvARB = epoxy_glProgramLocalParameter4dvARB_dispatch_table_thunk;
    epoxy_glProgramLocalParameter4fARB = epoxy_glProgramLocalParameter4fARB_dispatch_table_thunk;
    epoxy_glProgramLocalParameter4fvARB = epoxy_glProgramLocalParameter4fvARB_dispatch_table_thunk;
    epoxy_glProgramLocalParameterI4iNV = epoxy_glProgramLocalParameterI4iNV_dispatch_table_thunk;
    epoxy_glProgramLocalParameterI4ivNV = epoxy_glProgramLocalParameterI4ivNV_dispatch_table_thunk;
    epoxy_glProgramLocalParameterI4uiNV = epoxy_glProgramLocalParameterI4uiNV_dispatch_table_thunk;
    epoxy_glProgramLocalParameterI4uivNV = epoxy_glProgramLocalParameterI4uivNV_dispatch_table_thunk;
    epoxy_glProgramLocalParameters4fvEXT = epoxy_glProgramLocalParameters4fvEXT_dispatch_table_thunk;
    epoxy_glProgramLocalParametersI4ivNV = epoxy_glProgramLocalParametersI4ivNV_dispatch_table_thunk;
    epoxy_glProgramLocalParametersI4uivNV = epoxy_glProgramLocalParametersI4uivNV_dispatch_table_thunk;
    epoxy_glProgramNamedParameter4dNV = epoxy_glProgramNamedParameter4dNV_dispatch_table_thunk;
    epoxy_glProgramNamedParameter4dvNV = epoxy_glProgramNamedParameter4dvNV_dispatch_table_thunk;
    epoxy_glProgramNamedParameter4fNV = epoxy_glProgramNamedParameter4fNV_dispatch_table_thunk;
    epoxy_glProgramNamedParameter4fvNV = epoxy_glProgramNamedParameter4fvNV_dispatch_table_thunk;
    epoxy_glProgramParameter4dNV = epoxy_glProgramParameter4dNV_dispatch_table_thunk;
    epoxy_glProgramParameter4dvNV = epoxy_glProgramParameter4dvNV_dispatch_table_thunk;
    epoxy_glProgramParameter4fNV = epoxy_glProgramParameter4fNV_dispatch_table_thunk;
    epoxy_glProgramParameter4fvNV = epoxy_glProgramParameter4fvNV_dispatch_table_thunk;
    epoxy_glProgramParameteri = epoxy_glProgramParameteri_dispatch_table_thunk;
    epoxy_glProgramParameteriARB = epoxy_glProgramParameteriARB_dispatch_table_thunk;
    epoxy_glProgramParameteriEXT = epoxy_glProgramParameteriEXT_dispatch_table_thunk;
    epoxy_glProgramParameters4dvNV = epoxy_glProgramParameters4dvNV_dispatch_table_thunk;
    epoxy_glProgramParameters4fvNV = epoxy_glProgramParameters4fvNV_dispatch_table_thunk;
    epoxy_glProgramPathFragmentInputGenNV = epoxy_glProgramPathFragmentInputGenNV_dispatch_table_thunk;
    epoxy_glProgramStringARB = epoxy_glProgramStringARB_dispatch_table_thunk;
    epoxy_glProgramSubroutineParametersuivNV = epoxy_glProgramSubroutineParametersuivNV_dispatch_table_thunk;
    epoxy_glProgramUniform1d = epoxy_glProgramUniform1d_dispatch_table_thunk;
    epoxy_glProgramUniform1dEXT = epoxy_glProgramUniform1dEXT_dispatch_table_thunk;
    epoxy_glProgramUniform1dv = epoxy_glProgramUniform1dv_dispatch_table_thunk;
    epoxy_glProgramUniform1dvEXT = epoxy_glProgramUniform1dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniform1f = epoxy_glProgramUniform1f_dispatch_table_thunk;
    epoxy_glProgramUniform1fEXT = epoxy_glProgramUniform1fEXT_dispatch_table_thunk;
    epoxy_glProgramUniform1fv = epoxy_glProgramUniform1fv_dispatch_table_thunk;
    epoxy_glProgramUniform1fvEXT = epoxy_glProgramUniform1fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniform1i = epoxy_glProgramUniform1i_dispatch_table_thunk;
    epoxy_glProgramUniform1i64NV = epoxy_glProgramUniform1i64NV_dispatch_table_thunk;
    epoxy_glProgramUniform1i64vNV = epoxy_glProgramUniform1i64vNV_dispatch_table_thunk;
    epoxy_glProgramUniform1iEXT = epoxy_glProgramUniform1iEXT_dispatch_table_thunk;
    epoxy_glProgramUniform1iv = epoxy_glProgramUniform1iv_dispatch_table_thunk;
    epoxy_glProgramUniform1ivEXT = epoxy_glProgramUniform1ivEXT_dispatch_table_thunk;
    epoxy_glProgramUniform1ui = epoxy_glProgramUniform1ui_dispatch_table_thunk;
    epoxy_glProgramUniform1ui64NV = epoxy_glProgramUniform1ui64NV_dispatch_table_thunk;
    epoxy_glProgramUniform1ui64vNV = epoxy_glProgramUniform1ui64vNV_dispatch_table_thunk;
    epoxy_glProgramUniform1uiEXT = epoxy_glProgramUniform1uiEXT_dispatch_table_thunk;
    epoxy_glProgramUniform1uiv = epoxy_glProgramUniform1uiv_dispatch_table_thunk;
    epoxy_glProgramUniform1uivEXT = epoxy_glProgramUniform1uivEXT_dispatch_table_thunk;
    epoxy_glProgramUniform2d = epoxy_glProgramUniform2d_dispatch_table_thunk;
    epoxy_glProgramUniform2dEXT = epoxy_glProgramUniform2dEXT_dispatch_table_thunk;
    epoxy_glProgramUniform2dv = epoxy_glProgramUniform2dv_dispatch_table_thunk;
    epoxy_glProgramUniform2dvEXT = epoxy_glProgramUniform2dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniform2f = epoxy_glProgramUniform2f_dispatch_table_thunk;
    epoxy_glProgramUniform2fEXT = epoxy_glProgramUniform2fEXT_dispatch_table_thunk;
    epoxy_glProgramUniform2fv = epoxy_glProgramUniform2fv_dispatch_table_thunk;
    epoxy_glProgramUniform2fvEXT = epoxy_glProgramUniform2fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniform2i = epoxy_glProgramUniform2i_dispatch_table_thunk;
    epoxy_glProgramUniform2i64NV = epoxy_glProgramUniform2i64NV_dispatch_table_thunk;
    epoxy_glProgramUniform2i64vNV = epoxy_glProgramUniform2i64vNV_dispatch_table_thunk;
    epoxy_glProgramUniform2iEXT = epoxy_glProgramUniform2iEXT_dispatch_table_thunk;
    epoxy_glProgramUniform2iv = epoxy_glProgramUniform2iv_dispatch_table_thunk;
    epoxy_glProgramUniform2ivEXT = epoxy_glProgramUniform2ivEXT_dispatch_table_thunk;
    epoxy_glProgramUniform2ui = epoxy_glProgramUniform2ui_dispatch_table_thunk;
    epoxy_glProgramUniform2ui64NV = epoxy_glProgramUniform2ui64NV_dispatch_table_thunk;
    epoxy_glProgramUniform2ui64vNV = epoxy_glProgramUniform2ui64vNV_dispatch_table_thunk;
    epoxy_glProgramUniform2uiEXT = epoxy_glProgramUniform2uiEXT_dispatch_table_thunk;
    epoxy_glProgramUniform2uiv = epoxy_glProgramUniform2uiv_dispatch_table_thunk;
    epoxy_glProgramUniform2uivEXT = epoxy_glProgramUniform2uivEXT_dispatch_table_thunk;
    epoxy_glProgramUniform3d = epoxy_glProgramUniform3d_dispatch_table_thunk;
    epoxy_glProgramUniform3dEXT = epoxy_glProgramUniform3dEXT_dispatch_table_thunk;
    epoxy_glProgramUniform3dv = epoxy_glProgramUniform3dv_dispatch_table_thunk;
    epoxy_glProgramUniform3dvEXT = epoxy_glProgramUniform3dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniform3f = epoxy_glProgramUniform3f_dispatch_table_thunk;
    epoxy_glProgramUniform3fEXT = epoxy_glProgramUniform3fEXT_dispatch_table_thunk;
    epoxy_glProgramUniform3fv = epoxy_glProgramUniform3fv_dispatch_table_thunk;
    epoxy_glProgramUniform3fvEXT = epoxy_glProgramUniform3fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniform3i = epoxy_glProgramUniform3i_dispatch_table_thunk;
    epoxy_glProgramUniform3i64NV = epoxy_glProgramUniform3i64NV_dispatch_table_thunk;
    epoxy_glProgramUniform3i64vNV = epoxy_glProgramUniform3i64vNV_dispatch_table_thunk;
    epoxy_glProgramUniform3iEXT = epoxy_glProgramUniform3iEXT_dispatch_table_thunk;
    epoxy_glProgramUniform3iv = epoxy_glProgramUniform3iv_dispatch_table_thunk;
    epoxy_glProgramUniform3ivEXT = epoxy_glProgramUniform3ivEXT_dispatch_table_thunk;
    epoxy_glProgramUniform3ui = epoxy_glProgramUniform3ui_dispatch_table_thunk;
    epoxy_glProgramUniform3ui64NV = epoxy_glProgramUniform3ui64NV_dispatch_table_thunk;
    epoxy_glProgramUniform3ui64vNV = epoxy_glProgramUniform3ui64vNV_dispatch_table_thunk;
    epoxy_glProgramUniform3uiEXT = epoxy_glProgramUniform3uiEXT_dispatch_table_thunk;
    epoxy_glProgramUniform3uiv = epoxy_glProgramUniform3uiv_dispatch_table_thunk;
    epoxy_glProgramUniform3uivEXT = epoxy_glProgramUniform3uivEXT_dispatch_table_thunk;
    epoxy_glProgramUniform4d = epoxy_glProgramUniform4d_dispatch_table_thunk;
    epoxy_glProgramUniform4dEXT = epoxy_glProgramUniform4dEXT_dispatch_table_thunk;
    epoxy_glProgramUniform4dv = epoxy_glProgramUniform4dv_dispatch_table_thunk;
    epoxy_glProgramUniform4dvEXT = epoxy_glProgramUniform4dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniform4f = epoxy_glProgramUniform4f_dispatch_table_thunk;
    epoxy_glProgramUniform4fEXT = epoxy_glProgramUniform4fEXT_dispatch_table_thunk;
    epoxy_glProgramUniform4fv = epoxy_glProgramUniform4fv_dispatch_table_thunk;
    epoxy_glProgramUniform4fvEXT = epoxy_glProgramUniform4fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniform4i = epoxy_glProgramUniform4i_dispatch_table_thunk;
    epoxy_glProgramUniform4i64NV = epoxy_glProgramUniform4i64NV_dispatch_table_thunk;
    epoxy_glProgramUniform4i64vNV = epoxy_glProgramUniform4i64vNV_dispatch_table_thunk;
    epoxy_glProgramUniform4iEXT = epoxy_glProgramUniform4iEXT_dispatch_table_thunk;
    epoxy_glProgramUniform4iv = epoxy_glProgramUniform4iv_dispatch_table_thunk;
    epoxy_glProgramUniform4ivEXT = epoxy_glProgramUniform4ivEXT_dispatch_table_thunk;
    epoxy_glProgramUniform4ui = epoxy_glProgramUniform4ui_dispatch_table_thunk;
    epoxy_glProgramUniform4ui64NV = epoxy_glProgramUniform4ui64NV_dispatch_table_thunk;
    epoxy_glProgramUniform4ui64vNV = epoxy_glProgramUniform4ui64vNV_dispatch_table_thunk;
    epoxy_glProgramUniform4uiEXT = epoxy_glProgramUniform4uiEXT_dispatch_table_thunk;
    epoxy_glProgramUniform4uiv = epoxy_glProgramUniform4uiv_dispatch_table_thunk;
    epoxy_glProgramUniform4uivEXT = epoxy_glProgramUniform4uivEXT_dispatch_table_thunk;
    epoxy_glProgramUniformHandleui64ARB = epoxy_glProgramUniformHandleui64ARB_dispatch_table_thunk;
    epoxy_glProgramUniformHandleui64NV = epoxy_glProgramUniformHandleui64NV_dispatch_table_thunk;
    epoxy_glProgramUniformHandleui64vARB = epoxy_glProgramUniformHandleui64vARB_dispatch_table_thunk;
    epoxy_glProgramUniformHandleui64vNV = epoxy_glProgramUniformHandleui64vNV_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2dv = epoxy_glProgramUniformMatrix2dv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2dvEXT = epoxy_glProgramUniformMatrix2dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2fv = epoxy_glProgramUniformMatrix2fv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2fvEXT = epoxy_glProgramUniformMatrix2fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2x3dv = epoxy_glProgramUniformMatrix2x3dv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2x3dvEXT = epoxy_glProgramUniformMatrix2x3dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2x3fv = epoxy_glProgramUniformMatrix2x3fv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2x3fvEXT = epoxy_glProgramUniformMatrix2x3fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2x4dv = epoxy_glProgramUniformMatrix2x4dv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2x4dvEXT = epoxy_glProgramUniformMatrix2x4dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2x4fv = epoxy_glProgramUniformMatrix2x4fv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix2x4fvEXT = epoxy_glProgramUniformMatrix2x4fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3dv = epoxy_glProgramUniformMatrix3dv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3dvEXT = epoxy_glProgramUniformMatrix3dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3fv = epoxy_glProgramUniformMatrix3fv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3fvEXT = epoxy_glProgramUniformMatrix3fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3x2dv = epoxy_glProgramUniformMatrix3x2dv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3x2dvEXT = epoxy_glProgramUniformMatrix3x2dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3x2fv = epoxy_glProgramUniformMatrix3x2fv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3x2fvEXT = epoxy_glProgramUniformMatrix3x2fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3x4dv = epoxy_glProgramUniformMatrix3x4dv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3x4dvEXT = epoxy_glProgramUniformMatrix3x4dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3x4fv = epoxy_glProgramUniformMatrix3x4fv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix3x4fvEXT = epoxy_glProgramUniformMatrix3x4fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4dv = epoxy_glProgramUniformMatrix4dv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4dvEXT = epoxy_glProgramUniformMatrix4dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4fv = epoxy_glProgramUniformMatrix4fv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4fvEXT = epoxy_glProgramUniformMatrix4fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4x2dv = epoxy_glProgramUniformMatrix4x2dv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4x2dvEXT = epoxy_glProgramUniformMatrix4x2dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4x2fv = epoxy_glProgramUniformMatrix4x2fv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4x2fvEXT = epoxy_glProgramUniformMatrix4x2fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4x3dv = epoxy_glProgramUniformMatrix4x3dv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4x3dvEXT = epoxy_glProgramUniformMatrix4x3dvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4x3fv = epoxy_glProgramUniformMatrix4x3fv_dispatch_table_thunk;
    epoxy_glProgramUniformMatrix4x3fvEXT = epoxy_glProgramUniformMatrix4x3fvEXT_dispatch_table_thunk;
    epoxy_glProgramUniformui64NV = epoxy_glProgramUniformui64NV_dispatch_table_thunk;
    epoxy_glProgramUniformui64vNV = epoxy_glProgramUniformui64vNV_dispatch_table_thunk;
    epoxy_glProgramVertexLimitNV = epoxy_glProgramVertexLimitNV_dispatch_table_thunk;
    epoxy_glProvokingVertex = epoxy_glProvokingVertex_dispatch_table_thunk;
    epoxy_glProvokingVertexEXT = epoxy_glProvokingVertexEXT_dispatch_table_thunk;
    epoxy_glPushAttrib = epoxy_glPushAttrib_dispatch_table_thunk;
    epoxy_glPushClientAttrib = epoxy_glPushClientAttrib_dispatch_table_thunk;
    epoxy_glPushClientAttribDefaultEXT = epoxy_glPushClientAttribDefaultEXT_dispatch_table_thunk;
    epoxy_glPushDebugGroup = epoxy_glPushDebugGroup_dispatch_table_thunk;
    epoxy_glPushDebugGroupKHR = epoxy_glPushDebugGroupKHR_dispatch_table_thunk;
    epoxy_glPushGroupMarkerEXT = epoxy_glPushGroupMarkerEXT_dispatch_table_thunk;
    epoxy_glPushMatrix = epoxy_glPushMatrix_dispatch_table_thunk;
    epoxy_glPushName = epoxy_glPushName_dispatch_table_thunk;
    epoxy_glQueryCounter = epoxy_glQueryCounter_dispatch_table_thunk;
    epoxy_glQueryCounterEXT = epoxy_glQueryCounterEXT_dispatch_table_thunk;
    epoxy_glQueryMatrixxOES = epoxy_glQueryMatrixxOES_dispatch_table_thunk;
    epoxy_glQueryObjectParameteruiAMD = epoxy_glQueryObjectParameteruiAMD_dispatch_table_thunk;
    epoxy_glRasterPos2d = epoxy_glRasterPos2d_dispatch_table_thunk;
    epoxy_glRasterPos2dv = epoxy_glRasterPos2dv_dispatch_table_thunk;
    epoxy_glRasterPos2f = epoxy_glRasterPos2f_dispatch_table_thunk;
    epoxy_glRasterPos2fv = epoxy_glRasterPos2fv_dispatch_table_thunk;
    epoxy_glRasterPos2i = epoxy_glRasterPos2i_dispatch_table_thunk;
    epoxy_glRasterPos2iv = epoxy_glRasterPos2iv_dispatch_table_thunk;
    epoxy_glRasterPos2s = epoxy_glRasterPos2s_dispatch_table_thunk;
    epoxy_glRasterPos2sv = epoxy_glRasterPos2sv_dispatch_table_thunk;
    epoxy_glRasterPos2xOES = epoxy_glRasterPos2xOES_dispatch_table_thunk;
    epoxy_glRasterPos2xvOES = epoxy_glRasterPos2xvOES_dispatch_table_thunk;
    epoxy_glRasterPos3d = epoxy_glRasterPos3d_dispatch_table_thunk;
    epoxy_glRasterPos3dv = epoxy_glRasterPos3dv_dispatch_table_thunk;
    epoxy_glRasterPos3f = epoxy_glRasterPos3f_dispatch_table_thunk;
    epoxy_glRasterPos3fv = epoxy_glRasterPos3fv_dispatch_table_thunk;
    epoxy_glRasterPos3i = epoxy_glRasterPos3i_dispatch_table_thunk;
    epoxy_glRasterPos3iv = epoxy_glRasterPos3iv_dispatch_table_thunk;
    epoxy_glRasterPos3s = epoxy_glRasterPos3s_dispatch_table_thunk;
    epoxy_glRasterPos3sv = epoxy_glRasterPos3sv_dispatch_table_thunk;
    epoxy_glRasterPos3xOES = epoxy_glRasterPos3xOES_dispatch_table_thunk;
    epoxy_glRasterPos3xvOES = epoxy_glRasterPos3xvOES_dispatch_table_thunk;
    epoxy_glRasterPos4d = epoxy_glRasterPos4d_dispatch_table_thunk;
    epoxy_glRasterPos4dv = epoxy_glRasterPos4dv_dispatch_table_thunk;
    epoxy_glRasterPos4f = epoxy_glRasterPos4f_dispatch_table_thunk;
    epoxy_glRasterPos4fv = epoxy_glRasterPos4fv_dispatch_table_thunk;
    epoxy_glRasterPos4i = epoxy_glRasterPos4i_dispatch_table_thunk;
    epoxy_glRasterPos4iv = epoxy_glRasterPos4iv_dispatch_table_thunk;
    epoxy_glRasterPos4s = epoxy_glRasterPos4s_dispatch_table_thunk;
    epoxy_glRasterPos4sv = epoxy_glRasterPos4sv_dispatch_table_thunk;
    epoxy_glRasterPos4xOES = epoxy_glRasterPos4xOES_dispatch_table_thunk;
    epoxy_glRasterPos4xvOES = epoxy_glRasterPos4xvOES_dispatch_table_thunk;
    epoxy_glRasterSamplesEXT = epoxy_glRasterSamplesEXT_dispatch_table_thunk;
    epoxy_glReadBuffer = epoxy_glReadBuffer_dispatch_table_thunk;
    epoxy_glReadBufferIndexedEXT = epoxy_glReadBufferIndexedEXT_dispatch_table_thunk;
    epoxy_glReadBufferNV = epoxy_glReadBufferNV_dispatch_table_thunk;
    epoxy_glReadInstrumentsSGIX = epoxy_glReadInstrumentsSGIX_dispatch_table_thunk;
    epoxy_glReadPixels = epoxy_glReadPixels_dispatch_table_thunk;
    epoxy_glReadnPixels = epoxy_glReadnPixels_dispatch_table_thunk;
    epoxy_glReadnPixelsARB = epoxy_glReadnPixelsARB_dispatch_table_thunk;
    epoxy_glReadnPixelsEXT = epoxy_glReadnPixelsEXT_dispatch_table_thunk;
    epoxy_glReadnPixelsKHR = epoxy_glReadnPixelsKHR_dispatch_table_thunk;
    epoxy_glRectd = epoxy_glRectd_dispatch_table_thunk;
    epoxy_glRectdv = epoxy_glRectdv_dispatch_table_thunk;
    epoxy_glRectf = epoxy_glRectf_dispatch_table_thunk;
    epoxy_glRectfv = epoxy_glRectfv_dispatch_table_thunk;
    epoxy_glRecti = epoxy_glRecti_dispatch_table_thunk;
    epoxy_glRectiv = epoxy_glRectiv_dispatch_table_thunk;
    epoxy_glRects = epoxy_glRects_dispatch_table_thunk;
    epoxy_glRectsv = epoxy_glRectsv_dispatch_table_thunk;
    epoxy_glRectxOES = epoxy_glRectxOES_dispatch_table_thunk;
    epoxy_glRectxvOES = epoxy_glRectxvOES_dispatch_table_thunk;
    epoxy_glReferencePlaneSGIX = epoxy_glReferencePlaneSGIX_dispatch_table_thunk;
    epoxy_glReleaseShaderCompiler = epoxy_glReleaseShaderCompiler_dispatch_table_thunk;
    epoxy_glRenderMode = epoxy_glRenderMode_dispatch_table_thunk;
    epoxy_glRenderbufferStorage = epoxy_glRenderbufferStorage_dispatch_table_thunk;
    epoxy_glRenderbufferStorageEXT = epoxy_glRenderbufferStorageEXT_dispatch_table_thunk;
    epoxy_glRenderbufferStorageMultisample = epoxy_glRenderbufferStorageMultisample_dispatch_table_thunk;
    epoxy_glRenderbufferStorageMultisampleANGLE = epoxy_glRenderbufferStorageMultisampleANGLE_dispatch_table_thunk;
    epoxy_glRenderbufferStorageMultisampleAPPLE = epoxy_glRenderbufferStorageMultisampleAPPLE_dispatch_table_thunk;
    epoxy_glRenderbufferStorageMultisampleCoverageNV = epoxy_glRenderbufferStorageMultisampleCoverageNV_dispatch_table_thunk;
    epoxy_glRenderbufferStorageMultisampleEXT = epoxy_glRenderbufferStorageMultisampleEXT_dispatch_table_thunk;
    epoxy_glRenderbufferStorageMultisampleIMG = epoxy_glRenderbufferStorageMultisampleIMG_dispatch_table_thunk;
    epoxy_glRenderbufferStorageMultisampleNV = epoxy_glRenderbufferStorageMultisampleNV_dispatch_table_thunk;
    epoxy_glRenderbufferStorageOES = epoxy_glRenderbufferStorageOES_dispatch_table_thunk;
    epoxy_glReplacementCodePointerSUN = epoxy_glReplacementCodePointerSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeubSUN = epoxy_glReplacementCodeubSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeubvSUN = epoxy_glReplacementCodeubvSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiColor3fVertex3fSUN = epoxy_glReplacementCodeuiColor3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiColor3fVertex3fvSUN = epoxy_glReplacementCodeuiColor3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiColor4fNormal3fVertex3fSUN = epoxy_glReplacementCodeuiColor4fNormal3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiColor4ubVertex3fSUN = epoxy_glReplacementCodeuiColor4ubVertex3fSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiColor4ubVertex3fvSUN = epoxy_glReplacementCodeuiColor4ubVertex3fvSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiNormal3fVertex3fSUN = epoxy_glReplacementCodeuiNormal3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiNormal3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiSUN = epoxy_glReplacementCodeuiSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiTexCoord2fVertex3fSUN = epoxy_glReplacementCodeuiTexCoord2fVertex3fSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiTexCoord2fVertex3fvSUN = epoxy_glReplacementCodeuiTexCoord2fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiVertex3fSUN = epoxy_glReplacementCodeuiVertex3fSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuiVertex3fvSUN = epoxy_glReplacementCodeuiVertex3fvSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeuivSUN = epoxy_glReplacementCodeuivSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeusSUN = epoxy_glReplacementCodeusSUN_dispatch_table_thunk;
    epoxy_glReplacementCodeusvSUN = epoxy_glReplacementCodeusvSUN_dispatch_table_thunk;
    epoxy_glRequestResidentProgramsNV = epoxy_glRequestResidentProgramsNV_dispatch_table_thunk;
    epoxy_glResetHistogram = epoxy_glResetHistogram_dispatch_table_thunk;
    epoxy_glResetHistogramEXT = epoxy_glResetHistogramEXT_dispatch_table_thunk;
    epoxy_glResetMinmax = epoxy_glResetMinmax_dispatch_table_thunk;
    epoxy_glResetMinmaxEXT = epoxy_glResetMinmaxEXT_dispatch_table_thunk;
    epoxy_glResizeBuffersMESA = epoxy_glResizeBuffersMESA_dispatch_table_thunk;
    epoxy_glResolveDepthValuesNV = epoxy_glResolveDepthValuesNV_dispatch_table_thunk;
    epoxy_glResolveMultisampleFramebufferAPPLE = epoxy_glResolveMultisampleFramebufferAPPLE_dispatch_table_thunk;
    epoxy_glResumeTransformFeedback = epoxy_glResumeTransformFeedback_dispatch_table_thunk;
    epoxy_glResumeTransformFeedbackNV = epoxy_glResumeTransformFeedbackNV_dispatch_table_thunk;
    epoxy_glRotated = epoxy_glRotated_dispatch_table_thunk;
    epoxy_glRotatef = epoxy_glRotatef_dispatch_table_thunk;
    epoxy_glRotatex = epoxy_glRotatex_dispatch_table_thunk;
    epoxy_glRotatexOES = epoxy_glRotatexOES_dispatch_table_thunk;
    epoxy_glSampleCoverage = epoxy_glSampleCoverage_dispatch_table_thunk;
    epoxy_glSampleCoverageARB = epoxy_glSampleCoverageARB_dispatch_table_thunk;
    epoxy_glSampleCoveragex = epoxy_glSampleCoveragex_dispatch_table_thunk;
    epoxy_glSampleCoveragexOES = epoxy_glSampleCoveragexOES_dispatch_table_thunk;
    epoxy_glSampleMapATI = epoxy_glSampleMapATI_dispatch_table_thunk;
    epoxy_glSampleMaskEXT = epoxy_glSampleMaskEXT_dispatch_table_thunk;
    epoxy_glSampleMaskIndexedNV = epoxy_glSampleMaskIndexedNV_dispatch_table_thunk;
    epoxy_glSampleMaskSGIS = epoxy_glSampleMaskSGIS_dispatch_table_thunk;
    epoxy_glSampleMaski = epoxy_glSampleMaski_dispatch_table_thunk;
    epoxy_glSamplePatternEXT = epoxy_glSamplePatternEXT_dispatch_table_thunk;
    epoxy_glSamplePatternSGIS = epoxy_glSamplePatternSGIS_dispatch_table_thunk;
    epoxy_glSamplerParameterIiv = epoxy_glSamplerParameterIiv_dispatch_table_thunk;
    epoxy_glSamplerParameterIivEXT = epoxy_glSamplerParameterIivEXT_dispatch_table_thunk;
    epoxy_glSamplerParameterIivOES = epoxy_glSamplerParameterIivOES_dispatch_table_thunk;
    epoxy_glSamplerParameterIuiv = epoxy_glSamplerParameterIuiv_dispatch_table_thunk;
    epoxy_glSamplerParameterIuivEXT = epoxy_glSamplerParameterIuivEXT_dispatch_table_thunk;
    epoxy_glSamplerParameterIuivOES = epoxy_glSamplerParameterIuivOES_dispatch_table_thunk;
    epoxy_glSamplerParameterf = epoxy_glSamplerParameterf_dispatch_table_thunk;
    epoxy_glSamplerParameterfv = epoxy_glSamplerParameterfv_dispatch_table_thunk;
    epoxy_glSamplerParameteri = epoxy_glSamplerParameteri_dispatch_table_thunk;
    epoxy_glSamplerParameteriv = epoxy_glSamplerParameteriv_dispatch_table_thunk;
    epoxy_glScaled = epoxy_glScaled_dispatch_table_thunk;
    epoxy_glScalef = epoxy_glScalef_dispatch_table_thunk;
    epoxy_glScalex = epoxy_glScalex_dispatch_table_thunk;
    epoxy_glScalexOES = epoxy_glScalexOES_dispatch_table_thunk;
    epoxy_glScissor = epoxy_glScissor_dispatch_table_thunk;
    epoxy_glScissorArrayv = epoxy_glScissorArrayv_dispatch_table_thunk;
    epoxy_glScissorArrayvNV = epoxy_glScissorArrayvNV_dispatch_table_thunk;
    epoxy_glScissorIndexed = epoxy_glScissorIndexed_dispatch_table_thunk;
    epoxy_glScissorIndexedNV = epoxy_glScissorIndexedNV_dispatch_table_thunk;
    epoxy_glScissorIndexedv = epoxy_glScissorIndexedv_dispatch_table_thunk;
    epoxy_glScissorIndexedvNV = epoxy_glScissorIndexedvNV_dispatch_table_thunk;
    epoxy_glSecondaryColor3b = epoxy_glSecondaryColor3b_dispatch_table_thunk;
    epoxy_glSecondaryColor3bEXT = epoxy_glSecondaryColor3bEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3bv = epoxy_glSecondaryColor3bv_dispatch_table_thunk;
    epoxy_glSecondaryColor3bvEXT = epoxy_glSecondaryColor3bvEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3d = epoxy_glSecondaryColor3d_dispatch_table_thunk;
    epoxy_glSecondaryColor3dEXT = epoxy_glSecondaryColor3dEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3dv = epoxy_glSecondaryColor3dv_dispatch_table_thunk;
    epoxy_glSecondaryColor3dvEXT = epoxy_glSecondaryColor3dvEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3f = epoxy_glSecondaryColor3f_dispatch_table_thunk;
    epoxy_glSecondaryColor3fEXT = epoxy_glSecondaryColor3fEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3fv = epoxy_glSecondaryColor3fv_dispatch_table_thunk;
    epoxy_glSecondaryColor3fvEXT = epoxy_glSecondaryColor3fvEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3hNV = epoxy_glSecondaryColor3hNV_dispatch_table_thunk;
    epoxy_glSecondaryColor3hvNV = epoxy_glSecondaryColor3hvNV_dispatch_table_thunk;
    epoxy_glSecondaryColor3i = epoxy_glSecondaryColor3i_dispatch_table_thunk;
    epoxy_glSecondaryColor3iEXT = epoxy_glSecondaryColor3iEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3iv = epoxy_glSecondaryColor3iv_dispatch_table_thunk;
    epoxy_glSecondaryColor3ivEXT = epoxy_glSecondaryColor3ivEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3s = epoxy_glSecondaryColor3s_dispatch_table_thunk;
    epoxy_glSecondaryColor3sEXT = epoxy_glSecondaryColor3sEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3sv = epoxy_glSecondaryColor3sv_dispatch_table_thunk;
    epoxy_glSecondaryColor3svEXT = epoxy_glSecondaryColor3svEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3ub = epoxy_glSecondaryColor3ub_dispatch_table_thunk;
    epoxy_glSecondaryColor3ubEXT = epoxy_glSecondaryColor3ubEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3ubv = epoxy_glSecondaryColor3ubv_dispatch_table_thunk;
    epoxy_glSecondaryColor3ubvEXT = epoxy_glSecondaryColor3ubvEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3ui = epoxy_glSecondaryColor3ui_dispatch_table_thunk;
    epoxy_glSecondaryColor3uiEXT = epoxy_glSecondaryColor3uiEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3uiv = epoxy_glSecondaryColor3uiv_dispatch_table_thunk;
    epoxy_glSecondaryColor3uivEXT = epoxy_glSecondaryColor3uivEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3us = epoxy_glSecondaryColor3us_dispatch_table_thunk;
    epoxy_glSecondaryColor3usEXT = epoxy_glSecondaryColor3usEXT_dispatch_table_thunk;
    epoxy_glSecondaryColor3usv = epoxy_glSecondaryColor3usv_dispatch_table_thunk;
    epoxy_glSecondaryColor3usvEXT = epoxy_glSecondaryColor3usvEXT_dispatch_table_thunk;
    epoxy_glSecondaryColorFormatNV = epoxy_glSecondaryColorFormatNV_dispatch_table_thunk;
    epoxy_glSecondaryColorP3ui = epoxy_glSecondaryColorP3ui_dispatch_table_thunk;
    epoxy_glSecondaryColorP3uiv = epoxy_glSecondaryColorP3uiv_dispatch_table_thunk;
    epoxy_glSecondaryColorPointer = epoxy_glSecondaryColorPointer_dispatch_table_thunk;
    epoxy_glSecondaryColorPointerEXT = epoxy_glSecondaryColorPointerEXT_dispatch_table_thunk;
    epoxy_glSecondaryColorPointerListIBM = epoxy_glSecondaryColorPointerListIBM_dispatch_table_thunk;
    epoxy_glSelectBuffer = epoxy_glSelectBuffer_dispatch_table_thunk;
    epoxy_glSelectPerfMonitorCountersAMD = epoxy_glSelectPerfMonitorCountersAMD_dispatch_table_thunk;
    epoxy_glSeparableFilter2D = epoxy_glSeparableFilter2D_dispatch_table_thunk;
    epoxy_glSeparableFilter2DEXT = epoxy_glSeparableFilter2DEXT_dispatch_table_thunk;
    epoxy_glSetFenceAPPLE = epoxy_glSetFenceAPPLE_dispatch_table_thunk;
    epoxy_glSetFenceNV = epoxy_glSetFenceNV_dispatch_table_thunk;
    epoxy_glSetFragmentShaderConstantATI = epoxy_glSetFragmentShaderConstantATI_dispatch_table_thunk;
    epoxy_glSetInvariantEXT = epoxy_glSetInvariantEXT_dispatch_table_thunk;
    epoxy_glSetLocalConstantEXT = epoxy_glSetLocalConstantEXT_dispatch_table_thunk;
    epoxy_glSetMultisamplefvAMD = epoxy_glSetMultisamplefvAMD_dispatch_table_thunk;
    epoxy_glShadeModel = epoxy_glShadeModel_dispatch_table_thunk;
    epoxy_glShaderBinary = epoxy_glShaderBinary_dispatch_table_thunk;
    epoxy_glShaderOp1EXT = epoxy_glShaderOp1EXT_dispatch_table_thunk;
    epoxy_glShaderOp2EXT = epoxy_glShaderOp2EXT_dispatch_table_thunk;
    epoxy_glShaderOp3EXT = epoxy_glShaderOp3EXT_dispatch_table_thunk;
    epoxy_glShaderSource = epoxy_glShaderSource_dispatch_table_thunk;
    epoxy_glShaderSourceARB = epoxy_glShaderSourceARB_dispatch_table_thunk;
    epoxy_glShaderStorageBlockBinding = epoxy_glShaderStorageBlockBinding_dispatch_table_thunk;
    epoxy_glSharpenTexFuncSGIS = epoxy_glSharpenTexFuncSGIS_dispatch_table_thunk;
    epoxy_glSpriteParameterfSGIX = epoxy_glSpriteParameterfSGIX_dispatch_table_thunk;
    epoxy_glSpriteParameterfvSGIX = epoxy_glSpriteParameterfvSGIX_dispatch_table_thunk;
    epoxy_glSpriteParameteriSGIX = epoxy_glSpriteParameteriSGIX_dispatch_table_thunk;
    epoxy_glSpriteParameterivSGIX = epoxy_glSpriteParameterivSGIX_dispatch_table_thunk;
    epoxy_glStartInstrumentsSGIX = epoxy_glStartInstrumentsSGIX_dispatch_table_thunk;
    epoxy_glStartTilingQCOM = epoxy_glStartTilingQCOM_dispatch_table_thunk;
    epoxy_glStateCaptureNV = epoxy_glStateCaptureNV_dispatch_table_thunk;
    epoxy_glStencilClearTagEXT = epoxy_glStencilClearTagEXT_dispatch_table_thunk;
    epoxy_glStencilFillPathInstancedNV = epoxy_glStencilFillPathInstancedNV_dispatch_table_thunk;
    epoxy_glStencilFillPathNV = epoxy_glStencilFillPathNV_dispatch_table_thunk;
    epoxy_glStencilFunc = epoxy_glStencilFunc_dispatch_table_thunk;
    epoxy_glStencilFuncSeparate = epoxy_glStencilFuncSeparate_dispatch_table_thunk;
    epoxy_glStencilFuncSeparateATI = epoxy_glStencilFuncSeparateATI_dispatch_table_thunk;
    epoxy_glStencilMask = epoxy_glStencilMask_dispatch_table_thunk;
    epoxy_glStencilMaskSeparate = epoxy_glStencilMaskSeparate_dispatch_table_thunk;
    epoxy_glStencilOp = epoxy_glStencilOp_dispatch_table_thunk;
    epoxy_glStencilOpSeparate = epoxy_glStencilOpSeparate_dispatch_table_thunk;
    epoxy_glStencilOpSeparateATI = epoxy_glStencilOpSeparateATI_dispatch_table_thunk;
    epoxy_glStencilOpValueAMD = epoxy_glStencilOpValueAMD_dispatch_table_thunk;
    epoxy_glStencilStrokePathInstancedNV = epoxy_glStencilStrokePathInstancedNV_dispatch_table_thunk;
    epoxy_glStencilStrokePathNV = epoxy_glStencilStrokePathNV_dispatch_table_thunk;
    epoxy_glStencilThenCoverFillPathInstancedNV = epoxy_glStencilThenCoverFillPathInstancedNV_dispatch_table_thunk;
    epoxy_glStencilThenCoverFillPathNV = epoxy_glStencilThenCoverFillPathNV_dispatch_table_thunk;
    epoxy_glStencilThenCoverStrokePathInstancedNV = epoxy_glStencilThenCoverStrokePathInstancedNV_dispatch_table_thunk;
    epoxy_glStencilThenCoverStrokePathNV = epoxy_glStencilThenCoverStrokePathNV_dispatch_table_thunk;
    epoxy_glStopInstrumentsSGIX = epoxy_glStopInstrumentsSGIX_dispatch_table_thunk;
    epoxy_glStringMarkerGREMEDY = epoxy_glStringMarkerGREMEDY_dispatch_table_thunk;
    epoxy_glSubpixelPrecisionBiasNV = epoxy_glSubpixelPrecisionBiasNV_dispatch_table_thunk;
    epoxy_glSwizzleEXT = epoxy_glSwizzleEXT_dispatch_table_thunk;
    epoxy_glSyncTextureINTEL = epoxy_glSyncTextureINTEL_dispatch_table_thunk;
    epoxy_glTagSampleBufferSGIX = epoxy_glTagSampleBufferSGIX_dispatch_table_thunk;
    epoxy_glTangent3bEXT = epoxy_glTangent3bEXT_dispatch_table_thunk;
    epoxy_glTangent3bvEXT = epoxy_glTangent3bvEXT_dispatch_table_thunk;
    epoxy_glTangent3dEXT = epoxy_glTangent3dEXT_dispatch_table_thunk;
    epoxy_glTangent3dvEXT = epoxy_glTangent3dvEXT_dispatch_table_thunk;
    epoxy_glTangent3fEXT = epoxy_glTangent3fEXT_dispatch_table_thunk;
    epoxy_glTangent3fvEXT = epoxy_glTangent3fvEXT_dispatch_table_thunk;
    epoxy_glTangent3iEXT = epoxy_glTangent3iEXT_dispatch_table_thunk;
    epoxy_glTangent3ivEXT = epoxy_glTangent3ivEXT_dispatch_table_thunk;
    epoxy_glTangent3sEXT = epoxy_glTangent3sEXT_dispatch_table_thunk;
    epoxy_glTangent3svEXT = epoxy_glTangent3svEXT_dispatch_table_thunk;
    epoxy_glTangentPointerEXT = epoxy_glTangentPointerEXT_dispatch_table_thunk;
    epoxy_glTbufferMask3DFX = epoxy_glTbufferMask3DFX_dispatch_table_thunk;
    epoxy_glTessellationFactorAMD = epoxy_glTessellationFactorAMD_dispatch_table_thunk;
    epoxy_glTessellationModeAMD = epoxy_glTessellationModeAMD_dispatch_table_thunk;
    epoxy_glTestFenceAPPLE = epoxy_glTestFenceAPPLE_dispatch_table_thunk;
    epoxy_glTestFenceNV = epoxy_glTestFenceNV_dispatch_table_thunk;
    epoxy_glTestObjectAPPLE = epoxy_glTestObjectAPPLE_dispatch_table_thunk;
    epoxy_glTexBuffer = epoxy_glTexBuffer_dispatch_table_thunk;
    epoxy_glTexBufferARB = epoxy_glTexBufferARB_dispatch_table_thunk;
    epoxy_glTexBufferEXT = epoxy_glTexBufferEXT_dispatch_table_thunk;
    epoxy_glTexBufferOES = epoxy_glTexBufferOES_dispatch_table_thunk;
    epoxy_glTexBufferRange = epoxy_glTexBufferRange_dispatch_table_thunk;
    epoxy_glTexBufferRangeEXT = epoxy_glTexBufferRangeEXT_dispatch_table_thunk;
    epoxy_glTexBufferRangeOES = epoxy_glTexBufferRangeOES_dispatch_table_thunk;
    epoxy_glTexBumpParameterfvATI = epoxy_glTexBumpParameterfvATI_dispatch_table_thunk;
    epoxy_glTexBumpParameterivATI = epoxy_glTexBumpParameterivATI_dispatch_table_thunk;
    epoxy_glTexCoord1bOES = epoxy_glTexCoord1bOES_dispatch_table_thunk;
    epoxy_glTexCoord1bvOES = epoxy_glTexCoord1bvOES_dispatch_table_thunk;
    epoxy_glTexCoord1d = epoxy_glTexCoord1d_dispatch_table_thunk;
    epoxy_glTexCoord1dv = epoxy_glTexCoord1dv_dispatch_table_thunk;
    epoxy_glTexCoord1f = epoxy_glTexCoord1f_dispatch_table_thunk;
    epoxy_glTexCoord1fv = epoxy_glTexCoord1fv_dispatch_table_thunk;
    epoxy_glTexCoord1hNV = epoxy_glTexCoord1hNV_dispatch_table_thunk;
    epoxy_glTexCoord1hvNV = epoxy_glTexCoord1hvNV_dispatch_table_thunk;
    epoxy_glTexCoord1i = epoxy_glTexCoord1i_dispatch_table_thunk;
    epoxy_glTexCoord1iv = epoxy_glTexCoord1iv_dispatch_table_thunk;
    epoxy_glTexCoord1s = epoxy_glTexCoord1s_dispatch_table_thunk;
    epoxy_glTexCoord1sv = epoxy_glTexCoord1sv_dispatch_table_thunk;
    epoxy_glTexCoord1xOES = epoxy_glTexCoord1xOES_dispatch_table_thunk;
    epoxy_glTexCoord1xvOES = epoxy_glTexCoord1xvOES_dispatch_table_thunk;
    epoxy_glTexCoord2bOES = epoxy_glTexCoord2bOES_dispatch_table_thunk;
    epoxy_glTexCoord2bvOES = epoxy_glTexCoord2bvOES_dispatch_table_thunk;
    epoxy_glTexCoord2d = epoxy_glTexCoord2d_dispatch_table_thunk;
    epoxy_glTexCoord2dv = epoxy_glTexCoord2dv_dispatch_table_thunk;
    epoxy_glTexCoord2f = epoxy_glTexCoord2f_dispatch_table_thunk;
    epoxy_glTexCoord2fColor3fVertex3fSUN = epoxy_glTexCoord2fColor3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fColor3fVertex3fvSUN = epoxy_glTexCoord2fColor3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fColor4fNormal3fVertex3fSUN = epoxy_glTexCoord2fColor4fNormal3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fColor4fNormal3fVertex3fvSUN = epoxy_glTexCoord2fColor4fNormal3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fColor4ubVertex3fSUN = epoxy_glTexCoord2fColor4ubVertex3fSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fColor4ubVertex3fvSUN = epoxy_glTexCoord2fColor4ubVertex3fvSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fNormal3fVertex3fSUN = epoxy_glTexCoord2fNormal3fVertex3fSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fNormal3fVertex3fvSUN = epoxy_glTexCoord2fNormal3fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fVertex3fSUN = epoxy_glTexCoord2fVertex3fSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fVertex3fvSUN = epoxy_glTexCoord2fVertex3fvSUN_dispatch_table_thunk;
    epoxy_glTexCoord2fv = epoxy_glTexCoord2fv_dispatch_table_thunk;
    epoxy_glTexCoord2hNV = epoxy_glTexCoord2hNV_dispatch_table_thunk;
    epoxy_glTexCoord2hvNV = epoxy_glTexCoord2hvNV_dispatch_table_thunk;
    epoxy_glTexCoord2i = epoxy_glTexCoord2i_dispatch_table_thunk;
    epoxy_glTexCoord2iv = epoxy_glTexCoord2iv_dispatch_table_thunk;
    epoxy_glTexCoord2s = epoxy_glTexCoord2s_dispatch_table_thunk;
    epoxy_glTexCoord2sv = epoxy_glTexCoord2sv_dispatch_table_thunk;
    epoxy_glTexCoord2xOES = epoxy_glTexCoord2xOES_dispatch_table_thunk;
    epoxy_glTexCoord2xvOES = epoxy_glTexCoord2xvOES_dispatch_table_thunk;
    epoxy_glTexCoord3bOES = epoxy_glTexCoord3bOES_dispatch_table_thunk;
    epoxy_glTexCoord3bvOES = epoxy_glTexCoord3bvOES_dispatch_table_thunk;
    epoxy_glTexCoord3d = epoxy_glTexCoord3d_dispatch_table_thunk;
    epoxy_glTexCoord3dv = epoxy_glTexCoord3dv_dispatch_table_thunk;
    epoxy_glTexCoord3f = epoxy_glTexCoord3f_dispatch_table_thunk;
    epoxy_glTexCoord3fv = epoxy_glTexCoord3fv_dispatch_table_thunk;
    epoxy_glTexCoord3hNV = epoxy_glTexCoord3hNV_dispatch_table_thunk;
    epoxy_glTexCoord3hvNV = epoxy_glTexCoord3hvNV_dispatch_table_thunk;
    epoxy_glTexCoord3i = epoxy_glTexCoord3i_dispatch_table_thunk;
    epoxy_glTexCoord3iv = epoxy_glTexCoord3iv_dispatch_table_thunk;
    epoxy_glTexCoord3s = epoxy_glTexCoord3s_dispatch_table_thunk;
    epoxy_glTexCoord3sv = epoxy_glTexCoord3sv_dispatch_table_thunk;
    epoxy_glTexCoord3xOES = epoxy_glTexCoord3xOES_dispatch_table_thunk;
    epoxy_glTexCoord3xvOES = epoxy_glTexCoord3xvOES_dispatch_table_thunk;
    epoxy_glTexCoord4bOES = epoxy_glTexCoord4bOES_dispatch_table_thunk;
    epoxy_glTexCoord4bvOES = epoxy_glTexCoord4bvOES_dispatch_table_thunk;
    epoxy_glTexCoord4d = epoxy_glTexCoord4d_dispatch_table_thunk;
    epoxy_glTexCoord4dv = epoxy_glTexCoord4dv_dispatch_table_thunk;
    epoxy_glTexCoord4f = epoxy_glTexCoord4f_dispatch_table_thunk;
    epoxy_glTexCoord4fColor4fNormal3fVertex4fSUN = epoxy_glTexCoord4fColor4fNormal3fVertex4fSUN_dispatch_table_thunk;
    epoxy_glTexCoord4fColor4fNormal3fVertex4fvSUN = epoxy_glTexCoord4fColor4fNormal3fVertex4fvSUN_dispatch_table_thunk;
    epoxy_glTexCoord4fVertex4fSUN = epoxy_glTexCoord4fVertex4fSUN_dispatch_table_thunk;
    epoxy_glTexCoord4fVertex4fvSUN = epoxy_glTexCoord4fVertex4fvSUN_dispatch_table_thunk;
    epoxy_glTexCoord4fv = epoxy_glTexCoord4fv_dispatch_table_thunk;
    epoxy_glTexCoord4hNV = epoxy_glTexCoord4hNV_dispatch_table_thunk;
    epoxy_glTexCoord4hvNV = epoxy_glTexCoord4hvNV_dispatch_table_thunk;
    epoxy_glTexCoord4i = epoxy_glTexCoord4i_dispatch_table_thunk;
    epoxy_glTexCoord4iv = epoxy_glTexCoord4iv_dispatch_table_thunk;
    epoxy_glTexCoord4s = epoxy_glTexCoord4s_dispatch_table_thunk;
    epoxy_glTexCoord4sv = epoxy_glTexCoord4sv_dispatch_table_thunk;
    epoxy_glTexCoord4xOES = epoxy_glTexCoord4xOES_dispatch_table_thunk;
    epoxy_glTexCoord4xvOES = epoxy_glTexCoord4xvOES_dispatch_table_thunk;
    epoxy_glTexCoordFormatNV = epoxy_glTexCoordFormatNV_dispatch_table_thunk;
    epoxy_glTexCoordP1ui = epoxy_glTexCoordP1ui_dispatch_table_thunk;
    epoxy_glTexCoordP1uiv = epoxy_glTexCoordP1uiv_dispatch_table_thunk;
    epoxy_glTexCoordP2ui = epoxy_glTexCoordP2ui_dispatch_table_thunk;
    epoxy_glTexCoordP2uiv = epoxy_glTexCoordP2uiv_dispatch_table_thunk;
    epoxy_glTexCoordP3ui = epoxy_glTexCoordP3ui_dispatch_table_thunk;
    epoxy_glTexCoordP3uiv = epoxy_glTexCoordP3uiv_dispatch_table_thunk;
    epoxy_glTexCoordP4ui = epoxy_glTexCoordP4ui_dispatch_table_thunk;
    epoxy_glTexCoordP4uiv = epoxy_glTexCoordP4uiv_dispatch_table_thunk;
    epoxy_glTexCoordPointer = epoxy_glTexCoordPointer_dispatch_table_thunk;
    epoxy_glTexCoordPointerEXT = epoxy_glTexCoordPointerEXT_dispatch_table_thunk;
    epoxy_glTexCoordPointerListIBM = epoxy_glTexCoordPointerListIBM_dispatch_table_thunk;
    epoxy_glTexCoordPointervINTEL = epoxy_glTexCoordPointervINTEL_dispatch_table_thunk;
    epoxy_glTexEnvf = epoxy_glTexEnvf_dispatch_table_thunk;
    epoxy_glTexEnvfv = epoxy_glTexEnvfv_dispatch_table_thunk;
    epoxy_glTexEnvi = epoxy_glTexEnvi_dispatch_table_thunk;
    epoxy_glTexEnviv = epoxy_glTexEnviv_dispatch_table_thunk;
    epoxy_glTexEnvx = epoxy_glTexEnvx_dispatch_table_thunk;
    epoxy_glTexEnvxOES = epoxy_glTexEnvxOES_dispatch_table_thunk;
    epoxy_glTexEnvxv = epoxy_glTexEnvxv_dispatch_table_thunk;
    epoxy_glTexEnvxvOES = epoxy_glTexEnvxvOES_dispatch_table_thunk;
    epoxy_glTexFilterFuncSGIS = epoxy_glTexFilterFuncSGIS_dispatch_table_thunk;
    epoxy_glTexGend = epoxy_glTexGend_dispatch_table_thunk;
    epoxy_glTexGendv = epoxy_glTexGendv_dispatch_table_thunk;
    epoxy_glTexGenf = epoxy_glTexGenf_dispatch_table_thunk;
    epoxy_glTexGenfOES = epoxy_glTexGenfOES_dispatch_table_thunk;
    epoxy_glTexGenfv = epoxy_glTexGenfv_dispatch_table_thunk;
    epoxy_glTexGenfvOES = epoxy_glTexGenfvOES_dispatch_table_thunk;
    epoxy_glTexGeni = epoxy_glTexGeni_dispatch_table_thunk;
    epoxy_glTexGeniOES = epoxy_glTexGeniOES_dispatch_table_thunk;
    epoxy_glTexGeniv = epoxy_glTexGeniv_dispatch_table_thunk;
    epoxy_glTexGenivOES = epoxy_glTexGenivOES_dispatch_table_thunk;
    epoxy_glTexGenxOES = epoxy_glTexGenxOES_dispatch_table_thunk;
    epoxy_glTexGenxvOES = epoxy_glTexGenxvOES_dispatch_table_thunk;
    epoxy_glTexImage1D = epoxy_glTexImage1D_dispatch_table_thunk;
    epoxy_glTexImage2D = epoxy_glTexImage2D_dispatch_table_thunk;
    epoxy_glTexImage2DMultisample = epoxy_glTexImage2DMultisample_dispatch_table_thunk;
    epoxy_glTexImage2DMultisampleCoverageNV = epoxy_glTexImage2DMultisampleCoverageNV_dispatch_table_thunk;
    epoxy_glTexImage3D = epoxy_glTexImage3D_dispatch_table_thunk;
    epoxy_glTexImage3DEXT = epoxy_glTexImage3DEXT_dispatch_table_thunk;
    epoxy_glTexImage3DMultisample = epoxy_glTexImage3DMultisample_dispatch_table_thunk;
    epoxy_glTexImage3DMultisampleCoverageNV = epoxy_glTexImage3DMultisampleCoverageNV_dispatch_table_thunk;
    epoxy_glTexImage3DOES = epoxy_glTexImage3DOES_dispatch_table_thunk;
    epoxy_glTexImage4DSGIS = epoxy_glTexImage4DSGIS_dispatch_table_thunk;
    epoxy_glTexPageCommitmentARB = epoxy_glTexPageCommitmentARB_dispatch_table_thunk;
    epoxy_glTexPageCommitmentEXT = epoxy_glTexPageCommitmentEXT_dispatch_table_thunk;
    epoxy_glTexParameterIiv = epoxy_glTexParameterIiv_dispatch_table_thunk;
    epoxy_glTexParameterIivEXT = epoxy_glTexParameterIivEXT_dispatch_table_thunk;
    epoxy_glTexParameterIivOES = epoxy_glTexParameterIivOES_dispatch_table_thunk;
    epoxy_glTexParameterIuiv = epoxy_glTexParameterIuiv_dispatch_table_thunk;
    epoxy_glTexParameterIuivEXT = epoxy_glTexParameterIuivEXT_dispatch_table_thunk;
    epoxy_glTexParameterIuivOES = epoxy_glTexParameterIuivOES_dispatch_table_thunk;
    epoxy_glTexParameterf = epoxy_glTexParameterf_dispatch_table_thunk;
    epoxy_glTexParameterfv = epoxy_glTexParameterfv_dispatch_table_thunk;
    epoxy_glTexParameteri = epoxy_glTexParameteri_dispatch_table_thunk;
    epoxy_glTexParameteriv = epoxy_glTexParameteriv_dispatch_table_thunk;
    epoxy_glTexParameterx = epoxy_glTexParameterx_dispatch_table_thunk;
    epoxy_glTexParameterxOES = epoxy_glTexParameterxOES_dispatch_table_thunk;
    epoxy_glTexParameterxv = epoxy_glTexParameterxv_dispatch_table_thunk;
    epoxy_glTexParameterxvOES = epoxy_glTexParameterxvOES_dispatch_table_thunk;
    epoxy_glTexRenderbufferNV = epoxy_glTexRenderbufferNV_dispatch_table_thunk;
    epoxy_glTexStorage1D = epoxy_glTexStorage1D_dispatch_table_thunk;
    epoxy_glTexStorage1DEXT = epoxy_glTexStorage1DEXT_dispatch_table_thunk;
    epoxy_glTexStorage2D = epoxy_glTexStorage2D_dispatch_table_thunk;
    epoxy_glTexStorage2DEXT = epoxy_glTexStorage2DEXT_dispatch_table_thunk;
    epoxy_glTexStorage2DMultisample = epoxy_glTexStorage2DMultisample_dispatch_table_thunk;
    epoxy_glTexStorage3D = epoxy_glTexStorage3D_dispatch_table_thunk;
    epoxy_glTexStorage3DEXT = epoxy_glTexStorage3DEXT_dispatch_table_thunk;
    epoxy_glTexStorage3DMultisample = epoxy_glTexStorage3DMultisample_dispatch_table_thunk;
    epoxy_glTexStorage3DMultisampleOES = epoxy_glTexStorage3DMultisampleOES_dispatch_table_thunk;
    epoxy_glTexStorageSparseAMD = epoxy_glTexStorageSparseAMD_dispatch_table_thunk;
    epoxy_glTexSubImage1D = epoxy_glTexSubImage1D_dispatch_table_thunk;
    epoxy_glTexSubImage1DEXT = epoxy_glTexSubImage1DEXT_dispatch_table_thunk;
    epoxy_glTexSubImage2D = epoxy_glTexSubImage2D_dispatch_table_thunk;
    epoxy_glTexSubImage2DEXT = epoxy_glTexSubImage2DEXT_dispatch_table_thunk;
    epoxy_glTexSubImage3D = epoxy_glTexSubImage3D_dispatch_table_thunk;
    epoxy_glTexSubImage3DEXT = epoxy_glTexSubImage3DEXT_dispatch_table_thunk;
    epoxy_glTexSubImage3DOES = epoxy_glTexSubImage3DOES_dispatch_table_thunk;
    epoxy_glTexSubImage4DSGIS = epoxy_glTexSubImage4DSGIS_dispatch_table_thunk;
    epoxy_glTextureBarrier = epoxy_glTextureBarrier_dispatch_table_thunk;
    epoxy_glTextureBarrierNV = epoxy_glTextureBarrierNV_dispatch_table_thunk;
    epoxy_glTextureBuffer = epoxy_glTextureBuffer_dispatch_table_thunk;
    epoxy_glTextureBufferEXT = epoxy_glTextureBufferEXT_dispatch_table_thunk;
    epoxy_glTextureBufferRange = epoxy_glTextureBufferRange_dispatch_table_thunk;
    epoxy_glTextureBufferRangeEXT = epoxy_glTextureBufferRangeEXT_dispatch_table_thunk;
    epoxy_glTextureColorMaskSGIS = epoxy_glTextureColorMaskSGIS_dispatch_table_thunk;
    epoxy_glTextureImage1DEXT = epoxy_glTextureImage1DEXT_dispatch_table_thunk;
    epoxy_glTextureImage2DEXT = epoxy_glTextureImage2DEXT_dispatch_table_thunk;
    epoxy_glTextureImage2DMultisampleCoverageNV = epoxy_glTextureImage2DMultisampleCoverageNV_dispatch_table_thunk;
    epoxy_glTextureImage2DMultisampleNV = epoxy_glTextureImage2DMultisampleNV_dispatch_table_thunk;
    epoxy_glTextureImage3DEXT = epoxy_glTextureImage3DEXT_dispatch_table_thunk;
    epoxy_glTextureImage3DMultisampleCoverageNV = epoxy_glTextureImage3DMultisampleCoverageNV_dispatch_table_thunk;
    epoxy_glTextureImage3DMultisampleNV = epoxy_glTextureImage3DMultisampleNV_dispatch_table_thunk;
    epoxy_glTextureLightEXT = epoxy_glTextureLightEXT_dispatch_table_thunk;
    epoxy_glTextureMaterialEXT = epoxy_glTextureMaterialEXT_dispatch_table_thunk;
    epoxy_glTextureNormalEXT = epoxy_glTextureNormalEXT_dispatch_table_thunk;
    epoxy_glTexturePageCommitmentEXT = epoxy_glTexturePageCommitmentEXT_dispatch_table_thunk;
    epoxy_glTextureParameterIiv = epoxy_glTextureParameterIiv_dispatch_table_thunk;
    epoxy_glTextureParameterIivEXT = epoxy_glTextureParameterIivEXT_dispatch_table_thunk;
    epoxy_glTextureParameterIuiv = epoxy_glTextureParameterIuiv_dispatch_table_thunk;
    epoxy_glTextureParameterIuivEXT = epoxy_glTextureParameterIuivEXT_dispatch_table_thunk;
    epoxy_glTextureParameterf = epoxy_glTextureParameterf_dispatch_table_thunk;
    epoxy_glTextureParameterfEXT = epoxy_glTextureParameterfEXT_dispatch_table_thunk;
    epoxy_glTextureParameterfv = epoxy_glTextureParameterfv_dispatch_table_thunk;
    epoxy_glTextureParameterfvEXT = epoxy_glTextureParameterfvEXT_dispatch_table_thunk;
    epoxy_glTextureParameteri = epoxy_glTextureParameteri_dispatch_table_thunk;
    epoxy_glTextureParameteriEXT = epoxy_glTextureParameteriEXT_dispatch_table_thunk;
    epoxy_glTextureParameteriv = epoxy_glTextureParameteriv_dispatch_table_thunk;
    epoxy_glTextureParameterivEXT = epoxy_glTextureParameterivEXT_dispatch_table_thunk;
    epoxy_glTextureRangeAPPLE = epoxy_glTextureRangeAPPLE_dispatch_table_thunk;
    epoxy_glTextureRenderbufferEXT = epoxy_glTextureRenderbufferEXT_dispatch_table_thunk;
    epoxy_glTextureStorage1D = epoxy_glTextureStorage1D_dispatch_table_thunk;
    epoxy_glTextureStorage1DEXT = epoxy_glTextureStorage1DEXT_dispatch_table_thunk;
    epoxy_glTextureStorage2D = epoxy_glTextureStorage2D_dispatch_table_thunk;
    epoxy_glTextureStorage2DEXT = epoxy_glTextureStorage2DEXT_dispatch_table_thunk;
    epoxy_glTextureStorage2DMultisample = epoxy_glTextureStorage2DMultisample_dispatch_table_thunk;
    epoxy_glTextureStorage2DMultisampleEXT = epoxy_glTextureStorage2DMultisampleEXT_dispatch_table_thunk;
    epoxy_glTextureStorage3D = epoxy_glTextureStorage3D_dispatch_table_thunk;
    epoxy_glTextureStorage3DEXT = epoxy_glTextureStorage3DEXT_dispatch_table_thunk;
    epoxy_glTextureStorage3DMultisample = epoxy_glTextureStorage3DMultisample_dispatch_table_thunk;
    epoxy_glTextureStorage3DMultisampleEXT = epoxy_glTextureStorage3DMultisampleEXT_dispatch_table_thunk;
    epoxy_glTextureStorageSparseAMD = epoxy_glTextureStorageSparseAMD_dispatch_table_thunk;
    epoxy_glTextureSubImage1D = epoxy_glTextureSubImage1D_dispatch_table_thunk;
    epoxy_glTextureSubImage1DEXT = epoxy_glTextureSubImage1DEXT_dispatch_table_thunk;
    epoxy_glTextureSubImage2D = epoxy_glTextureSubImage2D_dispatch_table_thunk;
    epoxy_glTextureSubImage2DEXT = epoxy_glTextureSubImage2DEXT_dispatch_table_thunk;
    epoxy_glTextureSubImage3D = epoxy_glTextureSubImage3D_dispatch_table_thunk;
    epoxy_glTextureSubImage3DEXT = epoxy_glTextureSubImage3DEXT_dispatch_table_thunk;
    epoxy_glTextureView = epoxy_glTextureView_dispatch_table_thunk;
    epoxy_glTextureViewEXT = epoxy_glTextureViewEXT_dispatch_table_thunk;
    epoxy_glTextureViewOES = epoxy_glTextureViewOES_dispatch_table_thunk;
    epoxy_glTrackMatrixNV = epoxy_glTrackMatrixNV_dispatch_table_thunk;
    epoxy_glTransformFeedbackAttribsNV = epoxy_glTransformFeedbackAttribsNV_dispatch_table_thunk;
    epoxy_glTransformFeedbackBufferBase = epoxy_glTransformFeedbackBufferBase_dispatch_table_thunk;
    epoxy_glTransformFeedbackBufferRange = epoxy_glTransformFeedbackBufferRange_dispatch_table_thunk;
    epoxy_glTransformFeedbackStreamAttribsNV = epoxy_glTransformFeedbackStreamAttribsNV_dispatch_table_thunk;
    epoxy_glTransformFeedbackVaryings = epoxy_glTransformFeedbackVaryings_dispatch_table_thunk;
    epoxy_glTransformFeedbackVaryingsEXT = epoxy_glTransformFeedbackVaryingsEXT_dispatch_table_thunk;
    epoxy_glTransformFeedbackVaryingsNV = epoxy_glTransformFeedbackVaryingsNV_dispatch_table_thunk;
    epoxy_glTransformPathNV = epoxy_glTransformPathNV_dispatch_table_thunk;
    epoxy_glTranslated = epoxy_glTranslated_dispatch_table_thunk;
    epoxy_glTranslatef = epoxy_glTranslatef_dispatch_table_thunk;
    epoxy_glTranslatex = epoxy_glTranslatex_dispatch_table_thunk;
    epoxy_glTranslatexOES = epoxy_glTranslatexOES_dispatch_table_thunk;
    epoxy_glUniform1d = epoxy_glUniform1d_dispatch_table_thunk;
    epoxy_glUniform1dv = epoxy_glUniform1dv_dispatch_table_thunk;
    epoxy_glUniform1f = epoxy_glUniform1f_dispatch_table_thunk;
    epoxy_glUniform1fARB = epoxy_glUniform1fARB_dispatch_table_thunk;
    epoxy_glUniform1fv = epoxy_glUniform1fv_dispatch_table_thunk;
    epoxy_glUniform1fvARB = epoxy_glUniform1fvARB_dispatch_table_thunk;
    epoxy_glUniform1i = epoxy_glUniform1i_dispatch_table_thunk;
    epoxy_glUniform1i64NV = epoxy_glUniform1i64NV_dispatch_table_thunk;
    epoxy_glUniform1i64vNV = epoxy_glUniform1i64vNV_dispatch_table_thunk;
    epoxy_glUniform1iARB = epoxy_glUniform1iARB_dispatch_table_thunk;
    epoxy_glUniform1iv = epoxy_glUniform1iv_dispatch_table_thunk;
    epoxy_glUniform1ivARB = epoxy_glUniform1ivARB_dispatch_table_thunk;
    epoxy_glUniform1ui = epoxy_glUniform1ui_dispatch_table_thunk;
    epoxy_glUniform1ui64NV = epoxy_glUniform1ui64NV_dispatch_table_thunk;
    epoxy_glUniform1ui64vNV = epoxy_glUniform1ui64vNV_dispatch_table_thunk;
    epoxy_glUniform1uiEXT = epoxy_glUniform1uiEXT_dispatch_table_thunk;
    epoxy_glUniform1uiv = epoxy_glUniform1uiv_dispatch_table_thunk;
    epoxy_glUniform1uivEXT = epoxy_glUniform1uivEXT_dispatch_table_thunk;
    epoxy_glUniform2d = epoxy_glUniform2d_dispatch_table_thunk;
    epoxy_glUniform2dv = epoxy_glUniform2dv_dispatch_table_thunk;
    epoxy_glUniform2f = epoxy_glUniform2f_dispatch_table_thunk;
    epoxy_glUniform2fARB = epoxy_glUniform2fARB_dispatch_table_thunk;
    epoxy_glUniform2fv = epoxy_glUniform2fv_dispatch_table_thunk;
    epoxy_glUniform2fvARB = epoxy_glUniform2fvARB_dispatch_table_thunk;
    epoxy_glUniform2i = epoxy_glUniform2i_dispatch_table_thunk;
    epoxy_glUniform2i64NV = epoxy_glUniform2i64NV_dispatch_table_thunk;
    epoxy_glUniform2i64vNV = epoxy_glUniform2i64vNV_dispatch_table_thunk;
    epoxy_glUniform2iARB = epoxy_glUniform2iARB_dispatch_table_thunk;
    epoxy_glUniform2iv = epoxy_glUniform2iv_dispatch_table_thunk;
    epoxy_glUniform2ivARB = epoxy_glUniform2ivARB_dispatch_table_thunk;
    epoxy_glUniform2ui = epoxy_glUniform2ui_dispatch_table_thunk;
    epoxy_glUniform2ui64NV = epoxy_glUniform2ui64NV_dispatch_table_thunk;
    epoxy_glUniform2ui64vNV = epoxy_glUniform2ui64vNV_dispatch_table_thunk;
    epoxy_glUniform2uiEXT = epoxy_glUniform2uiEXT_dispatch_table_thunk;
    epoxy_glUniform2uiv = epoxy_glUniform2uiv_dispatch_table_thunk;
    epoxy_glUniform2uivEXT = epoxy_glUniform2uivEXT_dispatch_table_thunk;
    epoxy_glUniform3d = epoxy_glUniform3d_dispatch_table_thunk;
    epoxy_glUniform3dv = epoxy_glUniform3dv_dispatch_table_thunk;
    epoxy_glUniform3f = epoxy_glUniform3f_dispatch_table_thunk;
    epoxy_glUniform3fARB = epoxy_glUniform3fARB_dispatch_table_thunk;
    epoxy_glUniform3fv = epoxy_glUniform3fv_dispatch_table_thunk;
    epoxy_glUniform3fvARB = epoxy_glUniform3fvARB_dispatch_table_thunk;
    epoxy_glUniform3i = epoxy_glUniform3i_dispatch_table_thunk;
    epoxy_glUniform3i64NV = epoxy_glUniform3i64NV_dispatch_table_thunk;
    epoxy_glUniform3i64vNV = epoxy_glUniform3i64vNV_dispatch_table_thunk;
    epoxy_glUniform3iARB = epoxy_glUniform3iARB_dispatch_table_thunk;
    epoxy_glUniform3iv = epoxy_glUniform3iv_dispatch_table_thunk;
    epoxy_glUniform3ivARB = epoxy_glUniform3ivARB_dispatch_table_thunk;
    epoxy_glUniform3ui = epoxy_glUniform3ui_dispatch_table_thunk;
    epoxy_glUniform3ui64NV = epoxy_glUniform3ui64NV_dispatch_table_thunk;
    epoxy_glUniform3ui64vNV = epoxy_glUniform3ui64vNV_dispatch_table_thunk;
    epoxy_glUniform3uiEXT = epoxy_glUniform3uiEXT_dispatch_table_thunk;
    epoxy_glUniform3uiv = epoxy_glUniform3uiv_dispatch_table_thunk;
    epoxy_glUniform3uivEXT = epoxy_glUniform3uivEXT_dispatch_table_thunk;
    epoxy_glUniform4d = epoxy_glUniform4d_dispatch_table_thunk;
    epoxy_glUniform4dv = epoxy_glUniform4dv_dispatch_table_thunk;
    epoxy_glUniform4f = epoxy_glUniform4f_dispatch_table_thunk;
    epoxy_glUniform4fARB = epoxy_glUniform4fARB_dispatch_table_thunk;
    epoxy_glUniform4fv = epoxy_glUniform4fv_dispatch_table_thunk;
    epoxy_glUniform4fvARB = epoxy_glUniform4fvARB_dispatch_table_thunk;
    epoxy_glUniform4i = epoxy_glUniform4i_dispatch_table_thunk;
    epoxy_glUniform4i64NV = epoxy_glUniform4i64NV_dispatch_table_thunk;
    epoxy_glUniform4i64vNV = epoxy_glUniform4i64vNV_dispatch_table_thunk;
    epoxy_glUniform4iARB = epoxy_glUniform4iARB_dispatch_table_thunk;
    epoxy_glUniform4iv = epoxy_glUniform4iv_dispatch_table_thunk;
    epoxy_glUniform4ivARB = epoxy_glUniform4ivARB_dispatch_table_thunk;
    epoxy_glUniform4ui = epoxy_glUniform4ui_dispatch_table_thunk;
    epoxy_glUniform4ui64NV = epoxy_glUniform4ui64NV_dispatch_table_thunk;
    epoxy_glUniform4ui64vNV = epoxy_glUniform4ui64vNV_dispatch_table_thunk;
    epoxy_glUniform4uiEXT = epoxy_glUniform4uiEXT_dispatch_table_thunk;
    epoxy_glUniform4uiv = epoxy_glUniform4uiv_dispatch_table_thunk;
    epoxy_glUniform4uivEXT = epoxy_glUniform4uivEXT_dispatch_table_thunk;
    epoxy_glUniformBlockBinding = epoxy_glUniformBlockBinding_dispatch_table_thunk;
    epoxy_glUniformBufferEXT = epoxy_glUniformBufferEXT_dispatch_table_thunk;
    epoxy_glUniformHandleui64ARB = epoxy_glUniformHandleui64ARB_dispatch_table_thunk;
    epoxy_glUniformHandleui64NV = epoxy_glUniformHandleui64NV_dispatch_table_thunk;
    epoxy_glUniformHandleui64vARB = epoxy_glUniformHandleui64vARB_dispatch_table_thunk;
    epoxy_glUniformHandleui64vNV = epoxy_glUniformHandleui64vNV_dispatch_table_thunk;
    epoxy_glUniformMatrix2dv = epoxy_glUniformMatrix2dv_dispatch_table_thunk;
    epoxy_glUniformMatrix2fv = epoxy_glUniformMatrix2fv_dispatch_table_thunk;
    epoxy_glUniformMatrix2fvARB = epoxy_glUniformMatrix2fvARB_dispatch_table_thunk;
    epoxy_glUniformMatrix2x3dv = epoxy_glUniformMatrix2x3dv_dispatch_table_thunk;
    epoxy_glUniformMatrix2x3fv = epoxy_glUniformMatrix2x3fv_dispatch_table_thunk;
    epoxy_glUniformMatrix2x3fvNV = epoxy_glUniformMatrix2x3fvNV_dispatch_table_thunk;
    epoxy_glUniformMatrix2x4dv = epoxy_glUniformMatrix2x4dv_dispatch_table_thunk;
    epoxy_glUniformMatrix2x4fv = epoxy_glUniformMatrix2x4fv_dispatch_table_thunk;
    epoxy_glUniformMatrix2x4fvNV = epoxy_glUniformMatrix2x4fvNV_dispatch_table_thunk;
    epoxy_glUniformMatrix3dv = epoxy_glUniformMatrix3dv_dispatch_table_thunk;
    epoxy_glUniformMatrix3fv = epoxy_glUniformMatrix3fv_dispatch_table_thunk;
    epoxy_glUniformMatrix3fvARB = epoxy_glUniformMatrix3fvARB_dispatch_table_thunk;
    epoxy_glUniformMatrix3x2dv = epoxy_glUniformMatrix3x2dv_dispatch_table_thunk;
    epoxy_glUniformMatrix3x2fv = epoxy_glUniformMatrix3x2fv_dispatch_table_thunk;
    epoxy_glUniformMatrix3x2fvNV = epoxy_glUniformMatrix3x2fvNV_dispatch_table_thunk;
    epoxy_glUniformMatrix3x4dv = epoxy_glUniformMatrix3x4dv_dispatch_table_thunk;
    epoxy_glUniformMatrix3x4fv = epoxy_glUniformMatrix3x4fv_dispatch_table_thunk;
    epoxy_glUniformMatrix3x4fvNV = epoxy_glUniformMatrix3x4fvNV_dispatch_table_thunk;
    epoxy_glUniformMatrix4dv = epoxy_glUniformMatrix4dv_dispatch_table_thunk;
    epoxy_glUniformMatrix4fv = epoxy_glUniformMatrix4fv_dispatch_table_thunk;
    epoxy_glUniformMatrix4fvARB = epoxy_glUniformMatrix4fvARB_dispatch_table_thunk;
    epoxy_glUniformMatrix4x2dv = epoxy_glUniformMatrix4x2dv_dispatch_table_thunk;
    epoxy_glUniformMatrix4x2fv = epoxy_glUniformMatrix4x2fv_dispatch_table_thunk;
    epoxy_glUniformMatrix4x2fvNV = epoxy_glUniformMatrix4x2fvNV_dispatch_table_thunk;
    epoxy_glUniformMatrix4x3dv = epoxy_glUniformMatrix4x3dv_dispatch_table_thunk;
    epoxy_glUniformMatrix4x3fv = epoxy_glUniformMatrix4x3fv_dispatch_table_thunk;
    epoxy_glUniformMatrix4x3fvNV = epoxy_glUniformMatrix4x3fvNV_dispatch_table_thunk;
    epoxy_glUniformSubroutinesuiv = epoxy_glUniformSubroutinesuiv_dispatch_table_thunk;
    epoxy_glUniformui64NV = epoxy_glUniformui64NV_dispatch_table_thunk;
    epoxy_glUniformui64vNV = epoxy_glUniformui64vNV_dispatch_table_thunk;
    epoxy_glUnlockArraysEXT = epoxy_glUnlockArraysEXT_dispatch_table_thunk;
    epoxy_glUnmapBuffer = epoxy_glUnmapBuffer_dispatch_table_thunk;
    epoxy_glUnmapBufferARB = epoxy_glUnmapBufferARB_dispatch_table_thunk;
    epoxy_glUnmapBufferOES = epoxy_glUnmapBufferOES_dispatch_table_thunk;
    epoxy_glUnmapNamedBuffer = epoxy_glUnmapNamedBuffer_dispatch_table_thunk;
    epoxy_glUnmapNamedBufferEXT = epoxy_glUnmapNamedBufferEXT_dispatch_table_thunk;
    epoxy_glUnmapObjectBufferATI = epoxy_glUnmapObjectBufferATI_dispatch_table_thunk;
    epoxy_glUnmapTexture2DINTEL = epoxy_glUnmapTexture2DINTEL_dispatch_table_thunk;
    epoxy_glUpdateObjectBufferATI = epoxy_glUpdateObjectBufferATI_dispatch_table_thunk;
    epoxy_glUseProgram = epoxy_glUseProgram_dispatch_table_thunk;
    epoxy_glUseProgramObjectARB = epoxy_glUseProgramObjectARB_dispatch_table_thunk;
    epoxy_glUseProgramStages = epoxy_glUseProgramStages_dispatch_table_thunk;
    epoxy_glUseProgramStagesEXT = epoxy_glUseProgramStagesEXT_dispatch_table_thunk;
    epoxy_glUseShaderProgramEXT = epoxy_glUseShaderProgramEXT_dispatch_table_thunk;
    epoxy_glVDPAUFiniNV = epoxy_glVDPAUFiniNV_dispatch_table_thunk;
    epoxy_glVDPAUGetSurfaceivNV = epoxy_glVDPAUGetSurfaceivNV_dispatch_table_thunk;
    epoxy_glVDPAUInitNV = epoxy_glVDPAUInitNV_dispatch_table_thunk;
    epoxy_glVDPAUIsSurfaceNV = epoxy_glVDPAUIsSurfaceNV_dispatch_table_thunk;
    epoxy_glVDPAUMapSurfacesNV = epoxy_glVDPAUMapSurfacesNV_dispatch_table_thunk;
    epoxy_glVDPAURegisterOutputSurfaceNV = epoxy_glVDPAURegisterOutputSurfaceNV_dispatch_table_thunk;
    epoxy_glVDPAURegisterVideoSurfaceNV = epoxy_glVDPAURegisterVideoSurfaceNV_dispatch_table_thunk;
    epoxy_glVDPAUSurfaceAccessNV = epoxy_glVDPAUSurfaceAccessNV_dispatch_table_thunk;
    epoxy_glVDPAUUnmapSurfacesNV = epoxy_glVDPAUUnmapSurfacesNV_dispatch_table_thunk;
    epoxy_glVDPAUUnregisterSurfaceNV = epoxy_glVDPAUUnregisterSurfaceNV_dispatch_table_thunk;
    epoxy_glValidateProgram = epoxy_glValidateProgram_dispatch_table_thunk;
    epoxy_glValidateProgramARB = epoxy_glValidateProgramARB_dispatch_table_thunk;
    epoxy_glValidateProgramPipeline = epoxy_glValidateProgramPipeline_dispatch_table_thunk;
    epoxy_glValidateProgramPipelineEXT = epoxy_glValidateProgramPipelineEXT_dispatch_table_thunk;
    epoxy_glVariantArrayObjectATI = epoxy_glVariantArrayObjectATI_dispatch_table_thunk;
    epoxy_glVariantPointerEXT = epoxy_glVariantPointerEXT_dispatch_table_thunk;
    epoxy_glVariantbvEXT = epoxy_glVariantbvEXT_dispatch_table_thunk;
    epoxy_glVariantdvEXT = epoxy_glVariantdvEXT_dispatch_table_thunk;
    epoxy_glVariantfvEXT = epoxy_glVariantfvEXT_dispatch_table_thunk;
    epoxy_glVariantivEXT = epoxy_glVariantivEXT_dispatch_table_thunk;
    epoxy_glVariantsvEXT = epoxy_glVariantsvEXT_dispatch_table_thunk;
    epoxy_glVariantubvEXT = epoxy_glVariantubvEXT_dispatch_table_thunk;
    epoxy_glVariantuivEXT = epoxy_glVariantuivEXT_dispatch_table_thunk;
    epoxy_glVariantusvEXT = epoxy_glVariantusvEXT_dispatch_table_thunk;
    epoxy_glVertex2bOES = epoxy_glVertex2bOES_dispatch_table_thunk;
    epoxy_glVertex2bvOES = epoxy_glVertex2bvOES_dispatch_table_thunk;
    epoxy_glVertex2d = epoxy_glVertex2d_dispatch_table_thunk;
    epoxy_glVertex2dv = epoxy_glVertex2dv_dispatch_table_thunk;
    epoxy_glVertex2f = epoxy_glVertex2f_dispatch_table_thunk;
    epoxy_glVertex2fv = epoxy_glVertex2fv_dispatch_table_thunk;
    epoxy_glVertex2hNV = epoxy_glVertex2hNV_dispatch_table_thunk;
    epoxy_glVertex2hvNV = epoxy_glVertex2hvNV_dispatch_table_thunk;
    epoxy_glVertex2i = epoxy_glVertex2i_dispatch_table_thunk;
    epoxy_glVertex2iv = epoxy_glVertex2iv_dispatch_table_thunk;
    epoxy_glVertex2s = epoxy_glVertex2s_dispatch_table_thunk;
    epoxy_glVertex2sv = epoxy_glVertex2sv_dispatch_table_thunk;
    epoxy_glVertex2xOES = epoxy_glVertex2xOES_dispatch_table_thunk;
    epoxy_glVertex2xvOES = epoxy_glVertex2xvOES_dispatch_table_thunk;
    epoxy_glVertex3bOES = epoxy_glVertex3bOES_dispatch_table_thunk;
    epoxy_glVertex3bvOES = epoxy_glVertex3bvOES_dispatch_table_thunk;
    epoxy_glVertex3d = epoxy_glVertex3d_dispatch_table_thunk;
    epoxy_glVertex3dv = epoxy_glVertex3dv_dispatch_table_thunk;
    epoxy_glVertex3f = epoxy_glVertex3f_dispatch_table_thunk;
    epoxy_glVertex3fv = epoxy_glVertex3fv_dispatch_table_thunk;
    epoxy_glVertex3hNV = epoxy_glVertex3hNV_dispatch_table_thunk;
    epoxy_glVertex3hvNV = epoxy_glVertex3hvNV_dispatch_table_thunk;
    epoxy_glVertex3i = epoxy_glVertex3i_dispatch_table_thunk;
    epoxy_glVertex3iv = epoxy_glVertex3iv_dispatch_table_thunk;
    epoxy_glVertex3s = epoxy_glVertex3s_dispatch_table_thunk;
    epoxy_glVertex3sv = epoxy_glVertex3sv_dispatch_table_thunk;
    epoxy_glVertex3xOES = epoxy_glVertex3xOES_dispatch_table_thunk;
    epoxy_glVertex3xvOES = epoxy_glVertex3xvOES_dispatch_table_thunk;
    epoxy_glVertex4bOES = epoxy_glVertex4bOES_dispatch_table_thunk;
    epoxy_glVertex4bvOES = epoxy_glVertex4bvOES_dispatch_table_thunk;
    epoxy_glVertex4d = epoxy_glVertex4d_dispatch_table_thunk;
    epoxy_glVertex4dv = epoxy_glVertex4dv_dispatch_table_thunk;
    epoxy_glVertex4f = epoxy_glVertex4f_dispatch_table_thunk;
    epoxy_glVertex4fv = epoxy_glVertex4fv_dispatch_table_thunk;
    epoxy_glVertex4hNV = epoxy_glVertex4hNV_dispatch_table_thunk;
    epoxy_glVertex4hvNV = epoxy_glVertex4hvNV_dispatch_table_thunk;
    epoxy_glVertex4i = epoxy_glVertex4i_dispatch_table_thunk;
    epoxy_glVertex4iv = epoxy_glVertex4iv_dispatch_table_thunk;
    epoxy_glVertex4s = epoxy_glVertex4s_dispatch_table_thunk;
    epoxy_glVertex4sv = epoxy_glVertex4sv_dispatch_table_thunk;
    epoxy_glVertex4xOES = epoxy_glVertex4xOES_dispatch_table_thunk;
    epoxy_glVertex4xvOES = epoxy_glVertex4xvOES_dispatch_table_thunk;
    epoxy_glVertexArrayAttribBinding = epoxy_glVertexArrayAttribBinding_dispatch_table_thunk;
    epoxy_glVertexArrayAttribFormat = epoxy_glVertexArrayAttribFormat_dispatch_table_thunk;
    epoxy_glVertexArrayAttribIFormat = epoxy_glVertexArrayAttribIFormat_dispatch_table_thunk;
    epoxy_glVertexArrayAttribLFormat = epoxy_glVertexArrayAttribLFormat_dispatch_table_thunk;
    epoxy_glVertexArrayBindVertexBufferEXT = epoxy_glVertexArrayBindVertexBufferEXT_dispatch_table_thunk;
    epoxy_glVertexArrayBindingDivisor = epoxy_glVertexArrayBindingDivisor_dispatch_table_thunk;
    epoxy_glVertexArrayColorOffsetEXT = epoxy_glVertexArrayColorOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayEdgeFlagOffsetEXT = epoxy_glVertexArrayEdgeFlagOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayElementBuffer = epoxy_glVertexArrayElementBuffer_dispatch_table_thunk;
    epoxy_glVertexArrayFogCoordOffsetEXT = epoxy_glVertexArrayFogCoordOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayIndexOffsetEXT = epoxy_glVertexArrayIndexOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayMultiTexCoordOffsetEXT = epoxy_glVertexArrayMultiTexCoordOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayNormalOffsetEXT = epoxy_glVertexArrayNormalOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayParameteriAPPLE = epoxy_glVertexArrayParameteriAPPLE_dispatch_table_thunk;
    epoxy_glVertexArrayRangeAPPLE = epoxy_glVertexArrayRangeAPPLE_dispatch_table_thunk;
    epoxy_glVertexArrayRangeNV = epoxy_glVertexArrayRangeNV_dispatch_table_thunk;
    epoxy_glVertexArraySecondaryColorOffsetEXT = epoxy_glVertexArraySecondaryColorOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayTexCoordOffsetEXT = epoxy_glVertexArrayTexCoordOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexAttribBindingEXT = epoxy_glVertexArrayVertexAttribBindingEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexAttribDivisorEXT = epoxy_glVertexArrayVertexAttribDivisorEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexAttribFormatEXT = epoxy_glVertexArrayVertexAttribFormatEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexAttribIFormatEXT = epoxy_glVertexArrayVertexAttribIFormatEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexAttribIOffsetEXT = epoxy_glVertexArrayVertexAttribIOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexAttribLFormatEXT = epoxy_glVertexArrayVertexAttribLFormatEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexAttribLOffsetEXT = epoxy_glVertexArrayVertexAttribLOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexAttribOffsetEXT = epoxy_glVertexArrayVertexAttribOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexBindingDivisorEXT = epoxy_glVertexArrayVertexBindingDivisorEXT_dispatch_table_thunk;
    epoxy_glVertexArrayVertexBuffer = epoxy_glVertexArrayVertexBuffer_dispatch_table_thunk;
    epoxy_glVertexArrayVertexBuffers = epoxy_glVertexArrayVertexBuffers_dispatch_table_thunk;
    epoxy_glVertexArrayVertexOffsetEXT = epoxy_glVertexArrayVertexOffsetEXT_dispatch_table_thunk;
    epoxy_glVertexAttrib1d = epoxy_glVertexAttrib1d_dispatch_table_thunk;
    epoxy_glVertexAttrib1dARB = epoxy_glVertexAttrib1dARB_dispatch_table_thunk;
    epoxy_glVertexAttrib1dNV = epoxy_glVertexAttrib1dNV_dispatch_table_thunk;
    epoxy_glVertexAttrib1dv = epoxy_glVertexAttrib1dv_dispatch_table_thunk;
    epoxy_glVertexAttrib1dvARB = epoxy_glVertexAttrib1dvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib1dvNV = epoxy_glVertexAttrib1dvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib1f = epoxy_glVertexAttrib1f_dispatch_table_thunk;
    epoxy_glVertexAttrib1fARB = epoxy_glVertexAttrib1fARB_dispatch_table_thunk;
    epoxy_glVertexAttrib1fNV = epoxy_glVertexAttrib1fNV_dispatch_table_thunk;
    epoxy_glVertexAttrib1fv = epoxy_glVertexAttrib1fv_dispatch_table_thunk;
    epoxy_glVertexAttrib1fvARB = epoxy_glVertexAttrib1fvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib1fvNV = epoxy_glVertexAttrib1fvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib1hNV = epoxy_glVertexAttrib1hNV_dispatch_table_thunk;
    epoxy_glVertexAttrib1hvNV = epoxy_glVertexAttrib1hvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib1s = epoxy_glVertexAttrib1s_dispatch_table_thunk;
    epoxy_glVertexAttrib1sARB = epoxy_glVertexAttrib1sARB_dispatch_table_thunk;
    epoxy_glVertexAttrib1sNV = epoxy_glVertexAttrib1sNV_dispatch_table_thunk;
    epoxy_glVertexAttrib1sv = epoxy_glVertexAttrib1sv_dispatch_table_thunk;
    epoxy_glVertexAttrib1svARB = epoxy_glVertexAttrib1svARB_dispatch_table_thunk;
    epoxy_glVertexAttrib1svNV = epoxy_glVertexAttrib1svNV_dispatch_table_thunk;
    epoxy_glVertexAttrib2d = epoxy_glVertexAttrib2d_dispatch_table_thunk;
    epoxy_glVertexAttrib2dARB = epoxy_glVertexAttrib2dARB_dispatch_table_thunk;
    epoxy_glVertexAttrib2dNV = epoxy_glVertexAttrib2dNV_dispatch_table_thunk;
    epoxy_glVertexAttrib2dv = epoxy_glVertexAttrib2dv_dispatch_table_thunk;
    epoxy_glVertexAttrib2dvARB = epoxy_glVertexAttrib2dvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib2dvNV = epoxy_glVertexAttrib2dvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib2f = epoxy_glVertexAttrib2f_dispatch_table_thunk;
    epoxy_glVertexAttrib2fARB = epoxy_glVertexAttrib2fARB_dispatch_table_thunk;
    epoxy_glVertexAttrib2fNV = epoxy_glVertexAttrib2fNV_dispatch_table_thunk;
    epoxy_glVertexAttrib2fv = epoxy_glVertexAttrib2fv_dispatch_table_thunk;
    epoxy_glVertexAttrib2fvARB = epoxy_glVertexAttrib2fvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib2fvNV = epoxy_glVertexAttrib2fvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib2hNV = epoxy_glVertexAttrib2hNV_dispatch_table_thunk;
    epoxy_glVertexAttrib2hvNV = epoxy_glVertexAttrib2hvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib2s = epoxy_glVertexAttrib2s_dispatch_table_thunk;
    epoxy_glVertexAttrib2sARB = epoxy_glVertexAttrib2sARB_dispatch_table_thunk;
    epoxy_glVertexAttrib2sNV = epoxy_glVertexAttrib2sNV_dispatch_table_thunk;
    epoxy_glVertexAttrib2sv = epoxy_glVertexAttrib2sv_dispatch_table_thunk;
    epoxy_glVertexAttrib2svARB = epoxy_glVertexAttrib2svARB_dispatch_table_thunk;
    epoxy_glVertexAttrib2svNV = epoxy_glVertexAttrib2svNV_dispatch_table_thunk;
    epoxy_glVertexAttrib3d = epoxy_glVertexAttrib3d_dispatch_table_thunk;
    epoxy_glVertexAttrib3dARB = epoxy_glVertexAttrib3dARB_dispatch_table_thunk;
    epoxy_glVertexAttrib3dNV = epoxy_glVertexAttrib3dNV_dispatch_table_thunk;
    epoxy_glVertexAttrib3dv = epoxy_glVertexAttrib3dv_dispatch_table_thunk;
    epoxy_glVertexAttrib3dvARB = epoxy_glVertexAttrib3dvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib3dvNV = epoxy_glVertexAttrib3dvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib3f = epoxy_glVertexAttrib3f_dispatch_table_thunk;
    epoxy_glVertexAttrib3fARB = epoxy_glVertexAttrib3fARB_dispatch_table_thunk;
    epoxy_glVertexAttrib3fNV = epoxy_glVertexAttrib3fNV_dispatch_table_thunk;
    epoxy_glVertexAttrib3fv = epoxy_glVertexAttrib3fv_dispatch_table_thunk;
    epoxy_glVertexAttrib3fvARB = epoxy_glVertexAttrib3fvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib3fvNV = epoxy_glVertexAttrib3fvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib3hNV = epoxy_glVertexAttrib3hNV_dispatch_table_thunk;
    epoxy_glVertexAttrib3hvNV = epoxy_glVertexAttrib3hvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib3s = epoxy_glVertexAttrib3s_dispatch_table_thunk;
    epoxy_glVertexAttrib3sARB = epoxy_glVertexAttrib3sARB_dispatch_table_thunk;
    epoxy_glVertexAttrib3sNV = epoxy_glVertexAttrib3sNV_dispatch_table_thunk;
    epoxy_glVertexAttrib3sv = epoxy_glVertexAttrib3sv_dispatch_table_thunk;
    epoxy_glVertexAttrib3svARB = epoxy_glVertexAttrib3svARB_dispatch_table_thunk;
    epoxy_glVertexAttrib3svNV = epoxy_glVertexAttrib3svNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4Nbv = epoxy_glVertexAttrib4Nbv_dispatch_table_thunk;
    epoxy_glVertexAttrib4NbvARB = epoxy_glVertexAttrib4NbvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4Niv = epoxy_glVertexAttrib4Niv_dispatch_table_thunk;
    epoxy_glVertexAttrib4NivARB = epoxy_glVertexAttrib4NivARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4Nsv = epoxy_glVertexAttrib4Nsv_dispatch_table_thunk;
    epoxy_glVertexAttrib4NsvARB = epoxy_glVertexAttrib4NsvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4Nub = epoxy_glVertexAttrib4Nub_dispatch_table_thunk;
    epoxy_glVertexAttrib4NubARB = epoxy_glVertexAttrib4NubARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4Nubv = epoxy_glVertexAttrib4Nubv_dispatch_table_thunk;
    epoxy_glVertexAttrib4NubvARB = epoxy_glVertexAttrib4NubvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4Nuiv = epoxy_glVertexAttrib4Nuiv_dispatch_table_thunk;
    epoxy_glVertexAttrib4NuivARB = epoxy_glVertexAttrib4NuivARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4Nusv = epoxy_glVertexAttrib4Nusv_dispatch_table_thunk;
    epoxy_glVertexAttrib4NusvARB = epoxy_glVertexAttrib4NusvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4bv = epoxy_glVertexAttrib4bv_dispatch_table_thunk;
    epoxy_glVertexAttrib4bvARB = epoxy_glVertexAttrib4bvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4d = epoxy_glVertexAttrib4d_dispatch_table_thunk;
    epoxy_glVertexAttrib4dARB = epoxy_glVertexAttrib4dARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4dNV = epoxy_glVertexAttrib4dNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4dv = epoxy_glVertexAttrib4dv_dispatch_table_thunk;
    epoxy_glVertexAttrib4dvARB = epoxy_glVertexAttrib4dvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4dvNV = epoxy_glVertexAttrib4dvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4f = epoxy_glVertexAttrib4f_dispatch_table_thunk;
    epoxy_glVertexAttrib4fARB = epoxy_glVertexAttrib4fARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4fNV = epoxy_glVertexAttrib4fNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4fv = epoxy_glVertexAttrib4fv_dispatch_table_thunk;
    epoxy_glVertexAttrib4fvARB = epoxy_glVertexAttrib4fvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4fvNV = epoxy_glVertexAttrib4fvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4hNV = epoxy_glVertexAttrib4hNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4hvNV = epoxy_glVertexAttrib4hvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4iv = epoxy_glVertexAttrib4iv_dispatch_table_thunk;
    epoxy_glVertexAttrib4ivARB = epoxy_glVertexAttrib4ivARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4s = epoxy_glVertexAttrib4s_dispatch_table_thunk;
    epoxy_glVertexAttrib4sARB = epoxy_glVertexAttrib4sARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4sNV = epoxy_glVertexAttrib4sNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4sv = epoxy_glVertexAttrib4sv_dispatch_table_thunk;
    epoxy_glVertexAttrib4svARB = epoxy_glVertexAttrib4svARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4svNV = epoxy_glVertexAttrib4svNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4ubNV = epoxy_glVertexAttrib4ubNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4ubv = epoxy_glVertexAttrib4ubv_dispatch_table_thunk;
    epoxy_glVertexAttrib4ubvARB = epoxy_glVertexAttrib4ubvARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4ubvNV = epoxy_glVertexAttrib4ubvNV_dispatch_table_thunk;
    epoxy_glVertexAttrib4uiv = epoxy_glVertexAttrib4uiv_dispatch_table_thunk;
    epoxy_glVertexAttrib4uivARB = epoxy_glVertexAttrib4uivARB_dispatch_table_thunk;
    epoxy_glVertexAttrib4usv = epoxy_glVertexAttrib4usv_dispatch_table_thunk;
    epoxy_glVertexAttrib4usvARB = epoxy_glVertexAttrib4usvARB_dispatch_table_thunk;
    epoxy_glVertexAttribArrayObjectATI = epoxy_glVertexAttribArrayObjectATI_dispatch_table_thunk;
    epoxy_glVertexAttribBinding = epoxy_glVertexAttribBinding_dispatch_table_thunk;
    epoxy_glVertexAttribDivisor = epoxy_glVertexAttribDivisor_dispatch_table_thunk;
    epoxy_glVertexAttribDivisorANGLE = epoxy_glVertexAttribDivisorANGLE_dispatch_table_thunk;
    epoxy_glVertexAttribDivisorARB = epoxy_glVertexAttribDivisorARB_dispatch_table_thunk;
    epoxy_glVertexAttribDivisorEXT = epoxy_glVertexAttribDivisorEXT_dispatch_table_thunk;
    epoxy_glVertexAttribDivisorNV = epoxy_glVertexAttribDivisorNV_dispatch_table_thunk;
    epoxy_glVertexAttribFormat = epoxy_glVertexAttribFormat_dispatch_table_thunk;
    epoxy_glVertexAttribFormatNV = epoxy_glVertexAttribFormatNV_dispatch_table_thunk;
    epoxy_glVertexAttribI1i = epoxy_glVertexAttribI1i_dispatch_table_thunk;
    epoxy_glVertexAttribI1iEXT = epoxy_glVertexAttribI1iEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI1iv = epoxy_glVertexAttribI1iv_dispatch_table_thunk;
    epoxy_glVertexAttribI1ivEXT = epoxy_glVertexAttribI1ivEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI1ui = epoxy_glVertexAttribI1ui_dispatch_table_thunk;
    epoxy_glVertexAttribI1uiEXT = epoxy_glVertexAttribI1uiEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI1uiv = epoxy_glVertexAttribI1uiv_dispatch_table_thunk;
    epoxy_glVertexAttribI1uivEXT = epoxy_glVertexAttribI1uivEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI2i = epoxy_glVertexAttribI2i_dispatch_table_thunk;
    epoxy_glVertexAttribI2iEXT = epoxy_glVertexAttribI2iEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI2iv = epoxy_glVertexAttribI2iv_dispatch_table_thunk;
    epoxy_glVertexAttribI2ivEXT = epoxy_glVertexAttribI2ivEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI2ui = epoxy_glVertexAttribI2ui_dispatch_table_thunk;
    epoxy_glVertexAttribI2uiEXT = epoxy_glVertexAttribI2uiEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI2uiv = epoxy_glVertexAttribI2uiv_dispatch_table_thunk;
    epoxy_glVertexAttribI2uivEXT = epoxy_glVertexAttribI2uivEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI3i = epoxy_glVertexAttribI3i_dispatch_table_thunk;
    epoxy_glVertexAttribI3iEXT = epoxy_glVertexAttribI3iEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI3iv = epoxy_glVertexAttribI3iv_dispatch_table_thunk;
    epoxy_glVertexAttribI3ivEXT = epoxy_glVertexAttribI3ivEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI3ui = epoxy_glVertexAttribI3ui_dispatch_table_thunk;
    epoxy_glVertexAttribI3uiEXT = epoxy_glVertexAttribI3uiEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI3uiv = epoxy_glVertexAttribI3uiv_dispatch_table_thunk;
    epoxy_glVertexAttribI3uivEXT = epoxy_glVertexAttribI3uivEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI4bv = epoxy_glVertexAttribI4bv_dispatch_table_thunk;
    epoxy_glVertexAttribI4bvEXT = epoxy_glVertexAttribI4bvEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI4i = epoxy_glVertexAttribI4i_dispatch_table_thunk;
    epoxy_glVertexAttribI4iEXT = epoxy_glVertexAttribI4iEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI4iv = epoxy_glVertexAttribI4iv_dispatch_table_thunk;
    epoxy_glVertexAttribI4ivEXT = epoxy_glVertexAttribI4ivEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI4sv = epoxy_glVertexAttribI4sv_dispatch_table_thunk;
    epoxy_glVertexAttribI4svEXT = epoxy_glVertexAttribI4svEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI4ubv = epoxy_glVertexAttribI4ubv_dispatch_table_thunk;
    epoxy_glVertexAttribI4ubvEXT = epoxy_glVertexAttribI4ubvEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI4ui = epoxy_glVertexAttribI4ui_dispatch_table_thunk;
    epoxy_glVertexAttribI4uiEXT = epoxy_glVertexAttribI4uiEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI4uiv = epoxy_glVertexAttribI4uiv_dispatch_table_thunk;
    epoxy_glVertexAttribI4uivEXT = epoxy_glVertexAttribI4uivEXT_dispatch_table_thunk;
    epoxy_glVertexAttribI4usv = epoxy_glVertexAttribI4usv_dispatch_table_thunk;
    epoxy_glVertexAttribI4usvEXT = epoxy_glVertexAttribI4usvEXT_dispatch_table_thunk;
    epoxy_glVertexAttribIFormat = epoxy_glVertexAttribIFormat_dispatch_table_thunk;
    epoxy_glVertexAttribIFormatNV = epoxy_glVertexAttribIFormatNV_dispatch_table_thunk;
    epoxy_glVertexAttribIPointer = epoxy_glVertexAttribIPointer_dispatch_table_thunk;
    epoxy_glVertexAttribIPointerEXT = epoxy_glVertexAttribIPointerEXT_dispatch_table_thunk;
    epoxy_glVertexAttribL1d = epoxy_glVertexAttribL1d_dispatch_table_thunk;
    epoxy_glVertexAttribL1dEXT = epoxy_glVertexAttribL1dEXT_dispatch_table_thunk;
    epoxy_glVertexAttribL1dv = epoxy_glVertexAttribL1dv_dispatch_table_thunk;
    epoxy_glVertexAttribL1dvEXT = epoxy_glVertexAttribL1dvEXT_dispatch_table_thunk;
    epoxy_glVertexAttribL1i64NV = epoxy_glVertexAttribL1i64NV_dispatch_table_thunk;
    epoxy_glVertexAttribL1i64vNV = epoxy_glVertexAttribL1i64vNV_dispatch_table_thunk;
    epoxy_glVertexAttribL1ui64ARB = epoxy_glVertexAttribL1ui64ARB_dispatch_table_thunk;
    epoxy_glVertexAttribL1ui64NV = epoxy_glVertexAttribL1ui64NV_dispatch_table_thunk;
    epoxy_glVertexAttribL1ui64vARB = epoxy_glVertexAttribL1ui64vARB_dispatch_table_thunk;
    epoxy_glVertexAttribL1ui64vNV = epoxy_glVertexAttribL1ui64vNV_dispatch_table_thunk;
    epoxy_glVertexAttribL2d = epoxy_glVertexAttribL2d_dispatch_table_thunk;
    epoxy_glVertexAttribL2dEXT = epoxy_glVertexAttribL2dEXT_dispatch_table_thunk;
    epoxy_glVertexAttribL2dv = epoxy_glVertexAttribL2dv_dispatch_table_thunk;
    epoxy_glVertexAttribL2dvEXT = epoxy_glVertexAttribL2dvEXT_dispatch_table_thunk;
    epoxy_glVertexAttribL2i64NV = epoxy_glVertexAttribL2i64NV_dispatch_table_thunk;
    epoxy_glVertexAttribL2i64vNV = epoxy_glVertexAttribL2i64vNV_dispatch_table_thunk;
    epoxy_glVertexAttribL2ui64NV = epoxy_glVertexAttribL2ui64NV_dispatch_table_thunk;
    epoxy_glVertexAttribL2ui64vNV = epoxy_glVertexAttribL2ui64vNV_dispatch_table_thunk;
    epoxy_glVertexAttribL3d = epoxy_glVertexAttribL3d_dispatch_table_thunk;
    epoxy_glVertexAttribL3dEXT = epoxy_glVertexAttribL3dEXT_dispatch_table_thunk;
    epoxy_glVertexAttribL3dv = epoxy_glVertexAttribL3dv_dispatch_table_thunk;
    epoxy_glVertexAttribL3dvEXT = epoxy_glVertexAttribL3dvEXT_dispatch_table_thunk;
    epoxy_glVertexAttribL3i64NV = epoxy_glVertexAttribL3i64NV_dispatch_table_thunk;
    epoxy_glVertexAttribL3i64vNV = epoxy_glVertexAttribL3i64vNV_dispatch_table_thunk;
    epoxy_glVertexAttribL3ui64NV = epoxy_glVertexAttribL3ui64NV_dispatch_table_thunk;
    epoxy_glVertexAttribL3ui64vNV = epoxy_glVertexAttribL3ui64vNV_dispatch_table_thunk;
    epoxy_glVertexAttribL4d = epoxy_glVertexAttribL4d_dispatch_table_thunk;
    epoxy_glVertexAttribL4dEXT = epoxy_glVertexAttribL4dEXT_dispatch_table_thunk;
    epoxy_glVertexAttribL4dv = epoxy_glVertexAttribL4dv_dispatch_table_thunk;
    epoxy_glVertexAttribL4dvEXT = epoxy_glVertexAttribL4dvEXT_dispatch_table_thunk;
    epoxy_glVertexAttribL4i64NV = epoxy_glVertexAttribL4i64NV_dispatch_table_thunk;
    epoxy_glVertexAttribL4i64vNV = epoxy_glVertexAttribL4i64vNV_dispatch_table_thunk;
    epoxy_glVertexAttribL4ui64NV = epoxy_glVertexAttribL4ui64NV_dispatch_table_thunk;
    epoxy_glVertexAttribL4ui64vNV = epoxy_glVertexAttribL4ui64vNV_dispatch_table_thunk;
    epoxy_glVertexAttribLFormat = epoxy_glVertexAttribLFormat_dispatch_table_thunk;
    epoxy_glVertexAttribLFormatNV = epoxy_glVertexAttribLFormatNV_dispatch_table_thunk;
    epoxy_glVertexAttribLPointer = epoxy_glVertexAttribLPointer_dispatch_table_thunk;
    epoxy_glVertexAttribLPointerEXT = epoxy_glVertexAttribLPointerEXT_dispatch_table_thunk;
    epoxy_glVertexAttribP1ui = epoxy_glVertexAttribP1ui_dispatch_table_thunk;
    epoxy_glVertexAttribP1uiv = epoxy_glVertexAttribP1uiv_dispatch_table_thunk;
    epoxy_glVertexAttribP2ui = epoxy_glVertexAttribP2ui_dispatch_table_thunk;
    epoxy_glVertexAttribP2uiv = epoxy_glVertexAttribP2uiv_dispatch_table_thunk;
    epoxy_glVertexAttribP3ui = epoxy_glVertexAttribP3ui_dispatch_table_thunk;
    epoxy_glVertexAttribP3uiv = epoxy_glVertexAttribP3uiv_dispatch_table_thunk;
    epoxy_glVertexAttribP4ui = epoxy_glVertexAttribP4ui_dispatch_table_thunk;
    epoxy_glVertexAttribP4uiv = epoxy_glVertexAttribP4uiv_dispatch_table_thunk;
    epoxy_glVertexAttribParameteriAMD = epoxy_glVertexAttribParameteriAMD_dispatch_table_thunk;
    epoxy_glVertexAttribPointer = epoxy_glVertexAttribPointer_dispatch_table_thunk;
    epoxy_glVertexAttribPointerARB = epoxy_glVertexAttribPointerARB_dispatch_table_thunk;
    epoxy_glVertexAttribPointerNV = epoxy_glVertexAttribPointerNV_dispatch_table_thunk;
    epoxy_glVertexAttribs1dvNV = epoxy_glVertexAttribs1dvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs1fvNV = epoxy_glVertexAttribs1fvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs1hvNV = epoxy_glVertexAttribs1hvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs1svNV = epoxy_glVertexAttribs1svNV_dispatch_table_thunk;
    epoxy_glVertexAttribs2dvNV = epoxy_glVertexAttribs2dvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs2fvNV = epoxy_glVertexAttribs2fvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs2hvNV = epoxy_glVertexAttribs2hvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs2svNV = epoxy_glVertexAttribs2svNV_dispatch_table_thunk;
    epoxy_glVertexAttribs3dvNV = epoxy_glVertexAttribs3dvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs3fvNV = epoxy_glVertexAttribs3fvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs3hvNV = epoxy_glVertexAttribs3hvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs3svNV = epoxy_glVertexAttribs3svNV_dispatch_table_thunk;
    epoxy_glVertexAttribs4dvNV = epoxy_glVertexAttribs4dvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs4fvNV = epoxy_glVertexAttribs4fvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs4hvNV = epoxy_glVertexAttribs4hvNV_dispatch_table_thunk;
    epoxy_glVertexAttribs4svNV = epoxy_glVertexAttribs4svNV_dispatch_table_thunk;
    epoxy_glVertexAttribs4ubvNV = epoxy_glVertexAttribs4ubvNV_dispatch_table_thunk;
    epoxy_glVertexBindingDivisor = epoxy_glVertexBindingDivisor_dispatch_table_thunk;
    epoxy_glVertexBlendARB = epoxy_glVertexBlendARB_dispatch_table_thunk;
    epoxy_glVertexBlendEnvfATI = epoxy_glVertexBlendEnvfATI_dispatch_table_thunk;
    epoxy_glVertexBlendEnviATI = epoxy_glVertexBlendEnviATI_dispatch_table_thunk;
    epoxy_glVertexFormatNV = epoxy_glVertexFormatNV_dispatch_table_thunk;
    epoxy_glVertexP2ui = epoxy_glVertexP2ui_dispatch_table_thunk;
    epoxy_glVertexP2uiv = epoxy_glVertexP2uiv_dispatch_table_thunk;
    epoxy_glVertexP3ui = epoxy_glVertexP3ui_dispatch_table_thunk;
    epoxy_glVertexP3uiv = epoxy_glVertexP3uiv_dispatch_table_thunk;
    epoxy_glVertexP4ui = epoxy_glVertexP4ui_dispatch_table_thunk;
    epoxy_glVertexP4uiv = epoxy_glVertexP4uiv_dispatch_table_thunk;
    epoxy_glVertexPointer = epoxy_glVertexPointer_dispatch_table_thunk;
    epoxy_glVertexPointerEXT = epoxy_glVertexPointerEXT_dispatch_table_thunk;
    epoxy_glVertexPointerListIBM = epoxy_glVertexPointerListIBM_dispatch_table_thunk;
    epoxy_glVertexPointervINTEL = epoxy_glVertexPointervINTEL_dispatch_table_thunk;
    epoxy_glVertexStream1dATI = epoxy_glVertexStream1dATI_dispatch_table_thunk;
    epoxy_glVertexStream1dvATI = epoxy_glVertexStream1dvATI_dispatch_table_thunk;
    epoxy_glVertexStream1fATI = epoxy_glVertexStream1fATI_dispatch_table_thunk;
    epoxy_glVertexStream1fvATI = epoxy_glVertexStream1fvATI_dispatch_table_thunk;
    epoxy_glVertexStream1iATI = epoxy_glVertexStream1iATI_dispatch_table_thunk;
    epoxy_glVertexStream1ivATI = epoxy_glVertexStream1ivATI_dispatch_table_thunk;
    epoxy_glVertexStream1sATI = epoxy_glVertexStream1sATI_dispatch_table_thunk;
    epoxy_glVertexStream1svATI = epoxy_glVertexStream1svATI_dispatch_table_thunk;
    epoxy_glVertexStream2dATI = epoxy_glVertexStream2dATI_dispatch_table_thunk;
    epoxy_glVertexStream2dvATI = epoxy_glVertexStream2dvATI_dispatch_table_thunk;
    epoxy_glVertexStream2fATI = epoxy_glVertexStream2fATI_dispatch_table_thunk;
    epoxy_glVertexStream2fvATI = epoxy_glVertexStream2fvATI_dispatch_table_thunk;
    epoxy_glVertexStream2iATI = epoxy_glVertexStream2iATI_dispatch_table_thunk;
    epoxy_glVertexStream2ivATI = epoxy_glVertexStream2ivATI_dispatch_table_thunk;
    epoxy_glVertexStream2sATI = epoxy_glVertexStream2sATI_dispatch_table_thunk;
    epoxy_glVertexStream2svATI = epoxy_glVertexStream2svATI_dispatch_table_thunk;
    epoxy_glVertexStream3dATI = epoxy_glVertexStream3dATI_dispatch_table_thunk;
    epoxy_glVertexStream3dvATI = epoxy_glVertexStream3dvATI_dispatch_table_thunk;
    epoxy_glVertexStream3fATI = epoxy_glVertexStream3fATI_dispatch_table_thunk;
    epoxy_glVertexStream3fvATI = epoxy_glVertexStream3fvATI_dispatch_table_thunk;
    epoxy_glVertexStream3iATI = epoxy_glVertexStream3iATI_dispatch_table_thunk;
    epoxy_glVertexStream3ivATI = epoxy_glVertexStream3ivATI_dispatch_table_thunk;
    epoxy_glVertexStream3sATI = epoxy_glVertexStream3sATI_dispatch_table_thunk;
    epoxy_glVertexStream3svATI = epoxy_glVertexStream3svATI_dispatch_table_thunk;
    epoxy_glVertexStream4dATI = epoxy_glVertexStream4dATI_dispatch_table_thunk;
    epoxy_glVertexStream4dvATI = epoxy_glVertexStream4dvATI_dispatch_table_thunk;
    epoxy_glVertexStream4fATI = epoxy_glVertexStream4fATI_dispatch_table_thunk;
    epoxy_glVertexStream4fvATI = epoxy_glVertexStream4fvATI_dispatch_table_thunk;
    epoxy_glVertexStream4iATI = epoxy_glVertexStream4iATI_dispatch_table_thunk;
    epoxy_glVertexStream4ivATI = epoxy_glVertexStream4ivATI_dispatch_table_thunk;
    epoxy_glVertexStream4sATI = epoxy_glVertexStream4sATI_dispatch_table_thunk;
    epoxy_glVertexStream4svATI = epoxy_glVertexStream4svATI_dispatch_table_thunk;
    epoxy_glVertexWeightPointerEXT = epoxy_glVertexWeightPointerEXT_dispatch_table_thunk;
    epoxy_glVertexWeightfEXT = epoxy_glVertexWeightfEXT_dispatch_table_thunk;
    epoxy_glVertexWeightfvEXT = epoxy_glVertexWeightfvEXT_dispatch_table_thunk;
    epoxy_glVertexWeighthNV = epoxy_glVertexWeighthNV_dispatch_table_thunk;
    epoxy_glVertexWeighthvNV = epoxy_glVertexWeighthvNV_dispatch_table_thunk;
    epoxy_glVideoCaptureNV = epoxy_glVideoCaptureNV_dispatch_table_thunk;
    epoxy_glVideoCaptureStreamParameterdvNV = epoxy_glVideoCaptureStreamParameterdvNV_dispatch_table_thunk;
    epoxy_glVideoCaptureStreamParameterfvNV = epoxy_glVideoCaptureStreamParameterfvNV_dispatch_table_thunk;
    epoxy_glVideoCaptureStreamParameterivNV = epoxy_glVideoCaptureStreamParameterivNV_dispatch_table_thunk;
    epoxy_glViewport = epoxy_glViewport_dispatch_table_thunk;
    epoxy_glViewportArrayv = epoxy_glViewportArrayv_dispatch_table_thunk;
    epoxy_glViewportArrayvNV = epoxy_glViewportArrayvNV_dispatch_table_thunk;
    epoxy_glViewportIndexedf = epoxy_glViewportIndexedf_dispatch_table_thunk;
    epoxy_glViewportIndexedfNV = epoxy_glViewportIndexedfNV_dispatch_table_thunk;
    epoxy_glViewportIndexedfv = epoxy_glViewportIndexedfv_dispatch_table_thunk;
    epoxy_glViewportIndexedfvNV = epoxy_glViewportIndexedfvNV_dispatch_table_thunk;
    epoxy_glWaitSync = epoxy_glWaitSync_dispatch_table_thunk;
    epoxy_glWaitSyncAPPLE = epoxy_glWaitSyncAPPLE_dispatch_table_thunk;
    epoxy_glWeightPathsNV = epoxy_glWeightPathsNV_dispatch_table_thunk;
    epoxy_glWeightPointerARB = epoxy_glWeightPointerARB_dispatch_table_thunk;
    epoxy_glWeightPointerOES = epoxy_glWeightPointerOES_dispatch_table_thunk;
    epoxy_glWeightbvARB = epoxy_glWeightbvARB_dispatch_table_thunk;
    epoxy_glWeightdvARB = epoxy_glWeightdvARB_dispatch_table_thunk;
    epoxy_glWeightfvARB = epoxy_glWeightfvARB_dispatch_table_thunk;
    epoxy_glWeightivARB = epoxy_glWeightivARB_dispatch_table_thunk;
    epoxy_glWeightsvARB = epoxy_glWeightsvARB_dispatch_table_thunk;
    epoxy_glWeightubvARB = epoxy_glWeightubvARB_dispatch_table_thunk;
    epoxy_glWeightuivARB = epoxy_glWeightuivARB_dispatch_table_thunk;
    epoxy_glWeightusvARB = epoxy_glWeightusvARB_dispatch_table_thunk;
    epoxy_glWindowPos2d = epoxy_glWindowPos2d_dispatch_table_thunk;
    epoxy_glWindowPos2dARB = epoxy_glWindowPos2dARB_dispatch_table_thunk;
    epoxy_glWindowPos2dMESA = epoxy_glWindowPos2dMESA_dispatch_table_thunk;
    epoxy_glWindowPos2dv = epoxy_glWindowPos2dv_dispatch_table_thunk;
    epoxy_glWindowPos2dvARB = epoxy_glWindowPos2dvARB_dispatch_table_thunk;
    epoxy_glWindowPos2dvMESA = epoxy_glWindowPos2dvMESA_dispatch_table_thunk;
    epoxy_glWindowPos2f = epoxy_glWindowPos2f_dispatch_table_thunk;
    epoxy_glWindowPos2fARB = epoxy_glWindowPos2fARB_dispatch_table_thunk;
    epoxy_glWindowPos2fMESA = epoxy_glWindowPos2fMESA_dispatch_table_thunk;
    epoxy_glWindowPos2fv = epoxy_glWindowPos2fv_dispatch_table_thunk;
    epoxy_glWindowPos2fvARB = epoxy_glWindowPos2fvARB_dispatch_table_thunk;
    epoxy_glWindowPos2fvMESA = epoxy_glWindowPos2fvMESA_dispatch_table_thunk;
    epoxy_glWindowPos2i = epoxy_glWindowPos2i_dispatch_table_thunk;
    epoxy_glWindowPos2iARB = epoxy_glWindowPos2iARB_dispatch_table_thunk;
    epoxy_glWindowPos2iMESA = epoxy_glWindowPos2iMESA_dispatch_table_thunk;
    epoxy_glWindowPos2iv = epoxy_glWindowPos2iv_dispatch_table_thunk;
    epoxy_glWindowPos2ivARB = epoxy_glWindowPos2ivARB_dispatch_table_thunk;
    epoxy_glWindowPos2ivMESA = epoxy_glWindowPos2ivMESA_dispatch_table_thunk;
    epoxy_glWindowPos2s = epoxy_glWindowPos2s_dispatch_table_thunk;
    epoxy_glWindowPos2sARB = epoxy_glWindowPos2sARB_dispatch_table_thunk;
    epoxy_glWindowPos2sMESA = epoxy_glWindowPos2sMESA_dispatch_table_thunk;
    epoxy_glWindowPos2sv = epoxy_glWindowPos2sv_dispatch_table_thunk;
    epoxy_glWindowPos2svARB = epoxy_glWindowPos2svARB_dispatch_table_thunk;
    epoxy_glWindowPos2svMESA = epoxy_glWindowPos2svMESA_dispatch_table_thunk;
    epoxy_glWindowPos3d = epoxy_glWindowPos3d_dispatch_table_thunk;
    epoxy_glWindowPos3dARB = epoxy_glWindowPos3dARB_dispatch_table_thunk;
    epoxy_glWindowPos3dMESA = epoxy_glWindowPos3dMESA_dispatch_table_thunk;
    epoxy_glWindowPos3dv = epoxy_glWindowPos3dv_dispatch_table_thunk;
    epoxy_glWindowPos3dvARB = epoxy_glWindowPos3dvARB_dispatch_table_thunk;
    epoxy_glWindowPos3dvMESA = epoxy_glWindowPos3dvMESA_dispatch_table_thunk;
    epoxy_glWindowPos3f = epoxy_glWindowPos3f_dispatch_table_thunk;
    epoxy_glWindowPos3fARB = epoxy_glWindowPos3fARB_dispatch_table_thunk;
    epoxy_glWindowPos3fMESA = epoxy_glWindowPos3fMESA_dispatch_table_thunk;
    epoxy_glWindowPos3fv = epoxy_glWindowPos3fv_dispatch_table_thunk;
    epoxy_glWindowPos3fvARB = epoxy_glWindowPos3fvARB_dispatch_table_thunk;
    epoxy_glWindowPos3fvMESA = epoxy_glWindowPos3fvMESA_dispatch_table_thunk;
    epoxy_glWindowPos3i = epoxy_glWindowPos3i_dispatch_table_thunk;
    epoxy_glWindowPos3iARB = epoxy_glWindowPos3iARB_dispatch_table_thunk;
    epoxy_glWindowPos3iMESA = epoxy_glWindowPos3iMESA_dispatch_table_thunk;
    epoxy_glWindowPos3iv = epoxy_glWindowPos3iv_dispatch_table_thunk;
    epoxy_glWindowPos3ivARB = epoxy_glWindowPos3ivARB_dispatch_table_thunk;
    epoxy_glWindowPos3ivMESA = epoxy_glWindowPos3ivMESA_dispatch_table_thunk;
    epoxy_glWindowPos3s = epoxy_glWindowPos3s_dispatch_table_thunk;
    epoxy_glWindowPos3sARB = epoxy_glWindowPos3sARB_dispatch_table_thunk;
    epoxy_glWindowPos3sMESA = epoxy_glWindowPos3sMESA_dispatch_table_thunk;
    epoxy_glWindowPos3sv = epoxy_glWindowPos3sv_dispatch_table_thunk;
    epoxy_glWindowPos3svARB = epoxy_glWindowPos3svARB_dispatch_table_thunk;
    epoxy_glWindowPos3svMESA = epoxy_glWindowPos3svMESA_dispatch_table_thunk;
    epoxy_glWindowPos4dMESA = epoxy_glWindowPos4dMESA_dispatch_table_thunk;
    epoxy_glWindowPos4dvMESA = epoxy_glWindowPos4dvMESA_dispatch_table_thunk;
    epoxy_glWindowPos4fMESA = epoxy_glWindowPos4fMESA_dispatch_table_thunk;
    epoxy_glWindowPos4fvMESA = epoxy_glWindowPos4fvMESA_dispatch_table_thunk;
    epoxy_glWindowPos4iMESA = epoxy_glWindowPos4iMESA_dispatch_table_thunk;
    epoxy_glWindowPos4ivMESA = epoxy_glWindowPos4ivMESA_dispatch_table_thunk;
    epoxy_glWindowPos4sMESA = epoxy_glWindowPos4sMESA_dispatch_table_thunk;
    epoxy_glWindowPos4svMESA = epoxy_glWindowPos4svMESA_dispatch_table_thunk;
    epoxy_glWriteMaskEXT = epoxy_glWriteMaskEXT_dispatch_table_thunk;
}

#endif /* !USING_DISPATCH_TABLE */
PUBLIC PFNGLACCUMPROC epoxy_glAccum = epoxy_glAccum_global_rewrite_ptr;

PUBLIC PFNGLACCUMXOESPROC epoxy_glAccumxOES = epoxy_glAccumxOES_global_rewrite_ptr;

PUBLIC PFNGLACTIVEPROGRAMEXTPROC epoxy_glActiveProgramEXT = epoxy_glActiveProgramEXT_global_rewrite_ptr;

PUBLIC PFNGLACTIVESHADERPROGRAMPROC epoxy_glActiveShaderProgram = epoxy_glActiveShaderProgram_global_rewrite_ptr;

PUBLIC PFNGLACTIVESHADERPROGRAMEXTPROC epoxy_glActiveShaderProgramEXT = epoxy_glActiveShaderProgramEXT_global_rewrite_ptr;

PUBLIC PFNGLACTIVESTENCILFACEEXTPROC epoxy_glActiveStencilFaceEXT = epoxy_glActiveStencilFaceEXT_global_rewrite_ptr;

PUBLIC PFNGLACTIVETEXTUREPROC epoxy_glActiveTexture = epoxy_glActiveTexture_global_rewrite_ptr;

PUBLIC PFNGLACTIVETEXTUREARBPROC epoxy_glActiveTextureARB = epoxy_glActiveTextureARB_global_rewrite_ptr;

PUBLIC PFNGLACTIVEVARYINGNVPROC epoxy_glActiveVaryingNV = epoxy_glActiveVaryingNV_global_rewrite_ptr;

PUBLIC PFNGLALPHAFRAGMENTOP1ATIPROC epoxy_glAlphaFragmentOp1ATI = epoxy_glAlphaFragmentOp1ATI_global_rewrite_ptr;

PUBLIC PFNGLALPHAFRAGMENTOP2ATIPROC epoxy_glAlphaFragmentOp2ATI = epoxy_glAlphaFragmentOp2ATI_global_rewrite_ptr;

PUBLIC PFNGLALPHAFRAGMENTOP3ATIPROC epoxy_glAlphaFragmentOp3ATI = epoxy_glAlphaFragmentOp3ATI_global_rewrite_ptr;

PUBLIC PFNGLALPHAFUNCPROC epoxy_glAlphaFunc = epoxy_glAlphaFunc_global_rewrite_ptr;

PUBLIC PFNGLALPHAFUNCQCOMPROC epoxy_glAlphaFuncQCOM = epoxy_glAlphaFuncQCOM_global_rewrite_ptr;

PUBLIC PFNGLALPHAFUNCXPROC epoxy_glAlphaFuncx = epoxy_glAlphaFuncx_global_rewrite_ptr;

PUBLIC PFNGLALPHAFUNCXOESPROC epoxy_glAlphaFuncxOES = epoxy_glAlphaFuncxOES_global_rewrite_ptr;

PUBLIC PFNGLAPPLYTEXTUREEXTPROC epoxy_glApplyTextureEXT = epoxy_glApplyTextureEXT_global_rewrite_ptr;

PUBLIC PFNGLAREPROGRAMSRESIDENTNVPROC epoxy_glAreProgramsResidentNV = epoxy_glAreProgramsResidentNV_global_rewrite_ptr;

PUBLIC PFNGLARETEXTURESRESIDENTPROC epoxy_glAreTexturesResident = epoxy_glAreTexturesResident_global_rewrite_ptr;

PUBLIC PFNGLARETEXTURESRESIDENTEXTPROC epoxy_glAreTexturesResidentEXT = epoxy_glAreTexturesResidentEXT_global_rewrite_ptr;

PUBLIC PFNGLARRAYELEMENTPROC epoxy_glArrayElement = epoxy_glArrayElement_global_rewrite_ptr;

PUBLIC PFNGLARRAYELEMENTEXTPROC epoxy_glArrayElementEXT = epoxy_glArrayElementEXT_global_rewrite_ptr;

PUBLIC PFNGLARRAYOBJECTATIPROC epoxy_glArrayObjectATI = epoxy_glArrayObjectATI_global_rewrite_ptr;

PUBLIC PFNGLASYNCMARKERSGIXPROC epoxy_glAsyncMarkerSGIX = epoxy_glAsyncMarkerSGIX_global_rewrite_ptr;

PUBLIC PFNGLATTACHOBJECTARBPROC epoxy_glAttachObjectARB = epoxy_glAttachObjectARB_global_rewrite_ptr;

PUBLIC PFNGLATTACHSHADERPROC epoxy_glAttachShader = epoxy_glAttachShader_global_rewrite_ptr;

PFNGLBEGINPROC epoxy_glBegin_unwrapped = epoxy_glBegin_unwrapped_global_rewrite_ptr;

PUBLIC PFNGLBEGINCONDITIONALRENDERPROC epoxy_glBeginConditionalRender = epoxy_glBeginConditionalRender_global_rewrite_ptr;

PUBLIC PFNGLBEGINCONDITIONALRENDERNVPROC epoxy_glBeginConditionalRenderNV = epoxy_glBeginConditionalRenderNV_global_rewrite_ptr;

PUBLIC PFNGLBEGINCONDITIONALRENDERNVXPROC epoxy_glBeginConditionalRenderNVX = epoxy_glBeginConditionalRenderNVX_global_rewrite_ptr;

PUBLIC PFNGLBEGINFRAGMENTSHADERATIPROC epoxy_glBeginFragmentShaderATI = epoxy_glBeginFragmentShaderATI_global_rewrite_ptr;

PUBLIC PFNGLBEGINOCCLUSIONQUERYNVPROC epoxy_glBeginOcclusionQueryNV = epoxy_glBeginOcclusionQueryNV_global_rewrite_ptr;

PUBLIC PFNGLBEGINPERFMONITORAMDPROC epoxy_glBeginPerfMonitorAMD = epoxy_glBeginPerfMonitorAMD_global_rewrite_ptr;

PUBLIC PFNGLBEGINPERFQUERYINTELPROC epoxy_glBeginPerfQueryINTEL = epoxy_glBeginPerfQueryINTEL_global_rewrite_ptr;

PUBLIC PFNGLBEGINQUERYPROC epoxy_glBeginQuery = epoxy_glBeginQuery_global_rewrite_ptr;

PUBLIC PFNGLBEGINQUERYARBPROC epoxy_glBeginQueryARB = epoxy_glBeginQueryARB_global_rewrite_ptr;

PUBLIC PFNGLBEGINQUERYEXTPROC epoxy_glBeginQueryEXT = epoxy_glBeginQueryEXT_global_rewrite_ptr;

PUBLIC PFNGLBEGINQUERYINDEXEDPROC epoxy_glBeginQueryIndexed = epoxy_glBeginQueryIndexed_global_rewrite_ptr;

PUBLIC PFNGLBEGINTRANSFORMFEEDBACKPROC epoxy_glBeginTransformFeedback = epoxy_glBeginTransformFeedback_global_rewrite_ptr;

PUBLIC PFNGLBEGINTRANSFORMFEEDBACKEXTPROC epoxy_glBeginTransformFeedbackEXT = epoxy_glBeginTransformFeedbackEXT_global_rewrite_ptr;

PUBLIC PFNGLBEGINTRANSFORMFEEDBACKNVPROC epoxy_glBeginTransformFeedbackNV = epoxy_glBeginTransformFeedbackNV_global_rewrite_ptr;

PUBLIC PFNGLBEGINVERTEXSHADEREXTPROC epoxy_glBeginVertexShaderEXT = epoxy_glBeginVertexShaderEXT_global_rewrite_ptr;

PUBLIC PFNGLBEGINVIDEOCAPTURENVPROC epoxy_glBeginVideoCaptureNV = epoxy_glBeginVideoCaptureNV_global_rewrite_ptr;

PUBLIC PFNGLBINDATTRIBLOCATIONPROC epoxy_glBindAttribLocation = epoxy_glBindAttribLocation_global_rewrite_ptr;

PUBLIC PFNGLBINDATTRIBLOCATIONARBPROC epoxy_glBindAttribLocationARB = epoxy_glBindAttribLocationARB_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERPROC epoxy_glBindBuffer = epoxy_glBindBuffer_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERARBPROC epoxy_glBindBufferARB = epoxy_glBindBufferARB_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERBASEPROC epoxy_glBindBufferBase = epoxy_glBindBufferBase_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERBASEEXTPROC epoxy_glBindBufferBaseEXT = epoxy_glBindBufferBaseEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERBASENVPROC epoxy_glBindBufferBaseNV = epoxy_glBindBufferBaseNV_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFEROFFSETEXTPROC epoxy_glBindBufferOffsetEXT = epoxy_glBindBufferOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFEROFFSETNVPROC epoxy_glBindBufferOffsetNV = epoxy_glBindBufferOffsetNV_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERRANGEPROC epoxy_glBindBufferRange = epoxy_glBindBufferRange_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERRANGEEXTPROC epoxy_glBindBufferRangeEXT = epoxy_glBindBufferRangeEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERRANGENVPROC epoxy_glBindBufferRangeNV = epoxy_glBindBufferRangeNV_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERSBASEPROC epoxy_glBindBuffersBase = epoxy_glBindBuffersBase_global_rewrite_ptr;

PUBLIC PFNGLBINDBUFFERSRANGEPROC epoxy_glBindBuffersRange = epoxy_glBindBuffersRange_global_rewrite_ptr;

PUBLIC PFNGLBINDFRAGDATALOCATIONPROC epoxy_glBindFragDataLocation = epoxy_glBindFragDataLocation_global_rewrite_ptr;

PUBLIC PFNGLBINDFRAGDATALOCATIONEXTPROC epoxy_glBindFragDataLocationEXT = epoxy_glBindFragDataLocationEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDFRAGDATALOCATIONINDEXEDPROC epoxy_glBindFragDataLocationIndexed = epoxy_glBindFragDataLocationIndexed_global_rewrite_ptr;

PUBLIC PFNGLBINDFRAGMENTSHADERATIPROC epoxy_glBindFragmentShaderATI = epoxy_glBindFragmentShaderATI_global_rewrite_ptr;

PUBLIC PFNGLBINDFRAMEBUFFERPROC epoxy_glBindFramebuffer = epoxy_glBindFramebuffer_global_rewrite_ptr;

PUBLIC PFNGLBINDFRAMEBUFFEREXTPROC epoxy_glBindFramebufferEXT = epoxy_glBindFramebufferEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDFRAMEBUFFEROESPROC epoxy_glBindFramebufferOES = epoxy_glBindFramebufferOES_global_rewrite_ptr;

PUBLIC PFNGLBINDIMAGETEXTUREPROC epoxy_glBindImageTexture = epoxy_glBindImageTexture_global_rewrite_ptr;

PUBLIC PFNGLBINDIMAGETEXTUREEXTPROC epoxy_glBindImageTextureEXT = epoxy_glBindImageTextureEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDIMAGETEXTURESPROC epoxy_glBindImageTextures = epoxy_glBindImageTextures_global_rewrite_ptr;

PUBLIC PFNGLBINDLIGHTPARAMETEREXTPROC epoxy_glBindLightParameterEXT = epoxy_glBindLightParameterEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDMATERIALPARAMETEREXTPROC epoxy_glBindMaterialParameterEXT = epoxy_glBindMaterialParameterEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDMULTITEXTUREEXTPROC epoxy_glBindMultiTextureEXT = epoxy_glBindMultiTextureEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDPARAMETEREXTPROC epoxy_glBindParameterEXT = epoxy_glBindParameterEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDPROGRAMARBPROC epoxy_glBindProgramARB = epoxy_glBindProgramARB_global_rewrite_ptr;

PUBLIC PFNGLBINDPROGRAMNVPROC epoxy_glBindProgramNV = epoxy_glBindProgramNV_global_rewrite_ptr;

PUBLIC PFNGLBINDPROGRAMPIPELINEPROC epoxy_glBindProgramPipeline = epoxy_glBindProgramPipeline_global_rewrite_ptr;

PUBLIC PFNGLBINDPROGRAMPIPELINEEXTPROC epoxy_glBindProgramPipelineEXT = epoxy_glBindProgramPipelineEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDRENDERBUFFERPROC epoxy_glBindRenderbuffer = epoxy_glBindRenderbuffer_global_rewrite_ptr;

PUBLIC PFNGLBINDRENDERBUFFEREXTPROC epoxy_glBindRenderbufferEXT = epoxy_glBindRenderbufferEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDRENDERBUFFEROESPROC epoxy_glBindRenderbufferOES = epoxy_glBindRenderbufferOES_global_rewrite_ptr;

PUBLIC PFNGLBINDSAMPLERPROC epoxy_glBindSampler = epoxy_glBindSampler_global_rewrite_ptr;

PUBLIC PFNGLBINDSAMPLERSPROC epoxy_glBindSamplers = epoxy_glBindSamplers_global_rewrite_ptr;

PUBLIC PFNGLBINDTEXGENPARAMETEREXTPROC epoxy_glBindTexGenParameterEXT = epoxy_glBindTexGenParameterEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDTEXTUREPROC epoxy_glBindTexture = epoxy_glBindTexture_global_rewrite_ptr;

PUBLIC PFNGLBINDTEXTUREEXTPROC epoxy_glBindTextureEXT = epoxy_glBindTextureEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDTEXTUREUNITPROC epoxy_glBindTextureUnit = epoxy_glBindTextureUnit_global_rewrite_ptr;

PUBLIC PFNGLBINDTEXTUREUNITPARAMETEREXTPROC epoxy_glBindTextureUnitParameterEXT = epoxy_glBindTextureUnitParameterEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDTEXTURESPROC epoxy_glBindTextures = epoxy_glBindTextures_global_rewrite_ptr;

PUBLIC PFNGLBINDTRANSFORMFEEDBACKPROC epoxy_glBindTransformFeedback = epoxy_glBindTransformFeedback_global_rewrite_ptr;

PUBLIC PFNGLBINDTRANSFORMFEEDBACKNVPROC epoxy_glBindTransformFeedbackNV = epoxy_glBindTransformFeedbackNV_global_rewrite_ptr;

PUBLIC PFNGLBINDVERTEXARRAYPROC epoxy_glBindVertexArray = epoxy_glBindVertexArray_global_rewrite_ptr;

PUBLIC PFNGLBINDVERTEXARRAYAPPLEPROC epoxy_glBindVertexArrayAPPLE = epoxy_glBindVertexArrayAPPLE_global_rewrite_ptr;

PUBLIC PFNGLBINDVERTEXARRAYOESPROC epoxy_glBindVertexArrayOES = epoxy_glBindVertexArrayOES_global_rewrite_ptr;

PUBLIC PFNGLBINDVERTEXBUFFERPROC epoxy_glBindVertexBuffer = epoxy_glBindVertexBuffer_global_rewrite_ptr;

PUBLIC PFNGLBINDVERTEXBUFFERSPROC epoxy_glBindVertexBuffers = epoxy_glBindVertexBuffers_global_rewrite_ptr;

PUBLIC PFNGLBINDVERTEXSHADEREXTPROC epoxy_glBindVertexShaderEXT = epoxy_glBindVertexShaderEXT_global_rewrite_ptr;

PUBLIC PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC epoxy_glBindVideoCaptureStreamBufferNV = epoxy_glBindVideoCaptureStreamBufferNV_global_rewrite_ptr;

PUBLIC PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC epoxy_glBindVideoCaptureStreamTextureNV = epoxy_glBindVideoCaptureStreamTextureNV_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3BEXTPROC epoxy_glBinormal3bEXT = epoxy_glBinormal3bEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3BVEXTPROC epoxy_glBinormal3bvEXT = epoxy_glBinormal3bvEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3DEXTPROC epoxy_glBinormal3dEXT = epoxy_glBinormal3dEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3DVEXTPROC epoxy_glBinormal3dvEXT = epoxy_glBinormal3dvEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3FEXTPROC epoxy_glBinormal3fEXT = epoxy_glBinormal3fEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3FVEXTPROC epoxy_glBinormal3fvEXT = epoxy_glBinormal3fvEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3IEXTPROC epoxy_glBinormal3iEXT = epoxy_glBinormal3iEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3IVEXTPROC epoxy_glBinormal3ivEXT = epoxy_glBinormal3ivEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3SEXTPROC epoxy_glBinormal3sEXT = epoxy_glBinormal3sEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMAL3SVEXTPROC epoxy_glBinormal3svEXT = epoxy_glBinormal3svEXT_global_rewrite_ptr;

PUBLIC PFNGLBINORMALPOINTEREXTPROC epoxy_glBinormalPointerEXT = epoxy_glBinormalPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLBITMAPPROC epoxy_glBitmap = epoxy_glBitmap_global_rewrite_ptr;

PUBLIC PFNGLBITMAPXOESPROC epoxy_glBitmapxOES = epoxy_glBitmapxOES_global_rewrite_ptr;

PUBLIC PFNGLBLENDBARRIERKHRPROC epoxy_glBlendBarrierKHR = epoxy_glBlendBarrierKHR_global_rewrite_ptr;

PUBLIC PFNGLBLENDBARRIERNVPROC epoxy_glBlendBarrierNV = epoxy_glBlendBarrierNV_global_rewrite_ptr;

PUBLIC PFNGLBLENDCOLORPROC epoxy_glBlendColor = epoxy_glBlendColor_global_rewrite_ptr;

PUBLIC PFNGLBLENDCOLOREXTPROC epoxy_glBlendColorEXT = epoxy_glBlendColorEXT_global_rewrite_ptr;

PUBLIC PFNGLBLENDCOLORXOESPROC epoxy_glBlendColorxOES = epoxy_glBlendColorxOES_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONPROC epoxy_glBlendEquation = epoxy_glBlendEquation_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONEXTPROC epoxy_glBlendEquationEXT = epoxy_glBlendEquationEXT_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONINDEXEDAMDPROC epoxy_glBlendEquationIndexedAMD = epoxy_glBlendEquationIndexedAMD_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONOESPROC epoxy_glBlendEquationOES = epoxy_glBlendEquationOES_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONSEPARATEPROC epoxy_glBlendEquationSeparate = epoxy_glBlendEquationSeparate_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONSEPARATEEXTPROC epoxy_glBlendEquationSeparateEXT = epoxy_glBlendEquationSeparateEXT_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC epoxy_glBlendEquationSeparateIndexedAMD = epoxy_glBlendEquationSeparateIndexedAMD_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONSEPARATEOESPROC epoxy_glBlendEquationSeparateOES = epoxy_glBlendEquationSeparateOES_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONSEPARATEIPROC epoxy_glBlendEquationSeparatei = epoxy_glBlendEquationSeparatei_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONSEPARATEIARBPROC epoxy_glBlendEquationSeparateiARB = epoxy_glBlendEquationSeparateiARB_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONSEPARATEIEXTPROC epoxy_glBlendEquationSeparateiEXT = epoxy_glBlendEquationSeparateiEXT_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONSEPARATEIOESPROC epoxy_glBlendEquationSeparateiOES = epoxy_glBlendEquationSeparateiOES_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONIPROC epoxy_glBlendEquationi = epoxy_glBlendEquationi_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONIARBPROC epoxy_glBlendEquationiARB = epoxy_glBlendEquationiARB_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONIEXTPROC epoxy_glBlendEquationiEXT = epoxy_glBlendEquationiEXT_global_rewrite_ptr;

PUBLIC PFNGLBLENDEQUATIONIOESPROC epoxy_glBlendEquationiOES = epoxy_glBlendEquationiOES_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCPROC epoxy_glBlendFunc = epoxy_glBlendFunc_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCINDEXEDAMDPROC epoxy_glBlendFuncIndexedAMD = epoxy_glBlendFuncIndexedAMD_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCSEPARATEPROC epoxy_glBlendFuncSeparate = epoxy_glBlendFuncSeparate_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCSEPARATEEXTPROC epoxy_glBlendFuncSeparateEXT = epoxy_glBlendFuncSeparateEXT_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCSEPARATEINGRPROC epoxy_glBlendFuncSeparateINGR = epoxy_glBlendFuncSeparateINGR_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC epoxy_glBlendFuncSeparateIndexedAMD = epoxy_glBlendFuncSeparateIndexedAMD_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCSEPARATEOESPROC epoxy_glBlendFuncSeparateOES = epoxy_glBlendFuncSeparateOES_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCSEPARATEIPROC epoxy_glBlendFuncSeparatei = epoxy_glBlendFuncSeparatei_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCSEPARATEIARBPROC epoxy_glBlendFuncSeparateiARB = epoxy_glBlendFuncSeparateiARB_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCSEPARATEIEXTPROC epoxy_glBlendFuncSeparateiEXT = epoxy_glBlendFuncSeparateiEXT_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCSEPARATEIOESPROC epoxy_glBlendFuncSeparateiOES = epoxy_glBlendFuncSeparateiOES_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCIPROC epoxy_glBlendFunci = epoxy_glBlendFunci_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCIARBPROC epoxy_glBlendFunciARB = epoxy_glBlendFunciARB_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCIEXTPROC epoxy_glBlendFunciEXT = epoxy_glBlendFunciEXT_global_rewrite_ptr;

PUBLIC PFNGLBLENDFUNCIOESPROC epoxy_glBlendFunciOES = epoxy_glBlendFunciOES_global_rewrite_ptr;

PUBLIC PFNGLBLENDPARAMETERINVPROC epoxy_glBlendParameteriNV = epoxy_glBlendParameteriNV_global_rewrite_ptr;

PUBLIC PFNGLBLITFRAMEBUFFERPROC epoxy_glBlitFramebuffer = epoxy_glBlitFramebuffer_global_rewrite_ptr;

PUBLIC PFNGLBLITFRAMEBUFFERANGLEPROC epoxy_glBlitFramebufferANGLE = epoxy_glBlitFramebufferANGLE_global_rewrite_ptr;

PUBLIC PFNGLBLITFRAMEBUFFEREXTPROC epoxy_glBlitFramebufferEXT = epoxy_glBlitFramebufferEXT_global_rewrite_ptr;

PUBLIC PFNGLBLITFRAMEBUFFERNVPROC epoxy_glBlitFramebufferNV = epoxy_glBlitFramebufferNV_global_rewrite_ptr;

PUBLIC PFNGLBLITNAMEDFRAMEBUFFERPROC epoxy_glBlitNamedFramebuffer = epoxy_glBlitNamedFramebuffer_global_rewrite_ptr;

PUBLIC PFNGLBUFFERADDRESSRANGENVPROC epoxy_glBufferAddressRangeNV = epoxy_glBufferAddressRangeNV_global_rewrite_ptr;

PUBLIC PFNGLBUFFERDATAPROC epoxy_glBufferData = epoxy_glBufferData_global_rewrite_ptr;

PUBLIC PFNGLBUFFERDATAARBPROC epoxy_glBufferDataARB = epoxy_glBufferDataARB_global_rewrite_ptr;

PUBLIC PFNGLBUFFERPAGECOMMITMENTARBPROC epoxy_glBufferPageCommitmentARB = epoxy_glBufferPageCommitmentARB_global_rewrite_ptr;

PUBLIC PFNGLBUFFERPARAMETERIAPPLEPROC epoxy_glBufferParameteriAPPLE = epoxy_glBufferParameteriAPPLE_global_rewrite_ptr;

PUBLIC PFNGLBUFFERSTORAGEPROC epoxy_glBufferStorage = epoxy_glBufferStorage_global_rewrite_ptr;

PUBLIC PFNGLBUFFERSTORAGEEXTPROC epoxy_glBufferStorageEXT = epoxy_glBufferStorageEXT_global_rewrite_ptr;

PUBLIC PFNGLBUFFERSUBDATAPROC epoxy_glBufferSubData = epoxy_glBufferSubData_global_rewrite_ptr;

PUBLIC PFNGLBUFFERSUBDATAARBPROC epoxy_glBufferSubDataARB = epoxy_glBufferSubDataARB_global_rewrite_ptr;

PUBLIC PFNGLCALLCOMMANDLISTNVPROC epoxy_glCallCommandListNV = epoxy_glCallCommandListNV_global_rewrite_ptr;

PUBLIC PFNGLCALLLISTPROC epoxy_glCallList = epoxy_glCallList_global_rewrite_ptr;

PUBLIC PFNGLCALLLISTSPROC epoxy_glCallLists = epoxy_glCallLists_global_rewrite_ptr;

PUBLIC PFNGLCHECKFRAMEBUFFERSTATUSPROC epoxy_glCheckFramebufferStatus = epoxy_glCheckFramebufferStatus_global_rewrite_ptr;

PUBLIC PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC epoxy_glCheckFramebufferStatusEXT = epoxy_glCheckFramebufferStatusEXT_global_rewrite_ptr;

PUBLIC PFNGLCHECKFRAMEBUFFERSTATUSOESPROC epoxy_glCheckFramebufferStatusOES = epoxy_glCheckFramebufferStatusOES_global_rewrite_ptr;

PUBLIC PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC epoxy_glCheckNamedFramebufferStatus = epoxy_glCheckNamedFramebufferStatus_global_rewrite_ptr;

PUBLIC PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC epoxy_glCheckNamedFramebufferStatusEXT = epoxy_glCheckNamedFramebufferStatusEXT_global_rewrite_ptr;

PUBLIC PFNGLCLAMPCOLORPROC epoxy_glClampColor = epoxy_glClampColor_global_rewrite_ptr;

PUBLIC PFNGLCLAMPCOLORARBPROC epoxy_glClampColorARB = epoxy_glClampColorARB_global_rewrite_ptr;

PUBLIC PFNGLCLEARPROC epoxy_glClear = epoxy_glClear_global_rewrite_ptr;

PUBLIC PFNGLCLEARACCUMPROC epoxy_glClearAccum = epoxy_glClearAccum_global_rewrite_ptr;

PUBLIC PFNGLCLEARACCUMXOESPROC epoxy_glClearAccumxOES = epoxy_glClearAccumxOES_global_rewrite_ptr;

PUBLIC PFNGLCLEARBUFFERDATAPROC epoxy_glClearBufferData = epoxy_glClearBufferData_global_rewrite_ptr;

PUBLIC PFNGLCLEARBUFFERSUBDATAPROC epoxy_glClearBufferSubData = epoxy_glClearBufferSubData_global_rewrite_ptr;

PUBLIC PFNGLCLEARBUFFERFIPROC epoxy_glClearBufferfi = epoxy_glClearBufferfi_global_rewrite_ptr;

PUBLIC PFNGLCLEARBUFFERFVPROC epoxy_glClearBufferfv = epoxy_glClearBufferfv_global_rewrite_ptr;

PUBLIC PFNGLCLEARBUFFERIVPROC epoxy_glClearBufferiv = epoxy_glClearBufferiv_global_rewrite_ptr;

PUBLIC PFNGLCLEARBUFFERUIVPROC epoxy_glClearBufferuiv = epoxy_glClearBufferuiv_global_rewrite_ptr;

PUBLIC PFNGLCLEARCOLORPROC epoxy_glClearColor = epoxy_glClearColor_global_rewrite_ptr;

PUBLIC PFNGLCLEARCOLORIIEXTPROC epoxy_glClearColorIiEXT = epoxy_glClearColorIiEXT_global_rewrite_ptr;

PUBLIC PFNGLCLEARCOLORIUIEXTPROC epoxy_glClearColorIuiEXT = epoxy_glClearColorIuiEXT_global_rewrite_ptr;

PUBLIC PFNGLCLEARCOLORXPROC epoxy_glClearColorx = epoxy_glClearColorx_global_rewrite_ptr;

PUBLIC PFNGLCLEARCOLORXOESPROC epoxy_glClearColorxOES = epoxy_glClearColorxOES_global_rewrite_ptr;

PUBLIC PFNGLCLEARDEPTHPROC epoxy_glClearDepth = epoxy_glClearDepth_global_rewrite_ptr;

PUBLIC PFNGLCLEARDEPTHDNVPROC epoxy_glClearDepthdNV = epoxy_glClearDepthdNV_global_rewrite_ptr;

PUBLIC PFNGLCLEARDEPTHFPROC epoxy_glClearDepthf = epoxy_glClearDepthf_global_rewrite_ptr;

PUBLIC PFNGLCLEARDEPTHFOESPROC epoxy_glClearDepthfOES = epoxy_glClearDepthfOES_global_rewrite_ptr;

PUBLIC PFNGLCLEARDEPTHXPROC epoxy_glClearDepthx = epoxy_glClearDepthx_global_rewrite_ptr;

PUBLIC PFNGLCLEARDEPTHXOESPROC epoxy_glClearDepthxOES = epoxy_glClearDepthxOES_global_rewrite_ptr;

PUBLIC PFNGLCLEARINDEXPROC epoxy_glClearIndex = epoxy_glClearIndex_global_rewrite_ptr;

PUBLIC PFNGLCLEARNAMEDBUFFERDATAPROC epoxy_glClearNamedBufferData = epoxy_glClearNamedBufferData_global_rewrite_ptr;

PUBLIC PFNGLCLEARNAMEDBUFFERDATAEXTPROC epoxy_glClearNamedBufferDataEXT = epoxy_glClearNamedBufferDataEXT_global_rewrite_ptr;

PUBLIC PFNGLCLEARNAMEDBUFFERSUBDATAPROC epoxy_glClearNamedBufferSubData = epoxy_glClearNamedBufferSubData_global_rewrite_ptr;

PUBLIC PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC epoxy_glClearNamedBufferSubDataEXT = epoxy_glClearNamedBufferSubDataEXT_global_rewrite_ptr;

PUBLIC PFNGLCLEARNAMEDFRAMEBUFFERFIPROC epoxy_glClearNamedFramebufferfi = epoxy_glClearNamedFramebufferfi_global_rewrite_ptr;

PUBLIC PFNGLCLEARNAMEDFRAMEBUFFERFVPROC epoxy_glClearNamedFramebufferfv = epoxy_glClearNamedFramebufferfv_global_rewrite_ptr;

PUBLIC PFNGLCLEARNAMEDFRAMEBUFFERIVPROC epoxy_glClearNamedFramebufferiv = epoxy_glClearNamedFramebufferiv_global_rewrite_ptr;

PUBLIC PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC epoxy_glClearNamedFramebufferuiv = epoxy_glClearNamedFramebufferuiv_global_rewrite_ptr;

PUBLIC PFNGLCLEARSTENCILPROC epoxy_glClearStencil = epoxy_glClearStencil_global_rewrite_ptr;

PUBLIC PFNGLCLEARTEXIMAGEPROC epoxy_glClearTexImage = epoxy_glClearTexImage_global_rewrite_ptr;

PUBLIC PFNGLCLEARTEXSUBIMAGEPROC epoxy_glClearTexSubImage = epoxy_glClearTexSubImage_global_rewrite_ptr;

PUBLIC PFNGLCLIENTACTIVETEXTUREPROC epoxy_glClientActiveTexture = epoxy_glClientActiveTexture_global_rewrite_ptr;

PUBLIC PFNGLCLIENTACTIVETEXTUREARBPROC epoxy_glClientActiveTextureARB = epoxy_glClientActiveTextureARB_global_rewrite_ptr;

PUBLIC PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC epoxy_glClientActiveVertexStreamATI = epoxy_glClientActiveVertexStreamATI_global_rewrite_ptr;

PUBLIC PFNGLCLIENTATTRIBDEFAULTEXTPROC epoxy_glClientAttribDefaultEXT = epoxy_glClientAttribDefaultEXT_global_rewrite_ptr;

PUBLIC PFNGLCLIENTWAITSYNCPROC epoxy_glClientWaitSync = epoxy_glClientWaitSync_global_rewrite_ptr;

PUBLIC PFNGLCLIENTWAITSYNCAPPLEPROC epoxy_glClientWaitSyncAPPLE = epoxy_glClientWaitSyncAPPLE_global_rewrite_ptr;

PUBLIC PFNGLCLIPCONTROLPROC epoxy_glClipControl = epoxy_glClipControl_global_rewrite_ptr;

PUBLIC PFNGLCLIPPLANEPROC epoxy_glClipPlane = epoxy_glClipPlane_global_rewrite_ptr;

PUBLIC PFNGLCLIPPLANEFPROC epoxy_glClipPlanef = epoxy_glClipPlanef_global_rewrite_ptr;

PUBLIC PFNGLCLIPPLANEFIMGPROC epoxy_glClipPlanefIMG = epoxy_glClipPlanefIMG_global_rewrite_ptr;

PUBLIC PFNGLCLIPPLANEFOESPROC epoxy_glClipPlanefOES = epoxy_glClipPlanefOES_global_rewrite_ptr;

PUBLIC PFNGLCLIPPLANEXPROC epoxy_glClipPlanex = epoxy_glClipPlanex_global_rewrite_ptr;

PUBLIC PFNGLCLIPPLANEXIMGPROC epoxy_glClipPlanexIMG = epoxy_glClipPlanexIMG_global_rewrite_ptr;

PUBLIC PFNGLCLIPPLANEXOESPROC epoxy_glClipPlanexOES = epoxy_glClipPlanexOES_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3BPROC epoxy_glColor3b = epoxy_glColor3b_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3BVPROC epoxy_glColor3bv = epoxy_glColor3bv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3DPROC epoxy_glColor3d = epoxy_glColor3d_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3DVPROC epoxy_glColor3dv = epoxy_glColor3dv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3FPROC epoxy_glColor3f = epoxy_glColor3f_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3FVERTEX3FSUNPROC epoxy_glColor3fVertex3fSUN = epoxy_glColor3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3FVERTEX3FVSUNPROC epoxy_glColor3fVertex3fvSUN = epoxy_glColor3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3FVPROC epoxy_glColor3fv = epoxy_glColor3fv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3HNVPROC epoxy_glColor3hNV = epoxy_glColor3hNV_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3HVNVPROC epoxy_glColor3hvNV = epoxy_glColor3hvNV_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3IPROC epoxy_glColor3i = epoxy_glColor3i_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3IVPROC epoxy_glColor3iv = epoxy_glColor3iv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3SPROC epoxy_glColor3s = epoxy_glColor3s_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3SVPROC epoxy_glColor3sv = epoxy_glColor3sv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3UBPROC epoxy_glColor3ub = epoxy_glColor3ub_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3UBVPROC epoxy_glColor3ubv = epoxy_glColor3ubv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3UIPROC epoxy_glColor3ui = epoxy_glColor3ui_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3UIVPROC epoxy_glColor3uiv = epoxy_glColor3uiv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3USPROC epoxy_glColor3us = epoxy_glColor3us_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3USVPROC epoxy_glColor3usv = epoxy_glColor3usv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3XOESPROC epoxy_glColor3xOES = epoxy_glColor3xOES_global_rewrite_ptr;

PUBLIC PFNGLCOLOR3XVOESPROC epoxy_glColor3xvOES = epoxy_glColor3xvOES_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4BPROC epoxy_glColor4b = epoxy_glColor4b_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4BVPROC epoxy_glColor4bv = epoxy_glColor4bv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4DPROC epoxy_glColor4d = epoxy_glColor4d_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4DVPROC epoxy_glColor4dv = epoxy_glColor4dv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4FPROC epoxy_glColor4f = epoxy_glColor4f_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC epoxy_glColor4fNormal3fVertex3fSUN = epoxy_glColor4fNormal3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC epoxy_glColor4fNormal3fVertex3fvSUN = epoxy_glColor4fNormal3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4FVPROC epoxy_glColor4fv = epoxy_glColor4fv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4HNVPROC epoxy_glColor4hNV = epoxy_glColor4hNV_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4HVNVPROC epoxy_glColor4hvNV = epoxy_glColor4hvNV_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4IPROC epoxy_glColor4i = epoxy_glColor4i_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4IVPROC epoxy_glColor4iv = epoxy_glColor4iv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4SPROC epoxy_glColor4s = epoxy_glColor4s_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4SVPROC epoxy_glColor4sv = epoxy_glColor4sv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4UBPROC epoxy_glColor4ub = epoxy_glColor4ub_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4UBVERTEX2FSUNPROC epoxy_glColor4ubVertex2fSUN = epoxy_glColor4ubVertex2fSUN_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4UBVERTEX2FVSUNPROC epoxy_glColor4ubVertex2fvSUN = epoxy_glColor4ubVertex2fvSUN_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4UBVERTEX3FSUNPROC epoxy_glColor4ubVertex3fSUN = epoxy_glColor4ubVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4UBVERTEX3FVSUNPROC epoxy_glColor4ubVertex3fvSUN = epoxy_glColor4ubVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4UBVPROC epoxy_glColor4ubv = epoxy_glColor4ubv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4UIPROC epoxy_glColor4ui = epoxy_glColor4ui_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4UIVPROC epoxy_glColor4uiv = epoxy_glColor4uiv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4USPROC epoxy_glColor4us = epoxy_glColor4us_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4USVPROC epoxy_glColor4usv = epoxy_glColor4usv_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4XPROC epoxy_glColor4x = epoxy_glColor4x_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4XOESPROC epoxy_glColor4xOES = epoxy_glColor4xOES_global_rewrite_ptr;

PUBLIC PFNGLCOLOR4XVOESPROC epoxy_glColor4xvOES = epoxy_glColor4xvOES_global_rewrite_ptr;

PUBLIC PFNGLCOLORFORMATNVPROC epoxy_glColorFormatNV = epoxy_glColorFormatNV_global_rewrite_ptr;

PUBLIC PFNGLCOLORFRAGMENTOP1ATIPROC epoxy_glColorFragmentOp1ATI = epoxy_glColorFragmentOp1ATI_global_rewrite_ptr;

PUBLIC PFNGLCOLORFRAGMENTOP2ATIPROC epoxy_glColorFragmentOp2ATI = epoxy_glColorFragmentOp2ATI_global_rewrite_ptr;

PUBLIC PFNGLCOLORFRAGMENTOP3ATIPROC epoxy_glColorFragmentOp3ATI = epoxy_glColorFragmentOp3ATI_global_rewrite_ptr;

PUBLIC PFNGLCOLORMASKPROC epoxy_glColorMask = epoxy_glColorMask_global_rewrite_ptr;

PUBLIC PFNGLCOLORMASKINDEXEDEXTPROC epoxy_glColorMaskIndexedEXT = epoxy_glColorMaskIndexedEXT_global_rewrite_ptr;

PUBLIC PFNGLCOLORMASKIPROC epoxy_glColorMaski = epoxy_glColorMaski_global_rewrite_ptr;

PUBLIC PFNGLCOLORMASKIEXTPROC epoxy_glColorMaskiEXT = epoxy_glColorMaskiEXT_global_rewrite_ptr;

PUBLIC PFNGLCOLORMASKIOESPROC epoxy_glColorMaskiOES = epoxy_glColorMaskiOES_global_rewrite_ptr;

PUBLIC PFNGLCOLORMATERIALPROC epoxy_glColorMaterial = epoxy_glColorMaterial_global_rewrite_ptr;

PUBLIC PFNGLCOLORP3UIPROC epoxy_glColorP3ui = epoxy_glColorP3ui_global_rewrite_ptr;

PUBLIC PFNGLCOLORP3UIVPROC epoxy_glColorP3uiv = epoxy_glColorP3uiv_global_rewrite_ptr;

PUBLIC PFNGLCOLORP4UIPROC epoxy_glColorP4ui = epoxy_glColorP4ui_global_rewrite_ptr;

PUBLIC PFNGLCOLORP4UIVPROC epoxy_glColorP4uiv = epoxy_glColorP4uiv_global_rewrite_ptr;

PUBLIC PFNGLCOLORPOINTERPROC epoxy_glColorPointer = epoxy_glColorPointer_global_rewrite_ptr;

PUBLIC PFNGLCOLORPOINTEREXTPROC epoxy_glColorPointerEXT = epoxy_glColorPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLCOLORPOINTERLISTIBMPROC epoxy_glColorPointerListIBM = epoxy_glColorPointerListIBM_global_rewrite_ptr;

PUBLIC PFNGLCOLORPOINTERVINTELPROC epoxy_glColorPointervINTEL = epoxy_glColorPointervINTEL_global_rewrite_ptr;

PUBLIC PFNGLCOLORSUBTABLEPROC epoxy_glColorSubTable = epoxy_glColorSubTable_global_rewrite_ptr;

PUBLIC PFNGLCOLORSUBTABLEEXTPROC epoxy_glColorSubTableEXT = epoxy_glColorSubTableEXT_global_rewrite_ptr;

PUBLIC PFNGLCOLORTABLEPROC epoxy_glColorTable = epoxy_glColorTable_global_rewrite_ptr;

PUBLIC PFNGLCOLORTABLEEXTPROC epoxy_glColorTableEXT = epoxy_glColorTableEXT_global_rewrite_ptr;

PUBLIC PFNGLCOLORTABLEPARAMETERFVPROC epoxy_glColorTableParameterfv = epoxy_glColorTableParameterfv_global_rewrite_ptr;

PUBLIC PFNGLCOLORTABLEPARAMETERFVSGIPROC epoxy_glColorTableParameterfvSGI = epoxy_glColorTableParameterfvSGI_global_rewrite_ptr;

PUBLIC PFNGLCOLORTABLEPARAMETERIVPROC epoxy_glColorTableParameteriv = epoxy_glColorTableParameteriv_global_rewrite_ptr;

PUBLIC PFNGLCOLORTABLEPARAMETERIVSGIPROC epoxy_glColorTableParameterivSGI = epoxy_glColorTableParameterivSGI_global_rewrite_ptr;

PUBLIC PFNGLCOLORTABLESGIPROC epoxy_glColorTableSGI = epoxy_glColorTableSGI_global_rewrite_ptr;

PUBLIC PFNGLCOMBINERINPUTNVPROC epoxy_glCombinerInputNV = epoxy_glCombinerInputNV_global_rewrite_ptr;

PUBLIC PFNGLCOMBINEROUTPUTNVPROC epoxy_glCombinerOutputNV = epoxy_glCombinerOutputNV_global_rewrite_ptr;

PUBLIC PFNGLCOMBINERPARAMETERFNVPROC epoxy_glCombinerParameterfNV = epoxy_glCombinerParameterfNV_global_rewrite_ptr;

PUBLIC PFNGLCOMBINERPARAMETERFVNVPROC epoxy_glCombinerParameterfvNV = epoxy_glCombinerParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLCOMBINERPARAMETERINVPROC epoxy_glCombinerParameteriNV = epoxy_glCombinerParameteriNV_global_rewrite_ptr;

PUBLIC PFNGLCOMBINERPARAMETERIVNVPROC epoxy_glCombinerParameterivNV = epoxy_glCombinerParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLCOMBINERSTAGEPARAMETERFVNVPROC epoxy_glCombinerStageParameterfvNV = epoxy_glCombinerStageParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLCOMMANDLISTSEGMENTSNVPROC epoxy_glCommandListSegmentsNV = epoxy_glCommandListSegmentsNV_global_rewrite_ptr;

PUBLIC PFNGLCOMPILECOMMANDLISTNVPROC epoxy_glCompileCommandListNV = epoxy_glCompileCommandListNV_global_rewrite_ptr;

PUBLIC PFNGLCOMPILESHADERPROC epoxy_glCompileShader = epoxy_glCompileShader_global_rewrite_ptr;

PUBLIC PFNGLCOMPILESHADERARBPROC epoxy_glCompileShaderARB = epoxy_glCompileShaderARB_global_rewrite_ptr;

PUBLIC PFNGLCOMPILESHADERINCLUDEARBPROC epoxy_glCompileShaderIncludeARB = epoxy_glCompileShaderIncludeARB_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC epoxy_glCompressedMultiTexImage1DEXT = epoxy_glCompressedMultiTexImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC epoxy_glCompressedMultiTexImage2DEXT = epoxy_glCompressedMultiTexImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC epoxy_glCompressedMultiTexImage3DEXT = epoxy_glCompressedMultiTexImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC epoxy_glCompressedMultiTexSubImage1DEXT = epoxy_glCompressedMultiTexSubImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC epoxy_glCompressedMultiTexSubImage2DEXT = epoxy_glCompressedMultiTexSubImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC epoxy_glCompressedMultiTexSubImage3DEXT = epoxy_glCompressedMultiTexSubImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXIMAGE1DPROC epoxy_glCompressedTexImage1D = epoxy_glCompressedTexImage1D_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXIMAGE1DARBPROC epoxy_glCompressedTexImage1DARB = epoxy_glCompressedTexImage1DARB_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXIMAGE2DPROC epoxy_glCompressedTexImage2D = epoxy_glCompressedTexImage2D_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXIMAGE2DARBPROC epoxy_glCompressedTexImage2DARB = epoxy_glCompressedTexImage2DARB_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXIMAGE3DPROC epoxy_glCompressedTexImage3D = epoxy_glCompressedTexImage3D_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXIMAGE3DARBPROC epoxy_glCompressedTexImage3DARB = epoxy_glCompressedTexImage3DARB_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXIMAGE3DOESPROC epoxy_glCompressedTexImage3DOES = epoxy_glCompressedTexImage3DOES_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC epoxy_glCompressedTexSubImage1D = epoxy_glCompressedTexSubImage1D_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC epoxy_glCompressedTexSubImage1DARB = epoxy_glCompressedTexSubImage1DARB_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC epoxy_glCompressedTexSubImage2D = epoxy_glCompressedTexSubImage2D_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC epoxy_glCompressedTexSubImage2DARB = epoxy_glCompressedTexSubImage2DARB_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC epoxy_glCompressedTexSubImage3D = epoxy_glCompressedTexSubImage3D_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC epoxy_glCompressedTexSubImage3DARB = epoxy_glCompressedTexSubImage3DARB_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC epoxy_glCompressedTexSubImage3DOES = epoxy_glCompressedTexSubImage3DOES_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC epoxy_glCompressedTextureImage1DEXT = epoxy_glCompressedTextureImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC epoxy_glCompressedTextureImage2DEXT = epoxy_glCompressedTextureImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC epoxy_glCompressedTextureImage3DEXT = epoxy_glCompressedTextureImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC epoxy_glCompressedTextureSubImage1D = epoxy_glCompressedTextureSubImage1D_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC epoxy_glCompressedTextureSubImage1DEXT = epoxy_glCompressedTextureSubImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC epoxy_glCompressedTextureSubImage2D = epoxy_glCompressedTextureSubImage2D_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC epoxy_glCompressedTextureSubImage2DEXT = epoxy_glCompressedTextureSubImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC epoxy_glCompressedTextureSubImage3D = epoxy_glCompressedTextureSubImage3D_global_rewrite_ptr;

PUBLIC PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC epoxy_glCompressedTextureSubImage3DEXT = epoxy_glCompressedTextureSubImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONFILTER1DPROC epoxy_glConvolutionFilter1D = epoxy_glConvolutionFilter1D_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONFILTER1DEXTPROC epoxy_glConvolutionFilter1DEXT = epoxy_glConvolutionFilter1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONFILTER2DPROC epoxy_glConvolutionFilter2D = epoxy_glConvolutionFilter2D_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONFILTER2DEXTPROC epoxy_glConvolutionFilter2DEXT = epoxy_glConvolutionFilter2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERFPROC epoxy_glConvolutionParameterf = epoxy_glConvolutionParameterf_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERFEXTPROC epoxy_glConvolutionParameterfEXT = epoxy_glConvolutionParameterfEXT_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERFVPROC epoxy_glConvolutionParameterfv = epoxy_glConvolutionParameterfv_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERFVEXTPROC epoxy_glConvolutionParameterfvEXT = epoxy_glConvolutionParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERIPROC epoxy_glConvolutionParameteri = epoxy_glConvolutionParameteri_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERIEXTPROC epoxy_glConvolutionParameteriEXT = epoxy_glConvolutionParameteriEXT_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERIVPROC epoxy_glConvolutionParameteriv = epoxy_glConvolutionParameteriv_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERIVEXTPROC epoxy_glConvolutionParameterivEXT = epoxy_glConvolutionParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERXOESPROC epoxy_glConvolutionParameterxOES = epoxy_glConvolutionParameterxOES_global_rewrite_ptr;

PUBLIC PFNGLCONVOLUTIONPARAMETERXVOESPROC epoxy_glConvolutionParameterxvOES = epoxy_glConvolutionParameterxvOES_global_rewrite_ptr;

PUBLIC PFNGLCOPYBUFFERSUBDATAPROC epoxy_glCopyBufferSubData = epoxy_glCopyBufferSubData_global_rewrite_ptr;

PUBLIC PFNGLCOPYBUFFERSUBDATANVPROC epoxy_glCopyBufferSubDataNV = epoxy_glCopyBufferSubDataNV_global_rewrite_ptr;

PUBLIC PFNGLCOPYCOLORSUBTABLEPROC epoxy_glCopyColorSubTable = epoxy_glCopyColorSubTable_global_rewrite_ptr;

PUBLIC PFNGLCOPYCOLORSUBTABLEEXTPROC epoxy_glCopyColorSubTableEXT = epoxy_glCopyColorSubTableEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYCOLORTABLEPROC epoxy_glCopyColorTable = epoxy_glCopyColorTable_global_rewrite_ptr;

PUBLIC PFNGLCOPYCOLORTABLESGIPROC epoxy_glCopyColorTableSGI = epoxy_glCopyColorTableSGI_global_rewrite_ptr;

PUBLIC PFNGLCOPYCONVOLUTIONFILTER1DPROC epoxy_glCopyConvolutionFilter1D = epoxy_glCopyConvolutionFilter1D_global_rewrite_ptr;

PUBLIC PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC epoxy_glCopyConvolutionFilter1DEXT = epoxy_glCopyConvolutionFilter1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYCONVOLUTIONFILTER2DPROC epoxy_glCopyConvolutionFilter2D = epoxy_glCopyConvolutionFilter2D_global_rewrite_ptr;

PUBLIC PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC epoxy_glCopyConvolutionFilter2DEXT = epoxy_glCopyConvolutionFilter2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYIMAGESUBDATAPROC epoxy_glCopyImageSubData = epoxy_glCopyImageSubData_global_rewrite_ptr;

PUBLIC PFNGLCOPYIMAGESUBDATAEXTPROC epoxy_glCopyImageSubDataEXT = epoxy_glCopyImageSubDataEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYIMAGESUBDATANVPROC epoxy_glCopyImageSubDataNV = epoxy_glCopyImageSubDataNV_global_rewrite_ptr;

PUBLIC PFNGLCOPYIMAGESUBDATAOESPROC epoxy_glCopyImageSubDataOES = epoxy_glCopyImageSubDataOES_global_rewrite_ptr;

PUBLIC PFNGLCOPYMULTITEXIMAGE1DEXTPROC epoxy_glCopyMultiTexImage1DEXT = epoxy_glCopyMultiTexImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYMULTITEXIMAGE2DEXTPROC epoxy_glCopyMultiTexImage2DEXT = epoxy_glCopyMultiTexImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC epoxy_glCopyMultiTexSubImage1DEXT = epoxy_glCopyMultiTexSubImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC epoxy_glCopyMultiTexSubImage2DEXT = epoxy_glCopyMultiTexSubImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC epoxy_glCopyMultiTexSubImage3DEXT = epoxy_glCopyMultiTexSubImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYNAMEDBUFFERSUBDATAPROC epoxy_glCopyNamedBufferSubData = epoxy_glCopyNamedBufferSubData_global_rewrite_ptr;

PUBLIC PFNGLCOPYPATHNVPROC epoxy_glCopyPathNV = epoxy_glCopyPathNV_global_rewrite_ptr;

PUBLIC PFNGLCOPYPIXELSPROC epoxy_glCopyPixels = epoxy_glCopyPixels_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXIMAGE1DPROC epoxy_glCopyTexImage1D = epoxy_glCopyTexImage1D_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXIMAGE1DEXTPROC epoxy_glCopyTexImage1DEXT = epoxy_glCopyTexImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXIMAGE2DPROC epoxy_glCopyTexImage2D = epoxy_glCopyTexImage2D_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXIMAGE2DEXTPROC epoxy_glCopyTexImage2DEXT = epoxy_glCopyTexImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXSUBIMAGE1DPROC epoxy_glCopyTexSubImage1D = epoxy_glCopyTexSubImage1D_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXSUBIMAGE1DEXTPROC epoxy_glCopyTexSubImage1DEXT = epoxy_glCopyTexSubImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXSUBIMAGE2DPROC epoxy_glCopyTexSubImage2D = epoxy_glCopyTexSubImage2D_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXSUBIMAGE2DEXTPROC epoxy_glCopyTexSubImage2DEXT = epoxy_glCopyTexSubImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXSUBIMAGE3DPROC epoxy_glCopyTexSubImage3D = epoxy_glCopyTexSubImage3D_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXSUBIMAGE3DEXTPROC epoxy_glCopyTexSubImage3DEXT = epoxy_glCopyTexSubImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXSUBIMAGE3DOESPROC epoxy_glCopyTexSubImage3DOES = epoxy_glCopyTexSubImage3DOES_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXTUREIMAGE1DEXTPROC epoxy_glCopyTextureImage1DEXT = epoxy_glCopyTextureImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXTUREIMAGE2DEXTPROC epoxy_glCopyTextureImage2DEXT = epoxy_glCopyTextureImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXTURELEVELSAPPLEPROC epoxy_glCopyTextureLevelsAPPLE = epoxy_glCopyTextureLevelsAPPLE_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXTURESUBIMAGE1DPROC epoxy_glCopyTextureSubImage1D = epoxy_glCopyTextureSubImage1D_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC epoxy_glCopyTextureSubImage1DEXT = epoxy_glCopyTextureSubImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXTURESUBIMAGE2DPROC epoxy_glCopyTextureSubImage2D = epoxy_glCopyTextureSubImage2D_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC epoxy_glCopyTextureSubImage2DEXT = epoxy_glCopyTextureSubImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXTURESUBIMAGE3DPROC epoxy_glCopyTextureSubImage3D = epoxy_glCopyTextureSubImage3D_global_rewrite_ptr;

PUBLIC PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC epoxy_glCopyTextureSubImage3DEXT = epoxy_glCopyTextureSubImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLCOVERFILLPATHINSTANCEDNVPROC epoxy_glCoverFillPathInstancedNV = epoxy_glCoverFillPathInstancedNV_global_rewrite_ptr;

PUBLIC PFNGLCOVERFILLPATHNVPROC epoxy_glCoverFillPathNV = epoxy_glCoverFillPathNV_global_rewrite_ptr;

PUBLIC PFNGLCOVERSTROKEPATHINSTANCEDNVPROC epoxy_glCoverStrokePathInstancedNV = epoxy_glCoverStrokePathInstancedNV_global_rewrite_ptr;

PUBLIC PFNGLCOVERSTROKEPATHNVPROC epoxy_glCoverStrokePathNV = epoxy_glCoverStrokePathNV_global_rewrite_ptr;

PUBLIC PFNGLCOVERAGEMASKNVPROC epoxy_glCoverageMaskNV = epoxy_glCoverageMaskNV_global_rewrite_ptr;

PUBLIC PFNGLCOVERAGEMODULATIONNVPROC epoxy_glCoverageModulationNV = epoxy_glCoverageModulationNV_global_rewrite_ptr;

PUBLIC PFNGLCOVERAGEMODULATIONTABLENVPROC epoxy_glCoverageModulationTableNV = epoxy_glCoverageModulationTableNV_global_rewrite_ptr;

PUBLIC PFNGLCOVERAGEOPERATIONNVPROC epoxy_glCoverageOperationNV = epoxy_glCoverageOperationNV_global_rewrite_ptr;

PUBLIC PFNGLCREATEBUFFERSPROC epoxy_glCreateBuffers = epoxy_glCreateBuffers_global_rewrite_ptr;

PUBLIC PFNGLCREATECOMMANDLISTSNVPROC epoxy_glCreateCommandListsNV = epoxy_glCreateCommandListsNV_global_rewrite_ptr;

PUBLIC PFNGLCREATEFRAMEBUFFERSPROC epoxy_glCreateFramebuffers = epoxy_glCreateFramebuffers_global_rewrite_ptr;

PUBLIC PFNGLCREATEPERFQUERYINTELPROC epoxy_glCreatePerfQueryINTEL = epoxy_glCreatePerfQueryINTEL_global_rewrite_ptr;

PUBLIC PFNGLCREATEPROGRAMPROC epoxy_glCreateProgram = epoxy_glCreateProgram_global_rewrite_ptr;

PUBLIC PFNGLCREATEPROGRAMOBJECTARBPROC epoxy_glCreateProgramObjectARB = epoxy_glCreateProgramObjectARB_global_rewrite_ptr;

PUBLIC PFNGLCREATEPROGRAMPIPELINESPROC epoxy_glCreateProgramPipelines = epoxy_glCreateProgramPipelines_global_rewrite_ptr;

PUBLIC PFNGLCREATEQUERIESPROC epoxy_glCreateQueries = epoxy_glCreateQueries_global_rewrite_ptr;

PUBLIC PFNGLCREATERENDERBUFFERSPROC epoxy_glCreateRenderbuffers = epoxy_glCreateRenderbuffers_global_rewrite_ptr;

PUBLIC PFNGLCREATESAMPLERSPROC epoxy_glCreateSamplers = epoxy_glCreateSamplers_global_rewrite_ptr;

PUBLIC PFNGLCREATESHADERPROC epoxy_glCreateShader = epoxy_glCreateShader_global_rewrite_ptr;

PUBLIC PFNGLCREATESHADEROBJECTARBPROC epoxy_glCreateShaderObjectARB = epoxy_glCreateShaderObjectARB_global_rewrite_ptr;

PUBLIC PFNGLCREATESHADERPROGRAMEXTPROC epoxy_glCreateShaderProgramEXT = epoxy_glCreateShaderProgramEXT_global_rewrite_ptr;

PUBLIC PFNGLCREATESHADERPROGRAMVPROC epoxy_glCreateShaderProgramv = epoxy_glCreateShaderProgramv_global_rewrite_ptr;

PUBLIC PFNGLCREATESHADERPROGRAMVEXTPROC epoxy_glCreateShaderProgramvEXT = epoxy_glCreateShaderProgramvEXT_global_rewrite_ptr;

PUBLIC PFNGLCREATESTATESNVPROC epoxy_glCreateStatesNV = epoxy_glCreateStatesNV_global_rewrite_ptr;

PUBLIC PFNGLCREATESYNCFROMCLEVENTARBPROC epoxy_glCreateSyncFromCLeventARB = epoxy_glCreateSyncFromCLeventARB_global_rewrite_ptr;

PUBLIC PFNGLCREATETEXTURESPROC epoxy_glCreateTextures = epoxy_glCreateTextures_global_rewrite_ptr;

PUBLIC PFNGLCREATETRANSFORMFEEDBACKSPROC epoxy_glCreateTransformFeedbacks = epoxy_glCreateTransformFeedbacks_global_rewrite_ptr;

PUBLIC PFNGLCREATEVERTEXARRAYSPROC epoxy_glCreateVertexArrays = epoxy_glCreateVertexArrays_global_rewrite_ptr;

PUBLIC PFNGLCULLFACEPROC epoxy_glCullFace = epoxy_glCullFace_global_rewrite_ptr;

PUBLIC PFNGLCULLPARAMETERDVEXTPROC epoxy_glCullParameterdvEXT = epoxy_glCullParameterdvEXT_global_rewrite_ptr;

PUBLIC PFNGLCULLPARAMETERFVEXTPROC epoxy_glCullParameterfvEXT = epoxy_glCullParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLCURRENTPALETTEMATRIXARBPROC epoxy_glCurrentPaletteMatrixARB = epoxy_glCurrentPaletteMatrixARB_global_rewrite_ptr;

PUBLIC PFNGLCURRENTPALETTEMATRIXOESPROC epoxy_glCurrentPaletteMatrixOES = epoxy_glCurrentPaletteMatrixOES_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGECALLBACKPROC epoxy_glDebugMessageCallback = epoxy_glDebugMessageCallback_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGECALLBACKAMDPROC epoxy_glDebugMessageCallbackAMD = epoxy_glDebugMessageCallbackAMD_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGECALLBACKARBPROC epoxy_glDebugMessageCallbackARB = epoxy_glDebugMessageCallbackARB_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGECALLBACKKHRPROC epoxy_glDebugMessageCallbackKHR = epoxy_glDebugMessageCallbackKHR_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGECONTROLPROC epoxy_glDebugMessageControl = epoxy_glDebugMessageControl_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGECONTROLARBPROC epoxy_glDebugMessageControlARB = epoxy_glDebugMessageControlARB_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGECONTROLKHRPROC epoxy_glDebugMessageControlKHR = epoxy_glDebugMessageControlKHR_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGEENABLEAMDPROC epoxy_glDebugMessageEnableAMD = epoxy_glDebugMessageEnableAMD_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGEINSERTPROC epoxy_glDebugMessageInsert = epoxy_glDebugMessageInsert_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGEINSERTAMDPROC epoxy_glDebugMessageInsertAMD = epoxy_glDebugMessageInsertAMD_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGEINSERTARBPROC epoxy_glDebugMessageInsertARB = epoxy_glDebugMessageInsertARB_global_rewrite_ptr;

PUBLIC PFNGLDEBUGMESSAGEINSERTKHRPROC epoxy_glDebugMessageInsertKHR = epoxy_glDebugMessageInsertKHR_global_rewrite_ptr;

PUBLIC PFNGLDEFORMSGIXPROC epoxy_glDeformSGIX = epoxy_glDeformSGIX_global_rewrite_ptr;

PUBLIC PFNGLDEFORMATIONMAP3DSGIXPROC epoxy_glDeformationMap3dSGIX = epoxy_glDeformationMap3dSGIX_global_rewrite_ptr;

PUBLIC PFNGLDEFORMATIONMAP3FSGIXPROC epoxy_glDeformationMap3fSGIX = epoxy_glDeformationMap3fSGIX_global_rewrite_ptr;

PUBLIC PFNGLDELETEASYNCMARKERSSGIXPROC epoxy_glDeleteAsyncMarkersSGIX = epoxy_glDeleteAsyncMarkersSGIX_global_rewrite_ptr;

PUBLIC PFNGLDELETEBUFFERSPROC epoxy_glDeleteBuffers = epoxy_glDeleteBuffers_global_rewrite_ptr;

PUBLIC PFNGLDELETEBUFFERSARBPROC epoxy_glDeleteBuffersARB = epoxy_glDeleteBuffersARB_global_rewrite_ptr;

PUBLIC PFNGLDELETECOMMANDLISTSNVPROC epoxy_glDeleteCommandListsNV = epoxy_glDeleteCommandListsNV_global_rewrite_ptr;

PUBLIC PFNGLDELETEFENCESAPPLEPROC epoxy_glDeleteFencesAPPLE = epoxy_glDeleteFencesAPPLE_global_rewrite_ptr;

PUBLIC PFNGLDELETEFENCESNVPROC epoxy_glDeleteFencesNV = epoxy_glDeleteFencesNV_global_rewrite_ptr;

PUBLIC PFNGLDELETEFRAGMENTSHADERATIPROC epoxy_glDeleteFragmentShaderATI = epoxy_glDeleteFragmentShaderATI_global_rewrite_ptr;

PUBLIC PFNGLDELETEFRAMEBUFFERSPROC epoxy_glDeleteFramebuffers = epoxy_glDeleteFramebuffers_global_rewrite_ptr;

PUBLIC PFNGLDELETEFRAMEBUFFERSEXTPROC epoxy_glDeleteFramebuffersEXT = epoxy_glDeleteFramebuffersEXT_global_rewrite_ptr;

PUBLIC PFNGLDELETEFRAMEBUFFERSOESPROC epoxy_glDeleteFramebuffersOES = epoxy_glDeleteFramebuffersOES_global_rewrite_ptr;

PUBLIC PFNGLDELETELISTSPROC epoxy_glDeleteLists = epoxy_glDeleteLists_global_rewrite_ptr;

PUBLIC PFNGLDELETENAMEDSTRINGARBPROC epoxy_glDeleteNamedStringARB = epoxy_glDeleteNamedStringARB_global_rewrite_ptr;

PUBLIC PFNGLDELETENAMESAMDPROC epoxy_glDeleteNamesAMD = epoxy_glDeleteNamesAMD_global_rewrite_ptr;

PUBLIC PFNGLDELETEOBJECTARBPROC epoxy_glDeleteObjectARB = epoxy_glDeleteObjectARB_global_rewrite_ptr;

PUBLIC PFNGLDELETEOCCLUSIONQUERIESNVPROC epoxy_glDeleteOcclusionQueriesNV = epoxy_glDeleteOcclusionQueriesNV_global_rewrite_ptr;

PUBLIC PFNGLDELETEPATHSNVPROC epoxy_glDeletePathsNV = epoxy_glDeletePathsNV_global_rewrite_ptr;

PUBLIC PFNGLDELETEPERFMONITORSAMDPROC epoxy_glDeletePerfMonitorsAMD = epoxy_glDeletePerfMonitorsAMD_global_rewrite_ptr;

PUBLIC PFNGLDELETEPERFQUERYINTELPROC epoxy_glDeletePerfQueryINTEL = epoxy_glDeletePerfQueryINTEL_global_rewrite_ptr;

PUBLIC PFNGLDELETEPROGRAMPROC epoxy_glDeleteProgram = epoxy_glDeleteProgram_global_rewrite_ptr;

PUBLIC PFNGLDELETEPROGRAMPIPELINESPROC epoxy_glDeleteProgramPipelines = epoxy_glDeleteProgramPipelines_global_rewrite_ptr;

PUBLIC PFNGLDELETEPROGRAMPIPELINESEXTPROC epoxy_glDeleteProgramPipelinesEXT = epoxy_glDeleteProgramPipelinesEXT_global_rewrite_ptr;

PUBLIC PFNGLDELETEPROGRAMSARBPROC epoxy_glDeleteProgramsARB = epoxy_glDeleteProgramsARB_global_rewrite_ptr;

PUBLIC PFNGLDELETEPROGRAMSNVPROC epoxy_glDeleteProgramsNV = epoxy_glDeleteProgramsNV_global_rewrite_ptr;

PUBLIC PFNGLDELETEQUERIESPROC epoxy_glDeleteQueries = epoxy_glDeleteQueries_global_rewrite_ptr;

PUBLIC PFNGLDELETEQUERIESARBPROC epoxy_glDeleteQueriesARB = epoxy_glDeleteQueriesARB_global_rewrite_ptr;

PUBLIC PFNGLDELETEQUERIESEXTPROC epoxy_glDeleteQueriesEXT = epoxy_glDeleteQueriesEXT_global_rewrite_ptr;

PUBLIC PFNGLDELETERENDERBUFFERSPROC epoxy_glDeleteRenderbuffers = epoxy_glDeleteRenderbuffers_global_rewrite_ptr;

PUBLIC PFNGLDELETERENDERBUFFERSEXTPROC epoxy_glDeleteRenderbuffersEXT = epoxy_glDeleteRenderbuffersEXT_global_rewrite_ptr;

PUBLIC PFNGLDELETERENDERBUFFERSOESPROC epoxy_glDeleteRenderbuffersOES = epoxy_glDeleteRenderbuffersOES_global_rewrite_ptr;

PUBLIC PFNGLDELETESAMPLERSPROC epoxy_glDeleteSamplers = epoxy_glDeleteSamplers_global_rewrite_ptr;

PUBLIC PFNGLDELETESHADERPROC epoxy_glDeleteShader = epoxy_glDeleteShader_global_rewrite_ptr;

PUBLIC PFNGLDELETESTATESNVPROC epoxy_glDeleteStatesNV = epoxy_glDeleteStatesNV_global_rewrite_ptr;

PUBLIC PFNGLDELETESYNCPROC epoxy_glDeleteSync = epoxy_glDeleteSync_global_rewrite_ptr;

PUBLIC PFNGLDELETESYNCAPPLEPROC epoxy_glDeleteSyncAPPLE = epoxy_glDeleteSyncAPPLE_global_rewrite_ptr;

PUBLIC PFNGLDELETETEXTURESPROC epoxy_glDeleteTextures = epoxy_glDeleteTextures_global_rewrite_ptr;

PUBLIC PFNGLDELETETEXTURESEXTPROC epoxy_glDeleteTexturesEXT = epoxy_glDeleteTexturesEXT_global_rewrite_ptr;

PUBLIC PFNGLDELETETRANSFORMFEEDBACKSPROC epoxy_glDeleteTransformFeedbacks = epoxy_glDeleteTransformFeedbacks_global_rewrite_ptr;

PUBLIC PFNGLDELETETRANSFORMFEEDBACKSNVPROC epoxy_glDeleteTransformFeedbacksNV = epoxy_glDeleteTransformFeedbacksNV_global_rewrite_ptr;

PUBLIC PFNGLDELETEVERTEXARRAYSPROC epoxy_glDeleteVertexArrays = epoxy_glDeleteVertexArrays_global_rewrite_ptr;

PUBLIC PFNGLDELETEVERTEXARRAYSAPPLEPROC epoxy_glDeleteVertexArraysAPPLE = epoxy_glDeleteVertexArraysAPPLE_global_rewrite_ptr;

PUBLIC PFNGLDELETEVERTEXARRAYSOESPROC epoxy_glDeleteVertexArraysOES = epoxy_glDeleteVertexArraysOES_global_rewrite_ptr;

PUBLIC PFNGLDELETEVERTEXSHADEREXTPROC epoxy_glDeleteVertexShaderEXT = epoxy_glDeleteVertexShaderEXT_global_rewrite_ptr;

PUBLIC PFNGLDEPTHBOUNDSEXTPROC epoxy_glDepthBoundsEXT = epoxy_glDepthBoundsEXT_global_rewrite_ptr;

PUBLIC PFNGLDEPTHBOUNDSDNVPROC epoxy_glDepthBoundsdNV = epoxy_glDepthBoundsdNV_global_rewrite_ptr;

PUBLIC PFNGLDEPTHFUNCPROC epoxy_glDepthFunc = epoxy_glDepthFunc_global_rewrite_ptr;

PUBLIC PFNGLDEPTHMASKPROC epoxy_glDepthMask = epoxy_glDepthMask_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEPROC epoxy_glDepthRange = epoxy_glDepthRange_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEARRAYFVNVPROC epoxy_glDepthRangeArrayfvNV = epoxy_glDepthRangeArrayfvNV_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEARRAYVPROC epoxy_glDepthRangeArrayv = epoxy_glDepthRangeArrayv_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEINDEXEDPROC epoxy_glDepthRangeIndexed = epoxy_glDepthRangeIndexed_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEINDEXEDFNVPROC epoxy_glDepthRangeIndexedfNV = epoxy_glDepthRangeIndexedfNV_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEDNVPROC epoxy_glDepthRangedNV = epoxy_glDepthRangedNV_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEFPROC epoxy_glDepthRangef = epoxy_glDepthRangef_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEFOESPROC epoxy_glDepthRangefOES = epoxy_glDepthRangefOES_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEXPROC epoxy_glDepthRangex = epoxy_glDepthRangex_global_rewrite_ptr;

PUBLIC PFNGLDEPTHRANGEXOESPROC epoxy_glDepthRangexOES = epoxy_glDepthRangexOES_global_rewrite_ptr;

PUBLIC PFNGLDETACHOBJECTARBPROC epoxy_glDetachObjectARB = epoxy_glDetachObjectARB_global_rewrite_ptr;

PUBLIC PFNGLDETACHSHADERPROC epoxy_glDetachShader = epoxy_glDetachShader_global_rewrite_ptr;

PUBLIC PFNGLDETAILTEXFUNCSGISPROC epoxy_glDetailTexFuncSGIS = epoxy_glDetailTexFuncSGIS_global_rewrite_ptr;

PUBLIC PFNGLDISABLEPROC epoxy_glDisable = epoxy_glDisable_global_rewrite_ptr;

PUBLIC PFNGLDISABLECLIENTSTATEPROC epoxy_glDisableClientState = epoxy_glDisableClientState_global_rewrite_ptr;

PUBLIC PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC epoxy_glDisableClientStateIndexedEXT = epoxy_glDisableClientStateIndexedEXT_global_rewrite_ptr;

PUBLIC PFNGLDISABLECLIENTSTATEIEXTPROC epoxy_glDisableClientStateiEXT = epoxy_glDisableClientStateiEXT_global_rewrite_ptr;

PUBLIC PFNGLDISABLEDRIVERCONTROLQCOMPROC epoxy_glDisableDriverControlQCOM = epoxy_glDisableDriverControlQCOM_global_rewrite_ptr;

PUBLIC PFNGLDISABLEINDEXEDEXTPROC epoxy_glDisableIndexedEXT = epoxy_glDisableIndexedEXT_global_rewrite_ptr;

PUBLIC PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC epoxy_glDisableVariantClientStateEXT = epoxy_glDisableVariantClientStateEXT_global_rewrite_ptr;

PUBLIC PFNGLDISABLEVERTEXARRAYATTRIBPROC epoxy_glDisableVertexArrayAttrib = epoxy_glDisableVertexArrayAttrib_global_rewrite_ptr;

PUBLIC PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC epoxy_glDisableVertexArrayAttribEXT = epoxy_glDisableVertexArrayAttribEXT_global_rewrite_ptr;

PUBLIC PFNGLDISABLEVERTEXARRAYEXTPROC epoxy_glDisableVertexArrayEXT = epoxy_glDisableVertexArrayEXT_global_rewrite_ptr;

PUBLIC PFNGLDISABLEVERTEXATTRIBAPPLEPROC epoxy_glDisableVertexAttribAPPLE = epoxy_glDisableVertexAttribAPPLE_global_rewrite_ptr;

PUBLIC PFNGLDISABLEVERTEXATTRIBARRAYPROC epoxy_glDisableVertexAttribArray = epoxy_glDisableVertexAttribArray_global_rewrite_ptr;

PUBLIC PFNGLDISABLEVERTEXATTRIBARRAYARBPROC epoxy_glDisableVertexAttribArrayARB = epoxy_glDisableVertexAttribArrayARB_global_rewrite_ptr;

PUBLIC PFNGLDISABLEIPROC epoxy_glDisablei = epoxy_glDisablei_global_rewrite_ptr;

PUBLIC PFNGLDISABLEIEXTPROC epoxy_glDisableiEXT = epoxy_glDisableiEXT_global_rewrite_ptr;

PUBLIC PFNGLDISABLEINVPROC epoxy_glDisableiNV = epoxy_glDisableiNV_global_rewrite_ptr;

PUBLIC PFNGLDISABLEIOESPROC epoxy_glDisableiOES = epoxy_glDisableiOES_global_rewrite_ptr;

PUBLIC PFNGLDISCARDFRAMEBUFFEREXTPROC epoxy_glDiscardFramebufferEXT = epoxy_glDiscardFramebufferEXT_global_rewrite_ptr;

PUBLIC PFNGLDISPATCHCOMPUTEPROC epoxy_glDispatchCompute = epoxy_glDispatchCompute_global_rewrite_ptr;

PUBLIC PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC epoxy_glDispatchComputeGroupSizeARB = epoxy_glDispatchComputeGroupSizeARB_global_rewrite_ptr;

PUBLIC PFNGLDISPATCHCOMPUTEINDIRECTPROC epoxy_glDispatchComputeIndirect = epoxy_glDispatchComputeIndirect_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSPROC epoxy_glDrawArrays = epoxy_glDrawArrays_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSEXTPROC epoxy_glDrawArraysEXT = epoxy_glDrawArraysEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSINDIRECTPROC epoxy_glDrawArraysIndirect = epoxy_glDrawArraysIndirect_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSINSTANCEDPROC epoxy_glDrawArraysInstanced = epoxy_glDrawArraysInstanced_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSINSTANCEDANGLEPROC epoxy_glDrawArraysInstancedANGLE = epoxy_glDrawArraysInstancedANGLE_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSINSTANCEDARBPROC epoxy_glDrawArraysInstancedARB = epoxy_glDrawArraysInstancedARB_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC epoxy_glDrawArraysInstancedBaseInstance = epoxy_glDrawArraysInstancedBaseInstance_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC epoxy_glDrawArraysInstancedBaseInstanceEXT = epoxy_glDrawArraysInstancedBaseInstanceEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSINSTANCEDEXTPROC epoxy_glDrawArraysInstancedEXT = epoxy_glDrawArraysInstancedEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWARRAYSINSTANCEDNVPROC epoxy_glDrawArraysInstancedNV = epoxy_glDrawArraysInstancedNV_global_rewrite_ptr;

PUBLIC PFNGLDRAWBUFFERPROC epoxy_glDrawBuffer = epoxy_glDrawBuffer_global_rewrite_ptr;

PUBLIC PFNGLDRAWBUFFERSPROC epoxy_glDrawBuffers = epoxy_glDrawBuffers_global_rewrite_ptr;

PUBLIC PFNGLDRAWBUFFERSARBPROC epoxy_glDrawBuffersARB = epoxy_glDrawBuffersARB_global_rewrite_ptr;

PUBLIC PFNGLDRAWBUFFERSATIPROC epoxy_glDrawBuffersATI = epoxy_glDrawBuffersATI_global_rewrite_ptr;

PUBLIC PFNGLDRAWBUFFERSEXTPROC epoxy_glDrawBuffersEXT = epoxy_glDrawBuffersEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWBUFFERSINDEXEDEXTPROC epoxy_glDrawBuffersIndexedEXT = epoxy_glDrawBuffersIndexedEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWBUFFERSNVPROC epoxy_glDrawBuffersNV = epoxy_glDrawBuffersNV_global_rewrite_ptr;

PUBLIC PFNGLDRAWCOMMANDSADDRESSNVPROC epoxy_glDrawCommandsAddressNV = epoxy_glDrawCommandsAddressNV_global_rewrite_ptr;

PUBLIC PFNGLDRAWCOMMANDSNVPROC epoxy_glDrawCommandsNV = epoxy_glDrawCommandsNV_global_rewrite_ptr;

PUBLIC PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC epoxy_glDrawCommandsStatesAddressNV = epoxy_glDrawCommandsStatesAddressNV_global_rewrite_ptr;

PUBLIC PFNGLDRAWCOMMANDSSTATESNVPROC epoxy_glDrawCommandsStatesNV = epoxy_glDrawCommandsStatesNV_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTARRAYAPPLEPROC epoxy_glDrawElementArrayAPPLE = epoxy_glDrawElementArrayAPPLE_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTARRAYATIPROC epoxy_glDrawElementArrayATI = epoxy_glDrawElementArrayATI_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSPROC epoxy_glDrawElements = epoxy_glDrawElements_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSBASEVERTEXPROC epoxy_glDrawElementsBaseVertex = epoxy_glDrawElementsBaseVertex_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSBASEVERTEXEXTPROC epoxy_glDrawElementsBaseVertexEXT = epoxy_glDrawElementsBaseVertexEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSBASEVERTEXOESPROC epoxy_glDrawElementsBaseVertexOES = epoxy_glDrawElementsBaseVertexOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINDIRECTPROC epoxy_glDrawElementsIndirect = epoxy_glDrawElementsIndirect_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDPROC epoxy_glDrawElementsInstanced = epoxy_glDrawElementsInstanced_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDANGLEPROC epoxy_glDrawElementsInstancedANGLE = epoxy_glDrawElementsInstancedANGLE_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDARBPROC epoxy_glDrawElementsInstancedARB = epoxy_glDrawElementsInstancedARB_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC epoxy_glDrawElementsInstancedBaseInstance = epoxy_glDrawElementsInstancedBaseInstance_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC epoxy_glDrawElementsInstancedBaseInstanceEXT = epoxy_glDrawElementsInstancedBaseInstanceEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC epoxy_glDrawElementsInstancedBaseVertex = epoxy_glDrawElementsInstancedBaseVertex_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC epoxy_glDrawElementsInstancedBaseVertexBaseInstance = epoxy_glDrawElementsInstancedBaseVertexBaseInstance_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC epoxy_glDrawElementsInstancedBaseVertexBaseInstanceEXT = epoxy_glDrawElementsInstancedBaseVertexBaseInstanceEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC epoxy_glDrawElementsInstancedBaseVertexEXT = epoxy_glDrawElementsInstancedBaseVertexEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC epoxy_glDrawElementsInstancedBaseVertexOES = epoxy_glDrawElementsInstancedBaseVertexOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDEXTPROC epoxy_glDrawElementsInstancedEXT = epoxy_glDrawElementsInstancedEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWELEMENTSINSTANCEDNVPROC epoxy_glDrawElementsInstancedNV = epoxy_glDrawElementsInstancedNV_global_rewrite_ptr;

PUBLIC PFNGLDRAWMESHARRAYSSUNPROC epoxy_glDrawMeshArraysSUN = epoxy_glDrawMeshArraysSUN_global_rewrite_ptr;

PUBLIC PFNGLDRAWPIXELSPROC epoxy_glDrawPixels = epoxy_glDrawPixels_global_rewrite_ptr;

PUBLIC PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC epoxy_glDrawRangeElementArrayAPPLE = epoxy_glDrawRangeElementArrayAPPLE_global_rewrite_ptr;

PUBLIC PFNGLDRAWRANGEELEMENTARRAYATIPROC epoxy_glDrawRangeElementArrayATI = epoxy_glDrawRangeElementArrayATI_global_rewrite_ptr;

PUBLIC PFNGLDRAWRANGEELEMENTSPROC epoxy_glDrawRangeElements = epoxy_glDrawRangeElements_global_rewrite_ptr;

PUBLIC PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC epoxy_glDrawRangeElementsBaseVertex = epoxy_glDrawRangeElementsBaseVertex_global_rewrite_ptr;

PUBLIC PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC epoxy_glDrawRangeElementsBaseVertexEXT = epoxy_glDrawRangeElementsBaseVertexEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC epoxy_glDrawRangeElementsBaseVertexOES = epoxy_glDrawRangeElementsBaseVertexOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWRANGEELEMENTSEXTPROC epoxy_glDrawRangeElementsEXT = epoxy_glDrawRangeElementsEXT_global_rewrite_ptr;

PUBLIC PFNGLDRAWTEXFOESPROC epoxy_glDrawTexfOES = epoxy_glDrawTexfOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWTEXFVOESPROC epoxy_glDrawTexfvOES = epoxy_glDrawTexfvOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWTEXIOESPROC epoxy_glDrawTexiOES = epoxy_glDrawTexiOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWTEXIVOESPROC epoxy_glDrawTexivOES = epoxy_glDrawTexivOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWTEXSOESPROC epoxy_glDrawTexsOES = epoxy_glDrawTexsOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWTEXSVOESPROC epoxy_glDrawTexsvOES = epoxy_glDrawTexsvOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWTEXTURENVPROC epoxy_glDrawTextureNV = epoxy_glDrawTextureNV_global_rewrite_ptr;

PUBLIC PFNGLDRAWTEXXOESPROC epoxy_glDrawTexxOES = epoxy_glDrawTexxOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWTEXXVOESPROC epoxy_glDrawTexxvOES = epoxy_glDrawTexxvOES_global_rewrite_ptr;

PUBLIC PFNGLDRAWTRANSFORMFEEDBACKPROC epoxy_glDrawTransformFeedback = epoxy_glDrawTransformFeedback_global_rewrite_ptr;

PUBLIC PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC epoxy_glDrawTransformFeedbackInstanced = epoxy_glDrawTransformFeedbackInstanced_global_rewrite_ptr;

PUBLIC PFNGLDRAWTRANSFORMFEEDBACKNVPROC epoxy_glDrawTransformFeedbackNV = epoxy_glDrawTransformFeedbackNV_global_rewrite_ptr;

PUBLIC PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC epoxy_glDrawTransformFeedbackStream = epoxy_glDrawTransformFeedbackStream_global_rewrite_ptr;

PUBLIC PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC epoxy_glDrawTransformFeedbackStreamInstanced = epoxy_glDrawTransformFeedbackStreamInstanced_global_rewrite_ptr;

PUBLIC PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC epoxy_glEGLImageTargetRenderbufferStorageOES = epoxy_glEGLImageTargetRenderbufferStorageOES_global_rewrite_ptr;

PUBLIC PFNGLEGLIMAGETARGETTEXTURE2DOESPROC epoxy_glEGLImageTargetTexture2DOES = epoxy_glEGLImageTargetTexture2DOES_global_rewrite_ptr;

PUBLIC PFNGLEDGEFLAGPROC epoxy_glEdgeFlag = epoxy_glEdgeFlag_global_rewrite_ptr;

PUBLIC PFNGLEDGEFLAGFORMATNVPROC epoxy_glEdgeFlagFormatNV = epoxy_glEdgeFlagFormatNV_global_rewrite_ptr;

PUBLIC PFNGLEDGEFLAGPOINTERPROC epoxy_glEdgeFlagPointer = epoxy_glEdgeFlagPointer_global_rewrite_ptr;

PUBLIC PFNGLEDGEFLAGPOINTEREXTPROC epoxy_glEdgeFlagPointerEXT = epoxy_glEdgeFlagPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLEDGEFLAGPOINTERLISTIBMPROC epoxy_glEdgeFlagPointerListIBM = epoxy_glEdgeFlagPointerListIBM_global_rewrite_ptr;

PUBLIC PFNGLEDGEFLAGVPROC epoxy_glEdgeFlagv = epoxy_glEdgeFlagv_global_rewrite_ptr;

PUBLIC PFNGLELEMENTPOINTERAPPLEPROC epoxy_glElementPointerAPPLE = epoxy_glElementPointerAPPLE_global_rewrite_ptr;

PUBLIC PFNGLELEMENTPOINTERATIPROC epoxy_glElementPointerATI = epoxy_glElementPointerATI_global_rewrite_ptr;

PUBLIC PFNGLENABLEPROC epoxy_glEnable = epoxy_glEnable_global_rewrite_ptr;

PUBLIC PFNGLENABLECLIENTSTATEPROC epoxy_glEnableClientState = epoxy_glEnableClientState_global_rewrite_ptr;

PUBLIC PFNGLENABLECLIENTSTATEINDEXEDEXTPROC epoxy_glEnableClientStateIndexedEXT = epoxy_glEnableClientStateIndexedEXT_global_rewrite_ptr;

PUBLIC PFNGLENABLECLIENTSTATEIEXTPROC epoxy_glEnableClientStateiEXT = epoxy_glEnableClientStateiEXT_global_rewrite_ptr;

PUBLIC PFNGLENABLEDRIVERCONTROLQCOMPROC epoxy_glEnableDriverControlQCOM = epoxy_glEnableDriverControlQCOM_global_rewrite_ptr;

PUBLIC PFNGLENABLEINDEXEDEXTPROC epoxy_glEnableIndexedEXT = epoxy_glEnableIndexedEXT_global_rewrite_ptr;

PUBLIC PFNGLENABLEVARIANTCLIENTSTATEEXTPROC epoxy_glEnableVariantClientStateEXT = epoxy_glEnableVariantClientStateEXT_global_rewrite_ptr;

PUBLIC PFNGLENABLEVERTEXARRAYATTRIBPROC epoxy_glEnableVertexArrayAttrib = epoxy_glEnableVertexArrayAttrib_global_rewrite_ptr;

PUBLIC PFNGLENABLEVERTEXARRAYATTRIBEXTPROC epoxy_glEnableVertexArrayAttribEXT = epoxy_glEnableVertexArrayAttribEXT_global_rewrite_ptr;

PUBLIC PFNGLENABLEVERTEXARRAYEXTPROC epoxy_glEnableVertexArrayEXT = epoxy_glEnableVertexArrayEXT_global_rewrite_ptr;

PUBLIC PFNGLENABLEVERTEXATTRIBAPPLEPROC epoxy_glEnableVertexAttribAPPLE = epoxy_glEnableVertexAttribAPPLE_global_rewrite_ptr;

PUBLIC PFNGLENABLEVERTEXATTRIBARRAYPROC epoxy_glEnableVertexAttribArray = epoxy_glEnableVertexAttribArray_global_rewrite_ptr;

PUBLIC PFNGLENABLEVERTEXATTRIBARRAYARBPROC epoxy_glEnableVertexAttribArrayARB = epoxy_glEnableVertexAttribArrayARB_global_rewrite_ptr;

PUBLIC PFNGLENABLEIPROC epoxy_glEnablei = epoxy_glEnablei_global_rewrite_ptr;

PUBLIC PFNGLENABLEIEXTPROC epoxy_glEnableiEXT = epoxy_glEnableiEXT_global_rewrite_ptr;

PUBLIC PFNGLENABLEINVPROC epoxy_glEnableiNV = epoxy_glEnableiNV_global_rewrite_ptr;

PUBLIC PFNGLENABLEIOESPROC epoxy_glEnableiOES = epoxy_glEnableiOES_global_rewrite_ptr;

PFNGLENDPROC epoxy_glEnd_unwrapped = epoxy_glEnd_unwrapped_global_rewrite_ptr;

PUBLIC PFNGLENDCONDITIONALRENDERPROC epoxy_glEndConditionalRender = epoxy_glEndConditionalRender_global_rewrite_ptr;

PUBLIC PFNGLENDCONDITIONALRENDERNVPROC epoxy_glEndConditionalRenderNV = epoxy_glEndConditionalRenderNV_global_rewrite_ptr;

PUBLIC PFNGLENDCONDITIONALRENDERNVXPROC epoxy_glEndConditionalRenderNVX = epoxy_glEndConditionalRenderNVX_global_rewrite_ptr;

PUBLIC PFNGLENDFRAGMENTSHADERATIPROC epoxy_glEndFragmentShaderATI = epoxy_glEndFragmentShaderATI_global_rewrite_ptr;

PUBLIC PFNGLENDLISTPROC epoxy_glEndList = epoxy_glEndList_global_rewrite_ptr;

PUBLIC PFNGLENDOCCLUSIONQUERYNVPROC epoxy_glEndOcclusionQueryNV = epoxy_glEndOcclusionQueryNV_global_rewrite_ptr;

PUBLIC PFNGLENDPERFMONITORAMDPROC epoxy_glEndPerfMonitorAMD = epoxy_glEndPerfMonitorAMD_global_rewrite_ptr;

PUBLIC PFNGLENDPERFQUERYINTELPROC epoxy_glEndPerfQueryINTEL = epoxy_glEndPerfQueryINTEL_global_rewrite_ptr;

PUBLIC PFNGLENDQUERYPROC epoxy_glEndQuery = epoxy_glEndQuery_global_rewrite_ptr;

PUBLIC PFNGLENDQUERYARBPROC epoxy_glEndQueryARB = epoxy_glEndQueryARB_global_rewrite_ptr;

PUBLIC PFNGLENDQUERYEXTPROC epoxy_glEndQueryEXT = epoxy_glEndQueryEXT_global_rewrite_ptr;

PUBLIC PFNGLENDQUERYINDEXEDPROC epoxy_glEndQueryIndexed = epoxy_glEndQueryIndexed_global_rewrite_ptr;

PUBLIC PFNGLENDTILINGQCOMPROC epoxy_glEndTilingQCOM = epoxy_glEndTilingQCOM_global_rewrite_ptr;

PUBLIC PFNGLENDTRANSFORMFEEDBACKPROC epoxy_glEndTransformFeedback = epoxy_glEndTransformFeedback_global_rewrite_ptr;

PUBLIC PFNGLENDTRANSFORMFEEDBACKEXTPROC epoxy_glEndTransformFeedbackEXT = epoxy_glEndTransformFeedbackEXT_global_rewrite_ptr;

PUBLIC PFNGLENDTRANSFORMFEEDBACKNVPROC epoxy_glEndTransformFeedbackNV = epoxy_glEndTransformFeedbackNV_global_rewrite_ptr;

PUBLIC PFNGLENDVERTEXSHADEREXTPROC epoxy_glEndVertexShaderEXT = epoxy_glEndVertexShaderEXT_global_rewrite_ptr;

PUBLIC PFNGLENDVIDEOCAPTURENVPROC epoxy_glEndVideoCaptureNV = epoxy_glEndVideoCaptureNV_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD1DPROC epoxy_glEvalCoord1d = epoxy_glEvalCoord1d_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD1DVPROC epoxy_glEvalCoord1dv = epoxy_glEvalCoord1dv_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD1FPROC epoxy_glEvalCoord1f = epoxy_glEvalCoord1f_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD1FVPROC epoxy_glEvalCoord1fv = epoxy_glEvalCoord1fv_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD1XOESPROC epoxy_glEvalCoord1xOES = epoxy_glEvalCoord1xOES_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD1XVOESPROC epoxy_glEvalCoord1xvOES = epoxy_glEvalCoord1xvOES_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD2DPROC epoxy_glEvalCoord2d = epoxy_glEvalCoord2d_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD2DVPROC epoxy_glEvalCoord2dv = epoxy_glEvalCoord2dv_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD2FPROC epoxy_glEvalCoord2f = epoxy_glEvalCoord2f_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD2FVPROC epoxy_glEvalCoord2fv = epoxy_glEvalCoord2fv_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD2XOESPROC epoxy_glEvalCoord2xOES = epoxy_glEvalCoord2xOES_global_rewrite_ptr;

PUBLIC PFNGLEVALCOORD2XVOESPROC epoxy_glEvalCoord2xvOES = epoxy_glEvalCoord2xvOES_global_rewrite_ptr;

PUBLIC PFNGLEVALMAPSNVPROC epoxy_glEvalMapsNV = epoxy_glEvalMapsNV_global_rewrite_ptr;

PUBLIC PFNGLEVALMESH1PROC epoxy_glEvalMesh1 = epoxy_glEvalMesh1_global_rewrite_ptr;

PUBLIC PFNGLEVALMESH2PROC epoxy_glEvalMesh2 = epoxy_glEvalMesh2_global_rewrite_ptr;

PUBLIC PFNGLEVALPOINT1PROC epoxy_glEvalPoint1 = epoxy_glEvalPoint1_global_rewrite_ptr;

PUBLIC PFNGLEVALPOINT2PROC epoxy_glEvalPoint2 = epoxy_glEvalPoint2_global_rewrite_ptr;

PUBLIC PFNGLEXECUTEPROGRAMNVPROC epoxy_glExecuteProgramNV = epoxy_glExecuteProgramNV_global_rewrite_ptr;

PUBLIC PFNGLEXTGETBUFFERPOINTERVQCOMPROC epoxy_glExtGetBufferPointervQCOM = epoxy_glExtGetBufferPointervQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTGETBUFFERSQCOMPROC epoxy_glExtGetBuffersQCOM = epoxy_glExtGetBuffersQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTGETFRAMEBUFFERSQCOMPROC epoxy_glExtGetFramebuffersQCOM = epoxy_glExtGetFramebuffersQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC epoxy_glExtGetProgramBinarySourceQCOM = epoxy_glExtGetProgramBinarySourceQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTGETPROGRAMSQCOMPROC epoxy_glExtGetProgramsQCOM = epoxy_glExtGetProgramsQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTGETRENDERBUFFERSQCOMPROC epoxy_glExtGetRenderbuffersQCOM = epoxy_glExtGetRenderbuffersQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTGETSHADERSQCOMPROC epoxy_glExtGetShadersQCOM = epoxy_glExtGetShadersQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC epoxy_glExtGetTexLevelParameterivQCOM = epoxy_glExtGetTexLevelParameterivQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTGETTEXSUBIMAGEQCOMPROC epoxy_glExtGetTexSubImageQCOM = epoxy_glExtGetTexSubImageQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTGETTEXTURESQCOMPROC epoxy_glExtGetTexturesQCOM = epoxy_glExtGetTexturesQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTISPROGRAMBINARYQCOMPROC epoxy_glExtIsProgramBinaryQCOM = epoxy_glExtIsProgramBinaryQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC epoxy_glExtTexObjectStateOverrideiQCOM = epoxy_glExtTexObjectStateOverrideiQCOM_global_rewrite_ptr;

PUBLIC PFNGLEXTRACTCOMPONENTEXTPROC epoxy_glExtractComponentEXT = epoxy_glExtractComponentEXT_global_rewrite_ptr;

PUBLIC PFNGLFEEDBACKBUFFERPROC epoxy_glFeedbackBuffer = epoxy_glFeedbackBuffer_global_rewrite_ptr;

PUBLIC PFNGLFEEDBACKBUFFERXOESPROC epoxy_glFeedbackBufferxOES = epoxy_glFeedbackBufferxOES_global_rewrite_ptr;

PUBLIC PFNGLFENCESYNCPROC epoxy_glFenceSync = epoxy_glFenceSync_global_rewrite_ptr;

PUBLIC PFNGLFENCESYNCAPPLEPROC epoxy_glFenceSyncAPPLE = epoxy_glFenceSyncAPPLE_global_rewrite_ptr;

PUBLIC PFNGLFINALCOMBINERINPUTNVPROC epoxy_glFinalCombinerInputNV = epoxy_glFinalCombinerInputNV_global_rewrite_ptr;

PUBLIC PFNGLFINISHPROC epoxy_glFinish = epoxy_glFinish_global_rewrite_ptr;

PUBLIC PFNGLFINISHASYNCSGIXPROC epoxy_glFinishAsyncSGIX = epoxy_glFinishAsyncSGIX_global_rewrite_ptr;

PUBLIC PFNGLFINISHFENCEAPPLEPROC epoxy_glFinishFenceAPPLE = epoxy_glFinishFenceAPPLE_global_rewrite_ptr;

PUBLIC PFNGLFINISHFENCENVPROC epoxy_glFinishFenceNV = epoxy_glFinishFenceNV_global_rewrite_ptr;

PUBLIC PFNGLFINISHOBJECTAPPLEPROC epoxy_glFinishObjectAPPLE = epoxy_glFinishObjectAPPLE_global_rewrite_ptr;

PUBLIC PFNGLFINISHTEXTURESUNXPROC epoxy_glFinishTextureSUNX = epoxy_glFinishTextureSUNX_global_rewrite_ptr;

PUBLIC PFNGLFLUSHPROC epoxy_glFlush = epoxy_glFlush_global_rewrite_ptr;

PUBLIC PFNGLFLUSHMAPPEDBUFFERRANGEPROC epoxy_glFlushMappedBufferRange = epoxy_glFlushMappedBufferRange_global_rewrite_ptr;

PUBLIC PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC epoxy_glFlushMappedBufferRangeAPPLE = epoxy_glFlushMappedBufferRangeAPPLE_global_rewrite_ptr;

PUBLIC PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC epoxy_glFlushMappedBufferRangeEXT = epoxy_glFlushMappedBufferRangeEXT_global_rewrite_ptr;

PUBLIC PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC epoxy_glFlushMappedNamedBufferRange = epoxy_glFlushMappedNamedBufferRange_global_rewrite_ptr;

PUBLIC PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC epoxy_glFlushMappedNamedBufferRangeEXT = epoxy_glFlushMappedNamedBufferRangeEXT_global_rewrite_ptr;

PUBLIC PFNGLFLUSHPIXELDATARANGENVPROC epoxy_glFlushPixelDataRangeNV = epoxy_glFlushPixelDataRangeNV_global_rewrite_ptr;

PUBLIC PFNGLFLUSHRASTERSGIXPROC epoxy_glFlushRasterSGIX = epoxy_glFlushRasterSGIX_global_rewrite_ptr;

PUBLIC PFNGLFLUSHSTATICDATAIBMPROC epoxy_glFlushStaticDataIBM = epoxy_glFlushStaticDataIBM_global_rewrite_ptr;

PUBLIC PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC epoxy_glFlushVertexArrayRangeAPPLE = epoxy_glFlushVertexArrayRangeAPPLE_global_rewrite_ptr;

PUBLIC PFNGLFLUSHVERTEXARRAYRANGENVPROC epoxy_glFlushVertexArrayRangeNV = epoxy_glFlushVertexArrayRangeNV_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDFORMATNVPROC epoxy_glFogCoordFormatNV = epoxy_glFogCoordFormatNV_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDPOINTERPROC epoxy_glFogCoordPointer = epoxy_glFogCoordPointer_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDPOINTEREXTPROC epoxy_glFogCoordPointerEXT = epoxy_glFogCoordPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDPOINTERLISTIBMPROC epoxy_glFogCoordPointerListIBM = epoxy_glFogCoordPointerListIBM_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDDPROC epoxy_glFogCoordd = epoxy_glFogCoordd_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDDEXTPROC epoxy_glFogCoorddEXT = epoxy_glFogCoorddEXT_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDDVPROC epoxy_glFogCoorddv = epoxy_glFogCoorddv_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDDVEXTPROC epoxy_glFogCoorddvEXT = epoxy_glFogCoorddvEXT_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDFPROC epoxy_glFogCoordf = epoxy_glFogCoordf_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDFEXTPROC epoxy_glFogCoordfEXT = epoxy_glFogCoordfEXT_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDFVPROC epoxy_glFogCoordfv = epoxy_glFogCoordfv_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDFVEXTPROC epoxy_glFogCoordfvEXT = epoxy_glFogCoordfvEXT_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDHNVPROC epoxy_glFogCoordhNV = epoxy_glFogCoordhNV_global_rewrite_ptr;

PUBLIC PFNGLFOGCOORDHVNVPROC epoxy_glFogCoordhvNV = epoxy_glFogCoordhvNV_global_rewrite_ptr;

PUBLIC PFNGLFOGFUNCSGISPROC epoxy_glFogFuncSGIS = epoxy_glFogFuncSGIS_global_rewrite_ptr;

PUBLIC PFNGLFOGFPROC epoxy_glFogf = epoxy_glFogf_global_rewrite_ptr;

PUBLIC PFNGLFOGFVPROC epoxy_glFogfv = epoxy_glFogfv_global_rewrite_ptr;

PUBLIC PFNGLFOGIPROC epoxy_glFogi = epoxy_glFogi_global_rewrite_ptr;

PUBLIC PFNGLFOGIVPROC epoxy_glFogiv = epoxy_glFogiv_global_rewrite_ptr;

PUBLIC PFNGLFOGXPROC epoxy_glFogx = epoxy_glFogx_global_rewrite_ptr;

PUBLIC PFNGLFOGXOESPROC epoxy_glFogxOES = epoxy_glFogxOES_global_rewrite_ptr;

PUBLIC PFNGLFOGXVPROC epoxy_glFogxv = epoxy_glFogxv_global_rewrite_ptr;

PUBLIC PFNGLFOGXVOESPROC epoxy_glFogxvOES = epoxy_glFogxvOES_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTCOLORMATERIALSGIXPROC epoxy_glFragmentColorMaterialSGIX = epoxy_glFragmentColorMaterialSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTCOVERAGECOLORNVPROC epoxy_glFragmentCoverageColorNV = epoxy_glFragmentCoverageColorNV_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTLIGHTMODELFSGIXPROC epoxy_glFragmentLightModelfSGIX = epoxy_glFragmentLightModelfSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTLIGHTMODELFVSGIXPROC epoxy_glFragmentLightModelfvSGIX = epoxy_glFragmentLightModelfvSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTLIGHTMODELISGIXPROC epoxy_glFragmentLightModeliSGIX = epoxy_glFragmentLightModeliSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTLIGHTMODELIVSGIXPROC epoxy_glFragmentLightModelivSGIX = epoxy_glFragmentLightModelivSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTLIGHTFSGIXPROC epoxy_glFragmentLightfSGIX = epoxy_glFragmentLightfSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTLIGHTFVSGIXPROC epoxy_glFragmentLightfvSGIX = epoxy_glFragmentLightfvSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTLIGHTISGIXPROC epoxy_glFragmentLightiSGIX = epoxy_glFragmentLightiSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTLIGHTIVSGIXPROC epoxy_glFragmentLightivSGIX = epoxy_glFragmentLightivSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTMATERIALFSGIXPROC epoxy_glFragmentMaterialfSGIX = epoxy_glFragmentMaterialfSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTMATERIALFVSGIXPROC epoxy_glFragmentMaterialfvSGIX = epoxy_glFragmentMaterialfvSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTMATERIALISGIXPROC epoxy_glFragmentMaterialiSGIX = epoxy_glFragmentMaterialiSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAGMENTMATERIALIVSGIXPROC epoxy_glFragmentMaterialivSGIX = epoxy_glFragmentMaterialivSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAMETERMINATORGREMEDYPROC epoxy_glFrameTerminatorGREMEDY = epoxy_glFrameTerminatorGREMEDY_global_rewrite_ptr;

PUBLIC PFNGLFRAMEZOOMSGIXPROC epoxy_glFrameZoomSGIX = epoxy_glFrameZoomSGIX_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC epoxy_glFramebufferDrawBufferEXT = epoxy_glFramebufferDrawBufferEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC epoxy_glFramebufferDrawBuffersEXT = epoxy_glFramebufferDrawBuffersEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERPARAMETERIPROC epoxy_glFramebufferParameteri = epoxy_glFramebufferParameteri_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERREADBUFFEREXTPROC epoxy_glFramebufferReadBufferEXT = epoxy_glFramebufferReadBufferEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERRENDERBUFFERPROC epoxy_glFramebufferRenderbuffer = epoxy_glFramebufferRenderbuffer_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC epoxy_glFramebufferRenderbufferEXT = epoxy_glFramebufferRenderbufferEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERRENDERBUFFEROESPROC epoxy_glFramebufferRenderbufferOES = epoxy_glFramebufferRenderbufferOES_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC epoxy_glFramebufferSampleLocationsfvNV = epoxy_glFramebufferSampleLocationsfvNV_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTUREPROC epoxy_glFramebufferTexture = epoxy_glFramebufferTexture_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE1DPROC epoxy_glFramebufferTexture1D = epoxy_glFramebufferTexture1D_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE1DEXTPROC epoxy_glFramebufferTexture1DEXT = epoxy_glFramebufferTexture1DEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE2DPROC epoxy_glFramebufferTexture2D = epoxy_glFramebufferTexture2D_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE2DEXTPROC epoxy_glFramebufferTexture2DEXT = epoxy_glFramebufferTexture2DEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC epoxy_glFramebufferTexture2DMultisampleEXT = epoxy_glFramebufferTexture2DMultisampleEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC epoxy_glFramebufferTexture2DMultisampleIMG = epoxy_glFramebufferTexture2DMultisampleIMG_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE2DOESPROC epoxy_glFramebufferTexture2DOES = epoxy_glFramebufferTexture2DOES_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE3DPROC epoxy_glFramebufferTexture3D = epoxy_glFramebufferTexture3D_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE3DEXTPROC epoxy_glFramebufferTexture3DEXT = epoxy_glFramebufferTexture3DEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURE3DOESPROC epoxy_glFramebufferTexture3DOES = epoxy_glFramebufferTexture3DOES_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTUREARBPROC epoxy_glFramebufferTextureARB = epoxy_glFramebufferTextureARB_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTUREEXTPROC epoxy_glFramebufferTextureEXT = epoxy_glFramebufferTextureEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTUREFACEARBPROC epoxy_glFramebufferTextureFaceARB = epoxy_glFramebufferTextureFaceARB_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC epoxy_glFramebufferTextureFaceEXT = epoxy_glFramebufferTextureFaceEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURELAYERPROC epoxy_glFramebufferTextureLayer = epoxy_glFramebufferTextureLayer_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURELAYERARBPROC epoxy_glFramebufferTextureLayerARB = epoxy_glFramebufferTextureLayerARB_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC epoxy_glFramebufferTextureLayerEXT = epoxy_glFramebufferTextureLayerEXT_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC epoxy_glFramebufferTextureMultiviewOVR = epoxy_glFramebufferTextureMultiviewOVR_global_rewrite_ptr;

PUBLIC PFNGLFRAMEBUFFERTEXTUREOESPROC epoxy_glFramebufferTextureOES = epoxy_glFramebufferTextureOES_global_rewrite_ptr;

PUBLIC PFNGLFREEOBJECTBUFFERATIPROC epoxy_glFreeObjectBufferATI = epoxy_glFreeObjectBufferATI_global_rewrite_ptr;

PUBLIC PFNGLFRONTFACEPROC epoxy_glFrontFace = epoxy_glFrontFace_global_rewrite_ptr;

PUBLIC PFNGLFRUSTUMPROC epoxy_glFrustum = epoxy_glFrustum_global_rewrite_ptr;

PUBLIC PFNGLFRUSTUMFPROC epoxy_glFrustumf = epoxy_glFrustumf_global_rewrite_ptr;

PUBLIC PFNGLFRUSTUMFOESPROC epoxy_glFrustumfOES = epoxy_glFrustumfOES_global_rewrite_ptr;

PUBLIC PFNGLFRUSTUMXPROC epoxy_glFrustumx = epoxy_glFrustumx_global_rewrite_ptr;

PUBLIC PFNGLFRUSTUMXOESPROC epoxy_glFrustumxOES = epoxy_glFrustumxOES_global_rewrite_ptr;

PUBLIC PFNGLGENASYNCMARKERSSGIXPROC epoxy_glGenAsyncMarkersSGIX = epoxy_glGenAsyncMarkersSGIX_global_rewrite_ptr;

PUBLIC PFNGLGENBUFFERSPROC epoxy_glGenBuffers = epoxy_glGenBuffers_global_rewrite_ptr;

PUBLIC PFNGLGENBUFFERSARBPROC epoxy_glGenBuffersARB = epoxy_glGenBuffersARB_global_rewrite_ptr;

PUBLIC PFNGLGENFENCESAPPLEPROC epoxy_glGenFencesAPPLE = epoxy_glGenFencesAPPLE_global_rewrite_ptr;

PUBLIC PFNGLGENFENCESNVPROC epoxy_glGenFencesNV = epoxy_glGenFencesNV_global_rewrite_ptr;

PUBLIC PFNGLGENFRAGMENTSHADERSATIPROC epoxy_glGenFragmentShadersATI = epoxy_glGenFragmentShadersATI_global_rewrite_ptr;

PUBLIC PFNGLGENFRAMEBUFFERSPROC epoxy_glGenFramebuffers = epoxy_glGenFramebuffers_global_rewrite_ptr;

PUBLIC PFNGLGENFRAMEBUFFERSEXTPROC epoxy_glGenFramebuffersEXT = epoxy_glGenFramebuffersEXT_global_rewrite_ptr;

PUBLIC PFNGLGENFRAMEBUFFERSOESPROC epoxy_glGenFramebuffersOES = epoxy_glGenFramebuffersOES_global_rewrite_ptr;

PUBLIC PFNGLGENLISTSPROC epoxy_glGenLists = epoxy_glGenLists_global_rewrite_ptr;

PUBLIC PFNGLGENNAMESAMDPROC epoxy_glGenNamesAMD = epoxy_glGenNamesAMD_global_rewrite_ptr;

PUBLIC PFNGLGENOCCLUSIONQUERIESNVPROC epoxy_glGenOcclusionQueriesNV = epoxy_glGenOcclusionQueriesNV_global_rewrite_ptr;

PUBLIC PFNGLGENPATHSNVPROC epoxy_glGenPathsNV = epoxy_glGenPathsNV_global_rewrite_ptr;

PUBLIC PFNGLGENPERFMONITORSAMDPROC epoxy_glGenPerfMonitorsAMD = epoxy_glGenPerfMonitorsAMD_global_rewrite_ptr;

PUBLIC PFNGLGENPROGRAMPIPELINESPROC epoxy_glGenProgramPipelines = epoxy_glGenProgramPipelines_global_rewrite_ptr;

PUBLIC PFNGLGENPROGRAMPIPELINESEXTPROC epoxy_glGenProgramPipelinesEXT = epoxy_glGenProgramPipelinesEXT_global_rewrite_ptr;

PUBLIC PFNGLGENPROGRAMSARBPROC epoxy_glGenProgramsARB = epoxy_glGenProgramsARB_global_rewrite_ptr;

PUBLIC PFNGLGENPROGRAMSNVPROC epoxy_glGenProgramsNV = epoxy_glGenProgramsNV_global_rewrite_ptr;

PUBLIC PFNGLGENQUERIESPROC epoxy_glGenQueries = epoxy_glGenQueries_global_rewrite_ptr;

PUBLIC PFNGLGENQUERIESARBPROC epoxy_glGenQueriesARB = epoxy_glGenQueriesARB_global_rewrite_ptr;

PUBLIC PFNGLGENQUERIESEXTPROC epoxy_glGenQueriesEXT = epoxy_glGenQueriesEXT_global_rewrite_ptr;

PUBLIC PFNGLGENRENDERBUFFERSPROC epoxy_glGenRenderbuffers = epoxy_glGenRenderbuffers_global_rewrite_ptr;

PUBLIC PFNGLGENRENDERBUFFERSEXTPROC epoxy_glGenRenderbuffersEXT = epoxy_glGenRenderbuffersEXT_global_rewrite_ptr;

PUBLIC PFNGLGENRENDERBUFFERSOESPROC epoxy_glGenRenderbuffersOES = epoxy_glGenRenderbuffersOES_global_rewrite_ptr;

PUBLIC PFNGLGENSAMPLERSPROC epoxy_glGenSamplers = epoxy_glGenSamplers_global_rewrite_ptr;

PUBLIC PFNGLGENSYMBOLSEXTPROC epoxy_glGenSymbolsEXT = epoxy_glGenSymbolsEXT_global_rewrite_ptr;

PUBLIC PFNGLGENTEXTURESPROC epoxy_glGenTextures = epoxy_glGenTextures_global_rewrite_ptr;

PUBLIC PFNGLGENTEXTURESEXTPROC epoxy_glGenTexturesEXT = epoxy_glGenTexturesEXT_global_rewrite_ptr;

PUBLIC PFNGLGENTRANSFORMFEEDBACKSPROC epoxy_glGenTransformFeedbacks = epoxy_glGenTransformFeedbacks_global_rewrite_ptr;

PUBLIC PFNGLGENTRANSFORMFEEDBACKSNVPROC epoxy_glGenTransformFeedbacksNV = epoxy_glGenTransformFeedbacksNV_global_rewrite_ptr;

PUBLIC PFNGLGENVERTEXARRAYSPROC epoxy_glGenVertexArrays = epoxy_glGenVertexArrays_global_rewrite_ptr;

PUBLIC PFNGLGENVERTEXARRAYSAPPLEPROC epoxy_glGenVertexArraysAPPLE = epoxy_glGenVertexArraysAPPLE_global_rewrite_ptr;

PUBLIC PFNGLGENVERTEXARRAYSOESPROC epoxy_glGenVertexArraysOES = epoxy_glGenVertexArraysOES_global_rewrite_ptr;

PUBLIC PFNGLGENVERTEXSHADERSEXTPROC epoxy_glGenVertexShadersEXT = epoxy_glGenVertexShadersEXT_global_rewrite_ptr;

PUBLIC PFNGLGENERATEMIPMAPPROC epoxy_glGenerateMipmap = epoxy_glGenerateMipmap_global_rewrite_ptr;

PUBLIC PFNGLGENERATEMIPMAPEXTPROC epoxy_glGenerateMipmapEXT = epoxy_glGenerateMipmapEXT_global_rewrite_ptr;

PUBLIC PFNGLGENERATEMIPMAPOESPROC epoxy_glGenerateMipmapOES = epoxy_glGenerateMipmapOES_global_rewrite_ptr;

PUBLIC PFNGLGENERATEMULTITEXMIPMAPEXTPROC epoxy_glGenerateMultiTexMipmapEXT = epoxy_glGenerateMultiTexMipmapEXT_global_rewrite_ptr;

PUBLIC PFNGLGENERATETEXTUREMIPMAPPROC epoxy_glGenerateTextureMipmap = epoxy_glGenerateTextureMipmap_global_rewrite_ptr;

PUBLIC PFNGLGENERATETEXTUREMIPMAPEXTPROC epoxy_glGenerateTextureMipmapEXT = epoxy_glGenerateTextureMipmapEXT_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC epoxy_glGetActiveAtomicCounterBufferiv = epoxy_glGetActiveAtomicCounterBufferiv_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEATTRIBPROC epoxy_glGetActiveAttrib = epoxy_glGetActiveAttrib_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEATTRIBARBPROC epoxy_glGetActiveAttribARB = epoxy_glGetActiveAttribARB_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVESUBROUTINENAMEPROC epoxy_glGetActiveSubroutineName = epoxy_glGetActiveSubroutineName_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC epoxy_glGetActiveSubroutineUniformName = epoxy_glGetActiveSubroutineUniformName_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC epoxy_glGetActiveSubroutineUniformiv = epoxy_glGetActiveSubroutineUniformiv_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEUNIFORMPROC epoxy_glGetActiveUniform = epoxy_glGetActiveUniform_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEUNIFORMARBPROC epoxy_glGetActiveUniformARB = epoxy_glGetActiveUniformARB_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC epoxy_glGetActiveUniformBlockName = epoxy_glGetActiveUniformBlockName_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEUNIFORMBLOCKIVPROC epoxy_glGetActiveUniformBlockiv = epoxy_glGetActiveUniformBlockiv_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEUNIFORMNAMEPROC epoxy_glGetActiveUniformName = epoxy_glGetActiveUniformName_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEUNIFORMSIVPROC epoxy_glGetActiveUniformsiv = epoxy_glGetActiveUniformsiv_global_rewrite_ptr;

PUBLIC PFNGLGETACTIVEVARYINGNVPROC epoxy_glGetActiveVaryingNV = epoxy_glGetActiveVaryingNV_global_rewrite_ptr;

PUBLIC PFNGLGETARRAYOBJECTFVATIPROC epoxy_glGetArrayObjectfvATI = epoxy_glGetArrayObjectfvATI_global_rewrite_ptr;

PUBLIC PFNGLGETARRAYOBJECTIVATIPROC epoxy_glGetArrayObjectivATI = epoxy_glGetArrayObjectivATI_global_rewrite_ptr;

PUBLIC PFNGLGETATTACHEDOBJECTSARBPROC epoxy_glGetAttachedObjectsARB = epoxy_glGetAttachedObjectsARB_global_rewrite_ptr;

PUBLIC PFNGLGETATTACHEDSHADERSPROC epoxy_glGetAttachedShaders = epoxy_glGetAttachedShaders_global_rewrite_ptr;

PUBLIC PFNGLGETATTRIBLOCATIONPROC epoxy_glGetAttribLocation = epoxy_glGetAttribLocation_global_rewrite_ptr;

PUBLIC PFNGLGETATTRIBLOCATIONARBPROC epoxy_glGetAttribLocationARB = epoxy_glGetAttribLocationARB_global_rewrite_ptr;

PUBLIC PFNGLGETBOOLEANINDEXEDVEXTPROC epoxy_glGetBooleanIndexedvEXT = epoxy_glGetBooleanIndexedvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETBOOLEANI_VPROC epoxy_glGetBooleani_v = epoxy_glGetBooleani_v_global_rewrite_ptr;

PUBLIC PFNGLGETBOOLEANVPROC epoxy_glGetBooleanv = epoxy_glGetBooleanv_global_rewrite_ptr;

PUBLIC PFNGLGETBUFFERPARAMETERI64VPROC epoxy_glGetBufferParameteri64v = epoxy_glGetBufferParameteri64v_global_rewrite_ptr;

PUBLIC PFNGLGETBUFFERPARAMETERIVPROC epoxy_glGetBufferParameteriv = epoxy_glGetBufferParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETBUFFERPARAMETERIVARBPROC epoxy_glGetBufferParameterivARB = epoxy_glGetBufferParameterivARB_global_rewrite_ptr;

PUBLIC PFNGLGETBUFFERPARAMETERUI64VNVPROC epoxy_glGetBufferParameterui64vNV = epoxy_glGetBufferParameterui64vNV_global_rewrite_ptr;

PUBLIC PFNGLGETBUFFERPOINTERVPROC epoxy_glGetBufferPointerv = epoxy_glGetBufferPointerv_global_rewrite_ptr;

PUBLIC PFNGLGETBUFFERPOINTERVARBPROC epoxy_glGetBufferPointervARB = epoxy_glGetBufferPointervARB_global_rewrite_ptr;

PUBLIC PFNGLGETBUFFERPOINTERVOESPROC epoxy_glGetBufferPointervOES = epoxy_glGetBufferPointervOES_global_rewrite_ptr;

PUBLIC PFNGLGETBUFFERSUBDATAPROC epoxy_glGetBufferSubData = epoxy_glGetBufferSubData_global_rewrite_ptr;

PUBLIC PFNGLGETBUFFERSUBDATAARBPROC epoxy_glGetBufferSubDataARB = epoxy_glGetBufferSubDataARB_global_rewrite_ptr;

PUBLIC PFNGLGETCLIPPLANEPROC epoxy_glGetClipPlane = epoxy_glGetClipPlane_global_rewrite_ptr;

PUBLIC PFNGLGETCLIPPLANEFPROC epoxy_glGetClipPlanef = epoxy_glGetClipPlanef_global_rewrite_ptr;

PUBLIC PFNGLGETCLIPPLANEFOESPROC epoxy_glGetClipPlanefOES = epoxy_glGetClipPlanefOES_global_rewrite_ptr;

PUBLIC PFNGLGETCLIPPLANEXPROC epoxy_glGetClipPlanex = epoxy_glGetClipPlanex_global_rewrite_ptr;

PUBLIC PFNGLGETCLIPPLANEXOESPROC epoxy_glGetClipPlanexOES = epoxy_glGetClipPlanexOES_global_rewrite_ptr;

PUBLIC PFNGLGETCOLORTABLEPROC epoxy_glGetColorTable = epoxy_glGetColorTable_global_rewrite_ptr;

PUBLIC PFNGLGETCOLORTABLEEXTPROC epoxy_glGetColorTableEXT = epoxy_glGetColorTableEXT_global_rewrite_ptr;

PUBLIC PFNGLGETCOLORTABLEPARAMETERFVPROC epoxy_glGetColorTableParameterfv = epoxy_glGetColorTableParameterfv_global_rewrite_ptr;

PUBLIC PFNGLGETCOLORTABLEPARAMETERFVEXTPROC epoxy_glGetColorTableParameterfvEXT = epoxy_glGetColorTableParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETCOLORTABLEPARAMETERFVSGIPROC epoxy_glGetColorTableParameterfvSGI = epoxy_glGetColorTableParameterfvSGI_global_rewrite_ptr;

PUBLIC PFNGLGETCOLORTABLEPARAMETERIVPROC epoxy_glGetColorTableParameteriv = epoxy_glGetColorTableParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETCOLORTABLEPARAMETERIVEXTPROC epoxy_glGetColorTableParameterivEXT = epoxy_glGetColorTableParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETCOLORTABLEPARAMETERIVSGIPROC epoxy_glGetColorTableParameterivSGI = epoxy_glGetColorTableParameterivSGI_global_rewrite_ptr;

PUBLIC PFNGLGETCOLORTABLESGIPROC epoxy_glGetColorTableSGI = epoxy_glGetColorTableSGI_global_rewrite_ptr;

PUBLIC PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC epoxy_glGetCombinerInputParameterfvNV = epoxy_glGetCombinerInputParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC epoxy_glGetCombinerInputParameterivNV = epoxy_glGetCombinerInputParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC epoxy_glGetCombinerOutputParameterfvNV = epoxy_glGetCombinerOutputParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC epoxy_glGetCombinerOutputParameterivNV = epoxy_glGetCombinerOutputParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC epoxy_glGetCombinerStageParameterfvNV = epoxy_glGetCombinerStageParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETCOMMANDHEADERNVPROC epoxy_glGetCommandHeaderNV = epoxy_glGetCommandHeaderNV_global_rewrite_ptr;

PUBLIC PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC epoxy_glGetCompressedMultiTexImageEXT = epoxy_glGetCompressedMultiTexImageEXT_global_rewrite_ptr;

PUBLIC PFNGLGETCOMPRESSEDTEXIMAGEPROC epoxy_glGetCompressedTexImage = epoxy_glGetCompressedTexImage_global_rewrite_ptr;

PUBLIC PFNGLGETCOMPRESSEDTEXIMAGEARBPROC epoxy_glGetCompressedTexImageARB = epoxy_glGetCompressedTexImageARB_global_rewrite_ptr;

PUBLIC PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC epoxy_glGetCompressedTextureImage = epoxy_glGetCompressedTextureImage_global_rewrite_ptr;

PUBLIC PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC epoxy_glGetCompressedTextureImageEXT = epoxy_glGetCompressedTextureImageEXT_global_rewrite_ptr;

PUBLIC PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC epoxy_glGetCompressedTextureSubImage = epoxy_glGetCompressedTextureSubImage_global_rewrite_ptr;

PUBLIC PFNGLGETCONVOLUTIONFILTERPROC epoxy_glGetConvolutionFilter = epoxy_glGetConvolutionFilter_global_rewrite_ptr;

PUBLIC PFNGLGETCONVOLUTIONFILTEREXTPROC epoxy_glGetConvolutionFilterEXT = epoxy_glGetConvolutionFilterEXT_global_rewrite_ptr;

PUBLIC PFNGLGETCONVOLUTIONPARAMETERFVPROC epoxy_glGetConvolutionParameterfv = epoxy_glGetConvolutionParameterfv_global_rewrite_ptr;

PUBLIC PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC epoxy_glGetConvolutionParameterfvEXT = epoxy_glGetConvolutionParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETCONVOLUTIONPARAMETERIVPROC epoxy_glGetConvolutionParameteriv = epoxy_glGetConvolutionParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC epoxy_glGetConvolutionParameterivEXT = epoxy_glGetConvolutionParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETCONVOLUTIONPARAMETERXVOESPROC epoxy_glGetConvolutionParameterxvOES = epoxy_glGetConvolutionParameterxvOES_global_rewrite_ptr;

PUBLIC PFNGLGETCOVERAGEMODULATIONTABLENVPROC epoxy_glGetCoverageModulationTableNV = epoxy_glGetCoverageModulationTableNV_global_rewrite_ptr;

PUBLIC PFNGLGETDEBUGMESSAGELOGPROC epoxy_glGetDebugMessageLog = epoxy_glGetDebugMessageLog_global_rewrite_ptr;

PUBLIC PFNGLGETDEBUGMESSAGELOGAMDPROC epoxy_glGetDebugMessageLogAMD = epoxy_glGetDebugMessageLogAMD_global_rewrite_ptr;

PUBLIC PFNGLGETDEBUGMESSAGELOGARBPROC epoxy_glGetDebugMessageLogARB = epoxy_glGetDebugMessageLogARB_global_rewrite_ptr;

PUBLIC PFNGLGETDEBUGMESSAGELOGKHRPROC epoxy_glGetDebugMessageLogKHR = epoxy_glGetDebugMessageLogKHR_global_rewrite_ptr;

PUBLIC PFNGLGETDETAILTEXFUNCSGISPROC epoxy_glGetDetailTexFuncSGIS = epoxy_glGetDetailTexFuncSGIS_global_rewrite_ptr;

PUBLIC PFNGLGETDOUBLEINDEXEDVEXTPROC epoxy_glGetDoubleIndexedvEXT = epoxy_glGetDoubleIndexedvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETDOUBLEI_VPROC epoxy_glGetDoublei_v = epoxy_glGetDoublei_v_global_rewrite_ptr;

PUBLIC PFNGLGETDOUBLEI_VEXTPROC epoxy_glGetDoublei_vEXT = epoxy_glGetDoublei_vEXT_global_rewrite_ptr;

PUBLIC PFNGLGETDOUBLEVPROC epoxy_glGetDoublev = epoxy_glGetDoublev_global_rewrite_ptr;

PUBLIC PFNGLGETDRIVERCONTROLSTRINGQCOMPROC epoxy_glGetDriverControlStringQCOM = epoxy_glGetDriverControlStringQCOM_global_rewrite_ptr;

PUBLIC PFNGLGETDRIVERCONTROLSQCOMPROC epoxy_glGetDriverControlsQCOM = epoxy_glGetDriverControlsQCOM_global_rewrite_ptr;

PUBLIC PFNGLGETERRORPROC epoxy_glGetError = epoxy_glGetError_global_rewrite_ptr;

PUBLIC PFNGLGETFENCEIVNVPROC epoxy_glGetFenceivNV = epoxy_glGetFenceivNV_global_rewrite_ptr;

PUBLIC PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC epoxy_glGetFinalCombinerInputParameterfvNV = epoxy_glGetFinalCombinerInputParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC epoxy_glGetFinalCombinerInputParameterivNV = epoxy_glGetFinalCombinerInputParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLGETFIRSTPERFQUERYIDINTELPROC epoxy_glGetFirstPerfQueryIdINTEL = epoxy_glGetFirstPerfQueryIdINTEL_global_rewrite_ptr;

PUBLIC PFNGLGETFIXEDVPROC epoxy_glGetFixedv = epoxy_glGetFixedv_global_rewrite_ptr;

PUBLIC PFNGLGETFIXEDVOESPROC epoxy_glGetFixedvOES = epoxy_glGetFixedvOES_global_rewrite_ptr;

PUBLIC PFNGLGETFLOATINDEXEDVEXTPROC epoxy_glGetFloatIndexedvEXT = epoxy_glGetFloatIndexedvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETFLOATI_VPROC epoxy_glGetFloati_v = epoxy_glGetFloati_v_global_rewrite_ptr;

PUBLIC PFNGLGETFLOATI_VEXTPROC epoxy_glGetFloati_vEXT = epoxy_glGetFloati_vEXT_global_rewrite_ptr;

PUBLIC PFNGLGETFLOATI_VNVPROC epoxy_glGetFloati_vNV = epoxy_glGetFloati_vNV_global_rewrite_ptr;

PUBLIC PFNGLGETFLOATVPROC epoxy_glGetFloatv = epoxy_glGetFloatv_global_rewrite_ptr;

PUBLIC PFNGLGETFOGFUNCSGISPROC epoxy_glGetFogFuncSGIS = epoxy_glGetFogFuncSGIS_global_rewrite_ptr;

PUBLIC PFNGLGETFRAGDATAINDEXPROC epoxy_glGetFragDataIndex = epoxy_glGetFragDataIndex_global_rewrite_ptr;

PUBLIC PFNGLGETFRAGDATALOCATIONPROC epoxy_glGetFragDataLocation = epoxy_glGetFragDataLocation_global_rewrite_ptr;

PUBLIC PFNGLGETFRAGDATALOCATIONEXTPROC epoxy_glGetFragDataLocationEXT = epoxy_glGetFragDataLocationEXT_global_rewrite_ptr;

PUBLIC PFNGLGETFRAGMENTLIGHTFVSGIXPROC epoxy_glGetFragmentLightfvSGIX = epoxy_glGetFragmentLightfvSGIX_global_rewrite_ptr;

PUBLIC PFNGLGETFRAGMENTLIGHTIVSGIXPROC epoxy_glGetFragmentLightivSGIX = epoxy_glGetFragmentLightivSGIX_global_rewrite_ptr;

PUBLIC PFNGLGETFRAGMENTMATERIALFVSGIXPROC epoxy_glGetFragmentMaterialfvSGIX = epoxy_glGetFragmentMaterialfvSGIX_global_rewrite_ptr;

PUBLIC PFNGLGETFRAGMENTMATERIALIVSGIXPROC epoxy_glGetFragmentMaterialivSGIX = epoxy_glGetFragmentMaterialivSGIX_global_rewrite_ptr;

PUBLIC PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC epoxy_glGetFramebufferAttachmentParameteriv = epoxy_glGetFramebufferAttachmentParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC epoxy_glGetFramebufferAttachmentParameterivEXT = epoxy_glGetFramebufferAttachmentParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC epoxy_glGetFramebufferAttachmentParameterivOES = epoxy_glGetFramebufferAttachmentParameterivOES_global_rewrite_ptr;

PUBLIC PFNGLGETFRAMEBUFFERPARAMETERIVPROC epoxy_glGetFramebufferParameteriv = epoxy_glGetFramebufferParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC epoxy_glGetFramebufferParameterivEXT = epoxy_glGetFramebufferParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETGRAPHICSRESETSTATUSPROC epoxy_glGetGraphicsResetStatus = epoxy_glGetGraphicsResetStatus_global_rewrite_ptr;

PUBLIC PFNGLGETGRAPHICSRESETSTATUSARBPROC epoxy_glGetGraphicsResetStatusARB = epoxy_glGetGraphicsResetStatusARB_global_rewrite_ptr;

PUBLIC PFNGLGETGRAPHICSRESETSTATUSEXTPROC epoxy_glGetGraphicsResetStatusEXT = epoxy_glGetGraphicsResetStatusEXT_global_rewrite_ptr;

PUBLIC PFNGLGETGRAPHICSRESETSTATUSKHRPROC epoxy_glGetGraphicsResetStatusKHR = epoxy_glGetGraphicsResetStatusKHR_global_rewrite_ptr;

PUBLIC PFNGLGETHANDLEARBPROC epoxy_glGetHandleARB = epoxy_glGetHandleARB_global_rewrite_ptr;

PUBLIC PFNGLGETHISTOGRAMPROC epoxy_glGetHistogram = epoxy_glGetHistogram_global_rewrite_ptr;

PUBLIC PFNGLGETHISTOGRAMEXTPROC epoxy_glGetHistogramEXT = epoxy_glGetHistogramEXT_global_rewrite_ptr;

PUBLIC PFNGLGETHISTOGRAMPARAMETERFVPROC epoxy_glGetHistogramParameterfv = epoxy_glGetHistogramParameterfv_global_rewrite_ptr;

PUBLIC PFNGLGETHISTOGRAMPARAMETERFVEXTPROC epoxy_glGetHistogramParameterfvEXT = epoxy_glGetHistogramParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETHISTOGRAMPARAMETERIVPROC epoxy_glGetHistogramParameteriv = epoxy_glGetHistogramParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETHISTOGRAMPARAMETERIVEXTPROC epoxy_glGetHistogramParameterivEXT = epoxy_glGetHistogramParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETHISTOGRAMPARAMETERXVOESPROC epoxy_glGetHistogramParameterxvOES = epoxy_glGetHistogramParameterxvOES_global_rewrite_ptr;

PUBLIC PFNGLGETIMAGEHANDLEARBPROC epoxy_glGetImageHandleARB = epoxy_glGetImageHandleARB_global_rewrite_ptr;

PUBLIC PFNGLGETIMAGEHANDLENVPROC epoxy_glGetImageHandleNV = epoxy_glGetImageHandleNV_global_rewrite_ptr;

PUBLIC PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC epoxy_glGetImageTransformParameterfvHP = epoxy_glGetImageTransformParameterfvHP_global_rewrite_ptr;

PUBLIC PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC epoxy_glGetImageTransformParameterivHP = epoxy_glGetImageTransformParameterivHP_global_rewrite_ptr;

PUBLIC PFNGLGETINFOLOGARBPROC epoxy_glGetInfoLogARB = epoxy_glGetInfoLogARB_global_rewrite_ptr;

PUBLIC PFNGLGETINSTRUMENTSSGIXPROC epoxy_glGetInstrumentsSGIX = epoxy_glGetInstrumentsSGIX_global_rewrite_ptr;

PUBLIC PFNGLGETINTEGER64I_VPROC epoxy_glGetInteger64i_v = epoxy_glGetInteger64i_v_global_rewrite_ptr;

PUBLIC PFNGLGETINTEGER64VPROC epoxy_glGetInteger64v = epoxy_glGetInteger64v_global_rewrite_ptr;

PUBLIC PFNGLGETINTEGER64VAPPLEPROC epoxy_glGetInteger64vAPPLE = epoxy_glGetInteger64vAPPLE_global_rewrite_ptr;

PUBLIC PFNGLGETINTEGERINDEXEDVEXTPROC epoxy_glGetIntegerIndexedvEXT = epoxy_glGetIntegerIndexedvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETINTEGERI_VPROC epoxy_glGetIntegeri_v = epoxy_glGetIntegeri_v_global_rewrite_ptr;

PUBLIC PFNGLGETINTEGERI_VEXTPROC epoxy_glGetIntegeri_vEXT = epoxy_glGetIntegeri_vEXT_global_rewrite_ptr;

PUBLIC PFNGLGETINTEGERUI64I_VNVPROC epoxy_glGetIntegerui64i_vNV = epoxy_glGetIntegerui64i_vNV_global_rewrite_ptr;

PUBLIC PFNGLGETINTEGERUI64VNVPROC epoxy_glGetIntegerui64vNV = epoxy_glGetIntegerui64vNV_global_rewrite_ptr;

PUBLIC PFNGLGETINTEGERVPROC epoxy_glGetIntegerv = epoxy_glGetIntegerv_global_rewrite_ptr;

PUBLIC PFNGLGETINTERNALFORMATSAMPLEIVNVPROC epoxy_glGetInternalformatSampleivNV = epoxy_glGetInternalformatSampleivNV_global_rewrite_ptr;

PUBLIC PFNGLGETINTERNALFORMATI64VPROC epoxy_glGetInternalformati64v = epoxy_glGetInternalformati64v_global_rewrite_ptr;

PUBLIC PFNGLGETINTERNALFORMATIVPROC epoxy_glGetInternalformativ = epoxy_glGetInternalformativ_global_rewrite_ptr;

PUBLIC PFNGLGETINVARIANTBOOLEANVEXTPROC epoxy_glGetInvariantBooleanvEXT = epoxy_glGetInvariantBooleanvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETINVARIANTFLOATVEXTPROC epoxy_glGetInvariantFloatvEXT = epoxy_glGetInvariantFloatvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETINVARIANTINTEGERVEXTPROC epoxy_glGetInvariantIntegervEXT = epoxy_glGetInvariantIntegervEXT_global_rewrite_ptr;

PUBLIC PFNGLGETLIGHTFVPROC epoxy_glGetLightfv = epoxy_glGetLightfv_global_rewrite_ptr;

PUBLIC PFNGLGETLIGHTIVPROC epoxy_glGetLightiv = epoxy_glGetLightiv_global_rewrite_ptr;

PUBLIC PFNGLGETLIGHTXOESPROC epoxy_glGetLightxOES = epoxy_glGetLightxOES_global_rewrite_ptr;

PUBLIC PFNGLGETLIGHTXVPROC epoxy_glGetLightxv = epoxy_glGetLightxv_global_rewrite_ptr;

PUBLIC PFNGLGETLIGHTXVOESPROC epoxy_glGetLightxvOES = epoxy_glGetLightxvOES_global_rewrite_ptr;

PUBLIC PFNGLGETLISTPARAMETERFVSGIXPROC epoxy_glGetListParameterfvSGIX = epoxy_glGetListParameterfvSGIX_global_rewrite_ptr;

PUBLIC PFNGLGETLISTPARAMETERIVSGIXPROC epoxy_glGetListParameterivSGIX = epoxy_glGetListParameterivSGIX_global_rewrite_ptr;

PUBLIC PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC epoxy_glGetLocalConstantBooleanvEXT = epoxy_glGetLocalConstantBooleanvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETLOCALCONSTANTFLOATVEXTPROC epoxy_glGetLocalConstantFloatvEXT = epoxy_glGetLocalConstantFloatvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETLOCALCONSTANTINTEGERVEXTPROC epoxy_glGetLocalConstantIntegervEXT = epoxy_glGetLocalConstantIntegervEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMAPATTRIBPARAMETERFVNVPROC epoxy_glGetMapAttribParameterfvNV = epoxy_glGetMapAttribParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETMAPATTRIBPARAMETERIVNVPROC epoxy_glGetMapAttribParameterivNV = epoxy_glGetMapAttribParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLGETMAPCONTROLPOINTSNVPROC epoxy_glGetMapControlPointsNV = epoxy_glGetMapControlPointsNV_global_rewrite_ptr;

PUBLIC PFNGLGETMAPPARAMETERFVNVPROC epoxy_glGetMapParameterfvNV = epoxy_glGetMapParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETMAPPARAMETERIVNVPROC epoxy_glGetMapParameterivNV = epoxy_glGetMapParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLGETMAPDVPROC epoxy_glGetMapdv = epoxy_glGetMapdv_global_rewrite_ptr;

PUBLIC PFNGLGETMAPFVPROC epoxy_glGetMapfv = epoxy_glGetMapfv_global_rewrite_ptr;

PUBLIC PFNGLGETMAPIVPROC epoxy_glGetMapiv = epoxy_glGetMapiv_global_rewrite_ptr;

PUBLIC PFNGLGETMAPXVOESPROC epoxy_glGetMapxvOES = epoxy_glGetMapxvOES_global_rewrite_ptr;

PUBLIC PFNGLGETMATERIALFVPROC epoxy_glGetMaterialfv = epoxy_glGetMaterialfv_global_rewrite_ptr;

PUBLIC PFNGLGETMATERIALIVPROC epoxy_glGetMaterialiv = epoxy_glGetMaterialiv_global_rewrite_ptr;

PUBLIC PFNGLGETMATERIALXOESPROC epoxy_glGetMaterialxOES = epoxy_glGetMaterialxOES_global_rewrite_ptr;

PUBLIC PFNGLGETMATERIALXVPROC epoxy_glGetMaterialxv = epoxy_glGetMaterialxv_global_rewrite_ptr;

PUBLIC PFNGLGETMATERIALXVOESPROC epoxy_glGetMaterialxvOES = epoxy_glGetMaterialxvOES_global_rewrite_ptr;

PUBLIC PFNGLGETMINMAXPROC epoxy_glGetMinmax = epoxy_glGetMinmax_global_rewrite_ptr;

PUBLIC PFNGLGETMINMAXEXTPROC epoxy_glGetMinmaxEXT = epoxy_glGetMinmaxEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMINMAXPARAMETERFVPROC epoxy_glGetMinmaxParameterfv = epoxy_glGetMinmaxParameterfv_global_rewrite_ptr;

PUBLIC PFNGLGETMINMAXPARAMETERFVEXTPROC epoxy_glGetMinmaxParameterfvEXT = epoxy_glGetMinmaxParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMINMAXPARAMETERIVPROC epoxy_glGetMinmaxParameteriv = epoxy_glGetMinmaxParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETMINMAXPARAMETERIVEXTPROC epoxy_glGetMinmaxParameterivEXT = epoxy_glGetMinmaxParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXENVFVEXTPROC epoxy_glGetMultiTexEnvfvEXT = epoxy_glGetMultiTexEnvfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXENVIVEXTPROC epoxy_glGetMultiTexEnvivEXT = epoxy_glGetMultiTexEnvivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXGENDVEXTPROC epoxy_glGetMultiTexGendvEXT = epoxy_glGetMultiTexGendvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXGENFVEXTPROC epoxy_glGetMultiTexGenfvEXT = epoxy_glGetMultiTexGenfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXGENIVEXTPROC epoxy_glGetMultiTexGenivEXT = epoxy_glGetMultiTexGenivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXIMAGEEXTPROC epoxy_glGetMultiTexImageEXT = epoxy_glGetMultiTexImageEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC epoxy_glGetMultiTexLevelParameterfvEXT = epoxy_glGetMultiTexLevelParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC epoxy_glGetMultiTexLevelParameterivEXT = epoxy_glGetMultiTexLevelParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXPARAMETERIIVEXTPROC epoxy_glGetMultiTexParameterIivEXT = epoxy_glGetMultiTexParameterIivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXPARAMETERIUIVEXTPROC epoxy_glGetMultiTexParameterIuivEXT = epoxy_glGetMultiTexParameterIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXPARAMETERFVEXTPROC epoxy_glGetMultiTexParameterfvEXT = epoxy_glGetMultiTexParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTITEXPARAMETERIVEXTPROC epoxy_glGetMultiTexParameterivEXT = epoxy_glGetMultiTexParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETMULTISAMPLEFVPROC epoxy_glGetMultisamplefv = epoxy_glGetMultisamplefv_global_rewrite_ptr;

PUBLIC PFNGLGETMULTISAMPLEFVNVPROC epoxy_glGetMultisamplefvNV = epoxy_glGetMultisamplefvNV_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDBUFFERPARAMETERI64VPROC epoxy_glGetNamedBufferParameteri64v = epoxy_glGetNamedBufferParameteri64v_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDBUFFERPARAMETERIVPROC epoxy_glGetNamedBufferParameteriv = epoxy_glGetNamedBufferParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC epoxy_glGetNamedBufferParameterivEXT = epoxy_glGetNamedBufferParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC epoxy_glGetNamedBufferParameterui64vNV = epoxy_glGetNamedBufferParameterui64vNV_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDBUFFERPOINTERVPROC epoxy_glGetNamedBufferPointerv = epoxy_glGetNamedBufferPointerv_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDBUFFERPOINTERVEXTPROC epoxy_glGetNamedBufferPointervEXT = epoxy_glGetNamedBufferPointervEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDBUFFERSUBDATAPROC epoxy_glGetNamedBufferSubData = epoxy_glGetNamedBufferSubData_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDBUFFERSUBDATAEXTPROC epoxy_glGetNamedBufferSubDataEXT = epoxy_glGetNamedBufferSubDataEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC epoxy_glGetNamedFramebufferAttachmentParameteriv = epoxy_glGetNamedFramebufferAttachmentParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC epoxy_glGetNamedFramebufferAttachmentParameterivEXT = epoxy_glGetNamedFramebufferAttachmentParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC epoxy_glGetNamedFramebufferParameteriv = epoxy_glGetNamedFramebufferParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC epoxy_glGetNamedFramebufferParameterivEXT = epoxy_glGetNamedFramebufferParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC epoxy_glGetNamedProgramLocalParameterIivEXT = epoxy_glGetNamedProgramLocalParameterIivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC epoxy_glGetNamedProgramLocalParameterIuivEXT = epoxy_glGetNamedProgramLocalParameterIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC epoxy_glGetNamedProgramLocalParameterdvEXT = epoxy_glGetNamedProgramLocalParameterdvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC epoxy_glGetNamedProgramLocalParameterfvEXT = epoxy_glGetNamedProgramLocalParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDPROGRAMSTRINGEXTPROC epoxy_glGetNamedProgramStringEXT = epoxy_glGetNamedProgramStringEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDPROGRAMIVEXTPROC epoxy_glGetNamedProgramivEXT = epoxy_glGetNamedProgramivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC epoxy_glGetNamedRenderbufferParameteriv = epoxy_glGetNamedRenderbufferParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC epoxy_glGetNamedRenderbufferParameterivEXT = epoxy_glGetNamedRenderbufferParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDSTRINGARBPROC epoxy_glGetNamedStringARB = epoxy_glGetNamedStringARB_global_rewrite_ptr;

PUBLIC PFNGLGETNAMEDSTRINGIVARBPROC epoxy_glGetNamedStringivARB = epoxy_glGetNamedStringivARB_global_rewrite_ptr;

PUBLIC PFNGLGETNEXTPERFQUERYIDINTELPROC epoxy_glGetNextPerfQueryIdINTEL = epoxy_glGetNextPerfQueryIdINTEL_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTBUFFERFVATIPROC epoxy_glGetObjectBufferfvATI = epoxy_glGetObjectBufferfvATI_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTBUFFERIVATIPROC epoxy_glGetObjectBufferivATI = epoxy_glGetObjectBufferivATI_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTLABELPROC epoxy_glGetObjectLabel = epoxy_glGetObjectLabel_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTLABELEXTPROC epoxy_glGetObjectLabelEXT = epoxy_glGetObjectLabelEXT_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTLABELKHRPROC epoxy_glGetObjectLabelKHR = epoxy_glGetObjectLabelKHR_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTPARAMETERFVARBPROC epoxy_glGetObjectParameterfvARB = epoxy_glGetObjectParameterfvARB_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTPARAMETERIVAPPLEPROC epoxy_glGetObjectParameterivAPPLE = epoxy_glGetObjectParameterivAPPLE_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTPARAMETERIVARBPROC epoxy_glGetObjectParameterivARB = epoxy_glGetObjectParameterivARB_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTPTRLABELPROC epoxy_glGetObjectPtrLabel = epoxy_glGetObjectPtrLabel_global_rewrite_ptr;

PUBLIC PFNGLGETOBJECTPTRLABELKHRPROC epoxy_glGetObjectPtrLabelKHR = epoxy_glGetObjectPtrLabelKHR_global_rewrite_ptr;

PUBLIC PFNGLGETOCCLUSIONQUERYIVNVPROC epoxy_glGetOcclusionQueryivNV = epoxy_glGetOcclusionQueryivNV_global_rewrite_ptr;

PUBLIC PFNGLGETOCCLUSIONQUERYUIVNVPROC epoxy_glGetOcclusionQueryuivNV = epoxy_glGetOcclusionQueryuivNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHCOLORGENFVNVPROC epoxy_glGetPathColorGenfvNV = epoxy_glGetPathColorGenfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHCOLORGENIVNVPROC epoxy_glGetPathColorGenivNV = epoxy_glGetPathColorGenivNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHCOMMANDSNVPROC epoxy_glGetPathCommandsNV = epoxy_glGetPathCommandsNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHCOORDSNVPROC epoxy_glGetPathCoordsNV = epoxy_glGetPathCoordsNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHDASHARRAYNVPROC epoxy_glGetPathDashArrayNV = epoxy_glGetPathDashArrayNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHLENGTHNVPROC epoxy_glGetPathLengthNV = epoxy_glGetPathLengthNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHMETRICRANGENVPROC epoxy_glGetPathMetricRangeNV = epoxy_glGetPathMetricRangeNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHMETRICSNVPROC epoxy_glGetPathMetricsNV = epoxy_glGetPathMetricsNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHPARAMETERFVNVPROC epoxy_glGetPathParameterfvNV = epoxy_glGetPathParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHPARAMETERIVNVPROC epoxy_glGetPathParameterivNV = epoxy_glGetPathParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHSPACINGNVPROC epoxy_glGetPathSpacingNV = epoxy_glGetPathSpacingNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHTEXGENFVNVPROC epoxy_glGetPathTexGenfvNV = epoxy_glGetPathTexGenfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETPATHTEXGENIVNVPROC epoxy_glGetPathTexGenivNV = epoxy_glGetPathTexGenivNV_global_rewrite_ptr;

PUBLIC PFNGLGETPERFCOUNTERINFOINTELPROC epoxy_glGetPerfCounterInfoINTEL = epoxy_glGetPerfCounterInfoINTEL_global_rewrite_ptr;

PUBLIC PFNGLGETPERFMONITORCOUNTERDATAAMDPROC epoxy_glGetPerfMonitorCounterDataAMD = epoxy_glGetPerfMonitorCounterDataAMD_global_rewrite_ptr;

PUBLIC PFNGLGETPERFMONITORCOUNTERINFOAMDPROC epoxy_glGetPerfMonitorCounterInfoAMD = epoxy_glGetPerfMonitorCounterInfoAMD_global_rewrite_ptr;

PUBLIC PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC epoxy_glGetPerfMonitorCounterStringAMD = epoxy_glGetPerfMonitorCounterStringAMD_global_rewrite_ptr;

PUBLIC PFNGLGETPERFMONITORCOUNTERSAMDPROC epoxy_glGetPerfMonitorCountersAMD = epoxy_glGetPerfMonitorCountersAMD_global_rewrite_ptr;

PUBLIC PFNGLGETPERFMONITORGROUPSTRINGAMDPROC epoxy_glGetPerfMonitorGroupStringAMD = epoxy_glGetPerfMonitorGroupStringAMD_global_rewrite_ptr;

PUBLIC PFNGLGETPERFMONITORGROUPSAMDPROC epoxy_glGetPerfMonitorGroupsAMD = epoxy_glGetPerfMonitorGroupsAMD_global_rewrite_ptr;

PUBLIC PFNGLGETPERFQUERYDATAINTELPROC epoxy_glGetPerfQueryDataINTEL = epoxy_glGetPerfQueryDataINTEL_global_rewrite_ptr;

PUBLIC PFNGLGETPERFQUERYIDBYNAMEINTELPROC epoxy_glGetPerfQueryIdByNameINTEL = epoxy_glGetPerfQueryIdByNameINTEL_global_rewrite_ptr;

PUBLIC PFNGLGETPERFQUERYINFOINTELPROC epoxy_glGetPerfQueryInfoINTEL = epoxy_glGetPerfQueryInfoINTEL_global_rewrite_ptr;

PUBLIC PFNGLGETPIXELMAPFVPROC epoxy_glGetPixelMapfv = epoxy_glGetPixelMapfv_global_rewrite_ptr;

PUBLIC PFNGLGETPIXELMAPUIVPROC epoxy_glGetPixelMapuiv = epoxy_glGetPixelMapuiv_global_rewrite_ptr;

PUBLIC PFNGLGETPIXELMAPUSVPROC epoxy_glGetPixelMapusv = epoxy_glGetPixelMapusv_global_rewrite_ptr;

PUBLIC PFNGLGETPIXELMAPXVPROC epoxy_glGetPixelMapxv = epoxy_glGetPixelMapxv_global_rewrite_ptr;

PUBLIC PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC epoxy_glGetPixelTexGenParameterfvSGIS = epoxy_glGetPixelTexGenParameterfvSGIS_global_rewrite_ptr;

PUBLIC PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC epoxy_glGetPixelTexGenParameterivSGIS = epoxy_glGetPixelTexGenParameterivSGIS_global_rewrite_ptr;

PUBLIC PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC epoxy_glGetPixelTransformParameterfvEXT = epoxy_glGetPixelTransformParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC epoxy_glGetPixelTransformParameterivEXT = epoxy_glGetPixelTransformParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETPOINTERINDEXEDVEXTPROC epoxy_glGetPointerIndexedvEXT = epoxy_glGetPointerIndexedvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETPOINTERI_VEXTPROC epoxy_glGetPointeri_vEXT = epoxy_glGetPointeri_vEXT_global_rewrite_ptr;

PUBLIC PFNGLGETPOINTERVPROC epoxy_glGetPointerv = epoxy_glGetPointerv_global_rewrite_ptr;

PUBLIC PFNGLGETPOINTERVEXTPROC epoxy_glGetPointervEXT = epoxy_glGetPointervEXT_global_rewrite_ptr;

PUBLIC PFNGLGETPOINTERVKHRPROC epoxy_glGetPointervKHR = epoxy_glGetPointervKHR_global_rewrite_ptr;

PUBLIC PFNGLGETPOLYGONSTIPPLEPROC epoxy_glGetPolygonStipple = epoxy_glGetPolygonStipple_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMBINARYPROC epoxy_glGetProgramBinary = epoxy_glGetProgramBinary_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMBINARYOESPROC epoxy_glGetProgramBinaryOES = epoxy_glGetProgramBinaryOES_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMENVPARAMETERIIVNVPROC epoxy_glGetProgramEnvParameterIivNV = epoxy_glGetProgramEnvParameterIivNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC epoxy_glGetProgramEnvParameterIuivNV = epoxy_glGetProgramEnvParameterIuivNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMENVPARAMETERDVARBPROC epoxy_glGetProgramEnvParameterdvARB = epoxy_glGetProgramEnvParameterdvARB_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMENVPARAMETERFVARBPROC epoxy_glGetProgramEnvParameterfvARB = epoxy_glGetProgramEnvParameterfvARB_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMINFOLOGPROC epoxy_glGetProgramInfoLog = epoxy_glGetProgramInfoLog_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMINTERFACEIVPROC epoxy_glGetProgramInterfaceiv = epoxy_glGetProgramInterfaceiv_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC epoxy_glGetProgramLocalParameterIivNV = epoxy_glGetProgramLocalParameterIivNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC epoxy_glGetProgramLocalParameterIuivNV = epoxy_glGetProgramLocalParameterIuivNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC epoxy_glGetProgramLocalParameterdvARB = epoxy_glGetProgramLocalParameterdvARB_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC epoxy_glGetProgramLocalParameterfvARB = epoxy_glGetProgramLocalParameterfvARB_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC epoxy_glGetProgramNamedParameterdvNV = epoxy_glGetProgramNamedParameterdvNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC epoxy_glGetProgramNamedParameterfvNV = epoxy_glGetProgramNamedParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMPARAMETERDVNVPROC epoxy_glGetProgramParameterdvNV = epoxy_glGetProgramParameterdvNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMPARAMETERFVNVPROC epoxy_glGetProgramParameterfvNV = epoxy_glGetProgramParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMPIPELINEINFOLOGPROC epoxy_glGetProgramPipelineInfoLog = epoxy_glGetProgramPipelineInfoLog_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC epoxy_glGetProgramPipelineInfoLogEXT = epoxy_glGetProgramPipelineInfoLogEXT_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMPIPELINEIVPROC epoxy_glGetProgramPipelineiv = epoxy_glGetProgramPipelineiv_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMPIPELINEIVEXTPROC epoxy_glGetProgramPipelineivEXT = epoxy_glGetProgramPipelineivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMRESOURCEINDEXPROC epoxy_glGetProgramResourceIndex = epoxy_glGetProgramResourceIndex_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMRESOURCELOCATIONPROC epoxy_glGetProgramResourceLocation = epoxy_glGetProgramResourceLocation_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC epoxy_glGetProgramResourceLocationIndex = epoxy_glGetProgramResourceLocationIndex_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMRESOURCENAMEPROC epoxy_glGetProgramResourceName = epoxy_glGetProgramResourceName_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMRESOURCEFVNVPROC epoxy_glGetProgramResourcefvNV = epoxy_glGetProgramResourcefvNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMRESOURCEIVPROC epoxy_glGetProgramResourceiv = epoxy_glGetProgramResourceiv_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMSTAGEIVPROC epoxy_glGetProgramStageiv = epoxy_glGetProgramStageiv_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMSTRINGARBPROC epoxy_glGetProgramStringARB = epoxy_glGetProgramStringARB_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMSTRINGNVPROC epoxy_glGetProgramStringNV = epoxy_glGetProgramStringNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC epoxy_glGetProgramSubroutineParameteruivNV = epoxy_glGetProgramSubroutineParameteruivNV_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMIVPROC epoxy_glGetProgramiv = epoxy_glGetProgramiv_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMIVARBPROC epoxy_glGetProgramivARB = epoxy_glGetProgramivARB_global_rewrite_ptr;

PUBLIC PFNGLGETPROGRAMIVNVPROC epoxy_glGetProgramivNV = epoxy_glGetProgramivNV_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYBUFFEROBJECTI64VPROC epoxy_glGetQueryBufferObjecti64v = epoxy_glGetQueryBufferObjecti64v_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYBUFFEROBJECTIVPROC epoxy_glGetQueryBufferObjectiv = epoxy_glGetQueryBufferObjectiv_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYBUFFEROBJECTUI64VPROC epoxy_glGetQueryBufferObjectui64v = epoxy_glGetQueryBufferObjectui64v_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYBUFFEROBJECTUIVPROC epoxy_glGetQueryBufferObjectuiv = epoxy_glGetQueryBufferObjectuiv_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYINDEXEDIVPROC epoxy_glGetQueryIndexediv = epoxy_glGetQueryIndexediv_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTI64VPROC epoxy_glGetQueryObjecti64v = epoxy_glGetQueryObjecti64v_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTI64VEXTPROC epoxy_glGetQueryObjecti64vEXT = epoxy_glGetQueryObjecti64vEXT_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTIVPROC epoxy_glGetQueryObjectiv = epoxy_glGetQueryObjectiv_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTIVARBPROC epoxy_glGetQueryObjectivARB = epoxy_glGetQueryObjectivARB_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTIVEXTPROC epoxy_glGetQueryObjectivEXT = epoxy_glGetQueryObjectivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTUI64VPROC epoxy_glGetQueryObjectui64v = epoxy_glGetQueryObjectui64v_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTUI64VEXTPROC epoxy_glGetQueryObjectui64vEXT = epoxy_glGetQueryObjectui64vEXT_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTUIVPROC epoxy_glGetQueryObjectuiv = epoxy_glGetQueryObjectuiv_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTUIVARBPROC epoxy_glGetQueryObjectuivARB = epoxy_glGetQueryObjectuivARB_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYOBJECTUIVEXTPROC epoxy_glGetQueryObjectuivEXT = epoxy_glGetQueryObjectuivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYIVPROC epoxy_glGetQueryiv = epoxy_glGetQueryiv_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYIVARBPROC epoxy_glGetQueryivARB = epoxy_glGetQueryivARB_global_rewrite_ptr;

PUBLIC PFNGLGETQUERYIVEXTPROC epoxy_glGetQueryivEXT = epoxy_glGetQueryivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETRENDERBUFFERPARAMETERIVPROC epoxy_glGetRenderbufferParameteriv = epoxy_glGetRenderbufferParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC epoxy_glGetRenderbufferParameterivEXT = epoxy_glGetRenderbufferParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETRENDERBUFFERPARAMETERIVOESPROC epoxy_glGetRenderbufferParameterivOES = epoxy_glGetRenderbufferParameterivOES_global_rewrite_ptr;

PUBLIC PFNGLGETSAMPLERPARAMETERIIVPROC epoxy_glGetSamplerParameterIiv = epoxy_glGetSamplerParameterIiv_global_rewrite_ptr;

PUBLIC PFNGLGETSAMPLERPARAMETERIIVEXTPROC epoxy_glGetSamplerParameterIivEXT = epoxy_glGetSamplerParameterIivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETSAMPLERPARAMETERIIVOESPROC epoxy_glGetSamplerParameterIivOES = epoxy_glGetSamplerParameterIivOES_global_rewrite_ptr;

PUBLIC PFNGLGETSAMPLERPARAMETERIUIVPROC epoxy_glGetSamplerParameterIuiv = epoxy_glGetSamplerParameterIuiv_global_rewrite_ptr;

PUBLIC PFNGLGETSAMPLERPARAMETERIUIVEXTPROC epoxy_glGetSamplerParameterIuivEXT = epoxy_glGetSamplerParameterIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETSAMPLERPARAMETERIUIVOESPROC epoxy_glGetSamplerParameterIuivOES = epoxy_glGetSamplerParameterIuivOES_global_rewrite_ptr;

PUBLIC PFNGLGETSAMPLERPARAMETERFVPROC epoxy_glGetSamplerParameterfv = epoxy_glGetSamplerParameterfv_global_rewrite_ptr;

PUBLIC PFNGLGETSAMPLERPARAMETERIVPROC epoxy_glGetSamplerParameteriv = epoxy_glGetSamplerParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETSEPARABLEFILTERPROC epoxy_glGetSeparableFilter = epoxy_glGetSeparableFilter_global_rewrite_ptr;

PUBLIC PFNGLGETSEPARABLEFILTEREXTPROC epoxy_glGetSeparableFilterEXT = epoxy_glGetSeparableFilterEXT_global_rewrite_ptr;

PUBLIC PFNGLGETSHADERINFOLOGPROC epoxy_glGetShaderInfoLog = epoxy_glGetShaderInfoLog_global_rewrite_ptr;

PUBLIC PFNGLGETSHADERPRECISIONFORMATPROC epoxy_glGetShaderPrecisionFormat = epoxy_glGetShaderPrecisionFormat_global_rewrite_ptr;

PUBLIC PFNGLGETSHADERSOURCEPROC epoxy_glGetShaderSource = epoxy_glGetShaderSource_global_rewrite_ptr;

PUBLIC PFNGLGETSHADERSOURCEARBPROC epoxy_glGetShaderSourceARB = epoxy_glGetShaderSourceARB_global_rewrite_ptr;

PUBLIC PFNGLGETSHADERIVPROC epoxy_glGetShaderiv = epoxy_glGetShaderiv_global_rewrite_ptr;

PUBLIC PFNGLGETSHARPENTEXFUNCSGISPROC epoxy_glGetSharpenTexFuncSGIS = epoxy_glGetSharpenTexFuncSGIS_global_rewrite_ptr;

PUBLIC PFNGLGETSTAGEINDEXNVPROC epoxy_glGetStageIndexNV = epoxy_glGetStageIndexNV_global_rewrite_ptr;

PUBLIC PFNGLGETSTRINGPROC epoxy_glGetString = epoxy_glGetString_global_rewrite_ptr;

PUBLIC PFNGLGETSTRINGIPROC epoxy_glGetStringi = epoxy_glGetStringi_global_rewrite_ptr;

PUBLIC PFNGLGETSUBROUTINEINDEXPROC epoxy_glGetSubroutineIndex = epoxy_glGetSubroutineIndex_global_rewrite_ptr;

PUBLIC PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC epoxy_glGetSubroutineUniformLocation = epoxy_glGetSubroutineUniformLocation_global_rewrite_ptr;

PUBLIC PFNGLGETSYNCIVPROC epoxy_glGetSynciv = epoxy_glGetSynciv_global_rewrite_ptr;

PUBLIC PFNGLGETSYNCIVAPPLEPROC epoxy_glGetSyncivAPPLE = epoxy_glGetSyncivAPPLE_global_rewrite_ptr;

PUBLIC PFNGLGETTEXBUMPPARAMETERFVATIPROC epoxy_glGetTexBumpParameterfvATI = epoxy_glGetTexBumpParameterfvATI_global_rewrite_ptr;

PUBLIC PFNGLGETTEXBUMPPARAMETERIVATIPROC epoxy_glGetTexBumpParameterivATI = epoxy_glGetTexBumpParameterivATI_global_rewrite_ptr;

PUBLIC PFNGLGETTEXENVFVPROC epoxy_glGetTexEnvfv = epoxy_glGetTexEnvfv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXENVIVPROC epoxy_glGetTexEnviv = epoxy_glGetTexEnviv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXENVXVPROC epoxy_glGetTexEnvxv = epoxy_glGetTexEnvxv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXENVXVOESPROC epoxy_glGetTexEnvxvOES = epoxy_glGetTexEnvxvOES_global_rewrite_ptr;

PUBLIC PFNGLGETTEXFILTERFUNCSGISPROC epoxy_glGetTexFilterFuncSGIS = epoxy_glGetTexFilterFuncSGIS_global_rewrite_ptr;

PUBLIC PFNGLGETTEXGENDVPROC epoxy_glGetTexGendv = epoxy_glGetTexGendv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXGENFVPROC epoxy_glGetTexGenfv = epoxy_glGetTexGenfv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXGENFVOESPROC epoxy_glGetTexGenfvOES = epoxy_glGetTexGenfvOES_global_rewrite_ptr;

PUBLIC PFNGLGETTEXGENIVPROC epoxy_glGetTexGeniv = epoxy_glGetTexGeniv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXGENIVOESPROC epoxy_glGetTexGenivOES = epoxy_glGetTexGenivOES_global_rewrite_ptr;

PUBLIC PFNGLGETTEXGENXVOESPROC epoxy_glGetTexGenxvOES = epoxy_glGetTexGenxvOES_global_rewrite_ptr;

PUBLIC PFNGLGETTEXIMAGEPROC epoxy_glGetTexImage = epoxy_glGetTexImage_global_rewrite_ptr;

PUBLIC PFNGLGETTEXLEVELPARAMETERFVPROC epoxy_glGetTexLevelParameterfv = epoxy_glGetTexLevelParameterfv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXLEVELPARAMETERIVPROC epoxy_glGetTexLevelParameteriv = epoxy_glGetTexLevelParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXLEVELPARAMETERXVOESPROC epoxy_glGetTexLevelParameterxvOES = epoxy_glGetTexLevelParameterxvOES_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERIIVPROC epoxy_glGetTexParameterIiv = epoxy_glGetTexParameterIiv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERIIVEXTPROC epoxy_glGetTexParameterIivEXT = epoxy_glGetTexParameterIivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERIIVOESPROC epoxy_glGetTexParameterIivOES = epoxy_glGetTexParameterIivOES_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERIUIVPROC epoxy_glGetTexParameterIuiv = epoxy_glGetTexParameterIuiv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERIUIVEXTPROC epoxy_glGetTexParameterIuivEXT = epoxy_glGetTexParameterIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERIUIVOESPROC epoxy_glGetTexParameterIuivOES = epoxy_glGetTexParameterIuivOES_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC epoxy_glGetTexParameterPointervAPPLE = epoxy_glGetTexParameterPointervAPPLE_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERFVPROC epoxy_glGetTexParameterfv = epoxy_glGetTexParameterfv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERIVPROC epoxy_glGetTexParameteriv = epoxy_glGetTexParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERXVPROC epoxy_glGetTexParameterxv = epoxy_glGetTexParameterxv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXPARAMETERXVOESPROC epoxy_glGetTexParameterxvOES = epoxy_glGetTexParameterxvOES_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREHANDLEARBPROC epoxy_glGetTextureHandleARB = epoxy_glGetTextureHandleARB_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREHANDLENVPROC epoxy_glGetTextureHandleNV = epoxy_glGetTextureHandleNV_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREIMAGEPROC epoxy_glGetTextureImage = epoxy_glGetTextureImage_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREIMAGEEXTPROC epoxy_glGetTextureImageEXT = epoxy_glGetTextureImageEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTURELEVELPARAMETERFVPROC epoxy_glGetTextureLevelParameterfv = epoxy_glGetTextureLevelParameterfv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC epoxy_glGetTextureLevelParameterfvEXT = epoxy_glGetTextureLevelParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTURELEVELPARAMETERIVPROC epoxy_glGetTextureLevelParameteriv = epoxy_glGetTextureLevelParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC epoxy_glGetTextureLevelParameterivEXT = epoxy_glGetTextureLevelParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREPARAMETERIIVPROC epoxy_glGetTextureParameterIiv = epoxy_glGetTextureParameterIiv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREPARAMETERIIVEXTPROC epoxy_glGetTextureParameterIivEXT = epoxy_glGetTextureParameterIivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREPARAMETERIUIVPROC epoxy_glGetTextureParameterIuiv = epoxy_glGetTextureParameterIuiv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREPARAMETERIUIVEXTPROC epoxy_glGetTextureParameterIuivEXT = epoxy_glGetTextureParameterIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREPARAMETERFVPROC epoxy_glGetTextureParameterfv = epoxy_glGetTextureParameterfv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREPARAMETERFVEXTPROC epoxy_glGetTextureParameterfvEXT = epoxy_glGetTextureParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREPARAMETERIVPROC epoxy_glGetTextureParameteriv = epoxy_glGetTextureParameteriv_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTUREPARAMETERIVEXTPROC epoxy_glGetTextureParameterivEXT = epoxy_glGetTextureParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTURESAMPLERHANDLEARBPROC epoxy_glGetTextureSamplerHandleARB = epoxy_glGetTextureSamplerHandleARB_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTURESAMPLERHANDLENVPROC epoxy_glGetTextureSamplerHandleNV = epoxy_glGetTextureSamplerHandleNV_global_rewrite_ptr;

PUBLIC PFNGLGETTEXTURESUBIMAGEPROC epoxy_glGetTextureSubImage = epoxy_glGetTextureSubImage_global_rewrite_ptr;

PUBLIC PFNGLGETTRACKMATRIXIVNVPROC epoxy_glGetTrackMatrixivNV = epoxy_glGetTrackMatrixivNV_global_rewrite_ptr;

PUBLIC PFNGLGETTRANSFORMFEEDBACKVARYINGPROC epoxy_glGetTransformFeedbackVarying = epoxy_glGetTransformFeedbackVarying_global_rewrite_ptr;

PUBLIC PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC epoxy_glGetTransformFeedbackVaryingEXT = epoxy_glGetTransformFeedbackVaryingEXT_global_rewrite_ptr;

PUBLIC PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC epoxy_glGetTransformFeedbackVaryingNV = epoxy_glGetTransformFeedbackVaryingNV_global_rewrite_ptr;

PUBLIC PFNGLGETTRANSFORMFEEDBACKI64_VPROC epoxy_glGetTransformFeedbacki64_v = epoxy_glGetTransformFeedbacki64_v_global_rewrite_ptr;

PUBLIC PFNGLGETTRANSFORMFEEDBACKI_VPROC epoxy_glGetTransformFeedbacki_v = epoxy_glGetTransformFeedbacki_v_global_rewrite_ptr;

PUBLIC PFNGLGETTRANSFORMFEEDBACKIVPROC epoxy_glGetTransformFeedbackiv = epoxy_glGetTransformFeedbackiv_global_rewrite_ptr;

PUBLIC PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC epoxy_glGetTranslatedShaderSourceANGLE = epoxy_glGetTranslatedShaderSourceANGLE_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMBLOCKINDEXPROC epoxy_glGetUniformBlockIndex = epoxy_glGetUniformBlockIndex_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMBUFFERSIZEEXTPROC epoxy_glGetUniformBufferSizeEXT = epoxy_glGetUniformBufferSizeEXT_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMINDICESPROC epoxy_glGetUniformIndices = epoxy_glGetUniformIndices_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMLOCATIONPROC epoxy_glGetUniformLocation = epoxy_glGetUniformLocation_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMLOCATIONARBPROC epoxy_glGetUniformLocationARB = epoxy_glGetUniformLocationARB_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMOFFSETEXTPROC epoxy_glGetUniformOffsetEXT = epoxy_glGetUniformOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMSUBROUTINEUIVPROC epoxy_glGetUniformSubroutineuiv = epoxy_glGetUniformSubroutineuiv_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMDVPROC epoxy_glGetUniformdv = epoxy_glGetUniformdv_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMFVPROC epoxy_glGetUniformfv = epoxy_glGetUniformfv_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMFVARBPROC epoxy_glGetUniformfvARB = epoxy_glGetUniformfvARB_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMI64VNVPROC epoxy_glGetUniformi64vNV = epoxy_glGetUniformi64vNV_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMIVPROC epoxy_glGetUniformiv = epoxy_glGetUniformiv_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMIVARBPROC epoxy_glGetUniformivARB = epoxy_glGetUniformivARB_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMUI64VNVPROC epoxy_glGetUniformui64vNV = epoxy_glGetUniformui64vNV_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMUIVPROC epoxy_glGetUniformuiv = epoxy_glGetUniformuiv_global_rewrite_ptr;

PUBLIC PFNGLGETUNIFORMUIVEXTPROC epoxy_glGetUniformuivEXT = epoxy_glGetUniformuivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVARIANTARRAYOBJECTFVATIPROC epoxy_glGetVariantArrayObjectfvATI = epoxy_glGetVariantArrayObjectfvATI_global_rewrite_ptr;

PUBLIC PFNGLGETVARIANTARRAYOBJECTIVATIPROC epoxy_glGetVariantArrayObjectivATI = epoxy_glGetVariantArrayObjectivATI_global_rewrite_ptr;

PUBLIC PFNGLGETVARIANTBOOLEANVEXTPROC epoxy_glGetVariantBooleanvEXT = epoxy_glGetVariantBooleanvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVARIANTFLOATVEXTPROC epoxy_glGetVariantFloatvEXT = epoxy_glGetVariantFloatvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVARIANTINTEGERVEXTPROC epoxy_glGetVariantIntegervEXT = epoxy_glGetVariantIntegervEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVARIANTPOINTERVEXTPROC epoxy_glGetVariantPointervEXT = epoxy_glGetVariantPointervEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVARYINGLOCATIONNVPROC epoxy_glGetVaryingLocationNV = epoxy_glGetVaryingLocationNV_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXARRAYINDEXED64IVPROC epoxy_glGetVertexArrayIndexed64iv = epoxy_glGetVertexArrayIndexed64iv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXARRAYINDEXEDIVPROC epoxy_glGetVertexArrayIndexediv = epoxy_glGetVertexArrayIndexediv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC epoxy_glGetVertexArrayIntegeri_vEXT = epoxy_glGetVertexArrayIntegeri_vEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXARRAYINTEGERVEXTPROC epoxy_glGetVertexArrayIntegervEXT = epoxy_glGetVertexArrayIntegervEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC epoxy_glGetVertexArrayPointeri_vEXT = epoxy_glGetVertexArrayPointeri_vEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXARRAYPOINTERVEXTPROC epoxy_glGetVertexArrayPointervEXT = epoxy_glGetVertexArrayPointervEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXARRAYIVPROC epoxy_glGetVertexArrayiv = epoxy_glGetVertexArrayiv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC epoxy_glGetVertexAttribArrayObjectfvATI = epoxy_glGetVertexAttribArrayObjectfvATI_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC epoxy_glGetVertexAttribArrayObjectivATI = epoxy_glGetVertexAttribArrayObjectivATI_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBIIVPROC epoxy_glGetVertexAttribIiv = epoxy_glGetVertexAttribIiv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBIIVEXTPROC epoxy_glGetVertexAttribIivEXT = epoxy_glGetVertexAttribIivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBIUIVPROC epoxy_glGetVertexAttribIuiv = epoxy_glGetVertexAttribIuiv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBIUIVEXTPROC epoxy_glGetVertexAttribIuivEXT = epoxy_glGetVertexAttribIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBLDVPROC epoxy_glGetVertexAttribLdv = epoxy_glGetVertexAttribLdv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBLDVEXTPROC epoxy_glGetVertexAttribLdvEXT = epoxy_glGetVertexAttribLdvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBLI64VNVPROC epoxy_glGetVertexAttribLi64vNV = epoxy_glGetVertexAttribLi64vNV_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBLUI64VARBPROC epoxy_glGetVertexAttribLui64vARB = epoxy_glGetVertexAttribLui64vARB_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBLUI64VNVPROC epoxy_glGetVertexAttribLui64vNV = epoxy_glGetVertexAttribLui64vNV_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBPOINTERVPROC epoxy_glGetVertexAttribPointerv = epoxy_glGetVertexAttribPointerv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBPOINTERVARBPROC epoxy_glGetVertexAttribPointervARB = epoxy_glGetVertexAttribPointervARB_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBPOINTERVNVPROC epoxy_glGetVertexAttribPointervNV = epoxy_glGetVertexAttribPointervNV_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBDVPROC epoxy_glGetVertexAttribdv = epoxy_glGetVertexAttribdv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBDVARBPROC epoxy_glGetVertexAttribdvARB = epoxy_glGetVertexAttribdvARB_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBDVNVPROC epoxy_glGetVertexAttribdvNV = epoxy_glGetVertexAttribdvNV_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBFVPROC epoxy_glGetVertexAttribfv = epoxy_glGetVertexAttribfv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBFVARBPROC epoxy_glGetVertexAttribfvARB = epoxy_glGetVertexAttribfvARB_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBFVNVPROC epoxy_glGetVertexAttribfvNV = epoxy_glGetVertexAttribfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBIVPROC epoxy_glGetVertexAttribiv = epoxy_glGetVertexAttribiv_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBIVARBPROC epoxy_glGetVertexAttribivARB = epoxy_glGetVertexAttribivARB_global_rewrite_ptr;

PUBLIC PFNGLGETVERTEXATTRIBIVNVPROC epoxy_glGetVertexAttribivNV = epoxy_glGetVertexAttribivNV_global_rewrite_ptr;

PUBLIC PFNGLGETVIDEOCAPTURESTREAMDVNVPROC epoxy_glGetVideoCaptureStreamdvNV = epoxy_glGetVideoCaptureStreamdvNV_global_rewrite_ptr;

PUBLIC PFNGLGETVIDEOCAPTURESTREAMFVNVPROC epoxy_glGetVideoCaptureStreamfvNV = epoxy_glGetVideoCaptureStreamfvNV_global_rewrite_ptr;

PUBLIC PFNGLGETVIDEOCAPTURESTREAMIVNVPROC epoxy_glGetVideoCaptureStreamivNV = epoxy_glGetVideoCaptureStreamivNV_global_rewrite_ptr;

PUBLIC PFNGLGETVIDEOCAPTUREIVNVPROC epoxy_glGetVideoCaptureivNV = epoxy_glGetVideoCaptureivNV_global_rewrite_ptr;

PUBLIC PFNGLGETVIDEOI64VNVPROC epoxy_glGetVideoi64vNV = epoxy_glGetVideoi64vNV_global_rewrite_ptr;

PUBLIC PFNGLGETVIDEOIVNVPROC epoxy_glGetVideoivNV = epoxy_glGetVideoivNV_global_rewrite_ptr;

PUBLIC PFNGLGETVIDEOUI64VNVPROC epoxy_glGetVideoui64vNV = epoxy_glGetVideoui64vNV_global_rewrite_ptr;

PUBLIC PFNGLGETVIDEOUIVNVPROC epoxy_glGetVideouivNV = epoxy_glGetVideouivNV_global_rewrite_ptr;

PUBLIC PFNGLGETNCOLORTABLEPROC epoxy_glGetnColorTable = epoxy_glGetnColorTable_global_rewrite_ptr;

PUBLIC PFNGLGETNCOLORTABLEARBPROC epoxy_glGetnColorTableARB = epoxy_glGetnColorTableARB_global_rewrite_ptr;

PUBLIC PFNGLGETNCOMPRESSEDTEXIMAGEPROC epoxy_glGetnCompressedTexImage = epoxy_glGetnCompressedTexImage_global_rewrite_ptr;

PUBLIC PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC epoxy_glGetnCompressedTexImageARB = epoxy_glGetnCompressedTexImageARB_global_rewrite_ptr;

PUBLIC PFNGLGETNCONVOLUTIONFILTERPROC epoxy_glGetnConvolutionFilter = epoxy_glGetnConvolutionFilter_global_rewrite_ptr;

PUBLIC PFNGLGETNCONVOLUTIONFILTERARBPROC epoxy_glGetnConvolutionFilterARB = epoxy_glGetnConvolutionFilterARB_global_rewrite_ptr;

PUBLIC PFNGLGETNHISTOGRAMPROC epoxy_glGetnHistogram = epoxy_glGetnHistogram_global_rewrite_ptr;

PUBLIC PFNGLGETNHISTOGRAMARBPROC epoxy_glGetnHistogramARB = epoxy_glGetnHistogramARB_global_rewrite_ptr;

PUBLIC PFNGLGETNMAPDVPROC epoxy_glGetnMapdv = epoxy_glGetnMapdv_global_rewrite_ptr;

PUBLIC PFNGLGETNMAPDVARBPROC epoxy_glGetnMapdvARB = epoxy_glGetnMapdvARB_global_rewrite_ptr;

PUBLIC PFNGLGETNMAPFVPROC epoxy_glGetnMapfv = epoxy_glGetnMapfv_global_rewrite_ptr;

PUBLIC PFNGLGETNMAPFVARBPROC epoxy_glGetnMapfvARB = epoxy_glGetnMapfvARB_global_rewrite_ptr;

PUBLIC PFNGLGETNMAPIVPROC epoxy_glGetnMapiv = epoxy_glGetnMapiv_global_rewrite_ptr;

PUBLIC PFNGLGETNMAPIVARBPROC epoxy_glGetnMapivARB = epoxy_glGetnMapivARB_global_rewrite_ptr;

PUBLIC PFNGLGETNMINMAXPROC epoxy_glGetnMinmax = epoxy_glGetnMinmax_global_rewrite_ptr;

PUBLIC PFNGLGETNMINMAXARBPROC epoxy_glGetnMinmaxARB = epoxy_glGetnMinmaxARB_global_rewrite_ptr;

PUBLIC PFNGLGETNPIXELMAPFVPROC epoxy_glGetnPixelMapfv = epoxy_glGetnPixelMapfv_global_rewrite_ptr;

PUBLIC PFNGLGETNPIXELMAPFVARBPROC epoxy_glGetnPixelMapfvARB = epoxy_glGetnPixelMapfvARB_global_rewrite_ptr;

PUBLIC PFNGLGETNPIXELMAPUIVPROC epoxy_glGetnPixelMapuiv = epoxy_glGetnPixelMapuiv_global_rewrite_ptr;

PUBLIC PFNGLGETNPIXELMAPUIVARBPROC epoxy_glGetnPixelMapuivARB = epoxy_glGetnPixelMapuivARB_global_rewrite_ptr;

PUBLIC PFNGLGETNPIXELMAPUSVPROC epoxy_glGetnPixelMapusv = epoxy_glGetnPixelMapusv_global_rewrite_ptr;

PUBLIC PFNGLGETNPIXELMAPUSVARBPROC epoxy_glGetnPixelMapusvARB = epoxy_glGetnPixelMapusvARB_global_rewrite_ptr;

PUBLIC PFNGLGETNPOLYGONSTIPPLEPROC epoxy_glGetnPolygonStipple = epoxy_glGetnPolygonStipple_global_rewrite_ptr;

PUBLIC PFNGLGETNPOLYGONSTIPPLEARBPROC epoxy_glGetnPolygonStippleARB = epoxy_glGetnPolygonStippleARB_global_rewrite_ptr;

PUBLIC PFNGLGETNSEPARABLEFILTERPROC epoxy_glGetnSeparableFilter = epoxy_glGetnSeparableFilter_global_rewrite_ptr;

PUBLIC PFNGLGETNSEPARABLEFILTERARBPROC epoxy_glGetnSeparableFilterARB = epoxy_glGetnSeparableFilterARB_global_rewrite_ptr;

PUBLIC PFNGLGETNTEXIMAGEPROC epoxy_glGetnTexImage = epoxy_glGetnTexImage_global_rewrite_ptr;

PUBLIC PFNGLGETNTEXIMAGEARBPROC epoxy_glGetnTexImageARB = epoxy_glGetnTexImageARB_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMDVPROC epoxy_glGetnUniformdv = epoxy_glGetnUniformdv_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMDVARBPROC epoxy_glGetnUniformdvARB = epoxy_glGetnUniformdvARB_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMFVPROC epoxy_glGetnUniformfv = epoxy_glGetnUniformfv_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMFVARBPROC epoxy_glGetnUniformfvARB = epoxy_glGetnUniformfvARB_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMFVEXTPROC epoxy_glGetnUniformfvEXT = epoxy_glGetnUniformfvEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMFVKHRPROC epoxy_glGetnUniformfvKHR = epoxy_glGetnUniformfvKHR_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMIVPROC epoxy_glGetnUniformiv = epoxy_glGetnUniformiv_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMIVARBPROC epoxy_glGetnUniformivARB = epoxy_glGetnUniformivARB_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMIVEXTPROC epoxy_glGetnUniformivEXT = epoxy_glGetnUniformivEXT_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMIVKHRPROC epoxy_glGetnUniformivKHR = epoxy_glGetnUniformivKHR_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMUIVPROC epoxy_glGetnUniformuiv = epoxy_glGetnUniformuiv_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMUIVARBPROC epoxy_glGetnUniformuivARB = epoxy_glGetnUniformuivARB_global_rewrite_ptr;

PUBLIC PFNGLGETNUNIFORMUIVKHRPROC epoxy_glGetnUniformuivKHR = epoxy_glGetnUniformuivKHR_global_rewrite_ptr;

PUBLIC PFNGLGLOBALALPHAFACTORBSUNPROC epoxy_glGlobalAlphaFactorbSUN = epoxy_glGlobalAlphaFactorbSUN_global_rewrite_ptr;

PUBLIC PFNGLGLOBALALPHAFACTORDSUNPROC epoxy_glGlobalAlphaFactordSUN = epoxy_glGlobalAlphaFactordSUN_global_rewrite_ptr;

PUBLIC PFNGLGLOBALALPHAFACTORFSUNPROC epoxy_glGlobalAlphaFactorfSUN = epoxy_glGlobalAlphaFactorfSUN_global_rewrite_ptr;

PUBLIC PFNGLGLOBALALPHAFACTORISUNPROC epoxy_glGlobalAlphaFactoriSUN = epoxy_glGlobalAlphaFactoriSUN_global_rewrite_ptr;

PUBLIC PFNGLGLOBALALPHAFACTORSSUNPROC epoxy_glGlobalAlphaFactorsSUN = epoxy_glGlobalAlphaFactorsSUN_global_rewrite_ptr;

PUBLIC PFNGLGLOBALALPHAFACTORUBSUNPROC epoxy_glGlobalAlphaFactorubSUN = epoxy_glGlobalAlphaFactorubSUN_global_rewrite_ptr;

PUBLIC PFNGLGLOBALALPHAFACTORUISUNPROC epoxy_glGlobalAlphaFactoruiSUN = epoxy_glGlobalAlphaFactoruiSUN_global_rewrite_ptr;

PUBLIC PFNGLGLOBALALPHAFACTORUSSUNPROC epoxy_glGlobalAlphaFactorusSUN = epoxy_glGlobalAlphaFactorusSUN_global_rewrite_ptr;

PUBLIC PFNGLHINTPROC epoxy_glHint = epoxy_glHint_global_rewrite_ptr;

PUBLIC PFNGLHINTPGIPROC epoxy_glHintPGI = epoxy_glHintPGI_global_rewrite_ptr;

PUBLIC PFNGLHISTOGRAMPROC epoxy_glHistogram = epoxy_glHistogram_global_rewrite_ptr;

PUBLIC PFNGLHISTOGRAMEXTPROC epoxy_glHistogramEXT = epoxy_glHistogramEXT_global_rewrite_ptr;

PUBLIC PFNGLIGLOOINTERFACESGIXPROC epoxy_glIglooInterfaceSGIX = epoxy_glIglooInterfaceSGIX_global_rewrite_ptr;

PUBLIC PFNGLIMAGETRANSFORMPARAMETERFHPPROC epoxy_glImageTransformParameterfHP = epoxy_glImageTransformParameterfHP_global_rewrite_ptr;

PUBLIC PFNGLIMAGETRANSFORMPARAMETERFVHPPROC epoxy_glImageTransformParameterfvHP = epoxy_glImageTransformParameterfvHP_global_rewrite_ptr;

PUBLIC PFNGLIMAGETRANSFORMPARAMETERIHPPROC epoxy_glImageTransformParameteriHP = epoxy_glImageTransformParameteriHP_global_rewrite_ptr;

PUBLIC PFNGLIMAGETRANSFORMPARAMETERIVHPPROC epoxy_glImageTransformParameterivHP = epoxy_glImageTransformParameterivHP_global_rewrite_ptr;

PUBLIC PFNGLIMPORTSYNCEXTPROC epoxy_glImportSyncEXT = epoxy_glImportSyncEXT_global_rewrite_ptr;

PUBLIC PFNGLINDEXFORMATNVPROC epoxy_glIndexFormatNV = epoxy_glIndexFormatNV_global_rewrite_ptr;

PUBLIC PFNGLINDEXFUNCEXTPROC epoxy_glIndexFuncEXT = epoxy_glIndexFuncEXT_global_rewrite_ptr;

PUBLIC PFNGLINDEXMASKPROC epoxy_glIndexMask = epoxy_glIndexMask_global_rewrite_ptr;

PUBLIC PFNGLINDEXMATERIALEXTPROC epoxy_glIndexMaterialEXT = epoxy_glIndexMaterialEXT_global_rewrite_ptr;

PUBLIC PFNGLINDEXPOINTERPROC epoxy_glIndexPointer = epoxy_glIndexPointer_global_rewrite_ptr;

PUBLIC PFNGLINDEXPOINTEREXTPROC epoxy_glIndexPointerEXT = epoxy_glIndexPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLINDEXPOINTERLISTIBMPROC epoxy_glIndexPointerListIBM = epoxy_glIndexPointerListIBM_global_rewrite_ptr;

PUBLIC PFNGLINDEXDPROC epoxy_glIndexd = epoxy_glIndexd_global_rewrite_ptr;

PUBLIC PFNGLINDEXDVPROC epoxy_glIndexdv = epoxy_glIndexdv_global_rewrite_ptr;

PUBLIC PFNGLINDEXFPROC epoxy_glIndexf = epoxy_glIndexf_global_rewrite_ptr;

PUBLIC PFNGLINDEXFVPROC epoxy_glIndexfv = epoxy_glIndexfv_global_rewrite_ptr;

PUBLIC PFNGLINDEXIPROC epoxy_glIndexi = epoxy_glIndexi_global_rewrite_ptr;

PUBLIC PFNGLINDEXIVPROC epoxy_glIndexiv = epoxy_glIndexiv_global_rewrite_ptr;

PUBLIC PFNGLINDEXSPROC epoxy_glIndexs = epoxy_glIndexs_global_rewrite_ptr;

PUBLIC PFNGLINDEXSVPROC epoxy_glIndexsv = epoxy_glIndexsv_global_rewrite_ptr;

PUBLIC PFNGLINDEXUBPROC epoxy_glIndexub = epoxy_glIndexub_global_rewrite_ptr;

PUBLIC PFNGLINDEXUBVPROC epoxy_glIndexubv = epoxy_glIndexubv_global_rewrite_ptr;

PUBLIC PFNGLINDEXXOESPROC epoxy_glIndexxOES = epoxy_glIndexxOES_global_rewrite_ptr;

PUBLIC PFNGLINDEXXVOESPROC epoxy_glIndexxvOES = epoxy_glIndexxvOES_global_rewrite_ptr;

PUBLIC PFNGLINITNAMESPROC epoxy_glInitNames = epoxy_glInitNames_global_rewrite_ptr;

PUBLIC PFNGLINSERTCOMPONENTEXTPROC epoxy_glInsertComponentEXT = epoxy_glInsertComponentEXT_global_rewrite_ptr;

PUBLIC PFNGLINSERTEVENTMARKEREXTPROC epoxy_glInsertEventMarkerEXT = epoxy_glInsertEventMarkerEXT_global_rewrite_ptr;

PUBLIC PFNGLINSTRUMENTSBUFFERSGIXPROC epoxy_glInstrumentsBufferSGIX = epoxy_glInstrumentsBufferSGIX_global_rewrite_ptr;

PUBLIC PFNGLINTERLEAVEDARRAYSPROC epoxy_glInterleavedArrays = epoxy_glInterleavedArrays_global_rewrite_ptr;

PUBLIC PFNGLINTERPOLATEPATHSNVPROC epoxy_glInterpolatePathsNV = epoxy_glInterpolatePathsNV_global_rewrite_ptr;

PUBLIC PFNGLINVALIDATEBUFFERDATAPROC epoxy_glInvalidateBufferData = epoxy_glInvalidateBufferData_global_rewrite_ptr;

PUBLIC PFNGLINVALIDATEBUFFERSUBDATAPROC epoxy_glInvalidateBufferSubData = epoxy_glInvalidateBufferSubData_global_rewrite_ptr;

PUBLIC PFNGLINVALIDATEFRAMEBUFFERPROC epoxy_glInvalidateFramebuffer = epoxy_glInvalidateFramebuffer_global_rewrite_ptr;

PUBLIC PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC epoxy_glInvalidateNamedFramebufferData = epoxy_glInvalidateNamedFramebufferData_global_rewrite_ptr;

PUBLIC PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC epoxy_glInvalidateNamedFramebufferSubData = epoxy_glInvalidateNamedFramebufferSubData_global_rewrite_ptr;

PUBLIC PFNGLINVALIDATESUBFRAMEBUFFERPROC epoxy_glInvalidateSubFramebuffer = epoxy_glInvalidateSubFramebuffer_global_rewrite_ptr;

PUBLIC PFNGLINVALIDATETEXIMAGEPROC epoxy_glInvalidateTexImage = epoxy_glInvalidateTexImage_global_rewrite_ptr;

PUBLIC PFNGLINVALIDATETEXSUBIMAGEPROC epoxy_glInvalidateTexSubImage = epoxy_glInvalidateTexSubImage_global_rewrite_ptr;

PUBLIC PFNGLISASYNCMARKERSGIXPROC epoxy_glIsAsyncMarkerSGIX = epoxy_glIsAsyncMarkerSGIX_global_rewrite_ptr;

PUBLIC PFNGLISBUFFERPROC epoxy_glIsBuffer = epoxy_glIsBuffer_global_rewrite_ptr;

PUBLIC PFNGLISBUFFERARBPROC epoxy_glIsBufferARB = epoxy_glIsBufferARB_global_rewrite_ptr;

PUBLIC PFNGLISBUFFERRESIDENTNVPROC epoxy_glIsBufferResidentNV = epoxy_glIsBufferResidentNV_global_rewrite_ptr;

PUBLIC PFNGLISCOMMANDLISTNVPROC epoxy_glIsCommandListNV = epoxy_glIsCommandListNV_global_rewrite_ptr;

PUBLIC PFNGLISENABLEDPROC epoxy_glIsEnabled = epoxy_glIsEnabled_global_rewrite_ptr;

PUBLIC PFNGLISENABLEDINDEXEDEXTPROC epoxy_glIsEnabledIndexedEXT = epoxy_glIsEnabledIndexedEXT_global_rewrite_ptr;

PUBLIC PFNGLISENABLEDIPROC epoxy_glIsEnabledi = epoxy_glIsEnabledi_global_rewrite_ptr;

PUBLIC PFNGLISENABLEDIEXTPROC epoxy_glIsEnablediEXT = epoxy_glIsEnablediEXT_global_rewrite_ptr;

PUBLIC PFNGLISENABLEDINVPROC epoxy_glIsEnablediNV = epoxy_glIsEnablediNV_global_rewrite_ptr;

PUBLIC PFNGLISENABLEDIOESPROC epoxy_glIsEnablediOES = epoxy_glIsEnablediOES_global_rewrite_ptr;

PUBLIC PFNGLISFENCEAPPLEPROC epoxy_glIsFenceAPPLE = epoxy_glIsFenceAPPLE_global_rewrite_ptr;

PUBLIC PFNGLISFENCENVPROC epoxy_glIsFenceNV = epoxy_glIsFenceNV_global_rewrite_ptr;

PUBLIC PFNGLISFRAMEBUFFERPROC epoxy_glIsFramebuffer = epoxy_glIsFramebuffer_global_rewrite_ptr;

PUBLIC PFNGLISFRAMEBUFFEREXTPROC epoxy_glIsFramebufferEXT = epoxy_glIsFramebufferEXT_global_rewrite_ptr;

PUBLIC PFNGLISFRAMEBUFFEROESPROC epoxy_glIsFramebufferOES = epoxy_glIsFramebufferOES_global_rewrite_ptr;

PUBLIC PFNGLISIMAGEHANDLERESIDENTARBPROC epoxy_glIsImageHandleResidentARB = epoxy_glIsImageHandleResidentARB_global_rewrite_ptr;

PUBLIC PFNGLISIMAGEHANDLERESIDENTNVPROC epoxy_glIsImageHandleResidentNV = epoxy_glIsImageHandleResidentNV_global_rewrite_ptr;

PUBLIC PFNGLISLISTPROC epoxy_glIsList = epoxy_glIsList_global_rewrite_ptr;

PUBLIC PFNGLISNAMEAMDPROC epoxy_glIsNameAMD = epoxy_glIsNameAMD_global_rewrite_ptr;

PUBLIC PFNGLISNAMEDBUFFERRESIDENTNVPROC epoxy_glIsNamedBufferResidentNV = epoxy_glIsNamedBufferResidentNV_global_rewrite_ptr;

PUBLIC PFNGLISNAMEDSTRINGARBPROC epoxy_glIsNamedStringARB = epoxy_glIsNamedStringARB_global_rewrite_ptr;

PUBLIC PFNGLISOBJECTBUFFERATIPROC epoxy_glIsObjectBufferATI = epoxy_glIsObjectBufferATI_global_rewrite_ptr;

PUBLIC PFNGLISOCCLUSIONQUERYNVPROC epoxy_glIsOcclusionQueryNV = epoxy_glIsOcclusionQueryNV_global_rewrite_ptr;

PUBLIC PFNGLISPATHNVPROC epoxy_glIsPathNV = epoxy_glIsPathNV_global_rewrite_ptr;

PUBLIC PFNGLISPOINTINFILLPATHNVPROC epoxy_glIsPointInFillPathNV = epoxy_glIsPointInFillPathNV_global_rewrite_ptr;

PUBLIC PFNGLISPOINTINSTROKEPATHNVPROC epoxy_glIsPointInStrokePathNV = epoxy_glIsPointInStrokePathNV_global_rewrite_ptr;

PUBLIC PFNGLISPROGRAMPROC epoxy_glIsProgram = epoxy_glIsProgram_global_rewrite_ptr;

PUBLIC PFNGLISPROGRAMARBPROC epoxy_glIsProgramARB = epoxy_glIsProgramARB_global_rewrite_ptr;

PUBLIC PFNGLISPROGRAMNVPROC epoxy_glIsProgramNV = epoxy_glIsProgramNV_global_rewrite_ptr;

PUBLIC PFNGLISPROGRAMPIPELINEPROC epoxy_glIsProgramPipeline = epoxy_glIsProgramPipeline_global_rewrite_ptr;

PUBLIC PFNGLISPROGRAMPIPELINEEXTPROC epoxy_glIsProgramPipelineEXT = epoxy_glIsProgramPipelineEXT_global_rewrite_ptr;

PUBLIC PFNGLISQUERYPROC epoxy_glIsQuery = epoxy_glIsQuery_global_rewrite_ptr;

PUBLIC PFNGLISQUERYARBPROC epoxy_glIsQueryARB = epoxy_glIsQueryARB_global_rewrite_ptr;

PUBLIC PFNGLISQUERYEXTPROC epoxy_glIsQueryEXT = epoxy_glIsQueryEXT_global_rewrite_ptr;

PUBLIC PFNGLISRENDERBUFFERPROC epoxy_glIsRenderbuffer = epoxy_glIsRenderbuffer_global_rewrite_ptr;

PUBLIC PFNGLISRENDERBUFFEREXTPROC epoxy_glIsRenderbufferEXT = epoxy_glIsRenderbufferEXT_global_rewrite_ptr;

PUBLIC PFNGLISRENDERBUFFEROESPROC epoxy_glIsRenderbufferOES = epoxy_glIsRenderbufferOES_global_rewrite_ptr;

PUBLIC PFNGLISSAMPLERPROC epoxy_glIsSampler = epoxy_glIsSampler_global_rewrite_ptr;

PUBLIC PFNGLISSHADERPROC epoxy_glIsShader = epoxy_glIsShader_global_rewrite_ptr;

PUBLIC PFNGLISSTATENVPROC epoxy_glIsStateNV = epoxy_glIsStateNV_global_rewrite_ptr;

PUBLIC PFNGLISSYNCPROC epoxy_glIsSync = epoxy_glIsSync_global_rewrite_ptr;

PUBLIC PFNGLISSYNCAPPLEPROC epoxy_glIsSyncAPPLE = epoxy_glIsSyncAPPLE_global_rewrite_ptr;

PUBLIC PFNGLISTEXTUREPROC epoxy_glIsTexture = epoxy_glIsTexture_global_rewrite_ptr;

PUBLIC PFNGLISTEXTUREEXTPROC epoxy_glIsTextureEXT = epoxy_glIsTextureEXT_global_rewrite_ptr;

PUBLIC PFNGLISTEXTUREHANDLERESIDENTARBPROC epoxy_glIsTextureHandleResidentARB = epoxy_glIsTextureHandleResidentARB_global_rewrite_ptr;

PUBLIC PFNGLISTEXTUREHANDLERESIDENTNVPROC epoxy_glIsTextureHandleResidentNV = epoxy_glIsTextureHandleResidentNV_global_rewrite_ptr;

PUBLIC PFNGLISTRANSFORMFEEDBACKPROC epoxy_glIsTransformFeedback = epoxy_glIsTransformFeedback_global_rewrite_ptr;

PUBLIC PFNGLISTRANSFORMFEEDBACKNVPROC epoxy_glIsTransformFeedbackNV = epoxy_glIsTransformFeedbackNV_global_rewrite_ptr;

PUBLIC PFNGLISVARIANTENABLEDEXTPROC epoxy_glIsVariantEnabledEXT = epoxy_glIsVariantEnabledEXT_global_rewrite_ptr;

PUBLIC PFNGLISVERTEXARRAYPROC epoxy_glIsVertexArray = epoxy_glIsVertexArray_global_rewrite_ptr;

PUBLIC PFNGLISVERTEXARRAYAPPLEPROC epoxy_glIsVertexArrayAPPLE = epoxy_glIsVertexArrayAPPLE_global_rewrite_ptr;

PUBLIC PFNGLISVERTEXARRAYOESPROC epoxy_glIsVertexArrayOES = epoxy_glIsVertexArrayOES_global_rewrite_ptr;

PUBLIC PFNGLISVERTEXATTRIBENABLEDAPPLEPROC epoxy_glIsVertexAttribEnabledAPPLE = epoxy_glIsVertexAttribEnabledAPPLE_global_rewrite_ptr;

PUBLIC PFNGLLABELOBJECTEXTPROC epoxy_glLabelObjectEXT = epoxy_glLabelObjectEXT_global_rewrite_ptr;

PUBLIC PFNGLLIGHTENVISGIXPROC epoxy_glLightEnviSGIX = epoxy_glLightEnviSGIX_global_rewrite_ptr;

PUBLIC PFNGLLIGHTMODELFPROC epoxy_glLightModelf = epoxy_glLightModelf_global_rewrite_ptr;

PUBLIC PFNGLLIGHTMODELFVPROC epoxy_glLightModelfv = epoxy_glLightModelfv_global_rewrite_ptr;

PUBLIC PFNGLLIGHTMODELIPROC epoxy_glLightModeli = epoxy_glLightModeli_global_rewrite_ptr;

PUBLIC PFNGLLIGHTMODELIVPROC epoxy_glLightModeliv = epoxy_glLightModeliv_global_rewrite_ptr;

PUBLIC PFNGLLIGHTMODELXPROC epoxy_glLightModelx = epoxy_glLightModelx_global_rewrite_ptr;

PUBLIC PFNGLLIGHTMODELXOESPROC epoxy_glLightModelxOES = epoxy_glLightModelxOES_global_rewrite_ptr;

PUBLIC PFNGLLIGHTMODELXVPROC epoxy_glLightModelxv = epoxy_glLightModelxv_global_rewrite_ptr;

PUBLIC PFNGLLIGHTMODELXVOESPROC epoxy_glLightModelxvOES = epoxy_glLightModelxvOES_global_rewrite_ptr;

PUBLIC PFNGLLIGHTFPROC epoxy_glLightf = epoxy_glLightf_global_rewrite_ptr;

PUBLIC PFNGLLIGHTFVPROC epoxy_glLightfv = epoxy_glLightfv_global_rewrite_ptr;

PUBLIC PFNGLLIGHTIPROC epoxy_glLighti = epoxy_glLighti_global_rewrite_ptr;

PUBLIC PFNGLLIGHTIVPROC epoxy_glLightiv = epoxy_glLightiv_global_rewrite_ptr;

PUBLIC PFNGLLIGHTXPROC epoxy_glLightx = epoxy_glLightx_global_rewrite_ptr;

PUBLIC PFNGLLIGHTXOESPROC epoxy_glLightxOES = epoxy_glLightxOES_global_rewrite_ptr;

PUBLIC PFNGLLIGHTXVPROC epoxy_glLightxv = epoxy_glLightxv_global_rewrite_ptr;

PUBLIC PFNGLLIGHTXVOESPROC epoxy_glLightxvOES = epoxy_glLightxvOES_global_rewrite_ptr;

PUBLIC PFNGLLINESTIPPLEPROC epoxy_glLineStipple = epoxy_glLineStipple_global_rewrite_ptr;

PUBLIC PFNGLLINEWIDTHPROC epoxy_glLineWidth = epoxy_glLineWidth_global_rewrite_ptr;

PUBLIC PFNGLLINEWIDTHXPROC epoxy_glLineWidthx = epoxy_glLineWidthx_global_rewrite_ptr;

PUBLIC PFNGLLINEWIDTHXOESPROC epoxy_glLineWidthxOES = epoxy_glLineWidthxOES_global_rewrite_ptr;

PUBLIC PFNGLLINKPROGRAMPROC epoxy_glLinkProgram = epoxy_glLinkProgram_global_rewrite_ptr;

PUBLIC PFNGLLINKPROGRAMARBPROC epoxy_glLinkProgramARB = epoxy_glLinkProgramARB_global_rewrite_ptr;

PUBLIC PFNGLLISTBASEPROC epoxy_glListBase = epoxy_glListBase_global_rewrite_ptr;

PUBLIC PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC epoxy_glListDrawCommandsStatesClientNV = epoxy_glListDrawCommandsStatesClientNV_global_rewrite_ptr;

PUBLIC PFNGLLISTPARAMETERFSGIXPROC epoxy_glListParameterfSGIX = epoxy_glListParameterfSGIX_global_rewrite_ptr;

PUBLIC PFNGLLISTPARAMETERFVSGIXPROC epoxy_glListParameterfvSGIX = epoxy_glListParameterfvSGIX_global_rewrite_ptr;

PUBLIC PFNGLLISTPARAMETERISGIXPROC epoxy_glListParameteriSGIX = epoxy_glListParameteriSGIX_global_rewrite_ptr;

PUBLIC PFNGLLISTPARAMETERIVSGIXPROC epoxy_glListParameterivSGIX = epoxy_glListParameterivSGIX_global_rewrite_ptr;

PUBLIC PFNGLLOADIDENTITYPROC epoxy_glLoadIdentity = epoxy_glLoadIdentity_global_rewrite_ptr;

PUBLIC PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC epoxy_glLoadIdentityDeformationMapSGIX = epoxy_glLoadIdentityDeformationMapSGIX_global_rewrite_ptr;

PUBLIC PFNGLLOADMATRIXDPROC epoxy_glLoadMatrixd = epoxy_glLoadMatrixd_global_rewrite_ptr;

PUBLIC PFNGLLOADMATRIXFPROC epoxy_glLoadMatrixf = epoxy_glLoadMatrixf_global_rewrite_ptr;

PUBLIC PFNGLLOADMATRIXXPROC epoxy_glLoadMatrixx = epoxy_glLoadMatrixx_global_rewrite_ptr;

PUBLIC PFNGLLOADMATRIXXOESPROC epoxy_glLoadMatrixxOES = epoxy_glLoadMatrixxOES_global_rewrite_ptr;

PUBLIC PFNGLLOADNAMEPROC epoxy_glLoadName = epoxy_glLoadName_global_rewrite_ptr;

PUBLIC PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC epoxy_glLoadPaletteFromModelViewMatrixOES = epoxy_glLoadPaletteFromModelViewMatrixOES_global_rewrite_ptr;

PUBLIC PFNGLLOADPROGRAMNVPROC epoxy_glLoadProgramNV = epoxy_glLoadProgramNV_global_rewrite_ptr;

PUBLIC PFNGLLOADTRANSPOSEMATRIXDPROC epoxy_glLoadTransposeMatrixd = epoxy_glLoadTransposeMatrixd_global_rewrite_ptr;

PUBLIC PFNGLLOADTRANSPOSEMATRIXDARBPROC epoxy_glLoadTransposeMatrixdARB = epoxy_glLoadTransposeMatrixdARB_global_rewrite_ptr;

PUBLIC PFNGLLOADTRANSPOSEMATRIXFPROC epoxy_glLoadTransposeMatrixf = epoxy_glLoadTransposeMatrixf_global_rewrite_ptr;

PUBLIC PFNGLLOADTRANSPOSEMATRIXFARBPROC epoxy_glLoadTransposeMatrixfARB = epoxy_glLoadTransposeMatrixfARB_global_rewrite_ptr;

PUBLIC PFNGLLOADTRANSPOSEMATRIXXOESPROC epoxy_glLoadTransposeMatrixxOES = epoxy_glLoadTransposeMatrixxOES_global_rewrite_ptr;

PUBLIC PFNGLLOCKARRAYSEXTPROC epoxy_glLockArraysEXT = epoxy_glLockArraysEXT_global_rewrite_ptr;

PUBLIC PFNGLLOGICOPPROC epoxy_glLogicOp = epoxy_glLogicOp_global_rewrite_ptr;

PUBLIC PFNGLMAKEBUFFERNONRESIDENTNVPROC epoxy_glMakeBufferNonResidentNV = epoxy_glMakeBufferNonResidentNV_global_rewrite_ptr;

PUBLIC PFNGLMAKEBUFFERRESIDENTNVPROC epoxy_glMakeBufferResidentNV = epoxy_glMakeBufferResidentNV_global_rewrite_ptr;

PUBLIC PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC epoxy_glMakeImageHandleNonResidentARB = epoxy_glMakeImageHandleNonResidentARB_global_rewrite_ptr;

PUBLIC PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC epoxy_glMakeImageHandleNonResidentNV = epoxy_glMakeImageHandleNonResidentNV_global_rewrite_ptr;

PUBLIC PFNGLMAKEIMAGEHANDLERESIDENTARBPROC epoxy_glMakeImageHandleResidentARB = epoxy_glMakeImageHandleResidentARB_global_rewrite_ptr;

PUBLIC PFNGLMAKEIMAGEHANDLERESIDENTNVPROC epoxy_glMakeImageHandleResidentNV = epoxy_glMakeImageHandleResidentNV_global_rewrite_ptr;

PUBLIC PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC epoxy_glMakeNamedBufferNonResidentNV = epoxy_glMakeNamedBufferNonResidentNV_global_rewrite_ptr;

PUBLIC PFNGLMAKENAMEDBUFFERRESIDENTNVPROC epoxy_glMakeNamedBufferResidentNV = epoxy_glMakeNamedBufferResidentNV_global_rewrite_ptr;

PUBLIC PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC epoxy_glMakeTextureHandleNonResidentARB = epoxy_glMakeTextureHandleNonResidentARB_global_rewrite_ptr;

PUBLIC PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC epoxy_glMakeTextureHandleNonResidentNV = epoxy_glMakeTextureHandleNonResidentNV_global_rewrite_ptr;

PUBLIC PFNGLMAKETEXTUREHANDLERESIDENTARBPROC epoxy_glMakeTextureHandleResidentARB = epoxy_glMakeTextureHandleResidentARB_global_rewrite_ptr;

PUBLIC PFNGLMAKETEXTUREHANDLERESIDENTNVPROC epoxy_glMakeTextureHandleResidentNV = epoxy_glMakeTextureHandleResidentNV_global_rewrite_ptr;

PUBLIC PFNGLMAP1DPROC epoxy_glMap1d = epoxy_glMap1d_global_rewrite_ptr;

PUBLIC PFNGLMAP1FPROC epoxy_glMap1f = epoxy_glMap1f_global_rewrite_ptr;

PUBLIC PFNGLMAP1XOESPROC epoxy_glMap1xOES = epoxy_glMap1xOES_global_rewrite_ptr;

PUBLIC PFNGLMAP2DPROC epoxy_glMap2d = epoxy_glMap2d_global_rewrite_ptr;

PUBLIC PFNGLMAP2FPROC epoxy_glMap2f = epoxy_glMap2f_global_rewrite_ptr;

PUBLIC PFNGLMAP2XOESPROC epoxy_glMap2xOES = epoxy_glMap2xOES_global_rewrite_ptr;

PUBLIC PFNGLMAPBUFFERPROC epoxy_glMapBuffer = epoxy_glMapBuffer_global_rewrite_ptr;

PUBLIC PFNGLMAPBUFFERARBPROC epoxy_glMapBufferARB = epoxy_glMapBufferARB_global_rewrite_ptr;

PUBLIC PFNGLMAPBUFFEROESPROC epoxy_glMapBufferOES = epoxy_glMapBufferOES_global_rewrite_ptr;

PUBLIC PFNGLMAPBUFFERRANGEPROC epoxy_glMapBufferRange = epoxy_glMapBufferRange_global_rewrite_ptr;

PUBLIC PFNGLMAPBUFFERRANGEEXTPROC epoxy_glMapBufferRangeEXT = epoxy_glMapBufferRangeEXT_global_rewrite_ptr;

PUBLIC PFNGLMAPCONTROLPOINTSNVPROC epoxy_glMapControlPointsNV = epoxy_glMapControlPointsNV_global_rewrite_ptr;

PUBLIC PFNGLMAPGRID1DPROC epoxy_glMapGrid1d = epoxy_glMapGrid1d_global_rewrite_ptr;

PUBLIC PFNGLMAPGRID1FPROC epoxy_glMapGrid1f = epoxy_glMapGrid1f_global_rewrite_ptr;

PUBLIC PFNGLMAPGRID1XOESPROC epoxy_glMapGrid1xOES = epoxy_glMapGrid1xOES_global_rewrite_ptr;

PUBLIC PFNGLMAPGRID2DPROC epoxy_glMapGrid2d = epoxy_glMapGrid2d_global_rewrite_ptr;

PUBLIC PFNGLMAPGRID2FPROC epoxy_glMapGrid2f = epoxy_glMapGrid2f_global_rewrite_ptr;

PUBLIC PFNGLMAPGRID2XOESPROC epoxy_glMapGrid2xOES = epoxy_glMapGrid2xOES_global_rewrite_ptr;

PUBLIC PFNGLMAPNAMEDBUFFERPROC epoxy_glMapNamedBuffer = epoxy_glMapNamedBuffer_global_rewrite_ptr;

PUBLIC PFNGLMAPNAMEDBUFFEREXTPROC epoxy_glMapNamedBufferEXT = epoxy_glMapNamedBufferEXT_global_rewrite_ptr;

PUBLIC PFNGLMAPNAMEDBUFFERRANGEPROC epoxy_glMapNamedBufferRange = epoxy_glMapNamedBufferRange_global_rewrite_ptr;

PUBLIC PFNGLMAPNAMEDBUFFERRANGEEXTPROC epoxy_glMapNamedBufferRangeEXT = epoxy_glMapNamedBufferRangeEXT_global_rewrite_ptr;

PUBLIC PFNGLMAPOBJECTBUFFERATIPROC epoxy_glMapObjectBufferATI = epoxy_glMapObjectBufferATI_global_rewrite_ptr;

PUBLIC PFNGLMAPPARAMETERFVNVPROC epoxy_glMapParameterfvNV = epoxy_glMapParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLMAPPARAMETERIVNVPROC epoxy_glMapParameterivNV = epoxy_glMapParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLMAPTEXTURE2DINTELPROC epoxy_glMapTexture2DINTEL = epoxy_glMapTexture2DINTEL_global_rewrite_ptr;

PUBLIC PFNGLMAPVERTEXATTRIB1DAPPLEPROC epoxy_glMapVertexAttrib1dAPPLE = epoxy_glMapVertexAttrib1dAPPLE_global_rewrite_ptr;

PUBLIC PFNGLMAPVERTEXATTRIB1FAPPLEPROC epoxy_glMapVertexAttrib1fAPPLE = epoxy_glMapVertexAttrib1fAPPLE_global_rewrite_ptr;

PUBLIC PFNGLMAPVERTEXATTRIB2DAPPLEPROC epoxy_glMapVertexAttrib2dAPPLE = epoxy_glMapVertexAttrib2dAPPLE_global_rewrite_ptr;

PUBLIC PFNGLMAPVERTEXATTRIB2FAPPLEPROC epoxy_glMapVertexAttrib2fAPPLE = epoxy_glMapVertexAttrib2fAPPLE_global_rewrite_ptr;

PUBLIC PFNGLMATERIALFPROC epoxy_glMaterialf = epoxy_glMaterialf_global_rewrite_ptr;

PUBLIC PFNGLMATERIALFVPROC epoxy_glMaterialfv = epoxy_glMaterialfv_global_rewrite_ptr;

PUBLIC PFNGLMATERIALIPROC epoxy_glMateriali = epoxy_glMateriali_global_rewrite_ptr;

PUBLIC PFNGLMATERIALIVPROC epoxy_glMaterialiv = epoxy_glMaterialiv_global_rewrite_ptr;

PUBLIC PFNGLMATERIALXPROC epoxy_glMaterialx = epoxy_glMaterialx_global_rewrite_ptr;

PUBLIC PFNGLMATERIALXOESPROC epoxy_glMaterialxOES = epoxy_glMaterialxOES_global_rewrite_ptr;

PUBLIC PFNGLMATERIALXVPROC epoxy_glMaterialxv = epoxy_glMaterialxv_global_rewrite_ptr;

PUBLIC PFNGLMATERIALXVOESPROC epoxy_glMaterialxvOES = epoxy_glMaterialxvOES_global_rewrite_ptr;

PUBLIC PFNGLMATRIXFRUSTUMEXTPROC epoxy_glMatrixFrustumEXT = epoxy_glMatrixFrustumEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXINDEXPOINTERARBPROC epoxy_glMatrixIndexPointerARB = epoxy_glMatrixIndexPointerARB_global_rewrite_ptr;

PUBLIC PFNGLMATRIXINDEXPOINTEROESPROC epoxy_glMatrixIndexPointerOES = epoxy_glMatrixIndexPointerOES_global_rewrite_ptr;

PUBLIC PFNGLMATRIXINDEXUBVARBPROC epoxy_glMatrixIndexubvARB = epoxy_glMatrixIndexubvARB_global_rewrite_ptr;

PUBLIC PFNGLMATRIXINDEXUIVARBPROC epoxy_glMatrixIndexuivARB = epoxy_glMatrixIndexuivARB_global_rewrite_ptr;

PUBLIC PFNGLMATRIXINDEXUSVARBPROC epoxy_glMatrixIndexusvARB = epoxy_glMatrixIndexusvARB_global_rewrite_ptr;

PUBLIC PFNGLMATRIXLOAD3X2FNVPROC epoxy_glMatrixLoad3x2fNV = epoxy_glMatrixLoad3x2fNV_global_rewrite_ptr;

PUBLIC PFNGLMATRIXLOAD3X3FNVPROC epoxy_glMatrixLoad3x3fNV = epoxy_glMatrixLoad3x3fNV_global_rewrite_ptr;

PUBLIC PFNGLMATRIXLOADIDENTITYEXTPROC epoxy_glMatrixLoadIdentityEXT = epoxy_glMatrixLoadIdentityEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC epoxy_glMatrixLoadTranspose3x3fNV = epoxy_glMatrixLoadTranspose3x3fNV_global_rewrite_ptr;

PUBLIC PFNGLMATRIXLOADTRANSPOSEDEXTPROC epoxy_glMatrixLoadTransposedEXT = epoxy_glMatrixLoadTransposedEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXLOADTRANSPOSEFEXTPROC epoxy_glMatrixLoadTransposefEXT = epoxy_glMatrixLoadTransposefEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXLOADDEXTPROC epoxy_glMatrixLoaddEXT = epoxy_glMatrixLoaddEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXLOADFEXTPROC epoxy_glMatrixLoadfEXT = epoxy_glMatrixLoadfEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXMODEPROC epoxy_glMatrixMode = epoxy_glMatrixMode_global_rewrite_ptr;

PUBLIC PFNGLMATRIXMULT3X2FNVPROC epoxy_glMatrixMult3x2fNV = epoxy_glMatrixMult3x2fNV_global_rewrite_ptr;

PUBLIC PFNGLMATRIXMULT3X3FNVPROC epoxy_glMatrixMult3x3fNV = epoxy_glMatrixMult3x3fNV_global_rewrite_ptr;

PUBLIC PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC epoxy_glMatrixMultTranspose3x3fNV = epoxy_glMatrixMultTranspose3x3fNV_global_rewrite_ptr;

PUBLIC PFNGLMATRIXMULTTRANSPOSEDEXTPROC epoxy_glMatrixMultTransposedEXT = epoxy_glMatrixMultTransposedEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXMULTTRANSPOSEFEXTPROC epoxy_glMatrixMultTransposefEXT = epoxy_glMatrixMultTransposefEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXMULTDEXTPROC epoxy_glMatrixMultdEXT = epoxy_glMatrixMultdEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXMULTFEXTPROC epoxy_glMatrixMultfEXT = epoxy_glMatrixMultfEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXORTHOEXTPROC epoxy_glMatrixOrthoEXT = epoxy_glMatrixOrthoEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXPOPEXTPROC epoxy_glMatrixPopEXT = epoxy_glMatrixPopEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXPUSHEXTPROC epoxy_glMatrixPushEXT = epoxy_glMatrixPushEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXROTATEDEXTPROC epoxy_glMatrixRotatedEXT = epoxy_glMatrixRotatedEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXROTATEFEXTPROC epoxy_glMatrixRotatefEXT = epoxy_glMatrixRotatefEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXSCALEDEXTPROC epoxy_glMatrixScaledEXT = epoxy_glMatrixScaledEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXSCALEFEXTPROC epoxy_glMatrixScalefEXT = epoxy_glMatrixScalefEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXTRANSLATEDEXTPROC epoxy_glMatrixTranslatedEXT = epoxy_glMatrixTranslatedEXT_global_rewrite_ptr;

PUBLIC PFNGLMATRIXTRANSLATEFEXTPROC epoxy_glMatrixTranslatefEXT = epoxy_glMatrixTranslatefEXT_global_rewrite_ptr;

PUBLIC PFNGLMEMORYBARRIERPROC epoxy_glMemoryBarrier = epoxy_glMemoryBarrier_global_rewrite_ptr;

PUBLIC PFNGLMEMORYBARRIERBYREGIONPROC epoxy_glMemoryBarrierByRegion = epoxy_glMemoryBarrierByRegion_global_rewrite_ptr;

PUBLIC PFNGLMEMORYBARRIEREXTPROC epoxy_glMemoryBarrierEXT = epoxy_glMemoryBarrierEXT_global_rewrite_ptr;

PUBLIC PFNGLMINSAMPLESHADINGPROC epoxy_glMinSampleShading = epoxy_glMinSampleShading_global_rewrite_ptr;

PUBLIC PFNGLMINSAMPLESHADINGARBPROC epoxy_glMinSampleShadingARB = epoxy_glMinSampleShadingARB_global_rewrite_ptr;

PUBLIC PFNGLMINSAMPLESHADINGOESPROC epoxy_glMinSampleShadingOES = epoxy_glMinSampleShadingOES_global_rewrite_ptr;

PUBLIC PFNGLMINMAXPROC epoxy_glMinmax = epoxy_glMinmax_global_rewrite_ptr;

PUBLIC PFNGLMINMAXEXTPROC epoxy_glMinmaxEXT = epoxy_glMinmaxEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTMATRIXDPROC epoxy_glMultMatrixd = epoxy_glMultMatrixd_global_rewrite_ptr;

PUBLIC PFNGLMULTMATRIXFPROC epoxy_glMultMatrixf = epoxy_glMultMatrixf_global_rewrite_ptr;

PUBLIC PFNGLMULTMATRIXXPROC epoxy_glMultMatrixx = epoxy_glMultMatrixx_global_rewrite_ptr;

PUBLIC PFNGLMULTMATRIXXOESPROC epoxy_glMultMatrixxOES = epoxy_glMultMatrixxOES_global_rewrite_ptr;

PUBLIC PFNGLMULTTRANSPOSEMATRIXDPROC epoxy_glMultTransposeMatrixd = epoxy_glMultTransposeMatrixd_global_rewrite_ptr;

PUBLIC PFNGLMULTTRANSPOSEMATRIXDARBPROC epoxy_glMultTransposeMatrixdARB = epoxy_glMultTransposeMatrixdARB_global_rewrite_ptr;

PUBLIC PFNGLMULTTRANSPOSEMATRIXFPROC epoxy_glMultTransposeMatrixf = epoxy_glMultTransposeMatrixf_global_rewrite_ptr;

PUBLIC PFNGLMULTTRANSPOSEMATRIXFARBPROC epoxy_glMultTransposeMatrixfARB = epoxy_glMultTransposeMatrixfARB_global_rewrite_ptr;

PUBLIC PFNGLMULTTRANSPOSEMATRIXXOESPROC epoxy_glMultTransposeMatrixxOES = epoxy_glMultTransposeMatrixxOES_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWARRAYSPROC epoxy_glMultiDrawArrays = epoxy_glMultiDrawArrays_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWARRAYSEXTPROC epoxy_glMultiDrawArraysEXT = epoxy_glMultiDrawArraysEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWARRAYSINDIRECTPROC epoxy_glMultiDrawArraysIndirect = epoxy_glMultiDrawArraysIndirect_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC epoxy_glMultiDrawArraysIndirectAMD = epoxy_glMultiDrawArraysIndirectAMD_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC epoxy_glMultiDrawArraysIndirectBindlessCountNV = epoxy_glMultiDrawArraysIndirectBindlessCountNV_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC epoxy_glMultiDrawArraysIndirectBindlessNV = epoxy_glMultiDrawArraysIndirectBindlessNV_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC epoxy_glMultiDrawArraysIndirectCountARB = epoxy_glMultiDrawArraysIndirectCountARB_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC epoxy_glMultiDrawArraysIndirectEXT = epoxy_glMultiDrawArraysIndirectEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC epoxy_glMultiDrawElementArrayAPPLE = epoxy_glMultiDrawElementArrayAPPLE_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSPROC epoxy_glMultiDrawElements = epoxy_glMultiDrawElements_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC epoxy_glMultiDrawElementsBaseVertex = epoxy_glMultiDrawElementsBaseVertex_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC epoxy_glMultiDrawElementsBaseVertexEXT = epoxy_glMultiDrawElementsBaseVertexEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC epoxy_glMultiDrawElementsBaseVertexOES = epoxy_glMultiDrawElementsBaseVertexOES_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSEXTPROC epoxy_glMultiDrawElementsEXT = epoxy_glMultiDrawElementsEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSINDIRECTPROC epoxy_glMultiDrawElementsIndirect = epoxy_glMultiDrawElementsIndirect_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC epoxy_glMultiDrawElementsIndirectAMD = epoxy_glMultiDrawElementsIndirectAMD_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC epoxy_glMultiDrawElementsIndirectBindlessCountNV = epoxy_glMultiDrawElementsIndirectBindlessCountNV_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC epoxy_glMultiDrawElementsIndirectBindlessNV = epoxy_glMultiDrawElementsIndirectBindlessNV_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC epoxy_glMultiDrawElementsIndirectCountARB = epoxy_glMultiDrawElementsIndirectCountARB_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC epoxy_glMultiDrawElementsIndirectEXT = epoxy_glMultiDrawElementsIndirectEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC epoxy_glMultiDrawRangeElementArrayAPPLE = epoxy_glMultiDrawRangeElementArrayAPPLE_global_rewrite_ptr;

PUBLIC PFNGLMULTIMODEDRAWARRAYSIBMPROC epoxy_glMultiModeDrawArraysIBM = epoxy_glMultiModeDrawArraysIBM_global_rewrite_ptr;

PUBLIC PFNGLMULTIMODEDRAWELEMENTSIBMPROC epoxy_glMultiModeDrawElementsIBM = epoxy_glMultiModeDrawElementsIBM_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXBUFFEREXTPROC epoxy_glMultiTexBufferEXT = epoxy_glMultiTexBufferEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1BOESPROC epoxy_glMultiTexCoord1bOES = epoxy_glMultiTexCoord1bOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1BVOESPROC epoxy_glMultiTexCoord1bvOES = epoxy_glMultiTexCoord1bvOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1DPROC epoxy_glMultiTexCoord1d = epoxy_glMultiTexCoord1d_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1DARBPROC epoxy_glMultiTexCoord1dARB = epoxy_glMultiTexCoord1dARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1DVPROC epoxy_glMultiTexCoord1dv = epoxy_glMultiTexCoord1dv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1DVARBPROC epoxy_glMultiTexCoord1dvARB = epoxy_glMultiTexCoord1dvARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1FPROC epoxy_glMultiTexCoord1f = epoxy_glMultiTexCoord1f_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1FARBPROC epoxy_glMultiTexCoord1fARB = epoxy_glMultiTexCoord1fARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1FVPROC epoxy_glMultiTexCoord1fv = epoxy_glMultiTexCoord1fv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1FVARBPROC epoxy_glMultiTexCoord1fvARB = epoxy_glMultiTexCoord1fvARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1HNVPROC epoxy_glMultiTexCoord1hNV = epoxy_glMultiTexCoord1hNV_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1HVNVPROC epoxy_glMultiTexCoord1hvNV = epoxy_glMultiTexCoord1hvNV_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1IPROC epoxy_glMultiTexCoord1i = epoxy_glMultiTexCoord1i_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1IARBPROC epoxy_glMultiTexCoord1iARB = epoxy_glMultiTexCoord1iARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1IVPROC epoxy_glMultiTexCoord1iv = epoxy_glMultiTexCoord1iv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1IVARBPROC epoxy_glMultiTexCoord1ivARB = epoxy_glMultiTexCoord1ivARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1SPROC epoxy_glMultiTexCoord1s = epoxy_glMultiTexCoord1s_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1SARBPROC epoxy_glMultiTexCoord1sARB = epoxy_glMultiTexCoord1sARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1SVPROC epoxy_glMultiTexCoord1sv = epoxy_glMultiTexCoord1sv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1SVARBPROC epoxy_glMultiTexCoord1svARB = epoxy_glMultiTexCoord1svARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1XOESPROC epoxy_glMultiTexCoord1xOES = epoxy_glMultiTexCoord1xOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD1XVOESPROC epoxy_glMultiTexCoord1xvOES = epoxy_glMultiTexCoord1xvOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2BOESPROC epoxy_glMultiTexCoord2bOES = epoxy_glMultiTexCoord2bOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2BVOESPROC epoxy_glMultiTexCoord2bvOES = epoxy_glMultiTexCoord2bvOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2DPROC epoxy_glMultiTexCoord2d = epoxy_glMultiTexCoord2d_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2DARBPROC epoxy_glMultiTexCoord2dARB = epoxy_glMultiTexCoord2dARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2DVPROC epoxy_glMultiTexCoord2dv = epoxy_glMultiTexCoord2dv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2DVARBPROC epoxy_glMultiTexCoord2dvARB = epoxy_glMultiTexCoord2dvARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2FPROC epoxy_glMultiTexCoord2f = epoxy_glMultiTexCoord2f_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2FARBPROC epoxy_glMultiTexCoord2fARB = epoxy_glMultiTexCoord2fARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2FVPROC epoxy_glMultiTexCoord2fv = epoxy_glMultiTexCoord2fv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2FVARBPROC epoxy_glMultiTexCoord2fvARB = epoxy_glMultiTexCoord2fvARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2HNVPROC epoxy_glMultiTexCoord2hNV = epoxy_glMultiTexCoord2hNV_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2HVNVPROC epoxy_glMultiTexCoord2hvNV = epoxy_glMultiTexCoord2hvNV_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2IPROC epoxy_glMultiTexCoord2i = epoxy_glMultiTexCoord2i_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2IARBPROC epoxy_glMultiTexCoord2iARB = epoxy_glMultiTexCoord2iARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2IVPROC epoxy_glMultiTexCoord2iv = epoxy_glMultiTexCoord2iv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2IVARBPROC epoxy_glMultiTexCoord2ivARB = epoxy_glMultiTexCoord2ivARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2SPROC epoxy_glMultiTexCoord2s = epoxy_glMultiTexCoord2s_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2SARBPROC epoxy_glMultiTexCoord2sARB = epoxy_glMultiTexCoord2sARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2SVPROC epoxy_glMultiTexCoord2sv = epoxy_glMultiTexCoord2sv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2SVARBPROC epoxy_glMultiTexCoord2svARB = epoxy_glMultiTexCoord2svARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2XOESPROC epoxy_glMultiTexCoord2xOES = epoxy_glMultiTexCoord2xOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD2XVOESPROC epoxy_glMultiTexCoord2xvOES = epoxy_glMultiTexCoord2xvOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3BOESPROC epoxy_glMultiTexCoord3bOES = epoxy_glMultiTexCoord3bOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3BVOESPROC epoxy_glMultiTexCoord3bvOES = epoxy_glMultiTexCoord3bvOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3DPROC epoxy_glMultiTexCoord3d = epoxy_glMultiTexCoord3d_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3DARBPROC epoxy_glMultiTexCoord3dARB = epoxy_glMultiTexCoord3dARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3DVPROC epoxy_glMultiTexCoord3dv = epoxy_glMultiTexCoord3dv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3DVARBPROC epoxy_glMultiTexCoord3dvARB = epoxy_glMultiTexCoord3dvARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3FPROC epoxy_glMultiTexCoord3f = epoxy_glMultiTexCoord3f_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3FARBPROC epoxy_glMultiTexCoord3fARB = epoxy_glMultiTexCoord3fARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3FVPROC epoxy_glMultiTexCoord3fv = epoxy_glMultiTexCoord3fv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3FVARBPROC epoxy_glMultiTexCoord3fvARB = epoxy_glMultiTexCoord3fvARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3HNVPROC epoxy_glMultiTexCoord3hNV = epoxy_glMultiTexCoord3hNV_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3HVNVPROC epoxy_glMultiTexCoord3hvNV = epoxy_glMultiTexCoord3hvNV_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3IPROC epoxy_glMultiTexCoord3i = epoxy_glMultiTexCoord3i_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3IARBPROC epoxy_glMultiTexCoord3iARB = epoxy_glMultiTexCoord3iARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3IVPROC epoxy_glMultiTexCoord3iv = epoxy_glMultiTexCoord3iv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3IVARBPROC epoxy_glMultiTexCoord3ivARB = epoxy_glMultiTexCoord3ivARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3SPROC epoxy_glMultiTexCoord3s = epoxy_glMultiTexCoord3s_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3SARBPROC epoxy_glMultiTexCoord3sARB = epoxy_glMultiTexCoord3sARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3SVPROC epoxy_glMultiTexCoord3sv = epoxy_glMultiTexCoord3sv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3SVARBPROC epoxy_glMultiTexCoord3svARB = epoxy_glMultiTexCoord3svARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3XOESPROC epoxy_glMultiTexCoord3xOES = epoxy_glMultiTexCoord3xOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD3XVOESPROC epoxy_glMultiTexCoord3xvOES = epoxy_glMultiTexCoord3xvOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4BOESPROC epoxy_glMultiTexCoord4bOES = epoxy_glMultiTexCoord4bOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4BVOESPROC epoxy_glMultiTexCoord4bvOES = epoxy_glMultiTexCoord4bvOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4DPROC epoxy_glMultiTexCoord4d = epoxy_glMultiTexCoord4d_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4DARBPROC epoxy_glMultiTexCoord4dARB = epoxy_glMultiTexCoord4dARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4DVPROC epoxy_glMultiTexCoord4dv = epoxy_glMultiTexCoord4dv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4DVARBPROC epoxy_glMultiTexCoord4dvARB = epoxy_glMultiTexCoord4dvARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4FPROC epoxy_glMultiTexCoord4f = epoxy_glMultiTexCoord4f_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4FARBPROC epoxy_glMultiTexCoord4fARB = epoxy_glMultiTexCoord4fARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4FVPROC epoxy_glMultiTexCoord4fv = epoxy_glMultiTexCoord4fv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4FVARBPROC epoxy_glMultiTexCoord4fvARB = epoxy_glMultiTexCoord4fvARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4HNVPROC epoxy_glMultiTexCoord4hNV = epoxy_glMultiTexCoord4hNV_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4HVNVPROC epoxy_glMultiTexCoord4hvNV = epoxy_glMultiTexCoord4hvNV_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4IPROC epoxy_glMultiTexCoord4i = epoxy_glMultiTexCoord4i_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4IARBPROC epoxy_glMultiTexCoord4iARB = epoxy_glMultiTexCoord4iARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4IVPROC epoxy_glMultiTexCoord4iv = epoxy_glMultiTexCoord4iv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4IVARBPROC epoxy_glMultiTexCoord4ivARB = epoxy_glMultiTexCoord4ivARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4SPROC epoxy_glMultiTexCoord4s = epoxy_glMultiTexCoord4s_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4SARBPROC epoxy_glMultiTexCoord4sARB = epoxy_glMultiTexCoord4sARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4SVPROC epoxy_glMultiTexCoord4sv = epoxy_glMultiTexCoord4sv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4SVARBPROC epoxy_glMultiTexCoord4svARB = epoxy_glMultiTexCoord4svARB_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4XPROC epoxy_glMultiTexCoord4x = epoxy_glMultiTexCoord4x_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4XOESPROC epoxy_glMultiTexCoord4xOES = epoxy_glMultiTexCoord4xOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORD4XVOESPROC epoxy_glMultiTexCoord4xvOES = epoxy_glMultiTexCoord4xvOES_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORDP1UIPROC epoxy_glMultiTexCoordP1ui = epoxy_glMultiTexCoordP1ui_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORDP1UIVPROC epoxy_glMultiTexCoordP1uiv = epoxy_glMultiTexCoordP1uiv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORDP2UIPROC epoxy_glMultiTexCoordP2ui = epoxy_glMultiTexCoordP2ui_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORDP2UIVPROC epoxy_glMultiTexCoordP2uiv = epoxy_glMultiTexCoordP2uiv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORDP3UIPROC epoxy_glMultiTexCoordP3ui = epoxy_glMultiTexCoordP3ui_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORDP3UIVPROC epoxy_glMultiTexCoordP3uiv = epoxy_glMultiTexCoordP3uiv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORDP4UIPROC epoxy_glMultiTexCoordP4ui = epoxy_glMultiTexCoordP4ui_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORDP4UIVPROC epoxy_glMultiTexCoordP4uiv = epoxy_glMultiTexCoordP4uiv_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXCOORDPOINTEREXTPROC epoxy_glMultiTexCoordPointerEXT = epoxy_glMultiTexCoordPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXENVFEXTPROC epoxy_glMultiTexEnvfEXT = epoxy_glMultiTexEnvfEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXENVFVEXTPROC epoxy_glMultiTexEnvfvEXT = epoxy_glMultiTexEnvfvEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXENVIEXTPROC epoxy_glMultiTexEnviEXT = epoxy_glMultiTexEnviEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXENVIVEXTPROC epoxy_glMultiTexEnvivEXT = epoxy_glMultiTexEnvivEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXGENDEXTPROC epoxy_glMultiTexGendEXT = epoxy_glMultiTexGendEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXGENDVEXTPROC epoxy_glMultiTexGendvEXT = epoxy_glMultiTexGendvEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXGENFEXTPROC epoxy_glMultiTexGenfEXT = epoxy_glMultiTexGenfEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXGENFVEXTPROC epoxy_glMultiTexGenfvEXT = epoxy_glMultiTexGenfvEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXGENIEXTPROC epoxy_glMultiTexGeniEXT = epoxy_glMultiTexGeniEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXGENIVEXTPROC epoxy_glMultiTexGenivEXT = epoxy_glMultiTexGenivEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXIMAGE1DEXTPROC epoxy_glMultiTexImage1DEXT = epoxy_glMultiTexImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXIMAGE2DEXTPROC epoxy_glMultiTexImage2DEXT = epoxy_glMultiTexImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXIMAGE3DEXTPROC epoxy_glMultiTexImage3DEXT = epoxy_glMultiTexImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXPARAMETERIIVEXTPROC epoxy_glMultiTexParameterIivEXT = epoxy_glMultiTexParameterIivEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXPARAMETERIUIVEXTPROC epoxy_glMultiTexParameterIuivEXT = epoxy_glMultiTexParameterIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXPARAMETERFEXTPROC epoxy_glMultiTexParameterfEXT = epoxy_glMultiTexParameterfEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXPARAMETERFVEXTPROC epoxy_glMultiTexParameterfvEXT = epoxy_glMultiTexParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXPARAMETERIEXTPROC epoxy_glMultiTexParameteriEXT = epoxy_glMultiTexParameteriEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXPARAMETERIVEXTPROC epoxy_glMultiTexParameterivEXT = epoxy_glMultiTexParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXRENDERBUFFEREXTPROC epoxy_glMultiTexRenderbufferEXT = epoxy_glMultiTexRenderbufferEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXSUBIMAGE1DEXTPROC epoxy_glMultiTexSubImage1DEXT = epoxy_glMultiTexSubImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXSUBIMAGE2DEXTPROC epoxy_glMultiTexSubImage2DEXT = epoxy_glMultiTexSubImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLMULTITEXSUBIMAGE3DEXTPROC epoxy_glMultiTexSubImage3DEXT = epoxy_glMultiTexSubImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDBUFFERDATAPROC epoxy_glNamedBufferData = epoxy_glNamedBufferData_global_rewrite_ptr;

PUBLIC PFNGLNAMEDBUFFERDATAEXTPROC epoxy_glNamedBufferDataEXT = epoxy_glNamedBufferDataEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC epoxy_glNamedBufferPageCommitmentARB = epoxy_glNamedBufferPageCommitmentARB_global_rewrite_ptr;

PUBLIC PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC epoxy_glNamedBufferPageCommitmentEXT = epoxy_glNamedBufferPageCommitmentEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDBUFFERSTORAGEPROC epoxy_glNamedBufferStorage = epoxy_glNamedBufferStorage_global_rewrite_ptr;

PUBLIC PFNGLNAMEDBUFFERSTORAGEEXTPROC epoxy_glNamedBufferStorageEXT = epoxy_glNamedBufferStorageEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDBUFFERSUBDATAPROC epoxy_glNamedBufferSubData = epoxy_glNamedBufferSubData_global_rewrite_ptr;

PUBLIC PFNGLNAMEDBUFFERSUBDATAEXTPROC epoxy_glNamedBufferSubDataEXT = epoxy_glNamedBufferSubDataEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC epoxy_glNamedCopyBufferSubDataEXT = epoxy_glNamedCopyBufferSubDataEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC epoxy_glNamedFramebufferDrawBuffer = epoxy_glNamedFramebufferDrawBuffer_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC epoxy_glNamedFramebufferDrawBuffers = epoxy_glNamedFramebufferDrawBuffers_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC epoxy_glNamedFramebufferParameteri = epoxy_glNamedFramebufferParameteri_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC epoxy_glNamedFramebufferParameteriEXT = epoxy_glNamedFramebufferParameteriEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC epoxy_glNamedFramebufferReadBuffer = epoxy_glNamedFramebufferReadBuffer_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC epoxy_glNamedFramebufferRenderbuffer = epoxy_glNamedFramebufferRenderbuffer_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC epoxy_glNamedFramebufferRenderbufferEXT = epoxy_glNamedFramebufferRenderbufferEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC epoxy_glNamedFramebufferSampleLocationsfvNV = epoxy_glNamedFramebufferSampleLocationsfvNV_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERTEXTUREPROC epoxy_glNamedFramebufferTexture = epoxy_glNamedFramebufferTexture_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC epoxy_glNamedFramebufferTexture1DEXT = epoxy_glNamedFramebufferTexture1DEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC epoxy_glNamedFramebufferTexture2DEXT = epoxy_glNamedFramebufferTexture2DEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC epoxy_glNamedFramebufferTexture3DEXT = epoxy_glNamedFramebufferTexture3DEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC epoxy_glNamedFramebufferTextureEXT = epoxy_glNamedFramebufferTextureEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC epoxy_glNamedFramebufferTextureFaceEXT = epoxy_glNamedFramebufferTextureFaceEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC epoxy_glNamedFramebufferTextureLayer = epoxy_glNamedFramebufferTextureLayer_global_rewrite_ptr;

PUBLIC PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC epoxy_glNamedFramebufferTextureLayerEXT = epoxy_glNamedFramebufferTextureLayerEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC epoxy_glNamedProgramLocalParameter4dEXT = epoxy_glNamedProgramLocalParameter4dEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC epoxy_glNamedProgramLocalParameter4dvEXT = epoxy_glNamedProgramLocalParameter4dvEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC epoxy_glNamedProgramLocalParameter4fEXT = epoxy_glNamedProgramLocalParameter4fEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC epoxy_glNamedProgramLocalParameter4fvEXT = epoxy_glNamedProgramLocalParameter4fvEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC epoxy_glNamedProgramLocalParameterI4iEXT = epoxy_glNamedProgramLocalParameterI4iEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC epoxy_glNamedProgramLocalParameterI4ivEXT = epoxy_glNamedProgramLocalParameterI4ivEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC epoxy_glNamedProgramLocalParameterI4uiEXT = epoxy_glNamedProgramLocalParameterI4uiEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC epoxy_glNamedProgramLocalParameterI4uivEXT = epoxy_glNamedProgramLocalParameterI4uivEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC epoxy_glNamedProgramLocalParameters4fvEXT = epoxy_glNamedProgramLocalParameters4fvEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC epoxy_glNamedProgramLocalParametersI4ivEXT = epoxy_glNamedProgramLocalParametersI4ivEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC epoxy_glNamedProgramLocalParametersI4uivEXT = epoxy_glNamedProgramLocalParametersI4uivEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDPROGRAMSTRINGEXTPROC epoxy_glNamedProgramStringEXT = epoxy_glNamedProgramStringEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDRENDERBUFFERSTORAGEPROC epoxy_glNamedRenderbufferStorage = epoxy_glNamedRenderbufferStorage_global_rewrite_ptr;

PUBLIC PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC epoxy_glNamedRenderbufferStorageEXT = epoxy_glNamedRenderbufferStorageEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC epoxy_glNamedRenderbufferStorageMultisample = epoxy_glNamedRenderbufferStorageMultisample_global_rewrite_ptr;

PUBLIC PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC epoxy_glNamedRenderbufferStorageMultisampleCoverageEXT = epoxy_glNamedRenderbufferStorageMultisampleCoverageEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC epoxy_glNamedRenderbufferStorageMultisampleEXT = epoxy_glNamedRenderbufferStorageMultisampleEXT_global_rewrite_ptr;

PUBLIC PFNGLNAMEDSTRINGARBPROC epoxy_glNamedStringARB = epoxy_glNamedStringARB_global_rewrite_ptr;

PUBLIC PFNGLNEWLISTPROC epoxy_glNewList = epoxy_glNewList_global_rewrite_ptr;

PUBLIC PFNGLNEWOBJECTBUFFERATIPROC epoxy_glNewObjectBufferATI = epoxy_glNewObjectBufferATI_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3BPROC epoxy_glNormal3b = epoxy_glNormal3b_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3BVPROC epoxy_glNormal3bv = epoxy_glNormal3bv_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3DPROC epoxy_glNormal3d = epoxy_glNormal3d_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3DVPROC epoxy_glNormal3dv = epoxy_glNormal3dv_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3FPROC epoxy_glNormal3f = epoxy_glNormal3f_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3FVERTEX3FSUNPROC epoxy_glNormal3fVertex3fSUN = epoxy_glNormal3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3FVERTEX3FVSUNPROC epoxy_glNormal3fVertex3fvSUN = epoxy_glNormal3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3FVPROC epoxy_glNormal3fv = epoxy_glNormal3fv_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3HNVPROC epoxy_glNormal3hNV = epoxy_glNormal3hNV_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3HVNVPROC epoxy_glNormal3hvNV = epoxy_glNormal3hvNV_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3IPROC epoxy_glNormal3i = epoxy_glNormal3i_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3IVPROC epoxy_glNormal3iv = epoxy_glNormal3iv_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3SPROC epoxy_glNormal3s = epoxy_glNormal3s_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3SVPROC epoxy_glNormal3sv = epoxy_glNormal3sv_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3XPROC epoxy_glNormal3x = epoxy_glNormal3x_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3XOESPROC epoxy_glNormal3xOES = epoxy_glNormal3xOES_global_rewrite_ptr;

PUBLIC PFNGLNORMAL3XVOESPROC epoxy_glNormal3xvOES = epoxy_glNormal3xvOES_global_rewrite_ptr;

PUBLIC PFNGLNORMALFORMATNVPROC epoxy_glNormalFormatNV = epoxy_glNormalFormatNV_global_rewrite_ptr;

PUBLIC PFNGLNORMALP3UIPROC epoxy_glNormalP3ui = epoxy_glNormalP3ui_global_rewrite_ptr;

PUBLIC PFNGLNORMALP3UIVPROC epoxy_glNormalP3uiv = epoxy_glNormalP3uiv_global_rewrite_ptr;

PUBLIC PFNGLNORMALPOINTERPROC epoxy_glNormalPointer = epoxy_glNormalPointer_global_rewrite_ptr;

PUBLIC PFNGLNORMALPOINTEREXTPROC epoxy_glNormalPointerEXT = epoxy_glNormalPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLNORMALPOINTERLISTIBMPROC epoxy_glNormalPointerListIBM = epoxy_glNormalPointerListIBM_global_rewrite_ptr;

PUBLIC PFNGLNORMALPOINTERVINTELPROC epoxy_glNormalPointervINTEL = epoxy_glNormalPointervINTEL_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3BATIPROC epoxy_glNormalStream3bATI = epoxy_glNormalStream3bATI_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3BVATIPROC epoxy_glNormalStream3bvATI = epoxy_glNormalStream3bvATI_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3DATIPROC epoxy_glNormalStream3dATI = epoxy_glNormalStream3dATI_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3DVATIPROC epoxy_glNormalStream3dvATI = epoxy_glNormalStream3dvATI_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3FATIPROC epoxy_glNormalStream3fATI = epoxy_glNormalStream3fATI_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3FVATIPROC epoxy_glNormalStream3fvATI = epoxy_glNormalStream3fvATI_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3IATIPROC epoxy_glNormalStream3iATI = epoxy_glNormalStream3iATI_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3IVATIPROC epoxy_glNormalStream3ivATI = epoxy_glNormalStream3ivATI_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3SATIPROC epoxy_glNormalStream3sATI = epoxy_glNormalStream3sATI_global_rewrite_ptr;

PUBLIC PFNGLNORMALSTREAM3SVATIPROC epoxy_glNormalStream3svATI = epoxy_glNormalStream3svATI_global_rewrite_ptr;

PUBLIC PFNGLOBJECTLABELPROC epoxy_glObjectLabel = epoxy_glObjectLabel_global_rewrite_ptr;

PUBLIC PFNGLOBJECTLABELKHRPROC epoxy_glObjectLabelKHR = epoxy_glObjectLabelKHR_global_rewrite_ptr;

PUBLIC PFNGLOBJECTPTRLABELPROC epoxy_glObjectPtrLabel = epoxy_glObjectPtrLabel_global_rewrite_ptr;

PUBLIC PFNGLOBJECTPTRLABELKHRPROC epoxy_glObjectPtrLabelKHR = epoxy_glObjectPtrLabelKHR_global_rewrite_ptr;

PUBLIC PFNGLOBJECTPURGEABLEAPPLEPROC epoxy_glObjectPurgeableAPPLE = epoxy_glObjectPurgeableAPPLE_global_rewrite_ptr;

PUBLIC PFNGLOBJECTUNPURGEABLEAPPLEPROC epoxy_glObjectUnpurgeableAPPLE = epoxy_glObjectUnpurgeableAPPLE_global_rewrite_ptr;

PUBLIC PFNGLORTHOPROC epoxy_glOrtho = epoxy_glOrtho_global_rewrite_ptr;

PUBLIC PFNGLORTHOFPROC epoxy_glOrthof = epoxy_glOrthof_global_rewrite_ptr;

PUBLIC PFNGLORTHOFOESPROC epoxy_glOrthofOES = epoxy_glOrthofOES_global_rewrite_ptr;

PUBLIC PFNGLORTHOXPROC epoxy_glOrthox = epoxy_glOrthox_global_rewrite_ptr;

PUBLIC PFNGLORTHOXOESPROC epoxy_glOrthoxOES = epoxy_glOrthoxOES_global_rewrite_ptr;

PUBLIC PFNGLPNTRIANGLESFATIPROC epoxy_glPNTrianglesfATI = epoxy_glPNTrianglesfATI_global_rewrite_ptr;

PUBLIC PFNGLPNTRIANGLESIATIPROC epoxy_glPNTrianglesiATI = epoxy_glPNTrianglesiATI_global_rewrite_ptr;

PUBLIC PFNGLPASSTEXCOORDATIPROC epoxy_glPassTexCoordATI = epoxy_glPassTexCoordATI_global_rewrite_ptr;

PUBLIC PFNGLPASSTHROUGHPROC epoxy_glPassThrough = epoxy_glPassThrough_global_rewrite_ptr;

PUBLIC PFNGLPASSTHROUGHXOESPROC epoxy_glPassThroughxOES = epoxy_glPassThroughxOES_global_rewrite_ptr;

PUBLIC PFNGLPATCHPARAMETERFVPROC epoxy_glPatchParameterfv = epoxy_glPatchParameterfv_global_rewrite_ptr;

PUBLIC PFNGLPATCHPARAMETERIPROC epoxy_glPatchParameteri = epoxy_glPatchParameteri_global_rewrite_ptr;

PUBLIC PFNGLPATCHPARAMETERIEXTPROC epoxy_glPatchParameteriEXT = epoxy_glPatchParameteriEXT_global_rewrite_ptr;

PUBLIC PFNGLPATCHPARAMETERIOESPROC epoxy_glPatchParameteriOES = epoxy_glPatchParameteriOES_global_rewrite_ptr;

PUBLIC PFNGLPATHCOLORGENNVPROC epoxy_glPathColorGenNV = epoxy_glPathColorGenNV_global_rewrite_ptr;

PUBLIC PFNGLPATHCOMMANDSNVPROC epoxy_glPathCommandsNV = epoxy_glPathCommandsNV_global_rewrite_ptr;

PUBLIC PFNGLPATHCOORDSNVPROC epoxy_glPathCoordsNV = epoxy_glPathCoordsNV_global_rewrite_ptr;

PUBLIC PFNGLPATHCOVERDEPTHFUNCNVPROC epoxy_glPathCoverDepthFuncNV = epoxy_glPathCoverDepthFuncNV_global_rewrite_ptr;

PUBLIC PFNGLPATHDASHARRAYNVPROC epoxy_glPathDashArrayNV = epoxy_glPathDashArrayNV_global_rewrite_ptr;

PUBLIC PFNGLPATHFOGGENNVPROC epoxy_glPathFogGenNV = epoxy_glPathFogGenNV_global_rewrite_ptr;

PUBLIC PFNGLPATHGLYPHINDEXARRAYNVPROC epoxy_glPathGlyphIndexArrayNV = epoxy_glPathGlyphIndexArrayNV_global_rewrite_ptr;

PUBLIC PFNGLPATHGLYPHINDEXRANGENVPROC epoxy_glPathGlyphIndexRangeNV = epoxy_glPathGlyphIndexRangeNV_global_rewrite_ptr;

PUBLIC PFNGLPATHGLYPHRANGENVPROC epoxy_glPathGlyphRangeNV = epoxy_glPathGlyphRangeNV_global_rewrite_ptr;

PUBLIC PFNGLPATHGLYPHSNVPROC epoxy_glPathGlyphsNV = epoxy_glPathGlyphsNV_global_rewrite_ptr;

PUBLIC PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC epoxy_glPathMemoryGlyphIndexArrayNV = epoxy_glPathMemoryGlyphIndexArrayNV_global_rewrite_ptr;

PUBLIC PFNGLPATHPARAMETERFNVPROC epoxy_glPathParameterfNV = epoxy_glPathParameterfNV_global_rewrite_ptr;

PUBLIC PFNGLPATHPARAMETERFVNVPROC epoxy_glPathParameterfvNV = epoxy_glPathParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLPATHPARAMETERINVPROC epoxy_glPathParameteriNV = epoxy_glPathParameteriNV_global_rewrite_ptr;

PUBLIC PFNGLPATHPARAMETERIVNVPROC epoxy_glPathParameterivNV = epoxy_glPathParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLPATHSTENCILDEPTHOFFSETNVPROC epoxy_glPathStencilDepthOffsetNV = epoxy_glPathStencilDepthOffsetNV_global_rewrite_ptr;

PUBLIC PFNGLPATHSTENCILFUNCNVPROC epoxy_glPathStencilFuncNV = epoxy_glPathStencilFuncNV_global_rewrite_ptr;

PUBLIC PFNGLPATHSTRINGNVPROC epoxy_glPathStringNV = epoxy_glPathStringNV_global_rewrite_ptr;

PUBLIC PFNGLPATHSUBCOMMANDSNVPROC epoxy_glPathSubCommandsNV = epoxy_glPathSubCommandsNV_global_rewrite_ptr;

PUBLIC PFNGLPATHSUBCOORDSNVPROC epoxy_glPathSubCoordsNV = epoxy_glPathSubCoordsNV_global_rewrite_ptr;

PUBLIC PFNGLPATHTEXGENNVPROC epoxy_glPathTexGenNV = epoxy_glPathTexGenNV_global_rewrite_ptr;

PUBLIC PFNGLPAUSETRANSFORMFEEDBACKPROC epoxy_glPauseTransformFeedback = epoxy_glPauseTransformFeedback_global_rewrite_ptr;

PUBLIC PFNGLPAUSETRANSFORMFEEDBACKNVPROC epoxy_glPauseTransformFeedbackNV = epoxy_glPauseTransformFeedbackNV_global_rewrite_ptr;

PUBLIC PFNGLPIXELDATARANGENVPROC epoxy_glPixelDataRangeNV = epoxy_glPixelDataRangeNV_global_rewrite_ptr;

PUBLIC PFNGLPIXELMAPFVPROC epoxy_glPixelMapfv = epoxy_glPixelMapfv_global_rewrite_ptr;

PUBLIC PFNGLPIXELMAPUIVPROC epoxy_glPixelMapuiv = epoxy_glPixelMapuiv_global_rewrite_ptr;

PUBLIC PFNGLPIXELMAPUSVPROC epoxy_glPixelMapusv = epoxy_glPixelMapusv_global_rewrite_ptr;

PUBLIC PFNGLPIXELMAPXPROC epoxy_glPixelMapx = epoxy_glPixelMapx_global_rewrite_ptr;

PUBLIC PFNGLPIXELSTOREFPROC epoxy_glPixelStoref = epoxy_glPixelStoref_global_rewrite_ptr;

PUBLIC PFNGLPIXELSTOREIPROC epoxy_glPixelStorei = epoxy_glPixelStorei_global_rewrite_ptr;

PUBLIC PFNGLPIXELSTOREXPROC epoxy_glPixelStorex = epoxy_glPixelStorex_global_rewrite_ptr;

PUBLIC PFNGLPIXELTEXGENPARAMETERFSGISPROC epoxy_glPixelTexGenParameterfSGIS = epoxy_glPixelTexGenParameterfSGIS_global_rewrite_ptr;

PUBLIC PFNGLPIXELTEXGENPARAMETERFVSGISPROC epoxy_glPixelTexGenParameterfvSGIS = epoxy_glPixelTexGenParameterfvSGIS_global_rewrite_ptr;

PUBLIC PFNGLPIXELTEXGENPARAMETERISGISPROC epoxy_glPixelTexGenParameteriSGIS = epoxy_glPixelTexGenParameteriSGIS_global_rewrite_ptr;

PUBLIC PFNGLPIXELTEXGENPARAMETERIVSGISPROC epoxy_glPixelTexGenParameterivSGIS = epoxy_glPixelTexGenParameterivSGIS_global_rewrite_ptr;

PUBLIC PFNGLPIXELTEXGENSGIXPROC epoxy_glPixelTexGenSGIX = epoxy_glPixelTexGenSGIX_global_rewrite_ptr;

PUBLIC PFNGLPIXELTRANSFERFPROC epoxy_glPixelTransferf = epoxy_glPixelTransferf_global_rewrite_ptr;

PUBLIC PFNGLPIXELTRANSFERIPROC epoxy_glPixelTransferi = epoxy_glPixelTransferi_global_rewrite_ptr;

PUBLIC PFNGLPIXELTRANSFERXOESPROC epoxy_glPixelTransferxOES = epoxy_glPixelTransferxOES_global_rewrite_ptr;

PUBLIC PFNGLPIXELTRANSFORMPARAMETERFEXTPROC epoxy_glPixelTransformParameterfEXT = epoxy_glPixelTransformParameterfEXT_global_rewrite_ptr;

PUBLIC PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC epoxy_glPixelTransformParameterfvEXT = epoxy_glPixelTransformParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLPIXELTRANSFORMPARAMETERIEXTPROC epoxy_glPixelTransformParameteriEXT = epoxy_glPixelTransformParameteriEXT_global_rewrite_ptr;

PUBLIC PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC epoxy_glPixelTransformParameterivEXT = epoxy_glPixelTransformParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLPIXELZOOMPROC epoxy_glPixelZoom = epoxy_glPixelZoom_global_rewrite_ptr;

PUBLIC PFNGLPIXELZOOMXOESPROC epoxy_glPixelZoomxOES = epoxy_glPixelZoomxOES_global_rewrite_ptr;

PUBLIC PFNGLPOINTALONGPATHNVPROC epoxy_glPointAlongPathNV = epoxy_glPointAlongPathNV_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERFPROC epoxy_glPointParameterf = epoxy_glPointParameterf_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERFARBPROC epoxy_glPointParameterfARB = epoxy_glPointParameterfARB_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERFEXTPROC epoxy_glPointParameterfEXT = epoxy_glPointParameterfEXT_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERFSGISPROC epoxy_glPointParameterfSGIS = epoxy_glPointParameterfSGIS_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERFVPROC epoxy_glPointParameterfv = epoxy_glPointParameterfv_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERFVARBPROC epoxy_glPointParameterfvARB = epoxy_glPointParameterfvARB_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERFVEXTPROC epoxy_glPointParameterfvEXT = epoxy_glPointParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERFVSGISPROC epoxy_glPointParameterfvSGIS = epoxy_glPointParameterfvSGIS_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERIPROC epoxy_glPointParameteri = epoxy_glPointParameteri_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERINVPROC epoxy_glPointParameteriNV = epoxy_glPointParameteriNV_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERIVPROC epoxy_glPointParameteriv = epoxy_glPointParameteriv_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERIVNVPROC epoxy_glPointParameterivNV = epoxy_glPointParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERXPROC epoxy_glPointParameterx = epoxy_glPointParameterx_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERXOESPROC epoxy_glPointParameterxOES = epoxy_glPointParameterxOES_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERXVPROC epoxy_glPointParameterxv = epoxy_glPointParameterxv_global_rewrite_ptr;

PUBLIC PFNGLPOINTPARAMETERXVOESPROC epoxy_glPointParameterxvOES = epoxy_glPointParameterxvOES_global_rewrite_ptr;

PUBLIC PFNGLPOINTSIZEPROC epoxy_glPointSize = epoxy_glPointSize_global_rewrite_ptr;

PUBLIC PFNGLPOINTSIZEPOINTEROESPROC epoxy_glPointSizePointerOES = epoxy_glPointSizePointerOES_global_rewrite_ptr;

PUBLIC PFNGLPOINTSIZEXPROC epoxy_glPointSizex = epoxy_glPointSizex_global_rewrite_ptr;

PUBLIC PFNGLPOINTSIZEXOESPROC epoxy_glPointSizexOES = epoxy_glPointSizexOES_global_rewrite_ptr;

PUBLIC PFNGLPOLLASYNCSGIXPROC epoxy_glPollAsyncSGIX = epoxy_glPollAsyncSGIX_global_rewrite_ptr;

PUBLIC PFNGLPOLLINSTRUMENTSSGIXPROC epoxy_glPollInstrumentsSGIX = epoxy_glPollInstrumentsSGIX_global_rewrite_ptr;

PUBLIC PFNGLPOLYGONMODEPROC epoxy_glPolygonMode = epoxy_glPolygonMode_global_rewrite_ptr;

PUBLIC PFNGLPOLYGONMODENVPROC epoxy_glPolygonModeNV = epoxy_glPolygonModeNV_global_rewrite_ptr;

PUBLIC PFNGLPOLYGONOFFSETPROC epoxy_glPolygonOffset = epoxy_glPolygonOffset_global_rewrite_ptr;

PUBLIC PFNGLPOLYGONOFFSETCLAMPEXTPROC epoxy_glPolygonOffsetClampEXT = epoxy_glPolygonOffsetClampEXT_global_rewrite_ptr;

PUBLIC PFNGLPOLYGONOFFSETEXTPROC epoxy_glPolygonOffsetEXT = epoxy_glPolygonOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLPOLYGONOFFSETXPROC epoxy_glPolygonOffsetx = epoxy_glPolygonOffsetx_global_rewrite_ptr;

PUBLIC PFNGLPOLYGONOFFSETXOESPROC epoxy_glPolygonOffsetxOES = epoxy_glPolygonOffsetxOES_global_rewrite_ptr;

PUBLIC PFNGLPOLYGONSTIPPLEPROC epoxy_glPolygonStipple = epoxy_glPolygonStipple_global_rewrite_ptr;

PUBLIC PFNGLPOPATTRIBPROC epoxy_glPopAttrib = epoxy_glPopAttrib_global_rewrite_ptr;

PUBLIC PFNGLPOPCLIENTATTRIBPROC epoxy_glPopClientAttrib = epoxy_glPopClientAttrib_global_rewrite_ptr;

PUBLIC PFNGLPOPDEBUGGROUPPROC epoxy_glPopDebugGroup = epoxy_glPopDebugGroup_global_rewrite_ptr;

PUBLIC PFNGLPOPDEBUGGROUPKHRPROC epoxy_glPopDebugGroupKHR = epoxy_glPopDebugGroupKHR_global_rewrite_ptr;

PUBLIC PFNGLPOPGROUPMARKEREXTPROC epoxy_glPopGroupMarkerEXT = epoxy_glPopGroupMarkerEXT_global_rewrite_ptr;

PUBLIC PFNGLPOPMATRIXPROC epoxy_glPopMatrix = epoxy_glPopMatrix_global_rewrite_ptr;

PUBLIC PFNGLPOPNAMEPROC epoxy_glPopName = epoxy_glPopName_global_rewrite_ptr;

PUBLIC PFNGLPRESENTFRAMEDUALFILLNVPROC epoxy_glPresentFrameDualFillNV = epoxy_glPresentFrameDualFillNV_global_rewrite_ptr;

PUBLIC PFNGLPRESENTFRAMEKEYEDNVPROC epoxy_glPresentFrameKeyedNV = epoxy_glPresentFrameKeyedNV_global_rewrite_ptr;

PUBLIC PFNGLPRIMITIVEBOUNDINGBOXEXTPROC epoxy_glPrimitiveBoundingBoxEXT = epoxy_glPrimitiveBoundingBoxEXT_global_rewrite_ptr;

PUBLIC PFNGLPRIMITIVEBOUNDINGBOXOESPROC epoxy_glPrimitiveBoundingBoxOES = epoxy_glPrimitiveBoundingBoxOES_global_rewrite_ptr;

PUBLIC PFNGLPRIMITIVERESTARTINDEXPROC epoxy_glPrimitiveRestartIndex = epoxy_glPrimitiveRestartIndex_global_rewrite_ptr;

PUBLIC PFNGLPRIMITIVERESTARTINDEXNVPROC epoxy_glPrimitiveRestartIndexNV = epoxy_glPrimitiveRestartIndexNV_global_rewrite_ptr;

PUBLIC PFNGLPRIMITIVERESTARTNVPROC epoxy_glPrimitiveRestartNV = epoxy_glPrimitiveRestartNV_global_rewrite_ptr;

PUBLIC PFNGLPRIORITIZETEXTURESPROC epoxy_glPrioritizeTextures = epoxy_glPrioritizeTextures_global_rewrite_ptr;

PUBLIC PFNGLPRIORITIZETEXTURESEXTPROC epoxy_glPrioritizeTexturesEXT = epoxy_glPrioritizeTexturesEXT_global_rewrite_ptr;

PUBLIC PFNGLPRIORITIZETEXTURESXOESPROC epoxy_glPrioritizeTexturesxOES = epoxy_glPrioritizeTexturesxOES_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMBINARYPROC epoxy_glProgramBinary = epoxy_glProgramBinary_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMBINARYOESPROC epoxy_glProgramBinaryOES = epoxy_glProgramBinaryOES_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC epoxy_glProgramBufferParametersIivNV = epoxy_glProgramBufferParametersIivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC epoxy_glProgramBufferParametersIuivNV = epoxy_glProgramBufferParametersIuivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC epoxy_glProgramBufferParametersfvNV = epoxy_glProgramBufferParametersfvNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETER4DARBPROC epoxy_glProgramEnvParameter4dARB = epoxy_glProgramEnvParameter4dARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETER4DVARBPROC epoxy_glProgramEnvParameter4dvARB = epoxy_glProgramEnvParameter4dvARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETER4FARBPROC epoxy_glProgramEnvParameter4fARB = epoxy_glProgramEnvParameter4fARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETER4FVARBPROC epoxy_glProgramEnvParameter4fvARB = epoxy_glProgramEnvParameter4fvARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETERI4INVPROC epoxy_glProgramEnvParameterI4iNV = epoxy_glProgramEnvParameterI4iNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETERI4IVNVPROC epoxy_glProgramEnvParameterI4ivNV = epoxy_glProgramEnvParameterI4ivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETERI4UINVPROC epoxy_glProgramEnvParameterI4uiNV = epoxy_glProgramEnvParameterI4uiNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETERI4UIVNVPROC epoxy_glProgramEnvParameterI4uivNV = epoxy_glProgramEnvParameterI4uivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETERS4FVEXTPROC epoxy_glProgramEnvParameters4fvEXT = epoxy_glProgramEnvParameters4fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETERSI4IVNVPROC epoxy_glProgramEnvParametersI4ivNV = epoxy_glProgramEnvParametersI4ivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC epoxy_glProgramEnvParametersI4uivNV = epoxy_glProgramEnvParametersI4uivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETER4DARBPROC epoxy_glProgramLocalParameter4dARB = epoxy_glProgramLocalParameter4dARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETER4DVARBPROC epoxy_glProgramLocalParameter4dvARB = epoxy_glProgramLocalParameter4dvARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETER4FARBPROC epoxy_glProgramLocalParameter4fARB = epoxy_glProgramLocalParameter4fARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETER4FVARBPROC epoxy_glProgramLocalParameter4fvARB = epoxy_glProgramLocalParameter4fvARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETERI4INVPROC epoxy_glProgramLocalParameterI4iNV = epoxy_glProgramLocalParameterI4iNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC epoxy_glProgramLocalParameterI4ivNV = epoxy_glProgramLocalParameterI4ivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETERI4UINVPROC epoxy_glProgramLocalParameterI4uiNV = epoxy_glProgramLocalParameterI4uiNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC epoxy_glProgramLocalParameterI4uivNV = epoxy_glProgramLocalParameterI4uivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC epoxy_glProgramLocalParameters4fvEXT = epoxy_glProgramLocalParameters4fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC epoxy_glProgramLocalParametersI4ivNV = epoxy_glProgramLocalParametersI4ivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC epoxy_glProgramLocalParametersI4uivNV = epoxy_glProgramLocalParametersI4uivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMNAMEDPARAMETER4DNVPROC epoxy_glProgramNamedParameter4dNV = epoxy_glProgramNamedParameter4dNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC epoxy_glProgramNamedParameter4dvNV = epoxy_glProgramNamedParameter4dvNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMNAMEDPARAMETER4FNVPROC epoxy_glProgramNamedParameter4fNV = epoxy_glProgramNamedParameter4fNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC epoxy_glProgramNamedParameter4fvNV = epoxy_glProgramNamedParameter4fvNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPARAMETER4DNVPROC epoxy_glProgramParameter4dNV = epoxy_glProgramParameter4dNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPARAMETER4DVNVPROC epoxy_glProgramParameter4dvNV = epoxy_glProgramParameter4dvNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPARAMETER4FNVPROC epoxy_glProgramParameter4fNV = epoxy_glProgramParameter4fNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPARAMETER4FVNVPROC epoxy_glProgramParameter4fvNV = epoxy_glProgramParameter4fvNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPARAMETERIPROC epoxy_glProgramParameteri = epoxy_glProgramParameteri_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPARAMETERIARBPROC epoxy_glProgramParameteriARB = epoxy_glProgramParameteriARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPARAMETERIEXTPROC epoxy_glProgramParameteriEXT = epoxy_glProgramParameteriEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPARAMETERS4DVNVPROC epoxy_glProgramParameters4dvNV = epoxy_glProgramParameters4dvNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPARAMETERS4FVNVPROC epoxy_glProgramParameters4fvNV = epoxy_glProgramParameters4fvNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC epoxy_glProgramPathFragmentInputGenNV = epoxy_glProgramPathFragmentInputGenNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMSTRINGARBPROC epoxy_glProgramStringARB = epoxy_glProgramStringARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC epoxy_glProgramSubroutineParametersuivNV = epoxy_glProgramSubroutineParametersuivNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1DPROC epoxy_glProgramUniform1d = epoxy_glProgramUniform1d_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1DEXTPROC epoxy_glProgramUniform1dEXT = epoxy_glProgramUniform1dEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1DVPROC epoxy_glProgramUniform1dv = epoxy_glProgramUniform1dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1DVEXTPROC epoxy_glProgramUniform1dvEXT = epoxy_glProgramUniform1dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1FPROC epoxy_glProgramUniform1f = epoxy_glProgramUniform1f_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1FEXTPROC epoxy_glProgramUniform1fEXT = epoxy_glProgramUniform1fEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1FVPROC epoxy_glProgramUniform1fv = epoxy_glProgramUniform1fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1FVEXTPROC epoxy_glProgramUniform1fvEXT = epoxy_glProgramUniform1fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1IPROC epoxy_glProgramUniform1i = epoxy_glProgramUniform1i_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1I64NVPROC epoxy_glProgramUniform1i64NV = epoxy_glProgramUniform1i64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1I64VNVPROC epoxy_glProgramUniform1i64vNV = epoxy_glProgramUniform1i64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1IEXTPROC epoxy_glProgramUniform1iEXT = epoxy_glProgramUniform1iEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1IVPROC epoxy_glProgramUniform1iv = epoxy_glProgramUniform1iv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1IVEXTPROC epoxy_glProgramUniform1ivEXT = epoxy_glProgramUniform1ivEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1UIPROC epoxy_glProgramUniform1ui = epoxy_glProgramUniform1ui_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1UI64NVPROC epoxy_glProgramUniform1ui64NV = epoxy_glProgramUniform1ui64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1UI64VNVPROC epoxy_glProgramUniform1ui64vNV = epoxy_glProgramUniform1ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1UIEXTPROC epoxy_glProgramUniform1uiEXT = epoxy_glProgramUniform1uiEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1UIVPROC epoxy_glProgramUniform1uiv = epoxy_glProgramUniform1uiv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM1UIVEXTPROC epoxy_glProgramUniform1uivEXT = epoxy_glProgramUniform1uivEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2DPROC epoxy_glProgramUniform2d = epoxy_glProgramUniform2d_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2DEXTPROC epoxy_glProgramUniform2dEXT = epoxy_glProgramUniform2dEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2DVPROC epoxy_glProgramUniform2dv = epoxy_glProgramUniform2dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2DVEXTPROC epoxy_glProgramUniform2dvEXT = epoxy_glProgramUniform2dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2FPROC epoxy_glProgramUniform2f = epoxy_glProgramUniform2f_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2FEXTPROC epoxy_glProgramUniform2fEXT = epoxy_glProgramUniform2fEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2FVPROC epoxy_glProgramUniform2fv = epoxy_glProgramUniform2fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2FVEXTPROC epoxy_glProgramUniform2fvEXT = epoxy_glProgramUniform2fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2IPROC epoxy_glProgramUniform2i = epoxy_glProgramUniform2i_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2I64NVPROC epoxy_glProgramUniform2i64NV = epoxy_glProgramUniform2i64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2I64VNVPROC epoxy_glProgramUniform2i64vNV = epoxy_glProgramUniform2i64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2IEXTPROC epoxy_glProgramUniform2iEXT = epoxy_glProgramUniform2iEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2IVPROC epoxy_glProgramUniform2iv = epoxy_glProgramUniform2iv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2IVEXTPROC epoxy_glProgramUniform2ivEXT = epoxy_glProgramUniform2ivEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2UIPROC epoxy_glProgramUniform2ui = epoxy_glProgramUniform2ui_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2UI64NVPROC epoxy_glProgramUniform2ui64NV = epoxy_glProgramUniform2ui64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2UI64VNVPROC epoxy_glProgramUniform2ui64vNV = epoxy_glProgramUniform2ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2UIEXTPROC epoxy_glProgramUniform2uiEXT = epoxy_glProgramUniform2uiEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2UIVPROC epoxy_glProgramUniform2uiv = epoxy_glProgramUniform2uiv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM2UIVEXTPROC epoxy_glProgramUniform2uivEXT = epoxy_glProgramUniform2uivEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3DPROC epoxy_glProgramUniform3d = epoxy_glProgramUniform3d_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3DEXTPROC epoxy_glProgramUniform3dEXT = epoxy_glProgramUniform3dEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3DVPROC epoxy_glProgramUniform3dv = epoxy_glProgramUniform3dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3DVEXTPROC epoxy_glProgramUniform3dvEXT = epoxy_glProgramUniform3dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3FPROC epoxy_glProgramUniform3f = epoxy_glProgramUniform3f_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3FEXTPROC epoxy_glProgramUniform3fEXT = epoxy_glProgramUniform3fEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3FVPROC epoxy_glProgramUniform3fv = epoxy_glProgramUniform3fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3FVEXTPROC epoxy_glProgramUniform3fvEXT = epoxy_glProgramUniform3fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3IPROC epoxy_glProgramUniform3i = epoxy_glProgramUniform3i_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3I64NVPROC epoxy_glProgramUniform3i64NV = epoxy_glProgramUniform3i64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3I64VNVPROC epoxy_glProgramUniform3i64vNV = epoxy_glProgramUniform3i64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3IEXTPROC epoxy_glProgramUniform3iEXT = epoxy_glProgramUniform3iEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3IVPROC epoxy_glProgramUniform3iv = epoxy_glProgramUniform3iv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3IVEXTPROC epoxy_glProgramUniform3ivEXT = epoxy_glProgramUniform3ivEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3UIPROC epoxy_glProgramUniform3ui = epoxy_glProgramUniform3ui_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3UI64NVPROC epoxy_glProgramUniform3ui64NV = epoxy_glProgramUniform3ui64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3UI64VNVPROC epoxy_glProgramUniform3ui64vNV = epoxy_glProgramUniform3ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3UIEXTPROC epoxy_glProgramUniform3uiEXT = epoxy_glProgramUniform3uiEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3UIVPROC epoxy_glProgramUniform3uiv = epoxy_glProgramUniform3uiv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM3UIVEXTPROC epoxy_glProgramUniform3uivEXT = epoxy_glProgramUniform3uivEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4DPROC epoxy_glProgramUniform4d = epoxy_glProgramUniform4d_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4DEXTPROC epoxy_glProgramUniform4dEXT = epoxy_glProgramUniform4dEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4DVPROC epoxy_glProgramUniform4dv = epoxy_glProgramUniform4dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4DVEXTPROC epoxy_glProgramUniform4dvEXT = epoxy_glProgramUniform4dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4FPROC epoxy_glProgramUniform4f = epoxy_glProgramUniform4f_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4FEXTPROC epoxy_glProgramUniform4fEXT = epoxy_glProgramUniform4fEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4FVPROC epoxy_glProgramUniform4fv = epoxy_glProgramUniform4fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4FVEXTPROC epoxy_glProgramUniform4fvEXT = epoxy_glProgramUniform4fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4IPROC epoxy_glProgramUniform4i = epoxy_glProgramUniform4i_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4I64NVPROC epoxy_glProgramUniform4i64NV = epoxy_glProgramUniform4i64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4I64VNVPROC epoxy_glProgramUniform4i64vNV = epoxy_glProgramUniform4i64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4IEXTPROC epoxy_glProgramUniform4iEXT = epoxy_glProgramUniform4iEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4IVPROC epoxy_glProgramUniform4iv = epoxy_glProgramUniform4iv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4IVEXTPROC epoxy_glProgramUniform4ivEXT = epoxy_glProgramUniform4ivEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4UIPROC epoxy_glProgramUniform4ui = epoxy_glProgramUniform4ui_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4UI64NVPROC epoxy_glProgramUniform4ui64NV = epoxy_glProgramUniform4ui64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4UI64VNVPROC epoxy_glProgramUniform4ui64vNV = epoxy_glProgramUniform4ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4UIEXTPROC epoxy_glProgramUniform4uiEXT = epoxy_glProgramUniform4uiEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4UIVPROC epoxy_glProgramUniform4uiv = epoxy_glProgramUniform4uiv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORM4UIVEXTPROC epoxy_glProgramUniform4uivEXT = epoxy_glProgramUniform4uivEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC epoxy_glProgramUniformHandleui64ARB = epoxy_glProgramUniformHandleui64ARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC epoxy_glProgramUniformHandleui64NV = epoxy_glProgramUniformHandleui64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC epoxy_glProgramUniformHandleui64vARB = epoxy_glProgramUniformHandleui64vARB_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC epoxy_glProgramUniformHandleui64vNV = epoxy_glProgramUniformHandleui64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2DVPROC epoxy_glProgramUniformMatrix2dv = epoxy_glProgramUniformMatrix2dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC epoxy_glProgramUniformMatrix2dvEXT = epoxy_glProgramUniformMatrix2dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2FVPROC epoxy_glProgramUniformMatrix2fv = epoxy_glProgramUniformMatrix2fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC epoxy_glProgramUniformMatrix2fvEXT = epoxy_glProgramUniformMatrix2fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC epoxy_glProgramUniformMatrix2x3dv = epoxy_glProgramUniformMatrix2x3dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC epoxy_glProgramUniformMatrix2x3dvEXT = epoxy_glProgramUniformMatrix2x3dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC epoxy_glProgramUniformMatrix2x3fv = epoxy_glProgramUniformMatrix2x3fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC epoxy_glProgramUniformMatrix2x3fvEXT = epoxy_glProgramUniformMatrix2x3fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC epoxy_glProgramUniformMatrix2x4dv = epoxy_glProgramUniformMatrix2x4dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC epoxy_glProgramUniformMatrix2x4dvEXT = epoxy_glProgramUniformMatrix2x4dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC epoxy_glProgramUniformMatrix2x4fv = epoxy_glProgramUniformMatrix2x4fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC epoxy_glProgramUniformMatrix2x4fvEXT = epoxy_glProgramUniformMatrix2x4fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3DVPROC epoxy_glProgramUniformMatrix3dv = epoxy_glProgramUniformMatrix3dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC epoxy_glProgramUniformMatrix3dvEXT = epoxy_glProgramUniformMatrix3dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3FVPROC epoxy_glProgramUniformMatrix3fv = epoxy_glProgramUniformMatrix3fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC epoxy_glProgramUniformMatrix3fvEXT = epoxy_glProgramUniformMatrix3fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC epoxy_glProgramUniformMatrix3x2dv = epoxy_glProgramUniformMatrix3x2dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC epoxy_glProgramUniformMatrix3x2dvEXT = epoxy_glProgramUniformMatrix3x2dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC epoxy_glProgramUniformMatrix3x2fv = epoxy_glProgramUniformMatrix3x2fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC epoxy_glProgramUniformMatrix3x2fvEXT = epoxy_glProgramUniformMatrix3x2fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC epoxy_glProgramUniformMatrix3x4dv = epoxy_glProgramUniformMatrix3x4dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC epoxy_glProgramUniformMatrix3x4dvEXT = epoxy_glProgramUniformMatrix3x4dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC epoxy_glProgramUniformMatrix3x4fv = epoxy_glProgramUniformMatrix3x4fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC epoxy_glProgramUniformMatrix3x4fvEXT = epoxy_glProgramUniformMatrix3x4fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4DVPROC epoxy_glProgramUniformMatrix4dv = epoxy_glProgramUniformMatrix4dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC epoxy_glProgramUniformMatrix4dvEXT = epoxy_glProgramUniformMatrix4dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4FVPROC epoxy_glProgramUniformMatrix4fv = epoxy_glProgramUniformMatrix4fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC epoxy_glProgramUniformMatrix4fvEXT = epoxy_glProgramUniformMatrix4fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC epoxy_glProgramUniformMatrix4x2dv = epoxy_glProgramUniformMatrix4x2dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC epoxy_glProgramUniformMatrix4x2dvEXT = epoxy_glProgramUniformMatrix4x2dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC epoxy_glProgramUniformMatrix4x2fv = epoxy_glProgramUniformMatrix4x2fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC epoxy_glProgramUniformMatrix4x2fvEXT = epoxy_glProgramUniformMatrix4x2fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC epoxy_glProgramUniformMatrix4x3dv = epoxy_glProgramUniformMatrix4x3dv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC epoxy_glProgramUniformMatrix4x3dvEXT = epoxy_glProgramUniformMatrix4x3dvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC epoxy_glProgramUniformMatrix4x3fv = epoxy_glProgramUniformMatrix4x3fv_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC epoxy_glProgramUniformMatrix4x3fvEXT = epoxy_glProgramUniformMatrix4x3fvEXT_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMUI64NVPROC epoxy_glProgramUniformui64NV = epoxy_glProgramUniformui64NV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMUNIFORMUI64VNVPROC epoxy_glProgramUniformui64vNV = epoxy_glProgramUniformui64vNV_global_rewrite_ptr;

PUBLIC PFNGLPROGRAMVERTEXLIMITNVPROC epoxy_glProgramVertexLimitNV = epoxy_glProgramVertexLimitNV_global_rewrite_ptr;

PUBLIC PFNGLPROVOKINGVERTEXPROC epoxy_glProvokingVertex = epoxy_glProvokingVertex_global_rewrite_ptr;

PUBLIC PFNGLPROVOKINGVERTEXEXTPROC epoxy_glProvokingVertexEXT = epoxy_glProvokingVertexEXT_global_rewrite_ptr;

PUBLIC PFNGLPUSHATTRIBPROC epoxy_glPushAttrib = epoxy_glPushAttrib_global_rewrite_ptr;

PUBLIC PFNGLPUSHCLIENTATTRIBPROC epoxy_glPushClientAttrib = epoxy_glPushClientAttrib_global_rewrite_ptr;

PUBLIC PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC epoxy_glPushClientAttribDefaultEXT = epoxy_glPushClientAttribDefaultEXT_global_rewrite_ptr;

PUBLIC PFNGLPUSHDEBUGGROUPPROC epoxy_glPushDebugGroup = epoxy_glPushDebugGroup_global_rewrite_ptr;

PUBLIC PFNGLPUSHDEBUGGROUPKHRPROC epoxy_glPushDebugGroupKHR = epoxy_glPushDebugGroupKHR_global_rewrite_ptr;

PUBLIC PFNGLPUSHGROUPMARKEREXTPROC epoxy_glPushGroupMarkerEXT = epoxy_glPushGroupMarkerEXT_global_rewrite_ptr;

PUBLIC PFNGLPUSHMATRIXPROC epoxy_glPushMatrix = epoxy_glPushMatrix_global_rewrite_ptr;

PUBLIC PFNGLPUSHNAMEPROC epoxy_glPushName = epoxy_glPushName_global_rewrite_ptr;

PUBLIC PFNGLQUERYCOUNTERPROC epoxy_glQueryCounter = epoxy_glQueryCounter_global_rewrite_ptr;

PUBLIC PFNGLQUERYCOUNTEREXTPROC epoxy_glQueryCounterEXT = epoxy_glQueryCounterEXT_global_rewrite_ptr;

PUBLIC PFNGLQUERYMATRIXXOESPROC epoxy_glQueryMatrixxOES = epoxy_glQueryMatrixxOES_global_rewrite_ptr;

PUBLIC PFNGLQUERYOBJECTPARAMETERUIAMDPROC epoxy_glQueryObjectParameteruiAMD = epoxy_glQueryObjectParameteruiAMD_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2DPROC epoxy_glRasterPos2d = epoxy_glRasterPos2d_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2DVPROC epoxy_glRasterPos2dv = epoxy_glRasterPos2dv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2FPROC epoxy_glRasterPos2f = epoxy_glRasterPos2f_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2FVPROC epoxy_glRasterPos2fv = epoxy_glRasterPos2fv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2IPROC epoxy_glRasterPos2i = epoxy_glRasterPos2i_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2IVPROC epoxy_glRasterPos2iv = epoxy_glRasterPos2iv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2SPROC epoxy_glRasterPos2s = epoxy_glRasterPos2s_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2SVPROC epoxy_glRasterPos2sv = epoxy_glRasterPos2sv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2XOESPROC epoxy_glRasterPos2xOES = epoxy_glRasterPos2xOES_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS2XVOESPROC epoxy_glRasterPos2xvOES = epoxy_glRasterPos2xvOES_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3DPROC epoxy_glRasterPos3d = epoxy_glRasterPos3d_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3DVPROC epoxy_glRasterPos3dv = epoxy_glRasterPos3dv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3FPROC epoxy_glRasterPos3f = epoxy_glRasterPos3f_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3FVPROC epoxy_glRasterPos3fv = epoxy_glRasterPos3fv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3IPROC epoxy_glRasterPos3i = epoxy_glRasterPos3i_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3IVPROC epoxy_glRasterPos3iv = epoxy_glRasterPos3iv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3SPROC epoxy_glRasterPos3s = epoxy_glRasterPos3s_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3SVPROC epoxy_glRasterPos3sv = epoxy_glRasterPos3sv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3XOESPROC epoxy_glRasterPos3xOES = epoxy_glRasterPos3xOES_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS3XVOESPROC epoxy_glRasterPos3xvOES = epoxy_glRasterPos3xvOES_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4DPROC epoxy_glRasterPos4d = epoxy_glRasterPos4d_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4DVPROC epoxy_glRasterPos4dv = epoxy_glRasterPos4dv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4FPROC epoxy_glRasterPos4f = epoxy_glRasterPos4f_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4FVPROC epoxy_glRasterPos4fv = epoxy_glRasterPos4fv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4IPROC epoxy_glRasterPos4i = epoxy_glRasterPos4i_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4IVPROC epoxy_glRasterPos4iv = epoxy_glRasterPos4iv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4SPROC epoxy_glRasterPos4s = epoxy_glRasterPos4s_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4SVPROC epoxy_glRasterPos4sv = epoxy_glRasterPos4sv_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4XOESPROC epoxy_glRasterPos4xOES = epoxy_glRasterPos4xOES_global_rewrite_ptr;

PUBLIC PFNGLRASTERPOS4XVOESPROC epoxy_glRasterPos4xvOES = epoxy_glRasterPos4xvOES_global_rewrite_ptr;

PUBLIC PFNGLRASTERSAMPLESEXTPROC epoxy_glRasterSamplesEXT = epoxy_glRasterSamplesEXT_global_rewrite_ptr;

PUBLIC PFNGLREADBUFFERPROC epoxy_glReadBuffer = epoxy_glReadBuffer_global_rewrite_ptr;

PUBLIC PFNGLREADBUFFERINDEXEDEXTPROC epoxy_glReadBufferIndexedEXT = epoxy_glReadBufferIndexedEXT_global_rewrite_ptr;

PUBLIC PFNGLREADBUFFERNVPROC epoxy_glReadBufferNV = epoxy_glReadBufferNV_global_rewrite_ptr;

PUBLIC PFNGLREADINSTRUMENTSSGIXPROC epoxy_glReadInstrumentsSGIX = epoxy_glReadInstrumentsSGIX_global_rewrite_ptr;

PUBLIC PFNGLREADPIXELSPROC epoxy_glReadPixels = epoxy_glReadPixels_global_rewrite_ptr;

PUBLIC PFNGLREADNPIXELSPROC epoxy_glReadnPixels = epoxy_glReadnPixels_global_rewrite_ptr;

PUBLIC PFNGLREADNPIXELSARBPROC epoxy_glReadnPixelsARB = epoxy_glReadnPixelsARB_global_rewrite_ptr;

PUBLIC PFNGLREADNPIXELSEXTPROC epoxy_glReadnPixelsEXT = epoxy_glReadnPixelsEXT_global_rewrite_ptr;

PUBLIC PFNGLREADNPIXELSKHRPROC epoxy_glReadnPixelsKHR = epoxy_glReadnPixelsKHR_global_rewrite_ptr;

PUBLIC PFNGLRECTDPROC epoxy_glRectd = epoxy_glRectd_global_rewrite_ptr;

PUBLIC PFNGLRECTDVPROC epoxy_glRectdv = epoxy_glRectdv_global_rewrite_ptr;

PUBLIC PFNGLRECTFPROC epoxy_glRectf = epoxy_glRectf_global_rewrite_ptr;

PUBLIC PFNGLRECTFVPROC epoxy_glRectfv = epoxy_glRectfv_global_rewrite_ptr;

PUBLIC PFNGLRECTIPROC epoxy_glRecti = epoxy_glRecti_global_rewrite_ptr;

PUBLIC PFNGLRECTIVPROC epoxy_glRectiv = epoxy_glRectiv_global_rewrite_ptr;

PUBLIC PFNGLRECTSPROC epoxy_glRects = epoxy_glRects_global_rewrite_ptr;

PUBLIC PFNGLRECTSVPROC epoxy_glRectsv = epoxy_glRectsv_global_rewrite_ptr;

PUBLIC PFNGLRECTXOESPROC epoxy_glRectxOES = epoxy_glRectxOES_global_rewrite_ptr;

PUBLIC PFNGLRECTXVOESPROC epoxy_glRectxvOES = epoxy_glRectxvOES_global_rewrite_ptr;

PUBLIC PFNGLREFERENCEPLANESGIXPROC epoxy_glReferencePlaneSGIX = epoxy_glReferencePlaneSGIX_global_rewrite_ptr;

PUBLIC PFNGLRELEASESHADERCOMPILERPROC epoxy_glReleaseShaderCompiler = epoxy_glReleaseShaderCompiler_global_rewrite_ptr;

PUBLIC PFNGLRENDERMODEPROC epoxy_glRenderMode = epoxy_glRenderMode_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEPROC epoxy_glRenderbufferStorage = epoxy_glRenderbufferStorage_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEEXTPROC epoxy_glRenderbufferStorageEXT = epoxy_glRenderbufferStorageEXT_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC epoxy_glRenderbufferStorageMultisample = epoxy_glRenderbufferStorageMultisample_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC epoxy_glRenderbufferStorageMultisampleANGLE = epoxy_glRenderbufferStorageMultisampleANGLE_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC epoxy_glRenderbufferStorageMultisampleAPPLE = epoxy_glRenderbufferStorageMultisampleAPPLE_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC epoxy_glRenderbufferStorageMultisampleCoverageNV = epoxy_glRenderbufferStorageMultisampleCoverageNV_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC epoxy_glRenderbufferStorageMultisampleEXT = epoxy_glRenderbufferStorageMultisampleEXT_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC epoxy_glRenderbufferStorageMultisampleIMG = epoxy_glRenderbufferStorageMultisampleIMG_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC epoxy_glRenderbufferStorageMultisampleNV = epoxy_glRenderbufferStorageMultisampleNV_global_rewrite_ptr;

PUBLIC PFNGLRENDERBUFFERSTORAGEOESPROC epoxy_glRenderbufferStorageOES = epoxy_glRenderbufferStorageOES_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEPOINTERSUNPROC epoxy_glReplacementCodePointerSUN = epoxy_glReplacementCodePointerSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUBSUNPROC epoxy_glReplacementCodeubSUN = epoxy_glReplacementCodeubSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUBVSUNPROC epoxy_glReplacementCodeubvSUN = epoxy_glReplacementCodeubvSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiColor3fVertex3fSUN = epoxy_glReplacementCodeuiColor3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiColor3fVertex3fvSUN = epoxy_glReplacementCodeuiColor3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiColor4fNormal3fVertex3fSUN = epoxy_glReplacementCodeuiColor4fNormal3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiColor4fNormal3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC epoxy_glReplacementCodeuiColor4ubVertex3fSUN = epoxy_glReplacementCodeuiColor4ubVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC epoxy_glReplacementCodeuiColor4ubVertex3fvSUN = epoxy_glReplacementCodeuiColor4ubVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiNormal3fVertex3fSUN = epoxy_glReplacementCodeuiNormal3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiNormal3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUISUNPROC epoxy_glReplacementCodeuiSUN = epoxy_glReplacementCodeuiSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = epoxy_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC epoxy_glReplacementCodeuiTexCoord2fVertex3fSUN = epoxy_glReplacementCodeuiTexCoord2fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC epoxy_glReplacementCodeuiTexCoord2fVertex3fvSUN = epoxy_glReplacementCodeuiTexCoord2fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC epoxy_glReplacementCodeuiVertex3fSUN = epoxy_glReplacementCodeuiVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC epoxy_glReplacementCodeuiVertex3fvSUN = epoxy_glReplacementCodeuiVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUIVSUNPROC epoxy_glReplacementCodeuivSUN = epoxy_glReplacementCodeuivSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUSSUNPROC epoxy_glReplacementCodeusSUN = epoxy_glReplacementCodeusSUN_global_rewrite_ptr;

PUBLIC PFNGLREPLACEMENTCODEUSVSUNPROC epoxy_glReplacementCodeusvSUN = epoxy_glReplacementCodeusvSUN_global_rewrite_ptr;

PUBLIC PFNGLREQUESTRESIDENTPROGRAMSNVPROC epoxy_glRequestResidentProgramsNV = epoxy_glRequestResidentProgramsNV_global_rewrite_ptr;

PUBLIC PFNGLRESETHISTOGRAMPROC epoxy_glResetHistogram = epoxy_glResetHistogram_global_rewrite_ptr;

PUBLIC PFNGLRESETHISTOGRAMEXTPROC epoxy_glResetHistogramEXT = epoxy_glResetHistogramEXT_global_rewrite_ptr;

PUBLIC PFNGLRESETMINMAXPROC epoxy_glResetMinmax = epoxy_glResetMinmax_global_rewrite_ptr;

PUBLIC PFNGLRESETMINMAXEXTPROC epoxy_glResetMinmaxEXT = epoxy_glResetMinmaxEXT_global_rewrite_ptr;

PUBLIC PFNGLRESIZEBUFFERSMESAPROC epoxy_glResizeBuffersMESA = epoxy_glResizeBuffersMESA_global_rewrite_ptr;

PUBLIC PFNGLRESOLVEDEPTHVALUESNVPROC epoxy_glResolveDepthValuesNV = epoxy_glResolveDepthValuesNV_global_rewrite_ptr;

PUBLIC PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC epoxy_glResolveMultisampleFramebufferAPPLE = epoxy_glResolveMultisampleFramebufferAPPLE_global_rewrite_ptr;

PUBLIC PFNGLRESUMETRANSFORMFEEDBACKPROC epoxy_glResumeTransformFeedback = epoxy_glResumeTransformFeedback_global_rewrite_ptr;

PUBLIC PFNGLRESUMETRANSFORMFEEDBACKNVPROC epoxy_glResumeTransformFeedbackNV = epoxy_glResumeTransformFeedbackNV_global_rewrite_ptr;

PUBLIC PFNGLROTATEDPROC epoxy_glRotated = epoxy_glRotated_global_rewrite_ptr;

PUBLIC PFNGLROTATEFPROC epoxy_glRotatef = epoxy_glRotatef_global_rewrite_ptr;

PUBLIC PFNGLROTATEXPROC epoxy_glRotatex = epoxy_glRotatex_global_rewrite_ptr;

PUBLIC PFNGLROTATEXOESPROC epoxy_glRotatexOES = epoxy_glRotatexOES_global_rewrite_ptr;

PUBLIC PFNGLSAMPLECOVERAGEPROC epoxy_glSampleCoverage = epoxy_glSampleCoverage_global_rewrite_ptr;

PUBLIC PFNGLSAMPLECOVERAGEARBPROC epoxy_glSampleCoverageARB = epoxy_glSampleCoverageARB_global_rewrite_ptr;

PUBLIC PFNGLSAMPLECOVERAGEXPROC epoxy_glSampleCoveragex = epoxy_glSampleCoveragex_global_rewrite_ptr;

PUBLIC PFNGLSAMPLECOVERAGEXOESPROC epoxy_glSampleCoveragexOES = epoxy_glSampleCoveragexOES_global_rewrite_ptr;

PUBLIC PFNGLSAMPLEMAPATIPROC epoxy_glSampleMapATI = epoxy_glSampleMapATI_global_rewrite_ptr;

PUBLIC PFNGLSAMPLEMASKEXTPROC epoxy_glSampleMaskEXT = epoxy_glSampleMaskEXT_global_rewrite_ptr;

PUBLIC PFNGLSAMPLEMASKINDEXEDNVPROC epoxy_glSampleMaskIndexedNV = epoxy_glSampleMaskIndexedNV_global_rewrite_ptr;

PUBLIC PFNGLSAMPLEMASKSGISPROC epoxy_glSampleMaskSGIS = epoxy_glSampleMaskSGIS_global_rewrite_ptr;

PUBLIC PFNGLSAMPLEMASKIPROC epoxy_glSampleMaski = epoxy_glSampleMaski_global_rewrite_ptr;

PUBLIC PFNGLSAMPLEPATTERNEXTPROC epoxy_glSamplePatternEXT = epoxy_glSamplePatternEXT_global_rewrite_ptr;

PUBLIC PFNGLSAMPLEPATTERNSGISPROC epoxy_glSamplePatternSGIS = epoxy_glSamplePatternSGIS_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERIIVPROC epoxy_glSamplerParameterIiv = epoxy_glSamplerParameterIiv_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERIIVEXTPROC epoxy_glSamplerParameterIivEXT = epoxy_glSamplerParameterIivEXT_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERIIVOESPROC epoxy_glSamplerParameterIivOES = epoxy_glSamplerParameterIivOES_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERIUIVPROC epoxy_glSamplerParameterIuiv = epoxy_glSamplerParameterIuiv_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERIUIVEXTPROC epoxy_glSamplerParameterIuivEXT = epoxy_glSamplerParameterIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERIUIVOESPROC epoxy_glSamplerParameterIuivOES = epoxy_glSamplerParameterIuivOES_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERFPROC epoxy_glSamplerParameterf = epoxy_glSamplerParameterf_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERFVPROC epoxy_glSamplerParameterfv = epoxy_glSamplerParameterfv_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERIPROC epoxy_glSamplerParameteri = epoxy_glSamplerParameteri_global_rewrite_ptr;

PUBLIC PFNGLSAMPLERPARAMETERIVPROC epoxy_glSamplerParameteriv = epoxy_glSamplerParameteriv_global_rewrite_ptr;

PUBLIC PFNGLSCALEDPROC epoxy_glScaled = epoxy_glScaled_global_rewrite_ptr;

PUBLIC PFNGLSCALEFPROC epoxy_glScalef = epoxy_glScalef_global_rewrite_ptr;

PUBLIC PFNGLSCALEXPROC epoxy_glScalex = epoxy_glScalex_global_rewrite_ptr;

PUBLIC PFNGLSCALEXOESPROC epoxy_glScalexOES = epoxy_glScalexOES_global_rewrite_ptr;

PUBLIC PFNGLSCISSORPROC epoxy_glScissor = epoxy_glScissor_global_rewrite_ptr;

PUBLIC PFNGLSCISSORARRAYVPROC epoxy_glScissorArrayv = epoxy_glScissorArrayv_global_rewrite_ptr;

PUBLIC PFNGLSCISSORARRAYVNVPROC epoxy_glScissorArrayvNV = epoxy_glScissorArrayvNV_global_rewrite_ptr;

PUBLIC PFNGLSCISSORINDEXEDPROC epoxy_glScissorIndexed = epoxy_glScissorIndexed_global_rewrite_ptr;

PUBLIC PFNGLSCISSORINDEXEDNVPROC epoxy_glScissorIndexedNV = epoxy_glScissorIndexedNV_global_rewrite_ptr;

PUBLIC PFNGLSCISSORINDEXEDVPROC epoxy_glScissorIndexedv = epoxy_glScissorIndexedv_global_rewrite_ptr;

PUBLIC PFNGLSCISSORINDEXEDVNVPROC epoxy_glScissorIndexedvNV = epoxy_glScissorIndexedvNV_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3BPROC epoxy_glSecondaryColor3b = epoxy_glSecondaryColor3b_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3BEXTPROC epoxy_glSecondaryColor3bEXT = epoxy_glSecondaryColor3bEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3BVPROC epoxy_glSecondaryColor3bv = epoxy_glSecondaryColor3bv_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3BVEXTPROC epoxy_glSecondaryColor3bvEXT = epoxy_glSecondaryColor3bvEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3DPROC epoxy_glSecondaryColor3d = epoxy_glSecondaryColor3d_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3DEXTPROC epoxy_glSecondaryColor3dEXT = epoxy_glSecondaryColor3dEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3DVPROC epoxy_glSecondaryColor3dv = epoxy_glSecondaryColor3dv_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3DVEXTPROC epoxy_glSecondaryColor3dvEXT = epoxy_glSecondaryColor3dvEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3FPROC epoxy_glSecondaryColor3f = epoxy_glSecondaryColor3f_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3FEXTPROC epoxy_glSecondaryColor3fEXT = epoxy_glSecondaryColor3fEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3FVPROC epoxy_glSecondaryColor3fv = epoxy_glSecondaryColor3fv_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3FVEXTPROC epoxy_glSecondaryColor3fvEXT = epoxy_glSecondaryColor3fvEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3HNVPROC epoxy_glSecondaryColor3hNV = epoxy_glSecondaryColor3hNV_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3HVNVPROC epoxy_glSecondaryColor3hvNV = epoxy_glSecondaryColor3hvNV_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3IPROC epoxy_glSecondaryColor3i = epoxy_glSecondaryColor3i_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3IEXTPROC epoxy_glSecondaryColor3iEXT = epoxy_glSecondaryColor3iEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3IVPROC epoxy_glSecondaryColor3iv = epoxy_glSecondaryColor3iv_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3IVEXTPROC epoxy_glSecondaryColor3ivEXT = epoxy_glSecondaryColor3ivEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3SPROC epoxy_glSecondaryColor3s = epoxy_glSecondaryColor3s_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3SEXTPROC epoxy_glSecondaryColor3sEXT = epoxy_glSecondaryColor3sEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3SVPROC epoxy_glSecondaryColor3sv = epoxy_glSecondaryColor3sv_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3SVEXTPROC epoxy_glSecondaryColor3svEXT = epoxy_glSecondaryColor3svEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3UBPROC epoxy_glSecondaryColor3ub = epoxy_glSecondaryColor3ub_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3UBEXTPROC epoxy_glSecondaryColor3ubEXT = epoxy_glSecondaryColor3ubEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3UBVPROC epoxy_glSecondaryColor3ubv = epoxy_glSecondaryColor3ubv_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3UBVEXTPROC epoxy_glSecondaryColor3ubvEXT = epoxy_glSecondaryColor3ubvEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3UIPROC epoxy_glSecondaryColor3ui = epoxy_glSecondaryColor3ui_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3UIEXTPROC epoxy_glSecondaryColor3uiEXT = epoxy_glSecondaryColor3uiEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3UIVPROC epoxy_glSecondaryColor3uiv = epoxy_glSecondaryColor3uiv_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3UIVEXTPROC epoxy_glSecondaryColor3uivEXT = epoxy_glSecondaryColor3uivEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3USPROC epoxy_glSecondaryColor3us = epoxy_glSecondaryColor3us_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3USEXTPROC epoxy_glSecondaryColor3usEXT = epoxy_glSecondaryColor3usEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3USVPROC epoxy_glSecondaryColor3usv = epoxy_glSecondaryColor3usv_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLOR3USVEXTPROC epoxy_glSecondaryColor3usvEXT = epoxy_glSecondaryColor3usvEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLORFORMATNVPROC epoxy_glSecondaryColorFormatNV = epoxy_glSecondaryColorFormatNV_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLORP3UIPROC epoxy_glSecondaryColorP3ui = epoxy_glSecondaryColorP3ui_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLORP3UIVPROC epoxy_glSecondaryColorP3uiv = epoxy_glSecondaryColorP3uiv_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLORPOINTERPROC epoxy_glSecondaryColorPointer = epoxy_glSecondaryColorPointer_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLORPOINTEREXTPROC epoxy_glSecondaryColorPointerEXT = epoxy_glSecondaryColorPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLSECONDARYCOLORPOINTERLISTIBMPROC epoxy_glSecondaryColorPointerListIBM = epoxy_glSecondaryColorPointerListIBM_global_rewrite_ptr;

PUBLIC PFNGLSELECTBUFFERPROC epoxy_glSelectBuffer = epoxy_glSelectBuffer_global_rewrite_ptr;

PUBLIC PFNGLSELECTPERFMONITORCOUNTERSAMDPROC epoxy_glSelectPerfMonitorCountersAMD = epoxy_glSelectPerfMonitorCountersAMD_global_rewrite_ptr;

PUBLIC PFNGLSEPARABLEFILTER2DPROC epoxy_glSeparableFilter2D = epoxy_glSeparableFilter2D_global_rewrite_ptr;

PUBLIC PFNGLSEPARABLEFILTER2DEXTPROC epoxy_glSeparableFilter2DEXT = epoxy_glSeparableFilter2DEXT_global_rewrite_ptr;

PUBLIC PFNGLSETFENCEAPPLEPROC epoxy_glSetFenceAPPLE = epoxy_glSetFenceAPPLE_global_rewrite_ptr;

PUBLIC PFNGLSETFENCENVPROC epoxy_glSetFenceNV = epoxy_glSetFenceNV_global_rewrite_ptr;

PUBLIC PFNGLSETFRAGMENTSHADERCONSTANTATIPROC epoxy_glSetFragmentShaderConstantATI = epoxy_glSetFragmentShaderConstantATI_global_rewrite_ptr;

PUBLIC PFNGLSETINVARIANTEXTPROC epoxy_glSetInvariantEXT = epoxy_glSetInvariantEXT_global_rewrite_ptr;

PUBLIC PFNGLSETLOCALCONSTANTEXTPROC epoxy_glSetLocalConstantEXT = epoxy_glSetLocalConstantEXT_global_rewrite_ptr;

PUBLIC PFNGLSETMULTISAMPLEFVAMDPROC epoxy_glSetMultisamplefvAMD = epoxy_glSetMultisamplefvAMD_global_rewrite_ptr;

PUBLIC PFNGLSHADEMODELPROC epoxy_glShadeModel = epoxy_glShadeModel_global_rewrite_ptr;

PUBLIC PFNGLSHADERBINARYPROC epoxy_glShaderBinary = epoxy_glShaderBinary_global_rewrite_ptr;

PUBLIC PFNGLSHADEROP1EXTPROC epoxy_glShaderOp1EXT = epoxy_glShaderOp1EXT_global_rewrite_ptr;

PUBLIC PFNGLSHADEROP2EXTPROC epoxy_glShaderOp2EXT = epoxy_glShaderOp2EXT_global_rewrite_ptr;

PUBLIC PFNGLSHADEROP3EXTPROC epoxy_glShaderOp3EXT = epoxy_glShaderOp3EXT_global_rewrite_ptr;

PUBLIC PFNGLSHADERSOURCEPROC epoxy_glShaderSource = epoxy_glShaderSource_global_rewrite_ptr;

PUBLIC PFNGLSHADERSOURCEARBPROC epoxy_glShaderSourceARB = epoxy_glShaderSourceARB_global_rewrite_ptr;

PUBLIC PFNGLSHADERSTORAGEBLOCKBINDINGPROC epoxy_glShaderStorageBlockBinding = epoxy_glShaderStorageBlockBinding_global_rewrite_ptr;

PUBLIC PFNGLSHARPENTEXFUNCSGISPROC epoxy_glSharpenTexFuncSGIS = epoxy_glSharpenTexFuncSGIS_global_rewrite_ptr;

PUBLIC PFNGLSPRITEPARAMETERFSGIXPROC epoxy_glSpriteParameterfSGIX = epoxy_glSpriteParameterfSGIX_global_rewrite_ptr;

PUBLIC PFNGLSPRITEPARAMETERFVSGIXPROC epoxy_glSpriteParameterfvSGIX = epoxy_glSpriteParameterfvSGIX_global_rewrite_ptr;

PUBLIC PFNGLSPRITEPARAMETERISGIXPROC epoxy_glSpriteParameteriSGIX = epoxy_glSpriteParameteriSGIX_global_rewrite_ptr;

PUBLIC PFNGLSPRITEPARAMETERIVSGIXPROC epoxy_glSpriteParameterivSGIX = epoxy_glSpriteParameterivSGIX_global_rewrite_ptr;

PUBLIC PFNGLSTARTINSTRUMENTSSGIXPROC epoxy_glStartInstrumentsSGIX = epoxy_glStartInstrumentsSGIX_global_rewrite_ptr;

PUBLIC PFNGLSTARTTILINGQCOMPROC epoxy_glStartTilingQCOM = epoxy_glStartTilingQCOM_global_rewrite_ptr;

PUBLIC PFNGLSTATECAPTURENVPROC epoxy_glStateCaptureNV = epoxy_glStateCaptureNV_global_rewrite_ptr;

PUBLIC PFNGLSTENCILCLEARTAGEXTPROC epoxy_glStencilClearTagEXT = epoxy_glStencilClearTagEXT_global_rewrite_ptr;

PUBLIC PFNGLSTENCILFILLPATHINSTANCEDNVPROC epoxy_glStencilFillPathInstancedNV = epoxy_glStencilFillPathInstancedNV_global_rewrite_ptr;

PUBLIC PFNGLSTENCILFILLPATHNVPROC epoxy_glStencilFillPathNV = epoxy_glStencilFillPathNV_global_rewrite_ptr;

PUBLIC PFNGLSTENCILFUNCPROC epoxy_glStencilFunc = epoxy_glStencilFunc_global_rewrite_ptr;

PUBLIC PFNGLSTENCILFUNCSEPARATEPROC epoxy_glStencilFuncSeparate = epoxy_glStencilFuncSeparate_global_rewrite_ptr;

PUBLIC PFNGLSTENCILFUNCSEPARATEATIPROC epoxy_glStencilFuncSeparateATI = epoxy_glStencilFuncSeparateATI_global_rewrite_ptr;

PUBLIC PFNGLSTENCILMASKPROC epoxy_glStencilMask = epoxy_glStencilMask_global_rewrite_ptr;

PUBLIC PFNGLSTENCILMASKSEPARATEPROC epoxy_glStencilMaskSeparate = epoxy_glStencilMaskSeparate_global_rewrite_ptr;

PUBLIC PFNGLSTENCILOPPROC epoxy_glStencilOp = epoxy_glStencilOp_global_rewrite_ptr;

PUBLIC PFNGLSTENCILOPSEPARATEPROC epoxy_glStencilOpSeparate = epoxy_glStencilOpSeparate_global_rewrite_ptr;

PUBLIC PFNGLSTENCILOPSEPARATEATIPROC epoxy_glStencilOpSeparateATI = epoxy_glStencilOpSeparateATI_global_rewrite_ptr;

PUBLIC PFNGLSTENCILOPVALUEAMDPROC epoxy_glStencilOpValueAMD = epoxy_glStencilOpValueAMD_global_rewrite_ptr;

PUBLIC PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC epoxy_glStencilStrokePathInstancedNV = epoxy_glStencilStrokePathInstancedNV_global_rewrite_ptr;

PUBLIC PFNGLSTENCILSTROKEPATHNVPROC epoxy_glStencilStrokePathNV = epoxy_glStencilStrokePathNV_global_rewrite_ptr;

PUBLIC PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC epoxy_glStencilThenCoverFillPathInstancedNV = epoxy_glStencilThenCoverFillPathInstancedNV_global_rewrite_ptr;

PUBLIC PFNGLSTENCILTHENCOVERFILLPATHNVPROC epoxy_glStencilThenCoverFillPathNV = epoxy_glStencilThenCoverFillPathNV_global_rewrite_ptr;

PUBLIC PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC epoxy_glStencilThenCoverStrokePathInstancedNV = epoxy_glStencilThenCoverStrokePathInstancedNV_global_rewrite_ptr;

PUBLIC PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC epoxy_glStencilThenCoverStrokePathNV = epoxy_glStencilThenCoverStrokePathNV_global_rewrite_ptr;

PUBLIC PFNGLSTOPINSTRUMENTSSGIXPROC epoxy_glStopInstrumentsSGIX = epoxy_glStopInstrumentsSGIX_global_rewrite_ptr;

PUBLIC PFNGLSTRINGMARKERGREMEDYPROC epoxy_glStringMarkerGREMEDY = epoxy_glStringMarkerGREMEDY_global_rewrite_ptr;

PUBLIC PFNGLSUBPIXELPRECISIONBIASNVPROC epoxy_glSubpixelPrecisionBiasNV = epoxy_glSubpixelPrecisionBiasNV_global_rewrite_ptr;

PUBLIC PFNGLSWIZZLEEXTPROC epoxy_glSwizzleEXT = epoxy_glSwizzleEXT_global_rewrite_ptr;

PUBLIC PFNGLSYNCTEXTUREINTELPROC epoxy_glSyncTextureINTEL = epoxy_glSyncTextureINTEL_global_rewrite_ptr;

PUBLIC PFNGLTAGSAMPLEBUFFERSGIXPROC epoxy_glTagSampleBufferSGIX = epoxy_glTagSampleBufferSGIX_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3BEXTPROC epoxy_glTangent3bEXT = epoxy_glTangent3bEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3BVEXTPROC epoxy_glTangent3bvEXT = epoxy_glTangent3bvEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3DEXTPROC epoxy_glTangent3dEXT = epoxy_glTangent3dEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3DVEXTPROC epoxy_glTangent3dvEXT = epoxy_glTangent3dvEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3FEXTPROC epoxy_glTangent3fEXT = epoxy_glTangent3fEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3FVEXTPROC epoxy_glTangent3fvEXT = epoxy_glTangent3fvEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3IEXTPROC epoxy_glTangent3iEXT = epoxy_glTangent3iEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3IVEXTPROC epoxy_glTangent3ivEXT = epoxy_glTangent3ivEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3SEXTPROC epoxy_glTangent3sEXT = epoxy_glTangent3sEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENT3SVEXTPROC epoxy_glTangent3svEXT = epoxy_glTangent3svEXT_global_rewrite_ptr;

PUBLIC PFNGLTANGENTPOINTEREXTPROC epoxy_glTangentPointerEXT = epoxy_glTangentPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLTBUFFERMASK3DFXPROC epoxy_glTbufferMask3DFX = epoxy_glTbufferMask3DFX_global_rewrite_ptr;

PUBLIC PFNGLTESSELLATIONFACTORAMDPROC epoxy_glTessellationFactorAMD = epoxy_glTessellationFactorAMD_global_rewrite_ptr;

PUBLIC PFNGLTESSELLATIONMODEAMDPROC epoxy_glTessellationModeAMD = epoxy_glTessellationModeAMD_global_rewrite_ptr;

PUBLIC PFNGLTESTFENCEAPPLEPROC epoxy_glTestFenceAPPLE = epoxy_glTestFenceAPPLE_global_rewrite_ptr;

PUBLIC PFNGLTESTFENCENVPROC epoxy_glTestFenceNV = epoxy_glTestFenceNV_global_rewrite_ptr;

PUBLIC PFNGLTESTOBJECTAPPLEPROC epoxy_glTestObjectAPPLE = epoxy_glTestObjectAPPLE_global_rewrite_ptr;

PUBLIC PFNGLTEXBUFFERPROC epoxy_glTexBuffer = epoxy_glTexBuffer_global_rewrite_ptr;

PUBLIC PFNGLTEXBUFFERARBPROC epoxy_glTexBufferARB = epoxy_glTexBufferARB_global_rewrite_ptr;

PUBLIC PFNGLTEXBUFFEREXTPROC epoxy_glTexBufferEXT = epoxy_glTexBufferEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXBUFFEROESPROC epoxy_glTexBufferOES = epoxy_glTexBufferOES_global_rewrite_ptr;

PUBLIC PFNGLTEXBUFFERRANGEPROC epoxy_glTexBufferRange = epoxy_glTexBufferRange_global_rewrite_ptr;

PUBLIC PFNGLTEXBUFFERRANGEEXTPROC epoxy_glTexBufferRangeEXT = epoxy_glTexBufferRangeEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXBUFFERRANGEOESPROC epoxy_glTexBufferRangeOES = epoxy_glTexBufferRangeOES_global_rewrite_ptr;

PUBLIC PFNGLTEXBUMPPARAMETERFVATIPROC epoxy_glTexBumpParameterfvATI = epoxy_glTexBumpParameterfvATI_global_rewrite_ptr;

PUBLIC PFNGLTEXBUMPPARAMETERIVATIPROC epoxy_glTexBumpParameterivATI = epoxy_glTexBumpParameterivATI_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1BOESPROC epoxy_glTexCoord1bOES = epoxy_glTexCoord1bOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1BVOESPROC epoxy_glTexCoord1bvOES = epoxy_glTexCoord1bvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1DPROC epoxy_glTexCoord1d = epoxy_glTexCoord1d_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1DVPROC epoxy_glTexCoord1dv = epoxy_glTexCoord1dv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1FPROC epoxy_glTexCoord1f = epoxy_glTexCoord1f_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1FVPROC epoxy_glTexCoord1fv = epoxy_glTexCoord1fv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1HNVPROC epoxy_glTexCoord1hNV = epoxy_glTexCoord1hNV_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1HVNVPROC epoxy_glTexCoord1hvNV = epoxy_glTexCoord1hvNV_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1IPROC epoxy_glTexCoord1i = epoxy_glTexCoord1i_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1IVPROC epoxy_glTexCoord1iv = epoxy_glTexCoord1iv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1SPROC epoxy_glTexCoord1s = epoxy_glTexCoord1s_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1SVPROC epoxy_glTexCoord1sv = epoxy_glTexCoord1sv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1XOESPROC epoxy_glTexCoord1xOES = epoxy_glTexCoord1xOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD1XVOESPROC epoxy_glTexCoord1xvOES = epoxy_glTexCoord1xvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2BOESPROC epoxy_glTexCoord2bOES = epoxy_glTexCoord2bOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2BVOESPROC epoxy_glTexCoord2bvOES = epoxy_glTexCoord2bvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2DPROC epoxy_glTexCoord2d = epoxy_glTexCoord2d_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2DVPROC epoxy_glTexCoord2dv = epoxy_glTexCoord2dv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FPROC epoxy_glTexCoord2f = epoxy_glTexCoord2f_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC epoxy_glTexCoord2fColor3fVertex3fSUN = epoxy_glTexCoord2fColor3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC epoxy_glTexCoord2fColor3fVertex3fvSUN = epoxy_glTexCoord2fColor3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC epoxy_glTexCoord2fColor4fNormal3fVertex3fSUN = epoxy_glTexCoord2fColor4fNormal3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC epoxy_glTexCoord2fColor4fNormal3fVertex3fvSUN = epoxy_glTexCoord2fColor4fNormal3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC epoxy_glTexCoord2fColor4ubVertex3fSUN = epoxy_glTexCoord2fColor4ubVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC epoxy_glTexCoord2fColor4ubVertex3fvSUN = epoxy_glTexCoord2fColor4ubVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC epoxy_glTexCoord2fNormal3fVertex3fSUN = epoxy_glTexCoord2fNormal3fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC epoxy_glTexCoord2fNormal3fVertex3fvSUN = epoxy_glTexCoord2fNormal3fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FVERTEX3FSUNPROC epoxy_glTexCoord2fVertex3fSUN = epoxy_glTexCoord2fVertex3fSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FVERTEX3FVSUNPROC epoxy_glTexCoord2fVertex3fvSUN = epoxy_glTexCoord2fVertex3fvSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2FVPROC epoxy_glTexCoord2fv = epoxy_glTexCoord2fv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2HNVPROC epoxy_glTexCoord2hNV = epoxy_glTexCoord2hNV_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2HVNVPROC epoxy_glTexCoord2hvNV = epoxy_glTexCoord2hvNV_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2IPROC epoxy_glTexCoord2i = epoxy_glTexCoord2i_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2IVPROC epoxy_glTexCoord2iv = epoxy_glTexCoord2iv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2SPROC epoxy_glTexCoord2s = epoxy_glTexCoord2s_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2SVPROC epoxy_glTexCoord2sv = epoxy_glTexCoord2sv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2XOESPROC epoxy_glTexCoord2xOES = epoxy_glTexCoord2xOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD2XVOESPROC epoxy_glTexCoord2xvOES = epoxy_glTexCoord2xvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3BOESPROC epoxy_glTexCoord3bOES = epoxy_glTexCoord3bOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3BVOESPROC epoxy_glTexCoord3bvOES = epoxy_glTexCoord3bvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3DPROC epoxy_glTexCoord3d = epoxy_glTexCoord3d_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3DVPROC epoxy_glTexCoord3dv = epoxy_glTexCoord3dv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3FPROC epoxy_glTexCoord3f = epoxy_glTexCoord3f_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3FVPROC epoxy_glTexCoord3fv = epoxy_glTexCoord3fv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3HNVPROC epoxy_glTexCoord3hNV = epoxy_glTexCoord3hNV_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3HVNVPROC epoxy_glTexCoord3hvNV = epoxy_glTexCoord3hvNV_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3IPROC epoxy_glTexCoord3i = epoxy_glTexCoord3i_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3IVPROC epoxy_glTexCoord3iv = epoxy_glTexCoord3iv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3SPROC epoxy_glTexCoord3s = epoxy_glTexCoord3s_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3SVPROC epoxy_glTexCoord3sv = epoxy_glTexCoord3sv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3XOESPROC epoxy_glTexCoord3xOES = epoxy_glTexCoord3xOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD3XVOESPROC epoxy_glTexCoord3xvOES = epoxy_glTexCoord3xvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4BOESPROC epoxy_glTexCoord4bOES = epoxy_glTexCoord4bOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4BVOESPROC epoxy_glTexCoord4bvOES = epoxy_glTexCoord4bvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4DPROC epoxy_glTexCoord4d = epoxy_glTexCoord4d_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4DVPROC epoxy_glTexCoord4dv = epoxy_glTexCoord4dv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4FPROC epoxy_glTexCoord4f = epoxy_glTexCoord4f_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC epoxy_glTexCoord4fColor4fNormal3fVertex4fSUN = epoxy_glTexCoord4fColor4fNormal3fVertex4fSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC epoxy_glTexCoord4fColor4fNormal3fVertex4fvSUN = epoxy_glTexCoord4fColor4fNormal3fVertex4fvSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4FVERTEX4FSUNPROC epoxy_glTexCoord4fVertex4fSUN = epoxy_glTexCoord4fVertex4fSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4FVERTEX4FVSUNPROC epoxy_glTexCoord4fVertex4fvSUN = epoxy_glTexCoord4fVertex4fvSUN_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4FVPROC epoxy_glTexCoord4fv = epoxy_glTexCoord4fv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4HNVPROC epoxy_glTexCoord4hNV = epoxy_glTexCoord4hNV_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4HVNVPROC epoxy_glTexCoord4hvNV = epoxy_glTexCoord4hvNV_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4IPROC epoxy_glTexCoord4i = epoxy_glTexCoord4i_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4IVPROC epoxy_glTexCoord4iv = epoxy_glTexCoord4iv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4SPROC epoxy_glTexCoord4s = epoxy_glTexCoord4s_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4SVPROC epoxy_glTexCoord4sv = epoxy_glTexCoord4sv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4XOESPROC epoxy_glTexCoord4xOES = epoxy_glTexCoord4xOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORD4XVOESPROC epoxy_glTexCoord4xvOES = epoxy_glTexCoord4xvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDFORMATNVPROC epoxy_glTexCoordFormatNV = epoxy_glTexCoordFormatNV_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDP1UIPROC epoxy_glTexCoordP1ui = epoxy_glTexCoordP1ui_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDP1UIVPROC epoxy_glTexCoordP1uiv = epoxy_glTexCoordP1uiv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDP2UIPROC epoxy_glTexCoordP2ui = epoxy_glTexCoordP2ui_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDP2UIVPROC epoxy_glTexCoordP2uiv = epoxy_glTexCoordP2uiv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDP3UIPROC epoxy_glTexCoordP3ui = epoxy_glTexCoordP3ui_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDP3UIVPROC epoxy_glTexCoordP3uiv = epoxy_glTexCoordP3uiv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDP4UIPROC epoxy_glTexCoordP4ui = epoxy_glTexCoordP4ui_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDP4UIVPROC epoxy_glTexCoordP4uiv = epoxy_glTexCoordP4uiv_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDPOINTERPROC epoxy_glTexCoordPointer = epoxy_glTexCoordPointer_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDPOINTEREXTPROC epoxy_glTexCoordPointerEXT = epoxy_glTexCoordPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDPOINTERLISTIBMPROC epoxy_glTexCoordPointerListIBM = epoxy_glTexCoordPointerListIBM_global_rewrite_ptr;

PUBLIC PFNGLTEXCOORDPOINTERVINTELPROC epoxy_glTexCoordPointervINTEL = epoxy_glTexCoordPointervINTEL_global_rewrite_ptr;

PUBLIC PFNGLTEXENVFPROC epoxy_glTexEnvf = epoxy_glTexEnvf_global_rewrite_ptr;

PUBLIC PFNGLTEXENVFVPROC epoxy_glTexEnvfv = epoxy_glTexEnvfv_global_rewrite_ptr;

PUBLIC PFNGLTEXENVIPROC epoxy_glTexEnvi = epoxy_glTexEnvi_global_rewrite_ptr;

PUBLIC PFNGLTEXENVIVPROC epoxy_glTexEnviv = epoxy_glTexEnviv_global_rewrite_ptr;

PUBLIC PFNGLTEXENVXPROC epoxy_glTexEnvx = epoxy_glTexEnvx_global_rewrite_ptr;

PUBLIC PFNGLTEXENVXOESPROC epoxy_glTexEnvxOES = epoxy_glTexEnvxOES_global_rewrite_ptr;

PUBLIC PFNGLTEXENVXVPROC epoxy_glTexEnvxv = epoxy_glTexEnvxv_global_rewrite_ptr;

PUBLIC PFNGLTEXENVXVOESPROC epoxy_glTexEnvxvOES = epoxy_glTexEnvxvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXFILTERFUNCSGISPROC epoxy_glTexFilterFuncSGIS = epoxy_glTexFilterFuncSGIS_global_rewrite_ptr;

PUBLIC PFNGLTEXGENDPROC epoxy_glTexGend = epoxy_glTexGend_global_rewrite_ptr;

PUBLIC PFNGLTEXGENDVPROC epoxy_glTexGendv = epoxy_glTexGendv_global_rewrite_ptr;

PUBLIC PFNGLTEXGENFPROC epoxy_glTexGenf = epoxy_glTexGenf_global_rewrite_ptr;

PUBLIC PFNGLTEXGENFOESPROC epoxy_glTexGenfOES = epoxy_glTexGenfOES_global_rewrite_ptr;

PUBLIC PFNGLTEXGENFVPROC epoxy_glTexGenfv = epoxy_glTexGenfv_global_rewrite_ptr;

PUBLIC PFNGLTEXGENFVOESPROC epoxy_glTexGenfvOES = epoxy_glTexGenfvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXGENIPROC epoxy_glTexGeni = epoxy_glTexGeni_global_rewrite_ptr;

PUBLIC PFNGLTEXGENIOESPROC epoxy_glTexGeniOES = epoxy_glTexGeniOES_global_rewrite_ptr;

PUBLIC PFNGLTEXGENIVPROC epoxy_glTexGeniv = epoxy_glTexGeniv_global_rewrite_ptr;

PUBLIC PFNGLTEXGENIVOESPROC epoxy_glTexGenivOES = epoxy_glTexGenivOES_global_rewrite_ptr;

PUBLIC PFNGLTEXGENXOESPROC epoxy_glTexGenxOES = epoxy_glTexGenxOES_global_rewrite_ptr;

PUBLIC PFNGLTEXGENXVOESPROC epoxy_glTexGenxvOES = epoxy_glTexGenxvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE1DPROC epoxy_glTexImage1D = epoxy_glTexImage1D_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE2DPROC epoxy_glTexImage2D = epoxy_glTexImage2D_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE2DMULTISAMPLEPROC epoxy_glTexImage2DMultisample = epoxy_glTexImage2DMultisample_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC epoxy_glTexImage2DMultisampleCoverageNV = epoxy_glTexImage2DMultisampleCoverageNV_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE3DPROC epoxy_glTexImage3D = epoxy_glTexImage3D_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE3DEXTPROC epoxy_glTexImage3DEXT = epoxy_glTexImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE3DMULTISAMPLEPROC epoxy_glTexImage3DMultisample = epoxy_glTexImage3DMultisample_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC epoxy_glTexImage3DMultisampleCoverageNV = epoxy_glTexImage3DMultisampleCoverageNV_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE3DOESPROC epoxy_glTexImage3DOES = epoxy_glTexImage3DOES_global_rewrite_ptr;

PUBLIC PFNGLTEXIMAGE4DSGISPROC epoxy_glTexImage4DSGIS = epoxy_glTexImage4DSGIS_global_rewrite_ptr;

PUBLIC PFNGLTEXPAGECOMMITMENTARBPROC epoxy_glTexPageCommitmentARB = epoxy_glTexPageCommitmentARB_global_rewrite_ptr;

PUBLIC PFNGLTEXPAGECOMMITMENTEXTPROC epoxy_glTexPageCommitmentEXT = epoxy_glTexPageCommitmentEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERIIVPROC epoxy_glTexParameterIiv = epoxy_glTexParameterIiv_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERIIVEXTPROC epoxy_glTexParameterIivEXT = epoxy_glTexParameterIivEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERIIVOESPROC epoxy_glTexParameterIivOES = epoxy_glTexParameterIivOES_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERIUIVPROC epoxy_glTexParameterIuiv = epoxy_glTexParameterIuiv_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERIUIVEXTPROC epoxy_glTexParameterIuivEXT = epoxy_glTexParameterIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERIUIVOESPROC epoxy_glTexParameterIuivOES = epoxy_glTexParameterIuivOES_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERFPROC epoxy_glTexParameterf = epoxy_glTexParameterf_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERFVPROC epoxy_glTexParameterfv = epoxy_glTexParameterfv_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERIPROC epoxy_glTexParameteri = epoxy_glTexParameteri_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERIVPROC epoxy_glTexParameteriv = epoxy_glTexParameteriv_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERXPROC epoxy_glTexParameterx = epoxy_glTexParameterx_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERXOESPROC epoxy_glTexParameterxOES = epoxy_glTexParameterxOES_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERXVPROC epoxy_glTexParameterxv = epoxy_glTexParameterxv_global_rewrite_ptr;

PUBLIC PFNGLTEXPARAMETERXVOESPROC epoxy_glTexParameterxvOES = epoxy_glTexParameterxvOES_global_rewrite_ptr;

PUBLIC PFNGLTEXRENDERBUFFERNVPROC epoxy_glTexRenderbufferNV = epoxy_glTexRenderbufferNV_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGE1DPROC epoxy_glTexStorage1D = epoxy_glTexStorage1D_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGE1DEXTPROC epoxy_glTexStorage1DEXT = epoxy_glTexStorage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGE2DPROC epoxy_glTexStorage2D = epoxy_glTexStorage2D_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGE2DEXTPROC epoxy_glTexStorage2DEXT = epoxy_glTexStorage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGE2DMULTISAMPLEPROC epoxy_glTexStorage2DMultisample = epoxy_glTexStorage2DMultisample_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGE3DPROC epoxy_glTexStorage3D = epoxy_glTexStorage3D_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGE3DEXTPROC epoxy_glTexStorage3DEXT = epoxy_glTexStorage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGE3DMULTISAMPLEPROC epoxy_glTexStorage3DMultisample = epoxy_glTexStorage3DMultisample_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC epoxy_glTexStorage3DMultisampleOES = epoxy_glTexStorage3DMultisampleOES_global_rewrite_ptr;

PUBLIC PFNGLTEXSTORAGESPARSEAMDPROC epoxy_glTexStorageSparseAMD = epoxy_glTexStorageSparseAMD_global_rewrite_ptr;

PUBLIC PFNGLTEXSUBIMAGE1DPROC epoxy_glTexSubImage1D = epoxy_glTexSubImage1D_global_rewrite_ptr;

PUBLIC PFNGLTEXSUBIMAGE1DEXTPROC epoxy_glTexSubImage1DEXT = epoxy_glTexSubImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXSUBIMAGE2DPROC epoxy_glTexSubImage2D = epoxy_glTexSubImage2D_global_rewrite_ptr;

PUBLIC PFNGLTEXSUBIMAGE2DEXTPROC epoxy_glTexSubImage2DEXT = epoxy_glTexSubImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXSUBIMAGE3DPROC epoxy_glTexSubImage3D = epoxy_glTexSubImage3D_global_rewrite_ptr;

PUBLIC PFNGLTEXSUBIMAGE3DEXTPROC epoxy_glTexSubImage3DEXT = epoxy_glTexSubImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXSUBIMAGE3DOESPROC epoxy_glTexSubImage3DOES = epoxy_glTexSubImage3DOES_global_rewrite_ptr;

PUBLIC PFNGLTEXSUBIMAGE4DSGISPROC epoxy_glTexSubImage4DSGIS = epoxy_glTexSubImage4DSGIS_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREBARRIERPROC epoxy_glTextureBarrier = epoxy_glTextureBarrier_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREBARRIERNVPROC epoxy_glTextureBarrierNV = epoxy_glTextureBarrierNV_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREBUFFERPROC epoxy_glTextureBuffer = epoxy_glTextureBuffer_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREBUFFEREXTPROC epoxy_glTextureBufferEXT = epoxy_glTextureBufferEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREBUFFERRANGEPROC epoxy_glTextureBufferRange = epoxy_glTextureBufferRange_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREBUFFERRANGEEXTPROC epoxy_glTextureBufferRangeEXT = epoxy_glTextureBufferRangeEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURECOLORMASKSGISPROC epoxy_glTextureColorMaskSGIS = epoxy_glTextureColorMaskSGIS_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREIMAGE1DEXTPROC epoxy_glTextureImage1DEXT = epoxy_glTextureImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREIMAGE2DEXTPROC epoxy_glTextureImage2DEXT = epoxy_glTextureImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC epoxy_glTextureImage2DMultisampleCoverageNV = epoxy_glTextureImage2DMultisampleCoverageNV_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC epoxy_glTextureImage2DMultisampleNV = epoxy_glTextureImage2DMultisampleNV_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREIMAGE3DEXTPROC epoxy_glTextureImage3DEXT = epoxy_glTextureImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC epoxy_glTextureImage3DMultisampleCoverageNV = epoxy_glTextureImage3DMultisampleCoverageNV_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC epoxy_glTextureImage3DMultisampleNV = epoxy_glTextureImage3DMultisampleNV_global_rewrite_ptr;

PUBLIC PFNGLTEXTURELIGHTEXTPROC epoxy_glTextureLightEXT = epoxy_glTextureLightEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREMATERIALEXTPROC epoxy_glTextureMaterialEXT = epoxy_glTextureMaterialEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURENORMALEXTPROC epoxy_glTextureNormalEXT = epoxy_glTextureNormalEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPAGECOMMITMENTEXTPROC epoxy_glTexturePageCommitmentEXT = epoxy_glTexturePageCommitmentEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERIIVPROC epoxy_glTextureParameterIiv = epoxy_glTextureParameterIiv_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERIIVEXTPROC epoxy_glTextureParameterIivEXT = epoxy_glTextureParameterIivEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERIUIVPROC epoxy_glTextureParameterIuiv = epoxy_glTextureParameterIuiv_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERIUIVEXTPROC epoxy_glTextureParameterIuivEXT = epoxy_glTextureParameterIuivEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERFPROC epoxy_glTextureParameterf = epoxy_glTextureParameterf_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERFEXTPROC epoxy_glTextureParameterfEXT = epoxy_glTextureParameterfEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERFVPROC epoxy_glTextureParameterfv = epoxy_glTextureParameterfv_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERFVEXTPROC epoxy_glTextureParameterfvEXT = epoxy_glTextureParameterfvEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERIPROC epoxy_glTextureParameteri = epoxy_glTextureParameteri_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERIEXTPROC epoxy_glTextureParameteriEXT = epoxy_glTextureParameteriEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERIVPROC epoxy_glTextureParameteriv = epoxy_glTextureParameteriv_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREPARAMETERIVEXTPROC epoxy_glTextureParameterivEXT = epoxy_glTextureParameterivEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURERANGEAPPLEPROC epoxy_glTextureRangeAPPLE = epoxy_glTextureRangeAPPLE_global_rewrite_ptr;

PUBLIC PFNGLTEXTURERENDERBUFFEREXTPROC epoxy_glTextureRenderbufferEXT = epoxy_glTextureRenderbufferEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE1DPROC epoxy_glTextureStorage1D = epoxy_glTextureStorage1D_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE1DEXTPROC epoxy_glTextureStorage1DEXT = epoxy_glTextureStorage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE2DPROC epoxy_glTextureStorage2D = epoxy_glTextureStorage2D_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE2DEXTPROC epoxy_glTextureStorage2DEXT = epoxy_glTextureStorage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC epoxy_glTextureStorage2DMultisample = epoxy_glTextureStorage2DMultisample_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC epoxy_glTextureStorage2DMultisampleEXT = epoxy_glTextureStorage2DMultisampleEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE3DPROC epoxy_glTextureStorage3D = epoxy_glTextureStorage3D_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE3DEXTPROC epoxy_glTextureStorage3DEXT = epoxy_glTextureStorage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC epoxy_glTextureStorage3DMultisample = epoxy_glTextureStorage3DMultisample_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC epoxy_glTextureStorage3DMultisampleEXT = epoxy_glTextureStorage3DMultisampleEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESTORAGESPARSEAMDPROC epoxy_glTextureStorageSparseAMD = epoxy_glTextureStorageSparseAMD_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESUBIMAGE1DPROC epoxy_glTextureSubImage1D = epoxy_glTextureSubImage1D_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESUBIMAGE1DEXTPROC epoxy_glTextureSubImage1DEXT = epoxy_glTextureSubImage1DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESUBIMAGE2DPROC epoxy_glTextureSubImage2D = epoxy_glTextureSubImage2D_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESUBIMAGE2DEXTPROC epoxy_glTextureSubImage2DEXT = epoxy_glTextureSubImage2DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESUBIMAGE3DPROC epoxy_glTextureSubImage3D = epoxy_glTextureSubImage3D_global_rewrite_ptr;

PUBLIC PFNGLTEXTURESUBIMAGE3DEXTPROC epoxy_glTextureSubImage3DEXT = epoxy_glTextureSubImage3DEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREVIEWPROC epoxy_glTextureView = epoxy_glTextureView_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREVIEWEXTPROC epoxy_glTextureViewEXT = epoxy_glTextureViewEXT_global_rewrite_ptr;

PUBLIC PFNGLTEXTUREVIEWOESPROC epoxy_glTextureViewOES = epoxy_glTextureViewOES_global_rewrite_ptr;

PUBLIC PFNGLTRACKMATRIXNVPROC epoxy_glTrackMatrixNV = epoxy_glTrackMatrixNV_global_rewrite_ptr;

PUBLIC PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC epoxy_glTransformFeedbackAttribsNV = epoxy_glTransformFeedbackAttribsNV_global_rewrite_ptr;

PUBLIC PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC epoxy_glTransformFeedbackBufferBase = epoxy_glTransformFeedbackBufferBase_global_rewrite_ptr;

PUBLIC PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC epoxy_glTransformFeedbackBufferRange = epoxy_glTransformFeedbackBufferRange_global_rewrite_ptr;

PUBLIC PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC epoxy_glTransformFeedbackStreamAttribsNV = epoxy_glTransformFeedbackStreamAttribsNV_global_rewrite_ptr;

PUBLIC PFNGLTRANSFORMFEEDBACKVARYINGSPROC epoxy_glTransformFeedbackVaryings = epoxy_glTransformFeedbackVaryings_global_rewrite_ptr;

PUBLIC PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC epoxy_glTransformFeedbackVaryingsEXT = epoxy_glTransformFeedbackVaryingsEXT_global_rewrite_ptr;

PUBLIC PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC epoxy_glTransformFeedbackVaryingsNV = epoxy_glTransformFeedbackVaryingsNV_global_rewrite_ptr;

PUBLIC PFNGLTRANSFORMPATHNVPROC epoxy_glTransformPathNV = epoxy_glTransformPathNV_global_rewrite_ptr;

PUBLIC PFNGLTRANSLATEDPROC epoxy_glTranslated = epoxy_glTranslated_global_rewrite_ptr;

PUBLIC PFNGLTRANSLATEFPROC epoxy_glTranslatef = epoxy_glTranslatef_global_rewrite_ptr;

PUBLIC PFNGLTRANSLATEXPROC epoxy_glTranslatex = epoxy_glTranslatex_global_rewrite_ptr;

PUBLIC PFNGLTRANSLATEXOESPROC epoxy_glTranslatexOES = epoxy_glTranslatexOES_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1DPROC epoxy_glUniform1d = epoxy_glUniform1d_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1DVPROC epoxy_glUniform1dv = epoxy_glUniform1dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1FPROC epoxy_glUniform1f = epoxy_glUniform1f_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1FARBPROC epoxy_glUniform1fARB = epoxy_glUniform1fARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1FVPROC epoxy_glUniform1fv = epoxy_glUniform1fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1FVARBPROC epoxy_glUniform1fvARB = epoxy_glUniform1fvARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1IPROC epoxy_glUniform1i = epoxy_glUniform1i_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1I64NVPROC epoxy_glUniform1i64NV = epoxy_glUniform1i64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1I64VNVPROC epoxy_glUniform1i64vNV = epoxy_glUniform1i64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1IARBPROC epoxy_glUniform1iARB = epoxy_glUniform1iARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1IVPROC epoxy_glUniform1iv = epoxy_glUniform1iv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1IVARBPROC epoxy_glUniform1ivARB = epoxy_glUniform1ivARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1UIPROC epoxy_glUniform1ui = epoxy_glUniform1ui_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1UI64NVPROC epoxy_glUniform1ui64NV = epoxy_glUniform1ui64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1UI64VNVPROC epoxy_glUniform1ui64vNV = epoxy_glUniform1ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1UIEXTPROC epoxy_glUniform1uiEXT = epoxy_glUniform1uiEXT_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1UIVPROC epoxy_glUniform1uiv = epoxy_glUniform1uiv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM1UIVEXTPROC epoxy_glUniform1uivEXT = epoxy_glUniform1uivEXT_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2DPROC epoxy_glUniform2d = epoxy_glUniform2d_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2DVPROC epoxy_glUniform2dv = epoxy_glUniform2dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2FPROC epoxy_glUniform2f = epoxy_glUniform2f_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2FARBPROC epoxy_glUniform2fARB = epoxy_glUniform2fARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2FVPROC epoxy_glUniform2fv = epoxy_glUniform2fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2FVARBPROC epoxy_glUniform2fvARB = epoxy_glUniform2fvARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2IPROC epoxy_glUniform2i = epoxy_glUniform2i_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2I64NVPROC epoxy_glUniform2i64NV = epoxy_glUniform2i64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2I64VNVPROC epoxy_glUniform2i64vNV = epoxy_glUniform2i64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2IARBPROC epoxy_glUniform2iARB = epoxy_glUniform2iARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2IVPROC epoxy_glUniform2iv = epoxy_glUniform2iv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2IVARBPROC epoxy_glUniform2ivARB = epoxy_glUniform2ivARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2UIPROC epoxy_glUniform2ui = epoxy_glUniform2ui_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2UI64NVPROC epoxy_glUniform2ui64NV = epoxy_glUniform2ui64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2UI64VNVPROC epoxy_glUniform2ui64vNV = epoxy_glUniform2ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2UIEXTPROC epoxy_glUniform2uiEXT = epoxy_glUniform2uiEXT_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2UIVPROC epoxy_glUniform2uiv = epoxy_glUniform2uiv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM2UIVEXTPROC epoxy_glUniform2uivEXT = epoxy_glUniform2uivEXT_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3DPROC epoxy_glUniform3d = epoxy_glUniform3d_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3DVPROC epoxy_glUniform3dv = epoxy_glUniform3dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3FPROC epoxy_glUniform3f = epoxy_glUniform3f_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3FARBPROC epoxy_glUniform3fARB = epoxy_glUniform3fARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3FVPROC epoxy_glUniform3fv = epoxy_glUniform3fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3FVARBPROC epoxy_glUniform3fvARB = epoxy_glUniform3fvARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3IPROC epoxy_glUniform3i = epoxy_glUniform3i_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3I64NVPROC epoxy_glUniform3i64NV = epoxy_glUniform3i64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3I64VNVPROC epoxy_glUniform3i64vNV = epoxy_glUniform3i64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3IARBPROC epoxy_glUniform3iARB = epoxy_glUniform3iARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3IVPROC epoxy_glUniform3iv = epoxy_glUniform3iv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3IVARBPROC epoxy_glUniform3ivARB = epoxy_glUniform3ivARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3UIPROC epoxy_glUniform3ui = epoxy_glUniform3ui_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3UI64NVPROC epoxy_glUniform3ui64NV = epoxy_glUniform3ui64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3UI64VNVPROC epoxy_glUniform3ui64vNV = epoxy_glUniform3ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3UIEXTPROC epoxy_glUniform3uiEXT = epoxy_glUniform3uiEXT_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3UIVPROC epoxy_glUniform3uiv = epoxy_glUniform3uiv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM3UIVEXTPROC epoxy_glUniform3uivEXT = epoxy_glUniform3uivEXT_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4DPROC epoxy_glUniform4d = epoxy_glUniform4d_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4DVPROC epoxy_glUniform4dv = epoxy_glUniform4dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4FPROC epoxy_glUniform4f = epoxy_glUniform4f_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4FARBPROC epoxy_glUniform4fARB = epoxy_glUniform4fARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4FVPROC epoxy_glUniform4fv = epoxy_glUniform4fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4FVARBPROC epoxy_glUniform4fvARB = epoxy_glUniform4fvARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4IPROC epoxy_glUniform4i = epoxy_glUniform4i_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4I64NVPROC epoxy_glUniform4i64NV = epoxy_glUniform4i64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4I64VNVPROC epoxy_glUniform4i64vNV = epoxy_glUniform4i64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4IARBPROC epoxy_glUniform4iARB = epoxy_glUniform4iARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4IVPROC epoxy_glUniform4iv = epoxy_glUniform4iv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4IVARBPROC epoxy_glUniform4ivARB = epoxy_glUniform4ivARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4UIPROC epoxy_glUniform4ui = epoxy_glUniform4ui_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4UI64NVPROC epoxy_glUniform4ui64NV = epoxy_glUniform4ui64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4UI64VNVPROC epoxy_glUniform4ui64vNV = epoxy_glUniform4ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4UIEXTPROC epoxy_glUniform4uiEXT = epoxy_glUniform4uiEXT_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4UIVPROC epoxy_glUniform4uiv = epoxy_glUniform4uiv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORM4UIVEXTPROC epoxy_glUniform4uivEXT = epoxy_glUniform4uivEXT_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMBLOCKBINDINGPROC epoxy_glUniformBlockBinding = epoxy_glUniformBlockBinding_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMBUFFEREXTPROC epoxy_glUniformBufferEXT = epoxy_glUniformBufferEXT_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMHANDLEUI64ARBPROC epoxy_glUniformHandleui64ARB = epoxy_glUniformHandleui64ARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMHANDLEUI64NVPROC epoxy_glUniformHandleui64NV = epoxy_glUniformHandleui64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMHANDLEUI64VARBPROC epoxy_glUniformHandleui64vARB = epoxy_glUniformHandleui64vARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMHANDLEUI64VNVPROC epoxy_glUniformHandleui64vNV = epoxy_glUniformHandleui64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX2DVPROC epoxy_glUniformMatrix2dv = epoxy_glUniformMatrix2dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX2FVPROC epoxy_glUniformMatrix2fv = epoxy_glUniformMatrix2fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX2FVARBPROC epoxy_glUniformMatrix2fvARB = epoxy_glUniformMatrix2fvARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX2X3DVPROC epoxy_glUniformMatrix2x3dv = epoxy_glUniformMatrix2x3dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX2X3FVPROC epoxy_glUniformMatrix2x3fv = epoxy_glUniformMatrix2x3fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX2X3FVNVPROC epoxy_glUniformMatrix2x3fvNV = epoxy_glUniformMatrix2x3fvNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX2X4DVPROC epoxy_glUniformMatrix2x4dv = epoxy_glUniformMatrix2x4dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX2X4FVPROC epoxy_glUniformMatrix2x4fv = epoxy_glUniformMatrix2x4fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX2X4FVNVPROC epoxy_glUniformMatrix2x4fvNV = epoxy_glUniformMatrix2x4fvNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX3DVPROC epoxy_glUniformMatrix3dv = epoxy_glUniformMatrix3dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX3FVPROC epoxy_glUniformMatrix3fv = epoxy_glUniformMatrix3fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX3FVARBPROC epoxy_glUniformMatrix3fvARB = epoxy_glUniformMatrix3fvARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX3X2DVPROC epoxy_glUniformMatrix3x2dv = epoxy_glUniformMatrix3x2dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX3X2FVPROC epoxy_glUniformMatrix3x2fv = epoxy_glUniformMatrix3x2fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX3X2FVNVPROC epoxy_glUniformMatrix3x2fvNV = epoxy_glUniformMatrix3x2fvNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX3X4DVPROC epoxy_glUniformMatrix3x4dv = epoxy_glUniformMatrix3x4dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX3X4FVPROC epoxy_glUniformMatrix3x4fv = epoxy_glUniformMatrix3x4fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX3X4FVNVPROC epoxy_glUniformMatrix3x4fvNV = epoxy_glUniformMatrix3x4fvNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX4DVPROC epoxy_glUniformMatrix4dv = epoxy_glUniformMatrix4dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX4FVPROC epoxy_glUniformMatrix4fv = epoxy_glUniformMatrix4fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX4FVARBPROC epoxy_glUniformMatrix4fvARB = epoxy_glUniformMatrix4fvARB_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX4X2DVPROC epoxy_glUniformMatrix4x2dv = epoxy_glUniformMatrix4x2dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX4X2FVPROC epoxy_glUniformMatrix4x2fv = epoxy_glUniformMatrix4x2fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX4X2FVNVPROC epoxy_glUniformMatrix4x2fvNV = epoxy_glUniformMatrix4x2fvNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX4X3DVPROC epoxy_glUniformMatrix4x3dv = epoxy_glUniformMatrix4x3dv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX4X3FVPROC epoxy_glUniformMatrix4x3fv = epoxy_glUniformMatrix4x3fv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMMATRIX4X3FVNVPROC epoxy_glUniformMatrix4x3fvNV = epoxy_glUniformMatrix4x3fvNV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMSUBROUTINESUIVPROC epoxy_glUniformSubroutinesuiv = epoxy_glUniformSubroutinesuiv_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMUI64NVPROC epoxy_glUniformui64NV = epoxy_glUniformui64NV_global_rewrite_ptr;

PUBLIC PFNGLUNIFORMUI64VNVPROC epoxy_glUniformui64vNV = epoxy_glUniformui64vNV_global_rewrite_ptr;

PUBLIC PFNGLUNLOCKARRAYSEXTPROC epoxy_glUnlockArraysEXT = epoxy_glUnlockArraysEXT_global_rewrite_ptr;

PUBLIC PFNGLUNMAPBUFFERPROC epoxy_glUnmapBuffer = epoxy_glUnmapBuffer_global_rewrite_ptr;

PUBLIC PFNGLUNMAPBUFFERARBPROC epoxy_glUnmapBufferARB = epoxy_glUnmapBufferARB_global_rewrite_ptr;

PUBLIC PFNGLUNMAPBUFFEROESPROC epoxy_glUnmapBufferOES = epoxy_glUnmapBufferOES_global_rewrite_ptr;

PUBLIC PFNGLUNMAPNAMEDBUFFERPROC epoxy_glUnmapNamedBuffer = epoxy_glUnmapNamedBuffer_global_rewrite_ptr;

PUBLIC PFNGLUNMAPNAMEDBUFFEREXTPROC epoxy_glUnmapNamedBufferEXT = epoxy_glUnmapNamedBufferEXT_global_rewrite_ptr;

PUBLIC PFNGLUNMAPOBJECTBUFFERATIPROC epoxy_glUnmapObjectBufferATI = epoxy_glUnmapObjectBufferATI_global_rewrite_ptr;

PUBLIC PFNGLUNMAPTEXTURE2DINTELPROC epoxy_glUnmapTexture2DINTEL = epoxy_glUnmapTexture2DINTEL_global_rewrite_ptr;

PUBLIC PFNGLUPDATEOBJECTBUFFERATIPROC epoxy_glUpdateObjectBufferATI = epoxy_glUpdateObjectBufferATI_global_rewrite_ptr;

PUBLIC PFNGLUSEPROGRAMPROC epoxy_glUseProgram = epoxy_glUseProgram_global_rewrite_ptr;

PUBLIC PFNGLUSEPROGRAMOBJECTARBPROC epoxy_glUseProgramObjectARB = epoxy_glUseProgramObjectARB_global_rewrite_ptr;

PUBLIC PFNGLUSEPROGRAMSTAGESPROC epoxy_glUseProgramStages = epoxy_glUseProgramStages_global_rewrite_ptr;

PUBLIC PFNGLUSEPROGRAMSTAGESEXTPROC epoxy_glUseProgramStagesEXT = epoxy_glUseProgramStagesEXT_global_rewrite_ptr;

PUBLIC PFNGLUSESHADERPROGRAMEXTPROC epoxy_glUseShaderProgramEXT = epoxy_glUseShaderProgramEXT_global_rewrite_ptr;

PUBLIC PFNGLVDPAUFININVPROC epoxy_glVDPAUFiniNV = epoxy_glVDPAUFiniNV_global_rewrite_ptr;

PUBLIC PFNGLVDPAUGETSURFACEIVNVPROC epoxy_glVDPAUGetSurfaceivNV = epoxy_glVDPAUGetSurfaceivNV_global_rewrite_ptr;

PUBLIC PFNGLVDPAUINITNVPROC epoxy_glVDPAUInitNV = epoxy_glVDPAUInitNV_global_rewrite_ptr;

PUBLIC PFNGLVDPAUISSURFACENVPROC epoxy_glVDPAUIsSurfaceNV = epoxy_glVDPAUIsSurfaceNV_global_rewrite_ptr;

PUBLIC PFNGLVDPAUMAPSURFACESNVPROC epoxy_glVDPAUMapSurfacesNV = epoxy_glVDPAUMapSurfacesNV_global_rewrite_ptr;

PUBLIC PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC epoxy_glVDPAURegisterOutputSurfaceNV = epoxy_glVDPAURegisterOutputSurfaceNV_global_rewrite_ptr;

PUBLIC PFNGLVDPAUREGISTERVIDEOSURFACENVPROC epoxy_glVDPAURegisterVideoSurfaceNV = epoxy_glVDPAURegisterVideoSurfaceNV_global_rewrite_ptr;

PUBLIC PFNGLVDPAUSURFACEACCESSNVPROC epoxy_glVDPAUSurfaceAccessNV = epoxy_glVDPAUSurfaceAccessNV_global_rewrite_ptr;

PUBLIC PFNGLVDPAUUNMAPSURFACESNVPROC epoxy_glVDPAUUnmapSurfacesNV = epoxy_glVDPAUUnmapSurfacesNV_global_rewrite_ptr;

PUBLIC PFNGLVDPAUUNREGISTERSURFACENVPROC epoxy_glVDPAUUnregisterSurfaceNV = epoxy_glVDPAUUnregisterSurfaceNV_global_rewrite_ptr;

PUBLIC PFNGLVALIDATEPROGRAMPROC epoxy_glValidateProgram = epoxy_glValidateProgram_global_rewrite_ptr;

PUBLIC PFNGLVALIDATEPROGRAMARBPROC epoxy_glValidateProgramARB = epoxy_glValidateProgramARB_global_rewrite_ptr;

PUBLIC PFNGLVALIDATEPROGRAMPIPELINEPROC epoxy_glValidateProgramPipeline = epoxy_glValidateProgramPipeline_global_rewrite_ptr;

PUBLIC PFNGLVALIDATEPROGRAMPIPELINEEXTPROC epoxy_glValidateProgramPipelineEXT = epoxy_glValidateProgramPipelineEXT_global_rewrite_ptr;

PUBLIC PFNGLVARIANTARRAYOBJECTATIPROC epoxy_glVariantArrayObjectATI = epoxy_glVariantArrayObjectATI_global_rewrite_ptr;

PUBLIC PFNGLVARIANTPOINTEREXTPROC epoxy_glVariantPointerEXT = epoxy_glVariantPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLVARIANTBVEXTPROC epoxy_glVariantbvEXT = epoxy_glVariantbvEXT_global_rewrite_ptr;

PUBLIC PFNGLVARIANTDVEXTPROC epoxy_glVariantdvEXT = epoxy_glVariantdvEXT_global_rewrite_ptr;

PUBLIC PFNGLVARIANTFVEXTPROC epoxy_glVariantfvEXT = epoxy_glVariantfvEXT_global_rewrite_ptr;

PUBLIC PFNGLVARIANTIVEXTPROC epoxy_glVariantivEXT = epoxy_glVariantivEXT_global_rewrite_ptr;

PUBLIC PFNGLVARIANTSVEXTPROC epoxy_glVariantsvEXT = epoxy_glVariantsvEXT_global_rewrite_ptr;

PUBLIC PFNGLVARIANTUBVEXTPROC epoxy_glVariantubvEXT = epoxy_glVariantubvEXT_global_rewrite_ptr;

PUBLIC PFNGLVARIANTUIVEXTPROC epoxy_glVariantuivEXT = epoxy_glVariantuivEXT_global_rewrite_ptr;

PUBLIC PFNGLVARIANTUSVEXTPROC epoxy_glVariantusvEXT = epoxy_glVariantusvEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2BOESPROC epoxy_glVertex2bOES = epoxy_glVertex2bOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2BVOESPROC epoxy_glVertex2bvOES = epoxy_glVertex2bvOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2DPROC epoxy_glVertex2d = epoxy_glVertex2d_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2DVPROC epoxy_glVertex2dv = epoxy_glVertex2dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2FPROC epoxy_glVertex2f = epoxy_glVertex2f_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2FVPROC epoxy_glVertex2fv = epoxy_glVertex2fv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2HNVPROC epoxy_glVertex2hNV = epoxy_glVertex2hNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2HVNVPROC epoxy_glVertex2hvNV = epoxy_glVertex2hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2IPROC epoxy_glVertex2i = epoxy_glVertex2i_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2IVPROC epoxy_glVertex2iv = epoxy_glVertex2iv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2SPROC epoxy_glVertex2s = epoxy_glVertex2s_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2SVPROC epoxy_glVertex2sv = epoxy_glVertex2sv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2XOESPROC epoxy_glVertex2xOES = epoxy_glVertex2xOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX2XVOESPROC epoxy_glVertex2xvOES = epoxy_glVertex2xvOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3BOESPROC epoxy_glVertex3bOES = epoxy_glVertex3bOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3BVOESPROC epoxy_glVertex3bvOES = epoxy_glVertex3bvOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3DPROC epoxy_glVertex3d = epoxy_glVertex3d_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3DVPROC epoxy_glVertex3dv = epoxy_glVertex3dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3FPROC epoxy_glVertex3f = epoxy_glVertex3f_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3FVPROC epoxy_glVertex3fv = epoxy_glVertex3fv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3HNVPROC epoxy_glVertex3hNV = epoxy_glVertex3hNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3HVNVPROC epoxy_glVertex3hvNV = epoxy_glVertex3hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3IPROC epoxy_glVertex3i = epoxy_glVertex3i_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3IVPROC epoxy_glVertex3iv = epoxy_glVertex3iv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3SPROC epoxy_glVertex3s = epoxy_glVertex3s_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3SVPROC epoxy_glVertex3sv = epoxy_glVertex3sv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3XOESPROC epoxy_glVertex3xOES = epoxy_glVertex3xOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX3XVOESPROC epoxy_glVertex3xvOES = epoxy_glVertex3xvOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4BOESPROC epoxy_glVertex4bOES = epoxy_glVertex4bOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4BVOESPROC epoxy_glVertex4bvOES = epoxy_glVertex4bvOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4DPROC epoxy_glVertex4d = epoxy_glVertex4d_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4DVPROC epoxy_glVertex4dv = epoxy_glVertex4dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4FPROC epoxy_glVertex4f = epoxy_glVertex4f_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4FVPROC epoxy_glVertex4fv = epoxy_glVertex4fv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4HNVPROC epoxy_glVertex4hNV = epoxy_glVertex4hNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4HVNVPROC epoxy_glVertex4hvNV = epoxy_glVertex4hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4IPROC epoxy_glVertex4i = epoxy_glVertex4i_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4IVPROC epoxy_glVertex4iv = epoxy_glVertex4iv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4SPROC epoxy_glVertex4s = epoxy_glVertex4s_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4SVPROC epoxy_glVertex4sv = epoxy_glVertex4sv_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4XOESPROC epoxy_glVertex4xOES = epoxy_glVertex4xOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEX4XVOESPROC epoxy_glVertex4xvOES = epoxy_glVertex4xvOES_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYATTRIBBINDINGPROC epoxy_glVertexArrayAttribBinding = epoxy_glVertexArrayAttribBinding_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYATTRIBFORMATPROC epoxy_glVertexArrayAttribFormat = epoxy_glVertexArrayAttribFormat_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYATTRIBIFORMATPROC epoxy_glVertexArrayAttribIFormat = epoxy_glVertexArrayAttribIFormat_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYATTRIBLFORMATPROC epoxy_glVertexArrayAttribLFormat = epoxy_glVertexArrayAttribLFormat_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC epoxy_glVertexArrayBindVertexBufferEXT = epoxy_glVertexArrayBindVertexBufferEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYBINDINGDIVISORPROC epoxy_glVertexArrayBindingDivisor = epoxy_glVertexArrayBindingDivisor_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYCOLOROFFSETEXTPROC epoxy_glVertexArrayColorOffsetEXT = epoxy_glVertexArrayColorOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC epoxy_glVertexArrayEdgeFlagOffsetEXT = epoxy_glVertexArrayEdgeFlagOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYELEMENTBUFFERPROC epoxy_glVertexArrayElementBuffer = epoxy_glVertexArrayElementBuffer_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC epoxy_glVertexArrayFogCoordOffsetEXT = epoxy_glVertexArrayFogCoordOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYINDEXOFFSETEXTPROC epoxy_glVertexArrayIndexOffsetEXT = epoxy_glVertexArrayIndexOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC epoxy_glVertexArrayMultiTexCoordOffsetEXT = epoxy_glVertexArrayMultiTexCoordOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYNORMALOFFSETEXTPROC epoxy_glVertexArrayNormalOffsetEXT = epoxy_glVertexArrayNormalOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYPARAMETERIAPPLEPROC epoxy_glVertexArrayParameteriAPPLE = epoxy_glVertexArrayParameteriAPPLE_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYRANGEAPPLEPROC epoxy_glVertexArrayRangeAPPLE = epoxy_glVertexArrayRangeAPPLE_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYRANGENVPROC epoxy_glVertexArrayRangeNV = epoxy_glVertexArrayRangeNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC epoxy_glVertexArraySecondaryColorOffsetEXT = epoxy_glVertexArraySecondaryColorOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC epoxy_glVertexArrayTexCoordOffsetEXT = epoxy_glVertexArrayTexCoordOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC epoxy_glVertexArrayVertexAttribBindingEXT = epoxy_glVertexArrayVertexAttribBindingEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC epoxy_glVertexArrayVertexAttribDivisorEXT = epoxy_glVertexArrayVertexAttribDivisorEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC epoxy_glVertexArrayVertexAttribFormatEXT = epoxy_glVertexArrayVertexAttribFormatEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC epoxy_glVertexArrayVertexAttribIFormatEXT = epoxy_glVertexArrayVertexAttribIFormatEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC epoxy_glVertexArrayVertexAttribIOffsetEXT = epoxy_glVertexArrayVertexAttribIOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC epoxy_glVertexArrayVertexAttribLFormatEXT = epoxy_glVertexArrayVertexAttribLFormatEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC epoxy_glVertexArrayVertexAttribLOffsetEXT = epoxy_glVertexArrayVertexAttribLOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC epoxy_glVertexArrayVertexAttribOffsetEXT = epoxy_glVertexArrayVertexAttribOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC epoxy_glVertexArrayVertexBindingDivisorEXT = epoxy_glVertexArrayVertexBindingDivisorEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXBUFFERPROC epoxy_glVertexArrayVertexBuffer = epoxy_glVertexArrayVertexBuffer_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXBUFFERSPROC epoxy_glVertexArrayVertexBuffers = epoxy_glVertexArrayVertexBuffers_global_rewrite_ptr;

PUBLIC PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC epoxy_glVertexArrayVertexOffsetEXT = epoxy_glVertexArrayVertexOffsetEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1DPROC epoxy_glVertexAttrib1d = epoxy_glVertexAttrib1d_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1DARBPROC epoxy_glVertexAttrib1dARB = epoxy_glVertexAttrib1dARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1DNVPROC epoxy_glVertexAttrib1dNV = epoxy_glVertexAttrib1dNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1DVPROC epoxy_glVertexAttrib1dv = epoxy_glVertexAttrib1dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1DVARBPROC epoxy_glVertexAttrib1dvARB = epoxy_glVertexAttrib1dvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1DVNVPROC epoxy_glVertexAttrib1dvNV = epoxy_glVertexAttrib1dvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1FPROC epoxy_glVertexAttrib1f = epoxy_glVertexAttrib1f_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1FARBPROC epoxy_glVertexAttrib1fARB = epoxy_glVertexAttrib1fARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1FNVPROC epoxy_glVertexAttrib1fNV = epoxy_glVertexAttrib1fNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1FVPROC epoxy_glVertexAttrib1fv = epoxy_glVertexAttrib1fv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1FVARBPROC epoxy_glVertexAttrib1fvARB = epoxy_glVertexAttrib1fvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1FVNVPROC epoxy_glVertexAttrib1fvNV = epoxy_glVertexAttrib1fvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1HNVPROC epoxy_glVertexAttrib1hNV = epoxy_glVertexAttrib1hNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1HVNVPROC epoxy_glVertexAttrib1hvNV = epoxy_glVertexAttrib1hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1SPROC epoxy_glVertexAttrib1s = epoxy_glVertexAttrib1s_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1SARBPROC epoxy_glVertexAttrib1sARB = epoxy_glVertexAttrib1sARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1SNVPROC epoxy_glVertexAttrib1sNV = epoxy_glVertexAttrib1sNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1SVPROC epoxy_glVertexAttrib1sv = epoxy_glVertexAttrib1sv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1SVARBPROC epoxy_glVertexAttrib1svARB = epoxy_glVertexAttrib1svARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB1SVNVPROC epoxy_glVertexAttrib1svNV = epoxy_glVertexAttrib1svNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2DPROC epoxy_glVertexAttrib2d = epoxy_glVertexAttrib2d_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2DARBPROC epoxy_glVertexAttrib2dARB = epoxy_glVertexAttrib2dARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2DNVPROC epoxy_glVertexAttrib2dNV = epoxy_glVertexAttrib2dNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2DVPROC epoxy_glVertexAttrib2dv = epoxy_glVertexAttrib2dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2DVARBPROC epoxy_glVertexAttrib2dvARB = epoxy_glVertexAttrib2dvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2DVNVPROC epoxy_glVertexAttrib2dvNV = epoxy_glVertexAttrib2dvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2FPROC epoxy_glVertexAttrib2f = epoxy_glVertexAttrib2f_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2FARBPROC epoxy_glVertexAttrib2fARB = epoxy_glVertexAttrib2fARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2FNVPROC epoxy_glVertexAttrib2fNV = epoxy_glVertexAttrib2fNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2FVPROC epoxy_glVertexAttrib2fv = epoxy_glVertexAttrib2fv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2FVARBPROC epoxy_glVertexAttrib2fvARB = epoxy_glVertexAttrib2fvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2FVNVPROC epoxy_glVertexAttrib2fvNV = epoxy_glVertexAttrib2fvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2HNVPROC epoxy_glVertexAttrib2hNV = epoxy_glVertexAttrib2hNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2HVNVPROC epoxy_glVertexAttrib2hvNV = epoxy_glVertexAttrib2hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2SPROC epoxy_glVertexAttrib2s = epoxy_glVertexAttrib2s_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2SARBPROC epoxy_glVertexAttrib2sARB = epoxy_glVertexAttrib2sARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2SNVPROC epoxy_glVertexAttrib2sNV = epoxy_glVertexAttrib2sNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2SVPROC epoxy_glVertexAttrib2sv = epoxy_glVertexAttrib2sv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2SVARBPROC epoxy_glVertexAttrib2svARB = epoxy_glVertexAttrib2svARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB2SVNVPROC epoxy_glVertexAttrib2svNV = epoxy_glVertexAttrib2svNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3DPROC epoxy_glVertexAttrib3d = epoxy_glVertexAttrib3d_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3DARBPROC epoxy_glVertexAttrib3dARB = epoxy_glVertexAttrib3dARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3DNVPROC epoxy_glVertexAttrib3dNV = epoxy_glVertexAttrib3dNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3DVPROC epoxy_glVertexAttrib3dv = epoxy_glVertexAttrib3dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3DVARBPROC epoxy_glVertexAttrib3dvARB = epoxy_glVertexAttrib3dvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3DVNVPROC epoxy_glVertexAttrib3dvNV = epoxy_glVertexAttrib3dvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3FPROC epoxy_glVertexAttrib3f = epoxy_glVertexAttrib3f_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3FARBPROC epoxy_glVertexAttrib3fARB = epoxy_glVertexAttrib3fARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3FNVPROC epoxy_glVertexAttrib3fNV = epoxy_glVertexAttrib3fNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3FVPROC epoxy_glVertexAttrib3fv = epoxy_glVertexAttrib3fv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3FVARBPROC epoxy_glVertexAttrib3fvARB = epoxy_glVertexAttrib3fvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3FVNVPROC epoxy_glVertexAttrib3fvNV = epoxy_glVertexAttrib3fvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3HNVPROC epoxy_glVertexAttrib3hNV = epoxy_glVertexAttrib3hNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3HVNVPROC epoxy_glVertexAttrib3hvNV = epoxy_glVertexAttrib3hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3SPROC epoxy_glVertexAttrib3s = epoxy_glVertexAttrib3s_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3SARBPROC epoxy_glVertexAttrib3sARB = epoxy_glVertexAttrib3sARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3SNVPROC epoxy_glVertexAttrib3sNV = epoxy_glVertexAttrib3sNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3SVPROC epoxy_glVertexAttrib3sv = epoxy_glVertexAttrib3sv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3SVARBPROC epoxy_glVertexAttrib3svARB = epoxy_glVertexAttrib3svARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB3SVNVPROC epoxy_glVertexAttrib3svNV = epoxy_glVertexAttrib3svNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NBVPROC epoxy_glVertexAttrib4Nbv = epoxy_glVertexAttrib4Nbv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NBVARBPROC epoxy_glVertexAttrib4NbvARB = epoxy_glVertexAttrib4NbvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NIVPROC epoxy_glVertexAttrib4Niv = epoxy_glVertexAttrib4Niv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NIVARBPROC epoxy_glVertexAttrib4NivARB = epoxy_glVertexAttrib4NivARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NSVPROC epoxy_glVertexAttrib4Nsv = epoxy_glVertexAttrib4Nsv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NSVARBPROC epoxy_glVertexAttrib4NsvARB = epoxy_glVertexAttrib4NsvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NUBPROC epoxy_glVertexAttrib4Nub = epoxy_glVertexAttrib4Nub_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NUBARBPROC epoxy_glVertexAttrib4NubARB = epoxy_glVertexAttrib4NubARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NUBVPROC epoxy_glVertexAttrib4Nubv = epoxy_glVertexAttrib4Nubv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NUBVARBPROC epoxy_glVertexAttrib4NubvARB = epoxy_glVertexAttrib4NubvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NUIVPROC epoxy_glVertexAttrib4Nuiv = epoxy_glVertexAttrib4Nuiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NUIVARBPROC epoxy_glVertexAttrib4NuivARB = epoxy_glVertexAttrib4NuivARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NUSVPROC epoxy_glVertexAttrib4Nusv = epoxy_glVertexAttrib4Nusv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4NUSVARBPROC epoxy_glVertexAttrib4NusvARB = epoxy_glVertexAttrib4NusvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4BVPROC epoxy_glVertexAttrib4bv = epoxy_glVertexAttrib4bv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4BVARBPROC epoxy_glVertexAttrib4bvARB = epoxy_glVertexAttrib4bvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4DPROC epoxy_glVertexAttrib4d = epoxy_glVertexAttrib4d_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4DARBPROC epoxy_glVertexAttrib4dARB = epoxy_glVertexAttrib4dARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4DNVPROC epoxy_glVertexAttrib4dNV = epoxy_glVertexAttrib4dNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4DVPROC epoxy_glVertexAttrib4dv = epoxy_glVertexAttrib4dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4DVARBPROC epoxy_glVertexAttrib4dvARB = epoxy_glVertexAttrib4dvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4DVNVPROC epoxy_glVertexAttrib4dvNV = epoxy_glVertexAttrib4dvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4FPROC epoxy_glVertexAttrib4f = epoxy_glVertexAttrib4f_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4FARBPROC epoxy_glVertexAttrib4fARB = epoxy_glVertexAttrib4fARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4FNVPROC epoxy_glVertexAttrib4fNV = epoxy_glVertexAttrib4fNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4FVPROC epoxy_glVertexAttrib4fv = epoxy_glVertexAttrib4fv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4FVARBPROC epoxy_glVertexAttrib4fvARB = epoxy_glVertexAttrib4fvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4FVNVPROC epoxy_glVertexAttrib4fvNV = epoxy_glVertexAttrib4fvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4HNVPROC epoxy_glVertexAttrib4hNV = epoxy_glVertexAttrib4hNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4HVNVPROC epoxy_glVertexAttrib4hvNV = epoxy_glVertexAttrib4hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4IVPROC epoxy_glVertexAttrib4iv = epoxy_glVertexAttrib4iv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4IVARBPROC epoxy_glVertexAttrib4ivARB = epoxy_glVertexAttrib4ivARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4SPROC epoxy_glVertexAttrib4s = epoxy_glVertexAttrib4s_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4SARBPROC epoxy_glVertexAttrib4sARB = epoxy_glVertexAttrib4sARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4SNVPROC epoxy_glVertexAttrib4sNV = epoxy_glVertexAttrib4sNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4SVPROC epoxy_glVertexAttrib4sv = epoxy_glVertexAttrib4sv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4SVARBPROC epoxy_glVertexAttrib4svARB = epoxy_glVertexAttrib4svARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4SVNVPROC epoxy_glVertexAttrib4svNV = epoxy_glVertexAttrib4svNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4UBNVPROC epoxy_glVertexAttrib4ubNV = epoxy_glVertexAttrib4ubNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4UBVPROC epoxy_glVertexAttrib4ubv = epoxy_glVertexAttrib4ubv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4UBVARBPROC epoxy_glVertexAttrib4ubvARB = epoxy_glVertexAttrib4ubvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4UBVNVPROC epoxy_glVertexAttrib4ubvNV = epoxy_glVertexAttrib4ubvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4UIVPROC epoxy_glVertexAttrib4uiv = epoxy_glVertexAttrib4uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4UIVARBPROC epoxy_glVertexAttrib4uivARB = epoxy_glVertexAttrib4uivARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4USVPROC epoxy_glVertexAttrib4usv = epoxy_glVertexAttrib4usv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIB4USVARBPROC epoxy_glVertexAttrib4usvARB = epoxy_glVertexAttrib4usvARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBARRAYOBJECTATIPROC epoxy_glVertexAttribArrayObjectATI = epoxy_glVertexAttribArrayObjectATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBBINDINGPROC epoxy_glVertexAttribBinding = epoxy_glVertexAttribBinding_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBDIVISORPROC epoxy_glVertexAttribDivisor = epoxy_glVertexAttribDivisor_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBDIVISORANGLEPROC epoxy_glVertexAttribDivisorANGLE = epoxy_glVertexAttribDivisorANGLE_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBDIVISORARBPROC epoxy_glVertexAttribDivisorARB = epoxy_glVertexAttribDivisorARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBDIVISOREXTPROC epoxy_glVertexAttribDivisorEXT = epoxy_glVertexAttribDivisorEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBDIVISORNVPROC epoxy_glVertexAttribDivisorNV = epoxy_glVertexAttribDivisorNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBFORMATPROC epoxy_glVertexAttribFormat = epoxy_glVertexAttribFormat_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBFORMATNVPROC epoxy_glVertexAttribFormatNV = epoxy_glVertexAttribFormatNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI1IPROC epoxy_glVertexAttribI1i = epoxy_glVertexAttribI1i_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI1IEXTPROC epoxy_glVertexAttribI1iEXT = epoxy_glVertexAttribI1iEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI1IVPROC epoxy_glVertexAttribI1iv = epoxy_glVertexAttribI1iv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI1IVEXTPROC epoxy_glVertexAttribI1ivEXT = epoxy_glVertexAttribI1ivEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI1UIPROC epoxy_glVertexAttribI1ui = epoxy_glVertexAttribI1ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI1UIEXTPROC epoxy_glVertexAttribI1uiEXT = epoxy_glVertexAttribI1uiEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI1UIVPROC epoxy_glVertexAttribI1uiv = epoxy_glVertexAttribI1uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI1UIVEXTPROC epoxy_glVertexAttribI1uivEXT = epoxy_glVertexAttribI1uivEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI2IPROC epoxy_glVertexAttribI2i = epoxy_glVertexAttribI2i_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI2IEXTPROC epoxy_glVertexAttribI2iEXT = epoxy_glVertexAttribI2iEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI2IVPROC epoxy_glVertexAttribI2iv = epoxy_glVertexAttribI2iv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI2IVEXTPROC epoxy_glVertexAttribI2ivEXT = epoxy_glVertexAttribI2ivEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI2UIPROC epoxy_glVertexAttribI2ui = epoxy_glVertexAttribI2ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI2UIEXTPROC epoxy_glVertexAttribI2uiEXT = epoxy_glVertexAttribI2uiEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI2UIVPROC epoxy_glVertexAttribI2uiv = epoxy_glVertexAttribI2uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI2UIVEXTPROC epoxy_glVertexAttribI2uivEXT = epoxy_glVertexAttribI2uivEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI3IPROC epoxy_glVertexAttribI3i = epoxy_glVertexAttribI3i_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI3IEXTPROC epoxy_glVertexAttribI3iEXT = epoxy_glVertexAttribI3iEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI3IVPROC epoxy_glVertexAttribI3iv = epoxy_glVertexAttribI3iv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI3IVEXTPROC epoxy_glVertexAttribI3ivEXT = epoxy_glVertexAttribI3ivEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI3UIPROC epoxy_glVertexAttribI3ui = epoxy_glVertexAttribI3ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI3UIEXTPROC epoxy_glVertexAttribI3uiEXT = epoxy_glVertexAttribI3uiEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI3UIVPROC epoxy_glVertexAttribI3uiv = epoxy_glVertexAttribI3uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI3UIVEXTPROC epoxy_glVertexAttribI3uivEXT = epoxy_glVertexAttribI3uivEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4BVPROC epoxy_glVertexAttribI4bv = epoxy_glVertexAttribI4bv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4BVEXTPROC epoxy_glVertexAttribI4bvEXT = epoxy_glVertexAttribI4bvEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4IPROC epoxy_glVertexAttribI4i = epoxy_glVertexAttribI4i_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4IEXTPROC epoxy_glVertexAttribI4iEXT = epoxy_glVertexAttribI4iEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4IVPROC epoxy_glVertexAttribI4iv = epoxy_glVertexAttribI4iv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4IVEXTPROC epoxy_glVertexAttribI4ivEXT = epoxy_glVertexAttribI4ivEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4SVPROC epoxy_glVertexAttribI4sv = epoxy_glVertexAttribI4sv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4SVEXTPROC epoxy_glVertexAttribI4svEXT = epoxy_glVertexAttribI4svEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4UBVPROC epoxy_glVertexAttribI4ubv = epoxy_glVertexAttribI4ubv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4UBVEXTPROC epoxy_glVertexAttribI4ubvEXT = epoxy_glVertexAttribI4ubvEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4UIPROC epoxy_glVertexAttribI4ui = epoxy_glVertexAttribI4ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4UIEXTPROC epoxy_glVertexAttribI4uiEXT = epoxy_glVertexAttribI4uiEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4UIVPROC epoxy_glVertexAttribI4uiv = epoxy_glVertexAttribI4uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4UIVEXTPROC epoxy_glVertexAttribI4uivEXT = epoxy_glVertexAttribI4uivEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4USVPROC epoxy_glVertexAttribI4usv = epoxy_glVertexAttribI4usv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBI4USVEXTPROC epoxy_glVertexAttribI4usvEXT = epoxy_glVertexAttribI4usvEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBIFORMATPROC epoxy_glVertexAttribIFormat = epoxy_glVertexAttribIFormat_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBIFORMATNVPROC epoxy_glVertexAttribIFormatNV = epoxy_glVertexAttribIFormatNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBIPOINTERPROC epoxy_glVertexAttribIPointer = epoxy_glVertexAttribIPointer_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBIPOINTEREXTPROC epoxy_glVertexAttribIPointerEXT = epoxy_glVertexAttribIPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1DPROC epoxy_glVertexAttribL1d = epoxy_glVertexAttribL1d_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1DEXTPROC epoxy_glVertexAttribL1dEXT = epoxy_glVertexAttribL1dEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1DVPROC epoxy_glVertexAttribL1dv = epoxy_glVertexAttribL1dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1DVEXTPROC epoxy_glVertexAttribL1dvEXT = epoxy_glVertexAttribL1dvEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1I64NVPROC epoxy_glVertexAttribL1i64NV = epoxy_glVertexAttribL1i64NV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1I64VNVPROC epoxy_glVertexAttribL1i64vNV = epoxy_glVertexAttribL1i64vNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1UI64ARBPROC epoxy_glVertexAttribL1ui64ARB = epoxy_glVertexAttribL1ui64ARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1UI64NVPROC epoxy_glVertexAttribL1ui64NV = epoxy_glVertexAttribL1ui64NV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1UI64VARBPROC epoxy_glVertexAttribL1ui64vARB = epoxy_glVertexAttribL1ui64vARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL1UI64VNVPROC epoxy_glVertexAttribL1ui64vNV = epoxy_glVertexAttribL1ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL2DPROC epoxy_glVertexAttribL2d = epoxy_glVertexAttribL2d_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL2DEXTPROC epoxy_glVertexAttribL2dEXT = epoxy_glVertexAttribL2dEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL2DVPROC epoxy_glVertexAttribL2dv = epoxy_glVertexAttribL2dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL2DVEXTPROC epoxy_glVertexAttribL2dvEXT = epoxy_glVertexAttribL2dvEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL2I64NVPROC epoxy_glVertexAttribL2i64NV = epoxy_glVertexAttribL2i64NV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL2I64VNVPROC epoxy_glVertexAttribL2i64vNV = epoxy_glVertexAttribL2i64vNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL2UI64NVPROC epoxy_glVertexAttribL2ui64NV = epoxy_glVertexAttribL2ui64NV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL2UI64VNVPROC epoxy_glVertexAttribL2ui64vNV = epoxy_glVertexAttribL2ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL3DPROC epoxy_glVertexAttribL3d = epoxy_glVertexAttribL3d_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL3DEXTPROC epoxy_glVertexAttribL3dEXT = epoxy_glVertexAttribL3dEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL3DVPROC epoxy_glVertexAttribL3dv = epoxy_glVertexAttribL3dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL3DVEXTPROC epoxy_glVertexAttribL3dvEXT = epoxy_glVertexAttribL3dvEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL3I64NVPROC epoxy_glVertexAttribL3i64NV = epoxy_glVertexAttribL3i64NV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL3I64VNVPROC epoxy_glVertexAttribL3i64vNV = epoxy_glVertexAttribL3i64vNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL3UI64NVPROC epoxy_glVertexAttribL3ui64NV = epoxy_glVertexAttribL3ui64NV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL3UI64VNVPROC epoxy_glVertexAttribL3ui64vNV = epoxy_glVertexAttribL3ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL4DPROC epoxy_glVertexAttribL4d = epoxy_glVertexAttribL4d_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL4DEXTPROC epoxy_glVertexAttribL4dEXT = epoxy_glVertexAttribL4dEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL4DVPROC epoxy_glVertexAttribL4dv = epoxy_glVertexAttribL4dv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL4DVEXTPROC epoxy_glVertexAttribL4dvEXT = epoxy_glVertexAttribL4dvEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL4I64NVPROC epoxy_glVertexAttribL4i64NV = epoxy_glVertexAttribL4i64NV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL4I64VNVPROC epoxy_glVertexAttribL4i64vNV = epoxy_glVertexAttribL4i64vNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL4UI64NVPROC epoxy_glVertexAttribL4ui64NV = epoxy_glVertexAttribL4ui64NV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBL4UI64VNVPROC epoxy_glVertexAttribL4ui64vNV = epoxy_glVertexAttribL4ui64vNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBLFORMATPROC epoxy_glVertexAttribLFormat = epoxy_glVertexAttribLFormat_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBLFORMATNVPROC epoxy_glVertexAttribLFormatNV = epoxy_glVertexAttribLFormatNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBLPOINTERPROC epoxy_glVertexAttribLPointer = epoxy_glVertexAttribLPointer_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBLPOINTEREXTPROC epoxy_glVertexAttribLPointerEXT = epoxy_glVertexAttribLPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBP1UIPROC epoxy_glVertexAttribP1ui = epoxy_glVertexAttribP1ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBP1UIVPROC epoxy_glVertexAttribP1uiv = epoxy_glVertexAttribP1uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBP2UIPROC epoxy_glVertexAttribP2ui = epoxy_glVertexAttribP2ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBP2UIVPROC epoxy_glVertexAttribP2uiv = epoxy_glVertexAttribP2uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBP3UIPROC epoxy_glVertexAttribP3ui = epoxy_glVertexAttribP3ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBP3UIVPROC epoxy_glVertexAttribP3uiv = epoxy_glVertexAttribP3uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBP4UIPROC epoxy_glVertexAttribP4ui = epoxy_glVertexAttribP4ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBP4UIVPROC epoxy_glVertexAttribP4uiv = epoxy_glVertexAttribP4uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBPARAMETERIAMDPROC epoxy_glVertexAttribParameteriAMD = epoxy_glVertexAttribParameteriAMD_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBPOINTERPROC epoxy_glVertexAttribPointer = epoxy_glVertexAttribPointer_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBPOINTERARBPROC epoxy_glVertexAttribPointerARB = epoxy_glVertexAttribPointerARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBPOINTERNVPROC epoxy_glVertexAttribPointerNV = epoxy_glVertexAttribPointerNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS1DVNVPROC epoxy_glVertexAttribs1dvNV = epoxy_glVertexAttribs1dvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS1FVNVPROC epoxy_glVertexAttribs1fvNV = epoxy_glVertexAttribs1fvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS1HVNVPROC epoxy_glVertexAttribs1hvNV = epoxy_glVertexAttribs1hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS1SVNVPROC epoxy_glVertexAttribs1svNV = epoxy_glVertexAttribs1svNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS2DVNVPROC epoxy_glVertexAttribs2dvNV = epoxy_glVertexAttribs2dvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS2FVNVPROC epoxy_glVertexAttribs2fvNV = epoxy_glVertexAttribs2fvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS2HVNVPROC epoxy_glVertexAttribs2hvNV = epoxy_glVertexAttribs2hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS2SVNVPROC epoxy_glVertexAttribs2svNV = epoxy_glVertexAttribs2svNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS3DVNVPROC epoxy_glVertexAttribs3dvNV = epoxy_glVertexAttribs3dvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS3FVNVPROC epoxy_glVertexAttribs3fvNV = epoxy_glVertexAttribs3fvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS3HVNVPROC epoxy_glVertexAttribs3hvNV = epoxy_glVertexAttribs3hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS3SVNVPROC epoxy_glVertexAttribs3svNV = epoxy_glVertexAttribs3svNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS4DVNVPROC epoxy_glVertexAttribs4dvNV = epoxy_glVertexAttribs4dvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS4FVNVPROC epoxy_glVertexAttribs4fvNV = epoxy_glVertexAttribs4fvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS4HVNVPROC epoxy_glVertexAttribs4hvNV = epoxy_glVertexAttribs4hvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS4SVNVPROC epoxy_glVertexAttribs4svNV = epoxy_glVertexAttribs4svNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXATTRIBS4UBVNVPROC epoxy_glVertexAttribs4ubvNV = epoxy_glVertexAttribs4ubvNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXBINDINGDIVISORPROC epoxy_glVertexBindingDivisor = epoxy_glVertexBindingDivisor_global_rewrite_ptr;

PUBLIC PFNGLVERTEXBLENDARBPROC epoxy_glVertexBlendARB = epoxy_glVertexBlendARB_global_rewrite_ptr;

PUBLIC PFNGLVERTEXBLENDENVFATIPROC epoxy_glVertexBlendEnvfATI = epoxy_glVertexBlendEnvfATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXBLENDENVIATIPROC epoxy_glVertexBlendEnviATI = epoxy_glVertexBlendEnviATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXFORMATNVPROC epoxy_glVertexFormatNV = epoxy_glVertexFormatNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXP2UIPROC epoxy_glVertexP2ui = epoxy_glVertexP2ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXP2UIVPROC epoxy_glVertexP2uiv = epoxy_glVertexP2uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXP3UIPROC epoxy_glVertexP3ui = epoxy_glVertexP3ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXP3UIVPROC epoxy_glVertexP3uiv = epoxy_glVertexP3uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXP4UIPROC epoxy_glVertexP4ui = epoxy_glVertexP4ui_global_rewrite_ptr;

PUBLIC PFNGLVERTEXP4UIVPROC epoxy_glVertexP4uiv = epoxy_glVertexP4uiv_global_rewrite_ptr;

PUBLIC PFNGLVERTEXPOINTERPROC epoxy_glVertexPointer = epoxy_glVertexPointer_global_rewrite_ptr;

PUBLIC PFNGLVERTEXPOINTEREXTPROC epoxy_glVertexPointerEXT = epoxy_glVertexPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXPOINTERLISTIBMPROC epoxy_glVertexPointerListIBM = epoxy_glVertexPointerListIBM_global_rewrite_ptr;

PUBLIC PFNGLVERTEXPOINTERVINTELPROC epoxy_glVertexPointervINTEL = epoxy_glVertexPointervINTEL_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM1DATIPROC epoxy_glVertexStream1dATI = epoxy_glVertexStream1dATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM1DVATIPROC epoxy_glVertexStream1dvATI = epoxy_glVertexStream1dvATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM1FATIPROC epoxy_glVertexStream1fATI = epoxy_glVertexStream1fATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM1FVATIPROC epoxy_glVertexStream1fvATI = epoxy_glVertexStream1fvATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM1IATIPROC epoxy_glVertexStream1iATI = epoxy_glVertexStream1iATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM1IVATIPROC epoxy_glVertexStream1ivATI = epoxy_glVertexStream1ivATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM1SATIPROC epoxy_glVertexStream1sATI = epoxy_glVertexStream1sATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM1SVATIPROC epoxy_glVertexStream1svATI = epoxy_glVertexStream1svATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM2DATIPROC epoxy_glVertexStream2dATI = epoxy_glVertexStream2dATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM2DVATIPROC epoxy_glVertexStream2dvATI = epoxy_glVertexStream2dvATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM2FATIPROC epoxy_glVertexStream2fATI = epoxy_glVertexStream2fATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM2FVATIPROC epoxy_glVertexStream2fvATI = epoxy_glVertexStream2fvATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM2IATIPROC epoxy_glVertexStream2iATI = epoxy_glVertexStream2iATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM2IVATIPROC epoxy_glVertexStream2ivATI = epoxy_glVertexStream2ivATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM2SATIPROC epoxy_glVertexStream2sATI = epoxy_glVertexStream2sATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM2SVATIPROC epoxy_glVertexStream2svATI = epoxy_glVertexStream2svATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM3DATIPROC epoxy_glVertexStream3dATI = epoxy_glVertexStream3dATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM3DVATIPROC epoxy_glVertexStream3dvATI = epoxy_glVertexStream3dvATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM3FATIPROC epoxy_glVertexStream3fATI = epoxy_glVertexStream3fATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM3FVATIPROC epoxy_glVertexStream3fvATI = epoxy_glVertexStream3fvATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM3IATIPROC epoxy_glVertexStream3iATI = epoxy_glVertexStream3iATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM3IVATIPROC epoxy_glVertexStream3ivATI = epoxy_glVertexStream3ivATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM3SATIPROC epoxy_glVertexStream3sATI = epoxy_glVertexStream3sATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM3SVATIPROC epoxy_glVertexStream3svATI = epoxy_glVertexStream3svATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM4DATIPROC epoxy_glVertexStream4dATI = epoxy_glVertexStream4dATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM4DVATIPROC epoxy_glVertexStream4dvATI = epoxy_glVertexStream4dvATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM4FATIPROC epoxy_glVertexStream4fATI = epoxy_glVertexStream4fATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM4FVATIPROC epoxy_glVertexStream4fvATI = epoxy_glVertexStream4fvATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM4IATIPROC epoxy_glVertexStream4iATI = epoxy_glVertexStream4iATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM4IVATIPROC epoxy_glVertexStream4ivATI = epoxy_glVertexStream4ivATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM4SATIPROC epoxy_glVertexStream4sATI = epoxy_glVertexStream4sATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXSTREAM4SVATIPROC epoxy_glVertexStream4svATI = epoxy_glVertexStream4svATI_global_rewrite_ptr;

PUBLIC PFNGLVERTEXWEIGHTPOINTEREXTPROC epoxy_glVertexWeightPointerEXT = epoxy_glVertexWeightPointerEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXWEIGHTFEXTPROC epoxy_glVertexWeightfEXT = epoxy_glVertexWeightfEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXWEIGHTFVEXTPROC epoxy_glVertexWeightfvEXT = epoxy_glVertexWeightfvEXT_global_rewrite_ptr;

PUBLIC PFNGLVERTEXWEIGHTHNVPROC epoxy_glVertexWeighthNV = epoxy_glVertexWeighthNV_global_rewrite_ptr;

PUBLIC PFNGLVERTEXWEIGHTHVNVPROC epoxy_glVertexWeighthvNV = epoxy_glVertexWeighthvNV_global_rewrite_ptr;

PUBLIC PFNGLVIDEOCAPTURENVPROC epoxy_glVideoCaptureNV = epoxy_glVideoCaptureNV_global_rewrite_ptr;

PUBLIC PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC epoxy_glVideoCaptureStreamParameterdvNV = epoxy_glVideoCaptureStreamParameterdvNV_global_rewrite_ptr;

PUBLIC PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC epoxy_glVideoCaptureStreamParameterfvNV = epoxy_glVideoCaptureStreamParameterfvNV_global_rewrite_ptr;

PUBLIC PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC epoxy_glVideoCaptureStreamParameterivNV = epoxy_glVideoCaptureStreamParameterivNV_global_rewrite_ptr;

PUBLIC PFNGLVIEWPORTPROC epoxy_glViewport = epoxy_glViewport_global_rewrite_ptr;

PUBLIC PFNGLVIEWPORTARRAYVPROC epoxy_glViewportArrayv = epoxy_glViewportArrayv_global_rewrite_ptr;

PUBLIC PFNGLVIEWPORTARRAYVNVPROC epoxy_glViewportArrayvNV = epoxy_glViewportArrayvNV_global_rewrite_ptr;

PUBLIC PFNGLVIEWPORTINDEXEDFPROC epoxy_glViewportIndexedf = epoxy_glViewportIndexedf_global_rewrite_ptr;

PUBLIC PFNGLVIEWPORTINDEXEDFNVPROC epoxy_glViewportIndexedfNV = epoxy_glViewportIndexedfNV_global_rewrite_ptr;

PUBLIC PFNGLVIEWPORTINDEXEDFVPROC epoxy_glViewportIndexedfv = epoxy_glViewportIndexedfv_global_rewrite_ptr;

PUBLIC PFNGLVIEWPORTINDEXEDFVNVPROC epoxy_glViewportIndexedfvNV = epoxy_glViewportIndexedfvNV_global_rewrite_ptr;

PUBLIC PFNGLWAITSYNCPROC epoxy_glWaitSync = epoxy_glWaitSync_global_rewrite_ptr;

PUBLIC PFNGLWAITSYNCAPPLEPROC epoxy_glWaitSyncAPPLE = epoxy_glWaitSyncAPPLE_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTPATHSNVPROC epoxy_glWeightPathsNV = epoxy_glWeightPathsNV_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTPOINTERARBPROC epoxy_glWeightPointerARB = epoxy_glWeightPointerARB_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTPOINTEROESPROC epoxy_glWeightPointerOES = epoxy_glWeightPointerOES_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTBVARBPROC epoxy_glWeightbvARB = epoxy_glWeightbvARB_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTDVARBPROC epoxy_glWeightdvARB = epoxy_glWeightdvARB_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTFVARBPROC epoxy_glWeightfvARB = epoxy_glWeightfvARB_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTIVARBPROC epoxy_glWeightivARB = epoxy_glWeightivARB_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTSVARBPROC epoxy_glWeightsvARB = epoxy_glWeightsvARB_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTUBVARBPROC epoxy_glWeightubvARB = epoxy_glWeightubvARB_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTUIVARBPROC epoxy_glWeightuivARB = epoxy_glWeightuivARB_global_rewrite_ptr;

PUBLIC PFNGLWEIGHTUSVARBPROC epoxy_glWeightusvARB = epoxy_glWeightusvARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2DPROC epoxy_glWindowPos2d = epoxy_glWindowPos2d_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2DARBPROC epoxy_glWindowPos2dARB = epoxy_glWindowPos2dARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2DMESAPROC epoxy_glWindowPos2dMESA = epoxy_glWindowPos2dMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2DVPROC epoxy_glWindowPos2dv = epoxy_glWindowPos2dv_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2DVARBPROC epoxy_glWindowPos2dvARB = epoxy_glWindowPos2dvARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2DVMESAPROC epoxy_glWindowPos2dvMESA = epoxy_glWindowPos2dvMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2FPROC epoxy_glWindowPos2f = epoxy_glWindowPos2f_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2FARBPROC epoxy_glWindowPos2fARB = epoxy_glWindowPos2fARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2FMESAPROC epoxy_glWindowPos2fMESA = epoxy_glWindowPos2fMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2FVPROC epoxy_glWindowPos2fv = epoxy_glWindowPos2fv_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2FVARBPROC epoxy_glWindowPos2fvARB = epoxy_glWindowPos2fvARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2FVMESAPROC epoxy_glWindowPos2fvMESA = epoxy_glWindowPos2fvMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2IPROC epoxy_glWindowPos2i = epoxy_glWindowPos2i_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2IARBPROC epoxy_glWindowPos2iARB = epoxy_glWindowPos2iARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2IMESAPROC epoxy_glWindowPos2iMESA = epoxy_glWindowPos2iMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2IVPROC epoxy_glWindowPos2iv = epoxy_glWindowPos2iv_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2IVARBPROC epoxy_glWindowPos2ivARB = epoxy_glWindowPos2ivARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2IVMESAPROC epoxy_glWindowPos2ivMESA = epoxy_glWindowPos2ivMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2SPROC epoxy_glWindowPos2s = epoxy_glWindowPos2s_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2SARBPROC epoxy_glWindowPos2sARB = epoxy_glWindowPos2sARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2SMESAPROC epoxy_glWindowPos2sMESA = epoxy_glWindowPos2sMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2SVPROC epoxy_glWindowPos2sv = epoxy_glWindowPos2sv_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2SVARBPROC epoxy_glWindowPos2svARB = epoxy_glWindowPos2svARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS2SVMESAPROC epoxy_glWindowPos2svMESA = epoxy_glWindowPos2svMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3DPROC epoxy_glWindowPos3d = epoxy_glWindowPos3d_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3DARBPROC epoxy_glWindowPos3dARB = epoxy_glWindowPos3dARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3DMESAPROC epoxy_glWindowPos3dMESA = epoxy_glWindowPos3dMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3DVPROC epoxy_glWindowPos3dv = epoxy_glWindowPos3dv_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3DVARBPROC epoxy_glWindowPos3dvARB = epoxy_glWindowPos3dvARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3DVMESAPROC epoxy_glWindowPos3dvMESA = epoxy_glWindowPos3dvMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3FPROC epoxy_glWindowPos3f = epoxy_glWindowPos3f_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3FARBPROC epoxy_glWindowPos3fARB = epoxy_glWindowPos3fARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3FMESAPROC epoxy_glWindowPos3fMESA = epoxy_glWindowPos3fMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3FVPROC epoxy_glWindowPos3fv = epoxy_glWindowPos3fv_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3FVARBPROC epoxy_glWindowPos3fvARB = epoxy_glWindowPos3fvARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3FVMESAPROC epoxy_glWindowPos3fvMESA = epoxy_glWindowPos3fvMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3IPROC epoxy_glWindowPos3i = epoxy_glWindowPos3i_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3IARBPROC epoxy_glWindowPos3iARB = epoxy_glWindowPos3iARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3IMESAPROC epoxy_glWindowPos3iMESA = epoxy_glWindowPos3iMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3IVPROC epoxy_glWindowPos3iv = epoxy_glWindowPos3iv_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3IVARBPROC epoxy_glWindowPos3ivARB = epoxy_glWindowPos3ivARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3IVMESAPROC epoxy_glWindowPos3ivMESA = epoxy_glWindowPos3ivMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3SPROC epoxy_glWindowPos3s = epoxy_glWindowPos3s_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3SARBPROC epoxy_glWindowPos3sARB = epoxy_glWindowPos3sARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3SMESAPROC epoxy_glWindowPos3sMESA = epoxy_glWindowPos3sMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3SVPROC epoxy_glWindowPos3sv = epoxy_glWindowPos3sv_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3SVARBPROC epoxy_glWindowPos3svARB = epoxy_glWindowPos3svARB_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS3SVMESAPROC epoxy_glWindowPos3svMESA = epoxy_glWindowPos3svMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS4DMESAPROC epoxy_glWindowPos4dMESA = epoxy_glWindowPos4dMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS4DVMESAPROC epoxy_glWindowPos4dvMESA = epoxy_glWindowPos4dvMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS4FMESAPROC epoxy_glWindowPos4fMESA = epoxy_glWindowPos4fMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS4FVMESAPROC epoxy_glWindowPos4fvMESA = epoxy_glWindowPos4fvMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS4IMESAPROC epoxy_glWindowPos4iMESA = epoxy_glWindowPos4iMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS4IVMESAPROC epoxy_glWindowPos4ivMESA = epoxy_glWindowPos4ivMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS4SMESAPROC epoxy_glWindowPos4sMESA = epoxy_glWindowPos4sMESA_global_rewrite_ptr;

PUBLIC PFNGLWINDOWPOS4SVMESAPROC epoxy_glWindowPos4svMESA = epoxy_glWindowPos4svMESA_global_rewrite_ptr;

PUBLIC PFNGLWRITEMASKEXTPROC epoxy_glWriteMaskEXT = epoxy_glWriteMaskEXT_global_rewrite_ptr;

@


1.1
log
@Add libepoxy a library for handling gl/glx/egl function pointer management.
This is needed by glamor egl in the xserver which is in turn needed
to get acceleration with some hardware on xf86-video-ati.

Worked on during s2k15.  Glamor is not yet enabled in the xserver,
but adding this now as libepoxy recently showed up in ports.

The libepoxy port will be removed and ports will transition to
this version.  The xenocara version will be enabled when we're
ready to transition.
@
text
@d34 5
d123 1
d164 2
d168 2
d179 2
d183 2
d190 1
d194 1
d197 1
d200 1
d206 1
d231 1
d233 1
d235 4
d248 1
d312 2
d339 2
d367 1
d369 1
d371 1
d398 1
d400 1
d406 1
d423 1
d425 1
d427 1
d434 2
d437 3
d443 4
d452 1
d454 3
d480 1
d508 1
d524 1
d527 1
d543 1
d550 3
d564 1
d574 4
d582 2
d589 1
d592 3
d603 2
d637 1
d644 3
d712 1
d743 1
d765 1
d784 2
d831 1
d883 1
d887 1
d889 1
d897 1
d919 1
d934 1
d937 1
d961 1
d1011 2
d1015 1
d1017 1
d1019 1
d1021 1
d1029 1
d1107 1
d1116 4
d1138 2
d1141 2
d1153 1
d1179 1
d1182 1
d1190 1
d1192 1
d1194 1
d1196 1
d1198 1
d1200 1
d1202 1
d1206 1
d1211 3
d1238 2
d1244 1
d1276 1
d1278 1
d1280 1
d1282 1
d1284 1
d1286 1
d1288 1
d1290 1
d1292 1
d1294 1
d1296 1
d1298 1
d1300 1
d1302 1
d1304 1
d1306 1
d1309 2
d1313 2
d1316 1
d1363 2
d1372 1
d1376 3
d1408 1
d1447 1
d1498 1
d1500 1
d1524 2
d1527 1
d1533 3
d1570 1
d1573 1
d1577 2
d1582 1
d1585 1
d1711 1
d1713 3
d1717 1
d1720 3
d1724 2
d1727 2
d1734 1
d1748 1
d1750 1
d1808 2
d1816 2
d1820 1
d1879 1
d1881 1
d1895 2
d1943 1
d2113 1
d2119 1
d2122 1
d2175 1
a2184 1
    PFNGLSAMPLECOVERAGEOESPROC epoxy_glSampleCoverageOES;
d2195 2
d2198 2
d2210 1
d2212 1
d2214 1
d2280 1
d2295 4
d2301 1
d2325 1
d2327 2
d2446 1
d2449 1
d2452 1
d2480 1
d2482 1
d2484 1
d2498 1
d2500 1
d2502 1
d2504 1
d2506 1
d2508 1
d2512 1
d2514 1
d2516 1
d2518 1
d2520 1
d2523 1
d2525 1
d2527 1
d2530 2
d2534 2
d2657 1
d2733 4
d2738 1
d2741 1
d2760 2
d3047 1
d3049 1
d3051 1
d3148 1
d3178 1
d3186 1
d3193 1
d3204 1
d3232 1
d3236 1
d3270 1
d3276 1
d3281 1
d3292 2
d3301 1
d3311 1
d3320 2
d3323 1
d3328 1
d3332 1
d3334 3
d3338 1
d3343 1
d3365 1
d3370 1
d3373 1
d3375 1
d3386 1
d3389 1
d3398 1
d3405 1
d3411 1
d3424 1
d3430 3
d3436 1
d3441 1
d3445 1
d3447 2
d3451 1
d3453 1
d3492 1
a3492 1
};
d3494 726
a4219 318
static const char *enum_strings[] = {
    [Desktop_OpenGL_1_0] = "Desktop OpenGL 1.0",
    [Desktop_OpenGL_1_1] = "Desktop OpenGL 1.1",
    [Desktop_OpenGL_1_2] = "Desktop OpenGL 1.2",
    [Desktop_OpenGL_1_3] = "Desktop OpenGL 1.3",
    [Desktop_OpenGL_1_4] = "Desktop OpenGL 1.4",
    [Desktop_OpenGL_1_5] = "Desktop OpenGL 1.5",
    [Desktop_OpenGL_2_0] = "Desktop OpenGL 2.0",
    [Desktop_OpenGL_2_1] = "Desktop OpenGL 2.1",
    [Desktop_OpenGL_3_0] = "Desktop OpenGL 3.0",
    [Desktop_OpenGL_3_1] = "Desktop OpenGL 3.1",
    [Desktop_OpenGL_3_2] = "Desktop OpenGL 3.2",
    [Desktop_OpenGL_3_3] = "Desktop OpenGL 3.3",
    [Desktop_OpenGL_4_0] = "Desktop OpenGL 4.0",
    [Desktop_OpenGL_4_1] = "Desktop OpenGL 4.1",
    [Desktop_OpenGL_4_2] = "Desktop OpenGL 4.2",
    [Desktop_OpenGL_4_3] = "Desktop OpenGL 4.3",
    [Desktop_OpenGL_4_4] = "Desktop OpenGL 4.4",
    [GL_extension_GL_3DFX_tbuffer] = "GL extension \"GL_3DFX_tbuffer\"",
    [GL_extension_GL_AMD_debug_output] = "GL extension \"GL_AMD_debug_output\"",
    [GL_extension_GL_AMD_draw_buffers_blend] = "GL extension \"GL_AMD_draw_buffers_blend\"",
    [GL_extension_GL_AMD_gpu_shader_int64] = "GL extension \"GL_AMD_gpu_shader_int64\"",
    [GL_extension_GL_AMD_interleaved_elements] = "GL extension \"GL_AMD_interleaved_elements\"",
    [GL_extension_GL_AMD_multi_draw_indirect] = "GL extension \"GL_AMD_multi_draw_indirect\"",
    [GL_extension_GL_AMD_name_gen_delete] = "GL extension \"GL_AMD_name_gen_delete\"",
    [GL_extension_GL_AMD_occlusion_query_event] = "GL extension \"GL_AMD_occlusion_query_event\"",
    [GL_extension_GL_AMD_performance_monitor] = "GL extension \"GL_AMD_performance_monitor\"",
    [GL_extension_GL_AMD_sample_positions] = "GL extension \"GL_AMD_sample_positions\"",
    [GL_extension_GL_AMD_sparse_texture] = "GL extension \"GL_AMD_sparse_texture\"",
    [GL_extension_GL_AMD_stencil_operation_extended] = "GL extension \"GL_AMD_stencil_operation_extended\"",
    [GL_extension_GL_AMD_vertex_shader_tessellator] = "GL extension \"GL_AMD_vertex_shader_tessellator\"",
    [GL_extension_GL_ANGLE_framebuffer_blit] = "GL extension \"GL_ANGLE_framebuffer_blit\"",
    [GL_extension_GL_ANGLE_framebuffer_multisample] = "GL extension \"GL_ANGLE_framebuffer_multisample\"",
    [GL_extension_GL_ANGLE_instanced_arrays] = "GL extension \"GL_ANGLE_instanced_arrays\"",
    [GL_extension_GL_ANGLE_translated_shader_source] = "GL extension \"GL_ANGLE_translated_shader_source\"",
    [GL_extension_GL_APPLE_copy_texture_levels] = "GL extension \"GL_APPLE_copy_texture_levels\"",
    [GL_extension_GL_APPLE_element_array] = "GL extension \"GL_APPLE_element_array\"",
    [GL_extension_GL_APPLE_fence] = "GL extension \"GL_APPLE_fence\"",
    [GL_extension_GL_APPLE_flush_buffer_range] = "GL extension \"GL_APPLE_flush_buffer_range\"",
    [GL_extension_GL_APPLE_framebuffer_multisample] = "GL extension \"GL_APPLE_framebuffer_multisample\"",
    [GL_extension_GL_APPLE_object_purgeable] = "GL extension \"GL_APPLE_object_purgeable\"",
    [GL_extension_GL_APPLE_sync] = "GL extension \"GL_APPLE_sync\"",
    [GL_extension_GL_APPLE_texture_range] = "GL extension \"GL_APPLE_texture_range\"",
    [GL_extension_GL_APPLE_vertex_array_object] = "GL extension \"GL_APPLE_vertex_array_object\"",
    [GL_extension_GL_APPLE_vertex_array_range] = "GL extension \"GL_APPLE_vertex_array_range\"",
    [GL_extension_GL_APPLE_vertex_program_evaluators] = "GL extension \"GL_APPLE_vertex_program_evaluators\"",
    [GL_extension_GL_ARB_ES2_compatibility] = "GL extension \"GL_ARB_ES2_compatibility\"",
    [GL_extension_GL_ARB_base_instance] = "GL extension \"GL_ARB_base_instance\"",
    [GL_extension_GL_ARB_bindless_texture] = "GL extension \"GL_ARB_bindless_texture\"",
    [GL_extension_GL_ARB_blend_func_extended] = "GL extension \"GL_ARB_blend_func_extended\"",
    [GL_extension_GL_ARB_buffer_storage] = "GL extension \"GL_ARB_buffer_storage\"",
    [GL_extension_GL_ARB_cl_event] = "GL extension \"GL_ARB_cl_event\"",
    [GL_extension_GL_ARB_clear_buffer_object] = "GL extension \"GL_ARB_clear_buffer_object\"",
    [GL_extension_GL_ARB_clear_texture] = "GL extension \"GL_ARB_clear_texture\"",
    [GL_extension_GL_ARB_color_buffer_float] = "GL extension \"GL_ARB_color_buffer_float\"",
    [GL_extension_GL_ARB_compute_shader] = "GL extension \"GL_ARB_compute_shader\"",
    [GL_extension_GL_ARB_compute_variable_group_size] = "GL extension \"GL_ARB_compute_variable_group_size\"",
    [GL_extension_GL_ARB_copy_buffer] = "GL extension \"GL_ARB_copy_buffer\"",
    [GL_extension_GL_ARB_copy_image] = "GL extension \"GL_ARB_copy_image\"",
    [GL_extension_GL_ARB_debug_output] = "GL extension \"GL_ARB_debug_output\"",
    [GL_extension_GL_ARB_draw_buffers] = "GL extension \"GL_ARB_draw_buffers\"",
    [GL_extension_GL_ARB_draw_buffers_blend] = "GL extension \"GL_ARB_draw_buffers_blend\"",
    [GL_extension_GL_ARB_draw_elements_base_vertex] = "GL extension \"GL_ARB_draw_elements_base_vertex\"",
    [GL_extension_GL_ARB_draw_indirect] = "GL extension \"GL_ARB_draw_indirect\"",
    [GL_extension_GL_ARB_draw_instanced] = "GL extension \"GL_ARB_draw_instanced\"",
    [GL_extension_GL_ARB_fragment_program] = "GL extension \"GL_ARB_fragment_program\"",
    [GL_extension_GL_ARB_framebuffer_no_attachments] = "GL extension \"GL_ARB_framebuffer_no_attachments\"",
    [GL_extension_GL_ARB_framebuffer_object] = "GL extension \"GL_ARB_framebuffer_object\"",
    [GL_extension_GL_ARB_geometry_shader4] = "GL extension \"GL_ARB_geometry_shader4\"",
    [GL_extension_GL_ARB_get_program_binary] = "GL extension \"GL_ARB_get_program_binary\"",
    [GL_extension_GL_ARB_gpu_shader_fp64] = "GL extension \"GL_ARB_gpu_shader_fp64\"",
    [GL_extension_GL_ARB_imaging] = "GL extension \"GL_ARB_imaging\"",
    [GL_extension_GL_ARB_indirect_parameters] = "GL extension \"GL_ARB_indirect_parameters\"",
    [GL_extension_GL_ARB_instanced_arrays] = "GL extension \"GL_ARB_instanced_arrays\"",
    [GL_extension_GL_ARB_internalformat_query2] = "GL extension \"GL_ARB_internalformat_query2\"",
    [GL_extension_GL_ARB_internalformat_query] = "GL extension \"GL_ARB_internalformat_query\"",
    [GL_extension_GL_ARB_invalidate_subdata] = "GL extension \"GL_ARB_invalidate_subdata\"",
    [GL_extension_GL_ARB_map_buffer_range] = "GL extension \"GL_ARB_map_buffer_range\"",
    [GL_extension_GL_ARB_matrix_palette] = "GL extension \"GL_ARB_matrix_palette\"",
    [GL_extension_GL_ARB_multi_bind] = "GL extension \"GL_ARB_multi_bind\"",
    [GL_extension_GL_ARB_multi_draw_indirect] = "GL extension \"GL_ARB_multi_draw_indirect\"",
    [GL_extension_GL_ARB_multisample] = "GL extension \"GL_ARB_multisample\"",
    [GL_extension_GL_ARB_multitexture] = "GL extension \"GL_ARB_multitexture\"",
    [GL_extension_GL_ARB_occlusion_query] = "GL extension \"GL_ARB_occlusion_query\"",
    [GL_extension_GL_ARB_point_parameters] = "GL extension \"GL_ARB_point_parameters\"",
    [GL_extension_GL_ARB_program_interface_query] = "GL extension \"GL_ARB_program_interface_query\"",
    [GL_extension_GL_ARB_provoking_vertex] = "GL extension \"GL_ARB_provoking_vertex\"",
    [GL_extension_GL_ARB_robustness] = "GL extension \"GL_ARB_robustness\"",
    [GL_extension_GL_ARB_sample_shading] = "GL extension \"GL_ARB_sample_shading\"",
    [GL_extension_GL_ARB_sampler_objects] = "GL extension \"GL_ARB_sampler_objects\"",
    [GL_extension_GL_ARB_separate_shader_objects] = "GL extension \"GL_ARB_separate_shader_objects\"",
    [GL_extension_GL_ARB_shader_atomic_counters] = "GL extension \"GL_ARB_shader_atomic_counters\"",
    [GL_extension_GL_ARB_shader_image_load_store] = "GL extension \"GL_ARB_shader_image_load_store\"",
    [GL_extension_GL_ARB_shader_objects] = "GL extension \"GL_ARB_shader_objects\"",
    [GL_extension_GL_ARB_shader_storage_buffer_object] = "GL extension \"GL_ARB_shader_storage_buffer_object\"",
    [GL_extension_GL_ARB_shader_subroutine] = "GL extension \"GL_ARB_shader_subroutine\"",
    [GL_extension_GL_ARB_shading_language_include] = "GL extension \"GL_ARB_shading_language_include\"",
    [GL_extension_GL_ARB_sparse_texture] = "GL extension \"GL_ARB_sparse_texture\"",
    [GL_extension_GL_ARB_sync] = "GL extension \"GL_ARB_sync\"",
    [GL_extension_GL_ARB_tessellation_shader] = "GL extension \"GL_ARB_tessellation_shader\"",
    [GL_extension_GL_ARB_texture_buffer_object] = "GL extension \"GL_ARB_texture_buffer_object\"",
    [GL_extension_GL_ARB_texture_buffer_range] = "GL extension \"GL_ARB_texture_buffer_range\"",
    [GL_extension_GL_ARB_texture_compression] = "GL extension \"GL_ARB_texture_compression\"",
    [GL_extension_GL_ARB_texture_multisample] = "GL extension \"GL_ARB_texture_multisample\"",
    [GL_extension_GL_ARB_texture_storage] = "GL extension \"GL_ARB_texture_storage\"",
    [GL_extension_GL_ARB_texture_storage_multisample] = "GL extension \"GL_ARB_texture_storage_multisample\"",
    [GL_extension_GL_ARB_texture_view] = "GL extension \"GL_ARB_texture_view\"",
    [GL_extension_GL_ARB_timer_query] = "GL extension \"GL_ARB_timer_query\"",
    [GL_extension_GL_ARB_transform_feedback2] = "GL extension \"GL_ARB_transform_feedback2\"",
    [GL_extension_GL_ARB_transform_feedback3] = "GL extension \"GL_ARB_transform_feedback3\"",
    [GL_extension_GL_ARB_transform_feedback_instanced] = "GL extension \"GL_ARB_transform_feedback_instanced\"",
    [GL_extension_GL_ARB_transpose_matrix] = "GL extension \"GL_ARB_transpose_matrix\"",
    [GL_extension_GL_ARB_uniform_buffer_object] = "GL extension \"GL_ARB_uniform_buffer_object\"",
    [GL_extension_GL_ARB_vertex_array_object] = "GL extension \"GL_ARB_vertex_array_object\"",
    [GL_extension_GL_ARB_vertex_attrib_64bit] = "GL extension \"GL_ARB_vertex_attrib_64bit\"",
    [GL_extension_GL_ARB_vertex_attrib_binding] = "GL extension \"GL_ARB_vertex_attrib_binding\"",
    [GL_extension_GL_ARB_vertex_blend] = "GL extension \"GL_ARB_vertex_blend\"",
    [GL_extension_GL_ARB_vertex_buffer_object] = "GL extension \"GL_ARB_vertex_buffer_object\"",
    [GL_extension_GL_ARB_vertex_program] = "GL extension \"GL_ARB_vertex_program\"",
    [GL_extension_GL_ARB_vertex_shader] = "GL extension \"GL_ARB_vertex_shader\"",
    [GL_extension_GL_ARB_vertex_type_2_10_10_10_rev] = "GL extension \"GL_ARB_vertex_type_2_10_10_10_rev\"",
    [GL_extension_GL_ARB_viewport_array] = "GL extension \"GL_ARB_viewport_array\"",
    [GL_extension_GL_ARB_window_pos] = "GL extension \"GL_ARB_window_pos\"",
    [GL_extension_GL_ATI_draw_buffers] = "GL extension \"GL_ATI_draw_buffers\"",
    [GL_extension_GL_ATI_element_array] = "GL extension \"GL_ATI_element_array\"",
    [GL_extension_GL_ATI_envmap_bumpmap] = "GL extension \"GL_ATI_envmap_bumpmap\"",
    [GL_extension_GL_ATI_fragment_shader] = "GL extension \"GL_ATI_fragment_shader\"",
    [GL_extension_GL_ATI_map_object_buffer] = "GL extension \"GL_ATI_map_object_buffer\"",
    [GL_extension_GL_ATI_pn_triangles] = "GL extension \"GL_ATI_pn_triangles\"",
    [GL_extension_GL_ATI_separate_stencil] = "GL extension \"GL_ATI_separate_stencil\"",
    [GL_extension_GL_ATI_vertex_array_object] = "GL extension \"GL_ATI_vertex_array_object\"",
    [GL_extension_GL_ATI_vertex_attrib_array_object] = "GL extension \"GL_ATI_vertex_attrib_array_object\"",
    [GL_extension_GL_ATI_vertex_streams] = "GL extension \"GL_ATI_vertex_streams\"",
    [GL_extension_GL_EXT_bindable_uniform] = "GL extension \"GL_EXT_bindable_uniform\"",
    [GL_extension_GL_EXT_blend_color] = "GL extension \"GL_EXT_blend_color\"",
    [GL_extension_GL_EXT_blend_equation_separate] = "GL extension \"GL_EXT_blend_equation_separate\"",
    [GL_extension_GL_EXT_blend_func_separate] = "GL extension \"GL_EXT_blend_func_separate\"",
    [GL_extension_GL_EXT_blend_minmax] = "GL extension \"GL_EXT_blend_minmax\"",
    [GL_extension_GL_EXT_color_subtable] = "GL extension \"GL_EXT_color_subtable\"",
    [GL_extension_GL_EXT_compiled_vertex_array] = "GL extension \"GL_EXT_compiled_vertex_array\"",
    [GL_extension_GL_EXT_convolution] = "GL extension \"GL_EXT_convolution\"",
    [GL_extension_GL_EXT_coordinate_frame] = "GL extension \"GL_EXT_coordinate_frame\"",
    [GL_extension_GL_EXT_copy_texture] = "GL extension \"GL_EXT_copy_texture\"",
    [GL_extension_GL_EXT_cull_vertex] = "GL extension \"GL_EXT_cull_vertex\"",
    [GL_extension_GL_EXT_debug_label] = "GL extension \"GL_EXT_debug_label\"",
    [GL_extension_GL_EXT_debug_marker] = "GL extension \"GL_EXT_debug_marker\"",
    [GL_extension_GL_EXT_depth_bounds_test] = "GL extension \"GL_EXT_depth_bounds_test\"",
    [GL_extension_GL_EXT_direct_state_access] = "GL extension \"GL_EXT_direct_state_access\"",
    [GL_extension_GL_EXT_discard_framebuffer] = "GL extension \"GL_EXT_discard_framebuffer\"",
    [GL_extension_GL_EXT_disjoint_timer_query] = "GL extension \"GL_EXT_disjoint_timer_query\"",
    [GL_extension_GL_EXT_draw_buffers2] = "GL extension \"GL_EXT_draw_buffers2\"",
    [GL_extension_GL_EXT_draw_buffers] = "GL extension \"GL_EXT_draw_buffers\"",
    [GL_extension_GL_EXT_draw_instanced] = "GL extension \"GL_EXT_draw_instanced\"",
    [GL_extension_GL_EXT_draw_range_elements] = "GL extension \"GL_EXT_draw_range_elements\"",
    [GL_extension_GL_EXT_fog_coord] = "GL extension \"GL_EXT_fog_coord\"",
    [GL_extension_GL_EXT_framebuffer_blit] = "GL extension \"GL_EXT_framebuffer_blit\"",
    [GL_extension_GL_EXT_framebuffer_multisample] = "GL extension \"GL_EXT_framebuffer_multisample\"",
    [GL_extension_GL_EXT_framebuffer_object] = "GL extension \"GL_EXT_framebuffer_object\"",
    [GL_extension_GL_EXT_geometry_shader4] = "GL extension \"GL_EXT_geometry_shader4\"",
    [GL_extension_GL_EXT_gpu_program_parameters] = "GL extension \"GL_EXT_gpu_program_parameters\"",
    [GL_extension_GL_EXT_gpu_shader4] = "GL extension \"GL_EXT_gpu_shader4\"",
    [GL_extension_GL_EXT_histogram] = "GL extension \"GL_EXT_histogram\"",
    [GL_extension_GL_EXT_index_func] = "GL extension \"GL_EXT_index_func\"",
    [GL_extension_GL_EXT_index_material] = "GL extension \"GL_EXT_index_material\"",
    [GL_extension_GL_EXT_instanced_arrays] = "GL extension \"GL_EXT_instanced_arrays\"",
    [GL_extension_GL_EXT_light_texture] = "GL extension \"GL_EXT_light_texture\"",
    [GL_extension_GL_EXT_map_buffer_range] = "GL extension \"GL_EXT_map_buffer_range\"",
    [GL_extension_GL_EXT_multi_draw_arrays] = "GL extension \"GL_EXT_multi_draw_arrays\"",
    [GL_extension_GL_EXT_multisample] = "GL extension \"GL_EXT_multisample\"",
    [GL_extension_GL_EXT_multisampled_render_to_texture] = "GL extension \"GL_EXT_multisampled_render_to_texture\"",
    [GL_extension_GL_EXT_multiview_draw_buffers] = "GL extension \"GL_EXT_multiview_draw_buffers\"",
    [GL_extension_GL_EXT_occlusion_query_boolean] = "GL extension \"GL_EXT_occlusion_query_boolean\"",
    [GL_extension_GL_EXT_paletted_texture] = "GL extension \"GL_EXT_paletted_texture\"",
    [GL_extension_GL_EXT_pixel_transform] = "GL extension \"GL_EXT_pixel_transform\"",
    [GL_extension_GL_EXT_point_parameters] = "GL extension \"GL_EXT_point_parameters\"",
    [GL_extension_GL_EXT_polygon_offset] = "GL extension \"GL_EXT_polygon_offset\"",
    [GL_extension_GL_EXT_provoking_vertex] = "GL extension \"GL_EXT_provoking_vertex\"",
    [GL_extension_GL_EXT_robustness] = "GL extension \"GL_EXT_robustness\"",
    [GL_extension_GL_EXT_secondary_color] = "GL extension \"GL_EXT_secondary_color\"",
    [GL_extension_GL_EXT_separate_shader_objects] = "GL extension \"GL_EXT_separate_shader_objects\"",
    [GL_extension_GL_EXT_shader_image_load_store] = "GL extension \"GL_EXT_shader_image_load_store\"",
    [GL_extension_GL_EXT_stencil_clear_tag] = "GL extension \"GL_EXT_stencil_clear_tag\"",
    [GL_extension_GL_EXT_stencil_two_side] = "GL extension \"GL_EXT_stencil_two_side\"",
    [GL_extension_GL_EXT_subtexture] = "GL extension \"GL_EXT_subtexture\"",
    [GL_extension_GL_EXT_texture3D] = "GL extension \"GL_EXT_texture3D\"",
    [GL_extension_GL_EXT_texture_buffer_object] = "GL extension \"GL_EXT_texture_buffer_object\"",
    [GL_extension_GL_EXT_texture_integer] = "GL extension \"GL_EXT_texture_integer\"",
    [GL_extension_GL_EXT_texture_object] = "GL extension \"GL_EXT_texture_object\"",
    [GL_extension_GL_EXT_texture_perturb_normal] = "GL extension \"GL_EXT_texture_perturb_normal\"",
    [GL_extension_GL_EXT_texture_storage] = "GL extension \"GL_EXT_texture_storage\"",
    [GL_extension_GL_EXT_timer_query] = "GL extension \"GL_EXT_timer_query\"",
    [GL_extension_GL_EXT_transform_feedback] = "GL extension \"GL_EXT_transform_feedback\"",
    [GL_extension_GL_EXT_vertex_array] = "GL extension \"GL_EXT_vertex_array\"",
    [GL_extension_GL_EXT_vertex_attrib_64bit] = "GL extension \"GL_EXT_vertex_attrib_64bit\"",
    [GL_extension_GL_EXT_vertex_shader] = "GL extension \"GL_EXT_vertex_shader\"",
    [GL_extension_GL_EXT_vertex_weighting] = "GL extension \"GL_EXT_vertex_weighting\"",
    [GL_extension_GL_EXT_x11_sync_object] = "GL extension \"GL_EXT_x11_sync_object\"",
    [GL_extension_GL_GREMEDY_frame_terminator] = "GL extension \"GL_GREMEDY_frame_terminator\"",
    [GL_extension_GL_GREMEDY_string_marker] = "GL extension \"GL_GREMEDY_string_marker\"",
    [GL_extension_GL_HP_image_transform] = "GL extension \"GL_HP_image_transform\"",
    [GL_extension_GL_IBM_multimode_draw_arrays] = "GL extension \"GL_IBM_multimode_draw_arrays\"",
    [GL_extension_GL_IBM_static_data] = "GL extension \"GL_IBM_static_data\"",
    [GL_extension_GL_IBM_vertex_array_lists] = "GL extension \"GL_IBM_vertex_array_lists\"",
    [GL_extension_GL_IMG_multisampled_render_to_texture] = "GL extension \"GL_IMG_multisampled_render_to_texture\"",
    [GL_extension_GL_IMG_user_clip_plane] = "GL extension \"GL_IMG_user_clip_plane\"",
    [GL_extension_GL_INGR_blend_func_separate] = "GL extension \"GL_INGR_blend_func_separate\"",
    [GL_extension_GL_INTEL_map_texture] = "GL extension \"GL_INTEL_map_texture\"",
    [GL_extension_GL_INTEL_parallel_arrays] = "GL extension \"GL_INTEL_parallel_arrays\"",
    [GL_extension_GL_INTEL_performance_query] = "GL extension \"GL_INTEL_performance_query\"",
    [GL_extension_GL_KHR_blend_equation_advanced] = "GL extension \"GL_KHR_blend_equation_advanced\"",
    [GL_extension_GL_KHR_debug] = "GL extension \"GL_KHR_debug\"",
    [GL_extension_GL_MESA_resize_buffers] = "GL extension \"GL_MESA_resize_buffers\"",
    [GL_extension_GL_MESA_window_pos] = "GL extension \"GL_MESA_window_pos\"",
    [GL_extension_GL_NVX_conditional_render] = "GL extension \"GL_NVX_conditional_render\"",
    [GL_extension_GL_NV_bindless_multi_draw_indirect] = "GL extension \"GL_NV_bindless_multi_draw_indirect\"",
    [GL_extension_GL_NV_bindless_texture] = "GL extension \"GL_NV_bindless_texture\"",
    [GL_extension_GL_NV_blend_equation_advanced] = "GL extension \"GL_NV_blend_equation_advanced\"",
    [GL_extension_GL_NV_conditional_render] = "GL extension \"GL_NV_conditional_render\"",
    [GL_extension_GL_NV_copy_buffer] = "GL extension \"GL_NV_copy_buffer\"",
    [GL_extension_GL_NV_copy_image] = "GL extension \"GL_NV_copy_image\"",
    [GL_extension_GL_NV_coverage_sample] = "GL extension \"GL_NV_coverage_sample\"",
    [GL_extension_GL_NV_depth_buffer_float] = "GL extension \"GL_NV_depth_buffer_float\"",
    [GL_extension_GL_NV_draw_buffers] = "GL extension \"GL_NV_draw_buffers\"",
    [GL_extension_GL_NV_draw_instanced] = "GL extension \"GL_NV_draw_instanced\"",
    [GL_extension_GL_NV_draw_texture] = "GL extension \"GL_NV_draw_texture\"",
    [GL_extension_GL_NV_evaluators] = "GL extension \"GL_NV_evaluators\"",
    [GL_extension_GL_NV_explicit_multisample] = "GL extension \"GL_NV_explicit_multisample\"",
    [GL_extension_GL_NV_fence] = "GL extension \"GL_NV_fence\"",
    [GL_extension_GL_NV_fragment_program] = "GL extension \"GL_NV_fragment_program\"",
    [GL_extension_GL_NV_framebuffer_blit] = "GL extension \"GL_NV_framebuffer_blit\"",
    [GL_extension_GL_NV_framebuffer_multisample] = "GL extension \"GL_NV_framebuffer_multisample\"",
    [GL_extension_GL_NV_framebuffer_multisample_coverage] = "GL extension \"GL_NV_framebuffer_multisample_coverage\"",
    [GL_extension_GL_NV_geometry_program4] = "GL extension \"GL_NV_geometry_program4\"",
    [GL_extension_GL_NV_gpu_program4] = "GL extension \"GL_NV_gpu_program4\"",
    [GL_extension_GL_NV_gpu_program5] = "GL extension \"GL_NV_gpu_program5\"",
    [GL_extension_GL_NV_gpu_shader5] = "GL extension \"GL_NV_gpu_shader5\"",
    [GL_extension_GL_NV_half_float] = "GL extension \"GL_NV_half_float\"",
    [GL_extension_GL_NV_instanced_arrays] = "GL extension \"GL_NV_instanced_arrays\"",
    [GL_extension_GL_NV_non_square_matrices] = "GL extension \"GL_NV_non_square_matrices\"",
    [GL_extension_GL_NV_occlusion_query] = "GL extension \"GL_NV_occlusion_query\"",
    [GL_extension_GL_NV_parameter_buffer_object] = "GL extension \"GL_NV_parameter_buffer_object\"",
    [GL_extension_GL_NV_path_rendering] = "GL extension \"GL_NV_path_rendering\"",
    [GL_extension_GL_NV_pixel_data_range] = "GL extension \"GL_NV_pixel_data_range\"",
    [GL_extension_GL_NV_point_sprite] = "GL extension \"GL_NV_point_sprite\"",
    [GL_extension_GL_NV_present_video] = "GL extension \"GL_NV_present_video\"",
    [GL_extension_GL_NV_primitive_restart] = "GL extension \"GL_NV_primitive_restart\"",
    [GL_extension_GL_NV_read_buffer] = "GL extension \"GL_NV_read_buffer\"",
    [GL_extension_GL_NV_register_combiners2] = "GL extension \"GL_NV_register_combiners2\"",
    [GL_extension_GL_NV_register_combiners] = "GL extension \"GL_NV_register_combiners\"",
    [GL_extension_GL_NV_shader_buffer_load] = "GL extension \"GL_NV_shader_buffer_load\"",
    [GL_extension_GL_NV_texture_barrier] = "GL extension \"GL_NV_texture_barrier\"",
    [GL_extension_GL_NV_texture_multisample] = "GL extension \"GL_NV_texture_multisample\"",
    [GL_extension_GL_NV_transform_feedback2] = "GL extension \"GL_NV_transform_feedback2\"",
    [GL_extension_GL_NV_transform_feedback] = "GL extension \"GL_NV_transform_feedback\"",
    [GL_extension_GL_NV_vdpau_interop] = "GL extension \"GL_NV_vdpau_interop\"",
    [GL_extension_GL_NV_vertex_array_range] = "GL extension \"GL_NV_vertex_array_range\"",
    [GL_extension_GL_NV_vertex_attrib_integer_64bit] = "GL extension \"GL_NV_vertex_attrib_integer_64bit\"",
    [GL_extension_GL_NV_vertex_buffer_unified_memory] = "GL extension \"GL_NV_vertex_buffer_unified_memory\"",
    [GL_extension_GL_NV_vertex_program4] = "GL extension \"GL_NV_vertex_program4\"",
    [GL_extension_GL_NV_vertex_program] = "GL extension \"GL_NV_vertex_program\"",
    [GL_extension_GL_NV_video_capture] = "GL extension \"GL_NV_video_capture\"",
    [GL_extension_GL_OES_EGL_image] = "GL extension \"GL_OES_EGL_image\"",
    [GL_extension_GL_OES_blend_equation_separate] = "GL extension \"GL_OES_blend_equation_separate\"",
    [GL_extension_GL_OES_blend_func_separate] = "GL extension \"GL_OES_blend_func_separate\"",
    [GL_extension_GL_OES_blend_subtract] = "GL extension \"GL_OES_blend_subtract\"",
    [GL_extension_GL_OES_byte_coordinates] = "GL extension \"GL_OES_byte_coordinates\"",
    [GL_extension_GL_OES_draw_texture] = "GL extension \"GL_OES_draw_texture\"",
    [GL_extension_GL_OES_fixed_point] = "GL extension \"GL_OES_fixed_point\"",
    [GL_extension_GL_OES_framebuffer_object] = "GL extension \"GL_OES_framebuffer_object\"",
    [GL_extension_GL_OES_get_program_binary] = "GL extension \"GL_OES_get_program_binary\"",
    [GL_extension_GL_OES_mapbuffer] = "GL extension \"GL_OES_mapbuffer\"",
    [GL_extension_GL_OES_matrix_palette] = "GL extension \"GL_OES_matrix_palette\"",
    [GL_extension_GL_OES_point_size_array] = "GL extension \"GL_OES_point_size_array\"",
    [GL_extension_GL_OES_query_matrix] = "GL extension \"GL_OES_query_matrix\"",
    [GL_extension_GL_OES_sample_shading] = "GL extension \"GL_OES_sample_shading\"",
    [GL_extension_GL_OES_single_precision] = "GL extension \"GL_OES_single_precision\"",
    [GL_extension_GL_OES_texture_3D] = "GL extension \"GL_OES_texture_3D\"",
    [GL_extension_GL_OES_texture_cube_map] = "GL extension \"GL_OES_texture_cube_map\"",
    [GL_extension_GL_OES_texture_storage_multisample_2d_array] = "GL extension \"GL_OES_texture_storage_multisample_2d_array\"",
    [GL_extension_GL_OES_vertex_array_object] = "GL extension \"GL_OES_vertex_array_object\"",
    [GL_extension_GL_PGI_misc_hints] = "GL extension \"GL_PGI_misc_hints\"",
    [GL_extension_GL_QCOM_alpha_test] = "GL extension \"GL_QCOM_alpha_test\"",
    [GL_extension_GL_QCOM_driver_control] = "GL extension \"GL_QCOM_driver_control\"",
    [GL_extension_GL_QCOM_extended_get2] = "GL extension \"GL_QCOM_extended_get2\"",
    [GL_extension_GL_QCOM_extended_get] = "GL extension \"GL_QCOM_extended_get\"",
    [GL_extension_GL_QCOM_tiled_rendering] = "GL extension \"GL_QCOM_tiled_rendering\"",
    [GL_extension_GL_SGIS_detail_texture] = "GL extension \"GL_SGIS_detail_texture\"",
    [GL_extension_GL_SGIS_fog_function] = "GL extension \"GL_SGIS_fog_function\"",
    [GL_extension_GL_SGIS_multisample] = "GL extension \"GL_SGIS_multisample\"",
    [GL_extension_GL_SGIS_pixel_texture] = "GL extension \"GL_SGIS_pixel_texture\"",
    [GL_extension_GL_SGIS_point_parameters] = "GL extension \"GL_SGIS_point_parameters\"",
    [GL_extension_GL_SGIS_sharpen_texture] = "GL extension \"GL_SGIS_sharpen_texture\"",
    [GL_extension_GL_SGIS_texture4D] = "GL extension \"GL_SGIS_texture4D\"",
    [GL_extension_GL_SGIS_texture_color_mask] = "GL extension \"GL_SGIS_texture_color_mask\"",
    [GL_extension_GL_SGIS_texture_filter4] = "GL extension \"GL_SGIS_texture_filter4\"",
    [GL_extension_GL_SGIX_async] = "GL extension \"GL_SGIX_async\"",
    [GL_extension_GL_SGIX_flush_raster] = "GL extension \"GL_SGIX_flush_raster\"",
    [GL_extension_GL_SGIX_fragment_lighting] = "GL extension \"GL_SGIX_fragment_lighting\"",
    [GL_extension_GL_SGIX_framezoom] = "GL extension \"GL_SGIX_framezoom\"",
    [GL_extension_GL_SGIX_igloo_interface] = "GL extension \"GL_SGIX_igloo_interface\"",
    [GL_extension_GL_SGIX_instruments] = "GL extension \"GL_SGIX_instruments\"",
    [GL_extension_GL_SGIX_list_priority] = "GL extension \"GL_SGIX_list_priority\"",
    [GL_extension_GL_SGIX_pixel_texture] = "GL extension \"GL_SGIX_pixel_texture\"",
    [GL_extension_GL_SGIX_polynomial_ffd] = "GL extension \"GL_SGIX_polynomial_ffd\"",
    [GL_extension_GL_SGIX_reference_plane] = "GL extension \"GL_SGIX_reference_plane\"",
    [GL_extension_GL_SGIX_sprite] = "GL extension \"GL_SGIX_sprite\"",
    [GL_extension_GL_SGIX_tag_sample_buffer] = "GL extension \"GL_SGIX_tag_sample_buffer\"",
    [GL_extension_GL_SGI_color_table] = "GL extension \"GL_SGI_color_table\"",
    [GL_extension_GL_SUNX_constant_data] = "GL extension \"GL_SUNX_constant_data\"",
    [GL_extension_GL_SUN_global_alpha] = "GL extension \"GL_SUN_global_alpha\"",
    [GL_extension_GL_SUN_mesh_array] = "GL extension \"GL_SUN_mesh_array\"",
    [GL_extension_GL_SUN_triangle_list] = "GL extension \"GL_SUN_triangle_list\"",
    [GL_extension_GL_SUN_vertex] = "GL extension \"GL_SUN_vertex\"",
    [OpenGL_ES_1_0] = "OpenGL ES 1.0",
    [OpenGL_ES_2_0] = "OpenGL ES 2.0",
    [OpenGL_ES_3_0] = "OpenGL ES 3.0",
    [OpenGL_ES_3_1] = "OpenGL ES 3.1",
    [always_present] = "always present",
d4306 1
d4347 2
d4351 2
d4362 2
d4366 2
d4373 1
d4377 1
d4380 1
d4383 1
d4389 1
d4414 1
d4416 1
d4418 4
d4431 1
d4495 2
d4522 2
d4550 1
d4552 1
d4554 1
d4581 1
d4583 1
d4589 1
d4606 1
d4608 1
d4610 1
d4617 2
d4620 3
d4626 4
d4635 1
d4637 3
d4663 1
d4691 1
d4707 1
d4710 1
d4726 1
d4733 3
d4747 1
d4757 4
d4765 2
d4772 1
d4775 3
d4786 2
d4820 1
d4827 3
d4895 1
d4926 1
d4948 1
d4967 2
d5014 1
d5066 1
d5070 1
d5072 1
d5080 1
d5102 1
d5117 1
d5120 1
d5144 1
d5194 2
d5198 1
d5200 1
d5202 1
d5204 1
d5212 1
d5290 1
d5299 4
d5321 2
d5324 2
d5336 1
d5362 1
d5365 1
d5373 1
d5375 1
d5377 1
d5379 1
d5381 1
d5383 1
d5385 1
d5389 1
d5394 3
d5421 2
d5427 1
d5459 1
d5461 1
d5463 1
d5465 1
d5467 1
d5469 1
d5471 1
d5473 1
d5475 1
d5477 1
d5479 1
d5481 1
d5483 1
d5485 1
d5487 1
d5489 1
d5492 2
d5496 2
d5499 1
d5546 2
d5555 1
d5559 3
d5591 1
d5630 1
d5681 1
d5683 1
d5707 2
d5710 1
d5716 3
d5753 1
d5756 1
d5760 2
d5765 1
d5768 1
d5894 1
d5896 3
d5900 1
d5903 3
d5907 2
d5910 2
d5917 1
d5931 1
d5933 1
d5991 2
d5999 2
d6003 1
d6062 1
d6064 1
d6078 2
d6126 1
d6296 1
d6302 1
d6305 1
d6358 1
a6367 1
   "glSampleCoverageOES\0"
d6378 2
d6381 2
d6393 1
d6395 1
d6397 1
d6463 1
d6478 4
d6484 1
d6508 1
d6510 2
d6629 1
d6632 1
d6635 1
d6663 1
d6665 1
d6667 1
d6681 1
d6683 1
d6685 1
d6687 1
d6689 1
d6691 1
d6695 1
d6697 1
d6699 1
d6701 1
d6703 1
d6706 1
d6708 1
d6710 1
d6713 2
d6717 2
d6840 1
d6916 4
d6921 1
d6924 1
d6943 2
d7230 1
d7232 1
d7234 1
d7382 4
d7502 4
d7534 4
d7562 4
d7606 4
d7718 4
d7734 4
d7870 4
d7894 4
d7914 4
d7958 8
d7994 4
d8034 4
d8070 8
d8082 4
d8102 4
d8118 4
d8126 12
d8142 4
d8162 4
d8250 4
d8270 4
d8282 4
d8290 4
d8334 4
d8346 4
d8382 4
d8410 4
d8434 4
d8486 4
d8510 12
d8534 4
d8554 4
d8570 4
d8578 8
d8594 4
d8602 4
d8763 8
a8770 1
    epoxy_print_failure_reasons(name, enum_strings, (const int *)providers);
d8774 2
a8775 2
static void *
gl_single_resolver(enum gl_provider provider, uint16_t entrypoint_offset) __attribute__((noinline));
d8811 1
a8812 1
        GL_extension_GL_ARB_separate_shader_objects,
d8840 1
a8841 1
        Desktop_OpenGL_1_3,
d8861 1
a8862 1
        Desktop_OpenGL_1_3,
d9007 1
a9008 1
        Desktop_OpenGL_2_0,
d9024 1
a9025 1
        Desktop_OpenGL_2_0,
d9110 1
a9111 1
        Desktop_OpenGL_1_5,
d9129 1
a9130 1
        Desktop_OpenGL_1_5,
d9146 1
a9147 1
        GL_extension_GL_EXT_disjoint_timer_query,
d9162 1
a9163 1
        Desktop_OpenGL_4_0,
d9250 1
a9251 1
        Desktop_OpenGL_2_0,
d9269 1
a9270 1
        Desktop_OpenGL_2_0,
d9286 1
a9287 1
        Desktop_OpenGL_1_5,
d9307 1
a9308 1
        Desktop_OpenGL_1_5,
d9327 2
d9337 2
d9352 2
d9362 2
d9376 2
d9386 2
d9431 2
d9441 2
d9456 2
d9466 2
d9480 2
d9490 2
d9502 1
a9503 1
        Desktop_OpenGL_4_4,
d9518 1
a9519 1
        Desktop_OpenGL_4_4,
a9633 1
        OpenGL_ES_3_1,
d9636 1
d9658 1
a9659 1
        Desktop_OpenGL_4_4,
d9698 1
a9699 1
        GL_extension_GL_ARB_fragment_program,
d9717 1
a9718 1
        GL_extension_GL_ARB_fragment_program,
d9735 1
a9736 1
        GL_extension_GL_ARB_separate_shader_objects,
d9788 1
a9789 1
        Desktop_OpenGL_3_3,
d9806 1
a9807 1
        Desktop_OpenGL_4_4,
d9829 1
a9830 1
        OpenGL_ES_1_0,
d9850 1
a9851 1
        OpenGL_ES_1_0,
d9864 16
d9883 1
a9883 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 1659 /* glBindTextureUnitParameterEXT */);
d9890 1
a9891 1
        Desktop_OpenGL_4_4,
d9895 2
a9896 2
        1689 /* "glBindTextures" */,
        1689 /* "glBindTextures" */,
d9898 1
a9898 1
    return gl_provider_resolver(entrypoint_strings + 1689 /* "glBindTextures" */,
d9907 1
a9908 1
        GL_extension_GL_ARB_transform_feedback2,
d9912 3
a9914 3
        1704 /* "glBindTransformFeedback" */,
        1704 /* "glBindTransformFeedback" */,
        1704 /* "glBindTransformFeedback" */,
d9916 1
a9916 1
    return gl_provider_resolver(entrypoint_strings + 1704 /* "glBindTransformFeedback" */,
d9923 1
a9923 1
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback2, 1728 /* glBindTransformFeedbackNV */);
d9931 1
a9932 1
        GL_extension_GL_ARB_vertex_array_object,
d9938 5
a9942 5
        1754 /* "glBindVertexArray" */,
        1754 /* "glBindVertexArray" */,
        1754 /* "glBindVertexArray" */,
        1772 /* "glBindVertexArrayAPPLE" */,
        1795 /* "glBindVertexArrayOES" */,
d9944 1
a9944 1
    return gl_provider_resolver(entrypoint_strings + 1754 /* "glBindVertexArray" */,
d9954 1
a9955 1
        GL_extension_GL_ARB_vertex_array_object,
d9959 4
a9962 4
        1772 /* "glBindVertexArrayAPPLE" */,
        1754 /* "glBindVertexArray" */,
        1754 /* "glBindVertexArray" */,
        1754 /* "glBindVertexArray" */,
d9964 1
a9964 1
    return gl_provider_resolver(entrypoint_strings + 1772 /* "glBindVertexArrayAPPLE" */,
d9974 1
a9975 1
        GL_extension_GL_ARB_vertex_array_object,
d9979 4
a9982 4
        1795 /* "glBindVertexArrayOES" */,
        1754 /* "glBindVertexArray" */,
        1754 /* "glBindVertexArray" */,
        1754 /* "glBindVertexArray" */,
d9984 1
a9984 1
    return gl_provider_resolver(entrypoint_strings + 1795 /* "glBindVertexArrayOES" */,
d9992 1
a9993 1
        Desktop_OpenGL_4_3,
d9998 3
a10000 3
        1816 /* "glBindVertexBuffer" */,
        1816 /* "glBindVertexBuffer" */,
        1816 /* "glBindVertexBuffer" */,
d10002 1
a10002 1
    return gl_provider_resolver(entrypoint_strings + 1816 /* "glBindVertexBuffer" */,
d10010 1
a10011 1
        Desktop_OpenGL_4_4,
d10015 2
a10016 2
        1835 /* "glBindVertexBuffers" */,
        1835 /* "glBindVertexBuffers" */,
d10018 1
a10018 1
    return gl_provider_resolver(entrypoint_strings + 1835 /* "glBindVertexBuffers" */,
d10025 1
a10025 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 1855 /* glBindVertexShaderEXT */);
d10031 1
a10031 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 1877 /* glBindVideoCaptureStreamBufferNV */);
d10037 1
a10037 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 1910 /* glBindVideoCaptureStreamTextureNV */);
d10043 1
a10043 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 1944 /* glBinormal3bEXT */);
d10049 1
a10049 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 1960 /* glBinormal3bvEXT */);
d10055 1
a10055 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 1977 /* glBinormal3dEXT */);
d10061 1
a10061 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 1993 /* glBinormal3dvEXT */);
d10067 1
a10067 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2010 /* glBinormal3fEXT */);
d10073 1
a10073 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2026 /* glBinormal3fvEXT */);
d10079 1
a10079 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2043 /* glBinormal3iEXT */);
d10085 1
a10085 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2059 /* glBinormal3ivEXT */);
d10091 1
a10091 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2076 /* glBinormal3sEXT */);
d10097 1
a10097 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2092 /* glBinormal3svEXT */);
d10103 1
a10103 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 2109 /* glBinormalPointerEXT */);
d10109 1
a10109 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 2130 /* glBitmap */);
d10115 1
a10115 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 2139 /* glBitmapxOES */);
d10121 1
a10121 1
    return gl_single_resolver(GL_extension_GL_KHR_blend_equation_advanced, 2152 /* glBlendBarrierKHR */);
d10127 1
a10127 1
    return gl_single_resolver(GL_extension_GL_NV_blend_equation_advanced, 2170 /* glBlendBarrierNV */);
d10134 1
a10135 1
        Desktop_OpenGL_1_4,
d10141 4
a10144 4
        2187 /* "glBlendColor" */,
        2187 /* "glBlendColor" */,
        2187 /* "glBlendColor" */,
        2200 /* "glBlendColorEXT" */,
d10146 1
a10146 1
    return gl_provider_resolver(entrypoint_strings + 2187 /* "glBlendColor" */,
d10155 1
a10156 1
        Desktop_OpenGL_1_4,
d10161 4
a10164 4
        2200 /* "glBlendColorEXT" */,
        2187 /* "glBlendColor" */,
        2187 /* "glBlendColor" */,
        2187 /* "glBlendColor" */,
d10166 1
a10166 1
    return gl_provider_resolver(entrypoint_strings + 2200 /* "glBlendColorEXT" */,
d10173 1
a10173 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 2216 /* glBlendColorxOES */);
d10180 1
a10181 1
        Desktop_OpenGL_1_4,
d10187 4
a10190 4
        2233 /* "glBlendEquation" */,
        2233 /* "glBlendEquation" */,
        2233 /* "glBlendEquation" */,
        2249 /* "glBlendEquationEXT" */,
d10192 1
a10192 1
    return gl_provider_resolver(entrypoint_strings + 2233 /* "glBlendEquation" */,
d10201 1
a10202 1
        Desktop_OpenGL_1_4,
d10207 4
a10210 4
        2249 /* "glBlendEquationEXT" */,
        2233 /* "glBlendEquation" */,
        2233 /* "glBlendEquation" */,
        2233 /* "glBlendEquation" */,
d10212 1
a10212 1
    return gl_provider_resolver(entrypoint_strings + 2249 /* "glBlendEquationEXT" */,
d10223 2
d10228 5
a10232 3
        2268 /* "glBlendEquationIndexedAMD" */,
        2478 /* "glBlendEquationi" */,
        2495 /* "glBlendEquationiARB" */,
d10234 1
a10234 1
    return gl_provider_resolver(entrypoint_strings + 2268 /* "glBlendEquationIndexedAMD" */,
d10241 1
a10241 1
    return gl_single_resolver(GL_extension_GL_OES_blend_subtract, 2294 /* glBlendEquationOES */);
d10248 1
a10249 1
        Desktop_OpenGL_2_0,
d10254 3
a10256 3
        2313 /* "glBlendEquationSeparate" */,
        2313 /* "glBlendEquationSeparate" */,
        2337 /* "glBlendEquationSeparateEXT" */,
d10258 1
a10258 1
    return gl_provider_resolver(entrypoint_strings + 2313 /* "glBlendEquationSeparate" */,
d10267 1
a10268 1
        Desktop_OpenGL_2_0,
d10272 3
a10274 3
        2337 /* "glBlendEquationSeparateEXT" */,
        2313 /* "glBlendEquationSeparate" */,
        2313 /* "glBlendEquationSeparate" */,
d10276 1
a10276 1
    return gl_provider_resolver(entrypoint_strings + 2337 /* "glBlendEquationSeparateEXT" */,
d10287 2
d10292 5
a10296 3
        2364 /* "glBlendEquationSeparateIndexedAMD" */,
        2425 /* "glBlendEquationSeparatei" */,
        2450 /* "glBlendEquationSeparateiARB" */,
d10298 1
a10298 1
    return gl_provider_resolver(entrypoint_strings + 2364 /* "glBlendEquationSeparateIndexedAMD" */,
d10305 1
a10305 1
    return gl_single_resolver(GL_extension_GL_OES_blend_equation_separate, 2398 /* glBlendEquationSeparateOES */);
d10315 2
d10320 5
a10324 3
        2425 /* "glBlendEquationSeparatei" */,
        2364 /* "glBlendEquationSeparateIndexedAMD" */,
        2450 /* "glBlendEquationSeparateiARB" */,
d10326 1
a10326 1
    return gl_provider_resolver(entrypoint_strings + 2425 /* "glBlendEquationSeparatei" */,
d10337 46
d10386 5
a10390 3
        2450 /* "glBlendEquationSeparateiARB" */,
        2364 /* "glBlendEquationSeparateIndexedAMD" */,
        2425 /* "glBlendEquationSeparatei" */,
d10392 1
a10392 1
    return gl_provider_resolver(entrypoint_strings + 2450 /* "glBlendEquationSeparateiARB" */,
d10403 2
d10408 5
a10412 3
        2478 /* "glBlendEquationi" */,
        2268 /* "glBlendEquationIndexedAMD" */,
        2495 /* "glBlendEquationiARB" */,
d10414 1
a10414 1
    return gl_provider_resolver(entrypoint_strings + 2478 /* "glBlendEquationi" */,
d10425 2
d10430 5
a10434 3
        2495 /* "glBlendEquationiARB" */,
        2268 /* "glBlendEquationIndexedAMD" */,
        2478 /* "glBlendEquationi" */,
d10436 45
a10480 1
    return gl_provider_resolver(entrypoint_strings + 2495 /* "glBlendEquationiARB" */,
d10494 3
a10496 3
        2515 /* "glBlendFunc" */,
        2515 /* "glBlendFunc" */,
        2515 /* "glBlendFunc" */,
d10498 1
a10498 1
    return gl_provider_resolver(entrypoint_strings + 2515 /* "glBlendFunc" */,
d10509 2
d10514 5
a10518 3
        2527 /* "glBlendFuncIndexedAMD" */,
        2714 /* "glBlendFunci" */,
        2727 /* "glBlendFunciARB" */,
d10520 1
a10520 1
    return gl_provider_resolver(entrypoint_strings + 2527 /* "glBlendFuncIndexedAMD" */,
d10535 4
a10538 4
        2549 /* "glBlendFuncSeparate" */,
        2549 /* "glBlendFuncSeparate" */,
        2569 /* "glBlendFuncSeparateEXT" */,
        2592 /* "glBlendFuncSeparateINGR" */,
d10540 1
a10540 1
    return gl_provider_resolver(entrypoint_strings + 2549 /* "glBlendFuncSeparate" */,
d10555 4
a10558 4
        2569 /* "glBlendFuncSeparateEXT" */,
        2549 /* "glBlendFuncSeparate" */,
        2549 /* "glBlendFuncSeparate" */,
        2592 /* "glBlendFuncSeparateINGR" */,
d10560 1
a10560 1
    return gl_provider_resolver(entrypoint_strings + 2569 /* "glBlendFuncSeparateEXT" */,
d10575 4
a10578 4
        2592 /* "glBlendFuncSeparateINGR" */,
        2549 /* "glBlendFuncSeparate" */,
        2549 /* "glBlendFuncSeparate" */,
        2569 /* "glBlendFuncSeparateEXT" */,
d10580 1
a10580 1
    return gl_provider_resolver(entrypoint_strings + 2592 /* "glBlendFuncSeparateINGR" */,
d10591 2
d10596 5
a10600 3
        2616 /* "glBlendFuncSeparateIndexedAMD" */,
        2669 /* "glBlendFuncSeparatei" */,
        2690 /* "glBlendFuncSeparateiARB" */,
d10602 1
a10602 1
    return gl_provider_resolver(entrypoint_strings + 2616 /* "glBlendFuncSeparateIndexedAMD" */,
d10609 1
a10609 1
    return gl_single_resolver(GL_extension_GL_OES_blend_func_separate, 2646 /* glBlendFuncSeparateOES */);
d10619 2
d10624 5
a10628 3
        2669 /* "glBlendFuncSeparatei" */,
        2616 /* "glBlendFuncSeparateIndexedAMD" */,
        2690 /* "glBlendFuncSeparateiARB" */,
d10630 1
a10630 1
    return gl_provider_resolver(entrypoint_strings + 2669 /* "glBlendFuncSeparatei" */,
d10641 46
d10690 5
a10694 3
        2690 /* "glBlendFuncSeparateiARB" */,
        2616 /* "glBlendFuncSeparateIndexedAMD" */,
        2669 /* "glBlendFuncSeparatei" */,
d10696 1
a10696 1
    return gl_provider_resolver(entrypoint_strings + 2690 /* "glBlendFuncSeparateiARB" */,
d10707 2
d10712 5
a10716 3
        2714 /* "glBlendFunci" */,
        2527 /* "glBlendFuncIndexedAMD" */,
        2727 /* "glBlendFunciARB" */,
d10718 1
a10718 1
    return gl_provider_resolver(entrypoint_strings + 2714 /* "glBlendFunci" */,
d10729 46
d10778 5
a10782 3
        2727 /* "glBlendFunciARB" */,
        2527 /* "glBlendFuncIndexedAMD" */,
        2714 /* "glBlendFunci" */,
d10784 1
a10784 1
    return gl_provider_resolver(entrypoint_strings + 2727 /* "glBlendFunciARB" */,
d10791 1
a10791 1
    return gl_single_resolver(GL_extension_GL_NV_blend_equation_advanced, 2743 /* glBlendParameteriNV */);
d10799 1
a10800 1
        GL_extension_GL_ARB_framebuffer_object,
d10806 5
a10810 5
        2763 /* "glBlitFramebuffer" */,
        2763 /* "glBlitFramebuffer" */,
        2763 /* "glBlitFramebuffer" */,
        2804 /* "glBlitFramebufferEXT" */,
        2825 /* "glBlitFramebufferNV" */,
d10812 1
a10812 1
    return gl_provider_resolver(entrypoint_strings + 2763 /* "glBlitFramebuffer" */,
d10819 1
a10819 1
    return gl_single_resolver(GL_extension_GL_ANGLE_framebuffer_blit, 2781 /* glBlitFramebufferANGLE */);
d10828 1
a10829 1
        GL_extension_GL_ARB_framebuffer_object,
d10834 5
a10838 5
        2804 /* "glBlitFramebufferEXT" */,
        2763 /* "glBlitFramebuffer" */,
        2763 /* "glBlitFramebuffer" */,
        2763 /* "glBlitFramebuffer" */,
        2825 /* "glBlitFramebufferNV" */,
d10840 1
a10840 1
    return gl_provider_resolver(entrypoint_strings + 2804 /* "glBlitFramebufferEXT" */,
d10850 1
a10851 1
        GL_extension_GL_ARB_framebuffer_object,
d10856 21
a10876 5
        2825 /* "glBlitFramebufferNV" */,
        2763 /* "glBlitFramebuffer" */,
        2763 /* "glBlitFramebuffer" */,
        2763 /* "glBlitFramebuffer" */,
        2804 /* "glBlitFramebufferEXT" */,
d10878 1
a10878 1
    return gl_provider_resolver(entrypoint_strings + 2825 /* "glBlitFramebufferNV" */,
d10885 1
a10885 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 2845 /* glBufferAddressRangeNV */);
d10892 1
a10893 1
        Desktop_OpenGL_1_5,
d10899 4
a10902 4
        2868 /* "glBufferData" */,
        2868 /* "glBufferData" */,
        2868 /* "glBufferData" */,
        2881 /* "glBufferDataARB" */,
d10904 1
a10904 1
    return gl_provider_resolver(entrypoint_strings + 2868 /* "glBufferData" */,
d10913 1
a10914 1
        Desktop_OpenGL_1_5,
d10919 4
a10922 4
        2881 /* "glBufferDataARB" */,
        2868 /* "glBufferData" */,
        2868 /* "glBufferData" */,
        2868 /* "glBufferData" */,
d10924 1
a10924 1
    return gl_provider_resolver(entrypoint_strings + 2881 /* "glBufferDataARB" */,
d10928 6
d10937 1
a10937 1
    return gl_single_resolver(GL_extension_GL_APPLE_flush_buffer_range, 2897 /* glBufferParameteriAPPLE */);
d10944 1
d10946 17
d10964 1
d10968 3
a10970 2
        2921 /* "glBufferStorage" */,
        2921 /* "glBufferStorage" */,
d10972 1
a10972 1
    return gl_provider_resolver(entrypoint_strings + 2921 /* "glBufferStorage" */,
d10980 1
a10981 1
        Desktop_OpenGL_1_5,
d10987 4
a10990 4
        2937 /* "glBufferSubData" */,
        2937 /* "glBufferSubData" */,
        2937 /* "glBufferSubData" */,
        2953 /* "glBufferSubDataARB" */,
d10992 1
a10992 1
    return gl_provider_resolver(entrypoint_strings + 2937 /* "glBufferSubData" */,
d11001 1
a11002 1
        Desktop_OpenGL_1_5,
d11007 4
a11010 4
        2953 /* "glBufferSubDataARB" */,
        2937 /* "glBufferSubData" */,
        2937 /* "glBufferSubData" */,
        2937 /* "glBufferSubData" */,
d11012 1
a11012 1
    return gl_provider_resolver(entrypoint_strings + 2953 /* "glBufferSubDataARB" */,
d11016 6
d11025 1
a11025 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 2972 /* glCallList */);
d11031 1
a11031 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 2983 /* glCallLists */);
d11045 4
a11048 4
        2995 /* "glCheckFramebufferStatus" */,
        2995 /* "glCheckFramebufferStatus" */,
        2995 /* "glCheckFramebufferStatus" */,
        3020 /* "glCheckFramebufferStatusEXT" */,
d11050 1
a11050 1
    return gl_provider_resolver(entrypoint_strings + 2995 /* "glCheckFramebufferStatus" */,
d11065 4
a11068 4
        3020 /* "glCheckFramebufferStatusEXT" */,
        2995 /* "glCheckFramebufferStatus" */,
        2995 /* "glCheckFramebufferStatus" */,
        2995 /* "glCheckFramebufferStatus" */,
d11070 1
a11070 1
    return gl_provider_resolver(entrypoint_strings + 3020 /* "glCheckFramebufferStatusEXT" */,
d11077 17
a11093 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 3048 /* glCheckFramebufferStatusOES */);
d11099 1
a11099 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 3076 /* glCheckNamedFramebufferStatusEXT */);
d11111 2
a11112 2
        3109 /* "glClampColor" */,
        3122 /* "glClampColorARB" */,
d11114 1
a11114 1
    return gl_provider_resolver(entrypoint_strings + 3109 /* "glClampColor" */,
d11127 2
a11128 2
        3122 /* "glClampColorARB" */,
        3109 /* "glClampColor" */,
d11130 1
a11130 1
    return gl_provider_resolver(entrypoint_strings + 3122 /* "glClampColorARB" */,
d11144 3
a11146 3
        3138 /* "glClear" */,
        3138 /* "glClear" */,
        3138 /* "glClear" */,
d11148 1
a11148 1
    return gl_provider_resolver(entrypoint_strings + 3138 /* "glClear" */,
d11155 1
a11155 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3146 /* glClearAccum */);
d11161 1
a11161 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 3159 /* glClearAccumxOES */);
d11173 2
a11174 2
        3176 /* "glClearBufferData" */,
        3176 /* "glClearBufferData" */,
d11176 1
a11176 1
    return gl_provider_resolver(entrypoint_strings + 3176 /* "glClearBufferData" */,
d11189 2
a11190 2
        3194 /* "glClearBufferSubData" */,
        3194 /* "glClearBufferSubData" */,
d11192 1
a11192 1
    return gl_provider_resolver(entrypoint_strings + 3194 /* "glClearBufferSubData" */,
d11205 2
a11206 2
        3215 /* "glClearBufferfi" */,
        3215 /* "glClearBufferfi" */,
d11208 1
a11208 1
    return gl_provider_resolver(entrypoint_strings + 3215 /* "glClearBufferfi" */,
d11221 2
a11222 2
        3231 /* "glClearBufferfv" */,
        3231 /* "glClearBufferfv" */,
d11224 1
a11224 1
    return gl_provider_resolver(entrypoint_strings + 3231 /* "glClearBufferfv" */,
d11237 2
a11238 2
        3247 /* "glClearBufferiv" */,
        3247 /* "glClearBufferiv" */,
d11240 1
a11240 1
    return gl_provider_resolver(entrypoint_strings + 3247 /* "glClearBufferiv" */,
d11253 2
a11254 2
        3263 /* "glClearBufferuiv" */,
        3263 /* "glClearBufferuiv" */,
d11256 1
a11256 1
    return gl_provider_resolver(entrypoint_strings + 3263 /* "glClearBufferuiv" */,
d11270 3
a11272 3
        3280 /* "glClearColor" */,
        3280 /* "glClearColor" */,
        3280 /* "glClearColor" */,
d11274 1
a11274 1
    return gl_provider_resolver(entrypoint_strings + 3280 /* "glClearColor" */,
d11281 1
a11281 1
    return gl_single_resolver(GL_extension_GL_EXT_texture_integer, 3293 /* glClearColorIiEXT */);
d11287 1
a11287 1
    return gl_single_resolver(GL_extension_GL_EXT_texture_integer, 3311 /* glClearColorIuiEXT */);
d11293 1
a11293 1
    return gl_single_resolver(OpenGL_ES_1_0, 3330 /* glClearColorx */);
d11299 1
a11299 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 3344 /* glClearColorxOES */);
d11305 1
a11305 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3361 /* glClearDepth */);
d11311 1
a11311 1
    return gl_single_resolver(GL_extension_GL_NV_depth_buffer_float, 3374 /* glClearDepthdNV */);
d11319 1
a11320 1
        GL_extension_GL_ARB_ES2_compatibility,
d11326 5
a11330 5
        3390 /* "glClearDepthf" */,
        3390 /* "glClearDepthf" */,
        3390 /* "glClearDepthf" */,
        3390 /* "glClearDepthf" */,
        3404 /* "glClearDepthfOES" */,
d11332 1
a11332 1
    return gl_provider_resolver(entrypoint_strings + 3390 /* "glClearDepthf" */,
d11342 1
a11343 1
        GL_extension_GL_ARB_ES2_compatibility,
d11348 5
a11352 5
        3404 /* "glClearDepthfOES" */,
        3390 /* "glClearDepthf" */,
        3390 /* "glClearDepthf" */,
        3390 /* "glClearDepthf" */,
        3390 /* "glClearDepthf" */,
d11354 1
a11354 1
    return gl_provider_resolver(entrypoint_strings + 3404 /* "glClearDepthfOES" */,
d11361 1
a11361 1
    return gl_single_resolver(OpenGL_ES_1_0, 3421 /* glClearDepthx */);
d11367 1
a11367 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 3435 /* glClearDepthxOES */);
d11373 17
a11389 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3452 /* glClearIndex */);
d11395 17
a11411 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 3465 /* glClearNamedBufferDataEXT */);
d11417 65
a11481 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 3491 /* glClearNamedBufferSubDataEXT */);
d11494 3
a11496 3
        3520 /* "glClearStencil" */,
        3520 /* "glClearStencil" */,
        3520 /* "glClearStencil" */,
d11498 1
a11498 1
    return gl_provider_resolver(entrypoint_strings + 3520 /* "glClearStencil" */,
d11506 1
a11507 1
        Desktop_OpenGL_4_4,
d11511 2
a11512 2
        3535 /* "glClearTexImage" */,
        3535 /* "glClearTexImage" */,
d11514 1
a11514 1
    return gl_provider_resolver(entrypoint_strings + 3535 /* "glClearTexImage" */,
d11522 1
a11523 1
        Desktop_OpenGL_4_4,
d11527 2
a11528 2
        3551 /* "glClearTexSubImage" */,
        3551 /* "glClearTexSubImage" */,
d11530 1
a11530 1
    return gl_provider_resolver(entrypoint_strings + 3551 /* "glClearTexSubImage" */,
d11538 1
a11539 1
        Desktop_OpenGL_1_3,
d11544 3
a11546 3
        3570 /* "glClientActiveTexture" */,
        3570 /* "glClientActiveTexture" */,
        3592 /* "glClientActiveTextureARB" */,
d11548 1
a11548 1
    return gl_provider_resolver(entrypoint_strings + 3570 /* "glClientActiveTexture" */,
d11557 1
a11558 1
        Desktop_OpenGL_1_3,
d11562 3
a11564 3
        3592 /* "glClientActiveTextureARB" */,
        3570 /* "glClientActiveTexture" */,
        3570 /* "glClientActiveTexture" */,
d11566 1
a11566 1
    return gl_provider_resolver(entrypoint_strings + 3592 /* "glClientActiveTextureARB" */,
d11573 1
a11573 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 3617 /* glClientActiveVertexStreamATI */);
d11579 1
a11579 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 3647 /* glClientAttribDefaultEXT */);
d11593 4
a11596 4
        3672 /* "glClientWaitSync" */,
        3672 /* "glClientWaitSync" */,
        3672 /* "glClientWaitSync" */,
        3689 /* "glClientWaitSyncAPPLE" */,
d11598 1
a11598 1
    return gl_provider_resolver(entrypoint_strings + 3672 /* "glClientWaitSync" */,
d11613 20
a11632 4
        3689 /* "glClientWaitSyncAPPLE" */,
        3672 /* "glClientWaitSync" */,
        3672 /* "glClientWaitSync" */,
        3672 /* "glClientWaitSync" */,
d11634 1
a11634 1
    return gl_provider_resolver(entrypoint_strings + 3689 /* "glClientWaitSyncAPPLE" */,
d11641 1
a11641 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3711 /* glClipPlane */);
d11647 1
a11647 1
    return gl_single_resolver(OpenGL_ES_1_0, 3723 /* glClipPlanef */);
d11653 1
a11653 1
    return gl_single_resolver(GL_extension_GL_IMG_user_clip_plane, 3736 /* glClipPlanefIMG */);
d11659 1
a11659 1
    return gl_single_resolver(GL_extension_GL_OES_single_precision, 3752 /* glClipPlanefOES */);
d11665 1
a11665 1
    return gl_single_resolver(OpenGL_ES_1_0, 3768 /* glClipPlanex */);
d11671 1
a11671 1
    return gl_single_resolver(GL_extension_GL_IMG_user_clip_plane, 3781 /* glClipPlanexIMG */);
d11677 1
a11677 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 3797 /* glClipPlanexOES */);
d11683 1
a11683 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3813 /* glColor3b */);
d11689 1
a11689 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3823 /* glColor3bv */);
d11695 1
a11695 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3834 /* glColor3d */);
d11701 1
a11701 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3844 /* glColor3dv */);
d11707 1
a11707 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3855 /* glColor3f */);
d11713 1
a11713 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 3865 /* glColor3fVertex3fSUN */);
d11719 1
a11719 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 3886 /* glColor3fVertex3fvSUN */);
d11725 1
a11725 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3908 /* glColor3fv */);
d11731 1
a11731 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 3919 /* glColor3hNV */);
d11737 1
a11737 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 3931 /* glColor3hvNV */);
d11743 1
a11743 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3944 /* glColor3i */);
d11749 1
a11749 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3954 /* glColor3iv */);
d11755 1
a11755 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3965 /* glColor3s */);
d11761 1
a11761 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3975 /* glColor3sv */);
d11767 1
a11767 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3986 /* glColor3ub */);
d11773 1
a11773 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 3997 /* glColor3ubv */);
d11779 1
a11779 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4009 /* glColor3ui */);
d11785 1
a11785 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4020 /* glColor3uiv */);
d11791 1
a11791 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4032 /* glColor3us */);
d11797 1
a11797 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4043 /* glColor3usv */);
d11803 1
a11803 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 4055 /* glColor3xOES */);
d11809 1
a11809 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 4068 /* glColor3xvOES */);
d11815 1
a11815 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4082 /* glColor4b */);
d11821 1
a11821 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4092 /* glColor4bv */);
d11827 1
a11827 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4103 /* glColor4d */);
d11833 1
a11833 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4113 /* glColor4dv */);
d11845 2
a11846 2
        4124 /* "glColor4f" */,
        4124 /* "glColor4f" */,
d11848 1
a11848 1
    return gl_provider_resolver(entrypoint_strings + 4124 /* "glColor4f" */,
d11855 1
a11855 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4134 /* glColor4fNormal3fVertex3fSUN */);
d11861 1
a11861 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4163 /* glColor4fNormal3fVertex3fvSUN */);
d11867 1
a11867 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4193 /* glColor4fv */);
d11873 1
a11873 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 4204 /* glColor4hNV */);
d11879 1
a11879 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 4216 /* glColor4hvNV */);
d11885 1
a11885 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4229 /* glColor4i */);
d11891 1
a11891 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4239 /* glColor4iv */);
d11897 1
a11897 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4250 /* glColor4s */);
d11903 1
a11903 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4260 /* glColor4sv */);
d11915 2
a11916 2
        4271 /* "glColor4ub" */,
        4271 /* "glColor4ub" */,
d11918 1
a11918 1
    return gl_provider_resolver(entrypoint_strings + 4271 /* "glColor4ub" */,
d11925 1
a11925 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4282 /* glColor4ubVertex2fSUN */);
d11931 1
a11931 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4304 /* glColor4ubVertex2fvSUN */);
d11937 1
a11937 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4327 /* glColor4ubVertex3fSUN */);
d11943 1
a11943 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 4349 /* glColor4ubVertex3fvSUN */);
d11949 1
a11949 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4372 /* glColor4ubv */);
d11955 1
a11955 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4384 /* glColor4ui */);
d11961 1
a11961 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4395 /* glColor4uiv */);
d11967 1
a11967 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4407 /* glColor4us */);
d11973 1
a11973 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4418 /* glColor4usv */);
d11979 1
a11979 1
    return gl_single_resolver(OpenGL_ES_1_0, 4430 /* glColor4x */);
d11985 1
a11985 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 4440 /* glColor4xOES */);
d11991 1
a11991 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 4453 /* glColor4xvOES */);
d11997 1
a11997 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 4467 /* glColorFormatNV */);
d12003 1
a12003 1
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 4483 /* glColorFragmentOp1ATI */);
d12009 1
a12009 1
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 4505 /* glColorFragmentOp2ATI */);
d12015 1
a12015 1
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 4527 /* glColorFragmentOp3ATI */);
d12028 3
a12030 3
        4549 /* "glColorMask" */,
        4549 /* "glColorMask" */,
        4549 /* "glColorMask" */,
d12032 1
a12032 1
    return gl_provider_resolver(entrypoint_strings + 4549 /* "glColorMask" */,
d12042 2
d12047 4
a12050 2
        4561 /* "glColorMaskIndexedEXT" */,
        4583 /* "glColorMaski" */,
d12052 1
a12052 1
    return gl_provider_resolver(entrypoint_strings + 4561 /* "glColorMaskIndexedEXT" */,
d12062 42
d12107 4
a12110 2
        4583 /* "glColorMaski" */,
        4561 /* "glColorMaskIndexedEXT" */,
d12112 1
a12112 1
    return gl_provider_resolver(entrypoint_strings + 4583 /* "glColorMaski" */,
d12119 1
a12119 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 4596 /* glColorMaterial */);
d12126 1
a12127 1
        Desktop_OpenGL_3_3,
d12131 2
a12132 2
        4612 /* "glColorP3ui" */,
        4612 /* "glColorP3ui" */,
d12134 1
a12134 1
    return gl_provider_resolver(entrypoint_strings + 4612 /* "glColorP3ui" */,
d12142 1
a12143 1
        Desktop_OpenGL_3_3,
d12147 2
a12148 2
        4624 /* "glColorP3uiv" */,
        4624 /* "glColorP3uiv" */,
d12150 1
a12150 1
    return gl_provider_resolver(entrypoint_strings + 4624 /* "glColorP3uiv" */,
d12158 1
a12159 1
        Desktop_OpenGL_3_3,
d12163 2
a12164 2
        4637 /* "glColorP4ui" */,
        4637 /* "glColorP4ui" */,
d12166 1
a12166 1
    return gl_provider_resolver(entrypoint_strings + 4637 /* "glColorP4ui" */,
d12174 1
a12175 1
        Desktop_OpenGL_3_3,
d12179 2
a12180 2
        4649 /* "glColorP4uiv" */,
        4649 /* "glColorP4uiv" */,
d12182 1
a12182 1
    return gl_provider_resolver(entrypoint_strings + 4649 /* "glColorP4uiv" */,
d12195 2
a12196 2
        4662 /* "glColorPointer" */,
        4662 /* "glColorPointer" */,
d12198 1
a12198 1
    return gl_provider_resolver(entrypoint_strings + 4662 /* "glColorPointer" */,
d12205 1
a12205 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 4677 /* glColorPointerEXT */);
d12211 1
a12211 1
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 4695 /* glColorPointerListIBM */);
d12217 1
a12217 1
    return gl_single_resolver(GL_extension_GL_INTEL_parallel_arrays, 4717 /* glColorPointervINTEL */);
d12229 2
a12230 2
        4738 /* "glColorSubTable" */,
        4754 /* "glColorSubTableEXT" */,
d12232 1
a12232 1
    return gl_provider_resolver(entrypoint_strings + 4738 /* "glColorSubTable" */,
d12245 2
a12246 2
        4754 /* "glColorSubTableEXT" */,
        4738 /* "glColorSubTable" */,
d12248 1
a12248 1
    return gl_provider_resolver(entrypoint_strings + 4754 /* "glColorSubTableEXT" */,
d12262 3
a12264 3
        4773 /* "glColorTable" */,
        4786 /* "glColorTableEXT" */,
        4904 /* "glColorTableSGI" */,
d12266 1
a12266 1
    return gl_provider_resolver(entrypoint_strings + 4773 /* "glColorTable" */,
d12280 3
a12282 3
        4786 /* "glColorTableEXT" */,
        4773 /* "glColorTable" */,
        4904 /* "glColorTableSGI" */,
d12284 1
a12284 1
    return gl_provider_resolver(entrypoint_strings + 4786 /* "glColorTableEXT" */,
d12297 2
a12298 2
        4802 /* "glColorTableParameterfv" */,
        4826 /* "glColorTableParameterfvSGI" */,
d12300 1
a12300 1
    return gl_provider_resolver(entrypoint_strings + 4802 /* "glColorTableParameterfv" */,
d12313 2
a12314 2
        4826 /* "glColorTableParameterfvSGI" */,
        4802 /* "glColorTableParameterfv" */,
d12316 1
a12316 1
    return gl_provider_resolver(entrypoint_strings + 4826 /* "glColorTableParameterfvSGI" */,
d12329 2
a12330 2
        4853 /* "glColorTableParameteriv" */,
        4877 /* "glColorTableParameterivSGI" */,
d12332 1
a12332 1
    return gl_provider_resolver(entrypoint_strings + 4853 /* "glColorTableParameteriv" */,
d12345 2
a12346 2
        4877 /* "glColorTableParameterivSGI" */,
        4853 /* "glColorTableParameteriv" */,
d12348 1
a12348 1
    return gl_provider_resolver(entrypoint_strings + 4877 /* "glColorTableParameterivSGI" */,
d12362 3
a12364 3
        4904 /* "glColorTableSGI" */,
        4773 /* "glColorTable" */,
        4786 /* "glColorTableEXT" */,
d12366 1
a12366 1
    return gl_provider_resolver(entrypoint_strings + 4904 /* "glColorTableSGI" */,
d12373 1
a12373 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 4920 /* glCombinerInputNV */);
d12379 1
a12379 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 4938 /* glCombinerOutputNV */);
d12385 1
a12385 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 4957 /* glCombinerParameterfNV */);
d12391 1
a12391 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 4980 /* glCombinerParameterfvNV */);
d12397 1
a12397 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 5004 /* glCombinerParameteriNV */);
d12403 1
a12403 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 5027 /* glCombinerParameterivNV */);
d12409 13
a12421 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners2, 5051 /* glCombinerStageParameterfvNV */);
d12428 1
a12429 1
        Desktop_OpenGL_2_0,
d12434 3
a12436 3
        5080 /* "glCompileShader" */,
        5080 /* "glCompileShader" */,
        5096 /* "glCompileShaderARB" */,
d12438 1
a12438 1
    return gl_provider_resolver(entrypoint_strings + 5080 /* "glCompileShader" */,
d12447 1
a12448 1
        Desktop_OpenGL_2_0,
d12452 3
a12454 3
        5096 /* "glCompileShaderARB" */,
        5080 /* "glCompileShader" */,
        5080 /* "glCompileShader" */,
d12456 1
a12456 1
    return gl_provider_resolver(entrypoint_strings + 5096 /* "glCompileShaderARB" */,
d12463 1
a12463 1
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 5115 /* glCompileShaderIncludeARB */);
d12469 1
a12469 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5141 /* glCompressedMultiTexImage1DEXT */);
d12475 1
a12475 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5172 /* glCompressedMultiTexImage2DEXT */);
d12481 1
a12481 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5203 /* glCompressedMultiTexImage3DEXT */);
d12487 1
a12487 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5234 /* glCompressedMultiTexSubImage1DEXT */);
d12493 1
a12493 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5268 /* glCompressedMultiTexSubImage2DEXT */);
d12499 1
a12499 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5302 /* glCompressedMultiTexSubImage3DEXT */);
d12511 2
a12512 2
        5336 /* "glCompressedTexImage1D" */,
        5359 /* "glCompressedTexImage1DARB" */,
d12514 1
a12514 1
    return gl_provider_resolver(entrypoint_strings + 5336 /* "glCompressedTexImage1D" */,
d12527 2
a12528 2
        5359 /* "glCompressedTexImage1DARB" */,
        5336 /* "glCompressedTexImage1D" */,
d12530 1
a12530 1
    return gl_provider_resolver(entrypoint_strings + 5359 /* "glCompressedTexImage1DARB" */,
d12538 1
a12539 1
        Desktop_OpenGL_1_3,
d12545 4
a12548 4
        5385 /* "glCompressedTexImage2D" */,
        5385 /* "glCompressedTexImage2D" */,
        5385 /* "glCompressedTexImage2D" */,
        5408 /* "glCompressedTexImage2DARB" */,
d12550 1
a12550 1
    return gl_provider_resolver(entrypoint_strings + 5385 /* "glCompressedTexImage2D" */,
d12559 1
a12560 1
        Desktop_OpenGL_1_3,
d12565 4
a12568 4
        5408 /* "glCompressedTexImage2DARB" */,
        5385 /* "glCompressedTexImage2D" */,
        5385 /* "glCompressedTexImage2D" */,
        5385 /* "glCompressedTexImage2D" */,
d12570 1
a12570 1
    return gl_provider_resolver(entrypoint_strings + 5408 /* "glCompressedTexImage2DARB" */,
d12585 4
a12588 4
        5434 /* "glCompressedTexImage3D" */,
        5434 /* "glCompressedTexImage3D" */,
        5457 /* "glCompressedTexImage3DARB" */,
        5483 /* "glCompressedTexImage3DOES" */,
d12590 1
a12590 1
    return gl_provider_resolver(entrypoint_strings + 5434 /* "glCompressedTexImage3D" */,
d12605 4
a12608 4
        5457 /* "glCompressedTexImage3DARB" */,
        5434 /* "glCompressedTexImage3D" */,
        5434 /* "glCompressedTexImage3D" */,
        5483 /* "glCompressedTexImage3DOES" */,
d12610 1
a12610 1
    return gl_provider_resolver(entrypoint_strings + 5457 /* "glCompressedTexImage3DARB" */,
d12625 4
a12628 4
        5483 /* "glCompressedTexImage3DOES" */,
        5434 /* "glCompressedTexImage3D" */,
        5434 /* "glCompressedTexImage3D" */,
        5457 /* "glCompressedTexImage3DARB" */,
d12630 1
a12630 1
    return gl_provider_resolver(entrypoint_strings + 5483 /* "glCompressedTexImage3DOES" */,
d12643 2
a12644 2
        5509 /* "glCompressedTexSubImage1D" */,
        5535 /* "glCompressedTexSubImage1DARB" */,
d12646 1
a12646 1
    return gl_provider_resolver(entrypoint_strings + 5509 /* "glCompressedTexSubImage1D" */,
d12659 2
a12660 2
        5535 /* "glCompressedTexSubImage1DARB" */,
        5509 /* "glCompressedTexSubImage1D" */,
d12662 1
a12662 1
    return gl_provider_resolver(entrypoint_strings + 5535 /* "glCompressedTexSubImage1DARB" */,
d12670 1
a12671 1
        Desktop_OpenGL_1_3,
d12677 4
a12680 4
        5564 /* "glCompressedTexSubImage2D" */,
        5564 /* "glCompressedTexSubImage2D" */,
        5564 /* "glCompressedTexSubImage2D" */,
        5590 /* "glCompressedTexSubImage2DARB" */,
d12682 1
a12682 1
    return gl_provider_resolver(entrypoint_strings + 5564 /* "glCompressedTexSubImage2D" */,
d12691 1
a12692 1
        Desktop_OpenGL_1_3,
d12697 4
a12700 4
        5590 /* "glCompressedTexSubImage2DARB" */,
        5564 /* "glCompressedTexSubImage2D" */,
        5564 /* "glCompressedTexSubImage2D" */,
        5564 /* "glCompressedTexSubImage2D" */,
d12702 1
a12702 1
    return gl_provider_resolver(entrypoint_strings + 5590 /* "glCompressedTexSubImage2DARB" */,
d12717 4
a12720 4
        5619 /* "glCompressedTexSubImage3D" */,
        5619 /* "glCompressedTexSubImage3D" */,
        5645 /* "glCompressedTexSubImage3DARB" */,
        5674 /* "glCompressedTexSubImage3DOES" */,
d12722 1
a12722 1
    return gl_provider_resolver(entrypoint_strings + 5619 /* "glCompressedTexSubImage3D" */,
d12737 4
a12740 4
        5645 /* "glCompressedTexSubImage3DARB" */,
        5619 /* "glCompressedTexSubImage3D" */,
        5619 /* "glCompressedTexSubImage3D" */,
        5674 /* "glCompressedTexSubImage3DOES" */,
d12742 1
a12742 1
    return gl_provider_resolver(entrypoint_strings + 5645 /* "glCompressedTexSubImage3DARB" */,
d12757 4
a12760 4
        5674 /* "glCompressedTexSubImage3DOES" */,
        5619 /* "glCompressedTexSubImage3D" */,
        5619 /* "glCompressedTexSubImage3D" */,
        5645 /* "glCompressedTexSubImage3DARB" */,
d12762 1
a12762 1
    return gl_provider_resolver(entrypoint_strings + 5674 /* "glCompressedTexSubImage3DOES" */,
d12769 1
a12769 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5703 /* glCompressedTextureImage1DEXT */);
d12775 1
a12775 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5733 /* glCompressedTextureImage2DEXT */);
d12781 17
a12797 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5763 /* glCompressedTextureImage3DEXT */);
d12803 17
a12819 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5793 /* glCompressedTextureSubImage1DEXT */);
d12825 17
a12841 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5826 /* glCompressedTextureSubImage2DEXT */);
d12847 1
a12847 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 5859 /* glCompressedTextureSubImage3DEXT */);
d12859 2
a12860 2
        5892 /* "glConvolutionFilter1D" */,
        5914 /* "glConvolutionFilter1DEXT" */,
d12862 1
a12862 1
    return gl_provider_resolver(entrypoint_strings + 5892 /* "glConvolutionFilter1D" */,
d12875 2
a12876 2
        5914 /* "glConvolutionFilter1DEXT" */,
        5892 /* "glConvolutionFilter1D" */,
d12878 1
a12878 1
    return gl_provider_resolver(entrypoint_strings + 5914 /* "glConvolutionFilter1DEXT" */,
d12891 2
a12892 2
        5939 /* "glConvolutionFilter2D" */,
        5961 /* "glConvolutionFilter2DEXT" */,
d12894 1
a12894 1
    return gl_provider_resolver(entrypoint_strings + 5939 /* "glConvolutionFilter2D" */,
d12907 2
a12908 2
        5961 /* "glConvolutionFilter2DEXT" */,
        5939 /* "glConvolutionFilter2D" */,
d12910 1
a12910 1
    return gl_provider_resolver(entrypoint_strings + 5961 /* "glConvolutionFilter2DEXT" */,
d12923 2
a12924 2
        5986 /* "glConvolutionParameterf" */,
        6010 /* "glConvolutionParameterfEXT" */,
d12926 1
a12926 1
    return gl_provider_resolver(entrypoint_strings + 5986 /* "glConvolutionParameterf" */,
d12939 2
a12940 2
        6010 /* "glConvolutionParameterfEXT" */,
        5986 /* "glConvolutionParameterf" */,
d12942 1
a12942 1
    return gl_provider_resolver(entrypoint_strings + 6010 /* "glConvolutionParameterfEXT" */,
d12955 2
a12956 2
        6037 /* "glConvolutionParameterfv" */,
        6062 /* "glConvolutionParameterfvEXT" */,
d12958 1
a12958 1
    return gl_provider_resolver(entrypoint_strings + 6037 /* "glConvolutionParameterfv" */,
d12971 2
a12972 2
        6062 /* "glConvolutionParameterfvEXT" */,
        6037 /* "glConvolutionParameterfv" */,
d12974 1
a12974 1
    return gl_provider_resolver(entrypoint_strings + 6062 /* "glConvolutionParameterfvEXT" */,
d12987 2
a12988 2
        6090 /* "glConvolutionParameteri" */,
        6114 /* "glConvolutionParameteriEXT" */,
d12990 1
a12990 1
    return gl_provider_resolver(entrypoint_strings + 6090 /* "glConvolutionParameteri" */,
d13003 2
a13004 2
        6114 /* "glConvolutionParameteriEXT" */,
        6090 /* "glConvolutionParameteri" */,
d13006 1
a13006 1
    return gl_provider_resolver(entrypoint_strings + 6114 /* "glConvolutionParameteriEXT" */,
d13019 2
a13020 2
        6141 /* "glConvolutionParameteriv" */,
        6166 /* "glConvolutionParameterivEXT" */,
d13022 1
a13022 1
    return gl_provider_resolver(entrypoint_strings + 6141 /* "glConvolutionParameteriv" */,
d13035 2
a13036 2
        6166 /* "glConvolutionParameterivEXT" */,
        6141 /* "glConvolutionParameteriv" */,
d13038 1
a13038 1
    return gl_provider_resolver(entrypoint_strings + 6166 /* "glConvolutionParameterivEXT" */,
d13045 1
a13045 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 6194 /* glConvolutionParameterxOES */);
d13051 1
a13051 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 6221 /* glConvolutionParameterxvOES */);
d13059 1
a13060 1
        GL_extension_GL_ARB_copy_buffer,
d13065 4
a13068 4
        6249 /* "glCopyBufferSubData" */,
        6249 /* "glCopyBufferSubData" */,
        6249 /* "glCopyBufferSubData" */,
        6269 /* "glCopyBufferSubDataNV" */,
d13070 1
a13070 1
    return gl_provider_resolver(entrypoint_strings + 6249 /* "glCopyBufferSubData" */,
d13080 1
a13081 1
        GL_extension_GL_ARB_copy_buffer,
d13085 4
a13088 4
        6269 /* "glCopyBufferSubDataNV" */,
        6249 /* "glCopyBufferSubData" */,
        6249 /* "glCopyBufferSubData" */,
        6249 /* "glCopyBufferSubData" */,
d13090 1
a13090 1
    return gl_provider_resolver(entrypoint_strings + 6269 /* "glCopyBufferSubDataNV" */,
d13103 2
a13104 2
        6291 /* "glCopyColorSubTable" */,
        6311 /* "glCopyColorSubTableEXT" */,
d13106 1
a13106 1
    return gl_provider_resolver(entrypoint_strings + 6291 /* "glCopyColorSubTable" */,
d13119 2
a13120 2
        6311 /* "glCopyColorSubTableEXT" */,
        6291 /* "glCopyColorSubTable" */,
d13122 1
a13122 1
    return gl_provider_resolver(entrypoint_strings + 6311 /* "glCopyColorSubTableEXT" */,
d13135 2
a13136 2
        6334 /* "glCopyColorTable" */,
        6351 /* "glCopyColorTableSGI" */,
d13138 1
a13138 1
    return gl_provider_resolver(entrypoint_strings + 6334 /* "glCopyColorTable" */,
d13151 2
a13152 2
        6351 /* "glCopyColorTableSGI" */,
        6334 /* "glCopyColorTable" */,
d13154 1
a13154 1
    return gl_provider_resolver(entrypoint_strings + 6351 /* "glCopyColorTableSGI" */,
d13167 2
a13168 2
        6371 /* "glCopyConvolutionFilter1D" */,
        6397 /* "glCopyConvolutionFilter1DEXT" */,
d13170 1
a13170 1
    return gl_provider_resolver(entrypoint_strings + 6371 /* "glCopyConvolutionFilter1D" */,
d13183 2
a13184 2
        6397 /* "glCopyConvolutionFilter1DEXT" */,
        6371 /* "glCopyConvolutionFilter1D" */,
d13186 1
a13186 1
    return gl_provider_resolver(entrypoint_strings + 6397 /* "glCopyConvolutionFilter1DEXT" */,
d13199 2
a13200 2
        6426 /* "glCopyConvolutionFilter2D" */,
        6452 /* "glCopyConvolutionFilter2DEXT" */,
d13202 1
a13202 1
    return gl_provider_resolver(entrypoint_strings + 6426 /* "glCopyConvolutionFilter2D" */,
d13215 2
a13216 2
        6452 /* "glCopyConvolutionFilter2DEXT" */,
        6426 /* "glCopyConvolutionFilter2D" */,
d13218 1
a13218 1
    return gl_provider_resolver(entrypoint_strings + 6452 /* "glCopyConvolutionFilter2DEXT" */,
d13228 22
d13253 4
a13256 2
        6481 /* "glCopyImageSubData" */,
        6481 /* "glCopyImageSubData" */,
d13258 1
a13258 1
    return gl_provider_resolver(entrypoint_strings + 6481 /* "glCopyImageSubData" */,
d13265 1
a13265 1
    return gl_single_resolver(GL_extension_GL_NV_copy_image, 6500 /* glCopyImageSubDataNV */);
d13268 2
a13269 2
static PFNGLCOPYMULTITEXIMAGE1DEXTPROC
epoxy_glCopyMultiTexImage1DEXT_resolver(void)
d13271 21
a13291 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6521 /* glCopyMultiTexImage1DEXT */);
d13297 1
a13297 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6546 /* glCopyMultiTexImage2DEXT */);
d13303 1
a13303 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6571 /* glCopyMultiTexSubImage1DEXT */);
d13309 1
a13309 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6599 /* glCopyMultiTexSubImage2DEXT */);
d13315 17
a13331 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6627 /* glCopyMultiTexSubImage3DEXT */);
d13337 1
a13337 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 6655 /* glCopyPathNV */);
d13343 1
a13343 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 6668 /* glCopyPixels */);
d13355 2
a13356 2
        6681 /* "glCopyTexImage1D" */,
        6698 /* "glCopyTexImage1DEXT" */,
d13358 1
a13358 1
    return gl_provider_resolver(entrypoint_strings + 6681 /* "glCopyTexImage1D" */,
d13371 2
a13372 2
        6698 /* "glCopyTexImage1DEXT" */,
        6681 /* "glCopyTexImage1D" */,
d13374 1
a13374 1
    return gl_provider_resolver(entrypoint_strings + 6698 /* "glCopyTexImage1DEXT" */,
d13383 1
a13384 1
        OpenGL_ES_1_0,
d13389 4
a13392 4
        6718 /* "glCopyTexImage2D" */,
        6718 /* "glCopyTexImage2D" */,
        6718 /* "glCopyTexImage2D" */,
        6735 /* "glCopyTexImage2DEXT" */,
d13394 1
a13394 1
    return gl_provider_resolver(entrypoint_strings + 6718 /* "glCopyTexImage2D" */,
d13404 1
a13405 1
        OpenGL_ES_1_0,
d13409 4
a13412 4
        6735 /* "glCopyTexImage2DEXT" */,
        6718 /* "glCopyTexImage2D" */,
        6718 /* "glCopyTexImage2D" */,
        6718 /* "glCopyTexImage2D" */,
d13414 1
a13414 1
    return gl_provider_resolver(entrypoint_strings + 6735 /* "glCopyTexImage2DEXT" */,
d13427 2
a13428 2
        6755 /* "glCopyTexSubImage1D" */,
        6775 /* "glCopyTexSubImage1DEXT" */,
d13430 1
a13430 1
    return gl_provider_resolver(entrypoint_strings + 6755 /* "glCopyTexSubImage1D" */,
d13443 2
a13444 2
        6775 /* "glCopyTexSubImage1DEXT" */,
        6755 /* "glCopyTexSubImage1D" */,
d13446 1
a13446 1
    return gl_provider_resolver(entrypoint_strings + 6775 /* "glCopyTexSubImage1DEXT" */,
d13455 1
a13456 1
        OpenGL_ES_1_0,
d13461 4
a13464 4
        6798 /* "glCopyTexSubImage2D" */,
        6798 /* "glCopyTexSubImage2D" */,
        6798 /* "glCopyTexSubImage2D" */,
        6818 /* "glCopyTexSubImage2DEXT" */,
d13466 1
a13466 1
    return gl_provider_resolver(entrypoint_strings + 6798 /* "glCopyTexSubImage2D" */,
d13476 1
a13477 1
        OpenGL_ES_1_0,
d13481 4
a13484 4
        6818 /* "glCopyTexSubImage2DEXT" */,
        6798 /* "glCopyTexSubImage2D" */,
        6798 /* "glCopyTexSubImage2D" */,
        6798 /* "glCopyTexSubImage2D" */,
d13486 1
a13486 1
    return gl_provider_resolver(entrypoint_strings + 6818 /* "glCopyTexSubImage2DEXT" */,
d13501 4
a13504 4
        6841 /* "glCopyTexSubImage3D" */,
        6841 /* "glCopyTexSubImage3D" */,
        6861 /* "glCopyTexSubImage3DEXT" */,
        6884 /* "glCopyTexSubImage3DOES" */,
d13506 1
a13506 1
    return gl_provider_resolver(entrypoint_strings + 6841 /* "glCopyTexSubImage3D" */,
d13521 4
a13524 4
        6861 /* "glCopyTexSubImage3DEXT" */,
        6841 /* "glCopyTexSubImage3D" */,
        6841 /* "glCopyTexSubImage3D" */,
        6884 /* "glCopyTexSubImage3DOES" */,
d13526 1
a13526 1
    return gl_provider_resolver(entrypoint_strings + 6861 /* "glCopyTexSubImage3DEXT" */,
d13541 4
a13544 4
        6884 /* "glCopyTexSubImage3DOES" */,
        6841 /* "glCopyTexSubImage3D" */,
        6841 /* "glCopyTexSubImage3D" */,
        6861 /* "glCopyTexSubImage3DEXT" */,
d13546 1
a13546 1
    return gl_provider_resolver(entrypoint_strings + 6884 /* "glCopyTexSubImage3DOES" */,
d13553 1
a13553 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6907 /* glCopyTextureImage1DEXT */);
d13559 1
a13559 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6931 /* glCopyTextureImage2DEXT */);
d13565 17
a13581 1
    return gl_single_resolver(GL_extension_GL_APPLE_copy_texture_levels, 6955 /* glCopyTextureLevelsAPPLE */);
d13587 17
a13603 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 6980 /* glCopyTextureSubImage1DEXT */);
d13609 17
a13625 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7007 /* glCopyTextureSubImage2DEXT */);
d13631 1
a13631 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 7034 /* glCopyTextureSubImage3DEXT */);
d13637 1
a13637 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 7061 /* glCoverFillPathInstancedNV */);
d13643 1
a13643 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 7088 /* glCoverFillPathNV */);
d13649 1
a13649 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 7106 /* glCoverStrokePathInstancedNV */);
d13655 1
a13655 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 7135 /* glCoverStrokePathNV */);
d13661 13
a13673 1
    return gl_single_resolver(GL_extension_GL_NV_coverage_sample, 7155 /* glCoverageMaskNV */);
d13679 39
a13717 1
    return gl_single_resolver(GL_extension_GL_NV_coverage_sample, 7172 /* glCoverageOperationNV */);
d13723 1
a13723 1
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 7194 /* glCreatePerfQueryINTEL */);
d13730 1
a13731 1
        Desktop_OpenGL_2_0,
d13736 3
a13738 3
        7217 /* "glCreateProgram" */,
        7217 /* "glCreateProgram" */,
        7233 /* "glCreateProgramObjectARB" */,
d13740 1
a13740 1
    return gl_provider_resolver(entrypoint_strings + 7217 /* "glCreateProgram" */,
d13749 1
a13750 1
        Desktop_OpenGL_2_0,
d13754 67
a13820 3
        7233 /* "glCreateProgramObjectARB" */,
        7217 /* "glCreateProgram" */,
        7217 /* "glCreateProgram" */,
d13822 1
a13822 1
    return gl_provider_resolver(entrypoint_strings + 7233 /* "glCreateProgramObjectARB" */,
d13830 1
a13831 1
        Desktop_OpenGL_2_0,
d13836 3
a13838 3
        7258 /* "glCreateShader" */,
        7258 /* "glCreateShader" */,
        7273 /* "glCreateShaderObjectARB" */,
d13840 1
a13840 1
    return gl_provider_resolver(entrypoint_strings + 7258 /* "glCreateShader" */,
d13849 1
a13850 1
        Desktop_OpenGL_2_0,
d13854 3
a13856 3
        7273 /* "glCreateShaderObjectARB" */,
        7258 /* "glCreateShader" */,
        7258 /* "glCreateShader" */,
d13858 1
a13858 1
    return gl_provider_resolver(entrypoint_strings + 7273 /* "glCreateShaderObjectARB" */,
d13865 1
a13865 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 7297 /* glCreateShaderProgramEXT */);
d13873 1
a13874 1
        GL_extension_GL_ARB_separate_shader_objects,
d13878 3
a13880 3
        7322 /* "glCreateShaderProgramv" */,
        7322 /* "glCreateShaderProgramv" */,
        7322 /* "glCreateShaderProgramv" */,
d13882 1
a13882 1
    return gl_provider_resolver(entrypoint_strings + 7322 /* "glCreateShaderProgramv" */,
d13889 7
a13895 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 7345 /* glCreateShaderProgramvEXT */);
d13901 49
a13949 1
    return gl_single_resolver(GL_extension_GL_ARB_cl_event, 7371 /* glCreateSyncFromCLeventARB */);
d13962 3
a13964 3
        7398 /* "glCullFace" */,
        7398 /* "glCullFace" */,
        7398 /* "glCullFace" */,
d13966 1
a13966 1
    return gl_provider_resolver(entrypoint_strings + 7398 /* "glCullFace" */,
d13973 1
a13973 1
    return gl_single_resolver(GL_extension_GL_EXT_cull_vertex, 7409 /* glCullParameterdvEXT */);
d13979 1
a13979 1
    return gl_single_resolver(GL_extension_GL_EXT_cull_vertex, 7430 /* glCullParameterfvEXT */);
d13985 1
a13985 1
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 7451 /* glCurrentPaletteMatrixARB */);
d13991 1
a13991 1
    return gl_single_resolver(GL_extension_GL_OES_matrix_palette, 7477 /* glCurrentPaletteMatrixOES */);
d14005 4
a14008 4
        7503 /* "glDebugMessageCallback" */,
        7503 /* "glDebugMessageCallback" */,
        7552 /* "glDebugMessageCallbackARB" */,
        7578 /* "glDebugMessageCallbackKHR" */,
d14010 1
a14010 1
    return gl_provider_resolver(entrypoint_strings + 7503 /* "glDebugMessageCallback" */,
d14017 1
a14017 1
    return gl_single_resolver(GL_extension_GL_AMD_debug_output, 7526 /* glDebugMessageCallbackAMD */);
d14031 4
a14034 4
        7552 /* "glDebugMessageCallbackARB" */,
        7503 /* "glDebugMessageCallback" */,
        7503 /* "glDebugMessageCallback" */,
        7578 /* "glDebugMessageCallbackKHR" */,
d14036 1
a14036 1
    return gl_provider_resolver(entrypoint_strings + 7552 /* "glDebugMessageCallbackARB" */,
d14051 4
a14054 4
        7578 /* "glDebugMessageCallbackKHR" */,
        7503 /* "glDebugMessageCallback" */,
        7503 /* "glDebugMessageCallback" */,
        7552 /* "glDebugMessageCallbackARB" */,
d14056 1
a14056 1
    return gl_provider_resolver(entrypoint_strings + 7578 /* "glDebugMessageCallbackKHR" */,
d14071 4
a14074 4
        7604 /* "glDebugMessageControl" */,
        7604 /* "glDebugMessageControl" */,
        7626 /* "glDebugMessageControlARB" */,
        7651 /* "glDebugMessageControlKHR" */,
d14076 1
a14076 1
    return gl_provider_resolver(entrypoint_strings + 7604 /* "glDebugMessageControl" */,
d14091 4
a14094 4
        7626 /* "glDebugMessageControlARB" */,
        7604 /* "glDebugMessageControl" */,
        7604 /* "glDebugMessageControl" */,
        7651 /* "glDebugMessageControlKHR" */,
d14096 1
a14096 1
    return gl_provider_resolver(entrypoint_strings + 7626 /* "glDebugMessageControlARB" */,
d14111 4
a14114 4
        7651 /* "glDebugMessageControlKHR" */,
        7604 /* "glDebugMessageControl" */,
        7604 /* "glDebugMessageControl" */,
        7626 /* "glDebugMessageControlARB" */,
d14116 1
a14116 1
    return gl_provider_resolver(entrypoint_strings + 7651 /* "glDebugMessageControlKHR" */,
d14123 1
a14123 1
    return gl_single_resolver(GL_extension_GL_AMD_debug_output, 7676 /* glDebugMessageEnableAMD */);
d14137 4
a14140 4
        7700 /* "glDebugMessageInsert" */,
        7700 /* "glDebugMessageInsert" */,
        7745 /* "glDebugMessageInsertARB" */,
        7769 /* "glDebugMessageInsertKHR" */,
d14142 1
a14142 1
    return gl_provider_resolver(entrypoint_strings + 7700 /* "glDebugMessageInsert" */,
d14149 1
a14149 1
    return gl_single_resolver(GL_extension_GL_AMD_debug_output, 7721 /* glDebugMessageInsertAMD */);
d14163 4
a14166 4
        7745 /* "glDebugMessageInsertARB" */,
        7700 /* "glDebugMessageInsert" */,
        7700 /* "glDebugMessageInsert" */,
        7769 /* "glDebugMessageInsertKHR" */,
d14168 1
a14168 1
    return gl_provider_resolver(entrypoint_strings + 7745 /* "glDebugMessageInsertARB" */,
d14183 4
a14186 4
        7769 /* "glDebugMessageInsertKHR" */,
        7700 /* "glDebugMessageInsert" */,
        7700 /* "glDebugMessageInsert" */,
        7745 /* "glDebugMessageInsertARB" */,
d14188 1
a14188 1
    return gl_provider_resolver(entrypoint_strings + 7769 /* "glDebugMessageInsertKHR" */,
d14195 1
a14195 1
    return gl_single_resolver(GL_extension_GL_SGIX_polynomial_ffd, 7793 /* glDeformSGIX */);
d14201 1
a14201 1
    return gl_single_resolver(GL_extension_GL_SGIX_polynomial_ffd, 7806 /* glDeformationMap3dSGIX */);
d14207 1
a14207 1
    return gl_single_resolver(GL_extension_GL_SGIX_polynomial_ffd, 7829 /* glDeformationMap3fSGIX */);
d14213 1
a14213 1
    return gl_single_resolver(GL_extension_GL_SGIX_async, 7852 /* glDeleteAsyncMarkersSGIX */);
d14220 1
a14221 1
        Desktop_OpenGL_1_5,
d14227 4
a14230 4
        7877 /* "glDeleteBuffers" */,
        7877 /* "glDeleteBuffers" */,
        7877 /* "glDeleteBuffers" */,
        7893 /* "glDeleteBuffersARB" */,
d14232 1
a14232 1
    return gl_provider_resolver(entrypoint_strings + 7877 /* "glDeleteBuffers" */,
d14241 1
a14242 1
        Desktop_OpenGL_1_5,
d14247 4
a14250 4
        7893 /* "glDeleteBuffersARB" */,
        7877 /* "glDeleteBuffers" */,
        7877 /* "glDeleteBuffers" */,
        7877 /* "glDeleteBuffers" */,
d14252 1
a14252 1
    return gl_provider_resolver(entrypoint_strings + 7893 /* "glDeleteBuffersARB" */,
d14256 6
d14265 1
a14265 1
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 7912 /* glDeleteFencesAPPLE */);
d14271 1
a14271 1
    return gl_single_resolver(GL_extension_GL_NV_fence, 7932 /* glDeleteFencesNV */);
d14277 1
a14277 1
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 7949 /* glDeleteFragmentShaderATI */);
d14291 4
a14294 4
        7975 /* "glDeleteFramebuffers" */,
        7975 /* "glDeleteFramebuffers" */,
        7975 /* "glDeleteFramebuffers" */,
        7996 /* "glDeleteFramebuffersEXT" */,
d14296 1
a14296 1
    return gl_provider_resolver(entrypoint_strings + 7975 /* "glDeleteFramebuffers" */,
d14311 4
a14314 4
        7996 /* "glDeleteFramebuffersEXT" */,
        7975 /* "glDeleteFramebuffers" */,
        7975 /* "glDeleteFramebuffers" */,
        7975 /* "glDeleteFramebuffers" */,
d14316 1
a14316 1
    return gl_provider_resolver(entrypoint_strings + 7996 /* "glDeleteFramebuffersEXT" */,
d14323 1
a14323 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 8020 /* glDeleteFramebuffersOES */);
d14329 1
a14329 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 8044 /* glDeleteLists */);
d14335 1
a14335 1
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 8058 /* glDeleteNamedStringARB */);
d14341 1
a14341 1
    return gl_single_resolver(GL_extension_GL_AMD_name_gen_delete, 8081 /* glDeleteNamesAMD */);
d14347 1
a14347 1
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 8098 /* glDeleteObjectARB */);
d14353 1
a14353 1
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 8116 /* glDeleteOcclusionQueriesNV */);
d14359 1
a14359 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 8143 /* glDeletePathsNV */);
d14365 1
a14365 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 8159 /* glDeletePerfMonitorsAMD */);
d14371 1
a14371 1
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 8183 /* glDeletePerfQueryINTEL */);
d14378 1
a14379 1
        Desktop_OpenGL_2_0,
d14383 2
a14384 2
        8206 /* "glDeleteProgram" */,
        8206 /* "glDeleteProgram" */,
d14386 1
a14386 1
    return gl_provider_resolver(entrypoint_strings + 8206 /* "glDeleteProgram" */,
d14395 1
a14396 1
        GL_extension_GL_ARB_separate_shader_objects,
d14400 3
a14402 3
        8222 /* "glDeleteProgramPipelines" */,
        8222 /* "glDeleteProgramPipelines" */,
        8222 /* "glDeleteProgramPipelines" */,
d14404 1
a14404 1
    return gl_provider_resolver(entrypoint_strings + 8222 /* "glDeleteProgramPipelines" */,
d14411 1
a14411 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 8247 /* glDeleteProgramPipelinesEXT */);
d14418 1
a14419 1
        GL_extension_GL_ARB_fragment_program,
d14424 3
a14426 3
        8275 /* "glDeleteProgramsARB" */,
        8275 /* "glDeleteProgramsARB" */,
        8295 /* "glDeleteProgramsNV" */,
d14428 1
a14428 1
    return gl_provider_resolver(entrypoint_strings + 8275 /* "glDeleteProgramsARB" */,
d14437 1
a14438 1
        GL_extension_GL_ARB_fragment_program,
d14442 3
a14444 3
        8295 /* "glDeleteProgramsNV" */,
        8275 /* "glDeleteProgramsARB" */,
        8275 /* "glDeleteProgramsARB" */,
d14446 1
a14446 1
    return gl_provider_resolver(entrypoint_strings + 8295 /* "glDeleteProgramsNV" */,
d14454 1
a14455 1
        Desktop_OpenGL_1_5,
d14460 3
a14462 3
        8314 /* "glDeleteQueries" */,
        8314 /* "glDeleteQueries" */,
        8330 /* "glDeleteQueriesARB" */,
d14464 1
a14464 1
    return gl_provider_resolver(entrypoint_strings + 8314 /* "glDeleteQueries" */,
d14473 1
a14474 1
        Desktop_OpenGL_1_5,
d14478 3
a14480 3
        8330 /* "glDeleteQueriesARB" */,
        8314 /* "glDeleteQueries" */,
        8314 /* "glDeleteQueries" */,
d14482 1
a14482 1
    return gl_provider_resolver(entrypoint_strings + 8330 /* "glDeleteQueriesARB" */,
d14490 1
a14491 1
        GL_extension_GL_EXT_disjoint_timer_query,
d14495 2
a14496 2
        8349 /* "glDeleteQueriesEXT" */,
        8349 /* "glDeleteQueriesEXT" */,
d14498 1
a14498 1
    return gl_provider_resolver(entrypoint_strings + 8349 /* "glDeleteQueriesEXT" */,
d14513 4
a14516 4
        8368 /* "glDeleteRenderbuffers" */,
        8368 /* "glDeleteRenderbuffers" */,
        8368 /* "glDeleteRenderbuffers" */,
        8390 /* "glDeleteRenderbuffersEXT" */,
d14518 1
a14518 1
    return gl_provider_resolver(entrypoint_strings + 8368 /* "glDeleteRenderbuffers" */,
d14533 4
a14536 4
        8390 /* "glDeleteRenderbuffersEXT" */,
        8368 /* "glDeleteRenderbuffers" */,
        8368 /* "glDeleteRenderbuffers" */,
        8368 /* "glDeleteRenderbuffers" */,
d14538 1
a14538 1
    return gl_provider_resolver(entrypoint_strings + 8390 /* "glDeleteRenderbuffersEXT" */,
d14545 1
a14545 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 8415 /* glDeleteRenderbuffersOES */);
d14552 1
a14553 1
        Desktop_OpenGL_3_3,
d14558 3
a14560 3
        8440 /* "glDeleteSamplers" */,
        8440 /* "glDeleteSamplers" */,
        8440 /* "glDeleteSamplers" */,
d14562 1
a14562 1
    return gl_provider_resolver(entrypoint_strings + 8440 /* "glDeleteSamplers" */,
d14570 1
a14571 1
        Desktop_OpenGL_2_0,
d14575 2
a14576 2
        8457 /* "glDeleteShader" */,
        8457 /* "glDeleteShader" */,
d14578 1
a14578 1
    return gl_provider_resolver(entrypoint_strings + 8457 /* "glDeleteShader" */,
d14582 6
d14599 4
a14602 4
        8472 /* "glDeleteSync" */,
        8472 /* "glDeleteSync" */,
        8472 /* "glDeleteSync" */,
        8485 /* "glDeleteSyncAPPLE" */,
d14604 1
a14604 1
    return gl_provider_resolver(entrypoint_strings + 8472 /* "glDeleteSync" */,
d14619 4
a14622 4
        8485 /* "glDeleteSyncAPPLE" */,
        8472 /* "glDeleteSync" */,
        8472 /* "glDeleteSync" */,
        8472 /* "glDeleteSync" */,
d14624 1
a14624 1
    return gl_provider_resolver(entrypoint_strings + 8485 /* "glDeleteSyncAPPLE" */,
d14633 1
a14634 1
        OpenGL_ES_1_0,
d14638 3
a14640 3
        8503 /* "glDeleteTextures" */,
        8503 /* "glDeleteTextures" */,
        8503 /* "glDeleteTextures" */,
d14642 1
a14642 1
    return gl_provider_resolver(entrypoint_strings + 8503 /* "glDeleteTextures" */,
d14649 1
a14649 1
    return gl_single_resolver(GL_extension_GL_EXT_texture_object, 8520 /* glDeleteTexturesEXT */);
d14657 1
a14658 1
        GL_extension_GL_ARB_transform_feedback2,
d14663 4
a14666 4
        8540 /* "glDeleteTransformFeedbacks" */,
        8540 /* "glDeleteTransformFeedbacks" */,
        8540 /* "glDeleteTransformFeedbacks" */,
        8567 /* "glDeleteTransformFeedbacksNV" */,
d14668 1
a14668 1
    return gl_provider_resolver(entrypoint_strings + 8540 /* "glDeleteTransformFeedbacks" */,
d14678 1
a14679 1
        GL_extension_GL_ARB_transform_feedback2,
d14683 4
a14686 4
        8567 /* "glDeleteTransformFeedbacksNV" */,
        8540 /* "glDeleteTransformFeedbacks" */,
        8540 /* "glDeleteTransformFeedbacks" */,
        8540 /* "glDeleteTransformFeedbacks" */,
d14688 1
a14688 1
    return gl_provider_resolver(entrypoint_strings + 8567 /* "glDeleteTransformFeedbacksNV" */,
d14697 1
a14698 1
        GL_extension_GL_ARB_vertex_array_object,
d14704 5
a14708 5
        8596 /* "glDeleteVertexArrays" */,
        8596 /* "glDeleteVertexArrays" */,
        8596 /* "glDeleteVertexArrays" */,
        8617 /* "glDeleteVertexArraysAPPLE" */,
        8643 /* "glDeleteVertexArraysOES" */,
d14710 1
a14710 1
    return gl_provider_resolver(entrypoint_strings + 8596 /* "glDeleteVertexArrays" */,
d14720 1
a14721 1
        GL_extension_GL_ARB_vertex_array_object,
d14726 5
a14730 5
        8617 /* "glDeleteVertexArraysAPPLE" */,
        8596 /* "glDeleteVertexArrays" */,
        8596 /* "glDeleteVertexArrays" */,
        8596 /* "glDeleteVertexArrays" */,
        8643 /* "glDeleteVertexArraysOES" */,
d14732 1
a14732 1
    return gl_provider_resolver(entrypoint_strings + 8617 /* "glDeleteVertexArraysAPPLE" */,
d14742 1
a14743 1
        GL_extension_GL_ARB_vertex_array_object,
d14748 5
a14752 5
        8643 /* "glDeleteVertexArraysOES" */,
        8596 /* "glDeleteVertexArrays" */,
        8596 /* "glDeleteVertexArrays" */,
        8596 /* "glDeleteVertexArrays" */,
        8617 /* "glDeleteVertexArraysAPPLE" */,
d14754 1
a14754 1
    return gl_provider_resolver(entrypoint_strings + 8643 /* "glDeleteVertexArraysOES" */,
d14761 1
a14761 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 8667 /* glDeleteVertexShaderEXT */);
d14767 1
a14767 1
    return gl_single_resolver(GL_extension_GL_EXT_depth_bounds_test, 8691 /* glDepthBoundsEXT */);
d14773 1
a14773 1
    return gl_single_resolver(GL_extension_GL_NV_depth_buffer_float, 8708 /* glDepthBoundsdNV */);
d14786 3
a14788 3
        8725 /* "glDepthFunc" */,
        8725 /* "glDepthFunc" */,
        8725 /* "glDepthFunc" */,
d14790 1
a14790 1
    return gl_provider_resolver(entrypoint_strings + 8725 /* "glDepthFunc" */,
d14804 3
a14806 3
        8737 /* "glDepthMask" */,
        8737 /* "glDepthMask" */,
        8737 /* "glDepthMask" */,
d14808 1
a14808 1
    return gl_provider_resolver(entrypoint_strings + 8737 /* "glDepthMask" */,
d14815 7
a14821 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 8749 /* glDepthRange */);
d14833 2
a14834 2
        8762 /* "glDepthRangeArrayv" */,
        8762 /* "glDepthRangeArrayv" */,
d14836 1
a14836 1
    return gl_provider_resolver(entrypoint_strings + 8762 /* "glDepthRangeArrayv" */,
d14849 2
a14850 2
        8781 /* "glDepthRangeIndexed" */,
        8781 /* "glDepthRangeIndexed" */,
d14852 1
a14852 1
    return gl_provider_resolver(entrypoint_strings + 8781 /* "glDepthRangeIndexed" */,
d14856 6
d14865 1
a14865 1
    return gl_single_resolver(GL_extension_GL_NV_depth_buffer_float, 8801 /* glDepthRangedNV */);
d14873 1
a14874 1
        GL_extension_GL_ARB_ES2_compatibility,
d14880 5
a14884 5
        8817 /* "glDepthRangef" */,
        8817 /* "glDepthRangef" */,
        8817 /* "glDepthRangef" */,
        8817 /* "glDepthRangef" */,
        8831 /* "glDepthRangefOES" */,
d14886 1
a14886 1
    return gl_provider_resolver(entrypoint_strings + 8817 /* "glDepthRangef" */,
d14896 1
a14897 1
        GL_extension_GL_ARB_ES2_compatibility,
d14902 5
a14906 5
        8831 /* "glDepthRangefOES" */,
        8817 /* "glDepthRangef" */,
        8817 /* "glDepthRangef" */,
        8817 /* "glDepthRangef" */,
        8817 /* "glDepthRangef" */,
d14908 1
a14908 1
    return gl_provider_resolver(entrypoint_strings + 8831 /* "glDepthRangefOES" */,
d14915 1
a14915 1
    return gl_single_resolver(OpenGL_ES_1_0, 8848 /* glDepthRangex */);
d14921 1
a14921 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 8862 /* glDepthRangexOES */);
d14929 1
a14930 1
        Desktop_OpenGL_2_0,
d14934 3
a14936 3
        8879 /* "glDetachObjectARB" */,
        8897 /* "glDetachShader" */,
        8897 /* "glDetachShader" */,
d14938 1
a14938 1
    return gl_provider_resolver(entrypoint_strings + 8879 /* "glDetachObjectARB" */,
d14946 1
a14947 1
        Desktop_OpenGL_2_0,
d14952 3
a14954 3
        8897 /* "glDetachShader" */,
        8897 /* "glDetachShader" */,
        8879 /* "glDetachObjectARB" */,
d14956 1
a14956 1
    return gl_provider_resolver(entrypoint_strings + 8897 /* "glDetachShader" */,
d14963 1
a14963 1
    return gl_single_resolver(GL_extension_GL_SGIS_detail_texture, 8912 /* glDetailTexFuncSGIS */);
d14976 3
a14978 3
        8932 /* "glDisable" */,
        8932 /* "glDisable" */,
        8932 /* "glDisable" */,
d14980 1
a14980 1
    return gl_provider_resolver(entrypoint_strings + 8932 /* "glDisable" */,
d14993 2
a14994 2
        8942 /* "glDisableClientState" */,
        8942 /* "glDisableClientState" */,
d14996 1
a14996 1
    return gl_provider_resolver(entrypoint_strings + 8942 /* "glDisableClientState" */,
d15003 1
a15003 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 8963 /* glDisableClientStateIndexedEXT */);
d15009 1
a15009 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 8994 /* glDisableClientStateiEXT */);
d15015 1
a15015 1
    return gl_single_resolver(GL_extension_GL_QCOM_driver_control, 9019 /* glDisableDriverControlQCOM */);
d15022 1
a15023 1
        GL_extension_GL_EXT_direct_state_access,
d15025 3
d15031 6
a15036 3
        9046 /* "glDisableIndexedEXT" */,
        9046 /* "glDisableIndexedEXT" */,
        9235 /* "glDisablei" */,
d15038 1
a15038 1
    return gl_provider_resolver(entrypoint_strings + 9046 /* "glDisableIndexedEXT" */,
d15045 17
a15061 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 9066 /* glDisableVariantClientStateEXT */);
d15067 1
a15067 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 9097 /* glDisableVertexArrayAttribEXT */);
d15073 1
a15073 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 9127 /* glDisableVertexArrayEXT */);
d15079 1
a15079 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 9151 /* glDisableVertexAttribAPPLE */);
d15086 1
d15088 1
a15088 1
        Desktop_OpenGL_2_0,
a15089 1
        GL_extension_GL_ARB_vertex_program,
d15093 4
a15096 4
        9178 /* "glDisableVertexAttribArray" */,
        9178 /* "glDisableVertexAttribArray" */,
        9205 /* "glDisableVertexAttribArrayARB" */,
        9205 /* "glDisableVertexAttribArrayARB" */,
d15098 1
a15098 1
    return gl_provider_resolver(entrypoint_strings + 9178 /* "glDisableVertexAttribArray" */,
d15106 1
d15108 1
a15108 1
        GL_extension_GL_ARB_vertex_program,
a15109 1
        Desktop_OpenGL_2_0,
d15113 4
a15116 4
        9205 /* "glDisableVertexAttribArrayARB" */,
        9205 /* "glDisableVertexAttribArrayARB" */,
        9178 /* "glDisableVertexAttribArray" */,
        9178 /* "glDisableVertexAttribArray" */,
d15118 1
a15118 1
    return gl_provider_resolver(entrypoint_strings + 9205 /* "glDisableVertexAttribArrayARB" */,
d15127 49
d15177 22
d15200 4
d15207 6
a15212 3
        9235 /* "glDisablei" */,
        9046 /* "glDisableIndexedEXT" */,
        9046 /* "glDisableIndexedEXT" */,
d15214 1
a15214 1
    return gl_provider_resolver(entrypoint_strings + 9235 /* "glDisablei" */,
d15221 1
a15221 1
    return gl_single_resolver(GL_extension_GL_EXT_discard_framebuffer, 9246 /* glDiscardFramebufferEXT */);
d15228 1
a15229 1
        Desktop_OpenGL_4_3,
d15234 3
a15236 3
        9270 /* "glDispatchCompute" */,
        9270 /* "glDispatchCompute" */,
        9270 /* "glDispatchCompute" */,
d15238 1
a15238 1
    return gl_provider_resolver(entrypoint_strings + 9270 /* "glDispatchCompute" */,
d15245 1
a15245 1
    return gl_single_resolver(GL_extension_GL_ARB_compute_variable_group_size, 9288 /* glDispatchComputeGroupSizeARB */);
d15252 1
a15253 1
        Desktop_OpenGL_4_3,
d15258 3
a15260 3
        9318 /* "glDispatchComputeIndirect" */,
        9318 /* "glDispatchComputeIndirect" */,
        9318 /* "glDispatchComputeIndirect" */,
d15262 1
a15262 1
    return gl_provider_resolver(entrypoint_strings + 9318 /* "glDispatchComputeIndirect" */,
d15271 1
a15272 1
        OpenGL_ES_1_0,
d15277 4
a15280 4
        9344 /* "glDrawArrays" */,
        9344 /* "glDrawArrays" */,
        9344 /* "glDrawArrays" */,
        9357 /* "glDrawArraysEXT" */,
d15282 1
a15282 1
    return gl_provider_resolver(entrypoint_strings + 9344 /* "glDrawArrays" */,
d15292 1
a15293 1
        OpenGL_ES_1_0,
d15297 4
a15300 4
        9357 /* "glDrawArraysEXT" */,
        9344 /* "glDrawArrays" */,
        9344 /* "glDrawArrays" */,
        9344 /* "glDrawArrays" */,
d15302 1
a15302 1
    return gl_provider_resolver(entrypoint_strings + 9357 /* "glDrawArraysEXT" */,
d15311 1
a15312 1
        GL_extension_GL_ARB_draw_indirect,
d15316 3
a15318 3
        9373 /* "glDrawArraysIndirect" */,
        9373 /* "glDrawArraysIndirect" */,
        9373 /* "glDrawArraysIndirect" */,
d15320 1
a15320 1
    return gl_provider_resolver(entrypoint_strings + 9373 /* "glDrawArraysIndirect" */,
d15338 7
a15344 7
        9394 /* "glDrawArraysInstanced" */,
        9394 /* "glDrawArraysInstanced" */,
        9416 /* "glDrawArraysInstancedANGLE" */,
        9443 /* "glDrawArraysInstancedARB" */,
        9502 /* "glDrawArraysInstancedEXT" */,
        9502 /* "glDrawArraysInstancedEXT" */,
        9527 /* "glDrawArraysInstancedNV" */,
d15346 1
a15346 1
    return gl_provider_resolver(entrypoint_strings + 9394 /* "glDrawArraysInstanced" */,
d15364 7
a15370 7
        9416 /* "glDrawArraysInstancedANGLE" */,
        9394 /* "glDrawArraysInstanced" */,
        9394 /* "glDrawArraysInstanced" */,
        9443 /* "glDrawArraysInstancedARB" */,
        9502 /* "glDrawArraysInstancedEXT" */,
        9502 /* "glDrawArraysInstancedEXT" */,
        9527 /* "glDrawArraysInstancedNV" */,
d15372 1
a15372 1
    return gl_provider_resolver(entrypoint_strings + 9416 /* "glDrawArraysInstancedANGLE" */,
d15390 7
a15396 7
        9443 /* "glDrawArraysInstancedARB" */,
        9394 /* "glDrawArraysInstanced" */,
        9394 /* "glDrawArraysInstanced" */,
        9416 /* "glDrawArraysInstancedANGLE" */,
        9502 /* "glDrawArraysInstancedEXT" */,
        9502 /* "glDrawArraysInstancedEXT" */,
        9527 /* "glDrawArraysInstancedNV" */,
d15398 1
a15398 1
    return gl_provider_resolver(entrypoint_strings + 9443 /* "glDrawArraysInstancedARB" */,
d15406 1
d15408 17
d15426 1
d15430 3
a15432 2
        9468 /* "glDrawArraysInstancedBaseInstance" */,
        9468 /* "glDrawArraysInstancedBaseInstance" */,
d15434 1
a15434 1
    return gl_provider_resolver(entrypoint_strings + 9468 /* "glDrawArraysInstancedBaseInstance" */,
d15452 7
a15458 7
        9502 /* "glDrawArraysInstancedEXT" */,
        9502 /* "glDrawArraysInstancedEXT" */,
        9394 /* "glDrawArraysInstanced" */,
        9394 /* "glDrawArraysInstanced" */,
        9416 /* "glDrawArraysInstancedANGLE" */,
        9443 /* "glDrawArraysInstancedARB" */,
        9527 /* "glDrawArraysInstancedNV" */,
d15460 1
a15460 1
    return gl_provider_resolver(entrypoint_strings + 9502 /* "glDrawArraysInstancedEXT" */,
d15478 7
a15484 7
        9527 /* "glDrawArraysInstancedNV" */,
        9394 /* "glDrawArraysInstanced" */,
        9394 /* "glDrawArraysInstanced" */,
        9416 /* "glDrawArraysInstancedANGLE" */,
        9443 /* "glDrawArraysInstancedARB" */,
        9502 /* "glDrawArraysInstancedEXT" */,
        9502 /* "glDrawArraysInstancedEXT" */,
d15486 1
a15486 1
    return gl_provider_resolver(entrypoint_strings + 9527 /* "glDrawArraysInstancedNV" */,
d15493 1
a15493 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 9551 /* glDrawBuffer */);
d15500 1
a15501 1
        Desktop_OpenGL_2_0,
d15508 5
a15512 5
        9564 /* "glDrawBuffers" */,
        9564 /* "glDrawBuffers" */,
        9578 /* "glDrawBuffersARB" */,
        9595 /* "glDrawBuffersATI" */,
        9612 /* "glDrawBuffersEXT" */,
d15514 1
a15514 1
    return gl_provider_resolver(entrypoint_strings + 9564 /* "glDrawBuffers" */,
d15523 1
a15524 1
        Desktop_OpenGL_2_0,
d15530 5
a15534 5
        9578 /* "glDrawBuffersARB" */,
        9564 /* "glDrawBuffers" */,
        9564 /* "glDrawBuffers" */,
        9595 /* "glDrawBuffersATI" */,
        9612 /* "glDrawBuffersEXT" */,
d15536 1
a15536 1
    return gl_provider_resolver(entrypoint_strings + 9578 /* "glDrawBuffersARB" */,
d15545 1
a15546 1
        Desktop_OpenGL_2_0,
d15552 5
a15556 5
        9595 /* "glDrawBuffersATI" */,
        9564 /* "glDrawBuffers" */,
        9564 /* "glDrawBuffers" */,
        9578 /* "glDrawBuffersARB" */,
        9612 /* "glDrawBuffersEXT" */,
d15558 1
a15558 1
    return gl_provider_resolver(entrypoint_strings + 9595 /* "glDrawBuffersATI" */,
d15567 1
a15568 1
        Desktop_OpenGL_2_0,
d15574 5
a15578 5
        9612 /* "glDrawBuffersEXT" */,
        9564 /* "glDrawBuffers" */,
        9564 /* "glDrawBuffers" */,
        9578 /* "glDrawBuffersARB" */,
        9595 /* "glDrawBuffersATI" */,
d15580 1
a15580 1
    return gl_provider_resolver(entrypoint_strings + 9612 /* "glDrawBuffersEXT" */,
d15587 1
a15587 1
    return gl_single_resolver(GL_extension_GL_EXT_multiview_draw_buffers, 9629 /* glDrawBuffersIndexedEXT */);
d15593 25
a15617 1
    return gl_single_resolver(GL_extension_GL_NV_draw_buffers, 9653 /* glDrawBuffersNV */);
d15623 1
a15623 1
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 9669 /* glDrawElementArrayAPPLE */);
d15629 1
a15629 1
    return gl_single_resolver(GL_extension_GL_ATI_element_array, 9693 /* glDrawElementArrayATI */);
d15637 1
a15638 1
        OpenGL_ES_1_0,
d15642 3
a15644 3
        9715 /* "glDrawElements" */,
        9715 /* "glDrawElements" */,
        9715 /* "glDrawElements" */,
d15646 1
a15646 1
    return gl_provider_resolver(entrypoint_strings + 9715 /* "glDrawElements" */,
d15656 2
d15661 4
a15664 2
        9730 /* "glDrawElementsBaseVertex" */,
        9730 /* "glDrawElementsBaseVertex" */,
d15666 41
a15706 1
    return gl_provider_resolver(entrypoint_strings + 9730 /* "glDrawElementsBaseVertex" */,
d15715 1
a15716 1
        GL_extension_GL_ARB_draw_indirect,
d15720 3
a15722 3
        9755 /* "glDrawElementsIndirect" */,
        9755 /* "glDrawElementsIndirect" */,
        9755 /* "glDrawElementsIndirect" */,
d15724 1
a15724 1
    return gl_provider_resolver(entrypoint_strings + 9755 /* "glDrawElementsIndirect" */,
d15742 7
a15748 7
        9778 /* "glDrawElementsInstanced" */,
        9778 /* "glDrawElementsInstanced" */,
        9802 /* "glDrawElementsInstancedANGLE" */,
        9831 /* "glDrawElementsInstancedARB" */,
        9974 /* "glDrawElementsInstancedEXT" */,
        9974 /* "glDrawElementsInstancedEXT" */,
        10001 /* "glDrawElementsInstancedNV" */,
d15750 1
a15750 1
    return gl_provider_resolver(entrypoint_strings + 9778 /* "glDrawElementsInstanced" */,
d15768 7
a15774 7
        9802 /* "glDrawElementsInstancedANGLE" */,
        9778 /* "glDrawElementsInstanced" */,
        9778 /* "glDrawElementsInstanced" */,
        9831 /* "glDrawElementsInstancedARB" */,
        9974 /* "glDrawElementsInstancedEXT" */,
        9974 /* "glDrawElementsInstancedEXT" */,
        10001 /* "glDrawElementsInstancedNV" */,
d15776 1
a15776 1
    return gl_provider_resolver(entrypoint_strings + 9802 /* "glDrawElementsInstancedANGLE" */,
d15794 7
a15800 7
        9831 /* "glDrawElementsInstancedARB" */,
        9778 /* "glDrawElementsInstanced" */,
        9778 /* "glDrawElementsInstanced" */,
        9802 /* "glDrawElementsInstancedANGLE" */,
        9974 /* "glDrawElementsInstancedEXT" */,
        9974 /* "glDrawElementsInstancedEXT" */,
        10001 /* "glDrawElementsInstancedNV" */,
d15802 1
a15802 1
    return gl_provider_resolver(entrypoint_strings + 9831 /* "glDrawElementsInstancedARB" */,
d15810 1
d15812 17
d15830 1
d15834 3
a15836 2
        9858 /* "glDrawElementsInstancedBaseInstance" */,
        9858 /* "glDrawElementsInstancedBaseInstance" */,
d15838 1
a15838 1
    return gl_provider_resolver(entrypoint_strings + 9858 /* "glDrawElementsInstancedBaseInstance" */,
d15848 2
d15853 4
a15856 2
        9894 /* "glDrawElementsInstancedBaseVertex" */,
        9894 /* "glDrawElementsInstancedBaseVertex" */,
d15858 1
a15858 1
    return gl_provider_resolver(entrypoint_strings + 9894 /* "glDrawElementsInstancedBaseVertex" */,
d15866 1
d15868 17
d15886 40
d15929 4
a15932 2
        9928 /* "glDrawElementsInstancedBaseVertexBaseInstance" */,
        9928 /* "glDrawElementsInstancedBaseVertexBaseInstance" */,
d15934 1
a15934 1
    return gl_provider_resolver(entrypoint_strings + 9928 /* "glDrawElementsInstancedBaseVertexBaseInstance" */,
d15952 7
a15958 7
        9974 /* "glDrawElementsInstancedEXT" */,
        9974 /* "glDrawElementsInstancedEXT" */,
        9778 /* "glDrawElementsInstanced" */,
        9778 /* "glDrawElementsInstanced" */,
        9802 /* "glDrawElementsInstancedANGLE" */,
        9831 /* "glDrawElementsInstancedARB" */,
        10001 /* "glDrawElementsInstancedNV" */,
d15960 1
a15960 1
    return gl_provider_resolver(entrypoint_strings + 9974 /* "glDrawElementsInstancedEXT" */,
d15978 7
a15984 7
        10001 /* "glDrawElementsInstancedNV" */,
        9778 /* "glDrawElementsInstanced" */,
        9778 /* "glDrawElementsInstanced" */,
        9802 /* "glDrawElementsInstancedANGLE" */,
        9831 /* "glDrawElementsInstancedARB" */,
        9974 /* "glDrawElementsInstancedEXT" */,
        9974 /* "glDrawElementsInstancedEXT" */,
d15986 1
a15986 1
    return gl_provider_resolver(entrypoint_strings + 10001 /* "glDrawElementsInstancedNV" */,
d15993 1
a15993 1
    return gl_single_resolver(GL_extension_GL_SUN_mesh_array, 10027 /* glDrawMeshArraysSUN */);
d15999 1
a15999 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 10047 /* glDrawPixels */);
d16005 1
a16005 1
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 10060 /* glDrawRangeElementArrayAPPLE */);
d16011 1
a16011 1
    return gl_single_resolver(GL_extension_GL_ATI_element_array, 10089 /* glDrawRangeElementArrayATI */);
d16024 3
a16026 3
        10116 /* "glDrawRangeElements" */,
        10116 /* "glDrawRangeElements" */,
        10166 /* "glDrawRangeElementsEXT" */,
d16028 1
a16028 1
    return gl_provider_resolver(entrypoint_strings + 10116 /* "glDrawRangeElements" */,
d16038 22
d16063 4
a16066 2
        10136 /* "glDrawRangeElementsBaseVertex" */,
        10136 /* "glDrawRangeElementsBaseVertex" */,
d16068 21
a16088 1
    return gl_provider_resolver(entrypoint_strings + 10136 /* "glDrawRangeElementsBaseVertex" */,
d16102 3
a16104 3
        10166 /* "glDrawRangeElementsEXT" */,
        10116 /* "glDrawRangeElements" */,
        10116 /* "glDrawRangeElements" */,
d16106 1
a16106 1
    return gl_provider_resolver(entrypoint_strings + 10166 /* "glDrawRangeElementsEXT" */,
d16113 1
a16113 1
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 10189 /* glDrawTexfOES */);
d16119 1
a16119 1
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 10203 /* glDrawTexfvOES */);
d16125 1
a16125 1
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 10218 /* glDrawTexiOES */);
d16131 1
a16131 1
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 10232 /* glDrawTexivOES */);
d16137 1
a16137 1
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 10247 /* glDrawTexsOES */);
d16143 1
a16143 1
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 10261 /* glDrawTexsvOES */);
d16149 1
a16149 1
    return gl_single_resolver(GL_extension_GL_NV_draw_texture, 10276 /* glDrawTextureNV */);
d16155 1
a16155 1
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 10292 /* glDrawTexxOES */);
d16161 1
a16161 1
    return gl_single_resolver(GL_extension_GL_OES_draw_texture, 10306 /* glDrawTexxvOES */);
d16174 3
a16176 3
        10321 /* "glDrawTransformFeedback" */,
        10321 /* "glDrawTransformFeedback" */,
        10378 /* "glDrawTransformFeedbackNV" */,
d16178 1
a16178 1
    return gl_provider_resolver(entrypoint_strings + 10321 /* "glDrawTransformFeedback" */,
d16191 2
a16192 2
        10345 /* "glDrawTransformFeedbackInstanced" */,
        10345 /* "glDrawTransformFeedbackInstanced" */,
d16194 1
a16194 1
    return gl_provider_resolver(entrypoint_strings + 10345 /* "glDrawTransformFeedbackInstanced" */,
d16208 3
a16210 3
        10378 /* "glDrawTransformFeedbackNV" */,
        10321 /* "glDrawTransformFeedback" */,
        10321 /* "glDrawTransformFeedback" */,
d16212 1
a16212 1
    return gl_provider_resolver(entrypoint_strings + 10378 /* "glDrawTransformFeedbackNV" */,
d16220 1
a16221 1
        Desktop_OpenGL_4_0,
d16225 2
a16226 2
        10404 /* "glDrawTransformFeedbackStream" */,
        10404 /* "glDrawTransformFeedbackStream" */,
d16228 1
a16228 1
    return gl_provider_resolver(entrypoint_strings + 10404 /* "glDrawTransformFeedbackStream" */,
d16241 2
a16242 2
        10434 /* "glDrawTransformFeedbackStreamInstanced" */,
        10434 /* "glDrawTransformFeedbackStreamInstanced" */,
d16244 1
a16244 1
    return gl_provider_resolver(entrypoint_strings + 10434 /* "glDrawTransformFeedbackStreamInstanced" */,
d16251 1
a16251 1
    return gl_single_resolver(GL_extension_GL_OES_EGL_image, 10473 /* glEGLImageTargetRenderbufferStorageOES */);
d16257 1
a16257 1
    return gl_single_resolver(GL_extension_GL_OES_EGL_image, 10512 /* glEGLImageTargetTexture2DOES */);
d16263 1
a16263 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 10541 /* glEdgeFlag */);
d16269 1
a16269 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 10552 /* glEdgeFlagFormatNV */);
d16275 1
a16275 1
    return gl_single_resolver(Desktop_OpenGL_1_1, 10571 /* glEdgeFlagPointer */);
d16281 1
a16281 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 10589 /* glEdgeFlagPointerEXT */);
d16287 1
a16287 1
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 10610 /* glEdgeFlagPointerListIBM */);
d16293 1
a16293 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 10635 /* glEdgeFlagv */);
d16299 1
a16299 1
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 10647 /* glElementPointerAPPLE */);
d16305 1
a16305 1
    return gl_single_resolver(GL_extension_GL_ATI_element_array, 10669 /* glElementPointerATI */);
d16318 3
a16320 3
        10689 /* "glEnable" */,
        10689 /* "glEnable" */,
        10689 /* "glEnable" */,
d16322 1
a16322 1
    return gl_provider_resolver(entrypoint_strings + 10689 /* "glEnable" */,
d16335 2
a16336 2
        10698 /* "glEnableClientState" */,
        10698 /* "glEnableClientState" */,
d16338 1
a16338 1
    return gl_provider_resolver(entrypoint_strings + 10698 /* "glEnableClientState" */,
d16345 1
a16345 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 10718 /* glEnableClientStateIndexedEXT */);
d16351 1
a16351 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 10748 /* glEnableClientStateiEXT */);
d16357 1
a16357 1
    return gl_single_resolver(GL_extension_GL_QCOM_driver_control, 10772 /* glEnableDriverControlQCOM */);
d16364 1
a16365 1
        GL_extension_GL_EXT_direct_state_access,
d16367 3
d16373 6
a16378 3
        10798 /* "glEnableIndexedEXT" */,
        10798 /* "glEnableIndexedEXT" */,
        10980 /* "glEnablei" */,
d16380 1
a16380 1
    return gl_provider_resolver(entrypoint_strings + 10798 /* "glEnableIndexedEXT" */,
d16387 17
a16403 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 10817 /* glEnableVariantClientStateEXT */);
d16409 1
a16409 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 10847 /* glEnableVertexArrayAttribEXT */);
d16415 1
a16415 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 10876 /* glEnableVertexArrayEXT */);
d16421 1
a16421 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 10899 /* glEnableVertexAttribAPPLE */);
d16428 1
d16430 1
a16430 1
        Desktop_OpenGL_2_0,
a16431 1
        GL_extension_GL_ARB_vertex_program,
d16435 4
a16438 4
        10925 /* "glEnableVertexAttribArray" */,
        10925 /* "glEnableVertexAttribArray" */,
        10951 /* "glEnableVertexAttribArrayARB" */,
        10951 /* "glEnableVertexAttribArrayARB" */,
d16440 1
a16440 1
    return gl_provider_resolver(entrypoint_strings + 10925 /* "glEnableVertexAttribArray" */,
d16448 1
d16450 1
a16450 1
        GL_extension_GL_ARB_vertex_program,
a16451 1
        Desktop_OpenGL_2_0,
d16455 4
a16458 4
        10951 /* "glEnableVertexAttribArrayARB" */,
        10951 /* "glEnableVertexAttribArrayARB" */,
        10925 /* "glEnableVertexAttribArray" */,
        10925 /* "glEnableVertexAttribArray" */,
d16460 1
a16460 1
    return gl_provider_resolver(entrypoint_strings + 10951 /* "glEnableVertexAttribArrayARB" */,
d16469 1
d16471 22
d16494 4
d16501 6
a16506 3
        10980 /* "glEnablei" */,
        10798 /* "glEnableIndexedEXT" */,
        10798 /* "glEnableIndexedEXT" */,
d16508 49
a16556 1
    return gl_provider_resolver(entrypoint_strings + 10980 /* "glEnablei" */,
d16563 1
a16563 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 10990 /* glEnd */);
d16576 3
a16578 3
        10996 /* "glEndConditionalRender" */,
        11019 /* "glEndConditionalRenderNV" */,
        11044 /* "glEndConditionalRenderNVX" */,
d16580 1
a16580 1
    return gl_provider_resolver(entrypoint_strings + 10996 /* "glEndConditionalRender" */,
d16594 3
a16596 3
        11019 /* "glEndConditionalRenderNV" */,
        10996 /* "glEndConditionalRender" */,
        11044 /* "glEndConditionalRenderNVX" */,
d16598 1
a16598 1
    return gl_provider_resolver(entrypoint_strings + 11019 /* "glEndConditionalRenderNV" */,
d16612 3
a16614 3
        11044 /* "glEndConditionalRenderNVX" */,
        10996 /* "glEndConditionalRender" */,
        11019 /* "glEndConditionalRenderNV" */,
d16616 1
a16616 1
    return gl_provider_resolver(entrypoint_strings + 11044 /* "glEndConditionalRenderNVX" */,
d16623 1
a16623 1
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 11070 /* glEndFragmentShaderATI */);
d16629 1
a16629 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11093 /* glEndList */);
d16635 1
a16635 1
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 11103 /* glEndOcclusionQueryNV */);
d16641 1
a16641 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 11125 /* glEndPerfMonitorAMD */);
d16647 1
a16647 1
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 11145 /* glEndPerfQueryINTEL */);
d16654 1
a16655 1
        Desktop_OpenGL_1_5,
d16660 3
a16662 3
        11165 /* "glEndQuery" */,
        11165 /* "glEndQuery" */,
        11176 /* "glEndQueryARB" */,
d16664 1
a16664 1
    return gl_provider_resolver(entrypoint_strings + 11165 /* "glEndQuery" */,
d16673 1
a16674 1
        Desktop_OpenGL_1_5,
d16678 3
a16680 3
        11176 /* "glEndQueryARB" */,
        11165 /* "glEndQuery" */,
        11165 /* "glEndQuery" */,
d16682 1
a16682 1
    return gl_provider_resolver(entrypoint_strings + 11176 /* "glEndQueryARB" */,
d16690 1
a16691 1
        GL_extension_GL_EXT_disjoint_timer_query,
d16695 2
a16696 2
        11190 /* "glEndQueryEXT" */,
        11190 /* "glEndQueryEXT" */,
d16698 1
a16698 1
    return gl_provider_resolver(entrypoint_strings + 11190 /* "glEndQueryEXT" */,
d16706 1
a16707 1
        Desktop_OpenGL_4_0,
d16711 2
a16712 2
        11204 /* "glEndQueryIndexed" */,
        11204 /* "glEndQueryIndexed" */,
d16714 1
a16714 1
    return gl_provider_resolver(entrypoint_strings + 11204 /* "glEndQueryIndexed" */,
d16721 1
a16721 1
    return gl_single_resolver(GL_extension_GL_QCOM_tiled_rendering, 11222 /* glEndTilingQCOM */);
d16735 4
a16738 4
        11238 /* "glEndTransformFeedback" */,
        11238 /* "glEndTransformFeedback" */,
        11261 /* "glEndTransformFeedbackEXT" */,
        11287 /* "glEndTransformFeedbackNV" */,
d16740 1
a16740 1
    return gl_provider_resolver(entrypoint_strings + 11238 /* "glEndTransformFeedback" */,
d16755 4
a16758 4
        11261 /* "glEndTransformFeedbackEXT" */,
        11238 /* "glEndTransformFeedback" */,
        11238 /* "glEndTransformFeedback" */,
        11287 /* "glEndTransformFeedbackNV" */,
d16760 1
a16760 1
    return gl_provider_resolver(entrypoint_strings + 11261 /* "glEndTransformFeedbackEXT" */,
d16775 4
a16778 4
        11287 /* "glEndTransformFeedbackNV" */,
        11238 /* "glEndTransformFeedback" */,
        11238 /* "glEndTransformFeedback" */,
        11261 /* "glEndTransformFeedbackEXT" */,
d16780 1
a16780 1
    return gl_provider_resolver(entrypoint_strings + 11287 /* "glEndTransformFeedbackNV" */,
d16787 1
a16787 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 11312 /* glEndVertexShaderEXT */);
d16793 1
a16793 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 11333 /* glEndVideoCaptureNV */);
d16799 1
a16799 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11353 /* glEvalCoord1d */);
d16805 1
a16805 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11367 /* glEvalCoord1dv */);
d16811 1
a16811 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11382 /* glEvalCoord1f */);
d16817 1
a16817 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11396 /* glEvalCoord1fv */);
d16823 1
a16823 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 11411 /* glEvalCoord1xOES */);
d16829 1
a16829 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 11428 /* glEvalCoord1xvOES */);
d16835 1
a16835 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11446 /* glEvalCoord2d */);
d16841 1
a16841 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11460 /* glEvalCoord2dv */);
d16847 1
a16847 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11475 /* glEvalCoord2f */);
d16853 1
a16853 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11489 /* glEvalCoord2fv */);
d16859 1
a16859 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 11504 /* glEvalCoord2xOES */);
d16865 1
a16865 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 11521 /* glEvalCoord2xvOES */);
d16871 1
a16871 1
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 11539 /* glEvalMapsNV */);
d16877 1
a16877 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11552 /* glEvalMesh1 */);
d16883 1
a16883 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11564 /* glEvalMesh2 */);
d16889 1
a16889 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11576 /* glEvalPoint1 */);
d16895 1
a16895 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11589 /* glEvalPoint2 */);
d16901 1
a16901 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 11602 /* glExecuteProgramNV */);
d16907 1
a16907 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 11621 /* glExtGetBufferPointervQCOM */);
d16913 1
a16913 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 11648 /* glExtGetBuffersQCOM */);
d16919 1
a16919 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 11668 /* glExtGetFramebuffersQCOM */);
d16925 1
a16925 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get2, 11693 /* glExtGetProgramBinarySourceQCOM */);
d16931 1
a16931 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get2, 11725 /* glExtGetProgramsQCOM */);
d16937 1
a16937 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 11746 /* glExtGetRenderbuffersQCOM */);
d16943 1
a16943 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get2, 11772 /* glExtGetShadersQCOM */);
d16949 1
a16949 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 11792 /* glExtGetTexLevelParameterivQCOM */);
d16955 1
a16955 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 11824 /* glExtGetTexSubImageQCOM */);
d16961 1
a16961 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 11848 /* glExtGetTexturesQCOM */);
d16967 1
a16967 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get2, 11869 /* glExtIsProgramBinaryQCOM */);
d16973 1
a16973 1
    return gl_single_resolver(GL_extension_GL_QCOM_extended_get, 11894 /* glExtTexObjectStateOverrideiQCOM */);
d16979 1
a16979 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 11927 /* glExtractComponentEXT */);
d16985 1
a16985 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 11949 /* glFeedbackBuffer */);
d16991 1
a16991 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 11966 /* glFeedbackBufferxOES */);
d17005 4
a17008 4
        11987 /* "glFenceSync" */,
        11987 /* "glFenceSync" */,
        11987 /* "glFenceSync" */,
        11999 /* "glFenceSyncAPPLE" */,
d17010 1
a17010 1
    return gl_provider_resolver(entrypoint_strings + 11987 /* "glFenceSync" */,
d17025 4
a17028 4
        11999 /* "glFenceSyncAPPLE" */,
        11987 /* "glFenceSync" */,
        11987 /* "glFenceSync" */,
        11987 /* "glFenceSync" */,
d17030 1
a17030 1
    return gl_provider_resolver(entrypoint_strings + 11999 /* "glFenceSyncAPPLE" */,
d17037 1
a17037 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 12016 /* glFinalCombinerInputNV */);
d17050 3
a17052 3
        12039 /* "glFinish" */,
        12039 /* "glFinish" */,
        12039 /* "glFinish" */,
d17054 1
a17054 1
    return gl_provider_resolver(entrypoint_strings + 12039 /* "glFinish" */,
d17061 1
a17061 1
    return gl_single_resolver(GL_extension_GL_SGIX_async, 12048 /* glFinishAsyncSGIX */);
d17067 1
a17067 1
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 12066 /* glFinishFenceAPPLE */);
d17073 1
a17073 1
    return gl_single_resolver(GL_extension_GL_NV_fence, 12085 /* glFinishFenceNV */);
d17079 1
a17079 1
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 12101 /* glFinishObjectAPPLE */);
d17085 1
a17085 1
    return gl_single_resolver(GL_extension_GL_SUNX_constant_data, 12121 /* glFinishTextureSUNX */);
d17098 3
a17100 3
        12141 /* "glFlush" */,
        12141 /* "glFlush" */,
        12141 /* "glFlush" */,
d17102 1
a17102 1
    return gl_provider_resolver(entrypoint_strings + 12141 /* "glFlush" */,
d17110 1
a17111 1
        Desktop_OpenGL_3_0,
d17118 5
a17122 5
        12149 /* "glFlushMappedBufferRange" */,
        12149 /* "glFlushMappedBufferRange" */,
        12149 /* "glFlushMappedBufferRange" */,
        12174 /* "glFlushMappedBufferRangeAPPLE" */,
        12204 /* "glFlushMappedBufferRangeEXT" */,
d17124 1
a17124 1
    return gl_provider_resolver(entrypoint_strings + 12149 /* "glFlushMappedBufferRange" */,
d17133 1
a17134 1
        Desktop_OpenGL_3_0,
d17140 5
a17144 5
        12174 /* "glFlushMappedBufferRangeAPPLE" */,
        12149 /* "glFlushMappedBufferRange" */,
        12149 /* "glFlushMappedBufferRange" */,
        12149 /* "glFlushMappedBufferRange" */,
        12204 /* "glFlushMappedBufferRangeEXT" */,
d17146 1
a17146 1
    return gl_provider_resolver(entrypoint_strings + 12174 /* "glFlushMappedBufferRangeAPPLE" */,
d17155 1
a17156 1
        Desktop_OpenGL_3_0,
d17162 21
a17182 5
        12204 /* "glFlushMappedBufferRangeEXT" */,
        12149 /* "glFlushMappedBufferRange" */,
        12149 /* "glFlushMappedBufferRange" */,
        12149 /* "glFlushMappedBufferRange" */,
        12174 /* "glFlushMappedBufferRangeAPPLE" */,
d17184 1
a17184 1
    return gl_provider_resolver(entrypoint_strings + 12204 /* "glFlushMappedBufferRangeEXT" */,
d17191 1
a17191 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 12232 /* glFlushMappedNamedBufferRangeEXT */);
d17197 1
a17197 1
    return gl_single_resolver(GL_extension_GL_NV_pixel_data_range, 12265 /* glFlushPixelDataRangeNV */);
d17203 1
a17203 1
    return gl_single_resolver(GL_extension_GL_SGIX_flush_raster, 12289 /* glFlushRasterSGIX */);
d17209 1
a17209 1
    return gl_single_resolver(GL_extension_GL_IBM_static_data, 12307 /* glFlushStaticDataIBM */);
d17215 1
a17215 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_array_range, 12328 /* glFlushVertexArrayRangeAPPLE */);
d17221 1
a17221 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_array_range, 12357 /* glFlushVertexArrayRangeNV */);
d17227 1
a17227 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 12383 /* glFogCoordFormatNV */);
d17239 2
a17240 2
        12402 /* "glFogCoordPointer" */,
        12420 /* "glFogCoordPointerEXT" */,
d17242 1
a17242 1
    return gl_provider_resolver(entrypoint_strings + 12402 /* "glFogCoordPointer" */,
d17255 2
a17256 2
        12420 /* "glFogCoordPointerEXT" */,
        12402 /* "glFogCoordPointer" */,
d17258 1
a17258 1
    return gl_provider_resolver(entrypoint_strings + 12420 /* "glFogCoordPointerEXT" */,
d17265 1
a17265 1
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 12441 /* glFogCoordPointerListIBM */);
d17277 2
a17278 2
        12466 /* "glFogCoordd" */,
        12478 /* "glFogCoorddEXT" */,
d17280 1
a17280 1
    return gl_provider_resolver(entrypoint_strings + 12466 /* "glFogCoordd" */,
d17293 2
a17294 2
        12478 /* "glFogCoorddEXT" */,
        12466 /* "glFogCoordd" */,
d17296 1
a17296 1
    return gl_provider_resolver(entrypoint_strings + 12478 /* "glFogCoorddEXT" */,
d17309 2
a17310 2
        12493 /* "glFogCoorddv" */,
        12506 /* "glFogCoorddvEXT" */,
d17312 1
a17312 1
    return gl_provider_resolver(entrypoint_strings + 12493 /* "glFogCoorddv" */,
d17325 2
a17326 2
        12506 /* "glFogCoorddvEXT" */,
        12493 /* "glFogCoorddv" */,
d17328 1
a17328 1
    return gl_provider_resolver(entrypoint_strings + 12506 /* "glFogCoorddvEXT" */,
d17341 2
a17342 2
        12522 /* "glFogCoordf" */,
        12534 /* "glFogCoordfEXT" */,
d17344 1
a17344 1
    return gl_provider_resolver(entrypoint_strings + 12522 /* "glFogCoordf" */,
d17357 2
a17358 2
        12534 /* "glFogCoordfEXT" */,
        12522 /* "glFogCoordf" */,
d17360 1
a17360 1
    return gl_provider_resolver(entrypoint_strings + 12534 /* "glFogCoordfEXT" */,
d17373 2
a17374 2
        12549 /* "glFogCoordfv" */,
        12562 /* "glFogCoordfvEXT" */,
d17376 1
a17376 1
    return gl_provider_resolver(entrypoint_strings + 12549 /* "glFogCoordfv" */,
d17389 2
a17390 2
        12562 /* "glFogCoordfvEXT" */,
        12549 /* "glFogCoordfv" */,
d17392 1
a17392 1
    return gl_provider_resolver(entrypoint_strings + 12562 /* "glFogCoordfvEXT" */,
d17399 1
a17399 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 12578 /* glFogCoordhNV */);
d17405 1
a17405 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 12592 /* glFogCoordhvNV */);
d17411 1
a17411 1
    return gl_single_resolver(GL_extension_GL_SGIS_fog_function, 12607 /* glFogFuncSGIS */);
d17423 2
a17424 2
        12621 /* "glFogf" */,
        12621 /* "glFogf" */,
d17426 1
a17426 1
    return gl_provider_resolver(entrypoint_strings + 12621 /* "glFogf" */,
d17439 2
a17440 2
        12628 /* "glFogfv" */,
        12628 /* "glFogfv" */,
d17442 1
a17442 1
    return gl_provider_resolver(entrypoint_strings + 12628 /* "glFogfv" */,
d17449 1
a17449 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 12636 /* glFogi */);
d17455 1
a17455 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 12643 /* glFogiv */);
d17461 1
a17461 1
    return gl_single_resolver(OpenGL_ES_1_0, 12651 /* glFogx */);
d17467 1
a17467 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 12658 /* glFogxOES */);
d17473 1
a17473 1
    return gl_single_resolver(OpenGL_ES_1_0, 12668 /* glFogxv */);
d17479 1
a17479 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 12676 /* glFogxvOES */);
d17485 7
a17491 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12687 /* glFragmentColorMaterialSGIX */);
d17497 1
a17497 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12715 /* glFragmentLightModelfSGIX */);
d17503 1
a17503 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12741 /* glFragmentLightModelfvSGIX */);
d17509 1
a17509 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12768 /* glFragmentLightModeliSGIX */);
d17515 1
a17515 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12794 /* glFragmentLightModelivSGIX */);
d17521 1
a17521 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12821 /* glFragmentLightfSGIX */);
d17527 1
a17527 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12842 /* glFragmentLightfvSGIX */);
d17533 1
a17533 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12864 /* glFragmentLightiSGIX */);
d17539 1
a17539 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12885 /* glFragmentLightivSGIX */);
d17545 1
a17545 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12907 /* glFragmentMaterialfSGIX */);
d17551 1
a17551 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12931 /* glFragmentMaterialfvSGIX */);
d17557 1
a17557 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12956 /* glFragmentMaterialiSGIX */);
d17563 1
a17563 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 12980 /* glFragmentMaterialivSGIX */);
d17569 1
a17569 1
    return gl_single_resolver(GL_extension_GL_GREMEDY_frame_terminator, 13005 /* glFrameTerminatorGREMEDY */);
d17575 1
a17575 1
    return gl_single_resolver(GL_extension_GL_SGIX_framezoom, 13030 /* glFrameZoomSGIX */);
d17581 1
a17581 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 13046 /* glFramebufferDrawBufferEXT */);
d17587 1
a17587 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 13073 /* glFramebufferDrawBuffersEXT */);
d17595 1
a17596 1
        GL_extension_GL_ARB_framebuffer_no_attachments,
d17600 3
a17602 3
        13101 /* "glFramebufferParameteri" */,
        13101 /* "glFramebufferParameteri" */,
        13101 /* "glFramebufferParameteri" */,
d17604 1
a17604 1
    return gl_provider_resolver(entrypoint_strings + 13101 /* "glFramebufferParameteri" */,
d17611 1
a17611 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 13125 /* glFramebufferReadBufferEXT */);
d17625 4
a17628 4
        13152 /* "glFramebufferRenderbuffer" */,
        13152 /* "glFramebufferRenderbuffer" */,
        13152 /* "glFramebufferRenderbuffer" */,
        13178 /* "glFramebufferRenderbufferEXT" */,
d17630 1
a17630 1
    return gl_provider_resolver(entrypoint_strings + 13152 /* "glFramebufferRenderbuffer" */,
d17645 4
a17648 4
        13178 /* "glFramebufferRenderbufferEXT" */,
        13152 /* "glFramebufferRenderbuffer" */,
        13152 /* "glFramebufferRenderbuffer" */,
        13152 /* "glFramebufferRenderbuffer" */,
d17650 1
a17650 1
    return gl_provider_resolver(entrypoint_strings + 13178 /* "glFramebufferRenderbufferEXT" */,
d17657 7
a17663 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 13207 /* glFramebufferRenderbufferOES */);
d17672 1
d17674 1
d17678 5
a17682 3
        13236 /* "glFramebufferTexture" */,
        13530 /* "glFramebufferTextureARB" */,
        13554 /* "glFramebufferTextureEXT" */,
d17684 1
a17684 1
    return gl_provider_resolver(entrypoint_strings + 13236 /* "glFramebufferTexture" */,
d17698 3
a17700 3
        13257 /* "glFramebufferTexture1D" */,
        13257 /* "glFramebufferTexture1D" */,
        13280 /* "glFramebufferTexture1DEXT" */,
d17702 1
a17702 1
    return gl_provider_resolver(entrypoint_strings + 13257 /* "glFramebufferTexture1D" */,
d17716 3
a17718 3
        13280 /* "glFramebufferTexture1DEXT" */,
        13257 /* "glFramebufferTexture1D" */,
        13257 /* "glFramebufferTexture1D" */,
d17720 1
a17720 1
    return gl_provider_resolver(entrypoint_strings + 13280 /* "glFramebufferTexture1DEXT" */,
d17735 4
a17738 4
        13306 /* "glFramebufferTexture2D" */,
        13306 /* "glFramebufferTexture2D" */,
        13306 /* "glFramebufferTexture2D" */,
        13329 /* "glFramebufferTexture2DEXT" */,
d17740 1
a17740 1
    return gl_provider_resolver(entrypoint_strings + 13306 /* "glFramebufferTexture2D" */,
d17755 4
a17758 4
        13329 /* "glFramebufferTexture2DEXT" */,
        13306 /* "glFramebufferTexture2D" */,
        13306 /* "glFramebufferTexture2D" */,
        13306 /* "glFramebufferTexture2D" */,
d17760 1
a17760 1
    return gl_provider_resolver(entrypoint_strings + 13329 /* "glFramebufferTexture2DEXT" */,
d17767 1
a17767 1
    return gl_single_resolver(GL_extension_GL_EXT_multisampled_render_to_texture, 13355 /* glFramebufferTexture2DMultisampleEXT */);
d17773 1
a17773 1
    return gl_single_resolver(GL_extension_GL_IMG_multisampled_render_to_texture, 13392 /* glFramebufferTexture2DMultisampleIMG */);
d17779 1
a17779 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 13429 /* glFramebufferTexture2DOES */);
d17793 4
a17796 4
        13455 /* "glFramebufferTexture3D" */,
        13455 /* "glFramebufferTexture3D" */,
        13478 /* "glFramebufferTexture3DEXT" */,
        13504 /* "glFramebufferTexture3DOES" */,
d17798 1
a17798 1
    return gl_provider_resolver(entrypoint_strings + 13455 /* "glFramebufferTexture3D" */,
d17813 4
a17816 4
        13478 /* "glFramebufferTexture3DEXT" */,
        13455 /* "glFramebufferTexture3D" */,
        13455 /* "glFramebufferTexture3D" */,
        13504 /* "glFramebufferTexture3DOES" */,
d17818 1
a17818 1
    return gl_provider_resolver(entrypoint_strings + 13478 /* "glFramebufferTexture3DEXT" */,
d17833 4
a17836 4
        13504 /* "glFramebufferTexture3DOES" */,
        13455 /* "glFramebufferTexture3D" */,
        13455 /* "glFramebufferTexture3D" */,
        13478 /* "glFramebufferTexture3DEXT" */,
d17838 1
a17838 1
    return gl_provider_resolver(entrypoint_strings + 13504 /* "glFramebufferTexture3DOES" */,
d17848 1
d17850 1
d17854 5
a17858 3
        13530 /* "glFramebufferTextureARB" */,
        13236 /* "glFramebufferTexture" */,
        13554 /* "glFramebufferTextureEXT" */,
d17860 1
a17860 1
    return gl_provider_resolver(entrypoint_strings + 13530 /* "glFramebufferTextureARB" */,
d17868 1
d17872 1
d17876 5
a17880 3
        13554 /* "glFramebufferTextureEXT" */,
        13236 /* "glFramebufferTexture" */,
        13530 /* "glFramebufferTextureARB" */,
d17882 1
a17882 1
    return gl_provider_resolver(entrypoint_strings + 13554 /* "glFramebufferTextureEXT" */,
d17895 2
a17896 2
        13578 /* "glFramebufferTextureFaceARB" */,
        13606 /* "glFramebufferTextureFaceEXT" */,
d17898 1
a17898 1
    return gl_provider_resolver(entrypoint_strings + 13578 /* "glFramebufferTextureFaceARB" */,
d17911 2
a17912 2
        13606 /* "glFramebufferTextureFaceEXT" */,
        13578 /* "glFramebufferTextureFaceARB" */,
d17914 1
a17914 1
    return gl_provider_resolver(entrypoint_strings + 13606 /* "glFramebufferTextureFaceEXT" */,
d17923 1
a17924 1
        GL_extension_GL_ARB_framebuffer_object,
d17926 1
d17931 6
a17936 5
        13634 /* "glFramebufferTextureLayer" */,
        13634 /* "glFramebufferTextureLayer" */,
        13634 /* "glFramebufferTextureLayer" */,
        13660 /* "glFramebufferTextureLayerARB" */,
        13689 /* "glFramebufferTextureLayerEXT" */,
d17938 1
a17938 1
    return gl_provider_resolver(entrypoint_strings + 13634 /* "glFramebufferTextureLayer" */,
d17948 1
d17950 1
a17950 1
        GL_extension_GL_ARB_framebuffer_object,
d17955 6
a17960 5
        13660 /* "glFramebufferTextureLayerARB" */,
        13634 /* "glFramebufferTextureLayer" */,
        13634 /* "glFramebufferTextureLayer" */,
        13634 /* "glFramebufferTextureLayer" */,
        13689 /* "glFramebufferTextureLayerEXT" */,
d17962 1
a17962 1
    return gl_provider_resolver(entrypoint_strings + 13660 /* "glFramebufferTextureLayerARB" */,
d17970 1
d17973 1
a17974 1
        GL_extension_GL_ARB_framebuffer_object,
d17979 34
a18012 5
        13689 /* "glFramebufferTextureLayerEXT" */,
        13634 /* "glFramebufferTextureLayer" */,
        13634 /* "glFramebufferTextureLayer" */,
        13634 /* "glFramebufferTextureLayer" */,
        13660 /* "glFramebufferTextureLayerARB" */,
d18014 1
a18014 1
    return gl_provider_resolver(entrypoint_strings + 13689 /* "glFramebufferTextureLayerEXT" */,
d18021 1
a18021 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 13718 /* glFreeObjectBufferATI */);
d18034 3
a18036 3
        13740 /* "glFrontFace" */,
        13740 /* "glFrontFace" */,
        13740 /* "glFrontFace" */,
d18038 1
a18038 1
    return gl_provider_resolver(entrypoint_strings + 13740 /* "glFrontFace" */,
d18045 1
a18045 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 13752 /* glFrustum */);
d18051 1
a18051 1
    return gl_single_resolver(OpenGL_ES_1_0, 13762 /* glFrustumf */);
d18057 1
a18057 1
    return gl_single_resolver(GL_extension_GL_OES_single_precision, 13773 /* glFrustumfOES */);
d18063 1
a18063 1
    return gl_single_resolver(OpenGL_ES_1_0, 13787 /* glFrustumx */);
d18069 1
a18069 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 13798 /* glFrustumxOES */);
d18075 1
a18075 1
    return gl_single_resolver(GL_extension_GL_SGIX_async, 13812 /* glGenAsyncMarkersSGIX */);
d18082 1
a18083 1
        Desktop_OpenGL_1_5,
d18089 4
a18092 4
        13834 /* "glGenBuffers" */,
        13834 /* "glGenBuffers" */,
        13834 /* "glGenBuffers" */,
        13847 /* "glGenBuffersARB" */,
d18094 1
a18094 1
    return gl_provider_resolver(entrypoint_strings + 13834 /* "glGenBuffers" */,
d18103 1
a18104 1
        Desktop_OpenGL_1_5,
d18109 4
a18112 4
        13847 /* "glGenBuffersARB" */,
        13834 /* "glGenBuffers" */,
        13834 /* "glGenBuffers" */,
        13834 /* "glGenBuffers" */,
d18114 1
a18114 1
    return gl_provider_resolver(entrypoint_strings + 13847 /* "glGenBuffersARB" */,
d18121 1
a18121 1
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 13863 /* glGenFencesAPPLE */);
d18127 1
a18127 1
    return gl_single_resolver(GL_extension_GL_NV_fence, 13880 /* glGenFencesNV */);
d18133 1
a18133 1
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 13894 /* glGenFragmentShadersATI */);
d18147 4
a18150 4
        13918 /* "glGenFramebuffers" */,
        13918 /* "glGenFramebuffers" */,
        13918 /* "glGenFramebuffers" */,
        13936 /* "glGenFramebuffersEXT" */,
d18152 1
a18152 1
    return gl_provider_resolver(entrypoint_strings + 13918 /* "glGenFramebuffers" */,
d18167 4
a18170 4
        13936 /* "glGenFramebuffersEXT" */,
        13918 /* "glGenFramebuffers" */,
        13918 /* "glGenFramebuffers" */,
        13918 /* "glGenFramebuffers" */,
d18172 1
a18172 1
    return gl_provider_resolver(entrypoint_strings + 13936 /* "glGenFramebuffersEXT" */,
d18179 1
a18179 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 13957 /* glGenFramebuffersOES */);
d18185 1
a18185 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 13978 /* glGenLists */);
d18191 1
a18191 1
    return gl_single_resolver(GL_extension_GL_AMD_name_gen_delete, 13989 /* glGenNamesAMD */);
d18197 1
a18197 1
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 14003 /* glGenOcclusionQueriesNV */);
d18203 1
a18203 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 14027 /* glGenPathsNV */);
d18209 1
a18209 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 14040 /* glGenPerfMonitorsAMD */);
d18217 1
a18218 1
        GL_extension_GL_ARB_separate_shader_objects,
d18222 3
a18224 3
        14061 /* "glGenProgramPipelines" */,
        14061 /* "glGenProgramPipelines" */,
        14061 /* "glGenProgramPipelines" */,
d18226 1
a18226 1
    return gl_provider_resolver(entrypoint_strings + 14061 /* "glGenProgramPipelines" */,
d18233 1
a18233 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 14083 /* glGenProgramPipelinesEXT */);
d18240 1
a18241 1
        GL_extension_GL_ARB_fragment_program,
d18246 3
a18248 3
        14108 /* "glGenProgramsARB" */,
        14108 /* "glGenProgramsARB" */,
        14125 /* "glGenProgramsNV" */,
d18250 1
a18250 1
    return gl_provider_resolver(entrypoint_strings + 14108 /* "glGenProgramsARB" */,
d18259 1
a18260 1
        GL_extension_GL_ARB_fragment_program,
d18264 3
a18266 3
        14125 /* "glGenProgramsNV" */,
        14108 /* "glGenProgramsARB" */,
        14108 /* "glGenProgramsARB" */,
d18268 1
a18268 1
    return gl_provider_resolver(entrypoint_strings + 14125 /* "glGenProgramsNV" */,
d18276 1
a18277 1
        Desktop_OpenGL_1_5,
d18282 3
a18284 3
        14141 /* "glGenQueries" */,
        14141 /* "glGenQueries" */,
        14154 /* "glGenQueriesARB" */,
d18286 1
a18286 1
    return gl_provider_resolver(entrypoint_strings + 14141 /* "glGenQueries" */,
d18295 1
a18296 1
        Desktop_OpenGL_1_5,
d18300 3
a18302 3
        14154 /* "glGenQueriesARB" */,
        14141 /* "glGenQueries" */,
        14141 /* "glGenQueries" */,
d18304 1
a18304 1
    return gl_provider_resolver(entrypoint_strings + 14154 /* "glGenQueriesARB" */,
d18312 1
a18313 1
        GL_extension_GL_EXT_disjoint_timer_query,
d18317 2
a18318 2
        14170 /* "glGenQueriesEXT" */,
        14170 /* "glGenQueriesEXT" */,
d18320 1
a18320 1
    return gl_provider_resolver(entrypoint_strings + 14170 /* "glGenQueriesEXT" */,
d18335 4
a18338 4
        14186 /* "glGenRenderbuffers" */,
        14186 /* "glGenRenderbuffers" */,
        14186 /* "glGenRenderbuffers" */,
        14205 /* "glGenRenderbuffersEXT" */,
d18340 1
a18340 1
    return gl_provider_resolver(entrypoint_strings + 14186 /* "glGenRenderbuffers" */,
d18355 4
a18358 4
        14205 /* "glGenRenderbuffersEXT" */,
        14186 /* "glGenRenderbuffers" */,
        14186 /* "glGenRenderbuffers" */,
        14186 /* "glGenRenderbuffers" */,
d18360 1
a18360 1
    return gl_provider_resolver(entrypoint_strings + 14205 /* "glGenRenderbuffersEXT" */,
d18367 1
a18367 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 14227 /* glGenRenderbuffersOES */);
d18374 1
a18375 1
        Desktop_OpenGL_3_3,
d18380 3
a18382 3
        14249 /* "glGenSamplers" */,
        14249 /* "glGenSamplers" */,
        14249 /* "glGenSamplers" */,
d18384 1
a18384 1
    return gl_provider_resolver(entrypoint_strings + 14249 /* "glGenSamplers" */,
d18391 1
a18391 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 14263 /* glGenSymbolsEXT */);
d18399 1
a18400 1
        OpenGL_ES_1_0,
d18404 3
a18406 3
        14279 /* "glGenTextures" */,
        14279 /* "glGenTextures" */,
        14279 /* "glGenTextures" */,
d18408 1
a18408 1
    return gl_provider_resolver(entrypoint_strings + 14279 /* "glGenTextures" */,
d18415 1
a18415 1
    return gl_single_resolver(GL_extension_GL_EXT_texture_object, 14293 /* glGenTexturesEXT */);
d18423 1
a18424 1
        GL_extension_GL_ARB_transform_feedback2,
d18429 4
a18432 4
        14310 /* "glGenTransformFeedbacks" */,
        14310 /* "glGenTransformFeedbacks" */,
        14310 /* "glGenTransformFeedbacks" */,
        14334 /* "glGenTransformFeedbacksNV" */,
d18434 1
a18434 1
    return gl_provider_resolver(entrypoint_strings + 14310 /* "glGenTransformFeedbacks" */,
d18444 1
a18445 1
        GL_extension_GL_ARB_transform_feedback2,
d18449 4
a18452 4
        14334 /* "glGenTransformFeedbacksNV" */,
        14310 /* "glGenTransformFeedbacks" */,
        14310 /* "glGenTransformFeedbacks" */,
        14310 /* "glGenTransformFeedbacks" */,
d18454 1
a18454 1
    return gl_provider_resolver(entrypoint_strings + 14334 /* "glGenTransformFeedbacksNV" */,
d18463 1
a18464 1
        GL_extension_GL_ARB_vertex_array_object,
d18470 5
a18474 5
        14360 /* "glGenVertexArrays" */,
        14360 /* "glGenVertexArrays" */,
        14360 /* "glGenVertexArrays" */,
        14378 /* "glGenVertexArraysAPPLE" */,
        14401 /* "glGenVertexArraysOES" */,
d18476 1
a18476 1
    return gl_provider_resolver(entrypoint_strings + 14360 /* "glGenVertexArrays" */,
d18486 1
a18487 1
        GL_extension_GL_ARB_vertex_array_object,
d18492 5
a18496 5
        14378 /* "glGenVertexArraysAPPLE" */,
        14360 /* "glGenVertexArrays" */,
        14360 /* "glGenVertexArrays" */,
        14360 /* "glGenVertexArrays" */,
        14401 /* "glGenVertexArraysOES" */,
d18498 1
a18498 1
    return gl_provider_resolver(entrypoint_strings + 14378 /* "glGenVertexArraysAPPLE" */,
d18508 1
a18509 1
        GL_extension_GL_ARB_vertex_array_object,
d18514 5
a18518 5
        14401 /* "glGenVertexArraysOES" */,
        14360 /* "glGenVertexArrays" */,
        14360 /* "glGenVertexArrays" */,
        14360 /* "glGenVertexArrays" */,
        14378 /* "glGenVertexArraysAPPLE" */,
d18520 1
a18520 1
    return gl_provider_resolver(entrypoint_strings + 14401 /* "glGenVertexArraysOES" */,
d18527 1
a18527 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 14422 /* glGenVertexShadersEXT */);
d18541 4
a18544 4
        14444 /* "glGenerateMipmap" */,
        14444 /* "glGenerateMipmap" */,
        14444 /* "glGenerateMipmap" */,
        14461 /* "glGenerateMipmapEXT" */,
d18546 1
a18546 1
    return gl_provider_resolver(entrypoint_strings + 14444 /* "glGenerateMipmap" */,
d18561 4
a18564 4
        14461 /* "glGenerateMipmapEXT" */,
        14444 /* "glGenerateMipmap" */,
        14444 /* "glGenerateMipmap" */,
        14444 /* "glGenerateMipmap" */,
d18566 1
a18566 1
    return gl_provider_resolver(entrypoint_strings + 14461 /* "glGenerateMipmapEXT" */,
d18573 1
a18573 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 14481 /* glGenerateMipmapOES */);
d18579 17
a18595 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 14501 /* glGenerateMultiTexMipmapEXT */);
d18601 1
a18601 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 14529 /* glGenerateTextureMipmapEXT */);
d18613 2
a18614 2
        14556 /* "glGetActiveAtomicCounterBufferiv" */,
        14556 /* "glGetActiveAtomicCounterBufferiv" */,
d18616 1
a18616 1
    return gl_provider_resolver(entrypoint_strings + 14556 /* "glGetActiveAtomicCounterBufferiv" */,
d18624 1
a18625 1
        Desktop_OpenGL_2_0,
d18630 3
a18632 3
        14589 /* "glGetActiveAttrib" */,
        14589 /* "glGetActiveAttrib" */,
        14607 /* "glGetActiveAttribARB" */,
d18634 1
a18634 1
    return gl_provider_resolver(entrypoint_strings + 14589 /* "glGetActiveAttrib" */,
d18643 1
a18644 1
        Desktop_OpenGL_2_0,
d18648 3
a18650 3
        14607 /* "glGetActiveAttribARB" */,
        14589 /* "glGetActiveAttrib" */,
        14589 /* "glGetActiveAttrib" */,
d18652 1
a18652 1
    return gl_provider_resolver(entrypoint_strings + 14607 /* "glGetActiveAttribARB" */,
d18665 2
a18666 2
        14628 /* "glGetActiveSubroutineName" */,
        14628 /* "glGetActiveSubroutineName" */,
d18668 1
a18668 1
    return gl_provider_resolver(entrypoint_strings + 14628 /* "glGetActiveSubroutineName" */,
d18681 2
a18682 2
        14654 /* "glGetActiveSubroutineUniformName" */,
        14654 /* "glGetActiveSubroutineUniformName" */,
d18684 1
a18684 1
    return gl_provider_resolver(entrypoint_strings + 14654 /* "glGetActiveSubroutineUniformName" */,
d18697 2
a18698 2
        14687 /* "glGetActiveSubroutineUniformiv" */,
        14687 /* "glGetActiveSubroutineUniformiv" */,
d18700 1
a18700 1
    return gl_provider_resolver(entrypoint_strings + 14687 /* "glGetActiveSubroutineUniformiv" */,
d18708 1
a18709 1
        Desktop_OpenGL_2_0,
d18714 3
a18716 3
        14718 /* "glGetActiveUniform" */,
        14718 /* "glGetActiveUniform" */,
        14737 /* "glGetActiveUniformARB" */,
d18718 1
a18718 1
    return gl_provider_resolver(entrypoint_strings + 14718 /* "glGetActiveUniform" */,
d18727 1
a18728 1
        Desktop_OpenGL_2_0,
d18732 3
a18734 3
        14737 /* "glGetActiveUniformARB" */,
        14718 /* "glGetActiveUniform" */,
        14718 /* "glGetActiveUniform" */,
d18736 1
a18736 1
    return gl_provider_resolver(entrypoint_strings + 14737 /* "glGetActiveUniformARB" */,
d18744 1
a18745 1
        Desktop_OpenGL_3_1,
d18750 3
a18752 3
        14759 /* "glGetActiveUniformBlockName" */,
        14759 /* "glGetActiveUniformBlockName" */,
        14759 /* "glGetActiveUniformBlockName" */,
d18754 1
a18754 1
    return gl_provider_resolver(entrypoint_strings + 14759 /* "glGetActiveUniformBlockName" */,
d18762 1
a18763 1
        Desktop_OpenGL_3_1,
d18768 3
a18770 3
        14787 /* "glGetActiveUniformBlockiv" */,
        14787 /* "glGetActiveUniformBlockiv" */,
        14787 /* "glGetActiveUniformBlockiv" */,
d18772 1
a18772 1
    return gl_provider_resolver(entrypoint_strings + 14787 /* "glGetActiveUniformBlockiv" */,
d18780 1
a18781 1
        Desktop_OpenGL_3_1,
d18785 2
a18786 2
        14813 /* "glGetActiveUniformName" */,
        14813 /* "glGetActiveUniformName" */,
d18788 1
a18788 1
    return gl_provider_resolver(entrypoint_strings + 14813 /* "glGetActiveUniformName" */,
d18796 1
a18797 1
        Desktop_OpenGL_3_1,
d18802 3
a18804 3
        14836 /* "glGetActiveUniformsiv" */,
        14836 /* "glGetActiveUniformsiv" */,
        14836 /* "glGetActiveUniformsiv" */,
d18806 1
a18806 1
    return gl_provider_resolver(entrypoint_strings + 14836 /* "glGetActiveUniformsiv" */,
d18813 1
a18813 1
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 14858 /* glGetActiveVaryingNV */);
d18819 1
a18819 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 14879 /* glGetArrayObjectfvATI */);
d18825 1
a18825 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 14901 /* glGetArrayObjectivATI */);
d18831 1
a18831 1
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 14923 /* glGetAttachedObjectsARB */);
d18838 1
a18839 1
        Desktop_OpenGL_2_0,
d18843 2
a18844 2
        14947 /* "glGetAttachedShaders" */,
        14947 /* "glGetAttachedShaders" */,
d18846 1
a18846 1
    return gl_provider_resolver(entrypoint_strings + 14947 /* "glGetAttachedShaders" */,
d18854 1
a18855 1
        Desktop_OpenGL_2_0,
d18860 3
a18862 3
        14968 /* "glGetAttribLocation" */,
        14968 /* "glGetAttribLocation" */,
        14988 /* "glGetAttribLocationARB" */,
d18864 1
a18864 1
    return gl_provider_resolver(entrypoint_strings + 14968 /* "glGetAttribLocation" */,
d18873 1
a18874 1
        Desktop_OpenGL_2_0,
d18878 3
a18880 3
        14988 /* "glGetAttribLocationARB" */,
        14968 /* "glGetAttribLocation" */,
        14968 /* "glGetAttribLocation" */,
d18882 1
a18882 1
    return gl_provider_resolver(entrypoint_strings + 14988 /* "glGetAttribLocationARB" */,
d18890 1
a18891 1
        GL_extension_GL_EXT_direct_state_access,
d18897 4
a18900 4
        15011 /* "glGetBooleanIndexedvEXT" */,
        15011 /* "glGetBooleanIndexedvEXT" */,
        15035 /* "glGetBooleani_v" */,
        15035 /* "glGetBooleani_v" */,
d18902 1
a18902 1
    return gl_provider_resolver(entrypoint_strings + 15011 /* "glGetBooleanIndexedvEXT" */,
d18912 1
a18913 1
        GL_extension_GL_EXT_direct_state_access,
d18917 4
a18920 4
        15035 /* "glGetBooleani_v" */,
        15035 /* "glGetBooleani_v" */,
        15011 /* "glGetBooleanIndexedvEXT" */,
        15011 /* "glGetBooleanIndexedvEXT" */,
d18922 1
a18922 1
    return gl_provider_resolver(entrypoint_strings + 15035 /* "glGetBooleani_v" */,
d18936 3
a18938 3
        15051 /* "glGetBooleanv" */,
        15051 /* "glGetBooleanv" */,
        15051 /* "glGetBooleanv" */,
d18940 1
a18940 1
    return gl_provider_resolver(entrypoint_strings + 15051 /* "glGetBooleanv" */,
d18953 2
a18954 2
        15065 /* "glGetBufferParameteri64v" */,
        15065 /* "glGetBufferParameteri64v" */,
d18956 1
a18956 1
    return gl_provider_resolver(entrypoint_strings + 15065 /* "glGetBufferParameteri64v" */,
d18964 1
a18965 1
        Desktop_OpenGL_1_5,
d18971 4
a18974 4
        15090 /* "glGetBufferParameteriv" */,
        15090 /* "glGetBufferParameteriv" */,
        15090 /* "glGetBufferParameteriv" */,
        15113 /* "glGetBufferParameterivARB" */,
d18976 1
a18976 1
    return gl_provider_resolver(entrypoint_strings + 15090 /* "glGetBufferParameteriv" */,
d18985 1
a18986 1
        Desktop_OpenGL_1_5,
d18991 4
a18994 4
        15113 /* "glGetBufferParameterivARB" */,
        15090 /* "glGetBufferParameteriv" */,
        15090 /* "glGetBufferParameteriv" */,
        15090 /* "glGetBufferParameteriv" */,
d18996 1
a18996 1
    return gl_provider_resolver(entrypoint_strings + 15113 /* "glGetBufferParameterivARB" */,
d19003 1
a19003 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 15139 /* glGetBufferParameterui64vNV */);
d19010 1
a19011 1
        Desktop_OpenGL_1_5,
d19017 4
a19020 4
        15167 /* "glGetBufferPointerv" */,
        15167 /* "glGetBufferPointerv" */,
        15187 /* "glGetBufferPointervARB" */,
        15210 /* "glGetBufferPointervOES" */,
d19022 1
a19022 1
    return gl_provider_resolver(entrypoint_strings + 15167 /* "glGetBufferPointerv" */,
d19031 1
a19032 1
        Desktop_OpenGL_1_5,
d19037 4
a19040 4
        15187 /* "glGetBufferPointervARB" */,
        15167 /* "glGetBufferPointerv" */,
        15167 /* "glGetBufferPointerv" */,
        15210 /* "glGetBufferPointervOES" */,
d19042 1
a19042 1
    return gl_provider_resolver(entrypoint_strings + 15187 /* "glGetBufferPointervARB" */,
d19051 1
a19052 1
        Desktop_OpenGL_1_5,
d19057 4
a19060 4
        15210 /* "glGetBufferPointervOES" */,
        15167 /* "glGetBufferPointerv" */,
        15167 /* "glGetBufferPointerv" */,
        15187 /* "glGetBufferPointervARB" */,
d19062 1
a19062 1
    return gl_provider_resolver(entrypoint_strings + 15210 /* "glGetBufferPointervOES" */,
d19075 2
a19076 2
        15233 /* "glGetBufferSubData" */,
        15252 /* "glGetBufferSubDataARB" */,
d19078 1
a19078 1
    return gl_provider_resolver(entrypoint_strings + 15233 /* "glGetBufferSubData" */,
d19091 2
a19092 2
        15252 /* "glGetBufferSubDataARB" */,
        15233 /* "glGetBufferSubData" */,
d19094 1
a19094 1
    return gl_provider_resolver(entrypoint_strings + 15252 /* "glGetBufferSubDataARB" */,
d19101 1
a19101 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 15274 /* glGetClipPlane */);
d19107 1
a19107 1
    return gl_single_resolver(OpenGL_ES_1_0, 15289 /* glGetClipPlanef */);
d19113 1
a19113 1
    return gl_single_resolver(GL_extension_GL_OES_single_precision, 15305 /* glGetClipPlanefOES */);
d19119 1
a19119 1
    return gl_single_resolver(OpenGL_ES_1_0, 15324 /* glGetClipPlanex */);
d19125 1
a19125 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 15340 /* glGetClipPlanexOES */);
d19137 2
a19138 2
        15359 /* "glGetColorTable" */,
        15375 /* "glGetColorTableEXT" */,
d19140 1
a19140 1
    return gl_provider_resolver(entrypoint_strings + 15359 /* "glGetColorTable" */,
d19153 2
a19154 2
        15375 /* "glGetColorTableEXT" */,
        15359 /* "glGetColorTable" */,
d19156 1
a19156 1
    return gl_provider_resolver(entrypoint_strings + 15375 /* "glGetColorTableEXT" */,
d19169 2
a19170 2
        15394 /* "glGetColorTableParameterfv" */,
        15421 /* "glGetColorTableParameterfvEXT" */,
d19172 1
a19172 1
    return gl_provider_resolver(entrypoint_strings + 15394 /* "glGetColorTableParameterfv" */,
d19185 2
a19186 2
        15421 /* "glGetColorTableParameterfvEXT" */,
        15394 /* "glGetColorTableParameterfv" */,
d19188 1
a19188 1
    return gl_provider_resolver(entrypoint_strings + 15421 /* "glGetColorTableParameterfvEXT" */,
d19195 1
a19195 1
    return gl_single_resolver(GL_extension_GL_SGI_color_table, 15451 /* glGetColorTableParameterfvSGI */);
d19207 2
a19208 2
        15481 /* "glGetColorTableParameteriv" */,
        15508 /* "glGetColorTableParameterivEXT" */,
d19210 1
a19210 1
    return gl_provider_resolver(entrypoint_strings + 15481 /* "glGetColorTableParameteriv" */,
d19223 2
a19224 2
        15508 /* "glGetColorTableParameterivEXT" */,
        15481 /* "glGetColorTableParameteriv" */,
d19226 1
a19226 1
    return gl_provider_resolver(entrypoint_strings + 15508 /* "glGetColorTableParameterivEXT" */,
d19233 1
a19233 1
    return gl_single_resolver(GL_extension_GL_SGI_color_table, 15538 /* glGetColorTableParameterivSGI */);
d19239 1
a19239 1
    return gl_single_resolver(GL_extension_GL_SGI_color_table, 15568 /* glGetColorTableSGI */);
d19245 1
a19245 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 15587 /* glGetCombinerInputParameterfvNV */);
d19251 1
a19251 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 15619 /* glGetCombinerInputParameterivNV */);
d19257 1
a19257 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 15651 /* glGetCombinerOutputParameterfvNV */);
d19263 1
a19263 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 15684 /* glGetCombinerOutputParameterivNV */);
d19269 7
a19275 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners2, 15717 /* glGetCombinerStageParameterfvNV */);
d19281 1
a19281 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 15749 /* glGetCompressedMultiTexImageEXT */);
d19293 2
a19294 2
        15781 /* "glGetCompressedTexImage" */,
        15805 /* "glGetCompressedTexImageARB" */,
d19296 1
a19296 1
    return gl_provider_resolver(entrypoint_strings + 15781 /* "glGetCompressedTexImage" */,
d19309 18
a19326 2
        15805 /* "glGetCompressedTexImageARB" */,
        15781 /* "glGetCompressedTexImage" */,
d19328 1
a19328 1
    return gl_provider_resolver(entrypoint_strings + 15805 /* "glGetCompressedTexImageARB" */,
d19335 17
a19351 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 15832 /* glGetCompressedTextureImageEXT */);
d19357 1
a19357 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 15863 /* glGetConvolutionFilter */);
d19363 1
a19363 1
    return gl_single_resolver(GL_extension_GL_EXT_convolution, 15886 /* glGetConvolutionFilterEXT */);
d19369 1
a19369 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 15912 /* glGetConvolutionParameterfv */);
d19375 1
a19375 1
    return gl_single_resolver(GL_extension_GL_EXT_convolution, 15940 /* glGetConvolutionParameterfvEXT */);
d19381 1
a19381 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 15971 /* glGetConvolutionParameteriv */);
d19387 1
a19387 1
    return gl_single_resolver(GL_extension_GL_EXT_convolution, 15999 /* glGetConvolutionParameterivEXT */);
d19393 7
a19399 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 16030 /* glGetConvolutionParameterxvOES */);
d19413 4
a19416 4
        16061 /* "glGetDebugMessageLog" */,
        16061 /* "glGetDebugMessageLog" */,
        16106 /* "glGetDebugMessageLogARB" */,
        16130 /* "glGetDebugMessageLogKHR" */,
d19418 1
a19418 1
    return gl_provider_resolver(entrypoint_strings + 16061 /* "glGetDebugMessageLog" */,
d19425 1
a19425 1
    return gl_single_resolver(GL_extension_GL_AMD_debug_output, 16082 /* glGetDebugMessageLogAMD */);
d19439 4
a19442 4
        16106 /* "glGetDebugMessageLogARB" */,
        16061 /* "glGetDebugMessageLog" */,
        16061 /* "glGetDebugMessageLog" */,
        16130 /* "glGetDebugMessageLogKHR" */,
d19444 1
a19444 1
    return gl_provider_resolver(entrypoint_strings + 16106 /* "glGetDebugMessageLogARB" */,
d19459 4
a19462 4
        16130 /* "glGetDebugMessageLogKHR" */,
        16061 /* "glGetDebugMessageLog" */,
        16061 /* "glGetDebugMessageLog" */,
        16106 /* "glGetDebugMessageLogARB" */,
d19464 1
a19464 1
    return gl_provider_resolver(entrypoint_strings + 16130 /* "glGetDebugMessageLogKHR" */,
d19471 1
a19471 1
    return gl_single_resolver(GL_extension_GL_SGIS_detail_texture, 16154 /* glGetDetailTexFuncSGIS */);
d19485 4
a19488 4
        16177 /* "glGetDoubleIndexedvEXT" */,
        16200 /* "glGetDoublei_v" */,
        16200 /* "glGetDoublei_v" */,
        16215 /* "glGetDoublei_vEXT" */,
d19490 1
a19490 1
    return gl_provider_resolver(entrypoint_strings + 16177 /* "glGetDoubleIndexedvEXT" */,
d19505 4
a19508 4
        16200 /* "glGetDoublei_v" */,
        16200 /* "glGetDoublei_v" */,
        16177 /* "glGetDoubleIndexedvEXT" */,
        16215 /* "glGetDoublei_vEXT" */,
d19510 1
a19510 1
    return gl_provider_resolver(entrypoint_strings + 16200 /* "glGetDoublei_v" */,
d19525 4
a19528 4
        16215 /* "glGetDoublei_vEXT" */,
        16177 /* "glGetDoubleIndexedvEXT" */,
        16200 /* "glGetDoublei_v" */,
        16200 /* "glGetDoublei_v" */,
d19530 1
a19530 1
    return gl_provider_resolver(entrypoint_strings + 16215 /* "glGetDoublei_vEXT" */,
d19537 1
a19537 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 16233 /* glGetDoublev */);
d19543 1
a19543 1
    return gl_single_resolver(GL_extension_GL_QCOM_driver_control, 16246 /* glGetDriverControlStringQCOM */);
d19549 1
a19549 1
    return gl_single_resolver(GL_extension_GL_QCOM_driver_control, 16275 /* glGetDriverControlsQCOM */);
d19562 3
a19564 3
        16299 /* "glGetError" */,
        16299 /* "glGetError" */,
        16299 /* "glGetError" */,
d19566 1
a19566 1
    return gl_provider_resolver(entrypoint_strings + 16299 /* "glGetError" */,
d19573 1
a19573 1
    return gl_single_resolver(GL_extension_GL_NV_fence, 16310 /* glGetFenceivNV */);
d19579 1
a19579 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 16325 /* glGetFinalCombinerInputParameterfvNV */);
d19585 1
a19585 1
    return gl_single_resolver(GL_extension_GL_NV_register_combiners, 16362 /* glGetFinalCombinerInputParameterivNV */);
d19591 1
a19591 1
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 16399 /* glGetFirstPerfQueryIdINTEL */);
d19597 1
a19597 1
    return gl_single_resolver(OpenGL_ES_1_0, 16426 /* glGetFixedv */);
d19603 1
a19603 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 16438 /* glGetFixedvOES */);
d19614 1
d19618 5
a19622 4
        16453 /* "glGetFloatIndexedvEXT" */,
        16475 /* "glGetFloati_v" */,
        16475 /* "glGetFloati_v" */,
        16489 /* "glGetFloati_vEXT" */,
d19624 1
a19624 1
    return gl_provider_resolver(entrypoint_strings + 16453 /* "glGetFloatIndexedvEXT" */,
d19636 1
d19640 5
a19644 4
        16475 /* "glGetFloati_v" */,
        16475 /* "glGetFloati_v" */,
        16453 /* "glGetFloatIndexedvEXT" */,
        16489 /* "glGetFloati_vEXT" */,
d19646 1
a19646 1
    return gl_provider_resolver(entrypoint_strings + 16475 /* "glGetFloati_v" */,
d19658 1
d19662 5
a19666 4
        16489 /* "glGetFloati_vEXT" */,
        16453 /* "glGetFloatIndexedvEXT" */,
        16475 /* "glGetFloati_v" */,
        16475 /* "glGetFloati_v" */,
d19668 23
a19690 1
    return gl_provider_resolver(entrypoint_strings + 16489 /* "glGetFloati_vEXT" */,
d19704 3
a19706 3
        16506 /* "glGetFloatv" */,
        16506 /* "glGetFloatv" */,
        16506 /* "glGetFloatv" */,
d19708 1
a19708 1
    return gl_provider_resolver(entrypoint_strings + 16506 /* "glGetFloatv" */,
d19715 1
a19715 1
    return gl_single_resolver(GL_extension_GL_SGIS_fog_function, 16518 /* glGetFogFuncSGIS */);
d19727 2
a19728 2
        16535 /* "glGetFragDataIndex" */,
        16535 /* "glGetFragDataIndex" */,
d19730 1
a19730 1
    return gl_provider_resolver(entrypoint_strings + 16535 /* "glGetFragDataIndex" */,
d19744 3
a19746 3
        16554 /* "glGetFragDataLocation" */,
        16554 /* "glGetFragDataLocation" */,
        16576 /* "glGetFragDataLocationEXT" */,
d19748 1
a19748 1
    return gl_provider_resolver(entrypoint_strings + 16554 /* "glGetFragDataLocation" */,
d19762 3
a19764 3
        16576 /* "glGetFragDataLocationEXT" */,
        16554 /* "glGetFragDataLocation" */,
        16554 /* "glGetFragDataLocation" */,
d19766 1
a19766 1
    return gl_provider_resolver(entrypoint_strings + 16576 /* "glGetFragDataLocationEXT" */,
d19773 1
a19773 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 16601 /* glGetFragmentLightfvSGIX */);
d19779 1
a19779 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 16626 /* glGetFragmentLightivSGIX */);
d19785 1
a19785 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 16651 /* glGetFragmentMaterialfvSGIX */);
d19791 1
a19791 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 16679 /* glGetFragmentMaterialivSGIX */);
d19805 4
a19808 4
        16707 /* "glGetFramebufferAttachmentParameteriv" */,
        16707 /* "glGetFramebufferAttachmentParameteriv" */,
        16707 /* "glGetFramebufferAttachmentParameteriv" */,
        16745 /* "glGetFramebufferAttachmentParameterivEXT" */,
d19810 1
a19810 1
    return gl_provider_resolver(entrypoint_strings + 16707 /* "glGetFramebufferAttachmentParameteriv" */,
d19825 4
a19828 4
        16745 /* "glGetFramebufferAttachmentParameterivEXT" */,
        16707 /* "glGetFramebufferAttachmentParameteriv" */,
        16707 /* "glGetFramebufferAttachmentParameteriv" */,
        16707 /* "glGetFramebufferAttachmentParameteriv" */,
d19830 1
a19830 1
    return gl_provider_resolver(entrypoint_strings + 16745 /* "glGetFramebufferAttachmentParameterivEXT" */,
d19837 1
a19837 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 16786 /* glGetFramebufferAttachmentParameterivOES */);
d19845 1
a19846 1
        GL_extension_GL_ARB_framebuffer_no_attachments,
d19850 3
a19852 3
        16827 /* "glGetFramebufferParameteriv" */,
        16827 /* "glGetFramebufferParameteriv" */,
        16827 /* "glGetFramebufferParameteriv" */,
d19854 1
a19854 1
    return gl_provider_resolver(entrypoint_strings + 16827 /* "glGetFramebufferParameteriv" */,
d19861 19
a19879 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 16855 /* glGetFramebufferParameterivEXT */);
d19885 1
a19885 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 16886 /* glGetGraphicsResetStatusARB */);
d19891 19
a19909 1
    return gl_single_resolver(GL_extension_GL_EXT_robustness, 16914 /* glGetGraphicsResetStatusEXT */);
d19915 1
a19915 1
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 16942 /* glGetHandleARB */);
d19921 1
a19921 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 16957 /* glGetHistogram */);
d19927 1
a19927 1
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 16972 /* glGetHistogramEXT */);
d19933 1
a19933 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 16990 /* glGetHistogramParameterfv */);
d19939 1
a19939 1
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 17016 /* glGetHistogramParameterfvEXT */);
d19945 1
a19945 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 17045 /* glGetHistogramParameteriv */);
d19951 1
a19951 1
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 17071 /* glGetHistogramParameterivEXT */);
d19957 1
a19957 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 17100 /* glGetHistogramParameterxvOES */);
d19963 1
a19963 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 17129 /* glGetImageHandleARB */);
d19969 1
a19969 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 17149 /* glGetImageHandleNV */);
d19975 1
a19975 1
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 17168 /* glGetImageTransformParameterfvHP */);
d19981 1
a19981 1
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 17201 /* glGetImageTransformParameterivHP */);
d19987 1
a19987 1
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 17234 /* glGetInfoLogARB */);
d19993 1
a19993 1
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 17250 /* glGetInstrumentsSGIX */);
d20005 2
a20006 2
        17271 /* "glGetInteger64i_v" */,
        17271 /* "glGetInteger64i_v" */,
d20008 1
a20008 1
    return gl_provider_resolver(entrypoint_strings + 17271 /* "glGetInteger64i_v" */,
d20023 4
a20026 4
        17289 /* "glGetInteger64v" */,
        17289 /* "glGetInteger64v" */,
        17289 /* "glGetInteger64v" */,
        17305 /* "glGetInteger64vAPPLE" */,
d20028 1
a20028 1
    return gl_provider_resolver(entrypoint_strings + 17289 /* "glGetInteger64v" */,
d20043 4
a20046 4
        17305 /* "glGetInteger64vAPPLE" */,
        17289 /* "glGetInteger64v" */,
        17289 /* "glGetInteger64v" */,
        17289 /* "glGetInteger64v" */,
d20048 1
a20048 1
    return gl_provider_resolver(entrypoint_strings + 17305 /* "glGetInteger64vAPPLE" */,
d20056 1
a20057 1
        GL_extension_GL_EXT_direct_state_access,
d20059 2
d20065 6
a20070 4
        17326 /* "glGetIntegerIndexedvEXT" */,
        17326 /* "glGetIntegerIndexedvEXT" */,
        17350 /* "glGetIntegeri_v" */,
        17350 /* "glGetIntegeri_v" */,
d20072 1
a20072 1
    return gl_provider_resolver(entrypoint_strings + 17326 /* "glGetIntegerIndexedvEXT" */,
d20081 2
d20084 1
a20085 1
        GL_extension_GL_EXT_direct_state_access,
d20089 6
a20094 4
        17350 /* "glGetIntegeri_v" */,
        17350 /* "glGetIntegeri_v" */,
        17326 /* "glGetIntegerIndexedvEXT" */,
        17326 /* "glGetIntegerIndexedvEXT" */,
d20096 1
a20096 1
    return gl_provider_resolver(entrypoint_strings + 17350 /* "glGetIntegeri_v" */,
d20103 1
a20103 1
    return gl_single_resolver(GL_extension_GL_EXT_multiview_draw_buffers, 17366 /* glGetIntegeri_vEXT */);
d20109 1
a20109 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 17385 /* glGetIntegerui64i_vNV */);
d20115 1
a20115 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 17407 /* glGetIntegerui64vNV */);
d20121 7
a20127 1
    return gl_single_resolver(always_present, 17427 /* glGetIntegerv */);
d20134 1
a20135 1
        Desktop_OpenGL_4_3,
d20139 2
a20140 2
        17441 /* "glGetInternalformati64v" */,
        17441 /* "glGetInternalformati64v" */,
d20142 1
a20142 1
    return gl_provider_resolver(entrypoint_strings + 17441 /* "glGetInternalformati64v" */,
d20150 1
a20151 1
        Desktop_OpenGL_4_2,
d20156 3
a20158 3
        17465 /* "glGetInternalformativ" */,
        17465 /* "glGetInternalformativ" */,
        17465 /* "glGetInternalformativ" */,
d20160 1
a20160 1
    return gl_provider_resolver(entrypoint_strings + 17465 /* "glGetInternalformativ" */,
d20167 1
a20167 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 17487 /* glGetInvariantBooleanvEXT */);
d20173 1
a20173 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 17513 /* glGetInvariantFloatvEXT */);
d20179 1
a20179 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 17537 /* glGetInvariantIntegervEXT */);
d20191 2
a20192 2
        17563 /* "glGetLightfv" */,
        17563 /* "glGetLightfv" */,
d20194 1
a20194 1
    return gl_provider_resolver(entrypoint_strings + 17563 /* "glGetLightfv" */,
d20201 1
a20201 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 17576 /* glGetLightiv */);
d20207 1
a20207 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 17589 /* glGetLightxOES */);
d20213 1
a20213 1
    return gl_single_resolver(OpenGL_ES_1_0, 17604 /* glGetLightxv */);
d20219 1
a20219 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 17617 /* glGetLightxvOES */);
d20225 1
a20225 1
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 17633 /* glGetListParameterfvSGIX */);
d20231 1
a20231 1
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 17658 /* glGetListParameterivSGIX */);
d20237 1
a20237 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 17683 /* glGetLocalConstantBooleanvEXT */);
d20243 1
a20243 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 17713 /* glGetLocalConstantFloatvEXT */);
d20249 1
a20249 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 17741 /* glGetLocalConstantIntegervEXT */);
d20255 1
a20255 1
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 17771 /* glGetMapAttribParameterfvNV */);
d20261 1
a20261 1
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 17799 /* glGetMapAttribParameterivNV */);
d20267 1
a20267 1
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 17827 /* glGetMapControlPointsNV */);
d20273 1
a20273 1
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 17851 /* glGetMapParameterfvNV */);
d20279 1
a20279 1
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 17873 /* glGetMapParameterivNV */);
d20285 1
a20285 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 17895 /* glGetMapdv */);
d20291 1
a20291 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 17906 /* glGetMapfv */);
d20297 1
a20297 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 17917 /* glGetMapiv */);
d20303 1
a20303 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 17928 /* glGetMapxvOES */);
d20315 2
a20316 2
        17942 /* "glGetMaterialfv" */,
        17942 /* "glGetMaterialfv" */,
d20318 1
a20318 1
    return gl_provider_resolver(entrypoint_strings + 17942 /* "glGetMaterialfv" */,
d20325 1
a20325 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 17958 /* glGetMaterialiv */);
d20331 1
a20331 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 17974 /* glGetMaterialxOES */);
d20337 1
a20337 1
    return gl_single_resolver(OpenGL_ES_1_0, 17992 /* glGetMaterialxv */);
d20343 1
a20343 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 18008 /* glGetMaterialxvOES */);
d20349 1
a20349 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 18027 /* glGetMinmax */);
d20355 1
a20355 1
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 18039 /* glGetMinmaxEXT */);
d20361 1
a20361 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 18054 /* glGetMinmaxParameterfv */);
d20367 1
a20367 1
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 18077 /* glGetMinmaxParameterfvEXT */);
d20373 1
a20373 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 18103 /* glGetMinmaxParameteriv */);
d20379 1
a20379 1
    return gl_single_resolver(GL_extension_GL_EXT_histogram, 18126 /* glGetMinmaxParameterivEXT */);
d20385 1
a20385 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18152 /* glGetMultiTexEnvfvEXT */);
d20391 1
a20391 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18174 /* glGetMultiTexEnvivEXT */);
d20397 1
a20397 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18196 /* glGetMultiTexGendvEXT */);
d20403 1
a20403 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18218 /* glGetMultiTexGenfvEXT */);
d20409 1
a20409 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18240 /* glGetMultiTexGenivEXT */);
d20415 1
a20415 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18262 /* glGetMultiTexImageEXT */);
d20421 1
a20421 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18284 /* glGetMultiTexLevelParameterfvEXT */);
d20427 1
a20427 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18317 /* glGetMultiTexLevelParameterivEXT */);
d20433 1
a20433 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18350 /* glGetMultiTexParameterIivEXT */);
d20439 1
a20439 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18379 /* glGetMultiTexParameterIuivEXT */);
d20445 1
a20445 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18409 /* glGetMultiTexParameterfvEXT */);
d20451 1
a20451 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18437 /* glGetMultiTexParameterivEXT */);
d20459 1
a20460 1
        GL_extension_GL_ARB_texture_multisample,
d20465 4
a20468 4
        18465 /* "glGetMultisamplefv" */,
        18465 /* "glGetMultisamplefv" */,
        18465 /* "glGetMultisamplefv" */,
        18484 /* "glGetMultisamplefvNV" */,
d20470 1
a20470 1
    return gl_provider_resolver(entrypoint_strings + 18465 /* "glGetMultisamplefv" */,
d20480 1
a20481 1
        GL_extension_GL_ARB_texture_multisample,
d20485 36
a20520 4
        18484 /* "glGetMultisamplefvNV" */,
        18465 /* "glGetMultisamplefv" */,
        18465 /* "glGetMultisamplefv" */,
        18465 /* "glGetMultisamplefv" */,
d20522 1
a20522 1
    return gl_provider_resolver(entrypoint_strings + 18484 /* "glGetMultisamplefvNV" */,
d20529 1
a20529 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18505 /* glGetNamedBufferParameterivEXT */);
d20535 17
a20551 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 18536 /* glGetNamedBufferParameterui64vNV */);
d20557 17
a20573 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18569 /* glGetNamedBufferPointervEXT */);
d20579 17
a20595 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18597 /* glGetNamedBufferSubDataEXT */);
d20601 17
a20617 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18624 /* glGetNamedFramebufferAttachmentParameterivEXT */);
d20623 1
a20623 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18670 /* glGetNamedFramebufferParameterivEXT */);
d20629 1
a20629 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18706 /* glGetNamedProgramLocalParameterIivEXT */);
d20635 1
a20635 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18744 /* glGetNamedProgramLocalParameterIuivEXT */);
d20641 1
a20641 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18783 /* glGetNamedProgramLocalParameterdvEXT */);
d20647 1
a20647 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18820 /* glGetNamedProgramLocalParameterfvEXT */);
d20653 1
a20653 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18857 /* glGetNamedProgramStringEXT */);
d20659 17
a20675 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18884 /* glGetNamedProgramivEXT */);
d20681 1
a20681 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 18907 /* glGetNamedRenderbufferParameterivEXT */);
d20687 1
a20687 1
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 18944 /* glGetNamedStringARB */);
d20693 1
a20693 1
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 18964 /* glGetNamedStringivARB */);
d20699 1
a20699 1
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 18986 /* glGetNextPerfQueryIdINTEL */);
d20705 1
a20705 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 19012 /* glGetObjectBufferfvATI */);
d20711 1
a20711 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 19035 /* glGetObjectBufferivATI */);
d20724 3
a20726 3
        19058 /* "glGetObjectLabel" */,
        19058 /* "glGetObjectLabel" */,
        19095 /* "glGetObjectLabelKHR" */,
d20728 1
a20728 1
    return gl_provider_resolver(entrypoint_strings + 19058 /* "glGetObjectLabel" */,
d20735 1
a20735 1
    return gl_single_resolver(GL_extension_GL_EXT_debug_label, 19075 /* glGetObjectLabelEXT */);
d20748 3
a20750 3
        19095 /* "glGetObjectLabelKHR" */,
        19058 /* "glGetObjectLabel" */,
        19058 /* "glGetObjectLabel" */,
d20752 1
a20752 1
    return gl_provider_resolver(entrypoint_strings + 19095 /* "glGetObjectLabelKHR" */,
d20759 1
a20759 1
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 19115 /* glGetObjectParameterfvARB */);
d20765 1
a20765 1
    return gl_single_resolver(GL_extension_GL_APPLE_object_purgeable, 19141 /* glGetObjectParameterivAPPLE */);
d20771 1
a20771 1
    return gl_single_resolver(GL_extension_GL_ARB_shader_objects, 19169 /* glGetObjectParameterivARB */);
d20784 3
a20786 3
        19195 /* "glGetObjectPtrLabel" */,
        19195 /* "glGetObjectPtrLabel" */,
        19215 /* "glGetObjectPtrLabelKHR" */,
d20788 1
a20788 1
    return gl_provider_resolver(entrypoint_strings + 19195 /* "glGetObjectPtrLabel" */,
d20802 3
a20804 3
        19215 /* "glGetObjectPtrLabelKHR" */,
        19195 /* "glGetObjectPtrLabel" */,
        19195 /* "glGetObjectPtrLabel" */,
d20806 1
a20806 1
    return gl_provider_resolver(entrypoint_strings + 19215 /* "glGetObjectPtrLabelKHR" */,
d20813 1
a20813 1
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 19238 /* glGetOcclusionQueryivNV */);
d20819 1
a20819 1
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 19262 /* glGetOcclusionQueryuivNV */);
d20825 1
a20825 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19287 /* glGetPathColorGenfvNV */);
d20831 1
a20831 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19309 /* glGetPathColorGenivNV */);
d20837 1
a20837 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19331 /* glGetPathCommandsNV */);
d20843 1
a20843 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19351 /* glGetPathCoordsNV */);
d20849 1
a20849 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19369 /* glGetPathDashArrayNV */);
d20855 1
a20855 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19390 /* glGetPathLengthNV */);
d20861 1
a20861 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19408 /* glGetPathMetricRangeNV */);
d20867 1
a20867 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19431 /* glGetPathMetricsNV */);
d20873 1
a20873 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19450 /* glGetPathParameterfvNV */);
d20879 1
a20879 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19473 /* glGetPathParameterivNV */);
d20885 1
a20885 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19496 /* glGetPathSpacingNV */);
d20891 1
a20891 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19515 /* glGetPathTexGenfvNV */);
d20897 1
a20897 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 19535 /* glGetPathTexGenivNV */);
d20903 1
a20903 1
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 19555 /* glGetPerfCounterInfoINTEL */);
d20909 1
a20909 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 19581 /* glGetPerfMonitorCounterDataAMD */);
d20915 1
a20915 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 19612 /* glGetPerfMonitorCounterInfoAMD */);
d20921 1
a20921 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 19643 /* glGetPerfMonitorCounterStringAMD */);
d20927 1
a20927 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 19676 /* glGetPerfMonitorCountersAMD */);
d20933 1
a20933 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 19704 /* glGetPerfMonitorGroupStringAMD */);
d20939 1
a20939 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 19735 /* glGetPerfMonitorGroupsAMD */);
d20945 1
a20945 1
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 19761 /* glGetPerfQueryDataINTEL */);
d20951 1
a20951 1
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 19785 /* glGetPerfQueryIdByNameINTEL */);
d20957 1
a20957 1
    return gl_single_resolver(GL_extension_GL_INTEL_performance_query, 19813 /* glGetPerfQueryInfoINTEL */);
d20963 1
a20963 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 19837 /* glGetPixelMapfv */);
d20969 1
a20969 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 19853 /* glGetPixelMapuiv */);
d20975 1
a20975 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 19870 /* glGetPixelMapusv */);
d20981 1
a20981 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 19887 /* glGetPixelMapxv */);
d20987 1
a20987 1
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 19903 /* glGetPixelTexGenParameterfvSGIS */);
d20993 1
a20993 1
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 19935 /* glGetPixelTexGenParameterivSGIS */);
d20999 1
a20999 1
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 19967 /* glGetPixelTransformParameterfvEXT */);
d21005 1
a21005 1
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 20001 /* glGetPixelTransformParameterivEXT */);
d21011 1
a21011 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20035 /* glGetPointerIndexedvEXT */);
d21017 1
a21017 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 20059 /* glGetPointeri_vEXT */);
d21033 6
a21038 6
        20078 /* "glGetPointerv" */,
        20078 /* "glGetPointerv" */,
        20078 /* "glGetPointerv" */,
        20078 /* "glGetPointerv" */,
        20092 /* "glGetPointervEXT" */,
        20109 /* "glGetPointervKHR" */,
d21040 1
a21040 1
    return gl_provider_resolver(entrypoint_strings + 20078 /* "glGetPointerv" */,
d21057 6
a21062 6
        20092 /* "glGetPointervEXT" */,
        20078 /* "glGetPointerv" */,
        20078 /* "glGetPointerv" */,
        20078 /* "glGetPointerv" */,
        20078 /* "glGetPointerv" */,
        20109 /* "glGetPointervKHR" */,
d21064 1
a21064 1
    return gl_provider_resolver(entrypoint_strings + 20092 /* "glGetPointervEXT" */,
d21081 6
a21086 6
        20109 /* "glGetPointervKHR" */,
        20078 /* "glGetPointerv" */,
        20078 /* "glGetPointerv" */,
        20078 /* "glGetPointerv" */,
        20078 /* "glGetPointerv" */,
        20092 /* "glGetPointervEXT" */,
d21088 1
a21088 1
    return gl_provider_resolver(entrypoint_strings + 20109 /* "glGetPointervKHR" */,
d21095 1
a21095 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 20126 /* glGetPolygonStipple */);
d21103 1
a21104 1
        GL_extension_GL_ARB_get_program_binary,
d21109 4
a21112 4
        20146 /* "glGetProgramBinary" */,
        20146 /* "glGetProgramBinary" */,
        20146 /* "glGetProgramBinary" */,
        20165 /* "glGetProgramBinaryOES" */,
d21114 1
a21114 1
    return gl_provider_resolver(entrypoint_strings + 20146 /* "glGetProgramBinary" */,
d21124 1
a21125 1
        GL_extension_GL_ARB_get_program_binary,
d21129 4
a21132 4
        20165 /* "glGetProgramBinaryOES" */,
        20146 /* "glGetProgramBinary" */,
        20146 /* "glGetProgramBinary" */,
        20146 /* "glGetProgramBinary" */,
d21134 1
a21134 1
    return gl_provider_resolver(entrypoint_strings + 20165 /* "glGetProgramBinaryOES" */,
d21141 1
a21141 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 20187 /* glGetProgramEnvParameterIivNV */);
d21147 1
a21147 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 20217 /* glGetProgramEnvParameterIuivNV */);
d21154 1
a21155 1
        GL_extension_GL_ARB_fragment_program,
d21159 2
a21160 2
        20248 /* "glGetProgramEnvParameterdvARB" */,
        20248 /* "glGetProgramEnvParameterdvARB" */,
d21162 1
a21162 1
    return gl_provider_resolver(entrypoint_strings + 20248 /* "glGetProgramEnvParameterdvARB" */,
d21170 1
a21171 1
        GL_extension_GL_ARB_fragment_program,
d21175 2
a21176 2
        20278 /* "glGetProgramEnvParameterfvARB" */,
        20278 /* "glGetProgramEnvParameterfvARB" */,
d21178 1
a21178 1
    return gl_provider_resolver(entrypoint_strings + 20278 /* "glGetProgramEnvParameterfvARB" */,
d21186 1
a21187 1
        Desktop_OpenGL_2_0,
d21191 2
a21192 2
        20308 /* "glGetProgramInfoLog" */,
        20308 /* "glGetProgramInfoLog" */,
d21194 1
a21194 1
    return gl_provider_resolver(entrypoint_strings + 20308 /* "glGetProgramInfoLog" */,
d21208 3
a21210 3
        20328 /* "glGetProgramInterfaceiv" */,
        20328 /* "glGetProgramInterfaceiv" */,
        20328 /* "glGetProgramInterfaceiv" */,
d21212 1
a21212 1
    return gl_provider_resolver(entrypoint_strings + 20328 /* "glGetProgramInterfaceiv" */,
d21219 1
a21219 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 20352 /* glGetProgramLocalParameterIivNV */);
d21225 1
a21225 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 20384 /* glGetProgramLocalParameterIuivNV */);
d21232 1
a21233 1
        GL_extension_GL_ARB_fragment_program,
d21237 2
a21238 2
        20417 /* "glGetProgramLocalParameterdvARB" */,
        20417 /* "glGetProgramLocalParameterdvARB" */,
d21240 1
a21240 1
    return gl_provider_resolver(entrypoint_strings + 20417 /* "glGetProgramLocalParameterdvARB" */,
d21248 1
a21249 1
        GL_extension_GL_ARB_fragment_program,
d21253 2
a21254 2
        20449 /* "glGetProgramLocalParameterfvARB" */,
        20449 /* "glGetProgramLocalParameterfvARB" */,
d21256 1
a21256 1
    return gl_provider_resolver(entrypoint_strings + 20449 /* "glGetProgramLocalParameterfvARB" */,
d21263 1
a21263 1
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 20481 /* glGetProgramNamedParameterdvNV */);
d21269 1
a21269 1
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 20512 /* glGetProgramNamedParameterfvNV */);
d21275 1
a21275 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 20543 /* glGetProgramParameterdvNV */);
d21281 1
a21281 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 20569 /* glGetProgramParameterfvNV */);
d21289 1
a21290 1
        GL_extension_GL_ARB_separate_shader_objects,
d21294 3
a21296 3
        20595 /* "glGetProgramPipelineInfoLog" */,
        20595 /* "glGetProgramPipelineInfoLog" */,
        20595 /* "glGetProgramPipelineInfoLog" */,
d21298 1
a21298 1
    return gl_provider_resolver(entrypoint_strings + 20595 /* "glGetProgramPipelineInfoLog" */,
d21305 1
a21305 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 20623 /* glGetProgramPipelineInfoLogEXT */);
d21313 1
a21314 1
        GL_extension_GL_ARB_separate_shader_objects,
d21318 3
a21320 3
        20654 /* "glGetProgramPipelineiv" */,
        20654 /* "glGetProgramPipelineiv" */,
        20654 /* "glGetProgramPipelineiv" */,
d21322 1
a21322 1
    return gl_provider_resolver(entrypoint_strings + 20654 /* "glGetProgramPipelineiv" */,
d21329 1
a21329 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 20677 /* glGetProgramPipelineivEXT */);
d21342 3
a21344 3
        20703 /* "glGetProgramResourceIndex" */,
        20703 /* "glGetProgramResourceIndex" */,
        20703 /* "glGetProgramResourceIndex" */,
d21346 1
a21346 1
    return gl_provider_resolver(entrypoint_strings + 20703 /* "glGetProgramResourceIndex" */,
d21360 3
a21362 3
        20729 /* "glGetProgramResourceLocation" */,
        20729 /* "glGetProgramResourceLocation" */,
        20729 /* "glGetProgramResourceLocation" */,
d21364 1
a21364 1
    return gl_provider_resolver(entrypoint_strings + 20729 /* "glGetProgramResourceLocation" */,
d21377 2
a21378 2
        20758 /* "glGetProgramResourceLocationIndex" */,
        20758 /* "glGetProgramResourceLocationIndex" */,
d21380 1
a21380 1
    return gl_provider_resolver(entrypoint_strings + 20758 /* "glGetProgramResourceLocationIndex" */,
d21394 3
a21396 3
        20792 /* "glGetProgramResourceName" */,
        20792 /* "glGetProgramResourceName" */,
        20792 /* "glGetProgramResourceName" */,
d21398 1
a21398 1
    return gl_provider_resolver(entrypoint_strings + 20792 /* "glGetProgramResourceName" */,
d21402 6
d21418 3
a21420 3
        20817 /* "glGetProgramResourceiv" */,
        20817 /* "glGetProgramResourceiv" */,
        20817 /* "glGetProgramResourceiv" */,
d21422 1
a21422 1
    return gl_provider_resolver(entrypoint_strings + 20817 /* "glGetProgramResourceiv" */,
d21435 2
a21436 2
        20840 /* "glGetProgramStageiv" */,
        20840 /* "glGetProgramStageiv" */,
d21438 1
a21438 1
    return gl_provider_resolver(entrypoint_strings + 20840 /* "glGetProgramStageiv" */,
d21446 1
a21447 1
        GL_extension_GL_ARB_fragment_program,
d21451 2
a21452 2
        20860 /* "glGetProgramStringARB" */,
        20860 /* "glGetProgramStringARB" */,
d21454 1
a21454 1
    return gl_provider_resolver(entrypoint_strings + 20860 /* "glGetProgramStringARB" */,
d21461 1
a21461 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 20882 /* glGetProgramStringNV */);
d21467 1
a21467 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program5, 20903 /* glGetProgramSubroutineParameteruivNV */);
d21474 1
a21475 1
        Desktop_OpenGL_2_0,
d21479 2
a21480 2
        20940 /* "glGetProgramiv" */,
        20940 /* "glGetProgramiv" */,
d21482 1
a21482 1
    return gl_provider_resolver(entrypoint_strings + 20940 /* "glGetProgramiv" */,
d21490 1
a21491 1
        GL_extension_GL_ARB_fragment_program,
d21495 2
a21496 2
        20955 /* "glGetProgramivARB" */,
        20955 /* "glGetProgramivARB" */,
d21498 1
a21498 1
    return gl_provider_resolver(entrypoint_strings + 20955 /* "glGetProgramivARB" */,
d21505 65
a21569 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 20973 /* glGetProgramivNV */);
d21576 1
a21577 1
        Desktop_OpenGL_4_0,
d21581 2
a21582 2
        20990 /* "glGetQueryIndexediv" */,
        20990 /* "glGetQueryIndexediv" */,
d21584 1
a21584 1
    return gl_provider_resolver(entrypoint_strings + 20990 /* "glGetQueryIndexediv" */,
d21599 4
a21602 4
        21010 /* "glGetQueryObjecti64v" */,
        21010 /* "glGetQueryObjecti64v" */,
        21031 /* "glGetQueryObjecti64vEXT" */,
        21031 /* "glGetQueryObjecti64vEXT" */,
d21604 1
a21604 1
    return gl_provider_resolver(entrypoint_strings + 21010 /* "glGetQueryObjecti64v" */,
d21619 4
a21622 4
        21031 /* "glGetQueryObjecti64vEXT" */,
        21031 /* "glGetQueryObjecti64vEXT" */,
        21010 /* "glGetQueryObjecti64v" */,
        21010 /* "glGetQueryObjecti64v" */,
d21624 1
a21624 1
    return gl_provider_resolver(entrypoint_strings + 21031 /* "glGetQueryObjecti64vEXT" */,
d21638 3
a21640 3
        21055 /* "glGetQueryObjectiv" */,
        21074 /* "glGetQueryObjectivARB" */,
        21096 /* "glGetQueryObjectivEXT" */,
d21642 1
a21642 1
    return gl_provider_resolver(entrypoint_strings + 21055 /* "glGetQueryObjectiv" */,
d21656 3
a21658 3
        21074 /* "glGetQueryObjectivARB" */,
        21055 /* "glGetQueryObjectiv" */,
        21096 /* "glGetQueryObjectivEXT" */,
d21660 1
a21660 1
    return gl_provider_resolver(entrypoint_strings + 21074 /* "glGetQueryObjectivARB" */,
d21674 3
a21676 3
        21096 /* "glGetQueryObjectivEXT" */,
        21055 /* "glGetQueryObjectiv" */,
        21074 /* "glGetQueryObjectivARB" */,
d21678 1
a21678 1
    return gl_provider_resolver(entrypoint_strings + 21096 /* "glGetQueryObjectivEXT" */,
d21693 4
a21696 4
        21118 /* "glGetQueryObjectui64v" */,
        21118 /* "glGetQueryObjectui64v" */,
        21140 /* "glGetQueryObjectui64vEXT" */,
        21140 /* "glGetQueryObjectui64vEXT" */,
d21698 1
a21698 1
    return gl_provider_resolver(entrypoint_strings + 21118 /* "glGetQueryObjectui64v" */,
d21713 4
a21716 4
        21140 /* "glGetQueryObjectui64vEXT" */,
        21140 /* "glGetQueryObjectui64vEXT" */,
        21118 /* "glGetQueryObjectui64v" */,
        21118 /* "glGetQueryObjectui64v" */,
d21718 1
a21718 1
    return gl_provider_resolver(entrypoint_strings + 21140 /* "glGetQueryObjectui64vEXT" */,
d21726 1
a21727 1
        Desktop_OpenGL_1_5,
d21732 3
a21734 3
        21165 /* "glGetQueryObjectuiv" */,
        21165 /* "glGetQueryObjectuiv" */,
        21185 /* "glGetQueryObjectuivARB" */,
d21736 1
a21736 1
    return gl_provider_resolver(entrypoint_strings + 21165 /* "glGetQueryObjectuiv" */,
d21745 1
a21746 1
        Desktop_OpenGL_1_5,
d21750 3
a21752 3
        21185 /* "glGetQueryObjectuivARB" */,
        21165 /* "glGetQueryObjectuiv" */,
        21165 /* "glGetQueryObjectuiv" */,
d21754 1
a21754 1
    return gl_provider_resolver(entrypoint_strings + 21185 /* "glGetQueryObjectuivARB" */,
d21762 1
a21763 1
        GL_extension_GL_EXT_disjoint_timer_query,
d21767 2
a21768 2
        21208 /* "glGetQueryObjectuivEXT" */,
        21208 /* "glGetQueryObjectuivEXT" */,
d21770 1
a21770 1
    return gl_provider_resolver(entrypoint_strings + 21208 /* "glGetQueryObjectuivEXT" */,
d21778 1
a21779 1
        Desktop_OpenGL_1_5,
d21784 3
a21786 3
        21231 /* "glGetQueryiv" */,
        21231 /* "glGetQueryiv" */,
        21244 /* "glGetQueryivARB" */,
d21788 1
a21788 1
    return gl_provider_resolver(entrypoint_strings + 21231 /* "glGetQueryiv" */,
d21797 1
a21798 1
        Desktop_OpenGL_1_5,
d21802 3
a21804 3
        21244 /* "glGetQueryivARB" */,
        21231 /* "glGetQueryiv" */,
        21231 /* "glGetQueryiv" */,
d21806 1
a21806 1
    return gl_provider_resolver(entrypoint_strings + 21244 /* "glGetQueryivARB" */,
d21814 1
a21815 1
        GL_extension_GL_EXT_disjoint_timer_query,
d21819 2
a21820 2
        21260 /* "glGetQueryivEXT" */,
        21260 /* "glGetQueryivEXT" */,
d21822 1
a21822 1
    return gl_provider_resolver(entrypoint_strings + 21260 /* "glGetQueryivEXT" */,
d21837 4
a21840 4
        21276 /* "glGetRenderbufferParameteriv" */,
        21276 /* "glGetRenderbufferParameteriv" */,
        21276 /* "glGetRenderbufferParameteriv" */,
        21305 /* "glGetRenderbufferParameterivEXT" */,
d21842 1
a21842 1
    return gl_provider_resolver(entrypoint_strings + 21276 /* "glGetRenderbufferParameteriv" */,
d21857 4
a21860 4
        21305 /* "glGetRenderbufferParameterivEXT" */,
        21276 /* "glGetRenderbufferParameteriv" */,
        21276 /* "glGetRenderbufferParameteriv" */,
        21276 /* "glGetRenderbufferParameteriv" */,
d21862 1
a21862 1
    return gl_provider_resolver(entrypoint_strings + 21305 /* "glGetRenderbufferParameterivEXT" */,
d21869 1
a21869 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 21337 /* glGetRenderbufferParameterivOES */);
d21876 1
d21878 19
d21898 2
d21903 4
a21906 2
        21369 /* "glGetSamplerParameterIiv" */,
        21369 /* "glGetSamplerParameterIiv" */,
d21908 21
a21928 1
    return gl_provider_resolver(entrypoint_strings + 21369 /* "glGetSamplerParameterIiv" */,
d21936 1
d21938 39
d21978 2
d21983 4
a21986 2
        21394 /* "glGetSamplerParameterIuiv" */,
        21394 /* "glGetSamplerParameterIuiv" */,
d21988 1
a21988 1
    return gl_provider_resolver(entrypoint_strings + 21394 /* "glGetSamplerParameterIuiv" */,
d21996 1
a21997 1
        Desktop_OpenGL_3_3,
d22002 3
a22004 3
        21420 /* "glGetSamplerParameterfv" */,
        21420 /* "glGetSamplerParameterfv" */,
        21420 /* "glGetSamplerParameterfv" */,
d22006 1
a22006 1
    return gl_provider_resolver(entrypoint_strings + 21420 /* "glGetSamplerParameterfv" */,
d22014 1
a22015 1
        Desktop_OpenGL_3_3,
d22020 3
a22022 3
        21444 /* "glGetSamplerParameteriv" */,
        21444 /* "glGetSamplerParameteriv" */,
        21444 /* "glGetSamplerParameteriv" */,
d22024 1
a22024 1
    return gl_provider_resolver(entrypoint_strings + 21444 /* "glGetSamplerParameteriv" */,
d22031 1
a22031 1
    return gl_single_resolver(GL_extension_GL_ARB_imaging, 21468 /* glGetSeparableFilter */);
d22037 1
a22037 1
    return gl_single_resolver(GL_extension_GL_EXT_convolution, 21489 /* glGetSeparableFilterEXT */);
d22044 1
a22045 1
        Desktop_OpenGL_2_0,
d22049 2
a22050 2
        21513 /* "glGetShaderInfoLog" */,
        21513 /* "glGetShaderInfoLog" */,
d22052 1
a22052 1
    return gl_provider_resolver(entrypoint_strings + 21513 /* "glGetShaderInfoLog" */,
d22066 3
a22068 3
        21532 /* "glGetShaderPrecisionFormat" */,
        21532 /* "glGetShaderPrecisionFormat" */,
        21532 /* "glGetShaderPrecisionFormat" */,
d22070 1
a22070 1
    return gl_provider_resolver(entrypoint_strings + 21532 /* "glGetShaderPrecisionFormat" */,
d22078 1
a22079 1
        Desktop_OpenGL_2_0,
d22084 3
a22086 3
        21559 /* "glGetShaderSource" */,
        21559 /* "glGetShaderSource" */,
        21577 /* "glGetShaderSourceARB" */,
d22088 1
a22088 1
    return gl_provider_resolver(entrypoint_strings + 21559 /* "glGetShaderSource" */,
d22097 1
a22098 1
        Desktop_OpenGL_2_0,
d22102 3
a22104 3
        21577 /* "glGetShaderSourceARB" */,
        21559 /* "glGetShaderSource" */,
        21559 /* "glGetShaderSource" */,
d22106 1
a22106 1
    return gl_provider_resolver(entrypoint_strings + 21577 /* "glGetShaderSourceARB" */,
d22114 1
a22115 1
        Desktop_OpenGL_2_0,
d22119 2
a22120 2
        21598 /* "glGetShaderiv" */,
        21598 /* "glGetShaderiv" */,
d22122 1
a22122 1
    return gl_provider_resolver(entrypoint_strings + 21598 /* "glGetShaderiv" */,
d22129 7
a22135 1
    return gl_single_resolver(GL_extension_GL_SGIS_sharpen_texture, 21612 /* glGetSharpenTexFuncSGIS */);
d22141 1
a22141 1
    return gl_single_resolver(always_present, 21636 /* glGetString */);
d22153 2
a22154 2
        21648 /* "glGetStringi" */,
        21648 /* "glGetStringi" */,
d22156 1
a22156 1
    return gl_provider_resolver(entrypoint_strings + 21648 /* "glGetStringi" */,
d22169 2
a22170 2
        21661 /* "glGetSubroutineIndex" */,
        21661 /* "glGetSubroutineIndex" */,
d22172 1
a22172 1
    return gl_provider_resolver(entrypoint_strings + 21661 /* "glGetSubroutineIndex" */,
d22185 2
a22186 2
        21682 /* "glGetSubroutineUniformLocation" */,
        21682 /* "glGetSubroutineUniformLocation" */,
d22188 1
a22188 1
    return gl_provider_resolver(entrypoint_strings + 21682 /* "glGetSubroutineUniformLocation" */,
d22203 4
a22206 4
        21713 /* "glGetSynciv" */,
        21713 /* "glGetSynciv" */,
        21713 /* "glGetSynciv" */,
        21725 /* "glGetSyncivAPPLE" */,
d22208 1
a22208 1
    return gl_provider_resolver(entrypoint_strings + 21713 /* "glGetSynciv" */,
d22223 4
a22226 4
        21725 /* "glGetSyncivAPPLE" */,
        21713 /* "glGetSynciv" */,
        21713 /* "glGetSynciv" */,
        21713 /* "glGetSynciv" */,
d22228 1
a22228 1
    return gl_provider_resolver(entrypoint_strings + 21725 /* "glGetSyncivAPPLE" */,
d22235 1
a22235 1
    return gl_single_resolver(GL_extension_GL_ATI_envmap_bumpmap, 21742 /* glGetTexBumpParameterfvATI */);
d22241 1
a22241 1
    return gl_single_resolver(GL_extension_GL_ATI_envmap_bumpmap, 21769 /* glGetTexBumpParameterivATI */);
d22253 2
a22254 2
        21796 /* "glGetTexEnvfv" */,
        21796 /* "glGetTexEnvfv" */,
d22256 1
a22256 1
    return gl_provider_resolver(entrypoint_strings + 21796 /* "glGetTexEnvfv" */,
d22269 2
a22270 2
        21810 /* "glGetTexEnviv" */,
        21810 /* "glGetTexEnviv" */,
d22272 1
a22272 1
    return gl_provider_resolver(entrypoint_strings + 21810 /* "glGetTexEnviv" */,
d22279 1
a22279 1
    return gl_single_resolver(OpenGL_ES_1_0, 21824 /* glGetTexEnvxv */);
d22285 1
a22285 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 21838 /* glGetTexEnvxvOES */);
d22291 1
a22291 1
    return gl_single_resolver(GL_extension_GL_SGIS_texture_filter4, 21855 /* glGetTexFilterFuncSGIS */);
d22297 1
a22297 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 21878 /* glGetTexGendv */);
d22303 1
a22303 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 21892 /* glGetTexGenfv */);
d22309 1
a22309 1
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 21906 /* glGetTexGenfvOES */);
d22315 1
a22315 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 21923 /* glGetTexGeniv */);
d22321 1
a22321 1
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 21937 /* glGetTexGenivOES */);
d22328 1
a22329 1
        GL_extension_GL_OES_fixed_point,
d22333 2
a22334 2
        21954 /* "glGetTexGenxvOES" */,
        21954 /* "glGetTexGenxvOES" */,
d22336 1
a22336 1
    return gl_provider_resolver(entrypoint_strings + 21954 /* "glGetTexGenxvOES" */,
d22343 1
a22343 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 21971 /* glGetTexImage */);
d22355 2
a22356 2
        21985 /* "glGetTexLevelParameterfv" */,
        21985 /* "glGetTexLevelParameterfv" */,
d22358 1
a22358 1
    return gl_provider_resolver(entrypoint_strings + 21985 /* "glGetTexLevelParameterfv" */,
d22371 2
a22372 2
        22010 /* "glGetTexLevelParameteriv" */,
        22010 /* "glGetTexLevelParameteriv" */,
d22374 1
a22374 1
    return gl_provider_resolver(entrypoint_strings + 22010 /* "glGetTexLevelParameteriv" */,
d22381 1
a22381 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 22035 /* glGetTexLevelParameterxvOES */);
d22389 1
d22391 1
d22395 4
a22398 2
        22063 /* "glGetTexParameterIiv" */,
        22084 /* "glGetTexParameterIivEXT" */,
d22400 1
a22400 1
    return gl_provider_resolver(entrypoint_strings + 22063 /* "glGetTexParameterIiv" */,
d22408 1
d22411 1
d22415 4
a22418 2
        22084 /* "glGetTexParameterIivEXT" */,
        22063 /* "glGetTexParameterIiv" */,
d22420 21
a22440 1
    return gl_provider_resolver(entrypoint_strings + 22084 /* "glGetTexParameterIivEXT" */,
d22449 1
d22451 1
d22455 4
a22458 2
        22108 /* "glGetTexParameterIuiv" */,
        22130 /* "glGetTexParameterIuivEXT" */,
d22460 1
a22460 1
    return gl_provider_resolver(entrypoint_strings + 22108 /* "glGetTexParameterIuiv" */,
d22468 1
d22471 21
d22495 4
a22498 2
        22130 /* "glGetTexParameterIuivEXT" */,
        22108 /* "glGetTexParameterIuiv" */,
d22500 1
a22500 1
    return gl_provider_resolver(entrypoint_strings + 22130 /* "glGetTexParameterIuivEXT" */,
d22507 1
a22507 1
    return gl_single_resolver(GL_extension_GL_APPLE_texture_range, 22155 /* glGetTexParameterPointervAPPLE */);
d22520 3
a22522 3
        22186 /* "glGetTexParameterfv" */,
        22186 /* "glGetTexParameterfv" */,
        22186 /* "glGetTexParameterfv" */,
d22524 1
a22524 1
    return gl_provider_resolver(entrypoint_strings + 22186 /* "glGetTexParameterfv" */,
d22538 3
a22540 3
        22206 /* "glGetTexParameteriv" */,
        22206 /* "glGetTexParameteriv" */,
        22206 /* "glGetTexParameteriv" */,
d22542 1
a22542 1
    return gl_provider_resolver(entrypoint_strings + 22206 /* "glGetTexParameteriv" */,
d22549 1
a22549 1
    return gl_single_resolver(OpenGL_ES_1_0, 22226 /* glGetTexParameterxv */);
d22555 1
a22555 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 22246 /* glGetTexParameterxvOES */);
d22561 1
a22561 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 22269 /* glGetTextureHandleARB */);
d22567 17
a22583 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 22291 /* glGetTextureHandleNV */);
d22589 17
a22605 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 22312 /* glGetTextureImageEXT */);
d22611 17
a22627 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 22333 /* glGetTextureLevelParameterfvEXT */);
d22633 17
a22649 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 22365 /* glGetTextureLevelParameterivEXT */);
d22655 17
a22671 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 22397 /* glGetTextureParameterIivEXT */);
d22677 17
a22693 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 22425 /* glGetTextureParameterIuivEXT */);
d22699 17
a22715 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 22454 /* glGetTextureParameterfvEXT */);
d22721 1
a22721 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 22481 /* glGetTextureParameterivEXT */);
d22727 1
a22727 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 22508 /* glGetTextureSamplerHandleARB */);
d22733 17
a22749 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 22537 /* glGetTextureSamplerHandleNV */);
d22755 1
a22755 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 22565 /* glGetTrackMatrixivNV */);
d22768 3
a22770 3
        22586 /* "glGetTransformFeedbackVarying" */,
        22586 /* "glGetTransformFeedbackVarying" */,
        22616 /* "glGetTransformFeedbackVaryingEXT" */,
d22772 1
a22772 1
    return gl_provider_resolver(entrypoint_strings + 22586 /* "glGetTransformFeedbackVarying" */,
d22786 3
a22788 3
        22616 /* "glGetTransformFeedbackVaryingEXT" */,
        22586 /* "glGetTransformFeedbackVarying" */,
        22586 /* "glGetTransformFeedbackVarying" */,
d22790 1
a22790 1
    return gl_provider_resolver(entrypoint_strings + 22616 /* "glGetTransformFeedbackVaryingEXT" */,
d22797 49
a22845 1
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 22649 /* glGetTransformFeedbackVaryingNV */);
d22851 1
a22851 1
    return gl_single_resolver(GL_extension_GL_ANGLE_translated_shader_source, 22681 /* glGetTranslatedShaderSourceANGLE */);
d22858 1
a22859 1
        Desktop_OpenGL_3_1,
d22864 3
a22866 3
        22714 /* "glGetUniformBlockIndex" */,
        22714 /* "glGetUniformBlockIndex" */,
        22714 /* "glGetUniformBlockIndex" */,
d22868 1
a22868 1
    return gl_provider_resolver(entrypoint_strings + 22714 /* "glGetUniformBlockIndex" */,
d22875 1
a22875 1
    return gl_single_resolver(GL_extension_GL_EXT_bindable_uniform, 22737 /* glGetUniformBufferSizeEXT */);
d22882 1
a22883 1
        Desktop_OpenGL_3_1,
d22888 3
a22890 3
        22763 /* "glGetUniformIndices" */,
        22763 /* "glGetUniformIndices" */,
        22763 /* "glGetUniformIndices" */,
d22892 1
a22892 1
    return gl_provider_resolver(entrypoint_strings + 22763 /* "glGetUniformIndices" */,
d22900 1
a22901 1
        Desktop_OpenGL_2_0,
d22906 3
a22908 3
        22783 /* "glGetUniformLocation" */,
        22783 /* "glGetUniformLocation" */,
        22804 /* "glGetUniformLocationARB" */,
d22910 1
a22910 1
    return gl_provider_resolver(entrypoint_strings + 22783 /* "glGetUniformLocation" */,
d22919 1
a22920 1
        Desktop_OpenGL_2_0,
d22924 3
a22926 3
        22804 /* "glGetUniformLocationARB" */,
        22783 /* "glGetUniformLocation" */,
        22783 /* "glGetUniformLocation" */,
d22928 1
a22928 1
    return gl_provider_resolver(entrypoint_strings + 22804 /* "glGetUniformLocationARB" */,
d22935 1
a22935 1
    return gl_single_resolver(GL_extension_GL_EXT_bindable_uniform, 22828 /* glGetUniformOffsetEXT */);
d22947 2
a22948 2
        22850 /* "glGetUniformSubroutineuiv" */,
        22850 /* "glGetUniformSubroutineuiv" */,
d22950 1
a22950 1
    return gl_provider_resolver(entrypoint_strings + 22850 /* "glGetUniformSubroutineuiv" */,
d22963 2
a22964 2
        22876 /* "glGetUniformdv" */,
        22876 /* "glGetUniformdv" */,
d22966 1
a22966 1
    return gl_provider_resolver(entrypoint_strings + 22876 /* "glGetUniformdv" */,
d22974 1
a22975 1
        Desktop_OpenGL_2_0,
d22980 3
a22982 3
        22891 /* "glGetUniformfv" */,
        22891 /* "glGetUniformfv" */,
        22906 /* "glGetUniformfvARB" */,
d22984 1
a22984 1
    return gl_provider_resolver(entrypoint_strings + 22891 /* "glGetUniformfv" */,
d22993 1
a22994 1
        Desktop_OpenGL_2_0,
d22998 3
a23000 3
        22906 /* "glGetUniformfvARB" */,
        22891 /* "glGetUniformfv" */,
        22891 /* "glGetUniformfv" */,
d23002 1
a23002 1
    return gl_provider_resolver(entrypoint_strings + 22906 /* "glGetUniformfvARB" */,
d23015 2
a23016 2
        22924 /* "glGetUniformi64vNV" */,
        22924 /* "glGetUniformi64vNV" */,
d23018 1
a23018 1
    return gl_provider_resolver(entrypoint_strings + 22924 /* "glGetUniformi64vNV" */,
d23026 1
a23027 1
        Desktop_OpenGL_2_0,
d23032 3
a23034 3
        22943 /* "glGetUniformiv" */,
        22943 /* "glGetUniformiv" */,
        22958 /* "glGetUniformivARB" */,
d23036 1
a23036 1
    return gl_provider_resolver(entrypoint_strings + 22943 /* "glGetUniformiv" */,
d23045 1
a23046 1
        Desktop_OpenGL_2_0,
d23050 3
a23052 3
        22958 /* "glGetUniformivARB" */,
        22943 /* "glGetUniformiv" */,
        22943 /* "glGetUniformiv" */,
d23054 1
a23054 1
    return gl_provider_resolver(entrypoint_strings + 22958 /* "glGetUniformivARB" */,
d23067 2
a23068 2
        22976 /* "glGetUniformui64vNV" */,
        22976 /* "glGetUniformui64vNV" */,
d23070 1
a23070 1
    return gl_provider_resolver(entrypoint_strings + 22976 /* "glGetUniformui64vNV" */,
d23084 3
a23086 3
        22996 /* "glGetUniformuiv" */,
        22996 /* "glGetUniformuiv" */,
        23012 /* "glGetUniformuivEXT" */,
d23088 1
a23088 1
    return gl_provider_resolver(entrypoint_strings + 22996 /* "glGetUniformuiv" */,
d23102 3
a23104 3
        23012 /* "glGetUniformuivEXT" */,
        22996 /* "glGetUniformuiv" */,
        22996 /* "glGetUniformuiv" */,
d23106 1
a23106 1
    return gl_provider_resolver(entrypoint_strings + 23012 /* "glGetUniformuivEXT" */,
d23113 1
a23113 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 23031 /* glGetVariantArrayObjectfvATI */);
d23119 1
a23119 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 23060 /* glGetVariantArrayObjectivATI */);
d23125 1
a23125 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 23089 /* glGetVariantBooleanvEXT */);
d23131 1
a23131 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 23113 /* glGetVariantFloatvEXT */);
d23137 1
a23137 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 23135 /* glGetVariantIntegervEXT */);
d23143 1
a23143 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 23159 /* glGetVariantPointervEXT */);
d23149 33
a23181 1
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 23183 /* glGetVaryingLocationNV */);
d23187 1
a23187 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 23206 /* glGetVertexArrayIntegeri_vEXT */);
d23193 1
a23193 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 23236 /* glGetVertexArrayIntegervEXT */);
d23199 1
a23199 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 23264 /* glGetVertexArrayPointeri_vEXT */);
d23205 17
a23221 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 23294 /* glGetVertexArrayPointervEXT */);
d23227 1
a23227 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_attrib_array_object, 23322 /* glGetVertexAttribArrayObjectfvATI */);
d23233 1
a23233 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_attrib_array_object, 23356 /* glGetVertexAttribArrayObjectivATI */);
d23246 3
a23248 3
        23390 /* "glGetVertexAttribIiv" */,
        23390 /* "glGetVertexAttribIiv" */,
        23411 /* "glGetVertexAttribIivEXT" */,
d23250 1
a23250 1
    return gl_provider_resolver(entrypoint_strings + 23390 /* "glGetVertexAttribIiv" */,
d23264 3
a23266 3
        23411 /* "glGetVertexAttribIivEXT" */,
        23390 /* "glGetVertexAttribIiv" */,
        23390 /* "glGetVertexAttribIiv" */,
d23268 1
a23268 1
    return gl_provider_resolver(entrypoint_strings + 23411 /* "glGetVertexAttribIivEXT" */,
d23282 3
a23284 3
        23435 /* "glGetVertexAttribIuiv" */,
        23435 /* "glGetVertexAttribIuiv" */,
        23457 /* "glGetVertexAttribIuivEXT" */,
d23286 1
a23286 1
    return gl_provider_resolver(entrypoint_strings + 23435 /* "glGetVertexAttribIuiv" */,
d23300 3
a23302 3
        23457 /* "glGetVertexAttribIuivEXT" */,
        23435 /* "glGetVertexAttribIuiv" */,
        23435 /* "glGetVertexAttribIuiv" */,
d23304 1
a23304 1
    return gl_provider_resolver(entrypoint_strings + 23457 /* "glGetVertexAttribIuivEXT" */,
d23318 3
a23320 3
        23482 /* "glGetVertexAttribLdv" */,
        23482 /* "glGetVertexAttribLdv" */,
        23503 /* "glGetVertexAttribLdvEXT" */,
d23322 1
a23322 1
    return gl_provider_resolver(entrypoint_strings + 23482 /* "glGetVertexAttribLdv" */,
d23336 3
a23338 3
        23503 /* "glGetVertexAttribLdvEXT" */,
        23482 /* "glGetVertexAttribLdv" */,
        23482 /* "glGetVertexAttribLdv" */,
d23340 1
a23340 1
    return gl_provider_resolver(entrypoint_strings + 23503 /* "glGetVertexAttribLdvEXT" */,
d23347 1
a23347 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 23527 /* glGetVertexAttribLi64vNV */);
d23353 1
a23353 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 23552 /* glGetVertexAttribLui64vARB */);
d23359 1
a23359 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 23579 /* glGetVertexAttribLui64vNV */);
d23366 1
d23368 1
a23368 1
        Desktop_OpenGL_2_0,
a23369 1
        GL_extension_GL_ARB_vertex_program,
d23374 5
a23378 5
        23605 /* "glGetVertexAttribPointerv" */,
        23605 /* "glGetVertexAttribPointerv" */,
        23631 /* "glGetVertexAttribPointervARB" */,
        23631 /* "glGetVertexAttribPointervARB" */,
        23660 /* "glGetVertexAttribPointervNV" */,
d23380 1
a23380 1
    return gl_provider_resolver(entrypoint_strings + 23605 /* "glGetVertexAttribPointerv" */,
d23388 1
d23390 1
a23390 1
        GL_extension_GL_ARB_vertex_program,
a23391 1
        Desktop_OpenGL_2_0,
d23396 5
a23400 5
        23631 /* "glGetVertexAttribPointervARB" */,
        23631 /* "glGetVertexAttribPointervARB" */,
        23605 /* "glGetVertexAttribPointerv" */,
        23605 /* "glGetVertexAttribPointerv" */,
        23660 /* "glGetVertexAttribPointervNV" */,
d23402 1
a23402 1
    return gl_provider_resolver(entrypoint_strings + 23631 /* "glGetVertexAttribPointervARB" */,
d23411 1
d23413 1
a23413 1
        Desktop_OpenGL_2_0,
a23414 1
        GL_extension_GL_ARB_vertex_program,
d23418 5
a23422 5
        23660 /* "glGetVertexAttribPointervNV" */,
        23605 /* "glGetVertexAttribPointerv" */,
        23605 /* "glGetVertexAttribPointerv" */,
        23631 /* "glGetVertexAttribPointervARB" */,
        23631 /* "glGetVertexAttribPointervARB" */,
d23424 1
a23424 1
    return gl_provider_resolver(entrypoint_strings + 23660 /* "glGetVertexAttribPointervNV" */,
d23433 1
a23434 1
        GL_extension_GL_ARB_vertex_program,
d23439 4
a23442 4
        23688 /* "glGetVertexAttribdv" */,
        23708 /* "glGetVertexAttribdvARB" */,
        23708 /* "glGetVertexAttribdvARB" */,
        23731 /* "glGetVertexAttribdvNV" */,
d23444 1
a23444 1
    return gl_provider_resolver(entrypoint_strings + 23688 /* "glGetVertexAttribdv" */,
d23452 1
a23453 1
        GL_extension_GL_ARB_vertex_program,
d23459 4
a23462 4
        23708 /* "glGetVertexAttribdvARB" */,
        23708 /* "glGetVertexAttribdvARB" */,
        23688 /* "glGetVertexAttribdv" */,
        23731 /* "glGetVertexAttribdvNV" */,
d23464 1
a23464 1
    return gl_provider_resolver(entrypoint_strings + 23708 /* "glGetVertexAttribdvARB" */,
d23474 1
a23475 1
        GL_extension_GL_ARB_vertex_program,
d23479 4
a23482 4
        23731 /* "glGetVertexAttribdvNV" */,
        23688 /* "glGetVertexAttribdv" */,
        23708 /* "glGetVertexAttribdvARB" */,
        23708 /* "glGetVertexAttribdvARB" */,
d23484 1
a23484 1
    return gl_provider_resolver(entrypoint_strings + 23731 /* "glGetVertexAttribdvNV" */,
d23492 1
d23494 1
a23494 1
        Desktop_OpenGL_2_0,
a23495 1
        GL_extension_GL_ARB_vertex_program,
d23500 5
a23504 5
        23753 /* "glGetVertexAttribfv" */,
        23753 /* "glGetVertexAttribfv" */,
        23773 /* "glGetVertexAttribfvARB" */,
        23773 /* "glGetVertexAttribfvARB" */,
        23796 /* "glGetVertexAttribfvNV" */,
d23506 1
a23506 1
    return gl_provider_resolver(entrypoint_strings + 23753 /* "glGetVertexAttribfv" */,
d23514 1
d23516 1
a23516 1
        GL_extension_GL_ARB_vertex_program,
a23517 1
        Desktop_OpenGL_2_0,
d23522 5
a23526 5
        23773 /* "glGetVertexAttribfvARB" */,
        23773 /* "glGetVertexAttribfvARB" */,
        23753 /* "glGetVertexAttribfv" */,
        23753 /* "glGetVertexAttribfv" */,
        23796 /* "glGetVertexAttribfvNV" */,
d23528 1
a23528 1
    return gl_provider_resolver(entrypoint_strings + 23773 /* "glGetVertexAttribfvARB" */,
d23537 1
d23539 1
a23539 1
        Desktop_OpenGL_2_0,
a23540 1
        GL_extension_GL_ARB_vertex_program,
d23544 5
a23548 5
        23796 /* "glGetVertexAttribfvNV" */,
        23753 /* "glGetVertexAttribfv" */,
        23753 /* "glGetVertexAttribfv" */,
        23773 /* "glGetVertexAttribfvARB" */,
        23773 /* "glGetVertexAttribfvARB" */,
d23550 1
a23550 1
    return gl_provider_resolver(entrypoint_strings + 23796 /* "glGetVertexAttribfvNV" */,
d23558 1
d23560 1
a23560 1
        Desktop_OpenGL_2_0,
a23561 1
        GL_extension_GL_ARB_vertex_program,
d23566 5
a23570 5
        23818 /* "glGetVertexAttribiv" */,
        23818 /* "glGetVertexAttribiv" */,
        23838 /* "glGetVertexAttribivARB" */,
        23838 /* "glGetVertexAttribivARB" */,
        23861 /* "glGetVertexAttribivNV" */,
d23572 1
a23572 1
    return gl_provider_resolver(entrypoint_strings + 23818 /* "glGetVertexAttribiv" */,
d23580 1
d23582 1
a23582 1
        GL_extension_GL_ARB_vertex_program,
a23583 1
        Desktop_OpenGL_2_0,
d23588 5
a23592 5
        23838 /* "glGetVertexAttribivARB" */,
        23838 /* "glGetVertexAttribivARB" */,
        23818 /* "glGetVertexAttribiv" */,
        23818 /* "glGetVertexAttribiv" */,
        23861 /* "glGetVertexAttribivNV" */,
d23594 1
a23594 1
    return gl_provider_resolver(entrypoint_strings + 23838 /* "glGetVertexAttribivARB" */,
d23603 1
d23605 1
a23605 1
        Desktop_OpenGL_2_0,
a23606 1
        GL_extension_GL_ARB_vertex_program,
d23610 5
a23614 5
        23861 /* "glGetVertexAttribivNV" */,
        23818 /* "glGetVertexAttribiv" */,
        23818 /* "glGetVertexAttribiv" */,
        23838 /* "glGetVertexAttribivARB" */,
        23838 /* "glGetVertexAttribivARB" */,
d23616 1
a23616 1
    return gl_provider_resolver(entrypoint_strings + 23861 /* "glGetVertexAttribivNV" */,
d23623 1
a23623 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 23883 /* glGetVideoCaptureStreamdvNV */);
d23629 1
a23629 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 23911 /* glGetVideoCaptureStreamfvNV */);
d23635 1
a23635 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 23939 /* glGetVideoCaptureStreamivNV */);
d23641 1
a23641 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 23967 /* glGetVideoCaptureivNV */);
d23647 1
a23647 1
    return gl_single_resolver(GL_extension_GL_NV_present_video, 23989 /* glGetVideoi64vNV */);
d23653 1
a23653 1
    return gl_single_resolver(GL_extension_GL_NV_present_video, 24006 /* glGetVideoivNV */);
d23659 1
a23659 1
    return gl_single_resolver(GL_extension_GL_NV_present_video, 24021 /* glGetVideoui64vNV */);
d23665 7
a23671 1
    return gl_single_resolver(GL_extension_GL_NV_present_video, 24039 /* glGetVideouivNV */);
d23677 7
a23683 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24055 /* glGetnColorTableARB */);
d23689 7
a23695 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24075 /* glGetnCompressedTexImageARB */);
d23701 7
a23707 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24103 /* glGetnConvolutionFilterARB */);
d23713 7
a23719 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24130 /* glGetnHistogramARB */);
d23725 7
a23731 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24149 /* glGetnMapdvARB */);
d23737 7
a23743 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24164 /* glGetnMapfvARB */);
d23749 7
a23755 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24179 /* glGetnMapivARB */);
d23761 7
a23767 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24194 /* glGetnMinmaxARB */);
d23773 7
a23779 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24210 /* glGetnPixelMapfvARB */);
d23785 7
a23791 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24230 /* glGetnPixelMapuivARB */);
d23797 7
a23803 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24251 /* glGetnPixelMapusvARB */);
d23809 7
a23815 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24272 /* glGetnPolygonStippleARB */);
d23821 7
a23827 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24296 /* glGetnSeparableFilterARB */);
d23833 7
a23839 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24321 /* glGetnTexImageARB */);
d23845 19
a23863 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24339 /* glGetnUniformdvARB */);
d23869 1
a23869 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24358 /* glGetnUniformfvARB */);
d23875 37
a23911 1
    return gl_single_resolver(GL_extension_GL_EXT_robustness, 24377 /* glGetnUniformfvEXT */);
d23917 1
a23917 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24396 /* glGetnUniformivARB */);
d23923 37
a23959 1
    return gl_single_resolver(GL_extension_GL_EXT_robustness, 24415 /* glGetnUniformivEXT */);
d23965 19
a23983 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 24434 /* glGetnUniformuivARB */);
d23989 1
a23989 1
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 24454 /* glGlobalAlphaFactorbSUN */);
d23995 1
a23995 1
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 24478 /* glGlobalAlphaFactordSUN */);
d24001 1
a24001 1
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 24502 /* glGlobalAlphaFactorfSUN */);
d24007 1
a24007 1
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 24526 /* glGlobalAlphaFactoriSUN */);
d24013 1
a24013 1
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 24550 /* glGlobalAlphaFactorsSUN */);
d24019 1
a24019 1
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 24574 /* glGlobalAlphaFactorubSUN */);
d24025 1
a24025 1
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 24599 /* glGlobalAlphaFactoruiSUN */);
d24031 1
a24031 1
    return gl_single_resolver(GL_extension_GL_SUN_global_alpha, 24624 /* glGlobalAlphaFactorusSUN */);
d24044 3
a24046 3
        24649 /* "glHint" */,
        24649 /* "glHint" */,
        24649 /* "glHint" */,
d24048 1
a24048 1
    return gl_provider_resolver(entrypoint_strings + 24649 /* "glHint" */,
d24055 1
a24055 1
    return gl_single_resolver(GL_extension_GL_PGI_misc_hints, 24656 /* glHintPGI */);
d24067 2
a24068 2
        24666 /* "glHistogram" */,
        24678 /* "glHistogramEXT" */,
d24070 1
a24070 1
    return gl_provider_resolver(entrypoint_strings + 24666 /* "glHistogram" */,
d24083 2
a24084 2
        24678 /* "glHistogramEXT" */,
        24666 /* "glHistogram" */,
d24086 1
a24086 1
    return gl_provider_resolver(entrypoint_strings + 24678 /* "glHistogramEXT" */,
d24093 1
a24093 1
    return gl_single_resolver(GL_extension_GL_SGIX_igloo_interface, 24693 /* glIglooInterfaceSGIX */);
d24099 1
a24099 1
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 24714 /* glImageTransformParameterfHP */);
d24105 1
a24105 1
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 24743 /* glImageTransformParameterfvHP */);
d24111 1
a24111 1
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 24773 /* glImageTransformParameteriHP */);
d24117 1
a24117 1
    return gl_single_resolver(GL_extension_GL_HP_image_transform, 24802 /* glImageTransformParameterivHP */);
d24123 1
a24123 1
    return gl_single_resolver(GL_extension_GL_EXT_x11_sync_object, 24832 /* glImportSyncEXT */);
d24129 1
a24129 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 24848 /* glIndexFormatNV */);
d24135 1
a24135 1
    return gl_single_resolver(GL_extension_GL_EXT_index_func, 24864 /* glIndexFuncEXT */);
d24141 1
a24141 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 24879 /* glIndexMask */);
d24147 1
a24147 1
    return gl_single_resolver(GL_extension_GL_EXT_index_material, 24891 /* glIndexMaterialEXT */);
d24153 1
a24153 1
    return gl_single_resolver(Desktop_OpenGL_1_1, 24910 /* glIndexPointer */);
d24159 1
a24159 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 24925 /* glIndexPointerEXT */);
d24165 1
a24165 1
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 24943 /* glIndexPointerListIBM */);
d24171 1
a24171 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 24965 /* glIndexd */);
d24177 1
a24177 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 24974 /* glIndexdv */);
d24183 1
a24183 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 24984 /* glIndexf */);
d24189 1
a24189 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 24993 /* glIndexfv */);
d24195 1
a24195 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 25003 /* glIndexi */);
d24201 1
a24201 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 25012 /* glIndexiv */);
d24207 1
a24207 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 25022 /* glIndexs */);
d24213 1
a24213 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 25031 /* glIndexsv */);
d24219 1
a24219 1
    return gl_single_resolver(Desktop_OpenGL_1_1, 25041 /* glIndexub */);
d24225 1
a24225 1
    return gl_single_resolver(Desktop_OpenGL_1_1, 25051 /* glIndexubv */);
d24231 1
a24231 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 25062 /* glIndexxOES */);
d24237 1
a24237 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 25074 /* glIndexxvOES */);
d24243 1
a24243 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 25087 /* glInitNames */);
d24249 1
a24249 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 25099 /* glInsertComponentEXT */);
d24255 1
a24255 1
    return gl_single_resolver(GL_extension_GL_EXT_debug_marker, 25120 /* glInsertEventMarkerEXT */);
d24261 1
a24261 1
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 25143 /* glInstrumentsBufferSGIX */);
d24267 1
a24267 1
    return gl_single_resolver(Desktop_OpenGL_1_1, 25167 /* glInterleavedArrays */);
d24273 1
a24273 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 25187 /* glInterpolatePathsNV */);
d24285 2
a24286 2
        25208 /* "glInvalidateBufferData" */,
        25208 /* "glInvalidateBufferData" */,
d24288 1
a24288 1
    return gl_provider_resolver(entrypoint_strings + 25208 /* "glInvalidateBufferData" */,
d24301 2
a24302 2
        25231 /* "glInvalidateBufferSubData" */,
        25231 /* "glInvalidateBufferSubData" */,
d24304 1
a24304 1
    return gl_provider_resolver(entrypoint_strings + 25231 /* "glInvalidateBufferSubData" */,
d24313 1
a24314 1
        GL_extension_GL_ARB_invalidate_subdata,
d24318 35
a24352 3
        25257 /* "glInvalidateFramebuffer" */,
        25257 /* "glInvalidateFramebuffer" */,
        25257 /* "glInvalidateFramebuffer" */,
d24354 1
a24354 1
    return gl_provider_resolver(entrypoint_strings + 25257 /* "glInvalidateFramebuffer" */,
d24363 1
a24364 1
        GL_extension_GL_ARB_invalidate_subdata,
d24368 3
a24370 3
        25281 /* "glInvalidateSubFramebuffer" */,
        25281 /* "glInvalidateSubFramebuffer" */,
        25281 /* "glInvalidateSubFramebuffer" */,
d24372 1
a24372 1
    return gl_provider_resolver(entrypoint_strings + 25281 /* "glInvalidateSubFramebuffer" */,
d24385 2
a24386 2
        25308 /* "glInvalidateTexImage" */,
        25308 /* "glInvalidateTexImage" */,
d24388 1
a24388 1
    return gl_provider_resolver(entrypoint_strings + 25308 /* "glInvalidateTexImage" */,
d24401 2
a24402 2
        25329 /* "glInvalidateTexSubImage" */,
        25329 /* "glInvalidateTexSubImage" */,
d24404 1
a24404 1
    return gl_provider_resolver(entrypoint_strings + 25329 /* "glInvalidateTexSubImage" */,
d24411 1
a24411 1
    return gl_single_resolver(GL_extension_GL_SGIX_async, 25353 /* glIsAsyncMarkerSGIX */);
d24418 1
a24419 1
        Desktop_OpenGL_1_5,
d24425 4
a24428 4
        25373 /* "glIsBuffer" */,
        25373 /* "glIsBuffer" */,
        25373 /* "glIsBuffer" */,
        25384 /* "glIsBufferARB" */,
d24430 1
a24430 1
    return gl_provider_resolver(entrypoint_strings + 25373 /* "glIsBuffer" */,
d24439 1
a24440 1
        Desktop_OpenGL_1_5,
d24445 4
a24448 4
        25384 /* "glIsBufferARB" */,
        25373 /* "glIsBuffer" */,
        25373 /* "glIsBuffer" */,
        25373 /* "glIsBuffer" */,
d24450 1
a24450 1
    return gl_provider_resolver(entrypoint_strings + 25384 /* "glIsBufferARB" */,
d24457 7
a24463 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 25398 /* glIsBufferResidentNV */);
d24476 3
a24478 3
        25419 /* "glIsEnabled" */,
        25419 /* "glIsEnabled" */,
        25419 /* "glIsEnabled" */,
d24480 1
a24480 1
    return gl_provider_resolver(entrypoint_strings + 25419 /* "glIsEnabled" */,
d24488 1
a24489 1
        GL_extension_GL_EXT_direct_state_access,
d24491 3
d24497 6
a24502 3
        25431 /* "glIsEnabledIndexedEXT" */,
        25431 /* "glIsEnabledIndexedEXT" */,
        25453 /* "glIsEnabledi" */,
d24504 1
a24504 1
    return gl_provider_resolver(entrypoint_strings + 25431 /* "glIsEnabledIndexedEXT" */,
d24513 49
d24563 22
d24586 4
d24593 6
a24598 3
        25453 /* "glIsEnabledi" */,
        25431 /* "glIsEnabledIndexedEXT" */,
        25431 /* "glIsEnabledIndexedEXT" */,
d24600 1
a24600 1
    return gl_provider_resolver(entrypoint_strings + 25453 /* "glIsEnabledi" */,
d24607 1
a24607 1
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 25466 /* glIsFenceAPPLE */);
d24613 1
a24613 1
    return gl_single_resolver(GL_extension_GL_NV_fence, 25481 /* glIsFenceNV */);
d24627 4
a24630 4
        25493 /* "glIsFramebuffer" */,
        25493 /* "glIsFramebuffer" */,
        25493 /* "glIsFramebuffer" */,
        25509 /* "glIsFramebufferEXT" */,
d24632 1
a24632 1
    return gl_provider_resolver(entrypoint_strings + 25493 /* "glIsFramebuffer" */,
d24647 4
a24650 4
        25509 /* "glIsFramebufferEXT" */,
        25493 /* "glIsFramebuffer" */,
        25493 /* "glIsFramebuffer" */,
        25493 /* "glIsFramebuffer" */,
d24652 1
a24652 1
    return gl_provider_resolver(entrypoint_strings + 25509 /* "glIsFramebufferEXT" */,
d24659 1
a24659 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 25528 /* glIsFramebufferOES */);
d24665 1
a24665 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 25547 /* glIsImageHandleResidentARB */);
d24671 1
a24671 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 25574 /* glIsImageHandleResidentNV */);
d24677 1
a24677 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 25600 /* glIsList */);
d24683 1
a24683 1
    return gl_single_resolver(GL_extension_GL_AMD_name_gen_delete, 25609 /* glIsNameAMD */);
d24689 1
a24689 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 25621 /* glIsNamedBufferResidentNV */);
d24695 1
a24695 1
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 25647 /* glIsNamedStringARB */);
d24701 1
a24701 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 25666 /* glIsObjectBufferATI */);
d24707 1
a24707 1
    return gl_single_resolver(GL_extension_GL_NV_occlusion_query, 25686 /* glIsOcclusionQueryNV */);
d24713 1
a24713 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 25707 /* glIsPathNV */);
d24719 1
a24719 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 25718 /* glIsPointInFillPathNV */);
d24725 1
a24725 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 25740 /* glIsPointInStrokePathNV */);
d24732 1
a24733 1
        Desktop_OpenGL_2_0,
d24737 2
a24738 2
        25764 /* "glIsProgram" */,
        25764 /* "glIsProgram" */,
d24740 1
a24740 1
    return gl_provider_resolver(entrypoint_strings + 25764 /* "glIsProgram" */,
d24748 1
a24749 1
        GL_extension_GL_ARB_fragment_program,
d24754 3
a24756 3
        25776 /* "glIsProgramARB" */,
        25776 /* "glIsProgramARB" */,
        25791 /* "glIsProgramNV" */,
d24758 1
a24758 1
    return gl_provider_resolver(entrypoint_strings + 25776 /* "glIsProgramARB" */,
d24767 1
a24768 1
        GL_extension_GL_ARB_fragment_program,
d24772 3
a24774 3
        25791 /* "glIsProgramNV" */,
        25776 /* "glIsProgramARB" */,
        25776 /* "glIsProgramARB" */,
d24776 1
a24776 1
    return gl_provider_resolver(entrypoint_strings + 25791 /* "glIsProgramNV" */,
d24785 1
a24786 1
        GL_extension_GL_ARB_separate_shader_objects,
d24790 3
a24792 3
        25805 /* "glIsProgramPipeline" */,
        25805 /* "glIsProgramPipeline" */,
        25805 /* "glIsProgramPipeline" */,
d24794 1
a24794 1
    return gl_provider_resolver(entrypoint_strings + 25805 /* "glIsProgramPipeline" */,
d24801 1
a24801 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 25825 /* glIsProgramPipelineEXT */);
d24808 1
a24809 1
        Desktop_OpenGL_1_5,
d24814 3
a24816 3
        25848 /* "glIsQuery" */,
        25848 /* "glIsQuery" */,
        25858 /* "glIsQueryARB" */,
d24818 1
a24818 1
    return gl_provider_resolver(entrypoint_strings + 25848 /* "glIsQuery" */,
d24827 1
a24828 1
        Desktop_OpenGL_1_5,
d24832 3
a24834 3
        25858 /* "glIsQueryARB" */,
        25848 /* "glIsQuery" */,
        25848 /* "glIsQuery" */,
d24836 1
a24836 1
    return gl_provider_resolver(entrypoint_strings + 25858 /* "glIsQueryARB" */,
d24844 1
a24845 1
        GL_extension_GL_EXT_disjoint_timer_query,
d24849 2
a24850 2
        25871 /* "glIsQueryEXT" */,
        25871 /* "glIsQueryEXT" */,
d24852 1
a24852 1
    return gl_provider_resolver(entrypoint_strings + 25871 /* "glIsQueryEXT" */,
d24867 4
a24870 4
        25884 /* "glIsRenderbuffer" */,
        25884 /* "glIsRenderbuffer" */,
        25884 /* "glIsRenderbuffer" */,
        25901 /* "glIsRenderbufferEXT" */,
d24872 1
a24872 1
    return gl_provider_resolver(entrypoint_strings + 25884 /* "glIsRenderbuffer" */,
d24887 4
a24890 4
        25901 /* "glIsRenderbufferEXT" */,
        25884 /* "glIsRenderbuffer" */,
        25884 /* "glIsRenderbuffer" */,
        25884 /* "glIsRenderbuffer" */,
d24892 1
a24892 1
    return gl_provider_resolver(entrypoint_strings + 25901 /* "glIsRenderbufferEXT" */,
d24899 1
a24899 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 25921 /* glIsRenderbufferOES */);
d24906 1
a24907 1
        Desktop_OpenGL_3_3,
d24912 3
a24914 3
        25941 /* "glIsSampler" */,
        25941 /* "glIsSampler" */,
        25941 /* "glIsSampler" */,
d24916 1
a24916 1
    return gl_provider_resolver(entrypoint_strings + 25941 /* "glIsSampler" */,
d24924 1
a24925 1
        Desktop_OpenGL_2_0,
d24929 2
a24930 2
        25953 /* "glIsShader" */,
        25953 /* "glIsShader" */,
d24932 1
a24932 1
    return gl_provider_resolver(entrypoint_strings + 25953 /* "glIsShader" */,
d24936 6
d24953 4
a24956 4
        25964 /* "glIsSync" */,
        25964 /* "glIsSync" */,
        25964 /* "glIsSync" */,
        25973 /* "glIsSyncAPPLE" */,
d24958 1
a24958 1
    return gl_provider_resolver(entrypoint_strings + 25964 /* "glIsSync" */,
d24973 4
a24976 4
        25973 /* "glIsSyncAPPLE" */,
        25964 /* "glIsSync" */,
        25964 /* "glIsSync" */,
        25964 /* "glIsSync" */,
d24978 1
a24978 1
    return gl_provider_resolver(entrypoint_strings + 25973 /* "glIsSyncAPPLE" */,
d24987 1
a24988 1
        OpenGL_ES_1_0,
d24992 3
a24994 3
        25987 /* "glIsTexture" */,
        25987 /* "glIsTexture" */,
        25987 /* "glIsTexture" */,
d24996 1
a24996 1
    return gl_provider_resolver(entrypoint_strings + 25987 /* "glIsTexture" */,
d25003 1
a25003 1
    return gl_single_resolver(GL_extension_GL_EXT_texture_object, 25999 /* glIsTextureEXT */);
d25009 1
a25009 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 26014 /* glIsTextureHandleResidentARB */);
d25015 1
a25015 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 26043 /* glIsTextureHandleResidentNV */);
d25023 1
a25024 1
        GL_extension_GL_ARB_transform_feedback2,
d25029 4
a25032 4
        26071 /* "glIsTransformFeedback" */,
        26071 /* "glIsTransformFeedback" */,
        26071 /* "glIsTransformFeedback" */,
        26093 /* "glIsTransformFeedbackNV" */,
d25034 1
a25034 1
    return gl_provider_resolver(entrypoint_strings + 26071 /* "glIsTransformFeedback" */,
d25044 1
a25045 1
        GL_extension_GL_ARB_transform_feedback2,
d25049 4
a25052 4
        26093 /* "glIsTransformFeedbackNV" */,
        26071 /* "glIsTransformFeedback" */,
        26071 /* "glIsTransformFeedback" */,
        26071 /* "glIsTransformFeedback" */,
d25054 1
a25054 1
    return gl_provider_resolver(entrypoint_strings + 26093 /* "glIsTransformFeedbackNV" */,
d25061 1
a25061 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 26117 /* glIsVariantEnabledEXT */);
d25069 1
a25070 1
        GL_extension_GL_ARB_vertex_array_object,
d25076 5
a25080 5
        26139 /* "glIsVertexArray" */,
        26139 /* "glIsVertexArray" */,
        26139 /* "glIsVertexArray" */,
        26155 /* "glIsVertexArrayAPPLE" */,
        26176 /* "glIsVertexArrayOES" */,
d25082 1
a25082 1
    return gl_provider_resolver(entrypoint_strings + 26139 /* "glIsVertexArray" */,
d25092 1
a25093 1
        GL_extension_GL_ARB_vertex_array_object,
d25098 5
a25102 5
        26155 /* "glIsVertexArrayAPPLE" */,
        26139 /* "glIsVertexArray" */,
        26139 /* "glIsVertexArray" */,
        26139 /* "glIsVertexArray" */,
        26176 /* "glIsVertexArrayOES" */,
d25104 1
a25104 1
    return gl_provider_resolver(entrypoint_strings + 26155 /* "glIsVertexArrayAPPLE" */,
d25114 1
a25115 1
        GL_extension_GL_ARB_vertex_array_object,
d25120 5
a25124 5
        26176 /* "glIsVertexArrayOES" */,
        26139 /* "glIsVertexArray" */,
        26139 /* "glIsVertexArray" */,
        26139 /* "glIsVertexArray" */,
        26155 /* "glIsVertexArrayAPPLE" */,
d25126 1
a25126 1
    return gl_provider_resolver(entrypoint_strings + 26176 /* "glIsVertexArrayOES" */,
d25133 1
a25133 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 26195 /* glIsVertexAttribEnabledAPPLE */);
d25139 1
a25139 1
    return gl_single_resolver(GL_extension_GL_EXT_debug_label, 26224 /* glLabelObjectEXT */);
d25145 1
a25145 1
    return gl_single_resolver(GL_extension_GL_SGIX_fragment_lighting, 26241 /* glLightEnviSGIX */);
d25157 2
a25158 2
        26257 /* "glLightModelf" */,
        26257 /* "glLightModelf" */,
d25160 1
a25160 1
    return gl_provider_resolver(entrypoint_strings + 26257 /* "glLightModelf" */,
d25173 2
a25174 2
        26271 /* "glLightModelfv" */,
        26271 /* "glLightModelfv" */,
d25176 1
a25176 1
    return gl_provider_resolver(entrypoint_strings + 26271 /* "glLightModelfv" */,
d25183 1
a25183 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 26286 /* glLightModeli */);
d25189 1
a25189 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 26300 /* glLightModeliv */);
d25195 1
a25195 1
    return gl_single_resolver(OpenGL_ES_1_0, 26315 /* glLightModelx */);
d25201 1
a25201 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 26329 /* glLightModelxOES */);
d25207 1
a25207 1
    return gl_single_resolver(OpenGL_ES_1_0, 26346 /* glLightModelxv */);
d25213 1
a25213 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 26361 /* glLightModelxvOES */);
d25225 2
a25226 2
        26379 /* "glLightf" */,
        26379 /* "glLightf" */,
d25228 1
a25228 1
    return gl_provider_resolver(entrypoint_strings + 26379 /* "glLightf" */,
d25241 2
a25242 2
        26388 /* "glLightfv" */,
        26388 /* "glLightfv" */,
d25244 1
a25244 1
    return gl_provider_resolver(entrypoint_strings + 26388 /* "glLightfv" */,
d25251 1
a25251 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 26398 /* glLighti */);
d25257 1
a25257 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 26407 /* glLightiv */);
d25263 1
a25263 1
    return gl_single_resolver(OpenGL_ES_1_0, 26417 /* glLightx */);
d25269 1
a25269 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 26426 /* glLightxOES */);
d25275 1
a25275 1
    return gl_single_resolver(OpenGL_ES_1_0, 26438 /* glLightxv */);
d25281 1
a25281 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 26448 /* glLightxvOES */);
d25287 1
a25287 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 26461 /* glLineStipple */);
d25300 3
a25302 3
        26475 /* "glLineWidth" */,
        26475 /* "glLineWidth" */,
        26475 /* "glLineWidth" */,
d25304 1
a25304 1
    return gl_provider_resolver(entrypoint_strings + 26475 /* "glLineWidth" */,
d25311 1
a25311 1
    return gl_single_resolver(OpenGL_ES_1_0, 26487 /* glLineWidthx */);
d25317 1
a25317 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 26500 /* glLineWidthxOES */);
d25324 1
a25325 1
        Desktop_OpenGL_2_0,
d25330 3
a25332 3
        26516 /* "glLinkProgram" */,
        26516 /* "glLinkProgram" */,
        26530 /* "glLinkProgramARB" */,
d25334 1
a25334 1
    return gl_provider_resolver(entrypoint_strings + 26516 /* "glLinkProgram" */,
d25343 1
a25344 1
        Desktop_OpenGL_2_0,
d25348 3
a25350 3
        26530 /* "glLinkProgramARB" */,
        26516 /* "glLinkProgram" */,
        26516 /* "glLinkProgram" */,
d25352 1
a25352 1
    return gl_provider_resolver(entrypoint_strings + 26530 /* "glLinkProgramARB" */,
d25359 7
a25365 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 26547 /* glListBase */);
d25371 1
a25371 1
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 26558 /* glListParameterfSGIX */);
d25377 1
a25377 1
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 26579 /* glListParameterfvSGIX */);
d25383 1
a25383 1
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 26601 /* glListParameteriSGIX */);
d25389 1
a25389 1
    return gl_single_resolver(GL_extension_GL_SGIX_list_priority, 26622 /* glListParameterivSGIX */);
d25401 2
a25402 2
        26644 /* "glLoadIdentity" */,
        26644 /* "glLoadIdentity" */,
d25404 1
a25404 1
    return gl_provider_resolver(entrypoint_strings + 26644 /* "glLoadIdentity" */,
d25411 1
a25411 1
    return gl_single_resolver(GL_extension_GL_SGIX_polynomial_ffd, 26659 /* glLoadIdentityDeformationMapSGIX */);
d25417 1
a25417 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 26692 /* glLoadMatrixd */);
d25429 2
a25430 2
        26706 /* "glLoadMatrixf" */,
        26706 /* "glLoadMatrixf" */,
d25432 1
a25432 1
    return gl_provider_resolver(entrypoint_strings + 26706 /* "glLoadMatrixf" */,
d25439 1
a25439 1
    return gl_single_resolver(OpenGL_ES_1_0, 26720 /* glLoadMatrixx */);
d25445 1
a25445 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 26734 /* glLoadMatrixxOES */);
d25451 1
a25451 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 26751 /* glLoadName */);
d25457 1
a25457 1
    return gl_single_resolver(GL_extension_GL_OES_matrix_palette, 26762 /* glLoadPaletteFromModelViewMatrixOES */);
d25463 1
a25463 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 26798 /* glLoadProgramNV */);
d25475 2
a25476 2
        26814 /* "glLoadTransposeMatrixd" */,
        26837 /* "glLoadTransposeMatrixdARB" */,
d25478 1
a25478 1
    return gl_provider_resolver(entrypoint_strings + 26814 /* "glLoadTransposeMatrixd" */,
d25491 2
a25492 2
        26837 /* "glLoadTransposeMatrixdARB" */,
        26814 /* "glLoadTransposeMatrixd" */,
d25494 1
a25494 1
    return gl_provider_resolver(entrypoint_strings + 26837 /* "glLoadTransposeMatrixdARB" */,
d25507 2
a25508 2
        26863 /* "glLoadTransposeMatrixf" */,
        26886 /* "glLoadTransposeMatrixfARB" */,
d25510 1
a25510 1
    return gl_provider_resolver(entrypoint_strings + 26863 /* "glLoadTransposeMatrixf" */,
d25523 2
a25524 2
        26886 /* "glLoadTransposeMatrixfARB" */,
        26863 /* "glLoadTransposeMatrixf" */,
d25526 1
a25526 1
    return gl_provider_resolver(entrypoint_strings + 26886 /* "glLoadTransposeMatrixfARB" */,
d25533 1
a25533 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 26912 /* glLoadTransposeMatrixxOES */);
d25539 1
a25539 1
    return gl_single_resolver(GL_extension_GL_EXT_compiled_vertex_array, 26938 /* glLockArraysEXT */);
d25551 2
a25552 2
        26954 /* "glLogicOp" */,
        26954 /* "glLogicOp" */,
d25554 1
a25554 1
    return gl_provider_resolver(entrypoint_strings + 26954 /* "glLogicOp" */,
d25561 1
a25561 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 26964 /* glMakeBufferNonResidentNV */);
d25567 1
a25567 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 26990 /* glMakeBufferResidentNV */);
d25573 1
a25573 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 27013 /* glMakeImageHandleNonResidentARB */);
d25579 1
a25579 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 27045 /* glMakeImageHandleNonResidentNV */);
d25585 1
a25585 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 27076 /* glMakeImageHandleResidentARB */);
d25591 1
a25591 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 27105 /* glMakeImageHandleResidentNV */);
d25597 1
a25597 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 27133 /* glMakeNamedBufferNonResidentNV */);
d25603 1
a25603 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 27164 /* glMakeNamedBufferResidentNV */);
d25609 1
a25609 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 27192 /* glMakeTextureHandleNonResidentARB */);
d25615 1
a25615 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 27226 /* glMakeTextureHandleNonResidentNV */);
d25621 1
a25621 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 27259 /* glMakeTextureHandleResidentARB */);
d25627 1
a25627 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 27290 /* glMakeTextureHandleResidentNV */);
d25633 1
a25633 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27320 /* glMap1d */);
d25639 1
a25639 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27328 /* glMap1f */);
d25645 1
a25645 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 27336 /* glMap1xOES */);
d25651 1
a25651 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27347 /* glMap2d */);
d25657 1
a25657 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27355 /* glMap2f */);
d25663 1
a25663 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 27363 /* glMap2xOES */);
d25676 3
a25678 3
        27374 /* "glMapBuffer" */,
        27386 /* "glMapBufferARB" */,
        27401 /* "glMapBufferOES" */,
d25680 1
a25680 1
    return gl_provider_resolver(entrypoint_strings + 27374 /* "glMapBuffer" */,
d25694 3
a25696 3
        27386 /* "glMapBufferARB" */,
        27374 /* "glMapBuffer" */,
        27401 /* "glMapBufferOES" */,
d25698 1
a25698 1
    return gl_provider_resolver(entrypoint_strings + 27386 /* "glMapBufferARB" */,
d25712 3
a25714 3
        27401 /* "glMapBufferOES" */,
        27374 /* "glMapBuffer" */,
        27386 /* "glMapBufferARB" */,
d25716 1
a25716 1
    return gl_provider_resolver(entrypoint_strings + 27401 /* "glMapBufferOES" */,
d25724 1
a25725 1
        Desktop_OpenGL_3_0,
d25731 4
a25734 4
        27416 /* "glMapBufferRange" */,
        27416 /* "glMapBufferRange" */,
        27416 /* "glMapBufferRange" */,
        27433 /* "glMapBufferRangeEXT" */,
d25736 1
a25736 1
    return gl_provider_resolver(entrypoint_strings + 27416 /* "glMapBufferRange" */,
d25745 1
a25746 1
        Desktop_OpenGL_3_0,
d25751 4
a25754 4
        27433 /* "glMapBufferRangeEXT" */,
        27416 /* "glMapBufferRange" */,
        27416 /* "glMapBufferRange" */,
        27416 /* "glMapBufferRange" */,
d25756 1
a25756 1
    return gl_provider_resolver(entrypoint_strings + 27433 /* "glMapBufferRangeEXT" */,
d25763 1
a25763 1
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 27453 /* glMapControlPointsNV */);
d25769 1
a25769 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27474 /* glMapGrid1d */);
d25775 1
a25775 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27486 /* glMapGrid1f */);
d25781 1
a25781 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 27498 /* glMapGrid1xOES */);
d25787 1
a25787 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27513 /* glMapGrid2d */);
d25793 1
a25793 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27525 /* glMapGrid2f */);
d25799 17
a25815 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 27537 /* glMapGrid2xOES */);
d25821 17
a25837 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 27552 /* glMapNamedBufferEXT */);
d25843 1
a25843 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 27572 /* glMapNamedBufferRangeEXT */);
d25849 1
a25849 1
    return gl_single_resolver(GL_extension_GL_ATI_map_object_buffer, 27597 /* glMapObjectBufferATI */);
d25855 1
a25855 1
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 27618 /* glMapParameterfvNV */);
d25861 1
a25861 1
    return gl_single_resolver(GL_extension_GL_NV_evaluators, 27637 /* glMapParameterivNV */);
d25867 1
a25867 1
    return gl_single_resolver(GL_extension_GL_INTEL_map_texture, 27656 /* glMapTexture2DINTEL */);
d25873 1
a25873 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 27676 /* glMapVertexAttrib1dAPPLE */);
d25879 1
a25879 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 27701 /* glMapVertexAttrib1fAPPLE */);
d25885 1
a25885 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 27726 /* glMapVertexAttrib2dAPPLE */);
d25891 1
a25891 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_program_evaluators, 27751 /* glMapVertexAttrib2fAPPLE */);
d25903 2
a25904 2
        27776 /* "glMaterialf" */,
        27776 /* "glMaterialf" */,
d25906 1
a25906 1
    return gl_provider_resolver(entrypoint_strings + 27776 /* "glMaterialf" */,
d25919 2
a25920 2
        27788 /* "glMaterialfv" */,
        27788 /* "glMaterialfv" */,
d25922 1
a25922 1
    return gl_provider_resolver(entrypoint_strings + 27788 /* "glMaterialfv" */,
d25929 1
a25929 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27801 /* glMateriali */);
d25935 1
a25935 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 27813 /* glMaterialiv */);
d25941 1
a25941 1
    return gl_single_resolver(OpenGL_ES_1_0, 27826 /* glMaterialx */);
d25947 1
a25947 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 27838 /* glMaterialxOES */);
d25953 1
a25953 1
    return gl_single_resolver(OpenGL_ES_1_0, 27853 /* glMaterialxv */);
d25959 1
a25959 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 27866 /* glMaterialxvOES */);
d25965 1
a25965 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 27882 /* glMatrixFrustumEXT */);
d25971 1
a25971 1
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 27901 /* glMatrixIndexPointerARB */);
d25977 1
a25977 1
    return gl_single_resolver(GL_extension_GL_OES_matrix_palette, 27925 /* glMatrixIndexPointerOES */);
d25983 1
a25983 1
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 27949 /* glMatrixIndexubvARB */);
d25989 1
a25989 1
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 27969 /* glMatrixIndexuivARB */);
d25995 13
a26007 1
    return gl_single_resolver(GL_extension_GL_ARB_matrix_palette, 27989 /* glMatrixIndexusvARB */);
d26013 7
a26019 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28009 /* glMatrixLoadIdentityEXT */);
d26025 1
a26025 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28033 /* glMatrixLoadTransposedEXT */);
d26031 1
a26031 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28059 /* glMatrixLoadTransposefEXT */);
d26037 1
a26037 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28085 /* glMatrixLoaddEXT */);
d26043 1
a26043 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28102 /* glMatrixLoadfEXT */);
d26055 2
a26056 2
        28119 /* "glMatrixMode" */,
        28119 /* "glMatrixMode" */,
d26058 1
a26058 1
    return gl_provider_resolver(entrypoint_strings + 28119 /* "glMatrixMode" */,
d26062 18
d26083 1
a26083 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28132 /* glMatrixMultTransposedEXT */);
d26089 1
a26089 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28158 /* glMatrixMultTransposefEXT */);
d26095 1
a26095 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28184 /* glMatrixMultdEXT */);
d26101 1
a26101 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28201 /* glMatrixMultfEXT */);
d26107 1
a26107 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28218 /* glMatrixOrthoEXT */);
d26113 1
a26113 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28235 /* glMatrixPopEXT */);
d26119 1
a26119 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28250 /* glMatrixPushEXT */);
d26125 1
a26125 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28266 /* glMatrixRotatedEXT */);
d26131 1
a26131 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28285 /* glMatrixRotatefEXT */);
d26137 1
a26137 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28304 /* glMatrixScaledEXT */);
d26143 1
a26143 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28322 /* glMatrixScalefEXT */);
d26149 1
a26149 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28340 /* glMatrixTranslatedEXT */);
d26155 1
a26155 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 28362 /* glMatrixTranslatefEXT */);
a26161 1
        OpenGL_ES_3_1,
d26164 1
d26169 4
a26172 4
        28384 /* "glMemoryBarrier" */,
        28384 /* "glMemoryBarrier" */,
        28384 /* "glMemoryBarrier" */,
        28424 /* "glMemoryBarrierEXT" */,
d26174 1
a26174 1
    return gl_provider_resolver(entrypoint_strings + 28384 /* "glMemoryBarrier" */,
d26181 13
a26193 1
    return gl_single_resolver(OpenGL_ES_3_1, 28400 /* glMemoryBarrierByRegion */);
a26200 1
        OpenGL_ES_3_1,
d26203 1
d26207 4
a26210 4
        28424 /* "glMemoryBarrierEXT" */,
        28384 /* "glMemoryBarrier" */,
        28384 /* "glMemoryBarrier" */,
        28384 /* "glMemoryBarrier" */,
d26212 1
a26212 1
    return gl_provider_resolver(entrypoint_strings + 28424 /* "glMemoryBarrierEXT" */,
d26226 3
a26228 3
        28443 /* "glMinSampleShading" */,
        28462 /* "glMinSampleShadingARB" */,
        28484 /* "glMinSampleShadingOES" */,
d26230 1
a26230 1
    return gl_provider_resolver(entrypoint_strings + 28443 /* "glMinSampleShading" */,
d26244 3
a26246 3
        28462 /* "glMinSampleShadingARB" */,
        28443 /* "glMinSampleShading" */,
        28484 /* "glMinSampleShadingOES" */,
d26248 1
a26248 1
    return gl_provider_resolver(entrypoint_strings + 28462 /* "glMinSampleShadingARB" */,
d26262 3
a26264 3
        28484 /* "glMinSampleShadingOES" */,
        28443 /* "glMinSampleShading" */,
        28462 /* "glMinSampleShadingARB" */,
d26266 1
a26266 1
    return gl_provider_resolver(entrypoint_strings + 28484 /* "glMinSampleShadingOES" */,
d26279 2
a26280 2
        28506 /* "glMinmax" */,
        28515 /* "glMinmaxEXT" */,
d26282 1
a26282 1
    return gl_provider_resolver(entrypoint_strings + 28506 /* "glMinmax" */,
d26295 2
a26296 2
        28515 /* "glMinmaxEXT" */,
        28506 /* "glMinmax" */,
d26298 1
a26298 1
    return gl_provider_resolver(entrypoint_strings + 28515 /* "glMinmaxEXT" */,
d26305 1
a26305 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 28527 /* glMultMatrixd */);
d26317 2
a26318 2
        28541 /* "glMultMatrixf" */,
        28541 /* "glMultMatrixf" */,
d26320 1
a26320 1
    return gl_provider_resolver(entrypoint_strings + 28541 /* "glMultMatrixf" */,
d26327 1
a26327 1
    return gl_single_resolver(OpenGL_ES_1_0, 28555 /* glMultMatrixx */);
d26333 1
a26333 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 28569 /* glMultMatrixxOES */);
d26345 2
a26346 2
        28586 /* "glMultTransposeMatrixd" */,
        28609 /* "glMultTransposeMatrixdARB" */,
d26348 1
a26348 1
    return gl_provider_resolver(entrypoint_strings + 28586 /* "glMultTransposeMatrixd" */,
d26361 2
a26362 2
        28609 /* "glMultTransposeMatrixdARB" */,
        28586 /* "glMultTransposeMatrixd" */,
d26364 1
a26364 1
    return gl_provider_resolver(entrypoint_strings + 28609 /* "glMultTransposeMatrixdARB" */,
d26377 2
a26378 2
        28635 /* "glMultTransposeMatrixf" */,
        28658 /* "glMultTransposeMatrixfARB" */,
d26380 1
a26380 1
    return gl_provider_resolver(entrypoint_strings + 28635 /* "glMultTransposeMatrixf" */,
d26393 2
a26394 2
        28658 /* "glMultTransposeMatrixfARB" */,
        28635 /* "glMultTransposeMatrixf" */,
d26396 1
a26396 1
    return gl_provider_resolver(entrypoint_strings + 28658 /* "glMultTransposeMatrixfARB" */,
d26403 1
a26403 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 28684 /* glMultTransposeMatrixxOES */);
d26415 2
a26416 2
        28710 /* "glMultiDrawArrays" */,
        28728 /* "glMultiDrawArraysEXT" */,
d26418 1
a26418 1
    return gl_provider_resolver(entrypoint_strings + 28710 /* "glMultiDrawArrays" */,
d26431 2
a26432 2
        28728 /* "glMultiDrawArraysEXT" */,
        28710 /* "glMultiDrawArrays" */,
d26434 1
a26434 1
    return gl_provider_resolver(entrypoint_strings + 28728 /* "glMultiDrawArraysEXT" */,
d26442 1
a26443 1
        Desktop_OpenGL_4_3,
d26445 1
d26449 4
a26452 3
        28749 /* "glMultiDrawArraysIndirect" */,
        28749 /* "glMultiDrawArraysIndirect" */,
        28775 /* "glMultiDrawArraysIndirectAMD" */,
d26454 1
a26454 1
    return gl_provider_resolver(entrypoint_strings + 28749 /* "glMultiDrawArraysIndirect" */,
d26463 1
d26465 1
a26465 1
        Desktop_OpenGL_4_3,
d26469 4
a26472 3
        28775 /* "glMultiDrawArraysIndirectAMD" */,
        28749 /* "glMultiDrawArraysIndirect" */,
        28749 /* "glMultiDrawArraysIndirect" */,
d26474 1
a26474 1
    return gl_provider_resolver(entrypoint_strings + 28775 /* "glMultiDrawArraysIndirectAMD" */,
d26478 6
d26487 1
a26487 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_multi_draw_indirect, 28804 /* glMultiDrawArraysIndirectBindlessNV */);
d26493 21
a26513 1
    return gl_single_resolver(GL_extension_GL_ARB_indirect_parameters, 28840 /* glMultiDrawArraysIndirectCountARB */);
d26519 1
a26519 1
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 28874 /* glMultiDrawElementArrayAPPLE */);
d26531 2
a26532 2
        28903 /* "glMultiDrawElements" */,
        28953 /* "glMultiDrawElementsEXT" */,
d26534 1
a26534 1
    return gl_provider_resolver(entrypoint_strings + 28903 /* "glMultiDrawElements" */,
d26544 42
d26589 4
a26592 2
        28923 /* "glMultiDrawElementsBaseVertex" */,
        28923 /* "glMultiDrawElementsBaseVertex" */,
d26594 1
a26594 1
    return gl_provider_resolver(entrypoint_strings + 28923 /* "glMultiDrawElementsBaseVertex" */,
d26607 2
a26608 2
        28953 /* "glMultiDrawElementsEXT" */,
        28903 /* "glMultiDrawElements" */,
d26610 1
a26610 1
    return gl_provider_resolver(entrypoint_strings + 28953 /* "glMultiDrawElementsEXT" */,
d26618 1
a26619 1
        Desktop_OpenGL_4_3,
d26621 1
d26625 4
a26628 3
        28976 /* "glMultiDrawElementsIndirect" */,
        28976 /* "glMultiDrawElementsIndirect" */,
        29004 /* "glMultiDrawElementsIndirectAMD" */,
d26630 1
a26630 1
    return gl_provider_resolver(entrypoint_strings + 28976 /* "glMultiDrawElementsIndirect" */,
d26639 1
d26641 1
a26641 1
        Desktop_OpenGL_4_3,
d26645 4
a26648 3
        29004 /* "glMultiDrawElementsIndirectAMD" */,
        28976 /* "glMultiDrawElementsIndirect" */,
        28976 /* "glMultiDrawElementsIndirect" */,
d26650 1
a26650 1
    return gl_provider_resolver(entrypoint_strings + 29004 /* "glMultiDrawElementsIndirectAMD" */,
d26654 6
d26663 1
a26663 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_multi_draw_indirect, 29035 /* glMultiDrawElementsIndirectBindlessNV */);
d26669 21
a26689 1
    return gl_single_resolver(GL_extension_GL_ARB_indirect_parameters, 29073 /* glMultiDrawElementsIndirectCountARB */);
d26695 1
a26695 1
    return gl_single_resolver(GL_extension_GL_APPLE_element_array, 29109 /* glMultiDrawRangeElementArrayAPPLE */);
d26701 1
a26701 1
    return gl_single_resolver(GL_extension_GL_IBM_multimode_draw_arrays, 29143 /* glMultiModeDrawArraysIBM */);
d26707 1
a26707 1
    return gl_single_resolver(GL_extension_GL_IBM_multimode_draw_arrays, 29168 /* glMultiModeDrawElementsIBM */);
d26713 1
a26713 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 29195 /* glMultiTexBufferEXT */);
d26719 1
a26719 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 29215 /* glMultiTexCoord1bOES */);
d26725 1
a26725 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 29236 /* glMultiTexCoord1bvOES */);
d26737 2
a26738 2
        29258 /* "glMultiTexCoord1d" */,
        29276 /* "glMultiTexCoord1dARB" */,
d26740 1
a26740 1
    return gl_provider_resolver(entrypoint_strings + 29258 /* "glMultiTexCoord1d" */,
d26753 2
a26754 2
        29276 /* "glMultiTexCoord1dARB" */,
        29258 /* "glMultiTexCoord1d" */,
d26756 1
a26756 1
    return gl_provider_resolver(entrypoint_strings + 29276 /* "glMultiTexCoord1dARB" */,
d26769 2
a26770 2
        29297 /* "glMultiTexCoord1dv" */,
        29316 /* "glMultiTexCoord1dvARB" */,
d26772 1
a26772 1
    return gl_provider_resolver(entrypoint_strings + 29297 /* "glMultiTexCoord1dv" */,
d26785 2
a26786 2
        29316 /* "glMultiTexCoord1dvARB" */,
        29297 /* "glMultiTexCoord1dv" */,
d26788 1
a26788 1
    return gl_provider_resolver(entrypoint_strings + 29316 /* "glMultiTexCoord1dvARB" */,
d26801 2
a26802 2
        29338 /* "glMultiTexCoord1f" */,
        29356 /* "glMultiTexCoord1fARB" */,
d26804 1
a26804 1
    return gl_provider_resolver(entrypoint_strings + 29338 /* "glMultiTexCoord1f" */,
d26817 2
a26818 2
        29356 /* "glMultiTexCoord1fARB" */,
        29338 /* "glMultiTexCoord1f" */,
d26820 1
a26820 1
    return gl_provider_resolver(entrypoint_strings + 29356 /* "glMultiTexCoord1fARB" */,
d26833 2
a26834 2
        29377 /* "glMultiTexCoord1fv" */,
        29396 /* "glMultiTexCoord1fvARB" */,
d26836 1
a26836 1
    return gl_provider_resolver(entrypoint_strings + 29377 /* "glMultiTexCoord1fv" */,
d26849 2
a26850 2
        29396 /* "glMultiTexCoord1fvARB" */,
        29377 /* "glMultiTexCoord1fv" */,
d26852 1
a26852 1
    return gl_provider_resolver(entrypoint_strings + 29396 /* "glMultiTexCoord1fvARB" */,
d26859 1
a26859 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 29418 /* glMultiTexCoord1hNV */);
d26865 1
a26865 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 29438 /* glMultiTexCoord1hvNV */);
d26877 2
a26878 2
        29459 /* "glMultiTexCoord1i" */,
        29477 /* "glMultiTexCoord1iARB" */,
d26880 1
a26880 1
    return gl_provider_resolver(entrypoint_strings + 29459 /* "glMultiTexCoord1i" */,
d26893 2
a26894 2
        29477 /* "glMultiTexCoord1iARB" */,
        29459 /* "glMultiTexCoord1i" */,
d26896 1
a26896 1
    return gl_provider_resolver(entrypoint_strings + 29477 /* "glMultiTexCoord1iARB" */,
d26909 2
a26910 2
        29498 /* "glMultiTexCoord1iv" */,
        29517 /* "glMultiTexCoord1ivARB" */,
d26912 1
a26912 1
    return gl_provider_resolver(entrypoint_strings + 29498 /* "glMultiTexCoord1iv" */,
d26925 2
a26926 2
        29517 /* "glMultiTexCoord1ivARB" */,
        29498 /* "glMultiTexCoord1iv" */,
d26928 1
a26928 1
    return gl_provider_resolver(entrypoint_strings + 29517 /* "glMultiTexCoord1ivARB" */,
d26941 2
a26942 2
        29539 /* "glMultiTexCoord1s" */,
        29557 /* "glMultiTexCoord1sARB" */,
d26944 1
a26944 1
    return gl_provider_resolver(entrypoint_strings + 29539 /* "glMultiTexCoord1s" */,
d26957 2
a26958 2
        29557 /* "glMultiTexCoord1sARB" */,
        29539 /* "glMultiTexCoord1s" */,
d26960 1
a26960 1
    return gl_provider_resolver(entrypoint_strings + 29557 /* "glMultiTexCoord1sARB" */,
d26973 2
a26974 2
        29578 /* "glMultiTexCoord1sv" */,
        29597 /* "glMultiTexCoord1svARB" */,
d26976 1
a26976 1
    return gl_provider_resolver(entrypoint_strings + 29578 /* "glMultiTexCoord1sv" */,
d26989 2
a26990 2
        29597 /* "glMultiTexCoord1svARB" */,
        29578 /* "glMultiTexCoord1sv" */,
d26992 1
a26992 1
    return gl_provider_resolver(entrypoint_strings + 29597 /* "glMultiTexCoord1svARB" */,
d26999 1
a26999 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 29619 /* glMultiTexCoord1xOES */);
d27005 1
a27005 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 29640 /* glMultiTexCoord1xvOES */);
d27011 1
a27011 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 29662 /* glMultiTexCoord2bOES */);
d27017 1
a27017 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 29683 /* glMultiTexCoord2bvOES */);
d27029 2
a27030 2
        29705 /* "glMultiTexCoord2d" */,
        29723 /* "glMultiTexCoord2dARB" */,
d27032 1
a27032 1
    return gl_provider_resolver(entrypoint_strings + 29705 /* "glMultiTexCoord2d" */,
d27045 2
a27046 2
        29723 /* "glMultiTexCoord2dARB" */,
        29705 /* "glMultiTexCoord2d" */,
d27048 1
a27048 1
    return gl_provider_resolver(entrypoint_strings + 29723 /* "glMultiTexCoord2dARB" */,
d27061 2
a27062 2
        29744 /* "glMultiTexCoord2dv" */,
        29763 /* "glMultiTexCoord2dvARB" */,
d27064 1
a27064 1
    return gl_provider_resolver(entrypoint_strings + 29744 /* "glMultiTexCoord2dv" */,
d27077 2
a27078 2
        29763 /* "glMultiTexCoord2dvARB" */,
        29744 /* "glMultiTexCoord2dv" */,
d27080 1
a27080 1
    return gl_provider_resolver(entrypoint_strings + 29763 /* "glMultiTexCoord2dvARB" */,
d27093 2
a27094 2
        29785 /* "glMultiTexCoord2f" */,
        29803 /* "glMultiTexCoord2fARB" */,
d27096 1
a27096 1
    return gl_provider_resolver(entrypoint_strings + 29785 /* "glMultiTexCoord2f" */,
d27109 2
a27110 2
        29803 /* "glMultiTexCoord2fARB" */,
        29785 /* "glMultiTexCoord2f" */,
d27112 1
a27112 1
    return gl_provider_resolver(entrypoint_strings + 29803 /* "glMultiTexCoord2fARB" */,
d27125 2
a27126 2
        29824 /* "glMultiTexCoord2fv" */,
        29843 /* "glMultiTexCoord2fvARB" */,
d27128 1
a27128 1
    return gl_provider_resolver(entrypoint_strings + 29824 /* "glMultiTexCoord2fv" */,
d27141 2
a27142 2
        29843 /* "glMultiTexCoord2fvARB" */,
        29824 /* "glMultiTexCoord2fv" */,
d27144 1
a27144 1
    return gl_provider_resolver(entrypoint_strings + 29843 /* "glMultiTexCoord2fvARB" */,
d27151 1
a27151 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 29865 /* glMultiTexCoord2hNV */);
d27157 1
a27157 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 29885 /* glMultiTexCoord2hvNV */);
d27169 2
a27170 2
        29906 /* "glMultiTexCoord2i" */,
        29924 /* "glMultiTexCoord2iARB" */,
d27172 1
a27172 1
    return gl_provider_resolver(entrypoint_strings + 29906 /* "glMultiTexCoord2i" */,
d27185 2
a27186 2
        29924 /* "glMultiTexCoord2iARB" */,
        29906 /* "glMultiTexCoord2i" */,
d27188 1
a27188 1
    return gl_provider_resolver(entrypoint_strings + 29924 /* "glMultiTexCoord2iARB" */,
d27201 2
a27202 2
        29945 /* "glMultiTexCoord2iv" */,
        29964 /* "glMultiTexCoord2ivARB" */,
d27204 1
a27204 1
    return gl_provider_resolver(entrypoint_strings + 29945 /* "glMultiTexCoord2iv" */,
d27217 2
a27218 2
        29964 /* "glMultiTexCoord2ivARB" */,
        29945 /* "glMultiTexCoord2iv" */,
d27220 1
a27220 1
    return gl_provider_resolver(entrypoint_strings + 29964 /* "glMultiTexCoord2ivARB" */,
d27233 2
a27234 2
        29986 /* "glMultiTexCoord2s" */,
        30004 /* "glMultiTexCoord2sARB" */,
d27236 1
a27236 1
    return gl_provider_resolver(entrypoint_strings + 29986 /* "glMultiTexCoord2s" */,
d27249 2
a27250 2
        30004 /* "glMultiTexCoord2sARB" */,
        29986 /* "glMultiTexCoord2s" */,
d27252 1
a27252 1
    return gl_provider_resolver(entrypoint_strings + 30004 /* "glMultiTexCoord2sARB" */,
d27265 2
a27266 2
        30025 /* "glMultiTexCoord2sv" */,
        30044 /* "glMultiTexCoord2svARB" */,
d27268 1
a27268 1
    return gl_provider_resolver(entrypoint_strings + 30025 /* "glMultiTexCoord2sv" */,
d27281 2
a27282 2
        30044 /* "glMultiTexCoord2svARB" */,
        30025 /* "glMultiTexCoord2sv" */,
d27284 1
a27284 1
    return gl_provider_resolver(entrypoint_strings + 30044 /* "glMultiTexCoord2svARB" */,
d27291 1
a27291 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30066 /* glMultiTexCoord2xOES */);
d27297 1
a27297 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30087 /* glMultiTexCoord2xvOES */);
d27303 1
a27303 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 30109 /* glMultiTexCoord3bOES */);
d27309 1
a27309 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 30130 /* glMultiTexCoord3bvOES */);
d27321 2
a27322 2
        30152 /* "glMultiTexCoord3d" */,
        30170 /* "glMultiTexCoord3dARB" */,
d27324 1
a27324 1
    return gl_provider_resolver(entrypoint_strings + 30152 /* "glMultiTexCoord3d" */,
d27337 2
a27338 2
        30170 /* "glMultiTexCoord3dARB" */,
        30152 /* "glMultiTexCoord3d" */,
d27340 1
a27340 1
    return gl_provider_resolver(entrypoint_strings + 30170 /* "glMultiTexCoord3dARB" */,
d27353 2
a27354 2
        30191 /* "glMultiTexCoord3dv" */,
        30210 /* "glMultiTexCoord3dvARB" */,
d27356 1
a27356 1
    return gl_provider_resolver(entrypoint_strings + 30191 /* "glMultiTexCoord3dv" */,
d27369 2
a27370 2
        30210 /* "glMultiTexCoord3dvARB" */,
        30191 /* "glMultiTexCoord3dv" */,
d27372 1
a27372 1
    return gl_provider_resolver(entrypoint_strings + 30210 /* "glMultiTexCoord3dvARB" */,
d27385 2
a27386 2
        30232 /* "glMultiTexCoord3f" */,
        30250 /* "glMultiTexCoord3fARB" */,
d27388 1
a27388 1
    return gl_provider_resolver(entrypoint_strings + 30232 /* "glMultiTexCoord3f" */,
d27401 2
a27402 2
        30250 /* "glMultiTexCoord3fARB" */,
        30232 /* "glMultiTexCoord3f" */,
d27404 1
a27404 1
    return gl_provider_resolver(entrypoint_strings + 30250 /* "glMultiTexCoord3fARB" */,
d27417 2
a27418 2
        30271 /* "glMultiTexCoord3fv" */,
        30290 /* "glMultiTexCoord3fvARB" */,
d27420 1
a27420 1
    return gl_provider_resolver(entrypoint_strings + 30271 /* "glMultiTexCoord3fv" */,
d27433 2
a27434 2
        30290 /* "glMultiTexCoord3fvARB" */,
        30271 /* "glMultiTexCoord3fv" */,
d27436 1
a27436 1
    return gl_provider_resolver(entrypoint_strings + 30290 /* "glMultiTexCoord3fvARB" */,
d27443 1
a27443 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 30312 /* glMultiTexCoord3hNV */);
d27449 1
a27449 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 30332 /* glMultiTexCoord3hvNV */);
d27461 2
a27462 2
        30353 /* "glMultiTexCoord3i" */,
        30371 /* "glMultiTexCoord3iARB" */,
d27464 1
a27464 1
    return gl_provider_resolver(entrypoint_strings + 30353 /* "glMultiTexCoord3i" */,
d27477 2
a27478 2
        30371 /* "glMultiTexCoord3iARB" */,
        30353 /* "glMultiTexCoord3i" */,
d27480 1
a27480 1
    return gl_provider_resolver(entrypoint_strings + 30371 /* "glMultiTexCoord3iARB" */,
d27493 2
a27494 2
        30392 /* "glMultiTexCoord3iv" */,
        30411 /* "glMultiTexCoord3ivARB" */,
d27496 1
a27496 1
    return gl_provider_resolver(entrypoint_strings + 30392 /* "glMultiTexCoord3iv" */,
d27509 2
a27510 2
        30411 /* "glMultiTexCoord3ivARB" */,
        30392 /* "glMultiTexCoord3iv" */,
d27512 1
a27512 1
    return gl_provider_resolver(entrypoint_strings + 30411 /* "glMultiTexCoord3ivARB" */,
d27525 2
a27526 2
        30433 /* "glMultiTexCoord3s" */,
        30451 /* "glMultiTexCoord3sARB" */,
d27528 1
a27528 1
    return gl_provider_resolver(entrypoint_strings + 30433 /* "glMultiTexCoord3s" */,
d27541 2
a27542 2
        30451 /* "glMultiTexCoord3sARB" */,
        30433 /* "glMultiTexCoord3s" */,
d27544 1
a27544 1
    return gl_provider_resolver(entrypoint_strings + 30451 /* "glMultiTexCoord3sARB" */,
d27557 2
a27558 2
        30472 /* "glMultiTexCoord3sv" */,
        30491 /* "glMultiTexCoord3svARB" */,
d27560 1
a27560 1
    return gl_provider_resolver(entrypoint_strings + 30472 /* "glMultiTexCoord3sv" */,
d27573 2
a27574 2
        30491 /* "glMultiTexCoord3svARB" */,
        30472 /* "glMultiTexCoord3sv" */,
d27576 1
a27576 1
    return gl_provider_resolver(entrypoint_strings + 30491 /* "glMultiTexCoord3svARB" */,
d27583 1
a27583 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30513 /* glMultiTexCoord3xOES */);
d27589 1
a27589 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30534 /* glMultiTexCoord3xvOES */);
d27595 1
a27595 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 30556 /* glMultiTexCoord4bOES */);
d27601 1
a27601 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 30577 /* glMultiTexCoord4bvOES */);
d27613 2
a27614 2
        30599 /* "glMultiTexCoord4d" */,
        30617 /* "glMultiTexCoord4dARB" */,
d27616 1
a27616 1
    return gl_provider_resolver(entrypoint_strings + 30599 /* "glMultiTexCoord4d" */,
d27629 2
a27630 2
        30617 /* "glMultiTexCoord4dARB" */,
        30599 /* "glMultiTexCoord4d" */,
d27632 1
a27632 1
    return gl_provider_resolver(entrypoint_strings + 30617 /* "glMultiTexCoord4dARB" */,
d27645 2
a27646 2
        30638 /* "glMultiTexCoord4dv" */,
        30657 /* "glMultiTexCoord4dvARB" */,
d27648 1
a27648 1
    return gl_provider_resolver(entrypoint_strings + 30638 /* "glMultiTexCoord4dv" */,
d27661 2
a27662 2
        30657 /* "glMultiTexCoord4dvARB" */,
        30638 /* "glMultiTexCoord4dv" */,
d27664 1
a27664 1
    return gl_provider_resolver(entrypoint_strings + 30657 /* "glMultiTexCoord4dvARB" */,
d27672 1
a27673 1
        Desktop_OpenGL_1_3,
d27678 3
a27680 3
        30679 /* "glMultiTexCoord4f" */,
        30679 /* "glMultiTexCoord4f" */,
        30697 /* "glMultiTexCoord4fARB" */,
d27682 1
a27682 1
    return gl_provider_resolver(entrypoint_strings + 30679 /* "glMultiTexCoord4f" */,
d27691 1
a27692 1
        Desktop_OpenGL_1_3,
d27696 3
a27698 3
        30697 /* "glMultiTexCoord4fARB" */,
        30679 /* "glMultiTexCoord4f" */,
        30679 /* "glMultiTexCoord4f" */,
d27700 1
a27700 1
    return gl_provider_resolver(entrypoint_strings + 30697 /* "glMultiTexCoord4fARB" */,
d27713 2
a27714 2
        30718 /* "glMultiTexCoord4fv" */,
        30737 /* "glMultiTexCoord4fvARB" */,
d27716 1
a27716 1
    return gl_provider_resolver(entrypoint_strings + 30718 /* "glMultiTexCoord4fv" */,
d27729 2
a27730 2
        30737 /* "glMultiTexCoord4fvARB" */,
        30718 /* "glMultiTexCoord4fv" */,
d27732 1
a27732 1
    return gl_provider_resolver(entrypoint_strings + 30737 /* "glMultiTexCoord4fvARB" */,
d27739 1
a27739 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 30759 /* glMultiTexCoord4hNV */);
d27745 1
a27745 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 30779 /* glMultiTexCoord4hvNV */);
d27757 2
a27758 2
        30800 /* "glMultiTexCoord4i" */,
        30818 /* "glMultiTexCoord4iARB" */,
d27760 1
a27760 1
    return gl_provider_resolver(entrypoint_strings + 30800 /* "glMultiTexCoord4i" */,
d27773 2
a27774 2
        30818 /* "glMultiTexCoord4iARB" */,
        30800 /* "glMultiTexCoord4i" */,
d27776 1
a27776 1
    return gl_provider_resolver(entrypoint_strings + 30818 /* "glMultiTexCoord4iARB" */,
d27789 2
a27790 2
        30839 /* "glMultiTexCoord4iv" */,
        30858 /* "glMultiTexCoord4ivARB" */,
d27792 1
a27792 1
    return gl_provider_resolver(entrypoint_strings + 30839 /* "glMultiTexCoord4iv" */,
d27805 2
a27806 2
        30858 /* "glMultiTexCoord4ivARB" */,
        30839 /* "glMultiTexCoord4iv" */,
d27808 1
a27808 1
    return gl_provider_resolver(entrypoint_strings + 30858 /* "glMultiTexCoord4ivARB" */,
d27821 2
a27822 2
        30880 /* "glMultiTexCoord4s" */,
        30898 /* "glMultiTexCoord4sARB" */,
d27824 1
a27824 1
    return gl_provider_resolver(entrypoint_strings + 30880 /* "glMultiTexCoord4s" */,
d27837 2
a27838 2
        30898 /* "glMultiTexCoord4sARB" */,
        30880 /* "glMultiTexCoord4s" */,
d27840 1
a27840 1
    return gl_provider_resolver(entrypoint_strings + 30898 /* "glMultiTexCoord4sARB" */,
d27853 2
a27854 2
        30919 /* "glMultiTexCoord4sv" */,
        30938 /* "glMultiTexCoord4svARB" */,
d27856 1
a27856 1
    return gl_provider_resolver(entrypoint_strings + 30919 /* "glMultiTexCoord4sv" */,
d27869 2
a27870 2
        30938 /* "glMultiTexCoord4svARB" */,
        30919 /* "glMultiTexCoord4sv" */,
d27872 1
a27872 1
    return gl_provider_resolver(entrypoint_strings + 30938 /* "glMultiTexCoord4svARB" */,
d27879 1
a27879 1
    return gl_single_resolver(OpenGL_ES_1_0, 30960 /* glMultiTexCoord4x */);
d27885 1
a27885 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30978 /* glMultiTexCoord4xOES */);
d27891 1
a27891 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 30999 /* glMultiTexCoord4xvOES */);
d27898 1
a27899 1
        Desktop_OpenGL_3_3,
d27903 2
a27904 2
        31021 /* "glMultiTexCoordP1ui" */,
        31021 /* "glMultiTexCoordP1ui" */,
d27906 1
a27906 1
    return gl_provider_resolver(entrypoint_strings + 31021 /* "glMultiTexCoordP1ui" */,
d27914 1
a27915 1
        Desktop_OpenGL_3_3,
d27919 2
a27920 2
        31041 /* "glMultiTexCoordP1uiv" */,
        31041 /* "glMultiTexCoordP1uiv" */,
d27922 1
a27922 1
    return gl_provider_resolver(entrypoint_strings + 31041 /* "glMultiTexCoordP1uiv" */,
d27930 1
a27931 1
        Desktop_OpenGL_3_3,
d27935 2
a27936 2
        31062 /* "glMultiTexCoordP2ui" */,
        31062 /* "glMultiTexCoordP2ui" */,
d27938 1
a27938 1
    return gl_provider_resolver(entrypoint_strings + 31062 /* "glMultiTexCoordP2ui" */,
d27946 1
a27947 1
        Desktop_OpenGL_3_3,
d27951 2
a27952 2
        31082 /* "glMultiTexCoordP2uiv" */,
        31082 /* "glMultiTexCoordP2uiv" */,
d27954 1
a27954 1
    return gl_provider_resolver(entrypoint_strings + 31082 /* "glMultiTexCoordP2uiv" */,
d27962 1
a27963 1
        Desktop_OpenGL_3_3,
d27967 2
a27968 2
        31103 /* "glMultiTexCoordP3ui" */,
        31103 /* "glMultiTexCoordP3ui" */,
d27970 1
a27970 1
    return gl_provider_resolver(entrypoint_strings + 31103 /* "glMultiTexCoordP3ui" */,
d27978 1
a27979 1
        Desktop_OpenGL_3_3,
d27983 2
a27984 2
        31123 /* "glMultiTexCoordP3uiv" */,
        31123 /* "glMultiTexCoordP3uiv" */,
d27986 1
a27986 1
    return gl_provider_resolver(entrypoint_strings + 31123 /* "glMultiTexCoordP3uiv" */,
d27994 1
a27995 1
        Desktop_OpenGL_3_3,
d27999 2
a28000 2
        31144 /* "glMultiTexCoordP4ui" */,
        31144 /* "glMultiTexCoordP4ui" */,
d28002 1
a28002 1
    return gl_provider_resolver(entrypoint_strings + 31144 /* "glMultiTexCoordP4ui" */,
d28010 1
a28011 1
        Desktop_OpenGL_3_3,
d28015 2
a28016 2
        31164 /* "glMultiTexCoordP4uiv" */,
        31164 /* "glMultiTexCoordP4uiv" */,
d28018 1
a28018 1
    return gl_provider_resolver(entrypoint_strings + 31164 /* "glMultiTexCoordP4uiv" */,
d28025 1
a28025 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31185 /* glMultiTexCoordPointerEXT */);
d28031 1
a28031 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31211 /* glMultiTexEnvfEXT */);
d28037 1
a28037 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31229 /* glMultiTexEnvfvEXT */);
d28043 1
a28043 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31248 /* glMultiTexEnviEXT */);
d28049 1
a28049 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31266 /* glMultiTexEnvivEXT */);
d28055 1
a28055 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31285 /* glMultiTexGendEXT */);
d28061 1
a28061 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31303 /* glMultiTexGendvEXT */);
d28067 1
a28067 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31322 /* glMultiTexGenfEXT */);
d28073 1
a28073 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31340 /* glMultiTexGenfvEXT */);
d28079 1
a28079 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31359 /* glMultiTexGeniEXT */);
d28085 1
a28085 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31377 /* glMultiTexGenivEXT */);
d28091 1
a28091 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31396 /* glMultiTexImage1DEXT */);
d28097 1
a28097 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31417 /* glMultiTexImage2DEXT */);
d28103 1
a28103 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31438 /* glMultiTexImage3DEXT */);
d28109 1
a28109 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31459 /* glMultiTexParameterIivEXT */);
d28115 1
a28115 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31485 /* glMultiTexParameterIuivEXT */);
d28121 1
a28121 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31512 /* glMultiTexParameterfEXT */);
d28127 1
a28127 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31536 /* glMultiTexParameterfvEXT */);
d28133 1
a28133 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31561 /* glMultiTexParameteriEXT */);
d28139 1
a28139 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31585 /* glMultiTexParameterivEXT */);
d28145 1
a28145 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31610 /* glMultiTexRenderbufferEXT */);
d28151 1
a28151 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31636 /* glMultiTexSubImage1DEXT */);
d28157 1
a28157 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31660 /* glMultiTexSubImage2DEXT */);
d28163 17
a28179 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31684 /* glMultiTexSubImage3DEXT */);
d28185 31
a28215 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31708 /* glNamedBufferDataEXT */);
d28221 31
a28251 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31729 /* glNamedBufferStorageEXT */);
d28255 107
a28361 3
epoxy_glNamedBufferSubDataEXT_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31753 /* glNamedBufferSubDataEXT */);
d28364 2
a28365 2
static PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC
epoxy_glNamedCopyBufferSubDataEXT_resolver(void)
d28367 1
a28367 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31777 /* glNamedCopyBufferSubDataEXT */);
d28370 2
a28371 2
static PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC
epoxy_glNamedFramebufferParameteriEXT_resolver(void)
d28373 1
a28373 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31805 /* glNamedFramebufferParameteriEXT */);
d28376 2
a28377 2
static PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
epoxy_glNamedFramebufferRenderbufferEXT_resolver(void)
d28379 11
a28389 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31837 /* glNamedFramebufferRenderbufferEXT */);
d28395 1
a28395 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31871 /* glNamedFramebufferTexture1DEXT */);
d28401 1
a28401 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31902 /* glNamedFramebufferTexture2DEXT */);
d28407 1
a28407 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31933 /* glNamedFramebufferTexture3DEXT */);
d28413 1
a28413 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31964 /* glNamedFramebufferTextureEXT */);
d28419 17
a28435 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 31993 /* glNamedFramebufferTextureFaceEXT */);
d28441 1
a28441 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32026 /* glNamedFramebufferTextureLayerEXT */);
d28447 1
a28447 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32060 /* glNamedProgramLocalParameter4dEXT */);
d28453 1
a28453 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32094 /* glNamedProgramLocalParameter4dvEXT */);
d28459 1
a28459 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32129 /* glNamedProgramLocalParameter4fEXT */);
d28465 1
a28465 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32163 /* glNamedProgramLocalParameter4fvEXT */);
d28471 1
a28471 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32198 /* glNamedProgramLocalParameterI4iEXT */);
d28477 1
a28477 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32233 /* glNamedProgramLocalParameterI4ivEXT */);
d28483 1
a28483 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32269 /* glNamedProgramLocalParameterI4uiEXT */);
d28489 1
a28489 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32305 /* glNamedProgramLocalParameterI4uivEXT */);
d28495 1
a28495 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32342 /* glNamedProgramLocalParameters4fvEXT */);
d28501 1
a28501 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32378 /* glNamedProgramLocalParametersI4ivEXT */);
d28507 1
a28507 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32415 /* glNamedProgramLocalParametersI4uivEXT */);
d28513 17
a28529 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32453 /* glNamedProgramStringEXT */);
d28535 17
a28551 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32477 /* glNamedRenderbufferStorageEXT */);
d28557 1
a28557 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32507 /* glNamedRenderbufferStorageMultisampleCoverageEXT */);
d28563 1
a28563 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 32556 /* glNamedRenderbufferStorageMultisampleEXT */);
d28569 1
a28569 1
    return gl_single_resolver(GL_extension_GL_ARB_shading_language_include, 32597 /* glNamedStringARB */);
d28575 1
a28575 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32614 /* glNewList */);
d28581 1
a28581 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 32624 /* glNewObjectBufferATI */);
d28587 1
a28587 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32645 /* glNormal3b */);
d28593 1
a28593 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32656 /* glNormal3bv */);
d28599 1
a28599 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32668 /* glNormal3d */);
d28605 1
a28605 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32679 /* glNormal3dv */);
d28617 2
a28618 2
        32691 /* "glNormal3f" */,
        32691 /* "glNormal3f" */,
d28620 1
a28620 1
    return gl_provider_resolver(entrypoint_strings + 32691 /* "glNormal3f" */,
d28627 1
a28627 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 32702 /* glNormal3fVertex3fSUN */);
d28633 1
a28633 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 32724 /* glNormal3fVertex3fvSUN */);
d28639 1
a28639 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32747 /* glNormal3fv */);
d28645 1
a28645 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 32759 /* glNormal3hNV */);
d28651 1
a28651 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 32772 /* glNormal3hvNV */);
d28657 1
a28657 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32786 /* glNormal3i */);
d28663 1
a28663 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32797 /* glNormal3iv */);
d28669 1
a28669 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32809 /* glNormal3s */);
d28675 1
a28675 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 32820 /* glNormal3sv */);
d28681 1
a28681 1
    return gl_single_resolver(OpenGL_ES_1_0, 32832 /* glNormal3x */);
d28687 1
a28687 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 32843 /* glNormal3xOES */);
d28693 1
a28693 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 32857 /* glNormal3xvOES */);
d28699 1
a28699 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 32872 /* glNormalFormatNV */);
d28706 1
a28707 1
        Desktop_OpenGL_3_3,
d28711 2
a28712 2
        32889 /* "glNormalP3ui" */,
        32889 /* "glNormalP3ui" */,
d28714 1
a28714 1
    return gl_provider_resolver(entrypoint_strings + 32889 /* "glNormalP3ui" */,
d28722 1
a28723 1
        Desktop_OpenGL_3_3,
d28727 2
a28728 2
        32902 /* "glNormalP3uiv" */,
        32902 /* "glNormalP3uiv" */,
d28730 1
a28730 1
    return gl_provider_resolver(entrypoint_strings + 32902 /* "glNormalP3uiv" */,
d28743 2
a28744 2
        32916 /* "glNormalPointer" */,
        32916 /* "glNormalPointer" */,
d28746 1
a28746 1
    return gl_provider_resolver(entrypoint_strings + 32916 /* "glNormalPointer" */,
d28753 1
a28753 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 32932 /* glNormalPointerEXT */);
d28759 1
a28759 1
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 32951 /* glNormalPointerListIBM */);
d28765 1
a28765 1
    return gl_single_resolver(GL_extension_GL_INTEL_parallel_arrays, 32974 /* glNormalPointervINTEL */);
d28771 1
a28771 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 32996 /* glNormalStream3bATI */);
d28777 1
a28777 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 33016 /* glNormalStream3bvATI */);
d28783 1
a28783 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 33037 /* glNormalStream3dATI */);
d28789 1
a28789 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 33057 /* glNormalStream3dvATI */);
d28795 1
a28795 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 33078 /* glNormalStream3fATI */);
d28801 1
a28801 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 33098 /* glNormalStream3fvATI */);
d28807 1
a28807 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 33119 /* glNormalStream3iATI */);
d28813 1
a28813 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 33139 /* glNormalStream3ivATI */);
d28819 1
a28819 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 33160 /* glNormalStream3sATI */);
d28825 1
a28825 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 33180 /* glNormalStream3svATI */);
d28838 3
a28840 3
        33201 /* "glObjectLabel" */,
        33201 /* "glObjectLabel" */,
        33215 /* "glObjectLabelKHR" */,
d28842 1
a28842 1
    return gl_provider_resolver(entrypoint_strings + 33201 /* "glObjectLabel" */,
d28856 3
a28858 3
        33215 /* "glObjectLabelKHR" */,
        33201 /* "glObjectLabel" */,
        33201 /* "glObjectLabel" */,
d28860 1
a28860 1
    return gl_provider_resolver(entrypoint_strings + 33215 /* "glObjectLabelKHR" */,
d28874 3
a28876 3
        33232 /* "glObjectPtrLabel" */,
        33232 /* "glObjectPtrLabel" */,
        33249 /* "glObjectPtrLabelKHR" */,
d28878 1
a28878 1
    return gl_provider_resolver(entrypoint_strings + 33232 /* "glObjectPtrLabel" */,
d28892 3
a28894 3
        33249 /* "glObjectPtrLabelKHR" */,
        33232 /* "glObjectPtrLabel" */,
        33232 /* "glObjectPtrLabel" */,
d28896 1
a28896 1
    return gl_provider_resolver(entrypoint_strings + 33249 /* "glObjectPtrLabelKHR" */,
d28903 1
a28903 1
    return gl_single_resolver(GL_extension_GL_APPLE_object_purgeable, 33269 /* glObjectPurgeableAPPLE */);
d28909 1
a28909 1
    return gl_single_resolver(GL_extension_GL_APPLE_object_purgeable, 33292 /* glObjectUnpurgeableAPPLE */);
d28915 1
a28915 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 33317 /* glOrtho */);
d28921 1
a28921 1
    return gl_single_resolver(OpenGL_ES_1_0, 33325 /* glOrthof */);
d28927 1
a28927 1
    return gl_single_resolver(GL_extension_GL_OES_single_precision, 33334 /* glOrthofOES */);
d28933 1
a28933 1
    return gl_single_resolver(OpenGL_ES_1_0, 33346 /* glOrthox */);
d28939 1
a28939 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 33355 /* glOrthoxOES */);
d28945 1
a28945 1
    return gl_single_resolver(GL_extension_GL_ATI_pn_triangles, 33367 /* glPNTrianglesfATI */);
d28951 1
a28951 1
    return gl_single_resolver(GL_extension_GL_ATI_pn_triangles, 33385 /* glPNTrianglesiATI */);
d28957 1
a28957 1
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 33403 /* glPassTexCoordATI */);
d28963 1
a28963 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 33421 /* glPassThrough */);
d28969 1
a28969 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 33435 /* glPassThroughxOES */);
d28981 2
a28982 2
        33453 /* "glPatchParameterfv" */,
        33453 /* "glPatchParameterfv" */,
d28984 1
a28984 1
    return gl_provider_resolver(entrypoint_strings + 33453 /* "glPatchParameterfv" */,
d28994 42
d29039 4
a29042 2
        33472 /* "glPatchParameteri" */,
        33472 /* "glPatchParameteri" */,
d29044 1
a29044 1
    return gl_provider_resolver(entrypoint_strings + 33472 /* "glPatchParameteri" */,
d29051 1
a29051 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33490 /* glPathColorGenNV */);
d29057 1
a29057 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33507 /* glPathCommandsNV */);
d29063 1
a29063 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33524 /* glPathCoordsNV */);
d29069 1
a29069 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33539 /* glPathCoverDepthFuncNV */);
d29075 1
a29075 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33562 /* glPathDashArrayNV */);
d29081 13
a29093 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33580 /* glPathFogGenNV */);
d29099 1
a29099 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33595 /* glPathGlyphRangeNV */);
d29105 7
a29111 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33614 /* glPathGlyphsNV */);
d29117 1
a29117 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33629 /* glPathParameterfNV */);
d29123 1
a29123 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33648 /* glPathParameterfvNV */);
d29129 1
a29129 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33668 /* glPathParameteriNV */);
d29135 1
a29135 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33687 /* glPathParameterivNV */);
d29141 1
a29141 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33707 /* glPathStencilDepthOffsetNV */);
d29147 1
a29147 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33734 /* glPathStencilFuncNV */);
d29153 1
a29153 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33754 /* glPathStringNV */);
d29159 1
a29159 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33769 /* glPathSubCommandsNV */);
d29165 1
a29165 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33789 /* glPathSubCoordsNV */);
d29171 1
a29171 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 33807 /* glPathTexGenNV */);
d29179 1
a29180 1
        GL_extension_GL_ARB_transform_feedback2,
d29185 4
a29188 4
        33822 /* "glPauseTransformFeedback" */,
        33822 /* "glPauseTransformFeedback" */,
        33822 /* "glPauseTransformFeedback" */,
        33847 /* "glPauseTransformFeedbackNV" */,
d29190 1
a29190 1
    return gl_provider_resolver(entrypoint_strings + 33822 /* "glPauseTransformFeedback" */,
d29200 1
a29201 1
        GL_extension_GL_ARB_transform_feedback2,
d29205 4
a29208 4
        33847 /* "glPauseTransformFeedbackNV" */,
        33822 /* "glPauseTransformFeedback" */,
        33822 /* "glPauseTransformFeedback" */,
        33822 /* "glPauseTransformFeedback" */,
d29210 1
a29210 1
    return gl_provider_resolver(entrypoint_strings + 33847 /* "glPauseTransformFeedbackNV" */,
d29217 1
a29217 1
    return gl_single_resolver(GL_extension_GL_NV_pixel_data_range, 33874 /* glPixelDataRangeNV */);
d29223 1
a29223 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 33893 /* glPixelMapfv */);
d29229 1
a29229 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 33906 /* glPixelMapuiv */);
d29235 1
a29235 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 33920 /* glPixelMapusv */);
d29241 1
a29241 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 33934 /* glPixelMapx */);
d29247 1
a29247 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 33946 /* glPixelStoref */);
d29260 3
a29262 3
        33960 /* "glPixelStorei" */,
        33960 /* "glPixelStorei" */,
        33960 /* "glPixelStorei" */,
d29264 1
a29264 1
    return gl_provider_resolver(entrypoint_strings + 33960 /* "glPixelStorei" */,
d29271 1
a29271 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 33974 /* glPixelStorex */);
d29277 1
a29277 1
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 33988 /* glPixelTexGenParameterfSGIS */);
d29283 1
a29283 1
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 34016 /* glPixelTexGenParameterfvSGIS */);
d29289 1
a29289 1
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 34045 /* glPixelTexGenParameteriSGIS */);
d29295 1
a29295 1
    return gl_single_resolver(GL_extension_GL_SGIS_pixel_texture, 34073 /* glPixelTexGenParameterivSGIS */);
d29301 1
a29301 1
    return gl_single_resolver(GL_extension_GL_SGIX_pixel_texture, 34102 /* glPixelTexGenSGIX */);
d29307 1
a29307 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 34120 /* glPixelTransferf */);
d29313 1
a29313 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 34137 /* glPixelTransferi */);
d29319 1
a29319 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34154 /* glPixelTransferxOES */);
d29325 1
a29325 1
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 34174 /* glPixelTransformParameterfEXT */);
d29331 1
a29331 1
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 34204 /* glPixelTransformParameterfvEXT */);
d29337 1
a29337 1
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 34235 /* glPixelTransformParameteriEXT */);
d29343 1
a29343 1
    return gl_single_resolver(GL_extension_GL_EXT_pixel_transform, 34265 /* glPixelTransformParameterivEXT */);
d29349 1
a29349 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 34296 /* glPixelZoom */);
d29355 1
a29355 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34308 /* glPixelZoomxOES */);
d29361 1
a29361 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 34324 /* glPointAlongPathNV */);
d29368 1
a29369 1
        Desktop_OpenGL_1_4,
d29376 5
a29380 5
        34343 /* "glPointParameterf" */,
        34343 /* "glPointParameterf" */,
        34361 /* "glPointParameterfARB" */,
        34382 /* "glPointParameterfEXT" */,
        34403 /* "glPointParameterfSGIS" */,
d29382 1
a29382 1
    return gl_provider_resolver(entrypoint_strings + 34343 /* "glPointParameterf" */,
d29391 1
a29392 1
        Desktop_OpenGL_1_4,
d29398 5
a29402 5
        34361 /* "glPointParameterfARB" */,
        34343 /* "glPointParameterf" */,
        34343 /* "glPointParameterf" */,
        34382 /* "glPointParameterfEXT" */,
        34403 /* "glPointParameterfSGIS" */,
d29404 1
a29404 1
    return gl_provider_resolver(entrypoint_strings + 34361 /* "glPointParameterfARB" */,
d29413 1
a29414 1
        Desktop_OpenGL_1_4,
d29420 5
a29424 5
        34382 /* "glPointParameterfEXT" */,
        34343 /* "glPointParameterf" */,
        34343 /* "glPointParameterf" */,
        34361 /* "glPointParameterfARB" */,
        34403 /* "glPointParameterfSGIS" */,
d29426 1
a29426 1
    return gl_provider_resolver(entrypoint_strings + 34382 /* "glPointParameterfEXT" */,
d29435 1
a29436 1
        Desktop_OpenGL_1_4,
d29442 5
a29446 5
        34403 /* "glPointParameterfSGIS" */,
        34343 /* "glPointParameterf" */,
        34343 /* "glPointParameterf" */,
        34361 /* "glPointParameterfARB" */,
        34382 /* "glPointParameterfEXT" */,
d29448 1
a29448 1
    return gl_provider_resolver(entrypoint_strings + 34403 /* "glPointParameterfSGIS" */,
d29456 1
a29457 1
        Desktop_OpenGL_1_4,
d29464 5
a29468 5
        34425 /* "glPointParameterfv" */,
        34425 /* "glPointParameterfv" */,
        34444 /* "glPointParameterfvARB" */,
        34466 /* "glPointParameterfvEXT" */,
        34488 /* "glPointParameterfvSGIS" */,
d29470 1
a29470 1
    return gl_provider_resolver(entrypoint_strings + 34425 /* "glPointParameterfv" */,
d29479 1
a29480 1
        Desktop_OpenGL_1_4,
d29486 5
a29490 5
        34444 /* "glPointParameterfvARB" */,
        34425 /* "glPointParameterfv" */,
        34425 /* "glPointParameterfv" */,
        34466 /* "glPointParameterfvEXT" */,
        34488 /* "glPointParameterfvSGIS" */,
d29492 1
a29492 1
    return gl_provider_resolver(entrypoint_strings + 34444 /* "glPointParameterfvARB" */,
d29501 1
a29502 1
        Desktop_OpenGL_1_4,
d29508 5
a29512 5
        34466 /* "glPointParameterfvEXT" */,
        34425 /* "glPointParameterfv" */,
        34425 /* "glPointParameterfv" */,
        34444 /* "glPointParameterfvARB" */,
        34488 /* "glPointParameterfvSGIS" */,
d29514 1
a29514 1
    return gl_provider_resolver(entrypoint_strings + 34466 /* "glPointParameterfvEXT" */,
d29523 1
a29524 1
        Desktop_OpenGL_1_4,
d29530 5
a29534 5
        34488 /* "glPointParameterfvSGIS" */,
        34425 /* "glPointParameterfv" */,
        34425 /* "glPointParameterfv" */,
        34444 /* "glPointParameterfvARB" */,
        34466 /* "glPointParameterfvEXT" */,
d29536 1
a29536 1
    return gl_provider_resolver(entrypoint_strings + 34488 /* "glPointParameterfvSGIS" */,
d29549 2
a29550 2
        34511 /* "glPointParameteri" */,
        34529 /* "glPointParameteriNV" */,
d29552 1
a29552 1
    return gl_provider_resolver(entrypoint_strings + 34511 /* "glPointParameteri" */,
d29565 2
a29566 2
        34529 /* "glPointParameteriNV" */,
        34511 /* "glPointParameteri" */,
d29568 1
a29568 1
    return gl_provider_resolver(entrypoint_strings + 34529 /* "glPointParameteriNV" */,
d29581 2
a29582 2
        34549 /* "glPointParameteriv" */,
        34568 /* "glPointParameterivNV" */,
d29584 1
a29584 1
    return gl_provider_resolver(entrypoint_strings + 34549 /* "glPointParameteriv" */,
d29597 2
a29598 2
        34568 /* "glPointParameterivNV" */,
        34549 /* "glPointParameteriv" */,
d29600 1
a29600 1
    return gl_provider_resolver(entrypoint_strings + 34568 /* "glPointParameterivNV" */,
d29607 1
a29607 1
    return gl_single_resolver(OpenGL_ES_1_0, 34589 /* glPointParameterx */);
d29613 1
a29613 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34607 /* glPointParameterxOES */);
d29619 1
a29619 1
    return gl_single_resolver(OpenGL_ES_1_0, 34628 /* glPointParameterxv */);
d29625 1
a29625 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34647 /* glPointParameterxvOES */);
d29637 2
a29638 2
        34669 /* "glPointSize" */,
        34669 /* "glPointSize" */,
d29640 1
a29640 1
    return gl_provider_resolver(entrypoint_strings + 34669 /* "glPointSize" */,
d29647 1
a29647 1
    return gl_single_resolver(GL_extension_GL_OES_point_size_array, 34681 /* glPointSizePointerOES */);
d29653 1
a29653 1
    return gl_single_resolver(OpenGL_ES_1_0, 34703 /* glPointSizex */);
d29659 1
a29659 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34716 /* glPointSizexOES */);
d29665 1
a29665 1
    return gl_single_resolver(GL_extension_GL_SGIX_async, 34732 /* glPollAsyncSGIX */);
d29671 1
a29671 1
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 34748 /* glPollInstrumentsSGIX */);
d29677 27
a29703 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 34770 /* glPolygonMode */);
d29711 1
a29712 1
        OpenGL_ES_1_0,
d29716 3
a29718 3
        34784 /* "glPolygonOffset" */,
        34784 /* "glPolygonOffset" */,
        34784 /* "glPolygonOffset" */,
d29720 1
a29720 1
    return gl_provider_resolver(entrypoint_strings + 34784 /* "glPolygonOffset" */,
d29724 6
d29733 1
a29733 1
    return gl_single_resolver(GL_extension_GL_EXT_polygon_offset, 34800 /* glPolygonOffsetEXT */);
d29739 1
a29739 1
    return gl_single_resolver(OpenGL_ES_1_0, 34819 /* glPolygonOffsetx */);
d29745 1
a29745 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 34836 /* glPolygonOffsetxOES */);
d29751 1
a29751 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 34856 /* glPolygonStipple */);
d29757 1
a29757 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 34873 /* glPopAttrib */);
d29763 1
a29763 1
    return gl_single_resolver(Desktop_OpenGL_1_1, 34885 /* glPopClientAttrib */);
d29776 3
a29778 3
        34903 /* "glPopDebugGroup" */,
        34903 /* "glPopDebugGroup" */,
        34919 /* "glPopDebugGroupKHR" */,
d29780 1
a29780 1
    return gl_provider_resolver(entrypoint_strings + 34903 /* "glPopDebugGroup" */,
d29794 3
a29796 3
        34919 /* "glPopDebugGroupKHR" */,
        34903 /* "glPopDebugGroup" */,
        34903 /* "glPopDebugGroup" */,
d29798 1
a29798 1
    return gl_provider_resolver(entrypoint_strings + 34919 /* "glPopDebugGroupKHR" */,
d29805 1
a29805 1
    return gl_single_resolver(GL_extension_GL_EXT_debug_marker, 34938 /* glPopGroupMarkerEXT */);
d29817 2
a29818 2
        34958 /* "glPopMatrix" */,
        34958 /* "glPopMatrix" */,
d29820 1
a29820 1
    return gl_provider_resolver(entrypoint_strings + 34958 /* "glPopMatrix" */,
d29827 1
a29827 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 34970 /* glPopName */);
d29833 1
a29833 1
    return gl_single_resolver(GL_extension_GL_NV_present_video, 34980 /* glPresentFrameDualFillNV */);
d29839 13
a29851 1
    return gl_single_resolver(GL_extension_GL_NV_present_video, 35005 /* glPresentFrameKeyedNV */);
d29857 1
a29857 1
    return gl_single_resolver(Desktop_OpenGL_3_1, 35027 /* glPrimitiveRestartIndex */);
d29863 1
a29863 1
    return gl_single_resolver(GL_extension_GL_NV_primitive_restart, 35051 /* glPrimitiveRestartIndexNV */);
d29869 1
a29869 1
    return gl_single_resolver(GL_extension_GL_NV_primitive_restart, 35077 /* glPrimitiveRestartNV */);
d29881 2
a29882 2
        35098 /* "glPrioritizeTextures" */,
        35119 /* "glPrioritizeTexturesEXT" */,
d29884 1
a29884 1
    return gl_provider_resolver(entrypoint_strings + 35098 /* "glPrioritizeTextures" */,
d29897 2
a29898 2
        35119 /* "glPrioritizeTexturesEXT" */,
        35098 /* "glPrioritizeTextures" */,
d29900 1
a29900 1
    return gl_provider_resolver(entrypoint_strings + 35119 /* "glPrioritizeTexturesEXT" */,
d29907 1
a29907 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 35143 /* glPrioritizeTexturesxOES */);
d29915 1
a29916 1
        GL_extension_GL_ARB_get_program_binary,
d29921 4
a29924 4
        35168 /* "glProgramBinary" */,
        35168 /* "glProgramBinary" */,
        35168 /* "glProgramBinary" */,
        35184 /* "glProgramBinaryOES" */,
d29926 1
a29926 1
    return gl_provider_resolver(entrypoint_strings + 35168 /* "glProgramBinary" */,
d29936 1
a29937 1
        GL_extension_GL_ARB_get_program_binary,
d29941 4
a29944 4
        35184 /* "glProgramBinaryOES" */,
        35168 /* "glProgramBinary" */,
        35168 /* "glProgramBinary" */,
        35168 /* "glProgramBinary" */,
d29946 1
a29946 1
    return gl_provider_resolver(entrypoint_strings + 35184 /* "glProgramBinaryOES" */,
d29953 1
a29953 1
    return gl_single_resolver(GL_extension_GL_NV_parameter_buffer_object, 35203 /* glProgramBufferParametersIivNV */);
d29959 1
a29959 1
    return gl_single_resolver(GL_extension_GL_NV_parameter_buffer_object, 35234 /* glProgramBufferParametersIuivNV */);
d29965 1
a29965 1
    return gl_single_resolver(GL_extension_GL_NV_parameter_buffer_object, 35266 /* glProgramBufferParametersfvNV */);
d29972 1
a29973 1
        GL_extension_GL_ARB_fragment_program,
d29977 2
a29978 2
        35296 /* "glProgramEnvParameter4dARB" */,
        35296 /* "glProgramEnvParameter4dARB" */,
d29980 1
a29980 1
    return gl_provider_resolver(entrypoint_strings + 35296 /* "glProgramEnvParameter4dARB" */,
d29988 1
a29989 1
        GL_extension_GL_ARB_fragment_program,
d29993 2
a29994 2
        35323 /* "glProgramEnvParameter4dvARB" */,
        35323 /* "glProgramEnvParameter4dvARB" */,
d29996 1
a29996 1
    return gl_provider_resolver(entrypoint_strings + 35323 /* "glProgramEnvParameter4dvARB" */,
d30004 1
a30005 1
        GL_extension_GL_ARB_fragment_program,
d30009 2
a30010 2
        35351 /* "glProgramEnvParameter4fARB" */,
        35351 /* "glProgramEnvParameter4fARB" */,
d30012 1
a30012 1
    return gl_provider_resolver(entrypoint_strings + 35351 /* "glProgramEnvParameter4fARB" */,
d30020 1
a30021 1
        GL_extension_GL_ARB_fragment_program,
d30025 2
a30026 2
        35378 /* "glProgramEnvParameter4fvARB" */,
        35378 /* "glProgramEnvParameter4fvARB" */,
d30028 1
a30028 1
    return gl_provider_resolver(entrypoint_strings + 35378 /* "glProgramEnvParameter4fvARB" */,
d30035 1
a30035 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35406 /* glProgramEnvParameterI4iNV */);
d30041 1
a30041 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35433 /* glProgramEnvParameterI4ivNV */);
d30047 1
a30047 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35461 /* glProgramEnvParameterI4uiNV */);
d30053 1
a30053 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35489 /* glProgramEnvParameterI4uivNV */);
d30059 1
a30059 1
    return gl_single_resolver(GL_extension_GL_EXT_gpu_program_parameters, 35518 /* glProgramEnvParameters4fvEXT */);
d30065 1
a30065 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35547 /* glProgramEnvParametersI4ivNV */);
d30071 1
a30071 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35576 /* glProgramEnvParametersI4uivNV */);
d30078 1
a30079 1
        GL_extension_GL_ARB_fragment_program,
d30083 2
a30084 2
        35606 /* "glProgramLocalParameter4dARB" */,
        35606 /* "glProgramLocalParameter4dARB" */,
d30086 1
a30086 1
    return gl_provider_resolver(entrypoint_strings + 35606 /* "glProgramLocalParameter4dARB" */,
d30094 1
a30095 1
        GL_extension_GL_ARB_fragment_program,
d30099 2
a30100 2
        35635 /* "glProgramLocalParameter4dvARB" */,
        35635 /* "glProgramLocalParameter4dvARB" */,
d30102 1
a30102 1
    return gl_provider_resolver(entrypoint_strings + 35635 /* "glProgramLocalParameter4dvARB" */,
d30110 1
a30111 1
        GL_extension_GL_ARB_fragment_program,
d30115 2
a30116 2
        35665 /* "glProgramLocalParameter4fARB" */,
        35665 /* "glProgramLocalParameter4fARB" */,
d30118 1
a30118 1
    return gl_provider_resolver(entrypoint_strings + 35665 /* "glProgramLocalParameter4fARB" */,
d30126 1
a30127 1
        GL_extension_GL_ARB_fragment_program,
d30131 2
a30132 2
        35694 /* "glProgramLocalParameter4fvARB" */,
        35694 /* "glProgramLocalParameter4fvARB" */,
d30134 1
a30134 1
    return gl_provider_resolver(entrypoint_strings + 35694 /* "glProgramLocalParameter4fvARB" */,
d30141 1
a30141 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35724 /* glProgramLocalParameterI4iNV */);
d30147 1
a30147 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35753 /* glProgramLocalParameterI4ivNV */);
d30153 1
a30153 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35783 /* glProgramLocalParameterI4uiNV */);
d30159 1
a30159 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35813 /* glProgramLocalParameterI4uivNV */);
d30165 1
a30165 1
    return gl_single_resolver(GL_extension_GL_EXT_gpu_program_parameters, 35844 /* glProgramLocalParameters4fvEXT */);
d30171 1
a30171 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35875 /* glProgramLocalParametersI4ivNV */);
d30177 1
a30177 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program4, 35906 /* glProgramLocalParametersI4uivNV */);
d30183 1
a30183 1
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 35938 /* glProgramNamedParameter4dNV */);
d30189 1
a30189 1
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 35966 /* glProgramNamedParameter4dvNV */);
d30195 1
a30195 1
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 35995 /* glProgramNamedParameter4fNV */);
d30201 1
a30201 1
    return gl_single_resolver(GL_extension_GL_NV_fragment_program, 36023 /* glProgramNamedParameter4fvNV */);
d30207 1
a30207 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 36052 /* glProgramParameter4dNV */);
d30213 1
a30213 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 36075 /* glProgramParameter4dvNV */);
d30219 1
a30219 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 36099 /* glProgramParameter4fNV */);
d30225 1
a30225 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 36122 /* glProgramParameter4fvNV */);
d30233 1
a30234 1
        GL_extension_GL_ARB_get_program_binary,
d30241 6
a30246 6
        36146 /* "glProgramParameteri" */,
        36146 /* "glProgramParameteri" */,
        36146 /* "glProgramParameteri" */,
        36166 /* "glProgramParameteriARB" */,
        36189 /* "glProgramParameteriEXT" */,
        36189 /* "glProgramParameteriEXT" */,
d30248 1
a30248 1
    return gl_provider_resolver(entrypoint_strings + 36146 /* "glProgramParameteri" */,
d30258 1
a30259 1
        GL_extension_GL_ARB_get_program_binary,
d30265 6
a30270 6
        36166 /* "glProgramParameteriARB" */,
        36146 /* "glProgramParameteri" */,
        36146 /* "glProgramParameteri" */,
        36146 /* "glProgramParameteri" */,
        36189 /* "glProgramParameteriEXT" */,
        36189 /* "glProgramParameteriEXT" */,
d30272 1
a30272 1
    return gl_provider_resolver(entrypoint_strings + 36166 /* "glProgramParameteriARB" */,
d30283 1
a30284 1
        GL_extension_GL_ARB_get_program_binary,
d30289 6
a30294 6
        36189 /* "glProgramParameteriEXT" */,
        36189 /* "glProgramParameteriEXT" */,
        36146 /* "glProgramParameteri" */,
        36146 /* "glProgramParameteri" */,
        36146 /* "glProgramParameteri" */,
        36166 /* "glProgramParameteriARB" */,
d30296 1
a30296 1
    return gl_provider_resolver(entrypoint_strings + 36189 /* "glProgramParameteriEXT" */,
d30303 1
a30303 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 36212 /* glProgramParameters4dvNV */);
d30309 7
a30315 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 36237 /* glProgramParameters4fvNV */);
d30322 1
a30323 1
        GL_extension_GL_ARB_fragment_program,
d30327 2
a30328 2
        36262 /* "glProgramStringARB" */,
        36262 /* "glProgramStringARB" */,
d30330 1
a30330 1
    return gl_provider_resolver(entrypoint_strings + 36262 /* "glProgramStringARB" */,
d30337 1
a30337 1
    return gl_single_resolver(GL_extension_GL_NV_gpu_program5, 36281 /* glProgramSubroutineParametersuivNV */);
d30349 2
a30350 2
        36316 /* "glProgramUniform1d" */,
        36316 /* "glProgramUniform1d" */,
d30352 1
a30352 1
    return gl_provider_resolver(entrypoint_strings + 36316 /* "glProgramUniform1d" */,
d30359 1
a30359 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36335 /* glProgramUniform1dEXT */);
d30371 2
a30372 2
        36357 /* "glProgramUniform1dv" */,
        36357 /* "glProgramUniform1dv" */,
d30374 1
a30374 1
    return gl_provider_resolver(entrypoint_strings + 36357 /* "glProgramUniform1dv" */,
d30381 1
a30381 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36377 /* glProgramUniform1dvEXT */);
d30389 1
a30390 1
        GL_extension_GL_ARB_separate_shader_objects,
d30396 5
a30400 5
        36400 /* "glProgramUniform1f" */,
        36400 /* "glProgramUniform1f" */,
        36400 /* "glProgramUniform1f" */,
        36419 /* "glProgramUniform1fEXT" */,
        36419 /* "glProgramUniform1fEXT" */,
d30402 1
a30402 1
    return gl_provider_resolver(entrypoint_strings + 36400 /* "glProgramUniform1f" */,
d30413 1
a30414 1
        GL_extension_GL_ARB_separate_shader_objects,
d30418 5
a30422 5
        36419 /* "glProgramUniform1fEXT" */,
        36419 /* "glProgramUniform1fEXT" */,
        36400 /* "glProgramUniform1f" */,
        36400 /* "glProgramUniform1f" */,
        36400 /* "glProgramUniform1f" */,
d30424 1
a30424 1
    return gl_provider_resolver(entrypoint_strings + 36419 /* "glProgramUniform1fEXT" */,
d30433 1
a30434 1
        GL_extension_GL_ARB_separate_shader_objects,
d30440 5
a30444 5
        36441 /* "glProgramUniform1fv" */,
        36441 /* "glProgramUniform1fv" */,
        36441 /* "glProgramUniform1fv" */,
        36461 /* "glProgramUniform1fvEXT" */,
        36461 /* "glProgramUniform1fvEXT" */,
d30446 1
a30446 1
    return gl_provider_resolver(entrypoint_strings + 36441 /* "glProgramUniform1fv" */,
d30457 1
a30458 1
        GL_extension_GL_ARB_separate_shader_objects,
d30462 5
a30466 5
        36461 /* "glProgramUniform1fvEXT" */,
        36461 /* "glProgramUniform1fvEXT" */,
        36441 /* "glProgramUniform1fv" */,
        36441 /* "glProgramUniform1fv" */,
        36441 /* "glProgramUniform1fv" */,
d30468 1
a30468 1
    return gl_provider_resolver(entrypoint_strings + 36461 /* "glProgramUniform1fvEXT" */,
d30477 1
a30478 1
        GL_extension_GL_ARB_separate_shader_objects,
d30484 5
a30488 5
        36484 /* "glProgramUniform1i" */,
        36484 /* "glProgramUniform1i" */,
        36484 /* "glProgramUniform1i" */,
        36550 /* "glProgramUniform1iEXT" */,
        36550 /* "glProgramUniform1iEXT" */,
d30490 1
a30490 1
    return gl_provider_resolver(entrypoint_strings + 36484 /* "glProgramUniform1i" */,
d30503 2
a30504 2
        36503 /* "glProgramUniform1i64NV" */,
        36503 /* "glProgramUniform1i64NV" */,
d30506 1
a30506 1
    return gl_provider_resolver(entrypoint_strings + 36503 /* "glProgramUniform1i64NV" */,
d30519 2
a30520 2
        36526 /* "glProgramUniform1i64vNV" */,
        36526 /* "glProgramUniform1i64vNV" */,
d30522 1
a30522 1
    return gl_provider_resolver(entrypoint_strings + 36526 /* "glProgramUniform1i64vNV" */,
d30533 1
a30534 1
        GL_extension_GL_ARB_separate_shader_objects,
d30538 5
a30542 5
        36550 /* "glProgramUniform1iEXT" */,
        36550 /* "glProgramUniform1iEXT" */,
        36484 /* "glProgramUniform1i" */,
        36484 /* "glProgramUniform1i" */,
        36484 /* "glProgramUniform1i" */,
d30544 1
a30544 1
    return gl_provider_resolver(entrypoint_strings + 36550 /* "glProgramUniform1iEXT" */,
d30553 1
a30554 1
        GL_extension_GL_ARB_separate_shader_objects,
d30560 5
a30564 5
        36572 /* "glProgramUniform1iv" */,
        36572 /* "glProgramUniform1iv" */,
        36572 /* "glProgramUniform1iv" */,
        36592 /* "glProgramUniform1ivEXT" */,
        36592 /* "glProgramUniform1ivEXT" */,
d30566 1
a30566 1
    return gl_provider_resolver(entrypoint_strings + 36572 /* "glProgramUniform1iv" */,
d30577 1
a30578 1
        GL_extension_GL_ARB_separate_shader_objects,
d30582 5
a30586 5
        36592 /* "glProgramUniform1ivEXT" */,
        36592 /* "glProgramUniform1ivEXT" */,
        36572 /* "glProgramUniform1iv" */,
        36572 /* "glProgramUniform1iv" */,
        36572 /* "glProgramUniform1iv" */,
d30588 1
a30588 1
    return gl_provider_resolver(entrypoint_strings + 36592 /* "glProgramUniform1ivEXT" */,
d30597 1
a30598 1
        GL_extension_GL_ARB_separate_shader_objects,
d30604 5
a30608 5
        36615 /* "glProgramUniform1ui" */,
        36615 /* "glProgramUniform1ui" */,
        36615 /* "glProgramUniform1ui" */,
        36684 /* "glProgramUniform1uiEXT" */,
        36684 /* "glProgramUniform1uiEXT" */,
d30610 1
a30610 1
    return gl_provider_resolver(entrypoint_strings + 36615 /* "glProgramUniform1ui" */,
d30623 2
a30624 2
        36635 /* "glProgramUniform1ui64NV" */,
        36635 /* "glProgramUniform1ui64NV" */,
d30626 1
a30626 1
    return gl_provider_resolver(entrypoint_strings + 36635 /* "glProgramUniform1ui64NV" */,
d30639 2
a30640 2
        36659 /* "glProgramUniform1ui64vNV" */,
        36659 /* "glProgramUniform1ui64vNV" */,
d30642 1
a30642 1
    return gl_provider_resolver(entrypoint_strings + 36659 /* "glProgramUniform1ui64vNV" */,
d30653 1
a30654 1
        GL_extension_GL_ARB_separate_shader_objects,
d30658 5
a30662 5
        36684 /* "glProgramUniform1uiEXT" */,
        36684 /* "glProgramUniform1uiEXT" */,
        36615 /* "glProgramUniform1ui" */,
        36615 /* "glProgramUniform1ui" */,
        36615 /* "glProgramUniform1ui" */,
d30664 1
a30664 1
    return gl_provider_resolver(entrypoint_strings + 36684 /* "glProgramUniform1uiEXT" */,
d30673 1
a30674 1
        GL_extension_GL_ARB_separate_shader_objects,
d30680 5
a30684 5
        36707 /* "glProgramUniform1uiv" */,
        36707 /* "glProgramUniform1uiv" */,
        36707 /* "glProgramUniform1uiv" */,
        36728 /* "glProgramUniform1uivEXT" */,
        36728 /* "glProgramUniform1uivEXT" */,
d30686 1
a30686 1
    return gl_provider_resolver(entrypoint_strings + 36707 /* "glProgramUniform1uiv" */,
d30697 1
a30698 1
        GL_extension_GL_ARB_separate_shader_objects,
d30702 5
a30706 5
        36728 /* "glProgramUniform1uivEXT" */,
        36728 /* "glProgramUniform1uivEXT" */,
        36707 /* "glProgramUniform1uiv" */,
        36707 /* "glProgramUniform1uiv" */,
        36707 /* "glProgramUniform1uiv" */,
d30708 1
a30708 1
    return gl_provider_resolver(entrypoint_strings + 36728 /* "glProgramUniform1uivEXT" */,
d30721 2
a30722 2
        36752 /* "glProgramUniform2d" */,
        36752 /* "glProgramUniform2d" */,
d30724 1
a30724 1
    return gl_provider_resolver(entrypoint_strings + 36752 /* "glProgramUniform2d" */,
d30731 1
a30731 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36771 /* glProgramUniform2dEXT */);
d30743 2
a30744 2
        36793 /* "glProgramUniform2dv" */,
        36793 /* "glProgramUniform2dv" */,
d30746 1
a30746 1
    return gl_provider_resolver(entrypoint_strings + 36793 /* "glProgramUniform2dv" */,
d30753 1
a30753 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 36813 /* glProgramUniform2dvEXT */);
d30761 1
a30762 1
        GL_extension_GL_ARB_separate_shader_objects,
d30768 5
a30772 5
        36836 /* "glProgramUniform2f" */,
        36836 /* "glProgramUniform2f" */,
        36836 /* "glProgramUniform2f" */,
        36855 /* "glProgramUniform2fEXT" */,
        36855 /* "glProgramUniform2fEXT" */,
d30774 1
a30774 1
    return gl_provider_resolver(entrypoint_strings + 36836 /* "glProgramUniform2f" */,
d30785 1
a30786 1
        GL_extension_GL_ARB_separate_shader_objects,
d30790 5
a30794 5
        36855 /* "glProgramUniform2fEXT" */,
        36855 /* "glProgramUniform2fEXT" */,
        36836 /* "glProgramUniform2f" */,
        36836 /* "glProgramUniform2f" */,
        36836 /* "glProgramUniform2f" */,
d30796 1
a30796 1
    return gl_provider_resolver(entrypoint_strings + 36855 /* "glProgramUniform2fEXT" */,
d30805 1
a30806 1
        GL_extension_GL_ARB_separate_shader_objects,
d30812 5
a30816 5
        36877 /* "glProgramUniform2fv" */,
        36877 /* "glProgramUniform2fv" */,
        36877 /* "glProgramUniform2fv" */,
        36897 /* "glProgramUniform2fvEXT" */,
        36897 /* "glProgramUniform2fvEXT" */,
d30818 1
a30818 1
    return gl_provider_resolver(entrypoint_strings + 36877 /* "glProgramUniform2fv" */,
d30829 1
a30830 1
        GL_extension_GL_ARB_separate_shader_objects,
d30834 5
a30838 5
        36897 /* "glProgramUniform2fvEXT" */,
        36897 /* "glProgramUniform2fvEXT" */,
        36877 /* "glProgramUniform2fv" */,
        36877 /* "glProgramUniform2fv" */,
        36877 /* "glProgramUniform2fv" */,
d30840 1
a30840 1
    return gl_provider_resolver(entrypoint_strings + 36897 /* "glProgramUniform2fvEXT" */,
d30849 1
a30850 1
        GL_extension_GL_ARB_separate_shader_objects,
d30856 5
a30860 5
        36920 /* "glProgramUniform2i" */,
        36920 /* "glProgramUniform2i" */,
        36920 /* "glProgramUniform2i" */,
        36986 /* "glProgramUniform2iEXT" */,
        36986 /* "glProgramUniform2iEXT" */,
d30862 1
a30862 1
    return gl_provider_resolver(entrypoint_strings + 36920 /* "glProgramUniform2i" */,
d30875 2
a30876 2
        36939 /* "glProgramUniform2i64NV" */,
        36939 /* "glProgramUniform2i64NV" */,
d30878 1
a30878 1
    return gl_provider_resolver(entrypoint_strings + 36939 /* "glProgramUniform2i64NV" */,
d30891 2
a30892 2
        36962 /* "glProgramUniform2i64vNV" */,
        36962 /* "glProgramUniform2i64vNV" */,
d30894 1
a30894 1
    return gl_provider_resolver(entrypoint_strings + 36962 /* "glProgramUniform2i64vNV" */,
d30905 1
a30906 1
        GL_extension_GL_ARB_separate_shader_objects,
d30910 5
a30914 5
        36986 /* "glProgramUniform2iEXT" */,
        36986 /* "glProgramUniform2iEXT" */,
        36920 /* "glProgramUniform2i" */,
        36920 /* "glProgramUniform2i" */,
        36920 /* "glProgramUniform2i" */,
d30916 1
a30916 1
    return gl_provider_resolver(entrypoint_strings + 36986 /* "glProgramUniform2iEXT" */,
d30925 1
a30926 1
        GL_extension_GL_ARB_separate_shader_objects,
d30932 5
a30936 5
        37008 /* "glProgramUniform2iv" */,
        37008 /* "glProgramUniform2iv" */,
        37008 /* "glProgramUniform2iv" */,
        37028 /* "glProgramUniform2ivEXT" */,
        37028 /* "glProgramUniform2ivEXT" */,
d30938 1
a30938 1
    return gl_provider_resolver(entrypoint_strings + 37008 /* "glProgramUniform2iv" */,
d30949 1
a30950 1
        GL_extension_GL_ARB_separate_shader_objects,
d30954 5
a30958 5
        37028 /* "glProgramUniform2ivEXT" */,
        37028 /* "glProgramUniform2ivEXT" */,
        37008 /* "glProgramUniform2iv" */,
        37008 /* "glProgramUniform2iv" */,
        37008 /* "glProgramUniform2iv" */,
d30960 1
a30960 1
    return gl_provider_resolver(entrypoint_strings + 37028 /* "glProgramUniform2ivEXT" */,
d30969 1
a30970 1
        GL_extension_GL_ARB_separate_shader_objects,
d30976 5
a30980 5
        37051 /* "glProgramUniform2ui" */,
        37051 /* "glProgramUniform2ui" */,
        37051 /* "glProgramUniform2ui" */,
        37120 /* "glProgramUniform2uiEXT" */,
        37120 /* "glProgramUniform2uiEXT" */,
d30982 1
a30982 1
    return gl_provider_resolver(entrypoint_strings + 37051 /* "glProgramUniform2ui" */,
d30995 2
a30996 2
        37071 /* "glProgramUniform2ui64NV" */,
        37071 /* "glProgramUniform2ui64NV" */,
d30998 1
a30998 1
    return gl_provider_resolver(entrypoint_strings + 37071 /* "glProgramUniform2ui64NV" */,
d31011 2
a31012 2
        37095 /* "glProgramUniform2ui64vNV" */,
        37095 /* "glProgramUniform2ui64vNV" */,
d31014 1
a31014 1
    return gl_provider_resolver(entrypoint_strings + 37095 /* "glProgramUniform2ui64vNV" */,
d31025 1
a31026 1
        GL_extension_GL_ARB_separate_shader_objects,
d31030 5
a31034 5
        37120 /* "glProgramUniform2uiEXT" */,
        37120 /* "glProgramUniform2uiEXT" */,
        37051 /* "glProgramUniform2ui" */,
        37051 /* "glProgramUniform2ui" */,
        37051 /* "glProgramUniform2ui" */,
d31036 1
a31036 1
    return gl_provider_resolver(entrypoint_strings + 37120 /* "glProgramUniform2uiEXT" */,
d31045 1
a31046 1
        GL_extension_GL_ARB_separate_shader_objects,
d31052 5
a31056 5
        37143 /* "glProgramUniform2uiv" */,
        37143 /* "glProgramUniform2uiv" */,
        37143 /* "glProgramUniform2uiv" */,
        37164 /* "glProgramUniform2uivEXT" */,
        37164 /* "glProgramUniform2uivEXT" */,
d31058 1
a31058 1
    return gl_provider_resolver(entrypoint_strings + 37143 /* "glProgramUniform2uiv" */,
d31069 1
a31070 1
        GL_extension_GL_ARB_separate_shader_objects,
d31074 5
a31078 5
        37164 /* "glProgramUniform2uivEXT" */,
        37164 /* "glProgramUniform2uivEXT" */,
        37143 /* "glProgramUniform2uiv" */,
        37143 /* "glProgramUniform2uiv" */,
        37143 /* "glProgramUniform2uiv" */,
d31080 1
a31080 1
    return gl_provider_resolver(entrypoint_strings + 37164 /* "glProgramUniform2uivEXT" */,
d31093 2
a31094 2
        37188 /* "glProgramUniform3d" */,
        37188 /* "glProgramUniform3d" */,
d31096 1
a31096 1
    return gl_provider_resolver(entrypoint_strings + 37188 /* "glProgramUniform3d" */,
d31103 1
a31103 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 37207 /* glProgramUniform3dEXT */);
d31115 2
a31116 2
        37229 /* "glProgramUniform3dv" */,
        37229 /* "glProgramUniform3dv" */,
d31118 1
a31118 1
    return gl_provider_resolver(entrypoint_strings + 37229 /* "glProgramUniform3dv" */,
d31125 1
a31125 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 37249 /* glProgramUniform3dvEXT */);
d31133 1
a31134 1
        GL_extension_GL_ARB_separate_shader_objects,
d31140 5
a31144 5
        37272 /* "glProgramUniform3f" */,
        37272 /* "glProgramUniform3f" */,
        37272 /* "glProgramUniform3f" */,
        37291 /* "glProgramUniform3fEXT" */,
        37291 /* "glProgramUniform3fEXT" */,
d31146 1
a31146 1
    return gl_provider_resolver(entrypoint_strings + 37272 /* "glProgramUniform3f" */,
d31157 1
a31158 1
        GL_extension_GL_ARB_separate_shader_objects,
d31162 5
a31166 5
        37291 /* "glProgramUniform3fEXT" */,
        37291 /* "glProgramUniform3fEXT" */,
        37272 /* "glProgramUniform3f" */,
        37272 /* "glProgramUniform3f" */,
        37272 /* "glProgramUniform3f" */,
d31168 1
a31168 1
    return gl_provider_resolver(entrypoint_strings + 37291 /* "glProgramUniform3fEXT" */,
d31177 1
a31178 1
        GL_extension_GL_ARB_separate_shader_objects,
d31184 5
a31188 5
        37313 /* "glProgramUniform3fv" */,
        37313 /* "glProgramUniform3fv" */,
        37313 /* "glProgramUniform3fv" */,
        37333 /* "glProgramUniform3fvEXT" */,
        37333 /* "glProgramUniform3fvEXT" */,
d31190 1
a31190 1
    return gl_provider_resolver(entrypoint_strings + 37313 /* "glProgramUniform3fv" */,
d31201 1
a31202 1
        GL_extension_GL_ARB_separate_shader_objects,
d31206 5
a31210 5
        37333 /* "glProgramUniform3fvEXT" */,
        37333 /* "glProgramUniform3fvEXT" */,
        37313 /* "glProgramUniform3fv" */,
        37313 /* "glProgramUniform3fv" */,
        37313 /* "glProgramUniform3fv" */,
d31212 1
a31212 1
    return gl_provider_resolver(entrypoint_strings + 37333 /* "glProgramUniform3fvEXT" */,
d31221 1
a31222 1
        GL_extension_GL_ARB_separate_shader_objects,
d31228 5
a31232 5
        37356 /* "glProgramUniform3i" */,
        37356 /* "glProgramUniform3i" */,
        37356 /* "glProgramUniform3i" */,
        37422 /* "glProgramUniform3iEXT" */,
        37422 /* "glProgramUniform3iEXT" */,
d31234 1
a31234 1
    return gl_provider_resolver(entrypoint_strings + 37356 /* "glProgramUniform3i" */,
d31247 2
a31248 2
        37375 /* "glProgramUniform3i64NV" */,
        37375 /* "glProgramUniform3i64NV" */,
d31250 1
a31250 1
    return gl_provider_resolver(entrypoint_strings + 37375 /* "glProgramUniform3i64NV" */,
d31263 2
a31264 2
        37398 /* "glProgramUniform3i64vNV" */,
        37398 /* "glProgramUniform3i64vNV" */,
d31266 1
a31266 1
    return gl_provider_resolver(entrypoint_strings + 37398 /* "glProgramUniform3i64vNV" */,
d31277 1
a31278 1
        GL_extension_GL_ARB_separate_shader_objects,
d31282 5
a31286 5
        37422 /* "glProgramUniform3iEXT" */,
        37422 /* "glProgramUniform3iEXT" */,
        37356 /* "glProgramUniform3i" */,
        37356 /* "glProgramUniform3i" */,
        37356 /* "glProgramUniform3i" */,
d31288 1
a31288 1
    return gl_provider_resolver(entrypoint_strings + 37422 /* "glProgramUniform3iEXT" */,
d31297 1
a31298 1
        GL_extension_GL_ARB_separate_shader_objects,
d31304 5
a31308 5
        37444 /* "glProgramUniform3iv" */,
        37444 /* "glProgramUniform3iv" */,
        37444 /* "glProgramUniform3iv" */,
        37464 /* "glProgramUniform3ivEXT" */,
        37464 /* "glProgramUniform3ivEXT" */,
d31310 1
a31310 1
    return gl_provider_resolver(entrypoint_strings + 37444 /* "glProgramUniform3iv" */,
d31321 1
a31322 1
        GL_extension_GL_ARB_separate_shader_objects,
d31326 5
a31330 5
        37464 /* "glProgramUniform3ivEXT" */,
        37464 /* "glProgramUniform3ivEXT" */,
        37444 /* "glProgramUniform3iv" */,
        37444 /* "glProgramUniform3iv" */,
        37444 /* "glProgramUniform3iv" */,
d31332 1
a31332 1
    return gl_provider_resolver(entrypoint_strings + 37464 /* "glProgramUniform3ivEXT" */,
d31341 1
a31342 1
        GL_extension_GL_ARB_separate_shader_objects,
d31348 5
a31352 5
        37487 /* "glProgramUniform3ui" */,
        37487 /* "glProgramUniform3ui" */,
        37487 /* "glProgramUniform3ui" */,
        37556 /* "glProgramUniform3uiEXT" */,
        37556 /* "glProgramUniform3uiEXT" */,
d31354 1
a31354 1
    return gl_provider_resolver(entrypoint_strings + 37487 /* "glProgramUniform3ui" */,
d31367 2
a31368 2
        37507 /* "glProgramUniform3ui64NV" */,
        37507 /* "glProgramUniform3ui64NV" */,
d31370 1
a31370 1
    return gl_provider_resolver(entrypoint_strings + 37507 /* "glProgramUniform3ui64NV" */,
d31383 2
a31384 2
        37531 /* "glProgramUniform3ui64vNV" */,
        37531 /* "glProgramUniform3ui64vNV" */,
d31386 1
a31386 1
    return gl_provider_resolver(entrypoint_strings + 37531 /* "glProgramUniform3ui64vNV" */,
d31397 1
a31398 1
        GL_extension_GL_ARB_separate_shader_objects,
d31402 5
a31406 5
        37556 /* "glProgramUniform3uiEXT" */,
        37556 /* "glProgramUniform3uiEXT" */,
        37487 /* "glProgramUniform3ui" */,
        37487 /* "glProgramUniform3ui" */,
        37487 /* "glProgramUniform3ui" */,
d31408 1
a31408 1
    return gl_provider_resolver(entrypoint_strings + 37556 /* "glProgramUniform3uiEXT" */,
d31417 1
a31418 1
        GL_extension_GL_ARB_separate_shader_objects,
d31424 5
a31428 5
        37579 /* "glProgramUniform3uiv" */,
        37579 /* "glProgramUniform3uiv" */,
        37579 /* "glProgramUniform3uiv" */,
        37600 /* "glProgramUniform3uivEXT" */,
        37600 /* "glProgramUniform3uivEXT" */,
d31430 1
a31430 1
    return gl_provider_resolver(entrypoint_strings + 37579 /* "glProgramUniform3uiv" */,
d31441 1
a31442 1
        GL_extension_GL_ARB_separate_shader_objects,
d31446 5
a31450 5
        37600 /* "glProgramUniform3uivEXT" */,
        37600 /* "glProgramUniform3uivEXT" */,
        37579 /* "glProgramUniform3uiv" */,
        37579 /* "glProgramUniform3uiv" */,
        37579 /* "glProgramUniform3uiv" */,
d31452 1
a31452 1
    return gl_provider_resolver(entrypoint_strings + 37600 /* "glProgramUniform3uivEXT" */,
d31465 2
a31466 2
        37624 /* "glProgramUniform4d" */,
        37624 /* "glProgramUniform4d" */,
d31468 1
a31468 1
    return gl_provider_resolver(entrypoint_strings + 37624 /* "glProgramUniform4d" */,
d31475 1
a31475 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 37643 /* glProgramUniform4dEXT */);
d31487 2
a31488 2
        37665 /* "glProgramUniform4dv" */,
        37665 /* "glProgramUniform4dv" */,
d31490 1
a31490 1
    return gl_provider_resolver(entrypoint_strings + 37665 /* "glProgramUniform4dv" */,
d31497 1
a31497 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 37685 /* glProgramUniform4dvEXT */);
d31505 1
a31506 1
        GL_extension_GL_ARB_separate_shader_objects,
d31512 5
a31516 5
        37708 /* "glProgramUniform4f" */,
        37708 /* "glProgramUniform4f" */,
        37708 /* "glProgramUniform4f" */,
        37727 /* "glProgramUniform4fEXT" */,
        37727 /* "glProgramUniform4fEXT" */,
d31518 1
a31518 1
    return gl_provider_resolver(entrypoint_strings + 37708 /* "glProgramUniform4f" */,
d31529 1
a31530 1
        GL_extension_GL_ARB_separate_shader_objects,
d31534 5
a31538 5
        37727 /* "glProgramUniform4fEXT" */,
        37727 /* "glProgramUniform4fEXT" */,
        37708 /* "glProgramUniform4f" */,
        37708 /* "glProgramUniform4f" */,
        37708 /* "glProgramUniform4f" */,
d31540 1
a31540 1
    return gl_provider_resolver(entrypoint_strings + 37727 /* "glProgramUniform4fEXT" */,
d31549 1
a31550 1
        GL_extension_GL_ARB_separate_shader_objects,
d31556 5
a31560 5
        37749 /* "glProgramUniform4fv" */,
        37749 /* "glProgramUniform4fv" */,
        37749 /* "glProgramUniform4fv" */,
        37769 /* "glProgramUniform4fvEXT" */,
        37769 /* "glProgramUniform4fvEXT" */,
d31562 1
a31562 1
    return gl_provider_resolver(entrypoint_strings + 37749 /* "glProgramUniform4fv" */,
d31573 1
a31574 1
        GL_extension_GL_ARB_separate_shader_objects,
d31578 5
a31582 5
        37769 /* "glProgramUniform4fvEXT" */,
        37769 /* "glProgramUniform4fvEXT" */,
        37749 /* "glProgramUniform4fv" */,
        37749 /* "glProgramUniform4fv" */,
        37749 /* "glProgramUniform4fv" */,
d31584 1
a31584 1
    return gl_provider_resolver(entrypoint_strings + 37769 /* "glProgramUniform4fvEXT" */,
d31593 1
a31594 1
        GL_extension_GL_ARB_separate_shader_objects,
d31600 5
a31604 5
        37792 /* "glProgramUniform4i" */,
        37792 /* "glProgramUniform4i" */,
        37792 /* "glProgramUniform4i" */,
        37858 /* "glProgramUniform4iEXT" */,
        37858 /* "glProgramUniform4iEXT" */,
d31606 1
a31606 1
    return gl_provider_resolver(entrypoint_strings + 37792 /* "glProgramUniform4i" */,
d31619 2
a31620 2
        37811 /* "glProgramUniform4i64NV" */,
        37811 /* "glProgramUniform4i64NV" */,
d31622 1
a31622 1
    return gl_provider_resolver(entrypoint_strings + 37811 /* "glProgramUniform4i64NV" */,
d31635 2
a31636 2
        37834 /* "glProgramUniform4i64vNV" */,
        37834 /* "glProgramUniform4i64vNV" */,
d31638 1
a31638 1
    return gl_provider_resolver(entrypoint_strings + 37834 /* "glProgramUniform4i64vNV" */,
d31649 1
a31650 1
        GL_extension_GL_ARB_separate_shader_objects,
d31654 5
a31658 5
        37858 /* "glProgramUniform4iEXT" */,
        37858 /* "glProgramUniform4iEXT" */,
        37792 /* "glProgramUniform4i" */,
        37792 /* "glProgramUniform4i" */,
        37792 /* "glProgramUniform4i" */,
d31660 1
a31660 1
    return gl_provider_resolver(entrypoint_strings + 37858 /* "glProgramUniform4iEXT" */,
d31669 1
a31670 1
        GL_extension_GL_ARB_separate_shader_objects,
d31676 5
a31680 5
        37880 /* "glProgramUniform4iv" */,
        37880 /* "glProgramUniform4iv" */,
        37880 /* "glProgramUniform4iv" */,
        37900 /* "glProgramUniform4ivEXT" */,
        37900 /* "glProgramUniform4ivEXT" */,
d31682 1
a31682 1
    return gl_provider_resolver(entrypoint_strings + 37880 /* "glProgramUniform4iv" */,
d31693 1
a31694 1
        GL_extension_GL_ARB_separate_shader_objects,
d31698 5
a31702 5
        37900 /* "glProgramUniform4ivEXT" */,
        37900 /* "glProgramUniform4ivEXT" */,
        37880 /* "glProgramUniform4iv" */,
        37880 /* "glProgramUniform4iv" */,
        37880 /* "glProgramUniform4iv" */,
d31704 1
a31704 1
    return gl_provider_resolver(entrypoint_strings + 37900 /* "glProgramUniform4ivEXT" */,
d31713 1
a31714 1
        GL_extension_GL_ARB_separate_shader_objects,
d31720 5
a31724 5
        37923 /* "glProgramUniform4ui" */,
        37923 /* "glProgramUniform4ui" */,
        37923 /* "glProgramUniform4ui" */,
        37992 /* "glProgramUniform4uiEXT" */,
        37992 /* "glProgramUniform4uiEXT" */,
d31726 1
a31726 1
    return gl_provider_resolver(entrypoint_strings + 37923 /* "glProgramUniform4ui" */,
d31739 2
a31740 2
        37943 /* "glProgramUniform4ui64NV" */,
        37943 /* "glProgramUniform4ui64NV" */,
d31742 1
a31742 1
    return gl_provider_resolver(entrypoint_strings + 37943 /* "glProgramUniform4ui64NV" */,
d31755 2
a31756 2
        37967 /* "glProgramUniform4ui64vNV" */,
        37967 /* "glProgramUniform4ui64vNV" */,
d31758 1
a31758 1
    return gl_provider_resolver(entrypoint_strings + 37967 /* "glProgramUniform4ui64vNV" */,
d31769 1
a31770 1
        GL_extension_GL_ARB_separate_shader_objects,
d31774 5
a31778 5
        37992 /* "glProgramUniform4uiEXT" */,
        37992 /* "glProgramUniform4uiEXT" */,
        37923 /* "glProgramUniform4ui" */,
        37923 /* "glProgramUniform4ui" */,
        37923 /* "glProgramUniform4ui" */,
d31780 1
a31780 1
    return gl_provider_resolver(entrypoint_strings + 37992 /* "glProgramUniform4uiEXT" */,
d31789 1
a31790 1
        GL_extension_GL_ARB_separate_shader_objects,
d31796 5
a31800 5
        38015 /* "glProgramUniform4uiv" */,
        38015 /* "glProgramUniform4uiv" */,
        38015 /* "glProgramUniform4uiv" */,
        38036 /* "glProgramUniform4uivEXT" */,
        38036 /* "glProgramUniform4uivEXT" */,
d31802 1
a31802 1
    return gl_provider_resolver(entrypoint_strings + 38015 /* "glProgramUniform4uiv" */,
d31813 1
a31814 1
        GL_extension_GL_ARB_separate_shader_objects,
d31818 5
a31822 5
        38036 /* "glProgramUniform4uivEXT" */,
        38036 /* "glProgramUniform4uivEXT" */,
        38015 /* "glProgramUniform4uiv" */,
        38015 /* "glProgramUniform4uiv" */,
        38015 /* "glProgramUniform4uiv" */,
d31824 1
a31824 1
    return gl_provider_resolver(entrypoint_strings + 38036 /* "glProgramUniform4uivEXT" */,
d31831 1
a31831 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 38060 /* glProgramUniformHandleui64ARB */);
d31837 1
a31837 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 38090 /* glProgramUniformHandleui64NV */);
d31843 1
a31843 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 38119 /* glProgramUniformHandleui64vARB */);
d31849 1
a31849 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 38150 /* glProgramUniformHandleui64vNV */);
d31861 2
a31862 2
        38180 /* "glProgramUniformMatrix2dv" */,
        38180 /* "glProgramUniformMatrix2dv" */,
d31864 1
a31864 1
    return gl_provider_resolver(entrypoint_strings + 38180 /* "glProgramUniformMatrix2dv" */,
d31871 1
a31871 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 38206 /* glProgramUniformMatrix2dvEXT */);
d31879 1
a31880 1
        GL_extension_GL_ARB_separate_shader_objects,
d31886 5
a31890 5
        38235 /* "glProgramUniformMatrix2fv" */,
        38235 /* "glProgramUniformMatrix2fv" */,
        38235 /* "glProgramUniformMatrix2fv" */,
        38261 /* "glProgramUniformMatrix2fvEXT" */,
        38261 /* "glProgramUniformMatrix2fvEXT" */,
d31892 1
a31892 1
    return gl_provider_resolver(entrypoint_strings + 38235 /* "glProgramUniformMatrix2fv" */,
d31903 1
a31904 1
        GL_extension_GL_ARB_separate_shader_objects,
d31908 5
a31912 5
        38261 /* "glProgramUniformMatrix2fvEXT" */,
        38261 /* "glProgramUniformMatrix2fvEXT" */,
        38235 /* "glProgramUniformMatrix2fv" */,
        38235 /* "glProgramUniformMatrix2fv" */,
        38235 /* "glProgramUniformMatrix2fv" */,
d31914 1
a31914 1
    return gl_provider_resolver(entrypoint_strings + 38261 /* "glProgramUniformMatrix2fvEXT" */,
d31927 2
a31928 2
        38290 /* "glProgramUniformMatrix2x3dv" */,
        38290 /* "glProgramUniformMatrix2x3dv" */,
d31930 1
a31930 1
    return gl_provider_resolver(entrypoint_strings + 38290 /* "glProgramUniformMatrix2x3dv" */,
d31937 1
a31937 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 38318 /* glProgramUniformMatrix2x3dvEXT */);
d31945 1
a31946 1
        GL_extension_GL_ARB_separate_shader_objects,
d31952 5
a31956 5
        38349 /* "glProgramUniformMatrix2x3fv" */,
        38349 /* "glProgramUniformMatrix2x3fv" */,
        38349 /* "glProgramUniformMatrix2x3fv" */,
        38377 /* "glProgramUniformMatrix2x3fvEXT" */,
        38377 /* "glProgramUniformMatrix2x3fvEXT" */,
d31958 1
a31958 1
    return gl_provider_resolver(entrypoint_strings + 38349 /* "glProgramUniformMatrix2x3fv" */,
d31969 1
a31970 1
        GL_extension_GL_ARB_separate_shader_objects,
d31974 5
a31978 5
        38377 /* "glProgramUniformMatrix2x3fvEXT" */,
        38377 /* "glProgramUniformMatrix2x3fvEXT" */,
        38349 /* "glProgramUniformMatrix2x3fv" */,
        38349 /* "glProgramUniformMatrix2x3fv" */,
        38349 /* "glProgramUniformMatrix2x3fv" */,
d31980 1
a31980 1
    return gl_provider_resolver(entrypoint_strings + 38377 /* "glProgramUniformMatrix2x3fvEXT" */,
d31993 2
a31994 2
        38408 /* "glProgramUniformMatrix2x4dv" */,
        38408 /* "glProgramUniformMatrix2x4dv" */,
d31996 1
a31996 1
    return gl_provider_resolver(entrypoint_strings + 38408 /* "glProgramUniformMatrix2x4dv" */,
d32003 1
a32003 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 38436 /* glProgramUniformMatrix2x4dvEXT */);
d32011 1
a32012 1
        GL_extension_GL_ARB_separate_shader_objects,
d32018 5
a32022 5
        38467 /* "glProgramUniformMatrix2x4fv" */,
        38467 /* "glProgramUniformMatrix2x4fv" */,
        38467 /* "glProgramUniformMatrix2x4fv" */,
        38495 /* "glProgramUniformMatrix2x4fvEXT" */,
        38495 /* "glProgramUniformMatrix2x4fvEXT" */,
d32024 1
a32024 1
    return gl_provider_resolver(entrypoint_strings + 38467 /* "glProgramUniformMatrix2x4fv" */,
d32035 1
a32036 1
        GL_extension_GL_ARB_separate_shader_objects,
d32040 5
a32044 5
        38495 /* "glProgramUniformMatrix2x4fvEXT" */,
        38495 /* "glProgramUniformMatrix2x4fvEXT" */,
        38467 /* "glProgramUniformMatrix2x4fv" */,
        38467 /* "glProgramUniformMatrix2x4fv" */,
        38467 /* "glProgramUniformMatrix2x4fv" */,
d32046 1
a32046 1
    return gl_provider_resolver(entrypoint_strings + 38495 /* "glProgramUniformMatrix2x4fvEXT" */,
d32059 2
a32060 2
        38526 /* "glProgramUniformMatrix3dv" */,
        38526 /* "glProgramUniformMatrix3dv" */,
d32062 1
a32062 1
    return gl_provider_resolver(entrypoint_strings + 38526 /* "glProgramUniformMatrix3dv" */,
d32069 1
a32069 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 38552 /* glProgramUniformMatrix3dvEXT */);
d32077 1
a32078 1
        GL_extension_GL_ARB_separate_shader_objects,
d32084 5
a32088 5
        38581 /* "glProgramUniformMatrix3fv" */,
        38581 /* "glProgramUniformMatrix3fv" */,
        38581 /* "glProgramUniformMatrix3fv" */,
        38607 /* "glProgramUniformMatrix3fvEXT" */,
        38607 /* "glProgramUniformMatrix3fvEXT" */,
d32090 1
a32090 1
    return gl_provider_resolver(entrypoint_strings + 38581 /* "glProgramUniformMatrix3fv" */,
d32101 1
a32102 1
        GL_extension_GL_ARB_separate_shader_objects,
d32106 5
a32110 5
        38607 /* "glProgramUniformMatrix3fvEXT" */,
        38607 /* "glProgramUniformMatrix3fvEXT" */,
        38581 /* "glProgramUniformMatrix3fv" */,
        38581 /* "glProgramUniformMatrix3fv" */,
        38581 /* "glProgramUniformMatrix3fv" */,
d32112 1
a32112 1
    return gl_provider_resolver(entrypoint_strings + 38607 /* "glProgramUniformMatrix3fvEXT" */,
d32125 2
a32126 2
        38636 /* "glProgramUniformMatrix3x2dv" */,
        38636 /* "glProgramUniformMatrix3x2dv" */,
d32128 1
a32128 1
    return gl_provider_resolver(entrypoint_strings + 38636 /* "glProgramUniformMatrix3x2dv" */,
d32135 1
a32135 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 38664 /* glProgramUniformMatrix3x2dvEXT */);
d32143 1
a32144 1
        GL_extension_GL_ARB_separate_shader_objects,
d32150 5
a32154 5
        38695 /* "glProgramUniformMatrix3x2fv" */,
        38695 /* "glProgramUniformMatrix3x2fv" */,
        38695 /* "glProgramUniformMatrix3x2fv" */,
        38723 /* "glProgramUniformMatrix3x2fvEXT" */,
        38723 /* "glProgramUniformMatrix3x2fvEXT" */,
d32156 1
a32156 1
    return gl_provider_resolver(entrypoint_strings + 38695 /* "glProgramUniformMatrix3x2fv" */,
d32167 1
a32168 1
        GL_extension_GL_ARB_separate_shader_objects,
d32172 5
a32176 5
        38723 /* "glProgramUniformMatrix3x2fvEXT" */,
        38723 /* "glProgramUniformMatrix3x2fvEXT" */,
        38695 /* "glProgramUniformMatrix3x2fv" */,
        38695 /* "glProgramUniformMatrix3x2fv" */,
        38695 /* "glProgramUniformMatrix3x2fv" */,
d32178 1
a32178 1
    return gl_provider_resolver(entrypoint_strings + 38723 /* "glProgramUniformMatrix3x2fvEXT" */,
d32191 2
a32192 2
        38754 /* "glProgramUniformMatrix3x4dv" */,
        38754 /* "glProgramUniformMatrix3x4dv" */,
d32194 1
a32194 1
    return gl_provider_resolver(entrypoint_strings + 38754 /* "glProgramUniformMatrix3x4dv" */,
d32201 1
a32201 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 38782 /* glProgramUniformMatrix3x4dvEXT */);
d32209 1
a32210 1
        GL_extension_GL_ARB_separate_shader_objects,
d32216 5
a32220 5
        38813 /* "glProgramUniformMatrix3x4fv" */,
        38813 /* "glProgramUniformMatrix3x4fv" */,
        38813 /* "glProgramUniformMatrix3x4fv" */,
        38841 /* "glProgramUniformMatrix3x4fvEXT" */,
        38841 /* "glProgramUniformMatrix3x4fvEXT" */,
d32222 1
a32222 1
    return gl_provider_resolver(entrypoint_strings + 38813 /* "glProgramUniformMatrix3x4fv" */,
d32233 1
a32234 1
        GL_extension_GL_ARB_separate_shader_objects,
d32238 5
a32242 5
        38841 /* "glProgramUniformMatrix3x4fvEXT" */,
        38841 /* "glProgramUniformMatrix3x4fvEXT" */,
        38813 /* "glProgramUniformMatrix3x4fv" */,
        38813 /* "glProgramUniformMatrix3x4fv" */,
        38813 /* "glProgramUniformMatrix3x4fv" */,
d32244 1
a32244 1
    return gl_provider_resolver(entrypoint_strings + 38841 /* "glProgramUniformMatrix3x4fvEXT" */,
d32257 2
a32258 2
        38872 /* "glProgramUniformMatrix4dv" */,
        38872 /* "glProgramUniformMatrix4dv" */,
d32260 1
a32260 1
    return gl_provider_resolver(entrypoint_strings + 38872 /* "glProgramUniformMatrix4dv" */,
d32267 1
a32267 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 38898 /* glProgramUniformMatrix4dvEXT */);
d32275 1
a32276 1
        GL_extension_GL_ARB_separate_shader_objects,
d32282 5
a32286 5
        38927 /* "glProgramUniformMatrix4fv" */,
        38927 /* "glProgramUniformMatrix4fv" */,
        38927 /* "glProgramUniformMatrix4fv" */,
        38953 /* "glProgramUniformMatrix4fvEXT" */,
        38953 /* "glProgramUniformMatrix4fvEXT" */,
d32288 1
a32288 1
    return gl_provider_resolver(entrypoint_strings + 38927 /* "glProgramUniformMatrix4fv" */,
d32299 1
a32300 1
        GL_extension_GL_ARB_separate_shader_objects,
d32304 5
a32308 5
        38953 /* "glProgramUniformMatrix4fvEXT" */,
        38953 /* "glProgramUniformMatrix4fvEXT" */,
        38927 /* "glProgramUniformMatrix4fv" */,
        38927 /* "glProgramUniformMatrix4fv" */,
        38927 /* "glProgramUniformMatrix4fv" */,
d32310 1
a32310 1
    return gl_provider_resolver(entrypoint_strings + 38953 /* "glProgramUniformMatrix4fvEXT" */,
d32323 2
a32324 2
        38982 /* "glProgramUniformMatrix4x2dv" */,
        38982 /* "glProgramUniformMatrix4x2dv" */,
d32326 1
a32326 1
    return gl_provider_resolver(entrypoint_strings + 38982 /* "glProgramUniformMatrix4x2dv" */,
d32333 1
a32333 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 39010 /* glProgramUniformMatrix4x2dvEXT */);
d32341 1
a32342 1
        GL_extension_GL_ARB_separate_shader_objects,
d32348 5
a32352 5
        39041 /* "glProgramUniformMatrix4x2fv" */,
        39041 /* "glProgramUniformMatrix4x2fv" */,
        39041 /* "glProgramUniformMatrix4x2fv" */,
        39069 /* "glProgramUniformMatrix4x2fvEXT" */,
        39069 /* "glProgramUniformMatrix4x2fvEXT" */,
d32354 1
a32354 1
    return gl_provider_resolver(entrypoint_strings + 39041 /* "glProgramUniformMatrix4x2fv" */,
d32365 1
a32366 1
        GL_extension_GL_ARB_separate_shader_objects,
d32370 5
a32374 5
        39069 /* "glProgramUniformMatrix4x2fvEXT" */,
        39069 /* "glProgramUniformMatrix4x2fvEXT" */,
        39041 /* "glProgramUniformMatrix4x2fv" */,
        39041 /* "glProgramUniformMatrix4x2fv" */,
        39041 /* "glProgramUniformMatrix4x2fv" */,
d32376 1
a32376 1
    return gl_provider_resolver(entrypoint_strings + 39069 /* "glProgramUniformMatrix4x2fvEXT" */,
d32389 2
a32390 2
        39100 /* "glProgramUniformMatrix4x3dv" */,
        39100 /* "glProgramUniformMatrix4x3dv" */,
d32392 1
a32392 1
    return gl_provider_resolver(entrypoint_strings + 39100 /* "glProgramUniformMatrix4x3dv" */,
d32399 1
a32399 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 39128 /* glProgramUniformMatrix4x3dvEXT */);
d32407 1
a32408 1
        GL_extension_GL_ARB_separate_shader_objects,
d32414 5
a32418 5
        39159 /* "glProgramUniformMatrix4x3fv" */,
        39159 /* "glProgramUniformMatrix4x3fv" */,
        39159 /* "glProgramUniformMatrix4x3fv" */,
        39187 /* "glProgramUniformMatrix4x3fvEXT" */,
        39187 /* "glProgramUniformMatrix4x3fvEXT" */,
d32420 1
a32420 1
    return gl_provider_resolver(entrypoint_strings + 39159 /* "glProgramUniformMatrix4x3fv" */,
d32431 1
a32432 1
        GL_extension_GL_ARB_separate_shader_objects,
d32436 5
a32440 5
        39187 /* "glProgramUniformMatrix4x3fvEXT" */,
        39187 /* "glProgramUniformMatrix4x3fvEXT" */,
        39159 /* "glProgramUniformMatrix4x3fv" */,
        39159 /* "glProgramUniformMatrix4x3fv" */,
        39159 /* "glProgramUniformMatrix4x3fv" */,
d32442 1
a32442 1
    return gl_provider_resolver(entrypoint_strings + 39187 /* "glProgramUniformMatrix4x3fvEXT" */,
d32449 1
a32449 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 39218 /* glProgramUniformui64NV */);
d32455 1
a32455 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 39241 /* glProgramUniformui64vNV */);
d32461 1
a32461 1
    return gl_single_resolver(GL_extension_GL_NV_geometry_program4, 39265 /* glProgramVertexLimitNV */);
d32474 3
a32476 3
        39288 /* "glProvokingVertex" */,
        39288 /* "glProvokingVertex" */,
        39306 /* "glProvokingVertexEXT" */,
d32478 1
a32478 1
    return gl_provider_resolver(entrypoint_strings + 39288 /* "glProvokingVertex" */,
d32492 3
a32494 3
        39306 /* "glProvokingVertexEXT" */,
        39288 /* "glProvokingVertex" */,
        39288 /* "glProvokingVertex" */,
d32496 1
a32496 1
    return gl_provider_resolver(entrypoint_strings + 39306 /* "glProvokingVertexEXT" */,
d32503 1
a32503 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39327 /* glPushAttrib */);
d32509 1
a32509 1
    return gl_single_resolver(Desktop_OpenGL_1_1, 39340 /* glPushClientAttrib */);
d32515 1
a32515 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 39359 /* glPushClientAttribDefaultEXT */);
d32528 3
a32530 3
        39388 /* "glPushDebugGroup" */,
        39388 /* "glPushDebugGroup" */,
        39405 /* "glPushDebugGroupKHR" */,
d32532 1
a32532 1
    return gl_provider_resolver(entrypoint_strings + 39388 /* "glPushDebugGroup" */,
d32546 3
a32548 3
        39405 /* "glPushDebugGroupKHR" */,
        39388 /* "glPushDebugGroup" */,
        39388 /* "glPushDebugGroup" */,
d32550 1
a32550 1
    return gl_provider_resolver(entrypoint_strings + 39405 /* "glPushDebugGroupKHR" */,
d32557 1
a32557 1
    return gl_single_resolver(GL_extension_GL_EXT_debug_marker, 39425 /* glPushGroupMarkerEXT */);
d32569 2
a32570 2
        39446 /* "glPushMatrix" */,
        39446 /* "glPushMatrix" */,
d32572 1
a32572 1
    return gl_provider_resolver(entrypoint_strings + 39446 /* "glPushMatrix" */,
d32579 1
a32579 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39459 /* glPushName */);
d32592 3
a32594 3
        39470 /* "glQueryCounter" */,
        39470 /* "glQueryCounter" */,
        39485 /* "glQueryCounterEXT" */,
d32596 1
a32596 1
    return gl_provider_resolver(entrypoint_strings + 39470 /* "glQueryCounter" */,
d32610 3
a32612 3
        39485 /* "glQueryCounterEXT" */,
        39470 /* "glQueryCounter" */,
        39470 /* "glQueryCounter" */,
d32614 1
a32614 1
    return gl_provider_resolver(entrypoint_strings + 39485 /* "glQueryCounterEXT" */,
d32621 1
a32621 1
    return gl_single_resolver(GL_extension_GL_OES_query_matrix, 39503 /* glQueryMatrixxOES */);
d32627 1
a32627 1
    return gl_single_resolver(GL_extension_GL_AMD_occlusion_query_event, 39521 /* glQueryObjectParameteruiAMD */);
d32633 1
a32633 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39549 /* glRasterPos2d */);
d32639 1
a32639 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39563 /* glRasterPos2dv */);
d32645 1
a32645 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39578 /* glRasterPos2f */);
d32651 1
a32651 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39592 /* glRasterPos2fv */);
d32657 1
a32657 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39607 /* glRasterPos2i */);
d32663 1
a32663 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39621 /* glRasterPos2iv */);
d32669 1
a32669 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39636 /* glRasterPos2s */);
d32675 1
a32675 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39650 /* glRasterPos2sv */);
d32681 1
a32681 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39665 /* glRasterPos2xOES */);
d32687 1
a32687 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39682 /* glRasterPos2xvOES */);
d32693 1
a32693 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39700 /* glRasterPos3d */);
d32699 1
a32699 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39714 /* glRasterPos3dv */);
d32705 1
a32705 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39729 /* glRasterPos3f */);
d32711 1
a32711 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39743 /* glRasterPos3fv */);
d32717 1
a32717 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39758 /* glRasterPos3i */);
d32723 1
a32723 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39772 /* glRasterPos3iv */);
d32729 1
a32729 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39787 /* glRasterPos3s */);
d32735 1
a32735 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39801 /* glRasterPos3sv */);
d32741 1
a32741 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39816 /* glRasterPos3xOES */);
d32747 1
a32747 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39833 /* glRasterPos3xvOES */);
d32753 1
a32753 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39851 /* glRasterPos4d */);
d32759 1
a32759 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39865 /* glRasterPos4dv */);
d32765 1
a32765 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39880 /* glRasterPos4f */);
d32771 1
a32771 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39894 /* glRasterPos4fv */);
d32777 1
a32777 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39909 /* glRasterPos4i */);
d32783 1
a32783 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39923 /* glRasterPos4iv */);
d32789 1
a32789 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39938 /* glRasterPos4s */);
d32795 1
a32795 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 39952 /* glRasterPos4sv */);
d32801 1
a32801 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39967 /* glRasterPos4xOES */);
d32807 19
a32825 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 39984 /* glRasterPos4xvOES */);
d32837 2
a32838 2
        40002 /* "glReadBuffer" */,
        40002 /* "glReadBuffer" */,
d32840 1
a32840 1
    return gl_provider_resolver(entrypoint_strings + 40002 /* "glReadBuffer" */,
d32847 1
a32847 1
    return gl_single_resolver(GL_extension_GL_EXT_multiview_draw_buffers, 40015 /* glReadBufferIndexedEXT */);
d32853 1
a32853 1
    return gl_single_resolver(GL_extension_GL_NV_read_buffer, 40038 /* glReadBufferNV */);
d32859 1
a32859 1
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 40053 /* glReadInstrumentsSGIX */);
d32872 25
a32896 3
        40075 /* "glReadPixels" */,
        40075 /* "glReadPixels" */,
        40075 /* "glReadPixels" */,
d32898 1
a32898 1
    return gl_provider_resolver(entrypoint_strings + 40075 /* "glReadPixels" */,
d32905 17
a32921 1
    return gl_single_resolver(GL_extension_GL_ARB_robustness, 40088 /* glReadnPixelsARB */);
d32927 39
a32965 1
    return gl_single_resolver(GL_extension_GL_EXT_robustness, 40105 /* glReadnPixelsEXT */);
d32971 1
a32971 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 40122 /* glRectd */);
d32977 1
a32977 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 40130 /* glRectdv */);
d32983 1
a32983 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 40139 /* glRectf */);
d32989 1
a32989 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 40147 /* glRectfv */);
d32995 1
a32995 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 40156 /* glRecti */);
d33001 1
a33001 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 40164 /* glRectiv */);
d33007 1
a33007 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 40173 /* glRects */);
d33013 1
a33013 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 40181 /* glRectsv */);
d33019 1
a33019 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 40190 /* glRectxOES */);
d33025 1
a33025 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 40201 /* glRectxvOES */);
d33031 1
a33031 1
    return gl_single_resolver(GL_extension_GL_SGIX_reference_plane, 40213 /* glReferencePlaneSGIX */);
d33044 3
a33046 3
        40234 /* "glReleaseShaderCompiler" */,
        40234 /* "glReleaseShaderCompiler" */,
        40234 /* "glReleaseShaderCompiler" */,
d33048 1
a33048 1
    return gl_provider_resolver(entrypoint_strings + 40234 /* "glReleaseShaderCompiler" */,
d33055 1
a33055 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 40258 /* glRenderMode */);
d33069 4
a33072 4
        40271 /* "glRenderbufferStorage" */,
        40271 /* "glRenderbufferStorage" */,
        40271 /* "glRenderbufferStorage" */,
        40293 /* "glRenderbufferStorageEXT" */,
d33074 1
a33074 1
    return gl_provider_resolver(entrypoint_strings + 40271 /* "glRenderbufferStorage" */,
d33089 4
a33092 4
        40293 /* "glRenderbufferStorageEXT" */,
        40271 /* "glRenderbufferStorage" */,
        40271 /* "glRenderbufferStorage" */,
        40271 /* "glRenderbufferStorage" */,
d33094 1
a33094 1
    return gl_provider_resolver(entrypoint_strings + 40293 /* "glRenderbufferStorageEXT" */,
d33103 1
a33104 1
        GL_extension_GL_ARB_framebuffer_object,
d33111 6
a33116 6
        40318 /* "glRenderbufferStorageMultisample" */,
        40318 /* "glRenderbufferStorageMultisample" */,
        40318 /* "glRenderbufferStorageMultisample" */,
        40470 /* "glRenderbufferStorageMultisampleEXT" */,
        40470 /* "glRenderbufferStorageMultisampleEXT" */,
        40542 /* "glRenderbufferStorageMultisampleNV" */,
d33118 1
a33118 1
    return gl_provider_resolver(entrypoint_strings + 40318 /* "glRenderbufferStorageMultisample" */,
d33125 1
a33125 1
    return gl_single_resolver(GL_extension_GL_ANGLE_framebuffer_multisample, 40351 /* glRenderbufferStorageMultisampleANGLE */);
d33131 1
a33131 1
    return gl_single_resolver(GL_extension_GL_APPLE_framebuffer_multisample, 40389 /* glRenderbufferStorageMultisampleAPPLE */);
d33137 1
a33137 1
    return gl_single_resolver(GL_extension_GL_NV_framebuffer_multisample_coverage, 40427 /* glRenderbufferStorageMultisampleCoverageNV */);
d33147 1
a33148 1
        GL_extension_GL_ARB_framebuffer_object,
d33153 6
a33158 6
        40470 /* "glRenderbufferStorageMultisampleEXT" */,
        40470 /* "glRenderbufferStorageMultisampleEXT" */,
        40318 /* "glRenderbufferStorageMultisample" */,
        40318 /* "glRenderbufferStorageMultisample" */,
        40318 /* "glRenderbufferStorageMultisample" */,
        40542 /* "glRenderbufferStorageMultisampleNV" */,
d33160 1
a33160 1
    return gl_provider_resolver(entrypoint_strings + 40470 /* "glRenderbufferStorageMultisampleEXT" */,
d33167 1
a33167 1
    return gl_single_resolver(GL_extension_GL_IMG_multisampled_render_to_texture, 40506 /* glRenderbufferStorageMultisampleIMG */);
d33176 1
a33177 1
        GL_extension_GL_ARB_framebuffer_object,
d33183 6
a33188 6
        40542 /* "glRenderbufferStorageMultisampleNV" */,
        40318 /* "glRenderbufferStorageMultisample" */,
        40318 /* "glRenderbufferStorageMultisample" */,
        40318 /* "glRenderbufferStorageMultisample" */,
        40470 /* "glRenderbufferStorageMultisampleEXT" */,
        40470 /* "glRenderbufferStorageMultisampleEXT" */,
d33190 1
a33190 1
    return gl_provider_resolver(entrypoint_strings + 40542 /* "glRenderbufferStorageMultisampleNV" */,
d33197 1
a33197 1
    return gl_single_resolver(GL_extension_GL_OES_framebuffer_object, 40577 /* glRenderbufferStorageOES */);
d33203 1
a33203 1
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 40602 /* glReplacementCodePointerSUN */);
d33209 1
a33209 1
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 40630 /* glReplacementCodeubSUN */);
d33215 1
a33215 1
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 40653 /* glReplacementCodeubvSUN */);
d33221 1
a33221 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 40677 /* glReplacementCodeuiColor3fVertex3fSUN */);
d33227 1
a33227 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 40715 /* glReplacementCodeuiColor3fVertex3fvSUN */);
d33233 1
a33233 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 40754 /* glReplacementCodeuiColor4fNormal3fVertex3fSUN */);
d33239 1
a33239 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 40800 /* glReplacementCodeuiColor4fNormal3fVertex3fvSUN */);
d33245 1
a33245 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 40847 /* glReplacementCodeuiColor4ubVertex3fSUN */);
d33251 1
a33251 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 40886 /* glReplacementCodeuiColor4ubVertex3fvSUN */);
d33257 1
a33257 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 40926 /* glReplacementCodeuiNormal3fVertex3fSUN */);
d33263 1
a33263 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 40965 /* glReplacementCodeuiNormal3fVertex3fvSUN */);
d33269 1
a33269 1
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 41005 /* glReplacementCodeuiSUN */);
d33275 1
a33275 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 41028 /* glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN */);
d33281 1
a33281 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 41084 /* glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN */);
d33287 1
a33287 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 41141 /* glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN */);
d33293 1
a33293 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 41190 /* glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN */);
d33299 1
a33299 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 41240 /* glReplacementCodeuiTexCoord2fVertex3fSUN */);
d33305 1
a33305 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 41281 /* glReplacementCodeuiTexCoord2fVertex3fvSUN */);
d33311 1
a33311 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 41323 /* glReplacementCodeuiVertex3fSUN */);
d33317 1
a33317 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 41354 /* glReplacementCodeuiVertex3fvSUN */);
d33323 1
a33323 1
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 41386 /* glReplacementCodeuivSUN */);
d33329 1
a33329 1
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 41410 /* glReplacementCodeusSUN */);
d33335 1
a33335 1
    return gl_single_resolver(GL_extension_GL_SUN_triangle_list, 41433 /* glReplacementCodeusvSUN */);
d33341 1
a33341 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 41457 /* glRequestResidentProgramsNV */);
d33353 2
a33354 2
        41485 /* "glResetHistogram" */,
        41502 /* "glResetHistogramEXT" */,
d33356 1
a33356 1
    return gl_provider_resolver(entrypoint_strings + 41485 /* "glResetHistogram" */,
d33369 2
a33370 2
        41502 /* "glResetHistogramEXT" */,
        41485 /* "glResetHistogram" */,
d33372 1
a33372 1
    return gl_provider_resolver(entrypoint_strings + 41502 /* "glResetHistogramEXT" */,
d33385 2
a33386 2
        41522 /* "glResetMinmax" */,
        41536 /* "glResetMinmaxEXT" */,
d33388 1
a33388 1
    return gl_provider_resolver(entrypoint_strings + 41522 /* "glResetMinmax" */,
d33401 2
a33402 2
        41536 /* "glResetMinmaxEXT" */,
        41522 /* "glResetMinmax" */,
d33404 1
a33404 1
    return gl_provider_resolver(entrypoint_strings + 41536 /* "glResetMinmaxEXT" */,
d33411 7
a33417 1
    return gl_single_resolver(GL_extension_GL_MESA_resize_buffers, 41553 /* glResizeBuffersMESA */);
d33423 1
a33423 1
    return gl_single_resolver(GL_extension_GL_APPLE_framebuffer_multisample, 41573 /* glResolveMultisampleFramebufferAPPLE */);
d33431 1
a33432 1
        GL_extension_GL_ARB_transform_feedback2,
d33437 4
a33440 4
        41610 /* "glResumeTransformFeedback" */,
        41610 /* "glResumeTransformFeedback" */,
        41610 /* "glResumeTransformFeedback" */,
        41636 /* "glResumeTransformFeedbackNV" */,
d33442 1
a33442 1
    return gl_provider_resolver(entrypoint_strings + 41610 /* "glResumeTransformFeedback" */,
d33452 1
a33453 1
        GL_extension_GL_ARB_transform_feedback2,
d33457 4
a33460 4
        41636 /* "glResumeTransformFeedbackNV" */,
        41610 /* "glResumeTransformFeedback" */,
        41610 /* "glResumeTransformFeedback" */,
        41610 /* "glResumeTransformFeedback" */,
d33462 1
a33462 1
    return gl_provider_resolver(entrypoint_strings + 41636 /* "glResumeTransformFeedbackNV" */,
d33469 1
a33469 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 41664 /* glRotated */);
d33481 2
a33482 2
        41674 /* "glRotatef" */,
        41674 /* "glRotatef" */,
d33484 1
a33484 1
    return gl_provider_resolver(entrypoint_strings + 41674 /* "glRotatef" */,
d33491 1
a33491 1
    return gl_single_resolver(OpenGL_ES_1_0, 41684 /* glRotatex */);
d33497 1
a33497 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 41694 /* glRotatexOES */);
d33504 1
a33505 1
        Desktop_OpenGL_1_3,
d33511 4
a33514 4
        41707 /* "glSampleCoverage" */,
        41707 /* "glSampleCoverage" */,
        41707 /* "glSampleCoverage" */,
        41724 /* "glSampleCoverageARB" */,
d33516 1
a33516 1
    return gl_provider_resolver(entrypoint_strings + 41707 /* "glSampleCoverage" */,
d33525 1
a33526 1
        Desktop_OpenGL_1_3,
d33531 4
a33534 4
        41724 /* "glSampleCoverageARB" */,
        41707 /* "glSampleCoverage" */,
        41707 /* "glSampleCoverage" */,
        41707 /* "glSampleCoverage" */,
d33536 1
a33536 1
    return gl_provider_resolver(entrypoint_strings + 41724 /* "glSampleCoverageARB" */,
a33539 6
static PFNGLSAMPLECOVERAGEOESPROC
epoxy_glSampleCoverageOES_resolver(void)
{
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 41744 /* glSampleCoverageOES */);
}

d33543 1
a33543 1
    return gl_single_resolver(OpenGL_ES_1_0, 41764 /* glSampleCoveragex */);
d33549 1
a33549 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 41782 /* glSampleCoveragexOES */);
d33555 1
a33555 1
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 41803 /* glSampleMapATI */);
d33567 2
a33568 2
        41818 /* "glSampleMaskEXT" */,
        41856 /* "glSampleMaskSGIS" */,
d33570 1
a33570 1
    return gl_provider_resolver(entrypoint_strings + 41818 /* "glSampleMaskEXT" */,
d33577 1
a33577 1
    return gl_single_resolver(GL_extension_GL_NV_explicit_multisample, 41834 /* glSampleMaskIndexedNV */);
d33589 2
a33590 2
        41856 /* "glSampleMaskSGIS" */,
        41818 /* "glSampleMaskEXT" */,
d33592 1
a33592 1
    return gl_provider_resolver(entrypoint_strings + 41856 /* "glSampleMaskSGIS" */,
d33601 1
a33602 1
        GL_extension_GL_ARB_texture_multisample,
d33606 3
a33608 3
        41873 /* "glSampleMaski" */,
        41873 /* "glSampleMaski" */,
        41873 /* "glSampleMaski" */,
d33610 1
a33610 1
    return gl_provider_resolver(entrypoint_strings + 41873 /* "glSampleMaski" */,
d33623 2
a33624 2
        41887 /* "glSamplePatternEXT" */,
        41906 /* "glSamplePatternSGIS" */,
d33626 1
a33626 1
    return gl_provider_resolver(entrypoint_strings + 41887 /* "glSamplePatternEXT" */,
d33639 2
a33640 2
        41906 /* "glSamplePatternSGIS" */,
        41887 /* "glSamplePatternEXT" */,
d33642 1
a33642 1
    return gl_provider_resolver(entrypoint_strings + 41906 /* "glSamplePatternSGIS" */,
d33650 22
d33673 18
d33692 2
d33697 4
a33700 2
        41926 /* "glSamplerParameterIiv" */,
        41926 /* "glSamplerParameterIiv" */,
d33702 1
a33702 1
    return gl_provider_resolver(entrypoint_strings + 41926 /* "glSamplerParameterIiv" */,
d33710 22
d33733 18
d33752 2
d33757 4
a33760 2
        41948 /* "glSamplerParameterIuiv" */,
        41948 /* "glSamplerParameterIuiv" */,
d33762 1
a33762 1
    return gl_provider_resolver(entrypoint_strings + 41948 /* "glSamplerParameterIuiv" */,
d33770 1
a33771 1
        Desktop_OpenGL_3_3,
d33776 3
a33778 3
        41971 /* "glSamplerParameterf" */,
        41971 /* "glSamplerParameterf" */,
        41971 /* "glSamplerParameterf" */,
d33780 1
a33780 1
    return gl_provider_resolver(entrypoint_strings + 41971 /* "glSamplerParameterf" */,
d33788 1
a33789 1
        Desktop_OpenGL_3_3,
d33794 3
a33796 3
        41991 /* "glSamplerParameterfv" */,
        41991 /* "glSamplerParameterfv" */,
        41991 /* "glSamplerParameterfv" */,
d33798 1
a33798 1
    return gl_provider_resolver(entrypoint_strings + 41991 /* "glSamplerParameterfv" */,
d33806 1
a33807 1
        Desktop_OpenGL_3_3,
d33812 3
a33814 3
        42012 /* "glSamplerParameteri" */,
        42012 /* "glSamplerParameteri" */,
        42012 /* "glSamplerParameteri" */,
d33816 1
a33816 1
    return gl_provider_resolver(entrypoint_strings + 42012 /* "glSamplerParameteri" */,
d33824 1
a33825 1
        Desktop_OpenGL_3_3,
d33830 3
a33832 3
        42032 /* "glSamplerParameteriv" */,
        42032 /* "glSamplerParameteriv" */,
        42032 /* "glSamplerParameteriv" */,
d33834 1
a33834 1
    return gl_provider_resolver(entrypoint_strings + 42032 /* "glSamplerParameteriv" */,
d33841 1
a33841 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 42053 /* glScaled */);
d33853 2
a33854 2
        42062 /* "glScalef" */,
        42062 /* "glScalef" */,
d33856 1
a33856 1
    return gl_provider_resolver(entrypoint_strings + 42062 /* "glScalef" */,
d33863 1
a33863 1
    return gl_single_resolver(OpenGL_ES_1_0, 42071 /* glScalex */);
d33869 1
a33869 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 42080 /* glScalexOES */);
d33882 3
a33884 3
        42092 /* "glScissor" */,
        42092 /* "glScissor" */,
        42092 /* "glScissor" */,
d33886 1
a33886 1
    return gl_provider_resolver(entrypoint_strings + 42092 /* "glScissor" */,
d33896 19
d33918 3
a33920 2
        42102 /* "glScissorArrayv" */,
        42102 /* "glScissorArrayv" */,
d33922 1
a33922 1
    return gl_provider_resolver(entrypoint_strings + 42102 /* "glScissorArrayv" */,
d33932 19
d33954 3
a33956 2
        42118 /* "glScissorIndexed" */,
        42118 /* "glScissorIndexed" */,
d33958 1
a33958 1
    return gl_provider_resolver(entrypoint_strings + 42118 /* "glScissorIndexed" */,
d33968 19
d33990 3
a33992 2
        42135 /* "glScissorIndexedv" */,
        42135 /* "glScissorIndexedv" */,
d33994 1
a33994 1
    return gl_provider_resolver(entrypoint_strings + 42135 /* "glScissorIndexedv" */,
d34007 2
a34008 2
        42153 /* "glSecondaryColor3b" */,
        42172 /* "glSecondaryColor3bEXT" */,
d34010 1
a34010 1
    return gl_provider_resolver(entrypoint_strings + 42153 /* "glSecondaryColor3b" */,
d34023 2
a34024 2
        42172 /* "glSecondaryColor3bEXT" */,
        42153 /* "glSecondaryColor3b" */,
d34026 1
a34026 1
    return gl_provider_resolver(entrypoint_strings + 42172 /* "glSecondaryColor3bEXT" */,
d34039 2
a34040 2
        42194 /* "glSecondaryColor3bv" */,
        42214 /* "glSecondaryColor3bvEXT" */,
d34042 1
a34042 1
    return gl_provider_resolver(entrypoint_strings + 42194 /* "glSecondaryColor3bv" */,
d34055 2
a34056 2
        42214 /* "glSecondaryColor3bvEXT" */,
        42194 /* "glSecondaryColor3bv" */,
d34058 1
a34058 1
    return gl_provider_resolver(entrypoint_strings + 42214 /* "glSecondaryColor3bvEXT" */,
d34071 2
a34072 2
        42237 /* "glSecondaryColor3d" */,
        42256 /* "glSecondaryColor3dEXT" */,
d34074 1
a34074 1
    return gl_provider_resolver(entrypoint_strings + 42237 /* "glSecondaryColor3d" */,
d34087 2
a34088 2
        42256 /* "glSecondaryColor3dEXT" */,
        42237 /* "glSecondaryColor3d" */,
d34090 1
a34090 1
    return gl_provider_resolver(entrypoint_strings + 42256 /* "glSecondaryColor3dEXT" */,
d34103 2
a34104 2
        42278 /* "glSecondaryColor3dv" */,
        42298 /* "glSecondaryColor3dvEXT" */,
d34106 1
a34106 1
    return gl_provider_resolver(entrypoint_strings + 42278 /* "glSecondaryColor3dv" */,
d34119 2
a34120 2
        42298 /* "glSecondaryColor3dvEXT" */,
        42278 /* "glSecondaryColor3dv" */,
d34122 1
a34122 1
    return gl_provider_resolver(entrypoint_strings + 42298 /* "glSecondaryColor3dvEXT" */,
d34135 2
a34136 2
        42321 /* "glSecondaryColor3f" */,
        42340 /* "glSecondaryColor3fEXT" */,
d34138 1
a34138 1
    return gl_provider_resolver(entrypoint_strings + 42321 /* "glSecondaryColor3f" */,
d34151 2
a34152 2
        42340 /* "glSecondaryColor3fEXT" */,
        42321 /* "glSecondaryColor3f" */,
d34154 1
a34154 1
    return gl_provider_resolver(entrypoint_strings + 42340 /* "glSecondaryColor3fEXT" */,
d34167 2
a34168 2
        42362 /* "glSecondaryColor3fv" */,
        42382 /* "glSecondaryColor3fvEXT" */,
d34170 1
a34170 1
    return gl_provider_resolver(entrypoint_strings + 42362 /* "glSecondaryColor3fv" */,
d34183 2
a34184 2
        42382 /* "glSecondaryColor3fvEXT" */,
        42362 /* "glSecondaryColor3fv" */,
d34186 1
a34186 1
    return gl_provider_resolver(entrypoint_strings + 42382 /* "glSecondaryColor3fvEXT" */,
d34193 1
a34193 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 42405 /* glSecondaryColor3hNV */);
d34199 1
a34199 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 42426 /* glSecondaryColor3hvNV */);
d34211 2
a34212 2
        42448 /* "glSecondaryColor3i" */,
        42467 /* "glSecondaryColor3iEXT" */,
d34214 1
a34214 1
    return gl_provider_resolver(entrypoint_strings + 42448 /* "glSecondaryColor3i" */,
d34227 2
a34228 2
        42467 /* "glSecondaryColor3iEXT" */,
        42448 /* "glSecondaryColor3i" */,
d34230 1
a34230 1
    return gl_provider_resolver(entrypoint_strings + 42467 /* "glSecondaryColor3iEXT" */,
d34243 2
a34244 2
        42489 /* "glSecondaryColor3iv" */,
        42509 /* "glSecondaryColor3ivEXT" */,
d34246 1
a34246 1
    return gl_provider_resolver(entrypoint_strings + 42489 /* "glSecondaryColor3iv" */,
d34259 2
a34260 2
        42509 /* "glSecondaryColor3ivEXT" */,
        42489 /* "glSecondaryColor3iv" */,
d34262 1
a34262 1
    return gl_provider_resolver(entrypoint_strings + 42509 /* "glSecondaryColor3ivEXT" */,
d34275 2
a34276 2
        42532 /* "glSecondaryColor3s" */,
        42551 /* "glSecondaryColor3sEXT" */,
d34278 1
a34278 1
    return gl_provider_resolver(entrypoint_strings + 42532 /* "glSecondaryColor3s" */,
d34291 2
a34292 2
        42551 /* "glSecondaryColor3sEXT" */,
        42532 /* "glSecondaryColor3s" */,
d34294 1
a34294 1
    return gl_provider_resolver(entrypoint_strings + 42551 /* "glSecondaryColor3sEXT" */,
d34307 2
a34308 2
        42573 /* "glSecondaryColor3sv" */,
        42593 /* "glSecondaryColor3svEXT" */,
d34310 1
a34310 1
    return gl_provider_resolver(entrypoint_strings + 42573 /* "glSecondaryColor3sv" */,
d34323 2
a34324 2
        42593 /* "glSecondaryColor3svEXT" */,
        42573 /* "glSecondaryColor3sv" */,
d34326 1
a34326 1
    return gl_provider_resolver(entrypoint_strings + 42593 /* "glSecondaryColor3svEXT" */,
d34339 2
a34340 2
        42616 /* "glSecondaryColor3ub" */,
        42636 /* "glSecondaryColor3ubEXT" */,
d34342 1
a34342 1
    return gl_provider_resolver(entrypoint_strings + 42616 /* "glSecondaryColor3ub" */,
d34355 2
a34356 2
        42636 /* "glSecondaryColor3ubEXT" */,
        42616 /* "glSecondaryColor3ub" */,
d34358 1
a34358 1
    return gl_provider_resolver(entrypoint_strings + 42636 /* "glSecondaryColor3ubEXT" */,
d34371 2
a34372 2
        42659 /* "glSecondaryColor3ubv" */,
        42680 /* "glSecondaryColor3ubvEXT" */,
d34374 1
a34374 1
    return gl_provider_resolver(entrypoint_strings + 42659 /* "glSecondaryColor3ubv" */,
d34387 2
a34388 2
        42680 /* "glSecondaryColor3ubvEXT" */,
        42659 /* "glSecondaryColor3ubv" */,
d34390 1
a34390 1
    return gl_provider_resolver(entrypoint_strings + 42680 /* "glSecondaryColor3ubvEXT" */,
d34403 2
a34404 2
        42704 /* "glSecondaryColor3ui" */,
        42724 /* "glSecondaryColor3uiEXT" */,
d34406 1
a34406 1
    return gl_provider_resolver(entrypoint_strings + 42704 /* "glSecondaryColor3ui" */,
d34419 2
a34420 2
        42724 /* "glSecondaryColor3uiEXT" */,
        42704 /* "glSecondaryColor3ui" */,
d34422 1
a34422 1
    return gl_provider_resolver(entrypoint_strings + 42724 /* "glSecondaryColor3uiEXT" */,
d34435 2
a34436 2
        42747 /* "glSecondaryColor3uiv" */,
        42768 /* "glSecondaryColor3uivEXT" */,
d34438 1
a34438 1
    return gl_provider_resolver(entrypoint_strings + 42747 /* "glSecondaryColor3uiv" */,
d34451 2
a34452 2
        42768 /* "glSecondaryColor3uivEXT" */,
        42747 /* "glSecondaryColor3uiv" */,
d34454 1
a34454 1
    return gl_provider_resolver(entrypoint_strings + 42768 /* "glSecondaryColor3uivEXT" */,
d34467 2
a34468 2
        42792 /* "glSecondaryColor3us" */,
        42812 /* "glSecondaryColor3usEXT" */,
d34470 1
a34470 1
    return gl_provider_resolver(entrypoint_strings + 42792 /* "glSecondaryColor3us" */,
d34483 2
a34484 2
        42812 /* "glSecondaryColor3usEXT" */,
        42792 /* "glSecondaryColor3us" */,
d34486 1
a34486 1
    return gl_provider_resolver(entrypoint_strings + 42812 /* "glSecondaryColor3usEXT" */,
d34499 2
a34500 2
        42835 /* "glSecondaryColor3usv" */,
        42856 /* "glSecondaryColor3usvEXT" */,
d34502 1
a34502 1
    return gl_provider_resolver(entrypoint_strings + 42835 /* "glSecondaryColor3usv" */,
d34515 2
a34516 2
        42856 /* "glSecondaryColor3usvEXT" */,
        42835 /* "glSecondaryColor3usv" */,
d34518 1
a34518 1
    return gl_provider_resolver(entrypoint_strings + 42856 /* "glSecondaryColor3usvEXT" */,
d34525 1
a34525 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 42880 /* glSecondaryColorFormatNV */);
d34532 1
a34533 1
        Desktop_OpenGL_3_3,
d34537 2
a34538 2
        42905 /* "glSecondaryColorP3ui" */,
        42905 /* "glSecondaryColorP3ui" */,
d34540 1
a34540 1
    return gl_provider_resolver(entrypoint_strings + 42905 /* "glSecondaryColorP3ui" */,
d34548 1
a34549 1
        Desktop_OpenGL_3_3,
d34553 2
a34554 2
        42926 /* "glSecondaryColorP3uiv" */,
        42926 /* "glSecondaryColorP3uiv" */,
d34556 1
a34556 1
    return gl_provider_resolver(entrypoint_strings + 42926 /* "glSecondaryColorP3uiv" */,
d34569 2
a34570 2
        42948 /* "glSecondaryColorPointer" */,
        42972 /* "glSecondaryColorPointerEXT" */,
d34572 1
a34572 1
    return gl_provider_resolver(entrypoint_strings + 42948 /* "glSecondaryColorPointer" */,
d34585 2
a34586 2
        42972 /* "glSecondaryColorPointerEXT" */,
        42948 /* "glSecondaryColorPointer" */,
d34588 1
a34588 1
    return gl_provider_resolver(entrypoint_strings + 42972 /* "glSecondaryColorPointerEXT" */,
d34595 1
a34595 1
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 42999 /* glSecondaryColorPointerListIBM */);
d34601 1
a34601 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 43030 /* glSelectBuffer */);
d34607 1
a34607 1
    return gl_single_resolver(GL_extension_GL_AMD_performance_monitor, 43045 /* glSelectPerfMonitorCountersAMD */);
d34619 2
a34620 2
        43076 /* "glSeparableFilter2D" */,
        43096 /* "glSeparableFilter2DEXT" */,
d34622 1
a34622 1
    return gl_provider_resolver(entrypoint_strings + 43076 /* "glSeparableFilter2D" */,
d34635 2
a34636 2
        43096 /* "glSeparableFilter2DEXT" */,
        43076 /* "glSeparableFilter2D" */,
d34638 1
a34638 1
    return gl_provider_resolver(entrypoint_strings + 43096 /* "glSeparableFilter2DEXT" */,
d34645 1
a34645 1
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 43119 /* glSetFenceAPPLE */);
d34651 1
a34651 1
    return gl_single_resolver(GL_extension_GL_NV_fence, 43135 /* glSetFenceNV */);
d34657 1
a34657 1
    return gl_single_resolver(GL_extension_GL_ATI_fragment_shader, 43148 /* glSetFragmentShaderConstantATI */);
d34663 1
a34663 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 43179 /* glSetInvariantEXT */);
d34669 1
a34669 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 43197 /* glSetLocalConstantEXT */);
d34675 1
a34675 1
    return gl_single_resolver(GL_extension_GL_AMD_sample_positions, 43219 /* glSetMultisamplefvAMD */);
d34687 2
a34688 2
        43241 /* "glShadeModel" */,
        43241 /* "glShadeModel" */,
d34690 1
a34690 1
    return gl_provider_resolver(entrypoint_strings + 43241 /* "glShadeModel" */,
d34704 3
a34706 3
        43254 /* "glShaderBinary" */,
        43254 /* "glShaderBinary" */,
        43254 /* "glShaderBinary" */,
d34708 1
a34708 1
    return gl_provider_resolver(entrypoint_strings + 43254 /* "glShaderBinary" */,
d34715 1
a34715 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 43269 /* glShaderOp1EXT */);
d34721 1
a34721 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 43284 /* glShaderOp2EXT */);
d34727 1
a34727 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 43299 /* glShaderOp3EXT */);
d34734 1
a34735 1
        Desktop_OpenGL_2_0,
d34740 3
a34742 3
        43314 /* "glShaderSource" */,
        43314 /* "glShaderSource" */,
        43329 /* "glShaderSourceARB" */,
d34744 1
a34744 1
    return gl_provider_resolver(entrypoint_strings + 43314 /* "glShaderSource" */,
d34753 1
a34754 1
        Desktop_OpenGL_2_0,
d34758 3
a34760 3
        43329 /* "glShaderSourceARB" */,
        43314 /* "glShaderSource" */,
        43314 /* "glShaderSource" */,
d34762 1
a34762 1
    return gl_provider_resolver(entrypoint_strings + 43329 /* "glShaderSourceARB" */,
d34775 2
a34776 2
        43347 /* "glShaderStorageBlockBinding" */,
        43347 /* "glShaderStorageBlockBinding" */,
d34778 1
a34778 1
    return gl_provider_resolver(entrypoint_strings + 43347 /* "glShaderStorageBlockBinding" */,
d34785 1
a34785 1
    return gl_single_resolver(GL_extension_GL_SGIS_sharpen_texture, 43375 /* glSharpenTexFuncSGIS */);
d34791 1
a34791 1
    return gl_single_resolver(GL_extension_GL_SGIX_sprite, 43396 /* glSpriteParameterfSGIX */);
d34797 1
a34797 1
    return gl_single_resolver(GL_extension_GL_SGIX_sprite, 43419 /* glSpriteParameterfvSGIX */);
d34803 1
a34803 1
    return gl_single_resolver(GL_extension_GL_SGIX_sprite, 43443 /* glSpriteParameteriSGIX */);
d34809 1
a34809 1
    return gl_single_resolver(GL_extension_GL_SGIX_sprite, 43466 /* glSpriteParameterivSGIX */);
d34815 1
a34815 1
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 43490 /* glStartInstrumentsSGIX */);
d34821 7
a34827 1
    return gl_single_resolver(GL_extension_GL_QCOM_tiled_rendering, 43513 /* glStartTilingQCOM */);
d34833 1
a34833 1
    return gl_single_resolver(GL_extension_GL_EXT_stencil_clear_tag, 43531 /* glStencilClearTagEXT */);
d34839 1
a34839 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 43552 /* glStencilFillPathInstancedNV */);
d34845 1
a34845 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 43581 /* glStencilFillPathNV */);
d34858 3
a34860 3
        43601 /* "glStencilFunc" */,
        43601 /* "glStencilFunc" */,
        43601 /* "glStencilFunc" */,
d34862 1
a34862 1
    return gl_provider_resolver(entrypoint_strings + 43601 /* "glStencilFunc" */,
d34870 1
a34871 1
        Desktop_OpenGL_2_0,
d34875 2
a34876 2
        43615 /* "glStencilFuncSeparate" */,
        43615 /* "glStencilFuncSeparate" */,
d34878 1
a34878 1
    return gl_provider_resolver(entrypoint_strings + 43615 /* "glStencilFuncSeparate" */,
d34885 1
a34885 1
    return gl_single_resolver(GL_extension_GL_ATI_separate_stencil, 43637 /* glStencilFuncSeparateATI */);
d34898 3
a34900 3
        43662 /* "glStencilMask" */,
        43662 /* "glStencilMask" */,
        43662 /* "glStencilMask" */,
d34902 1
a34902 1
    return gl_provider_resolver(entrypoint_strings + 43662 /* "glStencilMask" */,
d34910 1
a34911 1
        Desktop_OpenGL_2_0,
d34915 2
a34916 2
        43676 /* "glStencilMaskSeparate" */,
        43676 /* "glStencilMaskSeparate" */,
d34918 1
a34918 1
    return gl_provider_resolver(entrypoint_strings + 43676 /* "glStencilMaskSeparate" */,
d34932 3
a34934 3
        43698 /* "glStencilOp" */,
        43698 /* "glStencilOp" */,
        43698 /* "glStencilOp" */,
d34936 1
a34936 1
    return gl_provider_resolver(entrypoint_strings + 43698 /* "glStencilOp" */,
d34944 1
a34945 1
        Desktop_OpenGL_2_0,
d34950 3
a34952 3
        43710 /* "glStencilOpSeparate" */,
        43710 /* "glStencilOpSeparate" */,
        43730 /* "glStencilOpSeparateATI" */,
d34954 1
a34954 1
    return gl_provider_resolver(entrypoint_strings + 43710 /* "glStencilOpSeparate" */,
d34963 1
a34964 1
        Desktop_OpenGL_2_0,
d34968 3
a34970 3
        43730 /* "glStencilOpSeparateATI" */,
        43710 /* "glStencilOpSeparate" */,
        43710 /* "glStencilOpSeparate" */,
d34972 1
a34972 1
    return gl_provider_resolver(entrypoint_strings + 43730 /* "glStencilOpSeparateATI" */,
d34979 1
a34979 1
    return gl_single_resolver(GL_extension_GL_AMD_stencil_operation_extended, 43753 /* glStencilOpValueAMD */);
d34985 1
a34985 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 43773 /* glStencilStrokePathInstancedNV */);
d34991 25
a35015 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 43804 /* glStencilStrokePathNV */);
d35021 1
a35021 1
    return gl_single_resolver(GL_extension_GL_SGIX_instruments, 43826 /* glStopInstrumentsSGIX */);
d35027 7
a35033 1
    return gl_single_resolver(GL_extension_GL_GREMEDY_string_marker, 43848 /* glStringMarkerGREMEDY */);
d35039 1
a35039 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 43870 /* glSwizzleEXT */);
d35045 1
a35045 1
    return gl_single_resolver(GL_extension_GL_INTEL_map_texture, 43883 /* glSyncTextureINTEL */);
d35051 1
a35051 1
    return gl_single_resolver(GL_extension_GL_SGIX_tag_sample_buffer, 43902 /* glTagSampleBufferSGIX */);
d35057 1
a35057 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 43924 /* glTangent3bEXT */);
d35063 1
a35063 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 43939 /* glTangent3bvEXT */);
d35069 1
a35069 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 43955 /* glTangent3dEXT */);
d35075 1
a35075 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 43970 /* glTangent3dvEXT */);
d35081 1
a35081 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 43986 /* glTangent3fEXT */);
d35087 1
a35087 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 44001 /* glTangent3fvEXT */);
d35093 1
a35093 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 44017 /* glTangent3iEXT */);
d35099 1
a35099 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 44032 /* glTangent3ivEXT */);
d35105 1
a35105 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 44048 /* glTangent3sEXT */);
d35111 1
a35111 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 44063 /* glTangent3svEXT */);
d35117 1
a35117 1
    return gl_single_resolver(GL_extension_GL_EXT_coordinate_frame, 44079 /* glTangentPointerEXT */);
d35123 1
a35123 1
    return gl_single_resolver(GL_extension_GL_3DFX_tbuffer, 44099 /* glTbufferMask3DFX */);
d35129 1
a35129 1
    return gl_single_resolver(GL_extension_GL_AMD_vertex_shader_tessellator, 44117 /* glTessellationFactorAMD */);
d35135 1
a35135 1
    return gl_single_resolver(GL_extension_GL_AMD_vertex_shader_tessellator, 44141 /* glTessellationModeAMD */);
d35141 1
a35141 1
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 44163 /* glTestFenceAPPLE */);
d35147 1
a35147 1
    return gl_single_resolver(GL_extension_GL_NV_fence, 44180 /* glTestFenceNV */);
d35153 1
a35153 1
    return gl_single_resolver(GL_extension_GL_APPLE_fence, 44194 /* glTestObjectAPPLE */);
d35162 1
d35164 1
d35168 5
a35172 3
        44212 /* "glTexBuffer" */,
        44224 /* "glTexBufferARB" */,
        44239 /* "glTexBufferEXT" */,
d35174 1
a35174 1
    return gl_provider_resolver(entrypoint_strings + 44212 /* "glTexBuffer" */,
d35184 1
d35186 1
d35190 5
a35194 3
        44224 /* "glTexBufferARB" */,
        44212 /* "glTexBuffer" */,
        44239 /* "glTexBufferEXT" */,
d35196 1
a35196 1
    return gl_provider_resolver(entrypoint_strings + 44224 /* "glTexBufferARB" */,
d35204 1
d35208 23
d35234 5
a35238 3
        44239 /* "glTexBufferEXT" */,
        44212 /* "glTexBuffer" */,
        44224 /* "glTexBufferARB" */,
d35240 1
a35240 1
    return gl_provider_resolver(entrypoint_strings + 44239 /* "glTexBufferEXT" */,
d35250 42
d35295 4
a35298 2
        44254 /* "glTexBufferRange" */,
        44254 /* "glTexBufferRange" */,
d35300 1
a35300 1
    return gl_provider_resolver(entrypoint_strings + 44254 /* "glTexBufferRange" */,
d35307 1
a35307 1
    return gl_single_resolver(GL_extension_GL_ATI_envmap_bumpmap, 44271 /* glTexBumpParameterfvATI */);
d35313 1
a35313 1
    return gl_single_resolver(GL_extension_GL_ATI_envmap_bumpmap, 44295 /* glTexBumpParameterivATI */);
d35319 1
a35319 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 44319 /* glTexCoord1bOES */);
d35325 1
a35325 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 44335 /* glTexCoord1bvOES */);
d35331 1
a35331 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44352 /* glTexCoord1d */);
d35337 1
a35337 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44365 /* glTexCoord1dv */);
d35343 1
a35343 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44379 /* glTexCoord1f */);
d35349 1
a35349 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44392 /* glTexCoord1fv */);
d35355 1
a35355 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 44406 /* glTexCoord1hNV */);
d35361 1
a35361 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 44421 /* glTexCoord1hvNV */);
d35367 1
a35367 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44437 /* glTexCoord1i */);
d35373 1
a35373 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44450 /* glTexCoord1iv */);
d35379 1
a35379 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44464 /* glTexCoord1s */);
d35385 1
a35385 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44477 /* glTexCoord1sv */);
d35391 1
a35391 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44491 /* glTexCoord1xOES */);
d35397 1
a35397 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 44507 /* glTexCoord1xvOES */);
d35403 1
a35403 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 44524 /* glTexCoord2bOES */);
d35409 1
a35409 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 44540 /* glTexCoord2bvOES */);
d35415 1
a35415 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44557 /* glTexCoord2d */);
d35421 1
a35421 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44570 /* glTexCoord2dv */);
d35427 1
a35427 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44584 /* glTexCoord2f */);
d35433 1
a35433 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44597 /* glTexCoord2fColor3fVertex3fSUN */);
d35439 1
a35439 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44628 /* glTexCoord2fColor3fVertex3fvSUN */);
d35445 1
a35445 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44660 /* glTexCoord2fColor4fNormal3fVertex3fSUN */);
d35451 1
a35451 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44699 /* glTexCoord2fColor4fNormal3fVertex3fvSUN */);
d35457 1
a35457 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44739 /* glTexCoord2fColor4ubVertex3fSUN */);
d35463 1
a35463 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44771 /* glTexCoord2fColor4ubVertex3fvSUN */);
d35469 1
a35469 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44804 /* glTexCoord2fNormal3fVertex3fSUN */);
d35475 1
a35475 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44836 /* glTexCoord2fNormal3fVertex3fvSUN */);
d35481 1
a35481 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44869 /* glTexCoord2fVertex3fSUN */);
d35487 1
a35487 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 44893 /* glTexCoord2fVertex3fvSUN */);
d35493 1
a35493 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44918 /* glTexCoord2fv */);
d35499 1
a35499 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 44932 /* glTexCoord2hNV */);
d35505 1
a35505 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 44947 /* glTexCoord2hvNV */);
d35511 1
a35511 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44963 /* glTexCoord2i */);
d35517 1
a35517 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44976 /* glTexCoord2iv */);
d35523 1
a35523 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 44990 /* glTexCoord2s */);
d35529 1
a35529 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45003 /* glTexCoord2sv */);
d35535 1
a35535 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 45017 /* glTexCoord2xOES */);
d35541 1
a35541 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 45033 /* glTexCoord2xvOES */);
d35547 1
a35547 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 45050 /* glTexCoord3bOES */);
d35553 1
a35553 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 45066 /* glTexCoord3bvOES */);
d35559 1
a35559 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45083 /* glTexCoord3d */);
d35565 1
a35565 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45096 /* glTexCoord3dv */);
d35571 1
a35571 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45110 /* glTexCoord3f */);
d35577 1
a35577 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45123 /* glTexCoord3fv */);
d35583 1
a35583 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 45137 /* glTexCoord3hNV */);
d35589 1
a35589 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 45152 /* glTexCoord3hvNV */);
d35595 1
a35595 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45168 /* glTexCoord3i */);
d35601 1
a35601 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45181 /* glTexCoord3iv */);
d35607 1
a35607 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45195 /* glTexCoord3s */);
d35613 1
a35613 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45208 /* glTexCoord3sv */);
d35619 1
a35619 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 45222 /* glTexCoord3xOES */);
d35625 1
a35625 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 45238 /* glTexCoord3xvOES */);
d35631 1
a35631 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 45255 /* glTexCoord4bOES */);
d35637 1
a35637 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 45271 /* glTexCoord4bvOES */);
d35643 1
a35643 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45288 /* glTexCoord4d */);
d35649 1
a35649 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45301 /* glTexCoord4dv */);
d35655 1
a35655 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45315 /* glTexCoord4f */);
d35661 1
a35661 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45328 /* glTexCoord4fColor4fNormal3fVertex4fSUN */);
d35667 1
a35667 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45367 /* glTexCoord4fColor4fNormal3fVertex4fvSUN */);
d35673 1
a35673 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45407 /* glTexCoord4fVertex4fSUN */);
d35679 1
a35679 1
    return gl_single_resolver(GL_extension_GL_SUN_vertex, 45431 /* glTexCoord4fVertex4fvSUN */);
d35685 1
a35685 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45456 /* glTexCoord4fv */);
d35691 1
a35691 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 45470 /* glTexCoord4hNV */);
d35697 1
a35697 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 45485 /* glTexCoord4hvNV */);
d35703 1
a35703 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45501 /* glTexCoord4i */);
d35709 1
a35709 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45514 /* glTexCoord4iv */);
d35715 1
a35715 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45528 /* glTexCoord4s */);
d35721 1
a35721 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45541 /* glTexCoord4sv */);
d35727 1
a35727 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 45555 /* glTexCoord4xOES */);
d35733 1
a35733 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 45571 /* glTexCoord4xvOES */);
d35739 1
a35739 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 45588 /* glTexCoordFormatNV */);
d35746 1
a35747 1
        Desktop_OpenGL_3_3,
d35751 2
a35752 2
        45607 /* "glTexCoordP1ui" */,
        45607 /* "glTexCoordP1ui" */,
d35754 1
a35754 1
    return gl_provider_resolver(entrypoint_strings + 45607 /* "glTexCoordP1ui" */,
d35762 1
a35763 1
        Desktop_OpenGL_3_3,
d35767 2
a35768 2
        45622 /* "glTexCoordP1uiv" */,
        45622 /* "glTexCoordP1uiv" */,
d35770 1
a35770 1
    return gl_provider_resolver(entrypoint_strings + 45622 /* "glTexCoordP1uiv" */,
d35778 1
a35779 1
        Desktop_OpenGL_3_3,
d35783 2
a35784 2
        45638 /* "glTexCoordP2ui" */,
        45638 /* "glTexCoordP2ui" */,
d35786 1
a35786 1
    return gl_provider_resolver(entrypoint_strings + 45638 /* "glTexCoordP2ui" */,
d35794 1
a35795 1
        Desktop_OpenGL_3_3,
d35799 2
a35800 2
        45653 /* "glTexCoordP2uiv" */,
        45653 /* "glTexCoordP2uiv" */,
d35802 1
a35802 1
    return gl_provider_resolver(entrypoint_strings + 45653 /* "glTexCoordP2uiv" */,
d35810 1
a35811 1
        Desktop_OpenGL_3_3,
d35815 2
a35816 2
        45669 /* "glTexCoordP3ui" */,
        45669 /* "glTexCoordP3ui" */,
d35818 1
a35818 1
    return gl_provider_resolver(entrypoint_strings + 45669 /* "glTexCoordP3ui" */,
d35826 1
a35827 1
        Desktop_OpenGL_3_3,
d35831 2
a35832 2
        45684 /* "glTexCoordP3uiv" */,
        45684 /* "glTexCoordP3uiv" */,
d35834 1
a35834 1
    return gl_provider_resolver(entrypoint_strings + 45684 /* "glTexCoordP3uiv" */,
d35842 1
a35843 1
        Desktop_OpenGL_3_3,
d35847 2
a35848 2
        45700 /* "glTexCoordP4ui" */,
        45700 /* "glTexCoordP4ui" */,
d35850 1
a35850 1
    return gl_provider_resolver(entrypoint_strings + 45700 /* "glTexCoordP4ui" */,
d35858 1
a35859 1
        Desktop_OpenGL_3_3,
d35863 2
a35864 2
        45715 /* "glTexCoordP4uiv" */,
        45715 /* "glTexCoordP4uiv" */,
d35866 1
a35866 1
    return gl_provider_resolver(entrypoint_strings + 45715 /* "glTexCoordP4uiv" */,
d35879 2
a35880 2
        45731 /* "glTexCoordPointer" */,
        45731 /* "glTexCoordPointer" */,
d35882 1
a35882 1
    return gl_provider_resolver(entrypoint_strings + 45731 /* "glTexCoordPointer" */,
d35889 1
a35889 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 45749 /* glTexCoordPointerEXT */);
d35895 1
a35895 1
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 45770 /* glTexCoordPointerListIBM */);
d35901 1
a35901 1
    return gl_single_resolver(GL_extension_GL_INTEL_parallel_arrays, 45795 /* glTexCoordPointervINTEL */);
d35913 2
a35914 2
        45819 /* "glTexEnvf" */,
        45819 /* "glTexEnvf" */,
d35916 1
a35916 1
    return gl_provider_resolver(entrypoint_strings + 45819 /* "glTexEnvf" */,
d35929 2
a35930 2
        45829 /* "glTexEnvfv" */,
        45829 /* "glTexEnvfv" */,
d35932 1
a35932 1
    return gl_provider_resolver(entrypoint_strings + 45829 /* "glTexEnvfv" */,
d35945 2
a35946 2
        45840 /* "glTexEnvi" */,
        45840 /* "glTexEnvi" */,
d35948 1
a35948 1
    return gl_provider_resolver(entrypoint_strings + 45840 /* "glTexEnvi" */,
d35961 2
a35962 2
        45850 /* "glTexEnviv" */,
        45850 /* "glTexEnviv" */,
d35964 1
a35964 1
    return gl_provider_resolver(entrypoint_strings + 45850 /* "glTexEnviv" */,
d35971 1
a35971 1
    return gl_single_resolver(OpenGL_ES_1_0, 45861 /* glTexEnvx */);
d35977 1
a35977 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 45871 /* glTexEnvxOES */);
d35983 1
a35983 1
    return gl_single_resolver(OpenGL_ES_1_0, 45884 /* glTexEnvxv */);
d35989 1
a35989 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 45895 /* glTexEnvxvOES */);
d35995 1
a35995 1
    return gl_single_resolver(GL_extension_GL_SGIS_texture_filter4, 45909 /* glTexFilterFuncSGIS */);
d36001 1
a36001 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45929 /* glTexGend */);
d36007 1
a36007 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45939 /* glTexGendv */);
d36013 1
a36013 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45950 /* glTexGenf */);
d36019 1
a36019 1
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 45960 /* glTexGenfOES */);
d36025 1
a36025 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45973 /* glTexGenfv */);
d36031 1
a36031 1
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 45984 /* glTexGenfvOES */);
d36037 1
a36037 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 45998 /* glTexGeni */);
d36043 1
a36043 1
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 46008 /* glTexGeniOES */);
d36049 1
a36049 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 46021 /* glTexGeniv */);
d36055 1
a36055 1
    return gl_single_resolver(GL_extension_GL_OES_texture_cube_map, 46032 /* glTexGenivOES */);
d36062 1
a36063 1
        GL_extension_GL_OES_fixed_point,
d36067 2
a36068 2
        46046 /* "glTexGenxOES" */,
        46046 /* "glTexGenxOES" */,
d36070 1
a36070 1
    return gl_provider_resolver(entrypoint_strings + 46046 /* "glTexGenxOES" */,
d36078 1
a36079 1
        GL_extension_GL_OES_fixed_point,
d36083 2
a36084 2
        46059 /* "glTexGenxvOES" */,
        46059 /* "glTexGenxvOES" */,
d36086 1
a36086 1
    return gl_provider_resolver(entrypoint_strings + 46059 /* "glTexGenxvOES" */,
d36093 1
a36093 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 46073 /* glTexImage1D */);
d36106 3
a36108 3
        46086 /* "glTexImage2D" */,
        46086 /* "glTexImage2D" */,
        46086 /* "glTexImage2D" */,
d36110 1
a36110 1
    return gl_provider_resolver(entrypoint_strings + 46086 /* "glTexImage2D" */,
d36123 2
a36124 2
        46099 /* "glTexImage2DMultisample" */,
        46099 /* "glTexImage2DMultisample" */,
d36126 1
a36126 1
    return gl_provider_resolver(entrypoint_strings + 46099 /* "glTexImage2DMultisample" */,
d36133 1
a36133 1
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 46123 /* glTexImage2DMultisampleCoverageNV */);
d36147 4
a36150 4
        46157 /* "glTexImage3D" */,
        46157 /* "glTexImage3D" */,
        46170 /* "glTexImage3DEXT" */,
        46244 /* "glTexImage3DOES" */,
d36152 1
a36152 1
    return gl_provider_resolver(entrypoint_strings + 46157 /* "glTexImage3D" */,
d36167 4
a36170 4
        46170 /* "glTexImage3DEXT" */,
        46157 /* "glTexImage3D" */,
        46157 /* "glTexImage3D" */,
        46244 /* "glTexImage3DOES" */,
d36172 1
a36172 1
    return gl_provider_resolver(entrypoint_strings + 46170 /* "glTexImage3DEXT" */,
d36185 2
a36186 2
        46186 /* "glTexImage3DMultisample" */,
        46186 /* "glTexImage3DMultisample" */,
d36188 1
a36188 1
    return gl_provider_resolver(entrypoint_strings + 46186 /* "glTexImage3DMultisample" */,
d36195 1
a36195 1
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 46210 /* glTexImage3DMultisampleCoverageNV */);
d36209 4
a36212 4
        46244 /* "glTexImage3DOES" */,
        46157 /* "glTexImage3D" */,
        46157 /* "glTexImage3D" */,
        46170 /* "glTexImage3DEXT" */,
d36214 1
a36214 1
    return gl_provider_resolver(entrypoint_strings + 46244 /* "glTexImage3DOES" */,
d36221 1
a36221 1
    return gl_single_resolver(GL_extension_GL_SGIS_texture4D, 46260 /* glTexImage4DSGIS */);
d36227 27
a36253 1
    return gl_single_resolver(GL_extension_GL_ARB_sparse_texture, 46277 /* glTexPageCommitmentARB */);
d36261 1
d36263 1
d36267 4
a36270 2
        46300 /* "glTexParameterIiv" */,
        46318 /* "glTexParameterIivEXT" */,
d36272 1
a36272 1
    return gl_provider_resolver(entrypoint_strings + 46300 /* "glTexParameterIiv" */,
d36280 1
d36283 21
d36307 4
a36310 2
        46318 /* "glTexParameterIivEXT" */,
        46300 /* "glTexParameterIiv" */,
d36312 1
a36312 1
    return gl_provider_resolver(entrypoint_strings + 46318 /* "glTexParameterIivEXT" */,
d36321 1
d36323 1
d36327 4
a36330 2
        46339 /* "glTexParameterIuiv" */,
        46358 /* "glTexParameterIuivEXT" */,
d36332 1
a36332 1
    return gl_provider_resolver(entrypoint_strings + 46339 /* "glTexParameterIuiv" */,
d36340 1
d36343 21
d36367 4
a36370 2
        46358 /* "glTexParameterIuivEXT" */,
        46339 /* "glTexParameterIuiv" */,
d36372 1
a36372 1
    return gl_provider_resolver(entrypoint_strings + 46358 /* "glTexParameterIuivEXT" */,
d36386 3
a36388 3
        46380 /* "glTexParameterf" */,
        46380 /* "glTexParameterf" */,
        46380 /* "glTexParameterf" */,
d36390 1
a36390 1
    return gl_provider_resolver(entrypoint_strings + 46380 /* "glTexParameterf" */,
d36404 3
a36406 3
        46396 /* "glTexParameterfv" */,
        46396 /* "glTexParameterfv" */,
        46396 /* "glTexParameterfv" */,
d36408 1
a36408 1
    return gl_provider_resolver(entrypoint_strings + 46396 /* "glTexParameterfv" */,
d36422 3
a36424 3
        46413 /* "glTexParameteri" */,
        46413 /* "glTexParameteri" */,
        46413 /* "glTexParameteri" */,
d36426 1
a36426 1
    return gl_provider_resolver(entrypoint_strings + 46413 /* "glTexParameteri" */,
d36440 3
a36442 3
        46429 /* "glTexParameteriv" */,
        46429 /* "glTexParameteriv" */,
        46429 /* "glTexParameteriv" */,
d36444 1
a36444 1
    return gl_provider_resolver(entrypoint_strings + 46429 /* "glTexParameteriv" */,
d36451 1
a36451 1
    return gl_single_resolver(OpenGL_ES_1_0, 46446 /* glTexParameterx */);
d36457 1
a36457 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 46462 /* glTexParameterxOES */);
d36463 1
a36463 1
    return gl_single_resolver(OpenGL_ES_1_0, 46481 /* glTexParameterxv */);
d36469 1
a36469 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 46498 /* glTexParameterxvOES */);
d36475 1
a36475 1
    return gl_single_resolver(GL_extension_GL_NV_explicit_multisample, 46518 /* glTexRenderbufferNV */);
d36488 3
a36490 3
        46538 /* "glTexStorage1D" */,
        46538 /* "glTexStorage1D" */,
        46553 /* "glTexStorage1DEXT" */,
d36492 1
a36492 1
    return gl_provider_resolver(entrypoint_strings + 46538 /* "glTexStorage1D" */,
d36506 3
a36508 3
        46553 /* "glTexStorage1DEXT" */,
        46538 /* "glTexStorage1D" */,
        46538 /* "glTexStorage1D" */,
d36510 1
a36510 1
    return gl_provider_resolver(entrypoint_strings + 46553 /* "glTexStorage1DEXT" */,
d36519 1
a36520 1
        GL_extension_GL_ARB_texture_storage,
d36525 4
a36528 4
        46571 /* "glTexStorage2D" */,
        46571 /* "glTexStorage2D" */,
        46571 /* "glTexStorage2D" */,
        46586 /* "glTexStorage2DEXT" */,
d36530 1
a36530 1
    return gl_provider_resolver(entrypoint_strings + 46571 /* "glTexStorage2D" */,
d36540 1
a36541 1
        GL_extension_GL_ARB_texture_storage,
d36545 4
a36548 4
        46586 /* "glTexStorage2DEXT" */,
        46571 /* "glTexStorage2D" */,
        46571 /* "glTexStorage2D" */,
        46571 /* "glTexStorage2D" */,
d36550 1
a36550 1
    return gl_provider_resolver(entrypoint_strings + 46586 /* "glTexStorage2DEXT" */,
d36558 1
a36559 1
        Desktop_OpenGL_4_3,
d36564 3
a36566 3
        46604 /* "glTexStorage2DMultisample" */,
        46604 /* "glTexStorage2DMultisample" */,
        46604 /* "glTexStorage2DMultisample" */,
d36568 1
a36568 1
    return gl_provider_resolver(entrypoint_strings + 46604 /* "glTexStorage2DMultisample" */,
d36577 1
a36578 1
        GL_extension_GL_ARB_texture_storage,
d36583 4
a36586 4
        46630 /* "glTexStorage3D" */,
        46630 /* "glTexStorage3D" */,
        46630 /* "glTexStorage3D" */,
        46645 /* "glTexStorage3DEXT" */,
d36588 1
a36588 1
    return gl_provider_resolver(entrypoint_strings + 46630 /* "glTexStorage3D" */,
d36598 1
a36599 1
        GL_extension_GL_ARB_texture_storage,
d36603 4
a36606 4
        46645 /* "glTexStorage3DEXT" */,
        46630 /* "glTexStorage3D" */,
        46630 /* "glTexStorage3D" */,
        46630 /* "glTexStorage3D" */,
d36608 1
a36608 1
    return gl_provider_resolver(entrypoint_strings + 46645 /* "glTexStorage3DEXT" */,
d36622 3
a36624 3
        46663 /* "glTexStorage3DMultisample" */,
        46663 /* "glTexStorage3DMultisample" */,
        46689 /* "glTexStorage3DMultisampleOES" */,
d36626 1
a36626 1
    return gl_provider_resolver(entrypoint_strings + 46663 /* "glTexStorage3DMultisample" */,
d36640 3
a36642 3
        46689 /* "glTexStorage3DMultisampleOES" */,
        46663 /* "glTexStorage3DMultisample" */,
        46663 /* "glTexStorage3DMultisample" */,
d36644 1
a36644 1
    return gl_provider_resolver(entrypoint_strings + 46689 /* "glTexStorage3DMultisampleOES" */,
d36651 1
a36651 1
    return gl_single_resolver(GL_extension_GL_AMD_sparse_texture, 46718 /* glTexStorageSparseAMD */);
d36663 2
a36664 2
        46740 /* "glTexSubImage1D" */,
        46756 /* "glTexSubImage1DEXT" */,
d36666 1
a36666 1
    return gl_provider_resolver(entrypoint_strings + 46740 /* "glTexSubImage1D" */,
d36679 2
a36680 2
        46756 /* "glTexSubImage1DEXT" */,
        46740 /* "glTexSubImage1D" */,
d36682 1
a36682 1
    return gl_provider_resolver(entrypoint_strings + 46756 /* "glTexSubImage1DEXT" */,
d36691 1
a36692 1
        OpenGL_ES_1_0,
d36697 4
a36700 4
        46775 /* "glTexSubImage2D" */,
        46775 /* "glTexSubImage2D" */,
        46775 /* "glTexSubImage2D" */,
        46791 /* "glTexSubImage2DEXT" */,
d36702 1
a36702 1
    return gl_provider_resolver(entrypoint_strings + 46775 /* "glTexSubImage2D" */,
d36712 1
a36713 1
        OpenGL_ES_1_0,
d36717 4
a36720 4
        46791 /* "glTexSubImage2DEXT" */,
        46775 /* "glTexSubImage2D" */,
        46775 /* "glTexSubImage2D" */,
        46775 /* "glTexSubImage2D" */,
d36722 1
a36722 1
    return gl_provider_resolver(entrypoint_strings + 46791 /* "glTexSubImage2DEXT" */,
d36737 4
a36740 4
        46810 /* "glTexSubImage3D" */,
        46810 /* "glTexSubImage3D" */,
        46826 /* "glTexSubImage3DEXT" */,
        46845 /* "glTexSubImage3DOES" */,
d36742 1
a36742 1
    return gl_provider_resolver(entrypoint_strings + 46810 /* "glTexSubImage3D" */,
d36757 4
a36760 4
        46826 /* "glTexSubImage3DEXT" */,
        46810 /* "glTexSubImage3D" */,
        46810 /* "glTexSubImage3D" */,
        46845 /* "glTexSubImage3DOES" */,
d36762 1
a36762 1
    return gl_provider_resolver(entrypoint_strings + 46826 /* "glTexSubImage3DEXT" */,
d36777 4
a36780 4
        46845 /* "glTexSubImage3DOES" */,
        46810 /* "glTexSubImage3D" */,
        46810 /* "glTexSubImage3D" */,
        46826 /* "glTexSubImage3DEXT" */,
d36782 1
a36782 1
    return gl_provider_resolver(entrypoint_strings + 46845 /* "glTexSubImage3DOES" */,
d36789 17
a36805 1
    return gl_single_resolver(GL_extension_GL_SGIS_texture4D, 46864 /* glTexSubImage4DSGIS */);
d36811 17
a36827 1
    return gl_single_resolver(GL_extension_GL_NV_texture_barrier, 46884 /* glTextureBarrierNV */);
d36833 17
a36849 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 46903 /* glTextureBufferEXT */);
d36855 1
a36855 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 46922 /* glTextureBufferRangeEXT */);
d36861 1
a36861 1
    return gl_single_resolver(GL_extension_GL_SGIS_texture_color_mask, 46946 /* glTextureColorMaskSGIS */);
d36867 1
a36867 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 46969 /* glTextureImage1DEXT */);
d36873 1
a36873 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 46989 /* glTextureImage2DEXT */);
d36879 1
a36879 1
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 47009 /* glTextureImage2DMultisampleCoverageNV */);
d36885 1
a36885 1
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 47047 /* glTextureImage2DMultisampleNV */);
d36891 1
a36891 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47077 /* glTextureImage3DEXT */);
d36897 1
a36897 1
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 47097 /* glTextureImage3DMultisampleCoverageNV */);
d36903 1
a36903 1
    return gl_single_resolver(GL_extension_GL_NV_texture_multisample, 47135 /* glTextureImage3DMultisampleNV */);
d36909 1
a36909 1
    return gl_single_resolver(GL_extension_GL_EXT_light_texture, 47165 /* glTextureLightEXT */);
d36915 1
a36915 1
    return gl_single_resolver(GL_extension_GL_EXT_light_texture, 47183 /* glTextureMaterialEXT */);
d36921 1
a36921 1
    return gl_single_resolver(GL_extension_GL_EXT_texture_perturb_normal, 47204 /* glTextureNormalEXT */);
d36927 17
a36943 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47223 /* glTexturePageCommitmentEXT */);
d36949 17
a36965 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47250 /* glTextureParameterIivEXT */);
d36971 17
a36987 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47275 /* glTextureParameterIuivEXT */);
d36993 17
a37009 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47301 /* glTextureParameterfEXT */);
d37015 17
a37031 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47324 /* glTextureParameterfvEXT */);
d37037 17
a37053 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47348 /* glTextureParameteriEXT */);
d37059 1
a37059 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47371 /* glTextureParameterivEXT */);
d37065 1
a37065 1
    return gl_single_resolver(GL_extension_GL_APPLE_texture_range, 47395 /* glTextureRangeAPPLE */);
d37071 17
a37087 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47415 /* glTextureRenderbufferEXT */);
d37099 18
a37116 2
        47440 /* "glTextureStorage1DEXT" */,
        47440 /* "glTextureStorage1DEXT" */,
d37118 1
a37118 1
    return gl_provider_resolver(entrypoint_strings + 47440 /* "glTextureStorage1DEXT" */,
d37131 18
a37148 2
        47462 /* "glTextureStorage2DEXT" */,
        47462 /* "glTextureStorage2DEXT" */,
d37150 1
a37150 1
    return gl_provider_resolver(entrypoint_strings + 47462 /* "glTextureStorage2DEXT" */,
d37157 17
a37173 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47484 /* glTextureStorage2DMultisampleEXT */);
d37185 18
a37202 2
        47517 /* "glTextureStorage3DEXT" */,
        47517 /* "glTextureStorage3DEXT" */,
d37204 1
a37204 1
    return gl_provider_resolver(entrypoint_strings + 47517 /* "glTextureStorage3DEXT" */,
d37211 1
a37211 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47539 /* glTextureStorage3DMultisampleEXT */);
d37217 17
a37233 1
    return gl_single_resolver(GL_extension_GL_AMD_sparse_texture, 47572 /* glTextureStorageSparseAMD */);
d37239 17
a37255 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47598 /* glTextureSubImage1DEXT */);
d37261 17
a37277 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47621 /* glTextureSubImage2DEXT */);
d37283 1
a37283 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 47644 /* glTextureSubImage3DEXT */);
d37292 42
d37337 4
a37340 2
        47667 /* "glTextureView" */,
        47667 /* "glTextureView" */,
d37342 1
a37342 1
    return gl_provider_resolver(entrypoint_strings + 47667 /* "glTextureView" */,
d37349 1
a37349 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 47681 /* glTrackMatrixNV */);
d37355 33
a37387 1
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 47697 /* glTransformFeedbackAttribsNV */);
d37393 1
a37393 1
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 47726 /* glTransformFeedbackStreamAttribsNV */);
d37406 3
a37408 3
        47761 /* "glTransformFeedbackVaryings" */,
        47761 /* "glTransformFeedbackVaryings" */,
        47789 /* "glTransformFeedbackVaryingsEXT" */,
d37410 1
a37410 1
    return gl_provider_resolver(entrypoint_strings + 47761 /* "glTransformFeedbackVaryings" */,
d37424 3
a37426 3
        47789 /* "glTransformFeedbackVaryingsEXT" */,
        47761 /* "glTransformFeedbackVaryings" */,
        47761 /* "glTransformFeedbackVaryings" */,
d37428 1
a37428 1
    return gl_provider_resolver(entrypoint_strings + 47789 /* "glTransformFeedbackVaryingsEXT" */,
d37435 1
a37435 1
    return gl_single_resolver(GL_extension_GL_NV_transform_feedback, 47820 /* glTransformFeedbackVaryingsNV */);
d37441 1
a37441 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 47850 /* glTransformPathNV */);
d37447 1
a37447 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 47868 /* glTranslated */);
d37459 2
a37460 2
        47881 /* "glTranslatef" */,
        47881 /* "glTranslatef" */,
d37462 1
a37462 1
    return gl_provider_resolver(entrypoint_strings + 47881 /* "glTranslatef" */,
d37469 1
a37469 1
    return gl_single_resolver(OpenGL_ES_1_0, 47894 /* glTranslatex */);
d37475 1
a37475 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 47907 /* glTranslatexOES */);
d37487 2
a37488 2
        47923 /* "glUniform1d" */,
        47923 /* "glUniform1d" */,
d37490 1
a37490 1
    return gl_provider_resolver(entrypoint_strings + 47923 /* "glUniform1d" */,
d37503 2
a37504 2
        47935 /* "glUniform1dv" */,
        47935 /* "glUniform1dv" */,
d37506 1
a37506 1
    return gl_provider_resolver(entrypoint_strings + 47935 /* "glUniform1dv" */,
d37514 1
a37515 1
        Desktop_OpenGL_2_0,
d37520 3
a37522 3
        47948 /* "glUniform1f" */,
        47948 /* "glUniform1f" */,
        47960 /* "glUniform1fARB" */,
d37524 1
a37524 1
    return gl_provider_resolver(entrypoint_strings + 47948 /* "glUniform1f" */,
d37533 1
a37534 1
        Desktop_OpenGL_2_0,
d37538 3
a37540 3
        47960 /* "glUniform1fARB" */,
        47948 /* "glUniform1f" */,
        47948 /* "glUniform1f" */,
d37542 1
a37542 1
    return gl_provider_resolver(entrypoint_strings + 47960 /* "glUniform1fARB" */,
d37550 1
a37551 1
        Desktop_OpenGL_2_0,
d37556 3
a37558 3
        47975 /* "glUniform1fv" */,
        47975 /* "glUniform1fv" */,
        47988 /* "glUniform1fvARB" */,
d37560 1
a37560 1
    return gl_provider_resolver(entrypoint_strings + 47975 /* "glUniform1fv" */,
d37569 1
a37570 1
        Desktop_OpenGL_2_0,
d37574 3
a37576 3
        47988 /* "glUniform1fvARB" */,
        47975 /* "glUniform1fv" */,
        47975 /* "glUniform1fv" */,
d37578 1
a37578 1
    return gl_provider_resolver(entrypoint_strings + 47988 /* "glUniform1fvARB" */,
d37586 1
a37587 1
        Desktop_OpenGL_2_0,
d37592 3
a37594 3
        48004 /* "glUniform1i" */,
        48004 /* "glUniform1i" */,
        48049 /* "glUniform1iARB" */,
d37596 1
a37596 1
    return gl_provider_resolver(entrypoint_strings + 48004 /* "glUniform1i" */,
d37609 2
a37610 2
        48016 /* "glUniform1i64NV" */,
        48016 /* "glUniform1i64NV" */,
d37612 1
a37612 1
    return gl_provider_resolver(entrypoint_strings + 48016 /* "glUniform1i64NV" */,
d37625 2
a37626 2
        48032 /* "glUniform1i64vNV" */,
        48032 /* "glUniform1i64vNV" */,
d37628 1
a37628 1
    return gl_provider_resolver(entrypoint_strings + 48032 /* "glUniform1i64vNV" */,
d37637 1
a37638 1
        Desktop_OpenGL_2_0,
d37642 3
a37644 3
        48049 /* "glUniform1iARB" */,
        48004 /* "glUniform1i" */,
        48004 /* "glUniform1i" */,
d37646 1
a37646 1
    return gl_provider_resolver(entrypoint_strings + 48049 /* "glUniform1iARB" */,
d37654 1
a37655 1
        Desktop_OpenGL_2_0,
d37660 3
a37662 3
        48064 /* "glUniform1iv" */,
        48064 /* "glUniform1iv" */,
        48077 /* "glUniform1ivARB" */,
d37664 1
a37664 1
    return gl_provider_resolver(entrypoint_strings + 48064 /* "glUniform1iv" */,
d37673 1
a37674 1
        Desktop_OpenGL_2_0,
d37678 3
a37680 3
        48077 /* "glUniform1ivARB" */,
        48064 /* "glUniform1iv" */,
        48064 /* "glUniform1iv" */,
d37682 1
a37682 1
    return gl_provider_resolver(entrypoint_strings + 48077 /* "glUniform1ivARB" */,
d37696 3
a37698 3
        48093 /* "glUniform1ui" */,
        48093 /* "glUniform1ui" */,
        48141 /* "glUniform1uiEXT" */,
d37700 1
a37700 1
    return gl_provider_resolver(entrypoint_strings + 48093 /* "glUniform1ui" */,
d37713 2
a37714 2
        48106 /* "glUniform1ui64NV" */,
        48106 /* "glUniform1ui64NV" */,
d37716 1
a37716 1
    return gl_provider_resolver(entrypoint_strings + 48106 /* "glUniform1ui64NV" */,
d37729 2
a37730 2
        48123 /* "glUniform1ui64vNV" */,
        48123 /* "glUniform1ui64vNV" */,
d37732 1
a37732 1
    return gl_provider_resolver(entrypoint_strings + 48123 /* "glUniform1ui64vNV" */,
d37746 3
a37748 3
        48141 /* "glUniform1uiEXT" */,
        48093 /* "glUniform1ui" */,
        48093 /* "glUniform1ui" */,
d37750 1
a37750 1
    return gl_provider_resolver(entrypoint_strings + 48141 /* "glUniform1uiEXT" */,
d37764 3
a37766 3
        48157 /* "glUniform1uiv" */,
        48157 /* "glUniform1uiv" */,
        48171 /* "glUniform1uivEXT" */,
d37768 1
a37768 1
    return gl_provider_resolver(entrypoint_strings + 48157 /* "glUniform1uiv" */,
d37782 3
a37784 3
        48171 /* "glUniform1uivEXT" */,
        48157 /* "glUniform1uiv" */,
        48157 /* "glUniform1uiv" */,
d37786 1
a37786 1
    return gl_provider_resolver(entrypoint_strings + 48171 /* "glUniform1uivEXT" */,
d37799 2
a37800 2
        48188 /* "glUniform2d" */,
        48188 /* "glUniform2d" */,
d37802 1
a37802 1
    return gl_provider_resolver(entrypoint_strings + 48188 /* "glUniform2d" */,
d37815 2
a37816 2
        48200 /* "glUniform2dv" */,
        48200 /* "glUniform2dv" */,
d37818 1
a37818 1
    return gl_provider_resolver(entrypoint_strings + 48200 /* "glUniform2dv" */,
d37826 1
a37827 1
        Desktop_OpenGL_2_0,
d37832 3
a37834 3
        48213 /* "glUniform2f" */,
        48213 /* "glUniform2f" */,
        48225 /* "glUniform2fARB" */,
d37836 1
a37836 1
    return gl_provider_resolver(entrypoint_strings + 48213 /* "glUniform2f" */,
d37845 1
a37846 1
        Desktop_OpenGL_2_0,
d37850 3
a37852 3
        48225 /* "glUniform2fARB" */,
        48213 /* "glUniform2f" */,
        48213 /* "glUniform2f" */,
d37854 1
a37854 1
    return gl_provider_resolver(entrypoint_strings + 48225 /* "glUniform2fARB" */,
d37862 1
a37863 1
        Desktop_OpenGL_2_0,
d37868 3
a37870 3
        48240 /* "glUniform2fv" */,
        48240 /* "glUniform2fv" */,
        48253 /* "glUniform2fvARB" */,
d37872 1
a37872 1
    return gl_provider_resolver(entrypoint_strings + 48240 /* "glUniform2fv" */,
d37881 1
a37882 1
        Desktop_OpenGL_2_0,
d37886 3
a37888 3
        48253 /* "glUniform2fvARB" */,
        48240 /* "glUniform2fv" */,
        48240 /* "glUniform2fv" */,
d37890 1
a37890 1
    return gl_provider_resolver(entrypoint_strings + 48253 /* "glUniform2fvARB" */,
d37898 1
a37899 1
        Desktop_OpenGL_2_0,
d37904 3
a37906 3
        48269 /* "glUniform2i" */,
        48269 /* "glUniform2i" */,
        48314 /* "glUniform2iARB" */,
d37908 1
a37908 1
    return gl_provider_resolver(entrypoint_strings + 48269 /* "glUniform2i" */,
d37921 2
a37922 2
        48281 /* "glUniform2i64NV" */,
        48281 /* "glUniform2i64NV" */,
d37924 1
a37924 1
    return gl_provider_resolver(entrypoint_strings + 48281 /* "glUniform2i64NV" */,
d37937 2
a37938 2
        48297 /* "glUniform2i64vNV" */,
        48297 /* "glUniform2i64vNV" */,
d37940 1
a37940 1
    return gl_provider_resolver(entrypoint_strings + 48297 /* "glUniform2i64vNV" */,
d37949 1
a37950 1
        Desktop_OpenGL_2_0,
d37954 3
a37956 3
        48314 /* "glUniform2iARB" */,
        48269 /* "glUniform2i" */,
        48269 /* "glUniform2i" */,
d37958 1
a37958 1
    return gl_provider_resolver(entrypoint_strings + 48314 /* "glUniform2iARB" */,
d37966 1
a37967 1
        Desktop_OpenGL_2_0,
d37972 3
a37974 3
        48329 /* "glUniform2iv" */,
        48329 /* "glUniform2iv" */,
        48342 /* "glUniform2ivARB" */,
d37976 1
a37976 1
    return gl_provider_resolver(entrypoint_strings + 48329 /* "glUniform2iv" */,
d37985 1
a37986 1
        Desktop_OpenGL_2_0,
d37990 3
a37992 3
        48342 /* "glUniform2ivARB" */,
        48329 /* "glUniform2iv" */,
        48329 /* "glUniform2iv" */,
d37994 1
a37994 1
    return gl_provider_resolver(entrypoint_strings + 48342 /* "glUniform2ivARB" */,
d38008 3
a38010 3
        48358 /* "glUniform2ui" */,
        48358 /* "glUniform2ui" */,
        48406 /* "glUniform2uiEXT" */,
d38012 1
a38012 1
    return gl_provider_resolver(entrypoint_strings + 48358 /* "glUniform2ui" */,
d38025 2
a38026 2
        48371 /* "glUniform2ui64NV" */,
        48371 /* "glUniform2ui64NV" */,
d38028 1
a38028 1
    return gl_provider_resolver(entrypoint_strings + 48371 /* "glUniform2ui64NV" */,
d38041 2
a38042 2
        48388 /* "glUniform2ui64vNV" */,
        48388 /* "glUniform2ui64vNV" */,
d38044 1
a38044 1
    return gl_provider_resolver(entrypoint_strings + 48388 /* "glUniform2ui64vNV" */,
d38058 3
a38060 3
        48406 /* "glUniform2uiEXT" */,
        48358 /* "glUniform2ui" */,
        48358 /* "glUniform2ui" */,
d38062 1
a38062 1
    return gl_provider_resolver(entrypoint_strings + 48406 /* "glUniform2uiEXT" */,
d38076 3
a38078 3
        48422 /* "glUniform2uiv" */,
        48422 /* "glUniform2uiv" */,
        48436 /* "glUniform2uivEXT" */,
d38080 1
a38080 1
    return gl_provider_resolver(entrypoint_strings + 48422 /* "glUniform2uiv" */,
d38094 3
a38096 3
        48436 /* "glUniform2uivEXT" */,
        48422 /* "glUniform2uiv" */,
        48422 /* "glUniform2uiv" */,
d38098 1
a38098 1
    return gl_provider_resolver(entrypoint_strings + 48436 /* "glUniform2uivEXT" */,
d38111 2
a38112 2
        48453 /* "glUniform3d" */,
        48453 /* "glUniform3d" */,
d38114 1
a38114 1
    return gl_provider_resolver(entrypoint_strings + 48453 /* "glUniform3d" */,
d38127 2
a38128 2
        48465 /* "glUniform3dv" */,
        48465 /* "glUniform3dv" */,
d38130 1
a38130 1
    return gl_provider_resolver(entrypoint_strings + 48465 /* "glUniform3dv" */,
d38138 1
a38139 1
        Desktop_OpenGL_2_0,
d38144 3
a38146 3
        48478 /* "glUniform3f" */,
        48478 /* "glUniform3f" */,
        48490 /* "glUniform3fARB" */,
d38148 1
a38148 1
    return gl_provider_resolver(entrypoint_strings + 48478 /* "glUniform3f" */,
d38157 1
a38158 1
        Desktop_OpenGL_2_0,
d38162 3
a38164 3
        48490 /* "glUniform3fARB" */,
        48478 /* "glUniform3f" */,
        48478 /* "glUniform3f" */,
d38166 1
a38166 1
    return gl_provider_resolver(entrypoint_strings + 48490 /* "glUniform3fARB" */,
d38174 1
a38175 1
        Desktop_OpenGL_2_0,
d38180 3
a38182 3
        48505 /* "glUniform3fv" */,
        48505 /* "glUniform3fv" */,
        48518 /* "glUniform3fvARB" */,
d38184 1
a38184 1
    return gl_provider_resolver(entrypoint_strings + 48505 /* "glUniform3fv" */,
d38193 1
a38194 1
        Desktop_OpenGL_2_0,
d38198 3
a38200 3
        48518 /* "glUniform3fvARB" */,
        48505 /* "glUniform3fv" */,
        48505 /* "glUniform3fv" */,
d38202 1
a38202 1
    return gl_provider_resolver(entrypoint_strings + 48518 /* "glUniform3fvARB" */,
d38210 1
a38211 1
        Desktop_OpenGL_2_0,
d38216 3
a38218 3
        48534 /* "glUniform3i" */,
        48534 /* "glUniform3i" */,
        48579 /* "glUniform3iARB" */,
d38220 1
a38220 1
    return gl_provider_resolver(entrypoint_strings + 48534 /* "glUniform3i" */,
d38233 2
a38234 2
        48546 /* "glUniform3i64NV" */,
        48546 /* "glUniform3i64NV" */,
d38236 1
a38236 1
    return gl_provider_resolver(entrypoint_strings + 48546 /* "glUniform3i64NV" */,
d38249 2
a38250 2
        48562 /* "glUniform3i64vNV" */,
        48562 /* "glUniform3i64vNV" */,
d38252 1
a38252 1
    return gl_provider_resolver(entrypoint_strings + 48562 /* "glUniform3i64vNV" */,
d38261 1
a38262 1
        Desktop_OpenGL_2_0,
d38266 3
a38268 3
        48579 /* "glUniform3iARB" */,
        48534 /* "glUniform3i" */,
        48534 /* "glUniform3i" */,
d38270 1
a38270 1
    return gl_provider_resolver(entrypoint_strings + 48579 /* "glUniform3iARB" */,
d38278 1
a38279 1
        Desktop_OpenGL_2_0,
d38284 3
a38286 3
        48594 /* "glUniform3iv" */,
        48594 /* "glUniform3iv" */,
        48607 /* "glUniform3ivARB" */,
d38288 1
a38288 1
    return gl_provider_resolver(entrypoint_strings + 48594 /* "glUniform3iv" */,
d38297 1
a38298 1
        Desktop_OpenGL_2_0,
d38302 3
a38304 3
        48607 /* "glUniform3ivARB" */,
        48594 /* "glUniform3iv" */,
        48594 /* "glUniform3iv" */,
d38306 1
a38306 1
    return gl_provider_resolver(entrypoint_strings + 48607 /* "glUniform3ivARB" */,
d38320 3
a38322 3
        48623 /* "glUniform3ui" */,
        48623 /* "glUniform3ui" */,
        48671 /* "glUniform3uiEXT" */,
d38324 1
a38324 1
    return gl_provider_resolver(entrypoint_strings + 48623 /* "glUniform3ui" */,
d38337 2
a38338 2
        48636 /* "glUniform3ui64NV" */,
        48636 /* "glUniform3ui64NV" */,
d38340 1
a38340 1
    return gl_provider_resolver(entrypoint_strings + 48636 /* "glUniform3ui64NV" */,
d38353 2
a38354 2
        48653 /* "glUniform3ui64vNV" */,
        48653 /* "glUniform3ui64vNV" */,
d38356 1
a38356 1
    return gl_provider_resolver(entrypoint_strings + 48653 /* "glUniform3ui64vNV" */,
d38370 3
a38372 3
        48671 /* "glUniform3uiEXT" */,
        48623 /* "glUniform3ui" */,
        48623 /* "glUniform3ui" */,
d38374 1
a38374 1
    return gl_provider_resolver(entrypoint_strings + 48671 /* "glUniform3uiEXT" */,
d38388 3
a38390 3
        48687 /* "glUniform3uiv" */,
        48687 /* "glUniform3uiv" */,
        48701 /* "glUniform3uivEXT" */,
d38392 1
a38392 1
    return gl_provider_resolver(entrypoint_strings + 48687 /* "glUniform3uiv" */,
d38406 3
a38408 3
        48701 /* "glUniform3uivEXT" */,
        48687 /* "glUniform3uiv" */,
        48687 /* "glUniform3uiv" */,
d38410 1
a38410 1
    return gl_provider_resolver(entrypoint_strings + 48701 /* "glUniform3uivEXT" */,
d38423 2
a38424 2
        48718 /* "glUniform4d" */,
        48718 /* "glUniform4d" */,
d38426 1
a38426 1
    return gl_provider_resolver(entrypoint_strings + 48718 /* "glUniform4d" */,
d38439 2
a38440 2
        48730 /* "glUniform4dv" */,
        48730 /* "glUniform4dv" */,
d38442 1
a38442 1
    return gl_provider_resolver(entrypoint_strings + 48730 /* "glUniform4dv" */,
d38450 1
a38451 1
        Desktop_OpenGL_2_0,
d38456 3
a38458 3
        48743 /* "glUniform4f" */,
        48743 /* "glUniform4f" */,
        48755 /* "glUniform4fARB" */,
d38460 1
a38460 1
    return gl_provider_resolver(entrypoint_strings + 48743 /* "glUniform4f" */,
d38469 1
a38470 1
        Desktop_OpenGL_2_0,
d38474 3
a38476 3
        48755 /* "glUniform4fARB" */,
        48743 /* "glUniform4f" */,
        48743 /* "glUniform4f" */,
d38478 1
a38478 1
    return gl_provider_resolver(entrypoint_strings + 48755 /* "glUniform4fARB" */,
d38486 1
a38487 1
        Desktop_OpenGL_2_0,
d38492 3
a38494 3
        48770 /* "glUniform4fv" */,
        48770 /* "glUniform4fv" */,
        48783 /* "glUniform4fvARB" */,
d38496 1
a38496 1
    return gl_provider_resolver(entrypoint_strings + 48770 /* "glUniform4fv" */,
d38505 1
a38506 1
        Desktop_OpenGL_2_0,
d38510 3
a38512 3
        48783 /* "glUniform4fvARB" */,
        48770 /* "glUniform4fv" */,
        48770 /* "glUniform4fv" */,
d38514 1
a38514 1
    return gl_provider_resolver(entrypoint_strings + 48783 /* "glUniform4fvARB" */,
d38522 1
a38523 1
        Desktop_OpenGL_2_0,
d38528 3
a38530 3
        48799 /* "glUniform4i" */,
        48799 /* "glUniform4i" */,
        48844 /* "glUniform4iARB" */,
d38532 1
a38532 1
    return gl_provider_resolver(entrypoint_strings + 48799 /* "glUniform4i" */,
d38545 2
a38546 2
        48811 /* "glUniform4i64NV" */,
        48811 /* "glUniform4i64NV" */,
d38548 1
a38548 1
    return gl_provider_resolver(entrypoint_strings + 48811 /* "glUniform4i64NV" */,
d38561 2
a38562 2
        48827 /* "glUniform4i64vNV" */,
        48827 /* "glUniform4i64vNV" */,
d38564 1
a38564 1
    return gl_provider_resolver(entrypoint_strings + 48827 /* "glUniform4i64vNV" */,
d38573 1
a38574 1
        Desktop_OpenGL_2_0,
d38578 3
a38580 3
        48844 /* "glUniform4iARB" */,
        48799 /* "glUniform4i" */,
        48799 /* "glUniform4i" */,
d38582 1
a38582 1
    return gl_provider_resolver(entrypoint_strings + 48844 /* "glUniform4iARB" */,
d38590 1
a38591 1
        Desktop_OpenGL_2_0,
d38596 3
a38598 3
        48859 /* "glUniform4iv" */,
        48859 /* "glUniform4iv" */,
        48872 /* "glUniform4ivARB" */,
d38600 1
a38600 1
    return gl_provider_resolver(entrypoint_strings + 48859 /* "glUniform4iv" */,
d38609 1
a38610 1
        Desktop_OpenGL_2_0,
d38614 3
a38616 3
        48872 /* "glUniform4ivARB" */,
        48859 /* "glUniform4iv" */,
        48859 /* "glUniform4iv" */,
d38618 1
a38618 1
    return gl_provider_resolver(entrypoint_strings + 48872 /* "glUniform4ivARB" */,
d38632 3
a38634 3
        48888 /* "glUniform4ui" */,
        48888 /* "glUniform4ui" */,
        48936 /* "glUniform4uiEXT" */,
d38636 1
a38636 1
    return gl_provider_resolver(entrypoint_strings + 48888 /* "glUniform4ui" */,
d38649 2
a38650 2
        48901 /* "glUniform4ui64NV" */,
        48901 /* "glUniform4ui64NV" */,
d38652 1
a38652 1
    return gl_provider_resolver(entrypoint_strings + 48901 /* "glUniform4ui64NV" */,
d38665 2
a38666 2
        48918 /* "glUniform4ui64vNV" */,
        48918 /* "glUniform4ui64vNV" */,
d38668 1
a38668 1
    return gl_provider_resolver(entrypoint_strings + 48918 /* "glUniform4ui64vNV" */,
d38682 3
a38684 3
        48936 /* "glUniform4uiEXT" */,
        48888 /* "glUniform4ui" */,
        48888 /* "glUniform4ui" */,
d38686 1
a38686 1
    return gl_provider_resolver(entrypoint_strings + 48936 /* "glUniform4uiEXT" */,
d38700 3
a38702 3
        48952 /* "glUniform4uiv" */,
        48952 /* "glUniform4uiv" */,
        48966 /* "glUniform4uivEXT" */,
d38704 1
a38704 1
    return gl_provider_resolver(entrypoint_strings + 48952 /* "glUniform4uiv" */,
d38718 3
a38720 3
        48966 /* "glUniform4uivEXT" */,
        48952 /* "glUniform4uiv" */,
        48952 /* "glUniform4uiv" */,
d38722 1
a38722 1
    return gl_provider_resolver(entrypoint_strings + 48966 /* "glUniform4uivEXT" */,
d38730 1
a38731 1
        Desktop_OpenGL_3_1,
d38736 3
a38738 3
        48983 /* "glUniformBlockBinding" */,
        48983 /* "glUniformBlockBinding" */,
        48983 /* "glUniformBlockBinding" */,
d38740 1
a38740 1
    return gl_provider_resolver(entrypoint_strings + 48983 /* "glUniformBlockBinding" */,
d38747 1
a38747 1
    return gl_single_resolver(GL_extension_GL_EXT_bindable_uniform, 49005 /* glUniformBufferEXT */);
d38753 1
a38753 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 49024 /* glUniformHandleui64ARB */);
d38759 1
a38759 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 49047 /* glUniformHandleui64NV */);
d38765 1
a38765 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 49069 /* glUniformHandleui64vARB */);
d38771 1
a38771 1
    return gl_single_resolver(GL_extension_GL_NV_bindless_texture, 49093 /* glUniformHandleui64vNV */);
d38783 2
a38784 2
        49116 /* "glUniformMatrix2dv" */,
        49116 /* "glUniformMatrix2dv" */,
d38786 1
a38786 1
    return gl_provider_resolver(entrypoint_strings + 49116 /* "glUniformMatrix2dv" */,
d38794 1
a38795 1
        Desktop_OpenGL_2_0,
d38800 3
a38802 3
        49135 /* "glUniformMatrix2fv" */,
        49135 /* "glUniformMatrix2fv" */,
        49154 /* "glUniformMatrix2fvARB" */,
d38804 1
a38804 1
    return gl_provider_resolver(entrypoint_strings + 49135 /* "glUniformMatrix2fv" */,
d38813 1
a38814 1
        Desktop_OpenGL_2_0,
d38818 3
a38820 3
        49154 /* "glUniformMatrix2fvARB" */,
        49135 /* "glUniformMatrix2fv" */,
        49135 /* "glUniformMatrix2fv" */,
d38822 1
a38822 1
    return gl_provider_resolver(entrypoint_strings + 49154 /* "glUniformMatrix2fvARB" */,
d38835 2
a38836 2
        49176 /* "glUniformMatrix2x3dv" */,
        49176 /* "glUniformMatrix2x3dv" */,
d38838 1
a38838 1
    return gl_provider_resolver(entrypoint_strings + 49176 /* "glUniformMatrix2x3dv" */,
d38846 1
a38847 1
        Desktop_OpenGL_2_1,
d38852 3
a38854 3
        49197 /* "glUniformMatrix2x3fv" */,
        49197 /* "glUniformMatrix2x3fv" */,
        49218 /* "glUniformMatrix2x3fvNV" */,
d38856 1
a38856 1
    return gl_provider_resolver(entrypoint_strings + 49197 /* "glUniformMatrix2x3fv" */,
d38865 1
a38866 1
        Desktop_OpenGL_2_1,
d38870 3
a38872 3
        49218 /* "glUniformMatrix2x3fvNV" */,
        49197 /* "glUniformMatrix2x3fv" */,
        49197 /* "glUniformMatrix2x3fv" */,
d38874 1
a38874 1
    return gl_provider_resolver(entrypoint_strings + 49218 /* "glUniformMatrix2x3fvNV" */,
d38887 2
a38888 2
        49241 /* "glUniformMatrix2x4dv" */,
        49241 /* "glUniformMatrix2x4dv" */,
d38890 1
a38890 1
    return gl_provider_resolver(entrypoint_strings + 49241 /* "glUniformMatrix2x4dv" */,
d38898 1
a38899 1
        Desktop_OpenGL_2_1,
d38904 3
a38906 3
        49262 /* "glUniformMatrix2x4fv" */,
        49262 /* "glUniformMatrix2x4fv" */,
        49283 /* "glUniformMatrix2x4fvNV" */,
d38908 1
a38908 1
    return gl_provider_resolver(entrypoint_strings + 49262 /* "glUniformMatrix2x4fv" */,
d38917 1
a38918 1
        Desktop_OpenGL_2_1,
d38922 3
a38924 3
        49283 /* "glUniformMatrix2x4fvNV" */,
        49262 /* "glUniformMatrix2x4fv" */,
        49262 /* "glUniformMatrix2x4fv" */,
d38926 1
a38926 1
    return gl_provider_resolver(entrypoint_strings + 49283 /* "glUniformMatrix2x4fvNV" */,
d38939 2
a38940 2
        49306 /* "glUniformMatrix3dv" */,
        49306 /* "glUniformMatrix3dv" */,
d38942 1
a38942 1
    return gl_provider_resolver(entrypoint_strings + 49306 /* "glUniformMatrix3dv" */,
d38950 1
a38951 1
        Desktop_OpenGL_2_0,
d38956 3
a38958 3
        49325 /* "glUniformMatrix3fv" */,
        49325 /* "glUniformMatrix3fv" */,
        49344 /* "glUniformMatrix3fvARB" */,
d38960 1
a38960 1
    return gl_provider_resolver(entrypoint_strings + 49325 /* "glUniformMatrix3fv" */,
d38969 1
a38970 1
        Desktop_OpenGL_2_0,
d38974 3
a38976 3
        49344 /* "glUniformMatrix3fvARB" */,
        49325 /* "glUniformMatrix3fv" */,
        49325 /* "glUniformMatrix3fv" */,
d38978 1
a38978 1
    return gl_provider_resolver(entrypoint_strings + 49344 /* "glUniformMatrix3fvARB" */,
d38991 2
a38992 2
        49366 /* "glUniformMatrix3x2dv" */,
        49366 /* "glUniformMatrix3x2dv" */,
d38994 1
a38994 1
    return gl_provider_resolver(entrypoint_strings + 49366 /* "glUniformMatrix3x2dv" */,
d39002 1
a39003 1
        Desktop_OpenGL_2_1,
d39008 3
a39010 3
        49387 /* "glUniformMatrix3x2fv" */,
        49387 /* "glUniformMatrix3x2fv" */,
        49408 /* "glUniformMatrix3x2fvNV" */,
d39012 1
a39012 1
    return gl_provider_resolver(entrypoint_strings + 49387 /* "glUniformMatrix3x2fv" */,
d39021 1
a39022 1
        Desktop_OpenGL_2_1,
d39026 3
a39028 3
        49408 /* "glUniformMatrix3x2fvNV" */,
        49387 /* "glUniformMatrix3x2fv" */,
        49387 /* "glUniformMatrix3x2fv" */,
d39030 1
a39030 1
    return gl_provider_resolver(entrypoint_strings + 49408 /* "glUniformMatrix3x2fvNV" */,
d39043 2
a39044 2
        49431 /* "glUniformMatrix3x4dv" */,
        49431 /* "glUniformMatrix3x4dv" */,
d39046 1
a39046 1
    return gl_provider_resolver(entrypoint_strings + 49431 /* "glUniformMatrix3x4dv" */,
d39054 1
a39055 1
        Desktop_OpenGL_2_1,
d39060 3
a39062 3
        49452 /* "glUniformMatrix3x4fv" */,
        49452 /* "glUniformMatrix3x4fv" */,
        49473 /* "glUniformMatrix3x4fvNV" */,
d39064 1
a39064 1
    return gl_provider_resolver(entrypoint_strings + 49452 /* "glUniformMatrix3x4fv" */,
d39073 1
a39074 1
        Desktop_OpenGL_2_1,
d39078 3
a39080 3
        49473 /* "glUniformMatrix3x4fvNV" */,
        49452 /* "glUniformMatrix3x4fv" */,
        49452 /* "glUniformMatrix3x4fv" */,
d39082 1
a39082 1
    return gl_provider_resolver(entrypoint_strings + 49473 /* "glUniformMatrix3x4fvNV" */,
d39095 2
a39096 2
        49496 /* "glUniformMatrix4dv" */,
        49496 /* "glUniformMatrix4dv" */,
d39098 1
a39098 1
    return gl_provider_resolver(entrypoint_strings + 49496 /* "glUniformMatrix4dv" */,
d39106 1
a39107 1
        Desktop_OpenGL_2_0,
d39112 3
a39114 3
        49515 /* "glUniformMatrix4fv" */,
        49515 /* "glUniformMatrix4fv" */,
        49534 /* "glUniformMatrix4fvARB" */,
d39116 1
a39116 1
    return gl_provider_resolver(entrypoint_strings + 49515 /* "glUniformMatrix4fv" */,
d39125 1
a39126 1
        Desktop_OpenGL_2_0,
d39130 3
a39132 3
        49534 /* "glUniformMatrix4fvARB" */,
        49515 /* "glUniformMatrix4fv" */,
        49515 /* "glUniformMatrix4fv" */,
d39134 1
a39134 1
    return gl_provider_resolver(entrypoint_strings + 49534 /* "glUniformMatrix4fvARB" */,
d39147 2
a39148 2
        49556 /* "glUniformMatrix4x2dv" */,
        49556 /* "glUniformMatrix4x2dv" */,
d39150 1
a39150 1
    return gl_provider_resolver(entrypoint_strings + 49556 /* "glUniformMatrix4x2dv" */,
d39158 1
a39159 1
        Desktop_OpenGL_2_1,
d39164 3
a39166 3
        49577 /* "glUniformMatrix4x2fv" */,
        49577 /* "glUniformMatrix4x2fv" */,
        49598 /* "glUniformMatrix4x2fvNV" */,
d39168 1
a39168 1
    return gl_provider_resolver(entrypoint_strings + 49577 /* "glUniformMatrix4x2fv" */,
d39177 1
a39178 1
        Desktop_OpenGL_2_1,
d39182 3
a39184 3
        49598 /* "glUniformMatrix4x2fvNV" */,
        49577 /* "glUniformMatrix4x2fv" */,
        49577 /* "glUniformMatrix4x2fv" */,
d39186 1
a39186 1
    return gl_provider_resolver(entrypoint_strings + 49598 /* "glUniformMatrix4x2fvNV" */,
d39199 2
a39200 2
        49621 /* "glUniformMatrix4x3dv" */,
        49621 /* "glUniformMatrix4x3dv" */,
d39202 1
a39202 1
    return gl_provider_resolver(entrypoint_strings + 49621 /* "glUniformMatrix4x3dv" */,
d39210 1
a39211 1
        Desktop_OpenGL_2_1,
d39216 3
a39218 3
        49642 /* "glUniformMatrix4x3fv" */,
        49642 /* "glUniformMatrix4x3fv" */,
        49663 /* "glUniformMatrix4x3fvNV" */,
d39220 1
a39220 1
    return gl_provider_resolver(entrypoint_strings + 49642 /* "glUniformMatrix4x3fv" */,
d39229 1
a39230 1
        Desktop_OpenGL_2_1,
d39234 3
a39236 3
        49663 /* "glUniformMatrix4x3fvNV" */,
        49642 /* "glUniformMatrix4x3fv" */,
        49642 /* "glUniformMatrix4x3fv" */,
d39238 1
a39238 1
    return gl_provider_resolver(entrypoint_strings + 49663 /* "glUniformMatrix4x3fvNV" */,
d39251 2
a39252 2
        49686 /* "glUniformSubroutinesuiv" */,
        49686 /* "glUniformSubroutinesuiv" */,
d39254 1
a39254 1
    return gl_provider_resolver(entrypoint_strings + 49686 /* "glUniformSubroutinesuiv" */,
d39261 1
a39261 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 49710 /* glUniformui64NV */);
d39267 1
a39267 1
    return gl_single_resolver(GL_extension_GL_NV_shader_buffer_load, 49726 /* glUniformui64vNV */);
d39273 1
a39273 1
    return gl_single_resolver(GL_extension_GL_EXT_compiled_vertex_array, 49743 /* glUnlockArraysEXT */);
d39280 1
a39281 1
        Desktop_OpenGL_1_5,
d39287 4
a39290 4
        49761 /* "glUnmapBuffer" */,
        49761 /* "glUnmapBuffer" */,
        49775 /* "glUnmapBufferARB" */,
        49792 /* "glUnmapBufferOES" */,
d39292 1
a39292 1
    return gl_provider_resolver(entrypoint_strings + 49761 /* "glUnmapBuffer" */,
d39301 1
a39302 1
        Desktop_OpenGL_1_5,
d39307 4
a39310 4
        49775 /* "glUnmapBufferARB" */,
        49761 /* "glUnmapBuffer" */,
        49761 /* "glUnmapBuffer" */,
        49792 /* "glUnmapBufferOES" */,
d39312 1
a39312 1
    return gl_provider_resolver(entrypoint_strings + 49775 /* "glUnmapBufferARB" */,
d39321 1
a39322 1
        Desktop_OpenGL_1_5,
d39327 20
a39346 4
        49792 /* "glUnmapBufferOES" */,
        49761 /* "glUnmapBuffer" */,
        49761 /* "glUnmapBuffer" */,
        49775 /* "glUnmapBufferARB" */,
d39348 1
a39348 1
    return gl_provider_resolver(entrypoint_strings + 49792 /* "glUnmapBufferOES" */,
d39355 1
a39355 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 49809 /* glUnmapNamedBufferEXT */);
d39361 1
a39361 1
    return gl_single_resolver(GL_extension_GL_ATI_map_object_buffer, 49831 /* glUnmapObjectBufferATI */);
d39367 1
a39367 1
    return gl_single_resolver(GL_extension_GL_INTEL_map_texture, 49854 /* glUnmapTexture2DINTEL */);
d39373 1
a39373 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 49876 /* glUpdateObjectBufferATI */);
d39380 1
a39381 1
        Desktop_OpenGL_2_0,
d39386 3
a39388 3
        49900 /* "glUseProgram" */,
        49900 /* "glUseProgram" */,
        49913 /* "glUseProgramObjectARB" */,
d39390 1
a39390 1
    return gl_provider_resolver(entrypoint_strings + 49900 /* "glUseProgram" */,
d39399 1
a39400 1
        Desktop_OpenGL_2_0,
d39404 3
a39406 3
        49913 /* "glUseProgramObjectARB" */,
        49900 /* "glUseProgram" */,
        49900 /* "glUseProgram" */,
d39408 1
a39408 1
    return gl_provider_resolver(entrypoint_strings + 49913 /* "glUseProgramObjectARB" */,
d39417 1
a39418 1
        GL_extension_GL_ARB_separate_shader_objects,
d39422 3
a39424 3
        49935 /* "glUseProgramStages" */,
        49935 /* "glUseProgramStages" */,
        49935 /* "glUseProgramStages" */,
d39426 1
a39426 1
    return gl_provider_resolver(entrypoint_strings + 49935 /* "glUseProgramStages" */,
d39433 1
a39433 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 49954 /* glUseProgramStagesEXT */);
d39439 1
a39439 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 49976 /* glUseShaderProgramEXT */);
d39445 1
a39445 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 49998 /* glVDPAUFiniNV */);
d39451 1
a39451 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 50012 /* glVDPAUGetSurfaceivNV */);
d39457 1
a39457 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 50034 /* glVDPAUInitNV */);
d39463 1
a39463 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 50048 /* glVDPAUIsSurfaceNV */);
d39469 1
a39469 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 50067 /* glVDPAUMapSurfacesNV */);
d39475 1
a39475 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 50088 /* glVDPAURegisterOutputSurfaceNV */);
d39481 1
a39481 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 50119 /* glVDPAURegisterVideoSurfaceNV */);
d39487 1
a39487 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 50149 /* glVDPAUSurfaceAccessNV */);
d39493 1
a39493 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 50172 /* glVDPAUUnmapSurfacesNV */);
d39499 1
a39499 1
    return gl_single_resolver(GL_extension_GL_NV_vdpau_interop, 50195 /* glVDPAUUnregisterSurfaceNV */);
d39506 1
a39507 1
        Desktop_OpenGL_2_0,
d39512 3
a39514 3
        50222 /* "glValidateProgram" */,
        50222 /* "glValidateProgram" */,
        50240 /* "glValidateProgramARB" */,
d39516 1
a39516 1
    return gl_provider_resolver(entrypoint_strings + 50222 /* "glValidateProgram" */,
d39525 1
a39526 1
        Desktop_OpenGL_2_0,
d39530 3
a39532 3
        50240 /* "glValidateProgramARB" */,
        50222 /* "glValidateProgram" */,
        50222 /* "glValidateProgram" */,
d39534 1
a39534 1
    return gl_provider_resolver(entrypoint_strings + 50240 /* "glValidateProgramARB" */,
d39543 1
a39544 1
        GL_extension_GL_ARB_separate_shader_objects,
d39548 3
a39550 3
        50261 /* "glValidateProgramPipeline" */,
        50261 /* "glValidateProgramPipeline" */,
        50261 /* "glValidateProgramPipeline" */,
d39552 1
a39552 1
    return gl_provider_resolver(entrypoint_strings + 50261 /* "glValidateProgramPipeline" */,
d39559 1
a39559 1
    return gl_single_resolver(GL_extension_GL_EXT_separate_shader_objects, 50287 /* glValidateProgramPipelineEXT */);
d39565 1
a39565 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_array_object, 50316 /* glVariantArrayObjectATI */);
d39571 1
a39571 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 50340 /* glVariantPointerEXT */);
d39577 1
a39577 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 50360 /* glVariantbvEXT */);
d39583 1
a39583 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 50375 /* glVariantdvEXT */);
d39589 1
a39589 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 50390 /* glVariantfvEXT */);
d39595 1
a39595 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 50405 /* glVariantivEXT */);
d39601 1
a39601 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 50420 /* glVariantsvEXT */);
d39607 1
a39607 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 50435 /* glVariantubvEXT */);
d39613 1
a39613 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 50451 /* glVariantuivEXT */);
d39619 1
a39619 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 50467 /* glVariantusvEXT */);
d39625 1
a39625 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50483 /* glVertex2bOES */);
d39631 1
a39631 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50497 /* glVertex2bvOES */);
d39637 1
a39637 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50512 /* glVertex2d */);
d39643 1
a39643 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50523 /* glVertex2dv */);
d39649 1
a39649 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50535 /* glVertex2f */);
d39655 1
a39655 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50546 /* glVertex2fv */);
d39661 1
a39661 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50558 /* glVertex2hNV */);
d39667 1
a39667 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50571 /* glVertex2hvNV */);
d39673 1
a39673 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50585 /* glVertex2i */);
d39679 1
a39679 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50596 /* glVertex2iv */);
d39685 1
a39685 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50608 /* glVertex2s */);
d39691 1
a39691 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50619 /* glVertex2sv */);
d39697 1
a39697 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50631 /* glVertex2xOES */);
d39703 1
a39703 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50645 /* glVertex2xvOES */);
d39709 1
a39709 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50660 /* glVertex3bOES */);
d39715 1
a39715 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50674 /* glVertex3bvOES */);
d39721 1
a39721 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50689 /* glVertex3d */);
d39727 1
a39727 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50700 /* glVertex3dv */);
d39733 1
a39733 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50712 /* glVertex3f */);
d39739 1
a39739 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50723 /* glVertex3fv */);
d39745 1
a39745 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50735 /* glVertex3hNV */);
d39751 1
a39751 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50748 /* glVertex3hvNV */);
d39757 1
a39757 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50762 /* glVertex3i */);
d39763 1
a39763 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50773 /* glVertex3iv */);
d39769 1
a39769 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50785 /* glVertex3s */);
d39775 1
a39775 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50796 /* glVertex3sv */);
d39781 1
a39781 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50808 /* glVertex3xOES */);
d39787 1
a39787 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50822 /* glVertex3xvOES */);
d39793 1
a39793 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50837 /* glVertex4bOES */);
d39799 1
a39799 1
    return gl_single_resolver(GL_extension_GL_OES_byte_coordinates, 50851 /* glVertex4bvOES */);
d39805 1
a39805 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50866 /* glVertex4d */);
d39811 1
a39811 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50877 /* glVertex4dv */);
d39817 1
a39817 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50889 /* glVertex4f */);
d39823 1
a39823 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50900 /* glVertex4fv */);
d39829 1
a39829 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50912 /* glVertex4hNV */);
d39835 1
a39835 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 50925 /* glVertex4hvNV */);
d39841 1
a39841 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50939 /* glVertex4i */);
d39847 1
a39847 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50950 /* glVertex4iv */);
d39853 1
a39853 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50962 /* glVertex4s */);
d39859 1
a39859 1
    return gl_single_resolver(Desktop_OpenGL_1_0, 50973 /* glVertex4sv */);
d39865 1
a39865 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50985 /* glVertex4xOES */);
d39871 65
a39935 1
    return gl_single_resolver(GL_extension_GL_OES_fixed_point, 50999 /* glVertex4xvOES */);
d39941 17
a39957 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51014 /* glVertexArrayBindVertexBufferEXT */);
d39963 1
a39963 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51047 /* glVertexArrayColorOffsetEXT */);
d39969 17
a39985 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51075 /* glVertexArrayEdgeFlagOffsetEXT */);
d39991 1
a39991 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51106 /* glVertexArrayFogCoordOffsetEXT */);
d39997 1
a39997 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51137 /* glVertexArrayIndexOffsetEXT */);
d40003 1
a40003 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51165 /* glVertexArrayMultiTexCoordOffsetEXT */);
d40009 1
a40009 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51201 /* glVertexArrayNormalOffsetEXT */);
d40015 1
a40015 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_array_range, 51230 /* glVertexArrayParameteriAPPLE */);
d40021 1
a40021 1
    return gl_single_resolver(GL_extension_GL_APPLE_vertex_array_range, 51259 /* glVertexArrayRangeAPPLE */);
d40027 1
a40027 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_array_range, 51283 /* glVertexArrayRangeNV */);
d40033 1
a40033 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51304 /* glVertexArraySecondaryColorOffsetEXT */);
d40039 1
a40039 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51341 /* glVertexArrayTexCoordOffsetEXT */);
d40045 1
a40045 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51372 /* glVertexArrayVertexAttribBindingEXT */);
d40051 1
a40051 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51408 /* glVertexArrayVertexAttribDivisorEXT */);
d40057 1
a40057 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51444 /* glVertexArrayVertexAttribFormatEXT */);
d40063 1
a40063 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51479 /* glVertexArrayVertexAttribIFormatEXT */);
d40069 1
a40069 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51515 /* glVertexArrayVertexAttribIOffsetEXT */);
d40075 1
a40075 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51551 /* glVertexArrayVertexAttribLFormatEXT */);
d40081 1
a40081 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51587 /* glVertexArrayVertexAttribLOffsetEXT */);
d40087 1
a40087 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51623 /* glVertexArrayVertexAttribOffsetEXT */);
d40093 33
a40125 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51658 /* glVertexArrayVertexBindingDivisorEXT */);
d40131 1
a40131 1
    return gl_single_resolver(GL_extension_GL_EXT_direct_state_access, 51695 /* glVertexArrayVertexOffsetEXT */);
d40139 1
a40140 1
        GL_extension_GL_ARB_vertex_program,
d40145 4
a40148 4
        51724 /* "glVertexAttrib1d" */,
        51741 /* "glVertexAttrib1dARB" */,
        51741 /* "glVertexAttrib1dARB" */,
        51761 /* "glVertexAttrib1dNV" */,
d40150 1
a40150 1
    return gl_provider_resolver(entrypoint_strings + 51724 /* "glVertexAttrib1d" */,
d40158 1
a40159 1
        GL_extension_GL_ARB_vertex_program,
d40165 4
a40168 4
        51741 /* "glVertexAttrib1dARB" */,
        51741 /* "glVertexAttrib1dARB" */,
        51724 /* "glVertexAttrib1d" */,
        51761 /* "glVertexAttrib1dNV" */,
d40170 1
a40170 1
    return gl_provider_resolver(entrypoint_strings + 51741 /* "glVertexAttrib1dARB" */,
d40180 1
a40181 1
        GL_extension_GL_ARB_vertex_program,
d40185 4
a40188 4
        51761 /* "glVertexAttrib1dNV" */,
        51724 /* "glVertexAttrib1d" */,
        51741 /* "glVertexAttrib1dARB" */,
        51741 /* "glVertexAttrib1dARB" */,
d40190 1
a40190 1
    return gl_provider_resolver(entrypoint_strings + 51761 /* "glVertexAttrib1dNV" */,
d40199 1
a40200 1
        GL_extension_GL_ARB_vertex_program,
d40205 4
a40208 4
        51780 /* "glVertexAttrib1dv" */,
        51798 /* "glVertexAttrib1dvARB" */,
        51798 /* "glVertexAttrib1dvARB" */,
        51819 /* "glVertexAttrib1dvNV" */,
d40210 1
a40210 1
    return gl_provider_resolver(entrypoint_strings + 51780 /* "glVertexAttrib1dv" */,
d40218 1
a40219 1
        GL_extension_GL_ARB_vertex_program,
d40225 4
a40228 4
        51798 /* "glVertexAttrib1dvARB" */,
        51798 /* "glVertexAttrib1dvARB" */,
        51780 /* "glVertexAttrib1dv" */,
        51819 /* "glVertexAttrib1dvNV" */,
d40230 1
a40230 1
    return gl_provider_resolver(entrypoint_strings + 51798 /* "glVertexAttrib1dvARB" */,
d40240 1
a40241 1
        GL_extension_GL_ARB_vertex_program,
d40245 4
a40248 4
        51819 /* "glVertexAttrib1dvNV" */,
        51780 /* "glVertexAttrib1dv" */,
        51798 /* "glVertexAttrib1dvARB" */,
        51798 /* "glVertexAttrib1dvARB" */,
d40250 1
a40250 1
    return gl_provider_resolver(entrypoint_strings + 51819 /* "glVertexAttrib1dvNV" */,
d40258 1
d40260 1
a40260 1
        Desktop_OpenGL_2_0,
a40261 1
        GL_extension_GL_ARB_vertex_program,
d40266 5
a40270 5
        51839 /* "glVertexAttrib1f" */,
        51839 /* "glVertexAttrib1f" */,
        51856 /* "glVertexAttrib1fARB" */,
        51856 /* "glVertexAttrib1fARB" */,
        51876 /* "glVertexAttrib1fNV" */,
d40272 1
a40272 1
    return gl_provider_resolver(entrypoint_strings + 51839 /* "glVertexAttrib1f" */,
d40280 1
d40282 1
a40282 1
        GL_extension_GL_ARB_vertex_program,
a40283 1
        Desktop_OpenGL_2_0,
d40288 5
a40292 5
        51856 /* "glVertexAttrib1fARB" */,
        51856 /* "glVertexAttrib1fARB" */,
        51839 /* "glVertexAttrib1f" */,
        51839 /* "glVertexAttrib1f" */,
        51876 /* "glVertexAttrib1fNV" */,
d40294 1
a40294 1
    return gl_provider_resolver(entrypoint_strings + 51856 /* "glVertexAttrib1fARB" */,
d40303 1
d40305 1
a40305 1
        Desktop_OpenGL_2_0,
a40306 1
        GL_extension_GL_ARB_vertex_program,
d40310 5
a40314 5
        51876 /* "glVertexAttrib1fNV" */,
        51839 /* "glVertexAttrib1f" */,
        51839 /* "glVertexAttrib1f" */,
        51856 /* "glVertexAttrib1fARB" */,
        51856 /* "glVertexAttrib1fARB" */,
d40316 1
a40316 1
    return gl_provider_resolver(entrypoint_strings + 51876 /* "glVertexAttrib1fNV" */,
d40324 1
d40326 1
a40326 1
        Desktop_OpenGL_2_0,
a40327 1
        GL_extension_GL_ARB_vertex_program,
d40332 5
a40336 5
        51895 /* "glVertexAttrib1fv" */,
        51895 /* "glVertexAttrib1fv" */,
        51913 /* "glVertexAttrib1fvARB" */,
        51913 /* "glVertexAttrib1fvARB" */,
        51934 /* "glVertexAttrib1fvNV" */,
d40338 1
a40338 1
    return gl_provider_resolver(entrypoint_strings + 51895 /* "glVertexAttrib1fv" */,
d40346 1
d40348 1
a40348 1
        GL_extension_GL_ARB_vertex_program,
a40349 1
        Desktop_OpenGL_2_0,
d40354 5
a40358 5
        51913 /* "glVertexAttrib1fvARB" */,
        51913 /* "glVertexAttrib1fvARB" */,
        51895 /* "glVertexAttrib1fv" */,
        51895 /* "glVertexAttrib1fv" */,
        51934 /* "glVertexAttrib1fvNV" */,
d40360 1
a40360 1
    return gl_provider_resolver(entrypoint_strings + 51913 /* "glVertexAttrib1fvARB" */,
d40369 1
d40371 1
a40371 1
        Desktop_OpenGL_2_0,
a40372 1
        GL_extension_GL_ARB_vertex_program,
d40376 5
a40380 5
        51934 /* "glVertexAttrib1fvNV" */,
        51895 /* "glVertexAttrib1fv" */,
        51895 /* "glVertexAttrib1fv" */,
        51913 /* "glVertexAttrib1fvARB" */,
        51913 /* "glVertexAttrib1fvARB" */,
d40382 1
a40382 1
    return gl_provider_resolver(entrypoint_strings + 51934 /* "glVertexAttrib1fvNV" */,
d40389 1
a40389 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 51954 /* glVertexAttrib1hNV */);
d40395 1
a40395 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 51973 /* glVertexAttrib1hvNV */);
d40403 1
a40404 1
        GL_extension_GL_ARB_vertex_program,
d40409 4
a40412 4
        51993 /* "glVertexAttrib1s" */,
        52010 /* "glVertexAttrib1sARB" */,
        52010 /* "glVertexAttrib1sARB" */,
        52030 /* "glVertexAttrib1sNV" */,
d40414 1
a40414 1
    return gl_provider_resolver(entrypoint_strings + 51993 /* "glVertexAttrib1s" */,
d40422 1
a40423 1
        GL_extension_GL_ARB_vertex_program,
d40429 4
a40432 4
        52010 /* "glVertexAttrib1sARB" */,
        52010 /* "glVertexAttrib1sARB" */,
        51993 /* "glVertexAttrib1s" */,
        52030 /* "glVertexAttrib1sNV" */,
d40434 1
a40434 1
    return gl_provider_resolver(entrypoint_strings + 52010 /* "glVertexAttrib1sARB" */,
d40444 1
a40445 1
        GL_extension_GL_ARB_vertex_program,
d40449 4
a40452 4
        52030 /* "glVertexAttrib1sNV" */,
        51993 /* "glVertexAttrib1s" */,
        52010 /* "glVertexAttrib1sARB" */,
        52010 /* "glVertexAttrib1sARB" */,
d40454 1
a40454 1
    return gl_provider_resolver(entrypoint_strings + 52030 /* "glVertexAttrib1sNV" */,
d40463 1
a40464 1
        GL_extension_GL_ARB_vertex_program,
d40469 4
a40472 4
        52049 /* "glVertexAttrib1sv" */,
        52067 /* "glVertexAttrib1svARB" */,
        52067 /* "glVertexAttrib1svARB" */,
        52088 /* "glVertexAttrib1svNV" */,
d40474 1
a40474 1
    return gl_provider_resolver(entrypoint_strings + 52049 /* "glVertexAttrib1sv" */,
d40482 1
a40483 1
        GL_extension_GL_ARB_vertex_program,
d40489 4
a40492 4
        52067 /* "glVertexAttrib1svARB" */,
        52067 /* "glVertexAttrib1svARB" */,
        52049 /* "glVertexAttrib1sv" */,
        52088 /* "glVertexAttrib1svNV" */,
d40494 1
a40494 1
    return gl_provider_resolver(entrypoint_strings + 52067 /* "glVertexAttrib1svARB" */,
d40504 1
a40505 1
        GL_extension_GL_ARB_vertex_program,
d40509 4
a40512 4
        52088 /* "glVertexAttrib1svNV" */,
        52049 /* "glVertexAttrib1sv" */,
        52067 /* "glVertexAttrib1svARB" */,
        52067 /* "glVertexAttrib1svARB" */,
d40514 1
a40514 1
    return gl_provider_resolver(entrypoint_strings + 52088 /* "glVertexAttrib1svNV" */,
d40523 1
a40524 1
        GL_extension_GL_ARB_vertex_program,
d40529 4
a40532 4
        52108 /* "glVertexAttrib2d" */,
        52125 /* "glVertexAttrib2dARB" */,
        52125 /* "glVertexAttrib2dARB" */,
        52145 /* "glVertexAttrib2dNV" */,
d40534 1
a40534 1
    return gl_provider_resolver(entrypoint_strings + 52108 /* "glVertexAttrib2d" */,
d40542 1
a40543 1
        GL_extension_GL_ARB_vertex_program,
d40549 4
a40552 4
        52125 /* "glVertexAttrib2dARB" */,
        52125 /* "glVertexAttrib2dARB" */,
        52108 /* "glVertexAttrib2d" */,
        52145 /* "glVertexAttrib2dNV" */,
d40554 1
a40554 1
    return gl_provider_resolver(entrypoint_strings + 52125 /* "glVertexAttrib2dARB" */,
d40564 1
a40565 1
        GL_extension_GL_ARB_vertex_program,
d40569 4
a40572 4
        52145 /* "glVertexAttrib2dNV" */,
        52108 /* "glVertexAttrib2d" */,
        52125 /* "glVertexAttrib2dARB" */,
        52125 /* "glVertexAttrib2dARB" */,
d40574 1
a40574 1
    return gl_provider_resolver(entrypoint_strings + 52145 /* "glVertexAttrib2dNV" */,
d40583 1
a40584 1
        GL_extension_GL_ARB_vertex_program,
d40589 4
a40592 4
        52164 /* "glVertexAttrib2dv" */,
        52182 /* "glVertexAttrib2dvARB" */,
        52182 /* "glVertexAttrib2dvARB" */,
        52203 /* "glVertexAttrib2dvNV" */,
d40594 1
a40594 1
    return gl_provider_resolver(entrypoint_strings + 52164 /* "glVertexAttrib2dv" */,
d40602 1
a40603 1
        GL_extension_GL_ARB_vertex_program,
d40609 4
a40612 4
        52182 /* "glVertexAttrib2dvARB" */,
        52182 /* "glVertexAttrib2dvARB" */,
        52164 /* "glVertexAttrib2dv" */,
        52203 /* "glVertexAttrib2dvNV" */,
d40614 1
a40614 1
    return gl_provider_resolver(entrypoint_strings + 52182 /* "glVertexAttrib2dvARB" */,
d40624 1
a40625 1
        GL_extension_GL_ARB_vertex_program,
d40629 4
a40632 4
        52203 /* "glVertexAttrib2dvNV" */,
        52164 /* "glVertexAttrib2dv" */,
        52182 /* "glVertexAttrib2dvARB" */,
        52182 /* "glVertexAttrib2dvARB" */,
d40634 1
a40634 1
    return gl_provider_resolver(entrypoint_strings + 52203 /* "glVertexAttrib2dvNV" */,
d40642 1
d40644 1
a40644 1
        Desktop_OpenGL_2_0,
a40645 1
        GL_extension_GL_ARB_vertex_program,
d40650 5
a40654 5
        52223 /* "glVertexAttrib2f" */,
        52223 /* "glVertexAttrib2f" */,
        52240 /* "glVertexAttrib2fARB" */,
        52240 /* "glVertexAttrib2fARB" */,
        52260 /* "glVertexAttrib2fNV" */,
d40656 1
a40656 1
    return gl_provider_resolver(entrypoint_strings + 52223 /* "glVertexAttrib2f" */,
d40664 1
d40666 1
a40666 1
        GL_extension_GL_ARB_vertex_program,
a40667 1
        Desktop_OpenGL_2_0,
d40672 5
a40676 5
        52240 /* "glVertexAttrib2fARB" */,
        52240 /* "glVertexAttrib2fARB" */,
        52223 /* "glVertexAttrib2f" */,
        52223 /* "glVertexAttrib2f" */,
        52260 /* "glVertexAttrib2fNV" */,
d40678 1
a40678 1
    return gl_provider_resolver(entrypoint_strings + 52240 /* "glVertexAttrib2fARB" */,
d40687 1
d40689 1
a40689 1
        Desktop_OpenGL_2_0,
a40690 1
        GL_extension_GL_ARB_vertex_program,
d40694 5
a40698 5
        52260 /* "glVertexAttrib2fNV" */,
        52223 /* "glVertexAttrib2f" */,
        52223 /* "glVertexAttrib2f" */,
        52240 /* "glVertexAttrib2fARB" */,
        52240 /* "glVertexAttrib2fARB" */,
d40700 1
a40700 1
    return gl_provider_resolver(entrypoint_strings + 52260 /* "glVertexAttrib2fNV" */,
d40708 1
d40710 1
a40710 1
        Desktop_OpenGL_2_0,
a40711 1
        GL_extension_GL_ARB_vertex_program,
d40716 5
a40720 5
        52279 /* "glVertexAttrib2fv" */,
        52279 /* "glVertexAttrib2fv" */,
        52297 /* "glVertexAttrib2fvARB" */,
        52297 /* "glVertexAttrib2fvARB" */,
        52318 /* "glVertexAttrib2fvNV" */,
d40722 1
a40722 1
    return gl_provider_resolver(entrypoint_strings + 52279 /* "glVertexAttrib2fv" */,
d40730 1
d40732 1
a40732 1
        GL_extension_GL_ARB_vertex_program,
a40733 1
        Desktop_OpenGL_2_0,
d40738 5
a40742 5
        52297 /* "glVertexAttrib2fvARB" */,
        52297 /* "glVertexAttrib2fvARB" */,
        52279 /* "glVertexAttrib2fv" */,
        52279 /* "glVertexAttrib2fv" */,
        52318 /* "glVertexAttrib2fvNV" */,
d40744 1
a40744 1
    return gl_provider_resolver(entrypoint_strings + 52297 /* "glVertexAttrib2fvARB" */,
d40753 1
d40755 1
a40755 1
        Desktop_OpenGL_2_0,
a40756 1
        GL_extension_GL_ARB_vertex_program,
d40760 5
a40764 5
        52318 /* "glVertexAttrib2fvNV" */,
        52279 /* "glVertexAttrib2fv" */,
        52279 /* "glVertexAttrib2fv" */,
        52297 /* "glVertexAttrib2fvARB" */,
        52297 /* "glVertexAttrib2fvARB" */,
d40766 1
a40766 1
    return gl_provider_resolver(entrypoint_strings + 52318 /* "glVertexAttrib2fvNV" */,
d40773 1
a40773 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 52338 /* glVertexAttrib2hNV */);
d40779 1
a40779 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 52357 /* glVertexAttrib2hvNV */);
d40787 1
a40788 1
        GL_extension_GL_ARB_vertex_program,
d40793 4
a40796 4
        52377 /* "glVertexAttrib2s" */,
        52394 /* "glVertexAttrib2sARB" */,
        52394 /* "glVertexAttrib2sARB" */,
        52414 /* "glVertexAttrib2sNV" */,
d40798 1
a40798 1
    return gl_provider_resolver(entrypoint_strings + 52377 /* "glVertexAttrib2s" */,
d40806 1
a40807 1
        GL_extension_GL_ARB_vertex_program,
d40813 4
a40816 4
        52394 /* "glVertexAttrib2sARB" */,
        52394 /* "glVertexAttrib2sARB" */,
        52377 /* "glVertexAttrib2s" */,
        52414 /* "glVertexAttrib2sNV" */,
d40818 1
a40818 1
    return gl_provider_resolver(entrypoint_strings + 52394 /* "glVertexAttrib2sARB" */,
d40828 1
a40829 1
        GL_extension_GL_ARB_vertex_program,
d40833 4
a40836 4
        52414 /* "glVertexAttrib2sNV" */,
        52377 /* "glVertexAttrib2s" */,
        52394 /* "glVertexAttrib2sARB" */,
        52394 /* "glVertexAttrib2sARB" */,
d40838 1
a40838 1
    return gl_provider_resolver(entrypoint_strings + 52414 /* "glVertexAttrib2sNV" */,
d40847 1
a40848 1
        GL_extension_GL_ARB_vertex_program,
d40853 4
a40856 4
        52433 /* "glVertexAttrib2sv" */,
        52451 /* "glVertexAttrib2svARB" */,
        52451 /* "glVertexAttrib2svARB" */,
        52472 /* "glVertexAttrib2svNV" */,
d40858 1
a40858 1
    return gl_provider_resolver(entrypoint_strings + 52433 /* "glVertexAttrib2sv" */,
d40866 1
a40867 1
        GL_extension_GL_ARB_vertex_program,
d40873 4
a40876 4
        52451 /* "glVertexAttrib2svARB" */,
        52451 /* "glVertexAttrib2svARB" */,
        52433 /* "glVertexAttrib2sv" */,
        52472 /* "glVertexAttrib2svNV" */,
d40878 1
a40878 1
    return gl_provider_resolver(entrypoint_strings + 52451 /* "glVertexAttrib2svARB" */,
d40888 1
a40889 1
        GL_extension_GL_ARB_vertex_program,
d40893 4
a40896 4
        52472 /* "glVertexAttrib2svNV" */,
        52433 /* "glVertexAttrib2sv" */,
        52451 /* "glVertexAttrib2svARB" */,
        52451 /* "glVertexAttrib2svARB" */,
d40898 1
a40898 1
    return gl_provider_resolver(entrypoint_strings + 52472 /* "glVertexAttrib2svNV" */,
d40907 1
a40908 1
        GL_extension_GL_ARB_vertex_program,
d40913 4
a40916 4
        52492 /* "glVertexAttrib3d" */,
        52509 /* "glVertexAttrib3dARB" */,
        52509 /* "glVertexAttrib3dARB" */,
        52529 /* "glVertexAttrib3dNV" */,
d40918 1
a40918 1
    return gl_provider_resolver(entrypoint_strings + 52492 /* "glVertexAttrib3d" */,
d40926 1
a40927 1
        GL_extension_GL_ARB_vertex_program,
d40933 4
a40936 4
        52509 /* "glVertexAttrib3dARB" */,
        52509 /* "glVertexAttrib3dARB" */,
        52492 /* "glVertexAttrib3d" */,
        52529 /* "glVertexAttrib3dNV" */,
d40938 1
a40938 1
    return gl_provider_resolver(entrypoint_strings + 52509 /* "glVertexAttrib3dARB" */,
d40948 1
a40949 1
        GL_extension_GL_ARB_vertex_program,
d40953 4
a40956 4
        52529 /* "glVertexAttrib3dNV" */,
        52492 /* "glVertexAttrib3d" */,
        52509 /* "glVertexAttrib3dARB" */,
        52509 /* "glVertexAttrib3dARB" */,
d40958 1
a40958 1
    return gl_provider_resolver(entrypoint_strings + 52529 /* "glVertexAttrib3dNV" */,
d40967 1
a40968 1
        GL_extension_GL_ARB_vertex_program,
d40973 4
a40976 4
        52548 /* "glVertexAttrib3dv" */,
        52566 /* "glVertexAttrib3dvARB" */,
        52566 /* "glVertexAttrib3dvARB" */,
        52587 /* "glVertexAttrib3dvNV" */,
d40978 1
a40978 1
    return gl_provider_resolver(entrypoint_strings + 52548 /* "glVertexAttrib3dv" */,
d40986 1
a40987 1
        GL_extension_GL_ARB_vertex_program,
d40993 4
a40996 4
        52566 /* "glVertexAttrib3dvARB" */,
        52566 /* "glVertexAttrib3dvARB" */,
        52548 /* "glVertexAttrib3dv" */,
        52587 /* "glVertexAttrib3dvNV" */,
d40998 1
a40998 1
    return gl_provider_resolver(entrypoint_strings + 52566 /* "glVertexAttrib3dvARB" */,
d41008 1
a41009 1
        GL_extension_GL_ARB_vertex_program,
d41013 4
a41016 4
        52587 /* "glVertexAttrib3dvNV" */,
        52548 /* "glVertexAttrib3dv" */,
        52566 /* "glVertexAttrib3dvARB" */,
        52566 /* "glVertexAttrib3dvARB" */,
d41018 1
a41018 1
    return gl_provider_resolver(entrypoint_strings + 52587 /* "glVertexAttrib3dvNV" */,
d41026 1
d41028 1
a41028 1
        Desktop_OpenGL_2_0,
a41029 1
        GL_extension_GL_ARB_vertex_program,
d41034 5
a41038 5
        52607 /* "glVertexAttrib3f" */,
        52607 /* "glVertexAttrib3f" */,
        52624 /* "glVertexAttrib3fARB" */,
        52624 /* "glVertexAttrib3fARB" */,
        52644 /* "glVertexAttrib3fNV" */,
d41040 1
a41040 1
    return gl_provider_resolver(entrypoint_strings + 52607 /* "glVertexAttrib3f" */,
d41048 1
d41050 1
a41050 1
        GL_extension_GL_ARB_vertex_program,
a41051 1
        Desktop_OpenGL_2_0,
d41056 5
a41060 5
        52624 /* "glVertexAttrib3fARB" */,
        52624 /* "glVertexAttrib3fARB" */,
        52607 /* "glVertexAttrib3f" */,
        52607 /* "glVertexAttrib3f" */,
        52644 /* "glVertexAttrib3fNV" */,
d41062 1
a41062 1
    return gl_provider_resolver(entrypoint_strings + 52624 /* "glVertexAttrib3fARB" */,
d41071 1
d41073 1
a41073 1
        Desktop_OpenGL_2_0,
a41074 1
        GL_extension_GL_ARB_vertex_program,
d41078 5
a41082 5
        52644 /* "glVertexAttrib3fNV" */,
        52607 /* "glVertexAttrib3f" */,
        52607 /* "glVertexAttrib3f" */,
        52624 /* "glVertexAttrib3fARB" */,
        52624 /* "glVertexAttrib3fARB" */,
d41084 1
a41084 1
    return gl_provider_resolver(entrypoint_strings + 52644 /* "glVertexAttrib3fNV" */,
d41092 1
d41094 1
a41094 1
        Desktop_OpenGL_2_0,
a41095 1
        GL_extension_GL_ARB_vertex_program,
d41100 5
a41104 5
        52663 /* "glVertexAttrib3fv" */,
        52663 /* "glVertexAttrib3fv" */,
        52681 /* "glVertexAttrib3fvARB" */,
        52681 /* "glVertexAttrib3fvARB" */,
        52702 /* "glVertexAttrib3fvNV" */,
d41106 1
a41106 1
    return gl_provider_resolver(entrypoint_strings + 52663 /* "glVertexAttrib3fv" */,
d41114 1
d41116 1
a41116 1
        GL_extension_GL_ARB_vertex_program,
a41117 1
        Desktop_OpenGL_2_0,
d41122 5
a41126 5
        52681 /* "glVertexAttrib3fvARB" */,
        52681 /* "glVertexAttrib3fvARB" */,
        52663 /* "glVertexAttrib3fv" */,
        52663 /* "glVertexAttrib3fv" */,
        52702 /* "glVertexAttrib3fvNV" */,
d41128 1
a41128 1
    return gl_provider_resolver(entrypoint_strings + 52681 /* "glVertexAttrib3fvARB" */,
d41137 1
d41139 1
a41139 1
        Desktop_OpenGL_2_0,
a41140 1
        GL_extension_GL_ARB_vertex_program,
d41144 5
a41148 5
        52702 /* "glVertexAttrib3fvNV" */,
        52663 /* "glVertexAttrib3fv" */,
        52663 /* "glVertexAttrib3fv" */,
        52681 /* "glVertexAttrib3fvARB" */,
        52681 /* "glVertexAttrib3fvARB" */,
d41150 1
a41150 1
    return gl_provider_resolver(entrypoint_strings + 52702 /* "glVertexAttrib3fvNV" */,
d41157 1
a41157 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 52722 /* glVertexAttrib3hNV */);
d41163 1
a41163 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 52741 /* glVertexAttrib3hvNV */);
d41171 1
a41172 1
        GL_extension_GL_ARB_vertex_program,
d41177 4
a41180 4
        52761 /* "glVertexAttrib3s" */,
        52778 /* "glVertexAttrib3sARB" */,
        52778 /* "glVertexAttrib3sARB" */,
        52798 /* "glVertexAttrib3sNV" */,
d41182 1
a41182 1
    return gl_provider_resolver(entrypoint_strings + 52761 /* "glVertexAttrib3s" */,
d41190 1
a41191 1
        GL_extension_GL_ARB_vertex_program,
d41197 4
a41200 4
        52778 /* "glVertexAttrib3sARB" */,
        52778 /* "glVertexAttrib3sARB" */,
        52761 /* "glVertexAttrib3s" */,
        52798 /* "glVertexAttrib3sNV" */,
d41202 1
a41202 1
    return gl_provider_resolver(entrypoint_strings + 52778 /* "glVertexAttrib3sARB" */,
d41212 1
a41213 1
        GL_extension_GL_ARB_vertex_program,
d41217 4
a41220 4
        52798 /* "glVertexAttrib3sNV" */,
        52761 /* "glVertexAttrib3s" */,
        52778 /* "glVertexAttrib3sARB" */,
        52778 /* "glVertexAttrib3sARB" */,
d41222 1
a41222 1
    return gl_provider_resolver(entrypoint_strings + 52798 /* "glVertexAttrib3sNV" */,
d41231 1
a41232 1
        GL_extension_GL_ARB_vertex_program,
d41237 4
a41240 4
        52817 /* "glVertexAttrib3sv" */,
        52835 /* "glVertexAttrib3svARB" */,
        52835 /* "glVertexAttrib3svARB" */,
        52856 /* "glVertexAttrib3svNV" */,
d41242 1
a41242 1
    return gl_provider_resolver(entrypoint_strings + 52817 /* "glVertexAttrib3sv" */,
d41250 1
a41251 1
        GL_extension_GL_ARB_vertex_program,
d41257 4
a41260 4
        52835 /* "glVertexAttrib3svARB" */,
        52835 /* "glVertexAttrib3svARB" */,
        52817 /* "glVertexAttrib3sv" */,
        52856 /* "glVertexAttrib3svNV" */,
d41262 1
a41262 1
    return gl_provider_resolver(entrypoint_strings + 52835 /* "glVertexAttrib3svARB" */,
d41272 1
a41273 1
        GL_extension_GL_ARB_vertex_program,
d41277 4
a41280 4
        52856 /* "glVertexAttrib3svNV" */,
        52817 /* "glVertexAttrib3sv" */,
        52835 /* "glVertexAttrib3svARB" */,
        52835 /* "glVertexAttrib3svARB" */,
d41282 1
a41282 1
    return gl_provider_resolver(entrypoint_strings + 52856 /* "glVertexAttrib3svNV" */,
d41291 1
a41292 1
        GL_extension_GL_ARB_vertex_program,
d41296 3
a41298 3
        52876 /* "glVertexAttrib4Nbv" */,
        52895 /* "glVertexAttrib4NbvARB" */,
        52895 /* "glVertexAttrib4NbvARB" */,
d41300 1
a41300 1
    return gl_provider_resolver(entrypoint_strings + 52876 /* "glVertexAttrib4Nbv" */,
d41308 1
a41309 1
        GL_extension_GL_ARB_vertex_program,
d41314 3
a41316 3
        52895 /* "glVertexAttrib4NbvARB" */,
        52895 /* "glVertexAttrib4NbvARB" */,
        52876 /* "glVertexAttrib4Nbv" */,
d41318 1
a41318 1
    return gl_provider_resolver(entrypoint_strings + 52895 /* "glVertexAttrib4NbvARB" */,
d41327 1
a41328 1
        GL_extension_GL_ARB_vertex_program,
d41332 3
a41334 3
        52917 /* "glVertexAttrib4Niv" */,
        52936 /* "glVertexAttrib4NivARB" */,
        52936 /* "glVertexAttrib4NivARB" */,
d41336 1
a41336 1
    return gl_provider_resolver(entrypoint_strings + 52917 /* "glVertexAttrib4Niv" */,
d41344 1
a41345 1
        GL_extension_GL_ARB_vertex_program,
d41350 3
a41352 3
        52936 /* "glVertexAttrib4NivARB" */,
        52936 /* "glVertexAttrib4NivARB" */,
        52917 /* "glVertexAttrib4Niv" */,
d41354 1
a41354 1
    return gl_provider_resolver(entrypoint_strings + 52936 /* "glVertexAttrib4NivARB" */,
d41363 1
a41364 1
        GL_extension_GL_ARB_vertex_program,
d41368 3
a41370 3
        52958 /* "glVertexAttrib4Nsv" */,
        52977 /* "glVertexAttrib4NsvARB" */,
        52977 /* "glVertexAttrib4NsvARB" */,
d41372 1
a41372 1
    return gl_provider_resolver(entrypoint_strings + 52958 /* "glVertexAttrib4Nsv" */,
d41380 1
a41381 1
        GL_extension_GL_ARB_vertex_program,
d41386 3
a41388 3
        52977 /* "glVertexAttrib4NsvARB" */,
        52977 /* "glVertexAttrib4NsvARB" */,
        52958 /* "glVertexAttrib4Nsv" */,
d41390 1
a41390 1
    return gl_provider_resolver(entrypoint_strings + 52977 /* "glVertexAttrib4NsvARB" */,
d41399 1
a41400 1
        GL_extension_GL_ARB_vertex_program,
d41405 4
a41408 4
        52999 /* "glVertexAttrib4Nub" */,
        53018 /* "glVertexAttrib4NubARB" */,
        53018 /* "glVertexAttrib4NubARB" */,
        53631 /* "glVertexAttrib4ubNV" */,
d41410 1
a41410 1
    return gl_provider_resolver(entrypoint_strings + 52999 /* "glVertexAttrib4Nub" */,
d41418 1
a41419 1
        GL_extension_GL_ARB_vertex_program,
d41425 4
a41428 4
        53018 /* "glVertexAttrib4NubARB" */,
        53018 /* "glVertexAttrib4NubARB" */,
        52999 /* "glVertexAttrib4Nub" */,
        53631 /* "glVertexAttrib4ubNV" */,
d41430 1
a41430 1
    return gl_provider_resolver(entrypoint_strings + 53018 /* "glVertexAttrib4NubARB" */,
d41439 1
a41440 1
        GL_extension_GL_ARB_vertex_program,
d41445 4
a41448 4
        53040 /* "glVertexAttrib4Nubv" */,
        53060 /* "glVertexAttrib4NubvARB" */,
        53060 /* "glVertexAttrib4NubvARB" */,
        53692 /* "glVertexAttrib4ubvNV" */,
d41450 1
a41450 1
    return gl_provider_resolver(entrypoint_strings + 53040 /* "glVertexAttrib4Nubv" */,
d41458 1
a41459 1
        GL_extension_GL_ARB_vertex_program,
d41465 4
a41468 4
        53060 /* "glVertexAttrib4NubvARB" */,
        53060 /* "glVertexAttrib4NubvARB" */,
        53040 /* "glVertexAttrib4Nubv" */,
        53692 /* "glVertexAttrib4ubvNV" */,
d41470 1
a41470 1
    return gl_provider_resolver(entrypoint_strings + 53060 /* "glVertexAttrib4NubvARB" */,
d41479 1
a41480 1
        GL_extension_GL_ARB_vertex_program,
d41484 3
a41486 3
        53083 /* "glVertexAttrib4Nuiv" */,
        53103 /* "glVertexAttrib4NuivARB" */,
        53103 /* "glVertexAttrib4NuivARB" */,
d41488 1
a41488 1
    return gl_provider_resolver(entrypoint_strings + 53083 /* "glVertexAttrib4Nuiv" */,
d41496 1
a41497 1
        GL_extension_GL_ARB_vertex_program,
d41502 3
a41504 3
        53103 /* "glVertexAttrib4NuivARB" */,
        53103 /* "glVertexAttrib4NuivARB" */,
        53083 /* "glVertexAttrib4Nuiv" */,
d41506 1
a41506 1
    return gl_provider_resolver(entrypoint_strings + 53103 /* "glVertexAttrib4NuivARB" */,
d41515 1
a41516 1
        GL_extension_GL_ARB_vertex_program,
d41520 3
a41522 3
        53126 /* "glVertexAttrib4Nusv" */,
        53146 /* "glVertexAttrib4NusvARB" */,
        53146 /* "glVertexAttrib4NusvARB" */,
d41524 1
a41524 1
    return gl_provider_resolver(entrypoint_strings + 53126 /* "glVertexAttrib4Nusv" */,
d41532 1
a41533 1
        GL_extension_GL_ARB_vertex_program,
d41538 3
a41540 3
        53146 /* "glVertexAttrib4NusvARB" */,
        53146 /* "glVertexAttrib4NusvARB" */,
        53126 /* "glVertexAttrib4Nusv" */,
d41542 1
a41542 1
    return gl_provider_resolver(entrypoint_strings + 53146 /* "glVertexAttrib4NusvARB" */,
d41551 1
a41552 1
        GL_extension_GL_ARB_vertex_program,
d41556 3
a41558 3
        53169 /* "glVertexAttrib4bv" */,
        53187 /* "glVertexAttrib4bvARB" */,
        53187 /* "glVertexAttrib4bvARB" */,
d41560 1
a41560 1
    return gl_provider_resolver(entrypoint_strings + 53169 /* "glVertexAttrib4bv" */,
d41568 1
a41569 1
        GL_extension_GL_ARB_vertex_program,
d41574 3
a41576 3
        53187 /* "glVertexAttrib4bvARB" */,
        53187 /* "glVertexAttrib4bvARB" */,
        53169 /* "glVertexAttrib4bv" */,
d41578 1
a41578 1
    return gl_provider_resolver(entrypoint_strings + 53187 /* "glVertexAttrib4bvARB" */,
d41587 1
a41588 1
        GL_extension_GL_ARB_vertex_program,
d41593 4
a41596 4
        53208 /* "glVertexAttrib4d" */,
        53225 /* "glVertexAttrib4dARB" */,
        53225 /* "glVertexAttrib4dARB" */,
        53245 /* "glVertexAttrib4dNV" */,
d41598 1
a41598 1
    return gl_provider_resolver(entrypoint_strings + 53208 /* "glVertexAttrib4d" */,
d41606 1
a41607 1
        GL_extension_GL_ARB_vertex_program,
d41613 4
a41616 4
        53225 /* "glVertexAttrib4dARB" */,
        53225 /* "glVertexAttrib4dARB" */,
        53208 /* "glVertexAttrib4d" */,
        53245 /* "glVertexAttrib4dNV" */,
d41618 1
a41618 1
    return gl_provider_resolver(entrypoint_strings + 53225 /* "glVertexAttrib4dARB" */,
d41628 1
a41629 1
        GL_extension_GL_ARB_vertex_program,
d41633 4
a41636 4
        53245 /* "glVertexAttrib4dNV" */,
        53208 /* "glVertexAttrib4d" */,
        53225 /* "glVertexAttrib4dARB" */,
        53225 /* "glVertexAttrib4dARB" */,
d41638 1
a41638 1
    return gl_provider_resolver(entrypoint_strings + 53245 /* "glVertexAttrib4dNV" */,
d41647 1
a41648 1
        GL_extension_GL_ARB_vertex_program,
d41653 4
a41656 4
        53264 /* "glVertexAttrib4dv" */,
        53282 /* "glVertexAttrib4dvARB" */,
        53282 /* "glVertexAttrib4dvARB" */,
        53303 /* "glVertexAttrib4dvNV" */,
d41658 1
a41658 1
    return gl_provider_resolver(entrypoint_strings + 53264 /* "glVertexAttrib4dv" */,
d41666 1
a41667 1
        GL_extension_GL_ARB_vertex_program,
d41673 4
a41676 4
        53282 /* "glVertexAttrib4dvARB" */,
        53282 /* "glVertexAttrib4dvARB" */,
        53264 /* "glVertexAttrib4dv" */,
        53303 /* "glVertexAttrib4dvNV" */,
d41678 1
a41678 1
    return gl_provider_resolver(entrypoint_strings + 53282 /* "glVertexAttrib4dvARB" */,
d41688 1
a41689 1
        GL_extension_GL_ARB_vertex_program,
d41693 4
a41696 4
        53303 /* "glVertexAttrib4dvNV" */,
        53264 /* "glVertexAttrib4dv" */,
        53282 /* "glVertexAttrib4dvARB" */,
        53282 /* "glVertexAttrib4dvARB" */,
d41698 1
a41698 1
    return gl_provider_resolver(entrypoint_strings + 53303 /* "glVertexAttrib4dvNV" */,
d41706 1
d41708 1
a41708 1
        Desktop_OpenGL_2_0,
a41709 1
        GL_extension_GL_ARB_vertex_program,
d41714 5
a41718 5
        53323 /* "glVertexAttrib4f" */,
        53323 /* "glVertexAttrib4f" */,
        53340 /* "glVertexAttrib4fARB" */,
        53340 /* "glVertexAttrib4fARB" */,
        53360 /* "glVertexAttrib4fNV" */,
d41720 1
a41720 1
    return gl_provider_resolver(entrypoint_strings + 53323 /* "glVertexAttrib4f" */,
d41728 1
d41730 1
a41730 1
        GL_extension_GL_ARB_vertex_program,
a41731 1
        Desktop_OpenGL_2_0,
d41736 5
a41740 5
        53340 /* "glVertexAttrib4fARB" */,
        53340 /* "glVertexAttrib4fARB" */,
        53323 /* "glVertexAttrib4f" */,
        53323 /* "glVertexAttrib4f" */,
        53360 /* "glVertexAttrib4fNV" */,
d41742 1
a41742 1
    return gl_provider_resolver(entrypoint_strings + 53340 /* "glVertexAttrib4fARB" */,
d41751 1
d41753 1
a41753 1
        Desktop_OpenGL_2_0,
a41754 1
        GL_extension_GL_ARB_vertex_program,
d41758 5
a41762 5
        53360 /* "glVertexAttrib4fNV" */,
        53323 /* "glVertexAttrib4f" */,
        53323 /* "glVertexAttrib4f" */,
        53340 /* "glVertexAttrib4fARB" */,
        53340 /* "glVertexAttrib4fARB" */,
d41764 1
a41764 1
    return gl_provider_resolver(entrypoint_strings + 53360 /* "glVertexAttrib4fNV" */,
d41772 1
d41774 1
a41774 1
        Desktop_OpenGL_2_0,
a41775 1
        GL_extension_GL_ARB_vertex_program,
d41780 5
a41784 5
        53379 /* "glVertexAttrib4fv" */,
        53379 /* "glVertexAttrib4fv" */,
        53397 /* "glVertexAttrib4fvARB" */,
        53397 /* "glVertexAttrib4fvARB" */,
        53418 /* "glVertexAttrib4fvNV" */,
d41786 1
a41786 1
    return gl_provider_resolver(entrypoint_strings + 53379 /* "glVertexAttrib4fv" */,
d41794 1
d41796 1
a41796 1
        GL_extension_GL_ARB_vertex_program,
a41797 1
        Desktop_OpenGL_2_0,
d41802 5
a41806 5
        53397 /* "glVertexAttrib4fvARB" */,
        53397 /* "glVertexAttrib4fvARB" */,
        53379 /* "glVertexAttrib4fv" */,
        53379 /* "glVertexAttrib4fv" */,
        53418 /* "glVertexAttrib4fvNV" */,
d41808 1
a41808 1
    return gl_provider_resolver(entrypoint_strings + 53397 /* "glVertexAttrib4fvARB" */,
d41817 1
d41819 1
a41819 1
        Desktop_OpenGL_2_0,
a41820 1
        GL_extension_GL_ARB_vertex_program,
d41824 5
a41828 5
        53418 /* "glVertexAttrib4fvNV" */,
        53379 /* "glVertexAttrib4fv" */,
        53379 /* "glVertexAttrib4fv" */,
        53397 /* "glVertexAttrib4fvARB" */,
        53397 /* "glVertexAttrib4fvARB" */,
d41830 1
a41830 1
    return gl_provider_resolver(entrypoint_strings + 53418 /* "glVertexAttrib4fvNV" */,
d41837 1
a41837 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 53438 /* glVertexAttrib4hNV */);
d41843 1
a41843 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 53457 /* glVertexAttrib4hvNV */);
d41851 1
a41852 1
        GL_extension_GL_ARB_vertex_program,
d41856 3
a41858 3
        53477 /* "glVertexAttrib4iv" */,
        53495 /* "glVertexAttrib4ivARB" */,
        53495 /* "glVertexAttrib4ivARB" */,
d41860 1
a41860 1
    return gl_provider_resolver(entrypoint_strings + 53477 /* "glVertexAttrib4iv" */,
d41868 1
a41869 1
        GL_extension_GL_ARB_vertex_program,
d41874 3
a41876 3
        53495 /* "glVertexAttrib4ivARB" */,
        53495 /* "glVertexAttrib4ivARB" */,
        53477 /* "glVertexAttrib4iv" */,
d41878 1
a41878 1
    return gl_provider_resolver(entrypoint_strings + 53495 /* "glVertexAttrib4ivARB" */,
d41887 1
a41888 1
        GL_extension_GL_ARB_vertex_program,
d41893 4
a41896 4
        53516 /* "glVertexAttrib4s" */,
        53533 /* "glVertexAttrib4sARB" */,
        53533 /* "glVertexAttrib4sARB" */,
        53553 /* "glVertexAttrib4sNV" */,
d41898 1
a41898 1
    return gl_provider_resolver(entrypoint_strings + 53516 /* "glVertexAttrib4s" */,
d41906 1
a41907 1
        GL_extension_GL_ARB_vertex_program,
d41913 4
a41916 4
        53533 /* "glVertexAttrib4sARB" */,
        53533 /* "glVertexAttrib4sARB" */,
        53516 /* "glVertexAttrib4s" */,
        53553 /* "glVertexAttrib4sNV" */,
d41918 1
a41918 1
    return gl_provider_resolver(entrypoint_strings + 53533 /* "glVertexAttrib4sARB" */,
d41928 1
a41929 1
        GL_extension_GL_ARB_vertex_program,
d41933 4
a41936 4
        53553 /* "glVertexAttrib4sNV" */,
        53516 /* "glVertexAttrib4s" */,
        53533 /* "glVertexAttrib4sARB" */,
        53533 /* "glVertexAttrib4sARB" */,
d41938 1
a41938 1
    return gl_provider_resolver(entrypoint_strings + 53553 /* "glVertexAttrib4sNV" */,
d41947 1
a41948 1
        GL_extension_GL_ARB_vertex_program,
d41953 4
a41956 4
        53572 /* "glVertexAttrib4sv" */,
        53590 /* "glVertexAttrib4svARB" */,
        53590 /* "glVertexAttrib4svARB" */,
        53611 /* "glVertexAttrib4svNV" */,
d41958 1
a41958 1
    return gl_provider_resolver(entrypoint_strings + 53572 /* "glVertexAttrib4sv" */,
d41966 1
a41967 1
        GL_extension_GL_ARB_vertex_program,
d41973 4
a41976 4
        53590 /* "glVertexAttrib4svARB" */,
        53590 /* "glVertexAttrib4svARB" */,
        53572 /* "glVertexAttrib4sv" */,
        53611 /* "glVertexAttrib4svNV" */,
d41978 1
a41978 1
    return gl_provider_resolver(entrypoint_strings + 53590 /* "glVertexAttrib4svARB" */,
d41988 1
a41989 1
        GL_extension_GL_ARB_vertex_program,
d41993 4
a41996 4
        53611 /* "glVertexAttrib4svNV" */,
        53572 /* "glVertexAttrib4sv" */,
        53590 /* "glVertexAttrib4svARB" */,
        53590 /* "glVertexAttrib4svARB" */,
d41998 1
a41998 1
    return gl_provider_resolver(entrypoint_strings + 53611 /* "glVertexAttrib4svNV" */,
d42008 1
a42009 1
        GL_extension_GL_ARB_vertex_program,
d42013 4
a42016 4
        53631 /* "glVertexAttrib4ubNV" */,
        52999 /* "glVertexAttrib4Nub" */,
        53018 /* "glVertexAttrib4NubARB" */,
        53018 /* "glVertexAttrib4NubARB" */,
d42018 1
a42018 1
    return gl_provider_resolver(entrypoint_strings + 53631 /* "glVertexAttrib4ubNV" */,
d42027 1
a42028 1
        GL_extension_GL_ARB_vertex_program,
d42032 3
a42034 3
        53651 /* "glVertexAttrib4ubv" */,
        53670 /* "glVertexAttrib4ubvARB" */,
        53670 /* "glVertexAttrib4ubvARB" */,
d42036 1
a42036 1
    return gl_provider_resolver(entrypoint_strings + 53651 /* "glVertexAttrib4ubv" */,
d42044 1
a42045 1
        GL_extension_GL_ARB_vertex_program,
d42050 3
a42052 3
        53670 /* "glVertexAttrib4ubvARB" */,
        53670 /* "glVertexAttrib4ubvARB" */,
        53651 /* "glVertexAttrib4ubv" */,
d42054 1
a42054 1
    return gl_provider_resolver(entrypoint_strings + 53670 /* "glVertexAttrib4ubvARB" */,
d42064 1
a42065 1
        GL_extension_GL_ARB_vertex_program,
d42069 4
a42072 4
        53692 /* "glVertexAttrib4ubvNV" */,
        53040 /* "glVertexAttrib4Nubv" */,
        53060 /* "glVertexAttrib4NubvARB" */,
        53060 /* "glVertexAttrib4NubvARB" */,
d42074 1
a42074 1
    return gl_provider_resolver(entrypoint_strings + 53692 /* "glVertexAttrib4ubvNV" */,
d42083 1
a42084 1
        GL_extension_GL_ARB_vertex_program,
d42088 3
a42090 3
        53713 /* "glVertexAttrib4uiv" */,
        53732 /* "glVertexAttrib4uivARB" */,
        53732 /* "glVertexAttrib4uivARB" */,
d42092 1
a42092 1
    return gl_provider_resolver(entrypoint_strings + 53713 /* "glVertexAttrib4uiv" */,
d42100 1
a42101 1
        GL_extension_GL_ARB_vertex_program,
d42106 3
a42108 3
        53732 /* "glVertexAttrib4uivARB" */,
        53732 /* "glVertexAttrib4uivARB" */,
        53713 /* "glVertexAttrib4uiv" */,
d42110 1
a42110 1
    return gl_provider_resolver(entrypoint_strings + 53732 /* "glVertexAttrib4uivARB" */,
d42119 1
a42120 1
        GL_extension_GL_ARB_vertex_program,
d42124 3
a42126 3
        53754 /* "glVertexAttrib4usv" */,
        53773 /* "glVertexAttrib4usvARB" */,
        53773 /* "glVertexAttrib4usvARB" */,
d42128 1
a42128 1
    return gl_provider_resolver(entrypoint_strings + 53754 /* "glVertexAttrib4usv" */,
d42136 1
a42137 1
        GL_extension_GL_ARB_vertex_program,
d42142 3
a42144 3
        53773 /* "glVertexAttrib4usvARB" */,
        53773 /* "glVertexAttrib4usvARB" */,
        53754 /* "glVertexAttrib4usv" */,
d42146 1
a42146 1
    return gl_provider_resolver(entrypoint_strings + 53773 /* "glVertexAttrib4usvARB" */,
d42153 1
a42153 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_attrib_array_object, 53795 /* glVertexAttribArrayObjectATI */);
d42160 1
a42161 1
        Desktop_OpenGL_4_3,
d42166 3
a42168 3
        53824 /* "glVertexAttribBinding" */,
        53824 /* "glVertexAttribBinding" */,
        53824 /* "glVertexAttribBinding" */,
d42170 1
a42170 1
    return gl_provider_resolver(entrypoint_strings + 53824 /* "glVertexAttribBinding" */,
d42187 6
a42192 6
        53846 /* "glVertexAttribDivisor" */,
        53846 /* "glVertexAttribDivisor" */,
        53868 /* "glVertexAttribDivisorANGLE" */,
        53895 /* "glVertexAttribDivisorARB" */,
        53920 /* "glVertexAttribDivisorEXT" */,
        53945 /* "glVertexAttribDivisorNV" */,
d42194 1
a42194 1
    return gl_provider_resolver(entrypoint_strings + 53846 /* "glVertexAttribDivisor" */,
d42211 6
a42216 6
        53868 /* "glVertexAttribDivisorANGLE" */,
        53846 /* "glVertexAttribDivisor" */,
        53846 /* "glVertexAttribDivisor" */,
        53895 /* "glVertexAttribDivisorARB" */,
        53920 /* "glVertexAttribDivisorEXT" */,
        53945 /* "glVertexAttribDivisorNV" */,
d42218 1
a42218 1
    return gl_provider_resolver(entrypoint_strings + 53868 /* "glVertexAttribDivisorANGLE" */,
d42235 6
a42240 6
        53895 /* "glVertexAttribDivisorARB" */,
        53846 /* "glVertexAttribDivisor" */,
        53846 /* "glVertexAttribDivisor" */,
        53868 /* "glVertexAttribDivisorANGLE" */,
        53920 /* "glVertexAttribDivisorEXT" */,
        53945 /* "glVertexAttribDivisorNV" */,
d42242 1
a42242 1
    return gl_provider_resolver(entrypoint_strings + 53895 /* "glVertexAttribDivisorARB" */,
d42259 6
a42264 6
        53920 /* "glVertexAttribDivisorEXT" */,
        53846 /* "glVertexAttribDivisor" */,
        53846 /* "glVertexAttribDivisor" */,
        53868 /* "glVertexAttribDivisorANGLE" */,
        53895 /* "glVertexAttribDivisorARB" */,
        53945 /* "glVertexAttribDivisorNV" */,
d42266 1
a42266 1
    return gl_provider_resolver(entrypoint_strings + 53920 /* "glVertexAttribDivisorEXT" */,
d42283 6
a42288 6
        53945 /* "glVertexAttribDivisorNV" */,
        53846 /* "glVertexAttribDivisor" */,
        53846 /* "glVertexAttribDivisor" */,
        53868 /* "glVertexAttribDivisorANGLE" */,
        53895 /* "glVertexAttribDivisorARB" */,
        53920 /* "glVertexAttribDivisorEXT" */,
d42290 1
a42290 1
    return gl_provider_resolver(entrypoint_strings + 53945 /* "glVertexAttribDivisorNV" */,
d42298 1
a42299 1
        Desktop_OpenGL_4_3,
d42304 3
a42306 3
        53969 /* "glVertexAttribFormat" */,
        53969 /* "glVertexAttribFormat" */,
        53969 /* "glVertexAttribFormat" */,
d42308 1
a42308 1
    return gl_provider_resolver(entrypoint_strings + 53969 /* "glVertexAttribFormat" */,
d42315 1
a42315 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 53990 /* glVertexAttribFormatNV */);
d42327 2
a42328 2
        54013 /* "glVertexAttribI1i" */,
        54031 /* "glVertexAttribI1iEXT" */,
d42330 1
a42330 1
    return gl_provider_resolver(entrypoint_strings + 54013 /* "glVertexAttribI1i" */,
d42343 2
a42344 2
        54031 /* "glVertexAttribI1iEXT" */,
        54013 /* "glVertexAttribI1i" */,
d42346 1
a42346 1
    return gl_provider_resolver(entrypoint_strings + 54031 /* "glVertexAttribI1iEXT" */,
d42359 2
a42360 2
        54052 /* "glVertexAttribI1iv" */,
        54071 /* "glVertexAttribI1ivEXT" */,
d42362 1
a42362 1
    return gl_provider_resolver(entrypoint_strings + 54052 /* "glVertexAttribI1iv" */,
d42375 2
a42376 2
        54071 /* "glVertexAttribI1ivEXT" */,
        54052 /* "glVertexAttribI1iv" */,
d42378 1
a42378 1
    return gl_provider_resolver(entrypoint_strings + 54071 /* "glVertexAttribI1ivEXT" */,
d42391 2
a42392 2
        54093 /* "glVertexAttribI1ui" */,
        54112 /* "glVertexAttribI1uiEXT" */,
d42394 1
a42394 1
    return gl_provider_resolver(entrypoint_strings + 54093 /* "glVertexAttribI1ui" */,
d42407 2
a42408 2
        54112 /* "glVertexAttribI1uiEXT" */,
        54093 /* "glVertexAttribI1ui" */,
d42410 1
a42410 1
    return gl_provider_resolver(entrypoint_strings + 54112 /* "glVertexAttribI1uiEXT" */,
d42423 2
a42424 2
        54134 /* "glVertexAttribI1uiv" */,
        54154 /* "glVertexAttribI1uivEXT" */,
d42426 1
a42426 1
    return gl_provider_resolver(entrypoint_strings + 54134 /* "glVertexAttribI1uiv" */,
d42439 2
a42440 2
        54154 /* "glVertexAttribI1uivEXT" */,
        54134 /* "glVertexAttribI1uiv" */,
d42442 1
a42442 1
    return gl_provider_resolver(entrypoint_strings + 54154 /* "glVertexAttribI1uivEXT" */,
d42455 2
a42456 2
        54177 /* "glVertexAttribI2i" */,
        54195 /* "glVertexAttribI2iEXT" */,
d42458 1
a42458 1
    return gl_provider_resolver(entrypoint_strings + 54177 /* "glVertexAttribI2i" */,
d42471 2
a42472 2
        54195 /* "glVertexAttribI2iEXT" */,
        54177 /* "glVertexAttribI2i" */,
d42474 1
a42474 1
    return gl_provider_resolver(entrypoint_strings + 54195 /* "glVertexAttribI2iEXT" */,
d42487 2
a42488 2
        54216 /* "glVertexAttribI2iv" */,
        54235 /* "glVertexAttribI2ivEXT" */,
d42490 1
a42490 1
    return gl_provider_resolver(entrypoint_strings + 54216 /* "glVertexAttribI2iv" */,
d42503 2
a42504 2
        54235 /* "glVertexAttribI2ivEXT" */,
        54216 /* "glVertexAttribI2iv" */,
d42506 1
a42506 1
    return gl_provider_resolver(entrypoint_strings + 54235 /* "glVertexAttribI2ivEXT" */,
d42519 2
a42520 2
        54257 /* "glVertexAttribI2ui" */,
        54276 /* "glVertexAttribI2uiEXT" */,
d42522 1
a42522 1
    return gl_provider_resolver(entrypoint_strings + 54257 /* "glVertexAttribI2ui" */,
d42535 2
a42536 2
        54276 /* "glVertexAttribI2uiEXT" */,
        54257 /* "glVertexAttribI2ui" */,
d42538 1
a42538 1
    return gl_provider_resolver(entrypoint_strings + 54276 /* "glVertexAttribI2uiEXT" */,
d42551 2
a42552 2
        54298 /* "glVertexAttribI2uiv" */,
        54318 /* "glVertexAttribI2uivEXT" */,
d42554 1
a42554 1
    return gl_provider_resolver(entrypoint_strings + 54298 /* "glVertexAttribI2uiv" */,
d42567 2
a42568 2
        54318 /* "glVertexAttribI2uivEXT" */,
        54298 /* "glVertexAttribI2uiv" */,
d42570 1
a42570 1
    return gl_provider_resolver(entrypoint_strings + 54318 /* "glVertexAttribI2uivEXT" */,
d42583 2
a42584 2
        54341 /* "glVertexAttribI3i" */,
        54359 /* "glVertexAttribI3iEXT" */,
d42586 1
a42586 1
    return gl_provider_resolver(entrypoint_strings + 54341 /* "glVertexAttribI3i" */,
d42599 2
a42600 2
        54359 /* "glVertexAttribI3iEXT" */,
        54341 /* "glVertexAttribI3i" */,
d42602 1
a42602 1
    return gl_provider_resolver(entrypoint_strings + 54359 /* "glVertexAttribI3iEXT" */,
d42615 2
a42616 2
        54380 /* "glVertexAttribI3iv" */,
        54399 /* "glVertexAttribI3ivEXT" */,
d42618 1
a42618 1
    return gl_provider_resolver(entrypoint_strings + 54380 /* "glVertexAttribI3iv" */,
d42631 2
a42632 2
        54399 /* "glVertexAttribI3ivEXT" */,
        54380 /* "glVertexAttribI3iv" */,
d42634 1
a42634 1
    return gl_provider_resolver(entrypoint_strings + 54399 /* "glVertexAttribI3ivEXT" */,
d42647 2
a42648 2
        54421 /* "glVertexAttribI3ui" */,
        54440 /* "glVertexAttribI3uiEXT" */,
d42650 1
a42650 1
    return gl_provider_resolver(entrypoint_strings + 54421 /* "glVertexAttribI3ui" */,
d42663 2
a42664 2
        54440 /* "glVertexAttribI3uiEXT" */,
        54421 /* "glVertexAttribI3ui" */,
d42666 1
a42666 1
    return gl_provider_resolver(entrypoint_strings + 54440 /* "glVertexAttribI3uiEXT" */,
d42679 2
a42680 2
        54462 /* "glVertexAttribI3uiv" */,
        54482 /* "glVertexAttribI3uivEXT" */,
d42682 1
a42682 1
    return gl_provider_resolver(entrypoint_strings + 54462 /* "glVertexAttribI3uiv" */,
d42695 2
a42696 2
        54482 /* "glVertexAttribI3uivEXT" */,
        54462 /* "glVertexAttribI3uiv" */,
d42698 1
a42698 1
    return gl_provider_resolver(entrypoint_strings + 54482 /* "glVertexAttribI3uivEXT" */,
d42711 2
a42712 2
        54505 /* "glVertexAttribI4bv" */,
        54524 /* "glVertexAttribI4bvEXT" */,
d42714 1
a42714 1
    return gl_provider_resolver(entrypoint_strings + 54505 /* "glVertexAttribI4bv" */,
d42727 2
a42728 2
        54524 /* "glVertexAttribI4bvEXT" */,
        54505 /* "glVertexAttribI4bv" */,
d42730 1
a42730 1
    return gl_provider_resolver(entrypoint_strings + 54524 /* "glVertexAttribI4bvEXT" */,
d42744 3
a42746 3
        54546 /* "glVertexAttribI4i" */,
        54546 /* "glVertexAttribI4i" */,
        54564 /* "glVertexAttribI4iEXT" */,
d42748 1
a42748 1
    return gl_provider_resolver(entrypoint_strings + 54546 /* "glVertexAttribI4i" */,
d42762 3
a42764 3
        54564 /* "glVertexAttribI4iEXT" */,
        54546 /* "glVertexAttribI4i" */,
        54546 /* "glVertexAttribI4i" */,
d42766 1
a42766 1
    return gl_provider_resolver(entrypoint_strings + 54564 /* "glVertexAttribI4iEXT" */,
d42780 3
a42782 3
        54585 /* "glVertexAttribI4iv" */,
        54585 /* "glVertexAttribI4iv" */,
        54604 /* "glVertexAttribI4ivEXT" */,
d42784 1
a42784 1
    return gl_provider_resolver(entrypoint_strings + 54585 /* "glVertexAttribI4iv" */,
d42798 3
a42800 3
        54604 /* "glVertexAttribI4ivEXT" */,
        54585 /* "glVertexAttribI4iv" */,
        54585 /* "glVertexAttribI4iv" */,
d42802 1
a42802 1
    return gl_provider_resolver(entrypoint_strings + 54604 /* "glVertexAttribI4ivEXT" */,
d42815 2
a42816 2
        54626 /* "glVertexAttribI4sv" */,
        54645 /* "glVertexAttribI4svEXT" */,
d42818 1
a42818 1
    return gl_provider_resolver(entrypoint_strings + 54626 /* "glVertexAttribI4sv" */,
d42831 2
a42832 2
        54645 /* "glVertexAttribI4svEXT" */,
        54626 /* "glVertexAttribI4sv" */,
d42834 1
a42834 1
    return gl_provider_resolver(entrypoint_strings + 54645 /* "glVertexAttribI4svEXT" */,
d42847 2
a42848 2
        54667 /* "glVertexAttribI4ubv" */,
        54687 /* "glVertexAttribI4ubvEXT" */,
d42850 1
a42850 1
    return gl_provider_resolver(entrypoint_strings + 54667 /* "glVertexAttribI4ubv" */,
d42863 2
a42864 2
        54687 /* "glVertexAttribI4ubvEXT" */,
        54667 /* "glVertexAttribI4ubv" */,
d42866 1
a42866 1
    return gl_provider_resolver(entrypoint_strings + 54687 /* "glVertexAttribI4ubvEXT" */,
d42880 3
a42882 3
        54710 /* "glVertexAttribI4ui" */,
        54710 /* "glVertexAttribI4ui" */,
        54729 /* "glVertexAttribI4uiEXT" */,
d42884 1
a42884 1
    return gl_provider_resolver(entrypoint_strings + 54710 /* "glVertexAttribI4ui" */,
d42898 3
a42900 3
        54729 /* "glVertexAttribI4uiEXT" */,
        54710 /* "glVertexAttribI4ui" */,
        54710 /* "glVertexAttribI4ui" */,
d42902 1
a42902 1
    return gl_provider_resolver(entrypoint_strings + 54729 /* "glVertexAttribI4uiEXT" */,
d42916 3
a42918 3
        54751 /* "glVertexAttribI4uiv" */,
        54751 /* "glVertexAttribI4uiv" */,
        54771 /* "glVertexAttribI4uivEXT" */,
d42920 1
a42920 1
    return gl_provider_resolver(entrypoint_strings + 54751 /* "glVertexAttribI4uiv" */,
d42934 3
a42936 3
        54771 /* "glVertexAttribI4uivEXT" */,
        54751 /* "glVertexAttribI4uiv" */,
        54751 /* "glVertexAttribI4uiv" */,
d42938 1
a42938 1
    return gl_provider_resolver(entrypoint_strings + 54771 /* "glVertexAttribI4uivEXT" */,
d42951 2
a42952 2
        54794 /* "glVertexAttribI4usv" */,
        54814 /* "glVertexAttribI4usvEXT" */,
d42954 1
a42954 1
    return gl_provider_resolver(entrypoint_strings + 54794 /* "glVertexAttribI4usv" */,
d42967 2
a42968 2
        54814 /* "glVertexAttribI4usvEXT" */,
        54794 /* "glVertexAttribI4usv" */,
d42970 1
a42970 1
    return gl_provider_resolver(entrypoint_strings + 54814 /* "glVertexAttribI4usvEXT" */,
d42978 1
a42979 1
        Desktop_OpenGL_4_3,
d42984 3
a42986 3
        54837 /* "glVertexAttribIFormat" */,
        54837 /* "glVertexAttribIFormat" */,
        54837 /* "glVertexAttribIFormat" */,
d42988 1
a42988 1
    return gl_provider_resolver(entrypoint_strings + 54837 /* "glVertexAttribIFormat" */,
d42995 1
a42995 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 54859 /* glVertexAttribIFormatNV */);
d43008 3
a43010 3
        54883 /* "glVertexAttribIPointer" */,
        54883 /* "glVertexAttribIPointer" */,
        54906 /* "glVertexAttribIPointerEXT" */,
d43012 1
a43012 1
    return gl_provider_resolver(entrypoint_strings + 54883 /* "glVertexAttribIPointer" */,
d43026 3
a43028 3
        54906 /* "glVertexAttribIPointerEXT" */,
        54883 /* "glVertexAttribIPointer" */,
        54883 /* "glVertexAttribIPointer" */,
d43030 1
a43030 1
    return gl_provider_resolver(entrypoint_strings + 54906 /* "glVertexAttribIPointerEXT" */,
d43044 3
a43046 3
        54932 /* "glVertexAttribL1d" */,
        54932 /* "glVertexAttribL1d" */,
        54950 /* "glVertexAttribL1dEXT" */,
d43048 1
a43048 1
    return gl_provider_resolver(entrypoint_strings + 54932 /* "glVertexAttribL1d" */,
d43062 3
a43064 3
        54950 /* "glVertexAttribL1dEXT" */,
        54932 /* "glVertexAttribL1d" */,
        54932 /* "glVertexAttribL1d" */,
d43066 1
a43066 1
    return gl_provider_resolver(entrypoint_strings + 54950 /* "glVertexAttribL1dEXT" */,
d43080 3
a43082 3
        54971 /* "glVertexAttribL1dv" */,
        54971 /* "glVertexAttribL1dv" */,
        54990 /* "glVertexAttribL1dvEXT" */,
d43084 1
a43084 1
    return gl_provider_resolver(entrypoint_strings + 54971 /* "glVertexAttribL1dv" */,
d43098 3
a43100 3
        54990 /* "glVertexAttribL1dvEXT" */,
        54971 /* "glVertexAttribL1dv" */,
        54971 /* "glVertexAttribL1dv" */,
d43102 1
a43102 1
    return gl_provider_resolver(entrypoint_strings + 54990 /* "glVertexAttribL1dvEXT" */,
d43109 1
a43109 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55012 /* glVertexAttribL1i64NV */);
d43115 1
a43115 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55034 /* glVertexAttribL1i64vNV */);
d43121 1
a43121 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 55057 /* glVertexAttribL1ui64ARB */);
d43127 1
a43127 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55081 /* glVertexAttribL1ui64NV */);
d43133 1
a43133 1
    return gl_single_resolver(GL_extension_GL_ARB_bindless_texture, 55104 /* glVertexAttribL1ui64vARB */);
d43139 1
a43139 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55129 /* glVertexAttribL1ui64vNV */);
d43152 3
a43154 3
        55153 /* "glVertexAttribL2d" */,
        55153 /* "glVertexAttribL2d" */,
        55171 /* "glVertexAttribL2dEXT" */,
d43156 1
a43156 1
    return gl_provider_resolver(entrypoint_strings + 55153 /* "glVertexAttribL2d" */,
d43170 3
a43172 3
        55171 /* "glVertexAttribL2dEXT" */,
        55153 /* "glVertexAttribL2d" */,
        55153 /* "glVertexAttribL2d" */,
d43174 1
a43174 1
    return gl_provider_resolver(entrypoint_strings + 55171 /* "glVertexAttribL2dEXT" */,
d43188 3
a43190 3
        55192 /* "glVertexAttribL2dv" */,
        55192 /* "glVertexAttribL2dv" */,
        55211 /* "glVertexAttribL2dvEXT" */,
d43192 1
a43192 1
    return gl_provider_resolver(entrypoint_strings + 55192 /* "glVertexAttribL2dv" */,
d43206 3
a43208 3
        55211 /* "glVertexAttribL2dvEXT" */,
        55192 /* "glVertexAttribL2dv" */,
        55192 /* "glVertexAttribL2dv" */,
d43210 1
a43210 1
    return gl_provider_resolver(entrypoint_strings + 55211 /* "glVertexAttribL2dvEXT" */,
d43217 1
a43217 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55233 /* glVertexAttribL2i64NV */);
d43223 1
a43223 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55255 /* glVertexAttribL2i64vNV */);
d43229 1
a43229 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55278 /* glVertexAttribL2ui64NV */);
d43235 1
a43235 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55301 /* glVertexAttribL2ui64vNV */);
d43248 3
a43250 3
        55325 /* "glVertexAttribL3d" */,
        55325 /* "glVertexAttribL3d" */,
        55343 /* "glVertexAttribL3dEXT" */,
d43252 1
a43252 1
    return gl_provider_resolver(entrypoint_strings + 55325 /* "glVertexAttribL3d" */,
d43266 3
a43268 3
        55343 /* "glVertexAttribL3dEXT" */,
        55325 /* "glVertexAttribL3d" */,
        55325 /* "glVertexAttribL3d" */,
d43270 1
a43270 1
    return gl_provider_resolver(entrypoint_strings + 55343 /* "glVertexAttribL3dEXT" */,
d43284 3
a43286 3
        55364 /* "glVertexAttribL3dv" */,
        55364 /* "glVertexAttribL3dv" */,
        55383 /* "glVertexAttribL3dvEXT" */,
d43288 1
a43288 1
    return gl_provider_resolver(entrypoint_strings + 55364 /* "glVertexAttribL3dv" */,
d43302 3
a43304 3
        55383 /* "glVertexAttribL3dvEXT" */,
        55364 /* "glVertexAttribL3dv" */,
        55364 /* "glVertexAttribL3dv" */,
d43306 1
a43306 1
    return gl_provider_resolver(entrypoint_strings + 55383 /* "glVertexAttribL3dvEXT" */,
d43313 1
a43313 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55405 /* glVertexAttribL3i64NV */);
d43319 1
a43319 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55427 /* glVertexAttribL3i64vNV */);
d43325 1
a43325 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55450 /* glVertexAttribL3ui64NV */);
d43331 1
a43331 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55473 /* glVertexAttribL3ui64vNV */);
d43344 3
a43346 3
        55497 /* "glVertexAttribL4d" */,
        55497 /* "glVertexAttribL4d" */,
        55515 /* "glVertexAttribL4dEXT" */,
d43348 1
a43348 1
    return gl_provider_resolver(entrypoint_strings + 55497 /* "glVertexAttribL4d" */,
d43362 3
a43364 3
        55515 /* "glVertexAttribL4dEXT" */,
        55497 /* "glVertexAttribL4d" */,
        55497 /* "glVertexAttribL4d" */,
d43366 1
a43366 1
    return gl_provider_resolver(entrypoint_strings + 55515 /* "glVertexAttribL4dEXT" */,
d43380 3
a43382 3
        55536 /* "glVertexAttribL4dv" */,
        55536 /* "glVertexAttribL4dv" */,
        55555 /* "glVertexAttribL4dvEXT" */,
d43384 1
a43384 1
    return gl_provider_resolver(entrypoint_strings + 55536 /* "glVertexAttribL4dv" */,
d43398 3
a43400 3
        55555 /* "glVertexAttribL4dvEXT" */,
        55536 /* "glVertexAttribL4dv" */,
        55536 /* "glVertexAttribL4dv" */,
d43402 1
a43402 1
    return gl_provider_resolver(entrypoint_strings + 55555 /* "glVertexAttribL4dvEXT" */,
d43409 1
a43409 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55577 /* glVertexAttribL4i64NV */);
d43415 1
a43415 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55599 /* glVertexAttribL4i64vNV */);
d43421 1
a43421 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55622 /* glVertexAttribL4ui64NV */);
d43427 1
a43427 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55645 /* glVertexAttribL4ui64vNV */);
d43434 1
a43435 1
        Desktop_OpenGL_4_3,
d43439 2
a43440 2
        55669 /* "glVertexAttribLFormat" */,
        55669 /* "glVertexAttribLFormat" */,
d43442 1
a43442 1
    return gl_provider_resolver(entrypoint_strings + 55669 /* "glVertexAttribLFormat" */,
d43449 1
a43449 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_attrib_integer_64bit, 55691 /* glVertexAttribLFormatNV */);
d43462 3
a43464 3
        55715 /* "glVertexAttribLPointer" */,
        55715 /* "glVertexAttribLPointer" */,
        55738 /* "glVertexAttribLPointerEXT" */,
d43466 1
a43466 1
    return gl_provider_resolver(entrypoint_strings + 55715 /* "glVertexAttribLPointer" */,
d43480 3
a43482 3
        55738 /* "glVertexAttribLPointerEXT" */,
        55715 /* "glVertexAttribLPointer" */,
        55715 /* "glVertexAttribLPointer" */,
d43484 1
a43484 1
    return gl_provider_resolver(entrypoint_strings + 55738 /* "glVertexAttribLPointerEXT" */,
d43492 1
a43493 1
        Desktop_OpenGL_3_3,
d43497 2
a43498 2
        55764 /* "glVertexAttribP1ui" */,
        55764 /* "glVertexAttribP1ui" */,
d43500 1
a43500 1
    return gl_provider_resolver(entrypoint_strings + 55764 /* "glVertexAttribP1ui" */,
d43508 1
a43509 1
        Desktop_OpenGL_3_3,
d43513 2
a43514 2
        55783 /* "glVertexAttribP1uiv" */,
        55783 /* "glVertexAttribP1uiv" */,
d43516 1
a43516 1
    return gl_provider_resolver(entrypoint_strings + 55783 /* "glVertexAttribP1uiv" */,
d43524 1
a43525 1
        Desktop_OpenGL_3_3,
d43529 2
a43530 2
        55803 /* "glVertexAttribP2ui" */,
        55803 /* "glVertexAttribP2ui" */,
d43532 1
a43532 1
    return gl_provider_resolver(entrypoint_strings + 55803 /* "glVertexAttribP2ui" */,
d43540 1
a43541 1
        Desktop_OpenGL_3_3,
d43545 2
a43546 2
        55822 /* "glVertexAttribP2uiv" */,
        55822 /* "glVertexAttribP2uiv" */,
d43548 1
a43548 1
    return gl_provider_resolver(entrypoint_strings + 55822 /* "glVertexAttribP2uiv" */,
d43556 1
a43557 1
        Desktop_OpenGL_3_3,
d43561 2
a43562 2
        55842 /* "glVertexAttribP3ui" */,
        55842 /* "glVertexAttribP3ui" */,
d43564 1
a43564 1
    return gl_provider_resolver(entrypoint_strings + 55842 /* "glVertexAttribP3ui" */,
d43572 1
a43573 1
        Desktop_OpenGL_3_3,
d43577 2
a43578 2
        55861 /* "glVertexAttribP3uiv" */,
        55861 /* "glVertexAttribP3uiv" */,
d43580 1
a43580 1
    return gl_provider_resolver(entrypoint_strings + 55861 /* "glVertexAttribP3uiv" */,
d43588 1
a43589 1
        Desktop_OpenGL_3_3,
d43593 2
a43594 2
        55881 /* "glVertexAttribP4ui" */,
        55881 /* "glVertexAttribP4ui" */,
d43596 1
a43596 1
    return gl_provider_resolver(entrypoint_strings + 55881 /* "glVertexAttribP4ui" */,
d43604 1
a43605 1
        Desktop_OpenGL_3_3,
d43609 2
a43610 2
        55900 /* "glVertexAttribP4uiv" */,
        55900 /* "glVertexAttribP4uiv" */,
d43612 1
a43612 1
    return gl_provider_resolver(entrypoint_strings + 55900 /* "glVertexAttribP4uiv" */,
d43619 1
a43619 1
    return gl_single_resolver(GL_extension_GL_AMD_interleaved_elements, 55920 /* glVertexAttribParameteriAMD */);
d43626 1
d43628 1
a43628 1
        Desktop_OpenGL_2_0,
a43629 1
        GL_extension_GL_ARB_vertex_program,
d43633 4
a43636 4
        55948 /* "glVertexAttribPointer" */,
        55948 /* "glVertexAttribPointer" */,
        55970 /* "glVertexAttribPointerARB" */,
        55970 /* "glVertexAttribPointerARB" */,
d43638 1
a43638 1
    return gl_provider_resolver(entrypoint_strings + 55948 /* "glVertexAttribPointer" */,
d43646 1
d43648 1
a43648 1
        GL_extension_GL_ARB_vertex_program,
a43649 1
        Desktop_OpenGL_2_0,
d43653 4
a43656 4
        55970 /* "glVertexAttribPointerARB" */,
        55970 /* "glVertexAttribPointerARB" */,
        55948 /* "glVertexAttribPointer" */,
        55948 /* "glVertexAttribPointer" */,
d43658 1
a43658 1
    return gl_provider_resolver(entrypoint_strings + 55970 /* "glVertexAttribPointerARB" */,
d43665 1
a43665 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 55995 /* glVertexAttribPointerNV */);
d43671 1
a43671 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56019 /* glVertexAttribs1dvNV */);
d43677 1
a43677 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56040 /* glVertexAttribs1fvNV */);
d43683 1
a43683 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56061 /* glVertexAttribs1hvNV */);
d43689 1
a43689 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56082 /* glVertexAttribs1svNV */);
d43695 1
a43695 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56103 /* glVertexAttribs2dvNV */);
d43701 1
a43701 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56124 /* glVertexAttribs2fvNV */);
d43707 1
a43707 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56145 /* glVertexAttribs2hvNV */);
d43713 1
a43713 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56166 /* glVertexAttribs2svNV */);
d43719 1
a43719 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56187 /* glVertexAttribs3dvNV */);
d43725 1
a43725 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56208 /* glVertexAttribs3fvNV */);
d43731 1
a43731 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56229 /* glVertexAttribs3hvNV */);
d43737 1
a43737 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56250 /* glVertexAttribs3svNV */);
d43743 1
a43743 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56271 /* glVertexAttribs4dvNV */);
d43749 1
a43749 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56292 /* glVertexAttribs4fvNV */);
d43755 1
a43755 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 56313 /* glVertexAttribs4hvNV */);
d43761 1
a43761 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56334 /* glVertexAttribs4svNV */);
d43767 1
a43767 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_program, 56355 /* glVertexAttribs4ubvNV */);
d43774 1
a43775 1
        Desktop_OpenGL_4_3,
d43780 3
a43782 3
        56377 /* "glVertexBindingDivisor" */,
        56377 /* "glVertexBindingDivisor" */,
        56377 /* "glVertexBindingDivisor" */,
d43784 1
a43784 1
    return gl_provider_resolver(entrypoint_strings + 56377 /* "glVertexBindingDivisor" */,
d43791 1
a43791 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 56400 /* glVertexBlendARB */);
d43797 1
a43797 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56417 /* glVertexBlendEnvfATI */);
d43803 1
a43803 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56438 /* glVertexBlendEnviATI */);
d43809 1
a43809 1
    return gl_single_resolver(GL_extension_GL_NV_vertex_buffer_unified_memory, 56459 /* glVertexFormatNV */);
d43816 1
a43817 1
        Desktop_OpenGL_3_3,
d43821 2
a43822 2
        56476 /* "glVertexP2ui" */,
        56476 /* "glVertexP2ui" */,
d43824 1
a43824 1
    return gl_provider_resolver(entrypoint_strings + 56476 /* "glVertexP2ui" */,
d43832 1
a43833 1
        Desktop_OpenGL_3_3,
d43837 2
a43838 2
        56489 /* "glVertexP2uiv" */,
        56489 /* "glVertexP2uiv" */,
d43840 1
a43840 1
    return gl_provider_resolver(entrypoint_strings + 56489 /* "glVertexP2uiv" */,
d43848 1
a43849 1
        Desktop_OpenGL_3_3,
d43853 2
a43854 2
        56503 /* "glVertexP3ui" */,
        56503 /* "glVertexP3ui" */,
d43856 1
a43856 1
    return gl_provider_resolver(entrypoint_strings + 56503 /* "glVertexP3ui" */,
d43864 1
a43865 1
        Desktop_OpenGL_3_3,
d43869 2
a43870 2
        56516 /* "glVertexP3uiv" */,
        56516 /* "glVertexP3uiv" */,
d43872 1
a43872 1
    return gl_provider_resolver(entrypoint_strings + 56516 /* "glVertexP3uiv" */,
d43880 1
a43881 1
        Desktop_OpenGL_3_3,
d43885 2
a43886 2
        56530 /* "glVertexP4ui" */,
        56530 /* "glVertexP4ui" */,
d43888 1
a43888 1
    return gl_provider_resolver(entrypoint_strings + 56530 /* "glVertexP4ui" */,
d43896 1
a43897 1
        Desktop_OpenGL_3_3,
d43901 2
a43902 2
        56543 /* "glVertexP4uiv" */,
        56543 /* "glVertexP4uiv" */,
d43904 1
a43904 1
    return gl_provider_resolver(entrypoint_strings + 56543 /* "glVertexP4uiv" */,
d43917 2
a43918 2
        56557 /* "glVertexPointer" */,
        56557 /* "glVertexPointer" */,
d43920 1
a43920 1
    return gl_provider_resolver(entrypoint_strings + 56557 /* "glVertexPointer" */,
d43927 1
a43927 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_array, 56573 /* glVertexPointerEXT */);
d43933 1
a43933 1
    return gl_single_resolver(GL_extension_GL_IBM_vertex_array_lists, 56592 /* glVertexPointerListIBM */);
d43939 1
a43939 1
    return gl_single_resolver(GL_extension_GL_INTEL_parallel_arrays, 56615 /* glVertexPointervINTEL */);
d43945 1
a43945 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56637 /* glVertexStream1dATI */);
d43951 1
a43951 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56657 /* glVertexStream1dvATI */);
d43957 1
a43957 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56678 /* glVertexStream1fATI */);
d43963 1
a43963 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56698 /* glVertexStream1fvATI */);
d43969 1
a43969 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56719 /* glVertexStream1iATI */);
d43975 1
a43975 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56739 /* glVertexStream1ivATI */);
d43981 1
a43981 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56760 /* glVertexStream1sATI */);
d43987 1
a43987 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56780 /* glVertexStream1svATI */);
d43993 1
a43993 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56801 /* glVertexStream2dATI */);
d43999 1
a43999 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56821 /* glVertexStream2dvATI */);
d44005 1
a44005 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56842 /* glVertexStream2fATI */);
d44011 1
a44011 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56862 /* glVertexStream2fvATI */);
d44017 1
a44017 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56883 /* glVertexStream2iATI */);
d44023 1
a44023 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56903 /* glVertexStream2ivATI */);
d44029 1
a44029 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56924 /* glVertexStream2sATI */);
d44035 1
a44035 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56944 /* glVertexStream2svATI */);
d44041 1
a44041 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56965 /* glVertexStream3dATI */);
d44047 1
a44047 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 56985 /* glVertexStream3dvATI */);
d44053 1
a44053 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57006 /* glVertexStream3fATI */);
d44059 1
a44059 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57026 /* glVertexStream3fvATI */);
d44065 1
a44065 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57047 /* glVertexStream3iATI */);
d44071 1
a44071 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57067 /* glVertexStream3ivATI */);
d44077 1
a44077 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57088 /* glVertexStream3sATI */);
d44083 1
a44083 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57108 /* glVertexStream3svATI */);
d44089 1
a44089 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57129 /* glVertexStream4dATI */);
d44095 1
a44095 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57149 /* glVertexStream4dvATI */);
d44101 1
a44101 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57170 /* glVertexStream4fATI */);
d44107 1
a44107 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57190 /* glVertexStream4fvATI */);
d44113 1
a44113 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57211 /* glVertexStream4iATI */);
d44119 1
a44119 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57231 /* glVertexStream4ivATI */);
d44125 1
a44125 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57252 /* glVertexStream4sATI */);
d44131 1
a44131 1
    return gl_single_resolver(GL_extension_GL_ATI_vertex_streams, 57272 /* glVertexStream4svATI */);
d44137 1
a44137 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_weighting, 57293 /* glVertexWeightPointerEXT */);
d44143 1
a44143 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_weighting, 57318 /* glVertexWeightfEXT */);
d44149 1
a44149 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_weighting, 57337 /* glVertexWeightfvEXT */);
d44155 1
a44155 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 57357 /* glVertexWeighthNV */);
d44161 1
a44161 1
    return gl_single_resolver(GL_extension_GL_NV_half_float, 57375 /* glVertexWeighthvNV */);
d44167 1
a44167 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 57394 /* glVideoCaptureNV */);
d44173 1
a44173 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 57411 /* glVideoCaptureStreamParameterdvNV */);
d44179 1
a44179 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 57445 /* glVideoCaptureStreamParameterfvNV */);
d44185 1
a44185 1
    return gl_single_resolver(GL_extension_GL_NV_video_capture, 57479 /* glVideoCaptureStreamParameterivNV */);
d44198 3
a44200 3
        57513 /* "glViewport" */,
        57513 /* "glViewport" */,
        57513 /* "glViewport" */,
d44202 1
a44202 1
    return gl_provider_resolver(entrypoint_strings + 57513 /* "glViewport" */,
d44212 19
d44234 3
a44236 2
        57524 /* "glViewportArrayv" */,
        57524 /* "glViewportArrayv" */,
d44238 1
a44238 1
    return gl_provider_resolver(entrypoint_strings + 57524 /* "glViewportArrayv" */,
d44248 19
d44270 3
a44272 2
        57541 /* "glViewportIndexedf" */,
        57541 /* "glViewportIndexedf" */,
d44274 1
a44274 1
    return gl_provider_resolver(entrypoint_strings + 57541 /* "glViewportIndexedf" */,
d44284 1
d44288 3
a44290 2
        57560 /* "glViewportIndexedfv" */,
        57560 /* "glViewportIndexedfv" */,
d44292 19
a44310 1
    return gl_provider_resolver(entrypoint_strings + 57560 /* "glViewportIndexedfv" */,
d44325 4
a44328 4
        57580 /* "glWaitSync" */,
        57580 /* "glWaitSync" */,
        57580 /* "glWaitSync" */,
        57591 /* "glWaitSyncAPPLE" */,
d44330 1
a44330 1
    return gl_provider_resolver(entrypoint_strings + 57580 /* "glWaitSync" */,
d44345 4
a44348 4
        57591 /* "glWaitSyncAPPLE" */,
        57580 /* "glWaitSync" */,
        57580 /* "glWaitSync" */,
        57580 /* "glWaitSync" */,
d44350 1
a44350 1
    return gl_provider_resolver(entrypoint_strings + 57591 /* "glWaitSyncAPPLE" */,
d44357 1
a44357 1
    return gl_single_resolver(GL_extension_GL_NV_path_rendering, 57607 /* glWeightPathsNV */);
d44363 1
a44363 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 57623 /* glWeightPointerARB */);
d44369 1
a44369 1
    return gl_single_resolver(GL_extension_GL_OES_matrix_palette, 57642 /* glWeightPointerOES */);
d44375 1
a44375 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 57661 /* glWeightbvARB */);
d44381 1
a44381 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 57675 /* glWeightdvARB */);
d44387 1
a44387 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 57689 /* glWeightfvARB */);
d44393 1
a44393 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 57703 /* glWeightivARB */);
d44399 1
a44399 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 57717 /* glWeightsvARB */);
d44405 1
a44405 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 57731 /* glWeightubvARB */);
d44411 1
a44411 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 57746 /* glWeightuivARB */);
d44417 1
a44417 1
    return gl_single_resolver(GL_extension_GL_ARB_vertex_blend, 57761 /* glWeightusvARB */);
d44430 3
a44432 3
        57776 /* "glWindowPos2d" */,
        57790 /* "glWindowPos2dARB" */,
        57807 /* "glWindowPos2dMESA" */,
d44434 1
a44434 1
    return gl_provider_resolver(entrypoint_strings + 57776 /* "glWindowPos2d" */,
d44448 3
a44450 3
        57790 /* "glWindowPos2dARB" */,
        57776 /* "glWindowPos2d" */,
        57807 /* "glWindowPos2dMESA" */,
d44452 1
a44452 1
    return gl_provider_resolver(entrypoint_strings + 57790 /* "glWindowPos2dARB" */,
d44466 3
a44468 3
        57807 /* "glWindowPos2dMESA" */,
        57776 /* "glWindowPos2d" */,
        57790 /* "glWindowPos2dARB" */,
d44470 1
a44470 1
    return gl_provider_resolver(entrypoint_strings + 57807 /* "glWindowPos2dMESA" */,
d44484 3
a44486 3
        57825 /* "glWindowPos2dv" */,
        57840 /* "glWindowPos2dvARB" */,
        57858 /* "glWindowPos2dvMESA" */,
d44488 1
a44488 1
    return gl_provider_resolver(entrypoint_strings + 57825 /* "glWindowPos2dv" */,
d44502 3
a44504 3
        57840 /* "glWindowPos2dvARB" */,
        57825 /* "glWindowPos2dv" */,
        57858 /* "glWindowPos2dvMESA" */,
d44506 1
a44506 1
    return gl_provider_resolver(entrypoint_strings + 57840 /* "glWindowPos2dvARB" */,
d44520 3
a44522 3
        57858 /* "glWindowPos2dvMESA" */,
        57825 /* "glWindowPos2dv" */,
        57840 /* "glWindowPos2dvARB" */,
d44524 1
a44524 1
    return gl_provider_resolver(entrypoint_strings + 57858 /* "glWindowPos2dvMESA" */,
d44538 3
a44540 3
        57877 /* "glWindowPos2f" */,
        57891 /* "glWindowPos2fARB" */,
        57908 /* "glWindowPos2fMESA" */,
d44542 1
a44542 1
    return gl_provider_resolver(entrypoint_strings + 57877 /* "glWindowPos2f" */,
d44556 3
a44558 3
        57891 /* "glWindowPos2fARB" */,
        57877 /* "glWindowPos2f" */,
        57908 /* "glWindowPos2fMESA" */,
d44560 1
a44560 1
    return gl_provider_resolver(entrypoint_strings + 57891 /* "glWindowPos2fARB" */,
d44574 3
a44576 3
        57908 /* "glWindowPos2fMESA" */,
        57877 /* "glWindowPos2f" */,
        57891 /* "glWindowPos2fARB" */,
d44578 1
a44578 1
    return gl_provider_resolver(entrypoint_strings + 57908 /* "glWindowPos2fMESA" */,
d44592 3
a44594 3
        57926 /* "glWindowPos2fv" */,
        57941 /* "glWindowPos2fvARB" */,
        57959 /* "glWindowPos2fvMESA" */,
d44596 1
a44596 1
    return gl_provider_resolver(entrypoint_strings + 57926 /* "glWindowPos2fv" */,
d44610 3
a44612 3
        57941 /* "glWindowPos2fvARB" */,
        57926 /* "glWindowPos2fv" */,
        57959 /* "glWindowPos2fvMESA" */,
d44614 1
a44614 1
    return gl_provider_resolver(entrypoint_strings + 57941 /* "glWindowPos2fvARB" */,
d44628 3
a44630 3
        57959 /* "glWindowPos2fvMESA" */,
        57926 /* "glWindowPos2fv" */,
        57941 /* "glWindowPos2fvARB" */,
d44632 1
a44632 1
    return gl_provider_resolver(entrypoint_strings + 57959 /* "glWindowPos2fvMESA" */,
d44646 3
a44648 3
        57978 /* "glWindowPos2i" */,
        57992 /* "glWindowPos2iARB" */,
        58009 /* "glWindowPos2iMESA" */,
d44650 1
a44650 1
    return gl_provider_resolver(entrypoint_strings + 57978 /* "glWindowPos2i" */,
d44664 3
a44666 3
        57992 /* "glWindowPos2iARB" */,
        57978 /* "glWindowPos2i" */,
        58009 /* "glWindowPos2iMESA" */,
d44668 1
a44668 1
    return gl_provider_resolver(entrypoint_strings + 57992 /* "glWindowPos2iARB" */,
d44682 3
a44684 3
        58009 /* "glWindowPos2iMESA" */,
        57978 /* "glWindowPos2i" */,
        57992 /* "glWindowPos2iARB" */,
d44686 1
a44686 1
    return gl_provider_resolver(entrypoint_strings + 58009 /* "glWindowPos2iMESA" */,
d44700 3
a44702 3
        58027 /* "glWindowPos2iv" */,
        58042 /* "glWindowPos2ivARB" */,
        58060 /* "glWindowPos2ivMESA" */,
d44704 1
a44704 1
    return gl_provider_resolver(entrypoint_strings + 58027 /* "glWindowPos2iv" */,
d44718 3
a44720 3
        58042 /* "glWindowPos2ivARB" */,
        58027 /* "glWindowPos2iv" */,
        58060 /* "glWindowPos2ivMESA" */,
d44722 1
a44722 1
    return gl_provider_resolver(entrypoint_strings + 58042 /* "glWindowPos2ivARB" */,
d44736 3
a44738 3
        58060 /* "glWindowPos2ivMESA" */,
        58027 /* "glWindowPos2iv" */,
        58042 /* "glWindowPos2ivARB" */,
d44740 1
a44740 1
    return gl_provider_resolver(entrypoint_strings + 58060 /* "glWindowPos2ivMESA" */,
d44754 3
a44756 3
        58079 /* "glWindowPos2s" */,
        58093 /* "glWindowPos2sARB" */,
        58110 /* "glWindowPos2sMESA" */,
d44758 1
a44758 1
    return gl_provider_resolver(entrypoint_strings + 58079 /* "glWindowPos2s" */,
d44772 3
a44774 3
        58093 /* "glWindowPos2sARB" */,
        58079 /* "glWindowPos2s" */,
        58110 /* "glWindowPos2sMESA" */,
d44776 1
a44776 1
    return gl_provider_resolver(entrypoint_strings + 58093 /* "glWindowPos2sARB" */,
d44790 3
a44792 3
        58110 /* "glWindowPos2sMESA" */,
        58079 /* "glWindowPos2s" */,
        58093 /* "glWindowPos2sARB" */,
d44794 1
a44794 1
    return gl_provider_resolver(entrypoint_strings + 58110 /* "glWindowPos2sMESA" */,
d44808 3
a44810 3
        58128 /* "glWindowPos2sv" */,
        58143 /* "glWindowPos2svARB" */,
        58161 /* "glWindowPos2svMESA" */,
d44812 1
a44812 1
    return gl_provider_resolver(entrypoint_strings + 58128 /* "glWindowPos2sv" */,
d44826 3
a44828 3
        58143 /* "glWindowPos2svARB" */,
        58128 /* "glWindowPos2sv" */,
        58161 /* "glWindowPos2svMESA" */,
d44830 1
a44830 1
    return gl_provider_resolver(entrypoint_strings + 58143 /* "glWindowPos2svARB" */,
d44844 3
a44846 3
        58161 /* "glWindowPos2svMESA" */,
        58128 /* "glWindowPos2sv" */,
        58143 /* "glWindowPos2svARB" */,
d44848 1
a44848 1
    return gl_provider_resolver(entrypoint_strings + 58161 /* "glWindowPos2svMESA" */,
d44862 3
a44864 3
        58180 /* "glWindowPos3d" */,
        58194 /* "glWindowPos3dARB" */,
        58211 /* "glWindowPos3dMESA" */,
d44866 1
a44866 1
    return gl_provider_resolver(entrypoint_strings + 58180 /* "glWindowPos3d" */,
d44880 3
a44882 3
        58194 /* "glWindowPos3dARB" */,
        58180 /* "glWindowPos3d" */,
        58211 /* "glWindowPos3dMESA" */,
d44884 1
a44884 1
    return gl_provider_resolver(entrypoint_strings + 58194 /* "glWindowPos3dARB" */,
d44898 3
a44900 3
        58211 /* "glWindowPos3dMESA" */,
        58180 /* "glWindowPos3d" */,
        58194 /* "glWindowPos3dARB" */,
d44902 1
a44902 1
    return gl_provider_resolver(entrypoint_strings + 58211 /* "glWindowPos3dMESA" */,
d44916 3
a44918 3
        58229 /* "glWindowPos3dv" */,
        58244 /* "glWindowPos3dvARB" */,
        58262 /* "glWindowPos3dvMESA" */,
d44920 1
a44920 1
    return gl_provider_resolver(entrypoint_strings + 58229 /* "glWindowPos3dv" */,
d44934 3
a44936 3
        58244 /* "glWindowPos3dvARB" */,
        58229 /* "glWindowPos3dv" */,
        58262 /* "glWindowPos3dvMESA" */,
d44938 1
a44938 1
    return gl_provider_resolver(entrypoint_strings + 58244 /* "glWindowPos3dvARB" */,
d44952 3
a44954 3
        58262 /* "glWindowPos3dvMESA" */,
        58229 /* "glWindowPos3dv" */,
        58244 /* "glWindowPos3dvARB" */,
d44956 1
a44956 1
    return gl_provider_resolver(entrypoint_strings + 58262 /* "glWindowPos3dvMESA" */,
d44970 3
a44972 3
        58281 /* "glWindowPos3f" */,
        58295 /* "glWindowPos3fARB" */,
        58312 /* "glWindowPos3fMESA" */,
d44974 1
a44974 1
    return gl_provider_resolver(entrypoint_strings + 58281 /* "glWindowPos3f" */,
d44988 3
a44990 3
        58295 /* "glWindowPos3fARB" */,
        58281 /* "glWindowPos3f" */,
        58312 /* "glWindowPos3fMESA" */,
d44992 1
a44992 1
    return gl_provider_resolver(entrypoint_strings + 58295 /* "glWindowPos3fARB" */,
d45006 3
a45008 3
        58312 /* "glWindowPos3fMESA" */,
        58281 /* "glWindowPos3f" */,
        58295 /* "glWindowPos3fARB" */,
d45010 1
a45010 1
    return gl_provider_resolver(entrypoint_strings + 58312 /* "glWindowPos3fMESA" */,
d45024 3
a45026 3
        58330 /* "glWindowPos3fv" */,
        58345 /* "glWindowPos3fvARB" */,
        58363 /* "glWindowPos3fvMESA" */,
d45028 1
a45028 1
    return gl_provider_resolver(entrypoint_strings + 58330 /* "glWindowPos3fv" */,
d45042 3
a45044 3
        58345 /* "glWindowPos3fvARB" */,
        58330 /* "glWindowPos3fv" */,
        58363 /* "glWindowPos3fvMESA" */,
d45046 1
a45046 1
    return gl_provider_resolver(entrypoint_strings + 58345 /* "glWindowPos3fvARB" */,
d45060 3
a45062 3
        58363 /* "glWindowPos3fvMESA" */,
        58330 /* "glWindowPos3fv" */,
        58345 /* "glWindowPos3fvARB" */,
d45064 1
a45064 1
    return gl_provider_resolver(entrypoint_strings + 58363 /* "glWindowPos3fvMESA" */,
d45078 3
a45080 3
        58382 /* "glWindowPos3i" */,
        58396 /* "glWindowPos3iARB" */,
        58413 /* "glWindowPos3iMESA" */,
d45082 1
a45082 1
    return gl_provider_resolver(entrypoint_strings + 58382 /* "glWindowPos3i" */,
d45096 3
a45098 3
        58396 /* "glWindowPos3iARB" */,
        58382 /* "glWindowPos3i" */,
        58413 /* "glWindowPos3iMESA" */,
d45100 1
a45100 1
    return gl_provider_resolver(entrypoint_strings + 58396 /* "glWindowPos3iARB" */,
d45114 3
a45116 3
        58413 /* "glWindowPos3iMESA" */,
        58382 /* "glWindowPos3i" */,
        58396 /* "glWindowPos3iARB" */,
d45118 1
a45118 1
    return gl_provider_resolver(entrypoint_strings + 58413 /* "glWindowPos3iMESA" */,
d45132 3
a45134 3
        58431 /* "glWindowPos3iv" */,
        58446 /* "glWindowPos3ivARB" */,
        58464 /* "glWindowPos3ivMESA" */,
d45136 1
a45136 1
    return gl_provider_resolver(entrypoint_strings + 58431 /* "glWindowPos3iv" */,
d45150 3
a45152 3
        58446 /* "glWindowPos3ivARB" */,
        58431 /* "glWindowPos3iv" */,
        58464 /* "glWindowPos3ivMESA" */,
d45154 1
a45154 1
    return gl_provider_resolver(entrypoint_strings + 58446 /* "glWindowPos3ivARB" */,
d45168 3
a45170 3
        58464 /* "glWindowPos3ivMESA" */,
        58431 /* "glWindowPos3iv" */,
        58446 /* "glWindowPos3ivARB" */,
d45172 1
a45172 1
    return gl_provider_resolver(entrypoint_strings + 58464 /* "glWindowPos3ivMESA" */,
d45186 3
a45188 3
        58483 /* "glWindowPos3s" */,
        58497 /* "glWindowPos3sARB" */,
        58514 /* "glWindowPos3sMESA" */,
d45190 1
a45190 1
    return gl_provider_resolver(entrypoint_strings + 58483 /* "glWindowPos3s" */,
d45204 3
a45206 3
        58497 /* "glWindowPos3sARB" */,
        58483 /* "glWindowPos3s" */,
        58514 /* "glWindowPos3sMESA" */,
d45208 1
a45208 1
    return gl_provider_resolver(entrypoint_strings + 58497 /* "glWindowPos3sARB" */,
d45222 3
a45224 3
        58514 /* "glWindowPos3sMESA" */,
        58483 /* "glWindowPos3s" */,
        58497 /* "glWindowPos3sARB" */,
d45226 1
a45226 1
    return gl_provider_resolver(entrypoint_strings + 58514 /* "glWindowPos3sMESA" */,
d45240 3
a45242 3
        58532 /* "glWindowPos3sv" */,
        58547 /* "glWindowPos3svARB" */,
        58565 /* "glWindowPos3svMESA" */,
d45244 1
a45244 1
    return gl_provider_resolver(entrypoint_strings + 58532 /* "glWindowPos3sv" */,
d45258 3
a45260 3
        58547 /* "glWindowPos3svARB" */,
        58532 /* "glWindowPos3sv" */,
        58565 /* "glWindowPos3svMESA" */,
d45262 1
a45262 1
    return gl_provider_resolver(entrypoint_strings + 58547 /* "glWindowPos3svARB" */,
d45276 3
a45278 3
        58565 /* "glWindowPos3svMESA" */,
        58532 /* "glWindowPos3sv" */,
        58547 /* "glWindowPos3svARB" */,
d45280 1
a45280 1
    return gl_provider_resolver(entrypoint_strings + 58565 /* "glWindowPos3svMESA" */,
d45287 1
a45287 1
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 58584 /* glWindowPos4dMESA */);
d45293 1
a45293 1
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 58602 /* glWindowPos4dvMESA */);
d45299 1
a45299 1
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 58621 /* glWindowPos4fMESA */);
d45305 1
a45305 1
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 58639 /* glWindowPos4fvMESA */);
d45311 1
a45311 1
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 58658 /* glWindowPos4iMESA */);
d45317 1
a45317 1
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 58676 /* glWindowPos4ivMESA */);
d45323 1
a45323 1
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 58695 /* glWindowPos4sMESA */);
d45329 1
a45329 1
    return gl_single_resolver(GL_extension_GL_MESA_window_pos, 58713 /* glWindowPos4svMESA */);
d45335 1
a45335 1
    return gl_single_resolver(GL_extension_GL_EXT_vertex_shader, 58732 /* glWriteMaskEXT */);
d45421 1
d45462 2
d45466 2
d45477 2
d45481 2
d45488 1
d45492 1
d45495 1
d45498 1
d45504 1
d45529 1
d45531 1
d45533 4
d45546 1
d45610 2
d45637 2
d45665 1
d45667 1
d45669 1
d45696 1
d45698 1
d45704 1
d45721 1
d45723 1
d45725 1
d45732 2
d45735 3
d45741 4
d45750 1
d45752 3
d45778 1
d45806 1
d45822 1
d45825 1
d45841 1
d45848 3
d45862 1
d45865 1
a45865 1
GEN_THUNKS(glDrawBuffer, (GLenum mode), (mode))
d45872 4
d45880 2
d45887 1
d45890 3
d45901 2
d45935 1
d45942 3
d46010 1
d46041 1
d46063 1
d46082 2
d46129 1
d46181 1
d46185 1
d46187 1
d46195 1
d46217 1
d46232 1
d46235 1
d46259 1
d46309 2
d46313 1
d46315 1
d46317 1
d46319 1
d46327 1
d46405 1
d46414 4
d46436 2
d46439 2
d46451 1
d46477 1
d46480 1
d46488 1
d46490 1
d46492 1
d46494 1
d46496 1
d46498 1
d46500 1
d46504 1
d46509 3
d46536 2
d46542 1
d46574 1
d46576 1
d46578 1
d46580 1
d46582 1
d46584 1
d46586 1
d46588 1
d46590 1
d46592 1
d46594 1
d46596 1
d46598 1
d46600 1
d46602 1
d46604 1
d46607 2
d46611 2
d46614 1
d46661 2
d46670 1
d46674 3
d46706 1
d46745 1
d46796 1
d46798 1
d46822 2
d46825 1
d46831 3
d46868 1
d46871 1
d46875 2
d46880 1
d46883 1
d47009 1
d47011 3
d47015 1
d47018 3
d47022 2
d47025 2
d47032 1
d47046 1
d47048 1
d47106 2
d47114 2
d47118 1
d47177 1
d47179 1
d47193 2
d47241 1
d47411 2
a47412 1
GEN_THUNKS(glReadBuffer, (GLenum mode), (mode))
d47417 1
d47420 1
d47473 1
a47482 1
GEN_THUNKS(glSampleCoverageOES, (GLfixed value, GLboolean invert), (value, invert))
d47493 2
d47496 2
d47508 1
d47510 1
d47512 1
d47578 1
d47593 4
d47599 1
d47623 1
d47625 2
d47743 2
a47744 1
GEN_THUNKS(glTexPageCommitmentARB, (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident), (target, level, xoffset, yoffset, zoffset, width, height, depth, resident))
d47747 1
d47750 1
d47778 1
d47780 1
d47782 1
d47795 2
a47796 1
GEN_THUNKS(glTexturePageCommitmentEXT, (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident), (texture, level, xoffset, yoffset, zoffset, width, height, depth, resident))
d47798 1
d47800 1
d47802 1
d47804 1
d47806 1
d47810 1
d47812 1
d47814 1
d47816 1
d47818 1
d47821 1
d47823 1
d47825 1
d47828 2
d47831 3
a47833 1
GEN_THUNKS(glTransformFeedbackAttribsNV, (GLuint count, const GLint * attribs, GLenum bufferMode), (count, attribs, bufferMode))
d47955 1
d47989 1
a47989 1
GEN_THUNKS(glVertex2bOES, (GLbyte x), (x))
d48003 1
a48003 1
GEN_THUNKS(glVertex3bOES, (GLbyte x, GLbyte y), (x, y))
d48017 1
a48017 1
GEN_THUNKS(glVertex4bOES, (GLbyte x, GLbyte y, GLbyte z), (x, y, z))
d48031 4
d48036 1
d48039 1
d48058 2
d48345 1
d48347 1
d48349 1
d48420 1
d48506 1
d48547 2
d48551 2
d48562 2
d48566 2
d48573 1
d48577 1
d48580 1
d48583 1
d48589 1
d48614 1
d48616 1
d48618 4
d48631 1
d48695 2
d48722 2
d48750 1
d48752 1
d48754 1
d48781 1
d48783 1
d48789 1
d48806 1
d48808 1
d48810 1
d48817 2
d48820 3
d48826 4
d48835 1
d48837 3
d48863 1
d48891 1
d48907 1
d48910 1
d48926 1
d48933 3
d48947 1
d48957 4
d48965 2
d48972 1
d48975 3
d48986 2
d49020 1
d49027 3
d49095 1
d49126 1
d49148 1
d49167 2
d49214 1
d49266 1
d49270 1
d49272 1
d49280 1
d49302 1
d49317 1
d49320 1
d49344 1
d49394 2
d49398 1
d49400 1
d49402 1
d49404 1
d49412 1
d49490 1
d49499 4
d49521 2
d49524 2
d49536 1
d49562 1
d49565 1
d49573 1
d49575 1
d49577 1
d49579 1
d49581 1
d49583 1
d49585 1
d49589 1
d49594 3
d49621 2
d49627 1
d49659 1
d49661 1
d49663 1
d49665 1
d49667 1
d49669 1
d49671 1
d49673 1
d49675 1
d49677 1
d49679 1
d49681 1
d49683 1
d49685 1
d49687 1
d49689 1
d49692 2
d49696 2
d49699 1
d49746 2
d49755 1
d49759 3
d49791 1
d49830 1
d49881 1
d49883 1
d49907 2
d49910 1
d49916 3
d49953 1
d49956 1
d49960 2
d49965 1
d49968 1
d50094 1
d50096 3
d50100 1
d50103 3
d50107 2
d50110 2
d50117 1
d50131 1
d50133 1
d50191 2
d50199 2
d50203 1
d50262 1
d50264 1
d50278 2
d50326 1
d50496 1
d50502 1
d50505 1
d50558 1
a50567 1
    .glSampleCoverageOES = epoxy_glSampleCoverageOES_dispatch_table_rewrite_ptr,
d50578 2
d50581 2
d50593 1
d50595 1
d50597 1
d50663 1
d50678 4
d50684 1
d50708 1
d50710 2
d50829 1
d50832 1
d50835 1
d50863 1
d50865 1
d50867 1
d50881 1
d50883 1
d50885 1
d50887 1
d50889 1
d50891 1
d50895 1
d50897 1
d50899 1
d50901 1
d50903 1
d50906 1
d50908 1
d50910 1
d50913 2
d50917 2
d51040 1
d51116 4
d51121 1
d51124 1
d51143 2
d51430 1
d51432 1
d51434 1
d51609 1
d51650 2
d51654 2
d51665 2
d51669 2
d51676 1
d51680 1
d51683 1
d51686 1
d51692 1
d51717 1
d51719 1
d51721 4
d51734 1
d51798 2
d51825 2
d51853 1
d51855 1
d51857 1
d51884 1
d51886 1
d51892 1
d51909 1
d51911 1
d51913 1
d51920 2
d51923 3
d51929 4
d51938 1
d51940 3
d51966 1
d51994 1
d52010 1
d52013 1
d52029 1
d52036 3
d52050 1
d52060 4
d52068 2
d52075 1
d52078 3
d52089 2
d52123 1
d52130 3
d52198 1
d52229 1
d52251 1
d52270 2
d52317 1
d52369 1
d52373 1
d52375 1
d52383 1
d52405 1
d52420 1
d52423 1
d52447 1
d52497 2
d52501 1
d52503 1
d52505 1
d52507 1
d52515 1
d52593 1
d52602 4
d52624 2
d52627 2
d52639 1
d52665 1
d52668 1
d52676 1
d52678 1
d52680 1
d52682 1
d52684 1
d52686 1
d52688 1
d52692 1
d52697 3
d52724 2
d52730 1
d52762 1
d52764 1
d52766 1
d52768 1
d52770 1
d52772 1
d52774 1
d52776 1
d52778 1
d52780 1
d52782 1
d52784 1
d52786 1
d52788 1
d52790 1
d52792 1
d52795 2
d52799 2
d52802 1
d52849 2
d52858 1
d52862 3
d52894 1
d52933 1
d52984 1
d52986 1
d53010 2
d53013 1
d53019 3
d53056 1
d53059 1
d53063 2
d53068 1
d53071 1
d53197 1
d53199 3
d53203 1
d53206 3
d53210 2
d53213 2
d53220 1
d53234 1
d53236 1
d53294 2
d53302 2
d53306 1
d53365 1
d53367 1
d53381 2
d53429 1
d53599 1
d53605 1
d53608 1
d53661 1
a53670 1
    epoxy_glSampleCoverageOES = epoxy_glSampleCoverageOES_dispatch_table_thunk;
d53681 2
d53684 2
d53696 1
d53698 1
d53700 1
d53766 1
d53781 4
d53787 1
d53811 1
d53813 2
d53932 1
d53935 1
d53938 1
d53966 1
d53968 1
d53970 1
d53984 1
d53986 1
d53988 1
d53990 1
d53992 1
d53994 1
d53998 1
d54000 1
d54002 1
d54004 1
d54006 1
d54009 1
d54011 1
d54013 1
d54016 2
d54020 2
d54143 1
d54219 4
d54224 1
d54227 1
d54246 2
d54533 1
d54535 1
d54537 1
d54777 2
d54859 4
d54867 4
d54889 4
d54897 4
d54911 2
d54919 2
d54925 2
d54931 2
d54943 2
d54993 2
d54997 2
d55001 8
d55027 2
d55155 4
d55209 4
d55265 2
d55269 2
d55273 2
d55327 2
d55331 2
d55343 2
d55377 2
d55381 2
d55385 2
d55399 4
d55405 6
d55417 8
d55435 2
d55439 6
d55491 2
d55547 2
d55579 2
d55585 2
d55617 2
d55631 6
d55659 2
d55679 8
d55695 4
d55709 2
d55715 6
d55737 4
d55805 2
d55819 6
d55955 2
d56017 2
d56061 2
d56099 4
d56193 2
d56297 2
d56305 2
d56309 2
d56325 2
d56369 2
d56399 2
d56405 2
d56453 2
d56553 4
d56561 2
d56565 2
d56569 2
d56573 2
d56589 2
d56745 2
d56763 8
d56807 4
d56813 4
d56837 2
d56889 2
d56895 2
d56911 2
d56915 2
d56919 2
d56923 2
d56927 2
d56931 2
d56935 2
d56943 2
d56953 6
d57007 4
d57019 2
d57083 2
d57087 2
d57091 2
d57095 2
d57099 2
d57103 2
d57107 2
d57111 2
d57115 2
d57119 2
d57123 2
d57127 2
d57131 2
d57135 2
d57139 2
d57143 2
d57149 4
d57157 4
d57163 2
d57257 4
d57275 2
d57283 6
d57347 2
d57425 2
d57527 2
d57531 2
d57579 4
d57585 2
d57597 6
d57671 2
d57677 2
d57685 4
d57695 2
d57701 2
d57953 2
d57957 6
d57965 2
d57971 6
d57979 4
d57985 4
d57999 2
d58027 2
d58031 2
d58147 4
d58163 4
d58171 2
d58289 2
d58293 2
d58321 4
d58417 2
d58757 2
d58769 2
d58775 2
d58881 2
a58900 2
PUBLIC PFNGLSAMPLECOVERAGEOESPROC epoxy_glSampleCoverageOES = epoxy_glSampleCoverageOES_global_rewrite_ptr;

d58921 4
d58927 4
d58951 2
d58955 2
d58959 2
d59091 2
d59121 8
d59133 2
d59181 2
d59185 4
d59423 2
d59429 2
d59435 2
d59491 2
d59495 2
d59499 2
d59527 2
d59531 2
d59535 2
d59539 2
d59543 2
d59547 2
d59555 2
d59559 2
d59563 2
d59567 2
d59571 2
d59577 2
d59581 2
d59585 2
d59591 4
d59599 4
d59845 2
d59997 8
d60007 2
d60013 2
d60051 4
d60625 2
d60629 2
d60632 2
@

