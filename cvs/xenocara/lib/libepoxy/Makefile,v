head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.4
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.2
	OPENBSD_5_8_BASE:1.2;
locks; strict;
comment	@# @;


1.6
date	2016.10.10.13.34.43;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	EkQV3yf9tZSpUgE4;

1.5
date	2016.10.08.19.09.34;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	B6eMsG846VqWf3BQ;

1.4
date	2016.09.01.10.37.40;	author jsg;	state Exp;
branches;
next	1.3;
commitid	xgrm38yVwNbK6CPK;

1.3
date	2015.08.20.03.10.38;	author jsg;	state Exp;
branches;
next	1.2;
commitid	VGsagCHtATJ8qjDX;

1.2
date	2015.04.22.17.31.47;	author miod;	state Exp;
branches;
next	1.1;
commitid	1RpvBcJ6wUxJUAVw;

1.1
date	2015.04.15.07.58.59;	author jsg;	state Exp;
branches;
next	;
commitid	ZhQTCyyZds0N3gWF;


desc
@@


1.6
log
@Remove the global 'make includes' step from 'make build'.
This is no longer needed and gets in the way of tightening
permission used during build. ok and suggestions natano@@
@
text
@# $OpenBSD: Makefile,v 1.5 2016/10/08 19:09:34 matthieu Exp $
.include <bsd.xconf.mk>

EPOXY=	${.CURDIR}/../../dist/libepoxy

LIB=	epoxy

EPOXY_MAJOR=	1
EPOXY_MINOR=	3
EPOXY_TINY=	1

INCSDIR=	${X11BASE}/include/epoxy

CFLAGS+= -std=gnu99

CPPFLAGS+= \
	-I${.CURDIR}/generated/include \
	-I${EPOXY}/include \
	-I${EPOXY}/src \
	-I${X11BASE}/include \
	-DPLATFORM_HAS_GLX \
	-DPLATFORM_HAS_EGL

SRCS=	dispatch_common.c \
	dispatch_glx.c \
	dispatch_egl.c \
	gl_generated_dispatch.c \
	glx_generated_dispatch.c \
	egl_generated_dispatch.c

INCS=	gl.h \
	glx.h \
	egl.h

GINCS=	gl_generated.h \
	glx_generated.h \
	egl_generated.h

includes: _SUBDIRUSE
	cd ${EPOXY}/include/epoxy; for i in ${INCS}; do \
	    j="cmp -s $$i ${DESTDIR}${INCSDIR}/epoxy/$$i || \
		${INSTALL_DATA}	$$i ${DESTDIR}${INCSDIR}/epoxy"; \
		echo "\tinstalling $$i"; \
		eval "$$j"; \
	done
	cd ${.CURDIR}/generated/include/epoxy; for i in ${GINCS}; do \
	    j="cmp -s $$i ${DESTDIR}${INCSDIR}/epoxy/$$i || \
		${INSTALL_DATA}	$$i ${DESTDIR}${INCSDIR}/epoxy"; \
		echo "\tinstalling $$i"; \
		eval "$$j"; \
	done

beforeinstall: includes 

NOPROFILE=

PKGCONFIG=		epoxy.pc
PACKAGE_VERSION=	$(EPOXY_MAJOR).$(EPOXY_MINOR).$(EPOXY_TINY)
EXTRA_PKGCONFIG_SUBST=	'-e s,@@DLOPEN_LIBS@@,,'

obj: _xenocara_obj

.include <bsd.lib.mk>
.include <bsd.xorg.mk>

.PATH: ${EPOXY}
.PATH: ${EPOXY}/src
.PATH: ${.CURDIR}/generated/src
@


1.5
log
@use the pkg-config support from bsd.xorg.mk to handle
libGLw and libepoxy .pc files rather than manually generating them
as root in postinstall. Spotted by natano@@ ok natano@@.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2016/09/01 10:37:40 jsg Exp $
d52 2
@


1.4
log
@remove sparc
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2015/08/20 03:10:38 jsg Exp $
d55 4
d64 1
a64 15
epoxy.pc: ${EPOXY}/epoxy.pc.in Makefile
	sed -e 's,@@prefix@@,$(X11BASE),' \
	    -e 's,@@exec_prefix@@,$(X11BASE),' \
	    -e 's,@@libdir@@,${LIBDIR},' \
	    -e 's,@@includedir@@,${INCSDIR},' \
	    -e 's,@@DLOPEN_LIBS@@,,' \
	    -e 's,@@PACKAGE_VERSION@@,$(EPOXY_MAJOR).$(EPOXY_MINOR),' \
	< ${EPOXY}/epoxy.pc.in > epoxy.pc

afterinstall: epoxy.pc
	$(INSTALL) -c -m 644 -o root -g wheel epoxy.pc \
		${DESTDIR}${LIBDIR}/pkgconfig

CLEANFILES+= epoxy.pc

@


1.3
log
@update to libepoxy 1.3.1
ok aja@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2015/04/22 17:31:47 miod Exp $
a58 4

.if ${MACHINE_ARCH} == "sparc"
PICFLAG = -fPIC
.endif
@


1.2
log
@sparc needs big PIC
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2015/04/15 07:58:59 jsg Exp $
d9 2
a10 2
EPOXY_MINOR=	2
EPOXY_TINY=	0
@


1.1
log
@Add libepoxy a library for handling gl/glx/egl function pointer management.
This is needed by glamor egl in the xserver which is in turn needed
to get acceleration with some hardware on xf86-video-ati.

Worked on during s2k15.  Glamor is not yet enabled in the xserver,
but adding this now as libepoxy recently showed up in ports.

The libepoxy port will be removed and ports will transition to
this version.  The xenocara version will be enabled when we're
ready to transition.
@
text
@d1 1
a1 1
# $OpenBSD$
d59 4
@

