head	1.5;
access;
symbols
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.2.0.2
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.2
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.12.23.05.06.05;	author jsg;	state dead;
branches;
next	1.4;
commitid	jLBLHykYtPbp9N8b;

1.4
date	2015.02.20.23.31.06;	author jsg;	state Exp;
branches;
next	1.3;
commitid	96FH88ZMzjHy95WG;

1.3
date	2015.01.25.15.09.14;	author jsg;	state Exp;
branches;
next	1.2;
commitid	M1dxZ5qfRB65OrtK;

1.2
date	2014.07.09.21.32.41;	author jsg;	state Exp;
branches;
next	1.1;
commitid	uM5VFgRcH6JLiuF9;

1.1
date	2013.09.05.15.11.55;	author jsg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove now unused local build system for Mesa
@
text
@/* This file is automatically generated by mapi_abi.py.  Do not modify. */

#ifndef _GLAPI_TMP_H_
#define _GLAPI_TMP_H_
typedef int GLclampx;
#endif /* _GLAPI_TMP_H_ */

#ifdef MAPI_TMP_DEFINES
#define GL_GLEXT_PROTOTYPES
#include "GL/gl.h"
#include "GL/glext.h"

void APIENTRY gl_dispatch_stub_0(GLuint list, GLenum mode);
void APIENTRY gl_dispatch_stub_1(void);
void APIENTRY gl_dispatch_stub_2(GLuint list);
void APIENTRY gl_dispatch_stub_3(GLsizei n, GLenum type, const GLvoid *lists);
void APIENTRY gl_dispatch_stub_4(GLuint list, GLsizei range);
GLuint APIENTRY gl_dispatch_stub_5(GLsizei range);
void APIENTRY gl_dispatch_stub_6(GLuint base);
void APIENTRY gl_dispatch_stub_7(GLenum mode);
void APIENTRY gl_dispatch_stub_8(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
void APIENTRY gl_dispatch_stub_9(GLbyte red, GLbyte green, GLbyte blue);
void APIENTRY gl_dispatch_stub_10(const GLbyte *v);
void APIENTRY gl_dispatch_stub_11(GLdouble red, GLdouble green, GLdouble blue);
void APIENTRY gl_dispatch_stub_12(const GLdouble *v);
void APIENTRY gl_dispatch_stub_13(GLfloat red, GLfloat green, GLfloat blue);
void APIENTRY gl_dispatch_stub_14(const GLfloat *v);
void APIENTRY gl_dispatch_stub_15(GLint red, GLint green, GLint blue);
void APIENTRY gl_dispatch_stub_16(const GLint *v);
void APIENTRY gl_dispatch_stub_17(GLshort red, GLshort green, GLshort blue);
void APIENTRY gl_dispatch_stub_18(const GLshort *v);
void APIENTRY gl_dispatch_stub_19(GLubyte red, GLubyte green, GLubyte blue);
void APIENTRY gl_dispatch_stub_20(const GLubyte *v);
void APIENTRY gl_dispatch_stub_21(GLuint red, GLuint green, GLuint blue);
void APIENTRY gl_dispatch_stub_22(const GLuint *v);
void APIENTRY gl_dispatch_stub_23(GLushort red, GLushort green, GLushort blue);
void APIENTRY gl_dispatch_stub_24(const GLushort *v);
void APIENTRY gl_dispatch_stub_25(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void APIENTRY gl_dispatch_stub_26(const GLbyte *v);
void APIENTRY gl_dispatch_stub_27(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void APIENTRY gl_dispatch_stub_28(const GLdouble *v);
GLAPI void APIENTRY glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void APIENTRY gl_dispatch_stub_30(const GLfloat *v);
void APIENTRY gl_dispatch_stub_31(GLint red, GLint green, GLint blue, GLint alpha);
void APIENTRY gl_dispatch_stub_32(const GLint *v);
void APIENTRY gl_dispatch_stub_33(GLshort red, GLshort green, GLshort blue, GLshort alpha);
void APIENTRY gl_dispatch_stub_34(const GLshort *v);
GLAPI void APIENTRY glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void APIENTRY gl_dispatch_stub_36(const GLubyte *v);
void APIENTRY gl_dispatch_stub_37(GLuint red, GLuint green, GLuint blue, GLuint alpha);
void APIENTRY gl_dispatch_stub_38(const GLuint *v);
void APIENTRY gl_dispatch_stub_39(GLushort red, GLushort green, GLushort blue, GLushort alpha);
void APIENTRY gl_dispatch_stub_40(const GLushort *v);
void APIENTRY gl_dispatch_stub_41(GLboolean flag);
void APIENTRY gl_dispatch_stub_42(const GLboolean *flag);
void APIENTRY gl_dispatch_stub_43(void);
void APIENTRY gl_dispatch_stub_44(GLdouble c);
void APIENTRY gl_dispatch_stub_45(const GLdouble *c);
void APIENTRY gl_dispatch_stub_46(GLfloat c);
void APIENTRY gl_dispatch_stub_47(const GLfloat *c);
void APIENTRY gl_dispatch_stub_48(GLint c);
void APIENTRY gl_dispatch_stub_49(const GLint *c);
void APIENTRY gl_dispatch_stub_50(GLshort c);
void APIENTRY gl_dispatch_stub_51(const GLshort *c);
void APIENTRY gl_dispatch_stub_52(GLbyte nx, GLbyte ny, GLbyte nz);
void APIENTRY gl_dispatch_stub_53(const GLbyte *v);
void APIENTRY gl_dispatch_stub_54(GLdouble nx, GLdouble ny, GLdouble nz);
void APIENTRY gl_dispatch_stub_55(const GLdouble *v);
GLAPI void APIENTRY glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);
void APIENTRY gl_dispatch_stub_57(const GLfloat *v);
void APIENTRY gl_dispatch_stub_58(GLint nx, GLint ny, GLint nz);
void APIENTRY gl_dispatch_stub_59(const GLint *v);
void APIENTRY gl_dispatch_stub_60(GLshort nx, GLshort ny, GLshort nz);
void APIENTRY gl_dispatch_stub_61(const GLshort *v);
void APIENTRY gl_dispatch_stub_62(GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_63(const GLdouble *v);
void APIENTRY gl_dispatch_stub_64(GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_65(const GLfloat *v);
void APIENTRY gl_dispatch_stub_66(GLint x, GLint y);
void APIENTRY gl_dispatch_stub_67(const GLint *v);
void APIENTRY gl_dispatch_stub_68(GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_69(const GLshort *v);
void APIENTRY gl_dispatch_stub_70(GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_71(const GLdouble *v);
void APIENTRY gl_dispatch_stub_72(GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_73(const GLfloat *v);
void APIENTRY gl_dispatch_stub_74(GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_75(const GLint *v);
void APIENTRY gl_dispatch_stub_76(GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_77(const GLshort *v);
void APIENTRY gl_dispatch_stub_78(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_79(const GLdouble *v);
void APIENTRY gl_dispatch_stub_80(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_81(const GLfloat *v);
void APIENTRY gl_dispatch_stub_82(GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_83(const GLint *v);
void APIENTRY gl_dispatch_stub_84(GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_85(const GLshort *v);
void APIENTRY gl_dispatch_stub_86(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void APIENTRY gl_dispatch_stub_87(const GLdouble *v1, const GLdouble *v2);
void APIENTRY gl_dispatch_stub_88(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void APIENTRY gl_dispatch_stub_89(const GLfloat *v1, const GLfloat *v2);
void APIENTRY gl_dispatch_stub_90(GLint x1, GLint y1, GLint x2, GLint y2);
void APIENTRY gl_dispatch_stub_91(const GLint *v1, const GLint *v2);
void APIENTRY gl_dispatch_stub_92(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void APIENTRY gl_dispatch_stub_93(const GLshort *v1, const GLshort *v2);
void APIENTRY gl_dispatch_stub_94(GLdouble s);
void APIENTRY gl_dispatch_stub_95(const GLdouble *v);
void APIENTRY gl_dispatch_stub_96(GLfloat s);
void APIENTRY gl_dispatch_stub_97(const GLfloat *v);
void APIENTRY gl_dispatch_stub_98(GLint s);
void APIENTRY gl_dispatch_stub_99(const GLint *v);
void APIENTRY gl_dispatch_stub_100(GLshort s);
void APIENTRY gl_dispatch_stub_101(const GLshort *v);
void APIENTRY gl_dispatch_stub_102(GLdouble s, GLdouble t);
void APIENTRY gl_dispatch_stub_103(const GLdouble *v);
void APIENTRY gl_dispatch_stub_104(GLfloat s, GLfloat t);
void APIENTRY gl_dispatch_stub_105(const GLfloat *v);
void APIENTRY gl_dispatch_stub_106(GLint s, GLint t);
void APIENTRY gl_dispatch_stub_107(const GLint *v);
void APIENTRY gl_dispatch_stub_108(GLshort s, GLshort t);
void APIENTRY gl_dispatch_stub_109(const GLshort *v);
void APIENTRY gl_dispatch_stub_110(GLdouble s, GLdouble t, GLdouble r);
void APIENTRY gl_dispatch_stub_111(const GLdouble *v);
void APIENTRY gl_dispatch_stub_112(GLfloat s, GLfloat t, GLfloat r);
void APIENTRY gl_dispatch_stub_113(const GLfloat *v);
void APIENTRY gl_dispatch_stub_114(GLint s, GLint t, GLint r);
void APIENTRY gl_dispatch_stub_115(const GLint *v);
void APIENTRY gl_dispatch_stub_116(GLshort s, GLshort t, GLshort r);
void APIENTRY gl_dispatch_stub_117(const GLshort *v);
void APIENTRY gl_dispatch_stub_118(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void APIENTRY gl_dispatch_stub_119(const GLdouble *v);
void APIENTRY gl_dispatch_stub_120(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void APIENTRY gl_dispatch_stub_121(const GLfloat *v);
void APIENTRY gl_dispatch_stub_122(GLint s, GLint t, GLint r, GLint q);
void APIENTRY gl_dispatch_stub_123(const GLint *v);
void APIENTRY gl_dispatch_stub_124(GLshort s, GLshort t, GLshort r, GLshort q);
void APIENTRY gl_dispatch_stub_125(const GLshort *v);
void APIENTRY gl_dispatch_stub_126(GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_127(const GLdouble *v);
void APIENTRY gl_dispatch_stub_128(GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_129(const GLfloat *v);
void APIENTRY gl_dispatch_stub_130(GLint x, GLint y);
void APIENTRY gl_dispatch_stub_131(const GLint *v);
void APIENTRY gl_dispatch_stub_132(GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_133(const GLshort *v);
void APIENTRY gl_dispatch_stub_134(GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_135(const GLdouble *v);
void APIENTRY gl_dispatch_stub_136(GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_137(const GLfloat *v);
void APIENTRY gl_dispatch_stub_138(GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_139(const GLint *v);
void APIENTRY gl_dispatch_stub_140(GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_141(const GLshort *v);
void APIENTRY gl_dispatch_stub_142(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_143(const GLdouble *v);
void APIENTRY gl_dispatch_stub_144(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_145(const GLfloat *v);
void APIENTRY gl_dispatch_stub_146(GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_147(const GLint *v);
void APIENTRY gl_dispatch_stub_148(GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_149(const GLshort *v);
void APIENTRY gl_dispatch_stub_150(GLenum plane, const GLdouble *equation);
void APIENTRY gl_dispatch_stub_151(GLenum face, GLenum mode);
GLAPI void APIENTRY glCullFace(GLenum mode);
GLAPI void APIENTRY glFogf(GLenum pname, GLfloat param);
GLAPI void APIENTRY glFogfv(GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_155(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_156(GLenum pname, const GLint *params);
GLAPI void APIENTRY glFrontFace(GLenum mode);
GLAPI void APIENTRY glHint(GLenum target, GLenum mode);
GLAPI void APIENTRY glLightf(GLenum light, GLenum pname, GLfloat param);
GLAPI void APIENTRY glLightfv(GLenum light, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_161(GLenum light, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_162(GLenum light, GLenum pname, const GLint *params);
GLAPI void APIENTRY glLightModelf(GLenum pname, GLfloat param);
GLAPI void APIENTRY glLightModelfv(GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_165(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_166(GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_167(GLint factor, GLushort pattern);
GLAPI void APIENTRY glLineWidth(GLfloat width);
GLAPI void APIENTRY glMaterialf(GLenum face, GLenum pname, GLfloat param);
GLAPI void APIENTRY glMaterialfv(GLenum face, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_171(GLenum face, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_172(GLenum face, GLenum pname, const GLint *params);
GLAPI void APIENTRY glPointSize(GLfloat size);
void APIENTRY gl_dispatch_stub_174(GLenum face, GLenum mode);
void APIENTRY gl_dispatch_stub_175(const GLubyte *mask);
GLAPI void APIENTRY glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glShadeModel(GLenum mode);
GLAPI void APIENTRY glTexParameterf(GLenum target, GLenum pname, GLfloat param);
GLAPI void APIENTRY glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params);
GLAPI void APIENTRY glTexParameteri(GLenum target, GLenum pname, GLint param);
GLAPI void APIENTRY glTexParameteriv(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_182(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
GLAPI void APIENTRY glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
GLAPI void APIENTRY glTexEnvf(GLenum target, GLenum pname, GLfloat param);
GLAPI void APIENTRY glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params);
GLAPI void APIENTRY glTexEnvi(GLenum target, GLenum pname, GLint param);
GLAPI void APIENTRY glTexEnviv(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_188(GLenum coord, GLenum pname, GLdouble param);
void APIENTRY gl_dispatch_stub_189(GLenum coord, GLenum pname, const GLdouble *params);
void APIENTRY gl_dispatch_stub_190(GLenum coord, GLenum pname, GLfloat param);
void APIENTRY gl_dispatch_stub_191(GLenum coord, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_192(GLenum coord, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_193(GLenum coord, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_194(GLsizei size, GLenum type, GLfloat *buffer);
void APIENTRY gl_dispatch_stub_195(GLsizei size, GLuint *buffer);
GLint APIENTRY gl_dispatch_stub_196(GLenum mode);
void APIENTRY gl_dispatch_stub_197(void);
void APIENTRY gl_dispatch_stub_198(GLuint name);
void APIENTRY gl_dispatch_stub_199(GLfloat token);
void APIENTRY gl_dispatch_stub_200(void);
void APIENTRY gl_dispatch_stub_201(GLuint name);
void APIENTRY gl_dispatch_stub_202(GLenum mode);
GLAPI void APIENTRY glClear(GLbitfield mask);
void APIENTRY gl_dispatch_stub_204(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void APIENTRY gl_dispatch_stub_205(GLfloat c);
GLAPI void APIENTRY glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
GLAPI void APIENTRY glClearStencil(GLint s);
void APIENTRY gl_dispatch_stub_208(GLclampd depth);
GLAPI void APIENTRY glStencilMask(GLuint mask);
GLAPI void APIENTRY glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLAPI void APIENTRY glDepthMask(GLboolean flag);
void APIENTRY gl_dispatch_stub_212(GLuint mask);
void APIENTRY gl_dispatch_stub_213(GLenum op, GLfloat value);
GLAPI void APIENTRY glDisable(GLenum cap);
GLAPI void APIENTRY glEnable(GLenum cap);
GLAPI void APIENTRY glFinish(void);
GLAPI void APIENTRY glFlush(void);
void APIENTRY gl_dispatch_stub_218(void);
void APIENTRY gl_dispatch_stub_219(GLbitfield mask);
void APIENTRY gl_dispatch_stub_220(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
void APIENTRY gl_dispatch_stub_221(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
void APIENTRY gl_dispatch_stub_222(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
void APIENTRY gl_dispatch_stub_223(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
void APIENTRY gl_dispatch_stub_224(GLint un, GLdouble u1, GLdouble u2);
void APIENTRY gl_dispatch_stub_225(GLint un, GLfloat u1, GLfloat u2);
void APIENTRY gl_dispatch_stub_226(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void APIENTRY gl_dispatch_stub_227(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void APIENTRY gl_dispatch_stub_228(GLdouble u);
void APIENTRY gl_dispatch_stub_229(const GLdouble *u);
void APIENTRY gl_dispatch_stub_230(GLfloat u);
void APIENTRY gl_dispatch_stub_231(const GLfloat *u);
void APIENTRY gl_dispatch_stub_232(GLdouble u, GLdouble v);
void APIENTRY gl_dispatch_stub_233(const GLdouble *u);
void APIENTRY gl_dispatch_stub_234(GLfloat u, GLfloat v);
void APIENTRY gl_dispatch_stub_235(const GLfloat *u);
void APIENTRY gl_dispatch_stub_236(GLenum mode, GLint i1, GLint i2);
void APIENTRY gl_dispatch_stub_237(GLint i);
void APIENTRY gl_dispatch_stub_238(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void APIENTRY gl_dispatch_stub_239(GLint i, GLint j);
GLAPI void APIENTRY glAlphaFunc(GLenum func, GLclampf ref);
GLAPI void APIENTRY glBlendFunc(GLenum sfactor, GLenum dfactor);
GLAPI void APIENTRY glLogicOp(GLenum opcode);
GLAPI void APIENTRY glStencilFunc(GLenum func, GLint ref, GLuint mask);
GLAPI void APIENTRY glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
GLAPI void APIENTRY glDepthFunc(GLenum func);
void APIENTRY gl_dispatch_stub_246(GLfloat xfactor, GLfloat yfactor);
void APIENTRY gl_dispatch_stub_247(GLenum pname, GLfloat param);
void APIENTRY gl_dispatch_stub_248(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_249(GLenum pname, GLfloat param);
GLAPI void APIENTRY glPixelStorei(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_251(GLenum map, GLsizei mapsize, const GLfloat *values);
void APIENTRY gl_dispatch_stub_252(GLenum map, GLsizei mapsize, const GLuint *values);
void APIENTRY gl_dispatch_stub_253(GLenum map, GLsizei mapsize, const GLushort *values);
void APIENTRY gl_dispatch_stub_254(GLenum mode);
void APIENTRY gl_dispatch_stub_255(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLAPI void APIENTRY glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
void APIENTRY gl_dispatch_stub_257(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
GLAPI void APIENTRY glGetBooleanv(GLenum pname, GLboolean *params);
void APIENTRY gl_dispatch_stub_259(GLenum plane, GLdouble *equation);
void APIENTRY gl_dispatch_stub_260(GLenum pname, GLdouble *params);
GLAPI GLenum APIENTRY glGetError(void);
GLAPI void APIENTRY glGetFloatv(GLenum pname, GLfloat *params);
GLAPI void APIENTRY glGetIntegerv(GLenum pname, GLint *params);
GLAPI void APIENTRY glGetLightfv(GLenum light, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_265(GLenum light, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_266(GLenum target, GLenum query, GLdouble *v);
void APIENTRY gl_dispatch_stub_267(GLenum target, GLenum query, GLfloat *v);
void APIENTRY gl_dispatch_stub_268(GLenum target, GLenum query, GLint *v);
GLAPI void APIENTRY glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_270(GLenum face, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_271(GLenum map, GLfloat *values);
void APIENTRY gl_dispatch_stub_272(GLenum map, GLuint *values);
void APIENTRY gl_dispatch_stub_273(GLenum map, GLushort *values);
void APIENTRY gl_dispatch_stub_274(GLubyte *mask);
GLAPI const GLubyte * APIENTRY glGetString(GLenum name);
GLAPI void APIENTRY glGetTexEnvfv(GLenum target, GLenum pname, GLfloat *params);
GLAPI void APIENTRY glGetTexEnviv(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_278(GLenum coord, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_279(GLenum coord, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_280(GLenum coord, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_281(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
GLAPI void APIENTRY glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params);
GLAPI void APIENTRY glGetTexParameteriv(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_284(GLenum target, GLint level, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_285(GLenum target, GLint level, GLenum pname, GLint *params);
GLAPI GLboolean APIENTRY glIsEnabled(GLenum cap);
GLboolean APIENTRY gl_dispatch_stub_287(GLuint list);
void APIENTRY gl_dispatch_stub_288(GLclampd zNear, GLclampd zFar);
void APIENTRY gl_dispatch_stub_289(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLAPI void APIENTRY glLoadIdentity(void);
GLAPI void APIENTRY glLoadMatrixf(const GLfloat *m);
void APIENTRY gl_dispatch_stub_292(const GLdouble *m);
GLAPI void APIENTRY glMatrixMode(GLenum mode);
GLAPI void APIENTRY glMultMatrixf(const GLfloat *m);
void APIENTRY gl_dispatch_stub_295(const GLdouble *m);
void APIENTRY gl_dispatch_stub_296(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLAPI void APIENTRY glPopMatrix(void);
GLAPI void APIENTRY glPushMatrix(void);
void APIENTRY gl_dispatch_stub_299(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_301(GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glScalef(GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_303(GLdouble x, GLdouble y, GLdouble z);
GLAPI void APIENTRY glTranslatef(GLfloat x, GLfloat y, GLfloat z);
GLAPI void APIENTRY glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_306(GLint i);
GLAPI void APIENTRY glBindTexture(GLenum target, GLuint texture);
GLAPI void APIENTRY glColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glDisableClientState(GLenum array);
GLAPI void APIENTRY glDrawArrays(GLenum mode, GLint first, GLsizei count);
GLAPI void APIENTRY glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
void APIENTRY gl_dispatch_stub_312(GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glEnableClientState(GLenum array);
void APIENTRY gl_dispatch_stub_314(GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_315(GLubyte c);
void APIENTRY gl_dispatch_stub_316(const GLubyte *c);
void APIENTRY gl_dispatch_stub_317(GLenum format, GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glNormalPointer(GLenum type, GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glPolygonOffset(GLfloat factor, GLfloat units);
GLAPI void APIENTRY glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLAPI void APIENTRY glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
GLboolean APIENTRY gl_dispatch_stub_322(GLsizei n, const GLuint *textures, GLboolean *residences);
void APIENTRY gl_dispatch_stub_323(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLAPI void APIENTRY glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void APIENTRY gl_dispatch_stub_325(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLAPI void APIENTRY glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glDeleteTextures(GLsizei n, const GLuint *textures);
GLAPI void APIENTRY glGenTextures(GLsizei n, GLuint *textures);
GLAPI void APIENTRY glGetPointerv(GLenum pname, GLvoid **params);
GLAPI GLboolean APIENTRY glIsTexture(GLuint texture);
void APIENTRY gl_dispatch_stub_331(GLsizei n, const GLuint *textures, const GLclampf *priorities);
void APIENTRY gl_dispatch_stub_332(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
GLAPI void APIENTRY glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
void APIENTRY gl_dispatch_stub_334(void);
void APIENTRY gl_dispatch_stub_335(GLbitfield mask);
void APIENTRY gl_dispatch_stub_336(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
void APIENTRY gl_dispatch_stub_337(GLenum mode);
void APIENTRY gl_dispatch_stub_338(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
void APIENTRY gl_dispatch_stub_339(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
void APIENTRY gl_dispatch_stub_340(GLenum target, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_341(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_342(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void APIENTRY gl_dispatch_stub_343(GLenum target, GLenum format, GLenum type, GLvoid *table);
void APIENTRY gl_dispatch_stub_344(GLenum target, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_345(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_346(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_347(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void APIENTRY gl_dispatch_stub_348(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
void APIENTRY gl_dispatch_stub_349(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
void APIENTRY gl_dispatch_stub_350(GLenum target, GLenum pname, GLfloat params);
void APIENTRY gl_dispatch_stub_351(GLenum target, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_352(GLenum target, GLenum pname, GLint params);
void APIENTRY gl_dispatch_stub_353(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_354(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void APIENTRY gl_dispatch_stub_355(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_356(GLenum target, GLenum format, GLenum type, GLvoid *image);
void APIENTRY gl_dispatch_stub_357(GLenum target, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_358(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_359(GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
void APIENTRY gl_dispatch_stub_360(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
void APIENTRY gl_dispatch_stub_361(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
void APIENTRY gl_dispatch_stub_362(GLenum target, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_363(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_364(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
void APIENTRY gl_dispatch_stub_365(GLenum target, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_366(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_367(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void APIENTRY gl_dispatch_stub_368(GLenum target, GLenum internalformat, GLboolean sink);
void APIENTRY gl_dispatch_stub_369(GLenum target);
void APIENTRY gl_dispatch_stub_370(GLenum target);
void APIENTRY gl_dispatch_stub_371(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
void APIENTRY gl_dispatch_stub_372(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
void APIENTRY gl_dispatch_stub_373(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glActiveTexture(GLenum texture);
GLAPI void APIENTRY glClientActiveTexture(GLenum texture);
void APIENTRY gl_dispatch_stub_376(GLenum target, GLdouble s);
void APIENTRY gl_dispatch_stub_377(GLenum target, const GLdouble *v);
void APIENTRY gl_dispatch_stub_378(GLenum target, GLfloat s);
void APIENTRY gl_dispatch_stub_379(GLenum target, const GLfloat *v);
void APIENTRY gl_dispatch_stub_380(GLenum target, GLint s);
void APIENTRY gl_dispatch_stub_381(GLenum target, const GLint *v);
void APIENTRY gl_dispatch_stub_382(GLenum target, GLshort s);
void APIENTRY gl_dispatch_stub_383(GLenum target, const GLshort *v);
void APIENTRY gl_dispatch_stub_384(GLenum target, GLdouble s, GLdouble t);
void APIENTRY gl_dispatch_stub_385(GLenum target, const GLdouble *v);
void APIENTRY gl_dispatch_stub_386(GLenum target, GLfloat s, GLfloat t);
void APIENTRY gl_dispatch_stub_387(GLenum target, const GLfloat *v);
void APIENTRY gl_dispatch_stub_388(GLenum target, GLint s, GLint t);
void APIENTRY gl_dispatch_stub_389(GLenum target, const GLint *v);
void APIENTRY gl_dispatch_stub_390(GLenum target, GLshort s, GLshort t);
void APIENTRY gl_dispatch_stub_391(GLenum target, const GLshort *v);
void APIENTRY gl_dispatch_stub_392(GLenum target, GLdouble s, GLdouble t, GLdouble r);
void APIENTRY gl_dispatch_stub_393(GLenum target, const GLdouble *v);
void APIENTRY gl_dispatch_stub_394(GLenum target, GLfloat s, GLfloat t, GLfloat r);
void APIENTRY gl_dispatch_stub_395(GLenum target, const GLfloat *v);
void APIENTRY gl_dispatch_stub_396(GLenum target, GLint s, GLint t, GLint r);
void APIENTRY gl_dispatch_stub_397(GLenum target, const GLint *v);
void APIENTRY gl_dispatch_stub_398(GLenum target, GLshort s, GLshort t, GLshort r);
void APIENTRY gl_dispatch_stub_399(GLenum target, const GLshort *v);
void APIENTRY gl_dispatch_stub_400(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void APIENTRY gl_dispatch_stub_401(GLenum target, const GLdouble *v);
void APIENTRY gl_dispatch_stub_402(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLAPI void APIENTRY glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void APIENTRY gl_dispatch_stub_403(GLenum target, const GLfloat *v);
void APIENTRY gl_dispatch_stub_404(GLenum target, GLint s, GLint t, GLint r, GLint q);
void APIENTRY gl_dispatch_stub_405(GLenum target, const GLint *v);
void APIENTRY gl_dispatch_stub_406(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void APIENTRY gl_dispatch_stub_407(GLenum target, const GLshort *v);
void APIENTRY gl_dispatch_stub_408(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
GLAPI void APIENTRY glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_410(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_411(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
GLAPI void APIENTRY glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_413(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
void APIENTRY gl_dispatch_stub_414(GLenum target, GLint level, GLvoid *img);
void APIENTRY gl_dispatch_stub_415(const GLdouble *m);
void APIENTRY gl_dispatch_stub_416(const GLfloat *m);
void APIENTRY gl_dispatch_stub_417(const GLdouble *m);
void APIENTRY gl_dispatch_stub_418(const GLfloat *m);
GLAPI void APIENTRY glSampleCoverage(GLclampf value, GLboolean invert);
void APIENTRY gl_dispatch_stub_420(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void APIENTRY gl_dispatch_stub_421(GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_422(GLdouble coord);
void APIENTRY gl_dispatch_stub_423(const GLdouble *coord);
void APIENTRY gl_dispatch_stub_424(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
GLAPI void APIENTRY glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
GLAPI void APIENTRY glPointParameterf(GLenum pname, GLfloat param);
GLAPI void APIENTRY glPointParameterfv(GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_427(GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_428(GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_429(GLbyte red, GLbyte green, GLbyte blue);
void APIENTRY gl_dispatch_stub_430(const GLbyte *v);
void APIENTRY gl_dispatch_stub_431(GLdouble red, GLdouble green, GLdouble blue);
void APIENTRY gl_dispatch_stub_432(const GLdouble *v);
void APIENTRY gl_dispatch_stub_433(GLint red, GLint green, GLint blue);
void APIENTRY gl_dispatch_stub_434(const GLint *v);
void APIENTRY gl_dispatch_stub_435(GLshort red, GLshort green, GLshort blue);
void APIENTRY gl_dispatch_stub_436(const GLshort *v);
void APIENTRY gl_dispatch_stub_437(GLubyte red, GLubyte green, GLubyte blue);
void APIENTRY gl_dispatch_stub_438(const GLubyte *v);
void APIENTRY gl_dispatch_stub_439(GLuint red, GLuint green, GLuint blue);
void APIENTRY gl_dispatch_stub_440(const GLuint *v);
void APIENTRY gl_dispatch_stub_441(GLushort red, GLushort green, GLushort blue);
void APIENTRY gl_dispatch_stub_442(const GLushort *v);
void APIENTRY gl_dispatch_stub_443(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_444(GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_445(const GLdouble *v);
void APIENTRY gl_dispatch_stub_446(GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_447(const GLfloat *v);
void APIENTRY gl_dispatch_stub_448(GLint x, GLint y);
void APIENTRY gl_dispatch_stub_449(const GLint *v);
void APIENTRY gl_dispatch_stub_450(GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_451(const GLshort *v);
void APIENTRY gl_dispatch_stub_452(GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_453(const GLdouble *v);
void APIENTRY gl_dispatch_stub_454(GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_455(const GLfloat *v);
void APIENTRY gl_dispatch_stub_456(GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_457(const GLint *v);
void APIENTRY gl_dispatch_stub_458(GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_459(const GLshort *v);
void APIENTRY gl_dispatch_stub_460(GLenum target, GLuint id);
GLAPI void APIENTRY glBindBuffer(GLenum target, GLuint buffer);
GLAPI void APIENTRY glBufferData(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
GLAPI void APIENTRY glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
GLAPI void APIENTRY glDeleteBuffers(GLsizei n, const GLuint *buffer);
void APIENTRY gl_dispatch_stub_465(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_466(GLenum target);
GLAPI void APIENTRY glGenBuffers(GLsizei n, GLuint *buffer);
void APIENTRY gl_dispatch_stub_468(GLsizei n, GLuint *ids);
GLAPI void APIENTRY glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_470(GLenum target, GLenum pname, GLvoid **params);
void APIENTRY gl_dispatch_stub_471(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);
void APIENTRY gl_dispatch_stub_472(GLuint id, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_473(GLuint id, GLenum pname, GLuint *params);
void APIENTRY gl_dispatch_stub_474(GLenum target, GLenum pname, GLint *params);
GLAPI GLboolean APIENTRY glIsBuffer(GLuint buffer);
GLboolean APIENTRY gl_dispatch_stub_476(GLuint id);
GLvoid * APIENTRY gl_dispatch_stub_477(GLenum target, GLenum access);
GLboolean APIENTRY gl_dispatch_stub_478(GLenum target);
void APIENTRY gl_dispatch_stub_479(GLuint program, GLuint shader);
void APIENTRY gl_dispatch_stub_480(GLuint program, GLuint index, const GLchar *name);
void APIENTRY gl_dispatch_stub_481(GLenum modeRGB, GLenum modeA);
void APIENTRY gl_dispatch_stub_482(GLuint shader);
GLuint APIENTRY gl_dispatch_stub_483(void);
GLuint APIENTRY gl_dispatch_stub_484(GLenum type);
void APIENTRY gl_dispatch_stub_485(GLuint program);
void APIENTRY gl_dispatch_stub_486(GLuint program);
void APIENTRY gl_dispatch_stub_487(GLuint program, GLuint shader);
void APIENTRY gl_dispatch_stub_488(GLuint index);
void APIENTRY gl_dispatch_stub_489(GLsizei n, const GLenum *bufs);
void APIENTRY gl_dispatch_stub_490(GLuint index);
void APIENTRY gl_dispatch_stub_491(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void APIENTRY gl_dispatch_stub_492(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void APIENTRY gl_dispatch_stub_493(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);
GLint APIENTRY gl_dispatch_stub_494(GLuint program, const GLchar *name);
void APIENTRY gl_dispatch_stub_495(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void APIENTRY gl_dispatch_stub_496(GLuint program, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_497(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void APIENTRY gl_dispatch_stub_498(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
void APIENTRY gl_dispatch_stub_499(GLuint shader, GLenum pname, GLint *params);
GLint APIENTRY gl_dispatch_stub_500(GLuint program, const GLchar *name);
void APIENTRY gl_dispatch_stub_501(GLuint program, GLint location, GLfloat *params);
void APIENTRY gl_dispatch_stub_502(GLuint program, GLint location, GLint *params);
void APIENTRY gl_dispatch_stub_503(GLuint index, GLenum pname, GLvoid **pointer);
void APIENTRY gl_dispatch_stub_504(GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_505(GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_506(GLuint index, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_507(GLuint program);
GLboolean APIENTRY gl_dispatch_stub_508(GLuint shader);
void APIENTRY gl_dispatch_stub_509(GLuint program);
void APIENTRY gl_dispatch_stub_510(GLuint shader, GLsizei count, const GLchar * const *string, const GLint *length);
void APIENTRY gl_dispatch_stub_511(GLenum face, GLenum func, GLint ref, GLuint mask);
void APIENTRY gl_dispatch_stub_512(GLenum face, GLuint mask);
void APIENTRY gl_dispatch_stub_513(GLenum face, GLenum sfail, GLenum zfail, GLenum zpass);
void APIENTRY gl_dispatch_stub_514(GLint location, GLfloat v0);
void APIENTRY gl_dispatch_stub_515(GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_516(GLint location, GLint v0);
void APIENTRY gl_dispatch_stub_517(GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_518(GLint location, GLfloat v0, GLfloat v1);
void APIENTRY gl_dispatch_stub_519(GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_520(GLint location, GLint v0, GLint v1);
void APIENTRY gl_dispatch_stub_521(GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_522(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void APIENTRY gl_dispatch_stub_523(GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_524(GLint location, GLint v0, GLint v1, GLint v2);
void APIENTRY gl_dispatch_stub_525(GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_526(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void APIENTRY gl_dispatch_stub_527(GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_528(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void APIENTRY gl_dispatch_stub_529(GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_530(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_531(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_532(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_533(GLuint program);
void APIENTRY gl_dispatch_stub_534(GLuint program);
void APIENTRY gl_dispatch_stub_535(GLuint index, GLdouble x);
void APIENTRY gl_dispatch_stub_536(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_537(GLuint index, GLshort x);
void APIENTRY gl_dispatch_stub_538(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_539(GLuint index, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_540(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_541(GLuint index, GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_542(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_543(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_544(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_545(GLuint index, GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_546(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_547(GLuint index, const GLbyte *v);
void APIENTRY gl_dispatch_stub_548(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_549(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_550(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void APIENTRY gl_dispatch_stub_551(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_552(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_553(GLuint index, const GLushort *v);
void APIENTRY gl_dispatch_stub_554(GLuint index, const GLbyte *v);
void APIENTRY gl_dispatch_stub_555(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_556(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_557(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_558(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_559(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_560(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_561(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_562(GLuint index, const GLushort *v);
void APIENTRY gl_dispatch_stub_563(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_564(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_565(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_566(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_567(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_568(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_569(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_570(GLuint query, GLenum mode);
void APIENTRY gl_dispatch_stub_571(GLenum mode);
void APIENTRY gl_dispatch_stub_572(GLenum target, GLuint index, GLuint buffer);
void APIENTRY gl_dispatch_stub_573(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_574(GLuint program, GLuint colorNumber, const GLchar *name);
void APIENTRY gl_dispatch_stub_575(GLenum target, GLenum clamp);
void APIENTRY gl_dispatch_stub_576(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void APIENTRY gl_dispatch_stub_577(GLenum buffer, GLint drawbuffer, const GLfloat *value);
void APIENTRY gl_dispatch_stub_578(GLenum buffer, GLint drawbuffer, const GLint *value);
void APIENTRY gl_dispatch_stub_579(GLenum buffer, GLint drawbuffer, const GLuint *value);
void APIENTRY gl_dispatch_stub_580(GLuint buf, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void APIENTRY gl_dispatch_stub_581(GLenum target, GLuint index);
void APIENTRY gl_dispatch_stub_582(GLenum target, GLuint index);
void APIENTRY gl_dispatch_stub_583(void);
void APIENTRY gl_dispatch_stub_584(void);
void APIENTRY gl_dispatch_stub_585(GLenum value, GLuint index, GLboolean *data);
GLint APIENTRY gl_dispatch_stub_586(GLuint program, const GLchar *name);
void APIENTRY gl_dispatch_stub_587(GLenum value, GLuint index, GLint *data);
const GLubyte * APIENTRY gl_dispatch_stub_588(GLenum name, GLuint index);
void APIENTRY gl_dispatch_stub_589(GLenum target, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_590(GLenum target, GLenum pname, GLuint *params);
void APIENTRY gl_dispatch_stub_591(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
void APIENTRY gl_dispatch_stub_592(GLuint program, GLint location, GLuint *params);
void APIENTRY gl_dispatch_stub_593(GLuint index, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_594(GLuint index, GLenum pname, GLuint *params);
GLboolean APIENTRY gl_dispatch_stub_595(GLenum target, GLuint index);
void APIENTRY gl_dispatch_stub_596(GLenum target, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_597(GLenum target, GLenum pname, const GLuint *params);
void APIENTRY gl_dispatch_stub_598(GLuint program, GLsizei count, const GLchar * const *varyings, GLenum bufferMode);
void APIENTRY gl_dispatch_stub_599(GLint location, GLuint x);
void APIENTRY gl_dispatch_stub_600(GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_601(GLint location, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_602(GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_603(GLint location, GLuint x, GLuint y, GLuint z);
void APIENTRY gl_dispatch_stub_604(GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_605(GLint location, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_606(GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_607(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_608(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_609(GLuint index, const GLbyte *v);
void APIENTRY gl_dispatch_stub_610(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_611(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_612(GLuint index, const GLushort *v);
void APIENTRY gl_dispatch_stub_613(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_614(GLuint index);
void APIENTRY gl_dispatch_stub_615(GLenum target, GLenum internalFormat, GLuint buffer);
void APIENTRY gl_dispatch_stub_616(GLenum target, GLenum attachment, GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_617(GLenum target, GLenum pname, GLint64 *params);
void APIENTRY gl_dispatch_stub_618(GLenum cap, GLuint index, GLint64 *data);
void APIENTRY gl_dispatch_stub_619(GLuint index, GLuint divisor);
void APIENTRY gl_dispatch_stub_620(GLfloat value);
void APIENTRY gl_dispatch_stub_621(GLenum target, GLuint program);
void APIENTRY gl_dispatch_stub_622(GLsizei n, const GLuint *programs);
void APIENTRY gl_dispatch_stub_623(GLsizei n, GLuint *programs);
void APIENTRY gl_dispatch_stub_624(GLenum target, GLuint index, GLdouble *params);
void APIENTRY gl_dispatch_stub_625(GLenum target, GLuint index, GLfloat *params);
void APIENTRY gl_dispatch_stub_626(GLenum target, GLuint index, GLdouble *params);
void APIENTRY gl_dispatch_stub_627(GLenum target, GLuint index, GLfloat *params);
void APIENTRY gl_dispatch_stub_628(GLenum target, GLenum pname, GLvoid *string);
void APIENTRY gl_dispatch_stub_629(GLenum target, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_630(GLuint program);
void APIENTRY gl_dispatch_stub_631(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_632(GLenum target, GLuint index, const GLdouble *params);
void APIENTRY gl_dispatch_stub_633(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_634(GLenum target, GLuint index, const GLfloat *params);
void APIENTRY gl_dispatch_stub_635(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_636(GLenum target, GLuint index, const GLdouble *params);
void APIENTRY gl_dispatch_stub_637(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_638(GLenum target, GLuint index, const GLfloat *params);
void APIENTRY gl_dispatch_stub_639(GLenum target, GLenum format, GLsizei len, const GLvoid *string);
void APIENTRY gl_dispatch_stub_640(GLuint index, GLfloat x);
void APIENTRY gl_dispatch_stub_641(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_642(GLuint index, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_643(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_644(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_645(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_646(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_647(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_648(GLhandleARB containerObj, GLhandleARB obj);
GLhandleARB APIENTRY gl_dispatch_stub_649(void);
GLhandleARB APIENTRY gl_dispatch_stub_650(GLenum shaderType);
void APIENTRY gl_dispatch_stub_651(GLhandleARB obj);
void APIENTRY gl_dispatch_stub_652(GLhandleARB containerObj, GLhandleARB attachedObj);
void APIENTRY gl_dispatch_stub_653(GLhandleARB containerObj, GLsizei maxLength, GLsizei *length, GLhandleARB *infoLog);
GLhandleARB APIENTRY gl_dispatch_stub_654(GLenum pname);
void APIENTRY gl_dispatch_stub_655(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
void APIENTRY gl_dispatch_stub_656(GLhandleARB obj, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_657(GLhandleARB obj, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_658(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void APIENTRY gl_dispatch_stub_659(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
void APIENTRY gl_dispatch_stub_660(GLenum target, GLuint framebuffer);
void APIENTRY gl_dispatch_stub_661(GLenum target, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_662(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLenum APIENTRY gl_dispatch_stub_663(GLenum target);
void APIENTRY gl_dispatch_stub_664(GLsizei n, const GLuint *framebuffers);
void APIENTRY gl_dispatch_stub_665(GLsizei n, const GLuint *renderbuffers);
void APIENTRY gl_dispatch_stub_666(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_667(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_668(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_669(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void APIENTRY gl_dispatch_stub_670(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void APIENTRY gl_dispatch_stub_671(GLsizei n, GLuint *framebuffers);
void APIENTRY gl_dispatch_stub_672(GLsizei n, GLuint *renderbuffers);
void APIENTRY gl_dispatch_stub_673(GLenum target);
void APIENTRY gl_dispatch_stub_674(GLenum target, GLenum attachment, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_675(GLenum target, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_676(GLuint framebuffer);
GLboolean APIENTRY gl_dispatch_stub_677(GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_678(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_679(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_680(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
void APIENTRY gl_dispatch_stub_681(GLenum target, GLintptr offset, GLsizeiptr length);
GLvoid * APIENTRY gl_dispatch_stub_682(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void APIENTRY gl_dispatch_stub_683(GLuint array);
void APIENTRY gl_dispatch_stub_684(GLsizei n, const GLuint *arrays);
void APIENTRY gl_dispatch_stub_685(GLsizei n, GLuint *arrays);
GLboolean APIENTRY gl_dispatch_stub_686(GLuint array);
void APIENTRY gl_dispatch_stub_687(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
void APIENTRY gl_dispatch_stub_688(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_689(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
void APIENTRY gl_dispatch_stub_690(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
GLuint APIENTRY gl_dispatch_stub_691(GLuint program, const GLchar *uniformBlockName);
void APIENTRY gl_dispatch_stub_692(GLuint program, GLsizei uniformCount, const GLchar * const *uniformNames, GLuint *uniformIndices);
void APIENTRY gl_dispatch_stub_693(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void APIENTRY gl_dispatch_stub_694(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLenum APIENTRY gl_dispatch_stub_695(GLsync sync, GLbitfield flags, GLuint64 timeout);
void APIENTRY gl_dispatch_stub_696(GLsync sync);
GLsync APIENTRY gl_dispatch_stub_697(GLenum condition, GLbitfield flags);
void APIENTRY gl_dispatch_stub_698(GLenum pname, GLint64 *params);
void APIENTRY gl_dispatch_stub_699(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
GLboolean APIENTRY gl_dispatch_stub_700(GLsync sync);
void APIENTRY gl_dispatch_stub_701(GLsync sync, GLbitfield flags, GLuint64 timeout);
void APIENTRY gl_dispatch_stub_702(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
void APIENTRY gl_dispatch_stub_703(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex);
void APIENTRY gl_dispatch_stub_704(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
void APIENTRY gl_dispatch_stub_705(GLenum mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, const GLint *basevertex);
void APIENTRY gl_dispatch_stub_706(GLenum mode);
void APIENTRY gl_dispatch_stub_707(GLenum pname, GLuint index, GLfloat *val);
void APIENTRY gl_dispatch_stub_708(GLuint index, GLbitfield mask);
void APIENTRY gl_dispatch_stub_709(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_710(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_711(GLuint buf, GLenum modeRGB, GLenum modeA);
void APIENTRY gl_dispatch_stub_712(GLuint buf, GLenum mode);
void APIENTRY gl_dispatch_stub_713(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcA, GLenum dstA);
void APIENTRY gl_dispatch_stub_714(GLuint buf, GLenum src, GLenum dst);
void APIENTRY gl_dispatch_stub_715(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
GLint APIENTRY gl_dispatch_stub_716(GLuint program, const GLchar *name);
void APIENTRY gl_dispatch_stub_717(GLuint unit, GLuint sampler);
void APIENTRY gl_dispatch_stub_718(GLsizei count, const GLuint *samplers);
void APIENTRY gl_dispatch_stub_719(GLsizei count, GLuint *samplers);
void APIENTRY gl_dispatch_stub_720(GLuint sampler, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_721(GLuint sampler, GLenum pname, GLuint *params);
void APIENTRY gl_dispatch_stub_722(GLuint sampler, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_723(GLuint sampler, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_724(GLuint sampler);
void APIENTRY gl_dispatch_stub_725(GLuint sampler, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_726(GLuint sampler, GLenum pname, const GLuint *params);
void APIENTRY gl_dispatch_stub_727(GLuint sampler, GLenum pname, GLfloat param);
void APIENTRY gl_dispatch_stub_728(GLuint sampler, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_729(GLuint sampler, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_730(GLuint sampler, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_731(GLuint id, GLenum pname, GLint64 *params);
void APIENTRY gl_dispatch_stub_732(GLuint id, GLenum pname, GLuint64 *params);
void APIENTRY gl_dispatch_stub_733(GLuint id, GLenum target);
void APIENTRY gl_dispatch_stub_734(GLenum type, GLuint color);
void APIENTRY gl_dispatch_stub_735(GLenum type, const GLuint *color);
void APIENTRY gl_dispatch_stub_736(GLenum type, GLuint color);
void APIENTRY gl_dispatch_stub_737(GLenum type, const GLuint *color);
void APIENTRY gl_dispatch_stub_738(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_739(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_740(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_741(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_742(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_743(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_744(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_745(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_746(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_747(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_748(GLenum type, GLuint color);
void APIENTRY gl_dispatch_stub_749(GLenum type, const GLuint *color);
void APIENTRY gl_dispatch_stub_750(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_751(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_752(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_753(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_754(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_755(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_756(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_757(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_758(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_759(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_760(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_761(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_762(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_763(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_764(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_765(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_766(GLenum type, GLuint value);
void APIENTRY gl_dispatch_stub_767(GLenum type, const GLuint *value);
void APIENTRY gl_dispatch_stub_768(GLenum type, GLuint value);
void APIENTRY gl_dispatch_stub_769(GLenum type, const GLuint *value);
void APIENTRY gl_dispatch_stub_770(GLenum type, GLuint value);
void APIENTRY gl_dispatch_stub_771(GLenum type, const GLuint *value);
void APIENTRY gl_dispatch_stub_772(GLenum mode, const GLvoid *indirect);
void APIENTRY gl_dispatch_stub_773(GLenum mode, GLenum type, const GLvoid *indirect);
void APIENTRY gl_dispatch_stub_774(GLenum target, GLuint id);
void APIENTRY gl_dispatch_stub_775(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_776(GLenum mode, GLuint id);
void APIENTRY gl_dispatch_stub_777(GLsizei n, GLuint *ids);
GLboolean APIENTRY gl_dispatch_stub_778(GLuint id);
void APIENTRY gl_dispatch_stub_779(void);
void APIENTRY gl_dispatch_stub_780(void);
void APIENTRY gl_dispatch_stub_781(GLenum target, GLuint index, GLuint id);
void APIENTRY gl_dispatch_stub_782(GLenum mode, GLuint id, GLuint stream);
void APIENTRY gl_dispatch_stub_783(GLenum target, GLuint index);
void APIENTRY gl_dispatch_stub_784(GLenum target, GLuint index, GLenum pname, GLint *params);
GLAPI void APIENTRY glClearDepthf(GLclampf depth);
GLAPI void APIENTRY glDepthRangef(GLclampf zNear, GLclampf zFar);
void APIENTRY gl_dispatch_stub_787(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
void APIENTRY gl_dispatch_stub_788(void);
void APIENTRY gl_dispatch_stub_789(GLsizei n, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
void APIENTRY gl_dispatch_stub_790(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);
void APIENTRY gl_dispatch_stub_791(GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);
void APIENTRY gl_dispatch_stub_792(GLuint program, GLenum pname, GLint value);
void APIENTRY gl_dispatch_stub_793(GLuint first, GLsizei count, const GLclampd *v);
void APIENTRY gl_dispatch_stub_794(GLuint index, GLclampd n, GLclampd f);
void APIENTRY gl_dispatch_stub_795(GLenum target, GLuint index, GLdouble *data);
void APIENTRY gl_dispatch_stub_796(GLenum target, GLuint index, GLfloat *data);
void APIENTRY gl_dispatch_stub_797(GLuint first, GLsizei count, const int *v);
void APIENTRY gl_dispatch_stub_798(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_799(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_800(GLuint first, GLsizei count, const GLfloat *v);
void APIENTRY gl_dispatch_stub_801(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void APIENTRY gl_dispatch_stub_802(GLuint index, const GLfloat *v);
GLenum APIENTRY gl_dispatch_stub_803(void);
void APIENTRY gl_dispatch_stub_804(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
void APIENTRY gl_dispatch_stub_805(GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
void APIENTRY gl_dispatch_stub_806(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
void APIENTRY gl_dispatch_stub_807(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
void APIENTRY gl_dispatch_stub_808(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
void APIENTRY gl_dispatch_stub_809(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
void APIENTRY gl_dispatch_stub_810(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
void APIENTRY gl_dispatch_stub_811(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
void APIENTRY gl_dispatch_stub_812(GLenum map, GLsizei bufSize, GLfloat *values);
void APIENTRY gl_dispatch_stub_813(GLenum map, GLsizei bufSize, GLuint *values);
void APIENTRY gl_dispatch_stub_814(GLenum map, GLsizei bufSize, GLushort *values);
void APIENTRY gl_dispatch_stub_815(GLsizei bufSize, GLubyte *pattern);
void APIENTRY gl_dispatch_stub_816(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
void APIENTRY gl_dispatch_stub_817(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
void APIENTRY gl_dispatch_stub_818(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
void APIENTRY gl_dispatch_stub_819(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void APIENTRY gl_dispatch_stub_820(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void APIENTRY gl_dispatch_stub_821(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
void APIENTRY gl_dispatch_stub_822(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
void APIENTRY gl_dispatch_stub_823(GLenum mode, GLint first, GLsizei count, GLsizei primcount, GLuint baseinstance);
void APIENTRY gl_dispatch_stub_824(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLuint baseinstance);
void APIENTRY gl_dispatch_stub_825(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex, GLuint baseinstance);
void APIENTRY gl_dispatch_stub_826(GLenum mode, GLuint id, GLsizei primcount);
void APIENTRY gl_dispatch_stub_827(GLenum mode, GLuint id, GLuint stream, GLsizei primcount);
void APIENTRY gl_dispatch_stub_828(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
void APIENTRY gl_dispatch_stub_829(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_830(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
void APIENTRY gl_dispatch_stub_831(GLbitfield barriers);
void APIENTRY gl_dispatch_stub_832(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width);
void APIENTRY gl_dispatch_stub_833(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_834(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_835(GLuint texture, GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width);
void APIENTRY gl_dispatch_stub_836(GLuint texture, GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_837(GLuint texture, GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_838(GLenum target, GLenum internalformat, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_839(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_840(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
void APIENTRY gl_dispatch_stub_841(GLintptr indirect);
void APIENTRY gl_dispatch_stub_842(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void APIENTRY gl_dispatch_stub_843(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void APIENTRY gl_dispatch_stub_844(GLuint attribindex, GLuint bindingindex);
void APIENTRY gl_dispatch_stub_845(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_846(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_847(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_848(GLuint attribindex, GLuint divisor);
void APIENTRY gl_dispatch_stub_849(GLenum mode, const GLvoid *indirect, GLsizei primcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_850(GLenum mode, GLenum type, const GLvoid *indirect, GLsizei primcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_851(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_852(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_853(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_854(GLenum target, GLsizeiptr size, const GLvoid *data, GLbitfield flags);
void APIENTRY gl_dispatch_stub_855(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
void APIENTRY gl_dispatch_stub_856(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
void APIENTRY gl_dispatch_stub_857(GLuint first, GLsizei count, const GLuint *textures);
void APIENTRY gl_dispatch_stub_858(GLuint first, GLsizei count, const GLuint *samplers);
void APIENTRY gl_dispatch_stub_859(GLuint first, GLsizei count, const GLuint *textures);
void APIENTRY gl_dispatch_stub_860(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
void APIENTRY gl_dispatch_stub_861(GLuint buffer);
void APIENTRY gl_dispatch_stub_862(GLuint buffer, GLintptr offset, GLsizeiptr length);
void APIENTRY gl_dispatch_stub_863(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_864(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_865(GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_866(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_867(GLfloat factor, GLfloat bias);
void APIENTRY gl_dispatch_stub_868(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
void APIENTRY gl_dispatch_stub_869(const GLfloat *coords);
void APIENTRY gl_dispatch_stub_870(GLint x, GLint y, GLint z, GLint width, GLint height);
void APIENTRY gl_dispatch_stub_871(const GLint *coords);
void APIENTRY gl_dispatch_stub_872(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
void APIENTRY gl_dispatch_stub_873(const GLshort *coords);
void APIENTRY gl_dispatch_stub_874(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
void APIENTRY gl_dispatch_stub_875(const GLfixed *coords);
GLAPI void APIENTRY glPointSizePointerOES(GLenum type, GLsizei stride, const GLvoid *pointer);
GLbitfield APIENTRY gl_dispatch_stub_877(GLfixed *mantissa, GLint *exponent);
void APIENTRY gl_dispatch_stub_878(GLclampf value, GLboolean invert);
void APIENTRY gl_dispatch_stub_879(GLenum pattern);
void APIENTRY gl_dispatch_stub_880(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_881(GLsizei stride, GLsizei count, const GLboolean *pointer);
void APIENTRY gl_dispatch_stub_882(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_883(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_884(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_885(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_886(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_887(GLuint pipeline, GLuint program);
void APIENTRY gl_dispatch_stub_888(GLuint pipeline);
GLuint APIENTRY gl_dispatch_stub_889(GLenum type, GLsizei count, const GLchar * const *strings);
void APIENTRY gl_dispatch_stub_890(GLsizei n, const GLuint *pipelines);
void APIENTRY gl_dispatch_stub_891(GLsizei n, GLuint *pipelines);
void APIENTRY gl_dispatch_stub_892(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void APIENTRY gl_dispatch_stub_893(GLuint pipeline, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_894(GLuint pipeline);
void APIENTRY gl_dispatch_stub_895(GLint first, GLsizei count);
void APIENTRY gl_dispatch_stub_896(GLuint program, GLint location, GLfloat x);
void APIENTRY gl_dispatch_stub_897(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_898(GLuint program, GLint location, GLint x);
void APIENTRY gl_dispatch_stub_899(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_900(GLuint program, GLint location, GLuint x);
void APIENTRY gl_dispatch_stub_901(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_902(GLuint program, GLint location, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_903(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_904(GLuint program, GLint location, GLint x, GLint y);
void APIENTRY gl_dispatch_stub_905(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_906(GLuint program, GLint location, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_907(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_908(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_909(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_910(GLuint program, GLint location, GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_911(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_912(GLuint program, GLint location, GLuint x, GLuint y, GLuint z);
void APIENTRY gl_dispatch_stub_913(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_914(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_915(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_916(GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_917(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_918(GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_919(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_920(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_921(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_922(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_923(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_924(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_925(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_926(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_927(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_928(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_929(void);
void APIENTRY gl_dispatch_stub_930(GLuint pipeline, GLbitfield stages, GLuint program);
void APIENTRY gl_dispatch_stub_931(GLuint pipeline);
void APIENTRY gl_dispatch_stub_932(GLDEBUGPROC callback, const GLvoid *userParam);
void APIENTRY gl_dispatch_stub_933(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void APIENTRY gl_dispatch_stub_934(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
GLuint APIENTRY gl_dispatch_stub_935(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void APIENTRY gl_dispatch_stub_936(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
void APIENTRY gl_dispatch_stub_937(const GLvoid *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
void APIENTRY gl_dispatch_stub_938(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
void APIENTRY gl_dispatch_stub_939(const GLvoid *ptr, GLsizei length, const GLchar *label);
void APIENTRY gl_dispatch_stub_940(void);
void APIENTRY gl_dispatch_stub_941(GLenum source, GLuint id, GLsizei length, const GLchar *message);
void APIENTRY gl_dispatch_stub_942(GLfloat red, GLfloat green, GLfloat blue);
void APIENTRY gl_dispatch_stub_943(const GLfloat *v);
GLAPI void APIENTRY glMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount);
void APIENTRY gl_dispatch_stub_945(GLfloat coord);
void APIENTRY gl_dispatch_stub_946(const GLfloat *coord);
void APIENTRY gl_dispatch_stub_947(void);
void APIENTRY gl_dispatch_stub_948(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_949(const GLdouble *v);
void APIENTRY gl_dispatch_stub_950(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_951(const GLfloat *v);
void APIENTRY gl_dispatch_stub_952(GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_953(const GLint *v);
void APIENTRY gl_dispatch_stub_954(GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_955(const GLshort *v);
void APIENTRY gl_dispatch_stub_956(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
void APIENTRY gl_dispatch_stub_957(const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, GLint modestride);
GLboolean APIENTRY gl_dispatch_stub_958(GLsizei n, const GLuint *ids, GLboolean *residences);
void APIENTRY gl_dispatch_stub_959(GLenum target, GLuint id, const GLfloat *params);
void APIENTRY gl_dispatch_stub_960(GLenum target, GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_961(GLenum target, GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_962(GLuint id, GLenum pname, GLubyte *program);
void APIENTRY gl_dispatch_stub_963(GLuint id, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_964(GLenum target, GLuint address, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_965(GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_966(GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_967(GLuint index, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_968(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
void APIENTRY gl_dispatch_stub_969(GLenum target, GLuint index, GLsizei num, const GLdouble *params);
void APIENTRY gl_dispatch_stub_970(GLenum target, GLuint index, GLsizei num, const GLfloat *params);
void APIENTRY gl_dispatch_stub_971(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_972(GLenum target, GLuint address, GLenum matrix, GLenum transform);
void APIENTRY gl_dispatch_stub_973(GLuint index, GLdouble x);
void APIENTRY gl_dispatch_stub_974(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_975(GLuint index, GLfloat x);
void APIENTRY gl_dispatch_stub_976(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_977(GLuint index, GLshort x);
void APIENTRY gl_dispatch_stub_978(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_979(GLuint index, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_980(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_981(GLuint index, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_982(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_983(GLuint index, GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_984(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_985(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_986(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_987(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_988(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_989(GLuint index, GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_990(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_991(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_992(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_993(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_994(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_995(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_996(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_997(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void APIENTRY gl_dispatch_stub_998(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_999(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_1000(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1001(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1002(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1003(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1004(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1005(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1006(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1007(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1008(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1009(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1010(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1011(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1012(GLuint index, GLsizei n, const GLubyte *v);
void APIENTRY gl_dispatch_stub_1013(GLenum pname, GLfloat *param);
void APIENTRY gl_dispatch_stub_1014(GLenum pname, GLint *param);
void APIENTRY gl_dispatch_stub_1015(GLenum pname, const GLfloat *param);
void APIENTRY gl_dispatch_stub_1016(GLenum pname, const GLint *param);
void APIENTRY gl_dispatch_stub_1017(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_1018(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_1019(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void APIENTRY gl_dispatch_stub_1020(void);
void APIENTRY gl_dispatch_stub_1021(GLuint id);
void APIENTRY gl_dispatch_stub_1022(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_1023(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_1024(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void APIENTRY gl_dispatch_stub_1025(GLuint id);
void APIENTRY gl_dispatch_stub_1026(void);
GLuint APIENTRY gl_dispatch_stub_1027(GLuint range);
void APIENTRY gl_dispatch_stub_1028(GLuint dst, GLuint coord, GLenum swizzle);
void APIENTRY gl_dispatch_stub_1029(GLuint dst, GLuint interp, GLenum swizzle);
void APIENTRY gl_dispatch_stub_1030(GLuint dst, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1031(GLenum face);
void APIENTRY gl_dispatch_stub_1032(GLuint array);
void APIENTRY gl_dispatch_stub_1033(GLsizei n, GLuint *arrays);
void APIENTRY gl_dispatch_stub_1034(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
void APIENTRY gl_dispatch_stub_1035(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
void APIENTRY gl_dispatch_stub_1036(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_1037(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1038(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_1039(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1040(void);
void APIENTRY gl_dispatch_stub_1041(GLenum coord, GLenum pname, GLfixed *params);
void APIENTRY gl_dispatch_stub_1042(GLenum coord, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_1043(GLenum coord, GLenum pname, const GLfixed *params);
void APIENTRY gl_dispatch_stub_1044(GLclampd zmin, GLclampd zmax);
void APIENTRY gl_dispatch_stub_1045(GLenum target, GLuint framebuffer);
void APIENTRY gl_dispatch_stub_1046(GLenum target, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_1047(GLenum target, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_1048(GLenum target, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_1049(GLuint index, GLint x);
void APIENTRY gl_dispatch_stub_1050(GLuint index, GLuint x);
void APIENTRY gl_dispatch_stub_1051(GLuint index, GLint x, GLint y);
void APIENTRY gl_dispatch_stub_1052(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_1053(GLuint index, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_1054(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_1055(GLuint index, GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_1056(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_1057(GLuint index, GLuint x, GLuint y, GLuint z);
void APIENTRY gl_dispatch_stub_1058(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_1059(GLuint index, GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_1060(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_1061(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_1062(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_1063(GLint r, GLint g, GLint b, GLint a);
void APIENTRY gl_dispatch_stub_1064(GLuint r, GLuint g, GLuint b, GLuint a);
void APIENTRY gl_dispatch_stub_1065(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void APIENTRY gl_dispatch_stub_1066(GLuint monitor);
void APIENTRY gl_dispatch_stub_1067(GLsizei n, GLuint *monitors);
void APIENTRY gl_dispatch_stub_1068(GLuint monitor);
void APIENTRY gl_dispatch_stub_1069(GLsizei n, GLuint *monitors);
void APIENTRY gl_dispatch_stub_1070(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
void APIENTRY gl_dispatch_stub_1071(GLuint group, GLuint counter, GLenum pname, GLvoid *data);
void APIENTRY gl_dispatch_stub_1072(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
void APIENTRY gl_dispatch_stub_1073(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei countersSize, GLuint *counters);
void APIENTRY gl_dispatch_stub_1074(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
void APIENTRY gl_dispatch_stub_1075(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
void APIENTRY gl_dispatch_stub_1076(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
void APIENTRY gl_dispatch_stub_1077(GLenum objectType, GLuint name, GLenum pname, GLint *value);
GLenum APIENTRY gl_dispatch_stub_1078(GLenum objectType, GLuint name, GLenum option);
GLenum APIENTRY gl_dispatch_stub_1079(GLenum objectType, GLuint name, GLenum option);
void APIENTRY gl_dispatch_stub_1080(GLuint program);
GLuint APIENTRY gl_dispatch_stub_1081(GLenum type, const GLchar *string);
void APIENTRY gl_dispatch_stub_1082(GLenum type, GLuint program);
void APIENTRY gl_dispatch_stub_1083(void);
void APIENTRY gl_dispatch_stub_1084(void);
void APIENTRY gl_dispatch_stub_1085(GLintptr surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void APIENTRY gl_dispatch_stub_1086(const GLvoid *vdpDevice, const GLvoid *getProcAddress);
GLboolean APIENTRY gl_dispatch_stub_1087(GLintptr surface);
void APIENTRY gl_dispatch_stub_1088(GLsizei numSurfaces, const GLintptr *surfaces);
GLintptr APIENTRY gl_dispatch_stub_1089(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLintptr APIENTRY gl_dispatch_stub_1090(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
void APIENTRY gl_dispatch_stub_1091(GLintptr surface, GLenum access);
void APIENTRY gl_dispatch_stub_1092(GLsizei numSurfaces, const GLintptr *surfaces);
void APIENTRY gl_dispatch_stub_1093(GLintptr surface);
void APIENTRY gl_dispatch_stub_1094(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1095(GLuint queryId, GLuint *queryHandle);
void APIENTRY gl_dispatch_stub_1096(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1097(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1098(GLuint *queryId);
void APIENTRY gl_dispatch_stub_1099(GLuint queryId, GLuint *nextQueryId);
void APIENTRY gl_dispatch_stub_1100(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
void APIENTRY gl_dispatch_stub_1101(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
void APIENTRY gl_dispatch_stub_1102(GLchar *queryName, GLuint *queryId);
void APIENTRY gl_dispatch_stub_1103(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
void APIENTRY gl_dispatch_stub_1104(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
void APIENTRY gl_dispatch_stub_1105(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void APIENTRY gl_dispatch_stub_1106(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
GLAPI void APIENTRY glEGLImageTargetRenderbufferStorageOES(GLenum target, GLvoid *writeOffset);
GLAPI void APIENTRY glEGLImageTargetTexture2DOES(GLenum target, GLvoid *writeOffset);
GLAPI void APIENTRY glAlphaFuncx(GLenum func, GLclampx ref);
GLAPI void APIENTRY glClearColorx(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);
GLAPI void APIENTRY glClearDepthx(GLclampx depth);
GLAPI void APIENTRY glColor4x(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLAPI void APIENTRY glDepthRangex(GLclampx zNear, GLclampx zFar);
GLAPI void APIENTRY glFogx(GLenum pname, GLfixed param);
GLAPI void APIENTRY glFogxv(GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glFrustumf(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
GLAPI void APIENTRY glFrustumx(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
GLAPI void APIENTRY glLightModelx(GLenum pname, GLfixed param);
GLAPI void APIENTRY glLightModelxv(GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glLightx(GLenum light, GLenum pname, GLfixed param);
GLAPI void APIENTRY glLightxv(GLenum light, GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glLineWidthx(GLfixed width);
GLAPI void APIENTRY glLoadMatrixx(const GLfixed *m);
GLAPI void APIENTRY glMaterialx(GLenum face, GLenum pname, GLfixed param);
GLAPI void APIENTRY glMaterialxv(GLenum face, GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glMultMatrixx(const GLfixed *m);
GLAPI void APIENTRY glMultiTexCoord4x(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLAPI void APIENTRY glNormal3x(GLfixed nx, GLfixed ny, GLfixed nz);
GLAPI void APIENTRY glOrthof(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
GLAPI void APIENTRY glOrthox(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
GLAPI void APIENTRY glPointSizex(GLfixed size);
GLAPI void APIENTRY glPolygonOffsetx(GLfixed factor, GLfixed units);
GLAPI void APIENTRY glRotatex(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
GLAPI void APIENTRY glSampleCoveragex(GLclampx value, GLboolean invert);
GLAPI void APIENTRY glScalex(GLfixed x, GLfixed y, GLfixed z);
GLAPI void APIENTRY glTexEnvx(GLenum target, GLenum pname, GLfixed param);
GLAPI void APIENTRY glTexEnvxv(GLenum target, GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glTexParameterx(GLenum target, GLenum pname, GLfixed param);
GLAPI void APIENTRY glTranslatex(GLfixed x, GLfixed y, GLfixed z);
GLAPI void APIENTRY glClipPlanef(GLenum plane, const GLfloat *equation);
GLAPI void APIENTRY glClipPlanex(GLenum plane, const GLfixed *equation);
GLAPI void APIENTRY glGetClipPlanef(GLenum plane, GLfloat *equation);
GLAPI void APIENTRY glGetClipPlanex(GLenum plane, GLfixed *equation);
GLAPI void APIENTRY glGetFixedv(GLenum pname, GLfixed *params);
GLAPI void APIENTRY glGetLightxv(GLenum light, GLenum pname, GLfixed *params);
GLAPI void APIENTRY glGetMaterialxv(GLenum face, GLenum pname, GLfixed *params);
GLAPI void APIENTRY glGetTexEnvxv(GLenum target, GLenum pname, GLfixed *params);
GLAPI void APIENTRY glGetTexParameterxv(GLenum target, GLenum pname, GLfixed *params);
GLAPI void APIENTRY glPointParameterx(GLenum pname, GLfixed param);
GLAPI void APIENTRY glPointParameterxv(GLenum pname, const GLfixed *params);
GLAPI void APIENTRY glTexParameterxv(GLenum target, GLenum pname, const GLfixed *params);
#undef MAPI_TMP_DEFINES
#endif /* MAPI_TMP_DEFINES */

#ifdef MAPI_TMP_PUBLIC_ENTRIES_NO_HIDDEN
GLAPI void APIENTRY glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[29];
   ((void (APIENTRY *)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[35];
   ((void (APIENTRY *)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[56];
   ((void (APIENTRY *)(GLfloat nx, GLfloat ny, GLfloat nz)) _func)(nx, ny, nz);
}

GLAPI void APIENTRY glCullFace(GLenum mode)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[152];
   ((void (APIENTRY *)(GLenum mode)) _func)(mode);
}

GLAPI void APIENTRY glFogf(GLenum pname, GLfloat param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[153];
   ((void (APIENTRY *)(GLenum pname, GLfloat param)) _func)(pname, param);
}

GLAPI void APIENTRY glFogfv(GLenum pname, const GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[154];
   ((void (APIENTRY *)(GLenum pname, const GLfloat *params)) _func)(pname, params);
}

GLAPI void APIENTRY glFrontFace(GLenum mode)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[157];
   ((void (APIENTRY *)(GLenum mode)) _func)(mode);
}

GLAPI void APIENTRY glHint(GLenum target, GLenum mode)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[158];
   ((void (APIENTRY *)(GLenum target, GLenum mode)) _func)(target, mode);
}

GLAPI void APIENTRY glLightf(GLenum light, GLenum pname, GLfloat param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[159];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfloat param)) _func)(light, pname, param);
}

GLAPI void APIENTRY glLightfv(GLenum light, GLenum pname, const GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[160];
   ((void (APIENTRY *)(GLenum light, GLenum pname, const GLfloat *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glLightModelf(GLenum pname, GLfloat param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[163];
   ((void (APIENTRY *)(GLenum pname, GLfloat param)) _func)(pname, param);
}

GLAPI void APIENTRY glLightModelfv(GLenum pname, const GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[164];
   ((void (APIENTRY *)(GLenum pname, const GLfloat *params)) _func)(pname, params);
}

GLAPI void APIENTRY glLineWidth(GLfloat width)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[168];
   ((void (APIENTRY *)(GLfloat width)) _func)(width);
}

GLAPI void APIENTRY glMaterialf(GLenum face, GLenum pname, GLfloat param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[169];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfloat param)) _func)(face, pname, param);
}

GLAPI void APIENTRY glMaterialfv(GLenum face, GLenum pname, const GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[170];
   ((void (APIENTRY *)(GLenum face, GLenum pname, const GLfloat *params)) _func)(face, pname, params);
}

GLAPI void APIENTRY glPointSize(GLfloat size)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[173];
   ((void (APIENTRY *)(GLfloat size)) _func)(size);
}

GLAPI void APIENTRY glScissor(GLint x, GLint y, GLsizei width, GLsizei height)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[176];
   ((void (APIENTRY *)(GLint x, GLint y, GLsizei width, GLsizei height)) _func)(x, y, width, height);
}

GLAPI void APIENTRY glShadeModel(GLenum mode)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[177];
   ((void (APIENTRY *)(GLenum mode)) _func)(mode);
}

GLAPI void APIENTRY glTexParameterf(GLenum target, GLenum pname, GLfloat param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[178];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfloat param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[179];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfloat *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexParameteri(GLenum target, GLenum pname, GLint param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[180];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexParameteriv(GLenum target, GLenum pname, const GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[181];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLint *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[183];
   ((void (APIENTRY *)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)) _func)(target, level, internalformat, width, height, border, format, type, pixels);
}

GLAPI void APIENTRY glTexEnvf(GLenum target, GLenum pname, GLfloat param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[184];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfloat param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[185];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfloat *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexEnvi(GLenum target, GLenum pname, GLint param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[186];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexEnviv(GLenum target, GLenum pname, const GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[187];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLint *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glClear(GLbitfield mask)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[203];
   ((void (APIENTRY *)(GLbitfield mask)) _func)(mask);
}

GLAPI void APIENTRY glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[206];
   ((void (APIENTRY *)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glClearStencil(GLint s)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[207];
   ((void (APIENTRY *)(GLint s)) _func)(s);
}

GLAPI void APIENTRY glStencilMask(GLuint mask)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[209];
   ((void (APIENTRY *)(GLuint mask)) _func)(mask);
}

GLAPI void APIENTRY glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[210];
   ((void (APIENTRY *)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glDepthMask(GLboolean flag)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[211];
   ((void (APIENTRY *)(GLboolean flag)) _func)(flag);
}

GLAPI void APIENTRY glDisable(GLenum cap)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[214];
   ((void (APIENTRY *)(GLenum cap)) _func)(cap);
}

GLAPI void APIENTRY glEnable(GLenum cap)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[215];
   ((void (APIENTRY *)(GLenum cap)) _func)(cap);
}

GLAPI void APIENTRY glFinish(void)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[216];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glFlush(void)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[217];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glAlphaFunc(GLenum func, GLclampf ref)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[240];
   ((void (APIENTRY *)(GLenum func, GLclampf ref)) _func)(func, ref);
}

GLAPI void APIENTRY glBlendFunc(GLenum sfactor, GLenum dfactor)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[241];
   ((void (APIENTRY *)(GLenum sfactor, GLenum dfactor)) _func)(sfactor, dfactor);
}

GLAPI void APIENTRY glLogicOp(GLenum opcode)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[242];
   ((void (APIENTRY *)(GLenum opcode)) _func)(opcode);
}

GLAPI void APIENTRY glStencilFunc(GLenum func, GLint ref, GLuint mask)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[243];
   ((void (APIENTRY *)(GLenum func, GLint ref, GLuint mask)) _func)(func, ref, mask);
}

GLAPI void APIENTRY glStencilOp(GLenum fail, GLenum zfail, GLenum zpass)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[244];
   ((void (APIENTRY *)(GLenum fail, GLenum zfail, GLenum zpass)) _func)(fail, zfail, zpass);
}

GLAPI void APIENTRY glDepthFunc(GLenum func)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[245];
   ((void (APIENTRY *)(GLenum func)) _func)(func);
}

GLAPI void APIENTRY glPixelStorei(GLenum pname, GLint param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[250];
   ((void (APIENTRY *)(GLenum pname, GLint param)) _func)(pname, param);
}

GLAPI void APIENTRY glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[256];
   ((void (APIENTRY *)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)) _func)(x, y, width, height, format, type, pixels);
}

GLAPI void APIENTRY glGetBooleanv(GLenum pname, GLboolean *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[258];
   ((void (APIENTRY *)(GLenum pname, GLboolean *params)) _func)(pname, params);
}

GLAPI GLenum APIENTRY glGetError(void)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[261];
   return ((GLenum (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glGetFloatv(GLenum pname, GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[262];
   ((void (APIENTRY *)(GLenum pname, GLfloat *params)) _func)(pname, params);
}

GLAPI void APIENTRY glGetIntegerv(GLenum pname, GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[263];
   ((void (APIENTRY *)(GLenum pname, GLint *params)) _func)(pname, params);
}

GLAPI void APIENTRY glGetLightfv(GLenum light, GLenum pname, GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[264];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfloat *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[269];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfloat *params)) _func)(face, pname, params);
}

GLAPI const GLubyte * APIENTRY glGetString(GLenum name)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[275];
   return ((const GLubyte * (APIENTRY *)(GLenum name)) _func)(name);
}

GLAPI void APIENTRY glGetTexEnvfv(GLenum target, GLenum pname, GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[276];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfloat *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexEnviv(GLenum target, GLenum pname, GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[277];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[282];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfloat *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexParameteriv(GLenum target, GLenum pname, GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[283];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint *params)) _func)(target, pname, params);
}

GLAPI GLboolean APIENTRY glIsEnabled(GLenum cap)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[286];
   return ((GLboolean (APIENTRY *)(GLenum cap)) _func)(cap);
}

GLAPI void APIENTRY glLoadIdentity(void)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[290];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glLoadMatrixf(const GLfloat *m)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[291];
   ((void (APIENTRY *)(const GLfloat *m)) _func)(m);
}

GLAPI void APIENTRY glMatrixMode(GLenum mode)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[293];
   ((void (APIENTRY *)(GLenum mode)) _func)(mode);
}

GLAPI void APIENTRY glMultMatrixf(const GLfloat *m)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[294];
   ((void (APIENTRY *)(const GLfloat *m)) _func)(m);
}

GLAPI void APIENTRY glPopMatrix(void)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[297];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glPushMatrix(void)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[298];
   ((void (APIENTRY *)(void)) _func)();
}

GLAPI void APIENTRY glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[300];
   ((void (APIENTRY *)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)) _func)(angle, x, y, z);
}

GLAPI void APIENTRY glScalef(GLfloat x, GLfloat y, GLfloat z)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[302];
   ((void (APIENTRY *)(GLfloat x, GLfloat y, GLfloat z)) _func)(x, y, z);
}

GLAPI void APIENTRY glTranslatef(GLfloat x, GLfloat y, GLfloat z)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[304];
   ((void (APIENTRY *)(GLfloat x, GLfloat y, GLfloat z)) _func)(x, y, z);
}

GLAPI void APIENTRY glViewport(GLint x, GLint y, GLsizei width, GLsizei height)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[305];
   ((void (APIENTRY *)(GLint x, GLint y, GLsizei width, GLsizei height)) _func)(x, y, width, height);
}

GLAPI void APIENTRY glBindTexture(GLenum target, GLuint texture)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[307];
   ((void (APIENTRY *)(GLenum target, GLuint texture)) _func)(target, texture);
}

GLAPI void APIENTRY glColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[308];
   ((void (APIENTRY *)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(size, type, stride, pointer);
}

GLAPI void APIENTRY glDisableClientState(GLenum array)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[309];
   ((void (APIENTRY *)(GLenum array)) _func)(array);
}

GLAPI void APIENTRY glDrawArrays(GLenum mode, GLint first, GLsizei count)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[310];
   ((void (APIENTRY *)(GLenum mode, GLint first, GLsizei count)) _func)(mode, first, count);
}

GLAPI void APIENTRY glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[311];
   ((void (APIENTRY *)(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)) _func)(mode, count, type, indices);
}

GLAPI void APIENTRY glEnableClientState(GLenum array)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[313];
   ((void (APIENTRY *)(GLenum array)) _func)(array);
}

GLAPI void APIENTRY glNormalPointer(GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[318];
   ((void (APIENTRY *)(GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(type, stride, pointer);
}

GLAPI void APIENTRY glPolygonOffset(GLfloat factor, GLfloat units)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[319];
   ((void (APIENTRY *)(GLfloat factor, GLfloat units)) _func)(factor, units);
}

GLAPI void APIENTRY glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[320];
   ((void (APIENTRY *)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(size, type, stride, pointer);
}

GLAPI void APIENTRY glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[321];
   ((void (APIENTRY *)(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(size, type, stride, pointer);
}

GLAPI void APIENTRY glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[324];
   ((void (APIENTRY *)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)) _func)(target, level, internalformat, x, y, width, height, border);
}

GLAPI void APIENTRY glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[326];
   ((void (APIENTRY *)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)) _func)(target, level, xoffset, yoffset, x, y, width, height);
}

GLAPI void APIENTRY glDeleteTextures(GLsizei n, const GLuint *textures)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[327];
   ((void (APIENTRY *)(GLsizei n, const GLuint *textures)) _func)(n, textures);
}

GLAPI void APIENTRY glGenTextures(GLsizei n, GLuint *textures)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[328];
   ((void (APIENTRY *)(GLsizei n, GLuint *textures)) _func)(n, textures);
}

GLAPI void APIENTRY glGetPointerv(GLenum pname, GLvoid **params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[329];
   ((void (APIENTRY *)(GLenum pname, GLvoid **params)) _func)(pname, params);
}

GLAPI GLboolean APIENTRY glIsTexture(GLuint texture)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[330];
   return ((GLboolean (APIENTRY *)(GLuint texture)) _func)(texture);
}

GLAPI void APIENTRY glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[333];
   ((void (APIENTRY *)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)) _func)(target, level, xoffset, yoffset, width, height, format, type, pixels);
}

GLAPI void APIENTRY glActiveTexture(GLenum texture)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[374];
   ((void (APIENTRY *)(GLenum texture)) _func)(texture);
}

GLAPI void APIENTRY glClientActiveTexture(GLenum texture)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[375];
   ((void (APIENTRY *)(GLenum texture)) _func)(texture);
}

GLAPI void APIENTRY glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[402];
   ((void (APIENTRY *)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)) _func)(target, s, t, r, q);
}

GLAPI void APIENTRY glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[409];
   ((void (APIENTRY *)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)) _func)(target, level, internalformat, width, height, border, imageSize, data);
}

GLAPI void APIENTRY glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[412];
   ((void (APIENTRY *)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)) _func)(target, level, xoffset, yoffset, width, height, format, imageSize, data);
}

GLAPI void APIENTRY glSampleCoverage(GLclampf value, GLboolean invert)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[419];
   ((void (APIENTRY *)(GLclampf value, GLboolean invert)) _func)(value, invert);
}

GLAPI void APIENTRY glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[424];
   ((void (APIENTRY *)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)) _func)(mode, first, count, primcount);
}

GLAPI void APIENTRY glPointParameterf(GLenum pname, GLfloat param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[425];
   ((void (APIENTRY *)(GLenum pname, GLfloat param)) _func)(pname, param);
}

GLAPI void APIENTRY glPointParameterfv(GLenum pname, const GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[426];
   ((void (APIENTRY *)(GLenum pname, const GLfloat *params)) _func)(pname, params);
}

GLAPI void APIENTRY glBindBuffer(GLenum target, GLuint buffer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[461];
   ((void (APIENTRY *)(GLenum target, GLuint buffer)) _func)(target, buffer);
}

GLAPI void APIENTRY glBufferData(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[462];
   ((void (APIENTRY *)(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)) _func)(target, size, data, usage);
}

GLAPI void APIENTRY glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[463];
   ((void (APIENTRY *)(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)) _func)(target, offset, size, data);
}

GLAPI void APIENTRY glDeleteBuffers(GLsizei n, const GLuint *buffer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[464];
   ((void (APIENTRY *)(GLsizei n, const GLuint *buffer)) _func)(n, buffer);
}

GLAPI void APIENTRY glGenBuffers(GLsizei n, GLuint *buffer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[467];
   ((void (APIENTRY *)(GLsizei n, GLuint *buffer)) _func)(n, buffer);
}

GLAPI void APIENTRY glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[469];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint *params)) _func)(target, pname, params);
}

GLAPI GLboolean APIENTRY glIsBuffer(GLuint buffer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[475];
   return ((GLboolean (APIENTRY *)(GLuint buffer)) _func)(buffer);
}

GLAPI void APIENTRY glClearDepthf(GLclampf depth)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[785];
   ((void (APIENTRY *)(GLclampf depth)) _func)(depth);
}

GLAPI void APIENTRY glDepthRangef(GLclampf zNear, GLclampf zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[786];
   ((void (APIENTRY *)(GLclampf zNear, GLclampf zFar)) _func)(zNear, zFar);
}

GLAPI void APIENTRY glPointSizePointerOES(GLenum type, GLsizei stride, const GLvoid *pointer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[876];
   ((void (APIENTRY *)(GLenum type, GLsizei stride, const GLvoid *pointer)) _func)(type, stride, pointer);
}

GLAPI void APIENTRY glMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[944];
   ((void (APIENTRY *)(GLenum mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount)) _func)(mode, count, type, indices, primcount);
}

GLAPI void APIENTRY glEGLImageTargetRenderbufferStorageOES(GLenum target, GLvoid *writeOffset)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1107];
   ((void (APIENTRY *)(GLenum target, GLvoid *writeOffset)) _func)(target, writeOffset);
}

GLAPI void APIENTRY glEGLImageTargetTexture2DOES(GLenum target, GLvoid *writeOffset)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1108];
   ((void (APIENTRY *)(GLenum target, GLvoid *writeOffset)) _func)(target, writeOffset);
}

GLAPI void APIENTRY glAlphaFuncx(GLenum func, GLclampx ref)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1109];
   ((void (APIENTRY *)(GLenum func, GLclampx ref)) _func)(func, ref);
}

GLAPI void APIENTRY glClearColorx(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1110];
   ((void (APIENTRY *)(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glClearDepthx(GLclampx depth)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1111];
   ((void (APIENTRY *)(GLclampx depth)) _func)(depth);
}

GLAPI void APIENTRY glColor4x(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1112];
   ((void (APIENTRY *)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glDepthRangex(GLclampx zNear, GLclampx zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1113];
   ((void (APIENTRY *)(GLclampx zNear, GLclampx zFar)) _func)(zNear, zFar);
}

GLAPI void APIENTRY glFogx(GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1114];
   ((void (APIENTRY *)(GLenum pname, GLfixed param)) _func)(pname, param);
}

GLAPI void APIENTRY glFogxv(GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1115];
   ((void (APIENTRY *)(GLenum pname, const GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glFrustumf(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1116];
   ((void (APIENTRY *)(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glFrustumx(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1117];
   ((void (APIENTRY *)(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glLightModelx(GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1118];
   ((void (APIENTRY *)(GLenum pname, GLfixed param)) _func)(pname, param);
}

GLAPI void APIENTRY glLightModelxv(GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1119];
   ((void (APIENTRY *)(GLenum pname, const GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glLightx(GLenum light, GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1120];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfixed param)) _func)(light, pname, param);
}

GLAPI void APIENTRY glLightxv(GLenum light, GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1121];
   ((void (APIENTRY *)(GLenum light, GLenum pname, const GLfixed *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glLineWidthx(GLfixed width)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1122];
   ((void (APIENTRY *)(GLfixed width)) _func)(width);
}

GLAPI void APIENTRY glLoadMatrixx(const GLfixed *m)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1123];
   ((void (APIENTRY *)(const GLfixed *m)) _func)(m);
}

GLAPI void APIENTRY glMaterialx(GLenum face, GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1124];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfixed param)) _func)(face, pname, param);
}

GLAPI void APIENTRY glMaterialxv(GLenum face, GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1125];
   ((void (APIENTRY *)(GLenum face, GLenum pname, const GLfixed *params)) _func)(face, pname, params);
}

GLAPI void APIENTRY glMultMatrixx(const GLfixed *m)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1126];
   ((void (APIENTRY *)(const GLfixed *m)) _func)(m);
}

GLAPI void APIENTRY glMultiTexCoord4x(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1127];
   ((void (APIENTRY *)(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q)) _func)(target, s, t, r, q);
}

GLAPI void APIENTRY glNormal3x(GLfixed nx, GLfixed ny, GLfixed nz)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1128];
   ((void (APIENTRY *)(GLfixed nx, GLfixed ny, GLfixed nz)) _func)(nx, ny, nz);
}

GLAPI void APIENTRY glOrthof(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1129];
   ((void (APIENTRY *)(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glOrthox(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1130];
   ((void (APIENTRY *)(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glPointSizex(GLfixed size)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1131];
   ((void (APIENTRY *)(GLfixed size)) _func)(size);
}

GLAPI void APIENTRY glPolygonOffsetx(GLfixed factor, GLfixed units)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1132];
   ((void (APIENTRY *)(GLfixed factor, GLfixed units)) _func)(factor, units);
}

GLAPI void APIENTRY glRotatex(GLfixed angle, GLfixed x, GLfixed y, GLfixed z)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1133];
   ((void (APIENTRY *)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z)) _func)(angle, x, y, z);
}

GLAPI void APIENTRY glSampleCoveragex(GLclampx value, GLboolean invert)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1134];
   ((void (APIENTRY *)(GLclampx value, GLboolean invert)) _func)(value, invert);
}

GLAPI void APIENTRY glScalex(GLfixed x, GLfixed y, GLfixed z)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1135];
   ((void (APIENTRY *)(GLfixed x, GLfixed y, GLfixed z)) _func)(x, y, z);
}

GLAPI void APIENTRY glTexEnvx(GLenum target, GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1136];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexEnvxv(GLenum target, GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1137];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexParameterx(GLenum target, GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1138];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTranslatex(GLfixed x, GLfixed y, GLfixed z)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1139];
   ((void (APIENTRY *)(GLfixed x, GLfixed y, GLfixed z)) _func)(x, y, z);
}

GLAPI void APIENTRY glClipPlanef(GLenum plane, const GLfloat *equation)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1140];
   ((void (APIENTRY *)(GLenum plane, const GLfloat *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glClipPlanex(GLenum plane, const GLfixed *equation)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1141];
   ((void (APIENTRY *)(GLenum plane, const GLfixed *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glGetClipPlanef(GLenum plane, GLfloat *equation)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1142];
   ((void (APIENTRY *)(GLenum plane, GLfloat *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glGetClipPlanex(GLenum plane, GLfixed *equation)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1143];
   ((void (APIENTRY *)(GLenum plane, GLfixed *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glGetFixedv(GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1144];
   ((void (APIENTRY *)(GLenum pname, GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glGetLightxv(GLenum light, GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1145];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfixed *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glGetMaterialxv(GLenum face, GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1146];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfixed *params)) _func)(face, pname, params);
}

GLAPI void APIENTRY glGetTexEnvxv(GLenum target, GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1147];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexParameterxv(GLenum target, GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1148];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glPointParameterx(GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1149];
   ((void (APIENTRY *)(GLenum pname, GLfixed param)) _func)(pname, param);
}

GLAPI void APIENTRY glPointParameterxv(GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1150];
   ((void (APIENTRY *)(GLenum pname, const GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glTexParameterxv(GLenum target, GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1151];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfixed *params)) _func)(target, pname, params);
}

/* does not need public_entries */
#undef MAPI_TMP_PUBLIC_ENTRIES_NO_HIDDEN
#endif /* MAPI_TMP_PUBLIC_ENTRIES_NO_HIDDEN */

#ifdef MAPI_TMP_STUB_ASM_GCC_NO_HIDDEN
__asm__(
STUB_ASM_ENTRY("glColor4f")"\n"
"\t"STUB_ASM_CODE("29")"\n"

STUB_ASM_ENTRY("glColor4ub")"\n"
"\t"STUB_ASM_CODE("35")"\n"

STUB_ASM_ENTRY("glNormal3f")"\n"
"\t"STUB_ASM_CODE("56")"\n"

STUB_ASM_ENTRY("glCullFace")"\n"
"\t"STUB_ASM_CODE("152")"\n"

STUB_ASM_ENTRY("glFogf")"\n"
"\t"STUB_ASM_CODE("153")"\n"

STUB_ASM_ENTRY("glFogfv")"\n"
"\t"STUB_ASM_CODE("154")"\n"

STUB_ASM_ENTRY("glFrontFace")"\n"
"\t"STUB_ASM_CODE("157")"\n"

STUB_ASM_ENTRY("glHint")"\n"
"\t"STUB_ASM_CODE("158")"\n"

STUB_ASM_ENTRY("glLightf")"\n"
"\t"STUB_ASM_CODE("159")"\n"

STUB_ASM_ENTRY("glLightfv")"\n"
"\t"STUB_ASM_CODE("160")"\n"

STUB_ASM_ENTRY("glLightModelf")"\n"
"\t"STUB_ASM_CODE("163")"\n"

STUB_ASM_ENTRY("glLightModelfv")"\n"
"\t"STUB_ASM_CODE("164")"\n"

STUB_ASM_ENTRY("glLineWidth")"\n"
"\t"STUB_ASM_CODE("168")"\n"

STUB_ASM_ENTRY("glMaterialf")"\n"
"\t"STUB_ASM_CODE("169")"\n"

STUB_ASM_ENTRY("glMaterialfv")"\n"
"\t"STUB_ASM_CODE("170")"\n"

STUB_ASM_ENTRY("glPointSize")"\n"
"\t"STUB_ASM_CODE("173")"\n"

STUB_ASM_ENTRY("glScissor")"\n"
"\t"STUB_ASM_CODE("176")"\n"

STUB_ASM_ENTRY("glShadeModel")"\n"
"\t"STUB_ASM_CODE("177")"\n"

STUB_ASM_ENTRY("glTexParameterf")"\n"
"\t"STUB_ASM_CODE("178")"\n"

STUB_ASM_ENTRY("glTexParameterfv")"\n"
"\t"STUB_ASM_CODE("179")"\n"

STUB_ASM_ENTRY("glTexParameteri")"\n"
"\t"STUB_ASM_CODE("180")"\n"

STUB_ASM_ENTRY("glTexParameteriv")"\n"
"\t"STUB_ASM_CODE("181")"\n"

STUB_ASM_ENTRY("glTexImage2D")"\n"
"\t"STUB_ASM_CODE("183")"\n"

STUB_ASM_ENTRY("glTexEnvf")"\n"
"\t"STUB_ASM_CODE("184")"\n"

STUB_ASM_ENTRY("glTexEnvfv")"\n"
"\t"STUB_ASM_CODE("185")"\n"

STUB_ASM_ENTRY("glTexEnvi")"\n"
"\t"STUB_ASM_CODE("186")"\n"

STUB_ASM_ENTRY("glTexEnviv")"\n"
"\t"STUB_ASM_CODE("187")"\n"

STUB_ASM_ENTRY("glClear")"\n"
"\t"STUB_ASM_CODE("203")"\n"

STUB_ASM_ENTRY("glClearColor")"\n"
"\t"STUB_ASM_CODE("206")"\n"

STUB_ASM_ENTRY("glClearStencil")"\n"
"\t"STUB_ASM_CODE("207")"\n"

STUB_ASM_ENTRY("glStencilMask")"\n"
"\t"STUB_ASM_CODE("209")"\n"

STUB_ASM_ENTRY("glColorMask")"\n"
"\t"STUB_ASM_CODE("210")"\n"

STUB_ASM_ENTRY("glDepthMask")"\n"
"\t"STUB_ASM_CODE("211")"\n"

STUB_ASM_ENTRY("glDisable")"\n"
"\t"STUB_ASM_CODE("214")"\n"

STUB_ASM_ENTRY("glEnable")"\n"
"\t"STUB_ASM_CODE("215")"\n"

STUB_ASM_ENTRY("glFinish")"\n"
"\t"STUB_ASM_CODE("216")"\n"

STUB_ASM_ENTRY("glFlush")"\n"
"\t"STUB_ASM_CODE("217")"\n"

STUB_ASM_ENTRY("glAlphaFunc")"\n"
"\t"STUB_ASM_CODE("240")"\n"

STUB_ASM_ENTRY("glBlendFunc")"\n"
"\t"STUB_ASM_CODE("241")"\n"

STUB_ASM_ENTRY("glLogicOp")"\n"
"\t"STUB_ASM_CODE("242")"\n"

STUB_ASM_ENTRY("glStencilFunc")"\n"
"\t"STUB_ASM_CODE("243")"\n"

STUB_ASM_ENTRY("glStencilOp")"\n"
"\t"STUB_ASM_CODE("244")"\n"

STUB_ASM_ENTRY("glDepthFunc")"\n"
"\t"STUB_ASM_CODE("245")"\n"

STUB_ASM_ENTRY("glPixelStorei")"\n"
"\t"STUB_ASM_CODE("250")"\n"

STUB_ASM_ENTRY("glReadPixels")"\n"
"\t"STUB_ASM_CODE("256")"\n"

STUB_ASM_ENTRY("glGetBooleanv")"\n"
"\t"STUB_ASM_CODE("258")"\n"

STUB_ASM_ENTRY("glGetError")"\n"
"\t"STUB_ASM_CODE("261")"\n"

STUB_ASM_ENTRY("glGetFloatv")"\n"
"\t"STUB_ASM_CODE("262")"\n"

STUB_ASM_ENTRY("glGetIntegerv")"\n"
"\t"STUB_ASM_CODE("263")"\n"

STUB_ASM_ENTRY("glGetLightfv")"\n"
"\t"STUB_ASM_CODE("264")"\n"

STUB_ASM_ENTRY("glGetMaterialfv")"\n"
"\t"STUB_ASM_CODE("269")"\n"

STUB_ASM_ENTRY("glGetString")"\n"
"\t"STUB_ASM_CODE("275")"\n"

STUB_ASM_ENTRY("glGetTexEnvfv")"\n"
"\t"STUB_ASM_CODE("276")"\n"

STUB_ASM_ENTRY("glGetTexEnviv")"\n"
"\t"STUB_ASM_CODE("277")"\n"

STUB_ASM_ENTRY("glGetTexParameterfv")"\n"
"\t"STUB_ASM_CODE("282")"\n"

STUB_ASM_ENTRY("glGetTexParameteriv")"\n"
"\t"STUB_ASM_CODE("283")"\n"

STUB_ASM_ENTRY("glIsEnabled")"\n"
"\t"STUB_ASM_CODE("286")"\n"

STUB_ASM_ENTRY("glLoadIdentity")"\n"
"\t"STUB_ASM_CODE("290")"\n"

STUB_ASM_ENTRY("glLoadMatrixf")"\n"
"\t"STUB_ASM_CODE("291")"\n"

STUB_ASM_ENTRY("glMatrixMode")"\n"
"\t"STUB_ASM_CODE("293")"\n"

STUB_ASM_ENTRY("glMultMatrixf")"\n"
"\t"STUB_ASM_CODE("294")"\n"

STUB_ASM_ENTRY("glPopMatrix")"\n"
"\t"STUB_ASM_CODE("297")"\n"

STUB_ASM_ENTRY("glPushMatrix")"\n"
"\t"STUB_ASM_CODE("298")"\n"

STUB_ASM_ENTRY("glRotatef")"\n"
"\t"STUB_ASM_CODE("300")"\n"

STUB_ASM_ENTRY("glScalef")"\n"
"\t"STUB_ASM_CODE("302")"\n"

STUB_ASM_ENTRY("glTranslatef")"\n"
"\t"STUB_ASM_CODE("304")"\n"

STUB_ASM_ENTRY("glViewport")"\n"
"\t"STUB_ASM_CODE("305")"\n"

STUB_ASM_ENTRY("glBindTexture")"\n"
"\t"STUB_ASM_CODE("307")"\n"

STUB_ASM_ENTRY("glColorPointer")"\n"
"\t"STUB_ASM_CODE("308")"\n"

STUB_ASM_ENTRY("glDisableClientState")"\n"
"\t"STUB_ASM_CODE("309")"\n"

STUB_ASM_ENTRY("glDrawArrays")"\n"
"\t"STUB_ASM_CODE("310")"\n"

STUB_ASM_ENTRY("glDrawElements")"\n"
"\t"STUB_ASM_CODE("311")"\n"

STUB_ASM_ENTRY("glEnableClientState")"\n"
"\t"STUB_ASM_CODE("313")"\n"

STUB_ASM_ENTRY("glNormalPointer")"\n"
"\t"STUB_ASM_CODE("318")"\n"

STUB_ASM_ENTRY("glPolygonOffset")"\n"
"\t"STUB_ASM_CODE("319")"\n"

STUB_ASM_ENTRY("glTexCoordPointer")"\n"
"\t"STUB_ASM_CODE("320")"\n"

STUB_ASM_ENTRY("glVertexPointer")"\n"
"\t"STUB_ASM_CODE("321")"\n"

STUB_ASM_ENTRY("glCopyTexImage2D")"\n"
"\t"STUB_ASM_CODE("324")"\n"

STUB_ASM_ENTRY("glCopyTexSubImage2D")"\n"
"\t"STUB_ASM_CODE("326")"\n"

STUB_ASM_ENTRY("glDeleteTextures")"\n"
"\t"STUB_ASM_CODE("327")"\n"

STUB_ASM_ENTRY("glGenTextures")"\n"
"\t"STUB_ASM_CODE("328")"\n"

STUB_ASM_ENTRY("glGetPointerv")"\n"
"\t"STUB_ASM_CODE("329")"\n"

STUB_ASM_ENTRY("glIsTexture")"\n"
"\t"STUB_ASM_CODE("330")"\n"

STUB_ASM_ENTRY("glTexSubImage2D")"\n"
"\t"STUB_ASM_CODE("333")"\n"

STUB_ASM_ENTRY("glActiveTexture")"\n"
"\t"STUB_ASM_CODE("374")"\n"

STUB_ASM_ENTRY("glClientActiveTexture")"\n"
"\t"STUB_ASM_CODE("375")"\n"

STUB_ASM_ENTRY("glMultiTexCoord4f")"\n"
"\t"STUB_ASM_CODE("402")"\n"

STUB_ASM_ENTRY("glCompressedTexImage2D")"\n"
"\t"STUB_ASM_CODE("409")"\n"

STUB_ASM_ENTRY("glCompressedTexSubImage2D")"\n"
"\t"STUB_ASM_CODE("412")"\n"

STUB_ASM_ENTRY("glSampleCoverage")"\n"
"\t"STUB_ASM_CODE("419")"\n"

STUB_ASM_ENTRY("glMultiDrawArraysEXT")"\n"
"\t"STUB_ASM_CODE("424")"\n"

STUB_ASM_ENTRY("glPointParameterf")"\n"
"\t"STUB_ASM_CODE("425")"\n"

STUB_ASM_ENTRY("glPointParameterfv")"\n"
"\t"STUB_ASM_CODE("426")"\n"

STUB_ASM_ENTRY("glBindBuffer")"\n"
"\t"STUB_ASM_CODE("461")"\n"

STUB_ASM_ENTRY("glBufferData")"\n"
"\t"STUB_ASM_CODE("462")"\n"

STUB_ASM_ENTRY("glBufferSubData")"\n"
"\t"STUB_ASM_CODE("463")"\n"

STUB_ASM_ENTRY("glDeleteBuffers")"\n"
"\t"STUB_ASM_CODE("464")"\n"

STUB_ASM_ENTRY("glGenBuffers")"\n"
"\t"STUB_ASM_CODE("467")"\n"

STUB_ASM_ENTRY("glGetBufferParameteriv")"\n"
"\t"STUB_ASM_CODE("469")"\n"

STUB_ASM_ENTRY("glIsBuffer")"\n"
"\t"STUB_ASM_CODE("475")"\n"

STUB_ASM_ENTRY("glClearDepthf")"\n"
"\t"STUB_ASM_CODE("785")"\n"

STUB_ASM_ENTRY("glDepthRangef")"\n"
"\t"STUB_ASM_CODE("786")"\n"

STUB_ASM_ENTRY("glPointSizePointerOES")"\n"
"\t"STUB_ASM_CODE("876")"\n"

STUB_ASM_ENTRY("glMultiDrawElementsEXT")"\n"
"\t"STUB_ASM_CODE("944")"\n"

STUB_ASM_ENTRY("glEGLImageTargetRenderbufferStorageOES")"\n"
"\t"STUB_ASM_CODE("1107")"\n"

STUB_ASM_ENTRY("glEGLImageTargetTexture2DOES")"\n"
"\t"STUB_ASM_CODE("1108")"\n"

STUB_ASM_ENTRY("glAlphaFuncx")"\n"
"\t"STUB_ASM_CODE("1109")"\n"

STUB_ASM_ENTRY("glClearColorx")"\n"
"\t"STUB_ASM_CODE("1110")"\n"

STUB_ASM_ENTRY("glClearDepthx")"\n"
"\t"STUB_ASM_CODE("1111")"\n"

STUB_ASM_ENTRY("glColor4x")"\n"
"\t"STUB_ASM_CODE("1112")"\n"

STUB_ASM_ENTRY("glDepthRangex")"\n"
"\t"STUB_ASM_CODE("1113")"\n"

STUB_ASM_ENTRY("glFogx")"\n"
"\t"STUB_ASM_CODE("1114")"\n"

STUB_ASM_ENTRY("glFogxv")"\n"
"\t"STUB_ASM_CODE("1115")"\n"

STUB_ASM_ENTRY("glFrustumf")"\n"
"\t"STUB_ASM_CODE("1116")"\n"

STUB_ASM_ENTRY("glFrustumx")"\n"
"\t"STUB_ASM_CODE("1117")"\n"

STUB_ASM_ENTRY("glLightModelx")"\n"
"\t"STUB_ASM_CODE("1118")"\n"

STUB_ASM_ENTRY("glLightModelxv")"\n"
"\t"STUB_ASM_CODE("1119")"\n"

STUB_ASM_ENTRY("glLightx")"\n"
"\t"STUB_ASM_CODE("1120")"\n"

STUB_ASM_ENTRY("glLightxv")"\n"
"\t"STUB_ASM_CODE("1121")"\n"

STUB_ASM_ENTRY("glLineWidthx")"\n"
"\t"STUB_ASM_CODE("1122")"\n"

STUB_ASM_ENTRY("glLoadMatrixx")"\n"
"\t"STUB_ASM_CODE("1123")"\n"

STUB_ASM_ENTRY("glMaterialx")"\n"
"\t"STUB_ASM_CODE("1124")"\n"

STUB_ASM_ENTRY("glMaterialxv")"\n"
"\t"STUB_ASM_CODE("1125")"\n"

STUB_ASM_ENTRY("glMultMatrixx")"\n"
"\t"STUB_ASM_CODE("1126")"\n"

STUB_ASM_ENTRY("glMultiTexCoord4x")"\n"
"\t"STUB_ASM_CODE("1127")"\n"

STUB_ASM_ENTRY("glNormal3x")"\n"
"\t"STUB_ASM_CODE("1128")"\n"

STUB_ASM_ENTRY("glOrthof")"\n"
"\t"STUB_ASM_CODE("1129")"\n"

STUB_ASM_ENTRY("glOrthox")"\n"
"\t"STUB_ASM_CODE("1130")"\n"

STUB_ASM_ENTRY("glPointSizex")"\n"
"\t"STUB_ASM_CODE("1131")"\n"

STUB_ASM_ENTRY("glPolygonOffsetx")"\n"
"\t"STUB_ASM_CODE("1132")"\n"

STUB_ASM_ENTRY("glRotatex")"\n"
"\t"STUB_ASM_CODE("1133")"\n"

STUB_ASM_ENTRY("glSampleCoveragex")"\n"
"\t"STUB_ASM_CODE("1134")"\n"

STUB_ASM_ENTRY("glScalex")"\n"
"\t"STUB_ASM_CODE("1135")"\n"

STUB_ASM_ENTRY("glTexEnvx")"\n"
"\t"STUB_ASM_CODE("1136")"\n"

STUB_ASM_ENTRY("glTexEnvxv")"\n"
"\t"STUB_ASM_CODE("1137")"\n"

STUB_ASM_ENTRY("glTexParameterx")"\n"
"\t"STUB_ASM_CODE("1138")"\n"

STUB_ASM_ENTRY("glTranslatex")"\n"
"\t"STUB_ASM_CODE("1139")"\n"

STUB_ASM_ENTRY("glClipPlanef")"\n"
"\t"STUB_ASM_CODE("1140")"\n"

STUB_ASM_ENTRY("glClipPlanex")"\n"
"\t"STUB_ASM_CODE("1141")"\n"

STUB_ASM_ENTRY("glGetClipPlanef")"\n"
"\t"STUB_ASM_CODE("1142")"\n"

STUB_ASM_ENTRY("glGetClipPlanex")"\n"
"\t"STUB_ASM_CODE("1143")"\n"

STUB_ASM_ENTRY("glGetFixedv")"\n"
"\t"STUB_ASM_CODE("1144")"\n"

STUB_ASM_ENTRY("glGetLightxv")"\n"
"\t"STUB_ASM_CODE("1145")"\n"

STUB_ASM_ENTRY("glGetMaterialxv")"\n"
"\t"STUB_ASM_CODE("1146")"\n"

STUB_ASM_ENTRY("glGetTexEnvxv")"\n"
"\t"STUB_ASM_CODE("1147")"\n"

STUB_ASM_ENTRY("glGetTexParameterxv")"\n"
"\t"STUB_ASM_CODE("1148")"\n"

STUB_ASM_ENTRY("glPointParameterx")"\n"
"\t"STUB_ASM_CODE("1149")"\n"

STUB_ASM_ENTRY("glPointParameterxv")"\n"
"\t"STUB_ASM_CODE("1150")"\n"

STUB_ASM_ENTRY("glTexParameterxv")"\n"
"\t"STUB_ASM_CODE("1151")"\n"

);
#undef MAPI_TMP_STUB_ASM_GCC_NO_HIDDEN
#endif /* MAPI_TMP_STUB_ASM_GCC_NO_HIDDEN */
@


1.4
log
@switch back to Mesa 10.2

With 10.4.3 gpu compositing on chromium would result in a black window
on older Intel parts (ie x60s with 945gm) and at least some discrete
Radeon parts.  These problems do not seem to occur on recent Intel
parts, though those have coherent memory and hardware contexts.

It isn't clear what changes in Mesa are involved in the problem
though it also occurs with the 10.3 branch.
@
text
@@


1.3
log
@Mesa 10.4.3
@
text
@d857 5
a861 5
void APIENTRY gl_dispatch_stub_842(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void APIENTRY gl_dispatch_stub_843(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void APIENTRY gl_dispatch_stub_844(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void APIENTRY gl_dispatch_stub_845(GLuint attribindex, GLuint bindingindex);
void APIENTRY gl_dispatch_stub_846(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
d863 28
a890 32
void APIENTRY gl_dispatch_stub_848(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_849(GLuint attribindex, GLuint divisor);
void APIENTRY gl_dispatch_stub_850(GLenum mode, const GLvoid *indirect, GLsizei primcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_851(GLenum mode, GLenum type, const GLvoid *indirect, GLsizei primcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_852(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_853(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_854(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_855(GLenum target, GLsizeiptr size, const GLvoid *data, GLbitfield flags);
void APIENTRY gl_dispatch_stub_856(GLuint texture, GLint level, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_857(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *data);
void APIENTRY gl_dispatch_stub_858(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
void APIENTRY gl_dispatch_stub_859(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
void APIENTRY gl_dispatch_stub_860(GLuint first, GLsizei count, const GLuint *textures);
void APIENTRY gl_dispatch_stub_861(GLuint first, GLsizei count, const GLuint *samplers);
void APIENTRY gl_dispatch_stub_862(GLuint first, GLsizei count, const GLuint *textures);
void APIENTRY gl_dispatch_stub_863(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
void APIENTRY gl_dispatch_stub_864(GLenum origin, GLenum depth);
void APIENTRY gl_dispatch_stub_865(GLuint buffer);
void APIENTRY gl_dispatch_stub_866(GLuint buffer, GLintptr offset, GLsizeiptr length);
void APIENTRY gl_dispatch_stub_867(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_868(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_869(GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_870(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_871(GLfloat factor, GLfloat bias);
void APIENTRY gl_dispatch_stub_872(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
void APIENTRY gl_dispatch_stub_873(const GLfloat *coords);
void APIENTRY gl_dispatch_stub_874(GLint x, GLint y, GLint z, GLint width, GLint height);
void APIENTRY gl_dispatch_stub_875(const GLint *coords);
void APIENTRY gl_dispatch_stub_876(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
void APIENTRY gl_dispatch_stub_877(const GLshort *coords);
void APIENTRY gl_dispatch_stub_878(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
void APIENTRY gl_dispatch_stub_879(const GLfixed *coords);
d892 7
a898 3
GLbitfield APIENTRY gl_dispatch_stub_881(GLfixed *mantissa, GLint *exponent);
void APIENTRY gl_dispatch_stub_882(GLclampf value, GLboolean invert);
void APIENTRY gl_dispatch_stub_883(GLenum pattern);
d900 39
a938 39
void APIENTRY gl_dispatch_stub_885(GLsizei stride, GLsizei count, const GLboolean *pointer);
void APIENTRY gl_dispatch_stub_886(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_887(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_888(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_889(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_890(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_891(GLuint pipeline, GLuint program);
void APIENTRY gl_dispatch_stub_892(GLuint pipeline);
GLuint APIENTRY gl_dispatch_stub_893(GLenum type, GLsizei count, const GLchar * const *strings);
void APIENTRY gl_dispatch_stub_894(GLsizei n, const GLuint *pipelines);
void APIENTRY gl_dispatch_stub_895(GLsizei n, GLuint *pipelines);
void APIENTRY gl_dispatch_stub_896(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void APIENTRY gl_dispatch_stub_897(GLuint pipeline, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_898(GLuint pipeline);
void APIENTRY gl_dispatch_stub_899(GLint first, GLsizei count);
void APIENTRY gl_dispatch_stub_900(GLuint program, GLint location, GLfloat x);
void APIENTRY gl_dispatch_stub_901(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_902(GLuint program, GLint location, GLint x);
void APIENTRY gl_dispatch_stub_903(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_904(GLuint program, GLint location, GLuint x);
void APIENTRY gl_dispatch_stub_905(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_906(GLuint program, GLint location, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_907(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_908(GLuint program, GLint location, GLint x, GLint y);
void APIENTRY gl_dispatch_stub_909(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_910(GLuint program, GLint location, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_911(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_912(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_913(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_914(GLuint program, GLint location, GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_915(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_916(GLuint program, GLint location, GLuint x, GLuint y, GLuint z);
void APIENTRY gl_dispatch_stub_917(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_918(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_919(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_920(GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_921(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_922(GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_923(GLuint program, GLint location, GLsizei count, const GLuint *value);
d944 15
a958 19
void APIENTRY gl_dispatch_stub_929(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_930(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_931(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_932(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_933(void);
void APIENTRY gl_dispatch_stub_934(GLuint pipeline, GLbitfield stages, GLuint program);
void APIENTRY gl_dispatch_stub_935(GLuint pipeline);
void APIENTRY gl_dispatch_stub_936(GLDEBUGPROC callback, const GLvoid *userParam);
void APIENTRY gl_dispatch_stub_937(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void APIENTRY gl_dispatch_stub_938(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
GLuint APIENTRY gl_dispatch_stub_939(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void APIENTRY gl_dispatch_stub_940(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
void APIENTRY gl_dispatch_stub_941(const GLvoid *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
void APIENTRY gl_dispatch_stub_942(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
void APIENTRY gl_dispatch_stub_943(const GLvoid *ptr, GLsizei length, const GLchar *label);
void APIENTRY gl_dispatch_stub_944(void);
void APIENTRY gl_dispatch_stub_945(GLenum source, GLuint id, GLsizei length, const GLchar *message);
void APIENTRY gl_dispatch_stub_946(GLfloat red, GLfloat green, GLfloat blue);
void APIENTRY gl_dispatch_stub_947(const GLfloat *v);
d960 80
a1039 76
void APIENTRY gl_dispatch_stub_949(GLfloat coord);
void APIENTRY gl_dispatch_stub_950(const GLfloat *coord);
void APIENTRY gl_dispatch_stub_951(void);
void APIENTRY gl_dispatch_stub_952(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_953(const GLdouble *v);
void APIENTRY gl_dispatch_stub_954(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_955(const GLfloat *v);
void APIENTRY gl_dispatch_stub_956(GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_957(const GLint *v);
void APIENTRY gl_dispatch_stub_958(GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_959(const GLshort *v);
void APIENTRY gl_dispatch_stub_960(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
void APIENTRY gl_dispatch_stub_961(const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, GLint modestride);
GLboolean APIENTRY gl_dispatch_stub_962(GLsizei n, const GLuint *ids, GLboolean *residences);
void APIENTRY gl_dispatch_stub_963(GLenum target, GLuint id, const GLfloat *params);
void APIENTRY gl_dispatch_stub_964(GLenum target, GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_965(GLenum target, GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_966(GLuint id, GLenum pname, GLubyte *program);
void APIENTRY gl_dispatch_stub_967(GLuint id, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_968(GLenum target, GLuint address, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_969(GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_970(GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_971(GLuint index, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_972(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
void APIENTRY gl_dispatch_stub_973(GLenum target, GLuint index, GLsizei num, const GLdouble *params);
void APIENTRY gl_dispatch_stub_974(GLenum target, GLuint index, GLsizei num, const GLfloat *params);
void APIENTRY gl_dispatch_stub_975(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_976(GLenum target, GLuint address, GLenum matrix, GLenum transform);
void APIENTRY gl_dispatch_stub_977(GLuint index, GLdouble x);
void APIENTRY gl_dispatch_stub_978(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_979(GLuint index, GLfloat x);
void APIENTRY gl_dispatch_stub_980(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_981(GLuint index, GLshort x);
void APIENTRY gl_dispatch_stub_982(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_983(GLuint index, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_984(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_985(GLuint index, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_986(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_987(GLuint index, GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_988(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_989(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_990(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_991(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_992(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_993(GLuint index, GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_994(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_995(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_996(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_997(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_998(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_999(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_1000(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_1001(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void APIENTRY gl_dispatch_stub_1002(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_1003(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_1004(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1005(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1006(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1007(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1008(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1009(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1010(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1011(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1012(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1013(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1014(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1015(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1016(GLuint index, GLsizei n, const GLubyte *v);
void APIENTRY gl_dispatch_stub_1017(GLenum pname, GLfloat *param);
void APIENTRY gl_dispatch_stub_1018(GLenum pname, GLint *param);
void APIENTRY gl_dispatch_stub_1019(GLenum pname, const GLfloat *param);
void APIENTRY gl_dispatch_stub_1020(GLenum pname, const GLint *param);
void APIENTRY gl_dispatch_stub_1021(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_1022(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_1023(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void APIENTRY gl_dispatch_stub_1024(void);
d1041 30
a1070 30
void APIENTRY gl_dispatch_stub_1026(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_1027(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_1028(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void APIENTRY gl_dispatch_stub_1029(GLuint id);
void APIENTRY gl_dispatch_stub_1030(void);
GLuint APIENTRY gl_dispatch_stub_1031(GLuint range);
void APIENTRY gl_dispatch_stub_1032(GLuint dst, GLuint coord, GLenum swizzle);
void APIENTRY gl_dispatch_stub_1033(GLuint dst, GLuint interp, GLenum swizzle);
void APIENTRY gl_dispatch_stub_1034(GLuint dst, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1035(GLenum face);
void APIENTRY gl_dispatch_stub_1036(GLuint array);
void APIENTRY gl_dispatch_stub_1037(GLsizei n, GLuint *arrays);
void APIENTRY gl_dispatch_stub_1038(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
void APIENTRY gl_dispatch_stub_1039(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
void APIENTRY gl_dispatch_stub_1040(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_1041(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1042(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_1043(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1044(void);
void APIENTRY gl_dispatch_stub_1045(GLenum coord, GLenum pname, GLfixed *params);
void APIENTRY gl_dispatch_stub_1046(GLenum coord, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_1047(GLenum coord, GLenum pname, const GLfixed *params);
void APIENTRY gl_dispatch_stub_1048(GLclampd zmin, GLclampd zmax);
void APIENTRY gl_dispatch_stub_1049(GLenum target, GLuint framebuffer);
void APIENTRY gl_dispatch_stub_1050(GLenum target, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_1051(GLenum target, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_1052(GLenum target, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_1053(GLuint index, GLint x);
void APIENTRY gl_dispatch_stub_1054(GLuint index, GLuint x);
void APIENTRY gl_dispatch_stub_1055(GLuint index, GLint x, GLint y);
d1072 1
a1072 1
void APIENTRY gl_dispatch_stub_1057(GLuint index, GLuint x, GLuint y);
d1074 1
a1074 1
void APIENTRY gl_dispatch_stub_1059(GLuint index, GLint x, GLint y, GLint z);
d1076 1
a1076 1
void APIENTRY gl_dispatch_stub_1061(GLuint index, GLuint x, GLuint y, GLuint z);
d1078 29
a1106 29
void APIENTRY gl_dispatch_stub_1063(GLuint index, GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_1064(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_1065(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_1066(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_1067(GLint r, GLint g, GLint b, GLint a);
void APIENTRY gl_dispatch_stub_1068(GLuint r, GLuint g, GLuint b, GLuint a);
void APIENTRY gl_dispatch_stub_1069(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void APIENTRY gl_dispatch_stub_1070(GLuint monitor);
void APIENTRY gl_dispatch_stub_1071(GLsizei n, GLuint *monitors);
void APIENTRY gl_dispatch_stub_1072(GLuint monitor);
void APIENTRY gl_dispatch_stub_1073(GLsizei n, GLuint *monitors);
void APIENTRY gl_dispatch_stub_1074(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
void APIENTRY gl_dispatch_stub_1075(GLuint group, GLuint counter, GLenum pname, GLvoid *data);
void APIENTRY gl_dispatch_stub_1076(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
void APIENTRY gl_dispatch_stub_1077(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei countersSize, GLuint *counters);
void APIENTRY gl_dispatch_stub_1078(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
void APIENTRY gl_dispatch_stub_1079(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
void APIENTRY gl_dispatch_stub_1080(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
void APIENTRY gl_dispatch_stub_1081(GLenum objectType, GLuint name, GLenum pname, GLint *value);
GLenum APIENTRY gl_dispatch_stub_1082(GLenum objectType, GLuint name, GLenum option);
GLenum APIENTRY gl_dispatch_stub_1083(GLenum objectType, GLuint name, GLenum option);
void APIENTRY gl_dispatch_stub_1084(GLuint program);
GLuint APIENTRY gl_dispatch_stub_1085(GLenum type, const GLchar *string);
void APIENTRY gl_dispatch_stub_1086(GLenum type, GLuint program);
void APIENTRY gl_dispatch_stub_1087(void);
void APIENTRY gl_dispatch_stub_1088(void);
void APIENTRY gl_dispatch_stub_1089(GLintptr surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void APIENTRY gl_dispatch_stub_1090(const GLvoid *vdpDevice, const GLvoid *getProcAddress);
GLboolean APIENTRY gl_dispatch_stub_1091(GLintptr surface);
d1108 14
a1121 18
GLintptr APIENTRY gl_dispatch_stub_1093(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLintptr APIENTRY gl_dispatch_stub_1094(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
void APIENTRY gl_dispatch_stub_1095(GLintptr surface, GLenum access);
void APIENTRY gl_dispatch_stub_1096(GLsizei numSurfaces, const GLintptr *surfaces);
void APIENTRY gl_dispatch_stub_1097(GLintptr surface);
void APIENTRY gl_dispatch_stub_1098(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1099(GLuint queryId, GLuint *queryHandle);
void APIENTRY gl_dispatch_stub_1100(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1101(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1102(GLuint *queryId);
void APIENTRY gl_dispatch_stub_1103(GLuint queryId, GLuint *nextQueryId);
void APIENTRY gl_dispatch_stub_1104(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
void APIENTRY gl_dispatch_stub_1105(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
void APIENTRY gl_dispatch_stub_1106(GLchar *queryName, GLuint *queryId);
void APIENTRY gl_dispatch_stub_1107(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
void APIENTRY gl_dispatch_stub_1108(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
void APIENTRY gl_dispatch_stub_1109(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void APIENTRY gl_dispatch_stub_1110(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
d1888 1
a1888 1
   mapi_func _func = ((const mapi_func *) _tbl)[880];
d1895 1
a1895 1
   mapi_func _func = ((const mapi_func *) _tbl)[948];
d1902 1
a1902 1
   mapi_func _func = ((const mapi_func *) _tbl)[1111];
d1909 1
a1909 1
   mapi_func _func = ((const mapi_func *) _tbl)[1112];
d1916 1
a1916 1
   mapi_func _func = ((const mapi_func *) _tbl)[1113];
d1923 1
a1923 1
   mapi_func _func = ((const mapi_func *) _tbl)[1114];
d1930 1
a1930 1
   mapi_func _func = ((const mapi_func *) _tbl)[1115];
d1937 1
a1937 1
   mapi_func _func = ((const mapi_func *) _tbl)[1116];
d1944 1
a1944 1
   mapi_func _func = ((const mapi_func *) _tbl)[1117];
d1951 1
a1951 1
   mapi_func _func = ((const mapi_func *) _tbl)[1118];
d1958 1
a1958 1
   mapi_func _func = ((const mapi_func *) _tbl)[1119];
d1965 1
a1965 1
   mapi_func _func = ((const mapi_func *) _tbl)[1120];
d1972 1
a1972 1
   mapi_func _func = ((const mapi_func *) _tbl)[1121];
d1979 1
a1979 1
   mapi_func _func = ((const mapi_func *) _tbl)[1122];
d1986 1
a1986 1
   mapi_func _func = ((const mapi_func *) _tbl)[1123];
d1993 1
a1993 1
   mapi_func _func = ((const mapi_func *) _tbl)[1124];
d2000 1
a2000 1
   mapi_func _func = ((const mapi_func *) _tbl)[1125];
d2007 1
a2007 1
   mapi_func _func = ((const mapi_func *) _tbl)[1126];
d2014 1
a2014 1
   mapi_func _func = ((const mapi_func *) _tbl)[1127];
d2021 1
a2021 1
   mapi_func _func = ((const mapi_func *) _tbl)[1128];
d2028 1
a2028 1
   mapi_func _func = ((const mapi_func *) _tbl)[1129];
d2035 1
a2035 1
   mapi_func _func = ((const mapi_func *) _tbl)[1130];
d2042 1
a2042 1
   mapi_func _func = ((const mapi_func *) _tbl)[1131];
d2049 1
a2049 1
   mapi_func _func = ((const mapi_func *) _tbl)[1132];
d2056 1
a2056 1
   mapi_func _func = ((const mapi_func *) _tbl)[1133];
d2063 1
a2063 1
   mapi_func _func = ((const mapi_func *) _tbl)[1134];
d2070 1
a2070 1
   mapi_func _func = ((const mapi_func *) _tbl)[1135];
d2077 1
a2077 1
   mapi_func _func = ((const mapi_func *) _tbl)[1136];
d2084 1
a2084 1
   mapi_func _func = ((const mapi_func *) _tbl)[1137];
d2091 1
a2091 1
   mapi_func _func = ((const mapi_func *) _tbl)[1138];
d2098 1
a2098 1
   mapi_func _func = ((const mapi_func *) _tbl)[1139];
d2105 1
a2105 1
   mapi_func _func = ((const mapi_func *) _tbl)[1140];
d2112 1
a2112 1
   mapi_func _func = ((const mapi_func *) _tbl)[1141];
d2119 1
a2119 1
   mapi_func _func = ((const mapi_func *) _tbl)[1142];
d2126 1
a2126 1
   mapi_func _func = ((const mapi_func *) _tbl)[1143];
d2133 1
a2133 1
   mapi_func _func = ((const mapi_func *) _tbl)[1144];
d2140 1
a2140 1
   mapi_func _func = ((const mapi_func *) _tbl)[1145];
d2147 1
a2147 1
   mapi_func _func = ((const mapi_func *) _tbl)[1146];
d2154 1
a2154 1
   mapi_func _func = ((const mapi_func *) _tbl)[1147];
d2161 1
a2161 1
   mapi_func _func = ((const mapi_func *) _tbl)[1148];
d2168 1
a2168 1
   mapi_func _func = ((const mapi_func *) _tbl)[1149];
d2175 1
a2175 1
   mapi_func _func = ((const mapi_func *) _tbl)[1150];
d2182 1
a2182 1
   mapi_func _func = ((const mapi_func *) _tbl)[1151];
d2189 1
a2189 1
   mapi_func _func = ((const mapi_func *) _tbl)[1152];
d2196 1
a2196 1
   mapi_func _func = ((const mapi_func *) _tbl)[1153];
d2203 1
a2203 1
   mapi_func _func = ((const mapi_func *) _tbl)[1154];
d2210 1
a2210 1
   mapi_func _func = ((const mapi_func *) _tbl)[1155];
d2527 1
a2527 1
"\t"STUB_ASM_CODE("880")"\n"
d2530 1
a2530 1
"\t"STUB_ASM_CODE("948")"\n"
d2533 1
a2533 1
"\t"STUB_ASM_CODE("1111")"\n"
d2536 1
a2536 1
"\t"STUB_ASM_CODE("1112")"\n"
d2539 1
a2539 1
"\t"STUB_ASM_CODE("1113")"\n"
d2542 1
a2542 1
"\t"STUB_ASM_CODE("1114")"\n"
d2545 1
a2545 1
"\t"STUB_ASM_CODE("1115")"\n"
d2548 1
a2548 1
"\t"STUB_ASM_CODE("1116")"\n"
d2551 1
a2551 1
"\t"STUB_ASM_CODE("1117")"\n"
d2554 1
a2554 1
"\t"STUB_ASM_CODE("1118")"\n"
d2557 1
a2557 1
"\t"STUB_ASM_CODE("1119")"\n"
d2560 1
a2560 1
"\t"STUB_ASM_CODE("1120")"\n"
d2563 1
a2563 1
"\t"STUB_ASM_CODE("1121")"\n"
d2566 1
a2566 1
"\t"STUB_ASM_CODE("1122")"\n"
d2569 1
a2569 1
"\t"STUB_ASM_CODE("1123")"\n"
d2572 1
a2572 1
"\t"STUB_ASM_CODE("1124")"\n"
d2575 1
a2575 1
"\t"STUB_ASM_CODE("1125")"\n"
d2578 1
a2578 1
"\t"STUB_ASM_CODE("1126")"\n"
d2581 1
a2581 1
"\t"STUB_ASM_CODE("1127")"\n"
d2584 1
a2584 1
"\t"STUB_ASM_CODE("1128")"\n"
d2587 1
a2587 1
"\t"STUB_ASM_CODE("1129")"\n"
d2590 1
a2590 1
"\t"STUB_ASM_CODE("1130")"\n"
d2593 1
a2593 1
"\t"STUB_ASM_CODE("1131")"\n"
d2596 1
a2596 1
"\t"STUB_ASM_CODE("1132")"\n"
d2599 1
a2599 1
"\t"STUB_ASM_CODE("1133")"\n"
d2602 1
a2602 1
"\t"STUB_ASM_CODE("1134")"\n"
d2605 1
a2605 1
"\t"STUB_ASM_CODE("1135")"\n"
d2608 1
a2608 1
"\t"STUB_ASM_CODE("1136")"\n"
d2611 1
a2611 1
"\t"STUB_ASM_CODE("1137")"\n"
d2614 1
a2614 1
"\t"STUB_ASM_CODE("1138")"\n"
d2617 1
a2617 1
"\t"STUB_ASM_CODE("1139")"\n"
d2620 1
a2620 1
"\t"STUB_ASM_CODE("1140")"\n"
d2623 1
a2623 1
"\t"STUB_ASM_CODE("1141")"\n"
d2626 1
a2626 1
"\t"STUB_ASM_CODE("1142")"\n"
d2629 1
a2629 1
"\t"STUB_ASM_CODE("1143")"\n"
d2632 1
a2632 1
"\t"STUB_ASM_CODE("1144")"\n"
d2635 1
a2635 1
"\t"STUB_ASM_CODE("1145")"\n"
d2638 1
a2638 1
"\t"STUB_ASM_CODE("1146")"\n"
d2641 1
a2641 1
"\t"STUB_ASM_CODE("1147")"\n"
d2644 1
a2644 1
"\t"STUB_ASM_CODE("1148")"\n"
d2647 1
a2647 1
"\t"STUB_ASM_CODE("1149")"\n"
d2650 1
a2650 1
"\t"STUB_ASM_CODE("1150")"\n"
d2653 1
a2653 1
"\t"STUB_ASM_CODE("1151")"\n"
d2656 1
a2656 1
"\t"STUB_ASM_CODE("1152")"\n"
d2659 1
a2659 1
"\t"STUB_ASM_CODE("1153")"\n"
d2662 1
a2662 1
"\t"STUB_ASM_CODE("1154")"\n"
d2665 1
a2665 1
"\t"STUB_ASM_CODE("1155")"\n"
@


1.2
log
@Mesa 10.2.3
@
text
@d857 5
a861 5
void APIENTRY gl_dispatch_stub_842(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void APIENTRY gl_dispatch_stub_843(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void APIENTRY gl_dispatch_stub_844(GLuint attribindex, GLuint bindingindex);
void APIENTRY gl_dispatch_stub_845(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void APIENTRY gl_dispatch_stub_846(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
d863 32
a894 28
void APIENTRY gl_dispatch_stub_848(GLuint attribindex, GLuint divisor);
void APIENTRY gl_dispatch_stub_849(GLenum mode, const GLvoid *indirect, GLsizei primcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_850(GLenum mode, GLenum type, const GLvoid *indirect, GLsizei primcount, GLsizei stride);
void APIENTRY gl_dispatch_stub_851(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_852(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_853(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_854(GLenum target, GLsizeiptr size, const GLvoid *data, GLbitfield flags);
void APIENTRY gl_dispatch_stub_855(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
void APIENTRY gl_dispatch_stub_856(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
void APIENTRY gl_dispatch_stub_857(GLuint first, GLsizei count, const GLuint *textures);
void APIENTRY gl_dispatch_stub_858(GLuint first, GLsizei count, const GLuint *samplers);
void APIENTRY gl_dispatch_stub_859(GLuint first, GLsizei count, const GLuint *textures);
void APIENTRY gl_dispatch_stub_860(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
void APIENTRY gl_dispatch_stub_861(GLuint buffer);
void APIENTRY gl_dispatch_stub_862(GLuint buffer, GLintptr offset, GLsizeiptr length);
void APIENTRY gl_dispatch_stub_863(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_864(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_865(GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_866(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_867(GLfloat factor, GLfloat bias);
void APIENTRY gl_dispatch_stub_868(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
void APIENTRY gl_dispatch_stub_869(const GLfloat *coords);
void APIENTRY gl_dispatch_stub_870(GLint x, GLint y, GLint z, GLint width, GLint height);
void APIENTRY gl_dispatch_stub_871(const GLint *coords);
void APIENTRY gl_dispatch_stub_872(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
void APIENTRY gl_dispatch_stub_873(const GLshort *coords);
void APIENTRY gl_dispatch_stub_874(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
void APIENTRY gl_dispatch_stub_875(const GLfixed *coords);
d896 3
a898 7
GLbitfield APIENTRY gl_dispatch_stub_877(GLfixed *mantissa, GLint *exponent);
void APIENTRY gl_dispatch_stub_878(GLclampf value, GLboolean invert);
void APIENTRY gl_dispatch_stub_879(GLenum pattern);
void APIENTRY gl_dispatch_stub_880(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_881(GLsizei stride, GLsizei count, const GLboolean *pointer);
void APIENTRY gl_dispatch_stub_882(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_883(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
d900 39
a938 39
void APIENTRY gl_dispatch_stub_885(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_886(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_887(GLuint pipeline, GLuint program);
void APIENTRY gl_dispatch_stub_888(GLuint pipeline);
GLuint APIENTRY gl_dispatch_stub_889(GLenum type, GLsizei count, const GLchar * const *strings);
void APIENTRY gl_dispatch_stub_890(GLsizei n, const GLuint *pipelines);
void APIENTRY gl_dispatch_stub_891(GLsizei n, GLuint *pipelines);
void APIENTRY gl_dispatch_stub_892(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void APIENTRY gl_dispatch_stub_893(GLuint pipeline, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_894(GLuint pipeline);
void APIENTRY gl_dispatch_stub_895(GLint first, GLsizei count);
void APIENTRY gl_dispatch_stub_896(GLuint program, GLint location, GLfloat x);
void APIENTRY gl_dispatch_stub_897(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_898(GLuint program, GLint location, GLint x);
void APIENTRY gl_dispatch_stub_899(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_900(GLuint program, GLint location, GLuint x);
void APIENTRY gl_dispatch_stub_901(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_902(GLuint program, GLint location, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_903(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_904(GLuint program, GLint location, GLint x, GLint y);
void APIENTRY gl_dispatch_stub_905(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_906(GLuint program, GLint location, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_907(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_908(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_909(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_910(GLuint program, GLint location, GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_911(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_912(GLuint program, GLint location, GLuint x, GLuint y, GLuint z);
void APIENTRY gl_dispatch_stub_913(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_914(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_915(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void APIENTRY gl_dispatch_stub_916(GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_917(GLuint program, GLint location, GLsizei count, const GLint *value);
void APIENTRY gl_dispatch_stub_918(GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_919(GLuint program, GLint location, GLsizei count, const GLuint *value);
void APIENTRY gl_dispatch_stub_920(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_921(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_922(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void APIENTRY gl_dispatch_stub_923(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
d944 19
a962 15
void APIENTRY gl_dispatch_stub_929(void);
void APIENTRY gl_dispatch_stub_930(GLuint pipeline, GLbitfield stages, GLuint program);
void APIENTRY gl_dispatch_stub_931(GLuint pipeline);
void APIENTRY gl_dispatch_stub_932(GLDEBUGPROC callback, const GLvoid *userParam);
void APIENTRY gl_dispatch_stub_933(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void APIENTRY gl_dispatch_stub_934(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
GLuint APIENTRY gl_dispatch_stub_935(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void APIENTRY gl_dispatch_stub_936(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
void APIENTRY gl_dispatch_stub_937(const GLvoid *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
void APIENTRY gl_dispatch_stub_938(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
void APIENTRY gl_dispatch_stub_939(const GLvoid *ptr, GLsizei length, const GLchar *label);
void APIENTRY gl_dispatch_stub_940(void);
void APIENTRY gl_dispatch_stub_941(GLenum source, GLuint id, GLsizei length, const GLchar *message);
void APIENTRY gl_dispatch_stub_942(GLfloat red, GLfloat green, GLfloat blue);
void APIENTRY gl_dispatch_stub_943(const GLfloat *v);
d964 76
a1039 80
void APIENTRY gl_dispatch_stub_945(GLfloat coord);
void APIENTRY gl_dispatch_stub_946(const GLfloat *coord);
void APIENTRY gl_dispatch_stub_947(void);
void APIENTRY gl_dispatch_stub_948(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_949(const GLdouble *v);
void APIENTRY gl_dispatch_stub_950(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_951(const GLfloat *v);
void APIENTRY gl_dispatch_stub_952(GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_953(const GLint *v);
void APIENTRY gl_dispatch_stub_954(GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_955(const GLshort *v);
void APIENTRY gl_dispatch_stub_956(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
void APIENTRY gl_dispatch_stub_957(const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, GLint modestride);
GLboolean APIENTRY gl_dispatch_stub_958(GLsizei n, const GLuint *ids, GLboolean *residences);
void APIENTRY gl_dispatch_stub_959(GLenum target, GLuint id, const GLfloat *params);
void APIENTRY gl_dispatch_stub_960(GLenum target, GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_961(GLenum target, GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_962(GLuint id, GLenum pname, GLubyte *program);
void APIENTRY gl_dispatch_stub_963(GLuint id, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_964(GLenum target, GLuint address, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_965(GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_966(GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_967(GLuint index, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_968(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
void APIENTRY gl_dispatch_stub_969(GLenum target, GLuint index, GLsizei num, const GLdouble *params);
void APIENTRY gl_dispatch_stub_970(GLenum target, GLuint index, GLsizei num, const GLfloat *params);
void APIENTRY gl_dispatch_stub_971(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_972(GLenum target, GLuint address, GLenum matrix, GLenum transform);
void APIENTRY gl_dispatch_stub_973(GLuint index, GLdouble x);
void APIENTRY gl_dispatch_stub_974(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_975(GLuint index, GLfloat x);
void APIENTRY gl_dispatch_stub_976(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_977(GLuint index, GLshort x);
void APIENTRY gl_dispatch_stub_978(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_979(GLuint index, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_980(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_981(GLuint index, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_982(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_983(GLuint index, GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_984(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_985(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_986(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_987(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_988(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_989(GLuint index, GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_990(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_991(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_992(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_993(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_994(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_995(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_996(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_997(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void APIENTRY gl_dispatch_stub_998(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_999(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_1000(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1001(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1002(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1003(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1004(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1005(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1006(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1007(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1008(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1009(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1010(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1011(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_1012(GLuint index, GLsizei n, const GLubyte *v);
void APIENTRY gl_dispatch_stub_1013(GLenum pname, GLfloat *param);
void APIENTRY gl_dispatch_stub_1014(GLenum pname, GLint *param);
void APIENTRY gl_dispatch_stub_1015(GLenum pname, const GLfloat *param);
void APIENTRY gl_dispatch_stub_1016(GLenum pname, const GLint *param);
void APIENTRY gl_dispatch_stub_1017(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_1018(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_1019(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void APIENTRY gl_dispatch_stub_1020(void);
void APIENTRY gl_dispatch_stub_1021(GLuint id);
void APIENTRY gl_dispatch_stub_1022(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_1023(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_1024(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
d1041 30
a1070 30
void APIENTRY gl_dispatch_stub_1026(void);
GLuint APIENTRY gl_dispatch_stub_1027(GLuint range);
void APIENTRY gl_dispatch_stub_1028(GLuint dst, GLuint coord, GLenum swizzle);
void APIENTRY gl_dispatch_stub_1029(GLuint dst, GLuint interp, GLenum swizzle);
void APIENTRY gl_dispatch_stub_1030(GLuint dst, const GLfloat *value);
void APIENTRY gl_dispatch_stub_1031(GLenum face);
void APIENTRY gl_dispatch_stub_1032(GLuint array);
void APIENTRY gl_dispatch_stub_1033(GLsizei n, GLuint *arrays);
void APIENTRY gl_dispatch_stub_1034(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
void APIENTRY gl_dispatch_stub_1035(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
void APIENTRY gl_dispatch_stub_1036(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_1037(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
void APIENTRY gl_dispatch_stub_1038(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_1039(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
void APIENTRY gl_dispatch_stub_1040(void);
void APIENTRY gl_dispatch_stub_1041(GLenum coord, GLenum pname, GLfixed *params);
void APIENTRY gl_dispatch_stub_1042(GLenum coord, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_1043(GLenum coord, GLenum pname, const GLfixed *params);
void APIENTRY gl_dispatch_stub_1044(GLclampd zmin, GLclampd zmax);
void APIENTRY gl_dispatch_stub_1045(GLenum target, GLuint framebuffer);
void APIENTRY gl_dispatch_stub_1046(GLenum target, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_1047(GLenum target, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_1048(GLenum target, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_1049(GLuint index, GLint x);
void APIENTRY gl_dispatch_stub_1050(GLuint index, GLuint x);
void APIENTRY gl_dispatch_stub_1051(GLuint index, GLint x, GLint y);
void APIENTRY gl_dispatch_stub_1052(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_1053(GLuint index, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_1054(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_1055(GLuint index, GLint x, GLint y, GLint z);
d1072 1
a1072 1
void APIENTRY gl_dispatch_stub_1057(GLuint index, GLuint x, GLuint y, GLuint z);
d1074 1
a1074 1
void APIENTRY gl_dispatch_stub_1059(GLuint index, GLint x, GLint y, GLint z, GLint w);
d1076 1
a1076 1
void APIENTRY gl_dispatch_stub_1061(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
d1078 29
a1106 29
void APIENTRY gl_dispatch_stub_1063(GLint r, GLint g, GLint b, GLint a);
void APIENTRY gl_dispatch_stub_1064(GLuint r, GLuint g, GLuint b, GLuint a);
void APIENTRY gl_dispatch_stub_1065(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void APIENTRY gl_dispatch_stub_1066(GLuint monitor);
void APIENTRY gl_dispatch_stub_1067(GLsizei n, GLuint *monitors);
void APIENTRY gl_dispatch_stub_1068(GLuint monitor);
void APIENTRY gl_dispatch_stub_1069(GLsizei n, GLuint *monitors);
void APIENTRY gl_dispatch_stub_1070(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
void APIENTRY gl_dispatch_stub_1071(GLuint group, GLuint counter, GLenum pname, GLvoid *data);
void APIENTRY gl_dispatch_stub_1072(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
void APIENTRY gl_dispatch_stub_1073(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei countersSize, GLuint *counters);
void APIENTRY gl_dispatch_stub_1074(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
void APIENTRY gl_dispatch_stub_1075(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
void APIENTRY gl_dispatch_stub_1076(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
void APIENTRY gl_dispatch_stub_1077(GLenum objectType, GLuint name, GLenum pname, GLint *value);
GLenum APIENTRY gl_dispatch_stub_1078(GLenum objectType, GLuint name, GLenum option);
GLenum APIENTRY gl_dispatch_stub_1079(GLenum objectType, GLuint name, GLenum option);
void APIENTRY gl_dispatch_stub_1080(GLuint program);
GLuint APIENTRY gl_dispatch_stub_1081(GLenum type, const GLchar *string);
void APIENTRY gl_dispatch_stub_1082(GLenum type, GLuint program);
void APIENTRY gl_dispatch_stub_1083(void);
void APIENTRY gl_dispatch_stub_1084(void);
void APIENTRY gl_dispatch_stub_1085(GLintptr surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void APIENTRY gl_dispatch_stub_1086(const GLvoid *vdpDevice, const GLvoid *getProcAddress);
GLboolean APIENTRY gl_dispatch_stub_1087(GLintptr surface);
void APIENTRY gl_dispatch_stub_1088(GLsizei numSurfaces, const GLintptr *surfaces);
GLintptr APIENTRY gl_dispatch_stub_1089(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
GLintptr APIENTRY gl_dispatch_stub_1090(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
void APIENTRY gl_dispatch_stub_1091(GLintptr surface, GLenum access);
d1108 18
a1125 14
void APIENTRY gl_dispatch_stub_1093(GLintptr surface);
void APIENTRY gl_dispatch_stub_1094(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1095(GLuint queryId, GLuint *queryHandle);
void APIENTRY gl_dispatch_stub_1096(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1097(GLuint queryHandle);
void APIENTRY gl_dispatch_stub_1098(GLuint *queryId);
void APIENTRY gl_dispatch_stub_1099(GLuint queryId, GLuint *nextQueryId);
void APIENTRY gl_dispatch_stub_1100(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
void APIENTRY gl_dispatch_stub_1101(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
void APIENTRY gl_dispatch_stub_1102(GLchar *queryName, GLuint *queryId);
void APIENTRY gl_dispatch_stub_1103(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
void APIENTRY gl_dispatch_stub_1104(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
void APIENTRY gl_dispatch_stub_1105(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void APIENTRY gl_dispatch_stub_1106(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
d1892 1
a1892 1
   mapi_func _func = ((const mapi_func *) _tbl)[876];
d1899 1
a1899 1
   mapi_func _func = ((const mapi_func *) _tbl)[944];
d1906 1
a1906 1
   mapi_func _func = ((const mapi_func *) _tbl)[1107];
d1913 1
a1913 1
   mapi_func _func = ((const mapi_func *) _tbl)[1108];
d1920 1
a1920 1
   mapi_func _func = ((const mapi_func *) _tbl)[1109];
d1927 1
a1927 1
   mapi_func _func = ((const mapi_func *) _tbl)[1110];
d1934 1
a1934 1
   mapi_func _func = ((const mapi_func *) _tbl)[1111];
d1941 1
a1941 1
   mapi_func _func = ((const mapi_func *) _tbl)[1112];
d1948 1
a1948 1
   mapi_func _func = ((const mapi_func *) _tbl)[1113];
d1955 1
a1955 1
   mapi_func _func = ((const mapi_func *) _tbl)[1114];
d1962 1
a1962 1
   mapi_func _func = ((const mapi_func *) _tbl)[1115];
d1969 1
a1969 1
   mapi_func _func = ((const mapi_func *) _tbl)[1116];
d1976 1
a1976 1
   mapi_func _func = ((const mapi_func *) _tbl)[1117];
d1983 1
a1983 1
   mapi_func _func = ((const mapi_func *) _tbl)[1118];
d1990 1
a1990 1
   mapi_func _func = ((const mapi_func *) _tbl)[1119];
d1997 1
a1997 1
   mapi_func _func = ((const mapi_func *) _tbl)[1120];
d2004 1
a2004 1
   mapi_func _func = ((const mapi_func *) _tbl)[1121];
d2011 1
a2011 1
   mapi_func _func = ((const mapi_func *) _tbl)[1122];
d2018 1
a2018 1
   mapi_func _func = ((const mapi_func *) _tbl)[1123];
d2025 1
a2025 1
   mapi_func _func = ((const mapi_func *) _tbl)[1124];
d2032 1
a2032 1
   mapi_func _func = ((const mapi_func *) _tbl)[1125];
d2039 1
a2039 1
   mapi_func _func = ((const mapi_func *) _tbl)[1126];
d2046 1
a2046 1
   mapi_func _func = ((const mapi_func *) _tbl)[1127];
d2053 1
a2053 1
   mapi_func _func = ((const mapi_func *) _tbl)[1128];
d2060 1
a2060 1
   mapi_func _func = ((const mapi_func *) _tbl)[1129];
d2067 1
a2067 1
   mapi_func _func = ((const mapi_func *) _tbl)[1130];
d2074 1
a2074 1
   mapi_func _func = ((const mapi_func *) _tbl)[1131];
d2081 1
a2081 1
   mapi_func _func = ((const mapi_func *) _tbl)[1132];
d2088 1
a2088 1
   mapi_func _func = ((const mapi_func *) _tbl)[1133];
d2095 1
a2095 1
   mapi_func _func = ((const mapi_func *) _tbl)[1134];
d2102 1
a2102 1
   mapi_func _func = ((const mapi_func *) _tbl)[1135];
d2109 1
a2109 1
   mapi_func _func = ((const mapi_func *) _tbl)[1136];
d2116 1
a2116 1
   mapi_func _func = ((const mapi_func *) _tbl)[1137];
d2123 1
a2123 1
   mapi_func _func = ((const mapi_func *) _tbl)[1138];
d2130 1
a2130 1
   mapi_func _func = ((const mapi_func *) _tbl)[1139];
d2137 1
a2137 1
   mapi_func _func = ((const mapi_func *) _tbl)[1140];
d2144 1
a2144 1
   mapi_func _func = ((const mapi_func *) _tbl)[1141];
d2151 1
a2151 1
   mapi_func _func = ((const mapi_func *) _tbl)[1142];
d2158 1
a2158 1
   mapi_func _func = ((const mapi_func *) _tbl)[1143];
d2165 1
a2165 1
   mapi_func _func = ((const mapi_func *) _tbl)[1144];
d2172 1
a2172 1
   mapi_func _func = ((const mapi_func *) _tbl)[1145];
d2179 1
a2179 1
   mapi_func _func = ((const mapi_func *) _tbl)[1146];
d2186 1
a2186 1
   mapi_func _func = ((const mapi_func *) _tbl)[1147];
d2193 1
a2193 1
   mapi_func _func = ((const mapi_func *) _tbl)[1148];
d2200 1
a2200 1
   mapi_func _func = ((const mapi_func *) _tbl)[1149];
d2207 1
a2207 1
   mapi_func _func = ((const mapi_func *) _tbl)[1150];
d2214 1
a2214 1
   mapi_func _func = ((const mapi_func *) _tbl)[1151];
d2531 1
a2531 1
"\t"STUB_ASM_CODE("876")"\n"
d2534 1
a2534 1
"\t"STUB_ASM_CODE("944")"\n"
d2537 1
a2537 1
"\t"STUB_ASM_CODE("1107")"\n"
d2540 1
a2540 1
"\t"STUB_ASM_CODE("1108")"\n"
d2543 1
a2543 1
"\t"STUB_ASM_CODE("1109")"\n"
d2546 1
a2546 1
"\t"STUB_ASM_CODE("1110")"\n"
d2549 1
a2549 1
"\t"STUB_ASM_CODE("1111")"\n"
d2552 1
a2552 1
"\t"STUB_ASM_CODE("1112")"\n"
d2555 1
a2555 1
"\t"STUB_ASM_CODE("1113")"\n"
d2558 1
a2558 1
"\t"STUB_ASM_CODE("1114")"\n"
d2561 1
a2561 1
"\t"STUB_ASM_CODE("1115")"\n"
d2564 1
a2564 1
"\t"STUB_ASM_CODE("1116")"\n"
d2567 1
a2567 1
"\t"STUB_ASM_CODE("1117")"\n"
d2570 1
a2570 1
"\t"STUB_ASM_CODE("1118")"\n"
d2573 1
a2573 1
"\t"STUB_ASM_CODE("1119")"\n"
d2576 1
a2576 1
"\t"STUB_ASM_CODE("1120")"\n"
d2579 1
a2579 1
"\t"STUB_ASM_CODE("1121")"\n"
d2582 1
a2582 1
"\t"STUB_ASM_CODE("1122")"\n"
d2585 1
a2585 1
"\t"STUB_ASM_CODE("1123")"\n"
d2588 1
a2588 1
"\t"STUB_ASM_CODE("1124")"\n"
d2591 1
a2591 1
"\t"STUB_ASM_CODE("1125")"\n"
d2594 1
a2594 1
"\t"STUB_ASM_CODE("1126")"\n"
d2597 1
a2597 1
"\t"STUB_ASM_CODE("1127")"\n"
d2600 1
a2600 1
"\t"STUB_ASM_CODE("1128")"\n"
d2603 1
a2603 1
"\t"STUB_ASM_CODE("1129")"\n"
d2606 1
a2606 1
"\t"STUB_ASM_CODE("1130")"\n"
d2609 1
a2609 1
"\t"STUB_ASM_CODE("1131")"\n"
d2612 1
a2612 1
"\t"STUB_ASM_CODE("1132")"\n"
d2615 1
a2615 1
"\t"STUB_ASM_CODE("1133")"\n"
d2618 1
a2618 1
"\t"STUB_ASM_CODE("1134")"\n"
d2621 1
a2621 1
"\t"STUB_ASM_CODE("1135")"\n"
d2624 1
a2624 1
"\t"STUB_ASM_CODE("1136")"\n"
d2627 1
a2627 1
"\t"STUB_ASM_CODE("1137")"\n"
d2630 1
a2630 1
"\t"STUB_ASM_CODE("1138")"\n"
d2633 1
a2633 1
"\t"STUB_ASM_CODE("1139")"\n"
d2636 1
a2636 1
"\t"STUB_ASM_CODE("1140")"\n"
d2639 1
a2639 1
"\t"STUB_ASM_CODE("1141")"\n"
d2642 1
a2642 1
"\t"STUB_ASM_CODE("1142")"\n"
d2645 1
a2645 1
"\t"STUB_ASM_CODE("1143")"\n"
d2648 1
a2648 1
"\t"STUB_ASM_CODE("1144")"\n"
d2651 1
a2651 1
"\t"STUB_ASM_CODE("1145")"\n"
d2654 1
a2654 1
"\t"STUB_ASM_CODE("1146")"\n"
d2657 1
a2657 1
"\t"STUB_ASM_CODE("1147")"\n"
d2660 1
a2660 1
"\t"STUB_ASM_CODE("1148")"\n"
d2663 1
a2663 1
"\t"STUB_ASM_CODE("1149")"\n"
d2666 1
a2666 1
"\t"STUB_ASM_CODE("1150")"\n"
d2669 1
a2669 1
"\t"STUB_ASM_CODE("1151")"\n"
@


1.1
log
@build infrastructure changes for Mesa 9.2.0
ok matthieu@@ mpi@@
@
text
@a203 1
GLAPI void APIENTRY glTexGenfOES(GLenum coord, GLenum pname, GLfloat param);
a204 1
GLAPI void APIENTRY glTexGenfvOES(GLenum coord, GLenum pname, const GLfloat *params);
a205 1
GLAPI void APIENTRY glTexGeniOES(GLenum coord, GLenum pname, GLint param);
a206 1
GLAPI void APIENTRY glTexGenivOES(GLenum coord, GLenum pname, const GLint *params);
a292 1
GLAPI void APIENTRY glGetTexGenfvOES(GLenum coord, GLenum pname, GLfloat *params);
a293 1
GLAPI void APIENTRY glGetTexGenivOES(GLenum coord, GLenum pname, GLint *params);
a350 1
GLAPI void APIENTRY glBlendEquationOES(GLenum mode);
a434 1
GLAPI void APIENTRY glBlendFuncSeparateOES(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
a485 1
GLAPI void APIENTRY glGetBufferPointervOES(GLenum target, GLenum pname, GLvoid **params);
a492 1
GLAPI GLvoid * APIENTRY glMapBufferOES(GLenum target, GLenum access);
a493 1
GLAPI GLboolean APIENTRY glUnmapBufferOES(GLenum target);
a496 1
GLAPI void APIENTRY glBlendEquationSeparateOES(GLenum modeRGB, GLenum modeA);
d635 47
a681 53
void APIENTRY gl_dispatch_stub_620(GLenum target, GLuint program);
void APIENTRY gl_dispatch_stub_621(GLsizei n, const GLuint *programs);
void APIENTRY gl_dispatch_stub_622(GLsizei n, GLuint *programs);
void APIENTRY gl_dispatch_stub_623(GLenum target, GLuint index, GLdouble *params);
void APIENTRY gl_dispatch_stub_624(GLenum target, GLuint index, GLfloat *params);
void APIENTRY gl_dispatch_stub_625(GLenum target, GLuint index, GLdouble *params);
void APIENTRY gl_dispatch_stub_626(GLenum target, GLuint index, GLfloat *params);
void APIENTRY gl_dispatch_stub_627(GLenum target, GLenum pname, GLvoid *string);
void APIENTRY gl_dispatch_stub_628(GLenum target, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_629(GLuint program);
void APIENTRY gl_dispatch_stub_630(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_631(GLenum target, GLuint index, const GLdouble *params);
void APIENTRY gl_dispatch_stub_632(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_633(GLenum target, GLuint index, const GLfloat *params);
void APIENTRY gl_dispatch_stub_634(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_635(GLenum target, GLuint index, const GLdouble *params);
void APIENTRY gl_dispatch_stub_636(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_637(GLenum target, GLuint index, const GLfloat *params);
void APIENTRY gl_dispatch_stub_638(GLenum target, GLenum format, GLsizei len, const GLvoid *string);
void APIENTRY gl_dispatch_stub_639(GLuint index, GLfloat x);
void APIENTRY gl_dispatch_stub_640(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_641(GLuint index, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_642(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_643(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_644(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_645(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_646(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_647(GLhandleARB containerObj, GLhandleARB obj);
GLhandleARB APIENTRY gl_dispatch_stub_648(void);
GLhandleARB APIENTRY gl_dispatch_stub_649(GLenum shaderType);
void APIENTRY gl_dispatch_stub_650(GLhandleARB obj);
void APIENTRY gl_dispatch_stub_651(GLhandleARB containerObj, GLhandleARB attachedObj);
void APIENTRY gl_dispatch_stub_652(GLhandleARB containerObj, GLsizei maxLength, GLsizei *length, GLhandleARB *infoLog);
GLhandleARB APIENTRY gl_dispatch_stub_653(GLenum pname);
void APIENTRY gl_dispatch_stub_654(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
void APIENTRY gl_dispatch_stub_655(GLhandleARB obj, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_656(GLhandleARB obj, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_657(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void APIENTRY gl_dispatch_stub_658(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
void APIENTRY gl_dispatch_stub_659(GLenum target, GLuint framebuffer);
GLAPI void APIENTRY glBindFramebufferOES(GLenum target, GLuint framebuffer);
void APIENTRY gl_dispatch_stub_660(GLenum target, GLuint renderbuffer);
GLAPI void APIENTRY glBindRenderbufferOES(GLenum target, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_661(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLenum APIENTRY gl_dispatch_stub_662(GLenum target);
GLAPI GLenum APIENTRY glCheckFramebufferStatusOES(GLenum target);
void APIENTRY gl_dispatch_stub_663(GLsizei n, const GLuint *framebuffers);
GLAPI void APIENTRY glDeleteFramebuffersOES(GLsizei n, const GLuint *framebuffers);
void APIENTRY gl_dispatch_stub_664(GLsizei n, const GLuint *renderbuffers);
GLAPI void APIENTRY glDeleteRenderbuffersOES(GLsizei n, const GLuint *renderbuffers);
void APIENTRY gl_dispatch_stub_665(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLAPI void APIENTRY glFramebufferRenderbufferOES(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_666(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
d683 117
a799 125
GLAPI void APIENTRY glFramebufferTexture2DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_668(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void APIENTRY gl_dispatch_stub_669(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void APIENTRY gl_dispatch_stub_670(GLsizei n, GLuint *framebuffers);
GLAPI void APIENTRY glGenFramebuffersOES(GLsizei n, GLuint *framebuffers);
void APIENTRY gl_dispatch_stub_671(GLsizei n, GLuint *renderbuffers);
GLAPI void APIENTRY glGenRenderbuffersOES(GLsizei n, GLuint *renderbuffers);
void APIENTRY gl_dispatch_stub_672(GLenum target);
GLAPI void APIENTRY glGenerateMipmapOES(GLenum target);
void APIENTRY gl_dispatch_stub_673(GLenum target, GLenum attachment, GLenum pname, GLint *params);
GLAPI void APIENTRY glGetFramebufferAttachmentParameterivOES(GLenum target, GLenum attachment, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_674(GLenum target, GLenum pname, GLint *params);
GLAPI void APIENTRY glGetRenderbufferParameterivOES(GLenum target, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_675(GLuint framebuffer);
GLAPI GLboolean APIENTRY glIsFramebufferOES(GLuint framebuffer);
GLboolean APIENTRY gl_dispatch_stub_676(GLuint renderbuffer);
GLAPI GLboolean APIENTRY glIsRenderbufferOES(GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_677(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLAPI void APIENTRY glRenderbufferStorageOES(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_678(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_679(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
void APIENTRY gl_dispatch_stub_680(GLenum target, GLintptr offset, GLsizeiptr length);
GLAPI void APIENTRY glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
GLvoid * APIENTRY gl_dispatch_stub_681(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLAPI GLvoid * APIENTRY glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr size, GLbitfield length);
void APIENTRY gl_dispatch_stub_682(GLuint array);
void APIENTRY gl_dispatch_stub_683(GLsizei n, const GLuint *arrays);
void APIENTRY gl_dispatch_stub_684(GLsizei n, GLuint *arrays);
GLboolean APIENTRY gl_dispatch_stub_685(GLuint array);
void APIENTRY gl_dispatch_stub_686(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
void APIENTRY gl_dispatch_stub_687(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_688(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
void APIENTRY gl_dispatch_stub_689(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
GLuint APIENTRY gl_dispatch_stub_690(GLuint program, const GLchar *uniformBlockName);
void APIENTRY gl_dispatch_stub_691(GLuint program, GLsizei uniformCount, const GLchar * const *uniformNames, GLuint *uniformIndices);
void APIENTRY gl_dispatch_stub_692(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void APIENTRY gl_dispatch_stub_693(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLenum APIENTRY gl_dispatch_stub_694(GLsync sync, GLbitfield flags, GLuint64 timeout);
void APIENTRY gl_dispatch_stub_695(GLsync sync);
GLsync APIENTRY gl_dispatch_stub_696(GLenum condition, GLbitfield flags);
void APIENTRY gl_dispatch_stub_697(GLenum pname, GLint64 *params);
void APIENTRY gl_dispatch_stub_698(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
GLboolean APIENTRY gl_dispatch_stub_699(GLsync sync);
void APIENTRY gl_dispatch_stub_700(GLsync sync, GLbitfield flags, GLuint64 timeout);
void APIENTRY gl_dispatch_stub_701(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
void APIENTRY gl_dispatch_stub_702(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex);
void APIENTRY gl_dispatch_stub_703(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);
void APIENTRY gl_dispatch_stub_704(GLenum mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, const GLint *basevertex);
void APIENTRY gl_dispatch_stub_705(GLenum mode);
void APIENTRY gl_dispatch_stub_706(GLenum pname, GLuint index, GLfloat *val);
void APIENTRY gl_dispatch_stub_707(GLuint index, GLbitfield mask);
void APIENTRY gl_dispatch_stub_708(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_709(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_710(GLuint buf, GLenum modeRGB, GLenum modeA);
void APIENTRY gl_dispatch_stub_711(GLuint buf, GLenum mode);
void APIENTRY gl_dispatch_stub_712(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcA, GLenum dstA);
void APIENTRY gl_dispatch_stub_713(GLuint buf, GLenum src, GLenum dst);
void APIENTRY gl_dispatch_stub_714(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
GLint APIENTRY gl_dispatch_stub_715(GLuint program, const GLchar *name);
void APIENTRY gl_dispatch_stub_716(GLuint unit, GLuint sampler);
void APIENTRY gl_dispatch_stub_717(GLsizei count, const GLuint *samplers);
void APIENTRY gl_dispatch_stub_718(GLsizei count, GLuint *samplers);
void APIENTRY gl_dispatch_stub_719(GLuint sampler, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_720(GLuint sampler, GLenum pname, GLuint *params);
void APIENTRY gl_dispatch_stub_721(GLuint sampler, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_722(GLuint sampler, GLenum pname, GLint *params);
GLboolean APIENTRY gl_dispatch_stub_723(GLuint sampler);
void APIENTRY gl_dispatch_stub_724(GLuint sampler, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_725(GLuint sampler, GLenum pname, const GLuint *params);
void APIENTRY gl_dispatch_stub_726(GLuint sampler, GLenum pname, GLfloat param);
void APIENTRY gl_dispatch_stub_727(GLuint sampler, GLenum pname, const GLfloat *params);
void APIENTRY gl_dispatch_stub_728(GLuint sampler, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_729(GLuint sampler, GLenum pname, const GLint *params);
void APIENTRY gl_dispatch_stub_730(GLuint id, GLenum pname, GLint64 *params);
void APIENTRY gl_dispatch_stub_731(GLuint id, GLenum pname, GLuint64 *params);
void APIENTRY gl_dispatch_stub_732(GLuint id, GLenum target);
void APIENTRY gl_dispatch_stub_733(GLenum type, GLuint color);
void APIENTRY gl_dispatch_stub_734(GLenum type, const GLuint *color);
void APIENTRY gl_dispatch_stub_735(GLenum type, GLuint color);
void APIENTRY gl_dispatch_stub_736(GLenum type, const GLuint *color);
void APIENTRY gl_dispatch_stub_737(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_738(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_739(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_740(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_741(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_742(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_743(GLenum texture, GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_744(GLenum texture, GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_745(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_746(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_747(GLenum type, GLuint color);
void APIENTRY gl_dispatch_stub_748(GLenum type, const GLuint *color);
void APIENTRY gl_dispatch_stub_749(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_750(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_751(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_752(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_753(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_754(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_755(GLenum type, GLuint coords);
void APIENTRY gl_dispatch_stub_756(GLenum type, const GLuint *coords);
void APIENTRY gl_dispatch_stub_757(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_758(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_759(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_760(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_761(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_762(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_763(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void APIENTRY gl_dispatch_stub_764(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void APIENTRY gl_dispatch_stub_765(GLenum type, GLuint value);
void APIENTRY gl_dispatch_stub_766(GLenum type, const GLuint *value);
void APIENTRY gl_dispatch_stub_767(GLenum type, GLuint value);
void APIENTRY gl_dispatch_stub_768(GLenum type, const GLuint *value);
void APIENTRY gl_dispatch_stub_769(GLenum type, GLuint value);
void APIENTRY gl_dispatch_stub_770(GLenum type, const GLuint *value);
void APIENTRY gl_dispatch_stub_771(GLenum target, GLuint id);
void APIENTRY gl_dispatch_stub_772(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_773(GLenum mode, GLuint id);
void APIENTRY gl_dispatch_stub_774(GLsizei n, GLuint *ids);
GLboolean APIENTRY gl_dispatch_stub_775(GLuint id);
void APIENTRY gl_dispatch_stub_776(void);
void APIENTRY gl_dispatch_stub_777(void);
void APIENTRY gl_dispatch_stub_778(GLenum target, GLuint index, GLuint id);
void APIENTRY gl_dispatch_stub_779(GLenum mode, GLuint id, GLuint stream);
void APIENTRY gl_dispatch_stub_780(GLenum target, GLuint index);
void APIENTRY gl_dispatch_stub_781(GLenum target, GLuint index, GLenum pname, GLint *params);
a800 1
GLAPI void APIENTRY glClearDepthfOES(GLclampf depth);
d802 89
a890 61
GLAPI void APIENTRY glDepthRangefOES(GLclampf zNear, GLclampf zFar);
void APIENTRY gl_dispatch_stub_784(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
void APIENTRY gl_dispatch_stub_785(void);
void APIENTRY gl_dispatch_stub_786(GLsizei n, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);
void APIENTRY gl_dispatch_stub_787(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);
void APIENTRY gl_dispatch_stub_788(GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);
void APIENTRY gl_dispatch_stub_789(GLuint program, GLenum pname, GLint value);
void APIENTRY gl_dispatch_stub_790(GLDEBUGPROCARB callback, const GLvoid *userParam);
void APIENTRY gl_dispatch_stub_791(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void APIENTRY gl_dispatch_stub_792(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLcharARB *buf);
GLuint APIENTRY gl_dispatch_stub_793(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLcharARB *messageLog);
GLenum APIENTRY gl_dispatch_stub_794(void);
void APIENTRY gl_dispatch_stub_795(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);
void APIENTRY gl_dispatch_stub_796(GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);
void APIENTRY gl_dispatch_stub_797(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);
void APIENTRY gl_dispatch_stub_798(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
void APIENTRY gl_dispatch_stub_799(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
void APIENTRY gl_dispatch_stub_800(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
void APIENTRY gl_dispatch_stub_801(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
void APIENTRY gl_dispatch_stub_802(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);
void APIENTRY gl_dispatch_stub_803(GLenum map, GLsizei bufSize, GLfloat *values);
void APIENTRY gl_dispatch_stub_804(GLenum map, GLsizei bufSize, GLuint *values);
void APIENTRY gl_dispatch_stub_805(GLenum map, GLsizei bufSize, GLushort *values);
void APIENTRY gl_dispatch_stub_806(GLsizei bufSize, GLubyte *pattern);
void APIENTRY gl_dispatch_stub_807(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);
void APIENTRY gl_dispatch_stub_808(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);
void APIENTRY gl_dispatch_stub_809(GLhandleARB program, GLint location, GLsizei bufSize, GLdouble *params);
void APIENTRY gl_dispatch_stub_810(GLhandleARB program, GLint location, GLsizei bufSize, GLfloat *params);
void APIENTRY gl_dispatch_stub_811(GLhandleARB program, GLint location, GLsizei bufSize, GLint *params);
void APIENTRY gl_dispatch_stub_812(GLhandleARB program, GLint location, GLsizei bufSize, GLuint *params);
void APIENTRY gl_dispatch_stub_813(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);
void APIENTRY gl_dispatch_stub_814(GLenum mode, GLint first, GLsizei count, GLsizei primcount, GLuint baseinstance);
void APIENTRY gl_dispatch_stub_815(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLuint baseinstance);
void APIENTRY gl_dispatch_stub_816(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex, GLuint baseinstance);
void APIENTRY gl_dispatch_stub_817(GLenum mode, GLuint id, GLsizei primcount);
void APIENTRY gl_dispatch_stub_818(GLenum mode, GLuint id, GLuint stream, GLsizei primcount);
void APIENTRY gl_dispatch_stub_819(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
void APIENTRY gl_dispatch_stub_820(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width);
void APIENTRY gl_dispatch_stub_821(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_822(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_823(GLuint texture, GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width);
void APIENTRY gl_dispatch_stub_824(GLuint texture, GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_825(GLuint texture, GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_826(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_827(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_828(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void APIENTRY gl_dispatch_stub_829(GLuint buffer);
void APIENTRY gl_dispatch_stub_830(GLuint buffer, GLintptr offset, GLsizeiptr length);
void APIENTRY gl_dispatch_stub_831(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_832(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void APIENTRY gl_dispatch_stub_833(GLuint texture, GLint level);
void APIENTRY gl_dispatch_stub_834(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
void APIENTRY gl_dispatch_stub_835(GLfloat factor, GLfloat bias);
GLAPI void APIENTRY glDrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
GLAPI void APIENTRY glDrawTexfvOES(const GLfloat *coords);
GLAPI void APIENTRY glDrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height);
GLAPI void APIENTRY glDrawTexivOES(const GLint *coords);
GLAPI void APIENTRY glDrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
GLAPI void APIENTRY glDrawTexsvOES(const GLshort *coords);
GLAPI void APIENTRY glDrawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
GLAPI void APIENTRY glDrawTexxvOES(const GLfixed *coords);
d892 67
a958 14
GLAPI GLbitfield APIENTRY glQueryMatrixxOES(GLfixed *mantissa, GLint *exponent);
void APIENTRY gl_dispatch_stub_846(GLclampf value, GLboolean invert);
void APIENTRY gl_dispatch_stub_847(GLenum pattern);
void APIENTRY gl_dispatch_stub_848(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_849(GLsizei stride, GLsizei count, const GLboolean *pointer);
void APIENTRY gl_dispatch_stub_850(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_851(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_852(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_853(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);
GLAPI void APIENTRY glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void APIENTRY gl_dispatch_stub_855(GLint first, GLsizei count);
void APIENTRY gl_dispatch_stub_856(void);
void APIENTRY gl_dispatch_stub_857(GLfloat red, GLfloat green, GLfloat blue);
void APIENTRY gl_dispatch_stub_858(const GLfloat *v);
d960 162
a1121 131
void APIENTRY gl_dispatch_stub_860(GLfloat coord);
void APIENTRY gl_dispatch_stub_861(const GLfloat *coord);
void APIENTRY gl_dispatch_stub_862(void);
void APIENTRY gl_dispatch_stub_863(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_864(const GLdouble *v);
void APIENTRY gl_dispatch_stub_865(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_866(const GLfloat *v);
void APIENTRY gl_dispatch_stub_867(GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_868(const GLint *v);
void APIENTRY gl_dispatch_stub_869(GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_870(const GLshort *v);
void APIENTRY gl_dispatch_stub_871(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
void APIENTRY gl_dispatch_stub_872(const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, GLint modestride);
GLboolean APIENTRY gl_dispatch_stub_873(GLsizei n, const GLuint *ids, GLboolean *residences);
void APIENTRY gl_dispatch_stub_874(GLenum target, GLuint id, const GLfloat *params);
void APIENTRY gl_dispatch_stub_875(GLenum target, GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_876(GLenum target, GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_877(GLuint id, GLenum pname, GLubyte *program);
void APIENTRY gl_dispatch_stub_878(GLuint id, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_879(GLenum target, GLuint address, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_880(GLuint index, GLenum pname, GLdouble *params);
void APIENTRY gl_dispatch_stub_881(GLuint index, GLenum pname, GLfloat *params);
void APIENTRY gl_dispatch_stub_882(GLuint index, GLenum pname, GLint *params);
void APIENTRY gl_dispatch_stub_883(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
void APIENTRY gl_dispatch_stub_884(GLenum target, GLuint index, GLsizei num, const GLdouble *params);
void APIENTRY gl_dispatch_stub_885(GLenum target, GLuint index, GLsizei num, const GLfloat *params);
void APIENTRY gl_dispatch_stub_886(GLsizei n, const GLuint *ids);
void APIENTRY gl_dispatch_stub_887(GLenum target, GLuint address, GLenum matrix, GLenum transform);
void APIENTRY gl_dispatch_stub_888(GLuint index, GLdouble x);
void APIENTRY gl_dispatch_stub_889(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_890(GLuint index, GLfloat x);
void APIENTRY gl_dispatch_stub_891(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_892(GLuint index, GLshort x);
void APIENTRY gl_dispatch_stub_893(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_894(GLuint index, GLdouble x, GLdouble y);
void APIENTRY gl_dispatch_stub_895(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_896(GLuint index, GLfloat x, GLfloat y);
void APIENTRY gl_dispatch_stub_897(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_898(GLuint index, GLshort x, GLshort y);
void APIENTRY gl_dispatch_stub_899(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_900(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void APIENTRY gl_dispatch_stub_901(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_902(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void APIENTRY gl_dispatch_stub_903(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_904(GLuint index, GLshort x, GLshort y, GLshort z);
void APIENTRY gl_dispatch_stub_905(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_906(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_907(GLuint index, const GLdouble *v);
void APIENTRY gl_dispatch_stub_908(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_909(GLuint index, const GLfloat *v);
void APIENTRY gl_dispatch_stub_910(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void APIENTRY gl_dispatch_stub_911(GLuint index, const GLshort *v);
void APIENTRY gl_dispatch_stub_912(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void APIENTRY gl_dispatch_stub_913(GLuint index, const GLubyte *v);
void APIENTRY gl_dispatch_stub_914(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
void APIENTRY gl_dispatch_stub_915(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_916(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_917(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_918(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_919(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_920(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_921(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_922(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_923(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_924(GLuint index, GLsizei n, const GLdouble *v);
void APIENTRY gl_dispatch_stub_925(GLuint index, GLsizei n, const GLfloat *v);
void APIENTRY gl_dispatch_stub_926(GLuint index, GLsizei n, const GLshort *v);
void APIENTRY gl_dispatch_stub_927(GLuint index, GLsizei n, const GLubyte *v);
void APIENTRY gl_dispatch_stub_928(GLenum pname, GLfloat *param);
void APIENTRY gl_dispatch_stub_929(GLenum pname, GLint *param);
void APIENTRY gl_dispatch_stub_930(GLenum pname, const GLfloat *param);
void APIENTRY gl_dispatch_stub_931(GLenum pname, const GLint *param);
void APIENTRY gl_dispatch_stub_932(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_933(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_934(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void APIENTRY gl_dispatch_stub_935(void);
void APIENTRY gl_dispatch_stub_936(GLuint id);
void APIENTRY gl_dispatch_stub_937(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void APIENTRY gl_dispatch_stub_938(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void APIENTRY gl_dispatch_stub_939(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void APIENTRY gl_dispatch_stub_940(GLuint id);
void APIENTRY gl_dispatch_stub_941(void);
GLuint APIENTRY gl_dispatch_stub_942(GLuint range);
void APIENTRY gl_dispatch_stub_943(GLuint dst, GLuint coord, GLenum swizzle);
void APIENTRY gl_dispatch_stub_944(GLuint dst, GLuint interp, GLenum swizzle);
void APIENTRY gl_dispatch_stub_945(GLuint dst, const GLfloat *value);
void APIENTRY gl_dispatch_stub_946(GLenum face);
void APIENTRY gl_dispatch_stub_947(GLuint array);
void APIENTRY gl_dispatch_stub_948(GLsizei n, GLuint *arrays);
void APIENTRY gl_dispatch_stub_949(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
void APIENTRY gl_dispatch_stub_950(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
void APIENTRY gl_dispatch_stub_951(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void APIENTRY gl_dispatch_stub_952(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
void APIENTRY gl_dispatch_stub_953(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void APIENTRY gl_dispatch_stub_954(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
void APIENTRY gl_dispatch_stub_955(void);
GLAPI void APIENTRY glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed *params);
GLAPI void APIENTRY glTexGenxOES(GLenum coord, GLenum pname, GLint param);
GLAPI void APIENTRY glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed *params);
void APIENTRY gl_dispatch_stub_959(GLclampd zmin, GLclampd zmax);
void APIENTRY gl_dispatch_stub_960(GLenum target, GLuint framebuffer);
void APIENTRY gl_dispatch_stub_961(GLenum target, GLuint renderbuffer);
void APIENTRY gl_dispatch_stub_962(GLenum target, GLenum pname, GLint param);
void APIENTRY gl_dispatch_stub_963(GLenum target, GLintptr offset, GLsizeiptr size);
void APIENTRY gl_dispatch_stub_964(GLuint index, GLint x);
void APIENTRY gl_dispatch_stub_965(GLuint index, GLuint x);
void APIENTRY gl_dispatch_stub_966(GLuint index, GLint x, GLint y);
void APIENTRY gl_dispatch_stub_967(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_968(GLuint index, GLuint x, GLuint y);
void APIENTRY gl_dispatch_stub_969(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_970(GLuint index, GLint x, GLint y, GLint z);
void APIENTRY gl_dispatch_stub_971(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_972(GLuint index, GLuint x, GLuint y, GLuint z);
void APIENTRY gl_dispatch_stub_973(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_974(GLuint index, GLint x, GLint y, GLint z, GLint w);
void APIENTRY gl_dispatch_stub_975(GLuint index, const GLint *v);
void APIENTRY gl_dispatch_stub_976(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void APIENTRY gl_dispatch_stub_977(GLuint index, const GLuint *v);
void APIENTRY gl_dispatch_stub_978(GLint r, GLint g, GLint b, GLint a);
void APIENTRY gl_dispatch_stub_979(GLuint r, GLuint g, GLuint b, GLuint a);
void APIENTRY gl_dispatch_stub_980(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void APIENTRY gl_dispatch_stub_981(GLenum objectType, GLuint name, GLenum pname, GLint *value);
GLenum APIENTRY gl_dispatch_stub_982(GLenum objectType, GLuint name, GLenum option);
GLenum APIENTRY gl_dispatch_stub_983(GLenum objectType, GLuint name, GLenum option);
void APIENTRY gl_dispatch_stub_984(GLuint program);
GLuint APIENTRY gl_dispatch_stub_985(GLenum type, const GLchar *string);
void APIENTRY gl_dispatch_stub_986(GLenum type, GLuint program);
void APIENTRY gl_dispatch_stub_987(void);
void APIENTRY gl_dispatch_stub_988(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
void APIENTRY gl_dispatch_stub_989(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void APIENTRY gl_dispatch_stub_990(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
a1124 1
GLAPI void APIENTRY glAlphaFuncxOES(GLenum func, GLclampx ref);
a1125 1
GLAPI void APIENTRY glClearColorxOES(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);
a1126 1
GLAPI void APIENTRY glClearDepthxOES(GLclampx depth);
a1127 1
GLAPI void APIENTRY glColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
a1128 1
GLAPI void APIENTRY glDepthRangexOES(GLclampx zNear, GLclampx zFar);
a1129 1
GLAPI void APIENTRY glFogxOES(GLenum pname, GLfixed param);
a1130 1
GLAPI void APIENTRY glFogxvOES(GLenum pname, const GLfixed *params);
a1131 1
GLAPI void APIENTRY glFrustumfOES(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
a1132 1
GLAPI void APIENTRY glFrustumxOES(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
a1133 1
GLAPI void APIENTRY glLightModelxOES(GLenum pname, GLfixed param);
a1134 1
GLAPI void APIENTRY glLightModelxvOES(GLenum pname, const GLfixed *params);
a1135 1
GLAPI void APIENTRY glLightxOES(GLenum light, GLenum pname, GLfixed param);
a1136 1
GLAPI void APIENTRY glLightxvOES(GLenum light, GLenum pname, const GLfixed *params);
a1137 1
GLAPI void APIENTRY glLineWidthxOES(GLfixed width);
a1138 1
GLAPI void APIENTRY glLoadMatrixxOES(const GLfixed *m);
a1139 1
GLAPI void APIENTRY glMaterialxOES(GLenum face, GLenum pname, GLfixed param);
a1140 1
GLAPI void APIENTRY glMaterialxvOES(GLenum face, GLenum pname, const GLfixed *params);
a1141 1
GLAPI void APIENTRY glMultMatrixxOES(const GLfixed *m);
a1142 1
GLAPI void APIENTRY glMultiTexCoord4xOES(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
a1143 1
GLAPI void APIENTRY glNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz);
a1144 1
GLAPI void APIENTRY glOrthofOES(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
a1145 1
GLAPI void APIENTRY glOrthoxOES(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
a1146 1
GLAPI void APIENTRY glPointSizexOES(GLfixed size);
a1147 1
GLAPI void APIENTRY glPolygonOffsetxOES(GLfixed factor, GLfixed units);
a1148 1
GLAPI void APIENTRY glRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
a1149 1
GLAPI void APIENTRY glSampleCoveragexOES(GLclampx value, GLboolean invert);
a1150 1
GLAPI void APIENTRY glScalexOES(GLfixed x, GLfixed y, GLfixed z);
a1151 1
GLAPI void APIENTRY glTexEnvxOES(GLenum target, GLenum pname, GLfixed param);
a1152 1
GLAPI void APIENTRY glTexEnvxvOES(GLenum target, GLenum pname, const GLfixed *params);
a1153 1
GLAPI void APIENTRY glTexParameterxOES(GLenum target, GLenum pname, GLfixed param);
a1154 1
GLAPI void APIENTRY glTranslatexOES(GLfixed x, GLfixed y, GLfixed z);
a1155 1
GLAPI void APIENTRY glClipPlanefOES(GLenum plane, const GLfloat *equation);
a1156 1
GLAPI void APIENTRY glClipPlanexOES(GLenum plane, const GLfixed *equation);
a1157 1
GLAPI void APIENTRY glGetClipPlanefOES(GLenum plane, GLfloat *equation);
a1158 1
GLAPI void APIENTRY glGetClipPlanexOES(GLenum plane, GLfixed *equation);
a1159 1
GLAPI void APIENTRY glGetFixedvOES(GLenum pname, GLfixed *params);
a1160 1
GLAPI void APIENTRY glGetLightxvOES(GLenum light, GLenum pname, GLfixed *params);
a1161 1
GLAPI void APIENTRY glGetMaterialxvOES(GLenum face, GLenum pname, GLfixed *params);
a1162 1
GLAPI void APIENTRY glGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed *params);
a1163 1
GLAPI void APIENTRY glGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
a1164 1
GLAPI void APIENTRY glPointParameterxOES(GLenum pname, GLfixed param);
a1165 1
GLAPI void APIENTRY glPointParameterxvOES(GLenum pname, const GLfixed *params);
a1166 1
GLAPI void APIENTRY glTexParameterxvOES(GLenum target, GLenum pname, const GLfixed *params);
a1359 28
GLAPI void APIENTRY glTexGenfOES(GLenum coord, GLenum pname, GLfloat param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[190];
   ((void (APIENTRY *)(GLenum coord, GLenum pname, GLfloat param)) _func)(coord, pname, param);
}

GLAPI void APIENTRY glTexGenfvOES(GLenum coord, GLenum pname, const GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[191];
   ((void (APIENTRY *)(GLenum coord, GLenum pname, const GLfloat *params)) _func)(coord, pname, params);
}

GLAPI void APIENTRY glTexGeniOES(GLenum coord, GLenum pname, GLint param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[192];
   ((void (APIENTRY *)(GLenum coord, GLenum pname, GLint param)) _func)(coord, pname, param);
}

GLAPI void APIENTRY glTexGenivOES(GLenum coord, GLenum pname, const GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[193];
   ((void (APIENTRY *)(GLenum coord, GLenum pname, const GLint *params)) _func)(coord, pname, params);
}

a1548 14
GLAPI void APIENTRY glGetTexGenfvOES(GLenum coord, GLenum pname, GLfloat *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[279];
   ((void (APIENTRY *)(GLenum coord, GLenum pname, GLfloat *params)) _func)(coord, pname, params);
}

GLAPI void APIENTRY glGetTexGenivOES(GLenum coord, GLenum pname, GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[280];
   ((void (APIENTRY *)(GLenum coord, GLenum pname, GLint *params)) _func)(coord, pname, params);
}

a1758 7
GLAPI void APIENTRY glBlendEquationOES(GLenum mode)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[337];
   ((void (APIENTRY *)(GLenum mode)) _func)(mode);
}

a1800 7
GLAPI void APIENTRY glBlendFuncSeparateOES(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[420];
   ((void (APIENTRY *)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)) _func)(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
}

a1863 7
GLAPI void APIENTRY glGetBufferPointervOES(GLenum target, GLenum pname, GLvoid **params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[470];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLvoid **params)) _func)(target, pname, params);
}

a1870 140
GLAPI GLvoid * APIENTRY glMapBufferOES(GLenum target, GLenum access)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[477];
   return ((GLvoid * (APIENTRY *)(GLenum target, GLenum access)) _func)(target, access);
}

GLAPI GLboolean APIENTRY glUnmapBufferOES(GLenum target)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[478];
   return ((GLboolean (APIENTRY *)(GLenum target)) _func)(target);
}

GLAPI void APIENTRY glBlendEquationSeparateOES(GLenum modeRGB, GLenum modeA)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[481];
   ((void (APIENTRY *)(GLenum modeRGB, GLenum modeA)) _func)(modeRGB, modeA);
}

GLAPI void APIENTRY glBindFramebufferOES(GLenum target, GLuint framebuffer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[659];
   ((void (APIENTRY *)(GLenum target, GLuint framebuffer)) _func)(target, framebuffer);
}

GLAPI void APIENTRY glBindRenderbufferOES(GLenum target, GLuint renderbuffer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[660];
   ((void (APIENTRY *)(GLenum target, GLuint renderbuffer)) _func)(target, renderbuffer);
}

GLAPI GLenum APIENTRY glCheckFramebufferStatusOES(GLenum target)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[662];
   return ((GLenum (APIENTRY *)(GLenum target)) _func)(target);
}

GLAPI void APIENTRY glDeleteFramebuffersOES(GLsizei n, const GLuint *framebuffers)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[663];
   ((void (APIENTRY *)(GLsizei n, const GLuint *framebuffers)) _func)(n, framebuffers);
}

GLAPI void APIENTRY glDeleteRenderbuffersOES(GLsizei n, const GLuint *renderbuffers)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[664];
   ((void (APIENTRY *)(GLsizei n, const GLuint *renderbuffers)) _func)(n, renderbuffers);
}

GLAPI void APIENTRY glFramebufferRenderbufferOES(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[665];
   ((void (APIENTRY *)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)) _func)(target, attachment, renderbuffertarget, renderbuffer);
}

GLAPI void APIENTRY glFramebufferTexture2DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[667];
   ((void (APIENTRY *)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)) _func)(target, attachment, textarget, texture, level);
}

GLAPI void APIENTRY glGenFramebuffersOES(GLsizei n, GLuint *framebuffers)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[670];
   ((void (APIENTRY *)(GLsizei n, GLuint *framebuffers)) _func)(n, framebuffers);
}

GLAPI void APIENTRY glGenRenderbuffersOES(GLsizei n, GLuint *renderbuffers)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[671];
   ((void (APIENTRY *)(GLsizei n, GLuint *renderbuffers)) _func)(n, renderbuffers);
}

GLAPI void APIENTRY glGenerateMipmapOES(GLenum target)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[672];
   ((void (APIENTRY *)(GLenum target)) _func)(target);
}

GLAPI void APIENTRY glGetFramebufferAttachmentParameterivOES(GLenum target, GLenum attachment, GLenum pname, GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[673];
   ((void (APIENTRY *)(GLenum target, GLenum attachment, GLenum pname, GLint *params)) _func)(target, attachment, pname, params);
}

GLAPI void APIENTRY glGetRenderbufferParameterivOES(GLenum target, GLenum pname, GLint *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[674];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLint *params)) _func)(target, pname, params);
}

GLAPI GLboolean APIENTRY glIsFramebufferOES(GLuint framebuffer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[675];
   return ((GLboolean (APIENTRY *)(GLuint framebuffer)) _func)(framebuffer);
}

GLAPI GLboolean APIENTRY glIsRenderbufferOES(GLuint renderbuffer)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[676];
   return ((GLboolean (APIENTRY *)(GLuint renderbuffer)) _func)(renderbuffer);
}

GLAPI void APIENTRY glRenderbufferStorageOES(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[677];
   ((void (APIENTRY *)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)) _func)(target, internalformat, width, height);
}

GLAPI void APIENTRY glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[680];
   ((void (APIENTRY *)(GLenum target, GLintptr offset, GLsizeiptr length)) _func)(target, offset, length);
}

GLAPI GLvoid * APIENTRY glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr size, GLbitfield length)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[681];
   return ((GLvoid * (APIENTRY *)(GLenum target, GLintptr offset, GLsizeiptr size, GLbitfield length)) _func)(target, offset, size, length);
}

d1874 1
a1874 8
   mapi_func _func = ((const mapi_func *) _tbl)[782];
   ((void (APIENTRY *)(GLclampf depth)) _func)(depth);
}

GLAPI void APIENTRY glClearDepthfOES(GLclampf depth)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[782];
d1881 1
a1881 8
   mapi_func _func = ((const mapi_func *) _tbl)[783];
   ((void (APIENTRY *)(GLclampf zNear, GLclampf zFar)) _func)(zNear, zFar);
}

GLAPI void APIENTRY glDepthRangefOES(GLclampf zNear, GLclampf zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[783];
a1884 56
GLAPI void APIENTRY glDrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[836];
   ((void (APIENTRY *)(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height)) _func)(x, y, z, width, height);
}

GLAPI void APIENTRY glDrawTexfvOES(const GLfloat *coords)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[837];
   ((void (APIENTRY *)(const GLfloat *coords)) _func)(coords);
}

GLAPI void APIENTRY glDrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[838];
   ((void (APIENTRY *)(GLint x, GLint y, GLint z, GLint width, GLint height)) _func)(x, y, z, width, height);
}

GLAPI void APIENTRY glDrawTexivOES(const GLint *coords)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[839];
   ((void (APIENTRY *)(const GLint *coords)) _func)(coords);
}

GLAPI void APIENTRY glDrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[840];
   ((void (APIENTRY *)(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height)) _func)(x, y, z, width, height);
}

GLAPI void APIENTRY glDrawTexsvOES(const GLshort *coords)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[841];
   ((void (APIENTRY *)(const GLshort *coords)) _func)(coords);
}

GLAPI void APIENTRY glDrawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[842];
   ((void (APIENTRY *)(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height)) _func)(x, y, z, width, height);
}

GLAPI void APIENTRY glDrawTexxvOES(const GLfixed *coords)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[843];
   ((void (APIENTRY *)(const GLfixed *coords)) _func)(coords);
}

d1888 1
a1888 1
   mapi_func _func = ((const mapi_func *) _tbl)[844];
a1891 14
GLAPI GLbitfield APIENTRY glQueryMatrixxOES(GLfixed *mantissa, GLint *exponent)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[845];
   return ((GLbitfield (APIENTRY *)(GLfixed *mantissa, GLint *exponent)) _func)(mantissa, exponent);
}

GLAPI void APIENTRY glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum *attachments)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[854];
   ((void (APIENTRY *)(GLenum target, GLsizei numAttachments, const GLenum *attachments)) _func)(target, numAttachments, attachments);
}

d1895 1
a1895 1
   mapi_func _func = ((const mapi_func *) _tbl)[859];
a1898 21
GLAPI void APIENTRY glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[956];
   ((void (APIENTRY *)(GLenum coord, GLenum pname, GLfixed *params)) _func)(coord, pname, params);
}

GLAPI void APIENTRY glTexGenxOES(GLenum coord, GLenum pname, GLint param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[957];
   ((void (APIENTRY *)(GLenum coord, GLenum pname, GLint param)) _func)(coord, pname, param);
}

GLAPI void APIENTRY glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[958];
   ((void (APIENTRY *)(GLenum coord, GLenum pname, const GLfixed *params)) _func)(coord, pname, params);
}

d1902 1
a1902 1
   mapi_func _func = ((const mapi_func *) _tbl)[991];
d1909 1
a1909 1
   mapi_func _func = ((const mapi_func *) _tbl)[992];
d1916 1
a1916 8
   mapi_func _func = ((const mapi_func *) _tbl)[993];
   ((void (APIENTRY *)(GLenum func, GLclampx ref)) _func)(func, ref);
}

GLAPI void APIENTRY glAlphaFuncxOES(GLenum func, GLclampx ref)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[993];
d1923 1
a1923 8
   mapi_func _func = ((const mapi_func *) _tbl)[994];
   ((void (APIENTRY *)(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glClearColorxOES(GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[994];
d1930 1
a1930 8
   mapi_func _func = ((const mapi_func *) _tbl)[995];
   ((void (APIENTRY *)(GLclampx depth)) _func)(depth);
}

GLAPI void APIENTRY glClearDepthxOES(GLclampx depth)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[995];
d1937 1
a1937 8
   mapi_func _func = ((const mapi_func *) _tbl)[996];
   ((void (APIENTRY *)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)) _func)(red, green, blue, alpha);
}

GLAPI void APIENTRY glColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[996];
d1944 1
a1944 8
   mapi_func _func = ((const mapi_func *) _tbl)[997];
   ((void (APIENTRY *)(GLclampx zNear, GLclampx zFar)) _func)(zNear, zFar);
}

GLAPI void APIENTRY glDepthRangexOES(GLclampx zNear, GLclampx zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[997];
d1951 1
a1951 8
   mapi_func _func = ((const mapi_func *) _tbl)[998];
   ((void (APIENTRY *)(GLenum pname, GLfixed param)) _func)(pname, param);
}

GLAPI void APIENTRY glFogxOES(GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[998];
d1958 1
a1958 8
   mapi_func _func = ((const mapi_func *) _tbl)[999];
   ((void (APIENTRY *)(GLenum pname, const GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glFogxvOES(GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[999];
d1965 1
a1965 8
   mapi_func _func = ((const mapi_func *) _tbl)[1000];
   ((void (APIENTRY *)(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glFrustumfOES(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1000];
d1972 1
a1972 8
   mapi_func _func = ((const mapi_func *) _tbl)[1001];
   ((void (APIENTRY *)(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glFrustumxOES(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1001];
d1979 1
a1979 8
   mapi_func _func = ((const mapi_func *) _tbl)[1002];
   ((void (APIENTRY *)(GLenum pname, GLfixed param)) _func)(pname, param);
}

GLAPI void APIENTRY glLightModelxOES(GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1002];
d1986 1
a1986 8
   mapi_func _func = ((const mapi_func *) _tbl)[1003];
   ((void (APIENTRY *)(GLenum pname, const GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glLightModelxvOES(GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1003];
d1993 1
a1993 8
   mapi_func _func = ((const mapi_func *) _tbl)[1004];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfixed param)) _func)(light, pname, param);
}

GLAPI void APIENTRY glLightxOES(GLenum light, GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1004];
d2000 1
a2000 8
   mapi_func _func = ((const mapi_func *) _tbl)[1005];
   ((void (APIENTRY *)(GLenum light, GLenum pname, const GLfixed *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glLightxvOES(GLenum light, GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1005];
d2007 1
a2007 8
   mapi_func _func = ((const mapi_func *) _tbl)[1006];
   ((void (APIENTRY *)(GLfixed width)) _func)(width);
}

GLAPI void APIENTRY glLineWidthxOES(GLfixed width)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1006];
d2014 1
a2014 8
   mapi_func _func = ((const mapi_func *) _tbl)[1007];
   ((void (APIENTRY *)(const GLfixed *m)) _func)(m);
}

GLAPI void APIENTRY glLoadMatrixxOES(const GLfixed *m)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1007];
d2021 1
a2021 8
   mapi_func _func = ((const mapi_func *) _tbl)[1008];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfixed param)) _func)(face, pname, param);
}

GLAPI void APIENTRY glMaterialxOES(GLenum face, GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1008];
d2028 1
a2028 8
   mapi_func _func = ((const mapi_func *) _tbl)[1009];
   ((void (APIENTRY *)(GLenum face, GLenum pname, const GLfixed *params)) _func)(face, pname, params);
}

GLAPI void APIENTRY glMaterialxvOES(GLenum face, GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1009];
d2035 1
a2035 8
   mapi_func _func = ((const mapi_func *) _tbl)[1010];
   ((void (APIENTRY *)(const GLfixed *m)) _func)(m);
}

GLAPI void APIENTRY glMultMatrixxOES(const GLfixed *m)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1010];
d2042 1
a2042 8
   mapi_func _func = ((const mapi_func *) _tbl)[1011];
   ((void (APIENTRY *)(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q)) _func)(target, s, t, r, q);
}

GLAPI void APIENTRY glMultiTexCoord4xOES(GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1011];
d2049 1
a2049 8
   mapi_func _func = ((const mapi_func *) _tbl)[1012];
   ((void (APIENTRY *)(GLfixed nx, GLfixed ny, GLfixed nz)) _func)(nx, ny, nz);
}

GLAPI void APIENTRY glNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1012];
d2056 1
a2056 8
   mapi_func _func = ((const mapi_func *) _tbl)[1013];
   ((void (APIENTRY *)(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glOrthofOES(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1013];
d2063 1
a2063 8
   mapi_func _func = ((const mapi_func *) _tbl)[1014];
   ((void (APIENTRY *)(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)) _func)(left, right, bottom, top, zNear, zFar);
}

GLAPI void APIENTRY glOrthoxOES(GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1014];
d2070 1
a2070 8
   mapi_func _func = ((const mapi_func *) _tbl)[1015];
   ((void (APIENTRY *)(GLfixed size)) _func)(size);
}

GLAPI void APIENTRY glPointSizexOES(GLfixed size)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1015];
d2077 1
a2077 8
   mapi_func _func = ((const mapi_func *) _tbl)[1016];
   ((void (APIENTRY *)(GLfixed factor, GLfixed units)) _func)(factor, units);
}

GLAPI void APIENTRY glPolygonOffsetxOES(GLfixed factor, GLfixed units)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1016];
d2084 1
a2084 8
   mapi_func _func = ((const mapi_func *) _tbl)[1017];
   ((void (APIENTRY *)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z)) _func)(angle, x, y, z);
}

GLAPI void APIENTRY glRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1017];
d2091 1
a2091 8
   mapi_func _func = ((const mapi_func *) _tbl)[1018];
   ((void (APIENTRY *)(GLclampx value, GLboolean invert)) _func)(value, invert);
}

GLAPI void APIENTRY glSampleCoveragexOES(GLclampx value, GLboolean invert)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1018];
d2098 1
a2098 8
   mapi_func _func = ((const mapi_func *) _tbl)[1019];
   ((void (APIENTRY *)(GLfixed x, GLfixed y, GLfixed z)) _func)(x, y, z);
}

GLAPI void APIENTRY glScalexOES(GLfixed x, GLfixed y, GLfixed z)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1019];
d2105 1
a2105 8
   mapi_func _func = ((const mapi_func *) _tbl)[1020];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexEnvxOES(GLenum target, GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1020];
d2112 1
a2112 8
   mapi_func _func = ((const mapi_func *) _tbl)[1021];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexEnvxvOES(GLenum target, GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1021];
d2119 1
a2119 8
   mapi_func _func = ((const mapi_func *) _tbl)[1022];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed param)) _func)(target, pname, param);
}

GLAPI void APIENTRY glTexParameterxOES(GLenum target, GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1022];
d2126 1
a2126 8
   mapi_func _func = ((const mapi_func *) _tbl)[1023];
   ((void (APIENTRY *)(GLfixed x, GLfixed y, GLfixed z)) _func)(x, y, z);
}

GLAPI void APIENTRY glTranslatexOES(GLfixed x, GLfixed y, GLfixed z)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1023];
d2133 1
a2133 8
   mapi_func _func = ((const mapi_func *) _tbl)[1024];
   ((void (APIENTRY *)(GLenum plane, const GLfloat *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glClipPlanefOES(GLenum plane, const GLfloat *equation)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1024];
d2140 1
a2140 8
   mapi_func _func = ((const mapi_func *) _tbl)[1025];
   ((void (APIENTRY *)(GLenum plane, const GLfixed *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glClipPlanexOES(GLenum plane, const GLfixed *equation)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1025];
d2147 1
a2147 8
   mapi_func _func = ((const mapi_func *) _tbl)[1026];
   ((void (APIENTRY *)(GLenum plane, GLfloat *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glGetClipPlanefOES(GLenum plane, GLfloat *equation)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1026];
d2154 1
a2154 8
   mapi_func _func = ((const mapi_func *) _tbl)[1027];
   ((void (APIENTRY *)(GLenum plane, GLfixed *equation)) _func)(plane, equation);
}

GLAPI void APIENTRY glGetClipPlanexOES(GLenum plane, GLfixed *equation)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1027];
d2161 1
a2161 8
   mapi_func _func = ((const mapi_func *) _tbl)[1028];
   ((void (APIENTRY *)(GLenum pname, GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glGetFixedvOES(GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1028];
d2168 1
a2168 8
   mapi_func _func = ((const mapi_func *) _tbl)[1029];
   ((void (APIENTRY *)(GLenum light, GLenum pname, GLfixed *params)) _func)(light, pname, params);
}

GLAPI void APIENTRY glGetLightxvOES(GLenum light, GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1029];
d2175 1
a2175 8
   mapi_func _func = ((const mapi_func *) _tbl)[1030];
   ((void (APIENTRY *)(GLenum face, GLenum pname, GLfixed *params)) _func)(face, pname, params);
}

GLAPI void APIENTRY glGetMaterialxvOES(GLenum face, GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1030];
d2182 1
a2182 8
   mapi_func _func = ((const mapi_func *) _tbl)[1031];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1031];
d2189 1
a2189 8
   mapi_func _func = ((const mapi_func *) _tbl)[1032];
   ((void (APIENTRY *)(GLenum target, GLenum pname, GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1032];
d2196 1
a2196 8
   mapi_func _func = ((const mapi_func *) _tbl)[1033];
   ((void (APIENTRY *)(GLenum pname, GLfixed param)) _func)(pname, param);
}

GLAPI void APIENTRY glPointParameterxOES(GLenum pname, GLfixed param)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1033];
d2203 1
a2203 8
   mapi_func _func = ((const mapi_func *) _tbl)[1034];
   ((void (APIENTRY *)(GLenum pname, const GLfixed *params)) _func)(pname, params);
}

GLAPI void APIENTRY glPointParameterxvOES(GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1034];
d2210 1
a2210 8
   mapi_func _func = ((const mapi_func *) _tbl)[1035];
   ((void (APIENTRY *)(GLenum target, GLenum pname, const GLfixed *params)) _func)(target, pname, params);
}

GLAPI void APIENTRY glTexParameterxvOES(GLenum target, GLenum pname, const GLfixed *params)
{
   const struct mapi_table *_tbl = entry_current_get();
   mapi_func _func = ((const mapi_func *) _tbl)[1035];
a2300 12
STUB_ASM_ENTRY("glTexGenfOES")"\n"
"\t"STUB_ASM_CODE("190")"\n"

STUB_ASM_ENTRY("glTexGenfvOES")"\n"
"\t"STUB_ASM_CODE("191")"\n"

STUB_ASM_ENTRY("glTexGeniOES")"\n"
"\t"STUB_ASM_CODE("192")"\n"

STUB_ASM_ENTRY("glTexGenivOES")"\n"
"\t"STUB_ASM_CODE("193")"\n"

a2381 6
STUB_ASM_ENTRY("glGetTexGenfvOES")"\n"
"\t"STUB_ASM_CODE("279")"\n"

STUB_ASM_ENTRY("glGetTexGenivOES")"\n"
"\t"STUB_ASM_CODE("280")"\n"

a2471 3
STUB_ASM_ENTRY("glBlendEquationOES")"\n"
"\t"STUB_ASM_CODE("337")"\n"

a2489 3
STUB_ASM_ENTRY("glBlendFuncSeparateOES")"\n"
"\t"STUB_ASM_CODE("420")"\n"

a2516 3
STUB_ASM_ENTRY("glGetBufferPointervOES")"\n"
"\t"STUB_ASM_CODE("470")"\n"

a2519 60
STUB_ASM_ENTRY("glMapBufferOES")"\n"
"\t"STUB_ASM_CODE("477")"\n"

STUB_ASM_ENTRY("glUnmapBufferOES")"\n"
"\t"STUB_ASM_CODE("478")"\n"

STUB_ASM_ENTRY("glBlendEquationSeparateOES")"\n"
"\t"STUB_ASM_CODE("481")"\n"

STUB_ASM_ENTRY("glBindFramebufferOES")"\n"
"\t"STUB_ASM_CODE("659")"\n"

STUB_ASM_ENTRY("glBindRenderbufferOES")"\n"
"\t"STUB_ASM_CODE("660")"\n"

STUB_ASM_ENTRY("glCheckFramebufferStatusOES")"\n"
"\t"STUB_ASM_CODE("662")"\n"

STUB_ASM_ENTRY("glDeleteFramebuffersOES")"\n"
"\t"STUB_ASM_CODE("663")"\n"

STUB_ASM_ENTRY("glDeleteRenderbuffersOES")"\n"
"\t"STUB_ASM_CODE("664")"\n"

STUB_ASM_ENTRY("glFramebufferRenderbufferOES")"\n"
"\t"STUB_ASM_CODE("665")"\n"

STUB_ASM_ENTRY("glFramebufferTexture2DOES")"\n"
"\t"STUB_ASM_CODE("667")"\n"

STUB_ASM_ENTRY("glGenFramebuffersOES")"\n"
"\t"STUB_ASM_CODE("670")"\n"

STUB_ASM_ENTRY("glGenRenderbuffersOES")"\n"
"\t"STUB_ASM_CODE("671")"\n"

STUB_ASM_ENTRY("glGenerateMipmapOES")"\n"
"\t"STUB_ASM_CODE("672")"\n"

STUB_ASM_ENTRY("glGetFramebufferAttachmentParameterivOES")"\n"
"\t"STUB_ASM_CODE("673")"\n"

STUB_ASM_ENTRY("glGetRenderbufferParameterivOES")"\n"
"\t"STUB_ASM_CODE("674")"\n"

STUB_ASM_ENTRY("glIsFramebufferOES")"\n"
"\t"STUB_ASM_CODE("675")"\n"

STUB_ASM_ENTRY("glIsRenderbufferOES")"\n"
"\t"STUB_ASM_CODE("676")"\n"

STUB_ASM_ENTRY("glRenderbufferStorageOES")"\n"
"\t"STUB_ASM_CODE("677")"\n"

STUB_ASM_ENTRY("glFlushMappedBufferRangeEXT")"\n"
"\t"STUB_ASM_CODE("680")"\n"

STUB_ASM_ENTRY("glMapBufferRangeEXT")"\n"
"\t"STUB_ASM_CODE("681")"\n"

d2521 1
a2521 4
"\t"STUB_ASM_CODE("782")"\n"

".globl ""glClearDepthfOES""\n"
".set ""glClearDepthfOES"", ""glClearDepthf""\n"
d2524 1
a2524 28
"\t"STUB_ASM_CODE("783")"\n"

".globl ""glDepthRangefOES""\n"
".set ""glDepthRangefOES"", ""glDepthRangef""\n"

STUB_ASM_ENTRY("glDrawTexfOES")"\n"
"\t"STUB_ASM_CODE("836")"\n"

STUB_ASM_ENTRY("glDrawTexfvOES")"\n"
"\t"STUB_ASM_CODE("837")"\n"

STUB_ASM_ENTRY("glDrawTexiOES")"\n"
"\t"STUB_ASM_CODE("838")"\n"

STUB_ASM_ENTRY("glDrawTexivOES")"\n"
"\t"STUB_ASM_CODE("839")"\n"

STUB_ASM_ENTRY("glDrawTexsOES")"\n"
"\t"STUB_ASM_CODE("840")"\n"

STUB_ASM_ENTRY("glDrawTexsvOES")"\n"
"\t"STUB_ASM_CODE("841")"\n"

STUB_ASM_ENTRY("glDrawTexxOES")"\n"
"\t"STUB_ASM_CODE("842")"\n"

STUB_ASM_ENTRY("glDrawTexxvOES")"\n"
"\t"STUB_ASM_CODE("843")"\n"
d2527 1
a2527 7
"\t"STUB_ASM_CODE("844")"\n"

STUB_ASM_ENTRY("glQueryMatrixxOES")"\n"
"\t"STUB_ASM_CODE("845")"\n"

STUB_ASM_ENTRY("glDiscardFramebufferEXT")"\n"
"\t"STUB_ASM_CODE("854")"\n"
d2530 1
a2530 10
"\t"STUB_ASM_CODE("859")"\n"

STUB_ASM_ENTRY("glGetTexGenxvOES")"\n"
"\t"STUB_ASM_CODE("956")"\n"

STUB_ASM_ENTRY("glTexGenxOES")"\n"
"\t"STUB_ASM_CODE("957")"\n"

STUB_ASM_ENTRY("glTexGenxvOES")"\n"
"\t"STUB_ASM_CODE("958")"\n"
d2533 1
a2533 1
"\t"STUB_ASM_CODE("991")"\n"
d2536 1
a2536 1
"\t"STUB_ASM_CODE("992")"\n"
d2539 1
a2539 4
"\t"STUB_ASM_CODE("993")"\n"

".globl ""glAlphaFuncxOES""\n"
".set ""glAlphaFuncxOES"", ""glAlphaFuncx""\n"
d2542 1
a2542 4
"\t"STUB_ASM_CODE("994")"\n"

".globl ""glClearColorxOES""\n"
".set ""glClearColorxOES"", ""glClearColorx""\n"
d2545 1
a2545 4
"\t"STUB_ASM_CODE("995")"\n"

".globl ""glClearDepthxOES""\n"
".set ""glClearDepthxOES"", ""glClearDepthx""\n"
d2548 1
a2548 4
"\t"STUB_ASM_CODE("996")"\n"

".globl ""glColor4xOES""\n"
".set ""glColor4xOES"", ""glColor4x""\n"
d2551 1
a2551 4
"\t"STUB_ASM_CODE("997")"\n"

".globl ""glDepthRangexOES""\n"
".set ""glDepthRangexOES"", ""glDepthRangex""\n"
d2554 1
a2554 4
"\t"STUB_ASM_CODE("998")"\n"

".globl ""glFogxOES""\n"
".set ""glFogxOES"", ""glFogx""\n"
d2557 1
a2557 4
"\t"STUB_ASM_CODE("999")"\n"

".globl ""glFogxvOES""\n"
".set ""glFogxvOES"", ""glFogxv""\n"
d2560 1
a2560 4
"\t"STUB_ASM_CODE("1000")"\n"

".globl ""glFrustumfOES""\n"
".set ""glFrustumfOES"", ""glFrustumf""\n"
d2563 1
a2563 4
"\t"STUB_ASM_CODE("1001")"\n"

".globl ""glFrustumxOES""\n"
".set ""glFrustumxOES"", ""glFrustumx""\n"
d2566 1
a2566 4
"\t"STUB_ASM_CODE("1002")"\n"

".globl ""glLightModelxOES""\n"
".set ""glLightModelxOES"", ""glLightModelx""\n"
d2569 1
a2569 4
"\t"STUB_ASM_CODE("1003")"\n"

".globl ""glLightModelxvOES""\n"
".set ""glLightModelxvOES"", ""glLightModelxv""\n"
d2572 1
a2572 4
"\t"STUB_ASM_CODE("1004")"\n"

".globl ""glLightxOES""\n"
".set ""glLightxOES"", ""glLightx""\n"
d2575 1
a2575 4
"\t"STUB_ASM_CODE("1005")"\n"

".globl ""glLightxvOES""\n"
".set ""glLightxvOES"", ""glLightxv""\n"
d2578 1
a2578 4
"\t"STUB_ASM_CODE("1006")"\n"

".globl ""glLineWidthxOES""\n"
".set ""glLineWidthxOES"", ""glLineWidthx""\n"
d2581 1
a2581 4
"\t"STUB_ASM_CODE("1007")"\n"

".globl ""glLoadMatrixxOES""\n"
".set ""glLoadMatrixxOES"", ""glLoadMatrixx""\n"
d2584 1
a2584 4
"\t"STUB_ASM_CODE("1008")"\n"

".globl ""glMaterialxOES""\n"
".set ""glMaterialxOES"", ""glMaterialx""\n"
d2587 1
a2587 4
"\t"STUB_ASM_CODE("1009")"\n"

".globl ""glMaterialxvOES""\n"
".set ""glMaterialxvOES"", ""glMaterialxv""\n"
d2590 1
a2590 4
"\t"STUB_ASM_CODE("1010")"\n"

".globl ""glMultMatrixxOES""\n"
".set ""glMultMatrixxOES"", ""glMultMatrixx""\n"
d2593 1
a2593 4
"\t"STUB_ASM_CODE("1011")"\n"

".globl ""glMultiTexCoord4xOES""\n"
".set ""glMultiTexCoord4xOES"", ""glMultiTexCoord4x""\n"
d2596 1
a2596 4
"\t"STUB_ASM_CODE("1012")"\n"

".globl ""glNormal3xOES""\n"
".set ""glNormal3xOES"", ""glNormal3x""\n"
d2599 1
a2599 4
"\t"STUB_ASM_CODE("1013")"\n"

".globl ""glOrthofOES""\n"
".set ""glOrthofOES"", ""glOrthof""\n"
d2602 1
a2602 4
"\t"STUB_ASM_CODE("1014")"\n"

".globl ""glOrthoxOES""\n"
".set ""glOrthoxOES"", ""glOrthox""\n"
d2605 1
a2605 4
"\t"STUB_ASM_CODE("1015")"\n"

".globl ""glPointSizexOES""\n"
".set ""glPointSizexOES"", ""glPointSizex""\n"
d2608 1
a2608 4
"\t"STUB_ASM_CODE("1016")"\n"

".globl ""glPolygonOffsetxOES""\n"
".set ""glPolygonOffsetxOES"", ""glPolygonOffsetx""\n"
d2611 1
a2611 4
"\t"STUB_ASM_CODE("1017")"\n"

".globl ""glRotatexOES""\n"
".set ""glRotatexOES"", ""glRotatex""\n"
d2614 1
a2614 4
"\t"STUB_ASM_CODE("1018")"\n"

".globl ""glSampleCoveragexOES""\n"
".set ""glSampleCoveragexOES"", ""glSampleCoveragex""\n"
d2617 1
a2617 4
"\t"STUB_ASM_CODE("1019")"\n"

".globl ""glScalexOES""\n"
".set ""glScalexOES"", ""glScalex""\n"
d2620 1
a2620 4
"\t"STUB_ASM_CODE("1020")"\n"

".globl ""glTexEnvxOES""\n"
".set ""glTexEnvxOES"", ""glTexEnvx""\n"
d2623 1
a2623 4
"\t"STUB_ASM_CODE("1021")"\n"

".globl ""glTexEnvxvOES""\n"
".set ""glTexEnvxvOES"", ""glTexEnvxv""\n"
d2626 1
a2626 4
"\t"STUB_ASM_CODE("1022")"\n"

".globl ""glTexParameterxOES""\n"
".set ""glTexParameterxOES"", ""glTexParameterx""\n"
d2629 1
a2629 4
"\t"STUB_ASM_CODE("1023")"\n"

".globl ""glTranslatexOES""\n"
".set ""glTranslatexOES"", ""glTranslatex""\n"
d2632 1
a2632 4
"\t"STUB_ASM_CODE("1024")"\n"

".globl ""glClipPlanefOES""\n"
".set ""glClipPlanefOES"", ""glClipPlanef""\n"
d2635 1
a2635 4
"\t"STUB_ASM_CODE("1025")"\n"

".globl ""glClipPlanexOES""\n"
".set ""glClipPlanexOES"", ""glClipPlanex""\n"
d2638 1
a2638 4
"\t"STUB_ASM_CODE("1026")"\n"

".globl ""glGetClipPlanefOES""\n"
".set ""glGetClipPlanefOES"", ""glGetClipPlanef""\n"
d2641 1
a2641 4
"\t"STUB_ASM_CODE("1027")"\n"

".globl ""glGetClipPlanexOES""\n"
".set ""glGetClipPlanexOES"", ""glGetClipPlanex""\n"
d2644 1
a2644 4
"\t"STUB_ASM_CODE("1028")"\n"

".globl ""glGetFixedvOES""\n"
".set ""glGetFixedvOES"", ""glGetFixedv""\n"
d2647 1
a2647 4
"\t"STUB_ASM_CODE("1029")"\n"

".globl ""glGetLightxvOES""\n"
".set ""glGetLightxvOES"", ""glGetLightxv""\n"
d2650 1
a2650 4
"\t"STUB_ASM_CODE("1030")"\n"

".globl ""glGetMaterialxvOES""\n"
".set ""glGetMaterialxvOES"", ""glGetMaterialxv""\n"
d2653 1
a2653 4
"\t"STUB_ASM_CODE("1031")"\n"

".globl ""glGetTexEnvxvOES""\n"
".set ""glGetTexEnvxvOES"", ""glGetTexEnvxv""\n"
d2656 1
a2656 4
"\t"STUB_ASM_CODE("1032")"\n"

".globl ""glGetTexParameterxvOES""\n"
".set ""glGetTexParameterxvOES"", ""glGetTexParameterxv""\n"
d2659 1
a2659 4
"\t"STUB_ASM_CODE("1033")"\n"

".globl ""glPointParameterxOES""\n"
".set ""glPointParameterxOES"", ""glPointParameterx""\n"
d2662 1
a2662 4
"\t"STUB_ASM_CODE("1034")"\n"

".globl ""glPointParameterxvOES""\n"
".set ""glPointParameterxvOES"", ""glPointParameterxv""\n"
d2665 1
a2665 4
"\t"STUB_ASM_CODE("1035")"\n"

".globl ""glTexParameterxvOES""\n"
".set ""glTexParameterxvOES"", ""glTexParameterxv""\n"
@

