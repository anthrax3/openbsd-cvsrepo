head	1.2;
access;
symbols
	OPENBSD_5_3:1.1.0.16
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.14
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.12
	OPENBSD_5_0:1.1.0.10
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.2
	OPENBSD_4_6_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.03.09.14.34.42;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2009.04.05.16.43.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to fontconfig 2.10.91 + a few local fixes.
Move to a new BSD make based build system since fontconfig's build
system has become too dependant on GNU make.

Requested by ajacoutot@@, tested by many back in january.
@
text
@/*
 * Copyright Â© 2007 Keith Packard
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that copyright
 * notice and this permission notice appear in supporting documentation, and
 * that the name of the copyright holders not be used in advertising or
 * publicity pertaining to distribution of the software without specific,
 * written prior permission.  The copyright holders make no representations
 * about the suitability of this software for any purpose.  It is provided "as
 * is" without express or implied warranty.
 *
 * THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
 * OF THIS SOFTWARE.
 */

@@RET@@		FcBool
@@FUNC@@		FcDirCacheUnlink
@@TYPE1@@		const FcChar8 *			@@ARG1@@		dir
@@TYPE2@@		FcConfig *			@@ARG2@@		config
@@PURPOSE@@	Remove all caches related to <parameter>dir</parameter>
@@DESC@@
Scans the cache directories in <parameter>config</parameter>, removing any
instances of the cache file for <parameter>dir</parameter>. Returns FcFalse
when some internal error occurs (out of memory, etc). Errors actually
unlinking any files are ignored.
@@@@

@@RET@@		FcBool 	
@@FUNC@@		FcDirCacheValid 
@@TYPE1@@		const FcChar8 *			@@ARG1@@		dir
@@PURPOSE@@	check directory cache 
@@DESC@@
Returns FcTrue if <parameter>dir</parameter> has an associated valid cache
file, else returns FcFalse
@@@@

@@RET@@		FcCache *
@@FUNC@@		FcDirCacheLoad
@@TYPE1@@		const FcChar8 *			@@ARG1@@		dir
@@TYPE2@@		FcConfig *			@@ARG2@@		config
@@TYPE3@@		FcChar8 **			@@ARG3@@		cache_file
@@PURPOSE@@	load a directory cache
@@DESC@@
Loads the cache related to <parameter>dir</parameter>. If no cache file
exists, returns NULL. The name of the cache file is returned in
<parameter>cache_file</parameter>, unless that is NULL. See also
FcDirCacheRead.
@@@@

@@RET@@		FcCache *
@@FUNC@@		FcDirCacheRead
@@TYPE1@@		const FcChar8 *			@@ARG1@@		dir
@@TYPE2@@		FcBool%				@@ARG2@@		force
@@TYPE3@@		FcConfig *			@@ARG3@@		config
@@PURPOSE@@	read or construct a directory cache
@@DESC@@
This returns a cache for <parameter>dir</parameter>. If
<parameter>force</parameter> is FcFalse, then an existing, valid cache file
will be used. Otherwise, a new cache will be created by scanning the
directory and that returned.
@@@@

@@RET@@		FcCache *
@@FUNC@@		FcDirCacheLoadFile
@@TYPE1@@		const FcChar8 *			@@ARG1@@		cache_file
@@TYPE2@@		struct stat *			@@ARG2@@		file_stat
@@PURPOSE@@	load a cache file
@@DESC@@
This function loads a directory cache from
<parameter>cache_file</parameter>. If <parameter>file_stat</parameter> is
non-NULL, it will be filled with the results of stat(2) on the cache file.
@@@@

@@RET@@		void
@@FUNC@@		FcDirCacheUnload
@@TYPE1@@		FcCache *			@@ARG1@@		cache
@@PURPOSE@@	unload a cache file
@@DESC@@
This function dereferences <parameter>cache</parameter>. When no other
references to it remain, all memory associated with the cache will be freed.
@@@@
@


1.1
log
@Update to fontconfig 2.6.0. ok naddy@@

this uses a patched version of libtool to fix linking on vax.
@
text
@@

