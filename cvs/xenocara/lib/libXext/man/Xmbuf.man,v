head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.18
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.16
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.12
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.10
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.12
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v1_0_3:1.1.1.2
	v1_0_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.5
date	2013.05.31.22.17.44;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.10.14.01.58;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.11.11.10.17.24;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.24.09.29.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.17.09.47;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.17.09.47;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.10.39.25;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to libXext 1.3.2
@
text
@.\" Copyright (c) 1989, 1994  X Consortium
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining a
.\" copy of this software and associated documentation files (the "Software"),
.\" to deal in the Software without restriction, including without limitation
.\" the rights to use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or sell copies of the Software, and to permit persons to whom the
.\" Software furnished to do so, subject to the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be included in
.\" all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
.\" WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
.\" OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.\" Except as contained in this notice, the name of the X Consortium shall not
.\" be used in advertising or otherwise to promote the sale, use or other
.\" dealing in this Software without prior written authorization from the
.\" X Consortium.
.\"
.\" Copyright 1989, Digital Equipment Corporation.
.\" Permission to use, copy, modify, distribute, and sell this documentation
.\" for any purpose and without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\" Digital Equipment Corporation makes no representations
.\" about the suitability for any purpose of the information in
.\" this document.  This documentation is provided "as is"
.\" without express or implied warranty.
.\"
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de EX
.nf
.ft CW
..
.de EE
.ft
.fi
..
.TH XMBUF __libmansuffix__ __xorgversion__ "X FUNCTIONS"
.SH NAME
XmbufQueryExtension, XmbufGetVersion, XmbufCreateBuffers, XmbufDestroyBuffers, XmbufDisplayBuffers, XmbufGetWindowAttributes, XmbufChangeWindowAttributes, XmbufGetBufferAttributes, XmbufChangeBufferAttributes, XmbufGetScreenInfo, XmbufCreateStereoWindow - X multibuffering functions
.SH SYNTAX
.EX
\&#include <X11/extensions/multibuf.h>

Bool XmbufQueryExtension(
    Display *dpy,
    Display *dpy,
    int *event_base_return,
    int *error_base_return);

Status XmbufGetVersion(
    Display *dpy,
    int *major_version_return,
    int *minor_version_return);

int XmbufCreateBuffers(
    Display *dpy,
    Window window,
    int count,
    int update_action,
    int update_hint,
    Multibuffer *buffers_update);

void XmbufDestroyBuffers(
    Display *dpy,
    Window window);

void XmbufDisplayBuffers(
    Display *dpy,
    int count,
    Multibuffer *buffers,
    int min_delay,
    int max_delay);

Status XmbufGetWindowAttributes(
    Display *dpy,
    Window window,
    XmbufWindowAttributes *attributes);

void XmbufChangeWindowAttributes(
    Display *dpy,
    Window window,
    unsigned long valuemask,
    XmbufSetWindowAttributes *attributes);

Status XmbufGetBufferAttributes(
    Display *dpy,
    Multibuffer buffer,
    XmbufBufferAttributes *attributes);

void XmbufChangeBufferAttributes(
    Display *dpy,
    Multibuffer buffer,
    unsigned long valuemask,
    XmbufSetBufferAttributes *attributes);

Status XmbufGetScreenInfo(
    Display *dpy,
    Drawable drawable,
    int *nmono_return,
    XmbufBufferInfo **mono_info_return,
    int *nstereo_return,
    XmbufBufferInfo **stereo_info_return);

Window XmbufCreateStereoWindow(
    Display *dpy,
    Window parent,
    int x,
    int y,
    unsigned int width,
    unsigned int height,
    unsigned int border_width,
    int depth,
    unsigned int class,                 /\&* InputOutput, InputOnly*/
    Visual *visual,
    unsigned long valuemask,
    XSetWindowAttributes *attributes,
    Multibuffer *left_return,
    Multibuffer *right_return);
.EE
.SH STRUCTURES
\fIEvents:\fP
.EX
typedef struct {
    int type;   /\&* of event */
    unsigned long serial;       /\&* # of last request processed by server */
    int send_event;     /\&* true if this came from a SendEvent request */
    Display *display;   /\&* Display the event was read from */
    Multibuffer buffer; /\&* buffer of event */
    int state;  /\&* see Clobbered constants above */
} XmbufClobberNotifyEvent;

typedef struct {
    int type;   /\&* of event */
    unsigned long serial;       /\&* # of last request processed by server */
    int send_event;     /\&* true if this came from a SendEvent request */
    Display *display;   /\&* Display the event was read from */
    Multibuffer buffer; /\&* buffer of event */
} XmbufUpdateNotifyEvent;
.EE

\fIPer-window attributes that can be got:\fP

.EX
typedef struct {
    int displayed_index;	/\&* which buffer is being displayed */
    int update_action;	/\&* Undefined, Background, Untouched, Copied */
    int update_hint;	/\&* Frequent, Intermittent, Static */
    int window_mode;	/\&* Mono, Stereo */
    int nbuffers;	/\&* Number of buffers */
    Multibuffer *buffers;	/\&* Buffers */
} XmbufWindowAttributes;
.EE

\fIPer-window attributes that can be set:\fP

.EX
typedef struct {
    int update_hint;	/\&* Frequent, Intermittent, Static */
} XmbufSetWindowAttributes;
.EE

\fIPer-buffer attributes that can be got:\fP

.EX
typedef struct {
    Window window;	/\&* which window this belongs to */
    unsigned long event_mask;	/\&* events that have been selected */
    int buffer_index;	/\&* which buffer is this */
    int side;	/\&* Mono, Left, Right */
} XmbufBufferAttributes;
.EE

\fIPer-buffer attributes that can be set:\fP

.EX
typedef struct {
    unsigned long event_mask;	/\&* events that have been selected */
} XmbufSetBufferAttributes;
.EE

\fIPer-screen buffer info (there will be lists of them):\fP

.EX
typedef struct {
    VisualID visualid;	/\&* visual usable at this depth */
    int max_buffers;	/\&* most buffers for this visual */
    int depth;	/\&* depth of buffers to be created */
} XmbufBufferInfo;
.EE
.SH DESCRIPTION
The application programming library for the
\fIX11 Double-Buffering, Multi-Buffering, and Stereo Extension\fP
contains the interfaces described below.
With the exception of
.ZN XmbufQueryExtension ,
if any of these routines are
called with a display that does not support the extension, the
ExtensionErrorHandler (which can be set with
.ZN XSetExtensionErrorHandler
and functions the same way as
.ZN XSetErrorHandler )
will be called and the function will then return.
.PP
.ZN XmbufQueryExtension
returns
.ZN True
if the multibuffering/stereo
extension is available on the
given display.  If the extension exists, the value of the first event
code (which should be added to the event type constants
.ZN MultibufferClobberNotify
and
.ZN MultibufferUpdateNotify
to get the actual
values) is stored into event_base_return and the value of the first
error code (which should be added to the error type constant
.ZN MultibufferBadBuffer
to get the actual value) is stored into error_base_return.
.PP
.ZN XmbufGetVersion
gets the major and minor version numbers of the extension.
The return
value is zero if an error occurs or non-zero if no error happens.
.PP
.ZN XmbufCreateBuffers
requests that "count" buffers be
created with the given update_action
and update_hint and be associated with the indicated window.  The
number of buffers created is returned (zero if an error occurred)
and buffers_update is filled in with that many Multibuffer identifiers.
.PP
.ZN XmbufDestroyBuffers
destroys the buffers associated
with the given window.
.PP
.ZN XmbufDisplayBuffers
displays the indicated buffers their
appropriate windows within
max_delay milliseconds after min_delay milliseconds have passed.
No two buffers may be associated with the same window or else a Match
error is generated.
.PP
.ZN XmbufGetWindowAttributes
gets the multibuffering attributes that apply
to all buffers associated
with the given window.
The list of buffers returns may be freed with
.ZN XFree .
Returns non-zero on success and zero if an error occurs.
.PP
.ZN XmbufChangeWindowAttributes
sets the multibuffering attributes
that apply to all buffers associated
with the given window.  This is currently limited to the update_hint.
.PP
.ZN XmbufGetBufferAttributes
gets the attributes for the indicated buffer.
Returns non-zero on
success and zero if an error occurs.
.PP
.ZN XmbufChangeBufferAttributes
sets the attributes for the indicated buffer.
This is currently limited to the event_mask.
.PP
.ZN XmbufGetScreenInfo
gets the parameters controlling how
mono and stereo windows may be
created on the screen of the given drawable.  The numbers of sets of
visual and depths are returned in nmono_return and nstereo_return.  If
nmono_return is greater than zero, then mono_info_return is set to the
address of an array of
.ZN XmbufBufferInfo
structures describing the
various visuals and depths that may be used.  Otherwise,
mono_info_return is set to NULL.  Similarly, stereo_info_return is set
according to nstereo_return.  The storage returned in mono_info_return
and stereo_info_return may be released by
.ZN XFree .
If no errors are
encounted, non-zero will be returned.
.PP
.ZN XmbufCreateStereoWindow
creates a stereo window in the same way that
.ZN XCreateWindow
creates a mono window.  The buffer ids for the left and right buffers are
returned in left_return and right_return, respectively.  If an
extension error handler that returns is installed,
.ZN None
will be returned if the extension is not available on this display.
.SH PREDEFINED VALUES
.sp
Update_action field:
.RS
.nf
.ZN MultibufferUpdateActionUndefined
.ZN MultibufferUpdateActionBackground
.ZN MultibufferUpdateActionUntouched
.ZN MultibufferUpdateActionCopied
.fi
.RE
.sp
Update_hint field:
.RS
.nf
.ZN MultibufferUpdateHintFrequent
.ZN MultibufferUpdateHintIntermittent
.ZN MultibufferUpdateHintStatic
.fi
.RE
.sp
Valuemask fields:
.RS
.nf
.ZN MultibufferWindowUpdateHint
.ZN MultibufferBufferEventMask
.fi
.RE
.sp
Mono vs. stereo and left vs. right:
.RS
.nf
.ZN MultibufferModeMono
.ZN MultibufferModeStereo
.ZN MultibufferSideMono
.ZN MultibufferSideLeft
.ZN MultibufferSideRight
.fi
.RE
.sp
Clobber state:
.RS
.nf
.ZN MultibufferUnclobbered
.ZN MultibufferPartiallyClobbered
.ZN MultibufferFullyClobbered
.fi
.RE
.sp
Event stuff:
.RS
.nf
.ZN MultibufferClobberNotifyMask
.ZN MultibufferUpdateNotifyMask
.ZN MultibufferClobberNotify
.ZN MultibufferUpdateNotify
.ZN MultibufferNumberEvents
.ZN MultibufferBadBuffer
.ZN MultibufferNumberErrors
.fi
.RE
.SH BUGS
This manual page needs more work.
.SH SEE ALSO
\fIExtending X for Double Buffering, Multi-Buffering, and Stereo\fP
@


1.4
log
@Update to libXext 1.3.1
@
text
@d39 8
d51 1
a51 2
.nf
.LP
d53 1
a53 1
.LP
d59 1
a59 1
.LP
d64 1
a64 1
.LP
d72 1
a72 1
.LP
d76 1
a76 1
.LP
d83 1
a83 1
.LP
d88 1
a88 1
.LP
d94 1
a94 1
.LP
d99 1
a99 1
.LP
d105 1
a105 1
.LP
d113 1
a113 1
.LP
d129 1
a129 1
.fi
a130 2
.nf
.ta 3i
d132 1
d134 6
a139 6
    int type;	/\&* of event */
    unsigned long serial;	/\&* # of last request processed by server */
    int send_event;	/\&* true if this came from a SendEvent request */
    Display *display;	/\&* Display the event was read from */
    Multibuffer buffer;	/\&* buffer of event */
    int state;	/\&* see Clobbered constants above */
d141 1
a141 1
.LP
d143 5
a147 5
    int type;	/\&* of event */
    unsigned long serial;	/\&* # of last request processed by server */
    int send_event;	/\&* true if this came from a SendEvent request */
    Display *display;	/\&* Display the event was read from */
    Multibuffer buffer;	/\&* buffer of event */
d149 2
a150 1
.LP
d152 2
d162 2
a163 1
.LP
d165 2
d170 2
a171 1
.LP
d173 2
d181 2
a182 1
.LP
d184 2
d189 2
a190 1
.LP
d192 2
d199 1
a199 1
.fi
d303 1
a303 1
.in +.5i
a308 1
.in -.5i
d310 1
d313 1
a313 1
.in +.5i
d318 2
a319 1
.in -.5i
a320 1
.fi
d322 1
a322 1
.in +.5i
a325 1
.in -.5i
d327 1
d330 1
a330 1
.in +.5i
a336 1
.in -.5i
d338 1
d341 1
a341 1
.in +.5i
a345 1
.in -.5i
d347 1
d350 1
a350 1
.in +.5i
a358 1
.in -.5i
d360 1
@


1.3
log
@Update to libXext 1.4.0.
Tested by ajacoutot@@, jasper@@, krw@@ and on a bulk ports build by landry@@
@
text
@d2 1
a2 1
.\" 
d4 4
a7 4
.\" copy of this software and associated documentation files (the "Software"), 
.\" to deal in the Software without restriction, including without limitation 
.\" the rights to use, copy, modify, merge, publish, distribute, sublicense, 
.\" and/or sell copies of the Software, and to permit persons to whom the 
d9 1
a9 1
.\" 
d12 1
a12 1
.\" 
d15 4
a18 4
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL 
.\" THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
.\" WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF 
.\" OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
d20 4
a23 4
.\" 
.\" Except as contained in this notice, the name of the X Consortium shall not 
.\" be used in advertising or otherwise to promote the sale, use or other 
.\" dealing in this Software without prior written authorization from the 
d27 1
a27 1
.\" Permission to use, copy, modify, distribute, and sell this documentation 
d194 1
a194 1
returns 
d196 1
a196 1
if the multibuffering/stereo 
d201 1
a201 1
and 
d210 1
a210 1
gets the major and minor version numbers of the extension.  
d215 1
a215 1
requests that "count" buffers be 
d222 1
a222 1
destroys the buffers associated 
d233 1
a233 1
gets the multibuffering attributes that apply 
d236 1
a236 1
The list of buffers returns may be freed with 
d241 1
a241 1
sets the multibuffering attributes 
d260 1
a260 1
address of an array of 
d266 1
a266 1
and stereo_info_return may be released by 
d272 1
a272 1
creates a stereo window in the same way that 
d276 1
a276 1
extension error handler that returns is installed, 
d284 1
a284 1
.ZN MultibufferUpdateActionUndefined	
d294 1
a294 1
.ZN MultibufferUpdateHintFrequent		
d296 1
a296 1
.ZN MultibufferUpdateHintStatic	
d311 1
a311 1
.ZN MultibufferModeMono	
d315 1
a315 1
.ZN MultibufferSideRight		
d322 1
a322 1
.ZN MultibufferUnclobbered	
d324 1
a324 1
.ZN MultibufferFullyClobbered	
@


1.2
log
@Update to libXext 1.0.4
@
text
@a0 1
.\" $Xorg: Xmbuf.man,v 1.3 2000/08/17 19:41:54 cpqbld Exp $
a33 4
.\" 
.\"
.\" $XFree86: xc/doc/man/Xext/Xmbuf.man,v 1.3 2001/02/07 22:35:21 tsi Exp $
.\" $XdotOrg$
@


1.1
log
@Initial revision
@
text
@d121 1
a121 1
    unsigned int class,                 /\(** InputOutput, InputOnly*/
d133 6
a138 6
    int type;	/\(** of event */
    unsigned long serial;	/\(** # of last request processed by server */
    int send_event;	/\(** true if this came frome a SendEvent request */
    Display *display;	/\(** Display the event was read from */
    Multibuffer buffer;	/\(** buffer of event */
    int state;	/\(** see Clobbered constants above */
d142 5
a146 5
    int type;	/\(** of event */
    unsigned long serial;	/\(** # of last request processed by server */
    int send_event;	/\(** true if this came frome a SendEvent request */
    Display *display;	/\(** Display the event was read from */
    Multibuffer buffer;	/\(** buffer of event */
d151 6
a156 6
    int displayed_index;	/\(** which buffer is being displayed */
    int update_action;	/\(** Undefined, Background, Untouched, Copied */
    int update_hint;	/\(** Frequent, Intermittent, Static */
    int window_mode;	/\(** Mono, Stereo */
    int nbuffers;	/\(** Number of buffers */
    Multibuffer *buffers;	/\(** Buffers */
d161 1
a161 1
    int update_hint;	/\(** Frequent, Intermittent, Static */
d166 4
a169 4
    Window window;	/\(** which window this belongs to */
    unsigned long event_mask;	/\(** events that have been selected */
    int buffer_index;	/\(** which buffer is this */
    int side;	/\(** Mono, Left, Right */
d174 1
a174 1
    unsigned long event_mask;	/\(** events that have been selected */
d179 3
a181 3
    VisualID visualid;	/\(** visual usuable at this depth */
    int max_buffers;	/\(** most buffers for this visual */
    int depth;	/\(** depth of buffers to be created */
d234 1
a234 1
No two buffers may be associated with the same window or else a Matc
@


1.1.1.1
log
@import from X.Org 7.2RC1
@
text
@@


1.1.1.2
log
@Import libXext version 1.0.3
@
text
@d135 1
a135 1
    int send_event;	/\(** true if this came from a SendEvent request */
d144 1
a144 1
    int send_event;	/\(** true if this came from a SendEvent request */
d179 1
a179 1
    VisualID visualid;	/\(** visual usable at this depth */
d234 1
a234 1
No two buffers may be associated with the same window or else a Match
@

