head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.12
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.10
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.6
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.4
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.14
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.6
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@.\" @;


1.2
date	2013.06.01.14.31.20;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.10.31.18.54.56;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to libXv 1.0.8
@
text
@.TH XvListImageFormats __libmansuffix__ __vendorversion__ "libXv Functions"
.SH NAME
XvListImageFormats \- return list of image formats supported by a video port
.\"
.SH SYNTAX
.B #include <X11/extensions/Xvlib.h>
.sp
.nf
.BI "XvImageFormatValues * XvListImageFormats (Display *" dpy ","
.BI "                 XvPortID " port ",  int *" p_num_formats ");"
.fi
.SH ARGUMENTS
.\"
.IP \fIdpy\fR 8
Specifies the connection to the X server.
.IP \fIport\fR 8
Specifies the port whose adaptor is to be queried for its list of attributes.
.IP \fIp_num_formats\fR 8
A pointer to where the number of formats returned in the array is written.
.\"
.SH DESCRIPTION
.BR XvListImageFormats (__libmansuffix__)
returns the XvImageFormatValues supported by the specified port. This list
should be freed with
.BR XFree (__libmansuffix__).
.SH RETURN VALUES
XvImageFormatValues has the following structure:
.EX

    typedef struct {
      int id;                      /* Unique descriptor for the format */
      int type;                    /* XvRGB, XvYUV */
      int byte_order;              /* LSBFirst, MSBFirst */
      char guid[16];               /* Globally Unique IDentifier */
      int bits_per_pixel;
      int format;                  /* XvPacked, XvPlanar */
      int num_planes;

      /* for RGB formats */
      int depth;
      unsigned int red_mask;
      unsigned int green_mask;
      unsigned int blue_mask;

      /* for YUV formats */
      unsigned int y_sample_bits;
      unsigned int u_sample_bits;
      unsigned int v_sample_bits;
      unsigned int horz_y_period;
      unsigned int horz_u_period;
      unsigned int horz_v_period;
      unsigned int vert_y_period;
      unsigned int vert_u_period;
      unsigned int vert_v_period;
      char component_order[32];    /* eg. UYVY */
      int scanline_order;          /* XvTopToBottom, XvBottomToTop */
    } XvImageFormatValues;

.EE
.IP \fIid\fR 8
A unique descriptor for the format.  This is often the FOURCC
for the format, when applicable.  This id is used to describe
the format during XvImage creation.
.IP \fItype\fR 8
XvRGB or XvYUV.
.IP \fIbyte_order\fR 8
The byte order of the image.  It is either LSBFirst or MSBFirst.
.IP \fIguid\fR 8
The Globally Unique IDentifier (also known as Universally Unique
IDentifier).  When not applicable, all characters are NULL.
.IP \fIbits_per_pixel\fR 8
The bits taken up (but not necessarily used) by each
pixel.  Note that for some planar formats which have
fractional bits per pixel (such as IF09) this number
may be rounded _down_.
.IP \fIformat\fR 8
XvPacked or XvPlanar.
.IP \fInum_planes\fR 8
The number of planes in planar formats.
.IP \fIdepth\fR 8
Significant bits per pixel.
.IP "\fIred_mask, green_mask, blue_mask\fR" 8
The red, green and blue bitmasks (RGB formats only).
.IP \fI?_sample_bits\fR 8
The size of each sample in bits (YUV formats only).
.IP "\fIhorz_?_period, vert_?_period\fR" 8
The period (in pixels) on which samples occur in the horizontal and vertical
directions (YUV formats only).
.IP \fIcomponent_order\fR 8
Upper case ascii characters representing the order that samples are stored
within packed formats.
For planar formats this represents the ordering of the planes.
.IP \fIscanline_order\fR 8
XvTopToBottom or XvBottomToTop.
.\"
.SH NOTES
Since some formats (particularly some planar YUV formats) may not be
completely defined by the parameters above, the guid, when available,
should provide the most accurate description of the format.
.\"
.SH DIAGNOSTICS
.IP [XvBadPort] 8
Generated if the requested port does not exist.
.\"
.SH SEE ALSO
.BR XvCreateImage (__libmansuffix__),
.BR XvCreateShmImage (__libmansuffix__)
@


1.1
log
@update to libXv 1.0.5
@
text
@d2 1
a2 1
.SH Name
d5 1
a5 1
.SH Syntax
d12 1
a12 1
.SH Arguments
d21 1
a21 1
.SH Description
d26 1
a26 1
.SH Returned Values
d96 1
a96 1
.SH Notes
d101 1
a101 1
.SH Diagnostics
d105 1
a105 1
.SH See Also
@

