head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.16
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.8
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.10
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.11.02.18.59.06;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2008.10.05.08.06.07;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove things that are no longer linked to the build: imake,cf and pciids
@
text
@#! /usr/bin/perl -w
#
# Produces a pciutils style pci.ids file from BSD pcidevs input
#
# Copyright (c) 2008 Matthieu Herrb <matthieu@@herrb.eu>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

while (<>) {
	chop;
	if (/^\$OpenBSD:/) {
		$rcsid = $_;
	}
	if (/^vendor/) {
		($dummy,$label,$id,$name) = split(/\s+/, $_, 4);
		$id = oct($id);
		$vendor_id{$label} = $id;
		$vendor_name{$id} = $name;
	}
	if (/^product/) {
		($dummy,$vlabel,$dummy,$id,$name) = split(/\s+/, $_, 5);
		$id = oct($id);
		$v =  $vendor_id{$vlabel};
		$name{$v,$id} = $name;
		push @@{$product{$v}},$id;
	}
}

print "# THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.\n";
print "#\n";
print "# generated from:\n";
print "#\t $rcsid\n";
print "\n";

sub numerically {
	$a <=> $b
}

foreach $v (sort numerically keys %vendor_name) {
	printf("%04x  $vendor_name{$v}\n", $v);
	next if (!defined($product{$v}));
	foreach $p (sort numerically @@{$product{$v}}) {
		printf("\t%04x  $name{$v,$p}\n", $p);
	}

}
@


1.1
log
@provide a pciutils style pci.ids file for libpciaccess.
ok todd@@ deraadt@@
@
text
@@

