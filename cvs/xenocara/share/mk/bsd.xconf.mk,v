head	1.34;
access;
symbols
	OPENBSD_6_2:1.34.0.6
	OPENBSD_6_2_BASE:1.34
	OPENBSD_6_1:1.34.0.4
	OPENBSD_6_1_BASE:1.34
	OPENBSD_6_0:1.34.0.2
	OPENBSD_6_0_BASE:1.34
	OPENBSD_5_9:1.32.0.2
	OPENBSD_5_9_BASE:1.32
	OPENBSD_5_8:1.28.0.8
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.6
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.28.0.4
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.28.0.2
	OPENBSD_5_5_BASE:1.28
	OPENBSD_5_4:1.24.0.2
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.23.0.2
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.21.0.2
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.2
	OPENBSD_5_0:1.19.0.2
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.2
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6;
locks; strict;
comment	@# @;


1.34
date	2016.04.01.03.15.15;	author jsg;	state Exp;
branches;
next	1.33;
commitid	q3HsDrq7nfLMWLnS;

1.33
date	2016.03.11.13.09.42;	author okan;	state Exp;
branches;
next	1.32;
commitid	rypizj9eWLMTQq0Q;

1.32
date	2016.02.20.10.51.26;	author matthieu;	state Exp;
branches;
next	1.31;
commitid	W2mvB7mQbYh6yWV3;

1.31
date	2016.02.07.10.06.50;	author jsg;	state Exp;
branches;
next	1.30;
commitid	pBh8rUibI2bDC5Rb;

1.30
date	2016.02.05.13.59.11;	author visa;	state Exp;
branches;
next	1.29;
commitid	9VmJ8p0YUNLse6zi;

1.29
date	2015.11.25.09.23.59;	author jsg;	state Exp;
branches;
next	1.28;
commitid	YYI8efWWEl3M9IwU;

1.28
date	2013.09.24.21.03.32;	author miod;	state Exp;
branches;
next	1.27;

1.27
date	2013.08.22.19.26.51;	author miod;	state Exp;
branches;
next	1.26;

1.26
date	2013.08.17.17.05.43;	author bcallah;	state Exp;
branches;
next	1.25;

1.25
date	2013.08.12.04.16.52;	author jsg;	state Exp;
branches;
next	1.24;

1.24
date	2013.04.14.10.23.04;	author mpi;	state Exp;
branches;
next	1.23;

1.23
date	2013.02.21.17.45.34;	author todd;	state Exp;
branches;
next	1.22;

1.22
date	2013.02.09.21.48.07;	author brad;	state Exp;
branches;
next	1.21;

1.21
date	2012.03.08.07.29.29;	author matthieu;	state Exp;
branches;
next	1.20;

1.20
date	2011.08.30.21.15.30;	author matthieu;	state Exp;
branches;
next	1.19;

1.19
date	2011.06.02.17.01.59;	author matthieu;	state Exp;
branches;
next	1.18;

1.18
date	2011.03.08.20.48.59;	author matthieu;	state Exp;
branches;
next	1.17;

1.17
date	2011.03.08.07.59.23;	author matthieu;	state Exp;
branches;
next	1.16;

1.16
date	2010.11.27.14.20.47;	author matthieu;	state Exp;
branches;
next	1.15;

1.15
date	2010.11.25.21.47.19;	author matthieu;	state Exp;
branches;
next	1.14;

1.14
date	2010.10.03.18.34.39;	author matthieu;	state Exp;
branches;
next	1.13;

1.13
date	2010.08.25.17.44.27;	author todd;	state Exp;
branches;
next	1.12;

1.12
date	2010.08.02.18.45.02;	author matthieu;	state Exp;
branches;
next	1.11;

1.11
date	2009.08.04.15.45.41;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2009.06.04.01.12.44;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2009.05.22.17.58.45;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2008.11.02.15.20.26;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.08.02.24.28;	author todd;	state Exp;
branches;
next	1.6;

1.6
date	2008.04.29.18.59.05;	author oga;	state Exp;
branches;
next	1.5;

1.5
date	2008.04.01.15.25.18;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2008.03.31.19.20.29;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	2008.03.31.14.10.32;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.25.23.43.25;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.03.25.23.41.50;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.34
log
@remove XENOCARA_BUILD_PIXMAN all platforms now build pixman
@
text
@# $OpenBSD: bsd.xconf.mk,v 1.33 2016/03/11 13:09:42 okan Exp $

# Build GL libs and apps?
.if ${MACHINE_ARCH} == "m88k"
XENOCARA_BUILD_GL?=no
XENOCARA_BUILD_DRI?=no
.else
XENOCARA_BUILD_GL?=yes
XENOCARA_BUILD_DRI?=yes
.endif
@


1.33
log
@Remove support vax and XENOCARA_HAVE_SHARED_LIBS scaffolding.

ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.32 2016/02/20 10:51:26 matthieu Exp $
a10 3

# Build pixman?
XENOCARA_BUILD_PIXMAN?=yes
@


1.32
log
@Re-enable the build of OpenGL on alpha.
@
text
@d1 1
a1 8
# $OpenBSD: bsd.xconf.mk,v 1.31 2016/02/07 10:06:50 jsg Exp $

# Shared libs?
.if ${MACHINE} == "vax"
XENOCARA_HAVE_SHARED_LIBS?=no
.else
XENOCARA_HAVE_SHARED_LIBS?=yes
.endif
d8 2
a9 2
XENOCARA_BUILD_GL?=${XENOCARA_HAVE_SHARED_LIBS:L}
XENOCARA_BUILD_DRI?=${XENOCARA_HAVE_SHARED_LIBS:L}
a12 3
.if ${MACHINE} == "vax"
XENOCARA_BUILD_PIXMAN?=no
.else
a13 1
.endif
@


1.31
log
@Remove now unused XENOCARA_BUILD_GALLIUM settings.  The non-gallium parts
of Mesa require the sync builtins now, and we no longer have our own
build system for Mesa.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.30 2016/02/05 13:59:11 visa Exp $
d11 1
a11 1
.if ${MACHINE_ARCH} == "m88k" || ${MACHINE_ARCH} == "alpha"
@


1.30
log
@Re-enable GL on mips64 as the architecture now has the __sync functions.
Build the libraries even on octeon for consistency. The platform uses
the common mips64 packages which are built with GL.

ok jasper@@, kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.29 2015/11/25 09:23:59 jsg Exp $
a16 9
.endif
# Gallium requires gcc 4 __sync_and_fetch() support
.if ${MACHINE_ARCH} == "arm" || ${MACHINE_ARCH} == "hppa" || \
    ${MACHINE_ARCH} == "hppa64" || ${MACHINE_ARCH} == "m68k" || \
    ${MACHINE_ARCH} == "m88k" || ${MACHINE_ARCH} == "sh" || \
    ${MACHINE_ARCH} == "sparc"
XENOCARA_BUILD_GALLIUM?=no
.else
XENOCARA_BUILD_GALLIUM?=${XENOCARA_HAVE_SHARED_LIBS:L}
@


1.29
log
@Stop building Mesa on alpha for now as it hits a gcc ICE, and mips64 because
it requires sync builtins not in gcc 4.2 and hits binutils issues.

ok matthieu@@ deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.28 2013/09/24 21:03:32 miod Exp $
d11 1
a11 2
.if ${MACHINE_CPU} == "mips64" || ${MACHINE_ARCH} == "m88k" || \
    ${MACHINE_ARCH} == "alpha"
d21 2
a22 2
    ${MACHINE_ARCH} == "m88k" || ${MACHINE_CPU} == "mips64" || \
    ${MACHINE_ARCH} == "sh" || ${MACHINE_ARCH} == "sparc"
@


1.28
log
@Don't build libGL on m88k for the time being, the recent update triggers a
known hairy bug in DWARF debug information generation on m88k, which is
currently being investigated.

Found the hard way by aoyama@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.27 2013/08/22 19:26:51 miod Exp $
d11 2
a12 1
.if ${MACHINE} == "octeon" || ${MACHINE_ARCH} == "m88k"
@


1.27
log
@Gallium requires gcc 4 __sync_and_fetch() support, so don't bother trying
to build it on platforms which don't provide this.
ok jsg@@ matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.26 2013/08/17 17:05:43 bcallah Exp $
d11 1
a11 1
.if ${MACHINE} == "octeon"
@


1.26
log
@As discussed with matthieu@@, since there are no octeon machines with video
output where OpenGL makes since, we should disable OpenGL on octeon.
ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.25 2013/08/12 04:16:52 jsg Exp $
d18 7
d26 1
@


1.25
log
@build mesa radeon drivers on sparc64 and switch to gallium drivers
for r300 and r600
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.24 2013/04/14 10:23:04 mpi Exp $
d11 4
d17 1
@


1.24
log
@Add a new option to the xenocara infrastructure be able to automatically
build the Gallium3D software rasterizer as part of the libGL.

Note that it can also makes use of LLVM to build the llvmpipe if the
corresponding port is installed. Please refer to the README for a more
complete documentation.

Prodded by ajacoutot@@, ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.23 2013/02/21 17:45:34 todd Exp $
d13 1
a13 1
XENOCARA_BUILD_GALLIUM?=no
@


1.23
log
@after a compiler update, landisk can now handle pixman and thus xserver again
prodded by brad@@, ok matthieu@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.22 2013/02/09 21:48:07 brad Exp $
d13 1
@


1.22
log
@Enable the shared libs option on m88k; this is also used to indicate
whether to build Mesa.

ok miod@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.21 2012/03/08 07:29:29 matthieu Exp $
d15 1
a15 1
.if ${MACHINE} == "vax" || ${MACHINE} == "landisk"
@


1.21
log
@Disable pixman on landisk for now. It triggers a gcc error:

/usr/xenocara/lib/pixman/pixman/pixman-access.c: In function
`store_scanline_a8r8g8b8':
/usr/xenocara/lib/pixman/pixman/pixman-access.c:477: error:
unrecognizable insn:
(insn 3059 3058 3060 0x0 (unspec_volatile [
            (label_ref 1558)
            (const_int 0 [0x0])
        ] 4) -1 (nil)
    (nil))
/usr/xenocara/lib/pixman/pixman/pixman-access.c:477: internal compiler error: in insn_default_length, at insn-attrtab.c:717
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.20 2011/08/30 21:15:30 matthieu Exp $
d4 1
a4 1
.if ${MACHINE_ARCH} == "m88k" || ${MACHINE} == "vax"
@


1.20
log
@Switch to xkeyboard-config is done. Remove old xkbdata and unifdef it.
ok shadchin@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.19 2011/06/02 17:01:59 matthieu Exp $
d15 1
a15 1
.if ${MACHINE} == "vax"
@


1.19
log
@Switch XKB layouts to xkeyboard-config.
Note: this moves xkb data files to /usr/X11R6/share/X11/xkb/
      /etc/X11/xkb can be removed.
Tested by many.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.18 2011/03/08 20:48:59 matthieu Exp $
a19 3

# Build xkeyboard-config?
XENOCARA_USE_XKEYBOARD_CONFIG?=yes
@


1.18
log
@xcb is no longer optional.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.17 2011/03/08 07:59:23 matthieu Exp $
d22 1
a22 1
XENOCARA_USE_XKEYBOARD_CONFIG?=no
@


1.17
log
@add a new build switch 'XENOCARA_USE_XKEYBOARD_CONFIG' to enable
the use of xkeyboard-config xkb definitions instead of the old xkbdata.
This will make testing easier. No changes in default builds.
ok shadchin@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.16 2010/11/27 14:20:47 matthieu Exp $
a12 3

# Build XCB?
XENOCARA_BUILD_XCB?=yes
@


1.16
log
@pixman build fails on vax.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.15 2010/11/25 21:47:19 matthieu Exp $
d23 3
@


1.15
log
@Build XCB support on static only arches too.
"go ahead" deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.14 2010/10/03 18:34:39 matthieu Exp $
d18 5
a22 1
XENOCARA_BUILD_PIXMAN?=${XENOCARA_BUILD_XCB}
@


1.14
log
@Now that pixman depends on libpthread-stubs, only build it
on platforms that build it (part of xcb suite).

Tested by jasper@@ and landry@@ on a bulk ports build.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.13 2010/08/25 17:44:27 todd Exp $
d14 2
a15 2
# Build XCB
XENOCARA_BUILD_XCB?=${XENOCARA_HAVE_SHARED_LIBS}
@


1.13
log
@enable pixman (with a workaround from miod@@) for m68k, fixes hp300 and mvme68k
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.12 2010/08/02 18:45:02 matthieu Exp $
d18 1
a18 1
XENOCARA_BUILD_PIXMAN?=yes
@


1.12
log
@Current pixman lib doesn't build on m68k. Disable it on those machines.
ok deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.11 2009/08/04 15:45:41 matthieu Exp $
d17 1
a17 4
# Build pixmain?
.if ${MACHINE_ARCH} == "m68k"
XENOCARA_BUILD_PIXMAN?=no
.else
a18 1
.endif
@


1.11
log
@Enable XCB on architectures with shared libs.

requested by sthen@@.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.10 2009/06/04 01:12:44 matthieu Exp $
d16 7
@


1.10
log
@simplify.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.9 2009/05/22 17:58:45 matthieu Exp $
d15 1
a15 1
XENOCARA_BUILD_XCB?=no
@


1.9
log
@Add support for building xcb (disabled for now).
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.8 2008/11/02 15:20:26 matthieu Exp $
d4 1
a4 1
.if ${MACHINE} == "mvme88k" || ${MACHINE} == "vax"
d10 3
a12 8
# Build GL libs and apps
.if ${MACHINE_ARCH} == "m88k" || ${MACHINE} == vax
XENOCARA_BUILD_GL?=no
XENOCARA_BUILD_DRI?=no
.else
XENOCARA_BUILD_GL?=yes
XENOCARA_BUILD_DRI?=yes
.endif
@


1.8
log
@With xserver 1.5 and Mesa 7.2 DRI is needed by libGL, even without
hardware acceleration.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.7 2008/10/08 02:24:28 todd Exp $
d18 3
@


1.7
log
@enable GL for libraries, but not the X server .. for mips64
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.6 2008/04/29 18:59:05 oga Exp $
a9 7
# Build DRI?
.if ${MACHINE} == "amd64" || ${MACHINE} == "i386"
XENOCARA_BUILD_DRI?=yes
.else
XENOCARA_BUILD_DRI?=no
.endif

d11 1
a11 1
.if ${MACHINE_ARCH} == "m88k" || ${MACHINE} == "vax"
d13 1
d16 1
@


1.6
log
@Enable building the dri modules and mesa drivers by default on i386 and
amd64.

ok matthieu@@ and todd@@

This has been in snaps for over a week, no complaints.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.5 2008/04/01 15:25:18 drahn Exp $
d18 1
a18 1
.if ${MACHINE_ARCH} == "m88k" || ${MACHINE} == "sgi" || ${MACHINE} == vax
@


1.5
log
@Turns out GL does build on landisk now, ok todd@@
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.4 2008/03/31 19:20:29 drahn Exp $
d12 1
a12 1
XENOCARA_BUILD_DRI?=no
@


1.4
log
@GL enable on landisk was not tested yet. That half of the previous change
was not meant to go in. At least yet.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.3 2008/03/31 14:10:32 drahn Exp $
d18 1
a18 1
.if ${MACHINE} == "landisk" || ${MACHINE_ARCH} == "m88k" || ${MACHINE} == "sgi" || ${MACHINE} == vax
@


1.3
log
@Enable shared libraries. Sets are 'close' but probably not 100%
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.2 2008/03/25 23:43:25 matthieu Exp $
d18 1
a18 1
.if ${MACHINE_ARCH} == "m88k" || ${MACHINE} == "sgi" || ${MACHINE} == vax
@


1.2
log
@Previous commit accidentaly enabled DRI builds on i386 and amd64. Don't
do that yet.
@
text
@d1 1
a1 1
# $OpenBSD: bsd.xconf.mk,v 1.1 2008/03/25 23:41:50 matthieu Exp $
d4 1
a4 1
.if ${MACHINE} == landisk || ${MACHINE} == "mvme88k" || ${MACHINE} == "vax"
d18 1
a18 1
.if ${MACHINE} == "landisk" || ${MACHINE_ARCH} == "m88k" || ${MACHINE} == "sgi" || ${MACHINE} == vax
@


1.1
log
@Introduce bsd.xconf.mk to set default config variables used
at several places in the Xenocara build in a central place instead
of duplicating the checks all over the place. ok oga@@.
@
text
@d1 1
a1 1
# $OpenBSD$
d12 1
a12 1
XENOCARA_BUILD_DRI?=yes
@

