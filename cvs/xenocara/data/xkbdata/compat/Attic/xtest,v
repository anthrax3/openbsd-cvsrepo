head	1.2;
access;
symbols
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_1:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2011.08.30.21.15.30;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2006.11.25.16.31.08;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.16.31.08;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Switch to xkeyboard-config is done. Remove old xkbdata and unifdef it.
ok shadchin@@
@
text
@// $Xorg: xtest,v 1.3 2000/08/17 19:54:34 cpqbld Exp $
default xkb_compatibility "xtest"  {

    // Minimal set of symbol interpretations to provide
    // reasonable behavior for testing.   The X Test 
    // Suite assumes that it can set any modifier by 
    // simulating a KeyPress and clear it by simulating 
    // a KeyRelease.  Because of the way that XKB 
    // implements locking/latching modifiers, this 
    // approach fails in some cases (typically the 
    // lock or num lock modifiers).  These symbol
    // interpretations make all modifier keys just
    // set the corresponding modifier so that xtest
    // will see the behavior it expects.

    virtual_modifiers NumLock,AltGr;

    interpret.repeat= False;
    setMods.clearLocks= True;
    latchMods.clearLocks= True;
    latchMods.latchToLock= False;

    interpret Shift_Lock+AnyOf(Shift+Lock) {
	action= SetMods(modifiers=Shift);
    };

    interpret Num_Lock+Any {
	virtualModifier= NumLock;
	action= SetMods(modifiers=NumLock);
    };

    interpret Mode_switch {
	useModMapMods= level1;
	virtualModifier= AltGr;
	action= SetGroup(group=2);
    };

    interpret Any + Any {
	action= SetMods(modifiers=modMapMods);
    };

    group 2 = AltGr;
    group 3 = AltGr;
    group 4 = AltGr;

    indicator.allowExplicit= False;
    indicator "Caps Lock" { 
	modifiers= Lock;
    };
    indicator "Num Lock" {
	modifiers= NumLock;
    };
    indicator "Shift Lock" {
	whichModState= Locked;
	modifiers= Shift;
    };
    indicator.allowExplicit= True;
};
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import from X.Org 7.0
@
text
@@
