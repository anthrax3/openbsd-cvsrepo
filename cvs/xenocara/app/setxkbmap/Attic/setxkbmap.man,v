head	1.4;
access;
symbols
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_0_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.4
date	2012.04.07.15.24.43;	author matthieu;	state dead;
branches;
next	1.3;

1.3
date	2010.10.06.05.43.08;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.10.10.33.01;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.20.20.22;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.20.20.22;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.09.12.11.09.07;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to setxkbmap 1.3.0
@
text
@.\"
.TH SETXKBMAP __appmansuffix__ __xorgversion__
.SH NAME
setxkbmap
\- set the keyboard using the X Keyboard Extension
.SH SYNOPSIS
.B setxkbmap [
.I args
.B ] [
.I layout
.B [
.I variant
.B [
.I option  ...
.B ] ] ]
.SH DESCRIPTION
The
.B setxkbmap
command maps the keyboard to use the layout determined by the options
specified on the command line.
.P
An XKB keymap is constructed from a number of components which are compiled
only as needed.  The source for all of the components can be found in
.IR __xkbconfigroot__ .
.SH OPTIONS
.TP 8
.B \-help
Prints a message describing the valid input to \fIsetxkbmap\fP.
.TP 8
.B \-compat \fIname\fP
Specifies the name of the compatibility map component used to construct
a keyboard layout.
.TP 8
.B \-config \fIfile\fP
Specifies the name of an XKB configuration file which describes the
keyboard to be used.
.TP 8
.B \-device \fIdevice\fP
Specifies the numeric device id of the input device to be updated with 
the new keyboard layout. If not specified, the core keyboard device of 
the X server is updated.
.TP 8
.B \-display \fIdisplay\fP
Specifies the display to be updated with the new keyboard layout.
.TP 8
.B \-geometry \fIname\fP
Specifies the name of the geometry component used to construct
a keyboard layout.
.TP 8
.B \-I \fIdirectory\fP
Adds a directory to the list of directories to be used to search for
specified layout or rules files.
.TP 8
.B \-keycodes \fIname\fP
Specifies the name of the keycodes component used to construct
a keyboard layout.
.TP 8
.B \-keymap \fIname\fP
Specifies the name of the keymap description used to construct
a keyboard layout.
.TP 8
.B \-layout \fIname\fP
Specifies the name of the layout used to determine the components which
make up the keyboard description.  Only one layout may be specified on
the command line.
.TP 8
.B \-model \fIname\fP
Specifies the name of the keyboard model used to determine the components 
which make up the keyboard description.  Only one model may be specified
on the command line.
.TP 8
.B \-option \fIname\fP
Specifies the name of an option to determine the components which make up 
the keyboard description;  multiple options may be specified, one per
\fI-option\fP flag. Note that
.B setxkbmap
adds options specified in the command line to the options that were set 
before (as saved in root window properties). If you want to replace all
previously specified options, use the \fI-option\fP flag with an empty 
argument first.
.TP 8
.B \-print
With this option \fBsetxkbmap\fP just prints component names in a format
acceptable by \fBxkbcomp\fP (an XKB keymap compiler) and exits. The option
can be used for tests instead of a verbose option and in cases when one needs
to run both the \fBsetxkbmap\fP and the \fBxkbcomp\fP in chain (see below).
.TP 8
.B \-query
With this option \fBsetxkbmap\fP just prints the current rules, model,
layout, variant, and options, then exits.
.TP 8
.B \-rules \fIfile\fP
Specifies the name of the rules file used to resolve the requested layout
and model to a set of component names.
.TP 8
.B \-symbols \fIname\fP
Specifies the name of the symbols component used to construct
a keyboard layout.
.TP 8
.B \-synch
Force synchronization for X requests.
.TP 8
.B \-types \fIname\fP
Specifies the name of the types component used to construct
a keyboard layout.
.TP 8
.B \-variant \fIname\fP
Specifies which variant of the keyboard layout should be used to determine 
the components which make up the keyboard description.  Only one variant
may be specified on the command line.
.TP 8
.B \-verbose|\-v [\fIlevel\fP]
Specifies level of verbosity in output messages.  Valid levels range from 
0 (least verbose) to 10 (most verbose).  The default verbosity level is 5. 
If no level is specified, each \fI-v\fP or \fI-verbose\fP flag raises the 
level by 1.
.SH USING WITH xkbcomp
If you have an Xserver and a client shell running on different computers and
XKB configuration files on those machines are different you can get
problems specifying a keyboard map by model, layout, options names.
This is because \fBsetxkbcomp\fP converts these names to names of XKB
configuration files according to files that are on the client side computer,
then it sends the file names to the server where the \fBxkbcomp\fP has to
compose a complete keyboard map using files which the server has.
Thus if the sets of files differ significantly the names that the
\fBsetxkbmap\fP generates can be unacceptable on the server side.  You can
solve this problem by running the \fBxkbcomp\fP on the client side too.
With the \fI-print\fP option \fBsetxkbmap\fP just prints the file names
in an appropriate format to its stdout and this output can be piped
directly to the \fBxkbcomp\fP input. For example, the command

\fBsetxkbmap us -print | xkbcomp - $DISPLAY\fP

makes both steps run on the same (client) machine and loads a keyboard map into
the server.
.SH SEE ALSO
xkbcomp(__appmansuffix__)
.SH FILES
.I __xkbconfigroot__
@


1.3
log
@Update to setxkbmap 1.2.0
@
text
@@


1.2
log
@update to setxkbmap 1.1.0
@
text
@d83 1
a83 1
With this option the \fBsetxkbmap\fP just prints component names in a format
d87 4
@


1.1
log
@Initial revision
@
text
@d2 1
a2 3
.\" $XFree86: xc/programs/setxkbmap/setxkbmap.man,v 3.6 2003/01/20 04:15:08 dawes Exp $
.\"
.TH SETXKBMAP 1 __xorgversion__
d24 1
a24 1
.IR __projectroot__/lib/X11/xkb .
d38 5
d50 8
d77 4
a80 4
summarize options specified in the command
line with options was set before (saved in root window properties). If you
want only specified options will be set use the \fI-option\fP flag with
an empty argument first.
d84 2
a85 2
acceptable by an \fBxkbcomp\fP (an XKB keymap compiler) and exits. The option
can be used for tests instead of a verbose option and in case when one need
d89 1
a89 1
Specifies the name of the rules file used to resolve the request layout
d107 6
d115 1
a115 1
XKB configuration files sets on those machines are different you can get
d117 3
a119 3
The thing is the \fBsetxkbcomp\fP converts these names to names of XKB
configuration files according to files that are on the client side computer. 
Then it sends the file names to the server where the \fBxkbcomp\fP has to
d123 2
a124 2
solve this problem running the \fBxkbcomp\fP on the client side too.
With the \fI-print\fP option \fBsetxkbmap\fP just prints the files names
d126 1
a126 1
directly to the \fBxkbcomp\fP input. For example, a command
d130 1
a130 1
makes both step on the same (client) machine and loads a keyboard map into
a131 1
.ig
d133 1
a133 2
keyboards(1)
..
d135 1
a135 1
.I __projectroot__/lib/X11/xkb
@


1.1.1.1
log
@Importing from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@setxkbmap 1.0.4
@
text
@d4 1
a4 1
.TH SETXKBMAP __appmansuffix__ __xorgversion__
d26 1
a26 1
.IR __xkbconfigroot__ .
a39 5
.B \-device \fIdevice\fP
Specifies the numeric device id of the input device to be updated with 
the new keyboard layout. If not specified, the core keyboard device of 
the X server is updated.
.TP 8
a46 8
.B \-I \fIdirectory\fP
Adds a directory to the list of directories to be used to search for
specified layout or rules files.
.TP 8
.B \-keycodes \fIname\fP
Specifies the name of the keycodes component used to construct
a keyboard layout.
.TP 8
d66 4
a69 4
adds options specified in the command line to the options that were set 
before (as saved in root window properties). If you want to replace all
previously specified options, use the \fI-option\fP flag with an empty 
argument first.
d73 2
a74 2
acceptable by \fBxkbcomp\fP (an XKB keymap compiler) and exits. The option
can be used for tests instead of a verbose option and in cases when one needs
d78 1
a78 1
Specifies the name of the rules file used to resolve the requested layout
a95 6
.TP 8
.B \-verbose|\-v [\fIlevel\fP]
Specifies level of verbosity in output messages.  Valid levels range from 
0 (least verbose) to 10 (most verbose).  The default verbosity level is 5. 
If no level is specified, each \fI-v\fP or \fI-verbose\fP flag raises the 
level by 1.
d98 1
a98 1
XKB configuration files on those machines are different you can get
d100 3
a102 3
This is because \fBsetxkbcomp\fP converts these names to names of XKB
configuration files according to files that are on the client side computer,
then it sends the file names to the server where the \fBxkbcomp\fP has to
d106 2
a107 2
solve this problem by running the \fBxkbcomp\fP on the client side too.
With the \fI-print\fP option \fBsetxkbmap\fP just prints the file names
d109 1
a109 1
directly to the \fBxkbcomp\fP input. For example, the command
d113 1
a113 1
makes both steps run on the same (client) machine and loads a keyboard map into
d115 1
d117 2
a118 1
xkbcomp(__appmansuffix__)
d120 1
a120 1
.I __xkbconfigroot__
@

