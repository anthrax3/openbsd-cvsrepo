head	1.14;
access;
symbols
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.4
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.6
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.10.0.2
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.5.0.12
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.10
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.8
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.6
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_3:1.5.0.4
	v1_1_6:1.1.1.2
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	v1_1_4:1.1.1.2
	v1_0_4:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@// @;


1.14
date	2015.10.17.08.25.11;	author matthieu;	state Exp;
branches;
next	1.13;
commitid	YlbaUei01BBMp88Z;

1.13
date	2014.02.25.22.16.24;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2013.05.19.07.22.53;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2013.05.03.05.57.05;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2012.08.04.20.41.42;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2011.12.03.13.46.00;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2011.11.15.20.53.45;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2011.03.19.15.40.02;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.03.28.09.33.02;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2007.08.05.19.54.19;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2007.08.05.19.37.40;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.04.22.29.12;	author david;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.28.15.41.12;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.20.32.36;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.20.32.36;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.08.05.19.01.07;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Don't automatically launch dbus as part of the default user sessions.
requested by deraadt@@ no objection ajacoutot@@
@
text
@XCOMM!SHELL_CMD
XCOMM
XCOMM $OpenBSD: Xsession.cpp,v 1.13 2014/02/25 22:16:24 matthieu Exp $

XCOMM redirect errors to a file in user's home directory if we can

errfile="$HOME/.xsession-errors"
if ( umask 077 && cp /dev/null "$errfile" 2> /dev/null )
then
	exec > "$errfile" 2>&1
else
#ifdef MKTEMP_COMMAND
	mktemp=MKTEMP_COMMAND
	for errfile in "${TMPDIR-/tmp}/xses-$USER" "/tmp/xses-$USER"
	do
		if ef="$( umask 077 && $mktemp "$errfile.XXXXXX" 2> /dev/null)"
		then
			exec > "$ef" 2>&1
			mv "$ef" "$errfile" 2> /dev/null
			break
		fi
	done
#else
XCOMM Since this system doesn't have a mktemp command to allow secure
XCOMM creation of files in shared directories, no fallback error log
XCOMM is being used.   See https://bugs.freedesktop.org/show_bug.cgi?id=5898
XCOMM
XCOMM 	for errfile in "${TMPDIR-/tmp}/xses-$USER" "/tmp/xses-$USER"
XCOMM	do
XCOMM		if ( umask 077 && cp /dev/null "$errfile" 2> /dev/null )
XCOMM		then
XCOMM			exec > "$errfile" 2>&1
XCOMM			break
XCOMM		fi
XCOMM	done

	exec > /dev/null 2>&1

#endif
fi

XCOMM if we have private ssh key(s), start ssh-agent and add the key(s)
id1=$HOME/.ssh/identity
id2=$HOME/.ssh/id_dsa
id3=$HOME/.ssh/id_rsa
id4=$HOME/.ssh/id_ecdsa
id5=$HOME/.ssh/id_ed25519
if [ -z "$SSH_AGENT_PID" ];
then
	if [ -x /usr/bin/ssh-agent ] && [ -f $id1 -o -f $id2 -o -f $id3 -o -f $id4 -o -f $id5 ];
	then
		eval `ssh-agent -s`
		ssh-add < /dev/null
	fi
fi

do_exit() {
	if [ "$SSH_AGENT_PID" ]; then
		ssh-add -D < /dev/null
		eval `ssh-agent -s -k`
	fi
	exit
}

case $# in
1)
	case $1 in
	failsafe)
		BINDIR/xterm -geometry 80x24-0-0
		do_exit
		;;
	esac
esac

XCOMM The startup script is not intended to have arguments.

startup=$HOME/.xsession
resources=$HOME/.Xresources

if [ -s "$startup" ]; then
	if [ -x "$startup" ]; then
		"$startup"
	else
		/bin/sh "$startup"
	fi
else
	if [ -f "$resources" ]; then
		BINDIR/xrdb -load "$resources"
	fi
#if defined(__SCO__) || defined(__UNIXWARE__)
        [ -r /etc/default/xdesktops ] && {
                . /etc/default/xdesktops
        }

        [ -r /etc/default/xdm ] && {
                . /etc/default/xdm
        }

        XCOMM Allow the user to over-ride the system default desktop
        [ -r $HOME/.xdmdesktop ] && {
                . $HOME/.xdmdesktop
        }

        [ -n "$XDESKTOP" ] && {
                exec `eval $XDESKTOP`
        }
#endif
	BINDIR/xterm &
	BINDIR/fvwm
fi
do_exit
@


1.13
log
@Support for ed25519 keys. from  Tristan Le Guern with tweaks by sthen@@
Ok deraadt@@
@
text
@d3 1
a3 1
XCOMM $OpenBSD: Xsession.cpp,v 1.12 2013/05/19 07:22:53 ajacoutot Exp $
a107 3
	if [ -x /usr/local/bin/dbus-launch -a -z "${DBUS_SESSION_BUS_ADDRESS}" ]; then
		eval `dbus-launch --sh-syntax --exit-with-session`
	fi
@


1.12
log
@Don't try to start an ssh agent if $SSH_AGENT_PID is already set.

ok matthieu@@
@
text
@d3 1
a3 1
XCOMM $OpenBSD: Xsession.cpp,v 1.11 2013/05/03 05:57:05 ajacoutot Exp $
d47 1
d50 1
a50 1
	if [ -x /usr/bin/ssh-agent ] && [ -f $id1 -o -f $id2 -o -f $id3 -o -f $id4 ];
@


1.11
log
@Start dbus-launch in a consistent way int xinitrc and Xsession and fix
an indent weirdness while here.

ok matthieu@@
@
text
@d3 1
a3 1
XCOMM $OpenBSD: Xsession.cpp,v 1.10 2012/08/04 20:41:42 matthieu Exp $
d47 1
a47 1
if [ -x /usr/bin/ssh-agent ] && [ -f $id1 -o -f $id2 -o -f $id3 -o -f $id4 ];
d49 5
a53 2
	eval `ssh-agent -s`
	ssh-add < /dev/null
@


1.10
log
@If dbus is installed, start the daemon as part of the X session.
That will help applications that depend on dbus beeing started.
With ajacoutot@@.
@
text
@d3 1
a3 1
XCOMM $OpenBSD: Xsession.cpp,v 1.9 2011/12/03 13:46:00 matthieu Exp $
d104 1
a104 2
	if [ -x /usr/local/bin/dbus-launch \
	     -a -z "${DBUS_SESSION_BUS_ADDRESS}" ]; then
@


1.9
log
@Restore ecdsa ssh keys support, lost in update to 1.1.11.
Noticed by jsg@@
@
text
@d3 1
a3 1
XCOMM $OpenBSD: Xsession.cpp,v 1.8 2011/11/15 20:53:45 matthieu Exp $
d104 4
@


1.8
log
@Update to xdm 1.1.11 plus a few patches from git master.
patched to restore static greeter.
Tested by shadchin@@, jasper@@
@
text
@d3 1
a3 1
XCOMM $OpenBSD: Xsession.cpp,v 1.6 2010/03/28 09:33:02 matthieu Exp $
d46 2
a47 1
if [ -x /usr/bin/ssh-agent ] && [ -f $id1 -o -f $id2 -o -f $id3 ];
@


1.7
log
@Add support for ecdsa SSH keys. From dave at davec dot name. Thanks.
@
text
@d6 35
a40 13
for errfile in "$HOME/.xsession-errors" "${TMPDIR-/tmp}/xses-$USER" "/tmp/xses-$USER"
do
	case "$errfile" in
	"/tmp/*" | "/var/tmp/*")
		errfile=`mktemp ${errfile}.XXXXXXXXXX` || break;
		;;
	esac
	if ( umask 077 && cp /dev/null "$errfile" 2> /dev/null )
	then
		exec > "$errfile" 2>&1
		break
	fi
done
d46 1
a46 2
id4=$HOME/.ssh/id_ecdsa
if [ -x /usr/bin/ssh-agent ] && [ -f $id1 -o -f $id2 -o -f $id3 -o -f $id4 ];
d70 1
a70 1
XCOMM  The startup script is not intended to have arguments.
@


1.6
log
@Update to xdm 1.1.9
@
text
@d3 1
a3 1
XCOMM $OpenBSD: Xsession.cpp,v 1.5 2007/08/05 19:54:19 matthieu Exp $
d24 2
a25 1
if [ -x /usr/bin/ssh-agent ] && [ -f $id1 -o -f $id2 -o -f $id3 ];
@


1.5
log
@bring OpenBSD local diffs back in
@
text
@d3 1
a3 3
XCOMM $Xorg: Xsession,v 1.4 2000/08/17 19:54:17 cpqbld Exp $
XCOMM $OpenBSD: Xsession.cpp,v 1.3 2007/04/04 22:29:12 david Exp $
XCOMM $XFree86: xc/programs/xdm/config/Xsession,v 1.2 1998/01/11 03:48:32 dawes Exp $
@


1.4
log
@merge xdm 1.1.4
@
text
@a2 1
XCOMM $XdotOrg: $
d8 13
a20 35

errfile="$HOME/.xsession-errors"
if ( umask 077 && cp /dev/null "$errfile" 2> /dev/null )
then
	exec > "$errfile" 2>&1
else
#ifdef MKTEMP_COMMAND
	mktemp=MKTEMP_COMMAND
 	for errfile in "${TMPDIR-/tmp}/xses-$USER" "/tmp/xses-$USER"
	do
		if ef="$( umask 077 && $mktemp "$errfile.XXXXXX" 2> /dev/null)"
		then
			exec > "$ef" 2>&1
			mv "$ef" "$errfile" 2> /dev/null
 			break
 		fi
	done
#else
XCOMM Since this system doesn't have a mktemp command to allow secure
XCOMM creation of files in shared directories, no fallback error log
XCOMM is being used.   See https://bugs.freedesktop.org/show_bug.cgi?id=5898
XCOMM
XCOMM 	for errfile in "${TMPDIR-/tmp}/xses-$USER" "/tmp/xses-$USER"
XCOMM	do
XCOMM		if ( umask 077 && cp /dev/null "$errfile" 2> /dev/null )
XCOMM		then
XCOMM			exec > "$errfile" 2>&1
XCOMM			break
XCOMM		fi
XCOMM	done

	exec > /dev/null 2>&1

#endif
fi
d44 2
a45 1
		exec BINDIR/xterm -geometry 80x24-0-0
d50 1
a50 1
XCOMM The startup script is not intended to have arguments.
d57 1
a57 1
		exec "$startup"
d59 1
a59 1
		exec /bin/sh "$startup"
d62 1
a62 1
	if [ -r "$resources" ]; then
d86 1
@


1.3
log
@do_exit must be called before exiting so ssh-agent can be killed
matches XF4 version; ok matthieu
@
text
@d3 1
d5 1
a5 1
XCOMM $OpenBSD: Xsession.cpp,v 1.2 2006/11/28 15:41:12 matthieu Exp $
d9 35
a43 13
for errfile in "$HOME/.xsession-errors" "${TMPDIR-/tmp}/xses-$USER" "/tmp/xses-$USER"
do
	case "$errfile" in
	"/tmp/*" | "/var/tmp/*")
		errfile=`mktemp ${errfile}.XXXXXXXXXX` || break;
		;;
	esac
	if ( umask 077 && cp /dev/null "$errfile" 2> /dev/null )
	then
		exec > "$errfile" 2>&1
		break
	fi
done
d67 1
a67 2
		BINDIR/xterm -geometry 80x24-0-0
		do_exit
d72 1
a72 1
XCOMM  The startup script is not intended to have arguments.
d79 1
a79 1
		"$startup"
d81 1
a81 1
		/bin/sh "$startup"
d84 1
a84 1
	if [ -f "$resources" ]; then
a107 1
do_exit
@


1.2
log
@OpnBSD customization:
- support for X server privilege separation
- logos
@
text
@d4 1
a4 1
XCOMM $OpenBSD: Xsession.cpp,v 1.3 2006/02/26 22:56:57 matthieu Exp $
d86 1
@


1.1
log
@Initial revision
@
text
@a2 1
XCOMM $XdotOrg: app/xdm/config/Xsession.cpp,v 1.4 2006/03/18 03:43:18 alanc Exp $
d4 1
d8 13
d22 5
a26 2
errfile="$HOME/.xsession-errors"
if ( umask 077 && cp /dev/null "$errfile" 2> /dev/null )
d28 3
a30 26
	exec > "$errfile" 2>&1
else
#ifdef MKTEMP_COMMAND
	mktemp=MKTEMP_COMMAND
 	for errfile in "${TMPDIR-/tmp}/xses-$USER" "/tmp/xses-$USER"
	do
		if ef="$( umask 077 && $mktemp "$errfile.XXXXXX" 2> /dev/null)"
		then
			exec > "$ef" 2>&1
			mv "$ef" "$errfile" 2> /dev/null
 			break
 		fi
	done
#else
XCOMM Since this system doesn't have a mktemp command to allow secure
XCOMM creation of files in shared directories, no fallback error log
XCOMM is being used.   See https://bugs.freedesktop.org/show_bug.cgi?id=5898
XCOMM
XCOMM 	for errfile in "${TMPDIR-/tmp}/xses-$USER" "/tmp/xses-$USER"
XCOMM	do
XCOMM		if ( umask 077 && cp /dev/null "$errfile" 2> /dev/null )
XCOMM		then
XCOMM			exec > "$errfile" 2>&1
XCOMM			break
XCOMM		fi
XCOMM	done
d32 7
a38 4
	exec > /dev/null 2>&1

#endif
fi
d44 2
a45 1
		exec BINDIR/xterm -geometry 80x24-0-0
d50 1
a50 1
XCOMM The startup script is not intended to have arguments.
d57 1
a57 1
		exec "$startup"
d59 1
a59 1
		exec /bin/sh "$startup"
d62 1
a62 1
	if [ -r "$resources" ]; then
d83 2
a84 1
	exec BINDIR/xsm
@


1.1.1.1
log
@Importing from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@Import xdm 1.1.4
@
text
@d3 1
a3 1
XCOMM $XdotOrg: $
@

