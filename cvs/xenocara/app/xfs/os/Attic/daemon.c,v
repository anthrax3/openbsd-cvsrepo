head	1.4;
access;
symbols
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_0_5:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_4:1.1.1.1
	v1_0_3:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.05.10.13.38.47;	author matthieu;	state dead;
branches;
next	1.3;
commitid	duBE1ZkzigNvS9rd;

1.3
date	2012.03.04.18.36.21;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.10.10.12.49;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.14.43.47;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.14.43.47;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove xfs. It was already unlinked from build 8 month ago.
@
text
@/*

Copyright (c) 1988  X Consortium

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of the X Consortium shall
not be used in advertising or otherwise to promote the sale, use or
other dealings in this Software without prior written authorization
from the X Consortium.

*/

#include "config.h"

#include <X11/Xos.h>
#include <sys/types.h>
#include <errno.h>
#include <stdlib.h>

#include "os.h"

/* detach */
void
BecomeDaemon (void)
{
    /* If our C library has the daemon() function, just use it. */
#ifdef HAVE_DAEMON
    if (daemon (0, 0) < 0) {
	/* error */
	FatalError("daemon() failed, %s\n", strerror(errno));
    }

    /* Open/reopen log file on stderr */
#ifdef USE_SYSLOG
    if (!UseSyslog)
#endif
	CloseErrors();
    InitErrors();
#else

    switch (fork()) {
    case -1:
	/* error */
	FatalError("daemon fork failed, %s\n", strerror(errno));
	break;
    case 0:
	/* child */
	break;
    default:
	/* parent */
	exit(0);
    }

    if (setsid() == -1)
	FatalError("setting session id for daemon failed: %s\n",
		   strerror(errno));

    chdir("/");

    DetachStdio();
#endif /* HAVE_DAEMON */
}

void
DetachStdio (void)
{
    int nullfd;
    close (0);
    close (1);
    close (2);

    /*
     * Set up the standard file descriptors.
     */
    nullfd = open ("/dev/null", O_RDWR);
    if (nullfd != 0) {
	dup2(nullfd, 0);
	close(nullfd);
    }
    dup2 (0, 1);

#ifdef USE_SYSLOG
    if (UseSyslog) {
	dup2 (0, 2);
	return;
    }
#endif

    /* open/reopen log file on stderr */
    CloseErrors();
    InitErrors();
}
@


1.3
log
@Update to xfs 1.1.2
@
text
@@


1.2
log
@update to xfs 1.1.0.
@
text
@d31 1
a31 1
#include "xfs-config.h"
@


1.1
log
@Initial revision
@
text
@d30 2
a31 1
/* $XFree86: xc/programs/xfs/os/daemon.c,v 1.12 2002/10/20 21:42:50 tsi Exp $ */
a37 15
#if defined(USG)
# include <termios.h>
#else
# include <sys/ioctl.h>
#endif
#ifdef hpux
# include <sys/ptyio.h>
#endif

#ifdef X_NOT_POSIX
# define Pid_t int
#else
# define Pid_t pid_t
#endif

d40 3
a42 14
#if defined(__GLIBC__) || defined(CSRG_BASED)
#define HAS_DAEMON
#endif

#ifndef X_NOT_POSIX
#define HAS_SETSID
#endif

#ifndef HAS_SETSID

#define setsid() MySetsid()

static Pid_t
MySetsid(void)
d44 5
a48 17
#if defined(TIOCNOTTY) || defined(TCCLRCTTY) || defined(TIOCTTY)
    int fd;
#endif
    int stat;

    fd = open("/dev/tty", O_RDWR);
    if (fd >= 0) {
#if defined(USG) && defined(TCCLRCTTY)
	int zero = 0;
	(void) ioctl (fd, TCCLRCTTY, &zero);
#elif (defined(SYSV) || defined(SVR4)) && defined(TIOCTTY)
	int zero = 0;
	(void) ioctl (i, TIOCTTY, &zero);
#elif defined(TIOCNOTTY)
	(void) ioctl (i, TIOCNOTTY, (char *) 0);    /* detach, BSD style */
#endif
        close(fd);
d51 3
a53 4
#if defined(SYSV) || defined(__QNXNTO__)
    return setpgrp();
#else
    return setpgid(0, getpid());
d55 2
a56 12
}

#endif /* !HAS_SETSID */


/* detach */
void
BecomeDaemon ()
{
    /* If our C library has the daemon() function, just use it. */
#ifdef HAS_DAEMON
    daemon (0, 0);
d78 8
d93 13
a105 3
    (void) open ("/dev/null", O_RDWR);
    (void) dup2 (0, 1);
    (void) dup2 (0, 2);
d107 3
a109 1
#endif /* HAS_DAEMON */
@


1.1.1.1
log
@Importing from X.Org indiviual releases
@
text
@@
