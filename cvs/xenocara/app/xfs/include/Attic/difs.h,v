head	1.5;
access;
symbols
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_0_5:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_4:1.1.1.1
	v1_0_3:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.05.10.13.38.47;	author matthieu;	state dead;
branches;
next	1.4;
commitid	duBE1ZkzigNvS9rd;

1.4
date	2013.05.31.21.26.57;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2012.03.04.18.36.21;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.10.10.12.48;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.14.43.45;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.14.43.45;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove xfs. It was already unlinked from build 8 month ago.
@
text
@/*
 * Copyright (C) 1999 The XFree86 Project, Inc.  All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * XFREE86 PROJECT BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name of the XFree86 Project shall
 * not be used in advertising or otherwise to promote the sale, use or other
 * dealings in this Software without prior written authorization from the
 * XFree86 Project.
 */
#ifndef _DIFS_H
#define _DIFS_H

#include "difsfn.h"
#include "globals.h"
#include <X11/fonts/fontstruct.h>

typedef int (*InitialFunc)(ClientPtr);
typedef int (*ProcFunc)(ClientPtr);
typedef int (*SwappedProcFunc)(ClientPtr);
typedef void (*EventSwapFunc)(fsError *, fsError *);
typedef void (*ReplySwapFunc)(ClientPtr, int, void *);

extern InitialFunc InitialVector[3];
extern ReplySwapFunc ReplySwapVector[NUM_PROC_VECTORS];

/* FIXME: this is derived from fontstruct.h; should integrate it */

/* difs/atom.c */
extern Atom MakeAtom ( const char *string, unsigned len, Bool makeit );
extern int ValidAtom ( Atom atom );
extern char * NameForAtom ( Atom atom );
extern void InitAtoms ( void );

/* difs/charinfo.c */
extern int GetExtents ( ClientPtr client, FontPtr pfont, Mask flags, unsigned long num_ranges, fsRange *range, unsigned long *num_extents, fsXCharInfo **data );
extern int GetBitmaps ( ClientPtr client, FontPtr pfont, fsBitmapFormat format, Mask flags, unsigned long num_ranges, fsRange *range, int *size, unsigned long *num_glyphs, fsOffset32 **offsets, pointer *data, int *freeData );

/* difs/initfonts.c */
extern void InitFonts ( void );

/* difs/fonts.c */
extern int FontToFSError ( int err );
extern int OpenFont ( ClientPtr client, Font fid, fsBitmapFormat format, fsBitmapFormatMask format_mask, int namelen, char *name );
extern int CloseClientFont ( ClientFontPtr cfp, FSID fid );
extern int SetFontCatalogue ( char *str, int *badpath );
extern int ListFonts ( ClientPtr client, int length, unsigned char *pattern, int maxNames );
#if 0
extern int StartListFontsWithInfo ( ClientPtr client, int length, unsigned char *pattern, int maxNames );
#endif
extern int LoadGlyphRanges ( ClientPtr client, FontPtr pfont, Bool range_flag, int num_ranges, int item_size, fsChar2b *data );
extern FontPtr find_old_font ( FSID id );
extern void DeleteClientFontStuff ( ClientPtr client );

/* difs/fontinfo.c */
extern int convert_props ( FontInfoPtr pinfo, fsPropInfo **props );
extern int QueryExtents ( ClientPtr client, ClientFontPtr cfp, int item_size, int nranges, Bool range_flag, pointer range_data );
extern int QueryBitmaps ( ClientPtr client, ClientFontPtr cfp, int item_size, fsBitmapFormat format, int nranges, Bool range_flag, pointer range_data );

/* difs/main.c */
extern int NotImplemented(void);

#endif
@


1.4
log
@Update to xfs 1.1.3
@
text
@@


1.3
log
@Update to xfs 1.1.2
@
text
@a58 5
extern void UseFPE ( FontPathElementPtr fpe );
extern void FreeFPE ( FontPathElementPtr fpe );
extern void QueueFontWakeup ( FontPathElementPtr fpe );
extern void RemoveFontWakeup ( FontPathElementPtr fpe );
extern void FontWakeup ( pointer data, int count, unsigned long *LastSelectMask );
a66 1
extern void FreeFonts ( void );
a70 1
extern void CopyCharInfo ( CharInfoPtr ci, fsXCharInfo *dst );
@


1.2
log
@update to xfs 1.1.0.
@
text
@d45 1
a45 1
extern Atom MakeAtom ( char *string, unsigned len, Bool makeit );
@


1.1
log
@Initial revision
@
text
@a0 1
/* $XFree86: xc/programs/xfs/include/difs.h,v 1.4 2001/08/01 00:45:04 tsi Exp $ */
@


1.1.1.1
log
@Importing from X.Org indiviual releases
@
text
@@
