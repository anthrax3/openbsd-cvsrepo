head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.20
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.18
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.16
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.14
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.12
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.10
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.8
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.6
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.4
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_3:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2011.08.28.11.21.51;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2011.01.11.20.56.40;	author shadchin;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.20.43.53;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.20.43.53;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xkbcomp 1.2.3
@
text
@/************************************************************
 Copyright (c) 1994 by Silicon Graphics Computer Systems, Inc.

 Permission to use, copy, modify, and distribute this
 software and its documentation for any purpose and without
 fee is hereby granted, provided that the above copyright
 notice appear in all copies and that both that copyright
 notice and this permission notice appear in supporting
 documentation, and that the name of Silicon Graphics not be 
 used in advertising or publicity pertaining to distribution 
 of the software without specific prior written permission.
 Silicon Graphics makes no representation about the suitability 
 of this software for any purpose. It is provided "as is"
 without any express or implied warranty.
 
 SILICON GRAPHICS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS 
 SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY 
 AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL SILICON
 GRAPHICS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
 DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, 
 DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE 
 OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION  WITH
 THE USE OR PERFORMANCE OF THIS SOFTWARE.

 ********************************************************/

#ifndef XKBCOMP_H
#define	XKBCOMP_H 1

#ifndef DEBUG_VAR
#define	DEBUG_VAR debugFlags
#endif

#include <X11/Xlib.h>
#include <X11/XKBlib.h>

#include "utils.h"

#include <X11/extensions/XKM.h>
#include <X11/extensions/XKBfile.h>

extern char *scanFile;

#define	TypeUnknown	0
#define	TypeBoolean	1
#define	TypeInt		2
#define	TypeFloat	3
#define	TypeString	4
#define	TypeAction	5
#define	TypeKeyName	6
#define	TypeSymbols	7

#define	StmtUnknown		0
#define	StmtInclude		1
#define	StmtKeycodeDef		2
#define	StmtKeyAliasDef		3
#define	StmtExpr		4
#define	StmtVarDef		5
#define	StmtKeyTypeDef		6
#define	StmtInterpDef		7
#define	StmtVModDef		8
#define	StmtSymbolsDef		9
#define	StmtModMapDef		10
#define	StmtGroupCompatDef 	11
#define	StmtIndicatorMapDef	12
#define	StmtIndicatorNameDef	13
#define	StmtOutlineDef		14
#define	StmtShapeDef		15
#define	StmtKeyDef		16
#define	StmtRowDef		17
#define	StmtSectionDef		18
#define	StmtOverlayKeyDef	19
#define	StmtOverlayDef		20
#define	StmtDoodadDef		21

#define	FileSymInterp	100

typedef struct _ParseCommon
{
    unsigned stmtType;
    struct _ParseCommon *next;
} ParseCommon;

#define	ExprValue	0
#define	ExprIdent	1
#define	ExprActionDecl	2
#define	ExprFieldRef	3
#define	ExprArrayRef	4
#define	ExprKeysymList	5
#define	ExprActionList	6
#define	ExprCoord	7

#define	OpAdd		20
#define	OpSubtract	21
#define	OpMultiply	22
#define	OpDivide	23
#define	OpAssign	24
#define	OpNot		25
#define	OpNegate	26
#define	OpInvert	27
#define	OpUnaryPlus	28

#define	MergeDefault	0
#define	MergeAugment	1
#define	MergeOverride	2
#define	MergeReplace	3
#define	MergeAltForm	4

#define	AutoKeyNames	(1L <<  0)
#define	CreateKeyNames(x)	((x)->flags&AutoKeyNames)

extern unsigned warningLevel;
extern unsigned optionalParts;

typedef struct _IncludeStmt
{
    ParseCommon common;
    unsigned merge;
    char *stmt;
    char *file;
    char *map;
    char *modifier;
    char *path;
    struct _IncludeStmt *next;
} IncludeStmt;

typedef struct _Expr
{
    ParseCommon common;
    unsigned op;
    unsigned type;
    union
    {
        struct
        {
            struct _Expr *left;
            struct _Expr *right;
        } binary;
        struct
        {
            Atom element;
            Atom field;
        } field;
        struct
        {
            Atom element;
            Atom field;
            struct _Expr *entry;
        } array;
        struct
        {
            Atom name;
            struct _Expr *args;
        } action;
        struct
        {
            int nSyms;
            int szSyms;
            char **syms;
        } list;
        struct
        {
            int x;
            int y;
        } coord;
        struct _Expr *child;
        Atom str;
        unsigned uval;
        int ival;
        char keyName[5];
        Opaque ptr;
    } value;
} ExprDef;

typedef struct _VarDef
{
    ParseCommon common;
    unsigned merge;
    ExprDef *name;
    ExprDef *value;
} VarDef;

typedef struct _VModDef
{
    ParseCommon common;
    unsigned merge;
    Atom name;
    ExprDef *value;
} VModDef;

typedef struct _KeycodeDef
{
    ParseCommon common;
    unsigned merge;
    char name[5];
    ExprDef *value;
} KeycodeDef;

typedef struct _KeyAliasDef
{
    ParseCommon common;
    unsigned merge;
    char alias[5];
    char real[5];
} KeyAliasDef;

typedef struct _KeyTypeDef
{
    ParseCommon common;
    unsigned merge;
    Atom name;
    VarDef *body;
} KeyTypeDef;

typedef struct _SymbolsDef
{
    ParseCommon common;
    unsigned merge;
    char keyName[5];
    ExprDef *symbols;
} SymbolsDef;

typedef struct _ModMapDef
{
    ParseCommon common;
    unsigned merge;
    Atom modifier;
    ExprDef *keys;
} ModMapDef;

typedef struct _GroupCompatDef
{
    ParseCommon common;
    unsigned merge;
    int group;
    ExprDef *def;
} GroupCompatDef;

typedef struct _InterpDef
{
    ParseCommon common;
    unsigned merge;
    KeySym sym;
    ExprDef *match;
    VarDef *def;
    Bool ignore;
} InterpDef;

typedef struct _IndicatorNameDef
{
    ParseCommon common;
    unsigned merge;
    int ndx;
    ExprDef *name;
    Bool virtual;
} IndicatorNameDef;

typedef struct _OutlineDef
{
    ParseCommon common;
    Atom field;
    int nPoints;
    ExprDef *points;
} OutlineDef;

typedef struct _ShapeDef
{
    ParseCommon common;
    unsigned merge;
    Atom name;
    int nOutlines;
    OutlineDef *outlines;
} ShapeDef;

typedef struct _KeyDef
{
    ParseCommon common;
    unsigned defined;
    char *name;
    ExprDef *expr;
} KeyDef;

typedef struct _RowDef
{
    ParseCommon common;
    int nKeys;
    KeyDef *keys;
} RowDef;

typedef struct _SectionDef
{
    ParseCommon common;
    unsigned merge;
    Atom name;
    int nRows;
    RowDef *rows;
} SectionDef;

typedef struct _OverlayKeyDef
{
    ParseCommon common;
    char over[5];
    char under[5];
} OverlayKeyDef;

typedef struct _OverlayDef
{
    ParseCommon common;
    unsigned merge;
    Atom name;
    int nKeys;
    OverlayKeyDef *keys;
} OverlayDef;

typedef struct _DoodadDef
{
    ParseCommon common;
    unsigned merge;
    unsigned type;
    Atom name;
    VarDef *body;
} DoodadDef;

/* IndicatorMapDef doesn't use the type field, but the rest of the fields
   need to be at the same offsets as in DoodadDef.  Use #define to avoid
   any strict aliasing problems.  */
#define IndicatorMapDef DoodadDef

typedef struct _XkbFile
{
    ParseCommon common;
    int type;
    char *topName;
    char *name;
    ParseCommon *defs;
    int id;
    unsigned flags;
    Bool compiled;
} XkbFile;

extern Bool CompileKeymap(XkbFile * /* file */ ,
                          XkbFileInfo * /* result */ ,
                          unsigned      /* merge */
    );

extern Bool CompileKeycodes(XkbFile * /* file */ ,
                            XkbFileInfo * /* result */ ,
                            unsigned    /* merge */
    );

extern Bool CompileGeometry(XkbFile * /* file */ ,
                            XkbFileInfo * /* result */ ,
                            unsigned    /* merge */
    );

extern Bool CompileKeyTypes(XkbFile * /* file */ ,
                            XkbFileInfo * /* result */ ,
                            unsigned    /* merge */
    );

typedef struct _LEDInfo *LEDInfoPtr;

extern Bool CompileCompatMap(XkbFile * /* file */ ,
                             XkbFileInfo * /* result */ ,
                             unsigned /* merge */ ,
                             LEDInfoPtr *       /* unboundLEDs */
    );

extern Bool CompileSymbols(XkbFile * /* file */ ,
                           XkbFileInfo * /* result */ ,
                           unsigned     /* merge */
    );

#define	WantLongListing	(1<<0)
#define	WantPartialMaps	(1<<1)
#define	WantHiddenMaps	(1<<2)
#define	WantFullNames	(1<<3)
#define	ListRecursive	(1<<4)

extern char *rootDir;
extern unsigned verboseLevel;
extern unsigned dirsToStrip;

extern Bool AddListing(char * /* file */ ,
                       char *   /* map */
    );

extern Bool AddMatchingFiles(char *     /* head_in */
    );

extern int AddMapOnly(char *    /* map */
    );

extern int GenerateListing(char *       /* filename */
    );

#endif /* XKBCOMP_H */
@


1.2
log
@Update to xkbcomp 1.2.0.
ok matthieu@@
@
text
@d246 1
@


1.1
log
@Initial revision
@
text
@a0 1
/* $Xorg: xkbcomp.h,v 1.3 2000/08/17 19:54:33 cpqbld Exp $ */
a25 1
/* $XFree86: xc/programs/xkbcomp/xkbcomp.h,v 3.8 2001/12/19 21:30:30 dawes Exp $ */
a30 1
#define	DEBUG_VAR_NOT_LOCAL
d78 4
a81 3
typedef	struct _ParseCommon {
    unsigned		 stmtType;
    struct _ParseCommon	*next;
d112 2
a113 2
extern	unsigned	warningLevel;
extern	unsigned	optionalParts;
d115 10
a124 9
typedef struct _IncludeStmt {
    ParseCommon		common;
    unsigned		merge;
    char 		*stmt;
    char		*file;
    char		*map;
    char		*modifier;
    char		*path;
    struct _IncludeStmt	*next;
d127 45
a171 37
typedef struct _Expr {
    ParseCommon		common;
    unsigned		op;
    unsigned		type;
    union {
	struct {
	    struct _Expr *left;
	    struct _Expr *right;
	} binary;
	struct {
	    Atom	element;
	    Atom field;
	} field;
	struct {
	    Atom	element;
	    Atom	field;
	    struct _Expr *entry;
	} array;
	struct {
	    Atom	  name;
	    struct _Expr *args;
	} action;
	struct {
	    int		 nSyms;
	    int		 szSyms;
	    KeySym *	 syms;
	} list;
	struct {
	    int		 x;
	    int		 y;
	} coord;
	struct _Expr	*child;
	Atom	 str;
	unsigned	 uval;
	int		 ival;
	char	 	 keyName[5];
	Opaque		 ptr;
d175 6
a180 5
typedef struct _VarDef {
    ParseCommon	common;
    unsigned	 merge;
    ExprDef 	*name;
    ExprDef	*value;
d183 6
a188 5
typedef struct _VModDef {
    ParseCommon	 common;
    unsigned	 merge;
    Atom	 name;
    ExprDef	*value;
d191 6
a196 5
typedef struct _KeycodeDef {
    ParseCommon	common;
    unsigned	merge;
    char 	name[5];
    ExprDef	*value;
d199 6
a204 5
typedef struct _KeyAliasDef {
    ParseCommon	common;
    unsigned	merge;
    char 	alias[5];
    char 	real[5];
d207 6
a212 5
typedef struct _KeyTypeDef {
    ParseCommon	 common;
    unsigned	 merge;
    Atom	 name;
    VarDef	*body;
d215 6
a220 5
typedef struct _SymbolsDef {
    ParseCommon	 common;
    unsigned	 merge;
    char 	 keyName[5];
    ExprDef *	 symbols;
d223 6
a228 5
typedef struct _ModMapDef {
    ParseCommon	 common;
    unsigned	 merge;
    Atom	 modifier;
    ExprDef *	 keys;
d231 6
a236 5
typedef struct _GroupCompatDef {
    ParseCommon	 common;
    unsigned	 merge;
    int	 	 group;
    ExprDef *	 def;
d239 7
a245 6
typedef struct _InterpDef {
    ParseCommon	 common;
    unsigned	 merge;
    KeySym	 sym;
    ExprDef	*match;
    VarDef	*def;
d248 7
a254 6
typedef struct _IndicatorNameDef {
    ParseCommon	 common;
    unsigned	 merge;
    int		 ndx;
    ExprDef *	 name;
    Bool	 virtual;
d257 6
a262 5
typedef struct _OutlineDef {
    ParseCommon	 	common;
    Atom 	field;
    int		 	nPoints;
    ExprDef *		points;
d265 7
a271 6
typedef struct _ShapeDef {
    ParseCommon	 common;
    unsigned	 merge;
    Atom	 name;
    int		 nOutlines;
    OutlineDef * outlines;
d274 6
a279 5
typedef struct _KeyDef {
    ParseCommon	 	common;
    unsigned		defined;
    char *		name;
    ExprDef *		expr;
d282 5
a286 4
typedef struct _RowDef {
    ParseCommon		common;
    int			nKeys;
    KeyDef *		keys;
d289 7
a295 6
typedef struct _SectionDef {
    ParseCommon	 common;
    unsigned	 merge;
    Atom	 name;
    int		 nRows;
    RowDef *	 rows;
d298 5
a302 4
typedef struct _OverlayKeyDef {
    ParseCommon		common;
    char 		over[5];
    char 		under[5];
d305 7
a311 6
typedef struct _OverlayDef {
    ParseCommon	 	common;
    unsigned	 	merge;
    Atom	 	name;
    int		 	nKeys;
    OverlayKeyDef *	keys;
d314 7
a320 6
typedef struct _DoodadDef {
    ParseCommon	 common;
    unsigned	 merge;
    unsigned	 type;
    Atom	 name;
    VarDef *	 body;
d328 10
a337 9
typedef struct _XkbFile {
    ParseCommon	 common;
    int		 type;
    char *	 topName;
    char *	 name;
    ParseCommon	*defs;
    int		 id;
    unsigned	 flags;
    Bool	 compiled;
d340 19
a358 23
extern	Bool	CompileKeymap(
    XkbFile	*	/* file */,
    XkbFileInfo *	/* result */,
    unsigned	 	/* merge */
);

extern	Bool	CompileKeycodes(
    XkbFile	*	/* file */,
    XkbFileInfo *	/* result */,
    unsigned	 	/* merge */
);

extern	Bool	CompileGeometry(
    XkbFile	*	/* file */,
    XkbFileInfo *	/* result */,
    unsigned	 	/* merge */
);

extern	Bool	CompileKeyTypes(
    XkbFile	*	/* file */,
    XkbFileInfo *	/* result */,
    unsigned	 	/* merge */
);
d362 10
a371 12
extern	Bool	CompileCompatMap(
    XkbFile	*	/* file */,
    XkbFileInfo *	/* result */,
    unsigned	 	/* merge */,
    LEDInfoPtr *	/* unboundLEDs */
);

extern	Bool	CompileSymbols(
    XkbFile	*	/* file */,
    XkbFileInfo *	/* result */,
    unsigned	 	/* merge */
);
d379 1
a379 1
extern char *	rootDir;
d381 1
a381 1
extern unsigned	dirsToStrip;
d383 12
a394 16
extern	Bool	AddListing(
    char *	/* file */,
    char *	/* map */
);

extern Bool AddMatchingFiles(
    char *	/* head_in */
);

extern	int AddMapOnly(
    char *	/* map */
);

extern	int GenerateListing(
    char *	/* filename */
);
@


1.1.1.1
log
@Importing from X.Org 7.2RC2
@
text
@@
