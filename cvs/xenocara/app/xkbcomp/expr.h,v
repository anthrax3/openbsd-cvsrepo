head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.24
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.22
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.18
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.12
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.10
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.8
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.12
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.8
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.6
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_3:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2011.01.11.20.56.40;	author shadchin;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.20.16.32.06;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.20.43.47;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.20.43.47;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xkbcomp 1.2.0.
ok matthieu@@
@
text
@/************************************************************
 Copyright (c) 1994 by Silicon Graphics Computer Systems, Inc.

 Permission to use, copy, modify, and distribute this
 software and its documentation for any purpose and without
 fee is hereby granted, provided that the above copyright
 notice appear in all copies and that both that copyright
 notice and this permission notice appear in supporting
 documentation, and that the name of Silicon Graphics not be 
 used in advertising or publicity pertaining to distribution 
 of the software without specific prior written permission.
 Silicon Graphics makes no representation about the suitability 
 of this software for any purpose. It is provided "as is"
 without any express or implied warranty.
 
 SILICON GRAPHICS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS 
 SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY 
 AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL SILICON
 GRAPHICS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
 DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, 
 DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE 
 OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION  WITH
 THE USE OR PERFORMANCE OF THIS SOFTWARE.

 ********************************************************/

#ifndef EXPR_H
#define EXPR_H 1

typedef union _ExprResult
{
    char *str;
    int ival;
    unsigned uval;
    XkbKeyNameRec keyName;
} ExprResult;

typedef Bool(*IdentLookupFunc) (XPointer /* priv */ ,
                                Atom /* elem */ ,
                                Atom /* field */ ,
                                unsigned /* type */ ,
                                ExprResult *    /* val_rtrn */
    );

extern char *exprTypeText(unsigned      /* type */
    );

extern int ExprResolveLhs(ExprDef * /* expr */ ,
                          ExprResult * /* elem_rtrn */ ,
                          ExprResult * /* field_rtrn */ ,
                          ExprDef **    /* index_rtrn */
    );

typedef struct _LookupPriv
{
    XPointer priv;
    IdentLookupFunc chain;
    XPointer chainPriv;
} LookupPriv;

typedef struct _LookupEntry
{
    const char *name;
    unsigned result;
} LookupEntry;

typedef struct _LookupTable
{
    char *element;
    LookupEntry *entries;
    struct _LookupTable *nextElement;
} LookupTable;


extern char *exprOpText(unsigned        /* type */
    );

extern int RadioLookup(XPointer /* priv */ ,
                       Atom /* elem */ ,
                       Atom /* field */ ,
                       unsigned /* type */ ,
                       ExprResult *     /* val_rtrn */
    );

extern int SimpleLookup(XPointer /* priv */ ,
                        Atom /* elem */ ,
                        Atom /* field */ ,
                        unsigned /* type */ ,
                        ExprResult *    /* val_rtrn */
    );

extern int TableLookup(XPointer /* priv */ ,
                       Atom /* elem */ ,
                       Atom /* field */ ,
                       unsigned /* type */ ,
                       ExprResult *     /* val_rtrn */
    );

extern int LookupModIndex(XPointer /* priv */ ,
                          Atom /* elem */ ,
                          Atom /* field */ ,
                          unsigned /* type */ ,
                          ExprResult *  /* val_rtrn */
    );

extern int LookupModMask(XPointer /* priv */ ,
                         Atom /* elem */ ,
                         Atom /* field */ ,
                         unsigned /* type */ ,
                         ExprResult *   /* val_rtrn */
    );

extern int ExprResolveModIndex(ExprDef * /* expr */ ,
                               ExprResult * /* val_rtrn */ ,
                               IdentLookupFunc /* lookup */ ,
                               XPointer /* lookupPriv */
    );

extern int ExprResolveModMask(ExprDef * /* expr */ ,
                              ExprResult * /* val_rtrn */ ,
                              IdentLookupFunc /* lookup */ ,
                              XPointer  /* priv */
    );

extern int ExprResolveBoolean(ExprDef * /* expr */ ,
                              ExprResult * /* val_rtrn */ ,
                              IdentLookupFunc /* lookup */ ,
                              XPointer  /* lookupPriv */
    );

extern int ExprResolveInteger(ExprDef * /* expr */ ,
                              ExprResult * /* val_rtrn */ ,
                              IdentLookupFunc /* lookup */ ,
                              XPointer  /* lookupPriv */
    );

extern int ExprResolveFloat(ExprDef * /* expr */ ,
                            ExprResult * /* val_rtrn */ ,
                            IdentLookupFunc /* lookup */ ,
                            XPointer    /* lookupPriv */
    );

extern int ExprResolveString(ExprDef * /* expr */ ,
                             ExprResult * /* val_rtrn */ ,
                             IdentLookupFunc /* lookup */ ,
                             XPointer   /* lookupPriv */
    );

extern int ExprResolveKeyName(ExprDef * /* expr */ ,
                              ExprResult * /* val_rtrn */ ,
                              IdentLookupFunc /* lookup */ ,
                              XPointer  /* lookupPriv */
    );

extern int ExprResolveEnum(ExprDef * /* expr */ ,
                           ExprResult * /* val_rtrn */ ,
                           LookupEntry *        /* values */
    );

extern int ExprResolveMask(ExprDef * /* expr */ ,
                           ExprResult * /* val_rtrn */ ,
                           IdentLookupFunc /* lookup */ ,
                           XPointer     /* lookupPriv */
    );

extern int ExprResolveKeySym(ExprDef * /* expr */ ,
                             ExprResult * /* val_rtrn */ ,
                             IdentLookupFunc /* lookup */ ,
                             XPointer   /* lookupPriv */
    );

#endif /* EXPR_H */
@


1.2
log
@Update to xkbcomp 1.0.4
@
text
@a0 1
/* $Xorg: expr.h,v 1.3 2000/08/17 19:54:30 cpqbld Exp $ */
a25 1
/* $XFree86$ */
d30 6
a35 5
typedef union _ExprResult  {
    char *		str;
    int			ival;
    unsigned		uval;
    XkbKeyNameRec	keyName;
d38 21
a58 23
typedef	Bool	(*IdentLookupFunc)(
	XPointer	/* priv */,
	Atom		/* elem */,
	Atom		/* field */,
	unsigned	/* type */,
	ExprResult *	/* val_rtrn */
);

extern	char *exprTypeText(
    unsigned 		/* type */
);

extern	int ExprResolveLhs(
    ExprDef *		/* expr */,
    ExprResult *	/* elem_rtrn */,
    ExprResult *	/* field_rtrn */,
    ExprDef **		/* index_rtrn */
);

typedef	struct _LookupPriv {
    XPointer 		priv;
    IdentLookupFunc	chain;
    XPointer 		chainPriv;
d61 2
a62 1
typedef struct _LookupEntry {
d64 1
a64 1
    unsigned	result;
d67 5
a71 4
typedef struct _LookupTable {
    char *	 		element;
    LookupEntry	*		entries;
    struct _LookupTable *	nextElement;
d75 96
a170 112
extern char *exprOpText(
    unsigned 		/* type */
);

extern int RadioLookup(
    XPointer 		/* priv */,
    Atom		/* elem */,
    Atom		/* field */,
    unsigned		/* type */,
    ExprResult *	/* val_rtrn */
);

extern int SimpleLookup(
    XPointer 		/* priv */,
    Atom		/* elem */,
    Atom		/* field */,
    unsigned		/* type */,
    ExprResult *	/* val_rtrn */
);

extern int TableLookup(
    XPointer 		/* priv */,
    Atom		/* elem */,
    Atom		/* field */,
    unsigned		/* type */,
    ExprResult *	/* val_rtrn */
);

extern int LookupModIndex(
    XPointer 		/* priv */,
    Atom		/* elem */,
    Atom		/* field */,
    unsigned		/* type */,
    ExprResult *	/* val_rtrn */
);

extern int LookupModMask(
    XPointer 		/* priv */,
    Atom		/* elem */,
    Atom		/* field */,
    unsigned		/* type */,
    ExprResult *	/* val_rtrn */
);

extern int ExprResolveModIndex(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    IdentLookupFunc	/* lookup */,
    XPointer		/* lookupPriv */
);

extern int ExprResolveModMask(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    IdentLookupFunc	/* lookup */,
    XPointer		/* priv */
);

extern int ExprResolveBoolean(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    IdentLookupFunc	/* lookup */,
    XPointer		/* lookupPriv */
);

extern int ExprResolveInteger(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    IdentLookupFunc	/* lookup */,
    XPointer		/* lookupPriv */
);

extern int ExprResolveFloat(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    IdentLookupFunc	/* lookup */,
    XPointer		/* lookupPriv */
);

extern int ExprResolveString(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    IdentLookupFunc	/* lookup */,
    XPointer		/* lookupPriv */
);

extern int ExprResolveKeyName(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    IdentLookupFunc	/* lookup */,
    XPointer		/* lookupPriv */
);

extern int ExprResolveEnum(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    LookupEntry	*	/* values */
);

extern int ExprResolveMask(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    IdentLookupFunc	/* lookup */,
    XPointer		/* lookupPriv */
);

extern int ExprResolveKeySym(
    ExprDef *		/* expr */,
    ExprResult *	/* val_rtrn */,
    IdentLookupFunc	/* lookup */,
    XPointer		/* lookupPriv */
);
@


1.1
log
@Initial revision
@
text
@d65 1
a65 1
    char *	name;
@


1.1.1.1
log
@Importing from X.Org 7.2RC2
@
text
@@
