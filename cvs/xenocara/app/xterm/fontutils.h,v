head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.2
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.13.0.12
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.10
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.8
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.4
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.2
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.2
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.10.0.8
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.6
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.4
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.3.0.6
	OPENBSD_4_5_BASE:1.1.1.3
	OPENBSD_4_4:1.1.1.3.0.4
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.2
	v232:1.1.1.3
	v229:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v225:1.1.1.2
	v216:1.1.1.1
	xterm:1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2017.07.15.19.20.51;	author matthieu;	state Exp;
branches;
next	1.13;
commitid	b9xPQ49d1NNt4zlu;

1.13
date	2014.07.14.08.30.11;	author matthieu;	state Exp;
branches;
next	1.12;
commitid	EnwNNUjlkdrocnMa;

1.12
date	2014.02.14.19.40.03;	author matthieu;	state Exp;
branches;
next	1.11;

1.11
date	2014.01.02.15.14.50;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2011.09.17.11.51.57;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2011.06.07.19.21.06;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2010.10.23.19.14.52;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.08.22.13.38.11;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.08.12.20.46;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.03.25.22.03.51;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.19.00.03.36;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.05.15.58.09;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.03.09.22.13.04;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.11.11.32;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.11.11.32;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.06.15.19.30.21;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.02.16.09.35.00;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Update to xterm 330
@
text
@/* $XTermId: fontutils.h,v 1.119 2017/06/19 08:31:10 tom Exp $ */

/*
 * Copyright 1998-2016,2017 by Thomas E. Dickey
 *
 *                         All Rights Reserved
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the
 * sale, use or other dealings in this Software without prior written
 * authorization.
 */

#ifndef included_fontutils_h
#define included_fontutils_h 1

#include <xterm.h>
/* *INDENT-OFF* */

extern Bool xtermLoadDefaultFonts (XtermWidget /* xw */);
extern Bool xtermOpenFont (XtermWidget /* xw */, const char */* name */, XTermFonts * /* result */, Bool /* force */);
extern XTermFonts * getDoubleFont (TScreen * /* screen */, int /* which */);
extern XTermFonts * getItalicFont (TScreen * /* screen */, int /* which */);
extern XTermFonts * getNormalFont (TScreen * /* screen */, int /* which */);
extern const VTFontNames * defaultVTFontNames(XtermWidget /* xw */);
extern const VTFontNames * xtermFontName (const char */* normal */);
extern const char * whichFontEnum (VTFontEnum /* value */);
extern const char * whichFontList (XtermWidget /* xw */, VTFontList * /* value */);
extern const char * whichFontList2(XtermWidget /* xw */, char ** /* value */);
extern int lookupRelativeFontSize (XtermWidget /* xw */, int /* old */, int /* relative */);
extern int xtermGetFont (const char * /* param */);
extern int xtermLoadFont (XtermWidget /* xw */, const VTFontNames */* fonts */, Bool /* doresize */, int /* fontnum */);
extern void HandleSetFont PROTO_XT_ACTIONS_ARGS;
extern void SetVTFont (XtermWidget /* xw */, int /* i */, Bool /* doresize */, const VTFontNames */* fonts */);
extern void allocFontList (XtermWidget /* xw */, const char * /* name */, XtermFontNames * /* target */, VTFontEnum /* which */, const char * /* source */, Bool /* ttf */);
extern void copyFontList (char *** /* targetp */, char ** /* source */);
extern void initFontLists (XtermWidget /* xw */);
extern void freeFontList (char *** /* targetp */);
extern void freeFontLists (VTFontList * /* lists */);
extern void xtermCloseFont (XtermWidget /* xw */, XTermFonts * /* fnt */);
extern void xtermCloseFonts (XtermWidget /* xw */, XTermFonts * /* fnts[fMAX] */);
extern void xtermComputeFontInfo (XtermWidget /* xw */, VTwin */* win */, XFontStruct */* font */, int /* sbwidth */);
extern void xtermCopyFontInfo (XTermFonts * /* target */, XTermFonts * /* source */);
extern void xtermFreeFontInfo (XTermFonts * /* target */);
extern void xtermSaveFontInfo (TScreen * /* screen */, XFontStruct */* font */);
extern void xtermSetCursorBox (TScreen * /* screen */);
extern void xtermUpdateFontGCs (XtermWidget /* xw */, Bool /* italic */);
extern void xtermUpdateFontInfo (XtermWidget /* xw */, Bool /* doresize */);

#define getIconicFont(screen) (&((screen)->fnt_icon))

#define FirstItemOf(vector) ((vector) ? (vector)[0] : 0)
#define CurrentXftFont(xw)  ((xw)->work.fonts.xft.list_n[0])
#define DefaultFontN(xw)    ((xw)->work.fonts.x11.list_n[0])
#define DefaultFontB(xw)    ((xw)->work.fonts.x11.list_b[0])
#define DefaultFontW(xw)    ((xw)->work.fonts.x11.list_w[0])
#define DefaultFontWB(xw)   ((xw)->work.fonts.x11.list_wb[0])

#if OPT_DEC_CHRSET
extern char *xtermSpecialFont (XtermWidget /* xw */, unsigned /* attr_flags */, unsigned /* draw_flags */, unsigned /* chrset */);
#endif

#define FontLacksMetrics(font) \
	((font)->fs != 0 \
	 && ((font)->fs->per_char == 0))

#define FontIsIncomplete(font) \
	((font)->fs != 0 \
	 && (font)->fs->per_char != 0 \
	 && !(font)->fs->all_chars_exist)

#if OPT_BOX_CHARS

#define ForceBoxChars(screen,ch) \
	(xtermIsDecGraphic(ch) \
	 && (screen)->force_box_chars)

	 /*
	  * Keep track of (some) characters to make the check for missing
	  * characters faster.  If the character is known to be missing,
	  * the cache value is '2'.  If we have checked the character, the
	  * cached value is '1'.
	  */
#if OPT_WIDE_CHARS
#define CheckedKnownMissing(font, ch) \
	 (((ch) < KNOWN_MISSING) && ((font)->known_missing[(Char)(ch)] > 0))
#else
#define CheckedKnownMissing(font, ch) \
	 ((font)->known_missing[(Char)(ch)] > 0)
#endif

#define IsXtermMissingChar(screen, ch, font) \
	 (CheckedKnownMissing(font, ch) \
	  ? ((font)->known_missing[(Char)(ch)] > 1) \
	  : ((FontIsIncomplete(font) && xtermMissingChar(ch, font)) \
	   || ForceBoxChars(screen, ch)))

extern void xtermDrawBoxChar (XtermWidget /* xw */, unsigned /* ch */, unsigned /* attr_flags */, unsigned /* draw_flags */, GC /* gc */, int /* x */, int /* y */, int /* cols */);
#else
#define IsXtermMissingChar(screen, ch, font) False
#endif

#if OPT_BOX_CHARS || OPT_REPORT_FONTS
extern Bool xtermMissingChar (unsigned /* ch */, XTermFonts */* font */);
#endif

#if OPT_LOAD_VTFONTS
extern void HandleLoadVTFonts PROTO_XT_ACTIONS_ARGS;
#endif

#if OPT_LOAD_VTFONTS || OPT_WIDE_CHARS
extern Bool xtermLoadWideFonts (XtermWidget /* w */, Bool /* nullOk */);
extern void xtermSaveVTFonts (XtermWidget /* xw */);
#endif

#define xtermIsDecGraphic(ch)	((ch) > 0 && (ch) < 32)

#if OPT_RENDERFONT
extern Bool xtermXftMissing (XtermWidget /* xw */, XftFont * /* font */, unsigned /* wc */);
extern XTermXftFonts *getMyXftFont (XtermWidget /* xw */, int /* which */, int /* fontnum */);
extern XftFont *getXftFont (XtermWidget /* xw */, VTFontEnum /* which */, int /* fontnum */);
extern void xtermCloseXft (TScreen * /* screen */, XTermXftFonts * /* pub */);
#endif

#if OPT_SHIFT_FONTS
extern String getFaceName (XtermWidget /* xw */, Bool /* wideName */);
extern void HandleLargerFont PROTO_XT_ACTIONS_ARGS;
extern void HandleSmallerFont PROTO_XT_ACTIONS_ARGS;
extern void setFaceName (XtermWidget /* xw */, const char * /*value */);
#endif

#if OPT_WIDE_ATTRS
extern void xtermLoadItalics (XtermWidget /* xw */);
#endif

#if OPT_WIDE_CHARS
extern unsigned ucs2dec (unsigned);
extern unsigned dec2ucs (unsigned);
#endif

/* *INDENT-ON* */

#endif /* included_fontutils_h */
@


1.13
log
@Update to xterm-309. Version 308 tested by several people including
naddy@@ who found a small regression, fixed in 309.
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.94 2014/06/08 21:10:27 tom Exp $ */
d4 1
a4 1
 * Copyright 1998-2013,2014 by Thomas E. Dickey
d40 5
a44 2
extern Bool xtermOpenFont (XtermWidget /* xw */, const char */* name */, XTermFonts * /* result */, fontWarningTypes /* warn */, Bool /* force */);
extern XTermFonts * xtermCloseFont (XtermWidget /* xw */, XTermFonts * /* fnt */);
d46 3
d50 1
a50 1
extern int xtermGetFont(const char * /* param */);
d54 6
d66 1
d68 9
a76 1
extern void xtermUpdateFontGCs (XtermWidget /* xw */, XTermFonts * /* fnts */);
d79 1
a79 1
extern char *xtermSpecialFont (TScreen */* screen */, unsigned /* attr_flags */, unsigned /* draw_flags */, unsigned /* chrset */);
d132 1
a132 1
extern void xtermSaveVTFonts(XtermWidget /* xw */);
d139 3
a141 1
extern void xtermCloseXft(TScreen * /* screen */, XTermXftFonts * /* pub */);
d145 1
a145 1
extern String getFaceName(XtermWidget /* xw */, Bool /* wideName */);
d148 1
a148 1
extern void setFaceName(XtermWidget /* xw */, const char * /*value */);
d152 1
a152 1
extern void xtermLoadItalics(XtermWidget /* xw */);
@


1.12
log
@Update to xterm 301
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.89 2013/12/09 12:18:01 tom Exp $ */
d4 1
a4 1
 * Copyright 1998-2011,2013 by Thomas E. Dickey
d55 1
d58 1
a58 1
extern char *xtermSpecialFont (TScreen */* screen */, unsigned /* atts */, unsigned /* chrset */);
d61 4
d96 1
a96 1
extern void xtermDrawBoxChar (XtermWidget /* xw */, unsigned /* ch */, unsigned /* flags */, GC /* gc */, int /* x */, int /* y */, int /* cols */);
d101 1
a101 1
#if OPT_BOX_CHARS || OPT_REPORT_FONTS 
d126 4
@


1.11
log
@Update to xterm-300. Tested  by ajacoutot@@ and shadchin@@.
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.88 2013/09/11 21:19:50 tom Exp $ */
a90 1
extern Bool xtermMissingChar (unsigned /* ch */, XTermFonts */* font */);
d94 4
@


1.10
log
@Update to xterm-275. Tested by jasper@@.
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.84 2011/09/11 14:59:37 tom Exp $ */
d4 1
a4 1
 * Copyright 1998-2010,2011 by Thomas E. Dickey
a59 2
#if OPT_BOX_CHARS

d65 2
d71 6
d78 2
a79 2
#define CharKnownMissing(font, ch) \
	 (((ch) < 256) && ((font)->known_missing[(Char)(ch)] > 1))
d81 2
a82 2
#define CharKnownMissing(font, ch) \
	 ((font)->known_missing[(Char)(ch)] > 1)
d86 1
a86 1
	 (CharKnownMissing(font, ch) \
@


1.9
log
@Update to xterm 270. Tested by ajacoutot@@, shadchin@@, krw@@ and jasper@@
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.83 2011/04/24 20:47:51 tom Exp $ */
d3 29
a31 31
/************************************************************

Copyright 1998-2010,2011 by Thomas E. Dickey

                        All Rights Reserved

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name(s) of the above copyright
holders shall not be used in advertising or otherwise to promote the
sale, use or other dealings in this Software without prior written
authorization.

********************************************************/
@


1.8
log
@Update to xterm version 264, Tested at least by krw@@, jasper@@, ajacoutot@@.
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.82 2010/10/11 08:13:54 tom Exp $ */
d5 1
a5 1
Copyright 1998-2009,2010 by Thomas E. Dickey
d39 1
d99 1
d120 2
@


1.7
log
@Update to xterm 261. Tested by krw@@, jcs@@.
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.81 2010/06/15 10:58:13 tom Exp $ */
d108 1
a108 1
extern char *getFaceName(XtermWidget /* xw */, Bool /* wideName */);
@


1.6
log
@Update to xterm 258. lightly tested by krw@@, thanks.
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.80 2010/04/16 21:23:13 tom Exp $ */
d5 1
a5 1
Copyright 1998-2008,2009 by Thomas E. Dickey
@


1.5
log
@Update to xterm-255. Tested by stsp@@, oga@@.
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.79 2009/12/31 13:31:52 tom Exp $ */
d43 1
a43 1
extern const VTFontNames * xtermFontName (char */* normal */);
@


1.4
log
@Update to xterm 248, fixing several bugs including a regression with
copy-and-paste. Works for martynas@@, ok matthieu@@
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.76 2009/09/09 23:31:55 tom Exp $ */
d104 1
d108 2
d111 1
a111 1
extern void HandleLargerFont PROTO_XT_ACTIONS_ARGS;
@


1.3
log
@update to xterm 246. Has been in snapshots for some time.
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.75 2009/08/07 22:46:12 tom Exp $ */
d74 1
a74 1
	 ((ch) < 256 && (font)->known_missing[(Char)(ch)])
d77 1
a77 1
	 ((font)->known_missing[(Char)(ch)])
@


1.2
log
@Update to xterm 242. Tested by jsg@@.
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.71 2009/02/13 01:36:41 tom Exp $ */
d62 25
a86 1
extern Bool xtermMissingChar (XtermWidget /* xw */, unsigned /* ch */, XFontStruct */* font */);
d88 2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 5
/* $XTermId: fontutils.h,v 1.57 2006/02/13 01:14:59 tom Exp $ */

/*
 * $XFree86: xc/programs/xterm/fontutils.h,v 1.17 2006/02/13 01:14:59 dickey Exp $
 */
d5 1
a5 1
Copyright 1998-2005,2006 by Thomas E. Dickey
d40 3
a42 3
extern Bool xtermLoadDefaultFonts (XtermWidget /* w */);
extern XFontStruct * xtermOpenFont (TScreen * /* screen */, char */* name */);
extern XFontStruct * xtermCloseFont(TScreen * /* screen */, XFontStruct * /* fnt */);
d44 3
a46 4
extern int lookupRelativeFontSize (TScreen * /* screen */, int /* old */, int /* relative */);
extern int xtermLoadFont (XtermWidget /* xw */,
			  const VTFontNames */* fonts */,
			  Bool /* doresize */, int /* fontnum */);
d49 6
a54 4
extern void xtermCloseFonts(TScreen * /* screen */, XFontStruct ** /* fnts[fMAX] */);
extern void xtermComputeFontInfo (XtermWidget /* xw */, struct _vtwin */* win */, XFontStruct */* font */, int /* sbwidth */);
extern void xtermSaveFontInfo (TScreen */* screen */, XFontStruct */* font */);
extern void xtermSetCursorBox (TScreen */* screen */);
d63 1
a63 1
extern void xtermDrawBoxChar (XtermWidget /* xw */, unsigned /* ch */, unsigned /* flags */, GC /* gc */, int /* x */, int /* y */);
d76 1
a76 2
#if OPT_RENDERFONT && OPT_WIDE_CHARS
extern Bool xtermIsLineDrawing (unsigned /* wc */);
@


1.1.1.1
log
@Importing xterm 216
@
text
@@


1.1.1.2
log
@import xterm 225
@
text
@d1 1
a1 1
/* $XTermId: fontutils.h,v 1.61 2007/03/05 01:09:40 tom Exp $ */
d9 1
a9 1
Copyright 1998-2006,2007 by Thomas E. Dickey
d44 3
a46 3
extern Bool xtermLoadDefaultFonts (XtermWidget /* xw */);
extern XFontStruct * xtermOpenFont (XtermWidget /* xw */, char */* name */);
extern XFontStruct * xtermCloseFont (XtermWidget /* xw */, XFontStruct * /* fnt */);
d48 1
a48 2
extern int lookupRelativeFontSize (XtermWidget /* xw */, int /* old */, int /* relative */);
extern int xtermGetFont(const char * /* param */);
d54 2
a55 2
extern void xtermCloseFonts (XtermWidget /* xw */, XFontStruct ** /* fnts[fMAX] */);
extern void xtermComputeFontInfo (XtermWidget /* xw */, VTwin */* win */, XFontStruct */* font */, int /* sbwidth */);
@


1.1.1.3
log
@Import xterm version 232. tested by many.
@
text
@d1 5
a5 1
/* $XTermId: fontutils.h,v 1.67 2008/01/20 15:39:56 tom Exp $ */
d9 1
a9 1
Copyright 1998-2007,2008 by Thomas E. Dickey
d45 2
a46 2
extern Bool xtermOpenFont (XtermWidget /* xw */, char */* name */, XTermFonts * /* result */);
extern XTermFonts * xtermCloseFont (XtermWidget /* xw */, XTermFonts * /* fnt */);
d55 1
a55 1
extern void xtermCloseFonts (XtermWidget /* xw */, XTermFonts * /* fnts[fMAX] */);
d57 2
a58 4
extern void xtermCopyFontInfo (XTermFonts * /* target */, XTermFonts * /* source */);
extern void xtermFreeFontInfo (XTermFonts * /* target */);
extern void xtermSaveFontInfo (TScreen * /* screen */, XFontStruct */* font */);
extern void xtermSetCursorBox (TScreen * /* screen */);
d67 1
a67 1
extern void xtermDrawBoxChar (XtermWidget /* xw */, unsigned /* ch */, unsigned /* flags */, GC /* gc */, int /* x */, int /* y */, int /* cols */);
d80 2
a81 1
#if OPT_RENDERFONT
@


