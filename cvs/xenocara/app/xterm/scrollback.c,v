head	1.7;
access;
symbols
	OPENBSD_6_0:1.6.0.10
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.8
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2016.08.07.21.27.36;	author matthieu;	state Exp;
branches;
next	1.6;
commitid	psxxjI5z4Vpv2LL4;

1.6
date	2014.07.14.08.30.11;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	EnwNNUjlkdrocnMa;

1.5
date	2013.06.02.19.55.50;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2011.09.17.11.51.57;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.05.08.12.20.46;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.10.31.14.11.57;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2009.09.05.15.58.09;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to xterm-325. Testing by krw@@, shadchin@@ and naddy@@. Thanks
@
text
@/* $XTermId: scrollback.c,v 1.18 2016/05/22 16:34:38 tom Exp $ */

/*
 * Copyright 2009-2014,2016 by Thomas E. Dickey
 *
 *                         All Rights Reserved
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the
 * sale, use or other dealings in this Software without prior written
 * authorization.
 */

#include <xterm.h>

#define REAL_ROW(screen, row) ((row) + (screen)->saved_fifo)
#define ROW2FIFO(screen, row) \
	(unsigned) (REAL_ROW(screen, row) % (screen)->savelines)

/*
 * Given a row-number, find the corresponding data for the line in the VT100
 * widget's saved-line FIFO.  The row-number (from getLineData) is negative.
 * So we just count backwards from the last saved line.
 */
LineData *
getScrollback(TScreen *screen, int row)
{
    LineData *result = 0;

    if (screen->saved_fifo > 0 && REAL_ROW(screen, row) >= 0) {
	unsigned which = ROW2FIFO(screen, row);
	ScrnBuf where = scrnHeadAddr(screen, screen->saveBuf_index, which);
	result = (LineData *) where;
    }

    TRACE(("getScrollback %d -> %d -> %p\n",
	   row, ROW2FIFO(screen, row),
	   (void *) result));
    return result;
}

/*
 * Allocate a new row in the scrollback FIFO, returning a pointer to it.
 */
LineData *
addScrollback(TScreen *screen)
{
    ScrnBuf where = 0;
    unsigned ncols = (unsigned) MaxCols(screen);

    if (screen->saveBuf_index != 0) {
	unsigned which;
	Char *block;

	TRACE(("addScrollback %lu\n", screen->saved_fifo));

	/* first, see which index we'll use */
	which = (unsigned) (screen->saved_fifo % screen->savelines);
	where = scrnHeadAddr(screen, screen->saveBuf_index, which);

	/* discard any obsolete index data */
	if (screen->saved_fifo > screen->savelines) {
	    LineData *prior = (LineData *) where;
	    /*
	     * setupLineData uses the attribs as the first address used from the
	     * data block.
	     */
	    if (prior->attribs != 0) {
		TRACE(("...freeing prior FIFO data in slot %d: %p->%p\n",
		       which, (void *) prior, (void *) prior->attribs));
		free(prior->attribs);
		prior->attribs = 0;
	    }
	    if (screen->saved_fifo > 2 * screen->savelines) {
		screen->saved_fifo -= screen->savelines;
	    }
	}

	/* allocate the new data */
	block = allocScrnData(screen, 1, ncols);

	/* record the new data in the index */
	setupLineData(screen, where, (Char *) block, 1, ncols);

	TRACE(("...storing new FIFO data in slot %d: %p->%p\n",
	       which, (void *) where, block));

	screen->saved_fifo++;
    }
    return (LineData *) where;
}

void
deleteScrollback(TScreen *screen)
{
    unsigned which = ROW2FIFO(screen, -1);
    ScrnBuf where = scrnHeadAddr(screen, screen->saveBuf_index, which);
    LineData *prior = (LineData *) where;
    /*
     * setupLineData uses the attribs as the first address used from the
     * data block.
     */
    if (prior->attribs != 0) {
	TRACE(("...freeing prior FIFO data in slot %d: %p->%p\n",
	       which, (void *) prior, (void *) prior->attribs));
	free(prior->attribs);
	prior->attribs = 0;
    }
    screen->saved_fifo--;
}
@


1.6
log
@Update to xterm-309. Version 308 tested by several people including
naddy@@ who found a small regression, fixed in 309.
@
text
@d1 1
a1 1
/* $XTermId: scrollback.c,v 1.17 2014/05/11 14:08:11 tom Exp $ */
d4 1
a4 1
 * Copyright 2009-2013,2014 by Thomas E. Dickey
a67 1
    unsigned which;
a68 1
    Char *block;
d71 3
@


1.5
log
@Update to xterm 293. Tested by naddy@@ ajacoutot@@
@
text
@d1 1
a1 1
/* $XTermId: scrollback.c,v 1.16 2013/04/23 09:57:05 Bertram.Felgenhauer Exp $ */
d4 1
a4 1
 * Copyright 2009-2011,2013 by Thomas E. Dickey
d45 1
a45 1
getScrollback(TScreen * screen, int row)
d65 1
a65 1
addScrollback(TScreen * screen)
d88 1
a88 1
		       which, (void *) prior, prior->attribs));
d112 1
a112 1
deleteScrollback(TScreen * screen)
d123 1
a123 1
	       which, (void *) prior, prior->attribs));
@


1.4
log
@Update to xterm-275. Tested by jasper@@.
@
text
@d1 1
a1 1
/* $XTermId: scrollback.c,v 1.15 2011/09/11 14:59:40 tom Exp $ */
d4 1
a4 1
 * Copyright 2009-2010,2011 by Thomas E. Dickey
d35 1
a35 1
#define REAL_ROW(screen, row) ((row) + 1 + (screen)->saved_fifo)
a72 1
	screen->saved_fifo++;
d92 3
d106 1
d112 1
a112 1
deleteScrollback(TScreen * screen, int row)
d114 1
a114 1
    unsigned which = ROW2FIFO(screen, row);
d127 1
@


1.3
log
@Update to xterm 258. lightly tested by krw@@, thanks.
@
text
@d1 1
a1 1
/* $XTermId: scrollback.c,v 1.14 2010/04/28 21:47:09 tom Exp $ */
d3 29
a31 31
/************************************************************

Copyright 2009,2010 by Thomas E. Dickey

                        All Rights Reserved

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name(s) of the above copyright
holders shall not be used in advertising or otherwise to promote the
sale, use or other dealings in this Software without prior written
authorization.

********************************************************/
@


1.2
log
@Update to xterm 250
@
text
@d1 1
a1 1
/* $XTermId: scrollback.c,v 1.12 2009/10/12 00:06:18 tom Exp $ */
d5 1
a5 1
Copyright 2009 by Thomas E. Dickey
d37 1
d39 1
a39 1
	(unsigned) (((row) + 1 + (screen)->saved_fifo) % (screen)->savelines)
d49 1
a49 2
    unsigned which = ROW2FIFO(screen, row);
    ScrnBuf where = scrnHeadAddr(screen, screen->saveBuf_index, which);
d51 10
a60 2
    TRACE(("getScrollback %d -> %d -> %p\n", row, which, (void *) where));
    return (LineData *) where;
@


1.1
log
@update to xterm 246. Has been in snapshots for some time.
@
text
@d1 1
a1 1
/* $XTermId: scrollback.c,v 1.11 2009/08/06 08:34:30 tom Exp $ */
d51 1
a51 1
    TRACE(("getScrollback %d -> %d -> %p\n", row, which, where));
d83 1
a83 1
		       which, prior, prior->attribs));
d96 1
a96 1
	       which, where, block));
d114 1
a114 1
	       which, prior, prior->attribs));
@

