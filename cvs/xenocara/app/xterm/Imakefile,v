head	1.11;
access;
symbols
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.6
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.2.0.10
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.8
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.6
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	v232:1.1.1.2
	v229:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v225:1.1.1.2
	v216:1.1.1.1
	xterm:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2016.11.03.14.25.06;	author matthieu;	state Exp;
branches;
next	1.10;
commitid	f4xcYrkdKFtVElPL;

1.10
date	2016.08.07.21.27.36;	author matthieu;	state Exp;
branches;
next	1.9;
commitid	psxxjI5z4Vpv2LL4;

1.9
date	2014.10.05.16.39.19;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	0wVJ6bWh03LWbUdn;

1.8
date	2014.05.09.19.56.40;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2013.08.26.20.06.10;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2013.03.09.14.45.38;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2012.04.14.09.02.46;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2011.08.18.19.47.42;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.07.20.41.27;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.05.15.58.09;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.11.11.13;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.11.11.13;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.06.15.19.29.55;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Update to xterm 327
@
text
@XCOMM $XTermId: Imakefile,v 1.113 2016/10/06 00:56:32 tom Exp $
XCOMM
XCOMM                         Attention xterm porters
XCOMM
XCOMM
XCOMM Xterm assumes that bcopy can handle overlapping arguments.  If your
XCOMM bcopy (or memcpy) cannot, write a routine called bcopy and link it in
XCOMM or add -Dbcopy=mybcopy to the DEFINES list below.
XCOMM

/* Uncomment SCROLLBAR_RIGHT if you want the scroll bar to be on the right */
SCROLLBAR_RIGHT = -DSCROLLBAR_RIGHT

/* Define UTF8support to compile-in support for UTF-8 */
#define UTF8support

/*
 * setgid mode works for systems that do not require setuid to open pty.
 *
 * This feature could also be applied to FreeBSD, but requires the installer
 * to define a "utmp" group as well as chgrp the utmp file to match.
 *
 * Note: InstallXtermSetUID is always defined; InstallXtermSetGID is defined
 * in newer imake configurations.
 */
#if !defined(InstallXtermSetGID) && !InstallXtermSetUID
#if defined(OpenBSDArchitecture) || \
    (defined(LinuxArchitecture) && \
     (LinuxCLibMajorVersion == 6))
#define InstallXtermSetGID YES
#endif
#endif

/*
 * Override the set uid/gid flags to use the utempter library.
 */
#if defined(UseUtempter)
#undef InstallXtermSetUID /* imake sets this */
#undef InstallXtermSetGID /* we set this */
#define InstallXtermSetUID NO
#define InstallXtermSetGID NO
        UTMPLIB = -lutempter
#endif

/*
 * Fixes to allow compile with X11R5, etc.
 */
#ifndef InstGidFlags
#define InstGidFlags -m 2755 -g utmp
#endif

#ifndef InstUidFlags
#define InstUidFlags -m 4711
#endif

#ifndef XkbClientDefines
#define XkbClientDefines /**/
#endif

#ifndef InstallXtermSetUID
#define InstallXtermSetUID NO
#endif

#ifndef InstallXtermSetGID
#define InstallXtermSetGID NO
#endif

#ifndef XkbClientDepLibs
#define XkbClientDepLibs /**/
#endif

#ifndef XkbClientLibs
#define XkbClientLibs /**/
#endif

/* This must come before setting DEFINES */
#if InstallXtermSetGID
CSGIDFLAGS = -DUSE_UTMP_SETGID
INSTSETIDFLAGS = InstGidFlags
#elif InstallXtermSetUID
INSTSETIDFLAGS = InstUidFlags
#else
INSTSETIDFLAGS = NullParameter
#endif

/*
 * Compensate for broken imake configuration.
 */
#ifdef LinuxGnuSourceDefines
# ifdef UseInstalled
   IMAKEDEFINES = -D_GNU_SOURCE
# endif
#endif

#ifndef SpecialCObjectRule
#define SpecialCObjectRule(module,ignore,defines) \
module.o: ; $(CC) -c defines $(CFLAGS) module.c
#endif

#ifndef ProgramTargetName
#define ProgramTargetName(program) program
#endif

/*
 * add -DWTMP and -DLASTLOG if you want them; make sure that bcopy can
 * handle overlapping copies before using it.
 */
#if SetTtyGroup			/* turn on in config/machine.cf */
    TTYGROUPDEF = -DUSE_TTY_GROUP
#endif
#ifdef UsePUCCPtyd		/* turn on in config/site.def */
    PUCCPTYDDEF = -DPUCC_PTYD	/* does not need to be setuid */
         PTYLIB = -lpucc
#endif

#if defined(NetBSDArchitecture) || \
    defined(OpenBSDArchitecture) || \
    defined(FreeBSDArchitecture) || \
    (defined(LinuxArchitecture) && \
     (LinuxCLibMajorVersion == 6) && (LinuxCLibMinorVersion < 1))
         PTYLIB = -lutil
#endif

#ifdef DarwinArchitecture
/* dyld can deadlock if a signal comes in when it is looking up a symbol */
  LOCAL_LDFLAGS = -Wl,-bind_at_load
#endif

 OSMAJORVERSION = OSMajorVersion
 OSMINORVERSION = OSMinorVersion

#if	defined(NTOArchitecture)	|| \
	defined(OpenBSDArchitecture)	|| \
	defined(SGIArchitecture)	|| \
	defined(SunArchitecture)
TERMCAPDEFINES=-DUSE_TERMINFO -DHAVE_TIGETSTR
#elif   defined(LinuxArchitecture)
# if LinuxUsesNcurses
TERMCAPDEFINES=-DUSE_TERMINFO -DHAVE_TIGETSTR
# endif
#endif

#if !defined(OS2Architecture) && !defined(__GNU__) && !defined(Minix3Architecture)
#if defined(UseUtempter)
        UTMPDEF = -DUSE_UTEMPTER
#else
        UTMPDEF = -DUTMP
#endif
#endif

#ifdef UTF8support
    UTF8_OPTION = -DOPT_WIDE_CHARS -DOPT_LUIT_PROG
        UTF8SRC = charclass.c precompose.c wcwidth.c xutf8.c
        UTF8OBJ = charclass.o precompose.o wcwidth.o xutf8.o
#endif
#if BuildXftLibrary
#define XRenderSupport
#endif
#ifdef XRenderSupport
         XRFDEF = -DXRENDERFONT -DXFREE86_FT2
        XRFLIBS = XftClientLibs
     XRFDEPLIBS = XftClientDepLibs
    XRFINCLUDES = $(XFTINCLUDES)
#endif
#if !HasPutenv
      PUTENVDEF = -DNOPUTENV
#endif
#ifdef DumpsXTerm
       DUMPSDEF = -DOPT_SCREEN_DUMPS=1
#endif
#ifdef RegisXTerm
       SIXELDEF = -DOPT_REGIS_GRAPHICS=1
#endif
#ifdef SixelXTerm
       SIXELDEF = -DOPT_SIXEL_GRAPHICS=1
#endif
#ifdef TraceXTerm
       TRACEDEF = -DOPT_TRACE=1
#endif
   MAIN_DEFINES = $(UTMPDEF) $(TTYGROUPDEF) $(PUCCPTYDDEF) $(CSGIDFLAGS) \
		  -DOSMAJORVERSION=$(OSMAJORVERSION) \
		  -DOSMINORVERSION=$(OSMINORVERSION)
   MISC_DEFINES = /* -DALLOWLOGGING -DALLOWLOGFILEEXEC */
    XKB_DEFINES = XkbClientDefines
   PATH_DEFINES = -DPROJECTROOT=$(PROJECTROOT)
        DEFINES = $(XKB_DEFINES) $(TERMCAPDEFINES) $(FEATURE_DEFINES) $(SCROLLBAR_RIGHT) $(UTF8_OPTION) $(XRFDEF) $(PATH_DEFINES) $(PUTENVDEF) $(IMAKEDEFINES) $(SIXELDEF) $(TRACEDEF) $(DUMPSDEF)
       INCLUDES = -I. $(XRFINCLUDES)

        MAINSRC = main.c
        MAINOBJ = main.o
#ifdef DumpsXTerm
       DUMPSSRC = html.c svg.c
       DUMPSOBJ = html.o svg.o
#endif
#ifdef RegisXTerm
       SIXELSRC = graphics_regis.c
       SIXELOBJ = graphics_regis.o
#endif
#ifdef SixelXTerm
       SIXELSRC = graphics_sixel.c
       SIXELOBJ = graphics_sixel.o
#endif
#ifdef TraceXTerm
       TRACESRC = trace.c
       TRACEOBJ = trace.o
#endif
          SRCS1 = button.c cachedGCs.c charproc.c charsets.c cursor.c \
		  data.c doublechr.c fontutils.c input.c \
		  linedata.c menu.c misc.c print.c ptydata.c scrollback.c \
		  screen.c scrollbar.c tabs.c util.c version.c xstrings.c \
		  xtermcap.c TekPrsTbl.c Tekproc.c VTPrsTbl.c \
		  $(MAINSRC) $(EXTRASRC) $(UTF8SRC) $(SIXELSRC) $(TRACESRC) $(DUMPSSRC)
          OBJS1 = button.o cachedGCs.o charproc.o charsets.o cursor.o \
		  data.o doublechr.o fontutils.o input.o \
		  linedata.o menu.o misc.o print.o ptydata.o scrollback.o \
		  screen.o scrollbar.o tabs.o util.o version.o xstrings.o \
		  xtermcap.o TekPrsTbl.o Tekproc.o VTPrsTbl.o \
		  $(MAINOBJ) $(EXTRAOBJ) $(UTF8OBJ) $(SIXELOBJ) $(TRACEOBJ) $(DUMPSOBJ)
          SRCS2 = resize.c version.c xstrings.c
          OBJS2 = resize.o version.o xstrings.o
           SRCS = $(SRCS1) $(SRCS2)
           OBJS = $(OBJS1) $(OBJS2)
       PROGRAMS = ProgramTargetName(resize) ProgramTargetName(xterm)
       DEPLIBS1 = XkbClientDepLibs XawClientDepLibs $(XRFDEPLIBS)
       DEPLIBS2 =

#ifndef TermcapLibrary
#if SystemV && !defined(MacIIArchitecture)
#if	defined(CrayArchitecture) || \
	(defined(HPArchitecture) && (OSMajorVersion < 10)) || \
	defined(RsArchitecture) || \
	defined(SCOArchitecture) || \
	defined(USLArchitecture)
#define TermcapLibrary -lcurses		/* special cases of System V */
#else
#define TermcapLibrary -ltermlib	/* usually in here */
#endif
#else
#define TermcapLibrary -ltermcap	/* bsd puts it here */
#endif
#endif

     TERMCAPLIB = TermcapLibrary

AllTarget($(PROGRAMS))

VTPARSE_H = VTparse.h VTparse.hin
TEKPARSE_H = Tekparse.h Tekparse.hin

.SUFFIXES : .def .hin
.def.hin :
	awk '/^CASE_/{printf "#define %s %d\n", $$1, n++}' < $< >$@@

SpecialCObjectRule(main,$(_NOOP_),$(MAIN_DEFINES))
SpecialCObjectRule(menu,$(_NOOP_),$(MISC_DEFINES))
SpecialCObjectRule(misc,$(VTPARSE_H),$(MISC_DEFINES))
SpecialCObjectRule(VTPrsTbl,$(VTPARSE_H),$(MISC_DEFINES))
SpecialCObjectRule(charproc,$(VTPARSE_H),$(MISC_DEFINES))
SpecialCObjectRule(data,$(_NOOP_),$(MISC_DEFINES))
SpecialCObjectRule(TekPrsTbl,$(TEKPARSE_H),$(MISC_DEFINES))
SpecialCObjectRule(TekProc,$(TEKPARSE_H),$(MISC_DEFINES))

#if InstallXtermSetUID
SetUIDProgramTarget(xterm,$(OBJS1),$(DEPLIBS1),$(XRFLIBS) XkbClientLibs XawClientLibs,$(TERMCAPLIB) $(PTYLIB))
#else
NormalProgramTarget(xterm,$(OBJS1),$(DEPLIBS1),$(XRFLIBS) XkbClientLibs XawClientLibs,$(TERMCAPLIB) $(UTMPLIB) $(PTYLIB))
#endif

#if defined(OpenBSDArchitecture) || defined(MirBSDArchitecture)
/* On OpenBSD xterm is now setgid utmp */
INSTUIDFLAGS= -m 2555 -g utmp
#endif

#if InstallXtermSetUID && defined(SunArchitecture) && HasSharedLibraries && (OSMajorVersion < 5)
#if AlternateUsrLibDir
#if ((OSMajorVersion == 4) && (OSMinorVersion >= 1))
LDOVERRIDE = -L$(DESTDIR)$(USRLIBDIR)
#else
#if HasGcc
LDOVERRIDE = -static -L$(DESTDIR)$(USRLIBDIR)
#else
LDOVERRIDE = -Bstatic -L$(DESTDIR)$(USRLIBDIR)
LDRESUME = -Bdynamic
#endif
#endif
#endif
install::
	MakeDir($(DESTDIR)$(BINDIR))
	RemoveFile(ProgramTargetName(xterm.inst))
	LinkRule(ProgramTargetName(xterm.inst),$(CDEBUGFLAGS) $(CCOPTIONS)
	$(EXTRA_LDOPTIONS) $(LOCAL_LDFLAGS),$(OBJS1),$(LDOVERRIDE)
	$(XRFLIBS) XawClientLibs $(LDRESUME) $(LDLIBS) $(TERMCAPLIB)
	$(PTYLIB))
	$(INSTALL) -c $(INSTPGMFLAGS) $(INSTSETIDFLAGS) ProgramTargetName(xterm.inst) $(DESTDIR)$(BINDIR)/ProgramTargetName(xterm)
	RemoveFile(ProgramTargetName(xterm.inst))
#else
InstallProgramWithFlags(xterm,$(BINDIR),$(INSTSETIDFLAGS))
#endif

InstallNamedProg(uxterm,uxterm,$(BINDIR))

/*
 * Link with the termcap library if USE_TERMCAP is defined in resize.c
 */
#if	defined(NTOArchitecture)	|| \
	defined(LinuxArchitecture)	|| \
	defined(OpenBSDArchitecture)	|| \
	defined(SGIArchitecture)	|| \
	defined(SunArchitecture)
NormalProgramTarget(resize,$(OBJS2),$(DEPLIBS2),NullParameter,NullParameter)
#else
NormalProgramTarget(resize,$(OBJS2),$(DEPLIBS2),NullParameter,$(TERMCAPLIB))
#endif

InstallProgramWithFlags(resize,$(BINDIR),NullParameter)

/*
 * termcap is a special name that does not install correctly with
 * InstallNamedNonExec()
 */
install::
	MakeDir($(DESTDIR)$(LIBDIR)/etc)
	$(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) termcap \
		$(DESTDIR)$(LIBDIR)/etc/xterm.termcap
InstallNamedNonExec(terminfo,xterm.terminfo,$(LIBDIR)/etc)

InstallAppDefaults(XTerm)
InstallAppDefaults(UXTerm)
InstallAppDefaultsLong(XTerm-col,XTerm-color)
InstallManPage(xterm,$(MANDIR))
InstallManPage(resize,$(MANDIR))

cleandir::
	$(RM) *parse.hin

DependTarget()
@


1.10
log
@Update to xterm-325. Testing by krw@@, shadchin@@ and naddy@@. Thanks
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.112 2016/01/28 01:56:53 Jens.Schweikhardt Exp $
d247 7
d256 3
a258 2
SpecialCObjectRule(misc,$(_NOOP_),$(MISC_DEFINES))
SpecialCObjectRule(charproc,$(_NOOP_),$(MISC_DEFINES))
d260 2
d332 4
@


1.9
log
@Update to xterm 311. ok shadchin@@
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.111 2014/07/22 22:29:17 tom Exp $
d168 3
d186 1
a186 1
        DEFINES = $(XKB_DEFINES) $(TERMCAPDEFINES) $(FEATURE_DEFINES) $(SCROLLBAR_RIGHT) $(UTF8_OPTION) $(XRFDEF) $(PATH_DEFINES) $(PUTENVDEF) $(IMAKEDEFINES) $(SIXELDEF) $(TRACEDEF)
d191 4
d212 1
a212 1
		  $(MAINSRC) $(EXTRASRC) $(UTF8SRC) $(SIXELSRC) $(TRACESRC)
d218 1
a218 1
		  $(MAINOBJ) $(EXTRAOBJ) $(UTF8OBJ) $(SIXELOBJ) $(TRACEOBJ)
@


1.8
log
@Update to xterm 304. With help of shadchin@@

tested by ajacoutot@@ and shadchin@@
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.110 2014/04/11 19:36:41 Ross.Combs Exp $
d143 1
a143 1
#if !defined(OS2Architecture) && !defined(__GNU__)
@


1.7
log
@Update to xterm 296. Sixel graphics disabled for now.
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.109 2013/06/23 22:32:37 tom Exp $
d168 3
d188 4
d193 2
a194 2
       SIXELSRC = graphics.c
       SIXELOBJ = graphics.o
@


1.6
log
@Update to xterm 291. Tested by many.
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.107 2013/01/01 12:16:40 tom Exp $
d168 3
d180 1
a180 1
        DEFINES = $(XKB_DEFINES) $(TERMCAPDEFINES) $(FEATURE_DEFINES) $(SCROLLBAR_RIGHT) $(UTF8_OPTION) $(XRFDEF) $(PATH_DEFINES) $(PUTENVDEF) $(IMAKEDEFINES) $(TRACEDEF)
d185 4
d198 1
a198 1
		  $(MAINSRC) $(EXTRASRC) $(UTF8SRC) $(TRACESRC)
d204 1
a204 1
		  $(MAINOBJ) $(EXTRAOBJ) $(UTF8OBJ) $(TRACEOBJ)
@


1.5
log
@Update to xterm 278. Tested by mpi@@, shadchin@@
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.105 2011/11/29 10:19:20 Thorsten.Glaser Exp $
a128 13
#ifdef OS2Architecture
/*
 * Only used in os2main.c, see ptyx.h for OPT_I18N_SUPPORT
 * <werner@@suse.de>
 */
#if XtermWithI18N
        I18NDEF = -DI18N
      FEATURE_DEFINES = -DDEBUG -DALLOWLOGGING $(I18NDEF)
#else
      FEATURE_DEFINES = -DDEBUG -DALLOWLOGGING
#endif
#endif

a179 4
#ifdef OS2Architecture
        MAINSRC = os2main.c
        MAINOBJ = os2main.o
#else
a181 1
#endif
d189 2
a190 2
		  screen.c scrollbar.c tabs.c util.c xstrings.c xtermcap.c \
		  TekPrsTbl.c Tekproc.c VTPrsTbl.c \
d195 2
a196 2
		  screen.o scrollbar.o tabs.o util.o xstrings.o xtermcap.o \
		  TekPrsTbl.o Tekproc.o VTPrsTbl.o \
d198 2
a199 2
          SRCS2 = resize.c xstrings.c
          OBJS2 = resize.o xstrings.o
@


1.4
log
@Update to xterm 271. Tested by shadchin@@ and ajacoutot@@
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.104 2011/07/02 00:48:49 tom Exp $
d254 5
@


1.3
log
@Update to xterm version 269.
Tested and ok ajacoutot@@, jasper@@, krw@@, shadchin@@
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.103 2011/02/19 13:09:15 tom Exp $
a145 1
	defined(LinuxArchitecture)	|| \
d150 4
@


1.2
log
@update to xterm 246. Has been in snapshots for some time.
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.102 2009/04/27 19:26:34 tom Exp $
a9 2
XCOMM $XFree86: xc/programs/xterm/Imakefile,v 3.73 2006/04/10 00:34:36 dickey Exp $
XCOMM
d144 8
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.99 2006/07/21 00:11:15 tom Exp $
d195 1
a195 1
          SRCS1 = button.c charproc.c charsets.c cursor.c \
d197 2
a198 2
		  menu.c misc.c print.c ptydata.c \
		  screen.c scrollbar.c tabs.c util.c xstrings.c \
d201 1
a201 1
          OBJS1 = button.o charproc.o charsets.o cursor.o \
d203 2
a204 2
		  menu.o misc.o print.o ptydata.o \
		  screen.o scrollbar.o tabs.o util.o xstrings.o \
@


1.1.1.1
log
@Importing xterm 216
@
text
@@


1.1.1.2
log
@import xterm 225
@
text
@d1 1
a1 1
XCOMM $XTermId: Imakefile,v 1.101 2007/03/18 21:06:18 tom Exp $
d195 1
a195 1
          SRCS1 = button.c cachedGCs.c charproc.c charsets.c cursor.c \
d198 1
a198 1
		  screen.c scrollbar.c tabs.c util.c xstrings.c xtermcap.c \
d201 1
a201 1
          OBJS1 = button.o cachedGCs.o charproc.o charsets.o cursor.o \
d204 1
a204 1
		  screen.o scrollbar.o tabs.o util.o xstrings.o xtermcap.o \
@

