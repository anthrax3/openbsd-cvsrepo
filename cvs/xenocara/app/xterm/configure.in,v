head	1.27;
access;
symbols
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.26.0.4
	OPENBSD_6_0_BASE:1.26
	OPENBSD_5_9:1.26.0.2
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.25.0.4
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.2
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.24.0.2
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.22.0.2
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.16.0.2
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.2
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.4.0.4
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.1.1.4
	OPENBSD_4_3:1.1.1.4.0.2
	v232:1.1.1.4
	v229:1.1.1.3
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v225:1.1.1.2
	v216:1.1.1.1
	xterm:1.1.1;
locks; strict;
comment	@# @;


1.27
date	2016.08.07.21.27.36;	author matthieu;	state Exp;
branches;
next	1.26;
commitid	psxxjI5z4Vpv2LL4;

1.26
date	2015.09.05.14.11.46;	author matthieu;	state Exp;
branches;
next	1.25;
commitid	YVUODLQ4QcYTuGkb;

1.25
date	2015.01.18.20.24.40;	author matthieu;	state Exp;
branches;
next	1.24;
commitid	PDdlFuihcMifzxwp;

1.24
date	2014.07.14.08.30.11;	author matthieu;	state Exp;
branches;
next	1.23;
commitid	EnwNNUjlkdrocnMa;

1.23
date	2014.05.09.19.56.40;	author matthieu;	state Exp;
branches;
next	1.22;

1.22
date	2014.02.14.19.40.02;	author matthieu;	state Exp;
branches;
next	1.21;

1.21
date	2014.01.02.15.14.50;	author matthieu;	state Exp;
branches;
next	1.20;

1.20
date	2013.08.26.20.06.11;	author matthieu;	state Exp;
branches;
next	1.19;

1.19
date	2013.06.02.19.55.50;	author matthieu;	state Exp;
branches;
next	1.18;

1.18
date	2013.03.09.14.45.38;	author matthieu;	state Exp;
branches;
next	1.17;

1.17
date	2013.01.04.16.40.18;	author matthieu;	state Exp;
branches;
next	1.16;

1.16
date	2012.06.07.20.20.23;	author matthieu;	state Exp;
branches;
next	1.15;

1.15
date	2012.04.14.09.02.46;	author matthieu;	state Exp;
branches;
next	1.14;

1.14
date	2011.09.17.11.51.57;	author matthieu;	state Exp;
branches;
next	1.13;

1.13
date	2011.08.28.17.40.55;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2011.08.18.19.47.42;	author matthieu;	state Exp;
branches;
next	1.11;

1.11
date	2011.06.07.19.21.06;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2010.11.29.20.10.09;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2010.08.22.13.38.11;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2010.05.08.12.20.46;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.03.25.22.03.51;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2009.09.05.16.06.57;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2009.09.05.15.58.09;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.06.20.10.20;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.08.25.18.05.57;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.03.19.21.15.46;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.11.11.29;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.11.11.29;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.06.15.19.30.17;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2007.08.25.18.53.50;	author matthieu;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.02.16.09.34.56;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.27
log
@Update to xterm-325. Testing by krw@@, shadchin@@ and naddy@@. Thanks
@
text
@dnl $XTermId: configure.in,v 1.340 2016/05/28 16:51:40 tom Exp $
dnl
dnl -----------------------------------------------------------------------------
dnl this file is part of xterm
dnl
dnl Copyright 1997-2015,2016 by Thomas E. Dickey
dnl 
dnl                         All Rights Reserved
dnl 
dnl Permission is hereby granted, free of charge, to any person obtaining a
dnl copy of this software and associated documentation files (the
dnl "Software"), to deal in the Software without restriction, including
dnl without limitation the rights to use, copy, modify, merge, publish,
dnl distribute, sublicense, and/or sell copies of the Software, and to
dnl permit persons to whom the Software is furnished to do so, subject to
dnl the following conditions:
dnl 
dnl The above copyright notice and this permission notice shall be included
dnl in all copies or substantial portions of the Software.
dnl 
dnl THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
dnl OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
dnl MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
dnl IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
dnl CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
dnl TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
dnl SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
dnl 
dnl Except as contained in this notice, the name(s) of the above copyright
dnl holders shall not be used in advertising or otherwise to promote the
dnl sale, use or other dealings in this Software without prior written
dnl authorization.
dnl ---------------------------------------------------------------------------
dnl Process this file with autoconf to produce a configure script.
dnl
AC_PREREQ(2.52.20121002)
AC_INIT
AC_CONFIG_SRCDIR([charproc.c])
AC_CONFIG_HEADER(xtermcfg.h:xtermcfg.hin)
CF_CHECK_CACHE

###	checks for alternative programs

dnl Only add to this case statement when a system has a compiler that is not
dnl detected by AC_PROG_CC.
case "$host_os" in
(openedition)	: ${CFLAGS="-O2 -Wc,dll -Wl,EDIT=NO"}
		: ${CPPFLAGS="-D_ALL_SOURCE"}
		: ${LIBS="/usr/lib/Xaw.x /usr/lib/SM.x /usr/lib/ICE.x /usr/lib/X11.x"}
		: ${CC=c89};;
(darwin*)
		: ${LDFLAGS}="${LDFLAGS} -Wl,-bind_at_load";;
esac

CF_PROG_CC
AC_PROG_CPP
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S
AC_ARG_PROGRAM
CF_PROG_LINT

###	checks for compiler characteristics
CF_XOPEN_SOURCE
CF_SIGWINCH

###	checks for header files
AC_CHECK_HEADERS( \
ncurses/curses.h \
ncurses/term.h \
stdlib.h \
sys/ptem.h sys/ttydefaults.h \
term.h \
termios.h \
unistd.h \
wchar.h \
)
AC_HEADER_TIME
AM_LANGINFO_CODESET

###	checks for typedefs
CF_SIG_ATOMIC_T
AC_CHECK_TYPE(time_t, long)
CF_TYPE_CC_T
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_UID_T
AC_TYPE_OFF_T

###	checks for library functions
AC_CHECK_FUNCS( \
	gethostname \
	getlogin \
	initgroups \
	mkdtemp \
	putenv \
	unsetenv \
	sched_yield \
	setpgid \
	strftime \
	tcgetattr \
	waitpid \
	wcswidth \
	wcwidth )
CF_UTMP
CF_STRUCT_LASTLOG
CF_POSIX_SAVED_IDS

CF_HELP_MESSAGE(Compile/Install Options:)
CF_FUNC_TGETENT

CF_WITH_APP_CLASS(XTerm)
CF_WITH_APP_DEFAULTS
CF_WITH_ICON_NAME(xterm-color)
CF_WITH_ICON_SYMLINK(xterm)
CF_WITH_ICON_THEME([icons/$ICON_NAME icons/${ICON_NAME}_48x48],,,icons/${ICON_NAME}_48x48)
CF_DISABLE_DESKTOP(xterm)
CF_WITH_DESKTOP_CATEGORY(xterm,
	[*rxvt*|konsole|*-terminal],
	[System|TerminalEmulator|Utility|*])

AC_MSG_CHECKING(for install-permissions reference)
AC_ARG_WITH(reference,
	[  --with-reference=XXX    program to use as permissions-reference],
	[with_reference=$withval],
	[with_reference=xterm])
AC_MSG_RESULT($with_reference)

with_full_paths=yes
CF_PATH_PROG(XTERM_PATH,$with_reference)

# If any of --program-prefix, --program-suffix or --program-transform-name is
# given, accept an option tell the makefile to create a symbolic link, e.g.,
# to "xterm" on install.
XTERM_SYMLINK=NONE
AC_SUBST(XTERM_SYMLINK)
if test "$program_transform_name" != "'s,,,'" ; then
cf_name=`echo "$program_transform_name" | sed -e '[s,\\$\\$,$,g]'`
cf_name=`echo xterm |sed -e "$cf_name"`
AC_MSG_CHECKING(for symbolic link to create to $cf_name)
AC_ARG_WITH(xterm-symlink,
	[  --with-xterm-symlink=XXX make symbolic link to installed xterm],
	[with_symlink=$withval],
	[with_symlink=xterm])
AC_MSG_RESULT($with_symlink)
test "$with_symlink" = yes && with_symlink=xterm
test -n "$with_symlink" && \
	test "$with_symlink" != no && \
	test "$with_symlink" != $cf_name && \
	XTERM_SYMLINK="$with_symlink"
fi

AC_MSG_CHECKING(if you want to disable openpty)
CF_ARG_DISABLE(openpty,
	[  --disable-openpty       disable openpty, prefer other interfaces],
	[disable_openpty=yes],
	[disable_openpty=no],
	no)
AC_MSG_RESULT($disable_openpty)

AC_MSG_CHECKING(if you want to disable setuid)
CF_ARG_DISABLE(setuid,
	[  --disable-setuid        disable setuid in xterm, do not install setuid/setgid],
	[disable_setuid=yes],
	[disable_setuid=no],
	no)
AC_MSG_RESULT($disable_setuid)

AC_MSG_CHECKING(if you want to disable setgid)
CF_ARG_DISABLE(setgid,
	[  --disable-setgid        disable setgid in xterm, do not install setuid/setgid],
	[disable_setgid=yes],
	[disable_setgid=no],
	no)
AC_MSG_RESULT($disable_setgid)

AC_MSG_CHECKING(if you want to run xterm setuid to a given user)
AC_ARG_WITH(setuid,
	[  --with-setuid=XXX       use the given setuid user],
	[use_given_setuid=$withval],
	[use_given_setuid=no])
AC_MSG_RESULT($use_given_setuid)

if test "$use_given_setuid" != no ; then
	if test "$use_given_setuid" = yes ; then
		cf_cv_given_setuid=root
	else
		cf_cv_given_setuid=$use_given_setuid
	fi
	# inherit SINSTALL_OPTS from environment to allow packager to customize it.
	SINSTALL_OPTS="$SINSTALL_OPTS u+s -u $cf_cv_given_setuid"
fi

AC_MSG_CHECKING(if you want to run xterm setgid to match utmp/utmpx file)
AC_ARG_WITH(utmp-setgid,
	[  --with-utmp-setgid=XXX  use setgid to match utmp/utmpx file],
	[use_utmp_setgid=$withval],
	[use_utmp_setgid=no])
AC_MSG_RESULT($use_utmp_setgid)

if test "$use_utmp_setgid" != no ; then
	if test "$use_utmp_setgid" = yes ; then
		CF_UTMP_GROUP
	else
		cf_cv_utmp_group=$use_utmp_setgid
	fi
	if test "$cf_cv_posix_saved_ids" != yes ; then
		AC_MSG_ERROR(Your system does not support POSIX saved-ids)
	fi
	AC_DEFINE(USE_UTMP_SETGID,1,[Define to 1 if we should use setgid to access utmp/utmpx])
	SINSTALL_OPTS="$SINSTALL_OPTS g+s -g $cf_cv_utmp_group"
fi

AC_SUBST(SINSTALL_OPTS)

AC_MSG_CHECKING(if you want to link with utempter)
AC_ARG_WITH(utempter,
	[  --with-utempter         use utempter library for access to utmp],
	[use_utempter=$withval],
	[use_utempter=no])
AC_MSG_RESULT($use_utempter)

if test "$use_utempter" = yes ; then
	CF_UTEMPTER
	test "$cf_cv_have_utempter" != yes && use_utempter=no
else
	use_utempter=no
fi

# Some configurations permit (or require) either setuid or setgid mode.
# Let the user decide.
if test "$use_utempter" = yes ; then
	if test "${enable_setuid+set}" != set ; then
		disable_setuid=yes
		CF_VERBOSE([No --disable-setuid option given, force to yes])
	fi
fi

###	checks for external data
CF_ERRNO
CF_TTY_GROUP

###	checks for system services and user specified options

CF_POSIX_WAIT
CF_SYSV
CF_SVR4
CF_X_TOOLKIT

AC_CHECK_HEADERS( \
	X11/DECkeysym.h \
	X11/Sunkeysym.h \
	X11/XF86keysym.h \
	X11/XKBlib.h \
	X11/Xpoll.h \
	X11/extensions/XKB.h \
	)

CF_WITH_XPM
CF_WITH_XINERAMA
CF_X_ATHENA
CF_TYPE_FD_MASK
CF_TERMIO_C_ISPEED

# If we notice Xcursor, there is a workaround needed.
AC_CHECK_LIB(Xcursor, XcursorGetTheme,[AC_DEFINE(HAVE_LIB_XCURSOR)])

LIBS="$LIBS $X_EXTRA_LIBS"

CF_FUNC_GRANTPT
CF_XKB_QUERY_EXTENSION
CF_XKB_KEYCODE_TO_KEYSYM
CF_XKB_BELL_EXT

AC_CHECK_FUNCS(Xutf8LookupString, [],[
	EXTRAHDRS="$EXTRAHDRS xutf8.h"
	EXTRASRCS="$EXTRASRCS xutf8.c"
	EXTRAOBJS="$EXTRAOBJS xutf8.o"
])

CF_WITH_IMAKE_CFLAGS($(MAIN_DEFINES) $(VENDORMANDEFS))
CF_WITH_MAN2HTML

# If we have already established that there is a full termcap implementation,
# suppress the definitions for terminfo that we make have imported from the
# imake-file.
if test "x$cf_cv_lib_tgetent" != xno || test "x$cf_cv_lib_part_tgetent" != xno ; then
	case "$IMAKE_CFLAGS" in
	(*-DUSE_TERMINFO\ -DHAVE_TIGETSTR*)
		CF_UNDO_CFLAGS(IMAKE_CFLAGS,terminfo,[-DUSE_TERMINFO[[ 	]]*-DHAVE_TIGETSTR[[ 	]]*])
		CF_UNDO_CFLAGS(CPPFLAGS,terminfo,[-DUSE_TERMINFO[[ 	]]*-DHAVE_TIGETSTR[[ 	]]*])
		;;
	esac
fi

CF_HELP_MESSAGE(Terminal Configuration:)

AC_MSG_CHECKING(for default terminal-id)
AC_ARG_WITH(terminal-id,
	[  --with-terminal-id=V    set default decTerminalID (default: vt420)],
	[default_termid=$withval],
	[default_termid=vt420])
AC_MSG_RESULT($default_termid)
case $default_termid in
(vt*)	default_termid=`echo $default_termid | sed -e 's/^..//'`
	;;
esac
AC_DEFINE_UNQUOTED(DFT_DECID,"$default_termid",[default terminal-id])
AC_SUBST(default_termid)

AC_MSG_CHECKING(for default terminal-type)
AC_ARG_WITH(terminal-type,
	[  --with-terminal-type=T  set default $TERM (default: xterm)],
	[default_TERM=$withval],
	[default_TERM=xterm])
AC_MSG_RESULT($default_TERM)
AC_DEFINE_UNQUOTED(DFT_TERMTYPE,"$default_TERM",[default terminal-type])
AC_SUBST(default_TERM)

###############################################################################
AC_MSG_CHECKING(if backarrow-key should be BS)
CF_ARG_DISABLE(backarrow-key,
	[  --enable-backarrow-key  set default backarrowKey resource (default: true)],
	[backarrow_is_bs=$enableval],
	[backarrow_is_bs=yes])
CF_XBOOL_RESULT(DEF_BACKARO_BS,backarrow_is_bs,[Define to 1 if backarrow-key should be BS])

AC_MSG_CHECKING(if backarrow-key should be treated as erase)
CF_ARG_ENABLE(backarrow-is-erase,
	[  --enable-backarrow-is-erase set default backarrowKeyIsErase resource (default: false)],
	[backarrow_is_erase=$enableval],
	[backarrow_is_erase=no])
CF_XBOOL_RESULT(DEF_BACKARO_ERASE,backarrow_is_erase,[Define to 1 if backarrow-key should be treated as erase])

AC_MSG_CHECKING(for default backspace/DEL setting)
AC_ARG_ENABLE(delete-is-del,
	[  --enable-delete-is-del  set default deleteIsDEL resource (default: maybe)],
	[delete_is_del=$enableval],
	[delete_is_del=maybe])
CF_XBOOL_RESULT(DEFDELETE_DEL,delete_is_del,[Define to 1 if default backspace/DEL setting is DEL])

AC_MSG_CHECKING(for default pty initial erase setting)
AC_ARG_ENABLE(pty-erase,
	[  --enable-pty-erase      set default ptyInitialErase resource (default: maybe)],
	[initial_erase=$enableval],
	[initial_erase=False])
CF_XBOOL_RESULT(DEF_INITIAL_ERASE,initial_erase,[Define to 1 if default pty initial erase setting is TRUE])

AC_MSG_CHECKING(if alt should send ESC)
CF_ARG_ENABLE(alt-sends-esc,
	[  --enable-alt-sends-esc  set default altSendsEscape resource (default: no)],
	[alt_sends_esc=$enableval],
	[alt_sends_esc=no])
CF_XBOOL_RESULT(DEF_ALT_SENDS_ESC,alt_sends_esc,[Define to 1 if alt should send ESC])

AC_MSG_CHECKING(if meta should send ESC)
CF_ARG_ENABLE(meta-sends-esc,
	[  --enable-meta-sends-esc set default metaSendsEscape resource (default: no)],
	[meta_sends_esc=$enableval],
	[meta_sends_esc=no])
CF_XBOOL_RESULT(DEF_META_SENDS_ESC,meta_sends_esc,[Define to 1 if meta should send ESC])

###############################################################################
AC_CHECK_PROG(cf_tic_prog,tic,yes,no)
if test "$cf_tic_prog" = yes ; then
	AC_MSG_CHECKING(for private terminfo-directory)
	AC_ARG_WITH(own-terminfo,
		[  --with-own-terminfo=P   set default $TERMINFO (default: from environment)],
		[TERMINFO_DIR=$withval],
		[TERMINFO_DIR=${TERMINFO-none}])
	AC_MSG_RESULT($TERMINFO_DIR)
	if test "$TERMINFO_DIR" = yes ; then
		AC_MSG_WARN(no value given)
	elif test "$TERMINFO_DIR" != none ; then
		if test -d $TERMINFO_DIR ; then
			AC_DEFINE_UNQUOTED(OWN_TERMINFO_DIR,"$TERMINFO_DIR",[Define to override default TERMINFO value])
		else
			AC_MSG_WARN(not a directory)
		fi
	elif test "$prefix" != NONE ; then
		TERMINFO_DIR='${prefix}/lib/terminfo'
	elif test -d /usr/lib/terminfo ; then
		TERMINFO_DIR=/usr/lib/terminfo
	else
		TERMINFO_DIR=
	fi
	SET_TERMINFO=
	if test -n "$TERMINFO_DIR" ; then
		TERMINFO_DIR='$(DESTDIR)'$TERMINFO_DIR
		SET_TERMINFO='TERMINFO=$(TERMINFO_DIR)'
	fi
	no_ticprog=
else
	no_ticprog="#"
	TERMINFO_DIR=
	SET_TERMINFO=
fi
AC_SUBST(no_ticprog)
AC_SUBST(TERMINFO_DIR)
AC_SUBST(SET_TERMINFO)

###############################################################################
CF_HELP_MESSAGE(Optional Features:)

AC_MSG_CHECKING(if you want active-icons)
CF_ARG_DISABLE(active-icon,
	[  --disable-active-icon   disable X11R6.3 active-icon feature],
	[enable_active_icon=no],
	[enable_active_icon=yes])
AC_MSG_RESULT($enable_active_icon)
if test "$enable_active_icon" = no ; then
	AC_DEFINE(NO_ACTIVE_ICON,1,[Define to 1 to disable X11R6.3 active-icon feature])
fi

AC_MSG_CHECKING(if you want ANSI color)
CF_ARG_DISABLE(ansi-color,
	[  --disable-ansi-color    disable ANSI color],
	[enable_ansi_color=no],
	[enable_ansi_color=yes])
AC_MSG_RESULT($enable_ansi_color)
test "$enable_ansi_color" = no && AC_DEFINE(OPT_ISO_COLORS,0,[Define to 0 to disable ANSI color])

if test "$enable_ansi_color" = yes ; then

	AC_MSG_CHECKING(if you want 16 colors like aixterm)
	CF_ARG_DISABLE(16-color,
		[  --disable-16-color      disable 16-color support],
		[enable_16_color=no],
		[enable_16_color=yes])
	AC_MSG_RESULT($enable_16_color)
	test "$enable_16_color" = no && AC_DEFINE(OPT_AIX_COLORS,0,[Define to 0 to disable 16-color support])

	AC_MSG_CHECKING(if you want 256 colors)
	CF_ARG_ENABLE(256-color,
		[  --enable-256-color      enable 256-color support],
		[enable_256_color=yes],
		[enable_256_color=no])
	AC_MSG_RESULT($enable_256_color)
	if test "$enable_256_color" = yes ; then
		CHARPROC_DEPS="$CHARPROC_DEPS 256colres.h"
		EXTRAHDRS="$EXTRAHDRS 256colres.h"
		AC_DEFINE(OPT_256_COLORS,1,[Define to 1 to enable 256-color support])
	else
	AC_MSG_CHECKING(if you want 88 colors)
	CF_ARG_ENABLE(88-color,
		[  --enable-88-color       enable 88-color support],
		[enable_88_color=yes],
		[enable_88_color=no])
	AC_MSG_RESULT($enable_88_color)
	if test "$enable_88_color" = yes ; then
		CHARPROC_DEPS="$CHARPROC_DEPS 88colres.h"
		EXTRAHDRS="$EXTRAHDRS 88colres.h"
		AC_DEFINE(OPT_88_COLORS,1,[Define to 1 to enable 88-color support])
	fi
	fi

fi

AC_MSG_CHECKING(if you want blinking cursor)
CF_ARG_DISABLE(blink-cursor,
	[  --disable-blink-cursor  disable support for blinking cursor],
	[enable_blink_curs=no],
	[enable_blink_curs=yes])
AC_MSG_RESULT($enable_blink_curs)
test "$enable_blink_curs" = no && AC_DEFINE(OPT_BLINK_CURS,0,[Define to 0 to disable support for blinking cursor])

AC_MSG_CHECKING(if you want to ignore Linux's broken palette-strings)

case $host_os in
(linux*)
	assume_broken_osc=yes ;;
(*)
	assume_broken_osc=no ;;
esac

CF_ARG_OPTION(broken-osc,
	[  --enable-broken-osc     allow broken Linux OSC-strings],
	[enable_broken_osc=$enableval],
	[enable_broken_osc=$enableval],
	[$assume_broken_osc])
AC_MSG_RESULT($enable_broken_osc)
if test "$enable_broken_osc" = yes ; then
	AC_DEFINE(OPT_BROKEN_OSC,1,[Define to 1 to allow broken Linux OSC-strings])
else
	AC_DEFINE(OPT_BROKEN_OSC,0,[Define to 0 to allow broken Linux OSC-strings])
fi

AC_MSG_CHECKING(if you want to allow broken string-terminators)
CF_ARG_ENABLE(broken-st,
	[  --disable-broken-st     disallow broken string-terminators],
	[enable_broken_st=no],
	[enable_broken_st=yes])
AC_MSG_RESULT($enable_broken_st)
test "$enable_broken_st" = no && AC_DEFINE(OPT_BROKEN_ST,0,[Define to 0 to disallow broken string-terminators])

AC_MSG_CHECKING(if you want to compile-in icon data)
CF_ARG_ENABLE(builtin-xpms,
	[  --enable-builtin-xpms   compile-in icon data],
	[enable_builtin_xpms=yes],
	[enable_builtin_xpms=no])
AC_MSG_RESULT($enable_builtin_xpms)
test "$enable_builtin_xpms" = yes && AC_DEFINE(OPT_BUILTIN_XPMS,1,[Define to 1 to compile-in icon data])

AC_MSG_CHECKING(if you want printable 128-159)
CF_ARG_DISABLE(c1-print,
	[  --disable-c1-print      disallow -k8 option for printable 128-159],
	[enable_c1_print=no],
	[enable_c1_print=yes])
AC_MSG_RESULT($enable_c1_print)
test "$enable_c1_print" = no && AC_DEFINE(OPT_C1_PRINT,0,[Define to 0 to disallow -k8 option for printable 128-159])

if test "$enable_ansi_color" = yes ; then

	AC_MSG_CHECKING(if you want bold colors mapped like IBM PC)
	CF_ARG_DISABLE(bold-color,
		[  --disable-bold-color    disable PC-style mapping of bold colors],
		[enable_pc_color=no],
		[enable_pc_color=yes])
	AC_MSG_RESULT($enable_pc_color)
	test "$enable_pc_color" = no && AC_DEFINE(OPT_PC_COLORS,0,[Define to 0 to disable PC-style mapping of bold colors])

	AC_MSG_CHECKING(if you want separate color-classes)
	CF_ARG_DISABLE(color-class,
		[  --disable-color-class   disable separate color class resources],
		[enable_color_class=no],
		[enable_color_class=yes])
	AC_MSG_RESULT($enable_color_class)
	test "$enable_color_class" = no && AC_DEFINE(OPT_COLOR_CLASS,0,[Define to 0 to disable separate color class resources])

	AC_MSG_CHECKING(if you want color-mode enabled by default)
	CF_ARG_DISABLE(color-mode,
		[  --disable-color-mode    disable default colorMode resource],
		[default_colormode=no],
		[default_colormode=yes])
	AC_MSG_RESULT($default_colormode)
	test "$default_colormode" = no && AC_DEFINE(DFT_COLORMODE,0,[Define to 0 if you want color-mode enabled by default])

fi

AC_MSG_CHECKING(if you want support for color highlighting)
CF_ARG_DISABLE(highlighting,
	[  --disable-highlighting  disable support for color highlighting],
	[default_highlight=no],
	[default_highlight=yes])
AC_MSG_RESULT($default_highlight)
test "$default_highlight" = no && AC_DEFINE(OPT_HIGHLIGHT_COLOR,0,[Define to 1 if you want support for color highlighting])

AC_MSG_CHECKING(if you want support for doublesize characters)
CF_ARG_DISABLE(doublechars,
	[  --disable-doublechars   disable support for double-size chars],
	[enable_doublechars=no],
	[enable_doublechars=yes])
AC_MSG_RESULT($enable_doublechars)
test "$enable_doublechars" = no && AC_DEFINE(OPT_DEC_CHRSET,0,[Define to 0 to disable support for double-size chars])

AC_MSG_CHECKING(if you want fallback-support for box characters)
CF_ARG_DISABLE(boxchars,
	[  --disable-boxchars      disable fallback-support for box chars],
	[enable_boxchars=no],
	[enable_boxchars=yes])
AC_MSG_RESULT($enable_boxchars)
test "$enable_boxchars" = no && AC_DEFINE(OPT_BOX_CHARS,0,[Define to 0 to disable fallback-support for box chars])

AC_MSG_CHECKING(if you want to allow spawning new xterms)
CF_ARG_ENABLE(exec-xterm,
	[  --enable-exec-xterm     enable "spawn-new-terminal" action],
	[enable_exec_xterm=yes],
	[enable_exec_xterm=no])
AC_MSG_RESULT($enable_exec_xterm)
if test "$enable_exec_xterm" = yes ; then
	CF_PROCFS_CWD
	if test "$cf_cv_procfs_cwd" = no ; then
		AC_MSG_WARN(no suitable proc filesystem found)
	else
		AC_DEFINE_UNQUOTED(PROCFS_ROOT,"$cf_cv_procfs_cwd",[This is defined via the --enable-exec-xterm option])
		AC_DEFINE(OPT_EXEC_XTERM,1,[Define to 1 to enable "spawn-new-terminal" action])
	fi
fi

AC_MSG_CHECKING(if you want to use double-buffering)
CF_ARG_ENABLE(double-buffer,
	[  --enable-double-buffer  enable double-buffering],
	[enable_double_bfr=yes],
	[enable_double_bfr=no])
AC_MSG_RESULT($enable_double_bfr)
if test "$enable_double_bfr" = yes ; then
	case "x$LIBS" in
	(*Xext*)
		;;
	(*)
		CF_X_EXT 
		;;
	esac
	AC_DEFINE(OPT_DOUBLE_BUFFER,1,[Define to 1 to enable double-buffering])
fi

AC_MSG_CHECKING(if you want to use FreeType library)
CF_ARG_DISABLE(freetype,
	[  --disable-freetype      disable freetype library-support],
	[enable_freetype=no],
	[enable_freetype=yes])
AC_MSG_RESULT($enable_freetype)
if test "$enable_freetype" = yes ; then
	CF_X_FONTCONFIG
else
	CPPFLAGS=`echo "$CPPFLAGS" | sed -e s/-DXRENDERFONT//`
fi

AC_MSG_CHECKING(if you want support for HP-style function keys)
CF_ARG_ENABLE(hp-fkeys,
	[  --enable-hp-fkeys       enable support for HP-style function keys],
	[enable_hp_fkeys=yes],
	[enable_hp_fkeys=no])
AC_MSG_RESULT($enable_hp_fkeys)
if test "$enable_hp_fkeys" = yes ; then
	AC_DEFINE(OPT_HP_FUNC_KEYS,1,[Define to 1 to enable support for HP-style function keys])
fi

AC_MSG_CHECKING(if you want support for SCO-style function keys)
CF_ARG_ENABLE(sco-fkeys,
	[  --enable-sco-fkeys      enable support for SCO-style function keys],
	[enable_sco_fkeys=yes],
	[enable_sco_fkeys=no])
AC_MSG_RESULT($enable_sco_fkeys)
if test "$enable_sco_fkeys" = yes ; then
	AC_DEFINE(OPT_SCO_FUNC_KEYS,1,[Define to 1 to enable support for SCO-style function keys])
fi

AC_MSG_CHECKING(if you want support for Sun-style function keys)
CF_ARG_DISABLE(sun-fkeys,
	[  --disable-sun-fkeys     disable support for Sun-style function keys],
	[enable_sun_fkeys=no],
	[enable_sun_fkeys=yes])
AC_MSG_RESULT($enable_sun_fkeys)
if test "$enable_sun_fkeys" = no ; then
	AC_DEFINE(OPT_SUN_FUNC_KEYS,0,[Define to 0 to disable support for Sun-style function keys])
fi

AC_MSG_CHECKING(if you want saved-lines stored as a FIFO)
CF_ARG_DISABLE(fifo-lines,
	[  --disable-fifo-lines    disable FIFO-storage for saved-lines],
	[enable_fifo_lines=no],
	[enable_fifo_lines=yes])
AC_MSG_RESULT($enable_fifo_lines)
if test "$enable_fifo_lines" = yes ; then
	AC_DEFINE(OPT_FIFO_LINES,1,[Define to 1 to disable FIFO-storage for saved-lines])
fi

AC_MSG_CHECKING(if you want support for internationalization)
CF_ARG_DISABLE(i18n,
	[  --disable-i18n          disable internationalization],
	[enable_i18n=no],
	[enable_i18n=yes])
AC_MSG_RESULT($enable_i18n)
if test "$enable_i18n" = no ; then
	AC_DEFINE(OPT_I18N_SUPPORT,0,[Define to 0 to disable internationalization])
fi

AC_MSG_CHECKING(if you want support for initial-erase setup)
CF_ARG_DISABLE(initial-erase,
	[  --disable-initial-erase disable setup for stty erase],
	[enable_ie=no],
	[enable_ie=yes])
AC_MSG_RESULT($enable_ie)
if test "$enable_ie" = no ; then
	AC_DEFINE(OPT_INITIAL_ERASE,0,[Define to 0 to disable setup for stty erase])
fi

AC_MSG_CHECKING(if you want support for input-method)
CF_ARG_DISABLE(input-method,
	[  --disable-input-method  disable input-method],
	[enable_ximp=no],
	[enable_ximp=yes])
AC_MSG_RESULT($enable_ximp)
CF_INPUT_METHOD
test "$cf_cv_input_method" = no && enable_ximp=no
if test "$enable_ximp" = no ; then
	AC_DEFINE(OPT_INPUT_METHOD,0,[Define to 0 to disable input-method])
fi

AC_MSG_CHECKING(if you want support for load-vt-fonts)
CF_ARG_ENABLE(load-vt-fonts,
	[  --enable-load-vt-fonts  enable load-vt-fonts() action],
	[enable_load_vt_fonts=yes],
	[enable_load_vt_fonts=no])
AC_MSG_RESULT($enable_load_vt_fonts)
if test "$enable_load_vt_fonts" = yes ; then
	AC_DEFINE(OPT_LOAD_VTFONTS,1,[Define to 1 to enable load-vt-fonts() action])
fi

AC_MSG_CHECKING(if you want support for logging)
CF_ARG_ENABLE(logging,
	[  --enable-logging        enable logging],
	[enable_logging=yes],
	[enable_logging=no])
AC_MSG_RESULT($enable_logging)
if test "$enable_logging" = yes ; then
	AC_DEFINE(ALLOWLOGGING,1,[if you want support for logging])
	AC_MSG_CHECKING(if you want to allow logging via a pipe)
	CF_ARG_ENABLE(logfile-exec,
		[  --enable-logfile-exec   enable exec'd logfile filter],
		[enable_log_exec=yes],
		[enable_log_exec=no])
	AC_MSG_RESULT($enable_log_exec)
	if test "$enable_log_exec" = yes ; then
		AC_DEFINE(ALLOWLOGFILEEXEC,1,[if you want to allow logging via a pipe])
	fi
fi

AC_MSG_CHECKING(if you want support for iconify/maximize translations)
CF_ARG_DISABLE(maximize,
	[  --disable-maximize      disable actions for iconify/deiconify/maximize/restore],
	[enable_maximize=no],
	[enable_maximize=yes])
AC_MSG_RESULT($enable_maximize)
test "$enable_maximize" = no && AC_DEFINE(OPT_MAXIMIZE,0,[Define to 0 to disable actions for iconify/deiconify/maximize/restore])

AC_MSG_CHECKING(if you want NumLock to override keyboard tables)
CF_ARG_DISABLE(num-lock,
	[  --disable-num-lock      disable NumLock keypad support],
	[enable_numlock=no],
	[enable_numlock=yes])
AC_MSG_RESULT($enable_numlock)
test "$enable_numlock" = no && AC_DEFINE(OPT_NUM_LOCK,0,[Define to 0 to disable NumLock keypad support])

AC_MSG_CHECKING(if you want support for get/set of base64 selection data)

CF_ARG_DISABLE(paste64,
	[  --disable-paste64       disable get/set base64 selection data],
	[enable_paste64=no],
	[enable_paste64=yes])
AC_MSG_RESULT($enable_paste64)
if test "$enable_paste64" = yes ; then
	AC_DEFINE(OPT_PASTE64,1,[Define to 1 to disable get/set base64 selection data])
else
	AC_DEFINE(OPT_PASTE64,0,[Define to 0 to disable get/set base64 selection data])
fi

AC_MSG_CHECKING(if you want support for pty-handshaking)

CF_ARG_DISABLE(pty-handshake,
	[  --disable-pty-handshake disable pty-handshake support],
	[enable_pty_handshake=no],
	[enable_pty_handshake=yes])
AC_MSG_RESULT($enable_pty_handshake)
if test "$enable_pty_handshake" = yes ; then
	AC_DEFINE(OPT_PTY_HANDSHAKE,1,[Define to 1 to disable pty-handshake support])
else
	AC_DEFINE(OPT_PTY_HANDSHAKE,0,[Define to 0 to disable pty-handshake support])
fi

AC_MSG_CHECKING(if you want support for mouse in readline applications)
CF_ARG_ENABLE(readline-mouse,
	[  --enable-readline-mouse enable support for mouse in readline applications],
	[enable_readline_mouse=yes],
	[enable_readline_mouse=no])
AC_MSG_RESULT($enable_readline_mouse)
if test "$enable_readline_mouse" = yes ; then
	AC_DEFINE(OPT_READLINE,1,[Define to 1 to enable support for mouse in readline applications])
fi

AC_MSG_CHECKING(if you want support for regular-expression selections)
CF_ARG_DISABLE(regex,
	[  --disable-regex         disable regular-expression selections],
	[enable_regex=no],
	[enable_regex=yes])
AC_MSG_RESULT($enable_regex)
if test "$enable_regex" = yes ; then
	CF_WITH_PCRE
	if test "$with_pcre" = no ; then
		CF_REGEX
		if test "X$cf_cv_regex_hdrs" != "Xregex.h" ; then
			AC_MSG_ERROR(Only POSIX or PCRE regular expressions are supported)
		fi
	fi
	AC_DEFINE(OPT_SELECT_REGEX,1,[Define to 1 to enable regular-expression selections])
fi

AC_MSG_CHECKING(if you want support for right-scrollbar)
CF_ARG_DISABLE(rightbar,
	[  --disable-rightbar      disable right-scrollbar support],
	[enable_rightbar=no],
	[enable_rightbar=yes])
AC_MSG_RESULT($enable_rightbar)
if test "$enable_rightbar" = yes ; then
	AC_DEFINE(SCROLLBAR_RIGHT,1,[Define to 1 to enable right-scrollbar support])
fi

AC_MSG_CHECKING(if you want check for redundant name-change)
CF_ARG_DISABLE(samename,
	[  --disable-samename      disable check for redundant name-change],
	[enable_samename=no],
	[enable_samename=yes])
AC_MSG_RESULT($enable_samename)
test "$enable_samename" = no && AC_DEFINE(OPT_SAME_NAME,0,[Define to 0 to disable check for redundant name-change])

AC_MSG_CHECKING(if you want support for selection-actions)
CF_ARG_DISABLE(selection-ops,
	[  --disable-selection-ops disable selection-action operations],
	[enable_selection_ops=no],
	[enable_selection_ops=yes])
AC_MSG_RESULT($enable_selection_ops)
test "$enable_selection_ops" = no && AC_DEFINE(OPT_SELECTION_OPS,0,[Define to 0 disable selection-action operations])

AC_MSG_CHECKING(if you want support for session management)
CF_ARG_DISABLE(session-mgt,
	[  --disable-session-mgt   disable support for session management],
	[enable_session_mgt=no],
	[enable_session_mgt=yes])
AC_MSG_RESULT($enable_session_mgt)
test "$enable_session_mgt" = no && AC_DEFINE(OPT_SESSION_MGT,0,[Define to 0 to disable support for session management])

AC_MSG_CHECKING(if you want to use termcap function-keys)
CF_ARG_DISABLE(tcap-fkeys,
	[  --disable-tcap-fkeys    disable termcap function-keys support],
	[enable_tcap_fkeys=no],
	[enable_tcap_fkeys=yes])
AC_MSG_RESULT($enable_tcap_fkeys)
test "$enable_tcap_fkeys" = yes && AC_DEFINE(OPT_TCAP_FKEYS,1,[Define to 1 to disable termcap function-keys support])

AC_MSG_CHECKING(if you want to use termcap-query/report)
CF_ARG_DISABLE(tcap-query,
	[  --disable-tcap-query    disable compiled-in termcap-query support],
	[enable_tcap_query=no],
	[enable_tcap_query=yes])
AC_MSG_RESULT($enable_tcap_query)
test "$enable_tcap_query" = yes && AC_DEFINE(OPT_TCAP_QUERY,1,[Define to 1 to disable compiled-in termcap-query support])

AC_MSG_CHECKING(if you want support for tek4014)
CF_ARG_DISABLE(tek4014,
	[  --disable-tek4014       disable tek4014 emulation],
	[enable_tek4014=no],
	[enable_tek4014=yes])
AC_MSG_RESULT($enable_tek4014)
if test "$enable_tek4014" = no ; then
	AC_DEFINE(OPT_TEK4014,0,[Define to 0 to disable tek4014 emulation])
else
	EXTRAHDRS="$EXTRAHDRS Tekparse.h"
	EXTRASRCS="$EXTRASRCS TekPrsTbl.c Tekproc.c"
	EXTRAOBJS="$EXTRAOBJS TekPrsTbl.o Tekproc.o"
fi

AC_MSG_CHECKING(if you want pulldown menus with a toolbar)
CF_ARG_ENABLE(toolbar,
	[  --enable-toolbar        compile-in toolbar for pulldown menus],
	[enable_toolbar=yes],
	[enable_toolbar=no])
AC_MSG_RESULT($enable_toolbar)
if test "$enable_toolbar" = yes ; then
	AC_DEFINE(OPT_TOOLBAR,1,[Define to 1 to compile-in toolbar for pulldown menus])
fi

AC_MSG_CHECKING(if you want VT52 emulation)
CF_ARG_DISABLE(vt52,
	[  --disable-vt52          disable VT52 emulation],
	[enable_vt52=no],
	[enable_vt52=yes])
AC_MSG_RESULT($enable_vt52)
test "$enable_vt52" = no && AC_DEFINE(OPT_VT52_MODE,0,[Define to 0 to disable VT52 emulation])

AC_MSG_CHECKING(if you want wide-attribute support)
CF_ARG_DISABLE(wide-attrs,
	[  --disable-wide-attrs    disable wide-attribute support],
	[enable_wattr=no],
	[enable_wattr=yes])
AC_MSG_RESULT($enable_wattr)

AC_MSG_CHECKING(if you want wide-character support)
CF_ARG_DISABLE(wide-chars,
	[  --disable-wide-chars    disable wide-character support],
	[enable_wchar=no],
	[enable_wchar=yes])
AC_MSG_RESULT($enable_wchar)
test "$enable_wattr" = no && AC_DEFINE(OPT_WIDE_ATTRS,0,[Define to 0 to disable rarely-used SGR features])

AC_MSG_CHECKING(if you want only 16-bit character support)
CF_ARG_ENABLE(16bit-chars,
	[  --enable-16bit-chars    enable 16-bit character support],
	[enable_16bit_chars=yes],
	[enable_16bit_chars=no])
AC_MSG_RESULT($enable_16bit_chars)

if test "$enable_16bit_chars" = yes ; then
	AC_DEFINE(OPT_WIDER_ICHAR,0,[Define to 0 to enable 16-bit character support])
	enable_wchar=yes
fi

if test "$enable_wchar" = yes ; then

AC_MSG_CHECKING(if you want to use mini-luit/Latin9 built-in support)
CF_ARG_ENABLE(mini-luit,
	[  --enable-mini-luit      enable mini-luit (built-in Latin9 support)],
	[enable_mini_luit=yes],
	[enable_mini_luit=no])
AC_MSG_RESULT($enable_mini_luit)
if test "$enable_mini_luit" = yes ; then
	AC_DEFINE(OPT_MINI_LUIT,1,[Define to 1 to enable mini-luit (built-in Latin9 support)])
fi

AC_MSG_CHECKING(if you want to use luit)
CF_ARG_DISABLE(luit,
	[  --disable-luit          enable luit filter (Unicode translation)],
	[enable_luit=no],
	[enable_luit=yes])
AC_MSG_RESULT($enable_luit)
if test "$enable_luit" = yes ; then
	AC_DEFINE(OPT_LUIT_PROG,1,[Define to 1 to enable luit filter (Unicode translation)])
	CF_PATH_PROG(LUIT,xterm-filter,bluit luit)
fi

	AC_DEFINE(OPT_WIDE_CHARS,1,[Define to 1 to enable wide-character support])
	EXTRAHDRS="$EXTRAHDRS charclass.h precompose.h wcwidth.h"
	EXTRASRCS="$EXTRASRCS charclass.c precompose.c wcwidth.c"
	EXTRAOBJS="$EXTRAOBJS charclass.o precompose.o wcwidth.o"
fi

AC_MSG_CHECKING(if you want dynamic-abbreviation support)
CF_ARG_ENABLE(dabbrev,
	[  --enable-dabbrev        enable dynamic-abbreviation support],
	[enable_dabbrev=yes],
	[enable_dabbrev=no])
AC_MSG_RESULT($enable_dabbrev)
if test "$enable_dabbrev" = yes ; then
	AC_DEFINE(OPT_DABBREV,1,[Define to 1 to enable dynamic-abbreviation support])
fi

AC_MSG_CHECKING(if you want DECterm Locator support)
CF_ARG_ENABLE(dec-locator,
	[  --enable-dec-locator    enable DECterm Locator support],
	[enable_dec_locator=yes],
	[enable_dec_locator=no])
AC_MSG_RESULT($enable_dec_locator)
if test "$enable_dec_locator" = yes ; then
	AC_DEFINE(OPT_DEC_LOCATOR,1,[Define to 1 to enable DECterm Locator support])
fi

AC_MSG_CHECKING(if you want XHTML and SVG screen dump support)
CF_ARG_ENABLE(screen-dumps,
	[  --enable-screen-dumps   enable XHTML and SVG screen dumps],
	[enable_screen_dumps=yes],
	[enable_screen_dumps=no])
AC_MSG_RESULT($enable_screen_dumps)
if test "$enable_screen_dumps" = yes ; then
	AC_DEFINE(OPT_SCREEN_DUMPS,1,[Define to 1 to enable XHTML and SVG screen dump support])
	EXTRASRCS="$EXTRASRCS html.c svg.c"
	EXTRAOBJS="$EXTRAOBJS html.o svg.o"
fi

AC_MSG_CHECKING(if you want ReGIS graphics support)
CF_ARG_ENABLE(regis-graphics,
	[  --enable-regis-graphics enable ReGIS graphics support],
	[enable_regis_graphics=yes],
	[enable_regis_graphics=no])
AC_MSG_RESULT($enable_regis_graphics)
if test "$enable_regis_graphics" = yes ; then
	AC_DEFINE(OPT_REGIS_GRAPHICS,1,[Define to 1 to enable ReGIS graphics support])
	EXTRAHDRS="$EXTRAHDRS graphics_regis.h"
	EXTRASRCS="$EXTRASRCS graphics_regis.c"
	EXTRAOBJS="$EXTRAOBJS graphics_regis.o"
	CF_MATH_LIB
fi

AC_MSG_CHECKING(if you want sixel graphics support)
CF_ARG_ENABLE(sixel-graphics,
	[  --enable-sixel-graphics enable sixel graphics support],
	[enable_sixel_graphics=yes],
	[enable_sixel_graphics=no])
AC_MSG_RESULT($enable_sixel_graphics)
if test "$enable_sixel_graphics" = yes ; then
	AC_DEFINE(OPT_SIXEL_GRAPHICS,1,[Define to 1 to enable sixel graphics support])
	EXTRAHDRS="$EXTRAHDRS graphics_sixel.h"
	EXTRASRCS="$EXTRASRCS graphics_sixel.c"
	EXTRAOBJS="$EXTRAOBJS graphics_sixel.o"
fi

if test "$enable_regis_graphics" = yes || test "$enable_sixel_graphics" = yes ; then
	AC_DEFINE(OPT_GRAPHICS,1,[Defined to 1 to if any graphics mode is enabled])
	EXTRAHDRS="$EXTRAHDRS graphics.h"
	EXTRASRCS="$EXTRASRCS graphics.c"
	EXTRAOBJS="$EXTRAOBJS graphics.o"
fi

AC_MSG_CHECKING(if you want VT420 rectangle support)
CF_ARG_DISABLE(rectangles,
	[  --disable-rectangles    disable VT420 rectangle support],
	[enable_rectangles=no],
	[enable_rectangles=yes])
AC_MSG_RESULT($enable_rectangles)
if test "$enable_rectangles" = yes ; then
	AC_DEFINE(OPT_DEC_RECTOPS,1,[Define to 1 to disable VT420 rectangle support])
fi

AC_MSG_CHECKING(if you want -ziconbeep option)
CF_ARG_DISABLE(ziconbeep,
	[  --disable-ziconbeep     disable -ziconbeep option],
	[enable_ziconbeep=no],
	[enable_ziconbeep=yes])
AC_MSG_RESULT($enable_ziconbeep)
test "$enable_ziconbeep" = no && AC_DEFINE(OPT_ZICONBEEP,0,[Define to 0 to disable -ziconbeep option])

###############################################################################
CF_HELP_MESSAGE(Testing/development Options:)

AC_MSG_CHECKING(if you want debugging traces)
CF_ARG_ENABLE(trace,
	[  --enable-trace          test: set to enable debugging traces],
	[enable_trace=yes],
	[enable_trace=no])
AC_MSG_RESULT($enable_trace)
if test "$enable_trace" = yes ; then
	AC_DEFINE(OPT_TRACE,1,[Define to 1 to enable debugging traces])
	EXTRASRCS="$EXTRASRCS trace.c"
	EXTRAOBJS="$EXTRAOBJS trace.o"
fi

CF_DISABLE_LEAKS
CF_DISABLE_ECHO

AC_MSG_CHECKING(if you want magic cookie emulation)
CF_ARG_ENABLE(xmc-glitch,
	[  --enable-xmc-glitch     test: enable xmc magic-cookie emulation],
	[enable_xmc=yes],
	[enable_xmc=no])
AC_MSG_RESULT($enable_xmc)
if test "$enable_xmc" = yes ; then
	AC_DEFINE(OPT_XMC_GLITCH,1,[Define to 1 to enable xmc magic-cookie emulation])
	EXTRASRCS="$EXTRASRCS testxmc.c"
	EXTRAOBJS="$EXTRAOBJS testxmc.o"
fi

dnl FIXME - extra test needed to make tcap-fkeys work on HPUX
AC_CHECK_FUNCS(tigetstr)

dnl only check for ncurses' use_extended_names if really not using termcap
if test -n "$cf_cv_lib_part_tgetent"; then
    AC_CHECK_FUNCS(use_extended_names)
fi

if test -n "$GCC" ; then
AC_MSG_CHECKING(if you want to turn on gcc warnings)
CF_ARG_ENABLE(warnings,
	[  --enable-warnings       test: turn on GCC compiler warnings],
	[with_warnings=yes],
	[with_warnings=no])
AC_MSG_RESULT($with_warnings)
if test "$with_warnings" = yes
then
	CF_GCC_ATTRIBUTES
	CF_GCC_WARNINGS(Wdeclaration-after-statement Wextra Wno-unknown-pragmas Wswitch-enum)
fi
fi

AC_SUBST(EXTRA_CFLAGS)
AC_SUBST(CHARPROC_DEPS)
AC_SUBST(EXTRAHDRS)
AC_SUBST(EXTRASRCS)
AC_SUBST(EXTRAOBJS)

test "$disable_setuid" = yes && AC_DEFINE(DISABLE_SETUID,1,[Define to 1 if you want to disable setuid])
test "$disable_setgid" = yes && AC_DEFINE(DISABLE_SETGID,1,[Define to 1 if you want to disable setgid])

if test $disable_setuid = yes ; then
	MAY_SETUID="#"
	NOT_SETUID=
elif test $disable_setgid = yes ; then
	MAY_SETUID="#"
	NOT_SETUID=
else
	MAY_SETUID=
	NOT_SETUID="#"
fi

AC_SUBST(MAY_SETUID)
AC_SUBST(NOT_SETUID)

###	remove from CPPFLAGS the optional features we define in xtermcfg.h
###	or other conflicting symbols that may be defined via imake:
for cf_def in \
	__STDC__ \
	ALLOWLOGGING \
	ALLOWLOGFILEEXEC \
	OPT_LUIT_PROG \
	OPT_WIDE_CHARS \
	SCROLLBAR_RIGHT \
	USE_TTY_GROUP \
	USE_UTEMPTER \
	XRENDERFONT
do
	CPPFLAGS=`echo "$CPPFLAGS" | sed -e s/-D$cf_def//`
done

CF_MAKE_TAGS
CF_DISABLE_RPATH_HACK

# Force plink.sh to not trim pcre's libraries, which have the same symbol
# names as the system regexp.
if test "$with_pcre" != no
then
	LIBS=`echo "$LIBS" | sed -e 's/-lpcre/-kpcre/g'`
fi

###	output xtermcfg.h, etc
AC_CONFIG_FILES([Makefile df-install minstall:minstall.in])
AC_OUTPUT
@


1.26
log
@Update to xterm 320. Tested by jsg@@ Thanks.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.336 2015/08/10 23:45:36 tom Exp $
d6 1
a6 1
dnl Copyright 1997-2014,2015 by Thomas E. Dickey
d61 1
a61 1
AC_CHECK_PROGS(LINT, tdlint lint alint)
d260 1
d937 12
a1000 2
###############################################################################
CF_XINERAMA
@


1.25
log
@xterm 314. tested by naddy@@
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.327 2014/12/20 02:27:59 tom Exp $
d6 1
a6 1
dnl Copyright 1997-2013,2014 by Thomas E. Dickey
d47 1
a47 1
openedition)	: ${CFLAGS="-O2 -Wc,dll -Wl,EDIT=NO"}
d51 1
a51 1
darwin*)
a62 2
CF_WITH_MAN2HTML

d281 1
d288 1
a288 1
	*-DUSE_TERMINFO\ -DHAVE_TIGETSTR*)
d304 1
a304 1
vt*)	default_termid=`echo $default_termid | sed -e 's/^..//'`
d341 7
d468 4
a471 4
case $host_os in #(vi
linux*)
	assume_broken_osc=yes ;; #(vi
*)
d495 8
d587 1
a587 1
	*Xext*)
d589 1
a589 1
	*)
d988 2
@


1.24
log
@Update to xterm-309. Version 308 tested by several people including
naddy@@ who found a small regression, fixed in 309.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.326 2014/05/08 20:47:36 tom Exp $
a57 1
CF_PROG_GROFF
d62 2
@


1.23
log
@Update to xterm 304. With help of shadchin@@

tested by ajacoutot@@ and shadchin@@
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.324 2014/04/14 19:17:15 tom Exp $
d845 7
d858 1
@


1.22
log
@Update to xterm 301
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.322 2014/01/16 01:44:05 tom Exp $
d36 3
a38 2
AC_PREREQ(2.52.20030208)
AC_INIT(charproc.c)
d913 14
d935 7
d1067 2
a1068 1
AC_OUTPUT(Makefile df-install minstall:minstall.in)
@


1.21
log
@Update to xterm-300. Tested  by ajacoutot@@ and shadchin@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.321 2013/11/22 21:42:13 tom Exp $
d6 1
a6 1
dnl Copyright 1997-2012,2013 by Thomas E. Dickey
d94 1
@


1.20
log
@Update to xterm 296. Sixel graphics disabled for now.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.318 2013/06/23 21:39:24 tom Exp $
d94 1
d263 3
d843 21
d875 4
a878 4
CF_ARG_ENABLE(luit,
	[  --enable-luit           enable luit filter (Unicode translation)],
	[enable_luit=yes],
	[enable_luit=$enable_mini_luit])
a884 21
AC_MSG_CHECKING(if you want wide-character support)
CF_ARG_OPTION(wide-chars,
	[  --enable-wide-chars     enable wide-character support],
	[enable_wchar=yes],
	[enable_wchar=$enable_luit],
	[$enable_luit])
AC_MSG_RESULT($enable_wchar)

AC_MSG_CHECKING(if you want only 16-bit character support)
CF_ARG_ENABLE(16bit-chars,
	[  --enable-16bit-chars    enable 16-bit character support],
	[enable_16bit_chars=yes],
	[enable_16bit_chars=no])
AC_MSG_RESULT($enable_16bit_chars)

if test "$enable_16bit_chars" = yes ; then
	AC_DEFINE(OPT_WIDER_ICHAR,0,[Define to 0 to enable 16-bit character support])
	enable_wchar=yes
fi

if test "$enable_wchar" = yes ; then
@


1.19
log
@Update to xterm 293. Tested by naddy@@ ajacoutot@@
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.316 2013/05/27 13:46:02 tom Exp $
d905 13
@


1.18
log
@Update to xterm 291. Tested by many.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.312 2013/02/03 19:30:48 tom Exp $
d113 1
d151 8
d293 1
a293 1
	[  --with-terminal-id=V    set default decTerminalID (default: vt100)],
d314 1
a314 1
AC_MSG_CHECKING(if backarrow-key should be DEL)
d317 3
a319 3
	[backarrow_is_del=$enableval],
	[backarrow_is_del=yes])
CF_XBOOL_RESULT(DEF_BACKARO_DEL,backarrow_is_del,[Define to 1 if backarrow-key should be DEL])
@


1.17
log
@Update to xterm 287. tested by mpi@@ and krw@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.306 2012/10/10 23:32:47 tom Exp $
d6 1
a6 1
dnl Copyright 1997-2011,2012 by Thomas E. Dickey
a55 1
AC_PROG_GCC_TRADITIONAL
d57 1
d115 3
a117 1
CF_WITH_DESKTOP_CATEGORY(xterm,[*rxvt*|konsole|*-terminal],[System|TerminalEmulator|Utility|*])
d931 1
a931 10
AC_MSG_CHECKING(if you want to test memory leaks)
CF_ARG_DISABLE(leaks,
	[  --disable-leaks         test: set to test memory leaks],
	[disable_leaks=yes],
	[disable_leaks=no])
AC_MSG_RESULT($disable_leaks)
if test "$disable_leaks" = yes ; then
	AC_DEFINE(NO_LEAKS,1,[Define to 1 to test memory leaks])
fi

@


1.16
log
@Update to xterm 279. Tested by krw@@, mpi@@, shadchin@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.286 2012/03/15 00:01:30 tom Exp $
d36 1
a36 1
AC_PREREQ(2.13.20030927)
d54 1
a54 1
AC_PROG_CC
a62 4
###	checks for UNIX variants that set C preprocessor variables
AC_AIX
AC_ISC_POSIX

a63 3
CF_ANSI_CC_CHECK
AC_C_CONST
CF_PROG_EXT
a82 1
CF_SIZE_T
a91 1
	bcopy \
a93 1
	memmove \
a97 1
	strerror \
a102 1
CF_FUNC_MEMMOVE
d112 2
a113 1
CF_WITH_ICONDIR
d197 1
a197 1
	AC_DEFINE(USE_UTMP_SETGID)
d246 1
d254 2
a255 2
AC_CHECK_FUNCS(XkbQueryExtension)

d284 1
a284 1
	[default_termid=vt100])
d290 1
a290 1
AC_DEFINE_UNQUOTED(DFT_DECID,"$default_termid")
d299 1
a299 1
AC_DEFINE_UNQUOTED(DFT_TERMTYPE,"$default_TERM")
d302 37
d351 1
a351 1
			AC_DEFINE_UNQUOTED(OWN_TERMINFO_DIR,"$TERMINFO_DIR")
d387 1
a387 1
	AC_DEFINE(NO_ACTIVE_ICON)
d396 1
a396 1
test "$enable_ansi_color" = no && AC_DEFINE(OPT_ISO_COLORS,0)
d406 1
a406 1
	test "$enable_16_color" = no && AC_DEFINE(OPT_AIX_COLORS,0)
d417 1
a417 1
		AC_DEFINE(OPT_256_COLORS,1)
d428 1
a428 1
		AC_DEFINE(OPT_88_COLORS,1)
d440 1
a440 1
test "$enable_blink_curs" = no && AC_DEFINE(OPT_BLINK_CURS,0)
d458 1
a458 1
	AC_DEFINE(OPT_BROKEN_OSC,1)
d460 1
a460 1
	AC_DEFINE(OPT_BROKEN_OSC,0)
d469 1
a469 1
test "$enable_broken_st" = no && AC_DEFINE(OPT_BROKEN_ST,0)
d477 1
a477 1
test "$enable_c1_print" = no && AC_DEFINE(OPT_C1_PRINT,0)
d487 1
a487 1
	test "$enable_pc_color" = no && AC_DEFINE(OPT_PC_COLORS,0)
d495 1
a495 1
	test "$enable_color_class" = no && AC_DEFINE(OPT_COLOR_CLASS,FALSE)
d503 1
a503 1
	test "$default_colormode" = no && AC_DEFINE(DFT_COLORMODE,FALSE)
d513 1
a513 1
test "$default_highlight" = no && AC_DEFINE(OPT_HIGHLIGHT_COLOR,0)
d521 1
a521 1
test "$enable_doublechars" = no && AC_DEFINE(OPT_DEC_CHRSET,0)
d529 1
a529 1
test "$enable_boxchars" = no && AC_DEFINE(OPT_BOX_CHARS,0)
d542 2
a543 2
		AC_DEFINE_UNQUOTED(PROCFS_ROOT,"$cf_cv_procfs_cwd")
		AC_DEFINE(OPT_EXEC_XTERM)
d547 17
d583 1
a583 1
	AC_DEFINE(OPT_HP_FUNC_KEYS,1)
d593 1
a593 1
	AC_DEFINE(OPT_SCO_FUNC_KEYS,1)
d603 1
a603 1
	AC_DEFINE(OPT_SUN_FUNC_KEYS,0)
d613 1
a613 1
	AC_DEFINE(OPT_FIFO_LINES,1)
d623 1
a623 1
	AC_DEFINE(OPT_I18N_SUPPORT,0)
d633 1
a633 1
	AC_DEFINE(OPT_INITIAL_ERASE,0)
d645 1
a645 1
	AC_DEFINE(OPT_INPUT_METHOD,0)
d655 1
a655 1
	AC_DEFINE(OPT_LOAD_VTFONTS,1)
d665 1
a665 1
	AC_DEFINE(ALLOWLOGGING)
d673 1
a673 1
		AC_DEFINE(ALLOWLOGFILEEXEC)
d683 1
a683 1
test "$enable_maximize" = no && AC_DEFINE(OPT_MAXIMIZE,0)
d691 1
a691 1
test "$enable_numlock" = no && AC_DEFINE(OPT_NUM_LOCK,0)
d701 1
a701 1
	AC_DEFINE(OPT_PASTE64,1)
d703 1
a703 1
	AC_DEFINE(OPT_PASTE64,0)
d714 1
a714 1
	AC_DEFINE(OPT_PTY_HANDSHAKE,1)
d716 1
a716 1
	AC_DEFINE(OPT_PTY_HANDSHAKE,0)
d726 1
a726 1
	AC_DEFINE(OPT_READLINE,1)
d743 1
a743 1
	AC_DEFINE(OPT_SELECT_REGEX)
d753 1
a753 1
	AC_DEFINE(SCROLLBAR_RIGHT)
d762 1
a762 1
test "$enable_samename" = no && AC_DEFINE(OPT_SAME_NAME,0)
d770 1
a770 1
test "$enable_selection_ops" = no && AC_DEFINE(OPT_SELECTION_OPS,0)
d778 1
a778 1
test "$enable_session_mgt" = no && AC_DEFINE(OPT_SESSION_MGT,0)
d786 1
a786 1
test "$enable_tcap_fkeys" = yes && AC_DEFINE(OPT_TCAP_FKEYS,1)
d794 1
a794 1
test "$enable_tcap_query" = yes && AC_DEFINE(OPT_TCAP_QUERY,1)
d803 1
a803 1
	AC_DEFINE(OPT_TEK4014,0)
d817 1
a817 1
	AC_DEFINE(OPT_TOOLBAR,1)
d826 1
a826 1
test "$enable_vt52" = no && AC_DEFINE(OPT_VT52_MODE,0)
d835 1
a835 1
	AC_DEFINE(OPT_MINI_LUIT,1)
d845 1
a845 1
	AC_DEFINE(OPT_LUIT_PROG,1)
d865 1
a865 1
	AC_DEFINE(OPT_WIDER_ICHAR,0)
d870 1
a870 1
	AC_DEFINE(OPT_WIDE_CHARS,1)
d883 1
a883 1
	AC_DEFINE(OPT_DABBREV,1)
d893 1
a893 1
	AC_DEFINE(OPT_DEC_LOCATOR,1)
d903 1
a903 1
	AC_DEFINE(OPT_DEC_RECTOPS,1)
d912 1
a912 1
test "$enable_ziconbeep" = no && AC_DEFINE(OPT_ZICONBEEP,0)
d924 1
a924 1
	AC_DEFINE(OPT_TRACE)
d936 1
a936 1
	AC_DEFINE(NO_LEAKS)
d948 1
a948 1
	AC_DEFINE(OPT_XMC_GLITCH,1)
d981 2
a982 2
test "$disable_setuid" = yes && AC_DEFINE(DISABLE_SETUID)
test "$disable_setgid" = yes && AC_DEFINE(DISABLE_SETGID)
@


1.15
log
@Update to xterm 278. Tested by mpi@@, shadchin@@
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.285 2012/01/05 10:27:54 tom Exp $
d6 1
a6 1
dnl Copyright 1997-2010,2011 by Thomas E. Dickey
@


1.14
log
@Update to xterm-275. Tested by jasper@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.279 2011/09/04 21:27:24 tom Exp $
d79 1
a79 1
sys/ttydefaults.h \
d92 1
d107 1
d263 1
a263 11
# Check for openpty() in -lutil if the UNIX98-style pty functions are not
# available. E.g. for GNU libc 2.0.
case $host_os in #(vi
freebsd*|netbsd*|dragonfly*) # 2004/8/15 - revisit this if/when grantpt is known to work.
	AC_CHECK_LIB(util,openpty)
	;;
*)
	AC_CHECK_FUNCS(grantpt, [], AC_CHECK_LIB(util,openpty))
	;;
esac

d719 8
@


1.13
log
@Update to xterm 273. Tested by marco@@, jasper@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.277 2011/08/19 09:13:07 tom Exp $
d76 1
d104 1
@


1.12
log
@Update to xterm 271. Tested by shadchin@@ and ajacoutot@@
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.274 2011/07/07 00:06:11 tom Exp $
d285 1
a285 1
if test "x$cf_cv_lib_tgetent" != xno ; then
d307 1
d316 1
d979 1
a979 1
AC_OUTPUT(Makefile df-install)
@


1.11
log
@Update to xterm 270. Tested by ajacoutot@@, shadchin@@, krw@@ and jasper@@
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.272 2011/04/22 08:54:15 tom Exp $
d118 1
d281 12
@


1.10
log
@Update to xterm 267. Tested by shadchin@@, jasper@@, ajacoutot@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.267 2010/11/09 01:00:48 tom Exp $
d6 1
a6 1
dnl Copyright 1997-2009,2010 by Thomas E. Dickey
d118 4
a121 41
AC_MSG_CHECKING(for directory to install resource files)
CF_WITH_PATH(app-defaults,
	[  --with-app-defaults=DIR directory in which to install resource files],
	[appsdir],[EPREFIX/lib/X11/app-defaults],
	['\$(exec_prefix)/lib/X11/app-defaults'])
AC_MSG_RESULT($appsdir)
AC_SUBST(appsdir)

no_appsdir=
test "$appsdir" = no && no_appsdir="#"
AC_SUBST(no_appsdir)

AC_MSG_CHECKING(for directory to install icons)
CF_WITH_PATH(icondir,
	[  --with-icondir=DIR      directory in which to install icons],
	[icondir],[EPREFIX/share/pixmaps],
	['\$(exec_prefix)/share/pixmaps'])
AC_MSG_RESULT($icondir)
AC_SUBST(icondir)

no_icondir=
test "$icondir" = no && no_icondir="#"
AC_SUBST(no_icondir)

# Comment-out the install-desktop rule if the desktop-utils are not found.
AC_MSG_CHECKING(if you want to install desktop files)
CF_ARG_OPTION(desktop,
	[  --disable-desktop       disable install of xterm desktop files],
	[enable_desktop=$enableval],
	[enable_desktop=$enableval],yes)
AC_MSG_RESULT($enable_desktop)

desktop_utils=
if test "$enable_desktop" = yes ; then
AC_CHECK_PROG(desktop_utils,desktop-file-install,yes,no)
fi

test "$desktop_utils" = yes && desktop_utils= || desktop_utils="#"
AC_SUBST(DESKTOP_FLAGS)

# inherit SINSTALL_OPTS from environment to allow packager to customize it.
d183 1
d963 2
a964 2
###	output Makefile and xtermcfg.h
AC_OUTPUT(Makefile)
@


1.9
log
@Update to xterm 261. Tested by krw@@, jcs@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.266 2010/06/15 22:30:01 tom Exp $
d554 1
a554 1
	CF_X_FREETYPE
@


1.8
log
@Update to xterm 258. lightly tested by krw@@, thanks.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.262 2010/04/21 00:16:24 tom Exp $
d465 3
a467 3
	[  --enable-broken-st      allow broken string-terminators],
	[enable_broken_st=yes],
	[enable_broken_st=no])
d821 1
a821 1
	CF_PATH_PROG(LUIT,luit)
d991 7
@


1.7
log
@Update to xterm-255. Tested by stsp@@, oga@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.256 2010/01/04 21:41:10 tom Exp $
d283 1
d285 1
d305 2
d308 1
d591 1
a591 1
	[  --enable-fifo-lines     disable FIFO-storage for saved-lines],
d988 3
@


1.6
log
@update to xterm 247, a small bug fix over version 246.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.253 2009/08/30 21:46:21 tom Exp $
d3 2
a4 3
dnl ---------------------------------------------------------------------------
dnl
dnl Copyright 1997-2007,2008 by Thomas E. Dickey
d6 2
d9 24
a32 18
dnl
dnl Permission to use, copy, modify, and distribute this software and its
dnl documentation for any purpose and without fee is hereby granted,
dnl provided that the above copyright notice appear in all copies and that
dnl both that copyright notice and this permission notice appear in
dnl supporting documentation, and that the name of the above listed
dnl copyright holder(s) not be used in advertising or publicity pertaining
dnl to distribution of the software without specific, written prior
dnl permission.
dnl
dnl THE ABOVE LISTED COPYRIGHT HOLDER(S) DISCLAIM ALL WARRANTIES WITH REGARD
dnl TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
dnl AND FITNESS, IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE
dnl LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
dnl WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
dnl ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
dnl OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
dnl
d334 20
a353 11
AC_MSG_CHECKING(for private terminfo-directory)
AC_ARG_WITH(own-terminfo,
	[  --with-own-terminfo=P   set default $TERMINFO (default: from environment)],
	[TERMINFO_DIR=$withval],
	[TERMINFO_DIR=${TERMINFO-none}])
AC_MSG_RESULT($TERMINFO_DIR)
if test "$TERMINFO_DIR" = yes ; then
	AC_MSG_WARN(no value given)
elif test "$TERMINFO_DIR" != none ; then
	if test -d $TERMINFO_DIR ; then
		AC_DEFINE_UNQUOTED(OWN_TERMINFO_DIR,"$TERMINFO_DIR")
d355 6
a360 1
		AC_MSG_WARN(not a directory)
d362 1
a362 4
elif test "$prefix" != NONE ; then
	TERMINFO_DIR='${prefix}/lib/terminfo'
elif test -d /usr/lib/terminfo ; then
	TERMINFO_DIR=/usr/lib/terminfo
d364 1
d366 1
d368 1
a368 5
SET_TERMINFO=
if test -n "$TERMINFO_DIR" ; then
	TERMINFO_DIR='$(DESTDIR)'$TERMINFO_DIR
	SET_TERMINFO='TERMINFO=$(TERMINFO_DIR)'
fi
d717 1
a717 1
		if test "X$cf_cv_regex" != "Xregex.h" ; then
@


1.5
log
@update to xterm 246. Has been in snapshots for some time.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.252 2009/08/13 19:41:01 tom Exp $
d288 1
a288 1
freebsd*|netbsd*)	# 2004/8/15 - revisit this if/when grantpt is known to work.
@


1.4
log
@xterm 238. includes fix for CVE-2008-2383.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.246 2008/12/30 11:30:48 tom Exp $
d568 10
d810 13
@


1.3
log
@xterm-236. Tested by form@@ and simon@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.245 2008/07/27 15:03:56 tom Exp $
d647 4
a650 4
CF_ARG_ENABLE(paste64,
	[  --enable-paste64        enable get/set base64 selection data],
	[enable_paste64=yes],
	[enable_paste64=no])
d733 4
a736 4
CF_ARG_ENABLE(tcap-query,
	[  --enable-tcap-query     compile-in termcap-query support],
	[enable_tcap_query=yes],
	[enable_tcap_query=no])
@


1.2
log
@update to xterm 234. tested by merdely@@, 'looks ok' deraadt@@.
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.241 2008/02/24 21:46:37 tom Exp $
d49 1
a49 1
AC_GCC_TRADITIONAL
d62 1
a62 1
AC_CONST
d280 1
a280 1
CF_TYPE_FD_SET
d886 5
@


1.1
log
@Initial revision
@
text
@d1 1
a1 3
dnl $XTermId: configure.in,v 1.218 2006/07/15 12:21:26 tom Exp $
dnl
dnl $XFree86: xc/programs/xterm/configure.in,v 3.77 2006/06/19 00:36:51 dickey Exp $
d5 1
a5 1
dnl Copyright 1997-2005,2006 by Thomas E. Dickey
d71 2
d123 28
d177 1
d186 1
a186 1
	[  --disable-setuid        disable setuid in xterm, do not install setuid],
d192 8
d247 12
a258 1
	test "$cf_cv_have_utempter" = yes && disable_setuid=yes
d275 1
d510 16
d724 8
d827 10
d884 3
d897 1
a897 1
	CF_GCC_WARNINGS
d907 3
d913 3
a915 1
	AC_DEFINE(DISABLE_SETUID)
@


1.1.1.1
log
@Importing xterm 216
@
text
@@


1.1.1.2
log
@import xterm 225
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.226 2007/03/18 23:37:06 tom Exp $
d7 1
a7 1
dnl Copyright 1997-2006,2007 by Thomas E. Dickey
a72 1
term.h \
a148 1
test "$with_symlink" = yes && with_symlink=xterm
d157 1
a157 1
	[  --disable-setuid        disable setuid in xterm, do not install setuid/setgid],
a162 8
AC_MSG_CHECKING(if you want to disable setgid)
CF_ARG_DISABLE(setgid,
	[  --disable-setgid        disable setgid in xterm, do not install setuid/setgid],
	[disable_setgid=yes],
	[disable_setgid=no],
	no)
AC_MSG_RESULT($disable_setuid)

a460 16
AC_MSG_CHECKING(if you want to allow spawning new xterms)
CF_ARG_ENABLE(exec-xterm,
	[  --enable-exec-xterm     enable "spawn-new-terminal" action],
	[enable_exec_xterm=yes],
	[enable_exec_xterm=no])
AC_MSG_RESULT($enable_exec_xterm)
if test "$enable_exec_xterm" = yes ; then
	CF_PROCFS_CWD
	if test "$cf_cv_procfs_cwd" = no ; then
		AC_MSG_WARN(no suitable proc filesystem found)
	else
		AC_DEFINE_UNQUOTED(PROCFS_ROOT,"$cf_cv_procfs_cwd")
		AC_DEFINE(OPT_EXEC_XTERM)
	fi
fi

a658 8
AC_MSG_CHECKING(if you want to use termcap function-keys)
CF_ARG_ENABLE(tcap-fkeys,
	[  --enable-tcap-fkeys     compile-in termcap function-keys support],
	[enable_tcap_fkeys=yes],
	[enable_tcap_fkeys=no])
AC_MSG_RESULT($enable_tcap_fkeys)
test "$enable_tcap_fkeys" = yes && AC_DEFINE(OPT_TCAP_FKEYS,1)

a753 10
AC_MSG_CHECKING(if you want VT420 rectangle support)
CF_ARG_ENABLE(rectangles,
	[  --enable-rectangles     enable VT420 rectangle support],
	[enable_rectangles=yes],
	[enable_rectangles=no])
AC_MSG_RESULT($enable_rectangles)
if test "$enable_rectangles" = yes ; then
	AC_DEFINE(OPT_DEC_RECTOPS,1)
fi

a820 3
test "$disable_setuid" = yes && AC_DEFINE(DISABLE_SETUID)
test "$disable_setgid" = yes && AC_DEFINE(DISABLE_SETGID)

d824 1
a824 3
elif test $disable_setgid = yes ; then
	MAY_SETUID="#"
	NOT_SETUID=
@


1.1.1.3
log
@import xterm 229
@
text
@d1 1
a1 1
dnl $XTermId: configure.in,v 1.236 2007/07/22 18:51:36 tom Exp $
a123 28
AC_MSG_CHECKING(for directory to install icons)
CF_WITH_PATH(icondir,
	[  --with-icondir=DIR      directory in which to install icons],
	[icondir],[EPREFIX/share/pixmaps],
	['\$(exec_prefix)/share/pixmaps'])
AC_MSG_RESULT($icondir)
AC_SUBST(icondir)

no_icondir=
test "$icondir" = no && no_icondir="#"
AC_SUBST(no_icondir)

# Comment-out the install-desktop rule if the desktop-utils are not found.
AC_MSG_CHECKING(if you want to install desktop files)
CF_ARG_OPTION(desktop,
	[  --disable-desktop       disable install of xterm desktop files],
	[enable_desktop=$enableval],
	[enable_desktop=$enableval],yes)
AC_MSG_RESULT($enable_desktop)

desktop_utils=
if test "$enable_desktop" = yes ; then
AC_CHECK_PROG(desktop_utils,desktop-file-install,yes,no)
fi

test "$desktop_utils" = yes && desktop_utils= || desktop_utils="#"
AC_SUBST(DESKTOP_FLAGS)

d171 1
a171 1
AC_MSG_RESULT($disable_setgid)
d220 1
a220 12
	test "$cf_cv_have_utempter" != yes && use_utempter=no
else
	use_utempter=no
fi

# Some configurations permit (or require) either setuid or setgid mode.
# Let the user decide.
if test "$use_utempter" = yes ; then
	if test "${enable_setuid+set}" != set ; then
		disable_setuid=yes
		CF_VERBOSE([No --disable-setuid option given, force to yes])
	fi
a236 1
	X11/XF86keysym.h \
d855 1
a855 1
	CF_GCC_WARNINGS(Wdeclaration-after-statement Wextra Wno-unknown-pragmas Wswitch-enum)
@


1.1.1.4
log
@Import xterm version 232. tested by many.
@
text
@d1 3
a3 1
dnl $XTermId: configure.in,v 1.240 2008/01/05 14:26:52 tom Exp $
d726 4
a729 4
CF_ARG_DISABLE(tcap-fkeys,
	[  --disable-tcap-fkeys    disable termcap function-keys support],
	[enable_tcap_fkeys=no],
	[enable_tcap_fkeys=yes])
d829 4
a832 4
CF_ARG_DISABLE(rectangles,
	[  --disable-rectangles    disable VT420 rectangle support],
	[enable_rectangles=no],
	[enable_rectangles=yes])
a883 3

dnl FIXME - extra test needed to make tcap-fkeys work on HPUX
AC_CHECK_FUNCS(tigetstr)
@


