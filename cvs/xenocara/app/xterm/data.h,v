head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.15.0.10
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.8
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.4
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.2
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.14.0.2
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.13.0.4
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.2
	OPENBSD_5_0:1.10.0.2
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.8.0.4
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.6
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.6.0.2
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	v232:1.1.1.3
	v229:1.1.1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	v225:1.1.1.2
	v216:1.1.1.1
	xterm:1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2016.08.07.21.27.36;	author matthieu;	state Exp;
branches;
next	1.15;
commitid	psxxjI5z4Vpv2LL4;

1.15
date	2014.05.09.19.56.40;	author matthieu;	state Exp;
branches;
next	1.14;

1.14
date	2014.01.02.15.14.50;	author matthieu;	state Exp;
branches;
next	1.13;

1.13
date	2013.01.04.16.40.18;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2012.06.07.20.20.23;	author matthieu;	state Exp;
branches;
next	1.11;

1.11
date	2011.08.18.19.47.42;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2011.06.07.19.21.06;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2011.03.07.20.41.27;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2009.10.31.14.11.57;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2009.09.05.15.58.09;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2009.03.09.22.13.04;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2008.08.25.18.05.57;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2007.08.25.18.58.42;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.15.19.34.50;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.26.15.48.06;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.11.11.31;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.11.11.31;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.06.15.19.30.19;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2007.08.25.18.53.52;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Update to xterm-325. Testing by krw@@, shadchin@@ and naddy@@. Thanks
@
text
@/* $XTermId: data.h,v 1.127 2016/06/01 09:13:59 tom Exp $ */

/*
 * Copyright 2002-2014,2016 by Thomas E. Dickey
 *
 *                         All Rights Reserved
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the
 * sale, use or other dealings in this Software without prior written
 * authorization.
 *
 * Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts.
 *
 *                         All Rights Reserved
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose and without fee is hereby granted,
 * provided that the above copyright notice appear in all copies and that
 * both that copyright notice and this permission notice appear in
 * supporting documentation, and that the name of Digital Equipment
 * Corporation not be used in advertising or publicity pertaining to
 * distribution of the software without specific, written prior permission.
 *
 *
 * DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
 * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
 * DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
 * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
 * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 */

#ifndef included_data_h
#define included_data_h 1

#include <xterm.h>

extern Widget toplevel;

extern XtAppContext app_con;

#ifdef VMS
/* actually in vms.c */
extern int tt_width;
extern int tt_length;
extern int tt_changed;
extern int tt_pasting;
extern int tt_new_output;
#define VMS_TERM_BUFFER_SIZE	500
struct q_head {
    int flink;
    int blink;
};
extern struct q_head read_queue;
#endif

#if OPT_TEK4014
extern Char *Tpushb;
extern Char *Tpushback;
extern TekLink *tekRefreshList;
extern TekWidget tekWidget;
extern Widget tekshellwidget;
extern int T_lastx;
extern int T_lasty;
extern int Ttoggled;
extern jmp_buf Tekend;
#endif

extern char *ptydev;
extern char *ttydev;
extern int hold_screen;

extern PtyData *VTbuffer;
extern int am_slave;
extern int max_plus1;
extern jmp_buf VTend;

#ifdef DEBUG
extern int debug;
#endif /* DEBUG */

extern PtySelect Select_mask;
extern PtySelect X_mask;
extern PtySelect pty_mask;

extern int ice_fd;

extern XtermWidget term;

extern SIG_ATOMIC_T need_cleanup;
extern SIG_ATOMIC_T caught_intr;

#if defined(HAVE_XKB_BELL_EXT)
#include <X11/XKBlib.h>		/* has the prototype */
#include <X11/extensions/XKBbells.h>	/* has the XkbBI_xxx definitions */
#endif

#ifndef XkbBI_Info
#define	XkbBI_Info			0
#define	XkbBI_MinorError		1
#define	XkbBI_MajorError		2
#define	XkbBI_TerminalBell		9
#define	XkbBI_MarginBell		10
#endif

extern char *ProgramName;
extern Arg ourTopLevelShellArgs[];
extern Cardinal number_ourTopLevelShellArgs;
extern Atom wm_delete_window;

#if HANDLE_STRUCT_NOTIFY
/* Flag icon name with "*** "  on window output when iconified.
 * I'd like to do something like reverse video, but I don't
 * know how to tell this to window managers in general.
 *
 * mapstate can be IsUnmapped, !IsUnmapped, or -1;
 * -1 means no change; the other two are set by event handlers
 * and indicate a new mapstate.  !IsMapped is done in the handler.
 * we worry about IsUnmapped when output occurs.  -IAN!
 */
extern int mapstate;
#endif /* HANDLE_STRUCT_NOTIFY */

#ifdef HAVE_LIB_XCURSOR
extern char *xterm_cursor_theme;
#endif

typedef struct XTERM_RESOURCE {
    char *icon_geometry;
    char *title;
    char *icon_hint;
    char *icon_name;
    char *term_name;
    char *tty_modes;

    int minBufSize;
    int maxBufSize;

    Boolean hold_screen;	/* true if we keep window open  */
    Boolean utmpInhibit;
    Boolean utmpDisplayId;
    Boolean messages;

    String menuLocale;
    String omitTranslation;

    String keyboardType;

#if OPT_PRINT_ON_EXIT
    int printModeNow;
    int printModeOnXError;
    int printOptsNow;
    int printOptsOnXError;
    String printFileNow;
    String printFileOnXError;
#endif

    Boolean oldKeyboard;	/* placeholder for decode_keyboard_type */
#if OPT_SUNPC_KBD
    Boolean sunKeyboard;
#endif
#if OPT_HP_FUNC_KEYS
    Boolean hpFunctionKeys;
#endif
#if OPT_SCO_FUNC_KEYS
    Boolean scoFunctionKeys;
#endif
#if OPT_SUN_FUNC_KEYS
    Boolean sunFunctionKeys;	/* %%% should be VT100 widget resource? */
#endif
#if OPT_TCAP_FKEYS
    Boolean termcapKeys;
#endif

#if OPT_INITIAL_ERASE
    Boolean ptyInitialErase;	/* if true, use pty's sense of erase char */
    Boolean backarrow_is_erase;	/* override backspace/delete */
#endif
    Boolean useInsertMode;
#if OPT_ZICONBEEP
    int zIconBeep;		/* beep level when output while iconified */
    char *zIconFormat;		/* format for icon name */
#endif
#if OPT_PTY_HANDSHAKE
    Boolean wait_for_map;
    Boolean wait_for_map0;	/* ...initial value of .wait_for_map */
    Boolean ptyHandshake;	/* use pty-handshaking */
    Boolean ptySttySize;	/* reset TTY size after pty handshake */
#endif
#if OPT_REPORT_COLORS
    Boolean reportColors;	/* show color information as allocated */
#endif
#if OPT_REPORT_FONTS
    Boolean reportFonts;	/* show bitmap-font information as loaded */
#endif
#if OPT_SAME_NAME
    Boolean sameName;		/* Don't change the title or icon name if it is
				 * the same.  This prevents flicker on the
				 * screen at the cost of an extra request to
				 * the server.
				 */
#endif
#if OPT_SESSION_MGT
    Boolean sessionMgt;
#endif
#if OPT_TOOLBAR
    Boolean toolBar;
#endif
#if OPT_MAXIMIZE
    Boolean maximized;
    String fullscreen_s;	/* resource for "fullscreen" */
    int fullscreen;		/* derived from fullscreen_s */
#endif
} XTERM_RESOURCE;

Boolean guard_keyboard_type;
extern XTERM_RESOURCE resource;

#ifdef USE_IGNORE_RC
extern int ignore_unused;
#endif

#endif /* included_data_h */
@


1.15
log
@Update to xterm 304. With help of shadchin@@

tested by ajacoutot@@ and shadchin@@
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.124 2014/03/02 12:01:26 tom Exp $ */
d4 1
a4 1
 * Copyright 2002-2013,2014 by Thomas E. Dickey
d112 1
d178 2
d237 1
@


1.14
log
@Update to xterm-300. Tested  by ajacoutot@@ and shadchin@@.
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.123 2013/11/23 17:00:45 tom Exp $ */
d4 1
a4 1
 * Copyright 2002-2012,2013 by Thomas E. Dickey
d207 3
@


1.13
log
@Update to xterm 287. tested by mpi@@ and krw@@.
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.121 2012/10/14 18:51:30 tom Exp $ */
d4 1
a4 1
 * Copyright 2002-2011,2012 by Thomas E. Dickey
d144 4
d207 3
@


1.12
log
@Update to xterm 279. Tested by krw@@, mpi@@, shadchin@@.
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.120 2012/03/26 21:48:09 tom Exp $ */
d147 1
@


1.11
log
@Update to xterm 271. Tested by shadchin@@ and ajacoutot@@
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.119 2011/07/12 08:37:24 tom Exp $ */
d4 1
a4 1
 * Copyright 2002-2009,2011 by Thomas E. Dickey
d195 1
@


1.10
log
@Update to xterm 270. Tested by ajacoutot@@, shadchin@@, krw@@ and jasper@@
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.117 2011/04/17 19:21:11 tom Exp $ */
d165 1
d167 3
@


1.9
log
@Update to xterm version 269.
Tested and ok ajacoutot@@, jasper@@, krw@@, shadchin@@
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.115 2011/02/18 01:23:22 tom Exp $ */
d163 5
@


1.8
log
@Update to xterm 250
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.110 2009/10/12 00:33:08 tom Exp $ */
d4 1
a4 1
 * Copyright 2002-2007,2009 by Thomas E. Dickey
a91 1
extern char *xterm_name;
a144 1
    char *xterm_name;
d160 1
d208 2
@


1.7
log
@update to xterm 246. Has been in snapshots for some time.
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.109 2009/08/09 17:23:01 tom Exp $ */
d213 4
@


1.6
log
@Update to xterm 242. Tested by jsg@@.
@
text
@d1 1
a1 3
/* $XTermId: data.h,v 1.106 2009/01/24 16:24:06 tom Exp $ */

/* $XFree86: xc/programs/xterm/data.h,v 3.39 2006/02/13 01:14:58 dickey Exp $ */
@


1.5
log
@xterm-236. Tested by form@@ and simon@@.
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.105 2007/07/22 16:03:16 tom Exp $ */
d6 1
a6 1
 * Copyright 2002-2006,2007 by Thomas E. Dickey
d208 3
@


1.4
log
@update to xterm 229. Tested on various architectures by aanriot@@
@
text
@a113 1

@


1.3
log
@Merge xterm version 225
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.101 2007/03/16 23:46:24 tom Exp $ */
d110 2
d135 13
a186 1
    Boolean wait_for_map;
d192 2
d195 1
@


1.2
log
@OpenBSD local changes
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.95 2006/07/15 12:05:25 tom Exp $ */
d6 1
a6 1
 * Copyright 2002-2005,2006 by Thomas E. Dickey
d83 1
a83 1
extern TekLink *TekRefresh;
a96 9
#if OPT_ZICONBEEP
extern int zIconBeep;
extern Boolean zIconBeep_flagged;
#endif

#if OPT_SAME_NAME
extern Boolean sameName;
#endif

a109 4
extern Boolean waitingForTrackInfo;

extern EventMode eventMode;

a130 1
extern Bool waiting_for_initial_map;
d149 2
d163 3
@


1.1
log
@Initial revision
@
text
@d125 1
@


1.1.1.1
log
@Importing xterm 216
@
text
@@


1.1.1.2
log
@import xterm 225
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.101 2007/03/16 23:46:24 tom Exp $ */
d6 1
a6 1
 * Copyright 2002-2006,2007 by Thomas E. Dickey
d83 1
a83 1
extern TekLink *tekRefreshList;
d97 9
d119 4
d143 1
a161 2
    String menuLocale;

a173 3
#endif
#if OPT_TCAP_FKEYS
    Boolean termcapKeys;
@


1.1.1.3
log
@import xterm 229
@
text
@d1 1
a1 1
/* $XTermId: data.h,v 1.105 2007/07/22 16:03:16 tom Exp $ */
a109 2
extern int ice_fd;

a131 13
#if HANDLE_STRUCT_NOTIFY
/* Flag icon name with "*** "  on window output when iconified.
 * I'd like to do something like reverse video, but I don't
 * know how to tell this to window managers in general.
 *
 * mapstate can be IsUnmapped, !IsUnmapped, or -1;
 * -1 means no change; the other two are set by event handlers
 * and indicate a new mapstate.  !IsMapped is done in the handler.
 * we worry about IsUnmapped when output occurs.  -IAN!
 */
extern int mapstate;
#endif /* HANDLE_STRUCT_NOTIFY */

d171 1
a176 2
    Boolean wait_for_map;
    Boolean wait_for_map0;	/* ...initial value of .wait_for_map */
a177 1
    Boolean ptySttySize;	/* reset TTY size after pty handshake */
@


