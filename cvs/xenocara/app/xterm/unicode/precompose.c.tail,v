head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.4
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.2
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.1.1.2.0.38
	OPENBSD_6_0_BASE:1.1.1.2
	OPENBSD_5_9:1.1.1.2.0.36
	OPENBSD_5_9_BASE:1.1.1.2
	OPENBSD_5_8:1.1.1.2.0.34
	OPENBSD_5_8_BASE:1.1.1.2
	OPENBSD_5_7:1.1.1.2.0.32
	OPENBSD_5_7_BASE:1.1.1.2
	OPENBSD_5_6:1.1.1.2.0.30
	OPENBSD_5_6_BASE:1.1.1.2
	OPENBSD_5_5:1.1.1.2.0.28
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.26
	OPENBSD_5_4_BASE:1.1.1.2
	OPENBSD_5_3:1.1.1.2.0.24
	OPENBSD_5_3_BASE:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.22
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.20
	OPENBSD_5_0:1.1.1.2.0.18
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.14
	OPENBSD_4_9_BASE:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.16
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.12
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.10
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.8
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.6
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.4
	v232:1.1.1.2
	v229:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v225:1.1.1.2
	v216:1.1.1.1
	xterm:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.08.07.21.27.36;	author matthieu;	state Exp;
branches;
next	1.1;
commitid	psxxjI5z4Vpv2LL4;

1.1
date	2006.11.26.11.11.54;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.11.11.54;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.06.15.19.30.49;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to xterm-325. Testing by krw@@, shadchin@@ and naddy@@. Thanks
@
text
@};

#define UNICODE_SHIFT 21

int do_precomposition(int base, int comb) {
  int min = 0;
  int max = sizeof(precompositions) / sizeof(precompositions[0]) - 1;
  unsigned long sought = ((unsigned) base << UNICODE_SHIFT) | (unsigned) comb;

  /* binary search */
  while (max >= min) {
    int mid = (min + max) / 2;
    unsigned long that = ((unsigned long) precompositions[mid].base << UNICODE_SHIFT) | ((unsigned) precompositions[mid].comb);
    if (that < sought) {
      min = mid + 1;
    } else if (that > sought) {
      max = mid - 1;
    } else {
      return precompositions[mid].replacement;
    }
  }
  /* no match */
  return -1;
}
@


1.1
log
@Initial revision
@
text
@d3 2
d8 1
a8 2
  int mid;
  unsigned int sought = ((unsigned)base << 16) | (unsigned)comb, that;
d12 2
a13 2
    mid = (min + max) / 2;
    that = ((unsigned)precompositions[mid].base << 16) | ((unsigned)precompositions[mid].comb);
@


1.1.1.1
log
@Importing xterm 216
@
text
@@


1.1.1.2
log
@import xterm 225
@
text
@a2 2
#define UNICODE_SHIFT 21

d7 1
a7 2
  unsigned long sought = ((unsigned) base << UNICODE_SHIFT) | (unsigned) comb;
  unsigned long that;
d12 1
a12 1
    that = ((unsigned) precompositions[mid].base << UNICODE_SHIFT) | ((unsigned) precompositions[mid].comb);
@

