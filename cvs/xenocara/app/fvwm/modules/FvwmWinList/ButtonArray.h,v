head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.28
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.26
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.24
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.22
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.20
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.18
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.16
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.14
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.12
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.8
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v2_2_5:1.1.1.1
	fvwm:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2011.01.18.19.28.33;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.10.53.55;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.10.53.55;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Picture -> FvwmPicture, to avoid collisions with xrandr includes.
As noticed by Tristan Le Guern.
okay matthieu@@
@
text
@/* FvwmWinList Module for Fvwm. 
 *
 *  Copyright 1994,  Mike Finger (mfinger@@mermaid.micro.umn.edu or
 *                               Mike_Finger@@atk.com)
 *
 * The functions in this header file that are the original work of Mike Finger.
 * 
 * No guarantees or warantees or anything are provided or implied in any way
 * whatsoever. Use this program at your own risk. Permission to use this
 * program for any purpose is given, as long as the copyright is kept intact.
 *
 *  Things to do:  Convert to C++  (In Progress)
 */

/* Struct definitions */
typedef struct button
{
  char *title;
  char *truncate_title; /* valid only if truncatewidth > 0 */
  int up, needsupdate, tw, set, truncatewidth;
  struct button *next;
  FvwmPicture p;
  long desk;
} Button;

typedef struct
{
  int count;
  Button *head,*tail;
  int x,y,w,h;
} ButtonArray;

#define MAX_COLOUR_SETS 4

/* Function Prototypes */
Button *ButtonNew(char *title, FvwmPicture *p, int up);
void InitArray(ButtonArray *array,int x,int y,int w,int h);
void UpdateArray(ButtonArray *array,int x,int y,int w, int h);
int AddButton(ButtonArray *array, char *title, FvwmPicture *p,int up);
int UpdateButton(ButtonArray *array, int butnum, char *title, int up);
int UpdateButtonPicture(ButtonArray *array, int butnum, FvwmPicture *p);
int UpdateButtonSet(ButtonArray *array, int butnum, int set);
void RemoveButton(ButtonArray *array, int butnum);
Button *find_n(ButtonArray *array, int n);
void FreeButton(Button *ptr);
void FreeAllButtons(ButtonArray *array);
void DoButton(Button *ptr, int x, int y, int w, int h);
void DrawButtonArray(ButtonArray *array, int all);
void SwitchButton(ButtonArray *array,int butnum);
int WhichButton(ButtonArray *array,int x, int y);
void PrintButtons(ButtonArray *array);
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
  Picture p;
d36 1
a36 1
Button *ButtonNew(char *title, Picture *p, int up);
d39 1
a39 1
int AddButton(ButtonArray *array, char *title, Picture *p,int up);
d41 1
a41 1
int UpdateButtonPicture(ButtonArray *array, int butnum, Picture *p);
@


1.1.1.1
log
@Importing from XF4, plus BSD make infrastructure
@
text
@@
