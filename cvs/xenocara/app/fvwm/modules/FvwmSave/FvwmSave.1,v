head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.38
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.36
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.34
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.32
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.30
	OPENBSD_5_6_BASE:1.1.1.1
	OPENBSD_5_5:1.1.1.1.0.28
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.26
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.24
	OPENBSD_5_3_BASE:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.22
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.20
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v2_2_5:1.1.1.1
	fvwm:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2006.11.26.10.53.53;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.10.53.53;	author matthieu;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@.\" $OpenBSD: FvwmSave.1,v 1.2 2004/07/10 20:56:33 matthieu Exp $
.\" t
.\" @@(#)FvwmSave.1	1/28/94
.TH FvwmSave 1 "Jan 28 1994" 1.20
.UC
.SH NAME
FvwmSave \- the FVWM desktop-layout saving module
.SH SYNOPSIS
FvwmSave is spawned by fvwm, so no command line invocation will work.

.SH DESCRIPTION
When called, this module will attempt to save your current desktop
layout into a file called new.xinitrc. Ideally, this file will look just 
like .xinitrc, but in reality, you will have to edit it to get a 
useable configuration, so be sure to keep a backup of your old .xinitrc.
 
Your applications must supply certain hints to the X window system.
Emacs, for example, does not, so FvwmSave can't get any
information from it.  
 
Also, FvwmSave assumes that certain command line options are
globally accepted by applications, which may not be the case.

.SH COPYRIGHTS
The NoClutter program, and the concept for
interfacing this module to the Window Manager, are all original work
by Robert Nation

Copyright 1994, Robert Nation. No guarantees or warranties or anything
are provided or implied in any way whatsoever. Use this program at your
own risk. Permission to use this program for any purpose is given,
as long as the copyright is kept intact. 


.SH INITIALIZATION
During initialization, \fINoClutter\fP will eventually search a 
configuration file which describes the time-outs and actions to take.
The configuration file is the same file that fvwm used during initialization.

If the NoClutter executable is linked to another name, ie ln -s
NoClutter OtherClutter, then another module called OtherClutter can be
started, with a completely different configuration than NoClutter,
simply by changing the keyword  NoClutter to OtherClutter. This way multiple
clutter-reduction programs can be used.

.SH INVOCATION
NoClutter can be invoked by inserting the line 'Module NoClutter' in
the .fvwmrc file. This can be placed on a line by itself, if NoClutter
is to be spawned during fvwm's initialization, or can be bound to a
menu or mouse button or keystroke to invoke it later. Fvwm will search
directory specified in the ModulePath configuration option to attempt
to locate NoClutter.

.SH CONFIGURATION OPTIONS
NoClutter reads the same .fvwmrc file as fvwm reads when it starts up,
and looks for lines similar to "*NoClutter 3600 Iconify". The format
of these lines is "*NoClutter [time] [command]", where command is any
fvwm built-in command, and time is the time in seconds between when a
window looses focus and when the command is executed. At most 3
actions can be specified.


.SH AUTHOR
Robert Nation and Mr. Per Persson
<pp@@solace.mh.se> (Omnion on IRC)
@


1.1.1.1
log
@Importing from XF4, plus BSD make infrastructure
@
text
@@
