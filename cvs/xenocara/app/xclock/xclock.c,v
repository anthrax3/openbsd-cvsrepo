head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.2
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.4.0.12
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.8
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_0_3:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_0_2:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.11.11.21.12.19;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	8pbr457MqVLlzAkt;

1.5
date	2013.09.14.09.15.40;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.06.06.03.42;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.30.05.35.58;	author dcoppa;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.26.14.35.39;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.20.29.54;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.20.29.54;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.09.12.11.52.42;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@pledge for xclock. okan@@ got to the same patch. I added autoconf goo
to make it possible to send it upstreams. ok deraadt@@
@
text
@/* $Xorg: xclock.c,v 1.4 2001/02/09 02:05:39 xorgcvs Exp $ */
/* $XdotOrg: $ */

/*
 * xclock --  Hacked from Tony Della Fera's much hacked clock program.
 *
 * "-strftime" option added by George Belotsky, Open Light Software Inc.
 */

/*
Copyright 1989, 1998  The Open Group

Permission to use, copy, modify, distribute, and sell this software and its
documentation for any purpose is hereby granted without fee, provided that
the above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation.

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of The Open Group shall not be
used in advertising or otherwise to promote the sale, use or other dealings
in this Software without prior written authorization from The Open Group.
 */
/* $XFree86: xclock.c,v 1.16 2002/10/21 13:33:08 alanh Exp $ */


#ifdef HAVE_CONFIG_H
# include "config.h"
#endif

#ifdef HAVE_PLEDGE
# include <err.h>
#endif
#include <stdio.h>
#include <stdlib.h>
#include <X11/Xatom.h>
#include <X11/Intrinsic.h>
#include <X11/StringDefs.h>
#include <X11/Shell.h>
#include "Clock.h"
#include <X11/Xaw/Cardinals.h>
#include "clock.bit"
#include "clmask.bit"

#ifdef XKB
#include <X11/extensions/XKBbells.h>
#endif

#ifndef NO_I18N
#include <locale.h> /* for setlocale() */
Boolean no_locale = True; /* if True, use old behavior */
#endif

#ifdef HAVE_GETPID
# include <unistd.h>
#endif

/* Command line options table.  Only resources are entered here...there is a
   pass over the remaining options after XtParseCommand is let loose. */

static XrmOptionDescRec options[] = {
{"-chime",	"*clock.chime",		XrmoptionNoArg,		"TRUE"},
{"-hd",		"*clock.hands",		XrmoptionSepArg,	NULL},
{"-hands",	"*clock.hands",		XrmoptionSepArg,	NULL},
{"-hl",		"*clock.highlight",	XrmoptionSepArg,	NULL},
{"-highlight",	"*clock.highlight",	XrmoptionSepArg,	NULL},
{"-update",	"*clock.update",	XrmoptionSepArg,	NULL},
{"-padding",	"*clock.padding",	XrmoptionSepArg,	NULL},
{"-d",		"*clock.analog",	XrmoptionNoArg,		"FALSE"},
{"-digital",	"*clock.analog",	XrmoptionNoArg,		"FALSE"},
{"-analog",	"*clock.analog",	XrmoptionNoArg,		"TRUE"},
{"-twelve",	"*clock.twentyfour",	XrmoptionNoArg,		"FALSE"},
{"-twentyfour",	"*clock.twentyfour",	XrmoptionNoArg,		"TRUE"},
{"-brief",	"*clock.brief",		XrmoptionNoArg,		"TRUE"},
{"-utime",	"*clock.utime",		XrmoptionNoArg,		"TRUE"},
{"-strftime",	"*clock.strftime",	XrmoptionSepArg,	NULL},
#ifdef XRENDER
{"-face",	"*clock.face",		XrmoptionSepArg,	NULL},
{"-render",	"*clock.render",	XrmoptionNoArg,		"TRUE"},
{"-norender",	"*clock.render",	XrmoptionNoArg,		"FALSE"},
{"-sharp",	"*clock.sharp",		XrmoptionNoArg,		"TRUE"},
#endif
};

static void quit ( Widget w, XEvent *event, String *params,
		   Cardinal *num_params );

static XtActionsRec xclock_actions[] = {
    { "quit",	quit },
};

static Atom wm_delete_window;

/*
 * Report the syntax for calling xclock.
 */
static void _X_NORETURN
Syntax(const char *call)
{
    fprintf (stderr, "Usage: %s %s", call,
	    "[-analog] [-bw <pixels>] [-digital] [-brief]\n"
	    "       [-utime] [-strftime <fmt-str>]\n"
	    "       [-fg <color>] [-bg <color>] [-hd <color>]\n"
	    "       [-hl <color>] [-bd <color>]\n"
	    "       [-fn <font_name>] [-help] [-padding <pixels>]\n"
	    "       [-rv] [-update <seconds>] [-display displayname]\n"
#ifdef XRENDER
	    "       [-[no]render] [-face <face name>] [-sharp]\n"
#endif
	    "       [-geometry geom] [-twelve] [-twentyfour]\n\n");
    exit(1);
}

static void _X_NORETURN
die(Widget w, XtPointer client_data, XtPointer call_data)
{
    XCloseDisplay(XtDisplayOfObject(w));
    exit(0);
}

static void
quit(Widget w, XEvent *event, String *params, Cardinal *num_params)
{
    Arg arg;

    if (event->type == ClientMessage &&
	event->xclient.data.l[0] != wm_delete_window) {
#ifdef XKB
	XkbStdBell(XtDisplay(w), XtWindow(w), 0, XkbBI_MinorError);
#else
	XBell (XtDisplay(w), 0);
#endif
    } else {
	/* resign from the session */
	XtSetArg(arg, XtNjoinSession, False);
	XtSetValues(w, &arg, ONE);
	die(w, NULL, NULL);
    }
}

static void
save(Widget w, XtPointer client_data, XtPointer call_data)
{
    XtCheckpointToken token = (XtCheckpointToken) call_data;
    /* we have nothing to save */
    token->save_success = True;
}

int
main(int argc, char *argv[])
{
    Widget toplevel;
    Arg arg;
    Pixmap icon_pixmap = None;
    XtAppContext app_con;

#ifndef NO_I18N
    char *locale_name = setlocale(LC_ALL,"");
    XtSetLanguageProc ( NULL, NULL, NULL );

    if(!locale_name || 0 == strcmp(locale_name,"C")) {
	no_locale = True;
    }
    else {
	no_locale = False;
    }
#endif

    toplevel = XtOpenApplication(&app_con, "XClock",
				 options, XtNumber(options), &argc, argv, NULL,
				 sessionShellWidgetClass, NULL, ZERO);
    if (argc != 1) Syntax(argv[0]);
    XtAddCallback(toplevel, XtNdieCallback, die, NULL);
    XtAddCallback(toplevel, XtNsaveCallback, save, NULL);
    XtAppAddActions (app_con, xclock_actions, XtNumber(xclock_actions));

    /*
     * This is a hack so that wm_delete_window will do something useful
     * in this single-window application.
     */
    XtOverrideTranslations(toplevel,
		    XtParseTranslationTable ("<Message>WM_PROTOCOLS: quit()"));

    XtSetArg(arg, XtNiconPixmap, &icon_pixmap);
    XtGetValues(toplevel, &arg, ONE);

    if (icon_pixmap == None) {
	arg.value = (XtArgVal)XCreateBitmapFromData(XtDisplay(toplevel),
				       XtScreen(toplevel)->root,
				       (char *)clock_bits, clock_width, clock_height);
	XtSetValues (toplevel, &arg, ONE);
    }

    XtSetArg(arg, XtNiconMask, &icon_pixmap);
    XtGetValues(toplevel, &arg, ONE);
    if (icon_pixmap == None) {
	arg.value = (XtArgVal)XCreateBitmapFromData(XtDisplay(toplevel),
				       XtScreen(toplevel)->root,
				       (char *)clock_mask_bits, clock_mask_width,
				       clock_mask_height);
	XtSetValues (toplevel, &arg, ONE);
    }

    XtCreateManagedWidget ("clock", clockWidgetClass, toplevel, NULL, ZERO);
    XtRealizeWidget (toplevel);
    wm_delete_window = XInternAtom (XtDisplay(toplevel), "WM_DELETE_WINDOW",
				    False);
    (void) XSetWMProtocols (XtDisplay(toplevel), XtWindow(toplevel),
			    &wm_delete_window, 1);

#ifdef HAVE_GETPID
    {
	unsigned long pid = (unsigned long)getpid();
	XChangeProperty(XtDisplay(toplevel), XtWindow(toplevel),
			XInternAtom(XtDisplay(toplevel), "_NET_WM_PID", False),
			XA_CARDINAL, 32, PropModeReplace,
			(unsigned char *) &pid, 1);
    }
#endif

#ifdef HAVE_PLEDGE
    if (pledge("stdio", NULL) == -1)
	    err(1, "pledge");
#endif

    XtAppMainLoop (app_con);
    exit(0);
}
@


1.5
log
@Update to xclock 1.0.7
@
text
@d40 3
d228 5
@


1.4
log
@Update to xclock 1.0.5
@
text
@d103 2
a104 2
static void
Syntax(char *call)
d106 7
a112 6
	(void) printf ("Usage: %s [-analog] [-bw <pixels>] [-digital] [-brief]\n", call);
	(void) printf ("       [-utime] [-strftime <fmt-str>]\n");
	(void) printf ("       [-fg <color>] [-bg <color>] [-hd <color>]\n");
	(void) printf ("       [-hl <color>] [-bd <color>]\n");
	(void) printf ("       [-fn <font_name>] [-help] [-padding <pixels>]\n");
	(void) printf ("       [-rv] [-update <seconds>] [-display displayname]\n");
d114 1
a114 1
	(void) printf ("       [-[no]render] [-face <face name>] [-sharp]\n");
d116 2
a117 2
	(void) printf ("       [-geometry geom] [-twelve] [-twentyfour]\n\n");
	exit(1);
d120 1
a120 1
static void
@


1.3
log
@Cast "pid" as unsigned long to avoid a bus error on sparc64.

OK matthieu@@
@
text
@d218 1
a218 1
	unsigned long pid = (unsigned long) getpid();
@


1.2
log
@update to xclock 1.0.4
@
text
@d218 1
a218 1
	pid_t pid = getpid();
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
/* $XdotOrg: app/xclock/xclock.c,v 1.4 2005/07/16 17:31:45 alanc Exp $ */
d60 4
d91 1
a91 1
static void quit ( Widget w, XEvent *event, String *params, 
d119 1
a119 1
static void 
d126 1
a126 1
static void 
d146 1
a146 1
static void 
d154 1
a154 1
int 
d186 1
a186 1
    XtOverrideTranslations(toplevel, 
d204 1
a204 1
				       (char *)clock_mask_bits, clock_mask_width, 
d215 11
@


1.1.1.1
log
@Importing from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xclock 1.0.3
@
text
@d2 1
a2 1
/* $XdotOrg: $ */
a59 4
#ifdef HAVE_GETPID
# include <unistd.h>
#endif

a210 11

#ifdef HAVE_GETPID
    {
	pid_t pid = getpid();
	XChangeProperty(XtDisplay(toplevel), XtWindow(toplevel),
			XInternAtom(XtDisplay(toplevel), "_NET_WM_PID", False),
			XA_CARDINAL, 32, PropModeReplace,
			(unsigned char *) &pid, 1);
    }
#endif
    
@

