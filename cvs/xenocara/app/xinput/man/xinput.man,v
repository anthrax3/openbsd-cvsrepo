head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.10
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.8
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.2
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.6
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.8
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.2
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	v1_3_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@.\" @;


1.7
date	2014.05.03.19.37.22;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2012.06.11.19.26.23;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.03.28.13.08.55;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.24.14.17.46;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.18.20.50.16;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.02.15.24.13;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.07.13.28.46;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.07.13.28.46;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to xinput 1.6.1
@
text
@.TH xinput 1 __xorgversion__

.SH NAME
xinput - utility to configure and test X input devices

.SH SYNOPSIS
.B xinput [OPTIONS] [DEVICE]

.SH DESCRIPTION
xinput is a utility to list available input devices, query information about
a device and change input device settings.
.SH OPTIONS
.TP 8
.B --version
Test if the X Input extension is available and return the version number
of the program and the version supported by the server. This option does not
require a device name.
.PP
.TP 8
.B --list [--short || --long || --name-only || --id-only] [\fIdevice\fP]
If no argument is given list all the input devices. If an argument is given,
show all the features of \fIdevice\fP.
If --long is provided, the output includes detailed information about the
capabilities of each devices. Otherwise, or if --short is provided, only the
device names and some minimal information is listed.
If --name-only is provided, the output is limited to the device names. One
device name is listed per line. Note that the order the devices are listed
is undefined.
If --id-only is provided, the output is limited to the device IDs. One
device ID is listed per line. Note that the order the devices are listed is
undefined.
.PP
.TP 8
.B --get-feedbacks \fIdevice\fP
Display the feedbacks of \fIdevice\fP.
.PP
.TP 8
.B --set-pointer \fIdevice\fP
Switch \fIdevice\fP in core pointer.
This option does nothing on X servers 1.5 and later.
.PP
.TP 8
.B --set-mode \fIdevice\fP \fIABSOLUTE|RELATIVE\fP
Change the mode of \fIdevice\fP.
.PP
.TP 8
.B --set-ptr-feedback \fIdevice\fP \fIthreshold\fP \fInum\fP \fIdenom\fP
Change the pointer acceleration (or feedback) parameters of \fIdevice\fP.
The xset(__appmansuffix__) man page has more details. For X.Org Server 1.7
and above, there are additional device properties pertaining to pointer
acceleration. These do not replace, but complement the pointer feedback
setting.
.PP
.TP 8
.B --set-integer-feedback \fIdevice\fP \fIindex\fP \fIvalue\fP
Change the value of an integer feedback of \fIdevice\fP.
.PP
.TP 8
.B --set-button-map \fIdevice\fP \fImap_button_1\fP [\fImap_button_2\fP [\fI...\fP]]
Change the button mapping of \fIdevice\fP. The buttons are specified in
physical order (starting with button 1) and are mapped to the logical button
provided. 0 disables a button. The default button mapping for a device is 1
2 3 4 5 6 etc.
.PP
.TP 8
.B --query-state \fIdevice\fP
Query the device state.
.PP
.TP 8
.B --list-props \fIdevice\fP [\fIdevice\fP [\fI...\fP]]
Lists properties that can be set for the given device(s).
.PP
.TP 8
.B --set-int-prop \fIdevice\fP \fIproperty\fP \fIformat\fP \fIvalue\fP
Sets an integer property for the device.  Appropriate values for \fIformat\fP
are 8, 16, or 32, depending on the property. Deprecated, use
.B --set-prop
instead.
.PP
.TP 8
.B --set-float-prop \fIdevice\fP \fIproperty\fP \fIvalue\fP
Sets a float property for the device. Deprecated, use
.B --set-prop
instead.
.PP
.TP 8
.B --set\-prop [\-\-type=\fIatom|float|int\fP] [\-\-format=\fI8|16|32\fP] \fIdevice\fP \fIproperty\fP \fIvalue\fP [...]
Set the property to the given value(s).  If not specified, the format and type
of the property are left as-is.  The arguments are interpreted according to the
property type.
.PP
.TP 8
.B --watch-props \fIdevice\fP
Prints to standard out when property changes occur.
.PP
.TP 8
.B --delete-prop \fIdevice\fP \fIproperty\fP
Delete the property from the device.
.PP
.TP 8
.B --test [-proximity] \fIdevice\fP
Register all extended events from \fIdevice\fP and enter an endless
loop displaying events received. If the -proximity is given, ProximityIn
and ProximityOut are registered.
.PP
.TP 8
.B --test-xi2 [--root] [\fIdevice\fP]
Register for a number of XI2 events and display them. If a device is given,
only events on this device are displayed. If --root is given, events are
selected on the root window only. Otherwise, a new client window is created
(similar to xev).
.PP
.TP 8
.B --create-master \fIprefix\fP [sendCore] [enable]
Create a new pair of master devices on an XI2-enabled server with the given
\fIprefix\fP. The server will create one master pointer named "\fIprefix\fP
pointer" and one master keyboard named "\fIprefix\fP keyboard".  If
\fIsendCore\fP is 1, this pair of master devices is set to send core events
(default).  If \fIenable\fP is 1, this master device pair will be enabled
immediately (default).
.PP
.TP 8
.B --remove-master \fImaster\fP [Floating|AttachToMaster] [returnPointer] [returnKeyboard]
Remove \fImaster\fP  and its paired master device. Attached slave devices
are set floating if \fIFloating\fP is specified or the argument is omitted.
If the second argument is \fIAttachToMaster\fP, \fIreturnPointer\fP
specifies the master pointer to attach all slave pointers to and
\fIreturnKeyboard\fP specifies the master keyboard to attach all slave
keyboards to.
.PP
.TP 8
.B --reattach \fIslave\fP \fImaster\fP
Reattach \fIslave\fP to \fImaster\fP.
.PP
.TP 8
.B --float \fIslave\fP
Remove \fIslave\fP from its current master device.
.PP
.TP 8
.B --set-cp \fIwindow\fP \fImaster\fP
Set the ClientPointer for the client owning \fIwindow\fP to \fImaster\fP.
\fImaster\fP must specify a master pointer.
.PP
.TP 8
.B --map-to-output \fIdevice\fP \fIcrtc\fP
Restricts the movements of the absolute \fIdevice\fP to the RandR
\fIcrtc\fP. The output name must match a currently connected output (see
\fIxrandr(__appmansuffix__)\fP). If the NVIDIA binary driver is
detected or RandR 1.2 or later is not available, a Xinerama output may be
specified as "HEAD-N", with N being the Xinerama screen number. This option
has no effect on relative devices.
.PP
.TP 8
.B --enable \fIdevice\fP
Enable the \fIdevice\fP. This call is equivalent to
.B xinput --set-prop device \fI"Device Enabled"\fP 1
.PP
.TP 8
.B --disable \fIdevice\fP
Disable the \fIdevice\fP. This call is equivalent to
.B xinput --set-prop device \fI"Device Enabled"\fP 0
.PP
\fIdevice\fP can be the device name as a string or the XID of the
device.
.PP
\fIslave\fP can be the device name as a string or the XID of a slave
device.
.PP
\fImaster\fP can be the device name as a string or the XID of a master
device.
.PP
\fIproperty\fP can be the property as a string or the Atom value.
.PP
.SH "SEE ALSO"
X(__miscmansuffix__), xset(__appmansuffix__), xrandr(__appmansuffix__)
.SH COPYRIGHT
Copyright 1996,1997, Frederic Lepied.
.PP
Copyright 2007, Peter Hutterer.
.PP
Copyright 2008, Philip Langdale.
.PP
Copyright 2009-2011, Red Hat, Inc.

.SH AUTHORS

.nf
Peter Hutterer <peter.hutterer@@who-t.net>
Philip Langdale, <philipl@@alumni.utexas.net>
Frederic Lepied, France <Frederic.Lepied@@sugix.frmug.org>
Julien Cristau <jcristau@@debian.org>
Thomas Jaeger <ThJaeger@@gmail.com>
and more.
.fi
@


1.6
log
@Update to xinput 1.6.0
@
text
@d107 1
a107 1
.B --test-xi2 [\fIdevice\fP]
d109 3
a111 1
only events on this device are displayed.
@


1.5
log
@Update to xinput 1.5.1
@
text
@d20 1
a20 1
.B --list [--short || --long] [\fIdevice\fP]
d26 6
d49 1
a49 1
The xset(1) man page has more details. For X.Org Server 1.7
d107 3
a109 3
.B --test_xi2
Register for a number of XI2 events and display them. This option does not
take a device argument.
d142 19
d173 1
a173 1
X(__miscmansuffix__), xset(1)
d177 2
d180 2
d186 1
a188 1
Peter Hutterer <peter.hutterer@@who-t.net>
@


1.4
log
@Udate to xinput version 1.5.0
@
text
@d22 1
a22 1
show all the features of \fIdevice\fP. Uses XListInputDevices(3).
d42 5
a46 1
Change the acceleration of \fIdevice\fP.
d105 31
d139 6
d147 2
a148 1

@


1.3
log
@update to xinput 1.4.2
@
text
@d1 1
a1 2
.\" $Id: xinput.man,v 1.2 2009/05/02 15:24:13 matthieu Exp $
.TH xinput 1 "$Date: 2009/05/02 15:24:13 $" "Frederic Lepied"
d4 1
a4 1
xinput - utility to configure and test XInput devices
d7 1
a7 9
.B xinput
[version] [list [\fIdevice_name\fP]] [set-pointer \fIdevice_name\fP]
[get-feedbacks \fIdevice_name\fP]
[set-mode \fIdevice_name\fP \fIABSOLUTE|RELATIVE\fP]
[set-ptr-feedback \fIdevice_name\fP \fIthreshold\fP \fInum\fP \fIdenom\fP]
[set-integer-feedback \fIdevice_name\fP \fIindex\fP \fIvalue\fP]
[set-button-map \fIdevice_name\fP \fImap button 1\fP [\fImap button 2\fP [\fI...\fP]]]
[query-state \fIdevice_name\fP]
[test [-proximity] \fIdevice_name\fP]
d10 3
d14 4
a17 3
.B xinput version
test if the XInput extension is available and return the version number
of the program.
d20 6
a25 4
.B xinput list [\fIdevice_name\fP]
If no argument is given list all the input devices showing all their
features. If an argument is given, show all the feature of \fIdevice_name\fP.
Uses XListInputDevices(3).
d28 2
a29 2
.B xinput get-feedbacks \fIdevice_name\fP
Display the feedbacks of \fIdevice_name\fP. Uses XGetFeedbackControl(3).
d32 3
a34 2
.B xinput set-pointer \fIdevice_name\fP
Switch \fIdevice_name\fP in core pointer. Uses XChangePointerDevice(3).
d37 2
a38 2
.B xinput set-mode \fIdevice_name\fP \fIABSOLUTE|RELATIVE\fP
Change the mode of \fIdevice_name\fP. Uses XSetDeviceMode(3).
d41 2
a42 2
.B xinput set-ptr-feedback \fIdevice_name\fP \fIthreshold\fP \fInum\fP \fIdenom\fP
Change the acceleration of \fIdevice_name\fP. Uses XChangeFeedbackControl(3).
d45 2
a46 2
.B xinput set-integer-feedback \fIdevice_name\fP \fIindex\fP \fIvalue\fP
Change the value of an integer feedback of \fIdevice_name\fP. Uses XChangeFeedbackControl(3).
d49 5
a53 2
.B xinput set-button-map \fIdevice_name\fP \fImap button 1\fP [\fImap button 2\fP [\fI...\fP]]
Change the button mapping of \fIdevice_name\fP. Uses XSetDeviceButtonMapping(3).
d56 2
a57 2
.B xinput query-state \fIdevice_name\fP
Query the device state. Uses XQueryDeviceState(3).
d60 1
a60 1
.B xinput list-props \fIdevice_name\fP [\fIdevice_name\fP...]
d64 1
a64 1
.B xinput set-int-prop \fIdevice_name\fP \fIproperty\fP \fIformat\fP \fIvalue\fP
d66 3
a68 1
are 8, 16, or 32, depending on the property.
d71 4
a74 2
.B xinput set-float-prop \fIdevice_name\fP \fIproperty\fP \fIvalue\fP
Sets a float property for the device.
d77 7
a83 1
.B xinput watch-props \fIdevice_name\fP
d87 1
a87 1
.B xinput delete-prop \fIdevice_name\fP \fIproperty\fP
a89 1
.PP
d91 2
a92 2
.B xinput test [-proximity] \fIdevice_name\fP
Register all extended events from \fIdevice_name\fP and enter an endless
d96 6
a101 1
\fIdevice_name\fP can be the device name as a string or the XID of the
d112 1
a112 1
.SH AUTHOR
d117 4
a121 2

Patches, bug reports, and suggestions are welcome.
@


1.2
log
@update to xinput 1.4.1
@
text
@d1 2
a2 2
.\" $Id: xinput.man,v 1.1.1.1 2008/09/07 13:28:46 matthieu Exp $
.TH xinput 1 "$Date: 2008/09/07 13:28:46 $" "Frederic Lepied"
d66 4
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
.\" $Id: xinput.man,v 1.5 1997/06/09 16:06:31 fred Exp $
.TH xinput 1 "$Date: 1997/06/09 16:06:31 $" "Frederic Lepied"
d59 18
d84 2
@


1.1.1.1
log
@Import xinput 1.3.0. Replaces xsetmode(1)/xsetpointer(1).
@
text
@@
