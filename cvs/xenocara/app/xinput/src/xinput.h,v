head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.22
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.20
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.18
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.16
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.14
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.10
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.6
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.2
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	v1_3_0:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.06.11.19.26.23;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.24.14.17.46;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.05.02.15.24.13;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.07.13.28.45;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.07.13.28.45;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xinput 1.6.0
@
text
@/*
 * Copyright 1996 by Frederic Lepied, France. <Frederic.Lepied@@sugix.frmug.org>
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is  hereby granted without fee, provided that
 * the  above copyright   notice appear  in   all  copies and  that both  that
 * copyright  notice   and   this  permission   notice  appear  in  supporting
 * documentation, and that   the  name of  the authors  not  be  used  in
 * advertising or publicity pertaining to distribution of the software without
 * specific,  written      prior  permission.     The authors  make  no
 * representations about the suitability of this software for any purpose.  It
 * is provided "as is" without express or implied warranty.
 *
 * THE AUTHORS DISCLAIM ALL   WARRANTIES WITH REGARD  TO  THIS SOFTWARE,
 * INCLUDING ALL IMPLIED   WARRANTIES OF MERCHANTABILITY  AND   FITNESS, IN NO
 * EVENT  SHALL THE AUTHORS  BE   LIABLE   FOR ANY  SPECIAL, INDIRECT   OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA  OR PROFITS, WHETHER  IN  AN ACTION OF  CONTRACT,  NEGLIGENCE OR OTHER
 * TORTIOUS  ACTION, ARISING    OUT OF OR   IN  CONNECTION  WITH THE USE    OR
 * PERFORMANCE OF THIS SOFTWARE.
 *
 */

#if HAVE_CONFIG_H
#include <config.h>
#endif

#include <X11/Xlib.h>
#include <X11/extensions/XInput.h>
#ifdef HAVE_XI2
#include <X11/extensions/XInput2.h>
#endif
#include <X11/Xutil.h>
#include <stdio.h>
#include <stdlib.h>

#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 1
#endif
#ifndef EXIT_FAILURE
#define EXIT_FAILURE 0
#endif

extern int xi_opcode; /* xinput extension op code */
XDeviceInfo* find_device_info( Display *display, char *name, Bool only_extended);
#if HAVE_XI2
XIDeviceInfo* xi2_find_device_info(Display *display, char *name);
int xinput_version(Display* display);
#endif

int get_feedbacks( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int set_ptr_feedback( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int get_button_map( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int set_button_map( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int set_pointer( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);

int set_mode( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int list( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int test( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int version( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int set_integer_feedback( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int query_state( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);

/* X Input 1.5 */
int list_props( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int set_int_prop( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int set_float_prop( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int set_atom_prop( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int watch_props( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int delete_prop( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int set_prop( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int disable( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int enable( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);

/* X Input 2.0 */
int create_master( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int remove_master( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int change_attachment( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int float_device( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int set_clientpointer( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int test_xi2( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);
int map_to_output( Display* display, int argc, char *argv[], char *prog_name, char *prog_desc);

/* end of xinput.h */
@


1.3
log
@Udate to xinput version 1.5.0
@
text
@d72 2
d82 1
@


1.2
log
@update to xinput 1.4.1
@
text
@d30 3
d44 36
a79 250
XDeviceInfo*
find_device_info(
#if NeedFunctionPrototypes
		 Display	*display,
		 char		*name,
		 Bool		only_extended
#endif
		 );
int
get_feedbacks(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
set_ptr_feedback(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
get_button_map(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
set_button_map(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
set_pointer(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
set_mode(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
list(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
test(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
version(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
set_integer_feedback(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
query_state(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
create_master(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
remove_master(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
change_attachment(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
float_device(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
set_clientpointer(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
list_props(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);


int
set_int_prop(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
set_float_prop(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
set_atom_prop(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
watch_props(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);

int
delete_prop(
#if NeedFunctionPrototypes
		 Display*	display,
		 int		argc,
		 char		*argv[],
		 char		*prog_name,
		 char		*prog_desc
#endif
);
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
 * documentation, and that   the  name of  Frederic   Lepied not  be  used  in
d10 1
a10 1
 * specific,  written      prior  permission.     Frederic  Lepied   makes  no
d14 1
a14 1
 * FREDERIC  LEPIED DISCLAIMS ALL   WARRANTIES WITH REGARD  TO  THIS SOFTWARE,
d16 1
a16 1
 * EVENT  SHALL FREDERIC  LEPIED BE   LIABLE   FOR ANY  SPECIAL, INDIRECT   OR
d24 4
d72 11
d170 123
a292 2
/* end of xinput.h
 */
@


1.1.1.1
log
@Import xinput 1.3.0. Replaces xsetmode(1)/xsetpointer(1).
@
text
@@
