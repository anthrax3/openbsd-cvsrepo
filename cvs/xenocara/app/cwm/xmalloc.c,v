head	1.15;
access;
symbols
	OPENBSD_6_0:1.15.0.6
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.4
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.2
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.2
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.4
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.6
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_3:1.2.0.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	version_3:1.1.1.1
	cwm:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.03.28.23.12.47;	author okan;	state Exp;
branches;
next	1.14;
commitid	nwNT3PjeOYm65gQ8;

1.14
date	2015.01.19.14.54.16;	author okan;	state Exp;
branches;
next	1.13;
commitid	kLADTGYX3gw0Sf2m;

1.13
date	2014.09.07.19.27.30;	author okan;	state Exp;
branches;
next	1.12;
commitid	jXQ1fztXcP9vyPb1;

1.12
date	2013.12.17.16.12.18;	author okan;	state Exp;
branches;
next	1.11;

1.11
date	2012.11.28.14.32.44;	author okan;	state Exp;
branches;
next	1.10;

1.10
date	2012.11.16.14.15.48;	author okan;	state Exp;
branches;
next	1.9;

1.9
date	2012.11.09.03.52.02;	author okan;	state Exp;
branches;
next	1.8;

1.8
date	2012.11.07.20.34.39;	author okan;	state Exp;
branches;
next	1.7;

1.7
date	2011.05.11.13.53.51;	author okan;	state Exp;
branches;
next	1.6;

1.6
date	2009.12.15.04.10.42;	author okan;	state Exp;
branches;
next	1.5;

1.5
date	2009.12.15.03.24.36;	author okan;	state Exp;
branches;
next	1.4;

1.4
date	2008.07.11.14.21.28;	author okan;	state Exp;
branches;
next	1.3;

1.3
date	2008.04.16.13.38.09;	author oga;	state Exp;
branches;
next	1.2;

1.2
date	2008.01.11.16.06.44;	author oga;	state Exp;
branches;
next	1.1;

1.1
date	2007.04.27.17.58.48;	author bernd;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.04.27.17.58.48;	author bernd;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Introduce a xreallocarray and convert a few xcalloc instances that do
not require zero'ing.
@
text
@/*
 * calmwm - the calm window manager
 *
 * Copyright (c) 2004 Marius Aamodt Eriksen <marius@@monkey.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * $OpenBSD: xmalloc.c,v 1.14 2015/01/19 14:54:16 okan Exp $
 */

#include <sys/types.h>
#include <sys/queue.h>

#include <err.h>
#include <errno.h>
#include <limits.h>
#include <stdarg.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "calmwm.h"

void *
xmalloc(size_t siz)
{
	void	*p;

	if (siz == 0)
		errx(1, "xmalloc: zero size");
	if ((p = malloc(siz)) == NULL)
		err(1, "malloc");

	return(p);
}

void *
xcalloc(size_t no, size_t siz)
{
	void	*p;

	if (siz == 0 || no == 0)
		errx(1, "xcalloc: zero size");
	if (SIZE_MAX / no < siz)
		errx(1, "xcalloc: no * siz > SIZE_MAX");
	if ((p = calloc(no, siz)) == NULL)
		err(1, "calloc");

	return(p);
}

void *
xreallocarray(void *ptr, size_t nmemb, size_t size)
{
	void	*p;

	p = reallocarray(ptr, nmemb, size);
	if (p == NULL)
		errx(1, "xreallocarray: out of memory (new_size %zu bytes)",
		    nmemb * size);
	return(p);
}

char *
xstrdup(const char *str)
{
	char	*p;

	if ((p = strdup(str)) == NULL)
		err(1, "strdup");

	return(p);
}

int
xasprintf(char **ret, const char *fmt, ...)
{
	va_list	 ap;
	int	 i;

	va_start(ap, fmt);
	i = vasprintf(ret, fmt, ap);
	va_end(ap);

	if (i < 0 || *ret == NULL)
		err(1, "asprintf");

	return(i);
}
@


1.14
log
@Switch to limits.h; replace MAXPATHLEN and MAXHOSTNAMELEN with PATH_MAX
and HOST_NAME_MAX+1, respectively.

ok doug@@
@
text
@d18 1
a18 1
 * $OpenBSD: xmalloc.c,v 1.13 2014/09/07 19:27:30 okan Exp $
d61 12
@


1.13
log
@more style nits
@
text
@d18 1
a18 1
 * $OpenBSD: xmalloc.c,v 1.12 2013/12/17 16:12:18 okan Exp $
d21 1
a21 1
#include <sys/param.h>
d26 1
@


1.12
log
@missing stdarg.h include
@
text
@d18 1
a18 1
 * $OpenBSD: xmalloc.c,v 1.11 2012/11/28 14:32:44 okan Exp $
d45 1
a45 1
	return (p);
d60 1
a60 1
	return (p);
d71 1
a71 1
	return (p);
d87 1
a87 1
	return (i);
@


1.11
log
@add xasprintf() for upcoming changes.
@
text
@d18 1
a18 1
 * $OpenBSD: xmalloc.c,v 1.10 2012/11/16 14:15:48 okan Exp $
d26 1
@


1.10
log
@add some checks
@
text
@d18 1
a18 1
 * $OpenBSD: xmalloc.c,v 1.9 2012/11/09 03:52:02 okan Exp $
d71 16
@


1.9
log
@sort
@
text
@d18 1
a18 1
 * $OpenBSD: xmalloc.c,v 1.8 2012/11/07 20:34:39 okan Exp $
d26 1
d39 2
d52 4
@


1.8
log
@get rid of the xfree() wrapper around free(); from Tiago Cunha.
@
text
@d18 1
a18 1
 * $OpenBSD: xmalloc.c,v 1.7 2011/05/11 13:53:51 okan Exp $
d26 1
a28 1
#include <stdio.h>
@


1.7
log
@tag and comment cleanup; ok oga@@
@
text
@d18 1
a18 1
 * $OpenBSD: xmalloc.c,v 1.6 2009/12/15 04:10:42 okan Exp $
a52 6
}

void
xfree(void *p)
{
	free(p);
@


1.6
log
@pull all non-X11 headers from calmwm.h and place them only where they
are required.

encourged to go all the way by oga@@
@
text
@d18 1
a18 1
 * $Id: xmalloc.c,v 1.5 2009/12/15 03:24:36 okan Exp $
@


1.5
log
@merge the 2 common header files; specific includes to be pulled out as
separate commits.

ok oga@@
@
text
@d18 1
a18 1
 * $Id: xmalloc.c,v 1.4 2008/07/11 14:21:28 okan Exp $
d20 10
@


1.4
log
@spacing, declaration lineup to be consistent throughout cwm,
readability, and a bit of knf.

ok oga@@
@
text
@d18 1
a18 1
 * $Id: xmalloc.c,v 1.3 2008/04/16 13:38:09 oga Exp $
a20 1
#include "headers.h"
@


1.3
log
@Replace a few leftover calls to strdup and calloc with xstrdup and xcalloc
respectively.

ok okan.
@
text
@d18 1
a18 1
 * $Id: xmalloc.c,v 1.2 2008/01/11 16:06:44 oga Exp $
d27 1
a27 1
	void *p;
d38 1
a38 1
	void *p;
d55 1
a55 1
	char *p;
@


1.2
log
@- Remove the "all rights reserved" tag at the top of most of the source
  files, and replace them with the actual ISC license.

- add license to the manpage (it was lacking before)

- correct license statement in the README

Permission given by Marius (copyright holder):
"1. please replace with the standard ISC license
2. you may add the ISC license to the man page
3. feel free to replace the information in the README as well"

and Dros (copyright holder for group.c):
"Please switch group.c to the ISC License."

ok ian@@
@
text
@d18 1
a18 1
 * $Id: xmalloc.c,v 1.1.1.1 2007/04/27 17:58:48 bernd Exp $
d36 1
a36 1
xcalloc(size_t siz)
d40 1
a40 1
	if ((p = calloc(1, siz)) == NULL)
@


1.1
log
@Initial revision
@
text
@a4 1
 * All rights reserved.
d6 13
a18 1
 * $Id: xmalloc.c,v 1.2 2005/08/28 09:36:46 marius Exp $
@


1.1.1.1
log
@Initial import of cwm-3.

tested by sturm@@, ok matthieu@@
@
text
@@
