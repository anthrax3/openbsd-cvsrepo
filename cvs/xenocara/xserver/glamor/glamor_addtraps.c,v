head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.2
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.1.0.6
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.4
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2016.05.29.12.02.36;	author matthieu;	state Exp;
branches;
next	1.1;
commitid	s0SI41sEunLdyFfd;

1.1
date	2014.09.27.17.53.00;	author matthieu;	state Exp;
branches;
next	;
commitid	cVXoV5PxI8YrEaVA;


desc
@@


1.2
log
@Update to xserver 1.18.3. Tested by shadchin@@ and naddy@@.

Note that indirect GLX is now disbled by default.
@
text
@/*
 * Copyright © 2009 Intel Corporation
 * Copyright © 1998 Keith Packard
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * Authors:
 *    Zhigang Gong <zhigang.gong@@gmail.com>
 *
 */

#include "glamor_priv.h"

void
glamor_add_traps(PicturePtr pPicture,
                 INT16 x_off,
                 INT16 y_off, int ntrap, xTrap *traps)
{
    if (glamor_prepare_access_picture(pPicture, GLAMOR_ACCESS_RW)) {
        fbAddTraps(pPicture, x_off, y_off, ntrap, traps);
    }
    glamor_finish_access_picture(pPicture);
}
@


1.1
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d31 4
a34 4
static Bool
_glamor_add_traps(PicturePtr pPicture,
                  INT16 x_off,
                  INT16 y_off, int ntrap, xTrap *traps, Bool fallback)
a35 5
    if (!fallback
        && (!pPicture->pDrawable
            || glamor_ddx_fallback_check_pixmap(pPicture->pDrawable)))
        return FALSE;

a39 16

    return TRUE;
}

void
glamor_add_traps(PicturePtr pPicture,
                 INT16 x_off, INT16 y_off, int ntrap, xTrap *traps)
{
    _glamor_add_traps(pPicture, x_off, y_off, ntrap, traps, TRUE);
}

Bool
glamor_add_traps_nf(PicturePtr pPicture,
                    INT16 x_off, INT16 y_off, int ntrap, xTrap *traps)
{
    return _glamor_add_traps(pPicture, x_off, y_off, ntrap, traps, FALSE);
@

