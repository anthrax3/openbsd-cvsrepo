head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.18
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.16
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.1.2.0.16
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.12
	OPENBSD_4_9_BASE:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.14
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.06.10.13.21.21;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.05.13.32.49;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.15.35;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.15.35;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.56.31;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@/*
 * Copyright Â© 1998 Keith Packard
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of Keith Packard not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  Keith Packard makes no
 * representations about the suitability of this software for any purpose.  It
 * is provided "as is" without express or implied warranty.
 *
 * KEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#ifdef HAVE_DIX_CONFIG_H
#include <dix-config.h>
#endif

#include "fb.h"

void
fbGetSpans(DrawablePtr pDrawable,
           int wMax,
           DDXPointPtr ppt, int *pwidth, int nspans, char *pchardstStart)
{
    FbBits *src, *dst;
    FbStride srcStride;
    int srcBpp;
    int srcXoff, srcYoff;
    int xoff;

    /*
     * XFree86 DDX empties the root borderClip when the VT is
     * switched away; this checks for that case
     */
    if (!fbDrawableEnabled(pDrawable))
        return;

    if (pDrawable->bitsPerPixel != BitsPerPixel(pDrawable->depth)) {
        fb24_32GetSpans(pDrawable, wMax, ppt, pwidth, nspans, pchardstStart);
        return;
    }

    fbGetDrawable(pDrawable, src, srcStride, srcBpp, srcXoff, srcYoff);

    while (nspans--) {
        xoff = (int) (((long) pchardstStart) & (FB_MASK >> 3));
        dst = (FbBits *) (pchardstStart - xoff);
        xoff <<= 3;
        fbBlt(src + (ppt->y + srcYoff) * srcStride, srcStride,
              (ppt->x + srcXoff) * srcBpp,
              dst,
              1,
              xoff,
              *pwidth * srcBpp, 1, GXcopy, FB_ALLONES, srcBpp, FALSE, FALSE);
        pchardstStart += PixmapBytePad(*pwidth, pDrawable->depth);
        ppt++;
        pwidth++;
    }

    fbFinishAccess(pDrawable);
}
@


1.2
log
@Update to xserver 1.11.2
@
text
@d30 3
a32 6
fbGetSpans(DrawablePtr	pDrawable, 
	   int		wMax, 
	   DDXPointPtr	ppt, 
	   int		*pwidth, 
	   int		nspans, 
	   char		*pchardstStart)
d34 6
a39 6
    FbBits	    *src, *dst;
    FbStride	    srcStride;
    int		    srcBpp;
    int		    srcXoff, srcYoff;
    int		    xoff;
    
d45 5
a49 6
	return;
    
    if (pDrawable->bitsPerPixel != BitsPerPixel(pDrawable->depth))
    {
	fb24_32GetSpans (pDrawable, wMax, ppt, pwidth, nspans, pchardstStart);
	return;
a50 17
    
    fbGetDrawable (pDrawable, src, srcStride, srcBpp, srcXoff, srcYoff);
    
    while (nspans--)
    {
	xoff = (int) (((long) pchardstStart) & (FB_MASK >> 3));
	dst = (FbBits *) (pchardstStart - xoff);
	xoff <<= 3;
	fbBlt (src + (ppt->y + srcYoff) * srcStride, srcStride,
	       (ppt->x + srcXoff) * srcBpp,
	       
	       dst,
	       1,
	       xoff,

	       *pwidth * srcBpp,
	       1,
d52 1
a52 3
	       GXcopy,
	       FB_ALLONES,
	       srcBpp,
d54 13
a66 5
	       FALSE,
	       FALSE);
	pchardstStart += PixmapBytePad(*pwidth, pDrawable->depth);
	ppt++;
	pwidth++;
d69 1
a69 1
    fbFinishAccess (pDrawable);
@


1.1
log
@Initial revision
@
text
@a1 2
 * Id: fbgetsp.c,v 1.1 1999/11/02 03:54:45 keithp Exp $
 *
a49 1
#ifdef FB_24_32BIT
a54 1
#endif
d83 2
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d2 2
a86 2

    fbFinishAccess (pDrawable);
@

