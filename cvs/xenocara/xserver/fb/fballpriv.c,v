head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.14
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.12
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.10
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.8
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.6
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2013.06.07.17.28.47;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2012.06.10.13.21.21;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.05.13.32.49;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.12.05.15.36.04;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.19.44.22;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.13;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.15.44;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.15.44;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.56.29;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@/*
 * Copyright Â© 1998 Keith Packard
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of Keith Packard not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  Keith Packard makes no
 * representations about the suitability of this software for any purpose.  It
 * is provided "as is" without express or implied warranty.
 *
 * KEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#ifdef HAVE_DIX_CONFIG_H
#include <dix-config.h>
#endif

#include "fb.h"

static DevPrivateKeyRec fbScreenPrivateKeyRec;
DevPrivateKey
fbGetScreenPrivateKey(void)
{
    return &fbScreenPrivateKeyRec;
}

Bool
fbAllocatePrivates(ScreenPtr pScreen)
{
    FbScreenPrivPtr     pScrPriv;

    if (!dixRegisterPrivateKey
        (&fbScreenPrivateKeyRec, PRIVATE_SCREEN, sizeof(FbScreenPrivRec)))
        return FALSE;

    pScrPriv = fbGetScreenPrivate(pScreen);

    if (!dixRegisterScreenSpecificPrivateKey (pScreen, &pScrPriv->gcPrivateKeyRec, PRIVATE_GC, sizeof(FbGCPrivRec)))
        return FALSE;
    if (!dixRegisterScreenSpecificPrivateKey (pScreen, &pScrPriv->winPrivateKeyRec, PRIVATE_WINDOW, 0))
        return FALSE;

    return TRUE;
}

#ifdef FB_ACCESS_WRAPPER
ReadMemoryProcPtr wfbReadMemory;
WriteMemoryProcPtr wfbWriteMemory;
#endif
@


1.6
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@a35 14
static DevPrivateKeyRec fbGCPrivateKeyRec;
DevPrivateKey
fbGetGCPrivateKey(void)
{
    return &fbGCPrivateKeyRec;
}

static DevPrivateKeyRec fbWinPrivateKeyRec;
DevPrivateKey
fbGetWinPrivateKey(void)
{
    return &fbWinPrivateKeyRec;
}

d37 1
a37 1
fbAllocatePrivates(ScreenPtr pScreen, DevPrivateKey *pGCKey)
d39 1
a39 2
    if (pGCKey)
        *pGCKey = &fbGCPrivateKeyRec;
d42 1
a42 1
        (&fbGCPrivateKeyRec, PRIVATE_GC, sizeof(FbGCPrivRec)))
d44 4
a47 2
    if (!dixRegisterPrivateKey
        (&fbScreenPrivateKeyRec, PRIVATE_SCREEN, sizeof(FbScreenPrivRec)))
d49 1
a49 1
    if (!dixRegisterPrivateKey(&fbWinPrivateKeyRec, PRIVATE_WINDOW, 0))
@


1.5
log
@Update to xserver 1.11.2
@
text
@d31 4
a34 1
fbGetScreenPrivateKey(void) { return &fbScreenPrivateKeyRec; }
d38 4
a41 1
fbGetGCPrivateKey (void) { return &fbGCPrivateKeyRec; }
d45 4
a48 1
fbGetWinPrivateKey (void) { return &fbWinPrivateKeyRec; }
d54 8
a61 6
	*pGCKey = &fbGCPrivateKeyRec;
    
    if (!dixRegisterPrivateKey(&fbGCPrivateKeyRec, PRIVATE_GC, sizeof(FbGCPrivRec)))
	return FALSE;
    if (!dixRegisterPrivateKey(&fbScreenPrivateKeyRec, PRIVATE_SCREEN, sizeof (FbScreenPrivRec)))
	return FALSE;
d63 1
a63 1
	return FALSE;
@


1.4
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@a28 1
#ifdef FB_SCREEN_PRIVATE
a31 1
#endif
a48 1
#ifdef FB_SCREEN_PRIVATE
a50 1
#endif
@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d30 3
a32 6
static int fbScreenPrivateKeyIndex;
static DevPrivateKey fbScreenPrivateKey = &fbScreenPrivateKeyIndex;
DevPrivateKey fbGetScreenPrivateKey(void)
{
    return fbScreenPrivateKey;
}
d35 3
a37 6
static int fbGCPrivateKeyIndex;
static DevPrivateKey fbGCPrivateKey = &fbGCPrivateKeyIndex;
DevPrivateKey fbGetGCPrivateKey(void)
{
    return fbGCPrivateKey;
}
d39 3
a41 6
static int fbWinPrivateKeyIndex;
static DevPrivateKey fbWinPrivateKey = &fbWinPrivateKeyIndex;
DevPrivateKey fbGetWinPrivateKey(void)
{
    return fbWinPrivateKey;
}
d47 1
a47 1
	*pGCKey = fbGCPrivateKey;
d49 1
a49 1
    if (!dixRequestPrivate(fbGCPrivateKey, sizeof(FbGCPrivRec)))
d52 5
a56 2
    {
	FbScreenPrivPtr	pScreenPriv;
a57 6
	pScreenPriv = (FbScreenPrivPtr) xalloc (sizeof (FbScreenPrivRec));
	if (!pScreenPriv)
	    return FALSE;
	dixSetPrivate(&pScreen->devPrivates, fbScreenPrivateKey, pScreenPriv);
    }
#endif
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d30 2
a31 1
static DevPrivateKey fbScreenPrivateKey = &fbScreenPrivateKey;
d37 3
a39 1
static DevPrivateKey fbGCPrivateKey = &fbGCPrivateKey;
d44 3
a46 2
#ifndef FB_NO_WINDOW_PIXMAPS
static DevPrivateKey fbWinPrivateKey = &fbWinPrivateKey;
a50 1
#endif
@


1.1
log
@Initial revision
@
text
@a1 2
 * Id: fballpriv.c,v 1.1 1999/11/02 03:54:45 keithp Exp $
 *
d30 2
a31 2
int fbScreenPrivateIndex;
int fbGetScreenPrivateIndex(void)
d33 1
a33 1
    return fbScreenPrivateIndex;
d36 2
a37 2
int fbGCPrivateIndex;
int fbGetGCPrivateIndex(void)
d39 1
a39 1
    return fbGCPrivateIndex;
d42 2
a43 2
int fbWinPrivateIndex;
int fbGetWinPrivateIndex(void)
d45 1
a45 1
    return fbWinPrivateIndex;
a47 5
int fbGeneration;

#ifdef FB_OLD_SCREEN
#define miAllocateGCPrivateIndex()  AllocateGCPrivateIndex()
#endif
d50 1
a50 1
fbAllocatePrivates(ScreenPtr pScreen, int *pGCIndex)
d52 4
a55 20
    if (fbGeneration != serverGeneration)
    {
	fbGCPrivateIndex = miAllocateGCPrivateIndex ();
#ifndef FB_NO_WINDOW_PIXMAPS
	fbWinPrivateIndex = AllocateWindowPrivateIndex();
#endif
#ifdef FB_SCREEN_PRIVATE
	fbScreenPrivateIndex = AllocateScreenPrivateIndex ();
	if (fbScreenPrivateIndex == -1)
	    return FALSE;
#endif
	
	fbGeneration = serverGeneration;
    }
    if (pGCIndex)
	*pGCIndex = fbGCPrivateIndex;
    if (!AllocateGCPrivate(pScreen, fbGCPrivateIndex, sizeof(FbGCPrivRec)))
	return FALSE;
#ifndef FB_NO_WINDOW_PIXMAPS
    if (!AllocateWindowPrivate(pScreen, fbWinPrivateIndex, 0))
a56 1
#endif
d64 1
a64 1
	pScreen->devPrivates[fbScreenPrivateIndex].ptr = (pointer) pScreenPriv;
d69 5
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d2 2
d52 4
a92 5

#ifdef FB_ACCESS_WRAPPER
ReadMemoryProcPtr wfbReadMemory;
WriteMemoryProcPtr wfbWriteMemory;
#endif
@

