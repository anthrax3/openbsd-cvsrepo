head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.8
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.09.16.19.10.20;	author matthieu;	state Exp;
branches;
next	1.6;
commitid	Te1daavkBLskZ8gc;

1.6
date	2014.09.27.17.53.00;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	cVXoV5PxI8YrEaVA;

1.5
date	2013.06.07.17.28.47;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.10.13.21.21;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.27.19.02.26;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.13;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.15.36;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.15.36;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@/*
 *
 * Copyright Â© 2000 SuSE, Inc.
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of SuSE not be used in advertising or
 * publicity pertaining to distribution of the software without specific,
 * written prior permission.  SuSE makes no representations about the
 * suitability of this software for any purpose.  It is provided "as is"
 * without express or implied warranty.
 *
 * SuSE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL SuSE
 * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Author:  Keith Packard, SuSE, Inc.
 */

#ifndef _FBOVERLAY_H_
#define _FBOVERLAY_H_

#include "privates.h"

extern _X_EXPORT DevPrivateKey fbOverlayGetScreenPrivateKey(void);

#ifndef FB_OVERLAY_MAX
#define FB_OVERLAY_MAX	2
#endif

typedef void (*fbOverlayPaintKeyProc) (DrawablePtr, RegionPtr, CARD32, int);

typedef struct _fbOverlayLayer {
    union {
        struct {
            void *pbits;
            int width;
            int depth;
        } init;
        struct {
            PixmapPtr pixmap;
            RegionRec region;
        } run;
    } u;
    CARD32 key;                 /* special pixel value */
} FbOverlayLayer;

typedef struct _fbOverlayScrPriv {
    int nlayers;
    fbOverlayPaintKeyProc PaintKey;
    miCopyProc CopyWindow;
    FbOverlayLayer layer[FB_OVERLAY_MAX];
} FbOverlayScrPrivRec, *FbOverlayScrPrivPtr;

#define fbOverlayGetScrPriv(s) \
    dixLookupPrivate(&(s)->devPrivates, fbOverlayGetScreenPrivateKey())
extern _X_EXPORT Bool
 fbOverlayCreateWindow(WindowPtr pWin);

extern _X_EXPORT Bool
 fbOverlayCloseScreen(ScreenPtr pScreen);

extern _X_EXPORT int
 fbOverlayWindowLayer(WindowPtr pWin);

extern _X_EXPORT Bool
 fbOverlayCreateScreenResources(ScreenPtr pScreen);

extern _X_EXPORT void

fbOverlayPaintKey(DrawablePtr pDrawable,
                  RegionPtr pRegion, CARD32 pixel, int layer);
extern _X_EXPORT void
 fbOverlayUpdateLayerRegion(ScreenPtr pScreen, int layer, RegionPtr prgn);

extern _X_EXPORT void
 fbOverlayCopyWindow(WindowPtr pWin, DDXPointRec ptOldOrg, RegionPtr prgnSrc);

extern _X_EXPORT void
fbOverlayWindowExposures(WindowPtr pWin, RegionPtr prgn);

extern _X_EXPORT Bool

fbOverlaySetupScreen(ScreenPtr pScreen,
                     void *pbits1,
                     void *pbits2,
                     int xsize,
                     int ysize,
                     int dpix,
                     int dpiy, int width1, int width2, int bpp1, int bpp2);

extern _X_EXPORT Bool

fbOverlayFinishScreenInit(ScreenPtr pScreen,
                          void *pbits1,
                          void *pbits2,
                          int xsize,
                          int ysize,
                          int dpix,
                          int dpiy,
                          int width1,
                          int width2,
                          int bpp1, int bpp2, int depth1, int depth2);

#endif                          /* _FBOVERLAY_H_ */
@


1.6
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d19 1
a19 1
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
d85 1
a85 3

fbOverlayWindowExposures(WindowPtr pWin,
                         RegionPtr prgn, RegionPtr other_exposed);
@


1.5
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d41 1
a41 1
            pointer pbits;
d92 2
a93 2
                     pointer pbits1,
                     pointer pbits2,
d102 2
a103 2
                          pointer pbits1,
                          pointer pbits2,
@


1.4
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d66 1
a66 1
 fbOverlayCloseScreen(int iScreen, ScreenPtr pScreen);
@


1.3
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d36 1
a36 1
typedef	void	(*fbOverlayPaintKeyProc) (DrawablePtr, RegionPtr, CARD32, int);
d40 9
a48 9
	struct {
	    pointer	pbits;
	    int		width;
	    int		depth;
	} init;
	struct {
	    PixmapPtr	pixmap;
	    RegionRec	region;
	} run;
d50 1
a50 1
    CARD32	key;	    /* special pixel value */
d54 4
a57 4
    int			    nlayers;
    fbOverlayPaintKeyProc   PaintKey;
    miCopyProc		    CopyWindow;
    FbOverlayLayer	    layer[FB_OVERLAY_MAX];
d63 1
a63 1
fbOverlayCreateWindow(WindowPtr pWin);
d66 1
a66 1
fbOverlayCloseScreen (int iScreen, ScreenPtr pScreen);
d69 1
a69 1
fbOverlayWindowLayer(WindowPtr pWin);
d72 1
a72 1
fbOverlayCreateScreenResources(ScreenPtr pScreen);
d75 3
a77 4
fbOverlayPaintKey (DrawablePtr	pDrawable,
		   RegionPtr	pRegion,
		   CARD32	pixel,
		   int		layer);
d79 1
a79 3
fbOverlayUpdateLayerRegion (ScreenPtr	pScreen,
			    int		layer,
			    RegionPtr	prgn);
a80 1
    
d82 2
a83 4
fbOverlayCopyWindow(WindowPtr	pWin,
		    DDXPointRec	ptOldOrg,
		    RegionPtr	prgnSrc);
    
d85 3
a87 3
fbOverlayWindowExposures (WindowPtr	pWin,
			  RegionPtr	prgn,
			  RegionPtr	other_exposed);
d90 8
a97 11
fbOverlaySetupScreen(ScreenPtr	pScreen,
		     pointer	pbits1,
		     pointer	pbits2,
		     int	xsize,
		     int	ysize,
		     int	dpix,
		     int	dpiy,
		     int	width1,
		     int	width2,
		     int	bpp1,
		     int	bpp2);
a99 13
fbOverlayFinishScreenInit(ScreenPtr	pScreen,
			  pointer	pbits1,
			  pointer	pbits2,
			  int		xsize,
			  int		ysize,
			  int		dpix,
			  int		dpiy,
			  int		width1,
			  int		width2,
			  int		bpp1,
			  int		bpp2,
			  int		depth1,
			  int		depth2);
d101 12
a112 1
#endif /* _FBOVERLAY_H_ */
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d30 1
a30 1
extern DevPrivateKey fbOverlayGetScreenPrivateKey(void);
d56 1
a56 1
    fbCopyProc		    CopyWindow;
d62 1
a62 1
Bool
d65 1
a65 1
Bool
d68 1
a68 1
int
d71 1
a71 1
Bool
d74 1
a74 1
void
d79 1
a79 1
void
d85 1
a85 1
void
d90 1
a90 1
void
d95 1
a95 1
Bool
d108 1
a108 1
Bool
@


1.1
log
@Initial revision
@
text
@d28 3
a30 3
extern int	fbOverlayGeneration;
extern int	fbOverlayScreenPrivateIndex; /* XXX should be static */
extern int	fbOverlayGetScreenPrivateIndex(void);
d61 1
a61 2
    ((fbOverlayGetScreenPrivateIndex() != -1) ? \
     (s)->devPrivates[fbOverlayGetScreenPrivateIndex()].ptr : NULL)
a93 4

void
fbOverlayPaintWindow(WindowPtr pWin, RegionPtr pRegion, int what);

@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
