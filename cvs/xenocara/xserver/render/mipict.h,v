head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2016.05.29.12.02.40;	author matthieu;	state Exp;
branches;
next	1.7;
commitid	s0SI41sEunLdyFfd;

1.7
date	2015.09.16.19.10.26;	author matthieu;	state Exp;
branches;
next	1.6;
commitid	Te1daavkBLskZ8gc;

1.6
date	2014.09.27.17.53.05;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	cVXoV5PxI8YrEaVA;

1.5
date	2012.06.10.13.21.31;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.05.13.32.57;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.27.19.02.37;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.34;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.16.21;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.16.21;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.05.15;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to xserver 1.18.3. Tested by shadchin@@ and naddy@@.

Note that indirect GLX is now disbled by default.
@
text
@/*
 *
 * Copyright Â© 2000 SuSE, Inc.
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of SuSE not be used in advertising or
 * publicity pertaining to distribution of the software without specific,
 * written prior permission.  SuSE makes no representations about the
 * suitability of this software for any purpose.  It is provided "as is"
 * without express or implied warranty.
 *
 * SuSE DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL SuSE
 * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Author:  Keith Packard, SuSE, Inc.
 */

#ifndef _MIPICT_H_
#define _MIPICT_H_

#include "picturestr.h"

#define MI_MAX_INDEXED	256     /* XXX depth must be <= 8 */

#if MI_MAX_INDEXED <= 256
typedef CARD8 miIndexType;
#endif

typedef struct _miIndexed {
    Bool color;
    CARD32 rgba[MI_MAX_INDEXED];
    miIndexType ent[32768];
} miIndexedRec, *miIndexedPtr;

#define miCvtR8G8B8to15(s) ((((s) >> 3) & 0x001f) | \
			     (((s) >> 6) & 0x03e0) | \
			     (((s) >> 9) & 0x7c00))
#define miIndexToEnt15(mif,rgb15) ((mif)->ent[rgb15])
#define miIndexToEnt24(mif,rgb24) miIndexToEnt15(mif,miCvtR8G8B8to15(rgb24))

#define miIndexToEntY24(mif,rgb24) ((mif)->ent[CvtR8G8B8toY15(rgb24)])

extern _X_EXPORT int
 miCreatePicture(PicturePtr pPicture);

extern _X_EXPORT void
 miDestroyPicture(PicturePtr pPicture);

extern _X_EXPORT void
 miCompositeSourceValidate(PicturePtr pPicture);

extern _X_EXPORT Bool

miComputeCompositeRegion(RegionPtr pRegion,
                         PicturePtr pSrc,
                         PicturePtr pMask,
                         PicturePtr pDst,
                         INT16 xSrc,
                         INT16 ySrc,
                         INT16 xMask,
                         INT16 yMask,
                         INT16 xDst, INT16 yDst, CARD16 width, CARD16 height);

extern _X_EXPORT Bool
 miPictureInit(ScreenPtr pScreen, PictFormatPtr formats, int nformats);

extern _X_EXPORT Bool
 miRealizeGlyph(ScreenPtr pScreen, GlyphPtr glyph);

extern _X_EXPORT void
 miUnrealizeGlyph(ScreenPtr pScreen, GlyphPtr glyph);

extern _X_EXPORT void

miGlyphs(CARD8 op,
         PicturePtr pSrc,
         PicturePtr pDst,
         PictFormatPtr maskFormat,
         INT16 xSrc,
         INT16 ySrc, int nlist, GlyphListPtr list, GlyphPtr * glyphs);

extern _X_EXPORT void
 miRenderColorToPixel(PictFormatPtr pPict, xRenderColor * color, CARD32 *pixel);

extern _X_EXPORT void
 miRenderPixelToColor(PictFormatPtr pPict, CARD32 pixel, xRenderColor * color);

extern _X_EXPORT Bool
 miIsSolidAlpha(PicturePtr pSrc);

extern _X_EXPORT void

miCompositeRects(CARD8 op,
                 PicturePtr pDst,
                 xRenderColor * color, int nRect, xRectangle *rects);

extern _X_EXPORT void
 miTrapezoidBounds(int ntrap, xTrapezoid * traps, BoxPtr box);

extern _X_EXPORT void
 miPointFixedBounds(int npoint, xPointFixed * points, BoxPtr bounds);

extern _X_EXPORT void
 miTriangleBounds(int ntri, xTriangle * tris, BoxPtr bounds);

extern _X_EXPORT Bool
 miInitIndexed(ScreenPtr pScreen, PictFormatPtr pFormat);

extern _X_EXPORT void
 miCloseIndexed(ScreenPtr pScreen, PictFormatPtr pFormat);

extern _X_EXPORT void

miUpdateIndexed(ScreenPtr pScreen,
                PictFormatPtr pFormat, int ndef, xColorItem * pdef);

#endif                          /* _MIPICT_H_ */
@


1.7
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@a56 20
 miDestroyPictureClip(PicturePtr pPicture);

extern _X_EXPORT int
 miChangePictureClip(PicturePtr pPicture, int type, void *value, int n);

extern _X_EXPORT void
 miChangePicture(PicturePtr pPicture, Mask mask);

extern _X_EXPORT void
 miValidatePicture(PicturePtr pPicture, Mask mask);

extern _X_EXPORT int
 miChangePictureTransform(PicturePtr pPicture, PictTransform * transform);

extern _X_EXPORT int

miChangePictureFilter(PicturePtr pPicture,
                      int filter, xFixed * params, int nparams);

extern _X_EXPORT void
a102 16

extern _X_EXPORT void

miTriStrip(CARD8 op,
           PicturePtr pSrc,
           PicturePtr pDst,
           PictFormatPtr maskFormat,
           INT16 xSrc, INT16 ySrc, int npoints, xPointFixed * points);

extern _X_EXPORT void

miTriFan(CARD8 op,
         PicturePtr pSrc,
         PicturePtr pDst,
         PictFormatPtr maskFormat,
         INT16 xSrc, INT16 ySrc, int npoints, xPointFixed * points);
@


1.6
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d19 1
a19 1
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
@


1.5
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d60 1
a60 1
 miChangePictureClip(PicturePtr pPicture, int type, pointer value, int n);
@


1.4
log
@Update to xserver 1.11.2
@
text
@d30 1
a30 1
#define MI_MAX_INDEXED	256 /* XXX depth must be <= 8 */
d37 3
a39 3
    Bool	color;
    CARD32	rgba[MI_MAX_INDEXED];
    miIndexType	ent[32768];
d51 1
a51 1
miCreatePicture (PicturePtr pPicture);
d54 1
a54 1
miDestroyPicture (PicturePtr pPicture);
d57 1
a57 1
miDestroyPictureClip (PicturePtr pPicture);
d60 1
a60 4
miChangePictureClip (PicturePtr    pPicture,
		     int	   type,
		     pointer	   value,
		     int	   n);
d63 1
a63 2
miChangePicture (PicturePtr pPicture,
		 Mask       mask);
d66 1
a66 2
miValidatePicture (PicturePtr pPicture,
		   Mask       mask);
d69 1
a69 2
miChangePictureTransform (PicturePtr	pPicture,
			  PictTransform *transform);
d72 3
a74 4
miChangePictureFilter (PicturePtr pPicture,
		       int	  filter,
		       xFixed     *params,
		       int	  nparams);
d77 1
a77 1
miCompositeSourceValidate (PicturePtr pPicture);
d80 10
a89 12
miComputeCompositeRegion (RegionPtr	pRegion,
			  PicturePtr	pSrc,
			  PicturePtr	pMask,
			  PicturePtr	pDst,
			  INT16		xSrc,
			  INT16		ySrc,
			  INT16		xMask,
			  INT16		yMask,
			  INT16		xDst,
			  INT16		yDst,
			  CARD16	width,
			  CARD16	height);
d92 1
a92 1
miPictureInit (ScreenPtr pScreen, PictFormatPtr formats, int nformats);
d95 1
a95 2
miRealizeGlyph (ScreenPtr pScreen,
		GlyphPtr  glyph);
d98 1
a98 2
miUnrealizeGlyph (ScreenPtr pScreen,
		  GlyphPtr  glyph);
d101 7
a107 9
miGlyphs (CARD8		op,
	  PicturePtr	pSrc,
	  PicturePtr	pDst,
	  PictFormatPtr	maskFormat,
	  INT16		xSrc,
	  INT16		ySrc,
	  int		nlist,
	  GlyphListPtr	list,
	  GlyphPtr	*glyphs);
d110 1
a110 3
miRenderColorToPixel (PictFormatPtr pPict,
		      xRenderColor  *color,
		      CARD32	    *pixel);
d113 1
a113 3
miRenderPixelToColor (PictFormatPtr pPict,
		      CARD32	    pixel,
		      xRenderColor  *color);
d116 7
a122 1
miIsSolidAlpha (PicturePtr pSrc);
d125 14
a138 5
miCompositeRects (CARD8		op,
		  PicturePtr	pDst,
		  xRenderColor  *color,
		  int		nRect,
		  xRectangle    *rects);
d141 1
a141 1
miTrapezoidBounds (int ntrap, xTrapezoid *traps, BoxPtr box);
d144 2
a145 2
miPointFixedBounds (int npoint, xPointFixed *points, BoxPtr bounds);
    
d147 1
a147 1
miTriangleBounds (int ntri, xTriangle *tris, BoxPtr bounds);
d150 1
a150 2
miInitIndexed (ScreenPtr	pScreen,
	       PictFormatPtr	pFormat);
d153 1
a153 2
miCloseIndexed (ScreenPtr	pScreen,
		PictFormatPtr	pFormat);
a155 4
miUpdateIndexed (ScreenPtr	pScreen,
		 PictFormatPtr	pFormat,
		 int		ndef,
		 xColorItem	*pdef);
d157 4
a160 1
#endif /* _MIPICT_H_ */
@


1.3
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d84 2
a85 5
miCompositeSourceValidate (PicturePtr	pPicture,
			   INT16	x,
			   INT16	y,
			   CARD16	width,
			   CARD16	height);
a145 10
miTrapezoids (CARD8	    op,
	      PicturePtr    pSrc,
	      PicturePtr    pDst,
	      PictFormatPtr maskFormat,
	      INT16	    xSrc,
	      INT16	    ySrc,
	      int	    ntrap,
	      xTrapezoid    *traps);

extern _X_EXPORT void
a149 37

extern _X_EXPORT void
miTriangles (CARD8	    op,
	     PicturePtr	    pSrc,
	     PicturePtr	    pDst,
	     PictFormatPtr  maskFormat,
	     INT16	    xSrc,
	     INT16	    ySrc,
	     int	    ntri,
	     xTriangle	    *tris);

extern _X_EXPORT void
miTriStrip (CARD8	    op,
	    PicturePtr	    pSrc,
	    PicturePtr	    pDst,
	    PictFormatPtr   maskFormat,
	    INT16	    xSrc,
	    INT16	    ySrc,
	    int		    npoint,
	    xPointFixed	    *points);

extern _X_EXPORT void
miTriFan (CARD8		op,
	  PicturePtr	pSrc,
	  PicturePtr	pDst,
	  PictFormatPtr maskFormat,
	  INT16		xSrc,
	  INT16		ySrc,
	  int		npoint,
	  xPointFixed	*points);

extern _X_EXPORT PicturePtr
miCreateAlphaPicture (ScreenPtr	    pScreen, 
		      PicturePtr    pDst,
		      PictFormatPtr pPictFormat,
		      CARD16	    width,
		      CARD16	    height);
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d50 1
a50 1
int
d53 1
a53 1
void
d56 1
a56 1
void
d59 1
a59 1
int
d65 1
a65 1
void
d69 1
a69 1
void
d73 1
a73 1
int
d77 1
a77 1
int
d83 1
a83 9
Bool
miClipPicture (RegionPtr    pRegion,
	       PicturePtr   pPicture,
	       INT16	    xReg,
	       INT16	    yReg,
	       INT16	    xPict,
	       INT16	    yPict);

void
d89 1
a89 1
Bool
d103 1
a103 1
Bool
d106 1
a106 1
Bool
d110 1
a110 1
void
d114 1
a114 1
void
d125 1
a125 1
void
d130 1
a130 1
void
d135 1
a135 1
Bool
d138 1
a138 1
void
d145 1
a145 1
void
d148 1
a148 1
void
d158 1
a158 1
void
d161 1
a161 1
void
d164 1
a164 7
void
miRasterizeTriangle (PicturePtr	pMask,
		     xTriangle	*tri,
		     int	x_off,
		     int	y_off);

void
d174 1
a174 1
void
d184 1
a184 1
void
d194 1
a194 1
PicturePtr
d201 1
a201 1
Bool
d205 1
a205 1
void
d209 1
a209 1
void
@


1.1
log
@Initial revision
@
text
@d91 6
a120 6

void
miGlyphExtents (int		nlist,
		GlyphListPtr	list,
		GlyphPtr	*glyphs,
		BoxPtr		extents);
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@a90 6
void
miCompositeSourceValidate (PicturePtr	pPicture,
			   INT16	x,
			   INT16	y,
			   CARD16	width,
			   CARD16	height);
@

