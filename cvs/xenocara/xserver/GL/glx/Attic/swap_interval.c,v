head	1.2;
access;
symbols
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2008.11.02.15.26.10;	author matthieu;	state dead;
branches;
next	1.1;

1.1
date	2006.11.26.18.15.58;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.15.58;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.06.26;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@/*
 * (C) Copyright IBM Corporation 2006
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * on the rights to use, copy, modify, merge, publish, distribute, sub
 * license, and/or sell copies of the Software, and to permit persons to whom
 * the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
 * THE COPYRIGHT HOLDERS AND/OR THEIR SUPPLIERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
 * USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

#define NEED_REPLIES
#ifdef HAVE_DIX_CONFIG_H
#include <dix-config.h>
#endif

#include "glxserver.h"
#include "glxutil.h"
#include "glxext.h"
#include "singlesize.h"
#include "unpack.h"
#include "indirect_size_get.h"
#include "indirect_dispatch.h"
#include "glapitable.h"
#include "glapi.h"
#include "glthread.h"
#include "dispatch.h"
#include "glapioffsets.h"

#ifdef __linux__
#include <byteswap.h>
#elif defined(__OpenBSD__)
#include <sys/endian.h>
#define bswap_16 __swap16
#define bswap_32 __swap32
#define bswap_64 __swap64
#else
#include <sys/endian.h>
#define bswap_16 bswap16
#define bswap_32 bswap32
#define bswap_64 bswap64
#endif

static int DoSwapInterval(__GLXclientState *cl, GLbyte *pc, int do_swap);

int DoSwapInterval(__GLXclientState *cl, GLbyte *pc, int do_swap)
{
    xGLXVendorPrivateReq * const req = (xGLXVendorPrivateReq *) pc;
    ClientPtr client = cl->client;
    const GLXContextTag tag = req->contextTag;
    __GLXcontext *cx;
    GLint interval;


    cx = __glXLookupContextByTag(cl, tag);

    LogMessage(X_ERROR, "%s: cx = %p, GLX screen = %p\n", __func__,
	       cx, (cx == NULL) ? NULL : cx->pGlxScreen);
    if ((cx == NULL) || (cx->pGlxScreen == NULL)) {
	client->errorValue = tag;
	return __glXError(GLXBadContext);
    }
    
    if (cx->pGlxScreen->swapInterval == NULL) {
	LogMessage(X_ERROR, "AIGLX: cx->pGlxScreen->swapInterval == NULL\n");
	client->errorValue = tag;
	return __glXError(GLXUnsupportedPrivateRequest);
    }

    if (cx->drawPriv == NULL) {
	client->errorValue = tag;
	return __glXError(GLXBadDrawable);
    }
    
    pc += __GLX_VENDPRIV_HDR_SIZE;
    interval = (do_swap)
      ? bswap_32(*(int *)(pc + 0))
      :          *(int *)(pc + 0);

    (void) (*cx->pGlxScreen->swapInterval)(cx->drawPriv, interval);
    return Success;
}

int __glXDisp_SwapIntervalSGI(__GLXclientState *cl, GLbyte *pc)
{
    return DoSwapInterval(cl, pc, 0);
}

int __glXDispSwap_SwapIntervalSGI(__GLXclientState *cl, GLbyte *pc)
{
    return DoSwapInterval(cl, pc, 1);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d42 14
a55 1
#include "glxbyteorder.h"
@

