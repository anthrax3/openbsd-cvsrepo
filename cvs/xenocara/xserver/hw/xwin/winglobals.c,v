head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.4
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.2
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.4
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.05.29.12.02.39;	author matthieu;	state Exp;
branches;
next	1.11;
commitid	s0SI41sEunLdyFfd;

1.11
date	2015.09.16.19.10.24;	author matthieu;	state Exp;
branches;
next	1.10;
commitid	Te1daavkBLskZ8gc;

1.10
date	2014.09.27.17.53.04;	author matthieu;	state Exp;
branches;
next	1.9;
commitid	cVXoV5PxI8YrEaVA;

1.9
date	2014.05.02.19.27.50;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.07.17.28.54;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2012.06.10.13.21.29;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.05.13.32.56;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.12.05.15.36.09;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.27.19.02.36;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.19.44.35;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.31;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.22.35;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.22.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Update to xserver 1.18.3. Tested by shadchin@@ and naddy@@.

Note that indirect GLX is now disbled by default.
@
text
@/*
 *Copyright (C) 2003-2004 Harold L Hunt II All Rights Reserved.
 *Copyright (C) Colin Harrison 2005-2008
 *
 *Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 *"Software"), to deal in the Software without restriction, including
 *without limitation the rights to use, copy, modify, merge, publish,
 *distribute, sublicense, and/or sell copies of the Software, and to
 *permit persons to whom the Software is furnished to do so, subject to
 *the following conditions:
 *
 *The above copyright notice and this permission notice shall be
 *included in all copies or substantial portions of the Software.
 *
 *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *NONINFRINGEMENT. IN NO EVENT SHALL HAROLD L HUNT II BE LIABLE FOR
 *ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 *CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 *WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *Except as contained in this notice, the name of Harold L Hunt II
 *shall not be used in advertising or otherwise to promote the sale, use
 *or other dealings in this Software without prior written authorization
 *from Harold L Hunt II.
 *
 * Authors:	Harold L Hunt II
 *              Colin Harrison
 */

#ifdef HAVE_XWIN_CONFIG_H
#include <xwin-config.h>
#endif
#include "win.h"

/*
 * General global variables
 */

int g_iNumScreens = 0;
winScreenInfo *g_ScreenInfo = 0;

#ifdef HAS_DEVWINDOWS
int g_fdMessageQueue = WIN_FD_INVALID;
#endif
DevPrivateKeyRec g_iScreenPrivateKeyRec;
DevPrivateKeyRec g_iCmapPrivateKeyRec;
DevPrivateKeyRec g_iGCPrivateKeyRec;
DevPrivateKeyRec g_iPixmapPrivateKeyRec;
DevPrivateKeyRec g_iWindowPrivateKeyRec;
unsigned long g_ulServerGeneration = 0;
DWORD g_dwEnginesSupported = 0;
HINSTANCE g_hInstance = 0;
HWND g_hDlgDepthChange = NULL;
HWND g_hDlgExit = NULL;
HWND g_hDlgAbout = NULL;
const char *g_pszQueryHost = NULL;
Bool g_fXdmcpEnabled = FALSE;
Bool g_fAuthEnabled = FALSE;
HICON g_hIconX = NULL;
HICON g_hSmallIconX = NULL;

#ifndef RELOCATE_PROJECTROOT
const char *g_pszLogFile = DEFAULT_LOGDIR "/XWin.%s.log";
#else
const char *g_pszLogFile = "XWin.log";
Bool g_fLogFileChanged = FALSE;
#endif
int g_iLogVerbose = 2;
Bool g_fLogInited = FALSE;
char *g_pszCommandLine = NULL;
Bool g_fSilentFatalError = FALSE;
DWORD g_dwCurrentThreadID = 0;
Bool g_fKeyboardHookLL = FALSE;
Bool g_fNoHelpMessageBox = FALSE;
Bool g_fSoftwareCursor = FALSE;
Bool g_fSilentDupError = FALSE;
Bool g_fNativeGl = TRUE;
Bool g_fHostInTitle = TRUE;
pthread_mutex_t g_pmTerminating = PTHREAD_MUTEX_INITIALIZER;

#ifdef XWIN_CLIPBOARD
/*
 * Wrapped DIX functions
 */
winDispatchProcPtr winProcEstablishConnectionOrig = NULL;

/*
 * Clipboard variables
 */

Bool g_fUnicodeClipboard = TRUE;
Bool g_fClipboard = TRUE;
Bool g_fClipboardStarted = FALSE;
#endif

/*
 * Re-initialize global variables that are invalidated
 * by a server reset.
 */

void
winInitializeGlobals(void)
{
    g_dwCurrentThreadID = GetCurrentThreadId();
}
@


1.11
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@d81 1
a81 1
Bool g_fHostInTitle = FALSE;
@


1.10
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@a88 1
winDispatchProcPtr winProcSetSelectionOwnerOrig = NULL;
a95 1
Bool g_fClipboardLaunched = FALSE;
a96 5
pthread_t g_ptClipboardProc;
HWND g_hwndClipboard = NULL;
void *g_pClipboardDisplay = NULL;
Window g_iClipboardWindow = None;
Atom g_atomLastOwnedSelection = None;
a107 6
#ifdef XWIN_CLIPBOARD
    g_iClipboardWindow = None;
    g_pClipboardDisplay = NULL;
    g_atomLastOwnedSelection = None;
    g_hwndClipboard = NULL;
#endif
@


1.9
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@d81 1
@


1.8
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d81 1
a87 1
winDispatchProcPtr winProcQueryTreeOrig = NULL;
@


1.7
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d80 1
a80 1
Bool g_fNativeGl = FALSE;
@


1.6
log
@Update to xserver 1.11.2
@
text
@a37 1

d42 3
a44 2
int		g_iNumScreens = 0;
winScreenInfo * g_ScreenInfo = 0;
d46 1
a46 1
int		g_fdMessageQueue = WIN_FD_INVALID;
d53 12
a64 11
unsigned long	g_ulServerGeneration = 0;
DWORD		g_dwEnginesSupported = 0;
HINSTANCE	g_hInstance = 0;
HWND		g_hDlgDepthChange = NULL;
HWND		g_hDlgExit = NULL;
HWND		g_hDlgAbout = NULL;
const char *	g_pszQueryHost = NULL;
Bool		g_fXdmcpEnabled = FALSE;
Bool           g_fAuthEnabled = FALSE;
HICON		g_hIconX = NULL;
HICON		g_hSmallIconX = NULL;
d66 1
a66 1
const char *	g_pszLogFile = DEFAULT_LOGDIR "/XWin.%s.log";
d68 2
a69 2
const char *	g_pszLogFile = "XWin.log";
Bool		g_fLogFileChanged = FALSE;
d71 10
a80 18
int		g_iLogVerbose = 2;
Bool		g_fLogInited = FALSE;
char *		g_pszCommandLine = NULL;
Bool		g_fSilentFatalError = FALSE;
DWORD		g_dwCurrentThreadID = 0;
Bool		g_fKeyboardHookLL = FALSE;
Bool		g_fNoHelpMessageBox = FALSE;
Bool		g_fSoftwareCursor = FALSE;
Bool		g_fSilentDupError = FALSE;
Bool            g_fNativeGl = FALSE;

/*
 * Global variables for dynamically loaded libraries and
 * their function pointers
 */

FARPROC		g_fpTrackMouseEvent = (FARPROC) (void (*)(void))NoopDDA;

d86 3
a88 4
winDispatchProcPtr	winProcEstablishConnectionOrig = NULL;
winDispatchProcPtr	winProcQueryTreeOrig = NULL;
winDispatchProcPtr	winProcSetSelectionOwnerOrig = NULL;

d94 9
a102 9
Bool			g_fUnicodeClipboard = TRUE;
Bool			g_fClipboard = TRUE;
Bool			g_fClipboardLaunched = FALSE;
Bool			g_fClipboardStarted = FALSE;
pthread_t		g_ptClipboardProc;
HWND			g_hwndClipboard = NULL;
void			*g_pClipboardDisplay = NULL;
Window			g_iClipboardWindow = None;
Atom			g_atomLastOwnedSelection = None;
a104 1

d111 1
a111 1
winInitializeGlobals (void)
d113 1
a113 1
  g_dwCurrentThreadID = GetCurrentThreadId ();
d115 4
a118 6
  g_fClipboardLaunched = FALSE;
  g_fClipboardStarted = FALSE;
  g_iClipboardWindow = None;
  g_pClipboardDisplay = NULL;
  g_atomLastOwnedSelection = None;
  g_hwndClipboard = NULL;
@


1.5
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@a75 2
HHOOK		g_hhookKeyboardLL = NULL;
HWND		g_hwndKeyboardFocus = NULL;
a85 5
HMODULE		g_hmodDirectDraw = NULL;
FARPROC		g_fpDirectDrawCreate = NULL;
FARPROC		g_fpDirectDrawCreateClipper = NULL;

HMODULE		g_hmodCommonControls = NULL;
a122 1
  g_hwndKeyboardFocus = NULL;
@


1.4
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d44 1
a44 2
winScreenInfo	g_ScreenInfo[MAXSCREENS];
int		g_iLastScreen = -1;
d48 5
a52 10
static int	g_iScreenPrivateKeyIndex;
DevPrivateKey	g_iScreenPrivateKey = &g_iScreenPrivateKeyIndex;
static int	g_iCmapPrivateKeyIndex;
DevPrivateKey	g_iCmapPrivateKey = &g_iCmapPrivateKeyIndex;
static int	g_iGCPrivateKeyIndex;
DevPrivateKey	g_iGCPrivateKey = &g_iGCPrivateKeyIndex;
static int	g_iPixmapPrivateKeyIndex;
DevPrivateKey	g_iPixmapPrivateKey = &g_iPixmapPrivateKeyIndex;
static int	g_iWindowPrivateKeyIndex;
DevPrivateKey	g_iWindowPrivateKey = &g_iWindowPrivateKeyIndex;
a53 1
Bool		g_fInitializedDefaultScreens = FALSE;
d81 1
a81 1

@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d3 1
d30 1
d68 1
d72 1
a72 1
char *		g_pszLogFile = "/tmp/XWin.log";
d74 1
a74 1
char *		g_pszLogFile = "XWin.log";
d117 1
a117 1
Bool			g_fClipboard = FALSE;
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d47 10
a56 5
DevPrivateKey	g_iScreenPrivateKey = &g_iScreenPrivateKey;
DevPrivateKey	g_iCmapPrivateKey = &g_iCmapPrivateKey;
DevPrivateKey	g_iGCPrivateKey = &g_iGCPrivateKey;
DevPrivateKey	g_iPixmapPrivateKey = &g_iPixmapPrivateKey;
DevPrivateKey	g_iWindowPrivateKey = &g_iWindowPrivateKey;
@


1.1
log
@Initial revision
@
text
@d47 5
a51 5
int		g_iScreenPrivateIndex = -1;
int		g_iCmapPrivateIndex = -1;
int		g_iGCPrivateIndex = -1;
int		g_iPixmapPrivateIndex = -1;
int		g_iWindowPrivateIndex = -1;
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
