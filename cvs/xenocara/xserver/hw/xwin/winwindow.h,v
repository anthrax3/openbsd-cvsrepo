head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.12
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.10
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.8
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.05.02.19.27.50;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.07.17.28.54;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.10.13.21.30;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.05.13.32.56;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.36;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.22.24;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.22.24;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@#if !defined(_WINWINDOW_H_)
#define _WINWINDOW_H_
/*
 *Copyright (C) 1994-2000 The XFree86 Project, Inc. All Rights Reserved.
 *Copyright (C) Colin Harrison 2005-2009
 *
 *Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 *"Software"), to deal in the Software without restriction, including
 *without limitation the rights to use, copy, modify, merge, publish,
 *distribute, sublicense, and/or sell copies of the Software, and to
 *permit persons to whom the Software is furnished to do so, subject to
 *the following conditions:
 *
 *The above copyright notice and this permission notice shall be
 *included in all copies or substantial portions of the Software.
 *
 *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *NONINFRINGEMENT. IN NO EVENT SHALL THE XFREE86 PROJECT BE LIABLE FOR
 *ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 *CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 *WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *Except as contained in this notice, the name of the XFree86 Project
 *shall not be used in advertising or otherwise to promote the sale, use
 *or other dealings in this Software without prior written authorization
 *from the XFree86 Project.
 *
 * Authors:	Kensuke Matsuzaki
 *              Colin Harrison
 */

#ifndef NO
#define NO			0
#endif
#ifndef YES
#define YES			1
#endif

/* Constant strings */
#ifndef PROJECT_NAME
#define PROJECT_NAME		"Cygwin/X"
#endif
#define EXECUTABLE_NAME         "XWin"
#define WINDOW_CLASS		"cygwin/x"
#define WINDOW_TITLE		PROJECT_NAME ":%s.%d"
#define WINDOW_TITLE_XDMCP	"%s:%s.%d"
#define WIN_SCR_PROP		"cyg_screen_prop rl"
#define WINDOW_CLASS_X		"cygwin/x X rl"
#define WINDOW_CLASS_X_MSG      "cygwin/x X msg"
#define WINDOW_TITLE_X		PROJECT_NAME " X"
#define WIN_WINDOW_PROP		"cyg_window_prop_rl"
#ifdef HAS_DEVWINDOWS
#define WIN_MSG_QUEUE_FNAME	"/dev/windows"
#endif
#define WIN_WID_PROP		"cyg_wid_prop_rl"
#define WIN_NEEDMANAGE_PROP	"cyg_override_redirect_prop_rl"
#ifndef CYGMULTIWINDOW_DEBUG
#define CYGMULTIWINDOW_DEBUG    NO
#endif
#ifndef CYGWINDOWING_DEBUG
#define CYGWINDOWING_DEBUG	NO
#endif

#define XMING_SIGNATURE		0x12345678L

typedef struct _winPrivScreenRec *winPrivScreenPtr;

/*
 * Window privates
 */

typedef struct {
    DWORD dwDummy;
    HRGN hRgn;
    HWND hWnd;
    winPrivScreenPtr pScreenPriv;
    Bool fXKilled;
    HDWP hDwp;
#ifdef XWIN_GLX_WINDOWS
    Bool fWglUsed;
#endif
} winPrivWinRec, *winPrivWinPtr;

#ifdef XWIN_MULTIWINDOW
typedef struct _winWMMessageRec {
    DWORD dwID;
    DWORD msg;
    int iWindow;
    HWND hwndWindow;
    int iX, iY;
    int iWidth, iHeight;
} winWMMessageRec, *winWMMessagePtr;

/*
 * winmultiwindowwm.c
 */

#define		WM_WM_MOVE		(WM_USER + 1)
#define		WM_WM_SIZE		(WM_USER + 2)
#define		WM_WM_RAISE		(WM_USER + 3)
#define		WM_WM_LOWER		(WM_USER + 4)
#define		WM_WM_MAP		(WM_USER + 5)
#define		WM_WM_UNMAP		(WM_USER + 6)
#define		WM_WM_KILL		(WM_USER + 7)
#define		WM_WM_ACTIVATE		(WM_USER + 8)
#define		WM_WM_NAME_EVENT	(WM_USER + 9)
#define		WM_WM_ICON_EVENT	(WM_USER + 10)
#define		WM_WM_CHANGE_STATE	(WM_USER + 11)
#define		WM_WM_MAP2		(WM_USER + 12)
#define		WM_WM_MAP3		(WM_USER + 13)
#define		WM_WM_HINTS_EVENT	(WM_USER + 14)
#define		WM_MANAGE		(WM_USER + 100)
#define		WM_UNMANAGE		(WM_USER + 102)

#define		MwmHintsDecorations	(1L << 1)

#define		MwmDecorAll		(1L << 0)
#define		MwmDecorBorder		(1L << 1)
#define		MwmDecorHandle		(1L << 2)
#define		MwmDecorTitle		(1L << 3)
#define		MwmDecorMenu		(1L << 4)
#define		MwmDecorMinimize	(1L << 5)
#define		MwmDecorMaximize	(1L << 6)

/* This structure only contains 3 elements... the Motif 2.0 structure
contains 5... we only need the first 3... so that is all we will define */
typedef struct MwmHints {
    unsigned long flags, functions, decorations;
} MwmHints;

#define		PropMwmHintsElements	3

void
 winSendMessageToWM(void *pWMInfo, winWMMessagePtr msg);

Bool

winInitWM(void **ppWMInfo,
          pthread_t * ptWMProc,
          pthread_t * ptXMsgProc,
          pthread_mutex_t * ppmServerStarted,
          int dwScreen, HWND hwndScreen, BOOL allowOtherWM);

void
 winDeinitMultiWindowWM(void);

void
 winMinimizeWindow(Window id);

void
 winPropertyStoreInit(void);

void
 winPropertyStoreDestroy(void);

void
 winSetAppUserModelID(HWND hWnd, const char *AppID);

void
 winShowWindowOnTaskbar(HWND hWnd, BOOL show);

#endif                          /* XWIN_MULTIWINDOW */
#endif
@


1.5
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d52 1
@


1.4
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@a83 9

    /* Privates used by primary fb DirectDraw server */
    LPDDSURFACEDESC pddsdPrimary;

    /* Privates used by shadow fb DirectDraw Nonlocking server */
    LPDIRECTDRAWSURFACE4 pddsPrimary4;

    /* Privates used by both shadow fb DirectDraw servers */
    LPDIRECTDRAWCLIPPER pddcPrimary;
d109 1
a109 1
#define		WM_WM_HINTS_EVENT	(WM_USER + 10)
d113 1
d152 2
a153 3
/*
 * winmultiwindowicons.c
 */
d156 1
a156 1
 winUpdateIcon(Window id);
d159 1
a159 1
 winInitGlobalIcons(void);
d162 1
a162 1
 winDestroyIcon(HICON hIcon);
@


1.3
log
@Update to xserver 1.11.2
@
text
@d44 1
a44 1
#  define PROJECT_NAME		"Cygwin/X"
d55 1
a55 1
# define WIN_MSG_QUEUE_FNAME	"/dev/windows"
a69 1

d74 7
a80 8
typedef struct
{
  DWORD			dwDummy;
  HRGN			hRgn;
  HWND			hWnd;
  winPrivScreenPtr	pScreenPriv;
  Bool			fXKilled;
  HDWP                  hDwp;
d82 1
a82 1
  Bool			fWglUsed;
d85 2
a86 2
  /* Privates used by primary fb DirectDraw server */
  LPDDSURFACEDESC	pddsdPrimary;
d88 2
a89 2
  /* Privates used by shadow fb DirectDraw Nonlocking server */
  LPDIRECTDRAWSURFACE4	pddsPrimary4;
d91 2
a92 2
  /* Privates used by both shadow fb DirectDraw servers */
  LPDIRECTDRAWCLIPPER	pddcPrimary;
d96 7
a102 7
typedef struct _winWMMessageRec{
  DWORD			dwID;
  DWORD			msg;
  int			iWindow;
  HWND			hwndWindow;
  int			iX, iY;
  int			iWidth, iHeight;
a104 1

d127 7
a133 4
#define		MwmDecorAll		(1l << 0)
#define		MwmDecorBorder		(1l << 1)
#define		MwmDecorHandle		(1l << 2)
#define		MwmDecorTitle		(1l << 3)
d138 1
a138 1
  unsigned long		flags, functions, decorations;
d140 1
d144 1
a144 1
winSendMessageToWM (void *pWMInfo, winWMMessagePtr msg);
d147 6
a152 7
winInitWM (void **ppWMInfo,
	   pthread_t *ptWMProc,
	   pthread_t *ptXMsgProc,
	   pthread_mutex_t *ppmServerStarted,
	   int dwScreen,
	   HWND hwndScreen,
	   BOOL allowOtherWM);
d155 1
a155 1
winDeinitMultiWindowWM (void);
d158 1
a158 2
winMinimizeWindow (Window id);

d165 1
a165 1
winUpdateIcon (Window id);
d167 2
a168 2
void 
winInitGlobalIcons (void);
d170 2
a171 2
void 
winDestroyIcon(HICON hIcon);
d173 1
a173 1
#endif /* XWIN_MULTIWINDOW */
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d82 4
@


1.1
log
@Initial revision
@
text
@d5 1
d32 1
d46 1
d48 2
a49 2
#define WINDOW_TITLE		PROJECT_NAME " - %s:%d"
#define WINDOW_TITLE_XDMCP	PROJECT_NAME " - %s"
d66 2
d119 2
d123 14
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
