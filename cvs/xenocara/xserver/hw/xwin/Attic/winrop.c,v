head	1.3;
access;
symbols
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.12
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.18
	OPENBSD_5_0:1.1.1.2.0.16
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.12
	OPENBSD_4_9_BASE:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.14
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2015.09.16.19.10.24;	author matthieu;	state dead;
branches;
next	1.2;
commitid	Te1daavkBLskZ8gc;

1.2
date	2012.06.10.13.21.29;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.22.32;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.22.32;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.03.46;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@/*
 *Copyright (C) 1994-2002 The XFree86 Project, Inc. All Rights Reserved.
 *
 *Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 *"Software"), to deal in the Software without restriction, including
 *without limitation the rights to use, copy, modify, merge, publish,
 *distribute, sublicense, and/or sell copies of the Software, and to
 *permit persons to whom the Software is furnished to do so, subject to
 *the following conditions:
 *
 *The above copyright notice and this permission notice shall be
 *included in all copies or substantial portions of the Software.
 *
 *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *NONINFRINGEMENT. IN NO EVENT SHALL THE XFREE86 PROJECT BE LIABLE FOR
 *ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 *CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 *WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *Except as contained in this notice, the name of the XFree86 Project
 *shall not be used in advertising or otherwise to promote the sale, use
 *or other dealings in this Software without prior written authorization
 *from the XFree86 Project.
 *
 * 	Authors:	Alan Hourihane <alanh@@fairlite.demon.co.uk>
 */

/*
 * Raster operations used by Windows translated to X's 16 rop codes...
 */
#ifdef HAVE_XWIN_CONFIG_H
#include <xwin-config.h>
#endif
#include "win.h"

void
 ROP16(HDC hdc, int rop);

int g_copyROP[16] = { 0xFF0062, /* GXclear            - 0 */
    0x8800C6,                   /* GXand              - S & D */
    0x440328,                   /* GXandReverse       - S & !D */
    0xCC0020,                   /* GXcopy             - S */
    0x220326,                   /* GXandInverted      - !S & D */
    0xAA0029,                   /* GXnoop             - D */
    0x660046,                   /* GXxor              - S ^ D */
    0xEE0086,                   /* GXor               - S | D */
    0x1100A6,                   /* GXnor              - !S & !D */
    0x990126,                   /* GXequiv            - !S ^ D */
    0x550009,                   /* GXinvert           - !D */
    0xDD0228,                   /* GXorReverse        - S | !D */
    0x330008,                   /* GXcopyInverted     - !S */
    0xBB0226,                   /* GXorInverted       - !S | D */
    0x7700C6,                   /* GXnand             - !S | !D */
    0x000042                    /* GXset              - 1 */
};

int g_patternROP[16] = { 0xFF0062,      /* GXclear            - 0 */
    0xA000C9,                   /* GXand              - P & D */
    0xF50225,                   /* GXandReverse       - P & !D */
    0xF00021,                   /* GXcopy             - P */
    0x5F00E9,                   /* GXandInverted      - !P & D */
    0xAA0029,                   /* GXnoop             - D */
    0xA50065,                   /* GXxor              - P ^ D */
    0xA000C9,                   /* GXor               - P | D */
    0x5F00E9,                   /* GXnor              - !P & !D */
    0x5A0049,                   /* GXequiv            - !P ^ D */
    0x550009,                   /* GXinvert           - !D */
    0x500325,                   /* GXorReverse        - P | !D */
    0x0F0001,                   /* GXcopyInverted     - !P */
    0x0A0329,                   /* GXorInverted       - !P | D */
    0x0500A9,                   /* GXnand             - !P | !D */
    0x000042                    /* GXset              - 1 */
};

void
ROP16(HDC hdc, int rop)
{
    switch (rop) {
    case GXclear:
        SetROP2(hdc, R2_BLACK);
        break;

    case GXand:
        SetROP2(hdc, R2_MASKPEN);
        break;

    case GXandReverse:
        SetROP2(hdc, R2_MASKPENNOT);
        break;

    case GXcopy:
        SetROP2(hdc, R2_COPYPEN);
        break;

    case GXnoop:
        SetROP2(hdc, R2_NOP);
        break;

    case GXxor:
        SetROP2(hdc, R2_XORPEN);
        break;

    case GXor:
        SetROP2(hdc, R2_MERGEPEN);
        break;

    case GXnor:
        SetROP2(hdc, R2_NOTMERGEPEN);
        break;

    case GXequiv:
        SetROP2(hdc, R2_NOTXORPEN);
        break;

    case GXinvert:
        SetROP2(hdc, R2_NOT);
        break;

    case GXorReverse:
        SetROP2(hdc, R2_MERGEPENNOT);
        break;

    case GXcopyInverted:
        SetROP2(hdc, R2_NOTCOPYPEN);
        break;

    case GXorInverted:
        SetROP2(hdc, R2_MERGENOTPEN);
        break;

    case GXnand:
        SetROP2(hdc, R2_NOTMASKPEN);
        break;

    case GXset:
        SetROP2(hdc, R2_WHITE);
        break;
    }
}
@


1.2
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@@


1.1
log
@Initial revision
@
text
@a29 1
/* $XFree86$ */
d40 1
a40 1
ROP16 (HDC hdc, int rop);
d42 16
a57 16
int g_copyROP[16] = { 	0xFF0062, /* GXclear 		- 0 */
		 	0x8800C6, /* GXand 		- S & D */
		 	0x440328, /* GXandReverse  	- S & !D */
		 	0xCC0020, /* GXcopy 		- S */
		 	0x220326, /* GXandInverted 	- !S & D */
		 	0xAA0029, /* GXnoop		- D */
		 	0x660046, /* GXxor 		- S ^ D */
		 	0xEE0086, /* GXor		- S | D */
		 	0x1100A6, /* GXnor 		- !S & !D */
		 	0x990126, /* GXequiv		- !S ^ D */
		 	0x550009, /* GXinvert		- !D */
		 	0xDD0228, /* GXorReverse	- S | !D */
		 	0x330008, /* GXcopyInverted	- !S */
		 	0xBB0226, /* GXorInverted	- !S | D */
		 	0x7700C6, /* GXnand		- !S | !D */
		 	0x000042  /* GXset		- 1 */
d60 16
a75 16
int g_patternROP[16] = {0xFF0062, /* GXclear		- 0 */
		 	0xA000C9, /* GXand 		- P & D */
		 	0xF50225, /* GXandReverse	- P & !D */
		 	0xF00021, /* GXcopy 		- P */
		 	0x5F00E9, /* GXandInverted 	- !P & D */
		 	0xAA0029, /* GXnoop		- D */
		 	0xA50065, /* GXxor		- P ^ D */
		 	0xA000C9, /* GXor		- P | D */
		 	0x5F00E9, /* GXnor		- !P & !D */
		 	0x5A0049, /* GXequiv		- !P ^ D */
		 	0x550009, /* GXinvert		- !D */
		 	0x500325, /* GXorReverse	- P | !D */
		 	0x0F0001, /* GXcopyInverted	- !P */
		 	0x0A0329, /* GXorInverted	- !P | D */
		 	0x0500A9, /* GXnand		- !P | !D */
		 	0x000042  /* GXset		- 1 */
a77 1

d79 1
a79 1
ROP16 (HDC hdc, int rop)
d81 1
a81 2
  switch (rop)
    {
d83 2
a84 2
      SetROP2 (hdc, R2_BLACK);
      break;
d87 2
a88 2
      SetROP2 (hdc, R2_MASKPEN);
      break;
d91 2
a92 2
      SetROP2 (hdc, R2_MASKPENNOT);
      break;
d95 2
a96 2
      SetROP2 (hdc, R2_COPYPEN);
      break;
d99 2
a100 2
      SetROP2 (hdc, R2_NOP);
      break;
d103 2
a104 2
      SetROP2 (hdc, R2_XORPEN);
      break;
d107 2
a108 2
      SetROP2 (hdc, R2_MERGEPEN);
      break;
d111 2
a112 2
      SetROP2 (hdc, R2_NOTMERGEPEN);
      break;
d115 2
a116 2
      SetROP2 (hdc, R2_NOTXORPEN);
      break;
d119 2
a120 2
      SetROP2 (hdc, R2_NOT);
      break;
d123 2
a124 2
      SetROP2 (hdc, R2_MERGEPENNOT);
      break;
d127 2
a128 2
      SetROP2 (hdc, R2_NOTCOPYPEN);
      break;
d131 2
a132 2
      SetROP2 (hdc, R2_MERGENOTPEN);
      break;
d135 2
a136 2
      SetROP2 (hdc, R2_NOTMASKPEN);
      break;
d139 2
a140 2
      SetROP2 (hdc, R2_WHITE);
      break;
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d30 1
@

