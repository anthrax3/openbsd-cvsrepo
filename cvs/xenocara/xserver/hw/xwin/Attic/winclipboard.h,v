head	1.6;
access;
symbols
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.09.16.19.10.24;	author matthieu;	state dead;
branches;
next	1.5;
commitid	Te1daavkBLskZ8gc;

1.5
date	2014.05.02.19.27.50;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2013.06.07.17.28.54;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2012.06.10.13.21.29;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.36;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.22.26;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.22.26;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@#ifndef _WINCLIPBOARD_H_
#define _WINCLIPBOARD_H_
/*
 *Copyright (C) 2003-2004 Harold L Hunt II All Rights Reserved.
 *
 *Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 *"Software"), to deal in the Software without restriction, including
 *without limitation the rights to use, copy, modify, merge, publish,
 *distribute, sublicense, and/or sell copies of the Software, and to
 *permit persons to whom the Software is furnished to do so, subject to
 *the following conditions:
 *
 *The above copyright notice and this permission notice shall be
 *included in all copies or substantial portions of the Software.
 *
 *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 *MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *NONINFRINGEMENT. IN NO EVENT SHALL HAROLD L HUNT II BE LIABLE FOR
 *ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 *CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 *WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *Except as contained in this notice, the name of Harold L Hunt II
 *shall not be used in advertising or otherwise to promote the sale, use
 *or other dealings in this Software without prior written authorization
 *from Harold L Hunt II.
 *
 * Authors:	Harold L Hunt II
 */

/* Standard library headers */
#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#ifdef __CYGWIN__
#include <sys/select.h>
#else
#include <X11/Xwinsock.h>
#endif
#include <fcntl.h>
#include <setjmp.h>
#include <pthread.h>

/* X headers */
#include <X11/X.h>
#include <X11/Xatom.h>
#include <X11/Xproto.h>
#include <X11/Xutil.h>
#include <X11/Xlocale.h>

/* Windows headers */
#include <X11/Xwindows.h>

/* Clipboard module constants */
#define WIN_CLIPBOARD_WINDOW_CLASS		"xwinclip"
#define WIN_CLIPBOARD_WINDOW_TITLE		"xwinclip"
#ifdef HAS_DEVWINDOWS
#define WIN_MSG_QUEUE_FNAME			"/dev/windows"
#endif
#define WIN_CONNECT_RETRIES			40
#define WIN_CONNECT_DELAY			4
#define WIN_JMP_OKAY				0
#define WIN_JMP_ERROR_IO			2
#define WIN_LOCAL_PROPERTY			"CYGX_CUT_BUFFER"
#define WIN_XEVENTS_SUCCESS			0
#define WIN_XEVENTS_CONVERT			2
#define WIN_XEVENTS_NOTIFY			3
#define WIN_CLIPBOARD_RETRIES			40
#define WIN_CLIPBOARD_DELAY			1

#define WM_WM_REINIT                           (WM_USER + 1)

/*
 * References to external symbols
 */

extern char *display;
extern void winDebug(const char *format, ...);
extern void winErrorFVerb(int verb, const char *format, ...);

/*
 * winclipboardinit.c
 */

Bool
 winInitClipboard(void);

HWND winClipboardCreateMessagingWindow(void);

/*
 * winclipboardtextconv.c
 */

void
 winClipboardDOStoUNIX(char *pszData, int iLength);

void
 winClipboardUNIXtoDOS(char **ppszData, int iLength);

/*
 * winclipboardthread.c
 */

void *winClipboardProc(void *);

/*
 * winclipboardwndproc.c
 */

BOOL winClipboardFlushWindowsMessageQueue(HWND hwnd);

LRESULT CALLBACK
winClipboardWindowProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam);

/*
 * winclipboardxevents.c
 */

int

winClipboardFlushXEvents(HWND hwnd,
                         int iWindow, Display * pDisplay, Bool fUnicodeSupport);
#endif
@


1.5
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@@


1.4
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@a68 1
#define WIN_XEVENTS_SHUTDOWN			1
a107 3

void
 winDeinitClipboard(void);
@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@a81 1
extern void ErrorF(const char * /*f */ , ...);
d102 1
a102 1
 winClipboardUNIXtoDOS(unsigned char **ppszData, int iLength);
a111 7

/*
 * winclipboardunicode.c
 */

Bool
 winClipboardDetectUnicodeSupport(void);
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@a41 1
#define HAS_WINSOCK
a56 1

d61 1
a61 1
# define WIN_MSG_QUEUE_FNAME			"/dev/windows"
d72 2
d82 3
a84 4
extern void ErrorF (const char* /*f*/, ...);
extern void winDebug (const char *format, ...);
extern void winErrorFVerb (int verb, const char *format, ...);

d91 1
a91 4
winInitClipboard (void);

HWND
winClipboardCreateMessagingWindow (void);
d93 1
d100 1
a100 1
winClipboardDOStoUNIX (char *pszData, int iLength);
d103 1
a103 2
winClipboardUNIXtoDOS (unsigned char **ppszData, int iLength);

d109 1
a109 2
void *
winClipboardProc (void *);
d112 1
a112 2
winDeinitClipboard (void);

d119 1
a119 2
winClipboardDetectUnicodeSupport (void);

d125 1
a125 2
BOOL
winClipboardFlushWindowsMessageQueue (HWND hwnd);
d128 1
a128 3
winClipboardWindowProc (HWND hwnd, UINT message, 
			WPARAM wParam, LPARAM lParam);

d135 3
a137 4
winClipboardFlushXEvents (HWND hwnd,
			  int iWindow,
			  Display *pDisplay,
			  Bool fUnicodeSupport);
@


1.1
log
@Initial revision
@
text
@d41 1
a41 1
#include "Xwinsock.h"
a50 4
/* NOTE: For some unknown reason, including Xproto.h solves
 * tons of problems with including windows.h.  Unknowns reasons
 * are usually bad, so someone should investigate this.
 */
d52 2
a53 9
#include "X11/Xutil.h"
#include "X11/Xlocale.h"

/* Fixups to prevent collisions between Windows and X headers */
#define ATOM			DWORD

#ifndef __CYGWIN__
#define sleep(x) Sleep (1000 * (x))
#endif
d56 1
a56 5
#ifndef XFree86Server
#define XFree86Server
#endif
#include <windows.h>
#undef XFree86Server
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
