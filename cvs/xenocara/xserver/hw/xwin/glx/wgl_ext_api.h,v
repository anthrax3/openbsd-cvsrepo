head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.18
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.16
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.06.10.13.21.30;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.05.13.32.56;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.05.15.36.10;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@/*
 * File: wgl_ext_api.h
 * Purpose: Wrapper functions for Win32 OpenGL wgl extension functions
 *
 * Authors: Jon TURNEY
 *
 * Copyright (c) Jon TURNEY 2009
 *
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef wgl_ext_api_h
#define wgl_ext_api_h

#include <GL/wglext.h>

void wglResolveExtensionProcs(void);

/*
  Prototypes for wrapper functions we actually use
  XXX: should be automatically generated as well
*/

const char *wglGetExtensionsStringARBWrapper(HDC hdc);
BOOL wglMakeContextCurrentARBWrapper(HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
HDC wglGetCurrentReadDCARBWrapper(VOID);

BOOL wglGetPixelFormatAttribivARBWrapper(HDC hdc,
                                         int iPixelFormat,
                                         int iLayerPlane,
                                         UINT nAttributes,
                                         const int *piAttributes,
                                         int *piValues);

BOOL wglGetPixelFormatAttribfvARBWrapper(HDC hdc,
                                         int iPixelFormat,
                                         int iLayerPlane,
                                         UINT nAttributes,
                                         const int *piAttributes,
                                         FLOAT * pfValues);

BOOL wglChoosePixelFormatARBWrapper(HDC hdc,
                                    const int *piAttribIList,
                                    const FLOAT * pfAttribFList,
                                    UINT nMaxFormats,
                                    int *piFormats, UINT * nNumFormats);

HPBUFFERARB wglCreatePbufferARBWrapper(HDC hDC,
                                       int iPixelFormat,
                                       int iWidth,
                                       int iHeight, const int *piAttribList);

HDC wglGetPbufferDCARBWrapper(HPBUFFERARB hPbuffer);

int wglReleasePbufferDCARBWrapper(HPBUFFERARB hPbuffer, HDC hDC);

BOOL wglDestroyPbufferARBWrapper(HPBUFFERARB hPbuffer);

BOOL wglQueryPbufferARBWrapper(HPBUFFERARB hPbuffer,
                               int iAttribute, int *piValue);

BOOL wglSwapIntervalEXTWrapper(int interval);

int wglGetSwapIntervalEXTWrapper(void);

#endif                          /* wgl_ext_api_h */
@


1.2
log
@Update to xserver 1.11.2
@
text
@d46 5
a50 5
                                          int iPixelFormat,
                                          int iLayerPlane,
                                          UINT nAttributes,
                                          const int *piAttributes,
                                          int *piValues);
d53 5
a57 5
                                          int iPixelFormat,
                                          int iLayerPlane,
                                          UINT nAttributes,
                                          const int *piAttributes,
                                          FLOAT *pfValues);
d60 4
a63 5
                                     const int *piAttribIList,
                                     const FLOAT *pfAttribFList,
                                     UINT nMaxFormats,
                                     int *piFormats,
                                     UINT *nNumFormats);
d68 1
a68 2
                                       int iHeight,
                                       const int *piAttribList);
d72 1
a72 2
int wglReleasePbufferDCARBWrapper(HPBUFFERARB hPbuffer,
                                  HDC hDC);
d77 1
a77 2
                                int iAttribute,
                                int *piValue);
d83 1
a83 1
#endif /* wgl_ext_api_h */
@


1.1
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d32 1
a32 1
#include "wglext.h"
@

