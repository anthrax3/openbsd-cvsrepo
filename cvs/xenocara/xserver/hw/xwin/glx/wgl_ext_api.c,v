head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.20
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.18
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.14
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2011.11.05.13.32.56;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2010.12.05.15.36.10;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to xserver 1.11.2
@
text
@/*
 * File: wgl_ext_api.c
 * Purpose: Wrapper functions for Win32 OpenGL wgl extension functions
 *
 * Authors: Jon TURNEY
 *
 * Copyright (c) Jon TURNEY 2009
 *
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifdef HAVE_XWIN_CONFIG_H
#include <xwin-config.h>
#endif

#include <X11/Xwindows.h>
#include <GL/gl.h>
#include <GL/glext.h>
#include <glx/glxserver.h>
#include <glx/glxext.h>
#include <GL/wglext.h>
#include <wgl_ext_api.h>
#include "glwindows.h"

#define RESOLVE_DECL(type) \
    static type type##proc = NULL;

#define PRERESOLVE(type, symbol) \
    type##proc = (type)wglGetProcAddress(symbol);

#define RESOLVE_RET(type, symbol, retval) \
  if (type##proc == NULL) { \
    ErrorF("wglwrap: Can't resolve \"%s\"\n", symbol); \
    __glXErrorCallBack(0); \
    return retval; \
  }

#define RESOLVE(procname, symbol) RESOLVE_RET(procname, symbol,)

#define RESOLVED_PROC(type) type##proc

/*
 * Include generated cdecl wrappers for stdcall WGL functions
 *
 * There are extensions to the wgl*() API as well; again we call
 * these functions by using wglGetProcAddress() to get a pointer
 * to the function, and wrapping it for cdecl/stdcall conversion
 *
 * We arrange to resolve the functions up front, as they need a
 * context to work, as we like to use them to be able to select
 * a context.  Again, this assumption fails badly on multimontor
 * systems...
 */

#include "generated_wgl_wrappers.c"
@


1.1
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d38 1
a38 1
#include "wglext.h"
d46 1
a46 5
    type##proc = (type)wglGetProcAddress(symbol); \
    if (type##proc == NULL) \
        ErrorF("wglwrap: Can't resolve \"%s\"\n", symbol); \
    else \
        ErrorF("wglwrap: Resolved \"%s\"\n", symbol);
d50 4
a53 3
  __glXErrorCallBack(0); \
  return retval; \
      }
@

