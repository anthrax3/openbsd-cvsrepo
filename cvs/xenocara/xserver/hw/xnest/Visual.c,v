head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.18
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.16
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.12
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.18
	OPENBSD_5_0:1.1.1.2.0.16
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.12
	OPENBSD_4_9_BASE:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.14
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.06.07.17.28.53;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.10.13.21.28;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.21.46;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.21.46;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.03.26;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@/*

Copyright 1993 by Davor Matic

Permission to use, copy, modify, distribute, and sell this software
and its documentation for any purpose is hereby granted without fee,
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in
supporting documentation.  Davor Matic makes no representations about
the suitability of this software for any purpose.  It is provided "as
is" without express or implied warranty.

*/

#ifdef HAVE_XNEST_CONFIG_H
#include <xnest-config.h>
#endif

#include <X11/X.h>
#include <X11/Xproto.h>
#include "scrnintstr.h"
#include "dix.h"
#include "mi.h"
#include "Xnest.h"

#include "Display.h"
#include "Visual.h"

Visual *
xnestVisual(VisualPtr pVisual)
{
    int i;

    for (i = 0; i < xnestNumVisuals; i++)
        if (pVisual->class == xnestVisuals[i].class &&
            pVisual->bitsPerRGBValue == xnestVisuals[i].bits_per_rgb &&
            pVisual->ColormapEntries == xnestVisuals[i].colormap_size &&
            pVisual->nplanes == xnestVisuals[i].depth &&
            pVisual->redMask == xnestVisuals[i].red_mask &&
            pVisual->greenMask == xnestVisuals[i].green_mask &&
            pVisual->blueMask == xnestVisuals[i].blue_mask)
            return xnestVisuals[i].visual;

    return NULL;
}

Visual *
xnestVisualFromID(ScreenPtr pScreen, VisualID visual)
{
    int i;

    for (i = 0; i < pScreen->numVisuals; i++)
        if (pScreen->visuals[i].vid == visual)
            return xnestVisual(&pScreen->visuals[i]);

    return NULL;
}

Colormap
xnestDefaultVisualColormap(Visual * visual)
{
    int i;

    for (i = 0; i < xnestNumVisuals; i++)
        if (xnestVisuals[i].visual == visual)
            return xnestDefaultColormaps[i];

    return None;
}
@


1.2
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@a23 1
#include "mibstore.h"
@


1.1
log
@Initial revision
@
text
@a13 1
/* $XFree86$ */
d33 1
a33 1
  int i;
d35 9
a43 9
  for (i = 0; i < xnestNumVisuals; i++)
    if (pVisual->class == xnestVisuals[i].class &&
	pVisual->bitsPerRGBValue == xnestVisuals[i].bits_per_rgb &&
	pVisual->ColormapEntries == xnestVisuals[i].colormap_size &&
	pVisual->nplanes == xnestVisuals[i].depth &&
	pVisual->redMask == xnestVisuals[i].red_mask &&
	pVisual->greenMask == xnestVisuals[i].green_mask &&
	pVisual->blueMask == xnestVisuals[i].blue_mask)
      return xnestVisuals[i].visual;
d45 1
a45 1
  return NULL;
d51 1
a51 5
  int i;
  
  for (i = 0; i < pScreen->numVisuals; i++)
    if (pScreen->visuals[i].vid == visual)
      return xnestVisual(&pScreen->visuals[i]);
d53 5
a57 1
  return NULL;
d61 1
a61 1
xnestDefaultVisualColormap(Visual *visual)
d63 7
a69 7
  int i;
  
  for (i = 0; i < xnestNumVisuals; i++)
    if (xnestVisuals[i].visual == visual)
      return xnestDefaultColormaps[i];
  
  return None;
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d14 1
@

