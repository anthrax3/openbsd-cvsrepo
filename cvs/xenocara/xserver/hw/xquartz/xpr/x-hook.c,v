head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.14
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.12
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.8
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.2
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2014.05.02.19.27.50;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.10.13.21.29;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.12.05.15.36.09;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.36;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.02.15.26.31;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@/* x-hook.c
 *
 * Copyright (c) 2002-2012 Apple Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT.  IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT
 * HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above
 * copyright holders shall not be used in advertising or otherwise to
 * promote the sale, use or other dealings in this Software without
 * prior written authorization.
 */

#ifdef HAVE_DIX_CONFIG_H
#include <dix-config.h>
#endif

#include "x-hook.h"
#include <stdlib.h>
#include <assert.h>
#include "os.h"

#define CELL_NEW(f, d) X_PFX(list_prepend) ((x_list *)(f), (d))
#define CELL_FREE(c)   X_PFX(list_free_1) (c)
#define CELL_FUN(c)    ((x_hook_function *)((c)->next))
#define CELL_DATA(c)   ((c)->data)

X_EXTERN x_list *
X_PFX(hook_add) (x_list * lst, x_hook_function * fun, void *data) {
    return X_PFX(list_prepend) (lst, CELL_NEW(fun, data));
}

X_EXTERN x_list *
X_PFX(hook_remove) (x_list * lst, x_hook_function * fun, void *data) {
    x_list *node, *cell;
    x_list *to_delete = NULL;

    for (node = lst; node != NULL; node = node->next) {
        cell = node->data;
        if (CELL_FUN(cell) == fun && CELL_DATA(cell) == data)
            to_delete = X_PFX(list_prepend) (to_delete, cell);
    }

    for (node = to_delete; node != NULL; node = node->next) {
        cell = node->data;
        lst = X_PFX(list_remove) (lst, cell);
        CELL_FREE(cell);
    }

    X_PFX(list_free) (to_delete);
    return lst;
}

X_EXTERN void
X_PFX(hook_run) (x_list * lst, void *arg) {
    x_list *node;

    if (!lst)
        return;

    for (node = lst; node != NULL; node = node->next) {
        x_list *cell = node->data;

        x_hook_function *fun = CELL_FUN(cell);
        void *data = CELL_DATA(cell);

        (*fun)(arg, data);
    }
}

X_EXTERN void
X_PFX(hook_free) (x_list * lst) {
    x_list *node;

    for (node = lst; node != NULL; node = node->next) {
        CELL_FREE(node->data);
    }

    X_PFX(list_free) (lst);
}
@


1.4
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d73 1
a73 4
    x_list *node, *cell;
    x_hook_function **fun;
    void **data;
    int length, i;
d78 2
a79 3
    length = X_PFX(list_length) (lst);
    fun = malloc(sizeof(x_hook_function *) * length);
    data = malloc(sizeof(void *) * length);
d81 2
a82 9
    if (!fun || !data) {
        FatalError("Failed to allocate memory in %s\n", __func__);
    }

    for (i = 0, node = lst; node != NULL; node = node->next, i++) {
        cell = node->data;
        fun[i] = CELL_FUN(cell);
        data[i] = CELL_DATA(cell);
    }
d84 1
a84 2
    for (i = 0; i < length; i++) {
        (*fun[i])(arg, data[i]);
a85 3

    free(fun);
    free(data);
@


1.3
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d2 28
a29 27

   Copyright (c) 2003 Apple Computer, Inc. All rights reserved.

   Permission is hereby granted, free of charge, to any person
   obtaining a copy of this software and associated documentation files
   (the "Software"), to deal in the Software without restriction,
   including without limitation the rights to use, copy, modify, merge,
   publish, distribute, sublicense, and/or sell copies of the Software,
   and to permit persons to whom the Software is furnished to do so,
   subject to the following conditions:

   The above copyright notice and this permission notice shall be
   included in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
   NONINFRINGEMENT.  IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT
   HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.

   Except as contained in this notice, the name(s) of the above
   copyright holders shall not be used in advertising or otherwise to
   promote the sale, use or other dealings in this Software without
   prior written authorization. */
d40 4
a43 4
#define CELL_NEW(f,d) X_PFX (list_prepend) ((x_list *) (f), (d))
#define CELL_FREE(c)  X_PFX (list_free_1) (c)
#define CELL_FUN(c)   ((x_hook_function *) ((c)->next))
#define CELL_DATA(c)  ((c)->data)
d46 2
a47 3
X_PFX (hook_add) (x_list *lst, x_hook_function *fun, void *data)
{
    return X_PFX (list_prepend) (lst, CELL_NEW (fun, data));
d51 1
a51 2
X_PFX (hook_remove) (x_list *lst, x_hook_function *fun, void *data)
{
d55 4
a58 5
    for (node = lst; node != NULL; node = node->next)
    {
	cell = node->data;
	if (CELL_FUN (cell) == fun && CELL_DATA (cell) == data)
	    to_delete = X_PFX (list_prepend) (to_delete, cell);
d61 4
a64 5
    for (node = to_delete; node != NULL; node = node->next)
    {
	cell = node->data;
	lst = X_PFX (list_remove) (lst, cell);
	CELL_FREE (cell);
d67 1
a67 1
    X_PFX (list_free) (to_delete);
d72 1
a72 2
X_PFX (hook_run) (x_list *lst, void *arg)
{
d78 1
a78 1
    if(!lst)
d81 3
a83 3
    length = X_PFX (list_length) (lst);
    fun = malloc(sizeof (x_hook_function *) * length);
    data = malloc(sizeof (void *) * length);
d85 1
a85 1
    if(!fun || !data) {
d88 5
a92 6
    
    for (i = 0, node = lst; node != NULL; node = node->next, i++)
    {
	cell = node->data;
	fun[i] = CELL_FUN (cell);
	data[i] = CELL_DATA (cell);
d95 2
a96 3
    for (i = 0; i < length; i++)
    {
	(*fun[i]) (arg, data[i]);
d98 1
a98 1
    
d104 1
a104 2
X_PFX (hook_free) (x_list *lst)
{
d107 2
a108 3
    for (node = lst; node != NULL; node = node->next)
    {
	CELL_FREE (node->data);
d111 1
a111 1
    X_PFX (list_free) (lst);
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d86 2
a87 2
    fun = xalloc (sizeof (x_hook_function *) * length);
    data = xalloc (sizeof (void *) * length);
d105 2
a106 2
    xfree(fun);
    xfree(data);
@


1.1
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d37 1
d82 3
d86 2
a87 2
    fun = alloca (sizeof (x_hook_function *) * length);
    data = alloca (sizeof (void *) * length);
d89 4
d104 3
@

