head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.18
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.16
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.6
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.06.10.13.21.29;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.36;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.02.15.26.31;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@/**************************************************************************

   Copyright 1998-1999 Precision Insight, Inc., Cedar Park, Texas.
   Copyright 2000 VA Linux Systems, Inc.
   Copyright (c) 2002-2012 Apple Computer, Inc.
   All Rights Reserved.

   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the
   "Software"), to deal in the Software without restriction, including
   without limitation the rights to use, copy, modify, merge, publish,
   distribute, sub license, and/or sell copies of the Software, and to
   permit persons to whom the Software is furnished to do so, subject to
   the following conditions:

   The above copyright notice and this permission notice (including the
   next paragraph) shall be included in all copies or substantial portions
   of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
   IN NO EVENT SHALL PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR
   ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

**************************************************************************/

/*
 * Authors:
 *   Kevin E. Martin <martin@@valinux.com>
 *   Jens Owen <jens@@valinux.com>
 *   Rickard E. (Rik) Fiath <faith@@valinux.com>
 *   Jeremy Huddleston <jeremyhu@@apple.com>
 *
 */

#ifndef _APPLEDRISTR_H_
#define _APPLEDRISTR_H_

#include "appledri.h"

#define APPLEDRINAME            "Apple-DRI"

#define APPLE_DRI_MAJOR_VERSION 1       /* current version numbers */
#define APPLE_DRI_MINOR_VERSION 0
#define APPLE_DRI_PATCH_VERSION 0

typedef struct _AppleDRIQueryVersion {
    CARD8 reqType;               /* always DRIReqCode */
    CARD8 driReqType;            /* always X_DRIQueryVersion */
    CARD16 length B16;
} xAppleDRIQueryVersionReq;
#define sz_xAppleDRIQueryVersionReq 4

typedef struct {
    BYTE type;                   /* X_Reply */
    BOOL pad1;
    CARD16 sequenceNumber B16;
    CARD32 length B32;
    CARD16 majorVersion B16;     /* major version of DRI protocol */
    CARD16 minorVersion B16;     /* minor version of DRI protocol */
    CARD32 patchVersion B32;     /* patch version of DRI protocol */
    CARD32 pad3 B32;
    CARD32 pad4 B32;
    CARD32 pad5 B32;
    CARD32 pad6 B32;
} xAppleDRIQueryVersionReply;
#define sz_xAppleDRIQueryVersionReply 32

typedef struct _AppleDRIQueryDirectRenderingCapable {
    CARD8 reqType;               /* always DRIReqCode */
    CARD8 driReqType;            /* X_DRIQueryDirectRenderingCapable */
    CARD16 length B16;
    CARD32 screen B32;
} xAppleDRIQueryDirectRenderingCapableReq;
#define sz_xAppleDRIQueryDirectRenderingCapableReq 8

typedef struct {
    BYTE type;                   /* X_Reply */
    BOOL pad1;
    CARD16 sequenceNumber B16;
    CARD32 length B32;
    BOOL isCapable;
    BOOL pad2;
    BOOL pad3;
    BOOL pad4;
    CARD32 pad5 B32;
    CARD32 pad6 B32;
    CARD32 pad7 B32;
    CARD32 pad8 B32;
    CARD32 pad9 B32;
} xAppleDRIQueryDirectRenderingCapableReply;
#define sz_xAppleDRIQueryDirectRenderingCapableReply 32

typedef struct _AppleDRIAuthConnection {
    CARD8 reqType;               /* always DRIReqCode */
    CARD8 driReqType;            /* always X_DRICloseConnection */
    CARD16 length B16;
    CARD32 screen B32;
    CARD32 magic B32;
} xAppleDRIAuthConnectionReq;
#define sz_xAppleDRIAuthConnectionReq 12

typedef struct {
    BYTE type;
    BOOL pad1;
    CARD16 sequenceNumber B16;
    CARD32 length B32;
    CARD32 authenticated B32;
    CARD32 pad2 B32;
    CARD32 pad3 B32;
    CARD32 pad4 B32;
    CARD32 pad5 B32;
    CARD32 pad6 B32;
} xAppleDRIAuthConnectionReply;
#define zx_xAppleDRIAuthConnectionReply 32

typedef struct _AppleDRICreateSurface {
    CARD8 reqType;               /* always DRIReqCode */
    CARD8 driReqType;            /* always X_DRICreateSurface */
    CARD16 length B16;
    CARD32 screen B32;
    CARD32 drawable B32;
    CARD32 client_id B32;
} xAppleDRICreateSurfaceReq;
#define sz_xAppleDRICreateSurfaceReq 16

typedef struct {
    BYTE type;                   /* X_Reply */
    BOOL pad1;
    CARD16 sequenceNumber B16;
    CARD32 length B32;
    CARD32 key_0 B32;
    CARD32 key_1 B32;
    CARD32 uid B32;
    CARD32 pad4 B32;
    CARD32 pad5 B32;
    CARD32 pad6 B32;
} xAppleDRICreateSurfaceReply;
#define sz_xAppleDRICreateSurfaceReply 32

typedef struct _AppleDRIDestroySurface {
    CARD8 reqType;               /* always DRIReqCode */
    CARD8 driReqType;            /* always X_DRIDestroySurface */
    CARD16 length B16;
    CARD32 screen B32;
    CARD32 drawable B32;
} xAppleDRIDestroySurfaceReq;
#define sz_xAppleDRIDestroySurfaceReq 12

typedef struct _AppleDRINotify {
    BYTE type;                   /* always eventBase + event type */
    BYTE kind;
    CARD16 sequenceNumber B16;
    CARD32 time B32;             /* time of change */
    CARD32 pad1 B32;
    CARD32 arg B32;
    CARD32 pad3 B32;
    CARD32 pad4 B32;
    CARD32 pad5 B32;
    CARD32 pad6 B32;
} xAppleDRINotifyEvent;
#define sz_xAppleDRINotifyEvent 32

typedef struct {
    CARD8 reqType;
    CARD8 driReqType;
    CARD16 length B16;
    CARD32 screen B32;
    CARD32 drawable B32;
    BOOL doubleSwap;
    CARD8 pad1, pad2, pad3;
} xAppleDRICreateSharedBufferReq;

#define sz_xAppleDRICreateSharedBufferReq 16

typedef struct {
    BYTE type;
    BYTE data1;
    CARD16 sequenceNumber B16;
    CARD32 length B32;
    CARD32 stringLength B32;     /* 0 on error */
    CARD32 width B32;
    CARD32 height B32;
    CARD32 pad1 B32;
    CARD32 pad2 B32;
    CARD32 pad3 B32;
} xAppleDRICreateSharedBufferReply;

#define sz_xAppleDRICreateSharedBufferReply 32

typedef struct {
    CARD8 reqType;
    CARD8 driReqType;
    CARD16 length B16;
    CARD32 screen B32;
    CARD32 drawable B32;
} xAppleDRISwapBuffersReq;

#define sz_xAppleDRISwapBuffersReq 12

typedef struct {
    CARD8 reqType;               /*1 */
    CARD8 driReqType;            /*2 */
    CARD16 length B16;           /*4 */
    CARD32 screen B32;           /*8 */
    CARD32 drawable B32;         /*12 */
} xAppleDRICreatePixmapReq;

#define sz_xAppleDRICreatePixmapReq 12

typedef struct {
    BYTE type;                   /*1 */
    BOOL pad1;                   /*2 */
    CARD16 sequenceNumber B16;   /*4 */
    CARD32 length B32;           /*8 */
    CARD32 width B32;            /*12 */
    CARD32 height B32;           /*16 */
    CARD32 pitch B32;            /*20 */
    CARD32 bpp B32;              /*24 */
    CARD32 size B32;             /*28 */
    CARD32 stringLength B32;     /*32 */
} xAppleDRICreatePixmapReply;

#define sz_xAppleDRICreatePixmapReply 32

typedef struct {
    CARD8 reqType;               /*1 */
    CARD8 driReqType;            /*2 */
    CARD16 length B16;           /*4 */
    CARD32 drawable B32;         /*8 */
} xAppleDRIDestroyPixmapReq;

#define sz_xAppleDRIDestroyPixmapReq 8

#ifdef _APPLEDRI_SERVER_

void AppleDRISendEvent(
#if NeedFunctionPrototypes
    int /* type */,
    unsigned int /* mask */,
    int /* which */,
    int                       /* arg */
#endif
    );

#endif /* _APPLEDRI_SERVER_ */
#endif /* _APPLEDRISTR_H_ */
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d3 24
a26 24
Copyright 1998-1999 Precision Insight, Inc., Cedar Park, Texas.
Copyright 2000 VA Linux Systems, Inc.
Copyright (c) 2002, 2008, 2009 Apple Computer, Inc.
All Rights Reserved.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sub license, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice (including the
next paragraph) shall be included in all copies or substantial portions
of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.
IN NO EVENT SHALL PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR
ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
d35 1
d44 1
a44 1
#define APPLEDRINAME "Apple-DRI"
d46 3
a48 3
#define APPLE_DRI_MAJOR_VERSION	1	/* current version numbers */
#define APPLE_DRI_MINOR_VERSION	0
#define APPLE_DRI_PATCH_VERSION	0
d51 3
a53 3
    CARD8	reqType;		/* always DRIReqCode */
    CARD8	driReqType;		/* always X_DRIQueryVersion */
    CARD16	length B16;
d55 1
a55 1
#define sz_xAppleDRIQueryVersionReq	4
d58 11
a68 11
    BYTE	type;			/* X_Reply */
    BOOL	pad1;
    CARD16	sequenceNumber B16;
    CARD32	length B32;
    CARD16	majorVersion B16;	/* major version of DRI protocol */
    CARD16	minorVersion B16;	/* minor version of DRI protocol */
    CARD32	patchVersion B32;       /* patch version of DRI protocol */
    CARD32	pad3 B32;
    CARD32	pad4 B32;
    CARD32	pad5 B32;
    CARD32	pad6 B32;
d70 1
a70 1
#define sz_xAppleDRIQueryVersionReply	32
d73 4
a76 4
    CARD8	reqType;		/* always DRIReqCode */
    CARD8	driReqType;		/* X_DRIQueryDirectRenderingCapable */
    CARD16	length B16;
    CARD32	screen B32;
d78 1
a78 1
#define sz_xAppleDRIQueryDirectRenderingCapableReq	8
d81 13
a93 13
    BYTE	type;			/* X_Reply */
    BOOL	pad1;
    CARD16	sequenceNumber B16;
    CARD32	length B32;
    BOOL	isCapable;
    BOOL	pad2;
    BOOL	pad3;
    BOOL	pad4;
    CARD32	pad5 B32;
    CARD32	pad6 B32;
    CARD32	pad7 B32;
    CARD32	pad8 B32;
    CARD32	pad9 B32;
d95 1
a95 1
#define sz_xAppleDRIQueryDirectRenderingCapableReply	32
d98 5
a102 5
    CARD8	reqType;		/* always DRIReqCode */
    CARD8	driReqType;		/* always X_DRICloseConnection */
    CARD16	length B16;
    CARD32	screen B32;
    CARD32      magic B32;
d104 1
a104 1
#define sz_xAppleDRIAuthConnectionReq	12
d107 10
a116 10
    BYTE        type;
    BOOL        pad1;
    CARD16      sequenceNumber B16;
    CARD32      length B32;
    CARD32      authenticated B32;
    CARD32      pad2 B32;
    CARD32      pad3 B32;
    CARD32      pad4 B32;
    CARD32      pad5 B32;
    CARD32      pad6 B32;
d118 1
a118 1
#define zx_xAppleDRIAuthConnectionReply  32
d121 6
a126 6
    CARD8	reqType;		/* always DRIReqCode */
    CARD8	driReqType;		/* always X_DRICreateSurface */
    CARD16	length B16;
    CARD32	screen B32;
    CARD32	drawable B32;
    CARD32	client_id B32;
d128 1
a128 1
#define sz_xAppleDRICreateSurfaceReq	16
d131 10
a140 10
    BYTE	type;			/* X_Reply */
    BOOL	pad1;
    CARD16	sequenceNumber B16;
    CARD32	length B32;
    CARD32	key_0 B32;
    CARD32	key_1 B32;
    CARD32	uid B32;
    CARD32	pad4 B32;
    CARD32	pad5 B32;
    CARD32	pad6 B32;
d142 1
a142 1
#define sz_xAppleDRICreateSurfaceReply	32
d145 5
a149 5
    CARD8	reqType;		/* always DRIReqCode */
    CARD8	driReqType;		/* always X_DRIDestroySurface */
    CARD16	length B16;
    CARD32	screen B32;
    CARD32	drawable B32;
d151 1
a151 1
#define sz_xAppleDRIDestroySurfaceReq	12
d154 10
a163 10
	BYTE	type;		/* always eventBase + event type */
	BYTE	kind;
	CARD16	sequenceNumber B16;
	CARD32	time B32;	/* time of change */
	CARD32	pad1 B32;
	CARD32	arg B32;
	CARD32	pad3 B32;
	CARD32	pad4 B32;
	CARD32	pad5 B32;
	CARD32	pad6 B32;
d165 1
a165 2
#define sz_xAppleDRINotifyEvent	32

d184 1
a184 1
    CARD32 stringLength B32; /* 0 on error */
d205 5
a209 5
    CARD8 reqType; /*1*/
    CARD8 driReqType; /*2*/
    CARD16 length B16; /*4*/
    CARD32 screen B32; /*8*/
    CARD32 drawable B32; /*12*/
d215 10
a224 10
    BYTE type; /*1*/
    BOOL pad1; /*2*/
    CARD16 sequenceNumber B16; /*4*/
    CARD32 length B32; /*8*/
    CARD32 width B32; /*12*/
    CARD32 height B32; /*16*/
    CARD32 pitch B32; /*20*/
    CARD32 bpp B32; /*24*/
    CARD32 size B32; /*28*/
    CARD32 stringLength B32; /*32*/
d230 4
a233 4
    CARD8 reqType; /*1*/
    CARD8 driReqType; /*2*/
    CARD16 length B16; /*4*/
    CARD32 drawable B32; /*8*/
d240 1
a240 1
void AppleDRISendEvent (
d242 4
a245 4
    int			/* type */,
    unsigned int	/* mask */,
    int			/* which */,
    int			/* arg */
d247 1
a247 1
);
@


1.1
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d5 1
a5 1
Copyright (c) 2002 Apple Computer, Inc.
d156 2
a157 2
	Time	time B32;	/* time of change */
	CARD16	pad1 B16;
d160 3
d164 73
a236 1
#define sz_xAppleDRINotifyEvent	20
@

