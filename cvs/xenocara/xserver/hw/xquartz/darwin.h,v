head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.18
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.16
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.14
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.12
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.10
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.6
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.06.10.13.21.28;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.05.13.32.53;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.12.05.15.36.08;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.27.19.02.35;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.06.19.44.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.02.15.26.29;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@/*
 * Copyright (C) 2008-2012 Apple, Inc.
 * Copyright (c) 2001-2004 Torrey T. Lyons. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the sale,
 * use or other dealings in this Software without prior written authorization.
 */

#ifndef _DARWIN_H
#define _DARWIN_H

#include <IOKit/IOTypes.h>
#include "inputstr.h"
#include "scrnintstr.h"
#include <X11/extensions/XKB.h>
#include <asl.h>

#include "darwinfb.h"

// From darwin.c
void
DarwinPrintBanner(void);
int
DarwinParseModifierList(const char *constmodifiers, int separatelr);
void
DarwinAdjustScreenOrigins(ScreenInfo *pScreenInfo);

#define SCREEN_PRIV(pScreen) ((DarwinFramebufferPtr) \
                              dixLookupPrivate(&pScreen->devPrivates, \
                                               darwinScreenKey))

/*
 * Global variables from darwin.c
 */
extern DevPrivateKeyRec darwinScreenKeyRec;
#define darwinScreenKey (&darwinScreenKeyRec)
extern int darwinScreensFound;
extern io_connect_t darwinParamConnect;
extern int darwinEventReadFD;
extern int darwinEventWriteFD;
extern DeviceIntPtr darwinPointer;
extern DeviceIntPtr darwinTabletCursor;
extern DeviceIntPtr darwinTabletStylus;
extern DeviceIntPtr darwinTabletEraser;
extern DeviceIntPtr darwinKeyboard;

// User preferences
extern int darwinMouseAccelChange;
extern int darwinFakeButtons;
extern int darwinFakeMouse2Mask;
extern int darwinFakeMouse3Mask;
extern unsigned int darwinAppKitModMask;
extern unsigned int windowItemModMask;
extern int darwinSyncKeymap;
extern int darwinDesiredDepth;

// location of X11's (0,0) point in global screen coordinates
extern int darwinMainScreenX;
extern int darwinMainScreenY;

// bundle-main.c
extern char *bundle_id_prefix;

_X_ATTRIBUTE_PRINTF(6, 7)
extern void
xq_asl_log(int level, const char *subsystem, const char *file,
           const char *function, int line, const char *fmt,
           ...);

#define ASL_LOG(level, subsystem, msg, args ...) xq_asl_log(level, subsystem, \
                                                            __FILE__, \
                                                            __FUNCTION__, \
                                                            __LINE__, msg, \
                                                            ## args)
#define DEBUG_LOG(msg, args ...)                 ASL_LOG(ASL_LEVEL_DEBUG, \
                                                         "XQuartz", msg, \
                                                         ## args)
#define TRACE()                                  DEBUG_LOG("TRACE")

#endif  /* _DARWIN_H */
@


1.5
log
@Update to xserver 1.11.2
@
text
@d2 1
a2 1
 * Copyright (C) 2008 Apple, Inc.
d40 6
a45 3
void DarwinPrintBanner(void);
int DarwinParseModifierList(const char *constmodifiers, int separatelr);
void DarwinAdjustScreenOrigins(ScreenInfo *pScreenInfo);
d48 2
a49 1
    dixLookupPrivate(&pScreen->devPrivates, darwinScreenKey))
d56 9
a64 9
extern int              darwinScreensFound;
extern io_connect_t     darwinParamConnect;
extern int              darwinEventReadFD;
extern int              darwinEventWriteFD;
extern DeviceIntPtr     darwinPointer;
extern DeviceIntPtr     darwinTabletCursor;
extern DeviceIntPtr     darwinTabletStylus;
extern DeviceIntPtr     darwinTabletEraser;
extern DeviceIntPtr     darwinKeyboard;
d67 8
a74 8
extern int              darwinMouseAccelChange;
extern int              darwinFakeButtons;
extern int              darwinFakeMouse2Mask;
extern int              darwinFakeMouse3Mask;
extern unsigned int     darwinAppKitModMask;
extern unsigned int     windowItemModMask;
extern int              darwinSyncKeymap;
extern int              darwinDesiredDepth;
d77 2
a78 2
extern int              darwinMainScreenX;
extern int              darwinMainScreenY;
d83 15
a97 6
_X_ATTRIBUTE_PRINTF(6,7)
extern void xq_asl_log (int level, const char *subsystem, const char *file, const char *function, int line, const char *fmt, ...);

#define ASL_LOG(level, subsystem, msg, args...) xq_asl_log(level, subsystem, __FILE__, __FUNCTION__, __LINE__, msg, ##args)
#define DEBUG_LOG(msg, args...) ASL_LOG(ASL_LEVEL_DEBUG, "XQuartz", msg, ##args)
#define TRACE() DEBUG_LOG("TRACE")
@


1.4
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d35 1
a35 3
#include <assert.h>

#include "threadSafety.h"
a42 1
void xf86SetRootClip (ScreenPtr pScreen, int enable);
a56 1
extern DeviceIntPtr     darwinTabletCurrent;
d76 2
a77 1
#define ENABLE_DEBUG_LOG 1
d79 2
a80 7
#ifdef ENABLE_DEBUG_LOG
extern FILE *debug_log_fp;
#define DEBUG_LOG_NAME "x11-debug.txt"
#define DEBUG_LOG(msg, args...) if (debug_log_fp) fprintf(debug_log_fp, "%s:%s:%s:%d " msg, threadSafetyID(pthread_self()), __FILE__, __FUNCTION__, __LINE__, ##args ); fflush(debug_log_fp);
#else
#define DEBUG_LOG(msg, args...) 
#endif
d82 3
a84 1
#define TRACE() DEBUG_LOG("\n")
@


1.3
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d53 2
a54 1
extern DevPrivateKey    darwinScreenKey; // index into pScreen.devPrivates
@


1.2
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d39 1
a39 16
typedef struct {
    void                *framebuffer;
    int                 x;
    int                 y;
    int                 width;
    int                 height;
    int                 pitch;
    int                 depth;
    int                 visuals;
    int                 bitsPerRGB;
    int                 bitsPerPixel;
    int                 preferredCVC;
    Pixel               redMask;
    Pixel               greenMask;
    Pixel               blueMask;
} DarwinFramebufferRec, *DarwinFramebufferPtr;
a72 1
extern unsigned int     darwinDesiredWidth, darwinDesiredHeight;
a73 1
extern int              darwinDesiredRefresh;
@


1.1
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d2 1
d37 2
d58 1
a58 1
int DarwinParseModifierList(const char *constmodifiers);
d60 1
a60 1
void xf86SetRootClip (ScreenPtr pScreen, BOOL enable);
d74 4
d85 2
a86 1
extern char            *darwinKeymapFile;
a95 34

/*
 * Special ddx events understood by the X server
 */
enum {
    kXDarwinUpdateModifiers   // update all modifier keys
            = LASTEvent+1,    // (from X.h list of event names)
    kXDarwinUpdateButtons,    // update state of mouse buttons 2 and up
    kXDarwinScrollWheel,      // scroll wheel event
    /*
     * Quartz-specific events -- not used in IOKit mode
     */
    kXDarwinActivate,         // restore X drawing and cursor
    kXDarwinDeactivate,       // clip X drawing and switch to Aqua cursor
    kXDarwinSetRootClip,      // enable or disable drawing to the X screen
    kXDarwinQuit,             // kill the X server and release the display
    kXDarwinReadPasteboard,   // copy Mac OS X pasteboard into X cut buffer
    kXDarwinWritePasteboard,  // copy X cut buffer onto Mac OS X pasteboard
    kXDarwinBringAllToFront,  // bring all X windows to front
    kXDarwinToggleFullscreen, // Enable/Disable fullscreen mode
    kXDarwinSetRootless,      // Set rootless mode
    /*
     * AppleWM events
     */
    kXDarwinControllerNotify, // send an AppleWMControllerNotify event
    kXDarwinPasteboardNotify, // notify the WM to copy or paste
    /*
     * Xplugin notification events
     */
    kXDarwinDisplayChanged,   // display configuration has changed
    kXDarwinWindowState,      // window visibility state has changed
    kXDarwinWindowMoved       // window has moved on screen
};

d101 1
a101 1
#define DEBUG_LOG(msg, args...) if (debug_log_fp) fprintf(debug_log_fp, "%s:%s:%d " msg, __FILE__, __FUNCTION__, __LINE__, ##args ); fflush(debug_log_fp);
d105 2
@

