head	1.8;
access;
symbols
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.16
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.14
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.12
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.10
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.6
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.4
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2016.05.29.12.02.39;	author matthieu;	state Exp;
branches;
next	1.7;
commitid	s0SI41sEunLdyFfd;

1.7
date	2012.06.10.13.21.28;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.05.13.32.53;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.02.16.08.39;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.12.05.15.36.08;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.27.19.02.35;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.06.19.44.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.02.15.26.29;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to xserver 1.18.3. Tested by shadchin@@ and naddy@@.

Note that indirect GLX is now disbled by default.
@
text
@/*
 * quartz.h
 *
 * External interface of the Quartz display modes seen by the generic, mode
 * independent parts of the Darwin X server.
 *
 * Copyright (c) 2002-2012 Apple Inc. All rights reserved.
 * Copyright (c) 2001-2003 Greg Parker and Torrey T. Lyons.
 *                 All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name(s) of the above copyright
 * holders shall not be used in advertising or otherwise to promote the sale,
 * use or other dealings in this Software without prior written authorization.
 */

#ifndef _QUARTZ_H
#define _QUARTZ_H

#include "screenint.h"
#include "window.h"
#include "pixmap.h"

/*------------------------------------------
   Quartz display mode function types
   ------------------------------------------*/

/*
 * Display mode initialization
 */
typedef void (*DisplayInitProc)(void);
typedef Bool (*AddScreenProc)(int index, ScreenPtr pScreen);
typedef Bool (*SetupScreenProc)(int index, ScreenPtr pScreen);
typedef void (*InitInputProc)(int argc, char **argv);

/*
 * Cursor functions
 */
typedef Bool (*InitCursorProc)(ScreenPtr pScreen);

/*
 * Suspend and resume X11 activity
 */
typedef void (*SuspendScreenProc)(ScreenPtr pScreen);
typedef void (*ResumeScreenProc)(ScreenPtr pScreen);

/*
 * Screen state change support
 */
typedef void (*AddPseudoramiXScreensProc)
    (int *x, int *y, int *width, int *height, ScreenPtr pScreen);
typedef void (*UpdateScreenProc)(ScreenPtr pScreen);

/*
 * Rootless helper functions
 */
typedef Bool (*IsX11WindowProc)(int windowNumber);
typedef void (*HideWindowsProc)(Bool hide);

/*
 * Rootless functions for optional export to GLX layer
 */
typedef void * (*FrameForWindowProc)(WindowPtr pWin, Bool create);
typedef WindowPtr (*TopLevelParentProc)(WindowPtr pWindow);
typedef Bool (*CreateSurfaceProc)
    (ScreenPtr pScreen, Drawable id, DrawablePtr pDrawable,
    unsigned int client_id, unsigned int *surface_id,
    unsigned int key[2], void (*notify)(void *arg, void *data),
    void *notify_data);
typedef Bool (*DestroySurfaceProc)
    (ScreenPtr pScreen, Drawable id, DrawablePtr pDrawable,
    void (*notify)(void *arg, void *data), void *notify_data);

/*
 * Quartz display mode function list
 */
typedef struct _QuartzModeProcs {
    DisplayInitProc DisplayInit;
    AddScreenProc AddScreen;
    SetupScreenProc SetupScreen;
    InitInputProc InitInput;

    InitCursorProc InitCursor;

    SuspendScreenProc SuspendScreen;
    ResumeScreenProc ResumeScreen;

    AddPseudoramiXScreensProc AddPseudoramiXScreens;
    UpdateScreenProc UpdateScreen;

    IsX11WindowProc IsX11Window;
    HideWindowsProc HideWindows;

    FrameForWindowProc FrameForWindow;
    TopLevelParentProc TopLevelParent;
    CreateSurfaceProc CreateSurface;
    DestroySurfaceProc DestroySurface;
} QuartzModeProcsRec, *QuartzModeProcsPtr;

extern QuartzModeProcsPtr quartzProcs;

extern Bool XQuartzFullscreenVisible; /* Are the windows visible (predicated on !rootless) */
extern Bool XQuartzServerVisible;     /* Is the server visible ... TODO: Refactor to "active" */
extern Bool XQuartzEnableKeyEquivalents;
extern Bool XQuartzRootlessDefault;  /* Is our default mode rootless? */
extern Bool XQuartzIsRootless;       /* Is our current mode rootless (or FS)? */
extern Bool XQuartzFullscreenMenu;   /* Show the menu bar (autohide) while in FS */
extern Bool XQuartzFullscreenDisableHotkeys;
extern Bool XQuartzOptionSendsAlt;   /* Alt or Mode_switch? */

extern int32_t XQuartzShieldingWindowLevel; /* CGShieldingWindowLevel() or 0 */

Bool
QuartzAddScreen(int index, ScreenPtr pScreen);
Bool
QuartzSetupScreen(int index, ScreenPtr pScreen);
void
QuartzInitOutput(int argc, char **argv);
void
QuartzInitInput(int argc, char **argv);
void
QuartzInitServer(int argc, char **argv, char **envp);
void
QuartzGiveUp(void);
void
QuartzProcessEvent(xEvent *xe);
void
QuartzUpdateScreens(void);

void
QuartzShow(void);
void
QuartzHide(void);
void
QuartzSetRootClip(int mode);
void
QuartzSpaceChanged(uint32_t space_id);

void
QuartzSetRootless(Bool state);
void
QuartzShowFullscreen(Bool state);

int
server_main(int argc, char **argv, char **envp);
#endif
@


1.7
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d152 1
a152 1
QuartzSetRootClip(BOOL enable);
@


1.6
log
@Update to xserver 1.11.2
@
text
@d7 1
d43 1
a43 1
  ------------------------------------------*/
d84 3
a86 3
     unsigned int client_id, unsigned int *surface_id,
     unsigned int key[2], void (*notify) (void *arg, void *data),
     void *notify_data);
d89 1
a89 1
     void (*notify) (void *arg, void *data), void *notify_data);
d130 30
a159 13
Bool QuartzAddScreen(int index, ScreenPtr pScreen);
Bool QuartzSetupScreen(int index, ScreenPtr pScreen);
void QuartzInitOutput(int argc,char **argv);
void QuartzInitInput(int argc, char **argv);
void QuartzInitServer(int argc, char **argv, char **envp);
void QuartzGiveUp(void);
void QuartzProcessEvent(xEvent *xe);
void QuartzUpdateScreens(void);

void QuartzShow(void);
void QuartzHide(void);
void QuartzSetRootClip(BOOL enable);
void QuartzSpaceChanged(uint32_t space_id);
d161 2
a162 4
void QuartzSetRootless(Bool state);
void QuartzShowFullscreen(Bool state);

int server_main(int argc, char **argv, char **envp);
@


1.5
log
@Update to xserver 1.9.5. Tested by jasper@@, ajacoutot@@ and krw@@
@
text
@d73 1
a73 1
typedef Bool (*IsX11WindowProc)(void *nsWindow, int windowNumber);
@


1.4
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d126 2
a127 1
extern Bool XQuartzUseSysBeep;       /* Sys beep or our own? */
@


1.3
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d38 1
d66 2
a67 1
typedef void (*AddPseudoramiXScreensProc)(int *x, int *y, int *width, int *height);
d117 10
a126 1
extern int quartzHasRoot, quartzEnableRootless;
a141 1
void QuartzSetFullscreen(Bool state);
d143 1
@


1.2
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@a35 2
#include "quartzPasteboard.h"

d60 1
a60 1
typedef void (*ResumeScreenProc)(ScreenPtr pScreen, int x, int y);
d124 1
a124 1
void QuartzDisplayChangedHandler(int screenNum, xEventPtr xe, DeviceIntPtr dev, int nevents);
d126 1
a126 1
void QuartzShow(int x, int y); // (x, y) = cursor loc
d133 2
@


1.1
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@a56 1
typedef void (*CursorUpdateProc)(void);
a62 2
typedef void (*CaptureScreensProc)(void);
typedef void (*ReleaseScreensProc)(void);
a66 1
typedef void (*ScreenChangedProc)(void);
a99 1
    CursorUpdateProc CursorUpdate;	// Not used if NULL
a102 2
    CaptureScreensProc CaptureScreens;	// Only called in fullscreen
    ReleaseScreensProc ReleaseScreens;	// Only called in fullscreen
a103 1
    ScreenChangedProc ScreenChanged;
d123 1
d126 1
d128 7
@

