head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.8
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.10
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.3.0.4
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.2
	v1_4_0_90:1.1.1.3
	v1_4:1.1.1.3
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v1_2_0:1.1.1.2
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.09.16.19.10.21;	author matthieu;	state Exp;
branches;
next	1.6;
commitid	Te1daavkBLskZ8gc;

1.6
date	2014.09.27.17.53.00;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	cVXoV5PxI8YrEaVA;

1.5
date	2012.06.10.13.21.22;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.05.13.32.49;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.12.05.15.36.04;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.16;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.22.47;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.22.47;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.03.11.11.02;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2007.11.24.18.02.23;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@/*
 * Copyright 2001-2004 Red Hat Inc., Durham, North Carolina.
 *
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation on the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON-INFRINGEMENT.  IN NO EVENT SHALL RED HAT AND/OR THEIR SUPPLIERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Authors:
 *   Kevin E. Martin <kem@@redhat.com>
 *
 */

/** \file
 *  This file provides access to the externally visible RENDER support
 *  functions, global variables and macros for DMX.
 *
 *  FIXME: Move function definitions for non-externally visible function
 *  to .c file. */

#ifndef DMXPICT_H
#define DMXPICT_H

/** Picture private structure */
typedef struct _dmxPictPriv {
    Picture pict;               /**< Picture ID from back-end server */
    Mask savedMask;             /**< Mask of picture attributes saved for
				 *   lazy window creation. */
} dmxPictPrivRec, *dmxPictPrivPtr;

/** Glyph Set private structure */
typedef struct _dmxGlyphPriv {
    GlyphSet *glyphSets;  /**< Glyph Set IDs from back-end server */
} dmxGlyphPrivRec, *dmxGlyphPrivPtr;

extern void dmxInitRender(void);
extern void dmxResetRender(void);

extern Bool dmxPictureInit(ScreenPtr pScreen,
                           PictFormatPtr formats, int nformats);

extern void dmxCreatePictureList(WindowPtr pWindow);
extern Bool dmxDestroyPictureList(WindowPtr pWindow);

extern int dmxCreatePicture(PicturePtr pPicture);
extern void dmxDestroyPicture(PicturePtr pPicture);
extern int dmxChangePictureClip(PicturePtr pPicture, int clipType,
                                void *value, int n);
extern void dmxDestroyPictureClip(PicturePtr pPicture);
extern void dmxChangePicture(PicturePtr pPicture, Mask mask);
extern void dmxValidatePicture(PicturePtr pPicture, Mask mask);
extern void dmxComposite(CARD8 op,
                         PicturePtr pSrc, PicturePtr pMask, PicturePtr pDst,
                         INT16 xSrc, INT16 ySrc,
                         INT16 xMask, INT16 yMask,
                         INT16 xDst, INT16 yDst, CARD16 width, CARD16 height);
extern void dmxGlyphs(CARD8 op,
                      PicturePtr pSrc, PicturePtr pDst,
                      PictFormatPtr maskFormat,
                      INT16 xSrc, INT16 ySrc,
                      int nlists, GlyphListPtr lists, GlyphPtr * glyphs);
extern void dmxCompositeRects(CARD8 op,
                              PicturePtr pDst,
                              xRenderColor * color,
                              int nRect, xRectangle *rects);
extern Bool dmxInitIndexed(ScreenPtr pScreen, PictFormatPtr pFormat);
extern void dmxCloseIndexed(ScreenPtr pScreen, PictFormatPtr pFormat);
extern void dmxUpdateIndexed(ScreenPtr pScreen, PictFormatPtr pFormat,
                             int ndef, xColorItem * pdef);
extern void dmxTrapezoids(CARD8 op,
                          PicturePtr pSrc, PicturePtr pDst,
                          PictFormatPtr maskFormat,
                          INT16 xSrc, INT16 ySrc,
                          int ntrap, xTrapezoid * traps);
extern void dmxTriangles(CARD8 op,
                         PicturePtr pSrc, PicturePtr pDst,
                         PictFormatPtr maskFormat,
                         INT16 xSrc, INT16 ySrc, int ntri, xTriangle * tris);

extern int dmxBECreateGlyphSet(int idx, GlyphSetPtr glyphSet);
extern Bool dmxBEFreeGlyphSet(ScreenPtr pScreen, GlyphSetPtr glyphSet);
extern int dmxBECreatePicture(PicturePtr pPicture);
extern Bool dmxBEFreePicture(PicturePtr pPicture);

/** Get the picture private data given a picture pointer */
#define DMX_GET_PICT_PRIV(_pPict)					\
    (dmxPictPrivPtr)dixLookupPrivate(&(_pPict)->devPrivates, dmxPictPrivateKey)

/** Set the glyphset private data given a glyphset pointer */
#define DMX_SET_GLYPH_PRIV(_pGlyph, _pPriv)				\
    GlyphSetSetPrivate((_pGlyph), dmxGlyphSetPrivateKey, (_pPriv))
/** Get the glyphset private data given a glyphset pointer */
#define DMX_GET_GLYPH_PRIV(_pGlyph)					\
    (dmxGlyphPrivPtr)GlyphSetGetPrivate((_pGlyph), dmxGlyphSetPrivateKey)

#endif                          /* DMXPICT_H */
@


1.6
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d37 1
a37 1
 *  
@


1.5
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d68 1
a68 1
                                pointer value, int n);
@


1.4
log
@Update to xserver 1.11.2
@
text
@d46 2
a47 2
    Picture  pict;		/**< Picture ID from back-end server */
    Mask     savedMask;         /**< Mask of picture attributes saved for
a50 1

d53 1
a53 1
    GlyphSet  *glyphSets; /**< Glyph Set IDs from back-end server */
a55 1

d60 1
a60 1
			   PictFormatPtr formats, int nformats);
d68 1
a68 1
				pointer value, int n);
d73 4
a76 5
			 PicturePtr pSrc, PicturePtr pMask, PicturePtr pDst,
			 INT16 xSrc, INT16 ySrc,
			 INT16 xMask, INT16 yMask,
			 INT16 xDst, INT16 yDst,
			 CARD16 width, CARD16 height);
d78 4
a81 4
		      PicturePtr pSrc, PicturePtr pDst,
		      PictFormatPtr maskFormat,
		      INT16 xSrc, INT16 ySrc,
		      int nlists, GlyphListPtr lists, GlyphPtr *glyphs);
d83 3
a85 3
			      PicturePtr pDst,
			      xRenderColor *color,
			      int nRect, xRectangle *rects);
d89 1
a89 1
			     int ndef, xColorItem *pdef);
d91 4
a94 4
			  PicturePtr pSrc, PicturePtr pDst,
			  PictFormatPtr maskFormat,
			  INT16 xSrc, INT16 ySrc,
			  int ntrap, xTrapezoid *traps);
d96 3
a98 4
			 PicturePtr pSrc, PicturePtr pDst,
			 PictFormatPtr maskFormat,
			 INT16 xSrc, INT16 ySrc,
			 int ntri, xTriangle *tris);
d116 1
a116 1
#endif /* DMXPICT_H */
@


1.3
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@a102 10
extern void dmxTriStrip(CARD8 op,
			PicturePtr pSrc, PicturePtr pDst,
			PictFormatPtr maskFormat,
			INT16 xSrc, INT16 ySrc,
			int npoint, xPointFixed *points);
extern void dmxTriFan(CARD8 op,
		      PicturePtr pSrc, PicturePtr pDst,
		      PictFormatPtr maskFormat,
		      INT16 xSrc, INT16 ySrc,
		      int npoint, xPointFixed *points);
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@a118 4
extern DevPrivateKey dmxPictPrivateKey;	/**< Index for picture private data */
extern DevPrivateKey dmxGlyphSetPrivateKey; /**< Index for glyphset private data */


@


1.1
log
@Initial revision
@
text
@a0 1
/* $XFree86$ */
d114 1
d116 1
d119 2
a120 2
extern int dmxPictPrivateIndex;		/**< Index for picture private data */
extern int dmxGlyphSetPrivateIndex;	/**< Index for glyphset private data */
d125 1
a125 1
    (dmxPictPrivPtr)(_pPict)->devPrivates[dmxPictPrivateIndex].ptr
d129 1
a129 1
    GlyphSetSetPrivate((_pGlyph), dmxGlyphSetPrivateIndex, (_pPriv))
d132 1
a132 1
    (dmxGlyphPrivPtr)GlyphSetGetPrivate((_pGlyph), dmxGlyphSetPrivateIndex)
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@Import xserver version 1.2.0 (X.Org 7.2 final).
@
text
@a114 1
extern int dmxBECreateGlyphSet(int idx, GlyphSetPtr glyphSet);
a115 1
extern int dmxBECreatePicture(PicturePtr pPicture);
@


1.1.1.3
log
@xserver 1.4
@
text
@d1 1
@


