head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.6
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.18
	OPENBSD_5_0:1.1.1.2.0.16
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.12
	OPENBSD_4_9_BASE:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.14
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.09.16.19.10.21;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	Te1daavkBLskZ8gc;

1.4
date	2014.09.27.17.53.00;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	cVXoV5PxI8YrEaVA;

1.3
date	2013.06.07.17.28.48;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.10.13.21.22;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.23.30;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.23.30;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.02.42;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@/*
 * Copyright 1987, 1998  The Open Group
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name of The Open Group shall not be
 * used in advertising or otherwise to promote the sale, use or other dealings
 * in this Software without prior written authorization from The Open Group.
 */

/*
 * Copyright 2002 Red Hat Inc., Durham, North Carolina.
 *
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation on the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON-INFRINGEMENT.  IN NO EVENT SHALL RED HAT AND/OR THEIR SUPPLIERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Authors:
 *   Rickard E. (Rik) Faith <faith@@redhat.com>
 *
 * This file was originally taken from xc/lib/Xaw/Template.c
 */

#include <X11/IntrinsicP.h>
#include <X11/StringDefs.h>
#include "CanvasP.h"

static void
CanvasInitialize(Widget request, Widget w, ArgList args, Cardinal * num_args)
{
}

static void
CanvasExpose(Widget w, XEvent * event, Region region)
{
    CanvasExposeDataRec data;

    data.w = w;
    data.event = event;
    data.region = region;

    if (!XtIsRealized(w))
        return;
    XtCallCallbacks(w, XtNcanvasExposeCallback, (XtPointer) &data);
}

static void
CanvasResize(Widget w)
{
    if (!XtIsRealized(w))
        return;
    XtCallCallbacks(w, XtNcanvasResizeCallback, (XtPointer) w);
}

static void
CanvasAction(Widget w, XEvent * event, String * params, Cardinal * num_params)
{
    XtCallCallbacks(w, XtNcallback, (XtPointer) event);
}

#define offset(field) XtOffsetOf(CanvasRec, canvas.field)
static XtResource resources[] = {
    {XtNcallback, XtCCallback, XtRCallback,
     sizeof(XtCallbackList), offset(input_callback), XtRCallback, NULL}
    ,
    {(char *) XtNcanvasExposeCallback, (char *) XtCcanvasExposeCallback, XtRCallback,
     sizeof(XtCallbackList), offset(expose_callback), XtRCallback, NULL}
    ,
    {(char *) XtNcanvasResizeCallback, (char *) XtCcanvasResizeCallback, XtRCallback,
     sizeof(XtCallbackList), offset(resize_callback), XtRCallback, NULL}
    ,
};

#undef offset

static XtActionsRec actions[] = {
    {(char *) "canvas", CanvasAction},
};

static char translations[] = "<Key>:    canvas()\n\
<Motion>:  canvas()\n\
<BtnDown>: canvas()\n\
<BtnUp>: canvas()\n\
";

#define Superclass	(&widgetClassRec)
CanvasClassRec canvasClassRec = {
    /* core */
    {
     (WidgetClass) Superclass,  /* superclass */
     (char *) "Canvas",         /* class_name */
     sizeof(CanvasRec),         /* widget_size */
     NULL,                      /* class_initialize */
     NULL,                      /* class_part_initialize */
     False,                     /* class_inited */
     CanvasInitialize,          /* initialize */
     NULL,                      /* initialize_hook */
     XtInheritRealize,          /* realize */
     actions,                   /* actions */
     XtNumber(actions),         /* num_actions */
     resources,                 /* resources */
     XtNumber(resources),       /* num_resources */
     NULLQUARK,                 /* xrm_class */
     True,                      /* compress_motion */
     True,                      /* compress_exposure */
     True,                      /* compress_enterleave */
     False,                     /* visible_interest */
     NULL,                      /* destroy */
     CanvasResize,              /* resize */
     CanvasExpose,              /* expose */
     NULL,                      /* set_values */
     NULL,                      /* set_values_hook */
     XtInheritSetValuesAlmost,  /* set_values_almost */
     NULL,                      /* get_values_hook */
     NULL,                      /* accept_focus */
     XtVersion,                 /* version */
     NULL,                      /* callback_private */
     translations,              /* tm_table */
     XtInheritQueryGeometry,    /* query_geometry */
     XtInheritDisplayAccelerator,       /* display_accelerator */
     NULL,                      /* extension */
     }
    ,
    /* canvas */
    {
     NULL,                      /* extension */
     }
};

WidgetClass canvasWidgetClass = (WidgetClass) &canvasClassRec;
@


1.4
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d12 1
a12 1
 * 
@


1.3
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d101 1
a101 1
    {XtNcanvasExposeCallback, XtCcanvasExposeCallback, XtRCallback,
d104 1
a104 1
    {XtNcanvasResizeCallback, XtCcanvasResizeCallback, XtRCallback,
d112 1
a112 1
    {"canvas", CanvasAction},
d126 1
a126 1
     "Canvas",                  /* class_name */
@


1.2
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d79 1
a79 1
    XtCallCallbacks(w, XtNcanvasExposeCallback, (XtPointer) & data);
d165 1
a165 1
WidgetClass canvasWidgetClass = (WidgetClass) & canvasClassRec;
@


1.1
log
@Initial revision
@
text
@a0 1
/* $XFree86$ */
d63 2
a64 2
static void CanvasInitialize(Widget request, Widget w,
                             ArgList args, Cardinal *num_args)
d68 2
a69 1
static void CanvasExpose(Widget w, XEvent *event, Region region)
d73 2
a74 2
    data.w      = w;
    data.event  = event;
d76 4
a79 3
    
    if (!XtIsRealized(w)) return;
    XtCallCallbacks(w, XtNcanvasExposeCallback, (XtPointer)&data);
d82 2
a83 1
static void CanvasResize(Widget w)
d85 3
a87 2
    if (!XtIsRealized(w)) return;
    XtCallCallbacks(w, XtNcanvasResizeCallback, (XtPointer)w);
d90 2
a91 2
static void CanvasAction(Widget w, XEvent *event,
                         String *params, Cardinal *num_params)
d93 1
a93 1
    XtCallCallbacks(w, XtNcallback, (XtPointer)event);
d98 9
a106 6
    { XtNcallback, XtCCallback, XtRCallback,
      sizeof(XtCallbackList), offset(input_callback), XtRCallback, NULL },
    { XtNcanvasExposeCallback, XtCcanvasExposeCallback, XtRCallback,
      sizeof(XtCallbackList), offset(expose_callback), XtRCallback, NULL },
    { XtNcanvasResizeCallback, XtCcanvasResizeCallback, XtRCallback,
      sizeof(XtCallbackList), offset(resize_callback), XtRCallback, NULL },
d108 1
d111 2
a112 3
static XtActionsRec actions[] =
{
    {"canvas",	CanvasAction},
d115 1
a115 2
static char translations[] =
"<Key>:    canvas()\n\
d119 1
a119 2
"
;
d125 34
a158 33
        (WidgetClass)Superclass,        /* superclass */
        "Canvas",			/* class_name */
        sizeof(CanvasRec),		/* widget_size */
        NULL,				/* class_initialize */
        NULL,				/* class_part_initialize */
        False,				/* class_inited */
        CanvasInitialize,		/* initialize */
        NULL,				/* initialize_hook */
        XtInheritRealize,		/* realize */
        actions,			/* actions */
        XtNumber(actions),		/* num_actions */
        resources,			/* resources */
        XtNumber(resources),		/* num_resources */
        NULLQUARK,			/* xrm_class */
        True,				/* compress_motion */
        True,				/* compress_exposure */
        True,				/* compress_enterleave */
        False,				/* visible_interest */
        NULL,				/* destroy */
        CanvasResize,			/* resize */
        CanvasExpose,                   /* expose */
        NULL,				/* set_values */
        NULL,				/* set_values_hook */
        XtInheritSetValuesAlmost,	/* set_values_almost */
        NULL,				/* get_values_hook */
        NULL,				/* accept_focus */
        XtVersion,			/* version */
        NULL,				/* callback_private */
        translations,			/* tm_table */
        XtInheritQueryGeometry,		/* query_geometry */
        XtInheritDisplayAccelerator,	/* display_accelerator */
        NULL,				/* extension */
    },
d161 2
a162 2
        NULL,				/* extension */
    }
d165 1
a165 1
WidgetClass canvasWidgetClass = (WidgetClass)&canvasClassRec;
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d1 1
@

