head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.18
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.16
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.06.10.13.21.22;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.06.19.44.22;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.22.40;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.22.40;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.02.22;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@/*
 * Copyright 2001 Red Hat Inc., Durham, North Carolina.
 *
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation on the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON-INFRINGEMENT.  IN NO EVENT SHALL RED HAT AND/OR THEIR SUPPLIERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Authors:
 *   Rickard E. (Rik) Faith <faith@@redhat.com>
 *
 */

/** \file
 * This header is included by all files that need to use the DMX logging
 * facilities. */

#ifndef _DMXLOG_H_
#define _DMXLOG_H_

/** Logging levels -- output is tunable with #dmxSetLogLevel. */
typedef enum {
    dmxDebug,                   /**< Usually verbose debugging info */
    dmxInfo,                    /**< Non-warning information */
    dmxWarning,                 /**< A warning that may indicate DMX
                                 * will not function as the user
                                 * intends. */
    dmxError,                   /**< A non-fatal error that probably
                                 * indicates DMX will not function as
                                 * desired.*/
    dmxFatal                    /**< A fatal error that will cause DMX
                                 * to shut down. */
} dmxLogLevel;

/* Logging functions used by Xserver/hw/dmx routines. */
extern dmxLogLevel dmxSetLogLevel(dmxLogLevel newLevel);
extern dmxLogLevel dmxGetLogLevel(void);
extern void dmxLog(dmxLogLevel logLevel, const char *format,
                             ...) _X_ATTRIBUTE_PRINTF(2, 3);
extern void dmxLogCont(dmxLogLevel logLevel, const char *format,
                             ...) _X_ATTRIBUTE_PRINTF(2, 3);
extern const char *dmxEventName(int type);

#ifndef DMX_LOG_STANDALONE
extern void dmxLogOutput(DMXScreenInfo * dmxScreen, const char *format,
                             ...) _X_ATTRIBUTE_PRINTF(2, 3);
extern void dmxLogOutputCont(DMXScreenInfo * dmxScreen, const char *format,
                             ...) _X_ATTRIBUTE_PRINTF(2, 3);
extern void dmxLogOutputWarning(DMXScreenInfo * dmxScreen, const char *format,
                             ...) _X_ATTRIBUTE_PRINTF(2, 3);
extern void dmxLogInput(DMXInputInfo * dmxInput, const char *format,
                             ...) _X_ATTRIBUTE_PRINTF(2, 3);
extern void dmxLogInputCont(DMXInputInfo * dmxInput, const char *format,
                             ...) _X_ATTRIBUTE_PRINTF(2, 3);
extern void dmxLogArgs(dmxLogLevel logLevel, int argc, char **argv);
extern void dmxLogVisual(DMXScreenInfo * dmxScreen, XVisualInfo * vi,
                         int defaultVisual);
extern const char *dmxXInputEventName(int type);
#endif

#endif
@


1.2
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d58 5
a62 3
extern void        dmxLog(dmxLogLevel logLevel, const char *format, ...);
extern void        dmxLogCont(dmxLogLevel logLevel, const char *format, ...);
extern const char  *dmxEventName(int type);
d65 10
a74 7
extern void dmxLogOutput(DMXScreenInfo *dmxScreen, const char *format, ...);
extern void dmxLogOutputCont(DMXScreenInfo *dmxScreen, const char *format,
                             ...);
extern void dmxLogOutputWarning(DMXScreenInfo *dmxScreen, const char *format,
                                ...);
extern void dmxLogInput(DMXInputInfo *dmxInput, const char *format, ...);
extern void dmxLogInputCont(DMXInputInfo *dmxInput, const char *format, ...);
d76 1
a76 1
extern void dmxLogVisual(DMXScreenInfo *dmxScreen, XVisualInfo *vi,
@


1.1
log
@Initial revision
@
text
@a0 1
/* $XFree86$ */
a72 1
#ifdef XINPUT
a73 1
#endif
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d1 1
@

