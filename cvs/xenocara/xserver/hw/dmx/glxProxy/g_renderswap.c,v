head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.20
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.18
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.16
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.14
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.12
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.10
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.6
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.06.10.13.21.22;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.12.18.16.09.00;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.12.05.15.36.04;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.27.19.02.29;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.06.19.44.23;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.23.41;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.23.41;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@/*
 * SGI FREE SOFTWARE LICENSE B (Version 2.0, Sept. 18, 2008)
 * Copyright (C) 1991-2000 Silicon Graphics, Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice including the dates of first publication and
 * either this permission notice or a reference to
 * http://oss.sgi.com/projects/FreeB/
 * shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Except as contained in this notice, the name of Silicon Graphics, Inc.
 * shall not be used in advertising or otherwise to promote the sale, use or
 * other dealings in this Software without prior written authorization from
 * Silicon Graphics, Inc.
 */

#include "glxserver.h"
#include "glxext.h"
#include "g_disptab.h"
#include "unpack.h"
#include "compsize.h"

void
__glXDispSwap_CallList(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_ListBase(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_Begin(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_Color3bv(GLbyte * pc)
{
}

void
__glXDispSwap_Color3dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 24);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Color3fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);
}

void
__glXDispSwap_Color3iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Color3sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Color3ubv(GLbyte * pc)
{
}

void
__glXDispSwap_Color3uiv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 3);
}

void
__glXDispSwap_Color3usv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 3);
}

void
__glXDispSwap_Color4bv(GLbyte * pc)
{
}

void
__glXDispSwap_Color4dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 32);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);
}

void
__glXDispSwap_Color4fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_Color4iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_Color4sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_Color4ubv(GLbyte * pc)
{

}

void
__glXDispSwap_Color4uiv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_Color4usv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_EdgeFlagv(GLbyte * pc)
{
}

void
__glXDispSwap_End(GLbyte * pc)
{
}

void
__glXDispSwap_Indexdv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 8);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_Indexfv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_Indexiv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_Indexsv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_Normal3bv(GLbyte * pc)
{
}

void
__glXDispSwap_Normal3dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 24);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Normal3fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Normal3iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Normal3sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_RasterPos2dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 16);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_RasterPos2fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_RasterPos2iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_RasterPos2sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_RasterPos3dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 24);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_RasterPos3fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_RasterPos3iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_RasterPos3sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_RasterPos4dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 32);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_RasterPos4fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_RasterPos4iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_RasterPos4sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_Rectdv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 32);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);
    __GLX_SWAP_DOUBLE_ARRAY(pc + 16, 2);

}

void
__glXDispSwap_Rectfv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);
    __GLX_SWAP_FLOAT_ARRAY(pc + 8, 2);

}

void
__glXDispSwap_Rectiv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 2);
    __GLX_SWAP_INT_ARRAY(pc + 8, 2);

}

void
__glXDispSwap_Rectsv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 2);
    __GLX_SWAP_SHORT_ARRAY(pc + 4, 2);

}

void
__glXDispSwap_TexCoord1dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 8);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_TexCoord1fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_TexCoord1iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_TexCoord1sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_TexCoord2dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 16);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_TexCoord2fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_TexCoord2iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_TexCoord2sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_TexCoord3dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 24);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_TexCoord3fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_TexCoord3iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_TexCoord3sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_TexCoord4dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 32);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_TexCoord4fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_TexCoord4iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_TexCoord4sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_Vertex2dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 16);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_Vertex2fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_Vertex2iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_Vertex2sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_Vertex3dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 24);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Vertex3fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Vertex3iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Vertex3sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_Vertex4dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 32);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_Vertex4fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_Vertex4iv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_Vertex4sv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_SHORT_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_ClipPlane(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 36);
        pc -= 4;
    }
#endif
    __GLX_SWAP_INT(pc + 32);
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_ColorMaterial(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_CullFace(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_Fogf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);

}

void
__glXDispSwap_Fogfv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    pname = *(GLenum *) (pc + 0);
    compsize = __glFogfv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_FLOAT_ARRAY(pc + 4, compsize);

}

void
__glXDispSwap_Fogi(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_Fogiv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    pname = *(GLenum *) (pc + 0);
    compsize = __glFogiv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT_ARRAY(pc + 4, compsize);

}

void
__glXDispSwap_FrontFace(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_Hint(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_Lightf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);

}

void
__glXDispSwap_Lightfv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glLightfv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_Lighti(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_Lightiv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glLightiv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_LightModelf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);

}

void
__glXDispSwap_LightModelfv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    pname = *(GLenum *) (pc + 0);
    compsize = __glLightModelfv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_FLOAT_ARRAY(pc + 4, compsize);

}

void
__glXDispSwap_LightModeli(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_LightModeliv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    pname = *(GLenum *) (pc + 0);
    compsize = __glLightModeliv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT_ARRAY(pc + 4, compsize);

}

void
__glXDispSwap_LineStipple(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_SHORT(pc + 4);

}

void
__glXDispSwap_LineWidth(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);

}

void
__glXDispSwap_Materialf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);

}

void
__glXDispSwap_Materialfv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glMaterialfv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_Materiali(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_Materialiv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glMaterialiv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_PointSize(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);

}

void
__glXDispSwap_PolygonMode(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_Scissor(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);

}

void
__glXDispSwap_ShadeModel(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_TexParameterf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);

}

void
__glXDispSwap_TexParameterfv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glTexParameterfv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_TexParameteri(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_TexParameteriv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glTexParameteriv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_TexEnvf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);

}

void
__glXDispSwap_TexEnvfv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glTexEnvfv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_TexEnvi(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_TexEnviv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glTexEnviv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_TexGend(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 16);
        pc -= 4;
    }
#endif
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_DOUBLE(pc + 0);

}

void
__glXDispSwap_TexGendv(GLbyte * pc)
{
    GLenum pname;
    GLint cmdlen;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glTexGendv_size(pname);
    if (compsize < 0)
        compsize = 0;
    cmdlen = __GLX_PAD(8 + compsize * 8);

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, cmdlen);
        pc -= 4;
    }
#endif
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_DOUBLE_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_TexGenf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);

}

void
__glXDispSwap_TexGenfv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glTexGenfv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_TexGeni(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_TexGeniv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glTexGeniv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_InitNames(GLbyte * pc)
{
}

void
__glXDispSwap_LoadName(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_PassThrough(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);

}

void
__glXDispSwap_PopName(GLbyte * pc)
{
}

void
__glXDispSwap_PushName(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_DrawBuffer(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_Clear(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_ClearAccum(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);
    __GLX_SWAP_FLOAT(pc + 12);

}

void
__glXDispSwap_ClearIndex(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);

}

void
__glXDispSwap_ClearColor(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);
    __GLX_SWAP_FLOAT(pc + 12);

}

void
__glXDispSwap_ClearStencil(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_ClearDepth(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 8);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE(pc + 0);

}

void
__glXDispSwap_StencilMask(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_ColorMask(GLbyte * pc)
{
}

void
__glXDispSwap_DepthMask(GLbyte * pc)
{
}

void
__glXDispSwap_IndexMask(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_Accum(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);

}

void
__glXDispSwap_Disable(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_Enable(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_PopAttrib(GLbyte * pc)
{
}

void
__glXDispSwap_PushAttrib(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_MapGrid1d(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 20);
        pc -= 4;
    }
#endif
    __GLX_SWAP_INT(pc + 16);
    __GLX_SWAP_DOUBLE(pc + 0);
    __GLX_SWAP_DOUBLE(pc + 8);

}

void
__glXDispSwap_MapGrid1f(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);

}

void
__glXDispSwap_MapGrid2d(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 40);
        pc -= 4;
    }
#endif
    __GLX_SWAP_INT(pc + 32);
    __GLX_SWAP_DOUBLE(pc + 0);
    __GLX_SWAP_DOUBLE(pc + 8);
    __GLX_SWAP_INT(pc + 36);
    __GLX_SWAP_DOUBLE(pc + 16);
    __GLX_SWAP_DOUBLE(pc + 24);

}

void
__glXDispSwap_MapGrid2f(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_FLOAT(pc + 16);
    __GLX_SWAP_FLOAT(pc + 20);

}

void
__glXDispSwap_EvalCoord1dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 8);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_EvalCoord1fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_EvalCoord2dv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 16);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_EvalCoord2fv(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_EvalMesh1(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_EvalPoint1(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_EvalMesh2(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);

}

void
__glXDispSwap_EvalPoint2(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_AlphaFunc(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);

}

void
__glXDispSwap_BlendFunc(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_LogicOp(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_StencilFunc(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_StencilOp(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_DepthFunc(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_PixelZoom(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);

}

void
__glXDispSwap_PixelTransferf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);

}

void
__glXDispSwap_PixelTransferi(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_PixelMapfv(GLbyte * pc)
{
    GLint mapsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    mapsize = *(GLint *) (pc + 4);
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 8, mapsize);

}

void
__glXDispSwap_PixelMapuiv(GLbyte * pc)
{
    GLint mapsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    mapsize = *(GLint *) (pc + 4);
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 8, mapsize);

}

void
__glXDispSwap_PixelMapusv(GLbyte * pc)
{
    GLint mapsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    mapsize = *(GLint *) (pc + 4);
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_SHORT_ARRAY(pc + 8, mapsize);

}

void
__glXDispSwap_ReadBuffer(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_CopyPixels(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);

}

void
__glXDispSwap_DepthRange(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 16);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE(pc + 0);
    __GLX_SWAP_DOUBLE(pc + 8);

}

void
__glXDispSwap_Frustum(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 48);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE(pc + 0);
    __GLX_SWAP_DOUBLE(pc + 8);
    __GLX_SWAP_DOUBLE(pc + 16);
    __GLX_SWAP_DOUBLE(pc + 24);
    __GLX_SWAP_DOUBLE(pc + 32);
    __GLX_SWAP_DOUBLE(pc + 40);

}

void
__glXDispSwap_LoadIdentity(GLbyte * pc)
{
}

void
__glXDispSwap_LoadMatrixf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 16);

}

void
__glXDispSwap_LoadMatrixd(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 128);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 16);

}

void
__glXDispSwap_MatrixMode(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_MultMatrixf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_FLOAT_ARRAY(pc + 0, 16);

}

void
__glXDispSwap_MultMatrixd(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 128);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 16);

}

void
__glXDispSwap_Ortho(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 48);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE(pc + 0);
    __GLX_SWAP_DOUBLE(pc + 8);
    __GLX_SWAP_DOUBLE(pc + 16);
    __GLX_SWAP_DOUBLE(pc + 24);
    __GLX_SWAP_DOUBLE(pc + 32);
    __GLX_SWAP_DOUBLE(pc + 40);

}

void
__glXDispSwap_PopMatrix(GLbyte * pc)
{
}

void
__glXDispSwap_PushMatrix(GLbyte * pc)
{
}

void
__glXDispSwap_Rotated(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 32);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE(pc + 0);
    __GLX_SWAP_DOUBLE(pc + 8);
    __GLX_SWAP_DOUBLE(pc + 16);
    __GLX_SWAP_DOUBLE(pc + 24);

}

void
__glXDispSwap_Rotatef(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);
    __GLX_SWAP_FLOAT(pc + 12);

}

void
__glXDispSwap_Scaled(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 24);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE(pc + 0);
    __GLX_SWAP_DOUBLE(pc + 8);
    __GLX_SWAP_DOUBLE(pc + 16);

}

void
__glXDispSwap_Scalef(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);

}

void
__glXDispSwap_Translated(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 24);
        pc -= 4;
    }
#endif
    __GLX_SWAP_DOUBLE(pc + 0);
    __GLX_SWAP_DOUBLE(pc + 8);
    __GLX_SWAP_DOUBLE(pc + 16);

}

void
__glXDispSwap_Translatef(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);

}

void
__glXDispSwap_Viewport(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);

}

void
__glXDispSwap_PolygonOffset(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);

}

void
__glXDispSwap_CopyTexImage1D(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);
    __GLX_SWAP_INT(pc + 20);
    __GLX_SWAP_INT(pc + 24);

}

void
__glXDispSwap_CopyTexImage2D(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);
    __GLX_SWAP_INT(pc + 20);
    __GLX_SWAP_INT(pc + 24);
    __GLX_SWAP_INT(pc + 28);

}

void
__glXDispSwap_CopyTexSubImage1D(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);
    __GLX_SWAP_INT(pc + 20);

}

void
__glXDispSwap_CopyTexSubImage2D(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);
    __GLX_SWAP_INT(pc + 20);
    __GLX_SWAP_INT(pc + 24);
    __GLX_SWAP_INT(pc + 28);

}

void
__glXDispSwap_BindTexture(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_PrioritizeTextures(GLbyte * pc)
{
    GLsizei n;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    n = *(GLsizei *) (pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 4, n);
    __GLX_SWAP_FLOAT_ARRAY(pc + 4 + n * 4, n);

}

void
__glXDispSwap_Indexubv(GLbyte * pc)
{
}

void
__glXDispSwap_BlendColor(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_FLOAT(pc + 0);
    __GLX_SWAP_FLOAT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);
    __GLX_SWAP_FLOAT(pc + 12);

}

void
__glXDispSwap_BlendEquation(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_ColorTableParameterfv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glColorTableParameterfv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_ColorTableParameteriv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glColorTableParameteriv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_CopyColorTable(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);

}

void
__glXDispSwap_CopyColorSubTable(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);

}

void
__glXDispSwap_ConvolutionParameterf(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_FLOAT(pc + 8);

}

void
__glXDispSwap_ConvolutionParameterfv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glConvolutionParameterfv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_ConvolutionParameteri(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_ConvolutionParameteriv(GLbyte * pc)
{
    GLenum pname;
    GLint compsize;

    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 4);
    pname = *(GLenum *) (pc + 4);
    compsize = __glConvolutionParameteriv_size(pname);
    if (compsize < 0)
        compsize = 0;
    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 8, compsize);

}

void
__glXDispSwap_CopyConvolutionFilter1D(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);

}

void
__glXDispSwap_CopyConvolutionFilter2D(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);
    __GLX_SWAP_INT(pc + 20);

}

void
__glXDispSwap_Histogram(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);

}

void
__glXDispSwap_Minmax(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);

}

void
__glXDispSwap_ResetHistogram(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_ResetMinmax(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_CopyTexSubImage3D(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT(pc + 4);
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_INT(pc + 12);
    __GLX_SWAP_INT(pc + 16);
    __GLX_SWAP_INT(pc + 20);
    __GLX_SWAP_INT(pc + 24);
    __GLX_SWAP_INT(pc + 28);
    __GLX_SWAP_INT(pc + 32);

}

void
__glXDispSwap_ActiveTextureARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;

    __GLX_SWAP_INT(pc + 0);

}

void
__glXDispSwap_MultiTexCoord1dvARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 12);
        pc -= 4;
    }
#endif
    __GLX_SWAP_INT(pc + 8);
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 1);

}

void
__glXDispSwap_MultiTexCoord1fvARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 4, 1);

}

void
__glXDispSwap_MultiTexCoord1ivARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 4, 1);

}

void
__glXDispSwap_MultiTexCoord1svARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_SHORT_ARRAY(pc + 4, 1);

}

void
__glXDispSwap_MultiTexCoord2dvARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 20);
        pc -= 4;
    }
#endif
    __GLX_SWAP_INT(pc + 16);
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);

}

void
__glXDispSwap_MultiTexCoord2fvARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 4, 2);

}

void
__glXDispSwap_MultiTexCoord2ivARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 4, 2);

}

void
__glXDispSwap_MultiTexCoord2svARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_SHORT_ARRAY(pc + 4, 2);

}

void
__glXDispSwap_MultiTexCoord3dvARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 28);
        pc -= 4;
    }
#endif
    __GLX_SWAP_INT(pc + 24);
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);

}

void
__glXDispSwap_MultiTexCoord3fvARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 4, 3);

}

void
__glXDispSwap_MultiTexCoord3ivARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 4, 3);

}

void
__glXDispSwap_MultiTexCoord3svARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_SHORT_ARRAY(pc + 4, 3);

}

void
__glXDispSwap_MultiTexCoord4dvARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

#ifdef __GLX_ALIGN64
    if ((unsigned long) (pc) & 7) {
        __GLX_MEM_COPY(pc - 4, pc, 36);
        pc -= 4;
    }
#endif
    __GLX_SWAP_INT(pc + 32);
    __GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);

}

void
__glXDispSwap_MultiTexCoord4fvARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_FLOAT_ARRAY(pc + 4, 4);

}

void
__glXDispSwap_MultiTexCoord4ivARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_INT_ARRAY(pc + 4, 4);

}

void
__glXDispSwap_MultiTexCoord4svARB(GLbyte * pc)
{
    __GLX_DECLARE_SWAP_VARIABLES;
    __GLX_DECLARE_SWAP_ARRAY_VARIABLES;

    __GLX_SWAP_INT(pc + 0);
    __GLX_SWAP_SHORT_ARRAY(pc + 4, 4);

}
@


1.5
log
@Bugfix Update to xserver 1.11.3
@
text
@d37 2
a38 1
void __glXDispSwap_CallList(GLbyte *pc)
d40 1
a40 1
	__GLX_DECLARE_SWAP_VARIABLES;
d42 1
a42 1
	__GLX_SWAP_INT(pc + 0);
d46 2
a47 1
void __glXDispSwap_ListBase(GLbyte *pc)
d49 1
a49 1
	__GLX_DECLARE_SWAP_VARIABLES;
d51 1
a51 1
	__GLX_SWAP_INT(pc + 0);
d55 2
a56 1
void __glXDispSwap_Begin(GLbyte *pc)
d58 1
a58 1
	__GLX_DECLARE_SWAP_VARIABLES;
d60 1
a60 1
	__GLX_SWAP_INT(pc + 0);
d64 2
a65 1
void __glXDispSwap_Color3bv(GLbyte *pc)
d69 2
a70 1
void __glXDispSwap_Color3dv(GLbyte *pc)
d72 2
a73 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d76 4
a79 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 24);
	    pc -= 4;
	}
d81 1
a81 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);
d85 2
a86 1
void __glXDispSwap_Color3fv(GLbyte *pc)
d88 2
a89 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d91 1
a91 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);
d94 2
a95 1
void __glXDispSwap_Color3iv(GLbyte *pc)
d97 2
a98 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d100 1
a100 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 3);
d104 2
a105 1
void __glXDispSwap_Color3sv(GLbyte *pc)
d107 2
a108 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d110 1
a110 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 3);
d114 2
a115 1
void __glXDispSwap_Color3ubv(GLbyte *pc)
d119 2
a120 1
void __glXDispSwap_Color3uiv(GLbyte *pc)
d122 2
a123 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d125 1
a125 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 3);
d128 2
a129 1
void __glXDispSwap_Color3usv(GLbyte *pc)
d131 2
a132 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d134 1
a134 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 3);
d137 2
a138 1
void __glXDispSwap_Color4bv(GLbyte *pc)
d142 2
a143 1
void __glXDispSwap_Color4dv(GLbyte *pc)
d145 2
a146 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d149 4
a152 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 32);
	    pc -= 4;
	}
d154 1
a154 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);
d157 2
a158 1
void __glXDispSwap_Color4fv(GLbyte *pc)
d160 2
a161 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d163 1
a163 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 4);
d167 2
a168 1
void __glXDispSwap_Color4iv(GLbyte *pc)
d170 2
a171 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d173 1
a173 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 4);
d177 2
a178 1
void __glXDispSwap_Color4sv(GLbyte *pc)
d180 2
a181 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d183 1
a183 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 4);
d187 2
a188 1
void __glXDispSwap_Color4ubv(GLbyte *pc)
d193 2
a194 1
void __glXDispSwap_Color4uiv(GLbyte *pc)
d196 2
a197 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d199 1
a199 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 4);
d203 2
a204 1
void __glXDispSwap_Color4usv(GLbyte *pc)
d206 2
a207 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d209 1
a209 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 4);
d213 2
a214 1
void __glXDispSwap_EdgeFlagv(GLbyte *pc)
d218 2
a219 1
void __glXDispSwap_End(GLbyte *pc)
d223 2
a224 1
void __glXDispSwap_Indexdv(GLbyte *pc)
d226 2
a227 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d230 4
a233 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 8);
	    pc -= 4;
	}
d235 1
a235 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 1);
d239 2
a240 1
void __glXDispSwap_Indexfv(GLbyte *pc)
d242 2
a243 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d245 1
a245 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 1);
d249 2
a250 1
void __glXDispSwap_Indexiv(GLbyte *pc)
d252 2
a253 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d255 1
a255 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 1);
d259 2
a260 1
void __glXDispSwap_Indexsv(GLbyte *pc)
d262 2
a263 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d265 1
a265 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 1);
d269 2
a270 1
void __glXDispSwap_Normal3bv(GLbyte *pc)
d274 2
a275 1
void __glXDispSwap_Normal3dv(GLbyte *pc)
d277 2
a278 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d281 4
a284 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 24);
	    pc -= 4;
	}
d286 1
a286 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);
d290 2
a291 1
void __glXDispSwap_Normal3fv(GLbyte *pc)
d293 2
a294 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d296 1
a296 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);
d300 2
a301 1
void __glXDispSwap_Normal3iv(GLbyte *pc)
d303 2
a304 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d306 1
a306 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 3);
d310 2
a311 1
void __glXDispSwap_Normal3sv(GLbyte *pc)
d313 2
a314 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d316 1
a316 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 3);
d320 2
a321 1
void __glXDispSwap_RasterPos2dv(GLbyte *pc)
d323 2
a324 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d327 4
a330 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 16);
	    pc -= 4;
	}
d332 1
a332 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);
d336 2
a337 1
void __glXDispSwap_RasterPos2fv(GLbyte *pc)
d339 2
a340 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d342 1
a342 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);
d346 2
a347 1
void __glXDispSwap_RasterPos2iv(GLbyte *pc)
d349 2
a350 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d352 1
a352 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 2);
d356 2
a357 1
void __glXDispSwap_RasterPos2sv(GLbyte *pc)
d359 2
a360 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d362 1
a362 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 2);
d366 2
a367 1
void __glXDispSwap_RasterPos3dv(GLbyte *pc)
d369 2
a370 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d373 4
a376 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 24);
	    pc -= 4;
	}
d378 1
a378 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);
d382 2
a383 1
void __glXDispSwap_RasterPos3fv(GLbyte *pc)
d385 2
a386 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d388 1
a388 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);
d392 2
a393 1
void __glXDispSwap_RasterPos3iv(GLbyte *pc)
d395 2
a396 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d398 1
a398 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 3);
d402 2
a403 1
void __glXDispSwap_RasterPos3sv(GLbyte *pc)
d405 2
a406 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d408 1
a408 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 3);
d412 2
a413 1
void __glXDispSwap_RasterPos4dv(GLbyte *pc)
d415 2
a416 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d419 4
a422 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 32);
	    pc -= 4;
	}
d424 1
a424 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);
d428 2
a429 1
void __glXDispSwap_RasterPos4fv(GLbyte *pc)
d431 2
a432 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d434 1
a434 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 4);
d438 2
a439 1
void __glXDispSwap_RasterPos4iv(GLbyte *pc)
d441 2
a442 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d444 1
a444 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 4);
d448 2
a449 1
void __glXDispSwap_RasterPos4sv(GLbyte *pc)
d451 2
a452 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d454 1
a454 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 4);
d458 2
a459 1
void __glXDispSwap_Rectdv(GLbyte *pc)
d461 2
a462 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d465 4
a468 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 32);
	    pc -= 4;
	}
d470 2
a471 2
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);
	__GLX_SWAP_DOUBLE_ARRAY(pc + 16, 2);
d475 2
a476 1
void __glXDispSwap_Rectfv(GLbyte *pc)
d478 2
a479 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d481 2
a482 2
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);
	__GLX_SWAP_FLOAT_ARRAY(pc + 8, 2);
d486 2
a487 1
void __glXDispSwap_Rectiv(GLbyte *pc)
d489 2
a490 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d492 2
a493 2
	__GLX_SWAP_INT_ARRAY(pc + 0, 2);
	__GLX_SWAP_INT_ARRAY(pc + 8, 2);
d497 2
a498 1
void __glXDispSwap_Rectsv(GLbyte *pc)
d500 2
a501 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d503 2
a504 2
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 2);
	__GLX_SWAP_SHORT_ARRAY(pc + 4, 2);
d508 2
a509 1
void __glXDispSwap_TexCoord1dv(GLbyte *pc)
d511 2
a512 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d515 4
a518 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 8);
	    pc -= 4;
	}
d520 1
a520 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 1);
d524 2
a525 1
void __glXDispSwap_TexCoord1fv(GLbyte *pc)
d527 2
a528 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d530 1
a530 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 1);
d534 2
a535 1
void __glXDispSwap_TexCoord1iv(GLbyte *pc)
d537 2
a538 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d540 1
a540 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 1);
d544 2
a545 1
void __glXDispSwap_TexCoord1sv(GLbyte *pc)
d547 2
a548 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d550 1
a550 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 1);
d554 2
a555 1
void __glXDispSwap_TexCoord2dv(GLbyte *pc)
d557 2
a558 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d561 4
a564 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 16);
	    pc -= 4;
	}
d566 1
a566 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);
d570 2
a571 1
void __glXDispSwap_TexCoord2fv(GLbyte *pc)
d573 2
a574 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d576 1
a576 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);
d580 2
a581 1
void __glXDispSwap_TexCoord2iv(GLbyte *pc)
d583 2
a584 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d586 1
a586 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 2);
d590 2
a591 1
void __glXDispSwap_TexCoord2sv(GLbyte *pc)
d593 2
a594 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d596 1
a596 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 2);
d600 2
a601 1
void __glXDispSwap_TexCoord3dv(GLbyte *pc)
d603 2
a604 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d607 4
a610 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 24);
	    pc -= 4;
	}
d612 1
a612 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);
d616 2
a617 1
void __glXDispSwap_TexCoord3fv(GLbyte *pc)
d619 2
a620 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d622 1
a622 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);
d626 2
a627 1
void __glXDispSwap_TexCoord3iv(GLbyte *pc)
d629 2
a630 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d632 1
a632 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 3);
d636 2
a637 1
void __glXDispSwap_TexCoord3sv(GLbyte *pc)
d639 2
a640 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d642 1
a642 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 3);
d646 2
a647 1
void __glXDispSwap_TexCoord4dv(GLbyte *pc)
d649 2
a650 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d653 4
a656 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 32);
	    pc -= 4;
	}
d658 1
a658 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);
d662 2
a663 1
void __glXDispSwap_TexCoord4fv(GLbyte *pc)
d665 2
a666 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d668 1
a668 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 4);
d672 2
a673 1
void __glXDispSwap_TexCoord4iv(GLbyte *pc)
d675 2
a676 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d678 1
a678 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 4);
d682 2
a683 1
void __glXDispSwap_TexCoord4sv(GLbyte *pc)
d685 2
a686 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d688 1
a688 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 4);
d692 2
a693 1
void __glXDispSwap_Vertex2dv(GLbyte *pc)
d695 2
a696 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d699 4
a702 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 16);
	    pc -= 4;
	}
d704 1
a704 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);
d708 2
a709 1
void __glXDispSwap_Vertex2fv(GLbyte *pc)
d711 2
a712 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d714 1
a714 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);
d718 2
a719 1
void __glXDispSwap_Vertex2iv(GLbyte *pc)
d721 2
a722 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d724 1
a724 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 2);
d728 2
a729 1
void __glXDispSwap_Vertex2sv(GLbyte *pc)
d731 2
a732 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d734 1
a734 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 2);
d738 2
a739 1
void __glXDispSwap_Vertex3dv(GLbyte *pc)
d741 2
a742 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d745 4
a748 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 24);
	    pc -= 4;
	}
d750 1
a750 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);
d754 2
a755 1
void __glXDispSwap_Vertex3fv(GLbyte *pc)
d757 2
a758 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d760 1
a760 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 3);
d764 2
a765 1
void __glXDispSwap_Vertex3iv(GLbyte *pc)
d767 2
a768 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d770 1
a770 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 3);
d774 2
a775 1
void __glXDispSwap_Vertex3sv(GLbyte *pc)
d777 2
a778 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d780 1
a780 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 3);
d784 2
a785 1
void __glXDispSwap_Vertex4dv(GLbyte *pc)
d787 2
a788 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d791 4
a794 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 32);
	    pc -= 4;
	}
d796 1
a796 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);
d800 2
a801 1
void __glXDispSwap_Vertex4fv(GLbyte *pc)
d803 2
a804 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d806 1
a806 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 4);
d810 2
a811 1
void __glXDispSwap_Vertex4iv(GLbyte *pc)
d813 2
a814 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d816 1
a816 1
	__GLX_SWAP_INT_ARRAY(pc + 0, 4);
d820 2
a821 1
void __glXDispSwap_Vertex4sv(GLbyte *pc)
d823 2
a824 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d826 1
a826 1
	__GLX_SWAP_SHORT_ARRAY(pc + 0, 4);
d830 2
a831 1
void __glXDispSwap_ClipPlane(GLbyte *pc)
d833 2
a834 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d837 4
a840 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 36);
	    pc -= 4;
	}
d842 2
a843 2
	__GLX_SWAP_INT(pc + 32);
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);
d847 2
a848 1
void __glXDispSwap_ColorMaterial(GLbyte *pc)
d850 1
a850 1
	__GLX_DECLARE_SWAP_VARIABLES;
d852 2
a853 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d857 2
a858 1
void __glXDispSwap_CullFace(GLbyte *pc)
d860 1
a860 1
	__GLX_DECLARE_SWAP_VARIABLES;
d862 1
a862 1
	__GLX_SWAP_INT(pc + 0);
d866 2
a867 1
void __glXDispSwap_Fogf(GLbyte *pc)
d869 1
a869 1
	__GLX_DECLARE_SWAP_VARIABLES;
d871 2
a872 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
d876 2
a877 1
void __glXDispSwap_Fogfv(GLbyte *pc)
d879 5
a883 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d885 6
a890 5
	__GLX_SWAP_INT(pc + 0);
	pname = *(GLenum *)(pc + 0);
	compsize = __glFogfv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_FLOAT_ARRAY(pc + 4, compsize);
d894 2
a895 1
void __glXDispSwap_Fogi(GLbyte *pc)
d897 1
a897 1
	__GLX_DECLARE_SWAP_VARIABLES;
d899 2
a900 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d904 2
a905 1
void __glXDispSwap_Fogiv(GLbyte *pc)
d907 2
a908 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d910 9
a918 5
	__GLX_SWAP_INT(pc + 0);
	pname = *(GLenum *)(pc + 0);
	compsize = __glFogiv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT_ARRAY(pc + 4, compsize);
d922 2
a923 1
void __glXDispSwap_FrontFace(GLbyte *pc)
d925 1
a925 1
	__GLX_DECLARE_SWAP_VARIABLES;
d927 1
a927 1
	__GLX_SWAP_INT(pc + 0);
d931 2
a932 1
void __glXDispSwap_Hint(GLbyte *pc)
d934 1
a934 1
	__GLX_DECLARE_SWAP_VARIABLES;
d936 2
a937 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d941 2
a942 1
void __glXDispSwap_Lightf(GLbyte *pc)
d944 1
a944 1
	__GLX_DECLARE_SWAP_VARIABLES;
d946 3
a948 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
d952 2
a953 1
void __glXDispSwap_Lightfv(GLbyte *pc)
d955 5
a959 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d961 7
a967 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glLightfv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);
d971 2
a972 1
void __glXDispSwap_Lighti(GLbyte *pc)
d974 1
a974 1
	__GLX_DECLARE_SWAP_VARIABLES;
d976 3
a978 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d982 2
a983 1
void __glXDispSwap_Lightiv(GLbyte *pc)
d985 2
a986 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d988 10
a997 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glLightiv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 8, compsize);
d1001 2
a1002 1
void __glXDispSwap_LightModelf(GLbyte *pc)
d1004 1
a1004 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1006 2
a1007 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
d1011 2
a1012 1
void __glXDispSwap_LightModelfv(GLbyte *pc)
d1014 5
a1018 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1020 6
a1025 5
	__GLX_SWAP_INT(pc + 0);
	pname = *(GLenum *)(pc + 0);
	compsize = __glLightModelfv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_FLOAT_ARRAY(pc + 4, compsize);
d1029 2
a1030 1
void __glXDispSwap_LightModeli(GLbyte *pc)
d1032 1
a1032 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1034 2
a1035 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d1039 2
a1040 1
void __glXDispSwap_LightModeliv(GLbyte *pc)
d1042 5
a1046 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1048 6
a1053 5
	__GLX_SWAP_INT(pc + 0);
	pname = *(GLenum *)(pc + 0);
	compsize = __glLightModeliv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT_ARRAY(pc + 4, compsize);
d1057 2
a1058 1
void __glXDispSwap_LineStipple(GLbyte *pc)
d1060 1
a1060 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1062 2
a1063 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_SHORT(pc + 4);
d1067 2
a1068 1
void __glXDispSwap_LineWidth(GLbyte *pc)
d1070 1
a1070 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1072 1
a1072 1
	__GLX_SWAP_FLOAT(pc + 0);
d1076 2
a1077 1
void __glXDispSwap_Materialf(GLbyte *pc)
d1079 1
a1079 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1081 3
a1083 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
d1087 2
a1088 1
void __glXDispSwap_Materialfv(GLbyte *pc)
d1090 2
a1091 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1093 10
a1102 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glMaterialfv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);
d1106 2
a1107 1
void __glXDispSwap_Materiali(GLbyte *pc)
d1109 1
a1109 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1111 3
a1113 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d1117 2
a1118 1
void __glXDispSwap_Materialiv(GLbyte *pc)
d1120 5
a1124 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1126 7
a1132 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glMaterialiv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 8, compsize);
d1136 2
a1137 1
void __glXDispSwap_PointSize(GLbyte *pc)
d1139 1
a1139 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1141 1
a1141 1
	__GLX_SWAP_FLOAT(pc + 0);
d1145 2
a1146 1
void __glXDispSwap_PolygonMode(GLbyte *pc)
d1148 1
a1148 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1150 2
a1151 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d1155 2
a1156 1
void __glXDispSwap_Scissor(GLbyte *pc)
d1158 1
a1158 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1160 4
a1163 4
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
d1167 2
a1168 1
void __glXDispSwap_ShadeModel(GLbyte *pc)
d1170 1
a1170 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1172 1
a1172 1
	__GLX_SWAP_INT(pc + 0);
d1176 2
a1177 1
void __glXDispSwap_TexParameterf(GLbyte *pc)
d1179 1
a1179 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1181 3
a1183 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
d1187 2
a1188 1
void __glXDispSwap_TexParameterfv(GLbyte *pc)
d1190 2
a1191 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1193 10
a1202 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glTexParameterfv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);
d1206 2
a1207 1
void __glXDispSwap_TexParameteri(GLbyte *pc)
d1209 1
a1209 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1211 3
a1213 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d1217 2
a1218 1
void __glXDispSwap_TexParameteriv(GLbyte *pc)
d1220 5
a1224 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1226 7
a1232 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glTexParameteriv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 8, compsize);
d1236 2
a1237 1
void __glXDispSwap_TexEnvf(GLbyte *pc)
d1239 1
a1239 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1241 3
a1243 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
d1247 2
a1248 1
void __glXDispSwap_TexEnvfv(GLbyte *pc)
d1250 2
a1251 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1253 10
a1262 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glTexEnvfv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);
d1266 2
a1267 1
void __glXDispSwap_TexEnvi(GLbyte *pc)
d1269 1
a1269 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1271 3
a1273 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d1277 2
a1278 1
void __glXDispSwap_TexEnviv(GLbyte *pc)
d1280 5
a1284 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1286 7
a1292 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glTexEnviv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 8, compsize);
d1296 2
a1297 1
void __glXDispSwap_TexGend(GLbyte *pc)
d1299 1
a1299 2
	__GLX_DECLARE_SWAP_VARIABLES;

d1302 4
a1305 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 16);
	    pc -= 4;
	}
d1307 3
a1309 3
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_DOUBLE(pc + 0);
d1313 2
a1314 1
void __glXDispSwap_TexGendv(GLbyte *pc)
d1316 3
a1318 5
	GLenum pname;
	GLint cmdlen;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1320 9
a1328 5
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glTexGendv_size(pname);
	if (compsize < 0) compsize = 0;
	cmdlen = __GLX_PAD(8+compsize*8);
d1331 4
a1334 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, cmdlen);
	    pc -= 4;
	}
d1336 2
a1337 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_DOUBLE_ARRAY(pc + 8, compsize);
d1341 2
a1342 1
void __glXDispSwap_TexGenf(GLbyte *pc)
d1344 1
a1344 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1346 3
a1348 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
d1352 2
a1353 1
void __glXDispSwap_TexGenfv(GLbyte *pc)
d1355 5
a1359 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1361 7
a1367 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glTexGenfv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);
d1371 2
a1372 1
void __glXDispSwap_TexGeni(GLbyte *pc)
d1374 1
a1374 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1376 3
a1378 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d1382 2
a1383 1
void __glXDispSwap_TexGeniv(GLbyte *pc)
d1385 2
a1386 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1388 10
a1397 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glTexGeniv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 8, compsize);
d1401 2
a1402 1
void __glXDispSwap_InitNames(GLbyte *pc)
d1406 2
a1407 1
void __glXDispSwap_LoadName(GLbyte *pc)
d1409 1
a1409 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1411 1
a1411 1
	__GLX_SWAP_INT(pc + 0);
d1415 2
a1416 1
void __glXDispSwap_PassThrough(GLbyte *pc)
d1418 1
a1418 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1420 1
a1420 1
	__GLX_SWAP_FLOAT(pc + 0);
d1424 2
a1425 1
void __glXDispSwap_PopName(GLbyte *pc)
d1429 2
a1430 1
void __glXDispSwap_PushName(GLbyte *pc)
d1432 1
a1432 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1434 1
a1434 1
	__GLX_SWAP_INT(pc + 0);
d1438 2
a1439 1
void __glXDispSwap_DrawBuffer(GLbyte *pc)
d1441 1
a1441 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1443 1
a1443 1
	__GLX_SWAP_INT(pc + 0);
d1447 2
a1448 1
void __glXDispSwap_Clear(GLbyte *pc)
d1450 1
a1450 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1452 1
a1452 1
	__GLX_SWAP_INT(pc + 0);
d1456 2
a1457 1
void __glXDispSwap_ClearAccum(GLbyte *pc)
d1459 1
a1459 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1461 4
a1464 4
	__GLX_SWAP_FLOAT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
	__GLX_SWAP_FLOAT(pc + 12);
d1468 2
a1469 1
void __glXDispSwap_ClearIndex(GLbyte *pc)
d1471 1
a1471 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1473 1
a1473 1
	__GLX_SWAP_FLOAT(pc + 0);
d1477 2
a1478 1
void __glXDispSwap_ClearColor(GLbyte *pc)
d1480 1
a1480 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1482 4
a1485 4
	__GLX_SWAP_FLOAT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
	__GLX_SWAP_FLOAT(pc + 12);
d1489 2
a1490 1
void __glXDispSwap_ClearStencil(GLbyte *pc)
d1492 1
a1492 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1494 1
a1494 1
	__GLX_SWAP_INT(pc + 0);
d1498 2
a1499 1
void __glXDispSwap_ClearDepth(GLbyte *pc)
d1501 1
a1501 2
	__GLX_DECLARE_SWAP_VARIABLES;

d1504 4
a1507 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 8);
	    pc -= 4;
	}
d1509 1
a1509 1
	__GLX_SWAP_DOUBLE(pc + 0);
d1513 2
a1514 1
void __glXDispSwap_StencilMask(GLbyte *pc)
d1516 1
a1516 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1518 1
a1518 1
	__GLX_SWAP_INT(pc + 0);
d1522 2
a1523 1
void __glXDispSwap_ColorMask(GLbyte *pc)
d1527 2
a1528 1
void __glXDispSwap_DepthMask(GLbyte *pc)
d1532 2
a1533 1
void __glXDispSwap_IndexMask(GLbyte *pc)
d1535 1
a1535 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1537 1
a1537 1
	__GLX_SWAP_INT(pc + 0);
d1541 2
a1542 1
void __glXDispSwap_Accum(GLbyte *pc)
d1544 1
a1544 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1546 2
a1547 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
d1551 2
a1552 1
void __glXDispSwap_Disable(GLbyte *pc)
d1554 1
a1554 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1556 1
a1556 1
	__GLX_SWAP_INT(pc + 0);
d1560 2
a1561 1
void __glXDispSwap_Enable(GLbyte *pc)
d1563 1
a1563 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1565 1
a1565 1
	__GLX_SWAP_INT(pc + 0);
d1569 2
a1570 1
void __glXDispSwap_PopAttrib(GLbyte *pc)
d1574 2
a1575 1
void __glXDispSwap_PushAttrib(GLbyte *pc)
d1577 1
a1577 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1579 1
a1579 1
	__GLX_SWAP_INT(pc + 0);
d1583 2
a1584 1
void __glXDispSwap_MapGrid1d(GLbyte *pc)
d1586 1
a1586 2
	__GLX_DECLARE_SWAP_VARIABLES;

d1589 4
a1592 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 20);
	    pc -= 4;
	}
d1594 3
a1596 3
	__GLX_SWAP_INT(pc + 16);
	__GLX_SWAP_DOUBLE(pc + 0);
	__GLX_SWAP_DOUBLE(pc + 8);
d1600 2
a1601 1
void __glXDispSwap_MapGrid1f(GLbyte *pc)
d1603 1
a1603 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1605 3
a1607 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
d1611 2
a1612 1
void __glXDispSwap_MapGrid2d(GLbyte *pc)
d1614 1
a1614 2
	__GLX_DECLARE_SWAP_VARIABLES;

d1617 4
a1620 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 40);
	    pc -= 4;
	}
d1622 6
a1627 6
	__GLX_SWAP_INT(pc + 32);
	__GLX_SWAP_DOUBLE(pc + 0);
	__GLX_SWAP_DOUBLE(pc + 8);
	__GLX_SWAP_INT(pc + 36);
	__GLX_SWAP_DOUBLE(pc + 16);
	__GLX_SWAP_DOUBLE(pc + 24);
d1631 2
a1632 1
void __glXDispSwap_MapGrid2f(GLbyte *pc)
d1634 1
a1634 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1636 6
a1641 6
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_FLOAT(pc + 16);
	__GLX_SWAP_FLOAT(pc + 20);
d1645 2
a1646 1
void __glXDispSwap_EvalCoord1dv(GLbyte *pc)
d1648 2
a1649 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d1652 4
a1655 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 8);
	    pc -= 4;
	}
d1657 1
a1657 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 1);
d1661 2
a1662 1
void __glXDispSwap_EvalCoord1fv(GLbyte *pc)
d1664 2
a1665 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1667 1
a1667 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 1);
d1671 2
a1672 1
void __glXDispSwap_EvalCoord2dv(GLbyte *pc)
d1674 2
a1675 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d1678 4
a1681 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 16);
	    pc -= 4;
	}
d1683 1
a1683 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);
d1687 2
a1688 1
void __glXDispSwap_EvalCoord2fv(GLbyte *pc)
d1690 2
a1691 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1693 1
a1693 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 2);
d1697 2
a1698 1
void __glXDispSwap_EvalMesh1(GLbyte *pc)
d1700 1
a1700 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1702 3
a1704 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d1708 2
a1709 1
void __glXDispSwap_EvalPoint1(GLbyte *pc)
d1711 1
a1711 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1713 1
a1713 1
	__GLX_SWAP_INT(pc + 0);
d1717 2
a1718 1
void __glXDispSwap_EvalMesh2(GLbyte *pc)
d1720 1
a1720 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1722 5
a1726 5
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
d1730 2
a1731 1
void __glXDispSwap_EvalPoint2(GLbyte *pc)
d1733 1
a1733 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1735 2
a1736 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d1740 2
a1741 1
void __glXDispSwap_AlphaFunc(GLbyte *pc)
d1743 1
a1743 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1745 2
a1746 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
d1750 2
a1751 1
void __glXDispSwap_BlendFunc(GLbyte *pc)
d1753 1
a1753 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1755 2
a1756 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d1760 2
a1761 1
void __glXDispSwap_LogicOp(GLbyte *pc)
d1763 1
a1763 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1765 1
a1765 1
	__GLX_SWAP_INT(pc + 0);
d1769 2
a1770 1
void __glXDispSwap_StencilFunc(GLbyte *pc)
d1772 1
a1772 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1774 3
a1776 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d1780 2
a1781 1
void __glXDispSwap_StencilOp(GLbyte *pc)
d1783 1
a1783 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1785 3
a1787 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d1791 2
a1792 1
void __glXDispSwap_DepthFunc(GLbyte *pc)
d1794 1
a1794 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1796 1
a1796 1
	__GLX_SWAP_INT(pc + 0);
d1800 2
a1801 1
void __glXDispSwap_PixelZoom(GLbyte *pc)
d1803 1
a1803 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1805 2
a1806 2
	__GLX_SWAP_FLOAT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
d1810 2
a1811 1
void __glXDispSwap_PixelTransferf(GLbyte *pc)
d1813 1
a1813 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1815 2
a1816 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
d1820 2
a1821 1
void __glXDispSwap_PixelTransferi(GLbyte *pc)
d1823 1
a1823 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1825 2
a1826 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d1830 2
a1831 1
void __glXDispSwap_PixelMapfv(GLbyte *pc)
d1833 1
a1833 3
	GLint mapsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1835 7
a1841 4
	__GLX_SWAP_INT(pc + 4);
	mapsize = *(GLint *)(pc + 4);
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 8, mapsize);
d1845 2
a1846 1
void __glXDispSwap_PixelMapuiv(GLbyte *pc)
d1848 4
a1851 3
	GLint mapsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1853 4
a1856 4
	__GLX_SWAP_INT(pc + 4);
	mapsize = *(GLint *)(pc + 4);
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 8, mapsize);
d1860 2
a1861 1
void __glXDispSwap_PixelMapusv(GLbyte *pc)
d1863 1
a1863 3
	GLint mapsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1865 7
a1871 4
	__GLX_SWAP_INT(pc + 4);
	mapsize = *(GLint *)(pc + 4);
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_SHORT_ARRAY(pc + 8, mapsize);
d1875 2
a1876 1
void __glXDispSwap_ReadBuffer(GLbyte *pc)
d1878 1
a1878 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1880 1
a1880 1
	__GLX_SWAP_INT(pc + 0);
d1884 2
a1885 1
void __glXDispSwap_CopyPixels(GLbyte *pc)
d1887 1
a1887 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1889 5
a1893 5
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
d1897 2
a1898 1
void __glXDispSwap_DepthRange(GLbyte *pc)
d1900 1
a1900 2
	__GLX_DECLARE_SWAP_VARIABLES;

d1903 4
a1906 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 16);
	    pc -= 4;
	}
d1908 2
a1909 2
	__GLX_SWAP_DOUBLE(pc + 0);
	__GLX_SWAP_DOUBLE(pc + 8);
d1913 2
a1914 1
void __glXDispSwap_Frustum(GLbyte *pc)
d1916 1
a1916 2
	__GLX_DECLARE_SWAP_VARIABLES;

d1919 4
a1922 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 48);
	    pc -= 4;
	}
d1924 6
a1929 6
	__GLX_SWAP_DOUBLE(pc + 0);
	__GLX_SWAP_DOUBLE(pc + 8);
	__GLX_SWAP_DOUBLE(pc + 16);
	__GLX_SWAP_DOUBLE(pc + 24);
	__GLX_SWAP_DOUBLE(pc + 32);
	__GLX_SWAP_DOUBLE(pc + 40);
d1933 2
a1934 1
void __glXDispSwap_LoadIdentity(GLbyte *pc)
d1938 2
a1939 1
void __glXDispSwap_LoadMatrixf(GLbyte *pc)
d1941 2
a1942 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1944 1
a1944 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 16);
d1948 2
a1949 1
void __glXDispSwap_LoadMatrixd(GLbyte *pc)
d1951 2
a1952 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d1955 4
a1958 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 128);
	    pc -= 4;
	}
d1960 1
a1960 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 16);
d1964 2
a1965 1
void __glXDispSwap_MatrixMode(GLbyte *pc)
d1967 1
a1967 1
	__GLX_DECLARE_SWAP_VARIABLES;
d1969 1
a1969 1
	__GLX_SWAP_INT(pc + 0);
d1973 2
a1974 1
void __glXDispSwap_MultMatrixf(GLbyte *pc)
d1976 2
a1977 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d1979 1
a1979 1
	__GLX_SWAP_FLOAT_ARRAY(pc + 0, 16);
d1983 2
a1984 1
void __glXDispSwap_MultMatrixd(GLbyte *pc)
d1986 2
a1987 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d1990 4
a1993 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 128);
	    pc -= 4;
	}
d1995 1
a1995 1
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 16);
d1999 2
a2000 1
void __glXDispSwap_Ortho(GLbyte *pc)
d2002 1
a2002 2
	__GLX_DECLARE_SWAP_VARIABLES;

d2005 4
a2008 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 48);
	    pc -= 4;
	}
d2010 6
a2015 6
	__GLX_SWAP_DOUBLE(pc + 0);
	__GLX_SWAP_DOUBLE(pc + 8);
	__GLX_SWAP_DOUBLE(pc + 16);
	__GLX_SWAP_DOUBLE(pc + 24);
	__GLX_SWAP_DOUBLE(pc + 32);
	__GLX_SWAP_DOUBLE(pc + 40);
d2019 2
a2020 1
void __glXDispSwap_PopMatrix(GLbyte *pc)
d2024 2
a2025 1
void __glXDispSwap_PushMatrix(GLbyte *pc)
d2029 2
a2030 1
void __glXDispSwap_Rotated(GLbyte *pc)
d2032 1
a2032 2
	__GLX_DECLARE_SWAP_VARIABLES;

d2035 4
a2038 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 32);
	    pc -= 4;
	}
d2040 4
a2043 4
	__GLX_SWAP_DOUBLE(pc + 0);
	__GLX_SWAP_DOUBLE(pc + 8);
	__GLX_SWAP_DOUBLE(pc + 16);
	__GLX_SWAP_DOUBLE(pc + 24);
d2047 2
a2048 1
void __glXDispSwap_Rotatef(GLbyte *pc)
d2050 1
a2050 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2052 4
a2055 4
	__GLX_SWAP_FLOAT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
	__GLX_SWAP_FLOAT(pc + 12);
d2059 2
a2060 1
void __glXDispSwap_Scaled(GLbyte *pc)
d2062 1
a2062 2
	__GLX_DECLARE_SWAP_VARIABLES;

d2065 4
a2068 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 24);
	    pc -= 4;
	}
d2070 3
a2072 3
	__GLX_SWAP_DOUBLE(pc + 0);
	__GLX_SWAP_DOUBLE(pc + 8);
	__GLX_SWAP_DOUBLE(pc + 16);
d2076 2
a2077 1
void __glXDispSwap_Scalef(GLbyte *pc)
d2079 1
a2079 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2081 3
a2083 3
	__GLX_SWAP_FLOAT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
d2087 2
a2088 1
void __glXDispSwap_Translated(GLbyte *pc)
d2090 1
a2090 2
	__GLX_DECLARE_SWAP_VARIABLES;

d2093 4
a2096 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 24);
	    pc -= 4;
	}
d2098 3
a2100 3
	__GLX_SWAP_DOUBLE(pc + 0);
	__GLX_SWAP_DOUBLE(pc + 8);
	__GLX_SWAP_DOUBLE(pc + 16);
d2104 2
a2105 1
void __glXDispSwap_Translatef(GLbyte *pc)
d2107 1
a2107 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2109 3
a2111 3
	__GLX_SWAP_FLOAT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
d2115 2
a2116 1
void __glXDispSwap_Viewport(GLbyte *pc)
d2118 1
a2118 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2120 4
a2123 4
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
d2127 2
a2128 1
void __glXDispSwap_PolygonOffset(GLbyte *pc)
d2130 1
a2130 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2132 2
a2133 2
	__GLX_SWAP_FLOAT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
d2137 2
a2138 1
void __glXDispSwap_CopyTexImage1D(GLbyte *pc)
d2140 1
a2140 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2142 7
a2148 7
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
	__GLX_SWAP_INT(pc + 20);
	__GLX_SWAP_INT(pc + 24);
d2152 2
a2153 1
void __glXDispSwap_CopyTexImage2D(GLbyte *pc)
d2155 1
a2155 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2157 8
a2164 8
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
	__GLX_SWAP_INT(pc + 20);
	__GLX_SWAP_INT(pc + 24);
	__GLX_SWAP_INT(pc + 28);
d2168 2
a2169 1
void __glXDispSwap_CopyTexSubImage1D(GLbyte *pc)
d2171 1
a2171 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2173 6
a2178 6
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
	__GLX_SWAP_INT(pc + 20);
d2182 2
a2183 1
void __glXDispSwap_CopyTexSubImage2D(GLbyte *pc)
d2185 1
a2185 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2187 8
a2194 8
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
	__GLX_SWAP_INT(pc + 20);
	__GLX_SWAP_INT(pc + 24);
	__GLX_SWAP_INT(pc + 28);
d2198 2
a2199 1
void __glXDispSwap_BindTexture(GLbyte *pc)
d2201 1
a2201 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2203 2
a2204 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d2208 2
a2209 1
void __glXDispSwap_PrioritizeTextures(GLbyte *pc)
d2211 1
a2211 3
	GLsizei n;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2213 7
a2219 4
	__GLX_SWAP_INT(pc + 0);
	n = *(GLsizei *)(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 4, n);
	__GLX_SWAP_FLOAT_ARRAY(pc + 4+n*4, n);
d2223 2
a2224 1
void __glXDispSwap_Indexubv(GLbyte *pc)
d2228 2
a2229 1
void __glXDispSwap_BlendColor(GLbyte *pc)
d2231 1
a2231 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2233 4
a2236 4
	__GLX_SWAP_FLOAT(pc + 0);
	__GLX_SWAP_FLOAT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
	__GLX_SWAP_FLOAT(pc + 12);
d2240 2
a2241 1
void __glXDispSwap_BlendEquation(GLbyte *pc)
d2243 1
a2243 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2245 1
a2245 1
	__GLX_SWAP_INT(pc + 0);
d2249 2
a2250 1
void __glXDispSwap_ColorTableParameterfv(GLbyte *pc)
d2252 5
a2256 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2258 7
a2264 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glColorTableParameterfv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);
d2268 2
a2269 1
void __glXDispSwap_ColorTableParameteriv(GLbyte *pc)
d2271 5
a2275 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2277 7
a2283 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glColorTableParameteriv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 8, compsize);
d2287 2
a2288 1
void __glXDispSwap_CopyColorTable(GLbyte *pc)
d2290 1
a2290 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2292 5
a2296 5
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
d2300 2
a2301 1
void __glXDispSwap_CopyColorSubTable(GLbyte *pc)
d2303 1
a2303 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2305 5
a2309 5
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
d2313 2
a2314 1
void __glXDispSwap_ConvolutionParameterf(GLbyte *pc)
d2316 1
a2316 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2318 3
a2320 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_FLOAT(pc + 8);
d2324 2
a2325 1
void __glXDispSwap_ConvolutionParameterfv(GLbyte *pc)
d2327 2
a2328 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2330 10
a2339 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glConvolutionParameterfv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 8, compsize);
d2343 2
a2344 1
void __glXDispSwap_ConvolutionParameteri(GLbyte *pc)
d2346 1
a2346 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2348 3
a2350 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d2354 2
a2355 1
void __glXDispSwap_ConvolutionParameteriv(GLbyte *pc)
d2357 5
a2361 4
	GLenum pname;
	GLint compsize;
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2363 7
a2369 6
	__GLX_SWAP_INT(pc + 4);
	pname = *(GLenum *)(pc + 4);
	compsize = __glConvolutionParameteriv_size(pname);
	if (compsize < 0) compsize = 0;
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 8, compsize);
d2373 2
a2374 1
void __glXDispSwap_CopyConvolutionFilter1D(GLbyte *pc)
d2376 1
a2376 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2378 5
a2382 5
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
d2386 2
a2387 1
void __glXDispSwap_CopyConvolutionFilter2D(GLbyte *pc)
d2389 1
a2389 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2391 6
a2396 6
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
	__GLX_SWAP_INT(pc + 20);
d2400 2
a2401 1
void __glXDispSwap_Histogram(GLbyte *pc)
d2403 1
a2403 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2405 3
a2407 3
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
d2411 2
a2412 1
void __glXDispSwap_Minmax(GLbyte *pc)
d2414 1
a2414 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2416 2
a2417 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
d2421 2
a2422 1
void __glXDispSwap_ResetHistogram(GLbyte *pc)
d2424 1
a2424 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2426 1
a2426 1
	__GLX_SWAP_INT(pc + 0);
d2430 2
a2431 1
void __glXDispSwap_ResetMinmax(GLbyte *pc)
d2433 1
a2433 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2435 1
a2435 1
	__GLX_SWAP_INT(pc + 0);
d2439 2
a2440 1
void __glXDispSwap_CopyTexSubImage3D(GLbyte *pc)
d2442 1
a2442 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2444 9
a2452 9
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT(pc + 4);
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_INT(pc + 12);
	__GLX_SWAP_INT(pc + 16);
	__GLX_SWAP_INT(pc + 20);
	__GLX_SWAP_INT(pc + 24);
	__GLX_SWAP_INT(pc + 28);
	__GLX_SWAP_INT(pc + 32);
d2456 2
a2457 1
void __glXDispSwap_ActiveTextureARB(GLbyte *pc)
d2459 1
a2459 1
	__GLX_DECLARE_SWAP_VARIABLES;
d2461 1
a2461 1
	__GLX_SWAP_INT(pc + 0);
d2465 2
a2466 1
void __glXDispSwap_MultiTexCoord1dvARB(GLbyte *pc)
d2468 2
a2469 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d2472 4
a2475 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 12);
	    pc -= 4;
	}
d2477 2
a2478 2
	__GLX_SWAP_INT(pc + 8);
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 1);
d2482 2
a2483 1
void __glXDispSwap_MultiTexCoord1fvARB(GLbyte *pc)
d2485 2
a2486 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2488 2
a2489 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 4, 1);
d2493 2
a2494 1
void __glXDispSwap_MultiTexCoord1ivARB(GLbyte *pc)
d2496 2
a2497 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2499 2
a2500 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 4, 1);
d2504 2
a2505 1
void __glXDispSwap_MultiTexCoord1svARB(GLbyte *pc)
d2507 2
a2508 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2510 2
a2511 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_SHORT_ARRAY(pc + 4, 1);
d2515 2
a2516 1
void __glXDispSwap_MultiTexCoord2dvARB(GLbyte *pc)
d2518 2
a2519 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d2522 4
a2525 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 20);
	    pc -= 4;
	}
d2527 2
a2528 2
	__GLX_SWAP_INT(pc + 16);
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 2);
d2532 2
a2533 1
void __glXDispSwap_MultiTexCoord2fvARB(GLbyte *pc)
d2535 2
a2536 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2538 2
a2539 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 4, 2);
d2543 2
a2544 1
void __glXDispSwap_MultiTexCoord2ivARB(GLbyte *pc)
d2546 2
a2547 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2549 2
a2550 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 4, 2);
d2554 2
a2555 1
void __glXDispSwap_MultiTexCoord2svARB(GLbyte *pc)
d2557 2
a2558 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2560 2
a2561 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_SHORT_ARRAY(pc + 4, 2);
d2565 2
a2566 1
void __glXDispSwap_MultiTexCoord3dvARB(GLbyte *pc)
d2568 2
a2569 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d2572 4
a2575 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 28);
	    pc -= 4;
	}
d2577 2
a2578 2
	__GLX_SWAP_INT(pc + 24);
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 3);
d2582 2
a2583 1
void __glXDispSwap_MultiTexCoord3fvARB(GLbyte *pc)
d2585 2
a2586 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2588 2
a2589 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 4, 3);
d2593 2
a2594 1
void __glXDispSwap_MultiTexCoord3ivARB(GLbyte *pc)
d2596 2
a2597 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2599 2
a2600 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 4, 3);
d2604 2
a2605 1
void __glXDispSwap_MultiTexCoord3svARB(GLbyte *pc)
d2607 2
a2608 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2610 2
a2611 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_SHORT_ARRAY(pc + 4, 3);
d2615 2
a2616 1
void __glXDispSwap_MultiTexCoord4dvARB(GLbyte *pc)
d2618 2
a2619 3
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;

d2622 4
a2625 4
	if ((unsigned long)(pc) & 7) {
	    __GLX_MEM_COPY(pc-4, pc, 36);
	    pc -= 4;
	}
d2627 2
a2628 2
	__GLX_SWAP_INT(pc + 32);
	__GLX_SWAP_DOUBLE_ARRAY(pc + 0, 4);
d2632 2
a2633 1
void __glXDispSwap_MultiTexCoord4fvARB(GLbyte *pc)
d2635 2
a2636 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2638 2
a2639 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_FLOAT_ARRAY(pc + 4, 4);
d2643 2
a2644 1
void __glXDispSwap_MultiTexCoord4ivARB(GLbyte *pc)
d2646 2
a2647 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2649 2
a2650 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_INT_ARRAY(pc + 4, 4);
d2654 2
a2655 1
void __glXDispSwap_MultiTexCoord4svARB(GLbyte *pc)
d2657 2
a2658 2
	__GLX_DECLARE_SWAP_VARIABLES;
	__GLX_DECLARE_SWAP_ARRAY_VARIABLES;
d2660 2
a2661 2
	__GLX_SWAP_INT(pc + 0);
	__GLX_SWAP_SHORT_ARRAY(pc + 4, 4);
a2663 1

@


1.4
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d35 1
@


1.3
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d67 1
d83 1
d91 1
d100 1
a107 1
	__GLX_DECLARE_SWAP_VARIABLES;
d113 1
d121 1
a127 1
	__GLX_DECLARE_SWAP_VARIABLES;
d133 1
d148 1
d157 1
d166 1
a173 1
	__GLX_DECLARE_SWAP_VARIABLES;
d180 1
d189 1
a196 3
	__GLX_DECLARE_SWAP_VARIABLES;


a200 3
	__GLX_DECLARE_SWAP_VARIABLES;


d206 1
d222 1
d231 1
d240 1
a247 3
	__GLX_DECLARE_SWAP_VARIABLES;


d253 1
d269 1
d278 1
d287 1
d296 1
d312 1
d321 1
d330 1
d339 1
d355 1
d364 1
d373 1
d382 1
d398 1
d407 1
d416 1
d425 1
d442 1
d452 1
d462 1
d472 1
d488 1
d497 1
d506 1
d515 1
d531 1
d540 1
d549 1
d558 1
d574 1
d583 1
d592 1
d601 1
d617 1
d626 1
d635 1
d644 1
d660 1
d669 1
d678 1
d687 1
d703 1
d712 1
d721 1
d730 1
d746 1
d755 1
d764 1
d773 1
d818 1
d842 1
d884 1
d910 1
d935 1
d959 1
d1001 1
d1027 1
d1089 1
d1115 1
d1141 1
d1167 1
d1201 1
d1235 1
d1261 1
a1273 3
	__GLX_DECLARE_SWAP_VARIABLES;


a1293 3
	__GLX_DECLARE_SWAP_VARIABLES;


a1382 3
	__GLX_DECLARE_SWAP_VARIABLES;


a1386 3
	__GLX_DECLARE_SWAP_VARIABLES;


a1423 3
	__GLX_DECLARE_SWAP_VARIABLES;


d1497 1
d1513 1
d1522 1
d1538 1
d1668 1
d1681 1
d1694 1
a1760 3
	__GLX_DECLARE_SWAP_VARIABLES;


d1766 1
d1775 1
d1799 1
d1808 1
a1842 3
	__GLX_DECLARE_SWAP_VARIABLES;


a1846 3
	__GLX_DECLARE_SWAP_VARIABLES;


d2022 1
a2032 3
	__GLX_DECLARE_SWAP_VARIABLES;


d2059 1
d2075 1
d2125 1
d2151 1
d2249 1
d2266 1
d2276 1
d2286 1
d2296 1
d2313 1
d2323 1
d2333 1
d2343 1
d2360 1
d2370 1
d2380 1
d2390 1
d2407 1
d2417 1
d2427 1
@


1.2
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@a30 1
#define NEED_REPLIES
@


1.1
log
@Initial revision
@
text
@d2 28
a29 27
** License Applicability. Except to the extent portions of this file are
** made subject to an alternative license as permitted in the SGI Free
** Software License B, Version 1.1 (the "License"), the contents of this
** file are subject only to the provisions of the License. You may not use
** this file except in compliance with the License. You may obtain a copy
** of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
** Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
** 
** http://oss.sgi.com/projects/FreeB
** 
** Note that, as provided in the License, the Software is distributed on an
** "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
** DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
** CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
** PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
** 
** Original Code. The Original Code is: OpenGL Sample Implementation,
** Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
** Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
** Copyright in any portions created by third parties is as indicated
** elsewhere herein. All Rights Reserved.
** 
** Additional Notice Provisions: This software was created using the
** OpenGL(R) version 1.2.1 Sample Implementation published by SGI, but has
** not been independently verified as being compliant with the OpenGL(R)
** version 1.2.1 Specification.
*/
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
