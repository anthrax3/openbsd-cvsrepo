head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.22
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.20
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.18
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.16
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.14
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.06.10.13.21.22;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.12.05.15.36.04;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.06.19.44.23;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.23.37;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.23.37;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@/*
 * SGI FREE SOFTWARE LICENSE B (Version 2.0, Sept. 18, 2008)
 * Copyright (C) 1991-2000 Silicon Graphics, Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice including the dates of first publication and
 * either this permission notice or a reference to
 * http://oss.sgi.com/projects/FreeB/
 * shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Except as contained in this notice, the name of Silicon Graphics, Inc.
 * shall not be used in advertising or otherwise to promote the sale, use or
 * other dealings in this Software without prior written authorization from
 * Silicon Graphics, Inc.
 */

#include "glxfbconfig.h"

int
AreFBConfigsMatch(__GLXFBConfig * c1, __GLXFBConfig * c2)
{
    int match;

    match = ((c1->visualType == c2->visualType) &&
             (c1->transparentType == c2->transparentType) &&
             (c1->transparentRed == c2->transparentRed) &&
             (c1->transparentGreen == c2->transparentGreen) &&
             (c1->transparentBlue == c2->transparentBlue) &&
             (c1->transparentAlpha == c2->transparentAlpha) &&
             (c1->transparentIndex == c2->transparentIndex) &&
             (c1->visualCaveat == c2->visualCaveat) &&
             (c1->drawableType == c2->drawableType) &&
             (c1->renderType == c2->renderType) &&
#if 0
             (c1->maxPbufferWidth == c2->maxPbufferWidth) &&
             (c1->maxPbufferHeight == c2->maxPbufferHeight) &&
             (c1->maxPbufferPixels == c2->maxPbufferPixels) &&
             (c1->optimalPbufferWidth == c2->optimalPbufferWidth) &&
             (c1->optimalPbufferHeight == c2->optimalPbufferHeight) &&
#endif
             (c1->visualSelectGroup == c2->visualSelectGroup) &&
             (c1->rgbMode == c2->rgbMode) &&
             (c1->colorIndexMode == c2->colorIndexMode) &&
             (c1->doubleBufferMode == c2->doubleBufferMode) &&
             (c1->stereoMode == c2->stereoMode) &&
             (c1->haveAccumBuffer == c2->haveAccumBuffer) &&
             (c1->haveDepthBuffer == c2->haveDepthBuffer) &&
             (c1->haveStencilBuffer == c2->haveStencilBuffer) &&
             (c1->accumRedBits == c2->accumRedBits) &&
             (c1->accumGreenBits == c2->accumGreenBits) &&
             (c1->accumBlueBits == c2->accumBlueBits) &&
             (c1->accumAlphaBits == c2->accumAlphaBits) &&
             (c1->depthBits == c2->depthBits) &&
             (c1->stencilBits == c2->stencilBits) &&
             (c1->indexBits == c2->indexBits) &&
             (c1->redBits == c2->redBits) &&
             (c1->greenBits == c2->greenBits) &&
             (c1->blueBits == c2->blueBits) &&
             (c1->alphaBits == c2->alphaBits) &&
             (c1->redMask == c2->redMask) &&
             (c1->greenMask == c2->greenMask) &&
             (c1->blueMask == c2->blueMask) &&
             (c1->alphaMask == c2->alphaMask) &&
             (c1->multiSampleSize == c2->multiSampleSize) &&
             (c1->nMultiSampleBuffers == c2->nMultiSampleBuffers) &&
             (c1->maxAuxBuffers == c2->maxAuxBuffers) &&
             (c1->level == c2->level) &&
             (c1->extendedRange == c2->extendedRange) &&
             (c1->minRed == c2->minRed) &&
             (c1->maxRed == c2->maxRed) &&
             (c1->minGreen == c2->minGreen) &&
             (c1->maxGreen == c2->maxGreen) &&
             (c1->minBlue == c2->minBlue) &&
             (c1->maxBlue == c2->maxBlue) &&
             (c1->minAlpha == c2->minAlpha) && (c1->maxAlpha == c2->maxAlpha)
        );

    return match;
}

__GLXFBConfig *
FindMatchingFBConfig(__GLXFBConfig * c, __GLXFBConfig * configs, int nconfigs)
{
    int i;

    for (i = 0; i < nconfigs; i++) {
        if (AreFBConfigsMatch(c, configs + i))
            return configs + i;
    }

    return 0;
}
@


1.3
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d33 2
a34 1
int AreFBConfigsMatch( __GLXFBConfig *c1, __GLXFBConfig *c2 )
d36 1
a36 1
   int match;
d38 16
a53 17
   match = (
	     (c1->visualType == c2->visualType) &&
	     (c1->transparentType == c2->transparentType) &&
	     (c1->transparentRed == c2->transparentRed) &&
	     (c1->transparentGreen == c2->transparentGreen) &&
	     (c1->transparentBlue == c2->transparentBlue) &&
	     (c1->transparentAlpha == c2->transparentAlpha) &&
	     (c1->transparentIndex == c2->transparentIndex) &&
	     (c1->visualCaveat == c2->visualCaveat) &&
	     (c1->drawableType == c2->drawableType) &&
	     (c1->renderType == c2->renderType) &&
#if 0	     
	     (c1->maxPbufferWidth == c2->maxPbufferWidth) &&
	     (c1->maxPbufferHeight == c2->maxPbufferHeight) &&
	     (c1->maxPbufferPixels == c2->maxPbufferPixels) &&
	     (c1->optimalPbufferWidth == c2->optimalPbufferWidth) &&
	     (c1->optimalPbufferHeight == c2->optimalPbufferHeight) &&
d55 36
a90 37
	     (c1->visualSelectGroup == c2->visualSelectGroup) &&
	     (c1->rgbMode == c2->rgbMode) &&
	     (c1->colorIndexMode == c2->colorIndexMode) &&
	     (c1->doubleBufferMode == c2->doubleBufferMode) &&
	     (c1->stereoMode == c2->stereoMode) &&
	     (c1->haveAccumBuffer == c2->haveAccumBuffer) &&
	     (c1->haveDepthBuffer == c2->haveDepthBuffer) &&
	     (c1->haveStencilBuffer == c2->haveStencilBuffer) &&
	     (c1->accumRedBits == c2->accumRedBits) &&
	     (c1->accumGreenBits == c2->accumGreenBits) &&
	     (c1->accumBlueBits == c2->accumBlueBits) &&
	     (c1->accumAlphaBits == c2->accumAlphaBits) &&
	     (c1->depthBits == c2->depthBits) &&
	     (c1->stencilBits == c2->stencilBits) &&
	     (c1->indexBits == c2->indexBits) &&
	     (c1->redBits == c2->redBits) &&
	     (c1->greenBits == c2->greenBits) &&
	     (c1->blueBits == c2->blueBits) &&
	     (c1->alphaBits == c2->alphaBits) &&
	     (c1->redMask == c2->redMask) &&
	     (c1->greenMask == c2->greenMask) &&
	     (c1->blueMask == c2->blueMask) &&
	     (c1->alphaMask == c2->alphaMask) &&
	     (c1->multiSampleSize == c2->multiSampleSize) &&
	     (c1->nMultiSampleBuffers == c2->nMultiSampleBuffers) &&
	     (c1->maxAuxBuffers == c2->maxAuxBuffers) &&
	     (c1->level == c2->level) &&
	     (c1->extendedRange == c2->extendedRange) &&
	     (c1->minRed == c2->minRed) &&
	     (c1->maxRed == c2->maxRed) &&
	     (c1->minGreen == c2->minGreen) &&
	     (c1->maxGreen == c2->maxGreen) &&
	     (c1->minBlue == c2->minBlue) &&
	     (c1->maxBlue == c2->maxBlue) &&
	     (c1->minAlpha == c2->minAlpha) &&
	     (c1->maxAlpha == c2->maxAlpha) 
	   );
d92 1
a92 1
   return match;
d95 2
a96 1
__GLXFBConfig *FindMatchingFBConfig( __GLXFBConfig *c, __GLXFBConfig *configs, int nconfigs )
d98 1
a98 1
   int i;
d100 4
a103 4
   for (i=0; i<nconfigs; i++) {
      if ( AreFBConfigsMatch( c, configs + i ) ) 
	 return configs + i;
   }
d105 1
a105 1
   return 0;
@


1.2
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d93 1
a93 1
   return( match );
d102 1
a102 1
	 return( configs + i );
d105 1
a105 1
   return(0);
@


1.1
log
@Initial revision
@
text
@d2 28
a29 33
** License Applicability. Except to the extent portions of this file are
** made subject to an alternative license as permitted in the SGI Free
** Software License B, Version 1.1 (the "License"), the contents of this
** file are subject only to the provisions of the License. You may not use
** this file except in compliance with the License. You may obtain a copy
** of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
** Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
**
** http://oss.sgi.com/projects/FreeB
**
** Note that, as provided in the License, the Software is distributed on an
** "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
** DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
** CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
** PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
**
** Original Code. The Original Code is: OpenGL Sample Implementation,
** Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
** Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
** Copyright in any portions created by third parties is as indicated
** elsewhere herein. All Rights Reserved.
**
** Additional Notice Provisions: The application programming interfaces
** established by SGI in conjunction with the Original Code are The
** OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
** April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
** 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
** Window System(R) (Version 1.3), released October 19, 1998. This software
** was created using the OpenGL(R) version 1.2.1 Sample Implementation
** published by SGI, but has not been independently verified as being
** compliant with the OpenGL(R) version 1.2.1 Specification.
**
*/
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
