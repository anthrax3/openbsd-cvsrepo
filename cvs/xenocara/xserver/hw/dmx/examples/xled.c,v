head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.18
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.16
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.14
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.10
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.6
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.06.10.13.21.22;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.19.44.23;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.17;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.22.48;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.22.48;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.02.44;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@/*
 * Copyright 2003 Red Hat Inc., Durham, North Carolina.
 *
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation on the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON-INFRINGEMENT.  IN NO EVENT SHALL RED HAT AND/OR THEIR SUPPLIERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Authors:
 *   Rickard E. (Rik) Faith <faith@@redhat.com>
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <X11/Xlib.h>
#include <X11/XKBlib.h>
#include <X11/extensions/XKB.h>
#include <X11/extensions/XKBstr.h>
#include <sys/time.h>

int
main(int argc, char **argv)
{
    Display *display = NULL;
    int mask = 0;
    unsigned i;
    XKeyboardState ks;
    XKeyboardControl kc;
    XkbDescPtr xkb;
    int old[32];

    if (argc == 2 || argc == 3) {
        if (!(display = XOpenDisplay(argv[1]))) {
            printf("Cannot open display %s\n", argv[1]);
            return -1;
        }
        if (argc >= 3)
            mask = strtol(argv[2], NULL, 0);
    }
    else {
        printf("Usage: %s display [mask]\n", argv[0]);
        return -1;
    }

    if (!display && !(display = XOpenDisplay(NULL))) {
        printf("Cannot open default display\n");
        return -1;
    }

    if (!(xkb = XkbAllocKeyboard())) {
        printf("Cannot allocate\n");
        return -1;
    }
    if (XkbGetIndicatorMap(display, XkbAllIndicatorsMask, xkb)) {
        printf("Cannot Get Indicators\n");
        return -1;
    }
    if (XkbGetNames(display, XkbAllNamesMask, xkb)) {
        printf("Cannot Get Names\n");
        return -1;
    }
    for (i = 0; i < XkbNumIndicators; i++) {
        if (xkb->indicators->phys_indicators & (1 << i)) {
            printf("led %d = %d\n", i, xkb->indicators->maps[i].flags);
            old[i] = xkb->indicators->maps[i].flags;
            xkb->indicators->maps[i].flags = XkbIM_NoAutomatic;
        }
    }
    printf("XkbSetIndicatorMap = %d\n", XkbSetIndicatorMap(display, ~0, xkb));
    XkbFreeKeyboard(xkb, 0, True);

    if (!(xkb = XkbAllocKeyboard())) {
        printf("Cannot allocate\n");
        return -1;
    }
    if (XkbGetIndicatorMap(display, XkbAllIndicatorsMask, xkb)) {
        printf("Cannot Get Indicators\n");
        return -1;
    }
    for (i = 0; i < XkbNumIndicators; i++) {
        if (xkb->indicators->phys_indicators & (1 << i))
            printf("led %d = %d\n", i, xkb->indicators->maps[i].flags);
    }

    printf("XGetKeyboardControl = %d\n", XGetKeyboardControl(display, &ks));
    printf("old mask = 0x%08lx\n", ks.led_mask);
    for (i = 0; i < 5; i++) {
        kc.led = i + 1;
        kc.led_mode = (mask & (1 << i)) ? LedModeOn : LedModeOff;
        printf("XChangeKeyboardControl = %d\n",
               XChangeKeyboardControl(display, KBLed | KBLedMode, &kc));
    }
    printf("XGetKeyboardControl = %d\n", XGetKeyboardControl(display, &ks));
    printf("new mask = 0x%08lx\n", ks.led_mask);

    for (i = 0; i < XkbNumIndicators; i++)
        if (xkb->indicators->phys_indicators & (i << 1))
            xkb->indicators->maps[i].flags = old[i];
    printf("XkbSetIndicatorMap = %d\n", XkbSetIndicatorMap(display, ~0, xkb));

    XkbFreeKeyboard(xkb, 0, True);
    XCloseDisplay(display);
    return 0;
}
@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d43 2
a44 1
int main(int argc, char **argv)
d46 7
a52 7
    Display              *display = NULL;
    int                  mask     = 0;
    unsigned             i;
    XKeyboardState       ks;
    XKeyboardControl     kc;
    XkbDescPtr           xkb;
    int                  old[32];
d59 4
a62 2
        if (argc >= 3) mask = strtol(argv[2], NULL, 0);
    } else {
d87 1
a87 1
            old[i]                         = xkb->indicators->maps[i].flags;
a93 1
    
d110 1
a110 1
        kc.led      = i + 1;
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d40 1
a40 1
#include "xkbstr.h"
@


1.1
log
@Initial revision
@
text
@a0 1
/* $XFree86$ */
d40 1
a40 1
#include <X11/extensions/XKBstr.h>
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d1 1
@

