head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.6
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.4
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.4
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.2
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.2
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.09.16.19.10.22;	author matthieu;	state Exp;
branches;
next	1.11;
commitid	Te1daavkBLskZ8gc;

1.11
date	2014.09.27.17.53.01;	author matthieu;	state Exp;
branches;
next	1.10;
commitid	cVXoV5PxI8YrEaVA;

1.10
date	2013.06.07.17.28.49;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2012.06.10.13.21.24;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2011.11.05.13.32.51;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2011.06.29.19.55.01;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.05.15.36.06;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.27.19.02.30;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.09.06.19.44.25;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.01.12.20.17.47;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.20;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.21.02;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.21.02;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.57.46;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@
/*
 * Copyright (c) 1997-2003 by The XFree86 Project, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name of the copyright holder(s)
 * and author(s) shall not be used in advertising or otherwise to promote
 * the sale, use or other dealings in this Software without prior written
 * authorization from the copyright holder(s) and author(s).
 */

/*
 * This file contains all the XFree86 global variables.
 */

#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#include <X11/X.h>
#include "os.h"
#include "windowstr.h"
#include "propertyst.h"
#include "xf86.h"
#include "xf86Priv.h"
#include "xf86Parser.h"
#include "xf86Xinput.h"
#include "xf86InPriv.h"
#include "xf86Config.h"

/* Globals that video drivers may access */

DevPrivateKeyRec xf86CreateRootWindowKeyRec;
DevPrivateKeyRec xf86ScreenKeyRec;

ScrnInfoPtr *xf86Screens = NULL;        /* List of ScrnInfos */
ScrnInfoPtr *xf86GPUScreens = NULL;        /* List of ScrnInfos */

const unsigned char byte_reversed[256] = {
    0x00, 0x80, 0x40, 0xc0, 0x20, 0xa0, 0x60, 0xe0,
    0x10, 0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70, 0xf0,
    0x08, 0x88, 0x48, 0xc8, 0x28, 0xa8, 0x68, 0xe8,
    0x18, 0x98, 0x58, 0xd8, 0x38, 0xb8, 0x78, 0xf8,
    0x04, 0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64, 0xe4,
    0x14, 0x94, 0x54, 0xd4, 0x34, 0xb4, 0x74, 0xf4,
    0x0c, 0x8c, 0x4c, 0xcc, 0x2c, 0xac, 0x6c, 0xec,
    0x1c, 0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c, 0xfc,
    0x02, 0x82, 0x42, 0xc2, 0x22, 0xa2, 0x62, 0xe2,
    0x12, 0x92, 0x52, 0xd2, 0x32, 0xb2, 0x72, 0xf2,
    0x0a, 0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a, 0xea,
    0x1a, 0x9a, 0x5a, 0xda, 0x3a, 0xba, 0x7a, 0xfa,
    0x06, 0x86, 0x46, 0xc6, 0x26, 0xa6, 0x66, 0xe6,
    0x16, 0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76, 0xf6,
    0x0e, 0x8e, 0x4e, 0xce, 0x2e, 0xae, 0x6e, 0xee,
    0x1e, 0x9e, 0x5e, 0xde, 0x3e, 0xbe, 0x7e, 0xfe,
    0x01, 0x81, 0x41, 0xc1, 0x21, 0xa1, 0x61, 0xe1,
    0x11, 0x91, 0x51, 0xd1, 0x31, 0xb1, 0x71, 0xf1,
    0x09, 0x89, 0x49, 0xc9, 0x29, 0xa9, 0x69, 0xe9,
    0x19, 0x99, 0x59, 0xd9, 0x39, 0xb9, 0x79, 0xf9,
    0x05, 0x85, 0x45, 0xc5, 0x25, 0xa5, 0x65, 0xe5,
    0x15, 0x95, 0x55, 0xd5, 0x35, 0xb5, 0x75, 0xf5,
    0x0d, 0x8d, 0x4d, 0xcd, 0x2d, 0xad, 0x6d, 0xed,
    0x1d, 0x9d, 0x5d, 0xdd, 0x3d, 0xbd, 0x7d, 0xfd,
    0x03, 0x83, 0x43, 0xc3, 0x23, 0xa3, 0x63, 0xe3,
    0x13, 0x93, 0x53, 0xd3, 0x33, 0xb3, 0x73, 0xf3,
    0x0b, 0x8b, 0x4b, 0xcb, 0x2b, 0xab, 0x6b, 0xeb,
    0x1b, 0x9b, 0x5b, 0xdb, 0x3b, 0xbb, 0x7b, 0xfb,
    0x07, 0x87, 0x47, 0xc7, 0x27, 0xa7, 0x67, 0xe7,
    0x17, 0x97, 0x57, 0xd7, 0x37, 0xb7, 0x77, 0xf7,
    0x0f, 0x8f, 0x4f, 0xcf, 0x2f, 0xaf, 0x6f, 0xef,
    0x1f, 0x9f, 0x5f, 0xdf, 0x3f, 0xbf, 0x7f, 0xff,
};

/* Globals that input drivers may access */
InputInfoPtr xf86InputDevs = NULL;

/* Globals that video drivers may not access */

xf86InfoRec xf86Info = {
    .consoleFd = -1,
    .vtno = -1,
    .lastEventTime = -1,
    .vtRequestsPending = FALSE,
#ifdef sun
    .vtPendingNum = -1,
#endif
    .dontVTSwitch = FALSE,
    .autoVTSwitch = TRUE,
    .ShareVTs = FALSE,
    .dontZap = FALSE,
    .dontZoom = FALSE,
    .notrapSignals = FALSE,
    .caughtSignal = FALSE,
    .currentScreen = NULL,
#ifdef CSRG_BASED
    .consType = -1,
#endif
    .allowMouseOpenFail = FALSE,
    .vidModeEnabled = TRUE,
    .vidModeAllowNonLocal = FALSE,
    .miscModInDevEnabled = TRUE,
    .miscModInDevAllowNonLocal = FALSE,
    .pixmap24 = Pix24DontCare,
    .pix24From = X_DEFAULT,
    .pmFlag = TRUE,
    .disableRandR = FALSE,
    .randRFrom = X_DEFAULT,
#if defined(CONFIG_HAL) || defined(CONFIG_UDEV) || defined(CONFIG_WSCONS)
    .forceInputDevices = FALSE,
    .autoAddDevices = TRUE,
    .autoEnableDevices = TRUE,
#else
    .forceInputDevices = TRUE,
    .autoAddDevices = FALSE,
    .autoEnableDevices = FALSE,
#endif
#if defined(CONFIG_UDEV_KMS)
    .autoAddGPU = TRUE,
#else
    .autoAddGPU = FALSE,
#endif
};

const char *xf86ConfigFile = NULL;
const char *xf86ConfigDir = NULL;
const char *xf86ModulePath = DEFAULT_MODULE_PATH;
MessageType xf86ModPathFrom = X_DEFAULT;
const char *xf86LogFile = DEFAULT_LOGDIR "/" DEFAULT_LOGPREFIX;
MessageType xf86LogFileFrom = X_DEFAULT;
Bool xf86LogFileWasOpened = FALSE;
serverLayoutRec xf86ConfigLayout = { NULL, };
confDRIRec xf86ConfigDRI = { 0, };

XF86ConfigPtr xf86configptr = NULL;
Bool xf86Resetting = FALSE;
Bool xf86Initialising = FALSE;
Bool xf86DoConfigure = FALSE;
Bool xf86DoShowOptions = FALSE;
DriverPtr *xf86DriverList = NULL;
int xf86NumDrivers = 0;
InputDriverPtr *xf86InputDriverList = NULL;
int xf86NumInputDrivers = 0;
int xf86NumScreens = 0;
int xf86NumGPUScreens = 0;

const char *xf86VisualNames[] = {
    "StaticGray",
    "GrayScale",
    "StaticColor",
    "PseudoColor",
    "TrueColor",
    "DirectColor"
};

/* Parameters set only from the command line */
const char *xf86ServerName = "no-name";
Bool xf86fpFlag = FALSE;
Bool xf86sFlag = FALSE;
Bool xf86bsEnableFlag = FALSE;
Bool xf86bsDisableFlag = FALSE;
Bool xf86silkenMouseDisableFlag = FALSE;
Bool xf86xkbdirFlag = FALSE;

#ifdef HAVE_ACPI
Bool xf86acpiDisableFlag = FALSE;
#endif
char *xf86LayoutName = NULL;
char *xf86ScreenName = NULL;
char *xf86PointerName = NULL;
char *xf86KeyboardName = NULL;
int xf86Verbose = DEFAULT_VERBOSE;
int xf86LogVerbose = DEFAULT_LOG_VERBOSE;
int xf86FbBpp = -1;
Pix24Flags xf86Pix24 = Pix24DontCare;
int xf86Depth = -1;
rgb xf86Weight = { 0, 0, 0 };

Bool xf86FlipPixels = FALSE;
Gamma xf86Gamma = { 0.0, 0.0, 0.0 };

Bool xf86AllowMouseOpenFail = FALSE;

#ifdef XF86VIDMODE
Bool xf86VidModeDisabled = FALSE;
Bool xf86VidModeAllowNonLocal = FALSE;
#endif
RootWinPropPtr *xf86RegisteredPropertiesTable = NULL;
Bool xorgHWAccess = FALSE;
@


1.11
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@a122 1
    .log = LogNone,
@


1.10
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d146 1
a146 1
const char *xf86LogFile = DEFAULT_LOGPREFIX;
@


1.9
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d54 1
d129 1
a129 1
    .autoEnableDevices = TRUE
d133 6
a138 1
    .autoEnableDevices = FALSE
d162 1
@


1.8
log
@Update to xserver 1.11.2
@
text
@d53 3
a55 3
ScrnInfoPtr *xf86Screens = NULL;	/* List of ScrnInfos */
const unsigned char byte_reversed[256] =
{
a92 1

d96 4
a99 5
    .consoleFd                  = -1,
    .vtno                       = -1,
    .vtSysreq                   = FALSE,
    .lastEventTime              = -1,
    .vtRequestsPending          = FALSE,
d101 1
a101 1
    .vtPendingNum               = -1,
d103 8
a110 6
    .dontVTSwitch               = FALSE,
    .dontZap                    = FALSE,
    .dontZoom                   = FALSE,
    .notrapSignals              = FALSE,
    .caughtSignal               = FALSE,
    .currentScreen              = NULL,
d112 1
a112 12
    .screenFd                   = -1,
    .consType                   = -1,
#endif
    .allowMouseOpenFail         = FALSE,
    .vidModeEnabled             = TRUE,
    .vidModeAllowNonLocal       = FALSE,
    .miscModInDevEnabled        = TRUE,
    .miscModInDevAllowNonLocal  = FALSE,
    .pixmap24                   = Pix24DontCare,
    .pix24From                  = X_DEFAULT,
#ifdef SUPPORT_PC98
    .pc98                       = FALSE,
d114 11
a124 4
    .pmFlag                     = TRUE,
    .log                        = LogNone,
    .disableRandR               = FALSE,
    .randRFrom                  = X_DEFAULT,
d126 3
a128 3
    .forceInputDevices          = FALSE,
    .autoAddDevices             = TRUE,
    .autoEnableDevices          = TRUE
d130 3
a132 3
    .forceInputDevices          = TRUE,
    .autoAddDevices             = FALSE,
    .autoEnableDevices          = FALSE
d135 1
d143 3
a145 2
serverLayoutRec xf86ConfigLayout = {NULL, };
confDRIRec xf86ConfigDRI = {0, };
d158 6
a163 6
	"StaticGray",
	"GrayScale",
	"StaticColor",
	"PseudoColor",
	"TrueColor",
	"DirectColor"
d167 1
a167 1
char *xf86ServerName = "no-name";
d174 1
d187 2
a188 1
rgb xf86Weight = {0, 0, 0};
d190 2
a191 1
Gamma xf86Gamma = {0.0, 0.0, 0.0};
d193 1
@


1.7
log
@Introduce new autoconfiguration code for X input drivers, based on X
hotplug framework.This also takes care of the configuration of the
keyboard layout from the wscons layout that was hacked inside the
keyboard driver.

Tested by many, ok oga@@.
@
text
@a51 1
DevPrivateKeyRec xf86PixmapKeyRec;
a126 1
    .kbdCustomKeycodes          = FALSE,
d130 1
a130 1
    .allowEmptyInput            = TRUE,
d134 1
a134 1
    .allowEmptyInput            = FALSE,
a196 1
Bool xf86inSuspend = FALSE;
a197 4

struct pci_slot_match xf86IsolateDevice = {
    PCI_MATCH_ANY, PCI_MATCH_ANY, PCI_MATCH_ANY, PCI_MATCH_ANY, 0
};
@


1.6
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d131 1
a131 1
#if defined(CONFIG_HAL) || defined(CONFIG_UDEV)
@


1.5
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d50 4
a53 8
/* Index into pScreen.devPrivates */
static int xf86CreateRootWindowKeyIndex;
DevPrivateKey xf86CreateRootWindowKey = &xf86CreateRootWindowKeyIndex;
/* Index of ScrnInfo in pScreen.devPrivates */
static int xf86ScreenKeyIndex;
DevPrivateKey xf86ScreenKey = &xf86ScreenKeyIndex;
static int xf86PixmapKeyIndex;
DevPrivateKey xf86PixmapKey = &xf86PixmapKeyIndex;
@


1.4
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d46 1
d55 1
a55 1
_X_EXPORT DevPrivateKey xf86ScreenKey = &xf86ScreenKeyIndex;
d57 3
a59 3
_X_EXPORT DevPrivateKey xf86PixmapKey = &xf86PixmapKeyIndex;
_X_EXPORT ScrnInfoPtr *xf86Screens = NULL;	/* List of ScrnInfos */
_X_EXPORT const unsigned char byte_reversed[256] =
a104 1
    .ddxSpecialKeys             = SKWhenNeeded,
d107 3
d127 1
a127 1
#ifdef __i386__
d135 1
a135 1
#ifdef CONFIG_HAL
d146 1
a146 1
const char *xf86InputDeviceList = NULL;
d153 1
a153 1
_X_EXPORT confDRIRec xf86ConfigDRI = {0, };
a156 1
Bool xf86DoProbe = FALSE;
a158 1
Bool xf86DoModalias = FALSE;
a188 1
Bool xf86ProbeOnly = FALSE;
d203 1
a203 1
_X_EXPORT Bool xf86inSuspend = FALSE;
@


1.3
log
@Update to xserver 1.5.3 + latests commits on server-1.5-branch.
tested by stsp@@, david@@, form@@, ckuethe@@, oga@@. thanks.
@
text
@d50 2
a51 1
DevPrivateKey xf86CreateRootWindowKey = &xf86CreateRootWindowKey;
d53 4
a56 2
_X_EXPORT DevPrivateKey xf86ScreenKey = &xf86ScreenKey;
_X_EXPORT DevPrivateKey xf86PixmapKey = &xf86PixmapKey;
d101 12
a112 18
	-1,		/* consoleFd */
	-1,		/* vtno */
	FALSE,		/* vtSysreq */
	SKWhenNeeded,	/* ddxSpecialKeys */
	NULL,		/* pMouse */
#ifdef XINPUT
	NULL,		/* mouseLocal */
#endif
	-1,		/* lastEventTime */
	FALSE,		/* vtRequestsPending */
	FALSE,		/* inputPending */
	FALSE,		/* dontVTSwitch */
	FALSE,		/* dontZap */
	FALSE,		/* dontZoom */
	FALSE,		/* notrapSignals */
	FALSE,		/* caughtSignal */
	FALSE,		/* sharedMonitor */
	NULL,		/* currentScreen */
d114 2
a115 2
	-1,		/* screenFd */
	-1,		/* consType */
d117 7
a123 8
	FALSE,		/* allowMouseOpenFail */
	TRUE,		/* vidModeEnabled */
	FALSE,		/* vidModeAllowNonLocal */
	TRUE,		/* miscModInDevEnabled */
	FALSE,		/* miscModInDevAllowNonLocal */
	PCIOsConfig,	/* pciFlags */
	Pix24DontCare,	/* pixmap24 */
	X_DEFAULT,	/* pix24From */
d125 15
a139 1
	FALSE,		/* pc98 */
a140 6
	TRUE,		/* pmFlag */
	LogNone,	/* syncLog */
	0,		/* estimateSizesAggressively */
	FALSE,		/* kbdCustomKeycodes */
	FALSE,		/* disableRandR */
	X_DEFAULT	/* randRFrom */
d156 1
a175 1
Bool xf86coFlag = FALSE;
d180 1
a196 2
Bool xf86ShowUnresolved = DEFAULT_UNRESOLVED;
Bool xf86BestRefresh = DEFAULT_BEST_REFRESH;
a200 4
#endif
#ifdef XF86MISC
Bool xf86MiscModInDevDisabled = FALSE;
Bool xf86MiscModInDevAllowNonLocal = FALSE;
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d152 1
@


1.1
log
@Initial revision
@
text
@d49 5
a53 2
_X_EXPORT int xf86ScreenIndex = -1;	/* Index of ScrnInfo in pScreen.devPrivates */
int xf86CreateRootWindowIndex = -1;	/* Index into pScreen.devPrivates */
a54 1
_X_EXPORT int xf86PixmapIndex = 0;
a97 3
	NULL,		/* pKeyboard */
	NULL,		/* kbdProc */
	NULL,		/* kbdEvents */
a98 1
	-1,		/* kbdFd */
a99 15
	-1,		/* kbdType */
	-1,		/* kbdRate */
	-1, 		/* kbdDelay */
	-1,		/* bell_pitch */
	-1,		/* bell_duration */
	TRUE,		/* autoRepeat */
	0,		/* leds */
	0,		/* xleds */
	NULL,		/* vtinit */
	0,		/* scanPrefix */
	FALSE,		/* capsLock */
	FALSE,		/* numLock */
	FALSE,		/* scrollLock */
	FALSE,		/* modeSwitchLock */
	FALSE,		/* composeLock */
a101 7
	FALSE,		/* ActionKeyBindingsSet */
#if defined(SVR4) && defined(i386)
	FALSE,		/* panix106 */
#endif
#if defined(__OpenBSD__) || defined(__NetBSD__)
	0,		/* wskbdType */
#endif
a119 14
#ifdef XKB
	NULL,		/* xkbkeymap */
	NULL,		/* xkbkeycodes */
	NULL,		/* xkbtypes */
	NULL,		/* xkbcompat */
	NULL,		/* xkbsymbols */
	NULL,		/* xkbgeometry */
	FALSE,		/* xkbcomponents_specified */
	NULL,		/* xkbrules */
	NULL,		/* xkbmodel */
	NULL,		/* xkblayout */
	NULL,		/* xkbvariant */
	NULL,		/* xkboptions */
#endif
d128 1
a128 1
#if defined(i386) || defined(__i386__)
a149 1
Bool xf86ProbeFailed = FALSE;
a155 2
ModuleInfoPtr *xf86ModuleInfoList = NULL;
int xf86NumModuleInfos = 0;
d205 4
a208 1
PciBusId xf86IsolateDevice;
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d96 3
d100 1
d102 8
d111 6
d119 7
d144 14
d188 1
@

