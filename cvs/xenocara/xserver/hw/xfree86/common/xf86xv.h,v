head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.8
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.09.16.19.10.22;	author matthieu;	state Exp;
branches;
next	1.6;
commitid	Te1daavkBLskZ8gc;

1.6
date	2014.09.27.17.53.01;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	cVXoV5PxI8YrEaVA;

1.5
date	2013.06.07.17.28.49;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.10.13.21.24;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.05.13.32.51;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.31;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.21.18;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.21.18;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.57.40;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@
/*
 * Copyright (c) 1998-2003 by The XFree86 Project, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name of the copyright holder(s)
 * and author(s) shall not be used in advertising or otherwise to promote
 * the sale, use or other dealings in this Software without prior written
 * authorization from the copyright holder(s) and author(s).
 */

#ifndef _XF86XV_H_
#define _XF86XV_H_

#include "xvdix.h"
#include "xf86str.h"

#define VIDEO_OVERLAID_IMAGES			0x00000004
#define VIDEO_OVERLAID_STILLS			0x00000008
/*
 * Usage of VIDEO_CLIP_TO_VIEWPORT is not recommended.
 * It can make reput behaviour inconsistent.
 */
#define VIDEO_CLIP_TO_VIEWPORT			0x00000010

typedef XvImageRec XF86ImageRec, *XF86ImagePtr;

typedef struct {
    ScrnInfoPtr pScrn;
    int id;
    unsigned short width, height;
    int *pitches;               /* bytes */
    int *offsets;               /* in bytes from start of framebuffer */
    DevUnion devPrivate;
} XF86SurfaceRec, *XF86SurfacePtr;

typedef int (*PutVideoFuncPtr) (ScrnInfoPtr pScrn,
                                short vid_x, short vid_y, short drw_x,
                                short drw_y, short vid_w, short vid_h,
                                short drw_w, short drw_h, RegionPtr clipBoxes,
                                void *data, DrawablePtr pDraw);
typedef int (*PutStillFuncPtr) (ScrnInfoPtr pScrn, short vid_x, short vid_y,
                                short drw_x, short drw_y, short vid_w,
                                short vid_h, short drw_w, short drw_h,
                                RegionPtr clipBoxes, void *data,
                                DrawablePtr pDraw);
typedef int (*GetVideoFuncPtr) (ScrnInfoPtr pScrn, short vid_x, short vid_y,
                                short drw_x, short drw_y, short vid_w,
                                short vid_h, short drw_w, short drw_h,
                                RegionPtr clipBoxes, void *data,
                                DrawablePtr pDraw);
typedef int (*GetStillFuncPtr) (ScrnInfoPtr pScrn, short vid_x, short vid_y,
                                short drw_x, short drw_y, short vid_w,
                                short vid_h, short drw_w, short drw_h,
                                RegionPtr clipBoxes, void *data,
                                DrawablePtr pDraw);
typedef void (*StopVideoFuncPtr) (ScrnInfoPtr pScrn, void *data, Bool Exit);
typedef int (*SetPortAttributeFuncPtr) (ScrnInfoPtr pScrn, Atom attribute,
                                        INT32 value, void *data);
typedef int (*GetPortAttributeFuncPtr) (ScrnInfoPtr pScrn, Atom attribute,
                                        INT32 *value, void *data);
typedef void (*QueryBestSizeFuncPtr) (ScrnInfoPtr pScrn, Bool motion,
                                      short vid_w, short vid_h, short drw_w,
                                      short drw_h, unsigned int *p_w,
                                      unsigned int *p_h, void *data);
typedef int (*PutImageFuncPtr) (ScrnInfoPtr pScrn, short src_x, short src_y,
                                short drw_x, short drw_y, short src_w,
                                short src_h, short drw_w, short drw_h,
                                int image, unsigned char *buf, short width,
                                short height, Bool Sync, RegionPtr clipBoxes,
                                void *data, DrawablePtr pDraw);
typedef int (*ReputImageFuncPtr) (ScrnInfoPtr pScrn, short src_x, short src_y,
                                  short drw_x, short drw_y, short src_w,
                                  short src_h, short drw_w, short drw_h,
                                  RegionPtr clipBoxes, void *data,
                                  DrawablePtr pDraw);
typedef int (*QueryImageAttributesFuncPtr) (ScrnInfoPtr pScrn, int image,
                                            unsigned short *width,
                                            unsigned short *height,
                                            int *pitches, int *offsets);

typedef enum {
    XV_OFF,
    XV_PENDING,
    XV_ON
} XvStatus;

/*** this is what the driver needs to fill out ***/

typedef struct {
    int id;
    const char *name;
    unsigned short width, height;
    XvRationalRec rate;
} XF86VideoEncodingRec, *XF86VideoEncodingPtr;

typedef struct {
    char depth;
    short class;
} XF86VideoFormatRec, *XF86VideoFormatPtr;

typedef XvAttributeRec XF86AttributeRec, *XF86AttributePtr;

typedef struct {
    unsigned int type;
    int flags;
    const char *name;
    int nEncodings;
    XF86VideoEncodingPtr pEncodings;
    int nFormats;
    XF86VideoFormatPtr pFormats;
    int nPorts;
    DevUnion *pPortPrivates;
    int nAttributes;
    XF86AttributePtr pAttributes;
    int nImages;
    XF86ImagePtr pImages;
    PutVideoFuncPtr PutVideo;
    PutStillFuncPtr PutStill;
    GetVideoFuncPtr GetVideo;
    GetStillFuncPtr GetStill;
    StopVideoFuncPtr StopVideo;
    SetPortAttributeFuncPtr SetPortAttribute;
    GetPortAttributeFuncPtr GetPortAttribute;
    QueryBestSizeFuncPtr QueryBestSize;
    PutImageFuncPtr PutImage;
    ReputImageFuncPtr ReputImage;       /* image/still */
    QueryImageAttributesFuncPtr QueryImageAttributes;
} XF86VideoAdaptorRec, *XF86VideoAdaptorPtr;

typedef struct {
    XF86ImagePtr image;
    int flags;
    int (*alloc_surface) (ScrnInfoPtr pScrn,
                          int id,
                          unsigned short width,
                          unsigned short height, XF86SurfacePtr surface);
    int (*free_surface) (XF86SurfacePtr surface);
    int (*display) (XF86SurfacePtr surface,
                    short vid_x, short vid_y,
                    short drw_x, short drw_y,
                    short vid_w, short vid_h,
                    short drw_w, short drw_h, RegionPtr clipBoxes);
    int (*stop) (XF86SurfacePtr surface);
    int (*getAttribute) (ScrnInfoPtr pScrn, Atom attr, INT32 *value);
    int (*setAttribute) (ScrnInfoPtr pScrn, Atom attr, INT32 value);
    int max_width;
    int max_height;
    int num_attributes;
    XF86AttributePtr attributes;
} XF86OffscreenImageRec, *XF86OffscreenImagePtr;

extern _X_EXPORT Bool
 xf86XVScreenInit(ScreenPtr pScreen, XF86VideoAdaptorPtr * Adaptors, int num);

typedef int (*xf86XVInitGenericAdaptorPtr) (ScrnInfoPtr pScrn,
                                            XF86VideoAdaptorPtr ** Adaptors);

extern _X_EXPORT int
 xf86XVRegisterGenericAdaptorDriver(xf86XVInitGenericAdaptorPtr InitFunc);

extern _X_EXPORT int
 xf86XVListGenericAdaptors(ScrnInfoPtr pScrn, XF86VideoAdaptorPtr ** Adaptors);

extern _X_EXPORT Bool

xf86XVRegisterOffscreenImages(ScreenPtr pScreen,
                              XF86OffscreenImagePtr images, int num);

extern _X_EXPORT XF86OffscreenImagePtr
xf86XVQueryOffscreenImages(ScreenPtr pScreen, int *num);

extern _X_EXPORT XF86VideoAdaptorPtr xf86XVAllocateVideoAdaptorRec(ScrnInfoPtr
                                                                   pScrn);

extern _X_EXPORT void xf86XVFreeVideoAdaptorRec(XF86VideoAdaptorPtr ptr);

extern _X_EXPORT void
 xf86XVFillKeyHelper(ScreenPtr pScreen, CARD32 key, RegionPtr clipboxes);

extern _X_EXPORT void

xf86XVFillKeyHelperDrawable(DrawablePtr pDraw, CARD32 key, RegionPtr clipboxes);

extern _X_EXPORT void

xf86XVFillKeyHelperPort(DrawablePtr pDraw, void *data, CARD32 key,
                        RegionPtr clipboxes, Bool fillEverything);

extern _X_EXPORT Bool

xf86XVClipVideoHelper(BoxPtr dst,
                      INT32 *xa,
                      INT32 *xb,
                      INT32 *ya,
                      INT32 *yb, RegionPtr reg, INT32 width, INT32 height);

extern _X_EXPORT void

xf86XVCopyYUV12ToPacked(const void *srcy,
                        const void *srcv,
                        const void *srcu,
                        void *dst,
                        int srcPitchy,
                        int srcPitchuv, int dstPitch, int h, int w);

extern _X_EXPORT void

xf86XVCopyPacked(const void *src,
                 void *dst, int srcPitch, int dstPitch, int h, int w);

#endif                          /* _XF86XV_H_ */
@


1.6
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@a34 2
#define VIDEO_NO_CLIPPING			0x00000001
#define VIDEO_INVERT_CLIPLIST			0x00000002
d43 1
a43 28
typedef struct {
    int id;
    int type;
    int byte_order;
    unsigned char guid[16];
    int bits_per_pixel;
    int format;
    int num_planes;

    /* for RGB formats only */
    int depth;
    unsigned int red_mask;
    unsigned int green_mask;
    unsigned int blue_mask;

    /* for YUV formats only */
    unsigned int y_sample_bits;
    unsigned int u_sample_bits;
    unsigned int v_sample_bits;
    unsigned int horz_y_period;
    unsigned int horz_u_period;
    unsigned int horz_v_period;
    unsigned int vert_y_period;
    unsigned int vert_u_period;
    unsigned int vert_v_period;
    char component_order[32];
    int scanline_order;
} XF86ImageRec, *XF86ImagePtr;
a97 2
typedef void (*ClipNotifyFuncPtr) (ScrnInfoPtr pScrn, void *data,
                                   WindowPtr window, int dx, int dy);
d119 1
a119 6
typedef struct {
    int flags;
    int min_value;
    int max_value;
    const char *name;
} XF86AttributeRec, *XF86AttributePtr;
a145 1
    ClipNotifyFuncPtr ClipNotify;
@


1.5
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d87 1
a87 1
                                pointer data, DrawablePtr pDraw);
d91 1
a91 1
                                RegionPtr clipBoxes, pointer data,
d96 1
a96 1
                                RegionPtr clipBoxes, pointer data,
d101 1
a101 1
                                RegionPtr clipBoxes, pointer data,
d103 1
a103 1
typedef void (*StopVideoFuncPtr) (ScrnInfoPtr pScrn, pointer data, Bool Exit);
d105 1
a105 1
                                        INT32 value, pointer data);
d107 1
a107 1
                                        INT32 *value, pointer data);
d111 1
a111 1
                                      unsigned int *p_h, pointer data);
d117 1
a117 1
                                pointer data, DrawablePtr pDraw);
d121 1
a121 1
                                  RegionPtr clipBoxes, pointer data,
d127 1
a127 1
typedef void (*ClipNotifyFuncPtr) (ScrnInfoPtr pScrn, pointer data,
d140 1
a140 1
    char *name;
d154 1
a154 1
    char *name;
d160 1
a160 1
    char *name;
d241 1
a241 1
xf86XVFillKeyHelperPort(DrawablePtr pDraw, pointer data, CARD32 key,
@


1.4
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@a265 4
extern _X_EXPORT DevPrivateKey (*XvGetScreenKeyProc) (void);
extern _X_EXPORT unsigned long (*XvGetRTPortProc) (void);
extern _X_EXPORT int (*XvScreenInitProc) (ScreenPtr);

@


1.3
log
@Update to xserver 1.11.2
@
text
@d46 35
a80 36
  int id;
  int type;
  int byte_order;
  unsigned char guid[16];               
  int bits_per_pixel;
  int format;
  int num_planes;

  /* for RGB formats only */
  int depth;
  unsigned int red_mask;       
  unsigned int green_mask;   
  unsigned int blue_mask;   

  /* for YUV formats only */
  unsigned int y_sample_bits;
  unsigned int u_sample_bits;
  unsigned int v_sample_bits;   
  unsigned int horz_y_period;
  unsigned int horz_u_period;
  unsigned int horz_v_period;
  unsigned int vert_y_period;
  unsigned int vert_u_period;
  unsigned int vert_v_period;
  char component_order[32];
  int scanline_order;
} XF86ImageRec, *XF86ImagePtr; 


typedef struct {
  ScrnInfoPtr pScrn;
  int id;
  unsigned short width, height;
  int *pitches; /* bytes */
  int *offsets; /* in bytes from start of framebuffer */
  DevUnion devPrivate;  
d83 46
a128 39

typedef int (* PutVideoFuncPtr)( ScrnInfoPtr pScrn, 
	short vid_x, short vid_y, short drw_x, short drw_y,
	short vid_w, short vid_h, short drw_w, short drw_h,
	RegionPtr clipBoxes, pointer data, DrawablePtr pDraw );
typedef int (* PutStillFuncPtr)( ScrnInfoPtr pScrn, 
	short vid_x, short vid_y, short drw_x, short drw_y,
	short vid_w, short vid_h, short drw_w, short drw_h,
	RegionPtr clipBoxes, pointer data, DrawablePtr pDraw );
typedef int (* GetVideoFuncPtr)( ScrnInfoPtr pScrn, 
	short vid_x, short vid_y, short drw_x, short drw_y,
	short vid_w, short vid_h, short drw_w, short drw_h,
	RegionPtr clipBoxes, pointer data, DrawablePtr pDraw );
typedef int (* GetStillFuncPtr)( ScrnInfoPtr pScrn, 
	short vid_x, short vid_y, short drw_x, short drw_y,
	short vid_w, short vid_h, short drw_w, short drw_h,
	RegionPtr clipBoxes, pointer data, DrawablePtr pDraw );
typedef void (* StopVideoFuncPtr)(ScrnInfoPtr pScrn, pointer data, Bool Exit);
typedef int (* SetPortAttributeFuncPtr)(ScrnInfoPtr pScrn, Atom attribute,
	INT32 value, pointer data);
typedef int (* GetPortAttributeFuncPtr)(ScrnInfoPtr pScrn, Atom attribute,
	INT32 *value, pointer data);
typedef void (* QueryBestSizeFuncPtr)(ScrnInfoPtr pScrn, Bool motion,
	short vid_w, short vid_h, short drw_w, short drw_h, 
	unsigned int *p_w, unsigned int *p_h, pointer data);
typedef int (* PutImageFuncPtr)( ScrnInfoPtr pScrn, 
	short src_x, short src_y, short drw_x, short drw_y,
	short src_w, short src_h, short drw_w, short drw_h,
	int image, unsigned char* buf, short width, short height, Bool Sync,
	RegionPtr clipBoxes, pointer data, DrawablePtr pDraw );
typedef int (* ReputImageFuncPtr)( ScrnInfoPtr pScrn,
	short src_x, short src_y, short drw_x, short drw_y,
	short src_w, short src_h, short drw_w, short drw_h,
	RegionPtr clipBoxes, pointer data, DrawablePtr pDraw );
typedef int (*QueryImageAttributesFuncPtr)(ScrnInfoPtr pScrn, 
	int image, unsigned short *width, unsigned short *height, 
	int *pitches, int *offsets);
typedef void (*ClipNotifyFuncPtr)(ScrnInfoPtr pScrn, pointer data,
                                  WindowPtr window, int dx, int dy);
d139 4
a142 4
  int id;
  char *name;
  unsigned short width, height;
  XvRationalRec rate;
d146 2
a147 2
  char 	depth;  
  short class;
d151 4
a154 4
  int   flags;
  int   min_value;
  int   max_value;
  char  *name;
d158 25
a182 25
  unsigned int type; 
  int flags;
  char *name;
  int nEncodings;
  XF86VideoEncodingPtr pEncodings;  
  int nFormats;
  XF86VideoFormatPtr pFormats;  
  int nPorts;
  DevUnion *pPortPrivates;
  int nAttributes;
  XF86AttributePtr pAttributes;
  int nImages;
  XF86ImagePtr pImages;
  PutVideoFuncPtr PutVideo;
  PutStillFuncPtr PutStill;
  GetVideoFuncPtr GetVideo;
  GetStillFuncPtr GetStill;
  StopVideoFuncPtr StopVideo;
  SetPortAttributeFuncPtr SetPortAttribute;
  GetPortAttributeFuncPtr GetPortAttribute;
  QueryBestSizeFuncPtr QueryBestSize;
  PutImageFuncPtr PutImage;
  ReputImageFuncPtr ReputImage; /* image/still */
  QueryImageAttributesFuncPtr QueryImageAttributes;
  ClipNotifyFuncPtr ClipNotify;
d186 19
a204 21
  XF86ImagePtr image;
  int flags;
  int (*alloc_surface)(ScrnInfoPtr pScrn,
		  int id,
		  unsigned short width, 	
		  unsigned short height,
		  XF86SurfacePtr surface);
  int (*free_surface)(XF86SurfacePtr surface);
  int (*display) (XF86SurfacePtr surface,
		  short vid_x, short vid_y, 
		  short drw_x, short drw_y,
		  short vid_w, short vid_h, 
		  short drw_w, short drw_h,
		  RegionPtr clipBoxes);
  int (*stop)    (XF86SurfacePtr surface);
  int (*getAttribute) (ScrnInfoPtr pScrn, Atom attr, INT32 *value);
  int (*setAttribute) (ScrnInfoPtr pScrn, Atom attr, INT32 value);
  int max_width;
  int max_height;
  int num_attributes;
  XF86AttributePtr attributes;
d208 1
a208 5
xf86XVScreenInit(
   ScreenPtr pScreen, 
   XF86VideoAdaptorPtr 	*Adaptors,
   int num
);
d210 2
a211 2
typedef int (* xf86XVInitGenericAdaptorPtr)(ScrnInfoPtr pScrn,
	XF86VideoAdaptorPtr **Adaptors);
d214 1
a214 3
xf86XVRegisterGenericAdaptorDriver(
    xf86XVInitGenericAdaptorPtr InitFunc
);
d217 1
a217 4
xf86XVListGenericAdaptors(
    ScrnInfoPtr          pScrn,
    XF86VideoAdaptorPtr  **Adaptors
);
d220 3
a222 5
xf86XVRegisterOffscreenImages(
   ScreenPtr pScreen,
   XF86OffscreenImagePtr images,
   int num
);
d225 4
a228 6
xf86XVQueryOffscreenImages(
   ScreenPtr pScreen,
   int *num
);
   
extern _X_EXPORT XF86VideoAdaptorPtr xf86XVAllocateVideoAdaptorRec(ScrnInfoPtr pScrn);
d233 1
a233 1
xf86XVFillKeyHelper (ScreenPtr pScreen, CARD32 key, RegionPtr clipboxes);
d236 2
a237 1
xf86XVFillKeyHelperDrawable (DrawablePtr pDraw, CARD32 key, RegionPtr clipboxes);
d240 3
a242 1
xf86XVFillKeyHelperPort (DrawablePtr pDraw, pointer data, CARD32 key, RegionPtr clipboxes, Bool fillEverything);
d245 6
a250 10
xf86XVClipVideoHelper(
    BoxPtr dst,
    INT32 *xa,
    INT32 *xb,
    INT32 *ya,
    INT32 *yb,
    RegionPtr reg,
    INT32 width,
    INT32 height
);
d253 7
a259 11
xf86XVCopyYUV12ToPacked(
    const void *srcy,
    const void *srcv,
    const void *srcu,
    void *dst,
    int srcPitchy,
    int srcPitchuv,
    int dstPitch,
    int h,
    int w
);
a261 12
xf86XVCopyPacked(
    const void *src,
    void *dst,
    int srcPitch,
    int dstPitch,
    int h,
    int w
);

extern _X_EXPORT DevPrivateKey (*XvGetScreenKeyProc)(void);
extern _X_EXPORT unsigned long (*XvGetRTPortProc)(void);
extern _X_EXPORT int (*XvScreenInitProc)(ScreenPtr);
d263 8
a270 1
#endif  /* _XF86XV_H_ */
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d39 4
d114 3
a116 1
typedef int (* ReputImageFuncPtr)( ScrnInfoPtr pScrn, short drw_x, short drw_y,
d174 1
a174 1
  ReputImageFuncPtr ReputImage;
d246 3
@


1.1
log
@Initial revision
@
text
@d115 2
d170 1
d197 1
a197 1
Bool
d207 1
a207 1
int
d212 1
a212 1
int
d218 1
a218 1
Bool 
d225 1
a225 1
XF86OffscreenImagePtr
d231 1
a231 1
XF86VideoAdaptorPtr xf86XVAllocateVideoAdaptorRec(ScrnInfoPtr pScrn);
d233 1
a233 1
void xf86XVFreeVideoAdaptorRec(XF86VideoAdaptorPtr ptr);
d235 1
a235 1
void
d238 4
a241 1
Bool
d253 1
a253 1
void
d266 1
a266 1
void
d275 4
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@a234 3
void
xf86XVFillKeyHelperDrawable (DrawablePtr pDraw, CARD32 key, RegionPtr clipboxes);

@

