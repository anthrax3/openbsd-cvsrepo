head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.10
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2014.09.27.17.53.03;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	cVXoV5PxI8YrEaVA;

1.3
date	2012.06.10.13.21.27;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.34;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.17.34;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.17.34;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@/*
 * Copyright Â© 2002 David Dawes
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Except as contained in this notice, the name of the author(s) shall
 * not be used in advertising or otherwise to promote the sale, use or other
 * dealings in this Software without prior written authorization from
 * the author(s).
 *
 * Authors: David Dawes <dawes@@xfree86.org>
 *
 */

#ifndef _VBE_MODES_H

/*
 * This is intended to be stored in the DisplayModeRec's private area.
 * It includes all the information necessary to VBE information.
 */
typedef struct _VbeModeInfoData {
    int mode;
    VbeModeInfoBlock *data;
    VbeCRTCInfoBlock *block;
} VbeModeInfoData;

#define V_DEPTH_1	0x001
#define V_DEPTH_4	0x002
#define V_DEPTH_8	0x004
#define V_DEPTH_15	0x008
#define V_DEPTH_16	0x010
#define V_DEPTH_24_24	0x020
#define V_DEPTH_24_32	0x040
#define V_DEPTH_24	(V_DEPTH_24_24 | V_DEPTH_24_32)
#define V_DEPTH_30	0x080
#define V_DEPTH_32	0x100

#define VBE_MODE_SUPPORTED(m)	(((m)->ModeAttributes & 0x01) != 0)
#define VBE_MODE_COLOR(m)	(((m)->ModeAttributes & 0x08) != 0)
#define VBE_MODE_GRAPHICS(m)	(((m)->ModeAttributes & 0x10) != 0)
#define VBE_MODE_VGA(m)		(((m)->ModeAttributes & 0x40) == 0)
#define VBE_MODE_LINEAR(m)	(((m)->ModeAttributes & 0x80) != 0 && \
				 ((m)->PhysBasePtr != 0))

#define VBE_MODE_USABLE(m, f)	(VBE_MODE_SUPPORTED(m) || \
				 (f & V_MODETYPE_BAD)) && \
				VBE_MODE_GRAPHICS(m) && \
				(VBE_MODE_VGA(m) || VBE_MODE_LINEAR(m))

#define V_MODETYPE_VBE		0x01
#define V_MODETYPE_VGA		0x02
#define V_MODETYPE_BAD		0x04

extern _X_EXPORT int VBEFindSupportedDepths(vbeInfoPtr pVbe, VbeInfoBlock * vbe,
                                            int *flags24, int modeTypes);
extern _X_EXPORT DisplayModePtr VBEGetModePool(ScrnInfoPtr pScrn,
                                               vbeInfoPtr pVbe,
                                               VbeInfoBlock * vbe,
                                               int modeTypes);
extern _X_EXPORT void VBESetModeNames(DisplayModePtr pMode);
extern _X_EXPORT void VBESetModeParameters(ScrnInfoPtr pScrn, vbeInfoPtr pVbe);

/*
 * Note: These are alternatives to the standard helpers.  They should
 * usually just wrap the standard helpers.
 */
extern _X_EXPORT int VBEValidateModes(ScrnInfoPtr scrp,
                                      DisplayModePtr availModes,
                                      const char **modeNames,
                                      ClockRangePtr clockRanges,
                                      int *linePitches, int minPitch,
                                      int maxPitch, int pitchInc, int minHeight,
                                      int maxHeight, int virtualX, int virtualY,
                                      int apertureSize,
                                      LookupModeFlags strategy);
extern _X_EXPORT void VBEPrintModes(ScrnInfoPtr scrp);

#endif                          /* VBE_MODES_H */
@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d85 1
a85 1
                                      char **modeNames,
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d65 1
a65 1
				
d70 6
a75 4
extern _X_EXPORT int VBEFindSupportedDepths(vbeInfoPtr pVbe, VbeInfoBlock *vbe,
				  int *flags24, int modeTypes);
extern _X_EXPORT DisplayModePtr VBEGetModePool(ScrnInfoPtr pScrn, vbeInfoPtr pVbe,
					VbeInfoBlock *vbe, int modeTypes);
a78 1

d83 9
a91 6
extern _X_EXPORT int VBEValidateModes(ScrnInfoPtr scrp, DisplayModePtr availModes,
			    char **modeNames, ClockRangePtr clockRanges,
			    int *linePitches, int minPitch, int maxPitch,
			    int pitchInc, int minHeight, int maxHeight,
			    int virtualX, int virtualY, int apertureSize,
			    LookupModeFlags strategy);
d94 1
a94 1
#endif /* VBE_MODES_H */
@


1.1
log
@Initial revision
@
text
@d70 1
a70 1
extern int VBEFindSupportedDepths(vbeInfoPtr pVbe, VbeInfoBlock *vbe,
d72 1
a72 1
extern DisplayModePtr VBEGetModePool(ScrnInfoPtr pScrn, vbeInfoPtr pVbe,
d74 2
a75 2
extern void VBESetModeNames(DisplayModePtr pMode);
extern void VBESetModeParameters(ScrnInfoPtr pScrn, vbeInfoPtr pVbe);
d82 1
a82 1
extern int VBEValidateModes(ScrnInfoPtr scrp, DisplayModePtr availModes,
d88 1
a88 1
extern void VBEPrintModes(ScrnInfoPtr scrp);
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
