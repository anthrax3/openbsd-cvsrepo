head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.10
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2014.09.27.17.53.03;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	cVXoV5PxI8YrEaVA;

1.3
date	2012.06.10.13.21.25;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.34;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.20.54;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.20.54;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@/*
 * Copyright 2004 Red Hat Inc., Raleigh, North Carolina.
 *
 * All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation on the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the
 * next paragraph) shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON-INFRINGEMENT.  IN NO EVENT SHALL RED HAT AND/OR THEIR SUPPLIERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*
 * Authors:
 *   Kevin E. Martin <kem@@redhat.com>
 *
 */

#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#include "os.h"
#include "xf86Parser.h"
#include "xf86tokens.h"
#include "Configint.h"


static xf86ConfigSymTabRec ExtensionsTab[] = {
    {ENDSECTION, "endsection"},
    {OPTION, "option"},
    {-1, ""},
};

#define CLEANUP xf86freeExtensions

XF86ConfExtensionsPtr
xf86parseExtensionsSection(void)
{
    int token;

    parsePrologue(XF86ConfExtensionsPtr, XF86ConfExtensionsRec);

    while ((token = xf86getToken(ExtensionsTab)) != ENDSECTION) {
        switch (token) {
        case OPTION:
            ptr->ext_option_lst = xf86parseOption(ptr->ext_option_lst);
            break;
        case EOF_TOKEN:
            Error(UNEXPECTED_EOF_MSG);
            break;
        case COMMENT:
            ptr->extensions_comment =
                xf86addComment(ptr->extensions_comment, xf86_lex_val.str);
            break;
        default:
            Error(INVALID_KEYWORD_MSG, xf86tokenString());
            break;
        }
    }

#ifdef DEBUG
    ErrorF("Extensions section parsed\n");
#endif

    return ptr;
}

#undef CLEANUP

void
xf86printExtensionsSection(FILE * cf, XF86ConfExtensionsPtr ptr)
{
    XF86OptionPtr p;

    if (ptr == NULL || ptr->ext_option_lst == NULL)
        return;

    p = ptr->ext_option_lst;
    fprintf(cf, "Section \"Extensions\"\n");
    if (ptr->extensions_comment)
        fprintf(cf, "%s", ptr->extensions_comment);
    xf86printOptionList(cf, p, 1);
    fprintf(cf, "EndSection\n\n");
}

void
xf86freeExtensions(XF86ConfExtensionsPtr ptr)
{
    if (ptr == NULL)
        return;

    xf86optionListFree(ptr->ext_option_lst);
    TestFree(ptr->extensions_comment);
    free(ptr);
}
@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d38 1
a42 1
extern LexRec val;
d69 1
a69 1
                xf86addComment(ptr->extensions_comment, val.str);
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d44 1
a44 2
static xf86ConfigSymTabRec ExtensionsTab[] =
{
d46 2
a47 2
    {OPTION,     "option"},
    {-1,         ""},
d53 1
a53 1
xf86parseExtensionsSection (void)
a55 1
    parsePrologue (XF86ConfExtensionsPtr, XF86ConfExtensionsRec);
d57 18
a74 16
    while ((token = xf86getToken (ExtensionsTab)) != ENDSECTION) {
	switch (token) {
	    case OPTION:
		ptr->ext_option_lst = xf86parseOption(ptr->ext_option_lst);
		break;
	    case EOF_TOKEN:
		Error (UNEXPECTED_EOF_MSG, NULL);
		break;
	    case COMMENT:
		ptr->extensions_comment =
		    xf86addComment(ptr->extensions_comment, val.str);
		break;
	    default:
		Error (INVALID_KEYWORD_MSG, xf86tokenString ());
		break;
	}
d87 1
a87 1
xf86printExtensionsSection (FILE * cf, XF86ConfExtensionsPtr ptr)
d92 1
a92 1
	return;
d95 1
a95 1
    fprintf (cf, "Section \"Extensions\"\n");
d97 1
a97 1
	fprintf (cf, "%s", ptr->extensions_comment);
d99 1
a99 1
    fprintf (cf, "EndSection\n\n");
d103 1
a103 1
xf86freeExtensions (XF86ConfExtensionsPtr ptr)
d106 1
a106 1
	return;
d108 3
a110 3
    xf86optionListFree (ptr->ext_option_lst);
    TestFree (ptr->extensions_comment);
    free (ptr);
@


1.1
log
@Initial revision
@
text
@d110 1
a110 1
    xf86conffree (ptr);
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
