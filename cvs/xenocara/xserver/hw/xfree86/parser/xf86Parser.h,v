head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.4
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.10
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.6
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.4
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2016.05.29.12.02.38;	author matthieu;	state Exp;
branches;
next	1.9;
commitid	s0SI41sEunLdyFfd;

1.9
date	2015.09.16.19.10.23;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	Te1daavkBLskZ8gc;

1.8
date	2014.09.27.17.53.03;	author matthieu;	state Exp;
branches;
next	1.7;
commitid	cVXoV5PxI8YrEaVA;

1.7
date	2012.06.10.13.21.25;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2011.11.05.13.32.52;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.12.05.15.36.08;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.27.19.02.34;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.19.44.27;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.23;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.20.57;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.20.57;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.58.12;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update to xserver 1.18.3. Tested by shadchin@@ and naddy@@.

Note that indirect GLX is now disbled by default.
@
text
@/*
 *
 * Copyright (c) 1997  Metro Link Incorporated
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Except as contained in this notice, the name of the Metro Link shall not be
 * used in advertising or otherwise to promote the sale, use or other dealings
 * in this Software without prior written authorization from Metro Link.
 *
 */
/*
 * Copyright (c) 1997-2003 by The XFree86 Project, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name of the copyright holder(s)
 * and author(s) shall not be used in advertising or otherwise to promote
 * the sale, use or other dealings in this Software without prior written
 * authorization from the copyright holder(s) and author(s).
 */

/*
 * This file contains the external interfaces for the XFree86 configuration
 * file parser.
 */
#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#ifndef _xf86Parser_h_
#define _xf86Parser_h_

#include <X11/Xdefs.h>
#include "xf86Optrec.h"
#include "list.h"

#define HAVE_PARSER_DECLS

typedef struct {
    char *file_logfile;
    char *file_modulepath;
    char *file_fontpath;
    char *file_comment;
    char *file_xkbdir;
} XF86ConfFilesRec, *XF86ConfFilesPtr;

/* Values for load_type */
#define XF86_LOAD_MODULE	0
#define XF86_LOAD_DRIVER	1
#define XF86_DISABLE_MODULE	2

typedef struct {
    GenericListRec list;
    int load_type;
    const char *load_name;
    XF86OptionPtr load_opt;
    char *load_comment;
    int ignore;
} XF86LoadRec, *XF86LoadPtr;

typedef struct {
    XF86LoadPtr mod_load_lst;
    XF86LoadPtr mod_disable_lst;
    char *mod_comment;
} XF86ConfModuleRec, *XF86ConfModulePtr;

#define CONF_IMPLICIT_KEYBOARD	"Implicit Core Keyboard"

#define CONF_IMPLICIT_POINTER	"Implicit Core Pointer"

#define XF86CONF_PHSYNC    0x0001
#define XF86CONF_NHSYNC    0x0002
#define XF86CONF_PVSYNC    0x0004
#define XF86CONF_NVSYNC    0x0008
#define XF86CONF_INTERLACE 0x0010
#define XF86CONF_DBLSCAN   0x0020
#define XF86CONF_CSYNC     0x0040
#define XF86CONF_PCSYNC    0x0080
#define XF86CONF_NCSYNC    0x0100
#define XF86CONF_HSKEW     0x0200       /* hskew provided */
#define XF86CONF_BCAST     0x0400
#define XF86CONF_VSCAN     0x1000

typedef struct {
    GenericListRec list;
    const char *ml_identifier;
    int ml_clock;
    int ml_hdisplay;
    int ml_hsyncstart;
    int ml_hsyncend;
    int ml_htotal;
    int ml_vdisplay;
    int ml_vsyncstart;
    int ml_vsyncend;
    int ml_vtotal;
    int ml_vscan;
    int ml_flags;
    int ml_hskew;
    char *ml_comment;
} XF86ConfModeLineRec, *XF86ConfModeLinePtr;

typedef struct {
    GenericListRec list;
    const char *vp_identifier;
    XF86OptionPtr vp_option_lst;
    char *vp_comment;
} XF86ConfVideoPortRec, *XF86ConfVideoPortPtr;

typedef struct {
    GenericListRec list;
    const char *va_identifier;
    const char *va_vendor;
    const char *va_board;
    const char *va_busid;
    const char *va_driver;
    XF86OptionPtr va_option_lst;
    XF86ConfVideoPortPtr va_port_lst;
    const char *va_fwdref;
    char *va_comment;
} XF86ConfVideoAdaptorRec, *XF86ConfVideoAdaptorPtr;

#define CONF_MAX_HSYNC 8
#define CONF_MAX_VREFRESH 8

typedef struct {
    float hi, lo;
} parser_range;

typedef struct {
    int red, green, blue;
} parser_rgb;

typedef struct {
    GenericListRec list;
    const char *modes_identifier;
    XF86ConfModeLinePtr mon_modeline_lst;
    char *modes_comment;
} XF86ConfModesRec, *XF86ConfModesPtr;

typedef struct {
    GenericListRec list;
    const char *ml_modes_str;
    XF86ConfModesPtr ml_modes;
} XF86ConfModesLinkRec, *XF86ConfModesLinkPtr;

typedef struct {
    GenericListRec list;
    const char *mon_identifier;
    const char *mon_vendor;
    char *mon_modelname;
    int mon_width;              /* in mm */
    int mon_height;             /* in mm */
    XF86ConfModeLinePtr mon_modeline_lst;
    int mon_n_hsync;
    parser_range mon_hsync[CONF_MAX_HSYNC];
    int mon_n_vrefresh;
    parser_range mon_vrefresh[CONF_MAX_VREFRESH];
    float mon_gamma_red;
    float mon_gamma_green;
    float mon_gamma_blue;
    XF86OptionPtr mon_option_lst;
    XF86ConfModesLinkPtr mon_modes_sect_lst;
    char *mon_comment;
} XF86ConfMonitorRec, *XF86ConfMonitorPtr;

#define CONF_MAXDACSPEEDS 4
#define CONF_MAXCLOCKS    128

typedef struct {
    GenericListRec list;
    const char *dev_identifier;
    const char *dev_vendor;
    const char *dev_board;
    const char *dev_chipset;
    const char *dev_busid;
    const char *dev_card;
    const char *dev_driver;
    const char *dev_ramdac;
    int dev_dacSpeeds[CONF_MAXDACSPEEDS];
    int dev_videoram;
    unsigned long dev_bios_base;
    unsigned long dev_mem_base;
    unsigned long dev_io_base;
    const char *dev_clockchip;
    int dev_clocks;
    int dev_clock[CONF_MAXCLOCKS];
    int dev_chipid;
    int dev_chiprev;
    int dev_irq;
    int dev_screen;
    XF86OptionPtr dev_option_lst;
    char *dev_comment;
    char *match_seat;
} XF86ConfDeviceRec, *XF86ConfDevicePtr;

typedef struct {
    GenericListRec list;
    const char *mode_name;
} XF86ModeRec, *XF86ModePtr;

typedef struct {
    GenericListRec list;
    int disp_frameX0;
    int disp_frameY0;
    int disp_virtualX;
    int disp_virtualY;
    int disp_depth;
    int disp_bpp;
    const char *disp_visual;
    parser_rgb disp_weight;
    parser_rgb disp_black;
    parser_rgb disp_white;
    XF86ModePtr disp_mode_lst;
    XF86OptionPtr disp_option_lst;
    char *disp_comment;
} XF86ConfDisplayRec, *XF86ConfDisplayPtr;

typedef struct {
    XF86OptionPtr flg_option_lst;
    char *flg_comment;
} XF86ConfFlagsRec, *XF86ConfFlagsPtr;

typedef struct {
    GenericListRec list;
    const char *al_adaptor_str;
    XF86ConfVideoAdaptorPtr al_adaptor;
} XF86ConfAdaptorLinkRec, *XF86ConfAdaptorLinkPtr;

#define CONF_MAXGPUDEVICES 4
typedef struct {
    GenericListRec list;
    const char *scrn_identifier;
    const char *scrn_obso_driver;
    int scrn_defaultdepth;
    int scrn_defaultbpp;
    int scrn_defaultfbbpp;
    const char *scrn_monitor_str;
    XF86ConfMonitorPtr scrn_monitor;
    const char *scrn_device_str;
    XF86ConfDevicePtr scrn_device;
    XF86ConfAdaptorLinkPtr scrn_adaptor_lst;
    XF86ConfDisplayPtr scrn_display_lst;
    XF86OptionPtr scrn_option_lst;
    char *scrn_comment;
    int scrn_virtualX, scrn_virtualY;
    char *match_seat;

    int num_gpu_devices;
    const char *scrn_gpu_device_str[CONF_MAXGPUDEVICES];
    XF86ConfDevicePtr scrn_gpu_devices[CONF_MAXGPUDEVICES];
} XF86ConfScreenRec, *XF86ConfScreenPtr;

typedef struct {
    GenericListRec list;
    char *inp_identifier;
    char *inp_driver;
    XF86OptionPtr inp_option_lst;
    char *inp_comment;
} XF86ConfInputRec, *XF86ConfInputPtr;

typedef struct {
    GenericListRec list;
    XF86ConfInputPtr iref_inputdev;
    char *iref_inputdev_str;
    XF86OptionPtr iref_option_lst;
} XF86ConfInputrefRec, *XF86ConfInputrefPtr;

typedef struct {
    Bool set;
    Bool val;
} xf86TriState;

typedef struct {
    struct xorg_list entry;
    char **values;
} xf86MatchGroup;

typedef struct {
    GenericListRec list;
    char *identifier;
    char *driver;
    struct xorg_list match_product;
    struct xorg_list match_vendor;
    struct xorg_list match_device;
    struct xorg_list match_os;
    struct xorg_list match_pnpid;
    struct xorg_list match_usbid;
    struct xorg_list match_driver;
    struct xorg_list match_tag;
    struct xorg_list match_layout;
    xf86TriState is_keyboard;
    xf86TriState is_pointer;
    xf86TriState is_joystick;
    xf86TriState is_tablet;
    xf86TriState is_touchpad;
    xf86TriState is_touchscreen;
    XF86OptionPtr option_lst;
    char *comment;
} XF86ConfInputClassRec, *XF86ConfInputClassPtr;

typedef struct {
    GenericListRec list;
    char *identifier;
    char *driver;
    struct xorg_list match_driver;
    char *comment;
} XF86ConfOutputClassRec, *XF86ConfOutputClassPtr;

/* Values for adj_where */
#define CONF_ADJ_OBSOLETE	-1
#define CONF_ADJ_ABSOLUTE	0
#define CONF_ADJ_RIGHTOF	1
#define CONF_ADJ_LEFTOF		2
#define CONF_ADJ_ABOVE		3
#define CONF_ADJ_BELOW		4
#define CONF_ADJ_RELATIVE	5

typedef struct {
    GenericListRec list;
    int adj_scrnum;
    XF86ConfScreenPtr adj_screen;
    const char *adj_screen_str;
    XF86ConfScreenPtr adj_top;
    const char *adj_top_str;
    XF86ConfScreenPtr adj_bottom;
    const char *adj_bottom_str;
    XF86ConfScreenPtr adj_left;
    const char *adj_left_str;
    XF86ConfScreenPtr adj_right;
    const char *adj_right_str;
    int adj_where;
    int adj_x;
    int adj_y;
    const char *adj_refscreen;
} XF86ConfAdjacencyRec, *XF86ConfAdjacencyPtr;

typedef struct {
    GenericListRec list;
    const char *inactive_device_str;
    XF86ConfDevicePtr inactive_device;
} XF86ConfInactiveRec, *XF86ConfInactivePtr;

typedef struct {
    GenericListRec list;
    const char *lay_identifier;
    XF86ConfAdjacencyPtr lay_adjacency_lst;
    XF86ConfInactivePtr lay_inactive_lst;
    XF86ConfInputrefPtr lay_input_lst;
    XF86OptionPtr lay_option_lst;
    char *match_seat;
    char *lay_comment;
} XF86ConfLayoutRec, *XF86ConfLayoutPtr;

typedef struct {
    GenericListRec list;
    const char *vs_name;
    const char *vs_identifier;
    XF86OptionPtr vs_option_lst;
    char *vs_comment;
} XF86ConfVendSubRec, *XF86ConfVendSubPtr;

typedef struct {
    GenericListRec list;
    const char *vnd_identifier;
    XF86OptionPtr vnd_option_lst;
    XF86ConfVendSubPtr vnd_sub_lst;
    char *vnd_comment;
} XF86ConfVendorRec, *XF86ConfVendorPtr;

typedef struct {
    const char *dri_group_name;
    int dri_group;
    int dri_mode;
    char *dri_comment;
} XF86ConfDRIRec, *XF86ConfDRIPtr;

typedef struct {
    XF86OptionPtr ext_option_lst;
    char *extensions_comment;
} XF86ConfExtensionsRec, *XF86ConfExtensionsPtr;

typedef struct {
    XF86ConfFilesPtr conf_files;
    XF86ConfModulePtr conf_modules;
    XF86ConfFlagsPtr conf_flags;
    XF86ConfVideoAdaptorPtr conf_videoadaptor_lst;
    XF86ConfModesPtr conf_modes_lst;
    XF86ConfMonitorPtr conf_monitor_lst;
    XF86ConfDevicePtr conf_device_lst;
    XF86ConfScreenPtr conf_screen_lst;
    XF86ConfInputPtr conf_input_lst;
    XF86ConfInputClassPtr conf_inputclass_lst;
    XF86ConfOutputClassPtr conf_outputclass_lst;
    XF86ConfLayoutPtr conf_layout_lst;
    XF86ConfVendorPtr conf_vendor_lst;
    XF86ConfDRIPtr conf_dri;
    XF86ConfExtensionsPtr conf_extensions;
    char *conf_comment;
} XF86ConfigRec, *XF86ConfigPtr;

typedef struct {
    int token;                  /* id of the token */
    const char *name;           /* pointer to the LOWERCASED name */
} xf86ConfigSymTabRec, *xf86ConfigSymTabPtr;

/*
 * prototypes for public functions
 */
extern void xf86initConfigFiles(void);
extern char *xf86openConfigFile(const char *path, const char *cmdline,
                                const char *projroot);
extern char *xf86openConfigDirFiles(const char *path, const char *cmdline,
                                    const char *projroot);
extern void xf86setBuiltinConfig(const char *config[]);
extern XF86ConfigPtr xf86readConfigFile(void);
extern void xf86closeConfigFile(void);
extern void xf86freeConfig(XF86ConfigPtr p);
extern int xf86writeConfigFile(const char *, XF86ConfigPtr);
extern _X_EXPORT XF86ConfDevicePtr xf86findDevice(const char *ident,
                                                  XF86ConfDevicePtr p);
extern _X_EXPORT XF86ConfLayoutPtr xf86findLayout(const char *name,
                                                  XF86ConfLayoutPtr list);
extern _X_EXPORT XF86ConfMonitorPtr xf86findMonitor(const char *ident,
                                                    XF86ConfMonitorPtr p);
extern _X_EXPORT XF86ConfModesPtr xf86findModes(const char *ident,
                                                XF86ConfModesPtr p);
extern _X_EXPORT XF86ConfModeLinePtr xf86findModeLine(const char *ident,
                                                      XF86ConfModeLinePtr p);
extern _X_EXPORT XF86ConfScreenPtr xf86findScreen(const char *ident,
                                                  XF86ConfScreenPtr p);
extern _X_EXPORT XF86ConfInputPtr xf86findInput(const char *ident,
                                                XF86ConfInputPtr p);
extern _X_EXPORT XF86ConfInputPtr xf86findInputByDriver(const char *driver,
                                                        XF86ConfInputPtr p);
extern _X_EXPORT XF86ConfVideoAdaptorPtr xf86findVideoAdaptor(const char *ident,
                                                              XF86ConfVideoAdaptorPtr
                                                              p);
extern int xf86layoutAddInputDevices(XF86ConfigPtr config,
                                     XF86ConfLayoutPtr layout);

extern _X_EXPORT GenericListPtr xf86addListItem(GenericListPtr head,
                                                GenericListPtr c_new);
extern _X_EXPORT int xf86itemNotSublist(GenericListPtr list_1,
                                        GenericListPtr list_2);

extern _X_EXPORT int xf86pathIsAbsolute(const char *path);
extern _X_EXPORT int xf86pathIsSafe(const char *path);
extern _X_EXPORT char *xf86addComment(char *cur, const char *add);
extern _X_EXPORT Bool xf86getBoolValue(Bool *val, const char *str);

#endif                          /* _xf86Parser_h_ */
@


1.9
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@d262 1
d280 4
@


1.8
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d1 2
a2 2
/* 
 * 
d4 1
a4 1
 * 
d6 1
a6 1
 * copy of this software and associated documentation files (the "Software"), 
d11 1
a11 1
 * 
d14 1
a14 1
 * 
d22 1
a22 1
 * 
d26 1
a26 1
 * 
d55 1
a55 1
/* 
a213 1
    int dev_textclockfreq;
@


1.7
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d88 1
a88 1
    char *load_name;
d119 1
a119 1
    char *ml_identifier;
d137 1
a137 1
    char *vp_identifier;
d144 5
a148 5
    char *va_identifier;
    char *va_vendor;
    char *va_board;
    char *va_busid;
    char *va_driver;
d151 1
a151 1
    char *va_fwdref;
d168 1
a168 1
    char *modes_identifier;
d175 1
a175 1
    char *ml_modes_str;
d181 2
a182 2
    char *mon_identifier;
    char *mon_vendor;
d204 8
a211 8
    char *dev_identifier;
    char *dev_vendor;
    char *dev_board;
    char *dev_chipset;
    char *dev_busid;
    char *dev_card;
    char *dev_driver;
    char *dev_ramdac;
d218 1
a218 1
    char *dev_clockchip;
d227 1
d232 1
a232 1
    char *mode_name;
d243 1
a243 1
    char *disp_visual;
d259 1
a259 1
    char *al_adaptor_str;
d265 2
a266 2
    char *scrn_identifier;
    char *scrn_obso_driver;
d270 1
a270 1
    char *scrn_monitor_str;
d272 1
a272 1
    char *scrn_device_str;
d279 1
d330 8
d351 1
a351 1
    char *adj_screen_str;
d353 1
a353 1
    char *adj_top_str;
d355 1
a355 1
    char *adj_bottom_str;
d357 1
a357 1
    char *adj_left_str;
d359 1
a359 1
    char *adj_right_str;
d363 1
a363 1
    char *adj_refscreen;
d368 1
a368 1
    char *inactive_device_str;
d374 1
a374 1
    char *lay_identifier;
d379 1
d385 2
a386 2
    char *vs_name;
    char *vs_identifier;
d393 1
a393 1
    char *vnd_identifier;
d400 1
a400 1
    char *dri_group_name;
d422 1
d477 1
a477 1
extern _X_EXPORT char *xf86addComment(char *cur, char *add);
@


1.6
log
@Update to xserver 1.11.2
@
text
@a54 1

d72 7
a78 9
typedef struct
{
	char *file_logfile;
	char *file_modulepath;
	char *file_fontpath;
	char *file_comment;
	char *file_xkbdir;
}
XF86ConfFilesRec, *XF86ConfFilesPtr;
d85 11
a95 14
typedef struct
{
	GenericListRec list;
	int load_type;
	char *load_name;
	XF86OptionPtr load_opt;
	char *load_comment;
        int ignore;
}
XF86LoadRec, *XF86LoadPtr;

typedef struct
{
	XF86LoadPtr mod_load_lst;
d97 2
a98 3
	char *mod_comment;
}
XF86ConfModuleRec, *XF86ConfModulePtr;
d113 1
a113 1
#define XF86CONF_HSKEW     0x0200	/* hskew provided */
d117 37
a153 43
typedef struct
{
	GenericListRec list;
	char *ml_identifier;
	int ml_clock;
	int ml_hdisplay;
	int ml_hsyncstart;
	int ml_hsyncend;
	int ml_htotal;
	int ml_vdisplay;
	int ml_vsyncstart;
	int ml_vsyncend;
	int ml_vtotal;
	int ml_vscan;
	int ml_flags;
	int ml_hskew;
	char *ml_comment;
}
XF86ConfModeLineRec, *XF86ConfModeLinePtr;

typedef struct
{
	GenericListRec list;
	char *vp_identifier;
	XF86OptionPtr vp_option_lst;
	char *vp_comment;
}
XF86ConfVideoPortRec, *XF86ConfVideoPortPtr;

typedef struct
{
	GenericListRec list;
	char *va_identifier;
	char *va_vendor;
	char *va_board;
	char *va_busid;
	char *va_driver;
	XF86OptionPtr va_option_lst;
	XF86ConfVideoPortPtr va_port_lst;
	char *va_fwdref;
	char *va_comment;
}
XF86ConfVideoAdaptorRec, *XF86ConfVideoAdaptorPtr;
d158 40
a197 50
typedef struct
{
	float hi, lo;
}
parser_range;

typedef struct
{
	int red, green, blue;
}
parser_rgb;

typedef struct
{
	GenericListRec list;
	char *modes_identifier;
	XF86ConfModeLinePtr mon_modeline_lst;
	char *modes_comment;
}
XF86ConfModesRec, *XF86ConfModesPtr;

typedef struct
{
	GenericListRec list;
	char *ml_modes_str;
	XF86ConfModesPtr ml_modes;
}
XF86ConfModesLinkRec, *XF86ConfModesLinkPtr;

typedef struct
{
	GenericListRec list;
	char *mon_identifier;
	char *mon_vendor;
	char *mon_modelname;
	int mon_width;				/* in mm */
	int mon_height;				/* in mm */
	XF86ConfModeLinePtr mon_modeline_lst;
	int mon_n_hsync;
	parser_range mon_hsync[CONF_MAX_HSYNC];
	int mon_n_vrefresh;
	parser_range mon_vrefresh[CONF_MAX_VREFRESH];
	float mon_gamma_red;
	float mon_gamma_green;
	float mon_gamma_blue;
	XF86OptionPtr mon_option_lst;
	XF86ConfModesLinkPtr mon_modes_sect_lst;
	char *mon_comment;
}
XF86ConfMonitorRec, *XF86ConfMonitorPtr;
d202 125
a326 147
typedef struct
{
	GenericListRec list;
	char *dev_identifier;
	char *dev_vendor;
	char *dev_board;
	char *dev_chipset;
	char *dev_busid;
	char *dev_card;
	char *dev_driver;
	char *dev_ramdac;
	int dev_dacSpeeds[CONF_MAXDACSPEEDS];
	int dev_videoram;
	int dev_textclockfreq;
	unsigned long dev_bios_base;
	unsigned long dev_mem_base;
	unsigned long dev_io_base;
	char *dev_clockchip;
	int dev_clocks;
	int dev_clock[CONF_MAXCLOCKS];
	int dev_chipid;
	int dev_chiprev;
	int dev_irq;
	int dev_screen;
	XF86OptionPtr dev_option_lst;
	char *dev_comment;
}
XF86ConfDeviceRec, *XF86ConfDevicePtr;

typedef struct
{
	GenericListRec list;
	char *mode_name;
}
XF86ModeRec, *XF86ModePtr;

typedef struct
{
	GenericListRec list;
	int disp_frameX0;
	int disp_frameY0;
	int disp_virtualX;
	int disp_virtualY;
	int disp_depth;
	int disp_bpp;
	char *disp_visual;
	parser_rgb disp_weight;
	parser_rgb disp_black;
	parser_rgb disp_white;
	XF86ModePtr disp_mode_lst;
	XF86OptionPtr disp_option_lst;
	char *disp_comment;
}
XF86ConfDisplayRec, *XF86ConfDisplayPtr;

typedef struct
{
	XF86OptionPtr flg_option_lst;
	char *flg_comment;
}
XF86ConfFlagsRec, *XF86ConfFlagsPtr;

typedef struct
{
	GenericListRec list;
	char *al_adaptor_str;
	XF86ConfVideoAdaptorPtr al_adaptor;
}
XF86ConfAdaptorLinkRec, *XF86ConfAdaptorLinkPtr;

typedef struct
{
	GenericListRec list;
	char *scrn_identifier;
	char *scrn_obso_driver;
	int scrn_defaultdepth;
	int scrn_defaultbpp;
	int scrn_defaultfbbpp;
	char *scrn_monitor_str;
	XF86ConfMonitorPtr scrn_monitor;
	char *scrn_device_str;
	XF86ConfDevicePtr scrn_device;
	XF86ConfAdaptorLinkPtr scrn_adaptor_lst;
	XF86ConfDisplayPtr scrn_display_lst;
	XF86OptionPtr scrn_option_lst;
	char *scrn_comment;
	int scrn_virtualX, scrn_virtualY;
}
XF86ConfScreenRec, *XF86ConfScreenPtr;

typedef struct
{
	GenericListRec list;
	char *inp_identifier;
	char *inp_driver;
	XF86OptionPtr inp_option_lst;
	char *inp_comment;
}
XF86ConfInputRec, *XF86ConfInputPtr;

typedef struct
{
	GenericListRec list;
	XF86ConfInputPtr iref_inputdev;
	char *iref_inputdev_str;
	XF86OptionPtr iref_option_lst;
}
XF86ConfInputrefRec, *XF86ConfInputrefPtr;

typedef struct
{
	Bool set;
	Bool val;
}
xf86TriState;

typedef struct
{
	struct list entry;
	char **values;
}
xf86MatchGroup;

typedef struct
{
	GenericListRec list;
	char *identifier;
	char *driver;
	struct list match_product;
	struct list match_vendor;
	struct list match_device;
	struct list match_os;
	struct list match_pnpid;
	struct list match_usbid;
	struct list match_driver;
	struct list match_tag;
	struct list match_layout;
	xf86TriState is_keyboard;
	xf86TriState is_pointer;
	xf86TriState is_joystick;
	xf86TriState is_tablet;
	xf86TriState is_touchpad;
	xf86TriState is_touchscreen;
	XF86OptionPtr option_lst;
	char *comment;
}
XF86ConfInputClassRec, *XF86ConfInputClassPtr;
d337 85
a421 103
typedef struct
{
	GenericListRec list;
	int adj_scrnum;
	XF86ConfScreenPtr adj_screen;
	char *adj_screen_str;
	XF86ConfScreenPtr adj_top;
	char *adj_top_str;
	XF86ConfScreenPtr adj_bottom;
	char *adj_bottom_str;
	XF86ConfScreenPtr adj_left;
	char *adj_left_str;
	XF86ConfScreenPtr adj_right;
	char *adj_right_str;
	int adj_where;
	int adj_x;
	int adj_y;
	char *adj_refscreen;
}
XF86ConfAdjacencyRec, *XF86ConfAdjacencyPtr;

typedef struct
{
	GenericListRec list;
	char *inactive_device_str;
	XF86ConfDevicePtr inactive_device;
}
XF86ConfInactiveRec, *XF86ConfInactivePtr;

typedef struct
{
	GenericListRec list;
	char *lay_identifier;
	XF86ConfAdjacencyPtr lay_adjacency_lst;
	XF86ConfInactivePtr lay_inactive_lst;
	XF86ConfInputrefPtr lay_input_lst;
	XF86OptionPtr lay_option_lst;
	char *lay_comment;
}
XF86ConfLayoutRec, *XF86ConfLayoutPtr;

typedef struct 
{ 
	GenericListRec list; 
	char *vs_name;
	char *vs_identifier;
	XF86OptionPtr vs_option_lst;
	char *vs_comment;
}
XF86ConfVendSubRec, *XF86ConfVendSubPtr;

typedef struct
{
	GenericListRec list;
	char *vnd_identifier;
	XF86OptionPtr vnd_option_lst;
	XF86ConfVendSubPtr vnd_sub_lst;
	char *vnd_comment;
}
XF86ConfVendorRec, *XF86ConfVendorPtr;

typedef struct
{
	char *dri_group_name;
	int dri_group;
	int dri_mode;
	char *dri_comment;
}
XF86ConfDRIRec, *XF86ConfDRIPtr;

typedef struct
{
	XF86OptionPtr ext_option_lst;
	char *extensions_comment;
}
XF86ConfExtensionsRec, *XF86ConfExtensionsPtr;

typedef struct
{
	XF86ConfFilesPtr conf_files;
	XF86ConfModulePtr conf_modules;
	XF86ConfFlagsPtr conf_flags;
	XF86ConfVideoAdaptorPtr conf_videoadaptor_lst;
	XF86ConfModesPtr conf_modes_lst;
	XF86ConfMonitorPtr conf_monitor_lst;
	XF86ConfDevicePtr conf_device_lst;
	XF86ConfScreenPtr conf_screen_lst;
	XF86ConfInputPtr conf_input_lst;
	XF86ConfInputClassPtr conf_inputclass_lst;
	XF86ConfLayoutPtr conf_layout_lst;
	XF86ConfVendorPtr conf_vendor_lst;
	XF86ConfDRIPtr conf_dri;
	XF86ConfExtensionsPtr conf_extensions;
	char *conf_comment;
}
XF86ConfigRec, *XF86ConfigPtr;

typedef struct
{
	int token;			/* id of the token */
	char *name;			/* pointer to the LOWERCASED name */
}
xf86ConfigSymTabRec, *xf86ConfigSymTabPtr;
d427 4
a430 4
extern const char *xf86openConfigFile(const char *path, const char *cmdline,
				      const char *projroot);
extern const char *xf86openConfigDirFiles(const char *path, const char *cmdline,
					  const char *projroot);
d436 16
a451 8
extern _X_EXPORT XF86ConfDevicePtr xf86findDevice(const char *ident, XF86ConfDevicePtr p);
extern _X_EXPORT XF86ConfLayoutPtr xf86findLayout(const char *name, XF86ConfLayoutPtr list);
extern _X_EXPORT XF86ConfMonitorPtr xf86findMonitor(const char *ident, XF86ConfMonitorPtr p);
extern _X_EXPORT XF86ConfModesPtr xf86findModes(const char *ident, XF86ConfModesPtr p);
extern _X_EXPORT XF86ConfModeLinePtr xf86findModeLine(const char *ident, XF86ConfModeLinePtr p);
extern _X_EXPORT XF86ConfScreenPtr xf86findScreen(const char *ident, XF86ConfScreenPtr p);
extern _X_EXPORT XF86ConfInputPtr xf86findInput(const char *ident, XF86ConfInputPtr p);
extern _X_EXPORT XF86ConfInputPtr xf86findInputByDriver(const char *driver, XF86ConfInputPtr p);
d453 9
a461 5
						XF86ConfVideoAdaptorPtr p);
extern int xf86layoutAddInputDevices(XF86ConfigPtr config, XF86ConfLayoutPtr layout);

extern _X_EXPORT GenericListPtr xf86addListItem(GenericListPtr head, GenericListPtr c_new);
extern _X_EXPORT int xf86itemNotSublist(GenericListPtr list_1, GenericListPtr list_2);
d468 1
a468 1
#endif /* _xf86Parser_h_ */
@


1.5
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@a121 1
#define XF86CONF_CUSTOM    0x0800	/* timing numbers customized by editor */
d361 1
a444 10
	GenericListRec list;
	int buf_count;
	int buf_size;
	char *buf_flags;
	char *buf_comment;
}
XF86ConfBuffersRec, *XF86ConfBuffersPtr;

typedef struct
{
a447 1
	XF86ConfBuffersPtr dri_buffers_lst;
@


1.4
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d69 1
d344 7
d354 8
a361 4
	char **match_product;
	char **match_vendor;
	char **match_device;
	char **match_tag;
@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d67 1
a75 1
	char *file_inputdevs;
d334 27
d469 1
d488 5
a492 2
extern const char *xf86openConfigFile (const char *, const char *,
					const char *);
d494 13
a506 13
extern XF86ConfigPtr xf86readConfigFile (void);
extern void xf86closeConfigFile (void);
extern void xf86freeConfig (XF86ConfigPtr p);
extern int xf86writeConfigFile (const char *, XF86ConfigPtr);
XF86ConfDevicePtr xf86findDevice(const char *ident, XF86ConfDevicePtr p);
XF86ConfLayoutPtr xf86findLayout(const char *name, XF86ConfLayoutPtr list);
XF86ConfMonitorPtr xf86findMonitor(const char *ident, XF86ConfMonitorPtr p);
XF86ConfModesPtr xf86findModes(const char *ident, XF86ConfModesPtr p);
XF86ConfModeLinePtr xf86findModeLine(const char *ident, XF86ConfModeLinePtr p);
XF86ConfScreenPtr xf86findScreen(const char *ident, XF86ConfScreenPtr p);
XF86ConfInputPtr xf86findInput(const char *ident, XF86ConfInputPtr p);
XF86ConfInputPtr xf86findInputByDriver(const char *driver, XF86ConfInputPtr p);
XF86ConfVideoAdaptorPtr xf86findVideoAdaptor(const char *ident,
d508 1
d510 2
a511 2
GenericListPtr xf86addListItem(GenericListPtr head, GenericListPtr c_new);
int xf86itemNotSublist(GenericListPtr list_1, GenericListPtr list_2);
d513 4
a516 3
int xf86pathIsAbsolute(const char *path);
int xf86pathIsSafe(const char *path);
char *xf86addComment(char *cur, char *add);
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d78 1
@


1.1
log
@Initial revision
@
text
@a73 1
	char *file_rgbpath;
d84 1
d100 1
d310 1
a473 1
XF86ConfVendorPtr xf86findVendor(const char *name, XF86ConfVendorPtr list);
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@a84 1
#define XF86_DISABLE_MODULE	2
a99 1
    XF86LoadPtr mod_disable_lst;
d472 1
@

