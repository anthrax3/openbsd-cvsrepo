head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.09.16.19.10.22;	author matthieu;	state dead;
branches;
next	1.3;
commitid	Te1daavkBLskZ8gc;

1.3
date	2012.06.10.13.21.24;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.05.15.36.07;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.17.38;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.17.38;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#include "xf86.h"
#include "xf86i2c.h"
#include "tda8425.h"
#include "i2c_def.h"

#define TDA8425(a,b)	{ \
		data[0]=a; \
		data[1]=b; \
		I2C_WriteRead(&(t->d), data, 2, NULL, 0); \
		}

TDA8425Ptr
Detect_tda8425(I2CBusPtr b, I2CSlaveAddr addr, Bool force)
{
    TDA8425Ptr t;

    t = calloc(1, sizeof(TDA8425Rec));
    if (t == NULL)
        return NULL;
    t->d.DevName = "TDA8425 BTSC Stereo Audio Processor";
    t->d.SlaveAddr = addr;
    t->d.pI2CBus = b;
    t->d.NextDev = NULL;
    t->d.StartTimeout = b->StartTimeout;
    t->d.BitTimeout = b->BitTimeout;
    t->d.AcknTimeout = b->AcknTimeout;
    t->d.ByteTimeout = b->ByteTimeout;

    if (!force && !I2CProbeAddress(b, addr)) {
        free(t);
        return NULL;
    }

    /* set default parameters */
    if (!I2CDevInit(&(t->d))) {
        free(t);
        return NULL;
    }

    return t;
}

Bool
tda8425_init(TDA8425Ptr t)
{
    t->stereo = 3;              /* 3 = Spacial 2 = Linear 1 = Pseudo 0 = Forced mono */
    t->v_left = 0xFF;           /* FF - C0 */
    t->v_right = 0xFF;          /* FF - C0 */
    t->bass = 0xF6;             /* 0xFF - 0xF0 */
    t->treble = 0xF6;           /* 0xFF - 0xF0 */
    t->src_sel = 3;             /* 3 - stereo */
    t->mute = TRUE;
    t->mux = 0;                 /* 0 - source one, 1 -source 2 */

    tda8425_setaudio(t);
    return TRUE;
}

void
tda8425_setaudio(TDA8425Ptr t)
{
    I2CByte data[2];

    TDA8425(0x00, t->v_left);
    TDA8425(0x01, t->v_right);
    TDA8425(0x02, t->bass);
    TDA8425(0x03, t->treble);
    TDA8425(0x08,
            0xC0 | (t->mute ? 0x20 : 0x0) | (t->stereo << 3) | (t->
                                                                src_sel << 1) |
            t->mux);
}

void
tda8425_mute(TDA8425Ptr t, Bool mute)
{
    t->mute = mute;
    tda8425_setaudio(t);
}
@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@@


1.2
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d16 2
a17 1
TDA8425Ptr Detect_tda8425(I2CBusPtr b, I2CSlaveAddr addr, Bool force)
d19 1
a19 25
  TDA8425Ptr t;
  
  t = calloc(1, sizeof(TDA8425Rec));
  if(t == NULL) return NULL;
  t->d.DevName = "TDA8425 BTSC Stereo Audio Processor";
  t->d.SlaveAddr = addr;
  t->d.pI2CBus = b;
  t->d.NextDev = NULL;
  t->d.StartTimeout = b->StartTimeout;
  t->d.BitTimeout = b->BitTimeout;
  t->d.AcknTimeout = b->AcknTimeout;
  t->d.ByteTimeout = b->ByteTimeout;
  
  if(!force && !I2CProbeAddress(b, addr))
  {
     free(t);
     return NULL;
  }
  
  /* set default parameters */
  if(!I2CDevInit(&(t->d)))
  {
     free(t);
     return NULL;
  }
d21 24
a44 1
  return t;  
d47 2
a48 1
Bool tda8425_init(TDA8425Ptr t)
d50 11
a60 11
  t->stereo = 3; 	/* 3 = Spacial 2 = Linear 1 = Pseudo 0 = Forced mono */
  t->v_left = 0xFF; 	/* FF - C0 */
  t->v_right = 0xFF; 	/* FF - C0 */
  t->bass = 0xF6;	/* 0xFF - 0xF0 */
  t->treble = 0xF6;	/* 0xFF - 0xF0 */
  t->src_sel = 3;	/* 3 - stereo */
  t->mute = TRUE;
  t->mux = 0;           /* 0 - source one, 1 -source 2 */
  
  tda8425_setaudio(t);
  return TRUE;
d63 2
a64 1
void tda8425_setaudio(TDA8425Ptr t)
d68 8
a75 6
    TDA8425(0x00, t->v_left ); 
    TDA8425(0x01, t->v_right );
    TDA8425(0x02, t->bass ); 
    TDA8425(0x03, t->treble );
    TDA8425(0x08, 0xC0 | (t->mute ? 0x20 : 0x0) | (t->stereo << 3) | (t->src_sel << 1) |
	    t->mux); 
d78 2
a79 1
void tda8425_mute(TDA8425Ptr t, Bool mute)
d81 2
a82 2
   t->mute = mute;
   tda8425_setaudio(t);
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
  t = xcalloc(1, sizeof(TDA8425Rec));
d33 1
a33 1
     xfree(t);
d40 1
a40 1
     xfree(t);
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
