head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.09.16.19.10.22;	author matthieu;	state dead;
branches;
next	1.3;
commitid	Te1daavkBLskZ8gc;

1.3
date	2012.06.10.13.21.24;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.17.37;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.17.37;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@#ifndef __FI1236_H__
#define __FI1236_H__

#include "xf86i2c.h"

/* why someone has defined NUM someplace else is beyoung me.. */
#undef NUM

typedef struct {
    CARD32 fcar;                /* 16 * fcar_Mhz */
    CARD32 min_freq;            /* 16 * min_freq_Mhz */
    CARD32 max_freq;            /* 16 * max_freq_Mhz */

    CARD32 threshold1;          /* 16 * Value_Mhz */
    CARD32 threshold2;          /* 16 * Value_Mhz */

    CARD8 band_low;
    CARD8 band_mid;
    CARD8 band_high;
    CARD8 control;
} FI1236_parameters;

typedef struct {
    /* what we want */
    /* all frequencies are in Mhz */
    double f_rf;                /* frequency to tune to */
    double f_if1;               /* first intermediate frequency */
    double f_if2;               /* second intermediate frequency */
    double f_ref;               /* reference frequency */
    double f_ifbw;              /* bandwidth */
    double f_step;              /* step */

    /* what we compute */
    double f_lo1;
    double f_lo2;
    int LO1I;
    int LO2I;
    int SEL;
    int STEP;
    int NUM;
} MT2032_parameters;

typedef struct {
    I2CDevRec d;
    int type;

    void *afc_source;           /* The AFC source may be another chip like TDA988x */

    int afc_delta;
    CARD32 original_frequency;
    Bool afc_timer_installed;
    int afc_count;
    int last_afc_hint;

    double video_if;
    FI1236_parameters parm;
    int xogc;                   /* for MT2032 */

    struct {
        CARD8 div1;
        CARD8 div2;
        CARD8 control;
        CARD8 band;
        CARD8 aux;              /* this is for MK3 tuners */
    } tuner_data;
} FI1236Rec, *FI1236Ptr;

#define TUNER_TYPE_FI1236              0
#define TUNER_TYPE_FI1216              1
#define TUNER_TYPE_TEMIC_FN5AL         2
#define TUNER_TYPE_MT2032	       3
#define TUNER_TYPE_FI1246              4
#define TUNER_TYPE_FI1256              5
#define TUNER_TYPE_FI1236W             6
#define TUNER_TYPE_FM1216ME            7

#define FI1236_ADDR(a)        ((a)->d.SlaveAddr)

#define FI1236_ADDR_1	     0xC6
#define FI1236_ADDR_2        0xC0

#define TUNER_TUNED   0
#define TUNER_JUST_BELOW 1
#define TUNER_JUST_ABOVE -1
#define TUNER_OFF      4
#define TUNER_STILL_TUNING      5

void FI1236_tune(FI1236Ptr f, CARD32 frequency);

#define FI1236SymbolsList  \
		"Detect_FI1236", \
		"FI1236_set_tuner_type", \
		"TUNER_set_frequency"

#define xf86_Detect_FI1236		Detect_FI1236
extern _X_EXPORT FI1236Ptr Detect_FI1236(I2CBusPtr b, I2CSlaveAddr addr);

#define xf86_FI1236_set_tuner_type	FI1236_set_tuner_type
extern _X_EXPORT void FI1236_set_tuner_type(FI1236Ptr f, int type);

#define xf86_TUNER_set_frequency	TUNER_set_frequency
extern _X_EXPORT void TUNER_set_frequency(FI1236Ptr f, CARD32 frequency);

#define xf86_FI1236_AFC			FI1236_AFC
extern _X_EXPORT int FI1236_AFC(FI1236Ptr f);

#define xf86_TUNER_get_afc_hint		TUNER_get_afc_hint
extern _X_EXPORT int TUNER_get_afc_hint(FI1236Ptr f);

#define xf86_fi1236_dump_status		fi1236_dump_status
extern _X_EXPORT void fi1236_dump_status(FI1236Ptr f);

#endif
@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d10 12
a21 12
	CARD32 fcar;           /* 16 * fcar_Mhz */
	CARD32 min_freq;       /* 16 * min_freq_Mhz */
	CARD32 max_freq;       /* 16 * max_freq_Mhz */
	
	CARD32 threshold1;     /* 16 * Value_Mhz */
	CARD32 threshold2;     /* 16 * Value_Mhz */
	
	CARD8  band_low;
	CARD8  band_mid;
	CARD8  band_high;
	CARD8  control;
	} FI1236_parameters;
d23 19
d44 2
a45 18
	/* what we want */
	/* all frequencies are in Mhz */
	double f_rf;	/* frequency to tune to */
	double f_if1;   /* first intermediate frequency */
	double f_if2;   /* second intermediate frequency */
	double f_ref;   /* reference frequency */
	double f_ifbw;  /* bandwidth */
	double f_step;  /* step */
	
	/* what we compute */
	double f_lo1;
	double f_lo2;
	int LO1I;
	int LO2I;
	int SEL;
	int STEP;
	int NUM;
	} MT2032_parameters;
d47 1
a47 3
typedef struct {
	I2CDevRec  d;
	int type;
d49 18
a66 20
	void* afc_source;    /* The AFC source may be another chip like TDA988x */
	
	int afc_delta;
	CARD32 original_frequency;
	Bool afc_timer_installed;
	int afc_count;
	int last_afc_hint;
	
	double video_if;
	FI1236_parameters parm;
	int xogc; /* for MT2032 */
	
	struct {
		CARD8   div1;
		CARD8   div2;
		CARD8   control;
		CARD8   band;
		CARD8	  aux;	/* this is for MK3 tuners */
		} tuner_data;
	} FI1236Rec, *FI1236Ptr;
a87 1

d97 1
d100 1
d106 1
d109 1
@


1.1
log
@Initial revision
@
text
@a89 3
FI1236Ptr Detect_FI1236(I2CBusPtr b, I2CSlaveAddr addr);
void FI1236_set_tuner_type(FI1236Ptr f, int type);
void TUNER_set_frequency(FI1236Ptr f, CARD32 frequency);
a90 3
int FI1236_AFC(FI1236Ptr f);
int TUNER_get_afc_hint(FI1236Ptr f);
void fi1236_dump_status(FI1236Ptr f);
d97 13
a109 6
#define xf86_Detect_FI1236         ((FI1236Ptr (*)(I2CBusPtr, I2CSlaveAddr))LoaderSymbol("Detect_FI1236"))
#define xf86_FI1236_set_tuner_type ((void (*)(FI1236Ptr, int))LoaderSymbol("FI1236_set_tuner_type"))
#define xf86_TUNER_set_frequency           ((void (*)(FI1236Ptr, CARD32))LoaderSymbol("TUNER_set_frequency"))
#define xf86_FI1236_AFC           ((int (*)(FI1236Ptr))LoaderSymbol("FI1236_AFC"))
#define xf86_TUNER_get_afc_hint   ((int (*)(FI1236Ptr))LoaderSymbol("TUNER_get_afc_hint"))
#define xf86_fi1236_dump_status   ((void (*)(FI1236Ptr))LoaderSymbol("fi1236_dump_status"))
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
