head	1.4;
access;
symbols
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.6
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.09.16.19.10.23;	author matthieu;	state dead;
branches;
next	1.3;
commitid	Te1daavkBLskZ8gc;

1.3
date	2012.06.10.13.21.24;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.12.05.15.36.07;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.17.37;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.17.37;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#include "xf86.h"
#include "xf86i2c.h"
#include "tda9885.h"
#include "i2c_def.h"

TDA9885Ptr
Detect_tda9885(I2CBusPtr b, I2CSlaveAddr addr)
{
    TDA9885Ptr t;
    I2CByte a;

    t = calloc(1, sizeof(TDA9885Rec));
    if (t == NULL)
        return NULL;
    switch (addr) {
    case TDA9885_ADDR_1:
    case TDA9885_ADDR_2:
    case TDA9885_ADDR_3:
    case TDA9885_ADDR_4:
        t->d.DevName = "TDA9885 Alignment-free IF-PLL";
        break;
    default:
        t->d.DevName = "Generic TDAxxxx";
        break;
    }
    t->d.SlaveAddr = addr;
    t->d.pI2CBus = b;
    t->d.NextDev = NULL;
    t->d.StartTimeout = b->StartTimeout;
    t->d.BitTimeout = b->BitTimeout;
    t->d.AcknTimeout = b->AcknTimeout;
    t->d.ByteTimeout = b->ByteTimeout;

    if (!I2C_WriteRead(&(t->d), NULL, 0, &a, 1)) {
        free(t);
        return NULL;
    }

    /* set default parameters */
    if (!I2CDevInit(&(t->d))) {
        free(t);
        return NULL;
    }

    return t;
}

Bool
tda9885_init(TDA9885Ptr t)
{
    t->forced_mute_audio = 1;
    return TRUE;
}

void
tda9885_getstatus(TDA9885Ptr t)
{
    CARD8 value;

    I2C_WriteRead(&(t->d), NULL, 0, &value, 1);
    t->after_reset = value & 1;
    t->afc_status = (value >> 1) & 0xf;
    t->fm_carrier = (value >> 5) & 1;
    t->vif_level = (value >> 6) & 1;
    t->afc_win = (value >> 7) & 1;
}

void
tda9885_setparameters(TDA9885Ptr t)
{
    CARD8 data[4];

    data[0] = 0;                /* start with subaddress 0 */
    data[1] = (t->sound_trap & 1) | ((t->auto_mute_fm & 1) << 1) | ((t->carrier_mode & 1) << 2) | ((t->modulation & 3) << 3) | ((t->forced_mute_audio & 1) << 5) | ((t->port1 & 1) << 6) | ((t->port2 & 1) << 7);       /* B data */
    data[2] = (t->top_adjustment & 0x1f) | ((t->deemphasis & 0x3) << 5) | ((t->audio_gain & 1) << 7);   /* C data */
    data[3] = (t->standard_sound_carrier & 0x3) | ((t->standard_video_if & 0x07) << 2) | ((t->minimum_gain & 0x01) << 5) | ((t->gating & 0x01) << 6) | ((t->vif_agc & 0x01) << 7);      /* E data */

    I2C_WriteRead(&(t->d), data, 4, NULL, 0);

    xf86DrvMsg(t->d.pI2CBus->scrnIndex, X_INFO,
               "TDA9885 setparam: B data: %x, C data: %x, E data: %x\n",
               data[1], data[2], data[3]);
}

void
tda9885_dumpstatus(TDA9885Ptr t)
{
    xf86DrvMsg(t->d.pI2CBus->scrnIndex, X_INFO,
               "TDA9885 status: after_reset=%d afc_status=%d (%3.1f kHz off) fm_carrier=%d vif_level=%d afc_win=%d %s\n",
               t->after_reset, t->afc_status,
               (t->afc_status <
                8) ? -12.5 - t->afc_status * 25.0 : -12.5 + (16 -
                                                             t->afc_status) *
               25.0, t->fm_carrier, t->vif_level, t->afc_win,
               t->afc_win ? "VCO in" : "VCO out");
}
@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@@


1.2
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d10 5
d16 32
a47 39
TDA9885Ptr Detect_tda9885(I2CBusPtr b, I2CSlaveAddr addr)
{
  TDA9885Ptr t;
  I2CByte a;
  
  t = calloc(1, sizeof(TDA9885Rec));
  if(t == NULL) return NULL;
  switch(addr)
  {
      case TDA9885_ADDR_1:
      case TDA9885_ADDR_2:
      case TDA9885_ADDR_3:
      case TDA9885_ADDR_4:
	  t->d.DevName = "TDA9885 Alignment-free IF-PLL";
	  break;
      default:
          t->d.DevName = "Generic TDAxxxx";
	  break;
  }
  t->d.SlaveAddr = addr;
  t->d.pI2CBus = b;
  t->d.NextDev = NULL;
  t->d.StartTimeout = b->StartTimeout;
  t->d.BitTimeout = b->BitTimeout;
  t->d.AcknTimeout = b->AcknTimeout;
  t->d.ByteTimeout = b->ByteTimeout;
  
  if(!I2C_WriteRead(&(t->d), NULL, 0, &a, 1))
  {
     free(t);
     return NULL;
  }
  
  /* set default parameters */
  if(!I2CDevInit(&(t->d)))
  {
     free(t);
     return NULL;
  }
d49 1
a49 1
  return t;  
d52 2
a53 1
Bool tda9885_init(TDA9885Ptr t)
d55 2
a56 2
  t->forced_mute_audio=1;
  return TRUE;
d59 2
a60 1
void tda9885_getstatus(TDA9885Ptr t)
d62 1
a62 1
CARD8 value;
d64 6
a69 6
I2C_WriteRead(&(t->d), NULL, 0, &value, 1); 
t->after_reset=value & 1;
t->afc_status=(value >> 1) & 0xf;
t->fm_carrier=(value>>5)& 1;
t->vif_level=(value >>6) & 1;
t->afc_win=(value >> 7)&1;
d72 2
a73 1
void tda9885_setparameters(TDA9885Ptr t)
d75 1
a75 20
CARD8 data[4];

data[0]=0;  /* start with subaddress 0 */
data[1]=(t->sound_trap & 1) |
	((t->auto_mute_fm &1)<<1) |
	((t->carrier_mode &1)<<2) |
	((t->modulation &3)<<3) |
	((t->forced_mute_audio &1)<<5) |
	((t->port1 & 1)<<6) |
	((t->port2 &1)<<7);         /* B data */
data[2]=(t->top_adjustment & 0x1f) |
	((t->deemphasis & 0x3)<<5) |
	((t->audio_gain & 1) << 7);  /* C data */
data[3]=(t->standard_sound_carrier & 0x3) |
	((t->standard_video_if & 0x07)<<2) |
	((t->minimum_gain & 0x01)<<5) |
	((t->gating & 0x01)<<6) |
	((t->vif_agc & 0x01)<<7);   /* E data */

I2C_WriteRead(&(t->d), data, 4, NULL, 0); 
d77 10
a86 1
xf86DrvMsg(t->d.pI2CBus->scrnIndex,X_INFO,"TDA9885 setparam: B data: %x, C data: %x, E data: %x\n", data[1], data[2], data[3]);
d89 2
a90 1
void tda9885_dumpstatus(TDA9885Ptr t)
d92 8
a99 4
xf86DrvMsg(t->d.pI2CBus->scrnIndex,X_INFO,"TDA9885 status: after_reset=%d afc_status=%d (%3.1f kHz off) fm_carrier=%d vif_level=%d afc_win=%d %s\n",
		t->after_reset, t->afc_status, 
		(t->afc_status<8)?-12.5-t->afc_status*25.0:-12.5+(16-t->afc_status)*25.0,
		t->fm_carrier, t->vif_level, t->afc_win, t->afc_win?"VCO in": "VCO out");
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
  t = xcalloc(1, sizeof(TDA9885Rec));
d40 1
a40 1
     xfree(t);
d47 1
a47 1
     xfree(t);
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
