head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.09.16.19.10.23;	author matthieu;	state Exp;
branches;
next	1.5;
commitid	Te1daavkBLskZ8gc;

1.5
date	2014.09.27.17.53.02;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	cVXoV5PxI8YrEaVA;

1.4
date	2013.06.07.17.28.51;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2012.06.10.13.21.24;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.17.39;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.17.39;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@/*
 *  Copyright (C) 1998 Itai Nahshon, Michael Schimek
 */

#ifndef _XF86I2C_H
#define _XF86I2C_H

#include "regionstr.h"
#include "xf86.h"

typedef unsigned char I2CByte;
typedef unsigned short I2CSlaveAddr;

typedef struct _I2CBusRec *I2CBusPtr;
typedef struct _I2CDevRec *I2CDevPtr;

/* I2C masters have to register themselves */

typedef struct _I2CBusRec {
    char *BusName;
    int scrnIndex;
    ScrnInfoPtr pScrn;

    void (*I2CUDelay) (I2CBusPtr b, int usec);

    void (*I2CPutBits) (I2CBusPtr b, int scl, int sda);
    void (*I2CGetBits) (I2CBusPtr b, int *scl, int *sda);

    /* Look at the generic routines to see how these functions should behave. */

    Bool (*I2CStart) (I2CBusPtr b, int timeout);
    Bool (*I2CAddress) (I2CDevPtr d, I2CSlaveAddr);
    void (*I2CStop) (I2CDevPtr d);
    Bool (*I2CPutByte) (I2CDevPtr d, I2CByte data);
    Bool (*I2CGetByte) (I2CDevPtr d, I2CByte * data, Bool);

    DevUnion DriverPrivate;

    int HoldTime;               /* 1 / bus clock frequency, 5 or 2 usec */

    int BitTimeout;             /* usec */
    int ByteTimeout;            /* usec */
    int AcknTimeout;            /* usec */
    int StartTimeout;           /* usec */
    int RiseFallTime;           /* usec */

    I2CDevPtr FirstDev;
    I2CBusPtr NextBus;
    Bool (*I2CWriteRead) (I2CDevPtr d, I2CByte * WriteBuffer, int nWrite,
                          I2CByte * ReadBuffer, int nRead);
} I2CBusRec;

#define CreateI2CBusRec		xf86CreateI2CBusRec
extern _X_EXPORT I2CBusPtr xf86CreateI2CBusRec(void);

#define DestroyI2CBusRec	xf86DestroyI2CBusRec
extern _X_EXPORT void xf86DestroyI2CBusRec(I2CBusPtr pI2CBus, Bool unalloc,
                                           Bool devs_too);
#define I2CBusInit		xf86I2CBusInit
extern _X_EXPORT Bool xf86I2CBusInit(I2CBusPtr pI2CBus);

extern _X_EXPORT I2CBusPtr xf86I2CFindBus(int scrnIndex, char *name);
extern _X_EXPORT int xf86I2CGetScreenBuses(int scrnIndex,
                                           I2CBusPtr ** pppI2CBus);

/* I2C slave devices */

typedef struct _I2CDevRec {
    const char *DevName;

    int BitTimeout;             /* usec */
    int ByteTimeout;            /* usec */
    int AcknTimeout;            /* usec */
    int StartTimeout;           /* usec */

    I2CSlaveAddr SlaveAddr;
    I2CBusPtr pI2CBus;
    I2CDevPtr NextDev;
    DevUnion DriverPrivate;
} I2CDevRec;

#define CreateI2CDevRec		xf86CreateI2CDevRec
extern _X_EXPORT I2CDevPtr xf86CreateI2CDevRec(void);
extern _X_EXPORT void xf86DestroyI2CDevRec(I2CDevPtr pI2CDev, Bool unalloc);

#define I2CDevInit		xf86I2CDevInit
extern _X_EXPORT Bool xf86I2CDevInit(I2CDevPtr pI2CDev);
extern _X_EXPORT I2CDevPtr xf86I2CFindDev(I2CBusPtr, I2CSlaveAddr);

/* See descriptions of these functions in xf86i2c.c */

#define I2CProbeAddress		xf86I2CProbeAddress
extern _X_EXPORT Bool xf86I2CProbeAddress(I2CBusPtr pI2CBus, I2CSlaveAddr);

#define		I2C_WriteRead xf86I2CWriteRead
extern _X_EXPORT Bool xf86I2CWriteRead(I2CDevPtr d, I2CByte * WriteBuffer,
                                       int nWrite, I2CByte * ReadBuffer,
                                       int nRead);
#define 	xf86I2CRead(d, rb, nr) xf86I2CWriteRead(d, NULL, 0, rb, nr)

extern _X_EXPORT Bool xf86I2CReadStatus(I2CDevPtr d, I2CByte * pbyte);
extern _X_EXPORT Bool xf86I2CReadByte(I2CDevPtr d, I2CByte subaddr,
                                      I2CByte * pbyte);
extern _X_EXPORT Bool xf86I2CReadBytes(I2CDevPtr d, I2CByte subaddr,
                                       I2CByte * pbyte, int n);
extern _X_EXPORT Bool xf86I2CReadWord(I2CDevPtr d, I2CByte subaddr,
                                      unsigned short *pword);
#define 	xf86I2CWrite(d, wb, nw) xf86I2CWriteRead(d, wb, nw, NULL, 0)
extern _X_EXPORT Bool xf86I2CWriteByte(I2CDevPtr d, I2CByte subaddr,
                                       I2CByte byte);
extern _X_EXPORT Bool xf86I2CWriteBytes(I2CDevPtr d, I2CByte subaddr,
                                        I2CByte * WriteBuffer, int nWrite);
extern _X_EXPORT Bool xf86I2CWriteWord(I2CDevPtr d, I2CByte subaddr,
                                       unsigned short word);
extern _X_EXPORT Bool xf86I2CWriteVec(I2CDevPtr d, I2CByte * vec, int nValues);

#endif /*_XF86I2C_H */
@


1.5
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d1 1
a1 1
/* 
@


1.4
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d69 1
a69 1
    char *DevName;
@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d9 1
d22 1
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@a4 1

d10 1
a10 1
typedef unsigned char  I2CByte;
d19 7
a25 7
    char *		BusName;
    int			scrnIndex;
    
    void		(*I2CUDelay) (I2CBusPtr b, int usec);
    
    void		(*I2CPutBits)(I2CBusPtr b, int  scl, int  sda);
    void		(*I2CGetBits)(I2CBusPtr b, int *scl, int *sda);
d29 20
a48 20
    Bool        	(*I2CStart)  (I2CBusPtr b, int timeout);
    Bool        	(*I2CAddress)(I2CDevPtr d, I2CSlaveAddr);
    void        	(*I2CStop)   (I2CDevPtr d);
    Bool		(*I2CPutByte)(I2CDevPtr d, I2CByte data);
    Bool		(*I2CGetByte)(I2CDevPtr d, I2CByte *data, Bool);

    DevUnion		DriverPrivate;

    int         	HoldTime; 	/* 1 / bus clock frequency, 5 or 2 usec */

    int			BitTimeout;	/* usec */
    int 		ByteTimeout;	/* usec */
    int			AcknTimeout;    /* usec */
    int 		StartTimeout;	/* usec */
    int                 RiseFallTime;   /* usec */

    I2CDevPtr		FirstDev;
    I2CBusPtr		NextBus;
    Bool 		(*I2CWriteRead)(I2CDevPtr d, I2CByte *WriteBuffer, int nWrite,
		                   I2CByte *ReadBuffer,  int nRead);
d53 1
d55 2
a56 1
extern _X_EXPORT void xf86DestroyI2CBusRec(I2CBusPtr pI2CBus, Bool unalloc, Bool devs_too);
d61 2
a62 2
extern _X_EXPORT int xf86I2CGetScreenBuses(int scrnIndex, I2CBusPtr **pppI2CBus);

d67 1
a67 1
    char *		DevName;
d69 9
a77 9
    int			BitTimeout;	/* usec */
    int 		ByteTimeout;	/* usec */
    int			AcknTimeout;    /* usec */
    int 		StartTimeout;	/* usec */

    I2CSlaveAddr	SlaveAddr;
    I2CBusPtr		pI2CBus;
    I2CDevPtr		NextDev;
    DevUnion		DriverPrivate;
d83 1
d94 3
a96 2
extern _X_EXPORT Bool xf86I2CWriteRead(I2CDevPtr d, I2CByte *WriteBuffer, int nWrite,
		                   I2CByte *ReadBuffer,  int nRead);
d99 7
a105 4
extern _X_EXPORT Bool xf86I2CReadStatus(I2CDevPtr d, I2CByte *pbyte);
extern _X_EXPORT Bool xf86I2CReadByte(I2CDevPtr d, I2CByte subaddr, I2CByte *pbyte);
extern _X_EXPORT Bool xf86I2CReadBytes(I2CDevPtr d, I2CByte subaddr, I2CByte *pbyte, int n);
extern _X_EXPORT Bool xf86I2CReadWord(I2CDevPtr d, I2CByte subaddr, unsigned short *pword);
d107 7
a113 4
extern _X_EXPORT Bool xf86I2CWriteByte(I2CDevPtr d, I2CByte subaddr, I2CByte byte);
extern _X_EXPORT Bool xf86I2CWriteBytes(I2CDevPtr d, I2CByte subaddr, I2CByte *WriteBuffer, int nWrite);
extern _X_EXPORT Bool xf86I2CWriteWord(I2CDevPtr d, I2CByte subaddr, unsigned short word);
extern _X_EXPORT Bool xf86I2CWriteVec(I2CDevPtr d, I2CByte *vec, int nValues);
@


1.1
log
@Initial revision
@
text
@d52 9
a60 5
I2CBusPtr 	xf86CreateI2CBusRec(void);
void      	xf86DestroyI2CBusRec(I2CBusPtr pI2CBus, Bool unalloc, Bool devs_too);
Bool      	xf86I2CBusInit(I2CBusPtr pI2CBus);
I2CBusPtr 	xf86I2CFindBus(int scrnIndex, char *name);
int		xf86I2CGetScreenBuses(int scrnIndex, I2CBusPtr **pppI2CBus);
d79 6
a84 4
I2CDevPtr 	xf86CreateI2CDevRec(void);
void      	xf86DestroyI2CDevRec(I2CDevPtr pI2CDev, Bool unalloc);
Bool      	xf86I2CDevInit(I2CDevPtr pI2CDev);
I2CDevPtr 	xf86I2CFindDev(I2CBusPtr, I2CSlaveAddr);
d88 5
a92 2
Bool	  	xf86I2CProbeAddress(I2CBusPtr pI2CBus, I2CSlaveAddr);
Bool 		xf86I2CWriteRead(I2CDevPtr d, I2CByte *WriteBuffer, int nWrite,
d95 5
a99 4
Bool 		xf86I2CReadStatus(I2CDevPtr d, I2CByte *pbyte);
Bool 		xf86I2CReadByte(I2CDevPtr d, I2CByte subaddr, I2CByte *pbyte);
Bool 		xf86I2CReadBytes(I2CDevPtr d, I2CByte subaddr, I2CByte *pbyte, int n);
Bool 		xf86I2CReadWord(I2CDevPtr d, I2CByte subaddr, unsigned short *pword);
d101 4
a104 4
Bool 		xf86I2CWriteByte(I2CDevPtr d, I2CByte subaddr, I2CByte byte);
Bool 		xf86I2CWriteBytes(I2CDevPtr d, I2CByte subaddr, I2CByte *WriteBuffer, int nWrite);
Bool 		xf86I2CWriteWord(I2CDevPtr d, I2CByte subaddr, unsigned short word);
Bool 		xf86I2CWriteVec(I2CDevPtr d, I2CByte *vec, int nValues);
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
