head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.10
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.8
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.2
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.6
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.4
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.2
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.05.02.19.27.49;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2012.06.10.13.21.25;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.05.13.32.52;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.27.19.02.33;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.19.44.26;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.22;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2007.11.24.18.01.19;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2007.11.24.18.01.19;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@/*
 * Copyright Â© 2006 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Authors:
 *    Eric Anholt <eric@@anholt.net>
 *
 */

#ifndef _XF86MODES_H_
#define _XF86MODES_H_

#include <stddef.h>
#include <string.h>
#include <stdio.h>

#include "xf86.h"
#include "xorgVersion.h"
#include "edid.h"
#include "xf86Parser.h"

extern _X_EXPORT double xf86ModeHSync(const DisplayModeRec * mode);
extern _X_EXPORT double xf86ModeVRefresh(const DisplayModeRec * mode);
extern _X_EXPORT unsigned int xf86ModeBandwidth(DisplayModePtr mode, int depth);

extern _X_EXPORT int
 xf86ModeWidth(const DisplayModeRec * mode, Rotation rotation);

extern _X_EXPORT int
 xf86ModeHeight(const DisplayModeRec * mode, Rotation rotation);

extern _X_EXPORT DisplayModePtr xf86DuplicateMode(const DisplayModeRec * pMode);
extern _X_EXPORT DisplayModePtr xf86DuplicateModes(ScrnInfoPtr pScrn,
                                                   DisplayModePtr modeList);
extern _X_EXPORT void xf86SetModeDefaultName(DisplayModePtr mode);
extern _X_EXPORT void xf86SetModeCrtc(DisplayModePtr p, int adjustFlags);
extern _X_EXPORT Bool xf86ModesEqual(const DisplayModeRec * pMode1,
                                     const DisplayModeRec * pMode2);
extern _X_EXPORT void xf86PrintModeline(int scrnIndex, DisplayModePtr mode);
extern _X_EXPORT DisplayModePtr xf86ModesAdd(DisplayModePtr modes,
                                             DisplayModePtr new);

extern _X_EXPORT DisplayModePtr xf86DDCGetModes(int scrnIndex, xf86MonPtr DDC);
extern _X_EXPORT DisplayModePtr xf86CVTMode(int HDisplay, int VDisplay,
                                            float VRefresh, Bool Reduced,
                                            Bool Interlaced);
extern _X_EXPORT DisplayModePtr xf86GTFMode(int h_pixels, int v_lines,
                                            float freq, int interlaced,
                                            int margins);

extern _X_EXPORT Bool
 xf86ModeIsReduced(const DisplayModeRec * mode);

extern _X_EXPORT void
 xf86ValidateModesFlags(ScrnInfoPtr pScrn, DisplayModePtr modeList, int flags);

extern _X_EXPORT void

xf86ValidateModesClocks(ScrnInfoPtr pScrn, DisplayModePtr modeList,
                        int *min, int *max, int n_ranges);

extern _X_EXPORT void

xf86ValidateModesSize(ScrnInfoPtr pScrn, DisplayModePtr modeList,
                      int maxX, int maxY, int maxPitch);

extern _X_EXPORT void
 xf86ValidateModesSync(ScrnInfoPtr pScrn, DisplayModePtr modeList, MonPtr mon);

extern _X_EXPORT void

xf86ValidateModesBandwidth(ScrnInfoPtr pScrn, DisplayModePtr modeList,
                           unsigned int bandwidth, int depth);

extern _X_EXPORT void
 xf86ValidateModesReducedBlanking(ScrnInfoPtr pScrn, DisplayModePtr modeList);

extern _X_EXPORT void

xf86PruneInvalidModes(ScrnInfoPtr pScrn, DisplayModePtr * modeList,
                      Bool verbose);

extern _X_EXPORT DisplayModePtr xf86PruneDuplicateModes(DisplayModePtr modes);

extern _X_EXPORT void
 xf86ValidateModesUserConfig(ScrnInfoPtr pScrn, DisplayModePtr modeList);

extern _X_EXPORT DisplayModePtr
xf86GetMonitorModes(ScrnInfoPtr pScrn, XF86ConfMonitorPtr conf_monitor);

extern _X_EXPORT DisplayModePtr xf86GetDefaultModes(void);

extern _X_EXPORT void
xf86SaveModeContents(DisplayModePtr intern, const DisplayModeRec *mode);

extern _X_EXPORT void
 xf86DDCApplyQuirks(int scrnIndex, xf86MonPtr DDC);

#endif                          /* _XF86MODES_H_ */
@


1.6
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@a38 3
#if XF86_MODES_RENAME
#include "xf86Rename.h"
#endif
d110 3
@


1.5
log
@Update to xserver 1.11.2
@
text
@d43 2
a44 2
extern _X_EXPORT double xf86ModeHSync(const DisplayModeRec *mode);
extern _X_EXPORT double xf86ModeVRefresh(const DisplayModeRec *mode);
d48 2
a49 2
xf86ModeWidth (const DisplayModeRec *mode, Rotation rotation);
    
d51 1
a51 1
xf86ModeHeight (const DisplayModeRec *mode, Rotation rotation);
d53 1
a53 1
extern _X_EXPORT DisplayModePtr xf86DuplicateMode(const DisplayModeRec *pMode);
d55 1
a55 1
				       DisplayModePtr modeList);
d58 5
a62 4
extern _X_EXPORT Bool xf86ModesEqual(const DisplayModeRec *pMode1,
		    const DisplayModeRec *pMode2);
extern _X_EXPORT void xf86PrintModeline(int scrnIndex,DisplayModePtr mode);
extern _X_EXPORT DisplayModePtr xf86ModesAdd(DisplayModePtr modes, DisplayModePtr new);
d65 6
a70 3
extern _X_EXPORT DisplayModePtr xf86CVTMode(int HDisplay, int VDisplay, float VRefresh,
			   Bool Reduced, Bool Interlaced);
extern _X_EXPORT DisplayModePtr xf86GTFMode(int h_pixels, int v_lines, float freq, int interlaced, int margins);
d73 1
a73 1
xf86ModeIsReduced(const DisplayModeRec *mode);
d76 1
a76 2
xf86ValidateModesFlags(ScrnInfoPtr pScrn, DisplayModePtr modeList,
		       int flags);
d79 1
d81 1
a81 1
			int *min, int *max, int n_ranges);
d84 1
d86 1
a86 1
		      int maxX, int maxY, int maxPitch);
d89 1
a89 2
xf86ValidateModesSync(ScrnInfoPtr pScrn, DisplayModePtr modeList,
		      MonPtr mon);
d92 1
d94 1
a94 1
			   unsigned int bandwidth, int depth);
d97 1
a97 1
xf86ValidateModesReducedBlanking(ScrnInfoPtr pScrn, DisplayModePtr modeList);
a99 2
xf86PruneInvalidModes(ScrnInfoPtr pScrn, DisplayModePtr *modeList,
		      Bool verbose);
d101 2
a102 2
extern _X_EXPORT DisplayModePtr
xf86PruneDuplicateModes(DisplayModePtr modes);
d104 1
a104 3
extern _X_EXPORT void
xf86ValidateModesFlags(ScrnInfoPtr pScrn, DisplayModePtr modeList,
		       int flags);
d107 1
a107 1
xf86ValidateModesUserConfig(ScrnInfoPtr pScrn, DisplayModePtr modeList);
d110 1
a110 1
xf86GetMonitorModes (ScrnInfoPtr pScrn, XF86ConfMonitorPtr conf_monitor);
d112 1
a112 2
extern _X_EXPORT DisplayModePtr
xf86GetDefaultModes (void);
d115 1
a115 1
xf86DDCApplyQuirks(int scrnIndex, xf86MonPtr DDC);
d117 1
a117 1
#endif /* _XF86MODES_H_ */
@


1.4
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d2 1
a2 1
 * Copyright © 2006 Intel Corporation
@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d43 3
a45 3
double xf86ModeHSync(const DisplayModeRec *mode);
double xf86ModeVRefresh(const DisplayModeRec *mode);
unsigned int xf86ModeBandwidth(DisplayModePtr mode, int depth);
d47 1
a47 1
int
d50 1
a50 1
int
d53 2
a54 2
DisplayModePtr xf86DuplicateMode(const DisplayModeRec *pMode);
DisplayModePtr xf86DuplicateModes(ScrnInfoPtr pScrn,
d56 3
a58 3
void xf86SetModeDefaultName(DisplayModePtr mode);
void xf86SetModeCrtc(DisplayModePtr p, int adjustFlags);
Bool xf86ModesEqual(const DisplayModeRec *pMode1,
d60 2
a61 2
void xf86PrintModeline(int scrnIndex,DisplayModePtr mode);
DisplayModePtr xf86ModesAdd(DisplayModePtr modes, DisplayModePtr new);
d63 2
a64 2
DisplayModePtr xf86DDCGetModes(int scrnIndex, xf86MonPtr DDC);
DisplayModePtr xf86CVTMode(int HDisplay, int VDisplay, float VRefresh,
d66 1
a66 1
DisplayModePtr xf86GTFMode(int h_pixels, int v_lines, float freq, int interlaced, int margins);
d68 1
a68 1
Bool
d71 1
a71 1
void
d75 1
a75 1
void
d79 1
a79 1
void
d83 1
a83 1
void
d87 1
a87 1
void
d91 1
a91 1
void
d94 1
a94 1
void
d98 4
a101 1
void
d105 1
a105 1
void
d108 1
a108 1
DisplayModePtr
d111 2
a112 2
DisplayModePtr
xf86GetDefaultModes (Bool interlaceAllowed, Bool doubleScanAllowed);
d114 1
a114 1
void
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d43 2
a44 2
double xf86ModeHSync(DisplayModePtr mode);
double xf86ModeVRefresh(DisplayModePtr mode);
d48 1
a48 1
xf86ModeWidth (DisplayModePtr mode, Rotation rotation);
d51 1
a51 1
xf86ModeHeight (DisplayModePtr mode, Rotation rotation);
d53 1
a53 1
DisplayModePtr xf86DuplicateMode(DisplayModePtr pMode);
d58 2
a59 1
Bool xf86ModesEqual(DisplayModePtr pMode1, DisplayModePtr pMode2);
d67 3
@


1.1
log
@Initial revision
@
text
@d45 1
d65 1
d84 7
d106 3
@


1.1.1.1
log
@xserver 1.4
@
text
@@
