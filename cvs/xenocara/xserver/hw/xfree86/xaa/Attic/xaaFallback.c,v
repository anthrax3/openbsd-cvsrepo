head	1.4;
access;
symbols
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.1.1.0.18
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.14
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.06.07.17.28.53;	author matthieu;	state dead;
branches;
next	1.3;

1.3
date	2012.06.10.13.21.27;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.05.13.32.52;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.17.46;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.17.46;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@
#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#include "misc.h"
#include "xf86.h"
#include "xf86_OSproc.h"

#include <X11/X.h>
#include "scrnintstr.h"
#include "xf86str.h"
#include "xaa.h"
#include "xaalocal.h"
#include "gcstruct.h"
#include "pixmapstr.h"
#include "xaawrap.h"

static void
XAAFillSpansFallback(DrawablePtr pDraw,
                     GC * pGC,
                     int nInit,
                     DDXPointPtr pptInit, int *pwidthInit, int fSorted)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->FillSpans) (pDraw, pGC, nInit, pptInit, pwidthInit, fSorted);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAASetSpansFallback(DrawablePtr pDraw,
                    GCPtr pGC,
                    char *pcharsrc,
                    register DDXPointPtr ppt,
                    int *pwidth, int nspans, int fSorted)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->SetSpans) (pDraw, pGC, pcharsrc, ppt, pwidth, nspans, fSorted);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAPutImageFallback(DrawablePtr pDraw,
                    GCPtr pGC,
                    int depth,
                    int x, int y, int w, int h,
                    int leftPad, int format, char *pImage)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->PutImage) (pDraw, pGC, depth, x, y, w, h,
                           leftPad, format, pImage);
    XAA_GC_OP_EPILOGUE(pGC);
}

static RegionPtr
XAACopyAreaFallback(DrawablePtr pSrc,
                    DrawablePtr pDst,
                    GC * pGC,
                    int srcx, int srcy,
                    int width, int height, int dstx, int dsty)
{
    RegionPtr ret;

    XAA_GC_OP_PROLOGUE(pGC);
    if ((pSrc->type == DRAWABLE_WINDOW) || (pDst->type == DRAWABLE_WINDOW) ||
        IS_OFFSCREEN_PIXMAP(pSrc) || IS_OFFSCREEN_PIXMAP(pDst)) {
        SYNC_CHECK(pGC);
    }
    ret = (*pGC->ops->CopyArea) (pSrc, pDst,
                                 pGC, srcx, srcy, width, height, dstx, dsty);
    XAA_GC_OP_EPILOGUE(pGC);
    return ret;
}

static RegionPtr
XAACopyPlaneFallback(DrawablePtr pSrc,
                     DrawablePtr pDst,
                     GCPtr pGC,
                     int srcx, int srcy,
                     int width, int height,
                     int dstx, int dsty, unsigned long bitPlane)
{
    RegionPtr ret;

    XAA_GC_OP_PROLOGUE(pGC);
    if ((pSrc->type == DRAWABLE_WINDOW) || (pDst->type == DRAWABLE_WINDOW) ||
        IS_OFFSCREEN_PIXMAP(pSrc) || IS_OFFSCREEN_PIXMAP(pDst)) {
        SYNC_CHECK(pGC);
    }
    ret = (*pGC->ops->CopyPlane) (pSrc, pDst,
                                  pGC, srcx, srcy, width, height, dstx, dsty,
                                  bitPlane);
    XAA_GC_OP_EPILOGUE(pGC);
    return ret;
}

static void
XAAPolyPointFallback(DrawablePtr pDraw,
                     GCPtr pGC, int mode, int npt, xPoint * pptInit)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->PolyPoint) (pDraw, pGC, mode, npt, pptInit);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAPolylinesFallback(DrawablePtr pDraw,
                     GCPtr pGC, int mode, int npt, DDXPointPtr pptInit)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->Polylines) (pDraw, pGC, mode, npt, pptInit);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAPolySegmentFallback(DrawablePtr pDraw, GCPtr pGC, int nseg, xSegment * pSeg)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->PolySegment) (pDraw, pGC, nseg, pSeg);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAPolyRectangleFallback(DrawablePtr pDraw,
                         GCPtr pGC, int nRectsInit, xRectangle *pRectsInit)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->PolyRectangle) (pDraw, pGC, nRectsInit, pRectsInit);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAPolyArcFallback(DrawablePtr pDraw, GCPtr pGC, int narcs, xArc * parcs)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->PolyArc) (pDraw, pGC, narcs, parcs);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAFillPolygonFallback(DrawablePtr pDraw,
                       GCPtr pGC,
                       int shape, int mode, int count, DDXPointPtr ptsIn)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->FillPolygon) (pDraw, pGC, shape, mode, count, ptsIn);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAPolyFillRectFallback(DrawablePtr pDraw,
                        GCPtr pGC, int nrectFill, xRectangle *prectInit)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->PolyFillRect) (pDraw, pGC, nrectFill, prectInit);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAPolyFillArcFallback(DrawablePtr pDraw, GCPtr pGC, int narcs, xArc * parcs)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->PolyFillArc) (pDraw, pGC, narcs, parcs);
    XAA_GC_OP_EPILOGUE(pGC);
}

static int
XAAPolyText8Fallback(DrawablePtr pDraw,
                     GCPtr pGC, int x, int y, int count, char *chars)
{
    int ret;

    XAA_GC_OP_PROLOGUE(pGC);
    SYNC_CHECK(pGC);
    ret = (*pGC->ops->PolyText8) (pDraw, pGC, x, y, count, chars);
    XAA_GC_OP_EPILOGUE(pGC);
    return ret;
}

static int
XAAPolyText16Fallback(DrawablePtr pDraw,
                      GCPtr pGC, int x, int y, int count, unsigned short *chars)
{
    int ret;

    XAA_GC_OP_PROLOGUE(pGC);
    SYNC_CHECK(pGC);
    ret = (*pGC->ops->PolyText16) (pDraw, pGC, x, y, count, chars);
    XAA_GC_OP_EPILOGUE(pGC);
    return ret;
}

static void
XAAImageText8Fallback(DrawablePtr pDraw,
                      GCPtr pGC, int x, int y, int count, char *chars)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->ImageText8) (pDraw, pGC, x, y, count, chars);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAImageText16Fallback(DrawablePtr pDraw,
                       GCPtr pGC,
                       int x, int y, int count, unsigned short *chars)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->ImageText16) (pDraw, pGC, x, y, count, chars);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAImageGlyphBltFallback(DrawablePtr pDraw,
                         GCPtr pGC,
                         int xInit, int yInit,
                         unsigned int nglyph,
                         CharInfoPtr * ppci, pointer pglyphBase)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->ImageGlyphBlt) (pDraw, pGC, xInit, yInit, nglyph, ppci,
                                pglyphBase);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAPolyGlyphBltFallback(DrawablePtr pDraw,
                        GCPtr pGC,
                        int xInit, int yInit,
                        unsigned int nglyph,
                        CharInfoPtr * ppci, pointer pglyphBase)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->PolyGlyphBlt) (pDraw, pGC, xInit, yInit, nglyph, ppci,
                               pglyphBase);
    XAA_GC_OP_EPILOGUE(pGC);
}

static void
XAAPushPixelsFallback(GCPtr pGC,
                      PixmapPtr pBitMap,
                      DrawablePtr pDraw, int dx, int dy, int xOrg, int yOrg)
{
    XAA_GC_OP_PROLOGUE_WITH_RETURN(pGC);
    SYNC_CHECK(pGC);
    (*pGC->ops->PushPixels) (pGC, pBitMap, pDraw, dx, dy, xOrg, yOrg);
    XAA_GC_OP_EPILOGUE(pGC);
}

GCOps XAAFallbackOps = {
    XAAFillSpansFallback, XAASetSpansFallback,
    XAAPutImageFallback, XAACopyAreaFallback,
    XAACopyPlaneFallback, XAAPolyPointFallback,
    XAAPolylinesFallback, XAAPolySegmentFallback,
    XAAPolyRectangleFallback, XAAPolyArcFallback,
    XAAFillPolygonFallback, XAAPolyFillRectFallback,
    XAAPolyFillArcFallback, XAAPolyText8Fallback,
    XAAPolyText16Fallback, XAAImageText8Fallback,
    XAAImageText16Fallback, XAAImageGlyphBltFallback,
    XAAPolyGlyphBltFallback, XAAPushPixelsFallback,
};

GCOps *
XAAGetFallbackOps(void)
{
    return &XAAFallbackOps;
}
@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@@


1.2
log
@Update to xserver 1.11.2
@
text
@a18 2


d20 4
a23 7
XAAFillSpansFallback(
    DrawablePtr pDraw,
    GC		*pGC,
    int		nInit,	
    DDXPointPtr pptInit,	
    int *pwidthInit,		
    int fSorted )
d27 1
a27 1
    (*pGC->ops->FillSpans)(pDraw, pGC, nInit, pptInit, pwidthInit, fSorted);
d32 5
a36 8
XAASetSpansFallback(
    DrawablePtr		pDraw,
    GCPtr		pGC,
    char		*pcharsrc,
    register DDXPointPtr ppt,
    int			*pwidth,
    int			nspans,
    int			fSorted )
d40 1
a40 1
    (*pGC->ops->SetSpans)(pDraw, pGC, pcharsrc, ppt, pwidth, nspans, fSorted);
d45 5
a49 8
XAAPutImageFallback(
    DrawablePtr pDraw,
    GCPtr	pGC,
    int		depth, 
    int x, int y, int w, int h,
    int		leftPad,
    int		format,
    char 	*pImage )
d53 2
a54 2
    (*pGC->ops->PutImage)(pDraw, pGC, depth, x, y, w, h, 
		leftPad, format, pImage);
d59 5
a63 7
XAACopyAreaFallback(
    DrawablePtr pSrc,
    DrawablePtr pDst,
    GC *pGC,
    int srcx, int srcy,
    int width, int height,
    int dstx, int dsty )
d68 3
a70 3
    if((pSrc->type == DRAWABLE_WINDOW) || (pDst->type == DRAWABLE_WINDOW) ||
	IS_OFFSCREEN_PIXMAP(pSrc) || IS_OFFSCREEN_PIXMAP(pDst)) {
	SYNC_CHECK(pGC);
d72 2
a73 2
    ret = (*pGC->ops->CopyArea)(pSrc, pDst,
            pGC, srcx, srcy, width, height, dstx, dsty);
d79 6
a84 8
XAACopyPlaneFallback(
    DrawablePtr	pSrc,
    DrawablePtr	pDst,
    GCPtr pGC,
    int	srcx, int srcy,
    int	width, int height,
    int	dstx, int dsty,
    unsigned long bitPlane )
d89 3
a91 3
    if((pSrc->type == DRAWABLE_WINDOW) || (pDst->type == DRAWABLE_WINDOW) ||
	IS_OFFSCREEN_PIXMAP(pSrc) || IS_OFFSCREEN_PIXMAP(pDst)) {
	SYNC_CHECK(pGC);
d93 3
a95 2
    ret = (*pGC->ops->CopyPlane)(pSrc, pDst,
	       pGC, srcx, srcy, width, height, dstx, dsty, bitPlane);
d101 2
a102 6
XAAPolyPointFallback(
    DrawablePtr pDraw,
    GCPtr pGC,
    int mode,
    int npt,
    xPoint *pptInit )
d106 1
a106 1
    (*pGC->ops->PolyPoint)(pDraw, pGC, mode, npt, pptInit);
a109 1

d111 2
a112 6
XAAPolylinesFallback(
    DrawablePtr pDraw,
    GCPtr	pGC,
    int		mode,		
    int		npt,		
    DDXPointPtr pptInit )
d116 1
a116 1
    (*pGC->ops->Polylines)(pDraw, pGC, mode, npt, pptInit);
d120 2
a121 6
static void 
XAAPolySegmentFallback(
    DrawablePtr	pDraw,
    GCPtr	pGC,
    int		nseg,
    xSegment	*pSeg )
d125 1
a125 1
    (*pGC->ops->PolySegment)(pDraw, pGC, nseg, pSeg);
d130 2
a131 5
XAAPolyRectangleFallback(
    DrawablePtr  pDraw,
    GCPtr        pGC,
    int	         nRectsInit,
    xRectangle  *pRectsInit )
d135 1
a135 1
    (*pGC->ops->PolyRectangle)(pDraw, pGC, nRectsInit, pRectsInit);
d140 1
a140 5
XAAPolyArcFallback(
    DrawablePtr	pDraw,
    GCPtr	pGC,
    int		narcs,
    xArc	*parcs )
d144 1
a144 1
    (*pGC->ops->PolyArc)(pDraw, pGC, narcs, parcs);
d149 3
a151 7
XAAFillPolygonFallback(
    DrawablePtr	pDraw,
    GCPtr	pGC,
    int		shape,
    int		mode,
    int		count,
    DDXPointPtr	ptsIn )
d155 1
a155 1
    (*pGC->ops->FillPolygon)(pDraw, pGC, shape, mode, count, ptsIn);
d159 3
a161 7

static void 
XAAPolyFillRectFallback(
    DrawablePtr	pDraw,
    GCPtr	pGC,
    int		nrectFill, 
    xRectangle	*prectInit )  
d165 1
a165 1
    (*pGC->ops->PolyFillRect)(pDraw, pGC, nrectFill, prectInit);
a168 1

d170 1
a170 5
XAAPolyFillArcFallback(
    DrawablePtr	pDraw,
    GCPtr	pGC,
    int		narcs,
    xArc	*parcs )
d174 1
a174 1
    (*pGC->ops->PolyFillArc)(pDraw, pGC, narcs, parcs);
d179 2
a180 7
XAAPolyText8Fallback(
    DrawablePtr pDraw,
    GCPtr	pGC,
    int		x, 
    int 	y,
    int 	count,
    char	*chars )
d186 1
a186 1
    ret = (*pGC->ops->PolyText8)(pDraw, pGC, x, y, count, chars);
d192 2
a193 7
XAAPolyText16Fallback(
    DrawablePtr pDraw,
    GCPtr	pGC,
    int		x,
    int		y,
    int 	count,
    unsigned short *chars )
d199 1
a199 1
    ret = (*pGC->ops->PolyText16)(pDraw, pGC, x, y, count, chars);
d205 2
a206 7
XAAImageText8Fallback(
    DrawablePtr pDraw,
    GCPtr	pGC,
    int		x, 
    int		y,
    int 	count,
    char	*chars )
d210 1
a210 1
    (*pGC->ops->ImageText8)(pDraw, pGC, x, y, count, chars);
d215 3
a217 7
XAAImageText16Fallback(
    DrawablePtr pDraw,
    GCPtr	pGC,
    int		x,
    int		y,
    int 	count,
    unsigned short *chars )
d221 1
a221 1
    (*pGC->ops->ImageText16)(pDraw, pGC, x, y, count, chars);
a224 1

d226 5
a230 7
XAAImageGlyphBltFallback(
    DrawablePtr pDraw,
    GCPtr pGC,
    int xInit, int yInit,
    unsigned int nglyph,
    CharInfoPtr *ppci,
    pointer pglyphBase )
d234 2
a235 1
    (*pGC->ops->ImageGlyphBlt)(pDraw, pGC, xInit, yInit, nglyph, ppci, pglyphBase);
d240 5
a244 7
XAAPolyGlyphBltFallback(
    DrawablePtr pDraw,
    GCPtr pGC,
    int xInit, int yInit,
    unsigned int nglyph,
    CharInfoPtr *ppci,
    pointer pglyphBase )
d248 2
a249 1
    (*pGC->ops->PolyGlyphBlt)(pDraw, pGC, xInit, yInit, nglyph, ppci, pglyphBase);
d254 3
a256 5
XAAPushPixelsFallback(
    GCPtr	pGC,
    PixmapPtr	pBitMap,
    DrawablePtr pDraw,
    int	dx, int dy, int xOrg, int yOrg )
d260 1
a260 1
    (*pGC->ops->PushPixels)(pGC, pBitMap, pDraw, dx, dy, xOrg, yOrg);
d265 9
a273 9
    XAAFillSpansFallback, XAASetSpansFallback, 
    XAAPutImageFallback, XAACopyAreaFallback, 
    XAACopyPlaneFallback, XAAPolyPointFallback, 
    XAAPolylinesFallback, XAAPolySegmentFallback, 
    XAAPolyRectangleFallback, XAAPolyArcFallback, 
    XAAFillPolygonFallback, XAAPolyFillRectFallback, 
    XAAPolyFillArcFallback, XAAPolyText8Fallback, 
    XAAPolyText16Fallback, XAAImageText8Fallback, 
    XAAImageText16Fallback, XAAImageGlyphBltFallback, 
d277 2
a278 1
GCOps *XAAGetFallbackOps(void)
@


1.1
log
@Initial revision
@
text
@a345 1
    {NULL}		/* devPrivate */
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
