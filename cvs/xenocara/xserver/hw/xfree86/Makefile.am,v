head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.3.0.4
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.2
	v1_4_0_90:1.1.1.3
	v1_4:1.1.1.3
	OPENBSD_4_2:1.1.1.2.0.2
	OPENBSD_4_2_BASE:1.1.1.2
	v1_2_0:1.1.1.2
	v1_1_99_903:1.1.1.2
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2016.05.29.12.02.37;	author matthieu;	state Exp;
branches;
next	1.11;
commitid	s0SI41sEunLdyFfd;

1.11
date	2015.09.16.19.10.22;	author matthieu;	state Exp;
branches;
next	1.10;
commitid	Te1daavkBLskZ8gc;

1.10
date	2014.10.20.06.14.23;	author matthieu;	state Exp;
branches;
next	1.9;
commitid	aEN1bIWfPYMEWSmW;

1.9
date	2014.09.27.17.53.01;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	cVXoV5PxI8YrEaVA;

1.8
date	2014.05.02.19.27.48;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2013.06.07.17.28.49;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2012.06.10.13.21.23;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.05.13.32.50;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.27.19.02.30;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.19.44.25;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.20;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.17.26;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.17.26;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.12.16.20.10.47;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2007.11.24.17.57.16;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Update to xserver 1.18.3. Tested by shadchin@@ and naddy@@.

Note that indirect GLX is now disbled by default.
@
text
@
if DRI
DRI_SUBDIR = dri
DRI_LIB = dri/libdri.la
endif

if DRI2
DRI2_SUBDIR = dri2
DRI2_LIB = dri2/libdri2.la
endif

if DRI3
DRI3_BUILDDIR = $(top_builddir)/dri3
DRI3_LIB = $(DRI3_BUILDDIR)/libdri3.la
endif

if GLAMOR_EGL
GLAMOR_EGL_SUBDIR = glamor_egl
endif

if XF86UTILS
XF86UTILS_SUBDIR = utils
endif

if VGAHW
VGAHW_SUBDIR = vgahw
endif

if VBE
VBE_SUBDIR = vbe
endif

if INT10MODULE
INT10_SUBDIR = int10
endif

SUBDIRS = common ddc x86emu $(INT10_SUBDIR) os-support parser \
	  ramdac $(VGAHW_SUBDIR) loader modes $(DRI_SUBDIR) \
	  $(DRI2_SUBDIR) . $(VBE_SUBDIR) i2c dixmods \
	  fbdevhw shadowfb exa $(XF86UTILS_SUBDIR) doc man \
	  $(GLAMOR_EGL_SUBDIR) drivers

DIST_SUBDIRS = common ddc i2c x86emu int10 fbdevhw os-support \
               parser ramdac shadowfb vbe vgahw \
               loader dixmods dri dri2 exa modes \
	       utils doc man glamor_egl drivers

bin_PROGRAMS = Xorg
nodist_Xorg_SOURCES = sdksyms.c

AM_CFLAGS = $(DIX_CFLAGS) @@XORG_CFLAGS@@
AM_CPPFLAGS = $(XORG_INCS) -I$(srcdir)/parser \
	-I$(srcdir)/ddc -I$(srcdir)/i2c -I$(srcdir)/modes -I$(srcdir)/ramdac \
	-I$(srcdir)/dri -I$(srcdir)/dri2 -I$(top_srcdir)/dri3

LOCAL_LIBS = \
            $(MAIN_LIB) \
            $(XSERVER_LIBS) \
            loader/libloader.la \
            common/libcommon.la \
            os-support/libxorgos.la \
            parser/libxf86config.la \
            dixmods/libdixmods.la \
            modes/libxf86modes.la \
            ramdac/libramdac.la \
            ddc/libddc.la \
            i2c/libi2c.la \
            $(XORG_LIBS) \
            dixmods/libxorgxkb.la \
            $(DRI_LIB) \
            $(DRI2_LIB) \
	    $(DRI3_LIB) \
	    $(top_builddir)/miext/sync/libsync.la \
            $(top_builddir)/mi/libmi.la \
            $(top_builddir)/os/libos.la \
	    $(top_builddir)/Xext/libXvidmode.la

Xorg_LDADD = \
            $(LOCAL_LIBS) \
            $(XORG_SYS_LIBS) \
            $(XSERVER_SYS_LIBS)
Xorg_DEPENDENCIES = $(LOCAL_LIBS)

Xorg_LDFLAGS = $(LD_EXPORT_SYMBOLS_FLAG)

if SUID_WRAPPER
wrapdir = $(SUID_WRAPPER_DIR)
wrap_PROGRAMS = Xorg.wrap
Xorg_wrap_SOURCES = xorg-wrapper.c
endif

BUILT_SOURCES = xorg.conf.example
DISTCLEANFILES = xorg.conf.example
EXTRA_DIST = xorgconf.cpp

# Without logdir, X will post an error on the terminal and will not start
install-data-local:
	$(AM_V_GEN)$(MKDIR_P) $(DESTDIR)$(logdir)
if CYGWIN
	$(INSTALL_DATA) libXorg.exe.a $(DESTDIR)$(libdir)/libXorg.exe.a
endif

install-exec-hook:
	(cd $(DESTDIR)$(bindir) && rm -f X && $(LN_S) Xorg$(EXEEXT) X)
if INSTALL_SETUID
	chown root $(DESTDIR)$(bindir)/Xorg
	chmod u+s $(DESTDIR)$(bindir)/Xorg
endif
if SUID_WRAPPER
	$(MKDIR_P) $(DESTDIR)$(SUID_WRAPPER_DIR)
	mv $(DESTDIR)$(bindir)/Xorg $(DESTDIR)$(SUID_WRAPPER_DIR)/Xorg
	${INSTALL} -m 755 Xorg.sh $(DESTDIR)$(bindir)/Xorg
	-chown root $(DESTDIR)$(SUID_WRAPPER_DIR)/Xorg.wrap && chmod u+s $(DESTDIR)$(SUID_WRAPPER_DIR)/Xorg.wrap
endif

uninstall-local:
if CYGWIN
	$(AM_V_at)rm -f $(DESTDIR)$(libdir)/libXorg.exe.a
endif

uninstall-hook:
	$(AM_V_at)rm -f $(DESTDIR)$(bindir)/X

# Use variables from XORG_MANPAGE_SECTIONS and X Server configuration
# Do not include manpages.am as values are not appropriate for rc files
CONF_SUBSTS =	-e 's|__filemansuffix__|$(FILE_MAN_SUFFIX)|g' \
		-e 's|MODULEPATH|$(DEFAULT_MODULE_PATH)|g' \
		-e 's|DEFAULTFONTPATH|$(COMPILEDDEFAULTFONTPATH)|g'

xorg.conf.example: xorgconf.cpp
	$(AM_V_GEN)$(SED) $(CONF_SUBSTS) < $(srcdir)/xorgconf.cpp > $@@

relink:
	$(AM_V_at)rm -f Xorg$(EXEEXT) && $(MAKE) Xorg$(EXEEXT)

CLEANFILES = sdksyms.c sdksyms.dep Xorg.sh
EXTRA_DIST += sdksyms.sh

sdksyms.dep sdksyms.c: sdksyms.sh
	$(AM_V_GEN)CPP='$(CPP)' AWK='$(AWK)' $(SHELL) $(srcdir)/sdksyms.sh $(top_srcdir) $(CFLAGS) $(AM_CFLAGS) $(AM_CPPFLAGS)

SDKSYMS_DEP = sdksyms.dep
-include $(SDKSYMS_DEP)

i2c/libi2c.la:
	$(AM_V_at)cd i2c && $(MAKE) libi2c.la

dixmods/libdixmods.la:
	$(AM_V_at)cd dixmods && $(MAKE) libdixmods.la

dixmods/libxorgxkb.la:
	$(AM_V_at)cd dixmods && $(MAKE) libxorgxkb.la
@


1.11
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@d52 1
a52 1
AM_CPPFLAGS = $(XORG_INCS) -I$(srcdir)/parser -I$(top_srcdir)/miext/cw \
d62 1
a62 1
            parser/libxf86config_internal.la \
d75 3
a77 1
            $(top_builddir)/os/libos.la
@


1.10
log
@OpenBSD's make now supports -include. So reduce diff with upstreams.
ok kettenis@@ espie@@
@
text
@d41 1
a41 1
	  $(GLAMOR_EGL_SUBDIR)
d46 1
a46 1
	       utils doc man glamor_egl
d109 1
a109 1
	mv $(DESTDIR)$(bindir)/Xorg $(DESTDIR)$(SUID_WRAPPER_DIR)/Xorg.bin
@


1.9
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d141 1
a141 1
include $(SDKSYMS_DEP)
@


1.8
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@d17 4
d40 2
a41 1
	  fbdevhw shadowfb exa $(XF86UTILS_SUBDIR) doc man
d46 1
a46 1
	       utils doc man
d84 6
d107 6
d134 1
a134 1
CLEANFILES = sdksyms.c sdksyms.dep
@


1.7
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d12 5
d47 1
a47 1
INCLUDES = $(XORG_INCS) -I$(srcdir)/parser -I$(top_srcdir)/miext/cw \
d49 1
a49 1
	-I$(srcdir)/dri -I$(srcdir)/dri2
d67 2
d83 5
a87 9
if SOLARIS_ASM_INLINE
# Needs to be built before any files are compiled when using Sun compilers
# so in*/out* inline definitions are properly processed.

BUILT_SOURCES += os-support/solaris/solaris-@@SOLARIS_INOUT_ARCH@@.il

os-support/solaris/solaris-@@SOLARIS_INOUT_ARCH@@.il:
	cd os-support/solaris ; \
	 $(MAKE) $(AM_MAKEFLAGS) solaris-@@SOLARIS_INOUT_ARCH@@.il
d90 2
a91 7
# do not use $(mkdir_p) if you want automake 1.7 to work
install-data-local:
	mkdir -p $(DESTDIR)$(logdir)


install-exec-local: install-binPROGRAMS
	(cd $(DESTDIR)$(bindir) && rm -f X && ln -s Xorg X)
d96 2
d99 1
a99 1
	$(INSTALL_DATA) libXorg.exe.a $(DESTDIR)$(libdir)/libXorg.exe.a
d102 3
d121 1
a121 1
	$(AM_V_GEN)CPP='$(CPP)' AWK='$(AWK)' $(SHELL) $(srcdir)/sdksyms.sh $(top_srcdir) $(CFLAGS) $(AM_CFLAGS) $(INCLUDES)
@


1.6
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d4 1
d9 1
a15 2
XAA_SUBDIR = xaa

d28 4
a31 4
SUBDIRS = common ddc i2c x86emu $(INT10_SUBDIR) fbdevhw os-support parser \
	  ramdac shadowfb $(VBE_SUBDIR) $(VGAHW_SUBDIR) $(XAA_SUBDIR) \
	  loader dixmods exa modes \
	  $(DRI_SUBDIR) $(DRI2_SUBDIR) $(XF86UTILS_SUBDIR) doc man
d34 1
a34 1
               parser ramdac shadowfb vbe vgahw xaa \
d43 2
a44 1
	-I$(srcdir)/ddc -I$(srcdir)/i2c -I$(srcdir)/modes -I$(srcdir)/ramdac
d58 1
d60 2
a61 1
            $(XORG_LIBS) \
d98 3
d112 1
a112 1
	$(AM_V_at)rm -f Xorg && $(MAKE) Xorg
d118 1
a118 1
	CPP='$(CPP)' AWK='$(AWK)' $(SHELL) $(srcdir)/sdksyms.sh $(top_srcdir) $(CFLAGS) $(AM_CFLAGS) $(INCLUDES)
d122 9
@


1.5
log
@Update to xserver 1.11.2
@
text
@a13 1
if XAA
a14 1
endif
@


1.4
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@a0 1
include $(top_srcdir)/cpprules.in
a29 2
DOC_SUBDIR = doc

d32 2
a33 2
	  xf8_16bpp loader dixmods exa modes \
	  $(DRI_SUBDIR) $(DRI2_SUBDIR) $(XF86UTILS_SUBDIR) $(DOC_SUBDIR)
d37 2
a38 2
               xf8_16bpp loader dixmods dri dri2 exa modes \
	       utils doc
d41 1
a41 1
Xorg_SOURCES = xorg.c
d44 2
a45 1
INCLUDES = @@XORG_INCS@@ 
d47 2
a48 3
noinst_LTLIBRARIES = libxorg.la
libxorg_la_SOURCES = libxorg.c
libxorg_la_LIBADD = \
d51 1
a52 1
            common/libcommon.la \
d60 1
d62 6
a67 12
            $(top_builddir)/os/libos.la \
            @@XORG_LIBS@@

libxorg_la_DEPENDENCIES = $(libxorg_la_LIBADD)

libxorg.c xorg.c:
	touch $@@

DISTCLEANFILES = libxorg.c xorg.c

Xorg_DEPENDENCIES = libxorg.la
Xorg_LDADD = $(MAIN_LIB) libxorg.la $(XORG_SYS_LIBS) $(XSERVER_SYS_LIBS)
d72 1
a72 1
DISTCLEANFILES += xorg.conf.example xorg.conf.example.pre
a74 5
if SPECIAL_DTRACE_OBJECTS
# Re-add dtrace object code that gets lost when building static libraries
Xorg_LDADD += $(XSERVER_LIBS)
endif

d98 8
a105 4
CPP_FILES_FLAGS = \
	$(MANDEFS) \
	-DDEFAULTFONTPATH="\"$(COMPILEDDEFAULTFONTPATH)\"" \
	-DMODULEPATH=\"$(DEFAULT_MODULE_PATH)\"
d110 8
a117 2
xorg.conf.example.pre: xorgconf.cpp
	cp $(srcdir)/xorgconf.cpp $@@
@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d15 16
d33 2
a34 2
SUBDIRS = common ddc dummylib i2c x86emu int10 fbdevhw os-support parser \
	  ramdac shadowfb vbe vgahw xaa \
d38 1
a38 1
DIST_SUBDIRS = common ddc dummylib i2c x86emu int10 fbdevhw os-support \
d44 1
d49 17
a65 1
Xorg_SOURCES = xorg.c
d67 1
a67 6
# libxorgos and libcommon need symbols from each other
noinst_LTLIBRARIES = libosandcommon.la
libosandcommon_la_SOURCES = osandcommon.c
libosandcommon_la_LIBADD = \
            os-support/libxorgos.la \
            common/libcommon.la
d69 1
a69 1
osandcommon.c xorg.c:
d72 1
a72 1
DISTCLEANFILES = osandcommon.c xorg.c
d74 2
a75 19
XORG_LIBS = \
            $(XSERVER_LIBS) \
            common/libinit.a \
            loader/libloader.a \
            libosandcommon.la \
            parser/libxf86config.a \
	    dixmods/libdixmods.la \
	    modes/libxf86modes.a \
	    ramdac/libramdac.a \
	    ddc/libddc.a \
	    i2c/libi2c.a \
	    dixmods/libxorgxkb.la \
	    $(top_builddir)/mi/libmi.la \
	    $(top_builddir)/os/libos.la \
	    @@XORG_LIBS@@ \
	    dixmods/libxorgxkb.la

Xorg_DEPENDENCIES = $(XORG_LIBS)
Xorg_LDADD = $(XORG_LIBS) $(XORG_SYS_LIBS) $(XSERVER_SYS_LIBS)
d83 5
d95 2
a96 1
	cd os-support/solaris ; make solaris-@@SOLARIS_INOUT_ARCH@@.il
a110 3
optionsdir = $(libdir)/X11
dist_options_DATA = Options

d112 2
a113 6
	-DLOCALFONTPATH="\"$(BASE_FONT_PATH)/local\"" \
	-DMISCFONTPATH="\"$(BASE_FONT_PATH)/misc\"" \
	-DT1FONTPATH="\"$(BASE_FONT_PATH)/Type1\"" \
	-DTRUETYPEFONTPATH="\"$(BASE_FONT_PATH)/TTF\"" \
	-DDPI75FONTPATH="\"$(BASE_FONT_PATH)/75dpi\"" \
	-DDPI100FONTPATH="\"$(BASE_FONT_PATH)/100dpi\"" \
d117 1
a117 1
	rm -f Xorg && $(MAKE) Xorg
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@a14 8
if MFB
MFB_SUBDIR = xf1bpp xf4bpp
endif

if CFB
CFB_SUBDIR = xf8_32bpp
endif

d17 2
a18 2
SUBDIRS = common ddc dummylib i2c x86emu int10 fbdevhw os-support parser rac \
	  ramdac shadowfb vbe vgahw xaa $(MFB_SUBDIR) $(CFB_SUBDIR) \
d23 2
a24 2
               parser rac ramdac shadowfb vbe vgahw xaa xf1bpp xf4bpp \
               xf8_16bpp xf8_32bpp loader dixmods dri dri2 exa modes \
a50 1
	    rac/librac.a \
@


1.1
log
@Initial revision
@
text
@d7 4
d15 8
d26 3
a28 3
          ramdac shadowfb vbe vgahw xaa xf1bpp xf4bpp xf8_16bpp \
	  xf8_32bpp loader scanpci dixmods exa \
	  $(DRI_SUBDIR) $(XF86UTILS_SUBDIR) $(DOC_SUBDIR)
d32 1
a32 1
               xf8_16bpp xf8_32bpp loader scanpci dixmods dri exa \
d37 1
a37 1
AM_CFLAGS = @@XORG_CFLAGS@@
d52 1
a52 1
DISTCLEANFILES = osandcommon.c xorg.c xorg.conf.example xorg.conf.example.pre
d55 1
a55 1
            @@XORG_CORE_LIBS@@ \
d62 9
a70 4
            @@XORG_LIBS@@

Xorg_DEPENDENCIES = \
	$(XORG_LIBS)
d72 2
a73 3
Xorg_LDADD = $(XORG_LIBS) \
             @@XSERVER_LIBS@@ \
	     dixmods/libxorgxkb.la
d78 1
d85 1
a85 1
BUILT_SOURCES += os-support/solaris/solaris-$(SOLARIS_INOUT_ARCH).il
d87 2
a88 2
os-support/solaris/solaris-$(SOLARIS_INOUT_ARCH).il:
	cd os-support/solaris ; make solaris-$(SOLARIS_INOUT_ARCH).il
a106 1
	-DRGBPATH=\"$(RGB_DB)\" \
a110 1
	-DCIDFONTPATH="\"$(BASE_FONT_PATH)/CID\"" \
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.1.99.903 from X.Org 7.2RC3
@
text
@d95 1
@


1.1.1.3
log
@xserver 1.4
@
text
@a10 8
if MFB
MFB_SUBDIR = xf1bpp xf4bpp
endif

if CFB
CFB_SUBDIR = xf8_16bpp xf8_32bpp
endif

d14 2
a15 2
	  ramdac shadowfb vbe vgahw xaa $(MFB_SUBDIR) $(CFB_SUBDIR) \
	  loader scanpci dixmods exa modes \
d20 1
a20 1
               xf8_16bpp xf8_32bpp loader scanpci dixmods dri exa modes \
d25 1
a25 1
AM_CFLAGS = $(DIX_CFLAGS) @@XORG_CFLAGS@@
d40 1
a40 1
DISTCLEANFILES = osandcommon.c xorg.c
a49 4
	    modes/libxf86modes.a \
	    ramdac/libramdac.a \
	    ddc/libddc.a \
	    i2c/libi2c.a \
a61 1
DISTCLEANFILES += xorg.conf.example xorg.conf.example.pre
d68 1
a68 1
BUILT_SOURCES += os-support/solaris/solaris-@@SOLARIS_INOUT_ARCH@@.il
d70 2
a71 2
os-support/solaris/solaris-@@SOLARIS_INOUT_ARCH@@.il:
	cd os-support/solaris ; make solaris-@@SOLARIS_INOUT_ARCH@@.il
@


