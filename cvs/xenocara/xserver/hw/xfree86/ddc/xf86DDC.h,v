head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.6
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.09.16.19.10.22;	author matthieu;	state Exp;
branches;
next	1.7;
commitid	Te1daavkBLskZ8gc;

1.7
date	2014.09.27.17.53.01;	author matthieu;	state Exp;
branches;
next	1.6;
commitid	cVXoV5PxI8YrEaVA;

1.6
date	2014.05.02.19.27.48;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.07.17.28.49;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.10.13.21.24;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.27.19.02.31;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.06.19.44.26;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.18.45;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.18.45;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.57.54;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@
/* xf86DDC.h
 *
 * This file contains all information to interpret a standard EDIC block
 * transmitted by a display device via DDC (Display Data Channel). So far
 * there is no information to deal with optional EDID blocks.
 * DDC is a Trademark of VESA (Video Electronics Standard Association).
 *
 * Copyright 1998 by Egbert Eich <Egbert.Eich@@Physik.TU-Darmstadt.DE>
 */

#ifndef XF86_DDC_H
#define XF86_DDC_H

#include "edid.h"
#include "xf86i2c.h"
#include "xf86str.h"

/* speed up / slow down */
typedef enum {
    DDC_SLOW,
    DDC_FAST
} xf86ddcSpeed;

typedef void (*DDC1SetSpeedProc) (ScrnInfoPtr, xf86ddcSpeed);

extern _X_EXPORT xf86MonPtr xf86DoEDID_DDC1(ScrnInfoPtr pScrn,
                                            DDC1SetSpeedProc DDC1SetSpeed,
                                            unsigned
                                            int (*DDC1Read) (ScrnInfoPtr)
    );

extern _X_EXPORT xf86MonPtr xf86DoEDID_DDC2(ScrnInfoPtr pScrn, I2CBusPtr pBus);

extern _X_EXPORT xf86MonPtr xf86DoEEDID(ScrnInfoPtr pScrn, I2CBusPtr pBus, Bool);

extern _X_EXPORT xf86MonPtr xf86PrintEDID(xf86MonPtr monPtr);

extern _X_EXPORT xf86MonPtr xf86InterpretEDID(int screenIndex, Uchar * block);

extern _X_EXPORT xf86MonPtr xf86InterpretEEDID(int screenIndex, Uchar * block);

extern _X_EXPORT void
 xf86EdidMonitorSet(int scrnIndex, MonPtr Monitor, xf86MonPtr DDC);

extern _X_EXPORT Bool xf86SetDDCproperties(ScrnInfoPtr pScreen, xf86MonPtr DDC);

extern _X_EXPORT Bool
 xf86MonitorIsHDMI(xf86MonPtr mon);

extern _X_EXPORT DisplayModePtr
FindDMTMode(int hsize, int vsize, int refresh, Bool rb);

extern _X_EXPORT const DisplayModeRec DMTModes[];

/*
 * Quirks to work around broken EDID data from various monitors.
 */
typedef enum {
    DDC_QUIRK_NONE = 0,
    /* First detailed mode is bogus, prefer largest mode at 60hz */
    DDC_QUIRK_PREFER_LARGE_60 = 1 << 0,
    /* 135MHz clock is too high, drop a bit */
    DDC_QUIRK_135_CLOCK_TOO_HIGH = 1 << 1,
    /* Prefer the largest mode at 75 Hz */
    DDC_QUIRK_PREFER_LARGE_75 = 1 << 2,
    /* Convert detailed timing's horizontal from units of cm to mm */
    DDC_QUIRK_DETAILED_H_IN_CM = 1 << 3,
    /* Convert detailed timing's vertical from units of cm to mm */
    DDC_QUIRK_DETAILED_V_IN_CM = 1 << 4,
    /* Detailed timing descriptors have bogus size values, so just take the
     * maximum size and use that.
     */
    DDC_QUIRK_DETAILED_USE_MAXIMUM_SIZE = 1 << 5,
    /* Monitor forgot to set the first detailed is preferred bit. */
    DDC_QUIRK_FIRST_DETAILED_PREFERRED = 1 << 6,
    /* use +hsync +vsync for detailed mode */
    DDC_QUIRK_DETAILED_SYNC_PP = 1 << 7,
    /* Force single-link DVI bandwidth limit */
    DDC_QUIRK_DVI_SINGLE_LINK = 1 << 8,
} ddc_quirk_t;

typedef void (*handle_detailed_fn) (struct detailed_monitor_section *, void *);

void xf86ForEachDetailedBlock(xf86MonPtr mon, handle_detailed_fn, void *data);

ddc_quirk_t xf86DDCDetectQuirks(int scrnIndex, xf86MonPtr DDC, Bool verbose);

void xf86DetTimingApplyQuirks(struct detailed_monitor_section *det_mon,
                              ddc_quirk_t quirks, int hsize, int vsize);

typedef void (*handle_video_fn) (struct cea_video_block *, void *);

void xf86ForEachVideoBlock(xf86MonPtr, handle_video_fn, void *);

struct cea_data_block *xf86MonitorFindHDMIBlock(xf86MonPtr mon);

#endif
@


1.7
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d4 3
a6 3
 * This file contains all information to interpret a standard EDIC block 
 * transmitted by a display device via DDC (Display Data Channel). So far 
 * there is no information to deal with optional EDID blocks.  
a49 5

extern _X_EXPORT xf86MonPtr xf86DoDisplayID(ScrnInfoPtr pScrn, I2CBusPtr pBus);

extern _X_EXPORT void
 xf86DisplayIDMonitorSet(int scrnIndex, MonPtr mon, xf86MonPtr DDC);
@


1.6
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@d101 2
@


1.5
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@a47 2
extern _X_EXPORT DisplayModePtr xf86DDCGetModes(int scrnIndex, xf86MonPtr DDC);

@


1.4
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d27 1
a27 1
extern _X_EXPORT xf86MonPtr xf86DoEDID_DDC1(int scrnIndex,
d33 1
a33 1
extern _X_EXPORT xf86MonPtr xf86DoEDID_DDC2(int scrnIndex, I2CBusPtr pBus);
d35 1
a35 1
extern _X_EXPORT xf86MonPtr xf86DoEEDID(int scrnIndex, I2CBusPtr pBus, Bool);
d53 1
a53 1
extern _X_EXPORT xf86MonPtr xf86DoDisplayID(int scrnIndex, I2CBusPtr pBus);
@


1.3
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d13 1
a13 1
# define XF86_DDC_H
d21 2
a22 2
  DDC_SLOW,
  DDC_FAST
d25 1
a25 1
typedef void (* DDC1SetSpeedProc)(ScrnInfoPtr, xf86ddcSpeed);
d27 7
a33 10
extern _X_EXPORT xf86MonPtr xf86DoEDID_DDC1(
    int scrnIndex, 
    DDC1SetSpeedProc DDC1SetSpeed,
    unsigned int (*DDC1Read)(ScrnInfoPtr)
);

extern _X_EXPORT xf86MonPtr xf86DoEDID_DDC2(
   int scrnIndex,
   I2CBusPtr pBus
);
d37 5
a41 11
extern _X_EXPORT xf86MonPtr xf86PrintEDID(
    xf86MonPtr monPtr
);

extern _X_EXPORT xf86MonPtr xf86InterpretEDID(
    int screenIndex, Uchar *block
);

extern _X_EXPORT xf86MonPtr xf86InterpretEEDID(
    int screenIndex, Uchar *block
);
d44 1
a44 1
xf86EdidMonitorSet(int scrnIndex, MonPtr Monitor, xf86MonPtr DDC);
d46 1
a46 4
extern _X_EXPORT Bool xf86SetDDCproperties(
    ScrnInfoPtr pScreen,
    xf86MonPtr DDC
);
d51 1
a51 1
xf86MonitorIsHDMI(xf86MonPtr mon);
d53 1
a53 2
extern _X_EXPORT xf86MonPtr
xf86DoDisplayID(int scrnIndex, I2CBusPtr pBus);
d56 1
a56 1
xf86DisplayIDMonitorSet(int scrnIndex, MonPtr mon, xf86MonPtr DDC);
d90 1
a90 6
DisplayModePtr xf86DDCGetModes(int scrnIndex, xf86MonPtr DDC);

extern Bool
xf86MonitorIsHDMI(xf86MonPtr mon);

typedef void (* handle_detailed_fn)(struct detailed_monitor_section *,void *);
d92 1
a92 3
void xf86ForEachDetailedBlock(xf86MonPtr mon,
                              handle_detailed_fn,
                              void *data);
d94 1
a94 2
ddc_quirk_t
xf86DDCDetectQuirks(int scrnIndex, xf86MonPtr DDC, Bool verbose);
d99 1
a99 1
typedef void (* handle_video_fn)(struct cea_video_block *, void *);
d101 1
a101 3
void xf86ForEachVideoBlock(xf86MonPtr,
                           handle_video_fn,
                           void *);
@


1.2
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d27 1
a27 1
extern xf86MonPtr xf86DoEDID_DDC1(
d33 1
a33 1
extern xf86MonPtr xf86DoEDID_DDC2(
d38 1
a38 1
extern xf86MonPtr xf86DoEEDID(int scrnIndex, I2CBusPtr pBus, Bool);
d40 1
a40 1
extern xf86MonPtr xf86PrintEDID(
d44 1
a44 1
extern xf86MonPtr xf86InterpretEDID(
d48 1
a48 1
extern xf86MonPtr xf86InterpretEEDID(
d52 2
a53 2
extern void 
xf86DDCMonitorSet(int scrnIndex, MonPtr Monitor, xf86MonPtr DDC);
d55 1
a55 1
extern Bool xf86SetDDCproperties(
d60 43
d107 18
@


1.1
log
@Initial revision
@
text
@d38 2
d48 2
a49 2
extern xf86vdifPtr xf86InterpretVdif(
    CARD8 *c
d60 4
a63 3
extern void xf86print_vdif(
    xf86vdifPtr v
);
a65 2


@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d46 4
d58 3
a60 1
DisplayModePtr xf86DDCGetModes(int scrnIndex, xf86MonPtr DDC);
@

