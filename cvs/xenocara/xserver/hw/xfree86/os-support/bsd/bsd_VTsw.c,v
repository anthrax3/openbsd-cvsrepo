head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.16
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.14
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.04.02.14.25.10;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	PbNjzNxfwpZTQYDj;

1.4
date	2012.06.10.13.21.25;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.12.05.15.36.07;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.21.29;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.21.29;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.57.24;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Implement VT switching (based on the USL compat interface) in the
wscons console backend and use it by default.
ok kettenis@@
@
text
@/*
 * Derived from VTsw_usl.c which is
 * Copyright 1993 by David Wexelblat <dwex@@goblin.org>
 * by S_ren Schmidt (sos@@login.dkuug.dk)
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of David Wexelblat not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  David Wexelblat makes no representations
 * about the suitability of this software for any purpose.  It is provided
 * "as is" without express or implied warranty.
 *
 * DAVID WEXELBLAT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL DAVID WEXELBLAT BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 *
 */

#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#include <X11/X.h>
#include "xf86.h"
#include "xf86Priv.h"
#include "xf86_OSlib.h"

/*
 * Handle the VT-switching interface for OSs that use USL-style ioctl()s
 * (the bsd, sysv, sco, and linux subdirs).
 */

/*
 * This function is the signal handler for the VT-switching signal.  It
 * is only referenced inside the OS-support layer.
 */
void
xf86VTRequest(int sig)
{
#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT) \
    || defined(WSCONS_SUPPORT)
    if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT ||
        xf86Info.consType == WSCONS) {
        xf86Info.vtRequestsPending = TRUE;
    }
#endif
    return;
}

Bool
xf86VTSwitchPending(void)
{
#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT) \
    || defined(WSCONS_SUPPORT)
    if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT ||
        xf86Info.consType == WSCONS) {
        return xf86Info.vtRequestsPending ? TRUE : FALSE;
    }
#endif
    return FALSE;
}

Bool
xf86VTSwitchAway(void)
{
#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT) \
    || defined(WSCONS_SUPPORT)
    if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT ||
        xf86Info.consType == WSCONS) {
        xf86Info.vtRequestsPending = FALSE;
        if (ioctl(xf86Info.consoleFd, VT_RELDISP, 1) < 0)
            return FALSE;
        else
            return TRUE;
    }
#endif
    return FALSE;
}

Bool
xf86VTSwitchTo(void)
{
#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT) \
    || defined(WSCONS_SUPPORT)
    if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT ||
        xf86Info.consType == WSCONS) {
        xf86Info.vtRequestsPending = FALSE;
        if (ioctl(xf86Info.consoleFd, VT_RELDISP, VT_ACKACQ) < 0)
            return FALSE;
        else
            return TRUE;
    }
#endif
    return TRUE;
}

Bool
xf86VTActivate(int vtno)
{
#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT) \
    || defined(WSCONS_SUPPORT)
    if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT
        || xf86Info.consType == WSCONS) {
        if (ioctl(xf86Info.consoleFd, VT_ACTIVATE, vtno) < 0)
            return FALSE;
    }
#endif
    return TRUE;
}
@


1.4
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d47 4
a50 2
#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT)
    if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT) {
d58 1
a58 1
xf86VTSwitchPending()
d60 4
a63 2
#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT)
    if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT) {
d71 1
a71 1
xf86VTSwitchAway()
d73 4
a76 2
#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT)
    if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT) {
d88 1
a88 1
xf86VTSwitchTo()
d90 4
a93 2
#if defined (SYSCONS_SUPPORT) || defined (PCVT_SUPPORT)
    if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT) {
d107 6
a112 2
    if (ioctl(xf86Info.consoleFd, VT_ACTIVATE, vtno) < 0) {
        return FALSE;
d114 1
@


1.3
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d48 3
a50 3
	if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT) {
		xf86Info.vtRequestsPending = TRUE;
	}	
d52 1
a52 1
	return;
d59 3
a61 3
	if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT) {
		return xf86Info.vtRequestsPending ? TRUE : FALSE;
	}
d63 1
a63 1
	return FALSE;
d70 7
a76 7
	if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT) {
		xf86Info.vtRequestsPending = FALSE;
		if (ioctl(xf86Info.consoleFd, VT_RELDISP, 1) < 0)
			return FALSE;
		else
			return TRUE;
	}
d78 1
a78 1
	return FALSE;
d85 7
a91 7
	if (xf86Info.consType == SYSCONS || xf86Info.consType == PCVT) {
		xf86Info.vtRequestsPending = FALSE;
		if (ioctl(xf86Info.consoleFd, VT_RELDISP, VT_ACKACQ) < 0)
			return FALSE;
		else
			return TRUE;
	}
d93 1
a93 1
	return TRUE;
d99 4
a102 4
	if (ioctl(xf86Info.consoleFd, VT_ACTIVATE, vtno) < 0) {
		return FALSE;
	}
	return TRUE;
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d60 1
a60 1
		return(xf86Info.vtRequestsPending ? TRUE : FALSE);
d73 1
a73 1
			return(FALSE);
d75 1
a75 1
			return(TRUE);
d88 1
a88 1
			return(FALSE);
d90 1
a90 1
			return(TRUE);
d93 1
a93 1
	return(TRUE);
d100 1
a100 1
		return(FALSE);
d102 1
a102 1
	return(TRUE);
@


1.1
log
@Initial revision
@
text
@a24 1
/* $XConsortium: bsd_VTsw.c /main/4 1996/02/21 17:50:57 kaleb $ */
d93 9
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d25 1
@

