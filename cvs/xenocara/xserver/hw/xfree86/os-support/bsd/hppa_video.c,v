head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.6
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.4
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.10
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.8
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.6
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_3:1.1.0.4
	OPENBSD_4_2:1.1.0.2
	OPENBSD_4_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.09.28.05.53.20;	author matthieu;	state Exp;
branches;
next	1.9;
commitid	Fydy16C40oYAP6Mo;

1.9
date	2014.09.27.17.53.02;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	cVXoV5PxI8YrEaVA;

1.8
date	2013.06.07.17.28.52;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2012.06.16.15.08.08;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2012.06.10.13.21.25;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.05.13.32.52;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.12.05.15.36.07;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.31.17.47.50;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.12.18.22.47.56;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.28.20.29.31;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Patch for xserver 1.17. Missed in upgrade commit.
@
text
@/* $OpenBSD: hppa_video.c,v 1.9 2014/09/27 17:53:02 matthieu Exp $ */
/*
 * Copyright 1992 by Rich Murphey <Rich@@Rice.edu>
 * Copyright 1993 by David Wexelblat <dwex@@goblin.org>
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the names of Rich Murphey and David Wexelblat 
 * not be used in advertising or publicity pertaining to distribution of 
 * the software without specific, written prior permission.  Rich Murphey and
 * David Wexelblat make no representations about the suitability of this 
 * software for any purpose.  It is provided "as is" without express or 
 * implied warranty.
 *
 * RICH MURPHEY AND DAVID WEXELBLAT DISCLAIM ALL WARRANTIES WITH REGARD TO 
 * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND 
 * FITNESS, IN NO EVENT SHALL RICH MURPHEY OR DAVID WEXELBLAT BE LIABLE FOR 
 * ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER 
 * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF 
 * CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#include <X11/X.h>
#include "xf86.h"
#include "xf86Priv.h"

#include "xf86_OSlib.h"
#include "xf86OSpriv.h"


/***************************************************************************/
/* Video Memory Mapping section                                            */
/***************************************************************************/

void
xf86OSInitVidMem(VidMemInfoPtr pVidMem)
{
	xf86OpenConsole();

#if HAVE_PCI_SYSTEM_INIT_DEV_MEM
       pci_system_init_dev_mem(xf86Info.consoleFd);
#endif
	pVidMem->initialised = TRUE;
}

/***************************************************************************/
/* Interrupt Handling section                                              */
/***************************************************************************/

#ifdef X_PRIVSEP
/*
 * Do all initialisation that need root privileges 
 */
void
xf86PrivilegedInit(void)
{
	/* pci_system_init(); */
	xf86OpenConsole();
}
#endif
@


1.9
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: hppa_video.c,v 1.8 2013/06/07 17:28:52 matthieu Exp $ */
a37 4
#ifndef MAP_FAILED
#define MAP_FAILED ((caddr_t)-1)
#endif

a42 4
static void *hppaMapVidMem(int, unsigned long, unsigned long, int);
static void hppaUnmapVidMem(int, void *, unsigned long);


a47 3
	pVidMem->linearSupported = TRUE;
	pVidMem->mapMem = hppaMapVidMem;
	pVidMem->unmapMem = hppaUnmapVidMem;
a51 37
}


volatile unsigned char *ioBase = MAP_FAILED;

static void *
hppaMapVidMem(int ScreenNum, unsigned long Base, unsigned long Size, int flags)
{
	int fd = xf86Info.consoleFd;
	void *base;

#ifdef DEBUG
	xf86MsgVerb(X_INFO, 3, "mapVidMem %lx, %lx, fd = %d\n", 
	    Base, Size, fd);
#endif

	base = mmap(0, Size, PROT_READ|PROT_WRITE, MAP_SHARED, fd, Base);
	if (base == MAP_FAILED)
		FatalError("%s: could not mmap screen [s=%lx,a=%lx] (%s)",
			   "xf86MapVidMem", Size, Base, strerror(errno));

	return base;
}


static void
hppaUnmapVidMem(int ScreenNum, void *Base, unsigned long Size)
{

	munmap(Base, Size);
}

int
xf86ReadBIOS(unsigned long Base, unsigned long Offset, unsigned char *Buf,
	     int Len)
{
	return 0;
@


1.8
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d1 1
a1 1
/* $OpenBSD: hppa_video.c,v 1.2 2009/12/18 22:47:56 matthieu Exp $ */
d47 2
a48 2
static pointer hppaMapVidMem(int, unsigned long, unsigned long, int);
static void hppaUnmapVidMem(int, pointer, unsigned long);
d68 1
a68 1
static pointer
d72 1
a72 1
	pointer base;
d89 1
a89 1
hppaUnmapVidMem(int ScreenNum, pointer Base, unsigned long Size)
@


1.7
log
@screenFd -> consoleFd conversions that were missed in xserver 1.12 import.
@
text
@d1 1
a1 1
/* $OpenBSD: hppa_video.c,v 1.6 2012/06/10 13:21:25 matthieu Exp $ */
@


1.6
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d1 1
a1 1
/* $OpenBSD: hppa_video.c,v 1.2 2009/12/18 22:47:56 matthieu Exp $ */
d60 1
a60 1
       pci_system_init_dev_mem(xf86Info.screenFd);
d71 1
a71 1
	int fd = xf86Info.screenFd;
@


1.5
log
@Update to xserver 1.11.2
@
text
@@


1.4
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@@


1.3
log
@Fix X -keepPriv by calling xf86OpenConsole() early enough on architectures
that don't have a separate /dev/xf86. Problem noticed by kettenis@@ and krw@@
ok kettenis@@.
@
text
@@


1.2
log
@Adapt to modular X.Org.
@
text
@d1 1
a1 1
/* $OpenBSD: hppa_video.c,v 1.1 2006/11/28 20:29:31 matthieu Exp $ */
d54 2
@


1.1
log
@OpenBSD local modifications:
- privilege separation
- some snprintf/strlc{at,py} conversions
- support for more architectures
- signal handler fixes
- default mouse wheel support in config tools
- sunmouse protocol
@
text
@d1 1
a1 2
/* $XFree86$ */
/* $OpenBSD: hppa_video.c,v 1.1 2003/11/24 19:01:17 mickey Exp $ */
d27 3
a29 1
/* $XConsortium: bsd_video.c /main/10 1996/10/25 11:37:57 kaleb $ */
d31 1
a31 1
#include "X.h"
a37 2
/* #include "bus/Pci.h" */

d57 3
d73 2
a74 1
	ErrorF("mapVidMem %lx, %lx, fd = %d\n", Base, Size, fd);
d79 1
a79 1
		FatalError("%s: could not mmap screen [s=%x,a=%x] (%s)",
d104 1
a104 14
Bool
xf86DisableInterrupts()
{

	return(TRUE);
}

void
xf86EnableInterrupts()
{

	return;
}

d111 1
a111 1
	/* pciInit(); */
d114 1
@

