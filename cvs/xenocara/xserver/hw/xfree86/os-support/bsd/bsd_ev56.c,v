head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.8
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.6
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.10
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.8
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2015.09.16.19.10.23;	author matthieu;	state Exp;
branches;
next	1.4;
commitid	Te1daavkBLskZ8gc;

1.4
date	2014.09.27.17.53.02;	author matthieu;	state Exp;
branches;
next	1.3;
commitid	cVXoV5PxI8YrEaVA;

1.3
date	2012.06.10.13.21.25;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.21.32;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.21.32;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@
#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#include <X11/X.h>
#include "input.h"
#include "scrnintstr.h"
#include "compiler.h"

#include "xf86.h"
#include "xf86Priv.h"
#include "xf86_OSlib.h"
#include "xf86OSpriv.h"

#include <machine/bwx.h>

/*
 * The following functions are used only on EV56 and greater CPUs,
 * and the assembler requires going to EV56 mode in order to emit
 * these instructions.
 */
__asm(".arch ev56");

int readDense8(void *Base, register unsigned long Offset);
int readDense16(void *Base, register unsigned long Offset);
int readDense32(void *Base, register unsigned long Offset);
void
 writeDense8(int Value, void *Base, register unsigned long Offset);
void
 writeDense16(int Value, void *Base, register unsigned long Offset);
void
 writeDense32(int Value, void *Base, register unsigned long Offset);

int
readDense8(void *Base, register unsigned long Offset)
{
    mem_barrier();
    return (alpha_ldbu((void *) ((unsigned long) Base + (Offset))));
}

int
readDense16(void *Base, register unsigned long Offset)
{
    mem_barrier();
    return (alpha_ldwu((void *) ((unsigned long) Base + (Offset))));
}

int
readDense32(void *Base, register unsigned long Offset)
{
    mem_barrier();
    return *(volatile CARD32 *) ((unsigned long) Base + (Offset));
}

void
writeDense8(int Value, void *Base, register unsigned long Offset)
{
    write_mem_barrier();
    alpha_stb((void *) ((unsigned long) Base + (Offset)), Value);
}

void
writeDense16(int Value, void *Base, register unsigned long Offset)
{
    write_mem_barrier();
    alpha_stw((void *) ((unsigned long) Base + (Offset)), Value);
}

void
writeDense32(int Value, void *Base, register unsigned long Offset)
{
    write_mem_barrier();
    *(volatile CARD32 *) ((unsigned long) Base + (Offset)) = Value;
}
@


1.4
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@a28 6
 writeDenseNB8(int Value, void *Base, register unsigned long Offset);
void
 writeDenseNB16(int Value, void *Base, register unsigned long Offset);
void
 writeDenseNB32(int Value, void *Base, register unsigned long Offset);
void
a53 18
}

void
writeDenseNB8(int Value, void *Base, register unsigned long Offset)
{
    alpha_stb((void *) ((unsigned long) Base + (Offset)), Value);
}

void
writeDenseNB16(int Value, void *Base, register unsigned long Offset)
{
    alpha_stw((void *) ((unsigned long) Base + (Offset)), Value);
}

void
writeDenseNB32(int Value, void *Base, register unsigned long Offset)
{
    *(volatile CARD32 *) ((unsigned long) Base + (Offset)) = Value;
@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d25 3
a27 3
int readDense8(pointer Base, register unsigned long Offset);
int readDense16(pointer Base, register unsigned long Offset);
int readDense32(pointer Base, register unsigned long Offset);
d29 1
a29 1
 writeDenseNB8(int Value, pointer Base, register unsigned long Offset);
d31 1
a31 1
 writeDenseNB16(int Value, pointer Base, register unsigned long Offset);
d33 1
a33 1
 writeDenseNB32(int Value, pointer Base, register unsigned long Offset);
d35 1
a35 1
 writeDense8(int Value, pointer Base, register unsigned long Offset);
d37 1
a37 1
 writeDense16(int Value, pointer Base, register unsigned long Offset);
d39 1
a39 1
 writeDense32(int Value, pointer Base, register unsigned long Offset);
d42 1
a42 1
readDense8(pointer Base, register unsigned long Offset)
d45 1
a45 1
    return (alpha_ldbu((pointer) ((unsigned long) Base + (Offset))));
d49 1
a49 1
readDense16(pointer Base, register unsigned long Offset)
d52 1
a52 1
    return (alpha_ldwu((pointer) ((unsigned long) Base + (Offset))));
d56 1
a56 1
readDense32(pointer Base, register unsigned long Offset)
d63 1
a63 1
writeDenseNB8(int Value, pointer Base, register unsigned long Offset)
d65 1
a65 1
    alpha_stb((pointer) ((unsigned long) Base + (Offset)), Value);
d69 1
a69 1
writeDenseNB16(int Value, pointer Base, register unsigned long Offset)
d71 1
a71 1
    alpha_stw((pointer) ((unsigned long) Base + (Offset)), Value);
d75 1
a75 1
writeDenseNB32(int Value, pointer Base, register unsigned long Offset)
d81 1
a81 1
writeDense8(int Value, pointer Base, register unsigned long Offset)
d84 1
a84 1
    alpha_stb((pointer) ((unsigned long) Base + (Offset)), Value);
d88 1
a88 1
writeDense16(int Value, pointer Base, register unsigned long Offset)
d91 1
a91 1
    alpha_stw((pointer) ((unsigned long) Base + (Offset)), Value);
d95 1
a95 1
writeDense32(int Value, pointer Base, register unsigned long Offset)
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d29 1
a29 1
writeDenseNB8(int Value, pointer Base, register unsigned long Offset);
d31 1
a31 1
writeDenseNB16(int Value, pointer Base, register unsigned long Offset);
d33 1
a33 1
writeDenseNB32(int Value, pointer Base, register unsigned long Offset);
d35 1
a35 1
writeDense8(int Value, pointer Base, register unsigned long Offset);
d37 1
a37 1
writeDense16(int Value, pointer Base, register unsigned long Offset);
d39 1
a39 1
writeDense32(int Value, pointer Base, register unsigned long Offset);
d45 1
a45 1
    return (alpha_ldbu((pointer)((unsigned long)Base+(Offset))));
d52 1
a52 1
    return (alpha_ldwu((pointer)((unsigned long)Base+(Offset))));
d59 1
a59 1
    return *(volatile CARD32*)((unsigned long)Base+(Offset));
d65 1
a65 1
    alpha_stb((pointer)((unsigned long)Base+(Offset)), Value);
d71 1
a71 1
    alpha_stw((pointer)((unsigned long)Base + (Offset)), Value);
d77 1
a77 1
    *(volatile CARD32*)((unsigned long)Base+(Offset)) = Value;
d84 1
a84 1
    alpha_stb((pointer)((unsigned long)Base+(Offset)), Value);
d91 1
a91 1
    alpha_stw((pointer)((unsigned long)Base + (Offset)), Value);
d98 1
a98 1
    *(volatile CARD32 *)((unsigned long)Base+(Offset)) = Value;
@


1.1
log
@Initial revision
@
text
@d16 9
d45 1
a45 1
    return *(volatile CARD8*) ((unsigned long)Base+(Offset));
d52 1
a52 1
    return *(volatile CARD16*) ((unsigned long)Base+(Offset));
d65 1
a65 1
    *(volatile CARD8*)((unsigned long)Base+(Offset)) = Value;
d71 1
a71 1
    *(volatile CARD16*)((unsigned long)Base + (Offset)) = Value;
d84 1
a84 1
    *(volatile CARD8 *)((unsigned long)Base+(Offset)) = Value;
d91 1
a91 1
    *(volatile CARD16 *)((unsigned long)Base+(Offset)) = Value;
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
