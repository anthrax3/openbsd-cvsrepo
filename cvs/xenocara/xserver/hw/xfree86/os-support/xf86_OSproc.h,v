head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.2
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.03.06.17.11.47;	author matthieu;	state Exp;
branches;
next	1.10;
commitid	vJ21xJXyutpDZ0GD;

1.10
date	2015.09.16.19.10.23;	author matthieu;	state Exp;
branches;
next	1.9;
commitid	Te1daavkBLskZ8gc;

1.9
date	2014.09.27.17.53.02;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	cVXoV5PxI8YrEaVA;

1.8
date	2014.05.02.19.27.49;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2013.08.24.19.44.42;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2013.06.07.17.28.52;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.10.13.21.25;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.27.19.02.33;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.19.44.26;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.22;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.21.19;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.21.19;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.57.17;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Cleanup gcc warnings and function prototypes.
@
text
@/*
 * Copyright 1990, 1991 by Thomas Roell, Dinkelscherben, Germany
 * Copyright 1992 by David Dawes <dawes@@XFree86.org>
 * Copyright 1992 by Jim Tsillas <jtsilla@@damon.ccs.northeastern.edu>
 * Copyright 1992 by Rich Murphey <Rich@@Rice.edu>
 * Copyright 1992 by Robert Baron <Robert.Baron@@ernst.mach.cs.cmu.edu>
 * Copyright 1992 by Orest Zborowski <obz@@eskimo.com>
 * Copyright 1993 by Vrije Universiteit, The Netherlands
 * Copyright 1993 by David Wexelblat <dwex@@XFree86.org>
 * Copyright 1994, 1996 by Holger Veit <Holger.Veit@@gmd.de>
 * Copyright 1994-2003 by The XFree86 Project, Inc
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the names of the above listed copyright holders
 * not be used in advertising or publicity pertaining to distribution of
 * the software without specific, written prior permission.  The above listed
 * copyright holders make no representations about the suitability of this
 * software for any purpose.  It is provided "as is" without express or
 * implied warranty.
 *
 * THE ABOVE LISTED COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD
 * TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY
 * DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

/*
 * The ARM32 code here carries the following copyright:
 *
 * Copyright 1997
 * Digital Equipment Corporation. All rights reserved.
 * This software is furnished under license and may be used and copied only in
 * accordance with the following terms and conditions.  Subject to these
 * conditions, you may download, copy, install, use, modify and distribute
 * this software in source and/or binary form. No title or ownership is
 * transferred hereby.
 *
 * 1) Any source code used, modified or distributed must reproduce and retain
 *    this copyright notice and list of conditions as they appear in the
 *    source file.
 *
 * 2) No right is granted to use any trade name, trademark, or logo of Digital
 *    Equipment Corporation. Neither the "Digital Equipment Corporation"
 *    name nor any trademark or logo of Digital Equipment Corporation may be
 *    used to endorse or promote products derived from this software without
 *    the prior written permission of Digital Equipment Corporation.
 *
 * 3) This software is provided "AS-IS" and any express or implied warranties,
 *    including but not limited to, any implied warranties of merchantability,
 *    fitness for a particular purpose, or non-infringement are disclaimed.
 *    In no event shall DIGITAL be liable for any damages whatsoever, and in
 *    particular, DIGITAL shall not be liable for special, indirect,
 *    consequential, or incidental damages or damages for lost profits, loss
 *    of revenue or loss of use, whether such damages arise in contract,
 *    negligence, tort, under statute, in equity, at law or otherwise, even
 *    if advised of the possibility of such damage.
 *
 */

#ifndef _XF86_OSPROC_H
#define _XF86_OSPROC_H

/*
 * The actual prototypes have been pulled into this seperate file so
 * that they can can be used without pulling in all of the OS specific
 * stuff like sys/stat.h, etc. This casues problem for loadable modules.
 */

/*
 * OS-independent modem state flags for xf86SetSerialModemState() and
 * xf86GetSerialModemState().
 */
#define XF86_M_LE		0x001   /* line enable */
#define XF86_M_DTR		0x002   /* data terminal ready */
#define XF86_M_RTS		0x004   /* request to send */
#define XF86_M_ST		0x008   /* secondary transmit */
#define XF86_M_SR		0x010   /* secondary receive */
#define XF86_M_CTS		0x020   /* clear to send */
#define XF86_M_CAR		0x040   /* carrier detect */
#define XF86_M_RNG		0x080   /* ring */
#define XF86_M_DSR		0x100   /* data set ready */

#ifndef NO_OSLIB_PROTOTYPES
/*
 * This is to prevent re-entrancy to FatalError() when aborting.
 * Anything that can be called as a result of AbortDDX() should use this
 * instead of FatalError().
 */

#define xf86FatalError(a, b) \
	if (dispatchException & DE_TERMINATE) { \
		ErrorF(a, b); \
		ErrorF("\n"); \
		return; \
	} else FatalError(a, b)

/***************************************************************************/
/* Prototypes                                                              */
/***************************************************************************/

#include <X11/Xfuncproto.h>
#include "opaque.h"
#include "xf86Optionstr.h"

_XFUNCPROTOBEGIN

/* public functions */
extern _X_EXPORT Bool xf86EnableIO(void);
extern _X_EXPORT void xf86DisableIO(void);

#ifdef __NetBSD__
extern _X_EXPORT void xf86SetTVOut(int);
extern _X_EXPORT void xf86SetRGBOut(void);
#endif
extern _X_EXPORT void xf86OSRingBell(int, int, int);
extern _X_EXPORT void xf86SetReallySlowBcopy(void);
extern _X_EXPORT void xf86SlowBcopy(unsigned char *, unsigned char *, int);
extern _X_EXPORT int xf86OpenSerial(XF86OptionPtr options);
extern _X_EXPORT int xf86SetSerial(int fd, XF86OptionPtr options);
extern _X_EXPORT int xf86SetSerialSpeed(int fd, int speed);
extern _X_EXPORT int xf86ReadSerial(int fd, void *buf, int count);
extern _X_EXPORT int xf86WriteSerial(int fd, const void *buf, int count);
extern _X_EXPORT int xf86CloseSerial(int fd);
extern _X_EXPORT int xf86FlushInput(int fd);
extern _X_EXPORT int xf86WaitForInput(int fd, int timeout);
extern _X_EXPORT int xf86SerialSendBreak(int fd, int duration);
extern _X_EXPORT int xf86SetSerialModemState(int fd, int state);
extern _X_EXPORT int xf86GetSerialModemState(int fd);
extern _X_EXPORT int xf86SerialModemSetBits(int fd, int bits);
extern _X_EXPORT int xf86SerialModemClearBits(int fd, int bits);
extern _X_EXPORT int xf86LoadKernelModule(const char *pathname);

/* AGP GART interface */

typedef struct _AgpInfo {
    CARD32 bridgeId;
    CARD32 agpMode;
    unsigned long base;
    unsigned long size;
    unsigned long totalPages;
    unsigned long systemPages;
    unsigned long usedPages;
} AgpInfo, *AgpInfoPtr;

extern _X_EXPORT Bool xf86AgpGARTSupported(void);
extern _X_EXPORT AgpInfoPtr xf86GetAGPInfo(int screenNum);
extern _X_EXPORT Bool xf86AcquireGART(int screenNum);
extern _X_EXPORT Bool xf86ReleaseGART(int screenNum);
extern _X_EXPORT int xf86AllocateGARTMemory(int screenNum, unsigned long size,
                                            int type, unsigned long *physical);
extern _X_EXPORT Bool xf86DeallocateGARTMemory(int screenNum, int key);
extern _X_EXPORT Bool xf86BindGARTMemory(int screenNum, int key,
                                         unsigned long offset);
extern _X_EXPORT Bool xf86UnbindGARTMemory(int screenNum, int key);
extern _X_EXPORT Bool xf86EnableAGP(int screenNum, CARD32 mode);
extern _X_EXPORT Bool xf86GARTCloseScreen(int screenNum);

/* These routines are in shared/sigio.c and are not loaded as part of the
   module.  These routines are small, and the code if very POSIX-signal (or
   OS-signal) specific, so it seemed better to provide more complex
   wrappers than to wrap each individual function called. */
extern _X_EXPORT int xf86InstallSIGIOHandler(int fd, void (*f) (int, void *),
                                             void *);
extern _X_EXPORT int xf86RemoveSIGIOHandler(int fd);
extern _X_EXPORT int xf86BlockSIGIO(void);
extern _X_EXPORT void xf86UnblockSIGIO(int);
extern _X_EXPORT void xf86AssertBlockedSIGIO(char *);
extern _X_EXPORT Bool xf86SIGIOSupported(void);

#ifdef XF86_OS_PRIVS
typedef void (*PMClose) (void);
extern _X_EXPORT void xf86OpenConsole(void);
extern _X_EXPORT void xf86CloseConsole(void);
extern _X_HIDDEN Bool xf86VTActivate(int vtno);
extern _X_EXPORT Bool xf86VTSwitchPending(void);
extern _X_EXPORT Bool xf86VTSwitchAway(void);
extern _X_EXPORT Bool xf86VTSwitchTo(void);
extern _X_EXPORT void xf86VTRequest(int sig);
extern _X_EXPORT int xf86ProcessArgument(int, char **, int);
extern _X_EXPORT void xf86UseMsg(void);
extern _X_EXPORT PMClose xf86OSPMOpen(void);

extern _X_EXPORT void xf86InitVidMem(void);

#ifdef X_PRIVSEP
extern _X_EXPORT void xf86PrivilegedInit(void);
extern _X_EXPORT void xf86DropPriv(void);
#endif
#endif                          /* XF86_OS_PRIVS */

#ifdef XSERVER_PLATFORM_BUS
#include "hotplug.h"
void
xf86PlatformDeviceProbe(struct OdevAttributes *attribs);

void
xf86PlatformReprobeDevice(int index, struct OdevAttributes *attribs);
#endif

_XFUNCPROTOEND
#endif                          /* NO_OSLIB_PROTOTYPES */
#endif                          /* _XF86_OSPROC_H */
@


1.10
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@d192 4
@


1.9
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d17 2
a18 2
 * documentation, and that the names of the above listed copyright holders 
 * not be used in advertising or publicity pertaining to distribution of 
d20 2
a21 2
 * copyright holders make no representations about the suitability of this 
 * software for any purpose.  It is provided "as is" without express or 
d24 6
a29 6
 * THE ABOVE LISTED COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD 
 * TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS, IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDERS BE 
 * LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY 
 * DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER 
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING 
d39 1
a39 1
 * This software is furnished under license and may be used and copied only in 
d49 1
a49 1
 * 2) No right is granted to use any trade name, trademark, or logo of Digital 
d61 1
a61 1
 *    of revenue or loss of use, whether such damages arise in contract, 
d63 1
a63 1
 *    if advised of the possibility of such damage. 
a76 18
 * Flags for xf86MapVidMem().  Multiple flags can be or'd together.  The
 * flags may be used as hints.  For example it would be permissible to
 * enable write combining for memory marked only for framebuffer use.
 */

#define VIDMEM_FRAMEBUFFER	0x01    /* memory for framebuffer use */
#define VIDMEM_MMIO		0x02    /* memory for I/O use */
#define VIDMEM_MMIO_32BIT	0x04    /* memory accesses >= 32bit */
#define VIDMEM_READSIDEEFFECT	0x08    /* reads can have side-effects */
#define VIDMEM_SPARSE		0x10    /* sparse mapping required
                                         * assumed when VIDMEM_MMIO is
                                         * set. May be used with
                                         * VIDMEM_FRAMEBUFFER) */
#define VIDMEM_READONLY		0x20    /* read-only mapping
                                         * used when reading BIOS images
                                         * through xf86MapVidMem() */

/*
a114 8
extern _X_EXPORT Bool xf86LinearVidMem(void);
extern _X_EXPORT _X_DEPRECATED Bool xf86CheckMTRR(int);
extern _X_EXPORT _X_DEPRECATED void *xf86MapVidMem(int, int, unsigned long,
                                                     unsigned long);
extern _X_EXPORT _X_DEPRECATED void xf86UnMapVidMem(int, void *,
                                                    unsigned long);
extern _X_EXPORT int xf86ReadBIOS(unsigned long, unsigned long, unsigned char *,
                                  int);
@


1.8
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@d135 1
a135 1
extern _X_EXPORT _X_DEPRECATED pointer xf86MapVidMem(int, int, unsigned long,
d137 1
a137 1
extern _X_EXPORT _X_DEPRECATED void xf86UnMapVidMem(int, pointer,
@


1.7
log
@Uodate to xserver 1.14.2. Tested by krw@@, shadchin@@, todd@@
@
text
@a138 2
extern _X_EXPORT _X_DEPRECATED void xf86MapReadSideEffects(int, int, pointer,
                                                           unsigned long);
@


1.6
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d226 3
@


1.5
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@a217 2
extern _X_EXPORT _X_DEPRECATED void xf86MakeNewMapping(int, int, unsigned long,
                                                       unsigned long, pointer);
d221 6
@


1.4
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@a66 1

d74 1
a74 1
 */ 
d82 11
a92 11
#define VIDMEM_FRAMEBUFFER	0x01	/* memory for framebuffer use */
#define VIDMEM_MMIO		0x02	/* memory for I/O use */
#define VIDMEM_MMIO_32BIT	0x04	/* memory accesses >= 32bit */
#define VIDMEM_READSIDEEFFECT	0x08	/* reads can have side-effects */
#define VIDMEM_SPARSE		0x10	/* sparse mapping required
					 * assumed when VIDMEM_MMIO is
					 * set. May be used with
					 * VIDMEM_FRAMEBUFFER) */
#define VIDMEM_READONLY		0x20	/* read-only mapping
					 * used when reading BIOS images
					 * through xf86MapVidMem() */
d98 9
a106 9
#define XF86_M_LE		0x001	/* line enable */
#define XF86_M_DTR		0x002	/* data terminal ready */
#define XF86_M_RTS		0x004	/* request to send */
#define XF86_M_ST		0x008	/* secondary transmit */
#define XF86_M_SR		0x010	/* secondary receive */
#define XF86_M_CTS		0x020	/* clear to send */
#define XF86_M_CAR		0x040	/* carrier detect */
#define XF86_M_RNG		0x080	/* ring */
#define XF86_M_DSR		0x100	/* data set ready */
d128 1
d134 9
a142 5
extern _X_EXPORT Bool xf86CheckMTRR(int);
extern _X_EXPORT pointer xf86MapVidMem(int, int, unsigned long, unsigned long);
extern _X_EXPORT void xf86UnMapVidMem(int, pointer, unsigned long);
extern _X_EXPORT void xf86MapReadSideEffects(int, int, pointer, unsigned long);
extern _X_EXPORT int xf86ReadBIOS(unsigned long, unsigned long, unsigned char *, int);
d145 1
d153 2
a154 2
extern _X_EXPORT int xf86OpenSerial(pointer options);
extern _X_EXPORT int xf86SetSerial(int fd, pointer options);
d171 7
a177 7
	CARD32		bridgeId;
	CARD32		agpMode;
	unsigned long	base;
	unsigned long	size;
	unsigned long	totalPages;
	unsigned long	systemPages;
	unsigned long	usedPages;
d184 2
a185 2
extern _X_EXPORT int xf86AllocateGARTMemory(int screenNum, unsigned long size, int type,
				  unsigned long *physical);
d187 2
a188 1
extern _X_EXPORT Bool xf86BindGARTMemory(int screenNum, int key, unsigned long offset);
d197 2
a198 1
extern _X_EXPORT int xf86InstallSIGIOHandler(int fd, void (*f)(int, void *), void *);
d200 4
a203 4
extern _X_EXPORT int xf86BlockSIGIO (void);
extern _X_EXPORT void xf86UnblockSIGIO (int);
extern _X_EXPORT void xf86AssertBlockedSIGIO (char *);
extern _X_EXPORT Bool xf86SIGIOSupported (void);
d206 1
a206 1
typedef void (*PMClose)(void);
d218 2
a219 1
extern _X_EXPORT void xf86MakeNewMapping(int, int, unsigned long, unsigned long, pointer);
d222 1
a222 2
#endif /* XF86_OS_PRIVS */

d225 2
a226 3
#endif /* NO_OSLIB_PROTOTYPES */

#endif /* _XF86_OSPROC_H */
@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@a70 4
#ifdef XF86_OS_PRIVS
#include "xf86Pci.h"
#endif

a108 4
#ifdef XF86_OS_PRIVS
extern void xf86WrapperInit(void);
#endif

d133 29
a161 31
extern Bool xf86LinearVidMem(void);
extern Bool xf86CheckMTRR(int); 
extern pointer xf86MapVidMem(int, int, unsigned long, unsigned long);
extern void xf86UnMapVidMem(int, pointer, unsigned long);
extern void xf86MapReadSideEffects(int, int, pointer, unsigned long);
extern int xf86ReadBIOS(unsigned long, unsigned long, unsigned char *, int);
extern Bool xf86EnableIO(void);
extern void xf86DisableIO(void);
extern void xf86SetTVOut(int);
extern void xf86SetRGBOut(void);
extern void xf86OSRingBell(int, int, int);
extern void xf86BusToMem(unsigned char *, unsigned char *, int);
extern void xf86MemToBus(unsigned char *, unsigned char *, int);
extern void xf86UDelay(long usec);
extern void xf86SetReallySlowBcopy(void);
extern void xf86SlowBcopy(unsigned char *, unsigned char *, int);
extern int xf86OpenSerial(pointer options);
extern int xf86SetSerial(int fd, pointer options);
extern int xf86SetSerialSpeed(int fd, int speed);
extern int xf86ReadSerial(int fd, void *buf, int count);
extern int xf86WriteSerial(int fd, const void *buf, int count);
extern int xf86CloseSerial(int fd);
extern int xf86FlushInput(int fd);
extern int xf86WaitForInput(int fd, int timeout);
extern int xf86SerialSendBreak(int fd, int duration);
extern int xf86SetSerialModemState(int fd, int state);
extern int xf86GetSerialModemState(int fd);
extern int xf86SerialModemSetBits(int fd, int bits);
extern int xf86SerialModemClearBits(int fd, int bits);
extern int xf86LoadKernelModule(const char *pathname);
extern void xf86RingBell(int volume, int pitch, int duration);
d175 5
a179 5
extern Bool xf86AgpGARTSupported(void);
extern AgpInfoPtr xf86GetAGPInfo(int screenNum);
extern Bool xf86AcquireGART(int screenNum);
extern Bool xf86ReleaseGART(int screenNum);
extern int xf86AllocateGARTMemory(int screenNum, unsigned long size, int type,
d181 5
a185 5
extern Bool xf86DeallocateGARTMemory(int screenNum, int key);
extern Bool xf86BindGARTMemory(int screenNum, int key, unsigned long offset);
extern Bool xf86UnbindGARTMemory(int screenNum, int key);
extern Bool xf86EnableAGP(int screenNum, CARD32 mode);
extern Bool xf86GARTCloseScreen(int screenNum);
d191 6
a196 6
extern int xf86InstallSIGIOHandler(int fd, void (*f)(int, void *), void *);
extern int xf86RemoveSIGIOHandler(int fd);
extern int xf86BlockSIGIO (void);
extern void xf86UnblockSIGIO (int);
extern void xf86AssertBlockedSIGIO (char *);
extern Bool xf86SIGIOSupported (void);
d200 10
a209 21
extern void xf86OpenConsole(void);
extern void xf86CloseConsole(void);
extern Bool xf86VTSwitchPending(void);
extern Bool xf86VTSwitchAway(void);
extern Bool xf86VTSwitchTo(void);
extern void xf86VTRequest(int sig);
extern int xf86ProcessArgument(int, char **, int);
extern void xf86UseMsg(void);
extern void xf86ReloadInputDevs(int sig);
extern PMClose xf86OSPMOpen(void);

#ifdef NEED_OS_RAC_PROTOS
/* RAC-related privs */
/* internal to os-support layer */
resPtr xf86StdAccResFromOS(resPtr ret);

/* available to the common layer */
resPtr xf86AccResFromOS(resPtr ret);
#endif /* NEED_OS_RAC_PROTOS */

extern unsigned long xf86GetOSOffsetFromPCI(PCITAG tag, int space, unsigned long base);
d211 2
a212 2
extern void xf86MakeNewMapping(int, int, unsigned long, unsigned long, pointer);
extern void xf86InitVidMem(void);
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@a148 2
extern Bool xf86DisableInterrupts(void);
extern void xf86EnableInterrupts(void);
a151 4
#if defined(QNX4)
#pragma aux xf86BusToMem modify [eax ebx ecx edx esi edi];
#pragma aux xf86MemToBus modify [eax ebx ecx edx esi edi];
#endif
a153 1
extern void xf86IODelay(void);
@


1.1
log
@Initial revision
@
text
@a137 4
#if defined(XQUEUE)
#include "input.h"	/* for DeviceIntPtr */
#endif

d153 1
a153 1
extern void xf86SoundKbdBell(int, int, int);
d162 1
d178 1
a224 11
extern void xf86SetKbdLeds(int);
extern int xf86GetKbdLeds(void);
extern void xf86SetKbdRepeat(char);
extern void xf86KbdInit(void);
extern int xf86KbdOn(void);
extern int xf86KbdOff(void);
extern void xf86KbdEvents(void);
#ifdef XQUEUE
extern int  xf86XqueKbdProc(DeviceIntPtr, int);
extern void xf86XqueEvents(void);
#endif
a225 3
#ifdef WSCONS_SUPPORT
extern void xf86WSKbdEvents(void);
#endif
a230 3
resPtr xf86StdBusAccWindowsFromOS(void);
resPtr xf86StdPciAccWindowsFromOS(void);
resPtr xf86StdIsaAccWindowsFromOS(void);
a233 5
resPtr xf86BusAccWindowsFromOS(void);
resPtr xf86PciBusAccWindowsFromOS(void);
#ifdef INCLUDE_UNUSED
resPtr xf86IsaBusAccWindowsFromOS(void);
#endif
a236 2
extern Bool xf86GetPciSizeFromOS(PCITAG tag, int indx, int* bits);
extern Bool xf86GetPciOffsetFromOS(PCITAG tag, int indx, unsigned long* bases);
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d138 4
d157 1
a157 1
extern void xf86OSRingBell(int, int, int);
a165 1
extern void xf86SetReallySlowBcopy(void);
a180 1
extern void xf86RingBell(int volume, int pitch, int duration);
d227 11
d239 3
@

