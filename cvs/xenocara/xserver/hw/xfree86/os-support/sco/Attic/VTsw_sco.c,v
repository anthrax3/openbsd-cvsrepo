head	1.4;
access;
symbols
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2011.11.05.13.32.52;	author matthieu;	state dead;
branches;
next	1.3;

1.3
date	2010.12.05.15.36.08;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.34;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.21.38;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.21.38;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.17.57.35;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Update to xserver 1.11.2
@
text
@/*
 * Copyright 1993 by David Wexelblat <dwex@@goblin.org>
 * Copyright 1993 by David McCullough <davidm@@stallion.oz.au>
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of David Wexelblat not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  David Wexelblat makes no representations
 * about the suitability of this software for any purpose.  It is provided
 * "as is" without express or implied warranty.
 *
 * DAVID WEXELBLAT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL DAVID WEXELBLAT BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 *
 */

#ifdef HAVE_XORG_CONFIG_H
#include <xorg-config.h>
#endif

#include <X11/X.h>

#include "xf86.h"
#include "xf86Priv.h"
#include "xf86_OSlib.h"

/* For the event driver prototypes */
#include <sys/event.h>
#include <mouse.h>

/*
 * Handle the VT-switching interface for SCO
 */

/*
 * This function is the signal handler for the VT-switching signal.  It
 * is only referenced inside the OS-support layer. NOTE: we do NOT need
 * to re-arm the signal here, since we used sigaction() to set the signal
 * disposition in sco_init.c. If we had used signal(), we would need to
 * re-arm the signal here. All we need to do now is record the fact that
 * we got the signal. XFree86 handles the rest.
 */
void
xf86VTRequest(int sig)
{
  xf86Info.vtRequestsPending = TRUE;
  return;
}

Bool
xf86VTSwitchPending(void)
{
  return xf86Info.vtRequestsPending ? TRUE : FALSE;
}

/*
 * When we switch away, we need to flush and suspend the event driver
 * before the VT_RELDISP. We also need to get the current LED status
 * and preserve it, so that we can restore it when we come back.
 */
static int sco_ledstatus = -1;
static unsigned int sco_ledstate = 0;

Bool
xf86VTSwitchAway(void)
{
  ev_flush();
  ev_suspend();

  sco_ledstatus = ioctl(xf86Info.consoleFd, KDGETLED, &sco_ledstate);

  xf86Info.vtRequestsPending = FALSE;
  if (ioctl(xf86Info.consoleFd, VT_RELDISP, VT_TRUE) < 0) {
    return FALSE;
  } else {
    return TRUE;
  }
}

/*
 * When we come back to the X server, we need to resume the event driver,
 * and we need to restore the LED settings to what they were when we
 * switched away.
 */
Bool
xf86VTSwitchTo(void)
{
  ev_resume();

  xf86Info.vtRequestsPending = FALSE;
  if (ioctl(xf86Info.consoleFd, VT_RELDISP, VT_ACKACQ) < 0) {
    return FALSE;
  } else {
    if (sco_ledstatus >= 0) {
      ioctl (xf86Info.consoleFd, KDSETLED, sco_ledstate);
    }
    sco_ledstatus = -1;

    /*
     * Convince the console driver this screen is in graphics mode,
     * otherwise it assumes it can do more to the screen than it should.
     */
    if (ioctl(xf86Info.consoleFd, KDSETMODE, KD_GRAPHICS) < 0) {
        ErrorF("Failed to set graphics mode (%s)\n", strerror(errno));
    }

    return TRUE;
  }
}

Bool
xf86VTActivate(int vtno)
{
	if (ioctl(xf86Info.consoleFd, VT_ACTIVATE, vtno - 1) < 0) {
		return FALSE;
	}

	return TRUE;
}
@


1.3
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d61 1
a61 1
  return(xf86Info.vtRequestsPending ? TRUE : FALSE);
d82 1
a82 1
    return(FALSE);
d84 1
a84 1
    return(TRUE);
d100 1
a100 1
    return(FALSE);
d123 1
a123 1
		return(FALSE);
d126 1
a126 1
	return(TRUE);
@


1.1
log
@Initial revision
@
text
@a23 1
/* $XConsortium: VTsw_sco.c /main/2 1995/11/13 06:08:36 kaleb $ */
d117 10
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d24 1
@

