head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.20
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.18
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.16
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.6
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.1.2.0.10
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.06.10.13.21.23;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.27.19.02.30;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.21.49;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.21.49;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.04.19;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@/*
 * Copyright Â© 2004 Keith Packard
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of Keith Packard not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  Keith Packard makes no
 * representations about the suitability of this software for any purpose.  It
 * is provided "as is" without express or implied warranty.
 *
 * KEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _FBDEV_H_
#define _FBDEV_H_
#include <stdio.h>
#include <unistd.h>
#include "kdrive.h"

#ifdef RANDR
#include "randrstr.h"
#endif

typedef struct _fakePriv {
    CARD8 *base;
    int bytes_per_line;
} FakePriv;

typedef struct _fakeScrPriv {
    Rotation randr;
    Bool shadow;
} FakeScrPriv;

extern KdCardFuncs fakeFuncs;

Bool
 fakeInitialize(KdCardInfo * card, FakePriv * priv);

Bool
 fakeCardInit(KdCardInfo * card);

Bool
 fakeScreenInit(KdScreenInfo * screen);

Bool
 fakeScreenInitialize(KdScreenInfo * screen, FakeScrPriv * scrpriv);

Bool
 fakeInitScreen(ScreenPtr pScreen);

Bool
 fakeFinishInitScreen(ScreenPtr pScreen);

Bool
 fakeCreateResources(ScreenPtr pScreen);

void
 fakePreserve(KdCardInfo * card);

Bool
 fakeEnable(ScreenPtr pScreen);

Bool
 fakeDPMS(ScreenPtr pScreen, int mode);

void
 fakeDisable(ScreenPtr pScreen);

void
 fakeRestore(KdCardInfo * card);

void
 fakeScreenFini(KdScreenInfo * screen);

void
 fakeCardFini(KdCardInfo * card);

void
 fakeGetColors(ScreenPtr pScreen, int n, xColorItem * pdefs);

void
 fakePutColors(ScreenPtr pScreen, int n, xColorItem * pdefs);

Bool
 fakeMapFramebuffer(KdScreenInfo * screen);

void *fakeWindowLinear(ScreenPtr pScreen,
                       CARD32 row,
                       CARD32 offset, int mode, CARD32 *size, void *closure);

void
 fakeSetScreenSizes(ScreenPtr pScreen);

Bool
 fakeUnmapFramebuffer(KdScreenInfo * screen);

Bool
 fakeSetShadow(ScreenPtr pScreen);

Bool
 fakeCreateColormap(ColormapPtr pmap);

#ifdef RANDR
Bool
 fakeRandRGetInfo(ScreenPtr pScreen, Rotation * rotations);

Bool

fakeRandRSetConfig(ScreenPtr pScreen,
                   Rotation randr, int rate, RRScreenSizePtr pSize);
Bool
 fakeRandRInit(ScreenPtr pScreen);

#endif

extern KdPointerDriver FakePointerDriver;

extern KdKeyboardDriver FakeKeyboardDriver;

extern KdOsFuncs FakeOsFuncs;

#endif                          /* _FBDEV_H_ */
@


1.2
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d34 2
a35 2
    CARD8	*base;
    int		bytes_per_line;
d37 1
a37 1
    
d39 2
a40 2
    Rotation	randr;
    Bool	shadow;
d43 1
a43 1
extern KdCardFuncs  fakeFuncs;
d46 1
a46 1
fakeInitialize (KdCardInfo *card, FakePriv *priv);
d49 1
a49 1
fakeCardInit (KdCardInfo *card);
d52 1
a52 1
fakeScreenInit (KdScreenInfo *screen);
d55 2
a56 2
fakeScreenInitialize (KdScreenInfo *screen, FakeScrPriv *scrpriv);
    
d58 1
a58 1
fakeInitScreen (ScreenPtr pScreen);
d61 1
a61 1
fakeFinishInitScreen (ScreenPtr pScreen);
d64 1
a64 1
fakeCreateResources (ScreenPtr pScreen);
d67 1
a67 1
fakePreserve (KdCardInfo *card);
d70 1
a70 1
fakeEnable (ScreenPtr pScreen);
d73 1
a73 1
fakeDPMS (ScreenPtr pScreen, int mode);
d76 1
a76 1
fakeDisable (ScreenPtr pScreen);
d79 1
a79 1
fakeRestore (KdCardInfo *card);
d82 1
a82 1
fakeScreenFini (KdScreenInfo *screen);
d85 1
a85 1
fakeCardFini (KdCardInfo *card);
d88 1
a88 1
fakeGetColors (ScreenPtr pScreen, int n, xColorItem *pdefs);
d91 1
a91 1
fakePutColors (ScreenPtr pScreen, int n, xColorItem *pdefs);
d94 1
a94 1
fakeMapFramebuffer (KdScreenInfo *screen);
d96 3
a98 7
void *
fakeWindowLinear (ScreenPtr	pScreen,
		   CARD32	row,
		   CARD32	offset,
		   int		mode,
		   CARD32	*size,
		   void		*closure);
d101 1
a101 1
fakeSetScreenSizes (ScreenPtr pScreen);
d104 1
a104 1
fakeUnmapFramebuffer (KdScreenInfo *screen);
d107 1
a107 1
fakeSetShadow (ScreenPtr pScreen);
d110 2
a111 2
fakeCreateColormap (ColormapPtr pmap);
    
d114 1
a114 1
fakeRandRGetInfo (ScreenPtr pScreen, Rotation *rotations);
d117 3
a119 4
fakeRandRSetConfig (ScreenPtr		pScreen,
		     Rotation		randr,
		     int		rate,
		     RRScreenSizePtr	pSize);
d121 1
a121 1
fakeRandRInit (ScreenPtr pScreen);
d127 1
a127 1
extern KdKeyboardDriver	FakeKeyboardDriver;
d129 1
a129 1
extern KdOsFuncs   FakeOsFuncs;
d131 1
a131 1
#endif /* _FBDEV_H_ */
@


1.1
log
@Initial revision
@
text
@a1 2
 * $Id$
 *
a40 1
    PixmapPtr	pShadow;
d88 1
a88 1
fakeGetColors (ScreenPtr pScreen, int fb, int n, xColorItem *pdefs);
d91 1
a91 1
fakePutColors (ScreenPtr pScreen, int fb, int n, xColorItem *pdefs);
d130 1
a130 1
extern KdMouseFuncs FakeMouseFuncs;
d132 1
a132 1
extern KdKeyboardFuncs	FakeKeyboardFuncs;
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d2 2
d133 1
a133 1
extern KdPointerDriver FakePointerDriver;
d135 1
a135 1
extern KdKeyboardDriver	FakeKeyboardDriver;
@

