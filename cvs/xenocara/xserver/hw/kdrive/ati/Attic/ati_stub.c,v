head	1.3;
access;
symbols
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2009.09.06.19.44.23;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.18;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.22.13;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.22.13;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.03.57;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@/*
 * Copyright © 2003 Eric Anholt
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of Eric Anholt not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  Eric Anholt makes no
 * representations about the suitability of this software for any purpose.  It
 * is provided "as is" without express or implied warranty.
 *
 * ERIC ANHOLT DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL ERIC ANHOLT BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#ifdef HAVE_CONFIG_H
#include <kdrive-config.h>
#endif
#include "ati.h"
#include "klinux.h"

extern struct pci_id_entry ati_pci_ids[];

void
InitCard(char *name)
{
	struct pci_id_entry *id;
	KdCardAttr attr;

	for (id = ati_pci_ids; id->name != NULL; id++) {
		int j = 0;
		while (LinuxFindPci(id->vendor, id->device, j++, &attr))
			KdCardInfoAdd(&ATIFuncs, &attr, 0);
	}
}

void
InitOutput(ScreenInfo *pScreenInfo, int argc, char **argv)
{
	KdInitOutput(pScreenInfo, argc, argv);
}

void
InitInput(int argc, char **argv)
{
	KdOsAddInputDrivers();
	KdInitInput();
}

void
ddxUseMsg (void)
{
	KdUseMsg();
#ifdef KDRIVEVESA
	vesaUseMsg();
#endif
}

int
ddxProcessArgument(int argc, char **argv, int i)
{
	int	ret;
    
#ifdef KDRIVEVESA
	if (!(ret = vesaProcessArgument (argc, argv, i)))
#endif
		ret = KdProcessArgument(argc, argv, i);

	return ret;
}
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@@


1.1
log
@Initial revision
@
text
@a1 2
 * $Id$
 *
a21 1
/* $Header$ */
d53 2
a54 1
	KdInitInput(&LinuxMouseFuncs, &LinuxKeyboardFuncs);
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d2 2
d24 1
d56 1
a56 9
        KdKeyboardInfo *ki = NULL;
        
        KdAddPointerDriver(&LinuxMouseDriver);
        ki = KdNewKeyboard();
        if (ki) {
            ki->driver = &LinuxKeyboardDriver;
            KdAddKeyboard(ki);
        }
	KdInitInput();
@

