head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.2
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.4
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2015.11.07.16.48.52;	author matthieu;	state Exp;
branches;
next	1.7;
commitid	7pAEtF6Y5EgemkuY;

1.7
date	2014.05.02.19.27.47;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2013.06.07.17.28.47;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.10.13.21.22;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.05.13.32.49;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.27.19.02.26;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2009.09.06.19.44.22;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.02.15.26.13;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Update to xserver 1.17.4.
tested by naddy@@
@
text
@#ifdef HAVE_DIX_CONFIG_H
#include <dix-config.h>
#endif

#ifndef _GLX_context_h_
#define _GLX_context_h_

/*
 * SGI FREE SOFTWARE LICENSE B (Version 2.0, Sept. 18, 2008)
 * Copyright (C) 1991-2000 Silicon Graphics, Inc. All Rights Reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice including the dates of first publication and
 * either this permission notice or a reference to
 * http://oss.sgi.com/projects/FreeB/
 * shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * SILICON GRAPHICS, INC. BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
 * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Except as contained in this notice, the name of Silicon Graphics, Inc.
 * shall not be used in advertising or otherwise to promote the sale, use or
 * other dealings in this Software without prior written authorization from
 * Silicon Graphics, Inc.
 */

typedef struct __GLXtextureFromPixmap __GLXtextureFromPixmap;
struct __GLXtextureFromPixmap {
    int (*bindTexImage) (__GLXcontext * baseContext,
                         int buffer, __GLXdrawable * pixmap);
    int (*releaseTexImage) (__GLXcontext * baseContext,
                            int buffer, __GLXdrawable * pixmap);
};

struct __GLXcontext {
    void (*destroy) (__GLXcontext * context);
    int (*makeCurrent) (__GLXcontext * context);
    int (*loseCurrent) (__GLXcontext * context);
    int (*copy) (__GLXcontext * dst, __GLXcontext * src, unsigned long mask);
    Bool (*wait) (__GLXcontext * context, __GLXclientState * cl, int *error);

    __GLXtextureFromPixmap *textureFromPixmap;

    /*
     ** list of context structs
     */
    __GLXcontext *next;

    /*
     ** config struct for this context
     */
    __GLXconfig *config;

    /*
     ** Pointer to screen info data for this context.  This is set
     ** when the context is created.
     */
    __GLXscreen *pGlxScreen;

    /*
     ** If this context is current for a client, this will be that client
     */
    ClientPtr currentClient;

    /*
     ** The XID of this context.
     */
    XID id;

    /*
     ** The XID of the shareList context.
     */
    XID share_id;

    /*
     ** Whether this context's ID still exists.
     */
    GLboolean idExists;

    /*
     ** Whether this context is a direct rendering context.
     */
    GLboolean isDirect;

    /*
     ** This flag keeps track of whether there are unflushed GL commands.
     */
    GLboolean hasUnflushedCommands;

    /*
     ** Current rendering mode for this context.
     */
    GLenum renderMode;

    /**
     * Reset notification strategy used when a GPU reset occurs.
     */
    GLenum resetNotificationStrategy;

    /**
     * Context release behavior
     */
    GLenum releaseBehavior;

    /*
     ** Buffers for feedback and selection.
     */
    GLfloat *feedbackBuf;
    GLint feedbackBufSize;      /* number of elements allocated */
    GLuint *selectBuf;
    GLint selectBufSize;        /* number of elements allocated */

    /*
     ** The drawable private this context is bound to
     */
    __GLXdrawable *drawPriv;
    __GLXdrawable *readPriv;
};

void __glXContextDestroy(__GLXcontext * context);

extern int validGlxScreen(ClientPtr client, int screen,
                          __GLXscreen ** pGlxScreen, int *err);

extern int validGlxFBConfig(ClientPtr client, __GLXscreen * pGlxScreen,
                            XID id, __GLXconfig ** config, int *err);

extern int validGlxContext(ClientPtr client, XID id, int access_mode,
                           __GLXcontext ** context, int *err);

extern __GLXcontext *__glXdirectContextCreate(__GLXscreen * screen,
                                              __GLXconfig * modes,
                                              __GLXcontext * shareContext);

#endif                          /* !__GLX_context_h__ */
@


1.7
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@d111 5
@


1.6
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@a57 1
    __GLXcontext *last;
d72 5
a89 5

    /*
     ** Whether this context is current for some client.
     */
    GLboolean isCurrent;
@


1.5
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d107 5
d128 13
@


1.4
log
@Update to xserver 1.11.2
@
text
@d40 4
a43 6
    int (*bindTexImage)		(__GLXcontext  *baseContext,
				 int            buffer,
				 __GLXdrawable *pixmap);
    int (*releaseTexImage)	(__GLXcontext  *baseContext,
				 int            buffer,
				 __GLXdrawable *pixmap);
a45 1

d47 5
a51 9
    void           (*destroy)       (__GLXcontext *context);
    int            (*makeCurrent)   (__GLXcontext *context);
    int            (*loseCurrent)   (__GLXcontext *context);
    int            (*copy)          (__GLXcontext *dst,
				     __GLXcontext *src,
				     unsigned long mask);
    Bool           (*wait)          (__GLXcontext *context,
				     __GLXclientState *cl,
				     int *error);
d56 2
a57 2
    ** list of context structs
    */
d62 2
a63 2
    ** config struct for this context
    */
d67 3
a69 3
    ** Pointer to screen info data for this context.  This is set
    ** when the context is created.
    */
d73 2
a74 2
    ** The XID of this context.
    */
d78 2
a79 2
    ** The XID of the shareList context.
    */
d83 2
a84 2
    ** Whether this context's ID still exists.
    */
d86 1
a86 1
    
d88 2
a89 2
    ** Whether this context is current for some client.
    */
d91 1
a91 1
    
d93 2
a94 2
    ** Whether this context is a direct rendering context.
    */
d98 2
a99 2
    ** This flag keeps track of whether there are unflushed GL commands.
    */
d101 1
a101 1
    
d103 2
a104 2
    ** Current rendering mode for this context.
    */
d106 1
a106 1
    
d108 2
a109 2
    ** Buffers for feedback and selection.
    */
d111 1
a111 1
    GLint feedbackBufSize;	/* number of elements allocated */
d113 1
a113 1
    GLint selectBufSize;	/* number of elements allocated */
d116 2
a117 2
    ** The drawable private this context is bound to
    */
d122 1
a122 1
void __glXContextDestroy(__GLXcontext *context);
d124 1
a124 1
#endif /* !__GLX_context_h__ */
@


1.3
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@a55 2
    int            (*forceCurrent)  (__GLXcontext *context);

@


1.2
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d58 4
@


1.1
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d9 28
a36 33
** License Applicability. Except to the extent portions of this file are
** made subject to an alternative license as permitted in the SGI Free
** Software License B, Version 1.1 (the "License"), the contents of this
** file are subject only to the provisions of the License. You may not use
** this file except in compliance with the License. You may obtain a copy
** of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
** Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:
** 
** http://oss.sgi.com/projects/FreeB
** 
** Note that, as provided in the License, the Software is distributed on an
** "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
** DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
** CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
** PARTICULAR PURPOSE, AND NON-INFRINGEMENT.
** 
** Original Code. The Original Code is: OpenGL Sample Implementation,
** Version 1.2.1, released January 26, 2000, developed by Silicon Graphics,
** Inc. The Original Code is Copyright (c) 1991-2000 Silicon Graphics, Inc.
** Copyright in any portions created by third parties is as indicated
** elsewhere herein. All Rights Reserved.
** 
** Additional Notice Provisions: The application programming interfaces
** established by SGI in conjunction with the Original Code are The
** OpenGL(R) Graphics System: A Specification (Version 1.2.1), released
** April 1, 1999; The OpenGL(R) Graphics System Utility Library (Version
** 1.3), released November 4, 1998; and OpenGL(R) Graphics with the X
** Window System(R) (Version 1.3), released October 19, 1998. This software
** was created using the OpenGL(R) version 1.2.1 Sample Implementation
** published by SGI, but has not been independently verified as being
** compliant with the OpenGL(R) version 1.2.1 Specification.
**
*/
a66 6
    ** list of contexts bound to the same drawable
    */
    __GLXcontext *nextDrawPriv;
    __GLXcontext *nextReadPriv;

    /*
a87 5
    ** screen number.
    */
    GLint screen;

    /*
a125 5

/* pending state defines */
#define __GLX_PENDING_RESIZE	0x1
#define	__GLX_PENDING_DESTROY	0x2
#define __GLX_PENDING_SWAP	0x4
@

