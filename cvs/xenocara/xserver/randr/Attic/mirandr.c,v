head	1.3;
access;
symbols
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.1.2.0.8
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.6
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2011.11.05.13.32.57;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2009.09.06.19.44.37;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.16.12;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.16.12;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.05.12;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to xserver 1.11.2
@
text
@/*
 * Copyright © 2000 Compaq Computer Corporation
 * Copyright © 2002 Hewlett-Packard Company
 * Copyright © 2006 Intel Corporation
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that copyright
 * notice and this permission notice appear in supporting documentation, and
 * that the name of the copyright holders not be used in advertising or
 * publicity pertaining to distribution of the software without specific,
 * written prior permission.  The copyright holders make no representations
 * about the suitability of this software for any purpose.  It is provided "as
 * is" without express or implied warranty.
 *
 * THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
 * OF THIS SOFTWARE.
 *
 * Author:  Jim Gettys, Hewlett-Packard Company, Inc.
 *	    Keith Packard, Intel Corporation
 */

#ifdef HAVE_DIX_CONFIG_H
#include <dix-config.h>
#endif

#include "scrnintstr.h"
#include "mi.h"
#include "randrstr.h"
#include <stdio.h>

Bool
miRRGetInfo (ScreenPtr pScreen, Rotation *rotations)
{
    return TRUE;
}

/*
 * Any hardware that can actually change anything will need something
 * different here
 */
Bool
miRRCrtcSet (ScreenPtr	pScreen,
	     RRCrtcPtr	crtc,
	     RRModePtr	mode,
	     int	x,
	     int	y,
	     Rotation	rotation,
	     int	numOutput,
	     RROutputPtr *outputs)
{
    return TRUE;
}

static Bool
miRRCrtcSetGamma (ScreenPtr	pScreen,
		  RRCrtcPtr	crtc)
{
    return TRUE;
}

Bool
miRROutputSetProperty (ScreenPtr	    pScreen,
		       RROutputPtr	    output,
		       Atom		    property,
		       RRPropertyValuePtr   value)
{
    return TRUE;
}

Bool
miRROutputGetProperty (ScreenPtr	    pScreen,
		       RROutputPtr	    output,
		       Atom		    property)
{
	return TRUE;
}

Bool
miRROutputValidateMode (ScreenPtr	    pScreen,
			RROutputPtr	    output,
			RRModePtr	    mode)
{
    return FALSE;
}

void
miRRModeDestroy (ScreenPtr  pScreen,
		 RRModePtr  mode)
{
}

/*
 * This function assumes that only a single depth can be
 * displayed at a time, but that all visuals of that depth
 * can be displayed simultaneously.  It further assumes that
 * only a single size is available.  Hardware providing
 * additional capabilties should use different code.
 * XXX what to do here....
 */

Bool
miRandRInit (ScreenPtr pScreen)
{
    rrScrPrivPtr    pScrPriv;
#if RANDR_12_INTERFACE
    RRModePtr	mode;
    RRCrtcPtr	crtc;
    RROutputPtr	output;
    xRRModeInfo modeInfo;
    char	name[64];
#endif
    
    if (!RRScreenInit (pScreen))
	return FALSE;
    pScrPriv = rrGetScrPriv(pScreen);
    pScrPriv->rrGetInfo = miRRGetInfo;
#if RANDR_12_INTERFACE
    pScrPriv->rrCrtcSet = miRRCrtcSet;
    pScrPriv->rrCrtcSetGamma = miRRCrtcSetGamma;
    pScrPriv->rrOutputSetProperty = miRROutputSetProperty;
#if RANDR_13_INTERFACE
    pScrPriv->rrOutputGetProperty = miRROutputGetProperty;
#endif
    pScrPriv->rrOutputValidateMode = miRROutputValidateMode;
    pScrPriv->rrModeDestroy = miRRModeDestroy;
    
    RRScreenSetSizeRange (pScreen,
			  pScreen->width, pScreen->height,
			  pScreen->width, pScreen->height);

    snprintf (name, sizeof(name), "%dx%d", pScreen->width, pScreen->height);
    memset (&modeInfo, '\0', sizeof (modeInfo));
    modeInfo.width = pScreen->width;
    modeInfo.height = pScreen->height;
    modeInfo.nameLength = strlen (name);
    
    mode = RRModeGet (&modeInfo, name);
    if (!mode)
	return FALSE;
    
    crtc = RRCrtcCreate (pScreen, NULL);
    if (!crtc)
	return FALSE;
    
    output = RROutputCreate (pScreen, "screen", 6, NULL);
    if (!output)
	return FALSE;
    if (!RROutputSetClones (output, NULL, 0))
	return FALSE;
    if (!RROutputSetModes (output, &mode, 1, 0))
	return FALSE;
    if (!RROutputSetCrtcs (output, &crtc, 1))
	return FALSE;
    if (!RROutputSetConnection (output, RR_Connected))
	return FALSE;
    RRCrtcNotify (crtc, mode, 0, 0, RR_Rotate_0, NULL, 1, &output);
#endif
    return TRUE;
}
@


1.2
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
 *
 * Copyright © 2000, Compaq Computer Corporation, 
 * Copyright © 2002, Hewlett Packard, Inc.
d8 7
a14 7
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of Compaq or HP not be used in advertising
 * or publicity pertaining to distribution of the software without specific,
 * written prior permission.  HP makes no representations about the
 * suitability of this software for any purpose.  It is provided "as is"
 * without express or implied warranty.
d16 7
a22 6
 * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL HP
 * BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN 
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d24 2
a25 1
 * Author:  Jim Gettys, HP Labs, Hewlett-Packard, Inc.
a27 1

a33 1
#include <X11/extensions/randr.h>
a36 9
/*
 * This function assumes that only a single depth can be
 * displayed at a time, but that all visuals of that depth
 * can be displayed simultaneously.  It further assumes that
 * only a single size is available.  Hardware providing
 * additional capabilties should use different code.
 * XXX what to do here....
 */

a39 24
    int	i;
    Bool setConfig = FALSE;
    
    *rotations = RR_Rotate_0;
    for (i = 0; i < pScreen->numDepths; i++)
    {
	if (pScreen->allowedDepths[i].numVids)
	{
		RRScreenSizePtr		pSize;

		pSize = RRRegisterSize (pScreen,
					pScreen->width,
					pScreen->height,
					pScreen->mmWidth,
					pScreen->mmHeight);
		if (!pSize)
		    return FALSE;
		if (!setConfig)
		{
		    RRSetCurrentConfig (pScreen, RR_Rotate_0, 0, pSize);
		    setConfig = TRUE;
		}
	}
    }
d48 8
a55 4
miRRSetConfig (ScreenPtr	pScreen,
	       Rotation		rotation,
	       int		rate,
	       RRScreenSizePtr	pSize)
d60 46
d110 8
a117 1
    rrScrPrivPtr    rp;
d121 43
a163 3
    rp = rrGetScrPriv(pScreen);
    rp->rrGetInfo = miRRGetInfo;
    rp->rrSetConfig = miRRSetConfig;
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d2 3
a4 3
 * Copyright © 2000 Compaq Computer Corporation
 * Copyright © 2002 Hewlett-Packard Company
 * Copyright © 2006 Intel Corporation
d8 7
a14 7
 * the above copyright notice appear in all copies and that both that copyright
 * notice and this permission notice appear in supporting documentation, and
 * that the name of the copyright holders not be used in advertising or
 * publicity pertaining to distribution of the software without specific,
 * written prior permission.  The copyright holders make no representations
 * about the suitability of this software for any purpose.  It is provided "as
 * is" without express or implied warranty.
d16 6
a21 7
 * THE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
 * OF THIS SOFTWARE.
d23 1
a23 2
 * Author:  Jim Gettys, Hewlett-Packard Company, Inc.
 *	    Keith Packard, Intel Corporation
d26 1
d33 1
d37 9
d49 24
d81 4
a84 8
miRRCrtcSet (ScreenPtr	pScreen,
	     RRCrtcPtr	crtc,
	     RRModePtr	mode,
	     int	x,
	     int	y,
	     Rotation	rotation,
	     int	numOutput,
	     RROutputPtr *outputs)
a88 38
static Bool
miRRCrtcSetGamma (ScreenPtr	pScreen,
		  RRCrtcPtr	crtc)
{
    return TRUE;
}

Bool
miRROutputSetProperty (ScreenPtr	    pScreen,
		       RROutputPtr	    output,
		       Atom		    property,
		       RRPropertyValuePtr   value)
{
    return TRUE;
}

Bool
miRROutputValidateMode (ScreenPtr	    pScreen,
			RROutputPtr	    output,
			RRModePtr	    mode)
{
    return FALSE;
}

void
miRRModeDestroy (ScreenPtr  pScreen,
		 RRModePtr  mode)
{
}

/*
 * This function assumes that only a single depth can be
 * displayed at a time, but that all visuals of that depth
 * can be displayed simultaneously.  It further assumes that
 * only a single size is available.  Hardware providing
 * additional capabilties should use different code.
 * XXX what to do here....
 */
d93 1
a93 8
    rrScrPrivPtr    pScrPriv;
#if RANDR_12_INTERFACE
    RRModePtr	mode;
    RRCrtcPtr	crtc;
    RROutputPtr	output;
    xRRModeInfo modeInfo;
    char	name[64];
#endif
d97 3
a99 40
    pScrPriv = rrGetScrPriv(pScreen);
    pScrPriv->rrGetInfo = miRRGetInfo;
#if RANDR_12_INTERFACE
    pScrPriv->rrCrtcSet = miRRCrtcSet;
    pScrPriv->rrCrtcSetGamma = miRRCrtcSetGamma;
    pScrPriv->rrOutputSetProperty = miRROutputSetProperty;
    pScrPriv->rrOutputValidateMode = miRROutputValidateMode;
    pScrPriv->rrModeDestroy = miRRModeDestroy;
    
    RRScreenSetSizeRange (pScreen,
			  pScreen->width, pScreen->height,
			  pScreen->width, pScreen->height);

    sprintf (name, "%dx%d", pScreen->width, pScreen->height);
    memset (&modeInfo, '\0', sizeof (modeInfo));
    modeInfo.width = pScreen->width;
    modeInfo.height = pScreen->height;
    modeInfo.nameLength = strlen (name);
    
    mode = RRModeGet (&modeInfo, name);
    if (!mode)
	return FALSE;
    
    crtc = RRCrtcCreate (pScreen, NULL);
    if (!crtc)
	return FALSE;
    
    output = RROutputCreate (pScreen, "screen", 6, NULL);
    if (!output)
	return FALSE;
    if (!RROutputSetClones (output, NULL, 0))
	return FALSE;
    if (!RROutputSetModes (output, &mode, 1, 0))
	return FALSE;
    if (!RROutputSetCrtcs (output, &crtc, 1))
	return FALSE;
    if (!RROutputSetConnection (output, RR_Connected))
	return FALSE;
    RRCrtcNotify (crtc, mode, 0, 0, RR_Rotate_0, 1, &output);
#endif
@

