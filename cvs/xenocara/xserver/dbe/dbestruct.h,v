head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.2
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.4
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.2.0.4
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.2
	v1_4_0_90:1.1.1.2
	v1_4:1.1.1.2
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.09.16.19.10.20;	author matthieu;	state Exp;
branches;
next	1.9;
commitid	Te1daavkBLskZ8gc;

1.9
date	2014.05.02.19.27.47;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.07.17.28.47;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2012.06.10.13.21.20;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.05.15.36.03;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.27.19.02.26;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.04.13.19.54.46;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.19.44.21;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.12;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.14.46;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.14.46;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.11.24.18.05.36;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@/******************************************************************************
 *
 * Copyright (c) 1994, 1995  Hewlett-Packard Company
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL HEWLETT-PACKARD COMPANY BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * Except as contained in this notice, the name of the Hewlett-Packard
 * Company shall not be used in advertising or otherwise to promote the
 * sale, use or other dealings in this Software without prior written
 * authorization from the Hewlett-Packard Company.
 *
 *     Header file for DIX-related DBE
 *
 *****************************************************************************/

#ifndef DBE_STRUCT_H
#define DBE_STRUCT_H

/* INCLUDES */

#define NEED_DBE_PROTOCOL
#include <X11/extensions/dbeproto.h>
#include "windowstr.h"
#include "privates.h"

typedef struct {
    VisualID visual;            /* one visual ID that supports double-buffering */
    int depth;                  /* depth of visual in bits                      */
    int perflevel;              /* performance level of visual                  */
} XdbeVisualInfo;

typedef struct {
    int count;                  /* number of items in visual_depth   */
    XdbeVisualInfo *visinfo;    /* list of visuals & depths for scrn */
} XdbeScreenVisualInfo;

/* DEFINES */

#define DBE_SCREEN_PRIV(pScreen) ((DbeScreenPrivPtr) \
    dixLookupPrivate(&(pScreen)->devPrivates, dbeScreenPrivKey))

#define DBE_SCREEN_PRIV_FROM_DRAWABLE(pDrawable) \
    DBE_SCREEN_PRIV((pDrawable)->pScreen)

#define DBE_SCREEN_PRIV_FROM_WINDOW_PRIV(pDbeWindowPriv) \
    DBE_SCREEN_PRIV((pDbeWindowPriv)->pWindow->drawable.pScreen)

#define DBE_SCREEN_PRIV_FROM_WINDOW(pWindow) \
    DBE_SCREEN_PRIV((pWindow)->drawable.pScreen)

#define DBE_SCREEN_PRIV_FROM_PIXMAP(pPixmap) \
    DBE_SCREEN_PRIV((pPixmap)->drawable.pScreen)

#define DBE_SCREEN_PRIV_FROM_GC(pGC)\
    DBE_SCREEN_PRIV((pGC)->pScreen)

#define DBE_WINDOW_PRIV(pWin) ((DbeWindowPrivPtr) \
    dixLookupPrivate(&(pWin)->devPrivates, dbeWindowPrivKey))

/* Initial size of the buffer ID array in the window priv. */
#define DBE_INIT_MAX_IDS	2

/* Reallocation increment for the buffer ID array. */
#define DBE_INCR_MAX_IDS	4

/* Marker for free elements in the buffer ID array. */
#define DBE_FREE_ID_ELEMENT	0

/* TYPEDEFS */

/* Record used to pass swap information between DIX and DDX swapping
 * procedures.
 */
typedef struct _DbeSwapInfoRec {
    WindowPtr pWindow;
    unsigned char swapAction;

} DbeSwapInfoRec, *DbeSwapInfoPtr;

/*
 ******************************************************************************
 ** Per-window data
 ******************************************************************************
 */

typedef struct _DbeWindowPrivRec {
    /* A pointer to the window with which the DBE window private (buffer) is
     * associated.
     */
    WindowPtr pWindow;

    /* Last known swap action for this buffer.  Legal values for this field
     * are XdbeUndefined, XdbeBackground, XdbeUntouched, and XdbeCopied.
     */
    unsigned char swapAction;

    /* Last known buffer size.
     */
    unsigned short width, height;

    /* Coordinates used for static gravity when the window is positioned.
     */
    short x, y;

    /* Number of XIDs associated with this buffer.
     */
    int nBufferIDs;

    /* Capacity of the current buffer ID array, IDs. */
    int maxAvailableIDs;

    /* Pointer to the array of buffer IDs.  This initially points to initIDs.
     * When the static limit of the initIDs array is reached, the array is
     * reallocated and this pointer is set to the new array instead of initIDs.
     */
    XID *IDs;

    /* Initial array of buffer IDs.  We are defining the XID array within the
     * window priv to optimize for data locality.  In most cases, only one
     * buffer will be associated with a window.  Having the array declared
     * here can prevent us from accessing the data in another memory page,
     * possibly resulting in a page swap and loss of performance.  Initially we
     * will use this array to store buffer IDs.  For situations where we have
     * more IDs than can fit in this static array, we will allocate a larger
     * array to use, possibly suffering a performance loss.
     */
    XID initIDs[DBE_INIT_MAX_IDS];

    /* Pointer to a drawable that contains the contents of the back buffer.
     */
    PixmapPtr pBackBuffer;

    /* Pointer to a drawable that contains the contents of the front buffer.
     * This pointer is only used for the XdbeUntouched swap action.  For that
     * swap action, we need to copy the front buffer (window) contents into
     * this drawable, copy the contents of current back buffer drawable (the
     * back buffer) into the window, swap the front and back drawable pointers,
     * and then swap the drawable/resource associations in the resource
     * database.
     */
    PixmapPtr pFrontBuffer;

    /* Device-specific private information.
     */
    PrivateRec *devPrivates;

} DbeWindowPrivRec, *DbeWindowPrivPtr;

/*
 ******************************************************************************
 ** Per-screen data
 ******************************************************************************
 */

typedef struct _DbeScreenPrivRec {
    /* Wrapped functions
     * It is the responsibilty of the DDX layer to wrap PositionWindow().
     * DbeExtensionInit wraps DestroyWindow().
     */
    PositionWindowProcPtr PositionWindow;
    DestroyWindowProcPtr DestroyWindow;

    /* Per-screen DIX routines */
    Bool (*SetupBackgroundPainter) (WindowPtr /*pWin */ ,
                                    GCPtr       /*pGC */
        );

    /* Per-screen DDX routines */
    Bool (*GetVisualInfo) (ScreenPtr /*pScreen */ ,
                           XdbeScreenVisualInfo *       /*pVisInfo */
        );
    int (*AllocBackBufferName) (WindowPtr /*pWin */ ,
                                XID /*bufId */ ,
                                int     /*swapAction */
        );
    int (*SwapBuffers) (ClientPtr /*client */ ,
                        int * /*pNumWindows */ ,
                        DbeSwapInfoPtr  /*swapInfo */
        );
    void (*WinPrivDelete) (DbeWindowPrivPtr /*pDbeWindowPriv */ ,
                           XID  /*bufId */
        );
} DbeScreenPrivRec, *DbeScreenPrivPtr;

#endif                          /* DBE_STRUCT_H */
@


1.9
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@d2 1
a2 1
 * 
d12 1
a12 1
 * 
d15 1
a15 1
 * 
d23 1
a23 1
 * 
d28 1
a28 1
 * 
d142 1
a142 1
     * array to use, possibly suffering a performance loss. 
@


1.8
log
@Update to X server 1.14.1. Tested by many during t2k13. Thanks.
@
text
@d146 14
a196 4
    void (*BeginIdiom) (ClientPtr       /*client */
        );
    void (*EndIdiom) (ClientPtr /*client */
        );
a199 3
    void (*ResetProc) (ScreenPtr        /*pScreen */
        );

@


1.7
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@a85 2
extern _X_EXPORT void DbeExtensionInit(void);

@


1.6
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@a35 1

d43 10
a52 14
typedef struct
{
    VisualID    visual;    /* one visual ID that supports double-buffering */
    int         depth;     /* depth of visual in bits                      */
    int         perflevel; /* performance level of visual                  */
}
XdbeVisualInfo;

typedef struct
{
    int                 count;          /* number of items in visual_depth   */
    XdbeVisualInfo      *visinfo;       /* list of visuals & depths for scrn */
}
XdbeScreenVisualInfo;
d86 1
a86 1
extern _X_EXPORT void DbeExtensionInit (void);
d93 3
a95 4
typedef struct _DbeSwapInfoRec
{
    WindowPtr		pWindow;
    unsigned char	swapAction;
d105 1
a105 2
typedef struct _DbeWindowPrivRec
{
d109 1
a109 1
    WindowPtr		pWindow;
d114 1
a114 1
    unsigned char	swapAction;
d118 1
a118 1
    unsigned short	width, height;
d122 1
a122 1
    short		x, y;
d126 1
a126 1
    int			nBufferIDs;
d129 1
a129 1
    int			maxAvailableIDs;
d135 1
a135 1
    XID			*IDs;
d146 1
a146 1
    XID			initIDs[DBE_INIT_MAX_IDS];
d150 1
a150 1
    PrivateRec		*devPrivates;
a153 1

d160 1
a160 2
typedef struct _DbeScreenPrivRec
{
d166 1
a166 1
    DestroyWindowProcPtr  DestroyWindow;
d169 3
a171 4
    Bool	(*SetupBackgroundPainter)(
		WindowPtr /*pWin*/,
		GCPtr /*pGC*/
);
d174 20
a193 27
    Bool	(*GetVisualInfo)(
		ScreenPtr /*pScreen*/,
		XdbeScreenVisualInfo * /*pVisInfo*/
);
    int		(*AllocBackBufferName)(
		WindowPtr /*pWin*/,
		XID /*bufId*/,
		int /*swapAction*/
);
    int		(*SwapBuffers)(
		ClientPtr /*client*/,
		int * /*pNumWindows*/,
		DbeSwapInfoPtr /*swapInfo*/
);
    void	(*BeginIdiom)(
		ClientPtr /*client*/
);
    void	(*EndIdiom)(
		ClientPtr /*client*/
);
    void	(*WinPrivDelete)(
		DbeWindowPrivPtr /*pDbeWindowPriv*/,
		XID /*bufId*/
);
    void	(*ResetProc)(
		ScreenPtr /*pScreen*/
);
d197 1
a197 1
#endif /* DBE_STRUCT_H */
@


1.5
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@a169 8
    /* Resources created by DIX to be used by DDX */
    RESTYPE	dbeDrawableResType;
    RESTYPE	dbeWindowPrivResType;

    /* Private indices created by DIX to be used by DDX */
    DevPrivateKey dbeScreenPrivKey;
    DevPrivateKey dbeWindowPrivKey;

a210 4

    /* Device-specific private information.
     */
    PrivateRec	*devPrivates;
@


1.4
log
@Add a configure test for newer proto headers and use it to enable
building xserver 1.6 with those headers. ok oga@@.
@
text
@a39 1
#ifdef HAVE_X11_EXTENSIONS_DBEPROTO_H
a40 3
#else
#include <X11/extensions/Xdbeproto.h>
#endif
a43 2

#ifdef HAVE_X11_EXTENSIONS_DBEPROTO_H
a57 1
#endif
d91 1
a91 1
extern void DbeExtensionInit (void);
@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d40 3
d44 1
d48 17
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d77 1
@


1.1
log
@Initial revision
@
text
@a31 1
/* $XFree86$ */
d42 1
d47 2
a48 4
#define DBE_SCREEN_PRIV(pScreen) \
    ((dbeScreenPrivIndex < 0) ? \
     NULL : \
     ((DbeScreenPrivPtr)((pScreen)->devPrivates[dbeScreenPrivIndex].ptr)))
d65 2
a66 4
#define DBE_WINDOW_PRIV(pWindow)\
    ((dbeWindowPrivIndex < 0) ? \
     NULL : \
     ((DbeWindowPrivPtr)(pWindow->devPrivates[dbeWindowPrivIndex].ptr)))
d142 1
a142 1
    DevUnion		*devPrivates;
a154 5
    /* Info for creating window privs */
    int          winPrivPrivLen;    /* Length of privs in DbeWindowPrivRec   */
    unsigned int *winPrivPrivSizes; /* Array of private record sizes         */
    unsigned int totalWinPrivSize;  /* PrivRec + size of all priv priv ptrs  */

d160 2
a161 2
    int		dbeScreenPrivIndex;
    int		dbeWindowPrivIndex;
a174 11
    DbeWindowPrivPtr (*AllocWinPriv)(
		ScreenPtr /*pScreen*/
);
    int		(*AllocWinPrivPrivIndex)(
		void
);
    Bool	(*AllocWinPrivPriv)(
		ScreenPtr /*pScreen*/,
		int /*index*/,
		unsigned /*amount*/
);
a203 5
    void	(*ValidateBuffer)(
		WindowPtr /*pWin*/,
		XID /*bufId*/,
		Bool /*dstbuffer*/
);
d207 1
a207 1
    DevUnion	*devPrivates;
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@xserver 1.4
@
text
@d32 1
d223 5
@

