head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.2
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.09.16.19.10.25;	author matthieu;	state Exp;
branches;
next	1.6;
commitid	Te1daavkBLskZ8gc;

1.6
date	2014.05.02.19.27.50;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2012.06.10.13.21.31;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.12.05.15.36.10;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.27.19.02.37;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.33;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.15.07;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.15.07;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@/*
 *
 * Copyright Â© 2000 Keith Packard
 *
 * Permission to use, copy, modify, distribute, and sell this software and its
 * documentation for any purpose is hereby granted without fee, provided that
 * the above copyright notice appear in all copies and that both that
 * copyright notice and this permission notice appear in supporting
 * documentation, and that the name of Keith Packard not be used in
 * advertising or publicity pertaining to distribution of the software without
 * specific, written prior permission.  Keith Packard makes no
 * representations about the suitability of this software for any purpose.  It
 * is provided "as is" without express or implied warranty.
 *
 * KEITH PACKARD DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
 * EVENT SHALL KEITH PACKARD BE LIABLE FOR ANY SPECIAL, INDIRECT OR
 * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
 * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _SHADOW_H_
#define _SHADOW_H_

#include "scrnintstr.h"

#include "picturestr.h"

#include "damage.h"
#include "damagestr.h"
typedef struct _shadowBuf *shadowBufPtr;

typedef void (*ShadowUpdateProc) (ScreenPtr pScreen, shadowBufPtr pBuf);

#define SHADOW_WINDOW_RELOCATE 1
#define SHADOW_WINDOW_READ 2
#define SHADOW_WINDOW_WRITE 4

typedef void *(*ShadowWindowProc) (ScreenPtr pScreen,
                                   CARD32 row,
                                   CARD32 offset,
                                   int mode, CARD32 *size, void *closure);

typedef struct _shadowBuf {
    DamagePtr pDamage;
    ShadowUpdateProc update;
    ShadowWindowProc window;
    PixmapPtr pPixmap;
    void *closure;
    int randr;

    /* screen wrappers */
    GetImageProcPtr GetImage;
    CloseScreenProcPtr CloseScreen;
} shadowBufRec;

/* Match defines from randr extension */
#define SHADOW_ROTATE_0	    1
#define SHADOW_ROTATE_90    2
#define SHADOW_ROTATE_180   4
#define SHADOW_ROTATE_270   8
#define SHADOW_ROTATE_ALL   (SHADOW_ROTATE_0|SHADOW_ROTATE_90|\
			     SHADOW_ROTATE_180|SHADOW_ROTATE_270)
#define SHADOW_REFLECT_X    16
#define SHADOW_REFLECT_Y    32
#define SHADOW_REFLECT_ALL  (SHADOW_REFLECT_X|SHADOW_REFLECT_Y)

extern _X_EXPORT DevPrivateKey shadowScrPrivateKey;

#define shadowGetBuf(pScr) ((shadowBufPtr) \
    dixLookupPrivate(&(pScr)->devPrivates, shadowScrPrivateKey))
#define shadowBuf(pScr)            shadowBufPtr pBuf = shadowGetBuf(pScr)
#define shadowDamage(pBuf)  DamageRegion(pBuf->pDamage)

extern _X_EXPORT Bool
 shadowSetup(ScreenPtr pScreen);

extern _X_EXPORT Bool

shadowAdd(ScreenPtr pScreen,
          PixmapPtr pPixmap,
          ShadowUpdateProc update,
          ShadowWindowProc window, int randr, void *closure);

extern _X_EXPORT void
 shadowRemove(ScreenPtr pScreen, PixmapPtr pPixmap);

extern _X_EXPORT void *shadowAlloc(int width, int height, int bpp);

extern _X_EXPORT void
 shadowUpdateAfb4(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateAfb8(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateIplan2p4(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateIplan2p8(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdatePacked(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdatePlanar4(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdatePlanar4x8(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotatePacked(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate8_90(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate16_90(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate16_90YX(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate32_90(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate8_180(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate16_180(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate32_180(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate8_270(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate16_270(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate16_270YX(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate32_270(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate8(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate16(ScreenPtr pScreen, shadowBufPtr pBuf);

extern _X_EXPORT void
 shadowUpdateRotate32(ScreenPtr pScreen, shadowBufPtr pBuf);

typedef void (*shadowUpdateProc) (ScreenPtr, shadowBufPtr);

extern _X_EXPORT shadowUpdateProc shadowUpdatePackedWeak(void);
extern _X_EXPORT shadowUpdateProc shadowUpdatePlanar4Weak(void);
extern _X_EXPORT shadowUpdateProc shadowUpdatePlanar4x8Weak(void);
extern _X_EXPORT shadowUpdateProc shadowUpdateRotatePackedWeak(void);

#endif                          /* _SHADOW_H_ */
@


1.6
log
@Update to xserver 1.15.1.

Tested by at least ajacoutot@@, dcoppa@@ & jasper@@
@
text
@a45 1
/* BC hack: do not move the damage member.  see shadow.c for explanation. */
a49 1
    RegionRec damage;
a88 4

extern _X_EXPORT Bool

shadowInit(ScreenPtr pScreen, ShadowUpdateProc update, ShadowWindowProc window);
@


1.5
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d99 12
@


1.4
log
@Upgrade to xorg-server 1.9.2.
Tested by ajacoutot@@, krw@@, shadchin@@ and jasper@@ on various configurations
including multihead with both zaphod and xrandr.
@
text
@d33 1
a33 1
typedef struct _shadowBuf   *shadowBufPtr;
d35 1
a35 2
typedef void (*ShadowUpdateProc) (ScreenPtr pScreen,
				  shadowBufPtr pBuf);
d41 4
a44 6
typedef void *(*ShadowWindowProc) (ScreenPtr	pScreen,
				   CARD32	row,
				   CARD32	offset,
				   int		mode,
				   CARD32	*size,
				   void		*closure);
d48 7
a54 7
    DamagePtr           pDamage;
    ShadowUpdateProc	update;
    ShadowWindowProc	window;
    RegionRec		damage;
    PixmapPtr		pPixmap;
    void		*closure;
    int			randr;
d57 2
a58 2
    GetImageProcPtr     GetImage;
    CloseScreenProcPtr  CloseScreen;
d77 1
a77 1
#define shadowDamage(pBuf)  DamageRegion(pBuf->pDamage)    
d80 1
a80 1
shadowSetup (ScreenPtr pScreen);
d83 5
a87 6
shadowAdd (ScreenPtr	    pScreen,
	   PixmapPtr	    pPixmap,
	   ShadowUpdateProc update,
	   ShadowWindowProc window,
	   int		    randr,
	   void		    *closure);
d90 1
a90 1
shadowRemove (ScreenPtr pScreen, PixmapPtr pPixmap);
a92 1
shadowInit (ScreenPtr pScreen, ShadowUpdateProc update, ShadowWindowProc window);
d94 3
a96 2
extern _X_EXPORT void *
shadowAlloc (int width, int height, int bpp);
d99 1
a99 2
shadowUpdatePacked (ScreenPtr	    pScreen,
		    shadowBufPtr    pBuf);
d102 1
a102 2
shadowUpdatePlanar4 (ScreenPtr	    pScreen,
		     shadowBufPtr   pBuf);
d105 1
a105 2
shadowUpdatePlanar4x8 (ScreenPtr    pScreen,
		       shadowBufPtr pBuf);
d108 1
a108 2
shadowUpdateRotatePacked (ScreenPtr    pScreen,
			  shadowBufPtr pBuf);
d111 1
a111 2
shadowUpdateRotate8_90 (ScreenPtr    pScreen,
			shadowBufPtr pBuf);
d114 1
a114 2
shadowUpdateRotate16_90 (ScreenPtr    pScreen,
			 shadowBufPtr pBuf);
d117 1
a117 2
shadowUpdateRotate16_90YX (ScreenPtr    pScreen,
			   shadowBufPtr pBuf);
d120 1
a120 2
shadowUpdateRotate32_90 (ScreenPtr    pScreen,
			 shadowBufPtr pBuf);
d123 1
a123 2
shadowUpdateRotate8_180 (ScreenPtr    pScreen,
			 shadowBufPtr pBuf);
d126 1
a126 2
shadowUpdateRotate16_180 (ScreenPtr    pScreen,
			  shadowBufPtr pBuf);
d129 1
a129 2
shadowUpdateRotate32_180 (ScreenPtr    pScreen,
			  shadowBufPtr pBuf);
d132 1
a132 2
shadowUpdateRotate8_270 (ScreenPtr    pScreen,
			 shadowBufPtr pBuf);
d135 1
a135 2
shadowUpdateRotate16_270 (ScreenPtr    pScreen,
			  shadowBufPtr pBuf);
d138 1
a138 2
shadowUpdateRotate16_270YX (ScreenPtr    pScreen,
			    shadowBufPtr pBuf);
d141 1
a141 2
shadowUpdateRotate32_270 (ScreenPtr    pScreen,
			  shadowBufPtr pBuf);
d144 1
a144 2
shadowUpdateRotate8 (ScreenPtr    pScreen,
		     shadowBufPtr pBuf);
d147 1
a147 2
shadowUpdateRotate16 (ScreenPtr    pScreen,
		      shadowBufPtr pBuf);
d150 1
a150 2
shadowUpdateRotate32 (ScreenPtr    pScreen,
		      shadowBufPtr pBuf);
d152 1
a152 1
typedef void (* shadowUpdateProc)(ScreenPtr, shadowBufPtr);
d159 1
a159 1
#endif /* _SHADOW_H_ */
@


1.3
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@a28 1
#ifdef RENDER
a29 1
#endif
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d77 1
a77 1
extern DevPrivateKey shadowScrPrivateKey;
d84 1
a84 1
Bool
d87 1
a87 1
Bool
d95 1
a95 1
void
d98 1
a98 4
shadowBufPtr
shadowFindBuf (WindowPtr pWindow);

Bool
d101 1
a101 1
void *
d104 1
a104 1
void
d108 1
a108 1
void
d112 1
a112 1
void
d116 1
a116 1
void
d120 1
a120 1
void
d124 1
a124 1
void
d128 1
a128 1
void
d132 1
a132 1
void
d136 1
a136 1
void
d140 1
a140 1
void
d144 1
a144 1
void
d148 1
a148 1
void
d152 1
a152 1
void
d156 1
a156 1
void
d160 1
a160 1
void
d164 1
a164 1
void
d168 1
a168 1
void
d172 1
a172 1
void
d178 4
a181 4
shadowUpdateProc shadowUpdatePackedWeak(void);
shadowUpdateProc shadowUpdatePlanar4Weak(void);
shadowUpdateProc shadowUpdatePlanar4x8Weak(void);
shadowUpdateProc shadowUpdateRotatePackedWeak(void);
@


1.1
log
@Initial revision
@
text
@d77 1
a77 1
extern int shadowScrPrivateIndex;
d79 2
a80 1
#define shadowGetBuf(pScr)  ((shadowBufPtr) (pScr)->devPrivates[shadowScrPrivateIndex].ptr)
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
