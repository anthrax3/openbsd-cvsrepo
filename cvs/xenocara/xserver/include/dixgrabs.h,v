head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.4
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.8.0.4
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.2
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.6
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.1.1.1.0.6
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.4
	v1_4_0_90:1.1.1.1
	v1_4:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.2
	OPENBSD_4_2_BASE:1.1.1.1
	v1_2_0:1.1.1.1
	v1_1_99_903:1.1.1.1
	v1_1_99_902:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.09.16.19.10.25;	author matthieu;	state Exp;
branches;
next	1.8;
commitid	Te1daavkBLskZ8gc;

1.8
date	2014.09.27.17.53.04;	author matthieu;	state Exp;
branches;
next	1.7;
commitid	cVXoV5PxI8YrEaVA;

1.7
date	2013.09.28.15.36.35;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2012.06.10.13.21.30;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.05.13.32.57;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2010.07.27.19.02.36;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2009.09.06.19.44.36;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.02.15.26.31;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.26.18.16.20;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.26.18.16.20;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update to xserver 1.17.2. tested by dcoppa@@, jsg@@, jasper@@ & naddy@@
@
text
@/************************************************************

Copyright 1996 by Thomas E. Dickey <dickey@@clark.net>

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in
supporting documentation, and that the name of the above listed
copyright holder(s) not be used in advertising or publicity pertaining
to distribution of the software without specific, written prior
permission.

THE ABOVE LISTED COPYRIGHT HOLDER(S) DISCLAIM ALL WARRANTIES WITH REGARD
TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS, IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE
LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

********************************************************/

#ifndef DIXGRABS_H
#define DIXGRABS_H 1

struct _GrabParameters;

extern void PrintDeviceGrabInfo(DeviceIntPtr dev);
extern void UngrabAllDevices(Bool kill_client);

extern GrabPtr AllocGrab(const GrabPtr src);
extern void FreeGrab(GrabPtr grab);
extern Bool CopyGrab(GrabPtr dst, const GrabPtr src);

extern GrabPtr CreateGrab(int /* client */ ,
                          DeviceIntPtr /* device */ ,
                          DeviceIntPtr /* modDevice */ ,
                          WindowPtr /* window */ ,
                          enum InputLevel /* grabtype */ ,
                          GrabMask * /* mask */ ,
                          struct _GrabParameters * /* param */ ,
                          int /* type */ ,
                          KeyCode /* keybut */ ,
                          WindowPtr /* confineTo */ ,
                          CursorPtr /* cursor */ );

extern _X_EXPORT int DeletePassiveGrab(void *value,
                                       XID id);

extern _X_EXPORT Bool GrabMatchesSecond(GrabPtr /* pFirstGrab */ ,
                                        GrabPtr /* pSecondGrab */ ,
                                        Bool /*ignoreDevice */ );

extern _X_EXPORT int AddPassiveGrabToList(ClientPtr /* client */ ,
                                          GrabPtr /* pGrab */ );

extern _X_EXPORT Bool DeletePassiveGrabFromList(GrabPtr /* pMinuendGrab */ );

extern Bool GrabIsPointerGrab(GrabPtr grab);
extern Bool GrabIsKeyboardGrab(GrabPtr grab);
#endif                          /* DIXGRABS_H */
@


1.8
log
@Update to xserver 1.16.1.

Tested by naddy@@, jsg@@ & kettenis@@
@
text
@d50 2
a51 2
extern _X_EXPORT int DeletePassiveGrab(void */* value */ ,
                                       XID /* id */ );
@


1.7
log
@Update to xserver 1.14.3
@
text
@d50 1
a50 1
extern _X_EXPORT int DeletePassiveGrab(pointer /* value */ ,
@


1.6
log
@Update to xserver 1.12.2. tested by naddy@@, krw@@, mpi@@.
@
text
@d34 1
a34 1
extern GrabPtr AllocGrab(void);
@


1.5
log
@Update to xserver 1.11.2
@
text
@d34 3
a36 25
extern GrabPtr CreateGrab(
	int /* client */,
	DeviceIntPtr /* device */,
	DeviceIntPtr /* modDevice */,
	WindowPtr /* window */,
        GrabType /* grabtype */,
        GrabMask * /* mask */,
        struct _GrabParameters * /* param */,
	int /* type */,
	KeyCode /* keybut */,
        WindowPtr /* confineTo */,
        CursorPtr /* cursor */);

extern _X_EXPORT int DeletePassiveGrab(
	pointer /* value */,
	XID /* id */);

extern _X_EXPORT Bool GrabMatchesSecond(
	GrabPtr /* pFirstGrab */,
	GrabPtr /* pSecondGrab */,
	Bool /*ignoreDevice*/);

extern _X_EXPORT int AddPassiveGrabToList(
	ClientPtr /* client */,
	GrabPtr /* pGrab */);
d38 11
a48 2
extern _X_EXPORT Bool DeletePassiveGrabFromList(
	GrabPtr /* pMinuendGrab */);
d50 15
a64 1
#endif /* DIXGRABS_H */
@


1.4
log
@Update to xserver 1.8. Tested by many. Ok oga@@, todd@@.
@
text
@d31 3
@


1.3
log
@update to xserver 1.6.4rc1. Tested by many, ok oga@@.
@
text
@d29 2
d34 1
d36 3
a38 6
	Mask /* eventMask */,
	Bool /* ownerEvents */,
	Bool /* keyboardMode */,
	Bool /* pointerMode */,
	DeviceIntPtr /* modDevice */,
	unsigned short /* modifiers */,
d41 2
a42 2
	WindowPtr /* confineTo */,
	CursorPtr /* cursor */);
d44 1
a44 1
extern int DeletePassiveGrab(
d48 1
a48 1
extern Bool GrabMatchesSecond(
d53 1
a53 1
extern int AddPassiveGrabToList(
d57 1
a57 1
extern Bool DeletePassiveGrabFromList(
@


1.2
log
@xserver 1.5.2. tested by ckuethe@@, oga@@, and others.
@
text
@d50 2
a51 1
	GrabPtr /* pSecondGrab */);
@


1.1
log
@Initial revision
@
text
@d53 1
@


1.1.1.1
log
@Importing xserver from X.Org 7.2RC2
@
text
@@
