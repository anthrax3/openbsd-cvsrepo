head	1.40;
access;
symbols
	OPENBSD_6_1:1.39.0.2
	OPENBSD_6_1_BASE:1.39
	OPENBSD_6_0:1.36.0.4
	OPENBSD_6_0_BASE:1.36
	OPENBSD_5_9:1.36.0.2
	OPENBSD_5_9_BASE:1.36
	OPENBSD_5_8:1.34.0.8
	OPENBSD_5_8_BASE:1.34
	OPENBSD_5_7:1.34.0.6
	OPENBSD_5_7_BASE:1.34
	OPENBSD_5_6:1.34.0.4
	OPENBSD_5_6_BASE:1.34
	OPENBSD_5_5:1.34.0.2
	OPENBSD_5_5_BASE:1.34
	OPENBSD_5_4:1.33.0.2
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.31.0.2
	OPENBSD_5_3_BASE:1.31
	OPENBSD_5_2:1.29.0.2
	OPENBSD_5_2_BASE:1.29
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.2
	OPENBSD_5_0:1.26.0.10
	OPENBSD_5_0_BASE:1.26
	OPENBSD_4_9:1.26.0.6
	OPENBSD_4_9_BASE:1.26
	OPENBSD_4_8:1.26.0.8
	OPENBSD_4_8_BASE:1.26
	OPENBSD_4_7:1.26.0.4
	OPENBSD_4_7_BASE:1.26
	OPENBSD_4_6:1.26.0.2
	OPENBSD_4_6_BASE:1.26
	OPENBSD_4_5:1.25.0.2
	OPENBSD_4_5_BASE:1.25
	OPENBSD_4_4:1.22.0.2
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_3:1.21.0.2
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20;
locks; strict;
comment	@# @;


1.40
date	2017.08.19.09.12.13;	author matthieu;	state Exp;
branches;
next	1.39;
commitid	8g00rwiaB9ls3IEc;

1.39
date	2017.02.24.03.07.03;	author jsg;	state Exp;
branches;
next	1.38;
commitid	64QTvhn4Ui437dDx;

1.38
date	2017.02.12.18.19.54;	author matthieu;	state Exp;
branches;
next	1.37;
commitid	scwWtfiEx8FezLCl;

1.37
date	2016.10.14.18.29.18;	author matthieu;	state Exp;
branches;
next	1.36;
commitid	AAgklQfR9YGBxeRR;

1.36
date	2016.01.18.18.01.37;	author matthieu;	state Exp;
branches;
next	1.35;
commitid	XbRn4U9XPM252dAG;

1.35
date	2015.12.23.14.28.32;	author jsg;	state Exp;
branches;
next	1.34;
commitid	KltlB6rcn6K1Cm6o;

1.34
date	2013.09.07.02.18.32;	author jsg;	state Exp;
branches;
next	1.33;

1.33
date	2013.05.14.07.55.46;	author ajacoutot;	state Exp;
branches;
next	1.32;

1.32
date	2013.04.14.10.23.04;	author mpi;	state Exp;
branches;
next	1.31;

1.31
date	2012.08.05.18.08.05;	author matthieu;	state Exp;
branches;
next	1.30;

1.30
date	2012.08.04.17.10.01;	author matthieu;	state Exp;
branches;
next	1.29;

1.29
date	2012.07.23.05.50.37;	author matthieu;	state Exp;
branches;
next	1.28;

1.28
date	2012.01.28.21.04.42;	author matthieu;	state Exp;
branches;
next	1.27;

1.27
date	2011.10.08.13.51.04;	author matthieu;	state Exp;
branches;
next	1.26;

1.26
date	2009.05.02.13.51.29;	author matthieu;	state Exp;
branches;
next	1.25;

1.25
date	2008.10.10.05.32.58;	author matthieu;	state Exp;
branches;
next	1.24;

1.24
date	2008.10.05.08.10.05;	author matthieu;	state Exp;
branches;
next	1.23;

1.23
date	2008.10.05.08.08.33;	author matthieu;	state Exp;
branches;
next	1.22;

1.22
date	2008.03.13.20.34.19;	author matthieu;	state Exp;
branches;
next	1.21;

1.21
date	2008.03.03.07.01.44;	author matthieu;	state Exp;
branches;
next	1.20;

1.20
date	2007.07.14.11.20.10;	author jolan;	state Exp;
branches;
next	1.19;

1.19
date	2007.06.01.00.19.52;	author matthieu;	state Exp;
branches;
next	1.18;

1.18
date	2007.04.23.08.52.58;	author ajacoutot;	state Exp;
branches;
next	1.17;

1.17
date	2007.04.09.18.58.23;	author matthieu;	state Exp;
branches;
next	1.16;

1.16
date	2007.04.07.16.07.41;	author matthieu;	state Exp;
branches;
next	1.15;

1.15
date	2007.04.07.13.35.06;	author matthieu;	state Exp;
branches;
next	1.14;

1.14
date	2007.04.07.13.21.12;	author matthieu;	state Exp;
branches;
next	1.13;

1.13
date	2007.04.07.13.18.40;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2007.04.07.11.02.37;	author jsg;	state Exp;
branches;
next	1.11;

1.11
date	2007.04.04.22.27.53;	author david;	state Exp;
branches;
next	1.10;

1.10
date	2007.04.01.21.24.57;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2007.04.01.19.04.58;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2007.03.31.20.25.53;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2007.01.04.20.56.55;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2006.12.29.18.34.58;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2006.12.12.21.07.25;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2006.12.02.16.28.48;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.30.17.58.48;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.29.22.25.07;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.29.18.55.38;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.40
log
@xdm -> xenodm. From Kemmens Nanni. Thanks.
@
text
@
	Notes on building Xenocara for OpenBSD X hackers

This document presents some techniques that can be useful for people
wanting to hack the xenocara tree. It assumes some basic knowledge of
the OpenBSD build system, as described in the release(8) manual page.

o About Xenocara
  --------------
Xenocara is the name chosen for OpenBSD's version of X. It's
currently based on X.Org 7.7 and its dependencies. The goal of
Xenocara is to provide a framework to host local modifications and to
automate the build of the modular X.Org components, including 3rd
party packages and some software maintained by OpenBSD developers.

o Source tree
  -----------

The organisation of the xenocara directory follows the general
organisation used in X.Org:

- app:	     X applications and utilities
- data:	     various data files (keyboard mappings and bitmaps)
- doc:	     documentation
- driver:    input and video drivers
- font:	     fonts
- lib:	     libraries
- proto:     X protocol headers
- util:	     utilities that don't fit anywhere else
- xserver:   the source for the X servers

In addition Xenocara uses the following directories:

- dist:	    contains some of the 3rd party sources, when keeping them
  	    separate helps the build system (fontconfig, xcb and
            xkeyboard-config)
- distrib:  all binary distribution related tools and data
- etc:	    some default config files
- share:    make(1) configuration for Xenocara

At the top-level directory two files describe the individual
components of Xenocara:

- MODULES  lists all X.Org components (imported from the X.Org
	   distribution at http://xorg.freedesktop.org/archive/)
- 3RDPARTY lists all 3rd party software components provided in Xenocara,
	   either as dependencies of the X.Org software, or as
	   complements to it to provide a more useable default
	   environment.

o Compiling and installing
  ------------------------

Xenocara is made up of almost three hundred different independent
packages that need to be built and installed in the right order,
especially while bootstrapping (while /usr/X11R6 is still empty). The
Xenocara Makefiles take care of that using the 'build' target.

  Quick startup guide

The following steps will build and install everything for the first time.

 cd /usr/xenocara
 doas make bootstrap
 make obj
 doas make build

If you want to use another obj directory see below.

  Requirements

A freshly checked out xenocara tree is buildable without any external
tool. Only the xenocara and the src (currently only the
src/sys/dev/pci/pcidevs file) trees are needed.

However if you start modifying things in the automake build
system used by many packages, you will need to have the following
GNU autotools packages installed:

    - automake 1.12 (devel/automake/1.12)
    - autoconf 2.69 (devel/autoconf/2.69)
    - metaauto 0.9 (or later) (devel/metaauto)
    - libtool 2.4.2 (or later) (devel/libtool)

If you have your source tree on an NFS partition, make sure the clock
of your server and client are properly synchronised. Any significant
drift will cause various problems during builds.

  Path

To build Xenocara, you need to have /usr/X11R6/bin in your PATH.

If you have installed the full Xenocara X sets on your system, you
don't need to build all of Xenocara to patch one element. You can go
to any module sub-directory and run 'make build' from there.

  Source directory

The variable XSRCDIR can be set either in the environment or in
/etc/mk.conf to point to the xenocara source tree, in case you keep it
in a non-standard directory (the default is /usr/xenocara).

  Objdirs

Xenocara supports objdirs (and it's even the recommended way to build
things). Just run 'make obj' at any level before 'make build' to make
sure that the object directories are created.
XOBJDIR defines the obj directory that is used (defaults to /usr/xobj).
It should be created before running 'make obj'.

o Regenerating configure scripts
  ------------------------------

Whenever you touched an import file for GNU autotools (Makefile.am,
configure.ac mostly), you need to rebuild the configure script and
makefiles skeletons. For that use the following command in the
directory where you edited the autotools source files:

 make -f Makefile.bsd-wrapper autoreconf
 doas make -f Makefile.bsd-wrapper build

o Cleaning in packages managed by autotools
  -----------------------------------------

One common problem when building xenocara is the case where the obj
directory didn't exist (or the symbolic link pointed to a non-existent
directory) when the source was first built. After fixing this problem,
'configure' will refuse to work in the obj dir, because the source
is already configured.

To recover from this in one package:

 rm -f obj
 make -f Makefile.bsd-wrapper cleandir
 mkdir XOBJDIR
 make -f Makefile.bsd-wrapper obj
 doas make -f Makefile.bsd-wrapper build

or from the root of the xenocara tree:

 find . -type l -name obj | xargs rm -f
 make cleandir
 mkdir XOBJDIR
 make obj
 doas make build

for more desperate cases, remove all files from XSRCDIR not in CVS:

 cd XSRCDIR
 cvs -q update -PAd -I - | awk '$1=="?" {print $2}' | xargs rm -f

o How to build something with debug information?
  ----------------------------------------------

You can use "env CFLAGS=-g make -f Makefile.bsd-wrapper build" to
build any module with debugging information, but you'll need to remove
XOBJDIR/xorg-config.cache.${MACHINE} before doing that because
autoconf caches the value of CFLAGS in its cache.

o How to get a core file out of the X server?
  -------------------------------------------

Several things are needed:

1) set kern.nosuidcoredump=2 in /etc/sysctl.conf
2) put

        Option  "NoTrapSignals" "true"

   in the "ServerFlags" section of /etc/X11/xorg.conf. If such a section
   doesn't exist, it can be added as follow:

   Section "ServerFlags"
        Option  "NoTrapSignals" "true"
   EndSection

   anywhere in the configuration file.

3) start the X server as root, with the -keepPriv option. A regular
   user is not allowed to use this option. If you use xenodm, you can
   add the option in /etc/X11/xenodm/Xservers. If you want to use
   startx, you need to run it as root, like this:

   startx -- /usr/X11R6/bin/X -keepPriv

Now the X server will dump core when catching a fatal signal. But it
will also not be able to restore the text mode on exit. So be prepared
to log in remotely (serial terminal or ssh) to reboot your machine or
to restart X.

The core dump will be in /var/crash.

See also <http://xorg.freedesktop.org/wiki/Development/Documentation/ServerDebugging>

-- 
$OpenBSD: README,v 1.39 2017/02/24 03:07:03 jsg Exp $
@


1.39
log
@correct autoreconf line
ok matthieu@@
@
text
@d180 3
a182 3
   user is not allowed to use this option. If you use xdm, you can add
   the option in /etc/X11/xdm/Xservers. If you want to use startx, you
   need to run it as root, like this:
d196 1
a196 1
$OpenBSD: README,v 1.38 2017/02/12 18:19:54 matthieu Exp $
@


1.38
log
@replace XENOCARA_RERUN_AUTOCONF setting with autoreconf make target.

The previous mechanism didn't play well with the new separated build
user.
@
text
@d119 1
a119 1
 make autoreconf
d196 1
a196 1
$OpenBSD: README,v 1.37 2016/10/14 18:29:18 matthieu Exp $
@


1.37
log
@Update build instructions
@
text
@d119 2
a120 5
 doas env XENOCARA_RERUN_AUTOCONF=Yes make -f Makefile.bsd-wrapper build

You can also set XENOCARA_RERUN_AUTOCONF in /etc/mk.conf or in the
environment to force the regeneration of configure scripts
in every component during a make build.
d196 1
a196 1
$OpenBSD: README,v 1.36 2016/01/18 18:01:37 matthieu Exp $
@


1.36
log
@Assorted updates to match current reality.
@
text
@d63 2
a64 2
 cd xenocara
 make bootstrap
d66 1
a66 1
 make build
a92 7
  Sudo/doas

If the SUDO variable in /etc/mk.conf points to your sudo(8) or doas(8)
binary, 'make build' can be run as a normal user. It will raise its
privileges whenever needed. Otherwise, you need to run make build as
root.

d119 1
a119 1
 env XENOCARA_RERUN_AUTOCONF=Yes make -f Makefile.bsd-wrapper build
d140 1
a140 1
 make -f Makefile.bsd-wrapper build
d148 1
a148 1
 make build
d199 1
a199 1
$OpenBSD: README,v 1.35 2015/12/23 14:28:32 jsg Exp $
@


1.35
log
@Remove the llvm section, the ports llvm is too outdated for Mesa now.
The version of g++ in base can't handle the headers of recent llvm
either and the common xenocara makefiles will need a way to optionally
look for llvm/libelf in /usr/local if XENOCARA_BUILD_GALLIUM == "llvm"
@
text
@d35 2
a36 1
  	    separate helps the build system (Mesa and xkeyboard-config)
d38 1
a38 1
- etc:	    mtree(8) data files
d93 1
a93 1
  Sudo
d95 3
a97 3
If the SUDO variable points to your sudo(8) binary in /etc/mk.conf,
'make build' can be run as a normal user. It will raise its privileges
whenever needed with sudo. Otherwise, you need to run make build as
d206 1
a206 1
$OpenBSD: README,v 1.34 2013/09/07 02:18:32 jsg Exp $
@


1.34
log
@update the note on using Mesa with LLVM
ok mpi@@ ajacoutot@@
@
text
@a130 19
o Building Gallium3D with LLVM support
  --------------------------------------

When building Mesa with LLVM support instead of the 'classic'
software rasteriser the Gallium3D LLVMpipe rasteriser will be used.

The radeonsi driver for Southern Islands and newer AMD Radeon parts
is only built when Gallium is compiled with LLVM support as it requires
the R600 LLVM target.

You will need to have the llvm and libelf packages installed and use the following
command in the libGL build directory:

 env XENOCARA_BUILD_GALLIUM=llvm make obj
 env XENOCARA_BUILD_GALLIUM=llvm make build

Alternatively, you can also set XENOCARA_BUILD_GALLIUM in /etc/mk.conf
or in your environment.

d205 1
a205 1
$OpenBSD: README,v 1.33 2013/05/14 07:55:46 ajacoutot Exp $
@


1.33
log
@Create the obj dir when building the gallium driver.

ok matthieu@@
@
text
@d131 1
a131 1
o Building Gallium3D rasterizer for Mesa
d134 9
a142 12
The Gallium3D software rasterizer can be built to be used as an
alternative to the default Mesa software rasterizer. For that, use
the following command in the libGL build directory (the default is 
/usr/xenocara/lib/libGL):

 env XENOCARA_BUILD_GALLIUM=Yes make obj
 env XENOCARA_BUILD_GALLIUM=Yes make build

This software rasertizer can also benefit from the LLVM infrastructure
and use a special pipe if it is built with LLVM support. You will need
to have the llvm package installed and use the following command in the
libGL build directory:
d224 1
a224 1
$OpenBSD: README,v 1.32 2013/04/14 10:23:04 mpi Exp $
@


1.32
log
@Add a new option to the xenocara infrastructure be able to automatically
build the Gallium3D software rasterizer as part of the libGL.

Note that it can also makes use of LLVM to build the llvmpipe if the
corresponding port is installed. Please refer to the README for a more
complete documentation.

Prodded by ajacoutot@@, ok matthieu@@
@
text
@d139 1
d147 1
d227 1
a227 1
$OpenBSD: README,v 1.31 2012/08/05 18:08:05 matthieu Exp $
@


1.31
log
@Automake 1.12 now uses autoconf 2.69.
@
text
@d131 20
d225 1
a225 1
$OpenBSD: README,v 1.30 2012/08/04 17:10:01 matthieu Exp $
@


1.30
log
@Switch to automake 1.12/autoconf 2.68.

Note that I don't plan to regenerate all the autotools files now.
It's a lazy update that will only take effect when autotools files
are re-generated, upon updates or for another reason.
@
text
@d79 2
a80 2
    - automake 1.12 (devel/automake/1.11)
    - autoconf 2.68 (devel/autoconf/2.68)
d205 1
a205 1
$OpenBSD: README,v 1.29 2012/07/23 05:50:37 matthieu Exp $
@


1.29
log
@X.Org 7.7.
@
text
@d79 3
a81 3
    - automake 1.9 (devel/automake/1.9)
    - autoconf 2.62 (devel/autoconf/2.62)
    - metaauto 0.6 (or later) (devel/metaauto)
d205 1
a205 1
$OpenBSD: README,v 1.28 2012/01/28 21:04:42 matthieu Exp $
@


1.28
log
@Small updates on directory descriptions.
@
text
@d11 1
a11 1
currently based on X.Org 7.6 and its dependencies. The goal of
d205 1
a205 1
$OpenBSD: README,v 1.27 2011/10/08 13:51:04 matthieu Exp $
@


1.27
log
@Remove paragraph about building using shadow link tree. It's not
supported anymore.
@
text
@d34 2
a35 1
- dist:	    contains the Mesa sources, shared by lib and xserver above
d82 1
a82 1
    - libtool 1.5.22 (or later) (devel/libtool)
d205 1
a205 1
$OpenBSD: README,v 1.26 2009/05/02 13:51:29 matthieu Exp $
@


1.26
log
@switch to autoconf 2.62 to generate xenocara configure scripts.
@
text
@d11 1
a11 1
currently based on X.Org 7.3 and its dependencies. The goal of
a115 6
  Shadow trees

Alternatively, the old 'lndir(1)' method can still be used to build
Xenocara outside of its source tree. Just don't use 'make obj' in this
case.

d204 1
a204 1
$OpenBSD: README,v 1.25 2008/10/10 05:32:58 matthieu Exp $
@


1.25
log
@The number of Xenocara packages has shrunk under 300.
@
text
@d79 1
a79 1
    - autoconf 2.59 (devel/autoconf/2.59)
d210 1
a210 1
$OpenBSD: README,v 1.24 2008/10/05 08:10:05 matthieu Exp $
@


1.24
log
@strip white space at end of lines.
@
text
@d52 4
a55 5
Xenocara is made up of more than three hundred different
independent packages that need to be built and installed in the right
order, especially while bootstrapping (while /usr/X11R6 is still
empty). The Xenocara Makefiles take care of that using the 'build'
target.
d210 1
a210 1
$OpenBSD: README,v 1.23 2008/10/05 08:08:33 matthieu Exp $
@


1.23
log
@- rework the blurb about NFS clock synchronisation; the configure
  test was removed by todd@@ some time ago.
- document the need for src/sys/dev/pci/pcidevs in the build process.
@
text
@d30 1
a30 1
- xserver:   the source for the X servers 
d73 1
a73 1
src/sys/dev/pci/pcidevs file) trees are needed. 
d90 1
a90 1
To build Xenocara, you need to have /usr/X11R6/bin in your PATH. 
d101 1
a101 1
to any module sub-directory and run 'make build' from there. 
d113 2
a114 2
sure that the object directories are created. 
XOBJDIR defines the obj directory that is used (defaults to /usr/xobj). 
d117 1
a117 1
  Shadow trees 
d121 1
a121 1
case. 
d128 1
a128 1
makefiles skeletons. For that use the following command in the 
d133 2
a134 2
You can also set XENOCARA_RERUN_AUTOCONF in /etc/mk.conf or in the 
environment to force the regeneration of configure scripts 
d142 3
a144 3
directory) when the source was first built. After fixing this problem, 
'configure' will refuse to work in the obj dir, because the source 
is already configured. 
d156 1
a156 1
 find . -type l -name obj | xargs rm -f 
d181 1
a181 1
2) put 
d185 1
a185 1
   in the "ServerFlags" section of /etc/X11/xorg.conf. If such a section 
d192 1
a192 1
   anywhere in the configuration file. 
d211 1
a211 1
$OpenBSD: README,v 1.22 2008/03/13 20:34:19 matthieu Exp $
@


1.22
log
@Xenocara currently is X.Org 7.3. Noticed by david@@ who disapeared after
I told him to commit that.
@
text
@d72 4
a75 1
tool. However if you start modifying things in the automake build
d85 2
a86 3
of your server and client are properly synchronised. A test run by
configure will fail if the drift is more than one second. And larger 
drifts will cause other problems during builds anyways. 
d211 1
a211 1
$OpenBSD: README,v 1.21 2008/03/03 07:01:44 matthieu Exp $
@


1.21
log
@Change the default for XSRCDIR to /usr/xenocara. ok deraadt@@
@
text
@d11 1
a11 1
currently based on X.Org 7.2 and its dependencies. The goal of
d209 1
a209 1
$OpenBSD: README,v 1.20 2007/07/14 11:20:10 jolan Exp $
@


1.20
log
@typo; from peter ericson
@
text
@d105 1
a105 1
in a non-standard directory (the default is /usr/src/xenocara).
d209 1
a209 1
$OpenBSD: README,v 1.19 2007/06/01 00:19:52 matthieu Exp $
@


1.19
log
@Add information on debugging, mostly copied from XF4/README.
@
text
@d53 1
a53 1
independent packages that need to be build and installed in the right
d209 1
a209 1
$OpenBSD: README,v 1.18 2007/04/23 08:52:58 ajacoutot Exp $
@


1.18
log
@- /usr/xobj is now part of the system

"why not" mblamer@@, ok krw@@ todd@@
@
text
@d165 43
d209 1
a209 1
$OpenBSD: README,v 1.17 2007/04/09 18:58:23 matthieu Exp $
@


1.17
log
@Note the requirement for time synchronisation for NFS.
@
text
@a61 1
 mkdir -p /usr/xobj
d166 1
a166 1
$OpenBSD: README,v 1.16 2007/04/07 16:07:41 matthieu Exp $
@


1.16
log
@typos. Reported by Ingo Schwarze. Thanks.
@
text
@d82 5
d167 1
a167 1
$OpenBSD: README,v 1.15 2007/04/07 13:35:06 matthieu Exp $
@


1.15
log
@Some developers need clues to unfuck their trees.
@
text
@d136 1
a136 1
directort) when the source was first build. After fixing this problem, 
d156 1
a156 1
for more desesperate cases, remove all files from XSRCDIR not in CVS:
d162 1
a162 1
$OpenBSD: README,v 1.14 2007/04/07 13:21:12 matthieu Exp $
@


1.14
log
@More details for people wanting to regenerate configure scripts.
Prodded by mbalmer@@.
@
text
@d131 32
a162 1
$OpenBSD: README,v 1.13 2007/04/07 13:18:40 matthieu Exp $
@


1.13
log
@Note that XOBJDIR needs to exist before running make obj.
@
text
@d122 2
a123 1
makefiles skeletons. For that use the following command:
d127 3
a129 2
You can also set XENOCARA_RERUN_AUTOCONF in /etc/mk.conf to force
regeneration of configure scripts in every component.
d131 1
a131 1
$OpenBSD: README,v 1.12 2007/04/07 11:02:37 jsg Exp $
@


1.12
log
@Correct the path of the default object directory.
ok todd@@
@
text
@d108 2
a109 1
XOBJDIR defines the default obj directory that is used.
d129 1
a129 1
$OpenBSD: README,v 1.11 2007/04/04 22:27:53 david Exp $
@


1.11
log
@fix typos; ok matthieu@@
@
text
@d62 1
a62 1
 mkdir -p /usr/obj/xenocara
d128 1
a128 1
$OpenBSD: README,v 1.10 2007/04/01 21:24:57 matthieu Exp $
@


1.10
log
@XSRCDIR default is now /usr/src/xenocara. From Charles Longeau.
@
text
@d10 1
a10 1
Xenocara is the name choosen for OpenBSD's version of X. It's
d14 1
a14 1
party packages and some software maintained by OpenBSD developpers.
d128 1
a128 1
$OpenBSD: README,v 1.9 2007/04/01 19:04:58 matthieu Exp $
@


1.9
log
@Typo reported by Charles Longeau. Thanks.
@
text
@d101 1
a101 1
in a non-standard directory (the default is /usr/xenocara).
d128 1
a128 1
$OpenBSD: README,v 1.8 2007/03/31 20:25:53 matthieu Exp $
@


1.8
log
@XENOCARA_TOP -> XSRCDIR and now defaults to /usr/src/xenocara
XENOCARA_OBJDIR -> XOBJDIR  and now defaults to /usr/xobj
suggested by espie@@ ok krw@@ mbalmer@@
@
text
@d100 1
a100 1
/etc/mk.cof to point to the xenocara source tree, in case you keep it
d128 1
a128 1
$OpenBSD: README,v 1.7 2007/01/04 20:56:55 matthieu Exp $
@


1.7
log
@Typo. Noticed by raga at comcast.net. Thanks.
@
text
@d82 4
d97 6
d108 1
a108 1
XENOCARA_OBJDIR defines the default obj directory that is used.
d128 1
a128 1
$OpenBSD: README,v 1.6 2006/12/29 18:34:58 matthieu Exp $
@


1.6
log
@pkg-config is gone. Noticed by Janne Johansson.
@
text
@d63 1
a63 1
 cd xenorara
d118 1
a118 1
$OpenBSD: README,v 1.5 2006/12/12 21:07:25 matthieu Exp $
@


1.5
log
@Document 1st build. Suggested by dim@@
@
text
@d79 1
a79 1
    - pkg-config 0.19 (or later) (devel/pkgconfig)
d118 1
a118 1
$OpenBSD: README,v 1.4 2006/12/02 16:28:48 matthieu Exp $
@


1.4
log
@Make 'obj' now can make symlinks to /usr/obj/xenocara (or any other
directory designed by XENOCARA_OBJDIR in /etc/mk.conf).
@
text
@d58 12
d98 1
d118 1
a118 1
$OpenBSD: README,v 1.3 2006/11/30 17:58:48 matthieu Exp $
@


1.3
log
@typos and tweaks from bernd@@ and todd@@.
@
text
@d85 1
a85 3
sure the object directory is created. 

XXX support for objdirs needs to be improved! XXX
d105 1
a105 1
$OpenBSD: README,v 1.2 2006/11/29 22:25:07 matthieu Exp $
@


1.2
log
@more information.
@
text
@d37 1
a37 1
- share:    make(1) configuration for xenocara
d40 1
a40 1
components of xenocara:
d44 1
a44 1
- 3RDPARTY lists all 3rd party software components provided in Xenora,
d52 4
a55 4
Xenocara is made of more than three hundred of different
independant packages that need to be build and installed in the right
order, especially while bootstraping (while /usr/X11R6 is still
empty). The xenocara Makefiles take care of that using the 'build'
d63 1
a63 1
GNU autools packages installed:
d77 2
a78 2
If you have installed the full xenocara X sets on your system, you
don't need to build all of xenocara to patch one element. You can go
d87 1
a87 1
XXX support for objdirs need to be improved! XXX
d92 1
a92 1
xenocara outside of its source tree. Just don't use 'make obj' in this
d107 1
a107 1
$OpenBSD$@


1.1
log
@Xenocara user guide.
@
text
@d39 2
d42 66
@

