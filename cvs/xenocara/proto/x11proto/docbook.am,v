head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.20
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.16
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.14
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.12
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.2;
locks; strict;
comment	@# @;


1.2
date	2012.03.27.19.16.21;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2011.08.20.17.40.02;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.2
log
@update to xproto 7.0.23. Tested by krw@@, mpi@@, shadchin@@
@
text
@#
# Generate output formats for a single DocBook/XML with/without chapters
#
# Variables set by the calling Makefile:
# shelfdir: the location where the docs/specs are installed. Typically $(docdir)
# docbook:  the main DocBook/XML file, no chapters, appendix or image files
# chapters: all files pulled in by an XInclude statement and images.
#

#
# This makefile is intended for Users Documentation and Functional Specifications.
# Do not use for Developer Documentation which is not installed and does not require olink.
# Refer to http://www.x.org/releases/X11R7.6/doc/xorg-docs/ReleaseNotes.html#id2584393
# for an explanation on documents classification.
#

# DocBook/XML generated output formats to be installed
shelf_DATA =

# DocBook/XML file with chapters, appendix and images it includes
dist_shelf_DATA = $(docbook) $(chapters)

if HAVE_XMLTO
if HAVE_STYLESHEETS

XMLTO_SEARCHPATH_FLAGS = 				\
	--searchpath "$(XORG_SGML_PATH)/X11" 		\
	--searchpath "$(abs_top_builddir)"
XMLTO_HTML_OLINK_FLAGS = \
	--stringparam target.database.document=$(XORG_SGML_PATH)/X11/dbs/masterdb.html.xml \
	--stringparam current.docid="$(<:.xml=)"
XMLTO_HTML_STYLESHEET_FLAGS = -x $(STYLESHEET_SRCDIR)/xorg-xhtml.xsl
XMLTO_HTML_FLAGS = 					\
	$(XMLTO_SEARCHPATH_FLAGS)			\
	$(XMLTO_HTML_STYLESHEET_FLAGS)			\
	$(XMLTO_HTML_OLINK_FLAGS)

shelf_DATA += $(docbook:.xml=.html)
%.html: %.xml $(chapters)
	$(AM_V_GEN)$(XMLTO) $(XMLTO_HTML_FLAGS) xhtml-nochunks $<

if HAVE_XMLTO_TEXT

shelf_DATA += $(docbook:.xml=.txt)
%.txt: %.xml $(chapters)
	$(AM_V_GEN)$(XMLTO) $(XMLTO_HTML_FLAGS) txt $<
endif HAVE_XMLTO_TEXT

if HAVE_FOP
XMLTO_FO_IMAGEPATH_FLAGS = --stringparam img.src.path=$(abs_builddir)/
XMLTO_PDF_OLINK_FLAGS = \
	--stringparam target.database.document=$(XORG_SGML_PATH)/X11/dbs/masterdb.pdf.xml \
	--stringparam current.docid="$(<:.xml=)"
XMLTO_FO_STYLESHEET_FLAGS = -x $(STYLESHEET_SRCDIR)/xorg-fo.xsl

XMLTO_FO_FLAGS = 					\
	$(XMLTO_SEARCHPATH_FLAGS)			\
	$(XMLTO_FO_STYLESHEET_FLAGS)			\
	$(XMLTO_FO_IMAGEPATH_FLAGS)			\
	$(XMLTO_PDF_OLINK_FLAGS)

shelf_DATA += $(docbook:.xml=.pdf)
%.pdf: %.xml $(chapters)
	$(AM_V_GEN)$(XMLTO) $(XMLTO_FO_FLAGS) --with-fop pdf $<

shelf_DATA += $(docbook:.xml=.ps)
%.ps: %.xml $(chapters)
	$(AM_V_GEN)$(XMLTO) $(XMLTO_FO_FLAGS) --with-fop ps $<
endif HAVE_FOP

# Generate documents cross-reference target databases
if HAVE_XSLTPROC

XSLT_SEARCHPATH_FLAGS = 				\
	--path "$(XORG_SGML_PATH)/X11"			\
	--path "$(abs_top_builddir)"
XSLT_OLINK_FLAGS = 					\
	--stringparam targets.filename "$@@" 		\
	--stringparam collect.xref.targets "only" 	\
	--stringparam olink.base.uri "$(@@:.db=)"

XSLT_HTML_FLAGS =					\
	$(XSLT_SEARCHPATH_FLAGS) 			\
	$(XSLT_OLINK_FLAGS)				\
	--nonet --xinclude				\
	$(STYLESHEET_SRCDIR)/xorg-xhtml.xsl
XSLT_PDF_FLAGS = 					\
	$(XSLT_SEARCHPATH_FLAGS) 			\
	$(XSLT_OLINK_FLAGS)				\
	--nonet --xinclude				\
	$(STYLESHEET_SRCDIR)/xorg-fo.xsl

shelf_DATA += $(docbook:.xml=.html.db)
%.html.db: %.xml  $(chapters)
	$(AM_V_GEN)$(XSLTPROC) $(XSLT_HTML_FLAGS) $<

shelf_DATA += $(docbook:.xml=.pdf.db)
%.pdf.db: %.xml $(chapters)
	$(AM_V_GEN)$(XSLTPROC) $(XSLT_PDF_FLAGS) $<

endif HAVE_XSLTPROC
endif HAVE_STYLESHEETS
endif HAVE_XMLTO

CLEANFILES = $(shelf_DATA)
@


1.1
log
@Update to x11proto 7.0.22.
@
text
@a23 5
#
# Generate DocBook/XML output formats with or without stylesheets
#

# Stylesheets are available if the package xorg-sgml-doctools is installed
d26 11
a36 16
# The location where all cross reference databases are installed
sgmldbsdir = $(XORG_SGML_PATH)/X11/dbs
masterdb = "$(sgmldbsdir)/masterdb$(suffix $@@).xml"
XMLTO_FLAGS =							\
	--searchpath "$(XORG_SGML_PATH)/X11"			\
	--stringparam target.database.document=$(masterdb)	\
	--stringparam current.docid="$(<:.xml=)"		\
	--stringparam collect.xref.targets="no"

XMLTO_XHTML_FLAGS = \
	-x $(STYLESHEET_SRCDIR)/xorg-xhtml.xsl \
	--stringparam html.stylesheet=$(STYLESHEET_SRCDIR)/xorg.css

XMLTO_FO_FLAGS = \
	-x $(STYLESHEET_SRCDIR)/xorg-fo.xsl
endif HAVE_STYLESHEETS
d39 9
a47 2
%.html: %.xml  $(chapters)
	$(AM_V_GEN)$(XMLTO) $(XMLTO_FLAGS) $(XMLTO_XHTML_FLAGS) xhtml-nochunks $<
d50 13
a62 1
shelf_DATA += $(docbook:.xml=.pdf) $(docbook:.xml=.ps)
d64 3
a66 1
	$(AM_V_GEN)$(XMLTO) $(XMLTO_FLAGS) $(XMLTO_FO_FLAGS) --with-fop pdf $<
d68 1
a68 1
	$(AM_V_GEN)$(XMLTO) $(XMLTO_FLAGS) $(XMLTO_FO_FLAGS) --with-fop ps $<
a70 7
if HAVE_XMLTO_TEXT
shelf_DATA += $(docbook:.xml=.txt)
%.txt: %.xml $(chapters)
	$(AM_V_GEN)$(XMLTO) $(XMLTO_FLAGS) $(XMLTO_XHTML_FLAGS) txt $<
endif HAVE_XMLTO_TEXT

#
a71 4
#

# This is only possible if the xorg-sgml-doctools package is installed
if HAVE_STYLESHEETS
d74 1
a74 6
# DocBook/XML generated document cross-reference database
shelf_DATA += $(docbook:.xml=.html.db) $(docbook:.xml=.fo.db)

# Generate DocBook/XML document cross-reference database
# Flags for the XSL Transformation processor generating xref target databases
XSLTPROC_FLAGS =					\
d76 16
a91 3
	--stringparam targets.filename "$@@"		\
	--stringparam collect.xref.targets "only"	\
	--nonet --xinclude
d93 1
d95 1
a95 2
	$(AM_V_GEN)$(XSLTPROC) $(XSLTPROC_FLAGS) \
	http://docbook.sourceforge.net/release/xsl/current/xhtml/docbook.xsl $<
d97 3
a99 3
%.fo.db: %.xml $(chapters)
	$(AM_V_GEN)$(XSLTPROC) $(XSLTPROC_FLAGS) \
	http://docbook.sourceforge.net/release/xsl/current/fo/docbook.xsl $<
@

