head	1.18;
access;
symbols
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.2
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.13.0.2
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.4
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.2
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.2
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.2
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	v7_0_10:1.1.1.3
	v7_0_9:1.1.1.2
	v7_0_5:1.1.1.1
	xorg:1.1.1;
locks; strict;
comment	@# @;


1.18
date	2016.11.02.17.50.12;	author matthieu;	state Exp;
branches;
next	1.17;
commitid	GeVTpP175qVpHIAD;

1.17
date	2016.08.06.10.58.40;	author matthieu;	state Exp;
branches;
next	1.16;
commitid	wItDa5Nc6fbw7oTd;

1.16
date	2016.01.03.10.32.58;	author matthieu;	state Exp;
branches;
next	1.15;
commitid	rI7bBQOqdC6voufy;

1.15
date	2015.01.04.16.18.32;	author matthieu;	state Exp;
branches;
next	1.14;
commitid	2ZNyI19jCb98g8aR;

1.14
date	2014.04.27.14.46.24;	author matthieu;	state Exp;
branches;
next	1.13;

1.13
date	2014.01.04.15.52.07;	author matthieu;	state Exp;
branches;
next	1.12;

1.12
date	2013.04.28.16.53.26;	author matthieu;	state Exp;
branches;
next	1.11;

1.11
date	2012.03.27.19.16.21;	author matthieu;	state Exp;
branches;
next	1.10;

1.10
date	2011.08.20.17.40.02;	author matthieu;	state Exp;
branches;
next	1.9;

1.9
date	2011.04.21.05.24.10;	author matthieu;	state Exp;
branches;
next	1.8;

1.8
date	2011.01.04.20.45.57;	author matthieu;	state Exp;
branches;
next	1.7;

1.7
date	2010.11.11.10.07.51;	author matthieu;	state Exp;
branches;
next	1.6;

1.6
date	2010.08.21.16.03.11;	author matthieu;	state Exp;
branches;
next	1.5;

1.5
date	2010.05.18.19.24.11;	author matthieu;	state Exp;
branches;
next	1.4;

1.4
date	2009.05.03.12.53.27;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.14.07.31.43;	author matthieu;	state Exp;
branches;
next	1.2;

1.2
date	2007.04.09.10.12.06;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	2006.11.25.16.01.23;	author matthieu;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.11.25.16.01.23;	author matthieu;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.11.26.12.50.19;	author matthieu;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.12.17.11.01.32;	author matthieu;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Update to x11proto 7.0.31
@
text
@AC_PREREQ([2.60])
AC_INIT([Xproto], [7.0.31],
        [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg])
AM_INIT_AUTOMAKE([foreign dist-bzip2])

# Require xorg-macros minimum of 1.12 for DocBook external references
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.12 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.12)
XORG_DEFAULT_OPTIONS
XORG_ENABLE_SPECS
XORG_WITH_XMLTO(0.0.22)
XORG_WITH_FOP
XORG_WITH_XSLTPROC
XORG_CHECK_SGML_DOCTOOLS(1.8)

AC_CONFIG_HEADERS([do-not-use-config.h])
AC_CONFIG_HEADERS([Xfuncproto.h])

AC_CANONICAL_HOST

m4_ifdef([AS_HELP_STRING], , [m4_define([AS_HELP_STRING], m4_defn([AC_HELP_STRING]))])

# Check for enable/disable options
AC_ARG_ENABLE(function-prototypes,
	AS_HELP_STRING([--enable-function-prototypes],
		       [force function prototypes (default: auto)]),
	[FUNCPROTO=$enableval], [FUNCPROTO=auto])
AC_ARG_ENABLE(varargs-prototypes,
	AS_HELP_STRING([--enable-varargs-prototypes],
		       [varargs prototypes are supported (default: auto)]),
	[VAPROTO=$enableval], [VAPROTO=auto])
AC_ARG_ENABLE(const-prototypes,
	AS_HELP_STRING([--enable-const-prototypes],
		       [const is supported (default: auto)]),
	[CONSTPROTO=$enableval], [CONSTPROTO=auto])
AC_ARG_ENABLE(nested-prototypes,
	AS_HELP_STRING([--enable-nested-prototypes],
		       [nested prototypes are supported (default: auto)]),
	[NESTEDPROTO=$enableval], [NESTEDPROTO=auto])
AC_ARG_ENABLE(wide-prototypes,
	AS_HELP_STRING([--enable-wide-prototypes],
		       [widen function prototypes (default: auto)]),
	[WIDEPROTO=$enableval], [WIDEPROTO=auto])


AC_CHECK_HEADERS([sys/select.h sys/param.h sys/types.h sys/time.h])

# Handle Xpoll.h.in
# Avoid determining fds_bits on WIN32 hosts (not including cygwin)
case $host_os in
	mingw*)		fds_bits_found=true;;
	*)		fds_bits_found=false;;
esac

if test "x$fds_bits_found" = xfalse ; then
   AC_CHECK_MEMBER(fd_set.fds_bits, 
			   [
			       fds_bits_found=plain
			       USE_FDS_BITS="fds_bits"
			   ],,
			   [
                               #ifdef HAVE_SYS_PARAM_H
                               #include <sys/param.h>
                               #endif
                               #ifdef HAVE_SYS_TYPES_H
                               #include <sys/types.h>
                               #endif
                               #ifdef HAVE_SYS_TIME_H
                               #include <sys/time.h>
                               #endif
                               #ifdef HAVE_SYS_SELECT_H
			       #include <sys/select.h>
                               #endif
			   ])
fi

if test "x$fds_bits_found" = xfalse ; then
   AC_CHECK_MEMBER(fd_set.__fds_bits,
			[
			    fds_bits_found=underscores
			    USE_FDS_BITS="__fds_bits"
			],,
			[
                               #ifdef HAVE_SYS_PARAM_H
                               #include <sys/param.h>
                               #endif
                               #ifdef HAVE_SYS_TYPES_H
                               #include <sys/types.h>
                               #endif
                               #ifdef HAVE_SYS_TIME_H
                               #include <sys/time.h>
                               #endif
                               #ifdef HAVE_SYS_SELECT_H
			       #include <sys/select.h>
                               #endif
			])
fi

if test "x$fds_bits_found" = xfalse ; then
    AC_MSG_ERROR([Could not determine how to access the fds_bits or equivalent
                  structure in fd_set on your platform.])
fi

AC_SUBST([USE_FDS_BITS])


# Handle Xfuncproto.h
AC_MSG_CHECKING([whether const prototypes are supported])
if test "x$CONSTPROTO" = xauto; then
	case $host_os in
		linux*)		CONSTPROTO=yes ;;
		freebsd*)	CONSTPROTO=yes ;;
		netbsd*)	CONSTPROTO=yes ;;
		openbsd*)	CONSTPROTO=yes ;;
		solaris*)	CONSTPROTO=yes ;;
		*)		CONSTPROTO=no ;;
	esac
fi
AC_MSG_RESULT([$CONSTPROTO])

AC_MSG_CHECKING([whether varargs prototypes are supported])
if test "x$VAPROTO" = xauto; then
	case $host_os in
		linux*)		VAPROTO=yes ;;
		freebsd*)	VAPROTO=yes ;;
		netbsd*)	VAPROTO=yes ;;
		openbsd*)	VAPROTO=yes ;;
		solaris*)	VAPROTO=yes ;;
		*)		VAPROTO=no ;;
	esac
fi
AC_MSG_RESULT([$VAPROTO])

AC_MSG_CHECKING([whether nested prototypes are supported])
if test "x$NESTEDPROTO" = xauto; then
	case $host_os in
		linux*)		NESTEDPROTO=yes ;;
		freebsd*)	NESTEDPROTO=yes ;;
		netbsd*)	NESTEDPROTO=yes ;;
		openbsd*)	NESTEDPROTO=yes ;;
		solaris*)	NESTEDPROTO=yes ;;
		*)		NESTEDPROTO=no ;;
	esac
fi
AC_MSG_RESULT([$NESTEDPROTO])

AC_MSG_CHECKING([whether to force function prototypes])
if test "x$FUNCPROTO" = xauto; then
	case $host_os in
	    linux*)	FUNCPROTO=yes ;;
	    freebsd*)	FUNCPROTO=yes ;;
	    netbsd*)	FUNCPROTO=yes ;;
	    openbsd*)	FUNCPROTO=yes ;;
	    *)
		if test "x$VAPROTO" = xyes && test "x$NESTEDPROTO" = xyes; then
			FUNCPROTO=yes
		else
			FUNCPROTO=no
		fi
		;;
	esac
fi
AC_MSG_RESULT([$FUNCPROTO])

# Logic for this was taken from Imake.tmpl
if test "x$FUNCPROTO" = xyes && test "x$VAPROTO" = xyes && test "x$NESTEDPROTO" = xyes && test "x$CONSTPROTO" = xyes; then
		AC_DEFINE(FUNCPROTO, [15], [FUNCPROTO])
else
  if test "x$FUNCPROTO" = xyes && test "x$VAPROTO" = xyes && test "x$NESTEDPROTO" = xyes; then
		AC_DEFINE(FUNCPROTO, [11], [FUNCPROTO])
  else
    if test "x$FUNCPROTO" = xyes && test "x$NESTEDPROTO" = xyes; then
		AC_DEFINE(FUNCPROTO, [9], [FUNCPROTO])
    else
      if test "x$FUNCPROTO" = xyes && test "x$VAPROTO" = xyes && test "x$CONSTPROTO" = xyes; then
		AC_DEFINE(FUNCPROTO, [7], [FUNCPROTO])
      else
        if test "x$FUNCPROTO" = xyes && test "x$CONSTPROTO" = xyes; then
		AC_DEFINE(FUNCPROTO, [5], [FUNCPROTO])
        else
          if test "x$FUNCPROTO" = xyes && test "x$VAPROTO" = xyes; then
		AC_DEFINE(FUNCPROTO, [3], [FUNCPROTO])
          else
            if test "x$FUNCPROTO" = xyes; then
		AC_DEFINE(FUNCPROTO, [], [FUNCPROTO])
            fi
          fi
        fi
      fi
    fi
  fi
fi

AC_MSG_CHECKING([whether to widen function prototypes])
if test "x$WIDEPROTO" = xauto; then
	case $host_os in
		linux*)		WIDEPROTO=no ;;
		freebsd*)	WIDEPROTO=no ;;
		netbsd*)	WIDEPROTO=no ;;
		openbsd*)	WIDEPROTO=no ;;
		*)		WIDEPROTO=yes ;;
	esac
fi
AC_MSG_RESULT([$WIDEPROTO])

if test "x$WIDEPROTO" = xno; then
	AC_DEFINE(NARROWPROTO, [], [Narrow prototypes])
fi


AC_CONFIG_FILES([Makefile
           specs/Makefile
           specs/SIAddresses/Makefile
           Xpoll.h
           xproto.pc])
AC_OUTPUT
@


1.17
log
@Update to x11proto 7.0.29
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.29],
@


1.16
log
@Update to x11proto 7.0.28
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.28],
@


1.15
log
@Update to x11proto 7.0.27
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.27],
@


1.14
log
@Update to xproto 7.0.26
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.26],
@


1.13
log
@Update to x11proto 7.0.25
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.25],
@


1.12
log
@Update to xproto 7.0.24
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.24],
d212 1
a212 1
AC_OUTPUT([Makefile
d217 1
@


1.11
log
@update to xproto 7.0.23. Tested by krw@@, mpi@@, shadchin@@
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.23],
a4 1
AM_MAINTAINER_MODE
d17 2
a18 2
AC_CONFIG_HEADER([do-not-use-config.h])
AC_CONFIG_HEADER([Xfuncproto.h])
@


1.10
log
@Update to x11proto 7.0.22.
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.22],
@


1.9
log
@Update to x11proto 7.0.21.
One additional change to fix __STDC_VERSION__ tests in Xfuncproto.h
(also pushed upstreams).
Tested and ok by krw@@, shadchin@@, landry@@ (on a bulk ports build).
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.21],
d7 1
a7 1
# Require xorg-macros minimum of 1.10 for DocBook XML documentation
d9 2
a10 2
          [m4_fatal([must install xorg-macros 1.10 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.10)
d13 1
a13 1
XORG_WITH_XMLTO(0.0.20)
d15 2
a16 1
XORG_CHECK_SGML_DOCTOOLS(1.5)
@


1.8
log
@update to xproto 7.0.20. 2 new keysyms definitions plus lots of doc fixes.
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.20],
@


1.7
log
@Update to xproto 7.0.19. No functional change.
This mostly adds the new docbook xml docs to the source tree.
Formatting it will be handled later.
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.19],
d214 1
@


1.6
log
@Update to x11proto 7.0.18. no functional change.
@
text
@d2 2
a3 1
AC_INIT([Xproto], [7.0.18], [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg])
d7 1
a7 1
# Require xorg-macros: XORG_DEFAULT_OPTIONS
d9 2
a10 2
          [m4_fatal([must install xorg-macros 1.3 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.3)
d12 4
d213 1
@


1.5
log
@Update to xproto 7.0.17. Tested on a bulk ports build by naddy@@.
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.17], [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg])
@


1.4
log
@update to xproto 7.0.15
@
text
@d1 2
a2 2
AC_PREREQ([2.57])
AC_INIT([Xproto], [7.0.15], [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg])
d4 7
a14 4
# Require xorg-macros: XORG_CHANGELOG
m4_ifndef([XORG_MACROS_VERSION], [AC_FATAL([must install xorg-macros 1.2 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.2)

a205 2
XORG_RELEASE_VERSION
XORG_CHANGELOG
@


1.3
log
@x11proto 7.0.13. tested by naddy@@ on a bulk ports build
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.13], [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg])
d5 6
a10 2
AC_CONFIG_HEADER(do-not-use-config.h)
AC_CONFIG_HEADER(Xfuncproto.h)
d204 1
@


1.2
log
@Remove extra quoting that caused quoted files names to be generated.
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.10], [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg])
d35 2
d38 5
a42 1
fds_bits_found=false;
d51 4
d56 5
d62 1
d73 12
a84 2
                            #include <sys/types.h>
			    #include <sys/select.h>
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.5], [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg])
d5 2
a6 2
AC_CONFIG_HEADER([do-not-use-config.h])
AC_CONFIG_HEADER([Xfuncproto.h])
@


1.1.1.1
log
@import from X.Org 7.2RC2
@
text
@@


1.1.1.2
log
@x11proto 7.0.9 from X.Org individual releases. The 7.2RC2 tarball is too old.
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.9], [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg])
@


1.1.1.3
log
@xproto 7.0.10
@
text
@d2 1
a2 1
AC_INIT([Xproto], [7.0.10], [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg])
@


