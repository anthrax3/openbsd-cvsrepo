head	1.24;
access;
symbols;
locks; strict;
comment	@# @;


1.24
date	2014.04.01.16.33.20;	author deraadt;	state dead;
branches;
next	1.23;

1.23
date	2009.05.26.21.30.39;	author ajacoutot;	state Exp;
branches;
next	1.22;

1.22
date	2004.09.04.09.23.46;	author jufi;	state Exp;
branches;
next	1.21;

1.21
date	2003.06.27.20.42.46;	author jufi;	state Exp;
branches;
next	1.20;

1.20
date	2003.01.21.14.50.32;	author jufi;	state Exp;
branches;
next	1.19;

1.19
date	2003.01.08.20.43.47;	author jufi;	state Exp;
branches;
next	1.18;

1.18
date	2002.07.09.10.50.02;	author jufi;	state Exp;
branches;
next	1.17;

1.17
date	2002.06.29.12.32.42;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2002.05.14.16.59.22;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2002.02.23.17.15.11;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2002.01.19.09.04.00;	author jufi;	state Exp;
branches;
next	1.13;

1.13
date	2001.11.19.19.35.23;	author jufi;	state Exp;
branches;
next	1.12;

1.12
date	2001.09.19.18.31.27;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2001.08.29.16.37.31;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2001.08.29.06.23.09;	author jufi;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.14.05.37.56;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.13.20.01.38;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2000.09.29.06.41.12;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.30.22.48.15;	author horacio;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.15.17.35.36;	author wvdputte;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.14.00.56.23;	author wvdputte;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.10.11.43.59;	author wvdputte;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.05.21.00.52;	author wvdputte;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.10.03.57.49;	author wvdputte;	state Exp;
branches;
next	;


desc
@@


1.24
log
@abandon translations; ajacoutot and team are done
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta http-equiv="Content-Language" content="es">
<meta name="resource-type" content="documento">
<meta name="description" CONTENT="Cómo crear un porte para OpenBSD">
<meta name="keywords" content="openbsd,portes,ports">
<meta name="distribution" content="global">
<meta name="copyright" content="Este documento es copyright 1997-2004 de OpenBSD">
<title>C&oacute;mo crear un porte para OpenBSD</title>
<link rev="made" href="mailto:www@@openbsd.org">
</head>

<body text="#000000" bgcolor="#ffffff" link="#23238e">
<!-- máx. 72 caracteres por línea -->
<a href="index.html"><img alt="[OpenBSD]" height="30" width="141" src="../images/smalltitle.gif" border="0"></a>

<h2><font color="#e00000">C&oacute;mo crear un porte para
OpenBSD</font></h2>

Suponiendo que ya hubiera compilado su programa favorito en su sistema
OpenBSD y que quisiera compartir su esfuerzo convirti&eacute;ndolo en un
porte, &iquest;c&oacute;mo podr&iacute;a hacerlo?

<p>
Lo m&aacute;s importante que debe hacer es <strong>comunicarlo</strong>.
Pregunte en <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> por
si alguien ya estuviera trabajando en lo mismo.
<em>Comun&iacute;queselo al autor original del programa</em>, e incluya
los problemas que pueda encontrar.  Si aparece alg&uacute;n error en la
informaci&oacute;n sobre la licencia h&aacute;gaselo saber.  Si tuvo que
evitar bucles para crear el porte, d&iacute;gale qu&eacute; es lo que
debe solucionar.  Si s&oacute;lo est&aacute;n desarrollando para Linux y
da la impresi&oacute;n de que les trae sin cuidado el resto del mundo
Unix, intente hacer que cambien de opini&oacute;n.

<p>
La <strong>COMUNICACI&Oacute;N</strong> es lo que marca la diferencia
entre un porte con &eacute;xito y un porte que tarde o temprano
ser&aacute; abandonado por todos.

<p>
Antes que nada eche un vistazo a la informaci&oacute;n sobre portes en
esta p&aacute;gina y luego lea los documentos a los que se hace
referencia, especialmente a la <a href="checklist.html">lista de
comprobaci&oacute;n</a> de portes de OpenBSD.

<p>
&iexcl;Haga pruebas una y otra vez! &nbsp;&nbsp;y, finalmente...
&iexcl;vuelva a repasarlas!

<p>
Env&iacute;e el porte.  Haga un archivo comprimido con tar y gzip del
directorio del porte.  Lo puede poner en un servidor p&uacute;blico de
FTP o HTTP y enviar la direcci&oacute;n de &eacute;ste a 
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>, o enviarlo
directamente a esta direcci&oacute;n con codificado MIME.  Elija el
m&eacute;todo que m&aacute;s le convenga.

<h3><font color="#0000e0">&Iacute;ndice de documentaci&oacute;n para
portar programas</font></h3>
<ul>
<li><a href="#Avail">Informaci&oacute;n disponible para portar
programas</a></li>
<li><a href="#Policy">Pol&iacute;tica sobre portes de OpenBSD</a></li>
<li><a href="#Security">Recomendaciones de seguridad</a></li>
<li><a href="#Generic">Consejos generales para portar</a></li>
<li><a href="#Other">Otros consejos de ayuda</a></li>
</ul>

<h3><font color="#0000e0"><a name="Avail">Informaci&oacute;n
disponible</a></font></h3>

<ul>
<li><a href="checklist.html">Lista de comprobaci&oacute;n</a> de portes
de OpenBSD.
<li>La p&aacute;gina del manual de
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bsd.port.mk&amp;sektion=5">bsd.port.mk(5)</a>.
Contiene la informaci&oacute;n sobre la infraestructura de los portes
que se incluye al final de los ficheros <em>Makefile</em> de cada porte.
Todav&iacute;a hay algunos comentarios al inicio del mismo fichero, pero
la mayor parte de la informaci&oacute;n &uacute;til est&aacute;
documentada.
<li>Algunas diferencias con otros sistemas de portes de BSD, sobre todo
un sumario de las <a href="../porting/es/diffs.html">diferencias de
infraestructura</a>.
<li><a href="../porting/es/libraries.html">C&oacute;mo usar las
bibliotecas compartidas en el sistema de portes de OpenBSD</a>.  Las
reglas que contiene son <strong>muy importantes</strong> si se usan
bibliotecas compartidas, en especial si pkg_update funciona alg&uacute;n
d&iacute;a...
<li><a href="audio-port.html">C&oacute;mo portar aplicaciones de audio a
OpenBSD</a>
<li>La documentaci&oacute;n 
<a href="http://www.netbsd.org/Documentation/software/packages.html">NetBSD Package System</a>
describe la versi&oacute;n de NetBSD del sistema de portes de FreeBSD, y
es muy &uacute;til.
<li>La <a href="http://www.freebsd.org/doc/en_US.ISO8859-1/books/porters-handbook/index.html">Gu&iacute;a de Portadores de FreeBSD</a>.
Es la biblia para los portes en FreeBSD.
<li>La lista de correo para los portes de OpenBSD 
<a href="mailto:ports@@openbsd.org">ports@@OpenBSD.org</a>.
</ul>

<p>
<h3><font color="#0000e0"><a name="Policy">Pol&iacute;tica sobre portes
de OpenBSD</a></font></h3>

<ul>
<li>Debido a que <code>/usr/local</code> es un sistema de archivo con
frecuencia compartido entre varias m&aacute;quinas mediante NFS, OpenBSD
NO usa <code>/usr/local/etc/rc.d</code>.  Por este motivo los ficheros
de configuraci&oacute;n espec&iacute;ficos de cada m&aacute;quina no se
pueden guardar en <code>/usr/local</code>, y por tanto <code>/etc</code>
es el repositorio central para los ficheros de configuraci&oacute;n
espec&iacute;ficos de cada m&aacute;quina.  M&aacute;s a&uacute;n, la
pol&iacute;tica de OpenBSD es la de no actualizar nunca de forma
autom&aacute;tica los ficheros en <code>/etc</code>.  Los portes que
necesitan alg&uacute;n tipo de configuraci&oacute;n de arranque deben
avisar al administrador del sistema de lo que &eacute;ste debe hacer en
lugar de instalar ficheros a ciegas.

<li>Las p&aacute;ginas de manual en OpenBSD NO est&aacute;n comprimidas.

<li>OpenBSD NO requiere <code>-lcrypt</code>.<br> El cifrado con DES es
parte del <code>libc</code> t&iacute;pico.

<li>OpenBSD tiene un espacio de nombre separado para los usuarios y
grupos creados por los portes.  V&eacute;se
<code>/usr/ports/infrastructure/db/user.list</code> para m&aacute;s
detalles.

<li>OpenBSD tiene una fuerte orientaci&oacute;n hacia la seguridad.  Se
aconseja leer y asimilar la <a href="#Security">secci&oacute;n sobre
seguridad</a> en esta p&aacute;gina.

<li>Aseg&uacute;rese de que a&ntilde;ade la marca de CVS
<code>&#36;OpenBSD&#36;</code> al fichero de Makefile. Si importa un
porte desde otro sistema, aseg&uacute;rese de que tambi&eacute;n
conserva la marca en el archivo Makefile. 

<li>El objetivo a alcanzar es que todas las aplicaciones portadas tengan
soporte en OpenBSD.  Para conseguirlo <strong>debe</strong> informar
ampliamente sobre cualquier parche para OpenBSD al mantenedor de la
aplicaci&oacute;n.
</ul>

<p>
<h3><font color="#0000e0"><a name="Security">Recomendaciones de
seguridad</a></font></h3>

Existen muchos problemas de seguridad a los que debemos prestar una
atenci&oacute;n especial.  Si no se est&aacute; absolutamente seguro de
lo que se est&aacute; haciendo, por favor pida ayuda a la lista de
correo de <a href="mailto:ports@@openbsd.org">portes</a>.

<ul>
<li><em>NO</em> use c&oacute;digo en estado alpha o beta cuando
est&eacute; creando un porte.  Use la revisi&oacute;n o versi&oacute;n
m&aacute;s actual.

<li>Cualquier programa que vaya a ser instalado como servidor
deber&iacute;a ser escaneado en busca de desbordamientos en la memoria
intermedia (<i>buffer overflows</i>), especialmente en el caso de
utilizaci&oacute;n insegura de
<code>strcat/strcpy/strcmp/sprintf</code>.  Como regla general,
<code>sprintf</code> se debe substituir siempre con
<code>snprintf</code>.

<li>No use nunca nombres de ficheros en lugar de seguridad real.
Existen numerosas condiciones de carrera para las que no se tiene un
debido control.  Por ejemplo, un atacante que ya haya obtenido
privilegios de usuario en sus m&aacute;quinas puede substituir ficheros
en <code>/tmp</code> con enlaces simb&oacute;licos a ficheros m&aacute;s
estrat&eacute;gicos, como <code>/etc/master.passwd</code>.

<li>Tambi&eacute;n, un ejemplo a tener en cuenta es que tanto
<code>fopen</code> como <code>freopen</code> <strong>generan un nuevo
fichero o abren ficheros ya existentes</strong> con permisos para
escritura.  Un atacante puede crear un enlace simb&oacute;lico desde
<code>/etc/master.passwd</code> a <code>/tmp/addrpool_dump</code>.  En
cuanto Vd. lo abra, el fichero de su contrase&ntilde;a ser&aacute;
filtrado.  S&iacute;, incluso con un <code>unlink</code> antes, que tan
s&oacute;lo minimizar&iacute;a el riesgo.  Use <code>open</code> con
<code>O_CREATIO_EXCL</code> y <code>fdopen</code> en lugar de lo
anterior.

<li>Otro problema muy com&uacute;n es el de la funci&oacute;n
<code>mktemp</code>.  Haga caso a los avisos del enlazador de bsd sobre
su uso.  <strong>Se deben solucionar</strong>.  Esto no es tan sencillo
como <code>s/mktemp/mkstemp/g</code>.  <br> Para m&aacute;s indicaciones
sobre este respecto vaya a la p&aacute;gina de manual de
<code>mktemp(3)</code> en OpenBSD-current.  Un ejemplo de c&oacute;digo
correcto que use <code>mkstemp</code> puede ser el de los fuentes de
<code>ed</code> o <code>mail</code>.  Se puede encontrar un tipo poco
usual de c&oacute;digo que use correctamente <code>mktemp</code> en el
porte <code>rsync</code>.

<li>Que lo pueda leer no implica que lo deba leer.  Un agujero muy
conocido de esta naturaleza era el del problema con <code>startx</code>.
Al ser un programa setuid, se pod&iacute;a ejecutar con cualquier
fichero como gui&oacute;n (<i>script</i>).  Si el fichero no era un
gui&oacute;n v&aacute;lido del int&eacute;rprete de &oacute;rdenes
(&quot;shell&quot;), le segu&iacute;a un mensaje de error junto con la
primera l&iacute;nea de error del fichero, sin comprobar m&aacute;s
permisos.  Considerando que los ficheros shadow passwd a menudo
comienzan con una entrada de root, obtener esta primera l&iacute;nea era
bastante &uacute;til para un atacante.  No abra un fichero y a
continuaci&oacute;n ejecute <code>fstat</code> en el descriptor abierto
para comprobar lo podr&iacute;a haber abierto (o el atacante
jugar&aacute; con <code>/dev/rst0</code> y rebobinar&aacute; su cinta);
&aacute;bralo con el uid/gid/grouplist correcto.

<li>No use nada que cree un proceso hijo de una shell en programas
setuid antes de haber eliminado sus privilegios.  Esto incluye
<code>popen</code> y <code>system</code>.  En su lugar use
<code>fork</code>, <code>pipe</code> y <code>execve</code>.

<li>Pase descriptores abiertos en lugar de nombres de archivos a otros
programas para evitar condiciones de carrera.  Aun en el caso de que un
programa no acepte descriptores de ficheros, puede usar
<code>/dev/fd/0</code>.

<li>Los derechos de acceso van adjuntos a los descriptores de ficheros.
Si necesita derechos setuid para abrir un fichero, abra ese fichero y
elimine sus privilegios.  Esto es un arma de doble filo:  incluso
despu&eacute;s de haber eliminado sus privilegios, deber&aacute;
observar esos descriptores.

<li>Evite root setuid siempre que pueda.  En principio puede hacer
cualquier cosa, pero los derechos de root se necesitan en raras
ocasiones, tal vez excepto para crear portes de &quot;socket&quot; con
un n&uacute;mero por debajo de 1024.  En este caso tal vez sea mejor
controlarlo con <code>inetd</code> y simplemente a&ntilde;adir las
entradas relevantes a <code>inetd.conf</code>.  Debe conocer el
&quot;magic&quot; apropiado requerido para poder codificar
&quot;d&aelig;mons&quot;.  Se podr&iacute;a decir que no se tienen
programas setuid comerciales si no se sabe c&oacute;mo hacerlo.

<li>Use setgid en lugar de setuid.  Aparte de los ficheros
espec&iacute;ficos que necesitan los programas setgid, la mayor&iacute;a
de ficheros no tienen permisos de escritura para grupo.  Por tanto, un
problema de seguridad en un programa setgid no comprometer&aacute; tanto
su sistema;  con s&oacute;lo derechos de grupo, lo peor que podr&aacute;
hacer un atacante es cambiar la tabla de puntuaci&oacute;n de un juego o
algo parecido.  Vea el porte <code>xkobo</code> como un ejemplo de un
cambio de este tipo.

<li>No conf&iacute;e en ficheros con permisos de escritura para grupo.
Aunque hayan pasado una auditor&iacute;a, los programas setgid no se
perciben como un agujero de seguridad en potencia.  Por lo tanto,
cualquier cosa que pueda ser falsificada no deber&iacute;a ser
considerarada como informaci&oacute;n reservada.

<li>&iexcl;No conf&iacute;e en su entorno!  Esto incluye cosas tan
sencillas como su <code>PATH</code> (nunca use <code>system</code> con
un nombre no cualificado y evite <code>execvp</code>), pero tampoco de
entornos menos obvios como su <code>locale</code>,
<code>timezone</code>, <code>termcap</code> y otros.
<strong>Nunca</strong> use <code>system</code> en programas
privilegiados;  en su lugar cree su propia orden de l&iacute;nea, un
entorno controlado, y una llamada directa a <code>execve</code>.  La
p&aacute;gina de manual de <code>perlsec</code> es una buena tutorial
sobre estos problemas.

<li>Nunca use guiones de ejecuci&oacute;n del int&eacute;rprete de
&oacute;rdenes (&quot;shell scripts&quot;) setuid.  &Eacute;stos son
inseguros por definici&oacute;n.  Envu&eacute;lvalos dentro de
c&oacute;digo C que asegure un entorno apropiado.  Por otra parte, las
caracter&iacute;sticas de OpenBSD incluyen guiones de perl seguros.

<li>Tenga cuidado con el cargador din&aacute;mico.  Si est&aacute;
ejecutando setuid s&oacute;lo ejecutar&aacute; bibliotecas que hayan
sido escaneadas con <code>ldconfig</code>.  Setgid no basta.

<li>Las bibliotecas din&aacute;micas son complicadas.  El c&oacute;digo
C++ presenta un problema parecido.  B&aacute;sicamente, las bibliotecas
pueden tomar alguna acci&oacute;n bas&aacute;ndose en su entorno antes
incluso de que su programa principal haya podido comprobar su estado
setuid.  OpenBSD <code>issetugid</code> trata este problema desde el
punto de vista del escritor de bibliotecas.  No intente portar
bibliotecas a menos que conozca este tema a la perfecci&oacute;n.
</ul>

<p>
<h3><font color="#0000e0"><a name="Generic">Consejos
generales</a></font></h3>

<ul>
<li><code>__OpenBSD__</code> se deber&iacute;a usar con cuentagotas o
mejor no usarlo en absoluto.  Construcciones como
    
    <pre>
        #if defined(__NetBSD__) || defined(__FreeBSD__)
    </pre>
    
son a menudo inapropiadas.  No a&ntilde;ada <code>__OpenBSD__</code> a
&eacute;stas a ciegas.  En lugar de esto, intente imaginar qu&eacute; es
lo que est&aacute; ocurriendo y qu&eacute; es lo que se necesita.  Las
p&aacute;ginas de manual son de gran utilidad para estos casos, ya que
incluyen comentarios de tipo historial en los que se menciona
cu&aacute;ndo una caracter&iacute;stica particular se integr&oacute; en
<code>BSD</code>.  Contrastar el valor num&eacute;rico de
<code>BSD</code> con el de las versiones conocidas es por lo general la
forma correcta de hacerlo.  V&eacute;ase
<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/Packages.txt">
the NetBSD package guide</a> para obtener m&aacute;s informaci&oacute;n
al respecto.

<li>Definir <code>BSD</code> no es una buena idea, al contrario.
Intente incluir <code>sys/parm.h</code>.  Esto no s&oacute;lo define
<code>BSD</code>, sino que tambi&eacute;n le da un valor apropiado.  El
fragmento de c&oacute;digo correcto deber&iacute;a ser as&iacute;:
    
    <pre>
        #if (defined(__unix__) || defined(unix)) &amp;&amp; !defined(USG)
        #include &lt;sys/param.h&gt;
	#endif
    </pre>
    
<li>Base sus comprobaciones en las caracter&iacute;sticas, no en
sistemas operativos espec&iacute;ficos.  A la larga es mucho mejor
comprobar si <code>tcgetattr</code> funciona que si est&aacute;
funcionando en BSD 4.3 o posterior, o en SystemVR4.  Este tipo de
pruebas s&oacute;lo confunden.  La manera de hacerlas es, por ejemplo,
comprob&aacute;ndolo para un sistema en particular, configurar los
ficheros <code>define</code> con <code>HAVE_TCGETATTR</code>, y a
continuaci&oacute;n proceder con el sistema siguiente.  Esta
t&eacute;cnica separa las comprobaciones de caracter&iacute;sticas de
los sistemas operativos espec&iacute;ficos.  De forma r&aacute;pida,
otro portado puede as&iacute; simplemente a&ntilde;adir todas las
definiciones <code>-DHAVE_XXX</code> en el fichero Makefile.
Tambi&eacute;n es posible escribirlo o a&ntilde;adirlo a un gui&oacute;n
de configuraci&oacute;n para comprobar esa caracter&iacute;stica y
a&ntilde;adirla de modo autom&aacute;tico.  Como un ejemplo de lo que no
se debe hacer, compruebe los fuentes de nethack 3.2.2: asume un
mont&oacute;n de cosas basadas en el tipo del sistema.  La
mayor&iacute;a de éstas est&aacute;n obsoletas y ya no reflejan la
realidad:  las funciones POSIX son m&aacute;s &uacute;tiles que las
viejas diferencias entre BSD y SystemV, hasta el punto que algunas
funciones bsd tradicionales s&oacute;lo conservan el soporte mediante
bibliotecas de compatibilidad.

<li>Evite incluir ficheros que incluyan otras inclusiones que...
Primero, porque no es eficiente.  Su proyecto acabar&aacute; incluyendo
un fichero que incluya todo.  Tambi&eacute;n, porque hace que algunos
problemas sean dif&iacute;ciles de solucionar.  Se hace m&aacute;s
dif&iacute;cil <em>no</em> incluir un fichero particular en un momento
dado.

<li>Evite macros estrafalarias.  No definir una macro que fue definida
por un fichero de cabecera es una mala idea.  Definir macros para
obtener un comportamiento espec&iacute;fico de un fichero
<code>include</code> tambi&eacute;n es una mala idea: los modos de
compilaci&oacute;n deber&iacute;an ser globales.  Si quiere obtener un
comportamiento POSIX d&iacute;galo, y a&ntilde;ada <code>#define
POSIX_C_SOURCE</code> en todo el proyecto, no s&oacute;lo cuando lo crea
conveniente.

<li>Nunca escriba prototipos de funciones de sistema.  Todos los
sistemas modernos, incluido OpenBSD, tienen una localizaci&oacute;n
t&iacute;pica para estos prototipos.  Dichas localizaciones es probable
que sean <code>unistd.h</code>, <code>fcntl.h</code>, o
<code>termios.h</code> entre otras.  La p&aacute;gina de manual suele
indicar d&oacute;nde se puede encontrar el prototipo.  Es posible que
necesite otras cuantas macros de <code>HAVE_XXX</code> para conseguir el
fichero correcto.  No se preocupe por incluir el mismo fichero dos
veces, los ficheros <code>include</code> tienen m&eacute;todos de
prevenci&oacute;n contra esto.
<br>
Si alg&uacute;n sistema defectuoso necesita que escriba el prototipo, no
lo imponga en otros sistemas.  El uso de prototipos propios no
funcionar&aacute; porque pueden usar tipos que son equivalentes en su
sistema, pero no son portables a otros sistemas (<code>unsigned
long</code> en lugar de <code>size_t</code>), o resultar&aacute;n en
estados incorrectos de <code>const</code>.  Adem&aacute;s, algunos
compiladores como el gcc propio de OpenBSD, pueden hacer un trabajo
mejor como algunas funciones muy frecuentes como <code>strlen</code> si
incluye el fichero de cabecera correcto.

<li>No use el nombre de una funci&oacute;n de sistema t&iacute;pica para
nada m&aacute;s.  Si quiere escribir su propia funci&oacute;n,
d&eacute;le su propio nombre, y llame a esa funci&oacute;n en todas
partes.  Si desea volver a la funci&oacute;n de sistema por
definici&oacute;n, s&oacute;lo tiene que comentar su c&oacute;digo y
definir su propio nombre en la funci&oacute;n del sistema.  No lo haga
de otro modo.  El c&oacute;digo deber&iacute;a ser del siguiente modo

<pre>
       /* prototype part */
       #ifdef USE_OWN_GCVT
       char *foo_gcvt(double number, size_t ndigit, char *buf);
       #else
       /* include correct file */
       #include &lt;stdlib.h&gt;
       /* use system function */
       #define foo_gcvt  gcvt
       #endif

       /* definition part */
       #ifdef USE_OWN_GCVT
       char *foo_gcvt(double number, size_t ndigit, char *buf)
          {
          /* proper definition */
          }

       /* typical use */
       s = foo_gcvt(n, 15, b);
       </pre>

</ul>

<p>
<h3><font color="#0000e0"><a name="Other">Otros consejos</a></font></h3>

<ul>
<li>Las versiones recientes de <code>bsd.port.mk</code> definen el
camino de los instaladores.  En particular, definen que se busque en
<code>/usr/bin</code> y <code>/bin</code> <em>antes que</em>
<code>/usr/local/bin</code> y <code>/usr/X11R6/bin</code>.

<li><em>NO</em> genere bibliotecas compartidas si <code>${NO_SHARED_LIBS}</code>
es igual a "YES" (cuidado, s&oacute;lo se puede definir
despu&eacute;s de incluir <code>bsd.port.mk</code>).  Si su porte tiene
un GNU configure, a&ntilde;ada la l&iacute;nea <code>CONFIGURE_ARGS +=
${CONFIGURE_SHARED}</code> al fichero Makefile.

<li>El uso de una funcionalidad que haya aparecido en una versi&oacute;n
reciente de <code>bsd.port.mk</code> es aceptable, ya que se supone que
los usuarios deben actualizar sus &aacute;rboles de portes al completo,
incluido <code>bsd.port.mk</code>.  Ahora NEED_VERSION est&aacute;
obsoleto.

<li>Prefiera el uso de <code>update-plist</code> para generar y actualizar
las listas de empacamiento en vez de hacerlo manualmente.
Puede comentar las lineas que no desee.
<code>update-plist</code> puede detectar la mayoría de los tipos de archivos
y copiar la mayoría de las anotaciones adicionales correctamente.


<li>En OpenBSD <code>curses.h/libcurses/libtermlib</code> es el
&laquo;nuevo curses&raquo;.  Cambio:<br>
<code>ncurses.h ==&gt; curses.h</code><br>
El &laquo;viejo (BSD) curses&raquo; est&aacute; disponible definiendo
<code>_USE_OLD_CURSES_</code> antes de incluir <code>curses.h</code>
(por lo general en un fichero Makefile) y enlaz&aacute;ndolo con
<code>-locurses</code>.

<li>En OpenBSD el terminal se ha actualizado del viejo
<code>sgtty</code> de BSD al nuevo <code>tcgetattr</code> de POSIX.
Evite el viejo estilo en c&oacute;digo nuevo.  Algo de c&oacute;digo es
posible que defina <code>tcgetattr</code> como sin&oacute;nimo del viejo
<code>sgtty</code>, pero esto es como mucho una medida temporal en
OpenBSD.  El c&oacute;digo fuente de <code>xterm</code> es un buen
ejemplo de lo que no hay que hacer.  Intente obtener la funcionalidad de
su sistema correctamente:  lo que quiere es un tipo que recuerde el
estado de su terminal (probablemente typedef), una funci&oacute;n que
extraiga el estado actual, y una funci&oacute;n que configure un nuevo
estado.  Las funciones que modifican este estado son m&aacute;s
dif&iacute;ciles, ya que tienden a variar seg&uacute;n el sistema.
Tampoco olvide que tendr&aacute; que manejar casos en los que no
est&eacute; conectado a un terminal, y en los que se necesita poder
manejar se&ntilde;ales:  no s&oacute;lo de terminaci&oacute;n, sino
tambi&eacute;n de fondo (<code>SIGTSTP</code>).  Deber&iacute;a dejar
siempre el terminal en un buen estado.  Lleve a cabo verificaciones en
int&eacute;rpretes de &oacute;rdenes (&quot;shells&quot;) m&aacute;s
viejos como sh, que no reconfiguren el terminal de ning&uacute;n modo al
terminar un programa.

<li>Los termcap/terminfo y curses m&aacute;s modernos, como los que se
incluyen con OpenBSD, incluyen secuencias t&iacute;picas para el control
de terminales de color.  Si es posible deber&iacute;a usar &eacute;stas,
volviendo a las secuencias de color t&iacute;picas de ANSI en otros
sistemas.  Sin embargo, las descripciones de algunos terminales
todav&iacute;a no se han actualizado, y es posible que necesite poder
especificar estas secuencias de modo manual.  &Eacute;ste es el modo en
que lo hace vim.  Esto no es estrictamente necesario.  Excepto en casos
de programas privilegiados, por lo general es posible anular una
definici&oacute;n termcap mediante la variable <code>TERMCAP</code> y
hacer que funcione correctamente.

<li>La sem&aacute;ntica de se&ntilde;ales es complicada, y var&iacute;a
de un sistema a otro.  Use <code>sigaction</code> para asegurarse
sem&aacute;nticas espec&iacute;ficas, junto con otras llmadas al sistema
cuya referencia puede encontrar en las p&aacute;ginas de manual.

</ul>

<hr>
<a href="index.html"><img height="24" width="24" src="../back.gif" border="0" alt="OpenBSD"></a> 
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
Originally [OpenBSD: porting.html,v 1.49 ]<br>
$Translation: porting.html,v 1.27 2009/05/26 22:53:52 ajacoutot Exp $<br>
$OpenBSD: porting.html,v 1.23 2009/05/26 21:30:39 ajacoutot Exp $
</small>
</body>
</html>
@


1.23
log
@Sync with Steelix CVS
@
text
@d497 1
a497 1
$OpenBSD$
@


1.22
log
@Sync with Steelix CVS
@
text
@d496 1
a496 1
$Translation: porting.html,v 1.23 2004/09/03 20:09:24 santana Exp $<br>
@


1.21
log
@sync with steelix translation CVS
@
text
@d1 2
a2 1
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
d11 1
a11 1
<meta name="copyright" content="Este documento es copyright 1997-2002 de OpenBSD">
d139 1
a139 1
<code>&#36;OpenBSD&#36;</code> al fichero de Makefile.  Si importa un
d141 1
a141 3
conserva la marca en el fichero Makefile.  En el caso de que el porte se
haga desde FreeBSD substituya la marca de FreeBSD
<code>&#36;Id&#36;</code> por la marca <code>&#36;FreeBSD&#36;</code>.
d165 1
a165 1
intermedia (&quot;buffer overflows&quot;), especialmente en el caso de
d203 1
a203 1
fichero como gui&oacute;n (&quot;script&quot;).  Si el fichero no era un
d423 2
a424 2
<li><em>NO</em> genere bibliotecas compartidas si se encuentra definido
<code>${NO_SHARED_LIBS}</code> (cuidado, s&oacute;lo se puede definir
d435 7
d495 2
a496 2
Originally [OpenBSD: porting.html,v 1.46 2003/06/22 13:24:32 sturm Exp ]<br>
$Translation: porting.html,v 1.22 2003/06/22 21:38:08 horacio Exp $<br>
@


1.20
log
@
sync with steelix translation CVS
@
text
@d128 5
d489 2
a490 2
Originally [OpenBSD: porting.html,v 1.45 2003/01/09 22:18:45 miod Exp ]<br>
$Translation: porting.html,v 1.21 2003/01/20 22:36:54 horacio Exp $<br>
@


1.19
log
@
sync with steelix translation CVS, work by Horacio
@
text
@d432 3
a434 3
&laquo;nuevo curses&raquo;.  Cambie lo siguiente:<br> <code>ncurses.h
==&gt; curses.h</code><br> <code>-lncurses ==&gt; -lcurses</code><br> Se
puede disponer del &laquo;viejo (BSD) curses&raquo; definiendo
d484 2
a485 2
Originally [OpenBSD: porting.html,v 1.44 2002/07/06 09:32:08 pvalchev Exp ]<br>
$Translation: porting.html,v 1.20 2003/01/08 19:26:51 horacio Exp $<br>
@


1.18
log
@
sync with badlands translation CVS
@
text
@d16 1
a16 1

d22 3
a24 4
Suponiendo que ya hubiera compilado su programa favorito en su
sistema OpenBSD y que quisiera compartir su esfuerzo
convirti&eacute;ndolo en un porte, &iquest;c&oacute;mo
podr&iacute;a hacerlo?
d27 2
a28 3
Lo m&aacute;s importante que debe hacer es
<strong>comunicarlo</strong>.  Pregunte en 
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> por
d30 7
a36 8
<em>Comun&iacute;queselo al autor original del programa</em>,
e incluya los problemas que pueda encontrar.  Si aparece
alg&uacute;n error en la informaci&oacute;n sobre la licencia
h&aacute;gaselo saber.  Si tuvo que evitar bucles para crear
el porte, d&iacute;gale qu&eacute; es lo que debe solucionar.
Si s&oacute;lo est&aacute;n desarrollando para Linux y da la
impresi&oacute;n de que les trae sin cuidado el resto del
mundo Unix, intente hacer que cambien de opini&oacute;n.
d39 3
a41 3
La <strong>COMUNICACI&Oacute;N</strong> es lo que marca la
diferencia entre un porte con &eacute;xito y un porte que
tarde o temprano ser&aacute; abandonado por todos.
d44 4
a47 5
Antes que nada eche una hojeada a la informaci&oacute;n sobre
portes en esta p&aacute;gina y luego lea los documentos a los
que se hace referencia, especialmente a la
<a href="checklist.html">lista de comprobaci&oacute;n</a> de
portes de OpenBSD.
d50 2
a51 2
&iexcl;Haga pruebas una y otra vez! &nbsp;&nbsp;y,
finalmente...  &iexcl;vuelva a repasarlas!
d54 6
a59 7
Env&iacute;e el porte.  Haga un archivo comprimido con tar y
gzip del directorio del porte.  Lo puede poner en un servidor
p&uacute;blico de FTP o HTTP y enviar la direcci&oacute;n de
&eacute;ste a 
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>, o
enviarlo directamente a esta direcci&oacute;n con codificado
MIME.  Elija el m&eacute;todo que m&aacute;s le convenga.
d61 2
a62 2
<h3><font color="#0000e0">&Iacute;ndice de
documentaci&oacute;n para portar programas</font></h3>
d66 1
a66 2
<li><a href="#Policy">Pol&iacute;tica sobre portes de
OpenBSD</a></li>
d76 2
a77 2
<li><a href="checklist.html">Lista de comprobaci&oacute;n</a>
de portes de OpenBSD.
d80 7
a86 8
Contiene la informaci&oacute;n sobre la infraestructura de los
portes que se incluye al final de los ficheros
<em>Makefile</em> de cada porte.  Todav&iacute;a hay algunos
comentarios al inicio del mismo fichero, pero la mayor parte
de la informaci&oacute;n &uacute;til est&aacute; documentada.
<li>Algunas diferencias con otros sistemas de portes de BSD,
sobre todo un sumario de las
<a href="../porting/es/diffs.html">diferencias de
d88 7
a94 7
<li><a href="../porting/es/libraries.html">C&oacute;mo usar
las bibliotecas compartidas en el sistema de portes de
OpenBSD</a>.  Las reglas que contiene son <strong>muy
importantes</strong> si se usan bibliotecas compartidas, en
especial si pkg_update funciona alg&uacute;n d&iacute;a...
<li><a href="audio-port.html">C&oacute;mo portar aplicaciones
de audio a OpenBSD</a>
d97 2
a98 2
describe la versi&oacute;n de NetBSD del sistema de portes de
FreeBSD, y es muy &uacute;til.
d106 2
a107 2
<h3><font color="#0000e0"><a name="Policy">Pol&iacute;tica
sobre portes de OpenBSD</a></font></h3>
d110 21
a130 27
<li>Debido a que <code>/usr/local</code> es un sistema de
archivo con frecuencia compartido entre varias m&aacute;quinas
mediante NFS, OpenBSD NO usa <code>/usr/local/etc/rc.d</code>.
Por este motivo los ficheros de configuraci&oacute;n
espec&iacute;ficos de cada m&aacute;quina no se pueden guardar
en <code>/usr/local</code>, y por tanto <code>/etc</code> es
el repositorio central para los ficheros de
configuraci&oacute;n espec&iacute;ficos de cada
m&aacute;quina.  M&aacute;s a&uacute;n, la pol&iacute;tica de
OpenBSD es la de no actualizar nunca de forma
autom&aacute;tica los ficheros en <code>/etc</code>.  Los
portes que necesitan alg&uacute;n tipo de configuraci&oacute;n
de arranque deben avisar al administrador del sistema de lo
que &eacute;ste debe hacer en lugar de instalar ficheros a
ciegas.

<li>Las p&aacute;ginas de manual en OpenBSD NO est&aacute;n
comprimidas.

<li>OpenBSD NO requiere <code>-lcrypt</code>.<br>
El cifrado con DES es parte del <code>libc</code>
t&iacute;pico.

<li>OpenBSD tiene una fuerte orientaci&oacute;n hacia la
seguridad.  Se aconseja leer y asimilar la
<a href="#Security">secci&oacute;n sobre seguridad</a> en esta
p&aacute;gina.
d133 10
a142 11
<code>&#36;OpenBSD&#36;</code> al fichero de Makefile.  Si
importa un porte desde otro sistema, aseg&uacute;rese de que
tambi&eacute;n conserva la marca en el fichero Makefile.  En
el caso de que el porte se haga desde FreeBSD substituya la
marca de FreeBSD <code>&#36;Id&#36;</code> por la marca
<code>&#36;FreeBSD&#36;</code>.

<li>El objetivo a alcanzar es que todas las aplicaciones
portadas tengan soporte en OpenBSD.  Para conseguirlo
<strong>debe</strong> informar ampliamente sobre cualquier
parche para OpenBSD al mantenedor de la aplicaci&oacute;n.
d146 2
a147 2
<h3><font color="#0000e0"><a name="Security">Recomendaciones
de seguridad</a></font></h3>
d149 4
a152 5
Existen muchos problemas de seguridad a los que debemos
prestar una atenci&oacute;n especial.  Si no se est&aacute;
absolutamente seguro de lo que se est&aacute; haciendo, por
favor pida ayuda a la lista de correo de
<a href="mailto:ports@@openbsd.org">portes</a>.
d155 3
a157 3
<li><em>NO</em> use c&oacute;digo en estado alpha o beta
cuando est&eacute; creando un porte.  Use la revisi&oacute;n o
versi&oacute;n m&aacute;s actual.
d160 5
a164 5
deber&iacute;a ser escaneado en busca de desbordamientos en la
memoria intermedia (&quot;buffer overflows&quot;),
especialmente en el caso de utilizaci&oacute;n insegura de
<code>strcat/strcpy/strcmp/sprintf</code>.  Como regla
general, <code>sprintf</code> se debe substituir siempre con
d167 6
a172 7
<li>No use nunca nombres de ficheros en lugar de seguridad
real.  Existen numerosas condiciones de carrera para las que
no se tiene un debido control.  Por ejemplo, un atacante que
ya haya obtenido privilegios de usuario en sus m&aacute;quinas
puede substituir ficheros en <code>/tmp</code> con enlaces
simb&oacute;licos a ficheros m&aacute;s estrat&eacute;gicos,
como <code>/etc/master.passwd</code>.
d175 9
a183 10
<code>fopen</code> como <code>freopen</code> <strong>generan
un nuevo fichero o abren ficheros ya existentes</strong> con
permisos para escritura.  Un atacante puede crear un enlace
simb&oacute;lico desde <code>/etc/master.passwd</code> a
<code>/tmp/addrpool_dump</code>.  En cuanto Vd. lo abra, el
fichero de su contrase&ntilde;a ser&aacute; filtrado.
S&iacute;, incluso con un <code>unlink</code> antes, que tan
s&oacute;lo minimizar&iacute;a el riesgo.  Use
<code>open</code> con <code>O_CREATIO_EXCL</code> y
<code>fdopen</code> en lugar de lo anterior.
d186 47
a232 52
<code>mktemp</code>.  Haga caso a los avisos del enlazador de
bsd sobre su uso.  <strong>Se deben solucionar</strong>.  Esto
no es tan sencillo como <code>s/mktemp/mkstemp/g</code>.  <br>
Para m&aacute;s indicaciones sobre este respecto vaya a la
p&aacute;gina de manual de <code>mktemp(3)</code> en
OpenBSD-current.  Un ejemplo de c&oacute;digo correcto que use
<code>mkstemp</code> puede ser el de los fuentes de
<code>ed</code> o <code>mail</code>.  Se puede encontrar un
tipo poco usual de c&oacute;digo que use correctamente
<code>mktemp</code> en el porte <code>rsync</code>.

<li>Que lo pueda leer no implica que lo deba leer.  Un agujero
muy conocido de esta naturaleza era el del problema con
<code>startx</code>.  Al ser un programa setuid, se
pod&iacute;a ejecutar con cualquier fichero como gui&oacute;n
(&quot;script&quot;).  Si el fichero no era un gui&oacute;n
v&aacute;lido del int&eacute;rprete de &oacute;rdenes
(&quot;shell&quot;), le segu&iacute;a un mensaje de error
junto con la primera l&iacute;nea de error del fichero, sin
comprobar m&aacute;s permisos.  Considerando que los ficheros
shadow passwd a menudo comienzan con una entrada de root,
obtener esta primera l&iacute;nea era bastante &uacute;til
para un atacante.  No abra un fichero y a continuaci&oacute;n
ejecute <code>fstat</code> en el descriptor abierto para
comprobar lo podr&iacute;a haber abierto (o el atacante
jugar&aacute; con <code>/dev/rst0</code> y rebobinar&aacute;
su cinta); &aacute;bralo con el uid/gid/grouplist correcto.

<li>No use nada que cree un proceso hijo de una shell en
programas setuid antes de haber eliminado sus privilegios.
Esto incluye <code>popen</code> y <code>system</code>.  En su
lugar use <code>fork</code>, <code>pipe</code> y
<code>execve</code>.

<li>Pase descriptores abiertos en lugar de nombres de archivos
a otros programas para evitar condiciones de carrera.  Aun en
el caso de que un programa no acepte descriptores de ficheros,
puede usar <code>/dev/fd/0</code>.

<li>Los derechos de acceso van adjuntos a los descriptores de
ficheros.  Si necesita derechos setuid para abrir un fichero,
abra ese fichero y elimine sus privilegios.  Esto es un arma
de doble filo:  incluso despu&eacute;s de haber eliminado sus
privilegios, deber&aacute; observar esos descriptores.

<li>Evite root setuid siempre que pueda.  En principio puede
hacer cualquier cosa, pero los derechos de root se necesitan
en raras ocasiones, tal vez excepto para crear portes de
&quot;socket&quot; con un n&uacute;mero por debajo de 1024.
En este caso tal vez sea mejor controlarlo con
<code>inetd</code> y simplemente a&ntilde;adir las entradas
relevantes a <code>inetd.conf</code>.  Debe conocer el
d234 2
a235 3
&quot;d&aelig;mons&quot;.  Se podr&iacute;a decir que no se
tienen programas setuid comerciales si no se sabe c&oacute;mo
hacerlo.
d238 42
a279 50
espec&iacute;ficos que necesitan los programas setgid, la
mayor&iacute;a de ficheros no tienen permisos de escritura
para grupo.  Por tanto, un problema de seguridad en un
programa setgid no comprometer&aacute; tanto su sistema;  con
s&oacute;lo derechos de grupo, lo peor que podr&aacute; hacer
un atacante es cambiar la tabla de puntuaci&oacute;n de un
juego o algo parecido.  Vea el porte <code>xkobo</code> como
un ejemplo de un cambio de este tipo.

<li>No conf&iacute;e en ficheros con permisos de escritura
para grupo.  Aunque hayan pasado una auditor&iacute;a, los
programas setgid no se perciben como un agujero de seguridad
en potencia.  Por lo tanto, cualquier cosa que pueda ser
falsificada no deber&iacute;a ser considerarada como
informaci&oacute;n reservada.

<li>&iexcl;No conf&iacute;e en su entorno!  Esto incluye cosas
tan sencillas como su <code>PATH</code> (nunca use
<code>system</code> con un nombre no cualificado y evite
<code>execvp</code>), pero tampoco de entornos menos obvios
como su <code>locale</code>, <code>timezone</code>,
<code>termcap</code> y otros.  <strong>Nunca</strong> use
<code>system</code> en programas privilegiados;  en su lugar
cree su propia orden de l&iacute;nea, un entorno controlado, y
una llamada directa a <code>execve</code>.  La p&aacute;gina
de manual de <code>perlsec</code> es una buena tutorial sobre
estos problemas.

<li>Nunca use guiones de ejecuci&oacute;n del
int&eacute;rprete de &oacute;rdenes (&quot;shell
scripts&quot;) setuid.  &Eacute;stos son inseguros por
definici&oacute;n.  Envu&eacute;lvalos dentro de c&oacute;digo
C que asegure un entorno apropiado.  Por otra parte, las
caracter&iacute;sticas de OpenBSD incluyen guiones de perl
seguros.

<li>Tenga cuidado con el cargador din&aacute;mico.  Si
est&aacute; ejecutando setuid s&oacute;lo ejecutar&aacute;
bibliotecas que hayan sido escaneadas con
<code>ldconfig</code>.  Setgid no basta.

<li>Las bibliotecas din&aacute;micas son complicadas.  El
c&oacute;digo C++ presenta un problema parecido.
B&aacute;sicamente, las bibliotecas pueden tomar alguna
acci&oacute;n bas&aacute;ndose en su entorno antes incluso de
que su programa principal haya podido comprobar su estado
setuid.  OpenBSD <code>issetugid</code> trata este problema
desde el punto de vista del escritor de bibliotecas.  No
intente portar bibliotecas a menos que conozca este tema a la
perfecci&oacute;n.
d287 2
a288 3
<li><code>__OpenBSD__</code> se deber&iacute;a usar con
cuentagotas o mejor no usarlo en absoluto.  Construcciones
como
d294 17
a310 19
son a menudo inapropiadas.  No a&ntilde;ada
<code>__OpenBSD__</code> a &eacute;stas a ciegas.  En lugar de
esto, intente imaginar qu&eacute; es lo que est&aacute;
ocurriendo y qu&eacute; es lo que se necesita.  Las
p&aacute;ginas de manual son de gran utilidad para estos
casos, ya que incluyen comentarios de tipo historial en los
que se menciona cu&aacute;ndo una caracter&iacute;stica
particular se integr&oacute; en <code>BSD</code>.  Contrastar
el valor num&eacute;rico de <code>BSD</code> con el de las
versiones conocidas es por lo general la forma correcta de
hacerlo.  Vea 
<a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/Packages.txt">the NetBSD package guide</a>
para obtener m&aacute;s informaci&oacute;n al respecto.

<li>Definir <code>BSD</code> no es una buena idea, al
contrario.  Intente incluir <code>sys/parm.h</code>.  Esto no
s&oacute;lo define <code>BSD</code>, sino que tambi&eacute;n
le da un valor apropiado.  El fragmento de c&oacute;digo
correcto deber&iacute;a ser as&iacute;:
d318 7
a324 8
<li>Base sus comprobaciones en las caracter&iacute;sticas, no
en sistemas operativos espec&iacute;ficos.  A la larga es
mucho mejor comprobar si <code>tcgetattr</code> funciona que
si est&aacute; funcionando en BSD 4.3 o posterior, o en
SystemVR4.  Este tipo de pruebas s&oacute;lo confunden.  La
manera de hacerlas es, por ejemplo, comprob&aacute;ndolo para
un sistema en particular, configurar los ficheros
<code>define</code> con <code>HAVE_TCGETATTR</code>, y a
d326 3
a328 4
t&eacute;cnica separa las comprobaciones de
caracter&iacute;sticas de los sistemas operativos
espec&iacute;ficos.  De forma r&aacute;pida, otro portado
puede as&iacute; simplemente a&ntilde;adir todas las
d330 4
a333 5
Tambi&eacute;n es posible escribirlo o a&ntilde;adirlo a un
gui&oacute;n de configuraci&oacute;n para comprobar esa
caracter&iacute;stica y a&ntilde;adirla de modo
autom&aacute;tico.  Como un ejemplo de lo que no se debe
hacer, compruebe los fuentes de nethack 3.2.2: asume un
d335 31
a365 35
mayor&iacute;a de éstas est&aacute;n obsoletas y ya no
reflejan la realidad:  las funciones POSIX son m&aacute;s
&uacute;tiles que las viejas diferencias entre BSD y SystemV,
hasta el punto que algunas funciones bsd tradicionales
s&oacute;lo conservan el soporte mediante bibliotecas de
compatibilidad.

<li>Evite incluir ficheros que incluyan otras inclusiones
que...  Primero, porque no es eficiente.  Su proyecto
acabar&aacute; incluyendo un fichero que incluya todo.
Tambi&eacute;n, porque hace que algunos problemas sean
dif&iacute;ciles de solucionar.  Se hace m&aacute;s
dif&iacute;cil <em>no</em> incluir un fichero particular en un
momento dado.

<li>Evite macros estrafalarias.  No definir una macro que fue
definida por un fichero de cabecera es una mala idea.  Definir
macros para obtener un comportamiento espec&iacute;fico de un
fichero <code>include</code> tambi&eacute;n es una mala idea:
los modos de compilaci&oacute;n deber&iacute;an ser globales.
Si quiere obtener un comportamiento POSIX d&iacute;galo, y
a&ntilde;ada <code>#define POSIX_C_SOURCE</code> en todo el
proyecto, no s&oacute;lo cuando lo crea conveniente.

<li>Nunca escriba prototipos de funciones de sistema.  Todos
los sistemas modernos, incluido OpenBSD, tienen una
localizaci&oacute;n t&iacute;pica para estos prototipos.
Dichas localizaciones es probable que sean
<code>unistd.h</code>, <code>fcntl.h</code>, o
<code>termios.h</code> entre otras.  La p&aacute;gina de
manual suele indicar d&oacute;nde se puede encontrar el
prototipo.  Es posible que necesite otras cuantas macros de
<code>HAVE_XXX</code> para conseguir el fichero correcto.  No
se preocupe por incluir el mismo fichero dos veces, los
ficheros <code>include</code> tienen m&eacute;todos de
d368 17
a384 20
Si alg&uacute;n sistema defectuoso necesita que escriba el
prototipo, no lo imponga en otros sistemas.  El uso de
prototipos propios no funcionar&aacute; porque pueden usar
tipos que son equivalentes en su sistema, pero no son
portables a otros sistemas (<code>unsigned long</code> en
lugar de <code>size_t</code>), o resultar&aacute;n en estados
incorrectos de <code>const</code>.  Adem&aacute;s, algunos
compiladores como el gcc propio de OpenBSD, pueden hacer un
trabajo mejor como algunas funciones muy frecuentes como
<code>strlen</code> si incluye el fichero de cabecera
correcto.

<li>No use el nombre de una funci&oacute;n de sistema
t&iacute;pica para nada m&aacute;s.  Si quiere escribir su
propia funci&oacute;n, d&eacute;le su propio nombre, y llame a
esa funci&oacute;n en todas partes.  Si desea volver a la
funci&oacute;n de sistema por definici&oacute;n, s&oacute;lo
tiene que comentar su c&oacute;digo y definir su propio nombre
en la funci&oacute;n del sistema.  No lo haga de otro modo.
El c&oacute;digo deber&iacute;a ser del siguiente modo
d411 1
a411 2
<h3><font color="#0000e0"><a name="Other">Otros
consejos</a></font></h3>
d414 15
a428 18
<li>Las versiones recientes de <code>bsd.port.mk</code>
definen el camino de los instaladores.  En particular, definen
que se busque en <code>/usr/bin</code> y <code>/bin</code>
<em>antes que</em> <code>/usr/local/bin</code> y
<code>/usr/X11R6/bin</code>.

<li><em>NO</em> genere bibliotecas compartidas si se encuentra
definido <code>${NO_SHARED_LIBS}</code> (cuidado, s&oacute;lo
se puede definir despu&eacute;s de incluir
<code>bsd.port.mk</code>).  Si su porte tiene un GNU
configure, a&ntilde;ada la l&iacute;nea <code>CONFIGURE_ARGS
+= ${CONFIGURE_SHARED}</code> al fichero Makefile.

<li>El uso de una funcionalidad que haya aparecido en una
versi&oacute;n reciente de <code>bsd.port.mk</code> es
aceptable, ya que se supone que los usuarios deben actualizar
sus &aacute;rboles de portes al completo, incluido
<code>bsd.port.mk</code>.  Ahora NEED_VERSION est&aacute;
d431 6
a436 7
<li>En OpenBSD <code>curses.h/libcurses/libtermlib</code> es
el &laquo;nuevo curses&raquo;.  Cambie lo siguiente:<br>
<code>ncurses.h ==&gt; curses.h</code><br> <code>-lncurses
==&gt; -lcurses</code><br> Se puede disponer del &laquo;viejo
(BSD) curses&raquo; definiendo <code>_USE_OLD_CURSES_</code>
antes de incluir <code>curses.h</code> (por lo general en un
fichero Makefile) y enlaz&aacute;ndolo con
d440 18
a457 21
<code>sgtty</code> de BSD al nuevo <code>tcgetattr</code> de
POSIX.  Evite el viejo estilo en c&oacute;digo nuevo.  Algo de
c&oacute;digo es posible que defina <code>tcgetattr</code>
como sin&oacute;nimo del viejo <code>sgtty</code>, pero esto
es como mucho una medida temporal en OpenBSD.  El
c&oacute;digo fuente de <code>xterm</code> es un buen ejemplo
de lo que no hay que hacer.  Intente obtener la funcionalidad
de su sistema correctamente:  lo que quiere es un tipo que
recuerde el estado de su terminal (probablemente typedef), una
funci&oacute;n que extraiga el estado actual, y una
funci&oacute;n que configure un nuevo estado.  Las funciones
que modifican este estado son m&aacute;s dif&iacute;ciles, ya
que tienden a variar seg&uacute;n el sistema.  Tampoco olvide
que tendr&aacute; que manejar casos en los que no est&eacute;
conectado a un terminal, y en los que se necesita poder
manejar se&ntilde;ales:  no s&oacute;lo de terminaci&oacute;n,
sino tambi&eacute;n de fondo (<code>SIGTSTP</code>).
Deber&iacute;a dejar siempre el terminal en un buen estado.
Lleve a cabo verificaciones en int&eacute;rpretes de
&oacute;rdenes (&quot;shells&quot;) m&aacute;s viejos como sh,
que no reconfiguren el terminal de ning&uacute;n modo al
d460 16
a475 19
<li>Los termcap/terminfo y curses m&aacute;s modernos, como
los que se incluyen con OpenBSD, incluyen secuencias
t&iacute;picas para el control de terminales de color.  Si es
posible deber&iacute;a usar &eacute;stas, volviendo a las
secuencias de color t&iacute;picas de ANSI en otros sistemas.
Sin embargo, las descripciones de algunos terminales
todav&iacute;a no se han actualizado, y es posible que
necesite poder especificar estas secuencias de modo manual.
&Eacute;ste es el modo en que lo hace vim.  Esto no es
estrictamente necesario.  Excepto en casos de programas
privilegiados, por lo general es posible anular una
definici&oacute;n termcap mediante la variable
<code>TERMCAP</code> y hacer que funcione correctamente.

<li>La sem&aacute;ntica de se&ntilde;ales es complicada, y
var&iacute;a de un sistema a otro.  Use <code>sigaction</code>
para asegurarse sem&aacute;nticas espec&iacute;ficas, junto
con otras llmadas al sistema cuya referencia puede encontrar
en las p&aacute;ginas de manual.
d485 1
a485 1
$Translation: porting.html,v 1.19 2002/07/09 09:59:44 horacio Exp $<br>
@


1.17
log
@
sync with badlands translation CVS
@
text
@d472 6
a477 4
<li>Si se apoya en una funci&oacute;n que apareci&oacute; en
una versi&oacute;n reciente de <code>bsd.port.mk</code> no
olvide a&ntilde;adir una l&iacute;nea <code>NEED_VERSION =
x.yy</code> en el fichero Makefile.
d539 2
a540 2
Originally [OpenBSD: porting.html,v 1.43 2002/06/18 01:44:06 jsyn Exp ]<br>
$Translation: porting.html,v 1.18 2002/06/29 11:22:23 horacio Exp $<br>
@


1.16
log
@
sync with badlands translation CVS
@
text
@d17 1
a17 1
<img height="30" width="141" src="../images/smalltitle.gif" alt="[OpenBSD]" >
d537 2
a538 2
Originally [OpenBSD: porting.html,v 1.42 2002/05/12 17:34:30 pvalchev Exp ]<br>
$Translation: porting.html,v 1.17 2002/05/14 08:57:41 horacio Exp $<br>
@


1.15
log
@
sync with badlands translation CVS.
@
text
@d5 1
d22 4
a25 3
Suponiendo que ya hubiera compilado su programa favorito en su sistema
OpenBSD y que quisiera compartir su esfuerzo convirti&eacute;ndolo en
un porte, &iquest;c&oacute;mo podr&iacute;a hacerlo?
d30 10
a39 9
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> por si alguien
ya estuviera trabajando en lo mismo.  <em>Comun&iacute;queselo al autor
original del programa</em>, e incluya los problemas que pueda
encontrar.  Si aparece alg&uacute;n error en la informaci&oacute;n
sobre la licencia h&aacute;gaselo saber.  Si tuvo que evitar bucles
para crear el porte, d&iacute;gale qu&eacute; es lo que debe
solucionar.  Si s&oacute;lo est&aacute;n desarrollando para Linux y da
la impresi&oacute;n de que les trae sin cuidado el resto del mundo
Unix, intente hacer que cambien de opini&oacute;n.
d42 3
a44 3
La <strong>COMUNICACI&Oacute;N</strong> es lo que marca la diferencia
entre un porte con &eacute;xito y un porte que tarde o temprano
ser&aacute; abandonado por todos.
d47 5
a51 4
Antes que nada eche una hojeada a la informaci&oacute;n sobre portes en
esta p&aacute;gina y luego lea los documentos a los que se hace
referencia, especialmente a la <a href="checklist.html">lista de
comprobaci&oacute;n</a> de portes de OpenBSD.
d54 2
a55 2
&iexcl;Haga pruebas una y otra vez! &nbsp;&nbsp;y, finalmente...
&iexcl;vuelva a repasarlas!
d58 7
a64 6
Env&iacute;e el porte.  Haga un archivo comprimido con tar y gzip del
directorio del porte.  Lo puede poner en un servidor p&uacute;blico de
FTP o HTTP y enviar la direcci&oacute;n de &eacute;ste a 
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>, o enviarlo
directamente a esta direcci&oacute;n con codificado MIME.  Elija el
m&eacute;todo que m&aacute;s le convenga.
d66 2
a67 2
<h3><font color="#0000e0">&Iacute;ndice de documentaci&oacute;n para
portar programas</font></h3>
d71 2
a72 1
<li><a href="#Policy">Pol&iacute;tica sobre portes de OpenBSD</a></li>
d106 1
a106 1
<li>La <a href="http://www.freebsd.org/porters-handbook/index.html">Gu&iacute;a de Portadores de FreeBSD</a>.
d113 2
a114 2
<h3><font color="#0000e0"><a name="Policy">Pol&iacute;tica sobre portes
de OpenBSD</a></font></h3>
d117 15
a131 13
<li>Debido a que <code>/usr/local</code> es un sistema de archivo con
    frecuencia compartido entre varias m&aacute;quinas mediante NFS,
    OpenBSD NO usa <code>/usr/local/etc/rc.d</code>.  Por este motivo
    los ficheros de configuraci&oacute;n espec&iacute;ficos de cada
    m&aacute;quina no se pueden guardar en <code>/usr/local</code>, y
    por tanto <code>/etc</code> es el repositorio central para los
    ficheros de configuraci&oacute;n espec&iacute;ficos de cada
    m&aacute;quina.  M&aacute;s a&uacute;n, la pol&iacute;tica de
    OpenBSD es la de no actualizar nunca de forma autom&aacute;tica los
    ficheros en <code>/etc</code>.  Los portes que necesitan
    alg&uacute;n tipo de configuraci&oacute;n de arranque deben avisar
    al administrador del sistema de lo que &eacute;ste debe hacer en
    lugar de instalar ficheros a ciegas.
d134 1
a134 1
    comprimidas.
d136 8
a143 7
<li>OpenBSD NO requiere <code>-lcrypt</code>.
    <br>
    El cifrado con DES es parte del <code>libc</code> t&iacute;pico.

<li>OpenBSD tiene una fuerte orientaci&oacute;n hacia la seguridad.
    Se aconseja leer y comprender la <a href="#security">secci&oacute;n
    sobre seguridad</a> en esta p&aacute;gina.
d146 11
a156 11
    <code>&#36;OpenBSD&#36;</code> al fichero de Makefile.  Si importa
    un porte desde otro sistema, aseg&uacute;rese de que tambi&eacute;n
    conserva la marca en el fichero Makefile.  En el caso de que el
    porte se haga desde FreeBSD substituya la marca de FreeBSD
    <code>&#36;Id&#36;</code> por la marca
    <code>&#36;FreeBSD&#36;</code>.

<li>El objetivo a alcanzar es que todas las aplicaciones portadas
    tengan soporte en OpenBSD.  Para conseguirlo <strong>debe</strong>
    informar ampliamente sobre cualquier parche para OpenBSD al
    mantenedor de la aplicaci&oacute;n.
d160 2
a161 2
<h3><font color="#0000e0"><a name="Security">Recomendaciones de
seguridad</a></font></h3>
d163 5
a167 4
Existen muchos problemas de seguridad a los que debemos prestar una
atenci&oacute;n especial.  Si no se est&aacute; absolutamente seguro de
lo que se est&aacute; haciendo, por favor pida ayuda a la lista de
correo de <a href="mailto:ports@@openbsd.org">portes</a>.
d170 3
a172 3
<li><em>NO</em> use c&oacute;digo en estado alpha o beta cuando
    est&eacute; creando un porte.  Use la revisi&oacute;n o
    versi&oacute;n m&aacute;s actual.
d175 14
a188 14
    deber&iacute;a ser escaneado en busca de desbordamientos en la
    memoria intermedia (&quot;buffer overflows&quot;), especialmente en
    el caso de utilizaci&oacute;n insegura de
    <code>strcat/strcpy/strcmp/sprintf</code>.  Como regla general,
    <code>sprintf</code> se debe substituir siempre con
    <code>snprintf</code>.

<li>No use nunca nombres de ficheros en lugar de seguridad real.
    Existen numerosas condiciones de carrera para las que no se tiene
    un debido control.  Por ejemplo, un atacante que ya haya obtenido
    privilegios de usuario en sus m&aacute;quinas puede substituir
    ficheros en <code>/tmp</code> con enlaces simb&oacute;licos a
    ficheros m&aacute;s estrat&eacute;gicos, como
    <code>/etc/master.passwd</code>.
d191 10
a200 10
    <code>fopen</code> como <code>freopen</code> <strong>generan un
    nuevo fichero o abren ficheros ya existentes</strong> con permisos
    para escritura.  Un atacante puede crear un enlace simb&oacute;lico
    desde <code>/etc/master.passwd</code> a
    <code>/tmp/addrpool_dump</code>.  En cuanto Vd. lo abra, el fichero
    de su contrase&ntilde;a ser&aacute; filtrado.  S&iacute;, incluso
    con un <code>unlink</code> antes, que tan s&oacute;lo
    minimizar&iacute;a el riesgo.  Use <code>open</code> con
    <code>O_CREATIO_EXCL</code> y <code>fdopen</code> en lugar de lo
    anterior.
d203 108
a310 100
    <code>mktemp</code>.  Haga caso a los avisos del enlazador de bsd
    sobre su uso.  <strong>Se deben solucionar</strong>.  Esto no es
    tan sencillo como <code>s/mktemp/mkstemp/g</code>.  <br> Para
    m&aacute;s indicaciones sobre este respecto vaya a la p&aacute;gina
    de manual de <code>mktemp(3)</code> en OpenBSD-current.  Un ejemplo
    de c&oacute;digo correcto que use <code>mkstemp</code> puede ser el
    de los fuentes de <code>ed</code> o <code>mail</code>.  Se puede
    encontrar un tipo poco usual de c&oacute;digo que use correctamente
    <code>mktemp</code> en el porte <code>rsync</code>.

<li>Que lo pueda leer no implica que lo deba leer.
    Un agujero muy conocido de esta naturaleza era el del problema con
    <code>startx</code>.  Al ser un programa setuid, se pod&iacute;a
    ejecutar con cualquier fichero como gui&oacute;n
    (&quot;script&quot;).  Si el fichero no era un gui&oacute;n
    v&aacute;lido del int&eacute;rprete de &oacute;rdenes
    (&quot;shell&quot;), le segu&iacute;a un mensaje de error junto con
    la primera l&iacute;nea de error del fichero, sin comprobar
    m&aacute;s permisos.  Considerando que los ficheros shadow passwd a
    menudo comienzan con una entrada de root, obtener esta primera
    l&iacute;nea era bastante &uacute;til para un atacante.  No abra un
    fichero y a continuaci&oacute;n ejecute <code>fstat</code> en el
    descriptor abierto para comprobar lo podr&iacute;a haber abierto (o
    el atacante jugar&aacute; con <code>/dev/rst0</code> y
    rebobinar&aacute; su cinta); &aacute;bralo con el uid/gid/grouplist
    correcto.

<li>No use nada que cree un proceso hijo de una shell en programas
    setuid antes de haber eliminado sus privilegios.  Esto incluye
    <code>popen</code> y <code>system</code>.  En su lugar use
    <code>fork</code>, <code>pipe</code> y <code>execve</code>.

<li>Pase descriptores abiertos en lugar de nombres de archivos a otros
    programas para evitar condiciones de carrera.  Aun en el caso de
    que un programa no acepte descriptores de ficheros, puede usar
    <code>/dev/fd/0</code>.

<li>Los derechos de acceso van adjuntos a los descriptores de ficheros.
    Si necesita derechos setuid para abrir un fichero, abra ese fichero
    y elimine sus privilegios.  Esto es un arma de doble filo:  incluso
    despu&eacute;s de haber eliminado sus privilegios, deber&aacute;
    observar esos descriptores.

<li>Evite root setuid siempre que pueda.
    En principio puede hacer cualquier cosa, pero los derechos de root
    se necesitan en raras ocasiones, tal vez excepto para crear portes
    de &quot;socket&quot; con un n&uacute;mero por debajo de 1024.  En
    este caso tal vez sea mejor controlarlo con <code>inetd</code> y
    simplemente a&ntilde;adir las entradas relevantes a
    <code>inetd.conf</code>.  Debe conocer el &quot;magic&quot;
    apropiado requerido para poder codificar &quot;d&aelig;mons&quot;.
    Se podr&iacute;a decir que no se tienen programas setuid
    comerciales si no se sabe c&oacute;mo hacerlo.

<li>Use setgid en lugar de setuid.
    Aparte de los ficheros espec&iacute;ficos que necesitan los
    programas setgid, la mayor&iacute;a de ficheros no tienen permisos
    de escritura para grupo.  Por tanto, un problema de seguridad en un
    programa setgid no comprometer&aacute; tanto su sistema;  con
    s&oacute;lo derechos de grupo, lo peor que podr&aacute; hacer un
    atacante es cambiar la tabla de puntuaci&oacute;n de un juego o
    algo parecido.  Vea el porte <code>xkobo</code> como un ejemplo de
    un cambio de este tipo.

<li>No conf&iacute;e en ficheros con permisos de escritura para grupo.
    Aunque hayan pasado una auditor&iacute;a, los programas setgid no
    se perciben como un agujero de seguridad en potencia.  Por lo
    tanto, cualquier cosa que pueda ser falsificada no deber&iacute;a
    ser considerarada como informaci&oacute;n reservada.

<li>&iexcl;No conf&iacute;e en su entorno!
    Esto incluye cosas tan sencillas como su <code>PATH</code> (nunca
    use <code>system</code> con un nombre no cualificado y evite
    <code>execvp</code>), pero tampoco de entornos menos obvios como su
    <code>locale</code>, <code>timezone</code>, <code>termcap</code> y
    otros.  <strong>Nunca</strong> use <code>system</code> en programas
    privilegiados;  en su lugar cree su propia orden de l&iacute;nea,
    un entorno controlado, y una llamada directa a <code>execve</code>.
    La p&aacute;gina de manual de <code>perlsec</code> es una buena
    tutorial sobre estos problemas.

<li>Nunca use guiones del int&eacute;rprete de &oacute;rdenes
    (&quot;shell scripts&quot;) setuid.  &Eacute;stos son inseguros por
    definici&oacute;n.  Envu&eacute;lvalos dentro de c&oacute;digo C
    que asegure un entorno apropiado.  Por otra parte, las
    caracter&iacute;sticas de OpenBSD incluyen guiones de perl seguros.

<li>Tenga cuidado con el cargador din&aacute;mico.
    Si est&aacute; ejecutando setuid s&oacute;lo ejecutar&aacute;
    bibliotecas que hayan sido escaneadas con <code>ldconfig</code>.
    Setgid no basta.

<li>Las bibliotecas din&aacute;micas son complicadas.
    El c&oacute;digo C++ presenta un problema parecido.
    B&aacute;sicamente, las bibliotecas pueden tomar alguna
    acci&oacute;n bas&aacute;ndose en su entorno antes incluso de que
    su programa principal haya podido comprobar su estado setuid.
    OpenBSD <code>issetugid</code> trata este problema desde el punto
    de vista del escritor de bibliotecas.  No intente portar
    bibliotecas a menos que conozca este tema a la perfecci&oacute;n.
d318 3
a320 2
<li><code>__OpenBSD__</code> se deber&iacute;a usar con cuentagotas o
    mejor no usarlo en absoluto.  Construcciones como
d326 19
a344 18
    son a menudo inapropiadas.  No a&ntilde;ada
    <code>__OpenBSD__</code> a &eacute;stas a ciegas.  En lugar de
    esto, intente imaginar qu&eacute; es lo que est&aacute; ocurriendo
    y qu&eacute; es lo que se necesita.  Las p&aacute;ginas de manual
    son de gran utilidad para estos casos, ya que incluyen comentarios
    de tipo historial en los que se menciona cu&aacute;ndo una
    caracter&iacute;stica particular se integr&oacute; en
    <code>BSD</code>.  Contrastar el valor num&eacute;rico de
    <code>BSD</code> con el de las versiones conocidas es por lo
    general la forma correcta de hacerlo.  Vea 
    <a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/Packages.txt">the NetBSD package guide</a>
    para obtener m&aacute;s informaci&oacute;n al respecto.

<li>Definir <code>BSD</code> no es una buena idea, al contrario.
    Intente incluir <code>sys/parm.h</code>.  Esto no s&oacute;lo
    define <code>BSD</code>, sino que tambi&eacute;n le da un valor
    apropiado.  El fragmento de c&oacute;digo correcto deber&iacute;a
    ser as&iacute;:
d352 77
a428 71
<li>Base sus comprobaciones en las caracter&iacute;sticas, no en
    sistemas operativos espec&iacute;ficos.  A la larga es mucho mejor
    comprobar si <code>tcgetattr</code> funciona que si est&aacute;
    funcionando en BSD 4.3 o posterior, o en SystemVR4.  Este tipo de
    pruebas s&oacute;lo confunden.  La manera de hacerlas es, por
    ejemplo, comprob&aacute;ndolo para un sistema en particular,
    configurar los ficheros <code>define</code> con
    <code>HAVE_TCGETATTR</code>, y a continuaci&oacute;n proceder con
    el sistema siguiente.  Esta t&eacute;cnica separa las
    comprobaciones de caracter&iacute;sticas de los sistemas operativos
    espec&iacute;ficos.  De forma r&aacute;pida, otro portado puede
    as&iacute; simplemente a&ntilde;adir todas las definiciones
    <code>-DHAVE_XXX</code> en el fichero Makefile.  Tambi&eacute;n es
    posible escribirlo o a&ntilde;adirlo a un gui&oacute;n de
    configuraci&oacute;n para comprobar esa caracter&iacute;stica y
    a&ntilde;adirla de modo autom&aacute;tico.  Como un ejemplo de lo
    que no se debe hacer, compruebe los fuentes de nethack 3.2.2: asume
    un mont&oacute;n de cosas basadas en el tipo del sistema.  La
    mayor&iacute;a de éstas est&aacute;n obsoletas y ya no reflejan la
    realidad:  las funciones POSIX son m&aacute;s &uacute;tiles que las
    viejas diferencias entre BSD y SystemV, hasta el punto que algunas
    funciones bsd tradicionales s&oacute;lo conservan el soporte
    mediante bibliotecas de compatibilidad.

<li>Evite incluir ficheros que incluyan otras inclusiones que...
    Primero, porque no es eficiente.  Su proyecto acabar&aacute;
    incluyendo un fichero que incluya todo.  Tambi&eacute;n, porque
    hace que algunos problemas sean dif&iacute;ciles de solucionar.  Se
    hace m&aacute;s dif&iacute;cil <em>no</em> incluir un fichero
    particular en un momento dado.

<li>Evite macros estrafalarias.
    No definir una macro que fue definida por un fichero de cabecera es
    una mala idea.  Definir macros para obtener un comportamiento
    espec&iacute;fico de un fichero <code>include</code> tambi&eacute;n
    es una mala idea:  los modos de compilaci&oacute;n deber&iacute;an
    ser globales.  Si quiere obtener un comportamiento POSIX
    d&iacute;galo, y a&ntilde;ada <code>#define POSIX_C_SOURCE</code>
    en todo el proyecto, no s&oacute;lo cuando lo crea conveniente.

<li>Nunca escriba prototipos de funciones de sistema.
    Todos los sistemas modernos, incluido OpenBSD, tienen una
    localizaci&oacute;n t&iacute;pica para estos prototipos.  Dichas
    localizaciones es probable que sean <code>unistd.h</code>,
    <code>fcntl.h</code>, o <code>termios.h</code> entre otras.  La
    p&aacute;gina de manual suele indicar d&oacute;nde se puede
    encontrar el prototipo.  Es posible que necesite otras cuantas
    macros de <code>HAVE_XXX</code> para conseguir el fichero correcto.
    No se preocupe por incluir el mismo fichero dos veces, los ficheros
    <code>include</code> tienen m&eacute;todos de prevenci&oacute;n
    contra esto.
    <br>
    Si alg&uacute;n sistema defectuoso necesita que escriba el
    prototipo, no lo imponga en otros sistemas.  El uso de prototipos
    propios no funcionar&aacute; porque pueden usar tipos que son
    equivalentes en su sistema, pero no son portables a otros sistemas
    (<code>unsigned long</code> en lugar de <code>size_t</code>), o
    resultar&aacute;n en estados incorrectos de <code>const</code>.
    Adem&aacute;s, algunos compiladores como el gcc propio de OpenBSD,
    pueden hacer un trabajo mejor como algunas funciones muy frecuentes
    como <code>strlen</code> si incluye el fichero de cabecera
    correcto.

<li>No use el nombre de una funci&oacute;n de sistema t&iacute;pica
    para nada m&aacute;s.  Si quiere escribir su propia funci&oacute;n,
    d&eacute;le su propio nombre, y llame a esa funci&oacute;n en todas
    partes.  Si desea volver a la funci&oacute;n de sistema por
    definici&oacute;n, s&oacute;lo tiene que comentar su c&oacute;digo
    y definir su propio nombre en la funci&oacute;n del sistema.  No lo
    haga de otro modo.  El c&oacute;digo deber&iacute;a ser del
    siguiente modo
d459 26
a484 25
<li>Las versiones recientes de <code>bsd.port.mk</code> definen el
    camino de los instaladores.  En particular, definen que se busque
    en <code>/usr/bin</code> y <code>/bin</code> <em>antes que</em>
    <code>/usr/local/bin</code> y <code>/usr/X11R6/bin</code>.

<li><em>NO</em> genere bibliotecas compartidas si se encuentra definido
    <code>${NO_SHARED_LIBS}</code> (cuidado, s&oacute;lo se puede
    definir despu&eacute;s de incluir <code>bsd.port.mk</code>).  Si su
    porte tiene un GNU configure, a&ntilde;ada la l&iacute;nea
    <code>CONFIGURE_ARGS += ${CONFIGURE_SHARED}</code> al fichero
    Makefile.

<li>Si se apoya en una funci&oacute;n que apareci&oacute; en una
    versi&oacute;n reciente de <code>bsd.port.mk</code> no olvide
    a&ntilde;adir una l&iacute;nea <code>NEED_VERSION = x.yy</code> en
    el fichero Makefile.

<li>En OpenBSD <code>curses.h/libcurses/libtermlib</code> es el
    &laquo;nuevo curses&raquo;.  Cambie lo siguiente:<br>
    <code>ncurses.h ==&gt; curses.h</code><br>
    <code>-lncurses ==&gt; -lcurses</code><br>
    Se puede disponer del &laquo;viejo (BSD) curses&raquo; definiendo
    <code>_USE_OLD_CURSES_</code> antes de incluir
    <code>curses.h</code> (por lo general en un fichero Makefile) y
    enlaz&aacute;ndolo con <code>-locurses</code>.
d487 42
a528 39
    <code>sgtty</code> de BSD al nuevo <code>tcgetattr</code> de POSIX.
    Evite el viejo estilo en c&oacute;digo nuevo.  Algo de
    c&oacute;digo es posible que defina <code>tcgetattr</code> como
    sin&oacute;nimo del viejo <code>sgtty</code>, pero esto es como
    mucho una medida temporal en OpenBSD.  El c&oacute;digo fuente de
    <code>xterm</code> es un buen ejemplo de lo que no hay que hacer.
    Intente obtener la funcionalidad de su sistema correctamente:  lo
    que quiere es un tipo que recuerde el estado de su terminal
    (probablemente typedef), una funci&oacute;n que extraiga el estado
    actual, y una funci&oacute;n que configure un nuevo estado.  Las
    funciones que modifican este estado son m&aacute;s
    dif&iacute;ciles, ya que tienden a variar seg&uacute;n el sistema.
    Tampoco olvide que tendr&aacute; que manejar casos en los que no
    est&eacute; conectado a un terminal, y en los que se necesita poder
    manejar se&ntilde;ales:  no s&oacute;lo de terminaci&oacute;n, sino
    tambi&eacute;n de fondo (<code>SIGTSTP</code>).  Deber&iacute;a
    dejar siempre el terminal en un buen estado.  Lleve a cabo
    verificaciones en int&eacute;rpretes de &oacute;rdenes
    (&quot;shells&quot;) m&aacute;s viejos como sh, que no reconfiguren
    el terminal de ning&uacute;n modo al terminar un programa.

<li>Los termcap/terminfo y curses m&aacute;s modernos, como los que se
    incluyen con OpenBSD, incluyen secuencias t&iacute;picas para el
    control de terminales de color.  Si es posible deber&iacute;a usar
    &eacute;stas, volviendo a las secuencias de color t&iacute;picas de
    ANSI en otros sistemas.  Sin embargo, las descripciones de algunos
    terminales todav&iacute;a no se han actualizado, y es posible que
    necesite poder especificar estas secuencias de modo manual.
    &Eacute;ste es el modo en que lo hace vim.  Esto no es
    estrictamente necesario.  Excepto en casos de programas
    privilegiados, por lo general es posible anular una
    definici&oacute;n termcap mediante la variable <code>TERMCAP</code>
    y hacer que funcione correctamente.

<li>La sem&aacute;ntica de se&ntilde;ales es complicada, y var&iacute;a
    de un sistema a otro.  Use <code>sigaction</code> para asegurarse
    sem&aacute;nticas espec&iacute;ficas, junto con otras llmadas al
    sistema cuya referencia puede encontrar en las p&aacute;ginas de
    manual.
d537 2
a538 2
Originally [OpenBSD: porting.html,v 1.41 2002/02/18 23:40:18 rohee Exp ]<br>
$Translation: porting.html,v 1.16 2002/02/23 00:32:14 horacio Exp $<br>
@


1.14
log
@
sync with badlands translation CVS.
@
text
@d79 1
a79 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bsd.port.mk&sektion=5">bsd.port.mk(5)</a>.
d507 2
a508 2
Originally [OpenBSD: porting.html,v 1.40 2002/01/13 14:55:37 jufi Exp ]<br>
$Translation: porting.html,v 1.15 2002/01/13 22:01:05 horacio Exp $<br>
@


1.13
log
@
sync with badlands translation CVS.
@
text
@d9 1
a9 1
<meta name="copyright" content="Este documento es copyright 1997-2001 de OpenBSD">
d14 1
a14 1
<body text="#000000" bgcolor="#FFFFFF" link="#23238E">
d507 2
a508 2
Originally [OpenBSD: porting.html,v 1.39 2001/11/19 17:26:57 horacio Exp ]<br>
$Translation: porting.html,v 1.14 2001/11/19 18:15:08 horacio Exp $<br>
@


1.12
log
@
sync with badlands translation CVS.
@
text
@d9 1
a9 1
<meta name="copyright" content="Este documento es copyright 1997-1999 de OpenBSD">
d76 20
a95 5
<li>El fichero <code>/usr/share/mk/bsd.port.mk</code> es el makefile
    del sistema de portes que se incluye al final del makefile de cada
    porte individual.  Lea los comentarios que encontrar&aacute; al
    principio del makefile.  Describen muy bien las opciones para make.

d97 5
a101 17
    <a href="http://www.netbsd.org/Documentation/software/packages.html">NetBSD Package System</a>
    describe la versi&oacute;n de NetBSD del sistema de portes de
    FreeBSD, y es muy &uacute;til.

<li>La
    <a href="http://www.freebsd.org/porters-handbook/index.html">Gu&iacute;a de Portadores de FreeBSD</a>.
    Es la biblia para los portes en FreeBSD.

<li>La <a href="checklist.html">lista de comprobaci&oacute;n</a> de
    portes de OpenBSD.

<li>Algunas diferencias con otros systemas de portes BSD,
    en particular un sumario de 
    <a href="../porting/es/diffs.html">diferencias de infraestructura</a>.

<li><a href="audio-port.html">Portar aplicaciones de audio a OpenBSD</a>.

d103 1
a103 1
    <a href="mailto:ports@@openbsd.org">ports@@OpenBSD.org</a>.
d507 2
a508 2
Originally [OpenBSD: porting.html,v 1.37 2001/09/10 19:26:32 jufi Exp ]<br>
$Translation: porting.html,v 1.13 2001/09/19 18:18:43 horacio Exp $<br>
@


1.11
log
@
sync with badlands translation CVS.
@
text
@d9 1
a9 1
<meta name="copyright" content="Este documento es copyright 1997-1999 del proyecto OpenBSD">
d504 2
a505 2
Originally [OpenBSD: porting.html,v 1.36 2001/08/29 00:04:03 horacio Exp ]<br>
$Translation: porting.html,v 1.12 2001/08/29 09:59:57 horacio Exp $<br>
@


1.10
log
@
sync with badlands translation CVS.
@
text
@d504 2
a505 2
Originally [OpenBSD: porting.html,v 1.35 2001/07/27 23:42:52 naddy Exp ]<br>
$Translation: porting.html,v 1.11 2001/08/29 01:35:35 horacio Exp $<br>
@


1.9
log
@
Updates by Horacio.
@
text
@d10 1
a10 1
<title>C&oacute;mo Crear un Porte para OpenBSD</title>
d18 1
a18 1
<h2><font color="#e00000">C&oacute;mo Crear un Porte para
d61 13
a73 3
<p>
<h3><font color="#0000e0">Informaci&oacute;n Disponible sobre
C&oacute;mo Portar</font></h3>
d104 2
a105 2
<h3><font color="#0000e0">Pol&iacute;tica sobre Portes de
OpenBSD</font></h3>
d148 2
a149 2
<a name="security"></a>
<h3><font color="#0000e0">Recomendaciones de Seguridad</font></h3>
d293 2
a294 1
<h3><font color="#0000e0">Ayudas Generales para Portar</font></h3>
d426 2
a427 1
<h3><font color="#0000e0">Otras Ayudas</font></h3>
d504 2
a505 2
Originally [OpenBSD: porting.html,v 1.34 2001/05/13 20:16:52 jufi Exp ]<br>
$Translation: porting.html,v 1.10 2001/05/13 21:58:04 horacio Exp $<br>
@


1.8
log
@
Updates by Horacio.
@
text
@d492 2
a493 2
Originally [OpenBSD: porting.html,v 1.33 2001/05/12 12:36:21 naddy Exp ]<br>
$Translation: porting.html,v 1.9 2001/05/13 19:36:13 horacio Exp $<br>
@


1.7
log
@
Huge commit to bring the spanish pages back to life.
Sync with Badlands Translation CVS. Work by Horacio
@
text
@d5 3
a7 3
<meta name="resource-type" content="document">
<meta name="description" CONTENT="How to make an OpenBSD port">
<meta name="keywords" content="openbsd,ports">
d9 1
a9 1
<meta name="copyright" content="This document copyright 1997-1999 by the OpenBSD project">
d76 2
a77 2
<li>La secci&oacute;n 19.2.5 de la 
    <a href="http://www.freebsd.org/porters-handbook/index.html">Gu&iacute;a de FreeBSD</a>.
d492 2
a493 2
Originally [OpenBSD: porting.html,v 1.32 2000/09/12 00:16:17 deraadt Exp ]<br>
$Translation: porting.html,v 1.8 2000/09/24 22:32:20 horacio Exp $<br>
@


1.6
log
@Updating [es]
@
text
@d492 3
a494 3
Originally [OpenBSD: porting.html,v 1.31 2000/07/10 19:35:43 jufi Exp ]<br>
$Translation: porting.html,v 1.7 2000/07/07 00:37:46 horacio Exp $<br>
$OpenBSD: porting.html,v 1.5 2000/07/15 17:35:36 wvdputte Exp $
@


1.5
log
@
Sync with Badlands Translation CVS. Work by Horacio.
@
text
@d492 1
a492 1
Originally [OpenBSD: porting.html,v 1.30 2000/06/30 21:51:02 espie Exp ]<br>
d494 1
a494 1
$OpenBSD$
@


1.4
log
@Sync with Badlands Translation CVS. Work by Horacio.
@
text
@d10 1
a10 1
<title>Crear un Porte para OpenBSD</title>
d18 2
a19 1
<h2><font color="#e00000">Crear un Porte para OpenBSD</font></h2>
d21 3
a23 2
Suponiendo que ya haya compilado su programa favorito en su sistema OpenBSD y
quiera compartir su esfuerzo convirtiéndolo en un porte.  ¿Cómo hacerlo?
d26 11
a36 10
La cosa más importante que puede hacer es <strong>comunicarlo</strong>.
Pregunte en <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> si
alguien ya está trabajando en lo mismo.
<em>Comuníqueselo al autor original del programa</em>, e incluya los
problemas que pueda encontrar.
Si aparece algún error en la información sobre la licencia hágaselo saber.
Si tuvo que evitar bucles para crear el porte, dígale qué es lo que debe
solucionar.
Si sólo están desarrollando para Linux y da la impresión de que les trae sin
cuidado el resto del mundo Unix, intente hacer que cambien de opinión.
d39 3
a41 2
La <strong>COMUNICACIÓN</strong> es lo que marca la diferencia entre un porte
con éxito y un porte que tarde o temprano será abandonado por todos.
d44 4
a47 3
Antes que nada eche una hojeada a la información sobre portes en esta página
y luego lea los documentos a los que se hace referencia, especialmente a la
<a href="checklist.html">lista de comprobación</a> de portes de OpenBSD.
d50 2
a51 1
¡Haga pruebas una y otra vez, y finalmente vuelva a repasarlas!
d54 6
a59 6
Envíe el porte.  Haga un archivo comprimido con tar y gzip del directorio del
porte.
Lo puede poner en un servidor público de FTP o HTTP y enviar la dirección de
éste a <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>, o enviarlo
directamente a esta dirección con codificado MIME.
Elija el método que más le convenga.
d62 2
a63 1
<h3><font color="#0000e0">Información Disponible sobre Cómo Portar</font></h3>
d66 20
a85 21
<li>El fichero <code>/usr/share/mk/bsd.port.mk</code> es el makefile del
    sistema de portes que se incluye al final del makefile de cada porte
    individual.
    Lea los comentarios que encontrará al principio del makefile.
    Describen muy bien las opciones para make.

<li>La documentación 
    <a href="http://www.netbsd.org/Documentation/software/packages.html">NetBSD
    Package System</a> describe la versión de NetBSD del sistema de portes de
    FreeBSD, y es muy útil.

<li>La sección 19.2.5 de la 
    <a href="http://www.freebsd.org/handbook/porting.html">Guía de
    FreeBSD</a>.  Es la biblia para los portes en FreeBSD.

<li>La <a href="checklist.html">lista de comprobación</a> de portes de
    OpenBSD.

<li>Algunas diferencias con otros systemas de portes BSD, principalmente un
    sumario de <a href="../porting/es/diffs.html">diferencias de
    infraestructura</a>.
d89 1
a89 1
<li>La lista de correos para los portes de OpenBSD 
d94 2
a95 1
<h3><font color="#0000e0">Política sobre Portes de OpenBSD</font></h3>
d98 13
a110 12
<li>Debido a que <code>/usr/local</code> es un sistema de archivos con
    frecuencia compartido entre varias máquinas mediante NFS, OpenBSD NO usa
    <code>/usr/local/etc/rc.d</code>.
    Por este motivo los ficheros de configuración específicos de cada máquina
    no se pueden guardar en <code>/usr/local</code>, y por tanto
    <code>/etc</code> es el repositorio central para los ficheros de
    configuración específicos de cada máquina.
    Más aún, la política de OpenBSD es la de no actualizar nunca de forma
    automática los ficheros en <code>/etc</code>.
    Los portes que necesitan algún tipo de configuración de arranque deben
    avisar al administrador del sistema de lo que debe hacer en lugar de
    instalar ficheros a ciegas.
d112 2
a113 1
<li>Las páginas de manual en OpenBSD NO están comprimidas.
d117 1
a117 1
    El cifrado con DES es parte del <code>libc</code> típico.
d119 10
a128 10
<li>OpenBSD tiene una fuerte orientación hacia la seguridad.
    Se aconseja leer y comprender la <a href="#security">sección de
    seguridad</a> en esta página.

<li>Asegúrese de que añade la marca de CVS <code>&#36;OpenBSD&#36;</code> al
    fichero de Makefile.
    Si importa un porte desde otro sistema, asegúrese de que también conserva
    la marca en el fichero Makefile.
    En el caso de que el porte se haga desde FreeBSD substituya la marca de
    FreeBSD <code>&#36;Id&#36;</code> por la marca
d131 4
a134 4
<li>El objetivo a alcanzar es que todas las aplicaciones portadas tengan
    soporte en OpenBSD.
    Para conseguirlo <strong>debe</strong> informar ampliamente sobre
    cualquier parche para OpenBSD al mantenedor de la aplicación.
d141 4
a144 3
Existen muchos problemas de seguridad que nos deben preocupar.
Si no se está absolutamente seguro de lo que se está haciendo, por favor pida
ayuda a la lista de correo de <a href="mailto:ports@@openbsd.org">portes</a>.
d147 10
a156 9
<li><em>NO</em> use código en estado alpha o beta cuando esté creando un
    porte.
    Use la revisión o versión más actual.

<li>Cualquier programa que vaya a ser instalado como servidor debería ser
    escaneado en busca de desbordamientos en la memoria intermedia,
    especialmente en el caso de utilización insegura de
    <code>strcat/strcpy/strcmp/sprintf</code>.
    En general, <code>sprintf</code> se debe substituir con
d160 5
a164 5
    Existen numerosas condiciones de carrera para las que no se tiene un
    debido control.
    Por ejemplo, un atacante que ya haya obtenido privilegios de usuario en
    sus máquinas puede substituir ficheros en <code>/tmp</code> con enlaces
    simbólicos a ficheros más estratégicos, como
d167 21
a187 21
<li>Por ejemplo, tanto <code>fopen</code> como <code>freopen</code>
    <strong>generan un nuevo fichero o abren ficheros ya existentes</strong>
    para escritura.
    Un atacante puede crear un enlace simbólico desde
    <code>/etc/master.passwd</code> a <code>/tmp/addrpool_dump</code>.
    En cuanto Vd. lo abra, el fichero de su contraseña será filtrado.
    Sí, incluso con un <code>unlink</code> antes, que tan sólo minimizaría el
    riesgo.
    Use <code>open</code> con <code>O_CREATIO_EXCL</code> y
    <code>fdopen</code> en lugar de lo anterior.

<li>Otro problema muy común es el de la función <code>mktemp</code>.
    Haga caso a los avisos del enlazador de bsd sobre su uso.
    <strong>Se deben solucionar</strong>.
    Esto no es tan sencillo como <code>s/mktemp/mkstemp/g</code>.
    <br>
    Para más indicaciones sobre este respecto vaya a la página de manual de
    <code>mktemp(3)</code> en OpenBSD current.
    Un código correcto que use <code>mkstemp</code> puede ser el de los 
    fuentes de <code>ed</code> o <code>mail</code>.
    Se puede encontra un tipo poco usual de código que use correctamente 
d192 19
a210 19
    <code>startx</code>.
    Al ser un programa setuid, se podía ejecutar con cualquier fichero como
    guión (script).
    Si el fichero no era un guión válido de la shell, le seguía un mensaje de
    error junto con la primera línea de error del fichero, sin comprobar más
    permisos.
    Considerando que los ficheros shadow passwd a menudo comienzan con una
    entrada de root, obtener esta primera línea era bastante útil para un
    atacante.
    No abra un fichero y a continuación ejecute <code>fstat</code> en el
    descriptor abierto para comprobar lo podría haber abierto (o el atacante
    jugará con <code>/dev/rst0</code> y rebobinará su cinta);  ábralo con el
    correcto uid/gid/grouplist.

<li>No use nada que cree un proceso hijo de una shell en programas setuid 
    antes de haber eliminado sus privilegios.
    Esto incluye <code>popen</code> y <code>system</code>.
    En su lugar use <code>fork</code>, <code>pipe</code> y
    <code>execve</code>.
d213 3
a215 3
    programas para evitar condiciones de carrera.
    Aun en el caso de que un programa no acepte descriptores de ficheros,
    puede usar <code>/dev/fd/0</code>.
d218 4
a221 4
    Si necesita derechos setuid para abrir un fichero, abra ese fichero y
    elimine sus privilegios.
    Esto es un arma de doble filo:  incluso después de haber eliminado sus
    privilegios, debería observar esos descriptores.
d224 9
a232 9
    En principio puede hacer cualquier cosa, pero los derechos de root se
    necesitan en raras ocasiones, tal vez excepto para crear portes de
    &quot;socket&quot; con un número por debajo de 1024.
    En este caso tal vez sea mejor controlarlo con <code>inetd</code> y
    simplemente añadir las entradas relevantes a <code>inetd.conf</code>.
    Debe conocer el &quot;magic&quot; apropiado requerido para poder 
    codificar &quot;d&aelig;mons&quot;.
    Se podría decir que no se tienen programas setuid comerciales si no se
    sabes cómo hacer eso.
d235 18
a252 17
    Aparte de los ficheros específicos que necesitan los programas setgid, la
    mayoría de ficheros no tienen permisos de escritura para grupo.
    Por tanto, un problema de seguridad en un programa setgid no comprometerá
    tanto su sistema;  con sólo derechos de grupo, lo peor que podrá hacer un
    atacante es cambiar la tabla de puntuación de un juego o algo parecido.
    Vea el porte <code>xkobo</code> como un ejemplo de un cambio de este
    tipo.

<li>No confíe en ficheros con permisos de escritura para grupo.
    Aunque hayan pasado una auditoría, los programas setgid no se perciben
    como un agujero de seguridad en potencia.
    Por lo tanto, cualquier cosa que pueda ser falsificada no debería ser
    considerarada como información reservada.

<li>¡No confíe en su entorno!
    Esto incluye cosas tan sencillas como su <code>PATH</code> (nunca use
    <code>system</code> con un nombre no cualificado y evite
d254 16
a269 16
    <code>locale</code>, <code>timezone</code>, <code>termcap</code> y otros.
    <strong>Nunca</strong> use <code>system</code> en programas
    privilegiados;  en su lugar cree su propia orden de línea, un entorno
    controlado, y una llamada directa a <code>execve</code>.
    La página de manual de <code>perlsec</code> es una buena tutorial sobre
    estos problemas.

<li>Nunca use guiones de shell setuid.
    Éstos son inseguros por definición.
    Envuélvalos dentro de código C que asegure un entorno apropiado.
    Por otra parte, las características de OpenBSD incluyen guiones de perl
    seguros.

<li>Tenga cuidado con el cargador dinámico.
    Si está ejecutando setuid sólo ejecutará bibliotecas que hayan sido
    escaneadas con <code>ldconfig</code>.
d272 8
a279 9
<li>Las bibliotecas dinámicas son complicadas.
    El código C++ presenta un problema parecido.
    Básicamente, las bibliotecas pueden tomar alguna acción basándose en su
    entorno antes incluso de que su programa principal haya podido comprobar
    su estado setuid.
    OpenBSD <code>issetugid</code> trata este problema desde el punto de
    vista del escritor de bibliotecas.
    No intente portar bibliotecas a menos que conozca este tema a la
    perfección.
d286 2
a287 2
<li><code>__OpenBSD__</code> se debería usar con cuentagotas o nada.
    Construcciones como
d293 12
a304 11
    son a menudo inapropiadas.
    No añada <code>__OpenBSD__</code> a éstas a ciegas.
    En lugar de esto, intente imaginar qué es lo que está ocurriendo y qué es
    lo que se necesita.
    Las páginas de manual son de gran utilidad para estos casos, ya que
    incluyen comentarios de tipo historial en los que se menciona cuándo una
    característica particular se integró en <code>BSD</code>.
    Verificar el valor numérico de <code>BSD</code> contra el de las
    versiones conocidas es por lo general la forma correcta de hacerlo.  Vea 
    <a href="ftp://ftp.netbsd.org/pub/NetBSD/packages/pkgsrc/Packages.txt">the
    NetBSD package guide</a> para obtener más información al respecto.
d307 4
a310 4
    Intente incluir <code>sys/parm.h</code>.
    Esto no sólo define <code>BSD</code>, sino que también le da un valor
    apropiado.
    El fragmento de código correcto debería ser así:
d318 30
a347 27
<li>Base sus comprobaciones en las características, no en sistemas operativos
    específicos.
    A la larga es mucho mejor comprobar si <code>tcgetattr</code> funciona
    que si está funcionando en BSD 4.3 o posterior, o en SystemVR4.
    Este tipo de pruebas sólo confunden.
    La manera de hacerlas es, por ejemplo, comprobándolo para un sistema en
    particular, configurar los &quot;define&quot; <code>HAVE_TCGETATTR</code>, 
    y a continuación proceder con el sistema siguiente.
    Esta técnica separa las comprobaciones de características de los sistemas
    operativos específicos.
    De forma rápida, otro portado puede así simplemente añadir todas los
    &quot;define&quot; <code>-DHAVE_XXX</code> al fichero Makefile.
    También es posible escribirlo o añadirlo a un guión de configuración para
    comprobar esa caracterítica y añadirla de modo automático.
    Como un ejemplo de lo que no se debe hacer, compruebe los fuentes de
    nethack 3.2.2:  asume un montón de cosas basadas en el tipo del sistema.
    La mayoría de éstas están obsoletas y ya no reflejan la realidad:  las
    funciones POSIX son más útiles que las viejas diferencias entre BSD y
    SystemV, hasta el punto que algunas funciones bsd tradicionales sólo
    conservan el soporte mediante bibliotecas de compatibilidad.

<li>Evite incluir ficheros que incluyan otras inclusiones que... Primero,
    porque no es eficiente.
    Su proyecto acabará incluyendo un fichero que incluya todo.
    También, porque hace que algunos problemas sean difíciles de solucionar.
    Se hace más difícil <em>no</em> incluir un fichero particular en un
    momento dado.
d350 7
a356 8
    No definir una macro que fue definida por un fichero de cabecera es una
    mala idea.
    Definir macros para obtener un comportamiento específico de un fichero
    include también es una mala idea:  los modos de compilación deberían ser
    globales.
    Si quiere obtener un comportamiento POSIX dígalo, y añada <code>#define
    POSIX_C_SOURCE</code> en todo el proyecto, no sólo cuando lo crea
    conveniente.
d359 7
a365 7
    Todos los sistemas modernos, incluido OpenBSD, tienen una localización
    típica para estos prototipos.  Dichas localizaciones es probable que sean
    <code>unistd.h</code>, <code>fcntl.h</code>, o <code>termios.h</code>
    entre otras.
    La página de manual suele indicar dónde se puede encontrar el prototipo.
    Es posible que necesite otras cuantas macros de <code>HAVE_XXX</code>
    para conseguir el fichero correcto.
d367 2
a368 1
    include tienen métodos de prevención contra esto.
d370 4
a373 4
    Si algún sistema estropeado necesita que escriba el prototipo. no lo
    imponga en otros sistemas.
    El uso de prototipos propios no funcionará porque pueden usar tipos que
    son equivalentes en su sistema, pero no son portables a otros sistemas
d375 14
a388 12
    resultarán en estados incorrectos de <code>const</code>.
    Además, algunos compiladores como el gcc propio de OpenBSD, pueden hacer
    un trabajo mejor como algunas funciones muy frecuentes como
    <code>strlen</code> si incluye el fichero de cabecera correcto.

<li>No use el nombre de una función de sistema estándar para nada más.
    si quiere escribir su propia función, déle su propio nombre, y llame a
    esa función en todas partes.
    Si desea volver a la función de sistema por definición, sólo tiene que
    comentar su código y definir su propio nombre en la función del sistema.
    No lo haga de otro modo.
    El código debería ser del siguiente modo
d418 4
a421 5
<li>Las versiones recientes de <code>bsd.port.mk</code> definen el camino de
    los instaladores.
    En particular, definen que se busque en <code>/usr/bin</code> y
    <code>/bin</code> <em>antes que</em> <code>/usr/local/bin</code> y
    <code>/usr/X11R6/bin</code>.
d424 10
a433 8
    <code>${NO_SHARED_LIBS}</code> (cuidado, sólo se puede definir después de
    incluir <code>bsd.port.mk</code>).
    Si su porte tiene un GNU configure, añada la línea <code>CONFIGURE_ARGS
    += ${CONFIGURE_SHARED}</code> al fichero Makefile.

<li>Si se apoya en una función que apareció en una versión reciente de
    <code>bsd.port.mk</code> no olvide añadir una línea <code>NEED_VERSION =
    x.yy</code> en el fichero Makefile.
d435 2
a436 2
<li>En OpenBSD <code>curses.h/libcurses/libtermlib</code> es el &laquo;nuevo
    curses&raquo;.  Cambie lo siguiente:<br>
d440 44
a483 43
    <code>_USE_OLD_CURSES_</code> antes de incluir <code>curses.h</code> (por
    lo general en un fichero Makefile) y enlazándolo con
    <code>-locurses</code>.

<li>En OpenBSD el terminal se ha actualizado del viejo <code>sgtty</code> de
    BSD al nuevo <code>tcgetattr</code> de POSIX.
    Evite el viejo estilo en código nuevo.
    Algo de código es posible que defina <code>tcgetattr</code> como sinónimo
    del viejo <code>sgtty</code>, pero esto es como mucho una medida
    temporal en OpenBSD.
    El código fuente de <code>xterm</code> es un buen ejemplo de lo que no
    hay que hacer.
    Intente obtener la funcionalidad de su sistema correctamente:  lo que
    quiere es un tipo que recuerde el estado de su terminal (probablemente
    typedef), una función que extraiga el estado actual, y una función que
    configure un nuevo estado.
    Las funciones que modifican este estado son más difíciles, ya que tienden
    a variar según el sistema.
    Tampoco olvide que tendrá que manejar casos en los que no esté conectado
    a un terminal, y que necesita poder manejar señales:  no sólo de
    terminación, sin también de fondo (<code>SIGTSTP</code>).
    Debería dejar siempre el terminal en un buen estado.
    Lleve a cabo verificaciones en shells más viejas como sh, que no
    reconfiguren el terminal de ningún modo al terminar un programa.

<li>Los termcap/terminfo y curses más modernos, como los que se incluyen con
    OpenBSD, incluyen secuencias típicas para el control de terminales de
    color.
    Si es posible debería usar éstas, volviendo a las secuencias de color
    típicas de ANSI en otros sistemas.
    Sin embargo, las descripciones de algunos terminales todavía no se han
    actualizado, y es posible que necesite poder especificar estas secuencias
    de modo manual.
    Éste es el modo en que lo hace vim.
    Esto no es estrictamente necesario.
    Excepto en casos de programas privilegiados, por lo general es posible
    anular una definición termcap mediante la variable <code>TERMCAP</code> y
    hacer que funcione correctamente.

<li>La semántica de señales es complicada, y varía de un sistema a otro.
    Use <code>sigaction</code> para asegurarse semánticas específicas, junto
    con otras llmadas al sistema cuya referencia puede encontrar en las
    páginas de manual.
d492 2
a493 2
Originally [OpenBSD: porting.html,v 1.29 2000/04/07 22:09:28 espie Exp ]<br>
$Translation: porting.html,v 1.5 2000/05/13 12:58:45 wim Exp $<br>
@


1.3
log
@Sync translation with Badlands Translation CVS. Work by Horacio
@
text
@d78 1
a78 1
    sumario de <a href="../porting/diffs.html">diferencias de
d474 1
a474 1
$Translation: porting.html,v 1.4 2000/04/08 10:45:54 horacio Exp $<br>
@


1.2
log
@Sync Spanish translation up to date. A lot of work by Horacio
@
text
@d42 1
a42 1
<a href="../checklist.html">lista de comprobación</a> de portes de OpenBSD.
d74 1
a74 1
<li>La <a href="../checklist.html">lista de comprobación</a> de portes de
d77 4
d473 2
a474 2
Originally [OpenBSD: porting.html,v 1.28 2000/03/25 02:29:50 wvdputte Exp ]<br>
$Translation: porting.html,v 1.3 2000/04/03 22:50:55 horacio Exp $<br>
@


1.1
log
@Spanish translation of OpenBSD.org webpages, a *lot* of work by:

Horacio MG <homega@@ciberia.es>
@
text
@d11 1
a11 1
<link rev="made" HREF="mailto:www@@openbsd.org">
d465 1
a465 1
<a href="index.html"><img height=24 width=24 src="../back.gif" border=0 alt="OpenBSD"></a> 
d469 2
a470 2
Originally [OpenBSD: porting.html,v 1.27 2000/02/23 10:54:29 espie Exp ]
<br>
@

