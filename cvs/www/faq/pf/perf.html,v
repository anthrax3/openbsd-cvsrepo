head	1.40;
access;
symbols;
locks; strict;
comment	@# @;


1.40
date	2017.01.08.03.53.55;	author tj;	state Exp;
branches;
next	1.39;
commitid	pcfR7nXNxWM6CSjs;

1.39
date	2016.12.31.21.54.26;	author tj;	state Exp;
branches;
next	1.38;
commitid	hok7YG81axvJa5M7;

1.38
date	2016.08.15.02.22.14;	author tb;	state Exp;
branches;
next	1.37;
commitid	3DeixV5YkPOb78RN;

1.37
date	2016.06.13.17.58.25;	author tj;	state Exp;
branches;
next	1.36;
commitid	Grx2UyJPWzJbbhkP;

1.36
date	2016.04.18.19.07.50;	author tj;	state Exp;
branches;
next	1.35;
commitid	g0cUF3jNn5Tz4oaZ;

1.35
date	2016.04.16.00.30.41;	author tj;	state Exp;
branches;
next	1.34;
commitid	rTxoenHHaeutOff1;

1.34
date	2016.04.15.20.39.49;	author tb;	state Exp;
branches;
next	1.33;
commitid	jwteSMEb4rFzI8UA;

1.33
date	2016.03.29.01.27.39;	author tb;	state Exp;
branches;
next	1.32;
commitid	4Y8oU6GBrSY1UOfW;

1.32
date	2016.03.27.19.52.09;	author sthen;	state Exp;
branches;
next	1.31;
commitid	hi2ObFv9LGB98JY5;

1.31
date	2016.03.22.10.56.56;	author sthen;	state Exp;
branches;
next	1.30;
commitid	G2izHhNJ7aqR0Y6j;

1.30
date	2016.03.21.05.46.21;	author beck;	state Exp;
branches;
next	1.29;
commitid	zEx6zFkNSFFExu0v;

1.29
date	2016.02.25.20.30.32;	author tj;	state Exp;
branches;
next	1.28;
commitid	QJbcw2dPi40EzBlj;

1.28
date	2015.07.02.05.49.05;	author bentley;	state Exp;
branches;
next	1.27;
commitid	AP3UllesavMDEUhQ;

1.27
date	2015.05.11.11.18.30;	author sthen;	state Exp;
branches;
next	1.26;
commitid	wRrXxcro6dFYiwF8;

1.26
date	2014.05.01.15.03.50;	author nick;	state Exp;
branches;
next	1.25;

1.25
date	2014.03.31.02.33.07;	author nick;	state Exp;
branches;
next	1.24;

1.24
date	2010.05.19.13.25.16;	author sthen;	state Exp;
branches;
next	1.23;

1.23
date	2008.12.04.22.15.02;	author steven;	state Exp;
branches;
next	1.22;

1.22
date	2008.08.05.01.34.16;	author nick;	state Exp;
branches;
next	1.21;

1.21
date	2007.05.06.15.41.15;	author nick;	state Exp;
branches;
next	1.20;

1.20
date	2006.11.01.01.56.01;	author joel;	state Exp;
branches;
next	1.19;

1.19
date	2006.05.01.00.54.29;	author nick;	state Exp;
branches;
next	1.18;

1.18
date	2005.11.01.11.35.18;	author nick;	state Exp;
branches;
next	1.17;

1.17
date	2005.05.20.00.12.02;	author joel;	state Exp;
branches;
next	1.16;

1.16
date	2004.12.22.04.28.16;	author david;	state Exp;
branches;
next	1.15;

1.15
date	2004.10.29.17.22.57;	author nick;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.07.01.55.24;	author nick;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.30.18.00.25;	author nick;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.06.03.27.30;	author mcbride;	state Exp;
branches;
next	1.11;

1.11
date	2004.01.01.04.16.17;	author nick;	state Exp;
branches;
next	1.10;

1.10
date	2003.11.27.15.08.25;	author nick;	state Exp;
branches;
next	1.9;

1.9
date	2003.11.09.23.29.02;	author nick;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.22.02.29.03;	author nick;	state Exp;
branches;
next	1.7;

1.7
date	2003.09.16.01.23.49;	author nick;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.13.02.54.08;	author nick;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.11.02.57.49;	author nick;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.10.00.57.19;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.01.14.20.37;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.01.13.14.12;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.01.01.46.06;	author nick;	state Exp;
branches;
next	;


desc
@@


1.40
log
@- thin out some text that says a lot without really saying anything
- remove pf benchmark section (which is just more of the same)
- remove many redundant sentences, make things more concise
- remove section talking about the limitations of the ISA bus
- remove section bragging about how much we can do with 32mb of ram
- fix some odd wording ("how much computer do i need to...")
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

<!-- If you make edits to any FAQ documents, please start each sentence
     on a new line, and try to keep the general formatting consistent
     with the rest of the pages -->

<title>OpenBSD PF: Performance</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="../../openbsd.css">
<link rel="canonical" href="https://www.openbsd.org/faq/pf/perf.html">
</head>

<!--
Copyright (c) 2003, 2004, 2008 Nick Holland <nick@@openbsd.org>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor="#ffffff" text="#000000">

<h2>
<a href="../../index.html">
<font color="#0000ff"><i>Open</i></font><font color="#000084">BSD</font></a>
<font color="#e00000">PF - Performance</font>
<small>
<a href="index.html" style="font-weight:normal; float:right">[Contents]</a>
</small>
</h2>
<hr>

<h3>
"How much bandwidth can PF handle?"<br>
"How much computing power do I need to handle my Internet connection?"
</h3>

There are no easy answers to those questions.
For a simple home connection, most hardware should be more than enough.
Other applications may require a faster machine with high-end NICs.
PF is used in some very large, high-traffic applications, and the developers
are power users of PF.
Odds are it will do very well for you.

<p>
PF performance is determined by several variables:

<ul>
  <li>Number of packets per second.
      Almost the same amount of processing needs to be done on a packet with
      1500 byte payload as for a packet with a one byte payload.
      The number of packets per second determines the number of times the state
      table and filter rules have to be evaluated every second, determining
      the effective demand on the system.
  <li>Efficiency of your network card.
      Some network adapters are just more efficient than others.
      Older <a href="http://man.openbsd.org/rl">rl(4)</a> NICs tend to be
      relatively poor performers, while
      <a href="http://man.openbsd.org/ix">ix(4)</a> NICs tend to perform
      very well.
  <li>Complexity and design of your ruleset.
      More lines being evaluated for each packet will result in slower
      performance.
      More packets being filtered by <tt>quick</tt> rules will result in
      better performance.
  <li>Barely worth mentioning: CPU and RAM.
      As PF is a kernel-based process, it will not use swap space.
      So, if you have enough RAM, it runs, if not, it panics due to
      <a href="http://man.openbsd.org/pool">pool(9)</a> exhaustion.
      Huge amounts of RAM are not needed.
</ul>

<!-- XXXrelease change this soon... -->
<h3>Will multiple processors help?</h3>

PF will only use one processor, so multiple processors (or multiple cores)
WILL NOT improve PF performance.
However, under some circumstances, running the SMP version of OpenBSD
(<tt>bsd.mp</tt>) instead of <tt>bsd</tt> will give better performance
due to differences in how interrupt handling is done.
If you are seeing performance problems, experiment with this.
Most users will never hit any limits to worry about it.

<p>
</body>
</html>
@


1.39
log
@replace dc(4) with ix(4) as an example of a modern nic with good perf.
also the trim section that was still talking about 300mhz cpus...
@
text
@d47 1
a47 1
"How much computer do I need to handle my Internet connection?"
d53 3
a55 2
The real question is not the number of bits per second, but rather the number
of packets per second and the complexity of the ruleset.
d65 2
a66 8
      table and, in case of no match there, filter rules have to be evaluated
      every second, determining the effective demand on the system.
  <li>Performance of your system bus.
      The ISA bus has a maximum bandwidth of 8MB/sec, and when the processor
      is accessing it, it has to slow itself to the effective speed of a 80286
      running at 8MHz, no matter how fast the processor really is.
      The PCI bus has a much greater effective bandwidth, and has less impact
      on the processor, and of course, PCIe offers even more performance.
d69 4
a72 8
      Older <a href="http://man.openbsd.org/rl">rl(4)</a> Realtek 8139-based
      cards tend to be relatively poor performers (newer
      <a href="http://man.openbsd.org/re">re(4)</a>-based Realtek cards are
      a bit better), while Intel 82598
      (<a href="http://man.openbsd.org/ix">ix(4)</a>) based cards tend to
      perform very well.
      For maximum performance, consider using gigabit or ten gigabit ethernet
      cards, as they have much more advanced buffering.
d74 4
a77 5
      The more complex your ruleset, the slower it is.
      The more packets that are filtered by <tt>keep state</tt> and
      <tt>quick</tt> rules, the better the performance.
      The more lines that have to be evaluated for each packet,
      the lower the performance.
d82 1
a82 5
      Huge amounts of RAM are not needed -- 32MB should be plenty for close
      to 30,000 states, which is a lot of states for a small office or home
      application.
      Most users will find a "recycled" computer more than enough for a PF
      system.
d93 2
a94 18
IF you are seeing performance problems, experiment with this, most users
will never hit any limits to worry about it.

<h3>Are there any benchmarks?</h3>

People often ask for PF benchmarks.
The only benchmark that counts is <i>your</i> system performance in <i>your</i>
environment.
A benchmark that doesn't replicate your environment will not properly help you
plan your firewall system.
The best course of action is to benchmark PF for yourself under the same, or
as close as possible to, network conditions that the actual firewall would
experience running on the same hardware the firewall would use.

<p>
PF is used in some very large, high-traffic applications, and the developers
are "power users" of PF.
Odds are it will do very well for you.
@


1.38
log
@tls on openbsd.org is now real:
- link to https://www.openbsd.org from the sub-projects' pages
- make internal links relative
- switch link rel=canonical to https to please some search engines
"go ahead" from beck, "do it!!!!" tj
@
text
@d77 2
a78 2
      a bit better), while Intel 21143
      (<a href="http://man.openbsd.org/dc">dc(4)</a>) based cards tend to
d81 1
a81 2
       cards, as they have much more advanced buffering.
      <!-- XXX mention em/ix here? -->
d96 1
a96 3
      system -- a 300MHz system will move a large number of packets rapidly,
      at least if backed up with good NICs and a good ruleset.
      <!-- XXX modernize this? -->
@


1.37
log
@sync pf guide formatting with the main faq's style, fixing a few grammar
knits and broken links along the way.

input and ok tb
@
text
@d13 1
a13 1
<link rel="canonical" href="http://www.openbsd.org/faq/pf/perf.html">
@


1.36
log
@page titles and <title> should be the same.
@
text
@d4 5
a10 1
<meta name="description"   content="the OpenBSD FAQ page">
d58 1
d60 40
a99 42
<li>Number of packets per second.  Almost the same amount of processing
needs to be done on a packet with 1500 byte payload as for a
packet with a one byte payload.  The number of packets per second
determines the number of times the state table and, in case of no match there,
filter rules have to be evaluated every second, determining the effective
demand on the system.

<li>Performance of your system bus. The ISA bus has a maximum bandwidth
of 8MB/sec, and when the processor is accessing it, it has to slow itself
to the effective speed of a 80286 running at 8MHz, no matter how fast
the processor really is.  The PCI bus has a much greater effective
bandwidth, and has less impact on the processor, and of course, PCIe
offers even more performance.

<li>Efficiency of your network card. Some network adapters are just more
efficient than others.
Older <a href="http://man.openbsd.org/rl.4"
>rl(4)</a> Realtek 8139 based cards tend to be relatively poor performers
(newer
<a href="http://man.openbsd.org/re.4"
>re(4)</a>-based Realtek cards are much better), while Intel 21143 
(<a href="http://man.openbsd.org/dc.4"
>dc(4)</a>)
based cards tend to perform very well.  For maximum performance,
consider using gigabit Ethernet cards, even if not connecting to gigabit
networks, as they have much more advanced buffering.

<li>Complexity and design of your ruleset.  The more complex your
ruleset, the slower it is.  The more packets that are filtered by
<tt>keep state</tt> and <tt>quick</tt> rules, the better the
performance.  The more lines that have to be evaluated for each packet,
the lower the performance.

<li>Barely worth mentioning: CPU and RAM.  As PF is a kernel-based
process, it will not use swap space.  So, if you have enough RAM, it
runs, if not, it panics due to
<a href="http://man.openbsd.org/pool.9"
>pool(9)</a> exhaustion.  Huge amounts of RAM are not needed -- 32MB should be
plenty for close to 30,000 states, which is a lot of states for a small office
or home application. Most users will find a "recycled" computer more than
enough for a PF system -- a 300MHz system will move a large number of
packets rapidly, at least if backed up with good NICs and a good ruleset.
d102 1
a102 1
<!-- XXXrelease change this soon? -->
d104 1
d107 1
a107 1
HOWEVER, under some circumstances, running the SMP version of OpenBSD
a109 1
In many cases, <tt>bsd.mp</tt> will give less performance.
d113 1
d115 8
a122 8
<h3>Are there any benchmarks?</h3>
People often ask for PF benchmarks.  The only benchmark that counts is
<i>your</i> system performance in <i>your</i> environment.  A benchmark
that doesn't replicate your environment will not properly help you plan
your firewall system. The best course of action is to benchmark PF for
yourself under the same, or as close as possible to, network conditions
that the actual firewall would experience running on the same hardware
the firewall would use.
d126 2
a127 1
are "power users" of PF.  Odds are, it will do very well for you.
d131 1
a131 1
</html> 
@


1.35
log
@tweak [faq index] button and sync the pf user's guide with that style.
@
text
@d4 1
a4 1
<title>PF - Performance</title>
d99 1
@


1.34
log
@use short form man links in the faq and fix a few broken links
@
text
@a29 2
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->
d35 3
a39 5
<p>
[<a href="index.html">Contents</a>]
[<a href="logging.html">Previous: Logging</a>]
[<a href="ftp.html">Next: Issues with FTP</a>]
<p>
a121 5

<p>
[<a href="logging.html">Previous: Logging</a>]
[<a href="index.html">Contents</a>]
[<a href="ftp.html">Next: Issues with FTP</a>]
@


1.33
log
@new openbsd faq style. joint with tj and validator.w3.org
@
text
@d75 1
a75 1
Older <a href="http://man.openbsd.org/?query=rl&amp;sektion=4"
d78 1
a78 1
<a href="http://man.openbsd.org/?query=re&amp;sektion=4"
d80 1
a80 1
(<a href="http://man.openbsd.org/?query=dc&amp;sektion=4"
d95 1
a95 1
<a href="http://man.openbsd.org/?query=pool&amp;sektion=9"
@


1.32
log
@add a small sprinkling of css to improve readability in the faq, ok tj@@ tb@@
@
text
@d4 1
a4 1
<title>PF: Performance</title>
d33 1
d35 4
a38 2
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif" border="0">
</a>
d40 1
a41 1
[<a href="index.html">Contents</a>]
a42 1

a43 2
<h1><font color="#e00000">PF: Performance</font></h1>
<hr>
@


1.31
log
@fix URIs, the / before querystring is not optional,
if not fixed up by browsers the server returns 400 Bad Request.
@
text
@d7 2
@


1.30
log
@change http://www.openbsd.org/cgi-bin/man.cgi to be http://man.openbsd.org
this points stuff to the new place and gets us ready to deprecate the old
place we did this.
@
text
@d73 1
a73 1
Older <a href="http://man.openbsd.org?query=rl&amp;sektion=4"
d76 1
a76 1
<a href="http://man.openbsd.org?query=re&amp;sektion=4"
d78 1
a78 1
(<a href="http://man.openbsd.org?query=dc&amp;sektion=4"
d93 1
a93 1
<a href="http://man.openbsd.org?query=pool&amp;sektion=9"
@


1.29
log
@resolve a few XXX comments.
@
text
@d73 1
a73 1
Older <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4"
d76 1
a76 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=re&amp;sektion=4"
d78 1
a78 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4"
d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9"
@


1.28
log
@Clean up meta tags.

name=distribution, name=keywords, and name=resource-type have no effect
in modern search engines and just clutter up the page source.

From Pavel Plamenov.
@
text
@d48 5
a52 10
<!--XXX outdated?
	could probably use updating to make it more relevant;
	maybe pcengines/soekris instead of 486/66? -->
<p>
There are no easy answers to those questions.  For some applications, a
486/66 with a pair of good ISA NICs could filter and NAT close to 5Mbps,
but for other applications a much faster machine with much more
efficient PCI NICs might end up being insufficient.  The real question
is not the number of bits per second but rather the number of packets
per second and the complexity of the ruleset.
a103 2
<!--XXX outdated?
	this is probably talking about apic, which GENERIC now uses -->
@


1.27
log
@Add 'link rel="canonical"' to pages, acting as a hint to search engines
to list the copies on www.openbsd.org rather than mirrors.

From Carlin Bingham, ok millert@@ nick@@
@
text
@a5 1
<meta name="resource-type" content="document">
a6 2
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
@


1.26
log
@
update for 5.5
@
text
@d10 1
@


1.25
log
@
www@@ removal, normalize footers.
@
text
@d75 2
a76 1
bandwidth, and has less impact on the processor.
@


1.24
log
@Update the PF faq for 4.7 changes.
@
text
@a4 1
<link rev="made" href="mailto:www@@openbsd.org">
a138 6
<hr>
<a href="index.html"><img height="24" width="24" src="../../images/back.gif" border="0" alt="[back]"></a> 
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>$OpenBSD: perf.html,v 1.23 2008/12/04 22:15:02 steven Exp $</small>

@


1.23
log
@typo
@
text
@d51 3
d79 6
a84 4
efficient than others.  Realtek 8139 
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4"
>rl(4)</a>) 
based cards tend to be relatively poor performers while Intel 21143 
d104 1
a104 1
enough for a PF system -- a 300MHz system will move a very large number of
d111 2
d144 1
a144 1
<small>$OpenBSD: perf.html,v 1.21 2007/05/06 15:41:15 nick Exp $</small>
@


1.22
log
@
Will multiple processors help?  A: No.  'course, I can't say nothing that
efficiently.  "correct!" henning@@
@
text
@d109 1
a109 1
In many cases, <tt>bsd.mp</tt> will give less perfomance.
@


1.21
log
@
specifying manpath on device drivers and pool(9) really doesn't help
much, as they change a lot less than PF does.
@
text
@d14 1
a14 1
Copyright (c) 2003, 2004, Nick Holland <nick@@openbsd.org>
d103 12
a114 1
<p>
d137 1
a137 1
<small>$OpenBSD: perf.html,v 1.20 2006/11/01 01:56:01 joel Exp $</small>
@


1.20
log
@Updates for OpenBSD 4.0. uRPF, tftp-proxy, more ftp-proxy, etc.
Thanks to mcbride for the bits about interface groups
@
text
@d77 1
a77 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+4.0"
d80 1
a80 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+4.0"
d95 1
a95 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+4.0"
d126 1
a126 1
<small>$OpenBSD: perf.html,v 1.19 2006/05/01 00:54:29 nick Exp $</small>
@


1.19
log
@
3.9 updates, mostly rev'ing man page links
@
text
@d77 1
a77 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.9"
d80 1
a80 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.9"
d95 1
a95 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.9"
d126 1
a126 1
<small>$OpenBSD: perf.html,v 1.18 2005/11/01 11:35:18 nick Exp $</small>
@


1.18
log
@
bump manpath= tag for 3.8
@
text
@d77 1
a77 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.8"
d80 1
a80 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.8"
d95 1
a95 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.8"
d126 1
a126 1
<small>$OpenBSD: perf.html,v 1.17 2005/05/20 00:12:02 joel Exp $</small>
@


1.17
log
@Updates for OpenBSD 3.7.
@
text
@d77 1
a77 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.7"
d80 1
a80 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.7"
d95 1
a95 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.7"
d126 1
a126 1
<small>$OpenBSD: perf.html,v 1.16 2004/12/22 04:28:16 david Exp $</small>
@


1.16
log
@make small title logo a link back to main page; ok nick@@
@
text
@d77 1
a77 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.6"
d80 1
a80 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.6"
d95 1
a95 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.6"
d126 1
a126 1
<small>$OpenBSD: perf.html,v 1.15 2004/10/29 17:22:57 nick Exp $</small>
@


1.15
log
@
Update for 3.6
@
text
@d34 3
a36 1
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif">
d126 1
a126 1
<small>$OpenBSD: perf.html,v 1.14 2004/05/07 01:55:24 nick Exp $</small>
@


1.14
log
@
Add an OpenBSD license to the PF User's Guide.
Concept and breakdown of copyrights agreed to by Joel Knight and myself,
license assistance millert@@, ok deraadt@@.
@
text
@d75 1
a75 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.5"
d78 1
a78 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.5"
d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.5"
d124 1
a124 1
<small>$OpenBSD: perf.html,v 1.13 2004/04/30 18:00:25 nick Exp $</small>
@


1.13
log
@
PF User's Guide updates for OpenBSD 3.5.
Work done by Joel Knight (enabled et myrealbox.dit com), many, many thanks
to him for providing and maintaining some darned good docs.
@
text
@a10 1
<meta name="copyright"     content="This document copyright 2002-2004 by OpenBSD.">
d13 17
d124 1
a124 1
<small>$OpenBSD: perf.html,v 1.12 2004/01/06 03:27:30 mcbride Exp $</small>
@


1.12
log
@Correct ISA bus speed.

ok nick@@
@
text
@d59 1
a59 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.4"
d62 1
a62 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.4"
d77 1
a77 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.4"
d108 1
a108 1
<small>$OpenBSD: perf.html,v 1.11 2004/01/01 04:16:17 nick Exp $</small>
@


1.11
log
@
Bump copyright to 2004
@
text
@d52 1
a52 1
of 8Mbps, and when the processor is accessing it, it has to slow itself
d108 1
a108 1
<small>$OpenBSD: perf.html,v 1.10 2003/11/27 15:08:25 nick Exp $</small>
@


1.10
log
@
Major update to the PF FAQ from "Mr. PF FAQ", Joel Knight.  THANKS!
@
text
@d11 1
a11 1
<meta name="copyright"     content="This document copyright 2002-2003 by OpenBSD.">
d108 1
a108 1
<small>$OpenBSD: perf.html,v 1.9 2003/11/09 23:29:02 nick Exp $</small>
@


1.9
log
@
Update of PF User's Guide to 3.4.  Ok, really just pointing the man page
links at the 3.4-release man pages rather than the 3.3-release man pages.
Work by Joel Knight.
@
text
@d20 1
a20 1
[<a href="pools.html">Previous: Address Pools and Load Balancing</a>]
d60 1
a60 1
>rl</a>) 
d63 1
a63 1
>dc</a>)
d99 1
a99 1
[<a href="pools.html">Previous: Address Pools and Load Balancing</a>]
d108 1
a108 1
<small>$OpenBSD: perf.html,v 1.8 2003/09/22 02:29:03 nick Exp $</small>
@


1.8
log
@
From Joel Knight: changes formatting so that all keywords are
in <i>, all literals are in <tt>, etc.  Excess man page links removed.
No words were changed.
@
text
@d59 1
a59 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.3"
d62 1
a62 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.3"
d77 1
a77 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.3"
d108 1
a108 1
<small>$OpenBSD: perf.html,v 1.7 2003/09/16 01:23:49 nick Exp $</small>
@


1.7
log
@
Grammar and punctuation clean up, from Joel Knight.
Only a very few words changed.
@
text
@d15 2
d108 1
a108 1
<small>$OpenBSD: perf.html,v 1.6 2003/06/13 02:54:08 nick Exp $</small>
@


1.6
log
@
Improved wrapping of man page links, renders better on some browsers.
No words altered.  From Joel Knight.
@
text
@d33 1
a33 1
486/66 with a pair of good ISA NICs could filter and NAT close to 5Mbps
d36 1
a36 1
is not the number of bits per second, but rather the number of packets
d40 1
a40 1
PF Performance is determined by several variables:
d106 1
a106 1
<small>$OpenBSD: perf.html,v 1.5 2003/05/11 02:57:49 nick Exp $</small>
@


1.5
log
@
minor improvements, from Joel Knight.
@
text
@d57 2
a58 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.3">rl</a>) 
d60 2
a61 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.3">dc</a>)
d75 2
a76 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.3">
pool(9)</a> exhaustion.  Huge amounts of RAM are not needed -- 32MB should be
d106 1
a106 1
<small>$OpenBSD: perf.html,v 1.4 2003/05/10 00:57:19 henning Exp $</small>
@


1.4
log
@clearer.

ok nick@@
@
text
@d49 2
a50 2
<li>Performance of your system bus: the ISA bus has a maximum bandwidth
of 8MB/s, and when the processor is accessing it, it has to slow itself
d55 1
a55 1
<li>Efficiency of your network card: some network adapters are just more
d58 1
a58 1
based cards tend to be relatively poor performers, Intel 21143 
d104 1
a104 1
<small>$OpenBSD: perf.html,v 1.3 2003/05/01 14:20:37 nick Exp $</small>
@


1.3
log
@
ARGH!  no, it is "ruleset", not "rule set".  Pointed out by Margarida@@
@
text
@d45 3
a47 2
determines the number of times the filter rules have to be evaluated
ever second, determining the effective demand on the system.
d104 1
a104 1
<small>$OpenBSD: perf.html,v 1.2 2003/05/01 13:14:12 nick Exp $</small>
@


1.2
log
@
spelling and typos, plus "ruleset" -> "rule set"
@
text
@d37 1
a37 1
per second and the complexity of the rule set.
d63 2
a64 2
<li>Complexity and design of your rule set.  The more complex your
rule set, the slower it is.  The more packets that are filtered by
d77 1
a77 1
packets rapidly, at least if backed up with good NICs and a good rule set.
d103 1
a103 1
<small>$OpenBSD: perf.html,v 1.1 2003/05/01 01:46:06 nick Exp $</small>
@


1.1
log
@
The long awaited, new PF FAQ!
Most of it written by Joel Knight >enabled at myrealbox dot com<,
some parts by me, a few parts yanked out of the old PF FAQ.
GREAT work, Joel!
@
text
@d35 1
a35 1
efficient PCI NICs might end up being insuffiecient.  The real question
d37 1
a37 1
per second and the complexity of the ruleset.
d45 1
a45 1
determines the number of times the filter rules have to be evaulated
d51 1
a51 1
the processor really is.  The PCI bus has a much greater effecive
d54 1
a54 1
<li>Efficency of your network card: some network adapters are just more
d60 1
a60 1
consider using gigabit ethernet cards, even if not connecting to gigabit
d63 2
a64 2
<li>Complexity and design of your ruleset.  The more complex your
ruleset, the slower it is.  The more packets that are filtered by
d77 1
a77 1
packets rapidly, at least if backed up with good NICs and a good ruleset.
d103 1
a103 1
<small>$OpenBSD$</small>
@

