head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	2014.04.01.17.14.11;	author nick;	state dead;
branches;
next	1.10;

1.10
date	2013.01.05.15.19.49;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2009.10.17.15.58.26;	author ajacoutot;	state Exp;
branches;
next	1.8;

1.8
date	2009.05.16.08.59.12;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2009.03.16.20.24.23;	author tobias;	state Exp;
branches;
next	1.6;

1.6
date	2007.06.20.09.29.47;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.22.15.14.07;	author saad;	state Exp;
branches;
next	1.4;

1.4
date	2006.05.29.11.06.11;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.18.20.48.47;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.30.13.52.07;	author saad;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.06.20.03.30;	author jufi;	state Exp;
branches;
next	;


desc
@@


1.11
log
@
Abandon translations, per deraadt@@ and ajacoutot@@.
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>PF: Desempenho</title>
<link rev="made" href="mailto:www@@openbsd.org">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="resource-type" content="document">
<meta name="description"   content="the OpenBSD FAQ page">
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
</head>

<!--
Copyright (c) 2003, 2004, 2008 Nick Holland <nick@@openbsd.org>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->


<body bgcolor="#ffffff" text="#000000">
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->

<a href="../../../pt/index.html">
<img alt="[OpenBSD]" height=30 width=141 src="../../../images/smalltitle.gif" border="0">
</a>
<p>
[<a href="logging.html">Anterior: Registro de Dados</a>]
[<a href="index.html">Conteúdo</a>]
[<a href="ftp.html">Próximo: Problemas com FTP</a>]

<p>
<h1><font color="#e00000">PF: Desempenho</font></h1>
<hr>

<h3>
"Quanta largura de banda o PF pode manipular?"<br>
"Que tipo de computador eu preciso para controlar minha conexão com
a Internet?"
</h3>

<!--XXX	outdated?
	could probably use updating to make it more relevant;
	maybe pcengines/soekris instead of 486/66?
	-->
<p>
Não existem respostas simples a essas questões. Para algumas aplicações,
um 486/66 com um par de boas placas de rede ISA pode filtrar e fazer
NAT em 5Mbps, mas para outras aplicações uma máquina muito mais rápida,
com placas de rede PCI muito melhores, pode acabar não sendo suficiente.
A real questão não é o número de bits por segundo, mas na verdade o
número de pacotes por segundo e a complexidade de todo o conjunto
de regras.

<p>
O desempenho do PF é determinado por uma série de variáveis:
<ul>
<li>Número de pacotes por segundo. Quase o mesmo poder de processamento
    é necessário para analisar um pacote com 1500 bytes de carga útil
    ou um pacote com um byte de carga útil. O número de
    pacotes por segundo determina o número de vezes que a tabela de
    estados e, caso não seja encontrada uma entrada válida na tabela,
    as regras de filtragem devem ser avaliadas a cada segundo,
    determinando a demanda efetiva no sistema.

<li>Desempenho do barramento do sistema. O barramento ISA tem
    largura de banda máxima de 8MB/seg, e quando o processador o
    acessa, precisa baixar sua velocidade efetiva para um poder
    equivalente ao de um 80286 funcionando a 8MHz, não importa o quão
    rápido seja esse processador. O barramento PCI possui uma
    largura de banda muito maior, causando menor impacto no processador.

<li>Eficiência de sua placa de rede. Alguns adaptadores de rede
    são simplesmente mais eficientes que outros. Placas de rede antigas
    baseadas em Realtek 8139
    (<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4"
    >rl(4)</a>)
    tendem a ter baixo desempenho (as mais novas, 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=re&amp;sektion=4"
>re(4)</a>, já apresentam melhor desempenho), enquanto placas baseadas em Intel
    21143
    (<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4"
    >dc(4)</a>)
    tendem a responder muito bem. Para desempenho máximo, considere
    utilizar placas Ethernet gigabit, mesmo que não esteja conectado
    em redes gigabit, já que elas possuem um sistema de buffer muito
    mais avançado.

<li>Complexidade e projeto do seu conjunto de regras.
    Quanto mais complexo o conjunto de regras, mais lento ele é.
    Quanto mais pacotes forem filtrados por regras <tt>keep state</tt>
    e <tt>quick</tt>, melhor é o desempenho.
    Quanto mais linhas precisarem ser avaliadas para cada pacote,
    mais baixo é o desempenho.

<li>Vale a pena mencionar: CPU e RAM. Como o PF é um processo
    baseado no kernel, ele não utiliza o espaço de swap. Portanto, se
    tiver RAM suficiente ele funciona, se não, entra em pânico devido à
    exaustão de
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9"
    >pool(9)</a>. Grandes quantidades de RAM não são necessárias
    -- 32MB deve ser suficiente para manter perto de 30.000 estados de
    conexão, que são muitos estados para uma aplicação em um pequeno
    escritório ou em casa.
    Para a maior parte dos usuários, um computador "reciclado" é mais
    do que suficiente para um sistema PF -- um sistema de 300MHz
    processa rapidamente um grande número de pacotes, pelo menos se
    utilizado com boas placas de rede e um conjunto de regras
    bem planejado.
</ul>

<h3>O uso de múltiplos processadores ajuda?</h3>
O PF utiliza somente um processador, então múltiplos processadores
(ou múltiplos núcleos) NÃO melhoram o desempenho do PF.
<!--XXX outdated?
	this is probably talking about apic, which GENERIC now uses
	-->
NO ENTANTO, em algumas circunstâncias, executar a versão SMP do OpenBSD
(<tt>bsd.mp</tt>) no lugar do <tt>bsd</tt> melhora o desempenho
devido às diferenças em como o controle de interrupções é feito.
Em muitos casos, <tt>bsd.mp</tt> gera um desempenho menor.
SE você está tendo problemas com o desempenho, experimente isso, a
maioria dos usuários não têm nenhuma limitação para se preocupar.


<h3>Existe algum teste de desempenho?</h3>
As pessoas sempre perguntam por testes de desempenho ("benchmarks")
do PF. O único teste de desempenho que conta é o desempenho do
<i>seu</i> sistema em <i>seu</i> ambiente.
Um teste de desempenho que não reproduz seu ambiente não irá ajudá-lo a
planejar seu sistema de firewall. A melhor forma de se fazer um teste
de desempenho do PF é você mesmo fazê-lo, nas mesmas ou o mais próximo
possível das condições em que o firewall irá trabalhar, sendo executado
no mesmo hardware planejado para o firewall.

<p>
O PF é usado em algumas aplicações grandes e de tráfego intenso, e seus
desenvolvedores são usuários avançados do PF. Provavelmente ele será
satisfatório para você também.

<p>
[<a href="logging.html">Anterior: Registro de Dados</a>]
[<a href="index.html">Conteúdo</a>]
[<a href="ftp.html">Próximo: Problemas com FTP</a>]

<p>
<hr>
<a href="index.html"><img height="24" width="24" src="../../../images/back.gif" border="0" alt="[voltar]"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: perf.html,v 1.24 ]<br>
$Translation: perf.html,v 1.10 2013/01/04 17:53:42 egypcio Exp $<br>
-->
$OpenBSD: perf.html,v 1.10 2013/01/05 15:19:49 ajacoutot Exp $
</small>

</body>
</html>
@


1.10
log
@Sync with Steelix CVS
@
text
@d167 1
a167 1
$OpenBSD$
@


1.9
log
@Sync with Steelix CVS
@
text
@d53 4
d85 1
a85 1
    são simplesmente mais eficientes que outros. Placas de rede
d89 3
a91 1
    tendem a ter baixo desempenho, enquanto placas baseadas em Intel
d126 3
d164 2
a165 2
Originally [OpenBSD: perf.html,v 1.23 ]<br>
$Translation: perf.html,v 1.9 2009/10/13 19:12:28 alan Exp $<br>
@


1.8
log
@Sync with Steelix CVS
@
text
@d39 1
a39 1
[<a href="logging.html">Anterior: Logging</a>]
d48 3
a50 2
"Quanta largura de banda o PF pode suportar?"<br>
"Que computador eu preciso para controlar minha conexão com a Internet?"
d66 6
a71 6
    é necessário para analisar um pacote com 1500 bytes de payload ou
    um pacote com um byte de payload. O número de pacotes por segundo
    determina o número de vezes que a tabela de estado e, caso não
    seja encontrada uma entrada válida na tabela, as regras de
    filtragem devem ser avaliadas a cada segundo, determinando a
    demanda efetiva no sistema.
d76 3
a78 3
    equivalente a um 80286 rodando a 8MHz, não importa o quão rápido
    seja esse processador. O barramento PCI possui largura de banda
    muito maior, causando menor impacto no processador.
d80 2
a81 2
<li>Eficiência de sua placa de rede. Algumas adaptadoras de rede
    são simplesmente mais eficientes que outras. Placas de rede
d94 6
a99 5
<li>Complexidade e design de suas regras. Quanto mais complexo
    o conjunto de regras, mais lento. Quanto mais pacotes forem
    filtrados por regras <tt>keep state</tt> e <tt>quick</tt>, melhor
    o desempenho. Quanto mais linhas precisarem ser avalidas para cada
    pacote, pior o desempenho.
d102 2
a103 2
    baseado no kernel (kernel-based), não utilizará swap. Portanto, se
    tiver RAM suficiente, ele funciona, senão, entra em pânico devido à
d108 1
a108 1
    conexão, que são muitos estados para uma aplicação num pequeno
d112 3
a114 3
    processará rapidamente um grande número de pacotes, pelo menos se
    utilizado em conjunto com boas placas de rede e regras bem
    planejadas.
d118 4
a121 4
O PF utilizará somente um processador, então múltiplos processadores
(ou múltiplos núcleos) NÃO IRÃO melhorar o desempenho do PF.
NO ENTANTO, em algumas circunstâncias, rodar a versão SMP do OpenBSD
(<tt>bsd.mp</tt>) no lugar do <tt>bsd</tt>, irá melhorar o desempenho
d123 1
a123 1
Em muitos casos, <tt>bsd.mp</tt> irá dar menos desempenho.
d125 1
a125 1
maioria dos usuários não irão ter nenhuma limitação para se preocupar.
d128 9
a136 8
<h3>Existe algum benchmark?</h3>
As pessoas sempre perguntam por benchmarks do PF. O único benchmark que
conta é o desempenho do <i>seu</i> sistema em <i>seu</i> ambiente.
Um benchmark que não reproduz seu ambiente não irá ajudá-lo a planejar
seu sistema de firewall. A melhor forma de se fazer um benchmark do PF
é você mesmo fazê-lo, nas mesmas ou o mais próximo possível das
condições em que o firewall irá trabalhar rodando no mesmo hardware
planejado para o firewall.
d140 1
a140 1
desenvolvedores são "power users" do PF. Provavelmente ele será
d144 1
a144 1
[<a href="logging.html">Anterior: Logging</a>]
d156 1
a156 1
$Translation: perf.html,v 1.8 2009/05/10 17:44:16 alan Exp $<br>
@


1.7
log
@Sync with Steelix CVS
@
text
@d88 1
a88 1
    tendem a responder muito bem. Para máximo desempenho, considere
d128 1
a128 1
conta é a performace do <i>seu</i> sistema em <i>seu</i> ambiente.
d153 1
a153 1
$Translation: perf.html,v 1.7 2009/03/11 00:52:56 dsantos Exp $<br>
@


1.6
log
@Sync with steelix translation CVS
@
text
@d4 1
a4 1
<title>PF: Performance</title>
d8 3
a10 3
<meta name="description" content="the OpenBSD FAQ page">
<meta name="keywords" content="openbsd,faq,pf">
<meta name="distribution" content="global">
d14 1
a14 1
Copyright (c) 2003, 2004, Nick Holland <nick@@openbsd.org>
d40 2
a41 2
[<a href="index.html">Conte&uacute;do</a>]
[<a href="ftp.html">Pr&oacute;ximo: Problemas com FTP</a>]
d44 1
a44 1
<h1><font color="#e00000">PF: Performance</font></h1>
d49 1
a49 1
"Que computador eu preciso para controlar minha conex&atilde;o com a Internet?"
d53 6
a58 6
N&atilde;o existe resposta simples a estas quest&otilde;es.  Para algumas aplica&ccedil;oes, 
um 486/66 com um par de boas placas de rede ISA pode filtrar e fazer 
NAT em 5Mbps, mas para outras aplica&ccedil;&otilde;es uma m&aacute;quina muito mais r&aacute;pida 
com placas de rede PCI muito melhores pode acabar n&atilde;o sendo suficiente. 
A real quest&atilde;o n&atilde;o &eacute; o n&uacute;mero de bits por segundo mas na verdade o 
n&uacute;mero de pacotes por segundo e a complexidade de todo o conjunto 
d62 1
a62 1
A performance do PF &eacute; determinada por uma s&eacute;rie de vari&aacute;veis:
d64 49
a112 50
<li>N&uacute;mero de pacotes por segundo.  Quase o mesmo poder de 
processamento &eacute; necess&aacute;rio para analisar um pacote com 1500 bytes 
de payload ou um pacote com um byte de payload.  O n&uacute;mero de pacotes 
por segundo determina o n&uacute;mero de vezes que a tabela de estado e, 
caso n&atilde;o seja encontrada uma entrada v&aacute;lida na tabela, as regras 
de filtragem devem ser avaliadas a cada segundo, determinando 
a demanda efetiva no sistema.

<li>Performance do barramento do sistema. O barramento ISA 
tem largura de banda m&aacute;xima de 8MB/seg, e quando o processador o 
acessa, precisa baixar sua velocidade efetiva para um poder 
equivalente a um 80286 rodando a 8MHz, n&atilde;o importa o qu&atilde;o r&aacute;pido 
seja este processador.  O barramento PCI possui largura de banda 
muito maior, causando menor impacto no processador.

<li>Efici&ecirc;ncia de sua placa de rede. Algumas adaptadoras de 
rede s&atilde;o simplesmente mais eficientes que outras.  Placas de rede 
baseadas em Realtek 8139
(<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4"
>rl(4)</a>) 
tendem a ter baixa performance enquanto placas baseadas em Intel 21143  
(<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4"
>dc(4)</a>)
tendem a responder muito bem.  Para m&aacute;xima performance, considere 
utilizar placas Ethernet gigabit, mesmo que n&atilde;o esteja conectado 
em redes gigabit, j&aacute; que elas possuem um sistema de buffer muito 
mais avan&ccedil;ado.

<li>Complexidade e design de suas regras.  Quanto mais complexo 
o conjunto de regras, mais lento.  Quanto mais pacotes forem filtrados 
por regras <tt>keep state</tt> e <tt>quick</tt>, melhor a performance. 
Quanto mais linhas precisarem ser avalidas para cada pacote, pior 
a performance.

<li>Vale a pena mecionar: CPU e RAM.  Como PF &eacute; um processo 
baseado no kernel (kernel-based), n&atilde;o utilizar&aacute; swap.  Portanto, se 
tiver RAM suficiente funciona, sen&atilde;o, entra em p&acirc;nico devido a 
exaust&atilde;o de 
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9"
>pool(9)</a>.  Grandes quantidades de RAM n&atilde;o s&atilde;o necess&aacute;rias 
-- 32MB deve ser suficiente para manter perto de 30,000 estados de conex&atilde;o, 
o que s&atilde;o muitos estados para uma aplica&ccedil;&atilde;o num pequeno escrit&oacute;rio 
ou em casa. 
Para a maior parte dos usu&aacute;rios, um computador "reciclado" &eacute; mais do 
que suficiente para um sistema PF -- um sistema de 300MHz processar&aacute; 
rapidamente um grande n&uacute;mero de pacotes, pelo menos se 
utilizado em conjunto com boas placas de rede e regras bem planejadas.
d115 18
a132 7
<p>
As pessoas sempre perguntam por benchmarks do PF.  O &uacute;nico benchmark que 
conta &eacute; a performace do <i>seu</i> sistema em <i>seu</i> ambiente.  
Um benchmark que n&atilde;o reproduz seu ambiente n&atilde;o ir&aacute; ajuda-lo a planejar 
seu sistema de firewall. A melhor forma de se fazer um benchmark do PF 
&eacute; voc&ecirc; mesmo faz&ecirc;-lo, no mesmo, ou o mais pr&oacute;ximo poss&iacute;vel 
das condi&ccedil;&otilde;es em que o firewall ir&aacute; trabalhar rodando no mesmo hardware
d136 3
a138 3
O PF &eacute; usado em algumas aplica&ccedil;&otilde;es grandes e de tr&aacute;fego intenso, e seus 
desenvolvedores s&atilde;o "power users" do PF. Provavelmente seu 
desempenho ser&aacute; satisfat&oacute;rio para voc&ecirc; tamb&eacute;m.
d142 2
a143 2
[<a href="index.html">Conte&uacute;do</a>]
[<a href="ftp.html">Pr&oacute;ximo: Problemas com FTP</a>]
d152 2
a153 2
Originally [OpenBSD: perf.html,v 1.21 ]<br>
$Translation: perf.html,v 1.6 2007/06/18 22:09:39 dsantos Exp $<br>
d155 1
a155 1
$OpenBSD$ 
@


1.5
log
@sync with Steelix CVS
@
text
@d83 1
a83 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+4.0"
d87 1
a87 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+4.0"
d105 1
a105 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+4.0"
d142 2
a143 2
Originally [OpenBSD: perf.html,v 1.20 ]<br>
$Translation: perf.html,v 1.5 2006/11/21 01:54:24 dsantos Exp $<br>
@


1.4
log
@sync with steelix translation CVS
@
text
@d83 1
a83 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.9"
d87 1
a87 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.9"
d105 1
a105 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.9"
d142 2
a143 2
Originally [OpenBSD: perf.html,v 1.19 ]<br>
$Translation: perf.html,v 1.4 2006/05/28 17:23:03 dsantos Exp $<br>
@


1.3
log
@sync with steelix translation CVS
@
text
@d83 1
a83 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.8"
d86 2
a87 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.8"
d105 1
a105 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.8"
d142 2
a143 2
Originally [OpenBSD: perf.html,v 1.18 ]<br>
$Translation: perf.html,v 1.3 2005/11/15 14:36:42 dsantos Exp $<br>
@


1.2
log
@sync with Steelix CVS
@
text
@d82 2
a83 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.7"
d86 1
a86 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.7"
d103 2
a104 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.7"
d140 4
a143 2
Originally [OpenBSD: perf.html,v 1.17 ]<br>
$Translation: perf.html,v 1.2 2005/05/27 15:11:33 dsantos Exp $<br>
@


1.1
log
@sync with steelix translation CVS
@
text
@d82 1
a82 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.6"
d85 1
a85 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.6"
d102 1
a102 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.6"
d138 2
a139 2
Originally [OpenBSD: perf.html,v 1.16 ]<br> 
$Translation: perf.html,v 1.1 2005/01/04 17:09:07 dsantos Exp $<br>                 
@

