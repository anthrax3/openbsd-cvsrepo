head	1.12;
access;
symbols;
locks; strict;
comment	@# @;


1.12
date	2014.04.01.17.14.10;	author nick;	state dead;
branches;
next	1.11;

1.11
date	2011.03.13.07.16.15;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.04.22.29.12;	author horacio;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.16.22.45.15;	author horacio;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.03.21.40.56;	author horacio;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.17.19.44.24;	author horacio;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.27.14.55.54;	author horacio;	state Exp;
branches;
next	1.5;

1.5
date	2003.09.20.07.00.26;	author horacio;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.05.20.28.15;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.15.12.27.34;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.12.21.06.09;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.28.14.39.30;	author jufi;	state Exp;
branches;
next	;


desc
@@


1.12
log
@
Abandon translations, per deraadt@@ and ajacoutot@@.
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>PF: Gestión del ancho de banda</title>
<link rev="made" href="mailto:www@@openbsd.org">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="resource-type" content="document">
<meta name="description"   content="the OpenBSD FAQ page">
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
</head>

<!--
Copyright (c) 2003-2005 Joel Knight <enabled@@myrealbox.com>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor="#ffffff" text="#000000">
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->

<a href="../../../es/index.html">
<img alt="[OpenBSD]" height="30" width="141" src="../../../images/smalltitle.gif" border="0">
</a>
<p>
[<a href="anchors.html">Anterior: Anclajes</a>]
[<a href="index.html">Contenido</a>]
[<a href="pools.html">Siguiente: Reserva de direcciones y balanceo
de carga</a>]

<p>
<h1><font color="#e00000">PF: Gestión del ancho de banda</font></h1>


<hr>

<h3>Índice de contenidos</h3>
<ul>
<li><a href="#queueing">Colas de procesamiento</a>
<li><a href="#sched">Planificadores</a>
	<ul>
	<li><a href="#cbq">Colas basadas en clases</a>
	<li><a href="#priq">Colas basadas en prioridades</a>
	<li><a href="#red">Detección aleatoria anticipada</a>
	<li><a href="#ecn">Notificación explícita de
	congestión</a>
	</ul>
<li><a href="#altq">Configuración de la formación de
colas</a>
<li><a href="#assign">Asignación de tráfico a una cola</a>
<li><a href="#example1">Ejemplo #1: Red doméstica</a>
<li><a href="#example2">Ejemplo #2: Red corporativa</a>
</ul>

<hr>

<a name="queueing"></a>
<h2>Colas de procesamiento</h2>
<p>
Poner algo en cola es almacenarlo en orden, a la espera de ser
procesado.  En una red de ordenadores, cuando se envían paquetes
desde un anfitrión, estos entran en un sistema de colas en
el que permanecen hasta ser procesados por el sistema operativo.
Entonces el sistema operativo decide qué cola debe procesar y
qué paquete o paquetes de dicha cola.  El orden en el que el
sistema operativo selecciona los paquetes que va a procesar puede
afectar al rendimiento de la red.  Pongamos por ejemplo un usuario que
estuviera ejecutando dos aplicaciones de red:  SSH y FTP.  Lo ideal
sería procesar los paquetes de SSH antes que los de FTP, por la
propia naturaleza de SSH;  cuando se pulsa una tecla en el cliente SSH
se espera obtener una respuesta inmediata, mientras que un retraso de
unos pocos segundos en una transferencia por FTP pasa casi inadvertido.
Pero, &iquest;qué ocurriría si el enrutador que maneja
estas conexiones procesara una gran parte de paquetes de la
conexión de FTP antes de procesar la conexión de SSH?  Los
paquetes de la conexión de SSH se quedarían en la cola (o
incluso serían rechazados por el enrutador si la cola no fuera lo
suficientemente grande como para mantener todos los paquetes) y
podría parecer que hay retrasos en la sesión de SSH, o que
va muy lenta.  Al modificar la estrategia de la cola en uso, las
diversas aplicaciones, usuarios y ordenadores pueden compartir bastante
bien el ancho de banda de la red.

<p>
Nótese que el uso de colas sólo es de utilidad para
paquetes con dirección de salida, <i>desde dentro</i>.  Una vez
que un paquete ha llegado a una interfaz <i>desde fuera</i>, es
demasiado tarde para ponerlo en una cola debido a que ya habrá
consumido el ancho de banda necesario para llegar a la interfaz que
acaba de recibirlo.  En estos casos la única solución es
activar el sistema de colas en el enrutador adyacente o, si el
anfitrión que ha recibido el paquete actúa como enrutador,
activar el sistema de colas en la interfaz interna desde la que los
paquetes salen del enrutador.

<a name="sched"></a>
<h2>Planificadores</h2>
<p>
El planificador (<i>scheduler</i>) es lo que decide qué colas hay que 
procesar y en qué orden deben ser procesadas.  De forma predeterminada
OpenBSD usa un planificador tipo FIFO (<i>First In First Out</i>, 
&laquo;lo primero en entrar es lo primero en salir&raquo;).  
Una cola FIFO funciona como la cola de un
supermercado, en donde el primer producto de la cola es
también el primero que se procesa.  Según van llegando
nuevos paquetes, estos se van añadiendo al final de la
cola.  Si la cola se llena &ndash;y aquí la analogía con el
supermercado acaba&ndash; los nuevos paquetes que vayan llegando van
siendo bloqueados.  Esto se conoce como <i>tail-drop</i>.

<p>
OpenBSD tiene soporte para dos planificadores adicionales:
<ul>
<li>Colas basadas en clases
<li>Colas basadas en prioridades
</ul>

<a name="cbq"></a>
<h3>Colas basadas en clases</h3>
CBQ (<i>Class Based Queueing</i>) es un algoritmo de formación de
colas que divide el ancho de banda de una conexión de red entre
varias colas o clases.  A cada cola se le asigna un tráfico
basándose en la dirección de origen o de destino, el
número de puerto, protocolo, etcétera.  De forma opcional,
se puede configurar una cola para que tome prestado ancho de banda de la
cola matriz de la cual origina, si ésta está siendo
infrautilizada.  A las colas también se les da una prioridad de
modo que aquellas que contengan tráfico interactivo, como SSH,
puedan tener sus paquetes procesados antes que las colas que contengan
tráfico masivo, como FTP.

<p>
Las colas CBQ se ordenan de un modo jerárquico.  En la parte
superior de la jerarquía se encuentra la cola matriz, que define
la cantidad total de ancho de banda disponible.  Las colas derivadas de
ésta se crean bajo la cola matriz, y a cada una de ellas se les
puede asignar alguna porción del ancho de banda de la cola
matriz.  Por ejemplo, se pueden definir las colas como sigue:
<dl>
<dd>Cola Matriz (2Mbps)
	<dl>
	<dd>Cola A (1Mbps)
	<dd>Cola B (500Kbps)
	<dd>Cola C (500Kbps)
	</dl>
</dl>

<p>
En este caso, el ancho de banda total disponible se ha configurado a 2
megabits por segundo (Mbps), que luego se divide entre las tres colas
derivadas.

<p>
La jerarquía se puede expandir aún más definiendo
colas dentro de otras colas.  Para dividir el ancho de banda en partes
iguales entre varios usuarios y clasificar también el
tráfico de éstas con el fin de evitar que ciertos
protocolos agoten el ancho de banda de otros, se puede definir una
estructura de formación de colas como la siguiente:
<dl>
<dd>Cola Matriz (2Mbps)
	<dl>
	<dd>UsuarioA (1Mbps)
		<dl>
		<dd>ssh (50Kbps)
		<dd>tráf. masivo (950Kbps)
		</dl>
	<dd>UsuarioB (1Mbps)
		<dl>
		<dd>audio (250Kbps)
		<dd>tráf. masivo (750Kbps)
			<dl>
			<dd>http (100Kbps)
			<dd>otro tráfico (650Kbps)
			</dl>
		</dl>
	</dl>
</dl>

<p>
Nótese que, en cada nivel, la suma del ancho de banda asignado a
cada una de las colas no es superior al ancho de banda asignado a la
cola matriz.

<p>
Se puede configurar una cola para que tome prestado ancho de banda de la
cola de la que origina, si le sobra ancho de banda debido a que no
está siendo utilizado por otras colas derivadas.  Tomemos como
ejemplo una configuración de formación de colas como la
siguiente:
<dl>
<dd>Cola Matriz (2Mbps)
	<dl>
	<dd>UsuarioA (1Mbps)
		<dl>
		<dd>ssh (100Kbps)
		<dd>ftp (900Kbps, préstamo)
		</dl>
	<dd>UsuarioB (1Mbps)
	</dl>
</dl>

<p>
Si el tráfico en la cola de <tt>ftp</tt> excede los 900Kbps y el
tráfico en la cola del <tt>UsuarioA</tt> es menor de 1Mbps
(debido a que la cola de <tt>ssh</tt> está usando menos tráfico que
los 100Kbps asignados), la cola de <tt>ftp</tt> tomará prestado
el ancho de banda sobrante del <tt>UsuarioA</tt>.  De este modo, la cola
de <tt>ftp</tt> podrá usar más ancho de banda del que
tiene asignado cuando sufra una sobrecarga.  Cuando la cola de
<tt>ssh</tt> incremente su carga, se devolverá el ancho de banda
que se ha tomado prestado.

<p>
CBQ asigna a cada cola un nivel de prioridad.  Las colas con una
prioridad más alta tendrán preferencia sobre las colas de
prioridad más baja durante una congestión, ya que ambas
colas comparten la misma matriz de origen (o sea, siempre que ambas
colas se encuentren en la misma rama dentro de la jerarquía).
Las colas con una misma prioridad se procesan del modo
<i>round-robin</i>.  Por ejemplo:
<dl>
<dd>Cola Matriz (2Mbps)
	<dl>
	<dd>UsuarioA (1Mbps, prioridad 1)
		<dl>
		<dd>ssh (100Kbps, prioridad 5)
		<dd>ftp (900Kbps, prioridad 3)
		</dl>
	<dd>UsuarioB (1Mbps, prioridad 1)
	</dl>
</dl>

<p>
CBQ procesará las colas del <tt>UsuarioA</tt> y del
<tt>UsuarioB</tt> del modo <i>round-robin</i>;  ninguna de las dos colas
tendrá preferencia sobre la otra.  Al mismo tiempo que
esté procesando la cola del <tt>UsuarioA</tt>, CBQ también
procesará las colas que deriven de ésta.  En este caso, la
cola de <tt>ssh</tt> tiene una prioridad más alta y
obtendrá un trato preferente sobre la cola de <tt>ftp</tt> si hay
congestión en la red.  Nótese que no se comparan las
prioridades de las colas de <tt>ssh</tt> y <tt>ftp</tt> con las colas
del <tt>UsuarioA</tt> y <tt>UsuarioB</tt>, ya que no están en la
misma rama dentro de la jerarquía.

<p>
Para una explicación más detallada de la teoría
detrás de CBQ, véanse estas
<a href="http://www.icir.org/floyd/cbq.html">Referencias sobre CBQ</a>.

<a name="priq"></a>
<h3>Colas basadas en prioridades</h3>
<p>
Las colas basadas en prioridades (PRIQ) asignan colas múltiples 
a una interfaz de red, y dan a cada cola un nivel de prioridad. 
Una cola con un nivel de prioridad más alto se procesa 
<i>siempre</i> antes que una cola con un nivel de prioridad más bajo.
Si a dos o más colas se les asigna la misma prioridad, 
son procesadas en modo <i>round-robin</i>.

<p>
La estructura de formación de colas en PRIQ es estricta, y no se
pueden definir colas dentro de otras colas.  Se define sólo la
cola matriz, en la que se decide la cantidad total de ancho de banda
disponible y, a partir de ahí, las &laquo;sub-colas&raquo; se
definen bajo la cola matriz.  Consideremos el siguiente ejemplo:
<dl>
<dd>Cola Matriz (2Mbps)
	<dl>
	<dd>Cola A (prioridad 1)
	<dd>Cola B (prioridad 2)
	<dd>Cola C (prioridad 3)
	</dl>
</dl>

<p>
La cola matriz está definida con un ancho de banda de 2Mbps
disponible para sí misma, y se han definido tres subcolas.  La
cola con la prioridad más alta (el número de prioridad
más alto) es la que se procesa primero.  Una vez que se han
procesado todos los paquetes en esa cola, o si la cola estuviera
vacía, PRIQ pasa a la cola que tenga el siguiente nivel de
prioridad más alto.  Dentro de una cola cualquiera, los paquetes
se procesan del modo FIFO.

<p>
Es importante tener en cuenta que cuando se usa PRIQ hay que planificar
las colas con mucho cuidado.  Debido a que PRIQ <i>siempre</i> procesa
una cola de prioridad más alta antes que otra de prioridad
más baja, es posible que una cola de alta prioridad sea la causa
de que se retrasen, o incluso se lleguen a bloquear, paquetes en una
cola de prioridad más baja si la cola de alta prioridad
está recibiendo un flujo constante de paquetes.

<a name="red"></a>
<h3>Detección aleatoria anticipada</h3>
<p>
La detección aleatoria anticipada (RED, <i>Random Early 
Detection</i>) es un algoritmo que se utiliza para evitar la 
congestión.  Su trabajo es evitar la congestión en la red, 
asegurándose de que la cola no se llene.  Para ello calcula 
constantemente la longitud media (el tamaño) de la cola y
la compara con dos umbrales o límites, un umbral mínimo y
otro máximo.  Si el tamaño medio de la cola se encuentra
por debajo del umbral mínimo, entonces no se bloqueará
ningún paquete.  Si el tamaño medio se encuentra por
encima del umbral máximo, entonces <i>todos</i> los paquetes
nuevos que lleguen serán bloqueados.  Si el tamaño medio
se encuentra entre los valores de los dos umbrales, entonces se
bloquearán los paquetes de acuerdo con un cálculo de
probabilidad obtenido a raíz del tamaño medio de la cola.
En otras palabras,  según se va aproximando el tamaño
medio de la cola al umbral máximo, se va bloqueando un
número cada vez mayor de paquetes.  Cuando bloquea los paquetes,
RED escoge de qué conexiones bloqueará los paquetes de una
forma aleatoria.  Las conexiones que usen mayores cantidades de ancho de
banda serán las que tengan una probabilidad más alta de
que se bloqueen sus paquetes.

<p>
RED es muy útil por que evita una situación conocida como
sincronización global, explosiones repentinas de tráfico
(desbordamientos).  La sincronización global se refiere a una
pérdida total de caudal debida al bloqueo de paquetes desde
varias conexiones al mismo tiempo.  Por ejemplo, si la congestión
tiene lugar en un enrutador que lleva tráfico para 10 conexiones
de FTP y se están bloqueando los paquetes de todas estas
conexiones (o de la mayoría de ellas), como ocurre con la
formación de colas tipo FIFO, el caudal total caerá de
forma significativa.  Esta situación no es deseable por que
provoca que todas las conexiones de FTP reduzcan su caudal, y
también implica que la red ya no puede ser utilizada en su
potencia máxima.  RED evita esta situación escogiendo de
forma aleatoria las conexiones cuyos paquetes bloqueará, en lugar
de escogerlas todas.  Las conexiones que usen grandes cantidades de
ancho de banda tienen una mayor probabilidad de que sus paquetes sean
bloqueados.  De esta forma se moderará el ritmo de las conexiones
que usen un mayor ancho de banda, se evitará la
congestión, y no habrán pérdidas significativas en
el caudal total.  Además de esto, RED también puede
manejar explosiones repentinas de tráfico, ya que empieza a
bloquear paquetes <i>antes</i> de que se llene la cola.  Cuando llega
una explosión de tráfico no hay espacio suficiente en la
cola para contener los nuevos paquetes.

<p>
RED sólo se debería usar cuando el protocolo de transporte
fuera capaz de responder a los indicadores de congestión de la
red.  En la mayoría de casos esto significa que RED se
debería usar para poner en cola el tráfico TCP, y no el
tráfico UDP o ICMP.

<p>
Para una explicación más detallada de la teoría
detrás de RED, véanse estas
<a href="http://www.icir.org/floyd/red.html">Referencias sobre RED</a>.

<a name="ecn"></a>
<h3>Notificación explícita de congestión</h3>
<p>
ECN (<i>Explicit Congestion Notification</i>) funciona en
conjunción con RED para notificar a dos anfitriones que se
comuniquen a través de la red sobre cualquier congestión
existente en el camino de la comunicación.  Para ello permite que
RED active un indicador en la cabecera del paquete, en lugar de bloquear
el paquete.  Si el anfitrión remitente tiene soporte para ECN,
entonces puede leer este indicador y moderar el ritmo del tráfico
de su red en consecuencia.

<p>
Para más información sobre ECN, véase el
<a href="http://www.rfc-editor.org/rfc/rfc3168.txt">RFC 3168</a>.

<a name="altq"></a>
<h2>Configuración de la formación de colas</h2>
<p>
Desde la versión 3.0 de OpenBSD, la implementación
<a href="http://www.csl.sony.co.jp/person/kjc/kjc/software.html#ALTQ">
ALTQ (<i>Alternate Queueing</i>)</a> de formación de colas ha
sido parte del sistema base.  Desde OpenBSD 3.3, ALTQ se ha integrado
en PF.  La implementación de ALTQ de OpenBSD tiene soporte para
planificadores de Colas Basadas en Clase (CBQ) y Colas Basadas en
Prioridades (PRIQ).  También tiene soporte para 
Detección Aleatoria Anticipada (RED) y Notificación Explícita
de Congestión (ECN).

<p>
Debido a que ALTQ ha sido fusionado con PF, es necesario activar PF para
que funcione la formación de colas.  Las instrucciones para la
activación de PF se pueden encontrar en la sección de
<a href="config.html#activate">Primeros pasos</a>.

<p>
La formación de colas se configura en <tt>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+4.8"
>pf.conf</a></tt>.
Existen dos tipos de directivas usadas para configurar la
formación de colas:
<ul>
<li><tt>altq on</tt> - activa la formación de colas en un
interfaz, define el <i>scheduler</i> que se usará, y crea la cola
matriz
<li><tt>queue</tt> - define las propiedades de una cola derivada
</ul>

<p>
La sintaxis para la directiva <tt>altq on</tt> es:
<blockquote>
<tt>
altq on <i>interface scheduler</i> bandwidth <i>bw</i> qlimit 
<i>qlim</i> \<br>
&nbsp;&nbsp;&nbsp;tbrsize <i>size</i> queue { <i>queue_list</i> }
</tt>
</blockquote>

<ul>
<li><tt><i>interface</i></tt> - la interfaz de red en la que se vaya a
activar la formación de colas.
<li><tt><i>scheduler</i></tt> - el planificador que se usará
para la formación de colas.  Los valores que acepta son
<tt>cbq</tt> y <tt>priq</tt>.  Sólo se puede activar un
<i>scheduler</i> en una interfaz al mismo tiempo.
<li><tt><i>bw</i></tt> - la cantidad total de ancho de banda disponible
para el planificador.  Se puede especificar como un valor absoluto
usando los sufijos <tt>b</tt>, <tt>Kb</tt>, <tt>Mb</tt> y <tt>Gb</tt>
para representar bits, kilobits, megabits, y gigabits por segundo
respectivamente, o como porcentaje del ancho de banda de
<tt><i>interface</i></tt>.
<li><tt><i>qlim</i></tt> - el número máximo de paquetes
que puede contener la cola.  Este parámetro es opcional, y la
configuración predeterminada es de 50.
<li><tt><i>size</i></tt> - el tamaño del regulador de prueba
en bytes.  Si no se especifica, el tamaño se configurará 
basándose en el ancho de banda de <tt><i>interface</i></tt>.
<li><tt><i>queue_list</i></tt> - una lista de las colas derivadas que se
crearán bajo la cola matriz.
</ul>

<p>
Por ejemplo:
<blockquote>
<tt>
altq on fxp0 cbq bandwidth 2Mb queue { std, ssh, ftp }
</tt>
</blockquote>
Esto activa CBQ en la interfaz <tt>fxp0</tt>.  El ancho de banda total
disponible está configurado en 2Mbps.  Se han definido tres colas
derivadas: <tt>std</tt>, <tt>ssh</tt> y <tt>ftp</tt>.

<p>
La sintaxis para la directiva <tt>queue</tt> es:
<blockquote>
<tt>
queue <i>name</i> [on <i>interface</i>] bandwidth <i>bw</i> [priority 
<i>pri</i>] [qlimit <i>qlim</i>] \<br>
&nbsp;&nbsp;&nbsp;<i>scheduler</i> ( <i>sched_options</i> )
{ <i>queue_list</i> }
</tt>
</blockquote>

<ul>
<li><tt><i>name</i></tt> - el nombre de la cola.  Debe coincidir con el
nombre de una de las colas definidas por <tt><i>queue_list</i></tt> en
la directiva <tt>altq on</tt>.  Para <tt>cbq</tt>, también puede
coincidir con el nombre de una cola definida por
<tt><i>queue_list</i></tt> en la directiva <tt>queue</tt> anterior.  Los
nombres de las colas no deben exceder los 15 caracteres.
<li><tt><i>interface</i></tt> - la interfaz de red en la que la cola es
válida.  Este valor es opcional, y cuando no se especifique la
cola será válida en todas las interfaces.
<li><tt><i>bw</i></tt> - la cantidad total de ancho de banda disponible
para la cola.  Se puede especificar como un valor absoluto usando los
sufijos <tt>b</tt>, <tt>Kb</tt>, <tt>Mb</tt>, y <tt>Gb</tt> para
representar bits, kilobits, megabits, y gigabits por segundo
respectivamente, o como porcentaje del ancho de banda de la cola
principal.
Este parámetro sólo es aplicable cuando se usa el
planificador <tt>cbq</tt>.  Si no se especifica, el valor predeterminado
es el 100% del ancho de banda de la cola principal.
<li><tt><i>pri</i></tt> - la prioridad de la cola.  Para <tt>cbq</tt>
el rango de prioridad va de 0 a 7, y para <tt>priq</tt> el rango va de 0
a 15.  La prioridad 0 es la más baja.  Si no se especifica, se
usará un valor predeterminado de 1.
<li><tt><i>qlim</i></tt> - el número máximo de paquetes
que puede contener la cola.  Si no se especifica, se usará un
valor predeterminado de 50.
<li><tt><i>scheduler</i></tt> - el <i>scheduler</i> que se utilice, ya
sea <tt>cbq</tt> o <tt>priq</tt>.  Debe ser el mismo que para la cola
matriz.
<li><tt><i>sched_options</i></tt> - opciones adicionales que se pueden
pasar al <i>scheduler</i> para controlar su comportamiento:
	<ul>
	<li><tt>default</tt> - define una cola predeterminada a la que
	irán todos los paquetes que no coincidan con ninguna otra
	cola.  Es necesaria la definición de al menos una cola
	predeterminada.
	<li><tt>red</tt> - activa RED en esta cola.
	<li><tt>rio</tt> - activa RED con IN/OUT.  En este modo, RED
	mantendrá tamaños medios de cola múltiples y
	valores de umbrales múltiples, uno por cada nivel de Calidad
	de Servicio de IP (<i>IP Quality of Service</i>).
	<li><tt>ecn</tt> - activa ECN en esta cola.  <tt>ecn</tt> implica
	<tt>red</tt>.
	<li><tt>borrow</tt> - la cola puede tomar ancho de banda prestado de
	su cola matriz.  Esto sólo se puede especificar cuando se usa
	el <i>scheduler</i> <tt>cbq</tt>.
	</ul>
<li><tt><i>queue_list</i></tt> - una lista de colas derivadas que se
crearán bajo esta cola.  Una <tt><i>queue_list</i></tt>
sólo se puede definir cuando se usa el <i>scheduler</i>
<tt>cbq</tt>.
</ul>

Continuando con el ejemplo anterior:
<blockquote>
<tt>
queue std bandwidth 50% cbq(default)<br>
queue ssh bandwidth 25% { ssh_login, ssh_bulk }<br>
&nbsp;&nbsp;queue ssh_login bandwidth 25% priority 4 cbq(ecn)<br>
&nbsp;&nbsp;queue ssh_bulk  bandwidth 75% cbq(ecn)<br>
queue ftp bandwidth 500Kb priority 3 cbq(borrow red)<br>
</tt>
</blockquote>

<p>
Aquí se encuentran activados los parámetros de las colas
derivadas anteriormente definidas.  A la cola <tt>std</tt> se le ha
asignado un ancho de banda del 50% del ancho de banda de la cola matriz
(o 1Mbps), y está configurada como la cola predeterminada.
A la cola <tt>ssh</tt> se le ha asignado el 25% del ancho de banda de 
la cola matriz (500kb) y también contiene dos colas derivadas:  
<tt>ssh_login</tt> y <tt>ssh_bulk</tt>.  A <tt>ssh_login</tt> se 
le ha dado una prioridad más alta que a <tt>ssh_bulk</tt>, 
y ambas tienen ECN activado.  A la cola de <tt>ftp</tt> se le ha 
asignado un ancho de banda de 500Kbps y se le ha dado una prioridad de 3.  
También puede tomar prestado ancho de banda cuando haya disponible 
ancho de banda adicional.  Tiene RED activado.

<p>
<b>NOTA:</b> Cada definición de cola derivada tiene su ancho de 
banda especificado.  Sin especificar el ancho de banda, PF dará 
a la cola el 100% del ancho de banda de la cola principal. 
Esta situación podría causar un error al cargar las 
reglas, pues si ya existe una cola con el 100% del ancho de banda, 
no puede definirse otra cola en ese nivel, ya que no hay ancho 
de banda libre para asignarse.

<a name="assign"></a>
<h3>Asignación de tráfico a una cola</h3>
<p>
Para asignar tráfico a una cola se usa la palabra-clave <tt>queue</tt>
junto con las <a href="filter.html">reglas de filtrado</a> de PF.  Por
ejemplo, en un conjunto de reglas de filtrado que contengan una
línea como:
<blockquote>
<tt>pass out on fxp0 proto tcp to port 22</tt>
</blockquote>

<p>
Los paquetes que coincidan con esa regla pueden ser asignados a 
una cola específica usando la clave <tt>queue</tt>:
<blockquote>
<tt>pass out on fxp0 proto tcp to port 22 queue ssh</tt>
</blockquote>

<p>
Cuando se crea una entrada en la tabla de estado por medio de 
esta regla, PF registra la cola en la entrada de la tabla de 
estado; esta se utilizará por otros paquetes permitidos para 
esta entrada:
<blockquote>
<tt>pass in on fxp0 proto tcp to port 80 queue http</tt>
</blockquote>
Con esta regla, los paquetes que vuelvan a <tt>fxp0</tt> y
que coincidan con la conexión activa acaban en la cola 
<tt>http</tt>. Tenga en cuenta que, aunque se esté usando la 
palabra-clave <tt>queue</tt> en una regla que filtra el tráfico 
entrante, el objetivo es especificar una cola para el tráfico 
saliente correspondiente; la regla anterior no pone en cola los 
paquetes entrantes.

<p>
Cuando se usa la clave <tt>queue</tt> con directivas de bloqueo
<tt>block</tt>, cualquier paquete TCP RST o ICMP resultante que no se
pueda alcanzar será asignado a la cola específica.

<p>
Nótese que la clasificación de la cola puede tener lugar
en una interfaz que no sea la definida por la directiva
<tt>altq on</tt>:
<blockquote>
<tt> 
altq on fxp0 cbq bandwidth 2Mb queue { std, ftp }<br>
queue std bandwidth 500Kb cbq(default)<br>
queue ftp bandwidth 1.5Mb<br>
<br>
pass in on dc0 proto tcp to port 21 queue ftp<br>
</tt>
</blockquote>

<p>
La formación de cola está activada en la interfaz
<tt>fxp0</tt>, pero la clasificación tiene lugar en la interfaz
<tt>dc0</tt>.  Si los paquetes que coinciden con la regla <tt>pass</tt>
(o el estado creado por esta regla) salen de la interfaz 
<tt>fxp0</tt>, pasarán a la cola <tt>ftp</tt>.  Este tipo de 
formación de colas puede ser muy útil para enrutadores.

<p>
Normalmente sólo se da un nombre de cola con la clave
<tt>queue</tt>, pero si se especifica un segundo nombre esa cola se
usará para paquetes con un Tipo de Servicio
(<a href="http://www.rfc-editor.org/rfc/rfc791.txt">ToS, <i>Type of
Service</i></a>) de retraso bajo y para paquetes TCP ACK sin carga
útil de datos.  Un buen ejemplo de esto se encuentra cuando se
usa SSH.  Las sesiones de ingreso de SSH configuran el ToS para retrasos
bajos, mientras que las sesiones de SCP y SFTP no.  PF puede usar esta
información para poner en la cola paquetes que pertenezcan a una
conexión de ingreso en una cola diferente a la de las conexiones
que no sean de ingreso.  Esto es útil para dar prioridad a los
paquetes de conexiones de ingreso sobre los paquetes de transferencia de
archivos.
<blockquote>
<tt>pass out on fxp0 from any to any port 22 queue(ssh_bulk, ssh_login)</tt>
</blockquote>

<p>
Esto asigna los paquetes que pertenecen a las conexiones de ingreso de
SSH a la cola <tt>ssh_login</tt>, y los paquetes que pertenecen a las
conexiones de transferencia de archivos de SCP y SFTP a la cola
<tt>ssh_bulk</tt>.  En consecuencia, los paquetes de las conexiones de
ingreso de SSH serán procesados antes que los de las conexiones
de SCP y SFTP, ya que la cola <tt>ssh_login</tt> tiene una prioridad
más alta.

<p>
La asignación de paquetes TCP ACK a una cola de prioridad
más alta es útil en conexiones asimétricas, o sea
aquellas conexiones que tienen anchos de banda de subida y bajada
diferentes, como las líneas ADSL.  Con una línea ADSL, si
se está uilizando al máximo el canal de subida y se inicia
una bajada, la descarga sufrirá porque los paquetes TCP ACK
que necesita enviar entrarán en congestión cuando intenten
pasar a través del canal de subida.  Las pruebas realizadas
demuestran que para obtener los mejores resultados, el ancho de banda en
la cola de subida debe estar configurado con un valor inferior al de la
capacidad de la conexión.  Por ejemplo, si una línea ADSL
tiene un máximo de subida de 640Kbps, al configurar el ancho de
banda de la cola matriz, se obtendrán mejores resultados con un
valor de 600Kb.  La forma para obtener la mejor configuración del
ancho de banda es probando varias configuraciones.

<a name="example1"></a>
<h2>Ejemplo #1: Red doméstica</h2>
<pre>
  
    [ Alice ]    [ Charlie ]
        |             |                              ADSL
     ---+-----+-------+------ dc0 [ OpenBSD ] fxp0 -------- ( Internet )
              |
           [ Bob ]

</pre>

<p>
En este ejemplo se está usando OpenBSD como pasarela de Internet
para una red pequeña casera con tres estaciones de trabajo.  La
pasarela está realizando filtrado de paquetes y tareas de NAT.
La conexión a Internet es a través de una línea
ADSL con una velocidad de 2Mbps de bajada y 640Kbps de subida.

<p>
La política de formación de colas para esta red es:
<ul>
<li>Reservar 80Kbps de ancho de banda de bajada para Bob, para que
pueda jugar con su juegos en Internet sin retrasos ocasionados por las
descargas de Alice o Charlie.  Permitir que Bob use más de 80Kbps
cuando se encuentren disponibles.
<li>El tráfico de SSH y de mensajería instantánea
tendrá una prioridad más alta que el tráfico
regular.
<li>Los requerimientos y respuestas de DNS tendrán la segunda
prioridad más alta.
<li>Los paquetes salientes de TCP ACK tendrán una prioridad
más alta que el resto del tráfico saliente.
</ul>

<p>
A continuación puede verse un conjunto de reglas que cumple esta
política de red.  Nótese que sólo están
presentes aquellas directivas de <tt>pf.conf</tt> que se aplican
directamente a la política anterior.

<p>
<table border=0 width="650">
<tr><td nowrap bgcolor="#EEEEEE">
<pre>
# activar la formación de colas en la interfaz externa para controlar
# el tráfico que sale hacia Internet;  usar el <i>scheduler</i> priq para
# controlar sólo las prioridades; configurar el ancho de banda con
# un valor de 610Kbps para obtener el mejor rendimiento de la cola TCP ACK.

altq on fxp0 priq bandwidth 610Kb queue { std_out, ssh_im_out, dns_out, \
	tcp_ack_out }

# definir los parámetros para las colas derivadas.
# std_out      - la cola estándar; el tráfico de cualquier regla de
#		 filtrado que no especifique de forma explícita una
#		 cola será añadido a esta cola.
# ssh_im_out   - tráfico interactivo de SSH y varios mensajes instantáneos.
# dns_out      - requerimientos de DNS.
# tcp_ack_out  - paquetes TCP ACK sin carga útil de datos.

queue std_out     priq(default)
queue ssh_im_out  priority 4 priq(red)
queue dns_out     priority 5
queue tcp_ack_out priority 6

# activar la formación de colas en la interfaz interna para controlar
# el tráfico entrante procedente de Internet;  usar el <i>scheduler</i>
# cbq para controlar el ancho de banda;  el ancho de banda máximo
# es de 2Mbps.

altq on dc0 cbq bandwidth 2Mb queue { std_in, ssh_im_in, dns_in, bob_in }

# definir los parámetros para las colas derivadas.
# std_in      - la cola estándar; el tráfico de cualquier regla de
#		filtrado por debajo que no especifique de forma explícita
#		una cola será añadido a esta cola.
# ssh_im_in   - tráfico interactivo de SSH y varios mensajes instantáneos.
# dns_in      - respuestas de DNS.
# bob_in      - ancho de banda reservado para la estación de Bob;
#		permitirle que tome prestado.

queue std_in    bandwidth 1.6Mb cbq(default)
queue ssh_im_in bandwidth 200Kb priority 4
queue dns_in    bandwidth 120Kb priority 5
queue bob_in    bandwidth 80Kb cbq(borrow)


# ... en la sección de filtrado de pf.conf ...

alice         = "192.168.0.2"
bob           = "192.168.0.3"
charlie       = "192.168.0.4"
local_net     = "192.168.0.0/24"
ssh_ports     = "{ 22 2022 }"
im_ports      = "{ 1863 5190 5222 }"

# reglas de filtrado para fxp0 entrante
block in on fxp0 all

# reglas de filtrado para fxp0 saliente
block out on fxp0 all
pass  out on fxp0 inet proto tcp from (fxp0) queue(std_out, tcp_ack_out)
pass  out on fxp0 inet proto { udp icmp } from (fxp0)
pass  out on fxp0 inet proto { tcp udp } from (fxp0) to port domain \
	queue dns_out
pass  out on fxp0 inet proto tcp from (fxp0) to port $ssh_ports \
	queue(std_out, ssh_im_out)
pass  out on fxp0 inet proto tcp from (fxp0) to port $im_ports \
	queue(ssh_im_out, tcp_ack_out)

# reglas de filtrado para dc0 entrante
block in on dc0 all
pass  in on dc0 from $local_net

# reglas de filtrado para dc0 saliente
block out on dc0 all
pass  out on dc0 to $local_net
pass  out on dc0 proto { tcp udp } from port domain to $local_net \
	queue dns_in
pass  out on dc0 proto tcp from port $ssh_ports to $local_net \
	queue(std_in, ssh_im_in)
pass  out on dc0 proto tcp from port $im_ports to $local_net \
	queue ssh_im_in
pass  out on dc0 to $bob queue bob_in
</pre>
</td></tr>
</table>

<a name="example2"></a>
<h2>Ejemplo #2: Red corporativa</h2>
<pre>

  ( Dept IT )  [ PC del jefe ]
       |             |                                T1
     --+----+--------+------- dc0 [ OpenBSD ] fxp0 -------- ( Internet )
            |                         fxp1
         [ COMP1 ]    [ WWW ]         /
                         |           / 
                       --+----------' 

</pre>

<p>
En este ejemplo, el anfitrión de OpenBSD actúa como
cortafuegos para la red de una compañía.  La
compañía tiene un servidor de WWW en la &laquo;zona
desmilitarizada&raquo; (DMZ) de su red, en el que los clientes cargan
sus sitios web mediante FTP.  El departamento de
Informática, IT, tiene su propia subred conectada a la red
principal, y el jefe tiene un PC en su escritorio que usa para correo
electrónico y para navear por Internet.  La conexión a
Internet es a través de una línea T1 a 1.5Mbps en ambas
direcciones.  El resto de los segmentos de la red usan Fast Ethernet
(100Mbps).

<p>
El administrador de la red ha decidido aplicar la siguiente
política:
<ul>
<li>Limitar todo el tráfico entre el servidor de WWW e Internet a
500Kbps en cada dirección.
	<ul>
	<li>Reservar 250Kbps para el tráfico HTTP.
	<li>Reservar 250Kbps para el resto de tráfico (por ejemplo tráfico no-HTTP)
	<li>Permitir a cualquier cola tomar prestados los 500Kbps completos.
	<li>Dar una mayor prioridad al tráfico de HTTP entre el servidor
	de WWW e Internet que al resto del tráfico entre el servidor de
	WWW e Internet (como a las subidas por FTP).
	</ul>
<li>El tráfico entre el servidor de WWW y la red interna puede usar
los 100Mbps totales que ofrece la red.
<li>Reservar 500Kbps para el Departamento de IT para que puedan descargar 
las últimas actualizaciones de software a tiempo.  Pueden usar
más de 500Kbps cuando haya ancho de banda adicional disponible.
<li>Dar una prioridad más alta al tráfico entre el PC del
jefe e Internet que al resto de tráfico hacia/desde Internet.
</ul>

<p>
A continuación puede verse el conjunto de reglas que cumple esta
política de red.  Nótese que sólo están
presentes aquellas directivas de <tt>pf.conf</tt> que se aplican
directamente a la política anterior;  no se muestran las reglas
de <a href="nat.html"><tt>nat</tt></a>,
<a href="rdr.html"><tt>rdr</tt></a>, las
<a href="options.html">opciones</a>, etc.

<p>
<table border="0" width="650">
<tr><td nowrap bgcolor="#EEEEEE">
<pre>
# activar la formación de colas en la interfaz externa para poner
# en cola a los paquetes salientes hacia Internet; usar el
# <i>scheduler</i> cbq para que se pueda controlar la utilización
# de ancho de banda de cada cola; el ancho de banda saliente
# máximo es de 1.5Mbps.

altq on fxp0 cbq bandwidth 1.5Mb queue { std_ext, www_ext, boss_ext }

# definir los parámetros para las colas derivadas.
# std_ext         - la cola estándar;  también la cola predeterminada
#		    para el tráfico saliente en fxp0.
# www_ext         - cola contenedora para colas del servidor de WWW;
#		    limitada a 500Kbps.
#   www_ext_http  - tráfico http desde el servidor de WWW; mayor prioridad
#   www_ext_misc  - todo el tráfico no http desde el servidor
#		    de WWW.
# boss_ext        - tráfico entrante desde el PC del jefe.

queue std_ext        bandwidth 500Kb cbq(default borrow)
queue www_ext        bandwidth 500Kb { www_ext_http, www_ext_misc }
  queue www_ext_http bandwidth 50% priority 3 cbq(red borrow)
  queue www_ext_misc bandwidth 50% priority 1 cbq(borrow)
queue boss_ext       bandwidth 500Kb priority 3 cbq(borrow)

# activar la formación de colas en la interfaz interna para
# controlar el tráfico entrante desde Internet o desde la DMZ;
# usar el planificador cbq para controlar el ancho de banda de cada
# cola;  el ancho de banda en esta interfaz está configurado al
# máximo; el tráfico entrante desde la DMZ podrá usar todo este
# ancho de banda, mientras que el tráfico entrante desde Internet
# tendrá un límite de 1.0Mbps (por que se han ubicado 0.5Mbps
# (500Kbps) para fxp1).

altq on dc0 cbq bandwidth 100% queue { net_int, www_int }

# definir los parámetros para las colas derivadas.
# net_int    - cola contenedora para el tráfico desde Internet;
	       el ancho de banda es de 1.0Mbps.
#   std_int  - la cola estándar;  también la cola predeterminada
#	       para el tráfico saliente en dc0.
#   it_int   - tráfico hacia la red del Dept IT; les reserva 500kbps.
#   boss_int - tráfico hacia el PC del jefe; asigna una mayor prioridad.
# www_int    - tráfico desde el servidor de WWW en la DMZ; máxima velocidad.

queue net_int    bandwidth 1.0Mb { std_int, it_int, boss_int }
  queue std_int  bandwidth 250Kb cbq(default borrow)
  queue it_int   bandwidth 500Kb cbq(borrow)
  queue boss_int bandwidth 250Kb priority 3 cbq(borrow)
queue www_int    bandwidth 99Mb cbq(red borrow)

# activar la formación de colas en la interfaz de DMZ para
# controlar el tráfico destinado al servidor de WWW;
# se usará cbq en esta interfaz ya que es necesario un control
# detallado del ancho de banda; el ancho de banda en esta interfaz
# está configurado al máximo; el tráfico desde la red interna
# podrá usar todo este ancho de banda, mientras que el
# tráfico desde Internet estará limitado a 500Kbps.

altq on fxp1 cbq bandwidth 100% queue { internal_dmz, net_dmz }

# definir los parámetros para las colas derivadas.
# internal_dmz   - tráfico desde la red interna.
# net_dmz        - cola contenedora para tráfico desde Internet.
#   net_dmz_http - tráfico http; mayor prioridad
#   net_dmz_misc - todo el tráfico no-http; es la cola predeterminada.

queue internal_dmz   bandwidth 99Mb cbq(borrow)
queue net_dmz        bandwidth 500Kb { net_dmz_http, net_dmz_misc }
  queue net_dmz_http bandwidth 50% priority 3 cbq(red borrow)
  queue net_dmz_misc bandwidth 50% priority 1 cbq(default borrow)


# ... en la sección de filtrado de pf.conf ...

main_net  = "192.168.0.0/24"
it_net    = "192.168.1.0/24"
int_nets  = "{ 192.168.0.0/24, 192.168.1.0/24 }"
dmz_net   = "10.0.0.0/24"

boss      = "192.168.0.200"
wwwserv   = "10.0.0.100"

# denegación predeterminada
block on { fxp0, fxp1, dc0 } all

# reglas de filtrado para fxp0 entrante
pass in on fxp0 proto tcp from any to $wwwserv port { 21, \
	&gt; 49151 } queue www_ext_misc
pass in on fxp0 proto tcp from any to $wwwserv port 80 queue www_ext_http

# reglas de filtrado para fxp0 saliente
pass out on fxp0 from $int_nets
pass out on fxp0 from $boss queue boss_ext

# reglas de filtrado para dc0 entrante
pass in on dc0 from $int_nets
pass in on dc0 from $it_net queue it_int
pass in on dc0 from $boss queue boss_int
pass in on dc0 proto tcp from $int_nets to $wwwserv port { 21, 80, \
	&gt; 49151 } queue www_int

# reglas de filtrado para dc0 saliente
pass out on dc0 from dc0 to $int_nets

# reglas de filtrado para fxp1 entrante
pass in on fxp1 proto { tcp, udp } from $wwwserv to port 53

# reglas de filtrado para fxp1 saliente
pass out on fxp1 proto tcp to $wwwserv port { 21, \
	&gt; 49151 } queue net_dmz_misc
pass out on fxp1 proto tcp to $wwwserv port 80 queue net_dmz_http
pass out on fxp1 proto tcp from $int_nets to $wwwserv port { 80, \
	21, &gt; 49151 } queue internal_dmz
</pre>
</td></tr>
</table>

<p>
[<a href="anchors.html">Anterior: Anclajes</a>]
[<a href="index.html">Contenido</a>]
[<a href="pools.html">Siguiente: Reserva de direcciones y balanceo
de carga</a>]

<p>
<hr>
<a href="index.html"><img height="24" width="24" src="../../../images/back.gif" border="0" alt="[back]"></a> 
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: queueing.html,v 1.40 ]<br>
$Translation: queueing.html,v 1.12 2011/03/05 03:23:55 mvidal Exp $<br>
-->
$OpenBSD: queueing.html,v 1.11 2011/03/13 07:16:15 ajacoutot Exp $
</small>

</body>
</html> 
@


1.11
log
@Sync with Steelix CVS
@
text
@d991 1
a991 1
$OpenBSD$
@


1.10
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>PF: Formaci&oacute;n de Colas y Prioridades</title>
d7 3
a9 4
<meta http-equiv="Content-Language" content="es">
<meta name="resource-type" content="documento">
<meta name="description"   content="Preguntas Frecuentes de OpenBSD">
<meta name="keywords"      content="openbsd,preguntas frecuentes,faq,pf">
a10 1
<meta name="copyright"     content="Este documento es copyright 2003-2004 de OpenBSD.">
d13 17
d34 3
a36 1
<img alt="[OpenBSD]" height="30" width="141" src="../../../images/smalltitle.gif">
d38 1
a38 2
[<a href="anchors.html">Anterior: Anclajes y (Sub-) Conjuntos de Reglas
con Nombre</a>]
d40 2
a41 2
[<a href="pools.html">Siguiente: <i>Pools</i> de Direcciones y Balanceo
de Carga</a>]
d44 1
a44 2
<h1><font color="#e00000">PF: Formaci&oacute;n de Colas y Prioridades de
Paquetes</font></h1>
d49 1
a49 1
<h3>&Iacute;ndice de Contenidos</h3>
d51 2
a52 2
<li><a href="#queueing"><i>Queueing</i>: Colas de Procesamiento</a>
<li><a href="#sched"><i>Schedulers</i>:</a>
d54 5
a58 5
	<li><a href="#cbq">Colas Basadas en Clases</a>
	<li><a href="#priq">Colas Basadas en Prioridades</a>
	<li><a href="#red">Pronta Detecci&oacute;n Aleatoria</a>
	<li><a href="#ecn">Notificaci&oacute;n Expl&iacute;cita de
	Congesti&oacute;n</a>
d60 5
a64 5
<li><a href="#altq">Configuraci&oacute;n de la Formaci&oacute;n de
Colas</a>
<li><a href="#assign">Asignaci&oacute;n de Tr&aacute;fico a una Cola</a>
<li><a href="#example1">Ejemplo #1: Red Particular, Peque&ntilde;a</a>
<li><a href="#example2">Ejemplo #2: Red Corporativa</a>
d70 1
a70 1
<h2><i>Queueing</i>: Colas de Procesamiento</h2>
d73 2
a74 2
procesado.  En una red de ordenadores, cuando se env&iacute;an paquetes
desde un anfitri&oacute;n, &eacute;stos entran en un sistema de colas en
d76 2
a77 2
Entonces el sistema operativo decide qu&eacute; cola debe procesar y
qu&eacute; paquete o paquetes de dicha cola.  El orden en el que el
d81 1
a81 1
ser&iacute;a procesar los paquetes de SSH antes que los de FTP, por la
d85 1
a85 1
Pero, &iquest;qu&eacute; ocurrir&iacute;a si el enrutador que maneja
d87 3
a89 3
conexi&oacute;n de FTP antes de procesar la conexi&oacute;n de SSH?  Los
paquetes de la conexi&oacute;n de SSH se quedar&iacute;an en la cola (o
incluso ser&iacute;an rechazados por el enrutador si la cola no fuera lo
d91 1
a91 1
podr&iacute;a parecer que hay retrasos en la sesi&oacute;n de SSH, o que
d97 2
a98 2
N&oacute;tese que el uso de colas s&oacute;lo es de utilidad para
paquetes con direcci&oacute;n de salida, <i>desde dentro</i>.  Una vez
d100 1
a100 1
demasiado tarde para ponerlo en una cola debido a que ya habr&aacute;
d102 1
a102 1
acaba de recibirlo.  En estos casos la &uacute;nica soluci&oacute;n es
d104 1
a104 1
anfitri&oacute;n que ha recibido el paquete act&uacute;a como enrutador,
d109 1
a109 1
<h2><i>Schedulers</i>: </h2>
d111 11
a121 9
El <i>scheduler</i> es lo que decide qu&eacute; colas hay que procesar y
en qu&eacute; orden deben ser procesadas.  Por definici&oacute;n,
OpenBSD usa un <i>scheduler</i> tipo FIFO (el primero en entrar es el
primero en salir).  Una cola FIFO funciona como la cola de un
supermercado o la de un banco, en donde el primer producto de la cola es
tambi&eacute;n el primero que se procesa.  Seg&uacute;n van llegando
nuevos paquetes, &eacute;stos se van a&ntilde;adiendo al final de la
cola.  Si la cola se llena, los nuevos paquetes que vayan llegando van
siendo bloqueados.  Esto se conoce como <i>&quot;tail-drop&quot;</i>.
d124 1
a124 1
OpenBSD tiene soporte para dos <i>schedulers</i> adicionales:
d126 2
a127 2
<li>Colas Basadas en Clases (<i>Class Based Queueing</i>)
<li>Colas Basadas en Prioridades (<i>Priority Queueing</i>)
d131 6
a136 8
<h3>Colas Basadas en Clases</h3>
<!-- queueing ~ formación de colas -->
<p>
CBQ (<i>Class Based Queueing</i>) es un algoritmo de formaci&oacute;n de
colas que divide el ancho de banda de una conexi&oacute;n de red entre
varias colas o clases.  A cada cola se le asigna un tr&aacute;fico
bas&aacute;ndose en la direcci&oacute;n de origen o de destino, el
n&uacute;mero de puerto, protocolo, etc&eacute;tera.  De forma opcional,
d138 3
a140 3
cola matriz de la cual origina, si &eacute;sta est&aacute; siendo
infrautilizada.  A las colas tambi&eacute;n se les da una prioridad de
modo que aquellas que contengan tr&aacute;fico interactivo, como SSH,
d142 1
a142 1
tr&aacute;fico masivo, como FTP.
d145 2
a146 2
Las colas CBQ se ordenan de un modo jer&aacute;rquico.  En la parte
superior de la jerarqu&iacute;a se encuentra la cola matriz, que define
d148 2
a149 2
&eacute;sta se crean bajo la cola matriz, y a cada una de ellas se les
puede asignar alguna porci&oacute;n del ancho de banda de la cola
d166 1
a166 1
La jerarqu&iacute;a se puede expandir a&uacute;n m&aacute;s definiendo
d168 2
a169 2
iguales entre varios usuarios y clasificar tambi&eacute;n el
tr&aacute;fico de &eacute;stas con el fin de evitar que ciertos
d171 1
a171 1
estructura de formaci&oacute;n de colas como la siguiente:
d178 1
a178 1
		<dd>tr&aacute;f. masivo (950Kbps)
d183 1
a183 1
		<dd>tr&aacute;f. masivo (750Kbps)
d186 1
a186 1
			<dd>otro tr&aacute;fico (650Kbps)
d193 1
a193 1
N&oacute;tese que, en cada nivel, la suma del ancho de banda asignado a
d200 2
a201 2
est&aacute; siendo utilizado por otras colas derivadas.  Tomemos como
ejemplo una configuraci&oacute;n de formaci&oacute;n de colas como la
d209 1
a209 1
		<dd>ftp (900Kbps, pr&eacute;stamo)
d216 4
a219 4
Si el tr&aacute;fico en la cola de <tt>ftp</tt> excede los 900Kbps y el
tr&aacute;fico en la cola del <tt>UsuarioA</tt> es menor de de 1Mbps
(debido a que la cola de ssh est&aacute; usando menos tr&aacute;fico que
los 100Kbps asignados), la cola de <tt>ftp</tt> tomar&aacute; prestado
d221 1
a221 1
de <tt>ftp</tt> podr&aacute; usar m&aacute;s ancho de banda del que
d223 1
a223 1
<tt>ssh</tt> incremente su carga, se devolver&aacute; el ancho de banda
d228 2
a229 2
prioridad m&aacute;s alta tendr&aacute;n preferencia sobre las colas de
prioridad m&aacute;s baja durante una congesti&oacute;n, ya que ambas
d231 1
a231 1
colas se encuentren en la misma rama dentro de la jerarqu&iacute;a).
d247 1
a247 1
CBQ procesar&aacute; las colas del <tt>UsuarioA</tt> y del
d249 6
a254 6
tendr&aacute; preferencia sobre la otra.  Al mismo tiempo que
est&eacute; procesando la cola del <tt>UsuarioA</tt>, CBQ tambi&eacute;n
procesar&aacute; las colas que deriven de &eacute;sta.  En este caso, la
cola de <tt>ssh</tt> tiene una prioridad m&aacute;s alta y
obtendr&aacute; un trato preferente sobre la cola de <tt>ftp</tt> si hay
congesti&oacute;n en la red.  N&oacute;tese que no se comparan las
d256 2
a257 2
del <tt>UsuarioA</tt> y <tt>UsuarioB</tt>, ya que no est&aacute;n en la
misma rama dentro de la jerarqu&iacute;a.
d260 2
a261 2
Para una explicaci&oacute;n m&aacute;s detallada de la teor&iacute;a
detr&aacute;s de CBQ, v&eacute;anse estas
d265 1
a265 1
<h3>Colas Basadas en Prioridades</h3>
d267 6
a272 5
Las PRIQ (<i>Priority Queueing</i>) asignan colas m&uacute;ltiples a una
interfaz de red, y dan a cada cola un nivel de prioridad &uacute;nico.
Una cola con un nivel de prioridad m&aacute;s alto se procesa
<i>siempre</i> antes que una cola con un nivel de prioridad m&aacute;s
bajo.
d275 2
a276 2
La estructura de formaci&oacute;n de colas en PRIQ es estricta, y no se
pueden definir colas dentro de otras colas.  Se define s&oacute;lo la
d278 1
a278 1
disponible y, a partir de ah&iacute;, las &laquo;sub-colas&raquo; se
d290 4
a293 4
La cola matriz est&aacute; definida con un ancho de banda de 2Mbps
disponible para s&iacute; misma, y se han definido tres subcolas.  La
cola con la prioridad m&aacute;s alta (el n&uacute;mero de prioridad
m&aacute;s alto) es la que se procesa primero.  Una vez que se han
d295 2
a296 2
vac&iacute;a, PRIQ pasa a la cola que tenga el siguiente nivel de
prioridad m&aacute;s alto.  Dentro de una cola cualquiera, los paquetes
d302 2
a303 2
una cola de prioridad m&aacute;s alta antes que otra de prioridad
m&aacute;s baja, es posible que una cola de alta prioridad sea la causa
d305 2
a306 2
cola de prioridad m&aacute;s baja si la cola de alta prioridad
est&aacute; recibiendo un flujo constante de paquetes.
d309 1
a309 1
<h3>Pronta Detecci&oacute;n Aleatoria</h3>
d311 11
a321 10
RED (<i>Random Early Detection</i>) es un algoritmo que se utiliza para
evitar la congesti&oacute;n.  Su trabajo es evitar la congesti&oacute;n
en la red, asegur&aacute;ndose de que la cola no se llene.  Para ello
calcula constantemente la longitud media (el tama&ntilde;o) de la cola y
la compara con dos umbrales o l&iacute;mites, un umbral m&iacute;nimo y
otro m&aacute;ximo.  Si el tama&ntilde;o medio de la cola se encuentra
por debajo del umbral m&iacute;nimo, entonces no se bloquear&aacute;
ning&uacute;n paquete.  Si el tama&ntilde;o medio se encuentra por
encima del umbral m&aacute;ximo, entonces <i>todos</i> los paquetes
nuevos que lleguen ser&aacute;n bloqueados.  Si el tama&ntilde;o medio
d323 6
a328 6
bloquear&aacute;n los paquetes de acuerdo con un c&aacute;lculo de
probabilidad obtenido a ra&iacute;z del tama&ntilde;o medio de la cola.
En otras palabras,  seg&uacute;n se va aproximando el tama&ntilde;o
medio de la cola al umbral m&aacute;ximo, se va bloqueando un
n&uacute;mero cada vez mayor de paquetes.  Cuando bloquea los paquetes,
RED escoge de qu&eacute; conexiones bloquear&aacute; los paquetes de una
d330 1
a330 1
banda ser&aacute;n las que tengan una probabilidad m&aacute;s alta de
d334 10
a343 10
RED es muy &uacute;til por que evita una situaci&oacute;n conocida como
sincronizaci&oacute;n global, explosiones repentinas de tr&aacute;fico
(desbordamientos).  La sincronizaci&oacute;n global se refiere a una
p&eacute;rdida total de caudal debida al bloqueo de paquetes desde
varias conexiones al mismo tiempo.  Por ejemplo, si la congesti&oacute;n
tiene lugar en un enrutador que lleva tr&aacute;fico para 10 conexiones
de FTP y se est&aacute;n bloqueando los paquetes de todas estas
conexiones (o de la mayor&iacute;a de ellas), como ocurre con la
formaci&oacute;n de colas tipo FIFO, el caudal total caer&aacute; de
forma significativa.  Esta situaci&oacute;n no es deseable por que
d345 3
a347 3
tambi&eacute;n implica que la red ya no puede ser utilizada en su
potencia m&aacute;xima.  RED evita esta situaci&oacute;n escogiendo de
forma aleatoria las conexiones cuyos paquetes bloquear&aacute;, en lugar
d350 5
a354 5
bloqueados.  De esta forma se moderar&aacute; el ritmo de las conexiones
que usen un mayor ancho de banda, se evitar&aacute; la
congesti&oacute;n, y no habr&aacute;n p&eacute;rdidas significativas en
el caudal total.  Adem&aacute;s de esto, RED tambi&eacute;n puede
manejar explosiones repentinas de tr&aacute;fico, ya que empieza a
d356 1
a356 1
una explosi&oacute;n de tr&aacute;fico no hay espacio suficiente en la
d360 5
a364 5
RED s&oacute;lo se deber&iacute;a usar cuando el protocolo de transporte
fuera capaz de responder a los indicadores de congesti&oacute;n de la
red.  En la mayor&iacute;a de casos esto significa que RED se
deber&iacute;a usar para poner en cola el tr&aacute;fico TCP, y no el
tr&aacute;fico UDP o ICMP.
d367 2
a368 2
Para una explicaci&oacute;n m&aacute;s detallada de la teor&iacute;a
detr&aacute;s de RED, v&eacute;anse estas
d372 1
a372 1
<h3>Notificaci&oacute;n Expl&iacute;cita de Congesti&oacute;n</h3>
d375 3
a377 3
conjunci&oacute;n con RED para notificar a dos anfitriones que se
comuniquen a trav&eacute;s de la red sobre cualquier congesti&oacute;n
existente en el camino de la comunicaci&oacute;n.  Para ello permite que
d379 2
a380 2
el paquete.  Si el anfitri&oacute;n remitente tiene soporte para ECN,
entonces puede leer este indicador y moderar el ritmo del tr&aacute;fico
d384 1
a384 1
Para m&aacute;s informaci&oacute;n sobre ECN, v&eacute;ase el
d388 1
a388 1
<h2>Configuraci&oacute;n de la Formaci&oacute;n de Colas</h2>
d390 1
a390 1
Desde la versi&oacute;n 3.0 de OpenBSD, la implementaci&oacute;n
d392 7
a398 7
ALTQ (<i>Alternate Queueing</i>)</a> de formaci&oacute;n de colas ha
formado parte del sistema base.  Desde OpenBSD 3.3, ALTQ se ha integrado
en PF.  La implementaci&oacute;n de ALTQ de OpenBSD tiene soporte para
<i>schedulers</i> de Colas Basadas en Clase (CBQ) y Colas Basadas en
Prioridades (PRIQ).  Tambi&eacute;n tiene soporte para Pronta
Detecci&oacute;n Aleatoria (RED) y Notificaci&oacute;n Expl&iacute;cita
de Congesti&oacute;n (ECN).
d402 3
a404 3
que funcione la formaci&oacute;n de colas.  Las instrucciones para la
activaci&oacute;n de PF se pueden encontrar en la secci&oacute;n de
<a href="config.html#activate">Primeros Pasos</a>.
d407 3
a409 2
La formaci&oacute;n de colas se configura en
<tt><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.4">pf.conf</a></tt>.
d411 1
a411 1
formaci&oacute;n de colas:
d413 2
a414 2
<li><tt>altq on</tt> - activa la formaci&oacute;n de colas en un
interfaz, define el <i>scheduler</i> que se usar&aacute;, y crea la cola
d431 4
a434 4
activar la formaci&oacute;n de colas.
<li><tt><i>scheduler</i></tt> - el <i>scheduler</i> que se usar&aacute;
para la formaci&oacute;n de colas.  Los valores que acepta son
<tt>cbq</tt> y <tt>priq</tt>.  S&oacute;lo se puede activar un
d437 1
a437 1
para el <i>scheduler</i>.  Se puede especificar como un valor absoluto
d442 6
a447 7
<li><tt><i>qlim</i></tt> - el n&uacute;mero m&aacute;ximo de paquetes
que puede contener la cola.  Este par&aacute;metro es opcional, y la
configuraci&oacute;n predeterminada es de 50.
<li><tt><i>size</i></tt> - el tama&ntilde;o del regulador de prueba
<!-- token bucket regulator --> en bytes.  Si no se especifica, el
tama&ntilde;o se configurar&aacute; bas&aacute;ndose en el ancho de
banda de <tt><i>interface</i></tt>.
d449 1
a449 1
crear&aacute;n bajo la cola matriz.
d453 1
a453 1
Por ejemplo,
d459 2
a460 2
activa CBQ en la interfaz <tt>fxp0</tt>.  El ancho de banda total
disponible est&aacute; configurado en 2Mbps.  Se han definido tres colas
d477 1
a477 1
la directiva <tt>altq on</tt>.  Para <tt>cbq</tt>, tambi&eacute;n puede
d482 2
a483 2
v&aacute;lida.  Este valor es opcional, y cuando no se especifique la
cola ser&aacute; v&aacute;lida en todas las interfaces.
d490 3
a492 2
Este par&aacute;metro s&oacute;lo es aplicable cuando se usa el
<i>scheduler</i> <tt>cbq</tt>.
d495 4
a498 4
a 15.  La prioridad 0 es la m&aacute;s baja.  Si no se especifica, se
usar&aacute; un valor predeterminado de 1.
<li><tt><i>qlim</i></tt> - el n&uacute;mero m&aacute;ximo de paquetes
que puede contener la cola.  Si no se especifica, se usar&aacute; un
d507 2
a508 2
	ir&aacute;n todos los paquetes que no coincidan con ninguna otra
	cola.  Es necesaria la definici&oacute;n de al menos una cola
d512 2
a513 2
	mantendr&aacute; tama&ntilde;os medios de cola m&uacute;ltiples y
	valores de umbrales m&uacute;ltiples, uno por cada nivel de Calidad
d518 1
a518 1
	su cola matriz.  Esto s&oacute;lo se puede especificar cuando se usa
d522 2
a523 2
crear&aacute;n bajo esta cola.  Una <tt><i>queue_list</i></tt>
s&oacute;lo se puede definir cuando se usa el <i>scheduler</i>
d531 3
a533 3
queue ssh { ssh_login, ssh_bulk }<br>
&nbsp;&nbsp;queue ssh_login  priority 4 cbq(ecn)<br>
&nbsp;&nbsp;queue ssh_bulk   cbq(ecn)<br>
d539 2
a540 2
Aqu&iacute; se encuentran activados los par&aacute;metros de las colas
derivadas anteriormente definidas.  A la cola <tt>stq</tt> se le ha
d542 18
a559 8
(&oacute; 1Mbps), y est&aacute; configurada como la cola predeterminada.
La cola <tt>ssh</tt> define dos colas derivadas:  <tt>ssh_login</tt> y
<tt>ssh_bulk</tt>.  A <tt>ssh_login</tt> se le ha dado una prioridad
m&aacute;s alta que a <tt>ssh_bulk</tt>, y ambas tienen ECN activado.  A
la cola de <tt>ftp</tt> se le ha asignado un ancho de banda de 500Kbps y
se le ha dado una prioridad de 3.  Tambi&eacute;n puede tomar prestado
ancho de banda cuando haya disponible ancho de banda adicional.  Tiene
RED activado.
d562 1
a562 1
<h3>Asignaci&oacute;n de Tr&aacute;fico a una Cola</h3>
d564 1
a564 1
Para asignar tr&aacute;fico a una cola se usa la clave <tt>queue</tt>
d567 1
a567 1
l&iacute;nea como:
d569 1
a569 1
<tt>pass out on fxp0 from any to any port 22</tt>
d573 2
a574 2
Los paquetes que coincidan con esa regla pueden ser asignados a una cola
espec&iacute;fica usando la clave <tt>queue</tt>:
d576 1
a576 1
<tt>pass out on fxp0 from any to any port 22 queue ssh</tt>
d580 16
d598 1
a598 1
pueda alcanzar ser&aacute; asignado a la cola espec&iacute;fica.
d601 1
a601 1
N&oacute;tese que la clasificaci&oacute;n de la cola puede tener lugar
d607 1
a607 1
queue std cbq(default)<br>
d610 1
a610 1
pass in on dc0 from any to any port 21 queue ftp<br>
d615 2
a616 2
La formaci&oacute;n de cola est&aacute; activada en la interfaz
<tt>fxp0</tt>, pero la clasificaci&oacute;n tiene lugar en la interfaz
d618 3
a620 3
salen de la interfaz <tt>fxp0</tt>, pasar&aacute;n a la cola
<tt>ftp</tt>.  Este tipo de formaci&oacute;n de colas puede ser muy
&uacute;til para enrutadores.
d623 1
a623 1
Normalmente s&oacute;lo se da un nombre de cola con la clave
d625 1
a625 1
usar&aacute; para paquetes con un Tipo de Servicio
d628 1
a628 1
&uacute;til de datos.  Un buen ejemplo de esto se encuentra cuando se
d631 3
a633 3
informaci&oacute;n para poner en la cola paquetes que pertenezcan a una
conexi&oacute;n de ingreso en una cola diferente a la de las conexiones
que no sean de ingreso.  Esto es &uacute;til para dar prioridad a los
d645 1
a645 1
ingreso de SSH ser&aacute;n procesados antes que los de las conexiones
d647 1
a647 1
m&aacute;s alta.
d650 8
a657 8
La asignaci&oacute;n de paquetes TCP ACK a una cola de prioridad
m&aacute;s alta es &uacute;til en conexiones asim&eacute;tricas, o sea
aquellas conexiones que tienen anchos de banda de carga y descarga
diferentes, como las l&iacute;neas ADSL.  Con una l&iacute;nea ADSL, si
se est&aacute; uilizando al m&aacute;ximo el canal de carga y se inicia
una descarga, la descarga sufrir&aacute; por que los paquetes TCP ACK
que necesita enviar entrar&aacute;n en congesti&oacute;n cuando intenten
pasar a trav&eacute;s del canal de carga.  Las pruebas realizadas
d659 5
a663 5
la cola de carga debe estar configurado con un valor inferior al de la
capacidad de la conexi&oacute;n.  Por ejemplo, si una l&iacute;nea ADSL
tiene un m&aacute;ximo de carga de 640Kbps, al configurar el ancho de
banda de la cola matriz, se obtendr&aacute;n mejores resultados con un
valor de 600Kb.  La forma para obtener la mejor configuraci&oacute;n del
a665 20
<p>
Cuando se usa la clave <tt>queue</tt> con reglas <tt>keep state</tt>,
como:
<blockquote>
<tt>
pass in on fxp0 proto tcp from any to any port 22 flags S/SA \<br>
&nbsp;&nbsp;&nbsp;keep state queue ssh
</tt>
</blockquote>

<p>
PF registra la cola en la entrada de la tabla de estado, para que los
paquetes que vuelvan desde <tt>fxp0</tt> y que coincidan con la
conexi&oacute;n de mantenimiento de estado (<i>stateful connection</i>)
acaben en la cola <tt>ssh</tt>.  N&oacute;tese que, aunque se
est&eacute; usando la clave <tt>queue</tt> en una regla que filtra el
tr&aacute;fico entrante, el objetivo es especificar una cola para el
tr&aacute;fico saliente correspondiente;  la regla anterior no pone en
cola los paquetes entrantes.

d667 1
a667 1
<h2>Ejemplo #1: Red Particular, Peque&ntilde;a</h2>
d679 5
a683 5
En este ejemplo se est&aacute; usando OpenBSD como pasarela de Internet
para una red peque&ntilde;a casera con tres estaciones de trabajo.  La
pasarela est&aacute; realizando filtrado de paquetes y tareas de NAT.
La conexi&oacute;n a Internet es a trav&eacute;s de una l&iacute;nea
ADSL con una velocidad de 2Mbps de descarga y 640Kbps de carga.
d686 1
a686 1
La pol&iacute;tica de formaci&oacute;n de colas para esta red es:
d688 1
a688 1
<li>Reservar 80Kbps de ancho de banda de descarga para Bob, para que
d690 1
a690 1
descargas de Alice o Charlie.  Permitir que Bob use m&aacute;s de 80Kbps
d692 2
a693 2
<li>El tr&aacute;fico de SSH y de mensajer&iacute;a instant&aacute;nea
tendr&aacute; una prioridad m&aacute;s alta que el tr&aacute;fico
d695 4
a698 4
<li>Los requerimientos y respuestas de DNS tendr&aacute;n la segunda
prioridad m&aacute;s alta.
<li>Los paquetes salientes de TCP ACK tendr&aacute;n una prioridad
m&aacute;s alta que el resto del tr&aacute;fico saliente.
d702 2
a703 2
A continuaci&oacute;n puede verse un conjunto de reglas que cumple esta
pol&iacute;tica de red.  N&oacute;tese que s&oacute;lo est&aacute;n
d705 1
a705 4
directamente a la pol&iacute;tica anterior;  no se muestran las reglas
de <a href="nat.html"><tt>nat</tt></a>,
<a href="rdr.html"><tt>rdr</tt></a>, las
<a href="options.html">opciones</a>, etc&eacute;tera.
d708 1
a708 1
<table border="0" width="650">
d711 3
a713 3
# activar la formaci&oacute;n de colas en la interfaz externa para controlar
# el tr&aacute;fico que sale hacia Internet;  usar el <i>scheduler</i> priq para
# controlar s&oacute;lo las prioridades; configurar el ancho de banda con
d719 5
a723 5
# definir los par&aacute;metros para las colas derivadas.
# std_out      - la cola est&aacute;ndar; el tr&aacute;fico de cualquier regla de
#		 filtrado que no especifique de forma expl&iacute;cita una
#		 cola ser&aacute; a&ntilde;adido a esta cola.
# ssh_im_out   - tr&aacute;fico interactivo de SSH y varios mensajes instant&aacute;neos.
d725 1
a725 1
# tcp_ack_out  - paquetes TCP ACK sin carga &uacute;til de datos.
d732 3
a734 3
# activar la formaci&oacute;n de colas en la interfaz interna para controlar
# el tr&aacute;fico entrante procedente de Internet;  usar el <i>scheduler</i>
# cbq para controlar el ancho de banda;  el ancho de banda m&aacute;ximo
d739 5
a743 5
# definir los par&aacute;metros para las colas derivadas.
# std_in      - la cola est&aacute;ndar; el tr&aacute;fico de cualquier regla de
#		filtrado por debajo que no especifique de forma expl&iacute;cita
#		una cola ser&aacute; a&ntilde;adido a esta cola.
# ssh_im_in   - tr&aacute;fico interactivo de SSH y varios mensajes instant&aacute;neos.
d745 1
a745 1
# bob_in      - ancho de banda reservado para la estaci&oacute;n de Bob;
d748 3
a750 3
queue std_in    cbq(default)
queue ssh_im_in priority 4
queue dns_in    priority 5
d754 1
a754 1
# ... en la secci&oacute;n de filtrado de pf.conf ...
d756 6
a761 6
alice         = &quot;192.168.0.2&quot;
bob           = &quot;192.168.0.3&quot;
charlie       = &quot;192.168.0.4&quot;
local_net     = &quot;192.168.0.0/24&quot;
ssh_ports     = &quot;{ 22 2022 }&quot;
im_ports      = &quot;{ 1863 5190 5222 }&quot;
d768 8
a775 9
pass  out on fxp0 inet proto tcp from (fxp0) to any flags S/SA \
	keep state queue(std_out, tcp_ack_out)
pass  out on fxp0 inet proto { udp icmp } from (fxp0) to any keep state
pass  out on fxp0 inet proto { tcp udp } from (fxp0) to any port domain \
	keep state queue dns_out
pass  out on fxp0 inet proto tcp from (fxp0) to any port $ssh_ports \
	flags S/SA keep state queue(std_out, ssh_im_out)
pass  out on fxp0 inet proto tcp from (fxp0) to any port $im_ports \
	flags S/SA keep state queue(ssh_im_out, tcp_ack_out)
d783 2
a784 2
pass  out on dc0 from any to $local_net
pass  out on dc0 proto { tcp udp } from any port domain to $local_net \
d786 1
a786 1
pass  out on dc0 proto tcp from any port $ssh_ports to $local_net \
d788 1
a788 1
pass  out on dc0 proto tcp from any port $im_ports to $local_net \
d790 1
a790 1
pass  out on dc0 from any to $bob queue bob_in
d796 1
a796 1
<h2>Ejemplo #2: Red Corporativa</h2>
d799 1
a799 1
  ( Dept IT )  [ PC del Jefe ]
d810 3
a812 3
En este ejemplo, el anfitri&oacute;n de OpenBSD act&uacute;a como
cortafuegos para la red de una compa&ntilde;&iacute;a.  La
compa&ntilde;&iacute;a tiene un servidor de WWW en la &laquo;zona
d814 2
a815 2
sus sitios <i>web</i> mediante FTP.  El departamento de
Inform&aacute;tica, IT, tiene su propia subred conectada a la red
d817 2
a818 2
electr&oacute;nico y para navear por Internet.  La conexi&oacute;n a
Internet es a trav&eacute;s de una l&iacute;nea T1 a 1.5Mbps en ambas
d824 1
a824 1
pol&iacute;tica:
d826 17
a842 12
<li>Limitar el tr&aacute;fico entre el servidor de WWW e Internet a
500Kbps en cada direcci&oacute;n.
<li>No hay l&iacute;mite para el ancho de banda en el tr&aacute;fico
entre el servidor de WWW y la red interna.
<li>Dar una mayor prioridad al tr&aacute;fico de HTTP entre el servidor
de WWW e Internet que al resto del tr&aacute;fico entre el servidor de
WWW e Internet (como a las cargas y descargas por FTP).
<li>Reservar 500Kbps para el Dept. de IT para que puedan descargar las
&uacute;ltimas actualizaciones de <i>software</i> a tiempo.  Pueden usar
m&aacute;s de 500Kbps cuando haya ancho de banda adicional disponible.
<li>Dar una prioridad m&aacute;s alta al tr&aacute;fico entre el PC del
jefe e Internet que al resto de tr&aacute;fico hacia/desde Internet.
d846 2
a847 2
A continuaci&oacute;n puede verse el conjunto de reglas que cumple esta
pol&iacute;tica de red.  N&oacute;tese que s&oacute;lo est&aacute;n
d849 1
a849 1
directamente a la pol&iacute;tica anterior;  no se muestran las reglas
d852 1
a852 1
<a href="options.html">opciones</a>, etc&eacute;tera.
d858 1
a858 1
# activar la formaci&oacute;n de colas en la interfaz externa para poner
d860 1
a860 1
# <i>scheduler</i> cbq para que se pueda controlar la utilizaci&oacute;n
d862 1
a862 1
# m&aacute;ximo es de 1.5Mbps.
d866 3
a868 3
# definir los par&aacute;metros para las colas derivadas.
# std_ext         - la cola est&aacute;ndar;  tambi&eacute;n la cola predeterminada
#		    para el tr&aacute;fico saliente en fxp0.
d871 2
a872 2
#   www_ext_http  - tr&aacute;fico http desde el servidor de WWW.
#   www_ext_misc  - todo el tr&aacute;fico no http desde el servidor
d874 1
a874 1
# boss_ext        - tr&aacute;fico entrante desde el PC del jefe.
d876 1
a876 1
queue std_ext        cbq(default)
d878 11
a888 11
  queue www_ext_http priority 3 cbq(red)
  queue www_ext_misc priority 1
queue boss_ext       priority 3

# activar la formaci&oacute;n de colas en la interfaz interna para
# controlar el tr&aacute;fico entrante desde Internet o desde la DMZ;
# usar el <i>scheduler</i> cbq para controlar el ancho de banda de cada
# cola;  el ancho de banda en esta interfaz est&aacute; configurado al
# m&aacute;ximo; el tr&aacute;fico entrante desde la DMZ podr&aacute; usar todo este
# ancho de banda, mientras que el tr&aacute;fico entrante desde Internet
# tendr&aacute; un l&iacute;mite de 1.0Mbps (por que se han ubicado 0.5Mbps
d893 2
a894 2
# definir los par&aacute;metros para las colas derivadas.
# net_int    - cola contenedora para el tr&aacute;fico desde Internet;
d896 5
a900 5
#   std_int  - la cola est&aacute;ndar;  tambi&eacute;n la cola predeterminada
#	       para el tr&aacute;fico saliente en dc0.
#   it_int   - tr&aacute;fico hacia la red del Dept IT.
#   boss_int - tr&aacute;fico hacia el PC del jefe.
# www_int    - tr&aacute;fico desde el servidor de WWW en la DMZ.
d903 1
a903 1
  queue std_int  cbq(default)
d905 2
a906 2
  queue boss_int priority 3
queue www_int    cbq(red)
d908 3
a910 3
# activar la formaci&oacute;n de colas en la interfaz de DMZ para
# controlar el tr&aacute;fico destinado al servidor de WWW;
# se usar&aacute; cbq en esta interfaz ya que es necesario un control
d912 3
a914 3
# est&aacute; configurado al m&aacute;ximo; el tr&aacute;fico desde la red interna
# podr&aacute; usar todo este ancho de banda, mientras que el
# tr&aacute;fico desde Internet estar&aacute; limitado a 500Kbps.
d918 5
a922 5
# definir los par&aacute;metros para las colas derivadas.
# internal_dmz   - tr&aacute;fico desde la red interna.
# net_dmz        - cola contenedora para tr&aacute;fico desde Internet.
#   net_dmz_http - tr&aacute;fico http.
#   net_dmz_misc - todo el tr&aacute;fico no http; es la cola predeterminada
d924 1
a924 1
queue internal_dmz      # no necesita ninguna configuraci&oacute;n especial
d926 2
a927 2
  queue net_dmz_http priority 3 cbq(red)
  queue net_dmz_misc priority 1 cbq(default)
d930 1
a930 1
# ... en la secci&oacute;n de filtrado de pf.conf ...
d932 4
a935 4
main_net  = &quot;192.168.0.0/24&quot;
it_net    = &quot;192.168.1.0/24&quot;
int_nets  = &quot;{ 192.168.0.0/24, 192.168.1.0/24 }&quot;
dmz_net   = &quot;10.0.0.0/24&quot;
d937 2
a938 2
boss      = &quot;192.168.0.200&quot;
wwwserv   = &quot;10.0.0.100&quot;
d940 1
a940 1
# denegaci&oacute;n predeterminada
d945 2
a946 3
       &gt; 49151 } flags S/SA keep state queue www_ext_misc
pass in on fxp0 proto tcp from any to $wwwserv port 80 \
       flags S/SA keep state queue www_ext_http
d949 2
a950 2
pass out on fxp0 from $int_nets to any keep state
pass out on fxp0 from $boss to any keep state queue boss_ext
d953 3
a955 3
pass in on dc0 from $int_nets to any keep state
pass in on dc0 from $it_net to any queue it_int
pass in on dc0 from $boss to any queue boss_int
d957 1
a957 1
       &gt; 49151 } flags S/SA keep state queue www_int
d963 1
a963 2
pass in on fxp1 proto { tcp, udp } from $wwwserv to any port 53 \
       keep state
d966 3
a968 4
pass out on fxp1 proto tcp from any to $wwwserv port { 21, \
       &gt; 49151 } flags S/SA keep state queue net_dmz_misc
pass out on fxp1 proto tcp from any to $wwwserv port 80 \
       flags S/SA keep state queue net_dmz_http
d970 1
a970 1
       21, &gt; 49151 } flags S/SA keep state queue internal_dmz
d976 1
a976 2
[<a href="anchors.html">Anterior: Anclajes y (Sub-) Conjuntos de Reglas
con Nombre</a>]
d978 2
a979 2
[<a href="pools.html">Siguiente: <i>Pools</i> de Direcciones y Balanceo
de Carga</a>]
d983 1
a983 1
<a href="index.html"><img height="24" width="24" src="../../../images/back.gif" border="0" alt="[&Iacute;ndice]"></a> 
d987 5
a991 3
Originally [OpenBSD: queueing.html,v 1.17 ]<br>
$OpenBSD$<br>
$Translation: queueing.html,v 1.11 2004/01/04 21:32:07 horacio Exp $
d993 1
@


1.9
log
@Sync with Steelix CVS
@
text
@d12 1
a12 1
<meta name="copyright"     content="Este documento es copyright 2003 de OpenBSD.">
d966 1
a966 1
Originally [OpenBSD: queueing.html,v 1.16 ]<br>
d968 1
a968 1
$Translation: queueing.html,v 1.10 2003/12/16 22:09:04 horacio Exp $
@


1.8
log
@Sync with Steelix CVS
@
text
@d438 1
d440 1
d468 5
a472 5
para el <i>scheduler</i>.  Se puede especificar como un valor absoluto
usando los sufijos <tt>b</tt>, <tt>Kb</tt>, <tt>Mb</tt>, y <tt>Gb</tt>
para representar bits, kilobits, megabits, y gigabits por segundo
respectivamente, o como porcentaje del ancho de banda de
<tt><i>interface</i></tt>.
d966 1
a966 1
Originally [OpenBSD: queueing.html,v 1.14 ]<br>
d968 1
a968 1
$Translation: queueing.html,v 1.9 2003/12/02 15:35:11 horacio Exp $
@


1.7
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>PF: Formaci&oacute;n de Colas</title>
d21 2
a22 1
[<a href="scrub.html">Anterior: Normalizaci&oacute;n de Paquetes</a>]
d24 2
a25 1
[<a href="nat.html">Siguiente: NAT</a>]
d28 2
a29 2
<h1><font color="#e00000">PF: Formaci&oacute;n de Colas
(<i>Queueing</i>)</font></h1>
d246 2
a247 2
detr&aacute;s de CBQ, v&eacute;ase
<a href="http://www.icir.org/floyd/cbq.html">este sitio</a>.
d351 2
a352 2
detr&aacute;s de RED, v&eacute;ase
<a href="http://www.icir.org/floyd/red.html">este sitio</a>.
d386 2
a387 3
activaci&oacute;n de PF se pueden encontrar en la
<a href="config.html#activate">secci&oacute;n de
configuraci&oacute;n</a>.
d391 1
a391 1
<tt><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.4">/etc/pf.conf</a></tt>.
d440 3
a442 3
activa CBQ en la interfaz fxp0.  El ancho de banda total disponible
est&aacute; configurado en 2Mbps.  Se han definido tres colas derivadas:
<tt>std</tt>, <tt>ssh</tt> y <tt>ftp</tt>.
d448 2
a449 2
queue <i>name</i> bandwidth <i>bw</i> priority <i>pri</i> qlimit
<i>qlim</i> \<br>
d462 3
d471 2
d536 1
a536 1
ejemplo, en un grupo de reglas de filtrado que contengan una
d556 2
a557 2
en una interfaz que no sea la definida por la directiva <tt>altq
on</tt>:
d569 6
a574 5
La formaci&oacute;n de cola est&aacute; activada en la interfaz fxp0,
pero la clasificaci&oacute;n tiene lugar en la interfaz dc0.  Si los
paquetes que coinciden con la regla <tt>pass</tt> salen de la interfaz
fxp0, pasar&aacute;n a la cola <tt>ftp</tt>.  Este tipo de
formaci&oacute;n de colas puede ser muy &uacute;til para enrutadores.
d632 7
a638 7
paquetes que vuelvan desde fxp0 y que coincidan con la conexi&oacute;n
de mantenimiento de estado (<i>stateful connection</i>) acaben en la
cola <tt>ssh</tt>.  N&oacute;tese que, aunque se est&eacute; usando la
clave <tt>queue</tt> en una regla que filtra el tr&aacute;fico entrante,
el objetivo es especificar una cola para el tr&aacute;fico saliente
correspondiente;  la regla anterior no pone en cola los paquetes
entrantes.
d676 1
a676 1
A continuaci&oacute;n puede verse un grupo de reglas que cumple esta
d819 1
a819 1
A continuaci&oacute;n puede verse el grupo de reglas que cumple esta
d952 2
a953 1
[<a href="scrub.html">Anterior: Normalizaci&oacute;n de Paquetes</a>]
d955 2
a956 1
[<a href="nat.html">Siguiente: NAT</a>]
d964 1
a964 1
Originally [OpenBSD: queueing.html,v 1.13 ]<br>
d966 1
a966 1
$Translation: queueing.html,v 1.8 2003/11/17 19:22:08 horacio Exp $
@


1.6
log
@sync with steelix cvs
@
text
@d390 1
a390 1
<tt><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.3">/etc/pf.conf</a></tt>.
d955 1
a955 1
Originally [OpenBSD: queueing.html,v 1.12 ]<br>
d957 1
a957 1
$Translation: queueing.html,v 1.7 2003/09/27 13:46:08 horacio Exp $
@


1.5
log
@sync with steelix cvs
@
text
@d142 2
d174 2
d197 11
a207 8
Si el tr&aacute;fico en la cola de ftp excede los 900Kbps y el
tr&aacute;fico en la cola del UsuarioA es menor de de 1Mbps (debido a
que la cola de ssh est&aacute; usando menos tr&aacute;fico que los
100Kbps asignados), la cola de ftp tomar&aacute; prestado el ancho de
banda sobrante del UsuarioA.  De este modo, la cola de ftp podr&aacute;
usar m&aacute;s ancho de banda del que tiene asignado cuando sufra una
sobrecarga.  Cuando la cola de ssh incremente su carga, se
devolver&aacute; el ancho de banda que se ha tomado prestado.
d228 13
a240 10
CBQ procesar&aacute; las colas del UsuarioA y del UsuarioB del modo
<i>round-robin</i>;  ninguna de las dos colas tendr&aacute; preferencia
sobre la otra.  Al mismo tiempo que est&eacute; procesando la cola del
UsuarioA, CBQ tambi&eacute;n procesar&aacute; las colas que deriven de
&eacute;sta.  En este caso, la cola de ssh tiene una prioridad
m&aacute;s alta y obtendr&aacute; un trato preferente sobre la cola de
ftp si hay congesti&oacute;n en la red.  N&oacute;tese que no se
comparan las prioridades de las colas de ssh y ftp con las colas del
UsuarioA y UsuarioB, ya que no est&aacute;n en la misma rama dentro de
la jerarqu&iacute;a.
d270 2
d419 4
a422 3
usando los sufijos b, Kb, Mb y Gb para representar bits, kilobits,
megabits, y gigabits por segundo respectivamente, o como porcentaje del
ancho de banda de <tt><i>interface</i></tt>.
d434 1
d441 1
a441 1
std, ssh y ftp.
d463 4
a466 3
usando los sufijos b, Kb, Mb, y Gb para representar bits, kilobits,
megabits, y gigabits por segundo respectivamente, o como porcentaje del
ancho de banda de <tt><i>interface</i></tt>.
d504 2
a505 2
queue std          bandwidth 50% cbq(default)<br>
queue ssh          { ssh_login, ssh_bulk }<br>
d508 1
a508 1
queue ftp          bandwidth 500Kb priority 3 cbq(borrow red)<br>
d514 10
a523 9
derivadas anteriormente definidas.  A la cola stq se le ha asignado un
ancho de banda del 50% del ancho de banda de la cola matriz (&oacute;
1Mbps), y est&aacute; configurada como la cola predeterminada.  La cola
ssh define dos colas derivadas:  ssh_login y ssh_bulk.  A ssh_login se
le ha dado una prioridad m&aacute;s alta que a ssh_bulk, y ambas tienen
ECN activado.  A la cola de FTP se le ha asignado un ancho de banda de
500Kbps y se le ha dado una prioridad de 3.  Tambi&eacute;n puede tomar
prestado ancho de banda cuando haya disponible ancho de banda adicional.
Tiene RED activado.
d589 6
a594 5
SSH a la cola ssh_login, y los paquetes que pertenecen a las conexiones
de transferencia de archivos de SCP y SFTP a la cola ssh_bulk.  En
consecuencia, los paquetes de las conexiones de ingreso de SSH
ser&aacute;n procesados antes que los de las conexiones de SCP y SFTP,
ya que la cola ssh_login tiene una prioridad m&aacute;s alta.
d627 3
a629 3
cola ssh.  N&oacute;tese que, aunque se est&eacute; usando la clave
<tt>queue</tt> en una regla que filtra el tr&aacute;fico entrante, el
objetivo es especificar una cola para el tr&aacute;fico saliente
d673 2
a674 1
de <a href="nat.html">NAT</a>, <a href="rdr.html">RDR</a>, las
d816 2
a817 1
de <a href="nat.html">NAT</a>, <a href="rdr.html">RDR</a>, las
d955 1
a955 1
Originally [OpenBSD: queueing.html,v 1.11 2003/09/16 01:23:49 nick Exp ]<br>
d957 1
a957 1
$Translation: queueing.html,v 1.6 2003/09/19 22:10:58 horacio Exp $
@


1.4
log
@sync with steelix translation CVS
@
text
@d936 1
a936 1
Originally [OpenBSD: queueing.html,v 1.10 2003/06/13 02:54:08 nick Exp ]<br>
d938 1
a938 1
$Translation: queueing.html,v 1.5 2003/07/05 19:09:45 horacio Exp $
@


1.3
log
@sync with steelix translation CVS
@
text
@d26 2
a27 1
<h1><font color="#e00000">PF: Queueing</font></h1>
d34 1
a34 1
<li><a href="#queueing"><i>Queueing</i>: Colas de espera</a>
d38 1
a38 1
	<li><a href="#priq">Colas Prioritarias</a>
d53 1
a53 1
<h2><i>Queueing</i>: Colas de espera</h2>
d81 9
a89 9
paquetes con direcci&oacute;n <i>hacia fuera</i>.  Una vez que un
paquete ha llegado a una interfaz <i>desde fuera</i>, es demasiado tarde
para ponerlo en una cola debido a que ya habr&aacute; consumido el ancho
de banda necesario para llegar a la interfaz que acaba de recibirlo.  En
estos casos la &uacute;nica soluci&oacute;n es activar el sistema de
colas en el enrutador adyacente o, si el anfitri&oacute;n que ha
recibido el paquete act&uacute;a como enrutador, activar el sistema de
colas en la interfaz interna desde la que los paquetes salen del
enrutador.
d101 2
a102 2
cola.  Si la cola se llena, los nuevos paquetes que lleguen son
bloqueados.  Esto se conoce como <i>&quot;tail-drop&quot;</i>.
d108 1
a108 1
<li>Colas Prioritarias (<i>Priority Queueing</i>)
d121 2
a122 2
cola ra&iacute;z de la cual origina, si &eacute;sta est&aacute; siendo
infrautilizado.  A las colas tambi&eacute;n se les da una prioridad de
d129 5
a133 6
superior de la jerarqu&iacute;a se encuentra la cola ra&iacute;z, que
define la cantidad total de ancho de banda disponible.  Las colas
derivadas de &eacute;sta se crean bajo la cola ra&iacute;z, y a cada una
de ellas se les puede asignar alguna porci&oacute;n del ancho de banda
de la cola ra&iacute;z.  Por ejemplo, se pueden definir las colas como
sigue:
d135 1
a135 1
<dd>Cola Ra&iacute;z (2Mbps)
d149 4
a152 4
iguales entre varios usuarios y clasificar tamb&iacute;en sus
tr&aacute;ficos para que ciertos protocolos no agoten otros por el ancho
de banda, se puede definir una estructura de formaci&oacute;n de colas
como el siguiente:
d154 1
a154 1
<dd>Cola Ra&iacute;z (2Mbps)
d174 1
a174 1
cola ra&iacute;z.
d178 4
a181 4
cola de la que origina si a &eacute;sta le sobra en exceso ancho de
banda debido a que no est&aacute; siendo usado por otras colas
derivadas.  Tomemos como ejemplo una configuraci&oacute;n de una
formaci&oacute;n de colas como la siguiente:
d183 1
a183 1
<dd>Cola Ra&iacute;z (2Mbps)
d196 3
a198 3
100Kbps), la cola de ftp tomar&aacute; prestado el ancho de banda
sobrante del UsuarioA.  De este modo, la cola de ftp podr&aacute; usar
m&aacute;s ancho de banda del que tiene asignado cuando sufra una
d200 1
a200 1
devolver&aacute; en ancho de banda que se ha tomado prestado.
d206 1
a206 1
colas comparten la misma ra&iacute;z de origen (o sea, siempre que ambas
d208 1
a208 1
Las colas con una misma prioridad se procesan de forma
d211 1
a211 1
<dd>Cola Ra&iacute;z (2Mbps)
d221 1
a221 1
CBQ procesar&aacute; las colas del UsuarioA y del UsuarioB de forma
d225 6
a230 6
&eacute;sta.  En este caso, la cola ssh tiene una prioridad m&aacute;s
alta y obtendr&aacute; un trato preferente sobre la cola de ftp si hay
congesti&oacute;n en la red.  N&oacute;tese que no se comparan las
prioridades de las colas de ssh y ftp con las colas del UsuarioA y
UsuarioB, ya que no est&aacute;n en la misma rama dentro de la
jerarqu&iacute;a.
d238 1
a238 1
<h3>Colas Prioritarias</h3>
d247 1
a247 1
La estructura de formaci&oacute;n de colas en PRIQ es escricta, no se
d249 3
a251 3
cola ra&iacute;z, en la que se decide la cantidad total de ancho de
banda disponible, y a partir de ah&iacute; las &laquo;sub-colas&raquo;
se definen bajo la cola ra&iacute;z.  Consideremos el siguiente ejemplo:
d253 1
a253 1
<dd>Cola Ra&iacute;z (2Mbps)
d260 3
a262 3
La cola ra&iacute;z est&aacute; definida con un ancho de banda de 2Mbps
disponible para ella misma, y se han definido tres subcolas.  La cola
con la prioridad m&aacute;s alta (el n&uacute;mero de prioridad
d267 1
a267 1
se procesan tipo FIFO.
d271 1
a271 1
las cola con mucho cuidado.  Debido a que PRIQ <i>siempre</i> procesa
d281 5
a285 5
RED (<i>Random Early Detection</i>) es un algoritmo para evitar la
congesti&oacute;n.  Su trabajo es evitar la congesti&oacute;n en la red
asegur&aacute;ndose de que la cola no se llene.  Para ello calcula
continuamente la longitud media (el tama&ntilde;o) de la cola y la
compara con dos umbrales o l&iacute;mites, un umbral m&iacute;nimo y
d293 8
a300 8
probabilidad sacado del tama&ntilde;o medio de la cola.  En otras
palabras,  seg&uacute;n se va aproximando el tama&ntilde;o medio de la
cola al umbral m&aacute;ximo, se van bloqueando un n&uacute;mero cada
vez mayor de paquetes.  Cuando bloquea los paquetes, RED escoge de
qu&eacute; conexiones bloquear&aacute; los paquetes de una forma
aleatoria.  Las conexiones que usen mayores cantidades de ancho de banda
ser&aacute; las que tengan una probabilidad m&aacute;s alta de que se
bloqueen sus paquetes.
d306 1
a306 1
p&eacute;rdida total de caudal debida al bloqueo de de paquetes desde
d310 1
a310 1
conexiones (o la mayor&iacute;a de ellas), como ocurre con la
d312 7
a318 7
forma significativa.  Esta situaci&oacute;n no es deseable por que hace
que todas las conexiones de FTP reduzcan su caudal y tambi&eacute;n
implica que la red ya no puede ser utilizada en su potencia
m&aacute;xima.  RED evita esta situaci&oacute;n escogiendo de forma
aleatoria las conexiones de las que bloquear&aacute; los paquetes, en
lugar de escogerlas todas.  Las conexiones que usen grandes cantidades
de ancho de banda tienen una mayor probabilidad de que sus paquetes sean
d323 1
a323 1
manejar explosiones repentinas de tr&aacute;fico por que empieza a
d325 1
a325 1
una explosi&oacute;n de tr&aacute;fico, no hay espacio suficiente en la
d330 4
a333 4
es capaz de responder a los indicadores de congesti&oacute;n de la red.
En la mayor&iacute;a de casos esto significa que RED se deber&iacute;a
usar para poner en cola el tr&aacute;fico TCP, y no el tr&aacute;fico
UDP o ICMP.
d347 1
a347 1
RED active un indicador en la cabecera del paquete en lugar de bloquear
d359 1
a359 2
A partir de OpenBSD 3.0, la implementaci&oacute;n de formaci&oacute;n de
colas
d361 7
a367 6
ALTQ (<i>Alternate Queueing</i>)</a> ha formado parte del sistema base.
Desde OpenBSD 3.3, ALTQ se ha integrado en PF.  La implementaci&oacute;n
de ALTQ de OpenBSD tiene soporte para <i>schedulers</i> de Colas Basadas
en Clase (CBQ) y Colas Prioritarias (PRIQ).  Tambi&eacute;n tiene
soporte para Pronta Detecci&oacute;n Aleatoria (RED) y
Notificaci&oacute;n Expl&iacute;cita de Congesti&oacute;n (ECN).
d384 1
a384 1
ra&iacute;z
d408 1
a408 1
megabits, y gigabits por segundo, respectivamente o como porcentaje del
d418 1
a418 1
crear&aacute;n bajo la cola ra&iacute;z.
d446 1
a446 1
nombres de las colas no deben exceder de 15 caracteres.
d450 1
a450 1
megabits, y gigabits por segundo, respectivamente o como porcentaje del
d452 1
a452 1
<li><tt><i>pri</i></tt> - la prioridad de la cola.  Para <tt>cbq</tt>,
d459 1
a459 1
<li><tt><i>scheduler</i></tt> - el <i>scheduler</i> que se utilice, bien
d461 1
a461 1
ra&iacute;z.
d477 2
a478 2
	su cola ra&iacute;z.  Esto s&oacute;lo se puede especificar cuando
	se usa el <i>scheduler</i> <tt>cbq</tt>.
d500 8
a507 8
ancho d banda del 50% del ancho de banda de la cola ra&iacute;z
(&oacute; 1Mbps), y est&aacute; configurada como la cola predeterminada.
La cola ssh define dos colas derivadas, ssh_login y ssh_bulk.  A
ssh_login se le ha dado una prioridad m&aacute;s alta que a ssh_bulk, y
ambas tienen ECN activado.  A la cola FTP se le ha asignado un ancho de
banda de 500Kbps y se le ha dado una prioridad de 3.  Tambi&eacute;n
puede tomar prestado ancho de banda cuando haya disponible ancho de
banda adicional, y tiene activado RED.
d521 2
a522 2
Los paquetes que coincidan con esa reglas pueden ser asignados a una
cola espec&iacute;fica usando la clave <tt>queue</tt>:
d556 3
a558 3
usar&aacute; para paquetes con un Tipo de Servicio,
<a href="http://www.rfc-editor.org/rfc/rfc791.txt">ToS (<i>Type of
Service</i>)</a>, de retraso bajo y para paquetes TCP ACK sin carga
d574 4
a577 4
de transferencia de archivos de SCP y SFTP a la cola ssh_bulk.
Entonces, los paquetes de las conexiones de ingreso de SSH ser&aacute;n
procesados antes que los de las conexiones de SCP y SFTP, ya que la cola
ssh_login tiene una prioridad m&aacute;s alta.
d592 3
a594 4
banda (<tt>bandwith</tt>) de la cola ra&iacute;z con un valor como 600Kb
se obtendr&aacute;n mejores resultados.  La forma para obtener la mejor
configuraci&oacute;n del ancho de banda es probando varias
configuraciones.
d607 5
a611 5
PF registra la cola en la entrada de la tabla de estado para que los
paquetes que vuelvan desde fxp0 que coincidan con la conexi&oacute;n de
mantenimiento de estado<!-- stateful connection --> acaben en la cola
ssh.  N&oacute;tese que, aunque se est&eacute; usando la clave
<tt>queue</tt> en una regla que filtre el tr&aacute;fico entrante, el
d629 5
a633 6
En este ejemplo se est&aacute; usando OpenBSD en una pasarela de
Internet para una red peque&ntilde;a casera con tres estaciones de
trabajo.  La pasarela est&aacute; realizando filtrado de paquetes y
tareas de NAT.  La conexi&oacute;n a Internet es a trav&eacute;s de una
l&iacute;nea ADSL con una velocidad de 2Mbps de descarga y 640Kbps de
carga.
d642 1
a642 1
<li>El tr&aacue;fico de SSH y de mensajer&iacute;a instant&aacute;nea
d648 1
a648 1
m&aacute;s alta que el resto de tr&aacute;fico saliente.
d652 1
a652 1
A continuaci&oacute;n hay un grupo de reglas que cumple esta
d654 3
a656 3
presentes las directivas de <tt>pf.conf</tt> que se aplican directamente
a la pol&iacute;tica anterior;  no se muestran
<a href="nat.html">NAT</a>, <a href="rdr.html">RDR</a>,
d765 9
a773 8
compa&ntilde;&iacute;a tiene un servidor de WWW en la parte DMZ de su
red, en el que los clientes cargan sus sitios <i>web</i> mediante FTP.
El departamento de Inform&aacute;tica, IT, tiene su propia subred
conectada a la red principal, y el jefe tiene un PC en su escritorio que
usa para correo electr&oacute;nico y para navear por Internet.  La
conexi&oacute;n a Internet es a trav&eacute;s de una l&iacute;nea T1 a
1.5Mbps en ambas direcciones.  El resto de los segementos de la red usan
Fast Ethernet (100Mbps).
d776 1
a776 1
El administrador de la red ha decido aplicar la siguiente
d784 1
a784 1
de WWW e Internet que al resto de tr&aacute;fico entre el servidor de
d794 1
a794 1
A continuaci&oacute;n viene el grupo de reglas que cumple esta
d796 3
a798 3
presentes las directivas de <tt>pf.conf</tt> que se aplican directamente
a la pol&iacute;tica anterior;  no se muestran
<a href="nat.html">NAT</a>, <a href="rdr.html">RDR</a>,
d938 1
a938 1
$Translation: queueing.html,v 1.4 2003/06/15 11:40:23 horacio Exp $
@


1.2
log
@sync with steelix translation CVS
@
text
@d937 1
a937 1
Originally [OpenBSD: queueing.html,v 1.9 2003/06/12 03:30:24 nick Exp ]<br>
d939 1
a939 1
$Translation: queueing.html,v 1.3 2003/06/12 17:41:10 horacio Exp $
@


1.1
log
@
initial translation from horacio
@
text
@d329 7
d681 1
a681 1
queue std_out     priq(red default)
d683 2
a684 2
queue dns_out     priority 5 priq(red)
queue tcp_ack_out priority 6 priq(red)
d872 1
a872 1
queue internal_dmz   cbq(red)
d937 1
a937 1
Originally [OpenBSD: queueing.html,v 1.8 2003/05/22 17:23:49 nick Exp ]<br>
d939 1
a939 1
$Translation: queueing.html,v 1.2 2003/05/26 09:12:05 horacio Exp $
@

