head	1.25;
access;
symbols;
locks; strict;
comment	@# @;


1.25
date	2014.04.01.17.18.45;	author nick;	state dead;
branches;
next	1.24;

1.24
date	2012.01.21.19.34.39;	author ajacoutot;	state Exp;
branches;
next	1.23;

1.23
date	2009.01.07.21.24.44;	author tobias;	state Exp;
branches;
next	1.22;

1.22
date	2008.08.10.16.14.28;	author tobias;	state Exp;
branches;
next	1.21;

1.21
date	2008.03.09.13.37.13;	author tobias;	state Exp;
branches;
next	1.20;

1.20
date	2007.11.12.20.29.59;	author saad;	state Exp;
branches;
next	1.19;

1.19
date	2007.06.23.18.29.30;	author jufi;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.10.12.43.46;	author saad;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.09.05.49.53;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2007.04.26.03.08.06;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2006.11.01.11.30.45;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2006.05.01.12.19.17;	author jufi;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.25.08.25.49;	author saad;	state Exp;
branches;
next	1.12;

1.12
date	2006.01.14.11.36.00;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2005.11.04.20.24.24;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2005.09.20.07.30.02;	author saad;	state Exp;
branches;
next	1.9;

1.9
date	2005.05.20.17.13.26;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.19.18.23.06;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2005.05.04.17.52.25;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2005.01.18.17.18.10;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2004.12.22.20.00.48;	author jufi;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.08.05.22.44;	author saad;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.28.16.13.25;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2003.12.13.20.23.29;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.27.19.39.09;	author horacio;	state Exp;
branches;
next	;


desc
@@


1.25
log
@
missed another one...
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>PF: Leistung</title>
<link rev="made" href="mailto:www@@openbsd.org">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="resource-type" content="document">
<meta name="description"   content="the OpenBSD FAQ page">
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
</head>

<!--
Copyright (c) 2003, 2004, 2008 Nick Holland <nick@@openbsd.org>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor="#ffffff" text="#000000">
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->

<a href="../../../de/index.html">
<img alt="[OpenBSD]" height=30 width=141 src="../../../images/smalltitle.gif" border="0">
</a>
<p>
[<a href="logging.html">Zurück: Aufzeichnen</a>]
[<a href="index.html">Inhalt</a>]
[<a href="ftp.html">Weiter: Probleme mit FTP</a>]

<p>
<h1><font color="#e00000">PF: Leistung</font></h1>
<hr>

<h3>
"Wie viel Bandbreite kann PF verarbeiten?"<br>
"Wie viele Computer benötige ich, um meine Interverbindung zu
verarbeiten?"
</h3>

<!--XXX outdated?
	could probably use updating to make it more relevant;
	maybe pcengines/soekris instead of 486/66? -->
<p>
Es gibt keine einfachen Antworten auf diese Fragen. Für einige
Applikationen reicht ein 486/66 mit ein paar guten ISA-Netzwerkkarten,
der Filtern und NAT mit ungefähr 5 Mbps bewerkstelligen kann, aber für
andere Applikationen könnte eine sehr viel schnellere Maschine mit sehr
viel effizienteren PCI-Netzwerkkarten ungenügend sein. Die tatsächliche
Frage ist nicht die Anzahl der Bits pro Sekunde, sondern eher die
Anzahl der Pakete pro Sekunde und die Komplexität des Regelsatzes.

<p>
Die Leistung von PF hängt von einigen Begebenheiten ab:
<ul>
<li>Die Anzahl der Pakete pro Sekunde. Fast die gleiche Rechenleistung
muss auf ein Paket mit 1500 Byte Länge angewandt werden, wie für ein Paket
mit nur einem Byte Länge. Die Anzahl der Pakete pro Sekunde entscheidet
darüber, wie viele Einträge in der ,state'-Tabelle überprüft werden
müssen, in diesem Fall keine Übereinstimmung, und wie viele Filterregeln
pro Sekunde verarbeitet werden müssen, die die tatsächliche Last
auf dem System darstellt.

<li>Die Leistung von deinem System-Bus. Der ISA-Bus hat eine maximale
Bandbreite von 8 MB/Sek, und wenn der Prozessor darauf zugreift, muss er
sich auf eine Geschwindigkeit eines 80286 runterschrauben, der mit 8 MHz
läuft, unabhängig davon, wie schnell der Prozessor wirklich ist. Der
PCI-Bus hat eine viel größere Bandbreite und hat somit auch geringeren
Einfluss auf den Prozessor.

<li>Effizienz deiner Netzwerkkarte.
Einige Netzwerk-Adapter sind nun einmal effizienter als andere.
Ältere, vom
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4"
>rl(4)</a>-Treiber unterstützte, auf dem Realtek 8139 Kontroller-Chip
basierende Karten tendieren zu einer relativ schlechten Leistung
(neuere,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=re&amp;sektion=4"
>re(4)</a>-basierte  Realtek-Karten sind viel besser),
während auf dem Intel 21143
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4"
>dc(4)</a>) basierende Karten zu einer sehr guten Leistung tendieren.
Für maximale Leistung solltest
du Gigabit-Ethernet-Karten in Betracht ziehen, selbst wenn sie nicht
an Gigabit-Netzwerke angeschlossen sind, da sie einen technologisch
ausgereifteren Puffer besitzen.

<li>Komplexität und Design deines Regelsatzes. Je komplexer dein Regelsatz,
umso langsamer wird er. Je mehr Pakete durch <tt>keep state</tt> und
<tt>quick</tt> Regeln gefiltert werden, desto besser die Leistung.
Je mehr Zeilen für jedes einzelne Paket durchlaufen werden, desto
schlechter ist die Leistung.

<li>Kaum erwähnenswert: CPU und RAM. Da PF ein kernel-basierter Prozess
ist, wird kein Swapbereich genutzt. Daher wird PF laufen, wenn du
genügend RAM hast und wenn nicht, dann wird er sich wegen
,<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9"
>pool(9)</a> exhaustion' aufhängen.
Große Mengen RAM sind nicht notwendig - 32MB sollten für ungefähr
30.000 ,states' völlig ausreichen, wobei das eine Menge ,states' für
Anwendungen aus dem Heim- oder kleingewerblichem Gebrauch ist.
Die meisten Benutzer werden merken, dass ein ,recycelter' Computer mehr
als genug für ein PF-System ist - ein 300-MHz-System wird schnell eine
große Anzahl der Pakete verarbeiten können, zumindest, wenn es mit
guten Netzwerkkarten und einem guten Regelsatz ausgestattet ist.
</ul>

<h3>Helfen mehrere Prozessoren?</h3>
PF wird nur einen Prozessor verwenden, so dass mehrere Prozessoren
(oder mehrere Kernel) NICHT die PF-Leistung erhöhen.
<!--XXX outdated?
	this is probably talking about apic, which GENERIC now uses -->
JEDOCH kann es unter gewissen Umständen sein, dass der Einsatz der SMP-Version
von OpenBSD (<tt>bsd.mp</tt>) statt <tt>bsd</tt> eine erhöhte Leistung
erzielt, da eine andere Interruptverarbeitung verwendet wird. In
vielen Fällen wird <tt>bsd.mp</tt> aber zu einer schlechteren
Performance führen. Wenn du Performanceprobleme hast, experimentiere
hiermit rum, jedoch werden die meisten Anwender niemals auf
irgendwelche Grenzen stoßen, um die sie sich sorgen müssten.


<h3>Gibt es Benchmarks?</h3>
Leute fragen oft nach PF-Benchmarks. Der einzige Benchmark, der wirklich
zählt, ist <i>deine</i> Systemleistung in <i>deiner</i> Umgebung. Ein
Benchmark, der nicht zu deiner Umgebung passt, wird dir nicht helfen,
wie du dein Firewallsystem zu planen hast. Das beste, was du tun kannst, ist,
selbst einen Benchmark für PF durchzuführen, und zwar unter den gleichen,
oder nahezu gleichen, Bedingungen, denen die tatsächliche Firewall
ebenfalls ausgesetzt wäre und zwar auf der gleichen Hardware, die die
Firewall nutzen würde.

<p>
PF wird mit einigen sehr großen Anwendungen verwendet, die eine Menge
Verkehr erzeugen, und die Entwickler von PF sind ,Power User'.
Merkwürdig ist, dass es für dich wunderbar funktionieren wird.

<p>
[<a href="logging.html">Zurück: Aufzeichnen</a>]
[<a href="index.html">Inhalt</a>]
[<a href="ftp.html">Weiter: Probleme mit FTP</a>]

<p>
<hr>
<a href="index.html"><img height="24" width="24" src="../../../images/back.gif" border="0" alt="[zurück]"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: perf.html,v 1.24 ]<br>
$Translation: perf.html,v 1.23 2012/01/17 16:04:09 steffen Exp $<br>
-->
$OpenBSD: perf.html,v 1.24 2012/01/21 19:34:39 ajacoutot Exp $
</small>

</body>
</html>
@


1.24
log
@Sync with Steelix CVS
@
text
@d163 1
a163 1
$OpenBSD$
@


1.23
log
@Sync with Steelix CVS
@
text
@d52 3
d82 10
a91 6
<li>Effizienz deiner Netzwerkkarte. Einige Netzwerk-Adapter sind halt
effizienter als andere. Realtek-8139-
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4"
>rl(4)</a>)
basierte Karten neigen dazu, recht langsame Karten zu sein, während
Karten, die auf dem Intel 21143
d93 2
a94 2
>dc(4)</a>)
Chip basieren, gute Leistungen erzielen. Für maximale Leistung solltest
d121 4
a124 2
(oder mehrere Kernel) NICHT die PF-Leistung erhöhen. JEDOCH kann es
unter gewissen Umständen sein, dass der Einsatz der SMP-Version
d160 2
a161 2
Originally [OpenBSD: perf.html,v 1.23 ]<br>
$Translation: perf.html,v 1.22 2008/12/21 11:09:00 simon Exp $<br>
@


1.22
log
@Sync with Steelix CVS
@
text
@d151 2
a152 2
Originally [OpenBSD: perf.html,v 1.22 ]<br>
$Translation: perf.html,v 1.21 2008/08/09 13:55:22 paldium Exp $<br>
@


1.21
log
@Sync with Steelix CVS
@
text
@d14 1
a14 1
Copyright (c) 2003, 2004, Nick Holland <nick@@openbsd.org>
d112 13
a124 1
<p>
d151 2
a152 2
Originally [OpenBSD: perf.html,v 1.21 ]<br>
$Translation: perf.html,v 1.20 2008/03/04 23:03:18 paldium Exp $<br>
@


1.20
log
@Sync with Steelix CVS
@
text
@d87 1
a87 1
Chip basieren, gute Leistungen erziehlen. Für maximale Leistung solltest
d140 1
a140 1
$Translation: perf.html,v 1.19 2007/11/03 10:45:43 paldium Exp $<br>
@


1.19
log
@sync with steelix translation CVS
@
text
@d74 1
a74 1
sich auf eine Geschwindigkeit eines 80286 runterschrauben, der mit 8 Mhz
d83 1
a83 1
basierende Karten neigen dazu, recht langsame Karten zu sein, während
d98 1
a98 1
<li>Kaum erwähnenswert: CPU und RAM. Da PF ein kernel-basierender Prozess
d103 1
a103 1
Große Mengen an RAM sind nicht notwendig - 32MB sollten für ungefähr
d107 2
a108 2
als genug für ein PF-System ist - ein 300-Mhz-System wird schnell eine
große Anzahl von Paketen verarbeiten können, zumindest, wenn es mit
d124 1
a124 1
an Verkehr erzeugen, und die Entwickler von PF sind ,Power User'.
d140 1
a140 1
$Translation: perf.html,v 1.18 2007/06/20 17:41:07 paldium Exp $<br>
@


1.18
log
@Sync with Steelix CVS
@
text
@d65 1
a65 1
muss auf ein Paket mit 1500 Bytes Länge angewandt werden, wie für ein Paket
d140 1
a140 1
$Translation: perf.html,v 1.17 2007/05/09 19:32:21 paldium Exp $<br>
@


1.17
log
@Sync with steelix translation CVS
@
text
@d81 1
a81 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl"
d85 1
a85 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc"
d140 1
a140 1
$Translation: perf.html,v 1.16 2007/05/08 21:34:45 simon Exp $<br>
@


1.16
log
@Sync with steelix translation CVS
@
text
@d81 1
a81 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+4.0"
d85 1
a85 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+4.0"
d101 1
a101 1
,<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+4.0"
d139 2
a140 2
Originally [OpenBSD: perf.html,v 1.20 ]<br>
$Translation: perf.html,v 1.15 2007/04/25 15:41:14 paldium Exp $<br>
@


1.15
log
@sync with steelix translation CVS
@
text
@d82 1
a82 1
>rl(4)</a>) 
d103 1
a103 1
Große Mengen an RAM sind nicht notwendig -- 32MB sollten für ungefähr
d107 1
a107 1
als genug für ein PF-System ist -- ein 300-Mhz-System wird schnell eine
d140 1
a140 1
$Translation: perf.html,v 1.14 2006/11/01 10:48:51 paldium Exp $<br>
d146 1
a146 1
</html> 
@


1.14
log
@3.9 release time.
@
text
@d81 1
a81 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.9"
d85 1
a85 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.9"
d101 1
a101 1
,<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.9"
d139 2
a140 2
Originally [OpenBSD: perf.html,v 1.19 ]<br>
$Translation: perf.html,v 1.13 2006/05/01 11:17:11 paldium Exp $<br>
@


1.13
log
@sync with Steelix CVS
@
text
@d81 1
a81 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.8"
d85 1
a85 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.8"
d101 1
a101 1
,<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.8"
d139 2
a140 2
Originally [OpenBSD: perf.html,v 1.18 ]<br>
$Translation: perf.html,v 1.12 2006/04/24 17:44:30 paldium Exp $<br>
@


1.12
log
@sync with steelix translation CVS
@
text
@a5 1
<meta http-equiv="Content-Language" content="de">
d8 1
a8 1
<meta name="description"   content="Die OpenBSD-FAQ-Seite">
d139 2
a140 2
Originally [OpenBSD: perf.html,v 1.18 ]
$Translation: perf.html,v 1.11 2006/01/10 12:18:04 paldium Exp $
@


1.11
log
@sync with steelix translation CVS
@
text
@d48 3
a50 2
"Wieviel Bandbreite kann PF verarbeiten?"<br>
"Wieviele Computer benötige ich, um meine Interverbindung zu verarbeiten?"
d141 1
a141 1
$Translation: perf.html,v 1.10 2005/11/04 11:01:45 paldium Exp $
@


1.10
log
@sync with Steelix CVS
@
text
@d81 1
a81 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.7"
d85 1
a85 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.7"
d101 1
a101 1
,<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.7"
d139 2
a140 2
Originally [OpenBSD: perf.html,v 1.17 ]
$Translation: perf.html,v 1.9 2005/09/14 16:16:39 paldium Exp $
@


1.9
log
@sync with steelix translation CVS
@
text
@d6 1
a8 1
<meta http-equiv="Content-Language" content="de">
d140 1
a140 1
$Translation: perf.html,v 1.8 2005/05/20 16:33:52 paldium Exp $
@


1.8
log
@sync with steelxi translation CVS
@
text
@d81 1
a81 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.6"
d85 1
a85 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.6"
d101 1
a101 1
,<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.6"
d139 2
a140 2
Originally [OpenBSD: perf.html,v 1.16 ]
$Translation: perf.html,v 1.7 2005/04/25 18:16:47 paldium Exp $
@


1.7
log
@huge sync from the translators
@
text
@@


1.6
log
@Sync with Steelix CVS
@
text
@d108 2
a109 2
große Anzahl an Paketen verarbeiten können, zumindest, wenn es mit guten
Netzwerkkarten und einem guten Regelsatz ausgestattet ist.
d140 1
a140 1
$Translation: perf.html,v 1.6 2005/01/18 14:33:46 paldium Exp $
@


1.5
log
@Sync with Steelix CVS
@
text
@d9 1
a9 1
<meta name="description"   content="die OpenBSD-FAQ-Seite">
d138 5
a142 3
Originally [OpenBSD: perf.html,v 1.16 ]<br>
$Translation: perf.html,v 1.5 2004/12/22 12:29:54 paldium Exp $<br>
$OpenBSD: perf.html,v 1.16 2004/12/22 04:28:16 david Exp $
@


1.4
log
@sync with Steelix CVS
@
text
@d35 3
a37 1
<img alt="[OpenBSD]" height=30 width=141 src="../../../images/smalltitle.gif">
d138 3
a140 3
Originally [OpenBSD: perf.html,v 1.15 ]<br>
$Translation: perf.html,v 1.4 2004/12/07 16:56:32 paldium Exp $<br>
$OpenBSD: perf.html,v 1.15 2004/10/29 17:22:57 nick Exp $
@


1.3
log
@Sync with Steelix CVS
@
text
@d8 2
a9 1
<meta name="description"   content="the OpenBSD FAQ page">
d35 1
a35 1
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif">
d37 1
a37 1
[<a href="logging.html">Zurück: Logging</a>]
d52 2
a53 2
Applikationen reicht ein 486/66 mit ein paar guten ISA Netzwerkkarten,
der Filtern und NAT mit ungefähr 5Mbps bewerkstelligen kann, aber für
d55 1
a55 1
viel effizienteren PCI Netzwerkkarten ungenügend sein. Die tatsächliche
d65 1
a65 1
darüber, wie viele Einträge in der ,state' Tabelle überprüft werden
d70 5
a74 5
<li>Die Leistung von deinem System-Bus. Der ISA Bus hat eine maximale
Bandbreite von 8MB/Sek, und wenn der Prozessor darauf zugreift, muss er
sich auf eine Geschwindigkeit eines 80286 runterschrauben, der mit 8Mhz
läuft, unabhängig davon, wie schnell der Prozessor wirklich ist. Der PCI
Bus hat eine viel größere Bandbreite und hat somit auch geringeren
d77 2
a78 2
<li>Effizienz deiner Netzwerkkarte. Einige Netzwerk Adapter sind halt
effizienter als andere. Realtek 8139
d81 1
a81 1
basierende Karten neigen dazu, recht langsame karten zu sein, während
d86 2
a87 2
du Gigabit Ethernet Karten in Betracht ziehen, selbst wenn sie nicht
an Gigabit Netzwerke angeschlossen sind, da sie einen technologisch
d98 1
a98 1
genügend RAM hast, und wenn nicht, dann wird er sich wegen
d103 4
a106 4
ein Anwendungen aus dem Heim- oder kleingewerblichem Gebrauch ist.
Die meisten Benutzer werden merken, dass ein "recycelter" Computer mehr
als genug für ein PF System ist -- ein 300Mhz System wird schnell eine
große Anzahl an Paketen verarbeiten können, zumindest, wenn er mit guten
d111 1
a111 1
Leute fragen oft nach PF Benchmarks. Der einzige Benchmark, der wirklich
d122 1
a122 1
an Verkehr erzeugen, und die Entwickler von PF sind "Power User".
d126 1
a126 1
[<a href="logging.html">Zurück: Logging</a>]
d132 1
a132 1
<a href="index.html"><img height="24" width="24" src="../../images/back.gif" border="0" alt="[back]"></a> 
d136 4
a139 5
Originally [OpenBSD: perf.html,v 1.15 ]
<br>
$Translation: perf.html,v 1.3 2004/11/28 14:03:02 paldium Exp $
<br></small>
<small>$OpenBSD: perf.html,v 1.15 2004/10/29 17:22:57 nick Exp $</small>
@


1.2
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>PF: Performance</title>
a10 1
<meta name="copyright"     content="This document copyright 2002-2003 by OpenBSD.">
d13 17
d34 1
a34 1
<img alt="[OpenBSD]" height=30 width=141 src="../../../images/smalltitle.gif">
d36 3
a38 3
[<a href="logging.html">Previous: Logging</a>]
[<a href="index.html">Contents</a>]
[<a href="ftp.html">Next: Issues with FTP</a>]
d41 1
a41 1
<h1><font color="#e00000">PF: Performance</font></h1>
d45 2
a46 2
"How much bandwidth can PF handle?"<br>
"How much computer do I need to handle my Internet connection?"
d50 7
a56 6
There are no easy answers to those questions.  For some applications, a
486/66 with a pair of good ISA NICs could filter and NAT close to 5Mbps,
but for other applications a much faster machine with much more
efficient PCI NICs might end up being insufficient.  The real question
is not the number of bits per second but rather the number of packets
per second and the complexity of the ruleset.
d59 1
a59 1
PF performance is determined by several variables:
d61 18
a78 16
<li>Number of packets per second.  Almost the same amount of processing
needs to be done on a packet with 1500 byte payload as for a
packet with a one byte payload.  The number of packets per second
determines the number of times the state table and, in case of no match there,
filter rules have to be evaluated every second, determining the effective
demand on the system.

<li>Performance of your system bus. The ISA bus has a maximum bandwidth
of 8Mbps, and when the processor is accessing it, it has to slow itself
to the effective speed of a 80286 running at 8MHz, no matter how fast
the processor really is.  The PCI bus has a much greater effective
bandwidth, and has less impact on the processor.

<li>Efficiency of your network card. Some network adapters are just more
efficient than others.  Realtek 8139 
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rl&amp;sektion=4&amp;manpath=OpenBSD+3.4"
d80 3
a82 2
based cards tend to be relatively poor performers while Intel 21143 
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dc&amp;sektion=4&amp;manpath=OpenBSD+3.4"
d84 23
a106 19
based cards tend to perform very well.  For maximum performance,
consider using gigabit Ethernet cards, even if not connecting to gigabit
networks, as they have much more advanced buffering.

<li>Complexity and design of your ruleset.  The more complex your
ruleset, the slower it is.  The more packets that are filtered by
<tt>keep state</tt> and <tt>quick</tt> rules, the better the
performance.  The more lines that have to be evaluated for each packet,
the lower the performance.

<li>Barely worth mentioning: CPU and RAM.  As PF is a kernel-based
process, it will not use swap space.  So, if you have enough RAM, it
runs, if not, it panics due to
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pool&amp;sektion=9&amp;manpath=OpenBSD+3.4"
>pool(9)</a> exhaustion.  Huge amounts of RAM are not needed -- 32MB should be
plenty for close to 30,000 states, which is a lot of states for a small office
or home application. Most users will find a "recycled" computer more than
enough for a PF system -- a 300MHz system will move a very large number of
packets rapidly, at least if backed up with good NICs and a good ruleset.
d110 18
a127 16
People often ask for PF benchmarks.  The only benchmark that counts is
<i>your</i> system performance in <i>your</i> environment.  A benchmark
that doesn't replicate your environment will not properly help you plan
your firewall system. The best course of action is to benchmark PF for
yourself under the same, or as close as possible to, network conditions
that the actual firewall would experience running on the same hardware
the firewall would use.

<p>
PF is used in some very large, high-traffic applications, and the developers
are "power users" of PF.  Odds are, it will do very well for you.

<p>
[<a href="logging.html">Previous: Logging</a>]
[<a href="index.html">Contents</a>]
[<a href="ftp.html">Next: Issues with FTP</a>]
d131 1
a131 1
<a href="../../de/index.html"><img height="24" width="24" src="../../../images/back.gif" border="0" alt="[back]"></a> 
d135 5
a139 4
Originally [OpenBSD: perf.html,v 1.10 ]<br>
$Translation: perf.html,v 1.2 2003/12/13 20:03:55 jufi Exp $<br>
</small>
<small>$OpenBSD: perf.html,v 1.10 2003/11/27 15:08:25 nick Exp $</small>
@


1.1
log
@Sync with Steelix CVS
@
text
@d20 1
a20 1
[<a href="pools.html">Previous: Address Pools and Load Balancing</a>]
d60 1
a60 1
>rl</a>) 
d63 1
a63 1
>dc</a>)
d99 1
a99 1
[<a href="pools.html">Previous: Address Pools and Load Balancing</a>]
d109 2
a110 3
Originally [OpenBSD: perf.html,v 1.9 ]<br>
$Translation: perf.html,v 1.1 2003/11/27 17:34:57 sl Exp $<br>
$OpenBSD$
d112 1
@

