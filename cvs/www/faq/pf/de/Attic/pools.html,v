head	1.32;
access;
symbols;
locks; strict;
comment	@# @;


1.32
date	2014.04.01.17.18.45;	author nick;	state dead;
branches;
next	1.31;

1.31
date	2013.11.01.18.04.05;	author ajacoutot;	state Exp;
branches;
next	1.30;

1.30
date	2013.05.01.17.39.07;	author ajacoutot;	state Exp;
branches;
next	1.29;

1.29
date	2013.05.01.14.42.15;	author ajacoutot;	state Exp;
branches;
next	1.28;

1.28
date	2013.02.20.14.08.03;	author ajacoutot;	state Exp;
branches;
next	1.27;

1.27
date	2012.11.02.07.24.05;	author ajacoutot;	state Exp;
branches;
next	1.26;

1.26
date	2012.05.13.16.30.18;	author ajacoutot;	state Exp;
branches;
next	1.25;

1.25
date	2012.01.21.19.34.39;	author ajacoutot;	state Exp;
branches;
next	1.24;

1.24
date	2009.12.22.17.49.10;	author ajacoutot;	state Exp;
branches;
next	1.23;

1.23
date	2009.11.07.07.32.54;	author ajacoutot;	state Exp;
branches;
next	1.22;

1.22
date	2009.05.04.19.07.52;	author tobias;	state Exp;
branches;
next	1.21;

1.21
date	2008.11.01.11.02.22;	author tobias;	state Exp;
branches;
next	1.20;

1.20
date	2008.08.10.16.14.28;	author tobias;	state Exp;
branches;
next	1.19;

1.19
date	2008.03.09.13.37.13;	author tobias;	state Exp;
branches;
next	1.18;

1.18
date	2007.11.12.20.29.59;	author saad;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.09.05.49.53;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2007.04.26.03.08.06;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2006.11.01.11.30.45;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2006.05.01.12.19.18;	author jufi;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.25.08.25.49;	author saad;	state Exp;
branches;
next	1.12;

1.12
date	2006.01.14.11.36.00;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2005.11.04.20.24.24;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2005.09.20.07.30.02;	author saad;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.15.20.46.07;	author saad;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.20.17.13.26;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2005.05.19.18.23.06;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2005.05.04.17.52.25;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2005.01.18.17.18.10;	author jufi;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.22.20.00.48;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.08.05.22.44;	author saad;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.03.19.44.28;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.27.19.39.09;	author horacio;	state Exp;
branches;
next	;


desc
@@


1.32
log
@
missed another one...
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>PF: Adress-Pools und Load Balancing</title>
<link rev="made" href="mailto:www@@openbsd.org">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="resource-type" content="document">
<meta name="description"   content="the OpenBSD FAQ page">
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
</head>

<!--
Copyright (c) 2003, 2004 Joel Knight <enabled@@myrealbox.com>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor="#ffffff" text="#000000">
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->

<a href="../../../de/index.html">
<img alt="[OpenBSD]" height=30 width=141 src="../../../images/smalltitle.gif" border="0">
</a>
<p>
[<a href="queueing.html">Zurück: Paket-Queueing und Priorisierung</a>]
[<a href="index.html">Inhalt</a>]
[<a href="tagging.html">Weiter: Pakete markieren</a>]

<p>
<h1>
<font color="#e00000">PF: Adress-Pools und Load Balancing</font>
</h1>

<hr>

<h3>Inhaltsverzeichnis</h3>
<ul>
<li><a href="#intro">Einführung</a>
<li><a href="#nat">NAT-Adress-Pool</a>
<li><a href="#incoming">Load Balancing für eingehende Verbindungen</a>
<li><a href="#outgoing">Load Balancing für ausgehende Verbindungen</a>
	<ul>
	<li><a href="#outexample">Regelsatz-Beispiel</a>
	</ul>
</ul>

<hr>

<a name="intro"></a>
<h2>Einführung</h2>
Ein Adress-Pool ist eine Ansammlung von zwei oder mehreren Adressen,
deren Verwendung unter einer Gruppe an Benutzern geteilt wird.
Ein Adress-Pool kann als Zieladresse der <tt>nat-to</tt>, <tt>rdr-to</tt>,
<tt>route-to</tt>, <tt>reply-to</tt> und <tt>dup-to</tt>
<a href="filter.html">Filter</a>optionen angegeben werden.

<p>
Es gibt vier Methoden, um einen Adress-Pool zu verwenden:
<ul>
<li><tt>bitmask</tt> - setzt den Netzwerk-Teil der Pool-Adresse über
die Adresse, die modifiziert wird (Quelladresse für <tt>nat-to</tt>-Regeln,
Zieladresse für <tt>rdr-to</tt>-Regeln).
Beispiel: wenn der Adress-Pool 192.0.2.1/24 und die zu modifizierende
Adresse 10.0.0.50 ist, dann wird die resultierende Adresse 192.0.2.50
sein. Wenn der Adress-Pool 192.0.2.1/25 und die zu modifizierende
Adresse 10.0.0.130 ist, dann wird die resultierende Adresse 192.0.2.2
sein.
<li><tt>random</tt> - Wählt zufällig eine Adresse aus dem Pool aus.
<li><tt>source-hash</tt> - Verwenden einen ,hash' der Source-Adresse,
um zu ermitteln, welche Adresse aus dem Pool verwendet werden soll.
Diese Methode stellt sicher, dass die gegebene Source-Adresse immer
zur gleichen Pool-Adresse zugewiesen wird.
Der Schlüssel, der dem ,hashing'-Algorithmus übergeben wird, kann
gegebenenfalls nach dem <tt>source-hash</tt>-Schlüsselwortes im
Hex-Format oder als Zeichenkette angegeben werden. Standardmäßig
wird
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.4"
>pfctl(8)</a> einen zufälligen Schlüssel jedes Mal erzeugen, wenn der
Regelsatz geladen wird.
<li><tt>round-robin</tt> - Läuft in Reihe durch den Adress-Pool.
Dies ist die standardmäßige Methode und ebenfalls die einzige zulässige,
wenn der Adress-Pool unter Verwendung einer <a href="tables.html">Tabelle</a>
angegeben wurde.
</ul>

<p>
Abgesehen von der <tt>round-robin</tt>-Methode, muss der Adress-Pool
als ein
<a href="http://public.swbell.net/dedicated/cidr.html">CIDR</a>-
(Classless Inter-Domain Routing) Netzwerkblock angegeben werde. Die
<tt>round-robin</tt>-Methode wird mehrere individuelle Adressen
annehmen, die in einer <a href="macros.html#lists">Liste</a> oder
<a href="tables.html">Tabelle</a> angegeben worden sind.

<p>
Die <tt>sticky-address</tt>-Option kann mit den <tt>random</tt>- und
<tt>round-robin</tt>-Pool-Arten verwendet werden, um sicherzustellen,
dass eine bestimmte Source-Adresse jedes Mal zur gleichen
Umleitungs-Adresse zugewiesen wird.

<a name="nat"></a>
<h2>NAT-Adress-Pool</h2>
Ein Adress-Pool kann als Übersetzungs-Adresse in
<a href="nat.html"><tt>nat-to</tt></a>-Regeln verwendet werden. Die
Source-Adresse einer Verbindung wird somit immer in eine Adresse
übersetzt, die aus dem Pool stammt, je nach gewählter Methode.
Dies kann in Situationen gebräuchlich sein, in denen PF als
NAT für ein sehr großes Netzwerk arbeitet. Da die Anzahl der
Verbindungen, auf die NAT angewandt wurde, pro Übersetzungs-Adresse
begrenzt ist, wird das Hinzufügen zusätzlicher Übersetzungs-Adressen
dem NAT-Gateway erlauben, eine noch größere Anzahl Anwender
verwalten zu können.

<p>
In diesem Beispiel wird ein Pool, der aus zwei Adressen besteht,
verwendet, um ausgehende Pakete zu übersetzen. Für jede ausgehende
Verbindung wird PF durch die Adressen in einer ,round-robin'-Manier
wechseln.
<blockquote>
<tt>
match out on $ext_if inet nat-to { 192.0.2.5, 192.0.2.10 }
</tt>
</blockquote>

<p>
Ein Nachteil bei dieser Methode ist, dass erfolgreiche Verbindungen
von der gleichen internen Adresse nicht immer mit der gleichen
Übersetzungs-Adresse übersetzt werden. Dies kann Störungen
verursachen, zum Beispiel, wenn Webseiten besucht werden, die
Benutzerlogins anhand der IP-Adresse verfolgen. Ein anderer Weg ist
das Verwenden der <tt>source-hash</tt>-Methode, sodass jede interne
Adresse immer mit der gleichen Übersetzungs-Adresse übersetzt wird.
Um das zu machen, muss der Adress-Pool ein
<a href="http://public.swbell.net/dedicated/cidr.html">CIDR</a>-Netzwerkblock
sein.
<blockquote>
<tt>
match out on $ext_if inet nat-to 192.0.2.4/31 source-hash
</tt>
</blockquote>

<p>
Diese Regel verwendet den Adress-Pool 192.0.2.4/31
(192.0.2.4 - 192.0.2.5) als Übersetzungs-Adresse für ausgehende
Pakete. Jede interne Adresse wird wegen dem
<tt>source-hash</tt>-Schlüsselwort immer mit der gleichen
Übersetzungs-Adresse übersetzt.

<a name="incoming"></a>
<h2>Load Balance für eingehende Verbindungen</h2>
Adress-Pools können verwendet werdem, um Load Balance für eingehende
Verbindungen durchzuführen. Zum Beispiel können eingehende
Webserver-Verbindungen über eine Webserver-Farm verteilt werden:
<blockquote>
<tt>
web_servers = "{ 10.0.0.10, 10.0.0.11, 10.0.0.13 }"<br>
<br>
match in on $ext_if proto tcp to port 80 rdr-to $web_servers \<br>
&nbsp;&nbsp;&nbsp;&nbsp;round-robin sticky-address
</tt>
</blockquote>

<p>
Erfolgreiche Verbindungen werden zu den Webservern in einer
,round-robin'-Manier verteilt und zwar mit Verbindungen der
gleichen Quelle, die zum gleichen Webserver gesendet werden.
Die ,sticky Verbindung' wird existieren, so lange ,states' zu dieser
Verbindung verweisen.
Sobald der ,state' ausläuft, wird auch die ,sticky' Verbindung
verschwinden.
Weitere Verbindungen von diesem Host werden zum nächsten
Webserver in der Runde umgeleitet.

<a name="outgoing"></a>
<h2>Load Balance für ausgehende Verbindungen</h2>
Adress-Pools können in Verbindung mit der <tt>route-to</tt>-Filteroption
verwendet werden, um Load Balance mit zwei oder mehr Internetverbindungen
zu erreichen, wenn ein ordentliches ,multi-path routing'-Protokoll
(wie zum Beispiel
<a href="http://www.rfc-editor.org/rfc/rfc1771.txt">BGP4</a>) nicht
verfügbar ist.
Mit der Verwendung von <tt>route-to</tt> in Verbindung mit einem
<tt>round-robin</tt>-Adress-Pools, werden ausgehende Verbindung
gleichmäßig über mehrere Ausgänge verteilt.

<p>
Eine weitere Information, die benötigt wird, um dies machen zu können, ist
die IP-Adresse des angrenzenden Routers jeder Internetverbindung.
Diese wird der <tt>route-to</tt>-Option übergeben, um das Ziel der
ausgehenden Pakete zu kontrollieren.

<p>
Das folgende Beispiel teilt den ausgehenden Verkehr auf zwei
Internetverbindungen auf:
<blockquote>
<tt>
lan_net = "192.168.0.0/24"<br>
int_if &nbsp;= "dc0"<br>
ext_if1 = "fxp0"<br>
ext_if2 = "fxp1"<br>
ext_gw1 = "68.146.224.1"<br>
ext_gw2 = "142.59.76.1"<br>
<br>
pass in on $int_if from $lan_net \<br>
&nbsp;&nbsp;&nbsp;route-to { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) }\<br>
&nbsp;&nbsp;&nbsp;round-robin
</tt>
</blockquote>

<p>
Die <tt>route-to</tt>-Option wird auf den Verkehr, der durch
<i>in</i> in das <i>interne</i> Interface kommt, angewandt, um
die ausgehenden Interfaces anzugeben, über die der Verkehr aufgeteilt
werden soll, mit den jeweiligen Gateways.
Beachte, dass die Option <tt>route-to</tt> bei <i>jeder</i> Filterregel
angegeben sein muss, für die Verkehr aufgeteilt werden soll
(sie kann nicht mit <tt>match</tt> Regeln genutzt werden).

<p>
Um sicherzustellen, dass Pakete mit einer Source-Adresse, die zum
<tt>$ext_if1</tt> gehören, immer über <tt>$ext_gw1</tt> geleitet werden
(und so ähnlich auch für <tt>$ext_if2</tt> und <tt>$ext_gw2</tt>),
sollten die folgenden beiden Zeilen in den Regelsatz eingefügt werden:
<blockquote>
<tt>
pass out on $ext_if1 from $ext_if2 \<br>
&nbsp;&nbsp;&nbsp;route-to ($ext_if2 $ext_gw2)<br>
pass out on $ext_if2 from $ext_if1 \<br>
&nbsp;&nbsp;&nbsp;route-to ($ext_if1 $ext_gw1) 
</tt>
</blockquote>

<p>
Schlussendlich kann NAT ebenfalls auf alle ausgehenden Interfaces
angewendet werden:
<blockquote>
<tt>
match out on $ext_if1 from $lan_net nat-to ($ext_if1)<br>
match out on $ext_if2 from $lan_net nat-to ($ext_if2)
</tt>
</blockquote>

<a name="outexample"></a>
<p>
Ein komplettes Beispiel, das ,load balancing' auf den ausgehenden
Verkehr ausübt, kann so ähnlich wie folgt aussehen:

<p>
<table border=0 width="650">
<tr><td nowrap bgcolor="#EEEEEE">
<pre>
lan_net = "192.168.0.0/24"
int_if  = "dc0"
ext_if1 = "fxp0"
ext_if2 = "fxp1"
ext_gw1 = "68.146.224.1"
ext_gw2 = "142.59.76.1"

#  nat outgoing connections on each internet interface
match out on $ext_if1 from $lan_net nat-to ($ext_if1)
match out on $ext_if2 from $lan_net nat-to ($ext_if2)

#  default deny
block in
block out

#  pass all outgoing packets on internal interface
pass out on $int_if to $lan_net
#  pass in quick any packets destined for the gateway itself
pass in quick on $int_if from $lan_net to $int_if
#  load balance outgoing traffic from internal network. 
pass in on $int_if from $lan_net \
    route-to { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } \
    round-robin
#  keep https traffic on a single connection; some web applications,
#  especially "secure" ones, don't allow it to change mid-session
pass in on $int_if proto tcp from $lan_net to port https \
    route-to ($ext_if1 $ext_gw1)

#  general "pass out" rules for external interfaces
pass out on $ext_if1
pass out on $ext_if2

#  route packets from any IPs on $ext_if1 to $ext_gw1 and the same for
#  $ext_if2 and $ext_gw2
pass out on $ext_if1 from $ext_if2 route-to ($ext_if2 $ext_gw2)
pass out on $ext_if2 from $ext_if1 route-to ($ext_if1 $ext_gw1) 

</pre>
</td></tr>
</table>

<p>
[<a href="queueing.html">Zurück: Paket-Queueing und Priorisierung</a>]
[<a href="index.html">Inhalt</a>]
[<a href="tagging.html">Weiter: Pakete markieren</a>]

<p>
<hr>
<a href="index.html"><img height="24" width="24" src="../../../images/back.gif" border="0" alt="[zurück]"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: pools.html,v 1.35 ]<br>
$Translation: pools.html,v 1.31 2013/11/01 16:59:45 steffen Exp $<br>
-->
$OpenBSD: pools.html,v 1.31 2013/11/01 18:04:05 ajacoutot Exp $
</small>

</body>
</html>
@


1.31
log
@Sync with Steelix CVS
@
text
@d321 1
a321 1
$OpenBSD$
@


1.30
log
@Sync with Steelix CVS
@
text
@d90 1
a90 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.3"
d318 2
a319 2
Originally [OpenBSD: pools.html,v 1.34 ]<br>
$Translation: pools.html,v 1.30 2013/05/01 16:34:16 steffen Exp $<br>
@


1.29
log
@Sync with Steelix CVS
@
text
@d318 2
a319 2
Originally [OpenBSD: pools.html,v 1.33 ]<br>
$Translation: pools.html,v 1.29 2013/05/01 13:35:26 steffen Exp $<br>
@


1.28
log
@Sync with Steelix CVS
@
text
@d90 1
a90 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.2"
d319 1
a319 1
$Translation: pools.html,v 1.28 2013/02/20 09:44:31 steffen Exp $<br>
@


1.27
log
@Sync with Steelix CVS
@
text
@d102 1
a102 1
<a href="http://public.pacbell.net/dedicated/cidr.html">CIDR</a>-
d147 1
a147 1
<a href="http://public.pacbell.net/dedicated/cidr.html">CIDR</a>-Netzwerkblock
d318 2
a319 2
Originally [OpenBSD: pools.html,v 1.32 ]<br>
$Translation: pools.html,v 1.27 2012/11/01 20:43:18 steffen Exp $<br>
@


1.26
log
@Sync with Steelix CVS
@
text
@d90 1
a90 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.1"
d318 2
a319 2
Originally [OpenBSD: pools.html,v 1.31 ]<br>
$Translation: pools.html,v 1.26 2012/05/11 17:06:29 steffen Exp $<br>
@


1.25
log
@Sync with Steelix CVS
@
text
@d90 1
a90 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.0"
d318 2
a319 2
Originally [OpenBSD: pools.html,v 1.30 ]<br>
$Translation: pools.html,v 1.25 2012/01/19 21:33:34 steffen Exp $<br>
@


1.24
log
@Sync with Steelix CVS
@
text
@d66 3
a68 6
Ein Adress-Pool kann als Umleitungs-Adresse in
<a href="rdr.html"><tt>rdr</tt></a>-Regeln, als Übersetzungs-Adresse
in <a href="nat.html"><tt>nat</tt></a>-Regeln und als Ziel-Adresse
in <tt>route-to</tt>-, <tt>reply-to</tt>- und
<tt>dup-to</tt>-<a href="filter.html">Filter</a>-Optionen angegeben
werden.
d74 2
a75 2
die Adresse, die modifiziert wird (Source-Adresse für <tt>nat</tt>-Regeln,
Ziel-Adresse für <tt>rdr</tt>-Regeln).
d90 1
a90 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.6"
d117 1
a117 1
<a href="nat.html"><tt>nat</tt></a>-Regeln verwendet werden. Die
d134 1
a134 1
nat on $ext_if inet -&gt; { 192.0.2.5, 192.0.2.10 }
d151 1
a151 1
nat on $ext_if inet -&gt; 192.0.2.4/31 source-hash
d156 1
a156 1
Diese <tt>nat</tt>-Regel verwende den Adress-Pool 192.0.2.4/31
d171 1
a171 1
rdr on $ext_if proto tcp to port 80 -&gt; $web_servers \<br>
d217 3
a219 3
pass in on $int_if route-to \<br>
&nbsp;&nbsp;&nbsp;{ ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin \<br>
&nbsp;&nbsp;&nbsp;from $lan_net to any
d227 4
a230 6
werden soll, mit den jeweiligen Gateways. Bedenke, dass die
<tt>route-to</tt>-Option bei <i>jeder</i> Filterregel anwesend sein
muss, für die der Verkehr aufgeteilt wird. Antwort-Pakete werden
über das gleiche externe Interface zurückgeleitet, das sie verlassen
haben (dies wird durch die ISPs gemacht) und normal zurück zum
internen Netzwerk geleitet.
d239 4
a242 4
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2 \<br>
&nbsp;&nbsp;&nbsp;to any<br>
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1 \<br>
&nbsp;&nbsp;&nbsp;to any
d251 2
a252 2
nat on $ext_if1 from $lan_net -&gt; ($ext_if1)<br>
nat on $ext_if2 from $lan_net -&gt; ($ext_if2)
d272 3
a274 3
#  nat auf ausgehende Verbindungen auf jedem Internet-Interface anwenden
nat on $ext_if1 from $lan_net -&gt; ($ext_if1)
nat on $ext_if2 from $lan_net -&gt; ($ext_if2)
d276 1
a276 1
#  standardmäßiges Blocken
d280 1
a280 1
#  lasse alle ausgehenden Pakete durch das interne Interface
d282 1
a282 2
#  lasse ,quick' (schnell) alle Pakete, die für das Gateway selbst
#  bestimmt sind, durch
d284 8
a291 9
#  ,load balancing' auf ausgehenden Verkehr für das interne Netzwerk
pass in on $int_if route-to \
    { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin \
    from $lan_net
#  halte https-Verkehr auf einer einzelnen Verbindung; einige
#  Webanwendungen, inbesondere ,sichere', erlauben keine Aenderung an
#  der mid-session
pass in on $int_if route-to ($ext_if1 $ext_gw1) \
    proto tcp from $lan_net to port https
d293 1
a293 1
#  generelle ,pass out'-Regeln für die externen Interfaces
d297 5
a301 4
#  leite Pakete von jeder IP vom $ext_if1 zum $ext_gw1 und das Gleiche
#  für $ext_if2 und $ext_gw2
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1
d318 2
a319 2
Originally [OpenBSD: pools.html,v 1.25 ]<br>
$Translation: pools.html,v 1.24 2009/12/20 13:19:16 tobias Exp $<br>
@


1.23
log
@Sync with Steelix CVS
@
text
@d137 1
a137 1
nat on $ext_if inet from any to any -&gt; { 192.0.2.5, 192.0.2.10 }
d154 1
a154 1
nat on $ext_if inet from any to any -&gt; 192.0.2.4/31 source-hash
d174 1
a174 1
rdr on $ext_if proto tcp from any to any port 80 -&gt; $web_servers \<br>
d222 1
a222 1
&nbsp;&nbsp;&nbsp;from $lan_net to any keep state
d256 2
a257 2
nat on $ext_if1 from $lan_net to any -&gt; ($ext_if1)<br>
nat on $ext_if2 from $lan_net to any -&gt; ($ext_if2)
d278 2
a279 2
nat on $ext_if1 from $lan_net to any -&gt; ($ext_if1)
nat on $ext_if2 from $lan_net to any -&gt; ($ext_if2)
d282 2
a283 2
block in  from any to any
block out from any to any
d286 1
a286 1
pass out on $int_if from any to $lan_net
d290 1
a290 1
#  ,load balancing' auf ausgehenden tcp-Verkehr für das interne Netzwerk
d293 6
a298 6
    proto tcp from $lan_net to any flags S/SA modulate state
#  ,load balancing' für ausgehenden udp- und icmp-Verkehr vom internen
#  Netzwerk
pass in on $int_if route-to \
    { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin \
    proto { udp, icmp } from $lan_net to any keep state
d301 2
a302 4
pass out on $ext_if1 proto tcp from any to any flags S/SA modulate state
pass out on $ext_if1 proto { udp, icmp } from any to any keep state
pass out on $ext_if2 proto tcp from any to any flags S/SA modulate state
pass out on $ext_if2 proto { udp, icmp } from any to any keep state
d306 2
a307 2
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2 to any
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1 to any
d324 2
a325 2
Originally [OpenBSD: pools.html,v 1.24 ]<br>
$Translation: pools.html,v 1.23 2009/11/05 12:55:49 tobias Exp $<br>
@


1.22
log
@Sync with Steelix CVS
@
text
@d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.5"
d326 2
a327 2
Originally [OpenBSD: pools.html,v 1.23 ]<br>
$Translation: pools.html,v 1.22 2009/05/03 12:44:32 tobias Exp $<br>
@


1.21
log
@Sync with Steelix CVS
@
text
@d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.4"
d326 2
a327 2
Originally [OpenBSD: pools.html,v 1.22 ]<br>
$Translation: pools.html,v 1.21 2008/11/01 09:15:07 paldium Exp $<br>
@


1.20
log
@Sync with Steelix CVS
@
text
@d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.3"
d326 2
a327 2
Originally [OpenBSD: pools.html,v 1.21 ]<br>
$Translation: pools.html,v 1.20 2008/08/04 14:41:05 paldium Exp $<br>
@


1.19
log
@Sync with Steelix CVS
@
text
@d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.2"
d326 2
a327 2
Originally [OpenBSD: pools.html,v 1.20 ]<br>
$Translation: pools.html,v 1.19 2008/03/04 23:03:18 paldium Exp $<br>
@


1.18
log
@Sync with Steelix CVS
@
text
@d264 1
a264 1
Verkehr ausübt, kann so ähnlich wiefolgt aussehen:
d327 1
a327 1
$Translation: pools.html,v 1.18 2007/11/03 10:45:43 paldium Exp $<br>
@


1.17
log
@Sync with steelix translation CVS
@
text
@d65 1
a65 1
derren Verwendung unter einer Gruppe an Benutzern geteilt wird.
d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.1"
d127 1
a127 1
dem NAT-Gateway erlauben, eine noch größere Anzahl von Anwendern
d326 2
a327 2
Originally [OpenBSD: pools.html,v 1.19 ]<br>
$Translation: pools.html,v 1.16 2007/05/08 22:02:01 simon Exp $<br>
@


1.16
log
@Sync with steelix translation CVS
@
text
@d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.0"
d326 2
a327 2
Originally [OpenBSD: pools.html,v 1.18 ]<br>
$Translation: pools.html,v 1.15 2007/04/25 15:41:14 paldium Exp $<br>
@


1.15
log
@sync with steelix translation CVS
@
text
@d247 1
a247 1
&nbsp;&nbsp;&nbsp;to any 
d308 2
a309 2
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2 to any 
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1 to any 
d327 1
a327 1
$Translation: pools.html,v 1.14 2006/11/01 10:48:51 paldium Exp $<br>
d333 1
a333 1
</html> 
@


1.14
log
@3.9 release time.
@
text
@d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.9"
d326 2
a327 2
Originally [OpenBSD: pools.html,v 1.17 ]<br>
$Translation: pools.html,v 1.13 2006/05/01 11:17:11 paldium Exp $<br>
@


1.13
log
@sync with Steelix CVS
@
text
@d93 1
a93 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.8"
d326 2
a327 2
Originally [OpenBSD: pools.html,v 1.16 ]<br>
$Translation: pools.html,v 1.12 2006/04/24 17:44:30 paldium Exp $<br>
@


1.12
log
@sync with steelix translation CVS
@
text
@a5 1
<meta http-equiv="Content-Language" content="de">
d8 1
a8 1
<meta name="description"   content="Die OpenBSD-FAQ-Seite">
d326 2
a327 2
Originally [OpenBSD: pools.html,v 1.16 ]
$Translation: pools.html,v 1.11 2006/01/10 12:18:04 paldium Exp $
@


1.11
log
@sync with steelix translation CVS
@
text
@d115 1
a115 1
dass eine bestimmte Source-Adresse jedesmals zur gleichen
d307 1
a307 1
#  leite Pakete von jeder IP vom $ext_if1 zum $ext_gw1 und das gleiche
d328 1
a328 1
$Translation: pools.html,v 1.10 2005/11/04 11:01:45 paldium Exp $
@


1.10
log
@sync with Steelix CVS
@
text
@d94 1
a94 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.7"
d327 2
a328 2
Originally [OpenBSD: pools.html,v 1.15 ]
$Translation: pools.html,v 1.9 2005/09/14 16:16:39 paldium Exp $
@


1.9
log
@sync with Steelix CVS
@
text
@d6 1
a8 1
<meta http-equiv="Content-Language" content="de">
d328 1
a328 1
$Translation: pools.html,v 1.8 2005/08/15 16:04:05 paldium Exp $
@


1.8
log
@sync with steelix translation CVS
@
text
@d322 1
a322 1
<a href="index.html"><img height="24" width="24" src="../../images/back.gif" border="0" alt="[zurück]"></a>
d328 1
a328 1
$Translation: pools.html,v 1.7 2005/05/20 16:33:52 paldium Exp $
@


1.7
log
@sync with steelxi translation CVS
@
text
@d94 1
a94 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.6"
d327 2
a328 2
Originally [OpenBSD: pools.html,v 1.14 ]
$Translation: pools.html,v 1.6 2005/04/25 18:16:47 paldium Exp $
@


1.6
log
@huge sync from the translators
@
text
@@


1.5
log
@Sync with Steelix CVS
@
text
@d128 1
a128 1
dem NAT-Gateway erlauben, eine noch größere Anzahl an Anwendern
d328 1
a328 1
$Translation: pools.html,v 1.5 2005/01/18 14:33:46 paldium Exp $
@


1.4
log
@Sync with Steelix CVS
@
text
@d9 1
a9 1
<meta name="description"   content="die OpenBSD-FAQ-Seite">
d326 5
a330 3
Originally [OpenBSD: pools.html,v 1.14 ]<br>
$Translation: pools.html,v 1.4 2004/12/22 12:29:54 paldium Exp $<br>
$OpenBSD: pools.html,v 1.14 2004/12/22 04:28:16 david Exp $
@


1.3
log
@sync with Steelix CVS
@
text
@d35 3
a37 1
<img alt="[OpenBSD]" height=30 width=141 src="../../../images/smalltitle.gif">
d326 3
a328 3
Originally [OpenBSD: pools.html,v 1.13 ]<br>
$Translation: pools.html,v 1.3 2004/12/07 16:56:32 paldium Exp $<br>
$OpenBSD: pools.html,v 1.13 2004/10/29 17:22:57 nick Exp $
@


1.2
log
@Sync with Steelix CVS, all work by Tobias Stoeckmann
@
text
@d9 1
a9 1
<meta name="description"   content="Die OpenBSD-FAQ-Seite">
d320 1
a320 1
<a href="index.html"><img height="24" width="24" src="../../images/back.gif" border="0" alt="[back]"></a> 
d325 1
a325 1
$Translation: pools.html,v 1.2 2004/12/03 15:58:35 paldium Exp $<br>
@


1.1
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>PF: Address Pools and Load Balancing</title>
d8 2
a9 1
<meta name="description"   content="the OpenBSD FAQ page">
a11 1
<meta name="copyright"     content="This document copyright 2003 by OpenBSD.">
d14 17
d37 3
a39 3
[<a href="shortcuts.html">Previous: Shortcuts For Creating Rulesets</a>]
[<a href="index.html">Contents</a>]
[<a href="perf.html">Next: Performance</a>]
d43 1
a43 1
<font color="#e00000">PF: Address Pools and Load Balancing</font>
d48 1
a48 1
<h3>Table of Contents</h3>
d50 4
a53 4
<li><a href="#intro">Introduction</a>
<li><a href="#nat">NAT Address Pool</a>
<li><a href="#incoming">Load Balancing Incoming Connections</a>
<li><a href="#outgoing">Load Balancing Outgoing Traffic</a>
d55 1
a55 1
	<li><a href="#outexample">Ruleset Example</a>
d62 9
a70 7
<h2>Introduction</h2>
An address pool is a supply of two or more addresses whose use is shared
among a group of users. An address pool can be specified as the
redirection address in <a href="rdr.html"><tt>rdr</tt></a> rules, as the
translation address in <a href="nat.html"><tt>nat</tt></a> rules, and as
the target address in <tt>route-to</tt>, <tt>reply-to</tt>, and
<tt>dup-to</tt> <a href="filter.html">filter</a> options.
d73 1
a73 1
There are four methods for using an address pool:
d75 24
a98 19
<li><tt>bitmask</tt> - grafts the network portion of the pool
address over top of the address that is being modified (source address
for <tt>nat</tt> rules, destination address for <tt>rdr</tt> rules).
Example: if the address pool is 192.0.2.1/24 and the address being 
modified is 10.0.0.50, then the resulting address will be 192.0.2.50. If
the address pool is 192.0.2.1/25 and the address being modified is
10.0.0.130, then the resulting address will be 192.0.2.2. 
<li><tt>random</tt> - randomly selects an address from the pool.
<li><tt>source-hash</tt> - uses a hash of the source address to
determine which address to use from the pool. This method ensures that a
given source address is always mapped to the same pool address.
The key that is fed to the hashing algorithm can optionally be specified
after the <tt>source-hash</tt> keyword in hex format or as a string. By
default,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.4"
>pfctl(8)</a> will generate a random key every time the ruleset is
loaded. 
<li><tt>round-robin</tt> - loops through the address pool in
sequence. This is the default method.
d102 7
a108 6
Except for the <tt>round-robin</tt> method, the address pool must be
expressed as a 
<a href="http://public.pacbell.net/dedicated/cidr.html">CIDR</a>
(Classless Inter-Domain Routing) network block. The <tt>round-robin</tt>
method will accept multiple individual addresses using
<a href="macros.html#lists">list format</a>.
d111 4
a114 3
In addition, the <tt>static-port</tt> keyword can be specified after
one of the above methods to prevent <tt>nat</tt> rules from
modifying the source port of TCP and UDP packets.
d117 17
a133 13
<h2>NAT Address Pool</h2>
An address pool can be used as the translation address in 
<a href="nat.html"><tt>nat</tt></a> rules. Connections will have their
source address translated to an address from the pool based on the
method chosen. This can be useful in situations where PF is performing
NAT for a very large network. Since the number of NATed connections per
translation address is limited, adding additional translation addresses
will allow the NAT gateway to scale to serve a larger number of users.

<p>
In this example a pool of two addresses is being used to translate
outgoing packets. For each outgoing connection PF will rotate through
the addresses in a round-robin manner.
d141 10
a150 9
One drawback with this method is that successive connections from the
same internal address will not always be translated to the same
translation address.  This can cause interference, for example, when
browsing websites that track user logins based on IP address. An
alternate approach is to use the <tt>source-hash</tt> method so that
each internal address is always translated to the same translation
address. To do this, the address pool must be a
<a href="http://public.pacbell.net/dedicated/cidr.html">CIDR</a>
network block.
d158 5
a162 4
This <tt>nat</tt> rule uses the address pool 192.0.2.4/31 (192.0.2.4 -
192.0.2.5) as the translation address for outgoing packets. Each
internal address will always be translated to the same translation
address because of the <tt>source-hash</tt> keyword.
d165 4
a168 4
<h2>Load Balance Incoming Connections</h2>
Address pools can also be used to load balance incoming connections. For
example, incoming web server connections can be distributed across a web
server farm:
d173 2
a174 1
rdr on $ext_if proto tcp from any to any port 80 -&gt; $web_servers
d179 9
a187 9
Successive connections will be redirected to the web servers in a
round-robin manner. 

<p>
As with the NAT example, if the web servers are all placed within a CIDR
network block, the <tt>source-hash</tt> keyword can be used so that
connections from a given IP address are always redirected to the same
physical web server. Again, this is sometimes necessary to maintain
session information while browsing a website.
d190 16
a205 14
<h2>Load Balance Outgoing Traffic</h2>
Address pools can be used in combination with the <tt>route-to</tt>
filter option to load balance two or more Internet connections when a
proper multi-path routing protocol (like 
<a href="http://www.rfc-editor.org/rfc/rfc1771.txt">BGP4</a>) is
unavailable. By using <tt>route-to</tt> with a <tt>round-robin</tt>
address pool, outbound connections can be evenly distributed among
multiple outbound paths. 

<p>
One additional piece of information that's needed to do this is the IP
address of the adjacent router on each Internet connection. This is fed
to the <tt>route-to</tt> option to control the destination of outgoing
packets.
d208 2
a209 2
The following example balances outgoing traffic across two Internet
connections:
d226 9
a234 8
The <tt>route-to</tt> option is used on traffic coming <i>in</i> on the
<i>internal</i> interface to specify the outgoing network interfaces
that traffic will be balanced across along with their respective
gateways. Note that the <tt>route-to</tt> option must be present on
<i>each</i> filter rule that traffic is to be balanced for.  Return
packets will be routed back to the same external interface that they
exited (this is done by the ISPs) and will be routed back to the
internal network normally.
d237 4
a240 4
To ensure that packets with a source address belonging to
<tt>$ext_if1</tt> are always routed to <tt>$ext_gw1</tt> (and similarly
for <tt>$ext_if2</tt> and <tt>$ext_gw2</tt>), the following two lines
should be included in the ruleset:
d251 2
a252 1
Finally, NAT can also be used on each outgoing interface:
d262 2
a263 2
A complete example that load balances outgoing traffic might look
something like this:
d276 1
a276 1
#  nat outgoing connections on each internet interface
d280 1
a280 1
#  default deny
d284 1
a284 1
#  pass all outgoing packets on internal interface
d286 2
a287 1
#  pass in quick any packets destined for the gateway itself
d289 1
a289 1
#  load balance outgoing tcp traffic from internal network. 
d293 2
a294 1
#  load balance outgoing udp and icmp traffic from internal network
d299 1
a299 1
#  general "pass out" rules for external interfaces
d305 2
a306 2
#  route packets from any IPs on $ext_if1 to $ext_gw1 and the same for
#  $ext_if2 and $ext_gw2
d314 3
a316 3
[<a href="shortcuts.html">Previous: Shortcuts For Creating Rulesets</a>]
[<a href="index.html">Contents</a>]
[<a href="perf.html">Next: Performance</a>]
d320 1
a320 1
<a href="../../de/index.html"><img height="24" width="24" src="../../../images/back.gif" border="0" alt="[back]"></a> 
d324 3
a326 3
Originally [OpenBSD: pools.html,v 1.7 ]<br>
$Translation: pools.html,v 1.1 2003/11/27 17:34:57 sl Exp $<br>
$OpenBSD$
@

