head	1.57;
access;
symbols;
locks; strict;
comment	@# @;


1.57
date	2017.06.26.17.18.58;	author tb;	state Exp;
branches;
next	1.56;
commitid	jKVBuSx5No9bUpg1;

1.56
date	2016.09.19.23.44.47;	author tj;	state Exp;
branches;
next	1.55;
commitid	P53AgOpLKrOmgs5r;

1.55
date	2016.08.15.02.22.14;	author tb;	state Exp;
branches;
next	1.54;
commitid	3DeixV5YkPOb78RN;

1.54
date	2016.06.13.17.58.25;	author tj;	state Exp;
branches;
next	1.53;
commitid	Grx2UyJPWzJbbhkP;

1.53
date	2016.04.18.19.07.50;	author tj;	state Exp;
branches;
next	1.52;
commitid	g0cUF3jNn5Tz4oaZ;

1.52
date	2016.04.16.00.30.41;	author tj;	state Exp;
branches;
next	1.51;
commitid	rTxoenHHaeutOff1;

1.51
date	2016.04.15.20.39.49;	author tb;	state Exp;
branches;
next	1.50;
commitid	jwteSMEb4rFzI8UA;

1.50
date	2016.03.29.01.27.39;	author tb;	state Exp;
branches;
next	1.49;
commitid	4Y8oU6GBrSY1UOfW;

1.49
date	2016.03.27.19.52.09;	author sthen;	state Exp;
branches;
next	1.48;
commitid	hi2ObFv9LGB98JY5;

1.48
date	2016.03.22.10.56.56;	author sthen;	state Exp;
branches;
next	1.47;
commitid	G2izHhNJ7aqR0Y6j;

1.47
date	2016.03.21.05.46.21;	author beck;	state Exp;
branches;
next	1.46;
commitid	zEx6zFkNSFFExu0v;

1.46
date	2016.01.24.21.40.35;	author tj;	state Exp;
branches;
next	1.45;
commitid	bFaFSpgHCeTHjIC5;

1.45
date	2015.10.18.19.48.19;	author nick;	state Exp;
branches;
next	1.44;
commitid	gkrFWKimwWNVivXe;

1.44
date	2015.07.02.05.49.05;	author bentley;	state Exp;
branches;
next	1.43;
commitid	AP3UllesavMDEUhQ;

1.43
date	2015.05.11.11.18.30;	author sthen;	state Exp;
branches;
next	1.42;
commitid	wRrXxcro6dFYiwF8;

1.42
date	2015.04.30.23.48.01;	author nick;	state Exp;
branches;
next	1.41;
commitid	uFWv68UTtTmjkqVF;

1.41
date	2014.12.02.03.17.26;	author nick;	state Exp;
branches;
next	1.40;
commitid	RQ0cKiFD5x45dGyo;

1.40
date	2014.12.01.10.01.07;	author bentley;	state Exp;
branches;
next	1.39;
commitid	DtrOVs7q8kqgEsjm;

1.39
date	2014.07.30.21.57.19;	author sthen;	state Exp;
branches;
next	1.38;
commitid	632wqensvvuAHAOA;

1.38
date	2014.06.24.13.42.23;	author sthen;	state Exp;
branches;
next	1.37;
commitid	lNk1kOIOTb9J7iWf;

1.37
date	2014.05.01.15.03.50;	author nick;	state Exp;
branches;
next	1.36;

1.36
date	2014.03.31.02.33.07;	author nick;	state Exp;
branches;
next	1.35;

1.35
date	2013.11.01.14.07.06;	author nick;	state Exp;
branches;
next	1.34;

1.34
date	2013.05.01.13.21.45;	author nick;	state Exp;
branches;
next	1.33;

1.33
date	2013.02.18.16.09.29;	author nick;	state Exp;
branches;
next	1.32;

1.32
date	2012.11.01.15.06.36;	author nick;	state Exp;
branches;
next	1.31;

1.31
date	2012.05.11.11.20.04;	author nick;	state Exp;
branches;
next	1.30;

1.30
date	2011.11.02.01.01.47;	author nick;	state Exp;
branches;
next	1.29;

1.29
date	2011.09.07.03.48.51;	author nick;	state Exp;
branches;
next	1.28;

1.28
date	2011.05.01.12.57.11;	author nick;	state Exp;
branches;
next	1.27;

1.27
date	2010.11.01.09.53.51;	author nick;	state Exp;
branches;
next	1.26;

1.26
date	2010.05.19.13.25.16;	author sthen;	state Exp;
branches;
next	1.25;

1.25
date	2009.12.15.00.56.01;	author sthen;	state Exp;
branches;
next	1.24;

1.24
date	2009.10.16.19.12.42;	author nick;	state Exp;
branches;
next	1.23;

1.23
date	2009.04.30.17.27.31;	author nick;	state Exp;
branches;
next	1.22;

1.22
date	2008.10.31.16.49.34;	author nick;	state Exp;
branches;
next	1.21;

1.21
date	2008.07.27.17.13.47;	author nick;	state Exp;
branches;
next	1.20;

1.20
date	2007.11.01.02.57.56;	author joel;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.06.18.59.54;	author nick;	state Exp;
branches;
next	1.18;

1.18
date	2006.11.01.01.56.01;	author joel;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.01.00.54.29;	author nick;	state Exp;
branches;
next	1.16;

1.16
date	2005.11.01.11.35.18;	author nick;	state Exp;
branches;
next	1.15;

1.15
date	2005.05.20.00.12.02;	author joel;	state Exp;
branches;
next	1.14;

1.14
date	2004.12.22.04.28.16;	author david;	state Exp;
branches;
next	1.13;

1.13
date	2004.10.29.17.22.57;	author nick;	state Exp;
branches;
next	1.12;

1.12
date	2004.05.07.01.55.24;	author nick;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.30.18.00.25;	author nick;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.01.04.16.17;	author nick;	state Exp;
branches;
next	1.9;

1.9
date	2003.11.30.23.18.06;	author nick;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.27.15.08.25;	author nick;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.09.23.29.02;	author nick;	state Exp;
branches;
next	1.6;

1.6
date	2003.09.16.01.23.49;	author nick;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.13.02.54.08;	author nick;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.15.03.03.54;	author nick;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.13.17.37.09;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.01.14.20.37;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.01.01.46.06;	author nick;	state Exp;
branches;
next	;


desc
@@


1.57
log
@move man.openbsd.org links from http:// to https://
reduces the number of http:// links in www/ from >33k to <7k

thanks to schwarze for doing the work
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

<!-- If you make edits to any FAQ documents, please start each sentence
     on a new line, and try to keep the general formatting consistent
     with the rest of the pages -->

<title>OpenBSD PF: Address Pools and Load Balancing</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="../../openbsd.css">
<link rel="canonical" href="https://www.openbsd.org/faq/pf/pools.html">
</head>

<!--
Copyright (c) 2003, 2004 Joel Knight <enabled@@myrealbox.com>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor="#ffffff" text="#000000">

<h2>
<a href="../../index.html">
<font color="#0000ff"><i>Open</i></font><font color="#000084">BSD</font></a>
<font color="#e00000">PF - Address Pools and Load Balancing</font>
<small>
<a href="index.html" style="font-weight:normal; float:right">[Contents]</a>
</small>
</h2>
<hr>

<ul>
  <li><a href="#intro"          >Introduction</a>
  <li><a href="#nat"            >NAT address pool</a>
  <li><a href="#incoming"       >Load balancing incoming connections</a>
  <li><a href="#outgoing"       >Load balancing outgoing traffic</a>
    <ul>
      <li><a href="#outexample" >Ruleset example</a>
    </ul>
</ul>
<hr>

<h2 id="intro">Introduction</h2>

An address pool is a supply of two or more addresses whose use is shared
among a group of users.
It can be specified as the target address in <tt>nat-to</tt>,
<tt>rdr-to</tt>,<tt>route-to</tt>, <tt>reply-to</tt> and <tt>dup-to</tt>
<a href="filter.html">filter</a> options.

<p>
There are four methods for using an address pool:

<ul>
  <li><tt>bitmask</tt> - grafts the network portion of the pool address over
      top of the address that is being modified (source address for
      <tt>nat-to</tt> rules, destination address for <tt>rdr-to</tt> rules).
      Example: if the address pool is 192.0.2.1/24 and the address being
      modified is 10.0.0.50, then the resulting address will be 192.0.2.50.
      If the address pool is 192.0.2.1/25 and the address being modified is
      10.0.0.130, then the resulting address will be 192.0.2.2.
  <li><tt>random</tt> - randomly selects an address from the pool.
  <li><tt>source-hash</tt> - uses a hash of the source address to
      determine which address to use from the pool.
      This method ensures that a given source address is always mapped to
      the same pool address.
      The key that is fed to the hashing algorithm can optionally be specified
      after the <tt>source-hash</tt> keyword in hex format or as a string.
      By default, <a href="https://man.openbsd.org/pfctl">pfctl(8)</a> will
      generate a random key every time the ruleset is loaded.
  <li><tt>round-robin</tt> - loops through the address pool in sequence.
      This is the default method and also the only method allowed when the
      address pool is specified using a <a href="tables.html">table</a>.
</ul>

<p>
Except for the <tt>round-robin</tt> method, the address pool must be expressed
as a
<a href="https://web.archive.org/web/20150213012421/http://public.swbell.net/dedicated/cidr.html">CIDR</a>
(Classless Inter-Domain Routing) network block.
The <tt>round-robin</tt> method will accept multiple individual addresses
using a <a href="macros.html#lists">list</a> or <a href="tables.html">table</a>.

<p>
The <tt>sticky-address</tt> option can be used with the <tt>random</tt>
and <tt>round-robin</tt> pool types to ensure that a particular source
address is always mapped to the same redirection address.

<h2 id="nat">NAT address pool</h2>

An address pool can be used as the translation address in
<a href="nat.html"><tt>nat-to</tt></a> rules.
Connections will have their source address translated to an address from the
pool based on the method chosen.
This can be useful in situations where PF is performing NAT for a very large
network.
Since the number of NATed connections per translation address is limited,
adding additional translation addresses will allow the NAT gateway to scale
to serve a larger number of users.

<p>
In this example, a pool of two addresses is being used to translate
outgoing packets.
For each outgoing connection, PF will rotate through the addresses in a
round-robin manner.

<blockquote><pre>
match out on egress inet nat-to { 192.0.2.5, 192.0.2.10 }
</pre></blockquote>

One drawback with this method is that successive connections from the
same internal address will not always be translated to the same
translation address.
This can cause interference, for example, when browsing websites that track
user logins based on IP address.
An alternate approach is to use the <tt>source-hash</tt> method so that
each internal address is always translated to the same translation address.
To do this, the address pool must be a
<a href="https://web.archive.org/web/20150213012421/http://public.swbell.net/dedicated/cidr.html">CIDR</a>
network block.

<blockquote><pre>
match out on egress inet nat-to 192.0.2.4/31 source-hash
</pre></blockquote>

This rule uses the address pool 192.0.2.4/31 (192.0.2.4 - 192.0.2.5) as the
translation address for outgoing packets.
Each internal address will always be translated to the same translation address
because of the <tt>source-hash</tt> keyword.

<h2 id="incoming">Load balance incoming connections</h2>

Address pools can also be used to load balance incoming connections.
For example, incoming web server connections can be distributed across a web
server farm:

<blockquote><pre>
web_servers = "{ 10.0.0.10, 10.0.0.11, 10.0.0.13 }"

match in on egress proto tcp to port 80 rdr-to $web_servers \
    round-robin sticky-address
</pre></blockquote>

Successive connections will be redirected to the web servers in a
round-robin manner with connections from the same source being sent to
the same web server.
This "sticky connection" will exist as long as there are states that
refer to this connection.
Once the states expire, so will the sticky connection.
Further connections from that host will be redirected to the next web
server in the round robin.

<h2 id="outgoing">Load balance outgoing traffic</h2>

Address pools can be used in combination with the <tt>route-to</tt>
filter option to load balance two or more Internet connections when a
proper multi-path routing protocol (like
<a href="http://www.rfc-editor.org/rfc/rfc1771.txt">BGP4</a>) is
unavailable.
By using <tt>route-to</tt> with a <tt>round-robin</tt> address pool,
outbound connections can be evenly distributed among multiple outbound paths.

<p>
One additional piece of information that's needed to do this is the IP
address of the adjacent router on each Internet connection.
This is fed to the <tt>route-to</tt> option to control the destination of
outgoing packets.

<p>
The following example balances outgoing traffic across two Internet
connections:

<blockquote><pre>
lan_net = "192.168.0.0/24"
int_if  = "dc0"
ext_if1 = "fxp0"
ext_if2 = "fxp1"
ext_gw1 = "198.51.100.100"
ext_gw2 = "203.0.113.200"

pass in on $int_if from $lan_net route-to \
   { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin
</pre></blockquote>

The <tt>route-to</tt> option is used on traffic coming <i>in</i> on the
<i>internal</i> interface to specify the outgoing network interfaces
that traffic will be balanced across along with their respective gateways.
Note that the <tt>route-to</tt> option must be present on <i>each</i> filter
rule that traffic is to be balanced for (it cannot be used with <tt>match</tt>
rules).

<p>
To ensure that packets with a source address belonging to
<tt>$ext_if1</tt> are always routed to <tt>$ext_gw1</tt> (and similarly
for <tt>$ext_if2</tt> and <tt>$ext_gw2</tt>), the following two lines
should be included in the ruleset:

<blockquote><pre>
pass out on $ext_if1 from $ext_if2 route-to ($ext_if2 $ext_gw2)
pass out on $ext_if2 from $ext_if1 route-to ($ext_if1 $ext_gw1)
</pre></blockquote>

Finally, NAT can also be used on each outgoing interface:

<blockquote><pre>
match out on $ext_if1 from $lan_net nat-to ($ext_if1)
match out on $ext_if2 from $lan_net nat-to ($ext_if2)
</pre></blockquote>

<p id="outexample">
A complete example that load balances outgoing traffic might look
something like this:

<blockquote><pre>
lan_net = "192.168.0.0/24"
int_if  = "dc0"
ext_if1 = "fxp0"
ext_if2 = "fxp1"
ext_gw1 = "198.51.100.100"
ext_gw2 = "203.0.113.200"

#  nat outgoing connections on each internet interface
match out on $ext_if1 from $lan_net nat-to ($ext_if1)
match out on $ext_if2 from $lan_net nat-to ($ext_if2)

#  default deny
block in
block out

#  pass all outgoing packets on internal interface
pass out on $int_if to $lan_net
#  pass in quick any packets destined for the gateway itself
pass in quick on $int_if from $lan_net to $int_if
#  load balance outgoing traffic from internal network.
pass in on $int_if from $lan_net \
    route-to { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } \
    round-robin
#  keep https traffic on a single connection; some web applications,
#  especially "secure" ones, don't allow it to change mid-session
pass in on $int_if proto tcp from $lan_net to port https \
    route-to ($ext_if1 $ext_gw1)

#  general "pass out" rules for external interfaces
pass out on $ext_if1
pass out on $ext_if2

#  route packets from any IPs on $ext_if1 to $ext_gw1 and the same for
#  $ext_if2 and $ext_gw2
pass out on $ext_if1 from $ext_if2 route-to ($ext_if2 $ext_gw2)
pass out on $ext_if2 from $ext_if1 route-to ($ext_if1 $ext_gw1)
</pre></blockquote>

<p>
</body>
</html>
@


1.56
log
@less "$ext_if" and more egress to simplify example rulesets.
zap some stray <p> tags while here.
@
text
@d82 1
a82 1
      By default, <a href="http://man.openbsd.org/pfctl">pfctl(8)</a> will
@


1.55
log
@tls on openbsd.org is now real:
- link to https://www.openbsd.org from the sub-projects' pages
- make internal links relative
- switch link rel=canonical to https to please some search engines
"go ahead" from beck, "do it!!!!" tj
@
text
@d121 1
a121 1
match out on $ext_if inet nat-to { 192.0.2.5, 192.0.2.10 }
d136 1
a136 1
match out on $ext_if inet nat-to 192.0.2.4/31 source-hash
d153 1
a153 1
match in on $ext_if proto tcp to port 80 rdr-to $web_servers \
@


1.54
log
@sync pf guide formatting with the main faq's style, fixing a few grammar
knits and broken links along the way.

input and ok tb
@
text
@d13 1
a13 1
<link rel="canonical" href="http://www.openbsd.org/faq/pf/pools.html">
@


1.53
log
@page titles and <title> should be the same.
@
text
@d4 5
a10 1
<meta name="description"   content="the OpenBSD FAQ page">
d46 7
a52 7
<li><a href="#intro"             >Introduction</a>
<li><a href="#nat"               >NAT Address Pool</a>
<li><a href="#incoming"          >Load Balancing Incoming Connections</a>
<li><a href="#outgoing"          >Load Balancing Outgoing Traffic</a>
	<ul>
	<li><a href="#outexample">Ruleset Example</a>
	</ul>
a53 1

d57 1
d59 4
a62 4
among a group of users. An address pool can be specified as the
target address in <tt>nat-to</tt>, <tt>rdr-to</tt>,<tt>route-to</tt>,
<tt>reply-to</tt>, and <tt>dup-to</tt> <a href="filter.html">filter</a>
options.
d66 1
d68 19
a86 21
<li><tt>bitmask</tt> - grafts the network portion of the pool
address over top of the address that is being modified (source address
for <tt>nat-to</tt> rules, destination address for <tt>rdr-to</tt> rules).
Example: if the address pool is 192.0.2.1/24 and the address being
modified is 10.0.0.50, then the resulting address will be 192.0.2.50. If
the address pool is 192.0.2.1/25 and the address being modified is
10.0.0.130, then the resulting address will be 192.0.2.2.
<li><tt>random</tt> - randomly selects an address from the pool.
<li><tt>source-hash</tt> - uses a hash of the source address to
determine which address to use from the pool. This method ensures that a
given source address is always mapped to the same pool address.
The key that is fed to the hashing algorithm can optionally be specified
after the <tt>source-hash</tt> keyword in hex format or as a string. By
default,
<a href="http://man.openbsd.org/pfctl.8"
>pfctl(8)</a> will generate a random key every time the ruleset is
loaded.
<li><tt>round-robin</tt> - loops through the address pool in
sequence. This is the default method and also the only method allowed
when the address pool is specified using a
<a href="tables.html">table</a>.
d90 6
a95 6
Except for the <tt>round-robin</tt> method, the address pool must be
expressed as a
<a href="http://public.swbell.net/dedicated/cidr.html">CIDR</a>
(Classless Inter-Domain Routing) network block. The <tt>round-robin</tt>
method will accept multiple individual addresses using a
<a href="macros.html#lists">list</a> or <a href="tables.html">table</a>.
d102 2
a103 1
<h2 id="nat">NAT Address Pool</h2>
d105 14
a118 6
<a href="nat.html"><tt>nat-to</tt></a> rules. Connections will have their
source address translated to an address from the pool based on the
method chosen. This can be useful in situations where PF is performing
NAT for a very large network. Since the number of NATed connections per
translation address is limited, adding additional translation addresses
will allow the NAT gateway to scale to serve a larger number of users.
d120 1
a120 6
<p>
In this example a pool of two addresses is being used to translate
outgoing packets. For each outgoing connection PF will rotate through
the addresses in a round-robin manner.
<blockquote>
<tt>
d122 1
a122 2
</tt>
</blockquote>
a123 1
<p>
d126 7
a132 6
translation address.  This can cause interference, for example, when
browsing websites that track user logins based on IP address. An
alternate approach is to use the <tt>source-hash</tt> method so that
each internal address is always translated to the same translation
address. To do this, the address pool must be a
<a href="http://public.swbell.net/dedicated/cidr.html">CIDR</a>
d134 2
a135 2
<blockquote>
<tt>
d137 8
a144 2
</tt>
</blockquote>
d146 2
a147 9
<p>
This rule uses the address pool 192.0.2.4/31 (192.0.2.4 -
192.0.2.5) as the translation address for outgoing packets. Each
internal address will always be translated to the same translation
address because of the <tt>source-hash</tt> keyword.

<h2 id="incoming">Load Balance Incoming Connections</h2>
Address pools can also be used to load balance incoming connections. For
example, incoming web server connections can be distributed across a web
a148 8
<blockquote>
<tt>
web_servers = "{ 10.0.0.10, 10.0.0.11, 10.0.0.13 }"<br>
<br>
match in on $ext_if proto tcp to port 80 rdr-to $web_servers \<br>
&nbsp;&nbsp;&nbsp;&nbsp;round-robin sticky-address
</tt>
</blockquote>
d150 7
a156 1
<p>
d166 2
a167 1
<h2 id="outgoing">Load Balance Outgoing Traffic</h2>
d172 3
a174 3
unavailable. By using <tt>route-to</tt> with a <tt>round-robin</tt>
address pool, outbound connections can be evenly distributed among
multiple outbound paths.
d178 3
a180 3
address of the adjacent router on each Internet connection. This is fed
to the <tt>route-to</tt> option to control the destination of outgoing
packets.
a184 14
<blockquote>
<tt>
lan_net = "192.168.0.0/24"<br>
int_if &nbsp;= "dc0"<br>
ext_if1 = "fxp0"<br>
ext_if2 = "fxp1"<br>
ext_gw1 = "198.51.100.100"<br>
ext_gw2 = "203.0.113.200"<br>
<br>
pass in on $int_if from $lan_net \<br>
&nbsp;&nbsp;&nbsp;route-to { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) }\<br>
&nbsp;&nbsp;&nbsp;round-robin
</tt>
</blockquote>
d186 12
a197 1
<p>
d200 4
a203 5
that traffic will be balanced across along with their respective
gateways.
Note that the <tt>route-to</tt> option must be present on
<i>each</i> filter rule that traffic is to be balanced for
(it cannot be used with <tt>match</tt> rules).
a209 8
<blockquote>
<tt>
pass out on $ext_if1 from $ext_if2 \<br>
&nbsp;&nbsp;&nbsp;route-to ($ext_if2 $ext_gw2)<br>
pass out on $ext_if2 from $ext_if1 \<br>
&nbsp;&nbsp;&nbsp;route-to ($ext_if1 $ext_gw1)
</tt>
</blockquote>
d211 5
a215 1
<p>
d217 3
a219 3
<blockquote>
<tt>
match out on $ext_if1 from $lan_net nat-to ($ext_if1)<br>
d221 1
a221 2
</tt>
</blockquote>
@


1.52
log
@tweak [faq index] button and sync the pf user's guide with that style.
@
text
@d4 1
a4 1
<title>PF - Address Pools and Load Balancing</title>
@


1.51
log
@use short form man links in the faq and fix a few broken links
@
text
@a29 2
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->
d35 3
a39 6
<p>
<!-- [<a href="queueing.html">Previous: Packet Queueing and Prioritization</a>] -->
[<a href="index.html">Contents</a>]
[<a href="anchors.html">Previous: Anchors</a>]
[<a href="tagging.html">Next: Packet Tagging</a>]
<p>
a40 1
<h3>Table of Contents</h3>
d42 4
a45 4
<li><a href="#intro">Introduction</a>
<li><a href="#nat">NAT Address Pool</a>
<li><a href="#incoming">Load Balancing Incoming Connections</a>
<li><a href="#outgoing">Load Balancing Outgoing Traffic</a>
a269 5

<p>
[<a href="anchors.html">Previous: Anchors</a>]
[<a href="index.html">Contents</a>]
[<a href="tagging.html">Next: Packet Tagging</a>]
@


1.50
log
@new openbsd faq style. joint with tj and validator.w3.org
@
text
@d83 1
a83 1
<a href="http://man.openbsd.org/?query=pfctl&amp;sektion=8"
@


1.49
log
@add a small sprinkling of css to improve readability in the faq, ok tj@@ tb@@
@
text
@d4 1
a4 1
<title>PF: Address Pools and Load Balancing</title>
d33 1
d35 4
a38 2
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif" border="0">
</a>
d41 1
a42 1
[<a href="index.html">Contents</a>]
a43 1

a44 5
<h1>
<font color="#e00000">PF: Address Pools and Load Balancing</font>
</h1>

<hr>
@


1.48
log
@fix URIs, the / before querystring is not optional,
if not fixed up by browsers the server returns 400 Bad Request.
@
text
@d7 2
@


1.47
log
@change http://www.openbsd.org/cgi-bin/man.cgi to be http://man.openbsd.org
this points stuff to the new place and gets us ready to deprecate the old
place we did this.
@
text
@d84 1
a84 1
<a href="http://man.openbsd.org?query=pfctl&amp;sektion=8"
@


1.46
log
@replace a disorganized assortment of tables and hand-rolled command output
with more standard formatting. while here, run a few less of those commands
as root where it's not needed. the cvs checkout examples were adopted to
use the wsrc group as is done in the ports faq.

input/ok tb
@
text
@d84 1
a84 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8"
@


1.45
log
@
rev for 5.8, mostly removing manpath part of man page urls
@
text
@d239 1
a239 4
<p>
<table border=0 width="650">
<tr><td nowrap bgcolor="#EEEEEE">
<pre>
d276 1
a276 3
</pre>
</td></tr>
</table>
@


1.44
log
@Clean up meta tags.

name=distribution, name=keywords, and name=resource-type have no effect
in modern search engines and just clutter up the page source.

From Pavel Plamenov.
@
text
@d84 1
a84 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.7"
@


1.43
log
@Add 'link rel="canonical"' to pages, acting as a hint to search engines
to list the copies on www.openbsd.org rather than mirrors.

From Carlin Bingham, ok millert@@ nick@@
@
text
@a5 1
<meta name="resource-type" content="document">
a6 2
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
@


1.42
log
@
updates for 5.7
@
text
@d10 1
@


1.41
log
@
5.5->5.6 which I forgot and Jonathan Thornburg (jthorn at astro dot
indiana dot edu) reminded me of, but also sent a diff for, thanks!
@
text
@d86 1
a86 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.6"
@


1.40
log
@Convert the pf faq to use id="" instead of "a name=""></a>.
@
text
@d86 1
a86 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.5"
@


1.39
log
@Switch example addresses to the prefixes reserved for documentation in rfc5737.
From Sevan Janiyan, nick@@ ok
@
text
@d62 1
a62 2
<a name="intro"></a>
<h2>Introduction</h2>
d108 1
a108 2
<a name="nat"></a>
<h2>NAT Address Pool</h2>
d149 1
a149 2
<a name="incoming"></a>
<h2>Load Balance Incoming Connections</h2>
d172 1
a172 2
<a name="outgoing"></a>
<h2>Load Balance Outgoing Traffic</h2>
d237 1
a237 2
<a name="outexample"></a>
<p>
@


1.38
log
@explicitly specify "inet" in various nat-to rules where it's ambiguous
(plus minor whitespace cleanup)
@
text
@d200 2
a201 2
ext_gw1 = "68.146.224.1"<br>
ext_gw2 = "142.59.76.1"<br>
d254 2
a255 2
ext_gw1 = "68.146.224.1"
ext_gw2 = "142.59.76.1"
@


1.37
log
@
update for 5.5
@
text
@d76 1
a76 1
Example: if the address pool is 192.0.2.1/24 and the address being 
d79 1
a79 1
10.0.0.130, then the resulting address will be 192.0.2.2. 
d89 1
a89 1
loaded. 
d92 1
a92 1
when the address pool is specified using a 
d98 1
a98 1
expressed as a 
d111 1
a111 1
An address pool can be used as the translation address in 
d170 1
a170 1
refer to this connection. 
d179 1
a179 1
proper multi-path routing protocol (like 
d183 1
a183 1
multiple outbound paths. 
d228 1
a228 1
&nbsp;&nbsp;&nbsp;route-to ($ext_if1 $ext_gw1) 
d269 1
a269 1
#  load balance outgoing traffic from internal network. 
d285 1
a285 1
pass out on $ext_if2 from $ext_if1 route-to ($ext_if1 $ext_gw1) 
d297 1
a297 1
</html> 
@


1.36
log
@
www@@ removal, normalize footers.
@
text
@d37 2
a38 1
[<a href="queueing.html">Previous: Packet Queueing and Prioritization</a>]
d87 1
a87 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.4"
d291 1
a291 1
[<a href="queueing.html">Previous: Packet Queueing and Prioritization</a>]
@


1.35
log
@
update for 5.4
@
text
@a4 1
<link rev="made" href="mailto:www@@openbsd.org">
a294 6
<hr>
<a href="index.html"><img height="24" width="24" src="../../images/back.gif" border="0" alt="[back]"></a> 
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>$OpenBSD: pools.html,v 1.34 2013/05/01 13:21:45 nick Exp $</small>

@


1.34
log
@
updates for 5.3
@
text
@d87 1
a87 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.3"
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.33 2013/02/18 16:09:29 nick Exp $</small>
@


1.33
log
@
pacbell.net is gone, fortunately swbell.net provides almost the exact same
CIDR document.  pointed out by parranoya at gmail dot com.
@
text
@d87 1
a87 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.2"
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.32 2012/11/01 15:06:36 nick Exp $</small>
@


1.32
log
@
enter 5.2
@
text
@d99 1
a99 1
<a href="http://public.pacbell.net/dedicated/cidr.html">CIDR</a>
d137 1
a137 1
<a href="http://public.pacbell.net/dedicated/cidr.html">CIDR</a>
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.31 2012/05/11 11:20:04 nick Exp $</small>
@


1.31
log
@
forgot to actually COMMIT these 5.1 changes.  *sigh*
@
text
@d87 1
a87 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.1"
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.30 2011/11/02 01:01:47 nick Exp $</small>
@


1.30
log
@
rev man page references to 5.0
@
text
@d87 1
a87 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.0"
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.29 2011/09/07 03:48:51 nick Exp $</small>
@


1.29
log
@
line breaks are good.  Diffs from Joel Knight are even better!  We miss you,
Joel!
@
text
@d87 1
a87 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.9"
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.28 2011/05/01 12:57:11 nick Exp $</small>
@


1.28
log
@
updates for 4.9
@
text
@d203 2
a204 2
pass in on $int_if from $lan_net \
&nbsp;&nbsp;&nbsp;route-to { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } \
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.27 2010/11/01 09:53:51 nick Exp $</small>
@


1.27
log
@
update to 4.8
@
text
@d87 1
a87 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.8"
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.26 2010/05/19 13:25:16 sthen Exp $</small>
@


1.26
log
@Update the PF faq for 4.7 changes.
@
text
@d87 1
a87 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.7"
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.25 2009/12/15 00:56:01 sthen Exp $</small>
@


1.25
log
@- remove unnecessary "from any"/"to any", flags S/SA

- remove "modulate state" parts (the page is about load balancing,
so I think it makes sense to concentrate on just that in the example
ruleset, people are easily-enough confused as it is..)

- adds a rule to the example so https doesn't get balanced.
I had some trouble with stupid web apps (banks etc) breaking
at a customer where I started doing load-balancing, give people
a hint that it might happen and a way to workaround the worst of it.

ok henning@@, no objections from nick@@
@
text
@d66 3
a68 4
redirection address in <a href="rdr.html"><tt>rdr</tt></a> rules, as the
translation address in <a href="nat.html"><tt>nat</tt></a> rules, and as
the target address in <tt>route-to</tt>, <tt>reply-to</tt>, and
<tt>dup-to</tt> <a href="filter.html">filter</a> options.
d75 1
a75 1
for <tt>nat</tt> rules, destination address for <tt>rdr</tt> rules).
d87 1
a87 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.6"
d112 1
a112 1
<a href="nat.html"><tt>nat</tt></a> rules. Connections will have their
d125 1
a125 1
nat on $ext_if inet -&gt; { 192.0.2.5, 192.0.2.10 }
d141 1
a141 1
nat on $ext_if inet -&gt; 192.0.2.4/31 source-hash
d146 1
a146 1
This <tt>nat</tt> rule uses the address pool 192.0.2.4/31 (192.0.2.4 -
d160 1
a160 1
rdr on $ext_if proto tcp to port 80 -&gt; $web_servers \<br>
d203 3
a205 3
pass in on $int_if route-to \<br>
&nbsp;&nbsp;&nbsp;{ ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin \<br>
&nbsp;&nbsp;&nbsp;from $lan_net to any
d213 4
a216 5
gateways. Note that the <tt>route-to</tt> option must be present on
<i>each</i> filter rule that traffic is to be balanced for.  Return
packets will be routed back to the same external interface that they
exited (this is done by the ISPs) and will be routed back to the
internal network normally.
d225 4
a228 4
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2 \<br>
&nbsp;&nbsp;&nbsp;to any<br>
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1 \<br>
&nbsp;&nbsp;&nbsp;to any 
d236 2
a237 2
nat on $ext_if1 from $lan_net -&gt; ($ext_if1)<br>
nat on $ext_if2 from $lan_net -&gt; ($ext_if2)
d258 2
a259 2
nat on $ext_if1 from $lan_net -&gt; ($ext_if1)
nat on $ext_if2 from $lan_net -&gt; ($ext_if2)
d270 3
a272 3
pass in on $int_if route-to \
    { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin \
    from $lan_net
d275 2
a276 2
pass in on $int_if route-to ($ext_if1 $ext_gw1) \
    proto tcp from $lan_net to port https
d284 2
a285 2
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1
d300 1
a300 1
<small>$OpenBSD: pools.html,v 1.24 2009/10/16 19:12:42 nick Exp $</small>
@


1.24
log
@
quick update for 4.6.  much more is needed, at least scrub.html is
currently dead wrong, so I've unlinked it from the rest for now.
@
text
@d126 1
a126 1
nat on $ext_if inet from any to any -&gt; { 192.0.2.5, 192.0.2.10 }
d142 1
a142 1
nat on $ext_if inet from any to any -&gt; 192.0.2.4/31 source-hash
d161 1
a161 1
rdr on $ext_if proto tcp from any to any port 80 -&gt; $web_servers \<br>
d206 1
a206 1
&nbsp;&nbsp;&nbsp;from $lan_net to any keep state
d238 2
a239 2
nat on $ext_if1 from $lan_net to any -&gt; ($ext_if1)<br>
nat on $ext_if2 from $lan_net to any -&gt; ($ext_if2)
d260 2
a261 2
nat on $ext_if1 from $lan_net to any -&gt; ($ext_if1)
nat on $ext_if2 from $lan_net to any -&gt; ($ext_if2)
d264 2
a265 2
block in  from any to any
block out from any to any
d268 1
a268 1
pass out on $int_if from any to $lan_net
d271 1
a271 1
#  load balance outgoing tcp traffic from internal network. 
d274 5
a278 5
    proto tcp from $lan_net to any flags S/SA modulate state
#  load balance outgoing udp and icmp traffic from internal network
pass in on $int_if route-to \
    { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin \
    proto { udp, icmp } from $lan_net to any keep state
d281 2
a282 4
pass out on $ext_if1 proto tcp from any to any flags S/SA modulate state
pass out on $ext_if1 proto { udp, icmp } from any to any keep state
pass out on $ext_if2 proto tcp from any to any flags S/SA modulate state
pass out on $ext_if2 proto { udp, icmp } from any to any keep state
d286 2
a287 2
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2 to any 
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1 to any 
d302 1
a302 1
<small>$OpenBSD: pools.html,v 1.23 2009/04/30 17:27:31 nick Exp $</small>
@


1.23
log
@
updates for 4.5
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.5"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.22 2008/10/31 16:49:34 nick Exp $</small>
@


1.22
log
@
update numbers for 4.4
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.4"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.21 2008/07/27 17:13:47 nick Exp $</small>
@


1.21
log
@
PF updates for 4.3..which got missed a few times.
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.3"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.20 2007/11/01 02:57:56 joel Exp $</small>
@


1.20
log
@Updates for OpenBSD 4.2
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.2"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.19 2007/05/06 18:59:54 nick Exp $</small>
@


1.19
log
@
manpath changes to:
  4.1 for PF related items
  removed for non-PF-related items, which will probably either not
    change much, or benefit from the newest, best man pages.
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.1"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.18 2006/11/01 01:56:01 joel Exp $</small>
@


1.18
log
@Updates for OpenBSD 4.0. uRPF, tftp-proxy, more ftp-proxy, etc.
Thanks to mcbride for the bits about interface groups
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.0"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.17 2006/05/01 00:54:29 nick Exp $</small>
@


1.17
log
@
3.9 updates, mostly rev'ing man page links
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.9"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.16 2005/11/01 11:35:18 nick Exp $</small>
@


1.16
log
@
bump manpath= tag for 3.8
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.8"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.15 2005/05/20 00:12:02 joel Exp $</small>
@


1.15
log
@Updates for OpenBSD 3.7.
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.7"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.14 2004/12/22 04:28:16 david Exp $</small>
@


1.14
log
@make small title logo a link back to main page; ok nick@@
@
text
@d88 1
a88 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.6"
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.13 2004/10/29 17:22:57 nick Exp $</small>
@


1.13
log
@
Update for 3.6
@
text
@d34 3
a36 1
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif">
d304 1
a304 1
<small>$OpenBSD: pools.html,v 1.12 2004/05/07 01:55:24 nick Exp $</small>
@


1.12
log
@
Add an OpenBSD license to the PF User's Guide.
Concept and breakdown of copyrights agreed to by Joel Knight and myself,
license assistance millert@@, ok deraadt@@.
@
text
@d86 1
a86 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.5"
d302 1
a302 1
<small>$OpenBSD: pools.html,v 1.11 2004/04/30 18:00:25 nick Exp $</small>
@


1.11
log
@
PF User's Guide updates for OpenBSD 3.5.
Work done by Joel Knight (enabled et myrealbox.dit com), many, many thanks
to him for providing and maintaining some darned good docs.
@
text
@a10 1
<meta name="copyright"     content="This document copyright 2003-2004 by OpenBSD.">
d13 17
d302 1
a302 1
<small>$OpenBSD: pools.html,v 1.10 2004/01/01 04:16:17 nick Exp $</small>
@


1.10
log
@
Bump copyright to 2004
@
text
@d70 1
a70 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.4"
d87 5
d143 2
a144 1
rdr on $ext_if proto tcp from any to any port 80 -&gt; $web_servers
d150 7
a156 8
round-robin manner. 

<p>
As with the NAT example, if the web servers are all placed within a CIDR
network block, the <tt>source-hash</tt> keyword can be used so that
connections from a given IP address are always redirected to the same
physical web server. Again, this is sometimes necessary to maintain
session information while browsing a website.
d286 1
a286 1
<small>$OpenBSD: pools.html,v 1.9 2003/11/30 23:18:06 nick Exp $</small>
@


1.9
log
@
Sync new tagging article.  Diff from Joel Knight (the guy does a complete
job!).
@
text
@d11 1
a11 1
<meta name="copyright"     content="This document copyright 2003 by OpenBSD.">
d281 1
a281 1
<small>$OpenBSD: pools.html,v 1.8 2003/11/27 15:08:25 nick Exp $</small>
@


1.8
log
@
Major update to the PF FAQ from "Mr. PF FAQ", Joel Knight.  THANKS!
@
text
@d22 1
a22 1
[<a href="logging.html">Next: Logging</a>]
d274 1
a274 1
[<a href="logging.html">Next: Logging</a>]
d281 1
a281 1
<small>$OpenBSD: pools.html,v 1.7 2003/11/09 23:29:02 nick Exp $</small>
@


1.7
log
@
Update of PF User's Guide to 3.4.  Ok, really just pointing the man page
links at the 3.4-release man pages rather than the 3.3-release man pages.
Work by Joel Knight.
@
text
@d20 1
a20 1
[<a href="shortcuts.html">Previous: Shortcuts For Creating Rulesets</a>]
d22 1
a22 1
[<a href="perf.html">Next: Performance</a>]
d74 3
a76 1
sequence. This is the default method.
d84 2
a85 7
method will accept multiple individual addresses using
<a href="macros.html#lists">list format</a>.

<p>
In addition, the <tt>static-port</tt> keyword can be specified after
one of the above methods to prevent <tt>nat</tt> rules from
modifying the source port of TCP and UDP packets.
d272 1
a272 1
[<a href="shortcuts.html">Previous: Shortcuts For Creating Rulesets</a>]
d274 1
a274 1
[<a href="perf.html">Next: Performance</a>]
d281 1
a281 1
<small>$OpenBSD: pools.html,v 1.6 2003/09/16 01:23:49 nick Exp $</small>
@


1.6
log
@
Grammar and punctuation clean up, from Joel Knight.
Only a very few words changed.
@
text
@d70 1
a70 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.3"
d284 1
a284 1
<small>$OpenBSD: pools.html,v 1.5 2003/06/13 02:54:08 nick Exp $</small>
@


1.5
log
@
Improved wrapping of man page links, renders better on some browsers.
No words altered.  From Joel Knight.
@
text
@d69 1
a69 1
default
d203 1
a203 1
for <tt>$ext_if2</tt> and <tt>$ext_gw2</tt>) the following two lines
d284 1
a284 1
<small>$OpenBSD: pools.html,v 1.4 2003/05/15 03:03:54 nick Exp $</small>
@


1.4
log
@
Table of Contents now on each page.  Work by Joel Knight (yay! Joel! 8-).
@
text
@d70 2
a71 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.3">
pfctl(8)</a> will generate a random key every time the ruleset is
d284 1
a284 1
<small>$OpenBSD: pools.html,v 1.3 2003/05/13 17:37:09 nick Exp $</small>
@


1.3
log
@
Wording improvements and corrections from Joel Knight
@
text
@d31 15
a45 1
<p>
d223 1
d225 2
a226 1
A complete example might look something like this:
d284 1
a284 1
<small>$OpenBSD: pools.html,v 1.2 2003/05/01 14:20:37 nick Exp $</small>
@


1.2
log
@
ARGH!  no, it is "ruleset", not "rule set".  Pointed out by Margarida@@
@
text
@d20 1
a20 1
[<a href="pools.html">Previous: Shortcuts For Creating Rulesets</a>]
d259 1
a259 1
[<a href="pools.html">Previous: Shortcuts For Creating Rulesets</a>]
d268 1
a268 1
<small>$OpenBSD: pools.html,v 1.1 2003/05/01 01:46:06 nick Exp $</small>
@


1.1
log
@
The long awaited, new PF FAQ!
Most of it written by Joel Knight >enabled at myrealbox dot com<,
some parts by me, a few parts yanked out of the old PF FAQ.
GREAT work, Joel!
@
text
@d20 1
a20 1
[<a href="pools.html">Previous: Shortcuts For Creating Rule Sets</a>]
d57 1
a57 1
pfctl(8)</a> will generate a random key every time the rule set is
d190 1
a190 1
should be included in the rule set:
d259 1
a259 1
[<a href="pools.html">Previous: Shortcuts For Creating Rule Sets</a>]
d268 1
a268 1
<small>$OpenBSD$</small>
@

