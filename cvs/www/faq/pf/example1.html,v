head	1.87;
access;
symbols;
locks; strict;
comment	@# @;


1.87
date	2017.09.25.18.31.42;	author tj;	state Exp;
branches;
next	1.86;
commitid	mTdoIsShlaZXXEZX;

1.86
date	2017.07.22.17.10.44;	author tj;	state Exp;
branches;
next	1.85;
commitid	dBiev1Mk3C0dZyjb;

1.85
date	2017.06.26.17.18.58;	author tb;	state Exp;
branches;
next	1.84;
commitid	jKVBuSx5No9bUpg1;

1.84
date	2017.01.17.04.22.00;	author tj;	state Exp;
branches;
next	1.83;
commitid	ZRFF3YJohCuHypCU;

1.83
date	2016.10.08.00.34.10;	author tj;	state Exp;
branches;
next	1.82;
commitid	pMNdIJek8aVmQT3i;

1.82
date	2016.09.09.18.27.39;	author tj;	state Exp;
branches;
next	1.81;
commitid	k3J4MlKclkH3eljR;

1.81
date	2016.09.09.17.39.04;	author tj;	state Exp;
branches;
next	1.80;
commitid	YdJwOQCYL30cxoC3;

1.80
date	2016.08.15.02.22.14;	author tb;	state Exp;
branches;
next	1.79;
commitid	3DeixV5YkPOb78RN;

1.79
date	2016.06.13.23.10.21;	author tb;	state Exp;
branches;
next	1.78;
commitid	PaCfjy6x2tP7fIVR;

1.78
date	2016.06.13.17.58.24;	author tj;	state Exp;
branches;
next	1.77;
commitid	Grx2UyJPWzJbbhkP;

1.77
date	2016.04.27.18.51.47;	author tj;	state Exp;
branches;
next	1.76;
commitid	jYsnO5qmytv2rdH6;

1.76
date	2016.04.22.01.40.57;	author tj;	state Exp;
branches;
next	1.75;
commitid	ABi3Bc01cdHvtmSw;

1.75
date	2016.04.18.19.07.50;	author tj;	state Exp;
branches;
next	1.74;
commitid	g0cUF3jNn5Tz4oaZ;

1.74
date	2016.04.16.00.30.41;	author tj;	state Exp;
branches;
next	1.73;
commitid	rTxoenHHaeutOff1;

1.73
date	2016.04.15.20.39.49;	author tb;	state Exp;
branches;
next	1.72;
commitid	jwteSMEb4rFzI8UA;

1.72
date	2016.03.29.01.27.39;	author tb;	state Exp;
branches;
next	1.71;
commitid	4Y8oU6GBrSY1UOfW;

1.71
date	2016.03.27.19.52.09;	author sthen;	state Exp;
branches;
next	1.70;
commitid	hi2ObFv9LGB98JY5;

1.70
date	2016.03.22.10.56.56;	author sthen;	state Exp;
branches;
next	1.69;
commitid	G2izHhNJ7aqR0Y6j;

1.69
date	2016.03.21.05.46.21;	author beck;	state Exp;
branches;
next	1.68;
commitid	zEx6zFkNSFFExu0v;

1.68
date	2016.02.03.15.33.28;	author tj;	state Exp;
branches;
next	1.67;
commitid	H06ok1eNnP496R57;

1.67
date	2016.01.24.18.47.17;	author tj;	state Exp;
branches;
next	1.66;
commitid	Yk1XPZJB5W4JrMXA;

1.66
date	2016.01.13.21.55.55;	author tb;	state Exp;
branches;
next	1.65;
commitid	QtnhUiqtRLjFFnqZ;

1.65
date	2016.01.11.22.53.15;	author sthen;	state Exp;
branches;
next	1.64;
commitid	4Hp8rQERCdDGF1vR;

1.64
date	2016.01.10.21.09.10;	author tb;	state Exp;
branches;
next	1.63;
commitid	Bjo6VMqtvmgX7ehG;

1.63
date	2016.01.10.01.28.23;	author tb;	state Exp;
branches;
next	1.62;
commitid	XRwfjSZEEhwWVFGt;

1.62
date	2015.10.18.19.48.19;	author nick;	state Exp;
branches;
next	1.61;
commitid	gkrFWKimwWNVivXe;

1.61
date	2015.07.02.05.49.05;	author bentley;	state Exp;
branches;
next	1.60;
commitid	AP3UllesavMDEUhQ;

1.60
date	2015.05.11.11.18.30;	author sthen;	state Exp;
branches;
next	1.59;
commitid	wRrXxcro6dFYiwF8;

1.59
date	2015.04.30.23.48.01;	author nick;	state Exp;
branches;
next	1.58;
commitid	uFWv68UTtTmjkqVF;

1.58
date	2014.12.02.03.17.26;	author nick;	state Exp;
branches;
next	1.57;
commitid	RQ0cKiFD5x45dGyo;

1.57
date	2014.12.01.10.01.07;	author bentley;	state Exp;
branches;
next	1.56;
commitid	DtrOVs7q8kqgEsjm;

1.56
date	2014.05.01.15.03.50;	author nick;	state Exp;
branches;
next	1.55;

1.55
date	2014.03.31.02.33.07;	author nick;	state Exp;
branches;
next	1.54;

1.54
date	2013.11.01.14.07.05;	author nick;	state Exp;
branches;
next	1.53;

1.53
date	2013.05.01.13.21.45;	author nick;	state Exp;
branches;
next	1.52;

1.52
date	2012.11.01.15.06.36;	author nick;	state Exp;
branches;
next	1.51;

1.51
date	2012.10.02.20.35.47;	author sthen;	state Exp;
branches;
next	1.50;

1.50
date	2012.08.17.00.20.23;	author nick;	state Exp;
branches;
next	1.49;

1.49
date	2012.05.11.11.20.04;	author nick;	state Exp;
branches;
next	1.48;

1.48
date	2011.11.02.01.01.47;	author nick;	state Exp;
branches;
next	1.47;

1.47
date	2011.11.01.13.24.27;	author sthen;	state Exp;
branches;
next	1.46;

1.46
date	2011.05.01.12.57.11;	author nick;	state Exp;
branches;
next	1.45;

1.45
date	2010.11.03.08.19.24;	author sthen;	state Exp;
branches;
next	1.44;

1.44
date	2010.11.01.09.53.51;	author nick;	state Exp;
branches;
next	1.43;

1.43
date	2010.07.19.23.43.08;	author sthen;	state Exp;
branches;
next	1.42;

1.42
date	2010.05.24.12.15.02;	author sthen;	state Exp;
branches;
next	1.41;

1.41
date	2010.05.19.13.25.16;	author sthen;	state Exp;
branches;
next	1.40;

1.40
date	2010.03.18.22.59.04;	author nick;	state Exp;
branches;
next	1.39;

1.39
date	2009.10.16.19.12.42;	author nick;	state Exp;
branches;
next	1.38;

1.38
date	2009.04.30.17.27.31;	author nick;	state Exp;
branches;
next	1.37;

1.37
date	2009.01.25.18.09.49;	author jasper;	state Exp;
branches;
next	1.36;

1.36
date	2008.10.31.16.49.34;	author nick;	state Exp;
branches;
next	1.35;

1.35
date	2008.07.27.17.13.47;	author nick;	state Exp;
branches;
next	1.34;

1.34
date	2007.12.20.17.20.16;	author joel;	state Exp;
branches;
next	1.33;

1.33
date	2007.11.01.02.57.56;	author joel;	state Exp;
branches;
next	1.32;

1.32
date	2007.05.06.18.59.54;	author nick;	state Exp;
branches;
next	1.31;

1.31
date	2006.11.01.01.56.01;	author joel;	state Exp;
branches;
next	1.30;

1.30
date	2006.10.31.21.32.58;	author joel;	state Exp;
branches;
next	1.29;

1.29
date	2006.10.27.19.26.13;	author nick;	state Exp;
branches;
next	1.28;

1.28
date	2006.07.03.07.47.25;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2006.05.08.03.24.46;	author nick;	state Exp;
branches;
next	1.26;

1.26
date	2006.05.02.12.17.07;	author steven;	state Exp;
branches;
next	1.25;

1.25
date	2006.05.02.12.14.18;	author steven;	state Exp;
branches;
next	1.24;

1.24
date	2006.05.01.09.22.29;	author steven;	state Exp;
branches;
next	1.23;

1.23
date	2006.05.01.00.51.22;	author nick;	state Exp;
branches;
next	1.22;

1.22
date	2006.01.01.03.49.54;	author joel;	state Exp;
branches;
next	1.21;

1.21
date	2005.11.01.11.35.18;	author nick;	state Exp;
branches;
next	1.20;

1.20
date	2005.05.21.05.55.43;	author joel;	state Exp;
branches;
next	1.19;

1.19
date	2005.05.20.00.12.02;	author joel;	state Exp;
branches;
next	1.18;

1.18
date	2004.12.22.04.28.16;	author david;	state Exp;
branches;
next	1.17;

1.17
date	2004.11.01.21.41.07;	author nick;	state Exp;
branches;
next	1.16;

1.16
date	2004.10.29.17.22.57;	author nick;	state Exp;
branches;
next	1.15;

1.15
date	2004.05.15.02.34.02;	author nick;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.07.01.55.23;	author nick;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.30.18.00.25;	author nick;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.01.04.16.17;	author nick;	state Exp;
branches;
next	1.11;

1.11
date	2003.11.27.15.08.25;	author nick;	state Exp;
branches;
next	1.10;

1.10
date	2003.11.09.23.29.02;	author nick;	state Exp;
branches;
next	1.9;

1.9
date	2003.09.22.02.29.03;	author nick;	state Exp;
branches;
next	1.8;

1.8
date	2003.09.16.01.23.49;	author nick;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.29.20.28.24;	author nick;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.28.02.53.59;	author nick;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.15.16.40.06;	author nick;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.15.03.03.54;	author nick;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.08.01.19.58;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.01.14.20.37;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.01.01.46.06;	author nick;	state Exp;
branches;
next	;


desc
@@


1.87
log
@add instructions for configuring a wireless access point and clean up
some overly long explanations.
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

<!-- If you make edits to any FAQ documents, please start each sentence
     on a new line, and try to keep the general formatting consistent
     with the rest of the pages -->

<title>OpenBSD PF: Building a Router</title>
<meta name="description" content="The Ultimate OpenBSD Router">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="../../openbsd.css">
<link rel="canonical" href="https://www.openbsd.org/faq/pf/example1.html">
</head>

<!--
Copyright (c) 2016-2017 T.J. Townsend <tj@@openbsd.org>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor="#ffffff" text="#000000">

<h2>
<a href="../../index.html">
<font color="#0000ff"><i>Open</i></font><font color="#000084">BSD</font></a>
<font color="#e00000">PF - Building a Router</font>
<small>
<a href="index.html" style="font-weight:normal; float:right">[Contents]</a>
</small>
</h2>
<hr>

<ul>
  <li><a href="#background">Background</a>
  <li><a href="#net"       >Networking</a>
  <li><a href="#dhcp"      >DHCP</a>
  <li><a href="#pf"        >Firewall</a>
  <li><a href="#dns"       >DNS</a>
</ul>
<hr>

<h2 id="background">Background</h2>

This guide will show you how to turn an OpenBSD system into a router.
First, we'll define what this router (also called a "gateway") will actually
do, since your requirements may vary.

<ul>
  <li>Performing network address translation (NAT)
  <li>Giving a laptop and server static IPs based on their MAC address
  <li>Handing out IP addresses to other clients via DHCP
  <li>Allowing incoming connections to a local web server
  <li>Doing DNS caching for the LAN
  <li>Providing wireless connectivity
</ul>

This example will use two <a href="https://man.openbsd.org/em">em(4)</a>
NICs and an <a href="https://man.openbsd.org/athn">athn(4)</a> wireless card.
Replace the <tt>em0</tt>, <tt>em1</tt> and <tt>athn0</tt> interface names
as appropriate.
Sample configuration files are provided, but you're encouraged to read
the man pages to understand their full capability.

<h2 id="net">Networking</h2>

We'll begin with some initial
<a href="https://man.openbsd.org/hostname.if">network configuration</a>,
using a <b>192.168.1.0/24</b> subnet for the wired clients and
<b>192.168.2.0/24</b> for the wireless.

<blockquote><pre>
# <b>echo 'net.inet.ip.forwarding=1' >> /etc/sysctl.conf</b>
# <b>echo 'dhcp' > /etc/hostname.em0</b> # if you have a static IP, use that instead
# <b>echo 'inet 192.168.1.1 255.255.255.0 192.168.1.255' > /etc/hostname.em1</b>
# <b>vi /etc/hostname.athn0</b>
</pre></blockquote>

Add the following, changing the mode/channel if needed:

<blockquote><pre>
media autoselect mode 11n mediaopt hostap chan 1
nwid AccessPointName
wpakey VeryLongPassword
inet 192.168.2.1 255.255.255.0
</pre></blockquote>

OpenBSD defaults to allowing only WPA2-CCMP connections in HostAP mode.
If you need support for older (insecure) protocols, they must be
<a href="https://man.openbsd.org/ifconfig#IEEE_802.11_(WIRELESS_DEVICES)">
explicitly enabled</a>.

<h2 id="dhcp">DHCP</h2>

Clients need IP addresses, so we'll set
<a href="https://man.openbsd.org/dhcpd">dhcpd(8)</a> to start on boot.
Configuration is done via the
<a href="https://man.openbsd.org/dhcpd.conf">dhcpd.conf(5)</a> file.

<blockquote><pre>
# <b>rcctl enable dhcpd</b>
# <b>rcctl set dhcpd flags em1 athn0</b>
# <b>vi /etc/dhcpd.conf</b>
</pre></blockquote>

Take this example and adjust to fit your needs:

<blockquote><pre>
subnet 192.168.1.0 netmask 255.255.255.0 {
	option routers 192.168.1.1;
	option domain-name-servers 192.168.1.1;
	range 192.168.1.4 192.168.1.254;
	host myserver {
		fixed-address 192.168.1.2;
		hardware ethernet 00:00:00:00:00:00;
		}
	host mylaptop {
		fixed-address 192.168.1.3;
		hardware ethernet 11:11:11:11:11:11;
		}
}
subnet 192.168.2.0 netmask 255.255.255.0 {
	option routers 192.168.2.1;
	option domain-name-servers 192.168.2.1;
	range 192.168.2.2 192.168.2.254;
}
</pre></blockquote>

You can specify another
<a href="https://tools.ietf.org/html/rfc1918">RFC 1918</a> address space here
if you prefer, or even a public IP block if you have one.
Using this example, clients will query a local DNS server, detailed in a later
section.
If you don't plan on using a local DNS server, replace the IPs in the
<tt>domain-name-servers</tt> lines with the address of your preferred
upstream resolver.

<h2 id="pf">Firewall</h2>

The centerpiece of this guide is the
<a href="https://man.openbsd.org/pf.conf">pf.conf(5)</a> file.
It's highly recommended to familiarize yourself with it, and PF in general,
before copying this example.
Each section will be explained in more detail.

<blockquote><pre>
# <b>vi /etc/pf.conf</b>
</pre></blockquote>

A configuration for a gateway system might look like this:

<blockquote><pre>
wired = "em1"
wifi  = "athn0"
table &lt;martians&gt; { 0.0.0.0/8 10.0.0.0/8 127.0.0.0/8 169.254.0.0/16     \
	 	   172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 224.0.0.0/3 \
	 	   192.168.0.0/16 198.18.0.0/15 198.51.100.0/24        \
	 	   203.0.113.0/24 }
set block-policy drop
set loginterface egress
set skip on lo0
match in all scrub (no-df random-id max-mss 1440)
match out on egress inet from !(egress:network) to any nat-to (egress:0)
antispoof quick for { egress $wired $wifi }
block in quick on egress from &lt;martians&gt; to any
block return out quick on egress from any to &lt;martians&gt;
block all
pass out quick inet
pass in on { $wired $wifi } inet
pass in on egress inet proto tcp from any to (egress) port { 80 443 } rdr-to 192.168.1.2
</pre></blockquote>

Now we'll break this ruleset down and explain what each line does.

<blockquote><pre>
wired = "em1"
wifi  = "athn0"
</pre></blockquote>

These are <a href="macros.html">macros</a>, used to make overall maintenance
easier.
Macros can be referenced throughout the ruleset after being defined.

<blockquote><pre>
table &lt;martians&gt; { 0.0.0.0/8 10.0.0.0/8 127.0.0.0/8 169.254.0.0/16     \
	 	   172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 224.0.0.0/3 \
	 	   192.168.0.0/16 198.18.0.0/15 198.51.100.0/24        \
	 	   203.0.113.0/24 }
</pre></blockquote>

This is a <a href="tables.html">table</a> of non-routable private addresses
that will be used later.

<blockquote><pre>
set block-policy drop
set loginterface egress
set skip on lo0
</pre></blockquote>

PF allows certain <a href="options.html">options</a> to be set at runtime.
The <tt>block-policy</tt> decides whether rejected packets should return
a TCP RST or be silently dropped.
The <tt>loginterface</tt> is exactly what it sounds like: which interface
should have packet and byte statistics collection enabled.
These statistics can be viewed with the <tt>pfctl -si</tt> command.
In this case, we're using the <tt>egress</tt> group rather than a specific
interface.
The <tt>egress</tt> keyword automatically chooses the interface that holds
the default route, or the <tt>em0</tt> WAN interface in our example.
Finally, <tt>skip</tt> allows you to completely omit a given interface from
packet processing.
The firewall will ignore loopback traffic on the
<a href="https://man.openbsd.org/lo">lo(4)</a> interface.

<blockquote><pre>
match in all scrub (no-df random-id max-mss 1440)
match out on egress inet from !(egress:network) to any nat-to (egress:0)
</pre></blockquote>

The <tt>match</tt> rules used here accomplish two things: normalizing incoming
packets and performing network address translation, with the <tt>egress</tt>
interface between the LAN and the public internet.
For a more detailed explanation of <tt>match</tt> rules and their different
options, refer to the <a href="https://man.openbsd.org/pf.conf">pf.conf(5)</a>
manual.

<blockquote><pre>
antispoof quick for { egress $wired $wifi }
block in quick on egress from &lt;martians&gt; to any
block return out quick on egress from any to &lt;martians&gt;
</pre></blockquote>

The <a href="filter.html#antispoof">antispoof</a> keyword provides some
protection from packets with spoofed source addresses.
Packets coming in on the <tt>egress</tt> interface should be dropped if they
appear to be from the list of unroutable addresses we defined.
Such packets were likely sent due to misconfiguration, or possibly as part of
a spoofing attack.
Similarly, our clients should not attempt to connect to such addresses.
We'll specify the "return" action to prevent annoying timeouts for users.
Note that this can cause problems if you're doing double NAT.

<blockquote><pre>
block all
</pre></blockquote>

The firewall will set a "default deny" policy for all traffic.
This means we will only allow incoming and outgoing connections that we
explicitly put in our ruleset.

<blockquote><pre>
pass out quick inet
</pre></blockquote>

Allow outgoing IPv4 traffic from both the gateway itself and the LAN clients.

<blockquote><pre>
pass in on { $wired $wifi } inet
</pre></blockquote>

Allow internal LAN traffic.

<blockquote><pre>
pass in on egress inet proto tcp from any to (egress) port { 80 443 } rdr-to 192.168.1.2
</pre></blockquote>

Forward incoming connections (on TCP ports 80 and 443, for a web server)
to our machine at 192.168.1.2.
This is merely an example of port forwarding.

<h2 id="dns">DNS</h2>

At this point, clients should be assigned IP addresses and granted access to
the internet, while being protected by the firewall.
If that's all you need, you're done and can reboot now.
That being said, a DNS cache is common addition to a gateway system.

<p>
When clients issue a DNS query, they'll first hit the
<a href="https://man.openbsd.org/unbound">unbound(8)</a> cache.
If it doesn't have the answer, it goes out to the upstream resolver that
you've configured.
Results are then fed to the client and cached for a period of time, making
future lookups of the same address quicker.

<blockquote><pre>
# <b>rcctl enable unbound</b>
# <b>vi /var/unbound/etc/unbound.conf</b>
</pre></blockquote>

Something like this should work for most setups:

<blockquote><pre>
server:
	interface: 192.168.1.1
	interface: 192.168.2.1
	interface: 127.0.0.1
	access-control: 192.168.1.0/24 allow
	access-control: 192.168.2.0/24 allow
	do-not-query-localhost: no
	hide-identity: yes
	hide-version: yes

forward-zone:
        name: "."
        forward-addr: 1.2.3.4  # IP of the upstream resolver
</pre></blockquote>

Further configuration options can be found in
<a href="https://man.openbsd.org/unbound.conf">unbound.conf(5)</a>.
Outgoing DNS lookups may also be encrypted with the <tt>dnscrypt-proxy</tt>
package -- see its included README file for details.

<p>
If you want the gateway to use the caching resolver for lookups too, don't
forget to change its <tt>/etc/resolv.conf</tt> file to point to 127.0.0.1.
Since the majority of routers won't be doing many DNS queries, this is likely
not needed.
Also note that it will need to be changed <i>back</i> to an actual resolver
when using <a href="../faq4.html#bsd.rd">bsd.rd</a> for network-based upgrades
if you do so.

<p>
</body>
</html>
@


1.86
log
@someone actually tried to use "IP.OF.UPSTREAM.RESOLVER" in their unbound
config, so clarify this is an example string meant to be replaced...
@
text
@d18 1
a18 1
Copyright (c) 2016 T.J. Townsend <tj@@openbsd.org>
d51 1
a51 1
  <li><a href="#dns"       >DNS</a> (optional)
a59 4
In this example, three computers need to share an internet connection.
One of them is a web server that should be remotely accessible, but otherwise
we don't want any of the local systems open to the internet.
The router will be doing the following things:
d64 4
a67 4
  <li>Handing out IP addresses via DHCP to other clients
  <li>Allowing incoming connections to the web server and the router's
      <a href="https://man.openbsd.org/sshd">sshd(8)</a>
  <li>Doing local DNS caching for the LAN, optionally
d70 5
a74 9
This guide will be using hardware with four NICs that use the
<a href="https://man.openbsd.org/em">em(4)</a> driver, so replace <tt>em0</tt>,
<tt>em1</tt>, <tt>em2</tt> and <tt>em3</tt> with the names of the interfaces
in your system.
Using this example, <tt>em0</tt> will be for the
<a href="https://en.wikipedia.org/wiki/Wide_area_network">WAN</a>
and the others will be for the
<a href="https://en.wikipedia.org/wiki/Local_area_network">LAN</a>.
Some sample configuration files are provided, but you're encouraged to read
a78 15
Two possible hardware setups are described on this page:

<ul>
  <li>An "all-in-one" solution in which clients will be directly connected
      to the gateway, without the need for a switch.
      Software-based switching is done by
      <a href="../faq6.html#Bridge">bridging</a> NICs with the
      <a href="https://man.openbsd.org/vether">vether(4)</a> virtual interface.
      You'll need an available ethernet port for each client machine with
      this type of setup.
  <li>A more traditional approach that uses an external (hardware) switch
      rather than bridging.
      Only two interfaces will be needed in that case.
</ul>

d81 2
a82 33
using a <b>192.168.1.0/24</b> subnet.

<blockquote><pre>
# <b>echo dhcp > /etc/hostname.em0</b> # if you have a static IP, use that instead
# <b>echo up   > /etc/hostname.em1</b>
# <b>echo up   > /etc/hostname.em2</b>
# <b>echo up   > /etc/hostname.em3</b>
</pre></blockquote>

If you plan on using <a href="https://man.openbsd.org/bridge">bridge(4)</a>
for software-based switching, create the interfaces.

<blockquote><pre>
# <b>echo 'inet 192.168.1.1 255.255.255.0 192.168.1.255' > /etc/hostname.vether0</b>
# <b>vi /etc/hostname.bridge0</b>
</pre></blockquote>

And add the following lines:

<blockquote><pre>
add vether0
add em1
add em2
add em3
blocknonip vether0
blocknonip em1
blocknonip em2
blocknonip em3
up
</pre></blockquote>

If you plan on using a physical switch, give your secondary interface the
network information instead.
d85 2
d88 1
d91 1
a91 2
In either case, IP forwarding must be enabled to allow passing packets
between interfaces.
d94 4
a97 1
# <b>echo 'net.inet.ip.forwarding=1' >> /etc/sysctl.conf</b>
d100 4
a103 1
This change will take effect upon the next reboot.
d114 1
a114 1
# <b>rcctl set dhcpd flags vether0</b> # replace vether0 with your secondary interface if not bridging
d134 5
a140 1
Use the MAC addresses of certain clients if they require static IPs.
d146 3
a148 5
If you don't plan on using a local DNS server, replace <tt>192.168.1.1</tt>
in the <tt>domain-name-servers</tt> line with the address of your preferred
upstream DNS server (<tt>8.8.8.8</tt>, for example).
If you want to use multiple subnets, the
<a href="../faq6.html#DHCPserver">networking FAQ</a> has an example of that.
d165 2
a166 1
int_if="{ vether0 em1 em2 em3 }"
d176 1
d181 1
a181 2
pass in on $int_if inet
pass in on egress inet proto tcp from any to (egress) port 22
d188 2
a189 1
int_if="{ vether0 em1 em2 em3 }"
d192 1
a192 1
This is a <a href="macros.html">macro</a>, used to make overall maintenance
a194 5
The <tt>int_if</tt> macro is a list of internal interfaces, including the
virtual ethernet interface.
If you're using an external switch instead of
<a href="https://man.openbsd.org/bridge">bridge(4)</a>, replace <tt>{ vether0
em1 em2 em3 }</tt> with your secondary interface name.
d224 1
a224 1
Here, the firewall will ignore loopback traffic on the
d240 1
d245 2
d267 1
a267 4
With the previous rule in mind, there are obviously some types of traffic we
want to <tt>pass</tt> in our setup.
This line allows outgoing IPv4 traffic from both the gateway itself and the
LAN clients.
d270 1
a270 1
pass in on $int_if inet
d273 1
a273 1
Allow all internal LAN traffic to pass.
a275 1
pass in on egress inet proto tcp from any to (egress) port 22
d279 1
a279 2
Allow incoming connections to the router itself (on TCP port 22, for SSH)
and forward incoming connections (on TCP ports 80 and 443, for a web server)
d288 1
a288 1
With that said, a common addition to a gateway system is a DNS cache.
d291 4
a294 5
Setting up local DNS caching is very simple with
<a href="https://man.openbsd.org/unbound">unbound(8)</a>.
When clients issue a DNS query, they'll first hit the cache.
If unbound doesn't have the answer, it goes out to the upstream resolver
that you've configured.
d296 1
a296 1
future lookups of the same address much quicker.
d308 1
d311 1
d318 1
a318 1
        forward-addr: 1.2.3.4  # replace with upstream resolver's IP
@


1.85
log
@move man.openbsd.org links from http:// to https://
reduces the number of http:// links in www/ from >33k to <7k

thanks to schwarze for doing the work
@
text
@d366 1
a366 1
        forward-addr: IP.OF.UPSTREAM.RESOLVER
@


1.84
log
@remove a dnscrypt remnant i missed before, note that the "martians"
table idea can break double nat and tweak some wording.
@
text
@d70 1
a70 1
      <a href="http://man.openbsd.org/sshd">sshd(8)</a>
d75 1
a75 1
<a href="http://man.openbsd.org/em">em(4)</a> driver, so replace <tt>em0</tt>,
d94 1
a94 1
      <a href="http://man.openbsd.org/vether">vether(4)</a> virtual interface.
d103 1
a103 1
<a href="http://man.openbsd.org/hostname.if">network configuration</a>,
d113 1
a113 1
If you plan on using <a href="http://man.openbsd.org/bridge">bridge(4)</a>
d154 1
a154 1
<a href="http://man.openbsd.org/dhcpd">dhcpd(8)</a> to start on boot.
d156 1
a156 1
<a href="http://man.openbsd.org/dhcpd.conf">dhcpd.conf(5)</a> file.
d197 1
a197 1
<a href="http://man.openbsd.org/pf.conf">pf.conf(5)</a> file.
d240 1
a240 1
<a href="http://man.openbsd.org/bridge">bridge(4)</a>, replace <tt>{ vether0
d272 1
a272 1
<a href="http://man.openbsd.org/lo">lo(4)</a> interface.
d283 1
a283 1
options, refer to the <a href="http://man.openbsd.org/pf.conf">pf.conf(5)</a>
d341 1
a341 1
<a href="http://man.openbsd.org/unbound">unbound(8)</a>.
d370 1
a370 1
<a href="http://man.openbsd.org/unbound.conf">unbound.conf(5)</a>.
@


1.83
log
@mention the dhcpd section of faq6 in the dhcp section here.
@
text
@d57 5
a61 6
This guide will show you how to turn an ordinary OpenBSD box into a router.
First, we'll define what our router (also called a gateway) will actually do,
since everyone has different requirements.
In this example, there are three computers that need to share an internet
connection.
One of them is a web server that needs to be accessed remotely, but otherwise
d69 3
a71 2
  <li>Allowing (some) incoming connections to the server and gateway
  <li>Optionally, doing local DNS caching and DNSCrypt
d80 1
a80 1
and the others for the
d83 1
a83 1
the man pages of each one to understand their full capability.
d87 15
a101 9
Two possible hardware setups are described on this page.
The first details an "all-in-one" solution in which clients will be directly
connected to the gateway, without the need for a switch.
Software-based switching is done by <a href="../faq6.html#Bridge">bridging</a>
NICs with the <a href="http://man.openbsd.org/vether">vether(4)</a> virtual
interface.
The second details the same thing, but using an external (hardware) switch,
rather than bridging.
Only two interfaces are required in that case.
a166 1
option domain-name-servers 192.168.1.1;
d169 1
d271 1
a271 1
The firewall will ignore loopback traffic on the
d297 1
@


1.82
log
@don't mention the port category when referring to a package; req by sthen
@
text
@d185 2
@


1.81
log
@remove (most of) the dnscrypt instructions now that the pkg readme has them.
@
text
@d362 1
a362 1
Outgoing DNS lookups may also be encrypted with the <tt>net/dnscrypt-proxy</tt>
@


1.80
log
@tls on openbsd.org is now real:
- link to https://www.openbsd.org from the sub-projects' pages
- make internal links relative
- switch link rel=canonical to https to please some search engines
"go ahead" from beck, "do it!!!!" tj
@
text
@a332 3
Outgoing lookups can optionally be encrypted with
<a href="https://dnscrypt.org">dnscrypt-proxy</a>, installed from the
<a href="../faq15.html">package system</a>.
d334 2
a335 2
If unbound doesn't have the answer, it goes out (via an encrypted channel,
if using dnscrypt-proxy) to the upstream resolver that you've configured.
a337 2
If you choose to use DNSCrypt, be aware that you're still trusting whichever
upstream resolver is used to provide accurate responses.
d357 1
a357 1
        forward-addr: 127.0.0.1@@40
d362 2
a363 43
Now we'll set up dnscrypt-proxy.
It's <b>not</b> part of the base system, so you need to install it from ports
or packages.
If you'd like to use a normal authoritative DNS server instead, replace
<tt>127.0.0.1@@40</tt> in the <tt>forward-addr</tt> line with the address of
the server you want to use (<tt>8.8.8.8@@53</tt>, for example).
Otherwise, it's just a matter of installing the tool and choosing a resolver.

<blockquote><pre>
# <b>export PKG_PATH=http://ftp.openbsd.org/pub/OpenBSD/$(uname -r)/packages/$(uname -m)</b>
# <b>pkg_add dnscrypt-proxy</b>
# <b>rcctl enable dnscrypt_proxy</b>
</pre></blockquote>

We'll set it to listen for connections on localhost, port 40.
Note that the dnscrypt-proxy utility won't use any server (and thus won't work)
by default; you need to specify one with the <tt>-R</tt> flag.

<blockquote><pre>
# <b>rcctl set dnscrypt_proxy flags -E -m 1 -R someserver -a 127.0.0.1:40</b>
</pre></blockquote>

Replace <tt>someserver</tt> with an upstream resolver of your choice.
The package includes a list of servers in the
<tt>/usr/local/share/dnscrypt-proxy/dnscrypt-resolvers.csv</tt> file.

<p>
If you're using DNSCrypt to prevent information leakage, the following
<a href="http://man.openbsd.org/pf.conf">pf.conf(5)</a> rule may be used as
an additional safety belt:

<blockquote><pre>
block return in log on $int_if inet proto { tcp udp } from any to ! 192.168.1.1 port 53
</pre></blockquote>

As configured in a previous section, our DHCP server will give users a default
DNS server to query.
Unless they explicitly define another public DNS server, all the outgoing
lookups should be encrypted.
This PF rule will block any outgoing connections on port 53 if they aren't
destined for our DNS cache.
The <tt>log</tt> keyword is used so that the admin can easily investigate
such connections with <a href="http://man.openbsd.org/pflogd">pflogd(8)</a>.
@


1.79
log
@start new sentence on a new line
@
text
@d14 1
a14 1
<link rel="canonical" href="http://www.openbsd.org/faq/pf/example1.html">
@


1.78
log
@sync pf guide formatting with the main faq's style, fixing a few grammar
knits and broken links along the way.

input and ok tb
@
text
@d405 3
a407 2
lookups should be encrypted. This PF rule will block any outgoing connections
on port 53 if they aren't destined for our DNS cache.
@


1.77
log
@in the dnscrypt section, enable ephemeral keys and use the proper flag
for silencing the (very verbose) default log setting.

zap some <hr> overuse and format man page links like the rest of the faq.
@
text
@d18 1
a18 1
Copyright (c) 2016 tj@@openbsd.org
d47 5
a51 5
<li><a href="#background">Background</a>
<li><a href="#net"       >Networking</a>
<li><a href="#dhcp"      >DHCP</a>
<li><a href="#pf"        >Firewall</a>
<li><a href="#dns"       >DNS</a> (optional)
d67 5
a71 5
 <li>Performing network address translation (NAT)
 <li>Giving a laptop and server static IPs based on their MAC address
 <li>Handing out IP addresses via DHCP to other clients
 <li>Allowing (some) incoming connections to the server and gateway
 <li>Optionally, doing local DNS caching and DNSCrypt
d327 2
a328 2
If that's all you need, you're done and can reboot now. With that said, a
common addition to a gateway system is a DNS cache.
d340 1
a340 1
future lookups of the same address much quicker. 
@


1.76
log
@tweak dns authentication comment.
@
text
@d79 3
a81 3
<a href="https://en.wikipedia.org/wiki/Wide_area_network">WAN</a> and the
others for the <a href="https://en.wikipedia.org/wiki/Local_area_network">
LAN</a>.
a84 3
<p>
<hr>

d96 3
a98 2
We'll begin with some initial <a href="http://man.openbsd.org/hostname.if">
network configuration</a>, using a <b>192.168.1.0/24</b> subnet.
a144 3
<p>
<hr>

d147 4
a150 4
Clients need IP addresses, so we'll set <a href="http://man.openbsd.org/dhcpd">
dhcpd(8)</a> to start on boot.
Configuration is done via the <a href="http://man.openbsd.org/dhcpd.conf">
dhcpd.conf(5)</a> file.
d177 3
a179 3
You can specify another <a href="https://tools.ietf.org/html/rfc1918">
RFC 1918</a> address space here if you prefer, or even a public IP block if
you have one.
a185 3
<p>
<hr>

d188 2
a189 2
The centerpiece of this guide is the <a href="http://man.openbsd.org/pf.conf">
pf.conf(5)</a> file.
d220 1
a220 1
Now we'll break this ruleset down and explain what each section is for.
a322 3
<p>
<hr>

d366 1
a366 1
<a href="http://man.openbsd.org/unbound.conf"> unbound.conf(5)</a>.
a380 5
The dnscrypt-proxy utility won't use any server (and thus won't work) by
default; you need to specify one with the <tt>-R</tt> flag.
The
<a href="https://github.com/jedisct1/dnscrypt-proxy/blob/master/dnscrypt-resolvers.csv">
included documentation</a> has a list of supported resolvers.
d382 2
d386 1
a386 1
# <b>rcctl set dnscrypt_proxy flags -l /dev/null -R dnscrypt.eu-dk -a 127.0.0.1:40</b>
d389 5
@


1.75
log
@page titles and <title> should be the same.
@
text
@d352 1
a352 1
If you choose to use DNSCrypt, be aware that you are trusting whichever
@


1.74
log
@tweak [faq index] button and sync the pf user's guide with that style.
@
text
@d9 1
a9 1
<title>PF - Building a Router</title>
@


1.73
log
@use short form man links in the faq and fix a few broken links
@
text
@d4 6
a9 1
<title>Building an OpenBSD Router</title>
d35 1
d39 4
a42 1
<font color="#e00000">Building an OpenBSD Router</font>
a44 4
<p>
[<a href="index.html">Contents</a>]
[<a href="carp.html">Previous: Firewall Redundancy with CARP and pfsync</a>]
<p>
a45 1
<h3>Table of Contents</h3>
d48 4
a51 4
<li><a href="#net">Networking</a>
<li><a href="#dhcp">DHCP</a>
<li><a href="#pf">Firewall</a>
<li><a href="#dns">DNS</a> (optional)
d54 1
d56 1
d58 8
a65 7
First, we'll define what our router (also called a gateway) will actually do
in this context, since everyone has different requirements. In this example,
there are three computers that need to share an internet connection. One of
them is a web server that needs to be accessed remotely, but otherwise we
don't want any of the local systems open to the internet. The router will
be doing the following things:
<p>
d67 5
a71 5
<li>Performing network address translation (NAT)
<li>Giving a laptop and server static IPs based on their MAC address
<li>Handing out IP addresses via DHCP to other clients
<li>Allowing (some) incoming connections to the server and gateway
<li>Optionally, doing local DNS caching and DNSCrypt
d73 9
a81 10
<p>
We'll assume you've already got a standard OpenBSD installation. This guide
will be using hardware with four NICs that use the
<a href="http://man.openbsd.org/em">em(4)</a> driver,
so replace <tt>em0</tt>, <tt>em1</tt>, <tt>em2</tt> and <tt>em3</tt> with
the names of the interfaces in your system. Using this example, <tt>em0</tt>
will be for the
<a href="https://en.wikipedia.org/wiki/Wide_area_network">WAN</a>
and the others for the
<a href="https://en.wikipedia.org/wiki/Local_area_network">LAN</a>.
d84 1
d87 1
d89 11
a99 9
Two possible hardware setups are described on this page. The first details
an "all-in-one" solution in which clients will be directly connected to the
gateway, without the need for a switch. Software-based switching is done by
<a href="../faq6.html#Bridge">bridging</a> NICs with the
<a href="http://man.openbsd.org/vether">vether(4)</a>
virtual interface. The second details the same thing, but using an external
(hardware) switch, rather than bridging. Only two interfaces are required in
that case. We'll begin with some initial
<a href="http://man.openbsd.org/hostname.if">
d101 1
a101 1
<p>
d108 2
a109 3
<p>
If you plan on using 
<a href="http://man.openbsd.org/bridge">bridge(4)</a>
d111 1
a111 1
<p>
d116 1
a116 1
<p>
d118 1
a118 1
<p>
d130 1
a130 1
<p>
d133 1
d137 1
a137 1
<p>
d140 1
a140 1
<p>
d144 1
a144 1
<p>
d146 1
d149 1
d151 4
a154 4
Clients need IP addresses, so we'll set 
<a href="http://man.openbsd.org/dhcpd">dhcpd(8)</a>
to start on boot. Configuration is done via the
<a href="http://man.openbsd.org/dhcpd.conf">
d156 1
a156 1
<p>
d162 1
a162 1
<p>
d164 1
a164 1
<p>
d180 1
a180 1
<p>
d183 8
a190 5
RFC 1918</a> address space here if you prefer, or even a public IP block
if you have one. Using this example, clients will query a local DNS server,
detailed in a later section. If you don't plan on using a local DNS server,
replace <tt>192.168.1.1</tt> in the <tt>domain-name-servers</tt> line with the
address of your preferred upstream DNS server (<tt>8.8.8.8</tt>, for example).
d193 1
d195 5
a199 4
The centerpiece of this guide is the
<a href="http://man.openbsd.org/pf.conf">pf.conf(5)</a>
file. It's highly recommended to familiarize yourself with it, and
<a href="index.html">PF in general</a>, before copying this example.
d201 1
a201 1
<p>
d205 1
a205 1
<p>
d207 1
a207 1
<p>
d227 1
a227 1
<p>
d229 1
a229 1
<p>
d233 1
a233 1
<p>
d235 2
a236 1
easier. Macros can be referenced throughout the ruleset after being defined.
d238 5
a242 4
virtual ethernet interface. If you're using an external switch instead of
<a href="http://man.openbsd.org/bridge">bridge(4)</a>,
replace <tt>{ vether0 em1 em2 em3 }</tt> with your secondary interface name.
<p>
d249 1
a249 1
<p>
d252 1
a252 1
<p>
d258 1
a258 1
<p>
d261 5
a265 10
a TCP RST or be silently dropped. The <tt>loginterface</tt> is exactly
what it sounds like: which interface should have packet and byte statistics
collection enabled. These statistics can be viewed with the <tt>pfctl -si</tt>
command. In this case, we're using the <tt>egress</tt> group rather than
a specific interface. The <tt>egress</tt> keyword automatically chooses the
interface that holds the default route, or the <tt>em0</tt> WAN interface in
our example. Finally, <tt>skip</tt> allows you to completely omit a given
interface from packet processing. The firewall will ignore loopback traffic
on the
<a href="http://man.openbsd.org/lo">lo(4)</a>
d267 7
a273 1
<p>
d278 1
a278 1
<p>
d281 3
a283 3
interface between the LAN and the public internet. For a more detailed
explanation of <tt>match</tt> rules and their different options, refer to the
<a href="http://man.openbsd.org/pf.conf">pf.conf(5)</a>
d285 1
a285 1
<p>
d290 1
a290 1
<p>
d292 4
a295 3
appear to be from the list of unroutable addresses we defined. Such packets
were likely sent due to misconfiguration, or possibly as part of a spoofing
attack. Similarly, our clients should not attempt to connect to such addresses.
d297 1
a297 1
<p>
d301 5
a305 5
<p>
The firewall will set a "default deny" policy for all traffic. This means we
will only allow incoming and outgoing connections that we explicitly put in
our ruleset.
<p>
d309 1
a309 1
<p>
d311 4
a314 3
want to <tt>pass</tt> in our setup. This line allows outgoing IPv4 traffic
from both the gateway itself and the LAN clients.
<p>
d318 1
a318 1
<p>
d320 1
a320 1
<p>
d325 1
a325 1
<p>
d328 3
a330 1
to our machine at 192.168.1.2. This is merely an example of port forwarding.
d333 1
d335 1
d337 4
a340 3
the internet, while being protected by the firewall. If that's all you need,
you're done and can reboot now. With that said, a common addition to a
gateway system is a DNS cache.
d345 7
a351 6
<a href="https://dnscrypt.org/">dnscrypt-proxy</a>, installed from the OpenBSD
<a href="faq15.html">package system</a>. When clients issue a DNS query,
they'll first hit the cache. If unbound doesn't have the answer, it goes out
(via an encrypted channel, if using dnscrypt-proxy) to the upstream resolver
that you've configured. Results are then fed to the client and cached for a
period of time, making future lookups of the same address much quicker. 
d354 1
a354 1
<p>
d359 1
a359 1
<p>
d361 1
a361 1
<p>
d375 1
a375 1
<p>
d377 9
a385 8
<a href="http://man.openbsd.org/unbound.conf">
unbound.conf(5)</a>. Now we'll set up dnscrypt-proxy. It's <b>not</b> part
of the base system, so you need to install it from packages. If you'd like
to use a normal authoritative DNS server instead, replace <tt>127.0.0.1@@40</tt>
in the <tt>forward-addr</tt> line with the address of the server you want
to use (<tt>8.8.8.8@@53</tt>, for example). Otherwise, it's just a matter of
installing the tool and choosing a resolver.
<p>
d391 1
a391 1
<p>
d393 2
a394 1
default; you need to specify one with the <tt>-R</tt> flag. The
d396 3
a398 3
included documentation</a> has a list of supported resolvers. We'll set it
to listen for connections on localhost, port 40.
<p>
d402 1
a402 1
<p>
d404 3
a406 2
<a href="http://man.openbsd.org/pf.conf">pf.conf(5)</a>
rule may be used as an additional safety belt:
d410 1
a410 1
<p>
d412 4
a415 3
DNS address to query. Unless they explicitly define another public DNS server,
all the outgoing lookups should be encrypted. This PF rule will block any
outgoing connections on port 53 if they aren't destined for our DNS cache.
d417 2
a418 2
such connections with
<a href="http://man.openbsd.org/pflogd">pflogd(8)</a>.
d423 5
a427 8
not needed. Also note that it will need to be changed <i>back</i> to an actual
resolver when using <a href="../faq4.html#bsd.rd">bsd.rd</a> for network-based
upgrades if you do so.
<p>
<hr>
<p>
[<a href="carp.html">Previous: Firewall Redundancy with CARP and pfsync</a>]
[<a href="index.html">Contents</a>]
@


1.72
log
@new openbsd faq style. joint with tj and validator.w3.org
@
text
@d69 1
a69 1
<a href="http://man.openbsd.org/?query=em">em(4)</a> driver,
d85 1
a85 1
<a href="http://man.openbsd.org/?query=vether">vether(4)</a>
d89 1
a89 1
<a href="http://man.openbsd.org/?query=hostname.if">
d100 1
a100 1
<a href="http://man.openbsd.org/?query=bridge">bridge(4)</a>
d140 1
a140 1
<a href="http://man.openbsd.org/?query=dhcpd">dhcpd(8)</a>
d142 1
a142 1
<a href="http://man.openbsd.org/?query=dhcpd.conf">
d180 1
a180 1
<a href="http://man.openbsd.org/?query=pf.conf">pf.conf(5)</a>
d221 1
a221 1
<a href="http://man.openbsd.org/?query=bridge">bridge(4)</a>,
d251 1
a251 1
<a href="http://man.openbsd.org/?query=lo">lo(4)</a>
d263 1
a263 1
<a href="http://man.openbsd.org/?query=pf.conf">pf.conf(5)</a>
d316 1
a316 1
<a href="http://man.openbsd.org/?query=unbound">unbound(8)</a>.
d349 1
a349 1
<a href="http://man.openbsd.org/?query=unbound.conf">
d374 1
a374 1
<a href="http://man.openbsd.org/?query=pf.conf">pf.conf(5)</a>
d386 1
a386 1
<a href="http://man.openbsd.org/?query=pflogd">pflogd(8)</a>.
@


1.71
log
@add a small sprinkling of css to improve readability in the faq, ok tj@@ tb@@
@
text
@d11 1
d28 1
d30 1
d32 4
a35 2
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif" border="0">
</a>
d37 1
a38 1
[<a href="index.html">Contents</a>]
d40 1
a40 2
<h1><font color="#e00000">Building an OpenBSD Router</font></h1>
<hr>
d59 1
d65 1
@


1.70
log
@fix URIs, the / before querystring is not optional,
if not fixed up by browsers the server returns 400 Bad Request.
@
text
@d7 2
@


1.69
log
@change http://www.openbsd.org/cgi-bin/man.cgi to be http://man.openbsd.org
this points stuff to the new place and gets us ready to deprecate the old
place we did this.
@
text
@d61 1
a61 1
<a href="http://man.openbsd.org?query=em">em(4)</a> driver,
d77 1
a77 1
<a href="http://man.openbsd.org?query=vether">vether(4)</a>
d81 1
a81 1
<a href="http://man.openbsd.org?query=hostname.if">
d92 1
a92 1
<a href="http://man.openbsd.org?query=bridge">bridge(4)</a>
d132 1
a132 1
<a href="http://man.openbsd.org?query=dhcpd">dhcpd(8)</a>
d134 1
a134 1
<a href="http://man.openbsd.org?query=dhcpd.conf">
d172 1
a172 1
<a href="http://man.openbsd.org?query=pf.conf">pf.conf(5)</a>
d213 1
a213 1
<a href="http://man.openbsd.org?query=bridge">bridge(4)</a>,
d243 1
a243 1
<a href="http://man.openbsd.org?query=lo">lo(4)</a>
d255 1
a255 1
<a href="http://man.openbsd.org?query=pf.conf">pf.conf(5)</a>
d308 1
a308 1
<a href="http://man.openbsd.org?query=unbound">unbound(8)</a>.
d341 1
a341 1
<a href="http://man.openbsd.org?query=unbound.conf">
d366 1
a366 1
<a href="http://man.openbsd.org?query=pf.conf">pf.conf(5)</a>
d378 1
a378 1
<a href="http://man.openbsd.org?query=pflogd">pflogd(8)</a>.
@


1.68
log
@typo in pf rule; spotted by nils frohberg <nilsf at tako.de>
@
text
@d61 1
a61 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=em">em(4)</a> driver,
d77 1
a77 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vether">vether(4)</a>
d81 1
a81 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hostname.if">
d92 1
a92 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge">bridge(4)</a>
d132 1
a132 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhcpd">dhcpd(8)</a>
d134 1
a134 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhcpd.conf">
d172 1
a172 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf">pf.conf(5)</a>
d213 1
a213 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge">bridge(4)</a>,
d243 1
a243 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo">lo(4)</a>
d255 1
a255 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf">pf.conf(5)</a>
d308 1
a308 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=unbound">unbound(8)</a>.
d341 1
a341 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=unbound.conf">
d366 1
a366 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf">pf.conf(5)</a>
d378 1
a378 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pflogd">pflogd(8)</a>.
@


1.67
log
@mention that interface stats can be viewed with "pfctl -si"
@
text
@d369 1
a369 1
block return log in on $int_if inet proto { tcp udp } from any to ! 192.168.1.1 port 53
@


1.66
log
@TJ strikes again:

faq10.html:
- mention rcctl as an alternative to editing rc.conf.local directly
- blowfish uses eight rounds, not six (redo example too)

faq6.html:
- remove redundant info, link to more detailed article
- fix redundant pf line, keep state is default now
- i don't think pxe was "recently" introduced
- replace mention of "draft n" with just n

faq8.html:
- replace more ugly tables

faq9.html:
- modernize disk device name examples

...and of course the usual healthy dose of sprinkling small
improvements here and there.
@
text
@d10 1
a10 1
Copyright (c) 2016 tj@@mrsk.me
d236 7
a242 6
collection enabled. In this case, we're using the <tt>egress</tt> group
rather than a specific interface. The <tt>egress</tt> keyword automatically
chooses the interface that holds the default route, or the <tt>em0</tt> WAN
interface in our example. Finally, <tt>skip</tt> allows you to completely
omit a given interface from packet processing. The firewall will ignore
loopback traffic on the
@


1.65
log
@Adjust the resolv.conf suggestion; pointing a firewall's resolv.conf at
a recursive server running on the same machine often doesn't help all
that much traffic-wise, and it makes things hard for OS updates where
/etc/resolv.conf is copied from the installed system to the ramdisk.
resolv.conf problem with updates pointed out by Jiri B, diff from TJ.
@
text
@d76 1
a76 1
bridging NICs with the
@


1.64
log
@swap "option routers" line for correct dns line

reported by Pablo Mendez Hernandez
@
text
@d379 6
a384 15
Finally, we want the gateway to use the caching resolver for lookups too.
<p>
<blockquote><pre>
# <b>echo 'nameserver 127.0.0.1' > /etc/resolv.conf</b>
# <b>echo 'supersede domain-name-servers 127.0.0.1;' >> /etc/dhclient.conf</b>
</pre></blockquote>
<p>
In this case, we'll append the <tt>supersede domain-name-servers</tt> line to
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhclient.conf">
dhclient.conf(5)</a> so that it
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhcp-options">
doesn't overwrite</a> the nameserver setting next time
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhclient">
dhclient(8)</a> polls the upstream DHCP server. If you're using a static IP
for the gateway's external interface, this shouldn't be needed.
@


1.63
log
@Replace decade-old 'firewall for home or small office' page with a new
modern guide written from scratch. From tj@@mrsk.me

with input from sthen@@
@
text
@d166 1
a166 1
replace <tt>192.168.1.1</tt> in the <tt>option routers</tt> line with the
@


1.62
log
@
rev for 5.8, mostly removing manpath part of man page urls
@
text
@d4 2
a5 1
<title>PF: Example: Firewall for Home or Small Office</title>
a6 1
<meta name="description"   content="the OpenBSD FAQ page">
a8 1

d10 1
a10 1
Copyright (c) 2003, 2004 Joel Knight <enabled@@myrealbox.com>
a24 1

a25 3
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->

a31 1

d33 1
a33 1
<h1><font color="#e00000">PF: Example: Firewall for Home or Small Office</font></h1>
a34 1

d37 5
a41 13
<li><a href="#scenario">The Scenario</a>
	<ul>
	<li><a href="#network">The Network</a>
	<li><a href="#objective">The Objective</a>
	<li><a href="#prep">Preparation</a>
	</ul>
<li><a href="#ruleset">The Ruleset</a>
	<ul>
	<li><a href="#macros">Macros</a>
	<li><a href="#options">Options</a>
	<li><a href="#rules">Firewall Rules</a>
	</ul>
<li><a href="#allrules">The Complete Ruleset</a>
a42 1

d44 46
a89 22

<h2 id="scenario">The Scenario</h2>
In this example, PF is running on an OpenBSD machine acting as a
firewall and NAT gateway for a small network in a home or office. The
overall objective is to provide Internet access to the network and to
allow limited access to the firewall machine from the Internet, and 
expose an internal web server to the external Internet.  This document
will go through a complete ruleset that does just that.

<h3 id="network">The Network</h3>
The network is setup like this:

<pre>
    
  [ COMP1 ]    [ COMP3 ]
      |            |                               
   ---+------+-----+------- xl0 [ OpenBSD ] fxp0 -------- ( Internet )
             |
         [ COMP2 ]

</pre>

d91 3
a93 6
There are a number of computers on the internal network; the diagram
shows three but the actual number is irrelevant.  These computers are
regular workstations used for web surfing, email, chatting, etc., except
for COMP3 which is also running a small web server.
The internal network is using the 192.168.0.0 / 255.255.255.0 network block.

a94 53
The OpenBSD firewall is a Celeron 300 with two network cards: a 3com
3c905B (<tt>xl0</tt>) and an Intel EtherExpress Pro/100 (<tt>fxp0</tt>).
The firewall has
a cable connection to the Internet and is using NAT to share this
connection with the internal network. The IP address on the external
interface is dynamically assigned by the Internet Service Provider.

<h3 id="objective">The Objective</h3>
The objectives are:
<ul>
<li>Provide unrestricted Internet access to each internal computer.
<li>Use a "default deny" filter ruleset.
<li>Allow the following incoming traffic to the firewall from the
Internet:
	<ul>
	<li>SSH (TCP port 22): this will be used for external maintenance of
	the firewall machine.
	<li>Auth/Ident (TCP port 113): used by some services such as SMTP
	and IRC.
	<li>ICMP Echo Requests: the ICMP packet type used by
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ping&amp;sektion=8"
>ping(8)</a>.
	</ul>
<li>Redirect TCP port 80 connection attempts (which are attempts to
access a web server) to computer COMP3.
Also, permit TCP port 80 traffic destined for COMP3 through the
firewall.
<li>Log filter statistics on the external interface.
<li>By default, reply with a TCP RST or ICMP Unreachable for blocked
packets.
<li>Make the ruleset as simple and easy to maintain as possible.
</ul>

<h3 id="prep">Preparation</h3>
This document assumes that the OpenBSD host has been properly configured
to act as a router, including verifying IP networking setup, Internet
connectivity, and setting the 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=3"
>sysctl(3)</a> variables <tt>net.inet.ip.forwarding</tt> and/or 
<tt>net.inet6.ip6.forwarding</tt> to "<tt>1</tt>".
You must also have enabled PF using 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8"
>pfctl(8)</a> or by setting the appropriate variable in
<tt>/etc/rc.conf.local</tt>.
PF is enabled by default on OpenBSD 4.6 and newer releases.

<h2 id="ruleset">The Ruleset</h2>
The following will step through a ruleset that will accomplish the above
goals.

<h3 id="macros">Macros</h3>
The following macros are defined to make maintenance and reading of
the ruleset easier:
d96 2
a97 6
int_if="xl0"

tcp_services="{ 22, 113 }"
icmp_types="echoreq"

comp3="192.168.0.3"
a98 1

d100 1
a100 14
The first line defines the internal network interface that filtering
will happen on.
By defining it here, if we have to move this system to another 
machine with different hardware, we can change only this line, and 
the rest of the rule set will be still usable.
(For this example, the external interface will be handled by using the
<tt>egress</tt> interface group.
This is automatically set on any interface holding a default route,
in this case, fxp0).
The second and third lines list the TCP port numbers of the services
that will be opened up to the Internet (SSH and ident/auth) and the ICMP
packet types that will be accepted at the firewall machine. 
Finally, the last line defines the IP address of COMP3.

a101 9
<b>Note</b>: If the Internet connection required
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=4"
>PPPoE</a>, then filtering and NAT would have to take place on the
<tt>pppoe0</tt> interface and <i>not</i> on the egress interface (<tt>fxp0</tt>).

<h3 id="options">Options</h3>
The following two options will set the default response for
<tt>block</tt> filter rules and turn statistics logging "on" for the
external interface:
d103 9
a111 2
set block-policy return
set loginterface egress
a112 1

d114 2
a115 27
Every Unix system has a "loopback" interface.
It's a virtual network interface that is used by applications to talk to
each other inside the system.
On OpenBSD, the loopback interface is 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4"
>lo(4)</a>.
It is considered best practice to disable all filtering on loopback
interfaces.
Using <a href="options.html#skip">set skip</a> will accomplish this.
<blockquote><pre>
set skip on lo
</pre></blockquote>
<!-- XXX this should be interface groups, but PF (at least up to
4.8) just does a substring match on the interface name -->
Note that we are skipping for all <tt>lo</tt> interfaces, this
way, should we later add additional loopback interfaces, we won't have
to worry about altering this portion of our existing rules file.

<h3 id="rules">Firewall Rules</h3>

We will start with rules to support the use of
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8"
>ftp-proxy(8)</a> so that FTP clients on the local network can
connect to FTP servers on the Internet.
This works by dynamically inserting rules when an ftp connection
is made.
This is done using an <a href="anchors.html">anchor</a>:
d117 1
a117 1
anchor "ftp-proxy/*"
a118 1

d120 3
a122 2
Now we will add the rule needed to divert FTP connections so
they are seen by ftp-proxy(8):
d124 1
a124 2
pass in quick on $int_if inet proto tcp to any port ftp \
    divert-to 127.0.0.1 port 8021
a125 1

d127 41
a167 8
This rule will intercept FTP connections to port 21 and divert them
to an ftp-proxy(8) instance running on port 8021 and, through the use
of the <tt>quick</tt> keyword, matching packets will not be further
checked against the rest of the ruleset.
If users regularly connect to FTP servers on other ports, then a
list should be used to specify the destination port, for example:
<tt>to any port { 21, 2121 }</tt>.

d169 7
a175 6
Note that both the <a href="anchors.html">anchor</a> and the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8"
>ftp-proxy(8)</a> divert rule need to be located before any
<tt>match</tt> rules for NAT or the ftp-proxy(8) will not work
as expected.

d177 3
a179 7
Now we move on to some <tt>match</tt> rules.
By itself, a <tt>match</tt> rule doesn't determine whether or
not a packet is allowed to pass.
Instead, packets matching this rule will have the parameters
remembered; they will then be used in any <tt>pass</tt> rules
which handle these packets.

d181 1
a181 5
This is powerful: parameters such as <a href="nat.html">NAT</a>
or queueing can be applied to certain
classes of packet, and then access permissions can be defined
separately.

a182 2
To perform NAT for the entire internal network the following
<tt>match</tt> rule is used:
d184 9
d194 7
a201 1

d203 1
a203 6
In this case, the "<tt>!(egress:network)</tt>" could easily be
replaced by a "<tt>$int_if:network</tt>", but if you added multiple
internal interfaces, you would have to add additional NAT rules,
whereas with this structure, NAT will be handled on all protected
interfaces.

d205 3
a207 6
Since the IP address on the external interface is assigned dynamically,
parenthesis are placed around the translation interface so that PF
will notice when the address changes.
The :0 suffix is used so that, if the external interface has multiple
addresses, only the first address is used for translation.

d209 6
a214 4
Lastly, the protocol family <tt>inet</tt> (IPv4) is specified.
This avoids translating any <tt>inet6</tt> (IPv6) packets which may
be received.

a215 2
Now the rules to control access permissions.
Start with the default deny:
d217 4
a220 1
block in log
a221 1

d223 8
a230 7
At this point all traffic attempting to come into an interface will
be blocked, even that from the internal network.
These packets will also be logged.
Later rules will open up the firewall as per
the objectives above as well as open up any necessary virtual
interfaces.

d232 11
a242 1
Keep in mind, pf can block traffic coming into or leaving out of an
d244 46
a289 7
It can simplify your life if you choose to filter traffic in one
direction, rather than trying to keep it straight when filtering some
things in, and some things out.
In our case, we'll opt to filter the inbound traffic, but once the
traffic is permitted into an interface, we won't try to obstruct it
leaving, so we will do the following:

d291 2
a292 1
pass out quick
a293 4

By using <tt>quick</tt>, outbound packets can avoid being checked
against the following rules, improving performance.

d295 23
a317 2
It is good to use the <a href="filter.html#antispoof">spoofed address
protection</a>:
d319 2
a320 1
antispoof quick for { lo $int_if }
d322 11
d334 13
a347 4
Now open the ports used by those network services that will be available
to the Internet.
First, the traffic that is destined to the firewall itself:

d349 3
a351 2
pass in on egress inet proto tcp from any to (egress) \
    port $tcp_services
a352 1

d354 5
a358 6
Specifying the network ports in the macro <tt>$tcp_services</tt> makes
it simple to open additional services to the Internet by simply editing
the macro and reloading the ruleset. UDP services can also be opened up
by creating a <tt>$udp_services</tt> macro and adding a filter rule,
similar to the one above, that specifies <tt>proto udp</tt>.

a359 6
The next rule catches any attempts by someone on the Internet to
connect to TCP port 80 on the firewall. 
Legitimate attempts to access this port will be from users trying to
access the network's web server.
These connection attempts need to be redirected to COMP3:

d361 1
a361 1
pass in on egress inet proto tcp to (egress) port 80 rdr-to $comp3
a362 1

d364 3
a366 1
ICMP traffic needs to be passed:
d368 1
a368 1
pass in inet proto icmp all icmp-type $icmp_types
a369 1

d371 9
a379 5
Similar to the <tt>$tcp_services</tt> macro, the <tt>$icmp_types</tt>
macro can easily be edited to change the types of ICMP packets that will
be allowed to reach the firewall. Note that this rule applies to all
network interfaces.

a380 5
Now traffic must be passed to and from the internal network.
We'll assume that the users on the internal network know what
they are doing and aren't going to be causing trouble.  This is not
necessarily a valid assumption; a much more restrictive ruleset would
be appropriate for many environments.
d382 2
a383 1
pass in on $int_if
a384 1

d386 10
a395 54
TCP, UDP, and ICMP traffic is permitted to exit the firewall towards the
Internet due to the earlier "<tt>pass out</tt>" line.
State information is kept so that the returning packets will be passed
back in through the firewall.

<h2 id="allrules">The Complete Ruleset</h2>
<table border=0 width="650">
<tr><td nowrap bgcolor="#EEEEEE">
<pre>
# macros

int_if="xl0"

tcp_services="{ 22, 113 }"
icmp_types="echoreq"

comp3="192.168.0.3"

# options

set block-policy return
set loginterface egress
set skip on lo

# FTP Proxy rules

anchor "ftp-proxy/*"

pass in quick on $int_if inet proto tcp to any port ftp \
    divert-to 127.0.0.1 port 8021

# match rules

match out on egress inet from !(egress:network) to any nat-to (egress:0)

# filter rules

block in log
pass out quick

antispoof quick for { lo $int_if }

pass in on egress inet proto tcp from any to (egress) \
    port $tcp_services

pass in on egress inet proto tcp to (egress) port 80 rdr-to $comp3

pass in inet proto icmp all icmp-type $icmp_types

pass in on $int_if
</pre>
</td></tr>
</table>

a398 1

d401 1
a401 1
</html> 
@


1.61
log
@Clean up meta tags.

name=distribution, name=keywords, and name=resource-type have no effect
in modern search engines and just clutter up the page source.

From Pavel Plamenov.
@
text
@d131 1
a131 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.7"
d204 1
a204 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.7"
d233 1
a233 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.7"
@


1.60
log
@Add 'link rel="canonical"' to pages, acting as a hint to search engines
to list the copies on www.openbsd.org rather than mirrors.

From Carlin Bingham, ok millert@@ nick@@
@
text
@a5 1
<meta name="resource-type" content="document">
a6 2
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
@


1.59
log
@
updates for 5.7
@
text
@d10 1
@


1.58
log
@
5.5->5.6 which I forgot and Jonathan Thornburg (jthorn at astro dot
indiana dot edu) reminded me of, but also sent a diff for, thanks!
@
text
@d133 1
a133 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.6"
d206 1
a206 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.6"
d235 1
a235 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.6"
@


1.57
log
@Convert the pf faq to use id="" instead of "a name=""></a>.
@
text
@d133 1
a133 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.5"
d206 1
a206 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.5"
d235 1
a235 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.5"
@


1.56
log
@
update for 5.5
@
text
@d63 1
a63 2
<a name="scenario"></a>
<h2>The Scenario</h2>
d71 1
a71 2
<a name="network"></a>
<h3>The Network</h3>
d99 1
a99 2
<a name="objective"></a>
<h3>The Objective</h3>
d125 1
a125 2
<a name="prep"></a>
<h3>Preparation</h3>
d138 1
a138 2
<a name="ruleset"></a>
<h2>The Ruleset</h2>
d142 1
a142 2
<a name="macros"></a>
<h3>Macros</h3>
d175 1
a175 2
<a name="options"></a>
<h3>Options</h3>
d203 1
a203 2
<a name="rules"></a>
<h3>Firewall Rules</h3>
d375 1
a375 2
<a name="allrules"></a>
<h2>The Complete Ruleset</h2>
@


1.55
log
@
www@@ removal, normalize footers.
@
text
@d137 1
a137 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.4"
d214 1
a214 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.4"
d243 1
a243 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.4"
d258 1
a258 1
or <a href="queueing.html">queueing</a> can be applied to certain
@


1.54
log
@
update for 5.4
@
text
@a4 1
<link rev="made" href="mailto:www@@openbsd.org">
a437 6
<hr>
<a href="index.html"><img height="24" width="24" src="../../images/back.gif" border="0" alt="[back]"></a> 
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>$OpenBSD: example1.html,v 1.53 2013/05/01 13:21:45 nick Exp $</small>

@


1.53
log
@
updates for 5.3
@
text
@d138 1
a138 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.3"
d215 1
a215 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.3"
d244 1
a244 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.3"
d443 1
a443 1
<small>$OpenBSD: example1.html,v 1.52 2012/11/01 15:06:36 nick Exp $</small>
@


1.52
log
@
enter 5.2
@
text
@d138 1
a138 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.2"
d215 1
a215 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.2"
d244 1
a244 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.2"
d443 1
a443 1
<small>$OpenBSD: example1.html,v 1.51 2012/10/02 20:35:47 sthen Exp $</small>
@


1.51
log
@Take synproxy out of the rdr-to example, it's for special cases only.
Pointed out in a discussion on misc@@ by Tyler Morgan.
@
text
@d138 1
a138 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.1"
d215 1
a215 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.1"
d244 1
a244 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.1"
d443 1
a443 1
<small>$OpenBSD: example1.html,v 1.50 2012/08/17 00:20:23 nick Exp $</small>
@


1.50
log
@
improvements from robert at peichaer dotorg, using "egress" more
consistently through example.
@
text
@d353 1
a353 2
pass in on egress inet proto tcp to (egress) port 80 \
    rdr-to $comp3 synproxy state
a356 5
For an added bit of safety, we'll make use of the 
<a href="filter.html#synproxy">TCP SYN Proxy</a> to further protect the
web server.

<p>
d425 1
a425 2
pass in on egress inet proto tcp to (egress) port 80 \
    rdr-to $comp3 synproxy state
d443 1
a443 1
<small>$OpenBSD: example1.html,v 1.49 2012/05/11 11:20:04 nick Exp $</small>
@


1.49
log
@
forgot to actually COMMIT these 5.1 changes.  *sigh*
@
text
@d164 2
a165 2
By defining them here, if we have to move this system to another 
machine with different hardware, we can change only those two lines, and 
d180 1
a180 1
<tt>pppoe0</tt> interface and <i>not</i> on <tt>fxp0</tt>.
d189 1
a189 1
set loginterface fxp0
d407 1
a407 1
set loginterface fxp0
d419 1
a419 1
match out on egress inet from !(egress) to any nat-to (egress:0)
d450 1
a450 1
<small>$OpenBSD: example1.html,v 1.48 2011/11/02 01:01:47 nick Exp $</small>
@


1.48
log
@
rev man page references to 5.0
@
text
@d138 1
a138 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.0"
d215 1
a215 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.0"
d244 1
a244 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+5.0"
d450 1
a450 1
<small>$OpenBSD: example1.html,v 1.47 2011/11/01 13:24:27 sthen Exp $</small>
@


1.47
log
@In 5.0, ftp-proxy and tftp-proxy use divert-to. Update faq accordingly.
@
text
@d138 1
a138 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.9"
d215 1
a215 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.9"
d244 1
a244 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.9"
d450 1
a450 1
<small>$OpenBSD: example1.html,v 1.46 2011/05/01 12:57:11 nick Exp $</small>
@


1.46
log
@
updates for 4.9
@
text
@d226 1
a226 1
Now we will add the rule needed to redirect FTP connections so
d230 1
a230 1
    rdr-to 127.0.0.1 port 8021
d234 1
a234 1
This rule will intercept FTP connections to port 21 and redirect them
d245 1
a245 1
>ftp-proxy(8)</a> redirect rule need to be located before any
d415 1
a415 1
    rdr-to 127.0.0.1 port 8021
d450 1
a450 1
<small>$OpenBSD: example1.html,v 1.45 2010/11/03 08:19:24 sthen Exp $</small>
@


1.45
log
@remove translation/scrub from the index at the top of the page;
scrub pointed out by Przemyslaw Pawelczyk on misc@@
@
text
@d138 1
a138 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.8"
d215 1
a215 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.8"
d244 1
a244 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.8"
d450 1
a450 1
<small>$OpenBSD: example1.html,v 1.44 2010/11/01 09:53:51 nick Exp $</small>
@


1.44
log
@
update to 4.8
@
text
@d57 1
a57 4
	<li><a href="#scrub">Scrub</a>
	<li><a href="#nat">Network Address Translation</a>
	<li><a href="#rdr">Redirection</a>
	<li><a href="#filter">Filter Rules</a>
d206 1
a206 1
4.7) just does a substring match on the interface name -->
d211 1
a211 4
<a name="scrub"></a>
<a name="nat"></a>
<a name="rdr"></a>
<a name="filter"></a>
d450 1
a450 1
<small>$OpenBSD: example1.html,v 1.43 2010/07/19 23:43:08 sthen Exp $</small>
@


1.43
log
@Fix the ftp-proxy example by moving the rdr-to rule earlier and
using 'pass in quick'.  From Rodney Hopkins, thanks!
@
text
@d141 1
a141 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.7"
d221 1
a221 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.7"
d250 1
a250 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.7"
d456 1
a456 1
<small>$OpenBSD: example1.html,v 1.42 2010/05/24 12:15:02 sthen Exp $</small>
@


1.42
log
@Rework for nat-to/rdr-to, missed with previous commit.
Thanks jsing@@ for looking over and making suggestions.
@
text
@d220 37
a256 1
The example will start with some <tt>match</tt> rules.
a334 12
We will be using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.7"
>ftp-proxy(8)</a> so that FTP clients on the local network can
connect to FTP servers on the Internet.
This works by dynamically inserting rules when an ftp connection
is made.
This is done using an <a href="anchors.html">anchor</a>:
<blockquote><pre>
anchor "ftp-proxy/*"
</pre></blockquote>

<p>
a351 15
Now we will add the rule needed to redirect FTP connections so
they are seen by ftp-proxy(8):
<blockquote><pre>
pass in on $int_if inet proto tcp to any port ftp \
    rdr-to 127.0.0.1 port 8021
</pre></blockquote>

<p>
This rule will intercept FTP connections to port 21 and redirect them
to an ftp-proxy(8) instance running on port 8021.
If users regularly connect to FTP servers on other ports, then a
list should be used to specify the destination port, for example:
<tt>to any port { 21, 2121 }</tt>.

<p>
d416 7
a433 2
anchor "ftp-proxy/*"

a436 3
pass in on $int_if inet proto tcp to any port ftp \
    rdr-to 127.0.0.1 port 8021

d456 1
a456 1
<small>$OpenBSD: example1.html,v 1.41 2010/05/19 13:25:16 sthen Exp $</small>
@


1.41
log
@Update the PF faq for 4.7 changes.
@
text
@d155 6
a160 8
<blockquote>
<tt>
ext_if="fxp0"<br>
int_if="xl0"<br>
<br>
tcp_services="{ 22, 113 }"<br>
icmp_types="echoreq"<br>
<br>
d162 1
a162 2
</tt>
</blockquote>
d165 2
a166 2
The first two lines define the network interfaces that filtering will
happen on.
d170 5
a174 1
The third and fourth lines list the TCP port numbers of the services
d181 1
a181 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8"
d183 1
a183 1
<tt>tun0</tt> interface and <i>not</i> on <tt>fxp0</tt>.
d190 4
a193 6
<blockquote>
<tt>
set block-policy return<br>
set loginterface $ext_if
</tt>
</blockquote>
d205 1
a205 2
<blockquote>
<tt>
d207 4
a210 3
</tt>
</blockquote>
Note that we are skipping the entire interface group <tt>lo</tt>, this
d215 11
a225 8
<h3>Scrub</h3>
There is no reason not to use the recommended scrubbing of all incoming
traffic, so this is a simple one-liner:
<blockquote>
<tt>
match in all scrub (no-df)
</tt>
</blockquote>
d227 7
a233 2
<a name="nat"></a>
<h3>Network Address Translation</h3>
d235 4
a238 6
<tt>nat</tt> rule is used:
<blockquote>
<tt>
nat on $ext_if from !($ext_if) to any -&gt; ($ext_if)
</tt>
</blockquote>
d241 5
a245 4
The "<tt>!($ext_if)</tt>" could easily be replaced by a
"<tt>$int_if</tt>" in this case, but if you added multiple internal
interfaces, you would have to add additional NAT rules, whereas with
this structure, NAT will be handled on all protected interfaces.
d251 2
d255 3
a257 29
As we will want to have the FTP proxy working, we'll put the NAT 
<a href="anchors.html">anchor</a> in, too:

<blockquote>
<tt>
nat-anchor "ftp-proxy/*"
</tt>
</blockquote>



<a name="rdr"></a>
<h3>Redirection</h3>
The first redirection rules needed are for 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.7"
>ftp-proxy(8)</a> so that FTP clients on the local network can connect
to FTP servers on the Internet.
<blockquote>
<tt>
rdr-anchor "ftp-proxy/*"<br>
rdr on $int_if proto tcp from any to any port 21 -&gt; 127.0.0.1 port 8021
</tt>
</blockquote>

<p>
Note that this rule will only catch FTP connections to port 21. If users
regularly connect to FTP servers on other ports, then a list should be
used to specify the destination port, for example: <tt>from any to any
port { 21, 2121 }</tt>.
d260 5
a264 20
The last redirection rule catches any attempts by someone on the
Internet to connect to TCP port 80 on the firewall. 
Legitimate attempts to access this port will be from users trying to
access the network's web server.
These connection attempts need to be redirected to COMP3:

<blockquote>
<tt>
rdr on $ext_if proto tcp from any to any port 80 -&gt; $comp3
</tt>
</blockquote>

<a name="filter"></a>
<h3>Filter Rules</h3>
Now the filter rules. Start with the default deny:
<blockquote>
<tt>
block in<br>
</tt>
</blockquote>
d269 1
d277 1
a277 1
It can simplify your life if you chose to filter traffic in one
d284 6
a289 5
<blockquote>
<tt>
pass out keep state
</tt>
</blockquote>
a291 7
We need to have an <a href="anchors.html">anchor</a> for ftp-proxy(8):
<blockquote>
<tt>
anchor "ftp-proxy/*"
</tt>
</blockquote>

d294 1
a294 2
<blockquote>
<tt>
d296 1
a296 2
</tt>
</blockquote>
d298 11
d315 4
a318 6
<blockquote>
<tt>
pass in on $ext_if inet proto tcp from any to ($ext_if) \<br>
&nbsp;&nbsp;&nbsp;port $tcp_services flags S/SA keep state
</tt>
</blockquote>
d328 25
a352 8
In addition to having an <tt>rdr</tt> rule which passes the web server
traffic to COMP3, we MUST also pass this traffic through the firewall:
<blockquote>
<tt>
pass in on $ext_if inet proto tcp from any to $comp3 port 80 \<br>
&nbsp;&nbsp;&nbsp;&nbsp;flags S/SA synproxy state
</tt>
</blockquote>
d361 3
a363 5
<blockquote>
<tt>
pass in inet proto icmp all icmp-type $icmp_types keep state
</tt>
</blockquote>
d377 3
a379 5
<blockquote>
<tt>
pass in quick on $int_if
</tt>
</blockquote>
d383 1
a383 1
Internet due to the earlier "<tt>pass out keep state</tt>" line.
d393 1
a393 1
ext_if="fxp0"
d402 1
d404 1
a404 2
set loginterface $ext_if

d407 1
a407 2
# scrub
match in all scrub (no-df)
d409 1
a409 4
# nat/rdr
nat on $ext_if from !($ext_if) -> ($ext_if:0)
nat-anchor "ftp-proxy/*"
rdr-anchor "ftp-proxy/*"
d411 1
a411 2
rdr pass on $int_if proto tcp to port ftp -> 127.0.0.1 port 8021
rdr on $ext_if proto tcp from any to any port 80 -> $comp3
d413 2
a414 2
# filter rules
block in
d416 1
a416 1
pass out keep state
a418 1
antispoof quick for { lo $int_if }
d420 5
a424 2
pass in on $ext_if inet proto tcp from any to ($ext_if) \
   port $tcp_services flags S/SA keep state
d426 2
a427 2
pass in on $ext_if inet proto tcp from any to $comp3 port 80 \
    flags S/SA synproxy state
d429 1
a429 1
pass in inet proto icmp all icmp-type $icmp_types keep state
d431 1
a431 1
pass in quick on $int_if
d445 1
a445 1
<small>$OpenBSD: example1.html,v 1.40 2010/03/18 22:59:04 nick Exp $</small>
@


1.40
log
@
point out that PF is now enabled by default, from Brad Tilley, thanks!
@
text
@d141 1
a141 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.6"
d261 1
a261 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.6"
d466 1
a466 1
<small>$OpenBSD: example1.html,v 1.39 2009/10/16 19:12:42 nick Exp $</small>
@


1.39
log
@
quick update for 4.6.  much more is needed, at least scrub.html is
currently dead wrong, so I've unlinked it from the rest for now.
@
text
@d144 1
d466 1
a466 1
<small>$OpenBSD: example1.html,v 1.38 2009/04/30 17:27:31 nick Exp $</small>
@


1.38
log
@
updates for 4.5
@
text
@d141 1
a141 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.5"
d220 1
a220 1
scrub in
d260 1
a260 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.5"
d425 1
a425 1
scrub in
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.37 2009/01/25 18:09:49 jasper Exp $</small>
@


1.37
log
@- fix a bunch of tyop's

from Tom Van Looy, thanks!
@
text
@d141 1
a141 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.4"
d260 1
a260 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.4"
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.36 2008/10/31 16:49:34 nick Exp $</small>
@


1.36
log
@
update numbers for 4.4
@
text
@d169 1
a169 1
By definining them here, if we have to move this system to another 
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.35 2008/07/27 17:13:47 nick Exp $</small>
@


1.35
log
@
PF updates for 4.3..which got missed a few times.
@
text
@d141 1
a141 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.3"
d260 1
a260 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.3"
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.34 2007/12/20 17:20:16 joel Exp $</small>
@


1.34
log
@Make one of the rules in the complete ruleset at the bottom match the
explainations above.

from jiri at navratil.cz, thank you
@
text
@d141 1
a141 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.2"
d260 1
a260 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.2"
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.33 2007/11/01 02:57:56 joel Exp $</small>
@


1.33
log
@Updates for OpenBSD 4.2
@
text
@d451 1
a451 1
pass quick on $int_if
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.32 2007/05/06 18:59:54 nick Exp $</small>
@


1.32
log
@
manpath changes to:
  4.1 for PF related items
  removed for non-PF-related items, which will probably either not
    change much, or benefit from the newest, best man pages.
@
text
@d141 1
a141 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.1"
d260 1
a260 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.1"
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.31 2006/11/01 01:56:01 joel Exp $</small>
@


1.31
log
@Updates for OpenBSD 4.0. uRPF, tftp-proxy, more ftp-proxy, etc.
Thanks to mcbride for the bits about interface groups
@
text
@d119 1
a119 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ping&amp;sektion=8&amp;manpath=OpenBSD+4.0"
d137 1
a137 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=3&amp;manpath=OpenBSD+4.0"
d141 1
a141 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.0"
d179 1
a179 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8&amp;manpath=OpenBSD+4.0"
d200 1
a200 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4&amp;manpath=OpenBSD+4.0"
d260 1
a260 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+4.0"
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.30 2006/10/31 21:32:58 joel Exp $</small>
@


1.30
log
@Add back a sentence that was accidentally removed in last commit.
Pointed out by steven@@
@
text
@d119 1
a119 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ping&amp;sektion=8&amp;manpath=OpenBSD+3.9"
d137 1
a137 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=3&amp;manpath=OpenBSD+3.9"
d141 1
a141 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.9"
d179 1
a179 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8&amp;manpath=OpenBSD+3.9"
d200 1
a200 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4&amp;manpath=OpenBSD+3.9"
d260 1
a260 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+3.9"
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.29 2006/10/27 19:26:13 nick Exp $</small>
@


1.29
log
@
"tweaks and fixes" from Jeremy Reed, via Joel@@.  Committed at request
of joel@@
@
text
@d138 1
a138 1
>sysctl(3)</a> variables <tt>net.inet.ip.forwarding</tt> and 
d140 4
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.28 2006/07/03 07:47:25 jmc Exp $</small>
@


1.28
log
@fix interface mixup; ok joel
@
text
@d136 4
a139 3
connectivity, and setting <tt>net.inet.ip.forwarding</tt> to "<tt>1</tt>".
It is likely you will also want to have activated PF in 
<tt>/etc/rc.conf.local</tt>.
d461 1
a461 1
<small>$OpenBSD: example1.html,v 1.27 2006/05/08 03:24:46 nick Exp $</small>
@


1.27
log
@
Example rules file says "lo", not "lo0", so the line-by-line should,
too.  Toss in a very brief explaination why.  Inconsistency pointed out
by steven@@.
@
text
@d176 1
a176 1
<tt>tun0</tt> interface and <i>not</i> on <tt>xl0</tt>.
d460 1
a460 1
<small>$OpenBSD: example1.html,v 1.26 2006/05/02 12:17:07 steven Exp $</small>
@


1.26
log
@fix typos, spotted by Antoine Jacoutot.
@
text
@d202 1
a202 1
set skip on lo0
d205 3
d460 1
a460 1
<small>$OpenBSD: example1.html,v 1.25 2006/05/02 12:14:18 steven Exp $</small>
@


1.25
log
@fix interface names.  ok nick@@
@
text
@d239 1
a239 1
<a href="anchor.html">anchor</a> in, too:
d314 1
a314 1
We need to have an <a href="anchor.html">anchor</a> for ftp-proxy(8):
d457 1
a457 1
<small>$OpenBSD: example1.html,v 1.24 2006/05/01 09:22:29 steven Exp $</small>
@


1.24
log
@restore deleted line in copyright section
@
text
@d151 2
a152 2
ext_if="xl0"<br>
int_if="fxp0"<br>
d176 1
a176 1
<tt>tun0</tt> interface and <i>not</i> on <tt>ep0</tt>.
d457 1
a457 1
<small>$OpenBSD: example1.html,v 1.23 2006/05/01 00:51:22 nick Exp $</small>
@


1.23
log
@
rework example config for new ftp-proxy(8), plus bring closer to example
/etc/pf.conf in base system.
@
text
@d17 1
d457 1
a457 1
<small>$OpenBSD: example1.html,v 1.22 2006/01/01 03:49:54 joel Exp $</small>
@


1.22
log
@- Use "set skip on lo0" instead of "pass quick on lo0" when using synproxy
(as per thread on the pf list)
- Encourage use of "set skip on lo0" in general
@
text
@a16 1
any purpose with or without fee is hereby granted, provided that the
d71 3
a73 2
allow limited access to the firewall machine from the Internet. This
document will go through a complete ruleset that does just that.
d82 2
a83 2
      |            |                               ADSL
   ---+------+-----+------- fxp0 [ OpenBSD ] ep0 -------- ( Internet )
d97 4
a100 4
The OpenBSD router is a Pentium 100 with two network cards: a 3com
3c509B (<tt>ep0</tt>) and an Intel EtherExpress Pro/100 (<tt>fxp0</tt>).
The router has
an ADSL connection to the Internet and is using NAT to share this
d118 1
a118 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ping&amp;sektion=8&amp;manpath=OpenBSD+3.8"
d136 2
d150 2
a151 2
int_if = "fxp0"<br>
ext_if = "ep0"<br>
d153 2
a154 2
tcp_services = "{ 22, 113 }"<br>
icmp_types = "echoreq"<br>
d156 1
a156 4
priv_nets = "{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8 }"
<br>
<br>
comp3 = "192.168.0.3"
d162 5
a166 1
happen on. The third and fourth lines list the TCP port numbers of the services
d168 1
a168 4
packet types that will be permitted to reach the firewall machine. 
The fifth line defines the loopback and
<a href="http://www.geektools.com/rfc/rfc1918.txt">RFC 1918</a> address
blocks. 
d172 2
a173 2
<b>Note</b>: If the ADSL Internet connection required
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8&amp;manpath=OpenBSD+3.8"
d194 1
a194 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4&amp;manpath=OpenBSD+3.8"
d211 1
a211 1
scrub in all
d221 1
a221 1
nat on $ext_if from $int_if:network to any -&gt; ($ext_if)
d226 6
d236 12
d250 2
a251 2
The first redirection rule needed is for 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+3.8"
d256 1
d268 1
a268 1
The second redirection rule catches any attempts by someone on the
d285 1
a285 1
block all<br>
d290 3
a292 2
At this point nothing will go through the firewall, not even from the
internal network. The following rules will open up the firewall as per
d297 9
a305 7
Next, the
<a href="http://www.geektools.com/rfc/rfc1918.txt">RFC 1918</a>
addresses will be blocked from entering or exiting the external
interface. These addresses should never appear on the public Internet,
and filtering them will ensure that the router does not "leak" these
addresses out from the internal network and also block any incoming
packets with a source address in one of those networks.
d308 1
a308 2
block drop in &nbsp;quick on $ext_if from $priv_nets to any<br>
block drop out quick on $ext_if from any to $priv_nets
d313 15
a327 7
Note that <tt>block drop</tt> is used to tell PF not to respond with a
TCP RST or ICMP Unreachable packet. Since the RFC 1918 addresses don't
exist on the Internet, any packets sent to those addresses will never
make it there anyways. The <tt>quick</tt> option is used to tell PF not
to bother evaluating the rest of the filter rules if one of the above
rules matches; packets to or from the <tt>$priv_nets</tt> networks will
be immediately dropped.
d331 3
a333 1
to the Internet:
d353 1
a353 1
pass in on $ext_if proto tcp from any to $comp3 port 80 \<br>
d361 1
a361 15
web server. 

<p>
In order for active mode FTP connections to work from inside the LAN,
the following rule must be in place to pass the ftp-data connection
initiated by the FTP server back to the client. 
Since FTP connections are being proxied by ftp-proxy, it will actually
accept the ftp-data connection itself and then relay the data to the
client on the LAN.
<blockquote>
<tt>
pass in on $ext_if inet proto tcp from port 20 to ($ext_if) \<br>
&nbsp;&nbsp;&nbsp;&nbsp;user proxy flags S/SA keep state
</tt>
</blockquote>
d364 1
a364 1
ICMP traffic must now be passed:
d382 1
a382 42
be appropriate for some environments.
<blockquote>
<tt>
pass in on $int_if from $int_if:network to any keep state
</tt>
</blockquote>

<p>
The above rule will permit any internal machine to send packets through
the firewall; however, it will <i>not</i> permit the firewall to
initiate a connection to an internal machine. Is this a good idea? That
depends on some of the finer details of the network setup. If the
firewall is also a DHCP server, it may need to "ping" an address to
verify its availability before assigning it. Permitting the firewall to
connect to the internal network also allows someone who has ssh'ed into
the firewall from the Internet to then access machines on the network.
Keep in mind that <i>not</i> allowing the firewall to communicate
directly to the network is not a large security benefit; if someone gets
access to the firewall they can probably alter the filter rules anyways.
By adding the following rule, the firewall will be able to initiate
connections to the internal network:
<blockquote>
<tt>
pass out on $int_if from any to $int_if:network keep state
</tt>
</blockquote>

<p>
Note that if both of these lines are in place, the <tt>keep state</tt>
option is not needed; all packets will be able to pass through the
internal interface because there is a rule to pass packets in both
directions.  However, if the <tt>pass out</tt> line is <i>not</i>
included, the <tt>pass in</tt> line <i>must</i> include <tt>keep
state</tt>.  There is also some performance benefit to keeping state:
State tables are checked before rules are evaluated, and if a state
match is found, the packet is passed through the firewall without going
through ruleset evaluation. This can offer a performance benefit on a
heavily loaded firewall, though in a system this simple it is unlikely
to generate enough load to matter.

<p>
Finally, pass traffic out on the external interface:
d385 1
a385 2
pass out on $ext_if proto tcp all modulate state flags S/SA<br>
pass out on $ext_if proto { udp, icmp } all keep state
d391 3
a393 2
Internet. State information is kept so that the returning packets will
be passed in through the firewall.
d401 2
a402 2
int_if = "fxp0"
ext_if = "ep0"
d404 2
a405 2
tcp_services = "{ 22, 113 }"
icmp_types = "echoreq"
d407 1
a407 3
priv_nets = "{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8 }"
	  
comp3 = "192.168.0.3"
d412 2
a413 1
set skip on lo0
d416 1
a416 1
scrub in all
d419 6
a424 4
nat on $ext_if from $int_if:network to any -&gt; ($ext_if)
rdr on $int_if proto tcp from any to any port 21 -&gt; 127.0.0.1 \
   port 8021
rdr on $ext_if proto tcp from any to any port 80 -&gt; $comp3
d427 1
a427 1
block all
d429 4
a432 2
block drop in  quick on $ext_if from $priv_nets to any
block drop out quick on $ext_if from any to $priv_nets
d437 2
a438 5
pass in on $ext_if proto tcp from any to $comp3 port 80 \
   flags S/SA synproxy state

pass in on $ext_if inet proto tcp from port 20 to ($ext_if) \
   user proxy flags S/SA keep state
d442 1
a442 5
pass in  on $int_if from $int_if:network to any keep state
pass out on $int_if from any to $int_if:network keep state

pass out on $ext_if proto tcp all modulate state flags S/SA
pass out on $ext_if proto { udp, icmp } all keep state
d456 1
a456 1
<small>$OpenBSD: example1.html,v 1.21 2005/11/01 11:35:18 nick Exp $</small>
@


1.21
log
@
bump manpath= tag for 3.8
@
text
@d189 16
a276 13
Every Unix system has a "loopback" interface. It's a virtual network interface that
is used by applications to talk to each other inside the system. In general,
all traffic should be passed on the loopback interface. On OpenBSD, the
loopback interface is 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4&amp;manpath=OpenBSD+3.8"
>lo(4)</a>.
<blockquote>
<tt>
pass quick on lo0 all
</tt>
</blockquote>

<p>
d438 1
a451 2
pass quick on lo0 all

d484 1
a484 1
<small>$OpenBSD: example1.html,v 1.20 2005/05/21 05:55:43 joel Exp $</small>
@


1.20
log
@Tie in pf/carp.html
@
text
@d118 1
a118 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ping&amp;sektion=8&amp;manpath=OpenBSD+3.7"
d173 1
a173 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8&amp;manpath=OpenBSD+3.7"
d217 1
a217 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+3.7"
d265 1
a265 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4&amp;manpath=OpenBSD+3.7"
d482 1
a482 1
<small>$OpenBSD: example1.html,v 1.19 2005/05/20 00:12:02 joel Exp $</small>
@


1.19
log
@Updates for OpenBSD 3.7.
@
text
@d38 1
a38 2
[<a href="authpf.html">Previous: Authpf: User Shell for Authenticating
Gateways</a>]
d474 1
a474 2
[<a href="authpf.html">Previous: Authpf: User Shell for Authenticating
Gateways</a>]
d482 1
a482 1
<small>$OpenBSD: example1.html,v 1.18 2004/12/22 04:28:16 david Exp $</small>
@


1.18
log
@make small title logo a link back to main page; ok nick@@
@
text
@d119 1
a119 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ping&amp;sektion=8&amp;manpath=OpenBSD+3.6"
d174 1
a174 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8&amp;manpath=OpenBSD+3.6"
d218 1
a218 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+3.6"
d266 1
a266 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4&amp;manpath=OpenBSD+3.6"
d484 1
a484 1
<small>$OpenBSD: example1.html,v 1.17 2004/11/01 21:41:07 nick Exp $</small>
@


1.17
log
@
3.6 content upgrades.  Directly from Joel Knight, jaredy@@ did the
anchors and nested anchors work, rest is by Joel.
@
text
@d34 3
a36 1
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif">
d484 1
a484 1
<small>$OpenBSD: example1.html,v 1.16 2004/10/29 17:22:57 nick Exp $</small>
@


1.16
log
@
Update for 3.6
@
text
@d329 14
d458 3
d482 1
a482 1
<small>$OpenBSD: example1.html,v 1.15 2004/05/15 02:34:02 nick Exp $</small>
@


1.15
log
@
Add incoming traffic to a webserver via redirection.  From Joel Knight.
@
text
@d117 1
a117 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ping&amp;sektion=8&amp;manpath=OpenBSD+3.5"
d172 1
a172 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8&amp;manpath=OpenBSD+3.5"
d216 1
a216 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+3.5"
d264 1
a264 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4&amp;manpath=OpenBSD+3.5"
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.14 2004/05/07 01:55:23 nick Exp $</small>
@


1.14
log
@
Add an OpenBSD license to the PF User's Guide.
Concept and breakdown of copyrights agreed to by Joel Knight and myself,
license assistance millert@@, ok deraadt@@.
@
text
@d91 3
a93 2
regular workstations used for web surfing, email, chatting, etc. The
internal network is using the 192.168.0.0 / 255.255.255.0 network block.
d120 4
d154 3
d164 2
a165 2
packet types that will be permitted to reach the firewall machine. The last
line defines the loopback and
d167 2
a168 1
blocks.
d215 1
a215 1
The only redirection needed is for 
d231 13
d314 15
d415 2
d428 1
d441 3
d465 1
a465 1
<small>$OpenBSD: example1.html,v 1.13 2004/04/30 18:00:25 nick Exp $</small>
@


1.13
log
@
PF User's Guide updates for OpenBSD 3.5.
Work done by Joel Knight (enabled et myrealbox.dit com), many, many thanks
to him for providing and maintaining some darned good docs.
@
text
@a10 1
<meta name="copyright"     content="This document copyright 2003-2004 by OpenBSD.">
d13 17
d422 1
a422 1
<small>$OpenBSD: example1.html,v 1.12 2004/01/01 04:16:17 nick Exp $</small>
@


1.12
log
@
Bump copyright to 2004
@
text
@d4 1
a4 1
<title>PF: Example #1: Firewall for Home or Small Office</title>
d25 1
a25 1
<h1><font color="#e00000">PF: Example #1: Firewall for Home or Small Office</font></h1>
d100 1
a100 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ping&amp;sektion=8&amp;manpath=OpenBSD+3.4"
d147 1
a147 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8&amp;manpath=OpenBSD+3.4"
d191 1
a191 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+3.4"
d226 1
a226 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4&amp;manpath=OpenBSD+3.4"
d406 1
a406 1
<small>$OpenBSD: example1.html,v 1.11 2003/11/27 15:08:25 nick Exp $</small>
@


1.11
log
@
Major update to the PF FAQ from "Mr. PF FAQ", Joel Knight.  THANKS!
@
text
@d11 1
a11 1
<meta name="copyright"     content="This document copyright 2003 by OpenBSD.">
d406 1
a406 1
<small>$OpenBSD: example1.html,v 1.10 2003/11/09 23:29:02 nick Exp $</small>
@


1.10
log
@
Update of PF User's Guide to 3.4.  Ok, really just pointing the man page
links at the 3.4-release man pages rather than the 3.3-release man pages.
Work by Joel Knight.
@
text
@d80 2
a81 1
3c509B (ep0) and an Intel EtherExpress Pro/100 (fxp0).  The router has
d406 1
a406 1
<small>$OpenBSD: example1.html,v 1.9 2003/09/22 02:29:03 nick Exp $</small>
@


1.9
log
@
From Joel Knight: changes formatting so that all keywords are
in <i>, all literals are in <tt>, etc.  Excess man page links removed.
No words were changed.
@
text
@d99 1
a99 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ping&amp;sektion=8&amp;manpath=OpenBSD+3.3"
d146 1
a146 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8&amp;manpath=OpenBSD+3.3"
d190 1
a190 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+3.3"
d225 1
a225 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4&amp;manpath=OpenBSD+3.3"
d405 1
a405 1
<small>$OpenBSD: example1.html,v 1.8 2003/09/16 01:23:49 nick Exp $</small>
@


1.8
log
@
Grammar and punctuation clean up, from Joel Knight.
Only a very few words changed.
@
text
@d15 2
d405 1
a405 1
<small>$OpenBSD: example1.html,v 1.7 2003/06/29 20:28:24 nick Exp $</small>
@


1.7
log
@
Attach new authpf section, from Joel Knight.
@
text
@d87 2
a88 2
<li>Provide unrestricted Internet access to each internal computer
<li>Use a "default deny" filter ruleset
d93 1
a93 1
	the firewall machine
d95 1
a95 1
	and IRC
d98 1
a98 1
>ping(8)</a>
d100 1
a100 1
<li>Log filter statistics on the external interface
d102 2
a103 2
packets
<li>Make the ruleset as simple and easy to maintain as possible
d189 1
a189 1
>ftp-proxy(8)</a>, so that FTP clients on the local network can connect
d235 3
a237 3
interface -- these addresses should never appear on the public Internet.
Filtering them will ensure that the router does not "leak" these
addresses out from the internal network and also prevent any incoming
d303 1
a303 1
firewall is also a DHCP server it may need to "ping" an address to
d403 1
a403 1
<small>$OpenBSD: example1.html,v 1.5 2003/06/15 16:40:06 nick Exp $</small>
@


1.6
log
@
ICMP type 11 doesn't make sense here.
Pointed out by Marc Beyer (djhumbucker at tirwhan dat org), diff right
from Joel Knight, ok dhartmei@@, henning@@.
@
text
@d18 2
a19 1
[<a href="ftp.html">Previous: Issues with FTP</a>]
d394 2
a395 1
[<a href="ftp.html">Previous: Issues with FTP</a>]
@


1.5
log
@
Scrub also filters out packets with invalid flags, so document this and
change the examples appropriately.  Work from Joel Knight, inspired by
Trevor Talbot (quension at mac dot com).
@
text
@d95 1
a95 1
	<li>ICMP type 8: the ICMP packet type used by
a97 3
	<li>ICMP type 11: the ICMP packet type used by
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=traceroute&amp;sektion=8&amp;manpath=OpenBSD+3.3"
>traceroute(8)</a>
d126 1
a126 1
icmp_types = "{ 8, 11 }"<br>
d354 1
a354 1
icmp_types = "{ 8, 11 }"
d401 1
a401 1
<small>$OpenBSD: example1.html,v 1.4 2003/05/15 03:03:54 nick Exp $</small>
@


1.4
log
@
Table of Contents now on each page.  Work by Joel Knight (yay! Joel! 8-).
@
text
@d263 1
a263 1
&nbsp;&nbsp;&nbsp;port $tcp_services flags S/SAFR keep state
d337 1
a337 1
pass out on $ext_if proto tcp all modulate state flags S/SAFR<br>
d382 1
a382 1
   port $tcp_services flags S/SAFR keep state
d389 1
a389 1
pass out on $ext_if proto tcp all modulate state flags S/SAFR
d404 1
a404 1
<small>$OpenBSD: example1.html,v 1.3 2003/05/08 01:19:58 nick Exp $</small>
@


1.3
log
@
Rewrite of PF example and update of index.html.  Work done by Joel Knight.
@
text
@d25 22
d347 1
a347 1
<a name="ruleset"></a>
d404 1
a404 1
<small>$OpenBSD: example1.html,v 1.2 2003/05/01 14:20:37 nick Exp $</small>
@


1.2
log
@
ARGH!  no, it is "ruleset", not "rule set".  Pointed out by Margarida@@
@
text
@d4 1
a4 1
<title>PF: Example Firewall For Home or Small Office</title>
d22 1
a22 1
<h1><font color="#e00000">PF: Example Firewall For Home or Small Office</font></h1>
d25 124
a148 7
<p>
In this example, we have a number of computers in one subnet, all of
them should have full, unrestricted Internet access.

<p>
The system used for this task is a Pentium 100 with a 3c509B (ep0) and
an Intel EtherExpress Pro/100 (fxp0).
d150 115
a264 7
<p>
We want a "default deny" ruleset -- the only incoming traffic permitted
will be to enable external maintenance via SSH (TCP port 22) and the
Ident server (TCP port 113), which improves the behavior of some
services, such as external mail and IRC servers.  This firewall should
also respond to pings from the outside world, but other than port 113
and 22, should look uninteresting to an outside port scan.
d267 2
a268 93
So, let's build up our ruleset.

<p>
First, a few variables:

<pre>
     EXT="ep0"
     INT="fxp0"
     PRIVNETS="{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8 }"
</pre>

The first two lines are interface names.  PRIVNETS is a list of
"private" (RFC1918) networks which should not be seen on the external
interface, and if they are, they should be squashed.

<p>
Now, our scrub rules.  We have no reason not to use the recommended
scrubbing of all traffic in and out, so this is a simple one-liner:

<pre>
     scrub in all
</pre>

Our NAT rules are pretty simple:

<pre>
     nat on $EXT inet from $INT/24 to any -> ($EXT)
</pre>

The only redirection we want is for ftp-proxy(8) to enable FTP use
behind the NAT:

<pre>
     rdr on $INT proto tcp from any to any port 21 -> 127.0.0.1 port 8021
</pre>

Now, the filter rules.  We start with the default-deny:

<pre>
     block in all
     block out all
</pre>

At this point, all packets are "tagged" to be blocked.  However, this may
get changed later.

<p>
Every Unix system has a "Loopback" interface, a virtual network interface that
is used by applications to talk to each other inside the system.  IN GENERAL,
one is best advised to pass all traffic through the loopback interface:

<pre>
     pass in quick on lo0 all
     pass out quick on lo0 all
</pre>

Next, we block traffic on the external interface that just shouldn't be there,
namely, unregistered and loopback IPs:

<pre>
     block in quick on $EXT from $PRIVNET to any
     block out quick on $EXT from any to $PRIVNET
</pre>

Note that these are "quick" rules -- if there is a match, the packet is
dropped and the processing stops here.

<p>
Now, we admit our SSH and Ident traffic:

<pre>
     pass in on $EXT inet proto tcp from any to any \
          port { 22, 113 } flags S/SAFR
</pre>

In this case, we are passing data only on TCP ports 22 and 113, and only
if the S flag is set and the A, F and R flags are NOT set.  This is a
pretty good choice, though one should be careful with flags if you don't
understand their full significance, there is a lot of bad advice
floating around.

<p>
Next, we pass desired ICMP traffic.  This will let the machine respond to
ping(1)s, traceroute(1)s, and not much else:

<pre>
     pass in quick inet proto icmp all icmp-type 8 code 0 keep state
     pass in quick inet proto icmp all icmp-type 3 code 4 keep state
     pass in quick inet proto icmp all icmp-type 11       keep state
</pre>

<p>
I'm going to assume that the users on the internal interface know what
d270 1
a270 1
necessarily a valid assumption, a much more restrictive ruleset would
d272 25
a296 18

<pre>
     pass in  quick on $INT all keep state
</pre>

The next rule is very optional:
<pre>
     pass out quick on $INT all keep state
</pre>
This line permits traffic which originates in the firewall to access
machines in the internal network.  Why might you want this?  There are
a few reasons.  If your firewall also is a DHCP server, DHCP will work
better if it can "ping" machines to verify the availability of an IP
address before assigning it.  It also permits someone who has ssh'ed
into firewall from outside to access machines inside your network.
While this may not be what you desire, keep in mind NOT putting this
line in is not a large security benefit -- if someone gets access to your
firewall, they can probably alter the firewall rules.
d300 42
a341 30
option is not needed -- all packets will be able to pass through the
external interface without the keep state.  HOWEVER, if the <tt>pass
out</tt> line is NOT included, the <tt>pass in</tt> line must include
<tt>keep state</tt>.  There is also some performance benefit to keeping
state -- state tables are checked before rules are evaluated, and if a
state match is found, the rules are not evaluated for a packet, so this
can offer a performance benefit on a heavily loaded firewall, though
in a system this simple, it is unlikely to generate enough load to 
matter.

<p>
Finally, we have the rules permitting outgoing traffic on the external
interface:

<pre>
     pass out quick on $EXT all keep state
</pre>

This is fairly self-explanatory: whatever hits the external interface
from the inside of the firewall, let it out -- but keep state so the
response can come back in.  Note that this rule is needed, otherwise
traffic would never be able to exit the external port.

<h2>The complete ruleset</h2>
<table border=0 width="650"><tr><td nowrap bgcolor="#EEEEEE"><pre>
# Variables
EXT= "ep0"
INT= "fxp0"
PRIVNETS= "{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8 }"

d343 1
a343 1
# Scrub rules
d346 4
d351 2
a352 2
# NAT and Redirection rules
nat on $EXT inet from $INT/24 to any -> ($EXT)
d354 1
a354 2
# FTP redirections
rdr on $INT proto tcp from any to any port 21 -> 127.0.0.1 port 8021
d356 2
d359 2
a360 5
# Filter Rules
block in all
block out all
pass in quick on lo0 all
pass out quick on lo0 all
d362 1
a362 3
# block RFC1918 traffic on external interface
block in quick on $EXT from $PRIVNETS to any
block out quick on $EXT from any to $PRIVNETS
d364 2
a365 22
# Pass the stuff we expect on the external interface
pass in on $EXT inet proto tcp from any to any \
     port { 22, 113 } flags S/SAFR

# Pass desired ICMP traffic
pass in quick inet proto icmp all icmp-type 8 code 0 keep state
pass in quick inet proto icmp all icmp-type 3 code 4 keep state
pass in quick inet proto icmp all icmp-type 11       keep state

# Pass traffic to/from internal network
pass in  quick on $INT all keep state
pass out quick on $INT all keep state

# Permit outgoing on $EXT
pass out quick on $EXT all keep state
</pre></td></tr></table>

<p>
You will note that there are no hard coded addresses in the body of this
PF file.  The use of variable names makes it much easier to change
things as needed, and the same or similar ruleset can be used in many
different systems.
d367 5
d382 1
a382 1
<small>$OpenBSD: example1.html,v 1.1 2003/05/01 01:46:06 nick Exp $</small>
@


1.1
log
@
The long awaited, new PF FAQ!
Most of it written by Joel Knight >enabled at myrealbox dot com<,
some parts by me, a few parts yanked out of the old PF FAQ.
GREAT work, Joel!
@
text
@d34 1
a34 1
We want a "default deny" rule set -- the only incoming traffic permitted
d42 1
a42 1
So, let's build up our rule set.
d136 1
a136 1
necessarily a valid assumption, a much more restrictive rule set would
d182 1
a182 1
<h2>The complete rule set</h2>
d231 1
a231 1
things as needed, and the same or similar rule set can be used in many
d244 1
a244 1
<small>$OpenBSD$</small>
@

