head	1.28;
access;
symbols;
locks; strict;
comment	@# @;


1.28
date	2014.04.01.17.14.10;	author nick;	state dead;
branches;
next	1.27;

1.27
date	2011.01.29.15.46.37;	author ajacoutot;	state Exp;
branches;
next	1.26;

1.26
date	2011.01.09.14.28.41;	author ajacoutot;	state Exp;
branches;
next	1.25;

1.25
date	2010.05.24.18.32.44;	author ajacoutot;	state Exp;
branches;
next	1.24;

1.24
date	2007.05.09.05.49.53;	author jufi;	state Exp;
branches;
next	1.23;

1.23
date	2007.02.14.19.01.55;	author jufi;	state Exp;
branches;
next	1.22;

1.22
date	2006.11.22.15.14.07;	author saad;	state Exp;
branches;
next	1.21;

1.21
date	2006.11.02.18.23.22;	author jufi;	state Exp;
branches;
next	1.20;

1.20
date	2006.10.29.10.58.53;	author jufi;	state Exp;
branches;
next	1.19;

1.19
date	2006.08.08.07.14.20;	author saad;	state Exp;
branches;
next	1.18;

1.18
date	2006.07.12.13.22.57;	author jufi;	state Exp;
branches;
next	1.17;

1.17
date	2006.05.02.17.09.33;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2006.03.10.16.35.07;	author saad;	state Exp;
branches;
next	1.15;

1.15
date	2005.12.31.00.54.37;	author saad;	state Exp;
branches;
next	1.14;

1.14
date	2005.11.03.11.30.53;	author saad;	state Exp;
branches;
next	1.13;

1.13
date	2005.09.28.19.46.33;	author saad;	state Exp;
branches;
next	1.12;

1.12
date	2005.05.22.17.38.07;	author saad;	state Exp;
branches;
next	1.11;

1.11
date	2005.01.18.09.54.52;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2004.12.29.10.38.26;	author saad;	state Exp;
branches;
next	1.9;

1.9
date	2004.11.01.02.56.30;	author saad;	state Exp;
branches;
next	1.8;

1.8
date	2004.10.13.14.44.30;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.11.16.17.48;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.31.21.12.02;	author saad;	state Exp;
branches;
next	1.5;

1.5
date	2004.05.16.13.08.03;	author saad;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.12.20.51.36;	author saad;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.06.21.34.05;	author saad;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.03.19.45.23;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2003.12.29.22.13.35;	author horacio;	state Exp;
branches;
next	;


desc
@@


1.28
log
@
Abandon translations, per deraadt@@ and ajacoutot@@.
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>PF : Balisage des Paquets (Filtrage par Politique)</title>
<link rev="made" href="mailto:www@@openbsd.org">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="resource-type" content="document">
<meta name="description"   content="the OpenBSD FAQ page">
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
</head>

<!--
Copyright (c) 2003, 2007 Joel Knight <enabled@@myrealbox.com>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor="#ffffff" text="#000000">
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->

<a href="../../../fr/index.html">
<img alt="[OpenBSD]" height="30" width="141" src="../../../images/smalltitle.gif" border="0">
</a>
<p>
[<a href="pools.html">Précédent : Ensembles d'Adresses ("Pools") et
Partage de Charge</a>]
[<a href="index.html">Index</a>]
[<a href="logging.html">Suivant : Journal des Evénements</a>]

<p>
<h1><font color="#e00000">PF : Balisage des Paquets (Filtrage par
	Politique)</font></h1>

<hr>

<h3>Table des Matières</h3>
<ul>
<li><a href="#intro">Introduction</a>
<li><a href="#assign">Affectation de Balises aux Paquets</a>
<li><a href="#check">Vérification des Balises Appliquées</a>
<li><a href="#policy">Filtrage par Politique</a>
<li><a href="#ethernet">Balisage des Trames Ethernet</a>
</ul>

<hr>

<a name="intro"></a>
<h2>Introduction</h2>
Le balisage de paquets est une méthode pour marquer les paquets avec un
identifiant interne qui peut être utilisé comme critère dans les règles
de filtrage et de traduction d'adresses. Grâce au balisage, il est
possible de créer des paquets dits "de confiance" entre des interfaces
et de déterminer si des paquets ont été traités par les règles de
traduction d'adresses. Il est aussi possible de faire du filtrage
suivant une politique au lieu de faire du filtrage par règle.

<a name="assign"></a>
<h2>Affectation de Balises aux Paquets</h2>
Pour ajouter une balise à un paquet, utilisez le mot-clé <tt>tag</tt> :
<blockquote>
<tt>
pass in on $int_if all tag INTERNAL_NET keep state
</tt>
</blockquote>

<p>
La balise <tt>INTERNAL_NET</tt> sera ajoutée à tout paquet qui
correspondra à la règle précitée.

<p>
Une balise peut aussi être affectée grâce à une 
<a href="macros.html#macros">macro</a>.
Par exemple :

<blockquote>
<tt>
name = "INTERNAL_NET"<br>
pass in on $int_if all tag $name
</tt>
</blockquote>

<p>
On peut utiliser un ensemble de macros prédéfinies.
<ul>
<li><tt>$if</tt> - L'interface
<li><tt>$srcaddr</tt> - L'adresse IP source
<li><tt>$dstaddr</tt> - L'adresse IP destination
<li><tt>$srcport</tt> - Le port source 
<li><tt>$dstport</tt> - Le port destination
<li><tt>$proto</tt> - Le protocole
<li><tt>$nr</tt> - Le numéro de la règle
</ul>

<p>
Ces macros sont interprétées lors du chargement des règles, PAS en
"runtime".

<p>
L'affectation de balises observe les règles suivantes :
<ul>
<li>Les balises sont adhérentes ("sticky"). Une fois qu'une balise est
    appliquée à un paquet par une règle correspondante, elle n'est
    jamais supprimée. Cependant, elle peut être remplacée par une balise
    différente.
<li>A cause de cette forte adhérence d'une balise, un paquet peut avoir
    une balise même si la dernière règle correspondante n'utilise pas le
    mot-clé <tt>tag</tt>.
<li>Un paquet ne peut avoir qu'une seule balise à un moment donné.
<li>Les balises sont des identifiants <i>internes</i>. Elles ne sont pas
    envoyées sur le réseau.
<li>Les noms de balise peuvent contenir jusqu'à 63 caractères. Sous
OpenBSD 4.0 et inférieur ces noms étaient limités à 15 caractères.
</ul>

<p>
Prenons le jeu de règles suivant comme exemple :
<blockquote>
<tt>
(1) pass in on $int_if tag INT_NET<br>
(2) pass in quick on $int_if proto tcp to port 80 tag INT_NET_HTTP<br>
(3) pass in quick on $int_if from 192.168.1.5
</tt>
</blockquote>

<p>
<ul>
<li>Les paquets arrivant sur l'interface <tt>$int_if</tt> se verront
    attribuer une balise <tt>INT_NET</tt> par la règle #1.
<li>Les paquets TCP arrivant sur l'interface <tt>$int_if</tt> et
    destinés au port 80 se verront d'abord attribuer une balise
    <tt>INT_NET</tt> par la règle #1. Cette balise sera ensuite
    remplacée par la balise <tt>INT_NET_HTTP</tt> à cause de la règle
    #2.
<li>Les paquets arrivant sur l'interface <tt>$int_if</tt> et en
    provenance de 192.168.1.5 seront tagués d'une ou deux façons.
    Si le paquet est destiné au port 80, il correspondra à la règle #2
    et sera tagué avec <tt>INT_NET_HTTP</tt>. Sinon le paquet
    correspondra à la règle #3 et sera tagué avec <tt>INT_NET</tt>.
    Parce que le paquet correspond à la règle #1, le tag
    <tt>INT_NET</tt> sera ajouté et ne sera pas supprimé à moins qu'une
    autre règle correspondante spécifie un tag (on dit que le tag est
    "collant")
</ul>

<a name="check"></a>
<h2>Vérification des Balises Appliquées</h2>
Pour vérifier les balises précédemment appliquées, utilisez le mot-clé
<tt>tagged</tt> comme dans l'exemple suivant :
<blockquote>
<tt>
pass out on $ext_if tagged INT_NET
</tt>
</blockquote>

<p>
Les paquets sortant à partir de <tt>$ext_if</tt> doivent être balisés
avec la balise <tt>INT_NET</tt> pour que la règle ci-dessus corresponde
à ces paquets. La correspondance inverse peut aussi être réalisée avec
l'opérateur <tt>!</tt> :
<blockquote>
<tt>
pass out on $ext_if ! tagged WIFI_NET
</tt>
</blockquote>

<a name="policy"></a>
<h2>Filtrage par Politique</h2>
Le filtrage par politique utilise une approche différente pour
l'écriture d'un jeu de règles. Une politique est définie par rapport aux
types de trafic : règles pour les types de trafic à passer, règles pour
les types de trafic à bloquer. Les paquets sont ensuite classifiés au
sein de la politique selon les critères traditionnels : adresse IP
source/destination, protocole, etc... Examinez la politique de filtrage
qui suit :
<ul>
<li>Le trafic provenant du LAN interne et à destination d'Internet est
    permis (LAN_INET) et doit être réécrit (LAN_INET_NAT)
<li>Le trafic provenant du LAN interne et à destination de la DMZ est
    autorisé (LAN_DMZ)
<li>Le trafic provenant d'Internet et à destination de serveurs dans la
    DMZ est autorisé (INET_DMZ)
<li>Le trafic provenant d'Internet et redirigé vers 
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8">spamd(8)</a> 
    est autorisé (SPAMD)
<li>Tout autre trafic est bloqué
</ul>

<p>
Notez que la politique couvre <i>tout</i> le trafic qui transite par le
pare-feu. Le mot entre parenthèses indique le nom de la balise qui sera
utilisée pour chaque élément de la politique.

<p>
Les règles doivent à présent être écrites
pour classifier les paquets au sein de la politique.
<blockquote>
<tt>
block all<br>
pass out on $ext_if tag LAN_INET_NAT tagged LAN_INET nat-to ($ext_if)<br>
pass in on $int_if from $int_net tag LAN_INET<br>
pass in on $int_if from $int_net to $dmz_net tag LAN_DMZ<br>
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ<br>
pass in on $ext_if proto tcp from &lt;spamd&gt; to port smtp \<br>
&nbsp;&nbsp;&nbsp;tag SPAMD rdr-to 127.0.0.1 port 8025<br>
</tt>
</blockquote>

<p>
Maintenant les règles qui constituent la politique sont
définies.
<blockquote>
<tt>
pass in &nbsp;quick on $ext_if tagged SPAMD<br>
pass out quick on $ext_if tagged LAN_INET_NAT<br>
pass out quick on $dmz_if tagged LAN_DMZ<br>
pass out quick on $dmz_if tagged INET_DMZ
</tt>
</blockquote>

<p>
Maintenant que le jeu de règles a été paramétré, les modifications
futures sont à apporter uniquement dans les règles de classification.
Par exemple, si un serveur POP3/SMTP est ajouté à la DMZ, il sera
nécessaire d'ajouter des règles de classification pour le trafic POP3 et
SMTP comme le montre l'exemple suivant :
<blockquote>
<tt>
mail_server = "192.168.0.10"<br>
...<br>
pass in on $ext_if proto tcp to $mail_server port { smtp, pop3 } \<br>
&nbsp;&nbsp;&nbsp;tag INET_DMZ
</tt>
</blockquote>

<p>
Le trafic mail sera autorisé car il fait partie de la
classification INET_DMZ.

<p>
Voici le jeu de règles complet :
<table border=0 width="650">
<tr><td nowrap bgcolor="#EEEEEE">
<pre>
# macros
int_if  = "dc0"
dmz_if  = "dc1"
ext_if  = "ep0"
int_net = "10.0.0.0/24"
dmz_net = "192.168.0.0/24"
www_server = "192.168.0.5"
mail_server = "192.168.0.10"

table &lt;spamd&gt; persist file "/etc/spammers"

# classification -- classifier les paquets selon la politique
# définie
block all
pass out on $ext_if tag LAN_INET_NAT tagged LAN_INET nat-to ($ext_if)<br>
pass in on $int_if from $int_net tag LAN_INET<br>
pass in on $int_if from $int_net to $dmz_net tag LAN_DMZ<br>
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ
pass in on $ext_if proto tcp from &lt;spamd&gt; to port smtp \<br>
&nbsp;&nbsp;&nbsp;tag SPAMD rdr-to 127.0.0.1 port 8025<br>

# filtrage -- autoriser/bloquer suivant la politique.
pass in  quick on $ext_if tagged SPAMD
pass out quick on $ext_if tagged LAN_INET_NAT
pass out quick on $dmz_if tagged LAN_DMZ
pass out quick on $dmz_if tagged INET_DMZ
</pre>
</td></tr>
</table>

<a name="ethernet"></a>
<h2>Balisage des Trames Ethernet</h2>
Le balisage peut être effectué au niveau Ethernet si la machine de
balisage/filtrage est aussi un pont
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4">bridge(4)</a>). 
En créant des règles de filtrage pour bridge(4) qui utilisent le mot-clé
<tt>tag</tt>, PF peut filtrer les paquets d'après leur adresse MAC
source ou destination. Les règles pour bridge(4) sont créés avec la
commande
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8"
>ifconfig(8)</a>.
Exemple :
<blockquote>
<tt>
# ifconfig bridge0 rule pass in on fxp0 src 0:de:ad:be:ef:0 \<br>
&nbsp;&nbsp;&nbsp;tag USER1
</tt>
</blockquote>

<p>
Puis dans <tt>pf.conf</tt> :
<blockquote>
<tt>
pass in on fxp0 tagged USER1
</tt>
</blockquote>

<p>
[<a href="pools.html">Précédent : Ensembles d'Adresses ("Pools")
et Partage de Charge</a>]
[<a href="index.html">Index</a>]
[<a href="logging.html">Suivant : Journal des Evénements</a>]

<p>
<hr>
<a href="index.html"><img height="24" width="24"
src="../../../images/back.gif" border="0" alt="[back]"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: tagging.html,v 1.21 ]<br>
$Translation: tagging.html,v 1.30 2011/01/28 22:37:31 benoit Exp $<br>
-->
$OpenBSD: tagging.html,v 1.27 2011/01/29 15:46:37 ajacoutot Exp $
</small>

</body>
</html> 
@


1.27
log
@Sync with Steelix CVS
@
text
@d331 1
a331 1
$OpenBSD$
@


1.26
log
@Sync with Steelix CVS
@
text
@d215 1
a215 1
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ
d328 2
a329 2
Originally [OpenBSD: tagging.html,v 1.20 ]<br>
$Translation: tagging.html,v 1.29 2011/01/08 09:49:42 benoit Exp $<br>
@


1.25
log
@Sync with Steelix CVS
@
text
@d297 1
a297 1
>brconfig(8)</a>.
d328 2
a329 2
Originally [OpenBSD: tagging.html,v 1.19 ]<br>
$Translation: tagging.html,v 1.28 2010/05/24 08:39:24 benoit Exp $<br>
@


1.24
log
@Sync with steelix translation CVS
@
text
@d91 1
a91 1
pass in on $int_if all tag $name keep state
d132 3
a134 4
(1) pass in on $int_if tag INT_NET keep state<br>
(2) pass in quick on $int_if proto tcp to port 80 tag \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INT_NET_HTTP keep state<br>
(3) pass in quick on $int_if from 192.168.1.5 keep state
a157 5
<p>
De même que pour les règles de filtrage, les balises peuvent être
appliquées par des règles <tt>nat</tt>, <tt>rdr</tt> et <tt>binat</tt>
en utilisant le mot-clé <tt>tag</tt>.

d164 1
a164 1
pass out on $ext_if tagged INT_NET keep state
d175 1
a175 1
pass out on $ext_if ! tagged WIFI_NET keep state
a178 5
<p>
Les règles de réécriture (<tt>nat</tt>/<tt>rdr</tt>/<tt>binat</tt>)
peuvent aussi utiliser le mot clé <tt>tagged</tt> pour correspondre aux
paquets.

d207 1
a207 1
Des règles de filtrage et de traduction doivent à présent être écrites
a210 4
rdr on $ext_if proto tcp from &lt;spamd&gt; to port smtp \<br>
&nbsp;&nbsp;&nbsp;tag SPAMD -&gt; 127.0.0.1 port 8025<br>
nat on $ext_if tag LAN_INET_NAT tagged LAN_INET -&gt; ($ext_if)<br>
<br>
d212 6
a217 3
pass in on $int_if from $int_net tag LAN_INET keep state<br>
pass in on $int_if from $int_net to $dmz_net tag LAN_DMZ keep state<br>
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ keep state
d226 4
a229 4
pass in &nbsp;quick on $ext_if tagged SPAMD keep state<br>
pass out quick on $ext_if tagged LAN_INET_NAT keep state<br>
pass out quick on $dmz_if tagged LAN_DMZ keep state<br>
pass out quick on $dmz_if tagged INET_DMZ keep state
d244 1
a244 1
&nbsp;&nbsp;&nbsp;tag INET_DMZ keep state
a269 4
rdr on $ext_if proto tcp from &lt;spamd&gt; to port smtp \
    tag SPAMD -&gt; 127.0.0.1 port 8025
nat on $ext_if tag LAN_INET_NAT tagged LAN_INET -&gt; ($ext_if)

d271 6
a276 5
pass in on $int_if from $int_net tag LAN_INET keep state
pass in on $int_if from $int_net to $dmz_net tag LAN_DMZ keep state
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ keep state 
pass in on $ext_if proto tcp to $mail_server port { smtp, pop3 } \
    tag INET_DMZ keep state 
d279 4
a282 4
pass in  quick on $ext_if tagged SPAMD keep state
pass out quick on $ext_if tagged LAN_INET_NAT keep state
pass out quick on $dmz_if tagged LAN_DMZ keep state
pass out quick on $dmz_if tagged INET_DMZ keep state 
d296 1
a296 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8"
d301 1
a301 1
# brconfig bridge0 rule pass in on fxp0 src 0:de:ad:be:ef:0 \<br>
d328 2
a329 2
Originally [OpenBSD: tagging.html,v 1.18 ]<br>
$Translation: tagging.html,v 1.27 2007/05/07 11:39:29 ajacoutot Exp $<br>
@


1.23
log
@sync with steelix translation CVS
@
text
@d14 1
a14 1
Copyright (c) 2003, 2004 Joel Knight <enabled@@myrealbox.com>
d124 2
d207 1
a207 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+4.0">spamd(8)</a> 
d306 1
a306 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+4.0">bridge(4)</a>). 
d311 1
a311 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+4.0"
d343 2
a344 2
Originally [OpenBSD: tagging.html,v 1.15 ]<br>
$Translation: tagging.html,v 1.26 2007/02/13 09:14:15 benoit Exp $<br>
@


1.22
log
@sync with Steelix CVS
@
text
@d104 1
a104 1
<li><tt>$nr</tt> - Le nombre de la règle
d114 1
a114 1
<li>Les balises sont adhérentes ("sticky"). Une fois une balise est
d122 1
a122 1
<li>Les balises sont des identifiants <i>internal</i>. Elles ne sont pas
d147 1
a147 1
    provenance de 192.168.1.5 seront taggués d'une ou deux façons.
d149 2
a150 2
    et sera taggué avec <tt>INT_NET_HTTP</tt>. Sinon le paquet
    correspondra à la règle #3 et sera taggué avec <tt>INT_NET</tt>.
d159 1
a159 1
appliquées par des règles <tt>nat</tt>, <tt>rdr</tt>, et <tt>binat</tt>
d173 1
a173 1
Les paquets sortant à partir de <tt>$ext_if</tt>doivent être balisés
d195 1
a195 1
source/destination, protocole, etc. Examinez la politique de filtrage
d342 1
a342 1
$Translation: tagging.html,v 1.25 2006/11/21 14:59:52 ajacoutot Exp $<br>
@


1.21
log
@sync with steelix translation CVS
@
text
@d147 8
a154 5
    provenance de 192.168.1.5 seront autorisés par la règle #3 car c'est
    la dernière règle qui correspond au filtrage de ces paquets.
    Cependant, ces paquets se verront attribuer la balise
    <tt>INT_NET_HTTP</tt> s'ils sont destinés au port TCP 80; sinon ils
    se verront attribuer la balise <tt>INT_NET</tt>.
d341 2
a342 2
Originally [OpenBSD: tagging.html,v 1.14 ]<br>
$Translation: tagging.html,v 1.24 2006/11/02 08:49:04 ajacoutot Exp $<br>
@


1.20
log
@sync with steelix translation CVS
@
text
@d202 1
a202 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.9">spamd(8)</a> 
d301 1
a301 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.9">bridge(4)</a>). 
d306 1
a306 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.9"
d338 2
a339 2
Originally [OpenBSD: tagging.html,v 1.13 ]<br>
$Translation: tagging.html,v 1.23 2006/10/28 18:41:16 aanriot Exp $<br>
@


1.19
log
@sync with Steelix CVS
@
text
@d242 1
a242 1
futures sont à apporter uniquement dans les règles de classifications.
d304 1
a304 1
source/destination. Les règles pour bridge(4) sont créés avec la
d338 2
a339 2
Originally [OpenBSD: tagging.html,v 1.12 ]<br>
$Translation: tagging.html,v 1.22 2006/08/07 08:33:51 saad Exp $<br>
@


1.18
log
@sync with steelix translation CVS
@
text
@d14 1
a14 1
Copyright (c) 2003, 2004, Nick Holland <nick@@openbsd.org>
d339 1
a339 1
$Translation: tagging.html,v 1.21 2006/07/09 19:56:56 aanriot Exp $<br>
@


1.17
log
@sync with steelix translation CVS
@
text
@d176 1
a176 1
pass out on $ext_if tagged ! WIFI_NET keep state
d338 2
a339 2
Originally [OpenBSD: tagging.html,v 1.11 ]<br>
$Translation: tagging.html,v 1.20 2006/05/02 10:12:39 ajacoutot Exp $<br>
@


1.16
log
@sync with Steelix CVS
@
text
@d202 1
a202 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.8">spamd(8)</a> 
d301 1
a301 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.8">bridge(4)</a>). 
d306 1
a306 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.8"
d338 2
a339 2
Originally [OpenBSD: tagging.html,v 1.10 ]<br>
$Translation: tagging.html,v 1.19 2006/03/09 14:46:29 ajacoutot Exp $<br>
@


1.15
log
@sync with Steelix CVS
@
text
@d34 1
a34 1
<a href="../../fr/index.html">
d234 1
a234 1
pass out quick on $ext_if tagged LAN_INET_NAT keep state<
d339 1
a339 1
$Translation: tagging.html,v 1.18 2005/12/31 00:45:21 saad Exp $<br>
@


1.14
log
@sync with Steelix CVS
@
text
@d81 1
a81 4
correspondra à la règle précitée. Remarquez l'utilisation de <tt>keep
state</tt> : <tt>keep state</tt> (ou <tt>modulate
state</tt>/<tt>synproxy state</tt>) doit être utilisé dans les règles
<tt>pass</tt>qui affectent des balises aux paquets.
d338 2
a339 2
Originally [OpenBSD: tagging.html,v 1.9 ]<br>
$Translation: tagging.html,v 1.17 2005/11/02 19:38:09 aanriot Exp $<br>
@


1.13
log
@sync with Steelix CVS
@
text
@d205 1
a205 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.7">spamd(8)</a> 
d304 1
a304 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.7">bridge(4)</a>). 
d309 1
a309 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.7"
d341 2
a342 2
Originally [OpenBSD: tagging.html,v 1.8 ]<br>
$Translation: tagging.html,v 1.16 2005/09/25 08:21:16 aanriot Exp $<br>
@


1.12
log
@sync with Steelix CVS
@
text
@d222 1
a222 1
nat on $ext_if tagged LAN_INET tag LAN_INET_NAT -&gt; ($ext_if)<br>
d282 1
a282 1
nat on $ext_if tagged LAN_INET tag LAN_INET_NAT -&gt; ($ext_if)
d341 2
a342 2
Originally [OpenBSD: tagging.html,v 1.7 ]<br>
$Translation: tagging.html,v 1.15 2005/05/21 18:19:49 aanriot Exp $<br>
@


1.11
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>PF : Balisage des Paquets</title>
d38 2
a39 3
[<a href="pools.html">Précédent : Ensembles d'Adresses
("Pools") et Partage de Charge</a>]

d44 2
a45 1
<h1><font color="#e00000">PF : Balisage des Paquets</font></h1>
d53 1
a53 2
<li><a href="#check">Vérification des Balises
    Appliquées</a>
d62 7
a68 9
Le balisage de paquets est une méthode pour marquer les paquets
avec un identifiant interne qui peut être utilisé comme
critère dans les règles de filtrage et de traduction
d'adresses. Grâce au balisage, il est possible de créer des
paquets dits "de confiance" entre des interfaces et de déterminer
si des paquets ont été traités par les
règles de traduction d'adresses. Il est aussi possible de faire
du filtrage suivant une politique au lieu de faire du filtrage par
règle.
d72 1
a72 2
Pour ajouter une balise à un paquet, utilisez le mot-clé
<tt>tag</tt> :
d80 5
a84 6
La balise <tt>INTERNAL_NET</tt> sera ajoutée à tout paquet
qui correspondra à la règle précitée. Il est
à noter que le mot-clé <tt>keep state</tt> : <tt>keep
state</tt> (ou <tt>modulate state</tt>/<tt>synproxy state</tt>) doit
être utilisé dans les règles <tt>pass</tt>qui
affectent des balises aux paquets.
d99 1
a99 1
On peut utiliser un ensemble de macros prédéfinies 
d117 8
a124 9
<li>Les balises sont adhérentes ("sticky"). Une fois une balise
    est appliquée à un paquet par une règle
    correspondante, elle n'est jamais supprimée. Cependant, elle
    peut être remplacée par une balise différente.
<li>A cause de cette forte adhérence d'une balise, un paquet peut
    avoir une balise même si la dernière règle
    correspondante n'utilise pas le mot-clé <tt>tag</tt>.
<li>Un paquet ne peut avoir qu'une seule balise à un moment
    donné.
d147 2
a148 2
    remplacée par la balise <tt>INT_NET_HTTP</tt> à cause
    de la règle #2.
d150 5
a154 5
provenance de 192.168.1.5 seront autorisés par la règle #3
car c'est la dernière règle qui correspond au filtrage de
ces paquets. Cependant, ces paquets se verront attribuer la balise
<tt>INT_NET_HTTP</tt> s'ils sont destinés au port TCP 80, sinon
ils se verront attribuer la balise <tt>INT_NET</tt>.
d158 3
a160 4
De même que pour les règles de filtrage, les balises
peuvent être appliquées par des règles <tt>nat</tt>,
<tt>rdr</tt>, et <tt>binat</tt> en utilisant le mot-clé
<tt>tag</tt>.
d164 2
a165 3
Pour vérifier les balises précédemment
appliquées, utilisez le mot-clé <tt>tagged</tt> comme dans
l'exemple suivant :
d173 3
a175 4
Les paquets sortant à partir de <tt>$ext_if</tt>doivent
être balisés avec la balise <tt>INT_NET</tt> pour que la
règle ci-dessus corresponde à ces paquets. La
correspondance inverse peut aussi être réalisée avec
d183 5
d191 4
a194 5
l'écriture d'un jeu de règles. Une politique est
définie par rapport aux types de trafic : règles pour les
types de trafic à passer, règles pour les types de trafic
à bloquer. Les paquets sont ensuite classifiés au sein de
la politique selon les critères traditionnels : adresse IP
d196 1
a196 1
qui suit : 
d198 6
a203 4
<li>Le trafic provenant du LAN interne et à destination de la DMZ
    est autorisé (LAN_DMZ)
<li>Le trafic provenant d'Internet et à destination de serveurs
    dans la DMZ est autorisé (INET_DMZ)
d205 1
a205 2
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.6">spamd(8)</a> 
d211 3
a213 4
Notez la manière dont la politique couvre <i>all</i> le trafic
qui transite par le pare-feu. Le mot entre parenthèses indique le
nom de la balise qui sera utilisée pour chaque
élément de la politique.
d216 2
a217 3
Des règles de filtrage et de traduction doivent être
écrites maintenant pour classifier les paquets au sein de la
politique.
d222 1
d237 1
a237 1
pass out quick on $ext_if tagged LAN_INET keep state<br>
d244 5
a248 6
Maintenant que le jeu de règles a été
paramétré, les modifications futures sont à
apporter uniquement dans les règles de classifications. Par
exemple, si un serveur POP3/SMTP est ajouté à la DMZ, il
sera nécessaire d'ajouter des règles de classification
pour le trafic POP3 et SMTP comme le montre l'exemple suivant :
d282 1
d293 1
a293 1
pass out quick on $ext_if tagged LAN_INET keep state
d302 10
a311 9
Le balisage peut être effectué au niveau Ethernet si la
machine de balisage/filtrage est aussi un pont (
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.6">bridge(4)</a>). 
En créant des règles de filtrage pour bridge(4) qui
utilisent le mot-clé <tt>tag</tt>, PF peut filtrer les paquets
d'après leur adresse MAC source/destination. Les règles
pour bridge(4) sont créés avec la commande
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.6"
>brconfig(8)</a>. Exemple :
d320 1
a320 1
Puis dans <tt>pf.conf</tt>:
d328 2
a329 2
[<a href="pools.html">Précédent : Ensembles d'Adresses
("Pools") et Partage de Charge</a>]
d335 2
a336 1
<a href="index.html"><img height="24" width="24" src="../../../images/back.gif" border="0" alt="[back]"></a> 
d341 2
a342 2
Originally [OpenBSD: tagging.html,v 1.6 ]<br>
$Translation: tagging.html,v 1.13 2005/01/17 21:34:49 aanriot Exp $<br>
@


1.10
log
@sync with Steelix CVS
@
text
@d343 1
d345 2
a346 1
$Translation: tagging.html,v 1.12 2004/12/29 10:33:02 saad Exp $<br>
@


1.9
log
@sync with Steelix CVS
@
text
@d34 3
a36 1
<img alt="[OpenBSD]" height=30 width=141 src="../../../images/smalltitle.gif">
d343 2
a344 2
Originally [OpenBSD: tagging.html,v 1.5 ]<br>
$Translation: tagging.html,v 1.10 2004/11/01 00:46:57 saad Exp $<br>
@


1.8
log
@Sync with Steelix CVS
@
text
@d207 1
a207 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.5">spamd(8)</a> 
d307 1
a307 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.5">bridge(4)</a>). 
d312 1
a312 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.5"
d341 2
a342 2
Originally [OpenBSD: tagging.html,v 1.4 ]<br>
$Translation: tagging.html,v 1.9 2004/10/13 11:53:05 saad Exp $<br>
@


1.7
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>PF: Balisage des Paquets</title>
d43 1
a43 1
<h1><font color="#e00000">PF: Balisage des Paquets</font></h1>
d342 1
a342 1
$Translation: tagging.html,v 1.8 2004/10/11 12:24:36 saad Exp $<br>
@


1.6
log
@sync with Steelix CVS
@
text
@d36 1
a36 1
[<a href="pools.html">Pr&eacute;c&eacute;dent : Ensembles d'Adresses
d40 1
a40 1
[<a href="logging.html">Suivant : Journal des Ev&eacute;nements</a>]
d47 1
a47 1
<h3>Table des Mati&egrave;res</h3>
d51 2
a52 2
<li><a href="#check">V&eacute;rification des Balises
    Appliqu&eacute;es</a>
d61 7
a67 7
Le balisage de paquets est une m&eacute;thode pour marquer les paquets
avec un identifiant interne qui peut &ecirc;tre utilis&eacute; comme
crit&egrave;re dans les r&egrave;gles de filtrage et de traduction
d'adresses. Gr&acirc;ce au balisage, il est possible de cr&eacute;er des
paquets dits "de confiance" entre des interfaces et de d&eacute;terminer
si des paquets ont &eacute;t&eacute; trait&eacute;s par les
r&egrave;gles de traduction d'adresses. Il est aussi possible de faire
d69 1
a69 1
r&egrave;gle.
d73 1
a73 1
Pour ajouter une balise &agrave; un paquet, utilisez le mot-cl&eacute;
d82 3
a84 3
La balise <tt>INTERNAL_NET</tt> sera ajout&eacute;e &agrave; tout paquet
qui correspondra &agrave; la r&egrave;gle pr&eacute;cit&eacute;e. Il est
&agrave; noter que le mot-cl&eacute; <tt>keep state</tt> : <tt>keep
d86 1
a86 1
&ecirc;tre utilis&eacute; dans les r&egrave;gles <tt>pass</tt>qui
d118 1
a118 1
L'affectation de balises observe les r&egrave;gles suivantes :
d120 9
a128 9
<li>Les balises sont adh&eacute;rentes ("sticky"). Une fois une balise
    est appliqu&eacute;e &agrave; un paquet par une r&egrave;gle
    correspondante, elle n'est jamais supprim&eacute;e. Cependant, elle
    peut &ecirc;tre remplac&eacute;e par une balise diff&eacute;rente.
<li>A cause de cette forte adh&eacute;rence d'une balise, un paquet peut
    avoir une balise m&ecirc;me si la derni&egrave;re r&egrave;gle
    correspondante n'utilise pas le mot-cl&eacute; <tt>tag</tt>.
<li>Un paquet ne peut avoir qu'une seule balise &agrave; un moment
    donn&eacute;.
d130 1
a130 1
    envoy&eacute;es sur le r&eacute;seau.
d134 1
a134 1
Prenons le jeu de r&egrave;gles suivant comme exemple :
d147 1
a147 1
    attribuer une balise <tt>INT_NET</tt> par la r&egrave;gle #1.
d149 4
a152 4
    destin&eacute;s au port 80 se verront d'abord attribuer une balise
    <tt>INT_NET</tt> par la r&egrave;gle #1. Cette balise sera ensuite
    remplac&eacute;e par la balise <tt>INT_NET_HTTP</tt> &agrave; cause
    de la r&egrave;gle #2.
d154 2
a155 2
provenance de 192.168.1.5 seront autoris&eacute;s par la r&egrave;gle #3
car c'est la derni&egrave;re r&egrave;gle qui correspond au filtrage de
d157 1
a157 1
<tt>INT_NET_HTTP</tt> s'ils sont destin&eacute;s au port TCP 80, sinon
d162 3
a164 3
De m&ecirc;me que pour les r&egrave;gles de filtrage, les balises
peuvent &ecirc;tre appliqu&eacute;es par des r&egrave;gles <tt>nat</tt>,
<tt>rdr</tt>, et <tt>binat</tt> en utilisant le mot-cl&eacute;
d168 3
a170 3
<h2>V&eacute;rification des Balises Appliqu&eacute;es</h2>
Pour v&eacute;rifier les balises pr&eacute;c&eacute;demment
appliqu&eacute;es, utilisez le mot-cl&eacute; <tt>tagged</tt> comme dans
d179 5
a183 5
Les paquets sortant &agrave; partir de <tt>$ext_if</tt>doivent
&ecirc;tre balis&eacute;s avec la balise <tt>INT_NET</tt> pour que la
r&egrave;gle ci-dessus corresponde &agrave; ces paquets. La
correspondance inverse peut aussi &ecirc;tre r&eacute;alis&eacute;e avec
l'op&eacute;rateur <tt>!</tt> :
d192 6
a197 6
Le filtrage par politique utilise une approche diff&eacute;rente pour
l'&eacute;criture d'un jeu de r&egrave;gles. Une politique est
d&eacute;finie par rapport aux types de trafic : r&egrave;gles pour les
types de trafic &agrave; passer, r&egrave;gles pour les types de trafic
&agrave; bloquer. Les paquets sont ensuite classifi&eacute;s au sein de
la politique selon les crit&egrave;res traditionnels : adresse IP
d201 5
a205 5
<li>Le trafic provenant du LAN interne et &agrave; destination de la DMZ
    est autoris&eacute; (LAN_DMZ)
<li>Le trafic provenant d'Internet et &agrave; destination de serveurs
    dans la DMZ est autoris&eacute; (INET_DMZ)
<li>Le trafic provenant d'Internet et redirig&eacute; vers 
d208 2
a209 2
    est autoris&eacute; (SPAMD)
<li>Tout autre trafic est bloqu&eacute;
d213 4
a216 4
Notez la mani&egrave;re dont la politique couvre <i>all</i> le trafic
qui transite par le pare-feu. Le mot entre parenth&egrave;ses indique le
nom de la balise qui sera utilis&eacute;e pour chaque
&eacute;l&eacute;ment de la politique.
d219 2
a220 2
Des r&egrave;gles de filtrage et de traduction doivent &ecirc;tre
&eacute;crites maintenant pour classifier les paquets au sein de la
d235 2
a236 2
Maintenant les r&egrave;gles qui constituent la politique sont
d&eacute;finies.
d247 5
a251 5
Maintenant que le jeu de r&egrave;gles a &eacute;t&eacute;
param&eacute;tr&eacute;, les modifications futures sont &agrave;
apporter uniquement dans les r&egrave;gles de classifications. Par
exemple, si un serveur POP3/SMTP est ajout&eacute; &agrave; la DMZ, il
sera n&eacute;cessaire d'ajouter des r&egrave;gles de classification
d263 1
a263 1
Le trafic mail sera autoris&eacute; car il fait partie de la
d267 1
a267 1
Voici le jeu de r&egrave;gles complet :
d283 1
a283 1
# d&eacute;finie
d305 1
a305 1
Le balisage peut &ecirc;tre effectu&eacute; au niveau Ethernet si la
d308 4
a311 4
En cr&eacute;ant des r&egrave;gles de filtrage pour bridge(4) qui
utilisent le mot-cl&eacute; <tt>tag</tt>, PF peut filtrer les paquets
d'apr&egrave;s leur adresse MAC source/destination. Les r&egrave;gles
pour bridge(4) sont cr&eacute;&eacute;s avec la commande
d330 1
a330 1
[<a href="pools.html">Pr&eacute;c&eacute;dent : Ensembles d'Adresses
d333 1
a333 1
[<a href="logging.html">Suivant : Journal des Ev&eacute;nements</a>]
d342 1
a342 1
$Translation: tagging.html,v 1.7 2004/05/28 18:44:13 saad Exp $<br>
@


1.5
log
@sync with Steelix CVS
@
text
@d4 1
a4 1
<title>PF: Balisage de Paquets</title>
d43 1
a43 1
<h1><font color="#e00000">PF: Balisage de Paquets</font></h1>
d342 1
a342 1
$Translation: tagging.html,v 1.6 2004/05/16 08:21:46 saad Exp $<br>
@


1.4
log
@sync with Steelix CVS. thanks to Olivier HORN <ohorn at axal dot fr> for
a fix.
@
text
@d36 1
a36 1
[<a href="../pools.html">Pr&eacute;c&eacute;dent : Ensembles d'Adresses
d330 1
a330 1
[<a href="../pools.html">Pr&eacute;c&eacute;dent : Ensembles d'Adresses
d342 1
a342 1
$Translation: tagging.html,v 1.5 2004/05/12 20:21:45 saad Exp $<br>
@


1.3
log
@Sync with Steelix CVS
@
text
@a10 1
<meta name="copyright"     content="This document copyright 2003-2004 by OpenBSD.">
d13 17
d341 2
a342 2
Originally [OpenBSD: tagging.html,v 1.3 ]<br>
$Translation: tagging.html,v 1.4 2004/05/02 21:15:16 saad Exp $<br>
@


1.2
log
@Sync with Steelix CVS
@
text
@d74 28
d191 1
a191 1
href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.4">spamd(8)</a> 
d291 1
a291 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.4">bridge(4)</a>). 
d296 1
a296 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.4"
d325 2
a326 2
Originally [OpenBSD: tagging.html,v 1.2 ]<br>
$Translation: tagging.html,v 1.2 2004/01/02 22:10:05 saad Exp $<br>
@


1.1
log
@Sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name="copyright"     content="This document copyright 2003 by OpenBSD.">
d297 2
a298 2
Originally [OpenBSD: tagging.html,v 1.1 ]<br>
$Translation: tagging.html,v 1.1 2003/12/28 21:20:14 saad Exp $<br>
@

