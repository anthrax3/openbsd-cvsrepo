head	1.33;
access;
symbols;
locks; strict;
comment	@# @;


1.33
date	2014.04.01.17.14.10;	author nick;	state dead;
branches;
next	1.32;

1.32
date	2013.11.01.18.04.05;	author ajacoutot;	state Exp;
branches;
next	1.31;

1.31
date	2013.05.07.12.47.22;	author ajacoutot;	state Exp;
branches;
next	1.30;

1.30
date	2013.02.22.07.53.37;	author ajacoutot;	state Exp;
branches;
next	1.29;

1.29
date	2012.11.02.07.24.05;	author ajacoutot;	state Exp;
branches;
next	1.28;

1.28
date	2012.05.13.16.30.18;	author ajacoutot;	state Exp;
branches;
next	1.27;

1.27
date	2011.11.05.12.45.49;	author ajacoutot;	state Exp;
branches;
next	1.26;

1.26
date	2011.05.07.08.22.01;	author ajacoutot;	state Exp;
branches;
next	1.25;

1.25
date	2010.11.09.08.15.21;	author ajacoutot;	state Exp;
branches;
next	1.24;

1.24
date	2010.05.24.18.32.44;	author ajacoutot;	state Exp;
branches;
next	1.23;

1.23
date	2009.12.22.17.49.10;	author ajacoutot;	state Exp;
branches;
next	1.22;

1.22
date	2009.10.20.20.44.42;	author ajacoutot;	state Exp;
branches;
next	1.21;

1.21
date	2009.05.01.13.16.23;	author tobias;	state Exp;
branches;
next	1.20;

1.20
date	2008.12.01.07.52.52;	author tobias;	state Exp;
branches;
next	1.19;

1.19
date	2008.08.25.14.21.24;	author tobias;	state Exp;
branches;
next	1.18;

1.18
date	2008.03.09.13.37.13;	author tobias;	state Exp;
branches;
next	1.17;

1.17
date	2008.01.13.13.43.35;	author tobias;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.09.05.49.53;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2007.02.14.19.01.55;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2006.11.02.18.23.22;	author jufi;	state Exp;
branches;
next	1.13;

1.13
date	2006.05.02.17.09.33;	author jufi;	state Exp;
branches;
next	1.12;

1.12
date	2006.03.10.16.35.07;	author saad;	state Exp;
branches;
next	1.11;

1.11
date	2005.11.03.11.30.53;	author saad;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.22.17.38.07;	author saad;	state Exp;
branches;
next	1.9;

1.9
date	2005.01.18.09.54.52;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2004.12.29.10.38.26;	author saad;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.01.02.56.30;	author saad;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.11.16.17.48;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.11.10.15.58;	author jufi;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.07.10.24.20;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.31.21.12.02;	author saad;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.20.09.59.02;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.16.13.08.03;	author saad;	state Exp;
branches;
next	;


desc
@@


1.33
log
@
Abandon translations, per deraadt@@ and ajacoutot@@.
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>PF : Ensembles d'adresses (&quot;Pools&quot;) et Partage de Charge</title>

<link rev="made" href="mailto:www@@openbsd.org">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="resource-type" content="document">
<meta name="description"   content="the OpenBSD FAQ page">
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
</head>

<!--
Copyright (c) 2003, 2004 Joel Knight <enabled@@myrealbox.com>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor="#ffffff" text="#000000">
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->

<a href="../../../fr/index.html">
<img alt="[OpenBSD]" height="30" width="141" src="../../../images/smalltitle.gif" border="0">
</a>
<p>
[<a href="queueing.html">Précédent : Gestion de La Bande Passante</a>]
[<a href="index.html">Index</a>]
[<a href="tagging.html">Suivant : Balisage de Paquets</a>]

<p>
<h1>
<font color="#e00000">Pools d'Adresses et Partage de Charge</font>
</h1>

<hr>

<h3>Table des Matières</h3>
<ul>
<li><a href="#intro">Introduction</a>
<li><a href="#nat">Pools d'Adresses NAT</a>
<li><a href="#incoming">Partage de Charge Des Connexions Entrantes</a>
<li><a href="#outgoing">Partage de Charge Des Connexions Sortantes</a>
        <ul>
        <li><a href="#outexample">Exemple de Base de Règles</a>
        </ul>
</ul>

<hr>

<a name="intro"></a>
<h2>Introduction</h2>
Un pool d'adresses, constitué de deux adresses ou plus, permet
à un groupe d'utilisateurs une utilisation partagée de ces
adresses. Un tel ensemble peut être utilisé comme adresse
de destination dans les options
<tt>nat-to</tt>, <tt>rdr-to</tt>,<tt>route-to</tt>,
<tt>reply-to</tt> et <tt>dup-to</tt>  <a href="filter.html">filter</a>.

<p>
Il existe quatre méthodes pour utiliser un pool d'adresses :
<ul>
<li><tt>bitmask</tt> - supprime la partie réseau d'une adresse IP
    (adresse utilisée comme adresse source dans des règles
    <tt>nat-to</tt> ou adresse destination dans des règles
    <tt>rdr-to</tt>) et la remplace avec la partie réseau de
    l'adresse correspondante du pool d'adresses.

Exemple : si l'adresse du pool est 192.0.2.1/24 et l'adresse à
modifier est la 10.0.0.50, l'adresse correspondante au niveau du pool
est la 192.0.2.50. Si le pool d'adresses est le bloc 192.0.2.1/25 et
l'adresse à modifier est la 10.0.0.130, alors l'adresse
correspondante au niveau du pool est la 192.0.2.2.

<li><tt>random</tt> - sélectionne aléatoirement une
    adresse du pool.
<li><tt>source-hash</tt> - utilise un hash de l'adresse source pour
    choisir l'adresse du pool à utiliser. Cette méthode
    permet de garantir qu'une adresse source donnée sera
    toujours associée avec la même adresse du pool. La
    clé avec laquelle est alimenté l'algorithme de
    hachage peut être spécifiée en option
    après le mot-clé <tt>source-hash</tt> au format hex
    ou chaîne de caractères. Par défaut,
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.4">pfctl(8)</a>
    va générer une clé aléatoire à chaque
    fois que la base de règles est chargée.
<li><tt>round-robin</tt> - attribue les adresses du pool
    séquentiellement. C'est la méthode par défaut
    et c'est aussi la seule méthode autorisée lorsque le
    pool d'adresses est spécifié en utilisant une
    <a href="tables.html">table</a>.
</ul>

<p>
Dans tous les cas, à l'exception notable de la méthode
<tt>round-robin</tt>, le pool d'adresses doit être
spécifié sous forme d'un bloc réseau en notation
<a href="http://public.swbell.net/dedicated/cidr.html">CIDR</a>
(Classless Inter-Domain Routing). La méthode <tt>round-robin</tt>
accepte des adresses individuelles à partir d'une
<a href="macros.html#lists">liste</a> ou d'une <a href="tables.html">table</a>.

<p>
L'option <tt>sticky-address</tt> peut être utilisée
conjointement avec les types de pool <tt>random</tt> et <tt>round-
robin</tt> afin de s'assurer qu'à une adresse source donnée
corresponde toujours la même adresse de redirection.

<a name="nat"></a>
<h2>Pools d'Adresses NAT</h2>
Un pool d'adresses peut être utilisé comme adresse de
traduction dans les règles
<a href="nat.html"><tt>nat-to</tt></a>. Les adresses source dans chaque
paquet de connexion sont traduites avec une adresse du pool selon la
méthode choisie. Ceci peut être utile dans des situations
où PF doit faire des opérations de NAT pour un
réseau très grand. Etant donné que le nombre de
connexions traduites par adresse de traduction est limité,
l'ajout d'adresses de traduction permettra à la passerelle NAT
d'être ajustée afin d'assurer le service pour un grand nombre
d'utilisateurs.

<p>
Dans l'exemple suivant, un pool de deux adresses est utilisé pour
traduire les paquets sortants. Pour chaque connexion sortante, PF fera
une attribution séquentielle avec rotation selon la
méthode round-robin.
<blockquote>
<tt>
match out on $ext_if inet nat-to { 192.0.2.5, 192.0.2.10 }
</tt>
</blockquote>

<p>
Cependant, cette méthode a un inconvénient. En effet, des
connexions successives à partir de la même adresse interne
ne seront pas toujours traduites avec la même adresse de
traduction. Ceci peut causer des interférences lors, par exemple,
de la navigation sur des sites web qui utilisent les adresses IP comme
éléments d'identification des utilisateurs. Une approche
alternative consiste à utiliser la méthode <tt>source-
hash</tt>. Ainsi, chaque adresse interne est toujours traduite avec la
même adresse de traduction. Dans ce cas, le pool d'adresses doit
être obligatoirement un bloc réseau en notation
<a href="http://public.swbell.net/dedicated/cidr.html">CIDR</a>.
<blockquote>
<tt>
match out on $ext_if inet nat-to 192.0.2.4/31 source-hash
</tt>
</blockquote>

<p>
Cette règle utilise le pool d'adresses
192.0.2.4/31 (192.0.2.4 - 192.0.2.5) comme adresse de traduction de
paquets sortants. Chaque adresse interne sera toujours traduite avec la
même adresse de traduction grâce au mot-clé
<tt>source-hash</tt>.

<a name="incoming"></a>
<h2>Partage de Charge Des Connexions
Entrantes</h2>
Des pools d'adresses peuvent aussi être utilisés pour
partager la charge sur les connexions entrantes. Par exemple, des
connexions web entrantes peuvent être partagées entre
serveurs web d'une même ferme :
<blockquote>
<tt>
web_servers = "{ 10.0.0.10, 10.0.0.11, 10.0.0.13 }"<br>
<br>
match in on $ext_if proto tcp to port 80 rdr-to $web_servers \<br>
&nbsp;&nbsp;&nbsp;&nbsp;round-robin sticky-address
</tt>
</blockquote>

<p>
Les connexions successives seront redirigées vers les serveurs
web selon la méthode round-robin : les connexions à partir
de la même adresse source seront toujours envoyés au
même serveur web. Cette connexion "collante" ("sticky") existera
aussi longtemps qu'il y aura des états faisant
référence à cette connexion. Une fois les
états expirés, la connexion collante expirera aussi. Les
futures connexions à partir de ce hôte seront
redirigés vers le prochain serveur dans le round robin.

<a name="outgoing"></a>
<h2>Partage de Charge Des Connexions Sortantes</h2>
Les pools d'adresses peuvent être utilisés en combinaison
de l'option de filtrage <tt>route-to</tt> pour faire du partage de
charge entre deux ou plusieurs connexions Internet lorsqu'un protocole
de routage multi-lien
(tel que <a href="http://www.rfc-editor.org/rfc/rfc1771.txt">BGP4</a>)
n'est pas disponible. En utilisant <tt>route-to</tt> avec un pool
d'adresses et la méthode <tt>round-robin</tt>, les connexions
sortantes peuvent être distribuées entre plusieurs liens.

<p>
Pour que le partage de charge fonctionne, il faut aussi connaître
l'adresse IP du routeur adjacent sur chaque connexion Internet. Ces
informations sont données à l'option <tt>route-to</tt>
afin de contrôler la destination des paquets sortants.

<p>
L'exemple suivant partage le trafic sortant entre deux connexions
Internet :
<blockquote>
<tt>
lan_net = "192.168.0.0/24"<br>
int_if &nbsp;= "dc0"<br>
ext_if1 = "fxp0"<br>
ext_if2 = "fxp1"<br>
ext_gw1 = "68.146.224.1"<br>
ext_gw2 = "142.59.76.1"<br>
<br>
pass in on $int_if from $lan_net \<br>
&nbsp;&nbsp;&nbsp;route-to { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) }\<br>
&nbsp;&nbsp;&nbsp;round-robin
</tt>
</blockquote>

<p>
L'option <tt>route-to</tt> est utilisée pour le trafic <i>entrant</i>
sur l'interface <i>interne</i> afin de spécifier les interfaces
réseau sur lesquelles le trafic sortant doit être
partagé ainsi que les passerelles respectives de chaque interface
réseau. 
Il est à noter que l'option <tt>route-to</tt> doit
être présente dans <i>chaque</i> règle de filtrage pour
laquelle le trafic doit être équilibré
(elle ne peut être utilisée avec les règles <tt>match</tt>).

<p>
Pour s'assurer que les paquets avec une adresse source appartenant
à <tt>$ext_if1</tt> sont toujours acheminés vers
<tt>$ext_gw1</tt> (et, de même, pour <tt>$ext_if2</tt> et
<tt>$ext_gw2</tt>), les deux lignes suivantes doivent être
incluses dans le jeu de règles :
<blockquote>
<tt>
pass out on $ext_if1 from $ext_if2 \<br>
&nbsp;&nbsp;&nbsp;route-to ($ext_if2 $ext_gw2)<br>
pass out on $ext_if2 from $ext_if1 \<br>
&nbsp;&nbsp;&nbsp;route-to ($ext_if1 $ext_gw1) 
</tt>
</blockquote>

<p>
Enfin, la NAT peut aussi être utilisée sur chaque interface
de sortie :
<blockquote>
<tt>
match out on $ext_if1 from $lan_net nat-to ($ext_if1)<br>
match out on $ext_if2 from $lan_net nat-to ($ext_if2)
</tt>
</blockquote>

<a name="outexample"></a>
<p>
Voici un exemple complet d'équilibrage de charge du trafic
sortant :

<p>
<table border=0 width="650">
<tr><td nowrap bgcolor="#EEEEEE">
<pre>
lan_net = "192.168.0.0/24"
int_if  = "dc0"
ext_if1 = "fxp0"
ext_if2 = "fxp1"
ext_gw1 = "68.146.224.1"
ext_gw2 = "142.59.76.1"

#  nat outgoing connections on each internet interface
match out on $ext_if1 from $lan_net nat-to ($ext_if1)
match out on $ext_if2 from $lan_net nat-to ($ext_if2)

#  default deny
block in
block out

#  pass all outgoing packets on internal interface
pass out on $int_if to $lan_net
#  pass in quick any packets destined for the gateway itself
pass in quick on $int_if from $lan_net to $int_if
#  load balance outgoing traffic from internal network. 
pass in on $int_if from $lan_net \
    route-to { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } \
    round-robin
#  keep https traffic on a single connection; some web applications,
#  especially "secure" ones, don't allow it to change mid-session
pass in on $int_if proto tcp from $lan_net to port https \
    route-to ($ext_if1 $ext_gw1)

#  general "pass out" rules for external interfaces
pass out on $ext_if1
pass out on $ext_if2

#  route packets from any IPs on $ext_if1 to $ext_gw1 and the same for
#  $ext_if2 and $ext_gw2
pass out on $ext_if1 from $ext_if2 route-to ($ext_if2 $ext_gw2)
pass out on $ext_if2 from $ext_if1 route-to ($ext_if1 $ext_gw1)
</pre>
</td></tr>
</table>

<p>
[<a href="queueing.html">Précédent : Mise en Queue des Paquets
et Gestion des Priorités</a>]
[<a href="index.html">Index</a>]
[<a href="tagging.html">Suivant : Balisage de Paquets</a>]

<p>
<hr>
<a href="index.html"><img height="24" width="24" src="../../../images/back.gif" border="0" alt="[back]"></a> 
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: pools.html,v 1.35 ]<br>
$Translation: pools.html,v 1.36 2013/11/01 17:02:17 rustybsd Exp $<br>
-->
$OpenBSD: pools.html,v 1.32 2013/11/01 18:04:05 ajacoutot Exp $
</small>

</body>
</html> 
@


1.32
log
@Sync with Steelix CVS
@
text
@d335 1
a335 1
$OpenBSD$
@


1.31
log
@Sync with Steelix CVS
@
text
@d97 1
a97 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.3">pfctl(8)</a>
d332 2
a333 2
Originally [OpenBSD: pools.html,v 1.34 ]<br>
$Translation: pools.html,v 1.35 2013/05/07 08:34:48 rustybsd Exp $<br>
@


1.30
log
@Sync with Steelix CVS
@
text
@d97 1
a97 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.2">pfctl(8)</a>
d332 2
a333 2
Originally [OpenBSD: pools.html,v 1.33 ]<br>
$Translation: pools.html,v 1.34 2013/02/21 16:23:32 rustybsd Exp $<br>
@


1.29
log
@Sync with Steelix CVS
@
text
@d111 1
a111 1
<a href="http://public.pacbell.net/dedicated/cidr.html">CIDR</a>
d158 1
a158 1
<a href="http://public.pacbell.net/dedicated/cidr.html">CIDR</a>.
d332 2
a333 2
Originally [OpenBSD: pools.html,v 1.32 ]<br>
$Translation: pools.html,v 1.33 2012/11/01 19:46:21 rustybsd Exp $<br>
@


1.28
log
@Sync with Steelix CVS
@
text
@d97 1
a97 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.1">pfctl(8)</a>
d243 1
a243 1
(elle ne peut être utilisée avec les règles <tt>match</tt>). 
d332 2
a333 2
Originally [OpenBSD: pools.html,v 1.31 ]<br>
$Translation: pools.html,v 1.32 2012/05/11 15:08:02 rustybsd Exp $<br>
@


1.27
log
@Sync with Steelix CVS
@
text
@d97 1
a97 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+5.0">pfctl(8)</a>
d332 2
a333 2
Originally [OpenBSD: pools.html,v 1.30 ]<br>
$Translation: pools.html,v 1.31 2011/11/05 09:29:00 benoit Exp $<br>
@


1.26
log
@Sync with Steelix CVS
@
text
@d97 1
a97 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.9">pfctl(8)</a>
d228 2
a229 2
pass in on $int_if from $lan_net \
&nbsp;&nbsp;&nbsp;route-to { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } \
d332 2
a333 2
Originally [OpenBSD: pools.html,v 1.28 ]<br>
$Translation: pools.html,v 1.30 2011/05/07 07:02:59 benoit Exp $<br>
@


1.25
log
@Sync with Steelix CVS
@
text
@d97 1
a97 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.8">pfctl(8)</a>
d332 2
a333 2
Originally [OpenBSD: pools.html,v 1.27 ]<br>
$Translation: pools.html,v 1.29 2010/11/06 14:41:18 benoit Exp $<br>
@


1.24
log
@Sync with Steelix CVS
@
text
@d97 1
a97 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.7">pfctl(8)</a>
d332 2
a333 2
Originally [OpenBSD: pools.html,v 1.26 ]<br>
$Translation: pools.html,v 1.28 2010/05/24 08:39:24 benoit Exp $<br>
@


1.23
log
@Sync with Steelix CVS
@
text
@d68 3
a70 5
de redirection dans les règles
<a href="rdr.html"><tt>rdr</tt></a>, comme adresse de traduction dans
les règles <a href="nat.html"><tt>nat</tt></a>, et comme
adresse destination dans les options <tt>route-to</tt>, <tt>reply-to</tt>,
<tt>dup-to</tt> et <a href="filter.html">filter</a>.
d77 2
a78 2
    <tt>nat</tt> ou adresse destination dans des règles
    <tt>rdr</tt>) et la remplace avec la partie réseau de
d97 1
a97 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.6">pfctl(8)</a>
d126 1
a126 1
<a href="nat.html"><tt>nat</tt></a>. Les adresses source dans chaque
d143 1
a143 1
nat on $ext_if inet -&gt; { 192.0.2.5, 192.0.2.10 }
d161 1
a161 1
nat on $ext_if inet -&gt; 192.0.2.4/31 source-hash
d166 1
a166 1
Cette règle de <tt>nat</tt> utilise le pool d'adresses
d183 1
a183 1
rdr on $ext_if proto tcp to port 80 -&gt; $web_servers \<br>
d228 3
a230 3
pass in on $int_if route-to \<br>
&nbsp;&nbsp;&nbsp;{ ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin \<br>
&nbsp;&nbsp;&nbsp;from $lan_net to any
d239 2
a240 1
réseau. Il est à noter que l'option <tt>route-to</tt> doit
d242 2
a243 6
laquelle le trafic doit être équilibré. Les paquets
de retour seront acheminés vers la même interface externe
à partir de laquelle les paquets d'origine sont ressortis (c'est
ce qui est effectué par les FAIs). Ces paquets de retour seront
ensuite acheminés vers l'interface du réseau interne
normalement.
d253 4
a256 4
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2 \<br>
&nbsp;&nbsp;&nbsp;to any<br>
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1 \<br>
&nbsp;&nbsp;&nbsp;to any 
d265 2
a266 2
nat on $ext_if1 from $lan_net -&gt; ($ext_if1)<br>
nat on $ext_if2 from $lan_net -&gt; ($ext_if2)
d287 2
a288 2
nat on $ext_if1 from $lan_net -&gt; ($ext_if1)
nat on $ext_if2 from $lan_net -&gt; ($ext_if2)
d299 3
a301 3
pass in on $int_if route-to \
    { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin \
    from $lan_net
d304 2
a305 2
pass in on $int_if route-to ($ext_if1 $ext_gw1) \
    proto tcp from $lan_net to port https
d313 2
a314 2
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1
d332 2
a333 2
Originally [OpenBSD: pools.html,v 1.25 ]<br>
$Translation: pools.html,v 1.27 2009/12/15 10:53:51 benoit Exp $<br>
@


1.22
log
@Sync with Steelix CVS
@
text
@d145 1
a145 1
nat on $ext_if inet from any to any -&gt; { 192.0.2.5, 192.0.2.10 }
d163 1
a163 1
nat on $ext_if inet from any to any -&gt; 192.0.2.4/31 source-hash
d185 1
a185 1
rdr on $ext_if proto tcp from any to any port 80 -&gt; $web_servers \<br>
d232 1
a232 1
&nbsp;&nbsp;&nbsp;from $lan_net to any keep state
d270 2
a271 2
nat on $ext_if1 from $lan_net to any -&gt; ($ext_if1)<br>
nat on $ext_if2 from $lan_net to any -&gt; ($ext_if2)
d292 2
a293 2
nat on $ext_if1 from $lan_net to any -&gt; ($ext_if1)
nat on $ext_if2 from $lan_net to any -&gt; ($ext_if2)
d296 2
a297 2
block in  from any to any
block out from any to any
d300 1
a300 1
pass out on $int_if from any to $lan_net
d303 1
a303 1
#  load balance outgoing tcp traffic from internal network. 
d306 5
a310 5
    proto tcp from $lan_net to any flags S/SA modulate state
#  load balance outgoing udp and icmp traffic from internal network
pass in on $int_if route-to \
    { ($ext_if1 $ext_gw1), ($ext_if2 $ext_gw2) } round-robin \
    proto { udp, icmp } from $lan_net to any keep state
d313 2
a314 4
pass out on $ext_if1 proto tcp from any to any flags S/SA modulate state
pass out on $ext_if1 proto { udp, icmp } from any to any keep state
pass out on $ext_if2 proto tcp from any to any flags S/SA modulate state
pass out on $ext_if2 proto { udp, icmp } from any to any keep state
d318 2
a319 2
pass out on $ext_if1 route-to ($ext_if2 $ext_gw2) from $ext_if2 to any 
pass out on $ext_if2 route-to ($ext_if1 $ext_gw1) from $ext_if1 to any 
d337 2
a338 2
Originally [OpenBSD: pools.html,v 1.24 ]<br>
$Translation: pools.html,v 1.26 2009/10/19 15:48:30 benoit Exp $<br>
@


1.21
log
@Sync with Steelix CVS
@
text
@d99 1
a99 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.5">pfctl(8)</a>
d339 2
a340 2
Originally [OpenBSD: pools.html,v 1.23 ]<br>
$Translation: pools.html,v 1.25 2009/04/30 22:46:58 benoit Exp $<br>
@


1.20
log
@Sync with Steelix CVS
@
text
@d99 1
a99 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.4">pfctl(8)</a>
d339 2
a340 2
Originally [OpenBSD: pools.html,v 1.22 ]<br>
$Translation: pools.html,v 1.24 2008/11/26 22:39:39 benoit Exp $<br>
@


1.19
log
@Sync with Steelix CVS
@
text
@d99 1
a99 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.3">pfctl(8)</a>
d339 2
a340 2
Originally [OpenBSD: pools.html,v 1.21 ]<br>
$Translation: pools.html,v 1.23 2008/08/20 15:32:01 gapz Exp $<br>
@


1.18
log
@Sync with Steelix CVS
@
text
@d99 1
a99 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.2">pfctl(8)</a>
d339 2
a340 2
Originally [OpenBSD: pools.html,v 1.20 ]<br>
$Translation: pools.html,v 1.22 2008/03/06 14:47:53 saad Exp $<br>
@


1.17
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>PF : Ensembles d'adresses (&quot:Pools&quot;) et Partage de Charge</title>
d340 1
a340 1
$Translation: pools.html,v 1.21 2008/01/11 10:52:48 saad Exp $<br>
@


1.16
log
@Sync with steelix translation CVS
@
text
@d95 1
a95 1
    clé avec laquelle est alimentée l'algorithme de
d99 1
a99 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.1">pfctl(8)</a>
d339 2
a340 2
Originally [OpenBSD: pools.html,v 1.19 ]<br>
$Translation: pools.html,v 1.19 2007/05/07 11:36:13 ajacoutot Exp $<br>
@


1.15
log
@sync with steelix translation CVS
@
text
@d99 1
a99 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+4.0">pfctl(8)</a>
d339 2
a340 2
Originally [OpenBSD: pools.html,v 1.18 ]<br>
$Translation: pools.html,v 1.17 2007/02/13 09:14:15 benoit Exp $<br>
@


1.14
log
@sync with steelix translation CVS
@
text
@d93 1
a93 1
    permet de guarantir qu'une adresse source donnée sera
d121 1
a121 1
robin</tt> afin de s'assure qu'à une adresse source donnée
d135 1
a135 1
d'être scalable afin d'assurer le service pour un grand nombre
d169 1
a169 1
192..2.4/31 (192.0.2.4 - 192.0.2.5) comme adresse de traduction de
d238 1
a238 1
sur l'interface <i>internal</i> afin de spécifier les interfaces
d245 1
a245 1
à partir de laquelle les paquets d'origine ont ressortis (c'est
d340 1
a340 1
$Translation: pools.html,v 1.16 2006/11/02 08:49:03 ajacoutot Exp $<br>
@


1.13
log
@sync with steelix translation CVS
@
text
@d99 1
a99 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.9">pfctl(8)</a>
d339 2
a340 2
Originally [OpenBSD: pools.html,v 1.17 ]<br>
$Translation: pools.html,v 1.15 2006/05/02 10:12:39 ajacoutot Exp $<br>
@


1.12
log
@sync with Steelix CVS
@
text
@d99 1
a99 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.8">pfctl(8)</a>
d339 2
a340 2
Originally [OpenBSD: pools.html,v 1.16 ]<br>
$Translation: pools.html,v 1.14 2006/03/09 14:46:29 ajacoutot Exp $<br>
@


1.11
log
@sync with Steelix CVS
@
text
@d35 1
a35 1
<a href="../../fr/index.html">
d71 2
a72 2
adresse destination dans les options
<a href="filter.html">filter</a>.
a210 9
Address pools can be used in combination with the <tt>route-to</tt> En
utilisant <tt>route-to</tt> avec un pool d'adresses et la méthode
<tt>round-robin</tt>, les connexions sortantes peuvent être
distribuées entre plusieurs liens. En utilisant <tt>route-to</tt>
avec un pool d'adresses et la méthode <tt>round-robin</tt>, les
connexions sortantes peuvent être distribuées entre
plusieurs liens. En utilisant <tt>route-to</tt> avec un pool d'adresses
et la méthode <tt>round-robin</tt>, les connexions sortantes
peuvent être distribuées entre plusieurs liens.
d237 1
a237 1
L'option <tt>route-to</tt> est utilisée pour le trafic entrant
d242 1
a242 1
être présente dans chaque règle de filtrage pour
d340 1
a340 1
$Translation: pools.html,v 1.13 2005/11/02 19:38:09 aanriot Exp $<br>
d343 1
a343 1
<small>
@


1.10
log
@sync with Steelix CVS
@
text
@d99 1
a99 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.7">pfctl(8)</a>
d348 2
a349 2
Originally [OpenBSD: pools.html,v 1.15 ]<br>
$Translation: pools.html,v 1.12 2005/05/21 09:51:45 aanriot Exp $<br>
@


1.9
log
@Sync with Steelix CVS
@
text
@d99 3
a101 3
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.6">pfctl(8)</a>
va générer une clé aléatoire à chaque
fois que la base de règles est chargée.
d336 2
a337 2
[<a href="queueing.html">Précédent : Mise en Queue des
Paquets et Gestion des Priorités</a>]
d348 2
a349 2
Originally [OpenBSD: pools.html,v 1.14 ]<br>
$Translation: pools.html,v 1.11 2005/01/17 21:34:48 aanriot Exp $<br>
@


1.8
log
@sync with Steelix CVS
@
text
@d347 1
d349 2
a350 1
$Translation: pools.html,v 1.10 2004/12/29 10:33:02 saad Exp $<br>
@


1.7
log
@sync with Steelix CVS
@
text
@d35 3
a37 1
<img alt="[OpenBSD]" height=30 width=141 src="../../../images/smalltitle.gif">
d347 2
a348 2
Originally [OpenBSD: pools.html,v 1.13 ]<br>
$Translation: pools.html,v 1.8 2004/11/01 00:16:34 saad Exp $<br>
@


1.6
log
@Sync with Steelix CVS
@
text
@d97 1
a97 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.5">pfctl(8)</a>
d345 2
a346 2
Originally [OpenBSD: pools.html,v 1.12 ]<br>
$Translation: pools.html,v 1.7 2004/10/11 12:24:36 saad Exp $<br>
@


1.5
log
@Sync with Steelix CVS
@
text
@d37 1
a37 1
[<a href="queueing.html">Pr&eacute;c&eacute;dent : Gestion de La Bande Passante</a>]
d48 1
a48 1
<h3>Table des Mati&egrave;res</h3>
d55 1
a55 1
        <li><a href="#outexample">Exemple de Base de R&egrave;gles</a>
d63 4
a66 4
Un pool d'adresses, constitu&eacute; de deux adresses ou plus, permet
&agrave; un groupe d'utilisateurs une utilisation partag&eacute;e de ces
adresses. Un tel ensemble peut &ecirc;tre utilis&eacute; comme adresse
de redirection dans les r&egrave;gles
d68 1
a68 1
les r&egrave;gles <a href="nat.html"><tt>nat</tt></a>, et comme
d73 1
a73 1
Il existe quatre m&eacute;thodes pour utiliser un pool d'adresses :
d75 4
a78 4
<li><tt>bitmask</tt> - supprime la partie r&eacute;seau d'une adresse IP
    (adresse utilis&eacute;e comme adresse source dans des r&egrave;gles
    <tt>nat</tt> ou adresse destination dans des r&egrave;gles
    <tt>rdr</tt>) et la remplace avec la partie r&eacute;seau de
d81 1
a81 1
Exemple : si l'adresse du pool est 192.0.2.1/24 et l'adresse &agrave;
d84 1
a84 1
l'adresse &agrave; modifier est la 10.0.0.130, alors l'adresse
d87 1
a87 1
<li><tt>random</tt> - s&eacute;lectionne al&eacute;atoirement une
d90 7
a96 7
    choisir l'adresse du pool &agrave; utiliser. Cette m&eacute;thode
    permet de guarantir qu'une adresse source donn&eacute;e sera
    toujours associ&eacute;e avec la m&ecirc;me adresse du pool. La
    cl&eacute; avec laquelle est aliment&eacute;e l'algorithme de
    hachage peut &ecirc;tre sp&eacute;cifi&eacute;e en option
    apr&egrave;s le mot-cl&eacute; <tt>source-hash</tt> au format hex
    ou cha&icirc;ne de caract&egrave;res. Par d&eacute;faut,
d98 2
a99 2
va g&eacute;n&eacute;rer une cl&eacute; al&eacute;atoire &agrave; chaque
fois que la base de r&egrave;gles est charg&eacute;e.
d101 3
a103 3
    s&eacute;quentiellement. C'est la m&eacute;thode par d&eacute;faut
    et c'est aussi la seule m&eacute;thode autoris&eacute;e lorsque le
    pool d'adresses est sp&eacute;cifi&eacute; en utilisant une
d108 3
a110 3
Dans tous les cas, &agrave; l'exception notable de la m&eacute;thode
<tt>round-robin</tt>, le pool d'adresses doit &ecirc;tre
sp&eacute;cifi&eacute; sous forme d'un bloc r&eacute;seau en notation
d112 2
a113 2
(Classless Inter-Domain Routing). La m&eacute;thode <tt>round-robin</tt>
accepte des adresses individuelles &agrave; partir d'une
d117 1
a117 1
L'option <tt>sticky-address</tt> peut &ecirc;tre utilis&eacute;e
d119 2
a120 2
robin</tt> afin de s'assure qu'&agrave; une adresse source donn&eacute;e
corresponde toujours la m&ecirc;me adresse de redirection.
d124 2
a125 2
Un pool d'adresses peut &ecirc;tre utilis&eacute; comme adresse de
traduction dans les r&egrave;gles
d128 6
a133 6
m&eacute;thode choisie. Ceci peut &ecirc;tre utile dans des situations
o&ugrave; PF doit faire des op&eacute;rations de NAT pour un
r&eacute;seau tr&egrave;s grand. Etant donn&eacute; que le nombre de
connexions traduites par adresse de traduction est limit&eacute;,
l'ajout d'adresses de traduction permettra &agrave; la passerelle NAT
d'&ecirc;tre scalable afin d'assurer le service pour un grand nombre
d137 1
a137 1
Dans l'exemple suivant, un pool de deux adresses est utilis&eacute; pour
d139 2
a140 2
une attribution s&eacute;quentielle avec rotation selon la
m&eacute;thode round-robin.
d148 4
a151 4
Cependant, cette m&eacute;thode a un inconv&eacute;nient. En effet, des
connexions successives &agrave; partir de la m&ecirc;me adresse interne
ne seront pas toujours traduites avec la m&ecirc;me adresse de
traduction. Ceci peut causer des interf&eacute;rences lors, par exemple,
d153 2
a154 2
&eacute;l&eacute;ments d'identification des utilisateurs. Une approche
alternative consiste &agrave; utiliser la m&eacute;thode <tt>source-
d156 2
a157 2
m&ecirc;me adresse de traduction. Dans ce cas, le pool d'adresses doit
&ecirc;tre obligatoirement un bloc r&eacute;seau en notation
d166 1
a166 1
Cette r&egrave;gle de <tt>nat</tt> utilise le pool d'adresses
d169 1
a169 1
m&ecirc;me adresse de traduction gr&acirc;ce au mot-cl&eacute;
d175 1
a175 1
Des pools d'adresses peuvent aussi &ecirc;tre utilis&eacute;s pour
d177 2
a178 2
connexions web entrantes peuvent &ecirc;tre partag&eacute;es entre
serveurs web d'une m&ecirc;me ferme :
d189 9
a197 9
Les connexions successives seront redirig&eacute;es vers les serveurs
web selon la m&eacute;thode round-robin : les connexions &agrave; partir
de la m&ecirc;me adresse source seront toujours envoy&eacute;s au
m&ecirc;me serveur web. Cette connexion "collante" ("sticky") existera
aussi longtemps qu'il y aura des &eacute;tats faisant
r&eacute;f&eacute;rence &agrave; cette connexion. Une fois les
&eacute;tats expir&eacute;s, la connexion collante expirera aussi. Les
futures connexions &agrave; partir de ce h&ocirc;te seront
redirig&eacute;s vers le prochain serveur dans le round robin.
d201 1
a201 1
Les pools d'adresses peuvent &ecirc;tre utilis&eacute;s en combinaison
d207 2
a208 2
d'adresses et la m&eacute;thode <tt>round-robin</tt>, les connexions
sortantes peuvent &ecirc;tre distribu&eacute;es entre plusieurs liens.
d210 5
a214 5
utilisant <tt>route-to</tt> avec un pool d'adresses et la m&eacute;thode
<tt>round-robin</tt>, les connexions sortantes peuvent &ecirc;tre
distribu&eacute;es entre plusieurs liens. En utilisant <tt>route-to</tt>
avec un pool d'adresses et la m&eacute;thode <tt>round-robin</tt>, les
connexions sortantes peuvent &ecirc;tre distribu&eacute;es entre
d216 2
a217 2
et la m&eacute;thode <tt>round-robin</tt>, les connexions sortantes
peuvent &ecirc;tre distribu&eacute;es entre plusieurs liens.
d220 1
a220 1
Pour que le partage de charge fonctionne, il faut aussi conna&icirc;tre
d222 2
a223 2
informations sont donn&eacute;es &agrave; l'option <tt>route-to</tt>
afin de contr&ocirc;ler la destination des paquets sortants.
d244 11
a254 11
L'option <tt>route-to</tt> est utilis&eacute;e pour le trafic entrant
sur l'interface <i>internal</i> afin de sp&eacute;cifier les interfaces
r&eacute;seau sur lesquelles le trafic sortant doit &ecirc;tre
partag&eacute; ainsi que les passerelles respectives de chaque interface
r&eacute;seau. Il est &agrave; noter que l'option <tt>route-to</tt> doit
&ecirc;tre pr&eacute;sente dans chaque r&egrave;gle de filtrage pour
laquelle le trafic doit &ecirc;tre &eacute;quilibr&eacute;. Les paquets
de retour seront achemin&eacute;s vers la m&ecirc;me interface externe
&agrave; partir de laquelle les paquets d'origine ont ressortis (c'est
ce qui est effectu&eacute; par les FAIs). Ces paquets de retour seront
ensuite achemin&eacute;s vers l'interface du r&eacute;seau interne
d259 4
a262 4
&agrave; <tt>$ext_if1</tt> sont toujours achemin&eacute;s vers
<tt>$ext_gw1</tt> (et, de m&ecirc;me, pour <tt>$ext_if2</tt> et
<tt>$ext_gw2</tt>), les deux lignes suivantes doivent &ecirc;tre
incluses dans le jeu de r&egrave;gles :
d273 1
a273 1
Enfin, la NAT peut aussi &ecirc;tre utilis&eacute;e sur chaque interface
d284 1
a284 1
Voici un exemple complet d'&eacute;quilibrage de charge du trafic
d334 2
a335 2
[<a href="../queueing.html">Pr&eacute;c&eacute;dent : Mise en Queue des
Paquets et Gestion des Priorit&eacute;s</a>]
d346 1
a346 1
$Translation: pools.html,v 1.5 2004/10/11 09:49:33 saad Exp $<br>
@


1.4
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>PF : Ensembles d'adresses ("Pools") et Partage de Charge</title>
d37 1
a37 2
[<a href="../queueing.html">Pr&eacute;c&eacute;dent : Mise en Queue des Paquets et
            Gestion des Priorit&eacute;s</a>]
d43 1
a43 2
<font color="#e00000">Pools d'Adresses et
            Partage de Charge</font>
d346 1
a346 1
$Translation: pools.html,v 1.4 2004/10/06 17:17:44 saad Exp $<br>
@


1.3
log
@sync with Steelix CVS
@
text
@d72 1
a72 1
<a href="../filter.html">filter</a>.
d348 1
a348 1
$Translation: pools.html,v 1.3 2004/05/28 18:44:13 saad Exp $<br>
@


1.2
log
@Sync with Steelix CVS
@
text
@d69 2
a70 2
<a href="../rdr.html"><tt>rdr</tt></a>, comme adresse de traduction dans
les r&egrave;gles <a href="../nat.html"><tt>nat</tt></a>, et comme
d128 1
a128 1
<a href="../nat.html"><tt>nat</tt></a>. Les adresses source dans chaque
d348 1
a348 1
$Translation: pools.html,v 1.2 2004/05/19 21:08:11 saad Exp $<br>
@


1.1
log
@sync with Steelix CVS
@
text
@a11 1
<meta name="copyright"     content="This document copyright 2003-2004 by OpenBSD.">
d14 17
d37 1
a37 1
[<a href="../queueing.html">Précédent : Mise en Queue des Paquets et
d50 1
a50 1
<h3>Table des Matières</h3>
d57 1
a57 1
        <li><a href="#outexample">Exemple de Base de Règles</a>
d65 8
a72 6
Un pool d'adresses, constitué de deux
adresses ou plus, permet à un groupe d'utilisateurs une utilisation
partagée de ces adresses. Un tel ensemble peut être utilisé comme
adresse de redirection dans les règles <a href="../rdr.html"><tt>rdr</tt></a>, comme adresse de traduction dans les
règles <a href="../nat.html"><tt>nat</tt></a>, et comme adresse
destination dans les options <a href="../filter.html">filter</a>. 
d75 1
a75 1
Il existe quatre méthodes pour utiliser un pool d'adresses :
d77 10
a86 9
<li><tt>bitmask</tt> - supprime la partie réseau d'une adresse IP (adresse
utilisée comme adresse source dans des règles <tt>nat</tt> ou adresse
destination dans des règles <tt>rdr</tt>) et la remplace avec la partie
réseau de l'adresse correspondante du pool d'adresses.

Exemple : si l'adresse du pool est 192.0.2.1/24 et l'adresse 
à modifier est la 10.0.0.50, l'adresse correspondante au
niveau du pool est la 192.0.2.50. Si le pool d'adresses est le bloc
192.0.2.1/25 et l'adresse à modifier est la 10.0.0.130, alors l'adresse
d88 3
a90 1
<li><tt>random</tt> - sélectionne aléatoirement une adresse du pool.
d92 10
a101 9
choisir l'adresse du pool à utiliser. Cette méthode permet de guarantir
qu'une adresse source donnée sera toujours associée avec la même adresse
du pool.
La clé avec laquelle est alimentée l'algorithme de hachage peut être
spécifiée en option après le mot-clé <tt>source-hash</tt> au format hex
ou chaîne de caractères. Par défaut,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.4">pfctl(8)</a>
va générer une clé aléatoire à chaque fois que la base de règles est
chargée.
d103 4
a106 3
séquentiellement. C'est la méthode par défaut et c'est aussi la seule
méthode autorisée lorsque le pool d'adresses est spécifié en utilisant
une <a href="tables.html">table</a>.
d110 3
a112 3
Dans tous les cas, à l'exception notable de la méthode
<tt>round-robin</tt>, le pool d'adresses doit être spécifié sous forme
d'un bloc réseau en notation
d114 2
a115 2
(Classless Inter-Domain Routing). La méthode <tt>round-robin</tt>
accepte des adresses individuelles à partir d'une
d118 6
d126 2
a127 2
Un pool d'adresses peut être utilisé comme adresse de traduction dans
les règles
d130 7
a136 5
méthode choisie. Ceci peut être utile dans des situations où PF doit
faire des opérations de NAT pour un réseau très grand. Etant donné que
le nombre de connexions traduites par adresse de traduction est limité,
l'ajout d'adresses de traduction permettra à la passerelle NAT d'être
scalable afin d'assurer le service pour un grand nombre d'utilisateurs.
d139 1
a139 1
Dans l'exemple suivant, un pool de deux adresses est utilisé pour
d141 2
a142 1
une attribution séquentielle avec rotation selon la méthode round-robin.
d150 10
a159 9
Cependant, cette méthode a un inconvénient. En effet, des connexions
successives à partir de la même adresse interne ne seront pas toujours
traduites avec la même adresse de traduction. Ceci peut causer des
interférences lors, par exemple, de la navigation sur des sites web qui
utilisent les adresses IP comme éléments d'identification des
utilisateurs. Une approche alternative consiste à utiliser la méthode
<tt>source-hash</tt>. Ainsi, chaque adresse interne est toujours
traduite avec la même adresse de traduction. Dans ce cas, le pool
d'adresses doit être obligatoirement un bloc réseau en notation
d168 5
a172 4
Cette règle de <tt>nat</tt> utilise le pool d'adresses 192.0.2.4/31
(192.0.2.4 - 192.0.2.5) comme adresse de traduction de paquets sortants.
Chaque adresse interne sera toujours traduite avec la même adresse de
traduction grâce au mot-clé <tt>source-hash</tt>.
d177 4
a180 3
Des pools d'adresses peuvent aussi être utilisés pour partager la charge
sur les connexions entrantes. Par exemple, des connexions web entrantes
peuvent être partagées entre serveurs web d'une même ferme :
d185 2
a186 1
rdr on $ext_if proto tcp from any to any port 80 -&gt; $web_servers
d191 9
a199 10
Les connexions successives seront redirigées vers les serveurs web selon
la méthode round-robin.

<p>
Comme nous avions pû le voir à travers l'exemple de NAT, si les serveurs
web ont des adresses appartenant au même bloc réseau CIDR, le mot-clé
<tt>source-hash</tt> peut être utilisé pour que toutes les connexions à
partir d'une même adresse IP sont toujours redirigées vers le même
serveur web. Encore une fois, ceci peut être nécessaire pour maintenir
des informations sur la session lors de la navigation sur un site web.
d203 4
a206 3
Les pools d'adresses peuvent être utilisés en combinaison de l'option de
filtrage <tt>route-to</tt> pour faire du partage de charge entre deux ou
plusieurs connexions Internet lorsqu'un protocole de routage multi-lien
d209 2
a210 2
d'adresses et la méthode <tt>round-robin</tt>, les connexions sortantes
peuvent être distribuées entre plusieurs liens.
d212 8
a219 8
utilisant <tt>route-to</tt> avec un pool d'adresses et la méthode
<tt>round-robin</tt>, les connexions sortantes peuvent être distribuées
entre plusieurs liens. En utilisant <tt>route-to</tt> avec un pool
d'adresses et la méthode <tt>round-robin</tt>, les connexions sortantes
peuvent être distribuées entre plusieurs liens. En utilisant
<tt>route-to</tt> avec un pool d'adresses et la méthode
<tt>round-robin</tt>, les connexions sortantes peuvent être distribuées
entre plusieurs liens.
d222 1
a222 1
Pour que le partage de charge fonctionne, il faut aussi connaître
d224 2
a225 2
informations sont données à l'option <tt>route-to</tt> afin de contrôler
la destination des paquets sortants.
d246 19
a264 16
L'option <tt>route-to</tt> est utilisée pour le trafic entrant sur
l'interface <i>internal</i> afin de spécifier les interfaces réseau
sur lesquelles le trafic sortant doit être partagé ainsi que
les passerelles respectives de chaque interface réseau. Il est à noter
que l'option  <tt>route-to</tt> doit être présente dans chaque règle de
filtrage pour laquelle le trafic doit être équilibré. Les paquets de
retour seront acheminés vers la même interface externe à partir de
laquelle les paquets d'origine ont ressortis (c'est ce qui est effectué
par les FAIs). Ces paquets de retour seront ensuite acheminés vers
l'interface du réseau interne normalement.

<p>
Pour s'assurer que les paquets avec une adresse source appartenant à
<tt>$ext_if1</tt> sont toujours acheminés vers <tt>$ext_gw1</tt> (et, de
même, pour <tt>$ext_if2</tt> et <tt>$ext_gw2</tt>), les deux lignes
suivantes doivent être incluses dans le jeu de règles :
d275 2
a276 1
Enfin, la NAT peut aussi être utilisée sur chaque interface de sortie :
d286 2
a287 1
Voici un exemple complet d'équilibrage de charge du trafic sortant :
d336 2
a337 2
[<a href="../queueing.html">Précédent : Mise en Queue des Paquets et
            Gestion des Priorit&eacute;s</a>]
d347 2
a348 2
Originally [OpenBSD: pools.html,v 1.10 ]<br>
$Translation: pools.html,v 1.1 2004/05/16 08:21:46 saad Exp $<br>
@

