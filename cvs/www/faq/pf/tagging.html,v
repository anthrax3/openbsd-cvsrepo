head	1.37;
access;
symbols;
locks; strict;
comment	@# @;


1.37
date	2016.09.19.23.44.47;	author tj;	state Exp;
branches;
next	1.36;
commitid	P53AgOpLKrOmgs5r;

1.36
date	2016.08.15.02.22.15;	author tb;	state Exp;
branches;
next	1.35;
commitid	3DeixV5YkPOb78RN;

1.35
date	2016.06.13.17.58.25;	author tj;	state Exp;
branches;
next	1.34;
commitid	Grx2UyJPWzJbbhkP;

1.34
date	2016.04.18.19.07.50;	author tj;	state Exp;
branches;
next	1.33;
commitid	g0cUF3jNn5Tz4oaZ;

1.33
date	2016.04.16.00.30.41;	author tj;	state Exp;
branches;
next	1.32;
commitid	rTxoenHHaeutOff1;

1.32
date	2016.04.15.20.39.49;	author tb;	state Exp;
branches;
next	1.31;
commitid	jwteSMEb4rFzI8UA;

1.31
date	2016.03.29.01.27.39;	author tb;	state Exp;
branches;
next	1.30;
commitid	4Y8oU6GBrSY1UOfW;

1.30
date	2016.03.27.19.52.09;	author sthen;	state Exp;
branches;
next	1.29;
commitid	hi2ObFv9LGB98JY5;

1.29
date	2016.03.22.10.56.56;	author sthen;	state Exp;
branches;
next	1.28;
commitid	G2izHhNJ7aqR0Y6j;

1.28
date	2016.03.21.05.46.21;	author beck;	state Exp;
branches;
next	1.27;
commitid	zEx6zFkNSFFExu0v;

1.27
date	2016.01.24.21.40.35;	author tj;	state Exp;
branches;
next	1.26;
commitid	bFaFSpgHCeTHjIC5;

1.26
date	2015.07.02.05.49.05;	author bentley;	state Exp;
branches;
next	1.25;
commitid	AP3UllesavMDEUhQ;

1.25
date	2015.05.11.11.18.30;	author sthen;	state Exp;
branches;
next	1.24;
commitid	wRrXxcro6dFYiwF8;

1.24
date	2014.12.01.10.01.07;	author bentley;	state Exp;
branches;
next	1.23;
commitid	DtrOVs7q8kqgEsjm;

1.23
date	2014.06.24.13.42.23;	author sthen;	state Exp;
branches;
next	1.22;
commitid	lNk1kOIOTb9J7iWf;

1.22
date	2014.03.31.02.33.07;	author nick;	state Exp;
branches;
next	1.21;

1.21
date	2011.01.28.07.42.23;	author sthen;	state Exp;
branches;
next	1.20;

1.20
date	2011.01.07.20.29.32;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2010.05.19.13.25.16;	author sthen;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.07.01.27.19;	author joel;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.07.01.13.53;	author joel;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.06.18.59.55;	author nick;	state Exp;
branches;
next	1.15;

1.15
date	2006.11.10.17.16.15;	author joel;	state Exp;
branches;
next	1.14;

1.14
date	2006.11.01.01.56.01;	author joel;	state Exp;
branches;
next	1.13;

1.13
date	2006.10.27.19.26.13;	author nick;	state Exp;
branches;
next	1.12;

1.12
date	2006.07.09.12.57.06;	author steven;	state Exp;
branches;
next	1.11;

1.11
date	2006.05.01.00.54.29;	author nick;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.28.17.13.20;	author joel;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.01.11.35.18;	author nick;	state Exp;
branches;
next	1.8;

1.8
date	2005.09.24.15.37.26;	author joel;	state Exp;
branches;
next	1.7;

1.7
date	2005.05.20.00.12.02;	author joel;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.22.04.28.16;	author david;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.29.17.22.57;	author nick;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.07.01.55.24;	author nick;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.30.18.00.25;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.01.04.16.17;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	2003.11.30.23.14.31;	author nick;	state Exp;
branches;
next	;


desc
@@


1.37
log
@less "$ext_if" and more egress to simplify example rulesets.
zap some stray <p> tags while here.
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

<!-- If you make edits to any FAQ documents, please start each sentence
     on a new line, and try to keep the general formatting consistent
     with the rest of the pages -->

<title>OpenBSD PF: Packet Tagging (Policy Filtering)</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="../../openbsd.css">
<link rel="canonical" href="https://www.openbsd.org/faq/pf/tagging.html">
</head>

<!--
Copyright (c) 2003-2007 Joel Knight <enabled@@myrealbox.com>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor="#ffffff" text="#000000">

<h2>
<a href="../../index.html">
<font color="#0000ff"><i>Open</i></font><font color="#000084">BSD</font></a>
<font color="#e00000">PF - Packet Tagging (Policy Filtering)</font>
<small>
<a href="index.html" style="font-weight:normal; float:right">[Contents]</a>
</small>
</h2>
<hr>

<ul>
  <li><a href="#intro"    >Introduction</a>
  <li><a href="#assign"   >Assigning tags to packets</a>
  <li><a href="#check"    >Checking for applied tags</a>
  <li><a href="#policy"   >Policy filtering</a>
  <li><a href="#ethernet" >Tagging ethernet frames</a>
</ul>
<hr>

<h2 id="intro">Introduction</h2>

Packet tagging is a way of marking packets with an internal identifier
that can later be used in filter and translation rule criteria.
With tagging, it's possible to do such things as create "trusts" between
interfaces and determine if packets have been processed by translation rules.
It's also possible to move away from rule-based filtering and to start
doing policy-based filtering.

<h2 id="assign">Assigning tags to Packets</h2>

To add a tag to a packet, use the <tt>tag</tt> keyword:

<blockquote><pre>
pass in on $int_if all tag INTERNAL_NET
</pre></blockquote>

The tag <tt>INTERNAL_NET</tt> will be added to any packet which matches
the above rule.

<p>
A tag can also be assigned using a <a href="macros.html#macros">macro</a>.
For instance:

<blockquote><pre>
name = "INTERNAL_NET"
pass in on $int_if all tag $name
</pre></blockquote>

There are a set of predefined macros which can also be used.

<ul>
  <li><tt>$if</tt>      - The interface
  <li><tt>$srcaddr</tt> - Source IP address
  <li><tt>$dstaddr</tt> - Destination IP address
  <li><tt>$srcport</tt> - The source port specification
  <li><tt>$dstport</tt> - The destination port specification
  <li><tt>$proto</tt>   - The protocol
  <li><tt>$nr</tt>      - The rule number
</ul>

These macros are expanded at ruleset load time and NOT at runtime.

<p>
Tagging follows these rules:

<ul>
  <li>Tags are "sticky."
      Once a tag is applied to a packet by a matching rule, it is never
      removed.
      It can, however, be replaced with a different tag.
  <li>Because of a tag's "stickiness," a packet can have a tag even if the
      last matching rule doesn't use the <tt>tag</tt> keyword.
  <li>A packet is only ever assigned a maximum of one tag at a time.
  <li>Tags are <i>internal</i> identifiers.
      Tags are not sent out over the wire.
  <li>Tag names can be up to 63 characters long.
</ul>

Take the following ruleset as an example.

<blockquote><pre>
pass in on $int_if tag INT_NET
pass in quick on $int_if proto tcp to port 80 tag INT_NET_HTTP
pass in quick on $int_if from 192.168.1.5
</pre></blockquote>

<ul>
  <li>Packets coming in on <tt>$int_if</tt> will be assigned a tag of
      <tt>INT_NET</tt> by rule #1.
  <li>TCP packets coming in on <tt>$int_if</tt> and destined for port 80
      will first be assigned a tag of <tt>INT_NET</tt> by rule #1.
      That tag will then be replaced with the <tt>INT_NET_HTTP</tt> tag by
      rule #2.
  <li>Packets coming in on <tt>$int_if</tt> from 192.168.1.5 will be tagged
      one of two ways.
      If the packet is destined for TCP port 80 it will match rule #2 and be
      tagged with <tt>INT_NET_HTTP</tt>.
      Otherwise, the packet will match rule #3 but will be tagged with
      <tt>INT_NET</tt>.
      Because the packet matches rule #1, the <tt>INT_NET</tt> tag is applied
      and is not removed unless a subsequently matching rule specifies a tag
      (this is the "stickiness" of a tag).
</ul>

<h2 id="check">Checking for applied tags</h2>

To check for previously applied tags, use the <tt>tagged</tt> keyword:

<blockquote><pre>
pass out on egress tagged INT_NET
</pre></blockquote>

Outgoing packets on the external interface must be tagged with the
<tt>INT_NET</tt> tag in order to match the above rule.
Inverse matching can also be done by using the <tt>!</tt> operator:

<blockquote><pre>
pass out on egress ! tagged WIFI_NET
</pre></blockquote>

<h2 id="policy">Policy filtering</h2>

Policy filtering takes a different approach to writing a filter ruleset.
A policy is defined which sets the rules for what types of traffic is
passed and what types are blocked.
Packets are then classified into the policy based on the traditional
criteria of source/destination IP address/port, protocol, etc.
For example, examine the following firewall policy:

<ul>
  <li>Traffic from the internal LAN to the Internet is permitted
      (LAN_INET) and must be translated (LAN_INET_NAT).
  <li>Traffic from the internal LAN to the DMZ is permitted (LAN_DMZ).
  <li>Traffic from the Internet to servers in the DMZ is permitted
      (INET_DMZ).
  <li>Traffic from the Internet that's being redirected to
      <a href="http://man.openbsd.org/spamd">spamd(8)</a> is permitted (SPAMD).
  <li>All other traffic is blocked.
</ul>

Note how the policy covers <i>all</i> traffic that will be passing through
the firewall.
The item in parenthesis indicates the tag that will be used for that
policy item.

<p>
Rules now need to be written to classify packets into the policy.

<blockquote><pre>
block all
pass out on egress inet tag LAN_INET_NAT tagged LAN_INET nat-to ($ext_if)
pass in  on $int_if from $int_net tag LAN_INET
pass in  on $int_if from $int_net to $dmz_net tag LAN_DMZ
pass in  on egress proto tcp to $www_server port 80 tag INET_DMZ
pass in  on egress proto tcp from &lt;spamd&gt; to port smtp tag SPAMD rdr-to 127.0.0.1 port 8025
</pre></blockquote>

Now the rules that define the policy are set.

<blockquote><pre>
pass in  quick on egress tagged SPAMD
pass out quick on egress tagged LAN_INET_NAT
pass out quick on $dmz_if tagged LAN_DMZ
pass out quick on $dmz_if tagged INET_DMZ
</pre></blockquote>

Now that the whole ruleset is setup, changes are a matter of modifying
the classification rules.
For example, if a POP3/SMTP server is added to the DMZ, it will be
necessary to add classification rules for POP3 and SMTP traffic, like so:

<blockquote><pre>
mail_server = "192.168.0.10"
[...]
pass in on egress proto tcp to $mail_server port { smtp, pop3 } tag INET_DMZ
</pre></blockquote>

Email traffic will now be passed as part of the INET_DMZ policy entry.

<p>
The complete ruleset:

<blockquote><pre>
int_if      = "dc0"
dmz_if      = "dc1"
int_net     = "10.0.0.0/24"
dmz_net     = "192.168.0.0/24"
www_server  = "192.168.0.5"
mail_server = "192.168.0.10"

table &lt;spamd&gt; persist file "/etc/spammers"
# classification -- classify packets based on the defined firewall policy.
block all
pass out on egress inet tag LAN_INET_NAT tagged LAN_INET nat-to (egress)
pass in on $int_if from $int_net tag LAN_INET
pass in on $int_if from $int_net to $dmz_net tag LAN_DMZ
pass in on egress proto tcp to $www_server port 80 tag INET_DMZ
pass in on egress proto tcp from &lt;spamd&gt; to port smtp tag SPAMD rdr-to 127.0.0.1 port 8025

# policy enforcement -- pass/block based on the defined firewall policy.
pass in  quick on egress tagged SPAMD
pass out quick on egress tagged LAN_INET_NAT
pass out quick on $dmz_if tagged LAN_DMZ
pass out quick on $dmz_if tagged INET_DMZ
</pre></blockquote>

<h2 id="ethernet">Tagging ethernet frames</h2>

Tagging can be performed at the ethernet level if the machine doing the
tagging/filtering is also acting as a
<a href="http://man.openbsd.org/bridge.4">bridge(4)</a>.
By creating bridge(4) filter rules that use the <tt>tag</tt> keyword, PF
can be made to filter based on the source or destination MAC address.
Bridge(4) rules are created using the
<a href="http://man.openbsd.org/ifconfig">ifconfig(8)</a> command.
Example:

<blockquote><pre>
# <b>ifconfig bridge0 rule pass in on fxp0 src 0:de:ad:be:ef:0 tag USER1</b>
</pre></blockquote>

And then in <tt>pf.conf</tt>:

<blockquote><pre>
pass in on fxp0 tagged USER1
</pre></blockquote>

<p>
</body>
</html>
@


1.36
log
@tls on openbsd.org is now real:
- link to https://www.openbsd.org from the sub-projects' pages
- make internal links relative
- switch link rel=canonical to https to please some search engines
"go ahead" from beck, "do it!!!!" tj
@
text
@d144 1
a144 1
pass out on $ext_if tagged INT_NET
d147 2
a148 2
Outgoing packets on <tt>$ext_if</tt> must be tagged with the <tt>INT_NET</tt>
tag in order to match the above rule.
d152 1
a152 1
pass out on $ext_if ! tagged WIFI_NET
d185 1
a185 1
pass out on $ext_if inet tag LAN_INET_NAT tagged LAN_INET nat-to ($ext_if)
d188 2
a189 2
pass in  on $ext_if proto tcp to $www_server port 80 tag INET_DMZ
pass in  on $ext_if proto tcp from &lt;spamd&gt; to port smtp tag SPAMD rdr-to 127.0.0.1 port 8025
d195 2
a196 2
pass in  quick on $ext_if tagged SPAMD
pass out quick on $ext_if tagged LAN_INET_NAT
d209 1
a209 1
pass in on $ext_if proto tcp to $mail_server port { smtp, pop3 } tag INET_DMZ
a217 1
# macros
a219 1
ext_if      = "ep0"
d228 1
a228 1
pass out on $ext_if inet tag LAN_INET_NAT tagged LAN_INET nat-to ($ext_if)
d231 2
a232 2
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ
pass in on $ext_if proto tcp from &lt;spamd&gt; to port smtp tag SPAMD rdr-to 127.0.0.1 port 8025
d235 2
a236 2
pass in  quick on $ext_if tagged SPAMD
pass out quick on $ext_if tagged LAN_INET_NAT
@


1.35
log
@sync pf guide formatting with the main faq's style, fixing a few grammar
knits and broken links along the way.

input and ok tb
@
text
@d13 1
a13 1
<link rel="canonical" href="http://www.openbsd.org/faq/pf/tagging.html">
@


1.34
log
@page titles and <title> should be the same.
@
text
@d4 5
a10 1
<meta name="description"   content="the OpenBSD FAQ page">
d46 5
a50 5
<li><a href="#intro"   >Introduction</a>
<li><a href="#assign"  >Assigning Tags to Packets</a>
<li><a href="#check"   >Checking for Applied Tags</a>
<li><a href="#policy"  >Policy Filtering</a>
<li><a href="#ethernet">Tagging Ethernet Frames</a>
a51 1

d55 1
d59 1
a59 2
interfaces and determine if packets have been processed by translation
rules.
d63 2
a64 1
<h2 id="assign">Assigning Tags to Packets</h2>
a65 5
<blockquote>
<tt>
pass in on $int_if all tag INTERNAL_NET keep state
</tt>
</blockquote>
d67 4
a70 1
<p>
d75 1
a75 2
A tag can also be assigned using a
<a href="macros.html#macros">macro</a>.
d78 2
a79 3
<blockquote>
<tt>
name = "INTERNAL_NET"<br>
d81 1
a81 2
</tt>
</blockquote>
a82 1
<p>
d84 1
d86 7
a92 7
<li><tt>$if</tt> - The interface
<li><tt>$srcaddr</tt> - Source IP address
<li><tt>$dstaddr</tt> - Destination IP address
<li><tt>$srcport</tt> - The source port specification
<li><tt>$dstport</tt> - The destination port specification
<li><tt>$proto</tt> - The protocol
<li><tt>$nr</tt> - The rule number
a94 1
<p>
d99 1
d101 10
a110 10
<li>Tags are "sticky". Once a tag is applied to a packet by a matching
rule it is never removed. It can, however, be replaced with a different
tag.
<li>Because of a tag's "stickiness", a packet can have a tag even if the
last matching rule doesn't use the <tt>tag</tt> keyword.
<li>A packet is only ever assigned a maximum of one tag at a time.
<li>Tags are <i>internal</i> identifiers. Tags are not sent out over the
wire.
<li>Tag names can be up to 63 characters long.
In OpenBSD 4.0 and earlier, tag names are limited to 15 characters.
a112 1
<p>
a113 7
<blockquote>
<tt>
(1) pass in on $int_if tag INT_NET<br>
(2) pass in quick on $int_if proto tcp to port 80 tag INT_NET_HTTP<br>
(3) pass in quick on $int_if from 192.168.1.5
</tt>
</blockquote>
d115 6
a120 1
<p>
d122 15
a136 14
<li>Packets coming in on <tt>$int_if</tt> will be assigned a tag of
<tt>INT_NET</tt> by rule #1.
<li>TCP packets coming in on <tt>$int_if</tt> and destined for port 80
will first be assigned a tag of <tt>INT_NET</tt> by rule #1. That tag
will then be replaced with the <tt>INT_NET_HTTP</tt> tag by rule #2.
<li>Packets coming in on <tt>$int_if</tt> from 192.168.1.5 will be
tagged one of two ways.
If the packet is destined for TCP port 80 it will match rule #2 and be
tagged with <tt>INT_NET_HTTP</tt>.
Otherwise, the packet will match rule #3 but will be tagged with
<tt>INT_NET</tt>.
Because the packet matches rule #1, the <tt>INT_NET</tt> tag is applied
and is not removed unless a subsequently matching rule specifies a tag
(this is the "stickiness" of a tag).
d139 2
a140 1
<h2 id="check">Checking for Applied Tags</h2>
d142 2
a143 2
<blockquote>
<tt>
d145 1
a145 2
</tt>
</blockquote>
d147 5
a151 6
<p>
Outgoing packets on <tt>$ext_if</tt> must be tagged with the
<tt>INT_NET</tt> tag in order to match the above rule. Inverse matching
can also be done by using the <tt>!</tt> operator:
<blockquote>
<tt>
d153 3
a155 2
</tt>
</blockquote>
a156 1
<h2 id="policy">Policy Filtering</h2>
d163 1
d165 8
a172 9
<li>Traffic from the internal LAN to the Internet is permitted
(LAN_INET) and must be translated (LAN_INET_NAT)
<li>Traffic from the internal LAN to the DMZ is permitted (LAN_DMZ)
<li>Traffic from the Internet to servers in the DMZ is permitted
(INET_DMZ)
<li>Traffic from the Internet that's being redirected to
<a href="http://man.openbsd.org/spamd.8"
>spamd(8)</a> is permitted (SPAMD)
<li>All other traffic is blocked
a174 1
<p>
a181 11
<blockquote>
<tt>
block all<br>
pass out on $ext_if inet tag LAN_INET_NAT tagged LAN_INET nat-to ($ext_if)<br>
pass in on $int_if from $int_net tag LAN_INET<br>
pass in on $int_if from $int_net to $dmz_net tag LAN_DMZ<br>
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ<br>
pass in on $ext_if proto tcp from &lt;spamd&gt; to port smtp \<br>
&nbsp;&nbsp;&nbsp;tag SPAMD rdr-to 127.0.0.1 port 8025<br>
</tt>
</blockquote>
d183 9
a191 1
<p>
d193 5
a197 5
<blockquote>
<tt>
pass in &nbsp;quick on $ext_if tagged SPAMD<br>
pass out quick on $ext_if tagged LAN_INET_NAT<br>
pass out quick on $dmz_if tagged LAN_DMZ<br>
d199 1
a199 2
</tt>
</blockquote>
a200 1
<p>
d204 7
a210 10
necessary to add classification rules for POP3 and SMTP traffic, like
so:
<blockquote>
<tt>
mail_server = "192.168.0.10"<br>
...<br>
pass in on $ext_if proto tcp to $mail_server port { smtp, pop3 } \<br>
&nbsp;&nbsp;&nbsp;tag INET_DMZ
</tt>
</blockquote>
a211 1
<p>
d219 6
a224 6
int_if  = "dc0"
dmz_if  = "dc1"
ext_if  = "ep0"
int_net = "10.0.0.0/24"
dmz_net = "192.168.0.0/24"
www_server = "192.168.0.5"
d228 1
a228 3

# classification -- classify packets based on the defined firewall
# policy.
d230 3
a232 3
pass out on $ext_if inet tag LAN_INET_NAT tagged LAN_INET nat-to ($ext_if)<br>
pass in on $int_if from $int_net tag LAN_INET<br>
pass in on $int_if from $int_net to $dmz_net tag LAN_DMZ<br>
d234 1
a234 2
pass in on $ext_if proto tcp from &lt;spamd&gt; to port smtp \<br>
&nbsp;&nbsp;&nbsp;tag SPAMD rdr-to 127.0.0.1 port 8025<br>
d243 3
a245 2
<h2 id="ethernet">Tagging Ethernet Frames</h2>
Tagging can be performed at the Ethernet level if the machine doing the
d247 1
a247 2
<a href="http://man.openbsd.org/bridge.4"
>bridge(4)</a>.
d251 6
a256 8
<a href="http://man.openbsd.org/ifconfig.8"
>ifconfig(8)</a> command. Example:
<blockquote>
<tt>
# ifconfig bridge0 rule pass in on fxp0 src 0:de:ad:be:ef:0 \<br>
&nbsp;&nbsp;&nbsp;tag USER1
</tt>
</blockquote>
a257 1
<p>
d259 2
a260 2
<blockquote>
<tt>
d262 1
a262 2
</tt>
</blockquote>
@


1.33
log
@tweak [faq index] button and sync the pf user's guide with that style.
@
text
@d4 1
a4 1
<title>PF - Packet Tagging (Policy Filtering)</title>
@


1.32
log
@use short form man links in the faq and fix a few broken links
@
text
@a29 2
<!-- Passes validator.w3.org, please keep it this way;
please, use a max of 72 chars per line -->
d35 3
a39 5
<p>
[<a href="index.html">Contents</a>]
[<a href="pools.html">Previous: Address Pools and Load Balancing</a>]
[<a href="logging.html">Next: Logging</a>]
<p>
a40 1
<h3>Table of Contents</h3>
d42 4
a45 4
<li><a href="#intro">Introduction</a>
<li><a href="#assign">Assigning Tags to Packets</a>
<li><a href="#check">Checking for Applied Tags</a>
<li><a href="#policy">Policy Filtering</a>
a283 5

<p>
[<a href="pools.html">Previous: Address Pools and Load Balancing</a>]
[<a href="index.html">Contents</a>]
[<a href="logging.html">Next: Logging</a>]
@


1.31
log
@new openbsd faq style. joint with tj and validator.w3.org
@
text
@d179 1
a179 1
<a href="http://man.openbsd.org/?query=spamd&amp;sektion=8"
d268 1
a268 1
<a href="http://man.openbsd.org/?query=bridge&amp;sektion=4"
d273 1
a273 1
<a href="http://man.openbsd.org/?query=ifconfig&amp;sektion=8"
@


1.30
log
@add a small sprinkling of css to improve readability in the faq, ok tj@@ tb@@
@
text
@d4 1
a4 1
<title>PF: Packet Tagging (Policy Filtering)</title>
d33 1
d35 4
a38 2
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif" border="0">
</a>
d40 1
a41 1
[<a href="index.html">Contents</a>]
a42 1

a43 3
<h1><font color="#e00000">PF: Packet Tagging (Policy Filtering)</font></h1>

<hr>
@


1.29
log
@fix URIs, the / before querystring is not optional,
if not fixed up by browsers the server returns 400 Bad Request.
@
text
@d7 2
@


1.28
log
@change http://www.openbsd.org/cgi-bin/man.cgi to be http://man.openbsd.org
this points stuff to the new place and gets us ready to deprecate the old
place we did this.
@
text
@d178 1
a178 1
<a href="http://man.openbsd.org?query=spamd&amp;sektion=8"
d267 1
a267 1
<a href="http://man.openbsd.org?query=bridge&amp;sektion=4"
d272 1
a272 1
<a href="http://man.openbsd.org?query=ifconfig&amp;sektion=8"
@


1.27
log
@replace a disorganized assortment of tables and hand-rolled command output
with more standard formatting. while here, run a few less of those commands
as root where it's not needed. the cvs checkout examples were adopted to
use the wsrc group as is done in the ports faq.

input/ok tb
@
text
@d178 1
a178 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8"
d267 1
a267 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4"
d272 1
a272 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8"
@


1.26
log
@Clean up meta tags.

name=distribution, name=keywords, and name=resource-type have no effect
in modern search engines and just clutter up the page source.

From Pavel Plamenov.
@
text
@d234 2
a235 3
<table border=0 width="650">
<tr><td nowrap bgcolor="#EEEEEE">
<pre>
d262 1
a262 3
</pre>
</td></tr>
</table>
@


1.25
log
@Add 'link rel="canonical"' to pages, acting as a hint to search engines
to list the copies on www.openbsd.org rather than mirrors.

From Carlin Bingham, ok millert@@ nick@@
@
text
@a5 1
<meta name="resource-type" content="document">
a6 2
<meta name="keywords"      content="openbsd,faq,pf">
<meta name="distribution"  content="global">
@


1.24
log
@Convert the pf faq to use id="" instead of "a name=""></a>.
@
text
@d10 1
@


1.23
log
@explicitly specify "inet" in various nat-to rules where it's ambiguous
(plus minor whitespace cleanup)
@
text
@d57 1
a57 2
<a name="intro"></a>
<h2>Introduction</h2>
d66 1
a66 2
<a name="assign"></a>
<h2>Assigning Tags to Packets</h2>
d148 1
a148 2
<a name="check"></a>
<h2>Checking for Applied Tags</h2>
d166 1
a166 2
<a name="policy"></a>
<h2>Policy Filtering</h2>
d269 1
a269 2
<a name="ethernet"></a>
<h2>Tagging Ethernet Frames</h2>
@


1.22
log
@
www@@ removal, normalize footers.
@
text
@d60 1
a60 1
that can later be used in filter and translation rule criteria. 
d63 1
a63 1
rules. 
d78 1
a78 1
the above rule. 
d81 1
a81 1
A tag can also be assigned using a 
d173 1
a173 1
passed and what types are blocked. 
d175 1
a175 1
criteria of source/destination IP address/port, protocol, etc. 
d183 1
a183 1
<li>Traffic from the Internet that's being redirected to 
d191 1
a191 1
the firewall. 
d200 1
a200 1
pass out on $ext_if tag LAN_INET_NAT tagged LAN_INET nat-to ($ext_if)<br>
d257 1
a257 1
pass out on $ext_if tag LAN_INET_NAT tagged LAN_INET nat-to ($ext_if)<br>
d276 1
a276 1
tagging/filtering is also acting as a 
d278 1
a278 1
>bridge(4)</a>. 
d306 1
a306 1
</html> 
@


1.21
log
@missing <br>; from Inigo Ortiz de Urbina Cazenave
@
text
@a4 1
<link rev="made" href="mailto:www@@openbsd.org">
a304 6
<hr>
<a href="index.html"><img height="24" width="24" src="../../images/back.gif" border="0" alt="[back]"></a> 
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>$OpenBSD: tagging.html,v 1.20 2011/01/07 20:29:32 jmc Exp $</small>

@


1.20
log
@brconfig -> ifconfig; from Thomas Reiter
@
text
@d204 1
a204 1
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ
d310 1
a310 1
<small>$OpenBSD: tagging.html,v 1.19 2010/05/19 13:25:16 sthen Exp $</small>
@


1.19
log
@Update the PF faq for 4.7 changes.
@
text
@d284 1
a284 1
>brconfig(8)</a> command. Example:
d310 1
a310 1
<small>$OpenBSD: tagging.html,v 1.18 2007/05/07 01:27:19 joel Exp $</small>
@


1.18
log
@Follow Nick's lead and remove a few more manpath options from manpage
URLs.
@
text
@d89 1
a89 1
pass in on $int_if all tag $name keep state
d127 3
a129 4
(1) pass in on $int_if tag INT_NET keep state<br>
(2) pass in quick on $int_if proto tcp to port 80 tag \<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INT_NET_HTTP keep state<br>
(3) pass in quick on $int_if from 192.168.1.5 keep state
a150 5
<p>
In addition to applying tags with filter rules, the <tt>nat</tt>,
<tt>rdr</tt>, and <tt>binat</tt> translation rules can also apply tags
to packets by using the <tt>tag</tt> keyword.

d156 1
a156 1
pass out on $ext_if tagged INT_NET keep state
d166 1
a166 1
pass out on $ext_if ! tagged WIFI_NET keep state
a169 4
<p>
Translation rules (<tt>nat</tt>/<tt>rdr</tt>/<tt>binat</tt>) can also
use the <tt>tagged</tt> keyword to match packets.

d197 1
a197 2
Filter and translation rules now need to be written to classify packets
into the policy.
a199 4
rdr on $ext_if proto tcp from &lt;spamd&gt; to port smtp \<br>
&nbsp;&nbsp;&nbsp;tag SPAMD -&gt; 127.0.0.1 port 8025<br>
nat on $ext_if tag LAN_INET_NAT tagged LAN_INET -&gt; ($ext_if)<br>
<br>
d201 6
a206 3
pass in on $int_if from $int_net tag LAN_INET keep state<br>
pass in on $int_if from $int_net to $dmz_net tag LAN_DMZ keep state<br>
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ keep state
d214 4
a217 4
pass in &nbsp;quick on $ext_if tagged SPAMD keep state<br>
pass out quick on $ext_if tagged LAN_INET_NAT keep state<br>
pass out quick on $dmz_if tagged LAN_DMZ keep state<br>
pass out quick on $dmz_if tagged INET_DMZ keep state
d232 1
a232 1
&nbsp;&nbsp;&nbsp;tag INET_DMZ keep state
a256 4
rdr on $ext_if proto tcp from &lt;spamd&gt; to port smtp \
    tag SPAMD -&gt; 127.0.0.1 port 8025
nat on $ext_if tag LAN_INET_NAT tagged LAN_INET -&gt; ($ext_if)

d258 6
a263 5
pass in on $int_if from $int_net tag LAN_INET keep state
pass in on $int_if from $int_net to $dmz_net tag LAN_DMZ keep state
pass in on $ext_if proto tcp to $www_server port 80 tag INET_DMZ keep state 
pass in on $ext_if proto tcp to $mail_server port { smtp, pop3 } \
    tag INET_DMZ keep state 
d266 4
a269 4
pass in  quick on $ext_if tagged SPAMD keep state
pass out quick on $ext_if tagged LAN_INET_NAT keep state
pass out quick on $dmz_if tagged LAN_DMZ keep state
pass out quick on $dmz_if tagged INET_DMZ keep state 
d283 1
a283 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8"
d287 1
a287 1
# brconfig bridge0 rule pass in on fxp0 src 0:de:ad:be:ef:0 \<br>
d310 1
a310 1
<small>$OpenBSD: tagging.html,v 1.17 2007/05/07 01:13:53 joel Exp $</small>
@


1.17
log
@Updates for OpenBSD 4.1
@
text
@d195 1
a195 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+4.1"
d325 1
a325 1
<small>$OpenBSD: tagging.html,v 1.16 2007/05/06 18:59:55 nick Exp $</small>
@


1.16
log
@
manpath changes to:
  4.1 for PF related items
  removed for non-PF-related items, which will probably either not
    change much, or benefit from the newest, best man pages.
@
text
@d14 1
a14 1
Copyright (c) 2003, 2004 Joel Knight <enabled@@myrealbox.com>
d119 2
d325 1
a325 1
<small>$OpenBSD: tagging.html,v 1.15 2006/11/10 17:16:15 joel Exp $</small>
@


1.15
log
@Clarify an explanation for one of the examples
@
text
@d193 1
a193 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+4.0"
d291 1
a291 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+4.0"
d296 1
a296 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+4.0"
d323 1
a323 1
<small>$OpenBSD: tagging.html,v 1.14 2006/11/01 01:56:01 joel Exp $</small>
@


1.14
log
@Updates for OpenBSD 4.0. uRPF, tftp-proxy, more ftp-proxy, etc.
Thanks to mcbride for the bits about interface groups
@
text
@d140 8
a147 4
passed by rule #3 since it's the last matching rule. 
However, those packets will be tagged with the <tt>INT_NET_HTTP</tt> tag
if they were destined for TCP port 80, otherwise they'll be tagged with
the <tt>INT_NET</tt> tag.
d323 1
a323 1
<small>$OpenBSD: tagging.html,v 1.13 2006/10/27 19:26:13 nick Exp $</small>
@


1.13
log
@
"tweaks and fixes" from Jeremy Reed, via Joel@@.  Committed at request
of joel@@
@
text
@d189 1
a189 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.9"
d287 1
a287 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.9"
d292 1
a292 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.9"
d319 1
a319 1
<small>$OpenBSD: tagging.html,v 1.12 2006/07/09 12:57:06 steven Exp $</small>
@


1.12
log
@! should precede 'tagged' keyword.  from John Ruff <jcruff at gmail.com>
@
text
@d290 1
a290 1
can be made to filter based on the source/destination MAC address.
d319 1
a319 1
<small>$OpenBSD: tagging.html,v 1.11 2006/05/01 00:54:29 nick Exp $</small>
@


1.11
log
@
3.9 updates, mostly rev'ing man page links
@
text
@d166 1
a166 1
pass out on $ext_if tagged ! WIFI_NET keep state
d319 1
a319 1
<small>$OpenBSD: tagging.html,v 1.10 2005/12/28 17:13:20 joel Exp $</small>
@


1.10
log
@Tags no longer require the rule create state in 3.8 and up
@
text
@d189 1
a189 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.8"
d287 1
a287 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.8"
d292 1
a292 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.8"
d319 1
a319 1
<small>$OpenBSD: tagging.html,v 1.9 2005/11/01 11:35:18 nick Exp $</small>
@


1.9
log
@
bump manpath= tag for 3.8
@
text
@d79 1
a79 3
the above rule. Note the use of <tt>keep state</tt>; <tt>keep state</tt>
(or <tt>modulate state</tt>/<tt>synproxy state</tt>) must be used in
<tt>pass</tt> rules that tag packets.
d319 1
a319 1
<small>$OpenBSD: tagging.html,v 1.8 2005/09/24 15:37:26 joel Exp $</small>
@


1.8
log
@in nat rules, specify "tag" before "tagged".

pointed out by Chad Stewart (cms at balius . com) thank you.
@
text
@d191 1
a191 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.7"
d289 1
a289 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.7"
d294 1
a294 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.7"
d321 1
a321 1
<small>$OpenBSD: tagging.html,v 1.7 2005/05/20 00:12:02 joel Exp $</small>
@


1.7
log
@Updates for OpenBSD 3.7.
@
text
@d209 1
a209 1
nat on $ext_if tagged LAN_INET tag LAN_INET_NAT -&gt; ($ext_if)<br>
d267 1
a267 1
nat on $ext_if tagged LAN_INET tag LAN_INET_NAT -&gt; ($ext_if)
d321 1
a321 1
<small>$OpenBSD: tagging.html,v 1.6 2004/12/22 04:28:16 david Exp $</small>
@


1.6
log
@make small title logo a link back to main page; ok nick@@
@
text
@d4 1
a4 1
<title>PF: Packet Tagging</title>
d43 1
a43 1
<h1><font color="#e00000">PF: Packet Tagging</font></h1>
d172 4
d185 2
d191 1
a191 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.6"
d209 1
d223 1
a223 1
pass out quick on $ext_if tagged LAN_INET keep state<br>
d267 1
d278 1
a278 1
pass out quick on $ext_if tagged LAN_INET keep state
d289 1
a289 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.6"
d294 1
a294 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.6"
d321 1
a321 1
<small>$OpenBSD: tagging.html,v 1.5 2004/10/29 17:22:57 nick Exp $</small>
@


1.5
log
@
Update for 3.6
@
text
@d34 3
a36 1
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif">
d313 1
a313 1
<small>$OpenBSD: tagging.html,v 1.4 2004/05/07 01:55:24 nick Exp $</small>
@


1.4
log
@
Add an OpenBSD license to the PF User's Guide.
Concept and breakdown of copyrights agreed to by Joel Knight and myself,
license assistance millert@@, ok deraadt@@.
@
text
@d183 1
a183 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.5"
d279 1
a279 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.5"
d284 1
a284 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.5"
d311 1
a311 1
<small>$OpenBSD: tagging.html,v 1.3 2004/04/30 18:00:25 nick Exp $</small>
@


1.3
log
@
PF User's Guide updates for OpenBSD 3.5.
Work done by Joel Knight (enabled et myrealbox.dit com), many, many thanks
to him for providing and maintaining some darned good docs.
@
text
@a10 1
<meta name="copyright"     content="This document copyright 2003-2004 by OpenBSD.">
d13 17
d311 1
a311 1
<small>$OpenBSD: tagging.html,v 1.2 2004/01/01 04:16:17 nick Exp $</small>
@


1.2
log
@
Bump copyright to 2004
@
text
@d66 27
d167 1
a167 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=spamd&amp;sektion=8&amp;manpath=OpenBSD+3.4"
d263 1
a263 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4&amp;manpath=OpenBSD+3.4"
d268 1
a268 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8&amp;manpath=OpenBSD+3.4"
d295 1
a295 1
<small>$OpenBSD: tagging.html,v 1.1 2003/11/30 23:14:31 nick Exp $</small>
@


1.1
log
@
New article: PF: Packet Tagging.  Written by Joel Knight.  THANKS!
@
text
@d11 1
a11 1
<meta name="copyright"     content="This document copyright 2003 by OpenBSD.">
d268 1
a268 1
<small>$OpenBSD$</small>
@

