head	1.12;
access;
symbols;
locks; strict;
comment	@# @;


1.12
date	2014.04.01.17.03.10;	author nick;	state dead;
branches;
next	1.11;

1.11
date	2010.06.19.07.38.08;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2009.11.30.13.23.50;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2009.11.04.18.08.57;	author ajacoutot;	state Exp;
branches;
next	1.8;

1.8
date	2009.10.26.20.27.01;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.17.15.58.26;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2009.09.14.20.24.19;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2009.09.02.17.23.30;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2009.08.27.07.24.17;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2009.05.16.08.59.12;	author ajacoutot;	state Exp;
branches;
next	1.2;

1.2
date	2009.04.26.15.44.20;	author tobias;	state Exp;
branches;
next	1.1;

1.1
date	2009.03.02.19.44.49;	author tobias;	state Exp;
branches;
next	;


desc
@@


1.12
log
@
Abandon translations, per deraadt@@ and ajacoutot@@.
Thanks to all those that did the translation work, and my appologies to
those who had to translate my writing!
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>5 - Construção do Sistema a partir do Código Fonte</title>
<link rev= "made" href= "mailto:www@@openbsd.org">
<meta name= "resource-type" content= "document">
<meta name= "description"   content= "the OpenBSD FAQ page">
<meta name= "keywords"      content= "openbsd,faq">
<meta name= "distribution"  content= "global">
<meta name= "copyright"     content= "This document copyright 1998-2010 by OpenBSD.">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
</head>

<body bgcolor= "#ffffff" text= "#000000">
<!-- Passes validator.w3.org.  Please keep it this way -->

<a href="../../pt/index.html">
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif" border="0">
</a>
<p>
<font color= "#0000e0">
<a href= "index.html">[Índice da FAQ]</a>
<a href= "faq4.html">[Seção 4 - Guia de Instalação]</a>
<a href= "faq6.html">[Seção 6 - Redes]</a>
</font>

<h1><font color="#e00000">5 - Construção do Sistema a partir do Código Fonte</font></h1>
<hr>

<p>
<h3>Conteúdo</h3>
<ul>
<li><a href="#Flavors">5.1 - Os sabores ("Flavors") do OpenBSD</a>
<li><a href="#WhySrc">5.2 - Por que eu preciso compilar meu sistema a
    partir do código fonte?</a>
<li><a href="#Bld">5.3 - Compilação do OpenBSD a partir do código fonte</a>
<ul>
  <li><a href="#BldOverview">5.3.1 - Visão geral</a>
  <li><a href="#BldBinary">5.3.2 - Instalação ou atualização de versão
      para os binários mais recentes</a>
  <li><a href="#BldGetSrc">5.3.3 - Download do código fonte apropriado</a>
  <li><a href="#BldKernel">5.3.4 - Compilação do kernel</a>
  <li><a href="#BldUserland">5.3.5 - Compilação do espaço de usuário</a>
</ul>
<li><a href="#Release">5.4 - Compilação de uma release</a>
<li><a href="#Xbld">5.5 - Compilação do X</a>
<li><a href="#Why">5.6 - Por que eu preciso de um kernel personalizado?</a>
<li><a href="#Options">5.7 - Compilação de um kernel personalizado</a>
<li><a href="#BootConfig">5.8 - Configuração em tempo de inicialização</a>
<li><a href="#config">5.9 - Como usar o config(8) para alterar seu
    kernel</a>
<li><a href="#VerboseBoot">5.10 - Como obter mais mensagens durante a
    inicialização</a>
<li><a href="#buildprobs">5.11 - Problemas comuns, dicas e perguntas
    sobre compilação e construção</a>
    <ul>
    <li><a href="#sig11">5.11.1 - A compilação para com um erro
        "Signal 11"</a>
    <li><a href="#snake">5.11.2 - "make build" falha com a mensagem
        "cannot open output file snake: is a directory"</a>
    <li><a href="#ProbIPv6">5.11.3 - Meu sistema sem IPv6 não funciona!</a>
    <li><a href="#ProbObj">5.11.4 - Opa! Eu esqueci de criar o diretório
        <tt>/usr/obj</tt> antes de começar!</a>
    <li><a href="#ProbObjPt">5.11.5 - Coloque o diretório
        <tt>/usr/obj</tt> em sua própria partição</a>
    <li><a href="#ProbSKIPDIR">5.11.6 - Como não compilar partes da
        árvore?</a>
    <li><a href="#ProbMoreInfo">5.11.7 - Onde eu posso aprender mais
        sobre o processo de compilação?</a>
    <li><a href="#NoSnaps">5.11.8 - Eu não vejo nenhuma snapshot no
        sítio FTP. Para onde elas foram?</a>
    <li><a href="#NewCompiler">5.11.9 - Como iniciar uma nova versão
        do compilador (<i>gcc</i>)?</a>
    <li><a href="#UpdateEtc">5.11.10 - Qual é o melhor jeito de
        atualizar <tt>/etc</tt>, <tt>/var</tt> e <tt>/dev</tt>?</a>
    <li><a href="#Hierarchy">5.11.11 - Há algum jeito fácil de fazer
        todas as mudanças nos arquivos da hierarquia?</a>
    <li><a href="#ProbXComp">5.11.12 - Posso fazer compilação cruzada?
        Por que não?</a>
    </ul>
</ul>
<hr>
<br>


<a name="Flavors"></a>
<h2>5.1 - Os sabores ("Flavors") do OpenBSD</h2>
<!-- XXXversion - revise doodle -->
Existem três "sabores" do OpenBSD:
<ul>
<li><b>-release:</b> A versão do OpenBSD lançada a cada seis meses em
    CD.
<li><b>-stable:</b> "release", mais as correções consideradas críticas
    para a segurança e estabilidade.
<li><b>-current:</b> Onde o novo trabalho de desenvolvimento está sendo
    feito agora e, consequentemente, tornar-se-á a próxima "release".
</ul>

Graficamente, o desenvolvimento dessas versões se parece com isto:

<blockquote>
<pre>
       ,------o-----------o----X                    4.4 Stable
       |      .           .
       |      .    ,------o---------o----X          4.5 Stable
       |      .    |      .         .
       |      .    |      .    ,----o----------o--&gt; 4.6 Stable
       |      .    |      .    |    .          .
       |      .    |      .    |    .    ,-----o--&gt; 4.7 Stable
       |      .    |      .    |    .    |     .
       |      .    |      .    |    .    |     .
 --&gt;4.4Rel-----&gt;4.5Rel-----&gt;4.6Rel-----&gt;4.7Rel----&gt; Current

          Tempo ---&gt;
</pre>
</blockquote>

<p>
<i>-Current</i> é onde o trabalho de desenvolvimento ativo é feito e,
consequentemente, ela tornar-se-á a nova <i>-release</i> do OpenBSD.
A cada seis meses, quando uma nova versão do OpenBSD é lançada,
<i>-current</i> é marcada e torna-se <i>-release</i>: um ponto de
congelamento na história da árvore de código fonte.
Cada <i>-release</i> nunca é alterada; ela é a que está nos
<a href="../../orders.html">CDs</a> e
<a href="../../ftp.html">servidores FTP</a>.

<p>
<i>-Stable</i> é baseada na <i>-release</i>, e é um ramo do caminho de
desenvolvimento principal do OpenBSD.
Quando correções muito importantes são feitas na <i>-current</i>, elas
são portadas (integradas) para o ramo <i>-stable</i>; por causa disso,
<i>-stable</i> também é conhecida como o "<i>patch branch</i>"
(ramo corrigido).
Na ilustração acima, as linhas verticais pontilhadas marcam correções de
falhas incorporadas ao ramo <i>-stable</i>. Você também pode notar que
no exemplo acima, o ramo <i>4.4-stable</i> chega ao fim com
o <i>4.6-release</i>, e o ramo <i>4.5-stable</i> chega ao fim com
o <i>4.7-release</i> -- releases antigas são tipicamente suportadas
durante "duas releases" no máximo. Suportar versões antigas toma
recursos e tempo; enquanto nós gostamos de oferecer suporte a
releases antigas, nós preferencialmente nos focamos em novas
funcionalidades. O ramo <i>-stable</i> é, pelo seu projeto, muito fácil
de construir a partir da <i>-release</i> da mesma versão
(ou seja, ir da <i>4.7-release</i> para a <i>4.7-stable</i>).

<p>
O ramo <i>-stable</i> é a <i>-release</i> mais as correções encontradas
na <a href="../../errata.html">página errata</a>.
O funcionamento da <i>-stable</i> é a mesmo em que a <i>-release</i>
está baseada. Se as
<a href="http://www.openbsd.org/cgi-bin/man.cgi">páginas de manual</a>
tiverem alguma mudança, ela provavelmente não vai para a <i>-stable</i>.
Em outras palavras, o suporte a novos dispositivos e novas
funcionalidades não serão adicionados à <i>-stable</i>.

<p>
É útil apontar que o nome "<i>-stable</i>" (estável) não significa que
a <i>-current</i> é instável.
Pelo contrário, <i>-current</i> está mudando e desenvolvendo-se,
enquanto o funcionamento e as APIs da <i>-stable</i> não estão sendo
mudados, assim você não tem que reaprender seu sistema, mudar quaisquer
arquivos de configuração, ou acabar tendo algum problema ao adicionar
aplicativos no seu sistema.

<p>
De fato, como nossa esperança é continuar melhorando o OpenBSD, o
objetivo é que a <i>-current</i> deve ser mais estável, mais segura
e, naturalmente, ter mais funcionalidades que a <i>-stable</i>.
Assim sendo, a "melhor" versão do OpenBSD é a <i>-current</i>.

<p>
A maioria dos usuários devem usar tanto a <i>-stable</i> quanto a
<i>-release</i>. Isso quer dizer que, muitas pessoas usam a
<i>-current</i> como sistema de produção, e é importante que as pessoas
façam isso para identificar falhas e testar novas funcionalidades. No
entanto, se você não sabe como descrever corretamente, diagnosticar e
lidar com um problema, não diga para você mesmo (ou a qualquer outra
pessoa) que você está "ajudando o projeto" por usar a <i>-current</i>.
"Isto não funciona!" não é um
<a href="../../report.html#bugtypes">relato de falha útil</a>.
"As mudanças recentes no driver pciide quebraram a compatibilidade com
minha interface IDE baseada no Slugchip, segue o dmesg do sistema
funcionando e dele quebrado..." pode ser um relato útil.

<p>
Às vezes usuários "normais" querem viver no limite e usar
a <i>-current</i>. A razão mais comum é que o usuário tem um dispositivo
que não é suportado pela versão <i>-release</i> (e, assim, também não
pela <i>-stable</i>), ou deseja usar uma nova funcionalidade da
<i>-current</i>. Nesse caso, a escolha pode ser entre usar a
<i>-current</i> ou não usar o dispositivo, e <i>-current</i> pode ser
a escolha menos dolorosa. No entanto, não espere ajuda dos
desenvolvedores.

<h3>Snapshots</h3>
Entre as releases formais do OpenBSD, as <i>snapshots</i> são
disponibilizadas nos <a href="../../ftp.html">sítios FTP</a>. Como o
nome indica, estas são compilações de qualquer código fonte que estava
na árvore no momento em que o construtor pegou uma cópia do código fonte
para uma plataforma em particular.
Lembre-se: em algumas plataformas pode-se levar DIAS até que uma
snapshot seja terminada e colocada para distribuição. Não há promessa de
que as snapshots são completamente funcionais, ou mesmo que instalam.
Frequentemente, uma mudança que precisa ser testada pode ocasionar
a criação de uma snapshot. Algumas plataformas têm snapshots criadas
diariamente, outras em menor frequência. Se você deseja usar a
<i>-current</i>, uma snapshot recente é normalmente tudo que você
precisa, e atualizar a versão para uma snapshot é um ponto de partida
exigido antes de tentar compilar a <i>-current</i> a partir do código
fonte.

<p>
Uma pergunta frequente é se existe algum modo de pegar uma cópia exata
do código fonte usado para compilar uma snapshot. A resposta é não.
Primeiro, não existe benefício significante nisso. Segundo, as snapshots
são criadas quando desejado, quando existe tempo, e quando os recursos
estão disponíveis. Em plataformas lentas, pode-se levar uma semana ou
mais para criar-se uma snapshot. A inclusão de marcas ou etiquetas na
árvore de código fonte para cada snapshot não seria nem um pouco
prático. Terceiro, snapshots frequentemente contêm código fonte
experimental que ainda não foi incluído na árvore.

<h3>Upgrade vs. Update</h3>
Você irá ver com frequência referências a "upgrading" e "updating"
na instalação do OpenBSD.
Mesmo que essas palavras tenham significados parecidos, elas são usadas
de maneira um pouco diferente no OpenBSD.

<p>
<b>"Upgrading"</b> (atualização de versão) é o processo de instalar uma
nova versão do OpenBSD, com novas funcionalidades.
Por exemplo, passar da v4.6 para a v4.7, ou passar da snapshot de
12 de junho para a snapshot de 20 de junho.
Na atualização de versão, você terá que consultar tanto
<a href="../current.html">Seguindo a -current</a> quanto o
<a href="../upgrade47.html">Guia de Atualização de Versão</a> (ao mudar
de release) para fazer as mudanças requeridas para usar a versão
atualizada do OpenBSD.

<br>
<b>"Updating"</b> (atualização) é o processo de aplicar correções em um
sistema para melhorar o funcionamento SEM mudar as funcionalidades
básicas ou a compatibilidade binária. Isso é tipicamente feito
utilizando o
<a href="faq10.html#Patches">processo de correção de código fonte</a>
ou o documento <a href="../../pt/stable.html">Seguindo a -stable</a>.
Quando você faz uma atualização do seu sistema, ele vai de
<i>-release</i> para <i>-stable</i> (ou <i>-release</i> corrigida) da
mesma versão da release; por exemplo, 4.7-release para 4.7-stable.
Você pode então mais tarde atualizar para uma nova <i>-stable</i>
da mesma versão da release.
O processo de atualização é tipicamente indolor, nem arquivos do
diretório <tt>/etc</tt> nem outras configurações do sistema precisam
ser mudados.

<p>
Desse modo, você pode instalar um sistema (por exemplo, 4.5-release)
pelo CD, fazer poucas vezes a atualização dele para 4.5-stable, e então
fazer a atualização para a versão 4.6-release pelo CD, e fazer a
atualização desta poucas vezes antes da nova atualização de versão para
a 4.7-release.

<h3>Mantendo as coisas sincronizadas</h3>
É importante entender que o OpenBSD é um sistema operacional, cuja a
intenção é ser utilizado por completo, não um kernel com uma quantidade
de utilidades integradas. Você precisa ter certeza de que seu kernel,
espaço de usuário (as utilidades e arquivos de suporte) e árvore de
<a href="faq15.html#Ports"><tt>portes</tt></a> estão todos
sincronizados, ou coisas desagradáveis acontecerão. Dito de outra forma
(porque alguns usuários seguem cometendo este erro), não é possível
usar novos <tt>portes</tt> em um sistema que já tenha um mês, ou
recompilar um kernel a partir do código fonte <i>-current</i> e esperar
que ele trabalhe com o espaço de usuário da <i>-release</i>. Sim, isso
significa que você precisa fazer a atualização de versão do seu sistema
se você quer usar novos programas que foram adicionados hoje à árvore
de portes. Desculpe-nos, mas repetindo: os recursos disponíveis do
OpenBSD são limitados.

<p>
Outro fato a ser compreendido é que o processo de atualização de versão
é suportado em <b>somente uma direção: do antigo para o novo</b>, e da
<i>-stable</i> para a <i>-current</i>. Você não pode usar a
<i>4.7-current</i> (ou snapshot), e então decidir que você está vivendo
muito perigosamente e voltar para a <i>4.7-stable</i>. Você está em
suas próprias mãos se decidir qualquer caminho contrário à opção
suportada de recomeçar seu sistema do zero; portanto, não espere
assistência da equipe de desenvolvimento do OpenBSD.

<p>
Sim, isso significa que você deve pensar bem e refletir antes de
utilizar a <i>-current</i>.

<a name="WhySrc"></a>
<h2>5.2 - Por que eu preciso compilar meu sistema a partir do código fonte?</h2>
Na verdade, há muitas chances disso não ser necessário.

<p>
Algumas razões para NÃO compilar seu sistema a partir do código fonte:
<ul>
<li>Compilar seu próprio sistema como um modo de atualização de versão
    não é suportado.
<li>Você NÃO vai obter melhor desempenho compilando seu próprio sistema.
<li>Mudar as opções do compilador mais comumente acaba quebrando
    seu sistema do que melhorando-o.
</ul>

Algumas razões pelas quais você realmente deseja ou precisa compilar
a partir do código fonte:
<ul>
<li>Testar ou desenvolver novas funcionalidades.
<li>A compilação do sistema coloca uma grande carga de stress no
    computador, isso pode ser um jeito de assegurar que o sistema que
    você irá usar o OpenBSD, ou adquirir, está em boas condições.
<li>Você deseja seguir o <a href="../../pt/stable.html">ramo stable.</a>
<li>Você deseja criar uma versão altamente personalizada do OpenBSD para
    alguma aplicação especial.
</ul>

<p>
A equipe do OpenBSD disponibiliza novas snapshots baseadas no código
fonte da <i>-current</i> para todas as plataformas.
Isso normalmente será tudo que você precisa para usar a
<i>-current</i>.

<p>
A razão mais comum para compilar a partir do código fonte é seguir o
ramo <i>-stable</i>, onde compilar a partir do código fonte é a única
opção suportada.

<a name="Bld"></a>
<h2>5.3 - Compilação do OpenBSD a partir do código fonte</h2>

<a name="BldOverview"></a>
<h3>5.3.1 - Visão geral</h3>

Compilar o OpenBSD a partir do código fonte envolve os seguintes passos:
<ul>
<li><a href="#BldBinary">Instalação ou atualização de versão para os
    binários mais recentes.</a>
<li><a href="#BldGetSrc">Download do código fonte apropriado.</a>
<li><a href="#BldKernel">Compilação de um novo kernel e inicialização
    através dele.</a>
<li><a href="#BldUserland">Compilação do "espaço de usuário"
    ("make build").</a>
</ul>

Existem etapas suplementares que alguns usuários talvez queiram
realizar, dependendo do propósito da compilação e da presença ou não
do X:
<ul>
<li><a href="#Release">Compilação de uma release.</a>
<li><a href="#Xbld">Compilação do X.</a>
</ul>


<a name="BldBinary"></a>
<h3>5.3.2 - Instalação ou atualização de versão para os binários mais
recentes</h3>

O primeiro passo na compilação a partir do código fonte é ter certeza
que você tem os binários mais recentes instalados.

Use esta tabela para procurar onde você está, aonde você deseja ir, e
com qual binário começar:

<p>
<table border="1" style="empty-cells: show;">
<tr>
  <td><b>Você está em</b></td> <td><b>Objetivo</b></td>
  <td><b>Atualização binária para</b></td> <td><b>então...</b></td>
</tr>
<tr>
  <td> -release antiga </td> <td> Nova release </td> <td> Release atual </td>
  <td> Feito! </td>
</tr>
<tr>
  <td> -release </td> <td> -stable </td> <td> Release Atual </td>
  <td>Baixar &amp; compilar a <i>-stable</i></td>
</tr>
<tr>
  <td> -stable antiga </td> <td> -stable </td> <td> Release Atual </td>
  <td>Baixar &amp; compilar a <i>-stable</i></td>
</tr>
<tr>
  <td> -release </td> <td> -current </td> <td> Última Snapshot </td>
  <td> (opcional) Baixar &amp; compilar a <i>-current</i>
</tr>
<tr>
  <td> -current antiga </td> <td> -current </td> <td> Última Snapshot </td>
  <td> (opcional) Baixar &amp; compilar a <i>-current</i>
</tr>
</table>

<p>
É recomendado que você instale os binários usando a opção "Upgrade" da
mídia de instalação.
Se isso não é possível, você pode também descompactar os binários como
descrito <a href="../upgrade47.html">aqui</a>.
Você deve fazer o processo completo de atualização de versão, incluindo
criar quaisquer usuários ou outras mudanças necessárias no diretório
<tt>/etc</tt>.


<a name="BldGetSrc"></a>
<h3>5.3.3 - Download do código fonte apropriado</h3>
O código fonte do OpenBSD é gerenciado usando o sistema de controle de
versão <a href="http://ximbiot.com/cvs/cvshome/">CVS</a>, e
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1">cvs(1)</a>
é usado para puxar uma cópia do código fonte desejado para a sua máquina
local, para os fins da compilação.
Isso pode ser feito usando um servidor
<a href="../../anoncvs.html">AnonCVS</a>
(uma máquina que guarda uma cópia de acesso público de todo o
repositório CVS usado pelo projeto OpenBSD) ou de um repositório CVS
local que você mantém usando o programa
<a href="../../pt/cvsup.html">CVSup</a> ou
<a href="../../cvsync.html">CVSync</a>, disponíveis como
<a href="faq15.html#PkgMgmt">pacotes</a>.
O CVSup pode também ser usado em modo "checkout", mas isso não será
explicado aqui.
Se você tem múltiplas máquinas e deseja manter as árvores de código
fonte ativas, você deve utilizar um repositório CVS local, criado e
mantido usando CVSup ou CVSync.

<p>
Depois de decidir qual
<a href="../../anoncvs.html">servidor AnonCVS</a>
você deseja usar, você deve fazer o "checkout" da árvore de código
fonte, depois disso você então mantém a árvore executando "updates"
(atualizações), para puxar arquivos atualizados para a sua árvore local.

<p>
O comando
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1">CVS(1)</a>
tem muitas opções, algumas delas são <i><b>requeridas</b></i> para
o checkout e update de uma árvore.
Outros comandos podem causar a quebra da árvore.
O fato de compreender e seguir estas direções é importante.

<p>
<b>Seguindo a <i>-current</i></b><br>
<blockquote>
Neste caso, assumimos que você está usando um servidor público AnonCVS,
<b>anoncvs@@anoncvs.exemplo.org:/cvs</b>.
Nós também assumimos que você está usando o shell
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sh&amp;sektion=1">sh(1)</a>,
se você está usando um shell diferente, você terá que fazer alguns
ajustes nestes comandos.

<p>
Para fazer o checkout da árvore src CVS da <i>-current</i>, você pode
usar o seguinte:

<pre>
    # <b>cd /usr</b>
    # <b>export CVSROOT=anoncvs@@anoncvs.exemplo.org:/cvs</b>
    # <b>cvs -d$CVSROOT checkout -P src</b>
</pre>

<p>
Uma vez que você tem a árvore, você pode atualizar ela mais tarde com:
<pre>
    # <b>cd /usr/src</b>
    # <b>export CVSROOT=anoncvs@@anoncvs.exemplo.org:/cvs</b>
    # <b>cvs -d$CVSROOT up -Pd</b>
</pre>
</blockquote>

<!-- XXXrelease -->
<b>Seguindo a <i>-Stable</i></b><br>
<blockquote>
Se você deseja pegar um "ramo" alternativo da árvore, tal como o ramo
<i>-stable</i>, você deve usar o modificador "<tt>-r</tt>" em seu
checkout:
<pre>
    # <b>cd /usr</b>
    # <b>export CVSROOT=anoncvs@@anoncvs.exemplo.org:/cvs</b>
    # <b>cvs -d$CVSROOT checkout -rOPENBSD_4_7 -P src</b>
</pre>

Isso puxa os arquivos src do ramo OPENBSD_4_7, o qual é também
conhecido como "Ramo corrigido" ou
"<a href="../../pt/stable.html">-stable</a>".
Você também pode atualizar o código fonte assim:
<pre>
    # <b>cd /usr/src</b>
    # <b>export CVSROOT=anoncvs@@anoncvs.exemplo.org:/cvs</b>
    # <b>cvs -d$CVSROOT up -rOPENBSD_4_7 -Pd</b>
</pre>

O CVS é realmente bom o bastante para afixar uma etiqueta nos arquivos
verificados, assim você não tem que lembrar a parte
"<tt>-rOPENBSD_4_7</tt>" da linha de comando; ele irá lembrar isso
até que você explicitamente limpe ou configure uma nova etiqueta usando
a opção "<tt>-A</tt>" no "<tt>update</tt>".
No entanto, é provavelmente melhor colocar mais informações em suas
linhas de comando CVS do que poucas.
</blockquote>

<p>
Enquanto somente a árvore "<tt>src</tt>" esteve presente até o momento,
você deve fazer os mesmos passos para "<tt>xenocara</tt>" e
"<tt>ports</tt>".
Como todas as partes do OpenBSD precisam estar em sincronia, todas as
árvores que você usar devem ser verificadas e atualizadas ao mesmo
tempo. Você pode juntar os checkouts em uma linha (<i>-stable</i> é
mostrada):
<pre>
    # <b>export CVSROOT=anoncvs@@anoncvs.exemplo.org:/cvs</b>
    # <b>cd /usr</b>
    # <b>cvs -d$CVSROOT checkout -rOPENBSD_4_7 -P src ports xenocara</b>
</pre>

No entanto, atualizações precisam ser feitas diretório por diretório.

<p>
Neste ponto, se você segue a <i>-stable</i> ou a <i>-current</i>,
você já deve ter uma árvore de código fonte correta.
Esteja atento sobre qual árvore você pegou -- você pode acabar tentando
compilar a <i>-current</i> quando o objetivo é a <i>-stable</i>.

<h4>Pré-carregando a árvore: <tt>src.tar.gz, sys.tar.gz</tt></h4>
Enquanto você pode fazer o download de toda a árvore de um servidor
AnonCVS, você pode muitas vezes salvar tempo e banda de rede
"pré-carregando" sua própria árvore de código fonte com os arquivos
tanto do CD do OpenBSD quanto de um servidor FTP.
Isso é particularmente verdadeiro se você está usando a
<a href="../../pt/stable.html"><i>-stable</i></a>, com relativamente
poucos arquivos alterados entre essa versão e a <i>-release</i> em que
está baseada.

<p>
Para extrair a árvore de código fonte do CD para <i>/usr/src</i>
(assumindo que o CD está montado em /mnt):
<pre>
    # <b>cd /usr/src; tar xzf /mnt/src.tar.gz</b>
    # <b>cd /usr; tar xzf /mnt/xenocara.tar.gz</b>
    # <b>cd /usr; tar xzf /mnt/ports.tar.gz</b>
</pre>

Os arquivos de código fonte disponíveis para download nos servidores FTP
são separados em dois arquivos para minimizar o tempo de download para
aqueles que querem trabalhar com somente uma parte da árvore. Os dois
arquivos são <tt>sys.tar.gz</tt>, o qual contém os arquivos usados para
a criação do kernel, e <tt>src.tar.gz</tt>, que contém todas as outras
utilidades do espaço de usuário, exceto a árvore de portes e o código
fonte do X11. Geralmente, no entanto, talvez você queira ambos
instalados. Assumindo que os arquivos baixados,
<tt>src.tar.gz</tt> e <tt>sys.tar.gz</tt>, estão em <tt>/usr</tt>:
  
<pre>
    # <b>cd /usr/src</b>
    # <b>tar xzf ../sys.tar.gz</b>
    # <b>tar xzf ../src.tar.gz</b>
    # <b>cd /usr</b>
    # <b>tar xzf xenocara.tar.gz</b>
    # <b>tar xzf ports.tar.gz</b>
</pre>

<p>
Nem todas as pessoas querem descompactar todos os pacotes de arquivos,
mas conforme o sistema precisar ser colocado em sincronia, você
geralmente terá a necessidade de configurar todas as partes da árvore.


<a name="CVSTips"></a>
<h4>Dicas comuns de CVS</h4>

Como mencionado anteriormente, algumas opções são obrigatórias para
pegar uma árvore <tt>src</tt> válida no OpenBSD.
A opção "<tt>-P</tt>" acima é uma delas: Ela faz "prunes" (remove) em
diretórios que estão vazios.
Com o passar do anos, diretórios foram criados e excluídos na árvore
de código fonte do OpenBSD, e algumas vezes os nomes dos diretórios
antigos são atualmente usados como nomes de arquivos.
Sem a opção "<tt>-P</tt>", seu mais recente "checked-out" da árvore
não irá compilar corretamente.

<p>
Muitas opções parecidas que usam <tt>-d</tt> no comando 'update' -- isso
cria novos diretórios que podem ter sido adicionados na árvore desde seu
checkout inicial.
Para atualizar corretamente, você precisa usar as opções <tt>-Pd</tt>.

<p>
Usuários experientes de CVS podem se perguntar por que a CVSROOT foi
especificada e usada nesse exemplo, quando o cvs(1) registra a
localização do servidor CVS na árvore checada.
Isso é correto, contudo, muitas vezes é um jeito necessário para
sobrescrever o servidor anoncvs padrão, muitas pessoas recomendam
<i>sempre</i> especificar explicitamente o repositório.
É também de valia notar que enquanto a variável de ambiente CVSROOT
pode ser usada diretamente pelo cvs(1), ela é usada somente se nenhuma
outra sobrescrevê-la (ou seja, cvs(1) teria um erro sem ela), apesar de
que especificar ela na linha de comando cvs(1) sobrescreve todos os
outros valores.

<p>
É bastante útil usar um <tt>.cvsrc</tt> no seu diretório pessoal para
especificar padrões para algumas dessas opções.
Um exemplo de arquivo <tt>.cvsrc</tt>:
<pre>
    $ <b>more ~/.cvsrc</b>
    cvs -q -danoncvs@@anoncvs.exemplo.org:/cvs
    diff -up
    update -Pd
    checkout -P
</pre>

Esse arquivo faz o cvs(1) usar o servidor
<tt>anoncvs@@anoncvs.exemplo.org:/cvs</tt>, suprimir saída desnecessária
("<tt>-q</tt>" é "quieto") para todas as operações,
um comando "cvs up" padronizado para usar <tt>-Pd</tt>,
um "cvs diff" padronizado para providenciar "unified diffs" imposto por
"<tt>-u</tt>", e um "cvs checkout" usa a opção "<tt>-P</tt>".
Enquanto isso é conveniente, se você se esquecer que esse arquivo
existe, ou tentar executar comandos que você tem usado em uma máquina
sem esse arquivo, você terá problemas.

<p>
Como a árvore de código fonte consiste, em sua maioria, de vários
arquivos pequenos, ativar o
<a href="faq14.html#SoftUpdates">soft updates</a>
para a partição que a árvore de código fonte está localizada vai
melhorar significantemente o desempenho.


<a name="BldKernel"></a>
<h3>5.3.4 - Compilação do kernel</h3>
Nós assumimos que você deseja compilar um kernel padrão (GENERIC ou
GENERIC.MP) aqui.
Normalmente, isso é o que você deseja fazer.
<i>Não</i> considere a ideia de compilar um kernel personalizado se você
não dominou o processo de compilação padrão.

<p>
Obviamente, o kernel é uma porção do sistema MUITO dependente do
hardware.
O código fonte para o kernel está no diretório <tt>/usr/src/sys</tt>.
Algumas partes do código fonte do kernel do OpenBSD são usadas em outras
plataformas, outras são específicas de um processador ou de uma
arquitetura.
Se você olhar no diretório <tt>/usr/src/sys/arch/</tt>, você pode ver
algumas coisas que parecem um pouco confusas -- por exemplo, existem
os diretórios <tt>mac68k</tt>, <tt>m68k</tt> e <tt>mvme68k</tt>.
Nesse caso, ambos os sistemas mvme68k e mac68k usam o mesmo
processador, mas as máquinas em que eles são baseados são diferentes e,
dessa forma, requerem um kernel diferente (há muito mais coisas sobre o
projeto de um computador do que de seu processador!).
No entanto, partes do kernel são comuns, e essas partes são mantidas
no diretório m68k.
Se você está simplesmente compilando um kernel, a base da arquitetura
de diretórios como <tt>m68k</tt> não é nada para você se preocupar,
você deve trabalhar exclusivamente com os diretórios da
"área da arquitetura", tal como <tt>mvme68k</tt>.

<p>
Kernels são compilados baseados nos
<a href="#Options">arquivos de configuração do kernel</a>, que estão
localizados no diretório
<tt>/usr/src/sys/arch/&lt;<i>sua plataforma</i>&gt;/conf</tt>.
A compilação do kernel consiste no uso do programa
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8">config(8)</a>
para criar e popular o diretório de compilação do kernel, que no fim
estará em
<tt>/usr/src/sys/arch/&lt;<i>sua plataforma</i>&gt;/compile/&lt;<i>Nome do Kernel</i>&gt;</tt>.
Para este exemplo, nós assumimos que você está usando a plataforma i386:

<blockquote><pre>
# <b>cd /usr/src/sys/arch/i386/conf</b>
# <b>config GENERIC</b>
# <b>cd ../compile/GENERIC</b>
# <b>make clean && make depend && make</b>
    <i>[...várias mensagens de saída...]</i>
# <b>make install</b>
</pre></blockquote>

Troque "<tt>i386</tt>", na primeira linha, pelo nome da sua plataforma.
O comando
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=machine&amp;sektion=1">machine(1)</a>
pode dizer a você qual é o nome da sua plataforma, assim uma
generalização óbvia pode ser usada com o comando
"<tt>cd /usr/src/sys/arch/`machine`/conf</tt>" em vez da primeira
linha.

<p>
Neste ponto, reinicialize sua máquina para ativar esse novo kernel.
Note que o novo kernel deve estar em execução antes do próximo passo;
de qualquer forma, se você seguiu o aviso
<a href="#BldBinary">acima</a> sobre atualização de versão para o mais
recente snapshot disponível, isso não é tão importante.
Algumas vezes, no entanto, as APIs mudam e o kernel antigo fica
impossibilitado de executar novas aplicações, mas o novo kernel
geralmente suporta as antigas.

<h4>Variação do processo acima: Árvore de código fonte apenas para
leitura ("Read-only")</h4>
Algumas vezes, você pode querer ter certeza que seu diretório
<tt>/usr/src/sys</tt> permanecerá intocável.
Isso pode ser feito usando o seguinte processo:

<blockquote><pre>
$ <b>cd <i>/qualquer_lugar</i></b>
$ <b>cp /usr/src/sys/arch/i386/conf/GENERIC .</b>
$ <b>config -s /usr/src/sys -b . GENERIC</b>
$ <b>make clean && make depend && make</b>
   ... várias mensagens de saída ...
</pre></blockquote>

Note que você pode compilar o kernel sem acesso root, mas você precisa
ter acesso ao root para instalar o kernel.


<a name="BldUserland"></a>
<h3>5.3.5 - Compilação do espaço de usuário</h3>

Há um processo específico usado pelo OpenBSD.
Os processos usados em outros SOs que você tem familiaridade normalmente
não irão funcionar no OpenBSD.

<p>
<ul>
<li>Limpe seu diretório <tt>/usr/obj</tt> e refaça as ligações
simbólicos:
<blockquote><pre>
# <b>rm -rf /usr/obj/*</b>
# <b>cd /usr/src</b>
# <b>make obj</b>
</pre></blockquote>

Note que o uso do diretório <tt>/usr/obj</tt> é obrigatório.
A falha nesse passo antes de compilar o resto da árvore irá comumente
deixar sua árvore <tt>src</tt> em mau estado.

<p>
<li>Tenha certeza que todos os diretórios apropriados estão criados.
<blockquote><pre>
# <b>cd /usr/src/etc && env DESTDIR=/ make distrib-dirs</b>
</pre></blockquote>

<p>
<li>Compile o sistema:
<blockquote><pre>
# <b>cd /usr/src</b>
# <b>make build</b>
</pre></blockquote>
Isso compila e instala todos os utilitários do espaço de usuário na
ordem apropriada.
Esse é um passo que consome bastante tempo -- uma máquina muito rápida
pode completar isso em cerca de uma hora, uma máquina muito lenta
pode levar vários dias.
Quando esse passo está completo, você tem novos binários compilados
em seu sistema.

<p>
<li><b>Se estiver compilando a <i>-current</i>:</b> atualize
    <tt>/dev</tt> e <tt>/etc</tt> com as mudanças listadas em
    <a href="../current.html">current.html</a>.
    Se está seguindo a -stable depois de um correto
    <a href="../upgrade47.html">processo de atualização de versão</a> ou
    uma instalação dos <a href="#BldBinary">binários correspondentes</a>,
    esse passo não é necessário ou desejado.
</ul>


<a name="Release"></a>
<a name="BldRelease"></a> <!-- old tag -->
<h2>5.4 - Compilação de uma release</h2>
<h3>O que é uma "release", e por que eu vou querer fazer uma?</h3>
Uma release é um conjunto de arquivos completos que você pode usar para
instalar o OpenBSD em outro computador.
Se você tem somente um computador executando o OpenBSD, você realmente
não tem nenhuma razão para fazer uma release; o processo de compilação
<a href="#Bld">acima</a> vai fazer tudo que você precisa.
Um exemplo de uso do processo de fazer uma release é compilar
a <i>-stable</i> em uma máquina rápida, e então fazer uma release para
ser instalada em todas as suas outras máquinas no seu escritório.

<p>
O processo de criar uma release usa os binários criados no diretório
<tt>/usr/obj</tt> no processo de compilação mostrado acima, então você
precisa primeiro completar corretamente a compilação, e nada deve
atrapalhar o diretório <tt>/usr/obj</tt>.
Um momento onde isso pode ser um problema é se você usa um
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mount_mfs&amp;sektion=8">disco de memória</a>
como seu <tt>/usr/obj</tt>, para um pouco de desempenho extra no
processo de compilação: você não vai querer reinicializar seu computador
entre os passos de "build" e "release"!

<p>
O processo de criar uma release requer dois diretórios para o trabalho,
que nós vamos chamar de DESTDIR e RELEASEDIR.
Todos os arquivos que são parte de uma instalação "limpa" do OpenBSD
são copiados para seus lugares apropriados dentro do DESTDIR.
Eles então são compactados com o tar(1) e colocados em RELEASEDIR.
No fim do processo, RELEASEDIR guarda a release completa do OpenBSD.
O processo de criar uma release também usa o <tt>/mnt</tt>, então
este não deve ser usado por nada enquanto o processo de criação da
release estiver em execução. Para propósitos de exemplo, nós usaremos o
DESTDIR em <tt>/usr/dest</tt> e o RELEASEDIR em <tt>/usr/rel</tt>.


<p>
O processo de criar uma release envolve um utilitário,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crunchgen&amp;sektion=8">crunchgen(8)</a>,
que é utilizado para criar um único arquivo executável feito de vários
binários individuais.
O nome como esse único arquivo executável é executado determina qual
componente binário é executado.
É dessa maneira que vários arquivos de programas individuais são
comprimidos em um kernel ramdisk presente em disquetes de inicialização
e outras mídias de inicialização.

<p>
Você precisa ter privilégios de root para fazer uma release.

<p>
<h3>Como fazer uma release</h3>

Defina nossas variáveis de ambiente DESTDIR e RELEASEDIR:
<blockquote><pre>
# <b>export DESTDIR=/usr/dest</b>
# <b>export RELEASEDIR=/usr/rel</b>
</pre></blockquote>

Nós agora limpamos DESTDIR e, se necessário, criamos os diretórios:
<blockquote><pre>
# <b>test -d ${DESTDIR} && mv ${DESTDIR} ${DESTDIR}.old && rm -rf ${DESTDIR}.old &</b>
# <b>mkdir -p ${DESTDIR} ${RELEASEDIR}</b>
</pre></blockquote>

RELEASEDIR normalmente não precisa ser esvaziado antes de começar o
processo de fazer uma release; no entanto, se existem mudanças nos
arquivos de release ou em seus nomes, arquivos antigos serão
conservados. Você pode desejar também apagar esse diretório antes de
começar.

<p>
Nós agora faremos a release em si:
<blockquote><pre>
# <b>cd /usr/src/etc</b>
# <b>make release</b>
</pre></blockquote>

Depois que a release está pronta, é uma boa ideia verificá-la para ter
certeza de que os arquivos tar correspondem aos que estão no DESTDIR.
A saída deste passo deve ser mínima.

<blockquote><pre>
# <b>cd /usr/src/distrib/sets</b>
# <b>sh checkflist</b>
</pre></blockquote>

Você agora tem o conjunto de arquivos completo e verificado em
RELEASEDIR. Esses arquivos podem agora ser usados para a instalação
ou atualização de versão do OpenBSD em outras máquinas.

<p>
As instruções confiáveis sobre como fazer uma release estão em
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=release&amp;sektion=8">release(8)</a>.

<p>
Nota: se você deseja distribuir os arquivos resultantes por HTTP, para
uso em scripts de instalação ou upgrade, você também precisa
adicionar um arquivo "index.txt", o qual contém a lista de todos os
arquivos em sua recém-criada release.
<blockquote><pre>
# <b>/bin/ls -1 >index.txt</b>
</pre></blockquote>

Após você ter feito a release, você pode usar aqueles arquivos para uma
<a href="faq4.html">instalação</a> padrão ou
<a href="../upgrade47.html">atualização de versão</a> de outra máquina,
ou se for atualizar uma máquina para uma nova <i>-stable</i>,
simplesmente <a href="faq4.html#AddFileSet">descompacte</a> os arquivos
tar no diretório raiz da máquina de destino.

<a name="Xbld"></a>
<h2>5.5 - Compilação do X (Xenocara)</h2>
A partir do <a href="http://x.org/">X.org v7,</a> o X mudou para um
sistema de "compilação modular", dividindo a árvore de código fonte no
X.org v7 em mais de trezentos pacotes mais ou menos independentes.

<p>
Para simplificar a vida dos usuários do OpenBSD, uma "meta-build"
chamada <a href="http://xenocara.org">Xenocara</a> foi desenvolvida.
Esse sistema "converte" o X novamente em uma grande árvore para
ser compilada em um único processo.
Como um bônus, esse processo é mais similar ao processo de compilação
usado pelo resto do OpenBSD do que as versões anteriores eram.

<p>
As instruções oficiais para a compilação do X estão no arquivo
<tt>/usr/xenocara/README</tt> e em
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=release&amp;sektion=8">release(8)</a>.

<h3>Como obter o código fonte</h3>
A localização "normal" para a árvore xenocara é
<tt>/usr/xenocara</tt>, e o código fonte é guardado no módulo
<tt>xenocara</tt> no CVS.
Dessa forma, o processo de "checkout" é este:
<blockquote><pre>
$ <b>cd /usr</b>
$ <b>cvs -qdanoncvs@@anoncvs.exemplo.org:/cvs checkout -P xenocara</b>
</pre></blockquote>

<h3>Compilação da Xenocara</h3>
Para a compilação da árvore xenocara padrão, suportada pelo OpenBSD,
nenhuma ferramenta externa é necessária.

<blockquote><pre>
# <b>cd /usr/xenocara</b>
# <b>rm -rf /usr/xobj/*</b>
# <b>make bootstrap</b>
# <b>make obj</b>
# <b>make build</b>
</pre></blockquote>

Se você deseja fazer mudanças na árvore de código fonte, você irá
provavelmente precisar adicionar vários <a href="faq15.html">pacotes</a>.
Detalhes estão no arquivo <tt>/usr/xenocara/README</tt>.

<h3>Como fazer uma release do X</h3>
Isso é similar ao processo de criar uma release do sistema principal.
Depois de compilar corretamente o X, você vai definir as variáveis
DESTDIR e RELEASEDIR, com os mesmos propósitos mostrados mais acima.
O RELEASEDIR pode ser o mesmo diretório que o RELEASEDIR do sistema
principal, mas DESTDIR é apagado e refeito nesse processo.
Se feito cuidadosamente, isso não é um problema, mas usar um DESTDIR
separado pode ser "mais seguro".

<p>
Para este exemplo, nós usaremos as variáveis DESTDIR e RELEASEDIR em
/usr/dest e /usr/rel, respectivamente.
Isso precisa ser feito depois do processo de compilação mostrado acima.

<blockquote><pre>
# <b>export DESTDIR=/usr/dest</b>
# <b>export RELEASEDIR=/usr/rel</b>
# <b>test -d ${DESTDIR} && mv ${DESTDIR} ${DESTDIR}- && \</b>
 <b>    rm -rf ${DESTDIR}- &</b>
# <b>mkdir -p ${DESTDIR} ${RELEASEDIR}</b>
# <b>make release</b>
</pre></blockquote>

Quando esse processo completar, você terá um conjunto de arquivos
de release em $RELEASEDIR.

<p>
<a name="Why"></a>
<h2>5.6 - Por que eu preciso de um kernel personalizado?</h2>

<p>
Na verdade, você provavelmente não precisa.

<p>
Um kernel personalizado é uma compilação com um arquivo de configuração
diferente daquele fornecido no arquivo de configuração <tt>GENERIC</tt>.
Um kernel personalizado pode ser baseado no código fonte da
<a href="#Flavors"><i>-release, -stable</i> ou <i>-current</i></a>,
igual ao que um kernel <tt>GENERIC</tt> pode ser.
Enquanto compilar seu próprio <tt>GENERIC</tt>, você terá suporte
da equipe do OpenBSD, se compilar seu próprio kernel personalizado, você
<i>não</i> terá.

<p>
A configuração do kernel padrão do OpenBSD (<tt>GENERIC</tt>) é
projetada para ser útil para a maioria das pessoas.
Muitas pessoas quebram seus sistemas, ao tentar otimizar o kernel, em
vez de melhorar o funcionamento.
Existem algumas pessoas que acreditam que você precisa personalizar
seu kernel e o sistema para obter um desempenho otimizado, mas esse não
é o caso do OpenBSD. Somente os usuários mais avançados e com
conhecimentos nas aplicações exigentes precisam se preocupar com um
kernel personalizado, ou com o sistema todo.

<p>
Algumas razões pelas quais você deseja ou precisa compilar um kernel
personalizado:
<ul>
  <li>Você realmente sabe o que está fazendo, e quer encaixar o
      OpenBSD em um computador com uma quantidade pequena de RAM,
      removendo drivers de dispositivos que você não precisa.
  <li>Você realmente sabe o que está fazendo, e quer remover opções
      padrão ou adicionar opções que não estão ativas por padrão
      (e tem uma boa razão para isso).
  <li>Você realmente sabe o que está fazendo, e quer ativar opções
      experimentais.
  <li>Você realmente sabe o que está fazendo, e tem uma necessidade
      especial não conhecida pelo <tt>GENERIC</tt>, e não vai perguntar
      por que isso não funciona se alguma coisa der errado.
</ul>

<p>
Algumas razões pelas quais você não deve compilar um kernel
personalizado:
<ul>
  <li>Você não precisa fazer isso, normalmente.
  <li>Você não terá um sistema rápido.
  <li>Você certamente tornará sua máquina menos confiável.
  <li>Você não vai receber nenhum suporte dos desenvolvedores.
  <li>Todos os problemas encontrados devem ser obrigatoriamente
      reproduzidos usando um kernel <tt>GENERIC</tt> antes que os
      desenvolvedores recebam qualquer relato de problema sério.
  <li>Usuários e desenvolvedores vão rir de você quando você quebrar o
      seu sistema.
  <li>Opções personalizadas do compilador normalmente fazem um bom
      trabalho de exposição dos problemas do compilador do que melhorar
      o desempenho do sistema.

</ul>

<p>
Remover drivers de dispositivos pode acelerar o processo de
inicialização no seu sistema, mas pode complicar a recuperação se você
tiver um problema de hardware, além de ser, frequentemente, feito de
forma errada.
Remover drivers de dispositivos <i>não vai</i> fazer seu sistema
funcionar mais rápido em qualquer quantidade notável, apesar de produzir
um kernel pequeno.
Remover a verificação e depuração de erro pode resultar em um ganho
limitado de desempenho, mas ficará impossível descobrir problemas
no sistema se alguma coisa não funcionar.


<p>
Novamente, desenvolvedores normalmente ignoram relatos de erro sobre
kernels personalizados, a menos que o problema possa ser reproduzido em
um kernel <tt>GENERIC</tt>.
Você foi avisado.

<p>
<a name="Options"></a>
<h2>5.7 - Compilação de um kernel personalizado</h2>
É assumido que você leu o texto <a href="#Why">acima</a> e realmente
adora sofrer.
É também assumido que você tem um objetivo que não pode ser alcançado
pela
<a href="#BootConfig">Configuração em tempo de inicialização (UKC>)</a>
nem <a href="#config">config(8)urando o kernel GENERIC</a>.
Se todas as possibilidades são falsas, você deve parar de usar o
GENERIC. Realmente.

<p>
A geração do kernel do OpenBSD é controlada por arquivos de
configuração, que estão localizados nos diretórios
<tt>/usr/src/sys/arch/<i>&lt;arch&gt;</i>/conf/</tt>
por padrão. Todas as arquiteturas possuem um arquivo, <tt>GENERIC</tt>,
que é usado para gerar um kernel padrão do OpenBSD para aquela
plataforma.
Também podem existir outros arquivos de configuração que são usados
para criar kernels com focos diferentes; por exemplo, para
utilização mínima de RAM, estações de trabalho sem disco, etc.

<p>
O arquivo de configuração é processado pelo
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8">config(8)</a>,
que faz a criação e população do diretório de compilação
<tt>../compile</tt>, em uma instalação típica, que será feita em
<tt>/usr/src/sys/arch/<i>&lt;arch&gt;</i>/compile/</tt>. O config(8)
também cria um
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=make&amp;sektion=1">Makefile</a>
e outros arquivos requeridos para uma compilação correta do kernel.

<p>
As opções de configuração do kernel são as opções que você adiciona
na sua configuração do kernel para ativar certos recursos dele.
Isso permite que você tenha exatamente o suporte que você quer,
sem ter suporte para dispositivos desnecessários. Há um monte de opções
que permitem que você personalize seu kernel. Aqui nós vamos ver somente
algumas delas, aquelas que são de uso mais comum. Verifique na página
de manual
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=options&amp;sektion=4">options(4)</a>
a lista completa de opções, e como esta muda de tempos em tempos,
você deve ter certeza de que está usando a página de manual da mesma
versão do OpenBSD que você está compilando. Você também pode verificar
os exemplos de arquivos de configuração que estão disponíveis para a
sua arquitetura.

<p>
<b>Não adicione, remova, ou mude opções em seu kernel a menos que você
tenha realmente uma razão para isso! Não edite o arquivo de configuração
<tt>GENERIC</tt>!!</b>
A única configuração do kernel que é suportada pela equipe do OpenBSD
é o kernel GENERIC, a combinação das opções em
<tt>/usr/src/sys/arch/&lt;<i>arch</i>&gt;/conf/GENERIC</tt>
e <tt>/usr/src/sys/conf/GENERIC</tt> <i>distribuídas pela equipe do
OpenBSD</i> (ou seja, NÃO-editadas). Relatar um problema em um kernel
personalizado quase sempre resulta em você ter que tentar reproduzir o
problema com um kernel GENERIC. Nem todas as opções são compatíveis
entre elas, e muitas opções são requeridas para um sistema trabalhar.
Não há garantia de que apenas porque você conseguiu um kernel compilado
e personalizado, ele irá funcionar.
Não há garantia de que um kernel que pôde ser "config(8)urado" possa
ser compilado.

<p>
Você pode ver os arquivos de configuração de plataformas específicas
aqui:
<ul>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/alpha/conf/">Arquivos de Configuração do Kernel alpha</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/i386/conf/">Arquivos de Configuração do Kernel i386</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/macppc/conf/">Arquivos de Configuração do Kernel macppc</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/sparc/conf/">Arquivos de Configuração do Kernel sparc</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/sparc64/conf/">Arquivos de Configuração do Kernel sparc64</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/vax/conf/">Arquivos de Configuração do Kernel vax</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/hppa/conf/">Arquivos de Configuração do Kernel hppa</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/">Outras Arquiteturas</a>
</ul>

<p>
Olhe com atenção esses arquivos e você irá notar uma linha perto do
topo do arquivo, similar a esta:
<pre>
     include "../../../conf/GENERIC"
</pre>
Isso significa que ele está referenciando outro arquivo de configuração,
um que armazena opções independentes da plataforma. Quando criar sua
configuração do kernel, tenha certeza de olhar o conteúdo do
<a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/conf/GENERIC">sys/conf/GENERIC</a>.
<p>
As opções de configuração do kernel devem ser colocadas no seu arquivo
de configuração no formato:
<blockquote>
<tt>option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>nome</i>
</blockquote>
ou
<blockquote><pre>
<tt>option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>nome=valor</i>
</pre></blockquote>

Por exemplo, para ativar a opção "DEBUG" no kernel, adicione uma linha
como esta:

<blockquote><pre>
option      DEBUG
</pre></blockquote>

Opções no kernel do OpenBSD são traduzidas em opções de pré-processador
do compilador, então uma opção como DEBUG vai fazer com que o código
fonte seja compilado com a opção -DDEBUG, que é equivalente a colocar um
<tt>#define DEBUG</tt> nos arquivos de código fonte do kernel.

<p>
Algumas vezes você pode desejar desabilitar uma opção que está
definida, tipicamente no arquivo
"<tt>src/sys/conf/GENERIC</tt>". Enquanto você deve modificar uma cópia
daquele arquivo, uma melhor escolha pode ser usar a instrução
<i>rmoption</i>. Por exemplo, se você quer realmente desabilitar o
depurador interno do kernel (<i>não recomendado!</i>), você deve
adicionar uma linha igual a esta:
<pre>
     rmoption DDB
</pre>
em seu arquivo de configuração do kernel. A <tt>option DDB</tt> é
definida em <tt>src/sys/conf/GENERIC</tt>, mas a linha <tt>rmoption</tt>
acima desativa-a.

<p>
Novamente, por favor veja em
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=options&amp;sektion=4">options(4)</a>
mais informação sobre as especificações dessas opções. Também note
que muitas das opções também têm suas próprias páginas de manual --
sempre leia todas as coisas disponíveis sobre uma opção antes de
adicioná-la ou removê-la do seu kernel.

<p>
<h3>Compilação de um kernel personalizado</h3>

Neste caso, nós vamos compilar um kernel que suporta a placa serial
ISA multiportas
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=boca&amp;sektion=4">boca(4)</a>.
Essa placa não está no kernel GENERIC, devido aos conflitos com outros
drivers.

Existem dois jeitos simples para fazer um kernel personalizado: copiar
o arquivo de configuração GENERIC com um outro nome e editá-lo, ou criar
um arquivo "invólucro" que inclui o kernel padrão GENERIC e quaisquer
opções que você precise que não estão no GENERIC.
Nesse caso, nosso arquivo invólucro se parece com isto:
<blockquote><pre>
include "arch/i386/conf/GENERIC"

boca0  at       isa? port 0x100 irq 10     # BOCA 8-port serial cards
com*   at       boca? slave ?
</pre></blockquote>

As duas linhas referentes à placa boca(4) são copiadas das linhas
comentadas em <tt>GENERIC</tt>, com o IRQ ajustado se necessário.
A vantagem de usar esse arquivo invólucro é que qualquer mudança
não avisada no GENERIC é atualizada automaticamente com qualquer
outra atualização de código fonte.
A desvantagem é que não se pode remover dispositivos (apesar de que
geralmente essa é uma ideia ruim, de qualquer forma).

<p>
Uma outra maneira de gerar um kernel personalizado é fazer uma cópia do
<tt>GENERIC</tt> padrão, dando a ela um outro nome, e editando-a
o quanto for necessário.
A desvantagem disso é que atualizações posteriores no arquivo de
configuração GENERIC precisam ser colocadas na sua cópia, ou você vai
ter que refazer seu arquivo de configuração.

<p>
Em ambas as ocasiões, depois de fazer seu arquivo personalizado de
configuração do kernel, use o config(8) e faça seu kernel como
documentado <a href="#BldKernel">acima</a>.


<p>
Instruções completas para criar seu próprio kernel personalizado estão
na página de manual
<a href= "http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8#EXAMPLES+(kernel">
config(8)</a>.


<a name="BootConfig"></a>
<h2>5.8 - Configuração em tempo de inicialização</h2>

<p>
Algumas vezes quando seu sistema está inicializando, pode ser que você
receba a notícia de que o kernel achou seu dispositivo, mas talvez no
IRQ errado. E talvez você precise usar esse dispositivo imediatamente.
Bem, sem recompilar o kernel você pode usar a configuração do kernel
em tempo de inicialização do OpenBSD. Isso somente corrige seu problema
uma vez. Se você reinicializar, você terá que repetir esse procedimento.
Assim sendo, isso é somente uma correção temporária, e você deve
corrigir o problema usando o <a href="#config">config(8)</a>. Seu
kernel, no entanto, precisa da <strong>option BOOT_CONFIG</strong>;
o kernel GENERIC possui essa opção.

<p>
Uma grande parte deste documento pode ser encontrada na página de manual
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=boot_config&amp;sektion=8">boot_config(8)</a>.

<p>
Para inicializar no UKC ("User Kernel Config"), use a opção -c no
momento da inicialização.

<blockquote><pre>
boot&gt; <strong>boot hd0a:/bsd -c</strong>
</pre></blockquote>

Ou qualquer kernel que você queira inicializar. Fazendo isso, aparecerá
um prompt UKC. A partir daí você pode passar comandos diretamente para o
kernel, especificando dispositivos que você quer mudar ou desabilitar,
ou mesmo ativar.

<p>
Aqui está uma lista de comandos comuns no UKC.

<ul>
<li><tt>add <strong>device</strong></tt> - Adiciona um dispositivo
    através da cópia de outro
<li><tt>change <strong>devno | device </strong></tt> - Modifica um ou
    mais dispositivos
<li><tt>disable <strong>devno | device </strong></tt> - Desativa um ou
    mais dispositivos
<li><tt>enable <strong>devno | device </strong></tt> - Ativa um ou mais
    dispositivos
<li><tt>find <strong>devno | device </strong></tt> - Procura um ou mais
    dispositivos
<li><tt>help</tt> - Sumário curto destes comandos
<li><tt>list</tt> - Lista TODOS os dispositivos conhecidos
<li><tt>exit/quit</tt> - Continua a inicialização
<li><tt>show <strong>[attr [val]]</strong></tt> - Mostra dispositivos
    com um atributo e, opcionalmente, com um valor especificado
</ul>

<p>
Uma vez que você tem seu kernel configurado, use <tt>quit</tt> ou
<tt>exit</tt> e continue a inicialização.
Depois disso, você deve fazer a mudança permanente em sua imagem
do kernel, conforme descrito em <a href="#config">Como usar o config(8)
para alterar seu kernel</a>.


<p>
<a name="config"></a>
<h2>5.9 - Como usar o config(8) para alterar seu kernel</h2>
<p>
As opções <b>-e</b> e <b>-u</b> com o
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8">config(8)</a>
podem ser extremamente úteis e salvar a perda de tempo compilando seu
kernel. O sinalizador <b>-e</b> permite que você entre na configuração
UKC em um sistema em funcionamento. Essas mudanças terão efeito após a
próxima reinicialização. O sinalizador <b>-u</b> testa para ver se
quaisquer mudanças foram feitas no sistema em funcionamento durante a
inicialização, significando que você usou <b>boot -c</b> para entrar na
configuração UKC enquanto seu sistema inicializava.

<p>
O exemplo seguinte mostra o desabilitamento dos dispositivos
ep* no kernel. Por razões de segurança, você deve usar a opção <b>-o</b>
que escreve as mudanças em um arquivo especificado. Por exemplo:
<strong>config -e -o bsd.new /bsd</strong> grava as mudanças em
bsd.new. O exemplo não usa a opção <b>-o</b>, então mudanças são
apenas ignoradas, e não são escritas de volta no arquivo binário do
kernel. Para mais informações relacionadas a erros e mensagens de aviso,
leia a página de manual
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8">config(8)</a>.

<!--XXXver -->
<blockquote><pre>
$ <strong>sudo config -e /bsd</strong>
OpenBSD 4.7 (GENERIC) #558: Thu Mar  17 20:46:15 MDT 2010
    deraadt@@i386.openbsd.org:/usr/src/sys/arch/i386/compile/GENERIC
warning: no output file specified
Enter 'help' for information
ukc&gt; <strong>?</strong>
        help                                Command help list
        add             dev                 Add a device
        base            8|10|16             Base on large numbers
        change          devno|dev           Change device
        disable         attr val|devno|dev  Disable device
        enable          attr val|devno|dev  Enable device
        find            devno|dev           Find device
        list                                List configuration
        lines           count               # of lines per page
        show            [attr [val]]        Show attribute
        exit                                Exit, without saving changes
        quit                                Quit, saving current changes
        timezone        [mins [dst]]        Show/change timezone
        bufcachepercent [number]            Show/change BUFCACHEPERCENT
        nkmempg         [number]            Show/change NKMEMPAGES
        shmseg          [number]            Show/change SHMSEG
        shmmaxpgs       [number]            Show/change SHMMAXPGS
ukc&gt; <strong>list</strong>
  0 video* at uvideo* flags 0x0
  1 audio* at uaudio*|btsco*|sb0|sb*|gus0|pas0|sp0|ess*|wss0|wss*|ym*|eap*|envy*
|eso*|sv*|neo*|cmpci*|clcs*|clct*|auacer*|auglx*|auich*|auixp*|autri*|auvia*|aza
lia*|fms*|maestro*|esa*|yds*|emu* flags 0x0
  2 midi* at umidi*|sb0|sb*|opl*|opl*|opl*|opl*|opl*|ym*|mpu*|mpu*|autri*|eap* f
lags 0x0
  3 midi* at pcppi0 flags 0x0
  4 drm* at inteldrm*|radeondrm* flags 0x0
  5 inteldrm* at vga0|vga* flags 0x0
  6 radeondrm* at vga0|vga* flags 0x0
  7 radio* at udsbr*|bktr0|fms* flags 0x0
  8 softraid0 at root flags 0x0
  9 nsphy* at url*|udav*|mos*|axe*|aue*|xe*|ef*|hme*|lii*|bce*|ale*|age*|jme*|et
*|nfe*|stge*|vge*|bnx*|bge*|lge*|nge*|msk*|sk*|ste*|sis*|wb*|tl*|vr*|pcn*|sf*|ge
m*|ne0|ne1|ne2|ne*|ne*|ne*|epic*|sm0|sm*|dc*|dc*|re*|re*|rl*|rl*|mtd*|fxp*|fxp*|
xl*|xl*|ep0|ep0|ep0|ep*|ep*|ep*|ep*|ep* phy -1 flags 0x0
 10 nsphyter* at url*|udav*|mos*|axe*|aue*|xe*|ef*|hme*|lii*|bce*|ale*|age*|jme*
|et*|nfe*|stge*|vge*|bnx*|bge*|lge*|nge*|msk*|sk*|ste*|sis*|wb*|tl*|vr*|pcn*|sf*
|gem*|ne0|ne1|ne2|ne*|ne*|ne*|epic*|sm0|sm*|dc*|dc*|re*|re*|rl*|rl*|mtd*|fxp*|fx
p*|xl*|xl*|ep0|ep0|ep0|ep*|ep*|ep*|ep*|ep* phy -1 flags 0x0
[...recorte...]
ukc&gt; <strong>disable ep</strong>
 98 ep0 disabled
 99 ep* disabled
100 ep* disabled
278 ep0 disabled
279 ep0 disabled
280 ep* disabled
281 ep* disabled
344 ep* disabled
ukc&gt; <strong>quit</strong>
not forced
</pre></blockquote>

<p>
No exemplo acima, todos os dispositivos ep* são desativados no kernel
e não serão examinados. Em algumas situações onde você tem usado o
UKC durante a inicialização, via <b>boot -c</b>, você precisa dessas
mudanças escritas permanentemente. Para fazer isso, você deve usar a
opção <b>-u</b>. No exemplo seguinte, o computador foi inicializado em
UCK e o dispositivo
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=wi&amp;sektion=4">wi(4)</a>
foi desabilitado. Desde que as mudanças feitas com boot -c NÃO são
permanentes, essas mudanças precisam ser gravadas.
Este exemplo grava as mudanças feitas a partir do boot -c em um
novo arquivo binário de kernel chamado bsd.new.

<blockquote><pre>
$ <strong>sudo config -e -u -o bsd.new /bsd</strong>
OpenBSD 4.6 (GENERIC) #58: Thu Jul  9 21:24:42 MDT 2009
    deraadt@@i386.openbsd.org:/usr/src/sys/arch/i386/compile/GENERIC
Processing history...
162 wi* disabled
163 wi* disabled
416 wi* disabled
Enter 'help' for information
ukc&gt; <strong>quit</strong>
</pre></blockquote>


<a name="VerboseBoot"></a>
<h2>5.10 - Como obter mais mensagens durante a inicialização</h2>

Obter mais mensagens de saída pode ser muito útil para tentar depurar
problemas durante a inicialização. Se você tem um problema onde seu
disquete de inicialização não inicializa e precisa obter mais
informação, simplesmente reinicialize. Quando você entrar no prompt
&quot;boot&gt;&quot;, inicialize com boot -c. Isso levará você ao
UKC&gt;, então faça:

<blockquote><pre>
UKC&gt; <strong>verbose</strong>
autoconf verbose enabled
UKC&gt; <strong>quit</strong>
</pre></blockquote>

<p>
Agora você tem muitas mensagens de saída quando inicializar.



<p>
<a name="buildprobs"></a>
<h2>5.11 - Problemas comuns, dicas e perguntas sobre compilação e
construção</h2>
Na maioria das vezes, problemas no processo de compilação são causados
por não se seguir cuidadosamente as direções mostradas acima.
Existem, ocasionalmente, problemas reais com a compilação da versão
<i>-current</i> da mais recente snapshot, mas falhas durante a
compilação da <i>-release</i> ou <i>-stable</i> são quase sempre erro do
usuário.

<p>
A maioria dos problemas são normalmente um dos seguintes:
<ul>
<li>Falha ao começar a partir do <a href="#BldBinary">binário
    apropriado</a>, incluindo tentativa de atualização de versão a
    partir do código fonte, ou achar que uma snapshot de uma semana é
    "próximo o bastante".
<li><a href="#BldGetSrc">Fazer o download</a> do ramo errado da
    árvore.
<li>Não seguir o <a href="faq5.html">processo</a>.
<li>Tentar <a href="#Why">personalizar</a> ou "otimizar" seu sistema.
</ul>

Estes são alguns problemas adicionais que você pode encontrar,
no entanto:

<a name="sig11"></a>
<h3>5.11.1 - A compilação para com um erro "Signal 11"</h3>

<p>
A compilação do OpenBSD e outros programas a partir do código fonte é
uma tarefa que exige mais do hardware do que outras coisas, fazendo
uso intensivo de CPU, disco e memória. Como resultado, se você possui
um hardware que tem um problema, o momento mais apropriado para o
problema aparecer é durante uma compilação. Erros "Signal 11" são
causados <i>tipicamente</i> por problemas de hardware, muitas vezes
problemas de memória, mas também pode ser CPU, placa-mãe, ou problemas
de aquecimento. Seu sistema pode realmente ser muito estável, mas
incapaz de compilar programas.

<p>
Você provavelmente achará melhor reparar ou trocar os componentes que
estão causando problemas, pois os problemas podem se manifestar de
outras formas no futuro. Se você tem um hardware onde você realmente
deseja usar e não te causa outro problema, simplesmente instale uma
snapshot ou uma release.

<p>
Para muito mais informação, veja a
<a href="http://www.bitwizard.nl/sig11/">FAQ Sig11</a>.

<a name="snake"></a>
<h3>5.11.2 - "make build" falha com a mensagem "cannot open output
file snake: is a directory"</h3>

Esse é o resultado de dois erros separados:
<ul>
<li><b>Você não baixou ou atualizou sua árvore CVS corretamente.</b>
    Quando estiver fazendo uma operação de checkout CVS, você deve usar
    a opção "<tt>-P</tt>", quando você está atualizando seu código fonte
    com CVS, você deve usar as opções "<tt>-Pd</tt>" no
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1"
    >cvs(1)</a>,
    como documentado <a href="#BldGetSrc">acima</a>.
    Essas opções asseguram que novos diretórios são adicionados e
    removidos na medida em que o OpenBSD evolui.

<li><b>Você não criou corretamente seu diretório <tt>obj</tt> antes da
    sua compilação.</b> A compilação da árvore sem um diretório
    <tt>/usr/obj</tt> não é suportada.

</ul>
É importante seguir cuidadosamente as instruções ao
<a href="#BldGetSrc">baixar</a> e <a href="#Bld">compilar</a> sua
árvore.

<a name="ProbIPv6"></a>
<h3>5.11.3 - Meu sistema sem IPv6 não funciona!</h3>
Sim.
Por favor, não faça modificações na base do sistema onde você não
entende as implicações delas.
Uma "pequena" mudança no kernel pode ter um impacto muito forte no
resto do sistema inteiro.
Por favor, releia <a href="#Why">isto</a>.


<a name="ProbObj"></a>
<h3>5.11.4 - Opa! Eu esqueci de criar o diretório <tt>/usr/obj</tt>
antes de começar!</h3>

Ao fazer um "make build" antes de um "make obj", você terminará com os
arquivos de objetos espalhados em seu diretório <tt>/usr/src</tt>.
Isso é uma coisa ruim.
Se você deseja tentar evitar fazer novamente o download de toda a
árvore src, você pode tentar o seguinte para limpar seus arquivos obj:
<pre>
    # <b>cd /usr/src</b>
    # <b>find . -type l -name obj | xargs rm</b>
    # <b>make cleandir</b>
    # <b>rm -rf /usr/obj/*</b>
    # <b>make obj</b>
</pre>

<a name="ProbObjPt"></a>
<h3>5.11.5 - Dica: Coloque o diretório <tt>/usr/obj</tt> em sua própria
partição</h3>
Se você compila muitas vezes, pode achar mais rápido colocar o
<tt>/usr/obj</tt> em sua própria partição.
O benefício é simples, é tipicamente mais rápido:
<pre>
    # <b>umount /usr/obj</b>
    # <b>newfs <i>YourObjPartition</i></b>
    # <b>mount /usr/obj</b>
</pre>
do que "rm -rf /usr/obj/*".

<a name="ProbSKIPDIR"></a>
<h3>5.11.6 - Como não compilar partes da árvore?</h3>
Algumas vezes você pode desejar não compilar certas partes da sua
árvore, tipicamente porque você tem instalado um substituto para uma
aplicação incluída a partir dos pacotes, ou deseja fazer uma release
"pequena" por qualquer razão.
A solução para isso é usar a opção SKIPDIR do
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mk.conf&amp;sektion=5">/etc/mk.conf</a>.

<p>
Nota: é possível fazer um sistema quebrado desse modo.
Os resultados dessa opção não são suportados pelo projeto OpenBSD.

<a name="ProbMoreInfo"></a>
<h3>5.11.7 - Onde eu posso aprender mais sobre o processo de compilação?</h3>
Aqui estão algumas outras fontes:
<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=release&amp;sektion=8">release(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=afterboot&amp;sektion=8#COMPILING+A">afterboot(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mk.conf&amp;sektion=5">mk.conf(5)</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/Makefile"><tt>/usr/src/Makefile</tt></a>
<li><a href="../../pt/stable.html">Ramo Corrigido</a> (<i>-stable</i>)
<li>(para o X) <tt>/usr/X11R6/README</tt> em seu sistema instalado

</ul>

<a name="NoSnaps"></a>
<h3>5.11.8 - Eu não vejo nenhuma snapshot no sítio FTP. Para onde
elas foram?</h3>

<p>
Snapshots podem ser removidas quando elas se tornam velhas (ou
irrelevantes) ou aproxima-se o momento de uma nova <i>-release</i>.

<a name="NewCompiler"></a>
<h3>5.11.9 - Como iniciar uma nova versão do compilador
(<i>gcc</i>)?</h3>

Você deve realmente apenas
<a href="#BldBinary">instalar a última snapshot</a>.

<p>
O OpenBSD agora suporta dois compiladores na árvore, o gcc v3.3.5, usado
pela maioria das plataformas, mas também o gcc v2.95.3, usado por
algumas plataformas que não foram convertidas ainda, ou que não serão
convertidas devido à carência de suporte ou desempenho pobre do gcc3.

<p>
Os dois compiladores estão em diferentes partes da árvore:
<ul>
<li>gcc3: <tt>/usr/src/gnu/usr.bin/gcc</tt>
<li>gcc2: <tt>/usr/src/gnu/egcs/gcc</tt>
</ul>

<p>
A atualização de versão de um compilador é um pouco como o problema da
galinha e do ovo; mudanças no compilador da árvore requerem uma atenção
extra. Você tem que compilar o compilador duas vezes -- o primeiro
processo de compilação produz um compilador que gera novo código, mas
executa com o código gerado pelo compilador antigo, o segundo processo
de compilação produz um compilador completamente novo.
Geralmente, você vai querer fazer o seguinte procedimento:

<pre>
    <b>Se a sua plataforma usa o gcc 2.95.3:</b>
       # rm -r /usr/obj/gnu/egcs/gcc/*
       # cd /usr/src/gnu/egcs/gcc
        <i>- ou -</i>
    <b>Se a sua plataforma usa o gcc 3.3.5:</b>
       # rm -r /usr/obj/gnu/usr.bin/gcc/*
       # cd /usr/src/gnu/usr.bin/gcc

    <b>Procedimento de compilação similar para v3.3.5 e v2.95.3</b>
    # make -f Makefile.bsd-wrapper clean
    # make -f Makefile.bsd-wrapper obj
    # make -f Makefile.bsd-wrapper depend
    # make -f Makefile.bsd-wrapper
    # make -f Makefile.bsd-wrapper install
    # make -f Makefile.bsd-wrapper clean
    # make -f Makefile.bsd-wrapper depend
    # make -f Makefile.bsd-wrapper
    # make -f Makefile.bsd-wrapper install
</pre>

<p>
E então execute um <a href="#BldUserland">make build</a> normalmente.

<a name="UpdateEtc"></a>
<h3>5.11.10 - Qual é o melhor jeito de atualizar <tt>/etc</tt>,
<tt>/var</tt> e <tt>/dev</tt>?</h3>

<p>Como uma política, software na árvore do OpenBSD não faz modificações
no <tt>/etc</tt> automaticamente.
Isso significa que ele <i>sempre</i> deixa para o administrador fazer
as modificações necessárias aqui.
Atualizações de versão não são exceções.
Para atualizar os arquivos nesses diretórios, primeiro determine
que mudanças ocorreram nos arquivos da base (distribuição), e então
repita manualmente essas mudanças.

<p>
Por exemplo, para ver os arquivos na árvore que foram modificados
mais recentemente, faça um:

<pre>
    # cd /usr/src/etc
    # ls -lt |more
</pre>

<!-- XXXversion -->
<p>Para ver todas as mudanças no <tt>/etc</tt>, entre versões
arbitrárias do OpenBSD, você pode usar o
<a href="../../anoncvs.html">CVS</a>.
Por exemplo, para ver as mudanças entre 4.6 e 4.7, faça um:

<pre>
    # cd /usr/src/etc
    # cvs diff -u -rOPENBSD_4_6 -rOPENBSD_4_7
</pre>

Para ver as mudanças entre 4.7 e <i>-current</i> ("HEAD"), use:
<pre>
    # cd /usr/src/etc
    # cvs diff -u -rOPENBSD_4_7 -rHEAD
</pre>

O script
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=MAKEDEV&amp;sektion=8&amp;arch=i386">/dev/MAKEDEV</a>
não é atualizado automaticamente como parte do processo make build,
no entanto ele é instalado como parte de uma
<a href="#BldBinary">atualização de versão binária</a>.
Como regra geral, é uma boa ideia copiar (se necessário) e executar esse
script a partir da árvore de código fonte quando estiver fazendo a
atualização de versão:

<pre>
    # cd /dev
    # cp /usr/src/etc/etc.`machine`/MAKEDEV ./
    # ./MAKEDEV all
</pre>

<p>
Uma vez identificadas as mudanças, aplique-as em sua árvore local,
preservando qualquer configuração local que você tenha feito.

<p>
As mudanças típicas em <tt>/etc</tt> a considerar, entre as releases,
incluem:

<ul>
<li>Adições a <tt>/etc/protocols</tt> e <tt>/etc/services</tt></li>
<li>Novos sysctls (veja <tt>/etc/sysctl.conf</tt>)</li>
<li>Mudanças nas tarefas padrões do cron. Veja <tt>/etc/daily</tt>,
    <tt>/etc/weekly</tt>, <tt>/etc/monthly</tt> e <tt>/etc/security</tt>
<li>Todos os scripts rc, incluindo o netstart</li>
<li>Mudanças nos dispositivos, veja acima
<li>Mudanças na hierarquia de arquivos em <tt>/etc/mtree</tt>, veja
    <a href="#Hierarchy">abaixo</a>
<li>Novos usuários (<tt>/etc/passwd</tt>) e grupos (<tt>/etc/group</tt>)
</ul>

<!-- XXXversion -->
Essas mudanças são sumarizadas em
<a href="../upgrade47.html">upgrade47.html</a> (para ir para
4.7-release) ou <a href="../current.html">current.html</a> (para ir para
<i>-current</i>).


<a name="Hierarchy"></a>
<h3>5.11.11 - Há algum jeito fácil de fazer todas as mudanças nos
arquivos da hierarquia?</h3>

<p>
De tempos em tempos, arquivos e diretórios são adicionados ou
removidos do arquivo
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hier&amp;sektion=7">hierarchy</a>.
Além disso, a informação de propriedade de partes do sistema de arquivos
pode mudar. Um jeito fácil de assegurar que sua hierarquia está em dia é
usar o utilitário
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mtree&amp;sektion=8">mtree(8)</a>.

<p>
Primeiramente, baixe o código fonte mais recente, então faça o seguinte:

<pre>
    # cd /usr/src/etc/mtree
    # install -c -o root -g wheel -m 600 special /etc/mtree
    # install -c -o root -g wheel -m 444 4.4BSD.dist /etc/mtree
    # mtree -qdef /etc/mtree/4.4BSD.dist -p / -u
</pre>

<p>
Sua hierarquia de arquivos deve estar em dia agora.

<a name="ProbXComp"></a>
<h3>5.11.12 - Posso fazer compilação cruzada? Por que não?</h3>
Ferramentas de compilação cruzada estão no sistema, para uso pelos
desenvolvedores para a criação de suporte às novas plataformas.
No entanto, elas não são mantidas para uso geral.

<p>
Quando os desenvolvedores trazem o suporte para uma nova plataforma,
um dos primeiros grandes testes é a compilação nativa.
Compilar o sistema a partir do código fonte coloca uma considerável
carga no SO e na máquina, e faz um bom trabalho de testar o quanto bem o
sistema trabalha.
Por essa razão, o OpenBSD faz todo o processo de compilação na
plataforma onde a compilação será usada, processo também conhecido como
"compilação nativa".
Sem a compilação nativa é muito mais difícil ter certeza de que as
várias plataformas estão realmente em funcionamento estável, e não
apenas inicializando.

<p>
<font color= "#0000e0">
<a href= "index.html">[Índice da FAQ]</a>
<a href= "faq4.html">[Seção 4 - Guia de Instalação]</a>
<a href= "faq6.html">[Seção 6 - Redes]</a>
</font>

<p>
<hr>
<a href= "index.html"><img height= "24" width= "24" src= "../../images/back.gif" border= "0" alt= "[voltar]"></a>
<a href= "mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: faq5.html,v 1.178 ]<br>
$Translation: faq5.html,v 1.13 2010/06/12 20:04:24 renato Exp $<br>
-->
$OpenBSD: faq5.html,v 1.11 2010/06/19 07:38:08 ajacoutot Exp $
</small>
</body>
</html>
@


1.11
log
@Sync with Steelix CVS
@
text
@d1758 1
a1758 1
$OpenBSD$
@


1.10
log
@Sync with Steelix CVS
@
text
@d10 1
a10 1
<meta name= "copyright"     content= "This document copyright 1998-2007 by OpenBSD.">
d103 1
a103 1
       ,------o-----------o----X                    4.3 Stable
d105 1
a105 1
       |      .    ,------o---------o----X          4.4 Stable
d107 1
a107 1
       |      .    |      .    ,----o----------o--&gt; 4.5 Stable
d109 1
a109 1
       |      .    |      .    |    .    ,-----o--&gt; 4.6 Stable
d112 1
a112 1
 --&gt;4.3Rel-----&gt;4.4Rel-----&gt;4.5Rel-----&gt;4.6Rel----&gt; Current
d137 3
a139 3
no exemplo acima, o ramo <i>4.3-stable</i> chega ao fim com
o <i>4.5-release</i>, e o ramo <i>4.4-stable</i> chega ao fim com
o <i>4.6-release</i> -- releases antigas são tipicamente suportadas
d145 1
a145 1
(ou seja, ir da <i>4.6-release</i> para a <i>4.6-stable</i>).
d233 1
a233 1
Por exemplo, passar da v4.5 para a v4.6, ou passar da snapshot de
d237 1
a237 1
<a href="../upgrade46.html">Guia de Atualização de Versão</a> (ao mudar
d250 1
a250 1
mesma versão da release; por exemplo, 4.6-release para 4.6-stable.
d258 3
a260 3
Desse modo, você pode instalar um sistema (por exemplo, 4.4-release)
pelo CD, fazer poucas vezes a atualização dele para 4.4-stable, e então
fazer a atualização para a versão 4.5-release pelo CD, e fazer a
d262 1
a262 1
a 4.6-release.
d284 2
a285 2
<i>4.6-current</i> (ou snapshot), e então decidir que você está vivendo
muito perigosamente e voltar para a <i>4.6-stable</i>. Você está em
d399 1
a399 1
descrito <a href="../upgrade46.html">aqui</a>.
d479 1
a479 1
    # <b>cvs -d$CVSROOT checkout -rOPENBSD_4_6 -P src</b>
d482 1
a482 1
Isso puxa os arquivos src do ramo OPENBSD_4_6, o qual é também
d489 1
a489 1
    # <b>cvs -d$CVSROOT up -rOPENBSD_4_6 -Pd</b>
d494 1
a494 1
"<tt>-rOPENBSD_4_6</tt>" da linha de comando; ele irá lembrar isso
d512 1
a512 1
    # <b>cvs -d$CVSROOT checkout -rOPENBSD_4_6 -P src ports xenocara</b>
a629 1
<a name="Building"></a>  <!-- Old tag -->
d761 1
a761 1
    <a href="../upgrade46.html">processo de atualização de versão</a> ou
d874 1
a874 1
<a href="../upgrade46.html">atualização de versão</a> de outra máquina,
d1042 1
a1042 1
Se ambas as possibilidades são falsas, você deve parar de usar o
a1176 2
Outra razão comum para fazer um kernel personalizado pode ser para usar
RAIDframe, que é muito grande para permanecer por padrão no kernel.
d1198 1
a1198 1
Um outro jeito de gerar um kernel personalizado é fazer uma cópia do
d1307 1
a1307 1
OpenBSD 4.6 (GENERIC) #58: Thu Jul  9 21:24:42 MDT 2009
d1641 1
a1641 1
Por exemplo, para ver as mudanças entre 4.5 e 4.6, faça um:
d1645 1
a1645 1
    # cvs diff -u -rOPENBSD_4_5 -rOPENBSD_4_6
d1648 1
a1648 1
Para ver as mudanças entre 4.6 e <i>-current</i> ("HEAD"), use:
d1651 1
a1651 1
    # cvs diff -u -rOPENBSD_4_6 -rHEAD
d1691 2
a1692 2
<a href="../upgrade46.html">upgrade46.html</a> (para ir para
4.6-release) ou <a href="../current.html">current.html</a> (para ir para
d1755 2
a1756 2
Originally [OpenBSD: faq5.html,v 1.177 ]<br>
$Translation: faq5.html,v 1.12 2009/11/30 09:29:57 alan Exp $<br>
@


1.9
log
@Sync with Steelix CVS
@
text
@d1310 1
a1310 1
OpenBSD 4.4 (GENERIC) #1021: Tue Aug 12 17:16:55 MDT 2008
d1314 18
a1331 19
ukc&gt; ?
        help                            Command help list
        add         dev                 Add a device
        base        8|10|16             Base on large numbers
        change      devno|dev           Change device
        disable     attr val|devno|dev  Disable device
        enable      attr val|devno|dev  Enable device
        find        devno|dev           Find device
        list                            List configuration
        lines       count               # of lines per page
        show        [attr [val]]        Show attribute
        exit                            Exit, without saving changes
        quit                            Quit, saving current changes
        timezone    [mins [dst]]        Show/change timezone
        nmbclust    [number]            Show/change NMBCLUSTERS
        cachepct    [number]            Show/change BUFCACHEPERCENT
        nkmempg     [number]            Show/change NKMEMPAGES
        shmseg      [number]            Show/change SHMSEG
        shmmaxpgs   [number]            Show/change SHMMAXPGS
d1333 21
a1353 25
  0 audio* at sb0|sb*|gus0|pas0|sp0|ess*|wss0|wss*|ym*|eap*|eso*|sv*|neo*|cmpci*
|clcs*|clct*|auich*|autri*|auvia*|fms*|uaudio*|maestro*|esa*|yds*|emu* flags 0x0
  1 midi* at sb0|sb*|opl*|opl*|opl*|opl*|ym*|mpu*|autri* flags 0x0
  2 nsphy* at aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
|ne0|ne1|ne2|ne*|ne*|ne*|dc*|dc*|rl*|fxp*|fxp*|xl*|xl*|ep0|ep0|ep0|ep*|ep*|ep*|e
p*|ep* phy -1 flags 0x0
  3 nsphyter* at aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|
vr*|ne0|ne1|ne2|ne*|ne*|ne*|dc*|dc*|rl*|fxp*|fxp*|xl*|xl*|ep0|ep0|ep0|ep*|ep*|ep
*|ep*|ep* phy -1 flags 0x0
  4 qsphy* at aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
|ne0|ne1|ne2|ne*|ne*|ne*|dc*|dc*|rl*|fxp*|fxp*|xl*|xl*|ep0|ep0|ep0|ep*|ep*|ep*|e
p*|ep* phy -1 flags 0x0
  5 inphy* at aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
|ne0|ne1|ne2|ne*|ne*|ne*|dc*|dc*|rl*|fxp*|fxp*|xl*|xl*|ep0|ep0|ep0|ep*|ep*|ep*|e
p*|ep* phy -1 flags 0x0
  6 iophy* at aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
|ne0|ne1|ne2|ne*|ne*|ne*|dc*|dc*|rl*|fxp*|fxp*|xl*|xl*|ep0|ep0|ep0|ep*|ep*|ep*|e
p*|ep* phy -1 flags 0x0
  7 eephy* at aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
|ne0|ne1|ne2|ne*|ne*|ne*|dc*|dc*|rl*|fxp*|fxp*|xl*|xl*|ep0|ep0|ep0|ep*|ep*|ep*|e
p*|ep* phy -1 flags 0x0
  8 exphy* at aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
|ne0|ne1|ne2|ne*|ne*|ne*|dc*|dc*|rl*|fxp*|fxp*|xl*|xl*|ep0|ep0|ep0|ep*|ep*|ep*|e
p*|ep* phy -1 flags 0x0
[...snip...]
d1355 8
a1362 8
 93 ep0 disabled
 94 ep* disabled
 95 ep* disabled
261 ep0 disabled
262 ep0 disabled
263 ep* disabled
264 ep* disabled
323 ep* disabled
d1382 6
a1387 4
OpenBSD 4.5 (GENERIC) #1749: Sat Feb 28 14:51:18 MST 2009
    deraadt@@i386.openbsd.org:/usr/src/sys/arch/i386/compile/GENERICProcessing history...
105 wi* disabled
106 wi* disabled
d1758 2
a1759 2
Originally [OpenBSD: faq5.html,v 1.175 ]<br>
$Translation: faq5.html,v 1.11 2009/11/02 09:21:59 alan Exp $<br>
@


1.8
log
@Sync with Steelix CVS
@
text
@a172 13
Aviso: <i>-current</i> muda o tempo todo.
Ela muda de minuto em minuto, e pode mudar várias vezes na hora em que
alguém esteja fazendo o download do código fonte.
Mesmo com o difícil trabalho dos desenvolvedores para assegurar que o
sistema sempre compile e que não exista grandes falhas, é plenamente
possível pegar o código fonte <i>-current</i> e este falhar na
compilação, e cinco minutos depois tudo estar funcionando corretamente.
Há também dias de marcação e grandes mudanças no sistema em que os
desenvolvedores navegam com ferramentas "one-time", o que significa que
atualização baseada em código fonte não é possível. <b>Se você não está
preparado para lidar com isso, fique longe da <i>-current</i>.</b>

<p>
d175 2
a176 2
<i>-current</i> como sistema de produção, e isso é importante para
algumas pessoas identificarem falhas e testar novas funcionalidades. No
d1761 2
a1762 2
Originally [OpenBSD: faq5.html,v 1.174 ]<br>
$Translation: faq5.html,v 1.10 2009/10/21 19:25:53 alan Exp $<br>
@


1.7
log
@Sync with Steelix CVS
@
text
@d103 1
a103 1
       ,------o-----------o----X                    4.2 Stable
d105 1
a105 1
       |      .    ,------o---------o----X          4.3 Stable
d107 1
a107 1
       |      .    |      .    ,----o----------o--&gt; 4.4 Stable
d109 1
a109 1
       |      .    |      .    |    .    ,-----o--&gt; 4.5 Stable
d112 1
a112 1
 --&gt;4.2Rel-----&gt;4.3Rel-----&gt;4.4Rel-----&gt;4.5Rel----&gt; Current
d137 3
a139 3
no exemplo acima, o ramo <i>4.2-stable</i> chega ao fim com
o <i>4.4-release</i>, e o ramo <i>4.3-stable</i> chega ao fim com
o <i>4.5-release</i> -- releases antigas são tipicamente suportadas
d144 2
a145 2
de construir a partir da <i>-release</i> da mesma versão (ou seja, ir
da <i>4.5-release</i> para a <i>4.5-stable</i>).
d246 1
a246 1
Por exemplo, passar da v4.4 para a v4.5, ou passar da snapshot de
d250 1
a250 1
<a href="../upgrade45.html">Guia de Atualização de versão</a> (ao mudar
d263 1
a263 1
mesma versão da release; por exemplo, 4.5-release para 4.5-stable.
d271 3
a273 3
Desse modo, você pode instalar seu sistema (por exemplo, 4.3-release)
pelo CD, fazer poucas vezes a atualização dele para 4.3-stable, e então
fazer a atualização para a versão 4.4-release pelo CD, e fazer a
d275 1
a275 1
a 4.5-release.
d297 2
a298 2
<i>4.5-current</i> (ou snapshot), e então decidir que você está vivendo
muito perigosamente e voltar para a <i>4.5-stable</i>. Você está em
d352 1
a352 1
<li><a href="#BldBinary">Instalação ou Atualização de versão para os
d371 1
a371 1
<h3>5.3.2 - Instalação ou Atualização de versão para os binários mais
d399 1
a399 1
  <td> -release </td> <td> -current </td> <td> Último Snapshot </td>
d403 1
a403 1
  <td> -current antiga </td> <td> -current </td> <td> Último Snapshot </td>
d412 1
a412 1
descrito <a href="../upgrade45.html">aqui</a>.
d492 1
a492 1
    # <b>cvs -d$CVSROOT checkout -rOPENBSD_4_5 -P src</b>
d495 1
a495 1
Isso irá puxar os arquivos src do ramo OPENBSD_4_5, o qual é também
d502 1
a502 1
    # <b>cvs -d$CVSROOT up -rOPENBSD_4_5 -Pd</b>
d507 1
a507 1
"<tt>-rOPENBSD_4_5</tt>" da linha de comando; ele irá lembrar isso
d525 1
a525 1
    # <b>cvs -d$CVSROOT checkout -rOPENBSD_4_5 -P src ports xenocara</b>
d775 1
a775 1
    <a href="../upgrade45.html">processo de atualização de versão</a> ou
d888 1
a888 1
<a href="../upgrade45.html">atualização de versão</a> de outra máquina,
d1660 1
a1660 1
Por exemplo, para ver as mudanças entre 4.4 e 4.5, faça um:
d1664 1
a1664 1
    # cvs diff -u -rOPENBSD_4_3 -rOPENBSD_4_5
d1667 1
a1667 1
Para ver as mudanças entre 4.5 e <i>-current</i> ("HEAD"), use:
d1670 1
a1670 1
    # cvs diff -u -rOPENBSD_4_5 -rHEAD
d1710 2
a1711 2
<a href="../upgrade45.html">upgrade45.html</a> (para ir para
4.5-release) ou <a href="../current.html">current.html</a> (para ir para
d1774 2
a1775 2
Originally [OpenBSD: faq5.html,v 1.173 ]<br>
$Translation: faq5.html,v 1.9 2009/10/13 19:21:12 alan Exp $<br>
@


1.6
log
@Sync with Steelix CVS
@
text
@d1186 1
a1186 1
ISA multi-port
d1195 1
a1195 1
um arquivo "wrapper" que inclui o kernel padrão GENERIC e quaisquer
d1197 1
a1197 1
Nesse caso, nosso arquivo "wrapper" se parece com isto:
d1207 1
a1207 1
A vantagem de usar esse arquivo "wrapper" é que qualquer mudança
d1775 1
a1775 1
$Translation: faq5.html,v 1.8 2009/09/09 11:19:45 alan Exp $<br>
@


1.5
log
@Sync with Steelix CVS
@
text
@d1391 4
a1394 2
UCK e o dispositivo wi(4) foi desabilitado. Desde que as mudanças feitas
com boot -c NÃO são permanentes, essas mudanças precisam ser gravadas.
d1774 2
a1775 2
Originally [OpenBSD: faq5.html,v 1.172 ]<br>
$Translation: faq5.html,v 1.7 2009/09/01 09:41:06 alan Exp $<br>
@


1.4
log
@Sync with Steelix CVS
@
text
@d819 4
a822 3
O processo de criar uma release envolve utilitários que não estão no
sistema base do OpenBSD: o crunch e o crunchgen(1), que são usados para
criar um único arquivo executável feito de vários binários individuais.
a827 13
<i>Esses utilitários precisam ser compilados antes que o processo de
criação da release seja iniciado.</i>
Esses programas precisam ser compilados e instalados somente uma vez,
mas como as pessoas frequentemente esquecem esse passo, e como esses
programas compilam rapidamente, algumas pessoas optam por compilar
crunch e crunchgen todas as vezes como parte do script que elas usam
para fazer uma release.

<!-- XXX change for rel -->
<p>
<i><b>NOTA:</b> Para a versão -current e a futura versão 4.5, crunch e
crunchgen fazem parte do sistema base; pule o passo da compilação
separada a seguir.</i>
d835 1
a835 7
Primeiramente, se isso não foi feito nessa máquina, compile o crunch e
o crunchgen:
<blockquote><pre>
# <b>cd /usr/src/distrib/crunch && make obj depend all install</b>
</pre></blockquote>

Agora, nós definimos nossas variáveis de ambiente DESTDIR e RELEASEDIR:
d1772 2
a1773 2
Originally [OpenBSD: faq5.html,v 1.171 ]<br>
$Translation: faq5.html,v 1.6 2009/08/26 13:02:34 alan Exp $<br>
@


1.3
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>5 - Construindo o Sistema a partir do Código Fonte</title>
d27 1
a27 1
<h1><font color="#e00000">5 - Construindo o Sistema a partir do Código Fonte</font></h1>
d34 3
a36 4
<li><a href="#WhySrc">5.2 - Por que eu preciso compilar meu sistema
    a partir do código fonte?</a>
<li><a href="#Bld">5.3 - Compilação do OpenBSD a partir do código
    fonte</a>
d39 2
a40 2
  <li><a href="#BldBinary">5.3.2 - Instalar ou atualizar a partir dos
      binários mais recentes</a>
d43 1
a43 1
  <li><a href="#BldUserland">5.3.5 - Compilação da "userland"</a>
d47 7
a53 5
<li><a href="#Why">5.6 - Por que eu preciso de um kernel customizado?</a>
<li><a href="#Options">5.7 - Compilação de um kernel customizado</a>
<li><a href="#BootConfig">5.8 - Configuração em tempo de boot</a>
<li><a href="#config">5.9 - Usando o config(8) para alterar seu kernel</a>
<li><a href="#VerboseBoot">5.10 - Obtendo mais mensagens durante o boot</a>
d57 1
a57 1
    <li><a href="#sig11">5.11.1 - A compilação pára com um erro
d62 2
a63 2
    <li><a href="#ProbObj">5.11.4 - Oops! Eu esqueci de criar o
        diretório <tt>/usr/obj</tt> antes de começar!</a>
d70 2
a71 2
    <li><a href="#NoSnaps">5.11.8 - Eu não vejo nenhuma snapshot no site
        FTP. Para onde elas foram?</a>
d91 4
a94 3
<li><b>-release:</b> A versão do OpenBSD lançada a cada seis meses em CD.
<li><b>-stable:</b>  Release, mais patches considerados críticos para
    a segurança e estabilidade.
d96 1
a96 1
    feito agora e, eventualmente, ele irá se tornar a próxima release.
d120 1
a120 1
eventualmente, ela se tornará a nova <i>-release</i> do OpenBSD.
d122 1
a122 1
<i>-current</i> é marcada, e se torna <i>-release</i>: um ponto de
d129 2
a130 2
<i>-Stable</i> é baseada na <i>-release</i>,
e é um ramo do caminho de desenvolvimento principal do OpenBSD.
d132 3
a134 3
são portadas (integradas) para o ramo <i>-stable</i>;
por causa disso, <i>-stable</i> é também conhecida como o
"<i>ramo corrigido</i>" (patch branch).
d136 1
a136 1
erros incorporadas ao ramo <i>-stable</i>. Você também notará que
d140 6
a145 6
durante "duas releases" no máximo. Isso toma recursos e tempo para
suportar versões antigas, enquanto nós gostamos de oferecer suporte
para releases antigas, nós preferencialmente nos focamos em novas
funcionalidades. O ramo <i>-stable</i> é, pelo seu design, muito fácil
de construir a partir da <i>-release</i> da mesma versão
(ou seja, indo da <i>4.5-release</i> para <i>4.5-stable</i>).
d148 4
a151 5
O ramo <i>-stable</i> é a <i>-release</i> mais os patches encontrados na
<a href="../../errata.html">página errata</a>.
A atividade da <i>-stable</i> é a mesma em que a <i>-release</i> está
baseada.
Se as
d158 7
a164 7
É útil apontar que o nome "<i>-stable</i>" não significa que
<i>-current</i> é instável.
Particularmente, <i>-current</i> está mudando e desenvolvendo-se,
enquanto a atividade e APIs da <i>-stable</i> não estão sendo mudadas,
assim você não tem que reaprender seu sistema ou mudar quaisquer
arquivos de configuração, ou ter algum problema adicionando aplicações
no seu sistema.
d168 2
a169 2
objetivo é que a <i>-current</i> deve ser mais estável, mais segura,
e naturalmente, ter mais funcionalidades que a <i>-stable</i>.
d174 2
a175 2
Ela muda de minuto em minuto, e pode mudar várias vezes na hora que
alguém esteja baixando o código fonte.
d177 1
a177 1
sistema sempre compile e que não exista grandes erros, é plenamente
d181 17
a197 16
desenvolvedores navegam com ferramentas "one-time", o que significa
que atualização baseada em código fonte não é possível. <b>Se você não
está preparado para lidar com isso, fique longe da <i>-current</i>.</b>

<p>
A maioria dos usuários devem rodar tanto <i>-stable</i> quanto
<i>-release</i>. Isso quer dizer, muitas pessoas rodam <i>-current</i>
como sistema de produção, e isso é importante para algumas pessoas
identificarem bugs e testar novas funcionalidades. No entanto, se você
não sabe como descrever corretamente, diagnosticar e lidar com um
problema, não diga para você mesmo (ou qualquer pessoa) que você está
"ajudando o projeto" por rodar a <i>-current</i>. "Isto não funciona!"
não é um <a href="../../report.html#bugtypes">relato de erro útil</a>.
"As mudanças recentes no driver pciide quebraram a compatibilidade
com minha interface IDE baseada no Slugchip, segue o dmesg do sistema
funcionando e quebrado..." pode ser um relato útil.
d200 1
a200 1
Às vezes usuários "normais" querem viver no limite e rodar
d202 2
a203 2
que não é suportado pela versão <i>-release</i> (e assim, não
<i>-stable</i>), ou deseja usar uma nova funcionalidade da
d211 7
a217 8
disponibilizadas nos
<a href="../../ftp.html">sites FTP</a>. Como o nome indica, estas são
compilações de qualquer código fonte que estava na árvore no momento que
o construtor pegou uma cópia do código fonte para uma plataforma em
particular.
Lembre-se, em algumas plataformas, pode levar DIAS antes que uma
snapshot seja terminada e colocada para distribuição. Não há promessa
de que as snapshots são completamente funcionais, ou mesmo que instalam.
d220 1
a220 1
diariamente, outras em menor frequência. Se você deseja rodar a
d222 3
a224 2
precisa, e atualizar para uma snapshot é um ponto de começo requerido
antes de tentar compilar a <i>-current</i> a partir do código fonte.
d230 6
a235 6
são criadas quando desejado, quando tem tempo, e quando os recursos
estão disponíveis. Em plataformas lentas, pode levar uma semana ou mais
para criar uma snapshot. A inclusão de marcas ou etiquetas na árvore
de fontes para cada snapshot não seria prático.
Terceiro, snapshots frequentemente contém código fonte experimental que
ainda não foi incluído na árvore.
d238 1
a238 1
Você irá ver, frequentemente, referências de "upgrading" e "updating"
d244 5
a248 5
<b>"Upgrading"</b> é o processo de instalar uma nova versão do OpenBSD,
com novas funcionalidades.
Por exemplo, passando da v4.4 para a v4.5, ou passando da snapshot de
12 de Junho para a snapshot de 20 de Junho.
No upgrading, você irá tipicamente ter que consultar tanto
d250 3
a252 3
<a href="../upgrade45.html">Guia de Upgrade</a> (quando muda a release)
para fazer as mudanças requeridas para rodar a versão atualizada
do OpenBSD.
d255 9
a263 8
<b>"Updating"</b> é o processo de aplicar patches em um sistema para
melhorar o funcionamento SEM mudar as funcionalidades básicas ou a
compatibilidade binária. Isso é tipicamente feito utilizando o
<a href="faq10.html#Patches">processo de correção de código fonte</a> ou
o documento <a href="../../pt/stable.html">Seguindo a -stable</a>.
Quando você faz "update" no seu sistema, ele vai de <i>-release</i>
para <i>-stable</i> (ou <i>-release</i> corrigida) da mesma versão
da release, por exemplo, 4.5-release para 4.5-stable.
d266 1
a266 1
O processo de update é tipicamente indolor, nem arquivos do
d268 1
a268 1
ser mudadas.
d272 4
a275 3
pelo CD, fazer poucas vezes o update dele para 4.3-stable, e então
fazer o upgrade para a versão 4.4-release pelo CD, e fazer o update
desta poucas vezes antes do novo upgrade para a 4.5-release.
d278 1
a278 1
É importante entender que o OpenBSD é um Sistema Operacional, cuja a
d280 4
a283 4
de utilidades integradas. Você precisa ter certeza que seu kernel,
"userland" (as utilidades e arquivos suportados) e árvore de
<a href="faq15.html#Ports"><tt>ports</tt></a> estão todos sincronizados,
ou coisas desagradáveis ocorrerão. Dito de outra forma
d285 1
a285 1
rodar novos <tt>ports</tt> em um sistema que já tenha um mês, ou
d287 5
a291 4
que ele trabalhe com a userland da <i>-release</i>. Sim, isso significa
que você precisa fazer upgrade do seu sistema se você quer rodar novos
programas que foram adicionados hoje à árvore de ports. Desculpa,
mas repetindo, o OpenBSD dispõe de alguns recursos limitados.
d294 3
a296 3
Outro fato a ser compreendido é que o processo de upgrade é suportado
em <b>somente uma direção: do antigo para o novo</b>, e da
<i>-stable</i> para a <i>-current</i>. Você não pode rodar a
d298 1
a298 1
muito perigosamente, e voltar para a <i>4.5-stable</i>. Você está em
d300 2
a301 2
suportada de recomeçar seu sistema do zero, não espere assistência
do time de desenvolvimento do OpenBSD.
d309 1
a309 1
Atualmente, há muitas chances disso não ser necessário.
d314 2
a315 2
<li>Compilar seu próprio sistema como um modo de atualização não é
    suportado.
d318 1
a318 1
    seu sistema do que melhorando ele.
d321 1
a321 1
Algumas razões pelas quais você atualmente deseja ou precisa compilar
d325 3
a327 3
<li>A compilação do sistema coloca uma carga de stress no computador,
    isso pode ser um jeito de assegurar que o sistema que você irá rodar
    o OpenBSD, ou adquirir, está em boas condições.
d329 1
a329 1
<li>Você deseja fazer uma versão altamente customizada do OpenBSD para
d334 3
a336 3
O time do OpenBSD disponibiliza novas snapshots baseadas no código fonte
da <i>-current</i> para todas as plataformas.
Isso normalmente será tudo que você precisa para rodar a
d352 2
a353 2
<li><a href="#BldBinary">Instalação ou Atualização para os binários
    mais recentes.</a>
d357 2
a358 1
<li><a href="#BldUserland">Compilação da "userland" ("make build").</a>
d361 3
a363 2
Existem etapas suplementares que alguns usuários podem querer realizar,
dependendo do propósito da compilação e da presença ou não do X:
d371 2
a372 1
<h3>5.3.2 - Instalação ou Atualização para os binários mais recentes</h3>
d384 1
a384 1
  <td><b>Binary upgrade para</b></td> <td><b>então ...</b></td>
d413 2
a414 2
Você deve fazer o processo completo de atualização, incluindo criar
quaisquer usuários ou outras mudanças necessárias no diretório
d435 1
a435 1
Se você tem múltiplas máquinas, e deseja manter as árvores de código
d443 2
a444 2
fonte, depois disso, você então mantém a árvore rodando "updates", para
puxar arquivos atualizados para a sua árvore local.
d458 1
a458 1
<b>anoncvs@@anoncvs.example.org:/cvs</b>.
d470 1
a470 1
    # <b>export CVSROOT=anoncvs@@anoncvs.example.org:/cvs</b>
d478 1
a478 1
    # <b>export CVSROOT=anoncvs@@anoncvs.example.org:/cvs</b>
d486 3
a488 3
Se você deseja pegar um "branch" alternativo da árvore, tal como o
ramo <i>-stable</i>, você deve usar o modificador "<tt>-r</tt>"
em seu checkout:
d491 1
a491 1
    # <b>export CVSROOT=anoncvs@@anoncvs.example.org:/cvs</b>
d501 1
a501 1
    # <b>export CVSROOT=anoncvs@@anoncvs.example.org:/cvs</b>
d505 4
a508 4
Atualmente, o CVS é bom o bastante para afixar uma "Tag" no sistema de
arquivos checado, assim você não tem que lembrar a parte
"<tt>-rOPENBSD_4_5</tt>" da linha de comando, ele irá lembrar isso
até que você explicitamente limpe ou configure uma nova tag usando
d519 3
a521 2
árvores que você usar devem ser checadas e atualizadas na mesma vez.
Você pode juntar os checkouts em uma linha (<i>-stable</i> é mostrada):
d523 1
a523 1
    # <b>export CVSROOT=anoncvs@@anoncvs.example.org:/cvs</b>
d533 2
a534 2
Esteja atento sobre qual árvore você pegou -- você pode tentar compilar
a <i>-current</i> quando o objetivo é a <i>-stable</i>.
d541 1
a541 1
Isso é particularmente verdadeiro se você está rodando a
d560 4
a563 4
utilidades da "userland", exceto a árvore de ports e os código fonte do
X11. Geralmente, no entanto, você irá normalmente querer ambos
instalados. Assumindo que os arquivos baixados, <tt>src.tar.gz</tt> e
<tt>sys.tar.gz</tt>, estão em <tt>/usr</tt>:
d575 3
a577 3
Note que todas as pessoas vão descompactar todos os conjuntos de
arquivo, mas como o sistema precisa ser mantido em sincronia, você irá
geralmente ter a necessidade de configurar todas as partes da árvore.
d587 1
a587 1
Com o passar do anos, diretórios foram criados e deletados na árvore
d608 1
a608 1
outra sobrescrevê-la (ou seja, cvs(1) terá um erro sem ela), apesar de
d613 1
a613 1
É bastante útil usar um <tt>.cvsrc</tt> no seu diretório home para
d618 1
a618 1
    cvs -q -danoncvs@@anoncvs.example.org:/cvs
d624 2
a625 2
Esse arquivo fará o cvs(i) usar o servidor
<tt>anoncvs@@anoncvs.example.org:/cvs</tt>, suprimir saída desnecessária
d629 1
a629 1
"<tt>-u</tt>", e um "cvs checkout" irá usar a opção "<tt>-P</tt>".
d631 1
a631 1
existe, ou tentar rodar comandos que você tem usado em uma máquina
d638 2
a639 2
para a partição que a árvore de código fonte está, vai melhorar
significantemente o desempenho.
d648 2
a649 2
<i>Não</i> considere compilar um kernel customizado se você não dominou
o processo de compilação padrão.
d656 1
a656 1
plataformas, outras são específicas de um processador ou uma
d662 4
a665 4
processador, mas as máquinas em que eles são baseados são diferentes,
e assim requer um kernel diferente (há muito mais coisas sobre o
design do computador do que seu processador!).
No entanto, partes do kernel são comuns, essas partes são mantidas
d669 1
a669 1
você deverá trabalhar exclusivamente com os diretórios da
d682 1
a682 2
Para este exemplo, nós assumimos que você está usando a plataforma
i386:
d702 2
a703 2
Neste ponto, reinicie sua máquina para ativar esse novo kernel.
Note que o novo kernel deverá estar rodando antes do próximo passo,
d705 5
a709 5
<a href="#BldBinary">acima</a> sobre upgrade para o mais recente
snapshot disponível, isso não é tão importante.
Algumas vezes, no entanto, mudanças nas APIs, e o kernel antigo estará
impossibilitado de rodar novas aplicações, mas o novo kernel
geralmente irá suportar as antigas.
d718 1
a718 1
$ <b>cd <i>/qualquerlugar</i></b>
d730 1
a730 1
<h3>5.3.5 - Compilação da "userland"</h3>
d738 2
a739 1
<li>Limpe seu diretório <tt>/usr/obj</tt> e refaça os links simbólicos:
d762 2
a763 2
Isso compila e instala todos os utilitários "userland" na ordem
apropriada.
d766 1
a766 1
pode levar muitos dias.
d772 1
a772 1
    <tt>/dev</tt> e <tt>/etc</tt>, com as mudanças listadas em
d775 2
a776 2
    <a href="../upgrade45.html">processo de upgrade</a> ou uma
    instalação dos <a href="#BldBinary">binários correspondentes</a>,
d785 1
a785 1
Uma release é o conjunto de arquivos completo que você pode usar para
d787 2
a788 2
Se você tem somente um computador rodando OpenBSD, você realmente não
tem nenhuma razão para fazer uma release; o processo de compilação
d801 3
a803 3
como seu <tt>/usr/obj</tt>, para um pouco de desempenho
extra no processo de compilação: você não vai querer reiniciar seu
computador entre os passos de "build" e "release"!
d809 4
a812 4
serão copiados para seus lugares apropriados dentro do DESTDIR.
Eles então serão compactados com o tar(1) e colocados em RELEASEDIR.
No fim do processo, RELEASEDIR guardará a release completa do OpenBSD.
O processo de criar uma release também usará o <tt>/mnt</tt>, então
d814 1
a814 1
release está rodando. Para propósitos de exemplo, nós usaremos o
d820 11
a830 11
sistema base do OpenBSD: o crunch e crunchgen(1), que são usados para
criar um único arquivo executável feito de muitos binários individuais.
O nome desse único arquivo executável é invocado para determinar qual
componente binário está rodando.
Esse é o jeito que um número de arquivos de programas individuais são
comprimidos em um kernel ramdisk existente em disquetes de boot e
outras mídias de inicialização.
<i>Esses utilitários precisam ser compilados e instalados antes que
o processo de criação da release for iniciado.</i>
A única necessidade é de serem compilados e instalados primeiro, mas
como as pessoas frequentemente esquecem esse passo, e como esses
d832 2
a833 2
crunch e crunchgen todas as vezes como parte de um script que elas
usam para fazer uma release.
d845 1
a845 1
<h3>Fazendo uma release</h3>
d847 1
a847 1
Primeiro, se isso não foi feito nessa máquina, compile o crunch e
d853 1
a853 2
Agora, nós definimos nossas variáveis de ambiente DESTDIR e
RELEASEDIR:
d866 4
a869 3
processo de fazer uma release, no entanto, se existem mudanças nos
arquivos de release ou seus nomes, arquivos velhos serão conservados.
Você pode desejar também apagar esse diretório antes de começar.
d878 3
a880 4
Depois que a release está pronta, é uma boa idéia checá-la para
ter certeza que os arquivos tar estão combinando com o que está
no DESTDIR.
A saída desse passo deve ser mínima.
d887 3
a889 3
Você agora tem os conjuntos de arquivo completos e checados em
RELEASEDIR. Esses arquivos podem agora ser usados para instalar
ou atualizar o OpenBSD em outras máquinas.
d897 1
a897 1
uso em scripts de instalação ou upgrade, você também precisará
d906 4
a909 4
<a href="../upgrade45.html">atualização</a> de outra máquina, ou se for
atualizar uma máquina para uma nova <i>-stable</i>, simplesmente
<a href="faq4.html#AddFileSet">descompacte</a> os arquivos tar no
diretório raiz da máquina de destino.
d930 1
a930 1
<h3>Baixando o código fonte</h3>
d937 1
a937 1
$ <b>cvs -qdanoncvs@@anoncvs.example.org:/cvs checkout -P xenocara</b>
d940 1
a940 1
<h3>Compilando a Xenocara</h3>
d956 1
a956 1
<h3>Fazendo uma release do X</h3>
d961 1
a961 1
principal, mas DESTDIR será apagado e refeito nesse processo.
d963 1
a963 1
separado pode ser "seguro".
d979 1
a979 1
Quando esse processo se completar, você terá um conjunto de arquivos
d984 1
a984 1
<h2>5.6 - Por que eu preciso de um kernel customizado?</h2>
d987 1
a987 1
Atualmente, você provavelmente não precisa.
d990 1
a990 1
Um kernel customizado é uma compilação com um arquivo de configuração
d992 1
a992 1
Um kernel customizado pode ser baseado no código fonte da
d996 1
a996 1
do time OpenBSD, se compilar seu próprio kernel customizado, você
d1001 8
a1008 8
desenhado para ser útil para a maioria das pessoas.
Muitas pessoas tem quebrado seus sistemas por tentar otimizar o
kernel ao invés de melhorar o funcionamento.
Existem algumas pessoas que acreditam que você precisa customizar
seu kernel e sistema para um desempenho otimizado, mas esse não é
o caso do OpenBSD. Somente os usuários mais avançados e com
conhecimentos nas aplicações exigentes, precisam se preocupar
com um kernel customizado ou o sistema todo.
d1012 1
a1012 1
customizado:
d1024 1
a1024 1
      por que isso não funciona se alguma coisa dar errado.
d1028 2
a1029 1
Algumas razões pelas quais você não deve compilar um kernel customizado:
d1031 1
a1031 1
  <li>Você não precisa fazer, normalmente.
d1033 1
a1033 1
  <li>Você está comumente fazendo uma máquina menos confiável.
d1038 3
a1040 2
  <li>Usuários e desenvolvedores vão rir se você quebrar seu sistema.
  <li>Opções customizadas do compilador normalmente fazem um bom
d1047 8
a1054 8
Remover drivers de dispositivos pode acelerar o processo de boot
no seu sistema, mas pode complicar a recuperação se você tiver um
problema de hardware, além de ser, frequentemente, feito de forma
errada.
Remover drivers de dispositivos <i>não vai</i> fazer seu sistema rodar
mais rápido em qualquer quantidade notável, apesar de produzir um
kernel pequeno.
Remover checagem de depuração e erro pode resultar em uma ganho
d1060 2
a1061 2
Novamente, desenvolvedores irão normalmente ignorar relatos de erro
sobre kernels customizados, até que o problema seja reproduzido em
d1067 2
a1068 2
<h2>5.7 - Compilação de um kernel customizado</h2>
É assumido que você leu o texto <a href="#Why">acima</a>, e realmente
d1072 1
a1072 1
<a href="#BootConfig">Configuração em tempo de boot (UKC>)</a>
d1085 2
a1086 2
para criar kernels com focos diferentes, por exemplo, para
utilização mínima de RAM, estações de trabalho "diskless", etc.
d1095 1
a1095 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=make&amp;sektion=1">Makefile</a>,
d1100 2
a1101 2
na sua configuração do kernel para ativar certas características do
mesmo. Isso permite que você tenha exatamente o suporte que você quer,
d1103 2
a1104 2
que permitem que você customize seu kernel. Aqui nós vamos ver somente
algumas delas, aquelas que são de uso mais comum. Verifique a página
d1107 3
a1109 3
para uma lista completa de opções, e como esta muda de tempos em tempos,
você deve ter certeza que você está usando a página de manual da mesma
versão do OpenBSD que você está compilando. Você também pode checar
d1115 1
a1115 1
tenha uma razão para isso! Não edite o arquivo de configuração
d1117 1
a1117 1
A única configuração do kernel que é suportada pelo time do OpenBSD
d1120 8
a1127 8
e <tt>/usr/src/sys/conf/GENERIC</tt> <i>são enviadas pelo time do
OpenBSD</i> (ou seja, NÃO editadas). Relatar um problema em um kernel
customizado vai quase sempre resultar em você ter que tentar
reproduzir o problema com um kernel GENERIC. Nem todas as opções são
compatíveis entre elas, e muitas opções são requeridas para um
sistema trabalhar. Não há garantia que apenas porque você conseguiu
um kernel compilado e customizado, ele irá funcionar.
Não há garantia que um kernel que pode ser "config(8)urado" pode
d1134 8
a1141 8
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/alpha/conf/">arquivos de configuração do kernel alpha</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/i386/conf/">arquivos de configuração do kernel i386</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/macppc/conf/">arquivos de configuração do kernel macppc</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/sparc/conf/">arquivos de configuração do kernel sparc</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/sparc64/conf/">arquivos de configuração do kernel sparc64</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/vax/conf/">arquivos de configuração do kernel vax</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/hppa/conf/">arquivos de configuração do kernel hppa</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/">Outras arquiteturas</a>
d1172 1
a1172 1
Opções no kernel OpenBSD são traduzidas em opções de preprocessador
d1175 1
a1175 1
<tt>#define DEBUG</tt> nos código fonte do kernel.
d1178 1
a1178 1
Algumas vezes, você pode desejar desabilitar uma opção que está
d1183 1
a1183 1
depurador interno do kernel (<i>não recomendado!</i>), você deverá
d1190 1
a1190 1
acima, desativa ela.
d1193 1
a1193 1
Novamente, por favor veja
d1195 1
a1195 1
para mais informação sobre as especificações dessas opções. Também note
d1201 1
a1201 1
<h3>Compilando um kernel customizado</h3>
d1209 1
a1209 1
Outra razão comum para fazer um kernel customizado pode ser para usar
d1211 1
a1211 1
Existem dois jeitos simples para fazer um kernel customizado: copiar
d1215 1
a1215 1
Nesse caso, nosso arquivo wrapper se parece com isto:
d1228 2
a1229 2
A desvantagem é que não se pode remover dispositivos (apesar de que,
essa é uma idéia ruim, de qualquer jeito).
d1232 3
a1234 3
Um outro jeito de gerar um kernel customizado é fazer uma cópia do
<tt>GENERIC</tt> padrão, dando a ele um outro nome, e editando-o
quanto for necessário.
d1240 1
a1240 1
Em ambas as ocasiões, depois de fazer seu arquivo customizado de
d1246 1
a1246 1
Instruções completas para criar seu próprio kernel customizado estão
d1253 1
a1253 1
<h2>5.8 - Configuração em tempo de boot</h2>
d1257 1
a1257 1
receba a notícia que o kernel achou seu dispositivo, mas talvez no
d1260 6
a1265 6
em tempo de boot do OpenBSD. Isso somente irá corrigir seu problema
uma vez. Se você reiniciar, você terá que repetir esse procedimento.
Assim, isso é somente uma correção temporária, e você deve corrigir
o problema usando o <a href="#config">config(8)</a>. Seu kernel, no
entanto, precisa da <strong>option BOOT_CONFIG</strong>; o kernel
GENERIC possui essa opção.
d1268 1
a1268 1
Uma grande parte deste documento pode ser encontrado na página de manual
d1272 2
a1273 2
Para iniciar no UKC (User Kernel Config), use a opção -c no momento do
boot.
d1280 1
a1280 1
um prompt UKC. A partir daí você pode dar comandos diretamente ao
d1298 1
a1298 1
<li><tt>help</tt> - Rápido sumário desses comandos
d1302 1
a1302 1
    com um atributo e um valor especificado opcionalmente
d1309 2
a1310 2
do kernel, como descrito em <a href="#config">Usando o config(8) para
alterar seu kernel</a>.
d1315 1
a1315 1
<h2>5.9 - Usando o config(8) para alterar seu kernel</h2>
d1320 6
a1325 6
kernel. A opção <b>-e</b> permite que você entre na configuração UKC
em um sistema em funcionamento. Essas mudanças terão efeito após a
próxima reinicialização. A flag <b>-u</b> testa para ver se quaisquer
mudanças foram feitas no sistema em funcionamento durante o boot,
significando que você usou <b>boot -c</b> para entrar na configuração
UKC enquanto seu sistema carregava.
d1329 1
a1329 1
ep* no kernel. Por razões de segurança você deve usar a opção <b>-o</b>
d1331 1
a1331 1
<strong>config -e -o bsd.new /bsd</strong> gravará as mudanças em
d1405 4
a1408 4
e não serão testados. Em algumas situações onde você tem usado o
UKC durante o boot, via <b>boot -c</b>, você precisará dessas mudanças
escritas permanentemente. Para fazer isso, você deve usar a opção
<b>-u</b>. No exemplo seguinte, o computador foi inicializado em
d1412 1
a1412 1
novo arquivo binário do kernel chamado bsd.new.
d1426 1
a1426 1
<h2>5.10 - Obtendo mais mensagens durante o boot</h2>
d1430 3
a1432 3
disquete de boot não inicia e precisa obter mais informação,
simplesmente reinicie. Quando você entrar no prompt
&quot;boot&gt;&quot;, inicie com boot -c. Isso levará você ao
d1451 2
a1452 2
por não seguir cuidadosamente as direções mostradas acima.
Existem, ocasionalmente, problemas reais com a compilação
d1461 4
a1464 4
    apropriado</a>, incluindo tentativa de upgrade a partir do código
    fonte ou pensando que uma snapshot de uma semana é "próximo o
    bastante".
<li><a href="#BldGetSrc">Fazendo o download</a> do ramo errado da
d1466 2
a1467 2
<li>Não seguindo o <a href="faq5.html">processo</a>.
<li>Tentando <a href="#Why">customizar</a> ou "otimizar" seu sistema.
d1471 1
a1471 1
de qualquer forma:
d1474 1
a1474 1
<h3>5.11.1 - A compilação pára com um erro "Signal 11"</h3>
d1478 2
a1479 2
uma tarefa que precisa mais do hardware que outras coisas, fazendo
intensivo uso da CPU, disco e memória. Como resultado, se você possui
d1483 3
a1485 3
problemas de memória, mas também pode ser CPU, placa mãe, ou várias
origens. Seu sistema pode atualmente ser muito estável, mas incapaz
de compilar programas.
d1489 4
a1492 4
estão causando problemas, os problemas podem se manifestar de outras
formas no futuro. Se você tem um hardware onde você realmente deseja
usar e não te causa outro problema, simplesmente instale uma snapshot
ou uma release.
d1512 1
a1512 1
    removidos na medida que o OpenBSD evolui.
d1515 2
a1516 2
sua compilação.</b> Não é suportado a compilação da árvore sem um
diretório <tt>/usr/obj</tt>.
d1519 1
a1519 1
É importante seguir cuidadosamente as instruções quando
d1534 1
a1534 1
<h3>5.11.4 - Oops! Eu esqueci de criar o diretório <tt>/usr/obj</tt>
d1537 2
a1538 2
Fazendo um "make build" antes de um "make obj", você terminará com os
arquivos objetos espalhados em seu diretório <tt>/usr/src</tt>.
d1565 1
a1565 1
Algumas vezes, você pode desejar não compilar certas partes da sua
d1590 1
a1590 1
<h3>5.11.8 - Eu não vejo nenhuma snapshot no site FTP. Para onde
d1618 6
a1623 6
O upgrade de um compilador é um pouco como o problema da galinha e do
ovo, mudanças no compilador da árvore requer uma atenção extra.
Você tem que compilar o compilador duas vezes -- o primeiro processo
de compilação produz um compilador que gera novo código, mas roda com
o código gerado pelo compilador antigo, o segundo processo de
compilação produz um compilador completamente novo.
d1635 1
a1635 1
    <b>Procedimento de compilação comum para v3.3.5 ou v2.95.3</b>
d1648 1
a1648 1
E então rode um <a href="#BldUserland">make build</a> normalmente.
d1658 1
a1658 1
Upgrades não são exceções.
d1692 5
a1696 5
no entanto ele é instalado como parte de um <a href="#BldBinary">upgrade
binário</a>.
Como regra geral, é uma boa idéia copiar (se necessário) e rodar esse
script a partir da árvore de código fonte quando estiver fazendo um
upgrade:
d1716 1
a1716 1
    <tt>/etc/weekly</tt>, <tt>/etc/monthly</tt>, e <tt>/etc/security</tt>
d1739 3
a1741 3
Também, a posse da informação para as porções do sistema de arquivos
pode mudar. Um jeito fácil de assegurar que sua hierarquia está
em dia é usar o utilitário
d1745 1
a1745 1
Primeiro, baixe o código fonte mais recente, então faça o seguinte:
d1755 1
a1755 1
Sua hierarquia de arquivos deve estar agora em dia.
d1770 5
a1774 5
plataforma onde a compilação será usada, também conhecida como
"native building".
Sem a compilação nativa, é muito mais difícil ter certeza que as
várias plataformas estão atualmente rodando estáveis, e não apenas
bootando.
d1791 1
a1791 1
$Translation: faq5.html,v 1.5 2009/05/12 00:31:16 alan Exp $<br>
@


1.2
log
@Sync with Steelix CVS -- we are back to normal operation!
@
text
@d4 1
a4 1
<title>5 - Construindo o Sistema a partir do Código</title>
d27 1
a27 1
<h1><font color="#e00000">5 - Construindo o Sistema a partir do Código</font></h1>
d35 3
a37 2
    a partir do código?</a>
<li><a href="#Bld">5.3 - Compilação do OpenBSD a partir do código</a>
d72 1
a72 1
        do compilador (gcc)?</a>
d74 1
a74 1
        atualizar /etc, /var, e /dev?</a>
d101 1
a101 1
       ,------o-----------o----X                    4.1 Stable
d103 1
a103 1
       |      .    ,------o---------o----X          4.2 Stable
d105 1
a105 1
       |      .    |      .    ,----o----------o--&gt; 4.3 Stable
d107 1
a107 1
       |      .    |      .    |    .    ,-----o--&gt; 4.4 Stable
d110 1
a110 1
 --&gt;4.1Rel-----&gt;4.2Rel-----&gt;4.3Rel-----&gt;4.4Rel----&gt; Current
d112 1
a112 1
          Time ---&gt;
d121 1
a121 1
congelamento na história da árvore de código.
d135 3
a137 3
no exemplo acima, o ramo <i>4.1-stable</i> chega ao fim com
o <i>4.3-release</i>, e o ramo <i>4.2-stable</i> chega ao fim com
o <i>4.4-release</i> -- releases antigas são tipicamente suportadas
d143 1
a143 1
(i.e., indo da <i>4.4-release</i> para <i>4.4-stable</i>).
d174 1
a174 1
alguém esteja baixando o código.
d177 2
a178 2
possível pegar o código <i>-current</i> e este falhar na compilação,
e cinco minutos depois tudo estar funcionando corretamente.
d181 2
a182 2
que atualização baseada em código não é possível. <b>Se você não está
preparado para lidar com isso, fique longe da <i>-current</i>.</b>
d211 3
a213 2
compilações de qualquer código que estava na árvore no momento que o
construtor pegou uma cópia do código para uma plataforma em particular.
d222 1
a222 1
antes de tentar compilar a <i>-current</i> a partir do código.
d226 1
a226 1
do código usado para compilar uma snapshot. A resposta é não.
d232 1
a232 1
Terceiro, snapshots frequentemente contém código experimental que
d244 1
a244 1
Por exemplo, passando da v4.3 para a v4.4, ou passando da snapshot de
d248 1
a248 1
<a href="../upgrade44.html">Guia de Upgrade</a> (quando muda a release)
d256 1
a256 1
<a href="faq10.html#Patches">processo de correção de código</a> ou
d260 1
a260 1
da release, por exemplo, 4.4-release para 4.4-stable.
d271 1
a271 1
desta poucas vezes antes do novo upgrade para a próxima release.
d282 3
a284 3
recompilar um kernel a partir do código <i>-current</i> e esperar que
ele trabalhe com a userland da <i>-release</i>. Sim, isso significa que
você precisa fazer upgrade do seu sistema se você quer rodar novos
d292 2
a293 2
<i>4.4-current</i> (ou snapshot), e então decidir que você está vivendo
muito perigosamente, e voltar para a <i>4.4-stable</i>. Você está em
d303 1
a303 1
<h2>5.2 - Por que eu preciso compilar meu sistema a partir do código?</h2>
d307 1
a307 1
Algumas razões para NÃO compilar seu sistema a partir do código:
d311 1
a311 2
<li>Você NÃO vai obter melhor desempenho compilando seu próprio 
	sistema.
d317 1
a317 1
a partir do código:
d329 2
a330 2
O time do OpenBSD disponibiliza novas snapshots baseadas no código da
<i>-current</i> para todas as plataformas.
d335 3
a337 3
A razão mais comum para compilar a partir do código é seguir o ramo
<i>-stable</i>, onde compilar a partir do código é a única opção
suportada.
d340 1
a340 1
<h2>5.3 - Compilação do OpenBSD a partir do código</h2>
d345 1
a345 1
Compilar o OpenBSD a partir do código envolve os seguintes passos:
d366 2
a367 2
O primeiro passo na compilação a partir do código é ter certeza que
você tem os binários mais recentes instalados.
d404 1
a404 1
descrito <a href="../upgrade44.html">aqui</a>.
d412 2
a413 2
O código do OpenBSD é gerenciado usando o sistema de controle de versão
<a href="http://ximbiot.com/cvs/cvshome/">CVS</a>, e
d415 1
a415 1
é usado para puxar uma cópia do código desejado para a sua máquina
d434 3
a436 3
você deseja usar, você deve fazer o "checkout" da árvore de códigos,
depois disso, você então mantém a árvore rodando "updates", para puxar
arquivos atualizados para a sua árvore local.
d484 1
a484 1
    # <b>cvs -d$CVSROOT checkout -rOPENBSD_4_4 -P src</b>
d487 1
a487 1
Isso irá puxar os arquivos src do ramo OPENBSD_4_4, o qual é também
d490 1
a490 1
Você também pode atualizar o código assim:
d494 1
a494 1
    # <b>cvs -d$CVSROOT up -rOPENBSD_4_4 -Pd</b>
d499 1
a499 1
"<tt>-rOPENBSD_4_4</tt>" da linha de comando, ele irá lembrar isso
d516 1
a516 1
    # <b>cvs -d$CVSROOT checkout -rOPENBSD_4_4 -P src ports xenocara</b>
d523 1
a523 1
você já deve ter uma árvore de códigos correta.
d530 2
a531 2
"pré-carregando" sua própria árvore de códigos com os arquivos tanto
do CD do OpenBSD quanto de um servidor FTP.
d538 2
a539 2
Para extrair a árvore de códigos do CD para <i>/usr/src</i> (assumindo
que o CD está montado em /mnt):
d546 2
a547 2
Os arquivos de código disponíveis para download nos servidores FTP são
separados em dois arquivos para minimizar o tempo de download para
d551 3
a553 3
utilidades da "userland", exceto a árvore de ports e os códigos do X11.
Geralmente, no entanto, você irá normalmente querer ambos instalados.
Assumindo que os arquivos baixados, <tt>src.tar.gz</tt> e
d579 2
a580 2
de códigos do OpenBSD, e algumas vezes os nomes dos diretórios antigos
são atualmente usados como nomes de arquivos.
d599 1
a599 1
outra sobrescrevê-la (i.e., cvs(1) terá um erro sem ela), apesar de
d626 4
a629 3
Como a árvore de códigos consiste, em sua maioria, de vários arquivos
pequenos, ativar o <a href="faq14.html#SoftUpdates">soft updates</a>
para a partição que a árvore de códigos está, vai melhorar
d645 2
a646 2
O código para o kernel está no diretório <tt>/usr/src/sys</tt>.
Algumas partes do código do kernel do OpenBSD são usadas em outras
d703 2
a704 1
<h4>Variação do processo acima: Árvore de códigos "Read-only"</h4>
d766 1
a766 1
    <a href="../upgrade44.html">processo de upgrade</a> ou uma
d896 7
a904 2

<p>
d906 1
a906 1
sistema de "compilação modular", dividindo a árvore de código no
d924 1
a924 1
<tt>/usr/xenocara</tt>, e o código é guardado no módulo
d944 1
a944 1
Se você deseja fazer mudanças na árvore de código, você irá
a947 1
<p>
d984 1
a984 1
Um kernel customizado pode ser baseado no código da
d997 1
a997 1
seu kernel e sistema para um desempenho otimizada, mas esse não é
d1015 1
a1015 1
      especial não conhecida pelo GENERIC, e não vai perguntar
d1027 2
a1028 2
      reproduzidos usando um kernel GENERIC antes que os desenvolvedores
      recebam qualquer relato de problema sério.
d1044 1
a1044 1
Remover checagem de debugação e erro pode resultar em uma ganho
d1071 3
a1073 2
por padrão. Todas as arquiteturas possuem um arquivo, GENERIC, que é
usado para gerar um kernel padrão do OpenBSD para aquela plataforma.
d1111 1
a1111 1
OpenBSD</i> (i.e., NÃO editadas). Relatar um problema em um kernel
d1164 2
a1165 2
seja compilado com a opção -DDEBUG, que é equivalente a colocar um
<tt>#define DEBUG</tt> nos códigos do kernel.
d1173 1
a1173 1
debugador interno do kernel (<i>não recomendado!</i>), você deverá
d1210 1
a1210 1
pccom* at       boca? slave ?
d1406 2
a1407 3
    deraadt@@i386.openbsd.org:/usr/src/sys/arch/i386/compile/GENERIC
OpenBSD 4.4 (GENERIC) #1021: Tue Aug 12 17:16:55 MDT 2008
Processing history...
d1418 1
a1418 1
Obter mais mensagens de saída pode ser muito útil para tentar debugar
d1452 2
a1453 1
    ou pensando que uma snapshot de uma semana é "próximo o bastante".
d1467 2
a1468 2
A compilação do OpenBSD e outros programas a partir do código é uma
tarefa que precisa mais do hardware que outras coisas, fazendo
d1485 1
a1485 1
Para muito mais informação, veja o
d1642 1
a1642 1
<tt>/var</tt>, e <tt>/dev</tt>?</h3>
d1666 1
a1666 1
Por exemplo, para ver as mudanças entre 4.3 e 4.4, faça um:
d1670 1
a1670 1
    # cvs diff -u -rOPENBSD_4_3 -rOPENBSD_4_4
d1673 1
a1673 1
Para ver as mudanças entre 4.4 e <i>-current</i> ("HEAD"), use:
d1676 1
a1676 1
    # cvs diff -u -rOPENBSD_4_4 -rHEAD
d1685 2
a1686 1
script a partir da árvore de código quando estiver fazendo um upgrade:
d1716 2
a1717 2
<a href="../upgrade44.html">upgrade44.html</a> (para ir para
4.4-release) ou <a href="../current.html">current.html</a> (para ir para
d1735 1
a1735 1
Primeiro, baixe o código mais recente, então faça o seguinte:
d1756 2
a1757 2
Compilar o sistema a partir do código coloca uma considerável carga
no SO e na máquina, e faz um bom trabalho de testar o quanto bem o
d1780 2
a1781 2
Originally [OpenBSD: faq5.html,v 1.168 ]<br>
$Translation: faq5.html,v 1.3 2009/03/31 00:40:12 dsantos Exp $<br>
@


1.1
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>5 - Compilando o sistema a partir dos Fontes</title>
d10 1
a10 2
<meta name= "copyright"     content= "This document copyright 1998-2007
by OpenBSD.">
d18 1
a18 2
<img alt="[OpenBSD]" height=30 width=141
src="../../images/smalltitle.gif" border="0">    
d22 3
a24 4
<a href= "index.html">[&Iacute;ndice do FAQ]</a>
<a href= "faq4.html">[Para a Se&ccedil;&atilde;o 4 - Guia de
Instala&ccedil;&atilde;o]</a>
<a href= "../faq6.html">[Para a Se&ccedil;&atilde;o 6 - Rede]</a>
d27 1
a27 2
<h1><font color="#e00000">5 - Compilando o Sistema a partir dos
Fontes</font></h1>
d31 1
a31 1
<h3>Conte&uacute;do</h3>
d33 4
a36 4
<li><a href="#Flavors">5.1 - Sabores do OpenBSD</a>
<li><a href="#WhySrc">5.2 - Por que eu deveria compilar meu sistema a
partir dos fontes?</a>
<li><a href="#Bld">5.3 - Compilando o OpenBSD a partir dos fontes</a>
d38 6
a43 8
  <li><a href="#BldOverview">5.3.1 - Vis&atilde;o Geral</a>
  <li><a href="#BldBinary">5.3.2 - Instalar ou atualizar para os
bin&aacute;rios mais recentes dispon&iacute;veis</a>
  <li><a href="#BldGetSrc">5.3.3 - Obtendo o c&oacute;digo-fonte
apropriado</a>
  <li><a href="#BldKernel">5.3.4 - Compilando o kernel</a>
  <li><a href="#BldUserland">5.3.5 - Compilando aplica&ccedil;&otilde;es
de usu&aacute;rio (userland)</a>
d45 34
a78 42
<li><a href="#Release">5.4 - Construindo uma vers&atilde;o</a>
<li><a href="#Xbld">5.5 - Compilando o X</a>
<li><a href="#Why">5.6 - Por que eu preciso de um kernel
customizado?</a>
<li><a href="#Options">5.7 - Compilando um kernel customizado</a>
<li><a href="#BootConfig">5.8 - Configura&ccedil;&atilde;o em tempo de
boot</a>
<li><a href="#config">5.9 - Usando o config(8) para modificar seu
kernel</a>
<li><a href="#VerboseBoot">5.10 - Obtendo output mais extenso durante o
boot</a>
<li><a href="#buildprobs">5.11 - Problemas comuns ao Compilar e
Construir</a>
   <ul>
   <li><a href="#sig11">5.11.1 - A compila&ccedil;&atilde;o parou com um
erro "Signal 11"</a>
   <li><a href="#snake">5.11.2 - "make build" falha com a mensagem
"cannot open output file snake: is a directory"</a>
   <li><a href="#ProbIPv6">5.11.3 - Meu sistema sem IPv6 n&atilde;o
funciona!</a>
   <li><a href="#ProbObj">5.11.4 - Oops! Esqueci de criar o
diret&oacute;rio <tt>/usr/obj</tt> primeiro!</a>
   <li><a href="#ProbObjPt">5.11.5 - Colocando o diret&oacute;rio
<tt>/usr/obj</tt> em uma parti&ccedil;&atilde;o pr&oacute;pria</a>
   <li><a href="#ProbSKIPDIR">5.11.6 - Como n&atilde;o compilar certas
partes da &aacute;rvore de c&oacute;digo?</a>
   <li><a href="#ProbMoreInfo">5.11.7 - Onde posso aprender mais sobre o
processo de compila&ccedil;&atilde;o?</a>
   <li><a href="#NoSnaps">5.11.8 - N&atilde;o vi nenhum snapshot no
servidor FTP. Para onde eles foram?</a>
   <li><a href="#NewCompiler">5.11.9 - Como dar bootstrap em uma nova
vers&atilde;o do compilador (<i>gcc</i>)?</a>
   <li><a href="#UpdateEtc">5.11.10 - Qual &eacute; a melhor maneira de
atualizar os diret&oacute;rios <tt>/etc</tt>, <tt>/var</tt>, e
<tt>/dev</tt>?</a>
   <li><a href="#Hierarchy">5.11.11 - H&aacute; alguma maneira
f&aacute;cil de fazer todas as modifica&ccedil;&otilde;es na hierarquia
do sistema de arquivos?</a>
   <li><a href="#ProbXComp">5.11.12 - Posso efetuar
compila&ccedil;&atilde;o cruzada (cross-compile)? Por que
n&atilde;o?</a>
   </ul>
d85 1
a85 1
<h2>5.1 - Sabores do OpenBSD</h2>
d87 1
a87 1
H&aacute; tr&ecirc;s "sabores" do OpenBSD:
d89 5
a93 7
<li><b>-release:</b> A vers&atilde;o lan&ccedil;ada em CD a cada seis
meses do OpenBSD.
<li><b>-stable:</b>  Release, juntamente com patches considerados
cr&iacute;ticos para seguran&ccedil;a e confiabilidade.
<li><b>-current:</b> &Eacute; onde o trabalho de desenvolvimento
est&aacute; sendo realizado, e, eventualmente, ir&aacute; se tornar o
pr&oacute;ximo release.
d96 1
a96 1
Graficamente, o desenvolvimento desses sabores se parece com algo assim:
d109 1
a109 2
 --&gt;4.1Rel-----&gt;4.2Rel-----&gt;4.3Rel-----&gt;4.4Rel----&gt;
Current 
d116 89
a204 100
<i>-Current</i> &eacute; onde o trabalho de desenvolvimento atual
&eacute; feito, e eventualmente ir&aacute; se tornar o pr&oacute;ximo
<i>-release</i> do OpenBSD. A cada seis meses, quando uma nova
vers&atilde;o do OpenBSD &eacute; lan&ccedil;ada, faz-se uma tag de
<i>-current</i>, e esta se torna <i>-release</i>: um ponto congelado na
hist&oacute;ria da &aacute;rvore de c&oacute;digo.
Cada <i>-release</i> nunca &eacute; alterada; &eacute; o que est&aacute;
dispon&iacute;vel em <a href="../../orders.html">CDs</a> e <a
href="../../ftp.html">servidores FTP</a>.

<p>
<i>-Stable</i> &eacute; baseada em <i>-release</i>, e &eacute; um ramo
da &aacute;rvore principal de desenvolvimento do OpenBSD. Quando
modifica&ccedil;&otilde;es muito importantes s&atilde;o feitas em
<i>-current</i>, elas s&atilde;o "back ported" (agregadas) aos ramos
<i>-stable</i>; por causa disso, <i>-stable</i> tamb&eacute;m &eacute;
conhecido como o "<i>patch branch</i>".
Na ilustra&ccedil;&atilde;o acima, as linhas verticais pontilhadas
denotam corre&ccedil;&otilde;es de bugs sendo incorporadas nos ramos
<i>-stable</i>. Voc&ecirc; tamb&eacute;m ir&aacute; notar que no exemplo
acima, o ramo <i>4.1-stable</i> terminou com o lan&ccedil;amento de
<i>4.3-release</i>, e o ramo <i>4.2-stable</i> terminou com o
lan&ccedil;amento de <i>4.4-release</i> -- vers&otilde;es antigas
s&atilde;o tipicamente suportadas at&eacute; duas vers&otilde;es
anteriores. H&aacute; uma demanda por tempo e recursos para suportar
vers&otilde;es antigas, e mesmo que gostemos de prover suporte
continuado para vers&otilde;es antigas, preferimos focar em novos
recursos. O ramo <i>-stable</i> &eacute;, por design, muito f&aacute;cil
de compilar a partir de <i>-release</i> da mesma vers&atilde;o (i.e.,
indo de <i>4.4-release</i> para <i>4.4-stable</i>).

<p>
O ramo <i>-stable</i> &eacute; <i>-release</i> somado a patches
encontrados na
<a href="../../errata.html">p&aacute;gina de errata</a>.
A opera&ccedil;&atilde;o de <i>-stable</i> &eacute; a mesma que o
<i>-release</i> no qual &eacute; baseado.
Se as <a href="http://www.openbsd.org/cgi-bin/man.cgi">man pages</a>
t&ecirc;m que mudar, essas modifica&ccedil;&otilde;es provavelmente
n&atilde;o ir&atilde;o para <i>-stable</i>. Em outras palavra, suporte a
novos dispositivos e novas funcionalidades N&Atilde;O ser&atilde;o
adicionadas a <i>-stable</i>.

<p>
&Eacute; v&aacute;lido apontar que o nome "<i>-stable</i>" n&atilde;o
quer dizer que <i>-current</i> n&atilde;o seja confi&aacute;vel.
Ao contr&aacute;rio, <i>-current</i> est&aacute; mudando e evoluindo, ao
passo que a opera&ccedil;&atilde;o e APIs de <i>-stable</i> n&atilde;o
ir&atilde;o mudar, ent&atilde;o voc&ecirc; n&atilde;o ter&aacute; que
reaprender seu sistema ou alterar qualquer arquivo de
configura&ccedil;&atilde;o, ou ter qualquer problema adicionando
aplica&ccedil;&otilde;es adicionais ao seu sistema.

<p>
De fato, como esperamos sempre melhorar continuamente o OpenBSD, o
objetivo &eacute; que <i>-current</i> seja mais confi&aacute;vel, mais
seguro, e claro, possua mais funcionalidades que <i>-stable</i>.
Em linguagem simples, a "melhor" vers&atilde;o do OpenBSD &eacute;
<i>-current</i>.

<p>
Aviso: <i>-current</i> &eacute; um alvo em movimento.
Ele muda minuto a minuto, e pode mesmo mudar v&aacute;rias vezes durante
o tempo em que se obt&eacute;m o c&oacute;digo fonte.
Ainda que os desenvolvedores trabalhem duro para assegurar que o sistema
sempre compile e que n&atilde;o haja bugs de grande impacto, &eacute;
completamente poss&iacute;vel obter os fontes de <i>-current</i> e
n&atilde;o conseguir compil&aacute;-los, e cinco minutos depois tudo
estar&aacute; bem.
H&aacute; tamb&eacute;m flag days e grandes mudan&ccedil;as do sistema
nas quais os desenvolvedores navegam com ferramentas de um passo, o que
significa que atualiza&ccedil;&atilde;o por meio dos fontes n&atilde;o
ser&aacute; poss&iacute;vel. <b> Se voc&ecirc; n&atilde;o est&aacute;
preparado para lidar com isto, evite <i>-current</i>.</b>

<p>
A maioria dos usu&aacute;rios deve utilizar ou <i>-stable</i> ou
<i>-release</i>. Dito isso, muitas pessoas mesmo assim utilizam
<i>-current</i> em sistemas de produ&ccedil;&atilde;o, e &eacute;
importante que algumas o fa&ccedil;am para indentificar bugs e testar
novas funcionalidades. No entanto, se voc&ecirc; n&atilde;o sabe como
descrever corretamente, diagnosticar e lidar com um problema, n&atilde;o
diga para voc&ecirc; mesmo (ou qualquer outra pessoa) que voc&ecirc;
est&aacute; "ajudando o projeto" ao utilizar <i>-current</i>.
"N&atilde;o funcionou!" n&atilde;o &eacute; um <a
href="../../report.html#bugtypes">bug report &uacute;til</a>. "As
mudan&ccedil;as recentes ao driver pciide quebraram a compatibilidade
com minha interface IDE baseada em Slugchip, segue dmesg dos sistemas
funcional e inoperante..." pode ser um report &uacute;til.

<p>
H&aacute; momentos em que usu&aacute;rios "normais" podem querer
utilizar o que h&aacute; de mais recente e executar <i>-current</i>. A
raz&atilde;o mais comum &eacute; que o usu&aacute;rio tem um dispositivo
que n&atilde;o &eacute; suportado por <i>-release</i> (e portanto,
tamb&eacute;m n&atilde;o o &eacute; por <i>-stable</i>), ou deseja
utilizar uma nova funcionalidade dispon&iacute;vel em <i>-current</i>.
Neste caso, a escolha pode ser ou <i>-current</i> ou n&atilde;o usar o
dispositivo, sendo <i>-current</i> o menor dos males. Contudo,
n&atilde;o espere que os desenvolvedores sejam prestativos com novatos.
d207 41
a247 49
Entre vers&otilde;es formais do OpenBSD, <i>snapshots</i> s&atilde;o
disponibilizados atrav&eacute;s dos <a href="../../ftp.html">espelhos
FTP</a>. Como o nome indica, estes s&atilde;o compila&ccedil;&otilde;es
feitas com qualquer c&oacute;digo que estivesse na &aacute;rvore no
momento em que o respons&aacute;vel obteve uma c&oacute;pia do
c&oacute;digo para aquela plataforma em particular. Lembre-se, em
algumas plataformas, DIAS podem transcorrer at&eacute; que a
compila&ccedil;&atilde;o do snapshot esteja completa e seja
disponibilizada para distribui&ccedil;&atilde;o. N&atilde;o h&aacute;
promessas de que os snapshots sejam completamente funcionais, ou mesmo
que instalem. Muitas vezes, uma mudan&ccedil;a que precise ser testada
pode motivar a cria&ccedil;&atilde;o de um snapshot. Algumas plataformas
t&ecirc;m snapshots criados com frequ&ecirc;ncia quase di&aacute;ria,
enquanto outras s&atilde;o muito menos frequentes. Se voc&ecirc; deseja
rodar <i>-current</i>, um snapshot recente &eacute; muitas vezes tudo
que voc&ecirc; precisa, e atualizar para um snapshot &eacute; um ponto
de partida necess&aacute;rio antes de tentar compilar <i>-current</i> a
partir dos fontes.

<p>
Algumas vezes se pergunta se h&aacute; alguma maneira de obter uma
c&oacute;pia exata do c&oacute;digo usado para construir um snapshot. A
resposta &eacute; n&atilde;o. Primeiro, n&atilde;o h&aacute; vantagem em
se fazer isto. Segundo, os snapshots s&atilde;o constru&iacute;dos de
acordo com o desejado, levando-se em conta restri&ccedil;&otilde;es de
tempo e recursos. Em plataformas r&aacute;pidas, v&aacute;rios snapshots
podem ser liberados em um &uacute;nico dia. Em plataformas mais lentas,
pode demorar uma semana ou mais para compilar um snapshot. Prover tags
ou marcadores na &aacute;rvore de c&oacute;digo para cada snapshot seria
muito pouco pr&aacute;tico. Terceiro, snapshots frequentemente
cont&eacute;m c&oacute;digo experimental que ainda n&atilde;o foi
enviado &agrave; &aacute;rvore de c&oacute;digo.

<h3>Upgrades e Updates</h3>
Voc&ecirc; ir&aacute; frequentemente ver refer&ecirc;ncias a "upgrades"
e "updates" feitas a uma instala&ccedil;&atilde;o do OpenBSD.
Muito embora essas palavras possuam significados similares, elas
s&atilde;o usadas de forma ligeiramente diferente no OpenBSD.

<p>
<b>Upgrade</b> &eacute; o processo de instalar uma nova vers&atilde;o do
OpenBSD, com novas funcionalidades.
Por exemplo, indo da vers&atilde;o v4.3 para v4.4, ou indo do snapshot
de 12 de Junho para o snapshot de 20 de Junho.
Ao fazer um upgrade, voc&ecirc; ter&aacute;, tipicamente, que consultar
as p&aacute;ginas <a href="../current.html">Acompanhando -current</a> ou
o <a href="../upgrade44.html">guia de Upgrade</a> (ao mudar de
vers&otilde;es) para fazer as modifica&ccedil;&otilde;es
necess&aacute;rias para executar a vers&atilde;o atualizada (upgraded)
d251 44
a294 51
<b>Update</b> &eacute; o processo de aplicar patches a um sistema para
melhorar sua opera&ccedil;&atilde;o SEM alterar a funcionalidade
b&aacute;sica ou compatibilidade bin&aacute;ria.
Isto &eacute; tipicamente feito seguindo o <a
href="../faq10.html#Patches">processo de patching via fonte</a> ou
seguindo o <a href="../../stable.html">processo stable</a>.
Quando voc&ecirc; efetua um "update" ao seu sistema, ele vai de
<i>-release</i> para <i>-stable</i> (ou <i>-release</i> com patches) da
mesma vers&atilde;o, por exemplo, 4.4-release para 4.4-stable.
Voc&ecirc; pode ent&atilde;o efetuar novos updates para <i>-stable</i>
mais novos da mesma vers&atilde;o.
O processo de update &eacute; tipicamente muito f&aacute;cil, j&aacute;
que nenhum arquivo do <tt>/etc</tt> ou outras
configura&ccedil;&otilde;es do sistema precisam ser alterados.

<p>
Ent&atilde;o, voc&ecirc; pode instalar um sistema (por exemplo,
4.3-release) a partir do CD, ent&atilde;o efetuar updates para
4.3-stable algumas vezes, ent&atilde;o um upgrade para 4.4-release a
partir do CD, e ent&atilde;o alguns updates antes de outro upgrade para
a pr&oacute;xima vers&atilde;o.

<h3>Mantendo tudo em Sincronia</h3>
&Eacute; importante entender que o OpenBSD &eacute; um Sistema
Operacional, que deve ser tomado como um todo, n&atilde;o como um kernel
junto com algumas ferramentas em um grande pacote. Voc&ecirc; deve se
certificar de que o kernel, "userland" (as ferramentas e arquivos
agregados) e a &aacute;rvore de <a
href="../faq15.html#Ports"><tt>ports</tt></a> est&atilde;o todos em
sincronia, ou coisas ruins ir&atilde;o acontecer. Em outras palavras
(porque as pessoas continuam insistindo nesse erro), voc&ecirc;
n&atilde;o pode ter <tt>ports</tt> novos em folha em um sistema defasado
em mais de um m&ecirc;s, ou recompilar um kernel a partir dos fontes de
<i>-current</i> e esperar que funcione com um userland de
<i>-release</i>. Sim, isto significa que voc&ecirc; tem que efetuar um
upgrade em seu sistema se voc&ecirc; quer rodar um novo programa que foi
adicionado hoje &agrave; &aacute;rvore de ports. Desculpe, mas,
novamente, o OpenBSD possui um n&uacute;mero limitado de recursos
dispon&iacute;veis.

<p>
Voc&ecirc; deve tamb&eacute;m compreender que o processo de upgrade
&eacute; suportado <b>em apenas uma dire&ccedil;&atilde;o: do mais
antigo para o mais novo</b>, e de <i>-stable</i> para <i>-current</i>.
Voc&ecirc; n&atilde;o pode rodar <i>4.4-current</i> (ou um snapshot), e
ent&atilde;o decidir que isto &eacute; muito arriscado para voc&ecirc;,
e voltar para <i>4.4-stable</i>. Voc&ecirc; est&aacute; por conta
pr&oacute;pria se decidir por qualquer caminho al&eacute;m da
op&ccedil;&atilde;o suportada de reinstalar seu sistema do zero, e
n&atilde;o espere assist&ecirc;ncia da equipe de desenvolvimento do
OpenBSD.
d297 2
a298 2
Sim, isto significa que voc&ecirc; deve pensar bastante antes de decidir
usar <i>-current</i>.
d301 2
a302 3
<h2>5.2 - Por que eu deveria compilar meu sistema a partir dos
fontes?</h2>
Na realidade, muito provavelmente voc&ecirc; n&atilde;o deveria.
d305 1
a305 1
Algumas raz&otilde;es para N&Atilde;O compilar a partir dos fontes:
d307 6
a312 6
<li>Compilar o seu sistema como uma maneira de efetuar upgrade
n&atilde;o &eacute; suportado.
<li>Voc&ecirc; N&Atilde;O ir&aacute; obter melhor performance do sistema
ao compilar seu pr&oacute;prio sistema.
<li>Mudar op&ccedil;&otilde;es do compilador tem mais chance de tornar
seu sistema inutiliz&aacute;vel do que de melhor&aacute;-lo.
d315 2
a316 2
Algumas raz&otilde;es pelas quais voc&ecirc; pode querer ou precise
compilar a partir dos fontes:
d319 6
a324 7
<li>Compilar o sistema exige muito do computador, e pode ser uma maneira
de certificar que o sistema que voc&ecirc; acaba de montar ou comprar
est&aacute; em boa condi&ccedil;&atilde;o operacional.
<li>Voc&ecirc; deseja acompanhar o <a href="../../stable.html">ramo
stable.</a>
<li>Voc&ecirc; deseja fazer uma vers&atilde;o altamente customizada do
OpenBSD para alguma aplica&ccedil;&atilde;o especial.
d328 4
a331 5
A equipe do OpenBSD disponibiliza novos snapshots baseados no
c&oacute;digo de <i>-current</i> regularmente, para todas as
plataformas.
&Eacute; prov&aacute;vel que isto seja tudo que voc&ecirc; precisa para
rodar <i>-current</i>.
d334 3
a336 3
A raz&atilde;o mais comum para compilar a partir dos fontes &eacute;
para acompanhar o ramo <i>-stable</i>, onde compilar a partir dos fontes
&eacute; a &uacute;nica op&ccedil;&atilde;o suportada.
d339 1
a339 1
<h2>5.3 - Compilando o OpenBSD a partir dos fontes</h2>
d342 1
a342 1
<h3>5.3.1 - Vis&atilde;o Geral</h3>
d344 1
a344 2
Compilar o OpenBSD a partir dos fontes envolve um n&uacute;mero de
passos:
d346 6
a351 6
<li><a href="#BldBinary">Atualizar para os bin&aacute;rios mais recentes
dispon&iacute;veis.</a>
<li><a href="#BldGetSrc">Obtendo o c&oacute;digo-fonte apropriado.</a>
<li><a href="#BldKernel">Compilando o novo kernel e efetuando boot a
partir dele.</a>
<li><a href="#BldUserland">Compilando o "userland" ("make build").</a>
d354 2
a355 3
H&aacute; alguns passos adicionais que alguns usu&aacute;rios podem
querer executar, dependendo do objetivo da compila&ccedil;&atilde;o e se
o X est&aacute; instalado:
d357 2
a358 2
<li><a href="#Release">Construindo uma "vers&atilde;o".</a>
<li><a href="#Xbld">Compilando o X.</a>
d363 1
a363 2
<h3>5.3.2 - Instalar ou Atualizar para os bin&aacute;rios mais recentes
dispon&iacute;veis</h3>
d365 2
a366 3
O primeiro passo ao compilar a partir dos fontes &eacute; se certificar
de que voc&ecirc; possui os bin&aacute;rios mais recentes
dispon&iacute;veis instalados.
d368 2
a369 2
Use esta tabela para ver onde voc&ecirc; est&aacute;, onde voc&ecirc;
quer chegar, e com quais bin&aacute;rios voc&ecirc; deve come&ccedil;ar:
d374 2
a375 3
  <td><b>Voc&ecirc; est&aacute; em</b></td> <td><b>Objetivo</b></td>
  <td><b>Upgrade bin&aacute;rio para</b></td> <td><b>e ent&atilde;o
...</b></td>
d378 1
a378 2
  <td> Antigo -release </td> <td> Novo release </td> <td> Mais recente
release </td>
d382 2
a383 2
  <td> -release </td> <td> -stable </td> <td> Mais recente release </td>
  <td>Obter &amp; compilar <i>-stable</i></td>
d386 2
a387 3
  <td> Antigo -stable</td> <td> -stable </td> <td> Mais recente release
</td>
  <td>Obter &amp; compilar <i>-stable</i></td>
d390 2
a391 3
  <td> -release </td> <td> -current </td> <td> Mais recente Snapshot
</td>
  <td> (opcional) Obter &amp; compilar <i>-current</i>
d394 2
a395 3
  <td> Antigo -current </td> <td> -current </td> <td> Mais recente
Snapshot </td>
  <td> (opcional) Obter &amp; compilar <i>-current</i>
d400 7
a406 10
&Eacute; recomendado que voc&ecirc; instale os bin&aacute;rios usando a
op&ccedil;&atilde;o "Upgrade" da m&iacute;dia de
instala&ccedil;&atilde;o.
Se isso n&atilde;o for poss&iacute;vel, voc&ecirc; tamb&eacute;m pode
descompactar os bin&aacute;rios como descrito <a
href="../upgrade44.html">aqui</a>.
De qualquer maneira, voc&ecirc; deve executar todo o processo de
upgrade, incluindo a cria&ccedil;&atilde;o de usu&aacute;rios e
quaisquer outras modifica&ccedil;&otilde;es necess&aacute;rias ao
diret&oacute;rio <tt>/etc</tt>.
d410 26
a435 28
<h3>5.3.3 - Obtendo o c&oacute;digo-fonte apropriado</h3>
O c&oacute;digo-fonte do OpenBSD &eacute; gerenciando usando o sistema
de controle de vers&otilde;es <a
href="http://ximbiot.com/cvs/cvshome/">CVS</a>, e <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1">cvs(1)</a>
&eacute; usado para obter uma c&oacute;pia dos fontes desejados para sua
m&aacute;quina local para compila&ccedil;&atilde;o.
Isto pode ser feito usando um servidor <a
href="../../anoncvs.html">AnonCVS</a> (uma m&aacute;quina contendo uma
c&oacute;pia acess&iacute;vel publicamente de todo o reposit&oacute;rio
CVS usado pelo projeto OpenBSD) ou um reposit&oacute;rio CVS local que
voc&ecirc; mantenha usando os programas <a
href="../../cvsup.html">CVSup</a>, ou <a
href="../../cvsync.html">CVSync</a>, dipon&iacute;veis como <a
href="../faq15.html#PkgMgmt">pacotes</a>.
O CVSup tamb&eacute;m pode ser usado em modo "checkout", mas isso
n&atilde;o ser&aacute; coberto aqui.
Se voc&ecirc; tem m&uacute;ltiplas m&aacute;quinas em que voc&ecirc;
deseja manter &aacute;rvores de c&oacute;digo-fonte, voc&ecirc; pode
achar interessante ter um reposit&oacute;rio CVS local, criado e mantido
usando CVSup ou CVSync.

<p>
Ap&oacute;s decidir qual <a href="../../anoncvs.html">servidor
AnonCVS</a> voc&ecirc; deseja utilizar, voc&ecirc; deve fazer um
"checkout" da &aacute;rvore de c&oacute;digo, e ap&oacute;s isso,
voc&ecirc; mant&eacute;m a &aacute;rvore atrav&eacute;s de "updates",
para obter arquivos atualizados para sua &aacute;rvore local.
d439 5
a443 7
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1">CVS(1)</a>
tem muitas op&ccedil;&otilde;es, algumas delas s&atilde;o
<i><b>requeridas</b></i> para o checkout e update de uma &aacute;rvore
&uacute;til. Outros comandos podem causar uma &aacute;rvore
n&atilde;o-funcional. Seguir e compreender as instru&ccedil;&otilde;es
aqui presentes &eacute; muito importante.
d446 1
a446 1
<b>Acompanhando <i>-current</i></b><br>
d448 6
a453 6
Neste caso, iremos assumir que estamos usando um servidor AnonCVS
p&uacute;blico, <b>anoncvs@@anoncvs.example.org:/cvs</b>. Tamb&eacute;m
iremos assumir que voc&ecirc; est&aacute; usando o <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=sh&amp;sektion=1">sh(1)</a>
como seu shell de comando, se voc&ecirc; est&aacute; usando um shell
diferente, ter&aacute; que ajustar alguns desses comandos.
d456 2
a457 2
Para fazer o checkout de uma &aacute;rvore CVS de <i>-current</i>,
voc&ecirc; pode fazer o seguinte:
d466 1
a466 2
Uma vez que voc&ecirc; possua uma &aacute;rvore, voc&ecirc; pode
atualiz&aacute;-la posteriormente:
d475 1
a475 1
<b>Acompanhando <i>-Stable</i></b><br>
d477 3
a479 3
Se voc&ecirc; deseja fazer o checkout de um "ramo" alternativo da
&aacute;rvore, como o ramo <i>-stable</i>, voc&ecirc; ir&aacute; usar o
modificador "<tt>-r</tt>" em seu checkout:
d486 4
a489 4
Isto ir&aacute; baixar os arquivos src do ramo OPENBSD_4_4, que &eacute;
tamb&eacute;m conhecido como o "Patch branch" ou "<a
href="../../stable.html">-stable</a>".
Voc&ecirc; atualizaria o c&oacute;digo de forma semelhante:
d496 7
a502 10
Na realidade, o CVS &eacute; esperto o suficiente para adicionar uma
"Tag" ao sistema de arquivos que voc&ecirc; acabou de fazer checkout, de
modo que voc&ecirc; n&atilde;o tem que lembrar a parte
"<tt>-rOPENBSD_4_4</tt>" da linha de comando, ele ir&aacute; lembrar
isto pra voc&ecirc; at&eacute; que voc&ecirc; limpe a tag explicitamente
ou configure uma nova usando a op&ccedil;&atilde;o "<tt>-A</tt>" em
"<tt>update</tt>".
No entanto, &eacute; provavelmente melhor fornecer
informa&ccedil;&otilde;es a mais em suas linhas de comando para o CVS do
que a menos.
d506 6
a511 8
Muito embora apenas a &aacute;rvore "<tt>src</tt>" tenha sido mostrada
at&eacute; agora, voc&ecirc; ir&aacute; fazer os mesmos passos para
"<tt>xenocara</tt>" e "<tt>ports</tt>".
Como todas as parted do OpenBSD devem ser mantidas em sincronia, todas
as &aacute;rvores que voc&ecirc; utilizar devem ter seu checkout e
update feitos ao mesmo tempo.
Voc&ecirc; pode combinar os checkouts em uma linha (<i>-stable</i> no
exemplo):
d518 1
a518 1
Contudo, updates devem ser feitos diret&oacute;rio-a-diret&oacute;rio.
d521 14
a534 19
Neste ponto, tendo voc&ecirc; seguido <i>-stable</i> ou <i>-current</i>,
voc&ecirc; dever&aacute; ter uma &aacute;rvore de c&oacute;digo
utiliz&aacute;vel.
Tenha muito cuidado ao checar qual &aacute;rvore de c&oacute;digo
voc&ecirc; est&aacute; baixando -- &eacute; f&aacute;cil terminar
compilando <i>-current</i> quanto voc&ecirc; estava almejando
<i>-stable</i>.

<h4>Pr&eacute;-carregando a &aacute;rvore: <tt>src.tar.gz,
sys.tar.gz</tt></h4>
Mesmo que voc&ecirc; possa fazer o download de toda a &aacute;rvore de
c&oacute;digo a partir de um servidor AnonCVS, voc&ecirc; frequentemente
pode economizar muito tempo e banda de rede fazendo um
"pr&eacute;-carregamento" da &aacute;rvore de c&oacute;digo com os
fontes tanto do CD do OpenBSD como de um servidor FTP.
Isto &eacute; particularmente verdadeiro se voc&ecirc; est&aacute;
rodando <a href="../../stable.html"><i>-stable</i></a>, j&aacute; que
relativamente poucos arquivos mudam entre esta vers&atilde;o e
<i>-release</i>, na qual &eacute; baseada.
d537 2
a538 2
Para extrair a &aacute;rvore de fontes a partir do CD para
<i>/usr/src</i> (assumindo que o CD est&aacute; montado em /mnt):
d545 9
a553 10
Os arquivos fonte dispon&iacute;veis para download a partir dos
servidores FTP s&atilde;o separados em dois arquivos para minimizar o
tempo de download para aqueles que desejam trabalhar apenas com uma
parte da &aacute;rvore. Os dois arquivos s&atilde;o <tt>sys.tar.gz</tt>,
que cont&eacute;m arquivos usados para criar o kernel, e
<tt>src.tar.gz</tt> que cont&eacute;m todas as outras ferramentas de
"userland" exceto a &aacute;rvore de ports e os fontes do X11.
Em geral, no entanto, voc&ecirc; geralmente ir&aacute; querer ambos
instalados. Assumindo que os arquivos baixados, <tt>src.tar.gz</tt> e
<tt>sys.tar.gz</tt>, est&atilde;o em <tt>/usr</tt>:
d565 3
a567 4
Nem todas as pessoas ir&atilde;o querer descompactar todos os conjuntos
de arquivos, mas como o sistema deve ser mantido em sincronia,
voc&ecirc; geralmente dever&aacute; configurar todas as partes da
&aacute;rvore.
d571 1
a571 1
<h4>Dicas comuns para o CVS</h4>
d573 33
a605 41
Como indicado anteriormente, algumas op&ccedil;&otilde;es s&atilde;o
obrigat&oacute;rias para obter uma &aacute;rvore <tt>/src</tt>
v&aacute;lida no OpenBSD.
A op&ccedil;&atilde;o "<tt>-P</tt>" acima &eacute; uma dessas: ela faz o
"prune" (remove) diret&oacute;rios vazios.
Ao longo dos anos, diret&oacute;rios foram criados e deletados na
&aacute;rvore de c&oacute;digo do OpenBSD, e algumas vezes os nomes de
antigos diret&oacute;rios s&atilde;o usados atualmente como nomes de
arquivo.
Sem a op&ccedil;&atilde;o "<tt>-P</tt>", a &aacute;rvore de
c&oacute;digo que voc&ecirc; acaba de fazer checkout N&Atilde;O
IR&Aacute; compilar com sucesso.

<p>
Mais ou menos a mesma coisa acontece com a op&ccedil;&atilde;o
<tt>-d</tt> para o comando 'update' -- ela cria novos diret&oacute;rios
que podem ter sido adicionados &agrave; &aacute;rvore desde seu checkout
inicial.
Para fazer um update com sucesso, voc&ecirc; deve usar as
op&ccedil;&otilde;es <tt>-Pd</tt>.

<p>
Usu&aacute;rios experientes do CVS podem estar se perguntando porque o
CVSROOT foi especificado e usado neste exemplo, j&aacute; que o cvs(1)
ir&aacute; gravar a localiza&ccedil;&atilde;o do servidor CVS na
&aacute;rvore de c&oacute;digo cujo checkout foi feito.
Isto est&aacute; correto, mas h&aacute; momentos em que voc&ecirc; pode
precisar alterar o servidor anoncvs padr&atilde;o, e muitas pessoas
recomendam <i>sempre</i> especificar o reposit&oacute;rio
explicitamente.
&Eacute; tamb&eacute;m v&aacute;lido notar que muito embora a
v&aacute;riavel de ambiente CVSROOT possa ser usada diretamente pelo
cvs(1), ela &eacute; usada apenas se nada mais a preceder (i.e., o
cvs(1) terminaria em erro sem ela), enquanto que especific&aacute;-la na
linha de comando do cvs(1) precede qualquer outro valor.

<p>
Em geral, &eacute; &uacute;til usar um arquivo <tt>.cvsrc</tt> em seu
diret&oacute;rio home para especificar valores padr&atilde;o para
algumas dessas op&ccedil;&otilde;es.
Eis um arquivo <tt>.cvsrc</tt> de exemplo:
d614 15
a628 19
Este arquivo ir&aacute; fazer o cvs(1) usar o servidor
<tt>anoncvs@@anoncvs.example.org:/cvs</tt>, suprimir output geralmente
desnecess&aacute;rio ("<tt>-q</tt>" &eacute; "quieto") para todas as
opera&ccedil;&otilde;es, um comando "cvs up" tem por padr&atilde;o usar
<tt>-Pd</tt>, um comando "cvs diff" tem por padr&atilde;o prover
"unified diffs" devido &agrave; op&ccedil;&atilde;o "<tt>-u</tt>", e um
"cvs checkout" ir&aacute; usar a op&ccedil;&atilde;o "<tt>-P</tt>".
Muito embora isto seja conveniente, se voc&ecirc; esquecer que este
arquivo existe, ou tentar executar comandos aos quais voc&ecirc; se
acostumou em uma m&aacute;quina sem este arquivo, voc&ecirc; ter&aacute;
problemas.

<p>
Como as &aacute;rvores de fontes consistem de um grande n&uacute;mero de
arquivos em sua maioria pequenos, ativar <a
href="../faq14.html#SoftUpdates">soft updates</a> para a
parti&ccedil;&atilde;o na qual se encontra a &aacute;rvore de
c&oacute;digo ir&aacute; frequentemente prover uma performance
significativamente melhor.
d633 32
a664 35
<h3>5.3.4 - Compilando o kernel</h3>
Iremos assumir que voc&ecirc; quer compilar um kernel padr&atilde;o
(GENERIC ou GENERIC.MP) aqui.
Normalmente, isto &eacute; o que voc&ecirc; quer fazer.
<i>N&Atilde;O</i> considere a op&ccedil;&atilde;o de compilar um kernel
customizado se voc&ecirc; n&atilde;o estiver acostumado ao processo
padr&atilde;o de compila&ccedil;&atilde;o.

<p>
Obviamente, o kernel &eacute; uma por&ccedil;&atilde;o ALTAMENTE
dependente de hardware do sistema.
O c&oacute;digo do kernel est&aacute; no diret&oacute;rio
<tt>/usr/src/sys</tt>. Algumas partes do c&oacute;digo do kernel do
OpenBSD s&atilde;o usadas em todas as plataformas, outras s&atilde;o
muitos espec&iacute;ficas para um processador ou arquitetura.
Se voc&ecirc; olhar no diret&oacute;rio <tt>/usr/src/sys/arch/</tt>,
poder&aacute; ver algumas coisas que parecer&atilde;o um pouco confusas
-- por exemplo, h&aacute; os diret&oacute;rios <tt>mac68k</tt>,
<tt>m68k</tt> e <tt>mvme68k</tt>. Neste caso, ambos os sistemas mvme68k
e mac68k utilizam o mesmo processador, mas as m&aacute;quinas nas quais
s&atilde;o baseados s&atilde;o muito diferentes, e portanto requerem um
kernel muito diferente (h&aacute; muito mais no design de um computador
do que seu processador!).
Contudo, algumas partes do kernel s&atilde;o comuns a ambos, essas
partes ficam no diret&oacute;rio m68k.
Se voc&ecirc; est&aacute; simplesmente compilando um kernel, os
diret&oacute;rios base de arquitetura como <tt>m68k</tt> n&atilde;o
s&atilde;o nada com que se procupar, voc&ecirc; ir&aacute; trabalhar
exclusivamente com diret&oacute;rios de "arquitetura composta", como
<tt>mvme68k</tt>.

<p>
Kernels s&atilde;o constru&iacute;dos com base nos <a
href="#Options">arquivos de configura&ccedil;&atilde;o do kernel</a>,
que est&atilde;o localizados no diret&oacute;rio
d666 7
a672 9
Compilar o kernel consiste em utilizar o programa
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8">config(8)</a>
para criar e popular um diret&oacute;rio de compila&ccedil;&atilde;o do
kernel, que ir&aacute; ficar em
<tt>/usr/src/sys/arch/&lt;<i>sua
plataforma</i>&gt;/compile/&lt;<i>KernelName</i>&gt;</tt>.
Neste exemplo, iremos assumir que voc&ecirc; est&aacute; usando a
plataforma i386:
d679 1
a679 1
    <i>[...lots of output...]</i>
d683 1
a683 1
Substitua "<tt>i386</tt>" na primeira linha pelo nome da sua plataforma.
d685 20
a704 22
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=machine&amp;sektion=1">machine(1)</a>
pode lhe dizer qual o nome da sua plataforma, ent&atilde;o uma
generaliza&ccedil;&atilde;o &oacute;bvia seria usar, ao inv&eacute;s
disso, o comando "<tt>cd /usr/src/sys/arch/`machine`/conf</tt>" na
primeira linha.

<p>
Neste ponto, reinicie sua m&aacute;quina para ativar este novo kernel.
Note que o novo kernel deve estar rodando antes do pr&oacute;ximo passo,
mas se voc&ecirc; tiver seguido o conselho <a
href="#BldBinary">acima</a> sobre atualizar para o snapshot mais recente
dispon&iacute;vel, n&atilde;o deve importar tanto. Algumas, vezes, no
entanto, as APIs mudam, e o kernel antigo n&atilde;o ser&aacute; capaz
de executar novas aplica&ccedil;&otilde;es, mas o kernel novo geralmente
ir&aacute; suportar as antigas.

<h4>Varia&ccedil;&atilde;o do processo acima: &aacute;rvore de
c&oacute;digo somente-leitura</h4>
Algumas vezes, voc&ecirc; pode querer assegurar que seu diret&oacute;rio
<tt>/usr/src/sys</tt> permane&ccedil;a intocado.
Isto pode ser feito utilizando o seguinte processo:
d707 1
a707 1
$ <b>cd <i>/somewhere</i></b>
d711 1
a711 1
   ... lots of output ...
d714 2
a715 2
Note que voc&ecirc; pode compilar o kernel sem acesso de root, mas
voc&ecirc; deve ter acesso ao root para instalar o kernel.
d719 1
a719 2
<h3>5.3.5 - Compilando aplica&ccedil;&otilde;es de usu&aacute;rio
(userland)</h3>
d721 3
a723 5
H&aacute; um processo espec&iacute;fico usado pelo OpenBSD.
Processos usado em outro SOs com os quais voc&ecirc; esteja
familiriarizado muito provavelmente n&atilde;o ir&atilde;o funcionar no
OpenBSD, e ir&atilde;o rir de voc&ecirc; quando perguntar o
porqu&ecirc;.
d727 1
a727 2
<li>Limpe seu diret&oacute;rio <tt>/usr/obj</tt> e reconstrua os links
simb&oacute;licos:
d734 3
a736 5
Note que o uso do diret&oacute;rio <tt>/usr/obj</tt> &eacute;
madat&oacute;rio.
N&atilde;o executar este passo antes de compilar o restante da
&aacute;rvore ir&aacute; provavelmente deixar sua &aacute;rvore
<tt>/src</tt> em um mau estado.
d739 1
a739 2
<li>Certifique-se de que todos os diret&oacute;rios apropriados
est&atilde;o criados.
d750 1
a750 1
Isto compila e instala todas as ferramentas de "userland" na ordem
d752 5
a756 5
Este &eacute; um passo um tanto quanto demorado -- um computador muito
r&aacute;pido pode concluir essa tarefa em menos de uma hora, um
m&aacute;quina muito lenta pode levar v&aacute;rios dias.
Quando este passo estiver completo, voc&ecirc; ter&aacute;
bin&aacute;rios rec&eacute;m-compilados posicionados no sistema.
d759 7
a765 9
<li><b>Se compilando <i>-current</i>:</b> Atualize <tt>/dev</tt> e
<tt>/etc</tt>, com as modifica&ccedil;&otilde;es listadas em
<a href="../current.html">current.html</a>.
Se acompanhando -stable ap&oacute;s um <a
href="../upgrade44.html">processo de upgrade</a> apropriado ou uma
instala&ccedil;&atilde;o dos <a href="#BldBinary">bin&aacute;rios
iniciais apropriados</a>, este passo n&atilde;o &eacute;
necess&aacute;rio ou desejado.

d771 33
a803 42
<h2>5.4 - Construindo uma vers&atilde;o</h2>
<h3>O que uma "vers&atilde;o", e porque eu iria querer fazer uma?</h3>
Uma vers&atilde;o &eacute; o conjunto completo de arquivos que podem ser
utilizados para instalar o OpenBSD em outro computador.
Se voc&ecirc; tem apenas um computador rodando o OpenBSD, voc&ecirc;
realmente n&atilde;o tem nenhum motivo para fazer uma vers&atilde;o,
j&aacute; que o processo de compila&ccedil;&atilde;o <a
href="#Bld">acima</a> ir&aacute; fazer tudo que voc&ecirc; precisa.
Um exemplo de uso do processo de vers&atilde;o seria a
compila&ccedil;&atilde;o de <i>-stable</i> em uma m&aacute;quina
r&aacute;pida, e ent&atilde;o fazer uma vers&atilde;o para ser instalada
em todas as outras m&aacute;quinas do seu escrit&oacute;rio.

<p>
O processo de vers&atilde;o usa os bin&aacute;rios criados no
diret&oacute;rio <tt>/usr/obj</tt> no processo de
compila&ccedil;&atilde;o acima, ent&atilde;o voc&ecirc; deve completar a
compila&ccedil;&atilde;o com sucesso primeiro, e nada deve estar
atrapalhando o diret&oacute;rio <tt>/usr/obj</tt>.
Um momento em que isto pode ser um problema &eacute; se voc&ecirc; usa
um <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=mount_mfs&amp;sektion=8">disco
em mem&oacute;ria</a> como seu diret&oacute;rio <tt>/usr/obj</tt> para
uma pequena performance extra no processo de compila&ccedil;&atilde;o,
voc&ecirc; n&atilde;o iria querer reiniciar o computador entre os passos
de "build" (compila&ccedil;&atilde;o) e "release" (vers&atilde;o).

<p>
O processo de vers&atilde;o requer dois diret&oacute;rios de trabalho
diferentes, que iremos chamar de DESTDIR e RELEASEDIR.
Todos os arquivos que s&atilde;o parte de uma instala&ccedil;&atilde;o
"limpa" do OpenBSD ser&atilde;o copiados para seus locais apropriados
dentro de DESTDIR.
Eles ser&atilde;o ent&atilde;o empacotados com o tar(1) e colocados em
RELEASEDIR.
No final do processo, RELEASEDIR ir&aacute; conter a vers&atilde;o
completa do OpenBSD.
O processo de vers&atilde;o tamb&eacute;m ir&aacute; usar o
diret&oacute;rio <tt>/mnt</tt>, ent&atilde;o ele n&atilde;o deve ser
usado para nada mais enquanto o processo de vers&atilde;o estiver
executando. Para o prop&oacute;sito deste exemplo, iremos usar um
DESTDIR como <tt>/usr/dest</tt> e um RELEASEDIR como <tt>/usr/rel</tt>.
d807 15
a821 17
O processo de vers&atilde;o envolve algumas ferramentas que n&atilde;o
est&atilde;o presentes no sistema-base do OpenBSD, crunch e
crunchgen(1), que s&atilde;o usados para criar um &uacute;nico arquivo
execut&aacute;vel constru&iacute;do a partir de muitos bin&aacute;rios
individuais. O nome pelo qual este &uacute;nico arquivo
execut&aacute;vel &eacute; invocado determina qual componente
bin&aacute;rio &eacute; executado.
Esta &eacute; a maneira pela qual um n&uacute;mero de arquivos de
programas individuais s&atilde;o colocados dentro do kernel de ramdisk
do disquetes de boot e demais m&iacute;dias de boot. <i>Estas
ferramentas devem ser compiladas antes que o processo de vers&atilde;o
seja iniciado.</i>
Elas devem ser compiladas e instaladas apenas uma vez, mas como as
pessoas frequentemente esquecem este passo, e estes programas s&atilde;o
compilados rapidamente, algumas pessoas optam por compilar crunch e
crunchgen toda vez, como parte do script que usam para construir uma
vers&atilde;o.
d825 3
a827 3
<i><b>NOTA:</b> Para -current e vers&atilde;o 4.5 que est&aacute; por
vir, crunch e crunchgen s&atilde;o parte do sistema-base, n&atilde;o
execute os passos separados de compila&ccedil;&atilde;o abaixo.</i>
d830 1
a830 2
Voc&ecirc; deve ter privil&eacute;gios de root para fazer uma
vers&atilde;o.
d833 1
a833 1
<h3>Fazendo uma vers&atilde;o</h3>
d835 2
a836 2
Primeiro, se ainda n&atilde;o foi feito nesta m&aacute;quina, compile
crunch e crunchgen:
d841 2
a842 1
Agora, definimos as vari&aacute;veis de ambiente DESTDIR e RELEASEDIR:
d848 1
a848 2
Agora limpamos DESTDIR e criamos os diret&oacute;rios, se
necess&aacute;rio:
d850 1
a850 2
# <b>test -d ${DESTDIR} && mv ${DESTDIR} ${DESTDIR}.old && rm -rf
${DESTDIR}.old &</b>
d854 4
a857 5
RELEASEDIR normalmente n&atilde;o precisa estar vazio antes de iniciar o
processo de release, mas, se houver mudan&ccedil;as nos arquivos da
vers&atilde;o ou em seus nomes, arquivos antigos podem sobrar por ali.
Voc&ecirc; pode tamb&eacute;m querer apagar este diret&oacute;rio antes
de come&ccedil;ar.
d860 1
a860 1
Agora fazemos a vers&atilde;o em si:
d866 4
a869 3
Feita a vers&atilde;o, &eacute; uma boa id&eacute;ia chec&aacute;-la
para assegurar que os arquivos tar batem com o que h&aacute; em DESTDIR.
O output deste passo deve ser m&iacute;nimo.
d876 13
a888 16
Voc&ecirc; agora completou e checou os conjuntos de arquivos da
vers&atilde;o em RELEASEDIR. Esses arquivos agora podem ser usados para
instalar ou atualizar o OpenBSD em outras m&aacute;quinas.

<p>
As instru&ccedil;&otilde;es autoritativas sobre como fazer uma
vers&atilde;o est&atilde;o em
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=release&amp;sektion=8">release(8)</a>.

<p>
Nota: se voc&ecirc; deseja distribuir os arquivos resultantes por HTTP
para uso pelo script de atualiza&ccedil;&atilde;o ou
instala&ccedil;&atilde;o, voc&ecirc; dever&aacute; adicionar um arquivo
"index.txt", que cont&eacute;m a lista de todos os arquivos em sua
vers&atilde;o rec&eacute;m-criada.
d894 25
a918 26
<h2>5.5 - Compilando o X (Xenocara)</h2>
Come&ccedil;ando a partir do <a href="http://x.org/">X.org v7,</a> o X
mudou para um sistema de "compila&ccedil;&atilde;o modular", dividindo a
&aacute;rvore de c&oacute;digo do x.org em mais de trezentos pacotes
mais-ou-menos independentes.

<p>
Para simplificar a vida dos usu&aacute;rios do OpenBSD, um "meta-build"
chamado <a href="http://xenocara.org">Xenocara</a> foi desenvolvido.
Este sistema "converte" o X de volta em uma grande &aacute;rvore a ser
compilada em um &uacute;nico processo.
Como b&ocirc;nus adicional, esse processo de compila&ccedil;&atilde;o
&eacute; muito similar ao processo de compila&ccedil;&atilde;o usado
pelo restante do OpenBSD do que as vers&otilde;es anteriores o eram.

<p>
As instru&ccedil;&otilde;es oficiais para compila&ccedil;&atilde;o do X
est&atilde;o no arquivo <tt>/usr/xenocara/README</tt> de sua
m&aacute;quina e em <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=release&amp;sektion=8">release(8)</a>.

<h3>Obtendo o c&oacute;digo-fonte</h3>
O local "usual" para a &aacute;rvore de fontes do xenocara &eacute;
<tt>/usr/xenocara</tt>, e o c&oacute;digo &eacute; guardado no
m&oacute;dulo <tt>xenocara</tt> do CVS.
Ent&atilde;o, o processo de checkout &eacute; assim:
d924 3
a926 4
<h3>Compilando o Xenocara</h3>
Para compilar a &aacute;rvore padr&atilde;o do xenocara conforme
suportado pelo OpenBSD, nenhuma ferramenta externa &eacute;
necess&aacute;ria.
d936 18
a953 20
Se voc&ecirc; deseja fazer modifica&ccedil;&otilde;es efetivas ao
c&oacute;digo-fonte, voc&ecirc; provavelmente ter&aacute; que adicionar
diversos <a href="../faq15.html">pacotes</a>. Detalhes no arquivo
<tt>/usr/xenocara/README</tt>.

<h3>Fazendo uma vers&atilde;o</h3>
Isto &eacute; similar ao processo de vers&atilde;o do sistema principal.
Ap&oacute;s compilar o X com sucesso, voc&ecirc; ir&aacute; definir um
DESTDIR e RELEASEDIR, com os mesmos prop&oacute;sitos que os anteriores.
O RELEASEDIR pode ser o mesmo diret&oacute;rio que o RELEASEDIR do
sistema principal, mas DESTDIR ser&aacute; apagado e reconstru&iacute;do
neste processo.
Se feito cuidadosamente, isso n&atilde;o &eacute; um problema, mas usar
um DESTDIR separado pode ser "mais seguro".

<p>
Para este exemplo, iremos usar DESTDIR e RELEASEDIR como /usr/dest e
/usr/rel, respectivamente.
Isto deve ser feito ap&oacute;s o processo de compila&ccedil;&atilde;o
acima.
d959 1
a959 1
  <b>   rm -rf ${DESTDIR}- &</b>
d964 2
a965 2
Quando este processo for completado, voc&ecirc; ir&aacute; ter pacotes
de arquivos da vers&atilde;o em $RELEASEDIR.
d972 1
a972 1
Na verdade, voc&ecirc; provavelmente n&atilde;o precisa.
d975 19
a993 22
Um kernel customizado &eacute; um kernel compilado com um arquivo de
configura&ccedil;&atilde;o diferente do arquivo <tt>GENERIC</tt>
provido.
Um kernel customizado pode ser baseado em c&oacute;digo de <a
href="#Flavors"><i>-release, -stable</i> ou <i>-current</i></a>, tanto
quanto um kernel <tt>GENERIC</tt> pode s&ecirc;-lo.
Ao compilar seu pr&oacute;prio kernel <tt>GENERIC</tt>, ele &eacute;
suportado pela equipe do OpenBSD, ao passo que compilar seu
pr&oacute;prio kernel customizado <i>n&atilde;o</i>.

<p>
A configura&ccedil;&atilde;o padr&atilde;o do kernel do OpenBSD
(<tt>GENERIC</tt>) &eacute; projetada para se adaptar &agrave; maioria
das pessoas.
Mais pessoas tornaram seus sistemas inutiliz&aacute;veis ao tentar
modificar seus kernels do que melhoraram a opera&ccedil;&atilde;o do
sistema.
H&aacute; algumas pessoas que acreditam que voc&ecirc; deve customizar
seu kernel e sistema para performance otimizada, mas isso n&atilde;o
&eacute; verdade para o OpenBSD. Apenas os usu&aacute;rios mais
avan&ccedil;ados e experientes com as aplica&ccedil;&otilde;es mais
exigentes precisam se preocupar em um sistema ou kernel customizados.
d996 2
a997 2
Algumas raz&otilde;es pelas quais voc&ecirc; pode querer ou precisar
compilar um kernel customizado:
d999 11
a1009 14
  <li>Voc&ecirc; realmente sabe o que est&aacute; fazendo, e quer
espremer o OpenBSD em um computador com pouca RAM atrav&eacute;s da
remo&ccedil;&atilde;o de drivers de dispositivo que voc&ecirc;
n&atilde;o precisa.
  <li>Voc&ecirc; realmente sabe o que est&aacute; fazendo, e quer
remover op&ccedil;&otilde;es padr&atilde;o ou adicionar
op&ccedil;&otilde;es que podem n&atilde;o ter sido habilitadas por
padr&atilde;o (e tem um bom motivo para tal).
  <li>Voc&ecirc; realmente sabe o que est&aacute; fazendo, e quer
habilitar op&ccedil;&otilde;es experimentais.
  <li>Voc&ecirc; realmente sabe o que est&aacute; fazendo, e tem uma
necessidade especial que n&atilde;o &eacute; suprida por
<tt>GENERIC</tt>, e n&atilde;o vai perguntar porque n&atilde;o funcionou
se algo der errado.
d1013 1
a1013 2
Algumas raz&otilde;es pelas quais voc&ecirc; n&atilde;o deveria compilar
um kernel customizado:
d1015 11
a1025 14
  <li>Voc&ecirc; n&atilde;o precisa, normalmente.
  <li>Voc&ecirc; n&atilde;o vai obter um sistema mais r&aacute;pido.
  <li>Voc&ecirc; provavelmente tornar&aacute; a m&aacute;quina menos
confi&aacute;vel.
  <li>Voc&ecirc; n&atilde;o ter&aacute; qualquer suporte dos
desenvolvedores.
  <li>Esperar-se-&aacute; que voc&ecirc; reproduza qualquer problema com
um kernel <tt>GENERIC</tt> antes que os desenvolvedores levem qualquer
report de problema a s&eacute;rio.
  <li>Usu&aacute;rios e desenvolvedores ir&atilde;o rir de voc&ecirc;
quando tornar seu sistema inutiliz&aacute;vel.
  <li>Op&ccedil;&otilde;es customizadas do compilador geralmente fazem
um melhor trabalho expondo problemas do compilador do que melhorando a
performance do sistema.
d1030 10
a1039 10
Remover drivers de dispositivo pode aumentar a velocidade do processo de
boot em seu sistema, mas pode complicar a recupera&ccedil;&atilde;o se
voc&ecirc; tiver um problema de hardware, e &eacute; muito
frequentemente feito de forma err&ocirc;nea.
Remover drivers de dispositivo <i>n&atilde;o ir&aacute;</i> fazer seu
sistema operar mais r&aacute;pido de qualquer forma percept&iacute;vel,
muito embora possa produzir um kernel menor.
Remover op&ccedil;&otilde;es de debug e checagem de erros pode resultar
em um ganho de performance mensur&aacute;vel, mas ir&aacute; tornar
imposs&iacute;vel diagnosticar um sistema se algo der errado.
d1043 4
a1046 5
Mais uma vez, os desenvolvedores geralmente ir&atilde;o ignorar bug
reports lidando com kernels customizados, a n&atilde;o ser que o
problema possa ser reproduzido tamb&eacute;m em um kernel
<tt>GENERIC</tt>.
Voc&ecirc; foi avisado.
d1050 48
a1097 54
<h2>5.7 - Compilando um kernel customizado</h2>
Assume-se que voc&ecirc; leu o texto <a href="#Why">acima</a>, e
realmente gosta de sofrer.
Tamb&eacute;m assume-se que voc&ecirc; tem um objetivo que n&atilde;o
pode ser atingido nem por <a
href="#BootConfig">configura&ccedil;&atilde;o em tempo de boot
(UKC>)</a> ou pelo uso de <a href="#config">config(8) em um kernel
GENERIC</a>.
Se n&atilde;o se apresenta nenhum desses casos, voc&ecirc; deveria
continuar usando GENERIC.
Mesmo.

<p>
A gera&ccedil;&atilde;o do kernel do OpenBSD &eacute; controlada por
arquivos de configura&ccedil;&atilde;o, que est&atilde;o localizados no
diret&oacute;rio <tt>/usr/src/sys/arch/<i>&lt;arch&gt;</i>/conf/</tt>
por padr&atilde;o. Todas as arquiteturas t&ecirc;m um arquivo,
<tt>GENERIC</tt>, que &eacute; usado para gerar o kernel padr&atilde;o
do OpenBSD para aquela plataforma. Tamb&eacute;m pode haver outros
arquivos de configura&ccedil;&atilde;o que s&atilde;o usados para criar
kernels como focos diferenciados, por exemplo, para pouca quantidade de
RAM, esta&ccedil;&otilde;es de trabalho sem disco, etc.

<p>
O arquivo de configura&ccedil;&atilde;o &eacute; processado por <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8">config(8)</a>,
que cria e popula um diret&oacute;rio de compila&ccedil;&atilde;o em
<tt>../compile</tt>, em uma instala&ccedil;&atilde;o t&iacute;pica esse
local seria <tt>/usr/src/sys/arch/<i>&lt;arch&gt;</i>/compile/</tt>.
config(8) tamb&eacute;m cria um a <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=make&amp;sektion=1">Makefile</a>,
e outros arquivos requeridos para compilar o kernel com sucesso.

<p>
As Op&ccedil;&otilde;es de Configura&ccedil;&atilde;o do Kernel
s&atilde;o op&ccedil;&otilde;es que voc&ecirc; adiciona &agrave;
configura&ccedil;&atilde;o do seu kernel para adicionar certas
funcionalidades ao seu kernel. Isto permite que voc&ecirc; tenha suporte
exatamente ao que voc&ecirc; deseja, sem oferecer suporte a dispositivos
desnecess&aacute;rios. H&aacute; muitas op&ccedil;&otilde;es que
permitem que voc&ecirc; customize seu kernel. Aqui iremos comentar
apenas algumas delas, as mais comumente usadas. Cheque a man page de <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=options&amp;sektion=4">options(4)</a>
para uma lista completa de op&ccedil;&otilde;es, e j&aacute; que estas
mudam de tempos em tempos, voc&ecirc; deve se certificar de que
est&aacute; usando uma man page para a mesma vers&atilde;o do OpenBSD
que voc&ecirc; est&aacute; compilando. Voc&ecirc; tamb&eacute;m pode
checar os arquivos de configura&ccedil;&atilde;o de exemplo que
est&atilde;o dispon&iacute;veis para sua arquitetura.

<p>
<b>N&atilde;o adicione, remova, ou mude op&ccedil;&otilde;es em ser
kernel a n&atilde;o ser que voc&ecirc; realmente tenha um motivo para
faz&ecirc;-lo! N&atilde;o edite o arquivo de configura&ccedil;&atilde;o
d1099 12
a1110 15
A &uacute;nica configura&ccedil;&atilde;o de kernel suportada pela
equipe do OpenBSD &eacute; o kernel GENERIC, a combina&ccedil;&atilde;o
das op&ccedil;&otilde;es em
<tt>/usr/src/sys/arch/&lt;<i>arch</i>&gt;/conf/GENERIC</tt> e
<tt>/usr/src/sys/conf/GENERIC</tt> <i>como empacotado pela equipe do
OpenBSD</i> (i.e., N&Atilde;O editada). Reportar um problema em um
kernel customizado ir&aacute; quase sempre resultar em voc&ecirc; sendo
solicitado a tentar reproduzir o problem com um kernel GENERIC. Nem
todas as op&ccedil;&atilde;o s&atilde;o compat&iacute;veis entre si, e
muitas op&ccedil;&otilde;es s&atilde;o requeridas para o sistema
funcionar. N&atilde;o h&aacute; garantias de que, apenas porque
voc&ecirc; conseguiu fazer um kernel customizado compilar com sucesso,
ele ir&aacute; rodar.
N&atilde;o h&aacute; garantias de que um kernel que pode ser configurado
com config(8) possa ser compilado.
d1113 2
a1114 2
Voc&ecirc; pode ver os arquivos de configura&ccedil;&atilde;o
espec&iacute;ficos para cada plataforma aqui:
d1116 8
a1123 23
<li><a
href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/alpha/conf/">Arquivos
de Configura&ccedil;&atilde;o do Kernel alpha</a>
<li><a
href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/i386/conf/">Arquivos
de Configura&ccedil;&atilde;o do Kernel i386</a>
<li><a
href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/macppc/conf/">Arquivos
de Configura&ccedil;&atilde;o do Kernel macppc</a>
<li><a
href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/sparc/conf/">Arquivos
de Configura&ccedil;&atilde;o do Kernel sparc</a>
<li><a
href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/sparc64/conf/">Arquivos
de Configura&ccedil;&atilde;o do Kernel sparc64</a>
<li><a
href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/vax/conf/">Arquivos
de Configura&ccedil;&atilde;o do Kernel vax</a>
<li><a
href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/hppa/conf/">Arquivos
de Configura&ccedil;&atilde;o do Kernel hppa</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/arch/">Outras
Arquiteturas</a>
d1127 2
a1128 2
Observe atentamente estes arquivos e voc&ecirc; ir&aacute; notar uma
linha pr&oacute;xima ao topo similar a:
d1132 4
a1135 6
Isto significa que ele est&aacute; referenciando outro arquivo de
configura&ccedil;&atilde;o, um que cont&eacute;m op&ccedil;&otilde;es
independentes de plataforma. Ao criar sua configura&ccedil;&atilde;o de
kernel, n&atilde;o esque&ccedil;a de olhar <a
href="http://www.openbsd.org/cgi-bin/cvsweb/src/sys/conf/GENERIC">sys/conf/GENERIC</a>.

d1137 2
a1138 3
Op&ccedil;&otilde;es de configura&ccedil;&atilde;o do kernel devem ser
colocadas no arquivo de configura&ccedil;&atilde;o de seu kernel no
seguinte formato:
d1140 1
a1140 1
<tt>option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>name</i>
d1144 1
a1144 1
<tt>option&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt><i>name=value</i> 
d1147 2
a1148 2
Por exemplo, para colocar a op&ccedil;&atilde;o "DEBUG" no kernel,
adicione uma linha como esta:
d1154 4
a1157 5
Op&ccedil;&otilde;es no kernel OpenBSD s&atilde;o traduzidas em
op&ccedil;&otilde;es ao pr&eacute;-processador do compilador,
ent&atilde;o uma op&ccedil;&atilde;o como DEBUG faria o c&oacute;digo
ser compilado com a op&ccedil;&atilde;o -DDEBUG, que &eacute;
equivalente a declarar <tt>#define DEBUG</tt> em todo o kernel.
d1160 7
a1166 7
Algumas vezes, voc&ecirc; pode querer desabilitar uma
op&ccedil;&atilde;o que j&aacute; est&aacute; definida, tipicamente no
arquivo "<tt>src/sys/conf/GENERIC</tt>". Muito embora voc&ecirc; possa
modificar uma c&oacute;pia desse arquivo, uma melhor op&ccedil;&atilde;o
seria usar a declara&ccedil;&atilde;o <i>rmoption</i>. Por exemplo, se
voc&ecirc; realmente quisesse desabilitar o debugger interno ao kernel
(<i>n&atilde;o recomendado!</i>), voc&ecirc; adicionaria uma linha como:
d1170 3
a1172 3
no arquivo de configura&ccedil;&atilde;o do seu kernel. <tt>option
DDB</tt> &eacute; definida em <tt>src/sys/conf/GENERIC</tt>, mas a
op&ccedil;&atilde;o <tt>rmoption</tt> na linha acima a desativa.
d1175 6
a1180 8
Mais uma vez, por favor veja <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=options&amp;sektion=4">options(4)</a>
para mais informa&ccedil;&otilde;es sobre as especificidades dessas
op&ccedil;&otilde;es. Note tamb&eacute;m que muitas das
op&ccedil;&otilde;es t&ecirc;m suas pr&oacute;prias p&aacute;ginas de
manual -- sempre leia tudo o que h&aacute; dispon&iacute;vel sobre uma
op&ccedil;&atilde;o antes de adicion&aacute;-la ou remov&ecirc;-la do
seu kernel.
d1182 1
a1182 1
<p> 
d1185 13
a1197 14
Neste caso, iremos compilar um kernel que suporte a placa serial
multiporta ISA <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=boca&amp;sektion=4">boca(4)</a>.
Esta placa n&atilde;o est&aacute; no kernel GENERIC, devido a conflitos
com outros drivers.

Outra raz&atilde;o comum para fazer um kernel customizado seria para o
uso de RAIDframe, que &eacute; muito grande para ter no kernel
padr&atilde;o. H&aacute; duas maneiras mais usuais de se fazer um kernel
customizado: copie o arquivo de configura&ccedil;&atilde;o GENERIC com
outro nome e edite-o, ou crie um arquivo "wrapper" que "inclui" o kernel
GENERIC padr&atilde;o e quaisquer outras op&ccedil;&otilde;es que
voc&ecirc; necessite e que n&atilde;o estejam em GENERIC.
Neste caso, nosso arquivo wrapper se parece com isto:
d1205 7
a1211 22
As duas linhas referentes &agrave; placa boca(4) foram copiadas das
linhas comentadas em <tt>GENERIC</tt>, com os IRQs ajustados conforme
necess&aacute;rio. A vantagem de usar esse arquivo "wrapper" &eacute;
que quaisquer mudan&ccedil;as n&atilde;o-relacionadas feitas em GENERIC
s&atilde;o atualizadas automaticamente com qualquer
atualiza&ccedil;&atilde;o de c&oacute;digo-fonte. A desvantagem &eacute;
que dessa forma n&atilde;o se pode remover dispositivos (embora, em
geral, isto seja uma m&aacute; id&eacute;ia, de qualquer forma).

<p>
Outra maneira de gerar um kernel customizado &eacute; fazer uma
c&oacute;pia do arquivo <tt>GENERIC</tt> padr&atilde;o, dando-lhe outro
nome, e ent&atilde;o edit&aacute;-lo conforme necess&aacute;rio.
A desvantagem nesse processo &eacute; que updates futuros feitos
&agrave; configura&ccedil;&atilde;o de GENERIC dever&atilde;o ser
integrados &agrave; sua c&oacute;pia, ou ent&atilde;o voc&ecirc;
ter&aacute; que refazer seu arquivo de configura&ccedil;&atilde;o.

<p>
De qualquer forma, ap&oacute;s fazer um arquivo de
configura&ccedil;&atilde;o para seu kernel customizado, use config(8) e
compile o kernel como documentado <a href="#BldKernel">acima</a>.
d1213 7
d1222 9
a1230 3
Instru&ccedil;&otilde;es completas para cria&ccedil;&atilde;o de seu
pr&oacute;prio kernel customizado est&atilde;o na man page de <a href=
"http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8#EXAMPLES+(kernel">
d1235 1
a1235 1
<h2>5.8 - Configura&ccedil;&atilde;o em tempo de Boot</h2>
d1238 10
a1247 11
Algumas vezes o iniciar o sistema voc&ecirc; pode notar que o kernel
acha seu dispositivo mas talvez com o IRQ errado. E talvez voc&ecirc;
precise usar esse dispositivo de imediato. Bem, sem recompilar o kernel
voc&ecirc; pode usar a configura&ccedil;&atilde;o do kernel em tempo de
boot do OpenBSD. Isto ir&aacute; corrigir seu problema por apenas uma
vez. Se voc&ecirc; reiniciar, voc&ecirc; ter&aacute; que repetir este
procedimento. Ent&atilde;o, isto serve apenas como uma
solu&ccedil;&atilde;o tempor&aacute;ria, e voc&ecirc; deve corrigir o
problema usando <a href="#config">config(8)</a>. Mas seu kernel deve ter
<strong>option BOOT_CONFIG</strong> habilitada, que o kernel GENERIC
tem, na verdade.
d1250 2
a1251 2
A maior parte deste documento pode ser encontrada na man page <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=boot_config&amp;sektion=8">boot_config(8)</a>.
d1254 2
a1255 2
Para bootar no User Kernel Config, ou UKC, use a op&ccedil;&atilde;o -c
em tempo de boot.
d1261 4
a1264 4
Ou qualquer kernel o qual voc&ecirc; queira bootar. Fazendo isso, o
prompt do UKC aparecer&aacute;. A partir daqui, voc&ecirc; pode enviar
comandos diretamente para o kernel especificando dispositivos que
voc&ecirc; queira mudar ou desabilitar ou mesmo habilitar.
d1267 1
a1267 1
Aqui est&aacute; uma lista dos comandos mais comuns do UKC.
d1270 15
a1284 15
<li><tt>add <strong>device</strong></tt> - Adicionar um dispositivo
atrav&eacute;s de c&oacute;pia de algum outro
<li><tt>change <strong>devno | device </strong></tt> - Modificar um ou
mais dispositivos
<li><tt>disable <strong>devno | device </strong></tt> - Desabilitar um
ou mais dispositivos
<li><tt>enable <strong>devno | device </strong></tt> - Habilitar um ou
mais dispositivos
<li><tt>find <strong>devno | device </strong></tt> - Encontrar um ou
mais dispositivos
<li><tt>help</tt> - Curto sum&aacute;rio destes comandos
<li><tt>list</tt> - Listar TODOS os dispositivos conhecidos
<li><tt>exit/quit</tt> - Continuar o Boot 
<li><tt>show <strong>[attr [val]]</strong></tt> - Mostrar dispositivos
com um atributo, ou opcionalmente com um valor especificado
d1288 5
a1292 5
Uma vez que voc&ecirc; tenha configurado seu kernel, use <tt>quit</tt>
ou <tt>exit</tt> e continue o boot.
Ap&oacute;s faz&ecirc;-lo, voc&ecirc; deve tornar a
modifica&ccedil;&atilde;o permanente na imagem do seu kernel, como
descrito em <a href="#config">Using config(8) to change your kernel</a>.
d1297 1
a1297 1
<h2>5.9 - Usando config(8) para modificar seu kernel</h2>
d1299 20
a1318 23
As op&ccedil;&otilde;es <b>-e</b> e <b>-u</b> de
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8">config(8)</a>
podem ser extremamente &uacute;teis e evitar perda de tempo compilando
seu kernel. A flag <b>-e</b> permite que voc&ecirc; entre no UKC ou User
Kernel Config em um sistema rodando. Estas mudan&ccedil;as ir&atilde;o
acontecer no pr&oacute;ximo reboot. A flag <b>-u</b> testa se alguma
mudan&ccedil;a foi feita ao kernel atual durante o boot, significando
que voc&ecirc; usou <b>boot -c</b> para entrar no UKC durante o boot do
sistema.

<p>
O exemplo a seguir mostra como desabilitar os dispositivos ep* no
kernel. Por seguran&ccedil;a voc&ecirc; deve usar a op&ccedil;&atilde;o
<b>-o</b> que escreve as modifica&ccedil;&otilde;es para o arquivo
especificado. Por exemplo: <strong>config -e -o bsd.new /bsd</strong>
ir&aacute; escrever as modifica&ccedil;&otilde;es para bsd.new. O
exemplo n&atilde;o usa a op&ccedil;&atilde;o <b>-o</b>, ent&atilde;o as
modifica&ccedil;&otilde;es s&atilde;o ignoradas, e n&atilde;o s&atilde;o
escritas no bin&aacute;rio do kernel. Para mais
informa&ccedil;&otilde;es relativas a erros e mensagens de alerta leia a
man page de <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=config&amp;sektion=8">config(8)</a>.
d1347 2
a1348 4
  0 audio* at
sb0|sb*|gus0|pas0|sp0|ess*|wss0|wss*|ym*|eap*|eso*|sv*|neo*|cmpci*
|clcs*|clct*|auich*|autri*|auvia*|fms*|uaudio*|maestro*|esa*|yds*|emu*
flags 0x0
d1350 1
a1350 2
  2 nsphy* at
aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
d1353 1
a1353 2
  3 nsphyter* at
aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|
d1356 1
a1356 2
  4 qsphy* at
aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
d1359 1
a1359 2
  5 inphy* at
aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
d1362 1
a1362 2
  6 iophy* at
aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
d1365 1
a1365 2
  7 eephy* at
aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
d1368 1
a1368 2
  8 exphy* at
aue*|xe*|ef*|gx*|stge*|bge*|nge*|sk*|ste*|sis*|sf*|wb*|tx*|tl*|vr*
d1386 9
a1394 11
No exemplo acima, todos os dispositivos ep* est&atilde;o desabilitados
no kernel e n&atilde;o ser&atilde;o pesquisados. Assim como em algumas
situa&ccedil;&otilde;es nas quais se usa o UKC durante o boot,
atrav&eacute;s de <b>boot -c</b>, voc&ecirc; precisa que essas
modifica&ccedil;&otilde;es sejam gravadas permanentemente. Para fazer
isso voc&ecirc; deve usar a op&ccedil;&atilde;o <b>-u</b>.
No exemplo a seguir, o computador foi iniciado no UKC e o dispositivo
wi(4) foi desabilitado. Como modifica&ccedil;&otilde;es com boot -c
N&Atilde;O s&atilde;o permanentes, estas modifica&ccedil;&otilde;es
devem ser gravadas. Este exemplo grava as modifica&ccedil;&otilde;es
feitas com boot -c em um novo bin&aacute;rio de kernel com nome bsd.new.
d1398 1
a1399 1
    deraadt@@i386.openbsd.org:/usr/src/sys/arch/i386/compile/GENERIC
d1409 1
a1409 1
<h2>5.10 - Obtendo output mais extenso durante o boot</h2>
d1411 6
a1416 6
Obter output mais extenso (verbose) pode ser muito &uacute;til ao tentar
debugar problemas durante o boot. Se voc&ecirc; tem um problema em que
seu disquete de boot n&atilde;o inicia e precisa obter mais
informa&ccedil;&otilde;es, simplesmente reinicie. Quanto voc&ecirc;
chegar ao prompt de &quot;boot&gt;&quot;, efetue o boot com boot -c.
Isto ir&aacute; lhe levar ao UKC&gt;, ent&atilde;o digite:
d1425 1
a1425 2
Agora voc&ecirc; ter&aacute; um output extremamente extenso durante o
boot.
d1431 8
a1438 8
<h2>5.11 - Problemas comuns, dicas e perguntas ao compilar e
construir</h2>
Na maior parte das vezes, problemas no processo de
compila&ccedil;&atilde;o s&atilde;o causados por n&atilde;o seguir as
instru&ccedil;&otilde;es acima cuidadosamente.
Ocasionalmente, h&aacute; problemas reais ao compilar <i>-current</i> a
partir do snapshot mais recente, mas falhas ao compilar <i>-release</i>
ou <i>-stable</i> s&atilde;o sempre erro do usu&aacute;rio.
d1441 1
a1441 1
A maioria dos problemas se encaixa em algum dos seguintes:
d1443 7
a1449 8
<li>N&atilde;o come&ccedil;ar do <a href="#BldBinary">bin&aacute;rio
apropriado</a>, incluindo tentar upgrade a partir dos fontes ou
assumindo que um snapshot de uma semana atr&aacute;s &eacute; "recente o
suficiente".
<li><a href="#BldGetSrc">Fazer o checkout</a> do ramo errado da
&aacute;rvore.
<li>N&atilde;o seguir o <a href="faq5.html">processo</a>.
<li>Tentar <a href="#Why">customizar</a> ou "otimizar" seu sistema.
d1452 2
a1453 2
Aqui est&atilde;o alguns problemas adicionais que voc&ecirc; pode
encontrar, no entanto:
d1456 1
a1456 2
<h3>5.11.1 - A compila&ccedil;&atilde;o parou com um erro "Signal
11"</h3>
d1458 9
a1466 10
<p> Compilar o OpenBSD e outros programas a partir dos fontes &eacute;
uma tarefa que exige do hardware muito al&eacute;m do que a maioria das
outras, fazendo uso intenso de CPU, disco e mem&oacute;ria. Como
resultado, se voc&ecirc; tiver hardware com problemas, o momento mais
prov&aacute;vel para um problema aparecer &eacute; durante a
compila&ccedil;&atilde;o. Falhas com Signal 11 s&atilde;o
<i>tipicamente</i> causadas por problemas de hardware, muito
frequentemente por problemas de mem&oacute;ria, mas tamb&eacute;m podem
ser de CPU, placa-m&atilde;e, ou relacionadas a superaquecimento. Seu
sistema pode ser muito est&aacute;vel em outras atividadaes, mas incapaz
d1470 5
a1474 5
Voc&ecirc; provavelmente ir&aacute; achar melhor consertar ou substituir
os componentes problem&aacute;ticos, j&aacute; que os problemas podem se
revelar de outras formas no futuro. Se voc&ecirc; tiver hardware que
realmente deseja utilizar e n&atilde;o causa nenhum outro tipo de
problema, simplesmente instale um snapshot ou release.
d1477 2
a1478 2
Para muito mais informa&ccedil;&otilde;es, veja o
<a href="http://www.bitwizard.nl/sig11/">Sig11 FAQ</a>.
d1481 2
a1482 2
<h3>5.11.2 - "make build" falha com a mensagem "cannot open output file
snake: is a directory"</h3>
d1484 1
a1484 1
Isto &eacute; resultado de dois erros diferentes: 
d1486 13
a1498 15
<li><b>Voc&ecirc; n&atilde;o obteve ou atualizou sua &aacute;rvore CVS
corretamente.</b> Ao fazer uma opera&ccedil;&atilde;o de checkout CVS,
voc&ecirc; deve usar a op&ccedil;&atilde;o "<tt>-P</tt>", e ao atualizar
sua &aacute;rvore de c&oacute;digo com o CVS, deve usar as
op&ccedil;&otilde;es "<tt>-Pd</tt>" no <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1"
>cvs(1)</a>, como documentado <a href="#BldGetSrc">acima</a>.
Essas op&ccedil;&otilde;es asseguram que novos diret&oacute;rios
s&atilde;o adicionados e removidos da &aacute;rvore de acordo com a
evolu&ccedil;&atilde;o do OpenBSD.

<li><b>Voc&ecirc; n&atilde;o criou corretamente o diret&oacute;rio
<tt>obj</tt> antes da compila&ccedil;&atilde;o.</b> Compilar a
&aacute;rvore sem um diret&oacute;rio <tt>/usr/obj</tt> n&atilde;o
&eacute; suportado.
d1501 3
a1503 3
&Eacute; importante seguir cuidadosamente as instru&ccedil;&otilde;es ao
<a href="#BldGetSrc">obter</a> e <a href="#Bld">compilar</a> sua
&aacute;rvore.
d1506 1
a1506 1
<h3>5.11.3 - Meu sistema sem IPv6 n&atilde;o funciona!</h3>
d1508 5
a1512 6
Por favor n&atilde;o fa&ccedil;a modifica&ccedil;&otilde;es ao
sistema-base cujas implica&ccedil;&otilde;es voc&ecirc; n&atilde;o
compreende.
Uma "pequena" mudan&ccedil;a no kernel pode ter grande impacto em todo o
restante do sistema.
Por favor leia <a href="#Why">isto</a> novamente.
d1516 2
a1517 9
<h3>5.11.4 - Oops! Esqueci de criar o diret&oacute;rio <tt>/usr/obj</tt>
primeiro!</h3>

Ao fazer um "make build" antes de fazer um "make obj", voc&ecirc;
terminar&aacute; tendo todos os arquivos objeto espalhados em seu
diret&oacute;rio <tt>/usr/src</tt>. Isto n&atilde;o &eacute; bom.
Se voc&ecirc; quer evitar refazer o download de toda a &aacute;rvore src
novamente, voc&ecirc; pode tentar o seguinte para limpar os arquivos
obj:
d1519 5
d1533 5
a1537 7
<h3>5.11.5 - Dica: Coloque <tt>/usr/obj</tt> em sua pr&oacute;pria
parti&ccedil;&atilde;o</h3>
Se voc&ecirc; compila com frequ&ecirc;ncia, voc&ecirc; pode achar mais
r&aacute;pido colocar o <tt>/usr/obj</tt> em uma parti&ccedil;&atilde;o
pr&oacute;pria.
O benef&iacute;cio &eacute; simples, &eacute; tipicamente mais
r&aacute;pido fazer:
d1546 7
a1552 9
<h3>5.11.6 - Como n&atilde;o compilar certas partes da &aacute;rvore de
c&oacute;digo?</h3>
Algumas vezes, voc&ecirc; pode querer n&atilde;o compilar certas partes
da &aacute;rvore, tipicamente porque voc&ecirc; instalou um substituto
para uma aplica&ccedil;&atilde;o inclusa a partir dos pacotes, ou quer
fazer uma vers&atilde;o "menor" por qualquer motivo.
A solu&ccedil;&atilde;o para isto &eacute; usar a op&ccedil;&atilde;o
SKIPDIR de <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=mk.conf&amp;sektion=5">/etc/mk.conf</a>.
d1555 2
a1556 4
Nota: &eacute; poss&iacute;vel fazer um sistema inutiliz&aacute;vel
desta forma.
Os resultados desta op&ccedil;&atilde;o n&atilde;o s&atilde;o suportados
pelo projeto OpenBSD.
d1559 2
a1560 3
<h3>5.11.7 - Onde posso aprender mais sobre o processo de
compila&ccedil;&atilde;o?</h3>
Aqui est&atilde;o algumas outras fontes:
d1562 5
a1566 9
<li><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=release&amp;sektion=8">release(8)</a>
<li><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=afterboot&amp;sektion=8#COMPILING+A">afterboot(8)</a>
<li><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=mk.conf&amp;sektion=5">mk.conf(5)</a>
<li><a
href="http://www.openbsd.org/cgi-bin/cvsweb/src/Makefile"><tt>/usr/src/Makefile</tt></a>
<li><a href="../../stable.html">Patch Branches</a> (<i>-stable</i>)
d1572 2
a1573 2
<h3>5.11.8 - N&atilde;o vi nenhum snapshot no servidor FTP. Para onde
eles foram?</h3>
d1576 2
a1577 2
Snapshots podem ser removidos ao se tornar antigos (ou irrelevantes) ou
pr&oacute;ximo do momento de um novo <i>-release</i>.
d1580 1
a1580 1
<h3>5.11.9 - Como dar bootstrap em uma nova vers&atilde;o do compilador
d1583 2
a1584 2
Voc&ecirc; realmente deveria apenas <a href="#BldBinary">instalar o
snapshot mais recente</a>.
d1587 4
a1590 5
O OpenBSD agora suporta dois compiladores em sua &aacute;rvore, gcc
v3.3.5 usado pela maioria das plataformas, mas tamb&eacute;m o gcc
v2.95.3 usado por algumas poucas plataformas que n&atilde;o foram
convertidas ainda, ou que talvez nunca sejam convertidas devido &agrave;
falta de suporte do gcc3 ou baixa performance do gcc3.
d1593 1
a1593 1
Os dois compiladores est&atilde;o em partes diferentes da &aacute;rvore:
d1600 7
a1606 8
Porque atualizar um compilador &eacute; um pouco de um problema
o-ovo-ou-a-galinha, mudan&ccedil;as ao compilador interno &agrave;
&aacute;rvore requerem alguma aten&ccedil;&atilde;o extra. Voc&ecirc;
tem que compilar o compilador duas vezes -- a primeira
compila&ccedil;&atilde;o produz um compilador que gera c&oacute;digo
novo mas opera com c&oacute;digo gerado pelo compilador antigo, e a
segunda compila&ccedil;&atilde;o gera um compilador completamente novo.
No geral, voc&ecirc; ir&aacute; querer realizar o seguinte procedimento:
d1609 1
a1609 1
    <b>Se sua plataforma usa o gcc 2.95.3:</b>
d1613 1
a1613 1
    <b>Se sua plataforma usa o gcc 3.3.5:</b>
d1617 1
a1617 2
    <b>Procedimento comum de compila&ccedil;&atilde;o para v3.3.5 ou
v2.95.3</b>
d1630 1
a1630 2
E ent&atilde;o execute normalmente um <a href="#BldUserland">make
build</a>.
d1633 2
a1634 2
<h3>5.11.10 - Qual &eacute; a melhor maneira de atualizar os
diret&oacute;rios <tt>/etc</tt>, <tt>/var</tt>, e <tt>/dev</tt>?</h3>
d1636 8
a1643 9
<p>Como pol&iacute;tica, software da &aacute;rvore do OpenBSD n&atilde;o
modifica os arquivos do <tt>/etc</tt> automaticamente.
Isto significa que <i>sempre</i> fica a cargo do administrador fazer as
modifica&ccedil;&otilde;es necess&aacute;rias l&aacute;.
Upgrades n&atilde;o s&atilde;o exce&ccedil;&atilde;o.
Para atualizar arquivos nesses diret&oacute;rios, primeiro determine
quais mudan&ccedil;as ocorreram aos arquivos base (da
distribui&ccedil;&atilde;o), e ent&atilde;o reaplique manualmente estas
modifica&ccedil;&otilde;es.
d1646 2
a1647 2
Por exemplo, para ver os arquivos da &aacute;rvore que mudaram mais
recentemente, fa&ccedil;a:
d1655 4
a1658 4
<p>Para ver todas as mudan&ccedil;as feitas ao <tt>/etc</tt> entre
vers&otilde;es arbitr&aacute;rias do OpenBSD, voc&ecirc; pode usar o <a
href="../../anoncvs.html">CVS</a>.
Por exemplo, para ver as mudan&ccedil;as entre 4.3 e 4.4 fa&ccedil;a:
d1665 1
a1665 2
Para ver as mudan&ccedil;as entre 4.4 e <i>-current</i> ("HEAD"),
fa&ccedil;a:
d1671 7
a1677 8
O script <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=MAKEDEV&amp;sektion=8&amp;arch=i386">/dev/MAKEDEV</a>
n&atilde;o &eacute; atualizado automaticamente como parte do processo de
make build, mas &eacute; instalado como parte de um <a
href="#BldBinary">upgrade bin&aacute;rio</a>.
Como regra geral, &eacute; uma boa id&eacute;ia copiar (se
necess&aacute;rio) e rodar este script a partir de sua &aacute;rvore de
c&oacute;digo ao fazer um upgrade:
d1686 2
a1687 3
Uma vez que voc&ecirc; tenha identificado as modifica&ccedil;&otilde;es,
reaplique-as &agrave; sua &aacute;rvore local, preservando qualquer
configura&ccedil;&atilde;o local que voc&ecirc; tenha feito.
d1690 2
a1691 2
Mudan&ccedil;as t&iacute;picas feitas ao <tt>/etc</tt> a serem
observadas entre vers&otilde;es incluem:
d1694 1
a1694 2
<li>Adi&ccedil;&otilde;es a <tt>/etc/protocols</tt> e
<tt>/etc/services</tt></li>
d1696 2
a1697 3
<li>Mudan&ccedil;as aos cron jobs padr&atilde;o. Veja
<tt>/etc/daily</tt>,
  <tt>/etc/weekly</tt>, <tt>/etc/monthly</tt>, e <tt>/etc/security</tt>
d1699 4
a1702 6
<li>Mudan&ccedil;as a dispositivos, veja acima
<li>Mudan&ccedil;as &agrave; hierarquia de arquivos em
<tt>/etc/mtree</tt>, veja
  <a href="#Hierarchy">abaixo</a>
<li>Novos usu&aacute;rios (<tt>/etc/passwd</tt>) e grupos
(<tt>/etc/group</tt>)
d1706 4
a1709 3
Essas mudan&ccedil;as s&atilde;o agrupadas em <a
href="../upgrade44.html">upgrade44.html</a> (indo para 4.4-release) or
<a href="../current.html">current.html</a> (indo para <i>-current</i>).
d1713 2
a1714 2
<h3>5.11.11 - H&aacute; alguma maneira f&aacute;cil de fazer todas as
modifica&ccedil;&otilde;es na hierarquia do sistema de arquivos?</h3>
d1717 7
a1723 9
De tempos em tempos, arquivos ou diret&oacute;rios s&atilde;o
adicionados a, ou removidos da <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=hier&amp;sektion=7">hierarchy</a>
de arquivos.
Al&eacute;m disso, informa&ccedil;&otilde;es de propriedade para
por&ccedil;&otilde;es do sistema de arquivos podem mudar. Uma maneira
f&aacute;cil de assegurar que sua hierarquia de sistema de arquivos
est&aacute; atualizada &eacute; usar a ferramenta <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=mtree&amp;sektion=8">mtree(8)</a>.
d1726 1
a1726 2
Primeiro, obtenha os fontes mais recentes, e ent&atilde;o fa&ccedil;a o
seguinte:
d1736 1
a1736 1
Sua hierarquia de arquivos deve estar atualizada agora.
d1739 17
a1755 20
<h3>5.11.12 - Posso efetuar compila&ccedil;&atilde;o cruzada
(cross-compile)? Por que n&atilde;o?</h3>
Ferramentas para compila&ccedil;&atilde;o cruzada est&atilde;o no
sistema, para uso dos desenvolvedores trabalhando em uma nova
plataforma.
Contudo, elas n&atilde;o s&atilde;o mantidas para uso geral.

<p>
Quando os desenvolvedores oferecem suporte a uma nova plataforma, um dos
primeiros grandes testes &eacute; uma compila&ccedil;&atilde;o nativa.
Compilar o sistema a partir dos fontes exige consideravelmente do SO e
da m&aacute;quina, e faz um excelente trabalho em testar qu&atilde;o bem
o sistema realmente est&aacute; operando.
Por esta raz&atilde;o, o OpenBSD faz todo o trabalho de
compila&ccedil;&atilde;o na plataforma na qual a vers&atilde;o
est&aacute; sendo usada, tamb&eacute;m conhecido como
"compila&ccedil;&atilde;o nativa". Sem compila&ccedil;&atilde;o nativa,
&eacute; muito mais dif&iacute;cil ter certeza de que as v&aacute;rias
plataformas est&atilde;o na verdade operando confiavelmente, e
n&atilde;o apenas bootando.
d1759 3
a1761 4
<a href= "index.html">[&Iacute;ndice do FAQ]</a>
<a href= "faq4.html">[Para a Se&ccedil;&atilde;o 4 - Guia de
Instala&ccedil;&atilde;o]</a>
<a href= "faq6.html">[Para a Se&ccedil;&atilde;o 6 - Rede]</a>
d1766 1
a1766 2
<a href= "index.html"><img height= "24" width= "24" src=
"../../images/back.gif" border= "0" alt= "[back]"></a>
d1772 1
a1772 1
$Translation: faq5.html,v 1.2 2009/02/25 14:24:53 dsantos Exp $<br>
@

