head	1.163;
access;
symbols;
locks; strict;
comment	@# @;


1.163
date	2017.04.25.17.09.03;	author tj;	state Exp;
branches;
next	1.162;
commitid	quEEsNwRDa3UJoxH;

1.162
date	2017.04.11.03.28.01;	author tj;	state Exp;
branches;
next	1.161;
commitid	86nLlctMwACj6lFT;

1.161
date	2017.04.06.17.32.03;	author tj;	state Exp;
branches;
next	1.160;
commitid	yda6ml60msS35LV5;

1.160
date	2017.04.01.19.32.27;	author tj;	state Exp;
branches;
next	1.159;
commitid	O1stS7HsNgcHfhgC;

1.159
date	2017.03.14.08.41.59;	author tb;	state Exp;
branches;
next	1.158;
commitid	X16FNy9cWiEQon9D;

1.158
date	2017.03.14.01.53.25;	author tj;	state Exp;
branches;
next	1.157;
commitid	Hz2jNFKrOts9pzyb;

1.157
date	2017.03.12.19.37.20;	author tj;	state Exp;
branches;
next	1.156;
commitid	YxsE24jewBSQCNk7;

1.156
date	2017.03.11.17.31.02;	author tj;	state Exp;
branches;
next	1.155;
commitid	Ef0cuRG65chNX7L0;

1.155
date	2017.03.01.21.35.40;	author tj;	state Exp;
branches;
next	1.154;
commitid	2xb1jQ8PCujyV7Ca;

1.154
date	2017.03.01.20.15.39;	author tj;	state Exp;
branches;
next	1.153;
commitid	UdxEVD3DMCKreymu;

1.153
date	2017.03.01.18.57.15;	author tj;	state Exp;
branches;
next	1.152;
commitid	yckRbuK4BFuvx8U5;

1.152
date	2017.02.28.04.13.05;	author tb;	state Exp;
branches;
next	1.151;
commitid	uD7rIsWqvlsGOUft;

1.151
date	2017.02.28.01.14.59;	author tj;	state Exp;
branches;
next	1.150;
commitid	rYSE2tvtuzHimPFB;

1.150
date	2017.02.09.17.22.19;	author tb;	state Exp;
branches;
next	1.149;
commitid	T7p2qUf6sgevbhcO;

1.149
date	2016.12.31.21.51.45;	author tj;	state Exp;
branches;
next	1.148;
commitid	jBXLOIa2Xosit035;

1.148
date	2016.12.06.20.41.33;	author awolk;	state Exp;
branches;
next	1.147;
commitid	B9aKYnEjF5LwleVt;

1.147
date	2016.10.25.14.16.32;	author tb;	state Exp;
branches;
next	1.146;
commitid	gdC9fv4IZLQg46A7;

1.146
date	2016.10.23.02.34.00;	author tb;	state Exp;
branches;
next	1.145;
commitid	anZKsEjonUuB9i7u;

1.145
date	2016.10.16.19.11.30;	author tb;	state Exp;
branches;
next	1.144;
commitid	XJczuXy5Z9mhvZdx;

1.144
date	2016.09.19.23.31.30;	author tj;	state Exp;
branches;
next	1.143;
commitid	Ffom6e3tkDwi6vJf;

1.143
date	2016.09.16.01.33.48;	author tj;	state Exp;
branches;
next	1.142;
commitid	YdNQeKdvmDUwNhfy;

1.142
date	2016.09.03.18.37.21;	author tj;	state Exp;
branches;
next	1.141;
commitid	3AYsv50Sr4V5vEyv;

1.141
date	2016.09.01.12.05.14;	author tj;	state Exp;
branches;
next	1.140;
commitid	246a4S45DY24D3JM;

1.140
date	2016.08.17.06.32.14;	author tb;	state Exp;
branches;
next	1.139;
commitid	snFRLr2YcAxiXbbX;

1.139
date	2016.08.15.02.22.13;	author tb;	state Exp;
branches;
next	1.138;
commitid	3DeixV5YkPOb78RN;

1.138
date	2016.06.18.02.24.32;	author tj;	state Exp;
branches;
next	1.137;
commitid	IZNDXjoQTSwZtVYE;

1.137
date	2016.06.17.10.59.38;	author tb;	state Exp;
branches;
next	1.136;
commitid	TiulYz0RSPRblJ5t;

1.136
date	2016.05.16.16.42.51;	author tj;	state Exp;
branches;
next	1.135;
commitid	8aF9ffgysGtwssSc;

1.135
date	2016.04.21.00.45.48;	author tj;	state Exp;
branches;
next	1.134;
commitid	HtZ8nUjqaAunZXL2;

1.134
date	2016.04.17.21.31.53;	author tj;	state Exp;
branches;
next	1.133;
commitid	iIlpeQWLXUolwtTP;

1.133
date	2016.04.16.00.30.41;	author tj;	state Exp;
branches;
next	1.132;
commitid	rTxoenHHaeutOff1;

1.132
date	2016.04.15.22.19.21;	author tj;	state Exp;
branches;
next	1.131;
commitid	SbVa2HBPaB5JhGVM;

1.131
date	2016.04.15.20.39.49;	author tb;	state Exp;
branches;
next	1.130;
commitid	jwteSMEb4rFzI8UA;

1.130
date	2016.04.15.16.52.56;	author tb;	state Exp;
branches;
next	1.129;
commitid	5UlSQX0AipCExBie;

1.129
date	2016.04.15.16.42.34;	author tj;	state Exp;
branches;
next	1.128;
commitid	4iGhbtsBAhiGE70P;

1.128
date	2016.03.29.18.05.58;	author tb;	state Exp;
branches;
next	1.127;
commitid	tMiY4YsWwXJd5WDP;

1.127
date	2016.03.29.01.27.39;	author tb;	state Exp;
branches;
next	1.126;
commitid	4Y8oU6GBrSY1UOfW;

1.126
date	2016.03.27.19.52.09;	author sthen;	state Exp;
branches;
next	1.125;
commitid	hi2ObFv9LGB98JY5;

1.125
date	2016.03.22.10.54.47;	author sthen;	state Exp;
branches;
next	1.124;
commitid	cyODCFvIgxpUoVc0;

1.124
date	2016.03.21.08.24.24;	author tb;	state Exp;
branches;
next	1.123;
commitid	FszPYViUktw26pO0;

1.123
date	2016.03.21.05.46.21;	author beck;	state Exp;
branches;
next	1.122;
commitid	zEx6zFkNSFFExu0v;

1.122
date	2016.03.02.20.10.23;	author tj;	state Exp;
branches;
next	1.121;
commitid	HlXAZi0wQ2DpQKut;

1.121
date	2016.02.20.22.59.20;	author tj;	state Exp;
branches;
next	1.120;
commitid	8IPwAs1etKEHjS9q;

1.120
date	2016.02.07.02.31.34;	author tj;	state Exp;
branches;
next	1.119;
commitid	KKHJA1wsUMFmsHvy;

1.119
date	2016.01.28.22.31.00;	author tj;	state Exp;
branches;
next	1.118;
commitid	ti0Brxgd61lUCuZq;

1.118
date	2016.01.28.15.38.01;	author tj;	state Exp;
branches;
next	1.117;
commitid	HPUmE6Ho2Qx0BgXp;

1.117
date	2016.01.21.21.21.36;	author tj;	state Exp;
branches;
next	1.116;
commitid	U1kXm2wYWtDkTNUa;

1.116
date	2015.11.23.03.15.50;	author deraadt;	state Exp;
branches;
next	1.115;
commitid	Wtea3jEE87XPmavu;

1.115
date	2015.11.16.09.18.35;	author sthen;	state Exp;
branches;
next	1.114;
commitid	nOeq6qwsr7bgZxwb;

1.114
date	2015.11.02.03.35.44;	author nick;	state Exp;
branches;
next	1.113;
commitid	OrS7GF6gOep6l0z3;

1.113
date	2015.10.18.19.42.11;	author nick;	state Exp;
branches;
next	1.112;
commitid	HJnmhJAcdZq1TNFu;

1.112
date	2015.09.27.19.22.58;	author nick;	state Exp;
branches;
next	1.111;
commitid	kec0dEDsndf3xc3T;

1.111
date	2015.07.21.15.45.05;	author ajacoutot;	state Exp;
branches;
next	1.110;
commitid	GL1ki5hCpA7qewa7;

1.110
date	2015.07.13.06.08.56;	author ajacoutot;	state Exp;
branches;
next	1.109;
commitid	QFv3gRK5dABZ9Teh;

1.109
date	2015.07.02.05.49.04;	author bentley;	state Exp;
branches;
next	1.108;
commitid	AP3UllesavMDEUhQ;

1.108
date	2015.05.11.11.18.30;	author sthen;	state Exp;
branches;
next	1.107;
commitid	wRrXxcro6dFYiwF8;

1.107
date	2015.04.30.23.38.57;	author nick;	state Exp;
branches;
next	1.106;
commitid	uIacNW3dhb39XNuY;

1.106
date	2015.04.25.18.24.10;	author nick;	state Exp;
branches;
next	1.105;
commitid	SUfGJh7ohhDBy5gb;

1.105
date	2015.02.27.09.16.26;	author sthen;	state Exp;
branches;
next	1.104;
commitid	ZNEekxrBCeuFbizc;

1.104
date	2014.12.01.09.49.46;	author bentley;	state Exp;
branches;
next	1.103;
commitid	VffT7s4nM0NK88NG;

1.103
date	2014.11.01.13.42.51;	author nick;	state Exp;
branches;
next	1.102;
commitid	ZgANDuwHdulMn8Ng;

1.102
date	2014.10.22.16.47.46;	author schwarze;	state Exp;
branches;
next	1.101;
commitid	1onCgyN92tjYy7nj;

1.101
date	2014.05.01.15.01.14;	author nick;	state Exp;
branches;
next	1.100;

1.100
date	2014.03.30.19.13.39;	author nick;	state Exp;
branches;
next	1.99;

1.99
date	2014.03.21.11.31.05;	author sthen;	state Exp;
branches;
next	1.98;

1.98
date	2014.03.10.10.48.29;	author espie;	state Exp;
branches;
next	1.97;

1.97
date	2013.11.11.16.43.33;	author jca;	state Exp;
branches;
next	1.96;

1.96
date	2013.11.01.14.05.57;	author nick;	state Exp;
branches;
next	1.95;

1.95
date	2013.09.02.19.57.59;	author tobias;	state Exp;
branches;
next	1.94;

1.94
date	2013.08.28.11.21.41;	author jca;	state Exp;
branches;
next	1.93;

1.93
date	2013.08.27.15.49.44;	author jca;	state Exp;
branches;
next	1.92;

1.92
date	2013.08.27.11.21.12;	author nick;	state Exp;
branches;
next	1.91;

1.91
date	2013.05.01.13.16.32;	author nick;	state Exp;
branches;
next	1.90;

1.90
date	2013.03.02.08.29.43;	author espie;	state Exp;
branches;
next	1.89;

1.89
date	2013.01.13.17.52.08;	author rpe;	state Exp;
branches;
next	1.88;

1.88
date	2012.11.06.15.00.55;	author sthen;	state Exp;
branches;
next	1.87;

1.87
date	2012.11.01.15.05.30;	author nick;	state Exp;
branches;
next	1.86;

1.86
date	2012.05.01.14.35.15;	author nick;	state Exp;
branches;
next	1.85;

1.85
date	2012.03.27.00.22.22;	author nick;	state Exp;
branches;
next	1.84;

1.84
date	2012.01.05.10.48.51;	author sthen;	state Exp;
branches;
next	1.83;

1.83
date	2011.12.21.19.47.53;	author ajacoutot;	state Exp;
branches;
next	1.82;

1.82
date	2011.11.22.03.39.26;	author krw;	state Exp;
branches;
next	1.81;

1.81
date	2011.11.22.01.53.22;	author krw;	state Exp;
branches;
next	1.80;

1.80
date	2011.11.01.10.52.28;	author nick;	state Exp;
branches;
next	1.79;

1.79
date	2011.06.16.12.45.58;	author lum;	state Exp;
branches;
next	1.78;

1.78
date	2011.05.05.12.26.50;	author sthen;	state Exp;
branches;
next	1.77;

1.77
date	2011.05.01.13.08.58;	author nick;	state Exp;
branches;
next	1.76;

1.76
date	2010.11.01.09.48.45;	author nick;	state Exp;
branches;
next	1.75;

1.75
date	2010.07.28.07.11.26;	author ajacoutot;	state Exp;
branches;
next	1.74;

1.74
date	2010.07.28.05.33.43;	author steven;	state Exp;
branches;
next	1.73;

1.73
date	2010.07.26.00.14.15;	author william;	state Exp;
branches;
next	1.72;

1.72
date	2010.07.17.17.26.06;	author ajacoutot;	state Exp;
branches;
next	1.71;

1.71
date	2010.07.17.09.02.47;	author ajacoutot;	state Exp;
branches;
next	1.70;

1.70
date	2010.06.08.01.01.42;	author nick;	state Exp;
branches;
next	1.69;

1.69
date	2010.05.26.21.15.11;	author sthen;	state Exp;
branches;
next	1.68;

1.68
date	2010.05.20.02.35.41;	author nick;	state Exp;
branches;
next	1.67;

1.67
date	2010.05.19.12.41.03;	author nick;	state Exp;
branches;
next	1.66;

1.66
date	2009.10.26.20.35.31;	author pvalchev;	state Exp;
branches;
next	1.65;

1.65
date	2009.10.19.23.37.46;	author nick;	state Exp;
branches;
next	1.64;

1.64
date	2009.10.16.19.07.37;	author nick;	state Exp;
branches;
next	1.63;

1.63
date	2009.10.13.14.43.30;	author landry;	state Exp;
branches;
next	1.62;

1.62
date	2009.10.13.10.05.24;	author steven;	state Exp;
branches;
next	1.61;

1.61
date	2009.10.11.02.43.42;	author nick;	state Exp;
branches;
next	1.60;

1.60
date	2009.07.31.05.14.54;	author steven;	state Exp;
branches;
next	1.59;

1.59
date	2009.07.03.17.58.49;	author jasper;	state Exp;
branches;
next	1.58;

1.58
date	2009.06.18.16.12.34;	author sthen;	state Exp;
branches;
next	1.57;

1.57
date	2009.06.12.13.42.45;	author landry;	state Exp;
branches;
next	1.56;

1.56
date	2009.05.03.21.23.58;	author steven;	state Exp;
branches;
next	1.55;

1.55
date	2009.04.30.17.19.11;	author nick;	state Exp;
branches;
next	1.54;

1.54
date	2008.11.12.22.27.21;	author steven;	state Exp;
branches;
next	1.53;

1.53
date	2008.11.12.02.59.41;	author nick;	state Exp;
branches;
next	1.52;

1.52
date	2008.10.31.16.54.41;	author nick;	state Exp;
branches;
next	1.51;

1.51
date	2008.07.04.10.54.24;	author espie;	state Exp;
branches;
next	1.50;

1.50
date	2008.05.01.20.54.49;	author steven;	state Exp;
branches;
next	1.49;

1.49
date	2008.05.01.06.13.23;	author steven;	state Exp;
branches;
next	1.48;

1.48
date	2008.04.30.22.36.24;	author steven;	state Exp;
branches;
next	1.47;

1.47
date	2008.03.01.11.31.08;	author steven;	state Exp;
branches;
next	1.46;

1.46
date	2008.01.23.15.12.35;	author saad;	state Exp;
branches;
next	1.45;

1.45
date	2008.01.02.13.43.49;	author tobias;	state Exp;
branches;
next	1.44;

1.44
date	2007.12.27.02.09.17;	author nick;	state Exp;
branches;
next	1.43;

1.43
date	2007.11.13.10.58.28;	author espie;	state Exp;
branches;
next	1.42;

1.42
date	2007.11.04.17.06.49;	author steven;	state Exp;
branches;
next	1.41;

1.41
date	2007.11.02.20.48.48;	author steven;	state Exp;
branches;
next	1.40;

1.40
date	2007.09.02.13.28.55;	author steven;	state Exp;
branches;
next	1.39;

1.39
date	2007.08.26.10.22.33;	author espie;	state Exp;
branches;
next	1.38;

1.38
date	2007.07.09.17.42.06;	author aanriot;	state Exp;
branches;
next	1.37;

1.37
date	2007.05.04.09.16.15;	author steven;	state Exp;
branches;
next	1.36;

1.36
date	2007.05.04.05.29.56;	author steven;	state Exp;
branches;
next	1.35;

1.35
date	2007.05.02.14.34.42;	author ajacoutot;	state Exp;
branches;
next	1.34;

1.34
date	2007.05.01.20.05.11;	author steven;	state Exp;
branches;
next	1.33;

1.33
date	2007.05.01.16.27.46;	author nick;	state Exp;
branches;
next	1.32;

1.32
date	2006.11.06.16.01.27;	author pvalchev;	state Exp;
branches;
next	1.31;

1.31
date	2006.11.04.00.35.48;	author nick;	state Exp;
branches;
next	1.30;

1.30
date	2006.11.01.05.06.03;	author steven;	state Exp;
branches;
next	1.29;

1.29
date	2006.08.11.20.28.59;	author steven;	state Exp;
branches;
next	1.28;

1.28
date	2006.05.20.11.52.58;	author steven;	state Exp;
branches;
next	1.27;

1.27
date	2006.05.01.06.14.46;	author steven;	state Exp;
branches;
next	1.26;

1.26
date	2006.01.24.02.24.24;	author nick;	state Exp;
branches;
next	1.25;

1.25
date	2006.01.07.19.20.47;	author steven;	state Exp;
branches;
next	1.24;

1.24
date	2005.12.18.17.01.14;	author steven;	state Exp;
branches;
next	1.23;

1.23
date	2005.12.16.01.21.09;	author nick;	state Exp;
branches;
next	1.22;

1.22
date	2005.12.11.22.50.40;	author steven;	state Exp;
branches;
next	1.21;

1.21
date	2005.11.10.01.01.43;	author nick;	state Exp;
branches;
next	1.20;

1.20
date	2005.11.03.15.24.10;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.19.00.24.50;	author nick;	state Exp;
branches;
next	1.18;

1.18
date	2005.10.10.23.17.33;	author nick;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.10.11.04.16;	author nick;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.08.12.04.56;	author nick;	state Exp;
branches;
next	1.15;

1.15
date	2005.10.07.02.34.52;	author nick;	state Exp;
branches;
next	1.14;

1.14
date	2005.09.29.01.12.09;	author nick;	state Exp;
branches;
next	1.13;

1.13
date	2005.09.28.01.14.34;	author nick;	state Exp;
branches;
next	1.12;

1.12
date	2005.09.27.10.51.14;	author nick;	state Exp;
branches;
next	1.11;

1.11
date	2005.09.27.02.13.43;	author nick;	state Exp;
branches;
next	1.10;

1.10
date	2005.09.25.18.39.43;	author nick;	state Exp;
branches;
next	1.9;

1.9
date	2005.09.25.16.24.31;	author nick;	state Exp;
branches;
next	1.8;

1.8
date	2005.09.25.03.27.41;	author nick;	state Exp;
branches;
next	1.7;

1.7
date	2005.09.25.03.19.46;	author nick;	state Exp;
branches;
next	1.6;

1.6
date	2005.09.09.02.19.46;	author nick;	state Exp;
branches;
next	1.5;

1.5
date	99.09.24.01.46.14;	author ericj;	state dead;
branches;
next	1.4;

1.4
date	99.09.22.22.52.54;	author ericj;	state Exp;
branches;
next	1.3;

1.3
date	99.09.15.13.03.29;	author ericj;	state Exp;
branches;
next	1.2;

1.2
date	99.09.15.05.27.35;	author ericj;	state Exp;
branches;
next	1.1;

1.1
date	99.09.15.05.16.23;	author ericj;	state Exp;
branches;
next	;


desc
@@


1.163
log
@the ports log directory is /usr/ports/logs, not /usr/ports/log.

spotted by fenderq on freenode
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

<!-- If you make edits to any FAQ documents, please start each sentence
     on a new line, and try to keep the general formatting consistent
     with the rest of the pages -->

<title>OpenBSD FAQ: Packages and Ports</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="copyright" content="This document copyright 1999-2017 by OpenBSD.">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="../openbsd.css">
<link rel="canonical" href="https://www.openbsd.org/faq/faq15.html">
</head>

<!--
Copyright (c) 2005-2009 Steven Mestdagh <steven@@openbsd.org>

Permission to use, copy, modify, and distribute this documentation for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE DOCUMENTATION IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS DOCUMENTATION INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS DOCUMENTATION
-->

<body bgcolor= "#ffffff" text= "#000000">

<h2>
<a href="../index.html">
<font color="#0000ff"><i>Open</i></font><font color="#000084">BSD</font></a>
<font color="#e00000">FAQ - Packages and Ports</font>
<small>
<a href="index.html" style="font-weight:normal; float:right">[FAQ Index]</a>
</small>
</h2>
<hr>

<!-- sync any table of contents changes with faq/ports/index.html -->
<ul>
<li><a href="#Intro"          >Introduction</a>
<li><a href="#PkgMgmt"        >Package management</a>
  <ul>
  <li><a href="#PkgHow"       >How does it work?</a>
  <li><a href="#Mirror"       >Selecting a mirror</a>
  <li><a href="#PkgFind"      >Finding packages</a>
  <li><a href="#PkgInstall"   >Installing new packages</a>
  <li><a href="#PkgUpdate"    >Updating installed packages</a>
  <li><a href="#PkgRemove"    >Removing installed packages</a>
  <li><a href="#PkgPartial"   >Incomplete package installation or removal</a>
  </ul>
<li><a href="#Ports"          >Working with ports</a>
  <ul>
  <li><a href="#PortsHow"     >How does it work?</a>
  <li><a href="#PortsFetch"   >Fetching the ports tree</a>
  <li><a href="#PortsConfig"  >Configuration of the ports system</a>
  <li><a href="#PortsSearch"  >Searching the ports tree</a>
  <li><a href="#PortsInstall" >Straightforward installation:
                               a simple example</a>
  <li><a href="#PortsClean"   >Cleaning up after a build</a>
  <li><a href="#PortsDelete"  >Uninstalling a port's package</a>
  <li><a href="#PortsFlavors" >Using flavors and subpackages</a>
  <li><a href="#dpb"          >Using dpb to build multiple ports</a>
  <li><a href="#PortsSecurity">Security updates (-stable)</a>
  <li><a href="#PkgSig"       >Package signatures</a>
  </ul>
  <li><a href="#Problems"     >Reporting problems</a>
  <li><a href="#Helping"      >Helping us</a>
</ul>

<hr>

<h2 id="Intro">Introduction</h2>

There are many applications one might want to use on an OpenBSD system.
To make this software easier to install and manage, it is <i>ported</i>
to OpenBSD and packaged.
The aim of the package system is to keep track of which software gets
installed, so that it may be easily updated or removed.
In minutes, a large number of packages can be fetched and installed, with
everything put in the right place.

<p>
The ports collection does <b>not</b> go through the same thorough security
audit that is performed on the OpenBSD base system.
Although we strive to keep the quality of the packages high, we just do not
have enough resources to ensure the same level of robustness and security.

<p>
In general, you are advised to use packages over building an application
from ports.
The OpenBSD ports team considers packages to be the goal of their porting
work, not the ports themselves.

<h2 id="PkgMgmt">Package management</h2>

<h3 id="PkgHow">How does it work?</h3>

Packages can be easily managed with the help of several utilities:

<ul>
  <li><a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a>
  - for installing and upgrading packages
  <li><a href="http://man.openbsd.org/pkg_check">pkg_check(8)</a>
  - for checking the consistency of installed packages
  <li><a href="http://man.openbsd.org/pkg_delete">pkg_delete(1)</a>
  - for removing installed packages
  <li><a href="http://man.openbsd.org/pkg_info">pkg_info(1)</a>
  - for displaying information about packages
</ul>

In order to run properly, application X may require that other applications
Y and Z be installed.
Application X is said to be dependent on these other applications, which is
why Y and Z are called <i>dependencies</i> of X.
In turn, Y may require other applications P and Q, and Z may require
application R to function properly.
This way, a whole dependency tree is formed.

<p>
Packages look like simple <tt>.tgz</tt> bundles.
Basically they are just that, but there is one crucial difference:
they contain some extra <i>packing information</i>.
This information is used by
<a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a> for several purposes:

<ul>
  <li>Different checks: has the package already been installed, or does it
      conflict with other installed packages or file names?
  <li>Dependencies which are not yet present on the system are automatically
      fetched and installed before proceeding with the installation of the
      package.
  <li>Information about the package(s) is recorded in a central repository,
      by default located in <tt>/var/db/pkg/</tt>.
      This will, among other things, prevent the dependencies of a package
      from being deleted before the package itself has been deleted.
      This helps ensure that an application cannot be accidentally broken
      by a careless user.
</ul>

<h3 id="Mirror">Selecting a mirror</h3>

There are two places <a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a>
will look for packages:
the <a href="http://man.openbsd.org/installurl">installurl(5)</a> file
or the <tt>PKG_PATH</tt> environment variable.

<p>
An example <tt>/etc/installurl</tt> might look like this:

<blockquote><pre>
https://ftp.openbsd.org/pub/OpenBSD
</pre></blockquote>

If you installed your <a href="faq4.html#FilesNeeded">sets</a> via the
internet, the <a href="../ftp.html">mirror</a> you chose will be set
automatically and no further configuration is required.
Otherwise, you can create it manually, or specify your preferred location
by exporting the <tt>PKG_PATH</tt> variable as described in the
<a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a> manual.

<h3 id="PkgFind">Finding packages</h3>

A large collection of pre-compiled packages is available for the most common
architectures.
To search for any given package name, use the <tt>-Q</tt> flag of
<a href="http://man.openbsd.org/pkg_info">pkg_info(1)</a>.

<blockquote><pre>
$ <b>pkg_info -Q unzip</b>
lunzip-1.8
unzip-6.0p9
unzip-6.0p9-iconv
</pre></blockquote>

You will notice that certain packages are available in a few different
varieties -- these are called <b>flavors</b>.
These will be detailed <a href="#PortsFlavors">later on</a>, but flavor
basically means they're configured with different sets of options.
For example, a package might have optional database support, support for
systems without X11, etc.
Some packages are also divided into <b>subpackages</b> that may be
installed separately.

<p>
Not all possible packages are necessarily available on the mirror servers.
Some applications simply don't work on all architectures.
Some applications cannot be distributed via mirrors for licensing reasons.

<p>
If you're looking for a specific filename, install the <tt>pkglocatedb</tt>
package, then use the <tt>pkg_locate</tt> command to find which package(s)
contain that file.

<h3 id="PkgInstall">Installing new packages</h3>

The <a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a> utility is used
to install packages.
If multiple flavors of a package exist, you will be prompted to choose which
one you want to install.

<blockquote><pre>
# <b>pkg_add rsync</b>
Ambiguous: choose package for rsync
a       0: &lt;None&gt;
        1: rsync-3.1.2p0
        2: rsync-3.1.2p0-iconv
Your choice:
</pre></blockquote>

Here you would select <b>1</b> if you want the standard package or <b>2</b>
if you need iconv support.

<p>
It is possible to specify multiple package names on one line, which then
all get installed at once, along with their dependencies.
You may also specify the absolute location of a package, be it a local
file or remote URL.
Supported URL prefixes are http, https, ftp and scp.

<p>
For some packages, important additional information will be given about
the configuration or use of the application.

<blockquote><pre>
# <b>pkg_add jove</b>
jove-4.16.0.73p0: ok
--- +jove-4.16.0.73p0 -------------------
See /usr/local/share/jove/README about changes to /etc/rc or
/etc/rc.local so that the system recovers jove files
on reboot after a system crash
</pre></blockquote>

Additionally, some packages provide configuration and other information
in a file located in <tt>/usr/local/share/doc/pkg-readmes</tt>.

<p>
For your safety, if you are installing a package which you had installed
earlier and removed, configuration files which have been modified will
not be overwritten.
The same is true for when you upgrade a package.

<p>
Sometimes you may encounter an error like the one in the following
example:

<blockquote><pre>
# <b>pkg_add xv</b>
xv-3.10ap4:jpeg-6bp3: ok
xv-3.10ap4:png-1.2.14p0: ok
xv-3.10ap4:tiff-3.8.2p0: ok
Can't install xv-3.10ap4: lib not found X11.9.0
Even by looking in the dependency tree:
        tiff-3.8.2p0, jpeg-6bp3, png-1.2.14p0
Maybe it's in a dependent package, but not tagged with @@lib ?
(check with pkg_info -K -L)
</pre></blockquote>

The packing information bundled in the package includes information
about shared libraries that the package expects to be installed.
If one of the required libraries can't be found, the package is not
installed because it would not function anyway.
To solve this type of conflict, you must find out what to install
in order to get the required libraries on your system.

<p>
There are several things to check:
<ul>
<li>You may have older packages installed: an older version of the
required library is present.
In this case, upgrade these packages.
<li>Your system may be incomplete: you did not install one of the
file sets that contains the required library.
Just <a href="faq4.html#FilesNeeded">add the required file set</a>.
<li>Your system may be out of date: you have an older version of the
required library.
Boot the installer (as detailed on <a href="faq4.html">this page</a>),
and choose to (U)pgrade your complete system.
</ul>

<h3 id="PkgUpdate">Updating installed packages</h3>

Let's say you had an older version of unzip installed before upgrading this
box to the latest OpenBSD release.
You can easily upgrade the package to the newer version like this:

<blockquote><pre>
# <b>pkg_add -u unzip</b>
unzip-5.52->unzip-5.52p0: ok
Read shared items: ok
</pre></blockquote>

When a package has dependencies, they are also examined for updates.
Invoking <a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a> with
only the <tt>-u</tt> flag will try to update all installed packages.
A mirror must be <a href="#Mirror">properly configured</a> for this to work.

<h3 id="PkgRemove">Removing installed packages</h3>

To remove a package, simply take the name of the package and use
<a href="http://man.openbsd.org/pkg_delete">pkg_delete(1)</a>.

<blockquote><pre>
# <b>pkg_delete screen</b>
screen-4.0.3p3: ok
Read shared items: ok
--- screen-4.0.3p3 -------------------
You should also remove /etc/screenrc (which was modified)
</pre></blockquote>

Again, modified configuration files will not be removed.

<h3 id="PkgPartial">Incomplete package installation or removal</h3>

In some odd cases, you may find a package was not added or deleted completely,
due to conflicts with other files.
The incomplete installation is usually marked with "partial-" prepended to
the package name.
This can, for instance, happen when you coincidentally press CTRL+C during
installation.
It's always a good idea to remove partial packages from your system, and to
fix potential problems that lead to this failure.
The <a href="http://man.openbsd.org/pkg_check">pkg_check(8)</a> utility can
help clean things up.

<h2 id="Ports">Working with ports</h2>

The ports tree is meant for advanced users.
<b>Everyone is encouraged to use the pre-compiled binary packages.</b>
If you have questions about the ports tree, it is assumed that you have
read the manual pages and this FAQ, and that you are able to work with it.

<h3 id="PortsHow">How does it work?</h3>

The ports tree is a set of Makefiles, one for each third party application,
that controls:

<ul>
  <li>Where and how to fetch the source of the software
  <li>Which other software it depends upon
  <li>How to alter the sources (if necessary)
  <li>How to configure and build it
  <li>How to test it (optional)
  <li>How to install it
</ul>

Apart from the Makefile, each port also contains at least the following:

<ul>
  <li><tt>PLIST</tt> - instructions for package creation once the application
      has been built
  <li><tt>DESCR</tt> - description of the application
  <li><tt>distinfo</tt> - distribution file checksums and size
</ul>

All this information is kept in a directory hierarchy under <tt>/usr/ports</tt>.
This hierarchy contains three special subdirectories:

<ul>
  <li><tt>distfiles/</tt> - where software distribution sets are stored
      after downloading
  <li><tt>infrastructure/</tt> - all the necessary scripts and makefiles
      for the ports infrastructure
  <li><tt>packages/</tt> - binary packages built by the ports system
</ul>

The other subdirectories all form different application categories,
which contain the subdirectories of the actual ports.
Complex ports may be organized to an even deeper level, for example if
they have a core part and a set of extensions, or a stable and a snapshot
version of the application.
Every port directory must contain a <tt>pkg/</tt> subdirectory with
packing list(s) and description file(s).
There may also be <tt>patches/</tt> and <tt>files/</tt> subdirectories,
for source patches and additional files, respectively.

<p>
When a user issues <a href="http://man.openbsd.org/make">make(1)</a>
in the subdirectory of a specific port, the system will recursively
walk its dependency tree, check whether the required dependencies are
installed, build and install any missing dependencies, and then
continue the build of the desired port.
All of the building happens inside the <i>working directory</i> that
the port creates.
Normally this is under <tt>${WRKOBJDIR}</tt>, defaulting to
<tt>/usr/ports/pobj</tt>, but you may override this (see
<a href="#PortsConfig">configuration of the ports system</a>).

<p>
The ports tree is tied to OpenBSD's <a href="faq5.html#Flavors">flavors</a>.
Do not check out a -current ports tree and expect it to work on a -release
or -stable system.
<b>If you follow -current, you need both a -current base system and a -current
ports tree</b>.
Because no intrusive changes are made in -stable, it is possible to use
a -stable ports tree on a -release system and vice versa.

<p>
Another common failure is a missing X11 installation.
Even if the port you try to build has no direct dependency on X11, a
subpackage of it or its dependencies may require X11 headers and libraries.
<b>Building ports on systems without X11 is not supported</b>.

<p>
More information about the ports system may be found in these man pages:

<ul>
  <li><a href="http://man.openbsd.org/ports">ports(7)</a>
  - describes the different stages (make targets) of port installation,
  the use of flavors and subpackages and some other options.
  <li><a href="http://man.openbsd.org/bsd.port.mk">bsd.port.mk(5)</a>
  - in-depth information about all the make targets, variables, the fake
  (installation directory) framework, etc.
</ul>

<h3 id="PortsFetch">Fetching the ports tree</h3>

Once you have decided which flavor of the ports tree you want, you can
get it from different sources.
The table below gives an overview of where you can find the different
flavors, and in which form.
An 'o' marks availability and '-' means it is not available through
that specific source.

<p>
<table border="1" align="center" style="empty-cells: show;">
<tr align="center">
<td align="left">Source</td>
<td>Form</td>
<td colspan="4">Flavor</td>
</tr>
<tr align="center">
<td colspan="2"></td>
<td>-release</td>
<td>-stable</td>
<td>snapshots</td>
<td>-current</td>
</tr>
<tr align="center">
<td align="left"><a href="../ftp.html">Mirrors</a></td>
<td>.tar.gz</td>
<td>o</td>
<td>-</td>
<td>o</td>
<td>-</td>
</tr>
<tr align="center">
<td align="left"><a href="../anoncvs.html">AnonCVS</a></td>
<td>cvs checkout</td>
<td>o</td>
<td>o</td>
<td>-</td>
<td>o</td>
</tr>
</table>

<p>
Look for a file named <tt>ports.tar.gz</tt> on the mirrors.

<blockquote><pre>
$ <b>cd /tmp</b>
$ <b>ftp https://ftp.openbsd.org/pub/OpenBSD/$(uname -r)/{ports.tar.gz,SHA256.sig}</b>
$ <b>signify -Cp /etc/signify/openbsd-$(uname -r | cut -c 1,3)-base.pub -x SHA256.sig ports.tar.gz</b>
</pre></blockquote>

You want to untar this file in the <tt>/usr</tt> directory, which will
create <tt>/usr/ports</tt> and all the directories under it.

<blockquote><pre>
# <b>cd /usr</b>
# <b>tar xzf /tmp/ports.tar.gz</b>
</pre></blockquote>

The snapshots available on the mirrors are generated daily from the -current
ports tree.
You will find the snapshots in the <tt>/pub/OpenBSD/snapshots/</tt> directory.
If you are using a snapshot of the ports tree, you should have installed
a matching snapshot of OpenBSD.
Make sure you keep your ports tree and your OpenBSD system in sync!

<p>
For more information about obtaining the ports tree via CVS, read the
<a href="../anoncvs.html">AnonCVS page</a>, which contains a list of
available servers and a number of examples.

<h3 id="PortsConfig">Configuration of the ports system</h3>

This section introduces some additional global settings for building ports.
You can skip it, but then you will be required to perform many of the
<a href="http://man.openbsd.org/make">make(1)</a> statements in later
examples as root.

<p>
Because the OpenBSD project does not have the resources to fully review
the source code of all software in the ports tree, you can configure the
ports system to take a few safety precautions.
The ports infrastructure is able to perform all building as a regular user,
and perform only those steps that require superuser privileges as root
(for example, the <tt>install</tt> make target).
However, because root privileges are always required at some point,
the ports system will not save you when you decide to build a malicious
application.

<ul>
  <li>You can set up <a href="http://man.openbsd.org/doas">doas(1)</a> and
      have the ports system use it for tasks requiring superuser permissions.
      This requires granting two permissions:
      <ul>
        <li>The user who is going to build ports needs permission to run
            arbitrary commands as the superuser and pass certain environment
            variables to the privileged shell.
            See the <tt>setenv</tt> and <tt>keepenv</tt> options in
            <a href="http://man.openbsd.org/doas.conf">doas.conf(5)</a>.
        <li>The ports system needs permission to invoke
            <a href="http://man.openbsd.org/doas">doas(1)</a>.
            This can be granted by setting the <tt>SUDO</tt> variable defined
            in <a href="http://man.openbsd.org/bsd.port.mk">bsd.port.mk(5)</a>,
            which can be made permanent by adding <tt>SUDO=/usr/bin/doas</tt>
            to <a href="http://man.openbsd.org/mk.conf">mk.conf(5)</a>.
       </ul>

  <li>You can modify the ownership of the ports tree so that you can write
      there as a regular user.
      In this case, an example user has been added to the <tt>wsrc</tt> group
      and the underlying directories are made group-writable.

<blockquote><pre>
# <b>user mod -G wsrc exampleuser</b>
# <b>chgrp -R wsrc /usr/ports</b>
# <b>find /usr/ports -type d -print0 | xargs -0r chmod g+w</b>
</pre></blockquote>
</ul>

It is possible to use a read-only ports tree by separating directories
that are written to during port building:

<ul>
  <li>The working directory of ports.
  This is controlled by the <tt>WRKOBJDIR</tt> variable, which specifies
  the directory which will contain the working directories.
  <li>The directory containing distribution files.
  This is controlled by the <tt>DISTDIR</tt> variable.
  <li>The directory containing newly built binary packages.
  This is controlled by the <tt>PACKAGE_REPOSITORY</tt> variable.
</ul>

For example, you could add the following lines to <tt>/etc/mk.conf</tt>:

<blockquote><pre>
WRKOBJDIR=/usr/obj/ports
DISTDIR=/usr/distfiles
PACKAGE_REPOSITORY=/usr/packages
</pre></blockquote>

If desired, you can also change the ownership of these directories to your
local username and group, so that the ports system can create the underlying
working directories as a regular user.
Again, ports can be <i>built</i> as a user, but must be <i>installed</i>
by root or with <a href="http://man.openbsd.org/doas">doas(1)</a>.

<h3 id="PortsSearch">Searching the ports tree</h3>

Once you have the ports tree in place on your system, it becomes very easy
to search for software.
Just use <tt>make search key="searchkey"</tt> as shown in this example:

<blockquote><pre>
$ <b>cd /usr/ports</b>
$ <b>make search key=rsnapshot</b>
Port:   rsnapshot-1.3.1p0
Path:   net/rsnapshot
Info:   remote filesystem snapshot utility
Maint:  Antoine Jacoutot &lt;ajacoutot@@openbsd.org&gt;
Index:  net sysutils
L-deps:
B-deps: :net/rsync
R-deps: :devel/p5-Lchown :net/rsync
Archs:  any
</pre></blockquote>

The search result gives a nice overview of each application that is found:
the port name, the path to the port, a one-line description, the port's
maintainer, keywords related to the port, library/build/runtime dependencies,
and architectures on which the port is known to work.

<p>
This mechanism, however, is a very basic one, which just runs awk(1)
on the ports index file.
A port called "sqlports" allows very fine-grained searching using SQL.
It is an SQLite database, but just about any database format can be created
using the ports infrastructure.
The <tt>sqlports</tt> port includes the script used to generate the database,
which could be used as a basis to generate databases in different formats.

<p>
Just install the <tt>sqlports</tt> package to get started.
A sample session could look like this:

<blockquote><pre>
$ <b>sqlite3 /usr/local/share/sqlports</b>
SQLite version 3.3.12
Enter ".help" for instructions
sqlite> SELECT FULLPKGNAME,COMMENT FROM Ports WHERE COMMENT LIKE '%statistics%';
Guppi-0.40.3p1|GNOME-based plot program with statistics capabilities
mailgraph-1.12|a RRDtool frontend for Postfix statistics
R-2.4.1|clone of S, a powerful math/statistics/graphics language
py-probstat-0.912p0|probability and statistics utilities for Python
darkstat-3.0.540p1|network statistics gatherer with graphs
pfstat-2.2p0|packet filter statistics visualization
tcpstat-1.4|report network interface statistics
wmwave-0.4p2|Window Maker dockapp to display wavelan statistics
diffstat-1.43p0|accumulates and displays statistics from a diff file
sqlite>
</pre></blockquote>

The above is still a very basic search.
With SQL, just about anything can be searched for, including dependencies,
configure flags, shared libraries, etc.

<h3 id="PortsInstall">Straightforward installation: a simple example</h3>

For clarity's sake, let's consider a simple example: rsnapshot.
This application has one dependency: rsync.
The following commands assume you've configured the <tt>SUDO</tt>
varable in <tt>/etc/mk.conf</tt> as mentioned above.

<blockquote><pre>
$ <b>cd /usr/ports/net/rsnapshot</b>
$ <b>make install</b>
===>  Checking files for rsnapshot-1.2.9
&gt;&gt; rsnapshot-1.2.9.tar.gz doesn't seem to exist on this system.
&gt;&gt; Fetch http://www.rsnapshot.org/downloads/rsnapshot-1.2.9.tar.gz.
100% |**************************************************|   173 KB    00:02
&gt;&gt; Size matches for /usr/ports/distfiles/rsnapshot-1.2.9.tar.gz
&gt;&gt; Checksum OK for rsnapshot-1.2.9.tar.gz. (sha1)
===&gt;  rsnapshot-1.2.9 depends on: rsync-2.6.9 - not found
===&gt;  Verifying install for rsync-2.6.9 in net/rsync
===&gt;  Checking files for rsync-2.6.9
&gt;&gt; rsync-2.6.9.tar.gz doesn't seem to exist on this system.
&gt;&gt; Fetch ftp://ftp.samba.org/pub/rsync/old-versions/rsync-2.6.9.tar.gz.
100% |**************************************************|   792 KB    00:31
&gt;&gt; Size matches for /usr/ports/distfiles/rsync-2.6.9.tar.gz
&gt;&gt; Checksum OK for rsync-2.6.9.tar.gz. (sha1)
===&gt;  Verifying specs:  c
===&gt;  found c.40.3
===&gt;  Extracting for rsync-2.6.9
===&gt;  Patching for rsync-2.6.9
===&gt;  Configuring for rsync-2.6.9
  [...]
===&gt;  Building for rsync-2.6.9
  [...]
===&gt;  Faking installation for rsync-2.6.9
  [...]
===&gt;  Building package for rsync-2.6.9
Link to /usr/ports/packages/i386/ftp/rsync-2.6.9.tgz
Link to /usr/ports/packages/i386/cdrom/rsync-2.6.9.tgz
===&gt;  Installing rsync-2.6.9 from /usr/ports/packages/i386/all/rsync-2.6.9.tgz
rsync-2.6.9: ok
===&gt; Returning to build of rsnapshot-1.2.9
===&gt;  rsnapshot-1.2.9 depends on: rsync-2.6.9 - found
===&gt;  Extracting for rsnapshot-1.2.9
===&gt;  Patching for rsnapshot-1.2.9
===&gt;  Configuring for rsnapshot-1.2.9
  [...]
===>  Building for rsnapshot-1.2.9
  [...]
===&gt;  Faking installation for rsnapshot-1.2.9
  [...]
===&gt;  Building package for rsnapshot-1.2.9
Link to /usr/ports/packages/i386/ftp/rsnapshot-1.2.9.tgz
Link to /usr/ports/packages/i386/cdrom/rsnapshot-1.2.9.tgz
===&gt;  rsnapshot-1.2.9 depends on: rsync-2.6.9 - found
===&gt;  Installing rsnapshot-1.2.9 from /usr/ports/packages/i386/all/rsnapshot-1.2.9.tgz
rsnapshot-1.2.9: ok
</pre></blockquote>

<p>
As you can see, the ports system is doing many things automatically.
It will fetch, extract, and patch the source code, configure and build
(compile) the source, install the files into a fake directory, create
a package (corresponding to the packing list) and install this package
onto your system (usually under <tt>/usr/local/</tt>).
And it does this recursively <b>for all dependencies</b> of the port.
Notice the
"<tt>===&gt; Verifying install for ...</tt>" and
"<tt>===&gt; Returning to build of ...</tt>" lines in the above output,
indicating the walk through the dependency tree.

<p>
If a previous version of the application you want to install was already
installed on your system, you can use <tt>make update</tt> instead of
<tt>make install</tt>.
This will call <a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a>
with the <tt>-r</tt> flag.

<p>
Large applications will require a lot of system resources to build.
If you get "out of memory" type of errors when building such a port,
this usually has one of two causes:

<ul>
  <li>Your resource limits are too restrictive.
      Adjust them with ksh's <tt>ulimit</tt> or csh's <tt>limit</tt> command.
  <li>You simply don't have enough RAM.
</ul>

<h3 id="PortsClean">Cleaning up after a build</h3>

You probably want to clean the port's default working directory after
you have built the package and installed it.

<blockquote><pre>
$ <b>make clean</b>
===&gt;  Cleaning for rsnapshot-1.2.9
</pre></blockquote>

In addition, you can also clean the working directories of all
dependencies of the port with this make target:

<blockquote><pre>
$ <b>make clean=depends</b>
===&gt;  Cleaning for rsync-2.6.9
===&gt;  Cleaning for rsnapshot-1.2.9
</pre></blockquote>

If you wish to remove the source distribution set(s) of the port, you
would use:

<blockquote><pre>
$ <b>make clean=dist</b>
===&gt;  Cleaning for rsnapshot-1.2.9
===&gt;  Dist cleaning for rsnapshot-1.2.9
</pre></blockquote>

In case you have been compiling multiple flavors of the same port,
you can clear the working directories of all these flavors at once using:

<blockquote><pre>
$ <b>make clean=flavors</b>
</pre></blockquote>

You can also clean things up as they get built by setting a special variable.
Work directories will automatically be cleaned after packages have been
created.

<blockquote><pre>
$ <b>make package BULK=Yes</b>
</pre></blockquote>

<h3 id="PortsDelete">Uninstalling a port's package</h3>

It is very easy to uninstall a port:

<blockquote><pre>
$ <b>make uninstall</b>
===&gt; Deinstalling for rsnapshot-1.2.9
rsnapshot-1.2.9: ok
Read shared items: ok
</pre></blockquote>

This will call <a href="http://man.openbsd.org/pkg_delete">pkg_delete(1)</a>
to have the corresponding package removed from your system.
If desired, you can also uninstall and reinstall a port's package by using:

<blockquote><pre>
$ <b>make reinstall</b>
===&gt;  Cleaning for rsnapshot-1.2.9
/usr/sbin/pkg_delete rsnapshot-1.2.9
rsnapshot-1.2.9: ok
===&gt;  Installing rsnapshot-1.2.9 from /usr/ports/packages/i386/all/rsnapshot-1.2.9.tgz
rsnapshot-1.2.9: ok
</pre></blockquote>

If you would like to get rid of the packages you just built, you can do so
as follows:

<blockquote><pre>
$ <b>make clean=packages</b>
===&gt;  Cleaning for rsnapshot-1.2.9
rm -f /usr/ports/packages/i386/all/rsnapshot-1.2.9.tgz
</pre></blockquote>

<h3 id="PortsFlavors">Using flavors and subpackages</h3>

Please read the
<a href="http://man.openbsd.org/ports">ports(7)</a>
man page, which gives a good overview of this topic.
There are two mechanisms to control the packaging of software according
to different needs.

<p>
The first mechanism is called <b>flavors</b>.
A flavor usually indicates a certain set of compilation options.
For instance, some applications have a "no_x11" flavor which can be used on
systems without X.
Some shells have a "static" flavor that will build a statically linked
version.
There are ports which have different flavors for building them with
different graphical toolkits.
Other examples include support for different database formats,
different networking options (SSL, IPv6, ...), different paper sizes, etc.

<p>
<b>Summary:</b>
You will most likely use flavors when a package has not been made available
for the flavor you are looking for.
In this case, you can specify the desired flavor and build the port yourself.

<p>
Most port flavors have their own working directory during compilation,
and every flavor will be packaged into a correspondingly-named package to
avoid any confusion.
To see the different flavors of a certain port, you would change to its
subdirectory and issue:

<blockquote><pre>
$ <b>make show=FLAVORS</b>
</pre></blockquote>

You can also look at the port's <tt>DESCR</tt> files, which explain the
available flavors in more detail.

<p>
The second mechanism is called <b>subpackages</b>.
A porter may decide to create subpackages for different pieces of the
same application if they can be logically separated.
You will often see subpackages for the client part and the server part
of a program.
Sometimes extensive documentation is bundled in a separate subpackage
because it takes up a lot of disk space.
Extra functionality that pulls in heavy dependencies will often be
packaged separately.
The porter will also decide which subpackage is the main subpackage,
to be installed as a default.
Other examples are extensive test suites which come with the software,
separate modules with support for different things, etc.

<p>
<b>Summary:</b>
Some ports are split into several packages. <tt>make install</tt> will only
install the main subpackage.

<p>
To list the different packages built by a port, use:

<blockquote><pre>
$ <b>make show=PKGNAMES</b>
</pre></blockquote>

<tt>make install</tt> will only install the main subpackage.
To install them all, use:

<blockquote><pre>
$ <b>make install-all</b>
</pre></blockquote>

To list the different subpackages available for a port, use:

<blockquote><pre>
$ <b>make show=MULTI_PACKAGES</b>
</pre></blockquote>

It is possible to select which subpackage(s) to install from within the
ports tree.
After some tests, this procedure will just call
<a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a>
to install the desired subpackage(s).

<blockquote><pre>
# <b>env SUBPACKAGE="-server" make install</b>
</pre></blockquote>

The subpackages mechanism only handles packages.
It does not modify any configuration options before building the port.
You must use flavors for that purpose.

<h3 id="dpb">Using dpb to build multiple ports</h3>

When you need to build more than one or two ports at a time, you can
use the <tt>/usr/ports/infrastructure/bin/dpb</tt> tool.

<a href="http://man.openbsd.org/dpb">dpb(1)</a> takes a list of ports to build
and automatically builds them all in an optimal order, making use of as much
parallelism as possible.
It can also use multiple machines to perform the building, and produces
detailed logs of the build process for troubleshooting, placed in
<tt>/usr/ports/logs</tt> by default.

<blockquote><pre>
# <b>/usr/ports/infrastructure/bin/dpb -P ~/localports</b>
</pre></blockquote>

This command will read the list of
<a href="http://man.openbsd.org/pkgpath">pkgpaths</a> in <tt>~/localports</tt>
and build all the packages.
It can also install the packages after they have been built.
The <tt>~/localports</tt> file might look something like this:

<blockquote><pre>
net/rsync
www/mozilla-firefox
editors/vim
</pre></blockquote>

If you do not provide a list of ports to build on the command line or via
<tt>-P</tt> or <tt>-I</tt>, <a href="http://man.openbsd.org/dpb">dpb(1)</a>
will build all the ports in the ports tree.
If run as root, dpb will automatically drop privileges to dedicated users
for fetching distfiles and building ports.
This is the recommended way to use it, but it can also run as a regular user.
Additionally, the <a href="http://man.openbsd.org/proot">proot(1)</a> utility
can be used to further isolate building operations.

<h3 id="PortsSecurity">Security updates (-stable)</h3>

When serious bugs or security flaws are discovered in third party software,
they are fixed in the <i>-stable</i> branch of the ports tree.
Note that <b>binary packages for -release and -stable are not updated</b>.
In contrast to the base system, the -stable ports tree only gets security
backports for the latest release.
<!-- XXXrelease
Updated packages are also built and made available to users of the amd64
and i386 architectures.
-->

<p>
This means that all you need to do is make sure you check out the correct
branch of the ports tree, and build the desired software from it.
You can keep your tree up to date with <a href="../anoncvs.html">CVS</a>
and subscribe to the ports-changes <a href="../mail.html">mailing list</a>
to receive security announcements related to software in the ports tree.

<h3 id="PkgSig">Package signatures</h3>

Signatures are a good way to make sure packages are legitimate and not
corrupted.
OpenBSD offers official signed packages using
<a href="http://man.openbsd.org/signify">signify(1)</a>.
No extra effort is needed on the user's part to ensure packages haven't
been tampered with.

<p>
If you want to build <i>your own</i> signed packages, you'll first need
to create keys for signing.

<blockquote><pre>
# <b>signify -Gns /etc/signify/my-pkg.sec -p /etc/signify/my-pkg.pub</b>
</pre></blockquote>

Note the names: keys for signing packages should end in <tt>pkg</tt>.

<p>
Existing packages may be signed with
<a href="http://man.openbsd.org/pkg_sign">pkg_sign(1)</a> after being built.

<blockquote><pre>
# <b>cd /usr/ports/packages/$(uname -p)</b>
# <b>pkg_sign -s signify2 -s /etc/signify/my-pkg.sec -o signed -S all</b>
</pre></blockquote>

In order to install the package on another machine, the public key
<tt>my-pkg.pub</tt> should be put into the <tt>/etc/signify</tt> directory
on that machine.

<h2 id="Problems">Reporting problems</h2>

If you have trouble with an existing port, please send an email to the
port maintainer.
To see the maintainer of the port, type, for example:

<blockquote><pre>
$ <b>cd /usr/ports/archivers/unzip</b>
$ <b>make show=MAINTAINER</b>
</pre></blockquote>

Alternatively, if there is no maintainer, or you can't reach them, send an
email to the <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>
mailing list.

<p>
In any case, please provide:

<ul>
  <li>Your OpenBSD version, including any patches you may have applied.
  The kernel version is given by: <tt>sysctl -n kern.version</tt>
  <li>The version of your ports tree: if the file <tt>/usr/ports/CVS/Tag</tt>
  exists, provide its contents.
  If this file is absent, you are using the -current ports tree.
  <li>A complete description of the problem.
  Don't be afraid to provide details.
  Mention all the steps you followed before the problem occurred.
  Is the problem reproducible?
  The more information you provide, the more likely you will get help.
</ul>

For ports which do not build correctly, a complete build transcript is
almost always required.
You can use the <tt>portslogger</tt> script, found in
<tt>/usr/ports/infrastructure/bin</tt>, for this.
A sample run might look like this:

<blockquote><pre>
$ <b>mkdir ~/portlog</b>
$ <b>cd /usr/ports/archivers/unzip</b>
$ <b>make 2&gt;&amp;1 | /usr/ports/infrastructure/bin/portslogger ~/portlog</b>
</pre></blockquote>

After this, you should have a logfile of the build in your <tt>~/portlog</tt>
directory that you can send to the port maintainer.
Also, make sure you are not using any special options in your build,
for example in <tt>/etc/mk.conf</tt>.

<p>
Alternatively, you can:

<ul>
  <li>Use <a href="http://man.openbsd.org/script">script(1)</a> to create
      a complete build transcript.
  <li>Attach the output of
  <a href="http://man.openbsd.org/pkg_info">pkg_info(1)</a>
  if it seems even remotely relevant.
  <li><a href="http://man.openbsd.org/gcc">gcc(1)</a>
  internal compiler errors ask you to report the bug to the gcc
  mailing list.
  It does save time if you follow their direction, and provide at least
  the various files produced by <tt>gcc -save-temps</tt>.
</ul>

<h2 id="Helping">Helping us</h2>

There are many ways you can help.
They are listed below, by increasing order of difficulty.

<ul>
  <li><a href="#Problems">Report problems</a> as you experience them.
  <li>You can systematically test ports and report breakages, or suggest
  improvements.
  Just have a look at the <a href="ports/testing.html">Port Testing Guide</a>.
  You <b>must run a -current system</b> for creating and testing ports.
  <li>Test the updates to ports which are posted to the ports mailing list.
  <li>Send updates or patches to a port's maintainer, or to the ports
  mailing list if the port has no maintainer.
  Generally this is highly appreciated, unless your patches will cause
  developers to waste time rather than save time.
  <li>Create new ports.
  If you are really eager and want to know everything about porting
  applications to OpenBSD, a good starting point is the
  <a href="ports/index.html">OpenBSD Porter's Handbook</a>.
</ul>

<p>
<a href="../want.html">Hardware</a> donations can assist
testing ports on the various <a href="../plat.html">platforms</a>
OpenBSD runs on.

<p>
</body>
</html>
@


1.162
log
@6.1 faq updates:

- syspatch
- less xdm, more xenodm
- less pkg.conf, more installurl
- vmm networking (written by edd)
- signing_params is gone
- pkg_sign flags changed
- build user changes (written by tb)
- https in the installer
- cvs version bumps
- remove ports.html redirect page

ok tb
@
text
@d894 1
a894 1
<tt>/usr/ports/log</tt> by default.
@


1.161
log
@don't mention calling pkg_create directly. use ports infrastructure instead.
minor wording tweak while here.
@
text
@d150 4
a153 3
You can make things easy by defining your preferred
<a href="../ftp.html">mirror</a> in the <tt>PKG_PATH</tt> environment variable
or <a href="http://man.openbsd.org/OpenBSD-6.0/pkg.conf">pkg.conf(5)</a> file.
d156 1
a156 1
<b>Example 1:</b> fetching packages with <tt>PKG_PATH</tt>:
d159 1
a159 2
# <b>export PKG_PATH=http://a.local.mirror/$(uname -r)/packages/$(uname -p)/</b>
# <b>pkg_add irssi</b>
d162 6
a167 30
It's a good idea to add a similar "export" line to your <tt>~/.profile</tt>.
If you're using <a href="http://man.openbsd.org/doas">doas(1)</a>, note that
you will need to pass <tt>setenv { PKG_PATH }</tt> in the config file for
this variable to stick.
You can specify multiple locations, separated by colons.
If the first entry in <tt>PKG_PATH</tt> fails, the next one will be tried, and
so on, until the package is found.
If all entries fail, an error is produced.

<p>
The <tt>-r</tt> and <tt>-p</tt> flags to
<a href="http://man.openbsd.org/uname">uname(1)</a> will expand to the version
of OpenBSD you're running and your CPU architecture.
If you are using snapshots, replace "$(uname -r)" with "snapshots" instead.

<p>
<b>Example 2:</b> fetching packages with
<a href="http://man.openbsd.org/OpenBSD-6.0/pkg.conf">pkg.conf(5)</a>:

<blockquote><pre>
# <b>echo 'installpath = a.local.mirror' > /etc/pkg.conf</b>
# <b>pkg_add mutt</b>
</pre></blockquote>

This assumes that <tt>a.local.mirror</tt> uses the standard
"/pub/OpenBSD/VERSION/packages/ARCH" directory layout, which most mirrors do.
Unlike <tt>PKG_PATH</tt>, this method doesn't rely on the environment, so it
can be a bit easier to manage when things like X sessions are involved.
Note that OpenBSD also includes a list of package mirrors in the
<tt>/etc/examples/pkg.conf</tt> file by default.
d928 4
a939 4
<p>
Of course, security updates reach the <i>-current</i> ports tree before
being taken up in the <i>-stable</i> branch.

d960 2
a961 3
Then we may sign existing packages after building them with
<!-- XXXrelease - pkg_sign -s flag arguments changed -->
<a href="http://man.openbsd.org/OpenBSD-6.0/pkg_sign">pkg_sign(1)</a>.
d965 1
a965 8
# <b>pkg_sign -s signify -s /etc/signify/my-pkg.sec -o signed -S all</b>
</pre></blockquote>

Alternately, we may add the following line to <tt>/etc/mk.conf</tt> to
directly build signed packages by default:

<blockquote><pre>
SIGNING_PARAMETERS=-s signify -s /etc/signify/my-pkg.sec
@


1.160
log
@minor wording changes to reduce my 6.1 diff.
@
text
@a112 2
  <li><a href="http://man.openbsd.org/pkg_create">pkg_create(1)</a>
  - for creating packages
d1008 1
a1008 1
To see who is the maintainer of the port, type, for example:
a1017 2
Please do NOT use the misc@@openbsd.org mailing list for questions
about ports.
@


1.159
log
@remove a sentence describing the effect of explicitly unsetting WRKOBJDIR.
this feature is bound to die soon, if it hasn't already.
@
text
@d106 1
a106 2
Packages can be easily managed with the help of several utilities,
also referred to as the pkg_* tools:
@


1.158
log
@this page repeatedly says "NOTE" or "IMPORTANT NOTE" a total of seven times.

NOTE: i removed them
@
text
@a421 3
If <tt>WRKOBJDIR</tt> has been explicitly unset, a subdirectory
of the port's main directory (package name prefixed by "w-") will be
used instead.
@


1.157
log
@merge a trimmed version of the mini pkg faq into more relevant sections.

input/ok tb
@
text
@a219 1
<b>Note:</b>
a361 6
As mentioned in the introduction, packages are compiled from the ports tree.
In this section we will explain how the ports tree works, as well as when
you should or shouldn't use it.

<p>
<b>IMPORTANT NOTE</b>:
a363 2
Do NOT ask beginner questions on the mailing lists like "How can I get the
ports tree working?"
a426 1
<b>Note:</b>
a524 1
<b>NOTE:</b>
d596 1
a596 1
by root or with doas(1).
a733 1
<b>Note:</b>
a909 1
<b>Note:</b>
d1086 1
a1101 8

<p>
<b>Note:</b>
For all creation of new ports and subsequent testing, or for testing port
updates, you <b>must run a -current system!</b>
In general, this is not a desirable environment because of its continuously
evolving nature, so proceed only if you are sure about committing yourself
to following -current.
@


1.156
log
@remove "the latest version of my top favorite software is not available!"
and "why is there no port/package of my top favorite software?" sections.

what little useful information they contained is already present elsewhere.

ok tb
@
text
@a73 7
<li><a href="#PkgFAQ"         >FAQ</a>
  <ul>
  <li><a href="#NoFun"        >I'm getting all kinds of crazy errors.
                               I just can't seem to get this ports stuff
                               working at all.</a>
  <li><a href="#PkgVsPorts"   >What should I use, packages or ports?</a>
  </ul>
d96 6
d437 13
a449 7
Ports are never directly installed on your system.
They use a <i>fake installation directory</i>.
Everything that gets installed there is bundled together into a package
that gets stored in the <tt>packages/</tt> subdirectory of the ports tree,
as mentioned earlier.
Installing a port really means "creating a package and then installing
that package."
a1021 71

<h2 id="PkgFAQ">FAQ</h2>

<h3 id="NoFun">I'm getting all kinds of crazy errors.
I just can't seem to get this ports stuff working at all.</h3>

It is very likely that you are using a system and ports tree which are
not in sync.

<ul>
  <li>Read everything about <a href="faq5.html#Flavors">OpenBSD's flavors</a>:
      -release, -stable and -current.
      The short summary is as follows, but please do read the document
      mentioned above to get an idea about which one it is you want to use.
<ul>
  <li>-release: Official releases produced approximately every six months
  <li><a href="../stable.html">-stable</a>: -release plus security fixes and
      reliability enhancements
  <li><a href="current.html">-current</a>: The development version of OpenBSD
</ul>

<li>Do not check out a -current ports tree and expect it to work on a -release
    or -stable system.
    This is one of the most common errors, and you will irritate people when
    you ask for help about why nothing seems to work.
    <b>If you follow -current, you need both a -current base system and a
    -current ports tree</b>.
    Keep in mind that if you use X11 as part of your system, it must also
    follow the corresponding branch.
<li>Because no intrusive changes are made in -stable, it is possible to use
    a -stable ports tree on a -release system and vice versa.
</ul>

Another common failure is a missing X11 installation.
Even if the port you try to build has no direct dependency on X11, a
subpackage of it or its dependencies may require X11 headers and libraries.
<b>Building ports on systems without X11 is not supported</b>.
There are, however, "no_x11" flavored packages available for many ports,
which you can install without needing X11 on your system.

<h3 id="PkgVsPorts">What should I use: packages or ports?</h3>

In general, you are <b>highly advised</b> to use packages over building
an application from ports.
The OpenBSD ports team considers packages to be the goal of their porting
work, not the ports themselves.

<p>
Building a complex application from source is not trivial.
Not only must the application be compiled, but the tools used to build it
must be built as well.
Unfortunately, OpenBSD, the tools, and the application are all evolving,
and getting all the pieces working together is often a challenge.
Once everything works, a revision in any of the pieces the next day could
render it broken.

<p>
Of course, there are a few good reasons to use ports over packages
in some cases:

<ul>
  <li>Distribution rules prohibit OpenBSD from distributing a package
  <li>You wish to modify or debug the application or study its source code
  <li>You need a flavor of a port that is not built by the OpenBSD ports team
  <li>You wish to alter the directory layout (i.e. modifying <tt>PREFIX</tt>
      or <tt>SYSCONFDIR</tt>)
</ul>

However, for most people and most applications, using packages is much
easier, and definitely the recommended way of adding applications to an
OpenBSD system.
@


1.155
log
@remove two duplicate sentences.
@
text
@a78 6
  <li><a href="#Latest"       >The latest version of my
                               Top-Favorite-Software is not available!</a>
  <li><a href="#NoPkg"        >Why is there no package for my
                               Top-Favorite-Software?</a>
  <li><a href="#NoPort"       >Why is there no port of my
                               Top-Favorite-Software?</a>
a1055 58

<h3 id="Latest">The latest version of my Top-Favorite-Software is not
available!</h3>

If you are using a release or stable version of OpenBSD, you will not
find any package updates until the next release.
For serious problems which are fixed in ports, updates are also made to
the most recent -stable branch.
You can build your own updates in this case, but, again, <b>the OpenBSD
project does not provide pre-built packages for these updates</b>.

<p>
<i>But hey, I'm all -current here!</i>

<p>
The ports collection is a volunteer project.
Sometimes the project simply doesn't have the developer resources to keep
everything up to date.
Developers pretty much pick up what they consider interesting and can test
in their environment.
Some individual ports may lag behind the mainstream versions because of this.
Importantly, not updating to the latest version is often a conscious decision.
The newer version may have problems that the maintainer is trying to solve,
or that have simply made the application worse than the old version.
Also, OpenBSD may have different <a href="../goals.html">goals</a> than the
developers in other projects, which sometimes results in features and design
or implementation choices that are undesirable from OpenBSD developers'
point of view.
The update may also be postponed because the new version is not considered
a crucial update.

<p>
If you really need a newer version of a port, you should ask the maintainer
to update it.
See <a href="#Problems">below</a> to find out who the port maintainer is.
If you can <a href="#Helping">help</a>, all the better.

<h3 id="NoPort">Why is there no port of my Top-Favorite-Software?</h3>

The ports collection is a volunteer project.
Active port development is done by a limited number of people, in their
spare time.
These people usually make new ports only for software they use directly
or are interested in.

<p>
You can <a href="#Helping">help</a>.
Consider creating your own port.
There is some documentation available on this: the <a href="ports/index.html">
OpenBSD Porter's Handbook</a>.
Read it, then read it again, especially the part about <i>maintaining</i>
your port.
Then try making a new port and test it carefully, step by step.
If finally it works OK for you, submit it to the ports mailing list
at <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>.
Chances are good you will get some feedback and testing from other people.
If the testing is successful, your port will be considered to be taken up
in the ports tree.
@


1.154
log
@begin removing mentions of the cd sets...
@
text
@a334 2
For safety, modified configuration files will not be removed.
If you prefer to have them removed automatically, use the <tt>-c</tt> flag.
@


1.153
log
@unbreak pkg.conf manpage links.
@
text
@d472 1
a472 1
An 'x' marks availability and '-' means it is not available through
a474 1
<!-- XXXrelease - remove cd mentions for 6.1 -->
d490 1
a490 1
<td align="left"><a href="../orders.html">CD-ROM</a></td>
d492 1
a492 1
<td>x</td>
d494 1
a494 9
<td>-</td>
<td>-</td>
</tr>
<tr align="center">
<td align="left"><a href="../ftp.html">HTTP mirrors</a></td>
<td>.tar.gz</td>
<td>x</td>
<td>-</td>
<td>x</td>
d500 2
a501 2
<td>x</td>
<td>x</td>
d503 1
a503 1
<td>x</td>
d508 1
a508 2
<!-- XXXrelease - remove cd mentions for 6.1 -->
On the CD-ROM and HTTP mirrors, look for a file named <tt>ports.tar.gz</tt>.
@


1.152
log
@validation fix: <None> -> &lt;None&gt;
@
text
@d162 1
a162 1
or <a href="http://man.openbsd.org/pkg.conf">pkg.conf(5)</a> file.
d189 1
a189 1
<a href="http://man.openbsd.org/pkg.conf">pkg.conf(5)</a>:
@


1.151
log
@some early spring cleaning for faq15:

trim a ton of extraneous text, explanations no one asked for, off-topic
chatter and repeated thoughts. replace with some right-to-the-point
command examples.

rename "making things easy" to the more informative "selecting a mirror."

clean up and sort the list of pkg tools and their descriptions, adding
pkg_check to the list.

remove overly long "listing installed packages" section.
the one-line description of pkg_info should be enough.

replace outdated pkg/ports command output with their current versions.

remove the following sections:
- how do i tweak ports to have maximum performance
- why is there no package for my top favorite software
- i submitted a new port weeks ago, why isn't it committed
(very little useful information was contained within)

and a few formatting tweaks.

ok tb sthen
@
text
@d247 1
a247 1
a       0: <None>
@


1.150
log
@2017
@
text
@d52 1
a52 1
  <li><a href="#Easy"         >Making things easy</a>
a54 1
  <li><a href="#PkgList"      >Listing installed packages</a>
a85 4
  <li><a href="#Knobs"        >How do I tweak these ports to have
                               maximum performance?</a>
  <li><a href="#Wait"         >I submitted a new port/an update
                               weeks ago. Why isn't it committed?</a>
d95 7
a101 10
<p>
There are a lot of third party applications available which one might
want to use on an OpenBSD system.
To make this software easier to install and manage, plus to help it
comply with OpenBSD's policy and goals, it is <i>ported</i> to OpenBSD.
This porting effort can involve many different things.
Examples are: making the software use the standard OpenBSD directory
layout (e.g. configuration files go into <tt>/etc</tt>), conforming
to OpenBSD's shared library specifications, making the software more
secure whenever possible, etc.
d104 4
a107 24
The end result of the porting effort is ready-to-install binary packages.
The aim of the package system is to keep track of which software gets
installed, so that it may at any time be updated or removed very easily.
This way, no unnecessary files are left behind, and users can keep their
systems clean.
The package system also helps ensure nothing is deleted by accident,
causing software to stop functioning properly.
Another advantage is that <b>users rarely need to compile software from
source</b>, as packages have already been compiled and are available and
ready to be used on an OpenBSD system.
In minutes, a large number of packages can be fetched and installed,
with everything in the right place.

<p>
The packages and ports collection does <b>NOT</b> go through the same thorough
security audit that is performed on the OpenBSD base system.
Although we strive to keep the quality of the packages collection high,
we just do not have enough human resources to ensure the same level of
robustness and security.

Of course <a href="#PortsSecurity">security updates</a> for various
applications are committed to the ports tree as soon as possible, and
corresponding package security updates are made available as snapshots
for <i>-current</i>.
d109 1
a109 1
<h2 id="PkgMgmt">Package Management</h2>
d113 3
a115 4
Packages are the pre-compiled binaries of some of the most used
third party software.
Packages can be managed easily with the help of several utilities,
also referred to as the pkg* tools:
d118 5
a122 1
  - a utility for installing and upgrading software packages
d124 1
a124 1
  - a utility for deleting previously installed software packages
d126 1
a126 3
  - a utility for displaying information about software packages
  <li><a href="http://man.openbsd.org/pkg_create">pkg_create(1)</a>
  - a utility for creating software packages
a128 1
<p>
d131 2
a132 2
Application X is said to be dependent on these other applications,
which is why Y and Z are called <i>dependencies</i> of X.
d135 1
a135 1
This way, a whole <i>dependency tree</i> is formed.
d142 1
a142 2
<a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a>
for several purposes:
d145 11
a155 11
<li>Different checks: has the package already been installed, or does it
conflict with other installed packages or file names?
<li>Dependencies which are not yet present on the system are
automatically fetched and installed before proceeding with the
installation of the package.
<li>Information about the package(s) is recorded in a central
repository, by default located in <tt>/var/db/pkg/</tt>.
This will, among other things, prevent the dependencies of a package
from being deleted before the package itself has been deleted.
This helps ensure that an application cannot be accidentally broken
by a careless user.
d158 1
a158 1
<h3 id="Easy">Making things easy: PKG_PATH and pkg.conf</h3>
d188 1
a188 1
<b>Example 2:</b> fetching packages with 
d207 18
d227 4
a230 2
If you have the ports tree on your system, you can quickly find the package
you are looking for by <a href="#PortsSearch">searching the ports tree</a>.
a236 30
<p>
You will notice that certain packages are available in a few different
varieties, formally called <b>flavors</b>.
Others are pieces of the same application which may be installed separately.
These are called <b>subpackages</b>.
This will be detailed further in <a href="#PortsFlavors">using flavors and
subpackages</a>, but flavor basically means they are configured with
different sets of options.
Many packages have flavors.
For example: database support, support for systems without X or network
additions like SSL and IPv6.
Every flavor of a package will have a different suffix in its package name.
For detailed information about package names, please refer to
<a href="http://man.openbsd.org/packages-specs">packages-specs(7)</a>.

<p>
<b>Note:</b>
Not all possible packages are necessarily available on the mirror servers!
Some applications simply don't work on all architectures.
<!-- XXXrelease - remove cd mentions for 6.1 -->
Some applications cannot be distributed via mirrors (or CD-ROM) for licensing
reasons.
There may also be many possible combinations of flavors of a port, and the
OpenBSD project just does not have the resources to build them all.
If you need a combination which is not available, you will have to build
the port from source.
For more information on how to do that, read
<a href="#PortsFlavors">using flavors and subpackages</a> in the ports
section of this document.

d241 25
a265 40
If you have <a href="#Easy">made things easy</a> for yourself by setting
<tt>PKG_PATH</tt> or configuring <tt>/etc/pkg.conf</tt>, you can just call
pkg_add(1) with the package name, as is shown in the following basic example.

<blockquote><pre>
# <b>pkg_add -v screen-4.0.3p6</b>
Update candidates: quirks-2.241 -&gt; quirks-2.241
quirks-2.241 signed on 2016-07-26T16:56:10Z
quirks-2.241: ok
screen-4.0.3p6: ok
Extracted 1064455 from 1065566
</pre></blockquote>

In this example, the <tt>-v</tt> flag was used to give a more verbose output.
This option is not needed, but it is helpful for debugging and was used here
to give a little more insight into what pkg_add(1) is actually doing.
Specifying multiple <tt>-v</tt> flags will produce even more verbose output.

<p>
pkg_add(1) will ask you questions when it cannot decide which version of
a package you might want to install.
For example, if you don't know the version number of a package beforehand,
you can try something like:

<blockquote><pre>
# <b>pkg_add screen</b>
quirks-2.241 signed on 2016-07-26T16:56:10Z
Ambiguous: choose package for screen
a       0: &lt;None&gt;
        1: screen-4.0.3p6
        2: screen-4.0.3p6-shm
Your choice: <b>1</b>
screen-4.0.3p6: ok
</pre></blockquote>

For some packages, some important additional information will be given
about the configuration or use of the application on an OpenBSD system.
Since it is important, it will be displayed whether or not you use the
<tt>-v</tt> flag.
Consider the following example:
a268 1
quirks-2.241 signed on 2016-07-26T16:56:10Z
a279 28
Let us now continue with an example of a package which has dependencies:

<blockquote><pre>
# <b>pkg_add tin</b>
quirks-2.241 signed on 2016-07-26T16:56:10Z
tin-2.2.1:libiconv-1.14p3: ok
tin-2.2.1:pcre-8.38p0: ok
tin-2.2.1:icu4c-57.1: ok
tin-2.2.1:gettext-0.19.7: ok
tin-2.2.1: ok
</pre></blockquote>

It is possible to specify multiple package names on one line, which
then all get installed at once, along with possible dependencies.

<p>
It is also possible to specify the absolute location of a package on the
command line.
This absolute location may be a path to a local file or a remote URL.
Supported prefixes are http, https, ftp and scp.

<p>
<b>Note:</b>
Not all architectures have the same packages available.
Some ports do not work on certain architectures, and performance limits
the number of packages that can be built on others.

<p>
d281 2
a282 2
earlier and removed, pkg_add(1) will <b>not</b> overwrite configuration
files which have been modified.
d290 4
a293 4
# <b>pkg_add xv-3.10ap4</b>
xv-3.10ap4:jpeg-6bp3: complete
xv-3.10ap4:png-1.2.14p0: complete
xv-3.10ap4:tiff-3.8.2p0: complete
a300 3
There is pkg_add, nicely installing dependencies, when all of a sudden
it aborts the installation of xv.
This is another safety precaution.
d302 1
a302 2
about shared libraries that the package expects to be installed,
both system libraries as well as third party libraries.
a322 32
<h3 id="PkgList">Listing installed packages</h3>

You can see a list of installed packages by using the
<a href="http://man.openbsd.org/pkg_info">pkg_info(1)</a>
utility.

<blockquote><pre>
$ <b>pkg_info</b>
aterm-0.4.2p1       color vt102 terminal emulator with transparency support
bzip2-1.0.4         block-sorting file compressor, unencumbered
expat-2.0.0         XML 1.0 parser written in C
fluxbox-0.9.15.1p0  window manager based on the original Blackbox code
gettext-0.14.6      GNU gettext
imlib2-1.3.0        image manipulation library
jpeg-6bp3           IJG's JPEG compression utilities
libiconv-1.9.2p3    character set conversion library
libltdl-1.5.22p1    GNU libtool system independent dlopen wrapper
libungif-4.1.4p0    tools and library routines for working with GIF images
libutf8-0.8         provides UTF-8 locale support
mutt-1.4.2.2i       tty-based e-mail client
pcre-6.4p1          perl-compatible regular expression library
png-1.2.14p0        library for manipulating PNG images
screen-4.0.3p3      multi-screen window manager
tcsh-6.14.00p1      extended C-shell with many useful features
tiff-3.8.2p0        tools and library routines for working with TIFF images
tin-1.8.2p0         threaded NNTP and spool based UseNet newsreader
</pre></blockquote>

When given an installed package name (or a location of a package which is to
be installed), pkg_info(1) will show more detailed information about that
specific package.

d331 2
a332 4
unzip-5.52p0 (extracting): complete
unzip-5.52 (deleting): complete
unzip-5.52p0 (installing): complete
Clean shared items: complete
d335 2
d338 3
a340 20
Invoking pkg_add(1) with the <tt>-u</tt> flag and no package name will
try to update all installed packages.

<p>
<b>Note:</b>
The <tt>-u</tt> switch relies on either the <tt>PKG_PATH</tt> environment
variable to be set or <tt>/etc/pkg.conf</tt> to be populated with a mirror.
If neither of those conditions are met, pkg_add(1) will not be able to find
updates.

<p>
Having several entries in <tt>PKG_PATH</tt> does not mean all entries will
be tried for update operations.
Instead, pkg_add(1) will stop at the first path with matching candidates.

<p>
If you had a configuration file belonging to the old version that you
modified, it will be left untouched by default.
You can, however, replace it with the default configuration file of
the new version, by calling pkg_add(1) with the <tt>-c</tt> flag.
d344 2
a345 30
To delete a package, simply take the proper name of the package as shown
by pkg_info(1) (see <a href="#PkgList">listing installed packages</a>
above) and use
<a href="http://man.openbsd.org/pkg_delete">pkg_delete(1)</a>
to remove the package.
In the example below, the screen package is being removed.
Notice that there are sometimes instructions about extra items which need
to be removed manually.
As with the pkg_add(1) utility, you can use the <tt>-v</tt> flag to get
more verbose output.

<blockquote><pre>
# <b>pkg_delete screen</b>
screen-4.0.3p3: complete
Clean shared items: complete
</pre></blockquote>

<b>Note:</b>
Often, it is not necessary to specify the version numbers and flavors with
the package name, since pkg_delete(1) will usually be able to find the full
name by itself.
You need to specify the complete package name (in the example, that is
<tt>screen-4.0.3p3</tt>) only if ambiguity is possible due to multiple
installed packages with the specified name. In that case, pkg_delete(1)
cannot know which package to delete.

<p>
For safety, pkg_delete(1) will not remove configuration files if they
have been modified.
Instead it will inform you about this.
d349 2
a350 2
screen-4.0.3p3: complete
Clean shared items: complete
d355 1
a355 2
If you prefer to have those configuration files removed automatically,
you can do so by using the <tt>-c</tt> flag.
d359 7
a365 15
In some odd cases, you may find that a package was not added or deleted
completely, due to conflicts with other files.
The incomplete installation is usually marked with "partial-" prepended
to the package name.
This can, for instance, happen when you coincidentally press CTRL+C
during installation:

<blockquote><pre>
# <b>pkg_add screen-4.0.3p3</b>
screen-4.0.3p3: complete
Adjusting md5 for /usr/local/info/screen.info-3 from 49fb3fe1cc3a3b0057518459811b6dac to 3b9c7811244fb9f8d83bb27d3a0f60d8
/usr/sbin/pkg_add: Installation of screen-4.0.3p3 failed, partial installation recorded as partial-screen-4.0.3p3
</pre></blockquote>

It is always a good idea to remove partial packages from your system, and to
d367 2
a368 3
It is often an indication that you do not have a clean system with everything
installed from packages, but possibly packages mixed up with other software
installed straight from source.
d379 1
a379 2
<b>Everyone is encouraged to use the pre-compiled <a href="#PkgMgmt">
binary packages</a></b>.
d391 6
a396 6
<li>Where and how to fetch the source of the software
<li>Which other software it depends upon
<li>How to alter the sources (if necessary)
<li>How to configure and build it
<li>How to test it (optional)
<li>How to install it
a398 1
<p>
d402 4
a405 4
<li><tt>PLIST</tt> - instructions for package creation once the application
    has been built
<li><tt>DESCR</tt> - description of the application
<li><tt>distinfo</tt> - distribution file checksums and size
a407 1
<p>
d412 5
a416 7
<li><tt>distfiles/</tt>
 - where the ports system stores software distribution sets after downloading
<li><tt>infrastructure/</tt>
 - the main directory of the ports infrastructure, containing all necessary
   scripts and makefiles
<li><tt>packages/</tt>
 - contains all binary packages built by the ports system
d430 1
a430 2
When a user issues
<a href="http://man.openbsd.org/make">make(1)</a>
a467 2
Before continuing, you must read the section about NOT <a href="#NoFun">
mixing up your OpenBSD system and ports tree</a>.
d522 1
a522 2
$ <b>ftp https://ftp.openbsd.org/pub/OpenBSD/$(uname -r)/ports.tar.gz</b>
$ <b>ftp https://ftp.openbsd.org/pub/OpenBSD/$(uname -r)/SHA256.sig</b>
a527 1
For example:
a533 4
If you'd like to be able to write to <tt>/usr/ports</tt> as a regular user,
see <a href="#PortsConfig">the next section</a>.

<p>
d536 1
a536 1
You will find the snapshots in the <tt>pub/OpenBSD/snapshots/</tt> directory.
d549 4
a552 4
This section introduces some additional global settings for building
applications from ports.
You can skip this section, but then you will be required to perform many
of the make(1) statements in later examples as root.
a564 7
<p>
<ul>
<li>You can set up
<a href="http://man.openbsd.org/doas">doas(1)</a>
and have the ports system use it for tasks requiring superuser permissions.
This requires granting three permissions:

d566 21
a586 23
  <li>The user who is going to build ports needs permission
  to run arbitrary commands as the superuser.
  <li>The user who is going to build ports needs permission
  to pass certain environment variables used by the ports system
  from the shell calling doas to the privileged shell,
  see the <tt>setenv</tt> and <tt>keepenv</tt> options in
  <a href="http://man.openbsd.org/doas.conf">doas.conf(5)</a>.
  <li>The ports system needs permission to invoke doas(1).
  This can be granted by setting the <tt>SUDO</tt> variable defined in
  <a href="http://man.openbsd.org/bsd.port.mk">bsd.port.mk(5)</a>
  in the environment, which can be made permanent
  by adding the following line to
  <a href="http://man.openbsd.org/mk.conf">mk.conf(5)</a>:

  <blockquote><pre>
  SUDO=/usr/bin/doas
  </pre></blockquote>
</ul>

<li>You can modify the ownership of the ports tree so that you can write
there as a regular user.
In this case, an example user has been added to the <tt>wsrc</tt> group
and the underlying directories are made group-writable.
a594 1
<p>
d651 2
a652 2
It is a SQLite database, but basically just about any database format can be
created using the ports infrastructure.
d657 1
a657 1
Just pkg_add(1) the sqlports package to get started.
d719 1
a719 1
rsync-2.6.9: complete
d735 1
a735 1
rsnapshot-1.2.9: complete
d754 2
a755 1
This will call pkg_add(1) with the <tt>-r</tt> flag.
a759 1
Good examples are compilers like GCC and the Java Software Development Kit.
d765 2
a766 2
  Adjust them with ksh's ulimit or csh's limit command.
  <li>You simply don't have enough RAM in your machine.
d819 2
a820 2
rsnapshot-1.2.9: complete
Clean shared items: complete
d823 2
a824 2
This will call pkg_delete(1) to have the corresponding package removed
from your system.
d831 1
a831 2
rsnapshot-1.2.9: complete
Clean shared items: complete
d833 1
a833 1
rsnapshot-1.2.9: complete
d1003 1
a1003 1
been tampered with -- pkg_add does this silently and automatically.
a1035 4
<p>
By default, pkg_add will only allow signed packages, and it will always
look for keys matching <tt>/etc/signify/*pkg.pub</tt>.

d1045 4
a1048 4
  <li>Read EVERYTHING about <a href="faq5.html#Flavors">OpenBSD's flavors</a>:
  -release, -stable and -current.
  The short summary is as follows, but please do read the document mentioned
  above to get an idea about which one it is you want to use.
d1050 1
a1050 2
  <!-- XXXrelease - remove cd mentions for 6.1 -->
  <li><a href="../orders.html">-release</a>: What is on the CD
d1056 10
a1065 14
<li>Do NOT check out a -current ports tree and expect it to work on
a -release or -stable system.
This is one of the most common errors, and you will irritate people when
you ask for help about why nothing seems to work.
<b>If you follow -current, you need both a -current base system
and a -current ports tree</b>.
Yes, this really does mean a wonderful new port will typically not work on
your "older" system, even if that system was -current just a few weeks ago.
Keep in mind that if you use X11 as part of your system, it must also
follow the corresponding branch!
<li>Because no intrusive changes are made in -stable, it is possible to
use a -stable ports tree on a -release system and vice versa.
There is no need to update all your installed packages after applying
a few errata patches to your system.
a1067 1
<p>
a1071 1
If you insist on doing so, you are on your own to figure it out.
a1085 5
DO NOT mix versions of ports and OpenBSD!
Doing so will sooner or later (probably very soon, in fact) cause you
headaches trying to solve <a href="#NoFun">all kinds of errors</a>!

<p>
a1110 18
<h3 id="NoPkg">Why is there no package for my Top-Favorite-Software?</h3>

There are several possible reasons for this:

<ul>
  <li>Some software must simply not be redistributed in binary package
  form at all, according to its license.
  Other software is encumbered by patents and therefore cannot be
  redistributed.
  If your Top-Favorite-Software falls into this category, you will need
  to use the port and compile from source.
  <li>Obvious, but sometimes forgotten: there is
  <a href="#NoPort">no port of your Top-Favorite-Software</a>.
  You can verify this by <a href="#PortsSearch">searching the ports tree</a>.
  If there is indeed no port of your Top-Favorite-Software, then you
  are welcome to <a href="#Helping">help</a>.
</ul>

a1147 16
Every <a href="faq1.html#Next">six months</a>, as a
<a href="faq5.html#Flavors">new release</a> of OpenBSD is made,
an effort is made to test the building of every port on every platform.
During the development cycle, however, it's likely that some ports will break.

<p>
In addition to having all the pieces work together, there is just the matter
of time and resources required to compile some applications from source.
Applications such as
<a href="https://www.mozilla.org/en-US/">Mozilla products</a>
or <a href="http://www.kde.org">KDE</a> may take hours and huge amounts
of disk space and RAM/swap to build.
<!-- XXXrelease - remove cd mentions for 6.1 -->
Why go through this much time and effort when the programs are already
compiled and sitting on your <a href="../orders.html">CD-ROM</a> or
<a href="../ftp.html">mirror</a>, waiting to be used?
d1158 1
a1158 1
  or <tt>SYSCONFDIR</tt>)
d1161 1
a1161 1
However, for most people and most applications, using packages is a much
a1164 25
<h3 id="Knobs">How do I tweak these ports to have maximum performance?</h3>

OpenBSD is about stability and security.
Just like the GENERIC kernel is the default and the only supported kernel,
the ports team makes sure the ports work and are stable.
If you want to switch on all kinds of compiler options, you are on your own.
Please do not ask questions on the mailing lists such as why it does not
work when you tried to switch on a few hidden knobs to make it work faster.
In general, all this tweaking is not necessary for 99% of users,
and it is very likely to be a complete waste of time, for you, the user, as
well as for the developers who read about your "problems" when in reality
there are none.

<h3 id="Wait">I submitted a new port/an update weeks ago.
Why isn't it committed?</h3>

The ports team has very limited resources and no committer was able
to look at your port/update in time.
As frustrating as it may be, just ignore this fact.
Take care of your port, send updates and eventually someone might take care
of it.
It has happened before that people suddenly have some free time to spend on
committing ports, or their interests shift to new areas and suddenly your
old submission becomes interesting, if it is remembered.

d1219 2
a1220 4
  <li>Use
  <a href="http://man.openbsd.org/script">script(1)</a>
  to create a complete build transcript.
  Do not remove the configure information.
@


1.149
log
@fix some misuse of "up-to-date" / "up to date"

(use hyphens if the compound adjective is before the noun. use spaces if
it's after the noun.)
@
text
@d11 1
@


1.148
log
@Point pkg_sign(1) man link at 6.0 release

pkg_sign -s syntax changed between 6.0 and -current
point the man page at the version in sync with the FAQ
content and mark it with XXXrelease to be reverted
for the 6.1 FAQ post release.

Pointed out by: _gypcio on IRC Freenode

OK tj@@
@
text
@d1305 1
a1305 1
everything up-to-date.
@


1.147
log
@add two missing <b> tags
@
text
@d1215 2
a1216 1
<a href="http://man.openbsd.org/pkg_sign">pkg_sign(1)</a>.
@


1.146
log
@update some pkg_* output to current reality - it's changed considerably
over the past ten years or so.  there's a lot more to do here in that
regard, but that's all i have energy for right now.  zap some text that
is unnecessary or no longer true.
@
text
@d310 1
a310 1
Your choice: 1
d858 1
a858 1
$ sqlite3 /usr/local/share/sqlports
@


1.145
log
@Switch a few links to ftp.openbsd.org, www.libressl.org and www.openssh.org
to https now that the certificates are fully supported. Only fully
qualified links are modified and none that are generated from build/. While
there, fix a few broken links that were found during the conversion.

requested by tj, "yes, but carefully" beck
@
text
@d284 6
a289 4
# <b>pkg_add -v screen-4.0.3p3</b>
parsing screen-4.0.3p3
installed /etc/screenrc from /usr/local/share/examples/screen/screenrc | 71%
screen-4.0.3p3: complete
a294 1
Notice the message mentioning <tt>/etc/screenrc</tt>.
d305 7
a311 7
Ambiguous: screen could be screen-4.0.3p3 screen-4.0.3p3-shm
Choose one package
         0: &lt;None&gt;
         1: screen-4.0.3p3
         2: screen-4.0.3p3-shm
Your choice: <b>1</b>
screen-4.0.3p3: complete
d321 7
a327 16
# <b>pkg_add ghostscript-fonts-8.11</b>
ghostscript-fonts-8.11: complete
You may wish to update your font path for /usr/local/share/ghostscript/fonts
--- ghostscript-fonts-8.11 -------------------
To install these fonts for X11, just make sure that the fontpath
lists the 75dpi or 100dpi bitmap fonts before the ghostscript fonts,
and make sure you have the string ":unscaled" appended to the bitmap
font's fontpath. This way, the bitmap fonts will be used if they
match, and the Type 1 versions will be used if the font needs to be
scaled. Below is the relevant section from a typical xorg.conf file.

   FontPath   "/usr/X11R6/lib/X11/fonts/misc/"
   FontPath   "/usr/X11R6/lib/X11/fonts/75dpi/:unscaled"
   FontPath   "/usr/X11R6/lib/X11/fonts/100dpi/:unscaled"
   FontPath   "/usr/local/lib/X11/fonts/ghostscript/"
   FontPath   "/usr/X11R6/lib/X11/fonts/Type1/"
d337 7
a343 17
# <b>pkg_add -v tin-1.8.2p0</b>
parsing tin-1.8.2p0
Dependencies for tin-1.6.2 resolve to: gettext-0.14.6, libutf8-0.8, pcre-6.4p1,
libiconv-1.9.2p3 (todo: libiconv-1.9.2p3,gettext-0.14.6,pcre-6.4p1,libutf8-0.8)
tin-1.8.2p0:parsing libiconv-1.9.2p3
tin-1.8.2p0:libiconv-1.9.2p3: complete
tin-1.8.2p0:parsing gettext-0.14.6
Dependencies for gettext-0.14.6 resolve to: expat-2.0.0, libiconv-1.9.2p3 (todo:
expat-2.0.0)
tin-1.8.2p0:parsing expat-2.0.0
tin-1.8.2p0:expat-2.0.0: complete
tin-1.8.2p0:gettext-0.14.6: complete
tin-1.8.2p0:parsing pcre-6.4p1
tin-1.8.2p0:pcre-6.4p1: complete
tin-1.8.2p0:parsing libutf8-0.8
tin-1.8.2p0:libutf8-0.8: complete
tin-1.8.2p0: complete
a345 9
Again, we added the <tt>-v</tt> flag to see more of what is happening.
Upon investigating the packing information, dependencies are found and
get installed first.
Somewhere in the middle you can see the gettext package being installed,
which depends on libiconv.
Before installing gettext, its packing information is examined and it
is verified whether libiconv has already been installed.

<p>
d350 2
a351 2
If, for some reason, you decide not to use <tt>PKG_PATH</tt>, it is also
possible to specify the absolute location of a package on the command line.
a353 12
Let's consider installation via HTTP in the next example:

<blockquote><pre>
# <b>pkg_add http://your.local.mirror/pub/OpenBSD/$(uname -r)/packages/$(uname -p)/screen-4.0.3p3.tgz</b>
screen-4.0.3p3: complete
</pre></blockquote>

In this example, the <tt>-v</tt> flag wasn't used, so only needed messages
are shown.
Notice the complete filename was entered by adding a <tt>.tgz</tt> suffix.
You can also skip this suffix, as in the previous examples, since it is
auto-completed by pkg_add(1).
a365 11
Instead, it will inform you about this as follows (only when using the
<tt>-v</tt> flag, however):

<blockquote><pre>
# <b>pkg_add -v screen-4.0.3p3</b>
parsing screen-4.0.3p3
The existing file /etc/screenrc has NOT been changed
It does NOT match the sample file /usr/local/share/examples/screen/screenrc
You may wish to update it manually
screen-4.0.3p3: complete
</pre></blockquote>
d367 1
@


1.144
log
@remove "why is my top-favorite-software not part of the base system?"
faq1 covers this already.

ok tb
@
text
@d752 2
a753 2
$ <b>ftp http://ftp.openbsd.org/pub/OpenBSD/$(uname -r)/ports.tar.gz</b>
$ <b>ftp http://ftp.openbsd.org/pub/OpenBSD/$(uname -r)/SHA256.sig</b>
@


1.143
log
@speed up example "find" command by doing less forking.

ok tb
@
text
@a84 2
  <li><a href="#NotInBase"    >Why is my Top-Favorite-Software not
                               part of the base system?</a>
a1411 20

<h3 id="NotInBase">Why is my Top-Favorite-Software not part of the base
system?</h3>

Because OpenBSD is supposed to be a small stand-alone UNIX-like operating
system, we need to draw a line as to what to include.
Generally, for an application to be included in the base system:

<ul>
  <li>It must meet the high quality standards, laid out in the
  <a href="../goals.html">goals</a> of the OpenBSD project.
  <li>Its license must not be too restrictive and must be compatible
  with the BSD license.
  <li>It must not be too large, in order to keep the size of the base
  system acceptable.
</ul>

<p>
Further answers to this question can be found on
<a href="faq1.html#HowAbout">this page</a>.
@


1.142
log
@fix some wording; from rob pierce
@
text
@d838 1
a838 1
# <b>find /usr/ports -type d -exec chmod g+w {} \;</b>
@


1.141
log
@6.0 faq updates: setenv in doas.conf, proot, wxneeded, bump cvs examples
to -rOPENBSD_6_0 and link to the 6.0 upgrade guide.

ok tb
@
text
@d113 1
a113 2
The end result of the porting effort are ready-to-install binary
packages.
@


1.140
log
@Change a few 'uname -m' to 'uname -p' for PKG_PATH.
@
text
@d205 1
a205 1
you will need to pass <tt>keepenv { PKG_PATH }</tt> in the config file for
d267 1
d708 1
d750 1
d817 1
a817 1
  see the <tt>keepenv</tt> option in
d1195 3
a1197 3
<a href="http://man.openbsd.org/dpb">dpb(1)</a>
takes a list of ports to build and automatically builds them all in an
optimal order, making use of as much parallelism as possible.
d1207 2
a1208 2
<a href="http://man.openbsd.org/pkgpath">pkgpaths</a>
in <tt>~/localports</tt> and build all the packages.
d1210 1
a1210 1
The <tt>~/localports</tt> file would look something like this:
d1213 1
a1213 1
net/cvsync
d1215 1
a1215 6
net/rsync
net/nfsen
textproc/mupdf
misc/magicpoint
lang/sbcl
editors/emacs
d1218 2
a1219 3
If you do not provide a list of ports to build on the command line or
via <tt>-P</tt> or <tt>-I</tt>,
<a href="http://man.openbsd.org/dpb">dpb(1)</a>
d1224 2
d1260 1
a1260 1
# <b>signify -Gns /etc/signify/toto-pkg.sec -p /etc/signify/toto-pkg.pub</b>
d1271 1
a1271 1
# <b>pkg_sign -s signify -s /etc/signify/toto-pkg.sec -o signed -S all</b>
d1278 1
a1278 1
SIGNING_PARAMETERS=-s signify -s /etc/signify/toto-pkg.sec
d1282 1
a1282 1
<tt>toto-pkg.pub</tt> should be put into the <tt>/etc/signify</tt> directory
d1303 1
d1463 1
@


1.139
log
@tls on openbsd.org is now real:
- link to https://www.openbsd.org from the sub-projects' pages
- make internal links relative
- switch link rel=canonical to https to please some search engines
"go ahead" from beck, "do it!!!!" tj
@
text
@d199 1
a199 1
# <b>export PKG_PATH=http://a.local.mirror/$(uname -r)/packages/$(uname -m)/</b>
d213 1
a213 1
The <tt>-r</tt> and <tt>-m</tt> flags to
d386 1
a386 1
# <b>pkg_add http://your.local.mirror/pub/OpenBSD/$(uname -r)/packages/$(machine -a)/screen-4.0.3p3.tgz</b>
d1271 1
a1271 1
# <b>cd /usr/ports/packages/$(uname -m)</b>
@


1.138
log
@- shorten a few section titles and fix a title mismatch
- remove "with openbsd" from titles (it should be obvious)
- merge "adding a file set after install" into explanation of file sets
- merge "device not configured" and unsupported hardware sections
- remove invisible <p> tags

ok tb
@
text
@d13 1
a13 1
<link rel="canonical" href="http://www.openbsd.org/faq/faq15.html">
@


1.137
log
@add a missing anchor to faq1.html needed by faq15.html. update
link to mozilla. from validator.w3.org/checklink
@
text
@d453 1
a453 1
Just <a href="faq4.html#AddFileSet">add the required file set</a>.
@


1.136
log
@expand on the explanation and example of using pkg.conf as an alternative
to PKG_PATH. shuffle a few bits around for clarity.

based on a diff from peter piwowarski
with input from tb
@
text
@d1459 2
a1460 1
Applications such as <a href="http://www.mozilla.org">Mozilla products</a>
@


1.135
log
@delete section numbers. this will make adding and removing content a lot
less work.
@
text
@d189 1
a189 1
<h3 id="Easy">Making things easy: PKG_PATH</h3>
d191 3
a193 6
You can make things really easy by using the <tt>PKG_PATH</tt> environment
variable.
Just point it to your favorite location and pkg_add(1) will automatically
look there for any package you specify.
It will even fetch and install the necessary dependencies of this package
automatically.
d196 1
a196 6
A list of possible locations to fetch packages from is given in the
<a href="#PkgFind">following section</a>.

<p>
Example 1: fetching from your <a href="../orders.html">CD-ROM</a>,
assuming you mounted it on <tt>/mnt/cdrom</tt>
d199 2
a200 1
# <b>export PKG_PATH=/mnt/cdrom/$(uname -r)/packages/$(machine -a)/</b>
d203 18
a220 1
Example 2: fetching from a nearby <a href="../ftp.html">mirror</a>
d223 2
a224 1
# <b>export PKG_PATH=http://your.local.mirror/pub/OpenBSD/$(uname -r)/packages/$(machine -a)/</b>
d227 6
a232 18
It's usually a good idea to add a line similar to the above examples to
your <tt>~/.profile</tt>.
As with the classic <tt>PATH</tt> variable, you can specify multiple
locations, separated by colons.
That way, pkg_add(1) can split the path correctly even if it holds URL
schemes containing colons.
If the first entry in <tt>PKG_PATH</tt> fails, the next one will be
tried, and so on, until the package is found.
If all entries fail, an error is produced.

<p>
Notice the use of
<a href="http://man.openbsd.org/machine">machine(1)</a>
in the above command lines.
This automatically substitutes your installed OpenBSD application
architecture, which is usually, but not always, your platform name.
Of course, if you are using snapshots, you will replace "$(uname -r)" with
"snapshots" instead.
a237 13
Just look for your package in one of these places:

<ul>
<li>On one of the three <a href="../orders.html">CD-ROMs</a>, depending on
your architecture.
The CD-ROMs carry only the most commonly used, freely distributable packages
for the most commonly used platforms.
<li>On the <a href="../ftp.html">mirror servers</a>.
Packages are located in the <tt>/pub/OpenBSD/(version)/packages</tt> directory.
From there, packages are broken down depending on architecture.
Note that OpenBSD also includes a list of package mirrors in the
<tt>/etc/examples/pkg.conf</tt> file.
</ul>
d279 2
a280 3
The
<a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a>
utility is used to install packages.
d282 2
a283 2
the <tt>PKG_PATH</tt> environment variable, you can just call pkg_add(1)
with the package name, as is shown in the following basic example.
@


1.134
log
@sync porter's handbook formatting with the main faq style.
@
text
@d9 1
a9 3
<title>15 - Packages and Ports</title>
<meta name= "description"   content= "OpenBSD FAQ 15 - The packages and ports
                                      system">
d38 1
a38 1
<font color="#e00000">FAQ 15 - Packages and Ports</font>
d47 2
a48 2
<li><a href="#Intro"          >15.1 - Introduction</a>
<li><a href="#PkgMgmt"        >15.2 - Package management</a>
d50 8
a57 9
  <li><a href="#PkgHow"       >15.2.1 - How does it work?</a>
  <li><a href="#Easy"         >15.2.2 - Making things easy</a>
  <li><a href="#PkgFind"      >15.2.3 - Finding packages</a>
  <li><a href="#PkgInstall"   >15.2.4 - Installing new packages</a>
  <li><a href="#PkgList"      >15.2.5 - Listing installed packages</a>
  <li><a href="#PkgUpdate"    >15.2.6 - Updating installed packages</a>
  <li><a href="#PkgRemove"    >15.2.7 - Removing installed packages</a>
  <li><a href="#PkgPartial"   >15.2.8 - Incomplete package installation or
                               removal</a>
d59 1
a59 1
<li><a href="#Ports"          >15.3 - Working with ports</a>
d61 5
a65 5
  <li><a href="#PortsHow"     >15.3.1 - How does it work?</a>
  <li><a href="#PortsFetch"   >15.3.2 - Fetching the ports tree</a>
  <li><a href="#PortsConfig"  >15.3.3 - Configuration of the ports system</a>
  <li><a href="#PortsSearch"  >15.3.4 - Searching the ports tree</a>
  <li><a href="#PortsInstall" >15.3.5 - Straightforward installation:
d67 6
a72 6
  <li><a href="#PortsClean"   >15.3.6 - Cleaning up after a build</a>
  <li><a href="#PortsDelete"  >15.3.7 - Uninstalling a port's package</a>
  <li><a href="#PortsFlavors" >15.3.8 - Using flavors and subpackages</a>
  <li><a href="#dpb"          >15.3.9 - Using dpb to build multiple ports</a>
  <li><a href="#PortsSecurity">15.3.10 - Security updates (-stable)</a>
  <li><a href="#PkgSig"       >15.3.11 - Package signatures</a>
d74 1
a74 1
<li><a href="#PkgFAQ"         >15.4 - FAQ</a>
d76 1
a76 1
  <li><a href="#NoFun"        >15.4.1 - I'm getting all kinds of crazy errors.
d79 1
a79 1
  <li><a href="#Latest"       >15.4.2 - The latest version of my
d81 1
a81 1
  <li><a href="#NoPkg"        >15.4.3 - Why is there no package for my
d83 1
a83 1
  <li><a href="#NoPort"       >15.4.4 - Why is there no port of my
d85 1
a85 1
  <li><a href="#NotInBase"    >15.4.5 - Why is my Top-Favorite-Software not
d87 2
a88 3
  <li><a href="#PkgVsPorts"   >15.4.6 - What should I use, packages or
                               ports?</a>
  <li><a href="#Knobs"        >15.4.7 - How do I tweak these ports to have
d90 1
a90 1
  <li><a href="#Wait"         >15.4.8 - I submitted a new port/an update
d93 2
a94 2
  <li><a href="#Problems"     >15.5 - Reporting problems</a>
  <li><a href="#Helping"      >15.6 - Helping us</a>
d99 1
a99 1
<h2 id="Intro">15.1 - Introduction</h2>
d139 1
a139 1
<h2 id="PkgMgmt">15.2 - Package Management</h2>
d141 1
a141 1
<h3 id="PkgHow">15.2.1 - How does it work?</h3>
d189 1
a189 1
<h3 id="Easy">15.2.2 - Making things easy: PKG_PATH</h3>
d235 1
a235 1
<h3 id="PkgFind">15.2.3 - Finding packages</h3>
d291 1
a291 1
<h3 id="PkgInstall">15.2.4 - Installing new packages</h3>
d471 1
a471 1
Boot the installer (as detailed in <a href="faq4.html">FAQ 4</a>),
d475 1
a475 1
<h3 id="PkgList">15.2.5 - Listing installed packages</h3>
d507 1
a507 1
<h3 id="PkgUpdate">15.2.6 - Updating installed packages</h3>
d543 1
a543 1
<h3 id="PkgRemove">15.2.7 - Removing installed packages</h3>
d587 1
a587 1
<h3 id="PkgPartial">15.2.8 - Incomplete package installation or removal</h3>
d609 1
a609 1
<h2 id="Ports">15.3 - Working with ports</h2>
d625 1
a625 1
<h3 id="PortsHow">15.3.1 - How does it work?</h3>
d711 1
a711 1
<h3 id="PortsFetch">15.3.2 - Fetching the ports tree</h3>
d797 1
a797 1
<h3 id="PortsConfig">15.3.3 - Configuration of the ports system</h3>
d883 1
a883 1
<h3 id="PortsSearch">15.3.4 - Searching the ports tree</h3>
d942 1
a942 2
<h3 id="PortsInstall">15.3.5 - Straightforward installation: a simple
example</h3>
d1030 1
a1030 1
<h3 id="PortsClean">15.3.6 - Cleaning up after a build</h3>
d1073 1
a1073 1
<h3 id="PortsDelete">15.3.7 - Uninstalling a port's package</h3>
d1107 1
a1107 1
<h3 id="PortsFlavors">15.3.8 - Using flavors and subpackages</h3>
d1202 1
a1202 1
<h3 id="dpb">15.3.9 - Using dpb to build multiple ports</h3>
d1243 1
a1243 1
<h3 id="PortsSecurity">15.3.10 - Security updates (-stable)</h3>
d1262 1
a1262 1
<h3 id="PkgSig">15.3.11 - Package signatures</h3>
d1305 1
a1305 1
<h2 id="PkgFAQ">15.4 - FAQ</h2>
d1307 1
a1307 1
<h3 id="NoFun">15.4.1 - I'm getting all kinds of crazy errors.
d1350 2
a1351 2
<h3 id="Latest">15.4.2 - The latest version of my Top-Favorite-Software
is not available!</h3>
d1391 1
a1391 2
<h3 id="NoPkg">15.4.3 - Why is there no package for my
Top-Favorite-Software?</h3>
d1409 1
a1409 1
<h3 id="NoPort">15.4.4 - Why is there no port of my Top-Favorite-Software?</h3>
d1431 2
a1432 2
<h3 id="NotInBase">15.4.5 - Why is my Top-Favorite-Software not part of the
base system?</h3>
d1448 2
a1449 2
Further answers to this question can be found in <a href="faq1.html#HowAbout">
FAQ 1</a>.
d1451 1
a1451 1
<h3 id="PkgVsPorts">15.4.6 - What should I use: packages or ports?</h3>
d1497 1
a1497 2
<h3 id="Knobs">15.4.7 - How do I tweak these ports to have maximum
performance?</h3>
d1510 2
a1511 2
<h3 id="Wait">15.4.8 - I submitted a new port/an update weeks ago. Why isn't
it committed?</h3>
d1522 1
a1522 1
<h2 id="Problems">15.5 - Reporting problems</h2>
d1590 1
a1590 1
<h2 id="Helping">15.6 - Helping us</h2>
@


1.133
log
@tweak [faq index] button and sync the pf user's guide with that style.
@
text
@d47 1
d74 1
a74 1
  <li><a href="#PortsSecurity">15.3.10 - Security updates (<i>-stable</i>)</a>
d1248 1
a1248 1
<h3 id="PortsSecurity">15.3.10 - Security updates</h3>
@


1.132
log
@save some space by moving the [faq index] button to the top right corner
and removing the <h3> table of contents.
@
text
@d41 3
a43 1
<small><a href= "index.html" style="float:right;">[FAQ Index]</a></small>
@


1.131
log
@use short form man links in the faq and fix a few broken links
@
text
@d41 1
a43 4
<p>
<a href= "index.html">[FAQ Index]</a>
<a href= "ports/index.html">[Porter's Handbook]</a>
<p>
a44 1
<h3>Table of Contents</h3>
a1628 4
<hr>
<p>
<a href= "index.html">[FAQ Index]</a>
<a href= "ports/index.html">[Porter's Handbook]</a>
@


1.130
log
@add link to porter's handbook at bottom as well
@
text
@d153 1
a153 1
  <li><a href="http://man.openbsd.org/?query=pkg_add">pkg_add(1)</a>
d155 1
a155 1
  <li><a href="http://man.openbsd.org/?query=pkg_delete">pkg_delete(1)</a>
d157 1
a157 1
  <li><a href="http://man.openbsd.org/?query=pkg_info">pkg_info(1)</a>
d159 1
a159 1
  <li><a href="http://man.openbsd.org/?query=pkg_create">pkg_create(1)</a>
d177 1
a177 1
<a href="http://man.openbsd.org/?query=pkg_add">pkg_add(1)</a>
d233 1
a233 1
<a href="http://man.openbsd.org/?query=machine">machine(1)</a>
d280 1
a280 1
<a href="http://man.openbsd.org/?query=packages-specs">packages-specs(7)</a>.
d299 1
a299 1
<a href="http://man.openbsd.org/?query=pkg_add">pkg_add(1)</a>
d483 1
a483 1
<a href="http://man.openbsd.org/?query=pkg_info">pkg_info(1)</a>
d553 1
a553 1
<a href="http://man.openbsd.org/?query=pkg_delete">pkg_delete(1)</a>
d680 1
a680 1
<a href="http://man.openbsd.org/?query=make">make(1)</a>
d708 1
a708 1
  <li><a href="http://man.openbsd.org/?query=ports">ports(7)</a>
d711 1
a711 1
  <li><a href="http://man.openbsd.org/?query=bsd.port.mk">bsd.port.mk(5)</a>
d824 1
a824 1
<a href="http://man.openbsd.org/?query=doas">doas(1)</a>
d835 1
a835 1
  <a href="http://man.openbsd.org/?query=doas.conf">doas.conf(5)</a>.
d838 1
a838 1
  <a href="http://man.openbsd.org/?query=bsd.port.mk">bsd.port.mk(5)</a>
d841 1
a841 1
  <a href="http://man.openbsd.org/?query=mk.conf">mk.conf(5)</a>:
d1116 1
a1116 1
<a href="http://man.openbsd.org/?query=ports">ports(7)</a>
d1196 1
a1196 1
<a href="http://man.openbsd.org/?query=pkg_add">pkg_add(1)</a>
d1213 1
a1213 1
<a href="http://man.openbsd.org/?query=dpb">dpb(1)</a>
d1225 1
a1225 1
<a href="http://man.openbsd.org/?query=pkgpath">pkgpaths</a>
d1243 1
a1243 1
<a href="http://man.openbsd.org/?query=dpb">dpb(1)</a>
d1273 1
a1273 1
<a href="http://man.openbsd.org/?query=signify">signify(1)</a>.
d1289 1
a1289 1
<a href="http://man.openbsd.org/?query=pkg_sign">pkg_sign(1)</a>.
d1585 1
a1585 1
  <a href="http://man.openbsd.org/?query=script">script(1)</a>
d1589 1
a1589 1
  <a href="http://man.openbsd.org/?query=pkg_info">pkg_info(1)</a>
d1591 1
a1591 1
  <li><a href="http://man.openbsd.org/?query=gcc">gcc(1)</a>
@


1.129
log
@each faq page has header and footer links that look like this:

[faq index] [to section x - some topic] [to section y - another topic]

that can be very useful if the faq you're reading only covers one topic,
or if the pages are meant to be read in order. it makes sense to have
them on the pf and smtpd faq pages, but the main faq contains a variety
of unrelated topics, so they're not actually very useful there. remove.

while here, make a few subject titles more concise.

ok tb
@
text
@d1636 1
@


1.128
log
@Update FAQ for OpenBSD 5.9.
From tj@@
@
text
@d45 1
a45 1
<a href= "faq14.html">[To Section 14 - Disk Setup]</a>
a1635 1
<a href= "faq14.html">[To Section 14 - Disk Setup]</a>
@


1.127
log
@new openbsd faq style. joint with tj and validator.w3.org
@
text
@d254 2
a255 2
<!-- Note that OpenBSD also includes a list of package mirrors in the
<tt>/etc/examples/pkg.conf</tt> file. XXXrelease -->
@


1.126
log
@add a small sprinkling of css to improve readability in the faq, ok tj@@ tb@@
@
text
@d9 1
a9 1
<title>15 - The OpenBSD packages and ports system</title>
d37 1
d39 4
a42 3
<img alt="[OpenBSD]" height=30 width=141 src="../images/smalltitle.gif" border="
0">
</a>
d46 1
a46 3

<h1><font color="#e00000">15 - The OpenBSD packages and ports system</font></h1>
<hr>
@


1.125
log
@fix URIs, the / before querystring isn't optional, if it isn't fixed up
by the browser the server returns 400 Bad Request
@
text
@d13 2
@


1.124
log
@Some cleanup after beck@@'s monster man.openbsd.org diff.
@
text
@d151 1
a151 1
  <li><a href="http://man.openbsd.org?query=pkg_add">pkg_add(1)</a>
d153 1
a153 1
  <li><a href="http://man.openbsd.org?query=pkg_delete">pkg_delete(1)</a>
d155 1
a155 1
  <li><a href="http://man.openbsd.org?query=pkg_info">pkg_info(1)</a>
d157 1
a157 1
  <li><a href="http://man.openbsd.org?query=pkg_create">pkg_create(1)</a>
d175 1
a175 1
<a href="http://man.openbsd.org?query=pkg_add">pkg_add(1)</a>
d231 1
a231 1
<a href="http://man.openbsd.org?query=machine">machine(1)</a>
d278 1
a278 1
<a href="http://man.openbsd.org?query=packages-specs">packages-specs(7)</a>.
d297 1
a297 1
<a href="http://man.openbsd.org?query=pkg_add">pkg_add(1)</a>
d481 1
a481 1
<a href="http://man.openbsd.org?query=pkg_info">pkg_info(1)</a>
d551 1
a551 1
<a href="http://man.openbsd.org?query=pkg_delete">pkg_delete(1)</a>
d678 1
a678 1
<a href="http://man.openbsd.org?query=make">make(1)</a>
d706 1
a706 1
  <li><a href="http://man.openbsd.org?query=ports">ports(7)</a>
d709 1
a709 1
  <li><a href="http://man.openbsd.org?query=bsd.port.mk">bsd.port.mk(5)</a>
d822 1
a822 1
<a href="http://man.openbsd.org?query=doas">doas(1)</a>
d833 1
a833 1
  <a href="http://man.openbsd.org?query=doas.conf">doas.conf(5)</a>.
d836 1
a836 1
  <a href="http://man.openbsd.org?query=bsd.port.mk">bsd.port.mk(5)</a>
d839 1
a839 1
  <a href="http://man.openbsd.org?query=mk.conf">mk.conf(5)</a>:
d1114 1
a1114 1
<a href="http://man.openbsd.org?query=ports">ports(7)</a>
d1194 1
a1194 1
<a href="http://man.openbsd.org?query=pkg_add">pkg_add(1)</a>
d1211 1
a1211 1
<a href="http://man.openbsd.org?query=dpb">dpb(1)</a>
d1223 1
a1223 1
<a href="http://man.openbsd.org?query=pkgpath">pkgpaths</a>
d1241 1
a1241 1
<a href="http://man.openbsd.org?query=dpb">dpb(1)</a>
d1271 1
a1271 1
<a href="http://man.openbsd.org?query=signify">signify(1)</a>.
d1287 1
a1287 1
<a href="http://man.openbsd.org?query=pkg_sign">pkg_sign(1)</a>.
d1583 1
a1583 1
  <a href="http://man.openbsd.org?query=script">script(1)</a>
d1587 1
a1587 1
  <a href="http://man.openbsd.org?query=pkg_info">pkg_info(1)</a>
d1589 1
a1589 1
  <li><a href="http://man.openbsd.org?query=gcc">gcc(1)</a>
@


1.123
log
@change http://www.openbsd.org/cgi-bin/man.cgi to be http://man.openbsd.org
this points stuff to the new place and gets us ready to deprecate the old
place we did this.
@
text
@d151 8
a158 9
<li><a href="http://man.openbsd.org?query=pkg_add">
pkg_add(1)</a> - a utility for installing and upgrading software packages
<li><a href="http://man.openbsd.org?query=pkg_delete">
pkg_delete(1)</a> - a utility for deleting previously installed software
packages
<li><a href="http://man.openbsd.org?query=pkg_info">
pkg_info(1)</a> - a utility for displaying information about software packages
<li><a href="http://man.openbsd.org?query=pkg_create">
pkg_create(1)</a> - a utility for creating software packages
d278 1
a278 2
<a href="http://man.openbsd.org?query=packages-specs">
packages-specs(7)</a>.
d551 2
a552 2
<a href="http://man.openbsd.org?query=pkg_delete">
pkg_delete(1)</a> to remove the package.
d706 6
a711 6
<li><a href="http://man.openbsd.org?query=ports">
ports(7)</a> - describes the different stages (make targets) of port
installation, the use of flavors and subpackages and some other options.
<li><a href="http://man.openbsd.org?query=bsd.port.mk">
bsd.port.mk(5)</a> - in-depth information about all the make targets,
variables, the fake (installation directory) framework, etc.
d833 1
a833 2
  <a href="http://man.openbsd.org?query=doas.conf">
  doas.conf(5)</a>.
d836 2
a837 2
  <a href="http://man.openbsd.org?query=bsd.port.mk">
  bsd.port.mk(5)</a> in the environment, which can be made permanent
d839 1
a839 2
  <a href="http://man.openbsd.org?query=mk.conf">
  mk.conf(5)</a>:
d1287 1
a1287 2
<a href="http://man.openbsd.org?query=pkg_sign">
pkg_sign(1)</a>.
d1587 2
a1588 2
  <a href="http://man.openbsd.org?query=pkg_info">
  pkg_info(1)</a> if it seems even remotely relevant.
@


1.122
log
@tweak plist/descr/distinfo formatiting and descriptions. based on an email
from bryce chidester, but done a bit differently.
@
text
@d151 1
a151 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add">
d153 1
a153 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete">
d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info">
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create">
d176 1
a176 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add">pkg_add(1)</a>
d232 1
a232 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=machine">machine(1)</a>
d279 1
a279 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=packages-specs">
d299 1
a299 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add">pkg_add(1)</a>
d483 1
a483 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info">pkg_info(1)</a>
d553 1
a553 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete">
d680 1
a680 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=make">make(1)</a>
d708 1
a708 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ports">
d711 1
a711 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bsd.port.mk">
d824 1
a824 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas">doas(1)</a>
d835 1
a835 1
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas.conf">
d839 1
a839 1
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bsd.port.mk">
d842 1
a842 1
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mk.conf">
d1118 1
a1118 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ports">ports(7)</a>
d1198 1
a1198 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add">pkg_add(1)</a>
d1215 1
a1215 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dpb">dpb(1)</a>
d1227 1
a1227 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath">pkgpaths</a>
d1245 1
a1245 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dpb">dpb(1)</a>
d1275 1
a1275 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=signify">signify(1)</a>.
d1291 1
a1291 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_sign">
d1588 1
a1588 1
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=script">script(1)</a>
d1592 1
a1592 1
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info">
d1594 1
a1594 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gcc">gcc(1)</a>
@


1.121
log
@- remove section 1.9 "what's new in 5.8" (just read the release page)
- remove section 2.1 "web pages of interest"
- amd 64 -> amd64
- mail list -> mailing list
- clean up table of contents
- remove "back" button on index (browsers can do this by themselves now)

ok tb
@
text
@d648 4
a651 4
<li>A PLIST, or packing list, which contains instructions for package
    creation once the application has been built
<li>A DESCR, or description of the application
<li>A distfile, containing distribution file checksums and size
@


1.120
log
@new sentence, new line. more formatting clean ups and mention that you need
SUDO set in /etc/mk.conf to run "make install" as a regular user.

ok tb
@
text
@d4 5
@


1.119
log
@mention pkg.conf as an alternative to PKG_PATH, re-add a line explaining
the -stable ports policy and note that the sqlports script is available
in the port.

suggested by and ok sthen
@
text
@d5 2
a6 1
<meta name= "description"   content= "OpenBSD FAQ 15 - The packages and ports system">
d38 2
a39 1
<h1><font color="#e00000">15 - The OpenBSD packages and ports system</font></h1><hr>
a52 1
<!--  <li><a href="#PkgSecurity"  >15.2.8 - Security updates (-stable packages)</a> -->
d54 1
a54 1
     removal</a>
d63 1
a63 1
     a simple example</a>
d74 2
a75 1
     I just can't seem to get this ports stuff working at all.</a>
d77 1
a77 1
     Top-Favorite-Software is not available!</a>
d79 1
a79 1
     Top-Favorite-Software?</a>
d81 1
a81 1
     Top-Favorite-Software?</a>
d83 1
a83 1
     part of the base system?</a>
d85 1
a85 1
     ports?</a>
d87 1
a87 1
     maximum performance?</a>
d89 1
a89 1
     weeks ago. Why isn't it committed?</a>
d134 2
a135 2
corresponding package security updates are made available as
snapshots for <i>-current</i>.
a140 1
<p>
a142 1

d158 2
a159 2
In order to run properly, application X may require that
other applications Y and Z be installed.
d190 4
a193 5
<p>
You can make things really easy by using the <tt>PKG_PATH</tt>
environment variable.
Just point it to your favorite location and pkg_add(1) will
automatically look there for any package you specify.
d204 1
d206 1
a206 1
$ <b>export PKG_PATH=/mnt/cdrom/$(uname -r)/packages/$(machine -a)/</b>
a208 1
<p>
d210 1
d212 1
a212 1
$ <b>export PKG_PATH=http://your.local.mirror/pub/OpenBSD/$(uname -r)/packages/$(machine -a)/</b>
a214 1
<p>
d217 2
a218 2
As with the classic <tt>PATH</tt> variable, you can specify
multiple locations, separated by colons.
d227 1
a227 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=machine&amp;sektion=1">machine(1)</a>
d229 2
a230 2
This automatically substitutes your installed OpenBSD "application
architecture", which is usually, but not always, your platform name.
d232 1
a232 1
"snapshots".
d241 4
a244 4
<li>On one of the three <a href="../orders.html">CD-ROMs</a>,
depending on your architecture.
The CD-ROMs carry only the most commonly used, freely distributable
packages for the most commonly used platforms.
d269 4
a272 4
Many packages have flavors, for example: database support,
support for systems without X, or network additions like SSL and IPv6.
Every flavor of a package will have a different suffix in its package
name.
d281 1
a281 1
Some applications can not be distributed via mirrors (or CD-ROM) for licensing
d283 2
a284 2
There may also be many possible combinations of flavors of a port,
and the OpenBSD project just does not have the resources to build them all.
d294 1
a294 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add">pkg_add(1)</a> 
a306 1
<p>
d308 2
a309 3
This option is not needed, but it is helpful for debugging and was
used here to give a little more insight into what pkg_add(1) is actually
doing.
a329 1
<p>
a354 1
<p>
d381 1
a381 1
Again we added the <tt>-v</tt> flag to see more of what is happening.
a404 1
<p>
d412 2
a413 1
<b>Note:</b> Not all architectures have the same packages available.
d418 3
a420 3
For your safety, if you are installing a package which you had
installed earlier and removed, pkg_add(1) will <b>not</b> overwrite
configuration files which have been modified.
a456 2

<p>
d460 1
a460 4
<!--
insert a good algorithm here
-->

a502 1
<p>
d508 1
a520 1
<p>
d533 2
a534 2
Having several entries in <tt>PKG_PATH</tt> does
not mean all entries will be tried for update operations.
d538 2
a539 2
If you had a configuration file belonging to the old version that
you modified, it will be left untouched by default.
a544 1
<p>
d551 4
a554 4
Notice that there are sometimes instructions about extra items
which need to be removed manually.
As with the pkg_add(1) utility, you can use the <tt>-v</tt> flag to
get more verbose output.
d562 4
a565 4
<p>
<b>Note:</b> Often, it is not necessary to specify the version numbers
and flavors with the package name, since pkg_delete(1) will usually be
able to find the full name by itself.
d567 3
a569 3
screen-4.0.3p3) only if ambiguity is possible due to multiple installed
packages with the specified name. In that case, pkg_delete(1) cannot
know which package to delete.
d579 1
a579 1
Clean shared items: complete 
a583 1
<p>
d603 5
a607 6
<p>
It is always a good idea to remove partial packages from your
system, and to fix potential problems that lead to this failure.
It is often an indication that you do not have a clean system with
everything installed from packages, but possibly packages mixed up with
other software installed straight from source.
d616 6
a621 5
<b>IMPORTANT NOTE</b>: The ports tree is meant for advanced users.
<b>Everyone is encouraged to use the pre-compiled
<a href="#PkgMgmt">binary packages</a></b>.
Do NOT ask beginner questions on the mailing lists like
"How can I get the ports tree working?"
d650 1
a650 2
All this information is kept in a directory hierarchy under
<tt>/usr/ports</tt>.
d681 3
a683 2
the port creates. Normally this is under <tt>${WRKOBJDIR}</tt>, defaulting
to <tt>/usr/ports/pobj</tt>, but you may override this (see
d690 2
a691 1
<b>Note:</b> Ports are never directly installed on your system.
d693 5
a697 5
Everything that gets installed there is bundled together into a
package that gets stored in the <tt>packages/</tt> subdirectory of the
ports tree, as mentioned earlier.
Installing a port really means creating a package and then installing
that package.
d700 1
a700 2
More information about the ports system may be found in these
manual pages:
d713 2
a714 2
Before continuing, you must read the section about NOT
<a href="#NoFun">mixing up your OpenBSD system and ports tree</a>.
d773 2
a774 1
create <tt>/usr/ports</tt> and all the directories under it. For example:
d785 5
a789 6
The snapshots available on the mirrors are generated daily from
the -current ports tree.
You will find the snapshots in the <tt>pub/OpenBSD/snapshots/</tt>
directory.
If you are using a snapshot of the ports tree, you should have
installed a matching snapshot of OpenBSD.
d793 3
a795 3
For more information about obtaining the ports tree via CVS,
read the <a href="../anoncvs.html">AnonCVS page</a>, which
contains a list of available servers and a number of examples.
a798 1
<p>
d810 2
a811 2
and perform only those steps that require superuser privileges as root;
for example the <tt>install</tt> make target.
d823 1
a823 1
  <ul>
a825 1

a831 1

d862 7
a868 7
<li>The working directory of ports.
This is controlled by the <tt>WRKOBJDIR</tt> variable, which specifies
the directory which will contain the working directories.
<li>The directory containing distribution files.
This is controlled by the <tt>DISTDIR</tt> variable.
<li>The directory containing newly built binary packages.
This is controlled by the <tt>PACKAGE_REPOSITORY</tt> variable.
d887 3
a889 4
Once you have the ports tree in place on your system, it becomes very
easy to search for software.
Just use <tt>make search key="searchkey"</tt> as shown in the
following example.
d905 4
a908 4
The search result gives a nice overview of each application that is
found: the port name, the path to the port, a one-line description, the
port's maintainer, keywords related to the port, library/build/runtime
dependencies, and architectures on which the port is known to work.
d916 2
a917 2
The sqlports port includes the script used to generate the database, which
could be used as a basis to generate databases in different formats.
d927 1
a927 1
sqlite> SELECT FULLPKGNAME,COMMENT FROM Ports WHERE COMMENT LIKE '%statistics%'; 
d944 2
a945 1
<h3 id="PortsInstall">15.3.5 - Straightforward installation: a simple example</h3>
d949 2
d1015 3
a1017 3
If a previous version of the application you want to install was
already installed on your system, you can use <tt>make update</tt>
instead of <tt>make install</tt>.
d1028 3
a1030 3
<li>Your resource limits are too restrictive.
Adjust them with ksh's ulimit or csh's limit command.
<li>You simply don't have enough RAM in your machine.
d1053 1
a1053 1
would use
d1114 1
a1114 1
manual page, which gives a good overview of this topic.
d1132 2
a1133 2
You will most likely use flavors when a package has not been made
available for the flavor you are looking for.
a1176 1
<p>
a1183 1
<p>
d1197 1
a1197 1
$ <b>env SUBPACKAGE="-server" make install</b>
a1199 1
<p>
d1201 2
a1202 2
The subpackages mechanism only handles packages. It does not modify any
configuration options before building the port.
d1210 6
a1215 6
<a href="http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/dpb.1">
dpb(1)</a> takes a list of ports to build and automatically builds
them all in an optimal order, making use of as much parallelism
as possible. It can also use multiple machines to perform the
building, and produces detailed logs of the build process for
troubleshooting, placed in <tt>/usr/ports/log</tt> by default.
d1239 1
a1239 1
via -P or -I,
d1243 2
a1244 2
for fetching distfiles and building ports. This is the recommended way
to use it, but it can also be run as a regular user.
d1248 2
a1249 2
When serious bugs or security flaws are discovered in third party
software, they are fixed in the <i>-stable</i> branch of the ports tree.
d1257 1
a1257 1
You can keep your tree up to date with <a href="../anoncvs.html">CVS</a> 
d1268 2
a1269 1
corrupted. OpenBSD offers official signed packages using 
d1272 1
a1272 1
been tampered with; pkg_add does this silently and automatically.
a1293 1
<p>
a1300 1
<p>
a1313 1
<p>
a1316 3
<p>
<i>Sorry?</i>

d1318 9
a1326 11
<li>Read EVERYTHING about
<a href="faq5.html#Flavors">OpenBSD's flavors</a>:
-release, -stable, and -current.
The short summary is as follows, but please do read the document
mentioned above to get an idea about which one it is you want to use.
<ul>
<li><a href="../orders.html">Release</a>: What is on the CD
<li><a href="../stable.html">Stable</a>: Release, plus security fixes and
  reliability enhancements
<li><a href="current.html">Current</a>: The development version
  of OpenBSD
d1331 1
a1331 1
This is one of the most common errors and you will irritate people when
d1335 2
a1336 3
Yes, this really does mean a wonderful new port will typically not
work on your "older" system, even if that system was -current just a
few weeks ago.
a1365 2

<p>
d1370 1
a1370 1
<i>But hey, I am all -current here!</i>
d1374 19
a1392 24
Sometimes the project simply doesn't have the developer resources to
keep everything up-to-date. 
Developers pretty much pick up what they consider interesting and can
test in their environment.
Some individual ports may lag behind the mainstream versions because
of this.
Importantly, not updating to the latest version is often a conscious
decision.
The newer version may have problems
that the maintainer is trying to solve, or that have
simply made the application worse than the old version.
Also, OpenBSD may have different <a href="../goals.html">goals</a>
than the developers in other projects,
which sometimes results in features and
design or implementation choices that are undesirable from OpenBSD
developers' point of view.
The update may also be postponed because the new version is not
considered a crucial update.

<p>
If you really need a newer version of a port, you should ask the
maintainer to update it
See <a href="#Problems">below</a> on how to find out who 
the port maintainer is.
d1395 2
a1396 2
<h3 id="NoPkg">15.4.3 - Why is there no package for my Top-Favorite-Software?
</h3>
d1401 11
a1411 11
<li>Some software must simply not be redistributed in binary package
form at all, according to its license.
Other software is encumbered by patents and therefore cannot be
redistributed.
If your Top-Favorite-Software falls into this category, you will need
to use the port and compile from source.
<li>Obvious, but sometimes forgotten: there is
<a href="#NoPort">no port of your Top-Favorite-Software</a>.
You can verify this by <a href="#PortsSearch">searching the ports tree</a>.
If there is indeed no port of your Top-Favorite-Software, then you
are welcome to <a href="#Helping">help</a>.
d1425 2
a1426 2
There is some documentation available on this:
the <a href="ports/index.html">OpenBSD Porter's Handbook</a>.
d1432 3
a1434 4
Chances are good you will get some feedback and testing from other
people.
If the testing is successful, your port will be considered to be taken
up in the ports tree.
d1436 2
a1437 1
<h3 id="NotInBase">15.4.5 - Why is my Top-Favorite-Software not part of the base system?</h3>
d1439 2
a1440 2
Because OpenBSD is supposed to be a small stand-alone UNIX-like
operating system, we need to draw a line as to what to include.
d1444 6
a1449 6
<li>It must meet the high quality standards, laid out in the
<a href="../goals.html">goals</a> of the OpenBSD project.
<li>Its license must not be too restrictive and must be compatible
with the BSD license.
<li>It must not be too large, in order to keep the size of the base
system acceptable.
d1453 2
a1454 2
Further answers to this question are also found in
<a href="faq1.html#HowAbout">FAQ 1</a>.
d1458 4
a1461 4
In general, you are <b>highly advised</b> to use packages
over building an application from ports.
The OpenBSD ports team considers packages to be the goal of their
porting work, not the ports themselves.
d1465 2
a1466 2
Not only must the application be compiled, but the tools used to
build it must be built as well.
d1468 3
a1470 3
and often, getting all the pieces working together is a challenge.
Once everything works, a revision in any of the pieces the next day
could render it broken.
d1474 1
a1474 1
During the development cycle, it is likely that some ports will break.
d1477 2
a1478 3
In addition to having all the pieces work together, there is just the 
matter of time and resources required to compile some applications from
source.
d1491 5
a1495 6
<li>Distribution rules prohibit OpenBSD from distributing a package
<li>You wish to modify or debug the application or study its source code
<li>You need a flavor of a port that is not built by the OpenBSD ports
team
<li>You wish to alter the directory layout (i.e. modifying <tt>PREFIX</tt>
or <tt>SYSCONFDIR</tt>)
d1502 2
a1503 2
<h3 id="Knobs">15.4.7 - How do I tweak these ports to have maximum performance?
</h3>
d1520 7
a1526 6
to look at your port/update in time. As frustrating as it may be, just
ignore this fact. Take care of your port, send updates and eventually
someone might take care of it. It has happened before that people
suddenly have some free time to spend on committing ports, or their
interests shift to new areas and suddenly your old submission becomes
interesting, if it is remembered.
d1539 2
a1540 4
<p>
Alternatively, if there is no maintainer, or you can't reach
them, send an email to the 
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>
d1549 10
a1558 10
<li>Your OpenBSD version, including any patches you may have applied.
The kernel version is given by: <tt>sysctl -n kern.version</tt>
<li>The version of your ports tree: if the file <tt>/usr/ports/CVS/Tag</tt>
exists, provide its contents.
If this file is absent, you are using the -current ports tree.
<li>A complete description of the problem.
Don't be afraid to provide details.
Mention all the steps you followed before the problem occurred.
Is the problem reproducible?
The more information you provide, the more likely you will get help.
d1582 12
a1593 11
<li>Use
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=script">script(1)</a>
to create a complete build transcript. Do not remove the configure information.
<li>Attach the output of
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info">pkg_info(1)</a>
if it seems even remotely relevant.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gcc">gcc(1)</a>
internal compiler errors ask you to report the bug to the gcc
mailing list.
It does save time if you follow their direction, and provide at least
the various files produced by <tt>gcc -save-temps</tt>.
d1602 13
a1614 13
<li><a href="#Problems">Report problems</a> as you experience them.
<li>You can systematically test ports and report breakages, or suggest
improvements.
Just have a look at the <a href="ports/testing.html">Port Testing Guide</a>.
<li>Test the updates to ports which are posted to the ports mailing list.
<li>Send updates or patches to a port's maintainer, or to the ports
mailing list if the port has no maintainer.
Generally this is highly appreciated, unless your patches will cause
developers to waste time rather than save time.
<li>Create new ports.
If you are really eager and want to know everything about porting
applications to OpenBSD, a good starting point is the
<a href="ports/index.html">OpenBSD Porter's Handbook</a>.
d1623 6
a1628 5
<b>Note:</b> For all creation of new ports and subsequent testing, or
for testing port updates, you <b>must run a -current system!</b>
In general, this is not a desirable environment because of its
continuously evolving nature, so proceed only if you are sure about
committing yourself to following -current.
@


1.118
log
@expand on the -stable ports/packages and wsrc sections, remove a bit of old
cruft and clean up some odd formatting.

ok tb
@
text
@d538 4
a541 2
The <tt>-u</tt> switch relies on the <tt>PKG_PATH</tt> environment variable.
If it is not set, pkg_add(1) will not be able to find updates.
d933 1
a933 1
The sqlports package includes the script used to generate the database, which
d1268 2
@


1.117
log
@mention dpb's privsep model and clean up a few bits.
@
text
@d101 1
a101 2
comply with OpenBSD's policy and goals, the third party software is
<i>ported</i> to OpenBSD.
d146 9
a154 8
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1">pkg_add(1)</a> 
  - a utility for installing and upgrading software packages.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1">pkg_delete(1)</a>
  - a utility for deleting previously installed software packages.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1">pkg_info(1)</a>
  - a utility for displaying information about software packages.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1">pkg_create(1)</a> 
  - a utility for creating software packages.
d171 1
a171 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1">pkg_add(1)</a>
d193 3
a195 3
Just point it to your favorite location, and pkg_add(1) will
automatically look there for any package you specify, <b>and</b>
also fetch and install the necessary dependencies of this package
d249 1
a249 1
<!-- Note that OpenBSD includes a list of package mirrors in the
d254 2
a255 3
If you have the ports tree on your system, you can quickly find the
package you are looking for by
<a href="#PortsSearch">searching the ports tree</a>.
d258 3
a260 2
If you're looking for a specific filename, install the pkglocatedb package,
then use the pkg_locate command to find which package(s) contain that file.
d266 1
a266 1
They are called <b>subpackages</b>.
d270 1
a270 1
Currently, many packages have flavors, for example: database support,
d275 2
a276 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=packages-specs&amp;sektion=7">packages-specs(7)</a>.
d280 1
a280 2
Not all possible packages are necessarily available on the mirror
servers!
d294 3
a296 3
To install packages, the utility
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1">pkg_add(1)</a> 
is used.
d299 1
a299 1
with the package name, as in the following basic example.
d309 1
a309 2
In this example the <b>-v</b> flag was used to give a more verbose
output.
d313 2
a314 3
Notice the message mentioning <i>/etc/screenrc</i>.
Specifying multiple <b>-v</b> flags will produce even more
verbose output.
d329 1
a329 1
Your choice: <i><b>1</b></i>
a332 1

d337 1
a337 1
<b>-v</b> flag.
d386 1
a386 1
Again we added the <b>-v</b> flag to see more of what is happening.
d399 1
a399 1
If for some reason you decide not to use <tt>PKG_PATH</tt>, it is also
d401 2
a402 2
This absolute location may be a local path, or a URL referring to
HTTP, or SCP locations.
d411 4
a414 4
In this example the <b>-v</b> flag wasn't used, so only
needed messages are shown.
Notice that the complete filename was entered by adding a <b>.tgz</b> suffix.
You can also skip this suffix as in the previous examples since it is
d423 4
a426 3
For safety, if you are installing a package which you had installed
earlier (or an older version of it) and removed, pkg_add(1) will
<b>not</b> overwrite configuration files which have been modified.
d428 1
a428 1
<b>-v</b> flag, however!):
d454 1
a454 1
There is pkg_add(1) nicely installing dependencies, when all of a sudden
d459 2
a460 2
system libraries as well as third party libraries.
If one of the required libraries cannot be found, the package is not
d477 1
a477 1
file sets, which contains the required library.
d488 1
a488 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1">pkg_info(1)</a>
d520 2
a521 2
box from the previous version of OpenBSD.
Now you can easily upgrade to the newer package as follows:
d533 1
a533 1
Invoking pkg_add(1) with the <b>-u</b> flag and no package name will
d538 1
a538 1
The <b>-u</b> switch relies on the <tt>PKG_PATH</tt> environment variable.
d547 1
a547 1
If you had a configuration file belonging to the old version, which
d550 1
a550 1
the new version, by calling pkg_add(1) with the <b>-c</b> flag.
d558 2
a559 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1">pkg_delete(1)</a>
to remove the package.
d561 3
a563 3
Notice that on some occasions there are instructions of extra items
that need to be removed that pkg_delete(1) did not remove for you.
As with the pkg_add(1) utility, you can use the <b>-v</b> flag to
d584 1
a584 1
Instead it will inform you about this as follows:
d596 1
a596 31
you can do so by using the <b>-c</b> flag.


<!--
<h3 id="PkgSecurity">15.2.8 - Security updates (-stable packages)</h3>

When serious bugs or security flaws are discovered in third party
software, they are fixed in the -stable branch of the ports tree,
and a selection of updated binary packages is made available.

<p>
Please refer to the
<a href="../pkg-stable.html">stable packages page</a> to find out about
updated packages and important updates to the -stable branch.
Note that updated packages are only available for the i386 and amd64 platforms.
For other platforms, you will need to use the -stable branch of the ports
tree and compile from source.

<p>
If you want to receive security announcements related to software in
the packages and ports system, you can subscribe to the ports-security
<a href="../mail.html">mailing list</a>.

<p>
Package names are <b>always</b> changed in case of a package update,
to avoid any risk of confusion between a package from the release
and a bug-fixed package.
This name change may be a higher version number or, in case the version
number remains the same, a <b>pN</b> suffix is added, where <b>N+1</b>
represents the number of times this package has been patched.
-->
d601 1
a601 1
completely, because of conflicts with other files.
d623 3
a625 4
As mentioned in the introduction, packages are compiled from the ports
tree.
In this section we will explain how the ports tree works, when you should
use it and how you can use it.
d655 1
a655 1
creation once the application has been built
d664 1
d666 7
a672 6
<li><tt>distfiles/</tt> - where the ports system stores
software distribution sets after downloading
<li><tt>infrastructure/</tt> - the main directory of the ports
infrastructure, containing all necessary scripts and makefiles
<li><tt>packages/</tt> - contains all binary packages built by the ports
system
d674 1
d687 1
a687 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=make&amp;sektion=1">make(1)</a>
d693 1
a693 1
the port creates. Normally it is under <tt>${WRKOBJDIR}</tt>, defaulting
d701 1
a701 1
<b>Note:</b> Ports are never directly installed on your system!
d704 4
a707 4
package (which is stored in the <tt>packages/</tt> subdirectory of the
ports tree as mentioned earlier).
Installing a port really means creating a package and then
installing that package.
d710 1
a710 1
<b>More information</b> about the ports system may be found in these
d714 6
a719 6
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ports&amp;sektion=7">ports(7)</a>
- describes the different stages (make targets) of port installation,
the use of flavors and subpackages and some other options.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bsd.port.mk&amp;sektion=5">bsd.port.mk(5)</a>
- in-depth information about all the make targets, variables, the fake
(installation directory) framework, etc.
d727 1
a727 1
get the ports tree from different sources.
a774 3
You want to untar this file in the <tt>/usr</tt> directory, which will
create <tt>/usr/ports</tt> and all the directories under it.
For example:
d781 6
d791 3
d804 2
a805 2
For more information about obtaining the ports tree via AnonCVS,
please read the <a href="../anoncvs.html">AnonCVS page</a> which
d815 1
a815 1
of the make(1) statements in the examples as root.
d831 1
a831 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas&amp;sektion=1">doas(1)</a>
d843 2
a844 1
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas.conf&amp;sektion=5">doas.conf(5)</a>.
a845 4
<!-- XXX The doas section needs to be updated with more fine-grained
         permissions. Some kind of doas.conf is needed, but we should
         NOT recommend users allow the "env" command without some very
         precise restrictions on what flags it can be run with. -->
d848 6
a853 4
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bsd.port.mk&amp;sektion=5">bsd.port.mk(5)</a>
  in the environment, which can be made permanent
  by adding the following line to to
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mk.conf&amp;sektion=5">mk.conf(5)</a>:
d855 3
a857 2
  SUDO=/usr/bin/doas</pre>
  </blockquote></ul>
d861 2
a862 2
In this case, the regular user has been added to the wsrc group, and the
underlying directories are made group-writable.
d865 1
d885 1
a885 1
For example, you could add the following lines to <tt>/etc/mk.conf</tt>
d896 2
d903 1
a903 1
Just use <tt>make search key="searchkey"</tt>, as shown in the
d928 1
a928 2
Since OpenBSD 4.0, a new port called "sqlports" has been created,
allowing very fine-grained searching using SQL.
d931 1
a931 1
The sqlports port includes the script used to generate the database, which
d936 1
a936 1
A sample session could look like:
d986 1
a986 1
  [...snip...]
d988 1
a988 1
  [...snip...]
d990 1
a990 1
  [...snip...]
d1001 1
a1001 1
  [...snip...]
d1003 1
a1003 1
  [...snip...]
d1005 1
a1005 1
  [...snip...]
d1021 1
a1021 1
Just notice the
d1028 3
a1030 3
already installed on your system, you can use <tt><b>make
update</b></tt> instead of <tt><b>make install</b></tt>.
This will call pkg_add(1) with the <b>-r</b> flag.
d1074 1
a1074 1
you can clear the working directories of all these flavors at once using
d1080 1
a1080 1
You can also clean things up as they get built, by setting a special variable.
d1082 2
a1083 1
created:
d1101 1
a1101 2
If desired, you can also uninstall and reinstall a port's package by
using
d1124 2
a1125 2
Please do read the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ports&amp;sektion=7">ports(7)</a>
d1135 1
a1135 1
Some shells have a "static" flavor, which will build a statically linked
d1139 1
a1139 1
Other examples include: support for different database formats,
d1144 1
a1144 1
Most likely you will use flavors when a package has not been made
d1146 1
a1146 2
In this case you will specify the desired flavor and build the port
yourself.
d1149 2
a1150 2
Most port flavors have their own working directory during building
and every flavor will be packaged into a correspondingly named package to
d1153 1
a1153 1
subdirectory and issue
d1159 2
a1160 2
You should also look at the port's DESCR files, as they're supposed to
explain the available flavors.
d1165 1
a1165 1
same application, if they can be logically separated.
d1169 1
a1169 1
because it takes up quite some disk space.
d1174 1
a1174 1
Other examples are: extensive test suites which come with the software,
d1183 2
a1184 1
To list the different packages built by a port, use
d1188 1
a1189 1

d1191 1
a1191 1
To install them all, use
d1196 1
d1198 1
a1198 2

To list the different subpackages available for a port, use
d1207 1
a1207 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1">pkg_add(1)</a>
d1216 1
a1216 1
The subpackages mechanism only handles packages, it does not modify any
d1218 1
a1218 1
For that purpose you must use flavors.
d1229 1
a1229 1
building. It produces detailed logs of the build process for
d1237 2
a1238 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7">
pkgpaths</a> in <tt>~/localports</tt> and build all the packages.
d1255 2
a1256 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/dpb.1">
dpb(1)</a> will build all the ports in the ports tree.
d1265 1
a1265 3
Unlike the base OS, the lifecycle is 1 release: only -current and the last
release are updated, as explained in
<a href="faq5.html#Flavors">FAQ 5 - OpenBSD's Flavors</a>.
d1268 1
a1268 1
This means all you need to do is make sure you check out the correct
d1270 3
a1272 4
You can <a href="../anoncvs.html">keep your tree up-to-date with CVS</a>, 
and in addition subscribe to the ports-changes <a href="../mail.html">mailing 
list</a> to receive security announcements related to software in the ports 
tree.
d1275 2
a1276 2
Of course, security updates reach the -current ports tree before being
taken up in the <i>-stable</i> branch.
d1282 3
a1284 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=signify&amp;sektion=1">signify(1)</a>.
d1287 2
a1288 1
To start building your own signed packages, we need to create keys for signing.
d1291 1
a1291 1
# <b>signify -G -n -s /etc/signify/toto-pkg.sec -p /etc/signify/toto-pkg.pub</b>
d1294 1
a1294 1
Note the names: keys for signing packages should end in <b>pkg</b>.
d1297 3
a1299 2
Then we may sign existing packages after building using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_sign&amp;sektion=1">pkg_sign(1)</a> .
d1302 1
a1302 1
# <b>cd /usr/ports/packages/$(uname -p)</b>
d1307 2
a1308 2
Alternately, we may add the following line to <tt>/etc/mk.conf</tt> to directly
build signed packages by default. 
d1311 1
a1311 1
<b>SIGNING_PARAMETERS=-s signify -s /etc/signify/toto-pkg.sec</b>
d1316 1
a1316 1
<b>toto-pkg.pub</b> should be put into the <tt>/etc/signify</tt> directory
d1334 1
d1337 1
a1337 1
<a href="faq5.html#Flavors">OpenBSD's Flavors</a>:
d1342 3
a1344 3
<li><a href="../orders.html">Release</a>: What is on the CD.
<li><a href="../stable.html">Stable</a>: Release, plus security and
  reliability enhancements.
d1346 1
a1346 1
  of OpenBSD.
d1348 1
d1352 2
a1353 2
you ask for help about why "nothing seems to work!"
<b>If you follow -current, you need both a -current system
d1356 1
a1356 1
work on your "older" system -- even if that system was -current just a
d1361 1
a1361 1
use a -stable ports tree on a -release system, and vice versa.
d1370 3
a1372 3
Building ports on systems without X11 is not supported, so if you insist
on doing so, you are on your own to figure it out.
For many ports, there are, however, "no_x11" flavored packages available,
d1375 2
a1376 1
<h3 id="Latest">15.4.2 - The latest version of my Top-Favorite-Software is not available!</h3>
d1382 2
a1383 2
You can build your own updates in this case, but the OpenBSD project does
not provide pre-built packages for these updates.
d1386 1
a1386 1
<b>WARNING: DO NOT mix versions of Ports and OpenBSD!</b>
d1419 2
a1420 2
(see <a href="#Problems">below</a> on how to find out who 
the port maintainer is).
d1423 2
a1424 1
<h3 id="NoPkg">15.4.3 - Why is there no package for my Top-Favorite-Software?</h3>
d1431 1
a1431 1
Other software is encumbered by patents and can therefore not be
d1455 3
a1457 3
Read it, and read it again.
Especially the part about <i>maintaining</i> your port.
Then try making a new port, and test it carefully and step by step.
d1501 2
a1502 2
an effort is made to test the building of every port on every platform,
but during the development cycle it is likely that some ports will break.
d1511 1
a1511 1
Why go through this much time and effort, when the programs are already
d1532 2
a1533 1
<h3 id="Knobs">15.4.7 - How do I tweak these ports to have maximum performance?</h3>
d1546 2
a1547 2
<h3 id="Wait">15.4.8 - I submitted a new port/an update weeks ago. Why isn't it
committed?</h3>
d1553 1
a1553 1
suddenly have some free time to spend on committing ports or their
d1570 3
a1572 2
him/her, send an email to the OpenBSD ports mailing list,
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>.
d1575 1
d1578 1
d1591 1
d1594 1
a1594 1
You can use the portslogger script, found in
d1596 1
a1596 1
A sample run of portslogger might be:
d1599 1
a1599 1
$ <b>mkdir ~/portslogs</b>
d1601 1
a1601 1
$ <b>make clean install 2&gt;&amp;1 | /usr/ports/infrastructure/bin/portslogger ~/portslogs</b>
d1604 1
a1604 1
After this, you should have a logfile of the build in your <tt>~/portslogs</tt>
d1610 2
a1611 1
Alternatively, you can
d1614 2
a1615 3
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=script&amp;sektion=1">script(1)</a>
to create a complete build transcript.
Do not remove the configure information.
d1617 1
a1617 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1">pkg_info(1)</a>
d1619 1
a1619 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gcc&amp;sektion=1">gcc(1)</a>
@


1.116
log
@get rid of some duplicate content; from TJ
@
text
@d249 2
d311 1
a311 1
This option is not needed but it is helpful for debugging and was
d325 1
a325 1
# <b>pkg_add -i screen</b>
d391 1
a391 1
they are installed first.
a453 1
If you are still running 3.6 packages, update them.
d662 2
a663 2
<b>Everyone is encouraged to use the pre-compiled binary
<a href="#PkgMgmt">packages</a></b>.
d665 1
a665 1
"How can I get the ports tree working?".
d671 2
a672 3
The ports tree, a concept originally borrowed from
<a href="http://www.freebsd.org">FreeBSD</a>, is a set of Makefiles,
one for each third party application, for controlling
d675 6
a680 6
<li>where and how to fetch the source of the software,
<li>which other software it depends upon,
<li>how to alter the sources (if necessary),
<li>how to configure and build it,
<li>how to test it (optional),
<li>how to install it.
d687 4
a690 4
<li>a PLIST, or packing list, which contains instructions for package
creation once the application has been built,
<li>a DESCR, or description of the application,
<li>a distfile, containing distribution file checksums and size.
d699 1
a699 1
software distribution sets after downloading.
d701 1
a701 1
infrastructure, containing all necessary scripts and makefiles.
d703 1
a703 1
system.
d710 1
a710 1
Every port directory must contain a <tt>pkg/</tt> subdirectory containing
d723 3
a725 4
the port creates.
Normally it is under <tt>${WRKOBJDIR}</tt>, defaulting to
/usr/ports/pobj, but you may override this (see <a href="#PortsConfig">Configuration of the
ports system</a>).
d736 2
a737 2
Installing a port really means: creating a package, and then
installing that package!
d810 4
a813 4
# <b>cd /tmp</b>
# <b>ftp http://ftp.openbsd.org/pub/OpenBSD/$(uname -r)/ports.tar.gz</b>
# <b>ftp http://ftp.openbsd.org/pub/OpenBSD/$(uname -r)/SHA256.sig</b>
# <b>signify -Cp /etc/signify/openbsd-$(uname -r | cut -c 1,3)-base.pub -x SHA256.sig ports.tar.gz</b>
d1245 1
a1245 1
use a tool provided in /usr/ports/infrastructure/bin - dpb(1).
d1247 2
a1248 1
dpb(1) takes a list of ports to build and automatically builds
d1252 1
a1252 1
troubleshooting, placed in /usr/ports/log by default.
d1255 1
a1255 1
/usr/ports/infrastructure/bin/dpb -P ~/localports
d1258 3
a1260 3
will read the list of pkgpaths
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7"
 >pkgpath(7)</a>) in ~/localports and build all the packages.
d1262 1
a1262 1
~/localports would look something like:
d1276 6
a1281 1
via -P or -I, dpb(1) will build all the ports in the ports tree.
d1306 1
a1306 3
corrupted.
<p>
OpenBSD 5.5 and newer feature official signed packages, using 
d1310 1
a1310 1
To start building signed packages, we need to create keys for signing.
d1337 1
a1337 1
<b>toto-pkg.pub</b> should be put into the <b>/etc/signify</b> directory
d1342 1
a1342 1
look for keys matching <b>/etc/signify/*pkg.pub</b>.
d1537 2
a1538 2
<li>Distribution rules prohibit OpenBSD from distributing a package.
<li>You wish to modify or debug the application or study its source code.
d1540 1
a1540 1
team.
d1542 1
a1542 1
or <tt>SYSCONFDIR</tt>).
d1557 1
a1557 1
In general, all this tweaking is not necessary for more than 99% of users,
d1580 2
a1581 2
$ cd /usr/ports/archivers/unzip
$ make show=MAINTAINER
d1611 3
a1613 3
$ mkdir ~/portslogs
$ cd /usr/ports/archivers/unzip
$ make clean install 2&gt;&amp;1 | /usr/ports/infrastructure/bin/portslogger ~/portslogs
d1616 1
a1616 1
After this, you should have a logfile of the build in your ~/portslogs
@


1.115
log
@don't talk about systrace in ports faq, it's still present for now but
not very actively maintained (read: cp was broken for 6 months and
only 2 people noticed). tweak/ok bentley@@ a few days ago
@
text
@a1 3
<!--
	XXX  Content duplication with faq/ports/ports.html
-->
d66 1
a66 1
  <li><a href="#dpb">          15.3.9 - Using dpb to build multiple ports</a>
d68 1
a68 1
  <li><a href="#PkgSig" >15.3.11 - Package signatures</a>
d82 1
a82 1
  <li><a href="#PkgVsPorts"   >15.4.6 - What should I use: packages or
d89 2
a90 2
<li><a href="#Problems"       >15.5 - Reporting problems</a>
<li><a href="#Helping"        >15.6 - Helping us</a>
d125 1
a125 2
<b><font color="#e00000">
The packages and ports collection does NOT go through the same thorough
a129 1
</font></b>
d206 1
a206 1
$ <b>export PKG_PATH=/mnt/cdrom/5.8/packages/`machine -a`/</b>
d212 1
a212 1
$ <b>export PKG_PATH=http://your.local.mirror/pub/OpenBSD/5.8/packages/`machine -a`/</b>
d232 1
a232 1
Of course, if you are using snapshots, you will replace "5.8" with
d247 1
a247 1
Packages are located in the <tt>/pub/OpenBSD/5.8/packages</tt> directory.
d253 2
a254 2
package you are looking for as explained in
<a href="#PortsSearch">Searching the ports tree</a>.
d265 1
a265 1
This will be detailed further in <a href="#PortsFlavors">Using flavors and
d287 1
a287 1
<a href="#PortsFlavors">Using flavors and subpackages</a> in the Ports
d407 1
a407 1
# <b>pkg_add http://your.favorite.mirror/pub/OpenBSD/5.8/packages/`machine -a`/screen-4.0.3p3.tgz</b>
d521 2
a522 2
box from OpenBSD 5.7 to 5.8.
Now you can easily upgrade to the newer 5.8 package as follows:
d557 1
a557 1
by pkg_info(1) (see <a href="#PkgList">Listing installed packages</a>
d579 1
a579 1
packages with the specified name. In that case pkg_delete(1) cannot
d734 1
a734 1
Everything that gets installed there, is bundled together into a
d749 1
a749 1
- in depth information about all the make targets, variables, the fake
d807 1
a807 1
create <tt>/usr/ports</tt>, and all the directories under it.
d812 3
a814 3
# <b>ftp http://ftp.openbsd.org/pub/OpenBSD/5.8/ports.tar.gz</b>
# <b>ftp http://ftp.openbsd.org/pub/OpenBSD/5.8/SHA256.sig</b>
# <b>signify -Cp /etc/signify/openbsd-58-base.pub -x SHA256.sig ports.tar.gz</b>
d867 1
a867 1
  see the <tt>env_keep</tt> variable in
d870 5
a874 1
  <li>The ports system needs permission to invoke doas(1) 
d884 1
a884 1
<li>You can modify the ownerships of the ports tree so that you can write
d887 1
a887 1
underlying directories are made group writable.
d918 1
a918 1
local username and group, so that the ports system can create underlying
a1064 2
If that doesn't help, just become root before starting the build.

d1123 1
a1123 1
If desired, you can also uninstall and re-install a port's package by
d1252 1
a1252 1
troubleshooting, in /usr/ports/log by default.
d1572 1
a1572 1
If you have trouble with an existing port, please send e-mail to the
d1583 1
a1583 1
him/her, send e-mail to the OpenBSD ports mailing list,
d1588 1
a1588 1
In any case please provide:
d1590 1
a1590 1
<li>Your OpenBSD version including any patches you may have applied.
d1610 1
a1610 2
$ make clean install 2&gt;&amp;1 | /usr/ports/infrastructure/bin/portslogger \
           ~/portslogs
@


1.114
log
@
fixes and improvements...notably, ftp is not used by pkg tools.  Mostly
from TJ at mrsk dot me, thanks!
@
text
@d852 2
a853 2
and perform only those steps that require superuser privileges as root.
Examples are the <tt>fake</tt> and <tt>install</tt> make targets.
d882 2
a883 3
  SUDO=/usr/bin/doas
  </pre></blockquote>
  </ul>
a893 14

<li>You can have the ports system use
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=systrace&amp;sektion=1">systrace(1)</a>
by adding the following to <tt>/etc/mk.conf</tt>

<blockquote><pre>
USE_SYSTRACE=Yes
</pre></blockquote>

This enforces the build procedure to stay inside allowed directories, and
prohibits writing in illegal places, thereby considerably reducing the risk
of a damaged system.
Note that the use of systrace(1) adds about 20% overhead in build time.

@


1.113
log
@
in comes 5.8
@
text
@a152 1
end in a slash (/).</b>
d163 1
a163 1
In order to run properly, an application X may require that
d180 1
a180 1
<li>Different checks: has the package already been installed or does it
d182 2
a183 2
<li>Dependencies which are not yet present on the system, are
automatically fetched and installed, before proceeding with the
d208 1
a208 1
Example 1: fetching from your <a href="../orders.html">CDROM</a>,
d215 1
a215 1
Example 2: fetching from a nearby <a href="../ftp.html">FTP mirror</a>
d217 1
a217 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/5.8/packages/`machine -a`/</b>
d251 1
a251 1
<li>On the <a href="../ftp.html">FTP mirror servers</a>.
d263 1
a263 1
and use the pkg_locate command to find which package(s) contain that file.
d271 1
a271 1
subpackages</a> but flavor basically means they are configured with
d282 1
a282 1
Not all possible packages are necessarily available on the FTP
d285 1
a285 1
Some applications can not be distributed via FTP (or CDROM) for licensing
d322 2
a323 5
<h4>Using pkg_add(1) in interactive mode</h4>

pkg_add(1) has an interactive mode, which is enabled
by invoking it with the <b>-i</b> flag, and which causes it to ask you
questions when it cannot make decisions by itself.
d334 1
a334 1
Your choice: 1
d375 2
a376 1
Dependencies for tin-1.6.2 resolve to: gettext-0.14.6, libutf8-0.8, pcre-6.4p1, libiconv-1.9.2p3 (todo: libiconv-1.9.2p3,gettext-0.14.6,pcre-6.4p1,libutf8-0.8)
d380 2
a381 1
Dependencies for gettext-0.14.6 resolve to: expat-2.0.0, libiconv-1.9.2p3 (todo: expat-2.0.0)
d408 2
a409 2
FTP, HTTP, or SCP locations.
Let's consider installation via FTP in the next example:
d412 1
a412 1
# <b>pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.8/packages/`machine -a`/screen-4.0.3p3.tgz</b>
d438 1
a438 1
The existing file /etc/screenrc has NOT been changed**                 | 71%
d462 1
a462 1
This is another safety precaution which is available since OpenBSD 3.7.
d484 1
a484 1
Just <a href="faq4.html#AddFileSet">add the required file set.</a>
d645 1
a645 1
screen-4.0.3p3: complete                                                      7%
d647 1
a647 1
/usr/sbin/pkg_add: Installation of screen-4.0.3p3 failed , partial installation recorded as partial-screen-4.0.3p3
d692 1
a692 1
<li>a PLIST or packing list, which contains instructions for package
d694 1
a694 1
<li>a DESCR or description of the application,
d792 1
a792 1
<td align="left"><a href="../ftp.html">FTP mirrors</a></td>
d810 1
a810 1
On the CD-ROM and FTP mirrors, look for a file named <tt>ports.tar.gz</tt>.
d817 3
a819 1
# <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.8/ports.tar.gz</b>
d825 1
a825 1
The snapshots available on the FTP mirrors are generated daily from
d1066 1
a1066 1
If a previous version of the application you want to install, was
d1267 1
a1267 1
them all in an optimal order and making use of as much parallelism
d1322 1
a1322 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=signify&amp;sektion=1">signify(1)</a> .
a1460 7
<li>On the OpenBSD <a href="../orders.html">CD-ROMs</a>, there is no space
to include every possible package for every possible platform.
Therefore only the most used packages are included on the CDs.
Additionally, some software can only be redistributed for free, this
means it cannot be included on the CDs.
If you cannot find a package on the CDs, try another source, such as
an FTP mirror.
d1545 1
a1545 1
<a href="../ftp.html">FTP mirror</a>, waiting to be used?
d1571 1
a1571 1
work, when you tried to switch on a few hidden knobs to make it work faster.
d1649 1
a1649 1
mailinglist.
@


1.112
log
@
more de-sudo-ing.
@
text
@d152 2
a153 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_add(1)</a> 
d155 1
a155 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_delete(1)</a>
d157 1
a157 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_info(1)</a>
d159 1
a159 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_create(1)</a> 
d177 1
a177 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_add(1)</a>
d212 1
a212 1
$ <b>export PKG_PATH=/mnt/cdrom/5.7/packages/`machine -a`/</b>
d218 1
a218 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/5.7/packages/`machine -a`/</b>
a225 2
<b>Prior to OpenBSD 4.4, every path in the <tt>PKG_PATH</tt> variable MUST 
end in a slash (/).</b>
d238 1
a238 1
Of course, if you are using snapshots, you will replace "5.7" with
d253 1
a253 1
Packages are located in the <tt>/pub/OpenBSD/5.7/packages</tt> directory.
d299 1
a299 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_add(1)</a> 
d414 1
a414 1
# <b>pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.7/packages/`machine -a`/screen-4.0.3p3.tgz</b>
d496 1
a496 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_info(1)</a>
d528 2
a529 2
box from OpenBSD 5.6 to 5.7.
Now you can easily upgrade to the newer 5.7 package as follows:
d566 1
a566 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_delete(1)</a>
d819 1
a819 1
# <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.7/ports.tar.gz</b>
d861 1
a861 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sudo&amp;sektion=8">sudo(8)</a>
d867 1
a867 3
  to run arbitrary commands as the superuser,
  see the "User Specification" subsection in the 
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sudoers&amp;sektion=5">sudoers(5)</a> manual.
d871 1
a871 1
  from the shell calling sudo to the privileged shell,
d873 1
a873 5
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sudoers&amp;sektion=5">sudoers(5)</a>.
  The default file <tt>/etc/sudoers</tt> already provides an appropriate
  list of variables for members of the <tt>wsrc</tt> group, so it is
  usually sufficient to add the user who is going to build ports to that
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&amp;sektion=5">group(5)</a>.
d875 1
a875 1
  <li>The ports system needs permission to invoke sudo.
d882 1
a882 1
  SUDO=/usr/bin/sudo
d1081 2
a1082 6
If that doesn't help, just become root before starting the build, or use
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sudo&amp;sektion=8">sudo(8)</a>
with the <tt>-c</tt> flag to run the build with the resources limited
by the specified login class (refer to
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=login.conf&amp;sektion=5">login.conf(5)</a>
for details about login classes).
d1248 1
a1248 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_add(1)</a>
d1277 1
a1277 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7&amp;manpath=OpenBSD+5.7"
d1322 1
a1322 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=signify&amp;sektion=1&amp;manpath=OpenBSD+5.7">signify(1)</a> .
d1335 1
a1335 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_sign&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_sign(1)</a> .
d1652 1
a1652 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.7">pkg_info(1)</a>
@


1.111
log
@Drop unnecessary version numbers.

from Michael McConville
@
text
@d307 1
a307 1
$ <b>sudo pkg_add -v screen-4.0.3p3</b>
d333 1
a333 1
$ <b>sudo pkg_add -i screen</b>
d352 1
a352 1
$ <b>sudo pkg_add ghostscript-fonts-8.11</b>
d378 1
a378 1
$ <b>sudo pkg_add -v tin-1.8.2p0</b>
d415 1
a415 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.7/packages/`machine -a`/screen-4.0.3p3.tgz</b>
d439 1
a439 1
$ <b>sudo pkg_add -v screen-4.0.3p3</b>
d451 1
a451 1
$ <b>sudo pkg_add xv-3.10ap4</b>
d533 1
a533 1
$ <b>sudo pkg_add -u unzip</b>
d576 1
a576 1
$ <b>sudo pkg_delete screen</b>
d596 1
a596 1
$ <b>sudo pkg_delete screen</b>
d647 1
a647 1
$ <b>sudo pkg_add screen-4.0.3p3</b>
d819 4
a822 4
$ <b>cd /tmp</b>
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.7/ports.tar.gz</b>
$ <b>cd /usr</b>
$ <b>sudo tar xzf /tmp/ports.tar.gz</b>
@


1.110
log
@typo, from Michael McConville
@
text
@d1081 1
a1081 2
Good examples are compilers like GCC 4.0 or the Java 2 Software
Development Kit.
@


1.109
log
@Clean up meta tags.

name=distribution, name=keywords, and name=resource-type have no effect
in modern search engines and just clutter up the page source.

From Pavel Plamenov.
@
text
@d372 1
a372 1
in a file located in <tt>/usr/local/share/docs/pkg-readmes</tt>.
@


1.108
log
@Add 'link rel="canonical"' to pages, acting as a hint to search engines
to list the copies on www.openbsd.org rather than mirrors.

From Carlin Bingham, ok millert@@ nick@@
@
text
@a7 1
<meta name= "resource-type" content= "document">
a8 2
<meta name= "keywords"      content= "openbsd,faq15">
<meta name= "distribution"  content= "global">
@


1.107
log
@
updates for 5.7
@
text
@d13 1
@


1.106
log
@
mention /usr/local/share/docs/pkg-readmes.  Suggested by trondd at
kagu-tsuchi dot com.
@
text
@d154 1
a154 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_add(1)</a> 
d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_delete(1)</a>
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_info(1)</a>
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_create(1)</a> 
d178 1
a178 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_add(1)</a>
d213 1
a213 1
$ <b>export PKG_PATH=/mnt/cdrom/5.6/packages/`machine -a`/</b>
d219 1
a219 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/5.6/packages/`machine -a`/</b>
d241 1
a241 1
Of course, if you are using snapshots, you will replace "5.6" with
d256 1
a256 1
Packages are located in the <tt>/pub/OpenBSD/5.6/packages</tt> directory.
d302 1
a302 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_add(1)</a> 
d417 1
a417 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.6/packages/`machine -a`/screen-4.0.3p3.tgz</b>
d499 1
a499 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_info(1)</a>
d531 2
a532 2
box from OpenBSD 5.5 to 5.6.
Now you can easily upgrade to the newer 5.6 package as follows:
d569 1
a569 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_delete(1)</a>
d822 1
a822 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.6/ports.tar.gz</b>
d1262 1
a1262 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_add(1)</a>
d1291 1
a1291 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7&amp;manpath=OpenBSD+5.6"
d1336 1
a1336 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=signify&amp;sektion=1&amp;manpath=OpenBSD+5.6">signify(1)</a> .
d1349 1
a1349 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_sign&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_sign(1)</a> .
d1666 1
a1666 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.6">pkg_info(1)</a>
@


1.105
log
@Adjust some text which implies we still provide packages for -stable port
updates. Earlier version ok krw@@ ajacoutot@@ nick@@, slight tweak as suggested
by zhuk@@.
@
text
@d373 4
@


1.104
log
@Convert the rest of the FAQ to id="" instead of <a name=""></a>.

prodded by nick@@
@
text
@d1422 5
a1426 3
find any package updates until the next release, or until security
issues occur which justify an update of the port in the -stable branch,
and of the corresponding package.
@


1.103
log
@
faq updates for 5.6
@
text
@d100 1
a100 2
<a name="Intro"></a>
<h2>15.1 - Introduction</h2>
d143 1
a143 3
<p>
<a name="PkgMgmt"></a>
<h2>15.2 - Package Management</h2>
d145 1
a145 2
<a name="PkgHow"></a>
<h3>15.2.1 - How does it work?</h3>
d195 1
a195 3

<a name="Easy"></a>
<h3>15.2.2 - Making things easy: PKG_PATH</h3>
d244 1
a244 3
<p>
<a name="PkgFind"></a>
<h3>15.2.3 - Finding packages</h3>
d299 1
a299 3
<p>
<a name="PkgInstall"></a>
<h3>15.2.4 - Installing new packages</h3>
d492 1
a492 2
<a name="PkgList"></a>
<h3>15.2.5 - Listing installed packages</h3>
d525 1
a525 3
<p>
<a name="PkgUpdate"></a>
<h3>15.2.6 - Updating installed packages</h3>
d559 1
a559 3
<p>
<a name="PkgRemove"></a>
<h3>15.2.7 - Removing installed packages</h3>
d607 1
a607 2
<a name="PkgSecurity"></a>
<h3>15.2.8 - Security updates (-stable packages)</h3>
d635 1
a635 3
<p>
<a name="PkgPartial"></a>
<h3>15.2.8 - Incomplete package installation or removal</h3>
d658 1
a658 3
<p>
<a name="Ports"></a>
<h2>15.3 - Working with ports</h2>
d674 1
a674 3
<p>
<a name="PortsHow"></a>
<h3>15.3.1 - How does it work?</h3>
d759 1
a759 2
<a name="PortsFetch"></a>
<h3>15.3.2 - Fetching the ports tree</h3>
d837 1
a837 3
<p>
<a name="PortsConfig"></a>
<h3>15.3.3 - Configuration of the ports system</h3>
d942 1
a942 3
<p>
<a name="PortsSearch"></a>
<h3>15.3.4 - Searching the ports tree</h3>
d1003 1
a1003 3
<p>
<a name="PortsInstall"></a>
<h3>15.3.5 - Straightforward installation: a simple example</h3>
d1096 1
a1096 3

<a name="PortsClean"></a>
<h3>15.3.6 - Cleaning up after a build</h3>
d1138 1
a1138 2
<a name="PortsDelete"></a>
<h3>15.3.7 - Uninstalling a port's package</h3>
d1173 1
a1173 2
<a name="PortsFlavors"></a>
<h3>15.3.8 - Using flavors and subpackages</h3>
d1271 1
a1271 3
<p>
<a name="dpb"></a>
<h3>15.3.9 - Using dpb to build multiple ports</h3>
d1306 1
a1306 3
<p>
<a name="PortsSecurity"></a>
<h3>15.3.10 - Security updates</h3>
d1326 1
a1326 3
<p>
<a name="PkgSig"></a>
<h3>15.3.11 - Package signatures</h3>
d1369 1
a1369 2
<a name="PkgFAQ"></a>
<h2>15.4 - FAQ</h2>
d1371 1
a1371 2
<a name="NoFun"></a>
<h3>15.4.1 - I'm getting all kinds of crazy errors.
d1419 1
a1419 3
<p>
<a name="Latest"></a>
<h3>15.4.2 - The latest version of my Top-Favorite-Software is not available!</h3>
d1464 1
a1464 3
<p>
<a name="NoPkg"></a>
<h3>15.4.3 - Why is there no package for my Top-Favorite-Software?</h3>
d1489 1
a1489 2
<a name="NoPort"></a>
<h3>15.4.4 - Why is there no port of my Top-Favorite-Software?</h3>
d1512 1
a1512 3
<p>
<a name="NotInBase"></a>
<h3>15.4.5 - Why is my Top-Favorite-Software not part of the base system?</h3>
d1531 1
a1531 3
<p>
<a name="PkgVsPorts"></a>
<h3>15.4.6 - What should I use: packages or ports?</h3>
d1579 1
a1579 3
<p>
<a name="Knobs"></a>
<h3>15.4.7 - How do I tweak these ports to have maximum performance?</h3>
d1592 1
a1592 3
<p>
<a name="Wait"></a>
<h3>15.4.8 - I submitted a new port/an update weeks ago. Why isn't it
d1603 1
a1603 3
<p>
<a name="Problems"></a>
<h2>15.5 - Reporting problems</h2>
d1669 1
a1669 3
<p>
<a name="Helping"></a>
<h2>15.6 - Helping us</h2>
@


1.102
log
@better explain sudo config for ports building;
triggered by a much smaller patch from THEvoid at openmailbox dot org;
"commit this ASAP"  Nick@@
@
text
@d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_add(1)</a> 
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_delete(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_info(1)</a>
d164 1
a164 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_create(1)</a> 
d182 1
a182 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_add(1)</a>
d219 1
a219 1
$ <b>export PKG_PATH=/mnt/cdrom/5.5/packages/`machine -a`/</b>
d225 1
a225 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/5.5/packages/`machine -a`/</b>
d247 1
a247 1
Of course, if you are using snapshots, you will replace "5.5" with
d264 1
a264 1
Packages are located in the <tt>/pub/OpenBSD/5.5/packages</tt> directory.
d312 1
a312 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_add(1)</a> 
d423 1
a423 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.5/packages/`machine -a`/screen-4.0.3p3.tgz</b>
d506 1
a506 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_info(1)</a>
d540 2
a541 2
box from OpenBSD 5.4 to 5.5.
Now you can easily upgrade to the newer 5.5 package as follows:
d580 1
a580 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_delete(1)</a>
d841 1
a841 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.5/ports.tar.gz</b>
d1291 1
a1291 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_add(1)</a>
d1322 1
a1322 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7&amp;manpath=OpenBSD+5.5"
d1371 1
a1371 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=signify&amp;sektion=1&amp;manpath=OpenBSD+5.5">signify(1)</a> .
d1384 1
a1384 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_sign&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_sign(1)</a> .
d1716 1
a1716 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.5">pkg_info(1)</a>
@


1.101
log
@
welcome 5.5!
@
text
@d887 1
a887 1
Just add a line to <tt>/etc/mk.conf</tt> containing
d889 26
a914 3
<blockquote><pre>
SUDO=/usr/bin/sudo
</pre></blockquote>
@


1.100
log
@
remove www@@ references, simplify footers on all pages.
@
text
@d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_add(1)</a> 
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_delete(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_info(1)</a>
d164 1
a164 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_create(1)</a> 
d182 1
a182 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_add(1)</a>
d219 1
a219 1
$ <b>export PKG_PATH=/mnt/cdrom/5.4/packages/`machine -a`/</b>
d225 1
a225 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/5.4/packages/`machine -a`/</b>
d247 1
a247 1
Of course, if you are using snapshots, you will replace "5.4" with
d264 1
a264 1
Packages are located in the <tt>/pub/OpenBSD/5.4/packages</tt> directory.
d312 1
a312 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_add(1)</a> 
d423 1
a423 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.4/packages/`machine -a`/screen-4.0.3p3.tgz</b>
d506 1
a506 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_info(1)</a>
d540 2
a541 2
box from OpenBSD 5.3 to 5.4.
Now you can easily upgrade to the newer 5.4 package as follows:
d580 1
a580 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_delete(1)</a>
d841 1
a841 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.4/ports.tar.gz</b>
d1268 1
a1268 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_add(1)</a>
d1299 1
a1299 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7&amp;manpath=OpenBSD+5.4"
d1693 1
a1693 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.4">pkg_info(1)</a>
@


1.99
log
@add XXX comment reminding about content duplication with faq/ports
@
text
@a7 1
<link rev= "made" href= "mailto:www@@openbsd.org">
a38 1
<font color= "#0000e0">
a40 1
</font>
d1738 2
a1739 1
<font color= "#0000e0">
a1741 9
</font>

<p>
<hr>
<a href= "index.html"><img height= "24" width= "24" src= "../images/back.gif" border= "0" alt="[back]"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>$OpenBSD: faq15.html,v 1.98 2014/03/10 10:48:29 espie Exp $</small>

@


1.98
log
@replace convoluted ssl description with signify keys handling.
to be fleshed out if necessary
@
text
@d2 3
d1751 1
a1751 1
<small>$OpenBSD: faq15.html,v 1.97 2013/11/11 16:43:33 jca Exp $</small>
@


1.97
log
@emacs23 -> emacs (the former doesn't exist anymore).  ok jturner@@
@
text
@d1346 3
d1351 1
a1351 3
To start building signed packages, first we need to create a root CA
(certificate authority) certificate and key. For the example, we'll use
a validity of 10 years.
d1354 1
a1354 1
# <b>openssl req -x509 -days 3650 -newkey rsa:2048 -keyout /etc/ssl/private/pkgca.key -out /etc/ssl/pkgca.pem</b>
d1357 1
a1357 4
Now we are going to create a <i>build</i> certificate and key which will
be used to sign our packages. For the example, we'll use a validity of
1 year. We will also create a corresponding Certificate Signing Request
which will be used by our CA to sign the certificate.
d1359 3
a1361 6
<blockquote><pre>
# <b>openssl genrsa -out /etc/ssl/private/pkg.key 2048</b>
# <b>openssl req -new -key /etc/ssl/private/pkg.key -out /etc/ssl/private/pkg.csr</b>
</pre></blockquote>

Now let's sign the certificate using the CA we created in the first step.
d1364 2
a1365 2
# <b>openssl x509 -req -days 365 -in /etc/ssl/private/pkg.csr -CA /etc/ssl/pkgca.pem -CAkey /etc/ssl/private/pkgca.key -CAcreateserial -out /etc/ssl/pkg.crt</b>
# <b>rm /etc/ssl/private/pkg.csr</b>
d1369 2
a1370 2
Finally, we add the following line to <tt>/etc/mk.conf</tt> to build
signed packages by default.
d1373 1
a1373 1
<b>PKG_CREATE=/usr/sbin/pkg_create -s x509 -s /etc/ssl/pkg.crt -s /etc/ssl/private/pkg.key</b>
d1377 3
a1379 9
When installing signed packages, you will see an added line at the end
of the output informing you of the number of signed package(s) you just
installed.

<blockquote><pre>
$ <b>sudo pkg_add vte-0.24.3.tgz</b>
vte-0.24.3: ok
Packages with signatures: 1
</pre></blockquote>
d1382 2
a1383 10
If you run into trouble dealing with signed packages (e.g. expired
certificate...), you can force the (re-)installation and/or removal
using one of the following (according to what you want to achieve):

<blockquote><pre>
$ <b>sudo pkg_add -r -D installed PKGNAME</b>
$ <b>sudo pkg_add -D nosig PKGNAME</b>
$ <b>sudo pkg_delete -q PKGNAME</b>
</pre></blockquote>

d1748 1
a1748 1
<small>$OpenBSD: faq15.html,v 1.96 2013/11/01 14:05:57 nick Exp $</small>
@


1.96
log
@
updates for 5.4
@
text
@d1312 1
a1312 1
editors/emacs23
d1767 1
a1767 1
<small>$OpenBSD: faq15.html,v 1.95 2013/09/02 19:57:59 tobias Exp $</small>
@


1.95
log
@style: capital->lower letters in html tags
@
text
@d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_add(1)</a> 
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_delete(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_info(1)</a>
d164 1
a164 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_create(1)</a> 
d182 1
a182 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_add(1)</a>
d219 1
a219 1
$ <b>export PKG_PATH=/mnt/cdrom/5.3/packages/`machine -a`/</b>
d225 1
a225 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/5.3/packages/`machine -a`/</b>
d247 1
a247 1
Of course, if you are using snapshots, you will replace "5.3" with
d264 1
a264 1
Packages are located in the <tt>/pub/OpenBSD/5.3/packages</tt> directory.
d312 1
a312 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_add(1)</a> 
d423 1
a423 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.3/packages/`machine -a`/screen-4.0.3p3.tgz</b>
d506 1
a506 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_info(1)</a>
d540 2
a541 2
box from OpenBSD 5.2 to 5.3.
Now you can easily upgrade to the newer 5.3 package as follows:
d580 1
a580 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_delete(1)</a>
d841 1
a841 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.3/ports.tar.gz</b>
d1268 1
a1268 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_add(1)</a>
d1299 1
a1299 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7&amp;manpath=OpenBSD+5.3"
d1712 1
a1712 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.3">pkg_info(1)</a>
d1767 1
a1767 1
<small>$OpenBSD: faq15.html,v 1.94 2013/08/28 11:21:41 jca Exp $</small>
@


1.94
log
@Outdated reference to screen-4.0.3p1, missed in previous.
From Maurice Janssen.
@
text
@d1 1
a1 1
<!docTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
d1767 1
a1767 1
<small>$OpenBSD: faq15.html,v 1.93 2013/08/27 15:49:44 jca Exp $</small>
@


1.93
log
@Update all screen packages occurrences to the latest revision.
Gently prodded by Maxime Villard.

A better fix would probably involve a package more relevant than
screen, such as rsync, kobodeluxe or emacs. ;)
@
text
@d664 1
a664 1
screen-4.0.3p1: complete                                                      7%
d1767 1
a1767 1
<small>$OpenBSD: faq15.html,v 1.92 2013/08/27 11:21:12 nick Exp $</small>
@


1.92
log
@
sync version numbers.  From max at m00nbsd dot net, thanks
@
text
@d319 2
a320 2
$ <b>sudo pkg_add -v screen-4.0.3p1</b>
parsing screen-4.0.3p1
d322 1
a322 1
screen-4.0.3p1: complete
d447 2
a448 2
$ <b>sudo pkg_add -v screen-4.0.3p1</b>
parsing screen-4.0.3p1
d452 1
a452 1
screen-4.0.3p1: complete
d525 1
a525 1
screen-4.0.3p1      multi-screen window manager
d590 1
a590 1
screen-4.0.3p1: complete
d599 1
a599 1
screen-4.0.3p1) only if ambiguity is possible due to multiple installed
d610 1
a610 1
screen-4.0.3p1: complete
d612 1
a612 1
--- screen-4.0.3p1 -------------------
d663 1
a663 1
$ <b>sudo pkg_add screen-4.0.3p1</b>
d666 1
a666 1
/usr/sbin/pkg_add: Installation of screen-4.0.3p1 failed , partial installation recorded as partial-screen-4.0.3p1
d1767 1
a1767 1
<small>$OpenBSD: faq15.html,v 1.91 2013/05/01 13:16:32 nick Exp $</small>
@


1.91
log
@
updates for 5.3
@
text
@d424 1
a424 1
screen-4.0.3p1: complete
d1767 1
a1767 1
<small>$OpenBSD: faq15.html,v 1.90 2013/03/02 08:29:43 espie Exp $</small>
@


1.90
log
@clearer directive for pkg_locate.
@
text
@d1 1
a1 1
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_add(1)</a> 
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_delete(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_info(1)</a>
d164 1
a164 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_create(1)</a> 
d182 1
a182 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_add(1)</a>
d219 1
a219 1
$ <b>export PKG_PATH=/mnt/cdrom/5.2/packages/`machine -a`/</b>
d225 1
a225 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/5.2/packages/`machine -a`/</b>
d247 1
a247 1
Of course, if you are using snapshots, you will replace "5.2" with
d264 1
a264 1
Packages are located in the <tt>/pub/OpenBSD/5.2/packages</tt> directory.
d312 1
a312 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_add(1)</a> 
d338 1
a338 1
Since OpenBSD 3.9, pkg_add(1) has an interactive mode, which is enabled
d346 1
a346 1
Ambiguous: screen could be screen-4.0.3p1 screen-4.0.3p1-shm screen-4.0.3p1-static
d349 2
a350 3
         1: screen-4.0.3p1
         2: screen-4.0.3p1-shm
         3: screen-4.0.3p1-static
d352 1
a352 1
screen-4.0.3p1: complete
d423 1
a423 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.2/packages/`machine -a`/screen-4.0.3p1.tgz</b>
d506 1
a506 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_info(1)</a>
d540 2
a541 2
box from OpenBSD 5.1 to 5.2.
Now you can easily upgrade to the newer 5.2 package as follows:
d580 1
a580 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_delete(1)</a>
d841 1
a841 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.2/ports.tar.gz</b>
d1268 1
a1268 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_add(1)</a>
d1299 1
a1299 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7&amp;manpath=OpenBSD+5.2"
d1712 1
a1712 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.2">pkg_info(1)</a>
d1767 1
a1767 1
<small>$OpenBSD: faq15.html,v 1.89 2013/01/13 17:52:08 rpe Exp $</small>
@


1.89
log
@- provide a hint to pkglocate to find packages
- no need to install the sqlite3 package, as we have it in base

ok nick@@ espie@@
@
text
@d272 4
a275 3
If you have the pkglocatedb package installed, you can find a package
by using the pkglocate command to search for filenames contained in that
package.
d1768 1
a1768 1
<small>$OpenBSD: faq15.html,v 1.88 2012/11/06 15:00:55 sthen Exp $</small>
@


1.88
log
@Make it clear that -stable ports is -current plus last release, ok nick@@ jasper@@
@
text
@d272 3
d983 1
a983 2
Just pkg_add(1) the sqlports package, and in this case, the sqlite3 package
to get started.
d1767 1
a1767 1
<small>$OpenBSD: faq15.html,v 1.87 2012/11/01 15:05:30 nick Exp $</small>
@


1.87
log
@
enter 5.2!
@
text
@d1322 2
a1323 2
Remember that the lifecycle is 1 release: only the current and last release
are updated, as explained in
d1765 1
a1765 1
<small>$OpenBSD: faq15.html,v 1.86 2012/05/01 14:35:15 nick Exp $</small>
@


1.86
log
@
welcome 5.1!
@
text
@d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_add(1)</a> 
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_delete(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_info(1)</a>
d164 1
a164 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_create(1)</a> 
d182 1
a182 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_add(1)</a>
d219 1
a219 1
$ <b>export PKG_PATH=/mnt/cdrom/5.1/packages/`machine -a`/</b>
d225 1
a225 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/5.1/packages/`machine -a`/</b>
d247 1
a247 1
Of course, if you are using snapshots, you will replace "5.1" with
d264 1
a264 1
Packages are located in the <tt>/pub/OpenBSD/5.1/packages</tt> directory.
d308 1
a308 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_add(1)</a> 
d420 1
a420 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.1/packages/`machine -a`/screen-4.0.3p1.tgz</b>
d503 1
a503 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_info(1)</a>
d537 2
a538 2
box from OpenBSD 5.0 to 5.1.
Now you can easily upgrade to the newer 5.1 package as follows:
d577 1
a577 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_delete(1)</a>
d838 1
a838 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.1/ports.tar.gz</b>
d1266 1
a1266 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_add(1)</a>
d1297 1
a1297 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7&amp;manpath=OpenBSD+5.1"
d1710 1
a1710 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.1">pkg_info(1)</a>
d1765 1
a1765 1
<small>$OpenBSD: faq15.html,v 1.85 2012/03/27 00:22:22 nick Exp $</small>
@


1.85
log
@
remove references to cvsup.
@
text
@d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_add(1)</a> 
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_delete(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_info(1)</a>
d164 1
a164 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_create(1)</a> 
d182 1
a182 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_add(1)</a>
d219 1
a219 1
$ <b>export PKG_PATH=/mnt/cdrom/5.0/packages/`machine -a`/</b>
d225 1
a225 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/5.0/packages/`machine -a`/</b>
d247 1
a247 1
Of course, if you are using snapshots, you will replace "5.0" with
d264 1
a264 1
Packages are located in the <tt>/pub/OpenBSD/5.0/packages</tt> directory.
d308 1
a308 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_add(1)</a> 
d420 1
a420 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/5.0/packages/`machine -a`/screen-4.0.3p1.tgz</b>
d503 1
a503 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_info(1)</a>
d537 2
a538 2
box from OpenBSD 4.9 to 5.0.
Now you can easily upgrade to the newer 5.0 package as follows:
d577 1
a577 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_delete(1)</a>
d838 1
a838 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/5.0/ports.tar.gz</b>
d1266 1
a1266 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_add(1)</a>
d1297 1
a1297 1
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7&amp;manpath=OpenBSD+5.0"
d1710 1
a1710 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+5.0">pkg_info(1)</a>
d1765 1
a1765 1
<small>$OpenBSD: faq15.html,v 1.84 2012/01/05 10:48:51 sthen Exp $</small>
@


1.84
log
@Fix typo, from Brian Callahan on www@@
@
text
@d1599 1
a1599 9
A common example is <a href="http://www.cvsup.org/">CVSup</a>, a tool
commonly used to <a href="../cvsup.html">track the OpenBSD source tree</a>.
To install CVSup on a moderately fast system with a good Internet
connection may take only about ten seconds -- the time required
to download and unpack a single 779kB package file.
In contrast, building CVSup on the same machine from source is a huge
task, requiring many tools and bootstrapping a compiler, taking almost
half an hour on the same machine.
Other applications, such as <a href="http://www.mozilla.org">Mozilla</a>
d1765 1
a1765 1
<small>$OpenBSD: faq15.html,v 1.83 2011/12/21 19:47:53 ajacoutot Exp $</small>
@


1.83
log
@dpb(1) isn't available in man.cgi.
Fix some typos.

from Steffen Daode Nurpmeso
ok nick@@
@
text
@d1299 1
a1299 1
It can also install the packages after they have been build.
d1773 1
a1773 1
<small>$OpenBSD: faq15.html,v 1.82 2011/11/22 03:39:26 krw Exp $</small>
@


1.82
log
@"mulitple" -> "multiple". Pointed out by espie@@ but I forgot about
it. Then spotted by Amit Kulkani.
@
text
@d1284 1
a1284 2
use a tool provided in /usr/ports/infrastructure/bin -
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dpb&amp;sektion=1&amp;manpath=OpenBSD+5.0">dpb(1)</a>.
d1286 1
a1286 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dpb&amp;sektion=1&amp;manpath=OpenBSD+5.0">dpb(1)</a>
takes a list of ports to build and automatically builds
d1290 1
a1290 1
trouble shooting, in /usr/ports/log by default.
d1296 5
a1300 5
will read the list of pkgpaths (
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkgpath&amp;sektion=7&amp;manpath=OpenBSD+5.0">pkgpath(7)</a>
) in ~/localports
and build all the packages. -I would install all the packages, rather
than just building them.  ~/localports would look something like
d1314 1
a1314 3
via -P or -I,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dpb&amp;sektion=1&amp;manpath=OpenBSD+5.0">dpb(1)</a>
will build all the ports in the ports tree.
d1773 1
a1773 1
<small>$OpenBSD: faq15.html,v 1.81 2011/11/22 01:53:22 krw Exp $</small>
@


1.81
log
@Slip in a small section on dpb(1). Suggested by espie@@.

ok nick@@
@
text
@d1290 1
a1290 1
as possible. It can also use mulitple machines to perform the
d1777 1
a1777 1
<small>$OpenBSD: faq15.html,v 1.80 2011/11/01 10:52:28 nick Exp $</small>
@


1.80
log
@
updates for 5.0 (and some non-version-related improvements).
@
text
@d71 3
a73 2
  <li><a href="#PortsSecurity">15.3.9 - Security updates (<i>-stable</i>)</a>
  <li><a href="#PkgSig" >15.3.10 - Package signatures</a>
d1280 41
d1322 1
a1322 1
<h3>15.3.9 - Security updates</h3>
d1344 1
a1344 1
<h3>15.3.10 - Package signatures</h3>
d1777 1
a1777 1
<small>$OpenBSD: faq15.html,v 1.79 2011/06/16 12:45:58 lum Exp $</small>
@


1.79
log
@Move link for donations to the "help" section. Plus
tidy up a paragraph.
ok nick@@
Also align "a name" to top of browser window and
make some meta tags more pertinent.
@
text
@d157 1
a157 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_add(1)</a> 
d159 1
a159 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_delete(1)</a>
d161 1
a161 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_info(1)</a>
d163 1
a163 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_create(1)</a> 
d181 1
a181 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_add(1)</a>
d218 1
a218 1
$ <b>export PKG_PATH=/mnt/cdrom/4.9/packages/`machine -a`/</b>
d224 1
a224 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.9/packages/`machine -a`/</b>
d246 1
a246 1
Of course, if you are using snapshots, you will replace "4.9" with
d263 1
a263 1
Packages are located in the <tt>/pub/OpenBSD/4.9/packages</tt> directory.
d307 1
a307 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_add(1)</a> 
d419 1
a419 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.9/packages/`machine -a`/screen-4.0.3p1.tgz</b>
d502 1
a502 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_info(1)</a>
d536 2
a537 2
box from OpenBSD 4.8 to 4.9.
Now you can easily upgrade to the newer 4.9 package as follows:
d558 2
a559 2
Starting with OpenBSD 4.2, having several entries in <tt>PKG_PATH</tt> does
no longer mean all entries will be tried for update operations.
d576 1
a576 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_delete(1)</a>
d837 1
a837 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.9/ports.tar.gz</b>
d1265 1
a1265 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_add(1)</a>
d1680 1
a1680 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.9">pkg_info(1)</a>
d1735 1
a1735 1
<small>$OpenBSD: faq15.html,v 1.78 2011/05/05 12:26:50 sthen Exp $</small>
@


1.78
log
@portslogger moved to ports/infrastructure/bin in 4.9.
@
text
@d7 2
a8 2
<meta name= "description"   content= "the OpenBSD FAQ page">
<meta name= "keywords"      content= "openbsd,faq">
d143 1
d249 1
a249 1

d302 1
a302 1

d532 1
d568 1
d647 1
d672 1
a672 1

d690 1
a690 1

d856 1
a856 1

d940 1
a940 1

d1004 1
d1278 1
d1300 1
d1416 1
a1440 4
Your <a href="../donations.html">donations</a> can make a difference
for testing ports on more platforms.

<p>
d1443 8
a1450 8
The ports collection may have a version back of a program from January
while a new version of the program has been released by its developers
in May three months ago.
Often this is a conscious decision; the new version may have problems
in it on OpenBSD that the maintainer is trying to solve, or that have
simply made the application worse than the old version: OpenBSD may
have different <a href="../goals.html">goals</a> than the mainstream
developers in other projects, which sometimes results in features and
d1457 2
a1458 2
If you really need a new version of a port, you should ask the
maintainer of the port to update the port
d1460 2
a1461 3
the maintainer is).
If you can <a href="#Helping">help</a> with this, all the better.

d1463 1
d1514 1
a1514 1

d1535 1
d1593 1
a1593 1

d1608 1
a1608 1

d1621 1
a1621 1

d1689 1
a1689 1

d1712 6
d1735 1
a1735 1
<small>$OpenBSD: faq15.html,v 1.77 2011/05/01 13:08:58 nick Exp $</small>
@


1.77
log
@
updates for 4.9
@
text
@d1652 1
a1652 1
<tt>/usr/ports/infrastructure/build</tt>, for this.
d1658 1
a1658 1
$ make clean install 2&gt;&amp;1 | /usr/ports/infrastructure/build/portslogger \
d1724 1
a1724 1
<small>$OpenBSD: faq15.html,v 1.76 2010/11/01 09:48:45 nick Exp $</small>
@


1.76
log
@
update to 4.8
@
text
@d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_add(1)</a> 
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_delete(1)</a>
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_info(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_create(1)</a> 
d180 1
a180 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_add(1)</a>
d217 1
a217 1
$ <b>export PKG_PATH=/mnt/cdrom/4.8/packages/`machine -a`/</b>
d223 1
a223 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.8/packages/`machine -a`/</b>
d245 1
a245 1
Of course, if you are using snapshots, you will replace "4.8" with
d262 1
a262 1
Packages are located in the <tt>/pub/OpenBSD/4.8/packages</tt> directory.
d306 1
a306 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_add(1)</a> 
d418 1
a418 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.8/packages/`machine -a`/screen-4.0.3p1.tgz</b>
d501 1
a501 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_info(1)</a>
d534 2
a535 2
box from OpenBSD 4.7 to 4.8.
Now you can easily upgrade to the newer 4.8 package as follows:
d573 1
a573 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_delete(1)</a>
d833 1
a833 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.8/ports.tar.gz</b>
d1260 1
a1260 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_add(1)</a>
d1675 1
a1675 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.8">pkg_info(1)</a>
d1724 1
a1724 1
<small>$OpenBSD: faq15.html,v 1.75 2010/07/28 07:11:26 ajacoutot Exp $</small>
@


1.75
log
@Enable packages signature faq.

ok nick@@ espie@@
@
text
@d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_add(1)</a> 
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_delete(1)</a>
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_info(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_create(1)</a> 
d180 1
a180 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_add(1)</a>
d217 1
a217 1
$ <b>export PKG_PATH=/mnt/cdrom/4.7/packages/`machine -a`/</b>
d223 1
a223 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.7/packages/`machine -a`/</b>
d245 1
a245 1
Of course, if you are using snapshots, you will replace "4.7" with
d262 1
a262 1
Packages are located in the <tt>/pub/OpenBSD/4.7/packages</tt> directory.
d306 1
a306 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_add(1)</a> 
d418 1
a418 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.7/packages/`machine -a`/screen-4.0.3p1.tgz</b>
d501 1
a501 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_info(1)</a>
d534 2
a535 2
box from OpenBSD 4.6 to 4.7.
Now you can easily upgrade to the newer 4.7 package as follows:
d573 1
a573 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_delete(1)</a>
d833 1
a833 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.7/ports.tar.gz</b>
d1260 1
a1260 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_add(1)</a>
d1331 1
a1331 1
PKG_CREATE=/usr/sbin/pkg_create -s x509 -s /etc/ssl/pkg.crt -s /etc/ssl/private/pkg.key</b>
d1675 1
a1675 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.7">pkg_info(1)</a>
d1724 1
a1724 1
<small>$OpenBSD: faq15.html,v 1.74 2010/07/28 05:33:43 steven Exp $</small>
@


1.74
log
@update href to port testing guide within porter's handbook
from Daniel Dickman
@
text
@d72 1
a72 1
<!--  <li><a href="#PkgSig" >15.3.10 - Package signatures</a> -->
a1293 1
<!--
a1354 1
-->
d1724 1
a1724 1
<small>$OpenBSD: faq15.html,v 1.72 2010/07/17 17:26:06 ajacoutot Exp $</small>
@


1.73
log
@Bring back mention of -stable ports updates.

Includes tweaks suggested by nick@@ and sthen@@

ok nick@@ ajacoutot@@
@
text
@d1697 1
a1697 1
Just have a look at the <a href="../porttest.html">Port Testing Guide</a>.
@


1.72
log
@Comment this out for now.
@
text
@d71 1
a71 1
<!--  <li><a href="#PortsSecurity">15.3.9 - Security updates (-stable)</a> -->
d137 1
a137 1
<!--
a141 1
-->
a1272 1
<!--
d1277 2
a1278 2
software, they are fixed in the <b>-stable</b> branch of the ports tree.
Remember that the lifecycle is 1 year: only the current and last release
d1285 4
a1288 3
You can keep your tree up-to-date with CVS, and in addition subscribe
to the ports-security <a href="../mail.html">mailing list</a> to receive
security announcements related to software in the ports tree.
d1292 1
a1292 2
taken up in the -stable branch.
-->
d1397 1
a1397 1
use -release packages and ports on a -stable system.
d1726 1
a1726 1
<small>$OpenBSD: faq15.html,v 1.71 2010/07/17 09:02:47 ajacoutot Exp $</small>
@


1.71
log
@Add a "Package signatures" section to teach people how to create and use
signed packages. Still opened for enhancement but all info is there now.

"I like it a lot" landry@@
English cluestick and ok sthen@@
@
text
@d72 1
a72 1
  <li><a href="#PkgSig" >15.3.10 - Package signatures</a>
d1296 1
d1358 1
d1728 1
a1728 1
<small>$OpenBSD: faq15.html,v 1.70 2010/06/08 01:01:42 nick Exp $</small>
@


1.70
log
@
this stuff isn't being maintained.  Every release, we add a new list,
and it sits for weeks until someone makes the new list on ftp.openbsd.org.
Not much value anymore since the new package tools help here, so remove.
Kick from deraadt@@.
@
text
@d72 1
d1296 63
d1726 1
a1726 1
<small>$OpenBSD: faq15.html,v 1.69 2010/05/26 21:15:11 sthen Exp $</small>
@


1.69
log
@use 'make show=PKGNAMES' instead of 'make show=PACKAGES'.
problem pointed out by Aaron Glenn, ok nick@@
@
text
@a263 7
<li>In the package lists on the OpenBSD website:
<ul>  <!-- XXX hey...don't just search and replace here!!! -->
<li><a href="http://www.openbsd.org/4.7_packages/">Packages for OpenBSD 4.7</a>
<li><a href="http://www.openbsd.org/4.6_packages/">Packages for OpenBSD 4.6</a>
<li><a href="http://www.openbsd.org/4.5_packages/">Packages for OpenBSD 4.5</a>
<li><a href="http://www.openbsd.org/4.4_packages/">Packages for OpenBSD 4.4</a>
</ul>
d1662 1
a1662 1
<small>$OpenBSD: faq15.html,v 1.68 2010/05/20 02:35:41 nick Exp $</small>
@


1.68
log
@
once again, I got carried away with s/4.6/4.7/ and screwed up this line.
unfortunately, there is not (yet) a package list for 4.7 on the website.
Add an XXX to maybe slow me down next time...
@
text
@d1246 1
a1246 1
$ <b>make show=PACKAGES</b>
d1669 1
a1669 1
<small>$OpenBSD: faq15.html,v 1.67 2010/05/19 12:41:03 nick Exp $</small>
@


1.67
log
@
updates for 4.7
@
text
@d265 1
a265 1
<ul>
d267 1
d1669 1
a1669 1
<small>$OpenBSD: faq15.html,v 1.66 2009/10/26 20:35:31 pvalchev Exp $</small>
@


1.66
log
@4.6 packages lists are up
@
text
@d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_add(1)</a> 
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_delete(1)</a>
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_info(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_create(1)</a> 
d180 1
a180 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_add(1)</a>
d217 1
a217 1
$ <b>export PKG_PATH=/mnt/cdrom/4.6/packages/`machine -a`/</b>
d223 1
a223 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.6/packages/`machine -a`/</b>
d245 1
a245 1
Of course, if you are using snapshots, you will replace "4.6" with
d262 1
a262 1
Packages are located in the <tt>/pub/OpenBSD/4.6/packages</tt> directory.
d266 1
a266 1
<li><a href="http://www.openbsd.org/4.6_packages/">Packages for OpenBSD 4.6</a>
d312 1
a312 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_add(1)</a> 
d424 1
a424 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.6/packages/`machine -a`/screen-4.0.3p1.tgz</b>
d507 1
a507 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_info(1)</a>
d540 2
a541 2
box from OpenBSD 4.5 to 4.6.
Now you can easily upgrade to the newer 4.6 package as follows:
d579 1
a579 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_delete(1)</a>
d839 1
a839 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.6/ports.tar.gz</b>
d1266 1
a1266 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_add(1)</a>
d1619 1
a1619 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.6">pkg_info(1)</a>
d1668 1
a1668 1
<small>$OpenBSD: faq15.html,v 1.65 2009/10/19 23:37:46 nick Exp $</small>
@


1.65
log
@
bah.  got careless with my 4.5->4.6 updates, and did the package list
all wrong.  Pointed out by "Sevan/Venture37" (venture37 at gmail dot com),
thanks!
@
text
@a266 1
(soon, hopefully)
d1668 1
a1668 1
<small>$OpenBSD: faq15.html,v 1.64 2009/10/16 19:07:37 nick Exp $</small>
@


1.64
log
@
updates for 4.6
@
text
@d267 2
a269 1
<li><a href="http://www.openbsd.org/4.3_packages/">Packages for OpenBSD 4.3</a>
d1669 1
a1669 1
<small>$OpenBSD: faq15.html,v 1.63 2009/10/13 14:43:30 landry Exp $</small>
@


1.63
log
@WRKOBJDIR defaults changed (obj -> pobj)
@
text
@d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_add(1)</a> 
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_delete(1)</a>
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_info(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_create(1)</a> 
d180 1
a180 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_add(1)</a>
d217 1
a217 1
$ <b>export PKG_PATH=/mnt/cdrom/4.5/packages/`machine -a`/</b>
d223 1
a223 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.5/packages/`machine -a`/</b>
d245 1
a245 1
Of course, if you are using snapshots, you will replace "4.5" with
d262 1
a262 1
Packages are located in the <tt>/pub/OpenBSD/4.5/packages</tt> directory.
d266 1
a266 1
<li><a href="http://www.openbsd.org/4.5_packages/">Packages for OpenBSD 4.5</a>
d312 1
a312 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_add(1)</a> 
d424 1
a424 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.5/packages/`machine -a`/screen-4.0.3p1.tgz</b>
d507 1
a507 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_info(1)</a>
d540 2
a541 2
box from OpenBSD 4.4 to 4.5.
Now you can easily upgrade to the newer 4.5 package as follows:
d579 1
a579 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_delete(1)</a>
d839 1
a839 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.5/ports.tar.gz</b>
d1266 1
a1266 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_add(1)</a>
d1619 1
a1619 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.5">pkg_info(1)</a>
d1668 1
a1668 1
<small>$OpenBSD: faq15.html,v 1.62 2009/10/13 10:05:24 steven Exp $</small>
@


1.62
log
@refer to the OpenBSD Porter's Handbook instead of porting.html
@
text
@d751 1
a751 1
/usr/ports/obj, but you may override this (see <a href="#PortsConfig">Configuration of the
d1668 1
a1668 1
<small>$OpenBSD: faq15.html,v 1.61 2009/10/11 02:43:42 nick Exp $</small>
@


1.61
log
@
James Hartley pointed out that the libexpat issues are long gone, we can
remove the info about it from the FAQ for 4.5+.
@
text
@d1443 1
a1443 1
<a href="../porting.html">Building an OpenBSD Port</a>.
d1647 2
a1648 2
applications to OpenBSD, a good starting point is
<a href="../porting.html">Building an OpenBSD Port</a>.
d1668 1
a1668 1
<small>$OpenBSD: faq15.html,v 1.60 2009/07/31 05:14:54 steven Exp $</small>
@


1.60
log
@s/</&lt/; and missing dash

from alan.bsd at gmail
@
text
@a1352 9
<p>
In OpenBSD 4.2, many packages that use libexpat <i>require</i>
xbase42.tgz to be installed, even if they have no graphical functionality.
This is fixed as of OpenBSD 4.3, where libexpat is included in the
base43.tgz file set.
Thus, libexpat no longer depends on any X file sets.
Read the additional notes about this transition in the
<a href="upgrade43.html#libexpat">Upgrade Guide</a>.

d1668 1
a1668 1
<small>$OpenBSD: faq15.html,v 1.58 2009/06/18 16:12:34 sthen Exp $</small>
@


1.59
log
@- tyop, spotted by  Richard Toohey
@
text
@d957 1
a957 1
Maint:  Antoine Jacoutot <ajacoutot@@openbsd.org>
d1558 1
a1558 1
<h3>15.4.8 I submitted a new port/an update weeks ago. Why isn't it
@


1.58
log
@correct "make search" example output. "zisizanoutrajous lie" ajacoutot@@
@
text
@d753 1
a753 1
If <tt>WRKOBJDIR</tt> has been explicitely unset, a subdirectory
d1677 1
a1677 1
<small>$OpenBSD: faq15.html,v 1.57 2009/06/12 13:42:45 landry Exp $</small>
@


1.57
log
@Document new WRKOBJDIR defaults, wording from sthen@@, thanks!
@
text
@d954 1
a954 1
Port:   rsnapshot-1.2.9
d957 3
a959 3
Maint:  Sigfred Haversen
Index:  net
L-deps: 
d961 1
a961 1
R-deps: :net/rsync
d1677 1
a1677 1
<small>$OpenBSD: faq15.html,v 1.56 2009/05/03 21:23:58 steven Exp $</small>
@


1.56
log
@zap 4.2 package listing
bump copyright while here
@
text
@d750 6
a755 4
This is either a subdirectory of the port's main directory, in which case
it is recognized by its prefix "w-", or a subdirectory of <tt>${WRKOBJDIR}</tt>,
if the <tt>WRKOBJDIR</tt> variable has been set (see
<a href="#PortsConfig">Configuration of the ports system</a>).
d1677 1
a1677 1
<small>$OpenBSD: faq15.html,v 1.54 2008/11/12 22:27:21 steven Exp $</small>
@


1.55
log
@
updates for 4.5
@
text
@d14 1
a14 1
Copyright (c) 2005-2008 Steven Mestdagh <steven@@openbsd.org>
a268 1
<li><a href="http://www.openbsd.org/4.2_packages/">Packages for OpenBSD 4.2</a>
@


1.54
log
@bump screen pkgname; dongsheng.song at gmail
@
text
@d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_add(1)</a> 
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_delete(1)</a>
d160 1
a160 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_info(1)</a>
d162 1
a162 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_create(1)</a> 
d180 1
a180 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_add(1)</a>
d217 1
a217 1
$ <b>export PKG_PATH=/mnt/cdrom/4.4/packages/`machine -a`/</b>
d223 1
a223 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.4/packages/`machine -a`/</b>
d245 1
a245 1
Of course, if you are using snapshots, you will replace "4.4" with
d262 1
a262 1
Packages are located in the <tt>/pub/OpenBSD/4.4/packages</tt> directory.
d266 1
d313 1
a313 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_add(1)</a> 
d425 1
a425 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.4/packages/`machine -a`/screen-4.0.3p1.tgz</b>
d508 1
a508 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_info(1)</a>
a539 8

Since OpenBSD 3.7, it is possible to update existing packages by using
the <b>-r</b> (= replace) switch to
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_add(1)</a>.
OpenBSD 3.8 introduced the <b>-u</b> switch to pkg_add(1), which has been
turned into a true update mechanism in 3.9.

<p>
d541 2
a542 2
box from OpenBSD 4.3 to 4.4.
Now you can easily upgrade to the newer 4.4 package as follows:
d546 3
a548 3
unzip-5.52 (extracting): complete
unzip-5.51 (deleting): complete
unzip-5.52 (installing): complete
d580 1
a580 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_delete(1)</a>
d838 1
a838 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.4/ports.tar.gz</b>
d1265 1
a1265 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_add(1)</a>
d1627 1
a1627 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.4">pkg_info(1)</a>
d1676 1
a1676 1
<small>$OpenBSD: faq15.html,v 1.52 2008/10/31 16:54:41 nick Exp $</small>
@


1.53
log
@
punctation, standardizing, other misc. cleanup, from from Alan R. S.
Bueno (alan dot bsd at gmail dot com)
@
text
@d319 2
a320 2
$ <b>sudo pkg_add -v screen-4.0.3p0</b>
parsing screen-4.0.3p0
d322 1
a322 1
screen-4.0.3p0: complete
d346 1
a346 1
Ambiguous: screen could be screen-4.0.3p0 screen-4.0.3p0-shm screen-4.0.3p0-static
d349 3
a351 3
         1: screen-4.0.3p0
         2: screen-4.0.3p0-shm
         3: screen-4.0.3p0-static
d353 1
a353 1
screen-4.0.3p0: complete
d424 2
a425 2
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.4/packages/`machine -a`/screen-4.0.3p0.tgz</b>
screen-4.0.3p0: complete
d448 2
a449 2
$ <b>sudo pkg_add -v screen-4.0.3p0</b>
parsing screen-4.0.3p0
d453 1
a453 1
screen-4.0.3p0: complete
d526 1
a526 1
screen-4.0.3p0      multi-screen window manager
d597 1
a597 1
screen-4.0.3p0: complete
d606 1
a606 1
screen-4.0.3p0) only if ambiguity is possible due to multiple installed
d617 1
a617 1
screen-4.0.3p0: complete
d619 1
a619 1
--- screen-4.0.3p0 -------------------
d669 2
a670 2
$ <b>sudo pkg_add screen-4.0.3p0</b>
screen-4.0.3p0: complete                                                      7%
d672 1
a672 1
/usr/sbin/pkg_add: Installation of screen-4.0.3p0 failed , partial installation recorded as partial-screen-4.0.3p0
@


1.52
log
@
update for 4.4, from Steven Mestdagh, who is probably in transit at the
moment.
@
text
@d96 2
d136 1
d141 1
d261 1
a261 1
<li>On the <a href=../ftp.html>FTP mirror servers</a>.
d1683 1
a1683 1
<small>$OpenBSD: faq15.html,v 1.51 2008/07/04 10:54:24 espie Exp $</small>
@


1.51
log
@the PKG_PATH parser got smarter
@
text
@d152 1
a152 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_add(1)</a> 
d154 1
a154 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_delete(1)</a>
d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_info(1)</a>
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_create(1)</a> 
d176 1
a176 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_add(1)</a>
d213 1
a213 1
$ <b>export PKG_PATH=/mnt/cdrom/4.3/packages/`machine -a`/</b>
d219 1
a219 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.3/packages/`machine -a`/</b>
d241 1
a241 1
Of course, if you are using snapshots, you will replace "4.3" with
d258 1
a258 1
Packages are located in the <tt>/pub/OpenBSD/4.3/packages</tt> directory.
d262 1
a264 1
<li><a href="http://www.openbsd.org/4.1_packages/">Packages for OpenBSD 4.1</a>
d308 1
a308 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_add(1)</a> 
d420 1
a420 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.3/packages/`machine -a`/screen-4.0.3p0.tgz</b>
d503 1
a503 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_info(1)</a>
d538 1
a538 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_add(1)</a>.
d544 2
a545 2
box from OpenBSD 4.2 to 4.3.
Now you can easily upgrade to the newer 4.3 package as follows:
d583 1
a583 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_delete(1)</a>
d841 1
a841 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.3/ports.tar.gz</b>
d1268 1
a1268 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_add(1)</a>
d1630 1
a1630 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.3">pkg_info(1)</a>
d1679 1
a1679 1
<small>$OpenBSD: faq15.html,v 1.50 2008/05/01 20:54:49 steven Exp $</small>
@


1.50
log
@improve libexpat piece a bit, but keep it here since it was definitely
a FAQ in the past.
@
text
@d227 2
a228 2
<b>HOWEVER, every path in the <tt>PKG_PATH</tt> variable MUST end in a
slash (/).</b>
d1679 1
a1679 1
<small>$OpenBSD: faq15.html,v 1.49 2008/05/01 06:13:23 steven Exp $</small>
@


1.49
log
@4.3 packages available
@
text
@d1356 1
a1356 1
For OpenBSD 4.2, many packages that use libexpat <i>require</i>
d1358 5
a1362 1
This is fixed as of OpenBSD 4.3.
d1679 1
a1679 1
<small>$OpenBSD: faq15.html,v 1.48 2008/04/30 22:36:24 steven Exp $</small>
@


1.48
log
@update for 4.3
@
text
@d262 1
a262 1
<!-- <li><a href="http://www.openbsd.org/4.3_packages/">Packages for OpenBSD 4.3</a> -->
d1675 1
a1675 1
<small>$OpenBSD: faq15.html,v 1.47 2008/03/01 11:31:08 steven Exp $</small>
@


1.47
log
@bump copyright year
@
text
@d152 1
a152 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_add(1)</a> 
d154 1
a154 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_delete(1)</a>
d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_info(1)</a>
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_create(1)</a> 
d176 1
a176 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_add(1)</a>
d213 1
a213 1
$ <b>export PKG_PATH=/mnt/cdrom/4.2/packages/`machine -a`/</b>
d219 1
a219 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.2/packages/`machine -a`/</b>
d241 1
a241 1
Of course, if you are using snapshots, you will replace "4.2" with
d258 1
a258 1
Packages are located in the <tt>/pub/OpenBSD/4.2/packages</tt> directory.
d262 1
a264 1
<li><a href="http://www.openbsd.org/4.0_packages/">Packages for OpenBSD 4.0</a>
d308 1
a308 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_add(1)</a> 
d420 1
a420 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.2/packages/`machine -a`/screen-4.0.3p0.tgz</b>
d503 1
a503 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_info(1)</a>
d538 1
a538 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_add(1)</a>.
d544 2
a545 2
box from OpenBSD 4.1 to 4.2.
Now you can easily upgrade to the newer 4.2 package as follows:
d583 1
a583 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_delete(1)</a>
d841 1
a841 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.2/ports.tar.gz</b>
d1268 1
a1268 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_add(1)</a>
d1356 1
a1356 1
For 4.2, many packages that use libexpat now <i>require</i>
d1358 1
a1358 1
This will be fixed for 4.3.
d1626 1
a1626 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.2">pkg_info(1)</a>
d1675 1
a1675 1
<small>$OpenBSD: faq15.html,v 1.46 2008/01/23 15:12:35 saad Exp $</small>
@


1.46
log
@nuke extra line and fix a few typos. ok nick@@
@
text
@d14 1
a14 1
Copyright (c) 2005-2007 Steven Mestdagh <steven@@openbsd.org>
d1675 1
a1675 1
<small>$OpenBSD: faq15.html,v 1.45 2008/01/02 13:43:49 tobias Exp $</small>
@


1.45
log
@Typo fixed.

OK nick@@
@
text
@d1241 1
a1241 1
Some ports are split into several packages. make install will only
d1251 1
a1251 1
<code>make install</code> will only install the first subpackage.
a1258 1

d1356 2
a1357 2
For 4.2, many packages that use libexpat now <i>must</i> have
xbase42.tgz installed, even if they have no graphical functionality.
d1675 1
a1675 1
<small>$OpenBSD: faq15.html,v 1.44 2007/12/27 02:09:17 nick Exp $</small>
@


1.44
log
@
There is no -stable ports at the moment.  In the hope that changes,
mostly just commented out for now.  Prompted by misc@@ posting by
Jonathan Thornburg (j dot thornburg at soton dot ac dot uk), but lost in
the discussion with the low-life hypocritical street thug who passes
himself as an advocate of of "free" software, for a curiously odd and
self-serving definition of "free".
@
text
@d1342 1
a1342 1
use a -release packages and ports on a -stable system.
d1676 1
a1676 1
<small>$OpenBSD: faq15.html,v 1.43 2007/11/13 10:58:28 espie Exp $</small>
@


1.43
log
@unconfuse a few things.

- most people don't clean after the fact, they just set BULK=Yes on the
command line.
- some flavors don't have distinct build directories, or not completely
distinct ones.
- there is no user choice in multi-packages situation: the porter has
decided there are several subpackages, period. But you can get more
information, such as the complete list of packages, you can install them
all, and you can select some if you really want to.
@
text
@d56 2
a57 2
  <li><a href="#PkgSecurity"  >15.2.8 - Security updates (-stable packages)</a>
  <li><a href="#PkgPartial"   >15.2.9 - Incomplete package installation or
d71 1
a71 1
  <li><a href="#PortsSecurity">15.3.9 - Security updates (-stable)</a>
d136 2
a137 2
corresponding package security updates are made available as explained
<a href="#PkgSecurity">below</a>.
d624 1
d652 1
d655 1
a655 1
<h3>15.2.9 - Incomplete package installation or removal</h3>
d1282 1
a1282 1

d1302 1
a1302 1

d1342 1
a1342 1
use a -stable ports tree on a -release system, and vice versa.
d1356 5
d1676 1
a1676 1
<small>$OpenBSD: faq15.html,v 1.42 2007/11/04 17:06:49 steven Exp $</small>
@


1.42
log
@s/PKGREPOSITORYBASE/PACKAGE_REPOSITORY/

spotted by Inigo Tejedor Arrondo (inigo.listas at gmail)
@
text
@d1137 6
d1171 1
a1171 1
If you would like to get rid of the package you just built, you can do so
d1175 1
a1175 1
$ <b>make clean=package</b>
a1179 4
Use "<tt>packages</tt>" instead of "<tt>package</tt>" to also delete any
subpackages (see below).


d1209 1
a1209 1
Every flavor of a port will have its own working directory during building
d1219 3
d1230 4
d1239 2
a1240 4
You will use subpackages when you need only part of a certain
application, not the whole thing.
However, it is very likely that the subpackage you are looking for exists,
and is ready to be fetched and installed from your nearest FTP mirror.
d1243 15
d1669 1
a1669 1
<small>$OpenBSD: faq15.html,v 1.41 2007/11/02 20:48:48 steven Exp $</small>
@


1.41
log
@update for 4.2
@
text
@d927 1
a927 1
This is controlled by the <tt>PKGREPOSITORYBASE</tt> variable.
d935 1
a935 1
PKGREPOSITORYBASE=/usr/packages
d1647 1
a1647 1
<small>$OpenBSD: faq15.html,v 1.40 2007/09/02 13:28:55 steven Exp $</small>
@


1.40
log
@missing verb; new sentence/new line
@
text
@d152 1
a152 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_add(1)</a> 
d154 1
a154 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_delete(1)</a>
d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_info(1)</a>
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_create(1)</a> 
d176 1
a176 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_add(1)</a>
d213 1
a213 1
$ <b>export PKG_PATH=/mnt/cdrom/4.1/packages/`machine -a`/</b>
d219 1
a219 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.1/packages/`machine -a`/</b>
d241 1
a241 1
Of course, if you are using snapshots, you will replace "4.1" with
d258 1
a258 1
Packages are located in the <tt>/pub/OpenBSD/4.1/packages</tt> directory.
d262 1
a264 1
<li><a href="http://www.openbsd.org/3.9_packages/">Packages for OpenBSD 3.9</a>
d308 1
a308 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_add(1)</a> 
d420 1
a420 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.1/packages/`machine -a`/screen-4.0.3p0.tgz</b>
d503 1
a503 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_info(1)</a>
d538 1
a538 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_add(1)</a>.
d544 2
a545 2
box from OpenBSD 4.0 to 4.1.
Now you can easily upgrade to the newer 4.1 package as follows:
d583 1
a583 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_delete(1)</a>
d839 1
a839 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.1/ports.tar.gz</b>
d1245 1
a1245 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_add(1)</a>
d1598 1
a1598 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.1">pkg_info(1)</a>
d1647 1
a1647 1
<small>$OpenBSD: faq15.html,v 1.39 2007/08/26 10:22:33 espie Exp $</small>
@


1.39
log
@explain pkg_add -u slightly better
@
text
@d557 1
a557 1
Invoking pkg_add(1) with the <b>-u</b> flag and no package name
d567 2
a568 1
no longer mean all entries will be tried for update operations. Instead, pkg_add will stop at the first path with matching candidates.
d1647 1
a1647 1
<small>$OpenBSD: faq15.html,v 1.38 2007/07/09 17:42:06 aanriot Exp $</small>
@


1.38
log
@show the border of each cells in html tables, even if they are empty, so
it's easier to read.

discussed with and ok nick@@
@
text
@a555 2
Invoking pkg_add(1) with the <b>-u</b> flag and no package name will just
examine all installed packages for updated versions.
d557 2
d566 4
d1646 1
a1646 1
<small>$OpenBSD: faq15.html,v 1.37 2007/05/04 09:16:15 steven Exp $</small>
@


1.37
log
@trailing whitespace cleanup
@
text
@d787 1
a787 1
<table border="1" align="center">
d1642 1
a1642 1
<small>$OpenBSD: faq15.html,v 1.36 2007/05/04 05:29:56 steven Exp $</small>
@


1.36
log
@bump copyright year
@
text
@d458 2
a459 2
xv-3.10ap4:png-1.2.14p0: complete                                               
xv-3.10ap4:tiff-3.8.2p0: complete                                            
d1021 1
a1021 1
100% |**************************************************|   754 KB    00:31
d1300 1
a1300 1
</ul>       
d1494 1
a1494 1
<li>Distribution rules prohibit OpenBSD from distributing a package.  
d1642 1
a1642 1
<small>$OpenBSD: faq15.html,v 1.35 2007/05/02 14:34:42 ajacoutot Exp $</small>
@


1.35
log
@change packages versions to match 4.1 release

ok steven@@
@
text
@d14 1
a14 1
Copyright (c) 2005, 2006 Steven Mestdagh <steven@@openbsd.org>
d1642 1
a1642 1
<small>$OpenBSD: faq15.html,v 1.34 2007/05/01 20:05:11 steven Exp $</small>
@


1.34
log
@packages list for 4.0 got lost; from Tobias Stoeckmann
@
text
@d315 2
a316 2
$ <b>sudo pkg_add -v screen-4.0.2</b>
parsing screen-4.0.2
d318 1
a318 1
screen-4.0.2: complete
d342 1
a342 1
Ambiguous: screen could be screen-4.0.2 screen-4.0.2-shm screen-4.0.2-static
d345 3
a347 3
         1: screen-4.0.2
         2: screen-4.0.2-shm
         3: screen-4.0.2-static
d349 1
a349 1
screen-4.0.2: complete
d361 2
a362 2
$ <b>sudo pkg_add ghostscript-fonts-6.0p0</b>
ghostscript-fonts-6.0p0: complete
d364 1
a364 1
--- ghostscript-fonts-6.0p0 -------------------
d383 15
a397 15
$ <b>sudo pkg_add -v tin-1.6.2</b>
parsing tin-1.6.2
Dependencies for tin-1.6.2 resolve to: gettext-0.14.5p1, libutf8-0.8, pcre-6.4p1, libiconv-1.9.2p3 (todo: libiconv-1.9.2p3,gettext-0.14.5p1,pcre-6.4p1,libutf8-0.8)
tin-1.6.2:parsing libiconv-1.9.2p3
tin-1.6.2:libiconv-1.9.2p3: complete
tin-1.6.2:parsing gettext-0.14.5p1
Dependencies for gettext-0.14.5p1 resolve to: expat-1.95.6p1, libiconv-1.9.2p3 (todo: expat-1.95.6p1)
tin-1.6.2:parsing expat-1.95.6p1
tin-1.6.2:expat-1.95.6p1: complete
tin-1.6.2:gettext-0.14.5p1: complete
tin-1.6.2:parsing pcre-6.4p1
tin-1.6.2:pcre-6.4p1: complete
tin-1.6.2:parsing libutf8-0.8
tin-1.6.2:libutf8-0.8: complete
tin-1.6.2: complete
d420 2
a421 2
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.1/packages/`machine -a`/screen-4.0.2.tgz</b>
screen-4.0.2: complete
d444 2
a445 2
$ <b>sudo pkg_add -v screen-4.0.2</b>
parsing screen-4.0.2
d449 1
a449 1
screen-4.0.2: complete
d458 2
a459 2
xv-3.10ap4:png-1.2.8: complete                                               
xv-3.10ap4:tiff-3.7.3p0: complete                                            
d462 1
a462 1
        tiff-3.7.3p0, jpeg-6bp3, png-1.2.8
d508 6
a513 6
aterm-0.4.2         color vt102 terminal emulator with transparency support
bzip2-1.0.3         block-sorting file compressor, unencumbered
expat-1.95.6p1      XML 1.0 parser written in C
fluxbox-0.9.14      window manager based on the original Blackbox code
gettext-0.14.5p1    GNU gettext
imlib2-1.1.2p2      image manipulation library
d517 1
a517 1
libungif-4.1.4      tools and library routines for working with GIF images
d519 1
a519 1
mutt-1.4.2ip2       tty-based e-mail client
d521 5
a525 5
png-1.2.8           library for manipulating PNG images
screen-4.0.2        multi-screen window manager
tcsh-6.14.00p0      extended C-shell with many useful features
tiff-3.7.3p0        tools and library routines for working with TIFF images
tin-1.6.2           threaded NNTP and spool based UseNet newsreader
d588 1
a588 1
screen-4.0.2: complete
d597 1
a597 1
screen-4.0.2) only if ambiguity is possible due to multiple installed
d608 1
a608 1
screen-4.0.2: complete
d610 1
a610 1
--- screen-4.0.2 -------------------
d658 2
a659 2
$ <b>sudo pkg_add screen-4.0.2</b>
screen-4.0.2: complete                                                      7%
d661 1
a661 1
/usr/sbin/pkg_add: Installation of screen-4.0.2 failed , partial installation recorded as partial-screen-4.0.2
d982 1
a982 1
SQLite version 3.3.6
d987 1
a987 1
R-2.1.1p0|clone of S, a powerful math/statistics/graphics language
d989 2
a990 2
darkstat-3.0.524|network statistics gatherer with graphs
pfstat-2.2|packet filter statistics visualization
d993 1
a993 1
diffstat-1.43|accumulates and displays statistics from a diff file
d1016 5
a1020 5
===&gt;  rsnapshot-1.2.9 depends on: rsync-2.6.8 - not found
===&gt;  Verifying install for rsync-2.6.8 in net/rsync
===&gt;  Checking files for rsync-2.6.8
&gt;&gt; rsync-2.6.8.tar.gz doesn't seem to exist on this system.
&gt;&gt; Fetch ftp://ftp.samba.org/pub/rsync/old-versions/rsync-2.6.8.tar.gz.
d1022 2
a1023 2
&gt;&gt; Size matches for /usr/ports/distfiles/rsync-2.6.8.tar.gz
&gt;&gt; Checksum OK for rsync-2.6.8.tar.gz. (sha1)
d1025 4
a1028 4
===&gt;  found c.39.3
===&gt;  Extracting for rsync-2.6.8
===&gt;  Patching for rsync-2.6.8
===&gt;  Configuring for rsync-2.6.8
d1030 1
a1030 1
===&gt;  Building for rsync-2.6.8
d1032 1
a1032 1
===&gt;  Faking installation for rsync-2.6.8
d1034 5
a1038 5
===&gt;  Building package for rsync-2.6.8
Link to /usr/ports/packages/i386/ftp/rsync-2.6.8.tgz
Link to /usr/ports/packages/i386/cdrom/rsync-2.6.8.tgz
===&gt;  Installing rsync-2.6.8 from /usr/ports/packages/i386/all/rsync-2.6.8.tgz
rsync-2.6.8: complete
d1040 1
a1040 1
===&gt;  rsnapshot-1.2.9 depends on: rsync-2.6.8 - found
d1052 1
a1052 1
===&gt;  rsnapshot-1.2.9 depends on: rsync-2.6.8 - found
d1112 1
a1112 1
===&gt;  Cleaning for rsync-2.6.8
d1642 1
a1642 1
<small>$OpenBSD: faq15.html,v 1.33 2007/05/01 16:27:46 nick Exp $</small>
@


1.33
log
@
update for 4.1
@
text
@d263 1
a264 1
<li><a href="http://www.openbsd.org/3.8_packages/">Packages for OpenBSD 3.8</a>
d1642 1
a1642 1
<small>$OpenBSD: faq15.html,v 1.32 2006/11/06 16:01:27 pvalchev Exp $</small>
@


1.32
log
@4.0_packages is now up
@
text
@d152 1
a152 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_add(1)</a> 
d154 1
a154 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_delete(1)</a>
d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_info(1)</a>
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_create(1)</a> 
d176 1
a176 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_add(1)</a>
d213 1
a213 1
$ <b>export PKG_PATH=/mnt/cdrom/4.0/packages/`machine -a`/</b>
d219 1
a219 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/4.0/packages/`machine -a`/</b>
d241 1
a241 1
Of course, if you are using snapshots, you will replace "4.0" with
d258 1
a258 1
Packages are located in the <tt>/pub/OpenBSD/4.0/packages</tt> directory.
d262 1
a262 1
<li><a href="http://www.openbsd.org/4.0_packages/">Packages for OpenBSD 4.0</a>
d308 1
a308 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_add(1)</a> 
d420 1
a420 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/4.0/packages/`machine -a`/screen-4.0.2.tgz</b>
d503 1
a503 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_info(1)</a>
d538 1
a538 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_add(1)</a>.
d544 2
a545 2
box from OpenBSD 3.9 to 4.0.
Now you can easily upgrade to the newer 4.0 package as follows:
d578 1
a578 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_delete(1)</a>
d834 1
a834 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/4.0/ports.tar.gz</b>
d1240 1
a1240 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_add(1)</a>
d1593 1
a1593 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+4.0">pkg_info(1)</a>
d1642 1
a1642 1
<small>$OpenBSD: faq15.html,v 1.31 2006/11/04 00:35:48 nick Exp $</small>
@


1.31
log
@
http://www.openbsd.org/4.0_packages/ still doesn't exist.
Remove reference until/unless it arrives.
@
text
@d260 1
a260 1
<!-- <li>In the package lists on the OpenBSD website:
d265 1
a265 1
</ul> -->
d1642 1
a1642 1
<small>$OpenBSD: faq15.html,v 1.30 2006/11/01 05:06:03 steven Exp $</small>
@


1.30
log
@updates for 4.0
@
text
@d260 1
a260 1
<li>In the package lists on the OpenBSD website:
d265 1
a265 1
</ul>
d1642 1
a1642 1
<small>$OpenBSD: faq15.html,v 1.29 2006/08/11 20:28:59 steven Exp $</small>
@


1.29
log
@close tag; bryan.irvine@@kingcountyjournal.com
@
text
@d152 1
a152 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_add(1)</a> 
d154 1
a154 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_delete(1)</a>
d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_info(1)</a>
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_create(1)</a> 
d176 1
a176 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_add(1)</a>
d213 1
a213 1
$ <b>export PKG_PATH=/mnt/cdrom/3.9/packages/`machine -a`/</b>
d219 1
a219 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/3.9/packages/`machine -a`/</b>
d241 1
a241 1
Of course, if you are using snapshots, you will replace "3.9" with
d258 1
a258 1
Packages are located in the <tt>/pub/OpenBSD/3.9/packages</tt> directory.
d262 1
a264 1
<li><a href="http://www.openbsd.org/3.7_packages/">Packages for OpenBSD 3.7</a>
d308 1
a308 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_add(1)</a> 
d420 1
a420 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/3.9/packages/`machine -a`/screen-4.0.2.tgz</b>
d503 1
a503 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_info(1)</a>
d538 1
a538 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_add(1)</a>.
d544 2
a545 2
box from OpenBSD 3.8 to 3.9.
Now you can easily upgrade to the newer 3.9 package as follows:
d578 1
a578 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_delete(1)</a>
d630 1
a630 1
Note that updated packages are only available for the i386 platform.
d748 1
a748 1
it is recognized by its prefix "w-", or a subdirectory of <tt>$WRKOBJDIR</tt>,
d834 1
a834 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/3.9/ports.tar.gz</b>
d949 1
a949 1
Port:   rsnapshot-1.2.1
d965 35
d1010 14
a1023 14
===>  Checking files for rsnapshot-1.2.1
&gt;&gt; rsnapshot-1.2.1.tar.gz doesn't seem to exist on this system.
&gt;&gt; Fetch http://www.rsnapshot.org/downloads/rsnapshot-1.2.1.tar.gz.
100% |**************************************************|   133 KB    00:00    
&gt;&gt; Size matches for /usr/ports/distfiles/rsnapshot-1.2.1.tar.gz
&gt;&gt; Checksum OK for rsnapshot-1.2.1.tar.gz. (sha1)
===&gt;  rsnapshot-1.2.1 depends on: rsync-2.6.6p0 - not found
===&gt;  Verifying install for rsync-2.6.6p0 in net/rsync
===&gt;  Checking files for rsync-2.6.6p0
&gt;&gt; rsync-2.6.6.tar.gz doesn't seem to exist on this system.
&gt;&gt; Fetch ftp://ftp.samba.org/pub/rsync/old-versions/rsync-2.6.6.tar.gz.
100% |**************************************************|   673 KB    00:04    
&gt;&gt; Size matches for /usr/ports/distfiles/rsync-2.6.6.tar.gz
&gt;&gt; Checksum OK for rsync-2.6.6.tar.gz. (sha1)
d1025 4
a1028 4
===&gt;  found c.39.0
===&gt;  Extracting for rsync-2.6.6p0
===&gt;  Patching for rsync-2.6.6p0
===&gt;  Configuring for rsync-2.6.6p0
d1030 1
a1030 1
===&gt;  Building for rsync-2.6.6p0
d1032 1
a1032 1
===&gt;  Faking installation for rsync-2.6.6p0
d1034 10
a1043 10
===&gt;  Building package for rsync-2.6.6p0
Link to /usr/ports/packages/i386/ftp/rsync-2.6.6p0.tgz
Link to /usr/ports/packages/i386/cdrom/rsync-2.6.6p0.tgz
===&gt;  Installing rsync-2.6.6p0 from /usr/ports/packages/i386/all/rsync-2.6.6p0.tgz
rsync-2.6.6p0: complete                                                      
===&gt; Returning to build of rsnapshot-1.2.1
===&gt;  rsnapshot-1.2.1 depends on: rsync-2.6.6p0 - found
===&gt;  Extracting for rsnapshot-1.2.1
===&gt;  Patching for rsnapshot-1.2.1
===&gt;  Configuring for rsnapshot-1.2.1
d1045 1
a1045 1
===>  Building for rsnapshot-1.2.1
d1047 1
a1047 1
===&gt;  Faking installation for rsnapshot-1.2.1
d1049 6
a1054 6
===&gt;  Building package for rsnapshot-1.2.1
Link to /usr/ports/packages/i386/ftp/rsnapshot-1.2.1.tgz
Link to /usr/ports/packages/i386/cdrom/rsnapshot-1.2.1.tgz
===&gt;  rsnapshot-1.2.1 depends on: rsync-2.6.6p0 - found
===&gt;  Installing rsnapshot-1.2.1 from /usr/ports/packages/i386/all/rsnapshot-1.2.1.tgz
rsnapshot-1.2.1: complete
d1104 1
a1104 1
===&gt;  Cleaning for rsnapshot-1.2.1
d1112 2
a1113 2
===&gt;  Cleaning for rsync-2.6.6p0
===&gt;  Cleaning for rsnapshot-1.2.1
d1121 2
a1122 2
===&gt;  Cleaning for rsnapshot-1.2.1
===&gt;  Dist cleaning for rsnapshot-1.2.1
d1140 2
a1141 2
===&gt; Deinstalling for rsnapshot-1.2.1
rsnapshot-1.2.1: complete
d1152 3
a1154 3
===&gt;  Cleaning for rsnapshot-1.2.1
/usr/sbin/pkg_delete rsnapshot-1.2.1
rsnapshot-1.2.1: complete
d1156 2
a1157 2
===&gt;  Installing rsnapshot-1.2.1 from /usr/ports/packages/i386/all/rsnapshot-1.2.1.tgz
rsnapshot-1.2.1: complete
d1165 2
a1166 2
===&gt;  Cleaning for rsnapshot-1.2.1
rm -f /usr/ports/packages/i386/all/rsnapshot-1.2.1.tgz
d1240 1
a1240 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_add(1)</a>
d1593 1
a1593 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+3.9">pkg_info(1)</a>
d1642 1
a1642 1
<small>$OpenBSD: faq15.html,v 1.28 2006/05/20 11:52:58 steven Exp $</small>
@


1.28
log
@next to an out of sync system, a system without X11 is one of the most
likely causes of failure in building ports.
pointed out and partly written by Matthias Kilian <kili at outback.escape.de>

sounds good sturm@@
@
text
@d1020 1
a1020 1
</pre></blockquote
d1607 1
a1607 1
<small>$OpenBSD: faq15.html,v 1.27 2006/05/01 06:14:46 steven Exp $</small>
@


1.27
log
@updates for 3.9.  "commit!" nick@@
@
text
@d1283 9
d1607 1
a1607 1
<small>$OpenBSD: faq15.html,v 1.26 2006/01/24 02:24:24 nick Exp $</small>
@


1.26
log
@
missing "pub" in PKG_PATH example.  Spotted by Michael Jensen,
(cognacc at mail dot dk), thanks!
@
text
@d14 1
a14 1
Copyright (c) 2005, 2006, Steven Mestdagh <steven@@openbsd.org>
d152 1
a152 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_add(1)</a> 
d154 1
a154 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_delete(1)</a>
d156 1
a156 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_info(1)</a>
d158 1
a158 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_create(1)</a> 
d176 1
a176 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_add(1)</a>
d213 1
a213 1
$ <b>export PKG_PATH=/mnt/cdrom/3.8/packages/`machine -a`/</b>
d219 1
a219 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/pub/OpenBSD/3.8/packages/`machine -a`/</b>
d241 1
a241 1
Of course, if you are using snapshots, you will replace "3.8" with
d258 1
a258 1
Packages are located in the <tt>/pub/OpenBSD/3.8/packages</tt> directory.
d262 1
a264 1
<li><a href="http://www.openbsd.org/3.6_packages/">Packages for OpenBSD 3.6</a>
d308 1
a308 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_add(1)</a> 
d332 22
d361 2
a362 2
$ <b>sudo pkg_add ghostscript-fonts-6.0</b>
ghostscript-fonts-6.0: complete
d364 1
a364 1
--- ghostscript-fonts-6.0 -------------------
d385 12
a396 12
Dependencies for tin-1.6.2 resolve to: gettext-0.10.40p3, libiconv-1.9.2p1,
libutf8-0.7.3, pcre-4.5
(todo: libiconv-1.9.2p1,gettext-0.10.40p3,pcre-4.5,libutf8-0.7.3)
tin-1.6.2:parsing libiconv-1.9.2p1
tin-1.6.2:libiconv-1.9.2p1: complete                                         
tin-1.6.2:parsing gettext-0.10.40p3
Dependencies for gettext-0.10.40p3 resolve to: libiconv-1.9.2p1
tin-1.6.2:gettext-0.10.40p3: complete                                        
tin-1.6.2:parsing pcre-4.5
tin-1.6.2:pcre-4.5: complete                                                 
tin-1.6.2:parsing libutf8-0.7.3
tin-1.6.2:libutf8-0.7.3: complete                                            
d420 1
a420 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/3.8/packages/`machine -a`/screen-4.0.2.tgz</b>
d456 5
a460 5
$ <b>sudo pkg_add xv-3.10ap3</b>
xv-3.10ap3:jpeg-6b: complete
xv-3.10ap3:png-1.2.8: complete
xv-3.10ap3:tiff-3.7.3: complete
Can't install xv-3.10ap3: lib not found X11.9.0
d462 1
a462 1
        tiff-3.7.3, jpeg-6bp2, png-1.2.8
d503 1
a503 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_info(1)</a>
d510 11
a520 11
fluxbox-0.9.13      window manager based on the original Blackbox code
gettext-0.10.40p3   GNU gettext
imlib2-1.1.2p0      image manipulation library
jpeg-6bp2           IJG's JPEG compression utilities
libiconv-1.9.2p1    character set conversion library
libltdl-1.5.18      GNU libtool system independent dlopen wrapper
libungif-4.1.0b1    tools and library routines for working with GIF images
libutf8-0.7.3       provides UTF-8 locale support
mutt-1.4.2ip0       tty-based e-mail client
ncftp-3.1.9         ftp replacement with advanced user interface
pcre-4.5            perl-compatible regular expression library
d523 2
a524 2
tcsh-6.13.00        extended C-shell with many useful features
tiff-3.7.3          tools and library routines for working with TIFF images
d538 3
a540 5
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_add(1)</a>.
OpenBSD 3.8 introduces the <b>-u</b> switch to pkg_add(1).
It is the beginning of a true update mechanism, and will be extended in
future releases.
For now, it will only tell you the name of the new package.
d544 2
a545 3
box from OpenBSD 3.7 to 3.8.
The <b>-u</b> switch can be used to find out the new package name,
particularly the new version number, as follows:
a548 9
Updating unzip-5.51 -> unzip-5.52
Update using pkg_add -r unzip-5.52
</pre></blockquote>

Now you can easily upgrade to the newer 3.8 package by just following the
above instruction and replacing the old package in one go:

<blockquote><pre>
$ <b>sudo pkg_add -r unzip-5.52</b>
a570 9
<p>
The above is a handy way to quickly upgrade a package with a new version.
It works well in more than 99% of the cases.
Some very complicated software, however, will still require you to use
the old method of first removing the old package, then adding the new
package.
This is slightly inconvenient, as packages may trigger dependencies, and
you may have to remove a large subset of packages for an update.

d578 1
a578 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_delete(1)</a>
d834 1
a834 1
$ <b>ftp ftp://ftp.openbsd.org/pub/OpenBSD/3.8/ports.tar.gz</b>
d948 9
a956 9
$ <b>make search key=fetchmail</b>
Port:   fetchmail-6.2.5.2
Path:   mail/fetchmail
Info:   mail retrieval utility for POP2, POP3, KPOP, IMAP and more
Maint:  Federico Schwindt &lt;fgsch@@openbsd.org&gt;
Index:  mail
L-deps: iconv.2::converters/libiconv intl.1:gettext->=0.10.38:devel/gettext
B-deps: gettext->=0.10.38:devel/gettext
R-deps: gettext->=0.10.38:devel/gettext
d969 2
a970 8
For clarity's sake, let's consider a simple example: fetchmail.
This application depends on gettext, which depends on libiconv.
In turn, libiconv needs metaauto to build, metaauto will make autoconf-2.57
in this case, and autoconf needs help2man to build.
The last three packages are already present on the system: you will see them
listed as "found" straight away in the following output.
This is a realistic scenario if you regularly build ports, because these
tools are used by a lot of different software.
d973 1
a973 1
$ <b>cd /usr/ports/mail/fetchmail</b>
d975 19
a993 44
===&gt;  Checking files for fetchmail-6.2.5.2
&gt;&gt; fetchmail-6.2.5.2.tar.gz doesn't seem to exist on this system.
&gt;&gt; Attempting to fetch /usr/ports/distfiles/fetchmail-6.2.5.2.tar.gz from http://download.berlios.de/fetchmail/.
100% |**************************************************|  1247 KB    00:24    
&gt;&gt; Size matches for /usr/ports/distfiles/fetchmail-6.2.5.2.tar.gz
&gt;&gt; Checksum OK for fetchmail-6.2.5.2.tar.gz. (sha1)
===&gt;  fetchmail-6.2.5.2 depends on: gettext-&gt;=0.10.38 - not found
===&gt;  Verifying install for gettext-&gt;=0.10.38 in devel/gettext
===&gt;  Checking files for gettext-0.10.40p3
&gt;&gt; gettext-0.10.40.tar.gz doesn't seem to exist on this system.
&gt;&gt; Attempting to fetch /usr/ports/distfiles/gettext-0.10.40.tar.gz from ftp://ftp.gnu.org/gnu/gettext/.
100% |**************************************************|  1321 KB    00:11    
&gt;&gt; Size matches for /usr/ports/distfiles/gettext-0.10.40.tar.gz
&gt;&gt; Checksum OK for gettext-0.10.40.tar.gz. (sha1)
===&gt;  gettext-0.10.40p3 depends on: iconv.2 (libiconv-*) - iconv.2 missing...
===&gt;  Verifying install for iconv.2 (libiconv-*) in converters/libiconv
===&gt;  Checking files for libiconv-1.9.2p1
&gt;&gt; libiconv-1.9.2.tar.gz doesn't seem to exist on this system.
ttempting to fetch /usr/ports/distfiles/libiconv-1.9.2.tar.gz from ftp://ftp.gnu.org/gnu/libiconv/.
100% |**************************************************|  3828 KB    00:30    
&gt;&gt; Size matches for /usr/ports/distfiles/libiconv-1.9.2.tar.gz
&gt;&gt; Checksum OK for libiconv-1.9.2.tar.gz. (sha1)
===&gt;  libiconv-1.9.2p1 depends on: metaauto-0.5 - found
===&gt;  libiconv-1.9.2p1 depends on: autoconf-2.57 - found
===&gt;  Extracting for libiconv-1.9.2p1
===&gt;  Patching for libiconv-1.9.2p1
  [...snip...]
===&gt;  Configuring for libiconv-1.9.2p1
  [...snip...]
===&gt;  Building for libiconv-1.9.2p1
  [...snip...]
===&gt;  Faking installation for libiconv-1.9.2p1
  [...snip...]
===&gt;  Building package for libiconv-1.9.2p1
Switching to /usr/ports/converters/libiconv/pkg/PFRAG.shared
Link to /usr/ports/packages/i386/ftp/libiconv-1.9.2p1.tgz
Link to /usr/ports/packages/i386/cdrom/libiconv-1.9.2p1.tgz
===&gt;  Installing libiconv-1.9.2p1 from /usr/ports/packages/i386/all/libiconv-1.9.2p1.tgz
libiconv-1.9.2p1: complete                                                   
===&gt; Returning to build of gettext-0.10.40p3
===&gt;  gettext-0.10.40p3 depends on: iconv.2 (libiconv-*) - found
===&gt;  Extracting for gettext-0.10.40p3
===&gt;  Patching for gettext-0.10.40p3
===&gt;  Configuring for gettext-0.10.40p3
d995 1
a995 1
===&gt;  Building for gettext-0.10.40p3
d997 1
a997 1
===&gt;  Faking installation for gettext-0.10.40p3
d999 10
a1008 18
===&gt;  Building package for gettext-0.10.40p3
Switching to /usr/ports/devel/gettext/pkg/PFRAG.shared
Link to /usr/ports/packages/i386/ftp/gettext-0.10.40p3.tgz
Link to /usr/ports/packages/i386/cdrom/gettext-0.10.40p3.tgz
===&gt;  gettext-0.10.40p3 depends on: libiconv-* - found
===&gt;  Installing gettext-0.10.40p3 from /usr/ports/packages/i386/all/gettext-0.10.40p3.tgz
gettext-0.10.40p3: complete                                                  
===&gt; Returning to build of fetchmail-6.2.5.2
===&gt;  fetchmail-6.2.5.2 depends on: gettext-&gt;=0.10.38 - found
===&gt;  fetchmail-6.2.5.2 depends on: iconv.2 (libiconv-*) - found
===&gt;  fetchmail-6.2.5.2 depends on: intl.1 (gettext-&gt;=0.10.38) - found
===&gt;  Extracting for fetchmail-6.2.5.2
===&gt;  Patching for fetchmail-6.2.5.2
===&gt;  Configuring for fetchmail-6.2.5.2
configure: loading site script /usr/ports/infrastructure/db/config.site
checking for a BSD-compatible install... /usr/bin/install -c -o root -g bin
checking whether build environment is sane... yes
checking for gawk... (cached) nawk
d1010 1
a1010 1
===&gt;  Building for fetchmail-6.2.5.2
d1012 1
a1012 1
===&gt;  Faking installation for fetchmail-6.2.5.2
d1014 6
a1019 6
===&gt;  Building package for fetchmail-6.2.5.2
Link to /usr/ports/packages/i386/ftp/fetchmail-6.2.5.2.tgz
Link to /usr/ports/packages/i386/cdrom/fetchmail-6.2.5.2.tgz
===&gt;  fetchmail-6.2.5.2 depends on: gettext-&gt;=0.10.38 - found
===&gt;  Installing fetchmail-6.2.5.2 from /usr/ports/packages/i386/all/fetchmail-6.2.5.2.tgz
fetchmail-6.2.5.2: complete
d1069 1
a1069 1
===&gt;  Cleaning for fetchmail-6.2.5.2
d1077 2
a1078 6
===&gt;  Cleaning for help2man-1.29
===&gt;  Cleaning for autoconf-2.57
===&gt;  Cleaning for metaauto-0.5
===&gt;  Cleaning for libiconv-1.9.2p1
===&gt;  Cleaning for gettext-0.10.40p3
===&gt;  Cleaning for fetchmail-6.2.5.2
d1086 2
a1087 2
===&gt;  Cleaning for fetchmail-6.2.5.2
===&gt;  Dist cleaning for fetchmail-6.2.5.2
d1105 2
a1106 2
===&gt; Deinstalling for fetchmail-6.2.5.2
fetchmail-6.2.5.2: complete
d1117 3
a1119 3
===&gt;  Cleaning for fetchmail-6.2.5.2
/usr/sbin/pkg_delete fetchmail-6.2.5.2
fetchmail-6.2.5.2: complete
d1121 2
a1122 2
===&gt;  Installing fetchmail-6.2.5.2 from /usr/ports/packages/i386/all/fetchmail-6.2.5.2.tgz
fetchmail-6.2.5.2: complete
d1130 2
a1131 2
===&gt;  Cleaning for fetchmail-6.2.5.2
rm -f /usr/ports/packages/i386/all/fetchmail-6.2.5.2.tgz
d1205 1
a1205 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_add(1)</a>
d1549 1
a1549 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;manpath=OpenBSD+3.8">pkg_info(1)</a>
d1598 1
a1598 1
<small>$OpenBSD: faq15.html,v 1.25 2006/01/07 19:20:47 steven Exp $</small>
@


1.25
log
@-stable ports can also be used on a -release base system.
some rewording to make this section more clear.

ok nick@@
@
text
@d14 1
a14 1
Copyright (c) 2005, Steven Mestdagh <steven@@openbsd.org>
d219 1
a219 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/OpenBSD/3.8/packages/`machine -a`/</b>
d1640 1
a1640 1
<small>$OpenBSD: faq15.html,v 1.24 2005/12/18 17:01:14 steven Exp $</small>
@


1.24
log
@mention that the ports system does not go through the same security audit as
the base system. partly taken from ports.html.
ok nick@@
@
text
@d1308 1
a1308 1
<li>Do not check out a -current ports tree and expect it to work on
d1312 2
a1313 10
<li>Because this is important to get right, we will rephrase it once more.
If your system is -release, use the -release version of the ports tree.
If your system is -stable, you need the -stable version of the ports tree.
And finally, if you follow -current, you need both a -current system
and a -current ports tree.
If you use X11 as part of your system, it must also follow the
corresponding branch!
</ul>

<p>
d1317 7
d1640 1
a1640 1
<small>$OpenBSD: faq15.html,v 1.23 2005/12/16 01:21:09 nick Exp $</small>
@


1.23
log
@
/x.x_packages/ is not a cvs-based file, so it is not replicated to the
mirrors, thus an absolute address is needed, just as for man pages.
@
text
@d126 12
d1641 1
a1641 1
<small>$OpenBSD: faq15.html,v 1.22 2005/12/11 22:50:40 steven Exp $</small>
@


1.22
log
@change my e-mail address. ok nick@@
@
text
@d250 3
a252 3
<li><a href="../3.8_packages/">Packages for OpenBSD 3.8</a>
<li><a href="../3.7_packages/">Packages for OpenBSD 3.7</a>
<li><a href="../3.6_packages/">Packages for OpenBSD 3.6</a>
d1629 1
a1629 1
<small>$OpenBSD: faq15.html,v 1.21 2005/11/10 01:01:43 nick Exp $</small>
@


1.21
log
@
CDROMs make REALLY GOOD places to fetch packages from.  Directly from
Steven Mestdagh.
@
text
@d14 1
a14 1
Copyright (c) 2005, Steven Mestdagh <steven.mestdagh@@esat.kuleuven.be>
d1629 1
a1629 1
<small>$OpenBSD: faq15.html,v 1.20 2005/11/03 15:24:10 jmc Exp $</small>
@


1.20
log
@insure -> ensure;
agreed with nick@@ and steve mestdagh;
@
text
@d194 12
a205 1
Example:
d211 2
d226 1
a226 1
in the above command line.
d1629 1
a1629 1
<small>$OpenBSD: faq15.html,v 1.19 2005/10/19 00:24:50 nick Exp $</small>
@


1.19
log
@
"more tweaks, slight rewording, and ask people to mention which ports
tree they are using."  From author, Steven Mestdagh, thanks!
@
text
@d118 1
a118 1
The package system also helps insure nothing is deleted by accident,
d1616 1
a1616 1
<small>$OpenBSD: faq15.html,v 1.18 2005/10/10 23:17:33 nick Exp $</small>
@


1.18
log
@
Steven thinks this is ready to hand to the translators, and I agree.
@
text
@d223 1
a223 1
A large collection of pre-compiled packages is available for most common
d255 2
a256 2
different options.
Currently, many packages have flavors that include database support,
d380 1
a380 1
Notice that I entered the complete filename by adding a <b>.tgz</b> suffix.
d482 1
a482 1
When given an installed package name (or a location to a package which is to
d498 1
a498 1
Let's say I had an older version of unzip installed before upgrading this
d509 1
a509 1
Now I can easily upgrade to the newer 3.8 package by just following the
d572 1
a572 1
packages with the specified name, in which case pkg_delete(1) cannot
d589 1
a589 1
If still you wish to have those configuration files removed automatically,
d647 1
a647 1
<h2>15.3 - Working with Ports</h2>
d685 2
a686 2
creation once the application has been built.
<li>a DESCR or description of the application
d722 3
a724 3
it is recognized by its prefix "w-", or a subdirectory of $WRKOBJDIR, if
the WRKOBJDIR variable has been set (see <a href="#PortsConfig">Additional
configuration of the ports system</a>).
d1325 1
a1325 1
Your <a href="../goals.html#funding">donations</a> can make a difference
d1389 1
a1389 1
Consider writing your own port.
d1470 1
a1470 1
<li>You need a FLAVOR of a port that is not built by the OpenBSD ports
d1472 2
a1473 2
<li>You wish to alter the directory layout (i.e. modifying PREFIX or
SYSCONFDIR)
d1476 3
a1478 2
However, for most people and most applications, using packages is a far
easier, and is the recommended way of adding applications to OpenBSD.
d1530 5
a1534 2
<li>The output of <tt>sysctl -n kern.version</tt>
<li>Your OpenBSD version, including any patches you may have applied.
d1616 1
a1616 1
<small>$OpenBSD: faq15.html,v 1.17 2005/10/10 11:04:16 nick Exp $</small>
@


1.17
log
@
Show an example using MESSAGE.  Directly from Steven Mestdagh, thanks!
@
text
@a31 4
<!-- Translators: this is still a work in progress, don't spend time 
translating this yet -->


d1612 1
a1612 1
<small>$OpenBSD: faq15.html,v 1.16 2005/10/08 12:04:56 nick Exp $</small>
@


1.16
log
@
Bunch of improvements from author, Steven Mestdagh:
being that package tools are in a state of flux, add &manpath=OpenBSD+3.8
to man page links. More warnings that ports is for advanced users who like
to hurt themselves rather than be productive.  Some wording improvements.
THANKS!
@
text
@a306 2
Messages like this will be given to you whether or not you use the
<b>-v</b> flag.
d311 27
a337 1
Let us now consider an example of a package which has dependencies:
d1616 1
a1616 1
<small>$OpenBSD: faq15.html,v 1.15 2005/10/07 02:34:52 nick Exp $</small>
@


1.15
log
@
Relocate #PortsConfig, minimize push for using sudo on command line.
Directly from Steven Mestdagh, based on suggestions from Nikolay Sturm.
@
text
@d143 2
a144 2
<ul> <!-- XXX add 3.8 tags here -->
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1">pkg_add(1)</a> 
d146 1
a146 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1">pkg_delete(1)</a>
d148 1
a148 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1">pkg_info(1)</a>
d150 1
a150 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_create&amp;sektion=1">pkg_create(1)</a> 
d168 1
a168 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1&amp;
format=html">pkg_add(1)</a>
d287 1
a287 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1">pkg_add(1)</a> 
d436 1
a436 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1">pkg_info(1)</a>
d471 1
a471 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1">pkg_add(1)</a>.
d532 1
a532 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1">pkg_delete(1)</a>
d634 10
d813 1
a813 1
This section introduces some additional security measures while building
d822 2
a823 2
It is safer to do all building as a regular user, and perform only those
steps that require superuser privileges as root.
d825 3
d1131 1
a1131 1
Use <tt>packages</tt> instead of <tt>package</tt> to also delete any
d1202 1
a1202 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&amp;sektion=1">pkg_add(1)</a>
d1206 1
a1206 1
$ <b>sudo env SUBPACKAGE="-server" make install</b>
d1524 1
d1526 1
a1526 3
$ su
# mkdir -p ~/portslogs
# make clean install 2>&amp;1 | /usr/ports/infrastructure/build/portslogger \
a1530 2
<!-- FIXME: actually this will be root's home dir!? 
-->
d1533 1
a1533 1
for example in /etc/mk.conf.
d1539 1
a1539 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=script&amp;sektion=1&amp;format=html">script(1)</a>
d1543 1
a1543 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_info&amp;sektion=1&amp;format=html">pkg_info(1)</a>
d1545 1
a1545 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gcc&amp;sektion=1&amp;format=html">gcc(1)</a>
d1592 1
a1592 1
<small>$OpenBSD: faq15.html,v 1.14 2005/09/29 01:12:09 nick Exp $</small>
@


1.14
log
@
More improvements by Steven Mestdagh, inspired/prompted/helped by sturm@@.
@
text
@d68 3
a70 2
  <li><a href="#PortsSearch"  >15.3.3 - Searching the ports tree</a>
  <li><a href="#PortsInstall" >15.3.4 - Straightforward installation:
d72 3
a74 5
  <li><a href="#PortsClean"   >15.3.5 - Cleaning up after a build</a>
  <li><a href="#PortsDelete"  >15.3.6 - Uninstalling a port's package</a>
  <li><a href="#PortsFlavors" >15.3.7 - Using flavors and subpackages</a>
  <li><a href="#PortsConfig"  >15.3.8 - Additional configuration of the
     ports system</a>
d670 2
a671 1
<li><tt>packages/</tt> - contains all packages built by the ports system.
d799 81
d881 1
a881 1
<h3>15.3.3 - Searching the ports tree</h3>
d909 1
a909 1
<h3>15.3.4 - Straightforward installation: a simple example</h3>
d922 1
a922 1
$ <b>sudo make install</b>
d1043 1
a1043 1
<h3>15.3.5 - Cleaning up after a build</h3>
d1049 1
a1049 1
$ <b>sudo make clean</b>
d1057 1
a1057 1
$ <b>sudo make clean=depends</b>
d1070 1
a1070 1
$ <b>sudo make clean=dist</b>
d1079 1
a1079 1
$ <b>sudo make clean=flavors</b>
d1084 1
a1084 1
<h3>15.3.6 - Uninstalling a port's package</h3>
d1089 1
a1089 1
$ <b>sudo make uninstall</b>
d1101 1
a1101 1
$ <b>sudo make reinstall</b>
d1114 1
a1114 1
$ <b>sudo make clean=package</b>
d1124 1
a1124 1
<h3>15.3.7 - Using flavors and subpackages</h3>
a1203 59
<a name="PortsConfig"></a>
<h3>15.3.8 - Additional configuration of the ports system</h3>

<font color="#FF0000">please check this...</font>

<p>
Because the OpenBSD project does not have the resources to fully review
the source code of all software in the ports tree, it is safer to do all
building as a regular user, and perform only those steps that require
superuser privileges as root.

<p>
To start with, you can set the ownerships of the ports tree to your
username and group name:

<blockquote><pre>
# <b>chown -R myuser:mygroup /usr/ports</b>
</pre></blockquote>

You can use a separate directory structure for port building by
setting the WRKOBJDIR variable.
For example, you could add the following line to <tt>/etc/mk.conf</tt>

<blockquote><pre>
WRKOBJDIR=/usr/obj/ports
</pre></blockquote>

You can set up
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sudo&amp;sektion=8">sudo(8)</a>
which has already been used extensively in the above examples, and add
a line to <tt>/etc/mk.conf</tt> containing

<blockquote><pre>
SUDO=/usr/bin/sudo
</pre></blockquote>

This will make sure the system will ask for a password and perform
tasks requiring superuser permissions as root.
Examples are the <tt>fake</tt> and <tt>install</tt> make targets.

<p>
Obviously, if you set up your system this way, you do not need to explicitly
use sudo(8) in your commands anymore, as in the port building examples above.

<p>
Additionally you can set

<blockquote><pre>
USE_SYSTRACE=Yes
</pre></blockquote>

in <tt>/etc/mk.conf</tt>.
This will make the ports system use
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=systrace&amp;sektion=1">systrace(1)</a>
to enforce the build procedure to stay inside allowed directories, and
prohibit writing in illegal places, thereby considerably reducing the risk
of a damaged system.


d1583 1
a1583 1
<small>$OpenBSD: faq15.html,v 1.13 2005/09/28 01:14:34 nick Exp $</small>
@


1.13
log
@
Bernd Ahlers noticed some inconsistancy, Steven Mestdagh fixed.  Let the
second-guessing begin! (you thought this was fun, didn't you, Steven? :)
@
text
@d94 2
d206 11
a224 6
<p>
As with the classic <tt>PATH</tt> variable, you can also specify
multiple locations, separated by colons.
If the first entry in <tt>PKG_PATH</tt> fails, the next one will be
tried, and so on, until the package is found.
If all entries fail, an error is produced.
d464 2
a465 2
When given an installed package name (or location to the uninstalled
package), pkg_info(1) will show more detailed information about that
d586 3
a588 5
Note that updated packages are only available for the most widely
used platforms.
If updated packages are not available for your specific platform, you
will need to use the -stable branch of the ports tree and compile from
source.
a619 2
<font color="#FF0000">Also "borked" is used ....  when exactly ?</font>

d621 1
a621 1
It is always a good idea to remove borked and partial packages from your
d976 1
a976 1
$ <b>sudo make clean-depends</b>
d989 1
a989 1
$ <b>sudo make distclean</b>
d1174 1
a1174 1
again in <tt>/etc/mk.conf</tt> (or in the port's Makefile ?).
d1187 3
d1441 13
d1561 1
a1561 1
<small>$OpenBSD: faq15.html,v 1.12 2005/09/27 10:51:14 nick Exp $</small>
@


1.12
log
@
More improvements, from (rd at thrush.com), via Steven Mestdagh.
@
text
@d138 1
a138 1
third-party software.
d401 1
a401 1
system libraries as well as third-party libraries.
d571 1
a571 1
When serious bugs or security flaws are discovered in third-party
d638 1
a638 1
one for each third-party application, for controlling
d1182 1
a1182 1
When serious bugs or security flaws are discovered in third-party
d1542 1
a1542 1
<small>$OpenBSD: faq15.html,v 1.11 2005/09/27 02:13:43 nick Exp $</small>
@


1.11
log
@
Another day, another pass at refinement.
Ports people: please check this over.  We can use your help fact-checking
and improving this document.
@
text
@d579 1
a579 1
Note that updated packages are only available for the the most widely
d689 4
a692 2
This is a subdirectory of the port's main directory, recognized by its
prefix "w-".
d1139 8
d1153 1
a1153 1
SUDO=sudo
d1542 1
a1542 1
<small>$OpenBSD: faq15.html,v 1.10 2005/09/25 18:39:43 nick Exp $</small>
@


1.10
log
@
add BSD license. From, and many thanks to, author Steven Mestdagh
(steven dot mestdagh at esat dot kuleuven dot be).
@
text
@d360 3
a362 2
<b>Note:</b> Not all architectures have the same packages.
Some ports do not work on certain architectures.
d681 1
a681 1
Now when a user issues
d759 1
a759 1
<td>-</td>
d1532 1
a1532 1
<small>$OpenBSD: faq15.html,v 1.9 2005/09/25 16:24:31 nick Exp $</small>
@


1.9
log
@
Corrections to my corrections (did anyone NOT see that coming? :),
from Steven Mestdagh.
@
text
@a9 1
<meta name= "copyright"     content= "This document copyright 2005 by OpenBSD.">
d13 17
d1531 1
a1531 1
<small>$OpenBSD: faq15.html,v 1.8 2005/09/25 03:27:41 nick Exp $</small>
@


1.8
log
@
"promote" headers: <h3> -> <h2>, <h4> -> <h3>, more consistant with
rest of FAQ.
@
text
@d87 1
a87 1
There is a lot of third party applications available which one might
d138 1
a138 1
In order to run properly, an application package X may require that
d250 1
a250 1
Some applicaitons simply don't work on all architectures.
d1515 1
a1515 1
<small>$OpenBSD: faq15.html,v 1.7 2005/09/25 03:19:46 nick Exp $</small>
@


1.7
log
@
Some wording (hopefully) improvements.
@
text
@d84 1
a84 1
<h3>15.1 - Introduction</h3>
d115 1
a115 1
<h3>15.2 - Package Management</h3>
d118 1
a118 1
<h4>15.2.1 - How does it work?</h4>
d171 1
a171 1
<h4>15.2.2 - Making things easy: PKG_PATH</h4>
d204 1
a204 1
<h4>15.2.3 - Finding packages</h4>
d263 1
a263 1
<h4>15.2.4 - Installing new packages</h4>
d411 1
a411 1
<h4>15.2.5 - Listing installed packages</h4>
d445 1
a445 1
<h4>15.2.6 - Updating installed packages</h4>
d504 1
a504 1
<h4>15.2.7 - Removing installed packages</h4>
d552 1
a552 1
<h4>15.2.8 - Security updates (-stable packages)</h4>
d582 1
a582 1
<h4>15.2.9 - Incomplete package installation or removal</h4>
d609 1
a609 1
<h3>15.3 - Working with Ports</h3>
d617 1
a617 1
<h4>15.3.1 - How does it work?</h4>
d698 1
a698 1
<h4>15.3.2 - Fetching the ports tree</h4>
d778 1
a778 1
<h4>15.3.3 - Searching the ports tree</h4>
d806 1
a806 1
<h4>15.3.4 - Straightforward installation: a simple example</h4>
d940 1
a940 1
<h4>15.3.5 - Cleaning up after a build</h4>
d981 1
a981 1
<h4>15.3.6 - Uninstalling a port's package</h4>
d1021 1
a1021 1
<h4>15.3.7 - Using flavors and subpackages</h4>
d1102 1
a1102 1
<h4>15.3.8 - Additional configuration of the ports system</h4>
d1153 1
a1153 1
<h4>15.3.9 - Security updates</h4>
d1171 1
a1171 1
<h3>15.4 - FAQ</h3>
d1174 2
a1175 2
<h4>15.4.1 - I'm getting all kinds of crazy errors.
I just can't seem to get this ports stuff working at all.</h4>
d1215 1
a1215 1
<h4>15.4.2 - The latest version of my Top-Favorite-Software is not available!</h4>
d1266 1
a1266 1
<h4>15.4.3 - Why is there no package for my Top-Favorite-Software?</h4>
d1292 1
a1292 1
<h4>15.4.4 - Why is there no port of my Top-Favorite-Software?</h4>
d1317 1
a1317 1
<h4>15.4.5 - Why is my Top-Favorite-Software not part of the base system?</h4>
d1337 1
a1337 1
<h4>15.4.6 - What should I use: packages or ports?</h4>
d1394 1
a1394 1
<h4>15.4.7 - How do I tweak these ports to have maximum performance?</h4>
d1409 1
a1409 1
<h3>15.5 - Reporting problems</h3>
d1477 1
a1477 1
<h3>15.6 - Helping us</h3>
d1515 1
a1515 1
<small>$OpenBSD: faq15.html,v 1.6 2005/09/09 02:19:46 nick Exp $</small>
@


1.6
log
@
New FAQ page: The OpenBSD packages and ports system
Another gem from Steven Mestdagh (steven.mestdagh at esat.kuleuven.ac dot be)
I haven't been able to spend the time on helping get this ready for
linking into the rest of the site it deserves, so let's commit and work
together in tree.  Please coordinate with Steven, and give him the
respect he deserves as author.
@
text
@d39 2
a40 2
  <li><a href="#PkgFind"      >15.2.3 - Finding software packages</a>
  <li><a href="#PkgInstall"   >15.2.4 - Installing new software packages</a>
d87 5
a91 4
There is a lot of third party software out there which one might want to
use on an OpenBSD system.
To make this software comply with OpenBSD's policy and goals, the third
party software is <i>ported</i> to OpenBSD.
d99 2
a100 1
The end result of the porting effort are binary packages.
d105 1
a105 1
The package system also makes sure that nothing is deleted by accident,
d110 1
a110 1
In minutes, a whole bunch of packages can be fetched and installed,
d126 1
a126 1
<ul>
d138 6
a143 6
In order to run properly, a software package X may require other software
Y and Z.
The software X is said to be dependent on this other software, which is
why Y and Z are called <i>dependencies</i> of X.
In turn, Y may require other software P and Q, and Z may require other
software R to function properly.
d165 2
a166 2
This ensures that the software cannot be accidentally broken by an
uncautious user just like that.
d171 1
a171 1
<h4>15.2.2 - Making things easy</h4>
d184 1
a184 1
$ <b>export PKG_PATH=ftp://your.ftp.mirror/OpenBSD/packages/`machine`/</b>
d188 7
a194 3
Notice the <tt>`machine`</tt> in the above command line.
This will be automatically substituted with your specific architecture,
e.g. sparc64, i386, etc.
d204 1
a204 1
<h4>15.2.3 - Finding software packages</h4>
d213 2
a214 2
The CD-ROMs carry only the most commonly used software packages,
for the most commonly used platforms.
d234 1
a234 1
Others are pieces of the same software which may be installed separately.
d250 3
a252 1
Some software simply doesn't work on all architectures.
d263 1
a263 1
<h4>15.2.4 - Installing new software packages</h4>
d285 1
a285 2
Notice however, that there are some valid messages given out mentioning
<i>/etc/screenrc</i>.
d292 1
a292 1
Let us now consider an example of a software package which has dependencies:
d332 1
a332 1
$ <b>sudo pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/3.8/packages/`machine`/screen-4.0.2.tgz</b>
d440 3
a442 2
When given a package name (or location to the package), pkg_info(1)
will show more detailed information about that specific package.
d510 1
a510 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_delete&amp;sektion=1">pkg_delete(1)</a>                                     
d540 2
a541 2
screen-4.0.2: complete                                                       
Clean shared items: complete                                                
d621 1
a621 1
one for each third-party software, for controlling
d637 2
a638 2
creation once the software has been built.
<li>a DESCR or description of the software
d653 2
a654 2
The other subdirectories all form different software categories, which
contain the subdirectories of the actual ports.
d657 1
a657 1
version of the software.
d799 2
a800 2
The search result gives a nice overview of each software that is found:
the port name, the path to the port, a one-line description, the
d809 1
a809 1
This software depends on gettext, which depends on libiconv.
d913 3
a915 3
If a previous version of the software you want to install, was already
installed on your system, you can use <tt><b>make update</b></tt>
instead of <tt><b>make install</b></tt>.
d920 1
a920 1
Large software will require a lot of system resources to build.
d1032 1
a1032 1
For instance, some software has a "no_x11" flavor which can be used on
d1062 1
a1062 1
same software, if they can be logically separated.
d1073 1
a1073 1
software, not the whole thing.
d1273 1
a1273 1
Therefore only the most used software packages are included on the CDs.
d1321 1
a1321 1
Generally, for a software to be included in the base system:
d1515 1
a1515 1
<small>$OpenBSD$</small>
@


1.5
log
@re-organization of the faq, based greatly on the recent changes to the main web page. This way will hopefully allow for greater expansion and readability. Some of the numbers have changed. sorry.
@
text
@d1 1
d4 1
a4 1
<title>OpenBSD FAQ: 15 - Working With Disks in OpenBSD</title>
d10 2
a11 1
<meta name= "copyright"     content= "This document copyright 1998,1999 by OpenBSD.">
d14 10
a23 1
<body bgcolor= "#ffffff" text= "#000000" link= "#23238E">
d26 2
a27 2
<a href= "index.html">[Back to Main Index]</a>
<a href= "faq14.html">[To Section 14.0 - IPsec]</a>
a28 1
</p>
d30 55
a84 4
<p>
<h1>15.0 - Working with Disks in OpenBSD</h1>
<hr>
</p>
d87 30
a116 82
<a name="15.1">
<h2>15.1 - Using the OpenBSD disklabel</h2>
</p>

<p>
Be sure to check the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=disklabel&sektion=8&format=html">disklabel(8)</a> man page! 
</p>

<p>
Disklabel is used to identify disks and/or partitions. The main idea behind
them is abstraction of disk hardware, since there exists several partitioning
tables. A <b>disklabel</b> is a universal partitioning table. These
labels tell the system everything about the disk, but most of it is irrelevant.
The important parts of the label are both the part that tells the disk
geometry and also the part that actually defines what partitions
exist on your disk.  This label resides on the beginning of the disk, this is to
help bootstrap code use them (since most ROM based booting reads the first sectors of the first disk). 
Disklabel can, on some systems, be used to install bootstrap code.
</p>

<p>
As an additional gain, using disklabel helps overcome architecture limitations
on disk partitioning. For example, on i386, you can only have 4 primary
partitions.  (Partitions that other operating systems, such as Windows NT
or DOS can see.)  With <b>disklabel</b>, you use one of these
'primary' partitions to store *all* of your OpenBSD partitions
(eg. 'swap', '/', '/usr' and '/var'). And you still have 3 more partitions
available for other OSs!
</p>

<p>
You can think of them as 'subpartitions' for installation purposes. But they
are a necessity for kernel disk access based on geometry. And remember to use
'b' for the swap label, and 'a' for root filesystem (default names in kernel).
(Note also that in other FAQ documents we usually refer to these OpenBSD
'subpartitions' as partitions.  Most architectures do not have two layers
of partitions like the i386 does.)
</p>

<p>
To just view the current disklabel for your disk just do:<br>

<ul><pre>
# <Strong>disklabel &lt;disk-device name&gt;</strong><br>
</pre></ul>
This will give output similar to this:<br>
</p>

<ul><pre>
# using MBR partition 3: type A6 off 64 (0x40) size 16777152 (0xffffc0)
# /dev/rwd0c:
type: ESDI
disk: 
label: TOSHIBA MK2720FC
flags:
bytes/sector: 512
sectors/track: 63
tracks/cylinder: 16
sectors/cylinder: 1008
cylinders: 2633
total sectors: 2654064
rpm: 3600
interleave: 1
trackskew: 0
cylinderskew: 0
headswitch: 0           # milliseconds
track-to-track seek: 0  # milliseconds
drivedata: 0 

16 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:  2071440    65583    4.2BSD     1024  8192    16   # (Cyl.   65*- 2120)
  b:    65520       63      swap                        # (Cyl.    0*- 65)
  c:  2654064        0    unused        0     0         # (Cyl.    0 - 2632)
  j:   512001  2137023    4.2BSD     1024  8192    16   # (Cyl. 2120*- 2627*)
</PRE></ul>

<p> 
In this example, there are 4 labels - A, B, C, J. A is one main partition, B is swap, and J is another
partition. C in all cases represents the full disk. This is helpful in showing what values in size, cyl, etc you have
to work with. But with this command you cannot change any values, you can just view. 
</p>
d119 2
a120 3
To be able to edit your label's interactively you would use the <b>-E</b> flag.<br>
Example:
</p>
d122 11
a132 170
<ul><pre>
# <strong>disklabel -E wd0</strong>
# using MBR partition 3: type A6 off 64 (0x40) size 16777152 (0xffffc0)

Treating sectors 64-16777216 as the OpenBSD portion of the disk.
You can use the 'b' command to change this.

Initial label editor (enter '?' for help at any prompt)
> <Strong>?</strong>
Available commands:
        p [unit]  - print label.
        M         - show entire OpenBSD man page for disklabel.
        e         - edit drive parameters.
        a [part]  - add new partition.
        b         - set OpenBSD disk boundaries.
        c [part]  - change partition size.
        d [part]  - delete partition.
        m [part]  - modify existing partition.
        r         - recalculate free space.
        u         - undo last change.
        s [path]  - save label to file.
        w         - write label to disk.
        q         - quit and save changes.
        x         - exit without saving changes.
        ? [cmnd]  - this message or command specific help.
Numeric parameters may use suffixes to indicate units:
        'b' for bytes, 'c' for cylinders, 'k' for kilobytes, 'm' for megabytes,
        'g' for gigabytes or no suffix for sectors (usually 512 bytes).
        Non-sector units will be rounded to the nearest cylinder.
Entering '?' at most prompts will give you (simple) context sensitive help.
> <strong>p</strong>
device: /dev/rwd0c
type: ESDI
disk: 
label: TOSHIBA MK2720FC
bytes/sector: 512
sectors/track: 63
tracks/cylinder: 16
sectors/cylinder: 1008
cylinders: 2633
total sectors: 2654064
free sectors: 14193711
rpm: 3600

16 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  a:  2071440    65583    4.2BSD     1024  8192    16   # (Cyl.   65*- 2120)
  b:    65520       63      swap                        # (Cyl.    0*- 65)
  c:  2654064        0    unused        0     0         # (Cyl.    0 - 2632)
  j:   512001  2137023    4.2BSD     1024  8192    16   # (Cyl. 2120*- 2627*)
> <strong>q</strong>
No changes.
</pre></ul>

<p> 
In this example we get into disklabel's interactive mode. From here we can issue the command "?" asking for help. This
gives us many commands we can use to add, delete, edit existing labels.  
</p> 

<p> 
There is a new feature on disklabel, to help installation. The '-f' flag writes a 'fstab' like file, if
given a mount point for a label. This is only used at installation. 
</p>

<p> 
To see an example install involving disklabel check <a href="log25.txt">log25.txt</a> </p>
<br>

<p>
<a name="15.2">
<h2>15.2 - Using fdisk</h2>
</p>
<p>
First be sure to check the fdisk main page. 
<a href= "http://www.openbsd.org/cgi-bin/man.cgi?query=fdisk&apropos=0&sektion=8&format=html">fdisk(8)</a>
</p>
<p>
Fdisk is a program to help with the maintenance of your partitions. This
program is used at install time to set up your OpenBSD partition (this
partition can contain <u>several</u> labels, each with filesystems/swap/etc.).
It can divide space on your drives and set one active. This program will
usually be used in Single User Mode ( boot -s ). Fdisk also sets the MBR on
your various hard disks.
</p>

<p>
For installation purposes, most times you'll only need <b>ONE</b> Openbsd
partition, and then using disklabel to put a swap and a filesystem on it.
</p>

<p>
To just view your partition table using fdisk just use:<br>
<ul>
<pre># <strong>fdisk fd0</strong><br>
</pre>
</ul>

Which will give an output similar to this:
</p>

<ul>
<pre>
         Disk: fd0       geometry: 80/2/18 [2880 sectors]
         Offset: 0       Signatures: 0xAA55,0x0
                  Starting        Ending
          #: id  cyl  hd sec -  cyl  hd sec [     start -       size]
----------------------------------------------------------------------
         *0: A6    0   0   1 -   79   1  18 [         0 -       2880] OpenBSD
          1: 00    0   0   0 -    0   0   0 [         0 -          0] unused
          2: A7    0   0   2 -   79   1  18 [         1 -       2879] NEXTSTEP
          3: 00    0   0   0 -    0   0   0 [         0 -          0] unused
</pre>
</ul>

<p>
In this example we are viewing the fdisk output of floppy drive. We can
see the OpenBSD partition (A6) and its size. The * tells us that the
OpenBSD partition is a bootable partition.
</p>

<p>
In the previous example we just viewed our information. What if we want to
edit our partition table? Well, to do so we must use the <b>-e</b> flag.
This will bring up a command line prompt to interact with fdisk.
</p>

<ul>
<PRE>
# <strong>fdisk -e wd0</strong>
Enter 'help' for information
fdisk: 1> <strong>help</strong>
        help            Command help list
        manual          Show entire OpenBSD man page for fdisk
        reinit          Re-initialize loaded MBR (to defaults)
        disk            Edit current drive stats
        edit            Edit given table entry
        flag            Flag given table entry as bootable
        update          Update machine code in loaded MBR
        select          Select extended partition table entry MBR
        print           Print loaded MBR partition table
        write           Write loaded MBR to disk
        exit            Exit edit of current MBR, without saving changes
        quit            Quit edit of current MBR, saving current changes
        abort           Abort program without saving current changes
fdisk: 1> 
</PRE>
</ul>

</p>
<p> 
It is perfectly safe in fdisk to go in and explore, just make sure to answer <Strong>N</strong> to saving
the changes and *DON'T* use the <strong>write</strong> command.
</p>

<p>Here is an overview of the commands you can use when you choose the <b>-e</b> flag.<br>
<ul>
<li><strong>help</strong>    Display a list of commands that fdisk understands in the interactive edit mode.</li>
<li><strong>reinit</strong>  Initialize the currently selected, in-memory copy of the boot block.</li>
<li><strong>disk</strong>    Display the current drive geometry that fdisk has probed. You are given a chance to edit it if you wish.</li>
<li><strong>edit</strong>    Edit a given table entry in the memory copy of the current boot block.  You may edit either in BIOS geometry mode, or in sector offsets and sizes.</li>
<li><strong>flag</strong>    Make the given partition table entry bootable. Only one entry can be marked bootable. If you 
wish to boot from an extended partition, you will need to mark the partition table entry for the extended partition as bootable.</li>
<li><strong>update</strong>  Update the machine code in the memory copy of the currently selected boot block.</li>
<li><strong>select</strong>  Select and load into memory the boot block pointed to by the extended partition table entry in the current boot block.</li>
<li><strong>print</strong>   Print the currently selected in-memory copy of the boot block and its MBR table to the terminal.</li>
<li><strong>write</strong>   Write the in-memory copy of the boot block to disk. You will be asked to confirm this operation.</li>
<li><strong>exit</strong>    Exit the current level of fdisk, either returning to the previously selected in-memory copy of a boot block, or exiting the program if there is none.</li>
<li><strong>quit</strong>    Exit the current level of fdisk, either returning to the previously selected
in-memory copy of a boot block, or exiting the program if there is none.  Unlike exit it does write the modified block out.</li>
<li><strong>abort</strong>   Quit program without saving current changes.</li>
a133 2
</p>
<br>
d136 16
a151 106
<a name="15.3">
<h2>15.3 - Adding extra disks in OpenBSD</h2>
</p>

<p>
Well once you get your disk installed <strong>PROPERLY</strong> you need to use
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=fdisk&apropos=0&sektion=8&format=html">fdisk(8)</a>
(<i>i386 only</i
>) and 
<a href= "http://www.openbsd.org/cgi-bin/man.cgi?query=disklabel&apropos=0&sektion=8&format=html">
disklabel(8)</a> to set
 up your
disk in OpenBSD.
<P>
For i386 folks, start with fdisk.  Other architectures can ignore this.
<UL><PRE>
# <Strong>fdisk -i sd2</strong>
</ul></pre>
This will initialize the disk's "real" partition table for exclusive use
by OpenBSD.
Next you need to create a disklabel for it.  This will seem confusing.
<UL><PRE>
# <strong>disklabel -e sd2</strong>

<i>(screen goes blank, your $EDITOR comes up)</i>
type: SCSI
<i>...bla...</i>
sectors/track: 63
total sectors: 6185088
<i>...bla...</i>
16 partitions:
#        size   offset    fstype   [fsize bsize   cpg]
  c:  6185088        0    unused        0     0         # (Cyl.    0 - 6135)
  d:  1405080       63    4.2BSD     1024  8192    16   # (Cyl.    0*- 1393*)
  e:  4779945  1405143    4.2BSD     1024  8192    16   # (Cyl. 1393*- 6135)
</PRE></ul>
First, ignore the 'c' partition, it's always there and is for
programs like disklabel to function! 
For normal operations, fsize should always be 1024, bsize should always be 8192,
and cpg should always be 16.  Fstype is 4.2BSD.  Total sectors is
the total size of the disk.
Say this is a 3 gigabyte disk.  Three gigabytes in disk manufacturer
terms is 3000 megabytes.  So divide 6185088/3000 (use bc(1)).  You get 2061.
So to make up partition sizes for a, d, e, f, g, ... just multiply X*2061
to get X megabytes of space on that partition.   The offset for your
first new partition should be the same as the "sectors/track" reported
earlier in disklabel's output.  For us it is 63.  The offset for each
partition afterwards should be a combination of the size of each partition
and the offset of each partition (Except the C partition, since it has no
play into this equation.)
<P>
Or, if you just want one partition on the disk, say you will use the
whole thing for web storage or a home directory or something,
just take the total size of the disk and subtract the sectors per track from it.
6185088-63 = 6185025.  Your partition is
<UL><PRE>
    d:  6185025       63    4.2BSD     1024  8192    16 
</PRE></UL>
<P>
<b>If all this seems needlessly complex, you can just use disklabel -E to get
the same partitioning mode that you got on your install disk!</b>
There, you can just use "96M" to specify "96 megabytes".  (Or, if you have a disk
big enough, 96G for 96 gigs!) Unfortunately,
the -E mode uses the BIOS disk geometry, not the real disk geometry,
and often times the two are not the same.  To get around this limitation,
type 'g d' for 'geometry disk'.  (Other options are 'g b' for 'geometry bios'
and 'g u' for geometry user, or simply, what the label said before
disklabel made any changes.)
<P>
That was a lot.  But you are not finished.  
Finally, you need to create the filesystem on that disk using <a href=
"http://www.openbsd.org/cgi-bin/man.cgi?query=newfs
&apropos=0&sektion=8&format=html">newfs(8)</a>.
</p>

<p>
<ul><pre>
bsd# <strong>newfs wd1a </strong></ul></pre>
</p>

<p>
Or whatever your disk was named as per OpenBSD's disk numbering scheme.  (Look at the
output from dmesg(1) to see what your disk was named by OpenBSD.)
</p>

<p>
Now figure out where you are going to mount this new partition you just created.
Say you want to put it on /u.  First, make the directory /u.  Then, mount it.
</p>

<UL><PRE>
mount /dev/wd1a /u
</PRE></UL>

<P>
Finally, add it to /etc/fstab
</p>
<UL><PRE>/dev/wd1a /u ffs rw 1 1</PRE></UL>

<p>
What if you need to migrate an existing directory like /usr/local? You should mount 
the new drive in /mnt and use cpio -pdum to copy /usr/local to the /mnt directory.
Edit the /etc/fstab file to show that the /usr/local partition is now /dev/wd1a
(your freshly formatted partition.) 
Example:
</p>
d154 11
a164 1
<strong>/dev/wd1a /usr/local ffs rw 1 1</strong>
a166 5
<p>
Reboot into single user mode..<strong>boot -s</strong> Move the existing
/usr/local to /usr/local-backup (or delete it if you feel lucky) and create an
empty directory /usr/local. Then reboot the system, and whala!! the files are there!
</p>
d168 2
a169 1
<br>
d172 6
a177 3
<a name="15.4">
<h2>15.4 - How to swap to a file</h2>
</p>
d180 4
a183 7
(Note: if you are looking to swap to a file because you are getting
&quot;virtual memory exhausted&quot; errors, you should try raising
the per-process limits first with 
csh's <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=unlimit&sektion=1&format=html">unlimit(1)</a>,
or
sh's <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ulimit&sektion=1&format=html">ulimit(1)</a>.)
</p>
d186 3
a188 7
With OpenBSD 2.5 came the introduction of <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=swapctl&sektion=8&format=h
tml">swapctl(8)</a>, 
which made dealing with swap devices much easier. Swapping to a file doesn't require a 
custom built kernel, although that can still be done, this faq will show you how to add 
swap space both ways.
</p>
d191 8
a198 4
To swap to a file permanently, first make a kernel with vnd0c as swap. If you 
have wd0a as root filesystem, wd0b is the previous swap, use this line in the 
kernel configuration file (refer to compiling a new kernel if in doubt):
</p>
d200 13
d214 4
a217 3
<pre>
config          bsd     root on wd0a swap on wd0b and vnd0c dumps on wd0b
</pre>
d221 393
a613 2
Second make the file for swap. If you want a 32MB swapfile named /newswap do:
</p>
d616 6
a621 1
<strong># dd if=/dev/zero of=/newswap bs=1k count=32768</strong>
d625 1
a625 2
Add a line to your /etc/fstab file to indicate where the new swap will be.
</p>
d628 4
a631 1
<strong>/dev/vnd0c none swap sw 0 0</strong>
d635 3
a637 4
Now boot with the new kernel. Then create the vnd0 device to use that file
as a device:
</p>

d639 5
a643 1
<strong># vnconfig -c -v vnd0 /newswap</strong>
d645 30
d677 2
a678 2
And add it now to swap:
</p>
d681 6
a686 1
<strong># swapon /dev/vnd0c</strong>
d689 228
a916 3
<p>
You can now see if it is working with:
</p>
d919 9
a927 1
<strong># pstat -s</strong>
d930 139
d1070 15
a1084 3
<a name="15.5">
<h2>15.5 - Soft-updates</h2>
</p>
d1087 10
a1096 4
<strong>
Softupdates are experimental and are NOT recomended for regular users.
</strong>
</p>
d1099 4
a1102 7
Over the last few years Kirk McKusick has been working on something called
"soft updates". This is based on an idea proposed by Greg Ganger and Yale
Patt that imposing a partial ordering on the buffer cache opertions would
permit the requirement for synchronous writing of directory entries to be
removed from the FFS code. Thus, a large performance increase of disk
writing performance.
</p>
d1105 19
a1123 2
To enable Softupdates your kernel must have option
</p>
d1126 2
a1127 2
<strong>option FFS_SOFTUPDATES</strong>
</p>
d1130 13
a1142 2
then you need to boot into single-user mode:
</p>
d1144 5
a1148 10
<ul>
<strong>
<pre>
        boot>boot -s
        [snip]
        bsd# tunefs -s enable &lt;raw device&gt;
        bsd# reboot -n
</pre>
</strong>
</ul>
d1151 5
a1155 5
GOOD LUCK. Please direct all problem reports with as MUCH information as
possible (kernel coredumps, tracebacks, etc) to <a href="mailto:csapuntz@@openbsd.org">Costa</a>. 
Do not waste his time with any other questions or incomplete problem
reports.
</p>
d1158 11
a1168 3
<a name="15.6">
<h2>15.6 -  When I boot after installation of OpenBSD/i386, it says "partition 3 id 0".</h2>
</p>
d1170 2
a1171 7
This means that your MBR (Master Boot Record) was not installed properly
or that your BIOS is not compatible with your current MBR. To solve this
first try to reinstall the OpenBSD boot blocks. To do so use
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=installboot&sektion=8&format=html">installboot(8)</a>.
For example, the most common usage is:
</p>
d1174 1
d1176 5
a1180 1
<li>Boot from the OpenBSD bootdisk</li>
d1182 17
a1198 3
<li># <strong>fsck /dev/rwd0a && mount /dev/wd0a /mnt </li></strong>
<li># <strong>cp /usr/mdec/boot /mnt/boot</li></strong>
<li># <strong>/usr/mdec/installboot -v /mnt/boot /usr/mdec/biosboot wd0</li></strong>
a1199 4
<li>Here substitute your disk devices for rwd0a & wd0a. This will install the boot blocks again.</li>
<li>Then Reboot.</li>
</ul>
</p>
d1202 14
a1215 6
If this doesn't work you still have a few more options. So, luck hasn't
run out yet. The first is to use a bootloader such as OS-BS. The OpenBSD
cd has the os-bs bootloader included in the tools directory. If you didn't
purchase a CD-ROM, you can download os-bs from any of the OpenBSD ftp
sites.
</p>
d1218 2
a1219 2
<kbd>pub/OpenBSD/2.5/tools/osbs135.exe</kbd>
</p>
d1222 1
a1222 4
and take some time to look through the web pages at
<a href= "http://www.prz.tu-berlin.de/~wolf/os-bs.html">
          http://www.prz.tu-berlin.de/~wolf/os-bs.html</a>
</p>
d1225 7
a1231 3
There are also other commercial bootloaders or lilo that you can use for
multi-booting.
</p>
d1234 14
a1247 2
Here is a simple outline of how to get lilo onto your system.
</p>
d1250 12
d1263 18
a1280 4
<li>Boot a DOS floppy and do a fdisk /MBR. Make sure you do that on the
drive you'll be booting from.</li>
<li>Boot from a linux disk and install LILO & chain it to your OpenBSD
boot block.</li>
d1282 85
a1366 1
</p>
d1369 42
a1410 2
For further instructions read <a href="INSTALL.linux">INSTALL.linux</a>
</p>
d1412 37
a1448 1
<br>
d1451 23
a1473 50
<a name="15.7">
<h2>15.7 - How do I get a dmesg from a boot floppy?</h2>
</p>
<p>
RAMDISK images (boot floppies) do not ship with the <i>dmesg</i> utility.
They do, however, have the <code>/kern</code> filesystem mounted. To copy 
the dmesg information to a file, do a:
</p>

<pre><ul>
# <strong>cat /kern/msgbuf >mydmesg</strong>
</pre></ul>
<P>
Boot disks also have 'more' to page through the output:
<pre><ul>
# <strong>more /kern/msgbuf</strong>
</ul></pre>

Also check with <a href= "faq4.html#4.7">section 4.7</a>

<p>
<a name="15.8">
<h2>15.8 - Installing Bootblocks - i386 specific</h2>
</p>

<p>
Older versions of MS-DOS can only deal with disk geometries of 1024 cylinders
or less.  Since virtually all modern disks have more than 1024
cylinders, most SCSI BIOS chips (which come on the SCSI controller card)
and IDE BIOS (which is part of the rest of the PC BIOS)
have an option (sometimes the default) to "translate" the real disk
geometry into something that fits within MS-DOS' ability.
However, not all BIOS chips "translate" the geometry in
the same way.  If you change your BIOS (either with a new motherboard
or a new SCSI controller), and the new one uses a
different "translated" geometry, you will be unable to load the
second stage boot loader (and thus unable to load the kernel).
(This is because the first stage boot loader contains a list of the blocks
that comprise /boot in terms of the original "translated" geometry.)
If you are using IDE disks, and you make changes to your BIOS settings,
you can (unknowingly) change its translation also (most IDE BIOS offer 3 different
translations.) To fix your boot block so that you can boot normally,
just put a boot floppy in your hard drive, and at the boot prompt,
type "b hd0a:/bsd" to force it to boot from the first hard disk (and not the
floppy).  Your machine should come up normally.  You now need
to update the first stage boot loader to see the new geometry
(and re-write the boot block accordingly).
<br>
Our example will assume your boot disk is sd0 (but for IDE it would be wd0, etc..):
</p>
d1475 20
a1494 26
<pre>
# <strong>cd /usr/mdec; ./installboot /boot biosboot sd0</strong>
</pre>
</ul>
<p>
If installboot complains that it is unable to read the BIOS geometry, at
the boot> prompt you may issue the &quot;machine diskinfo&quot; (or
&quot;ma di&quot; for short) command to print the information you need.
Feed the &quot;heads&quot; and &quot;secs&quot; values to installboot's -h
and -s flags, respectively, so that the modified installboot command is
the following:
</p>
<ul><pre>
#<strong> cd /usr/mdec; ./installboot -h &lt;heads&gt; -s &lt;secs&gt; /boot biosboot sd0</strong>
</pre></ul>

<p>
If a newer version of bootblocks are required, you will need to compile these yourself. To do so simply.
</p>

<ul><pre>
# <strong>cd /sys/arch/i386/stand/</strong>
# <strong>make && make install </strong>
# <strong>cd /usr/mdec; cp ./boot /boot</strong>
# <strong>./installboot /boot biosboot sd0</strong> (or whatever device your hard disk is)
</pre></ul>
d1498 2
a1499 2
<a href= "index.html">[Back to Main Index]</a>
<a href= "faq14.html">[To Section 14.0 - IPsec]</a>
a1500 1
</p>
d1507 2
a1508 2
<small>$OpenBSD: faq15.html,v 1.4 1999/09/22 22:52:54 ericj Exp $</small>
</p>
a1510 1

@


1.4
log
@installing boot blocks, still i386 specific
@
text
@d693 1
a693 1
<small>$OpenBSD: faq15.html,v 1.3 1999/09/15 13:03:29 ericj Exp $</small>
@


1.3
log
@fix spelling errors
@
text
@d625 1
a625 1
<h1>15.8 - I cannot boot OpenBSD. It just says: "reading boot.. Bad magic" (Installing Bootblocks - i386 specific)</h1>
d693 1
a693 1
<small>$OpenBSD: faq15.html,v 1.2 1999/09/15 05:27:35 ericj Exp $</small>
@


1.2
log
@fix broken link
@
text
@d105 2
a106 5
partition.
C in all cases represents the full disk. This is helpful in showing what values in size, cyl, etc you have
to work with. B
ut with this
command you cannot change any values, you can just view. 
d693 1
a693 1
<small>$OpenBSD: faq15.html,v 1.1 1999/09/15 05:16:23 ericj Exp $</small>
@


1.1
log
@move disk information away from faq4 to a new faq15. This will leave room for an expanded installation section. faq14 added also although no information is in there to fill it. Soon it will be the IPsec FAQ
@
text
@d624 1
a624 1
Also check with <a href= "#4.7">section 4.7</a>
d696 1
a696 1
<small>$OpenBSD$</small>
@

