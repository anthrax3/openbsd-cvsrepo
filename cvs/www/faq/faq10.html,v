head	1.266;
access;
symbols;
locks; strict;
comment	@# @;


1.266
date	2017.04.11.03.28.01;	author tj;	state Exp;
branches;
next	1.265;
commitid	86nLlctMwACj6lFT;

1.265
date	2017.04.01.19.32.27;	author tj;	state Exp;
branches;
next	1.264;
commitid	O1stS7HsNgcHfhgC;

1.264
date	2017.03.30.15.03.48;	author tb;	state Exp;
branches;
next	1.263;
commitid	lIhSRz7nNOKtsuWx;

1.263
date	2017.03.29.01.25.28;	author tj;	state Exp;
branches;
next	1.262;
commitid	PivCNbWdfdjCFoNt;

1.262
date	2017.03.29.01.18.15;	author tj;	state Exp;
branches;
next	1.261;
commitid	EVP3qTB0QFTTSohR;

1.261
date	2017.03.29.00.27.55;	author tj;	state Exp;
branches;
next	1.260;
commitid	8Z8uR9FdKVO1w4jq;

1.260
date	2017.03.26.00.10.12;	author tj;	state Exp;
branches;
next	1.259;
commitid	UJMxf2VKUkmGcUqO;

1.259
date	2017.03.25.18.03.37;	author tb;	state Exp;
branches;
next	1.258;
commitid	rL4ajudaGg7ru4hH;

1.258
date	2017.03.14.03.06.34;	author tb;	state Exp;
branches;
next	1.257;
commitid	cUTaQaNb7T1E16W8;

1.257
date	2017.03.11.02.56.18;	author tj;	state Exp;
branches;
next	1.256;
commitid	QEoR8JdGX7ENFGFo;

1.256
date	2017.02.28.01.30.32;	author tj;	state Exp;
branches;
next	1.255;
commitid	qGVM3FG3f75NQsYd;

1.255
date	2017.02.09.17.22.19;	author tb;	state Exp;
branches;
next	1.254;
commitid	T7p2qUf6sgevbhcO;

1.254
date	2016.12.06.23.57.31;	author tj;	state Exp;
branches;
next	1.253;
commitid	7JNj6MSA3yPKE0f4;

1.253
date	2016.10.02.21.19.04;	author tb;	state Exp;
branches;
next	1.252;
commitid	6vc9AUhFjY41pIyE;

1.252
date	2016.10.02.21.16.26;	author tb;	state Exp;
branches;
next	1.251;
commitid	FynZsUMSmrBhkUlA;

1.251
date	2016.10.02.20.45.45;	author tj;	state Exp;
branches;
next	1.250;
commitid	O1BBE8N4pxCeDyOh;

1.250
date	2016.10.02.16.51.16;	author tj;	state Exp;
branches;
next	1.249;
commitid	USJVJeZxzoWJgL2o;

1.249
date	2016.09.01.12.05.14;	author tj;	state Exp;
branches;
next	1.248;
commitid	246a4S45DY24D3JM;

1.248
date	2016.08.15.10.24.24;	author tb;	state Exp;
branches;
next	1.247;
commitid	ZikqPZzuv8wG6Mjw;

1.247
date	2016.08.15.02.22.13;	author tb;	state Exp;
branches;
next	1.246;
commitid	3DeixV5YkPOb78RN;

1.246
date	2016.08.14.18.32.58;	author tb;	state Exp;
branches;
next	1.245;
commitid	X7KUgPqY594wBBit;

1.245
date	2016.08.14.17.58.57;	author tb;	state Exp;
branches;
next	1.244;
commitid	Fr0P4VGQPRI76w8F;

1.244
date	2016.08.14.17.15.26;	author tb;	state Exp;
branches;
next	1.243;
commitid	CRlrS2KiZ22YxjfA;

1.243
date	2016.08.14.14.47.08;	author tb;	state Exp;
branches;
next	1.242;
commitid	ewpxG42pXYJOcILu;

1.242
date	2016.08.13.16.45.28;	author tb;	state Exp;
branches;
next	1.241;
commitid	pc5l3WUE2oGL1ExK;

1.241
date	2016.08.13.15.25.57;	author tb;	state Exp;
branches;
next	1.240;
commitid	5Zsf6xtXKOeT2H7P;

1.240
date	2016.08.13.00.56.06;	author tb;	state Exp;
branches;
next	1.239;
commitid	3qKfI0fNRpG9Jv9Z;

1.239
date	2016.08.12.00.24.29;	author schwarze;	state Exp;
branches;
next	1.238;
commitid	Ninr0pyzhl36KH8k;

1.238
date	2016.08.06.22.19.48;	author tj;	state Exp;
branches;
next	1.237;
commitid	EKwPrPXAcsV1DxcM;

1.237
date	2016.06.17.16.02.54;	author tb;	state Exp;
branches;
next	1.236;
commitid	xBoOxSNKsPI16UDX;

1.236
date	2016.06.17.00.25.33;	author tj;	state Exp;
branches;
next	1.235;
commitid	C6OT4QARoaY1nAFC;

1.235
date	2016.06.16.14.43.13;	author tj;	state Exp;
branches;
next	1.234;
commitid	pMV5DWzWKqxeLhRD;

1.234
date	2016.06.14.16.26.11;	author tj;	state Exp;
branches;
next	1.233;
commitid	PCHwYJ8G2TIOYpMG;

1.233
date	2016.06.14.00.55.44;	author tb;	state Exp;
branches;
next	1.232;
commitid	gVEGO0c1l6WHRkuV;

1.232
date	2016.06.13.23.08.28;	author tj;	state Exp;
branches;
next	1.231;
commitid	JwZimzUYI074ZCNp;

1.231
date	2016.05.01.16.59.24;	author tj;	state Exp;
branches;
next	1.230;
commitid	wQHTVXn4QW0tBAwG;

1.230
date	2016.04.27.09.04.25;	author tb;	state Exp;
branches;
next	1.229;
commitid	OVAs7gr9fKxhEWtG;

1.229
date	2016.04.21.00.45.48;	author tj;	state Exp;
branches;
next	1.228;
commitid	HtZ8nUjqaAunZXL2;

1.228
date	2016.04.17.15.18.42;	author tb;	state Exp;
branches;
next	1.227;
commitid	fn92Nlp9YFz4JyVp;

1.227
date	2016.04.16.00.30.41;	author tj;	state Exp;
branches;
next	1.226;
commitid	rTxoenHHaeutOff1;

1.226
date	2016.04.15.22.19.21;	author tj;	state Exp;
branches;
next	1.225;
commitid	SbVa2HBPaB5JhGVM;

1.225
date	2016.04.15.21.53.42;	author schwarze;	state Exp;
branches;
next	1.224;
commitid	YZv8S2kLQbFQZcyu;

1.224
date	2016.04.15.20.39.49;	author tb;	state Exp;
branches;
next	1.223;
commitid	jwteSMEb4rFzI8UA;

1.223
date	2016.04.15.16.42.34;	author tj;	state Exp;
branches;
next	1.222;
commitid	4iGhbtsBAhiGE70P;

1.222
date	2016.04.15.08.53.21;	author lum;	state Exp;
branches;
next	1.221;
commitid	tP1gmcEanYeqKp2g;

1.221
date	2016.03.29.01.27.39;	author tb;	state Exp;
branches;
next	1.220;
commitid	4Y8oU6GBrSY1UOfW;

1.220
date	2016.03.27.19.52.09;	author sthen;	state Exp;
branches;
next	1.219;
commitid	hi2ObFv9LGB98JY5;

1.219
date	2016.03.22.10.54.47;	author sthen;	state Exp;
branches;
next	1.218;
commitid	cyODCFvIgxpUoVc0;

1.218
date	2016.03.21.08.24.24;	author tb;	state Exp;
branches;
next	1.217;
commitid	FszPYViUktw26pO0;

1.217
date	2016.03.21.05.46.21;	author beck;	state Exp;
branches;
next	1.216;
commitid	zEx6zFkNSFFExu0v;

1.216
date	2016.03.20.22.24.56;	author tj;	state Exp;
branches;
next	1.215;
commitid	oo3sAEjx5cFwFwEI;

1.215
date	2016.02.25.23.34.33;	author tb;	state Exp;
branches;
next	1.214;
commitid	91CzDpHpZXjWvt9A;

1.214
date	2016.02.24.00.41.43;	author tj;	state Exp;
branches;
next	1.213;
commitid	9GBr3GJXJNJ0JTEM;

1.213
date	2016.02.23.23.37.56;	author tj;	state Exp;
branches;
next	1.212;
commitid	WUP5eExVUn4YhcAc;

1.212
date	2016.02.22.23.57.18;	author tj;	state Exp;
branches;
next	1.211;
commitid	fWjRiXuBy6bLVebn;

1.211
date	2016.02.22.22.34.29;	author tj;	state Exp;
branches;
next	1.210;
commitid	l5XRWRbEnlQdieYH;

1.210
date	2016.02.06.02.22.33;	author tb;	state Exp;
branches;
next	1.209;
commitid	dvdFJ4rGFhn0W18c;

1.209
date	2016.01.26.20.58.30;	author tj;	state Exp;
branches;
next	1.208;
commitid	elNG1gXRQ2O8fy29;

1.208
date	2016.01.18.20.32.56;	author tj;	state Exp;
branches;
next	1.207;
commitid	O05f68ZvROQPbAgG;

1.207
date	2016.01.18.20.20.19;	author matthieu;	state Exp;
branches;
next	1.206;
commitid	OwGdpOsXE8Bv70GS;

1.206
date	2016.01.17.03.32.03;	author tj;	state Exp;
branches;
next	1.205;
commitid	Oao2wOu0ICsvKE2G;

1.205
date	2016.01.17.00.32.34;	author tb;	state Exp;
branches;
next	1.204;
commitid	9fOnbJ3BYpJg4zzs;

1.204
date	2016.01.16.22.57.38;	author tj;	state Exp;
branches;
next	1.203;
commitid	3rlZqYIQ5pDBvjjC;

1.203
date	2016.01.15.03.20.58;	author mmcc;	state Exp;
branches;
next	1.202;
commitid	CPAob2G2w7bdnepe;

1.202
date	2016.01.13.21.55.55;	author tb;	state Exp;
branches;
next	1.201;
commitid	QtnhUiqtRLjFFnqZ;

1.201
date	2016.01.11.06.30.13;	author tb;	state Exp;
branches;
next	1.200;
commitid	kpxTb5fPDcXr5p29;

1.200
date	2015.11.24.00.20.25;	author sthen;	state Exp;
branches;
next	1.199;
commitid	sEVz14V7o3QEsl9w;

1.199
date	2015.11.23.03.15.50;	author deraadt;	state Exp;
branches;
next	1.198;
commitid	Wtea3jEE87XPmavu;

1.198
date	2015.10.19.17.35.44;	author schwarze;	state Exp;
branches;
next	1.197;
commitid	t5VNUSYmYyd23MSF;

1.197
date	2015.10.16.02.45.26;	author nick;	state Exp;
branches;
next	1.196;
commitid	qxn3rYsGaQyz1lwm;

1.196
date	2015.09.21.01.17.28;	author nick;	state Exp;
branches;
next	1.195;
commitid	aofS8q72mrS2P9jM;

1.195
date	2015.09.17.05.24.22;	author schwarze;	state Exp;
branches;
next	1.194;
commitid	ewyeNQChMyLbj6PA;

1.194
date	2015.07.02.05.49.04;	author bentley;	state Exp;
branches;
next	1.193;
commitid	AP3UllesavMDEUhQ;

1.193
date	2015.05.11.11.18.29;	author sthen;	state Exp;
branches;
next	1.192;
commitid	wRrXxcro6dFYiwF8;

1.192
date	2015.01.13.01.07.40;	author nick;	state Exp;
branches;
next	1.191;
commitid	8h9ZHxb6NxSSi6AX;

1.191
date	2015.01.02.21.37.33;	author lum;	state Exp;
branches;
next	1.190;
commitid	0igcD24v59IGRE7X;

1.190
date	2014.12.01.09.49.46;	author bentley;	state Exp;
branches;
next	1.189;
commitid	VffT7s4nM0NK88NG;

1.189
date	2014.11.27.18.04.24;	author nick;	state Exp;
branches;
next	1.188;
commitid	5wOqGpYztPa5g20e;

1.188
date	2014.11.01.13.42.51;	author nick;	state Exp;
branches;
next	1.187;
commitid	ZgANDuwHdulMn8Ng;

1.187
date	2014.08.07.01.51.34;	author nick;	state Exp;
branches;
next	1.186;
commitid	RZYBSFOBtVHeVEME;

1.186
date	2014.08.02.15.58.32;	author nick;	state Exp;
branches;
next	1.185;
commitid	RXuASeyojFFdrIMY;

1.185
date	2014.05.02.20.11.16;	author nick;	state Exp;
branches;
next	1.184;

1.184
date	2014.05.01.15.01.13;	author nick;	state Exp;
branches;
next	1.183;

1.183
date	2014.04.02.20.31.13;	author florian;	state Exp;
branches;
next	1.182;

1.182
date	2014.03.30.19.13.39;	author nick;	state Exp;
branches;
next	1.181;

1.181
date	2014.02.24.16.18.25;	author nick;	state Exp;
branches;
next	1.180;

1.180
date	2013.11.01.14.05.56;	author nick;	state Exp;
branches;
next	1.179;

1.179
date	2013.06.01.20.40.30;	author nick;	state Exp;
branches;
next	1.178;

1.178
date	2013.05.07.14.15.36;	author sthen;	state Exp;
branches;
next	1.177;

1.177
date	2013.05.07.13.16.47;	author sthen;	state Exp;
branches;
next	1.176;

1.176
date	2013.05.07.12.35.49;	author sthen;	state Exp;
branches;
next	1.175;

1.175
date	2013.05.01.13.16.32;	author nick;	state Exp;
branches;
next	1.174;

1.174
date	2012.11.01.15.05.30;	author nick;	state Exp;
branches;
next	1.173;

1.173
date	2012.08.13.02.17.11;	author nick;	state Exp;
branches;
next	1.172;

1.172
date	2012.07.21.12.16.05;	author sthen;	state Exp;
branches;
next	1.171;

1.171
date	2012.05.27.07.01.50;	author jmc;	state Exp;
branches;
next	1.170;

1.170
date	2012.05.25.20.27.35;	author jmc;	state Exp;
branches;
next	1.169;

1.169
date	2012.05.01.14.35.15;	author nick;	state Exp;
branches;
next	1.168;

1.168
date	2012.03.21.10.51.32;	author ajacoutot;	state Exp;
branches;
next	1.167;

1.167
date	2011.12.20.07.52.17;	author ajacoutot;	state Exp;
branches;
next	1.166;

1.166
date	2011.11.13.18.55.36;	author ajacoutot;	state Exp;
branches;
next	1.165;

1.165
date	2011.11.01.10.52.27;	author nick;	state Exp;
branches;
next	1.164;

1.164
date	2011.09.22.10.49.08;	author stsp;	state Exp;
branches;
next	1.163;

1.163
date	2011.09.22.10.42.02;	author stsp;	state Exp;
branches;
next	1.162;

1.162
date	2011.09.22.10.10.14;	author stsp;	state Exp;
branches;
next	1.161;

1.161
date	2011.05.27.01.36.59;	author lum;	state Exp;
branches;
next	1.160;

1.160
date	2011.05.10.02.38.27;	author lum;	state Exp;
branches;
next	1.159;

1.159
date	2011.05.05.13.52.27;	author lum;	state Exp;
branches;
next	1.158;

1.158
date	2011.05.05.05.16.22;	author lum;	state Exp;
branches;
next	1.157;

1.157
date	2011.05.05.04.47.10;	author lum;	state Exp;
branches;
next	1.156;

1.156
date	2011.05.03.18.57.28;	author lum;	state Exp;
branches;
next	1.155;

1.155
date	2011.05.03.13.54.53;	author lum;	state Exp;
branches;
next	1.154;

1.154
date	2011.05.01.13.08.58;	author nick;	state Exp;
branches;
next	1.153;

1.153
date	2011.04.05.13.46.34;	author lum;	state Exp;
branches;
next	1.152;

1.152
date	2010.11.21.15.52.43;	author nick;	state Exp;
branches;
next	1.151;

1.151
date	2010.11.01.09.48.45;	author nick;	state Exp;
branches;
next	1.150;

1.150
date	2010.10.29.09.57.15;	author ajacoutot;	state Exp;
branches;
next	1.149;

1.149
date	2010.05.19.12.41.02;	author nick;	state Exp;
branches;
next	1.148;

1.148
date	2009.11.06.22.55.28;	author schwarze;	state Exp;
branches;
next	1.147;

1.147
date	2009.11.04.00.31.54;	author schwarze;	state Exp;
branches;
next	1.146;

1.146
date	2009.10.16.19.07.37;	author nick;	state Exp;
branches;
next	1.145;

1.145
date	2009.10.01.02.55.50;	author nick;	state Exp;
branches;
next	1.144;

1.144
date	2009.05.23.11.34.24;	author schwarze;	state Exp;
branches;
next	1.143;

1.143
date	2009.04.30.02.22.12;	author nick;	state Exp;
branches;
next	1.142;

1.142
date	2009.04.11.14.15.31;	author schwarze;	state Exp;
branches;
next	1.141;

1.141
date	2009.04.11.10.57.25;	author schwarze;	state Exp;
branches;
next	1.140;

1.140
date	2008.11.12.02.59.41;	author nick;	state Exp;
branches;
next	1.139;

1.139
date	2008.07.19.21.51.26;	author okan;	state Exp;
branches;
next	1.138;

1.138
date	2008.06.13.06.57.36;	author bernd;	state Exp;
branches;
next	1.137;

1.137
date	2007.11.01.02.11.01;	author nick;	state Exp;
branches;
next	1.136;

1.136
date	2007.02.19.17.42.24;	author steven;	state Exp;
branches;
next	1.135;

1.135
date	2007.01.28.18.17.23;	author nick;	state Exp;
branches;
next	1.134;

1.134
date	2006.11.06.03.13.10;	author nick;	state Exp;
branches;
next	1.133;

1.133
date	2006.11.01.03.07.32;	author nick;	state Exp;
branches;
next	1.132;

1.132
date	2006.09.12.02.06.29;	author nick;	state Exp;
branches;
next	1.131;

1.131
date	2006.09.11.06.04.43;	author steven;	state Exp;
branches;
next	1.130;

1.130
date	2006.09.10.18.47.47;	author nick;	state Exp;
branches;
next	1.129;

1.129
date	2006.08.30.02.34.47;	author nick;	state Exp;
branches;
next	1.128;

1.128
date	2006.08.21.12.48.07;	author steven;	state Exp;
branches;
next	1.127;

1.127
date	2006.08.20.17.02.12;	author steven;	state Exp;
branches;
next	1.126;

1.126
date	2006.08.15.01.20.04;	author nick;	state Exp;
branches;
next	1.125;

1.125
date	2006.05.21.15.18.45;	author nick;	state Exp;
branches;
next	1.124;

1.124
date	2006.05.21.14.06.45;	author steven;	state Exp;
branches;
next	1.123;

1.123
date	2006.04.16.14.20.51;	author nick;	state Exp;
branches;
next	1.122;

1.122
date	2006.04.06.11.02.18;	author nick;	state Exp;
branches;
next	1.121;

1.121
date	2006.03.09.03.17.45;	author nick;	state Exp;
branches;
next	1.120;

1.120
date	2005.11.24.05.41.56;	author steven;	state Exp;
branches;
next	1.119;

1.119
date	2005.11.02.02.07.38;	author nick;	state Exp;
branches;
next	1.118;

1.118
date	2005.11.02.00.31.20;	author saad;	state Exp;
branches;
next	1.117;

1.117
date	2005.11.01.11.39.56;	author nick;	state Exp;
branches;
next	1.116;

1.116
date	2005.08.18.14.06.19;	author nick;	state Exp;
branches;
next	1.115;

1.115
date	2005.06.12.15.13.25;	author jmc;	state Exp;
branches;
next	1.114;

1.114
date	2005.05.24.01.15.46;	author nick;	state Exp;
branches;
next	1.113;

1.113
date	2005.05.19.16.54.27;	author nick;	state Exp;
branches;
next	1.112;

1.112
date	2005.02.12.19.08.41;	author nick;	state Exp;
branches;
next	1.111;

1.111
date	2005.01.24.15.26.07;	author saad;	state Exp;
branches;
next	1.110;

1.110
date	2005.01.17.20.36.58;	author nick;	state Exp;
branches;
next	1.109;

1.109
date	2004.12.03.14.54.11;	author nick;	state Exp;
branches;
next	1.108;

1.108
date	2004.10.29.17.26.01;	author nick;	state Exp;
branches;
next	1.107;

1.107
date	2004.10.20.23.04.26;	author nick;	state Exp;
branches;
next	1.106;

1.106
date	2004.10.20.22.01.49;	author nick;	state Exp;
branches;
next	1.105;

1.105
date	2004.09.08.03.57.47;	author nick;	state Exp;
branches;
next	1.104;

1.104
date	2004.08.06.20.05.56;	author nick;	state Exp;
branches;
next	1.103;

1.103
date	2004.05.19.20.27.48;	author saad;	state Exp;
branches;
next	1.102;

1.102
date	2004.05.19.03.21.49;	author nick;	state Exp;
branches;
next	1.101;

1.101
date	2004.04.30.18.06.20;	author nick;	state Exp;
branches;
next	1.100;

1.100
date	2004.03.25.02.41.51;	author jcs;	state Exp;
branches;
next	1.99;

1.99
date	2004.03.10.00.23.11;	author saad;	state Exp;
branches;
next	1.98;

1.98
date	2004.03.06.07.14.43;	author saad;	state Exp;
branches;
next	1.97;

1.97
date	2004.02.29.20.45.59;	author saad;	state Exp;
branches;
next	1.96;

1.96
date	2004.01.01.04.13.34;	author nick;	state Exp;
branches;
next	1.95;

1.95
date	2003.10.30.22.43.42;	author nick;	state Exp;
branches;
next	1.94;

1.94
date	2003.10.26.16.58.20;	author nick;	state Exp;
branches;
next	1.93;

1.93
date	2003.10.26.02.05.59;	author nick;	state Exp;
branches;
next	1.92;

1.92
date	2003.10.19.23.14.22;	author nick;	state Exp;
branches;
next	1.91;

1.91
date	2003.06.17.15.59.07;	author nick;	state Exp;
branches;
next	1.90;

1.90
date	2003.06.17.15.36.55;	author nick;	state Exp;
branches;
next	1.89;

1.89
date	2003.05.05.03.49.58;	author david;	state Exp;
branches;
next	1.88;

1.88
date	2003.05.01.01.47.41;	author nick;	state Exp;
branches;
next	1.87;

1.87
date	2003.04.10.19.01.31;	author nick;	state Exp;
branches;
next	1.86;

1.86
date	2003.04.04.17.49.08;	author nick;	state Exp;
branches;
next	1.85;

1.85
date	2003.03.18.03.41.04;	author nick;	state Exp;
branches;
next	1.84;

1.84
date	2003.03.11.23.03.07;	author nick;	state Exp;
branches;
next	1.83;

1.83
date	2003.03.11.02.47.10;	author nick;	state Exp;
branches;
next	1.82;

1.82
date	2003.02.28.00.34.28;	author nick;	state Exp;
branches;
next	1.81;

1.81
date	2003.02.24.17.39.20;	author nick;	state Exp;
branches;
next	1.80;

1.80
date	2003.02.20.03.09.55;	author nick;	state Exp;
branches;
next	1.79;

1.79
date	2003.01.11.20.42.21;	author nick;	state Exp;
branches;
next	1.78;

1.78
date	2003.01.01.13.01.59;	author nick;	state Exp;
branches;
next	1.77;

1.77
date	2002.12.04.19.17.25;	author nick;	state Exp;
branches;
next	1.76;

1.76
date	2002.11.13.18.05.04;	author nick;	state Exp;
branches;
next	1.75;

1.75
date	2002.11.13.00.05.54;	author nick;	state Exp;
branches;
next	1.74;

1.74
date	2002.11.01.15.27.13;	author nick;	state Exp;
branches;
next	1.73;

1.73
date	2002.10.13.22.32.42;	author nick;	state Exp;
branches;
next	1.72;

1.72
date	2002.07.12.02.51.35;	author nick;	state Exp;
branches;
next	1.71;

1.71
date	2002.07.04.01.28.45;	author nick;	state Exp;
branches;
next	1.70;

1.70
date	2002.07.02.01.17.58;	author nick;	state Exp;
branches;
next	1.69;

1.69
date	2002.07.02.00.30.16;	author nick;	state Exp;
branches;
next	1.68;

1.68
date	2002.06.15.09.25.31;	author jufi;	state Exp;
branches;
next	1.67;

1.67
date	2002.05.20.01.04.48;	author nick;	state Exp;
branches;
next	1.66;

1.66
date	2002.05.11.01.00.40;	author nick;	state Exp;
branches;
next	1.65;

1.65
date	2002.04.30.13.02.47;	author nick;	state Exp;
branches;
next	1.64;

1.64
date	2002.02.05.23.24.13;	author nick;	state Exp;
branches;
next	1.63;

1.63
date	2002.01.27.22.44.34;	author nick;	state Exp;
branches;
next	1.62;

1.62
date	2002.01.21.20.28.25;	author nick;	state Exp;
branches;
next	1.61;

1.61
date	2002.01.13.00.00.32;	author ericj;	state Exp;
branches;
next	1.60;

1.60
date	2002.01.12.01.39.29;	author ericj;	state Exp;
branches;
next	1.59;

1.59
date	2001.12.30.11.37.25;	author jufi;	state Exp;
branches;
next	1.58;

1.58
date	2001.11.02.10.54.56;	author mpech;	state Exp;
branches;
next	1.57;

1.57
date	2001.10.30.17.06.16;	author mpech;	state Exp;
branches;
next	1.56;

1.56
date	2001.08.25.09.31.33;	author jufi;	state Exp;
branches;
next	1.55;

1.55
date	2001.08.08.21.06.32;	author jsyn;	state Exp;
branches;
next	1.54;

1.54
date	2001.06.09.16.39.04;	author pvalchev;	state Exp;
branches;
next	1.53;

1.53
date	2001.04.22.05.33.54;	author austin;	state Exp;
branches;
next	1.52;

1.52
date	2001.03.26.17.14.07;	author todd;	state Exp;
branches;
next	1.51;

1.51
date	2001.01.27.22.19.47;	author ericj;	state Exp;
branches;
next	1.50;

1.50
date	2000.12.26.18.45.20;	author ericj;	state Exp;
branches;
next	1.49;

1.49
date	2000.10.18.15.15.29;	author ericj;	state Exp;
branches;
next	1.48;

1.48
date	2000.10.11.02.07.31;	author ericj;	state Exp;
branches;
next	1.47;

1.47
date	2000.07.09.00.42.27;	author ericj;	state Exp;
branches;
next	1.46;

1.46
date	2000.07.03.15.22.53;	author ericj;	state Exp;
branches;
next	1.45;

1.45
date	2000.06.14.00.56.26;	author miod;	state Exp;
branches;
next	1.44;

1.44
date	2000.05.17.23.50.40;	author reinhard;	state Exp;
branches;
next	1.43;

1.43
date	2000.05.12.19.39.56;	author ericj;	state Exp;
branches;
next	1.42;

1.42
date	2000.05.12.19.37.33;	author ericj;	state Exp;
branches;
next	1.41;

1.41
date	2000.05.12.19.12.56;	author ericj;	state Exp;
branches;
next	1.40;

1.40
date	2000.03.25.00.05.04;	author wvdputte;	state Exp;
branches;
next	1.39;

1.39
date	2000.02.09.23.31.03;	author chris;	state Exp;
branches;
next	1.38;

1.38
date	2000.01.20.23.03.06;	author ericj;	state Exp;
branches;
next	1.37;

1.37
date	99.12.20.22.33.13;	author chris;	state Exp;
branches;
next	1.36;

1.36
date	99.12.06.21.42.08;	author chris;	state Exp;
branches;
next	1.35;

1.35
date	99.11.11.07.04.56;	author ericj;	state Exp;
branches;
next	1.34;

1.34
date	99.11.06.19.07.38;	author ericj;	state Exp;
branches;
next	1.33;

1.33
date	99.10.31.18.05.43;	author ericj;	state Exp;
branches;
next	1.32;

1.32
date	99.10.22.20.40.46;	author chris;	state Exp;
branches;
next	1.31;

1.31
date	99.10.07.20.53.58;	author ericj;	state Exp;
branches;
next	1.30;

1.30
date	99.09.24.01.46.13;	author ericj;	state Exp;
branches;
next	1.29;

1.29
date	99.09.07.18.30.17;	author ericj;	state Exp;
branches;
next	1.28;

1.28
date	99.08.31.00.49.21;	author chris;	state Exp;
branches;
next	1.27;

1.27
date	99.08.02.15.31.04;	author ericj;	state Exp;
branches;
next	1.26;

1.26
date	99.07.23.14.02.49;	author ericj;	state Exp;
branches;
next	1.25;

1.25
date	99.07.19.14.39.04;	author ericj;	state Exp;
branches;
next	1.24;

1.24
date	99.07.07.16.45.52;	author ericj;	state Exp;
branches;
next	1.23;

1.23
date	99.07.06.16.39.03;	author ericj;	state Exp;
branches;
next	1.22;

1.22
date	99.07.05.18.11.01;	author ericj;	state Exp;
branches;
next	1.21;

1.21
date	99.06.30.16.01.27;	author ericj;	state Exp;
branches;
next	1.20;

1.20
date	99.06.28.18.55.21;	author ericj;	state Exp;
branches;
next	1.19;

1.19
date	99.06.28.17.29.26;	author ericj;	state Exp;
branches;
next	1.18;

1.18
date	99.06.28.05.45.25;	author ericj;	state Exp;
branches;
next	1.17;

1.17
date	99.06.25.18.41.16;	author ericj;	state Exp;
branches;
next	1.16;

1.16
date	99.06.17.17.00.06;	author ericj;	state Exp;
branches;
next	1.15;

1.15
date	99.05.30.22.41.57;	author ericj;	state Exp;
branches;
next	1.14;

1.14
date	99.05.30.22.06.39;	author ericj;	state Exp;
branches;
next	1.13;

1.13
date	99.05.29.19.20.35;	author ericj;	state Exp;
branches;
next	1.12;

1.12
date	99.05.29.05.25.01;	author ericj;	state Exp;
branches;
next	1.11;

1.11
date	99.05.27.01.00.39;	author ericj;	state Exp;
branches;
next	1.10;

1.10
date	99.05.21.18.40.47;	author wvdputte;	state Exp;
branches;
next	1.9;

1.9
date	99.05.21.02.44.00;	author ericj;	state Exp;
branches;
next	1.8;

1.8
date	99.04.09.17.56.20;	author ericj;	state Exp;
branches;
next	1.7;

1.7
date	99.04.08.22.21.23;	author ericj;	state Exp;
branches;
next	1.6;

1.6
date	99.03.08.00.56.47;	author wvdputte;	state Exp;
branches;
next	1.5;

1.5
date	99.03.06.17.03.27;	author wvdputte;	state Exp;
branches;
next	1.4;

1.4
date	99.02.24.19.18.13;	author kjell;	state Exp;
branches;
next	1.3;

1.3
date	99.01.02.16.29.52;	author ericj;	state Exp;
branches;
next	1.2;

1.2
date	99.01.02.01.54.12;	author ericj;	state Exp;
branches;
next	1.1;

1.1
date	99.01.02.01.21.20;	author ericj;	state Exp;
branches;
next	;


desc
@@


1.266
log
@6.1 faq updates:

- syspatch
- less xdm, more xenodm
- less pkg.conf, more installurl
- vmm networking (written by edd)
- signing_params is gone
- pkg_sign flags changed
- build user changes (written by tb)
- https in the installer
- cvs version bumps
- remove ports.html redirect page

ok tb
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>

<!-- If you make edits to any FAQ documents, please start each sentence
     on a new line, and try to keep the general formatting consistent
     with the rest of the pages -->

<title>OpenBSD FAQ: System Management</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="copyright" content="This document copyright 1998-2017 by OpenBSD.">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="../openbsd.css">
<link rel="canonical" href="https://www.openbsd.org/faq/faq10.html">
</head>

<body bgcolor= "#ffffff" text= "#000000">

<h2>
<a href="../index.html">
<font color="#0000ff"><i>Open</i></font><font color="#000084">BSD</font></a>
<font color="#e00000">FAQ - System Management</font>
<small>
<a href="index.html" style="font-weight:normal; float:right">[FAQ Index]</a>
</small>
</h2>
<hr>

<ul>
<li><a href="#Patches"          >Security updates</a>
<li><a href="#rc"               >System daemons</a>
<li><a href="#doas"             >Executing commands as another user</a>
<li><a href="#vipw"             >Editing the password file</a>
<li><a href="#SKey"             >Using S/Key</a>
<li><a href="#Dir"              >Directory services</a>
<ul>
  <li><a href="#Dir.available"  >Which directory services are available?</a>
  <li><a href="#YP_secure"      >YP security considerations</a>
  <li><a href="#YP_server"      >Setting up a YP server</a>
  <li><a href="#YP_client"      >Setting up a YP client</a>
</ul>
</ul>

<hr>

<h2 id="Patches">Security updates</h2>

When a critical bug is found, the fix will be committed to the -current tree
as soon as possible.
From that point on, things are handled differently depending on whether the
problem was in the OpenBSD base system or a third party package.
This section details how to keep your system up to date between releases.

<p>
For the OpenBSD base system, there are four options:

<ul>
  <li><b>Apply binary patches</b>
    <br>
    If you're running the -release branch of OpenBSD, you can simply use
    the <a href="http://man.openbsd.org/syspatch">syspatch(8)</a> utility
    to upgrade any files in need of security or reliability fixes.
    This is the quickest and easiest method to get the base system up to date.
    Note that binary patches are only available for the amd64 and i386
    architectures.
  <li><b>Update your system to -stable</b>
    <br>
    Fetch (or update) your source tree with <a href="../anoncvs.html">CVS</a>,
    then <a href="../stable.html">recompile</a> the kernel and userland.
  <li><b>Patch the affected files individually</b>
    <br>
    While applying fixes from the <a href="../errata.html">errata page</a>
    typically requires less time than a CVS checkout/update and rebuild,
    there is no universal set of instructions to follow.
    Sometimes you must patch and recompile one application, sometimes more.
  <li><b>Upgrade your system to -current</b>
    <br>
    As all fixes are applied to the -current code base, updating your system
    to the latest <a href="faq5.html#Snapshots">snapshot</a> is a good way to
    get all the fixes at once.
    However, running -current is not for everyone.
</ul>

For third party software installed via <a href="faq15.html">packages</a>,
there are two options:

<ul>
<!-- XXXrelease: replace -current pkg bit with this one
  <li><b>Use binary packages</b>
    <br>
    Binary packages for -stable are rebuilt only for security issues or other
    major fixes.
    Binary packages for -current are rebuilt on a regular basis, and these
    new packages will include any security fixes.
    Simply call <a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a> with
    the <tt>-u</tt> flag after <a href="faq15.html#Mirror">picking a mirror</a>
    to get the new files.
    Note that updated -stable packages are only available for the amd64
    architecture.
-->
  <li><b>Upgrade your system to -current and use binary packages</b>
    <br>
    Binary packages for -current snapshots are rebuilt on a regular basis,
    and these new packages will include any security fixes that were committed.
    Simply call <a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a> with
    the <tt>-u</tt> flag after <a href="faq15.html#Mirror">picking a mirror</a>
    to get the new files.
  <li><b>Use the -stable ports tree</b>
    <br>
    Fetch (or update) your ports tree with <a href="../anoncvs.html">CVS</a>,
    run the <tt>/usr/ports/infrastructure/bin/out-of-date</tt> script to
    list any packages that need rebuilding, and issue <tt>make update</tt>
    in the affected port directory.
    Alternatively, packages can be built in bulk with
    <a href="http://man.openbsd.org/dpb">dpb(1)</a>.
    To be alerted of port updates, consider following the "ports-changes"
    <a href="../mail.html">mailing list</a>.
</ul>

<h2 id="rc">System daemons</h2>

System daemons (or "services") are started, stopped and controlled by
the <a href="http://man.openbsd.org/rc">rc(8)</a> script via
<a href="http://man.openbsd.org/rc.d">rc.d(8)</a>.
All system daemons, and most add-on <a href="faq15.html">packages</a>, are
handled this way.

<p>
Most daemons and services that come with OpenBSD are controlled on boot
by variables defined in
<a href="https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/etc/rc.conf?content-type=text/plain">/etc/rc.conf</a>.
You'll see lines similar to this:

<blockquote><pre>
httpd_flags=NO
</pre></blockquote>

This shows that <a href="http://man.openbsd.org/httpd">httpd(8)</a> is not to
be started from <a href="http://man.openbsd.org/rc">rc(8)</a> at boot time.
Each line has a comment showing you the flags for common usage of that daemon
or service.

<p>
Do not alter <a href="http://man.openbsd.org/rc.conf">rc.conf(8)</a> directly.
Instead, use the <a href="http://man.openbsd.org/rcctl">rcctl(8)</a> utility
to maintain the <tt>/etc/rc.conf.local</tt> file.
This makes future upgrades easier -- all the changes are in the one file that
isn't touched during upgrade.

<p>
For example, to start the <a href="http://man.openbsd.org/apmd">apmd(8)</a>
daemon for CPU scaling, you might do:

<blockquote><pre>
# <b>rcctl enable apmd</b>
# <b>rcctl set apmd flags -A</b>
# <b>rcctl start apmd</b>
</pre></blockquote>

<h2 id="doas">Executing commands as another user</h2>

One challenge system administrators face is the contradictory requirement
of multiple people managing machines using logins that shouldn't be shared.
The <a href="http://man.openbsd.org/doas">doas(1)</a> tool can solve this
problem by permitting a certain subset of users to run predetermined commands
as another user.
Regular users can run administrative commands, only needing to authenticate
as themselves, rather than needing the root password.

<p>
For example, if appropriately configured, the following command would display
root's <a href="http://man.openbsd.org/crontab.5">crontab(5)</a> file:

<blockquote><pre>
$ <b>doas crontab -l -u root</b>
</pre></blockquote>

All commands are logged to <tt>/var/log/secure</tt>.
Check the <a href="http://man.openbsd.org/doas.conf">doas.conf(5)</a> manual
for configuration examples.

<h2 id="vipw">Editing the password file</h2>

The main password file is <tt>/etc/master.passwd</tt>, which is only readable
by root.
The <a href="http://man.openbsd.org/pwd_mkdb">pwd_mkdb(8)</a> utility generates
the publicly readable <tt>/etc/passwd</tt> file and the password databases
<tt>/etc/pwd.db</tt> and <tt>/etc/spwd.db</tt> from <tt>/etc/master.passwd</tt>.
The file format is described in
<a href="http://man.openbsd.org/passwd.5">passwd(5)</a>.

<p>
Always use <a href="http://man.openbsd.org/vipw">vipw(8)</a> to edit your
<tt>/etc/master.passwd</tt> file.
vipw(8) will invoke your $EDITOR to edit a copy of <tt>/etc/master.passwd</tt>.
After you are done editing, vipw(8) will first sanity check your changes, then
it will re-create <tt>/etc/passwd</tt> and the password databases, and finally
it will install the copy in place of the original <tt>/etc/master.passwd</tt>
file.
vipw(8) also takes care of locking these files, so that only one user can make
changes at a time.

<h2 id="SKey">Using S/Key</h2>

S/Key is a "one-time password" authentication system.
It generates a sequence of one-time (single use) passwords from a user's
secret passphrase along with a challenge received from the server, by means of a
hash function:
<a href="http://man.openbsd.org/md5">md5</a>,
<a href="http://man.openbsd.org/sha1">sha1</a> or
<a href="http://man.openbsd.org/rmd160">rmd160</a>.

<blockquote>
<b>WARNING:</b>
One-time password systems only protect authentication information.
They do not prevent network eavesdroppers from gaining access to private
information.
Furthermore, if you are accessing a secure system A, it is recommended that
you do this from another trusted system B, to ensure nobody is gaining access
to system A by logging your keystrokes or by capturing and/or forging input
and output on your terminal devices.
</blockquote>

<h3>Setting up S/Key</h3>

To start off, the directory <tt>/etc/skey</tt> must exist.
If this directory doesn't exist, have the superuser create it by doing:

<blockquote><pre>
# <b>skeyinit -E</b>
</pre></blockquote>

Then use
<a href="http://man.openbsd.org/skeyinit">skeyinit(1)</a>
to initialize your S/Key.
You will first be prompted for your login password, then you will be asked for
your S/Key secret passphrase, which must be at least 10 characters long:

<blockquote><pre>
$ <b>skeyinit</b>
Reminder - Only use this method if you are directly connected
           or have an encrypted channel.  If you are using telnet,
           exit with no password and use skeyinit -s.
Password:
[Adding ericj with md5]
Enter new secret passphrase:
Again secret passphrase:

ID ericj skey is otp-md5 100 oshi45820
Next login password: HAUL BUS JAKE DING HOT HOG
</pre></blockquote>

Notice the information in the last two lines.
The program used to create your S/Key password is
<a href="http://man.openbsd.org/otp-md5">otp-md5(1)</a>,
the sequence number is <tt>100</tt> and the secret key is <tt>oshi45820</tt>.
The six small words <tt>HAUL BUS JAKE DING HOT HOG</tt> constitute the S/Key
password with sequence number <tt>100</tt>.

<h3>Generating S/Key passwords</h3>
To generate the S/Key password for the next login, use
<a href="http://man.openbsd.org/skeyinfo">skeyinfo(1)</a>
to find out what command to run:

<blockquote><pre>
$ <b>skeyinfo -v</b>
otp-md5 95 oshi45820
$ <b>otp-md5 95 oshi45820</b>
Reminder - Do not use this program while logged in via telnet.
Enter secret passphrase:
NOOK CHUB HOYT SAC DOLE FUME
</pre></blockquote>

In order to generate a list of S/Key passwords, do:

<blockquote><pre>
$ <b>otp-md5 -n 5 95 oshi45820</b>
Reminder - Do not use this program while logged in via telnet.
Enter secret passphrase:
91: SHIM SET LEST HANS SMUG BOOT
92: SUE ARTY YAW SEED KURD BAND
93: JOEY SOOT PHI KYLE CURT REEK
94: WIRE BOGY MESS JUDE RUNT ADD
95: NOOK CHUB HOYT SAC DOLE FUME
</pre></blockquote>

<h3>Using S/Key to log in</h3>

Here is an example session using S/Key to log in to an ftp server on
<tt>localhost</tt>.
To perform an S/Key login, you append <tt>:skey</tt> to your login name.

<blockquote><pre>
$ <b>ftp localhost</b>
Connected to localhost.
220 oshibana.shin.ms FTP server (Version 6.5/OpenBSD) ready.
Name (localhost:ericj): <b>ericj:skey</b>
331- otp-md5 93 oshi45820
331 S/Key Password: <b>JOEY SOOT PHI KYLE CURT REEK</b>
[...]
230 User ericj logged in.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> <b>quit</b>
221 Goodbye.
</pre></blockquote>

Similarly, for
<a href="http://man.openbsd.org/ssh">ssh(1)</a>:

<blockquote><pre>
$ <b>ssh -l ericj:skey localhost</b>
otp-md5 91 oshi45821
S/Key Password: <b>SHIM SET LEST HANS SMUG BOOT</b>
Last login: Thu Apr  7 12:21:48 on ttyp1 from 156.63.248.77
$
</pre></blockquote>

<h2 id="Dir">Directory services</h2>

OpenBSD can be used for both servers and clients of databases containing
user credentials, group information and other network-related data.

<h3 id="Dir.available">Which directory services are available?</h3>

Of course, you could use various directory services on OpenBSD.
But YP is the only one that can be accessed directly using standard
C-library functions like
<a href="http://man.openbsd.org/getpwent">getpwent(3)</a>,
<a href="http://man.openbsd.org/getgrent">getgrent(3)</a>,
<a href="http://man.openbsd.org/gethostbyname">gethostbyname(3)</a>
and so on.
Thus, if you keep your data in a YP database, you do not need to copy it to
local configuration files like
<a href="http://man.openbsd.org/master.passwd">master.passwd(5)</a> before you
can use it, for example to authenticate system users.

<p>
YP is a directory service compatible with Sun Microsystems NIS
(Network Information System).
See <a href="http://man.openbsd.org/yp">yp(8)</a> for an overview of the
available manual pages.
Be careful, some operating systems contain directory services bearing similar
names but all the same being incompatible, for example NIS+.

<p>
To use other directory services except YP, you either need to populate local
configuration files from the directory, or you need a YP frontend to
the directory.
For example, you can use the <tt>sysutils/login_ldap</tt> port when you choose
the former, while the <a href="http://man.openbsd.org/ypldap">ypldap(8)</a>
daemon provides the latter.

<p>
For some applications, simply synchronizing a small number of configuration
files among a group of machines using tools like
<a href="http://man.openbsd.org/cron">cron(8)</a>,
<a href="http://man.openbsd.org/scp">scp(1)</a> or
<tt>rsync</tt> (available from ports) constitutes an easy and robust alternative
to a full-blown directory service.

<h3 id="YP_secure">YP security considerations</h3>

For compatibility reasons, all security features built into the OpenBSD
implementation of YP are switched <i>off</i> by default.
Even when they are all switched on, the NIS protocol is still inherently
insecure for two reasons:
All data, including sensitive data like password hashes, is transmitted
unencrypted across the network, and neither the client nor the server can
reliably verify each other's identity.

<p>
Thus, before setting up any YP server, you should consider whether these
inherent security flaws are acceptable in your context.
In particular, YP is inadequate if potential attackers have physical access
to your network.
Anybody gaining root access to any computer connected to your network segments
carrying YP traffic can bind your YP domain and retrieve its data.
In some cases, passing YP traffic through SSL or IPSec tunnels might be
an option.

<h3 id="YP_server">Setting up a YP server</h3>

<ol>
  <li>
    A YP server serves a group of clients called a "domain."
    You should first select a domain name; it can be an arbitrary string and
    need not be related in any way to DNS domain names.
    Choosing a random name like "Eepoo5vi" can marginally improve security,
    though the effect is mostly in security by obscurity.
    In case you need to maintain several distinct YP domains, it's probably
    better to choose descriptive names like "sales," "marketing" and "research"
    in order to forestall system administration errors caused by obscurity.
    Also note that some versions of SunOS require using the host's DNS domain
    name, so your choice might be restricted in a network including such hosts.

    <p>
    Use the <a href="http://man.openbsd.org/domainname">domainname(1)</a>
    utility to set the domain name, and put it into the
    <a href="http://man.openbsd.org/defaultdomain">defaultdomain(5)</a>
    file to have it automatically set at system startup time.

    <blockquote><pre>
    # <b>echo "puffynet" > /etc/defaultdomain</b>
    # <b>domainname `cat /etc/defaultdomain`</b>
    </pre></blockquote>

  <li>
    Initialise the YP server using the interactive command

    <blockquote><pre>
    # <b>ypinit -m</b>
    </pre></blockquote>

    At this point, it is not necessary to specify slave servers yet.
    To add slave servers, you can rerun
    <a href="http://man.openbsd.org/ypinit">ypinit(8)</a>
    later, using the <tt>-u</tt> option.

    Setting up at least one slave server for each domain is useful to avoid
    service interruptions.
    For example, should the master server ever go down or lose network
    connectivity, client processes trying to access YP maps block indefinitely
    until they receive the requested information.
    Thus, YP service interruptions typically render the client hosts completely
    unusable until YP is back to service.

  <li>
    Decide where to store the source files to generate your YP maps from.
    Keeping the server configuration separate from the served configuration
    helps to control which information will be served and which won't, so the
    default <tt>/etc</tt> often isn't the best choice.

    <p>
    The only inconvenience caused by changing the source directory is that you
    will not be able to add, remove and modify users and groups in the
    YP domain using utilities like
    <a href="http://man.openbsd.org/user">user(8)</a> and
    <a href="http://man.openbsd.org/group">group(8)</a>.
    Instead, you will have to edit the configuration files with a text editor.

    <p>
    To define the source directory, edit the file
    <tt>/var/yp/`domainname`/Makefile</tt>
    and change the <tt>DIR</tt> variable, e.g.

    <blockquote><pre>
    DIR=/etc/yp/src/puffynet
    </pre></blockquote>

  <li>
    Consider customizing other variables in
    <tt>/var/yp/`domainname`/Makefile</tt>.
    See <a href="http://man.openbsd.org/Makefile.yp">Makefile.yp(8)</a>
    for details.

    <p>
    For example, even in case you use the default source directory
    <tt>/etc</tt>, you do not usually need all accounts and groups existing
    on the server on all your client hosts.
    In particular, not serving the root account and thus keeping root's password
    hash confidential is often beneficial to security.
    Review the values of <tt>MINUID</tt>, <tt>MAXUID</tt>, <tt>MINGID</tt>
    and <tt>MAXGID</tt> and adjust them to you needs.

    <p>
    If all your YP clients run OpenBSD or FreeBSD, exclude the encrypted
    passwords from the <tt>passwd</tt> maps by setting <tt>UNSECURE=""</tt> in
    <tt>/var/yp/`domainname`/Makefile</tt>.

    <p>
    The former practice of editing the template file
    <tt>/var/yp/Makefile.yp</tt> is no longer recommended.
    Changes to that file affect all domains initialized after the change, but
    do not affect domains initialized before the change, so this is error-prone
    either way:
    You both risk that the intended changes do not take effect, and you risk to
    forget about them and have them affect other domains later which they were
    never intended for.

  <li>
    Create the source directory and populate it with the configuration files
    you need.
    See <a href="http://man.openbsd.org/Makefile.yp">Makefile.yp(8)</a>
    to learn which YP maps require which source files.
    For the format of the individual configuration files, refer to
    <a href="http://man.openbsd.org/passwd.5">passwd(5)</a>,
    <a href="http://man.openbsd.org/group.5">group(5)</a>,
    <a href="http://man.openbsd.org/hosts">hosts(5)</a>
    and so on, and look at the examples in <tt>/etc</tt>.

  <li>
    Create the initial version of your YP maps using the commands

    <blockquote><pre>
    # <b>cd /var/yp</b>
    # <b>make</b>
    </pre></blockquote>

    Do not worry about error messages from
    <a href="http://man.openbsd.org/yppush">yppush(8)</a> right now.
    The YP server is not yet running.

  <li>
    YP uses <a href="http://man.openbsd.org/rpc">rpc(3)</a>
    (remote procedure calls) to communicate with clients, so it is necessary
    to enable <a href="http://man.openbsd.org/portmap">portmap(8)</a>.
    To do so, use <a href="http://man.openbsd.org/rcctl">rcctl(8)</a>.

    <blockquote><pre>
    # <b>rcctl enable portmap</b>
    # <b>portmap</b>
    </pre></blockquote>

  <li>
    Consider using either the
    <a href="http://man.openbsd.org/securenet">securenet(5)</a> or the
    <a href="http://man.openbsd.org/ypserv.acl">ypserv.acl(5)</a>
    security feature of the YP server daemon.
    But be aware that both of these only provide IP based access control.
    Thus, they only help as long as potential attackers have neither physical
    access to the hardware of the network segments carrying your YP traffic
    nor root access to any host connected to those network segments.

  <li>
    Finally, start the YP server daemon:

    <blockquote><pre>
    # <b>ypserv</b>
    </pre></blockquote>

    It will automatically be restarted at boot time as long as the directory
    <tt>/var/yp/`domainname`</tt> continues to exist.

  <li>
    To test the new server, consider making it its own client,
    following the instructions in the first part of the next section.
    In case you don't want the server to use its own maps, you can
    disable the client part after the test with the following commands:

    <blockquote><pre>
    # <b>pkill ypbind</b>
    # <b>rm -rf /var/yp/binding</b>
    </pre></blockquote>

  <li>
    If you wish to allow users to change their passwords from client machines,
    then you must enable
    <a href="http://man.openbsd.org/yppasswdd">yppasswdd(8)</a>:

    <blockquote><pre>
    # <b>rcctl set yppasswdd flags -d /etc/yp/src/puffynet</b>
    # <b>rpc.yppasswdd</b>
    </pre></blockquote>

    If you left the source directory at the default <tt>/etc</tt>,
    just use <tt>rcctl enable yppasswdd</tt>.

  <li>
    Remember that each time you change a file sourced by a YP map,
    you must regenerate your YP maps.

    <blockquote><pre>
    # <b>cd /var/yp</b>
    # <b>make</b>
    </pre></blockquote>

    This updates all database files in <tt>/var/yp/`domainname`</tt>, with
    one exception:  The file <tt>ypservers.db</tt>, listing all YP master
    and slave servers associated with the domain, is created directly
    from <tt>ypinit -m</tt> and modified exclusively by <tt>ypinit -u</tt>.
    In case you accidentally delete it, run <tt>ypinit -u</tt> to recreate
    it from scratch.
</ol>

<h3 id="YP_client">Setting up a YP client</h3>

Setting up a YP client involves two distinct parts.
First, you must get the YP client daemon running,
binding your client host to a YP server.
Completing the following steps will allow you to retrieve data
from the YP server, but that data will not yet be used by the system:

<ol>
  <li>
    Like on the server, you must set the domain name and enable the portmapper:

    <blockquote><pre>
    # <b>echo "puffynet" > /etc/defaultdomain</b>
    # <b>domainname `cat /etc/defaultdomain`</b>
    # <b>rcctl enable portmap</b>
    # <b>portmap</b>
    </pre></blockquote>

  <li>
    It is recommended to provide a list of YP servers in the configuration
    file <tt>/etc/yp/`domainname`</tt>.
    Otherwise, the YP client daemon will use network broadcasts to find
    YP servers for its domain.
    Explicitly specifying the servers is both more robust and marginally
    less open to attack.
    If you have not set up any slave servers, just put the host name
    of the master server into <tt>/etc/yp/`domainname`</tt>.

  <li>
    The YP client daemon is called
    <a href="http://man.openbsd.org/ypbind">ypbind(8)</a>.
    Starting it manually will create the directory <tt>/var/yp/binding</tt>,
    such that it will be automatically restarted at boot time.

    <blockquote><pre>
    # <b>ypbind</b>
    </pre></blockquote>

  <li>
    If all went well you should be able to query the YP server using
    <a href="http://man.openbsd.org/ypcat">ypcat(1)</a>
    and see your passwd map returned.

    <blockquote><pre>
    # <b>ypcat passwd</b>
    bob:*:5001:5000:Bob Nuggets:/home/bob:/usr/local/bin/zsh
    ...
    </pre></blockquote>

    Other useful tools for debugging your YP setup include
    <a href="http://man.openbsd.org/ypmatch">ypmatch(1)</a> and
    <a href="http://man.openbsd.org/yptest">yptest(8)</a>.
</ol>

The second part of configuring a YP client involves editing local configuration
files such that certain YP maps get used by various system facilities.
Not all servers serve all standard maps supported by the operating system, some
servers serve additional non-standard maps, and you are by no means compelled to
use all those maps.
Which of the available maps shall or shall not be used, and for which purposes
they shall be used, is fully at the discretion of the client host's system
administrator.

<p>
For a list of standard YP maps and their standard usage, see
<a href="http://man.openbsd.org/Makefile.yp">Makefile.yp(8)</a>.
The most common use cases include:

<ul>
  <li>
    If you want to include all user accounts from the YP domain, append the
    default YP marker to the master password file and rebuild the password
    database:

    <blockquote><pre>
    # <b>echo '+:*::::::::' >> /etc/master.passwd</b>
    # <b>pwd_mkdb -p /etc/master.passwd</b>
    </pre></blockquote>

    For details on selective inclusion and exclusion of user accounts, see
    <a href="http://man.openbsd.org/passwd.5">passwd(5)</a>.
    To test whether inclusion actually works, use the
    <a href="http://man.openbsd.org/id">id(1)</a> utility.

  <li>
    If you want to include all groups from the YP domain, append the default YP
    marker to the group file:

    <blockquote><pre>
    # <b>echo '+:*::' >> /etc/group</b>
    </pre></blockquote>

    For details on selective group inclusion, see
    <a href="http://man.openbsd.org/group">group(5)</a>.
</ul>

<p>
</body>
</html>
@


1.265
log
@minor wording changes to reduce my 6.1 diff.
@
text
@d30 1
a30 1
<li><a href="#Patches"          >Keeping OpenBSD updated</a>
d46 1
a46 1
<h2 id="Patches">Keeping OpenBSD updated</h2>
d55 1
a55 1
For the OpenBSD base system, there are three options:
d58 1
a58 1
  <li><b><a href="faq5.html#Snapshots">Upgrade your system to -current</a></b>
d60 7
a66 4
    As all fixes are applied to the -current code base, updating your system
    to the latest snapshot is a good way to get all the fixes at once.
    However, running -current is not for everyone.
  <li><b><a href="../stable.html">Update your system to -stable</a></b>
d68 3
a70 6
    This is done by fetching or updating your source tree using the appropriate
    -stable branch, then <a href="faq5.html">recompiling</a> the kernel and
    userland files.
    Overall, this is probably the easiest way, though it takes longer since
    the entire system gets rebuilt.
  <li><b><a href="#Errata">Patch the affected files individually</a></b>
d72 3
a74 2
    While this typically requires less time than a CVS checkout/update and
    rebuild, there is no one universal set of instructions to follow.
d76 6
a81 2
    All patches posted to the <a href="../errata.html">errata web page</a> are
    made directly against the indicated release's source tree.
a83 1
<p>
d88 13
d108 1
a108 2
    Remember to use the <tt>/snapshots/</tt> directory!
  <li><b>Update via the -stable ports tree</b>
d110 3
a112 6
    If you choose to stay on the -release or -stable branch, you will have to
    rebuild affected packages when security issues are found.
    Check out (or update to) the -stable ports branch with
    <a href="../anoncvs.html">CVS</a>, run the
    <tt>/usr/ports/infrastructure/bin/out-of-date</tt> script to list any
    packages that need rebuilding, and finally issue <tt>make update</tt>
d114 4
a117 2
    To be alerted of -stable port updates, consider following the
    "ports-changes" <a href="../mail.html">mailing list</a>.
@


1.264
log
@the new 'system daemons' title didn't match the beginning of the section
very well. rewrite the latter a bit to improve this.

pointed out by raf czlonka, diff by tj
@
text
@d52 1
a52 2
This section details how to keep your system up to date with all the latest
fixes.
@


1.263
log
@move disk quotas section to disk/filesystem page.
@
text
@a107 3
OpenBSD uses the <a href="http://man.openbsd.org/rc">rc(8)</a> startup system.
Its man page contains a good overview and explains the various scripts and files
involved.
d109 1
@


1.262
log
@rename "the rc system startup script" section to "system daemons."
thin out text; in particular remove a recommendation to start pkg
scripts with rc.local (why?) and a few redundant (re-)explanations.

ok tb
@
text
@a33 1
<li><a href="#Quotas"           >Setting up user disk quotas</a>
a189 54

<h2 id="Quotas">Setting up user disk quotas</h2>

Quotas are used to place limits on the amount of disk space available to certain
users and groups.

<p>
Use the keywords <tt>userquota</tt> and <tt>groupquota</tt> to mark each
filesystem in <a href="http://man.openbsd.org/fstab">fstab(5)</a> on which you
want to enforce quotas.
By default, the files <tt>quota.user</tt> and <tt>quota.group</tt> will be
created at the root of those filesystems.
Here is an example <tt>/etc/fstab</tt> line:

<blockquote><pre>
0123456789abcdef.k /home ffs rw,nodev,nosuid,userquota 1 1
</pre></blockquote>

To set the users' quotas, use
<a href="http://man.openbsd.org/edquota">edquota(8)</a>.
For example, issue

<blockquote><pre>
# <b>edquota ericj</b>
</pre></blockquote>

and edit the soft and hard limits:

<blockquote><pre>
Quotas for user ericj:
/home: KBytes in use: 62, limits (soft = <b>1000000</b>, hard = <b>1500000</b>)
        inodes in use: 25, limits (soft = <b>0</b>, hard = <b>0</b>)
</pre></blockquote>

In this example, the soft limit is set to 1000000k, and the hard limit is set to
1500000k.
No limits on the number of inodes will be enforced, since the corresponding soft
and hard limits are set to 0.
Users who exceed their soft limit are warned and are given a grace period to get
their disk usage below their limits.
Grace periods can be set by using the <tt>-t</tt> option on edquota(8).
After the grace period is over, the soft limit is handled as a hard limit.
This usually results in an allocation failure.

<p>
Use <a href="http://man.openbsd.org/quotaon">quotaon(8)</a> to enable quotas:

<blockquote><pre>
# <b>quotaon -a</b>
</pre></blockquote>

This will scan through fstab(5) and enable quotas on the filesystems with quota
options.
View quota statistics with <a href="http://man.openbsd.org/quota">quota(1)</a>.
@


1.261
log
@move "duplicating filesystems" to the main disk/filesystem page and reorder
table of contents for clarity. no text change.

discussed with tb
@
text
@d31 1
a31 1
<li><a href="#rc"               >The rc system startup script</a>
d107 1
a107 1
<h2 id="rc">The rc system startup script</h2>
d112 4
a115 6
If you wish to enable or disable daemons, use
<a href="http://man.openbsd.org/rcctl">rcctl(8)</a> to manage your
<a href="http://man.openbsd.org/rc.conf">rc.conf.local(8)</a> file, as described
below.

<h3>Starting daemons and services that come with OpenBSD</h3>
d117 1
a147 70

<h3>Starting up local daemons and configuration</h3>

For other daemons which you might install on the system via packages or other
ways, you could use the <tt>/etc/rc.local</tt> file.
For example, say you installed a daemon located at
<tt>/usr/local/sbin/daemonx</tt>.
If you want it to start at boot time, put an entry into <tt>/etc/rc.local</tt>
like this:

<blockquote><pre>
if [ -x /usr/local/sbin/daemonx ]; then
	echo 'Starting daemonx' && /usr/local/sbin/daemonx
fi
</pre></blockquote>

If the daemon does not automatically detach on startup, remember to add "&amp;"
at the end of the command-line.

<p>
From now on, this daemon will be started at boot.
You will be able to see any errors on boot.

<h3>The <tt>/etc/rc.d</tt> directory</h3>

OpenBSD's system daemons ("services") are started, stopped and controlled by
<a href="http://man.openbsd.org/rc.d">rc.d(8)</a>.
All system daemons are handled by these scripts, and most add-on
<a href="faq15.html">packages</a> are as well.

<p>
These scripts, one per daemon, are invoked by <tt>rc</tt>.
The order for system daemons is coded into <tt>rc</tt>, and the order for
packages is managed by the <tt>pkg_scripts</tt> environment variable, which
would be set in <tt>/etc/rc.conf.local</tt>.
Note that simply placing a script in this directory does not cause it to be run
on boot; the name of the script must be specified in the <tt>pkg_scripts</tt>
variable to start on boot.

<p>
The starting of system scripts is determined by entries in the
<tt>/etc/rc.conf.local</tt> file.
For example, <tt>/etc/rc.d/httpd</tt> does not start
<a href="http://man.openbsd.org/httpd">httpd(8)</a> unless <tt>/etc/rc.conf</tt>
or <tt>/etc/rc.conf.local</tt> contains a line defining the <tt>httpd_flags</tt>
variable.

<p>
Note that rather than having each script in rc.d managing the entire startup,
shutdown, reload, restart, and check operations, most rc.d scripts can be
reduced to specifying very few variables, and invoking the
<a href="http://man.openbsd.org/rc.subr">rc.subr(8)</a> script, which manages
most of the standard way of doing these tasks.

<p>
For example, our above <tt>daemonx</tt> application could be started with a
<tt>/etc/rc.d/daemonx</tt> file consisting of:

<blockquote><pre>
#!/bin/sh

daemon="/usr/local/sbin/daemonx"

. /etc/rc.d/rc.subr

rc_cmd $1
</pre></blockquote>

and adding the daemon name to the <tt>pkg_scripts</tt> variable in
<tt>/etc/rc.conf.local</tt>.
@


1.260
log
@move (a shortened version of) the errata instructions from faq10 to the
errata page.

deraadt likes it
@
text
@d30 1
a30 1
<li><a href="#DupFS"            >Duplicating filesystems</a>
a42 1
<li><a href="#Patches"          >Keeping OpenBSD updated</a>
d47 8
a54 1
<h2 id="DupFS">Duplicating filesystems</h2>
d56 2
a57 3
To duplicate everything under directory <tt>/SRC</tt> to directory <tt>/DST</tt>
with <a href="http://man.openbsd.org/dump">dump(8)</a> and
<a href="http://man.openbsd.org/restore">restore(8)</a>, do:
d59 21
a79 3
<blockquote><pre>
# <b>cd /SRC && dump 0f - . | (cd /DST && restore -rf - )</b>
</pre></blockquote>
d81 3
a83 1
or use <a href="http://man.openbsd.org/tar">tar(1)</a>:
d85 21
a105 3
<blockquote><pre>
# <b>cd /SRC && tar cf - . | (cd /DST && tar xpf - )</b>
</pre></blockquote>
a784 60
</ul>

<h2 id="Patches">Keeping OpenBSD updated</h2>

When a critical bug is found, the fix will be committed to the -current tree
as soon as possible.
From that point on, things are handled differently depending on whether the
problem was in the OpenBSD base system or a third party package.
This section details how to keep your system up to date with all the latest
fixes.

<p>
For the OpenBSD base system, there are three options:

<ul>
  <li><b><a href="faq5.html#Snapshots">Upgrade your system to -current</a></b>
    <br>
    As all fixes are applied to the -current code base, updating your system
    to the latest snapshot is a good way to get all the fixes at once.
    However, running -current is not for everyone.
  <li><b><a href="../stable.html">Update your system to -stable</a></b>
    <br>
    This is done by fetching or updating your source tree using the appropriate
    -stable branch, then <a href="faq5.html">recompiling</a> the kernel and
    userland files.
    Overall, this is probably the easiest way, though it takes longer since
    the entire system gets rebuilt.
  <li><b><a href="#Errata">Patch the affected files individually</a></b>
    <br>
    While this typically requires less time than a CVS checkout/update and
    rebuild, there is no one universal set of instructions to follow.
    Sometimes you must patch and recompile one application, sometimes more.
    All patches posted to the <a href="../errata.html">errata web page</a> are
    made directly against the indicated release's source tree.
</ul>

<p>
For third party software installed via <a href="faq15.html">packages</a>,
there are two options:

<ul>
  <li><b>Upgrade your system to -current and use binary packages</b>
    <br>
    Binary packages for -current snapshots are rebuilt on a regular basis,
    and these new packages will include any security fixes that were committed.
    Simply call <a href="http://man.openbsd.org/pkg_add">pkg_add(1)</a> with
    the <tt>-u</tt> flag after <a href="faq15.html#Mirror">picking a mirror</a>
    to get the new files.
    Remember to use the <tt>/snapshots/</tt> directory!
  <li><b>Update via the -stable ports tree</b>
    <br>
    If you choose to stay on the -release or -stable branch, you will have to
    rebuild affected packages when security issues are found.
    Check out (or update to) the -stable ports branch with
    <a href="../anoncvs.html">CVS</a>, run the
    <tt>/usr/ports/infrastructure/bin/out-of-date</tt> script to list any
    packages that need rebuilding, and finally issue <tt>make update</tt>
    in the affected port directory.
    To be alerted of -stable port updates, consider following the
    "ports-changes" <a href="../mail.html">mailing list</a>.
@


1.259
log
@switch cvsweb and a couple of other links to https. thanks nick and tj!
@
text
@a775 1
    This method is explained in more detail <a href="#Errata">below</a>.
a802 72

<h3 id="Errata">Applying errata patches</h3>

Patches for the OpenBSD base system are distributed as unified diffs, which
are text files that hold differences to the original source code.
This means that, to apply a patch, you must have the source code from the
-release version of your system available.

<p>
Whether you download and untar the source trees or fetch them from CVS,
it's best to <a href="faq5.html#wsrc">avoid using root</a> where possible.
Installing the new binaries will be the only step that requires it.

<p>
For our example here, we will look at patch 011 for OpenBSD 5.6, dealing with
<a href="http://man.openbsd.org/pppoe">pppoe(4)</a> connections.
Each patch is cryptographically signed with the
<a href="http://man.openbsd.org/signify">signify(1)</a> tool and contains
instructions on how to apply it properly.
We will assume you have put this patch into your current working directory.

<blockquote><pre>
$ <b>signify -Vep /etc/signify/openbsd-56-base.pub -x 011_pppoe.patch.sig \</b>
  <b>-m - | (cd /usr/src && patch -p0)</b>

Hmm...  Looks like a unified diff to me...
The text leading up to this was:
--------------------------
|
|OpenBSD 5.6 errata 11, Dec 5, 2014:
|
|An incorrect memcpy call would result in corrupted MAC addresses when
|using PPPOE.
|
|Apply patch using:
|
|    signify -Vep /etc/signify/openbsd-56-base.pub -x 011_pppoe.patch.sig \
|        -m - | (cd /usr/src && patch -p0)
|
|Then build and install a new kernel.
|
|Index: sys/net/if_ethersubr.c
|===================================================================
|RCS file: /cvs/src/sys/net/if_ethersubr.c,v
|retrieving revision 1.174
|diff -u -p -r1.174 if_ethersubr.c
|--- sys/net/if_ethersubr.c     12 Jul 2014 18:44:22 -0000      1.174
|+++ sys/net/if_ethersubr.c     1 Dec 2014 17:48:55 -0000
--------------------------
Patching file sys/net/if_ethersubr.c using Plan A...
Hunk #1 succeeded at 673.              <i>&lt;-- Look for this message!</i>
done
</pre></blockquote>

Note the "<tt>Hunk #1 succeeded</tt>" message above - this indicates the patch
was applied successfully.
Many patches are more complex than this and will involve multiple hunks and
multiple files, in which case you should verify that all hunks succeeded on
all the files.
Patches are very sensitive to "white space" - copying and pasting from your
browser will often change tab characters into spaces or otherwise alter the
white space of a file, making it not apply.

<p>
At this point, you would <a href="faq5.html#Bld">build and install</a> the
new kernel and reboot the system.

<p>
Not all patches are for the kernel.
In some cases, you will have to rebuild individual utilities.
At other times, will require recompiling all utilities statically linked to a
patched library.
@


1.258
log
@add a quick link to 'keeping openbsd updated' and shuffle the other links
around so that the order makes a bit more sense. add some air to breathe.

idea/ok tj
@
text
@d78 1
a78 1
<a href="http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/etc/rc.conf?content-type=text/plain">/etc/rc.conf</a>.
@


1.257
log
@remove the redundant "managing users and groups" section; instead move rmuser
manpage link next to its adduser counterpart in faq1.

trim some sudo backstory from the doas section.

ok tb
@
text
@d43 1
a43 1
<li><a href="#Patches"          >Keeping OpenBSD up to date</a>
d744 1
a744 1
<h2 id="Patches">Keeping OpenBSD up to date</h2>
@


1.256
log
@fix broken link.
@
text
@a32 1
<li><a href="#AddDelUser"       >Managing users and groups</a>
a185 1
When using doas, all commands are logged to <tt>/var/log/secure</tt>.
d195 1
a197 17

<p>
The doas(1) utility is designed to be a modern, simple replacement for sudo.
If you need features specific to sudo, an up-to-date version is available
as a <a href="faq15.html">package</a>. 

<h2 id="AddDelUser">Managing users and groups</h2>

OpenBSD offers several tools for managing users and groups on your system:

<ul>
  <li><a href="http://man.openbsd.org/adduser">adduser(8)</a> and
    <a href="http://man.openbsd.org/rmuser">rmuser(8)</a> run in a
    self-explanatory interactive mode when invoked without any arguments.
  <li>The <a href="http://man.openbsd.org/user">user(8)</a> and
    <a href="http://man.openbsd.org/group.8">group(8)</a> utilities.
</ul>
@


1.255
log
@2017
@
text
@d807 1
a807 1
    the <tt>-u</tt> flag after <a href="faq15.html#Easy">picking a mirror</a>
@


1.254
log
@replace a couple telnet examples with something more modern.
@
text
@d11 1
a11 2
<meta name= "copyright"     content= "This document copyright 1998-2016
                                      by OpenBSD.">
@


1.253
log
@better wording from tj that arrived 2s too late
@
text
@d399 1
a399 2
<a href="http://man.openbsd.org/ssh">ssh(1)</a> or
<a href="http://man.openbsd.org/telnet">telnet(1)</a>:
@


1.252
log
@rename the doas session to "executing commands as another user" and
add back a brief mention of sudo
@
text
@d202 3
a204 3
The doas(1) utility is designed to be a minimalistic and simple replacement of
sudo(8) and might not cover all your needs.
An up-to-date version of sudo is available as a <a href="faq15.html">port</a>. 
@


1.251
log
@move introductory paragraph on doas to the beginning of the section
and thin out some redundant text.
@
text
@d33 1
a33 1
<li><a href="#doas"             >OpenBSD's sudo replacement, doas</a>
d179 1
a179 1
<h2 id="doas">OpenBSD's sudo replacement, doas</h2>
d200 5
@


1.250
log
@trim the section on doas and just link to the doas.conf manual for examples.
@
text
@d181 4
a184 1
<a href="http://man.openbsd.org/doas">doas(1)</a> allows a user to run commands
d186 7
a192 1
For example, if appropriately configured,
a197 13
will display root's <a href="http://man.openbsd.org/crontab.5">crontab(5)</a>
file.

<p>
One common challenge system administrators face is the contradictory requirement
of multiple people managing machines using logins that shouldn't be shared.
<a href="http://man.openbsd.org/doas">doas(1)</a> solves this problem by
permitting a certain subset of your users to run predetermined commands as
another user.
Now, these users can run administrative commands, only needing to authenticate
as themselves.
They do not need to know the root password, and all activity is logged to
<tt>/var/log/secure</tt>.
d199 1
a199 1
for examples on how to configure it.
@


1.249
log
@6.0 faq updates: setenv in doas.conf, proot, wxneeded, bump cvs examples
to -rOPENBSD_6_0 and link to the 6.0 upgrade guide.

ok tb
@
text
@d200 4
a203 27
They do not need to know the root password.

<p>
All activity is logged to <tt>/var/log/secure</tt>.

<p>
A very basic <a href="http://man.openbsd.org/doas.conf">doas.conf(5)</a> might
look like this:

<blockquote><pre>
permit setenv { PKG_PATH ENV PS1 SSH_AUTH_SOCK } :wheel as root
</pre></blockquote>

This file gives users in the wheel group root-level access to all commands, with
the environment variables <tt>PKG_PATH</tt>, <tt>ENV</tt>, <tt>PS1</tt> and
<tt>SSH_AUTH_SOCK</tt> passed through to the program they are invoking.
The user will be asked to verify their password before the command is run.

<p>
The <a href="http://man.openbsd.org/doas.conf">doas.conf(5)</a> manual contains
more examples.

<p>
doas(1) is designed to be a minimalistic and simple replacement of sudo(8) and
might not cover all your needs.
An up-to-date version of sudo(8) is available as a
<a href="faq15.html">package</a>.
@


1.248
log
@fix minor inconsistency: the quota isn't on / anymore, it's on /home
@
text
@d210 1
a210 1
permit keepenv { PKG_PATH ENV PS1 SSH_AUTH_SOCK } :wheel as root
@


1.247
log
@tls on openbsd.org is now real:
- link to https://www.openbsd.org from the sub-projects' pages
- make internal links relative
- switch link rel=canonical to https to please some search engines
"go ahead" from beck, "do it!!!!" tj
@
text
@d290 1
a290 1
/: KBytes in use: 62, limits (soft = <b>1000000</b>, hard = <b>1500000</b>)
@


1.246
log
@tj requested that i remove "converting a linux password file".
@
text
@d15 1
a15 1
<link rel="canonical" href="http://www.openbsd.org/faq/faq10.html">
@


1.245
log
@move "character sets and localization" from faq10 to faq8 and move
the "s/key" section from faq8 to faq10.  in faq10 shuffle the sections
a bit, so the longer sections are towards the end of the page.
@
text
@a35 2
<li><a href="#passwd"           >Converting your Linux password file to
                                 BSD-style</a>
a259 43

<h2 id="passwd">Converting your Linux password file to BSD-style</h2>

First, figure out if your Linux password file is shadowed or not.
If it is, install <a href="http://www.openwall.com/john/">John the Ripper</a>
from <a href="faq15.html">packages or ports</a> (<tt>security/john</tt>) and
use the "unshadow" utility that comes with it to merge your <tt>passwd</tt>
and <tt>shadow</tt> files into one Sixth Edition-style file.

<p>
Using your Linux password file, we'll call it <tt>linux_passwd</tt>, you
need to add in ::0:0 between fields four and seven.
<a href="http://man.openbsd.org/awk">awk(1)</a> does this for you.

<blockquote><pre>
# <b>awk -F : '{printf("%s:%s:%s:%s::0:0:%s:%s:%s\n", \</b>
> <b>$1,$2,$3,$4,$5,$6,$7); }' linux_passwd > new_passwd</b>
</pre></blockquote>

At this point, you want to edit the <tt>new_passwd</tt> file and remove
the root and other system entries that are already present in your
OpenBSD password file or aren't applicable with OpenBSD (all of them).
Also, make sure there are no duplicate usernames or user IDs between
<tt>new_passwd</tt> and your OpenBSD box's <tt>/etc/passwd</tt>.
The easiest way to do this is to start with a fresh <tt>/etc/passwd</tt>.

<blockquote><pre>
# <b>cat new_passwd >> /etc/master.passwd</b>
# <b>pwd_mkdb -p /etc/master.passwd</b>
</pre></blockquote>

The last step, <tt>pwd_mkdb</tt> is necessary to rebuild the
<tt>/etc/spwd.db</tt> and <tt>/etc/pwd.db</tt> files.
It also creates a Sixth Edition-style password file (minus encrypted passwords)
at <tt>/etc/passwd</tt> for programs which use it.
OpenBSD uses a stronger encryption for passwords, blowfish, which is very
unlikely to be found on any system which uses full Sixth Edition-style
password files.
To switch over to this stronger encryption, simply have the users run
<tt>passwd</tt> and change their password.
The new password they enter will be encrypted with your default setting
(usually blowfish unless you've edited <tt>/etc/login.conf</tt>).
Or, as root, you can run <tt>passwd <i>username</i></tt>.
@


1.244
log
@trim and rewrite the section on disk quotas a little.  place the example
quota on /home instead of / and, in a rare fit of generosity, bump the
soft limit of ericj from one meg to a whopping gig.

ok tj
@
text
@d36 2
d39 1
a46 3
<li><a href="#locales"          >Character sets and localization</a>
<li><a href="#passwd"           >Converting your Linux password file to
                                 BSD-style</a>
d263 43
d360 117
a829 92

<h2 id="locales">Character sets and localization</h2>

The OpenBSD base system fully supports the ASCII character set and encoding, and
partially supports the UTF-8 encoding of the Unicode character set.
No other encodings or character sets are supported by the base system, but ports
can be used to handle them.

<p>
The level of UTF-8 support and the default encoding configuration vary greatly
with the program or library.
For example, <a href="http://man.openbsd.org/xterm">xterm(1)</a> has full UTF-8
support enabled by default, while the
<a href="http://man.openbsd.org/re_format">regular expression library</a>
does not have any UTF-8 support yet.

<p>
To use the Unicode character set in UTF-8 encoding whereever supported, set the
<tt>LC_CTYPE</tt> environment variable to the value <tt>en_US.UTF-8</tt>:

<ul>
  <li>
    If logging in via <a href="http://man.openbsd.org/xdm">xdm(1)</a>, add
    <tt>export LC_CTYPE="en_US.UTF-8"</tt> to your <tt>~/.xsession</tt> before
    starting the window manager.
    See <a href="faq11.html#CustomizingX">customizing X</a> for more details.
  <li>
    If logging in via the text console, add
    <tt>export LC_CTYPE="en_US.UTF-8"</tt> to your <tt>~/.profile</tt>.
    The text console's UTF-8 support is a work in progress, and some non-ASCII
    characters may not display properly.
</ul>

When logging into remote systems with
<a href="http://man.openbsd.org/ssh">ssh(1)</a>, the <tt>LC_CTYPE</tt>
environment variable is not propagated, and you have to make sure that the local
terminal is set to the character encoding used by the remote server before
starting the ssh(1) client program.
If that encoding is unknown or unsupported by OpenBSD, make sure you use the
default <a href="http://man.openbsd.org/xterm">xterm(1)</a> configuration and
set <tt>LC_CTYPE=en_US.UTF-8</tt> in the remote shell after connecting.

<p>
The OpenBSD base system completely ignores all locale-related environment
variables except <tt>LC_CTYPE</tt>; even <tt>LC_ALL</tt> and <tt>LANG</tt> only
affect the character encoding.
Some ports may respect other <tt>LC_*</tt> variables, but using them or setting
<tt>LC_CTYPE</tt> to any value other than <tt>C</tt>, <tt>POSIX</tt> or
<tt>en_US.UTF-8</tt> is not recommended.

<h2 id="passwd">Converting your Linux password file to BSD-style</h2>

First, figure out if your Linux password file is shadowed or not.
If it is, install <a href="http://www.openwall.com/john/">John the Ripper</a>
from <a href="faq15.html">packages or ports</a> (<tt>security/john</tt>) and
use the "unshadow" utility that comes with it to merge your <tt>passwd</tt>
and <tt>shadow</tt> files into one Sixth Edition-style file.

<p>
Using your Linux password file, we'll call it <tt>linux_passwd</tt>, you
need to add in ::0:0 between fields four and seven.
<a href="http://man.openbsd.org/awk">awk(1)</a> does this for you.

<blockquote><pre>
# <b>awk -F : '{printf("%s:%s:%s:%s::0:0:%s:%s:%s\n", \</b>
> <b>$1,$2,$3,$4,$5,$6,$7); }' linux_passwd > new_passwd</b>
</pre></blockquote>

At this point, you want to edit the <tt>new_passwd</tt> file and remove
the root and other system entries that are already present in your
OpenBSD password file or aren't applicable with OpenBSD (all of them).
Also, make sure there are no duplicate usernames or user IDs between
<tt>new_passwd</tt> and your OpenBSD box's <tt>/etc/passwd</tt>.
The easiest way to do this is to start with a fresh <tt>/etc/passwd</tt>.

<blockquote><pre>
# <b>cat new_passwd >> /etc/master.passwd</b>
# <b>pwd_mkdb -p /etc/master.passwd</b>
</pre></blockquote>

The last step, <tt>pwd_mkdb</tt> is necessary to rebuild the
<tt>/etc/spwd.db</tt> and <tt>/etc/pwd.db</tt> files.
It also creates a Sixth Edition-style password file (minus encrypted passwords)
at <tt>/etc/passwd</tt> for programs which use it.
OpenBSD uses a stronger encryption for passwords, blowfish, which is very
unlikely to be found on any system which uses full Sixth Edition-style
password files.
To switch over to this stronger encryption, simply have the users run
<tt>passwd</tt> and change their password.
The new password they enter will be encrypted with your default setting
(usually blowfish unless you've edited <tt>/etc/login.conf</tt>).
Or, as root, you can run <tt>passwd <i>username</i></tt>.
@


1.243
log
@"changing a user's password" explained vipw(8), passwd(5) and friends
but not actually how to change a user's password.  rename it to
"editing the password file" and rewrite it to read a bit better.

the "adding and deleting users" was not particularly well written and
had a very low content / length ratio.  delete the bulk of it, call it
"managing users and groups" and refer to the relevant man pages.

ok tj
@
text
@d265 2
a266 4
Quotas are used to limit user's space that they have available to them on your
disk drives.
It can be very helpful in situations where you have limited resources.
Quotas can be set by user and/or by group.
d269 3
a271 6
This option is in the GENERIC kernel.
After this, you need to mark in
<a href="http://man.openbsd.org/fstab">fstab(5)</a> the filesystems which will
have quotas enabled.
The keywords <tt>userquota</tt> and <tt>groupquota</tt> should be used to mark
each filesystem that you will be using quotas on.
d273 2
a274 6
created at the root of that filesystem to hold the quota information.
This default can be overridden by specifying the file name with the quota
option in <tt>/etc/fstab</tt>, such as
<tt>userquota=/var/quotas/quota.user</tt>.
Here is an example <tt>/etc/fstab</tt> that has one filesystem with userquotas
enabled, and the quota file in a non-standard location:
d277 1
a277 1
/dev/wd0a / ffs rw,userquota=/var/quotas/quota.user 1 1
d280 3
a282 4
Now it's time to set the user's quotas.
To do so, use <a href="http://man.openbsd.org/edquota">edquota(8)</a>, which
will invoke vi(1) or <tt>$EDITOR</tt> to edit the quotas.
For example:
d288 1
a288 1
This will give you output similar to this:
d292 2
a293 2
/: KBytes in use: 62, limits (soft = 0, hard = 0)
        inodes in use: 25, limits (soft = 0, hard = 0)
d296 6
a301 12
To add limits, edit it to give results like this:

<blockquote><pre>
Quotas for user ericj:
/: KBytes in use: 62, limits (soft = 1000, hard = 1050)
        inodes in use: 25, limits (soft = 0, hard = 0)
</pre></blockquote>

Note that the quota allocation is in 1k blocks.
In this case, the softlimit is set to 1000k, and the hardlimit is set to 1050k.
A softlimit is a limit where the user is just warned when they cross it and
have until their grace period is up to get their disk usage below their limit.
d303 1
a303 1
After the grace period is over, the softlimit is handled as a hardlimit.
d307 1
a307 3
Now that the quotas are set, you need to turn the quotas on.
To do this, use <a href="http://man.openbsd.org/quotaon">quotaon(8)</a>.
For example:
d313 3
a315 28
This will go through <tt>/etc/fstab</tt> to turn on the filesystems with
quota options.
Now that quotas are up and running, you can view them using
<a href="http://man.openbsd.org/quota">quota(1)</a>.
Using a command of "<tt>quota &lt;user&gt;</tt>" will give that user's
information.
When called with no arguments, the quota(1) command will give your quota
statistics.
For example:

<blockquote><pre>
# <b>quota ericj</b>
</pre></blockquote>

Will result in output similar to this:

<blockquote><pre>
Disk quotas for user ericj (uid 1001):
     Filesystem  blocks   quota   limit   grace   files   quota   limit   grace
              /      62    1000    1050              27       0       0
</pre></blockquote>

By default, quotas set in <tt>/etc/fstab</tt> will be started on boot.
To turn them off, use

<blockquote><pre>
# <b>quotaoff -a</b>
</pre></blockquote>
@


1.242
log
@shorten doas section. just keep the minimum and refer to the
documentation instead of repeating it.

ok tj
@
text
@d34 2
a35 2
<li><a href="#vipw"             >Changing a user's password</a>
<li><a href="#AddDelUser"       >Adding and deleting users</a>
d230 1
a230 1
<h2 id="vipw">Changing a user's password</h2>
d232 1
a232 40
If you edit <tt>/etc/passwd</tt> directly, your changes will be lost.
OpenBSD generates <tt>/etc/passwd</tt> dynamically with
<a href="http://man.openbsd.org/pwd_mkdb">pwd_mkdb(8)</a>.
The main password file in OpenBSD is <tt>/etc/master.passwd</tt>.
According to the man page,

<blockquote><pre>
FILES
     /etc/master.passwd  current password file
     /etc/passwd         a 6th Edition-style password file
     /etc/pwd.db         insecure password database file
     /etc/pwd.db.tmp     temporary file
     /etc/spwd.db        secure password database file
     /etc/spwd.db.tmp    temporary file
</pre></blockquote>

In a traditional Unix password file, such as <tt>/etc/passwd</tt>, everything
including the user's encrypted password is available to anyone on the system
and is a prime target for password cracking programs.
4.4BSD introduced the <tt>master.passwd</tt> file, which has an extended format.
It has additional options beyond those provided by <tt>/etc/passwd</tt>, and is
only readable by root.
For faster access to data, the library calls which access this data normally
read <tt>/etc/pwd.db</tt> and <tt>/etc/spwd.db</tt>.

<p>
OpenBSD does come with a tool with which you should edit your password
file.
It is called <a href="http://man.openbsd.org/vipw">vipw(8)</a>.
vipw will use vi (or your favorite editor defined per $EDITOR) to edit
<tt>/etc/master.passwd</tt>.
After you are done editing, it will re-create <tt>/etc/passwd</tt>,
<tt>/etc/pwd.db</tt> and <tt>/etc/spwd.db</tt> as per your changes.
vipw also takes care of locking these files, so that if anyone else
attempts to change them at the same time, they will be denied access.


<h2 id="AddDelUser">Adding and deleting users</h2>

OpenBSD provides two commands for easily adding users to the system:
d235 5
a239 2
  <li><a href="#adduser">adduser(8)</a>
  <li><a href="#user">user(8)</a>
d242 1
a242 15
You can also add users by hand, using
<a href="http://man.openbsd.org/vipw">vipw(8)</a>, but this is more difficult
for most operations.

<p id="adduser">
The easiest way to add a user in OpenBSD is to use the
<a href="http://man.openbsd.org/adduser">adduser(8)</a> script.
You can configure adduser(8) by editing <tt>/etc/adduser.conf</tt>.
adduser(8) allows for consistency checks on <tt>/etc/passwd</tt>,
<tt>/etc/group</tt> and shell databases.
It will create the entries and <tt>$HOME</tt> directories for you.
It can even send a message to the user welcoming them.
Here is an example user, <tt>testuser</tt>, being added to a system.
They will be given the <tt>$HOME</tt> directory <tt>/home/testuser</tt>, made
a member of the group <tt>guest</tt>, and given the shell <tt>/bin/ksh</tt>.
d244 18
a261 198
<blockquote><pre>
# <b>adduser</b>
Use option ``-silent'' if you don't want to see all warnings and questions.

Reading /etc/shells
Check /etc/master.passwd
Check /etc/group

Ok, let's go.
Don't worry about mistakes. There will be a chance later to correct any input.
Enter username []: <b>testuser</b>
Enter full name []: <b>Test FAQ User</b>
Enter shell csh ksh nologin sh [ksh]: <b>ksh</b>
Uid [1002]:
Login group testuser [testuser]: <b>guest</b>
Login group is ``guest''. Invite testuser into other groups: guest no
[no]: <b>no</b>
Login class authpf daemon default staff [default]:
Enter password []:
Enter password again []:

Name:        testuser
Password:    ****
Fullname:    Test FAQ User
Uid:         1002
Gid:         31 (guest)
Groups:      guest
Login Class: default
HOME:        /home/testuser
Shell:       /bin/ksh
OK? (y/n) [y]: <b>y</b>
Added user ``testuser''
Copy files from /etc/skel to /home/testuser
Add another user? (y/n) [y]: <b>n</b>
Goodbye!
</pre></blockquote>

To delete users you should use the
<a href="http://man.openbsd.org/rmuser">rmuser(8)</a> utility.
This will remove all existence of a user.
It will remove any <a href="http://man.openbsd.org/crontab">crontab(1)</a>
entries, their $HOME dir (if it is owned by the user), and their mail.
Of course it will also remove their <tt>/etc/passwd</tt> and
<tt>/etc/group</tt> entries.
Next is an example of removing the user that was added above.
Notice you are prompted for the name, and whether or not to remove the user's
home directory.

<blockquote><pre>
# <b>rmuser</b>
Enter login name for user to remove: <b>testuser</b>
Matching password entry:

testuser:$2a$07$ZWnBOsbqMJ.ducQBfsTKUe3PL97Ve1AHWJ0A4uLamniLNXLeYrEie:1002
:31::0:0:Test FAQ User:/home/testuser:/bin/ksh

Is this the entry you wish to remove? <b>y</b>
Remove user's home directory (/home/testuser)? <b>y</b>
Updating password file, updating databases, done.
Updating group file: done.
Removing user's home directory (/home/testuser): done.
</pre></blockquote>

<h3 id="user">Adding users via user(8)</h3>

These tools are less interactive than the
<a href="http://man.openbsd.org/adduser">adduser(8)</a> command, which makes
them easier to use in scripts.

<p>
The full set of tools is:
<ul>
  <li><a href="http://man.openbsd.org/group">group(8)</a>
  <li><a href="http://man.openbsd.org/groupadd">groupadd(8)</a>
  <li><a href="http://man.openbsd.org/groupdel">groupdel(8)</a>
  <li><a href="http://man.openbsd.org/groupinfo">groupinfo(8)</a>
  <li><a href="http://man.openbsd.org/groupmod">groupmod(8)</a>
  <li><a href="http://man.openbsd.org/user">user(8)</a>
  <li><a href="http://man.openbsd.org/useradd">useradd(8)</a>
  <li><a href="http://man.openbsd.org/userdel">userdel(8)</a>
  <li><a href="http://man.openbsd.org/userinfo">userinfo(8)</a>
  <li><a href="http://man.openbsd.org/usermod">usermod(8)</a>
</ul>

<h4>Actually adding users</h4>

The command <tt>/usr/sbin/user</tt> is just a frontend to the rest of the
<tt>/usr/sbin/user*</tt> commands.
Therefore, the following commands can be added by using <tt>user add</tt>
or <tt>useradd</tt>.
Whichever form you chose doesn't change the results at all.
Remember, since user(8) is not interactive, the easiest way to add users
is with adduser(8).

<p>
useradd(8) is less daunting to use if you know the default settings beforehand.
These settings are located in
<a href="http://man.openbsd.org/usermgmt.conf">usermgmt.conf(5)</a>
and can be viewed by doing:

<blockquote><pre>
$ <b>user add -D</b>
group           users
base_dir        /home
skel_dir        /etc/skel
shell           /bin/csh
inactive        0
expire          Null (unset)
range           1000..60000
</pre></blockquote>

These defaults will be used unless you specify alternatives with the
command-line options.
For example, we want the user to be added to the group <tt>guest</tt>, not
<tt>users</tt>.
One more little hurdle with adding users is that passwords must be specified
on the command-line.
Importantly, the passwords must be encrypted, so you need to use the
<a href="http://man.openbsd.org/encrypt">encrypt(1)</a> utility.
For example:
OpenBSD's passwords use the Blowfish algorithm with 8 rounds by default.
Here is an example to create an encrypted password to give to useradd(8).

<blockquote><pre>
$ <b>encrypt -p -b 8</b>
Enter string:
$2b$08$pvin31BFNxR.qiPTAfizFeeCxrlmBhsZLsAajCwAB1rgFFvl8PRXq
</pre></blockquote>

Now that we have an encrypted password, we are ready to add the user.
We will add the same user with the same specifications as the user
we added <a href="#adduser">above</a>, via adduser(8).

<blockquote><pre>
# <b>user add -p '$2b$08$pvin31BFNxR.qiPTAfizFeeCxrlmBhsZLsAajCwAB1rgFFvl8PRXq' \</b>
> <b>-u 1002 -s /bin/ksh -c "Test FAQ User" -m -g guest testuser</b>
</pre></blockquote>

<b>Note:</b> Make sure to use '&nbsp;' (single quotes) around the password
string, not "&nbsp;" (double quotes) as the shell will interpret these before
sending it to user(8).
In addition to that, make sure you specify the <tt>-m</tt> option if you want
the user's home directory created and the files from <tt>/etc/skel</tt>
copied over.

<p>
To see that the user was created correctly, we can use many different utilities.
Below are a few commands you can use to quickly check that everything was
created correctly.

<blockquote><pre>
$ <b>ls -la /home</b>
total 14
drwxr-xr-x   5 root      wheel   512 May 12 14:29 .
drwxr-xr-x  15 root      wheel   512 Apr 25 20:52 ..
drwxr-xr-x  24 ericj     wheel  2560 May 12 13:38 ericj
drwxr-xr-x   2 testuser  guest   512 May 12 14:28 testuser
$ <b>id testuser</b>
uid=1002(testuser) gid=31(guest) groups=31(guest)
$ <b>finger testuser</b>
Login: testuser                         Name: Test FAQ User
Directory: /home/testuser               Shell: /bin/ksh
Last login Sat Apr 22 16:05 (EDT) on ttyC2
No Mail.
No Plan.
</pre></blockquote>

In addition to these commands, user(8) provides its own utility to show user
characteristics, called userinfo(8).

<blockquote><pre>
$ <b>userinfo testuser</b>
login   testuser
passwd  *
uid     1002
groups  guest
change  Wed Dec 31 19:00:00 1969
class
gecos   Test FAQ User
dir     /home/testuser
shell   /bin/ksh
expire  Wed Dec 31 19:00:00 1969
</pre></blockquote>

<h4>Removing users</h4>

To remove users with the user(8) hierarchy of commands, you will use userdel(8).
This is a very simple yet usable command.
To remove the user created in the last example, simply run:

<blockquote><pre>
# <b>userdel -r testuser</b>
</pre></blockquote>

Notice the <tt>-r</tt> option, which must be specified if you want the users
home directory to be deleted as well.
Alternatively, you can specify <tt>-p</tt> rather than <tt>-r</tt> and this will
lock the user's account, but not remove any information.
@


1.241
log
@rework the first sections of faq10

- remove section on su and group wheel
- shorten duplicating filesystems
- trim a lot of rc(8) bits that just duplicated the manual

ok tj
@
text
@d183 2
a184 4
<h3>What is doas(1)?</h3>

<a href="http://man.openbsd.org/doas">doas(1)</a> allows a user to temporarily
run commands as another user.
d188 1
a188 1
$ <b>doas fdisk sd1</b>
d191 2
a192 9
allows you to run the command
<a href="http://man.openbsd.org/fdisk">fdisk(8)</a> as if you were root.
Key words there are "appropriately configured" of course.
You don't want average users to be able to get root privileges for any command
they wish to run!
Typically, though certainly not required, users in the "wheel" group are given
permission to run commands with doas.

<h3>Why doas(1)?</h3>
d194 1
d198 5
a202 44
permitting a certain subset of your users (for example, members of the
<tt>wheel</tt> group) to run predetermined (often all) commands as another user
(often root).
Now, anyone can run administrative commands, only needing to authenticate as
themselves.
They do not need to use the root account or know the root password.

<p>
An added advantage of "doas" is all activity is logged.
It is possible to find out who ran an application.

<p>
Using a properly configured doas(1) on OpenBSD, one can completely disable the
root account, eliminating all root password management issues.

<p>
It is also considered good practice by many to use doas when absolutely
necessary to run a command as root, rather than sitting at a root
console prompt.
This way, an erroneously typed command is less likely to have catastrophic
results.
However, this is subject to some debate.
It is possible to cause as much chaos and havoc with a "finger-memory"
(or just incorrect command) invocation of doas as it is when logged in as root.
For this reason, we do not blindly side with those that chant "always
use doas, never use root!" or spend hours making things happen without root.
Notably, if you set doas to not require confirmation of your
password, any script or application running as you can invoke doas(1)
to make any changes to your system as root.
For this reason, for personal systems, it is probably better to either just use
<a href="http://man.openbsd.org/su">su(1)</a> to elevate oneself to root status,
or use doas(1) with the password option.

<h3>"Sounds like sudo!"</h3>

Yes, doas(1) was inspired by <a href="http://www.sudo.ws/">sudo</a>.
It is OpenBSD's replacement for the sudo command.

<p>
The complexity of sudo had prevented the importing of the most current versions,
and the complexity of the sudoers config file has discouraged many users from
doing anything other than uncomment one line in the conf file.
In short, sudo's code is too complicated for the way most users use it,
and its configuration is too difficult for more advanced uses.
d205 1
a205 3
doas(1) is intended to have a simpler, and thus hopefully more secure,
code base and configuration file.
From a user standpoint, the two are very similar.
a207 5
For those needing the functionality of sudo, it's available as a
<a href="faq15.html">package</a>.

<h3>Using doas(1) -- basic doas.conf(5)</h3>

d212 1
a212 1
permit keepenv { PKG_PATH ENV PS1 SSH_AUTH_SOCK } :wheel
d221 2
a222 19
A more sophisticated doas.conf(5) file which would permit you to build OpenBSD
from source using doas(1) without entering your password every time might be:

<blockquote><pre>
permit nopass keepenv { PKG_PATH ENV PS1 SSH_AUTH_SOCK } :wheel
permit nopass keepenv { \
    FTPMODE PKG_CACHE PKG_PATH SM_PATH SSH_AUTH_SOCK \
    DESTDIR DISTDIR FETCH_CMD FLAVOR GROUP MAKE MAKECONF \
    MULTI_PACKAGES NOMAN OKAY_FILES OWNER PKG_DBDIR \
    PKG_DESTDIR PKG_TMPDIR PORTSDIR RELEASEDIR SHARED_ONLY \
    SUBPACKAGE WRKOBJDIR SUDO_PORT_V1 } :wsrc
</pre></blockquote>

While the <tt>nopass</tt> option makes using doas(1) very easy, it can also be
invoked by any script or program, without the user's knowledge or permission.
For this reason, systems used as general purpose workstations should probably
not use the <tt>nopass</tt> option, if using doas(1) at all.
The alternative is using <a href="#wheel">su(1)</a> and the root password
to use the root account.
d225 4
a228 13
If you don't like the idea of any script or program you run being able to
silently invoke doas(1) to run something as root, but you find typing your
password over and over annoying, you may want to create a user for
administrative tasks, such as "admin," and have a configuration file like this:

<blockquote><pre>
permit :wheel as admin
permit nopass admin
</pre></blockquote>

Now, anyone who is in the wheel group can become "admin" with just one entry
of their password, and then admin can run the commands they wish without a
password until they drop back to their normal user.
@


1.240
log
@tweak the section on characters and locales a little: use the new faq
formatting style and condense some sentences and vertical space here
and there.
@
text
@d31 1
a31 4
<li><a href="#wheel"            >When I try to su to root it says I'm in the
                                 wrong group</a>
<li><a href="#DupFS"            >Duplicating filesystems with dump and
                                 restore</a>
d52 1
a52 1
<h2 id="wheel">When I try to su to root it says I'm in the wrong group</h2>
d54 3
a56 28
On OpenBSD, users who are in the <tt>wheel</tt> group are allowed to use
<a href="http://man.openbsd.org/su">su(1)</a>
to become root.
Otherwise, the user will receive an error.

<p>
If you are creating new users with
<a href="http://man.openbsd.org/adduser">adduser(8)</a>,
you can add them to the <tt>wheel</tt> group by answering <tt>wheel</tt> at the
<tt>Invite <i>user</i> into other groups:</tt> prompt.
Existing users must be added to the <tt>wheel</tt> group by hand.
Here is an example of a <tt>/etc/group</tt> entry which has had the user
<tt>ericj</tt> added to the <tt>wheel</tt> group:

<blockquote><pre>
wheel:*:0:root,ericj
</pre></blockquote>

If you want to give access to superuser privileges without adding users to the
<tt>wheel</tt> group, you can use <a href="#doas">doas(1)</a>.

<h2 id="DupFS">Duplicating filesystems with dump and restore</h2>

To duplicate your filesystem, use
<a href="http://man.openbsd.org/dump">dump(8)</a> and
<a href="http://man.openbsd.org/restore">restore(8)</a>.
For example, to duplicate everything under directory <tt>SRC</tt> to directory
<tt>DST</tt>, do:
d62 1
a62 5
dump(8) is designed to give you plenty of backup capabilities, and it may be an
overkill if you just want to duplicate part of a (or an entire) filesystem.
The command <a href="http://man.openbsd.org/tar">tar(1)</a> may be faster for
this operation.
The format looks very similar:
d65 1
a65 1
# <b>cd /SRC && tar cf -  . | (cd /DST && tar xpf - )</b>
d70 7
a76 60
OpenBSD itself uses an <a href="http://man.openbsd.org/rc">rc(8)</a> style
startup.
This uses a few key files for startup.

<ul>
  <li><tt>/etc/rc</tt>:
    Main script.
    Should not be edited.
  <li><tt>/etc/rc.conf</tt>:
    Configuration file used by <tt>/etc/rc</tt> to set startup parameters for
    the system.
    Should not be edited.
  <li><tt>/etc/rc.conf.local</tt>:
    Configuration file that overrides settings in <tt>/etc/rc.conf</tt> so you
    don't have to touch <tt>/etc/rc.conf</tt> itself, which is important when
    upgrading your system.
  <li><tt>/etc/netstart</tt>:
    Script used to initialize the network.
    Shouldn't be edited.
  <li><tt>/etc/rc.local</tt>:
    Script used for local administration.
    This is where new daemons or host specific information can be set.
  <li><tt>/etc/rc.securelevel</tt>:
    Script which runs commands that must be run before the security level
    changes.
    See <a href="http://man.openbsd.org/init">init(8)</a>
  <li><tt>/etc/rc.shutdown</tt>:
    Script run on shutdown.
    Put anything you want done before shutdown in this file.
    See <a href="http://man.openbsd.org/rc.shutdown">rc.shutdown(8)</a>
</ul>

<h3>How does rc(8) work?</h3>

The main files a system administrator should concentrate on are
<tt>/etc/rc.conf</tt> (for guidance), <tt>/etc/rc.conf.local</tt> (for changes),
<tt>/etc/rc.local</tt> and <tt>/etc/rc.shutdown</tt>.
To get a look of how the rc(8) procedure works, here is the flow:

<p>
After the kernel is booted, <tt>/etc/rc</tt> is started:
<ul>
  <li>Filesystems are checked
  <li>Default configuration variables are read in from
      <tt>/etc/rc.conf</tt>, then local changes to those variables are read from
      <tt>/etc/rc.conf.local</tt>.
      Settings in <tt>rc.conf.local</tt> will override those in
      <tt>rc.conf</tt>.
  <li>Filesystems are mounted
  <li><tt>/tmp</tt> is cleared out and any editor files are preserved
  <li>The network is configured via <tt>/etc/netstart</tt>
  <ul>
    <li>Network interfaces are put up
    <li>Your hostname, domain name, etc are set
  </ul>
  <li>System daemons are started
  <li>Various other checks (quotas, savecore, etc) are performed
  <li><tt>/etc/rc.firsttime</tt> runs, followed by <tt>/etc/rc.local</tt>
  <li>Local and package scripts in <tt>/etc/rc.d</tt> are processed and run
</ul>
a92 3
This doesn't mean that you must run that daemon or service with those flags.
Read the relevant man page to see how you can have that daemon or service start
up in any way you like.
d95 1
a95 1
We strongly suggest you do not alter <tt>/etc/rc.conf</tt> directly.
a131 5
A normal boot with no errors would show a line like this:

<blockquote><pre>
Starting daemonx
</pre></blockquote>
d135 1
a135 2
OpenBSD's system daemons ("services") are started, stopped and
controlled by
d143 2
a144 2
add-in packages is managed by the <tt>pkg_scripts</tt> environment variable,
which would be set in <tt>/etc/rc.conf.local</tt>.
a155 5
To help make sure your system will come up as expected on the next boot, the
<tt>rc.d</tt> scripts will not run their daemon if the appropriate variable is
not defined.
You can, of course, manually invoke <tt>/usr/sbin/httpd</tt> directly with
whatever options you wish, if you wish to run the program manually.
a179 6

<h3>rc.shutdown</h3>

<tt>/etc/rc.shutdown</tt> is a script that is run at shutdown.
Anything you want done before the system shuts down should be added to this
file.
@


1.239
log
@Rewrite most of the "#locales" section to remove the about 10 worst
instances of outdated, inaccurate, and misleading information.
In particular, kill all the half-wrong, sweeping generalizations.
Stop recommending locale(1) -a, it is a mostly useless stub only
needed for POSIX compatibility.

I suspect the paragraph about the text console is also mostly lies,
but don't know enough about it to touch it.
@
text
@d1131 4
a1134 5
The OpenBSD base system fully supports the ASCII character set and
encoding and partially supports the UTF-8 encoding of the Unicode
character set.
No other encodings or character sets are supported by the base
system, but ports can be used to handle them.
d1137 6
a1142 8
Both the levels of UTF-8 support and the default encoding configurations
vary greatly depending on the specific program or library in question.
Some programs, most notably
<a href="http://man.openbsd.org/xterm">xterm(1)</a>, fully
support UTF-8 and run in full-fledged UTF-8 mode by default.
Others, most notably the
<a href="http://man.openbsd.org/re_format">regular expression
library</a>, do not provide any UTF-8 support yet.
d1145 2
a1146 3
To use the Unicode character set in UTF-8 encoding whereever
supported, set the <tt>LC_CTYPE</tt> environment variable to the
value <tt>en_US.UTF-8</tt>, for example as follows:
d1150 4
a1153 11
    If logging in via <a href="http://man.openbsd.org/xdm">xdm(1)</a>, add a
    line such as

    <blockquote><pre>
    export LC_CTYPE="en_US.UTF-8"
    </pre></blockquote>

    to your <tt>~/.xsession</tt> before starting the window manager.
    See the section on <a href="faq11.html#CustomizingX">customizing X</a>
    for more details.
    <p>
d1155 4
a1158 9
    If logging in via the text console, add a line such as 

    <blockquote><pre>
    export LC_CTYPE="en_US.UTF-8"
    </pre></blockquote>

    to your <tt>~/.profile</tt>.
    Note that the text console's UTF-8 support is a work in progress, and some
    non-ASCII characters may not display properly.
a1160 1
<p>
d1163 6
a1168 8
environment variable is not propagated, and you have to make sure that
the local terminal is set to the character encoding used by the
remote server <em>before</em> starting the ssh(1) client program.
If that encoding is unknown or unsupported by OpenBSD,
as an imperfect workaround, make sure you use the default
<a href="http://man.openbsd.org/xterm">xterm(1)</a> configuration
and set <tt>LC_CTYPE=en_US.UTF-8</tt> in the remote shell <em>after</em>
connecting.
d1171 6
a1176 8
The OpenBSD base system completely ignores all locale-related
environment variables except <tt>LC_CTYPE</tt>; even <tt>LC_ALL</tt>
and <tt>LANG</tt> affect the character encoding only.
Some ports may respect other <tt>LC_*</tt> variables, but using
them or setting <tt>LC_CTYPE</tt> to any value other than
<tt>C</tt>, <tt>POSIX</tt>, or <tt>en_US.UTF-8</tt> is not
recommended because the effects will be sparse and feel erratic
at best.
@


1.238
log
@expand on the "applying patches" section by detailing how base and port
updates are handled in the current/stable/release branches.

ok tb
@
text
@a47 5
<ul>
  <li><a href="#charset"        >Configuring the active character set</a>
  <li><a href="#nls"            >Changing the language used in application
                                 messages</a>
</ul>
d1131 20
a1150 19
OpenBSD uses the ASCII character set by default.
It also supports the Unicode (UTF-8) character set.

<h3 id="charset">Configuring the active character set</h3>

To use the UTF-8 character set, the <tt>LC_CTYPE</tt> environment variable
must be set to the name of a supported locale.
Note that <tt>LC_CTYPE</tt> will only affect the character set available
to applications; it will not change the language used for application messages.

<p>
The list of supported locales can be obtained by running the command:

<blockquote><pre>
$ <b>locale -a</b>
</pre></blockquote>

The <tt>LC_CTYPE</tt> environment variable can be set in one of the following
ways:
a1163 3
    This enables the UTF-8 character set and will also cause applications such
    as <a href="http://man.openbsd.org/xterm">xterm(1)</a> to enable UTF-8 mode
    by default. 
a1176 3
A growing number of utilities in the base system support UTF-8.
Those that don't will use ASCII in the UTF-8 locale.

d1180 18
a1197 17
environment variable is not propagated and will need to be manually set to the
same value used by the local terminal.

<h3 id="nls">Changing the language used in application messages</h3>

The language used for application messages can be changed by setting the
<tt>LC_MESSAGES</tt> environment variable to the name of a supported locale.
This can be done in the same way as described for <tt>LC_CTYPE</tt>
<a href="#charset">above</a>.
Both <tt>LC_MESSAGES</tt> and <tt>LC_CTYPE</tt> should be set to the same value.

<p>
Few utilities in the base system support languages other than English at
this time.
However, many programs from the ports collection support localized messages in
various languages. They will fall back to English if the desired language is
not available.
@


1.237
log
@remove faq9:
- merge tips for users of other operating systems to faq1
- the linux password hack is now part of faq10
- reference to ext2 is gone since that's contained in faq14 already
- remove philosophical musings on obsd on the desktop

input and ok tj
@
text
@a39 1
<li><a href="#Patches"          >Applying errata patches</a>
d55 1
a779 144
<h2 id="Patches">Applying errata patches</h2>

Even with OpenBSD, bugs happen.
Some bugs may lead to reliability issues, i.e., something may cause the system
to stop functioning as desired.
Other bugs may lead to security vulnerabilities that may allow others to "use"
your computer in unintended and unauthorized ways.
When a critical bug is found, the fix will be committed to the <i>-current</i>
source tree, and patches will be released for the
<a href="faq5.html#Flavors">supported releases</a> of OpenBSD.
These patches appear on the <a href="../errata.html">errata web page</a>, and
are separated into "common" errata that impact all
<a href="../plat.html">platforms</a>, and errata that impact only one or more,
but not all, platforms.

<p>
Note, however, that patches aren't released for new features or additional
hardware support for OpenBSD, and are only published for important reliability
fixes or security problems that should be addressed right away on impacted
systems (which is often NOT all systems, depending on their purpose).

<p>
There are three ways to update your system with patched code:

<ul>
  <li><b>Upgrade your system to <a href="current.html"><i>-current</i></a>.</b>
    As all fixes are applied to the <i>-current</i> code base, updating your
    system to the latest snapshot is a very good way to apply fixed code.
    However, running <i>-current</i> is not for everyone.
  <li><b>Update your system to <a href="../stable.html"><i>-stable</i></a>.</b>
    This is done by fetching or updating your source tree using the appropriate
    <i>-stable</i> branch, then recompiling the kernel and userland files.
    Overall, this is probably the easiest way, though it takes longer (as the
    entire system gets recompiled) and a complete source checkout can take a
    long time if you have limited bandwidth available.
  <li><b>Patch, compile and install individual impacted files.</b>
    This is what we will use for our example below.
    While this requires less bandwidth and typically less time than an entire
    cvs(1) checkout/update and source code compilation, this is sometimes the
    most difficult option, as there is no one universal set of instructions to
    follow.
    Sometimes you must patch, recompile and install one application.
    Other times, you might have to recompile entire sections of the tree if the
    problem is in a library file.
</ul>

Again, patching individual files is not always simple, so give serious thought
to following the <a href="../stable.html"><i>-stable</i></a> (or "patch")
branch of OpenBSD.
Mixing and matching of patching solutions can be done if you understand how
everything works, but new users should pick one method and stick with it.

<h3>How are "errata" patches different from what is in the CVS tree?</h3>

All patches posted to the <a href="../errata.html">errata web page</a> are
patches directly against the indicated release's source tree.
Patches against the latest CVS tree might also include other changes that
wouldn't be wanted on a release system.
This is important: If you have installed a snapshot, checked out the source
trees at the time you obtained that snapshot and attempt to patch it using a
published patch, you may well find the patch doesn't apply, as that code
may have changed.

<h3>Applying patches</h3>

Patches for OpenBSD are distributed as unified diffs, which are text files that
hold differences to the original source code.
They are <b>NOT</b> distributed in binary form.
This means that, to apply a patch, you must have the source code from the
<i>-release</i> version of your system available.
In general, it is advisable to acquire the entire source tree before applying
a patch.
If you are running a release from an official CD-ROM, the source trees are
available as files on disk three, but these can also be obtained from the
<a href="../ftp.html">mirrors</a>.

<p>
Whether you download and untar the source trees or fetch them from CVS,
it's best to <a href="faq5.html#wsrc">avoid using root</a> where possible.
Installing the new binaries will be the only step that requires it.

<p>
For our example here, we will look at patch 011 for OpenBSD 5.6, dealing with
<a href="http://man.openbsd.org/pppoe">pppoe(4)</a> connections.
Each patch is cryptographically signed with the
<a href="http://man.openbsd.org/signify">signify(1)</a> tool and contains
instructions on how to apply it properly.
We will assume you have put this patch into your current working directory.

<blockquote><pre>
$ <b>signify -Vep /etc/signify/openbsd-56-base.pub -x 011_pppoe.patch.sig \</b>
  <b>-m - | (cd /usr/src && patch -p0)</b>

Hmm...  Looks like a unified diff to me...
The text leading up to this was:
--------------------------
|
|OpenBSD 5.6 errata 11, Dec 5, 2014:
|
|An incorrect memcpy call would result in corrupted MAC addresses when
|using PPPOE.
|
|Apply patch using:
|
|    signify -Vep /etc/signify/openbsd-56-base.pub -x 011_pppoe.patch.sig \
|        -m - | (cd /usr/src && patch -p0)
|
|Then build and install a new kernel.
|
|Index: sys/net/if_ethersubr.c
|===================================================================
|RCS file: /cvs/src/sys/net/if_ethersubr.c,v
|retrieving revision 1.174
|diff -u -p -r1.174 if_ethersubr.c
|--- sys/net/if_ethersubr.c     12 Jul 2014 18:44:22 -0000      1.174
|+++ sys/net/if_ethersubr.c     1 Dec 2014 17:48:55 -0000
--------------------------
Patching file sys/net/if_ethersubr.c using Plan A...
Hunk #1 succeeded at 673.              <i>&lt;-- Look for this message!</i>
done
</pre></blockquote>

Note the "<tt>Hunk #1 succeeded</tt>" message above.
This indicates the patch was applied successfully.
Many patches are more complex than this one, and will involve multiple hunks
and multiple files, in which case you should verify that all hunks succeeded
on all files.
If they did not, it normally means your source tree was different in some way
from the release source tree the patch was created from, or you didn't follow
instructions carefully, or your patch was mangled.
Patches are very sensitive to "white space" -- copying and pasting from your
browser will often change tab characters into spaces or otherwise alter the
white space of a file, making it not apply.

<p>
At this point, you can <a href="faq5.html#Bld">build and install</a> the
new kernel, then reboot the system as normal.

<p>
Not all patches are for the kernel.
In some cases, you will have to rebuild individual utilities.
At other times, will require recompiling all utilities statically linked to a
patched library.

d1250 133
@


1.236
log
@remove man page connotations from section titles. there are man page links
directly below them in almost every instance.

ok tb
@
text
@d54 2
d1351 43
@


1.235
log
@remove some mentions of inetd and ftpd, replacing them with more modern
alternatives where applicable.

discussed with sthen tb
@
text
@d33 4
a36 4
<li><a href="#DupFS"            >Duplicating filesystems with dump(8) and
                                 restore(8)</a>
<li><a href="#rc"               >The rc(8) system startup script</a>
<li><a href="#doas"             >OpenBSD's sudo replacement, doas(1)</a>
d81 1
a81 1
<h2 id="DupFS">Duplicating filesystems with dump(8) and restore(8)</h2>
d103 1
a103 1
<h2 id="rc">The rc(8) system startup script</h2>
d289 1
a289 1
<h2 id="doas">OpenBSD's sudo replacement, doas(1)</h2>
@


1.234
log
@- simplify faq section titles, making the actual topics more prevalent
- merge flash and java sections into a single browser plugin section
- correct some tab/space inconsistency
- fix invalid html

from christian heckendorf <mbie at ulmus.me>

discussed with tb
@
text
@d166 1
a166 1
<h3>Starting Daemons and Services that come with OpenBSD</h3>
d169 2
a170 4
by variables defined in the <tt>/etc/rc.conf</tt> configuration file.
Take a look at the
<a href="http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/etc/rc.conf?content-type=text/plain">
/etc/rc.conf</a> file.
d174 1
a174 1
ftpd_flags=NO           # set to NO if ftpd is running out of inetd
d177 4
a180 5
A line like this shows that <a href="http://man.openbsd.org/ftpd">ftpd(8)</a>
is not to start up with the system (at least not as a daemon via rc(8);
ftpd is often run out of <a href="http://man.openbsd.org/inetd">inetd(8)</a>).
Each line has a comment showing you the flags for common usage of that
daemon or service.
d206 1
a206 1
For example, I've installed a daemon which lies at
@


1.233
log
@adjust the formatting to the other faq pages. mostly whitespace changes.
@
text
@d33 4
a36 4
<li><a href="#DupFS"            >How do I duplicate a filesystem?</a>
<li><a href="#rc"               >How do I start daemons with the system?</a>
<li><a href="#doas"             >Introducing doas(1) - or - what happened to
                                 sudo?</a>
d38 1
a38 1
<li><a href="#AddDelUser"       >How do I add or delete a user?</a>
d40 1
a40 1
<li><a href="#Patches"          >Applying patches in OpenBSD</a>
d81 1
a81 1
<h2 id="DupFS">How do I duplicate a filesystem?</h2>
d103 1
a103 1
<h2 id="rc">How do I start daemons with the system?</h2>
d292 1
a292 1
<h2 id="doas">Introducing doas(1) - or - What happened to sudo?</h2>
d460 1
a460 1
<h2 id="AddDelUser">How do I add or delete a user?</h2>
d781 1
a781 1
<h2 id="Patches">Applying patches in OpenBSD</h2>
@


1.232
log
@replace a few more rc.conf.local examples with rcctl.
@
text
@d95 2
a96 3
The command
<a href="http://man.openbsd.org/tar">tar(1)</a>
may be faster for this operation.
d105 2
a106 3
OpenBSD itself uses an
<a href="http://man.openbsd.org/rc">rc(8)</a>
style startup.
d179 1
a179 2
A line like this shows that
<a href="http://man.openbsd.org/ftpd">ftpd(8)</a>
d181 1
a181 2
ftpd is often run out of
<a href="http://man.openbsd.org/inetd">inetd(8)</a>).
d196 1
a196 2
For example, to start the
<a href="http://man.openbsd.org/apmd">apmd(8)</a>
d253 3
a255 3
<a href="http://man.openbsd.org/httpd">httpd(8)</a>
unless <tt>/etc/rc.conf</tt> or <tt>/etc/rc.conf.local</tt> contains a line
defining the "<tt>httpd_flags</tt>" variable.
d266 2
a267 2
<a href="http://man.openbsd.org/rc.subr">rc.subr(8)</a>
script, which manages most of the standard way of doing these tasks.
d296 2
a297 2
<a href="http://man.openbsd.org/doas">doas(1)</a>
allows a user to temporarily run commands as the root (or other) user.
d305 1
a305 2
<a href="http://man.openbsd.org/fdisk">fdisk(8)</a>
as if you were root.
d316 3
a318 3
<a href="http://man.openbsd.org/doas">doas(1)</a> solves
this problem by permitting a certain subset of your users (for example, members
of the "wheel" group) to run predetermined (often all) commands as another user
d329 2
a330 3
Using a properly configured doas(1) on OpenBSD, one can completely
disable the root account, eliminating all root password management
issues.
d346 3
a348 5
For this reason, for personal systems, it is probably better to either
just use
<a href="http://man.openbsd.org/su">su(1)</a>
to elevate oneself to root status, or use doas(1) with the password
option.
d373 2
a374 3
A very basic
<a href="http://man.openbsd.org/doas.conf">doas.conf(5)</a>
might look like this:
d451 1
a451 2
It is called
<a href="http://man.openbsd.org/vipw">vipw(8)</a>.
d470 2
a471 2
<a href="http://man.openbsd.org/vipw">vipw(8)</a>,
but this is more difficult for most operations.
d475 1
a475 2
<a href="http://man.openbsd.org/adduser">adduser(8)</a>
script.
d523 1
a523 2
<a href="http://man.openbsd.org/rmuser">rmuser(8)</a>
utility.
d525 1
a525 2
It will remove any
<a href="http://man.openbsd.org/crontab">crontab(1)</a>
d551 2
a552 2
<a href="http://man.openbsd.org/adduser">adduser(8)</a>
command, which makes them easier to use in scripts.
d603 1
a603 2
<a href="http://man.openbsd.org/encrypt">encrypt(1)</a>
utility.
d694 2
a695 2
<a href="http://man.openbsd.org/fstab">fstab(5)</a>
the filesystems which will have quotas enabled.
d711 2
a712 3
To do so, use
<a href="http://man.openbsd.org/edquota">edquota(8)</a>,
which will invoke vi(1) or <tt>$EDITOR</tt> to edit the quotas.
d745 1
a745 2
To do this, use
<a href="http://man.openbsd.org/quotaon">quotaon(8)</a>.
d872 1
a872 1
 <b> -m - | (cd /usr/src && patch -p0)</b>
d941 2
a942 3
<a href="http://man.openbsd.org/master.passwd">master.passwd(5)</a>
before you can use it, for example to authenticate
system users.
d947 4
a950 4
See <a href="http://man.openbsd.org/yp">yp(8)</a>
for an overview of the available manual pages.
Be careful, some operating systems contain directory services bearing
similar names but all the same being incompatible, for example NIS+.
d956 2
a957 3
For example, you can use the <tt>sysutils/login_ldap</tt> port
when you choose the former, while the
<a href="http://man.openbsd.org/ypldap">ypldap(8)</a>
d1004 1
a1004 2
    Use the
    <a href="http://man.openbsd.org/domainname">domainname(1)</a>
d1107 1
a1107 2
    <a href="http://man.openbsd.org/yppush">yppush(8)</a>
    right now.
d1111 1
a1111 2
    YP uses
    <a href="http://man.openbsd.org/rpc">rpc(3)</a>
d1237 8
a1244 9
The second part of configuring a YP client
involves editing local configuration files
such that certain YP maps get used by various system facilities.
Not all servers serve all standard maps supported by the operating system,
some servers serve additional non-standard maps,
and you are by no means compelled to use all those maps.
Which of the available maps shall or shall not be used,
and for which purposes they shall be used, is fully at the discretion
of the client host's system administrator.
d1253 3
a1255 3
    If you want to include all user accounts from the YP domain,
    append the default YP marker to the master password file and rebuild
    the password database:
d1268 2
a1269 2
    If you want to include all groups from the YP domain,
    append the default YP marker to the group file:
d1289 1
a1289 2
to applications; it will not change the language used for application
messages.
d1298 2
a1299 2
The <tt>LC_CTYPE</tt> environment variable can be set in one of the
following ways:
d1302 3
a1304 4
<li>
If logging in via
<a href="http://man.openbsd.org/xdm">xdm(1)</a>,
add a line such as
d1306 3
a1308 3
<blockquote><pre>
export LC_CTYPE="en_US.UTF-8"
</pre></blockquote>
d1310 9
a1318 6
to your <tt>~/.xsession</tt> before starting the window manager.
See the section on <a href="faq11.html#CustomizingX">customizing X</a>
for more details.
This enables the UTF-8 character set and will also cause applications such
as <a href="http://man.openbsd.org/xterm">xterm(1)</a>
to enable UTF-8 mode by default.
d1320 3
a1322 11
<p>
<li>
If logging in via the text console, add a line such as

<blockquote><pre>
export LC_CTYPE="en_US.UTF-8"
</pre></blockquote>

to your <tt>~/.profile</tt>.
Note that the text console's UTF-8 support is a work in progress, and some
non-ASCII characters may not display properly.
d1324 3
a1328 1
<p>
d1334 3
a1336 3
<a href="http://man.openbsd.org/ssh">ssh(1)</a>,
the <tt>LC_CTYPE</tt> environment variable is not propagated and will need
to be manually set to the same value used by the local terminal.
@


1.231
log
@add a link to the wsrc instructions in the "applying patches" section
and remove some redundant text.

with tb
@
text
@d194 2
a195 4
Instead, use the
<a href="http://man.openbsd.org/rcctl">rcctl(8)</a>
utility to maintain the <tt>/etc/rc.conf.local</tt> file or create and edit it
by hand.
a209 20
The syntax is very straightforward.

<p>
If you want to do it by hand, copy just the lines you need to change from
<tt>/etc/rc.conf</tt> and adjust them as you like.

<p>
For example, here is the default line pertaining to
<a href="http://man.openbsd.org/httpd">httpd(8)</a>.

<blockquote><pre>
httpd_flags=NO
</pre></blockquote>

Here you can see that starting up httpd normally requires no flags, so a line
like <tt>httpd_flags=""</tt> added to <tt>/etc/rc.conf.local</tt> will do the
job.
But to start httpd with options such as <tt>-v</tt>, you would need a line like
<tt>httpd_flags="-v"</tt> instead.

d1136 1
a1136 5
    To do so, edit
    <a href="http://man.openbsd.org/rc.conf.local">rc.conf.local(8)</a>
    and set <tt>portmap_flags=""</tt>.
    This will start the portmapper on next boot.
    You can avoid rebooting by also starting it manually:
d1139 1
a1139 1
    # <b>echo 'portmap_flags=""' >> /etc/rc.conf.local</b>
d1180 1
a1180 1
    # <b>echo 'yppasswdd_flags="-d /etc/yp/src/puffynet"' >> /etc/rc.conf.local</b>
d1184 2
a1185 2
    In case you left the source directory at the default <tt>/etc</tt>,
    just use <tt>yppasswdd_flags=""</tt>.
d1219 1
a1219 1
    # <b>echo 'portmap_flags=""' >> /etc/rc.conf.local</b>
@


1.230
log
@if you remove option QUOTA from your kernel, that's your problem
@
text
@d893 7
a899 3
available as files on disk 3, and these can also be downloaded from the
<a href="../ftp.html">HTTP mirrors</a>.
We will assume you have the entire tree checked out.
d904 4
a907 4
Without this patch, MAC addresses could get corrupted.
People using PPPOE <i>needed</i> this patch, however those who didn't may have
had no particular need to install it.
Let's look at the patch:
d910 2
a911 38
# <b>more 011_pppoe.patch.sig</b>
Apply patch using:

    signify -Vep /etc/signify/openbsd-56-base.pub -x 011_pppoe.patch.sig \
        -m - | (cd /usr/src && patch -p0)

Then build and install a new kernel.

Index: sys/net/if_ethersubr.c
===================================================================
RCS file: /cvs/src/sys/net/if_ethersubr.c,v
retrieving revision 1.174
diff -u -p -r1.174 if_ethersubr.c
--- sys/net/if_ethersubr.c	12 Jul 2014 18:44:22 -0000	1.174
+++ sys/net/if_ethersubr.c	1 Dec 2014 17:48:55 -0000
@@@@ -673,7 +673,12 @@@@ decapsulate:
 			goto done;

 		eh_tmp = mtod(m, struct ether_header *);
-		memcpy(eh_tmp, eh, sizeof(struct ether_header));
+		/*
+		 * danger!
+		 * eh_tmp and eh may overlap because eh
+		 * is stolen from the mbuf above.
+		 */
+		memmove(eh_tmp, eh, sizeof(struct ether_header));
 #ifdef PIPEX
 		if (pipex_enable) {
 			struct pipex_session *session;
</pre></blockquote>

As you will note, the top of the patch includes brief instructions on
applying it.
Patches are cryptographically signed with the
<a href="http://man.openbsd.org/signify">signify(1)</a>
tool.
We will assume you have put this patch into your current working directory,
in which case the following steps are used:
a912 3
<blockquote><pre>
# <b>signify -Vep /etc/signify/openbsd-56-base.pub -x 011_pppoe.patch.sig \ </b>
> <b> -m - | (cd /usr/src && patch -p0)</b>
a962 12
Follow the guidance in the header of the patch and, if uncertain, rebuild the
entire system.

<p>
Patches that are irrelevant to your particular system need not be
applied -- usually.
For example, if you did not use PPPOE connections on your system, you would not
benefit from the above patch.
However, patches are assumed to be applied "in order" -- it is possible that a
later patch is dependent upon an earlier one.
Be aware of this if you elect to "pick and choose" which patches you apply.
If in doubt, apply them all in order.
@


1.229
log
@delete section numbers. this will make adding and removing content a lot
less work.
@
text
@a728 2
The first step to setting up quotas is to make sure that <tt>option QUOTA</tt>
is in your <a href="faq5.html#Options">kernel configuration</a>.
@


1.228
log
@reorganize 5.3 - building from source:

simply explain the preparation steps and refer to release(8) instead
of duplicating its contents in a much more verbose fashion.

similarly, don't repeat all the instructions from anoncvs.html.
refer to it, keep the tips on running cvs without root and stick to
doing -current as an example.

move the cvs tips to the end of the page for now.
@
text
@d9 1
a9 1
<title>10 - System Management</title>
a10 1
<meta name= "description"   content= "OpenBSD FAQ 10 - System Management">
d23 1
a23 1
<font color="#e00000">FAQ 10 - System Management</font>
d31 11
a41 12
<li><a href="#wheel"            >10.1 - When I try to su to root it says that
                                 I'm in the wrong group.</a>
<li><a href="#DupFS"            >10.2 - How do I duplicate a filesystem?</a>
<li><a href="#rc"               >10.3 - How do I start daemons with the
                                 system?</a>
<li><a href="#doas"             >10.4 - Introducing doas(1) - or - what
                                 happened to sudo?</a>
<li><a href="#vipw"             >10.5 - Changing a user's password</a>
<li><a href="#AddDelUser"       >10.6 - How do I add or delete a user?</a>
<li><a href="#Quotas"           >10.7 - Setting up user disk quotas</a>
<li><a href="#Patches"          >10.8 - Applying patches in OpenBSD</a>
<li><a href="#Dir"              >10.9 - Directory services</a>
d43 4
a46 6
  <li><a href="#Dir.available"  >10.9.1 - Which directory services are
                                 available?</a>
  <li><a href="#YP_secure"      >10.9.2 - YP security
                                 considerations</a>
  <li><a href="#YP_server"      >10.9.3 - Setting up a YP server</a>
  <li><a href="#YP_client"      >10.9.4 - Setting up a YP client</a>
d48 1
a48 1
<li><a href="#locales"          >10.10 - Character sets and localization</a>
d50 3
a52 4
  <li><a href="#charset"        >10.10.1 - Configuring the active character
                                 set</a>
  <li><a href="#nls"            >10.10.2 - Changing the language used in
                                 application messages</a>
d58 1
a58 2
<h2 id="wheel">10.1 - Why does it say that I'm in the wrong group when I try
to su root?</h2>
d81 1
a81 1
<h2 id="DupFS">10.2 - How do I duplicate a filesystem?</h2>
d104 1
a104 1
<h2 id="rc">10.3 - How do I start daemons with the system?</h2>
d319 1
a319 1
<h2 id="doas">10.4 - Introducing doas(1) - or - What happened to sudo?</h2>
d321 1
a321 1
<h3>10.4.1 - What is doas(1)?</h3>
d340 1
a340 1
<h3>10.4.2 - Why doas(1)?</h3>
d369 1
a369 2
(or just incorrect command) invocation of doas as it is when logged in as
root.
d381 1
a381 1
<h3>10.4.3 - "Sounds like sudo!"</h3>
d402 1
a402 1
<h3>10.4.4 - Using doas(1) -- basic doas.conf(5)</h3>
d453 1
a453 1
<h2 id="vipw">10.5 - Changing a user's password</h2>
d493 1
a493 1
<h2 id="AddDelUser">10.6 - How do I add or delete a user?</h2>
d721 1
a721 1
<h2 id="Quotas">10.7 - Setting up user disk quotas</h2>
d822 1
a822 1
<h2 id="Patches">10.8 - Applying patches in OpenBSD</h2>
d1013 1
a1013 1
<h2 id="Dir">10.9 - Directory services</h2>
d1018 1
a1018 1
<h3 id="Dir.available">10.9.1 - Which directory services are available?</h3>
d1058 1
a1058 1
<h3 id="YP_secure">10.9.2 - YP security considerations</h3>
d1078 1
a1078 1
<h3 id="YP_server">10.9.3 - Setting up a YP server</h3>
d1279 1
a1279 1
<h3 id="YP_client">10.9.4 - Setting up a YP client</h3>
d1377 1
a1377 1
<h2 id="locales">10.10 - Character sets and localization</h2>
d1382 1
a1382 1
<h3 id="charset">10.10.1 - Configuring the active character set</h3>
d1441 1
a1441 1
<h3 id="nls">10.10.2 - Changing the language used in application messages</h3>
@


1.227
log
@tweak [faq index] button and sync the pf user's guide with that style.
@
text
@d999 1
a999 1
At this point, you can <a href="faq5.html#BldKernel">build and install</a> the
@


1.226
log
@save some space by moving the [faq index] button to the top right corner
and removing the <h3> table of contents.
@
text
@d25 3
a27 1
<small><a href= "index.html" style="float:right;">[FAQ Index]</a></small>
@


1.225
log
@fix a few links in the previous commit
@
text
@d25 1
a27 3
<p>
<a href= "index.html">[FAQ Index]</a>
<p>
a28 2
<p>
<h3>Table of Contents</h3>
a1461 3
<hr>
<p>
<a href= "index.html">[FAQ Index]</a>
@


1.224
log
@use short form man links in the faq and fix a few broken links
@
text
@d1194 1
a1194 1
    <a href="http://man.openbsd.org/group">group(5)</a>,
@


1.223
log
@each faq page has header and footer links that look like this:

[faq index] [to section x - some topic] [to section y - another topic]

that can be very useful if the faq you're reading only covers one topic,
or if the pages are meant to be read in order. it makes sense to have
them on the pf and smtpd faq pages, but the main faq contains a variety
of unrelated topics, so they're not actually very useful there. remove.

while here, make a few subject titles more concise.

ok tb
@
text
@d69 1
a69 1
<a href="http://man.openbsd.org/?query=su">su(1)</a>
d75 1
a75 1
<a href="http://man.openbsd.org/?query=adduser">adduser(8)</a>,
d92 2
a93 2
<a href="http://man.openbsd.org/?query=dump">dump(8)</a> and
<a href="http://man.openbsd.org/?query=restore">restore(8)</a>.
d104 1
a104 1
<a href="http://man.openbsd.org/?query=tar">tar(1)</a>
d115 1
a115 1
<a href="http://man.openbsd.org/?query=rc">rc(8)</a>
d140 1
a140 1
    See <a href="http://man.openbsd.org/?query=init">init(8)</a>
d144 1
a144 1
    See <a href="http://man.openbsd.org/?query=rc.shutdown">rc.shutdown(8)</a>
d190 1
a190 1
<a href="http://man.openbsd.org/?query=ftpd">ftpd(8)</a>
d193 1
a193 1
<a href="http://man.openbsd.org/?query=inetd">inetd(8)</a>).
d203 1
a203 1
<a href="http://man.openbsd.org/?query=rcctl">rcctl(8)</a>
d211 1
a211 1
<a href="http://man.openbsd.org/?query=apmd">apmd(8)</a>
d228 1
a228 1
<a href="http://man.openbsd.org/?query=httpd">httpd(8)</a>.
d271 1
a271 1
<a href="http://man.openbsd.org/?query=rc.d">rc.d(8)</a>.
d288 1
a288 1
<a href="http://man.openbsd.org/?query=httpd">httpd(8)</a>
d301 1
a301 1
<a href="http://man.openbsd.org/?query=rc.subr">rc.subr(8)</a>
d331 1
a331 1
<a href="http://man.openbsd.org/?query=doas">doas(1)</a>
d340 1
a340 1
<a href="http://man.openbsd.org/?query=fdisk">fdisk(8)</a>
d352 1
a352 1
<a href="http://man.openbsd.org/?query=doas">doas(1)</a> solves
d386 1
a386 1
<a href="http://man.openbsd.org/?query=su">su(1)</a>
d414 1
a414 1
<a href="http://man.openbsd.org/?query=doas.conf">doas.conf(5)</a>
d466 1
a466 1
<a href="http://man.openbsd.org/?query=pwd_mkdb">pwd_mkdb(8)</a>.
d493 1
a493 1
<a href="http://man.openbsd.org/?query=vipw">vipw(8)</a>.
d512 1
a512 1
<a href="http://man.openbsd.org/?query=vipw">vipw(8)</a>,
d517 1
a517 1
<a href="http://man.openbsd.org/?query=adduser">adduser(8)</a>
d566 1
a566 1
<a href="http://man.openbsd.org/?query=rmuser">rmuser(8)</a>
d570 1
a570 1
<a href="http://man.openbsd.org/?query=crontab">crontab(1)</a>
d596 1
a596 1
<a href="http://man.openbsd.org/?query=adduser">adduser(8)</a>
d602 10
a611 10
  <li><a href="http://man.openbsd.org/?query=group">group(8)</a>
  <li><a href="http://man.openbsd.org/?query=groupadd">groupadd(8)</a>
  <li><a href="http://man.openbsd.org/?query=groupdel">groupdel(8)</a>
  <li><a href="http://man.openbsd.org/?query=groupinfo">groupinfo(8)</a>
  <li><a href="http://man.openbsd.org/?query=groupmod">groupmod(8)</a>
  <li><a href="http://man.openbsd.org/?query=user">user(8)</a>
  <li><a href="http://man.openbsd.org/?query=useradd">useradd(8)</a>
  <li><a href="http://man.openbsd.org/?query=userdel">userdel(8)</a>
  <li><a href="http://man.openbsd.org/?query=userinfo">userinfo(8)</a>
  <li><a href="http://man.openbsd.org/?query=usermod">usermod(8)</a>
d627 1
a627 1
<a href="http://man.openbsd.org/?query=usermgmt.conf">usermgmt.conf(5)</a>
d648 1
a648 1
<a href="http://man.openbsd.org/?query=encrypt">encrypt(1)</a>
d742 1
a742 1
<a href="http://man.openbsd.org/?query=fstab">fstab(5)</a>
d760 1
a760 1
<a href="http://man.openbsd.org/?query=edquota">edquota(8)</a>,
d795 1
a795 1
<a href="http://man.openbsd.org/?query=quotaon">quotaon(8)</a>.
d805 1
a805 1
<a href="http://man.openbsd.org/?query=quota">quota(1)</a>.
d910 1
a910 1
<a href="http://man.openbsd.org/?query=pppoe">pppoe(4)</a> connections.
d951 1
a951 1
<a href="http://man.openbsd.org/?query=signify">signify(1)</a>
d1032 3
a1034 3
<a href="http://man.openbsd.org/?query=getpwent">getpwent(3)</a>,
<a href="http://man.openbsd.org/?query=getgrent">getgrent(3)</a>,
<a href="http://man.openbsd.org/?query=gethostbyname">gethostbyname(3)</a>
d1038 1
a1038 1
<a href="http://man.openbsd.org/?query=master.passwd">master.passwd(5)</a>
d1045 1
a1045 1
See <a href="http://man.openbsd.org/?query=yp">yp(8)</a>
d1056 1
a1056 1
<a href="http://man.openbsd.org/?query=ypldap">ypldap(8)</a>
d1062 2
a1063 2
<a href="http://man.openbsd.org/?query=cron">cron(8)</a>,
<a href="http://man.openbsd.org/?query=scp">scp(1)</a> or
d1104 1
a1104 1
    <a href="http://man.openbsd.org/?query=domainname">domainname(1)</a>
d1106 1
a1106 1
    <a href="http://man.openbsd.org/?query=defaultdomain">defaultdomain(5)</a>
d1123 1
a1123 1
    <a href="http://man.openbsd.org/?query=ypinit">ypinit(8)</a>
d1144 2
a1145 2
    <a href="http://man.openbsd.org/?query=user">user(8)</a> and
    <a href="http://man.openbsd.org/?query=group">group(8)</a>.
d1160 1
a1160 1
    See <a href="http://man.openbsd.org/?query=Makefile.yp">Makefile.yp(8)</a>
d1190 1
a1190 1
    See <a href="http://man.openbsd.org/?query=Makefile.yp">Makefile.yp(8)</a>
d1193 3
a1195 3
    <a href="http://man.openbsd.org/?query=passwd&amp;sektion=5">passwd(5)</a>,
    <a href="http://man.openbsd.org/?query=group">group(5)</a>,
    <a href="http://man.openbsd.org/?query=hosts">hosts(5)</a>
d1207 1
a1207 1
    <a href="http://man.openbsd.org/?query=yppush">yppush(8)</a>
d1213 1
a1213 1
    <a href="http://man.openbsd.org/?query=rpc">rpc(3)</a>
d1215 1
a1215 1
    to enable <a href="http://man.openbsd.org/?query=portmap">portmap(8)</a>.
d1217 1
a1217 1
    <a href="http://man.openbsd.org/?query=rc.conf.local">rc.conf.local(8)</a>
d1229 2
a1230 2
    <a href="http://man.openbsd.org/?query=securenet">securenet(5)</a> or the
    <a href="http://man.openbsd.org/?query=ypserv.acl">ypserv.acl(5)</a>
d1261 1
a1261 1
    <a href="http://man.openbsd.org/?query=yppasswdd">yppasswdd(8)</a>:
d1319 1
a1319 1
    <a href="http://man.openbsd.org/?query=ypbind">ypbind(8)</a>.
d1329 1
a1329 1
    <a href="http://man.openbsd.org/?query=ypcat">ypcat(1)</a>
d1339 2
a1340 2
    <a href="http://man.openbsd.org/?query=ypmatch">ypmatch(1)</a> and
    <a href="http://man.openbsd.org/?query=yptest">yptest(8)</a>.
d1355 1
a1355 1
<a href="http://man.openbsd.org/?query=Makefile.yp">Makefile.yp(8)</a>.
d1370 1
a1370 1
    <a href="http://man.openbsd.org/?query=passwd&amp;sektion=5">passwd(5)</a>.
d1372 1
a1372 1
    <a href="http://man.openbsd.org/?query=id">id(1)</a> utility.
d1383 1
a1383 1
    <a href="http://man.openbsd.org/?query=group">group(5)</a>.
d1412 1
a1412 1
<a href="http://man.openbsd.org/?query=xdm">xdm(1)</a>,
d1423 1
a1423 1
as <a href="http://man.openbsd.org/?query=xterm">xterm(1)</a>
d1446 1
a1446 1
<a href="http://man.openbsd.org/?query=ssh">ssh(1)</a>,
@


1.222
log
@Bring rc.conf comment up-to-date with 5.9.
@
text
@a28 2
<a href= "faq9.html">[To Section 9 - Migrating to OpenBSD]</a>
<a href= "faq11.html">[To Section 11 - The X Window System]</a>
d41 1
a41 2
<li><a href="#vipw"             >10.5 - I made changes to /etc/passwd but
                                 they didn't seem to take place. Why?</a>
d462 1
a462 2
<h2 id="vipw">10.5 - I made changes to /etc/passwd but they didn't seem to take
place. Why?</h2>
a1468 2
<a href= "faq9.html">[To Section 9 - Migrating to OpenBSD]</a>
<a href="faq11.html">[To Section 11 - The X Window System]</a>
@


1.221
log
@new openbsd faq style. joint with tj and validator.w3.org
@
text
@d189 1
a189 1
ftpd_flags=NO           # for non-inetd use: ftpd_flags=""
@


1.220
log
@add a small sprinkling of css to improve readability in the faq, ok tj@@ tb@@
@
text
@d21 1
d23 4
a26 2
<img alt="[OpenBSD]" height=30 width=141 src="../images/smalltitle.gif" border="0">
</a>
d30 2
a31 4
<a href="faq11.html">[To Section 11 - The X Window System]</a>

<h1><font color="#e00000">10 - System Management</font></h1>
<hr>
@


1.219
log
@fix URIs, the / before querystring isn't optional, if it isn't fixed up
by the browser the server returns 400 Bad Request
@
text
@d14 2
@


1.218
log
@Some cleanup after beck@@'s monster man.openbsd.org diff.
@
text
@d69 1
a69 1
<a href="http://man.openbsd.org?query=su">su(1)</a>
d75 1
a75 1
<a href="http://man.openbsd.org?query=adduser">adduser(8)</a>,
d92 2
a93 2
<a href="http://man.openbsd.org?query=dump">dump(8)</a> and
<a href="http://man.openbsd.org?query=restore">restore(8)</a>.
d104 1
a104 1
<a href="http://man.openbsd.org?query=tar">tar(1)</a>
d115 1
a115 1
<a href="http://man.openbsd.org?query=rc">rc(8)</a>
d140 1
a140 1
    See <a href="http://man.openbsd.org?query=init">init(8)</a>
d144 1
a144 1
    See <a href="http://man.openbsd.org?query=rc.shutdown">rc.shutdown(8)</a>
d190 1
a190 1
<a href="http://man.openbsd.org?query=ftpd">ftpd(8)</a>
d193 1
a193 1
<a href="http://man.openbsd.org?query=inetd">inetd(8)</a>).
d203 1
a203 1
<a href="http://man.openbsd.org?query=rcctl">rcctl(8)</a>
d211 1
a211 1
<a href="http://man.openbsd.org?query=apmd">apmd(8)</a>
d228 1
a228 1
<a href="http://man.openbsd.org?query=httpd">httpd(8)</a>.
d271 1
a271 1
<a href="http://man.openbsd.org?query=rc.d">rc.d(8)</a>.
d288 1
a288 1
<a href="http://man.openbsd.org?query=httpd">httpd(8)</a>
d301 1
a301 1
<a href="http://man.openbsd.org?query=rc.subr">rc.subr(8)</a>
d331 1
a331 1
<a href="http://man.openbsd.org?query=doas">doas(1)</a>
d340 1
a340 1
<a href="http://man.openbsd.org?query=fdisk">fdisk(8)</a>
d352 1
a352 1
<a href="http://man.openbsd.org?query=doas">doas(1)</a> solves
d386 1
a386 1
<a href="http://man.openbsd.org?query=su">su(1)</a>
d414 1
a414 1
<a href="http://man.openbsd.org?query=doas.conf">doas.conf(5)</a>
d467 1
a467 1
<a href="http://man.openbsd.org?query=pwd_mkdb">pwd_mkdb(8)</a>.
d494 1
a494 1
<a href="http://man.openbsd.org?query=vipw">vipw(8)</a>.
d513 1
a513 1
<a href="http://man.openbsd.org?query=vipw">vipw(8)</a>,
d518 1
a518 1
<a href="http://man.openbsd.org?query=adduser">adduser(8)</a>
d567 1
a567 1
<a href="http://man.openbsd.org?query=rmuser">rmuser(8)</a>
d571 1
a571 1
<a href="http://man.openbsd.org?query=crontab">crontab(1)</a>
d597 1
a597 1
<a href="http://man.openbsd.org?query=adduser">adduser(8)</a>
d603 10
a612 10
  <li><a href="http://man.openbsd.org?query=group">group(8)</a>
  <li><a href="http://man.openbsd.org?query=groupadd">groupadd(8)</a>
  <li><a href="http://man.openbsd.org?query=groupdel">groupdel(8)</a>
  <li><a href="http://man.openbsd.org?query=groupinfo">groupinfo(8)</a>
  <li><a href="http://man.openbsd.org?query=groupmod">groupmod(8)</a>
  <li><a href="http://man.openbsd.org?query=user">user(8)</a>
  <li><a href="http://man.openbsd.org?query=useradd">useradd(8)</a>
  <li><a href="http://man.openbsd.org?query=userdel">userdel(8)</a>
  <li><a href="http://man.openbsd.org?query=userinfo">userinfo(8)</a>
  <li><a href="http://man.openbsd.org?query=usermod">usermod(8)</a>
d628 1
a628 1
<a href="http://man.openbsd.org?query=usermgmt.conf">usermgmt.conf(5)</a>
d649 1
a649 1
<a href="http://man.openbsd.org?query=encrypt">encrypt(1)</a>
d743 1
a743 1
<a href="http://man.openbsd.org?query=fstab">fstab(5)</a>
d761 1
a761 1
<a href="http://man.openbsd.org?query=edquota">edquota(8)</a>,
d796 1
a796 1
<a href="http://man.openbsd.org?query=quotaon">quotaon(8)</a>.
d806 1
a806 1
<a href="http://man.openbsd.org?query=quota">quota(1)</a>.
d911 1
a911 1
<a href="http://man.openbsd.org?query=pppoe">pppoe(4)</a> connections.
d952 1
a952 1
<a href="http://man.openbsd.org?query=signify">signify(1)</a>
d1033 3
a1035 3
<a href="http://man.openbsd.org?query=getpwent">getpwent(3)</a>,
<a href="http://man.openbsd.org?query=getgrent">getgrent(3)</a>,
<a href="http://man.openbsd.org?query=gethostbyname">gethostbyname(3)</a>
d1039 1
a1039 1
<a href="http://man.openbsd.org?query=master.passwd">master.passwd(5)</a>
d1046 1
a1046 1
See <a href="http://man.openbsd.org?query=yp">yp(8)</a>
d1057 1
a1057 1
<a href="http://man.openbsd.org?query=ypldap">ypldap(8)</a>
d1063 2
a1064 2
<a href="http://man.openbsd.org?query=cron">cron(8)</a>,
<a href="http://man.openbsd.org?query=scp">scp(1)</a> or
d1105 1
a1105 1
    <a href="http://man.openbsd.org?query=domainname">domainname(1)</a>
d1107 1
a1107 1
    <a href="http://man.openbsd.org?query=defaultdomain">defaultdomain(5)</a>
d1124 1
a1124 1
    <a href="http://man.openbsd.org?query=ypinit">ypinit(8)</a>
d1145 2
a1146 2
    <a href="http://man.openbsd.org?query=user">user(8)</a> and
    <a href="http://man.openbsd.org?query=group">group(8)</a>.
d1161 1
a1161 1
    See <a href="http://man.openbsd.org?query=Makefile.yp">Makefile.yp(8)</a>
d1191 1
a1191 1
    See <a href="http://man.openbsd.org?query=Makefile.yp">Makefile.yp(8)</a>
d1194 3
a1196 3
    <a href="http://man.openbsd.org?query=passwd&amp;sektion=5">passwd(5)</a>,
    <a href="http://man.openbsd.org?query=group">group(5)</a>,
    <a href="http://man.openbsd.org?query=hosts">hosts(5)</a>
d1208 1
a1208 1
    <a href="http://man.openbsd.org?query=yppush">yppush(8)</a>
d1214 1
a1214 1
    <a href="http://man.openbsd.org?query=rpc">rpc(3)</a>
d1216 1
a1216 1
    to enable <a href="http://man.openbsd.org?query=portmap">portmap(8)</a>.
d1218 1
a1218 1
    <a href="http://man.openbsd.org?query=rc.conf.local">rc.conf.local(8)</a>
d1230 2
a1231 2
    <a href="http://man.openbsd.org?query=securenet">securenet(5)</a> or the
    <a href="http://man.openbsd.org?query=ypserv.acl">ypserv.acl(5)</a>
d1262 1
a1262 1
    <a href="http://man.openbsd.org?query=yppasswdd">yppasswdd(8)</a>:
d1320 1
a1320 1
    <a href="http://man.openbsd.org?query=ypbind">ypbind(8)</a>.
d1330 1
a1330 1
    <a href="http://man.openbsd.org?query=ypcat">ypcat(1)</a>
d1340 2
a1341 2
    <a href="http://man.openbsd.org?query=ypmatch">ypmatch(1)</a> and
    <a href="http://man.openbsd.org?query=yptest">yptest(8)</a>.
d1356 1
a1356 1
<a href="http://man.openbsd.org?query=Makefile.yp">Makefile.yp(8)</a>.
d1371 1
a1371 1
    <a href="http://man.openbsd.org?query=passwd&amp;sektion=5">passwd(5)</a>.
d1373 1
a1373 1
    <a href="http://man.openbsd.org?query=id">id(1)</a> utility.
d1384 1
a1384 1
    <a href="http://man.openbsd.org?query=group">group(5)</a>.
d1413 1
a1413 1
<a href="http://man.openbsd.org?query=xdm">xdm(1)</a>,
d1424 1
a1424 1
as <a href="http://man.openbsd.org?query=xterm">xterm(1)</a>
d1447 1
a1447 1
<a href="http://man.openbsd.org?query=ssh">ssh(1)</a>,
@


1.217
log
@change http://www.openbsd.org/cgi-bin/man.cgi to be http://man.openbsd.org
this points stuff to the new place and gets us ready to deprecate the old
place we did this.
@
text
@d144 1
a144 2
    See <a href="http://man.openbsd.org?query=rc.shutdown">
    rc.shutdown(8)</a>
d414 1
a414 2
<a href="http://man.openbsd.org?query=doas.conf">
doas.conf(5)</a>
d603 10
a612 20
  <li><a href="http://man.openbsd.org?query=group">
    group(8)</a>
  <li><a href="http://man.openbsd.org?query=groupadd">
    groupadd(8)</a>
  <li><a href="http://man.openbsd.org?query=groupdel">
    groupdel(8)</a>
  <li><a href="http://man.openbsd.org?query=groupinfo">
    groupinfo(8)</a>
  <li><a href="http://man.openbsd.org?query=groupmod">
    groupmod(8)</a>
  <li><a href="http://man.openbsd.org?query=user">
    user(8)</a>
  <li><a href="http://man.openbsd.org?query=useradd">
    useradd(8)</a>
  <li><a href="http://man.openbsd.org?query=userdel">
    userdel(8)</a>
  <li><a href="http://man.openbsd.org?query=userinfo">
    userinfo(8)</a>
  <li><a href="http://man.openbsd.org?query=usermod">
    usermod(8)</a>
d628 2
a629 2
<a href="http://man.openbsd.org?query=usermgmt.conf">
usermgmt.conf(5)</a> and can be viewed by doing:
d911 1
a911 2
<a href="http://man.openbsd.org?query=pppoe">
pppoe(4)</a> connections.
d1033 4
a1036 6
<a href="http://man.openbsd.org?query=getpwent">
getpwent(3)</a>,
<a href="http://man.openbsd.org?query=getgrent">
getgrent(3)</a>,
<a href="http://man.openbsd.org?query=gethostbyname">
gethostbyname(3)</a> and so on.
d1039 2
a1040 2
<a href="http://man.openbsd.org?query=master.passwd">
master.passwd(5)</a> before you can use it, for example to authenticate
d1057 2
a1058 2
<a href="http://man.openbsd.org?query=ypldap">
ypldap(8)</a> daemon provides the latter.
d1105 4
a1108 5
    <a href="http://man.openbsd.org?query=domainname">
    domainname(1)</a> utility to set the domain name, and put it into the
    <a href="http://man.openbsd.org?query=defaultdomain">
    defaultdomain(5)</a> file to have it automatically set at system startup
    time.
d1124 2
a1125 2
    <a href="http://man.openbsd.org?query=ypinit">
    ypinit(8)</a> later, using the <tt>-u</tt> option.
d1145 2
a1146 4
    <a href="http://man.openbsd.org?query=user">
    user(8)</a> and
    <a href="http://man.openbsd.org?query=group">
    group(8)</a>.
d1161 2
a1162 2
    See <a href="http://man.openbsd.org?query=Makefile.yp">
    Makefile.yp(8)</a> for details.
d1191 2
a1192 2
    See <a href="http://man.openbsd.org?query=Makefile.yp">
    Makefile.yp(8)</a> to learn which YP maps require which source files.
d1194 1
a1194 2
    <a href="http://man.openbsd.org?query=passwd&amp;sektion=5">
    passwd(5)</a>,
d1216 1
a1216 2
    to enable <a href="http://man.openbsd.org?query=portmap">
    portmap(8)</a>.
d1218 2
a1219 2
    <a href="http://man.openbsd.org?query=rc.conf.local">
    rc.conf.local(8)</a> and set <tt>portmap_flags=""</tt>.
d1230 3
a1232 4
    <a href="http://man.openbsd.org?query=securenet">
    securenet(5)</a> or the
    <a href="http://man.openbsd.org?query=ypserv.acl">
    ypserv.acl(5)</a> security feature of the YP server daemon.
d1262 1
a1262 2
    <a href="http://man.openbsd.org?query=yppasswdd">
    yppasswdd(8)</a>:
d1340 1
a1340 2
    <a href="http://man.openbsd.org?query=ypmatch">
    ypmatch(1)</a> and
d1356 1
a1356 2
<a href="http://man.openbsd.org?query=Makefile.yp">
Makefile.yp(8)</a>.
d1371 1
a1371 2
    <a href="http://man.openbsd.org?query=passwd&amp;sektion=5">
    passwd(5)</a>.
@


1.216
log
@fix a few broken links; from peter de wachter
@
text
@d69 1
a69 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=su">su(1)</a>
d75 1
a75 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser">adduser(8)</a>,
d92 2
a93 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dump">dump(8)</a> and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=restore">restore(8)</a>.
d104 1
a104 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tar">tar(1)</a>
d115 1
a115 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc">rc(8)</a>
d140 1
a140 1
    See <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=init">init(8)</a>
d144 1
a144 1
    See <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.shutdown">
d191 1
a191 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd">ftpd(8)</a>
d194 1
a194 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inetd">inetd(8)</a>).
d204 1
a204 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcctl">rcctl(8)</a>
d212 1
a212 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=apmd">apmd(8)</a>
d229 1
a229 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd">httpd(8)</a>.
d272 1
a272 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.d">rc.d(8)</a>.
d289 1
a289 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd">httpd(8)</a>
d302 1
a302 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.subr">rc.subr(8)</a>
d332 1
a332 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas">doas(1)</a>
d341 1
a341 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=fdisk">fdisk(8)</a>
d353 1
a353 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas">doas(1)</a> solves
d387 1
a387 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=su">su(1)</a>
d415 1
a415 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas.conf">
d469 1
a469 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pwd_mkdb">pwd_mkdb(8)</a>.
d496 1
a496 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vipw">vipw(8)</a>.
d515 1
a515 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vipw">vipw(8)</a>,
d520 1
a520 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser">adduser(8)</a>
d569 1
a569 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rmuser">rmuser(8)</a>
d573 1
a573 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crontab">crontab(1)</a>
d599 1
a599 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser">adduser(8)</a>
d605 1
a605 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group">
d607 1
a607 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupadd">
d609 1
a609 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupdel">
d611 1
a611 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupinfo">
d613 1
a613 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupmod">
d615 1
a615 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=user">
d617 1
a617 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=useradd">
d619 1
a619 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=userdel">
d621 1
a621 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=userinfo">
d623 1
a623 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=usermod">
d640 1
a640 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=usermgmt.conf">
d661 1
a661 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=encrypt">encrypt(1)</a>
d755 1
a755 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=fstab">fstab(5)</a>
d773 1
a773 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=edquota">edquota(8)</a>,
d808 1
a808 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=quotaon">quotaon(8)</a>.
d818 1
a818 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=quota">quota(1)</a>.
d923 1
a923 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe">
d965 1
a965 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=signify">signify(1)</a>
d1046 1
a1046 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=getpwent">
d1048 1
a1048 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=getgrent">
d1050 1
a1050 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gethostbyname">
d1054 1
a1054 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=master.passwd">
d1061 1
a1061 1
See <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yp">yp(8)</a>
d1072 1
a1072 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypldap">
d1078 2
a1079 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cron">cron(8)</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp">scp(1)</a> or
d1120 1
a1120 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=domainname">
d1122 1
a1122 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=defaultdomain">
d1140 1
a1140 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypinit">
d1161 1
a1161 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=user">
d1163 1
a1163 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group">
d1179 1
a1179 1
    See <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=Makefile.yp">
d1209 1
a1209 1
    See <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=Makefile.yp">
d1212 1
a1212 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=passwd&amp;sektion=5">
d1214 2
a1215 2
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group">group(5)</a>,
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hosts">hosts(5)</a>
d1227 1
a1227 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yppush">yppush(8)</a>
d1233 1
a1233 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rpc">rpc(3)</a>
d1235 1
a1235 1
    to enable <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=portmap">
d1238 1
a1238 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf.local">
d1250 1
a1250 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=securenet">
d1252 1
a1252 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypserv.acl">
d1283 1
a1283 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yppasswdd">
d1342 1
a1342 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypbind">ypbind(8)</a>.
d1352 1
a1352 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypcat">ypcat(1)</a>
d1362 1
a1362 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypmatch">
d1364 1
a1364 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yptest">yptest(8)</a>.
d1379 1
a1379 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=Makefile.yp">
d1395 1
a1395 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=passwd&amp;sektion=5">
d1398 1
a1398 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=id">id(1)</a> utility.
d1409 1
a1409 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group">group(5)</a>.
d1438 1
a1438 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xdm">xdm(1)</a>,
d1449 1
a1449 1
as <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xterm">xterm(1)</a>
d1472 1
a1472 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh">ssh(1)</a>,
@


1.215
log
@<r href="..." should be <a href="...", spotted by validator.w3.org
@
text
@d194 1
a194 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inetd">inetd(8)</a>, see
<a href="faq10.html#AnonFTP">Anonymous FTP FAQ</a> to read more about this).
@


1.214
log
@section 10.5 had three different names.
@
text
@d1239 1
a1239 1
    <r href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf.local">
@


1.213
log
@remove the following sections:
- how do i create an ftp-only account
- setting up an anonymous ftp server
- confining users to their home directories in ftpd
- can i change the root shell
- what else can i do with ksh

ok tb sthen
@
text
@d40 2
a41 3
<li><a href="#vipw"             >10.5 - I made changes to /etc/passwd with an
                                 editor, but the changes didn't seem to take
                                 place. Why?</a>
d465 1
a465 1
<h2 id="vipw">10.5 - I edited /etc/passwd, but the changes didn't seem to take
@


1.212
log
@bring utf8/locale section in sync with reality.

discussed with stsp a while back
@
text
@d44 3
a46 10
<li><a href="#FTPOnly"          >10.7 - How do I create an ftp-only
                                 account?</a>
<li><a href="#Quotas"           >10.8 - Setting up user disk quotas</a>
<li><a href="#AnonFTP"          >10.9 - Setting up an Anonymous FTP server</a>
<li><a href="#ftpchroot"        >10.10 - Confining users to their home
                                 directories in ftpd(8)</a>
<li><a href="#Patches"          >10.11 - Applying patches in OpenBSD</a>
<li><a href="#rootshell"        >10.12 - Can I change the root shell?</a>
<li><a href="#ksh"              >10.13 - What else can I do with ksh?</a>
<li><a href="#Dir"              >10.14 - Directory services</a>
d48 1
a48 1
  <li><a href="#Dir.available"  >10.14.1 - Which directory services are
d50 1
a50 1
  <li><a href="#YP_secure"      >10.14.2 - YP security
d52 2
a53 2
  <li><a href="#YP_server"      >10.14.3 - Setting up a YP server</a>
  <li><a href="#YP_client"      >10.14.4 - Setting up a YP client</a>
d55 1
a55 1
<li><a href="#locales"          >10.15 - Character sets and localization</a>
d57 1
a57 1
  <li><a href="#charset"        >10.15.1 - Configuring the active character
d59 1
a59 1
  <li><a href="#nls"            >10.15.2 - Changing the language used in
d745 1
a745 11
<h2 id="FTPOnly">10.7 - How do I create an ftp-only account
(not anonymous FTP!)?</h2>

There are a few ways to do this, but a very common way to do such is to add
<tt>/usr/bin/false</tt> into <tt>/etc/shells</tt>.
Then when you set a users shell to <tt>/usr/bin/false</tt>, they will not be
able log in interactively, but will be able to use ftp capabilities.
You may also want to restrict access by
<a href="#ftpchroot">confining users to their home directory in ftpd</a>.

<h2 id="Quotas">10.8 - Setting up user disk quotas</h2>
d846 1
a846 190
<h2 id="AnonFTP">10.9 - Setting up an Anonymous FTP server</h2>

Anonymous FTP allows users without accounts to access files on your computer
via the File Transfer Protocol.
This will give an overview of setting up the anonymous FTP server, and its
logging, etc.

<h3>Adding the FTP account</h3>

To start off, you need to have an <i>ftp</i> account on your system.
This account should not have a usable password.
Here we will set the login directory to <tt>/home/ftp</tt>, but you can put it
wherever you want.
When using anonymous ftp, the ftp daemon will chroot itself to the home
directory of the <i>ftp</i> user.
To read up more on that, read the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd">ftpd(8)</a> and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=chroot">chroot(8)</a>
man pages.
Here is an example of adding the <i>ftp</i> user.
We will do this using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser">adduser(8)</a>.
We also need to add <tt>/usr/bin/false</tt> to our <tt>/etc/shells</tt>,
this is the "shell" that we will be giving to the <i>ftp</i> user.
This won't allow them to login, even though we will give them an empty password.
To do this, you can simply run:

<blockquote><pre>
# <b>echo /usr/bin/false &gt;&gt; /etc/shells</b>
</pre></blockquote>

After this, you are ready to add the <i>ftp</i> user:

<blockquote><pre>
# <b>adduser</b>
Use option ``-silent'' if you don't want to see all warnings and questions.

Reading /etc/shells
Check /etc/master.passwd
Check /etc/group

Ok, let's go.
Don't worry about mistakes. There will be a chance later to correct any input.
Enter username []: <b>ftp</b>
Enter full name []: <b>anonymous ftp</b>
Enter shell csh false ksh nologin sh [ksh]: <b>false</b>
Uid [1002]:
Login group ftp [ftp]:
Login group is ``ftp''. Invite ftp into other groups: guest no [no]:
Login class authpf daemon default staff [default]: <b><i>Enter</i></b>
Enter password []:
Disable password logins for the user? (y/n) [n]: <b>y</b>

Name:        ftp
Password:    ****
Fullname:    anonymous ftp
Uid:         1002
Gid:         1002 (ftp)
Groups:      ftp
Login Class: default
HOME:        /home/ftp
Shell:       /usr/bin/false
OK? (y/n) [y]:
Added user ``ftp''
Copy files from /etc/skel to /home/ftp
Add another user? (y/n) [y]: <b>n</b>
Goodbye!
</pre></blockquote>

<h3>Directory Setup</h3>

Along with the user, this created the directory <tt>/home/ftp</tt>, though you
can use other locations as well.
There are some changes that we will have to make to get it ready for anonymous
ftp.
Again, these changes are explained in
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd">ftpd(8)</a>.

<p>
You <b>do not</b> need to make a <tt>/home/ftp/usr</tt> or
<tt>/home/ftp/bin</tt> directory.
<ul>
  <li><tt>/home/ftp</tt>:
    This is the main directory.
    It should be changed to be owned by root and to have permissions of 555.
    It should not be writable by the ftp user!
  <li><tt>/home/ftp/pub</tt>:
    This is a standard directory to place files in which you wish to share.
    This directory should also be mode 555.
</ul>

<p>
Note that all these directories should be owned by root.
Here is a listing of what the directories should look like after their creation.

<blockquote><pre>
$ <b>ls -laR /home/ftp</b>
total 5
dr-xr-xr-x  5 root  ftp    512 Jul  6 11:33 .
drwxr-xr-x  7 root  wheel  512 Jul  6 10:58 ..
dr-xr-xr-x  2 root  ftp    512 Jul  6 11:33 pub

ftp/pub:
total 2
dr-xr-xr-x  2 root  ftp  512 Jul  6 11:33 .
dr-xr-xr-x  5 root  ftp  512 Jul  6 11:33 ..
</pre></blockquote>

<h3>Starting up the server and logging</h3>

You can choose to start ftpd either by
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inetd">inetd(8)</a>
or from the
<a href="#rc">rc</a> scripts.
Generally, running ftpd as a daemon from the rc scripts is recommended and is
what we will show here.
A sample line for running it from inetd(8) is commented out in the default
<tt>/etc/inetd.conf</tt>.

<p>
Here is an example line to add to <tt>/etc/rc.conf.local</tt> to start ftpd(8)
at boot.

<blockquote><pre>
ftpd_flags="-llUSA"
</pre></blockquote>

The options used here are:
<ul>
 <li><tt>-ll</tt>:
    detailed logging to syslog.
 <li><tt>-U</tt>:
    log users so
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=who">who(1)</a>
    and similar programs can see them.
 <li><tt>-S</tt>:
    log transfers to <tt>/var/log/ftpd</tt>.
 <li><tt>-A</tt>:
    permit only anonymous FTP transfers.
</ul>

<p>
It is not necessary to give startup options to ftpd to allow anonymous
connections; the preceding steps of creating the 'ftp' user is sufficient.
However, to stop anonymous connections, it isn't necessary to undo everything.
Just restart ftpd with the <tt>-n</tt> option included.
Anonymous connections are then disabled.

<h3>Other relevant files</h3>

<ul>
  <li><tt>/etc/ftpwelcome</tt>:
    This holds the welcome message for people once they have connected to your
    ftp server.
  <li><tt>/etc/motd</tt>:
    This holds the message for people once they have successfully logged into
    your ftp server.
  <li><tt>.message</tt>:
    This file can be placed in any directory.
    It will be shown once a user enters that directory.
</ul>

<h2 id="ftpchroot">10.10 - Confining users to their home directories in
ftpd(8)</h2>

By default, when logging in via ftp, users can change to any directory on the
filesystem that they have access to.
This may not be desirable in some cases.
It is possible to restrict what users may see through ftp sessions by chrooting
them to their home directory.

<p>
If you only wish to allow chrooted ftp logins, use the <tt>-A</tt> option to
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd">ftpd(8)</a>.

<p>
If you wish to apply them more finely, OpenBSD's
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=login.conf">login
capability infrastructure</a> and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd">ftpd(8)</a>
together make this easy.
<p>

Users in a login class with the <tt>ftp-chroot</tt> variable set are
automatically chrooted.
Additionally, you can add a username to the file <tt>/etc/ftpchroot</tt>
to chroot those usernames.
A user only needs to be listed in one of these locations.

<h2 id="Patches">10.11 - Applying patches in OpenBSD</h2>
d1038 1
a1038 97
<h2 id="rootshell">10.12 - Can I change the root shell?</h2>

It is sometimes said that one should never change the root shell, though there
is no reason not to in OpenBSD.

<p>
The default shell for <i>root</i> on OpenBSD is
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh">ksh(1)</a>.

<p>
A traditional Unix guideline is to only use statically compiled shells for root,
because if your system comes up in single user mode, non-root partitions won't
be mounted and dynamically linked shells won't be able to access libraries
located in the <tt>/usr</tt> partition.
This isn't actually a significant issue for OpenBSD, as the system will prompt
you for a shell when it comes up in single user mode, and the default is
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sh">sh(1)</a>.
The three standard shells in OpenBSD
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=csh">csh(1)</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sh">sh(1)</a>
and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh">ksh(1)</a>)
are all statically linked, and thus usable in single user mode.

<h2 id="ksh">10.13 - What else can I do with <i>ksh</i>?</h2>

In OpenBSD,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh">ksh(1)</a> is
<a href="http://web.cs.mun.ca/~michael/pdksh/">pdksh</a>,
the Public Domain Korn Shell, and is the same binary as
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sh">sh(1)</a>.

<p>
Users comfortable with <i>bash</i>, often used on Linux systems, will probably
find <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh">ksh(1)</a> very
familiar.
ksh(1) provides most of the commonly used features in bash, including tab
completion, command-line editing and history via the arrow keys, and
CTRL-A/CTRL-E to jump to beginning/end of the command-line.
If other features of bash are desired, it can be installed via either
<a href="faq15.html#PkgMgmt">packages</a> or
<a href="faq15.html#Ports">ports</a>.

<p>
The command prompt of <tt>ksh</tt> can easily be changed to something providing
more information than the default "<tt>$ </tt>" by setting the <tt>PS1</tt>
variable.
For example, inserting the following line:

<blockquote><pre>
export PS1='$PWD $ '
</pre></blockquote>

in your <tt>.profile</tt> produces the following command prompt:

<blockquote><pre>
/home/nick $
</pre></blockquote>

See the file
<a href="http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/etc/ksh.kshrc?content-type=text/plain">
<tt>/etc/ksh.kshrc</tt></a>,
which includes many useful features and examples, and may be invoked in
your user's <tt>.profile</tt>.

<p>
OpenBSD's ksh(1) has been enhanced with a number of "special characters" for
the primary prompt string, PS1, similar to those used in bash.
For example:

<blockquote><pre>
\e - Insert an ASCII escape character.
\h - The hostname, minus domain name.
\H - The full hostname, including domain name.
\n - Insert a newline character.
\t - The current time, in 24-hour HH:MM:SS format.
\u - The current user's username.
\w - The current working directory. $HOME is abbreviated as ~
\W - The basename of the current working directory.
\$ - Displays "#" for root users, "$" for non-root users.
</pre></blockquote>

(see the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh">ksh(1)</a>
man page for more details, and many, many more special characters!
Also note the <tt>$</tt> character has special meaning inside double quotes, so
handle it carefully)

<p>
One could use the following command:

<blockquote><pre>
$ <b>export PS1="\n\u@@\H\n\w \\$ "</b>
</pre></blockquote>

to give an overly verbose but somewhat useful prompt.

<h2 id="Dir">10.14 - Directory services</h2>
d1043 1
a1043 1
<h3 id="Dir.available">10.14.1 - Which directory services are available?</h3>
d1085 1
a1085 1
<h3 id="YP_secure">10.14.2 - YP security considerations</h3>
d1105 1
a1105 1
<h3 id="YP_server">10.14.3 - Setting up a YP server</h3>
d1313 1
a1313 1
<h3 id="YP_client">10.14.4 - Setting up a YP client</h3>
d1414 1
a1414 1
<h2 id="locales">10.15 - Character sets and localization</h2>
d1419 1
a1419 1
<h3 id="charset">10.15.1 - Configuring the active character set</h3>
d1478 1
a1478 1
<h3 id="nls">10.15.2 - Changing the language used in application messages</h3>
@


1.211
log
@renumber faq10 sections so there are no gaps.
@
text
@d4 5
d12 2
a13 1
<meta name= "copyright"     content= "This document copyright 1998-2015 by OpenBSD.">
d38 1
a38 1
<li><a href="#doas"             >10.4 - Introducing doas(1) -- or -- what
d337 1
a337 1
<h2 id="doas">10.4 - Introducing doas(1) -- or -- What happened to sudo?</h2>
d1077 1
a1077 1
  <li><b>Upgrade your system to<a href="current.html"><i>-current</i></a>.</b>
d1719 1
a1719 2
It also supports the Latin (ISO-8859-*), KOI-8, and Unicode (UTF-8) character
sets.
d1723 5
a1727 4
To use one of the extended character sets, the <tt>LC_CTYPE</tt> environment
variable must be set to the name of a supported locale.
<tt>LC_CTYPE</tt> will only affect the character set available to applications.
It will not change the language used for application messages.
d1740 8
a1747 4
  <li>
    If logging in via
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xdm">xdm(1)</a>,
    add a line such as
d1749 6
a1754 3
    <blockquote><pre>
    $ <b>export LC_CTYPE="en_US.UTF-8"</b>
    </pre></blockquote>
d1756 3
a1758 6
    to <tt>~/.xsession</tt> before starting the window manager (see the section
    on <a href="faq11.html#CustomizingX">customizing X</a> for details).
    This example enables the Unicode (UTF-8) character set and will also cause
    applications such as
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xterm">xterm(1)</a>
    to enable UTF-8 mode by default.
d1760 3
a1762 2
  <li>
    If logging in via the text console add a line such as
d1764 3
a1766 3
    <blockquote><pre>
    $ <b>export LC_CTYPE="en_US.ISO8859-1"</b>
    </pre></blockquote>
a1767 3
    to <tt>~/.profile</tt>.
    Note that the text console supports ASCII and ISO8859-1 only.
    It does not support UTF-8.
d1771 2
a1772 9
Few utilities in the base system support UTF-8 at this time.
Most will use ASCII in the UTF-8 locale.
However, many programs from the ports collection do support UTF-8.

<p>
UTF-8 can also be used with specific applications only by starting
those applications in
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=uxterm">uxterm(1)</a>.
This works even if the login session uses a non-UTF-8 locale.
@


1.210
log
@Massive cleanup: reformatting, rephrasing and shortening of sentences.
Plus the usual whitespace and punctuation fixes and new-sentence new-line.

patient reviewing, lots of input and ok tj@@
@
text
@d34 1
a34 1
<li><a href="#vipw"             >10.8 - I made changes to /etc/passwd with an
d37 2
a38 2
<li><a href="#AddDelUser"       >10.9 - How do I add or delete a user?</a>
<li><a href="#FTPOnly"          >10.10 - How do I create an ftp-only
d40 3
a42 3
<li><a href="#Quotas"           >10.11 - Setting up user disk quotas</a>
<li><a href="#AnonFTP"          >10.13 - Setting up an Anonymous FTP server</a>
<li><a href="#ftpchroot"        >10.14 - Confining users to their home
d44 4
a47 4
<li><a href="#Patches"          >10.15 - Applying patches in OpenBSD</a>
<li><a href="#rootshell"        >10.17 - Can I change the root shell?</a>
<li><a href="#ksh"              >10.18 - What else can I do with ksh?</a>
<li><a href="#Dir"              >10.19 - Directory services</a>
d49 1
a49 1
  <li><a href="#Dir.available"  >10.19.1 - Which directory services are
d51 1
a51 1
  <li><a href="#YP_secure"      >10.19.2 - YP security
d53 2
a54 2
  <li><a href="#YP_server"      >10.19.3 - Setting up a YP server</a>
  <li><a href="#YP_client"      >10.19.4 - Setting up a YP client</a>
d56 1
a56 1
<li><a href="#locales"          >10.20 - Character sets and localization</a>
d58 1
a58 1
  <li><a href="#charset"        >10.20.1 - Configuring the active character
d60 1
a60 1
  <li><a href="#nls"            >10.20.2 - Changing the language used in
d467 1
a467 1
<h2 id="vipw">10.8 - I edited /etc/passwd, but the changes didn't seem to take
d508 1
a508 1
<h2 id="AddDelUser">10.9 - How do I add or delete a user?</h2>
d746 1
a746 1
<h2 id="FTPOnly">10.10 - How do I create an ftp-only account
d756 1
a756 1
<h2 id="Quotas">10.11 - Setting up Quotas</h2>
d857 1
a857 1
<h2 id="AnonFTP">10.13 - Setting up an Anonymous FTP server</h2>
d1019 1
a1019 1
<h2 id="ftpchroot">10.14 - Confining users to their home directories in
d1046 1
a1046 1
<h2 id="Patches">10.15 - Applying patches in OpenBSD</h2>
d1238 1
a1238 1
<h2 id="rootshell">10.17 - Can I change the root shell?</h2>
d1262 1
a1262 1
<h2 id="ksh">10.18 - What else can I do with <i>ksh</i>?</h2>
d1334 1
a1334 1
<h2 id="Dir">10.19 - Directory services</h2>
d1339 1
a1339 1
<h3 id="Dir.available">10.19.1 - Which directory services are available?</h3>
d1381 1
a1381 1
<h3 id="YP_secure">10.19.2 - YP security considerations</h3>
d1401 1
a1401 1
<h3 id="YP_server">10.19.3 - Setting up a YP server</h3>
d1609 1
a1609 1
<h3 id="YP_client">10.19.4 - Setting up a YP client</h3>
d1710 1
a1710 1
<h2 id="locales">10.20 - Character sets and localization</h2>
d1716 1
a1716 1
<h3 id="charset">10.20.1 - Configuring the active character set</h3>
d1779 1
a1779 1
<h3 id="nls">10.20.2 - Changing the language used in application messages</h3>
@


1.209
log
@unify table of contents with actual page titles, fixing a few broken links
in the process. few minor tweaks while here.

ok tb
@
text
@d14 1
a14 1
<img alt="[OpenBSD]" height=30 width=141 src="../images/smalltitle.gif" border="0">    
d27 21
a47 14
<li><a href="#wheel"         >10.1 - When I try to su to root it says that I'm in the wrong group.</a>
<li><a href="#DupFS"         >10.2 - How do I duplicate a filesystem?</a>
<li><a href="#rc"            >10.3 - How do I start daemons with the system?</a>
<li><a href="#doas"          >10.4 - Introducing doas(1) -- or -- what happened to sudo?</a>
<li><a href="#vipw"          >10.8 - I made changes to /etc/passwd with an editor, but the changes didn't seem to take place. Why?</a>
<li><a href="#AddDelUser"    >10.9 - How do I add or delete a user?</a>
<li><a href="#FTPOnly"       >10.10 - How do I create an ftp-only account?</a>
<li><a href="#Quotas"        >10.11 - Setting up user disk quotas</a>
<li><a href="#AnonFTP"       >10.13 - Setting up an Anonymous FTP server</a>
<li><a href="#ftpchroot"     >10.14 - Confining users to their home directories in ftpd(8)</a>
<li><a href="#Patches"       >10.15 - Applying patches in OpenBSD</a>
<li><a href="#rootshell"     >10.17 - Can I change the root shell?</a>
<li><a href="#ksh"           >10.18 - What else can I do with ksh?</a>
<li><a href="#Dir"           >10.19 - Directory services</a>
d49 6
a54 4
  <li><a href="#Dir.available" >10.19.1 - Which directory services are available?</a>
  <li><a href="#YP_secure"     >10.19.2 - YP security considerations</a>
  <li><a href="#YP_server"     >10.19.3 - Setting up a YP server</a>
  <li><a href="#YP_client"     >10.19.4 - Setting up a YP client</a>
d56 1
a56 1
<li><a href="#locales"         >10.20 - Character sets and localization</a>
d58 4
a61 2
  <li><a href="#charset"       >10.20.1 - Configuring the active character set</a>
  <li><a href="#nls"           >10.20.2 - Changing the language used in application messages</a>
d67 2
a68 1
<h2 id="wheel">10.1 - Why does it say that I'm in the wrong group when I try to su root?</h2>
d70 2
a71 4
<p>
On OpenBSD, users who are in the <tt>wheel</tt>
group are allowed to use
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=su&amp;sektion=1">su(1)</a>
d77 3
a79 3
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8">adduser(8)</a>,
you can add them to the <tt>wheel</tt> group by answering "wheel" at the
"<tt>Invite <i>user</i> into other groups:</tt>" prompt.
d82 1
a82 1
<b>ericj</b> added to the <tt>wheel</tt> group:
d88 2
a89 4
<p>
If you want to give access to superuser
privileges without adding users to the <tt>wheel</tt> group, you can use
<a href="#doas">doas(1)</a>.
a92 1
<p>
d94 4
a97 4
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dump&amp;sektion=8">dump(8)</a> and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=restore&amp;sektion=8">restore(8)</a>.
For example, to duplicate everything under directory <tt>SRC</tt> to
directory <tt>DST</tt>, do:
d100 1
a100 1
# <b>cd /SRC; dump 0f - . | (cd /DST; restore -rf - )</b>
d103 6
a108 6
<p>
dump is designed to give you plenty of backup capabilities, and it may
be an overkill if you just want to duplicate a part of a (or an entire)
filesystem. The command
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tar&amp;sektion=1">tar(1)</a>
may be faster for this operation.  The format looks very similar:
d111 1
a111 1
# <b>cd /SRC; tar cf -  . | (cd /DST; tar xpf - )</b>
d117 3
a119 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc&amp;sektion=8">rc(8)</a>
style startup. This uses a few key files for startup.
d122 26
a147 17
  <li><tt>/etc/rc</tt> - Main script. Should not be edited.
  <li><tt>/etc/rc.conf</tt> - Configuration file used by <tt>/etc/rc</tt> to set
  startup parameters for the system.
  Should not be edited.
  <li><tt>/etc/rc.conf.local</tt> - Configuration file that overrides
  settings in <tt>/etc/rc.conf</tt> so you don't have to touch 
  <tt>/etc/rc.conf</tt> itself, which is important when upgrading your system.
  <li><tt>/etc/netstart</tt> - Script used to initialize the network. Shouldn't
  be edited.
  <li><tt>/etc/rc.local</tt> - Script used for local administration. This is
  where new daemons or host specific information can be set.
  <li><tt>/etc/rc.securelevel</tt> - Script which runs commands that must be run
  before the security level changes. See
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=init&amp;sektion=8">init(8)</a>
  <li><tt>/etc/rc.shutdown</tt> - Script run on shutdown. Put anything you want
  done before shutdown in this file. See
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.shutdown&amp;sektion=8">rc.shutdown(8)</a>
a151 1
<p>
d153 2
a154 2
<tt>/etc/rc.conf</tt> (for guidance), <tt>/etc/rc.conf.local</tt> (for
changes), <tt>/etc/rc.local</tt> and <tt>/etc/rc.shutdown</tt>.
d162 2
a163 2
      <tt>/etc/rc.conf</tt>, then local changes to those variables are
      read from <tt>/etc/rc.conf.local</tt>.
a180 1
<p>
d184 3
a186 2
<a href="http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/etc/rc.conf?content-type=text/plain">/etc/rc.conf</a>
file. You'll see lines similar to this:
a191 1
<p>
d193 1
a193 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftpd(8)</a>
d196 2
a197 3
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inetd&amp;sektion=8">inetd(8)</a>,
see <a href="faq10.html#AnonFTP">Anonymous FTP FAQ</a> to read more
about this).
d200 3
a202 4
This doesn't mean that you must run that daemon or service with those
flags.
Read the relevant manual page to see how you can have that daemon or
service start up in any way you like.
d210 2
a211 2
This makes future upgrades easier -- all the changes are in the one
file that isn't touched during upgrade.
d214 1
a214 1
For example, to start the 
d227 2
a228 2
If you want to do it by hand, copy just the lines
you need to change from <tt>/etc/rc.conf</tt> and adjust them as you like.
d231 2
a232 1
For example, here is the default line pertaining to <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8">httpd(8)</a>.
d238 5
a242 6
<p>
Here you can see that starting up httpd normally requires no flags, so a
line like <tt>httpd_flags=""</tt> added to <tt>/etc/rc.conf.local</tt>
will do the job.
But to start httpd with options such as <tt>-v</tt>, you would need a line
like <tt>httpd_flags="-v"</tt> instead.
d246 2
a247 3
<p>
For other daemons which you might install on the system via packages or
other ways, you could use the <tt>/etc/rc.local</tt> file.
d249 3
a251 2
/usr/local/sbin/daemonx. I want it to start at boot time.
I could put an entry into <tt>/etc/rc.local</tt> like this:
d255 1
a255 1
	echo 'Starting daemonx'; /usr/local/sbin/daemonx
d259 2
a260 3
<p>
(If the daemon does not automatically detach on startup, remember to add
"&amp;" at the end of the command line.)
d263 3
a265 3
From now on, this daemon will be started at boot. You will be able to see
any errors on boot. A normal boot with no errors would show a line like
this:
d271 2
a272 1
<h3>The <tt>/etc/rc.d/</tt> directory</h3>
d275 1
a275 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.d&amp;sektion=8"
><tt>/etc/rc.d</tt></a>.
d281 6
a286 6
The order for system daemons is coded into <tt>rc</tt>, and the order
for add-in packages is managed by the <tt>pkg_scripts</tt> environment
variable, which would be set in <tt>/etc/rc.conf.local</tt>.
Note that simply placing a script in this directory does not cause it to
be run on boot; the name of the script must be specified in the
<tt>pkg_scripts</tt> variable to start on boot.
d292 8
a299 8
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8">httpd(8)</a>
unless <tt>/etc/rc.conf</tt> or <tt>/etc/rc.conf.local</tt> contains a
line defining the "<tt>httpd_flags</tt>" variable.
To help make sure your system will come up as expected on the next boot,
the <tt>rc.d</tt> scripts will not run their daemon if the appropriate
variable is not defined.
You can, of course, manually invoke <tt>/usr/sbin/httpd</tt> directly
with whatever options you wish, if you wish to run the program manually.
d302 4
a305 5
Note that rather than having each script in rc.d managing the entire
startup, shutdown, reload, restart, and check operations, 
most rc.d scripts can be reduced to specifying a very few variables,
and invoking the 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.subr&amp;sektion=8">rc.subr</a>
d309 2
a310 2
For example, our above <tt>daemonx</tt> application could be started
with a <tt>/etc/rc.d/daemonx</tt> file consisting of:
d327 3
a329 3
<p>
<tt>/etc/rc.shutdown</tt> is a script that is run at shutdown. Anything
you want done before the system shuts down should be added to this file.
d332 1
d334 2
a335 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas&amp;sektion=1">doas(1)</a>
d340 1
a340 1
$ doas fdisk sd1
d344 1
a344 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=fdisk&amp;sektion=8">fdisk(8)</a>
d347 4
a350 4
You don't want average users to be able to get root privileges for any
command they wish to run!
Typically, though certainly not required, users in the "wheel" group
are given permission to run commands with doas.
d353 10
a362 10
One common challenge system administrators face is the contradictory
requirement of multiple people managing machines using logins that
shouldn't be shared.
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas&amp;sektion=1">doas(1)</a>
solves this problem by permitting a certain subset of your users (for
example, members of the "wheel" group) to run predetermined commands
(often, all commands) as another user (often root).
Now, anyone can run administrative commands, only needing to authenticate
as themselves, they do not need to use the root account or know the
root password.
d376 3
a378 2
console prompt.  This way, an erroneously typed command is less likely
to have catastrophic results.
d390 1
a390 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=su&amp;sektion=1">su(1)</a>
d395 1
d400 3
a402 4
The complexity of sudo had prevented the importing of the most
current versions, and the complexity of the sudoers config file
has discouraged many users from doing anything other than uncomment one
line in the conf file.
d416 1
a416 1
<p>
d418 2
a419 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas.conf&amp;sektion=5">doas.conf(5)</a>
d426 4
a429 6
This file gives users in the wheel group root-level access
to all commands, with the environment variables <tt>PKG_PATH</tt>,
<tt>ENV</tt>, <tt>PS1</tt>, and <tt>SSH_AUTH_SOCK</tt> passed through
to the program they are invoking.
The user will be asked to verify their password before the command is
run.
d432 2
a433 3
A more sophisticated doas.conf(5) file which would permit you to build
OpenBSD from source using doas(1) without entering your password every
time might be:
d446 5
a450 6
invoked by any script or program, without the user's knowledge or
permission.
For this reason, systems used as general purpose workstations should
probably not use the "nopass" option, if using doas(1) at all.
The alternative is using <a href="#wheel">su(1)</a> and the root
password to use the root account.
d453 5
a457 5
If you don't like the idea of any script or program you run being able
to silently invoke doas(1) to run something as root, but you find typing
your password over and over annoying, you may want to create a user
for administrative tasks, such as "admin", and have a configuration
file like this:
d463 3
a465 4
Now, anyone who is in the wheel group can become "admin" with just one
entry of their password, and then admin can run the commands they wish
without a password until they drop back to their normal user.

a469 1
<p>
d472 1
a472 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pwd_mkdb&amp;sektion=8">pwd_mkdb(8)</a>.
d486 8
a493 9
<p>
In a traditional Unix password file, such as /etc/passwd, everything
including the user's encrypted password is available to anyone on the
system (and is a prime target for programs such as Crack).
4.4BSD introduced the <tt>master.passwd</tt> file, which has an extended format
(with additional options beyond those provided by <tt>/etc/passwd)</tt> and is
only readable by root. For faster access to data, the library calls
which access this data normally read <tt>/etc/pwd.db</tt> and 
<tt>/etc/spwd.db</tt>.
d497 3
a499 2
file. It is called
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vipw&amp;sektion=8">vipw(8)</a>.
d501 3
a503 3
<tt>/etc/master.passwd</tt>. After you are done editing, it will re-create
<tt>/etc/passwd</tt>, <tt>/etc/pwd.db</tt>, and <tt>/etc/spwd.db</tt> as
per your changes.
d507 1
d510 1
a510 2
<p>
OpenBSD provides two commands for easily adding users to the system: 
d513 2
a514 2
<li><a href="#adduser">adduser(8)</a>
<li><a href="#user">user(8)</a>
d517 2
a518 2
You can also add users by hand, using 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vipw&amp;sektion=8">vipw(8)</a>,
d522 4
a525 4
The easiest way to add a user in OpenBSD is to use the 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8">adduser(8)</a>
script. You can configure adduser(8) by editing
<tt>/etc/adduser.conf</tt>.
d527 6
a532 6
<tt>/etc/group</tt>, and shell databases. It will create the entries and
$HOME directories for you. It can even send a message to the user
welcoming them. Here is an example user, <b>testuser</b>, being added to
a system.
He/she will be given the $HOME directory <tt>/home/testuser</tt>, made a
member of the group <b>guest</b>, and given the shell <tt>/bin/ksh</tt>.
d547 1
a547 1
Uid [1002]: <b><i>Enter</i></b>
d549 1
a549 1
Login group is ``guest''. Invite testuser into other groups: guest no 
d551 3
a553 3
Login class authpf daemon default staff [default]: <b><i>Enter</i></b>
Enter password []: <b><i>Type password, then Enter</i></b>
Enter password again []: <b><i>Type password, then Enter</i></b>
a570 1
<p>
d572 5
a576 3
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rmuser&amp;sektion=8">rmuser(8)</a>
utility. This will remove all existence of a user. It will remove any
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crontab&amp;sektion=1">crontab(1)</a>
d579 4
a582 3
<tt>/etc/group</tt> entries. Next is an example of removing the user that
was added above. Notice you are prompted for the name, and whether or
not to remove the user's home directory.
d601 2
a602 3
<p>
These tools are less interactive than the 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8">adduser(8)</a> 
d608 20
a627 10
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&amp;sektion=8">group(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupadd&amp;sektion=8">groupadd(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupdel&amp;sektion=8">groupdel(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupinfo&amp;sektion=8">groupinfo(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupmod&amp;sektion=8">groupmod(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=user&amp;sektion=8">user(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=useradd&amp;sektion=8">useradd(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=userdel&amp;sektion=8">userdel(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=userinfo&amp;sektion=8">userinfo(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=usermod&amp;sektion=8">usermod(8)</a>
a631 1
<p>
d641 1
a641 2
useradd(8) is less daunting to use if you know the default settings
beforehand.
d643 2
a644 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=usermgmt.conf&amp;sektion=5">usermgmt.conf(5)</a>
and can be viewed by doing:
d657 6
a662 6
<p>
These defaults will be used unless you specify alternatives
with the command line options. For example, we want the user to
be added to the group <b>guest</b>, not <b>users</b>.
One more little hurdle with adding users, is that passwords must be
specified on the command line.
d664 1
a664 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=encrypt&amp;sektion=1">encrypt(1)</a>
d666 3
a668 4
For example: OpenBSD's passwords use the Blowfish algorithm with 8 rounds
by default.
Here is an example to create an encrypted password to give to
useradd(8).
d672 1
a672 1
Enter string: 
a675 1
<p>
d681 2
a682 2
# <b>user add -p '$2b$08$pvin31BFNxR.qiPTAfizFeeCxrlmBhsZLsAajCwAB1rgFFvl8PRXq' -u 1002 \
  -s /bin/ksh -c "Test FAQ User" -m -g guest testuser</b>
d685 6
a690 8
<p>
<b>Note:</b> Make sure to use '&nbsp;' (single quotes)
around the password string, not
&quot;&nbsp;&quot; (double quotes)
as the shell will interpret these before sending it to user(8). In
addition to that, make sure you specify the <tt>-m</tt> option if you want
the user's home directory created and the files from
<tt>/etc/skel</tt> copied over.
d693 3
a695 3
To see that the user was created correctly, we can use many different
utilities. Below are a few commands you can use to quickly check that
everything was created correctly.
d714 2
a715 3
<p>
In addition to these commands, user(8) provides its own utility to show
user characteristics, called userinfo(8).
d733 3
a735 4
<p>
To remove users with the user(8) hierarchy of commands, you will use
userdel(8). This is a very simple, yet usable command. To remove the
user created in the last example, simply:
d741 14
a754 17
<p>
Notice the <tt>-r</tt> option, which must be specified if you want the
users home directory to be deleted as well. Alternatively, you can
specify <tt>-p</tt> and not <tt>-r</tt> and this will lock the user's
account, but not remove any information.

<h2 id="FTPOnly">10.10 - How do I create an ftp-only account (not anonymous FTP!)?</h2>

<p>
There are a few ways to do this, but a very common way to do such is to
add "<tt>/usr/bin/false</tt>" into "<tt>/etc/shells</tt>".
Then when you set a users shell to "<tt>/usr/bin/false</tt>", they will
not be able log in interactively, but will be able to use ftp
capabilities.  You may also want to restrict access by
<a href="#ftpchroot">confining users to their home directory in
ftpd</a>.

d758 4
a761 4
<p>
Quotas are used to limit user's space that they have available to them
on your disk drives. It can be very helpful in situations where you have
limited resources. Quotas can be set by user and/or by group.
d764 5
a768 5
The first step to setting up quotas is to make sure that "<tt>option
QUOTA</tt>" is in your <a href="faq5.html#Options">kernel
configuration</a>. This option is in the GENERIC kernel. After this, you
need to mark in
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=fstab&amp;sektion=5"><tt>/etc/fstab</tt></a>
d770 5
a774 5
The keywords <tt>userquota</tt> and <tt>groupquota</tt> should be used
to mark each filesystem that you will be using quotas on. By default,
the files <tt>quota.user</tt> and <tt>quota.group</tt> will be created
at the root of that filesystem to hold the quota information. This
default can be overridden by specifying the file name with the quota
d776 3
a778 3
"<tt>userquota=/var/quotas/quota.user</tt>".
Here is an example <tt>/etc/fstab</tt> that has one filesystem with
userquotas enabled, and the quota file in a non-standard location:
d784 5
a788 6
<p>
Now it's time to set the user's quotas. To do so you use the utility
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=edquota&amp;sektion=8">edquota(8)</a>.
A simple use is just "<tt>edquota&nbsp;&lt;user&gt;</tt>". edquota(8)
will use vi(1) to edit the quotas unless the environmental variable
EDITOR is set to a different editor. For example:
a793 1
<p>
a801 1
<p>
a809 1
<p>
d811 6
a816 7
In this case, the softlimit is set to 1000k, and the hardlimit is set to
1050k. A softlimit is a limit where the user is just warned when
they cross it and have until their grace period is up to get their disk
usage below their limit. Grace periods can be set by using the
<tt>-t</tt> option on edquota(8). After the grace period is over
the softlimit is handled as a hardlimit. This usually results in an
allocation failure.
d819 3
a821 3
Now that the quotas are set, you need to turn the quotas on. To do this
use
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=quotaon&amp;sektion=8">quotaon(8)</a>.
a827 1
<p>
d829 3
a831 3
quota options. Now that quotas are up and running, you can view them
using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=quota&amp;sektion=1">quota(1)</a>.
d833 4
a836 2
information. When called with no arguments, the quota(1) command will
give your quota statistics. For example:
a841 1
<p>
d845 1
a845 1
Disk quotas for user ericj (uid 1001): 
d847 1
a847 1
              /      62    1000    1050              27       0       0        
d850 2
a851 3
<p>
By default quotas set in <tt>/etc/fstab</tt> will be started on boot. To
turn them off use
d859 4
a862 4
<p>
Anonymous FTP allows users without accounts to access files on your
computer via the File Transfer Protocol. This will give an overview of
setting up the anonymous FTP server, and its logging, etc.
a865 1
<p>
d867 3
a869 2
This account should not have a usable password. Here we will set the login
directory to <tt>/home/ftp</tt>, but you can put it wherever you want.
d871 8
a878 6
directory of the <i>ftp</i> user. To read up more on that, read the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftpd(8)</a> and 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=chroot&amp;sektion=2">chroot(2)</a>
man pages. Here is an example of adding the <i>ftp</i> user. I will do
this using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8">adduser(8)</a>.
d880 3
a882 3
this is the &quot;shell&quot; that we will be giving to the <i>ftp</i> user.
This won't allow them to login, even though we will give them an empty
password. To do this you can simply do
d903 3
a905 4
Uid [1002]: <b><i>Enter</i></b>
Login group ftp [ftp]: <b><i>Enter</i></b>
Login group is ``ftp''. Invite ftp into other groups: guest no 
[no]: <b><i>Enter</i></b>
d907 1
a907 1
Enter password []: <b><i>Enter</i></b>
d919 1
a919 1
OK? (y/n) [y]: <b><i>Enter</i></b>
d928 6
a933 6
<p>
Along with the user, this created the directory <tt>/home/ftp</tt>
(though you can use other locations as well, of course).
There are some changes that we will have to make to
get it ready for anonymous ftp. Again these changes are explained in the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftpd(8)</a> man page.
d936 1
a936 1
You <b>do not</b> need to make a <tt>/home/ftp/usr</tt> or 
d939 7
a945 16
<li><tt>/home/ftp</tt> - This is the main directory. It should be changed
to be owned by root and to have permissions of 555.
It should not be writable by the ftp user!
<li><tt>/home/ftp/etc</tt> - This is entirely optional and not
recommended, as it only serves to give out information on users which
exist on your box. If you want your anonymous ftp directory to appear to
have user and group names attached to your files, you should copy
<tt>/etc/pwd.db</tt> and <tt>/etc/group</tt> to this directory.
This directory should be mode 511, and the two files should be mode 444.
These are used to give owner names as opposed to numbers. There are no
passwords stored in <tt>pwd.db</tt>, they are all in <tt>spwd.db</tt>,
so don't copy that over.
Without the user files, the files will have their group and owners shown
as numbers, which is rarely a problem.
<li><tt>/home/ftp/pub</tt> - This is a standard directory to place files
in which you wish to share. This directory should also be mode 555.
d948 3
a950 3
<p> 
Note that all these directories should be owned by ''root''. Here is a
listing of what the directories should look like after their creation.
d953 1
a953 3
# pwd
/home
# ls -laR ftp
a956 1
dr-x--x--x  2 root  ftp    512 Jul  6 11:34 etc
a958 7
ftp/etc:
total 43
dr-x--x--x  2 root  ftp    512 Jul  6 11:34 .
dr-xr-xr-x  5 root  ftp    512 Jul  6 11:33 ..
-r--r--r--  1 root  ftp    316 Jul  6 11:34 group
-r--r--r--  1 root  ftp  40960 Jul  6 11:34 pwd.db

a966 1
<p>
d968 1
a968 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inetd&amp;sektion=8">inetd(8)</a>
d971 4
a974 3
Generally, running ftpd as a daemon from the rc scripts is recommended
and is what we will show here; a sample line for running it from
inetd(8) is commented out in the default <tt>/etc/inetd.conf</tt>.
d977 2
a978 2
Here is an example line to add to <tt>/etc/rc.conf.local</tt> to start
ftpd(8) at boot.
d981 1
a981 1
<b>ftpd_flags="-llUSA"</b>
d986 10
a995 6
<li><tt><b>ll</b></tt> - detailed logging to syslog.
<li><tt><b>U </b></tt> - log users so 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=who&amp;sektion=1">who(1)</a>
and similar programs can see them.
<li><tt><b>S </b></tt> - log transfers to <tt>/var/log/ftpd</tt>.
<li><tt><b>A </b></tt> - permit only anonymous FTP transfers.
d1000 3
a1002 4
connections; the preceding steps of creating the 'ftp' user is
sufficient.
However, to stop anonymous connections it isn't necessary to undo
everything, just restart ftpd with the <tt>-n</tt> option included.
d1008 9
a1016 6
<li><tt>/etc/ftpwelcome</tt> - This holds the Welcome message for people
once they have connected to your ftp server.
<li><tt>/etc/motd</tt> - This holds the message for people once they have
successfully logged into your ftp server.
<li><tt>.message</tt> - This file can be placed in any directory. It will
be shown once a user enters that directory.
d1019 2
a1020 1
<h2 id="ftpchroot">10.14 - Confining users to their home directories in ftpd(8)</h2>
d1022 2
a1023 3
<p>
By default, when logging in by ftp, users can change to any directory on
the filesystem that they have access to.
d1025 2
a1026 2
It is possible to restrict what users may see through ftp sessions by
chrooting them to their home directory.
d1030 1
a1030 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftpd(8)</a>.
d1034 1
a1034 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=login.conf&amp;sektion=5">login
d1036 1
a1036 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftpd(8)</a>
a1047 1
<p>
d1049 6
a1054 6
Some bugs may lead to reliability issues (i.e., something may cause
the system to stop functioning as desired). Other bugs may lead to security
vulnerabilities (which may allow others to "use" your computer in unintended
and unauthorized ways).
When a critical bug is found, the fix will be committed to
the <i>-current</i> source tree, and patches will be released for the
d1056 4
a1059 4
These patches appear on the <a href="../errata.html">errata web
page</a>, and are separated into "common" errata that impact
all <a href="../plat.html">platforms</a>, and errata that impact only
one or more, but not all, platforms.
d1062 4
a1065 5
Note, however, that patches aren't released for new features or
additional hardware support for OpenBSD,
and are only published for important reliability fixes or security problems
that should be addressed right away on impacted systems (which is often
NOT all systems, depending on their purpose).
d1071 19
a1089 20
<li><b>Upgrade your system to
<a href="current.html"><i>-current</i></a>.</b>
As all fixes are applied to the <i>-current</i> code base, updating your
system to the latest snapshot is a very good way to apply fixed code.
However, running <i>-current</i> is not for everyone.
<li><b>Update your system to <a href="../stable.html"><i>-stable</i></a>.</b>
This is done by fetching or updating your source tree using the appropriate
<i>-stable</i> branch, and recompiling the kernel and userland files.
Overall, this is probably the easiest way, though it takes longer (as the 
entire system gets recompiled) and a complete source checkout can take a 
long time if you have limited bandwidth available.
<li><b>Patch, compile and install individual impacted files.</b>
This is what we will use for our example below.
While this requires less bandwidth and typically less time than an entire 
cvs(1) checkout/update and source code compilation, this is sometimes
the most difficult option, as there is no one universal set of
instructions to follow.
Sometimes you must patch, recompile and install one application, other 
times, you might have to recompile entire sections of the tree if the 
problem is in a library file.
d1092 5
a1096 6
Again, patching individual files is not always simple, so give serious
thought to following the <a href="../stable.html"><i>-stable</i></a> (or
"patch") branch of OpenBSD.
Mixing and matching of patching solutions can be done if you understand
how everything works, but new users should pick one method and stick with 
it.
d1100 4
a1103 6
<p>
All patches posted to the
<a href="../errata.html">errata web page</a> are patches
directly against the indicated release's source tree. Patches against the
latest CVS tree might also include other changes that wouldn't be wanted
on a release system.
d1105 2
a1106 2
trees at the time you obtained that snapshot and attempt to patch it using a 
published patch, you may well find the patch doesn't apply, as that code 
a1108 2


d1111 2
a1112 3
<p>
Patches for OpenBSD are distributed as unified diffs, which
are text files that hold differences to the original source code.
d1114 2
a1115 2
This means that to apply a patch you must have the source code
from the <b>RELEASE</b> version of your system available.
d1118 1
a1118 1
If you are running a release from an official CD-ROM, the source trees are 
d1124 3
a1126 3
For our example here, we will look at patch 011 for OpenBSD 5.6, dealing with 
<a href="http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man4/pppoe.4">pppoe(4)</a>
connections.
d1128 2
a1129 2
People using PPPOE <i>needed</i> this patch, however those who
didn't may have had no particular need to install it.
d1150 1
a1150 1
 
d1165 6
a1170 4
applying it. Patches are cryptographically signed
with the <a href="http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/signify.1">signify(1)</a> tool.
We will assume you have put this patch into your current working
directory, in which case the following steps are used:
d1173 2
a1174 2
# <b>signify -Vep /etc/signify/openbsd-56-base.pub -x 011_pppoe.patch.sig \
  -m - | (cd /usr/src && patch -p0)</b>
d1206 9
a1214 9
Many patches are more complex than this one, and will involve multiple
hunks and multiple files, in which case you should verify that all
hunks succeeded on all files.
If they did not, it normally means your source tree was different in
some way from the release source tree the patch was created from, or you
didn't follow instructions carefully, or your patch was mangled.
Patches are very sensitive to "white space" -- copying and pasting from 
your browser will often change tab characters into spaces or otherwise
alter the white space of a file, making it not apply.
d1217 2
a1218 2
At this point, you can <a href="faq5.html#BldKernel">build and
install</a> the new kernel, then reboot the system as normal.
d1222 2
a1223 2
In some cases, you will have to rebuild individual utilities. At other
times, will require recompiling all utilities statically linked to a
d1225 2
a1226 2
Follow the guidance in the header of the patch and, if uncertain,
rebuild the entire system.
d1231 6
a1236 6
For example, if you did not use PPPOE connections on your system, you would
not benefit from the above patch.
However, patches are assumed to be applied "in order" -- it is possible
that a later patch is dependent upon an earlier one.
Be aware of this if you elect to "pick and choose" which patches you
apply, and if in doubt, apply them all in order.
d1239 3
a1241 2
It is sometimes said that one should never change the root shell, though
there is no reason not to in OpenBSD.
d1244 2
a1245 2
The default shell for <i>root</i> on OpenBSD is 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh&amp;sektion=1">ksh</a>.
d1248 7
a1254 8
A traditional Unix guideline is to only use statically compiled shells
for root, because if your system comes up in single user mode, non-root
partitions won't be mounted and dynamically linked shells won't be able
to access libraries located in the <tt>/usr</tt> partition. This isn't
actually a significant issue for OpenBSD, as the system will prompt you
for a shell when it comes up in single user mode, and the default is
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sh&amp;sektion=1">sh</a>.

d1256 2
a1257 2
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=csh&amp;sektion=1">csh</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sh&amp;sektion=1">sh</a>
d1259 1
a1259 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh&amp;sektion=1">ksh</a>)
d1263 23
a1285 21
In OpenBSD, 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh&amp;sektion=1">ksh</a>
is <a href="http://web.cs.mun.ca/~michael/pdksh/">pdksh</a>, the Public
Domain Korn Shell, and is the same binary as
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sh&amp;sektion=1">sh</a>.

<p>
Users comfortable with <i>bash</i>, often used on Linux systems, will
probably find
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh&amp;sektion=1">ksh</a>
very familiar. ksh(1) provides most of the commonly used features in
bash, including tab completion, command line editing and history
via the arrow keys, and CTRL-A/CTRL-E to jump to beginning/end of the
command line. If other features of bash are desired, it can be installed
via either <a href="faq15.html#PkgMgmt">packages</a>
or <a href="faq15.html#Ports">ports</a>.

<p>
The command prompt of <tt>ksh</tt> can easily be changed to something
providing more information than the default "<tt>$ </tt>" by setting the
<tt>PS1</tt> variable. For example, inserting the following line:
d1291 1
a1291 1
in your <tt>/etc/profile</tt> produces the following command prompt:
d1298 2
a1299 1
<a href="http://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/etc/ksh.kshrc?content-type=text/plain"><tt>/etc/ksh.kshrc</tt></a>,
d1304 2
a1305 3
OpenBSD's ksh(1) has been enhanced with a number of 
"special characters" for the primary prompt string, PS1, similar to 
those used in bash.
d1307 1
d1320 1
a1320 2
(see the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ksh&amp;sektion=1">ksh(1)</a>
d1327 1
d1329 1
a1329 1
export PS1="\n\u@@\H\n\w \\$ "
d1331 1
a1335 1
<p>
a1340 1
<p>
d1344 16
a1359 17
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=getpwent&amp;sektion=3"
>getpwent(3)</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=getgrent&amp;sektion=3"
>getgrent(3)</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gethostbyname&amp;sektion=3"
>gethostbyname(3)</a> and so on.
Thus, if you keep your data in a YP database, you do not need
to copy it to local configuration files like
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=master.passwd&amp;sektion=5"
>master.passwd(5)</a> before you can use it,
for example to authenticate system users.

<p>
YP is a directory service compatible with
Sun Microsystems NIS (Network Information System).
See
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yp&amp;sektion=8">yp(8)</a>
d1370 2
a1371 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypldap&amp;sektion=8"
>ypldap(8)</a> daemon provides the latter.
d1376 4
a1379 5
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cron&amp;sektion=8"
>cron(8)</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1"
>scp(1)</a> or <tt>rsync</tt> (available from ports) constitutes an easy
and robust alternative to a full-blown directory service.
a1382 1
<p>
d1384 16
a1399 16
implementation of YP are switched <em>off</em> by default.
Even when they are all switched on, the NIS protocol is still
inherently insecure for two reasons:
All data, including sensitive data like password hashes,
is transmitted unencrypted across the network, and neither the client
nor the server can reliably verify each other's identity.

<p>
Thus, before setting up any YP server, you should consider whether
these inherent security flaws are acceptable in your context.
In particular, YP is inadequate if potential attackers have physical
access to your network.
Anybody gaining root access to any computer connected to your network
segments carrying YP traffic can bind your YP domain and retrieve its data.
In some cases, passing YP traffic through SSL or IPSec tunnels
might be an option.
d1404 203
a1606 202
<li><p>
A YP server serves a group of clients called a "domain".
You should first select a domain name; it can be an arbitrary string
and need not be related in any way to DNS domain names.
Choosing a random name like "Eepoo5vi" can marginally improve security,
though the effect is mostly in security by obscurity.
In case you need to maintain several distinct YP domains,
it's probably better to choose descriptive names like "sales",
"marketing" and "research" in order to forestall system administration
errors caused by obscurity.
Also note that some versions of SunOS require using the host's DNS
domain name, so your choice might be restricted in a network including
such hosts.

<p>
Use the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=domainname&amp;sektion=1"
>domainname(1)</a> utility to set the domain name, and put it into the file
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=defaultdomain&amp;sektion=5"
>defaultdomain(5)</a> to have it automatically set at system startup time. 

<blockquote><pre>
echo "puffynet" > /etc/defaultdomain
domainname `cat /etc/defaultdomain`
</pre></blockquote>

<li><p>
Initialise the YP server using the interactive command

<blockquote><pre>
ypinit -m
</pre></blockquote>

At this point, it is not necessary to specify slave servers yet.
To add slave servers, you can rerun
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypinit&amp;sektion=8"
>ypinit(8)</a> later, using the <tt>-u</tt> option.

Setting up at least one slave server for each domain is useful
to avoid service interruptions, should the master server ever go down
or lose network connectivity, in particular since client processes
trying to access YP maps block indefinitely until they receive the
requested information.  Thus, YP service interruptions typically render
the client hosts completely unusable until YP is back to service.

<li><p>
Decide where to store the source files to generate your YP maps from.
Keeping the server configuration separate from the served configuration
helps to control which information will be served and which won't,
so the default <tt>/etc</tt> often isn't the best choice.

<p>
The only inconvenience caused by changing the source directory
is that you will not be able to add, remove and modify users and groups
in the YP domain using utilities like
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=user&amp;sektion=8"
>user(8)</a> and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&amp;sektion=8"
>group(8)</a>.
Instead, you will have to edit the configuration files with a text editor.

<p>
To define the source directory, edit the file
<tt>/var/yp/`domainname`/Makefile</tt>
and change the <tt>DIR</tt> variable, e.g.

<blockquote><pre>
DIR=/etc/yp/src/puffynet
</pre></blockquote>

<li><p>
Consider customizing other variables in
<tt>/var/yp/`domainname`/Makefile</tt>.  See
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=Makefile.yp&amp;sektion=8"
>Makefile.yp(8)</a> for details.

<p>
For example, even in case you use the default source directory <tt>/etc</tt>,
you do not usually need all accounts and groups existing on the server on all
your client hosts.  In particular, not serving the root account and thus
keeping root's password hash confidential is often beneficial to security.
Review the values of <tt>MINUID</tt>, <tt>MAXUID</tt>, <tt>MINGID</tt>
and <tt>MAXGID</tt> and adjust them to you needs.

<p>
If all your YP clients run OpenBSD or FreeBSD, exclude the encrypted
passwords from the <tt>passwd</tt> maps by setting <tt>UNSECURE=""</tt> in
<tt>/var/yp/`domainname`/Makefile</tt>.

<p>
The former practice of editing the template file <tt>/var/yp/Makefile.yp</tt>
is no longer recommended.  Changes to that file affect all domains initialized
after the change, but do not affect domains initialized before the change,
so this is error-prone either way: You both risk that the intended changes
do not take effect, and you risk to forget about them and have them affect
other domains later which they were never intended for.

<li><p>
Create the source directory and populate it with the configuration files
you need.  See
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=Makefile.yp&amp;sektion=8"
>Makefile.yp(8)</a> to learn which YP maps require which source files.
For the format of the individual configuration files, refer to
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=passwd&amp;sektion=5"
>passwd(5)</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&amp;sektion=5"
>group(5)</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hosts&amp;sektion=5"
>hosts(5)</a> and so on, and look at the examples in <tt>/etc</tt>.

<li><p>
Create the initial version of your YP maps using the commands

<blockquote><pre>
cd /var/yp
make
</pre></blockquote>

Do not worry about error messages from
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yppush&amp;sektion=8"
>yppush(8)</a> right now.
The YP server is not yet running.

<li><p>
YP uses
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rpc&amp;sektion=3"
>rpc(3)</a> (remote procedure calls) to communicate with clients,
so it is necessary to enable
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=portmap&amp;sektion=8"
>portmap(8)</a>.
To do so, edit
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf.local&amp;sektion=8"
>rc.conf.local(8)</a> and set <tt>portmap_flags=""</tt>.
This will start the portmapper on next boot.
You can avoid rebooting by also starting it manually:

<blockquote><pre>
echo 'portmap_flags=""' >> /etc/rc.conf.local
portmap
</pre></blockquote>

<li><p>
Consider using either the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=securenet&amp;sektion=5"
>securenet(5)</a> or the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypserv.acl&amp;sektion=5"
>ypserv.acl(5)</a> security feature of the YP server daemon.
But be aware that both of these only provide IP based access control.
Thus, they only help as long as potential attackers have neither physical
access to the hardware of the network segments carrying your YP traffic
nor root access to any host connected to those network segments.

<li><p>
Finally, start the YP server daemon:

<blockquote><pre>
ypserv
</pre></blockquote>

It will automatically be restarted at boot time as long as the directory
<tt>/var/yp/`domainname`</tt> continues to exist.

<li><p>
To test the new server, consider making it its own client,
following the instructions in the first part of the next section.
In case you don't want the server to use its own maps, you can
disable the client part after the test with the following commands:

<blockquote><pre>
pkill ypbind
rm -rf /var/yp/binding
</pre></blockquote>

<li><p>
If you wish to allow users to change their passwords from client machines,
then you must enable
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yppasswdd&amp;sektion=8"
>yppasswdd(8)</a>:

<blockquote><pre>
echo 'yppasswdd_flags="-d /etc/yp/src/puffynet"' >> /etc/rc.conf.local
rpc.yppasswdd
</pre></blockquote>

In case you left the source directory at the default <tt>/etc</tt>,
just use <tt>yppasswdd_flags=""</tt>.

<li><p>
Remember that each time you change a file sourced by a YP map,
you must regenerate your YP maps.

<blockquote><pre>
cd /var/yp
make
</pre></blockquote>

This updates all database files in <tt>/var/yp/`domainname`</tt>, with
one exception:  The file <tt>ypservers.db</tt>, listing all YP master
and slave servers associated with the domain, is created directly
from <tt>ypinit -m</tt> and modified exclusively by <tt>ypinit -u</tt>.
In case you accidentally delete it, run <tt>ypinit -u</tt> to recreate
it from scratch.
d1618 2
a1619 30
<li><p>
Like on the server, you must set the domain name and enable the portmapper:

<blockquote><pre>
echo "puffynet" > /etc/defaultdomain
domainname `cat /etc/defaultdomain`
echo 'portmap_flags=""' >> /etc/rc.conf.local
portmap
</pre></blockquote>

<li><p>
It is recommended to provide a list of YP servers in the configuration
file <tt>/etc/yp/`domainname`</tt>.
Otherwise, the YP client daemon will use network broadcasts to find
YP servers for its domain.
Explicitly specifying the servers is both more robust and marginally
less open to attack.
If you have not set up any slave servers, just put the host name
of the master server into <tt>/etc/yp/`domainname`</tt>.

<li><p>
The YP client daemon is called
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypbind&amp;sektion=8"
>ypbind(8)</a>.
Starting it manually will create the directory <tt>/var/yp/binding</tt>,
such that it will be automatically restarted at boot time.

<blockquote><pre>
ypbind
</pre></blockquote>
d1621 42
a1662 16
<li><p>
If all went well you should be able to query the YP server using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypcat&amp;sektion=1"
>ypcat(1)</a> and see your passwd map returned.

<blockquote><pre>
ypcat passwd
bob:*:5001:5000:Bob Nuggets:/home/bob:/usr/local/bin/zsh
...
</pre></blockquote>

Other useful tools for debugging your YP setup include
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypmatch&amp;sektion=1"
>ypmatch(1)</a> and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yptest&amp;sektion=8"
>yptest(8)</a>.
d1677 2
a1678 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=Makefile.yp&amp;sektion=8"
>Makefile.yp(8)</a>.
d1682 23
a1704 28
<li><p>
If you want to include all user accounts from the YP domain,
append the default YP marker to the master password file and rebuild
the password database:

<blockquote><pre>
echo '+:*::::::::' >> /etc/master.passwd
pwd_mkdb -p /etc/master.passwd
</pre></blockquote>

For details on selective inclusion and exclusion of user accounts, see
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=passwd&amp;sektion=5"
>passwd(5)</a>.
To test whether inclusion actually works, use the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=id&amp;sektion=1"
>id(1)</a> utility.

<li><p>
If you want to include all groups from the YP domain,
append the default YP marker to the group file:

<blockquote><pre>
echo '+:*::' >> /etc/group
</pre></blockquote>

For details on selective group inclusion, see
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&amp;sektion=5"
>group(5)</a>.
d1706 2
d1712 3
a1714 2
OpenBSD uses the ASCII character set by default. It also supports
the Latin (ISO-8859-*), KOI-8, and Unicode (UTF-8) character sets.
d1718 2
a1719 2
<p>To use one of the extended character sets, the <tt>LC_CTYPE</tt>
environment variable must be set to the name of a supported locale.
d1723 3
a1725 1
<p>The list of supported locales can be obtained by running the command:
d1727 1
a1727 1
locale -a
d1734 26
a1759 20
<li>If logging in via
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xdm&amp;sektion=1">xdm(1)</a>,
add a line such as
<blockquote><pre>
export LC_CTYPE="en_US.UTF-8"
</pre></blockquote>
to <tt>~/.xsession</tt> before starting the window manager (see the section on
<a href="faq11.html#CustomizingX">customizing X</a> for details).
This example enables the Unicode (UTF-8) character set and will also cause
applications such as
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xterm&amp;sektion=1">xterm(1)</a>
to enable UTF-8 mode by default.

<li><p>If logging in via the text console add a line such as
<blockquote><pre>
export LC_CTYPE="en_US.ISO8859-1"
</pre></blockquote>
to <tt>~/.profile</tt>.
Note that the text console supports ASCII and ISO8859-1 only.
It does not support UTF-8.
d1762 2
a1763 1
<p>Few utilities in the base system support UTF-8 at this time.
d1767 2
a1768 1
<p>UTF-8 can also be used with specific applications only by starting
d1770 1
a1770 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=uxterm&amp;sektion=1">uxterm(1)</a>.
d1773 3
a1775 2
<p>When logging into remote systems with
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>,
d1781 2
a1782 2
<p>The language used for application messages can be changed by setting
the <tt>LC_MESSAGES</tt> environment variable to the name of a supported locale.
d1784 2
a1785 2
<a href="#charset">above</a>. Both <tt>LC_MESSAGES</tt> and <tt>LC_CTYPE</tt>
should be set to the same value.
d1787 6
a1792 5
<p>Few utilities in the base system support languages other than English
at this time.
However, many programs from the ports collection support localized
messages in various languages. They will fall back to English if the
desired language is not available.
@


1.208
log
@put </ul> back where it belongs; noticed by jca
@
text
@d29 1
a29 1
<li><a href="#rc"            >10.3 - How do I start daemons with the system? (Overview of rc(8))</a>
d32 1
a32 1
<li><a href="#AddDelUser"    >10.9 - How do I add a user? Or delete a user?</a>
d35 1
a35 1
<li><a href="#AnonFTP"       >10.13 - Setting up an Anonymous FTP Server</a>
d107 1
a107 2
<h2 id="rc">10.3 - How do I start daemons with the system? (Overview of
rc(8))</h2>
d498 1
a498 1
<h2 id="AddDelUser">10.9 - What is the best way to add and delete users?</h2>
d854 1
a854 1
<h2 id="AnonFTP">10.13 - Setting up Anonymous FTP Services</h2>
d1753 1
a1753 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xdm&amp;sektion=1">xdm(1)</a>
@


1.207
log
@Support for 'yp' in resolv.conf was removed last november.
So don't mention it in the FAQ... ok  tj@@
@
text
@d1730 2
@


1.206
log
@some html surgery: use consistent markup for commands and files rather
than four different ways chosen randomly. do a bit of rewording and fix
one ntpd mention that i missed in the previous commit.

input/ok tb
@
text
@a1729 11
<li><p>
If you are distributing hostnames via YP, you should now review
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf&amp;sektion=5"
>resolv.conf(5)</a> and check that the name service lookup order is correct.
Most users will require a line like this:

<blockquote><pre>
lookup file yp bind
</pre></blockquote>
</ul>

@


1.205
log
@Mention rcctl(8) before explaining how to edit rc.conf.local by hand.
The former method is easier, safer and should be preferred.

tweaks and ok tj@@
@
text
@d59 1
a59 1
On OpenBSD, users who are in the <kbd>wheel</kbd>
d68 1
a68 1
you can add them to the <kbd>wheel</kbd> group by answering "wheel" at the
d70 3
a72 3
Existing users must be added to the <kbd>wheel</kbd> group by hand.
Here is an example of a <kbd>/etc/group</kbd> entry which has had the user
<b>ericj</b> added to the <kbd>wheel</kbd> group:
d80 1
a80 1
privileges without adding users to the <kbd>wheel</kbd> group, you can use
d86 1
a86 1
To duplicate your filesystem use
d89 2
a90 2
For example, to duplicate everything under directory <kbd>SRC</kbd> to
directory <kbd>DST</kbd>, do a:
d115 2
a116 2
  <li>/etc/rc - Main script. Should not be edited.
  <li>/etc/rc.conf - Configuration file used by <i>/etc/rc</i> to set
d119 4
a122 4
  <li>/etc/rc.conf.local - Configuration file that overrides
  settings in /etc/rc.conf so you don't have to touch /etc/rc.conf
  itself, which is important when upgrading your system.
  <li>/etc/netstart - Script used to initialize the network. Shouldn't
d124 1
a124 1
  <li>/etc/rc.local - Script used for local administration. This is
d126 1
a126 1
  <li>/etc/rc.securelevel - Script which runs commands that must be run
d129 1
a129 1
  <li>/etc/rc.shutdown - Script run on shutdown. Put anything you want
d138 2
a139 2
<i>/etc/rc.conf</i> (for guidance), <i>/etc/rc.conf.local</i> (for
changes), <i>/etc/rc.local</i> and <i>/etc/rc.shutdown</i>.
d143 1
a143 1
After the kernel is booted, <i>/etc/rc</i> is started:
d145 1
a145 1
  <li>Filesystems are checked.
d147 4
a150 3
      <i>/etc/rc.conf</i>, then local changes to those variables are
      read from <i>/etc/rc.conf.local</i>.
      Settings in rc.conf.local will override those in rc.conf.
d152 2
a153 2
  <li>Clears out <i>/tmp</i> and preserves any editor files
  <li>Configures the network via <i>/etc/netstart</i>
d155 2
a156 2
    <li>Configures your interfaces up.
    <li>Sets your hostname, domainname, etc.
d158 4
a161 5
  <li>Starts system daemons
  <li>Performs various other checks (quotas, savecore, etc)
  <li>Runs <i>/etc/rc.firsttime</i>
  <li>Runs <i>/etc/rc.local</i>
  <li>Processes local and package scripts in <i>/etc/rc.d</i>
d168 1
a168 1
by variables defined in the <i>/etc/rc.conf</i> configuration file.
d236 1
a236 1
other ways, you could use the <i>/etc/rc.local</i> file.
d239 1
a239 1
I could put an entry into <i>/etc/rc.local</i> like this:
d249 1
a249 1
a "&amp;" at the end of the command line.)
d253 1
a253 1
any errors on boot, a normal boot with no errors would show a line like
d260 1
a260 1
<h3>The <i>/etc/rc.d/</i> directory</h3>
d264 2
a265 2
><i>/etc/rc.d</i></a>.
All system daemons are handled by these scripts, and most add-in
d280 2
a281 2
For example, <tt>/etc/rc.d/ntpd</tt> does not start
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ntpd&amp;sektion=8">ntpd(8)</a>
d283 1
a283 1
line defining the "<tt>ntpd_flags</tt>" variable.
d287 1
a287 1
You can, of course, manually invoke <tt>/usr/sbin/ntpd</tt> directly
d318 1
a318 1
<i>/etc/rc.shutdown</i> is a script that is run at shutdown. Anything
d326 1
d330 1
d383 1
a383 1
doas(1) is OpenBSD's replacement for the sudo command.
d386 1
a386 1
The complexity of sudo has prevented the importing of the most
d395 1
a395 1
code base and a simpler configuration file.
d405 1
a405 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=doas.conf&amp;sektion=5">doas.conf</a>
d407 1
d413 3
a415 2
to all commands, with the environment variables PKG_PATH, ENV, PS1, and
SSH_AUTH_SOCK passed through to the program they are invoking.
d434 1
a434 1
While the "nopass" option makes using "doas" very easy, it can also be
d446 1
a446 1
for administrative tasks, such as "admin", and have a <tt>doas.conf</tt>
d462 2
a463 2
If you edit <i>/etc/passwd</i> directly, your changes will be lost.
OpenBSD generates <i>/etc/passwd</i> dynamically with
d465 2
a466 2
The main password file in OpenBSD is <i>/etc/master.passwd</i>.
According to pwd_mkdb(8),
d482 2
a483 2
4.4BSD introduced the master.passwd file, which has an extended format
(with additional options beyond those provided by /etc/passwd) and is
d485 2
a486 1
which access this data normally read /etc/pwd.db and /etc/spwd.db.
d492 5
a496 4
Vipw will use vi (or your favourite editor defined per $EDITOR) to edit
/etc/master.passwd. After you are done editing, it will re-create
/etc/passwd, /etc/pwd.db, and /etc/spwd.db as per your changes.
Vipw also takes care of locking these files, so that if anyone else
d517 3
a519 3
<i>/etc/adduser.conf</i>.
adduser(8) allows for consistency checks on <i>/etc/passwd</i>,
<i>/etc/group</i>, and shell databases. It will create the entries and
d523 2
a524 2
He/she will be given the $HOME directory <i>/home/testuser</i>, made a
member of the group <b>guest</b>, and given the shell <i>/bin/ksh</i>.
d569 2
a570 2
Of course it will also remove their <i>/etc/passwd</i> and
<i>/etc/group</i> entries. Next is an example of removing the user that
d614 5
a618 5
The command <i>/usr/sbin/user</i> is just a frontend to the rest of the
<i>/usr/sbin/user*</i> commands.
Therefore, the following commands can be added by using <b>user add</b>
or <b>useradd</b>,
which form you chose doesn't change the results at all.
d675 1
a675 1
addition to that, make sure you specify the <b>-m</b> option if you want
d677 1
a677 1
<i>/etc/skel</i> copied over.
d731 1
a731 1
Notice the <b>-r</b> option, which must be specified if you want the
d733 1
a733 1
specify <b>-p</b> and not <b>-r</b> and this will lock the user's
d744 1
a744 1
<a href="#ftpchroot">Confining users to their home directory in
d757 2
a758 2
QUOTA</tt>" is in your <a href="faq5.html#Options">Kernel
Configuration</a>. This option is in the GENERIC kernel. After this, you
d811 1
a811 1
<b>-t</b> option on edquota(8). After the grace period is over
d867 1
a867 1
directory to /home/ftp, but you can put it wherever you want.
d875 2
a876 2
We also need to add /usr/bin/false to our <i>/etc/shells</i>, this is
the &quot;shell&quot; that we will be giving to the <i>ftp</i> user.
d933 2
a934 2
You <b>do not</b> need to make a /home/ftp/usr or /home/ftp/bin
directory.
d936 1
a936 1
<li><i>/home/ftp</i> - This is the main directory. It should be changed
d938 2
a939 2
It should not be writable by the "<tt>ftp</tt>" user!
<li><i>/home/ftp/etc</i> - This is entirely optional and not
d950 1
a950 1
<li><i>/home/ftp/pub</i> - This is a standard directory to place files
d1015 1
a1015 1
everything, just restart ftpd with the <b>-n</b> option included.
d1039 1
a1039 1
If you only wish to allow chrooted ftp logins, use the <b>-A</b> option to
d1052 1
a1052 1
Additionally, you can add a username to the file <b>/etc/ftpchroot</b>
d1291 1
a1291 1
<i>bash</i>, including tab completion, command line editing and history
d1293 2
a1294 2
command line. If other features of <i>bash</i> are desired, <i>bash</i>
itself can be loaded via either <a href="faq15.html#PkgMgmt">packages</a>
d1298 2
a1299 2
The command prompt of <i>ksh</i> can easily be changed to something
providing more information than the default "$ " by setting the
d1322 11
a1332 11
<blockquote>
<tt>\e - </tt>Insert an ASCII escape character.<br>
<tt>\h - </tt>The hostname, minus domain name.<br>
<tt>\H - </tt>The full hostname, including domain name.<br>
<tt>\n - </tt>Insert a newline character.<br>
<tt>\t - </tt>The current time, in 24-hour HH:MM:SS format.<br>
<tt>\u - </tt>The current user's username.<br>
<tt>\w - </tt>The current working directory.  $HOME is abbreviated as `~'.<br>
<tt>\W - </tt>The basename of the current working directory.<br>
<tt>\$ - </tt>Displays "#" for root users, "$" for non-root users.
</blockquote>
d1337 1
a1337 1
Also note the "$" character has special meaning inside double quotes, so
d1748 1
a1748 1
<p>To use one of the extended character sets, the <i>LC_CTYPE</i>
d1750 1
a1750 1
<i>LC_CTYPE</i> will only affect the character set available to applications.
d1758 2
a1759 1
The <i>LC_CTYPE</i> environment variable can be set in one of the following ways:
d1768 1
a1768 1
to <i>~/.xsession</i> before starting the window manager (see the section on
d1779 1
a1779 1
to <i>~/.profile</i>.
d1795 1
a1795 1
the <i>LC_CTYPE</i> environment variable is not propagated and will need
d1801 3
a1803 3
the <i>LC_MESSAGES</i> environment variable to the name of a supported locale.
This can be done in the same way as described for <i>LC_CTYPE</i>
<a href="#charset">above</a>. Both <i>LC_MESSAGES</i> and <i>LC_CTYPE</i>
@


1.204
log
@ntpd is enabled by default now, so this example needs to be adjusted.
also fix some odd wording while i'm here. ok tb
@
text
@d193 5
a197 3
We strongly suggest you do not alter <i>/etc/rc.conf</i> itself.
Instead, create or edit the file <i>/etc/rc.conf.local</i>, copy just the lines
you need to change from <i>/etc/rc.conf</i> and adjust them as you like.
d202 17
d227 1
a227 1
line like <tt>httpd_flags=""</tt> added to <i>/etc/rc.conf.local</i>
a230 16

<p>
This process can be made somewhat easier and less error-prone by using
the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcctl">rcctl(8)</a>
utility. For example, to start the 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=apmd">apmd(8)</a>
daemon for CPU scaling, you might do:

<p>
<blockquote><pre>
# <b>rcctl enable apmd</b>
# <b>rcctl set apmd flags -A</b>
# <b>rcctl start apmd</b>
</pre></blockquote>

The syntax is very straightforward.
@


1.203
log
@add missing word, from Halim Srama
@
text
@d200 1
a200 1
For example, here is the default line pertaining to <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ntpd&amp;sektion=8">ntpd(8)</a>.
d203 1
a203 1
ntpd_flags=NO          # for normal use: ""
d207 2
a208 2
Here you can see that starting up ntpd normally requires no flags, so a
line like <tt>ntpd_flags=""</tt> added to <i>/etc/rc.conf.local</i>
d210 2
a211 3
But to start ntpd with options, such as <tt>-s</tt> to immediately
update the system clock at boot you would need a line like
<tt>ntpd_flags="-s"</tt> instead.
d336 3
a338 3
One common challenge when professionally administering computers is
the contradictory requirements of multiple people being able to manage
every machine and that account passwords should not be shared.
@


1.202
log
@TJ strikes again:

faq10.html:
- mention rcctl as an alternative to editing rc.conf.local directly
- blowfish uses eight rounds, not six (redo example too)

faq6.html:
- remove redundant info, link to more detailed article
- fix redundant pf line, keep state is default now
- i don't think pxe was "recently" introduced
- replace mention of "draft n" with just n

faq8.html:
- replace more ugly tables

faq9.html:
- modernize disk device name examples

...and of course the usual healthy dose of sprinkling small
improvements here and there.
@
text
@d339 1
a339 1
every machine and that account passwords should not shared.
@


1.201
log
@TJ's work on the FAQ continues, this time a big diff with lots of small
fixes:

- only specify the current supported "set debug" choices in the options
  section of the pf faq
- clarify ipv4 vs ipv6 configs in the nat section of the pf faq
- mention that usb disk images are available in addition to the cd isos
- don't say that all donors get their name on the donations page anymore
- replace the last few instances of "ftp mirrors" with "http mirrors" or
  just "mirrors" where appropriate
- reword some 5.8 mentions to reduce the amount of version bumps we have
  to do each release
- few minor tweaks

Thanks!
@
text
@d214 16
d330 1
a330 1
Key words there are "appropriately configured", of course.
d367 1
a367 2
use 'doas', never use 'root'!" or spend hours making things happen
without root.
d641 2
a642 2
For example: OpenBSD's passwords by default use the Blowfish
algorithm for 6 rounds.
d647 3
a649 3
$ <b>encrypt -p -b 6</b>
Enter string:
$2a$06$YOdOZM3.4m6MObBXjeZtBOWArqC2.uRJZXUkOghbieIvSWXVJRzlq
d658 2
a659 2
# <b>user add -p '$2a$06$YOdOZM3.4m6MObBXjeZtBOWArqC2.uRJZXUkOghbieIvSWXVJRzlq' -u 1002 \
-s /bin/ksh -c "Test FAQ User" -m -g guest testuser</b>
d1119 1
a1119 1
<h3>Applying patches.</h3>
d1176 1
a1176 1
applying it. As of OpenBSD 5.5, patches are cryptographically signed
d1282 1
a1282 1
very familiar. Ksh(1) provides most of the commonly used features in
@


1.200
log
@consistent use of CD-ROM, some from Larry Hynes
@
text
@d1116 1
a1116 1
<a href="../ftp.html">FTP servers</a>.
@


1.199
log
@get rid of some duplicate content; from TJ
@
text
@d1114 1
a1114 1
If you are running a release from an official CDROM, the source trees are 
@


1.198
log
@two typos; from Reinhold Straub <demarchie at web dot de>
@
text
@d353 1
a353 1
Notably, if you set doas to not require a the confirmation of your
d359 1
a359 1
to elevate one's self to root status, or use doas(1) with the password
d375 1
a375 1
doas(1) is intended to have a simpler, and thus hopefully more secure
d381 1
a381 1
<a href="faq15.html">package</a>
d392 1
a392 1
This file gives users in the wheel group no password root-level access
d394 1
a394 1
SSH_AUTH_SOCK passed through to the program you are invoking.
@


1.197
log
@
introduction to doas.  Help and "learn to spell!" from tedu@@.
@
text
@d33 1
a33 1
<li><a href="#FTPOnly"       >10.10 - How do I create a ftp-only account?</a>
d399 1
a399 1
A more sophisticated dosas.conf(5) file which would permit you to build
@


1.196
log
@
powerdown= is gone.  diff from fred (openbsd at crowsons.com), mangled by
gmail, I suspect.
@
text
@d30 1
d80 2
a81 2
privileges without adding users to the <kbd>wheel</kbd> group, use
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sudo&amp;sektion=8">sudo(8)</a>.
d302 134
@


1.195
log
@add man link; Rob Pierce <rob2 at keys dot ca>
@
text
@a300 2
If you have apm, you can also set &quot;powerdown=YES&quot;, which will
give you the equivalent of &quot;shutdown -p&quot;.
@


1.194
log
@Clean up meta tags.

name=distribution, name=keywords, and name=resource-type have no effect
in modern search engines and just clutter up the page source.

From Pavel Plamenov.
@
text
@d199 1
a199 1
For example, here is the default line pertaining to ntpd(8).
@


1.193
log
@Add 'link rel="canonical"' to pages, acting as a hint to search engines
to list the copies on www.openbsd.org rather than mirrors.

From Carlin Bingham, ok millert@@ nick@@
@
text
@a5 1
<meta name= "resource-type" content= "document">
a6 2
<meta name= "keywords"      content= "openbsd,faq10">
<meta name= "distribution"  content= "global">
@


1.192
log
@
from tj at mrsk dot me: updates "to 2015".  signify, modern patch to a
modern version of the os, etc.
@
text
@d11 1
@


1.191
log
@Update empty password question for adduser. ok nick@@
@
text
@d976 1
a976 2
Patches for the OpenBSD Operating System are distributed as "Unified
diffs", which
d984 1
a984 1
available as files on disk 3, these can also be downloaded from the
d989 6
a994 7
For our example here, we will look at patch 001 for OpenBSD 3.6 dealing
with the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=st&amp;sektion=4">st(4)</a>
driver, which handles tape drives.
Without this patch, recovering data from backups was quite difficult.
People using a tape drive <i>needed</i> this patch, however those without
a tape drive may have had no particular need to install it.
d998 2
a999 4
# <b>more 001_st.patch</b>
Apply by doing:
        cd /usr/src
        patch -p0 < 001_st.patch
d1001 2
a1002 1
Rebuild your kernel.
d1004 3
a1006 1
Index: sys/scsi/st.c
d1008 7
a1014 9
RCS file: /cvs/src/sys/scsi/st.c,v
retrieving revision 1.41
retrieving revision 1.41.2.1
diff -u -p -r1.41 -r1.41.2.1
--- sys/scsi/st.c       1 Aug 2004 23:01:06 -0000       1.41
+++ sys/scsi/st.c       2 Nov 2004 01:05:50 -0000       1.41.2.1
@@@@ -1815,7 +1815,7 @@@@ st_interpret_sense(xs)
        u_int8_t skey = sense->flags & SSD_KEY;
        int32_t info;
d1016 11
a1026 4
-       if (((sense->flags & SDEV_OPEN) == 0) ||
+       if (((sc_link->flags & SDEV_OPEN) == 0) ||
            (serr != 0x70 && serr != 0x71))
                return (EJUSTRETURN); /* let the generic code handle it */
d1030 4
a1033 3
applying it.
We will assume you have put this patch into the <tt>/usr/src</tt>
directory, in which case, the following steps are used:
d1036 2
a1037 2
# <b>cd /usr/src</b>
# <b>patch -p0 &lt; 001_st.patch</b>
a1040 3
|Apply by doing:
|        cd /usr/src
|        patch -p0 < 001_st.patch
d1042 11
a1052 1
|Rebuild your kernel.
d1054 1
a1054 1
|Index: sys/scsi/st.c
d1056 5
a1060 6
|RCS file: /cvs/src/sys/scsi/st.c,v
|retrieving revision 1.41
|retrieving revision 1.41.2.1
|diff -u -p -r1.41 -r1.41.2.1
|--- sys/scsi/st.c      1 Aug 2004 23:01:06 -0000       1.41
|+++ sys/scsi/st.c      2 Nov 2004 01:05:50 -0000       1.41.2.1
d1062 2
a1063 2
Patching file sys/scsi/st.c using Plan A...
Hunk #1 succeeded at 1815.              <i>&lt;-- Look for this message!</i>
d1070 1
a1070 1
hunks and multiple files, in which case, you should verify that all
d1088 1
a1088 1
Follow the guidance in the header of the patch, and if uncertain,
d1094 1
a1094 1
For example, if you did not have a tape drive on your system, you would
d1099 1
a1099 1
apply, and if in doubt, apply them all, in order.
@


1.190
log
@Convert the rest of the FAQ to id="" instead of <a name=""></a>.

prodded by nick@@
@
text
@d10 1
a10 1
<meta name= "copyright"     content= "This document copyright 1998-2014 by OpenBSD.">
d751 1
a751 1
Set the password so that user cannot logon? (y/n) [n]: <b>y</b>
@


1.189
log
@
kerberos removed, don't suggest it.
@
text
@d57 1
a57 3
<p>
<a name= "wheel"></a>
<h2>10.1 - Why does it say that I'm in the wrong group when I try to su root?</h2>
d84 1
a84 3
<p>
<a name= "DupFS"></a>
<h2>10.2 - How do I duplicate a filesystem?</h2>
d108 1
a108 3
<p>
<a name= "rc"></a>
<h2>10.3 - How do I start daemons with the system? (Overview of
d306 1
a306 3
<p>
<a name= "vipw"></a>
<h2>10.8 - I edited /etc/passwd, but the changes didn't seem to take
d345 1
a345 3
<p>
<a name= "AddDelUser"></a>
<h2>10.9 - What is the best way to add and delete users?</h2>
d359 1
a359 2
<a name="adduser"></a>
<p>
d435 1
a435 2
<a name="user"></a>
<h3>Adding users via user(8)</h3>
d582 1
a582 3
<p>
<a name= "FTPOnly"></a>
<h2>10.10 - How do I create an ftp-only account (not anonymous FTP!)?</h2>
d594 1
a594 3
<p>
<a name= "Quotas"></a>
<h2>10.11 - Setting up Quotas</h2>
d701 1
a701 4

<p>
<a name= "AnonFTP"></a>
<h2>10.13 - Setting up Anonymous FTP Services</h2>
d875 1
a875 4

<p>
<a name= "ftpchroot"></a>
<h2>10.14 - Confining users to their home directories in ftpd(8)</h2>
d902 1
a902 4

<p>
<a name= "Patches"></a>
<h2>10.15 - Applying patches in OpenBSD</h2>
d1090 1
a1090 3
<p>
<a name="rootshell"></a>
<h2>10.17 - Can I change the root shell?</h2>
d1114 1
a1114 3
<p>
<a name="ksh"></a>
<h2>10.18 - What else can I do with <i>ksh</i>?</h2>
d1182 1
a1182 4

<p>
<a name="Dir"></a>
<h2>10.19 - Directory services</h2>
d1188 1
a1188 3
<p>
<a name="Dir.available"></a>
<h3>10.19.1 - Which directory services are available?</h3>
d1233 1
a1233 3
<p>
<a name="YP_secure"></a> 
<h3>10.19.2 - YP security considerations</h3>
d1254 1
a1254 3
<p>
<a name="YP_server"></a> 
<h3>10.19.3 - Setting up a YP server</h3>
d1461 1
a1461 2
<a name="YP_client"></a> 
<h3>10.19.4 - Setting up a YP client</h3>
d1576 1
a1576 3
<p>
<a name="locales"></a>
<h2>10.20 - Character sets and localization</h2>
d1581 1
a1581 2
<a name="charset"></a>
<h3>10.20.1 - Configuring the active character set</h3>
d1632 1
a1632 2
<a name="nls"></a>
<h3>10.20.2 - Changing the language used in application messages</h3>
@


1.188
log
@
faq updates for 5.6
@
text
@d1288 1
a1288 3
might be an option, or you might consider combining YP with
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kerberos&amp;sektion=8"
>kerberos(8)</a> authentication.
@


1.187
log
@
more -> cvsweb.openbsd.org for, well, cvsweb.
@
text
@a31 3
<li><a href="#RelayingDenied">10.4 - Why do users get relaying access denied when they are remotely sending mail through my OpenBSD system?</a>
<li><a href="#SendmailDNS"   >10.6 - Why does Sendmail ignore /etc/hosts?</a>
<li><a href="#HTTPS"         >10.7 - Setting up a Secure HTTP Server using ssl(8)</a>
d39 1
a39 2
<li><a href="#httpdchroot"   >10.16 - Tell me about chroot(2) web server?</a>
<li><a href="#rootshell"     >10.17 -  Can I change the root shell?</a>
d207 1
a207 1
For example, here is the default line pertaining to httpd(8).
d210 1
a210 1
httpd_flags=NO          # for normal use: "" (or "-DSSL" after reading ssl(8))
d214 2
a215 2
Here you can see that starting up httpd normally requires no flags, so a
line like <tt>httpd_flags=""</tt> added to <i>/etc/rc.conf.local</i>
d217 3
a219 5
But to start httpd with SSL enabled (refer to the
<a href="#HTTPS">SSL FAQ</a> or
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&amp;sektion=8">ssl(8)</a>),
you would start with a line like <tt>httpd_flags="-DSSL"</tt>, though
you may need to add other parameters for other reasons.
d250 2
a251 2
Starting with OpenBSD 5.0, system daemons ("services") are started,
stopped and controlled by
d269 2
a270 2
For example, <tt>/etc/rc.d/httpd</tt> does not start
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8&amp;manpath=OpenBSD+5.5">httpd(8)</a>
d272 1
a272 1
line defining the "<tt>httpd_flags</tt>" variable.
d276 1
a276 1
You can, of course, manually invoke <tt>/usr/sbin/httpd</tt> directly
d289 1
a289 1
with a <tt>/etc/rc.d</tt> file consisting of:
a312 150
<a name= "RelayingDenied"></a>
<h2>10.4 - Why do users get "relaying denied" when they are remotely
sending mail through my OpenBSD system?</h2>

<p>
Try this:

<blockquote><pre>
# <b>grep relay-domains /etc/mail/sendmail.cf</b>
</pre></blockquote>

<p>
The output may look something like this:

<blockquote><pre>
FR-o /etc/mail/relay-domains
</pre></blockquote>

<p>
If this file doesn't exist, create it. You will need to enter the hosts
who are sending mail remotely with the following syntax:

<blockquote><pre>
.domain.com    #Allow relaying for/to any host in domain.com
sub.domain.com #Allow relaying for/to sub.domain.com and any host in that domain
10.2           #Allow relaying from all hosts in the IP net 10.2.*.*
</pre></blockquote>

<p>
Don't forget send a 'HangUP' signal to sendmail (a signal which causes
most daemons to re-read their configuration file):

<blockquote><pre>
# <b>kill -HUP `head -1 /var/run/sendmail.pid`</b>
</pre></blockquote>

<p>

<h3>Further Reading</h3>

<p>
<ul>
<li><a href="http://www.sendmail.org/~ca/email/relayingdenied.html">http://www.sendmail.org/~ca/email/relayingdenied.html</a>
<li><a href="http://www.sendmail.org/tips/relaying.php">http://www.sendmail.org/tips/relaying.php</a>
<li><a href="http://www.sendmail.org/antispam/">http://www.sendmail.org/antispam/</a>
</ul>

<p>
<a name="SendmailDNS"></a>
<h2>10.6 - Why does Sendmail ignore the <tt>/etc/hosts</tt> file?</h2>

<p>
By default, Sendmail uses DNS for name resolution, not the
<tt>/etc/hosts</tt> file. The behavior can be changed through the use of
the <tt>/etc/mail/service.switch</tt> file.

<p>
If you wish to query the hosts file before DNS servers, create a
<tt>/etc/mail/service.switch</tt> file which contains the following
line:

<blockquote><pre>
hosts       files dns
</pre></blockquote>

<p>
If you wish to query ONLY the hosts file, use the following:

<blockquote><pre>
hosts       files
</pre></blockquote>

<p>
Send Sendmail a HUP signal:

<blockquote><pre>
# <b>kill -HUP `head -1 /var/run/sendmail.pid`</b>
</pre></blockquote>

<p>
and the changes will take effect.


<p>
<a name= "HTTPS"></a>
<h2>10.7 - Setting up a Secure HTTP server with SSL(8)</h2>

<p>
OpenBSD ships with an SSL-ready httpd and RSA libraries. For use with
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8&amp;manpath=OpenBSD+5.5">httpd(8)</a>, 
you must first have a certificate created. This will be kept in
<i>/etc/ssl/</i> with the corresponding key in <i>/etc/ssl/private/</i>.
The steps shown here are taken in part from the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&amp;sektion=8">ssl(8)</a> 
man page. Refer to it for further information.
This FAQ entry only outlines how to create an RSA certificate for web
servers, not a DSA server certificate. To find out how to do so, please
refer to the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&amp;sektion=8">ssl(8)</a> 
man page. 

<p>
To start off, you need to create your server key and certificate using
OpenSSL:

<blockquote><pre>
# <b>openssl genrsa -out /etc/ssl/private/server.key 2048</b>
</pre></blockquote>

<p>
Or, if you wish the key to be encrypted with a passphrase that you will
have to type in when starting servers

<blockquote><pre>
# <b>openssl genrsa -aes256 -out /etc/ssl/private/server.key 2048</b>
</pre></blockquote>

<p>
The next step is to generate a Certificate Signing Request which is used
to get a Certifying Authority (CA) to sign your certificate. To do this
use the command:

<blockquote><pre>
# <b>openssl req -new -key /etc/ssl/private/server.key -out /etc/ssl/private/server.csr</b>
</pre></blockquote>

<p>
This <i>server.csr</i> file can then be given to Certifying Authority
who will sign the key. One such CA is <b>Thawte Certification</b> which
you can reach at
<a href="http://www.thawte.com/">http://www.thawte.com/</a>.

<p>
If you cannot afford this, or just want to sign the certificate
yourself, you can use the following.

<blockquote><pre>
# <b>openssl x509 -sha256 -req -days 365 -in /etc/ssl/private/server.csr \
       -signkey /etc/ssl/private/server.key -out /etc/ssl/server.crt</b>
</pre></blockquote>

<p>
With <i>/etc/ssl/server.crt</i> and <i>/etc/ssl/private/server.key</i>
in place, you should be able to start
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8&amp;manpath=OpenBSD+5.5">httpd(8)</a>
with the <b>-DSSL</b> flag (see the <a href="#rc">section about
rc(8)</a> in this faq), enabling https transactions with your machine on
port 443.

<p>
a1113 264

<p>
<a name="httpdchroot"></a>
<h2>10.16 - Tell me about this chroot(2) web server?</h2>

<p>
In OpenBSD, the Apache 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8&amp;manpath=OpenBSD+5.5">httpd(8)</a>
and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nginx&amp;sektion=8">nginx(8)</a>
web servers have been
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=chroot&amp;sektion=2">chroot(2)</a>ed
by default. While this is a tremendous boost to security, it can create
issues, if you are not prepared.

<h3>What is a chroot?</h3>

A
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=chroot&amp;sektion=2">chroot(2)</a>ed
application is locked into a particular directory and unable to wander
around the rest of the directory tree, and sees that directory as its
"<tt>/</tt>" (root) directory.
In the case of the web servers, the program starts, opens its log files, binds
to its TCP ports (though, it doesn't accept data yet), and reads its
configuration. Next, it locks itself into <i>/var/www</i> and drops
privileges, then starts to accept requests.
This means all files served and used by web server must be in the
<i>/var/www</i> directory.
In the default configuration of OpenBSD, all the files in the
<i>/var/www</i> directory are read-only by the user the web server runs as,
<i>www</i>.
This helps security tremendously -- should
there be a security issue with the web server, the damage will be confined to a
single directory with only "read only" permissions and no resources to
cause mischief with.

<h3>What does this mean to the administrator?</h3>

<p>
Put bluntly, chroot(2)ing web servers is something not done by
default in most other operating systems.
Many applications and system configurations will not work in a chroot(2)
without some customization.
Further, it must be remembered that security and convenience are often
not compatible goals.

<ul>
<li><b>Historic file system layouts:</b> Layouts from other systems
may have web files located in user's directories, which clearly won't
work in a chroot(2)ed environment, as the web server can't
reach the <i>/home</i> directory. Administrators may also discover their
existing /var/www partition is too small to hold all web files. Your
options are to restructure or do not use the chroot(2) feature. You can,
of course, use symbolic links in the user's home directories pointing to
subdirectories in <i>/var/www</i>, but you can NOT use links in
<i>/var/www</i> pointing to other parts of the file system -- that is
prevented from working by the chroot(2)ing. Note that if you want your
users to have <a href="faq10.html#ftpchroot">chroot(2)ed FTP access</a>,
this will not work, as the FTP chroot will (again) prevent you from
accessing the targets of the symbolic links. A solution to this is to
not use <i>/home</i> as your home directories for these users, rather
use something similar to <i>/var/www/users</i>.
Symbolic links can be used completely within the chroot(2), but they
have to be relative, not absolute.

<li><b>Log Rotation:</b> Normally, logs are rotated by renaming the old
files, then sending the server a SIGUSR1 signal to cause it to close
its old log files and open new ones. This is no longer possible, as the
server has no ability to open log files for writing once privileges are
dropped. 
So, the server must be stopped and restarted.
There are also other strategies available, including logging to a 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pipe&amp;sektion=2">pipe(2)</a>,
and using an external log rotator at the other end of the pipe(2).

<li><b>Existing Apache modules:</b> Virtually all will load, however
some may not work properly in chroot(2), and many have issues on
"<tt><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=apachectl&amp;sektion=8&amp;manpath=OpenBSD+5.5">apachectl</a>
restart</tt>", generating an error, which causes httpd(8) to exit.

<li><b>Existing CGIs:</b> Most will NOT work as is. They may need
programs or libraries outside <i>/var/www</i>. Some can be fixed by
compiling so they are statically linked (not needing libraries in other
directories), most may be fixed by populating the <i>/var/www</i>
directory with the files required by the application, though this is
non-trivial and requires some knowledge of the program.

<li><b>File system mount options:</b>
By default in OpenBSD, your <i>/var</i> partition will be mounted 
with the <tt>nosuid</tt> and <tt>nodev</tt> options.
If you attempt to use an application within the chroot, you may need
to change those options.
You may need to do that even if you don't use the chroot option, of
course.

<li><b>Name Resolution:</b>
Web servers inside the chroot(2) will NOT be able to use the system
<i>/etc/hosts</i> or <i>/etc/resolv.conf</i>.  Therefore, if you have
applications which require name resolution, you will need to populate
<i>/var/www/etc/hosts</i> and/or <i>/var/www/etc/resolv.conf</i> in the
chroot(2) environment.  Note that some applications expect the
resolution of "localhost" to work.

<li><b>Timezone:</b>
Web servers inside the chroot(2) will NOT be able to use the system
<i>/etc/localtime</i>.  If you require localtime logging of events,
you will need to copy (not link) the corresponding timezone from
<i>/usr/share/zoneinfo/</i> under <i>/var/www/etc/localtime</i>.

</ul>

In some cases, the application or configuration can be altered to run
within the chroot(2).
In other cases, you will simply have to disable this
feature using the <tt>-u</tt> option for httpd(8) 
or nginx(8) in 
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf.local&amp;sektion=8">/etc/rc.conf.local</a></i>.

<h3>Example of chroot(2)ing an app: wwwcount with httpd(8)</h3>
As an example of a process that can be used to chroot an application, we
will look at wwwcount, a simple web page counter available through
<a href="faq15.html#PkgMgmt">packages</a>.
While a very effective program, it knows nothing about chroot(2)ed 
Apache, and will not work chroot(2)ed in its default configuration.

<p>
First, we install the
<a href="http://www.muquit.com/muquit/software/Count/Count.html">wwwcount</a>
package.
We configure it and test it, and we find it doesn't seem to work, 
we get an Apache message saying "Internal Server Error".

First step is to stop and restart Apache with the <tt>-u</tt> switch
to verify that the problem is the chroot(2)ing, and not the system
configuration.

<blockquote><pre>
# <b>apachectl stop</b>
/usr/sbin/apachectl stop: httpd stopped
# <b>httpd -u</b>
</pre></blockquote>

After doing this, we see the counter works properly, at least after we
change the ownership on a directory so that Apache (and the CGIs it
runs) can write to the files it keeps.
So, we definitely have a chroot problem, so we stop and restart 
Apache again, using the default chrooting:

<blockquote><pre>
# <b>apachectl stop</b>
/usr/sbin/apachectl stop: httpd stopped
# <b>httpd</b>
</pre></blockquote>

<p>
A good starting point would be to assume wwwcount uses some libraries
and other files it can't get to in the chroot.
We can use the 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ldd&amp;sektion=1">ldd(1)</a>
command to find out the dynamic object dependencies that the CGI needs:

<blockquote><pre>
# <b>cd /var/www/cgi-bin/</b>
# <b>ldd Count.cgi</b>
Count.cgi:
        Start    End      Type Open Ref GrpRef Name
        1c000000 3c007000 exe  1    0   0      /var/www/cgi-bin/Count.cgi
        0c085000 2c0be000 rlib 0    1   0      /usr/lib/libc.so.57.0
        08713000 08713000 rtld 0    1   0      /usr/libexec/ld.so
</pre></blockquote>

Ok, here is a problem, two files that are not available in the
chroot(2) environment.
So, we copy them over:

<blockquote><pre>
# <b>mkdir -p /var/www/usr/lib /var/www/usr/libexec</b>
# <b>cp /usr/lib/libc.so.57.0 /var/www/usr/lib</b>
# <b>cp /usr/libexec/ld.so /var/www/usr/libexec</b>
</pre></blockquote>

and try the counter again.

<p>
Well, now the program is running at least, and giving us error messages
directly: "Unable to open config file for reading".
Progress, but not done yet.
The configuration file is normally in <tt>/var/www/wwwcount/conf</tt>, 
but within the chroot environment, that would seem to be
<tt>/wwwcount/conf</tt>.
Our options are to either recompile the program to make it work where 
the files are now, or move the data files.
As we installed from a package, we'll just move the data file.
In order to use the same config either chroot(2)ed or not, we'll use a
symbolic link:

<blockquote><pre>
# <b>mkdir -p /var/www/var/www</b>
# <b>cd /var/www/var/www</b>
# <b>ln -s ../../wwwcount wwwcount</b>
</pre></blockquote>

Note that the symbolic link is crafted to work within the chroot.
Again, we test... and we find we have yet another issue.  
Now wwwcount is complaining that it can't find the "strip image" files
it uses to display messages.
After a bit of searching, we find those are stored in 
<tt>/usr/local/lib/wwwcount</tt>, so we have to copy those into the
chroot, as well.

<blockquote><pre>
# <b>tar cf - /usr/local/lib/wwwcount | (cd /var/www; tar xpf - )</b>
</pre></blockquote>

we test again...  and it works!

<p>
Note that we have copied over only files that are absolutely required
for operation.
In general, only the minimum files needed to run an application should
be copied into the chroot.

<h3>Should I use the chroot feature?</h3>
In the above example, the program is fairly simple, and yet we have seen
several different kinds of problems.

<p>
<i>Not every application can or should be chroot(2)ed.</i>

<p>
The goal is a secure web server, chroot(2)ing is just a tool to accomplish
this, it is not the goal itself.
Remember, the starting configuration of the OpenBSD chroot(2)ed Apache
is where the user the httpd(8) program is running as can not run any
programs, can not alter any files, and can not assume another user's
identity.
Loosen these restrictions, you have lessened your security, chroot or no
chroot.
 
<p>
Some applications are pretty simple, and chroot(2)ing them makes sense.
Others are very complex, and are either not worth the effort of forcing
them into a chroot(2), or by the time you copy enough of the system into
the chroot, you have lost the benefit of the chroot(2) environment.
For example, the OpenWebMail program requires the ability to read and
write to the mail directory, the user's home directory, and must be able
to work as any user on the system.
Attempting to push it into a chroot would be completely pointless, as
you would end up disabling all the benefits of chroot(2)ing.
Even with an application as simple as the above counter, it must write
to disk (to keep track of its counters), so <i>some</i> benefit of the
chroot(2) is lost.

<p>
Any application which has to assume root privileges to operate is 
pointless to attempt to chroot(2), as root can generally escape a
chroot(2).

<p>
Do not forget, if the chrooting process for your application is too
difficult, you may not upgrade or update the system as often as you
should.
This could end up making your system LESS secure than a more
maintainable system with the chroot feature deactivated.
@


1.186
log
@
typo; from vigdis + openbsd at chown dot me via misc@@.  Thanks!
@
text
@d181 1
a181 1
<a href="http://www.openbsd.org/cgi-bin/cvsweb/~checkout~/src/etc/rc.conf?content-type=text/plain">/etc/rc.conf</a>
d1597 1
a1597 1
<a href="http://www.openbsd.org/cgi-bin/cvsweb/~checkout~/src/etc/ksh.kshrc?content-type=text/plain"><tt>/etc/ksh.kshrc</tt></a>,
@


1.185
log
@
we are out of the POP3 business in the base install.  pointed out by
vigdis at chown dot me
@
text
@d463 1
a463 1
5a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8&amp;manpath=OpenBSD+5.5">httpd(8)</a>
@


1.184
log
@
welcome 5.5!
@
text
@a32 1
<li><a href="#POP"           >10.5 - I've set up POP, but I get errors when accessing my mail through POP. What can I do?</a>
a364 56

<p>
<a name= "POP"></a>
<h2>10.5 - I've set up POP, but users have trouble accessing mail
through POP. What can I do?</h2>

<p>
Most issues dealing with POP are problems with temporary files and lock
files. If your pop server sends an error message such as:

<blockquote><pre>
-ERR Couldn't open temporary file, do you own it?
</pre></blockquote>

<p>
Try setting up your permissions as such:

<blockquote><pre>
permission in  /var
drwxrwxr-x   2 bin     mail     512 May 26 20:08 mail


permissions in  /var/mail
-rw-------   1 username   username        0 May 26 20:08 username
</pre></blockquote>

<p>
Another thing to check is that the user actually owns their own
/var/mail file. Of course this should be the case (as in, /var/mail/joe
should be owned by joe) but if it isn't set correctly it could be the
problem!

<p>
Of course, making /var/mail writable by group mail opens up some vague
and obscure security problems. It is likely that you will never have
problems with it. But it could (especially if you are a high profile
site, ISP, ...)! There are several POP servers you can install right
away from the ports collection. If possible, use
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=popa3d&amp;sektion=8">popa3d</a>
which is available in the OpenBSD base install.
Or, you could just have the wrong options selected for your pop daemon
(like dot locking).  Or, you may just need to change the directory
that it locks in (although then the locking would only be valuable for the
POP daemon.)

<p>
<b>Note:</b> OpenBSD does not have a group name of
&quot;mail&quot;. You need to create this in your <i>/etc/group</i> file
if you need it. An entry like:

<blockquote><pre>
mail:*:6:
</pre></blockquote>

<p>
would be sufficient.
@


1.183
log
@The FAQ talks about the latest release, so link httpd(8) related man
pages to the 5.4 version.
Pointed out by Raf Czlonka <rafal.czlonka AT gmail>, thanks!
OK nick
@
text
@a39 1
<li><a href="#Kerberos"      >10.12 - Setting up KerberosV Clients and Servers</a>
d43 1
a43 1
<li><a href="#httpdchroot"   >10.16 - Tell me about chroot(2) Apache?</a>
a209 4
<!-- XXX version -->
In fact, the standard <a href="upgrade54.html">upgrade process</a>
assumes you have not modified <i>/etc/rc.conf</i>, and will overwrite it
with the new version.
d277 1
a277 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8&amp;manpath=OpenBSD+5.4">httpd(8)</a>
d465 1
a465 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8&amp;manpath=OpenBSD+5.4">httpd(8)</a>, 
d520 1
a520 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8&amp;manpath=OpenBSD+5.4">httpd(8)</a>
a929 15
<p>
<a name= "Kerberos"></a>
<h2>10.12 - Setting up KerberosV Clients and Servers</h2>

<p>
OpenBSD includes KerberosV as a pre-installed component of the default
system.

<p>
For more information on KerberosV, from your OpenBSD system, use the
command:
<blockquote><pre>
# <b>info heimdal</b>
</pre></blockquote>

d1330 1
a1330 1
<h2>10.16 - Tell me about this chroot(2) Apache?</h2>
d1334 4
a1337 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8&amp;manpath=OpenBSD+5.4">httpd(8)</a>
server has been
d1349 1
a1349 1
In the case of httpd(8), the program starts, opens its log files, binds
d1353 1
a1353 1
This means all files served and used by Apache must be in the
d1356 1
a1356 1
<i>/var/www</i> directory are read-only by the user Apache runs as,
d1359 1
a1359 1
there be a security issue with Apache, the damage will be confined to a
d1366 1
a1366 1
Put bluntly, chroot(2)ing Apache is something not done by
a1371 2
OpenBSD's implementation of Apache does not compromise security 
for features or "ease".  
d1374 3
a1376 3
<li><b>Historic file system layouts:</b> Servers upgraded from older
versions of OpenBSD may have web files located in user's directories,
which clearly won't work in a chroot(2)ed environment, as httpd(8) can't
d1393 5
a1397 21
files, then sending httpd(8) a SIGUSR1 signal to cause Apache to close
its old log files and open new ones. This is no longer possible, as
httpd(8) has no ability to open log files for writing once privileges are
dropped. httpd(8) must be stopped and restarted.
It sometimes takes a few seconds for all the child
processes to terminate, which must happen before httpd(8) can be
restarted, so one possible way to rotate the logs would be as follows:

<blockquote><pre>
# <b>apachectl stop</b>
    <i>rename your log files</i>
# <b>apachectl start ; sleep 10 ; apachectl start</b>
</pre></blockquote>

Yes, the last line attempts to restart Apache immediately, and in case
that fails it waits a few seconds and tries again.
And yes, that does mean that for a few seconds every time you do your
log rotation, your web server will be unavailable.
While this could be annoying, any attempt to permit httpd(8) to 
reopen files after chroot(2)ing would defeat the very purpose of
the chroot!
d1404 1
a1404 1
"<tt><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=apachectl&amp;sektion=8&amp;manpath=OpenBSD+5.4">apachectl</a>
d1423 1
a1423 1
httpd(8) inside the chroot(2) will NOT be able to use the system
d1431 1
a1431 1
httpd(8) inside the chroot(2) will NOT be able to use the system
d1441 2
a1442 1
feature using the <tt>-u</tt> option for httpd(8) in
d1445 1
a1445 1
<h3>Example of chroot(2)ing an app: wwwcount</h3>
@


1.182
log
@
remove www@@ references, simplify footers on all pages.
@
text
@d282 1
a282 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8">httpd(8)</a>
d470 1
a470 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8">httpd(8)</a>, 
d525 1
a525 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8">httpd(8)</a>
d1354 1
a1354 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8">httpd(8)</a>
d1440 1
a1440 1
"<tt><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=apachectl&amp;sektion=8">apachectl</a>
@


1.181
log
@
improve wording and formatting, suggested by krw@@
While there, remove inetd.conf config details...seems to be no good reason
to use that anymore.
@
text
@a4 1
<link rev= "made" href= "mailto:www@@openbsd.org">
d10 1
a10 1
<meta name= "copyright"     content= "This document copyright 1998-2013 by OpenBSD.">
a18 1
<font color= "#0000e0">
a21 1
</font>
d2204 2
a2205 1
<font color= "#0000e0">
a2208 8
</font>

<p>
<hr>
<a href= "index.html"><img height= "24" width= "24" src= "../images/back.gif" border= "0" alt="[back]"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>$OpenBSD: faq10.html,v 1.180 2013/11/01 14:05:56 nick Exp $</small>
@


1.180
log
@
updates for 5.4
@
text
@d982 1
a982 1
echo /usr/bin/false &gt;&gt; /etc/shells
d1003 1
a1003 1
[no]: <b>no</b>
d1017 1
a1017 1
OK? (y/n) [y]: <b>y</b>
d1027 3
a1029 2
Along with the user, this created the directory <i>/home/ftp</i>. This
is what we want, but there are some changes that we will have to make to
d1037 3
a1039 2
<li><i>/home/ftp</i> - This is the main directory. It should be owned by
root and have permissions of 555.
d1043 8
a1050 5
have real users attached to your files, you should copy /etc/pwd.db and
/etc/group to this directory. This directory should be mode 511, and the
two files should be mode 444. These are used to give owner names as
opposed to numbers. There are no passwords stored in pwd.db, they are
all in spwd.db, so don't copy that over.
d1089 3
a1091 7
These examples will show our daemon being started from inetd.conf.
First we must become familiar with some of the options to ftpd.
The default line from <i>/etc/inetd.conf</i> is:

<blockquote><pre>
<b>ftp             stream  tcp     nowait  root    /usr/libexec/ftpd       ftpd -US</b>
</pre></blockquote>
d1094 2
a1095 8
Here ftpd is invoked with <i>-US</i>. This will log anonymous
connections to <i>/var/log/ftpd</i> and concurrent sessions to
<i>/var/run/utmp</i>. That will allow for these sessions to be seen via
who(1). For some, you might want to run only an anonymous server, and
disallow ftp for users. To do so you should invoke ftpd with the
<i>-A</i> option. Here is a line that starts ftpd up for anonymous
connections only. It also uses <i>-ll</i> which logs each connection to
syslog, along with the get, retrieve, etc., ftp commands.
d1098 1
a1098 1
<b>ftp             stream  tcp     nowait  root    /usr/libexec/ftpd       ftpd -llUSA</b>
d1101 9
a1109 15
<p>
<b>Note:</b> For people using HIGH traffic ftp servers, you might not want to
invoke ftpd from inetd.conf. The best option is to comment the ftpd line
from inetd.conf and start ftpd from rc.conf.local.
This will start ftpd as a daemon, and has much less overhead as
starting it from inetd.
Here is an example line to start it from rc.conf.local.

<blockquote><pre>
ftpd_flags="-llUSA"           # for non-inetd use: ftpd_flags=""
</pre></blockquote>

<p>
This of course only works if you have ftpd taken out of 
<i>/etc/inetd.conf</i> and made inetd re-read its configuration file.
d1112 3
a1114 4
It is not necessary to give additional startup options to ftpd to
allow anonymous connections.
The preceding steps of creating the 'ftp' user and configuring the
relevant directories with the correct permissions are enough.
d1116 1
a1116 2
everything.
Just restart ftpd with the <b>-n</b> option included.
d1122 1
a1122 1
<li><i>/etc/ftpwelcome</i> - This holds the Welcome message for people
d1124 1
a1124 1
<li><i>/etc/motd</i> - This holds the message for people once they have
d1126 1
a1126 1
<li><i>.message</i> - This file can be placed in any directory. It will
d2218 1
a2218 1
<small>$OpenBSD: faq10.html,v 1.179 2013/06/01 20:40:30 nick Exp $</small>
@


1.179
log
@
remove an incorrect statement, pointed out by stsp@@.
@
text
@d214 2
a215 1
In fact, the standard <a href="upgrade53.html">upgrade process</a>
d2160 5
d2231 1
a2231 1
<small>$OpenBSD: faq10.html,v 1.178 2013/05/07 14:15:36 sthen Exp $</small>
@


1.178
log
@argh. and the other section number in text. thanks Maurice.
@
text
@a2158 5
<p>The list of supported locales can be obtained by running the command:
<blockquote><pre>
ls /usr/share/locale
</pre></blockquote>

d2225 1
a2225 1
<small>$OpenBSD: faq10.html,v 1.177 2013/05/07 13:16:47 sthen Exp $</small>
@


1.177
log
@fix sektion; Maurice fixed this in his first diff but I missed it when
hand applying
@
text
@d284 1
a284 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8">httpd(1)</a>
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.176 2013/05/07 12:35:49 sthen Exp $</small>
@


1.176
log
@fix man.cgi link; Maurice Janssen
@
text
@d284 1
a284 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=4">httpd(1)</a>
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.175 2013/05/01 13:16:32 nick Exp $</small>
@


1.175
log
@
updates for 5.3
@
text
@d284 1
a284 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=&amp;sektion=4">httpd(1)</a>
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.174 2012/11/01 15:05:30 nick Exp $</small>
@


1.174
log
@
enter 5.2!
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2012 by OpenBSD.">
d214 1
a214 1
In fact, the standard <a href="upgrade52.html">upgrade process</a>
d2168 1
a2168 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xdm&sektion=1">xdm(1)</a>
d2172 1
a2172 1
</blockquote></pre>
d2177 1
a2177 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xterm&sektion=1">xterm(1)</a>
d2183 1
a2183 1
</blockquote></pre>
d2195 1
a2195 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=uxterm&sektion=1">uxterm(1)</a>.
d2199 1
a2199 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&sektion=1">ssh(1)</a>,
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.173 2012/08/13 02:17:11 nick Exp $</small>
@


1.173
log
@
a few more rc.d related changes
@
text
@d214 1
a214 1
In fact, the standard <a href="upgrade51.html">upgrade process</a>
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.172 2012/07/21 12:16:05 sthen Exp $</small>
@


1.172
log
@If ftpd is enabled in rc.conf.local, since 5.1 the -D flag is used
automatically. Sync faq with the change in /etc/rc.conf to not list this
in the sample rc.conf lines. From Maurice Janssen on www@@.
@
text
@d1108 2
a1109 2
from inetd.conf and start ftpd from rc.conf.local along with the <i>-D</i>
option. This will start ftpd as a daemon, and has much less overhead as
d1956 1
a1956 1
>rc.conf.local(8)</a> and set <tt>portmap=YES</tt>.
d1961 1
a1961 1
echo "portmap=YES" >> /etc/rc.conf.local
d2044 1
a2044 1
echo "portmap=YES" >> /etc/rc.conf.local
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.171 2012/05/27 07:01:50 jmc Exp $</small>
@


1.171
log
@- revert to recommending a key size of 2048, as requested by naddy;
- sync to ssl.8, as requested by Sebastian Rother

ok nick for the first change
hopefully ok nick the second change once i tell him what i've done
@
text
@d190 1
a190 1
ftpd_flags=NO           # for non-inetd use: ftpd_flags="-D"
d1114 1
a1114 1
ftpd_flags="-DllUSA"           # for non-inetd use: ftpd_flags="-D"
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.170 2012/05/25 20:27:35 jmc Exp $</small>
@


1.170
log
@recommend rsa4096 and sha256; from Nicolai
ok millert nick
@
text
@d489 1
a489 1
# <b>openssl genrsa -out /etc/ssl/private/server.key 4096</b>
d497 1
a497 1
# <b>openssl genrsa -des3 -out /etc/ssl/private/server.key 4096</b>
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.169 2012/05/01 14:35:15 nick Exp $</small>
@


1.169
log
@
welcome 5.1!
@
text
@d489 1
a489 1
# <b>openssl genrsa -out /etc/ssl/private/server.key 1024</b>
d497 1
a497 1
# <b>openssl genrsa -des3 -out /etc/ssl/private/server.key 1024</b>
d520 1
a520 1
# <b>openssl x509 -req -days 365 -in /etc/ssl/private/server.csr \
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.168 2012/03/21 10:51:32 ajacoutot Exp $</small>
@


1.168
log
@Fix the example for starting daemons from rc.local.

ok sthen@@
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2011 by OpenBSD.">
d214 1
a214 1
In fact, the standard <a href="upgrade50.html">upgrade process</a>
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.167 2011/12/20 07:52:17 ajacoutot Exp $</small>
@


1.167
log
@Fix several typos, from Steffen Daode Nurpmeso.
@
text
@d246 1
a246 1
             echo -n ' daemonx';       /usr/local/sbin/daemonx
d260 1
a260 1
Starting local daemons: daemonx.
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.166 2011/11/13 18:55:36 ajacoutot Exp $</small>
@


1.166
log
@Missing 'in'.
@
text
@d214 1
a214 1
In fact, the standard <a href="upgrade49.html">upgrade process</a>
d229 1
a229 1
But to start httpd with ssl enabled (refer to the
d275 1
a275 1
variable, which would be set in <tt>/etc/rc.conf.local</tt>
d316 1
a316 1
<tt>/etc/rc.conf.local</tt>
d1124 1
a1124 1
The preceeding steps of creating the 'ftp' user and configuring the
d1255 1
a1255 1
In general, it is advisable to aquire the entire source tree before applying
d1305 1
a1305 1
# <b>patch -p0 < 001_st.patch</b>
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.165 2011/11/01 10:52:27 nick Exp $</small>
@


1.165
log
@
updates for 5.0 (and some non-version-related improvements).
@
text
@d277 1
a277 1
be run on boot; the name of the script must be specified the
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.164 2011/09/22 10:49:08 stsp Exp $</small>
@


1.164
log
@more locale FAQ wording fixes; from sthen
@
text
@d141 1
a141 1
  where new daemons or host specific information should be stored.
d177 1
a177 1
  <li>Processes the scripts in <i>/etc/rc.d</i>
d264 2
a265 3
Starting with OpenBSD 4.9, you have another option for
<a href="faq15.html#Packages">packages</a>.
Most packages will now install a startup script in
d267 25
a291 3
><i>/etc/rc.d</i></a> to handle their startup and shutdown.
This is used ONLY for add-on applications, the base system does not
use any scripts in this directory.
d301 16
d2230 1
a2230 1
<small>$OpenBSD: faq10.html,v 1.163 2011/09/22 10:42:02 stsp Exp $</small>
@


1.163
log
@Fix a wording error in locale FAQ entry.
@
text
@d2154 1
a2154 1
However, a lot of programs from the ports collection do support UTF-8.
d2157 1
a2157 1
applications in
d2177 1
a2177 1
However, a lot of programs from the ports collection support localized
d2193 1
a2193 1
<small>$OpenBSD: faq10.html,v 1.162 2011/09/22 10:10:14 stsp Exp $</small>
@


1.162
log
@Explain how to configure locales on OpenBSD.  ok nick naddy
@
text
@d2152 2
a2153 2
<p>Few utilities in the base system support UTF-8 at this time and will
use ASCII in the UTF-8 locale.
d2193 1
a2193 1
<small>$OpenBSD: faq10.html,v 1.161 2011/05/27 01:36:59 lum Exp $</small>
@


1.161
log
@Tidy "Applying Patches" section and some meta tags.
ok nick@@
@
text
@d57 5
d2107 73
d2193 1
a2193 1
<small>$OpenBSD: faq10.html,v 1.160 2011/05/10 02:38:27 lum Exp $</small>
@


1.160
log
@Add link to usermgmt.conf man page and tidy surrounding paras.
ok nick@@
@
text
@d8 2
a9 2
<meta name= "description"   content= "the OpenBSD FAQ page">
<meta name= "keywords"      content= "openbsd,faq">
d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2010 by OpenBSD.">
d1209 8
a1216 7
are text files that hold differences to the original source code. They
are <b>NOT</b> distributed in binary form. This means that to patch your
system you must have the source code from the <b>RELEASE</b> version of
OpenBSD readily available.
In general, you should have the entire source tree available.
If you are running a release from official CDROM, the source trees are 
available on disk 3, they are also available as files from the
d1225 3
a1227 3
Without this patch, recovering data from backups is quite difficult.
People using a tape drive <i>need</i> this patch, however those without
a tape drive may have no particular need to install it.
d1292 2
a1293 1
If they did not, it normally means your source tree is not right, you
d1300 2
a1301 2
At this point, you can <a href="faq5.html#BldKernel">build the kernel</a>
as normal, install it and reboot the system.
d2115 1
a2115 1
<small>$OpenBSD: faq10.html,v 1.159 2011/05/05 13:52:27 lum Exp $</small>
@


1.159
log
@Update adduser "screenshots".
ok nick@@
@
text
@d650 7
a656 6
Being that user(8) is not interactive, the easiest way to add users
efficiently is to use the adduser(8) command. The actual command
<i>/usr/sbin/user</i> is just a frontend to the rest of the
<i>/usr/sbin/user*</i> commands. Therefore, the following commands can
be added by using <b>user add</b> or <b>useradd</b>, its your choice as
to what you want, and doesn't change the use of the commands at all.
d659 5
a663 5
In this example, we are adding the same user with the same
specifications as the user that was added <a href="#adduser">above</a>.
useradd(8) is much easier to use if you know the default setting before
adding a user. These settings are located in <i>/etc/usermgmt.conf</i>
and can be viewed by doing so:
d677 3
a679 3
The above settings are what will be set unless you specify different
with command line options. For example, in our case, we want the user to
go to the group <b>guest</b>, not <b>users</b>.
d681 2
a682 2
specified on the command line. This is, the encrypted passwords, so you
must first use the
d684 4
a687 3
utility to create the password. For example: OpenBSD's passwords by
default use the Blowfish algorithm for 6 rounds.
Here is an example line to create an encrypted password to specify to
d697 3
a699 1
Now that we have our encrypted password, we are ready to add the user.
d2113 1
a2113 1
<small>$OpenBSD: faq10.html,v 1.158 2011/05/05 05:16:22 lum Exp $</small>
@


1.158
log
@Most of the "a name" tags in the index at the top of the page
aline the title of the section with the top of the viewable
browsing window when you click on the link. A few didn't.
They were missing para markup before the "a name".
Tested on Firefox 4 and ay-ee 9.
@
text
@a565 1
Reading /etc/login.conf
d570 1
a570 1
Don't worry about mistakes. I will give you the chance later to correct any input.
d573 1
a573 1
Enter shell csh ksh nologin sh [sh]: <b>ksh</b>
d578 1
a578 2
Login class auth-defaults auth-ftp-defaults daemon default staff 
[default]: <b><i>Enter</i></b>
a944 1
Reading /etc/login.conf
d949 1
a949 1
Don't worry about mistakes. I will give you the chance later to correct any input.
d952 1
a952 1
Enter shell csh false ksh nologin sh tcsh zsh [sh]: <b>false</b>
d957 1
a957 2
Login class auth-defaults auth-ftp-defaults daemon default staff 
[default]: <b><i>Enter</i></b>
d2109 1
a2109 1
<small>$OpenBSD: faq10.html,v 1.157 2011/05/05 04:47:10 lum Exp $</small>
@


1.157
log
@Explain how to disable anonymous ftp without undo-ing prerequisites.
ok nick@@
@
text
@d388 1
d1319 1
a1319 1

d1598 1
d1624 1
a1624 1

d1750 1
d1775 1
d2113 1
a2113 1
<small>$OpenBSD: faq10.html,v 1.156 2011/05/03 18:57:28 lum Exp $</small>
@


1.156
log
@Make 10.1 read abit easier.
suggestions and ok nick@@
(though I have changed small bits since his ok, but
nothing material)
@
text
@d1078 10
d2109 1
a2109 1
<small>$OpenBSD: faq10.html,v 1.155 2011/05/03 13:54:53 lum Exp $</small>
@


1.155
log
@rc.c -> rc.d
ok nick@@
@
text
@d66 2
a67 5
Existing users must be added to the <kbd>&quot;wheel&quot;</kbd> group
by hand.
This is done for security reasons, and you should be cautious with whom
you give access to. On OpenBSD, users who are in the <kbd>wheel</kbd>
group are allowed to use the
d69 2
a70 4
userland program to become root. Users who are not in
<kbd>&quot;wheel&quot;</kbd> cannot use su(1).
Here is an example of a <kbd>/etc/group</kbd> entry to place the user
<b>ericj</b> into the <kbd>&quot;wheel&quot;</kbd> group.
d73 1
a73 1
If you are adding a new user with
d75 5
a79 3
you can put them in the wheel group by answering wheel at "<tt>Invite
<i>user</i> into other groups:</tt>". This will add them to /etc/group,
which will look something like this:
d86 2
a87 3
If you are looking for a way to allow users limited access to superuser
privileges without putting them in the <kbd>&quot;wheel&quot;</kbd>
group, use
d2099 1
a2099 1
<small>$OpenBSD: faq10.html,v 1.154 2011/05/01 13:08:58 nick Exp $</small>
@


1.154
log
@
updates for 4.9
@
text
@d267 1
a267 1
><i>/etc/rc.c</i></a> to handle their startup and shutdown.
d2103 1
a2103 1
<small>$OpenBSD: faq10.html,v 1.153 2011/04/05 13:46:34 lum Exp $</small>
@


1.153
log
@Communicate the gravitas of security updates a bit more.
And expand on patch limitations.
Suggestions and ok nick@@
@
text
@d125 1
a125 1
OpenBSD uses an
d174 3
a176 1
  <li>Local daemons are run, via <i>/etc/rc.local</i>
d208 2
a209 2
We strongly suggest you never touch <i>/etc/rc.conf</i> itself.
Instead, create the file <i>/etc/rc.conf.local</i>, copy just the lines
d212 2
a213 2
file.
In fact, the standard <a href="upgrade48.html">upgrade process</a>
d238 1
a238 1
other ways, you should use the <i>/etc/rc.local</i> file.
d240 2
a241 2
/usr/local/sbin/daemonx. I want it to start at boot time. I would put
an entry into <i>/etc/rc.local</i> like this:
d262 18
d2103 1
a2103 1
<small>$OpenBSD: faq10.html,v 1.152 2010/11/21 15:52:43 nick Exp $</small>
@


1.152
log
@
correct link, from John Cosimano (jmc at cosmicnetworks net), thanks!
@
text
@d1113 1
a1113 1
ways).
d1123 3
a1125 2
Note, however, that patches aren't made for new additions to OpenBSD,
and are only done for important reliability fixes or security problems
d2083 1
a2083 1
<small>$OpenBSD: faq10.html,v 1.151 2010/11/01 09:48:45 nick Exp $</small>
@


1.151
log
@
update to 4.8
@
text
@d1270 1
a1270 1
At this point, you can <a href="faq5.html#Building">build the kernel</a>
d2082 1
a2082 1
<small>$OpenBSD: faq10.html,v 1.150 2010/10/29 09:57:15 ajacoutot Exp $</small>
@


1.150
log
@Add a small entry about timezone and chrooted httpd(8).

ok sthen@@
@
text
@d211 1
a211 1
In fact, the standard <a href="upgrade47.html">upgrade process</a>
d1472 1
a1472 1
        0c085000 2c0be000 rlib 0    1   0      /usr/lib/libc.so.50.1
d1482 1
a1482 1
# <b>cp /usr/lib/libc.so.50.1 /var/www/usr/lib</b>
d2082 1
a2082 1
<small>$OpenBSD: faq10.html,v 1.149 2010/05/19 12:41:02 nick Exp $</small>
@


1.149
log
@
updates for 4.7
@
text
@d1409 6
d2082 1
a2082 1
<small>$OpenBSD: faq10.html,v 1.148 2009/11/06 22:55:28 schwarze Exp $</small>
@


1.148
log
@Correct and shorten the instructions what to do after accidentally
deleting the ypservers.db file, both in the manual and in the FAQ;
original suggestion to improve this from ajacoutot@@,
my wording tweaked by jmc@@.

While here, resolve text duplication in the manual.
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2009 by OpenBSD.">
d211 1
a211 1
In fact, the standard <a href="upgrade46.html">upgrade process</a>
d2076 1
a2076 1
<small>$OpenBSD: faq10.html,v 1.147 2009/11/04 00:31:54 schwarze Exp $</small>
@


1.147
log
@Adapt the YP server FAQ to two improvements released with 4.6:
(1) Related to usr.sbin/ypserv/ypinit/ypinit.sh rev. 1.13:
Call ypinit up front, now that it doesn't imply make any more.
(2) Related to usr.sbin/ypserv/ypinit/Makefile.yp rev. 1.14:
Add a paragraph explicitely advertising MINUID.
ok nick@@ edd@@ ajacoutot@@ otto@@ deraadt@@
@
text
@d1943 2
a1944 5
Thus, take special care never to damage that particular file,
lest you have to regenerate it manually using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=makedbm&amp;sektion=8"
>makedbm(8)</a>,
or reinitialise the server by rerunning <tt>ypinit -m</tt>.
d2076 1
a2076 1
<small>$OpenBSD: faq10.html,v 1.146 2009/10/16 19:07:37 nick Exp $</small>
@


1.146
log
@
updates for 4.6
@
text
@d1742 2
d1757 1
a1757 2
<ol>
<li><p>
d1770 19
d1790 5
a1794 5
Usually, the default location <tt>/etc</tt> is <em>not</em> appropriate:
As a rule, you do not need all accounts and groups existing on the server
on all your client hosts.
In particular, not serving the root account and thus keeping root's
password hash confidential is often beneficial to security.
d1805 2
a1806 1
To define the source directory, edit the file <tt>/var/yp/Makefile.yp</tt>
d1813 15
d1830 1
a1830 1
<tt>/var/yp/Makefile.yp</tt>.
d1833 6
a1838 3
A backup of the original template <tt>Makefile.yp</tt> is placed at
<tt>/var/yp/Makefile.yp.dist</tt> at system install time,
in case you need to recover a vanilla configuration.
d1854 1
a1854 1
Initialise the YP server using the interactive command
d1857 2
a1858 1
ypinit -m
d1861 4
a1864 25
At this point, it is not necessary to specify slave servers yet.
To add slave servers, you can rerun
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypinit&amp;sektion=8"
>ypinit(8)</a> later, using the <tt>-u</tt> option.
Setting up at least one slave server for each domain is useful
to avoid service interruptions, should the master server ever go down
or lose network connectivity, in particular since client processes
trying to access YP maps block indefinitely until they receive the
requested information.  Thus, YP service interruptions typically render
the client hosts completely unusable until YP is back to service.

<p>
Note that changes made to <tt>/var/yp/Makefile.yp</tt> after running
<tt>ypinit -m</tt> have no effect because <tt>ypinit -m</tt>
copies the template to <tt>/var/yp/`domainname`/Makefile</tt>.
While most of the database files in <tt>/var/yp/`domainname`</tt>
can easily be recreated using this new Makefile, there is one exception:
The file <tt>ypservers.db</tt>, listing all YP master and slave servers
associated with the domain, is created directly from <tt>ypinit -m</tt>
and modified exclusively by <tt>ypinit -u</tt>.
Thus, take special care never to damage that particular file,
lest you have to regenerate it manually using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=makedbm&amp;sektion=8"
>makedbm(8)</a>,
or reinitialise the server by rerunning <tt>ypinit -m</tt>.
d1938 10
d2079 1
a2079 1
<small>$OpenBSD: faq10.html,v 1.145 2009/10/01 02:55:50 nick Exp $</small>
@


1.145
log
@
rc.conf.local is not just a good idea, it is The Way.  Editing rc.conf is
right out.  Rework faq10.html#rc and faq7.html to make that completely
and undenibly clear, and while there, improve a lot of other little things.
Unexpected rework while I was working on something else...
@
text
@d211 1
a211 1
In fact, the standard <a href="upgrade45.html">upgrade process</a>
d2050 1
a2050 1
<small>$OpenBSD: faq10.html,v 1.144 2009/05/23 11:34:24 schwarze Exp $</small>
@


1.144
log
@update /etc/passwd, too; from ajacoutot@@
@
text
@a124 1
<p>
d131 4
a134 3
  <li>/etc/rc.conf - Configuration file used by <i>/etc/rc</i> to know
  what daemons should start with the system.
  <li>/etc/rc.conf.local - Configuration file you can use to override
d136 1
a136 1
  itself, which is convenient when upgrading your system.
d153 3
a155 3
<i>/etc/rc.conf</i> (or <i>/etc/rc.conf.local</i>), <i>/etc/rc.local</i>
and <i>/etc/rc.shutdown</i>. To get a look of how the rc(8) procedure
works, here is the flow:
d161 4
a164 3
  <li>Configuration variables are read in from <i>/etc/rc.conf</i> and,
      afterwards, <i>/etc/rc.conf.local</i>. Settings in rc.conf.local
      will override those in rc.conf.
d180 3
a182 4
Most daemons and services that come with OpenBSD by default can be
started on boot by simply editing the <i>/etc/rc.conf</i> configuration
file.
To start out take a look at the default
d191 26
a216 9
A line like this shows that ftpd is not to start up with the system (at
least not via rc(8), read the <a href="faq10.html#AnonFTP">Anonymous FTP
FAQ</a> to read more about this).
In any case, each line has a comment showing you the flags for
<b>NORMAL</b> usage of that daemon or service. This doesn't mean that
you must run that daemon or service with those flags.
Read the relevant manual page to see how you can have that daemon or service
start up in any way you like. For example, here is the default line
pertaining to httpd(8).
d223 8
a230 11
Here you can obviously see that starting up httpd normally no flags are
necessary. So a line like: &quot;<b> httpd_flags=""</b>&quot; would be
necessary. But to start httpd with ssl enabled. (Refer to the
<a href="#HTTPS">SSL FAQ</a> or <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&amp;sektion=8">ssl(8)</a>)
You should start with a line like: &quot;httpd_flags="-DSSL"&quot;.

<p>
A good approach is to never touch <i>/etc/rc.conf</i> itself. Instead,
create the file <i>/etc/rc.conf.local</i>, copy just the lines you are
about to change from <i>/etc/rc.conf</i> and adjust them as you like.
This makes future upgrades easier -- all the changes are in the one file.
d1415 1
a1415 1
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf&amp;sektion=8">/etc/rc.conf</a></i>.
d2050 1
a2050 1
<small>$OpenBSD: faq10.html,v 1.143 2009/04/30 02:22:12 nick Exp $</small>
@


1.143
log
@
validation stuff: & -> &amp;.  Checking validation actually found a typo.
rev lib version numbers (yeah, it's from my 4.5 tree, but 95% of the diff
isn't 4.5 updates...)
@
text
@d1990 1
a1990 1
pwd_mkdb /etc/master.passwd
d2036 1
a2036 1
<small>$OpenBSD: faq10.html,v 1.142 2009/04/11 14:15:31 schwarze Exp $</small>
@


1.142
log
@typo: "lookup file", not "lookup files" in resolv.conf(5)

from Tim van der Molen, tbvdm at xs4all dot nl, thanks!
@
text
@d1450 4
a1453 4
        Start    End      Type Ref Name
        00000000 00000000 exe   1  Count.cgi
        03791000 237ca000 rlib  1  /usr/lib/libc.so.30.3
        03db4000 03db4000 rtld  1  /usr/libexec/ld.so
d1462 1
a1462 1
# <b>cp /usr/lib/libc.so.30.3 /var/www/usr/lib</b>
d1662 1
a1662 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=getpwent&sektion=3"
d1664 1
a1664 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=getgrent&sektion=3"
d1666 1
a1666 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gethostbyname&sektion=3"
d1670 1
a1670 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=master.passwd&sektion=5"
d1678 1
a1678 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yp&sektion=8">yp(8)</a>
d1689 1
a1689 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypldap&sektion=8"
d1695 1
a1695 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cron&sektion=8"
d1697 1
a1697 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&sektion=1"
d1722 1
a1722 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kerberos&sektion=8"
d1744 1
a1744 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=domainname&sektion=1"
d1746 1
a1746 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=defaultdomain&sektion=5"
d1764 1
a1764 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=user&sektion=8"
d1766 1
a1766 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&sektion=8"
d1790 1
a1790 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=Makefile.yp&sektion=8"
d1793 1
a1793 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=passwd&sektion=5"
d1795 1
a1795 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&group=5"
d1797 1
a1797 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hosts&sektion=5"
d1809 1
a1809 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypinit&sektion=8"
d1829 1
a1829 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=makedbm&sektion=8"
d1835 1
a1835 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rpc&sektion=3"
d1838 1
a1838 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=portmap&sektion=8"
d1841 1
a1841 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf.local&sektion=8"
d1853 1
a1853 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=securenet&sektion=5"
d1855 1
a1855 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypserv.acl&sektion=5"
d1886 1
a1886 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yppasswdd&sektion=8"
d1939 1
a1939 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypbind&sektion=8"
d1950 1
a1950 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypcat&sektion=1"
d1960 1
a1960 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ypmatch&sektion=1"
d1962 1
a1962 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=yptest&sektion=8"
d1978 1
a1978 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=Makefile.yp&sektion=8"
d1994 1
a1994 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=passwd&sektion=5"
d1997 1
a1997 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=id&sektion=1"
d2009 1
a2009 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&sektion=5"
d2014 1
a2014 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf&sektion=5"
d2036 1
a2036 1
<small>$OpenBSD: faq10.html,v 1.141 2009/04/11 10:57:25 schwarze Exp $</small>
@


1.141
log
@new section "10.19 - Directory services"
so far mostly explaining YP standard usage (server and client)
note: this applies to 4.5-release, -current is already moving forward

based on work done by Edd Barrett <vext01 (at) gmail (dot) com>
tweaked and expanded by myself
including feedback from nick@@ jmc@@ ajacoutot@@
OK nick@@ jmc@@ deraadt@@
@
text
@d2019 1
a2019 1
lookup files yp bind
d2036 1
a2036 1
<small>$OpenBSD: faq10.html,v 1.140 2008/11/12 02:59:41 nick Exp $</small>
@


1.140
log
@
punctation, standardizing, other misc. cleanup, from from Alan R. S.
Bueno (alan dot bsd at gmail dot com)
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2007 by OpenBSD.">
d50 7
d1647 378
d2036 1
a2036 1
<small>$OpenBSD: faq10.html,v 1.139 2008/07/19 21:51:26 okan Exp $</small>
@


1.139
log
@add small section discussing name resolution with httpd(8).

ok nick@@ sthen@@
@
text
@d277 1
a277 1
Don't forget send a 'HangUP' signal to sendmail, (a signal which causes
d330 2
a331 2
site, ISP,...)! There are several POP servers you can install right away
from the ports collection. If possible, use
d485 2
a486 1
file. It is called vipw(8).
d644 1
a644 1
specified on the commandline. This is, the encrypted passwords, so you
d1019 1
a1019 1
syslog, along with the get, retrieve, etc, ftp commands.
d1651 1
a1651 1
<small>$OpenBSD: faq10.html,v 1.138 2008/06/13 06:57:36 bernd Exp $</small>
@


1.138
log
@Fix edquota(8) example.

ok nick@@
@
text
@d1379 8
d1650 1
a1650 1
<small>$OpenBSD: faq10.html,v 1.137 2007/11/01 02:11:01 nick Exp $</small>
@


1.137
log
@
updates for 4.2.
@
text
@d791 1
a791 1
/: blocks in use: 62, limits (soft = 0, hard = 0)
d800 1
a800 1
/: blocks in use: 62, limits (soft = 1000, hard = 1050)
d1642 1
a1642 1
<small>$OpenBSD: faq10.html,v 1.136 2007/02/19 17:42:24 steven Exp $</small>
@


1.136
log
@fix a few links; from Martynas Venckus.
@
text
@d1600 1
a1600 1
Starting with OpenBSD 3.7, ksh(1) has been enhanced with a number of 
d1642 1
a1642 1
<small>$OpenBSD: faq10.html,v 1.135 2007/01/28 18:17:23 nick Exp $</small>
@


1.135
log
@
#ksh: add "\$" char, which apparently slipped in without my noticing
before 4.0 came out.  Update example appropriately.
@
text
@d176 1
a176 1
<a href="http://www.openbsd.org/cgi-bin/cvsweb/src/etc/rc.conf">/etc/rc.conf</a>
d291 2
a292 2
<li><a href="http://www.sendmail.org/tips/relaying.html">http://www.sendmail.org/tips/relaying.html</a>
<li><a href="http://www.sendmail.org/antispam.html">http://www.sendmail.org/antispam.html</a>
d1642 1
a1642 1
<small>$OpenBSD: faq10.html,v 1.134 2006/11/06 03:13:10 nick Exp $</small>
@


1.134
log
@
ftp -> ftpd.  From Marcus Popp, marcus dot popp at paranoidbsd dot org.
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2006 by OpenBSD.">
d1613 1
d1618 3
a1620 1
man page for more details!)
d1625 1
a1625 1
export PS1="\n\u@@\H\n\w $ "
d1642 1
a1642 1
<small>$OpenBSD: faq10.html,v 1.133 2006/11/01 03:07:32 nick Exp $</small>
@


1.133
log
@
oops.  link in faq11.html.
@
text
@d948 1
a948 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftp(8)</a> man page.
d1639 1
a1639 1
<small>$OpenBSD: faq10.html,v 1.132 2006/09/12 02:06:29 nick Exp $</small>
@


1.132
log
@
Better consistency on chroot(2), from Antoine Jacoutot
Using a function call as an adverb and a verb is probably be a crime
against language...
@
text
@d23 1
a23 2
<!-- a href= "faq11.html">[To Section 11 - Performance Tuning]</a -->
<a href="faq12.html">[To Section 12 - Platform-Specific Questions]</a>
d1631 1
a1631 3
<!-- a href= "faq11.html">[To Section 11 - Performance Tuning]</a -->
<a href="faq12.html">[To Section 12 - Platform-Specific Questions]</a>

d1639 1
a1639 1
<small>$OpenBSD: faq10.html,v 1.131 2006/09/11 06:04:43 steven Exp $</small>
@


1.131
log
@convience -> convenience
@
text
@d48 1
a48 1
<li><a href="#httpdchroot"   >10.16 - Tell me about chroot() Apache?</a>
d1272 1
a1272 1
<h2>10.16 - Tell me about this chroot() Apache?</h2>
d1500 1
a1500 1
The goal is a secure web server, chroot()ing is just a tool to accomplish
d1642 1
a1642 1
<small>$OpenBSD: faq10.html,v 1.130 2006/09/10 18:47:47 nick Exp $</small>
@


1.130
log
@
clairify and enhance a few points on the #httpdchroot article.
help and ok henning@@
@
text
@d1310 1
a1310 1
Further, it must be remembered that security and convience are often
d1642 1
a1642 1
<small>$OpenBSD: faq10.html,v 1.129 2006/08/30 02:34:47 nick Exp $</small>
@


1.129
log
@
tcpd -> ftpd.  This could be used as was, but that wasn't the topic of
this article.  Spotted by Corann Brouwer (probsdt at home dot nl).
@
text
@a1283 1
<p>
d1294 5
a1298 1
<i>/var/www</i> directory. This helps security tremendously -- should
d1303 1
a1303 1
<h3>What does this mean to the user?</h3>
d1306 1
a1306 1
Put bluntly, chroot(2)ing Apache is something new, and not done by
d1310 4
d1330 3
a1332 1
use something similar to <i>/var/www/home</i>.
d1338 4
a1341 1
dropped. httpd(8) must be stopped and restarted:
d1344 3
a1346 1
# <b>apachectl stop && apachectl start</b>
d1349 7
d1369 10
a1378 4
directory with the files required by the application, though this is non-
trivial and requires considerable programming knowledge -- most users
will find it easier to just disable the chroot(2) feature until they are
updated.
d1383 2
a1384 1
within the chroot. In other cases, you will simply have to disable this
d1487 23
a1509 2
In this example, the program is fairly simple, and yet we have seen several 
different kinds of problems.
d1513 21
a1533 7
the chroot, you have lost all benefit of the chroot(2) environment.
Even with an application as simple as this, it must write to disk (to
keep track of its counters), so some benefit of the chroot(2) is lost.
In general, the minimum files needed to run an application should be 
copied into the chroot.
<i>Not every application can or should be chroot(2)ed.</i>

d1642 1
a1642 1
<small>$OpenBSD: faq10.html,v 1.128 2006/08/21 12:48:07 steven Exp $</small>
@


1.128
log
@close tag
@
text
@d1022 1
a1022 1
<b>ftp             stream  tcp     nowait  root    /usr/libexec/tcpd       ftpd -llUSA</b>
d1579 1
a1579 1
<small>$OpenBSD: faq10.html,v 1.127 2006/08/20 17:02:12 steven Exp $</small>
@


1.127
log
@some minor fixes, rewordings, spelling, spacing, html tweaks.

feedback/ok nick@@
@
text
@d367 1
a367 1
</pre></blockquote
d1579 1
a1579 1
<small>$OpenBSD: faq10.html,v 1.126 2006/08/15 01:20:04 nick Exp $</small>
@


1.126
log
@
There are lots of ways to do an indented block of text.  Several were
demonstrated here.  Standardize on
  <blockquote><pre>
  </pre></blockquote>
While there, <strong> -> <b>.
For those who think their favorite method is better:  Pbbbbttttt!
@
text
@d130 1
a130 1
  itself, which is convenient for people who upgrade often.
d191 1
a191 1
You can always use man(1) to see how you can have that daemon or service
d210 1
a210 2
This may make future upgrading easier -- all the changes are in the one
file.
d215 1
a215 1
For other daemons that you might install with the system via ports or
d218 1
a218 1
/usr/local/sbin/daemonx. I want this to start at boot time. I would put
d232 1
a232 1
From now on, this daemon will be run at boot. You will be able to see
d245 1
a245 1
If you have apm, you can also set &quot;powerdown=YES&quot;. Which will
d341 1
a341 1
<b>PS:</b> Notice, OpenBSD does not have a group name of
d373 1
a373 1
     hosts       files
d380 1
a380 1
     # <b>kill -HUP `head -1 /var/run/sendmail.pid`</b>
d883 2
a884 2
To start off, you need to have an account on your system of "ftp". This
account shouldn't have a usable password. Here we will set the login
d887 1
a887 1
directory of the 'ftp' user. To read up more on that, read the
d894 1
a894 1
the &quot;shell&quot; that we will be giving to the ftp user.
d896 7
a902 4
password. To do this you can simply <i>echo /usr/bin/false &gt;&gt;
/etc/shells</i>.
Also if you wish for that shell to show up during the adduser questions,
you need to modify <i>/etc/adduser.conf</i>.
d999 7
a1005 5
With ftpd you can choose to either run it from inetd or the rc scripts
can kick it off. These examples will show our daemon being started from
<a href="http://www.openbsd.org/cgi-bin/cvsweb/src/etc/inetd.conf">inetd.conf</a>.
First we must become familiar with some of the options to ftpd. The
default line from <i>/etc/inetd.conf</i> is:
d1026 1
a1026 1
Note - For people using HIGH traffic ftp servers, you might want to not
d1028 1
a1028 1
from inetd.conf and start ftpd from rc.conf along with the <i>-D</i>
d1031 1
a1031 1
Here is an example line to start it from rc.conf.
d1111 2
a1112 1
<li><b>Upgrade your system to <i>-current</i>.</b>
d1363 1
a1363 1
<a href="faq15.html#Ports">ports</a>.
d1368 3
a1370 2
First, we install a <a href="faq15.html#PkgMgmt">package</a> for 
<a href="http://www.muquit.com/muquit/software/Count/Count.html">wwwcount</a>.
d1459 1
a1459 1
In this example, the program was fairly simple, and yet we saw several 
d1461 1
a1461 1
Some apps are pretty simple, and chroot(2)ing them makes sense.
d1579 1
a1579 1
<small>$OpenBSD: faq10.html,v 1.125 2006/05/21 15:18:45 nick Exp $</small>
@


1.125
log
@
fastboot info was wrong and incomplete.  If someone really cares about
this, they had better be reading the man pages CAREFULLY, so remove from
here.  After discussion with steven@@, who spotted the original problem.
@
text
@d69 1
a69 1
<strong>ericj</strong> into the <kbd>&quot;wheel&quot;</kbd> group.
d100 1
a100 1
# <strong>cd /SRC; dump 0f - . | (cd /DST; restore -rf - )</strong>
d110 3
a112 5
<blockquote>
<pre>
# <strong>cd /SRC; tar cf -  . | (cd /DST; tar xpf - )</strong>
</pre>
</blockquote>
d258 1
a258 1
# <strong>grep relay-domains /etc/mail/sendmail.cf</strong>
d283 1
a283 1
# <Strong>kill -HUP `head -1 /var/run/sendmail.pid`</strong>
d366 3
a368 3
<pre>
     hosts       files dns
</pre>
d373 1
a373 1
<pre>
d375 1
a375 1
</pre>
d380 1
a380 1
<pre>
d382 1
a382 1
</pre>
d410 3
a412 5
<div style="margin-left: 2em">
<pre>
# <strong>openssl genrsa -out /etc/ssl/private/server.key 1024</strong>
</pre>
</div>
d418 3
a420 5
<div style="margin-left: 2em">
<pre>
# <strong>openssl genrsa -des3 -out /etc/ssl/private/server.key 1024</strong>
</pre>
</div>
d427 3
a429 5
<div style="margin-left: 2em">
<pre>
# <strong>openssl req -new -key /etc/ssl/private/server.key -out /etc/ssl/private/server.csr</strong>
</pre>
</div>
d441 4
a444 6
<div style="margin-left: 2em">
<pre>
# <strong>openssl x509 -req -days 365 -in /etc/ssl/private/server.csr \
       -signkey /etc/ssl/private/server.key -out /etc/ssl/server.crt</strong>
</pre>
</div>
d525 1
a525 1
# <strong>adduser</strong>
d575 2
a576 2
# <strong>rmuser</strong>
Enter login name for user to remove: <strong>testuser</strong>
d582 2
a583 2
Is this the entry you wish to remove? <strong>y</strong>
Remove user's home directory (/home/testuser)? <strong>y</strong>
d630 1
a630 1
$ <strong>user add -D</strong>
d654 1
a654 1
$ <strong>encrypt -p -b 6</strong>
d663 2
a664 2
# <strong>user add -p '$2a$06$YOdOZM3.4m6MObBXjeZtBOWArqC2.uRJZXUkOghbieIvSWXVJRzlq' -u 1002 \
-s /bin/ksh -c "Test FAQ User" -m -g guest testuser</strong>
d682 1
a682 1
$ <strong>ls -la /home</strong>
d688 1
a688 1
$ <strong>id testuser</strong>
d690 1
a690 1
$ <strong>finger testuser</strong>
d703 1
a703 1
$ <strong>userinfo testuser</strong>
d724 1
a724 1
# <strong>userdel -r testuser</strong>
d785 1
a785 1
# <strong>edquota ericj</strong>
d812 1
a812 1
<strong>-t</strong> option on edquota(8). After the grace period is over
d823 1
a823 1
# <strong>quotaon -a</strong>
d836 1
a836 1
# <Strong>quota ericj</strong>
d853 1
a853 1
# <strong>quotaoff -a</strong>
d867 3
a869 3
<pre>
     # <b>info heimdal</b>
</pre>
d903 1
a903 1
# <strong>adduser</strong>
d1004 1
a1004 1
<strong>ftp             stream  tcp     nowait  root    /usr/libexec/ftpd       ftpd -US</strong>
d1018 1
a1018 1
<strong>ftp             stream  tcp     nowait  root    /usr/libexec/tcpd       ftpd -llUSA</strong>
d1326 3
a1328 3
<pre>
     # <b>apachectl stop && apachectl start</b>
</pre>
d1371 7
a1377 5
<pre>
    # <b>apachectl stop</b>
    /usr/sbin/apachectl stop: httpd stopped
    # <b>httpd -u</b>
</pre>
d1383 6
a1388 5
<pre>
    # <b>apachectl stop</b>
    /usr/sbin/apachectl stop: httpd stopped
    # <b>httpd</b>
</pre>
d1396 2
a1397 1
<pre>
d1405 2
a1406 1
</pre>
d1410 7
a1416 5
<pre>
    # <b>mkdir -p /var/www/usr/lib /var/www/usr/libexec</b>
    # <b>cp /usr/lib/libc.so.30.3 /var/www/usr/lib</b>
    # <b>cp /usr/libexec/ld.so /var/www/usr/libexec</b>
</pre>
d1432 6
a1437 5
<pre>
    # <b>mkdir -p /var/www/var/www</b>
    # <b>cd /var/www/var/www</b>
    # <b>ln -s ../../wwwcount wwwcount</b>
</pre>
d1445 5
a1449 3
<pre>
    # <b>tar cf - /usr/local/lib/wwwcount | (cd /var/www; tar xpf - )</b>
</pre>
d1573 1
a1573 1
<small>$OpenBSD: faq10.html,v 1.124 2006/05/21 14:06:45 steven Exp $</small>
@


1.124
log
@typos
@
text
@d156 1
a156 2
  <li>Filesystems are checked. This will be bypassed if the file
      /etc/fastboot exists. This is certainly not a good idea though.
d1573 1
a1573 1
<small>$OpenBSD: faq10.html,v 1.123 2006/04/16 14:20:51 nick Exp $</small>
@


1.123
log
@
missing word, misplaced tag.  Proof that I can actually spot my own typos,
at least if given several years.
@
text
@d566 1
a566 1
Shell:i      /bin/ksh
d900 1
a900 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftp(8)</a> and 
d1574 1
a1574 1
<small>$OpenBSD: faq10.html,v 1.122 2006/04/06 11:02:18 nick Exp $</small>
@


1.122
log
@
no, faq11.html being missing is not a mistake.  Linking to it, however,
WAS a mistake.  Expect to see something good here post 3.9.
@
text
@d357 1
a357 1
<h2>10.6 - Why does Sendmail ignore <tt>/etc/hosts file?</tt></h2>
d1574 1
a1574 1
<small>$OpenBSD: faq10.html,v 1.121 2006/03/09 03:17:45 nick Exp $</small>
@


1.121
log
@
bump copyright date (eliminatate Ms from my tree)
@
text
@d23 2
a24 1
<a href= "faq11.html">[To Section 11 - Performance Tuning]</a>
d1564 3
a1566 1
<a href= "faq11.html">[To Section 11 - Performance Tuning]</a>
d1574 1
a1574 1
<small>$OpenBSD: faq10.html,v 1.120 2005/11/24 05:41:56 steven Exp $</small>
@


1.120
log
@link to faq15 instead of old faq8 packages/ports sections.

ok nick@@
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2005 by OpenBSD.">
d1571 1
a1571 1
<small>$OpenBSD: faq10.html,v 1.119 2005/11/02 02:07:38 nick Exp $</small>
@


1.119
log
@
update-os.  Spotted by Steven Mestdagh (and others), plus one that I found
on my own (inspired by Steven's spotting), thanks!
@
text
@d1368 1
a1368 1
<a href="faq8.html#Ports">ports</a>.
d1373 1
a1373 1
First, we install a <a href="faq8.html#Packages">package</a> for 
d1508 2
a1509 2
itself can be loaded via either <a href="faq8.html#Ports">ports</a> or
<a href="faq8.html#Packages">packages</a>.
d1571 1
a1571 1
<small>$OpenBSD: faq10.html,v 1.118 2005/11/02 00:31:20 saad Exp $</small>
@


1.118
log
@fix section title. ok nick@@
@
text
@d1473 1
a1473 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=csh&amp;sektion=1">ksh</a>.
d1571 1
a1571 1
<small>$OpenBSD: faq10.html,v 1.117 2005/11/01 11:39:56 nick Exp $</small>
@


1.117
log
@
update for 3.8
@
text
@d48 1
a48 1
<li><a href="#rootshell"     >10.17 - I don't like the standard root shell!</a>
d1571 1
a1571 1
<small>$OpenBSD: faq10.html,v 1.116 2005/08/18 14:06:19 nick Exp $</small>
@


1.116
log
@
Make it clear that httpd can't open log files for _writing_ after chroot.
Clean up use of <b></b> around user-typed commands.
@
text
@d1467 3
a1469 2
<!-- XXXversion - root shell is now ksh -->
<h2>10.17 - I don't like the standard root shell!</h2>
d1471 1
d1473 1
a1473 3
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=csh&amp;sektion=1">csh</a>,
due primarily to tradition. There is no requirement that OpenBSD have
csh(1) for the root login (though keep reading before changing it).
a1475 20
Some users who come from other Unix-like operating systems find csh(1)
unfamiliar, and ask if and how they can change it. There are a few
options:

<ul>
<li><b>Don't login as <i>root!</i></b> Between
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=su&amp;sektion=1">su</a>
and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sudo&amp;sektion=8">sudo</a>,
there should be few reasons for users to log in as <i>root</i> for most
applications after initial setup.

<li><b>Invoke your favorite shell after login:</b> If you like ksh(1) or
any other shell, just invoke it from the default shell.
<li><b>Change the root shell:</b> This can be done using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=chsh&amp;sektion=1">chsh</a> 
or
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vipw&amp;sektion=8">vipw</a>.
</ul>

a1481 1

a1490 6
<p>
It is sometimes said that one should never change the root shell, though
there is no reason not to in OpenBSD. But again, this shouldn't be an
issue -- just don't log in as root.
In fact, for OpenBSD-current, the default shell has been changed to ksh.

d1571 1
a1571 1
<small>$OpenBSD: faq10.html,v 1.115 2005/06/12 15:13:25 jmc Exp $</small>
@


1.115
log
@no need for cat in this example;

from dave hines;
ok nick@@
@
text
@d1333 1
a1333 1
httpd(8) has no ability to open its own log files once privileges are
d1404 2
a1405 2
# cd /var/www/cgi-bin/
# ldd Count.cgi
d1416 3
a1418 3
    # mkdir -p /var/www/usr/lib /var/www/usr/libexec
    # cp /usr/lib/libc.so.30.3 /var/www/usr/lib
    # cp /usr/libexec/ld.so /var/www/usr/libexec
d1436 3
a1438 3
    # mkdir -p /var/www/var/www          
    # cd /var/www/var/www
    # ln -s ../../wwwcount wwwcount
d1448 1
a1448 1
    # tar cf - /usr/local/lib/wwwcount | (cd /var/www; tar xpf - )
d1598 1
a1598 1
<small>$OpenBSD: faq10.html,v 1.114 2005/05/24 01:15:46 nick Exp $</small>
@


1.114
log
@
HTML validation, from (rfilter at telus dot net)
@
text
@d260 1
a260 1
# <strong>cat /etc/mail/sendmail.cf | grep relay-domains</strong>
d1598 1
a1598 1
<small>$OpenBSD: faq10.html,v 1.113 2005/05/19 16:54:27 nick Exp $</small>
@


1.113
log
@
Welcome 3.7!
@
text
@d1467 1
a1467 1
<!-- XXXversion -- root shell is now ksh -->
d1598 1
a1598 1
<small>$OpenBSD: faq10.html,v 1.112 2005/02/12 19:08:41 nick Exp $</small>
@


1.112
log
@
typos, wordos, linkos and other errors spotted by Steven Mestdagh (steven
dot mestdagh at esat dot kuleuven dot ac dot be), thanks!
@
text
@d1467 1
d1469 1
d1487 1
d1502 1
d1516 2
d1543 3
a1545 3
<pre>
     export PS1='$PWD $ '
</pre>
d1549 3
a1551 3
<pre>
     /home/nick $
</pre>
d1557 29
d1598 1
a1598 1
<small>$OpenBSD: faq10.html,v 1.111 2005/01/24 15:26:07 saad Exp $</small>
@


1.111
log
@rewording and typo fixing. ok nick@@
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2004 by OpenBSD.">
d582 1
a582 1
not to remove the users home directory.
d1322 1
a1322 1
<i>/var/www</i> pointing to other part of the file system -- that is
d1563 1
a1563 1
<small>$OpenBSD: faq10.html,v 1.110 2005/01/17 20:36:58 nick Exp $</small>
@


1.110
log
@
update #Patches.  Old version did lots of things I didn't like, inc.
partial tree checkouts no mention of some of the alternatives.  Hopefully
this will be less confusing to people.
@
text
@d1095 3
a1097 3
Sometimes, the bugs are reliability issues (i.e., something may cause
the system to stop functioning as desired), others may be security
issues (which may allow others to "use" your computer in unintended
d1101 1
a1101 1
current and the previous release to OpenBSD.
d1103 3
a1105 3
page</a>, and are separated into "common" errata that impacts
all <a href="../plat.html">platforms</a>, and errata that impacts only
individual platforms.
d1111 1
a1111 1
NOT all applications).
d1122 2
a1123 2
This is done fetching or updating your source tree using the appropriate
<i>-stable</i> branch, and recompiling the kernel and userland.
d1128 1
a1128 1
This is what we will look at here.
d1130 3
a1132 2
cvs(1) checkout/update and compile, this is sometimes the most difficult
option, as there is no one universal set of instructions to follow.
d1138 2
a1139 2
Again, patching individual files is not always simple, give serious
thought to following the <a href="../stable"><i>-stable</i></a> (or
d1154 1
a1154 1
trees from the time of that snapshot and attempt to patch it using a 
d1172 1
a1172 1
<a href="../ftp.html">ftp servers</a>.
d1238 1
a1238 1
Hunk #1 succeeded at 1815.              <i><-- Look for this message!</i>
d1259 3
a1261 3
In some cases, you will have to rebuild individual utilities, others
will require recompiling all utilities statically linked to a patched
library.
d1271 2
a1272 2
that a later patch is dependent upon an earlier patch.
Be aware of this if you chose to "pick and choose" which patches you
d1563 1
a1563 1
<small>$OpenBSD: faq10.html,v 1.109 2004/12/03 14:54:11 nick Exp $</small>
@


1.109
log
@
it's 6th Edition, not Version 7.  From Michael Knudsen, thanks!
@
text
@d1094 8
a1101 3
The OpenBSD source tree is constantly changing and improving, along with
this fixes to common problems are often made and patches released to the
public.
d1103 3
a1105 3
page</a>, and are separated into categories. These categories correspond
to patches that should be applied to different architectures or
architecture independent patches.
d1110 2
a1111 2
that should be addressed right away, although the choice to do so is, as
always, up to the administrator.
d1114 1
a1114 4
For the examples I will be patching 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=talkd&amp;sektion=8">talkd(8)</a> 
with a security fix from the patch obtained from the
<a href="../errata.html">errata web page</a>.
d1116 29
a1144 1
<h3>How are these patches different from what I would find in the CVS tree?</h3>
d1149 1
a1149 1
directly against the latest release's source tree. Patches against the
d1152 6
d1159 1
a1159 1
<h3>Getting your system ready to be patched.</h3>
d1162 2
a1163 1
Patches for the OpenBSD Operating System are distributed as diffs, which
d1168 5
a1172 27
This does not mean that you must have ALL source code to the OpenBSD
operating system to patch your system, but must have all code for the
program which you are patching. For instance, if you are patching the
kernel you must have all source for the kernel on hand.

<p>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1">cvs(1)</a>
is a very handy tool that can be used to grab only the source that you
need via any of the anonymous cvs servers located around the world. You
can get a listing of these servers on the
<a href="../anoncvs.html">Anonymous CVS page</a>.  

<p>
To retrieve the source code for talkd(8) from <i>3.6-release</i> using
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1">cvs(1)</a>,
you would use the following lines: 

<div style="margin-left: 2em">
<pre>
$ <b>export CVSROOT=anoncvs@@anoncvs5.usa.openbsd.org:/cvs</b>
$ <b>cvs co -rOPENBSD_3_6_BASE src/libexec/talkd/</b>
cvs server: Updating src/libexec/talkd
U src/libexec/talkd/announce.c
U src/libexec/talkd/talkd.c
U src/libexec/talkd/talkd.h
</pre>
</div>
d1175 8
a1182 19
To find the CVS path to the code that you need, you can find this in the
patch on the <i>Index:</i> line. In this case, the CVS path was
<i>src/libexec/talkd/</i>. Always check out the revision of
OPENBSD_version_number_BASE. Without &quot;_BASE&quot; you will be
checking out the stable branch, which might contain other changes that
will interfere.
If you are already tracking the patch branch, the patches should already
be in that source, however you should always check and make sure. You
can always look at
<a href="../plus.html">OpenBSD-current changes</a>
to see which patches have been applied to the patch branch. If the
patches haven't been applied yet, you will need to grab the latest
release source using the commands above.

<p>
Also, for those users that bought official OpenBSD CDs, you can get the
source code directly off of the CD. Refer to the CD insert on how to
extract the source from the CD. In which case you won't need to obtain
the source via anoncvs.
d1185 1
d1188 3
a1190 3
        patch -p0 &lt; 026_talkd.patch
        cd libexec/talkd
        make obj &amp;&amp; make depend &amp;&amp; make &amp;&amp; make install
d1192 1
a1192 1
Index: libexec/talkd/announce.c <b>&lt;------ Path to sources </b>
d1194 14
a1207 14
RCS file: /cvs/src/libexec/talkd/announce.c,v
retrieving revision 1.8
retrieving revision 1.9
diff -u -r1.8 -r1.9
--- libexec/talkd/announce.c    1998/08/18 03:42:10     1.8
+++ libexec/talkd/announce.c    2000/07/06 00:01:45     1.9
@@@@ -160,6 +160,6 @@@@
                *(bptr++) = '\n';
        }
        *bptr = '\0';
-       fprintf(tf, big_buf);
+       fprintf(tf, "%s", big_buf);
        fflush(tf);
 }
d1210 4
a1213 3
<p>
Once you've obtained the proper sources, you can obtain the patch and
place it in <i>src/</i>
d1215 3
a1217 6
<h3>Applying Patches</h3>

<div style="margin-left: 2em">
<pre>
$ <b>cd /usr/src</b>
$ <b>patch -p0&lt;/path/to/026_talkd.patch</b>
d1222 4
a1225 4
|       cd /usr/src
|       patch -p0 &lt; 026_talkd.patch
|       cd libexec/talkd
|       make obj &amp;&amp; make depend &amp;&amp; make &amp;&amp; make install
d1227 1
a1227 1
|Index: libexec/talkd/announce.c
d1229 6
a1234 6
|RCS file: /cvs/src/libexec/talkd/announce.c,v
|retrieving revision 1.8
|retrieving revision 1.9
|diff -u -r1.8 -r1.9
|--- libexec/talkd/announce.c   1998/08/18 03:42:10     1.8
|+++ libexec/talkd/announce.c   2000/07/06 00:01:45     1.9
d1236 2
a1237 2
Patching file libexec/talkd/announce.c using Plan A...
Hunk #1 succeeded at 160. <b>&lt;------------ Patch Succeeded</b>
d1239 1
a1239 24
$ <b>cd /usr/src/libexec/talkd/</b>
$ <b>ls</b>
CVS             announce.c      print.c         table.c         talkd.c
Makefile        announce.c.orig process.c       talkd.8         talkd.h
$ <b>make obj &amp;&amp; make depend &amp;&amp; make</b>
making /home/ericj/lsrc/src/libexec/talkd/obj
mkdep -a /home/ericj/lsrc/src/libexec/talkd/talkd.c /home/ericj/lsrc/sr
c/libexec/talkd/announce.c /home/ericj/lsrc/src/libexec/talkd/process.c
/home/ericj/lsrc/src/libexec/talkd/table.c /home/ericj/lsrc/src/libexec
/talkd/print.c
cc -O2     -c /home/ericj/lsrc/src/libexec/talkd/talkd.c
cc -O2     -c /home/ericj/lsrc/src/libexec/talkd/announce.c
cc -O2     -c /home/ericj/lsrc/src/libexec/talkd/process.c
cc -O2     -c /home/ericj/lsrc/src/libexec/talkd/table.c
cc -O2     -c /home/ericj/lsrc/src/libexec/talkd/print.c
cc   -o ntalkd talkd.o announce.o process.o table.o print.o
nroff -Tascii -mandoc /home/ericj/lsrc/src/libexec/talkd/talkd.8 &gt; talk
d.cat8
$ <b>sudo make install</b>
install -c -s -o root -g bin  -m 555 ntalkd /usr/libexec
install -c -o root -g bin -m 444 talkd.cat8 /usr/share/man/cat8/talkd.0
/usr/share/man/cat8/ntalkd.0 -&gt; /usr/share/man/cat8/talkd.0
</pre>
</div>
d1241 32
a1272 2
<p>
Once you have done that, you should restart that service.
d1562 1
a1562 1
<small>$OpenBSD: faq10.html,v 1.108 2004/10/29 17:26:01 nick Exp $</small>
@


1.108
log
@
Updates for 3.6
@
text
@d479 1
a479 1
     /etc/passwd         a Version 7 format password file
d1552 1
a1552 1
<small>$OpenBSD: faq10.html,v 1.107 2004/10/20 23:04:26 nick Exp $</small>
@


1.107
log
@
make "OpenBSD" logo on top of page a "click back" to the OpenBSD home page.
(about time!)
@
text
@d1144 1
a1144 1
To retrieve the source code for talkd(8) from <i>3.5-release</i> using
d1151 1
a1151 1
$ <b>cvs co -rOPENBSD_3_5_BASE src/libexec/talkd/</b>
d1552 1
a1552 1
<small>$OpenBSD: faq10.html,v 1.106 2004/10/20 22:01:49 nick Exp $</small>
@


1.106
log
@
Cleanup of #ftpchroot and #FTPOnly, mostly from Sam Smith, thanks!
@
text
@d16 3
a18 1
<img alt="[OpenBSD]" height=30 width=141 src="../images/smalltitle.gif">
d1552 1
a1552 1
<small>$OpenBSD: faq10.html,v 1.105 2004/09/08 03:57:47 nick Exp $</small>
@


1.105
log
@
"<tt>\n<a href ... " is NOT a good construct, as that '\n' turns into
a space, which looks silly there...
@
text
@d747 7
a753 12
add <i>/usr/bin/false</i> into <i>/etc/shells</i>. Then when you set a
users shell to /usr/bin/false, they will not be able log in
interactively, but will be able to use ftp capabilities.
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8">adduser(8)</a>
will give them a home dir by default of <i>/home/&lt;user&gt;</i>.
If this is what you desire it doesn't need to be changed, however you
can set this to whatever directory you wish. You can force this user to
only be able to see files in their home directory by adding their
username to <i>/etc/ftpchroot</i>.
Using the <b>-A</b> option to
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftpd(8)</a>,
you can allow only ftpchroot logins!
d1059 12
a1070 1
<h2>10.14 - Confining users to their home dir's in ftpd(8)</h2>
d1073 13
a1085 102
OpenBSD's
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftpd(8)</a> 
is setup by default to be able to handle this very easily. This is
accomplished via the file <strong>/etc/ftpchroot</strong>. Since users
cannot always be trusted, it might be necessary to restrain them to
their home directories. This behavior is NOT on by default.
Here is an example of what the default behavior is like.

<blockquote><pre>
$ <strong>ftp localhost</strong>
Connected to localhost.
220 oshibana FTP server (Version 6.4/OpenBSD) ready.
Name (localhost:ericj): <strong>ericj</strong>
331 Password required for ericj.
Password: <strong>*********</strong>
230- OpenBSD 3.5 (GENERIC) #34: Mon Mar 29 12:24:55 MST 2004
230- 
230- Welcome to OpenBSD: The proactively secure Unix-like operating system.
230- 
230- Please use the sendbug(1) utility to report bugs in the system.
230- Before reporting a bug, please try to reproduce it with the latest
230- version of the code.  With bug reports, please try to ensure that
230- enough information to reproduce the problem is enclosed, and if a
230- known fix for it exists, include that as well.
230- 
230 User ericj logged in.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&gt; <strong>cd /</strong>
250 CWD command successful.
ftp&gt; <strong>ls</strong>
227 Entering Passive Mode (127,0,0,1,60,7)
150 Opening ASCII mode data connection for 'file list'.
altroot
bin
dev
etc
home
mnt
root
sbin
stand
tmp
usr
var
bsd
sys
boot
226 Transfer complete.
ftp&gt; <strong>quit</strong>
221 Goodbye.
</pre></blockquote>

<p>
As you can see here, access is granted to the whole server. In a perfect
world this is ok, where all users can be trusted, but this isn't so. To
limit a user, simply add their name to the file
<strong>/etc/ftpchroot</strong>.
Here is an example showing user &quot;ericj&quot; being restricted.

<blockquote><pre>
$ <strong>cat /etc/ftpchroot</strong>
#       $ OpenBSD: ftpchroot,v 1.3 1996/07/18 12:12:47 deraadt Exp $
#
# list of users (one per line) given ftp access to a chrooted area.
# read by ftpd(8).
ericj
</pre></blockquote>

<p>
This is enough to keep the user &quot;ericj&quot; from escaping from his
own directory. As you can see in the next example. The / directory has
suddenly changed to his home dir!

<blockquote><pre>
$ <strong>ftp localhost</strong>
Connected to localhost.
220 oshibana FTP server (Version 6.4/OpenBSD) ready.
Name (localhost:ericj): <strong>ericj</strong>
331 Password required for ericj.
Password: <strong>*********</strong>
230 User ericj logged in.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&gt; <strong>cd /</strong>
250 CWD command successful.
ftp&gt; <strong>ls</strong>
227 Entering Passive Mode (127,0,0,1,92,171)
150 Opening ASCII mode data connection for 'file list'.
.login
.mailrc
.profile
.rhosts
.ssh
.cshrc
work
mail
src
226 Transfer complete.
ftp&gt; <strong>quit</strong>
221 Goodbye.
</pre></blockquote>
d1550 1
a1550 1
<small>$OpenBSD: faq10.html,v 1.104 2004/08/06 20:05:56 nick Exp $</small>
@


1.104
log
@
Sync w/reworked faq9.html
@
text
@d1415 2
a1416 2
some may not work properly in chroot(2), and many have issues on "<tt>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=apachectl&amp;sektion=8">apachectl</a>
d1633 1
a1633 1
<small>$OpenBSD: faq10.html,v 1.103 2004/05/19 20:27:48 saad Exp $</small>
@


1.103
log
@remove extra word. ok nick@@
@
text
@d20 1
a20 1
<a href= "faq9.html">[To Section 9 - Migrating from Linux]</a>
d1624 1
a1624 1
<a href= "faq9.html">[To Section 9 - Migrating from Linux]</a>
d1633 1
a1633 1
<small>$OpenBSD: faq10.html,v 1.102 2004/05/19 03:21:49 nick Exp $</small>
@


1.102
log
@
Improve info on chroot(2)ing Apache apps.
Funny, content improves when the author has actual real-life application.
@
text
@d1378 1
a1378 1
Put bluntly, chroot(2)ing Apache is something new, and and not done by
d1633 1
a1633 1
<small>$OpenBSD: faq10.html,v 1.101 2004/04/30 18:06:20 nick Exp $</small>
@


1.101
log
@
FAQ updates for OpenBSD 3.5
@
text
@d1378 4
a1381 2
Put bluntly, chroot(2)ing Apache is something new, and many older
applications and system configurations will not work as before.
a1415 1

d1435 101
d1633 1
a1633 1
<small>$OpenBSD: faq10.html,v 1.100 2004/03/25 02:41:51 jcs Exp $</small>
@


1.100
log
@remove absolute links pointing to www.openbsd.org and use local
files

ok nick
@
text
@d1082 1
a1082 1
230- OpenBSD 3.4 (GENERIC) #18: Wed Sep 17 03:34:47 MDT 2003
d1225 1
a1225 1
To retrieve the source code for talkd(8) from <i>3.4-release</i> using
d1232 1
a1232 1
$ <b>cvs co -rOPENBSD_3_4_BASE src/libexec/talkd/</b>
d1531 1
a1531 1
<small>$OpenBSD: faq10.html,v 1.99 2004/03/10 00:23:11 saad Exp $</small>
@


1.99
log
@link name changes. ok nick@@
@
text
@d1222 1
a1222 1
<a href="http://www.openbsd.org/anoncvs.html">Anonymous CVS page</a>.  
d1531 1
a1531 1
<small>$OpenBSD: faq10.html,v 1.98 2004/03/06 07:14:43 saad Exp $</small>
@


1.98
log
@fix wrapping and indentation. ok nick@@
@
text
@d1221 2
a1222 2
can get a listing of these servers at
<a href="http://www.openbsd.org/anoncvs.html">http://www.openbsd.org/anoncvs.html</a>.  
d1250 1
a1250 1
<a href="../plus.html">http://www.openbsd.org/plus.html</a>
d1531 1
a1531 1
<small>$OpenBSD: faq10.html,v 1.97 2004/02/29 20:45:59 saad Exp $</small>
@


1.97
log
@change link names for errata.html. easier to translate that way. ok nick@@
@
text
@d57 17
a73 12
Existing users must be added to
the <kbd>&quot;wheel&quot;</kbd> group by hand. This is done for security reasons, and you should be cautious with whom you give
access to. On OpenBSD, users who are in the <kbd>wheel</kbd> group are allowed to use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=su&amp;sektion=1">
su(1)</a> userland program to become root. Users who are not in <kbd>&quot;wheel&quot;</kbd> cannot use su(1). Here is
an example of a <kbd>/etc/group</kbd> entry to place the user <strong>ericj</strong> into the
<kbd>&quot;wheel&quot;</kbd> group.

<p>
If you are adding a new user with <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8">adduser(8)</a>,
you can put them in the wheel
group by answering wheel at "<tt>Invite <i>user</i> into other groups:</tt>".
This will add them to /etc/group, which will look something like this:
d80 4
a83 2
If you are looking for a way to allow users limited access to superuser privileges without putting them in the
<kbd>&quot;wheel&quot;</kbd> group, use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sudo&amp;sektion=8">sudo(8)</a>.
d90 5
a94 3
To duplicate your filesystem use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dump&amp;sektion=8">dump(8)</a> and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=restore&amp;sektion=8">restore(8)</a>. For example,
to duplicate everything under directory <kbd>SRC</kbd> to directory <kbd>DST</kbd>, do a:
d101 4
a104 3
dump is designed to give you plenty of backup capabilities, and it may be an overkill
if you just want to duplicate a part of a (or an entire) filesystem.
The command <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tar&amp;sektion=1">tar(1)</a>
d115 2
a116 1
<h2>10.3 - How do I start daemons with the system? (Overview of rc(8))</h2>
d119 3
a121 2
OpenBSD uses an <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc&amp;sektion=8">rc(8)</a> style
startup. This uses a few key files for startup.
d124 16
a139 12
	<li>/etc/rc - Main script. Should not be edited.
	<li>/etc/rc.conf - Configuration file used by <i>/etc/rc</i> to know what daemons should start with the
	system.
       <li>/etc/rc.conf.local - Configuration file you can use to override settings in /etc/rc.conf
           so you don't have to touch /etc/rc.conf itself, which is convenient for people who upgrade often.
	<li>/etc/netstart - Script used to initialize the network. Shouldn't be edited.
	<li>/etc/rc.local - Script used for local administration. This is where new daemons or host specific
	information should be stored.
	<li>/etc/rc.securelevel - Script which runs commands that must be run before the security level
	changes. See <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=init&amp;sektion=8">init(8)</a>
	<li>/etc/rc.shutdown - Script run on shutdown. Put anything you want done before shutdown in this file.
	See <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.shutdown&amp;sektion=8">rc.shutdown(8)</a>
d145 4
a148 3
The main files a system administrator should concentrate on are <i>/etc/rc.conf</i>
(or <i>/etc/rc.conf.local</i>), <i>/etc/rc.local</i> and
<i>/etc/rc.shutdown</i>. To get a look of how the rc(8) procedure works, here is the flow:
d153 15
a167 14
       <li>Filesystems are checked. This will be bypassed if the file /etc/fastboot exists. This is
	certainly not a good idea though.
       <li>Configuration variables are read in from <i>/etc/rc.conf</i> and, afterwards, <i>/etc/rc.conf.local</i>.
           Settings in rc.conf.local will override those in rc.conf.
	<li>Filesystems are mounted
	<li>Clears out <i>/tmp</i> and preserves any editor files
	<li>Configures the network via <i>/etc/netstart</i>
		<ul>
		<li>Configures your interfaces up.
		<li>Sets your hostname, domainname, etc.
		</ul>
	<li>Starts system daemons
       <li>Performs various other checks (quotas, savecore, etc)
       <li>Local daemons are run, via <i>/etc/rc.local</i>
d173 6
a178 4
Most daemons and services that come with OpenBSD by default can be started on boot by simply editing the
<i>/etc/rc.conf</i> configuration file. To start out take a look at the default 
<a href="http://www.openbsd.org/cgi-bin/cvsweb/src/etc/rc.conf">/etc/rc.conf</a> file. You'll see lines similar
to this:
d185 9
a193 5
A line like this shows that ftpd is not to start up with the system (at least not via rc(8), read the
<a href="faq10.html#AnonFTP">Anonymous FTP FAQ</a> to read more about this). In any case, each line has a
comment showing you the flags for <b>NORMAL</b> usage of that daemon or service. This doesn't mean that you
must run that daemon or service with those flags. You can always use man(1) to see how you can have that
daemon or service start up in any way you like. For example, here is the default line pertaining to httpd(8).
d200 3
a202 2
Here you can obviously see that starting up httpd normally no flags are necessary. So a line like: &quot;<b>
httpd_flags=""</b>&quot; would be necessary. But to start httpd with ssl enabled. (Refer to the 
d207 5
a211 5
A good approach is to never touch <i>/etc/rc.conf</i> itself.
Instead, create the file <i>/etc/rc.conf.local</i>, copy just the
lines you are about to change from <i>/etc/rc.conf</i> and adjust them
as you like.  This may make future upgrading easier -- all the changes
are in the one file.
d216 5
a220 3
For other daemons that you might install with the system via ports or other ways, you should use the
<i>/etc/rc.local</i> file. For example, I've installed a daemon which lies at /usr/local/sbin/daemonx. I
want this to start at boot time. I would put an entry into <i>/etc/rc.local</i> like this:
d229 2
a230 2
(If the daemon does not automatically detach on startup, remember to
add a "&amp;" at the end of the command line.)
d233 3
a235 2
From now on, this daemon will be run at boot. You will be able to see any errors on boot, a normal boot with no
errors would show a line like this:
d244 4
a247 3
<i>/etc/rc.shutdown</i> is a script that is run at shutdown. Anything you want done before the system shuts down
should be added to this file. If you have apm, you can also set &quot;powerdown=YES&quot;. Which will give you
the equivalent of &quot;shutdown -p&quot;.
d251 2
a252 1
<h2>10.4 - Why do users get "relaying denied" when they are remotely sending mail through my OpenBSD system?</h2>
d269 1
a269 1
If this file doesn't exist, create it.  You will need to enter the hosts
d279 2
a280 2
Don't forget send a 'HangUP' signal to sendmail, (a signal which
causes most daemons to re-read their configuration file):
d299 2
a300 1
<h2>10.5 - I've set up POP, but users have trouble accessing mail through POP. What can I do?</h2>
d303 2
a304 2
Most issues dealing with POP are problems with temporary files and lock files.
If your pop server sends an error message such as:
d323 4
a326 3
Another thing to check is that the user actually owns their own /var/mail file.
Of course this should be the case (as in, /var/mail/joe should be owned by joe)
but if it isn't set correctly it could be the problem!
d329 5
a333 6
Of course, making /var/mail writable by group mail opens up some vague and
obscure security problems.  It is likely that you will never have problems
with it.  But it could (especially if you are a high profile site, ISP,...)!
There are several POP servers you can install right away from the ports
collection.
If possible, use 
d335 1
a335 2
which is available in the OpenBSD base
install.
d342 3
a344 1
<b>PS:</b> Notice, OpenBSD does not have a group name of &quot;mail&quot;. You need to create this in your <i>/etc/group</i> file if you need it. An entry like:
d357 3
a359 3
By default, Sendmail uses DNS for name resolution, not the 
<tt>/etc/hosts</tt> file.  The behavior can be changed through the use of the 
<tt>/etc/mail/service.switch</tt> file. 
d362 3
a364 2
If you wish to query the hosts file before DNS servers, create a 
<tt>/etc/mail/service.switch</tt> file which contains the following line:
d393 1
a393 2
OpenBSD ships with an SSL-ready httpd and RSA libraries.
For use with 
d395 1
a395 1
you must first have a certificate created. This will be kept in 
d397 1
a397 1
The steps shown here are taken in part from the 
d399 4
a402 3
man page. Refer to it for further information. This FAQ entry only outlines 
how to create an RSA certificate for web servers, not a DSA server 
certificate. To find out how to do so, please refer to the 
d407 2
a408 1
To start off, you need to create your server key and certificate using OpenSSL:
d438 3
a440 2
This <i>server.csr</i> file can then be given to Certifying Authority who will
sign the key. One such CA is <b>Thawte Certification</b> which you can reach at
d444 2
a445 1
If you cannot afford this, or just want to sign the certificate yourself, you can use the following.
d455 6
a460 3
With <i>/etc/ssl/server.crt</i> and <i>/etc/ssl/private/server.key</i> in place, you
should be able to start <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&amp;sektion=8">httpd(8)</a> with the <b>-DSSL</b> flag (see the <a href="#rc">section about rc(8)</a> in this faq), enabling https
transactions with your machine on port 443.
d464 2
a465 1
<h2>10.8 - I edited /etc/passwd, but the changes didn't seem to take place. Why?</h2>
d468 5
a472 3
If you edit <i>/etc/passwd</i> directly, your changes will be lost. OpenBSD 
generates <i>/etc/passwd</i> dynamically with <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pwd_mkdb&amp;sektion=8">pwd_mkdb(8)</a>. The main password
file in OpenBSD is <i>/etc/master.passwd</i>. According to pwd_mkdb(8),
d487 5
a491 5
system (and is a prime target for programs such as Crack).  4.4BSD
introduced the master.passwd file, which has an extended format (with
additional options beyond those provided by /etc/passwd) and is only
readable by root.  For faster access to data, the library calls which
access this data normally read /etc/pwd.db and /etc/spwd.db.
d494 7
a500 6
OpenBSD does come with a tool with which you should edit your password file.
It is called vipw(8).  Vipw will use vi (or your favourite editor defined
per $EDITOR) to edit /etc/master.passwd.  After you are done editing, it will
re-create /etc/passwd, /etc/pwd.db, and /etc/spwd.db as per your changes.
Vipw also takes care of locking these files, so that if anyone else attempts
to change them at the same time, they will be denied access.
d524 7
a530 9
adduser(8) allows for
consistency checks on <i>/etc/passwd</i>, <i>/etc/group</i>, and shell
databases. It will create the entries and $HOME directories for you. It
can even send a message to the user welcoming them. 
Here is an example user, <b>testuser</b>, being added
to a system.
He/she will be given the $HOME directory <i>/home/testuser</i>,
made a member of the group <b>guest</b>, and
given the shell <i>/bin/ksh</i>.
d651 4
a654 3
go to the group <b>guest</b>, not <b>users</b>. One more little hurdle
with adding users, is that passwords must be specified on the
commandline. This is, the encrypted passwords, so you must first use the
d657 3
a659 2
default use the Blowfish algorithm for 6 rounds. Here is an example line
to create an encrypted password to specify to useradd(8).
d679 3
a681 3
as the shell will interpret these before sending it to
user(8). In addition to that, make sure you specify the <b>-m</b> option
if you want the user's home directory created and the files from
d747 12
a758 8
add <i>/usr/bin/false</i> into <i>/etc/shells</i>. Then when you
set a users shell to /usr/bin/false, they will not be able log in
interactively, but will be able to use ftp capabilities. <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8">adduser(8)</a>
will give them a home dir by default of <i>/home/&lt;user&gt;</i>. If this is what you
desire it doesn't need to be changed, however you can set this to whatever
directory you wish.  You can force this user to only be able to
see files in their home directory by adding their username to <i>/etc/ftpchroot</i>.
Using the <b>-A</b> option to <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftpd(8)</a>, you can allow only ftpchroot logins!
d767 1
a767 1
limited resources.  Quotas can be set by user and/or by group.
d771 3
a773 3
QUOTA</tt>" is in your <a href="faq5.html#Options">Kernel Configuration</a>.
This option is in the
GENERIC kernel. After this, you need to mark in 
d775 10
a784 10
the filesystems which will have quotas enabled. The keywords
<tt>userquota</tt> and <tt>groupquota</tt> should be used
to mark each filesystem that you will be using quotas on. By default, the files
<tt>quota.user</tt> and <tt>quota.group</tt> will be
created at the root of that filesystem to hold the quota information. This
default can be overridden by specifying the file name with the
quota option in <tt>/etc/fstab</tt>, such as
"<tt>userquota=/var/quotas/quota.user</tt>".  Here is an example
<tt>/etc/fstab</tt> that has one filesystem with userquotas enabled, and
the quota file in a non-standard location:
d807 1
a807 1
	inodes in use: 25, limits (soft = 0, hard = 0)
d816 1
a816 1
	inodes in use: 25, limits (soft = 0, hard = 0)
d830 3
a832 2
Now that the quotas are set, you need to turn the quotas on. To do
this use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=quotaon&amp;sektion=8">quotaon(8)</a>.
d840 3
a842 2
This will go through <tt>/etc/fstab</tt> to turn on the filesystems with quota
options. Now that quotas are up and running, you can view them using
d862 2
a863 2
By default quotas set in <tt>/etc/fstab</tt> will be started on boot. To turn them
off use
d874 2
a875 1
OpenBSD includes KerberosV as a pre-installed component of the default system.
d878 2
a879 1
For more information on KerberosV, from your OpenBSD system, use the command:
d890 3
a892 2
Anonymous FTP allows users without accounts to access files on your computer via the File Transfer Protocol. This
will give an overview of setting up the anonymous FTP server, and its logging, etc. 
d897 17
a913 10
To start off, you need to have an account on your system of "ftp". This account shouldn't have a usable
password.  Here we will set the login directory to /home/ftp, but
you can put it wherever you want. When using anonymous ftp, the ftp daemon will
chroot itself to the home directory of the 'ftp' user. To read up more on that, read the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftp(8)</a> and 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=chroot&amp;sektion=2">chroot(2)</a> man pages. Here
is an example of adding the <i>ftp</i> user. I will do this using <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8">adduser(8)</a>.
We also need to add /usr/bin/false to our <i>/etc/shells</i>, this is the &quot;shell&quot; that we will be giving to
the ftp user. This won't allow them to login, even though we will give them an empty password. To do this you
can simply <i>echo /usr/bin/false &gt;&gt; /etc/shells</i>. Also if you wish for that shell to show up during the adduser
questions, you need to modify <i>/etc/adduser.conf</i>.
d957 3
a959 2
Along with the user, this created the directory <i>/home/ftp</i>. This is what we want, but there are some
changes that we will have to make to get it ready for anonymous ftp. Again these changes are explained in the
d963 2
a964 1
You <b>do not</b> need to make a /home/ftp/usr or /home/ftp/bin directory.
d966 12
a977 6
<li><i>/home/ftp</i> - This is the main directory. It should be owned by root and have permissions of 555.
<li><i>/home/ftp/etc</i> - This is entirely optional and not recommended, as it only serves to give out information on users which exist on your box.  If you want your anonymous ftp directory to appear to have real users attached to your files, you should copy /etc/pwd.db and /etc/group to this
directory. This directory should be mode 511, and the two files should be mode 444. These are used to give owner
names as opposed to numbers. There are no passwords stored in pwd.db, they are all in spwd.db, so don't copy that over.
<li><i>/home/ftp/pub</i> - This is a standard directory to place files in which you wish to share. This directory should
also be mode 555.
d981 2
a982 2
Note that all these directories should be owned by ''root''. Here is a listing of what the directories should
look like after their creation.
d1010 5
a1014 3
With ftpd you can choose to either run it from inetd or the rc scripts can kick it off. These examples will show
our daemon being started from <a href="http://www.openbsd.org/cgi-bin/cvsweb/src/etc/inetd.conf">inetd.conf</a>.
First we must become familiar with some of the options to ftpd. The default line from <i>/etc/inetd.conf</i> is:
d1021 8
a1028 5
Here ftpd is invoked with <i>-US</i>. This will log anonymous connections to <i>/var/log/ftpd</i> and concurrent
sessions to <i>/var/run/utmp</i>. That will allow for these sessions to be seen via who(1). For some, you might
want to run only an anonymous server, and disallow ftp for users. To do so you should invoke ftpd with the
<i>-A</i> option. Here is a line that starts ftpd up for anonymous connections only. It also uses <i>-ll</i>
which logs each connection to syslog, along with the get, retrieve, etc, ftp commands.
d1035 6
a1040 4
Note - For people using HIGH traffic ftp servers, you might want to not invoke ftpd from inetd.conf. The best
option is to comment the ftpd line from inetd.conf and start ftpd from rc.conf along with the <i>-D</i> option.
This will start ftpd as a daemon, and has much less overhead as starting it from inetd. Here is an example line
to start it from rc.conf.
d1053 6
a1058 3
<li><i>/etc/ftpwelcome</i> - This holds the Welcome message for people once they have connected to your ftp server.
<li><i>/etc/motd</i> - This holds the message for people once they have successfully logged into your ftp server.
<li><i>.message</i> - This file can be placed in any directory. It will be shown once a user enters that directory.
d1067 2
a1068 1
OpenBSD's <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&amp;sektion=8">ftpd(8)</a> 
d1071 3
a1073 3
cannot always be trusted, it might be necessary to restrain them to their
home directories. This behavior is NOT on by default. Here is an example
of what the default behavior is like.
d1124 2
a1125 2
<strong>/etc/ftpchroot</strong>. Here is an example showing user
&quot;ericj&quot; being restricted.
d1175 7
a1181 7
The OpenBSD source tree is constantly changing and improving, 
along with this fixes to common problems are often made and patches
released to the public. These patches appear on the
<a href="../errata.html">errata web page</a>,
and are separated into categories. These categories correspond to patches
that should be applied to different architectures or architecture independent
patches.
d1184 1
a1184 1
Note, however, that patches aren't made for new additions to OpenBSD, 
d1208 8
a1215 7
are text files that hold differences to the original source code. They are
<b>NOT</b> distributed in binary form. This means that to patch your system
you must have the source code from the <b>RELEASE</b> version of OpenBSD
readily available. This does not mean that you must have ALL source code
to the OpenBSD operating system to patch your system, but must have all
code for the program which you are patching. For instance, if you are 
patching the kernel you must have all source for the kernel on hand.
d1219 4
a1222 3
is a very handy tool that can be used to grab only the source that you need 
via any of the anonymous cvs servers located around the world. You can get a 
listing of these servers at <a href="http://www.openbsd.org/anoncvs.html">http://www.openbsd.org/anoncvs.html</a>.  
d1226 2
a1227 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&amp;sektion=1">cvs(1)</a>, you would use
the following lines: 
d1241 19
a1259 5
To find the CVS path to the code that you need, you can find this in the patch on the <i>Index:</i> line.
In this case, the CVS path was <i>src/libexec/talkd/</i>. Always check out the revision of OPENBSD_version_number_BASE. Without &quot;_BASE&quot; you will be checking out the stable branch, which might contain other changes that will interfere. If you are already tracking the patch branch, the patches should already be in that source, however you should always check and make sure. You can always look at <a href="../plus.html">http://www.openbsd.org/plus.html</a> to see which patches have been applied to the patch branch. If the patches haven't been applied yet, you will need to grab the latest release source using the commands above.

<p>
Also, for those users that bought official OpenBSD CDs, you can get the source code directly off of the CD. Refer to the CD insert on how to extract the source from the CD. In which case you won't need to obtain the source via anoncvs.
d1287 2
a1288 1
Once you've obtained the proper sources, you can obtain the patch and place it in <i>src/</i>
d1354 1
a1354 1
by default.  While this is a tremendous boost to security, it can create
d1364 10
a1373 9
"<tt>/</tt>" (root) directory.  In the case of httpd(8), the program
starts, opens its log files, binds to its TCP ports (though, it doesn't
accept data yet), and reads its configuration.  Next, it locks itself
into <i>/var/www</i> and drops privileges, then starts to accept
requests.  This means all files served and used by Apache must be in
the <i>/var/www</i> directory.  This helps security tremendously -- 
should there be a security issue with Apache, the damage will be
confined to a single directory with only "read only" permissions and no
resources to cause mischief with.
d1379 1
a1379 1
applications and system configurations will not work as before. 
d1383 14
a1396 15
versions of OpenBSD may have web files located in user's 
directories, which clearly won't work in a chroot(2)ed environment, as
httpd(8) can't reach the <i>/home</i> directory.  Administrators may
also discover their existing /var/www partition is too small to hold
all web files.  Your options are to restructure or do not use the
chroot(2) feature.  You can, of course, use symbolic links
in the user's home directories pointing to subdirectories in
<i>/var/www</i>, but you can NOT use links in <i>/var/www</i> pointing
to other part of the file system -- that is prevented from working by
the chroot(2)ing.  Note that if you want your users to have <a
href="faq10.html#ftpchroot">chroot(2)ed FTP access</a>, this will not
work, as the FTP chroot will (again) prevent you from accessing the
targets of the symbolic links.  A solution to this is to not use
<i>/home</i> as your home directories for these users, rather use
something similar to <i>/var/www/home</i>.
d1398 1
a1398 1
<li><b>Log Rotation:</b>  Normally, logs are rotated by renaming the old
d1400 1
a1400 1
its old log files and open new ones.  This is no longer possible, as
d1402 1
a1402 1
dropped.  httpd(8) must be stopped and restarted:
d1410 1
a1410 2
and using an external log rotator at the other end of the
pipe(2).
d1413 3
a1415 2
some may not work properly in chroot(2), and many have issues on
"<tt><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=apachectl&amp;sektion=8">apachectl</a>
d1418 2
a1419 2
<li><b>Existing CGIs:</b> Most will NOT work as is.  They may need
programs or libraries outside <i>/var/www</i>.  Some can be fixed by
d1422 4
a1425 4
directory with the files required by the application, though this is
non-trivial and requires considerable programming knowledge -- most
users will find it easier to just disable the chroot(2) feature until
they are updated.
d1430 2
a1431 2
within the chroot.  In other cases, you will simply have to disable this
feature using the <tt>-u</tt> option for httpd(8) in 
d1443 1
a1443 1
unfamiliar, and ask if and how they can change it.  There are a few
d1447 1
a1447 1
<li><b>Don't login as <i>root!</i></b>  Between 
d1464 1
a1464 1
to access libraries located in the <tt>/usr</tt> partition.  This isn't
d1478 1
a1478 1
there is no reason not to in OpenBSD.  But again, this shouldn't be an
d1493 1
a1493 1
very familiar.  Ksh(1) provides most of the commonly used features in
d1496 1
a1496 1
command line.  If other features of <i>bash</i> are desired, <i>bash</i>
d1503 1
a1503 1
<tt>PS1</tt> variable.  For example, inserting the following line:
d1531 1
a1531 1
<small>$OpenBSD: faq10.html,v 1.96 2004/01/01 04:13:34 nick Exp $</small>
@


1.96
log
@
bump copyright to 2004
@
text
@d1099 2
a1100 2
released to the public. These patches appear on the errata web page
located at <a href="../errata.html">http://www.openbsd.org/errata.html</a>, 
d1114 2
a1115 2
with a security fix from the patch obtained from 
<a href="../errata.html">errata.html</a>.
d1120 2
a1121 1
All patches posted at <a href="../errata.html">http://www.openbsd.org/errata.html</a> are patches
d1436 1
a1436 1
<small>$OpenBSD: faq10.html,v 1.95 2003/10/30 22:43:42 nick Exp $</small>
@


1.95
log
@
FAQ updates for OpenBSD 3.4.  Lots of help from lots of people, but
special thanks to Tom Cosgrove who provided many improvements and
proofreading.
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2003 by OpenBSD.">
d1435 1
a1435 1
<small>$OpenBSD: faq10.html,v 1.94 2003/10/26 16:58:20 nick Exp $</small>
@


1.94
log
@
Fact improvement.  RSA is no longer patent restricted, DSA info is not
overly interesting any more.  Verified with Henning@@
@
text
@d1004 1
a1004 1
230- OpenBSD 3.3 (GENERIC) #44: Sat Mar 29 13:22:05 MST 2003
d1144 1
a1144 1
To retrieve the source code for talkd(8) from <i>3.3-release</i> using
d1151 1
a1151 1
$ <b>cvs co -rOPENBSD_3_3_BASE src/libexec/talkd/</b>
a1251 1
<!-- XXXchanges - stops being new with 3.3 -->
d1254 1
a1254 1
Since OpenBSD 3.2, the Apache 
d1435 1
a1435 1
<small>$OpenBSD: faq10.html,v 1.93 2003/10/26 02:05:59 nick Exp $</small>
@


1.93
log
@
Wrap some really long lines which bother both my browser/printer and
seemingly, the PDF generation, forcing them to a smaller font.  Similar
wrap was done on my previous faq14.html commit for same reason.
@
text
@d406 1
a406 2
<a href="http://www.thawte.com/">http://www.thawte.com/</a>. Thawte can currently sign RSA keys for you. A
procedure is being worked out to allow for DSA keys.
d1436 1
a1436 1
<small>$OpenBSD: faq10.html,v 1.92 2003/10/19 23:14:22 nick Exp $</small>
@


1.92
log
@
Sync with reality, clean up html (<strong> -> <b>) from Tom Cosgrove,
squash some tabs while in the neighborhood...
@
text
@d547 2
a548 1
testuser:$2a$07$ZWnBOsbqMJ.ducQBfsTKUe3PL97Ve1AHWJ0A4uLamniLNXLeYrEie:1002:31::0:0:Test FAQ User:/home/testuser:/bin/ksh
d1147 1
a1147 1
the following line: 
d1151 2
a1152 1
$ <b>cvs -d anoncvs@@anoncvs5.usa.openbsd.org:/cvs co -rOPENBSD_3_3_BASE src/libexec/talkd/</b>
d1228 4
a1231 1
mkdep -a /home/ericj/lsrc/src/libexec/talkd/talkd.c /home/ericj/lsrc/src/libexec/talkd/announce.c /home/ericj/lsrc/src/libexec/talkd/process.c /home/ericj/lsrc/src/libexec/talkd/table.c /home/ericj/lsrc/src/libexec/talkd/print.c
d1238 2
a1239 1
nroff -Tascii -mandoc /home/ericj/lsrc/src/libexec/talkd/talkd.8 &gt; talkd.cat8
d1437 1
a1437 1
<small>$OpenBSD: faq10.html,v 1.91 2003/06/17 15:59:07 nick Exp $</small>
@


1.91
log
@
Ambiguity spotted by Keith Randall (randallk at cpsc dot ucalgary dot ca),
forwarded by david@@, and another spotted by me.  More work will be done
here...
@
text
@d486 5
a490 4
Here is an example user, <b>testuser</b> being added
to a system. His/Her $HOME directory will be placed in
<i>/home/testuser</i>, and given the group <b>guest</b>, and the shell
<i>/bin/ksh</i>.
d497 1
d503 22
a524 19
Enter username [a-z0-9_]: <strong>testuser</strong>
Enter full name []: <strong>Test FAQ User</strong>
Enter shell csh ksh nologin sh [ksh]: <strong>ksh</strong>
Uid [1002]: <strong>&lt;Enter&gt;</strong>
Login group testuser [testuser]: <strong>guest</strong>
Login group is ``guest''. Invite testuser into other groups: guest no
[no]: <strong>no</strong>
Enter password []: 
Enter password again []:

Name:     testuser
Password: ****
Fullname: Test FAQ User
Uid:      1002
Gid:      31 (guest)
Groups:   guest
HOME:     /home/testuser
Shell:    /bin/ksh
OK? (y/n) [y]: <strong>y</strong>
d526 2
a527 2
Copy files from /usr/share/skel to /home/testuser
Add another user? (y/n) [y]: <strong>n</strong>
d858 1
a858 1
Use option ``-silent'' if you don't want see all warnings and questions.
d861 1
d867 22
a888 19
Enter username [a-z0-9_]: <strong>ftp</strong>
Enter full name []: <strong>anonymous ftp</strong>
Enter shell csh false ksh nologin sh tcsh zsh [sh]: <strong>false</strong>
Uid [1002]:
Login group ftp [ftp]:
Login group is ``ftp''. Invite ftp into other groups: guest no
[no]: <strong>no</strong>
Enter password []:
Set the password so that user cannot logon? (y/n) [n]: <strong>y</strong>

Name:     ftp
Password: ****
Fullname: anonymous ftp
Uid:      1002
Gid:      1002 (ftp)
Groups:   ftp
HOME:     /home/ftp
Shell:    /usr/bin/false
OK? (y/n) [y]: <strong>y</strong>
d890 2
a891 2
Copy files from /usr/share/skel to /home/ftp
Add another user? (y/n) [y]: <strong>n</strong>
d1431 1
a1431 1
<small>$OpenBSD: faq10.html,v 1.90 2003/06/17 15:36:55 nick Exp $</small>
@


1.90
log
@
Removal of old <a name="10.x"></a> tags, wrapping of #AddDelUser.
No words nor presentation should have changed in this diff, though
some whitespace was highly inconvenienced.
@
text
@d472 4
d480 3
a482 4
script. You can configure this to work however you like by editing
<i>/etc/adduser.conf</i>. You can add users by hand via
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vipw&amp;sektion=8">vipw(8)</a>,
but this is the recommended way to add users. adduser(8) allows for
d485 2
a486 2
can even send a message to the user welcoming them. This can be changed
to meet your needs. Here is an example user, <b>testuser</b> being added
d628 4
a631 2
<b>Note:</b> Make sure to use '' around the password string, not
&quot;&quot; as the shell will interpret these before sending it to
d1422 1
a1422 1
<small>$OpenBSD: faq10.html,v 1.89 2003/05/05 03:49:58 david Exp $</small>
@


1.89
log
@typo: /etc/profile, not /etc/.profile
reported by Jochem Kossen <j.kossen@@home.nl>
ok nick@@
@
text
@a53 1
<a name= "10.1"></a>
a79 1
<a name= "10.2"></a>
a104 1
<a name="10.3"></a>
a221 1
<a name="10.4"></a>
a268 1
<a name="10.5"></a>
a356 1
<a name="10.6"></a>
a425 1
<a name="10.7"></a>
a461 1
<a name="10.8"></a>
d468 2
a469 2
	<li><a href="#adduser">adduser(8)</a>
	<li><a href="#user">user(8)</a>
d477 10
a486 8
<i>/etc/adduser.conf</i>. You can add users by hand via <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vipw&amp;sektion=8">vipw(8)</a>, but this is
the recommended way to add users. adduser(8) allows for consistency checks
on <i>/etc/passwd</i>, <i>/etc/group</i>, and shell
databases. It will create the entries and $HOME directories for you. It can
even send a message to the user welcoming them. This can be changed to
meet your needs. Here is an example user, <b>testuser</b> being added to a
system. His/Her $HOME directory will be placed in <i>/home/testuser</i>, 
and given the group <b>guest</b>, and the shell <i>/bin/ksh</i>.
d524 2
a525 1
To delete users you should use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rmuser&amp;sektion=8">rmuser(8)</a>
d527 6
a532 3
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crontab&amp;sektion=1">crontab(1)</a> entries, their $HOME dir (if it is owned by the user), and their mail.
Of course it will also remove their <i>/etc/passwd</i> and <i>/etc/group</i>
entries. Next is an example of removing the user that was added above. Notice you are prompted for the name, and whether or not to remove the users home directory.
d559 10
a568 10
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&amp;sektion=8">group(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupadd&amp;sektion=8">groupadd(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupdel&amp;sektion=8">groupdel(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupinfo&amp;sektion=8">groupinfo(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupmod&amp;sektion=8">groupmod(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=user&amp;sektion=8">user(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=useradd&amp;sektion=8">useradd(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=userdel&amp;sektion=8">userdel(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=userinfo&amp;sektion=8">userinfo(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=usermod&amp;sektion=8">usermod(8)</a>
d574 6
a579 1
Being that user(8) is not interactive, the easiest way to add users efficiently is to use the adduser(8) command. The actual command <i>/usr/sbin/user</i> is just a frontend to the rest of the <i>/usr/sbin/user*</i> commands. Therefore, the following commands can be added by using <b>user add</b> or <b>useradd</b>, its your choice as to what you want, and doesn't change the use of the commands at all.
d582 5
a586 1
In this example, we are adding the same user with the same specifications as the user that was added <a href="#adduser">above</a>. useradd(8) is much easier to use if you know the default setting before adding a user. These settings are located in <i>/etc/usermgmt.conf</i> and can be viewed by doing so:
d600 9
a608 1
The above settings are what will be set unless you specify different with command line options. For example, in our case, we want the user to go to the group <b>guest</b>, not <b>users</b>. One more little hurdle with adding users, is that passwords must be specified on the commandline. This is, the encrypted passwords, so you must first use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=encrypt&amp;sektion=1">encrypt(1)</a> utility to create the password. For example: OpenBSD's passwords by default use the Blowfish algorithm for 6 rounds. Here is an example line to create an encrypted password to specify to useradd(8).
d625 5
a629 1
<b>Note:</b> Make sure to use '' around the password string, not &quot;&quot; as the shell will interpret these before sending it to user(8). In addition to that, make sure you specify the <b>-m</b> option if you want the user's home directory created and the files from <i>/etc/skel</i> copied over.
d632 3
a634 1
To see that the user was created correctly, we can use many different utilities. Below are a few commands you can use to quickly check that everything was created correctly.
d654 2
a655 1
In addition to these commands, user(8) provides its own utility to show user characteristics, called userinfo(8).
d674 3
a676 1
To remove users with the user(8) hierarchy of commands, you will use userdel(8). This is a very simple, yet usable command. To remove the user created in the last example, simply:
d683 4
a686 1
Notice the <b>-r</b> option, which must be specified if you want the users home directory to be deleted as well. Alternatively, you can specify <b>-p</b> and not <b>-r</b> and this will lock the user's account, but not remove any information.
a689 1
<a name="10.9"></a>
a704 1
<a name="10.10"></a>
a811 1
<a name="10.11"></a>
a825 1
<a name="10.12"></a>
a972 1
<a name="10.13"></a>
a1079 1
<a name="10.14"></a>
d1417 1
a1417 1
<small>$OpenBSD: faq10.html,v 1.88 2003/05/01 01:47:41 nick Exp $</small>
@


1.88
log
@
Updated FAQ for OpenBSD 3.3.
@
text
@d1374 1
a1374 1
in your <tt>/etc/.profile</tt> produces the following command prompt:
d1396 1
a1396 1
<small>$OpenBSD: faq10.html,v 1.87 2003/04/10 19:01:31 nick Exp $</small>
@


1.87
log
@
More improvements and fixes from Tom Cosgrove, thanks!
@
text
@d41 1
a41 1
<li><a href="#Kerberos"      >10.12 - Setting up KerberosIV Client/Server</a>
d226 1
a226 1
<h2>10.4 - Why do users get relaying access denied when they are remotely sending mail through my OpenBSD system?</h2>
d788 1
a788 1
<h2>10.12 - How to Setup KerberosIV Clients and Servers under OpenBSD</h2>
d791 1
a791 4
As a user/administrator of OpenBSD systems, you are fortunate that
KerberosIV is a pre-installed component of the default system. Here is
a guide to setting up both the Kerberos realm server, as well as a
client.
d794 1
a794 110
An *EXTREMELY* important point to remember is that Kerberos clients
and servers must have their system clocks synchronized. If there is
more than a 5 minute time skew, you will receive weird errors that
do not immediately reveal themselves to be caused by time skew, such as:

<blockquote><pre>
kinit: Can't send request (send_to_kdc) 
</pre></blockquote>

Another more accurate error is:

<blockquote><pre>
kauth: Time is out of bounds (krb_rd_req) 
</pre></blockquote>

<p>
An easy way to synchronize system clocks is with ntpd, available in the ports tree at
<strong>/usr/ports/net/ntp/</strong>.

<p>
This FAQ entry assumes you have prior knowledge of the Kerberos concepts.
For a great, easy to understand, reference, see:

<ul>
<li><a href="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kerberos.html">The FreeBSD handbook</a>
<li>Use the command <strong>info kth-krb</strong>
<li><a href="http://web.mit.edu/kerberos/www/dialogue.html">Designing an Authentication System: a Dialogue in Four Scenes</a>
<li><a href="http://web.mit.edu/kerberos/www/papers.html#krb4">Papers and Documentation Describing KerberosIV</a>
</ul>
Or the book
<ul>
<li><a href="http://www.amazon.com/exec/obidos/ASIN/0130614661/qid%3D930594963/">Network Security Private Communication in a Public World [Kaufman, Perlman, Speciner, 1995]</a>
</ul>

<h3>How to setup the Kerberos IV REALM and SERVER</h3>

<p>
We will be setting up the CIARASYSTEMS.COM realm, with avalanche.ciarasystems.com as the main server.

<p>
To start off, we will need to edit our configuration files. These files are located at <tt>/etc/kerberosIV/</tt>.
The two files we are concerned about are <i>krb.realms</i> and <i>krb.conf</i>. Let's start off with <i>krb.conf</i>.

<blockquote><pre>
# <strong>cat krb.conf</strong>
CIARASYSTEMS.COM
CIARASYSTEMS.COM avalanche.ciarasystems.com admin server
</pre></blockquote>

<p>
As you can see, this tells kerberos that the domain is CIARASYSTEMS.COM (or logical realm) and that
within that domain, avalanche is the administration server. Next we will look at <i>krb.realms</i>. For more information
on this refer to <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=krb.conf&amp;sektion=5">krb.conf(5)</a>.

<blockquote><pre>
# <strong>cat krb.realms</strong>
avalanche.ciarasystems.com      CIARASYSTEMS.COM
.ciarasystems.com               CIARASYSTEMS.COM
</pre></blockquote>

<p>
krb.realms provides a translation from a hostname to the Kerberos realm name for the services provided by that host.
Each line of the translation file is in one of the following forms (domain_name should be  of  the  form  .XXX.YYY).
So in this example, avalanche is the hostname of a computer on the CIARASYSTEMS.COM realm. And
.ciarasystems.com is the domain name on the realm CIARASYSTEMS.COM. Again, for further information read
the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=krb.realms&amp;sektion=5">krb.realms(5)</a>. man page.

<p>
Next we will run <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kdb_init&amp;sektion=8">kdb_init(8)</a> 
to create the initial Kerberos database.

<blockquote><pre>
# <strong>kdb_init</strong>
Realm name [default  NO.DEFAULT.REALM ]: CIARASYSTEMS.COM
You will be prompted for the database Master Password.
It is important that you NOT FORGET this password.

Enter Kerberos master password: <strong>not shown</strong>
Verifying password -
Enter Kerberos master password:
</pre></blockquote>

<p>
Next we need to use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kstash&amp;sektion=8">kstash(8)</a> 
which is used to save the Kerberos key distribution center (KDC) database master key in the master key cache file.

<blockquote>
<pre>
# <strong>kstash</strong>
Enter Kerberos master password:

Current Kerberos master key version is 1.

Master key entered.  BEWARE!
Wrote master key to /etc/kerberosIV/master_key
</pre>

This saves the encrypted master password in /etc/kerberosIV/master_key.

<p>
Next, we need two principals to be added to the database for each
system that will be secured with Kerberos. Their names are
<i>kpasswd</i> and <i>rcmd</i>. These two principals are made for
each system, with the instance being the name of the individual system. 

These daemons, <i>kpasswd</i> and <i>rcmd</i> allow other systems
to change Kerberospasswords and run commands like <i>rcp, rlogin</i> 
and <i>rsh</i>. 


d796 1
a796 49
# <strong>kdb_edit</strong>
Opening database...
    
Enter Kerberos master key:
    
Current Kerberos master key version is 1.
    
Master key entered.  BEWARE!

Previous or default values are in [brackets] ,
enter return to leave the same, or new value.

Principal name: <strong>passwd</strong>
Instance: <strong>avalanche</strong>

&lt;Not found&gt;, Create [y] ? <strong>y</strong>

Principal: passwd, Instance: avalanche, kdc_key_ver: 1
New Password:                <strong>&lt;----- Use 'RANDOM' as password</strong>
Verifying password -
New Password:

Random password [y] ? <strong>y</strong>

Principal's new key version = 1
Expiration date (enter yyyy-mm-dd) [ 1999-12-31 ] ? <strong>2003-12-31</strong>
Max ticket lifetime (*5 minutes) [ 255 ] ?
Attributes [ 0 ] ?
Edit O.K.


Principal name: <strong>rcmd</strong>
Instance: <strong>avalanche</strong>

&lt;Not found&gt;, Create [y] ? <strong>y</strong>
Principal: rcmd, Instance: avalanche, kdc_key_ver: 1
New Password:                 <strong>&lt;----- Use 'RANDOM' as password</strong>
Verifying password -
New Password:

Random password [y] ? <Strong>y</strong>

Principal's new key version = 1
Expiration date (enter yyyy-mm-dd) [ 1999-12-31 ] ? <strong>2003-12-31</strong>
Max ticket lifetime (*5 minutes) [ 255 ] ?
Attributes [ 0 ] ?
Edit O.K.
Principal name:               <strong>&lt;----- Hit &lt;ENTER&gt; to end</strong>

a797 60
</blockquote>

<p>
A srvtab file is the service key file. These must be extracted from the  Kerberos key  distribution center database in
order for services to authenticate using Kerberos. For  each  hostname  specified  on
the command line, <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ext_srvtab&amp;sektion=8">ext_srvtab(8)</a>
creates the service key file hostname-new-srvtab, containing all the entries in the database with an instance field of
hostname.

<blockquote><pre>
# <Strong>ext_srvtab avalanche</strong>

Enter Kerberos master password:

Current Kerberos master key version is 1.

Master key entered.  BEWARE!
Generating 'avalanche-new-srvtab'....

# <strong>mv avalanche-new-srvtab srvtab</strong>
# <strong>chmod 600 srvtab</strong>
</pre></blockquote>

<p>
Now we can add users to our database.

<blockquote><pre>
# <strong>kdb_edit</strong>
Opening database...
    
Enter Kerberos master key:
    
Current Kerberos master key version is 1.
    
Master key entered.  BEWARE!
Previous or default values are in [brackets] ,
enter return to leave the same, or new value.
    
Principal name: <strong>jeremie</strong>
Instance:
    
&lt;Not found&gt;, Create [y] ? <strong>y</strong>
    
Principal: jeremie, Instance: , kdc_key_ver: 1
New Password:                &lt;---- enter a secure password here
Verifying password
    
New Password:                &lt;---- re-enter the password here
Principal's new key version = 1
Expiration date (enter yyyy-mm-dd) [ 2000-01-01 ] ?
Max ticket lifetime (*5 minutes) [ 255 ] ?
Attributes [ 0 ] ?
Edit O.K.
Principal name:          &lt;---- null entry here will cause an exit
			       or you can add more entries.
</pre></blockquote>

<p>
So now all the Kerberos particulars are setup. All that is left is to enable
boot-time loading of the Kerberos server and to enable Kerberized-daemons.
a798 121
<p>
In /etc/rc.conf, set:

<blockquote>
<tt>kerberos_server=YES</tt>
</blockquote>

<p>
In /etc/inetd.conf, uncomment:

<blockquote><pre>
telnet       stream  tcp     nowait  root    /usr/libexec/telnetd    telnetd -k
klogin       stream  tcp     nowait  root    /usr/libexec/rlogind    rlogind -k
kshell       stream  tcp     nowait  root    /usr/libexec/rshd       rshd -k
kauth        stream  tcp     nowait  root    /usr/libexec/kauthd     kauthd
</pre></blockquote>

<p>
Then, either reboot, or:

<blockquote><pre>
# <strong>kill -HUP `cat /var/run/inetd.pid`</strong>
# <strong>/usr/libexec/kerberos &gt;&gt; /var/log/kerberos.log &amp;</strong>
# <strong>/usr/libexec/kadmind -n &gt;&gt; /var/log/kadmind.log &amp;</strong>
</pre></blockquote>

<p>
Note: this is a rather simple server setup. Usually, redundant servers
are setup (as slave servers) so that if one server goes down, all the
services that depend on Kerberos don't go down. We can also add 'su'
privileges to a specific principal, see 
<a href="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kerberos.html#AEN9189">the FreeBSD Handbook</a>.

<h3>How to kerberize your client workstation</h3>

<p>
We will be setting the workstation named <i>gatekeeper</i> to be in the
CIARASYSTEMS.COM realm, with avalanche.ciarasystems.com as the main server.

<p>
To start off, we need to setup our <i>krb.conf</i> and <i>krb.realms</i> like the above machine. This is so
<i>gatekeeper</i> will know what server is the KDC and what domain it is on. Again here are the file contents.

<blockquote><pre>
# <strong>cat krb.conf</strong>
CIARASYSTEMS.COM
CIARASYSTEMS.COM avalanche.ciarasystems.com admin server

# <strong>cat krb.realms</strong>
avalanche.ciarasystems.com      CIARASYSTEMS.COM
.ciarasystems.com               CIARASYSTEMS.COM
</pre></blockquote>

<p>
Now that is set up, we need to initialize kerberos. To obtain a ticket you use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kinit&amp;sektion=1">kinit(1)</a>.

<blockquote><pre>
$ <strong>kinit</strong>
The OpenBSD Project (gatekeeper)
Kerberos Initialization
Kerberos name: <strong>jeremie</strong>
Password:
</pre></blockquote>

<p>
Now we have identified we can list our tickets with <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=klist&amp;sektion=1">klist(1)</a>.

<blockquote><pre>
$ <strong>klist</strong>
Ticket file:    /tmp/tkt1000
Principal:      jeremie@@CIARASYSTEMS.COM

  Issued           Expires          Principal
Jun 28 01:03:25  Jun 28 11:03:25  krbtgt.CIARASYSTEMS.COM@@CIARASYSTEMS.COM
</pre></blockquote>

<p>
Looks like we are set now. All that's left to do is test it. Here we will test it with rlogin(1) and telnet(1).

<blockquote><pre>
$ <Strong>telnet avalanche</strong>
Trying 192.168.0.38...
Connected to avalanche.
Escape character is '^]'.
[ Trying mutual KERBEROS4 ... ]
[ Kerberos V4 accepts you ]
[ Kerberos V4 challenge successful ]
Last login: Sun Jun 27 22:52:25 on ttyp1 from gatekeeper
Warning: no Kerberos tickets issued.
OpenBSD 3.2 (GENERIC) #25: Thu Oct  3 19:51:53 MDT 2002
</pre></blockquote>

and 

<blockquote><pre>
$ <Strong>rlogin avalanche</strong>
Last login: Sun Jun 27 22:53:39 on ttyp1 from gatekeeper
Warning: no Kerberos tickets issued.
OpenBSD 3.2 (GENERIC) #25: Thu Oct  3 19:51:53 MDT 2002
</pre></blockquote>

<p>
We can tell that it is indeed using Kerberos to authenticate the rlogin
session. To get rid of any tickets issued, you would use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kdestroy&amp;sektion=1">kdestroy(1)</a>.
For example:

<blockquote><pre>
$ <strong>kdestroy</strong>
Tickets destroyed.
$ <strong>rlogin avalanche</strong>
krcmd: No ticket file (tf_util)
rlogin: warning, using standard rlogin: can't provide Kerberos auth data.
avalanche: Connection refused
</pre></blockquote>

<p>
Do not worry about 'Warning: no Kerberos tickets issued.' This is because
we're only doing kerberos authentication, not ticket passing. If you want
ticket passing, use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">OpenSSH</a> which has support.
Stock KerberosIV  doesn't have support for tgt passing, either - only the AFS kaserver's implementation of krb4,
since the regular KerberosIV kdc checks client IP address listed in the ticket.
d968 1
a968 1
230- OpenBSD 3.2 (GENERIC) #25: Thu Oct  3 19:51:53 MDT 2002
d1109 1
a1109 1
To retrieve the source code of <i>3.2-release</i> using
d1115 1
a1115 1
$ <b>cvs -d anoncvs@@anoncvs5.usa.openbsd.org:/cvs co -rOPENBSD_3_2_BASE src/libexec/talkd/</b>
d1274 2
a1275 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pipe&amp;sektion=2">pipe(2)</a>
, and using an external log rotator at the other end of the
d1396 1
a1396 1
<small>$OpenBSD: faq10.html,v 1.86 2003/04/04 17:49:08 nick Exp $</small>
@


1.86
log
@
More tags for Stuff That Changes every release, from Sam Smith.
@
text
@d68 1
a68 1
group by answering wheel at <tt>Invite <i>user</i> into other groups:</tt>
d137 1
a137 1
After the kernel is booted. <i>/etc/rc</i> is started:
d139 1
a139 1
	<li>Filesystems checked. This will always be bypassed if the file /etc/fastboot exists. This is
d141 1
a141 1
       <li>Configuration Variables are read in from <i>/etc/rc.conf</i> and, afterwards, <i>/etc/rc.conf.local</i>.
d151 2
a152 2
	<li>Does various checks. (quota's, savecore, etc)
	<li>Local daemons are run, ala <i>/etc/rc.local</i>
d169 1
a169 1
<a href="faq10.html#AnonFTP">Anonymous FTP FAQ</a> to read more about this). In any case, each line also has a
d185 2
a186 2
Another approach would be to never touch <i>/etc/rc.conf</i> itself.
Instead, create the file <i>/etc/rc.conf.local</i> and copy just the
d194 1
a194 1
For other daemons that you might install with the system via ports or other ways, you will use the
d205 4
d219 1
a219 1
<i>/etc/rc.shutdown</i> is a script that is run a shutdown. Anything you want done before the system shuts down
d453 3
a455 3
system (and is a prime target for programs such as Crack.)  4.4BSD
introduces the master.passwd file, which has an extended format (with
additional options beyond what was provided by /etc/passwd) and is only
d556 1
a556 1
command, which helps facilitate using these in a script. 
d559 1
a559 1
A list of the added commands are:
d1556 1
a1556 1
Starting with OpenBSD 3.2, the Apache 
d1558 1
a1558 1
server is 
d1638 1
a1638 1
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf&amp;sektion=8">/etc/rc.conf</a></i>
d1683 1
a1683 1
It is sometimes said one should never change the root shell, though
d1737 1
a1737 1
<small>$OpenBSD: faq10.html,v 1.85 2003/03/18 03:41:04 nick Exp $</small>
@


1.85
log
@
* [FAQ Index] [Back] [Next] links at top of page ('bout time.  Finally
decided not having them was worse than the lame ideas I had).
* Top heading changed from <h2> to <h1> throughout
* [Back to Main Index] shortened to [FAQ Index] top and bottom
* Bottoms of faq5.html and faq14.html standardized.
@
text
@d1549 1
d1733 1
a1733 1
<small>$OpenBSD: faq10.html,v 1.84 2003/03/11 23:03:07 nick Exp $</small>
@


1.84
log
@
grrr...  Should have tested this myself before committing.
Thanks to TedU@@ for the correction.
@
text
@d18 7
a24 1
<h2><font color="#e00000">10 - System Management</font></h2>
d1722 1
a1722 1
<a href= "index.html">[Back to Main Index]</a>
d1732 1
a1732 1
<small>$OpenBSD: faq10.html,v 1.83 2003/03/11 02:47:10 nick Exp $</small>
@


1.83
log
@
Saad asks me to clairfy one thing...I end up reworking #Quotas.  Thanks to TedU@@
for fact checking, and Miod@@ for reminding me who to get facts from. 8)
@
text
@d728 3
a730 4
Note that the quota allocation is in blocks --  one block is 512
bytes (half a kB).
In this case the softlimit is set to 1000 blocks (500kB) and the hardlimit is set to
1050 blocks (525kB). A softlimit is a limit where the user is just warned when
d1726 1
a1726 1
<small>$OpenBSD: faq10.html,v 1.82 2003/02/28 00:34:28 nick Exp $</small>
@


1.82
log
@
Typo fixes from Tom Cosgrove (tom dot cosgrove at arches-consulting dot com).
Thanks!
@
text
@d673 3
a675 8
Quotas are used to limit users space that they have available to them on
your drives. It can be very helpful in situations where you have limited resources.
Quotas can be set in two different ways. 

<ul>
<li>User Quotas
<li>Group Quotas
</ul>
d678 5
a682 3
The first step to setting up quotas is to make sure that <tt>option
QUOTA</tt> is in your Kernel Configuration. This option is in the
GENERIC kernel. After this you need to mark in <i>/etc/fstab</i>
d685 1
a685 1
to mark each fs that you will be using quotas on. By default the files
d688 5
a692 3
default can be overwritten by doing, userquota=/var/quotas/quota.user. Or
whatever file you want to use for holding quota information. Here is an
example /etc/fstab that has one filesystem with userquotas enabled.
d701 1
a701 1
A simple use is just <strong>edquota &lt;user&gt;</strong>. edquota(8)
d728 4
a731 2
In this the softlimit is set to 1000 blocks and the hardlimit is set to
1050 blocks. A softlimit is a limit where the user is just warned when
d748 6
a753 6
This will go through /etc/fstab to turn on the filesystems with quota
options. Now that quotas are up and running, you can view them by
the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=quota&amp;sektion=1">quota(1)</a>.
Using a command of <strong>quota &lt;user&gt;</strong> will give that users
information. When called with no arguments the quota command will give your quota statistics. For
example:
d769 1
a769 1
By default quotas set in /etc/fstab will be started on boot. To turn them
d1727 1
a1727 1
<small>$OpenBSD: faq10.html,v 1.81 2003/02/24 17:39:20 nick Exp $</small>
@


1.81
log
@
oops.  Stuff left over from 3.0.
Spotted and good suggestion to avoid missing this line next time from
Tom Cosgrove (tom dot cosgrove at arches-consulting dot com)
(who also provided a new obsd-faq.pdf file)
@
text
@d166 1
a166 1
daemon or service start up in any way you like. For example, Here is the default line pertaining to httpd(8).
d1726 1
a1726 1
<small>$OpenBSD: faq10.html,v 1.80 2003/02/20 03:09:55 nick Exp $</small>
@


1.80
log
@
Page name cleanups.  Standardize capitalization, and change
x.0 -> x on titles and on "next/previous" links at bottom of page.
From Tom Cosgrove (tom dot cosgrove at arches-consulting dot com), thanks!
@
text
@d1440 1
a1440 1
To retrieve the current release's source code using
d1446 1
a1446 1
$ <b>cvs -d anoncvs@@anoncvs5.usa.openbsd.org:/cvs co -rOPENBSD_3_0_BASE src/libexec/talkd/</b>
d1726 1
a1726 1
<small>$OpenBSD: faq10.html,v 1.79 2003/01/11 20:42:21 nick Exp $</small>
@


1.79
log
@
Two new articles covering the Frequently Asked Questions,
"I don't like the standard root shell!" and "What else can I do with ksh?"
ok henning@@, cloder@@
@
text
@d4 1
a4 1
<title>10.0 - System Management</title>
d18 1
a18 1
<h2><font color="#e00000">10.0 - System Management</font></h2>
d1717 2
a1718 2
<a href= "faq9.html">[To Section 9.0 - Migrating from Linux]</a>
<a href= "faq11.html">[To Section 11.0 - Performance Tuning]</a>
d1726 1
a1726 1
<small>$OpenBSD: faq10.html,v 1.78 2003/01/01 13:01:59 nick Exp $</small>
@


1.78
log
@
Rev copyrights to 2003.
@
text
@d40 2
d1629 85
d1726 1
a1726 1
<small>$OpenBSD: faq10.html,v 1.77 2002/12/04 19:17:25 nick Exp $</small>
@


1.77
log
@
Command didn't work as listed, simplify.
Pointed out by Morten Liebach (m at mongers.org)
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2002 by OpenBSD.">
d921 1
a921 1
Expiration date (enter yyyy-mm-dd) [ 1999-12-31 ] ? <strong>2002-12-31</strong>
d939 1
a939 1
Expiration date (enter yyyy-mm-dd) [ 1999-12-31 ] ? <strong>2002-12-31</strong>
d1639 1
a1639 1
<small>$OpenBSD: faq10.html,v 1.76 2002/11/13 18:05:04 nick Exp $</small>
@


1.76
log
@
HTML Validation: fantastic work directly from Horacio <homega@@wanadoo.es>
Many thanks!
@
text
@d338 1
a338 1
Send Sendmail a HUP signal using the following command:
d341 1
a341 1
     $ <b>sudo kill -HUP `head -1 /var/run/sendmail.pid`</b>
d1639 1
a1639 1
<small>$OpenBSD: faq10.html,v 1.75 2002/11/13 00:05:54 nick Exp $</small>
@


1.75
log
@
New article: "10.16 - Tell me about this chroot() Apache?"
Guidance and ok Henning@@, who had much more fun than I in the writing
of this... 8-)
@
text
@d1 1
d6 1
d18 2
a19 2
<h2><font color=#e00000>10.0 - System Management</font><hr></h2>
</p>
d22 2
a23 1
<ul><h3>Table of Contents</h3>
d41 1
a41 1
</p> 
a43 2
<br>

a47 1
</p>
d52 1
a52 1
access to. On OpenBSD, users who are in the <kbd>wheel</kbd> group are allowed to use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=su&apropos=0&sektion=1&format=html">
d56 3
a58 2
<P>
If you are adding a new user with <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&apropos=0&sektion=8&format=html">adduser(8)</a>,
a61 1
</p>
d63 1
a63 2
<ul>
<pre>
d65 1
a65 2
</pre>
</ul>
d69 1
a69 2
<kbd>&quot;wheel&quot;</kbd> group, use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sudo&sektion=8&format=html">sudo(8)</a>.
</p>
a74 1
</p>
d77 2
a78 2
To duplicate your filesystem use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dump&sektion=8&format=html">dump(8)</a> and
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=restore&sektion=8">restore(8)</a>. For example,
a79 1
</p>
d81 1
a81 2
<ul>
<pre>
d83 2
a84 2
</pre>
</ul>
d88 1
a88 2
The command <A 
HREF="http://www.openbsd.org/cgi-bin/man.cgi?query=tar&sektion=1&format=html">tar(1)</a>
d90 3
a92 2
<UL>
<PRE>
d94 2
a95 3
</PRE>
</UL>
<BR>
a100 1
</p>
d103 1
a103 1
OpenBSD uses an <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc&sektion=8&format=html">rc(8)</a> style
a104 1
</p>
d116 1
a116 1
	changes. See <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=init&sektion=8&format=html">init(8)</a>
d118 1
a118 1
	See <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.shutdown&sektion=8&format=html">rc.shutdown(8)</a>
d122 1
a126 1
</p>
d128 3
a130 1
<ul>After the kernel is booted. <i>/etc/rc</i> is started.
a153 1
</p>
d155 1
a155 1
<ul><pre>
d157 1
a157 1
</pre></ul>
a164 1
</p>
d166 1
a166 1
<ul><pre>
d168 1
a168 1
</pre></ul>
d173 1
a173 1
<a href="#HTTPS">SSL FAQ</a> or <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&sektion=8&format=html">ssl(8)</a>)
a174 1
</p>
a188 1
</p>
d190 1
a190 1
<ul><pre>
d194 1
a194 1
</pre></ul>
a198 1
</p>
d200 1
a200 1
<ul><pre>
d202 1
a202 1
</pre></ul>
a209 1
</p>
a214 1
</p>
d218 2
a219 3
</p>
<ul>
<pre>
d221 2
a222 2
</pre>
</ul>
d225 2
a226 3
</p>
<ul>
<pre>
d228 2
a229 2
</pre>
</ul>
d233 2
a234 3
</p>
<ul>
<pre>
d238 2
a239 2
</pre>
</ul>
d244 1
a244 2
</p>
<ul><pre>
d246 2
a247 1
</pre></ul>
a257 1
</p>
a262 1
</p>
d267 2
a268 3
</p>
<ul>
<pre>
d270 2
a271 2
</pre>
</ul>
d274 2
a275 2
<ul>
<pre>
d282 2
a283 2
</pre>
</ul>
d288 2
a289 1
<P>
d296 1
a296 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=popa3d&sektion=8">popa3d</a>
a302 1
</p>
d307 1
a307 1
<ul><pre>
d309 1
a309 1
</pre></ul>
d311 1
a312 1
</p>
d316 2
d321 1
d325 1
d329 2
d332 1
d336 2
d339 1
d343 2
a351 1
</p>
d356 1
a356 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&sektion=8&format=html">httpd(8)</a>, 
d360 1
a360 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&sektion=8&format=html">ssl(8)</a> 
d364 1
a364 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&sektion=8&format=html">ssl(8)</a> 
a365 1
</p> 
a368 1
</p>
a378 1
</p>
a389 1
</p>
a401 1
</p>
a404 1
</p>
d415 1
a415 1
should be able to start <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&sektion=8&format=html">httpd(8)</a> with the <b>-DSSL</b> flag (see the <a href="#rc">section about rc(8)</a> in this faq), enabling https
a416 1
</p> 
a421 1
</p>
d425 1
a425 1
generates <i>/etc/passwd</i> dynamically with <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pwd_mkdb&sektion=8">pwd_mkdb(8)</a>. The main password
d427 2
a428 2
<ul>
<pre>
d436 3
a438 3
</pre>
</ul>
<P>
d446 2
a447 1
<P>
a453 1
</p>
a458 1
</p>
d471 1
a471 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&sektion=8&format=html">adduser(8)</a>
d473 1
a473 1
<i>/etc/adduser.conf</i>. You can add users by hand via <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vipw&sektion=8">vipw(8)</a>, but this is
a480 1
</p>
d482 1
a482 1
<ul><pre>
d515 1
a515 1
</pre></ul>
d518 1
a518 1
To delete users you should use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rmuser&sektion=8&format=html">rmuser(8)</a>
d520 1
a520 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crontab&sektion=1&format=html">crontab(1)</a> entries, their $HOME dir (if it is owned by the user), and their mail.
a522 1
</p>
d524 1
a524 1
<ul><pre>
d536 1
a536 1
</pre></ul>
d540 1
d543 1
a543 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&sektion=8&format=html">adduser(8)</a> 
a544 1
</p>
d546 13
a558 11
<ul>A list of the added commands are:
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=group&sektion=8&format=html">group(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupadd&sektion=8&format=html">groupadd(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupdel&sektion=8&format=html">groupdel(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupinfo&sektion=8&format=html">groupinfo(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=groupmod&sektion=8&format=html">groupmod(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=user&sektion=8&format=html">user(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=useradd&sektion=8&format=html">useradd(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=userdel&sektion=8&format=html">userdel(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=userinfo&sektion=8&format=html">userinfo(8)</a>
	<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=usermod&sektion=8&format=html">usermod(8)</a>
a564 1
</p>
a567 1
</p>
d569 1
a569 1
<ul><pre>
d578 1
a578 1
</pre></ul>
d581 1
a581 2
The above settings are what will be set unless you specify different with command line options. For example, in our case, we want the user to go to the group <b>guest</b>, not <b>users</b>. One more little hurdle with adding users, is that passwords must be specified on the commandline. This is, the encrypted passwords, so you must first use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=encrypt&sektion=1&format=html">encrypt(1)</a> utility to create the password. For example: OpenBSD's passwords by default use the Blowfish algorithm for 6 rounds. Here is an example line to create an encrypted password to specify to useradd(8).
</p>
d583 1
a583 1
<ul><pre>
d587 1
a587 1
</pre></ul>
a590 1
</p>
d592 1
a592 1
<ul><pre>
d595 1
a595 1
</pre></ul>
a598 1
</p>
a601 1
</p>
d603 1
a603 1
<ul><pre>
d618 1
a618 1
</pre></ul>
a621 1
</p>
d623 1
a623 1
<ul><pre>
d635 1
a635 1
</pre></ul>
a640 1
</p>
d642 1
a642 1
<ul><pre>
d644 1
a644 1
</pre></ul>
a647 1
</p>
a652 1
</p>
d658 1
a658 1
interactively, but will be able to use ftp capabilities. <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&sektion=8&format=html">adduser(8)</a>
d663 1
a663 2
Using the <b>-A</b> option to <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&sektion=8&format=html">ftpd(8)</a>, you can allow only ftpchroot logins!
</p>
a668 1
</p>
a673 1
</p>
a674 1
<p>
d676 2
a677 2
<li>User Quotas</li>
<li>Group Quotas</li>
a678 1
</p>
a691 1
</p>
d693 1
a693 2
<ul>
<pre>
d695 1
a695 2
</pre>
</ul>
d699 1
a699 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=edquota&sektion=8&format=html">edquota(8)</a>.
a702 1
</p>
d704 1
a704 2
<ul>
<pre>
d706 1
a706 2
</pre>
</ul>
a709 1
</p>
d711 1
a711 2
<ul>
<pre>
d715 1
a715 2
</pre>
</ul>
a718 1
</p>
d720 1
a720 2
<ul>
<pre>
d724 1
a724 2
</pre>
</ul>
a733 1
</p>
d737 1
a737 1
this use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=quotaon&sektion=8&format=html">quotaon(8)</a>.
a738 1
</p>
d740 1
a740 2
<ul>
<pre>
d742 1
a742 2
</pre>
</ul>
d747 1
a747 1
the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=quota&sektion=1&format=html">quota(1)</a>.
a750 1
</p>
d752 1
a752 2
<ul>
<pre>
d754 1
a754 2
</pre>
</ul>
a757 1
</p>
d759 1
a759 2
<ul>
<pre>
d763 1
a763 2
</pre>
</ul>
d768 4
a771 2
<ul><pre># <strong>quotaoff -a</strong></pre></ul>
</p>
a776 1
</p>
a782 1
</p>
a788 1
</p>
d790 1
a790 2
<ul>
<pre>
d792 1
a792 2
</pre>
</ul>
d796 1
a796 2
<ul>
<pre>
d798 1
a798 2
</pre>
</ul>
a802 1
</p>
d804 1
d809 8
a816 6
<li><a href="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/kerberos.html">The FreeBSD handbook</a> </li>
<li>Use the command <strong>info kth-krb</strong></li>
<li><a href="http://web.mit.edu/kerberos/www/dialogue.html">Designing an Authentication System: a Dialogue in Four Scenes</a></li>
<li><a href="http://web.mit.edu/kerberos/www/papers.html#krb4">Papers and Documentation Describing KerberosIV</a></li>
</ul>Or the book<ul>
<li><a href="http://www.amazon.com/exec/obidos/ASIN/0130614661/qid%3D930594963/">Network Security Private Communication in a Public World [Kaufman, Perlman, Speciner, 1995]</a></li> 
a822 1
</p>
a826 1
</p>
d828 1
a828 2
<ul>
<pre>
d832 1
a832 2
</pre>
</ul>
d837 1
a837 2
on this refer to <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=krb.conf&sektion=5&format=html">krb.conf</a>.
</p>
d839 1
a839 2
<ul>
<pre>
d843 1
a843 2
</pre>
</ul>
d850 1
a850 2
the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=krb.realms&sektion=5&format=html">krb.realms</a>. man page.
</p>
d853 1
a853 1
Next we will run <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kdb_init&sektion=8&format=html">kdb_init(8)</a> 
a854 1
</p>
d856 1
a856 2
<ul>
<pre>
d865 1
a865 2
</pre>
</ul>
d868 1
a868 1
Next we need to use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kstash&sektion=8&format=html">kstash(8)</a> 
a869 1
</p>
d871 1
a871 1
<ul>
a880 1
This saves the encrypted master password in /etc/kerberosIV/master_key.<p>
d882 3
d946 1
a946 1
</ul>
d951 1
a951 1
the command line, <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ext_srvtab&sektion=8&format=html">ext_srvtab(8)</a>
a953 1
</p>
d955 1
a955 2
<ul>
<pre>
d967 1
a967 2
</pre>
</ul>
a970 1
</p>
d972 1
a972 2
<ul>
<pre>
d1001 1
a1001 2
</pre>
</ul>
a1005 1
</p>
d1009 2
a1010 1
<ul>
d1012 1
a1012 1
</ul>
d1014 1
d1016 2
a1017 2
<UL>
<pre>
d1022 1
a1022 2
</pre>
</ul>
d1024 1
d1026 4
a1029 4
<ul>
<pre>
# <Strong>kill -HUP `cat /var/run/inetd.pid`</strong>
# <Strong>/usr/libexec/kerberos &gt;&gt; /var/log/kerberos.log &amp;</strong>
d1031 1
a1031 3
</pre>
</ul>
</p>
a1038 1
</p>
a1044 1
</p>
a1048 1
</p>
d1050 1
a1050 2
<ul>
<pre>
d1058 1
a1058 2
</pre>
</ul>
d1061 1
a1061 2
Now that is set up, we need to initialize kerberos. To obtain a ticket you use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kinit&sektion=1&format=html">kinit(1)</a>.
</p>
d1063 2
a1064 3
<ul>
<pre>
$ <Strong>kinit</strong>
d1069 1
a1069 2
</pre>
</ul>
d1072 1
a1072 2
Now we have identified we can list our tickets with <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=klist&sektion=1&format=html">klist(1)</a>.
</p>
d1074 1
a1074 2
<ul>
<pre>
d1081 1
a1081 2
</pre>
</ul>
a1084 1
</p>
d1086 1
a1086 2
<ul>
<pre>
d1097 1
a1097 1
</pre></ul>
d1100 2
a1101 1
<ul><pre>
d1106 1
a1106 2
</pre>
</ul>
d1110 1
a1110 1
session. To get rid of any tickets issued, you would use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kdestroy&sektion=1&format=html">kdestroy(1)</a>.
a1111 1
</p>
d1113 1
a1113 2
<ul>
<pre>
d1116 1
a1116 1
$ <Strong>rlogin avalanche</strong>
d1120 1
a1120 2
</pre>
</ul>
d1125 1
a1125 1
ticket passing, use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&sektion=1&format=html">OpenSSH</a> which has support.
a1127 1
</p>
a1132 1
</p>
a1136 1
</p>
d1144 3
a1146 3
chroot itself to the home directory of the 'ftp' user. To read up more on that, read the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&sektion=8&format=html">ftp(8)</a> and 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=chroot&sektion=2&format=html">chroot(2)</a> man pages. Here
is an example of adding the <i>ftp</i> user. I will do this using <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&sektion=8&format=html">adduser(8)</a>.
a1150 2
</p>

d1152 1
a1152 2
<ul>
<pre>
d1185 1
a1185 2
</pre>
</ul>
d1192 1
a1192 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&sektion=8&format=html">ftp(8)</a> man page.
</p>
d1194 2
d1197 1
a1197 3
You <b>do not</b> need to make a /home/ftp/usr or /home/ftp/bin directory.
<BR>
<li><i>/home/ftp</i> - This is the main directory. It should be owned by root and have permissions of 555.</li>
d1200 1
a1200 1
names as opposed to numbers. There are no passwords stored in pwd.db, they are all in spwd.db, so don't copy that over.</li>
a1207 1
</p>
d1209 1
a1209 2
<ul>
<pre>
d1230 1
a1230 2
</pre>
</ul>
a1237 1
</p>
d1239 1
a1239 1
<ul><pre>
d1241 1
a1241 1
</pre></ul>
a1248 1
</p>
d1250 1
a1250 1
<ul><pre>
d1252 1
a1252 1
</pre></ul>
a1258 1
</p>
d1260 1
a1260 1
<ul><pre>
d1262 1
a1262 1
</pre></ul>
a1266 1
</p>
a1269 1
<p>
d1271 3
a1273 3
<li><i>/etc/ftpwelcome</i> - This holds the Welcome message for people once they have connected to your ftp server.</li>
<li><i>/etc/motd</i> - This holds the message for people once they have successfully logged into your ftp server.</li>  
<li><i>.message</i> - This file can be placed in any directory. It will be shown once a user enters that directory.</li>
a1280 1
</p>
d1283 1
a1283 1
OpenBSD's <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&sektion=8&format=html">ftpd(8)</a> 
a1288 1
</p>
d1290 1
a1290 1
<ul><pre>
d1333 1
a1333 1
</pre></ul>
a1340 1
</p>
d1342 1
a1342 1
<ul><pre>
d1349 1
a1349 1
</pre></ul>
a1354 1
</p>
d1356 1
a1356 1
<ul><pre>
d1383 1
a1383 1
</pre></ul>
a1388 1
</p>
a1397 1
</p>
a1403 1
</p>
d1407 1
a1407 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=talkd&sektion=8">talkd(8)</a> 
a1409 1
</p>
a1417 1
</p>
a1429 1
</p>
d1432 1
a1432 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&sektion=1">cvs(1)</a>
a1435 1
</p>
d1439 1
a1439 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs&sektion=1">cvs(1)</a>, you would use
a1440 1
</p>
a1454 1
</p>
a1457 1
</p>
d1459 1
a1459 1
<ul><pre>
d1482 1
a1482 1
</pre></ul>
a1485 1
</p>
a1488 1
<p>
a1536 1
</p>
d1542 1
d1551 2
d1568 2
d1633 1
a1633 1
</p>
d1639 1
a1639 2
<small>$OpenBSD: faq10.html,v 1.74 2002/11/01 15:27:13 nick Exp $</small>
</p>
@


1.74
log
@
Update of version numbers scattered around the FAQ.
@
text
@d36 1
d1662 84
d1758 1
a1758 1
<small>$OpenBSD: faq10.html,v 1.73 2002/10/13 22:32:42 nick Exp $</small>
@


1.73
log
@
typos, cleanups, some additional material from
Sebastian Stark <seb@@todesplanet.de>
@
text
@d1183 1
a1183 1
OpenBSD 3.1-current (GENERIC) #4: Wed May  8 09:36:35 EDT 2002
d1191 1
a1191 1
OpenBSD 3.1-current (GENERIC) #4: Wed May  8 09:36:35 EDT 2002
d1405 1
a1405 1
230- OpenBSD 3.1-current (GENERIC) #7: Sat May 11 23:22:52 EDT 2002
d1673 1
a1673 1
<small>$OpenBSD: faq10.html,v 1.72 2002/07/12 02:51:35 nick Exp $</small>
@


1.72
log
@
Typos, grammar, wording fixes.
From David Krause <openbsd@@davidkrause.com>, thanks!
@
text
@d21 1
a21 1
<li><a href="#wheel"         >10.1 - When I try to su to root it says that I'm in the wrong group</a>
d23 1
a23 1
<li><a href="#rc"            >10.3 - How do I start daemons with the system? ( Overview of rc(8) )</a>
d25 1
a25 1
<li><a href="#POP"           >10.5 - I've set up POP, but I get errors when accessing my mail through POP. What can i do?</a>
d27 3
a29 3
<li><a href="#HTTPS"         >10.7 - Setting up a Secure HTTP Server using SSL(8)</a>
<li><a href="#vipw"          >10.8 - I made changes to /etc/passwd with vi(1), but the changes didn't seem to take place. Why?</a>
<li><a href="#AddDelUser"    >10.9 - How do I add a user? or delete a user?</a>
d32 1
a32 1
<li><a href="#Kerberos"      >10.12 - Setting up Kerberos Client/Server</a>
d34 2
a35 2
<li><a href="#ftpchroot"     >10.14 - Confining users to their home dir's in ftpd(8).</a>
<li><a href="#Patches"       >10.15 - Applying patches in OpenBSD.</a>
d69 1
a69 1
If you are looking for a way to allow users limited access to superuser privileges, without putting them in the
d81 2
a82 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=restore&sektion=8&format=html">restore(8)</a>. For example. To duplicate
everything under directory <kbd>SRC</kbd> to directory <kbd>DST</kbd>, do a:
d106 1
a106 1
<h2>10.3 - How do I start daemons with the system? ( Overview of rc(8) )</h2>
d118 2
d131 2
a132 1
The main files a system administrator should concentrate on are <i>/etc/rc.conf</i>, <i>/etc/rc.local</i> and
d139 2
a140 1
	<li>Configuration Variables are read in from <i>/etc/rc.conf</i>
d167 2
a168 2
A line like this shows that ftpd is not starting up with the system. ( At least not via rc(8), read the
<a href="faq10.html#AnonFTP">Anonymous FTP FAQ</a> to read more about this. ) In any case, each line also has a
d185 7
d311 6
a316 1
Try running cucipop or another POP daemon from the OpenBSD ports collection.
d324 1
a324 1
<b>PS:</b> Notice, OpenBSD does not have a group name of &quot;mail&quot;. You need to create this in your <i>/etc/group</i> file. An entry like:
d366 2
a367 1
<i>/etc/ssl/private/</i>. The steps shown here are taken in part from the 
d377 1
a377 1
To start off, you need to create your server key and certificate. To use the RSA features, you must have upgraded your libssl. Now you can create your key. Using OpenSSL:
d429 1
a429 1
should be able to start <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&sektion=8&format=html">httpd(8)</a> with the <b>-DSSL</b> flag, enabling https
d440 3
a442 3
If you edit /etc/passwd, your changes will be lost.  OpenBSD
generates /etc/passwd dynamically with <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pwd_mkdb&sektion=8&apropos=0">pwd_mkdb(8)</a>.  The main password
file in OpenBSD is /etc/master.passwd.  According to pwd_mkdb(8),
d490 1
a490 1
<strong>/etc/adduser.conf</strong>. You can add users by hand via <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vipw&sektion=8&format=html">vipw(8)</a>, but this is
d492 1
a492 1
on <strong>/etc/passwd</strong>, <strong>/etc/group</strong>, and shell
d539 1
a539 1
Of course it will also remove their <strong>/etc/passwd</strong> and <strong>/etc/group</strong>
d683 2
a684 2
add <i>/usr/bin/false</i> into <strong>/etc/shells</strong>. Then when you create
the user set his shell to /usr/bin/false, they will not be able log in
d828 1
a828 1
<h2>10.12 - How to Setup Kerberos Clients and Servers under OpenBSD</h2>
d1223 1
a1223 1
<h2>10.13 - Setting up Anonymous FTP Services.</h2>
d1369 2
a1370 1
This of course only works if you have ftpd taken out of <i>/etc/inetd.conf</i>.
d1386 1
a1386 1
<h2>10.14 - Confining users to their home dir's in ftpd(8).</h2>
d1673 1
a1673 1
<small>$OpenBSD: faq10.html,v 1.71 2002/07/04 01:28:45 nick Exp $</small>
@


1.71
log
@
more '>' -> &gt;'s, from Sam Smith <S@@mSmith.net>, thanks!
@
text
@d816 1
a816 1
KerberosIV is an pre-installed component of the default system. Here is
d1655 1
a1655 1
<small>$OpenBSD: faq10.html,v 1.70 2002/07/02 01:17:58 nick Exp $</small>
@


1.70
log
@
recommended by EricJ@@ some time ago, done by Sam Smith <S@@mSmith.net>,
standarizing the displayed shell prompts to be either '#' or '$', as
appropriate.  If anyone cares, Sam was even kind enough to list the
sections where changes were made:
   2.2  2.3  4.5  6.6.3  6.9.1  8.3  8.5  8.10  10.12  10.13  13.7
   13.11  14.3  14.4  14.9
Thanks!
@
text
@d1400 1
a1400 1
ftp> <strong>cd /</strong>
d1402 1
a1402 1
ftp> <strong>ls</strong>
d1421 1
a1421 1
ftp> <strong>quit</strong>
d1458 1
a1458 1
ftp> <strong>cd /</strong>
d1460 1
a1460 1
ftp> <strong>ls</strong>
d1473 1
a1473 1
ftp> <strong>quit</strong>
d1655 1
a1655 1
<small>$OpenBSD: faq10.html,v 1.69 2002/07/02 00:30:16 nick Exp $</small>
@


1.69
log
@
& -> &amp; (and occassionally, "and")  > -> &gt;   < -> &lt;
work submitted by Sam Smith <S@@mSmith.net>, many thanks!
@
text
@d872 1
a872 1
[root@@avalanche kerberosIV] <strong>cat krb.conf</strong>
d886 1
a886 1
[root@@avalanche kerberosIV] <strong>cat krb.realms</strong>
d907 1
a907 1
[root@@avalanche kerberosIV] <strong>kdb_init</strong>
d925 1
a925 1
[root@@avalanche kerberosIV] <strong>kstash</strong>
d946 1
a946 1
# <b>kdb_edit</b>
d1008 1
a1008 1
[root@@avalanche kerberosIV] <Strong>ext_srvtab avalanche</strong>
d1017 2
a1018 2
[root@@avalanche kerberosIV] <strong>mv avalanche-new-srvtab srvtab</strong>
[root@@avalanche kerberosIV] <strong>chmod 600 srvtab</strong>
d1028 1
a1028 1
[root@@avalanche kerberosIV] <strong>kdb_edit</strong>
d1083 3
a1085 3
[root@@avalanche /] <Strong>kill -HUP `cat /var/run/inetd.pid`</strong>
[root@@avalanche /] <Strong>/usr/libexec/kerberos &gt;&gt; /var/log/kerberos.log &amp;</strong>
[root@@avalanche /] <strong>/usr/libexec/kadmind -n &gt;&gt; /var/log/kadmind.log &amp;</strong>
d1112 1
a1112 1
[root@@gatekeeper kerberosIV] <strong>cat krb.conf</strong>
d1116 1
a1116 1
[root@@gatekeeper kerberosIV] <strong>cat krb.realms</strong>
d1128 1
a1128 1
xyz:jeremie% <Strong>kinit</strong>
d1142 1
a1142 1
xyz:jeremie$ <strong>klist</strong>
d1157 1
a1157 1
xyz:jeremie% <Strong>telnet avalanche</strong>
d1171 1
a1171 1
xyz:jeremie% <Strong>rlogin avalanche</strong>
d1186 1
a1186 1
xyz:jeremie% <strong>kdestroy</strong>
d1188 1
a1188 1
xyz:jeremie% <Strong>rlogin avalanche</strong>
d1232 1
a1232 1
oshibana# <strong>adduser</strong>
d1293 1
a1293 1
oshibana# pwd 
d1295 1
a1295 1
oshibana# ls -laR ftp
d1655 1
a1655 1
<small>$OpenBSD: faq10.html,v 1.68 2002/06/15 09:25:31 jufi Exp $</small>
@


1.68
log
@
typo
@
text
@d1084 2
a1085 2
[root@@avalanche /] <Strong>/usr/libexec/kerberos >> /var/log/kerberos.log &</strong>
[root@@avalanche /] <strong>/usr/libexec/kadmind -n >> /var/log/kadmind.log &</strong>
d1233 1
a1233 1
Use option ``-silent'' if you don't want see all warnings & questions.
d1564 1
a1564 1
        patch -p0 < 026_talkd.patch
d1566 1
a1566 1
        make obj && make depend && make && make install
d1602 1
a1602 1
|       patch -p0 < 026_talkd.patch
d1604 1
a1604 1
|       make obj && make depend && make && make install
d1622 1
a1622 1
$ <b>make obj && make depend && make</b>
d1631 1
a1631 1
nroff -Tascii -mandoc /home/ericj/lsrc/src/libexec/talkd/talkd.8 > talkd.cat8
d1635 1
a1635 1
/usr/share/man/cat8/ntalkd.0 -> /usr/share/man/cat8/talkd.0
d1655 1
a1655 1
<small>$OpenBSD: faq10.html,v 1.67 2002/05/20 01:04:48 nick Exp $</small>
@


1.67
log
@
Updates for OpenBSD 3.1.  ok Miod@@
@
text
@d1544 1
a1544 1
$ <b>cvs -danoncvs@@anoncvs5.usa.openbsd.org:/cvs co -rOPENBSD_3_0_BASE src/libexec/talkd/</b>
d1655 1
a1655 1
<small>$OpenBSD: faq10.html,v 1.66 2002/05/11 01:00:40 nick Exp $</small>
@


1.66
log
@
Added new 10.6, "Why does sendmail ignore /etc/hosts".
ok millert@@
@
text
@d346 11
a356 6
Starting with OpenBSD 2.8, OpenBSD ships with an SSL-ready httpd and RSA libraries. However, if you are using OpenBSD 2.6 or 2.7 you must use provided SSL packages to use SSL. For more information, <b>man 8 ssl</b>.
</p>

<p>
For use with <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&sektion=8&format=html">httpd(8)</a>, you must first have a certificate created. This will be kept in <i>/etc/ssl/private/</i>. The steps shown here are taken in part from the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&sektion=8&format=html">ssl(8)</a> man page. Refer to it for further information. This FAQ entry only outlines how to create an RSA certificate for web servers, not a
DSA server certificate. To find out how to do so, please refer to the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&sektion=8&format=html">ssl(8)</a> man page. 
d461 1
a461 1
For OpenBSD 2.6 users, the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&sektion=8&format=html">adduser(8)</a> command is available for adding users. In OpenBSD 2.7, the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=user&sektion=8&format=html">user(8)</a> command was added to deal with adding and removing both users and groups.
d470 1
a470 1
The best way to add a user in OpenBSD is to use the 
d543 3
a545 1
Starting in the 2.7 release of OpenBSD, many commands were added for dealing with users and groups. These tools are less interactive than the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&sektion=8&format=html">adduser(8)</a> command, which helps facilitate using these in a script. 
d1166 1
a1166 1
OpenBSD 2.5 (AVALANCHE) #5: Tue Apr  6 01:18:16 EDT 1999
d1174 1
a1174 1
OpenBSD 2.5 (AVALANCHE) #5: Tue Apr  6 01:18:16 EDT 1999
d1387 1
a1387 1
230- OpenBSD 2.6 (GENERIC) #690: Fri Oct 29 16:32:17 MDT 1999
d1435 1
a1435 1
#       $OpenBSD: faq10.html,v 1.65 2002/04/30 13:02:47 nick Exp $
d1655 1
a1655 1
<small>$OpenBSD: faq10.html,v 1.65 2002/04/30 13:02:47 nick Exp $</small>
@


1.65
log
@
Couple of typos spotted by Saad Kadhi <bsdguy@@docisland.org>, thanks!
@
text
@d21 15
a35 14
<li><a href="#wheel"         >10.1 - When I try to su to root it says that I'm in the wrong group</a></li>
<li><a href="#DupFS"         >10.2 - How do I duplicate a filesystem?</A></li>
<li><a href="#rc"            >10.3 - How do I start daemons with the system? ( Overview of rc(8) )</A></li>
<li><a href="#RelayingDenied">10.4 - Why do users get relaying access denied when they are remotely sending mail through my OpenBSD system?</a></li>
<li><a href="#POP"           >10.5 - I've set up POP, but I get errors when accessing my mail through POP. What can i do?</a></li>
<li><a href="#HTTPS"         >10.6 - Setting up a Secure HTTP Server using SSL(8)</a></li>
<li><a href="#vipw"          >10.7 - I made changes to /etc/passwd with vi(1), but the changes didn't seem to take place. Why?</a></li>
<li><a href="#AddDelUser"    >10.8 - How do I add a user? or delete a user?</a></li>
<li><a href="#FTPOnly"       >10.9 - How do I create a ftp-only account?</a></li>
<li><a href="#Quotas"        >10.10 - Setting up user disk quotas</a></li>
<li><a href="#Kerberos"      >10.11 - Setting up Kerberos Client/Server</a></li>
<li><a href="#AnonFTP"       >10.12 - Setting up an Anonymous FTP Server</a></li>
<li><a href="#ftpchroot"     >10.13 - Confining users to their home dir's in ftpd(8).</a>
<li><a href="#Patches"       >10.14 - Applying patches in OpenBSD.</a>
d317 22
d342 1
a342 1
<h2>10.6 - Setting up a Secure HTTP server with SSL(8)</h2>
d414 1
a414 1
<h2>10.7 - I edited /etc/passwd, but the changes didn't seem to take place. Why?</h2>
d452 1
a452 1
<h2>10.8 - What is the best way to add and delete users?</h2>
d536 1
a536 1
<h3>10.8.2 - Adding users via user(8)</h3>
d554 1
a554 1
<h4>10.8.2.1 - Actually adding users</h4>
d637 1
a637 1
<h4>10.8.2.2 - Removing users</h4>
d654 1
a654 1
<h2>10.9 - How do I create an ftp-only account (not anonymous FTP!)?</h2>
d672 1
a672 1
<h2>10.10 - Setting up Quotas</h2>
d804 1
a804 1
<h2>10.11 - How to Setup Kerberos Clients and Servers under OpenBSD</h2>
d1199 1
a1199 1
<h2>10.12 - Setting up Anonymous FTP Services.</h2>
d1361 1
a1361 1
<h2>10.13 - Confining users to their home dir's in ftpd(8).</h2>
d1428 1
a1428 1
#       $OpenBSD: faq10.html,v 1.64 2002/02/05 23:24:13 nick Exp $
d1473 1
a1473 1
<h2>10.14 - Applying patches in OpenBSD</h2>
d1648 1
a1648 1
<small>$OpenBSD: faq10.html,v 1.64 2002/02/05 23:24:13 nick Exp $</small>
@


1.64
log
@
Updated adduser output in #AnonFTP section.  ok ericj@@
@
text
@d129 1
a129 1
<i>/etc/rc.shutdown</i>. To get a look of how the rc(8) procedure works, here is a the flow:
d1405 1
a1405 1
#       $OpenBSD: faq10.html,v 1.63 2002/01/27 22:44:34 nick Exp $
d1625 1
a1625 1
<small>$OpenBSD: faq10.html,v 1.63 2002/01/27 22:44:34 nick Exp $</small>
@


1.63
log
@
Link Cleanup:  Retargeting links, test all links,
man page references, update and repair as needed.
ok ericj@@
@
text
@d1219 1
a1219 1
Use an empty password? (y/n) [y]: <strong>y</strong>
d1405 1
a1405 1
#       $OpenBSD: faq10.html,v 1.62 2002/01/21 20:28:25 nick Exp $
d1625 1
a1625 1
<small>$OpenBSD: faq10.html,v 1.62 2002/01/21 20:28:25 nick Exp $</small>
@


1.62
log
@
Update copyright notice to 2002.  ok ericj@@
@
text
@d22 2
a23 2
<li><A HREF="#DupFS"         >10.2 - How do I duplicate a filesystem?</A></li>
<li><A HREF="#rc"            >10.3 - How do I start daemons with the system? ( Overview of rc(8) )</A></li>
d55 1
a55 1
If you are adding a new user with <A HREF="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&apropos=0&sektion=8&format=html">adduser(8)</a>,
d163 1
a163 1
<a href="faq10.html#10.12">Anonymous FTP FAQ</a> to read more about this. ) In any case, each line also has a
d176 1
a176 1
<a href="#10.6">SSL FAQ</a> or <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&sektion=8&format=html">ssl(8)</a>)
d396 1
a396 1
generates /etc/passwd dynamically with <A HREF="http://www.openbsd.org/cgi-bin/man.cgi?query=pwd_mkdb&sektion=8&apropos=0">pwd_mkdb(8)</a>.  The main password
d450 3
a452 3
meet your needs. For further instructions on adding users read the
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser_proc&sektion=8&format=html">adduser_proc(8)</a>
man page. Here is an example user, <b>testuser</b> being added to a system. His/Her $HOME directory will be placed in <i>/home/testuser</i>, and given the group <b>guest</b>, and the shell <i>/bin/ksh</i>.
d821 1
a821 1
<li><a href="http://www.freebsd.org/handbook/kerberos.html">The FreeBSD handbook</a> </li>
d871 1
a871 1
Next we will run <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kbd_init&sektion=8&format=html">kdb_init(8)</a> 
d1064 2
a1065 1
privileges to a specific principal, see <a href="http://www.freebsd.org/handbook/kerberos.html#AEN4957">the FreeBSD Handbook</a>.
d1405 1
a1405 1
#       $OpenBSD: faq10.html,v 1.61 2002/01/13 00:00:32 ericj Exp $
d1625 1
a1625 1
<small>$OpenBSD: faq10.html,v 1.61 2002/01/13 00:00:32 ericj Exp $</small>
@


1.61
log
@
change followed link color, so it is more visible in all netscape,
IE, konqueror

from Nick Holland <nick@@holland-consulting.net>
@
text
@d9 1
a9 1
<meta name= "copyright"     content= "This document copyright 1998-2001 by OpenBSD.">
d941 1
a941 1
Expiration date (enter yyyy-mm-dd) [ 1999-12-31 ] ? <strong>2001-12-31</strong>
d959 1
a959 1
Expiration date (enter yyyy-mm-dd) [ 1999-12-31 ] ? <strong>2001-12-31</strong>
d1404 1
a1404 1
#       $OpenBSD: faq10.html,v 1.60 2002/01/12 01:39:29 ericj Exp $
d1624 1
a1624 1
<small>$OpenBSD: faq10.html,v 1.60 2002/01/12 01:39:29 ericj Exp $</small>
@


1.60
log
@
re-target the faq.
Change internal links from #10.XX -> #somethingmeaningfull
This will probobly break some external links to us, but will allow
us greater mobility in moving internal things around without breaking
links in the future.

work by Nick Holland <nick@@holland-consulting.net>
@
text
@d12 1
a12 1
<body bgcolor= "#ffffff" text= "#000000" link= "#23238E">
d1404 1
a1404 1
#       $OpenBSD: faq10.html,v 1.59 2001/12/30 11:37:25 jufi Exp $
d1624 1
a1624 1
<small>$OpenBSD: faq10.html,v 1.59 2001/12/30 11:37:25 jufi Exp $</small>
@


1.59
log
@
trying to let the FAQ be more 3.0-compliant.
much more work is left to be done.
@
text
@d21 14
a34 14
<li><a href="faq10.html#10.1">10.1 - When I try to su to root it says that I'm in the wrong group</a></li>
<li><A HREF="faq10.html#10.2">10.2 - How do I duplicate a filesystem?</A></li>
<li><A HREF="faq10.html#10.3">10.3 - How do I start daemons with the system? ( Overview of rc(8) )</A></li>
<li><a href="faq10.html#10.4">10.4 - Why do users get relaying access denied when they are remotely sending mail through my OpenBSD system?</a></li>
<li><a href="faq10.html#10.5">10.5 - I've set up POP, but I get errors when accessing my mail through POP. What can i do?</a></li>
<li><a href="faq10.html#10.6">10.6 - Setting up a Secure HTTP Server using SSL(8)</a></li>
<li><a href="faq10.html#10.7">10.7 - I made changes to /etc/passwd with vi(1), but the changes didn't seem to take place. Why?</a></li>
<li><a href="faq10.html#10.8">10.8 - How do I add a user? or delete a user?</a></li>
<li><a href="faq10.html#10.9">10.9 - How do I create a ftp-only account?</a></li>
<li><a href="faq10.html#10.10">10.10 - Setting up user disk quotas</a></li>
<li><a href="faq10.html#10.11">10.11 - Setting up Kerberos Client/Server</a></li>
<li><a href="faq10.html#10.12">10.12 - Setting up an Anonymous FTP Server</a></li>
<li><a href="faq10.html#10.13">10.13 - Confining users to their home dir's in ftpd(8).</a>
<li><a href="faq10.html#10.14">10.14 - Applying patches in OpenBSD.</a>
d42 2
a43 1
<a name= "10.1">
a44 1
</a>
d73 2
a74 1
<a name= "10.2">
a75 1
</a>
d102 3
a104 1
<p><a name="10.3">
d106 1
a106 1
</a></p>
d212 2
a213 1
<a name="10.4">
a214 1
</a>
d262 1
d264 3
a266 1
<a name="10.5">
a267 1
</a>
d317 2
a318 1
<a name="10.6">
d389 2
a390 1
<a name="10.7">
d427 2
a428 1
<a name="10.8">
d629 2
a630 1
<a name="10.9">
d647 2
a648 1
<a name="10.10">
d779 2
a780 1
<a name="10.11">
d1173 2
a1174 1
<a name="10.12">
d1335 1
d1404 1
a1404 1
#       $OpenBSD: faq10.html,v 1.58 2001/11/02 10:54:56 mpech Exp $
d1447 1
d1624 1
a1624 1
<small>$OpenBSD: faq10.html,v 1.58 2001/11/02 10:54:56 mpech Exp $</small>
@


1.58
log
@xntpd -> ntpd
Spotted by grange@@grange.ru

wim@@ ok
@
text
@d1392 1
a1392 1
#       $OpenBSD: faq10.html,v 1.57 2001/10/30 17:06:16 mpech Exp $
d1500 1
a1500 1
$ <b>cvs -danoncvs@@anoncvs5.usa.openbsd.org:/cvs co -rOPENBSD_2_7_BASE src/libexec/talkd/</b>
d1611 1
a1611 1
<small>$OpenBSD: faq10.html,v 1.57 2001/10/30 17:06:16 mpech Exp $</small>
@


1.57
log
@fix sending 'HangUP' signal to sendmail.

ericj@@ ok
@
text
@d803 2
a804 2
An easy way to synchronize system clocks is with xntpd, available in the ports tree at
<strong>/usr/ports/sysutils/xntpd/</strong>.
d1392 1
a1392 1
#       $OpenBSD: faq10.html,v 1.56 2001/08/25 09:31:33 jufi Exp $
d1611 1
a1611 1
<small>$OpenBSD: faq10.html,v 1.56 2001/08/25 09:31:33 jufi Exp $</small>
@


1.56
log
@
copyright extended to 2001
@
text
@d248 1
a248 1
# <Strong>kill -HUP `cat /var/run/sendmail.pid`</strong>
d1392 1
a1392 1
#       $OpenBSD: faq10.html,v 1.55 2001/08/08 21:06:32 jsyn Exp $
d1611 1
a1611 1
<small>$OpenBSD: faq10.html,v 1.55 2001/08/08 21:06:32 jsyn Exp $</small>
@


1.55
log
@giant spelling/grammar clean-up; ok millert@@
@
text
@d9 1
a9 1
<meta name= "copyright"     content= "This document copyright 1998,1999 by OpenBSD.">
d1392 1
a1392 1
#       $OpenBSD: faq10.html,v 1.54 2001/06/09 16:39:04 pvalchev Exp $
d1611 1
a1611 1
<small>$OpenBSD: faq10.html,v 1.54 2001/06/09 16:39:04 pvalchev Exp $</small>
@


1.54
log
@typos, spelling and link fixes; dstoikov@@biosgroup.com
@
text
@d182 1
a182 1
<i>/etc/rc.local</i> file. For example, I've installed a daemon in which lie's at /usr/local/sbin/daemonx. I
d784 1
a784 1
more than a 5 minute time skew, you will receive wierd errors that
d1392 1
a1392 1
#       $OpenBSD: faq10.html,v 1.53 2001/04/22 05:33:54 austin Exp $
d1475 1
a1475 1
Patches for the OpenBSD Operating System are distributed as diff's, which
d1514 1
a1514 1
Also, for those users that bought official OpenBSD CD's, you can get the source code directly off of the CD. Refer to the CD insert on how to extract the source from the CD. In which case you won't need to obtain the source via anoncvs.
d1611 1
a1611 1
<small>$OpenBSD: faq10.html,v 1.53 2001/04/22 05:33:54 austin Exp $</small>
@


1.53
log
@Correct two typos.
@
text
@d206 1
a206 1
the equivlent of &quot;shutdown -p&quot;.
d1392 1
a1392 1
#       $OpenBSD: faq10.html,v 1.52 2001/03/26 17:14:07 todd Exp $
d1611 1
a1611 1
<small>$OpenBSD: faq10.html,v 1.52 2001/03/26 17:14:07 todd Exp $</small>
@


1.52
log
@spelling
@
text
@d1392 1
a1392 1
#       $OpenBSD: faq10.html,v 1.51 2001/01/27 22:19:47 ericj Exp $
d1467 1
a1467 1
directly against the latest releases source tree. Patches against the
d1493 1
a1493 1
To retrieve the current releases source code using
d1510 1
a1510 1
In this case, the CVS path was <i>src/libexec/talkd/</i>. Always check out the revision of OPENBSD_version_number_BASE. Without &quot;BASE&quot; you will be checking out the stable branch, which might contain other changes that will interfere. If you are already tracking the patch branch, the patches should already be in that source, however you should always check and make sure. You can always look at <a href="../plus.html">http://www.openbsd.org/plus.html</a> to see which patches have been applied to the patch branch. If the patches haven't been applied yet, you will need to grab the latest release source using the commands above.
d1611 1
a1611 1
<small>$OpenBSD: faq10.html,v 1.51 2001/01/27 22:19:47 ericj Exp $</small>
@


1.51
log
@
some html cleanup; from mpech@@prosoft.org.lv
@
text
@d244 1
a244 1
causes most daemons to re-read their configration file):
d292 1
a292 1
Of course, making /var/mail writeable by group mail opens up some vague and
d298 1
a298 1
that it locks in (although then the locking would only be valueable for the
d309 1
a309 1
would be sufficent.
d546 1
a546 1
The above settings are what will be set unless you specify different with command line options. For example, in our case, we want the user to go to the group <b>guest</b>, not <b>users</b>. One more little hurdle with adding users, is that passwords must be specified on the commandline. This is, the encrypted passwords, so you must first use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=encrypt&sektion=1&format=html">encrypt(1)</a> utility to create the password. For example: OpenBSD's passwords by default use the Blowfish algorigthm for 6 rounds. Here is an example line to create an encrypted password to specify to useradd(8).
d565 1
a565 1
<b>Note:</b> Make sure to use '' around the passord string, not &quot;&quot; as the shell will interpret these before sending it to user(8). In addition to that, make sure you specify the <b>-m</b> option if you want the user's home directory created and the files from <i>/etc/skel</i> copied over.
d569 1
a569 1
To see that the user was created correctly, we can use many different utilites. Below are a few commands you can use to quickly check that everything was created correctly.
d610 1
a610 1
To remove users with the user(8) hierarchy of commands, you will use userdel(8). This is a very simple, yet useable command. To remove the user created in the last example, simply:
d1175 1
a1175 1
To start off, you need to have an account on your system of "ftp". This account shouldn't have a useable
d1392 1
a1392 1
#       $OpenBSD: faq10.html,v 1.50 2000/12/26 18:45:20 ericj Exp $
d1611 1
a1611 1
<small>$OpenBSD: faq10.html,v 1.50 2000/12/26 18:45:20 ericj Exp $</small>
@


1.50
log
@
Cleanup section on POP, and remove old RSA cruft. Suggestions by
<christoph.haas@@Sun.COM> & <anderm3@@cs.rpi.edu>
@
text
@d98 1
a99 1
</PRE>
d157 1
a157 1
</ul></pre>
d169 1
a169 1
</ul></pre>
d190 1
a190 1
</ul></pre>
d199 1
a199 1
</ul></pre>
d379 1
a379 1
should be able to start <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=httpd&sektion=8&format=html">httpd(8)</a> with the <b>-DSSL</b flag, enabling https
d506 1
a506 1
<h3>10.8.2 - Adding users via user(8)</a></h3>
d685 1
a685 1
</pre>
a817 1
</ul>
d1092 1
a1092 1
</pre></strong>
d1134 1
a1134 1
</pre></strong>
d1307 1
a1307 1
</ul></pre>
d1380 1
a1380 1
</ul></pre>
d1392 1
a1392 1
#       $OpenBSD: faq10.html,v 1.49 2000/10/18 15:15:29 ericj Exp $
d1397 1
a1397 1
</ul></pre>
d1432 1
a1432 1
</ul></pre>
d1611 1
a1611 1
<small>$OpenBSD: faq10.html,v 1.49 2000/10/18 15:15:29 ericj Exp $</small>
@


1.49
log
@
some added content for patch faq.
suggestions by Rodney Hopkins <rhopkins@@sunflower.com>
and Bengt Kleberg <bengt@@softwell.se>.
@
text
@d303 10
d318 2
a319 10
Starting with OpenBSD 2.6, OpenBSD ships with an SSL-ready httpd. However, because of various patents, 
some libaries cannot be shipped. So, to be able to use RSA certificates you must install extra libraries onto
your system. There are two sets of these libraries, depending on your location in the world. (<strong>NOTE:</strong> Those who did an FTP install, or any network install most likely have already installed this onto your system). For people living outside of the United States, you should use a package called "<b>ssl26.tgz</b>", Those living in the United States must use "<b>sslUSA26.tgz</b>". These are packages, therefore installed using the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pkg_add&sektion=1&format=html">pkg_add(1)</a> utility. For example, To install the NON-U.S. Resident version of the libraries use the following line where ${arch} is your architecture. (<strong>NOTE:</strong>: This is not available for the Alpha architecture due to its lack of shared libs.)
</p> 

<div style="margin-left: 2em">
<pre>
# <strong>pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/2.6/packages/${arch}/ssl26.tgz</strong>
</pre>
</div>
d1393 1
a1393 1
#       $OpenBSD: faq10.html,v 1.48 2000/10/11 02:07:31 ericj Exp $
d1612 1
a1612 1
<small>$OpenBSD: faq10.html,v 1.48 2000/10/11 02:07:31 ericj Exp $</small>
a1615 1

@


1.48
log
@add faq on applying patches in OpenBSD
@
text
@d1391 1
a1391 1
#       $OpenBSD: faq10.html,v 1.47 2000/07/09 00:42:27 ericj Exp $
d1499 1
a1499 1
$ cvs -danoncvs@@anoncvs5.usa.openbsd.org:/cvs co -rOPENBSD_2_7_BASE src/libexec/talkd/
d1509 5
a1513 1
In this case, the CVS path was <i>src/libexec/talkd/</i>. Always check out the revision of OPENBSD_version_number_BASE. Without &quot;BASE&quot; you will be checking out the stable branch, which might contain other changes that will interfere.
d1551 1
a1551 1
$ <b>patch -p0&lt;/patch/to/026_talkd.patch</b>
d1610 1
a1610 1
<small>$OpenBSD: faq10.html,v 1.47 2000/07/09 00:42:27 ericj Exp $</small>
@


1.47
log
@fix some error pointed out by Paul B <chronological@@yahoo.com>
@
text
@d34 1
d1391 1
a1391 1
#       $OpenBSD: faq10.html,v 1.46 2000/07/03 15:22:53 ericj Exp $
d1434 161
d1606 1
a1606 1
<small>$OpenBSD: faq10.html,v 1.46 2000/07/03 15:22:53 ericj Exp $</small>
d1610 1
@


1.46
log
@fix path
@
text
@d626 1
a626 1
the user set his shell to /bin/false, they will not be able log in
d1179 1
a1179 1
We also need to add /bin/false to our <i>/etc/shells</i>, this is the &quot;shell&quot; that we will be giving to
d1181 1
a1181 1
can simply <i>echo /bin/false &gt;&gt; /etc/shells</i>. Also if you wish for that shell to show up during the adduser
d1390 1
a1390 1
#       $OpenBSD: faq10.html,v 1.45 2000/06/14 00:56:26 miod Exp $
d1444 1
a1444 1
<small>$OpenBSD: faq10.html,v 1.45 2000/06/14 00:56:26 miod Exp $</small>
@


1.45
log
@<,> => &lt;,&gt;
@
text
@d625 1
a625 1
add <i>/bin/false</i> into <strong>/etc/shells</strong>. Then when you create
d1390 1
a1390 1
#       $OpenBSD: faq10.html,v 1.44 2000/05/17 23:50:40 reinhard Exp $
d1444 1
a1444 1
<small>$OpenBSD: faq10.html,v 1.44 2000/05/17 23:50:40 reinhard Exp $</small>
@


1.44
log
@/etc/sendmail.cf->/etc/mail/sendmail.cf
#1 commit ;)
@
text
@d938 1
a938 1
<Not found>, Create [y] ? <strong>y</strong>
d1000 1
a1000 1
<Not found>, Create [y] ? <strong>y</strong>
d1390 1
a1390 1
#       $OpenBSD: faq10.html,v 1.43 2000/05/12 19:39:56 ericj Exp $
d1444 1
a1444 1
<small>$OpenBSD$</small>
@


1.43
log
@signify when certain commands need to be run as root
@
text
@d219 1
a219 1
# <strong>cat /etc/sendmail.cf | grep relay-domains</strong>
d1390 1
a1390 1
#       $OpenBSD: faq10.html,v 1.42 2000/05/12 19:37:33 ericj Exp $
d1444 1
a1444 1
<small>$OpenBSD: faq10.html,v 1.42 2000/05/12 19:37:33 ericj Exp $</small>
@


1.42
log
@remove whitespace
@
text
@d611 1
a611 1
# userdel -r testuser
d1390 1
a1390 1
#       $OpenBSD: faq10.html,v 1.41 2000/05/12 19:12:56 ericj Exp $
d1444 1
a1444 1
<small>$OpenBSD: faq10.html,v 1.41 2000/05/12 19:12:56 ericj Exp $</small>
@


1.41
log
@Fix a few minor layouts, expand adding users faq to include user(8)
@
text
@d602 1
a602 1
</pre></ul>.
d1390 1
a1390 1
#       $OpenBSD: faq10.html,v 1.40 2000/03/25 00:05:04 wvdputte Exp $
d1444 1
a1444 1
<small>$OpenBSD: faq10.html,v 1.40 2000/03/25 00:05:04 wvdputte Exp $</small>
@


1.40
log
@A lot of typo's and grammar errors, spotted by Horacio and me
@
text
@d423 9
d435 1
a435 1
<strong>/etc/adduser.conf</strong>. You can add users by hand, but this is
d438 1
a438 1
databases. It will create the entries and HOME directories for you. It can
d442 1
a442 1
man page.
d445 35
d483 1
a483 1
crontab(1) entries, their HOME dir (if it is owned by the user), and their mail.
d485 131
a615 1
entries.
d622 1
a622 1
<p>
d625 1
a625 1
add /bin/false into <strong>/etc/shells</strong>. Then when you create
d627 2
a628 2
interactively, but will be able to use ftp capabilities. adduser(8)
will give them a home dir by default of /home/<user>. If this is what you
d631 2
a632 2
see files in their home directory by adding their username to /etc/ftpchroot.
Using the -A option to ftpd, you can allow only ftpchroot logins!
d656 1
a656 1
GENERIC kernel. After this you need to mark in /etc/fstab
d1390 1
a1390 1
#       $OpenBSD: faq10.html,v 1.39 2000/02/09 23:31:03 chris Exp $
d1444 1
a1444 1
<small>$OpenBSD: faq10.html,v 1.39 2000/02/09 23:31:03 chris Exp $</small>
@


1.39
log
@fixes to broked html
@
text
@d25 1
a25 1
<li><a href="faq10.html#10.5">10.5 - I've set up POP, but I get errors when accessing my mail thru POP. What can i do?</a></li>
d261 1
a261 1
<h2>10.5 - I've set up POP, but users have trouble accessing mail thru POP. What can I do?</h2>
d560 1
a560 1
This will go thru /etc/fstab to turn on the filesystems with quota
d1216 1
a1216 1
#       $OpenBSD: faq10.html,v 1.38 2000/01/20 23:03:06 ericj Exp $
d1270 1
a1270 1
<small>$OpenBSD: faq10.html,v 1.38 2000/01/20 23:03:06 ericj Exp $</small>
@


1.38
log
@update ssl section.
@
text
@d155 1
a155 1
	ftpd_flags=NO           # for non-inetd use: ftpd_flags="-D"
d370 1
a370 1
       -signkey /etc/ssl/private/server.key -out /etc/ssl/server.crt
d1216 1
a1216 1
#       $OpenBSD: faq10.html,v 1.37 1999/12/20 22:33:13 chris Exp $
d1270 1
a1270 1
<small>$OpenBSD: faq10.html,v 1.37 1999/12/20 22:33:13 chris Exp $</small>
@


1.37
log
@Rename system administration(too long) to system management so that the left
hand column on the PDF version of the FAQ lines up perfectly.
@
text
@d307 15
a321 15
This will take you through all the steps it takes to set up your own
Secure HTTP server. Since the OpenBSD 2.5 release, OpenBSD has shipped
with SSLeay. Because of patented RSA algorigthms, these cannot be
shipped with OpenBSD. libssl includes support for SSL version 2, SSL
version 3, and TLS version 1. So for now, because of patent
restrictions, OpenBSD must ship without a fully-functional libssl. But it
is still completely useable. If you are able to use the RSA patented
libraries, you can easily upgrade your libssl with a command like this.
</p>
<ul>
<kbd># <strong>pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/</strong>${ver}<strong>/packages/</strong>${arch}<strong>/libssl-1.1.tgz</strong> </kbd>
</ul>
Where ${ver} is the OpenBSD version number, and ${arch} is your
architecture.
</p>
d324 1
a324 5
The steps shown here are taken in part from the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&apropos=0&sektion=8&format=html">ssl(8)</a>
man page. Refer to it for further information. This FAQ entry
only outlines how to create an RSA certificate for web servers, not a DSA
server certificate. To find out how to do so, please refer to the ssl(8)
man page.
d327 6
d334 2
a335 3
Here is how you create your server key and certificate. These will go into
<strong>/etc/ssl/private/</strong>. To use the RSA features, you must have
upgraded your libssl. Now you can create your key.  Using ssleay,
d338 3
a340 2
<ul>
<pre># <strong>ssleay genrsa -out /etc/ssl/private/server.key 1024</strong>
d342 1
a342 1
</ul>
d345 3
a347 4
This will create a key of 1024 bits. Next you need to create a
<strong>Certificate Signing Request</strong> which is used to get a
<strong>CA</strong> or <strong>Certificate Authority</strong> to sign your
key. Here is the command to do so.
d350 5
a354 3
<ul>
<strong># ssleay req -new -key /etc/ssl/private/server.key -out /etc/ssl/private/server.csr</strong>
</ul>
d357 4
a360 3
You would now give /etc/ssl/private/server.csr to the <strong>CA</strong>
to get it signed. Or you could also sign the certificate for yourself.
Here is how you would do this.
a362 4
<ul>
<strong># ssleay x509 -req -days 365 -in /etc/ssl/private/server.csr -signkey /etc/ssl/private/server.key -out /etc/ssl/server.crt</strong>
</ul>

d364 1
a364 5
This will sign your key, and it will be valid for up to 365 days. With
this done you can now start the httpd server. To start httpd(8) with ssl
you must start the daemon with the -DSSL flag. You can start this on boot
in <strong>/etc/rc.conf</strong> by changing the httpd line to look like
so:
d367 1
a367 1
<ul>
d369 2
a370 1
httpd_flags="-DSSL"
d372 1
a372 1
</ul>
d375 4
a378 2
This server will run on port 443.
</p>
d1216 1
a1216 1
#       $OpenBSD: faq10.html,v 1.36 1999/12/06 21:42:08 chris Exp $
d1270 1
a1270 1
<small>$OpenBSD: faq10.html,v 1.36 1999/12/06 21:42:08 chris Exp $</small>
@


1.36
log
@Changes for consistency
@
text
@d3 1
a3 1
<title>10.0 - System Administration</title>
d16 1
a16 1
<h2><font color=#e00000>10.0 - System Administration</font><hr></h2>
d23 1
a23 1
<li><A HREF="faq10.html#10.3">10.3 - How do i start daemons with the system? ( Overview of rc(8) )</A></li>
d102 1
a102 1
<h2>10.3 - How do i start daemons with the system? ( Overview of rc(8) )</h2>
d1217 1
a1217 1
#       $OpenBSD: faq10.html,v 1.35 1999/11/11 07:04:56 ericj Exp $
d1271 1
a1271 1
<small>$OpenBSD: faq10.html,v 1.35 1999/11/11 07:04:56 ericj Exp $</small>
@


1.35
log
@more ftpd info
@
text
@d3 1
a3 1
<title>OpenBSD FAQ: 10.0 - System Administration</title>
d1217 1
a1217 1
#       $OpenBSD: ftpchroot,v 1.3 1996/07/18 12:12:47 deraadt Exp $
d1271 1
a1271 1
<small>$OpenBSD: faq10.html,v 1.34 1999/11/06 19:07:38 ericj Exp $</small>
@


1.34
log
@corrections to faq10.4. Claus Assmann <ca@@zardoc.endmail.org>
@
text
@d33 1
d1149 111
d1271 1
a1271 1
<small>$OpenBSD: faq10.html,v 1.33 1999/10/31 18:05:43 ericj Exp $</small>
a1274 1

@


1.33
log
@dugsong's krb4 ssh patches are in OpenSSH now
@
text
@d230 1
a230 1
If this file doesn't exist, create it.  You will need to enter the users
d235 3
a237 2
.domain.com    #Allow any <xyz>.domain.com user to send mail through us
sub.domain.com #Allow sub.domain.com to send mail through us
d243 1
d245 8
d254 3
a256 3
<pre>
# <Strong>kill -HUP `cat /var/run/sendmail.pid`</strong>
</pre>
d258 1
a258 2
<br>
<p>
d1159 1
a1159 1
<small>$OpenBSD: faq10.html,v 1.32 1999/10/22 20:40:46 chris Exp $</small>
@


1.32
log
@Accuracy
@
text
@d972 1
a972 1
ticket passing, use Dug Song's <a href="http://www.monkey.org/~dugsong/ssh-afs-kerberos.html">krb4 SSH patches</a>.
d1150 1
a1150 1
<small>$OpenBSD: faq10.html,v 1.31 1999/10/07 20:53:58 ericj Exp $</small>
@


1.31
log
@a much better explaination of how rc(8) works, and how admins can take advantage of it
@
text
@d437 1
a437 1
<h2>10.9 - How do I create an ftp-only account?</h2>
d447 3
a449 1
directory you wish.
d990 4
a993 3
To start off, you need to have an account on your system of ''ftp''. This account shouldn't have a useable
password, and here we will set the login directory to /home/ftp. When using anonymous ftp, the ftp daemon will
chroot itself to /home/ftp. To read up more on that, read the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftpd&sektion=8&format=html">ftp(8)</a> and 
d1049 2
d1052 1
a1052 4
<li><i>/home/ftp/bin</i> - This directory will hold binaries that can be executed from within the chrooted ftpd
environment. This directory should be mode 511. Anonymous FTP only needs ls(1) to operate correctly. So you need
to copy /bin/ls to /home/ftp/bin. <i>~ftp/bin/ls</i> needs to be mode 111, which is executable only.</li>
<li><i>/home/ftp/etc</i> - Directory to hold user information. You should copy /etc/pwd.db and /etc/group to this
d1054 3
a1056 3
names as opposed to numbers. The password fields in pwd.db will not be used.</li>
<li><i>/home/ftp/pub</i> - This is the directory to place files in which you wish to share. This directory should
also be mode 555.</li>
a1071 1
dr-x--x--x  2 root  ftp    512 Jul  6 11:33 bin
a1074 6
ftp/bin:
total 178
dr-x--x--x  2 root  ftp     512 Jul  6 11:33 .
dr-xr-xr-x  5 root  ftp     512 Jul  6 11:33 ..
---x--x--x  1 root  ftp  167936 Jul  6 11:33 ls

d1150 1
a1150 1
<small>$OpenBSD: faq10.html,v 1.30 1999/09/24 01:46:13 ericj Exp $</small>
@


1.30
log
@re-organization of the faq, based greatly on the recent changes to the main web page. This way will hopefully allow for greater expansion and readability. Some of the numbers have changed. sorry.
@
text
@d23 1
a23 1
<li><A HREF="faq10.html#10.3">10.3 - How do I get daemons like httpd and sendmail to start up with the system?</A></li>
d100 4
d105 2
a106 4
<a name="10.3">
<h2>10.3 - How do I get httpd, sendmail, etc to startup with the
system?</h2>
</a>
a108 6
<p>
OpenBSD uses rc-style startup to control starting applications with the
system. For common daemons you can simply edit 
<a href="http://www.openbsd.org/cgi-bin/cvsweb/src/etc/rc.conf?rev=1.35">/etc/rc.conf</a>.
<br>
For example: To have ftpd started at boot time, change the ftpd entry from:
d110 10
a119 1
ftpd_flags=NO<bR>
d122 5
a126 1
to:
d128 14
a141 2
<ul>
ftpd_flags="-D"
d143 20
d165 3
d170 4
a173 1
You can add any flags that you wish ftpd to start with.
d176 2
d179 4
a182 2
If you have your own daemons that you want to be started, here is a
simple entry that you can put into /etc/rc.local.
d184 3
a186 4
<ul>
<pre>
if [ -x /usr/local/sbin/mydaemon ]; then
        echo -n ' mydaemon';       /usr/local/sbin/mydaemon
d188 12
a199 2
</pre>
</ul>
d201 4
a204 1
Once in there, it will come up with the system each time.
d1155 1
a1155 1
<small>$OpenBSD: faq10.html,v 1.29 1999/09/07 18:30:17 ericj Exp $</small>
@


1.29
log
@cleanup & repair
@
text
@d13 2
d16 1
a16 5
<font color= "#0000e0">
<a href= "index.html">[Back to Main Index]</a>
<a href= "faq9.html">[To Section 9.0 - Migrating from Linux]</a>
<a href= "faq11-2.4.html">[To Section 11.0 - OpenBSD 2.4 Specific Information]</a>
</font>
d20 15
a34 1
<h1>10.0 - System Administration</h1>
d36 2
a37 1
</p>
d1084 1
a1084 1
<a href= "faq11-2.4.html">[To Section 11.0 - OpenBSD 2.4 Specific Information]</a>
d1092 1
a1092 1
<small>$OpenBSD: faq10.html,v 1.28 1999/08/31 00:49:21 chris Exp $</small>
@


1.28
log
@proper naming for 2.4 faq entries
@
text
@a100 1
<tt>
a101 1
</tt>
a106 1
<tt>
a107 1
</tt>
d1079 1
a1079 1
<small>$OpenBSD: faq10.html,v 1.27 1999/08/02 15:31:04 ericj Exp $</small>
@


1.27
log
@corrections  <D.H.Davis@@bath.ac.uk>
@
text
@d17 1
a17 1
<a href= "faq24.html">[To Section 11.0 - OpenBSD 2.4 Specific Information]</a>
d1075 1
a1075 1
<a href= "faq24.html">[To Section 11.0 - OpenBSD 2.4 Specific Information]</a>
d1083 1
a1083 1
<small>$OpenBSD: faq10.html,v 1.26 1999/07/23 14:02:49 ericj Exp $</small>
@


1.26
log
@fix's <jeremie@@umich.edu>
@
text
@d99 1
a99 1
For example: To have ftpd started on boot change the ftpd entry from:
d230 1
a230 1
restictions, OpenBSD must ship without a fully-functional libssl. But it
d244 1
a244 1
only outlines how to creating an RSA certificate for web servers, not a DSA
d250 1
a250 1
Here is how you create your server key and certificate. These will go to
d346 1
a346 1
the recommended way to addusers. adduser(8) allows for consistancy checks
d348 1
a348 1
databases. It will create then entries for you, and HOME directory, and
d481 1
a481 1
infoformation. When called with no arguments will give your quota statistics. For
d523 1
a523 1
and servers much have their system clocks synchronized. If there is
d568 1
a568 1
The two files we are concerned about are <i>krb.realms</i> and <i>krb.conf</i>. Lets start off with <i>krb.conf</i>.
d910 1
a910 1
will give an overview of setting up the anonymous FTP server, and it's logging, etc. 
d922 1
a922 1
the ftp user. This will allow them not to login, even though we will give them an empty password. To do this you
d1083 1
a1083 1
<small>$OpenBSD: faq10.html,v 1.25 1999/07/19 14:39:04 ericj Exp $</small>
@


1.25
log
@correct command
@
text
@d633 22
d1083 1
a1083 1
<small>$OpenBSD: faq10.html,v 1.24 1999/07/07 16:45:52 ericj Exp $</small>
@


1.24
log
@explain better
@
text
@d82 1
a82 1
# <strong>cd /SRC; tar cf - | (cd /DST; tar xpf - )</strong>
d1061 1
a1061 1
<small>$OpenBSD: faq10.html,v 1.23 1999/07/06 16:39:03 ericj Exp $</small>
@


1.23
log
@kerberos fixes, and addition of anonymous ftp setup
@
text
@d899 4
d1061 1
a1061 1
<small>$OpenBSD: faq10.html,v 1.22 1999/07/05 18:11:01 ericj Exp $</small>
@


1.22
log
@spelling and format fixes. <chris@@dqc.org>
@
text
@d695 40
d882 164
d1057 1
a1057 1
<small>$OpenBSD: faq10.html,v 1.21 1999/06/30 16:01:27 ericj Exp $</small>
@


1.21
log
@spelling fix's <ccsdhd@@bath.ac.uk>
@
text
@d28 1
a28 1
<h2>10.1 - Why does it say that I'm in the wrong group when I su to root?</h2>
d33 1
a33 2
With OpenBSD's <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&sektion=8&format=html">adduser(8)</a>
utility does not allow for you to add any users to the <kbd>&quot;wheel&quot;</kbd> group. This means that they must be added to
d35 1
a35 1
access to. On OpenBSD, users who are in the <kbd>"wheel"</kbd> group are allowed to use the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=su&apropos=0&sektion=1&format=html">
d39 5
d48 1
a48 1
<strong>wheel:*:0:root,ericj</strong>
a69 1
<strong>
d71 1
a71 1
# cd /SRC; dump 0f - . | (cd /DST; restore -rf - )
a72 1
</strong>
d82 1
a82 1
# cd /SRC; tar cf - | (cd /DST; tar xpf - )
d99 6
a104 1
For example: To have ftpd started on boot change - 
d106 1
d109 3
a111 5
<strong>
<pre>
ftpd_flags=NO -- > ftpd_flags="-D"
</pre>
</strong>
a124 1
<strong>
a129 1
</strong>
d144 1
a144 1

d146 1
a146 1
cat /etc/sendmail.cf | grep relay-domains
d148 1
d152 1
a152 1

d156 1
a156 1

d161 1
a161 1

d166 1
a166 1

d168 2
a169 1
Don't forget to:
d171 1
d173 1
a173 1
kill -1 `cat /var/run/sendmail.pid`
d175 1
a176 2


d187 1
d191 1
d194 1
a194 1
</p>
d203 1
d234 3
a236 3
<p>
<kbd># pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/${ver}/packages/${arch}/libssl-1.1.tgz </kbd>
<br>
d256 2
a257 1
<strong># ssleay genrsa -out /etc/ssl/private/server.key 1024</strong>
d338 1
a338 1
<h2>10.8 - What is the best way to add users? and delete them?</h2>
d365 1
a365 1
<h2>10.9 - How do i create an ftp-only account?</h2>
d391 2
a392 2
<li>1 - User Quotas</li>
<li>2 - Group Quotas</li>
d397 3
a399 3
The first step to setting up quotas is to make sure that <strong>option
QUOTA</strong> is in your Kernel Configuration. This option is in the
GENERIC kernel. After this you need to mark in <strong>/etc/fstab</strong>
d401 1
a401 1
<strong>userquota</strong> and <strong>groupquota</strong> should be used
d403 1
a403 1
<strong>quota.user</strong> and <strong>quota.group</strong> will be
d412 1
a412 1
<strong>/dev/wd0a / ffs rw,userquota=/var/quotas/quota.user 1 1</strong>
d426 1
a426 1
<strong># edquota ericj</strong>
a435 1
<strong>
a438 1
</strong>
d443 1
a443 1
To add limits, edit it to something similar to this:
a447 1
<strong>
a450 1
</strong>
d472 1
a472 3
<strong>
# quotaon -a
</strong>
d487 1
a487 3
<strong>
# quota ericj
</strong>
a495 1
<strong>
a500 1
</strong>
d505 2
a506 1
off use <strong>quotaoff -a</strong>
d529 1
a529 1
<strong><pre>
d531 1
a531 1
</strong></pre>
d537 1
a537 1
<strong><pre>
d539 1
a539 1
</strong></pre>
d555 1
a555 1
<ul>Or the book
d560 1
a560 1
<h3>HOW TO SETUP THE KERBEROS IV REALM and SERVER</h3>
d567 1
a567 1
To start off, we will need to edit our configuration files. These files are located at <strong>/etc/kerberosIV/</strong>.
d572 2
a573 2
<strong><pre>
[root@@avalanche kerberosIV] cat krb.conf
d576 1
a576 1
</strong></pre>
d580 1
a580 1
As you can see, this tells kerberos that the domain is <strong>CIARASYSTEMS.COM</strong> (or logical realm) and that
d586 2
a587 2
<strong><pre>
[root@@avalanche kerberosIV] cat krb.realms
d590 1
a590 1
</strong></pre>
d596 2
a597 2
So in this example, avalanche is the hostname of a computer on the <strong>CIARASYSTEMS.COM</strong> realm. And
.ciarasystems.com is the domain name on the realm <strong>CIARASYSTEMS.COM</strong>. Again, for further information read
d607 2
a608 2
<strong><pre>
[root@@avalanche kerberosIV] kdb_init
d613 1
a613 1
Enter Kerberos master password:
d616 1
a616 1
</strong></pre>
d625 2
a626 2
<strong><pre>
[root@@avalanche kerberosIV] kstash
d637 2
a638 2
Principal name: passwd
Instance: avalanche
d640 1
a640 1
<Not found>, Create [y] ? y
d643 1
a643 1
New Password:                <----- Use 'RANDOM' as password
d647 1
a647 1
Random password [y] ? y
d650 1
a650 1
Expiration date (enter yyyy-mm-dd) [ 1999-12-31 ] ? 2001-12-31
d656 2
a657 2
Principal name: rcmd
Instance: avalanche
d659 1
a659 1
<Not found>, Create [y] ? y
d661 1
a661 1
New Password:                 <----- Use 'RANDOM' as password
d665 1
a665 1
Random password [y] ? y
d668 1
a668 1
Expiration date (enter yyyy-mm-dd) [ 1999-12-31 ] ? 2001-12-31
d672 1
a672 1
Principal name:               <----- Hit &lt;ENTER&gt; to end
d674 1
a674 1
</strong></pre>
d686 2
a687 2
<strong><pre>
[root@@avalanche kerberosIV] ext_srvtab avalanche
d695 1
a695 1
</strong></pre>
d704 4
a707 2
In /etc/rc.conf, set:<br>
<strong>kerberos_server=YES</strong>
d709 3
a711 2
<ul>In /etc/inetd.conf uncomment:
<pre><strong>
d716 1
a716 1
</pre></strong>
d721 5
a725 5
<pre><strong>
[root@@avalanche /] kill -HUP `cat /var/run/inetd.pid`
[root@@avalanche /] /usr/libexec/kerberos >> /var/log/kerberos.log &
[root@@avalanche /] /usr/libexec/kadmind -n >> /var/log/kadmind.log &
</pre></strong>
d736 1
a736 1
<h3>HOW TO KERBERIZE YOUR CLIENT WORKSTATION</h3>
d740 1
a740 1
<strong>CIARASYSTEMS.COM</strong> realm, with avalanche.ciarasystems.com as the main server.
d749 2
a750 2
<pre><strong>
[root@@gatekeeper kerberosIV] cat krb.conf
d754 1
a754 1
[root@@gatekeeper kerberosIV] cat krb.realms
d757 1
a757 1
</pre></strong>
d765 2
a766 2
<pre><strong>
bash-2.03$ kinit
d769 1
a769 1
Kerberos name: jeremie
d779 2
a780 2
<pre><strong>
bash-2.03$ klist
d786 1
a786 1
</pre></strong>
d794 2
a795 2
<strong><pre>
bash-2.03$ telnet avalanche
d805 1
d808 2
a809 2

bash-2.03$ rlogin avalanche
d823 2
a824 2
<strong><pre>
bash-2.03$ kdestroy
d826 1
a826 1
bash-2.03$ rlogin avalanche
d830 1
a830 1
</strong></pre>
d853 1
a853 1
<small>$OpenBSD: faq10.html,v 1.20 1999/06/28 18:55:21 ericj Exp $</small>
@


1.20
log
@formatting
@
text
@d49 1
a49 1
If you are looking for a way to allow users limited access to superuser privliges, without putting them in the
d347 1
a347 1
utility. This will remove all existance of a user. It will remove any
d515 1
a515 1
KerberosIV is an pre-installed ocmponent of the default system. Here is
d757 1
a757 1
Now that is set up, we need to initalize kerberos. To obtain a ticket you use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kinit&sektion=1&format=html">kinit(1)</a>.
d848 1
a848 1
<small>$OpenBSD: faq10.html,v 1.19 1999/06/28 17:29:26 ericj Exp $</small>
@


1.19
log
@Fixes by <chris@@dqc.org> and <pattonme@@ra.pae.osd.mil> Also a kerberos section initially done by jeremie@@monkey.org
@
text
@d553 4
a556 1
<li><a href="http://web.mit.edu/kerberos/www/papers.html#krb4">Network Security Private Communication in a Public World [Kaufman, Perlman, Speciner, 1995]</a></li>
d671 1
a671 1
Principal name:               <----- Hit <ENTER> to end
d848 1
a848 1
<small>$OpenBSD: faq10.html,v 1.18 1999/06/28 05:45:25 ericj Exp $</small>
@


1.18
log
@explain better & fixups
@
text
@d408 2
a409 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=edquota&sektion=8&format=html">edquota(8)</a>
. A simple use is just <strong>edquota &lt user &gt</strong>. edquota(8)
d476 2
a477 2
Using a command of <strong>quota &lt; user &gt;</strong> will give that users
info. quota with no arguments will give your quota statistics. For
d505 326
a830 1
of use <strong>quotaoff -a</strong>
d845 1
a845 1
<small>$OpenBSD: faq10.html,v 1.17 1999/06/25 18:41:16 ericj Exp $</small>
@


1.17
log
@format much better
@
text
@d72 12
d115 1
a115 1
If you have your own daemon's that you want to be started, here is a
d158 2
a159 2
.domain.com    #if it is dynamic
sub.domain.com #if static
d173 1
a173 1
<h2>10.5 - I've set up POP, but users have trouble accessing mail thru POP. What can i do?</h2>
d178 2
a179 2
Most issues dealing with pop are accessing files, mainly temp files.
Some clients give errors such as:
d182 1
a182 1
-ERR Couldn't open temporary file, do you own it?K
d196 12
a207 2
Double check that the user owns his file in /var/mail , this should be
done by default.
d218 1
a218 1
with ssleay. Because of copyrighted RSA algorigthms, these cannot be
d220 1
a220 1
version 3, and TLS version 1. So for now, because of copyright
d223 1
a223 1
library's you can easily upgrade your libssl with a command like this.
d226 1
a226 1
<kbd>#pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/${ver}/packages/${arch}/libssl-1.1.tgz </kbd>
d233 3
a235 3
The steps shown here are taken pretty much from the <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&apropos=0&sektion=8&format=html">ssl(8)</a>
man page. So you can refer to that for further information. Also, this faq
will only go over creating a RSA certificate for web servers, not a DSA
d241 3
a243 4
I will no show how to create your key and certificate. These will go to
<strong>/etc/ssl/private/</strong>. This means that you will have to have
upgraded your libssl. Now we can create our key. You can do so with a line
like such:
d291 1
a291 1
<h2>10.7 - I edited /etc/passwd with vi(1), but the changes didn't seem to take place. Why?</h2>
d295 29
a323 8
Changes will not be made right away because OpenBSD has a user database
which needs updated when changes are made in <strong>/etc/passwd</strong>.
Tools are made to do this immediatly for you though. You should use
vipw(8) to edit the passwd file by hand. This will allow for checking of
the passwd file before entering it into the database and after the check
is done it will automatically execute pwd_mkdb(8). If you have made
changes, without using a tool such as vipw, you can run pwd_mkdb(8) by
hand.
d348 2
a349 2
crontab(1) entries, their HOME dir (if it is owned by the user). Along
with their <strong>/etc/passwd</strong> and <strong>/etc/group</strong>
d360 4
a363 4
add /usr/bin/false into <strong>/etc/shells</strong>. Then when you create
the user set his shell to /usr/bin/false, this they he will not be able to
get a shell but will be able to keep their ftp capabilities. adduser(8)
will give them a home dir by default of /home/foo. If this is what you
d370 1
a370 1
<h2>10.10 - Setting up Quota's</h2>
d374 3
a376 3
Quota's are used to limit users space that they have available to them on
your drives. It can be very helpfull in situations of limited resources.
quota's can be set in two different ways. 
d381 2
a382 2
<li>1 - User Quota's</li>
<li>2 - Group Quota's</li>
d387 1
a387 1
The first step to setting up quota's is to make sure that <strong>option
d390 1
a390 1
the filesystems which will have quota's enabled. The keywords
d392 1
a392 1
to mark each fs that you will be using quota's on. By default the files
d397 1
a397 1
example /etc/fstab that has one filesystem with userquota's enabled.
d407 1
a407 1
Now it's time to set the users quota's. To do so you use the utility
d410 1
a410 1
will use vi(1) to edit the quota's unless the environmental variable
d452 1
a452 1
usage below their limit. Grace period's can be set by using the
d459 1
a459 1
Now that the quota's are set you, you need to turn the quota's on. To do
d474 1
a474 1
options. Now that quota's are up and running, you can view them by
d476 1
a476 1
Using a command of <strong>quota &lt user &gt</strong> will give that users
d504 1
a504 1
By default quota's set in /etc/fstab will be started on boot. To turn them
d520 1
a520 1
<small>$OpenBSD: faq10.html,v 1.16 1999/06/17 17:00:06 ericj Exp $</small>
@


1.16
log
@quota's
@
text
@d33 7
a39 6
To be able to use
<a href= "http://www.openbsd.org/cgi-bin/man.cgi?query=su&apropos=0&sektion=1&format=html">
su(1)</a> to root you must be in group 0, &quot;wheel&quot;. This
MUST be placed specifically in <kbd>/etc/group</kbd>. It isn't enough to have 
them listed in <kbd>/etc/passwd</kbd>. Once this is done you should be able to
su correctly.
d42 10
a51 1
<br>
d60 7
a66 2
Use dump/restore. For example. To duplicate everything under directory 
<kbd>SRC</kbd> to directory <kbd>DST</kbd>, do a:
d70 2
a71 1
</p>
d86 4
a89 1
<br>
d93 2
d96 2
d101 1
d104 4
a107 1
simple entry that you can put into /etc/rc.local.<br>
d113 3
a115 1
<br>
d224 2
a225 1
<p>
d227 2
a228 1
</p>
d235 2
a236 1
<p>
d238 2
a239 1
</p>
d245 2
a246 1
<p>
d248 2
a249 1
</p>
d257 2
a258 1
<p>
d262 2
a263 1
</p>
d358 1
a358 1
<p>
d360 1
a360 1
/dev/wd0a / ffs rw,userquota=/var/quotas/quota.user 1 1
d362 1
a362 1
</p>
d372 1
a372 1
<p>
d374 1
a374 1
#edquota ericj
d376 1
a376 1
</p>
d382 1
a382 1
<p>
d384 1
d388 1
d390 1
a390 1
</p>
d396 1
a396 1
<p>
d398 1
d402 1
d404 1
a404 1
</p>
d418 1
a418 1
this use <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=quotaon&sektion=8&format=html>quotaon(8)</a>.
d422 1
a422 1
<p>
d424 1
d426 1
d428 1
a428 1
</p>
d439 1
a439 1
<p>
d441 1
d443 1
d445 1
a445 1
</p>
d450 3
a452 1
<p>
d458 2
a459 1
</p>
d478 1
a478 1
<small>$OpenBSD: faq10.html,v 1.15 1999/05/30 22:41:57 ericj Exp $</small>
@


1.15
log
@ftp-only acct
@
text
@d290 129
d430 1
a430 1
<small>$OpenBSD: faq10.html,v 1.14 1999/05/30 22:06:39 ericj Exp $</small>
@


1.14
log
@fixes, adding & deleting users
@
text
@d275 15
d301 1
a301 1
<small>$OpenBSD: faq10.html,v 1.13 1999/05/29 19:20:35 ericj Exp $</small>
@


1.13
log
@use vipw(8) instead of vi when editing /etc/passwd
@
text
@d248 27
d286 1
a286 1
<small>$OpenBSD: faq10.html,v 1.12 1999/05/29 05:25:01 ericj Exp $</small>
@


1.12
log
@Setting up https
@
text
@d232 16
d259 1
a259 1
<small>$OpenBSD: faq10.html,v 1.11 1999/05/27 01:00:39 ericj Exp $</small>
@


1.11
log
@Few sys admin questions pertaining to the use of POP. <jethro@@ns.wambo.com>
@
text
@d160 72
a237 1

d243 1
a243 1
<small>$OpenBSD: faq10.html,v 1.10 1999/05/21 18:40:47 wvdputte Exp $</small>
@


1.10
log
@Added some links, removed typo and added new section 12 "Performance Tuning"
which still needs a lot of input.
@
text
@d91 69
d172 1
a172 1
<small>$OpenBSD: faq10.html,v 1.9 1999/05/21 02:44:00 ericj Exp $</small>
@


1.9
log
@Grammer fix's.. kjell@@ start some clean up also
@
text
@d17 1
d94 1
d103 1
a103 1
<small>$OpenBSD: faq10.html,v 1.8 1999/04/09 17:56:20 ericj Exp $</small>
@


1.8
log
@add info about rc 10.3
@
text
@d58 2
a59 1
<h2>10.3 - How do i get httpd, sendmail, etc to startup with the system?</h2>
d101 1
a101 1
<small>$OpenBSD: faq10.html,v 1.7 1999/04/08 22:21:23 ericj Exp $</small>
@


1.7
log
@Start gearing the faq up for 2.5 release, move the 2.4 information into its own category. Also start adding fdisk section.
@
text
@d46 1
d57 32
d100 1
a100 1
<small>$OpenBSD: faq10.html,v 1.6 1999/03/08 00:56:47 wvdputte Exp $</small>
@


1.6
log
@Fixed typo and added link to man page of su(1)
@
text
@d44 1
a44 18
<h2>10.2 - In 2.4 why do I get UserDir error when running httpd?</h2>
</a>
</p>

<p>
It seems as though userdir support was left out of 2.4. Make sure to pick up 
the patch at:
</p>

<p>
<a href= "../errata.html#userdir">http://www.openbsd.org/errata.html</a>
</p>

<br>

<p>
<a name= "10.3">
<h2>10.3 - How do I duplicate a filesystem?</h2>
d67 1
a67 1
<small>$OpenBSD: faq10.html,v 1.5 1999/03/06 17:03:27 wvdputte Exp $</small>
d71 1
@


1.5
log
@HTML style police + extra stuff about ports + more links. Needs work
@
text
@d29 1
a29 1
</p>`
d32 3
a34 1
To be able to use su(1) to root you must be in group 0, &quot;wheel&quot;. This
d84 1
a84 1
<small>$OpenBSD: faq10.html,v 1.4 1999/02/24 19:18:13 kjell Exp $</small>
@


1.4
log
@Added 10.3 - how do I duplicate a filesystem
@
text
@d3 8
a10 7
<title> OpenBSD FAQ: 10.0 - System Administration</title>
<link rev=made href=mailto:www@@openbsd.org>
<meta name="resource-type" content="document">
<meta name="description" content="the main OpenBSD page">
<meta name="keywords" content="openbsd,main">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 1998,1999 by OpenBSD.">
d12 1
a12 2
</head>
<body bgcolor="#ffffff" text="#000000" link="#23238E">
d25 5
a29 4
<A NAME="10.1">
<h2> 10.1 - Why does it say that I'm in the wrong group when I su to
root?</h2>
</A>
d31 1
a31 1
<P>
d33 21
a53 14
MUST be placed specifically in <strong>/etc/group</strong>. It isn't enough
to have them listed in <strong>/etc/passwd</strong>. Once this is done you
should be able to su correctly.
</P>

<A NAME="10.2">
<h2> 10.2 - In 2.4 why do I get UserDir error when running httpd? </h2>
</A>

<P>
It seems as though userdir support was left out of 2.4. Make sure to pick
up the patch at:<br>
<a href="../errata.html#userdir">www.openbsd.org/errata.html</a>
</P>
d55 4
a58 1
<A NAME="10.3">
d60 1
a60 1
</A>
d62 1
a62 1
<P>
d64 2
a65 2
<i>SRC</i> to directory <i>DST</i>, do a:
<PRE>
d67 2
a68 2
</PRE>
</P>
d70 8
d79 1
a79 2
<a href="index.html"><img height="24" width="24" src="../back.gif" border=0
alt="[back]">
d82 2
a83 1
<small>$OpenBSD: faq10.html,v 1.3 1999/01/02 16:29:52 ericj Exp $</small>
a85 1

@


1.3
log
@bad english
@
text
@d3 1
a3 1
<title> 10.0 - System Administration</title>
d9 1
a9 1
<meta name="copyright" content="This document copyright 1998 by OpenBSD.">
d13 14
a26 1
<h2> 10.1 - Why does it say that I'm in the wrong group when i su to
d28 5
a32 3
<p>
To be able to use su(1) to root you must be in group 0, ``wheel''. This
MUST be placed specifically in <strong>/etc/group</strong>. It isnt enough
d35 7
a41 4
<p>
<a name="10.2"></a>
<h2> 10.2 - In 2.4 why do i get UserDir error when running httpd? </h2>
<p>
d45 14
a58 1
<p>
d60 5
a64 4
<a href=index.html><img height=24 width=24 src=../back.gif border=0
alt=OpenBSD$
<a href=mailto:www@@openbsd.org>www@@openbsd.org</a>
<br><small>$OpenBSD: faq10.html,v 1.2 1999/01/02 01:54:12 ericj Exp $</small>
@


1.2
log
@additions..
@
text
@d17 1
a17 1
MUST be places specifically in <strong>/etc/group</strong>, it isnt enough
d32 1
a32 1
<br><small>$OpenBSD: faq10.html,v 1.1 1999/01/02 01:21:20 ericj Exp $</small>
@


1.1
log
@system admin section started.
@
text
@d21 7
d32 1
a32 1
<br><small>$OpenBSD$</small>
@

