head	1.61;
access;
symbols;
locks; strict;
comment	@# @;


1.61
date	2014.04.01.17.15.09;	author nick;	state dead;
branches;
next	1.60;

1.60
date	2008.11.26.08.25.03;	author tobias;	state Exp;
branches;
next	1.59;

1.59
date	2008.08.04.12.05.27;	author tobias;	state Exp;
branches;
next	1.58;

1.58
date	2008.05.02.07.47.40;	author tobias;	state Exp;
branches;
next	1.57;

1.57
date	2008.05.01.20.09.55;	author tobias;	state Exp;
branches;
next	1.56;

1.56
date	2008.03.09.13.37.13;	author tobias;	state Exp;
branches;
next	1.55;

1.55
date	2008.03.02.12.13.00;	author tobias;	state Exp;
branches;
next	1.54;

1.54
date	2008.01.13.13.43.35;	author tobias;	state Exp;
branches;
next	1.53;

1.53
date	2008.01.06.13.57.19;	author tobias;	state Exp;
branches;
next	1.52;

1.52
date	2007.11.23.19.30.03;	author tobias;	state Exp;
branches;
next	1.51;

1.51
date	2007.11.12.20.29.58;	author saad;	state Exp;
branches;
next	1.50;

1.50
date	2007.05.06.09.26.08;	author jufi;	state Exp;
branches;
next	1.49;

1.49
date	2007.04.30.08.15.01;	author jufi;	state Exp;
branches;
next	1.48;

1.48
date	2006.12.25.19.10.14;	author jufi;	state Exp;
branches;
next	1.47;

1.47
date	2006.12.23.20.51.45;	author jufi;	state Exp;
branches;
next	1.46;

1.46
date	2006.12.02.20.22.09;	author jufi;	state Exp;
branches;
next	1.45;

1.45
date	2006.11.12.16.09.22;	author jufi;	state Exp;
branches;
next	1.44;

1.44
date	2006.11.04.17.38.44;	author saad;	state Exp;
branches;
next	1.43;

1.43
date	2006.10.25.07.40.55;	author jufi;	state Exp;
branches;
next	1.42;

1.42
date	2006.08.23.08.54.21;	author jufi;	state Exp;
branches;
next	1.41;

1.41
date	2006.08.14.10.44.13;	author saad;	state Exp;
branches;
next	1.40;

1.40
date	2006.06.01.06.33.44;	author jufi;	state Exp;
branches;
next	1.39;

1.39
date	2006.05.28.10.32.40;	author jufi;	state Exp;
branches;
next	1.38;

1.38
date	2006.05.26.13.01.59;	author jufi;	state Exp;
branches;
next	1.37;

1.37
date	2006.05.24.06.48.44;	author jufi;	state Exp;
branches;
next	1.36;

1.36
date	2006.05.15.09.15.50;	author jufi;	state Exp;
branches;
next	1.35;

1.35
date	2006.05.14.09.54.41;	author saad;	state Exp;
branches;
next	1.34;

1.34
date	2006.05.02.17.09.34;	author jufi;	state Exp;
branches;
next	1.33;

1.33
date	2006.04.06.17.23.11;	author jufi;	state Exp;
branches;
next	1.32;

1.32
date	2006.03.17.05.36.06;	author saad;	state Exp;
branches;
next	1.31;

1.31
date	2005.12.03.08.02.51;	author saad;	state Exp;
branches;
next	1.30;

1.30
date	2005.11.03.11.30.53;	author saad;	state Exp;
branches;
next	1.29;

1.29
date	2005.10.16.10.14.28;	author saad;	state Exp;
branches;
next	1.28;

1.28
date	2005.09.03.16.41.45;	author saad;	state Exp;
branches;
next	1.27;

1.27
date	2005.08.24.12.58.45;	author saad;	state Exp;
branches;
next	1.26;

1.26
date	2005.08.21.22.37.27;	author saad;	state Exp;
branches;
next	1.25;

1.25
date	2005.08.13.07.55.56;	author saad;	state Exp;
branches;
next	1.24;

1.24
date	2005.05.27.09.26.58;	author saad;	state Exp;
branches;
next	1.23;

1.23
date	2005.05.19.18.23.06;	author jufi;	state Exp;
branches;
next	1.22;

1.22
date	2005.05.15.21.17.52;	author saad;	state Exp;
branches;
next	1.21;

1.21
date	2005.05.04.17.52.26;	author jufi;	state Exp;
branches;
next	1.20;

1.20
date	2004.11.23.09.00.32;	author jufi;	state Exp;
branches;
next	1.19;

1.19
date	2004.11.14.20.02.34;	author jufi;	state Exp;
branches;
next	1.18;

1.18
date	2004.02.08.12.15.50;	author jufi;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.16.21.00.37;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2003.11.25.22.55.34;	author horacio;	state Exp;
branches;
next	1.15;

1.15
date	2003.11.14.23.07.31;	author horacio;	state Exp;
branches;
next	1.14;

1.14
date	2003.11.02.01.42.48;	author horacio;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.12.20.24.57;	author horacio;	state Exp;
branches;
next	1.12;

1.12
date	2003.09.28.22.19.31;	author horacio;	state Exp;
branches;
next	1.11;

1.11
date	2003.09.17.20.25.56;	author horacio;	state Exp;
branches;
next	1.10;

1.10
date	2003.09.07.20.21.18;	author horacio;	state Exp;
branches;
next	1.9;

1.9
date	2003.08.10.12.30.07;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2003.07.20.14.26.14;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.04.21.48.11;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.15.12.09.54;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.19.18.50.40;	author jufi;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.12.18.47.02;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.10.13.39.27;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2003.05.05.09.41.50;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.04.13.10.20;	author jufi;	state Exp;
branches;
next	;


desc
@@


1.61
log
@
missed one.
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>6 - Sieæ</title>
<link rev= "made" href= "mailto:www@@openbsd.org">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-2">
<meta name= "resource-type" content= "document">
<meta name= "description"   content= "the OpenBSD FAQ page">
<meta name= "keywords"      content= "openbsd,faq">
<meta name= "distribution"  content= "global">
<meta name= "copyright"     content= "This document copyright 1998-2008 by OpenBSD.">
</head>

<body bgcolor="#ffffff" text="#000000">
<!-- passes validator.w3.org, please keep it this way -->

<a href="../../pl/index.html">
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif" border="0">    
</a>
<p>
<font color="#0000e0">
<a href="index.html">[Spis Tre¶ci]</a>
<a href="faq5.html">[Sekcja 5 - Tworzenie systemu ze ¼róde³]</a>
<a href="faq7.html">[Sekcja 7 - Ustawienia klawiatury i wy¶wietlania]</a>
</font>


<h1><font color="#e00000">6 - Sieæ</font></h1>

<!--
UNCOMMENT ONLY WHEN THE FILE IS OUT OF SYNC

<hr>
<p>
<b><font color="#e00000">Uwaga:</font></b>Zawarto¶æ tego pliku
jest ju¿ bardzo nieaktualna w stosunku do
<a href="../faq6.html">bie¿±cej wersji anglojêzycznej</a>.

<p>
Je¶li chcesz pomóc w aktualizacji tego pliku, zajrzyj na
<a href="../../translation.html">stronê t³umaczeñ</a>.

-->

<hr>

<p>
<h3>Spis Tre¶ci</h3>
<ul>
<li><a href= "#Intro" >6.1 - Wprowadzenie</a>
<li><a href= "#Setup" >6.2 - Konfiguracja sieci</a>
<ul>
 <li><a href="#Setup.if" >6.2.1 - Identyfikacja i konfiguracja interfejsów
    sieciowych</a>
 <li><a href="#Setup.gateway" >6.2.2 - Brama domy¶lna</a>
 <li><a href="#Setup.resolver">6.2.3 - DNS</a>
 <li><a href="#Setup.myname"  >6.2.4 - Nazwa hosta</a>
 <li><a href="#Setup.activate">6.2.5 - Aktywacja zmian</a>
 <li><a href="#Setup.chkroute">6.2.6 - Sprawdzanie tras</a>
 <li><a href="#Setup.forward" >6.2.7 - Ustawianie OpenBSD jako 
    bramy domy¶lnej</a>
 <li><a href="#Setup.aliases" >6.2.8 - Ustawianie aliasów na 
    interfejsach sieciowych</a>
</ul>
<li><a href= "#PF"    >6.3 - Filtrowanie ruchu i budowa firewalli
                             przy pomocy OpenBSD</a>
<li><a href= "#DHCP"  >6.4 - Konfiguracja DHCP</a>
<ul>
 <li><a href="#DHCPclient">6.4.1 - Klient DHCP</a>
 <li><a href="#DHCPserver">6.4.2 - Server DHCP</a>
</ul>
<li><a href= "#PPP"   >6.5 - Protokó³ PPP</a>
<li><a href= "#Tuning">6.6 - Tuning parametrów sieciowych</a>
<li><a href= "#NFS"   >6.7 - Korzystanie z NFS</a>
<li><a href= "#Bridge">6.9 - Konfiguracja bridge`a w OpenBSD</a>
<li><a href= "#PXE"   >6.10 - Konfiguracja PXE (i386, amd64)</a>
<li><a href= "#CARP"  >6.11 - Common Address Redundancy Protocol (CARP)</a>
<li><a href= "#OpenNTPD">6.12 - Korzystanie z OpenNTPD</a>
<li><a href="#Wireless">6.13 - Jaki wybraæ sprzêt do budowy sieci
      bezprzewodowych?</a>
<li><a href="#Multipath">6.14 - Jak mogê zrobiæ routing oparty na wyborze
jednej z tras o jednakowym koszcie?</a>
</ul>

<hr>

<p>
<a name="Intro"></a>
<h2>6.1 - Wprowadzenie</h2>

<p>
Dla zrozumienia wiêkszo¶ci z tego dokumentu, zalecane jest zapoznanie siê
i zrozumienie sekcji 5 FAQ <a href="faq5.html">konfiguracja i instalacja
j±dra</a>, dzia³ania narzêdzi
<a href= "http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">
ifconfig(8)</a> oraz
<a href= "http://www.openbsd.org/cgi-bin/man.cgi?query=netstat&amp;sektion=1">
netstat(1)</a> na podstawie odpowiadaj±cych im stron manuala.

<p>
Je¶li administrujesz sieci± i zajmujesz siê konfiguracj± protoko³ów routingu
u¿ywaj±c do tego celu maszyny z OpenBSD jako rutera i chcesz zag³êbiæ siê
bardziej w sieci IP, powiniene¶ przeczytaæ poni¿szy znakomity dokument
<a href="http://www.3com.com/other/pdfs/infra/corpinfo/en_US/501302.pdf">
Understanding IP Addressing</a>.
Dokument ten zawiera fundamentalne informacje na temat sieci IP, jest zw³aszcza
przydatny, gdy opiekujesz siê wieloma sieciami.

<p>
Je¶li zajmujesz siê administrowaniem takimi us³ugami jak serwery www,
ftp czy te¿ poczty, mo¿esz dowiedzieæ siê wielu interesuj±cych rzeczy
o ich dzia³aniu czytaj±c odpowiednie
<a href="http://www.rfc-editor.org/rfc.html">dokumenty RFC</a>
opisuj±ce szczegó³owo protoko³y oraz dzia³anie tych us³ug.
Oczywi¶cie nie przeczytasz ich wszystkich - zajmij siê tymi, którymi
jeste¶ najbardziej zainteresowany lub których u¿ywasz w swojej sieci. Dokumenty
RFC definiuj± tysi±ce standardów opisuj±cych protoko³y sieciowe,
ich dzia³anie oraz sposób w jaki powinny zostaæ realizowane.

<p>
<a name="Setup"></a>
<h2>6.2 - Konfiguracja sieci</h2>

Standardowo, OpenBSD jest wstêpnie konfigurowany podczas procesu
<a href="faq4.html">instalacji</a>.
Jednak¿e dobrze jest zrozumieæ co dzieje siê podczas tego procesu
i jak to dzia³a.
Ca³o¶æ konfiguracji sieci jest wykonywana poprzez proste pliki
tekstowe w katalogu <i>/etc</i>.

<p>
<a name="Setup.if"></a>
<h3>6.2.1 - Identyfikacja i konfiguracja interfejsów sieciowych</h3>

<p>
W OpenBSD, interfejsy sieciowe  nazywane
s± one wed³ug typu sterownika a nie typu po³±czenia (jak ma to miejsce np. w
Linuksie). Mo¿esz zobaczyæ w jaki sposób system wykry³ Twoj± kartê podczas
procesu uruchamiania lub pó¼niej korzystaj±c z polecenia
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dmesg&amp;sektion=8">dmesg(8)</a>.
Aktualn± konfiguracjê interfejsów sieciowych mo¿esz zobaczyæ przy pomocy
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>.
Dla przyk³adu, oto co wy¶wietlone zosta³o przez komendê dmesg w przypadku karty sieciowej
Intel Fast Ethernet, u¿ywaj±cej nazwy fxp.

<blockquote><pre>
fxp0 at pci0 dev 10 function 0 "Intel 82557" rev 0x0c: irq 5, address 00:02:b3:2b:10:f7
inphy0 at fxp0 phy 1: i82555 10/100 media interface, rev. 4
</pre></blockquote>

<p>
Je¶li nie wiesz, jak nazywa siê Twoje urz±dzenie sieciowe przejrzyj
<a href="../../pl/plat.html">listê urz±dzeñ wspieranych przez OpenBSD</a> dla odpowiedniej platformy.
Znajdziesz tam spis wielu popularnych kart sieciowych oraz odpowiedniki
ich nazw w OpenBSD. Pe³na nazwa urz±dzenia w systemie sk³ada siê z tego
w³a¶nie synonimu (jak fxp) oraz numeru przyznanego urz±dzeniu przez j±dro systemu
(np. fxp0).
Numery s± przyznawane na podstawie ró¿nych kryteriów, zale¿nych od karty
i innych szczegó³ów systemu.
Niektóre karty okre¶lane s± poprzez kolejno¶æ w jakiej zosta³y wykryte
podczas skanowania magistrali.
Inne mog± byæ numerowanie poprzez zasoby sprzêtowe lub adres MAC.

<p>
Sprawdzenia jakie interfejsy sieciowe zosta³y zidentyfikowane przez system
mo¿esz dokonaæ korzystaj±c z narzêdzia
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>.
Poni¿sza komenda wy¶wietli wszystkie interfejsy w systemie. W tym przyk³adzie
widaæ tylko jeden fizyczny interfejs Ethernetowy
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=fxp&amp;sektion=4">fxp(4)</a>.

<blockquote><pre>
$ <b>ifconfig</b>
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 33224 
	inet6 fe80::1%lo0 prefixlen 64 scopeid 0x4
        inet6 ::1 prefixlen 128
        inet 127.0.0.1 netmask 0xff000000
lo1: flags=8008&lt;LOOPBACK,MULTICAST&gt; mtu 33224
fxp0: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500
	address: 00:04:ac:dd:39:6a
        media: Ethernet autoselect (100baseTX full-duplex)
        status: active
	inet 10.0.0.38 netmask 0xffffff00 broadcast 10.0.0.255
	inet6 fe80::204:acff:fedd:396a%fxp0 prefixlen 64 scopeid 0x1
pflog0: flags=0&lt;&gt; mtu 33224
pfsync0: flags=0&lt;&gt; mtu 2020
sl0: flags=c010&lt;POINTOPOINT,LINK2,MULTICAST&gt; mtu 296
sl1: flags=c010&lt;POINTOPOINT,LINK2,MULTICAST&gt; mtu 296
ppp0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1500
ppp1: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1500
tun0: flags=10&lt;POINTOPOINT&gt; mtu 3000
tun1: flags=10&lt;POINTOPOINT&gt; mtu 3000
enc0: flags=0&lt;&gt; mtu 1536
bridge0: flags=0&lt;&gt; mtu 1500
bridge1: flags=0&lt;&gt; mtu 1500
vlan0: flags=0&lt;&gt; mtu 1500
	address: 00:00:00:00:00:00
vlan1: flags=0&lt;&gt; mtu 1500
	address: 00:00:00:00:00:00
gre0: flags=9010&lt;POINTOPOINT,LINK0,MULTICAST&gt; mtu 1450
carp0: flags=0&lt;&gt; mtu 1500
carp1: flags=0&lt;&gt; mtu 1500
gif0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280
gif1: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280
gif2: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280
gif3: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280
</pre></blockquote>

<p>
Jak widzisz,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>
dostarcza nam wielu u¿ytecznych w tym momencie informacji, miêdzy
innymi widaæ tutaj interfejs, który w powy¿szym przyk³adzie jest ju¿ skonfigurowany.
Oczywistym jest, ¿e sieæ IP dostêpna jest poprzez interfejs fxp0, st±d
warto¶ci &quot;inet 10.0.0.38 netmask 0xffffff00 broadcast 10.0.0.255&quot;.
Ponadto flagi <b>UP</b> i <b>RUNNING</b> s± ustawione.

<p>
Oprócz fxp0 widoczne s± równie¿ domy¶lnie udostêpnione inne interfejsy.
S± to urz±dzenia wirtualne pe³ni±ce w systemie rozmaite funkcje.
Ich szczegó³owy opis znajdziesz na stronach manuala:

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lo&amp;sektion=4">lo</a>
 - interfejs pêtli zwrotnej (Loopback Interface)
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pflog&amp;sektion=4">pflog</a>
 - interfejs logowania filtra pakietów (Packet Filter Logging Interface)
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sl&amp;sektion=4">sl</a>
 - interfejs szeregowego ³±cza IP (SLIP)
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ppp&amp;sektion=4">ppp</a>
 - interfejs protoko³u PPP (Point to Point Protocol)
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tun&amp;sektion=4">tun</a>
 - programowy interfejs tunelu (Tunnel Network Interface)
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=enc&amp;sektion=4">enc</a>
 - opakowuj±cy pseudointerfejs pêtli zwrotnej (Encapsulating Interface)
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4">bridge</a>
 - interfejs bridge`a ethernetowego (Ethernet Bridge Interface)
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=vlan&amp;sektion=4">vlan</a>
 - interfejs sieci wirtualnych budowanych na urz±dzeniach zgodnych z IEEE 802.1Q
 <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gre&amp;sektion=4">gre</a>
 - interfejs tunelu IP korzystaj±cy z protoko³ów GRE/MobileIP
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gif&amp;sektion=4">gif</a>
 - interfejs tunelu IPv4/IPv6 (Generic IPv4/IPv6 Tunnel Interface)
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=carp&amp;sektion=4">carp</a>
 - interfejs Common Address Redundancy Protocol
</ul>

<p>
Interfejs jest konfigurowany podczas startu systemu w oparciu o pliki
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hostname.if&amp;sektion=5">/etc/hostname.<i>if</i>(5)</a>,
gdzie <i>if</i> nale¿y zast±piæ pe³n± nazw± interfejsu, czyli w naszym
przypadku - <i>/etc/hostname.fxp0</i>.

<p>
Format tego pliku jest prosty:

<blockquote><pre>
address_family address netmask broadcast [other options]
</pre></blockquote>

Znaczenie oraz wiêcej szczegó³ów odno¶nie formatu tego pliku znajdziesz w manualu pod
has³em
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hostname.if&amp;sektion=5">hostname.if(5)</a>.
Powiniene¶ przeczytaæ ten manual dla prostych konfiguracji.

<p>
Typowy plik interfejsu sieciowego skonfigurowanego do wspó³pracy z adresami IPv4
mo¿e wygl±daæ nastêpuj±co:

<blockquote><pre>
$ <b>cat /etc/hostname.fxp0</b>
inet 10.0.0.38 255.255.255.0 NONE
</pre></blockquote>

<p>
W tym przypadku, zdefiniowali¶my adres IPv4 (inet), z adresem IP 10.0.0.38,
maska sieciow± 255.255.255.0, bez okre¶lania adresu rozg³oszeniowego
(który bêdzie w tym przypadku domy¶lnie ustawiony na 10.0.0.255). 

<p>
Wprowadzaj±c dodatkowe opcje mo¿esz skonfigurowaæ typ Ethernetu i dla przyk³adu:
je¶li chcesz, aby karta pracowa³a w trybie 100baseTX full-duplex, plik konfiguracyjny
bêdzie wygl±da³ nastêpuj±co:

<blockquote><pre>
inet 10.0.0.38 255.255.255.0 NONE media 100baseTX mediaopt full-duplex
</pre></blockquote>

<p>
(Oczywi¶cie nie powiniene¶ nigdy wymuszaæ trybu full duplex o ile oba koñce
po³±czenia nie s± tak ustawione! Przy braku specjalnych wymagañ, ustawienia
trybu po³±czenia powinny byæ wy³±czone.
Bardzej prawdopodonym przypadkiem jest wymuszenie 10base-T lub half duplex
gdy wymaga tego twoja infrastruktura sieciowa.)

<p>
Mo¿esz zauwa¿yæ, ¿e w przypadku konfigurowania ró¿nych typów interfejsów
i przypisywania im specyficznych dla nich opcji format pliku pozostaje niemal identyczny!

<blockquote><pre>
$ <b>cat /etc/hostname.vlan0</b>
inet 172.21.0.31 255.255.255.0 NONE vlan 2 vlandev fxp1
</pre></blockquote>


<a name="Setup.gateway"></a>
<h3>6.2.2 - Brama domy¶lna</h3>

Umie¶æ adres twojej bramy domy¶lnej w pliku <i>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mygate&amp;sektion=5">/etc/mygate</a></i>.
Pozwoli to na ustawienie twojej bramy domy¶lnej podczas startu systemu.
Plik ten zawiera jedn± liniê, która jest adresem maszyny bêd±cej bram±
domy¶ln±:

<blockquote><pre>
10.0.0.1
</pre></blockquote>

Mo¿liwe jest tak¿e ustawienie nazwy symbolicznej, musisz jednak zachowaæ
ostro¿no¶æ: nie mo¿esz zak³adaæ takich spraw jak poprawne skonfigurowanie
resolvera nazw lub jego osi±galno¶æ, a¿ do CZASU skonfigurowania bramy
domy¶lnej.
Innymi s³owy, lepiej jest ustawiæ adres IP lub co¶ co jest zdefiniowane
w pliku <i>/etc/hosts</i>.


<a name="Setup.resolver"></a>
<h3>6.2.3 - DNS</h3>

Rozwi±zywanie nazw DNS kontrolowane jest poprzez plik
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf&amp;sektion=5"><i>/etc/resolv.conf</i></a>.
Poni¿ej znajduje siê przyk³adowy plik <i>/etc/resolv.conf</i>:

<blockquote><pre>
search example.com
nameserver 125.2.3.4
nameserver 125.2.3.5
lookup file bind
</pre></blockquote>

W tym przypadku, domy¶ln± nazw± domeny bêdzie <tt>example.com</tt>, 
okre¶lone s± dwa resolvery DNS, <tt>125.2.3.4</tt> oraz <tt>125.2.3.5</tt>,
oraz ustawione jest sprawdzanie pliku <i>/etc/hosts</i> przed sprawdzaniem
resolverów DNS.

<p>
W prawie ka¿dym systemie Unix (i wielu systemach nie-Uniksowych), plik
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hosts&amp;sektion=5"><i>/etc/hosts</i></a>
mo¿e byæ u¿ywany do okre¶lenia systemów które nie s± wpisane w oficjalnym
systemie DNS (lub w po³±czeniu z pokazanym powy¿ej priorytecie "lookup",
nie s± podane w porz±dany sposób).

<p>
Je¿eli korzystasz z DHCP powiniene¶ przeczytaæ <a href="#DHCP">6.4 - DHCP</a>
zwracaj±c uwagê na
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf.tail&amp;sektion=5">resolv.conf.tail(5)</a>.

<a name="Setup.myname"></a>
<h3>6.2.4 - Nazwa hosta</h3>
Ka¿da maszyna Uniksowa ma nazwê.
W OpenBSD, nazwa ta okre¶lona jest jako "Fully Qualified Domain Name" (FQDN)
w jednej linii w pliku
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=myname&amp;sektion=5"><i>/etc/myname</i></a>.
Je¿eli dana maszyna nazywana jest "puffy" i domen± jest "example.com",
wówczas plik ten zawieraæ bêdzie liniê:

<blockquote><pre>
puffy.example.com
</pre></blockquote>

<a name="Setup.activate"></a>
<h3>6.2.5 - Aktywacja zmian</h3>

W tym momencie, aby zainicjowaæ sieæ na swojej konfiguracji, mo¿esz uruchomiæ
ponownie komputer b±d¼ uruchomiæ skrypt <b>/etc/netstart</b>.
Mo¿esz to zrobiæ w prosty sposób (jako u¿ytkownik root):

<blockquote><pre>
# <b>sh /etc/netstart</b>
writing to routing socket: File exists
add net 127: gateway 127.0.0.1: File exists
writing to routing socket: File exists
add net 224.0.0.0: gateway 127.0.0.1: File exists
</pre></blockquote>

<p>
Zauwa¿, ¿e uruchomienie skryptu spowodowa³o wyst±pienie kilku b³êdów.
Jest to spowodowane zainicjalizowaniem rekonfiguracji systemu ju¿
skonfigurowanego. Dla przyk³adu, niektóre trasy routingu istnia³y ju¿
w tablicy rutingu j±dra. Od tej chwili obs³uga sieci w Twoim systemie powinna byæ ju¿
skonfigurowana. Aby upewniæ siê, ¿e wszystkie interfejsy zosta³y skonfigurowane
tak jak planowa³e¶ pos³u¿ siê narzêdziem
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>.

<p>
Nawet je¶li mo¿esz ca³kowicie zrekonfigurowaæ sieæ na OpenBSD bez konieczno¶ci
restartu, restart systemu jest WYSOCE zalecany przy ka¿dej znacz±cej
zmianie konfiguracji.
Spowodowane jest to ró¿nicami pomiêdzy ¶rodowiskiem podczas uruchamiania
systemu oraz ¶rodowiskiem gdy system jest uruchomiony.
Dla przyk³adu, je¿eli poda³e¶ nazwê symboliczn± resolvera DNS w swoich plikach
konfiguracyjnych, twoja konfiguracja bêdzie dzia³aæ zgodnie z za³o¿eniami
po rekonfiguracji, jednak podczas startu systemu, twój zewnêtrzny resolver
mo¿e byæ niedostêpny, zatem konfiguracja siê nie powiedzie.

<a name="Setup.chkroute"></a>
<h3>6.2.6 - Sprawdzanie tras</h3> 

Trasy routingu mo¿esz obejrzeæ korzystaj±c z
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=netstat&amp;sektion=1">netstat(1)</a>
lub <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=route&amp;sektion=8">route(8)</a>.
Je¶li masz problemy z routingiem, mo¿esz skorzystaæ z flagi -n programu
route(8), która drukuje adresy IP, zamiast wykonywaæ wyszukiwania DNS
i wy¶wietlaæ nazwy.
Poni¿ej znajduj± siê przyk³ady u¿ycia obu tych narzêdzi.

<blockquote><pre>
$ <b>netstat -rn</b>
Routing tables

Internet:
Destination        Gateway            Flags     Refs     Use    Mtu  Interface
default            10.0.0.1           UGS         0       86      -  fxp0
127/8              127.0.0.1          UGRS        0        0      -  lo0
127.0.0.1          127.0.0.1          UH          0        0      -  lo0
10.0.0/24          link#1             UC          0        0      -  fxp0
10.0.0.1           aa:0:4:0:81:d      UHL         1        0      -  fxp0
10.0.0.38          127.0.0.1          UGHS        0        0      -  lo0
224/4              127.0.0.1          URS         0        0      -  lo0

Encap:
Source             Port  Destination        Port  Proto SA(Address/SPI/Proto)

$ <b>route show</b>
Routing tables

Internet:
Destination      Gateway            Flags
default          10.0.0.1           UG
127.0.0.0        LOCALHOST          UG
localhost        LOCALHOST          UH
10.0.0.0         link#1             U
10.0.0.1         aa:0:4:0:81:d      UH
10.0.0.38        LOCALHOST          UGH
BASE-ADDRESS.MCA LOCALHOST          U
</pre></blockquote>

<p>
<a name="Setup.forward"></a>
<h3>6.2.7 - Ustawianie OpenBSD jako bramy domy¶lnej</h3>

<p>
Poni¿ej zamieszczone s± podstawowe informacje z którymi powiniene¶ zapoznaæ
siê, chc±c skonfigurowaæ maszynê z OpenBSD jako bramkê (router). Je¶li komputer
ma stanowiæ bramkê do Internetu, zalecane jest przeczytanie instrukcji
dotycz±cych konfiguracji filtra pakietów (Packet Filter) aby móc blokowaæ
potencjalnie niebezpieczny ruch. Ponadto, bior±c pod uwagê niewielk±
przestrzeñ adresów
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ip&amp;sektion=4">IPv4</a>
przydzielan± przez dostawców us³ug internetowych mo¿esz skorzystaæ
z informacji o translacji adresów sieciowych (NAT - Network Address Translation),
aby rozs±dniej wykorzystaæ przyznan± Ci pulê adresów IP.

<p>
Standardowe (GENERIC) j±dro ma mo¿liwo¶æ przekazywania pakietów IP (IP Forwarding),
do dzia³ania, wymaga ono jednak inicjalizacji. Powiniene¶ w tym celu skorzystaæ z
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=8">sysctl(8)</a>.
Aby maszyna zawsze startowa³a z w³±czonym przekazywaniem pakietów powiniene¶ wyedytowaæ
plik <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl.conf&amp;sektion=5">/etc/sysctl.conf</a>.
Jedyne co musisz zrobiæ, to dodaæ poni¿sz± linijkê do tego pliku.

<blockquote><pre>
net.inet.ip.forwarding=1
</pre></blockquote>

<p>
Aby uzyskaæ ten efekt bez restartu maszyny, mo¿esz skorzystaæ bezpo¶rednio
z narzêdzia <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=8">sysctl(8)</a>.
Pamiêtaj, ¿e po ponownym uruchomieniu komputera, zmiana ta nie bêdzie obowi±zywaæ. Do wykonania poni¿szej
komendy musisz mieæ uprawnienia root'a.

<blockquote><pre>
# <b>sysctl net.inet.ip.forwarding=1</b>
net.inet.ip.forwarding: 0 -&gt; 1
</pre></blockquote>

<p>
Teraz jedyne co Ci pozostaje, to ustawienie tras routingu na hostach po obu
stronach Twojego rutera. Istnieje wiele mo¿liwo¶ci wykorzystania OpenBSD
jako rutera korzystaj±c z takich narzêdzi jak stworzony dla OpenBSD
<a href="http://www.openbgpd.org/">OpenBGPD</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=routed&amp;sektion=8">routed(8)</a>,
<a href="http://www.mrtd.net">mrtd</a>,
<a href="http://www.zebra.org">zebra</a>, i
<a href="http://www.quagga.net">quagga</a>.
OpenBSD wspiera oprogramowanie takie jak zebra, gated czy mrtd poprzez 
system portów. OpenBGPD oraz routed s± instalowane jako czê¶ci systemu bazowego.
Potrafi tak¿e wspó³pracowaæ
z rozmaitymi interfejsami takimi jak T1, HSSI, ATM, FDDI, Ethernet oraz po³±czeniami
poprzez linie szeregowe (PPP/SLIP).

<p>
<a name="Setup.aliases"></a>
<h3>6.2.8 - Ustawianie aliasów na interfejsach sieciowych</h3>

<p>
OpenBSD posiada prosty mechanizm nadawania aliasów IP interfejsom.
Jedyne co musisz zrobiæ, to odpowiednio wyedytowaæ plik
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hostname.if&amp;sektion=5"><i>/etc/hostname.&lt;if&gt;</i></a>.
Plik ten, z informacjami o konfiguracji interfejsu, jest czytany
w momencie uruchamiania siê systemu przez skrypt
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=netstart&amp;sektion=8">/etc/netstart(8)</a>,
który jest elementem procedury startowej (<a href="faq10.html#rc">rc startup
hierarchy</a>). Dla przyk³adu zak³adamy, ¿e u¿ytkownik posiada interfejs
<b>dc0</b> i znajduje siê w sieci 192.168.0.0. Pozosta³e istotne
informacje:

<ul>
<li>adres IP: 192.168.0.2
<li>maska sieciowa (NETMASK): 255.255.255.0
</ul>

<p>
Kilka uwag na temat aliasów. W OpenBSD u¿ywasz tylko jednej nazwy
interfejsu. Nie ma w tym przypadku ¿adnej ró¿nicy pomiêdzy pomiêdzy
pierwszym a drugim aliasem. W przeciwieñstwie do innych systemów operacyjnych
OpenBSD nie odnosi siê do kolejnych aliasów, kolejno je numeruj±c,
jak np.: dc0:0, dc0:1. Je¶li odnosisz siê do konkretnego 'aliasowanego'
adresu IP poprzez ifconfig, lub dodajesz alias, b±d¼ uwa¿ny i pamiêtaj
o sk³adni "<tt>ifconfig int alias</tt>" zamiast "<tt>ifconfig int</tt>".
Dowolny alias mo¿esz usun±æ poleceniem "<tt>ifconfig int delete</tt>".

<p>
Zak³adaj±c, ¿e u¿ywasz wielu adresów IP, które nale¿± do tej samej
podsieci jako aliasy, maska sieciowa dla ka¿dego z nich przyjmuje
warto¶æ 255.255.255.255. Nie musisz powielaæ w ka¿dym przypadku
maski pierwszego adresu IP przypisanego do interfejsu. W poni¿szym
przyk³adzie, plik <i>/etc/hostname.dc0</i>, zawiera definicje dwóch
aliasów do interfejsu dc0 skonfigurowanego pocz±tkowo jako
192.168.0.2 z mask± 255.255.255.0.

<blockquote><pre>
# <b>cat /etc/hostname.dc0</b>
inet 192.168.0.2 255.255.255.0 NONE media 100baseTX
inet alias 192.168.0.3 255.255.255.255
inet alias 192.168.0.4 255.255.255.255
</pre></blockquote>

<p>
Po wyedytowaniu pliku, jedyne co musisz zrobiæ, aby wprowadziæ powy¿sze
zmiany w konfiguracji, to uruchomiæ ponownie komputer. Naturalnie, mo¿esz
tak¿e nadaæ aliasy rêcznie, bez potrzeby restartowania systemu, u¿ywaj±c
narzêdzia <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>.
Do uaktywnienia pierwszego aliasu z powy¿szego przyk³adu powiniene¶
pos³u¿yæ siê komend±:

<blockquote><pre>
# <b>ifconfig dc0 inet alias 192.168.0.3 netmask 255.255.255.255</b>
</pre></blockquote>

(jeszcze raz, restart jest zalecany aby mieæ pewno¶æ ¿e wprowadzi³e¶
wszystko tak jak oczekiwa³e¶)

<p>
Do wy¶wietlenia aliasów skorzystaj z polecenia:

<blockquote><pre>
$ <b>ifconfig -A</b>
dc0: flags=8863&lt;UP,BROADCAST,NOTRAILERS,RUNNING,SIMPLEX,MULTICAST&gt;
        media: Ethernet manual
        inet 192.168.0.2 netmask 0xffffff00 broadcast 192.168.0.255
        inet 192.168.0.3 netmask 0xffffffff broadcast 192.168.0.3
</pre></blockquote>


<p>
<a name="PF"></a>
<h2>6.2 - Filtrowanie ruchu i budowa firewalli przy pomocy OpenBSD</h2>
Filtr pakietów (od tej chwili nazywany jako PF) jest systemem OpenBSD
odpowiedzialnym za filtrowanie ruchu IP oraz translacjê adresów
sieciowych (NAT). PF potrafi tak¿e normalizowaæ pakiety IP oraz zapewniaæ
kontrolê przepustowo¶ci ³±cza z priorytetowaniem pakietów, oraz s³u¿y
do budowy wydajnych i wysoce konfigurowalnych zapór sieciowych. Opis
PF znajduje siê w <a href="../pf/pl/index.html"><b>PF FAQ</b></a>.

<p>
<a name= "DHCP"></a>
<h2>6.4 - DHCP</h2>

Dynamic Host Configuration Protocol (DHCP) to sposób na "automatyczn±"
konfiguracje interfejsów sieciowych.
OpenBSD mo¿e byæ serwerem DHCP (konfiguruj±c inne maszyny),
klientem DHCP (uzyskuj±c konfiguracjê z innej maszyny), a w niektórych
przypadkach i jednym i drugim.

<p>
<a name="DHCPclient"></a>
<h3>6.4.1 - Klient DHCP</h3>

<p>
Aby skorzystaæ z klienta DHCP
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhclient&amp;sektion=8">dhclient(8)</a>
do³±czonego standardowo do OpenBSD, wyedytuj plik <tt>/etc/hostname.xl0</tt> (zak³adaj±c
¿e twoim g³ównym interfejsem Ethernetowym jest xl0. W rzeczywisto¶ci mo¿e to byæ
ep0 lub fxp0, lub co¶ zupe³nie innego).
Wszystko co musisz zrobiæ to wpisaæ do tego pliku '<tt>dhcp</tt>': 

<blockquote><pre>
# <b> echo dhcp &gt;/etc/hostname.xl0</b>
</pre></blockquote>

<p>
Dziêki temu OpenBSD automatycznie uruchomi klienta DHCP przy starcie dla wskazanego
interfejsu. Pobrany zostanie adres IP, domy¶lna bramka, oraz serwery DNS.

<p>
Je¶li chcesz skonfigurowaæ swój interfejs poprzez DHCP z linii poleceñ, upewnij siê,
¿e masz plik <tt>/etc/dhclient.conf</tt>, a nastêpnie wykonaj:

<blockquote><pre>
# <b>dhclient fxp0</b>
</pre></blockquote>

<p>
Gdzie <tt>fxp0</tt> jest interfejsem na który chcesz otrzymaæ DHCP.

<p>
Niewa¿ne w jaki sposób uruchamiasz klienta DHCP, zawsze mo¿esz wyedytowaæ
<tt>/etc/dhclient.conf</tt> aby np. <b>nie</b> uaktualniaæ swojej
konfiguracji serwerów DNS poprzez odkomentowanie linii 'request'
(poni¿ej znajdziesz przyk³adowe domy¶lne opcje, które musisz odkomentowaæ
i dokonaæ spo¶ród nich wyboru.)

<blockquote><pre>
request subnet-mask, broadcast-address, time-offset, routers,
      domain-name, domain-name-servers, host-name, lpr-servers, ntp-servers;
</pre></blockquote>

<p>
a nastêpnie usun±æ <tt>domain-name-servers</tt>. 
Oczywi¶cie mo¿esz tak¿e usn±æ <tt>hostname</tt> lub
pozosta³e ustawienia.

<p>
Poprzez zmianê opcji w twoim pliku
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhclient.conf&amp;sektion=5">
dhclient.conf(5)</a>,
mo¿esz przekazaæ klientowi DHCP jak stworzyæ twój plik
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf&amp;sektion=5">resolv.conf(5)</a>.
Klient DHCP nadpisze wszystkie informacje jakie ju¿ mia³e¶ wpisane do 
resolv.conf(5), informacjami uzyskanymi z serwera DHCP.
Stracisz zatem wszystkie informacje które wprowadzi³e¶ do resolv.conf.

<p>
Dostêpne s± dwa mechanizmy pozwalaj±ce temu zapobiec:

<ul>
<li>
<tt><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhclient.conf&amp;sektion=5#OPTION+MODIFIERS">OPTION
MODIFIERS</a></tt>
(<b>default</b>, <b>supersede</b>, <b>prepend</b>, and <b>append</b>)
pozwol± ci nadpisaæ dowoln± z opcji w dhclient.conf(5).

<li>
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf.tail&amp;sektion=5"><tt>resolv.conf.tail(5)</tt></a>
pozwol± ci dodaæ cokolwiek chcesz do, stworzonego przez dhclient(8), pliku resolv.conf(5).
</ul>

<p>
W poni¿szym przyk³adzie chcesz u¿yæ DHCP, ale zamierzasz dodaæ 
<tt>lookup file bind</tt> do swojego pliku resolv.conf(5) tworzonego przez dhclient(8).
Nie ma opcji pozwalaj±cej na to w <tt>dhclient.conf</tt>, musisz zatem u¿yæ
<tt>resolv.conf.tail</tt>:

<blockquote><pre>
# <b>echo "lookup file bind" &gt /etc/resolv.conf.tail</b>
</pre></blockquote>
	     
Teraz twój resolv.conf(5) powinien zawierac "lookup file bind" na koñcu.
<blockquote><pre>
nameserver 192.168.1.1
nameserver 192.168.1.2
lookup file bind
</pre></blockquote> 

<p>
<a name="DHCPserver"></a>
<h3>6.4.2 - Serwer DHCP</h3>

<p>
Je¶li chcesz aby Twój OpenBSD pracowa³ w sieci jako serwer DHCP
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhcpd&amp;sektion=8">dhcpd(8)</a>,
wyedytuj <tt>/etc/rc.conf.local</tt> poprzez ustawienie 
<tt>dhcpd_flags="<i>interfejs</i>"</tt>, zastêpuj±c
<tt><i>interfejs</i></tt> list± interfejsów na których
powinien nas³uchiwaæ dhcpd(8), przyk³adowo:

<pre>
  # <b>echo 'dhcpd_flags="xl1 xl2 xl3"' &gt;&gt;/etc/rc.conf.local</b>
</pre>

<p>
A nastêpnie zabierz siê za konfiguracjê serwera poprzez plik <tt>/etc/dhcpd.conf</tt>.
Znaczenie poni¿szych opcji jest chyba jasne.

<pre>
        option  domain-name "example.com";
        option  domain-name-servers 192.168.1.3, 192.168.1.5;

        subnet 192.168.1.0 netmask 255.255.255.0 {
                option routers 192.168.1.1;

                range 192.168.1.32 192.168.1.127;
        }
</pre>

<p>
Twój serwer DHCP powie klientowi, ¿e nale¿y do domeny "example.com" oraz ¿e serwery DNS dla tej
domeny to 192.168.1.3 i 192.168.1.5. Hosty znajduj±ce siê w tej samej sieci co adres
interfejsu Ethernetowego OpenBSD, na którym nas³uchuje DHCP nale¿±cy do sieci 192.168.1.0/24
otrzymaj± adresy z zakresu 192.168.1.32 - 192.168.1.127. Otrzymaj± te¿ informacjê,
aby jako domy¶ln± bramê wykorzystywa³y host 192.168.1.1.

<p>
Je¶li chcesz uruchomiæ dhcpd(8) z linii komend po edycji
<tt>/etc/dhcpd.conf</tt>, u¿yj:

<pre>
     # <b>touch /var/db/dhcpd.leases</b>
     # <b>dhcpd fxp0</b>
</pre>

<p>
Linia zaczynaj±ca siê poleceniem <tt>touch</tt> jest niezbêdna i s³u¿y do
utworzenia pustego pliku <tt>dhcpd.leases</tt> zanim bêdzie mo¿na uruchomiæ
serwer dhcpd(8).
<a href="faq10.html#rc">Skrypty startowe</a> OpenBSD utworz± ten plik je¶li
nie bêdzie on istnia³ podczas startu systemu, jednak uruchamiaj±c dhcpd(8)
rêcznie niezbêdne jest stworzenie tego pliku samodzielnie. <tt>fxp0</tt>
jest interfejsem na którym serwer DHCP bêdzie nas³uchiwaæ.

<p>
Je¶li udostêpniasz us³ugê DHCP klientowi Windows, mo¿esz chcieæ aby
dhcpd(8) poda³ temu klientowi adres serwera 'WINS'. Wystarczy dodaæ analogiczn±
do poni¿szej linijkê do <tt>/etc/dhcpd.conf</tt>:

<pre>
     option    netbios-name-servers    192.168.92.55;
</pre>

<p>
(gdzie zamiast <tt>192.168.92.55</tt> powiniene¶ wstawiæ swój adres IP serwera Windows
lub Samba.)
Zobacz <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhcp-options&amp;sektion=5">dhcp-options(5)</a>, aby dowiedzieæ siê jakie inne informacje mo¿esz dostarczyæ klientom.

<p>
<a name="PPP"></a>
<h2>6.5 - PPP </h2>

<p>
Protokó³ Punkt-do-Punktu (Point-to-Point Protocol - PPP) najczê¶ciej
wykorzystywany jest w przypadkach, gdy ³±czysz siê ze swoim dostawc±
Internetu poprzez modem. W OpenBSD mo¿esz to zrobiæ na dwa sposoby poprzez:

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppd&amp;sektion=8">pppd(8)</a>
 - demon PPP dzia³aj±cy w przestrzeni j±dra.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ppp&amp;sektion=8">ppp(8)</a>
 - demon PPP dzia³aj±cy w przestrzeni u¿ytkownika.
</ul>

<p>
Narzêdzia ppp i pppd oferuj± podobna funkcjonalno¶æ jednak ró¿nymi sposobami.
pppd pracuje ze sterownikiem 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ppp&amp;sektion=4">ppp(4)</a>
w j±drze podczas gdy ppp dzia³a w przestrzeni u¿ytkownika z
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tun&amp;sektion=4">tun(4)</a>.
Dokument ten opisuje tylko demona PPP pracuj±cego w przestrzeni u¿ytkownika, poniewa¿
jest on prostszy w debagowaniu oraz w konfiguracji.

Zaczniemy od konfiguracji demona PPP, który bêdzie móg³ byæ uruchamiany
przez zwyk³ych u¿ytkowników. Aby rozpocz±æ potrzebujesz trochê informacji od
swojego dostawcy. Oto lista rzeczy, które powiniene¶ wiedzieæ, nim przyst±pimy do pracy:

<ul>
<li>Numer dial-up Twojego dostawcy.
<li>Adres serwera nazw.
<li>Twoja nazwa u¿ytkownika i has³o.
<li>Adres Twojej bramki.
</ul>

<p>
Bez czê¶ci z nich mo¿esz siê obej¶æ, ale wygodniej bêdzie je¶li bêdziesz
dysponowa³ powy¿szymi informacjami. Demon PPP pracuj±cy w przestrzeni u¿ytkownika
korzysta z pliku konfiguracyjnego
<a href="http://www.openbsd.org/cgi-bin/cvsweb/src/etc/ppp/ppp.conf.sample">/etc/ppp/ppp.conf</a>.
W katalogu <i>/etc/ppp</i> znajdziesz kilka pomocnych plików, które mog±
definiowaæ ró¿ne konfiguracje dla ró¿nych specyficznych sytuacji. Zalecane
jest, aby¶ siê z nimi zapozna³.

<p>
<h3>Podstawowa konfiguracja PPP(8)</h3>

<p>
Podstawowa konfiguracja dzia³aj±cego w przestrzeni u¿ytkownika demona PPP
polega na edycji pliku <i>/etc/ppp/ppp.conf</i>. Domy¶lnie tego pliku nie
ma w Twoim systemie, ale znajduje siê plik <i>/etc/ppp/ppp.conf.sample</i>,
z którego mo¿esz skorzystaæ tworz±c swój plik <i>ppp.conf</i>. Poni¿ej opisana
zostanie najbardziej podstawowa i typowa konfiguracja. Oto przyk³adowy plik
<i>ppp.conf</i>, który definiuje kilka domy¶lnych ustawieñ:

<blockquote><pre>
default:
set log Phase Chat LCP IPCP CCP tun command     
set device /dev/cua01                           
set speed 115200
set dial "ABORT BUSY ABORT NO\\sCARRIER TIMEOUT 5 \"\" AT OK-AT-OK ATE1Q0 OK \\dATDT\\T TIMEOUT 40 CONNECT"
</pre></blockquote>

<p>
Sekcja poni¿ej <tt>default:</tt> bêdzie przetwarzana przy ka¿dym uruchomieniu
demona. Umieszczamy w niej wszystkie niezbêdne informacje. Korzystaj±c
z &quot;set log&quot; konfigurujemy poziomy logowania. Mo¿esz zmieniæ te
ustawienia, aby dowiedzieæ siê wiêcej na temat ustawienia poziomów logowania
zajrzyj do
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ppp&amp;sektion=8">ppp(8)</a>.
Wyboru urz±dzenia, pod którym jest nasz modem dokonujemy w sekcji &quot;set device&quot;,
w tym przypadku modem pod³±czony jest do drugiego portu szeregowego, port
pierwszy to urz±dzenie <i>/dev/cua00</i>. Korzystaj±c z &quot;set speed&quot;
ustalamy prêdko¶æ po³±czenia, a w &quot;set dial&quot; podajemy parametry
naszego po³±czenia. Mo¿na zdefiniowaæ w tym miejscu inny 'timeout' dla naszego
po³±czenia itp. Podana linijka jest do¶æ dobra i raczej nie wymaga zmian.

<p>
Teraz mo¿emy przej¶æ do sekcji w których podamy informacje specyficzne dla
dostawcy Internetu (ISP). Informacje te podajemy w sekcjach umiejscowionych
poni¿ej nag³ówka <tt>default:</tt>. Nag³ówek nowej sekcji mo¿e mieæ dowolny
tytu³, np. nazwê Twojego ISP. Tutaj skorzystamy z nazwy <tt>myisp:</tt>,
poni¿ej tego nag³ówka znajdziesz wszystkie informacje niezbêdne do tego,
aby po³±czenie zosta³o poprawnie zainicjowane:

<blockquote><pre>
myisp:
set phone 1234567
set login "ABORT NO\\sCARRIER TIMEOUT 5 ogin:--ogin: ppp word: ppp"
set timeout 120
set ifaddr 10.0.0.1/0 10.0.0.2/0 255.255.255.0 0.0.0.0
add default HISADDR
enable dns
</pre></blockquote>

<p>
Oto podstawowa konfiguracja potrzebna do tego, aby po³±czyæ siê z
konkretnym ISP. Opcja &quot;set phone&quot; ustala numer dial-up naszego ISP.
Kolejna, &quot;set login&quot;, pozwala na wprowadzenie opcji niezbêdnych
do poprawnego zalogowania siê. Umie¶cili¶my tutaj timeout na 5 sekund, co
oznacza, ¿e nasza próba zalogowania siê zostanie przerwana po 5 sekundach
bez sygna³u po³±czenia. W innym przypadku bêdziemy czekaæ na
&quot;login:&quot; oraz wys³ane zostanie Twoja nazwa u¿ytkownika oraz has³o.

<p>
W powy¿szym przypadku
nazwa u¿ytkownika (Username) = ppp oraz has³o (Password) = ppp. Te warto¶ci
bêdziesz musia³ zmieniæ (&quot;od t³umacza: chyba ¿e korzystasz z us³ug TPSA&quot;).
Wiersz &quot;set timeout&quot; ustala "ja³owy" (idle) czas dla ca³ego po³±czenia
na 120 sekund. Opcja &quot;set ifaddr&quot; wymaga d³u¿szego wyja¶nienia.

<blockquote><pre>
set ifaddr 10.0.0.1/0 10.0.0.2/0 255.255.255.0 0.0.0.0
</pre></blockquote>

<p>
W powy¿szej linii korzystamy z ustawienia adresu w formacie &quot;<b>set ifaddr
[myaddr[/nn] [hisaddr[/nn] [netmask [triggeraddr]]]]</b>&quot;.
Czyli pierwszym adresem IP jest ten, jaki chcemy aby zosta³ nam przypisany.
Je¶li dostajesz statyczny adres od swojego ISP powiniene¶ umie¶ciæ go w³a¶nie
tutaj. W tym przyk³adzie dodali¶my /0, aby zaznaczyæ, ¿e ¿aden z bitów tego
adresu nie wymaga dopasowania i mo¿e on zostaæ ca³kowicie zmieniony przez
ISP podczas transakcji rozpoczynaj±cej po³±czenie. Drugi adres IP to adres
IP dostawcy. Je¶li go znasz, umie¶æ go w³a¶nie w tym miejscu, je¶li nie
zrób tak, jak w naszym przypadku - umie¶æ na koñcu /0. Trzecia opcja to nasza
maska sieciowa, w tym przypadku ustawiona na 255.255.255.0. Je¶li triggeraddr
jest ustawiony, u¿ywany jest do zast±pienia myaddr podczas rozpoczêcia
negocjacji IPCP. Jakkolwiek tylko adres z zakresu myaddr zostanie zaakceptowany.
Ta opcja u¿yteczna jest w przypadkach, gdy niektóre implementacje PPP podczas
negocjacji po³±czenia nie przyznaj± adresu IP dopóki nie za¿±dasz ``0.0.0.0.0''.

<p>
Nastêpna opcja &quot;add default HISADDR&quot; ustala domy¶ln± trasê
routingu na adres ISP. Dziêki takiemu wpisowi jeste¶ uniezale¿niony
od adresu IP Twojego dostawcy - za ka¿dym razem bêdzie on automatycznie
uaktualniony w przypadku zmiany. Dziêki opcji &quot;enable dns&quot;
mówimy naszemu ISP aby 'zalegalizowa³' adresy naszych serwerów nazw.
UWAGA: nie rób tego je¶li masz uruchomiony lokalny serwer DNS, poniewa¿
ppp obejdzie to poprzez dopisanie kilku linijek nameserver w pliku
<i>/etc/resolv.conf</i>.

<p>
Zamiast tradycyjnych metod logowania, wielu ISP u¿ywa obecnie autoryzacji
CHAP lub PAP. Je¿eli tak jest w naszym przypadku, nasz plik konfiguracyjny 
bêdzie wyglada³ nieco inaczej:

<blockquote><pre>
myisp:
set phone 1234567  
set authname ppp
set authkey ppp
set login
set timeout 120  
set ifaddr 10.0.0.1/0 10.0.0.2/0 255.255.255.0 0.0.0.0
add default HISADDR
enable dns
</pre></blockquote>

<p>
W powy¿szym przyk³adzie, podali¶my nazwê u¿ytkownika (ppp) oraz has³o (ppp)
korzystaj±c odpowiednio z authname i authkey. Nie ma potrzeby podawaæ czy
chodzi o autoryzacjê CHAP lub PAP - zostanie to wynegocjowane automatycznie.
Opcja "set login" jedynie okre¶la próbê zalogowania siê, z nazw± u¿ytkownika i
has³em podanym wcze¶niej.

<p>
<h3>U¿ywanie PPP(8)</h3>

<p>
Mamy wreszcie nasz plik <i>ppp.conf</i> z konfiguracj± po³±czenia, teraz
mo¿emy spróbowaæ po³±czyæ siê z naszym ISP. Opisanych zostanie kilka
najczê¶ciej u¿ywanych parametrów ppp:

<ul>
<li><tt>ppp -auto myisp</tt> - Uruchamia ppp, konfiguruje interfejs,
³±czy siê z ISP a nastêpnie przechodzi do pracy w tle.
<li><tt>ppp -ddial myisp</tt> - Podobne do -auto, ale w przypadku, gdy
po³±czenie zostanie utracone, zostan± podjête próby jego przywrócenia.
</ul>

<p>
Je¿eli powy¿sze próby nie powiod± siê, spróbuj uruchomiæ <i>/usr/sbin/ppp</i>
nie podaj±c ¿adnych opcji - uruchomi siê ppp w trybie interaktywnym. Mo¿esz
podawaæ opcje jedna po drugiej sprawdzaj±c gdzie wystêpuj± b³êdy lub inne problemy.
Stosuj±c konfiguracjê opisan± powy¿ej, ppp bêdzie logowa³o do pliku /var/log/ppp.log.
Log ten, podobnie jak strona manuala, zawiera wszystkie pomocne informacje.

<p>
<h3>dodatki do ppp(8)</h3>

<p>
W niektórych sytuacjach mo¿e zaj¶æ potrzeba wykonania jakiej¶ czynno¶ci w momencie,
gdy po³±czenie zostaje utracone lub nawi±zane. Do tego typu zadañ wykorzystuje siê
dwa pliki: <i>/etc/ppp/ppp.linkup</i> i <i>/etc/ppp/ppp.linkdown</i>.
Przyk³adowe konfiguracje znajdziesz poni¿ej:

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/etc/ppp/ppp.linkup.sample">ppp.linkup</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/src/etc/ppp/ppp.linkdown.sample">ppp.linkdown</a>
</ul>

<p>
<h3>odmiany ppp(8)</h3>

<p>
Bardzo wielu ISP oferuje obecnie us³ugi xDSL, znacznie szybsze ni¿ tradycyjne
metody dial-up. Opiszemy odmiany PPP takie jak ADSL i SDSL.
Chocia¿ nie nastêpuje fizyczne wdzwanianie, po³±czenia wci±¿ oparte s± na 
protokole Point to Point. Za³±czone przyk³ady:

<ul>
<li>PPPoE
<li>PPPoA
<li>PPTP
</ul>

<p>
<h3>PPPoE/PPPoA</h3>

<p>
Point to Point Protocol over Ethernet (PPPoE) pozwala na przesy³anie pakietów
PPP w ramkach ethernetowych.
Point to Point Protocol over ATM (PPPoA) dzia³a w sieciach ATM, takich jak te zbudowane 
w Wielkiej Brytanii i Belgii.

<p>
Oznacza to, ¿e mo¿esz nawi±zaæ po³±cznie z twoim ISP korzystaj±c tylko 
ze standardowej karty sieciowej i ethernetowego modemu DSL (w 
przeciwieñstwie do modemów USB).

<p>
Je¿eli posiadasz modem który rozumie PPPoE/PPPoA, mo¿liwe jest skonfigurowanie
modemu do nawi±zywania po³±czeñ. Alternatywnie, je¿eli modem posiada funkcjê
bridge'a, mo¿liwe jest jego w³±czenie i ustawienie modemu do przepuszczania 
pakietów na maszynê z uruchomionym PPPoE (patrz poni¿ej).

<p>
Podstawowym oprogramowaniem do PPPoE/PPPoA w OpenBSD jest
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=8">pppoe(8)</a>,
który jest implementacj± pracuj±c± w przestrzeni u¿ytkownika (w taki sam sposób jak
opisany wcze¶niej
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ppp&amp;sektion=8">ppp(8)</a>).
Implementacja PPPoE pracuj±ca w przestrzeni j±dra,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppoe&amp;sektion=4">pppoe(4)</a>,
zosta³a dodana do OpenBSD.

<p>
<h3>PPTP</h3>

<p>
Point to Point Tunneling Protocol (PPTP) jest prawnie zastrze¿onym
protoko³em Microsoft'u. 
Klient pptp dostêpny jest poprzez interfejsy z 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pppd&amp;sektion=8">pppd(8)</a>
i mo¿e po³±czyæ siê do opartych o PPTP wirtualnych sieci prywatnych (VPN) u¿ywanych
przez dostawców kablowych i xDSL.
Sam pptp musi byæ instalowany z <a href="faq15.html#PkgMgmt">pakietów</a> lub 
<a href="faq15.html#Ports">partów</a>.
Dodatkowe informacje o konfiguracji i u¿yciu pptp s± dostêpne na stronie manuala,
który instaluje siê razem z pakietem pptp.


<p>
<a name="Tuning"></a>
<h2>6.6 - Tuning parametrów sieciowych</h2>
<!-- XXXrelease -->

Jednym z za³o¿eñ projektu OpenBSD jest dostarczanie systemu który <i>Po Prostu Dzia³a</i>
dla rozleg³ej grupy u¿ytkowników.
"Krêcenie guziczkami" których nie rozumiesz najprawdopodobniej zepsuje
system zmiast poprawiæ jego wydajno¶æ.
Zawsze zaczynaj od ustawieñ domy¶lnych i zmieniaj je <i>tylko</i> wtedy
gdy naprawde masz z nimi problem.

<p>
<i>BARDZO NIEWIELE osób bêdzie musia³o wykonywaæ te zabiegi</i>

<p>
<h3>6.6.1 - Jak zmusiæ j±dro aby stosowa³o wiêksza liczbê ponowieñ
i d³u¿sze czasy timeout dla sesji TCP?</h3>

<p>
Zmiana tych standardowych ustawieñ mo¿e byæ pomocna w przypadku problemów
z po³±czeniem i routingiem. Oczywi¶cie, aby zmiany te dzia³a³y efektywnie
powinny z nich korzystaæ obie strony po³±czenia.

<p>
Do zmiany tych warto¶ci u¿yj <tt>sysctl</tt> i powiêksz warto¶ci:

<pre>
net.inet.tcp.keepinittime
net.inet.tcp.keepidle
net.inet.tcp.keepintvl
</pre>

<p>
Korzystaj±c z sysctl -a, mo¿esz obejrzeæ aktualne ustawienia tych
(i wielu innych) parametrów j±dra. Aby zmieniæ jeden z nich, skorzystaj
z <tt>sysctl net.inet.tcp.keepidle=28800</tt>.

<p>
<h3>6.6.2 - W jaki sposób uruchomiæ "directed broadcasts"?</h3>

<p>
W normalnej sytuacji nie powiniene¶ tego robiæ. Zezwala to bowiem komu¶ na
wys³anie pakietów pod adres(y) broadcast Twoich sieci w przypadku, gdy u¿ywasz
OpenBSD jako routera. 

<p>
Istnieje kilka przypadków w zamkniêtych sieciach gdy,
mo¿e byæ to u¿yteczne, zw³aszcza korzystaj±c ze starszych implementacji
protoko³u NetBIOS. Wykorzystujemy do tego celu kolejny sysctl:
<tt>sysctl net.inet.ip.directed-broadcast=1</tt>. Je¶li chcesz wiedzieæ
dlaczego domy¶lnie jest ta opcja wy³±czona poczytaj o atakach typu
<a href="http://www.netscan.org">smurf</a>.

<p>
<h3>6.6.3 - Nie chcê aby, j±dro dynamicznie przydziela³o pewne porty.</h3>

<p>
Tak¿e do tej konfiguracji s³u¿y sysctl. Czytaj±c w
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=8">sysctl(8)</a>:

<pre>
Decydowanie o li¶cie zarezerwowanych portów TCP, które nie powinny byæ
alokowane przez j±dro dynamicznie. Mo¿esz wykorzystaæ tê opcjê, aby
nie zezwalaæ demonom na "podkradanie" portów, z których korzystaj±
inne programy. Elementy listy oddzielony mog± byæ przecinkami i/lub
znakami bia³ymi.

 #  <b>sysctl net.inet.tcp.baddynamic=749,750,751,760,761,871</b>

Mo¿na tak¿e dodaæ, b±d¼ usun±æ, który¶ z wpisów aktualnej listy.

 #  <b>sysctl net.inet.tcp.baddynamic=+748</b>
 #  <b>sysctl net.inet.tcp.baddynamic=-871</b>
</pre>

<p>
<h3>6.6.4 - W jaki sposób zwiêkszyæ wydajno¶æ na naprawdê szybkich, silnie obci±¿onych
    interfejsach?</h3>
    
Je¿eli obserwujesz ograniczenia wydajno¶ci korzystaj±c z szybkich po³±czeñ WAN,
przepuszczaj±cych du¿e ilo¶ci danych, mo¿esz zaobserwowaæ zwiêkszenie wydajno¶ci
poprzez modyfikacjê poni¿szych sysctls:
 
<blockquote><pre>
net.inet.tcp.recvspace
net.inet.tcp.sendspace
</pre></blockquote>

Spróbuj u¿yæ warto¶ci takich jak 65536, zamiast domy¶lnych 16384.
Zwracamy uwagê, ¿e wielu nie zauwa¿y ¿adnej zmiany.
Nie zmieniaj tych ustawieñ, chyba ¿e faktycznie obserwujesz wydajno¶æ
poni¿ej twoich oczekiwañ.

<p>
<a name="NFS"></a>
<h2>6.7 - Proste wykorzystanie NFS</h2>

<p>
NFS, sieciowy system plików (Network File System) wykorzystywany jest do
wspó³dzielenia systemów plików w sieci. Przed przyst±pieniem do konfiguracji
NFS powiniene¶ zapoznaæ siê z kilkoma stronami manuala:

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nfsd&amp;sektion=8">nfsd(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mountd&amp;sektion=8">mountd(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=exports&amp;sektion=5">exports(5)</a>
</ul>

<p>
Dziêki temu rozdzia³owi w prosty sposób dowiesz siê jak skonfigurowaæ
NFS. Omawiamy wszystko na przyk³adzie serwera pracuj±cego w sieci LAN
oraz klientów, którzy wykorzystuj± w tej sieci NFS. W sekcji tej nie
bêdziemy poruszaæ zagadnieñ zwi±zanych z bezpieczeñstwem, zak³adamy,
¿e masz ju¿ skonfigurowany swój filtr pakietów lub inn± ochronê typu
firewall, aby uniemo¿liwiæ dostêp osobom z zewn±trz. Je¶li zamierzasz
zezwoliæ na dostêp do NFS z zewn±trz w celu wymiany poufnych
danych, które nie powinny trafiæ w niepowo³ane rêce, rekomendowane jest
wykorzystanie IPsec. W innym przypadku mo¿liwe
jest pods³uchanie ca³ego ruchu, który wymieniany jest przez NFS. Innym
sposobem na niepowo³ane dostanie siê do serwera jest podmienienie
adresu IP na taki, któremu zezwalasz na dostêp. Istnieje jeszcze kilka
metod ataku na NFS, jednak prawid³owo skonfigurowany IPsec stanowi skuteczn±
ochronê.


<h3>Konfiguracja serwera NFS</h3>

<p>
Poni¿sze us³ugi musz± byæ w³±czone i dzia³aj±ce na serwerze:

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=portmap&amp;sektion=8">portmap(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mountd&amp;sektion=8">mountd(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nfsd&amp;sektion=8">nfsd(8)</a>
</ul>

<p>
Domy¶lnie ka¿dy z nich jest wy³±czony w OpenBSD.
Aby je w³±czyæ dodaj podane ni¿ej wpisy do 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf.local&amp;sektion=8">rc.conf.local(8)</a>:

<blockquote><pre>
portmap=YES
nfs_server=YES
</pre></blockquote>

<p>
Nastêpnym etapem jest konfiguracja listy systemów plików które maj± byæ dostêpne
klientom do montowania.

<p>
W naszym przyk³adzie, mamy serwer z numerem IP 10.0.0.1.
Serwer ten bêdzie serwerem NFS tylko dla komputerów w jego w³asnej podsieci.
Odpowiednie ustawienia podawane s± w pliku /etc/exports.
Plik ten zawiera listê systemów plików które chcesz udostêpniaæ poprzez NFS oraz
zasady kto mo¿e mieæ do nich dostêp.
Istnieje wiele opcji które mog± byæ u¿yte w konfiguracji /etc/exports;
najlepiej przeczytaæ stronê manuala:
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=exports&amp;sektion=5">exports(5)</a>.
Dla naszego serwera plik eksportów powinien wygl±daæ tak:

<blockquote><pre>
#
# NFS exports Database
# See exports(5) for more information.  Be very careful, misconfiguration
# of this file can result in your filesystems being readable by the world.
/work -alldirs -ro -network=10.0.0 -mask=255.255.255.0
</pre></blockquote>

<p>
Powy¿szy wpis oznacza, ¿e system plików <tt>/work</tt> bêdzie dostêpny
poprzez NFS.
Opcja <tt>-alldirs</tt> powoduje, ¿e klienci bêd± mogli montowaæ ka¿dy 
katalog znajduj±cy siê wewn±trz <tt>/work</tt> podobnie jak sam 
<tt>/work</tt>.
Przyk³adowo, je¿eli istnieje katalog <tt>/work/monday</tt>, klienci
bêd± mogli podmontowaæ <tt>/work</tt> (i mieæ dostêp do wszystkich
plików/katalogów wewn±trz tego katalogu) lub podkatalog 
<tt>/work/monday</tt> i mieæ dostêp tylko do plików/katalogów w nim 
dostêpnych.
Opcja <tt>-ro</tt> sprawia ¿e klienci maj± dostêp tylko do odczytu.
Ostatnie dwa argumenty zapewniaj±, ¿e tylko klienci wewn±trz sieci
10.0.0.0 korzystaj±cej z netmaski 255.255.255.0 s± upowa¿nieni
do montowania tego systemu plików. Jest to szczególnie istotne w 
przypadku serwerów dostêpnych w ró¿nych sieciach.

<p>
Jeszcze jedna uwaga zwi±zana z bezpieczeñstwem. Nie dodawaj samych
systemów plików do /etc/exports bez listy hostów które mog±
mieæ dostêp do zasobów. Je¶li nie sprecyzujesz który lub które z nich 
mo¿e montowaæ odpowiedni katalog, ka¿dy, kto bêdzie móg³ ustanowiæ 
z Twoim serwerem po³±czenie, bêdzie móg³ montowaæ wszystkie eksportowane
przez Ciebie katalogi.

<p>
Teraz nale¿y uruchomiæ us³ugi serwera. Mo¿na po prostu go zrestartowaæ
(po uprzednim w³±czeniu ich jak zosta³o to pokazane wcze¶niej) lub
uruchomiæ je rêcznie.

<blockquote><pre>
# <b>/usr/sbin/portmap</b>
# <b>echo -n &gt;/var/db/mountdtab</b>
# <b>/sbin/mountd</b>
# <b>/sbin/nfsd -tun 4</b>
</pre></blockquote>

<p>
Argumenty podane nfsd w³±czaj± obs³ugê po³±czeñ TCP(-t) oraz UDP(-u) oraz
okre¶laj± 4 instancje (-n) nfsd.
Powiniene¶ ustawiæ odpowiedni± ilo¶æ instancji serwera NFS tak aby obs³u¿yæ
maksymaln± liczbê jednoczesnych rz±dañ klientów zasobów które udostêpniasz.

<p>
Wszystko powinno byæ teraz gotowe do podmontowania eksportowanych systemów
plików na klientach.

<p>
Pamiêtaj: Je¿eli wprowadzasz zmiany do /etc/exports w czasie gdy serwer
NFS jest uruchomiony, musisz poinformowaæ o tym mountd!
Po prostu prze¶lij sygna³ HUP i zmiany zostan± uwzglêdnione.

<blockquote><pre>
# <b>kill -HUP `cat /var/run/mountd.pid`</b>
</pre></blockquote>

<h3>Montowanie systemów plików NFS</h3>

<p>
Systemy plików NFS mog± byæ montowane bez potrzeby uruchamiania jakichkolwiek
us³ug lub demonów.
Mog± byæ montowane jak ka¿dy inny system plików.

<p>
Systemy plików NFS powinny byæ montowane przy pomocy mount(8), a bardziej
szczegó³owo przy pomocy
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mount_nfs&amp;sektion=8">mount_nfs(8)</a>.
Aby podmontowaæ system plików <tt>work</tt> na hoscie 10.0.0.1 pod lokalnym systemem plików
<tt>/mnt</tt> wykonaj:

<blockquote><pre>
# <b>mount -t nfs 10.0.0.1:/work /mnt</b>
</pre></blockquote>

(zwróæ uwagê ¿e nie musisz podawaæ adresu IP; mount(8) wykona odwzorowanie nazw).

<p>
Aby ten system zosta³ zamontowany podczas startu systemu, dodaj do /etc/fstab
linie odpowiadaj±ce podanym poni¿ej:

<blockquote><pre>
10.0.0.1:/work /mnt nfs rw 0 0
</pre></blockquote>

<p>
Wa¿ne jest by ustawiaæ <tt>0 0</tt> na koñcu linii, tak aby komputer 
nie próbowa³ wykonaæ fsck na montowanym systemie plików NFS.
Inne standardowe opcje bezpieczeñstwa, takie jak <tt>noexec</tt>, 
<tt>nodev</tt> oraz <tt>nosuid</tt>, powinny byæ u¿ywane zawsze gdy jest
to mo¿liwe.

Przyk³adowo:

<blockquote><pre>
10.0.0.1:/work /mnt nfs rw,nodev,nosuid 0 0
</pre></blockquote>

<p>
W ten sposób ¿adne pliki urz±dzeñ oraz programy suid na serwerze NFS 
nie bêd± mog³y ograniczañ bezpieczeñstwa na kliencie NFS.
Je¿eli nie montujesz programów w ktorych zamierzasz uruchamiaæ na kliencie
NFS, dodaj opcjê noexec do tej listy.

<p>
Podczas przegl±dania zamontowanego zasobu NFS jako root, serwer automatycznie
mapuje dostêp u¿ytkownika root na u¿ytkownika "nobody" oraz grupê "nobody".
Wa¿ne jest ¿eby o tym pamiêtaæ wobec uprawnieñ do plików.
Dla przyk³adu popatrzmy na plik o takich uprawnieniach:

<blockquote><pre>
-rw-------    1 root     wheel           0 Dec 31 03:00 _daily.B20143
</pre></blockquote>

<p>
Je¶li ten plik jest wspó³dzielony poprzez NFS i u¿ytkownik root bêdzie
stara³ siê do niego dostaæ z klienta NFS, dostêp zostanie zablokowany.
Dzieje siê tak dlatego, ¿e serwer korzysta z uwierzyletnienia u¿ytkownika
"nobody" gdy root stara siê o dostêp do pliku.
Bior±c pod uwagê, ¿e u¿ytkownik nobody nie ma praw dostêpu do pliku, dostêp
jest zabroniony.

<p>
U¿ytkownika i grupê na którego mapowany jest dostêp u¿ytkownika root
mo¿na konfigurowaæ poprzez plik
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=exports&amp;sektion=5">exports(5)</a>
na serwerze NFS.


<h3>Statystyki NFS</h3>

<p>
Jedn± z rzeczy jakie nale¿y sprawdziæ by upewniæ siê ¿e NFS dzia³a poprawnie
jest sprawdzenie czy wszystkie demony s± poprawnie zarejestrowane w RPC.
Chc±c to sprawdziæ, u¿yj rpcinfo(8).

<blockquote><pre>
$ <b>rpcinfo -p 10.0.0.1</b>
   program vers proto   port
    100000    2   tcp    111  portmapper
    100000    2   udp    111  portmapper
    100005    1   udp    633  mountd
    100005    3   udp    633  mountd
    100005    1   tcp    916  mountd
    100005    3   tcp    916  mountd
    100003    2   udp   2049  nfs
    100003    3   udp   2049  nfs
    100003    2   tcp   2049  nfs
    100003    3   tcp   2049  nfs
</pre></blockquote>

<p>
Podczas zwyk³ego u¿ytkowania, istnieje jeszcze kilka innych narzêdzi
pozwalaj±cych zobaczyæ co dzieje siê z NFS'em. Jedn± z nich jest:
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=showmount&amp;sektion=8">showmount(8)</a>,
dziêki któremu mo¿esz dowiedzieæ siê. jakie zasoby s± aktualnie 
zamontowane i przez kogo. Jest jeszcze 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nfsstat&amp;sektion=1">nfsstat(1)</a>,
który wy¶wietla kilka dodatkowych informacji. U¿ywaj±c showmount(8),
spróbuj <tt>/usr/bin/showmount -a host</tt>.
Przyk³adowo:

<blockquote><pre>
$ <b>/usr/bin/showmount -a 10.0.0.1</b>
All mount points on 10.0.0.1:
10.0.0.37:/work
</pre></blockquote>

<p>
Wynik tego polecenia pokazuje ¿e klient 10.0.0.37 podmontowa³ system
plików <tt>/work</tt> dostêpny na serwerze 10.0.0.1.


<a name="Bridge"></a>
<h2>6.9 - Konfiguracja sieciowego bridge`a w OpenBSD</h2>

<p>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridge&amp;sektion=4">Bridge</a>
jest pomostem ³±cz±cym dwie lub wiêcej odseparowanych od siebie sieci.
W przeciwieñstwie do rutera, bridge jest logicznie "niewidzialny",
dwa segmenty sieci my¶l±, ¿e tworz± jeden segment z hostami po drugiej
stronie bridge'a. Bridge bêdzie jedynie przekazywa³ pakiety pomiêdzy
segmentami sieci i umo¿liwia³ ³atwy i bezpo¶redni dostêp do zasobów
pomiêdzy hostami znajduj±cymi siê w odrêbnych segmentach sieci.

<p>
Pamiêtaj, ¿e ze wzglêdu na swój "niewidzialny" charakter dzia³ania,
interfejs sieciowy bridge'a mo¿e posiadaæ (lub nie) indywidualny
adres IP. Je¶li tak, interfejs ma dwa typy pracy, jeden jako bridge,
drugi jako zwyk³y, standardowy interfejs sieciowy. Je¶li interfejs nie posiada
adresu IP, bridge bêdzie przekazywa³ pakiety, jednak nie bêdzie
dostêpny z zewn±trz.

<p>
<h3>Przyk³ad bridge'a</h3>

<p>
Posiadam zbiór starych systemów komputerowych, ¿aden z nich nie ma wbudowanego
interfejsu 10BASE-TX. Posiadaj± natomiast ³±cza AUI lub AAUI. Jedn± z maszyn
jest terminal serwerowy z OpenBSD, maj±cy sta³e szybkie po³±czenie z tak±
sam± sieci±. Dodanie kolejnego interfejsu z portem coax pozwoli na wykorzystanie
tej maszyny jako bridge'a pomiêdzy sieciami coax.

<p>
System ten posiada dwa interfejsy, Intel EtherExpress/100
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=fxp&amp;sektion=4"><tt>fxp0</tt></a>)
i kartê 3c590-Combo
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ep&amp;sektion=4"><tt>ep0</tt></a>)
dla portu coax. <tt>fxp0</tt> jest interfejsem pod³±czonym do pozosta³ej
czê¶ci sieci, a zatem bêdzie mieæ przypisany adres IP, <tt>ep0</tt>
bêdzie tworzyæ bridge bez przypisanego adresu IP. Hosty pod³±czone
do segmentu coax bêd± mog³y siê ze sob± komunikowaæ tak, jakby by³y
w drugiej czê¶ci sieci. Jak do tego dojdziemy?

<p>
Plik <tt>hostname.fxp0</tt> zawiera konfiguracjê interfejsu <tt>fxp0</tt>.
Korzysta on z informacji dostarczanych przez DHCP, wiêc plik wygl±da
w poni¿szy sposób:

<blockquote><pre>
$ <b>cat /etc/hostname.fxp0</b>
dhcp NONE NONE NONE
</pre></blockquote>

<p>
Bez niespodzianek.

<p>
Karta <tt>ep0</tt> posiada nieco inn± konfiguracjê:

<blockquote><pre>
$ <b>cat /etc/hostname.ep0</b>
up media 10base2
</pre></blockquote>

<p>
Instruujemy system, aby aktywowa³ interfejs korzystaj±c z
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>
i ustawi³ tryb pracy na 10BASE-2 (coax). Nie przypisujemy do interfejsu
adresu IP, ani ¿adnych podobnych informacji. Opcje kart <tt>ep</tt>
znajdziesz na <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ep&amp;sektion=4">stronie manuala</a>.

<p>
Teraz musimy uruchomiæ bridge. Inicjujemy go, poprzez plik konfiguracyjny
nazwany w stylu
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridgename.if&amp;sektion=5"><tt>bridgename.bridge0</tt></a>.
A oto i jego przyk³adowa zawarto¶æ:

<blockquote><pre>
$ <b>cat /etc/bridgename.bridge0</b>
add fxp0
add ep0
up
</pre></blockquote>

<p>
Oto ca³a filozofia tworzenia bridge'a sk³adaj±cego siê z dwóch interfejsów
sieciowych fxp0 i ep0 oraz jego aktywacji. Czy jest istotna kolejno¶æ w
jakiej to robimy? Nie, nale¿y bowiem pamiêtaæ, ¿e bridge jest symetryczny -
pakiety wêdruj± w obu kierunkach.

<p>
To ju¿ wszystko! Uruchom ponownie system i ciesz siê funkcjonalno¶ci±
swojego bridge'a.

<p>
<h3>Filtrowanie pakietów w systemie z bridge'm</h3>
<!-- XXXchanges - changes with OpenBSD 3.3 -->

Czêsto, nawet podczas u¿ywania tak prostego bridge'a jak ten, mo¿e zaj¶æ
potrzeba zrobienia CZEGOKOLWIEK z pakietami wêdruj±cymi przez niego.
Jak pewnie siê domy¶lasz, <a href="#PF">Filtr Pakietów</a> potrafi
doskonale sobie z tym radziæ i kontrolowaæ ruch wêdruj±cy poprzez
bridge.

<p>
Uwa¿aj, pamiêtaj o dwukierunkowej naturze bridge'a, o tym, ¿e czê¶æ
danych wêdruje poprzez dwa interfejsy, tak wiêc wystarczy, gdy bêdziesz
je filtrowa³ na jednym z nich. Twoje domy¶lne regu³ki "Pass all" mog±
wygl±daæ w ten sposób:

<blockquote><pre>
pass in  on ep0  all
pass out on ep0  all
pass in  on fxp0 all
pass out on fxp0 all
</pre></blockquote>

<p>
Teraz, powiedzmy ¿e chcia³bym filtrowaæ ruch wêdruj±cy z/do starych maszyn,
które wymieni³em powy¿ej. Chcê zezwoliæ im na korzystanie jedynie z us³ug www
oraz SSH. W tym przypadku, zezwalamy na przemieszczanie siê pakietów w obu kierunkach
poprzez interfejs <tt>ep0</tt>, natomiast filtrowania dokonujemy na interfejsie <tt>fxp0</tt>,
u¿ywaj±c opcji <tt>keep state</tt> do przechwytywania powracaj±cych danych:

<blockquote><pre>
# Przepu¶æ ca³y ruch przez ep0
pass in quick on ep0 all
pass out quick on ep0 all

# Zablokuj ca³y ruch na interfejsie fxp0
block in  on fxp0 all
block out on fxp0 all

pass in quick on fxp0 proto tcp from any to any port {22, 80} \
     flags S/SA keep state
</pre></blockquote>

<p>
Zauwa¿ ¿e ten zestaw regu³ek, zablokuje wszystko za wyj±tkiem ruchu HTTP i SSH
przed dotarciem zarówno do naszego bridge'a jak i ka¿dego hosta "za nim".
Inne rezultaty mo¿esz osi±gn±æ filtruj±c ruch na drugim interfejsie.

<p>
Do monitorowania i kontrolowania utworzonego bridge'a, korzystaj z
komendy
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8">brconfig(8)</a>
która mo¿e byæ równie¿ u¿ywana do stworzenia bridge'a.

<p>
<h3>Uwagi na temat bridge'a</h3>

<ul>
<li>Jest BARDZO zalecane, aby¶ filtruj±c pakiety, robi³ to na tylko
jednym interfejsie. Je¶li uwa¿asz, ¿e musisz filtrowaæ dwa interfejsy,
upewnij siê, ¿e naprawdê rozumiesz co robisz.

<li>Poprzez u¿ycie opcji <i>blocknonip</i> komendy
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=brconfig&amp;sektion=8">brconfig(8)</a>
lub podanie jej w
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridgename.if&amp;sektion=5">bridgename.bridge0</a>,
mo¿esz zablokowaæ ka¿dy ruch za wyj±tkiem IP (jak nt IPX czy NETBEUI)
przed przedostaniem siê przez Twój filtr. Mo¿e to byæ bardzo pomocne
w kilku przypadkach, pamiêtaj bowiem, ¿e bridge pracuje z ka¿dym protoko³em,
nie tylko IP.

<li>Bridge wymaga aby interfejsy sieciowe pracowa³y w trybie "promiscuous"
-- nas³uchuj± ka¿dy ruch w sieci, nie tylko ten przeznaczony do nich samych.
Powoduje to wiêksze obci±¿enie procesora i magistrali systemowej.
Niektóre karty maj± problemy z prac± w tym trybie, dla przyk³adu
chipy TI ThunderLAN -
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tl&amp;sektion=4">tl(4)</a>)
s± przyk³adem urz±dzenia, które nie mo¿e pracowaæ jako czê¶æ bridge'a.
</ul>

<a name="PXE"></a>
<h2>6.10 - Konfiguracja PXE (i386, amd64)</h2>

<p>
Preboot Execution Environment, czyli PXE, pozwala wystartowaæ komputer
z sieci zamiast z dysku twardego, napêdu CDROM, czy te¿ z dyskietki
startowej. Technologiê t± opracowa³ Intel, jest jednak wspierana
przez znakomit± wiêkszo¶æ kart sieciowych i producentów komputerów.
Warto zwróciæ uwagê, ¿e istnieje kilka standardów startu systemu z sieci,
przy czym PXE opracowano stosunkowo niedawno.
Tradycyjnie, PXE wykorzystuje pamiêci ROM na kartach sieciowych
(b±d¼ te¿ na p³ytach g³ównych). S± jednak dostêpne odpowiednie dyskietki
startowe, pozwalaj±ce na wykorzystanie PXE.
Wiele pamiêci ROM na starszych kartach sieciowych wspiera bootowanie
z sieci, NIE wspiera jednak PXE - obecnie nie mo¿na ich wykorzystaæ do
startu na architekturach: OpenBSD/i386 oraz amd64.

<h3>Jak przebiega proces bootowania w PXE?</h3>
Po pierwsze musimy zrozumieæ pocz±tkowy proces <a
href="faq14.html#Boot386">bootowania OpenBSD</a>
na platformach i386 i amd64.
Podczas startu systemu, kompatybilna z PXE karta sieciowa rozg³asza
¿±danie DHCP.
Serwer DHCP przydziela na podstawie adresu MAC karty sieciowej, adres IP,
oraz przekazuje nazwê pliku do pobrania z serwera
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tftp&amp;sektion=1"
>tftp(1)</a>.
Plik ten odpowiada za dalsz± czê¶ci± startu systemu. W OpenBSD plikiem
tym jest  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pxeboot&amp;sektion=8&amp;arch=i386"
>pxeboot(8)</a>, który zastêpuje standardowy plik
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=boot&amp;sektion=8&amp;arch=i386"
>boot(8)</a>.
pxeboot(8) umo¿liwia za³adowanie i wykonanie j±dra systemu (dla przyk³adu: <tt>bsd</tt> lub <a href="faq4.html#bsd.rd"><tt>bsd.rd</tt></a>) z serwera 
tftp(1).

<h3>Jak mam to wykonaæ?</h3>
By rozpocz±æ wymagane jest posiadanie karty sieciowej (lub komputera)
kompatybilnej z PXE. Niektóre dokumentacje podaj± listê kart sieciowych i
komputerów zgodnych z PXE. Nie jest to do koñca prawda, poniewa¿ wiele
tanich urz±dzeñ nie zawiera modu³ów PXE ROM lub u¿ywa starego protoko³u.
Co wiêcej, wymagane jest tak¿e poprawne skonfigurowanie serwerów
<a href="#DHCP">DHCP</a> i TFTP.

<p>
Zak³adaj±c, ¿e maszyna z OpenBSD jest ¼ród³em plików startowych
(NIE jest to wymagane). Plik konfiguracyjny serwera DHCP <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhcpd.conf&amp;sektion=5"
>dhcpd.conf</a> powinien zawieraæ liniê:

<pre>
    filename "pxeboot";
</pre>

je¿eli w zamierzeniu OpenBSD udostêpnia ten plik startuj±cym stacjom
roboczym. Na przyk³ad:

<pre>
    shared-network LOCAL-NET {
	option domain-name "example.com";
	option domain-name-servers 192.168.1.3, 192.168.1.5;
    
	subnet 192.168.1.0 netmask 255.255.255.0 {
	    option routers 192.168.1.1;
	    <b>filename "pxeboot";</b>
	    range 192.168.1.32 192.168.1.127;
	    default-lease-time 86400;
	    max-lease-time 90000;
	}
    }
</pre>

<p>
Konieczne jest tak¿e uruchomienie demona <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=tftpd&amp;sektion=8"
>tftpd(8)</a>.  Standardowo wykonujemy to poprzez  
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inetd&amp;sektion=8"
>inetd(8)</a>.
Standardowa instalacja OpenBSD posiada przyk³adow± liniê w <tt>inetd.conf</tt>
która bêdzie dla ciebie pomocna:

<pre>
    #tftp dgram udp wait root /usr/libexec/tftpd tftpd -s /tftpboot
</pre>

(usuwamy # z pocz±tku tej linii) i wys³aniem do procesu inetd(8) 
sygna³u -HUP, aby prze³adowaæ <tt>/etc/inetd.conf</tt>. 
Serwer tftpd(8)  udostêpnia pliki z zaznaczonego katalogu, w naszym
przypadku jest to katalog <tt>/tftpboot</tt>.
Oczywi¶cie, katalog ten musi zostaæ utworzony i udostêpniony.
W typowym rozwi±zaniu potrzebujemy tylko kilku plików dla PXE:

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pxeboot&amp;sektion=8&amp;arch=i386" 	 
>pxeboot</a>, czyli PXE boot loader (oferuj±cy podobn± funkcjonalno¶æ
jak <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=boot&amp;sektion=8&amp;arch=i386"
>boot</a> przy starcie z napêdu lokalnego).
<li><a href="faq4.html#bsd.rd">bsd.rd</a> lub <tt>bsd</tt>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=boot.conf&amp;sektion=8&amp;arch=i386"
>/etc/boot.conf</a>, plik konfiguracji bootowania
</ul>

Zwróæ uwagê, ¿e plik <tt>/etc/boot.conf</tt> wykorzystujemy tylko w
sytuacji gdy j±dro które chcemy wykorzystaæ nazwane jest inaczej ni¿
<tt>bsd</tt>, lub w sytuacji gdy inne domy¶lne ustawienia pxeboot
nie s± nam potrzebne (np. gdy chcemy u¿ywaæ konsoli szeregowej).
Mo¿esz przetestowaæ dzia³anie swojego serwera tftpd(8)
przy pomocy klienta <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=tftp&amp;sektion=1"
>tftp(1)</a>, aby upewniæ siê ¿e mo¿esz pobraæ niezbêdne pliki.

<p>
Zak³adaj±c, ¿e serwery DHCP i TFTP s± ju¿ skonfigurowane, jeste¶my gotowi
do przetestowania konfiguracji.
Pozostaje tylko aktywowaæ PXE na stacji roboczej.
W trakcie uruchamiania systemu powinni¶my zobaczyæ:

<pre>
    Intel UNDI, PXE-2.0 (build 067)
    Copyright (C) 1997,1998 Intel Corporation
    
    For Realtek RTL 8139(X) PCI Fast Ethernet Controller v1.00 (990420)
    
    DHCP MAC ADDR: 00 E0 C5 C8 CF E1
    CLIENT IP: 192.168.1.76 MASK: 255.255.255.0 DHCP IP: 192.168.1.252
    GATEWAY IP: 192.168.1.1
    probing: pc0 com0 com1 apm pxe!2.1 mem540k 28m a20=on
    disk: hd0*
    net: mac 00:e0:c5:c8:cf:e1, ip 192.168.1.76, server 192.168.1.252
    >> OpenBSD/i368 PXEBOOT 1.00
    boot>
</pre>

W tym momencie otrzymujemy standardowy boot prompt. Je¿eli wpiszemy
"<tt>bsd.rd</tt>", zostanie pobrany plik <tt>bsd.rd</tt> z serwera TFTP.

<pre>
    >> OpenBSD/i386 PXEBOOT 1.00
    boot> bsd.rd
    booting tftp:bsd.rd: 4375152+733120 58+122112+105468=0x516d04
    entry point at 0x100120
    
    Copyright (c) 1982, 1986, 1989, 1991, 1993
	The Regents of The University of California. All rights reserved.

    Copyright (c) 1995-2008 OpenBSD.  All rights reserved.  http://www.OpenBSD.org

    OpenBSD 4.4 (RAMDISK_CD) #857: Tue Aug 12 17:31:49 MDT 2008
     ...
</pre>

Rozpoczyna siê start systemu z <a href="faq4.html#bsd.rd">j±drem
instalacyjnym bsd.rd</a>.

<p>
<h3>Czy mo¿liwe jest u¿ycie innych kerneli ni¿ <tt>bsd.rd</tt>?</h3>

Tak, chocia¿ z narzêdziami dostêpnymi w OpenBSD, PXE zosta³o
zaplanowane raczej do instalacji systemu.

<a name="CARP"></a>
<h2>6.11 - Common Address Redundancy Protocol (CARP)</h2>
<h3>6.11.1 - Czym jest CARP i w jaki sposób dzia³a?</h3>
<!-- This article written by Sunny Raspet, slr@@mordac.info, and
released under the BSD license -->

<p>
CARP jest narzêdziem, które pozwala uczyniæ system redundantnym poprzez
utworzenie wirtualnej sieci pomiêdzy komputerami, dziêki czemu w przypadku
awarii jednego z nich, inny przejmuje jego rolê, ewentualnie obci±¿enie
rozk³adane jest na pozosta³e maszyny.
CARP jest udoskonaleniem standardu Virtual Router Redundancy Protocol
(VRRP).
Zosta³ opracowany, gdy uznano ¿e VRRP nie jest wystarczaj±co "wolny",
ze wzglêdu na mo¿liwo¶æ objêcia go patentami CISCO.
Aby uzyskaæ wiêcej informacji o pochodzeniu CARP`a, a tak¿e aspektach
prawnych towarzysz±cych VRRP, odwied¼ t± 
<a href="../../lyrics.html#35">stronê</a>.

<p>
Ze wzglêdu na problemy licencyjne Ryan McBridge (z pomoc± Michael
Shalayeff'a, Marco Pfatschbacher'a i Markusa Friedl'a)
zaprojektowa³ CARP jako narzêdzie fundamentalnie ró¿ne od VRRP.
W³±czenie kryptografii jest najbardziej widoczn± zmian±, wci±¿ jednak
jest to tylko jedna z wielu zmian.

<p>
Jak to dzia³a: CARP jest protoko³em multicastowym.
Grupuje kilka fizycznych maszyn w jednej lub kilku wirtualnych sieciach.
W tej grupie, jeden komputer pe³ni role zarz±dzaj±cego (master`a) i
odpowiada na pakiety kierowane do ca³ej grupy.
Pozosta³e pe³ni± rolê "zapasowych" (ang. "hot spares").
Nie ma znaczenia jaki jest adres IP lub MAC fizycznego interfejsu,
pakiety wys³ane na adres CARP wracaj± z informacj± CARP.

<p>
W konfigurowalnych odstêpach czasu, komputer zarz±dzaj±cy (ang. master)
rozg³asza swoj± aktywno¶æ na protokole 112.
Je¿eli master zostanie od³±czony, systemy z grupy CARP rozpoczynaj±
rozg³aszanie, przy czym host rozg³aszaj±cy najczê¶ciej staje siê nowym
masterem grupy.
Ponowne pojawienie siê g³ównego systemu, domy¶lnie powoduje,
¿e staje siê on zapasowym, o ile nie jest po¿±dane by jedna maszyna
stawa³a siê masterem zawsze kiedy jest dostêpna (dla przyk³adu,
gdy jeden host jest szybkim Sun Fire V120 natomiast pozosta³e to
nieporównywalnie s³absze SPARCstation). Mo¿esz to oczywi¶cie 
skonfigurowaæ.

<p>
O ile wysoko redundantne i odporne na zak³ócenia urz±dzenia minimalizuj±
potrzebê posiadania CARP`a, ca³kowicie nie wykluczaj± jego zasadno¶ci.
Nie istnieje bowiem urz±dzenie mog±ce zachowaæ zdolno¶ci operacyjne
po od³±czeniu go od ¼ród³a zasilania, lub w sytuacji gdy administrator
wpisze <tt>reboot</tt> w niew³a¶ciwym oknie.
CARP pozwala tak¿e u³atwiæ paczowanie i cykliczne restarty w sposób
prze¼roczysty dla u¿ytkowników, a tak¿e testy oprogramowania i modernizacje
sprzêtu - "je¿eli nie dzia³a, mo¿esz wróciæ, zacz±æ od pocz±tku, a¿ do
uzyskania porz±danego efektu".

<p>
Wystêpuj± jednak sytuacje, w których CARP nie pomo¿e.
Architektura protoko³u CARP wymaga by hosty z grupy nale¿a³y do tej samej
fizycznej podsieci ze statycznym adresem IP, chocia¿ wraz z wprowadzeniem
dyrektywy carpdev, nie istnieje potrzeba by fizyczny interfejs sieciowy
posiada³ adres IP.
Podobnie, us³ugi wymagaj±ce sta³ego po³±czenia z serwerem (takie jak SSH
czy IRC), nie mog± byæ prze¼roczy¶cie przenoszone na inny system, w takiej
sytuacji jednak CARP pomaga zminimalizowaæ czas niedostêpno¶ci.
CARP sam w sobie nie synchronizuje danych pomiêdzy aplikacjami, ta czynno¶æ
jest wykonywana przy u¿yciu "alternatywnych kana³ów" takich jak
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfsync&amp;sektion=4">pfsync(4)</a>
(dla nadmiarowego filtrowania pakietów), manualnego kopiowania danych
pomiêdzy serwerami przy u¿yciu <a href="http://rsync.samba.org/">rsync</a>,
lub dowolnej innej metody specyficznej dla danej aplikacji.

<h3>6.11.2 - Konfiguracja.</h3>

<p>
Konfiguracja CARP`a tworzona jest przy pomocy dwóch narzêdzi: 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=8">sysctl(8)</a> oraz 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>.
Zacznijmy od sysctl.

<p>
Parametr <tt>net.inet.carp.allow</tt> definiuje czy dany host bêdzie
odbiera³ pakiety przeznaczone dla CARP. Oczywi¶cie, jest to niezbêdne,
aby korzystaæ z CARP. Ta opcja jest domy¶lnie w³±czona.

<p>
Parametr <tt>net.inet.carp.arpbalance</tt> u¿ywany jest do rozk³adania
obci±¿enia. W³±czenie jej powoduje, ¿e CARP zapisuje w tablicach
hash`uj±cych ¼ród³owy adres IP rozg³oszenia.
Klucze tablicy hash`uj±cej jest pó¼niej wykorzystywane do wyboru
wirtualnego hosta z dostêpnej grupy zdolnej by odpowiedzieæ na zapytanie.
Ta opcja jest domy¶lnie wy³±czona.

<p>
Trzeci parametr, <tt>net.inet.carp.log</tt>, aktywuje logowanie b³êdów
w CARP. Opcja domy¶lnie wy³±czona.

<p>
Czwarty arametr, <tt>net.inet.carp.preempt</tt>, aktywuje naturalna
selekcjê w¶ród hostów CARP. Host rozg³aszaj±cy najszybciej staje siê
master'em. Opcja domy¶lnie wy³±czona, co oznacza ¿e system nie bêd±cy
masterem nie bêdzie siê o ten status ubiega³.

<p>
Wszystkie te parametry s± szczegó³owo opisane w 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=3">sysctl(3)</a>.

<p>
Pozosta³± czê¶æ konfiguracji CARP`a wykonujemy z poziomu 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>.
Parametry specyficzne dla CARP <tt>advbase</tt> i
<tt>advskew</tt> dotycz± przedzia³u pomiêdzy rozg³oszeniami CARP.
Warto¶æ (w sekundach) to <tt>advskew</tt> dzielone przez 256,
i ustawione w <tt>advbase</tt>.
Aby ograniczyæ ruch sieciowy, lub zwiêkszyæ opó¼nienie zanim system
zapasowy przejmie zadania u¿ywamy <tt>advbase</tt>.
Polecenie <tt>advskew</tt> pozwala na ustalenie który host bêdzie masterem,
minimalizuj±c opó¼nienie zwi±zane z elekcj±.

<p>
Parametry <tt>pass</tt> i <tt>vhid</tt> ustalaj± odpowiednio has³o i numer
identyfikacyjny grupy CARP. Nale¿y ustawiæ unikalne numery ka¿dej
z grup CARP, nawet je¿eli, ze wzglêdu na rozk³adanie obci±¿enia,
dziel± ten sam adres IP. CARP dopuszcza 255 grup.

<p>
Wreszcie, <tt>carpdev</tt> okre¶la który fizyczny interfejs nale¿y do
okre¶lonej grupy CARP.
Domy¶lnie jakikolwiek interfejs posiada adres IP w tej samej podsieci
przypisanej do CARP, bêdzie on u¿ywany.

<p>
Uwzglêdnijmy wszystkie te informacje w testowej konfiguracji.
Zak³adamy ¿e posiadamy dwa identycznie skonfigurowane serwery WWW:
<i>rachael</i> (192.168.0.5) oraz <i>pris</i> (192.168.0.7),
które maj± zast±piæ stary system o adresie 192.168.0.7.
Zaczynamy:

<blockquote><pre>
rachael# <b>ifconfig carp0 create</b>
rachael# <b>ifconfig carp0 vhid 1 pass tyrell carpdev fxp0 \
&nbsp;&nbsp;&nbsp;&nbsp;192.168.0.7 netmask 255.255.255.0</b>
</pre></blockquote>

<p>
Pierwsze polecenie tworzy interfejs carp0, drugie ustawia dla tego interfejsu
vhid równe 1, has³o <i>tyrell</i> i adres 192.168.0.7 z netmask± 255.255.255.0.
Przypisanie interfejsu fxp0 jako cz³onka.
By mieæ pewno¶æ, ¿e uzyskamy te ustawienia po restarcie systemu, mo¿emy 
utworzyæ plik <tt>/etc/hostname.carp0</tt> z wpisem:

<blockquote><pre>
inet 192.168.0.7 255.255.255.0 192.168.0.255 vhid 1 pass tyrell carpdev fxp0
</pre></blockquote>

Zauwa¿my, ¿e adres broadcast jest podany w tej linii jako parametr dodatkowy
obok vhid oraz password.
Niepowodzenie takiego postêpowania powoduje czêste wystepowanie b³êdów,
aczkolwiek jest to niezbêdne jako "place holder".

<p>
Identycznie postêpujemy na serwerze <i>pris</i>. System, który jako
pierwszy podniesie interfejs CARP stanie siê masterem (zak³adaj±c, ¿e
preempt jest wy³±czony; odwrotnie jest to prawd± je¿eli preempt jest 
w³±czony).

<p>
Powiedzmy jednak, ¿e nie stawiasz systemu od zera.
<i>Rachael</i> jest dzia³aj±cym systemem z adresem 192.168.0.7.
Jak sobie z tym poradziæ?
Szczê¶liwie, CARP potrafi sobie radziæ z tak± sytuacj±. Mo¿esz po prostu
przypisaæ adres do interfejsu CARP i pozostawiæ fizyczny interfejs wpisany
w 'carpdev' bez przypisanego adresu IP.  

<p>
Zwiêkszmy poziom skomplikowania, aby <i>rachael</i> stawa³ siê masterem
kiedy tylko bêdzie to mo¿liwe. Takie rz±danie mo¿e byæ uzasadnione kilkoma
czynnikami: ró¿nice sprzêtowe, zwyk³e uprzedzenie ("je¿eli ten system nie
jest masterem, to jest problem"), lub znajomo¶æ domy¶lnego mastera bez
konieczno¶ci okresowego sprawdzania.

<p>
Na systemie <i>rachael</i> u¿yjemy sysctl i wyedytujeny
<tt>/etc/sysctl.conf</tt> by utrwaliæ wprowadzone zmiany:

<blockquote><pre>
rachael# <b>sysctl net.inet.carp.preempt=1</b>
</pre></blockquote>

<p>
W systemie <i>pris</i>:


<blockquote><pre>
pris# <b>ifconfig carp0 advskew 100</b>
</pre></blockquote>

<p>
znacznie opó¼ni rozg³aszanie <i>pris</i>`a, czyni±c <i>rachael</i>
masterem kiedy tylko bêdzie dostêpny.

<p>
Zauwa¿my, ¿e u¿ywaj±c PF'a na maszynie z CARP`em musimy przepu¶ciæ
"proto carp" na ka¿dym interfejsie obs³uguj±cym protokó³ CARP,
przy pomocy sk³adni podobnej do:

<blockquote><pre>
pass on fxp0 proto carp keep state
</pre></blockquote>

<h3>6.11.3 - Rozk³adanie obci±¿enia.</h3>

<p>
Rozwa¿my sytuacjê z poprzedniego przyk³adu za kilka miesiêcy. Nasza firma
rozros³a siê w tym czasie i jeden serwer WWW to po prostu za ma³o.
Co mo¿emy zrobiæ? Mo¿emy u¿yæ CARP'a. Czas wypróbowaæ rozk³adanie
obci±¿enia. Stwórzmy nowy interfejs i grupê CARP na <i>rachael</i>:


<blockquote><pre>
rachael# <b>ifconfig create carp1</b>
rachael# <b>ifconfig carp1 vhid 2 advskew 100 pass bryant carpdev fxp0 \
&nbsp;&nbsp;&nbsp;&nbsp;192.168.0.7 netmask 255.255.255.0</b>
</pre></blockquote>

<p>
Na <i>pris</i>`ie utwórzmy now± grupê i nowy interfejs podobnie,
przy czym ustawiamy "preempt" w sysctl:

<blockquote><pre>
pris# <b>ifconfig carp1 create</b>
pris# <b>ifconfig carp1 vhid 2 pass bryant carpdev fxp0 \
&nbsp;&nbsp;&nbsp;&nbsp;192.168.0.7 netmask 255.255.255.0</b>
pris# <b>sysctl net.inet.carp.preempt=1</b>
</pre></blockquote>

<p>
Teraz mamy dwie grupy CARP na tym samym adresie IP.
Ka¿da grupa jest powi±zana z innym hostem, co oznacza,
¿e <i>rachael</i> wci±¿ pozostaje masterem pocz±tkowej grupy,
lecz <i>pris</i> przejmuje now±. 

<p>
Jedyne co musimy jeszcze
zrobiæ to w³±czyæ rozk³adanie obci±¿enia na obu maszynach:

<blockquote><pre>
# <b>sysctl net.inet.carp.arpbalance=1</b>
</pre></blockquote>

<p>
Opisane przyk³ady dotycz± wprawdzie klastra z dwoma maszynami,
nic jednak nie stoi na przeszkodzie by zastosowaæ to do wiêkszej
ich ilo¶ci. Zauwa¿my jednak, ¿e nie nale¿y oczekiwaæ roz³o¿enia
50/50 pomiêdzy maszynami - CARP
korzysta z klucza mieszaj±cego by okre¶liæ który system podejmie siê
odpowiedzi, znacznie bardziej ni¿ opieraj±c siê na aktualnym obci±¿eniu.

<h3>6.11.4 - Wiêcej informacji o CARP</h3>
<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=carp&amp;sektion=4">carp(4)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=8">sysctl(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=3">sysctl(3)</a>
<li><a href="http://www.countersiege.com/doc/pfsync-carp/">Firewall Failover with pfsync and CARP</a> 
autor: Ryan McBride
</ul>

<a name="OpenNTPD"></a>
<h2>6.12 - Korzystanie z OpenNTPD</h2>

Dok³adny czas jest istotny dla wielu aplikacji.
Jednak¿e, wiele osób twierdzi ¿e ich tanie zegarki za 5$ podaj±
dok³adniejszy czas ni¿ komputer za 2000$. Ponadto, poza wiedz± jaki
jest czas, wa¿na jest  synchronizacja komputerów tak by zgadza³y siê
ze sob± co do tego jaki jest czas.
Jaki¶ czas temu <a href="http://www.ntp.org">ntp.org</a> 
wprowadzi³o zgodn± ze specyfikacj± Network Time
Protocol (<a href="http://www.ietf.org/rfc/rfc1305.txt">RFC1305</a>,
<a href="http://www.ietf.org/rfc/rfc2030.txt">RFC2030</a>) aplikacjê,
dostêpn± poprzez system <a href="faq15.html#Ports">portów</a>, i umo¿liwiaj±c±
synchronizacjê zegarów komputerów poprzez Internet.
Jest to jednak zaawansowany program, z trudnym do audytu kodem, i sporymi
zapotrzebowaniami na pamiêæ operacyjn±. Na krótsz± metê odegra³ wa¿n± rolê
dla wielu ludzi, jednak jest daleki od "rozwi±zania dla wszystkich".

<p>
<a href="http://www.openntpd.org">OpenNTPD</a> usi³uje rozwi±zaæ wiêkszo¶æ
tych problemów, daj±c ³atw± w administracji, bezpieczn± i prost± drogê do
posiadania dok³adnego czasu na w³asnym komputerze.
Dostêpny w OpenBSD demon 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ntpd&amp;sektion=8">ntpd(8)</a>,
posiada ³atwy i przejrzysty plik konfiguracyjny 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ntpd.conf&amp;sektion=5"><tt>/etc/ntpd.conf</tt></a>.

<p>
Proste uruchomienie ntpd(8), poprzez <a href="faq10.html#rc">rc.conf.local</a>, spowoduje
powolne dostrajanie zegara twojego komputera a nastêpnie utrzymywanie go zsynchronizowanego 
z jednym z publicznie dostêpnych
serwerów czasu <a href="http://www.pool.ntp.org/">pool.ntp.org</a>.
Gdy ju¿ zegar bêdzie ustawiony, ntpd bêdzie go utrzymywa³ na bardzo niskim
poziomie niedok³adno¶ci, jednak¿e, je¿eli twój zegar jest niedok³adny o wiêcej ni¿
kilka minut jest <i>bardzo</i> zalecane by ustawiæ go pocz±tkowo mo¿liwie dok³adnym, poniewa¿
mo¿e potrwaæ dni lub tygodnie by zsynchronizowaæ bardzo niedok³adny zegar.
Mo¿esz to zrobiæ korzystaj±c z opcji "<tt>-s</tt>" dla ntpd(8) lub innego programu
pozwalaj±cego ustawiæ aktualny czas systemowy.

<a name="OpenNTPDaccurate"></a>
<h3>6.12.1 - "Ale OpenNTPD nie jest tak dok³adny jak demon pochodz±cy z ntp.org!"</h3>
To mo¿e byæ prawd±.
Nie jest to (wiêksza ni¿ ntpd dok³adno¶æ) g³ówne
<a href="http://www.openntpd.org/goals.html">za³o¿enie</a> OpenNTPD,
chodzi³o raczej o stworzenie narzêdzia wolnego, bezpiecznego i prostego.
Je¿eli naprawdê potrzebujesz by twój zegar chodzi³ mikrosekundê dok³adniej
ni¿ to oferuje OpenNTPD, swobodnie u¿ywaj demona ntpd pochodz±cego
z ntp.org, poniewa¿ wci±¿ bêdzie on dostêpny poprzez porty i pakiety.
Nie istnieje ¿aden powód czy te¿ pragnienie by kod OpenNTPD "puch³"
pod±¿aj±c za ka¿d± wymy¶l± funkcjonalno¶ci±.

<a name="OpenNTPDharmful"></a>
<h3>6.12.2 - "Kto¶ twierdzi ¿e OpenNTPD jest 'szkodliwy'!"</h3>
Niektórzy ludzie mog± nie zrozumieæ za³o¿eñ OpenNTPD -- prostej,
bezpiecznej i ³atwej w zarz±dzaniu drogi do utrzymywania dok³adnego czasu.
 

Je¶li dok³adno¶æ czasu jest istotna, wielu u¿ytkowników zg³asza³o lepsze
rezultaty w stosunku do OpenNTPD ni¿ ntpd z ntp.org.
Je¶li bezpieczeñstwo jest istotne: kod OpenNTPD jest bardziej czytelny
(a co za tym idzie ³atwiejszy w audycie) i napisany w oparciu o natywn±
w OpenBSD funkcjê
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=strlcpy&amp;sektion=3">strlcpy</a>,
a nie bardziej przeno¶ne funkcje 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=strcpy&amp;sektion=3">strcpy</a>.
Ponadto OpenNTPD powsta³ jako bezpieczny od pocz±tku, nie jako "bêdzie
bezpieczny pó¼niej".
Je¶li istnieje wiele osób traktuj±cych synchronizacjê czasu jako warto¶ciow±,
OpenNTPD uczyni to znacznie prostszym dla wielu z niego korzystaj±cych.
Je¶li to jest "szkodliwe", jeste¶my wszyscy za tym.

<p>
Istniej± aplikacje dla których narzêdzie ntpd.org
jest bardziej odpowiednie; jednak¿e odczuwamy, ¿e dla du¿ej liczby
pozosta³ych u¿ytkowników, OpenNTPD jest bardziej ni¿ wystarczaj±cy.

<p>
Bardziej kompletna odpowied¼ na to, pochodz±ca od jednego z maintainerów OpenNTPD, jest
dostêpna
<a href="http://www.advogato.org/person/dtucker/diary.html?start=52">tutaj</a>.

<a name="OpenNTPDNoServe"></a>
<h3>6.12.3 - Dlaczego nie mogê synchronizowaæ innego mojego komputera z OpenNTPD?</h3>

Domy¶lnie ntpd(8) nie nas³uchuje na ¿adnym adresie.
Zatem je¿eli chcesz korzystaæ z niego jako serwera, musisz odkomentowaæ liniê 
"<tt>#listen&nbsp;on&nbsp;*</tt>" w
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ntpd.conf&amp;sektion=5">/etc/ntpd.conf</a>
i zresetowaæ demona ntpd(8).
Oczywi¶cie, je¿eli chcesz by serwer nas³uchiwa³ na konkretnym adresie, a nie na 
wszystkich dostêpnych adresach i interfejsach, zamieñ "*" ¿adanym adresem.

<p>
Gdy masz ju¿ nas³uchuj±cego ntpd(8), mo¿e siê zda¿yæ, ¿e inne maszyny
wci±¿ nie mog± siê z niego synchronizowaæ!

¦wierzo uruchomiony demon ntpd(8) (przyk³adowo, gdy w³a¶nie go restartowa³e¶
po zmianach ntpd.conf) odrzuca po³±czenia innym klientom, a¿ do ustawienia
w³asnego czasu na rozs±dnym poziomie stabilno¶ci.
Gdy ntpd(8) uzna, ¿e jego w³asna informacja o czasie jest stabilna, 
zg³asza to komunikatem "clock now synced" w <tt>/var/log/daemon</tt>.
Nawet je¶li zegar systemowy ju¿ na pocz±tku jest ca³kiem dok³adny, 
mo¿e zaj±æ nawet 10 minut uzyskanie synchronizacji, lub godziny a
nawet dni, gdy jest zupe³nie niedok³adny.

<a name="Wireless"></a>
<h2>6.13 - Jaki wybraæ sprzêt do budowy sieci bezprzewodowych?</h2>
OpenBSD zawiera sterowniki dla wielu uk³adów sieci bezprzewodowej:

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=awi&amp;sektion=4">awi(4)</a>
AMD 802.11 PCnet Mobile.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=an&amp;sektion=4">an(4)</a>
Aironet Communications 4500/4800.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=wi&amp;sektion=4">wi(4)</a>
Prism2/2.5/3. <sup>(AP)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=atw&amp;sektion=4">atw(4)</a>
ADMtek ADM8211.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ath&amp;sektion=4">ath(4)</a>
sterownik dla Atheros IEEE 802.11a/b/g. <sup>(AP)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=iwi&amp;sektion=4">iwi(4)</a>
Intel PRO/Wireless 2200BG/2225BG/2915ABG IEEE 802.11a/b/g. <sup>(NFF)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipw&amp;sektion=4">ipw(4)</a>
Intel PRO/Wireless 2100 IEEE 802.11b. <sup>(NFF)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=atu&amp;sektion=4">atu(4)</a>
Atmel AT76C50x USB IEEE 802.11b. 
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ral&amp;sektion=4">ral(4)</a>
and <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ural&amp;sektion=4">ural(4)</a> [USB]
Ralink Technology RT25x0 IEEE 802.11a/b/g. <sup>(AP)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rtw&amp;sektion=4">rtw(4)</a>
Realtek 8180 IEEE 802.11b. <sup>(AP)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=acx&amp;sektion=4">acx(4)</a>
TI ACX100/ACX111. <sup>(NFF) (AP)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pgt&amp;sektion=4">pgt(4)</a>
Conexant/Intersil Prism GT Full-MAC. <sup>(NFF) (AP)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rum&amp;sektion=4">rum(4)</a>
Ralink Technology RT2501USB. <sup>(AP)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=wpi&amp;sektion=4">wpi(4)</a>
Intel PRO/Wireless 3945ABG. <sup>(NFF)</sup>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=uath&amp;sektion=4">uath(4)</a>
Atheros AR5005UG/AR5005UX USB2.0 (trwaj± prace). <sup>(NFF)</sup>
</ul>

<sup>(AP)</sup> oznacza, ¿e karta mo¿e byæ u¿yta jako access-point.<br>
<sup>(NFF)</sup> oznacza, ¿e chip wymaga nie-wolnego firmware które nie mo¿e byæ w³±czone
do OpenBSD.
 
<p>
Urz±dzenia bazuj±ce na tych uk³adach mog± byæ wykorzystywane, w sposób
podobny do pozosta³ych urz±dzeñ sieciowych, do pod³±czenia OpenBSD do 
istniej±cej sieci bezprzewodowej i skonfigurowane przy pomocy
standardowego  
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>
(wiêcej szczegó³ów w podrêczniku systemowym man).
Niektóre z tych kart mog± byæ wykorzystywane do pracy
w trybie bramki dostêpowej ("Host-Based Access Point"), pozwalaj±c na
integracje z twoim firewall`em.

<p>
Zwracamy uwagê ¿e korzystanie z niektórych z tych kart wymaga pobrania
plików firmware poniewa¿ producenci odmawiaj± 
<a href="faq1.html#ReallyFree">wolnej</a> ich dystrybucji, zatem nie
mog± byæ w³±czone do OpenBSD.
Gdy jest to mo¿liwe strony manuala zawieraj± informacjê o kontakcie do
osobny odpowiedzialnej po stronie producenta, tak aby¶ móg³ im napisaæ
jak siê z tym czujesz, lub by przekazaæ im jaki produkt kupi³e¶ zamiast
ich rozwi±zania.

<p>
Inn± mo¿liwo¶ci± jest wykorzystanie twojego firewall-a OpenBSD
do udostêpniania punktu dostêpowego poprzez standardowe po³±czenie
sieciowe do zewnêtrznego mostkuj±cego Access Point-a.
Ma to t± zaletê, ¿e pozwala na ³atwe umiejscowienie anteny w
najdogodniejszym miejscu, które czêsto nie jest bezpo¶rednio przy
firewall-u.

<a name="Multipath"></a>
<h2>6.14 - Jak mogê zrobiæ routing oparty na wyborze jednej z wielu tras o jednakowym koszcie?</h2>

<p>
Routing oparty na wyborze jednej z tras o jednakowym koszcie (ECMP - Equal Cost Multipath Routing)
pozwala na posiadanie wielu wpisów w tablicy routingu dla tej samej podsieci, przyk³adowo
dla trasy domy¶lnej 0.0.0.0/0.
Gdy kernel przegl±da trasy routingu staraj±c siê okre¶liæ gdzie pos³aæ pakiety przeznaczone do
danej podsieci, mo¿e wybraæ jedn± z wielu tras o równym koszcie.
W wiêkszo¶ci przypadków routing "multi-¶cie¿kowy" (ang. multipath) wykorzystywany jest
w po³±czeniach wychodz±cych zapewniaj±c redundantne po³±czenia z sieci± Internet.

<p>
Polecenie
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=route&amp;sektion=8">route(8)</a>
wykorzystywane jest do dodawania/zmian/kasowania tras w tablicy routingu.
Argument <tt>-mpath</tt> jest u¿ywany w przypadku dodawania ¶cie¿ek multipath.

<blockquote><pre>
# <b>route add -mpath default 10.130.128.1</b>
# <b>route add -mpath default 10.132.0.1</b>
</pre></blockquote>

<p>
Sprawdzanie tras:

<blockquote><pre>
# <b>netstat -rnf inet | grep default</b>
default     10.130.128.1      UGS       2      134      -     fxp1
default     10.132.0.1        UGS       0      172      -     fxp2
</pre></blockquote>

<p>
W powy¿szym przyk³adzie mo¿emy zobaczyæ jak jedna trasa domy¶lna wskazuje
na 10.130.128.1, który jest osi±galny przez interfejs fxp1, natomiast
druga wskazuje na 10.132.0.1, osiagalny przez interfejs fxp2.

<p>
Poniewa¿ plik
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mygate&amp;sektion=5">mygate(5)</a>
nie obs³uguje jeszcze tego mechanizmu, poni¿sze linie powinny byæ dodane na koñcu plików
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hostname.if&amp;sektion=5">hostname.if(5)</a>
dla interfejsów fxp1 i fxp2.
Plik <tt>/etc/mygate</tt> powinien zostaæ skasowany.

<dl>
<dt><b>/etc/hostname.fxp1</b></dt>
<dd><tt>!route add -mpath default 10.130.128.1</tt></dd>
<dt><b>/etc/hostname.fxp2</b></dt>
<dd><tt>!route add -mpath default 10.132.0.1</tt></dd>
</dl>

<p>
Na koniec nie zapomnij aktywowaæ obs³ugê multipath-routingu poprzez w³a¶ciw± 
zmienn± sysctl(3).

<blockquote><pre>
# <b>sysctl net.inet.ip.multipath=1</b>
# <b>sysctl net.inet6.ip6.multipath=1</b>
</pre></blockquote>

<p>
Zmieñ tak¿e plik konfiguracyjny
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl.conf&amp;sektion=5">sysctl.conf(5)</a>,
aby wprowadziæ te zmiany na trwa³e.

<p>
Spróbuj teraz prze¶ledziæ trasy do ró¿nych celów.
Kernel powinien roz³o¿yæ obci±¿enie pomiêdzy ka¿d±
z tras.

<blockquote><pre>
# <b>traceroute -n 154.11.0.4</b>
traceroute to 154.11.0.4 (154.11.0.4), 64 hops max, 60 byte packets
 1  10.130.128.1  19.337 ms  18.194 ms  18.849 ms
 2  154.11.95.170  17.642 ms  18.176 ms  17.731 ms
 3  154.11.5.33  110.486 ms  19.478 ms  100.949 ms
 4  154.11.0.4  32.772 ms  33.534 ms  32.835 ms

# <b>traceroute -n 154.11.0.5</b>
traceroute to 154.11.0.5 (154.11.0.5), 64 hops max, 60 byte packets
 1  10.132.0.1  14.175 ms  14.503 ms  14.58 ms
 2  154.11.95.38  13.664 ms  13.962 ms  13.445 ms
 3  208.38.16.151  13.964 ms  13.347 ms  13.788 ms
 4  154.11.0.5  30.177 ms  30.95 ms  30.593 ms
</pre></blockquote>

<p>
Wiêcej informacji na temat sposobu w jaki s± wybierane trasy znajdziesz w
dokumencie
<a href="http://www.ietf.org/rfc/rfc2992.txt">RFC2992</a>, "Analysis of an
Equal-Cost Multi-Path Algorithm".

<p>
Rozwi±zanie to mo¿e okazaæ siê ma³o u¿yteczne je¿eli interfejs wykorzystywany
w routinigu wielo-scie¿kowym zostanie wy³±czony (np. utracone zostanie po³±czenie),
poniewa¿ kernel wci±¿ bêdzie stara³ siê przekazywaæ pakiety korzystaj±c z trasy
wskazuj±cej na ten interfejs.
Taki ruch bêdzie oczywi¶cie gubiony i ostatecznie nigdzie nie trafi.
Zdecydowanie zalecamy korzystanie z
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifstated&amp;sektion=8">ifstated(8)</a>
w celu sprawdzania niedostêpnych interfejsów i modyfikacji tablicy routingu.

<p>
<font color="#0000e0">
<a href="index.html">[Spis tre¶ci]</a>
<a href="faq5.html">[Sekcja 5 - Tworzenie systemu ze ¼róde³]</a>
<a href="faq7.html">[Sekcja 7 - Ustawienia klawiatury i wy¶wietlania]</a>
</font>

<p>
<hr>
<a href="index.html"><img height="24" width="24" src="../../images/back.gif" border="0" alt="[wstecz]"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: faq6.html,v 1.270 ]<br>
$Translation: faq6.html,v 1.68 2008/11/10 04:28:30 tkniaz Exp $<br>
-->
$OpenBSD: faq6.html,v 1.60 2008/11/26 08:25:03 tobias Exp $
</small>

</body>
</html>
@


1.60
log
@Sync with Steelix CVS
@
text
@d2261 1
a2261 1
$OpenBSD$
@


1.59
log
@Sync with Steelix CVS
@
text
@d1681 1
a1681 1
    OpenBSD 4.3 (RAMDISK_CD) #645: Wed Mar 12 11:31:03 MDT 2008
d2258 2
a2259 2
Originally [OpenBSD: faq6.html,v 1.269 ]<br>
$Translation: faq6.html,v 1.67 2008/07/30 23:22:53 tkniaz Exp $<br>
@


1.58
log
@Sync with Steelix CVS
@
text
@d354 1
a354 1
Je¿eli korzystasz z DHCP, powiniene¶ przeczytaæ <a href="#DHCP">6.4 - DHCP</a>
d695 4
a698 3
wyedytuj <tt>/etc/rc.conf.local</tt> poprzez ustawienie <tt>dhcpd_flags=""</tt>.
Umie¶æ nazwê interfejsu, na którym serwer ma <b>nas³uchiwaæ</b> w pliku
<tt>/etc/dhcpd.interfaces</tt>.
d701 1
a701 1
     # <b>echo xl1 xl2 xl3 &gt;/etc/dhcpd.interfaces</b>
d2258 2
a2259 2
Originally [OpenBSD: faq6.html,v 1.268 ]<br>
$Translation: faq6.html,v 1.66 2008/05/01 23:07:57 tkniaz Exp $<br>
@


1.57
log
@Sync with Steelix CVS
@
text
@d1027 1
a1027 1
"Krêcenie guziczkami" których nie rozumiesz najprawdopodobniej zepsuje twoj
d2257 2
a2258 2
Originally [OpenBSD: faq6.html,v 1.267 ]<br>
$Translation: faq6.html,v 1.65 2008/05/01 14:01:35 tkniaz Exp $<br>
@


1.56
log
@Sync with Steelix CVS
@
text
@d1025 10
d1678 1
a1678 1
    Copyright (c) 1995-2007 OpenBSD.  All rights reserved.  http://www.OpenBSD.org
d1680 1
a1680 1
    OpenBSD 4.2 (RAMDISK_CD) #468: Tue Aug 28 11:02:17 MDT 2007
d2257 2
a2258 2
Originally [OpenBSD: faq6.html,v 1.265 ]<br>
$Translation: faq6.html,v 1.64 2008/03/09 08:58:24 tkniaz Exp $<br>
@


1.55
log
@Sync with Steelix CVS
@
text
@d1164 1
a1164 1
Odpowiednie ustawienia podawane s± w pliku <tt>/etc/exports</tt>.
d1167 1
a1167 1
Istnieje wiele opcji które mog± byæ u¿yte w konfiguracji <tt>/etc/exports</tt>;
d1185 1
a1185 1
</tt>/work</tt>.
d1199 1
a1199 1
systemów plików do <i>/etc/exports</i> bez listy hostów które mog±
d1307 1
a1307 1
<p>
d2149 2
a2150 2
# route add -mpath default 10.130.128.1
# route add -mpath default 10.132.0.1
d2157 1
a2157 1
# netstat -rnf inet | grep default
d2187 2
a2188 2
# sysctl net.inet.ip.multipath=1
# sysctl net.inet6.ip6.multipath=1
d2248 1
a2248 1
$Translation: faq6.html,v 1.62 2008/03/02 06:04:30 tkniaz Exp $<br>
@


1.54
log
@Sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2007 by OpenBSD.">
d173 1
a173 1
$ <strong>ifconfig</strong>
d216 1
a216 1
Ponadto flagi <strong>UP</strong> i <strong>RUNNING</strong> s± ustawione.
d271 1
a271 1
$ <strong>cat /etc/hostname.fxp0</strong>
d301 1
a301 1
$ <strong>cat /etc/hostname.vlan0</strong>
d375 1
a375 1
ponownie komputer b±d¼ uruchomiæ skrypt <strong>/etc/netstart</strong>.
d379 1
a379 1
# <strong>sh /etc/netstart</strong>
d418 1
a418 1
$ <strong>netstat -rn</strong>
d434 1
a434 1
$ <strong>route show</strong>
d483 1
a483 1
# <strong>sysctl net.inet.ip.forwarding=1</strong>
d544 1
a544 1
inet 192.168.0.2 255.255.255.0 media 100baseTX
d813 1
a813 2
<blockquote>
<pre>
d819 1
a819 2
</pre>
</blockquote>
d843 1
a843 2
<blockquote>
<pre>
d851 1
a851 2
</pre>
</blockquote>
d904 1
a904 2
<blockquote>
<pre>
d914 1
a914 2
</pre>
</blockquote>
d1078 1
a1078 1
 #  <strong>sysctl net.inet.tcp.baddynamic=749,750,751,760,761,871</strong>
d1082 2
a1083 2
 #  <strong>sysctl net.inet.tcp.baddynamic=+748</strong>
 #  <strong>sysctl net.inet.tcp.baddynamic=-871</strong>
d1135 3
d1139 7
a1145 6
Jeszcze jedna uwaga zwi±zana z bezpieczeñstwem. Nie dodawaj samych
systemów plików do <i>/etc/exports</i> bez listy hostów, które mog±
mieæ dostêp do zasobów. Je¶li nie wyszczególnisz, który z nich mo¿e
montowaæ odpowiedni katalog, ka¿dy, kto bêdzie móg³ ustanowiæ z Twoim
serwerem po³±czenie, bêdzie móg³ montowaæ wszystkie eksportowane
przez Ciebie katalogi.
d1148 3
a1150 4
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=portmap&amp;sektion=8">portmap(8)</a>
musi byæ on uruchomiony aby dzia³a³ NFS. Portmap(8) w 
OpenBSD jest domy¶lnie wy³±czony, dlatego
dodaj liniê
d1154 1
d1157 3
a1159 7
do
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf.local&amp;sektion=8">rc.conf.local(8)</a>
aby uruchamia³ siê podczas startu. Mo¿esz go tak¿e w³±czyæ poleceniem:

<blockquote><pre>
# <strong>/usr/sbin/portmap</strong>
</pre></blockquote>
d1162 9
a1170 8
W naszym przyk³adzie serwer ma adres IP <b>10.0.0.1</b>. Bêdzie on udostêpnia³
NFS tylko klientom znajduj±cym siê w swojej sieci. Pierwszym krokiem
w konfiguracji jest edycja pliku <i>/etc/exports</i>. Umie¶cisz w nim
zasoby, które chcia³by¶ udostêpniæ klientom oraz zdefiniujesz kto
powinien mieæ dostêp do poszczególnych zasobów. W pliku <i>/etc/exports</i> mo¿esz
u¿yæ naprawdê wielu opcji, aby zapoznaæ siê ze wszystkimi mo¿liwo¶ciami
przeczytaj <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=exports&amp;sektion=5">exports(5)</a>
W tej chwili mamy <i>/etc/exports</i> wygl±daj±cy w ten sposób:
d1181 15
a1195 7
Powy¿szy wpis oznacza, ¿e przez NFS dostêpny bêdzie system plików <tt>/work</tt>.
Opcja <tt>-alldirs</tt> ¿e klienci bêd± mogli montowaæ ka¿dy katalog
znajduj±cy siê na systemie plików <tt>/work</tt>. Opcja <tt>-ro</tt>
oznacza, ¿e zezwalamy na montowanie w trybie tylko do odczytu. Ostatnie
dwa argumenty mówi±, ¿e tylko hosty z sieci 10.0.0.0 o masce 255.255.255.0
mog± mieæ dostêp do tego zasobu, co jest istotne w przypadku, gdy serwery
pracuj± w kilku ró¿nych sieciach.
d1198 33
a1230 5
Gdy Twój plik <i>/etc/exports</i> jest ju¿ odpowiednio skonfigurowany,
mo¿esz przej¶æ do konfiguracji serwera. Upewnij siê, czy Twoje j±dro
zosta³o skompilowane z opcj± NFSSERVER oraz NFSCLIENT
(standardowe j±dra tak maj±).
Nastêpnym krokiem jest dodanie wpisu 
d1233 19
a1251 1
nfs_server=YES
d1254 5
a1258 8
do pliku <i>/etc/rc.conf.local</i>. 
Spowoduje to automatyczne uruchomienie
nfsd(8) i mountd(8) za ka¿dym razem, gdy uruchomisz ponownie komputer.
W tej chwili mo¿esz uruchomiæ te demony rêcznie, aby to zrobiæ,
musisz byæ root'em oraz portmap(8) musi byæ ju¿ uruchomiony.
Oto przyk³ad uruchomienia nfsd(8) pracuj±cego na protoko³ach TCP i UDP,
korzystaj±c z 4 demonów. Powiniene¶ ustaliæ tê liczbê wg w³asnych potrzeb,
aby okre¶liæ maksymaln± ilo¶æ jednocze¶nie obs³ugiwanych klientów.
d1261 1
a1261 1
# <strong>/sbin/nfsd -tun 4</strong>
d1265 7
a1271 4
Wystartowanie nfsd(8) nie jest ostatni± czynno¶ci±, oprócz tego potrzebujesz
uruchomiæ jeszcze mountd(8). Demon ten obs³uguje ¿±dania montowania NFS.
Aby go uruchomiæ, upewnij siê, ¿e istnieje pusty plik mountdtab, a nastêpnie
uruchom demona:
d1274 1
a1274 2
# <strong>echo -n &gt;/var/db/mountdtab</strong>
# <strong>/sbin/mountd</strong>
d1278 10
a1287 2
Je¶li w trakcie pracy wprowadzisz jakie¶ zmiany w /etc/exports, musisz
poinformowaæ o tym mountd! Wystarczy sygna³ HUP:
d1290 1
a1290 1
# <strong>kill -HUP `cat /var/run/mountd.pid`</strong>
d1294 14
d1311 3
a1313 2
W tej chwili mo¿esz sprawdziæ czy wystartowanie przez Ciebie demony pracuj±
i s± zarejestrowane w RPC. Skorzystaj z rpcinfo(8).
d1316 1
a1316 1
$ <strong>rpcinfo -p 10.0.0.1</strong>
d1342 1
a1342 1
$ <strong>/usr/bin/showmount -a 10.0.0.1</strong>
d1348 2
a1349 38
<h3>Montowanie systemu plików NFS</h3>

<p>
NFS powinien byæ montowany poleceniem mount(8) lub w bardziej specyficzny
dla niego sposób korzystaj±c z
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=mount_nfs&amp;sektion=8">mount_nfs(8)</a>.
Do zamontowania systemu plików <i>/work</i> znajduj±cego siê na ho¶cie
10.0.0.1 do lokalnego katalogu <i>/mnt</i> skorzystaj z poni¿szej sk³adni
(mo¿esz zamiast adresu IP u¿yæ nazwy hosta):

<blockquote><pre>
# <strong>mount -o ro -t nfs 10.0.0.1:/work /mnt</strong>
</pre></blockquote>

<p>
Je¶li chcesz, aby montowanie przebiega³o w momencie uruchamiania systemu,
dodaj linijkê analogiczn± do poni¿szej w pliku <i>/etc/fstab</i>:

<blockquote><pre>
10.0.0.1:/work /mnt nfs ro 0 0
</pre></blockquote>

<p>
Wa¿ne jest, aby¶ jako dwa ostatnie wpisy w tej linii umie¶ci³ <tt>0 0</tt>,
aby Twój komputer nie próbowa³ sprawdzaæ systemu plików programem fsck
przy starcie! Inne standardowe opcje zwiêkszaj±ce bezpieczeñstwo, takie
jak noexec, nodev i nosuid powinny byæ tak¿e u¿yte zawsze, gdy jest to mo¿liwe:

<blockquote><pre>
10.0.0.1:/work /mnt nfs ro,nodev,nosuid 0 0
</pre></blockquote>

<p>
W ten sposób, mount nie bêdzie interpretowa³ urz±dzeñ specjalnych i uniewa¿ni
bity suid dziêki czemu programy na serwerze nie bêd± mog³y wykonywaæ
niebezpiecznych operacji na kliencie NFS. Je¶li nie montujesz ¿adnych
programów, których chcia³by¶ u¿ywaæ przez NFS, powiniene¶ dodaæ tak¿e opcjê
noexec.
d1398 1
a1398 2
<blockquote>
<pre>
d1401 1
a1401 2
</pre>
</blockquote>
d1409 1
a1409 2
<blockquote>
<pre>
d1412 1
a1412 2
</pre>
</blockquote>
d1427 1
a1427 2
<blockquote>
<pre>
d1432 1
a1432 2
</pre>
</blockquote>
d1460 1
a1460 2
<blockquote>
<pre>
d1465 1
a1465 2
</pre>
</blockquote>
d1474 1
a1474 2
<blockquote>
<pre>
d1485 1
a1485 2
</pre>
</blockquote>
d1933 1
a1933 1
# <strong>sysctl net.inet.carp.arpbalance=1</strong>
d2148 4
a2151 6
<blockquote>
<tt>
# route add -mpath default 10.130.128.1<br>
# route add -mpath default 10.132.0.1<br>
</tt>
</blockquote>
d2156 1
a2156 2
<blockquote>
<pre>
d2160 1
a2160 2
</pre>
</blockquote>
d2186 2
a2187 3
<blockquote>
<tt>
# sysctl net.inet.ip.multipath=1<br>
d2189 1
a2189 2
</tt>
</blockquote>
d2201 2
a2202 3
<blockquote>
<pre>
# traceroute -n 154.11.0.4
d2209 1
a2209 1
# traceroute -n 154.11.0.5
d2215 1
a2215 2
</pre>
</blockquote>
d2247 2
a2248 2
Originally [OpenBSD: faq6.html,v 1.260 ]<br>
$Translation: faq6.html,v 1.61 2008/01/07 00:45:56 tkniaz Exp $<br>
@


1.53
log
@Sync with Steelix CVS
@
text
@d1263 5
a1267 3
dziêki któremu mo¿esz dowiedzieæ siê. jakie zasoby s± aktualnie zamontowane
i przez kogo. Jest jeszcze nfsstat(8), który wy¶wietla kilka dodatkowych
informacji. U¿ywaj±c showmount(8), spróbuj <tt>/usr/bin/showmount -a host</tt>
d2230 2
a2231 2
Originally [OpenBSD: faq6.html,v 1.259 ]<br>
$Translation: faq6.html,v 1.60 2008/01/03 11:23:22 tkniaz Exp $<br>
@


1.52
log
@Sync with Steelix CVS
@
text
@d2228 2
a2229 2
Originally [OpenBSD: faq6.html,v 1.258 ]<br>
$Translation: faq6.html,v 1.59 2007/11/23 17:16:42 tkniaz Exp $<br>
@


1.51
log
@Sync with Steelix CVS
@
text
@a248 5
Je¶li Twój interfejs sieciowy nie jest skonfigurowany, pierwszym co powiniene¶ zrobiæ,
jest stworzenie pliku <i>/etc/hostname.xxx</i>. W miejsce "xxx" umie¶æ nazwê interfejsu
którego dany plik ma dotyczyæ. Dla powy¿szego przyk³adu, plik ten powinien mieæ
nazwê <i>/etc/hostname.fxp0</i>. Sk³adnia pliku jest prosta:<br>

d290 1
a290 1
(Oczywi¶cie nie powiniene¶ nugdy wymuszaæ trybu full duplex o ile oba koñce
d302 1
a302 1
Inet 172.21.0.31 255.255.255.0 NONE vlan 2 vlandev fxp1
a305 1
<p>
d448 1
d460 1
a460 1
przydzielan± przez dostawców us³ug internetowych mo¿esz zechcieæ skorzystaæ
d641 1
a641 1
Oczywi¶cie mo¿esz chcieæ chcieæ tak¿e usn±æ <tt>hostname</tt>, lub
d744 1
a744 1
Je¶li udostêpniasz us³ugê DHCP klientowi Windows, mo¿esz zechcieæ, aby
d2074 1
a2074 2
</ul>

d2139 1
d2229 1
a2229 1
$Translation: faq6.html,v 1.57 2007/11/07 18:13:10 tkniaz Exp $<br>
@


1.50
log
@Sync with steelix translation CVS
@
text
@d1647 2
a1648 2
    
    OpenBSD 4.1 (RAMDISK_CD) #247: Thu Mar  8 23:21:43 MST 2007
d2233 2
a2234 2
Originally [OpenBSD: faq6.html,v 1.256 ]<br>
$Translation: faq6.html,v 1.56 2007/05/06 01:14:42 tkniaz Exp $<br>
@


1.49
log
@Sync with steelix translation CVS
@
text
@d1645 2
d1648 1
a1648 3
    Copyright (c) 1995-2006 OpenBSD. All rights reserved. http://www.OpenBSD.org
    
    OpenBSD 4.0 (RAMDISK_CD) #39: Sat Sep 16 19:34:26 MDT 2006
d2233 2
a2234 2
Originally [OpenBSD: faq6.html,v 1.255 ]<br>
$Translation: faq6.html,v 1.55 2007/04/30 04:08:20 tkniaz Exp $<br>
@


1.48
log
@sync with steelix translation CVS
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2006 by OpenBSD.">
d585 2
a586 2
odpowiedzialnym za filtrowanie ruchu TCP/IP oraz translacjê adresów
sieciowych (NAT). PF potrafi tak¿e normalizowaæ pakiety oraz zapewniaæ
d2109 1
a2109 1
<a name="Multipath">
d2118 1
a2118 1
W wiêkszo¶ci przypadków routing "wielo-¶cie¿kowy" (ang. multipath) wykorzystywany jest
d2207 1
a2207 1
Equal-Cost Multi-Path Algorithm"</a>.
d2210 1
a2210 1
Rozwi±zanie to mo¿e okazaæ siê nic nie warte je¿eli interfejs wykorzystywany
d2233 2
a2234 2
Originally [OpenBSD: faq6.html,v 1.253 ]<br>
$Translation: faq6.html,v 1.54 2006/12/24 00:10:04 tkniaz Exp $<br>
@


1.47
log
@sync with steelix translation CVS
@
text
@d361 1
a361 1
zawieraj±cym notkê z
d2234 1
a2234 1
$Translation: faq6.html,v 1.53 2006/12/22 18:04:25 tkniaz Exp $<br>
@


1.46
log
@sync with steelix translation CVS
@
text
@d51 1
a51 1
<li><a href= "#Setup" >6.2 - Inicjalizacja sieci</a>
d53 1
a53 1
 <li><a href="#Setup.1" >6.2.1 - Identyfikacja i konfiguracja interfejsów
d55 9
a63 4
 <li><a href="#Setup.2" >6.2.2 - Konfiguracja OpenBSD jako bramy 
    sieciowej</a>
 <li><a href="#Setup.3" >6.2.3 - Ustawianie aliasów na interfejsie 
    sieciowym</a>
d122 8
a129 1
<h2>6.2 - Inicjalizacja Sieci</h2>
d132 1
a132 1
<a name="Setup.1"></a>
d136 1
a136 1
Aby zacz±æ musisz zidentyfikowaæ swoje interfejsy sieciowe. W OpenBSD nazywane
d158 5
d169 1
a169 1
widaæ tylko jeden fizyczny interfejs ethernetowy
d254 8
d266 1
a266 1
(Znaczenie oraz wiêcej szczegó³ów odno¶nie formatu tego pliku znajdziesz w manualu pod
d268 2
a269 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hostname.if&amp;sektion=5">hostname.if(5)</a>.)
d281 5
d295 5
a299 3
Oczywi¶cie nie powiniene¶ nigdy ustawiaæ trybu, z którym nie potrafi wspó³pracowaæ
drugi koniec po³±czenia. Je¶li nie ma ku temu wyra¼nych powodów, nie jest zalecane
stosowanie dodatkowych opcji ustalaj±cych tryb pracy.
d307 1
a307 1
inet 172.21.0.31 255.255.255.0 NONE vlan 2 vlandev fxp1
d310 1
d312 20
a331 13
Nastêpnym krokiem jest ustalenie domy¶lnej bramki (trasy routingu).
Jedyne co musisz zrobiæ, to umie¶ciæ adres IP swojej bramki w pliku
<i>/etc/mygate</i>. Dziêki temu Twój system zostanie poinformowany
o bramie domy¶lnej przy ka¿dorazowym uruchamianiu. Teraz kolej na 
ustalenie serwerów nazw i edycjê pliku <i>/etc/hosts</i> (zobacz
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hosts&amp;sektion=5">hosts(5)</a>).
Do poinformowania systemu z których serwerów nazw powinien korzystaæ,
musisz stworzyæ (o ile jeszcze nie istnieje) plik <i>/etc/resolv.conf</i>.
Wiêcej na temat formatu tego pliku mo¿esz dowiedzieæ siê ze strony manuala
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf&amp;sektion=5">resolv.conf(5)</a>.
Je¿eli u¿ywasz DHCP mo¿esz chcieæ przeczytaæ <a href="#DHCP">6.4 - DHCP</a> bior±c pod uwagê
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf.tail&amp;sektion=5">resolv.conf.tail(5)</a>.
Jednak dla standardowych zastosowañ podajemy przyk³ad.
d333 2
a334 3
<p>
Zak³adamy przy tym, ¿e serwery nazw maj± adresy 125.2.3.5 i 125.2.3.5 oraz
nale¿ysz do domeny &quot;example.com&quot;.
d336 3
a340 1
$ <strong>cat /etc/resolv.conf</strong>
d347 12
d360 21
a380 1
W tej chwili, aby zainicjowaæ sieæ na swojej konfiguracji, mo¿esz uruchomiæ
d400 15
d454 2
a455 3
<p>
<a name="Setup.2"></a>
<h3>6.2.2 - Konfiguracja komputera z OpenBSD jako rutera</h3>
d508 2
a509 2
<a name="Setup.3"></a>
<h3>6.2.3 - Ustawianie aliasów na interfejsach sieciowych</h3>
d566 3
a581 1
<a name="NAT"></a>
d609 1
a609 1
¿e twoim g³ównym interfejsem ethernetowym jest xl0. W rzeczywisto¶ci mo¿e to byæ
d726 1
a726 1
interfejsu OpenBSD, na którym nas³uchuje DHCP nale¿±cy do sieci 192.168.1.0/24
d2233 2
a2234 2
Originally [OpenBSD: faq6.html,v 1.250 ]<br>
$Translation: faq6.html,v 1.52 2006/11/29 21:47:24 tkniaz Exp $<br>
@


1.45
log
@sync with steelix translation CVS
@
text
@d2064 2
a2065 2
dla interfejsów fxp1 i fxp2, natomiast sam <tt>/etc/mygate</tt> powinien zostaæ skasowany.
W ten sposób w³a¶ciwe trasy zostan± zainstalowane podczas startu systemu.
d2075 1
a2075 1
Na koniec nie zapomnij w³±czyæ obs³ugê routingu multipath poprzez w³a¶ciw± 
a2076 3
Upewnij siê, ¿e zmieni³e¶ to tak¿e w pliku
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl.conf&amp;sektion=5">sysctl.conf(5)</a>
tak by zmana by³a trwa³a.
d2086 5
d2121 1
a2121 1
w routinigu wieloscie¿kowym zostanie wy³±czony (np. utracone zostanie po³±czenie),
d2127 1
a2127 1
w celu sprawdzania wy³±czonych interfejsów i modyfikacji tablicy routingu.
d2143 2
a2144 2
Originally [OpenBSD: faq6.html,v 1.249 ]<br>
$Translation: faq6.html,v 1.51 2006/11/10 19:09:17 tkniaz Exp $<br>
@


1.44
log
@sync with Steelix CVS
@
text
@d76 2
d2019 108
d2141 2
a2142 2
Originally [OpenBSD: faq6.html,v 1.248 ]<br>
$Translation: faq6.html,v 1.50 2006/11/04 16:11:12 tkniaz Exp $<br>
@


1.43
log
@sync with steelix translation CVS
@
text
@d1277 1
a1277 1
dhcp NONE NONE NONE NONE
d1556 1
a1556 1
    OpenBSD 3.9 (RAMDISK_CD) #1025: Thu Mar  2 02:43:29 MST 2006
d1948 1
d1951 1
a1951 1
AMD 802.11 PCnet Mobile
d1953 1
a1953 1
Aironet Communications 4500/4800
d1955 1
a1955 1
Prism2/2.5/3
d1957 1
a1957 1
ADMtek ADM8211
d1959 1
a1959 1
sterownik dla Atheros IEEE 802.11a/b/g.
d1961 1
a1961 1
Intel PRO/Wireless 2200BG/2225BG/2915ABG IEEE 802.11a/b/g.
d1963 1
a1963 1
Intel PRO/Wireless 2100 IEEE 802.11b.
d1965 1
a1965 1
Atmel AT76C50x USB IEEE 802.11b.
d1967 2
a1968 2
i <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ural&amp;sektion=4">ural(4)</a> [USB]
Ralink Technology RT25x0 IEEE 802.11a/b/g.
d1970 12
a1981 1
Realtek 8180 IEEE 802.11b.
d1983 4
d1990 4
a1993 2
podobny do pozosta³ych urz±dzeñ sieciowych, do pod³±czenia OpenBSD do
istniej±cej sieci bezprzewodowej
d2000 11
a2010 1
Inn± mo¿liwo¶ci± jest wykorzystanie twojego firewall`a OpenBSD
d2012 1
a2012 1
sieciowe do zewnêtrznego mostkuj±cego Access Point`a.
d2015 1
a2015 18
firewall`u.

<p>
Zauwa¿, ¿e w przypadku korzystania z kart opartych na chipsecie Intel'a,
bêdziesz potrzebowa³ plików firmware, których Intel odmawia udostêpnienia
jako <a href="faq1.html#ReallyFree">wolnych</a>, zatem nie mog± one byæ
do³±czone do OpenBSD.
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=iwi&amp;sektion=4#FILES">
Skontaktuj siê z Intel'em</a> by daæ im znaæ jak siê z tym czujesz, lub
by przekazaæ im jaki produkt zastosowa³e¶ zamiast ich rozwi±zania.

<p>
Inni producenci, tacy jak Broadcom, Texas Instruments i Connexant, zwalczali
nasze próby stworzenia wolnych sterowników do ich produktów.
Namawiamy do uszanowania ich woli poprzez nie kupowanie ich produktów.
Realtek, Ralink, Atmel i ADMtek tworz± dobre produkty oraz
wspieraj± pragnienie ruchu open source o wolne sterowniki i zas³uguj± na
nasze wsparcie i zakup.
d2031 2
a2032 2
Originally [OpenBSD: faq6.html,v 1.245 ]<br>
$Translation: faq6.html,v 1.49 2006/10/24 19:41:37 tkniaz Exp $<br>
@


1.42
log
@sync with steelix translation CVS
@
text
@d2020 2
a2021 2
Originally [OpenBSD: faq6.html,v 1.244 ]<br>
$Translation: faq6.html,v 1.48 2006/08/21 19:28:39 tkniaz Exp $<br>
@


1.41
log
@sync with Steelix CVS
@
text
@d52 9
a60 1
<li><a href= "#PF"    >6.2 - Filtrowanie ruchu i budowa firewalli
d63 4
d510 2
a511 1
<h3>6.4.1 Klient DHCP</h3>
d602 2
a603 1
<h3>6.4.2 Serwer DHCP</h3>
d933 2
a934 2
Sam pptp musi byæ instalowany z <a href="../faq15.html#PkgMgmt">pakietów</a> lub 
<a href="../faq15.html#Ports">partów</a>.
d1852 1
a1852 1
dostêpn± poprzez system <a href="../faq15.html#Ports">portów</a>, i umo¿liwiaj±c±
d1869 2
a1870 1
utrzymywanie twojego serwera zsynchronizowanego z jednym z publicznie dostêpnych
d1874 1
a1874 1
kilka minut jest *bardzo* zalecane by ustawiæ go pocz±tkowo mo¿liwie dok³adnym, poniewa¿
d1876 2
a1877 5
Mo¿esz to zrobiæ rêcznie, korzystaj±c z polecenia
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=date&amp;sektion=1">date(1)</a>,
lub prawie-automatycznie, korzystaj±c z polecenia
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rdate&amp;sektion=8">rdate(8)</a>,
lub te¿ rêcznie ustawiaj±c zegar sprzêtowy twojego komputera.
d1882 3
a1884 3
Nie by³o to (wiêksza ni¿ ntpd dok³adno¶æ) g³ównym zamierzeniem podczas
<a href="http://www.openntpd.org/goals.html">projektowania</a> OpenNTPD.
Chodzi³o raczej o stworzenie narzêdzia wolnego, bezpiecznego i prostego.
d1913 2
a1914 2
jest bardziej odpowiednie; jednak¿e odczuwamy ¿e OpenNTPD dla pozosta³ych
95% bêdzie bardziej ni¿ wystarczaj±cy.
d1921 24
d2020 2
a2021 2
Originally [OpenBSD: faq6.html,v 1.238 ]<br>
$Translation: faq6.html,v 1.43 2006/08/14 04:18:04 tkniaz Exp $<br>
@


1.40
log
@sync with steelix translation CVS
cvs: ----------------------------------------------------------------------
@
text
@d1699 1
a1699 1
&nbsp;&nbsp;&nbsp;&nbsp;192.168.0.7 255.255.255.0</b>
d1780 1
a1780 1
&nbsp;&nbsp;&nbsp;&nbsp;192.168.0.7 255.255.255.0</b>
d1789 2
a1790 1
pris# <b>ifconfig carp1 vhid 2 pass bryant carpdev fxp0 192.168.0.7 255.255.255.0</b>
d1984 2
a1985 2
Originally [OpenBSD: faq6.html,v 1.237 ]<br>
$Translation: faq6.html,v 1.42 2006/05/31 10:49:58 tkniaz Exp $<br>
@


1.39
log
@sync with steelix translation CVS
@
text
@d1788 1
a1788 1
pris# <b>ifconfig carp1</b>
d1983 2
a1984 2
Originally [OpenBSD: faq6.html,v 1.236 ]<br>
$Translation: faq6.html,v 1.41 2006/05/27 02:33:51 tkniaz Exp $<br>
@


1.38
log
@sync with steelix translation CVS
@
text
@d382 1
a382 3
Pamiêtaj, ¿e po ponownym uruchomieniu komputera, je¶li nie wyedytujesz pliku
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl.conf&amp;sektion=5">/etc/sysctl.conf</a>
jak zosta³o to pokazane powy¿ej, zmiana ta nie bêdzie obowi±zywaæ. Do wykonania poni¿szej
a1635 1
<p>
d1853 1
a1853 1
Proste uruchomienie ntpd(8), poprzez <a href="faq10.html#rc">rc.conf.local</a> spowoduje
d1855 1
a1855 2
serwerów czasu <a href="http://www.pool.ntp.org">pool.ntp.org</a>.

d1984 1
a1984 1
$Translation: faq6.html,v 1.40 2006/05/26 00:07:17 tkniaz Exp $<br>
@


1.37
log
@sync with steelix translation CVS
@
text
@d383 1
a383 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl.conf&amp;sektion=5">/etc/sysctl.conf(5)</a>
d505 1
a505 1
do³±czonego standardowo do OpenBSD, wyedytuj plik /etc/hostname.xl0 (zak³adaj±c
d1474 3
a1476 1
>inetd(8)</a>:
d1641 1
a1649 2

<p>
d1800 4
a1803 1
lecz <i>pris</i> przejmuje now±. Jedyne co musimy jeszcze
d1824 2
a1825 1
<li><a href="http://www.countersiege.com/doc/pfsync-carp/">Firewall Failover with pfsync and CARP</a> autor: Ryan McBride</li>
d1830 1
a1830 1
<p>
d1839 1
a1839 1
<a href="http://www.ietf.org/rfc/rfc1305.txt">RFC2030</a>) aplikacjê,
d1852 2
a1853 2
posiada ³atwy i przejrzysty plik konfiguracyjny <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ntpd.conf&amp;sektion=5">/etc/ntpd.conf</a>.
d1855 4
a1858 3
Proste uruchomienie ntpd, poprzez <a href="faq10.html#rc">rc.conf.local</a> spowoduje
utrzymywanie twojego serwera zsynchronizowanego z jednym z serwerów publicznie dostêpnych
serwerów czasu <a href="http://pool.ntp.org">pool.ntp.org</a>.
d1988 1
a1988 1
$Translation: faq6.html,v 1.39 2006/05/23 17:51:59 tkniaz Exp $<br>
@


1.36
log
@sync with steelix translation CVS
@
text
@d85 1
a85 1
<a href="http://www.3com.com/corpinfo/en_US/technology/tech_paper.jsp?DOC_ID=135">
d94 1
a94 1
<a href="http://the.rfc-editor.org/rfc.html">dokumenty RFC</a>
d142 2
a143 2
$ <strong>ifconfig -a</strong>
flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 33224 
d372 1
a372 1
plik <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl.conf&amp;sektion=5">/etc/sysctl.conf(5)</a>.
d605 1
a605 1
A nastêpnie zabierz siê za konfiguracjê serwera poprzez plik /etc/dhcpd.conf.
d880 5
d921 2
a922 2
Sam pptp musi byæ instalowany z <a href="faq15.html#PkgMgmt">pakietów</a> lub 
<a href="faq15.html#Ports">partów</a>.
d961 4
a964 1
OpenBSD jako routera. Istnieje kilka przypadków w zamkniêtych sieciach gdy,
d1166 2
a1167 1
informacji. Przyk³adowe wywo³anie showmount(8) wygl±da nastêpuj±co:
a1215 1
<p>
a1414 1
<p>
d1417 1
a1417 1
href="http://openbsd.org/faq/faq14.html#Boot386">bootowania OpenBSD</a>
d1426 1
a1426 2
tym jest  <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=pxeboot&amp;sektion=8"
d1428 1
a1428 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=boot&amp;sektion=8"
d1431 1
a1431 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tftp&amp;sektion=1"
>tftp(1)</a>.
d1447 1
a1447 1
<blockquote><pre>
d1449 1
a1449 1
</blockquote></pre>
d1454 1
a1454 1
<blockquote><pre>
d1461 1
a1461 1
	    <strong>filename "pxeboot";</strong>
d1467 1
a1467 1
</pre></blockquote>
d1472 3
a1474 2
>tftpd(8)</a>.  Standardowo wykonujemy to poprzez odkomentowanie jednej
linii w <tt>inetd.conf</tt>:
d1476 1
a1476 1
<blockquote><pre>
d1478 1
a1478 1
</pre></blockquote>
d1480 2
a1481 3
(usuwamy <i>#</i> z pocz±tku tej linii) i wys³aniem do procesu <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=inetd&amp;sektion=8"
>inetd(8)</a>  sygna³u -HUP, aby prze³adowaæ <tt>/etc/inetd.conf</tt>. 
a1638 1
<p>
d1706 1
a1706 1
vhid równe 1, has³o tyrell i adres 192.168.0.7 z netmask± 255.255.255.0.
d1742 1
a1742 1
Na systemie <i>rachael</i> u¿yjemy <tt>sysclt</tt> i wyedytujeny
d1776 1
a1776 1
obci±¿enia. Stwórzmy nowy interfejs i grupê CARP na rachael:
d1799 1
a1799 1
lecz </i>pris</i> przejmuje now±. Jedyne co musimy jeszcze
d1810 1
a1810 1
50/50 pomiêdzy maszynami <i>pris</i> i <i>rachael</i> - CARP
d1816 4
a1819 4
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=carp&amp;sektion=4">carp(4)</a></li>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a></li>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=8">sysctl(8)</a></li>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=3">sysctl(3)</a></li>
d1831 2
a1832 1
Jaki¶ czas temu ntp.org wprowadzi³o zgodn± ze specyfikacj± Network Time
d1835 1
a1835 1
dostêpn± poprzez system <a href="faq15.html#Ports">portów</a>, i umo¿liwiaj±c±
d1850 1
a1850 2
<p>
Proste uruchomienie ntpd, poprzez <tt>rc.conf.local</tt> spowoduje
d1887 1
a1887 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=strlcpy&sektion=3">strlcpy</a>,
d1889 1
a1889 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=strcpy&sektion=3">strcpy</a>.
d1907 1
a1907 1
<h3>6.13 - Jaki wybraæ sprzêt do budowy sieci bezprzewodowych?</h3>
d1974 1
d1981 2
a1982 2
Originally [OpenBSD: faq6.html,v 1.235 ]<br>
$Translation: faq6.html,v 1.37 2006/05/14 16:24:33 tkniaz Exp $<br>
@


1.35
log
@sync with Steelix CVS
@
text
@d1044 2
a1045 2
musi byæ on uruchomiony aby dzia³a³ NFS. Portmap(8) w wersjach
OpenBSD 3.2 i pó¼niejszych jest domy¶lnie wy³±czony, dlatego
d1054 5
a1058 1
i uruchom ponownie system.
d1092 8
a1099 2
Nastêpnym krokiem jest dodanie wpisu <tt>nfs_server=YES</tt> w pliku
<i>/etc/rc.conf.local</i>. Spowoduje to automatyczne uruchomienie
d1976 2
a1977 2
Originally [OpenBSD: faq6.html,v 1.234 ]<br>
$Translation: faq6.html,v 1.36 2006/05/13 00:20:45 tkniaz Exp $<br>
@


1.34
log
@sync with steelix translation CVS
@
text
@d82 1
a82 1
Je¶li administrujesz sieci± i zajmujesz siê konfiguracj± protoko³ów rutowania
d264 1
a264 1
Nastêpnym krokiem jest ustalenie domy¶lnej bramki (trasy rutowania).
d307 1
a307 1
skonfigurowanego. Dla przyk³adu, niektóre trasy rutowania istnia³y ju¿
d312 1
a312 1
Trasy rutowania mo¿esz obejrzeæ korzystaj±c z
d315 1
a315 1
Je¶li masz problemy z rutingiem, mo¿esz skorzystaæ z flagi -n programu
d357 1
a357 1
siê, chc±c skonfigurowaæ maszynê z OpenBSD jako bramkê (ruter). Je¶li komputer
d516 1
a516 1
interefejsu. Pobrany zostanie adres IP, domy¶lna bramka, oraz serwery DNS.
d574 1
a574 1
W poni¿szym przyk³adzie chcesz u¿yc DHCP, ale zamierzasz dodaæ 
d576 1
a576 1
Nie ma opcji pozwalajacej na to w <tt>dhclient.conf</tt>, musisz zatem u¿yæ
d622 1
a622 1
interefjsu OpenBSD, na którym nas³uchuje DHCP nale¿±cy do sieci 192.168.1.0/24
d678 1
a678 1
w jadrze podczas gdy ppp dzia³a w przestrzeni u¿ytkownika z
d681 1
a681 1
jest on prostrzy w debagowaniu oraz w konfiguracji.
d796 1
a796 1
rutowania na adres ISP. Dziêki takiemu wpisowi jeste¶ uniezale¿niony
d806 1
a806 1
CHAP lub PAP. Je¿eli tak jest w naszym przypadku, nasz pli konfiguracyjny 
d827 1
a827 1
Opcja "set login" jedynie okre¶la próbê zalogowania siê, z nazw± u¿ytkonika i
d870 1
a870 1
Bardzo wielu ISP oferuje obecnie us³ugi xDSL, znacznie szybsze niz tradycyjne
d872 1
a872 1
Chocia¿ nie nastêpuje fizyczne wdzwanianie, po³±czenia wcia¿ oparte s± na 
d919 1
a919 1
który instauje siê razem z pakietem pptp.
d933 1
a933 1
z po³±czeniem i rutingiem. Oczywi¶cie, aby zmiany te dzia³a³y efektywnie
d986 1
a986 1
<h3>6.6.4 - W jaki sposób zwiêkszyæ wydajno¶æ na naprawde szybkich, silnie obci±¿onych
d1272 1
a1272 1
Teraz musimy uruchomiæ bridge. Inicjalizujemy go, poprzez plik konfiguracyjny
d1395 1
a1395 1
startu na architektórach: OpenBSD/i386 oraz amd64.
d1554 1
a1554 1
ze wzglêdu na mo¿lowo¶æ objêcia go patentami CISCO.
d1563 1
a1563 1
W³±czenie kryptofrafi jest najbardziej widoczn± zmian±, wci±¿ jednak
d1568 1
a1568 1
Grupuje kilka fizycznych maszyn w jedej lub kilku virtualnych sieciach.
d1626 1
a1626 1
odbiera³ pakiekty przeznaczone dla CARP. Oczywi¶cie, jest to niezbêdne,
d1635 1
a1635 1
Klucze tablicy hash`uj±cej jest pó¿niej wykorzystywane do wyboru
d1678 1
a1678 1
Zbie¿my wszystkie te informacje w testowej konfiguracji.
d1722 2
a1723 2
kiedy tylko bêdzie to mo¿liwe. Takie ¿adanie mo¿e byæ uzasadnione kilkoma
czynnikami: ró¿nice sprzêtowe, zwyk³e uprzedenie ("je¿eli ten system nie
d1762 1
a1762 1
obci±¿enia. Utwó¿my nowy interfejs i grupê CARP na rachael:
d1772 1
a1772 1
Na <i>pris</i>`ie utwó¿my now± grupê i nowy interfejs podobnie,
d1817 1
a1817 1
Jaki¶ czas temu ntp.org wprodzadzi³o zgodn± ze specyfikacj± Network Time
d1832 1
a1832 1
posiada ³atwy i przej¿ysty plik konfiguracyjny <a
d1853 1
a1853 1
Nie by³o to (wiêksza ni¼ ntpd dok³adno¶æ) g³ównym zamierzeniem podczas
d1871 1
a1871 1
(a co za tym idzie ³atwiejszy w audytowaniu) i napisany w oparciu o natywn±
d1879 1
a1879 1
OpenNTPD uczyni to znacznie prostrzym dla wielu z niego korzystaj±cych.
d1943 1
a1943 1
by przekazaæ im jaki produkt zastosowa³e¶ zamiast ich rozwiazania.
d1956 1
a1956 1
<a href="faq5.html">[Sekcja 5 - Tworzenie systemu ze zróde³]</a>
d1967 1
a1967 1
$Translation: faq6.html,v 1.35 2006/05/01 18:52:45 tkniaz Exp $<br>
@


1.33
log
@sync with steelix translation CVS
@
text
@d985 17
d1525 1
a1525 1
    Copyright (c) 1995-2005 OpenBSD. All rights reserved. http://www.OpenBSD.org
d1527 1
a1527 1
    OpenBSD 3.8 (RAMDISK_CD) #794: Sat Sep 10 15:58:32 MDT 2005
d1966 2
a1967 2
Originally [OpenBSD: faq6.html,v 1.233 ]<br>
$Translation: faq6.html,v 1.34 2006/04/05 20:07:11 tkniaz Exp $<br>
@


1.32
log
@sync with Steelix CVS
@
text
@d1585 3
a1587 2
fizycznej podsieci oraz by ka¿dy interfejs posiada³ prawdziwy statyczny
adres IP.
d1949 2
a1950 2
Originally [OpenBSD: faq6.html,v 1.232 ]<br>
$Translation: faq6.html,v 1.33 2006/03/16 17:11:40 tkniaz Exp $<br>
@


1.31
log
@sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2005 by OpenBSD.">
d1948 2
a1949 2
Originally [OpenBSD: faq6.html,v 1.231 ]<br>
$Translation: faq6.html,v 1.32 2005/11/30 01:58:11 tkniaz Exp $<br>
@


1.30
log
@sync with Steelix CVS
@
text
@d916 2
a917 2
Sam pptp musi byæ instalowany z <a href="faq8.html#Ports">portów</a> lub 
<a href="faq8.html#Packages">pakietów</a>.
d1802 1
a1802 1
dostêpn± poprzez <a href="faq8.html#Ports">porty</a>, i umo¿liwiaj±c±
d1948 2
a1949 2
Originally [OpenBSD: faq6.html,v 1.230 ]<br>
$Translation: faq6.html,v 1.31 2005/11/02 23:27:14 tkniaz Exp $<br>
@


1.29
log
@sync with Steelix CVS
@
text
@d904 1
a904 1
zosta³a dodana do OpenBSD 3.7.
d1510 1
a1510 1
    OpenBSD 3.7 (RAMDISK_CD) #573: Sun Mar 20 00:27:05 MST 2005
d1520 1
a1520 1
Tak, chocia¿ z narzêdziami dostêpnymi w OpenBSD 3.7, PXE zosta³o
d1819 1
a1819 1
zsynchronizowanie twojego serwera z jednym z serwerów publicznie dostêpnych
d1823 8
a1830 1
poziomie niedok³adno¶ci.
a1874 1
<!-- XXX remove "new" for 3.8 -->
d1886 1
a1886 1
<li><i>Nowy</i> <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ath&amp;sektion=4">ath(4)</a>
d1888 1
a1888 1
<li><i>Nowy</i> <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=iwi&amp;sektion=4">iwi(4)</a>
d1890 1
a1890 1
<li><i>Nowy</i> <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipw&amp;sektion=4">ipw(4)</a>
d1892 1
a1892 1
<li><i>Nowy</i> <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=atu&amp;sektion=4">atu(4)</a>
d1894 1
a1894 1
<li><i>Nowy</i> <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ral&amp;sektion=4">ral(4)</a>
d1897 1
a1897 1
<li><i>Nowy</i> <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rtw&amp;sektion=4">rtw(4)</a>
d1921 1
a1921 1
jako <a href="faq1.html#ReallyFree">wolnego</a>, zatem nie mog± one byæ
d1948 2
a1949 2
Originally [OpenBSD: faq6.html,v 1.226 ]<br>
$Translation: faq6.html,v 1.29 2005/10/12 21:10:22 tkniaz Exp $<br>
@


1.28
log
@sync with Steelix CVS
@
text
@d1925 1
a1925 1
Realtek, Ralink, Atmel, ADMtek i Atheros tworz± dobre produkty oraz
d1942 2
a1943 2
Originally [OpenBSD: faq6.html,v 1.225 ]<br>
$Translation: faq6.html,v 1.28 2005/09/03 01:41:26 pl-team Exp $<br>
@


1.27
log
@sync with Steelix CVS
@
text
@d1054 1
a1054 1
/work -alldirs -ro -network 10.0.0 -mask 255.255.255.0
d1942 2
a1943 2
Originally [OpenBSD: faq6.html,v 1.224 ]<br>
$Translation: faq6.html,v 1.27 2005/08/24 11:41:31 pl-team Exp $<br>
@


1.26
log
@sync with Steelix CVS
@
text
@d1941 1
d1943 2
a1944 1
$Translation: faq6.html,v 1.26 2005/08/20 15:09:57 pl-team Exp $<br>
@


1.25
log
@sync with Steelix CVS
@
text
@d1638 3
a1640 3
Dwa z czterech parametrów specyficznych dla CARP <tt>advbase</tt> i
<tt>advskew</tt>, dotycz± przedzia³u pomiêdzy rozg³oszeniami CARP.
Warto¶æ (w sekundach) to <tt>advskew</tt> dzielone przez 255,
d1654 6
d1667 3
a1669 2
rachael# <strong>ifconfig carp0 create</strong>
rachael# <strong>ifconfig carp0 vhid 1 pass tyrell 192.168.0.7</strong>
d1674 4
a1677 3
vhid równe 1, has³o tyrell i adres 192.168.0.7 (by mieæ pewno¶æ, ¿e
uzyskamy te ustawienia po restarcie systemu, mo¿emy utworzyæ plik
<tt>/etc/hostname.carp0</tt> z wpisem:
d1680 1
a1680 1
inet 192.168.0.7 255.255.255.0 192.168.0.255 vhid 1 pass tyrell.
d1683 5
d1690 3
a1692 6
pierwszy podniesie interfejs CARP stanie siê master'em.

<p>
Zauwa¿my, ¿e na maszynie posiadaj±cej wiele interfejsów,
interfejs CARP nale¿y do tej samej podsieci, do której nale¿±
fizyczne interfejsy.
d1749 2
a1750 2
rachael# <b>ifconfig carp1 vhid 2 advskew 100 pass bryant
192.168.0.7</b>
d1759 1
a1759 1
pris# <b>ifconfig carp1 vhid 2 pass bryant 192.168.0.7</b>
d1941 2
a1942 2
Originally [OpenBSD: faq6.html,v 1.222 ]<br>
$Translation: faq6.html,v 1.25 2005/08/12 07:52:41 pl-team Exp $<br>
@


1.24
log
@sync with Steelix CVS
@
text
@d1907 1
a1907 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=iwi&sektion=4#FILES">
d1931 2
a1932 2
Originally [OpenBSD: faq6.html,v 1.221 ]<br>
$Translation: faq6.html,v 1.24 2005/05/26 20:49:40 pl-team Exp $<br>
@


1.23
log
@sync with steelxi translation CVS
@
text
@d904 1
a904 3
zosta³a dodana do OpenBSD-current; jednak¿e nie bêdzie dostêpna dla u¿ytkowników nie 
korzystaj±cych z OpenBSD-current do czasuy wydania OpenBsd 3.7.
<!-- XXXrelease -->
d1508 1
a1508 1
    Copyright (c) 1995-2004 OpenBSD. All rights reserved. http://www.OpenBSD.org
d1510 1
a1510 1
    OpenBSD 3.6 (RAMDISK_CD)	#378: Fri Sep 17 13:04:04 MDT 2004
d1520 1
a1520 1
Tak, chocia¿ z narzêdziami dostêpnymi w OpenBSD 3.6, PXE zosta³o
d1688 3
a1690 5
Otó¿ CARP ¶wietnie sobie radzi z sytuacjami, w których jeden system
posiada adresy IP obu interfejsów fizycznych i grupê CARP.
Nie ma zatem powodu by zmieniaæ polecenia powy¿ej.
Jednak¿e dobrze jest zachowaæ porz±dek i posiadaæ jeden adres IP na ka¿dy
system, u³atwia to monitorowanie i dostêp.
a1810 9
<!-- XXXversion 3.6 only -->
Je¿eli zegar twojego komputera jest mocno nieaktualny, spróbuj wstêpnie
ustawiæ go mo¿liwie dok³adnie choæby korzystaj±c z <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=rdate&amp;sektion=8">rdate(8)</a>,
poniewa¿ ntpd bêdzie ustawia³ czas powoli korzystaj±c z 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adjtime&amp;sektion=2">adjtime(2)</a>
- mo¿e zaj±c <i>wiele godzin</i> (byæ mo¿e nawet dni) synchronizowanie bardzo
niedok³adnego zegara systemowego (wersja <i>-current</i> ustawi czas w
jednym kroku podczas startu systemy).
d1858 1
d1860 1
a1860 1
OpenBSD zawiera sterowniki dla kilku uk³adów sieci bezprzewodowej:
d1870 14
d1890 1
a1890 1
Karty oparte o Prism2 oraz Prism3 mog± byæ wykorzystywane do pracy
a1892 21
Niestety, urz±dzenia sieciowe oparte na Prism2/3 nie s± ju¿ produkowane
przez wiêkszo¶æ "masowych" producentów, poniewa¿ przeszli oni na tañsze
i nowsze uk³ady, czêsto nawet
<a href="#GenSupport">niezmianiaj±c numeru modelu</a>.
Wiêkszo¶æ producentów nowszych uk³adów zdecydowa³o siê nie
udostêpniaæ dokumentacji niezbêdnej do wyprodukowania wolnych
i otwartych sterowników dal tych urz±dzeñ (zachêca siê do kontaktowania
siê z producentami z pro¶bami o zmianê ich polityki).

<p>
Na szczê¶cie, urz±dzenia oparte o Prism2/3 s± wci±¿ dostêpne dziêki
nadwy¿kom oraz na rynku sprzêtu u¿ywanego, poza tym, kilku producentów
rozumie warto¶æ dobrze udokumentowanych, przyjaznych open source uk³adów
i nadal produkuje profesjonalne urz±dzenia oparte o Prism.
Jednym z dostawców takich kart jest
<a href="http://www.netgate.com">Netgate.com</a>.
Ogólnie, je¶li producent wyra¼nie nie zaznaczy swojego produktu jako
opartego na uk³adach Prism, mo¿esz za³o¿yæ, ¿e nie jest on kompatybilny
z sterownikiem wi(4).
Zwróæ uwagê, ¿e najnowsze serie uk³adów Prism (takie jak Prism-GT) nie s±
obs³ugiwane.
d1903 17
d1931 2
a1932 2
Originally [OpenBSD: faq6.html,v 1.220 ]<br>
$Translation: faq6.html,v 1.23 2005/05/15 10:16:40 pl-team Exp $<br>
@


1.22
log
@sync with Steelix CVS
@
text
@@


1.21
log
@huge sync from the translators
@
text
@d1153 1
a1153 1
# <strong>mount -t nfs 10.0.0.1:/work /mnt</strong>
d1161 1
a1161 1
10.0.0.1:/work /mnt nfs rw 0 0
d1171 1
a1171 1
10.0.0.1:/work /mnt nfs rw,nodev,nosuid 0 0
d1933 2
a1934 2
Originally [OpenBSD: faq6.html,v 1.219 ]<br>
$Translation: faq6.html,v 1.22 2005/05/03 14:54:47 pl-team Exp $<br>
@


1.20
log
@Sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2004 by OpenBSD.">
a57 1
<li><a href= "#PPTP"  >6.8 - Konfiguracja po³±czenia PPTP</a>
d219 1
a219 1
jest stworzenie pliku <i>/etc/hostname.xxx</i>. W miejsce xxx umie¶æ nazwê interfejsu
d260 1
a260 1
inet 172.21.0.0 255.255.255.0 NONE vlan 2 vlandev fxp1
d274 8
a281 3
Poni¿ej zamieszczony zosta³ przyk³ad dla standardowych przypadków u¿ycia,
zak³adamy w nim, ¿e serwery nazw maj± adresy 125.2.3.4 i 125.2.3.5
oraz nale¿ysz do domeny &quot;example.com&quot;.
d393 1
a393 1
Teraz jedyne co Ci pozostaje, to ustawienie tras rutingu na hostach po obu
d395 2
a396 1
jako rutera korzystaj±c z takich narzêdzi jak
d398 6
a403 3
<a href="http://www.gated.org">gated</a>, <a href="http://www.mrtd.net">mrtd</a>,
i <a href="http://www.zebra.org">zebra</a>. OpenBSD wspiera oprogramowanie
takie jak zebra, gated czy mrtd poprzez system portów. Potrafi tak¿e wspó³pracowaæ
d417 1
a417 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc&amp;sektion=8">/etc/rc(8)</a>,
d505 8
a512 6
do³±czonego standardowo do OpenBSD, wyedytuj plik /etc/hostname.xl0 (oczywi¶cie
je¶li taki posiadasz, lub analogiczny plik dla Twojej w³asnej konfiguracji
sprzêtowej). Wszystko czego potrzebujesz to umie¶ciæ w tym pliku wpis 'dhcp':
<pre>
# <strong>echo dhcp &gt;/etc/hostname.xl0</strong>
</pre>
d519 1
a519 1
Je¶li chcesz skonfigurowaæ swój interfejs poprzez dhcp z linii poleceñ, upewnij siê,
d522 3
a524 3
<pre>
# <strong>dhclient fxp0</strong>
</pre>
d527 1
a527 1
Gdzie <tt>fxp0</tt> powiniene¶ wstawiæ nazwê w³asnego posiadanego interfejsu.
d530 1
a530 1
Niewa¿ne w jaki sposób uruchamiasz dhclient, zawsze mo¿esz wyedytowaæ
d536 1
a536 1
<pre>
d539 16
a554 1
</pre>
d557 32
a588 2
a nastêpnie <b>usun±æ</b> domain-name-servers. Oczywi¶cie mo¿esz usun±æ te¿ ka¿dy
z pozosta³ych wpisów.
d669 1
a669 1
 - który jest demonem ppp dzia³aj±cym w przestrzeni j±dra.
d671 1
a671 1
 - dzia³aj±cym w przestrzeni u¿ytkownika.
d675 8
d688 1
a688 1
<li>Numer dialup Twojego dostawcy.
a703 8
Ponadto, w przypadku gdy u¿ywasz w³asnorêcznie skompilowanego j±dra (zamiast
domy¶lnego GENERIC) upewnij siê, ¿e poni¿szy wiersz znajduje siê w pliku konfiguracyjnym:

<blockquote><pre><strong>
pseudo-device   tun             2
</strong></pre></blockquote>

<p>
d741 2
a742 2
poni¿ej nag³ówka <b>default:</b>. Nag³ówek nowej sekcji mo¿e mieæ dowolny
tytu³, np. nazwê Twojego ISP. Tutaj skorzystamy z nazwy <b>myisp:</b>,
d760 1
a760 1
konkretnym ISP. Opcja &quot;set phone&quot; ustala numer dialup naszego ISP.
d805 26
d846 5
a850 4
U¿ywanie <i>/usr/sbin/ppp</i> bez opcji spowoduje pracê w trybie interaktywnym.
Mo¿esz wtedy rêcznie ustanawiaæ po³±czenie rozmawiaj±c ze swoim modemem, ta opcja
(a w zasadzie brak ¿adnych opcji) jest u¿yteczna, gdy Twój <i>ppp.conf</i> nie dzia³a
tak jak powinien.
d867 55
a921 3
Dodatkowe informacje mo¿esz znale¼æ pod adresem
<a href="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/userppp.html">FreeBSD
Handbook entry on User PPP</a>.
a1182 111
<a name="PPTP"></a>
<h2>6.8 - Konfigurowanie po³±czenia PPTP w OpenBSD</h2>

<p>
<strong>UWAGA:</strong> Poni¿sze informacje nie bêd± odpowiednie dla po³±czeñ
do <strong>WSZYSTKICH</strong> providerów ADSL, aczkolwiek wiêkszo¶æ informacji
i ustawieñ jest podobnych. Konfiguracja ta stworzona zosta³a i dzia³a dla
<a href="http://www.inode.at">Inode</a>, dostawcy ADSL w Austrii oraz
<a href="http://www.kpn.nl">KPN</a> w Holandii.

<p>
Aby rozpocz±æ, musisz zainstalowaæ pptp. Odpowiedni port znajdziesz w
<i>/usr/ports/net/pptp</i>. Przeczytaj <a href="faq8.html#Ports">FAQ 8,
Porty</a> dla zdobycia wiêcej informacji o drzewie portów w OpenBSD.

<p>
Mimo nie wykorzystywania urz±dzenia
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gre&amp;sektion=4">gre(4)</a>
wprost, PPTP wykorzystuje kapsu³kowanie (ang. encapsulation) GRE.
Aby zezwoliæ j±dru na przyjmowanie nadchodz±cych, zakapsu³kowanych pakietów GRE,
wykonaj nastêpuj±c± komendê:

<blockquote><pre>
# sysctl net.inet.gre.allow=1
</pre></blockquote>

<p>
Gdy masz ju¿ zainstalowane <b>pptp</b> oraz odpowiedni wpis w
<i>/etc/sysctl.conf</i>, mo¿esz przyst±piæ do edycji plików
konfiguracyjnych dla swojego po³±czenia.
Pakiet ten jest podobny do powszechnie u¿ywanego w OpenBSD
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ppp&amp;sektion=8">ppp(8)</a>,
wiêc je¶li nie jeste¶ obeznany z ppp(8), po wiêcej informacji udaj siê do
<a href="#PPP">FAQ 6, PPP</a>.

<ul>
<li>1 - /etc/ppp/options
<li>2 - /etc/ppp/pap-secrets
</ul>

<p>
Je¶li chodzi o plik <i>/etc/ppp/options</i>, poni¿sza konfiguracja bêdzie
odpowiednia dla wiêkszo¶ci przypadków:

<blockquote><pre>
# <strong>cat /etc/ppp/options</strong>
name "LOGINNAME"
noauth
noipdefault
defaultroute
debug
</pre></blockquote>

<p>
W miejsce <tt>LOGINNAME</tt> wpisz swoje dane.

<p>
Plik <i>/etc/ppp/pap-secrets</i> powinien zawieraæ liniê podobn± do tej:

<blockquote><pre>
# <strong>cat /etc/ppp/pap-secrets</strong>
LOGINNAME 10.0.0.138 PASSWORD
</pre></blockquote>

<p>
Gdzie LOGINNAME to Twoja nazwa u¿ytkownika przyznana przez dostawcê ADSL,
a PASSWORD to has³o odpowiadaj±ce loginowi. 10.0.0.138 to adres IP
przydzielony Twojemu MODEMOWI. Upewnij siê aby ten plik mia³ prawo odczytu
tylko dla u¿ytkownika root (tryb 600).

<p>
<h3>6.8.1 - Przypisywanie adresu do interfejsu sieciowego</h3>

<p>
W powy¿szym przyk³adzie nasz modem mia³ prekonfigurowany interfejs z
adresem 10.0.0.138. Teraz, musimy przypisaæ adres NASZEMU interfejsowi,
najlepiej u¿yæ adresu bliskiego adresowi modemu lub skorzystaæ ze statycznego
IP przydzielonego Tobie. Wiêcej o konfiguracji interfejsów dowiesz siê z
<a href="#Setup">FAQ 6, Setup</a>.

<p>
Gdy interfejs jest ju¿ aktywny, powinno udaæ siê utworzyæ po³±czenie pptp
komend±:

<blockquote><pre>
# <strong>/usr/local/sbin/pptp 10.0.0.138 &amp;</strong>
</pre></blockquote>

<p>
Poniewa¿ wykorzystuje ona OpenBSD ppp(8), uruchomione zostaj± dwa procesy,
mo¿esz zakoñczyæ pptp w poni¿szy sposób:

<blockquote><pre>
# <strong>kill -9 [pid procesu pppd]</strong>
$ <strong>kill -9 [pid procesu pptp]</strong>
</pre></blockquote>

<p>
Je¶li wyst±pi³y jakie¶ problemy, otwórz <tt>/var/log/messages</tt> i spróbuj
je zlokalizowaæ.

<blockquote>
<pre>
# <strong>tail -f /var/log/messages</strong>
</pre></blockquote>

<p>
Mo¿esz tak¿e umie¶ciæ komendê startuj±c± pptp w pliku <i>/etc/rc.local</i>,
aby ³±czyæ siê automatycznie przy starcie.


d1310 2
a1311 2
poprzez interfejs ep0, natomiast filtrowania dokonujemy na interfejsie fxp0,
u¿ywaj±c opcji keep state do przechwytywania powracaj±cych danych:
d1499 1
a1499 1
<tt>bsd.rd</tt>, zostanie pobrany plik <tt>bsd.rd</tt> z serwera TFTP.
d1516 1
a1516 1
Rozpoczyna siê start systemu z <a name="faq4.html#bsd.rd">j±drem
d1708 1
a1708 1
rachael# <strong>sysctl net.inet.carp.preempt=1</strong>
d1716 1
a1716 1
pris# <strong>ifconfig carp0 advskew 100</strong>
d1742 3
a1744 3
rachael# <strong>ifconfig create carp1</strong>
rachael# <strong>ifconfig carp1 vhid 2 advskew 100 pass bryant
192.168.0.7</strong>
d1752 3
a1754 3
pris# <strong>ifconfig carp1</strong>
pris# <strong>ifconfig carp1 vhid 2 pass bryant 192.168.0.7</strong>
pris# <strong>sysctl net.inet.carp.preempt=1</strong>
d1821 1
a1821 1
- mo¿e zaj±c wiele godzin (byæ mo¿e nawet dni) synchronizowanie bardzo
d1824 1
d1842 4
a1845 3
To móg³by byæ
<a href="http://bradknowles.typepad.com/considered_harmful/2004/09/openntpd.html"
>Brad Knowles</a>.
d1861 2
a1862 2
Jest niemal pewne ¿e istniej± aplikacje dla których narzêdzie ntpd.org
jest bardziej odpowiednie, jednak¿e odczuwamy ¿e OpenNTPD dla pozosta³ych
d1865 5
d1933 2
a1934 2
Originally [OpenBSD: faq6.html,v 1.206 ]<br>
$Translation: faq6.html,v 1.21 2004/11/23 01:00:40 pl-team Exp $<br>
@


1.19
log
@Sync with Steelix CVS
@
text
@d541 1
a541 1
wyedytuj <tt>/etc/rc.conf.local</tt> poprzez ustawienie <tt>dhcpd_flags="-q"</tt>.
d1903 2
a1904 2
Originally [OpenBSD: faq6.html,v 1.204 ]<br>
$Translation: faq6.html,v 1.20 2004/11/13 16:19:09 pl-team Exp $<br>
@


1.18
log
@Sync with Steelix CVS
@
text
@d17 3
a19 1
<img alt="[OpenBSD]" height=30 width=141 src="../../images/smalltitle.gif">
d23 1
a23 1
<a href="faq5.html">[Sekcja 5 - Tworzenie systemu ze zróde³]</a>
d60 5
d171 2
d196 1
a196 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pflog&amp;sektion=4&amp;manpath=OpenBSD+3.4">pflog</a>
d214 2
d251 1
a251 1
Oczywi¶cie nie powiniene¶ nigdy ustawiaæ trybu, z którym nie potrafi wspó³pacowaæ
d273 1
a273 1
Wiêcej na temat formatu tego pliku mo¿esz dowiedzieæ siê ze stony manuala
d312 1
a312 1
route(8), która drukuje adresy IP, zamiast wykonywaæ wyszkukiwania DNS
d384 1
a384 1
# <strong>sysctl -w net.inet.ip.forwarding=1</strong>
d478 1
a478 1
do budowy wydajnych i wysoce konfigurowanlnych zapór sieciowych. Opis
d485 6
d499 1
a499 1
sprzêtowej). Wszystko czego potrzebujesz to umie¶ciæ w tym pliku wpis 'dhcp'
d510 1
a510 1
¿e masz plik /etc/dhclient.conf, a nastêpnie wykonaj:
d517 1
a517 1
Gdzie fxp0 powiniene¶ wstawiæ nazwê w³asnego posiadanego interfejsu.
d521 4
a524 3
/etc/dhclient.conf aby np. <b>nie</b> uaktualniaæ swojej konfiguracji serwerów
DNS poprzez odkomentowanie linii 'request' (poni¿ej znajdziesz przyk³adowe
domy¶lne opcje, które musisz odkomentowaæ i dokonaæ spo¶ród nich wyboru.)
d532 1
a532 1
a nastêpnie <b>unsun±æ</b> domain-name-servers. Oczywi¶cie mo¿esz usun±æ te¿ ka¿dy
d541 3
a543 3
wyedytuj /etc/rc.conf poprzez ustawienie dhcpd_flags="-q" zamiast domy¶lnego
dhcpd_flags=NO. Umie¶æ nazwê interfejsu, na którym serwer ma <b>nas³uchiwaæ</b> w pliku
/etc/dhcpd.interfaces.
d572 2
a573 1
Je¶li chcesz uruchomiæ dhcpd(8) z linii komend po edycji /etc/dhcpd.conf, u¿yj:
d577 1
a577 1
     # <b>dhcpd -q fxp0</b>
d582 1
a582 1
utworzniea pustego pliku <tt>dhcpd.leases</tt> zanim bêdzie mo¿na uruchomiæ
d587 1
a587 3
jest interfejsem na którym serwer DHCP bêdzie nas³uchiwaæ. Opcja <tt>-q</tt>
mówi dhcpd(8), aby zachowywa³ siê trochê ciszej (czyli generowa³ mniej
komunikatów kontrolnych) ni¿ standardowo.
d590 1
a590 1
Je¶li serwujesz informacje DHCP klientowi Windows, mo¿esz zechcieæ, aby
d592 1
a592 1
do poni¿szej linijkê do /etc/dhcpd.conf:
d608 3
a610 3
Protokó³ Punkt-Punkt (Point-to-Protocol - PPP) najczê¶ciej wykorzystywany jest w przypadkach,
gdy ³±czysz siê ze swoim dostawc± Internetu poprzez modem. W OpenBSD mo¿esz to zrobiæ
na dwa sposoby poprzez:
d657 1
a657 4
<i>ppp.conf</i>, który pozwoli Ci na po³±czenie siê z Twoim dostawc± Internetu,
a tak¿e ustawi domy¶ln± trasê rutowania i serwer nazw (DNS). Wszystko czego
potrzebujesz aby ten plik dzia³a³ to numer Twojego dostawcy, Twoja nazwa
u¿ytkownika oraz has³o.
d662 2
a663 2
set log Phase Chat LCP IPCP CCP tun command
set device /dev/cua01
d665 1
a665 1
set dial "ABORT BUSY ABORT NO\\sCARRIER TIMEOUT 5 \"\" AT OK-AT-OK ATE1Q0 OK\\dATDT\\T TIMEOUT 40 CONNECT"
d686 4
a689 4
poni¿ej nag³ówka <b>default:</b>. Nag³ówek nowej sekcji mo¿e mieæ dowolny tytu³,
np. nazwê Twojego ISP. Tutaj skorzystamy z nazwy <b>myisp:</b>, poni¿ej tego nag³ówka
znajdziesz wszystkie informacje niezbêdne do tego, aby po³±czenie zosta³o poprawnie
zainicjowane.
d704 2
a705 2
Oto podstawowa konfiguracja potrzebna do tego, aby po³±czyæ siê z konkretnym
ISP. Opcja &quot;set phone&quot; ustala numer dialup naszego ISP.
d709 5
a713 2
bez sygna³u po³±czenia. W innym przypadku bêdziemy czekaæ na &quot;login:&quot;
oraz wys³ane zostanie Twoja nazwa u¿ytkownika oraz has³o. W powy¿szym przypadku
d737 1
a737 1
negocjacji po³±cznia nie przyznaj± adresu IP dopóki nie za¿±dasz ``0.0.0.0.0''.
d740 1
a740 1
Nastepna opcja &quot;add default HISADDR&quot; ustala domy¶ln± trasê
d753 3
a755 3
Mamy wreszcie nasz plik <i>ppp.conf</i> z konfiguracj± po³±cznia, teraz
mo¿emy spróbowaæ po³±czyæ siê z naszym ISP. Opisanych zostanie kilka najczê¶ciej
u¿ywanych parametrów ppp.
d758 4
a761 4
<li><tt>ppp -auto myisp</tt> - Uruchamia ppp, konfiguruje interfejs, ³±czy siê z
ISP a nastêpnie przechodzi do pracy w tle.
<li><tt>ppp -ddial myisp</tt> - Podobne do -auto, ale w przypadku, gdy po³±cznie
zostanie utracone, zostan± podjête próby jego przywrócenia.
d766 1
a766 1
Mo¿esz wtedy rêcznie ustanawiaæ po³±cznie rozmawiaj±c ze swoim modemem, ta opcja
d796 1
a796 1
<h3>6.6.1 - Jak zmusiæ j±dro aby stosowa³o wieksz± liczbê ponowieñ
d800 1
a800 1
Zmiana tych standardowych ustawieñ mo¿e byc pomocna w przypadku problemów
d816 1
a816 1
z <tt>sysctl -w</tt>, jak np. <tt>sysctl -w net.inet.tcp.keepidle=28800</tt>.
d827 1
a827 1
<tt>sysctl -w net.inet.ip.directed-broadcast=1</tt>. Je¶li chcesz wiedzieæ
d845 1
a845 1
 #  <strong>sysctl -w  net.inet.tcp.baddynamic=749,750,751,760,761,871</strong>
d849 2
a850 2
 #  <strong>sysctl -w net.inet.tcp.baddynamic=+748</strong>
 #  <strong>sysctl -w net.inet.tcp.baddynamic=-871</strong>
a893 1
NFS korzysta z
d895 3
a897 4
i musi byæ on uruchomiony jako pierwszy. Portmap(8) w wersjach
OpenBSD 3.2 i pó¼niejszych jest domy¶lnie wy³±czony, aby to zmieniæ
wyedytuj <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf&amp;sektion=8">rc.conf(8)</a>
zmieniaj±c linijkê <tt>portmap</tt> w nastêpuj±cy sposób:
d902 3
d908 1
a908 1
W naszym przyk³adzie serwer ma adres ip <b>10.0.0.1</b>. Bêdzie on udostêpnia³
d910 1
a910 1
w koniguracji jest edycja pliku <i>/etc/exports</i>. Umie¶cisz w nim
d928 1
a928 1
znajduj±cy siê na sytemie plików <tt>/work</tt>. Opcja <tt>-ro</tt>
d935 12
a946 10
Gdy Twój plik <i>/etc/exports</i> jest ju¿ odpowiednio skonfigurowany, mo¿esz
przej¶æ do konfiguracji serwera. Upewnij siê, czy Twoje j±dro zosta³o skompilowane
z opcj± NFSSERVER oraz NFSCLIENT (standardowe j±dra tak maj±). Nastêpnym krokiem
jest ustawienie warto¶ci <tt>nfs_server=YES</tt> w pliku <i>/etc/rc.conf</i>.
Spowoduje to automatyczne uruchomienie nfsd(8) i mountd(8) za ka¿dym razem,
gdy uruchomisz ponownie komputer. W tej chwili mo¿esz uruchomiæ te demony
rêcznie, aby to zrobiæ, musisz byæ root'em oraz portmap(8) musi byæ ju¿
uruchomiony. Oto przyk³ad uruchomienia nfsd(8) pracuj±cego na protoko³ach
TCP i UDP, korzystaj±c z 4 demonów. Powiniene¶ ustaliæ tê liczbê wg w³asnych
potrzeb, aby okre¶liæ maksymaln± ilo¶æ jednocze¶nie obs³ugiwanych klientów.
d975 1
a975 1
W tej chwili mo¿esz sprawdziæ czy wystartowane przez Ciebie demony pracuj±
d1056 2
a1057 1
<a href="http://www.inode.at">Inode</a>, dostawcy ADSL w Austrii.
d1065 1
a1065 1
Poniewa¿ istnieje konflikt pomiêdzy obs³ug±
d1067 3
a1069 2
w j±rze a pptp, bêdziesz musia³ przekompilowaæ swoje j±dro, usuwaj±c
wsparcie dla gre(4).
d1071 2
a1072 18
<blockquote>Patch to remove GRE(4) support.
<pre>
Index: GENERIC
===================================================================
RCS file: /cvs/src/sys/conf/GENERIC,v
retrieving revision 1.86
diff -u -r1.86 GENERIC
--- GENERIC     14 Mar 2002 00:42:25 -0000      1.86
+++ GENERIC     17 May 2002 01:52:17 -0000
@@@@ -87,7 +87,7 @@@@
 pseudo-device  enc     1       # option IPSEC needs the encapsulation interface
 pseudo-device  bridge  2       # network bridging support
 pseudo-device  vlan    2       # IEEE 802.1Q VLAN
-pseudo-device  gre     1       # GRE encapsulation interface
+#pseudo-device gre     1       # GRE encapsulation interface
 #pseudo-device strip   1       # Starmode Radio IP interface

 pseudo-device  pty     64      # pseudo-terminals
d1076 4
a1079 10
Aby przekompilowaæ j±dro, zajrzyj do ¼róde³ OpenBSD przez cvs (je¶li
nie czujesz siê pewnie z cvs zajrzyj na stronê
<a href="../../pl/anoncvs.html">AnonCVS</a> po wiêcej informacji), na³ó¿
podany patch i przekompiluj j±dro tak, jak zosta³o to opisane w
<a href="faq5.html#Building">FAQ 5, Budowanie j±dra</a>.

<p>
Gdy masz ju¿ zainstalowene <b>pptp</b> oraz nowe j±dro, mo¿esz przyst±piæ
do edycji plików konfiguracyjnych dla swojego po³±czenia. Pakiet ten jest
podobny do powszechnie u¿ywanego w OpenBSD
d1165 1
a1165 1
jest pomostem ³±cz±cym dwie lub wiêcej odseparowanyh od siebie sieci.
d1342 548
a1897 1
<p>
d1903 2
a1904 2
Originally [OpenBSD: faq6.html,v 1.184 ]<br>
$Translation: faq6.html,v 1.19 2004/02/07 23:15:35 pl-team Exp $<br>
@


1.17
log
@Sync with Steelix CVS
@
text
@d27 16
d522 1
a522 1
<A href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhcpd&amp;sektion=8">dhcpd(8)</a>,
d557 1
d562 9
a570 3
Gdzie <tt>fxp0</tt> jest interfejsem na którym serwer DHCP ma nas³uchiwaæ.
Opcja <tt>-q</tt> mówi dhcpd(8), aby zachowywa³ siê trochê ciszej ni¿
standardowo.
d1356 2
a1357 2
Originally [OpenBSD: faq6.html,v 1.182 ]<br>
$Translation: faq6.html,v 1.17 2004/01/12 17:35:14 pl-team Exp $<br>
@


1.16
log
@Sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1998-2003 by OpenBSD.">
d1333 2
a1334 2
Originally [OpenBSD: faq6.html,v 1.181 ]<br>
$Translation: faq6.html,v 1.16 2003/11/25 14:44:33 pl-team Exp $<br>
@


1.15
log
@Sync with Steelix CVS
@
text
@d1097 1
a1097 1
<h3>6.9.1 - Przypisywanie adresu do interfejsu sieciowego</h3>
d1333 2
a1334 2
Originally [OpenBSD: faq6.html,v 1.180 ]<br>
$Translation: faq6.html,v 1.15 2003/11/11 15:18:09 pl-team Exp $<br>
@


1.14
log
@Sync with Steelix CVS
@
text
@a117 1
</p>
d1333 2
a1334 2
Originally [OpenBSD: faq6.html,v 1.179 ]<br>
$Translation: faq6.html,v 1.14 2003/11/01 23:03:35 pl-team Exp $<br>
@


1.13
log
@Sync with Steelix CVS
@
text
@d21 1
a21 1
<a href="faq5.html">[Sekcja 5 - Konfiguracja j±dra i dysków]</a>
d32 4
a35 3
<li><a href= "#Intro" >6.0.1 - Wprowadzenie</a>
<li><a href= "#Setup" >6.1 - Inicjalizacja sieci</a>
<li><a href= "#PF"    >6.2 - Filtr pakietów (Packet Filter - PF)</a>
d40 2
a41 2
<li><a href= "#PPTP"  >6.9 - Konfiguracja po³±czenia PPTP</a>
<li><a href= "#Bridge">6.10 - Konfiguracja bridge`a w OpenBSD</a>
d48 1
a48 1
<h2>6.0.1 - Wprowadzenie</h2>
d53 5
a57 5
j±dra</a>, dzia³ania narzêdzi <a 
href= "http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8"
>ifconfig(8)</a> oraz <a
href= "http://www.openbsd.org/cgi-bin/man.cgi?query=netstat&amp;sektion=1"
>netstat(1)</a> na podstawie odpowiadaj±cych im stron manuala.
d63 2
a64 2
<a href="http://www.3com.com/corpinfo/en_US/technology/tech_paper.jsp?DOC_ID=135">Understanding
IP Addressing</a>.
d81 1
a81 1
<h2>6.1 - Inicjalizacja Sieci</h2>
d85 1
a85 1
<h3>6.1.1 - Identyfikacja i konfiguracja interfejsów sieciowych</h3>
d172 1
a172 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pflog&amp;sektion=4&amp;manpath=OpenBSD+3.3">pflog</a>
d323 1
a323 1
<h3>6.1.2 - Konfiguracja komputera z OpenBSD jako rutera</h3>
d375 1
a375 1
<h3>6.1.3 - Ustawianie aliasów na interfejsach sieciowych</h3>
d447 1
a447 1
<h2>6.2 - Filtr Pakietów (PF)</h2>
d451 3
a453 3
kontrolê przepustowo¶ci ³±cza z priorytetowaniem pakietów. PF sta³ siê
integraln± czê¶ci± j±dra OpenBSD, pocz±wszy od wersji 3.0. Opisany jest
w swojej nowej <a href="../pf/pl/index.html"><b>dokumentacji PF</b></a>.
d1008 1
a1008 1
<h2>6.9 - Konfigurowanie po³±czenia PPTP w OpenBSD</h2>
d1139 1
a1139 1
<h2>6.10 - Konfiguracja sieciowego bridge`a w OpenBSD</h2>
d1324 1
a1324 1
<a href="faq5.html">[Sekcja 5 - Konfiguracja j±dra i dysków]</a>
d1330 1
a1330 1
<a href="index.html"><img height="24" width="24" src="../../images/back.gif" border="0" alt="[back]"></a>
d1334 2
a1335 2
Originally [OpenBSD: faq6.html,v 1.178 ]<br>
$Translation: faq6.html,v 1.13 2003/10/12 19:49:15 pl-team Exp $<br>
@


1.12
log
@sync with steelix cvs
@
text
@d159 1
a159 1
Oczywistym jest ¿e sieæ IP dostêpna jest poprzez interfejs fxp0, st±d
d1334 1
a1334 1
$Translation: faq6.html,v 1.12 2003/09/28 14:50:20 pl-team Exp $<br>
@


1.11
log
@sync with steelix cvs
@
text
@d64 2
a65 2
Dokument ten zawiera fundamentalne informacje na temat sieci IP, jest przydatny
zw³aszcza gdy opiekujesz siê wieloma sieciami.
d103 1
a103 1
Je¶li nie wiesz jak nazywa siê Twoje urz±dzenie sieciowe przej¿yj
d216 1
a216 1
je¶li chcesz aby karta pracowa³a w trybie 100baseTX full-duplex, plik konfiguracyjny
d224 2
a225 2
Oczywi¶cie nie powiniene¶ nigdy ustawiaæ trybu z którym nie potrafi wspó³pacowaæ
drugi koniec po³±czenia. Je¶li nie ma ku temu wyra¼nych powodów nie jest zalecane
d239 2
a240 2
Jedyne co musisz zrobiæ to umie¶ciæ adres IP swojej bramki w pliku
<i>/etc/mygate</i>. Dziêki temu Twój system bêdzie poinformowany
d261 2
a262 2
W tej chwili, aby zainicjowaæ sieæ na swojej konfiguracji mo¿esz uruchomiæ
ponownie komputer, b±d¼ uruchomiæ skrypt <strong>/etc/netstart</strong>.
d278 1
a278 1
skonfigurowana. Aby upewniæ siê ¿e wszystkie interfejsy zosta³y skonfigurowane
d284 1
a284 1
Je¶li masz problemy z routingiem, mo¿esz skorzystaæ z flagi -n programu
d333 1
a333 1
z informacji o translacji adresów sieciowych (NAT - Network Address Translation)
d338 1
a338 1
do dzia³ania, wymaga ono jednak inicjalizacji. Powiniene¶ do tego celu skorzystaæ z
d354 1
a354 1
komendy musisz mieæ uprawnienia root`a.
d362 1
a362 1
Teraz jedyne co Ci pozostaje to ustawienie tras rutingu na hostach po obu
d397 1
a397 1
OpenBSD nie odnosi siê do kolejnych aliasów kolejno je numeruj±c,
d420 1
a420 1
Po wyedytowaniu pliku, jedyne co musisz zrobiæ aby wprowadziæ powy¿sze
d451 1
a451 1
integraln± czê¶ci± j±dra OpenBSD pocz±wszy od wersji 3.0. Opisany jest
d466 1
a466 1
sprzêtowej). Wszystko czego potrzebujesz to umie¶cicæ w tym pliku wpis 'dhcp'
d476 1
a476 1
Je¶li chcesz skonfigurowaæ swój interfejs poprzez dhcp z linii poleceñ, upewnij siê
d508 1
a508 1
dhcpd_flags=NO. Umie¶æ interfejs, na którym serwer ma <b>nas³uchiwaæ</b> w pliku
d531 1
a531 1
Twój serwer DHCP powie klientowi, ¿e nale¿y do domeny "example.com" oraz, ¿e serwery DNS dla tej
d546 1
a546 1
Opcja <tt>-q</tt> mówi dhpcpd(8), aby zachowywa³ siê trochê ciszej ni¿
d561 1
a561 1
Zobacz <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dhcp-options&amp;sektion=5">dhcp-options(5)</a> aby dowiedzieæ siê jakie inne informacje mo¿esz dostarczyæ klientom.
d582 1
a582 1
swojego dostawcy. Oto lista rzeczy, które powiniene¶ wiedzieæ nim przyst±pimy do pracy:
d598 1
a598 1
jest aby¶ siê z nimi zapozna³.
d633 1
a633 1
Sekcja poni¿ej <tt>default:</tt> bêdzie przetwa¿ana przy ka¿dym uruchomieniu
d650 1
a650 1
np. nazwê Twojego ISP. Tutaj skorzysamy z nazwy <b>myisp:</b>, poni¿ej tego nag³ówka
d667 1
a667 1
Oto podstawowa konfiguracja potrzebna do tego aby po³±czyæ siê z konkretnym
d686 1
a686 1
Czyli pierwszym adresem IP jest ten jaki chcemy aby zosta³ nam pzypisany.
d688 1
a688 1
tutaj. W tym przyk³adzie dodali¶my /0 aby zaznaczyæ, ¿e ¿aden z bitów tego
d692 1
a692 1
zrób tak jak w naszym przypadku - umie¶æ na koñcu /0. Trzecia opcja to nasza
d695 1
a695 1
negocjacji IPCP. Jakkolwiek tylko adres z zakresu myaddr zostanie zaaakceptowany.
d697 1
a697 1
negocjacji po³±cznia nie przyznaj± adresu IP dopóki nie zarz±dasz ``0.0.0.0.0''.
d720 1
a720 1
<li><tt>ppp -ddial myisp</tt> - Podobne do -auto, ale w przypadku gdy po³±cznie
d735 1
a735 1
gdy po³±czenia zostaje utracone lub nawi±zane. Do tego typu zadañ wykorzystuje siê
d779 1
a779 1
<h3>6.6.2 - W jaki sposób uruchomiæ directed broadcasts?</h3>
d788 2
a789 2
dlaczego domy¶lnie jest ta opcja wy³±czona poczytaj o
<a href="http://www.netscan.org">smurf attacks</a>.
d792 1
a792 1
<h3>6.6.3 - Nie chcê aby j±dro dynamicznie przydziela³o pewne porty.</h3>
d799 2
a800 2
Decydowanie o li¶cie zarezerwowanych portów TCP które nie powinny byæ
alokowane przez j±dro dynamicznie. Mo¿esz wykorzystaæ tê opcjê aby
d847 1
a847 1
systemów plików do <i>/etc/exports</i> bez listy hostów które mog±
d849 2
a850 2
montowaæ odpowiedni katalog, ka¿dy kto bêdzie móg³ ustanowiæ z Twoim
serwerem po³±czenie bêdzie móg³ montowaæ wszystkie eksportowane
d891 1
a891 1
pracuj± czasami w kilku ró¿nych sieciach.
d900 1
a900 1
rêcznie, aby to zrobiæ musisz byæ rootem oraz portmap(8) musi byæ ju¿
d902 1
a902 1
TCP i UDP korzystaj±c z 4 demonów. Powiniene¶ ustaliæ tê liczbê wg w³asnych
d951 2
a952 2
Podczas zwyk³ago u¿ytkowania, istnieje jeszcze kilka innych narzêdzi
pozwalaj±cych zobaczyæ co dzieje siê z NFSem. Jedn± z nich jest:
d954 1
a954 1
dziêki któremu mo¿esz dowiedzieæ siê jakie zasoby s± aktualnie zamontowane
d968 1
a968 1
NFS powinien byæ montowany poleceniem mount(8), lub w bardziej specyficzny
d980 1
a980 1
Je¶li chcesz aby montowanie przebiega³o w momencie uruchamiania systemu,
d990 2
a991 2
przy starcie! Inne standardowe opcje zwiêkszaj±ce bezpieczeñstwo takie
jak noexec, nodev i nosuid powinny byæ tak¿e u¿yte zawsze, gdy to mo¿liwe:
d1050 1
a1050 1
podany patch i przekompiluj j±dro tak jak zosta³o to opisane w
d1058 1
a1058 1
wiêc je¶li nie jeste¶ obeznany z ppp(8), po wiêcej informacji zg³o¶ siê do
d1102 1
a1102 1
najlepiej u¿yæ adresu blisiego adresowi modemu, lub skorzystaæ ze statycznego
d1143 1
a1143 1
W przeciwieñstwie do routera, bridge jest logicznie "niewidzialny",
d1145 1
a1145 1
stronie bridge`a. Bridge bêdzie jedynie przekazywa³ pakiety pomiêdzy
d1151 1
a1151 1
interfejs sieciowy bridge`a mo¿e posiadaæ (lub nie) indywidualny
d1153 1
a1153 1
drugi jako zwyk³y standardowy interfejs sieciowy. Je¶li interfejs nie posiada
d1158 1
a1158 1
<h3>Przyk³ad bridge`a</h3>
d1163 1
a1163 1
jest terminal serwerowy z OpenBSD maj±cy sta³e szybkie po³±czenie z tak±
d1165 1
a1165 1
tej maszyny jako bridge`a pomiêdzy sieciami coax.
d1175 1
a1175 1
do segmentu coax bêd± mog³y siê ze sob± komunikowaæ tak jakby by³y
d1208 1
a1208 1
znajdziesz w <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ep&amp;sektion=4">man page</a>.
d1226 1
a1226 1
Oto ca³a filozofia tworzenia bridge`a sk³adaj±cego siê z dwóch interfejsów
d1228 1
a1228 1
jakiej to robimy ? Nie, nale¿y bowiem pamiêtaæ, ¿e bridge jest symetryczny -
d1233 1
a1233 1
swojego bridge`a.
d1236 1
a1236 1
<h3>Filtrowanie pakietów w systemie z bridge`m</h3>
d1239 2
a1240 2
Czêsto, nawet podczas u¿ywania tak prostego bridge`a jak ten, mo¿e zaj¶æ
potrzeba zrobienia CZEGOKOLWIEK z pakietami wêdruj±cego przez niego.
d1246 1
a1246 1
Uwa¿aj, pamiêtaj o dwukierunkowej naturze bridge`a, o tym ¿e czê¶æ
d1248 1
a1248 1
je filtrowa³ na jednym z nich. Twóje domy¶lne regu³ki "Pass all" mog±
d1284 1
a1284 1
przed dotarciem zarówno do naszego bridge`a jak i ka¿dego hosta "za nim".
d1288 1
a1288 1
Do monitorowania i kontrolowania utworzonego bridge`a, korzystaj z
d1291 1
a1291 1
która mo¿e byæ równie¿ u¿ywana do stworzenia bridge`a.
d1294 1
a1294 1
<h3>Uwagi na temat bridge`a</h3>
d1307 1
a1307 1
w kilku przypadkach, pamiêtaj bowiem, ¿e bridge pracuje z ka¿dym protoko³em
d1310 1
a1310 1
<li>Bridge wymaga aby interefjsy sieciowe pracowa³y w trybie "promiscuous"
d1316 1
a1316 1
s± przyk³adem urz±dzenia, które nie mo¿e pracowaæ jako czê¶æ bridge`a.
d1334 1
a1334 1
$Translation: faq6.html,v 1.11 2003/09/17 12:09:08 pl-team Exp $<br>
@


1.10
log
@sync with steelix cvs
@
text
@d51 6
a56 6
i zrozumienie sekcji 5 FAQ <a href="faq5.html">konfiguracja i instalacja j±dra</a>,
dzia³ania narzêdzi
<a href= "http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">
ifconfig(8)</a> oraz
<a href= "http://www.openbsd.org/cgi-bin/man.cgi?query=netstat&amp;sektion=1">
netstat(1)</a> na podstawie odpowiadaj±cych im stron manuala.
d1333 2
a1334 2
Originally [OpenBSD: faq6.html,v 1.177 ]<br>
$Translation: faq6.html,v 1.10 2003/09/07 15:31:26 pl-team Exp $<br>
@


1.9
log
@sync with steelix translation CVS
@
text
@d383 1
a383 1
który jest elementem procedury startowej (<a href="../faq10.html#rc">rc startup
d452 1
a452 1
w swojej nowej <a href="pf/index.html"><b>dokumentacji PF</b></a>.
d1017 1
a1017 1
<i>/usr/ports/net/pptp</i>. Przeczytaj <a href="../faq8.html#Ports">FAQ 8,
d1334 1
a1334 1
$Translation: faq6.html,v 1.9 2003/08/09 22:05:15 pl-team Exp $<br>
@


1.8
log
@sync with steelix translation CVS
@
text
@a46 1
<a name="6.0.1"></a>
a79 1
<a name="6.1"></a>
a83 1
<a name="6.1.1"></a>
a321 1
<a name="6.1.2"></a>
a373 1
<a name="6.1.3"></a>
a455 1
<a name= "6.4"></a>
a564 1
<a name="6.5"></a>
a751 1
<a name="6.6"></a>
a815 1
<a name="6.7"></a>
d838 1
a838 1
wykorzystanie <a href="faq13.html">IPsec</a>. W innym przypadku mo¿liwe
a1006 1
<a name="6.9"></a>
d1333 2
a1334 2
Originally [OpenBSD: faq6.html,v 1.175 ]<br>
$Translation: faq6.html,v 1.8 2003/07/20 04:00:39 pl-team Exp $<br>
@


1.7
log
@sync with steelix translation CVS
@
text
@a34 1
<li><a href= "#NAT"   >6.3 - Translacja adresów sieciowych (Network Address Translation)</a>
a38 1
<li><a href= "#DNS"   >6.8 - Us³ugi rozwi±zywania nazw - DNS, BIND i named</a>
d72 1
a72 1
<a href="http://the.rfceditor.org/rfc.html">dokumenty RFC</a>
d124 2
a125 2
lo0: flags=8049<UP,LOOPBACK,RUNNING,MULTICAST> mtu 33224
        inet6 fe80::1%lo0 prefixlen 64 scopeid 0x4
d128 3
a130 3
lo1: flags=8008<LOOPBACK,MULTICAST> mtu 33224
fxp0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 1500
        address: 00:04:ac:dd:39:6a
d133 22
a154 23
        inet 192.168.1.35 netmask 0xffffff00 broadcast 192.168.1.255
        inet6 fe80::204:acff:fedd:396a%fxp0 prefixlen 64 scopeid 0x1
pflog0: flags=0<> mtu 33224
pfsync0: flags=0<> mtu 2020
sl0: flags=c010<POINTOPOINT,LINK2,MULTICAST> mtu 296
sl1: flags=c010<POINTOPOINT,LINK2,MULTICAST> mtu 296
ppp0: flags=8010<POINTOPOINT,MULTICAST> mtu 1500
ppp1: flags=8010<POINTOPOINT,MULTICAST> mtu 1500
tun0: flags=10<POINTOPOINT> mtu 3000
tun1: flags=10<POINTOPOINT> mtu 3000
enc0: flags=0<> mtu 1536
bridge0: flags=0<> mtu 1500
bridge1: flags=0<> mtu 1500
vlan0: flags=0<> mtu 1500
        address: 00:00:00:00:00:00
vlan1: flags=0<> mtu 1500
        address: 00:00:00:00:00:00
gre0: flags=9010<POINTOPOINT,LINK0,MULTICAST> mtu 1450
gif0: flags=8010<POINTOPOINT,MULTICAST> mtu 1280
gif1: flags=8010<POINTOPOINT,MULTICAST> mtu 1280
gif2: flags=8010<POINTOPOINT,MULTICAST> mtu 1280
gif3: flags=8010<POINTOPOINT,MULTICAST> mtu 1280

d417 6
a422 1488
<blockquote><pre>
# <b>cat /etc/hostname.dc0</b>
inet 192.168.0.2 255.255.255.0 media 100baseTX
inet alias 192.168.0.3 255.255.255.255
inet alias 192.168.0.4 255.255.255.255
</pre></blockquote>

<p>
Po wyedytowaniu pliku, jedyne co musisz zrobiæ aby wprowadziæ powy¿sze
zmiany w konfiguracji, to uruchomiæ ponownie komputer. Naturalnie, mo¿esz
tak¿e nadaæ aliasy rêcznie, bez potrzeby restartowania systemu, u¿ywaj±c
narzêdzia <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>.
Do uaktywnienia pierwszego aliasu z powy¿szego przyk³adu powiniene¶
pos³u¿yæ siê komend±:

<blockquote><pre>
# <b>ifconfig dc0 inet alias 192.168.0.3 netmask 255.255.255.255</b>
</pre></blockquote>

<p>
Do wy¶wietlenia aliasów skorzystaj z polecenia:

<blockquote><pre>
$ <b>ifconfig -A</b>
dc0: flags=8863&lt;UP,BROADCAST,NOTRAILERS,RUNNING,SIMPLEX,MULTICAST&gt;
        media: Ethernet manual
        inet 192.168.0.2 netmask 0xffffff00 broadcast 192.168.0.255
        inet 192.168.0.3 netmask 0xffffffff broadcast 192.168.0.3
</pre></blockquote>


<p>
<a name="6.2"></a>
<a name="PF"></a>
<h2>6.2 - Filtr pakietów (Packet Filter - PF)</h2>

<p>
Filtr pakietów jest podsystemem stworzonym do dwóch g³ównych zadañ,
przekazywania pakietów na podstawie okre¶lonych praw i regu³ oraz mapowania
adresów hostów/podsieci na adresy zewnêtrzne. Plikiem konfiguracyjnym dla
wszystkich tych us³ug jest
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.3">/etc/pf.conf(5)</a></i>.
 
 <p>
(Uwaga: w OpenBSD 3.0 i 3.1 istnia³ dodatkowy plik konfiguracyjny,
<i>/etc/nat.conf</i>.
Jego funkcje s± obecnie przeniesione do <i>/etc/pf.conf</i>.)

<p>
Nowy
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5"><i>/etc/pf.conf</i></a>
sk³ada siê z czterech czê¶ci:

<ul>
<li><b>Opcje:</b> Rozmaite opcje okre¶laj±ce w jaki sposób PF ma dzia³aæ.
<li><b>Normalizacja (Scrub):</b> Przetwarzanie przes³anych pakietów w celu
ich normalizacji i dostosowania do standardów.
<li><b><a href="#NAT">Translacja adresów (NAT) i regu³y przekierowuj±ce:</a></b>
NAT pozwala na dostêp do Internetu wielu komputerom, wykorzystuj±c
do tego jeden adres IP. Dziêki przekierowaniom, mo¿na przekazaæ ruch
do innych maszyn znajduj±cych siê za NAT`em.
<li><b>Regu³y filtruj±ce:</b> Zezwalaj± na selektywne filtrowanie lub
blokowanie pakietów pojawiaj±cych siê na którymkolwiek z interfejsów.
</ul>

Nie jest wymagane istnienie ka¿dej z tych sekcji, jednak te, które wystêpuj±,
powinny pojawiæ siê w wymienionej kolejno¶ci.

<p>
Po pierwsze, aby zacz±æ pracowaæ z filtrem pakietów, musisz wyedytowaæ plik
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf&amp;sektion=8">/etc/rc.conf(8)</a></i>
dodaj±c w nim wiersz:

<blockquote><pre>
pf=YES
</pre></blockquote>

<p>
Je¶li zamierzasz korzystaæ z NAT, zapewne zechcesz przy pomocy
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=8">sysctl(8)</a>
ustawiæ warto¶æ <tt>net.inet.ip.forwarding</tt> na 1, aby umo¿liwiæ przekazywanie
pakietów. Mo¿esz zrobiæ to tak¿e poprzez odkomentowanie b±d¼ edytowanie odpowiedniej
linijki w pliku
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl.conf&amp;sektion=5">/etc/sysctl.conf(5)</a></i>
oraz ponowne uruchomienie maszyny.

<p>
Je¶li masz filtr pakietów wkompilowany w j±dro, ale nie jest on jeszcze
uaktywniony w pliku
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf&amp;sektion=8">/etc/rc.conf(8)</a></i>
mo¿esz w³±czyæ go bezpo¶rednio, bez konieczno¶ci ponownego uruchamiania systemu,
dziêki poleceniu
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.3">pfctl(8)</a>.

<blockquote><pre>
# <b>pfctl -f /etc/pf.conf</b>
# <b>pfctl -e</b>
</pre></blockquote>

<p>
Pierwszy z powy¿szych wierszy ustala odpowiednie regu³y filtrowania oraz NAT
na podstawie <i>/etc/pf.conf</i> natomiast kolejny aktywuje Twoj filtr pakietów.

<p>
Mo¿na to zrobiæ zgrabniej w jednej komendzie:

<blockquote><pre>
# <strong>pfctl -f /etc/pf.conf -e</strong>
</pre></blockquote>

<p>
Je¶li dokona³e¶ zmian w <i>/etc/pf.conf</i> po wystartowaniu filtra pakietów,
mo¿esz prze³adowaæ aktualn± konfiguracjê na now± w prosty sposób:

<blockquote><pre>
# <b>pfctl -f /etc/pf.conf</b>
</pre></blockquote>

<p>
Poni¿szy dokument ods³oni kilka podstawowych mo¿liwo¶ci konfiguracji
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.3">pf.conf(5)</a>.
Mo¿esz tak¿e przyj¿eæ siê wynikowemu
<a href="#sample_pf.conf">zestawowi regu³</a> który zawiera wszystkie elementy
konfiguracji poruszane poni¿ej. Dodatkowe informacje na temat filtra pakietów
mo¿esz znale¼æ na jego oficjalnej stronie
<a href="http://www.benzedrine.cx/pf.html">Packet Filter web site</a>
oraz w nastêpuj±cym HOWTO
<a href="http://www.inebriated.demon.nl/pf-howto/">Packet Filter HOWTO</a>.

<p>
<h3>Filtr pakietów (Packet Filter - PF)</h3>

<p>
Jak zosta³o to ju¿ powiedziane powy¿ej, aby uaktywniæ PF przy starcie systemu,
musisz ustawiæ w pliku <i>/etc/rc.conf</i> warto¶æ zmiennej <tt>pf=YES</tt>.
Filtr pakietów kontrolowany jest przez plik konfiguracyjny <i>/etc/pf.conf</i>,
wczytywany przy starcie systemu. Szczegó³owe wyja¶nienia tego tematu znajdziesz
na stronach manuala
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.3">pf.conf(5)</a>.
W poni¿szym przyk³adzie <tt>fxp0</tt> reprezentuje zewnêtrzny interfejs pod³±czony
do internetu. Regu³ki które zaraz zobaczysz zak³adaj± ci±g³e pod³±czenie do
internetu tak jak ma to miejsce w przypadku np. serwera www.

<p>
Regu³y PF przetwarzane s± sekwencyjnie z góry w kierunku do³u, pomaga
to w wizualizacji faktu ¿e ka¿dy pakiet przechodzi przez kolejne regu³ki
zanim osi±gnie swój cel.

<p>
Dla przyk³adu, domy¶lny zestaw regu³ zezwala wszystkim pakietom na zarówno
opuszczanie systemu jak i przybywanie do niego:

<blockquote><pre>
pass out all
pass in all
</pre></blockquote>

<p>
Jest to skrót dla:

<blockquote><pre>
pass in from any to any
pass out from any to any
</pre></blockquote>

<p>
co mo¿emy odczytaæ jako &quot;przepu¶æ wszystkie przychodz±ce pakiety
pochodz±ce z jakiegokolwiek ¼ród³a i zmierzaj±ce do jakiegokolwiek celu&quot;,
dodatkowo zak³adane jest &quot;przez jakikolwiek interfejs (co zak³adane jest
zawsze gdy nie wyszczególnimy interfejsu jawnie) dla jakiejkolwiek rodziny
adresów
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inet&amp;sektion=4">inet (v4)</a> lub <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inet6&amp;sektion=4">inet6 (v6)</a>&quot;.

<p>
Naturalnie w takiej konfiguracji nie jest to ¿aden filtr :-). Bardziej u¿yteczne
regu³y bazuj± na rodzinie adresów (IPv4, IPv6), protokole oraz numerze
portu us³ugi któr± zamierzasz filtrowaæ. Do tworzenia regu³ wykorzystaæ
mo¿esz ka¿dy z protoko³ów znajduj±cych siê w
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=protocols&amp;sektion=5">/etc/protocols(5)</a></i>
wyra¿aj±c go jako nazwê b±d¼ numer. W tej chwili skoncentrujemy siê na
najpopularniejszych protoko³ach
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tcp&amp;sektion=4">tcp(4)</a>,
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=udp&amp;sektion=4">udp(4)</a> oraz
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=icmp&amp;sektion=4">icmp(4)</a>.

<p>
Do dzie³a, powiedzmy, ¿e nie chcemy zezwalaæ na ¿adne po³±czenia IPv4 do
portu 3306 warstwy TCP (MySQL), poniewa¿ baza danych powinna byæ
dostêpna tylko z lokalnego hosta. Nasz zbiór regu³ek powinien wygl±daæ
nastêpuj±co:

<blockquote><pre>
pass out all
pass in all
block in on fxp0 inet proto tcp from any to any port 3306
</pre></blockquote>

<p>
Co oznacza &quot;zablokuj wszystkie przychodz±ce pakiety IPv4 pochodz±ce
z jakiegokolwiek ¼ród³a przeznaczone do jakiegokolwiek celu na port TCP 3306&quot;.
Zauwa¿, ¿e w przypadku gdy regu³a filtruj±ca opiera siê na porównaniu
numeru portu, musisz jawnie sprecyzowaæ jakiego protoko³u warstwy transportowej
ma dotyczyæ, a tak¿e zaleca siê podanie rodziny adresów.
Dla us³ug zdefiniowanych w pliku
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=services&amp;sektion=5">/etc/services(5)</a>
mo¿esz stosowaæ ich nazwy symboliczne zamiast numerów portów, jak dla przyk³adu
<em>www</em> lub <em>mysql</em>.

Pakiet adresowany do portu 3306 wchodz±cy poprzez interfejs <tt>fxp0</tt>
po przej¶ciu przez pierwsz± regu³kê &quot;pass in&quot; zostanie oznaczony jako
pakiet do przepuszczenia, natomiast regu³ka &quot;block in port 3306&quot; spowoduje
zaznaczenie pakietu jako przeznaczonego do odrzucenia. Je¶li odwrócisz kolejno¶æ
tych regu³:

<blockquote><pre>
pass out all
block in on fxp0 inet proto tcp from any to any port 3306
pass in all
</pre></blockquote>

<p>
wtedy pakiet przeznaczony do portu 3306 TCP zostanie przepuszczony, poniewa¿
ostatnia regu³ka do której pakiet pasuje pozwala mu przej¶æ. Bardzo wa¿ene
jest aby¶ przy tworzeniu swojego filtra pamiêta³ o zasadzie:
<b>Ostatnia pasuj±ca regu³ka decyduje</b>.

<p>
Oczywi¶cie od ka¿dej zasady s± wyj±tki. S³owo kluczowe <em>quick</em>
pozwala na wykonanie danej akcji na pakiecie natychmiast po napotkaniu
regu³ki do której pasuje. Spójrzmy na zmodyfikowany powy¿szy przyk³ad,
co stanie siê gdy dodamy <em>quick</em> do regu³y &quot;block in&quot;:

<blockquote><pre>
pass out all
block in quick on fxp0 inet proto tcp from any to any port 3306
pass in all
</pre></blockquote>

<p>
Pakiet przeznaczony do portu 3306 TCP bêdzie pasowa³ do regu³ki
&quot;block in quick&quot; i dziêki temu s³owu kluczowemu zostanie
natychmiast odrzucony. Wszystkie pakiety przeznaczone do innych
portów lub protoko³ów bêd± dalej przetwarzane dopóki nie dotr± do
regu³ki &quot;pass in&quot;, do której bêd± pasowaæ i która zezwoli
im na przej¶cie.

<p>
<b>Domy¶lne odrzucanie pakietów.</b>
<p>
Najbezpieczniejsza polityka filtrowania powinna mówiæ o domy¶lnym
odrzucaniu pakietów, zgodnie z zasad± mówi±c±, ¿e ka¿dy ruch, który nie jest
dozwolony jest zabroniony. Taka polityka jest znacznie bezpieczniejsza
ni¿ polegaj±ca na kolejnym zabranianiu dostêpu do kolejnych strze¿onych us³ug,
powoduje znaczne zmniejszenie liczby regu³ek oraz chroni przed przypadkowo
opuszczonymi konfiguracjami regu³ek dla us³ug staj±cych siê w ten sposób
dostêpnymi bez ograniczeñ.

<p>
Spójrzmy na kolejny przyk³adowy zestaw regu³ek oraz spróbujmy go wyja¶niæ
wiersz po wierszu. Mamy tutaj przypadek serwera www z domy¶ln± polityk±
odrzucania pakietów, zezwala siê jedynie na po³±czenia ssh (dla administracji)
oraz po³±czenia http (port 80) i https (port 443).

<blockquote><pre>
block in on fxp0 all
pass  in on fxp0 inet proto tcp from any to any port 22
pass  in on fxp0 inet proto tcp from any to any port 80
pass  in on fxp0 inet proto tcp from any to any port 443
pass out on fxp0 all
</pre></blockquote>

<p>
Powy¿sze regu³ki przepuszczaj± ruch przychodz±cy z jakiegokolwiek
¼ród³a do portów 22 (ssh), 80 (http) oraz 443 (https) warstwy TCP.
Wszystkie inne próby po³±czeñ przychodz±cych zostan± odrzucone,
natomiast przepuszczamy ca³y ruch wychodz±cy.
To ca³kiem szczelny zestaw regu³ek, ale co w przypadku gdy chcemy
zezwoliæ na po³±czenie ssh tylko z hostów sieci wewnêtrznej o adresie
1.1.1.0, natomiast ruch http i https powinien byæ dostêpny z ka¿dego
miejsca? Oto rozwi±zanie:

<blockquote><pre>
block in on fxp0 all
pass  in on fxp0 inet proto tcp from 1.1.1.0/24 to any port 22
pass  in on fxp0 inet proto tcp from any to any port 80
pass  in on fxp0 inet proto tcp from any to any port 443
pass out on fxp0 all
</pre></blockquote>

<p>
Ca³kiem nie¼le, a jak wygl±da³yby regu³ki, gdyby¶my chcieli zezwoliæ
tylko jednemu komputerowi (o adresie 1.1.1.1) na zdalne administrowanie
systemem? W takim przypadku zmienimy regu³kê:

<blockquote><pre>
pass  in on fxp0 inet proto tcp from 1.1.1.0/24 to any port 22
</pre></blockquote>

<p>
na nastêpuj±c±:

<blockquote><pre>
pass  in on fxp0 inet proto tcp from 1.1.1.1/32 to any port 22
</pre></blockquote>

<p>
<b>Przyk³adowe regu³ki</b>
<p>
Poni¿ej znajdziesz kilka dobrych dla ka¿dego regu³ek (oczywi¶cie zak³adaj±c
¿e interfejs fxp0 jest pod³±czony do sieci zewnêtrznej np. internetu). Po
pierwsze zapewnimy prost± ochronê przed podszywaniem siê pod adresy IP (spoofing).
Poni¿sze adresy niepowinny (normalnie) pojawiaæ siê w Internecie, wiêc je¶li
nasz filtr pakietów je zobaczy, naka¿emu mu aby odrzuca³ po³±czenia z tych
adresów.

<blockquote><pre>
block in quick on fxp0 inet from { 127.0.0.0/8, 192.168.0.0/16, \
172.16.0.0/12, 10.0.0.0/8 } to any
block out quick on fxp0 inet from any to { 127.0.0.0/8, 192.168.0.0/16, \
172.16.0.0/12, 10.0.0.0/8 }
</pre></blockquote>

<p>
Teraz nasz zestaw zaczyna wygl±daæ porz±dniej, gdy zbierzemy wszystko w ca³o¶æ
bêdzie to wygl±daæ nastêpuj±co:

<blockquote><pre>
# nie zezwalaj na podszywanie siê pod nieprawid³owe dla Internetu adresy
block in quick on fxp0 inet from { 127.0.0.0/8, 192.168.0.0/16, \
172.16.0.0/12, 10.0.0.0/8 } to any
block out quick on fxp0 inet from any to { 127.0.0.0/8, 192.168.0.0/16, \
172.16.0.0/12, 10.0.0.0/8 }

# zezwalaj na po³±czenia ssh tylko z komputera administratora
pass in quick on fxp0 inet proto tcp from 1.1.1.1/32 to any port 22

# oraz wszystkim na po³±czenia http i https
pass in quick on fxp0 inet proto tcp from any to any port 80
pass in quick on fxp0 inet proto tcp from any to any port 443

# domy¶ln± akcj± dla wszystkich innych po³±czeñ przychodz±cych jest ich odrzucenie
block in quick on fxp0 from any to any

# natomiast zezwalamy na wszystkie po³±czenia wychodz±ce
pass out on fxp0 from any to any
</pre></blockquote>

<p>
<b>Logowanie pakietów</b>
<p>
Jest nie¼le, ale mog³oby byæ jeszcze lepiej. Co zrobiæ aby wszystkie nieudane
próby po³±czenia z portem 22 (ssh) zosta³y zalogowane? S³u¿y do tego s³owo
kluczowe <em>log</em>:

<blockquote><pre>
pass in quick on fxp0 inet proto tcp from 1.1.1.1/32 to any port 22
block in log quick on fxp0 inet proto tcp from any to any port 22
</pre></blockquote>

<p>
Pierwsza regu³ka zezwoli na po³±czenie z komputera administratora pod port 22,
druga odrzuci i zaloguje wszystkie inne próby po³±czeñ.

<p>
Logowane pakiety przesy³ane s± do interfejsu pflog0, który monitorowany jest
przez
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pflogd&amp;sektion=8&amp;manpath=OpenBSD+3.3">pflogd(8)</a>,
zwykle loguj±cy pakiety do <i>/var/log/pflog</i> w binarnym formacie
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tcpdump&amp;sektion=8&amp;manpath=OpenBSD+3.3">tcpdump(8)</a>
pflogd(8) uruchamiany jest domy¶lnie przez
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc&amp;sektion=8">/etc/rc(8)</a></i>
je¶li pf jest w³±czony w
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf&amp;sektion=8">/etc/rc.conf(8)</a></i>.
Pliki z logami mo¿esz przeczytaæ korzystaj±c z poni¿szej komendy:

<blockquote><pre>
# <b>tcpdump -n -e -ttt -r /var/log/pflog</b>
</pre></blockquote>

<p>
Jedna przestroga - u¿ywaj±c tcpdump`a do przegl±dania plików pflog
pamiêtaj ¿e NIE S¡ one wy¶wietlane w czasie rzeczywistym (mechanizm buforowania).
Je¶li oczekujesz pracy w czasie rzeczywistym musisz skorzystaæ z tego
polecenia:

<blockquote><pre>
# <b>tcpdump -i pflog0</b>
</pre></blockquote>

<p>
Mo¿esz tak¿e skorzystaæ ze sk³adni tcpdump`a dla zawê¿enia wy¶wietlanych
wyników aby zwiêkszyæ ich czytelno¶æ:

<blockquote><pre>
# <b>tcpdump -e -i pflog0 port 80</b>
</pre></blockquote>

<p>
Takie dzia³anie NIE wp³ywa na to, co zostanie zapisane w pliku
<i>/var/log/pflog</i>.

<p>
Podczas analizowania logów, uwagê nale¿y zwracaæ na szczegó³owe dekodowanie
protoko³ów przez tcpdump (tryb verbose aktywowany opcj± -v). Dekoder
tcpdump`a nie ma zbyt chwalebnej przesz³o¶ci je¶li chodzi o bezpieczeñstwo.
Przynajmniej teoretycznie mo¿liwe jest przeprowadzenie opó¼nionego ataku
poprzez wysy³anie pakietów maj±cych zostaæ zalogowanymi.

<p>
Dodatkowa uwaga powinna byæ zwrócona na dostêp do tych logów. Pflogd przechwytuje
96 bajtów pakietu i loguje je. Dostêp do takich zalogowanych informacji
mo¿e umo¿liwiæ niepowo³anym osobom dostêp do maszyny poprzez analizê
protoko³ów oraz logowañ poprzez
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=telnet&amp;sektion=1">telnet(1)</a> lub
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a>).

<p>
<b>Logowanie pakietów przez syslog</b>
<p>
W wielu przypadkach dobrze jest mieæ logi naszej ¶ciany ogniowej
w formacie ASCII i/lub przes³aæ je do serwera loguj±cego. Zadania te mog±
byæ za³atwione przez 2 proste skrypty pow³oki z minimalnymi zmianami
w plikach konfiguracyjnych OpenBSD.

<p>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=syslogd&amp;sektion=8&amp;manpath=OpenBSD+3.3">Syslogd(8)</a>
jest standardowym demonem odpowiedzialnym za logowanie, przechowuje pliki
z logami w formacie ASCII oraz umo¿liwia wysy³anie ich do zdalnego serwera.

<p>
Pierwsze co musimy zrobiæ to utworzenie u¿ytkownika <em>pflogger</em> bez
dostêpu do pow³oki (.nologin. shell). Najpro¶ciej zrobiæ to poleceniem
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8&amp;manpath=OpenBSD+3.3">adduser(8)</a>.

<p>
Po dodaniu u¿ytkownika <em>pflogger</em> nale¿y stworzyæ dwa nastêpuj±ce skrypty:

<p>
<i>/etc/pflogrotate</i>

<blockquote><pre>
FILE=/home/pflogger/pflog5min.$(date "+%Y%m%d%H%M")
kill -ALRM $(cat /var/run/pflogd.pid)
if [ $(ls -l /var/log/pflog | cut -d " " -f 8) -gt 24 ]; then
        mv /var/log/pflog $FILE
        chown pflogger $FILE
        kill -HUP $(cat /var/run/pflogd.pid)
fi
</pre></blockquote>


<p>
<i>/home/pflogger/pfl2sysl</i>

<blockquote><pre>
#!/bin/sh
# feed rotated pflog file(s) to syslog
for logfile in /home/pflogger/pflog5min* ; do
        tcpdump -n -e -ttt -r $logfile | logger -t pf -p local0.info
        rm $logfile
done
</pre></blockquote>

<p>
Wyedytowaæ crontab u¿ytkownika <em>root</em>

<blockquote><pre>
# <b>crontab -u root -e</b>
</pre></blockquote>

<p>
poprzez dodanie dwóch poni¿szych linii:

<blockquote><pre>
# rotate pf log file every 5 minutes
0-59/5 *       *       *       *       /bin/sh /etc/pflogrotate
</pre></blockquote>

<p>
Nastêpnym krokiem jest stworzenie crontab`a dla u¿ytkownika <em>pflogger</em>

<blockquote><pre>
# <b>crontab -u pflogger -e</b>
</pre></blockquote>

<p>
oraz dodanie do niego linii:

<blockquote><pre>
# feed rotated pflog file(s) to syslog
0-59/5 *       *       *       *       /bin/sh /home/pflogger/pfl2sysl
</pre></blockquote>

<p>
Teraz dodaj do pliku <i>/etc/syslog.conf</i> wiersz:

<blockquote><pre>
local0.info    /var/log/pflog.txt
</pre></blockquote>

<p>
Je¶li chcesz przechowywaæ logi na zdalnym serwerze, dodaj równie¿ poni¿sz±
linijkê:

<blockquote><pre>
local0.info    @@syslogger
</pre></blockquote>

<p>
i upewnij siê ¿e host <i>syslogger</i> jest zdefiniowany w pliku
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hosts&amp;sektion=5&amp;manpath=OpenBSD+3.3">
/etc/hosts(5)</a>.

<p>
Teraz wszystkie zalogowane pakiety przes³ane zostaj± do <i>/var/log/pflog.txt</i>.
Je¶li doda³e¶ te¿ informacje o zdalnym logowaniu na ho¶cie <i>syslogger</i> to
syslogd wykona równie¿ i to zadanie.

<p>
<i>/etc/pflogrotate</i> przetwarza i kasuje <i>/var/log/pflog</i>
wiêc rotacja <i>pflog</i> przez
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=newsyslog&amp;sektion=8&amp;manpath=OpenBSD+3.3">
newsyslogd(8)</a> nie jest nam d³u¿ej potrzebne i mo¿e zostaæ wy³±czona.
Jednak¿e <i>/var/log/pflog.txt</i> zastêpuje <i>/var/log/pflog</i> i jego rotacja
powinna byæ aktywna.
Zmieñ <i>/etc/newsyslog.conf</i> jak poni¿ej:

<blockquote><pre>
#/var/log/pflog        600     3       250     *       ZB      /var/run/pflogd.pid
/var/log/pflog.txt     600     7       *       24
</pre></blockquote>

<p>
W tej chwili PF bêdzie zostawiaæ logi w formacie ASCII w pliku /var/log/pflog.txt
oraz na zdalnym serwerze je¶li jest takie zadanie w pliku  <em>/etc/syslog.conf</em>.
Logowanie nie jest natychmiastowe, mo¿e up³yn±æ ok. 5 - 6 minut (interwa³ cron`a)
zanim zalogowane pakiety zaczn± pojawiaæ siê w pliku.

<p>
<b>Ró¿ne protoko³y</b>
<p>
W jaki sposób zezwoliæ na ustanawianie po³±czeñ do us³ug wykorzystuj±cych
wiele protoko³ów, jak dla przyk³adu bind, który korzysta zarówno z TCP
jak i UDP? Filtr pakietów zezwala na ³±czenie ze sob± parametrów w zbiory
(wiêcej na ten temat znajdziesz dalej):

<blockquote><pre>
# przepu¶æ zapytania DNS dla BIND`a
pass in quick on fxp0 inet proto { tcp, udp } from any to any port 53
</pre></blockquote>

<p>
Zwróæ uwagê na spacje po obu stronach '{ }'. To elegantszy sposób
zapisu ni¿ alternatywny którego móg³by¶ u¿yæ:

<blockquote><pre>
pass in quick on fxp0 inet proto tcp from any to any port 53
pass in quick on fxp0 inet proto udp from any to any port 53
</pre></blockquote>

<p>
<a name="normalization"></a>
<b> Normalizacja Pakietów</b>
<p>
Normalizacja pakietów oznacza ponowne przetwarzanie nag³ówków pakietów
pofragmentowanych oraz usuwanie nieprawid³owo¶ci z opcji IP. Niektóre systemy
operacyjne maj± problemy z niew³a¶ciwie pofragmentowanymi pakietami i
generalnie jest to dobry pomys³, aby mieæ znormalizowane pakiety przed
przetwarzaniem ich przez regu³ki filtruj±ce oraz przed przes³aniem
ich do hostów docelowych.
Do normalizacji s³u¿y s³ówko kluczowe <b>scrub</b> u¿ywane tak, jak poni¿ej:

<blockquote><pre>
scrub in all
</pre></blockquote>

<p>
Powoduje to niewielkie zwiêkszenie wykorzystania zasobów systemowych oraz
wymaga wiêcej pamiêci aby móc buforowaæ pofragmentowane pakiety. Zaleca
siê stosowanie normalizacji, poniewa¿ zazwyczj jej warto¶æ jest zwykle
wiêksza ni¿ koszty które siê za ni± p³aci.

<p>
<b>Opcje IP</b>
<p>
Domy¶lnie PF blokuje pakiety z ustawionymi opcjami IP. Dziêki temu mo¿na
utrudniæ, przeznaczonym do tego programom takim jak nmap, wykrywanie systemu
operacyjnego na zdalnym ho¶cie (&quot;OS fingerprinting&quot;).
Je¶li korzystasz z programów wymagaj±cych takich pakietów do poprawnej pracy,
np. wykorzystuj±cych multicasting lub IGMP, mo¿esz u¿yæ dyrektywy
<b>allow-opts</b>:

<blockquote><pre>
pass in quick on fxp0 all allow-opts
</pre></blockquote>

<p>
<b>Flagi TCP, po³±czenia nawi±zane oraz utrzymywanie stanu</b>
<p>
Filtr pakietów potrafi tak¿e analizowaæ flagi TCP oraz specjalnie
obs³ugiwaæ nawi±zane po³±czenia oraz stan po³±czeñ. Zalecane jest,
aby u¿ytkownicy, którzy zamierzaj± filtrowaæ pakiety na podstawie
flag TCP rozumieli jak± odgrywaja one rolê. Dla przyk³adu, je¶li
chcia³by¶ zablokowaæ pakiety z ustawionymi flagami FIN, URG i PSH
(np. aby utrudniæ wykrycie systemu operacyjnego takim narzêdziom
jak nmap) mo¿esz u¿yæ poni¿szej regu³ki:

<blockquote><pre>
block in quick on fxp0 inet proto tcp from any to any flags FUP/FUP
</pre></blockquote>

<p>
(Dziêki <a href="mailto:halogen@@nol.net">Kyle Hargraves</a> za podpowied¼)

<p>
Nastêpn± interesuj±c± mo¿liwo¶ci± udostêpnian± przez PF jest umiejêtno¶æ
utrzymywania stanu po³±czeñ. Dziêki temu, je¶li dane po³±czenie
przejdzie przez fazê inicjalizacyjn± i zostanie ustanowione,
pakiety nale¿±ce do tego po³±czenia nie bêd± ju¿ przechodziæ
przez regu³y filtruj±ce. To potê¿ny mechanizm znacznie upraszczaj±cy
tworzenie skutecznej i bezpiecznej zapory ogniowej.

<p>
Spójrzmy na przyk³ad który obrazuje jak PF akceptuje nawi±zane
po³±czenia na podstawie rozpoznanego stanu. W przyk³adzie
zezwalamy na dostêp do ssh (port 22) z naszej sieci klasy C
oraz dostêp zarówno z zewn±trz jak i od wewn±trz do portu 80 (http)
oraz 443 (https). Ka¿dy inny ruch zostaje zablokowany. Zastanówmy
siê co nale¿a³oby zrobiæ w przypadku gdybym chcia³ dla przyk³adu
skorzystaæ z
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>
i nawi±zaæ po³±czenie na zewn±trz z naszego sewrera www, lub
przegl±darki
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lynx&amp;sektion=1">lynx(1)</a>
aby poszukaæ czego¶ w FAQ? W powy¿szych przyk³adach by³oby to niemo¿liwe,
poniewa¿ zablokowali¶my wszystkie pakiety przychodz±ce z zewn±trz
za wyj±tkiem tych które przeznaczone s± do wyszczególnionych przez
nas portów naszych serwerów. Skorzystamy z najbezpieczniejszej
metody rozwi±zania naszego problemu. Poprzez dodanie s³ów kluczowych
<em>keep state</em> do regu³ki &quot;pass out&quot;, automatycznie
zezwolimy na wej¶cie pakietom przychodz±cym w odpowiedzi na po³±czenia,
które zainicjowali¶my, jak dla przyk³adu, gdy korzystamy z przegl±darki
stron www. Pamiêtaj, do utrzymywania stanu musisz wyspecyfikowaæ
protokó³ którego regu³ka ma dotyczyæ.

<blockquote><pre>
block in  on fxp0 inet proto tcp all
pass  in  on fxp0 inet proto tcp from 1.1.1.0/24 to any port 22 keep state
pass  in  on fxp0 inet proto tcp from any to any port 80 keep state
pass  in  on fxp0 inet proto tcp from any to any port 443 keep state
pass  out on fxp0 inet proto tcp all keep state
</pre></blockquote>

<p>
Ta ma³a zmiana znacznie zwiêkszy elastyczno¶æ oraz bezpieczeñstwo
naszego zestawu regu³ek: dla wyja¶nienia, w powy¿szych regu³kach
zezwalamy na ruch TCP do portu 80 i 443. Mo¿emy zaostrzyæ
regu³ki odpowiadaj±ce za to nawet bardziej. Aby po³±czenie TCP
zosta³o poprawnie zainicjowane, musimy zezwoliæ tylko na przej¶cie
pierwszego pakietu rozpoczynaj±cego trójfazowe ustanawianie
po³±czenia; nastêpnie mo¿emy zablokowaæ inny ruch przeznaczony do tego
portu oraz zezwoliæ naszej regu³ce utrzymuj±cej stan (&quot;keep state
&quot;) aby opiekowa³a siê pakietami nale¿acymi do tego ustanawiaj±cego
sie po³±czenia. Aby umo¿liwiæ poprawne nawi±zanie po³±czenia TCP
mo¿emy przepuszczaæ jedynie pakiety z ustawion± flag± SYN oraz
wyzerowana flag± ACK. Przez przepuszczanie tylko tych pakietów,
zabezpieczymy siê przed ró¿nymi formami skanowania portów jak np.
skanowanie pakietami z flag± FIN (FIN scanning). Flagi S/SA oznaczaj±:
z flag S (SYN) i A (ACK) tylko SYN musi byæ ustawiona. Inne nie s± brane
pod uwagê. Nasze regu³ki wygl±daj± teraz jak poni¿ej:

<blockquote><pre>
block in  on fxp0 inet proto tcp all
pass  in  on fxp0 inet proto tcp from 1.1.1.0/24 to any port 22 \
	flags S/SA keep state
pass  in  on fxp0 inet proto tcp from any to any port 80 \
	flags S/SA keep state
pass  in  on fxp0 inet proto tcp from any to any port 443 \
	flags S/SA keep state
block out on fxp0 inet proto tcp all
pass  out on fxp0 inet proto tcp all flags S/SA keep state
</pre></blockquote>

<p>
Spróbujmy teraz po³±czyæ wszystkie nasze dotychczasowe regu³ki
w jeden zestaw. Jest on przeznaczony dla protoko³u IPv4, ma domy¶ln±
polityke odrzucania pakietów, zezwala na po³±czenia ssh tylko
z sieci wewnêtrznej oraz na nawi±zywanie po³±czeñ zarówno
z zewn±trz jak i z wewn±trz do portów 80 (http) i 443 (https).
Nasz zestaw zapewnia tak¿e ochronê przed podszywaniem siê pod
nierutowalne adresy IP oraz odk³ada pakiety, które s± zbyt pofragmentowane
aby je przetwarzaæ. Oto jak móg³by wygl±daæ <i>/etc/pf.conf</i>:

<blockquote><pre>
# Wyczy¶æ oraz znormalizuj pofragmentowane i niestandardowe pakiety
scrub in all

# nie zezwalaj na podszywanie siê pod nierutowalne adresy
block in quick on fxp0 inet from { 127.0.0.0/8, 192.168.0.0/16, \
172.16.0.0/12, 10.0.0.0/8 } to any
block out quick on fxp0 inet from any to { 127.0.0.0/8, 192.168.0.0/16, \
172.16.0.0/12, 10.0.0.0/8 }


# domy¶lnie blokujemy wszystkie przychodz±ce pakiety za wyj±tkiem
# tych na które jawnie zezwalamy w naszych regu³kach
block in on fxp0 all

# zezwalamy wszystkim na ustanawianie po³±czeñ http i https
pass in on fxp0 inet proto tcp from any to any port 80 \
	flags S/SA keep state
pass in on fxp0 inet proto tcp from any to any port 443 \
	flags S/SA keep state

# oraz zezwalamy pakietom na opuszczanie naszej maszyny, jednocze¶nie
# przechowuj±c informacje o stanie po³±czeñ protoko³ów TCP, UDP i ICMP
# tak aby pakiety nale¿±ce do inicjowanego przez nas po³±czenia by³y
# automagicznie akceptowane - np odpowiedzi na nasze zapytania DNS
# przesy³ane protoko³em UDP
block out on fxp0                 all
pass  out on fxp0 inet proto tcp  all flags S/SA keep state
pass  out on fxp0 inet proto udp  all            keep state
pass  out on fxp0 inet proto icmp all            keep state
</pre></blockquote>

<p>
Teraz nasz <i>pf.conf</i> wygl±da ca³kiem przyzwoicie, ale mo¿emy
zrobiæ kilka rzeczy aby ³atwiej by³o wprowadzaæ zmiany i zarz±dzaæ
naszym PF w przysz³o¶ci.

<p>
<b>Zbiory</b>
<p>
Dziêki zbiorom, tworzenie regu³ek jest prostsze i przejrzystsze.
Dla przyk³adu, chcemy zaakceptowaæ ruch przeznaczony do us³ugi
pracuj±cej w kilku protoko³ach, jak BIND korzystaj±cy z TCP i UDP,
oto przyk³ad rozwi±zania:

<blockquote><pre>
pass in quick on fxp0 inet proto { tcp, udp } from any to any port 53
</pre></blockquote>

<p>
Zauwa¿ spacje które znajduj± siê po obu stronach '{ }'.

<p>
Grupy adresów IP mog± byæ ³±czone razem w zestawy, które mog± byæ
u¿yte wszêdzie tam, gdzie mog³y byæ u¿yte pojedyncze adresy IP.
Przeanalizuj nastêpuj±cy przyk³ad:

<blockquote><pre>
# zablokuj mo¿liwo¶æ podszywania siê pod nierutowalne adresy
block in quick on fxp0 inet from { 127.0.0.0/8, 192.168.0.0/16, \
172.16.0.0/12, 10.0.0.0/8 } to any
block out quick on fxp0 inet from any to { 127.0.0.0/8, 192.168.0.0/16, \
172.16.0.0/12, 10.0.0.0/8 }
</pre></blockquote>

<p>
<b>Zmienne</b>
<p>
Problemem w powy¿szym pliku <i>pf.conf</i> jest to, ¿e gdyby¶ zechcia³
zmieniæ swój interfejs sieciowy lub jeden z adresówm IP, musia³by¶
wprowadziæ te zemiany we wszystkich linijkach, w których wystêpuj±
zmieniane przez Ciebie warto¶ci. W takich przypadkach porêczniej jest
skorzystaæ ze zmiennych:

<blockquote><pre>
NoRouteIPs="{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8 }"
ExtIF="fxp0"
block in quick on $ExtIF from $NoRouteIPs to any
block out quick on $ExtIF from any to $NoRouteIPs
</pre></blockquote>

<p>
<a name="sample_pf.conf"></a>
<b>Sk³adamy wszystko w ca³o¶æ</b>
<p>
Spróbujmy po³±czyæ wszystkie nasze dotychczasowe regu³ki i omawiane
rozwi±zania w jeden plik:

<blockquote><pre>
# definicje u¿ywanych zmiennych
ExtIF="fxp0"              # interfejs zewnêtrzny
IntNet="1.1.1.0/24"       # nasza sieæ wewnêtrzna
NoRouteIPs="{ 127.0.0.0/8, 192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8 }"
Services="{ www, https }"

# porz±dkowanie pofragmentowanych i niestandardowych pakietów
scrub in all

# zabezpieczenie przed próbami podszywania siê pod nierutowalne adresy
block in  quick on $ExtIF from $NoRouteIPs to any
block out quick on $ExtIF from any to $NoRouteIPs

# domy¶lnie wszystke wej¶ciowe pakiety s± blokowane za wyj±tkiem
# tych którym pozwolimy na przej¶cie poni¿ej
block in on $ExtIF all

# zezwalamy na korzystanie z http i https
pass  in on $ExtIF inet proto tcp from any to any port $Services \
	flags S/SA keep state

# oraz wypuszczamy na zewn±trz ruch utrzymuj±c stan nawi±zanych po³±czeñ
# wypuszczamy wszystkie protoko³y, TCP, UDP i ICMP, zapamiêtujemy tak¿e
# stan po³±czeñ tak, ¿e zewnêtrzny serwer DNS mo¿e odpowiedzieæ na nasze
# zapytanie (protokó³ UDP)
block out on $ExtIF                 all
pass  out on $ExtIF inet proto tcp  all flags S/SA keep state
pass  out on $ExtIF inet proto udp  all            keep state
pass  out on $ExtIF inet proto icmp all            keep state
</pre></blockquote>

<p>
Je¶li zauwa¿asz jakie¶ problemy, mo¿esz zechcieæ logowaæ pakiety
pasuj±ce do wybranych regu³ek:

<blockquote><pre>
pass in log quick on fxp0 proto tcp from 1.1.1.0/24 to any port 22
</pre></blockquote>

<p>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pflogd&amp;sektion=8&amp;manpath=OpenBSD+3.3">pflogd(8)</a> zaloguje pakiety do <i>/var/log/pflog</i>.
Pamiêtaj ¿e <i>/var/log/pflog</i> jest plikiem binarnym i mo¿e byæ czytany przez <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tcpdump&amp;sektion=8&amp;manpath=OpenBSD+3.3">tcpdump(8)</a>.

<p>
Je¶li zmieniasz co¶ w swojej konfiguracji PF nie zapomnij skorzystaæ z
<b>pfctl -R /etc/pf.conf</b> aby PF wiedzia³ o poczynionych przez Ciebie
modyfikacjach.

<a name="6.3"></a>
<a name="NAT"></a>
<h2>6.3 - NAT</h2>

<p>
<h4>Uwaga: W OpenBSD 3.2 i pó¼niejszych, regu³ki dotycz±ce NAT przechowywane
s± w pliku <i>/etc/pf.conf</i>, a nie oddzielnym <i>/etc/nat.conf</i>
jak OpenBSD 3.0 i 3.1</h4>

<p>
<a name="nat1.0"></a>
<h3><u>6.3.1 Wprowadzenie do NAT</u></h3>

<a name="nat1.1"></a>

<p>
Na podstawie
<a href="http://www.geektools.com/rfc/rfc1631.txt">RFC 1631</a>,
NAT umo¿liwia ³atwe mapowanie wewnêtrznych sieci do pojedynczego
rutowalnego ("rzeczywistego") adresu internetowego. To bardzo
u¿yteczne w przypadku, gdy nie masz oficjalnie przyznanego adresu IP
dla ka¿dego z hostów znajduj±ych siê w Twojej wewnêtrznej sieci.
Gdy konfigurujesz swoj± wewnêtrzn± sieæ mo¿esz skorzystaæ do tego z
zarezerwowanych bloków adresów (opis w
<a href="http://www.geektools.com/rfc/rfc1918.txt">RFC 1918</a>),
jak np.:

<p>
10.0.0.0/8 (10.0.0.0 - 10.255.255.255)<br>
172.16.0.0/12 (172.16.0.0 - 172.31.255.255)<br>
192.168.0.0/16 (192.168.0.0 - 192.168.255.255)

<p>
Zak³adamy, ¿e posiadasz zainstalowane i skonfigurowane OpenBSD
na komputerze z dwoma kartami sieciowymi, z których jedna pod³±czona
jest do Internetu, a druga do sieci wewnêtrznej.

<p>
<a name="nat1.3"></a>
<b>Konfiguracja</b>

<p>
Je¶li Twój system jest skonfigurowany jak opisane to zosta³o powy¿ej,
mo¿emy zabraæ siê do roboty. Gdy Twoja konfiguracja ró¿ni siê od
powy¿szej b±d¼ ostro¿ny wprowadzaj±c swoje zmiany,
aby system zachowywa³ siê tak jak tego oczekujesz.

<blockquote>
<b>Urz±dzenia sieciowe: </b>
<pre>
Intel EtherExpress Pro/100 <b>fxp0</b>
pod³±czona do zewnêtrznej sieci LAN (lub WAN)
<b>Adres IP: </b>24.5.0.5
<b>Maska sieciowa: </b>255.255.255.0

Compaq Netelligent 10/100Mb <b>tl0</b>
pod³±czona do sieci wewnêtrznej
<b>Adres IP: </b>192.168.1.1
<b>Maska sieciowa: </b>255.255.255.0
</pre>
</blockquote>

<blockquote>
<b>Konfiguracja dostêpu do Internetu (dostarczona przez Twojego dostawcê
Internetu, w tym przypadku urz±dzeniem dostêpowym jest  modem kablowy)<br></b>
<pre>
<b>Adres IP: </b>24.5.0.5
<b>Maska sieciowa: </b>255.255.255.0
<b>Bramka: </b>24.5.0.1
</pre>
</blockquote>

<blockquote>
<b>Sieæ lokalna (LAN)</b><br>
W tym przyk³adowym ¶rodowisku, komputery w sieci wewnêtrznej korzystaj±
z adresów IP w postaci 192.168.1.xxx (gdzie xxx to unikatowy numer).
W sieci mog± znajdowaæ siê rozmaite systemy operacyjne, jak Windows 98,
Windows NT, OpenBSD, Linux, jednak rodzaj systemu operacyjnego klientów
nie wp³ywa na dzia³anie NAT. Dla przyk³adu, klient w sieci wewnêtrznej
mo¿e mieæ przypisany adres 192.168.1.40.
</blockquote>

<blockquote>
<b>Diagram of Configuration</b>
<pre>
+-----+              +---------+          +----------+
| Hub |--------- tl0 |   NAT   | fxp0 ----| Internet |
+-----+              +---------+          +----------+
| |
| +-- Klient A
+---- Inni

		      +--------------------------+
		      |          LEGENDA         |
		      +--------------------------+
		      |  NIC fxp0 - 24.5.0.5     |
		      |  NIC tl0  - 192.168.1.1  |
		      | Klient A  - 192.168.1.40 |
		      +--------------------------+

</pre>
</blockquote>

<p>
<a name="nat2.0"></a>
<h3><u>6.3.2 Translacja adresów sieciowych (Network Address Translation - NAT)</u></h3>

<p>
<a name="nat2.1"></a>
<b>Wprowadzenie do NAT</b>

<p>
Ka¿dy element Internetu wymaga posiadanie unikatowego adresu IP.
W wersji czwartej protoko³u IP (IPv4) liczba adresów jest do¶æ
mocno ograniczona. Wiêkszo¶æ "tanich" dostawców Internetu dostarcza
niewielk± pulê 1 - 30 adresów dla swoich klientów. Wiêksze organizacje
mog³yby zechcieæ korzystaæ zwiêkszej puli adersów, aby móc przypisaæ
je ka¿demu komputerowi z osobna, co prawdê mówi±c daje niewiele korzy¶ci, 
a zmniejsza bezpieczeñstwo i integralno¶æ ca³ej sieci.

<p>
Translacja adresów sieciowych (Network Address Translation - NAT,
znana tak¿e jako maskowanie IP (&quot;IP Masquerading&quot;)
w Linuksie) zezwala na dostêp do Internetu wielu komputerom
umieszczonym za jednym (lub kilkoma) adresami IP. Ka¿dy z komputerów
ma przypisany indywidualny, niezarejestrowany  adres IP w sieci
wewnêtrznej, (<a href="http://www.geektools.com/rfc/rfc1918.txt">RFC 1918</a>),
natomiast wszystkie korzystaj± z tego samego, zewnêtrznego adresu IP
jednocze¶nie.

<p>
Sposób, w jaki pracuje NAT jest prosty. Gdy klient z sieci LAN zechce
po³±czyæ siê z komputerem poprzez Internet, wysy³a pakiet TCP z
¿±daniem po³±czenia. Wewn±trz nag³ówka TCP (a w³a¶ciwie IP) znajduje siê
adres IP klienta (np. 192.168.1.40) i adres hosta do którego pakiet ma
dotrzeæ (np. 123.45.67.89). Komputer który wykonuje NAT przechwytuje
pakiet TCP klienta i zmienia jego adres IP z 192.168.1.40 na adres IP
interfejsu pod³±czonego do Internetu (np. 24.5.0.5). Tyle wystarczy
aby zmyliæ komputer docelowy, bêdzie on uwa¿a³ ¿e po³±czenie pochodzi
od komputera wykonu±cego NAT, a nie w³a¶ciwej maszyny wysy³aj±cej
¿±danie. Wysy³a on nastêpnie potwierdzenie do komputera z NAT, który
nastêpnie rozpoznaje odpowied¼, szybko zmienia adres docelowy z
w³asnego na adres IP swojego klienta i wysy³a pakiet. Klient
nie wie dok³adnie w jaki sposób wygl±da wymiana pakietów, wszystkie
te operacje s± przezroczyste dla ka¿dej aplikacji pracuj±cej na
komputerze klienta.

<p>
Poni¿szy przyk³ad mo¿e co nieco rozja¶niæ:

<blockquote><pre>
Klient ----------------- tl0 [ NAT ] fxp0 ---------- Host w Internecie
192.168.1.40 --- 192.168.1.1 [ NAT ] 24.5.0.5 --- 123.45.67.89

WYCHODZ¡CY Pakiet TCP                     WYCHODZ¡CY Pakiet TCP
Od: 192.168.1.40  &gt;&gt;=== NAT ===&gt;&gt;  Od: 24.5.0.5
Do: 123.45.67.89                           Do: 123.45.67.89

PRZYCHODZ¡CY Pakiet TCP                  PRZYCHODZ¡CY Pakiet TCP
Od: 123.45.67.89 			Od: 123.45.67.89
Do:   192.168.1.40  &lt;&lt;=== NAT ===&lt;&lt;     Do: 24.5.0.5
</pre></blockquote>

<p>
<a name="nat2.2"></a>
<b>Dlaczego chcia³by¶ u¿ywaæ NAT?</b>

<p>
W przyk³adzie z modemem kablowym pojawi³ siê jeszcze jeden problem.
W jaki sposób udostêpniæ dostêp do Internetu dla moich wspó³lokatorów
gdy modem znajduje siê w moim pokoju? Jest kilka rozwi±zañ które mog³em
zastosowaæ, takie jak uzyskanie wiêkszej ilo¶ci adresów IP, konfiguracja
serwera proxy lub konfiguracja NAT. (Nie my¶l, ¿e przyk³ad z modemem
kablowym jest dziecinny, NAT jest na tyle potê¿ny, aby maskowaæ ogromne
sieci z setkami, a nawet tysi±cami pracuj±cych w nich komputerów!)

<p>
Jest naprawdê wiele powodów dla których chcia³em wykorzystaæ do tego
NAT. Pierwszym z nich jest oszczêdno¶æ pieniêdzy. Mieszkam z dwoma
wspó³lokatorami i perspektywa dzielenia kosztów dostêpu do Internetu
jest do¶æ atrakcyjna.
Id±c dalej, ka¿dy z wspó³lokatorów ma swój PC, ja mam trzy, co daje
piêæ komputerów, natomiast nasz dostawca Internetu dostarczy³
tylko trzy adersy IP. Oznacza to, ¿e nie ma wystarczaj±cej ilo¶ci
adresów, aby umo¿liwiæ wszystkim komputerom jednoczesny dostêp
do Internetu.

<p>
Dziêki NAT ka¿da maszyna mo¿e mieæ unikatowy adres IP w sieci
wewnêtrznej oraz wspó³dzieliæ jeden zewnêtrzny adres IP przyznany
przez naszego dostawcê.

<p>
<a name="nat2.4"></a>
<b>Inicjalizacja</b>

<p>
Aby udostêpniæ NAT na komputerze z OpenBSD musisz uruchomiæ PF (Packet
Filter). Mo¿esz to zrobiæ w ³atwy sposób edytuj±c pliki wyszczególnione
poni¿ej:

<p>
<b>/etc/rc.conf</b> (ten plik u¿ywany jest do startowania us³ug
podczas uruchamiania komputera)

<blockquote><pre>
pf=YES<br>
</pre></blockquote>

<p>
<b>/etc/sysctl.conf</b>

<blockquote><pre>
net.inet.ip.forwarding=1
</pre></blockquote>

<p>
Po tych zmianach komputer jest gotowy do konfiguracji NAT.

<p>
<a name="nat2.5"></a>
<b>Konfiguracja</b>

<p>
Pierwszym krokiem jest edycja pliku konfiguracyjnego PF
(<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.3">/etc/pf.conf</a></i>).
Dla potrzeby tego dokumentu zezwolimy na przepuszczanie przez
firewall ca³ego ruchu wychodz±cego oraz przychodz±cego na ka¿dym
z interfejsów. Plik powinien wygl±daæ w ten sposób:

<blockquote><pre>
pass in all
pass out all
</pre></blockquote>

<p>
Wiêcej informacji mo¿esz znale¼æ w podrozdziale <a href="#PF">Filtr pakietów FAQ 6</a>

<p>
Regu³ki odpowiadaj±ce za NAT w pliku konfiguracyjnym
(<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nat.conf&amp;sektion=5&amp;manpath=OpenBSD+3.3">/etc/pf.conf</a></i>)
maj± bardzo prost± sk³adniê. Dla konfiguracji przedstawionej
powy¿ej, plik powinien zawieraæ taki wpis:

<blockquote><pre>
nat on fxp0 from 192.168.1.0/24 to any -&gt; 24.5.0.5
</pre></blockquote>

<p>
A oto wyja¶nienie powy¿szej linijki.

<dl>
<dt>"nat"
<dd>To oznacza ¿e dodajesz regu³kê NAT.
</dl>

<dl>
<dt>"fxp0"
<dd>Interfejs sieciowy który pod³±czony jest do Internetu.
</dl>

<dl>
<dt>"192.168.1.0/24"
<dd>Adres IP oraz maska (maska sieciowa w formacie CIDR). Razem
oznacza to ¿e "ka¿dy adres IP o zakresie od 192.168.1.1 do 192.168.1.254
" powinien zostaæ zmapowany (zamaskowany).
</dl>

<dl>
<dt>"24.5.0.5"
<dd>Zewnêtrzny adres IP, na który mapowane (zmieniane) bêd± adresy IP
sieci wewnêtrznej.
</dl>

(od t³umacza: pamiêtaj ¿e regu³ki NAT powinny znale¼æ siê w pliku przed regu³kami
filtruj±cymi)

<p>
<a name="nat2.6"></a>
<b>Uruchamianie</b>

<p>
Teraz, gdy konfiguracja jest zakoñczona, istniej± dwa sposoby aby
uruchomiæ NAT. Pierwszym z nich (i najlepszym) jest ponowne uruchomienie
komputera. Mo¿esz to zrobiæ komend± "<i>reboot</i>".

<p>
Je¶li chcia³by¶ uruchomiæ NAT bez restartu mo¿esz skorzystaæ z
poni¿szych poleceñ:

<blockquote><pre>
# <b>pfctl -f /etc/pf.conf</b>
# <b>pfctl -e</b>
</pre></blockquote>

<p>
Pierwsza linijka ³aduje zestaw regu³ek NAT do filtra pakietów PF (oraz
czy¶ci istniej±ce regu³ki), druga uruchamia PF. Jeszcze raz, restart
systemu jest najlepsz± metod± na to, aby przekonaæ siê ¿e po ponownym
uruchomieniu wszystko dzia³a tak, jak tego siê spodziewa³e¶.

<p>
<b>Uwaga:</b> aby prze³adowaæ ustawienia NAT (gdy edytujesz plik, ale
nie chcesz ponownego uruchamiania systemu) poprostu skorzystaj
jeszcze raz z pierwszej komendy. Aktualne ustawienia zostan± usuniête
oraz za³adowane ¶wie¿e.

<p>
<a name="nat3.0"></a>
<h3><u>6.3.3 NAT - podstawowe informacje</u></h3>

<p>
<a name="nat3.1"></a>
<b>Sprawdzanie stanu NAT</b>

<p>
Aby dowiedzieæ siê w jaki sposób pracuje teraz NAT lub aby upewniæ
siê ¿e zmiany w konfiguracji zasz³y tak, jak zamierza³e¶, skorzystaj
z opcji "-ss". Dziêki niej wy¶wietlone zostan± wszystkie sesje, które
obs³uguje w tej chwili NAT:

<blockquote><pre>
# pfctl -ss
TCP  192.168.1.40:2132 -&gt; 24.5.0.5:53136 -&gt; 65.42.33.245:22       TIME_WAIT:TIME_WAIT
TCP  192.168.1.40:2492 -&gt; 24.5.0.5:55011 -&gt; 65.42.33.245:22       ESTABLISHED:ESTABLISHED
UDP  192.168.1.40:2491 -&gt; 24.5.0.5:60527 -&gt; 24.2.68.33:53       2:1
</pre></blockquote>

<p>
Wyja¶nienie (pierwszej linijki, pozosta³e s± podobne):

<dl>
<dt>"192.168.1.40:2132"
<dd>To adres IP komputera w nieci LAN który u¿ywa NAT (192.168.1.40).
Widoczny jest równie¿ numer portu, z którego pochodzi po³±czenie (2132).
</dl>

<dl>
<dt>"24.5.0.5:53136"
<dd>Po³±czenie trafia do Internetu poprzez adres 24.5.0.5 i u¿ywa portu
53136.
</dl>

<dl>
<dt>"65.42.33.245:22"
<dd>Adres IP drugiego koñca po³±czenia.
</dl>

<dl>
<dt>"TIME_WAIT:TIME_WAIT"
<dd>Stan po³±czenia TCP rozpoznany przez PF.
</dl>

<p>
<a name="nat3.2"></a>
<b>Wspó³praca NAT i FTP</b>

<p>
Korzystaj±c z NAT nale¿y mieæ na uwadze kilka ograniczeñ, najczê¶ciej
spotykanym jest to zwi±zane z FTP. Mo¿esz korzystaæ z FTP w dwojaki
sposób, u¿ywaj±c trybu pasywnego lub aktywnego. Z tej dwójki, pasywny
uwa¿any jest ogólnie za bezpieczniejszy.

<p>
W trybie aktywnym, gdy u¿ytkowniki pod³±cza siê do zdalnego serwera
FTP i wysy³a ¿±danie informacji lub pliku, klient FTP wysy³a do
serwera losowy numer portu do którego ma pod³±czyæ siê serwer
i wykonaæ do niego transfer danych. Jest to problem dla u¿ytkowników
chc±cych korzystaæ ze swojej sieci LAN z zewnêtrznego serwera FTP.
Gdy serwer FTP chce wys³aæ dane, próbuje nawi±zaæ po³±czenie do
zewnêtrznego interfejsu pod losowy port. Maszyna która wykonuje NAT
odbiera pakiet inicjuj±cy po³±czenie, ale poniewa¿ nic nie wie o tym
po³±czeniu (wie o nim klient z sieci LAN) odrzuca pakiet i niedorêcza
go pod w³a¶ciwy adres.

<p>
W trybie pasywnym FTP (domy¶lnym w kliencie
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a>
w OpenBSD), to klient ¿±da, aby serwer wybra³ losowy numer portu i na nim
oczekiwa³ na po³±czenie i transfer danych klienta. Serwer informuje
klienta o numerze portu który wybra³, klient ³±czy siê ze wskazanym
portem i nastêpuje transfer danych. Niestety nie zawsze jest to mo¿liwe.
ftp(1) u¿ywa tego trybu domy¶lnie; aby wymusiæ aktywny tryb FTP,
skorzystaj z flagi -A, lub u¿yj komendy

<blockquote><pre>
passive off
</pre></blockquote>

<p>
po znaku zachêty ftp&gt;

<p>
Filtr pakietów dostarcza pewne rozwi±zanie dla takiej sytuacji,
przekierowuj±c ruch FTP przez serwer proxy FTP, proces ten "prowadzi"
Twój ruch FTP przez filtr. FTP proxy u¿ywany w OpenBSD i przez PF to
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+3.3">ftp-proxy(8)</a>.
Aby go aktywowaæ, dodaj linijkê analogiczn± do poni¿szej w swoim
pliku <i>/etc/pf.conf</i>:

<blockquote><pre>
rdr on tl0 proto tcp from any to any port 21 -&gt; 127.0.0.1 port 8021
</pre></blockquote>

<p>
Krótkie wyja¶nienie tej linijki, "ruch do portu TCP 21 na wewnêtrznym
interfejsie jest przekierowany do serwera proxy uruchomionego na tej
maszynie nas³uchuj±cego na porcie 8021".

<p>
Oczywi¶cie, serwer proxy musi byæ uruchomiony, dokonuje siê zwykle tego
poprzez dodanie poni¿szej linijki w pliku <i>/etc/inetd.conf</i>:

<blockquote><pre>
127.0.0.1:8021 stream tcp nowait root /usr/libexec/ftp-proxy ftp-proxy
</pre></blockquote>

<p>
oraz ponowne uruchomienie komputera, lub wys³anie sygna³u 'HUP' do
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inetd&amp;sektion=8">inetd(8)</a>.
Jedn± z komend, którymi mo¿na wys³aæ sygna³ 'HUP' jest:

<blockquote><pre>
kill -HUP `cat /var/run/inetd.pid`
</pre></blockquote>

<p>
Zauwa¿ysz teraz ¿e ftp-proxy nas³uchuje na porcie 8021, tym samym, pod
który wysy³a ruch nasza regu³ka przekierowuj±ca (rdr) ruch wysy³any
do serwerów FTP. Wybór portu 8021 jest dobry, poniewa¿ nie jest on
przypisany ¿adnej inej aplikacji.

<p>
<a name="nat3.3"></a>
<b>Przekierowywanie ruchu</b>

<p>
Niekiedy mo¿e siê zda¿yæ, ¿e bêdziesz potrzebowa³ przekierowaæ
przychodz±cy lub wychodz±cy ruch dla pewnego protoko³u i/lub portu do
maszyny bêd±cej za filtrem pakietów. Przyk³adem mo¿e byæ komputer
w sieci wewnêtrznej, na którym pracuje serwer www, który powinien byæ
widoczny z zewn±trz (lub przed chwil± dyskutowany ftp-proxy(8)).
Po³±czenia przychodz±ce pod w³a¶ciwy Internetowy adres IP, dopóki
Twoja maszyna wykonuj±ca NAT sama bêdzie pracowa³a jako
serwer www, nie mog± zostaæ ustanowione. Z tego powodu, u¿ywamy
dyrektywy 'rdr' w regu³kach NAT aby poinformowaæ system w jaki
sposób maj± byæ dokonywane przekierowania.

<p>
Dla przyk³adu, za³ó¿my ¿e serwer www znajduje siê w sieci LAN pod
adresem 192.168.1.80. Regu³ki NAT wymagaj± zastosowania nowej dyrektywy,
aby przekierowaæ do niego ruch. Do Twojego pliku <i>/etc/pf.conf</i>
powiniene¶ wówczas dodaæ analogiczn± regu³kê:

<blockquote><pre>
rdr on fxp0 proto tcp from any to any port 80 -&gt; 192.168.1.80 port 80
</pre></blockquote>

<p>
Wyt³umaczymy ka¿dy z jej elementów:

<dl>
<dt>"rdr"
<dd>To komenda która wydajesz Twojemu NAT. Mówi mu ona, ¿e ten wpis
dotyczy przekierowywania ruchu.
</dl>

<dl>
<dt>"on fxp0"
<dd>Interfejs sieciowy, który jest pod³±czony do Internetu.
</dl>

<dl>
<dt>"from any to any"
<dd>Wyszczególnia adresy IP które powinny ulec przekierowaniu
(po³±czenia pochodz±ce z jakiegokolwiek adresu IP przeznaczone
do jakiegokolwiek adresu docelowego)
</dl>

<dl>
<dt>"port 80"
<dd>Oto port (80), do którego po³±czenia powinny zostaæ przekierowywane.
Jako taki numer "80" nie musi zostaæ u¿yty. Mo¿esz skorzystaæ z wpisu
"port www". Je¶li wolisz korzystaæ z nazwy zamiast numeru, upewnij
siê ¿e podana przez Ciebie nazwa znajduje siê w pliku
<i>/etc/services</i>.
</dl>

<dl>
<dt>"192.168.1.80 port 80"
<dd>Adres IP oraz port maszyny do której ma zostaæ przekierowany ruch.
Zauwa¿, ¿e port docelowy, do którego przekierowujemy po³±czenie nie musi
byæ identyczny z tym do którego pakiet zosta³ pocz±tkowo przeznaczony.

Dla przyk³adu, poni¿sza regu³ka jest poprawna, a nawet w niektórych
przypadkach u¿yteczna:
<pre>
rdr on fxp0 proto tcp from any to any port 8080 -&gt; 192.168.1.35 port 80
</pre>
Przekierowuje ona ca³y ruch przychodz±cy do portu 8080 do serwera
www uruchomionego na komputerze w wewnêtrznej sieci na "standardowym"
porcie 80.
</dl>

<p>
Gdy zakoñczysz wprowadzanie zmian, prze³aduj regu³ki NAT a
przekierowanie ruchu rozpocznie siê automatycznie.

<p>
<b>Negacje</b>
<p>
Czsami mo¿esz zechcieæ wprowadziæ pewne wyj±tki od przekierowuj±cych
regu³ek NAT. Oto przyk³ad. Komunikator AOL robi tak nieprzyjemne
rzeczy jak usi³owanie wyj¶cia przez firewall przez ka¿dy mo¿liwy
port. Mo¿na zauwa¿yæ, ¿e czasami dochodzi do konfliktu z naszym ftp-proxy,
gdy komunikator AOL stara siê nawi±zaæ po³±czenie do portu 21.
Gdy uznasz, ¿e nie podobaj± Ci siê takie praktyki AOL (wielu ludzi
spêdza sporo czasu próbuj±c go zablokowaæ), mo¿esz zechcieæ
wykluczyæ adres IP wykorzystywany przez serwery AOL z naszej
regu³ki przekierowuj±cej:

<blockquote><pre>
rdr on tl0 proto tcp from any to ! 64.12.163.199 port 21 -&gt; 127.0.0.1 port 8021
</pre></blockquote>

<p>
Interpretacja: Przekieruj ruch wchodz±cy na interfejs tl0 i wychodz±cy
do portu 21 za wyj±tkiem adresu docelowego 64.12.163.199 (serwer AOL
z którym u¿ytkownicy maj± problemy) do localhost`a pod port 8021
(gdzie nas³uchuje nasz ftp-proxy). Jakkolwiek istnieje wiele serwerów
AOL, wiêc je¶li ten problem naprawdê nie daje Ci spaæ rozwa¿ zablokowanie
adresów IP podsieci 64.12.0.0/16, uwa¿aj poniewa¿ prawdopodobnie w tym
zakresie znajduj± siê równie¿ zupe³nie przypadkowe serwery.


<p>
<a name="nat3.4"></a>
<b>NAT kontra Proxy</b>

<p>
Ró¿nica pomiêdzy NAT a oprogramowaniem typu proxy jest znacz±ca. Aplikacje
proxy s± wyra¼nym ogniwem ³±cz±cym Internet z komputerami w sieci LAN.
Nie wszystkie aplikacje zdolne s± do wspó³pracy z oprogramowaniem proxy,
szczególnie gry. Po prostu - nie istniej± serwery proxy dla wszystkich
aplikacji korzystaj±cych z sieci Internet.
NAT jest tworem transparentnym, mapuje wewnêtrzne adresy sieciowe tak,
aby umo¿liwiæ hostom lokalnym dostêp do Internetu. Aplikacje pracuj±ce
po stronie klienta nie zdaj± sobie tak naprawdê sprawy z tego, ¿e w sieci
pracuje host wykonuj±cy NAT. Jedynym plusem wynikaj±cym z zastosowania
proxy jest mo¿liwo¶æ zwiêkszenia bezpieczeñstwa, poprzez filtrowanie
ruchu, wychwytywanie wirusów i robaków na które podatne s± Windows,
ochronê przed przepe³nieniami buforów w oprogramowaniu klienta
i wiele innych. Konfiguracja tego typu filtrów to trudna i powa¿na
praca.

<p>
<a name="nat3.5"></a>
<b>Refleksje na temat przekierowañ</b>

<p>
Czêsto regu³ki przekierowuj±ce u¿ywane s± do przekazywania przychodz±cych
po³±czeñ z Internetu do serwera umieszczonego w sieci LAN i nie posiadaj±cego
publicznego adresu IP:

<pre>
rdr on $ext_if proto tcp from any to $ext_if port 80 -&gt; $server port 80
</pre>

<p>
Jednak w przypadku, gdy testujemy regu³kê z komputera w naszej sieci lokalnej,
zauwa¿amy, ¿e nie dzia³a. Przyczyn± jest to ¿e regu³ka przekierowuj±ca
okre¶la interfejs wej¶ciowy dla pakietów ($ext_if - zewnêtrzny interfejs).
Po³±czenie z zewnêtrznym adresem komputera z firewallem z komputera
w sieci lokalnej wcale nie oznacza, ¿e pakiety musz± wêdrowaæ przez zewnêtrzny
interfejs.
Stos TCP/IP firewalla porównuje adres przeznaczenia przychodz±cych pakietów
z w³asnymi adresami oraz ich aliasami, wykrywaj±c w ten sposób do siebie samego
w momencie gdy przesz³y tylko przez wewnêtrzny interfejs. Takie pakiety fizycznie
nie wêdruj± przez zewnêtrzny interfejs, a stos TCP/IP nie symuluje w ¿aden
sposób takiej sytuacji. PF nigdy nie widzia³ tych pakietów na zewnêtrznym
interfejsie i dlatego w³a¶nie regu³ka przekierowuj±ca, wy³apuj±ca pakiety
wêdruj±ce do zewnêtrznego interfejsu nie akceptuje po³±czeñ pochodz±cych
z sieci LAN.

<p>
Dodanie drugiej regu³ki przekierowuj±cej nie rozwi±¿e w tym przypadku naszego
problemu. Gdy klient z sieci lokalnej ³±czy siê z zewnêtrznym adresem IP
firewalla pakiet inicjuj±cy po³±czenie TCP dochodzi do maszyny z firewallem
przez wewnêtrzny interfejs.
Nowa regu³ka przekierowuj±ca akceptuje ten pakiet i adres docelowy zostaje
zast±piony adresem lokalnego serwera.
Pakiet zostaje przekierowany ponownie na wewnêtrzny interfejs i dociera
do serwera. Jednak nie zosta³ przet³umaczony adres ¼ród³owy i zawiera
on adres klienta, wiêc serwer ode¶le odpowied¼ bezpo¶rednio do niego.
Firewall nigdy nie dostanie odpowiedzi od serwera, któr± móg³by poprawnie
przes³aæ z powrotem do klienta, co spowoduje, ¿e klient otrzyma pakiet TCP
ze ¼ród³a, którego siê nie spodziewa³ i go odrzuci, nawi±zywanie po³±czenia
nie powiedzie siê.

<p>
Czêsto jest po¿±dane, aby hosty w sieci LAN mog³y ³±czyæ siê z tym samym
serwerem lokalnym tak jak hosty z zewn±trz, transparentnie (bez dodatkowej
wiedzy o faktycznym adresie oraz po³o¿eniu serwera).
Oto kilka rozwi±zañ, które mog± pomóc rozwi±zaæ ten problem:

<p>
<b>Konfiguracja serwera DNS</b>
<p>
Mo¿liwe jest skonfigurowanie serwera DNS tak, aby odpowiada³ na zapytania
z sieci lokalnej inaczej ni¿ na zapytania z zewn±trz, tak wiêc klient
w sieci lokalnej mo¿e otrzymaæ od serwera nazw adres lokalny serwera.
Po³±czy siê wtedy z nim bezpo¶rednio, bez zaanga¿owania w tê operacjê
firewalla. Zredukuje to ruch, poniewa¿ pakiety nie bêd± niepotrzebnie
wêdrowa³y przez firewall.

<p>
<b>Przeniesienie serwera do odseparowanej sieci lokalnej</b>
<p>
Do³±czenie dodatkowego interfejsu sieciowego do komputera z firewallem
i przeniesienie serwera do takiej sieci dedykowanej (DMZ) pozwoli na
przekierowywanie po³±czeñ od lokalnych klientów w taki sam sposób
jak klientom z zewn±trz. Wykorzystanie odseparowanej sieci ma kilka
innych zalet, w³±czaj±c zwiêkszenie bezpieczeñstwa poprzez odseparowanie
serwera tak¿e od klientów lokalnych. Jednak¿e nale¿y pamiêtaæ o tym,
¿e w takim przypadku nasz serwer nie bêdzie mia³ bezpo¶redniego dostêpu
do hostów lokalnych - wszystkie po³±czenia bêd± musia³y przej¶æ przez
firewall.

<p>
<b>TCP proxy</b>
<p>
TCP proxy mo¿e byæ skonfigurowany na ho¶cie, na którym pracuje firewall,
nas³uchuj±c na porcie który ma zostaæ przekierowany oraz przechwytuj±c
po³±czenia z interfejsu lokalnego i przekierowywaæ je do portu, na którym
nas³uchuje. Gdy lokalny klient ³±czy siê z firewallem, proxy akceptuje
po³±czenie otwieraj±c drugie po³±czenie z serwerem i przekierowuj±c
ruch pomiêdzy ustanowionymi po³±czeniami.

<p>
Proste proxy mo¿na stworzyæ korzystaj±c z
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=inetd&amp;sektion=8">inetd(8)</a>
lub
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nc&amp;sektion=1">nc(1)</a>.
Poni¿szy wpis w <i>/etc/inetd.conf</i> tworzy gniazdo przypisane do
interfejsu loopback i portu 5000. Po³±czenia s± przekierowywane do
portu 80 serwera o adresie 192.168.1.10.

<pre>
127.0.0.1:5000 stream tcp wait nobody /usr/bin/nc nc -w 20 192.168.1.10 80
</pre>

<p>
Poni¿sza regu³ka PF przekierowuje ruch portu 80 na wewnêtrznym interfejsie
do proxy:

<pre>
rdr on $int_if proto tcp from $int_net to $ext_if port 80 -&gt; 127.0.0.1 port 5000
</pre>
d425 6
a430 4
<b>Wspó³praca RDR (przekierowania) i NAT</b>
<p>
Mo¿na równie¿ uzyskaæ translacjê adresu ¼ród³owego poprzez wprowadzenie
dodatkowej regu³ki NAT dotycz±cej wewnêtrznego interfejsu.
d432 3
a434 5
<pre>
rdr on $int_if proto tcp from $int_net to $ext_if port 80 -&gt; $server
no nat on $int_if proto tcp from $int_if to $int_net
nat on $int_if proto tcp from $int_net to $server port 80 -&gt; $int_if
</pre>
d437 1
a437 15
Spowoduje to, ¿e inicjalizuj±cy po³±czenie pakiet pochodz±cy od klienta,
zostanie ponownie poddany NAT w chwili, gdy zostanie przekierowany na
zewnêtrzny interfejs, adres ¼ród³owy klienta zostanie zamieniony na adres
inetrfejsu wewnêtrznego serwera. Serwer prze¶le swoj± odpowied¼ do firewalla,
który potrafi zamieniæ regu³kê RDR na NAT gdy klientem jest host w sieci
loaklnej. Taka konstrukcja jest do¶æ z³o¿ona dziêki temu, ¿e tworzy
dwa oddzielne stany dla ka¿dego po³±czenia.
Trzeba zwróciæ uwagê na odpowiedni± konfiguracjê NAT w taki sposób, aby
regu³ki nie akceptowa³y innych pakietów ni¿ te, które dopuszczasz, dla
przyk³adu, po³±czenia pochodz±ce od hostów z poza naszej sieci lub samego
firewalla. Zauwa¿, ¿e regu³ka rdr powy¿ej, spowoduje, ¿e stos TCP/IP bêdzie
widzia³ pakiety przychodz±ce do wewnêtrznego interfejsu z adresem docelowym
naszej sieci lokalnej. Aby zapobiec generowaniu informacji o przekierowaniach
ICMP przez stos (mówi±cych klientowi, ¿e serwer jest dostêpny lokalnie)
wy³±cz przekierowania na gateway`u:
d439 7
a445 3
<pre>
# <strong>sysctl -w net.inet.ip.redirect=0</strong>
</pre>
a446 2
Dla wiêkszo¶ci przypadków, rozwi±zania omawiane powy¿ej s± w zupe³no¶ci
wystarczaj±ce.
d449 9
a457 20
<a name="nat4.0"></a>
<b>6.3.4 Linki i inna dokumentacja</b>

<p>
Pliki OpenBSD:
<ul>
<li>/etc/pf.conf - plik z regu³kami PF/NAT
<li>/etc/rc.conf - tutaj nale¿y dokonaæ edycji aby uruchomiæ NAT i PF przy starcie systemu
<li>/etc/sysctl.conf - w tym miejscu zezwalamy na przekazywanie pakietów IP
</ul>

<p>
Inne linki o NAT:

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.3">strona man o pf.conf</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.3">strona man o pfctl</a>
<li><a href="http://www.geektools.com/rfc/rfc1631.txt">http://www.geektools.com/rfc/rfc1631.txt</a>
</ul>

d847 1
a847 1
wykorzystanie <a href="../faq13.html">IPsec</a>. W innym przypadku mo¿liwe
a1012 592
<p>
<a name="DNS"></a>
<a name="6.8"></a>
<h2>6.8 - System nazw domenowych (Domain Name Service)  - DNS, BIND i named</h2>

<i>Uwaga: Sekcja ta zosta³a napisana dla OpenBSD 3.2 i wcze¶niejszych wydañ,
które zawiera³y BIND4. OpenBSD v3.3 zawiera teraz BIND9, który jest
lepiej opisany w literaturze i w Internecie, ni¿ by³o to w przypadku BIND4.

<p>Podobnie jak BIND4 z OpenBSD,
BIND9 na OpenBSD dzia³± w ¶rodowisku chroot(2) i posiada liczne ulepszenia
bezpieczeñstwa w stosunku do standardowego BIND9:
<ul>
<li>wsparcie arc4random() (zintegrowany w 9.3.0-snapshot)
<li>wywo³anie tzset przed chroot
<li>otwarcie /dev/null przed chroot
<li>powrót do domy¶lnego urz±dzenia losuj±cego podczas pracy w chroot
<li>dodanie implementacji LCG (Linear Congruential Generator) do libisc
<li>u¿ywanie LCG zamiast LFSR do generowania ID dopóki LFSR nie bêdzie uznany za godny zaufania
<li>wybór protoko³ów transportuj±cych IPv{4,6} dla zapytañ programu dig(1)
<li>naprwa sha1.c pozwalaj±ca obej¶æ b³±d optymalizacji gcc (sparc64)
<li>domy¶lnie chroot w <tt>/var/named</tt>
<li>domy¶lnie setuid na u¿ytkownika <tt>named</tt>
<li>zapis pid-file przd chroot
</ul>
OpenBSD 3.3 mog± zaj¿eæ na: 
<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=named&amp;sektion=8">named(8)</a>
<li><a href="http://www.openbsd.org/cgi-bin/cvsweb/~checkout~/src/usr.sbin/bind/doc/arm/Bv9ARM.html"
>BIND 9 Administrator Reference Manual</a> (Strony te s± tak¿e dostêpne
w katalogu <tt>/usr/share/doc/html/bind/</tt> w twoim systemie)
</ul>
</blockquote> </i>

<p>
<h3>6.8.1 Co to jest DNS?</h3>

<p>
System nazw domenowych (Domain Name Service) jest w³asno¶ci± zezwalaj±c±
na odwzorowywanie adresów IP na domeny i odwrotnie. Domy¶lna instalacja OpenBSD
skonfigurowana jest jako klient DNS, ale nie jako serwer. Oznacza to, ¿e
Twój system potrafi wys³aæ zapytanie o adres IP przypisany do danej
domeny, ale nie potrafi sam udzieliæ odpowiedzi na takie pytanie wys³ane
z innej maszyny dopóki nie zostanie w tym celu odpowiednio skonfigurowany.

<p>
Mój OpenBSD jest aktualnie pod³±czony do Internetu poprzez mojego ISP, wiêc mogê
skorzystaæ z
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nslookup&amp;sektion=8">nslookup(8)</a>
aby wykonaæ zapytanie DNS:

<blockquote><pre>
$ <strong>nslookup www.openbsd.org</strong>
Server:  ns4.us.prserv.net
Address:  165.87.201.244

Non-authoritative answer:
Name:    www.openbsd.org
Address:  129.128.5.191
</pre></blockquote>

<p>
<b>165.87.201.244</b> jest adresem serwera który udzieli³ odpowiedzi, poniewa¿
taki w³a¶nie zosta³ mi przydzielony przez mojego ISP i który zosta³ wpisany w
pliku
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf&amp;sektion=5">/etc/resolv.conf</a>.
Uzyskana odpowied¼ nie jest jednak autorytatywna. Do uzyskania takiej
odpowiedzi musimy poszukaæ autorytatywnego serwera DNS dla domeny
<i>openbsd.org</i> i jego spytaæ o adres <i>www.openbsd.org</i>:

<blockquote><pre>
# Identyfikacja serwerów nazw domeny openbsd.org
# uzyskana z pomoc± serwera nazw mojego ISP
$ <strong>nslookup -type=NS openbsd.org</strong>
Server:  ns4.us.prserv.net
Address:  165.87.201.244

Non-authoritative answer:
openbsd.org     nameserver = cvs.openbsd.org
openbsd.org     nameserver = gandalf.sigmasoft.com
openbsd.org     nameserver = cs.colorado.edu
openbsd.org     nameserver = ns.appli.se
openbsd.org     nameserver = zeus.theos.com

Authoritative answers can be found from:
cvs.openbsd.org internet address = 199.185.137.3
gandalf.sigmasoft.com   internet address = 198.144.202.98
cs.colorado.edu internet address = 128.138.243.151
ns.appli.se     internet address = 194.198.196.230
zeus.theos.com  internet address = 199.185.137.1

# Wykorzystanie uzyskanych informacji dla uzyskania
# autorytatywnej odpowiedzi z serwera zeus.theos.com.
$ <strong>nslookup www.openbsd.org zeus.theos.com</strong>
Server:  zeus.theos.com
Address:  199.185.137.1

Name:    www.openbsd.org
Address:  129.128.5.191
</pre></blockquote>

<p>
<i>zeus.theos.com</i> jest, jak mo¿na przypuszczaæ, komputerem
z OpenBSD oraz skonfigurowany jest tak, aby móg³ pracowaæ jako serwer
DNS dla domeny <i>openbsd.org</i>.

<p>
<a name="DNS.1.1"></a>
<a name="6.8.1.1"></a>
<h3>6.8.1.1 Sk±d dowiedzieæ siê wiêcej o DNS i jego implementacji
w OpenBSD?</h3>

<ul>
<li>Przeczytaj RFC <a href="http://www.faqs.org/rfcs/rfc1033.html">1033</a>,
<a href="http://www.faqs.org/rfcs/rfc1034.html">1034</a> oraz
<a href="http://www.faqs.org/rfcs/rfc1035.html">1035</a> dla uzyskania
wiêkszej wiedzy na temat Internetowego systemu domen.
<li>Przeczytaj ksi±¿kê wydawnictwa O'Reilly Associates <i><a href="../../books.html#6">DNS
and BIND</a> </i>.
<li>Odwied¼ tak¿e <a href="http://www.openbsd.org/cgi-bin/man.cgi">Manual OpenBSD</a> a zw³aszcza
strony
  <ul>
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dig&amp;sektion=1">dig(1)</a>
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nslookup&amp;sektion=8">nslookup(8)</a>
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=gethostbyname&amp;sektion=3">gethostbyname(3)</a>
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=named&amp;sektion=8">named(8)</a>
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolver&amp;sektion=3">resolver(3)</a>
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolver&amp;sektion=5">resolver(5)</a>
  </ul>
</ul>

<p>
Komenda
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dig&amp;sektion=1">dig(1)</a>
jest bardzo u¿yteczna, poniewa¿ potrafi wykonywaæ zapytania oraz wy¶wietlaæ
wyniki w stylu niemal identycznym z formatem plików konfiguracyjnych BINDa.
Mo¿esz u¿yæ
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dig&amp;sektion=1">dig(1)</a>,
aby sprawdziæ konfiguracjê znanych Ci serwerów nazw.

<p>
<h3>6.8.2 Czy mój komputer musi byæ serwerem nazw?</h3>

<p>
Je¶li nie jeste¶ pewien czy Twój komputer powinien pe³niæ rolê
serwera DNS, odpowied¼ brzmi najprawdopodobniej - nie. Domy¶lna
instalacja nie konfiguruje Twojego systemu, aby pracowa³ w taki
w³a¶nie sposób, aczkolwiek wszystkie niezbêdne pliki s± ju¿ zainstalowane.
Dla wiêkszo¶ci stacji roboczych wystarczy edycja pliku
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hosts&amp;sektion=5">/etc/hosts</a>
do nadania nazw lokalnym adresom IP oraz
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf&amp;sektion=5">/etc/resolv.conf</a>
dla umieszczenia informacji o tym które serwery DNS powinny byæ
u¿ywane do rozwi±zywania nazw intranetu i Internetu.

<p>
Z drugiej strony, mo¿esz potrzebowaæ skonfigurowania Twojego systemu
jako serwera nazw:

<ul>
<li>Je¶li posiadasz sieæ LAN w której nie chcia³by¶ kopiowaæ pliku "hosts"
do ka¿dej maszyny, mo¿esz soknfigurowaæ OpenBSD, aby pracowa³ jako
lokalny serwer DNS i serwowa³ adresy IP komputerom w Twojej sieci.
  <ul>
  <li><b>Uwaga:</b> Praktycznie nie ma maksymalnej liczby serwerów DNS
  w sieci LAN. Ka¿dy (lub nawet wszystkie) komputery w sieci LAN mog±
  oferowaæ us³ugi DNS je¶li s± tylko do tego odpowiednio skonfigurowane.
  To, czy który¶ z tych serwerów jest autorytatywny na zewn±trz sieci LAN
  (lub jest wogóle widziany nazewn±trz) jest czynnikiem, który zwykle
  kontrolowany jest przez wy¿szy poziom w hierarchii Twojej domeny.
  </ul>
<li>Je¶li posiadasz sieæ LAN, w której znajduj± siê komputery, które
powinny byæ dostêpne przez zapytania DNS komputerów z innej
sieci LAN lub WAN.
<li>Je¶li masz problemy z rozwi±zywaniem lokalnej nazwy hosta do adresu IP
lub nazw innych hostów nawet, gdy masz poprawnie skonstruowany plik <i>/etc/hosts</i>
i <i>/etc/resolv.conf</i> (Netscape w OpenBSD mo¿e czasami mieæ takie problemy
poniewa¿ korzysta z w³asnej implementacji resolvera zamiast korzystaæ
z funkcji <i>gethostbyname(3)</i>.)
</ul>

<p>
Innym przypadkiem wartym rozwa¿enia jest prêdko¶æ dzia³ania. Poniewa¿
rozwi±zywanie nazwy hosta jest procesem interaktywnym, w którym serwer
nazw odpytuje inne serwery, operacja zamiany nazwy na adres mo¿e potrwaæ.
Je¶li masz modemowe po³±czenie do Internetu i wysy³asz zapytanie do
w³asnego serwera DNS o adres zewnêtrzny (Twój serwer zacznie odpytywaæ
inne serwery poprzez modem), powiniene¶ korzystaæ z serwera nazw Twojego
ISP (który prawdopodobnie ma szybsze po³±czenie do innych serwerów).

<p>
<h3>6.8.3 Z jakich komponentów sk³ada siê serwer DNS?</h3>

<ul>
<li>named <i>("name daemon")</i>
<li>Pliki konfiguracyjne znajduj± siê w drzewie katalogów <i>/var/named/</i>
</ul>

<p>
<h4>6.8.3.1 Które wersje BIND s± wspierane?</h4>
<!-- XXXchanges - changes with OpenBSD 3.3 -->

<p>
BIND jest nazw± specyfikacji serwera nazw domenowych. Komponenty
serwera nazw wspólnie tworz± system BIND.

<p>
S± trzy wersje specyfikacji BIND:

<ol>
<li>BIND 4
<li>BIND 8
<li>BIND 9
</ol>

<p>
W OpenBSD demon <b>named</b> wspiera BIND w wersji 4.x.

<p>
<h4>6.8.3.2 Jakie s± alternatywy udostêpniania DNS korzystaj±c
z innych wersji implementacji BIND?</h4>
<!-- XXXexpires - goes away when 3.2 becomes unsupported -->

<ul>
<li>BIND w wersji 9.x mo¿esz znale¼æ w <i>/usr/ports/net/bind9</i>.(Zobacz
<a href="../../pl/ports.html">ports</a>)
</ul>

<p>
<h5>6.8.3.2.1 <u>Bezpieczeñstwo</u> - uwagi</h5>

<p>
Je¶li korzystasz z alternatywnych implementacji BIND, pamiêtaj, ¿e robisz to
na w³asne ryzyko i ¶wiadomie rezygnujesz z oprogramowania które przesz³o
testy bezpieczeñstwa
<a href="http://www.openbsd.org/security.html">security-audit</a>
- demona <b>named</b> ze standardowej instalacji.
<p>

<h3>6.8.4 Co muszê zainstalowaæ?</h3>

<p>
W zasadzie nic - je¶li podczas konfiguracji sieci w trakcie instalacji
systemu nie pope³ni³e¶ ¿adnych b³êdów, wszystkie potrzebne sk³adniki
masz juz zainstalowane w systemie. Jedyne co Ci pozostaje, to skonfigurowanie
demona nazw ("<tt>named</tt>").

<p>
<h3>6.8.5 Jak skonfigurowaæ DNS?</h3>
<!-- XXXchanges - changes with OpenBSD 3.3 -->

<p>
W OpenBSD konfigurujesz DNS poprzez edycjê i/lub tworzenie plików konfiguracyjnych
demona <tt>named</tt>. Zwykle znajduj± siê one w katalogu <i>/var/named</i> i jego
podkatalogach, w szczególno¶ci plik <i>/var/named/named.boot</i>, który jest
plikiem inicjalizacyjnym dla <b>named</b>. Ponadto w katalogu <i>/etc</i> musisz
wykonaæ kilka innych operacji konfiguracyjnych.

<p>
W tym przyk³adzie skonfigurujemy demona nazw na <i>nemo.yewtopia.com</i>
tak aby by³ podstawowym serwerem nazw dla (bardzo ma³ej!) domeny
<i>yewtopia.com</i>. Adres <i>nemo.yewtopia.com</i> to <i>192.168.1.9</i>.
Dwa inne komputery w podsieci to <i>crater.yewtopia.com</i> maj±cy adres
192.168.1.1 i <i>earhart.yewtopia.com</i> z adresem 192.168.1.2.

<p>
<h4>6.8.5.1 Konfiguracja w katalogu <i>/var/named</i></h4>
<!-- XXXchanges - changes with OpenBSD 3.3 -->

<p>
<h5>6.8.5.1.1 <i>/var/named/named.boot</i></h5>

<blockquote><pre>
; tell what subdir has the lookup database files
directory       /namedb

; type    domain   source host/file backup file
cache     .	   root.cache
primary   0.0.127.IN-ADDR.ARPA  localhost.rev

; example primary server config:
primary  yewtopia.com yewtopia
primary  1.168.192.IN-ADDR.ARPA yewtopia.rev
</pre></blockquote>

<p>
Powy¿szy fragment mówi procesowi inicjalizuj±cemu w którym podkatalogu
i pod jakimi nazwami ma szukaæ plików konfiguracyjnych dla <i>yewtopia.com</i>.

<p>
<h5>6.8.5.1.2 <i>/var/named/namedb/localhost.rev</i></h5>

<blockquote><pre>
; Reverse lookup for localhost interface
@@       IN      SOA     nemo.yewtopia.com.  your_id.nemo.yewtopia.com.  (
                                14      ; Serial
                                3600    ; Refresh
                                900     ; Retry
                                3600000 ; Expire
                                3600 )  ; Minimum
        IN      NS      nemo.yewtopia.com.
1       IN      PTR     localhost.yewtopia.com.
</pre></blockquote>

<p>
<h5>6.8.5.1.3 <i>/var/named/namedb/yewtopia</i></h5>

<blockquote><pre>
; yewtopia.com domain database
@@      IN      SOA     nemo.yewtopia.com.  your_id.nemo.yewtopia.com.  (
                                14      ; Serial
                                3600    ; Refresh
                                900     ; Retry
                                3600000 ; Expire
                                3600 )  ; Minimum
                     IN      NS      nemo.yewtopia.com.

; Addresses
localhost.yewtopia.com.      IN A    127.0.0.1
crater.yewtopia.com.         IN A    192.168.1.1
earhart.yewtopia.com.        IN A    192.168.1.2
nemo.yewtopia.com.           IN A    192.168.1.9
</pre></blockquote>

<p>
<h5>6.8.5.1.4 <i>/var/named/namedb/yewtopia.rev</i></h5>

<blockquote><pre>
; yewtopia domain reverse lookup database
@@      IN      SOA     nemo.yewtopia.com.  your_id.nemo.yewtopia.com.  (
                                14      ; Serial
                                3600    ; Refresh
                                900     ; Retry
                                3600000 ; Expire
                                3600 )  ; Minimum
1.168.192.in-addr.arpa. IN      NS      nemo.yewtopia.com.

; Addresses
1.1.168.192.in-addr.arpa. IN PTR crater.yewtopia.com.
2.1.168.192.in-addr.arpa. IN PTR earhart.yewtopia.com.
9.1.168.192.in-addr.arpa. IN PTR nemo.yewtopia.com.
</pre></blockquote>

<p>
<h4>6.8.5.2 Konfiguracja w katalogu <i>/etc</i></h4>

<p>
<h5>6.8.5.2.1 <i>/etc/resolv.conf</i></h5>

<p>
Upewnij siê, ¿e plik <i>/etc/resolv.conf</i> zawiera informacje o domenie
lokalnej komputera (zamiast np. serwera nazw Twojego ISP) czyli nazwy
domeny, któr± aktualnie konfigurujesz aby by³a serwowana przez <b>named</b>.

<blockquote><pre>
domain yewtopia.com
lookup file bind
</pre></blockquote>

<p>
<h4>6.8.5.2.2 <i>/etc/hosts</i></h4>

<p>
Je¶li wcze¶niej dodawa³e¶ wpisy o innych komputerach do pliku
<i>/etc/hosts</i> mo¿esz teraz skróciæ go do domy¶lnej zawarto¶ci:

<blockquote><pre>
# Host addresses
127.0.0.1       localhost       localhost.localdomain
192.168.1.9     nemo            nemo.yewtopia.com
</pre></blockquote>

<p>
Teraz <b>named</b> nie bêdzie korzysta³ z (mog±cych byæ ju¿ nieaktualnymi)
adresów w pliku <i>/etc/hosts</i>. <u>Upewnij siê czy posiadasz w <i>/etc/hosts</i>
przynajmniej wpis <i>localhost</i></u>. Jest on niezbêdny do poprawnego
zainicjowania sieci! Tak¿e nazwa <i>nemo</i> powinna siê pojawiæ w swoim w³asnym
pliku hostów, w przeciwnym razie uj¿ysz seriê b³êdów podczas uruchamiania
systemu gdy <i>/etc/netstart</i> wywo³uje
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=route&amp;sektion=8">route(8)</a>
aby dodaæ wpis <i>nemo</i> (który pojawia siê w <i>/etc/myname</i>).

<p>
<h4>6.8.5.3 Korzystanie z  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dig&amp;sektion=1">dig(1)</a>
 do wy¶wietlenia wyników konfiguracji.</h4>

<blockquote><pre>
$ <strong>dig @@nemo.yewtopia.com yewtopia.com any any</strong>

; &lt;&lt;&gt;&gt; DiG 2.2 &lt;&lt;&gt;&gt; @@nemo.yewtopia yewtopia any any
; (1 server found)
;; res options: init recurs defnam dnsrch
;; got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 59904
;; flags: qr rd ra; Ques: 1, Ans: 2, Auth: 0, Addit: 1
;; QUESTIONS:
;;      yewtopia.com, type = ANY, class = ANY

;; ANSWERS:
yewtopia.com.   3600    SOA    nemo.yewtopia.com.  your_id.nemo.yewtopia.com. (
                        14      ; serial
                        3600    ; refresh (1 hour)
                        900     ; retry (15 mins)
                        3600000 ; expire (41 days 16 hours)
                        3600 )  ; minimum (1 hour)
yewtopia.com.   3600    NS      nemo.yewtopia.com.

;; ADDITIONAL RECORDS:
nemo.yewtopia.com.  3600    A       192.168.1.9

;; Total query time: 4 msec
;; FROM: nemo to SERVER: nemo.yewtopia.com  192.168.1.9
;; WHEN: Tue May  2 23:47:19 2000
;; MSG SIZE  sent: 25  rcvd: 102
</pre></blockquote>

<p>
<h3>6.8.6 Jak i kiedy uruchamiaæ i zatrzymywaæ?</h3>

<p>
<h4>6.8.6.1 Uruchamianie DNS</h4>

<p>
Demon <b>named</b> uruchamiany powinien byæ w momencie uruchamiania systemu przez
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc&amp;sektion=8">/etc/rc</a>
je¶li poni¿szy wiersz znajduje siê domy¶lnie w
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rc.conf&amp;sektion=8">/etc/rc.conf</a>.

<blockquote><pre>
named_flags=NO          # for normal use: ""
</pre></blockquote>

<p>
i jest zmodyfikowany do postaci

<blockquote><pre>
named_flags=""          # for normal use: ""
</pre></blockquote>

<p>
Ponadto zwróæ uwagê na inne linie w /etc/rc.conf:

<blockquote><pre>
named_user=named                # Named nie powinien byæ uruchamiany i pracowaæ z uprawnieniami roota
named_chroot=/var/named         # Gdzie zamkn±æ (chroot) named`a
</pre></blockquote>

<p>
Te domy¶lne opcje bêd± dobre dla wiêkszo¶ci konfiguracji.

<p>
Aby uruchomiæ <b>named</b> "z palca" skorzystaj z komendy
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ndc&amp;sektion=8">ndc(8)</a>.
Dla przyk³adu:

<blockquote><pre>
# <strong>ndc start</strong>
          lub
# <strong>ndc restart</strong>
</pre></blockquote>

<p>
<h4>6.8.6.2 Zatrzymywanie DNS</h4>

<p>
Najlepsz± metod± na zatrzymanie demona nazw jest u¿ycie
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ndc&amp;sektion=8">ndc(8)</a>.
Przyk³ad:

<blockquote><pre>
# <strong>ndc stop</strong>
</pre></blockquote>

<p>
Je¶li to nie zadzia³a, znajd¼ id procesu named i u¿yj polecenia
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kill&amp;sektion=1">kill(1)</a>
aby zakoñczyæ ten proces. Numer PID dla demona <i>named</i> gdy jest on
uruchomiony znajduje siê w pliku
<i>/var/named/named.pid</i>

<blockquote><pre>
# <strong>cat /var/named/named.pid</strong>
4608
named -t /var/named -u named
# <strong>kill -KILL 4608</strong>
</pre></blockquote>

<p>
<h4>6.8.6.3 Restartowanie DNS z uaktualnion± konfiguracj±</h4>

<p>
Aby zmusiæ uruchomionego named`a do restartu i ponownego przeczytania
plików konfiguracyjnych wy¶lij do niego sygna³ "hangup":

<blockquote><pre>
# <strong>kill -HUP 4608</strong>
</pre></blockquote>

<p>
lub u¿yj komendy
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ndc&amp;sektion=8">ndc(8)</a>
w poni¿szy sposób:

<blockquote><pre>
# <strong>ndc reload</strong>
</pre></blockquote>

<p>
<h3>6.8.7 Jak blokowaæ zapytania AXFR? </h3>

<p>
przyk³ad:

<blockquote><pre>
garden:/home/jeremy$<strong>  host -l openssh.com</strong>
openssh.com.            NS      zeus.theos.com.
openssh.com.            NS      cvs.openbsd.org.
openssh.com.            NS      gandalf.sigmasoft.com.
openssh.com.            NS      cs.colorado.edu.
openssh.com.            NS      ns.appli.se.
openssh.com.            A       199.185.137.4
cvs.openssh.com.        A       199.185.137.4
localhost.openssh.com.  A       127.0.0.1
</pre></blockquote>

<p>
Ta informacja u¿yteczna jest w przyadku debugowania swojej konfiguracji
DNS, w kilku przypadkach mo¿esz nie chcieæ publikowania tych informacji
publicznie. Je¶li u¿ywasz bezklasowej zwrotnej delegacji in-addr (rfc2317),
host -l mo¿e wy¶wietliæ informacje o ka¿dej domenie któr± Twój host utrzymuje!
Mo¿esz zaradziæ temu w bardzo prosty sposób - dodaj±c opcjê 'allow-transfer'
w Twoich pliku stref.

<br><br>

Je¶li u¿ywasz BIND`a 8 musisz wyspecyfikowaæ kosty, którym chcesz zezwoliæ
na transfer stref indywidualnie w plikach stref:

<blockquote><pre>
zone "foo.com" in {
        type master;
        file "directory/zonefile";
        allow-transfer {
          127.0.0.1;
          10.0.0.6;
          10.0.255.12;
        };
};
</pre></blockquote>

<p>
Mo¿esz tak¿e zablokowaæ transfer dla wszystkich domen, poprzez edycjê
/var/named.conf i dodaæ parametr 'allow-transfer' w sekcji 'options'
pliku konfiguracyjnego:

<blockquote><pre>
   options {
        allow-transfer { 127.0.0.1; };
    };
</pre></blockquote>

<p>
Ta metoda dzia³a równie¿ w implementacji BIND 9.<br>
Je¶li korzystasz z BIND 4 (domy¶lny w OpenBSD), mo¿esz wyedytowaæ
/var/named/named.boot i skorzystaæ z opcji 'xfrnets'.

<blockquote><pre>
xfrnets 209.142.221.5 12.7.96.7
; type    domain                source host/file                backup file
cache     .                                                     root.cache
primary   0.0.127.IN-ADDR.ARPA  localhost.rev
</pre></blockquote>

<p>
BIND 4 zezwala na transfer stref ze wszystkich klas, wiêc nie dzia³a
to dok³adnie tak samo. Zazwyczaj, jedynymi hostami które powinny mieæ
mo¿liwo¶æ transferu s± Twoje zapasowe (slave) serwery DNS oraz hosty,
z których zamierzasz debugowaæ konfiguracjê (np. 127.0.0.1). Zablokowanie
zapytañ AXFR dodaje dodatkowy poziom prywatno¶ci, ale mo¿e przeszkadzaæ
w uzyskiwaniu informacji debuguj±cych. (Dziêki
<a href="mailto:ntang@@nachtwache.org">Nicholas Tang</a> za tê podpowied¼)

<p>
<h3>6.8.8 Czego jeszcze nie wiem o konfiguracji DNS?</h3>

<p>
Naprawdê ca³ej masy rzeczy, dla przyk³adu, w jaki sposób skonfigurowaæ DNS
tak, aby zapytania o domenê intranetow±, która nie jest widzialna z g³ównej
hierarchii domenowej zosta³y przekierowane do serwerów wewn±trz Twojego
przedsiêbiorstwa. Przeczytaj
<a href="#DNS.1.1">rekomendowane dokumenty</a> aby znale¼æ wiêcej informacji o DNS.

d1343 2
a1344 2
Originally [OpenBSD: faq6.html,v 1.169 ]<br>
$Translation: faq6.html,v 1.7 2003/07/02 10:07:07 pl-team Exp $<br>
@


1.6
log
@sync with steelix translation CVS
@
text
@d109 1
a109 1
<a href="../../plat.html">listê urz±dzeñ wspieranych przez OpenBSD</a> dla odpowiedniej platformy.
d3444 1
a3444 1
$Translation: faq6.html,v 1.6 2003/06/14 17:02:59 pl-team Exp $<br>
@


1.5
log
@
sync with steelix translation CVS
@
text
@d3443 2
a3444 2
Orginally [OpenBSD: faq6.html,v 1.169 ]<br>
$Translation: faq6.html,v 1.5 2003/05/18 21:45:10 pl-team Exp $<br>
@


1.4
log
@
sync with steelix translation CVS
@
text
@d650 1
a650 1
co stanie siê gdy dodamy <em>quick</em> do regu³y $quot;block in&quot;:
d3444 1
a3444 1
$Translation: faq6.html,v 1.4 2003/05/11 02:19:11 pl-team Exp $<br>
@


1.3
log
@
sync with steelix translation CVS
@
text
@d54 1
a54 1
i zrozumienie sekcji 5 FAQ <a href="faq5.html">konfiguracja i instalacja j±dra</a>, 
d64 1
a64 1
bardziej w sieci IP, powiniene¶ przeczytaæ poni¿szy znakomity dokument 
d67 1
a67 1
Dokument ten zawiera fundamentalne informacje na temat sieci IP, jest przydatny 
d72 1
a72 1
ftp czy te¿ pocztowymi mo¿esz dowiedzieæ siê wielu interesuj±cych rzeczy
d78 2
a79 2
RFC definiuj± tysi±ce standardów opisuj±cych protoko³y sieciowe, 
ich dzia³anie oraz sposób w jaki powinne zostaæ realizowane.
d93 2
a94 2
s± one wed³ug typu sterownika a nie typu po³±czenia (jak ma to miejsce np. w 
Linuksie). Mo¿esz zobaczyæ w jaki sposób system wykry³ Twoj± kartê podczas 
d97 1
a97 1
Aktualn± konfiguracjê interfejsów sieciowych mo¿esz zobaczyæ przy pomocy 
d108 1
a108 1
Je¶li nie wiesz jak nazywa siê Twoje urz±dzenie sieciowe przej¿yj 
d112 1
a112 1
w³a¶nie synonimu (jak fxp) oraz numeru przyznanego urz±dzeniu przez j±dro systemu 
d127 2
a129 2
        inet6 ::1 prefixlen 128
        inet6 fe80::1%lo0 prefixlen 64 scopeid 0x5
d162 1
a162 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a> 
d166 1
a166 1
warto¶ci &quot;inet 10.0.0.38 netmask 0xffffff00 broadcast 10.0.0.255&quot;.  
d176 1
a176 1
 - interfejs pêtli zwrotnej (Loopback Interface) 
d190 1
a190 1
 - interfejs sieci wirtualnych budowanych na urz±dzeniach zgodnych z IEEE 802.1Q 
d231 1
a231 1
drugi koniec po³±czenia. Je¶li nie ma ku temu wyra¼nych powodów nie jest zalecane 
d244 1
a244 1
Nastêpnym krokiem jest ustalenie domy¶lnej bramki (trasy rutowania). 
d246 1
a246 1
<i>/etc/mygate</i>. Dziêki temu Twój system bêdzie poinformowany 
d248 2
a249 2
ustalenie serweów nazw i edycjê pliku <i>/etc/hosts</i> (zobacz
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hosts&amp;sektion=5">hosts(5)</a>). 
d251 1
a251 1
musisz stworzyæ (o ile jeszcze nie istnieje) plik <i>/etc/resolv.conf</i>. 
d253 1
a253 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=resolv.conf&amp;sektion=5">resolv.conf(5)</a>. 
d255 1
a255 1
zak³adamy w nim, ¿e serwery nazw maj± adresy 125.2.3.4 i 125.2.3.5 
d268 1
a268 1
ponownie komputer, b±d¼ uruchomiæ skrypt <strong>/etc/netstart</strong>. 
d280 1
a280 1
Zauwa¿ ¿e uruchomienie skryptu spowodowa³o wyst±pienie kilku b³êdów.
d285 1
a285 1
tak jak planowa³e¶ pos³u¿ siê narzêdziem 
d287 1
a287 1
Trasy rutowania mo¿esz obejrzeæ korzystaj±c z 
d334 1
a334 1
ma stanowiæ bramkê do Internetu, zalecane jest przeczytanie instrukcji 
d337 1
a337 1
przestrzeñ adresów 
d345 1
a345 1
do dzia³ania, wymaga ono jednak inicjalizacji. Powiniene¶ do tego celu skorzystaæ z 
d348 1
a348 1
plik <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl.conf&amp;sektion=5">/etc/sysctl.conf(5)</a>
d357 2
a358 2
z narzêdzia <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sysctl&amp;sektion=8">sysctl(8)</a>
Pamiêtaj, ¿e po ponownym uruchomieniu komputera, je¶li nie wyedytujesz pliku 
d385 1
a385 1
OpenBSD posiada prosty mechanizm nadawania aliasów IP na interfejsy. 
d393 1
a393 1
<b>dc0</b> i znajduje siê w sieci 192.168.0.0. Pozosta³e istotne 
d412 1
a412 1
Zak³adaj±c ¿e u¿ywasz wielu adresów IP które nale¿± do tej samej 
d414 1
a414 1
warto¶æ 255.255.255.255. Nie musissz powielaæ w ka¿dym przypadku 
d416 1
a416 1
przyk³adzie, plik <i>/etc/hostname.dc0</i>, zawiera definicje dwóch 
d428 2
a429 2
Po wyedytowaniu pliku, jedyne co musisz zrobiæ to uruchomiæ ponownie
komputer, aby wprowadziæ powy¿sze zmiany w konfiguracji. Naturalnie, mo¿esz
d431 2
a432 2
narzêdzia <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ifconfig&amp;sektion=8">ifconfig(8)</a>. 
Do uaktywnienia pierwszego aliasu z powy¿szego przyk³adu powiniene¶ 
d446 1
a446 1
        inet 192.168.0.2  netmask 0xffffff00 broadcast 192.168.0.255
a454 1
<!-- XXXrelease -->
d459 1
a459 1
adresów hostów/podsieci na adresy zewnêtrzne. Plikiem konfiguracyjnym dla 
d461 1
a461 1
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.3">/etc/pf.conf(5)</a></i>. 
d477 2
a478 2
<li><b><a href="#NAT">Translacja zdresów (NAT) i regu³y przekierowuj±ce:</a></b> 
NAT pozwala na dostêp do Internetu wielu komputerom, wykorzystuj±c 
d485 1
a485 1
Nie jest wymagane istnienie ka¿dej z tych sekcji, jednak te które wystêpuj±,
d500 1
a500 1
warto¶æ <tt>net.inet.ip.forwarding</tt> na 1, aby umo¿liwiæ przekazywanie
d508 1
a508 1
uaktywniony w pliku 
d510 1
a510 1
mo¿esz w³±czyæ go bezpo¶rednio bez konieczno¶ci ponownego uruchamiania systemu
d545 1
a545 1
<a href="http://www.benzedrine.cx/pf.html">Packet Filter web site</a> 
d547 1
a547 1
<a href="http://www.inebriated.demon.nl/pf-howto/">Packet Filter HOWTO</a>. 
d554 2
a555 2
musisz ustawiæ w pliku <i>/etc/rc.conf</i> warto¶æ zmiennej <tt>pf=YES</tt>.  
Filtr pakietów kontrolowany jest przez plik konfiguracyjny <i>/etc/pf.conf</i>, 
d558 1
a558 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.3">pf.conf(5)</a>. 
d573 1
a573 1
pass out all 
d596 2
a597 2
portu us³ugi któr± zamierzasz filtrowaæ. Do twozenia regu³ wykorzystaæ
mo¿esz ka¿dy z protoko³ów znajduj±cych siê w 
d599 1
a599 1
wyra¿aj±c go jako nazwê b±d¼ numer. W tej chwili skoncentrujemy siê na 
d606 2
a607 2
Do dzie³a, powiedzmy ¿e nie chcemy zezwalaæ na ¿adne po³±czenia IPv4 do
portu 3306 warstwy TCP (MySQL), poniewa¿ baza danych powinna byæ 
d619 5
a623 5
z jakiegokolwiek ¼ród³a przeznaczone do jakiegokolwiek celu pod port TCP 3306&quot;.
Zauwa¿ ¿e w przypadku gdy regu³a filtruj±ca opiera siê na porównaniu 
numeru portu, musisz jawnie sprecyzowaæ jakiego protoko³u warstwy transportowej 
ma dotyczyæ a tak¿e zaleca siê podanie rodziny adresów.
Dla us³ug zdefiniowanych w pliku 
d641 1
a641 1
wtedy pakiet przeznaczony do portu 3306 TCP zostanie przepuszczony, poniewa¿ 
d647 1
a647 1
Oczywi¶cie od ka¿dej zasady s± wyj±tki. S³owo kluczowe <em>quick</em> 
d659 1
a659 1
Pakiet przeznaczony do portu 3306 TCP bêdzie pasowa³ do regu³ki 
d661 3
a663 3
natychmiast odrzucony. Wszystkie pakiety przeznaczone do innych 
portów lub protoko³ów bêd± dalej przetwarzane dopóki nie dotr±
regu³ki &quot;pass in&quot; do której bêd± pasowaæ i która zezwoli
d670 2
a671 2
odrzucaniu pakietów, zgodnie z zasad± mówi±c± ¿e ka¿dy ruch który nie jest 
dozwolony jest zabroniony. Taka polityka jest znacznie bezpieczniejsza 
d673 2
a674 2
powoduje znaczne zmniejszenie liczby regu³ek oraz chroni przed przypadkowo 
opuszczonymi konfiguracjami regu³ek dla us³ug staj±cymi siê w ten sposób
d699 1
a699 1
miejsca ? Oto rozwi±zanie:
d710 3
a712 3
Ca³kiem nie¼le, a jak wygl±da³yby regu³ki gdyby¶my chcieli zezwoliæ
tylko jednemu komputerowi (o adresie 1.1.1.1) na zdalne administrowanie 
systemem ? W takim przypadku zmienimy regu³kê:
d732 1
a732 1
nasz filtr pakietów je zobaczy naka¿emu mu aby odrzuca³ po³±czenia z tych
d756 1
a756 1
# oraz wszystkim na po³±czenia http i https 
d771 1
a771 1
próby po³±czenia z portem 22 (ssh) zosta³y zalogowane ? S³u¿y do tego s³owo
d781 1
a781 1
druga  odrzuci i zaloguje wszystkie inne próby po³±czeñ.
d787 1
a787 1
zwykle loguj±cy pakiety do <i>/var/log/pflog</i> w binarnym formacie 
d818 2
a819 2
Takie dzia³anie NIE wp³ywa na to co zostanie zapisane w pliku
<i>/var/log/pflog</i>.  
d822 2
a823 2
Podczas analizowania logów, uwagê nale¿y zwracaæ na szczegó³owe dekodowanie 
protoko³ów przez tcpdump (tryb verbose aktywowany opcj± -v). Dekoder 
d830 1
a830 1
96 bajtów pakietu i loguje je. Dostêp do takich zalogowanych informacji 
d832 1
a832 1
protoko³ów oraz logowañ poprzez 
d841 1
a841 1
byæ za³atwione przez 2 proste skrypty pow³oki z minimalnymi smianami 
d855 1
a855 1
Po dodaniu u¿ytkownika <em>pflogger</em> nale¿y stworzyæ dwa mastêpuj±ce skrypty:
d935 1
a935 1
Je¶li doda³e¶ te¿ informacje o zdalnym logowaniu na ho¶cie <i>syslogger</i> to 
d961 1
a961 1
W jaki sposób zezwoliæ na ustanawianie po³±czeñ do us³ug wykorzystuj±cych 
d963 1
a963 1
jak i UDP ? Filtr pakietów zezwala na ³±czenie ze sob± parametrów w zbiory
d983 5
a987 5
<p> 
Normalizacja pakietów oznacza ponowne przetwarzanie nag³ówków pakietów 
pofragmentowanych oraz usuwanie nieprawid³owo¶ci z opcji IP. Niektóre systemy 
operacyjne maj± problemy z niew³a¶ciwie pofragmentowanymi pakietami i 
generalnie jest to dobry pomys³ aby mieæ znormalizowane pakiety przed 
d990 1
a990 1
Do normalizacji s³u¿y s³ówko kluczowe <b>scrub</b> u¿ywane tak jak poni¿ej:
d1006 2
a1007 2
utrudniæ, przeznaczonym do tego programom takim jak nmap, wykrywanie systemu 
operacyjnego na zdalnym ho¶cie (&quot;OS fingerprinting&quot;).  
d1009 1
a1009 1
np. wykorzystuj±cych multicasting lub IGMP, mo¿esz u¿yæ dyrektywy 
d1020 2
a1021 2
obs³ugiwaæ po³±czenia nawi±zane oraz stan po³±czeñ. Zalecane jest
aby u¿ytkownicy którzy zamierzaj± filtrowaæ pakiety na podstawie
d1024 1
a1024 1
(np. aby utrudniæ wykrycie systemu operacyjnego takim narzêdziom 
d1038 1
a1038 1
pakiety nale¿±ce do tego po³±czenia nie bêd± ju¿ przechodziæ 
d1049 1
a1049 1
skorzystaæ z 
d1052 2
a1053 2
przegl±darki 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lynx&amp;sektion=1">lynx(1)</a> 
d1060 3
a1062 3
zezwolimy na wej¶cie pakietom przychodz±cym w odpowiedzi na po³±czenia
które zainicjowali¶my, jak dla przyk³adu gdy korzystamy z przegl±darki
stron www. Pamiêtaj, do utrzymywania stanu musisz wyspecyfikowaæ 
d1076 1
a1076 1
zezwalamy na ruch TCP do portu 80 &amp; 443. Mo¿emy zaostrzyæ 
d1079 1
a1079 1
pierwszego pakietu rozpoczynaj±cego trójfazowe ustanawianie 
d1081 1
a1081 1
portu oraz zezwolic naszej regu³ce utrzymuj±cej stan (&quot;keep state
d1086 2
a1087 2
zabezpieczymy siê przed ró¿nymi formami skanowania portów jak np. 
skanowanie pakietami z flag± FIN (FIN ssanning). Flagi S/SA oznaczaj±:
d1106 1
a1106 1
polityke odrzucania pakietów, zezwala na po³±czenia ssh tylko 
d1108 3
a1110 3
z zewn±trz jak i wewn±trz do portów 80 (http) i 443 (https).
Nasz zestaw zapewnia tak¿e ochronê przed podszywaniem siê pod 
nierutowalne adresy IP oraz odk³ada pakiety które s± zbyt pofragmentowane
d1124 1
a1124 1
# domy¶lnie blokujemy wszystkie przychodz±ce pakiety za wyj±tkiem 
d1167 1
a1167 1
u¿yte wszêdzie tam gdzie mog³y byæ u¿yte pojedyncze adresy IP.
d1181 4
a1184 4
Problemem w powy¿szym pliku <i>pf.conf</i> jest to, ¿e gdyby¶ zechcia³ 
zmieniæ swój interfejs sieciowy lub jeden z adresówm IP musia³by¶
wprowadziæ te zemiany we wszystkich linijkach w których s± wystêpuj±
zmieniane przez Ciebie warto¶ci. W takich przypadkach porêcznie jest
d1243 1
a1243 1
Pamiêtaj ¿e <i>/var/log/pflog</i> jest plikiem binarnym i czytany byæ mo¿e przez<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tcpdump&amp;sektion=8&amp;manpath=OpenBSD+3.3">tcpdump(8)</a>.
d1247 1
a1247 1
<b>pfctl -R /etc/pf.conf</b> aby PF wiedzia³ o poczynionych przez Ciebie 
d1266 2
a1267 2
Na podstawie 
<a href="http://www.geektools.com/rfc/rfc1631.txt">RFC 1631</a>, 
d1270 1
a1270 1
u¿yteczne w przypadku gdy nie masz oficjalnie przyznanego adresu IP
d1272 1
a1272 1
Gdy konfigurujesz swoj± wewnêtrzn± sieæ mo¿esz skorzystaæ do tego z 
d1274 1
a1274 1
<a href="http://www.geektools.com/rfc/rfc1918.txt">RFC 1918</a>), 
d1283 2
a1284 2
Zak³adamy ¿e posiadasz zainstalowane i skonfigurowane OpenBSD
na komputerze z dwoma kartami sieciowymi z których jedna pod³±czona
d1294 1
a1294 1
powy¿szej b±d¼ ostro¿ny wprowadzaj±c swoje zmiany w taki sposób
d1326 3
a1328 3
W seci mog± znajdowaæ siê rozmaite systemu operacyjne jak Windows 98,
WIndows NT, OpenBSD, Linux, jednak rodzaj systemu operacyjnego klientów
nie wp³ywa na dzia³anie NAT. Dla przyk³adu, klient w sieci wewnêtrznej 
d1340 1
a1340 1
+---- Inni 
d1372 2
a1373 2
znana tak¿e jako maskowanie IP (&quot;IP Masquerading&quot;) 
w Linuksie) zezwala na dostêp do Internetu wielu komputerom 
d1375 2
a1376 2
ma przypisany indywidualny, niezarejestrowany  adres IP w sieci 
wewnêtrznej, (<a href="http://www.geektools.com/rfc/rfc1918.txt">RFC 1918</a>), 
d1381 1
a1381 1
Sposób w jaki pracuje NAT jest prosty. Gdy klient z sieci LAN zechce
d1388 2
a1389 2
aby zmyliæ komputer docelowy, bêdzie on uwa¿a³ ¿e po³±czenie pochodzi 
od komputera wykonu±cego NAT a nie w³a¶ciwej maszyny wysy³aj±cej
d1391 1
a1391 1
nastêpnie rozpoznaje odpowied¼, szybko zmienia adres docelowy z 
d1394 1
a1394 1
te operacje s± przezroczyste dla ka¿dej aplikacji pracuj±cej na 
d1398 1
a1398 1
Poni¿szy przyk³ad mo¿e conieco rozja¶niæ:
d1422 3
a1424 3
serwera proxy lub konfiguracja NAT. (Nie my¶l ¿e przyk³ad z modemem
kablowym jest dziecinny, NAT jest na tyle potê¿ny aby maskowaæ ogromne 
sieci z setkami a nawet tysi±cami pracuj±cymi w nich komputerów!)
d1429 1
a1429 1
wspó³lokatorami i perspektywa dzielenia kosztów dostêpu do Internetu 
d1434 1
a1434 1
adresów aby umo¿liwiæ wszystkim komputerom jednoczesny dostêp
d1438 1
a1438 1
Dziêki NAT ka¿da maszyna mo¿e mieæ unikatowy adres IP w sieci 
d1440 1
a1440 1
przez naszego dostawcê. 
d1452 1
a1452 1
<b>/etc/rc.conf</b> (ten plik u¿ywany jest do startowania us³ug 
d1489 1
a1489 1
Regu³ki odpowiadaj±ce za NAT w pliku konfiguracynym 
d1491 1
a1491 1
maj± bardzo prost± sk³adniê. Dla konfiguracji przedstawionej 
d1520 1
a1520 1
<dd>Zewnêtrzny adres IP na który mapowane (zmieniane) bêd± adresy IP
d1532 1
a1532 1
Teraz, gdy konfiguracja jest zakoñczona istniej± dwa sposoby aby 
d1534 1
a1534 1
komputera. Mo¿esz to zrobiæ komend± "<i>reboot</i>". 
d1537 1
a1537 1
Je¶li chcia³by¶ uruchomiæ NAT bez restartu mo¿esz skorzystaæ z 
d1548 2
a1549 2
systemu jest najlepsz± metod± na to aby przekonaæ siê ¿e po ponownym
uruchomieniu wszystko dzia³a tak jak tego siê spodziewa³e¶.
d1567 2
a1568 2
siê ¿e zmiany w konfiguracji zasz³y tak jak zamierza³e¶, skorzystaj
z opcji "-ss". Dziêki niej wy¶wietlone zostan± wszystkie sesje które
d1584 1
a1584 1
Widoczny jest równie¿ numer portu z którego pochodzi po³±czenie (2132).
d1615 2
a1616 2
FTP i wysy³a ¿±danie informacji lub pliku, klient FTP wysy³a do 
serwera losowy numer portu do którego ma pod³±czyæ siê serwer 
d1619 1
a1619 1
Gdy serwer FTP chce wys³aæ dane, próbuje nawi±zaæ po³±czenie do 
d1628 1
a1628 1
w OpenBSD), to klient ¿±da aby serwer wybra³ losowy numer portu i na nim
d1630 4
a1633 4
klienta o numerze portu który wybra³, klient ³±czy siê ze wskazanym 
portem i nastêpuje transfer danych. Niestety nie zawzse jest to mo¿liwe.
ftp(1) u¿ywa tego trybu domy¶lnie; aby wymusiæ aktywny tryb FTP, 
skorzystaj z flagi -A, lub u¿yj komendy 
d1643 1
a1643 1
Filtr pakietów dostarcza pewne rozwi±zanie dla takiej sytuacji, 
d1647 1
a1647 1
Aby go aktywowaæ, dodaj linijkê analogiczn± do poni¿szej w swoim 
d1668 1
a1668 1
oraz ponowne uruchomienie komputera, lub wys³anie sygna³u 'HUP' do 
d1670 1
a1670 1
Jedn± z komend którymi mo¿na wys³aæ sygna³ 'HUP' jest:
d1677 1
a1677 1
Zauwa¿ysz teraz ¿e ftp-proxy nas³uchuje na porcie 8021, tym samym pod
d1679 1
a1679 1
do serwerów FTP. Wybór portu 8021 jest dobry, poniewa¿ nie jest on 
d1687 1
a1687 1
Niekiedy mo¿e siê zda¿yæ ¿e bêdziesz potrzebowa³ przekierowaæ 
d1695 1
a1695 1
dyrektywy 'rdr' w regu³kach NAT aby poinformowaæ system w jaki 
d1700 2
a1701 2
adresep 192.168.1.80. Regu³ki NAT wymagaj± zastosowania nowej dyrektywy
aby przekierowaæ do neigo ruch. Do Twojego pliku  <i>/etc/pf.conf</i>
d1719 1
a1719 1
<dd>Interfejs sieciowy który jest pod³±czony do Internetu.
d1731 3
a1733 3
<dd>Oto port (80) do którego po³±czenia powinny zostaæ przekierowywane.
Jako taki numer "80" nie musi zostaæ u¿yty. Mo¿esz sko¿ystaæ z wpisu
"port www". Je¶li wolisz korzystaæ z nazwy zamiast numeru, upewnij 
d1741 1
a1741 1
Zauwa¿ ¿e port docelowy do którego przekierowujemy po³±czenie nie musi 
d1761 2
a1762 2
Czsami, mo¿esz zechcieæ wprowadziæ pewne wyj±tki do przekierowuj±cych 
regu³ek NAT. Oto przyk³ad. Komunikator AOL robi tak nieprzyjemne 
d1764 1
a1764 1
port. Mo¿na zauwa¿yæ ¿e czasami dochodzi do konfliktu z naszym ftp-proxy
d1766 1
a1766 1
Gdy uznasz ¿e nie podobaj± Ci siê takie praktyki AOL (wielu ludzi
d1768 1
a1768 1
wykluczyæ adres IP wykorzystywany przez serwery AOL z naszej 
d1790 1
a1790 1
Ró¿nica pomiêdzy NAT a oprogramowaniem typu proxy jest wyra¼na. Aplikacje
d1792 1
a1792 1
Nie wszystkie aplikacje zdolne s± o wspó³pracy z oprogramowaniem proxy,
d1795 1
a1795 1
NAT jest tworem transparentnym, mapuje wewnêtrzne adresy sieciowe tak, 
d1797 2
a1798 2
po stronie klienta nie zdaj± sobie tak naprawdê spraw z tego ¿e w sieci
pracuje host wykonuj±cy NAT. Jedynym plusem wynikaj±cym z zastosowania 
d1800 1
a1800 1
ruchu i wychwytywanie wirusów i robaków na które podatne s± Windows, 
d1819 2
a1820 2
Jednak w przypadku gdy testujemy regu³kê z komputera w naszej sieci lookalnej,
zauwa¿amy ¿e nie dzia³a. Przyczyn± jest to ¿e regu³ka przekierowuj±ca
d1823 1
a1823 1
w sieci lokalnej wcale nie oznacza ¿e pakiety musz± wêdrowaæ przez zewnêtrzny
d1827 2
a1828 2
w momencie gdy przesz³y tylko przez wewnêtrzny interfejs. Takie pakiety fizycznie 
nie wêdruj± przez zewnêtrzny interfejs a stos TCP/IP nie symuluje w ¿aden
d1836 1
a1836 1
problemu. Gdy klient z sieci lokalnej ³±cze siê z zewnêtrznym adresem IP 
d1844 3
a1846 3
Firewall nigdy nie dostanie odpowiedzi od serwera która móg³by poprawnie
przes³aæ z powrotem do klienta, co spowoduje ¿e klient otrzyma pakiet TCP
ze ¼ród³a którego siê nie spodziewa³ i go odrzuci, nawi±zywanie po³±czenia
d1850 2
a1851 2
Czêsto jest po¿±dane, aby hosty w sieci LAN mog³y ³±czeæ siê z tym samym
serwerem lokalnym tak jak hosty z zewn±trz, transparentnie (bez dodatkowej 
d1853 1
a1853 1
Oto kilka rozwi±zañ które mog± pomóc rozwi±zaæ ten problem:
d1869 1
a1869 1
i przeniesienie serwera do takiej sieci dedykowanej (DMZ) pozwoli na 
d1873 1
a1873 1
serwera tak¿e od klientów lokalnych. Jednak¿e nale¿y pamiêtaæ o tym 
d1875 1
a1875 1
do hostów lokalnych - wszystkie po³±czenia bêd± musia³y przej¶æ przez 
d1881 3
a1883 3
TCP proxy mo¿e byæ skonfigurowany na ho¶cie na którym pracuje firewall,
nas³uchuj±c na porcie który ma zostaæ przekierowany oraz przechwytuj±c 
po³±czenia z interfejsu lokalnego i przekierowywaæ je do portu na którym
d1889 1
a1889 1
Proste proxy mo¿na stworzyæ korzystaj±c z 
d1893 2
a1894 2
Poni¿szy wpis w <i>/etc/inetd.conf</i> tworzy gniazdo przypisane do 
interfejsu loopback i portu 5000. Po³±czenia s± przekierowywane do 
d1912 1
a1912 1
Mo¿na równie¿ uzyskaæ translacjê adresu ¼ród³owego poprzez wprowadzenie 
d1923 2
a1924 2
zostanie ponownie poddany NAT w chwili gdy zostanie przekierowany na
zewnêtrzny interfejs, adres ¼ród³owy kleinta zostanie zamieniony na adres 
d1927 1
a1927 1
loaklnej. Taka konstrukcja jest do¶æ z³o¿ona dziêki tem ¿e tworzy
d1929 2
a1930 2
Trzeba zwróciæ uwagê na odpowiedni± konfiguracjê NAT w taki sposób, aby 
regu³ki nie akceptowa³y innych pakietów ni¿ te które dopuszczasz, dla
d1932 1
a1932 1
firewalla. Zauwa¿ ¿e regu³ka rdr powy¿ej, spowoduje ¿e stos TCP/IP bêdzie 
d1934 2
a1935 2
naszej sieci lokalnej. Aby zapobiec generowaniu informacji o przekierowaniach 
ICMP przez stos (mówi±cych klientowi ¿e serwer jest dostêpny lokalnie)
d1967 1
a1967 1
<p> 
d1969 2
a1970 2
<a name= "6.4"></a> 
<h2>6.4 - DHCP</h2> 
d1979 1
a1979 1
je¶li taki posiadasz, lub analogiczny plik dla Twojej w³asnej konfiguracji 
d1991 1
a1991 1
¿e masz plik /etc/dhclient.conf, a nastêpnie wykonaj: 
d2001 2
a2002 2
Niewa¿ne w jaki sposób uruchamiasz dhclient, zawsze mo¿esz wyedytowaæ 
/etc/dhclient.conf aby np. <b>nie</b> uaktualniaæ swojej konfiguracji serwerów 
d2022 1
a2022 1
dhcpd_flags=NO. Umie¶æ interfejs na którym serwer ma <b>nas³uchiwaæ</b> w pliku
d2030 1
a2030 1
A nastêpnie zabierz siê za konfiguracjê serwera poprzez plik  /etc/dhcpd.conf.
d2045 5
a2049 5
Twój serwer DHCP powie klientowi ¿e nale¿y do domeny "example.com" oraz ¿e serwery DNS dla tej
domeny to 192.168.1.3 i 192.168.1.5. Hosty znajduj±ce siê w tej samej sieci co adres 
interefjsu OpenBSD na którym nas³uchuje DHCP, nale¿±cy do sieci 192.168.1.0/24,
otrzymaj± adresy z zakresu 192.168.1.32 - 192.168.1.127. Otrzymaj± te¿ informacjê
aby jako domy¶ln± bramkê wykorzystywa³y host 192.168.1.1.
d2073 1
a2073 1
(gdzie zamiast <tt>192.168.92.55</tt> powiniene¶ wstawiæ swój adres IP serwera Windows 
d2083 1
a2083 1
Protokó³ Punkt-Punkt (Point-to-Protocol - PPP) najczê¶ciej wykorzystywany jest w przypadkach
d2091 1
a2091 1
 - dzia³aj±cym w przestrzeni u¿ytkownika. 
d2095 1
a2095 1
Zaczniemy od konfiguracji demona PPP który móg³ bêdzie byæ uruchamiany
d2097 1
a2097 1
swojego dostawcy. Oto lista rzeczy które powiniene¶ wiedzieæ nim przyst±pimy do pracy:
d2107 1
a2107 1
Bez czê¶ci z nich mo¿esz siê obej¶æ, ale wygodniej bêdzie je¶li bêdziesz 
d2109 1
a2109 1
korzysta z pliku konfiguracyjnego 
d2111 1
a2111 1
W katalogu <i>/etc/ppp</i> znajdziesz kilka pomocnych plików, które mog± 
d2117 1
a2117 1
domy¶lnego GENERIC), ¿e poni¿szy wiersz znajduje siê w pliku konfiguracji:
d2127 2
a2128 2
Podstawowej konfiguracji dzia³aj±cego w przestrzeni u¿ytkownika demona PPP
polega na edycji pliku <i>/etc/ppp/ppp.conf</i>. Domy¶lnie tego pliku nie 
d2132 2
a2133 2
<i>ppp.conf</i> który pozwoli Ci na po³±czenie siê z Twoim dostawc± Internetu,
a tak¿e ustawi domy¶ln± trasê rutowania i serwer nazw (DNS). Wszystko czego 
d2140 3
a2142 3
set log Phase Chat LCP IPCP CCP tun command     
set device /dev/cua01                           
set speed 115200     
d2148 3
a2150 3
Sekcja poni¿ej <tt>default:</tt> bêdzie przetwa¿ana przy ka¿dym uruchomieniu 
demona. Umieszczamy w niej wszystkie niezbêdne informacje. Korzystaj±c 
z &quot;set log&quot; konfigurujemy poziomy logowania. Mo¿esz zmieniæ te 
d2152 1
a2152 1
zajrzyj do 
d2154 2
a2155 2
Wyboru urz±dzenia pod którym jest nasz modem dokonujemy w sekcji &quot;set device&quot;,
w tym przypadku modem pod³±czony jest do drugiego portu szeregowego, port 
d2157 1
a2157 1
ustalamy prêdko¶æ po³±czenia a w &quot;set dial&quot; podajemy parametry 
d2163 1
a2163 1
dostawcy Internetu (ISP). Informacje te podajemy w sekcjach umiejscowionych 
d2166 1
a2166 1
znajdziesz wszystkie informacje niezbêdne do tego aby po³±czenie zosta³o poprawnie
d2172 1
a2172 1
set phone 1234567   
d2174 1
a2174 1
set timeout 120   
d2176 1
a2176 1
add default HISADDR 
d2182 2
a2183 2
Oto podstawowa konfiguracja potrzebna do tego aby po³±czyæ siê z konkretnym 
ISP. Opcja &quot;set phone&quot; ustala numer dialup naszego ISP. 
d2186 1
a2186 1
oznacza ¿e nasza próba zalogowania siê zostanie przerwana po 5 sekundach 
d2200 1
a2200 1
[myaddr[/nn] [hisaddr[/nn] [netmask [triggeraddr]]]]</b>&quot;. 
d2203 1
a2203 1
tutaj. W tym przyk³adzie dodali¶my /0 aby zaznaczyæ ¿e ¿aden z bitów tego 
d2205 1
a2205 1
ISP podczas transakcji rozpoczynaj±cej po³±czenie. Drugi adres IP to adres 
d2209 1
a2209 1
jest ustawiony, u¿ywany jest do zast±pienia myaddr podczac rozpoczêcia
d2211 2
a2212 2
Ta opcja u¿yteczna jest w przypadkach gdy niektóre implementacje PPP podczas
negocjacji po³±cznia nie przyznaj± adresu IP dopuki nie zarz±dasz ``0.0.0.0.0''.
d2220 2
a2221 2
UWAGA: nie rówb tego je¶li masz uruchomiony lokalny serwer DNS, poniewa¿
ppp obejdzie to poprzez dopisanie kilku linijek nameserver w pliku 
d2233 1
a2233 1
<li><tt>ppp -auto myisp</tt> - Uruchamia ppp, konfiguruje interfejs, ³±czy siê z 
d2236 1
a2236 1
zostanie utracone, zostan± podjête próby przywrócenia go.
d2242 1
a2242 1
(a w zasadzie brak ¿adnych opcji) jest u¿yteczna gdy Twój <i>ppp.conf</i> nie dzia³a
d2249 1
a2249 1
W niektórych sytuacjach mo¿e zaj¶æ potrzeba wykonania jakiej¶ czynno¶ci w momencie
d2261 2
a2262 2
<a href="http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/userppp.html">FreeBSD 
Handbook entry on User PPP</a>. 
d2273 1
a2273 1
i d³u¿sze czasy timeout dla sesji TCP ?</h3>
d2290 1
a2290 1
Korzystaj±c z sysctl -a, mo¿esz obejrzeæ aktualne ustawienia tych 
d2299 4
a2302 4
wys³anie pakietów pod adres(y) brozdcast Twoich sieci w przypadku gdy u¿ywasz
OpenBSD jako routera. Istnieje kilka przypadków w zamkniêtych sieciach gdy
mo¿e byæ to u¿yteczne, zw³aszcza korzystaj±c ze starszych implementacji 
protoko³u NetBIOS. Wykorzystujemy do tego celu kolejny sysctl: 
d2304 1
a2304 1
dlaczego domy¶lnie jest ta opcja wy³±czona poczytaj o 
d2317 1
a2317 1
nie zezwalaæ demonom na "podkradanie" portów z których korzystaj±
d2323 1
a2323 1
Moa¿na tak¿e dodaæ b±d¼ usun±æ który¶ z wpisów aktualnej listy.
d2337 1
a2337 1
wspó³dzielenia systemów plików w sieci. Przed przyst±pieniem do konfiguraci
d2349 2
a2350 2
oraz klientów którzy wykorzystuj± w tej sieci NFS. W sekcji tej nie 
bêdziemy poruszaæ zagadnieñ zwi±zanych z bezpieczeñstwem, zak³adamy
d2352 3
a2354 3
firewall aby uniemo¿liwiæ dostêp osobom z zewn±trz. Je¶li zamierzasz 
zezwoliæ na dostêp do NFS z zewn±trz w celu wymiany poufnych 
danych które nie powinny trafiæ w niepowo³ane rêce, rekomendowane jest
d2356 1
a2356 1
jest pods³uchanie ca³ego ruchu który wymieniany jest przez NFS. Innym 
d2358 1
a2358 1
adresu IP na taki któremu zezwalasz na dostêp. Istnieje jeszcze kilka
d2365 1
a2365 1
mieæ dostêp do zasobów. Je¶li nie wyszczególnisz który z nich mo¿e
d2371 1
a2371 1
NFS korzysta z 
d2373 1
a2373 1
i musi byæ on uruchomiony jako pierwszy. Portmap(8) w wersjach 
d2381 1
a2381 1
i uruchom ponownie system. 
d2385 1
a2385 1
NFS tylko klientom znajduj±cym siê w swojej sieci. Pierwszym krokiem 
d2387 3
a2389 3
zasoby które chcia³by¶ udostêpniæ klientom oraz zdefiniujesz kto 
powinien mieæ dostêp do poszczególnych. W pliku <i>/etc/exports</i> mo¿esz
u¿yæ naprawdê wielu opcji, aby zapoznaæ siê ze wszystkimi mo¿liwo¶ciami 
d2402 1
a2402 1
Powy¿szy wpis oznacza ¿e przez NFS dostêpny bêdzie system plików <tt>/work</tt>.
d2404 4
a2407 4
znajduj±cy siê na ssytemie plików <tt>/work</tt>. Opcja <tt>-ro</tt>
oznacza ¿e zezwalamy na montowanie w trybie tylko do odczytu. Ostatnie 
dwa argumenty mówi± ¿e tylko hosty z sieci 10.0.0.0 o masce 255.255.255.0
mog± mieæ dostêp do tego zasobu, co jest istotne w przypadku gdy serwery
d2412 1
a2412 1
przej¶æ do konfiguracji serwera. Upewnij siê czy Twoje j±dro zosta³o skompilowane
d2415 1
a2415 1
Spowoduje to automatyczne uruchomienie nfsd(8) i mountd(8) za ka¿dym razem
d2417 2
a2418 2
rêcznie, aby to zrobiæ musisz byæ rootem oraz portmap(8) musi byæ ju¿ 
uruchomiony. Oto przyk³a uruchomienia nfsd(8) pracuj±cego na protoko³ach
d2427 1
a2427 1
Wystartowanie nfsd(8) nie jest ostatni± zcynno¶ci±, oprócz tego potrzebujesz 
d2429 1
a2429 1
Aby go uruchomiæ, upewnij siê ¿e istnieje pusty plik mountdtab, a nastêpnie
d2438 1
a2438 1
Je¶li w trakcie pracy wprowadzisz jakie¶ zmiany w /etc/exports, musisz 
d2468 1
a2468 1
Podczas zwyk³ago u¿ytkowania, istnieje jeszcze kilka innych narzêdzi 
d2470 1
a2470 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=showmount&amp;sektion=8">showmount(8)</a>, 
d2472 1
a2472 1
i przez kogo. Jest jeszcze nfsstat(8), który wy¶wietla kilka dodatkowych 
d2486 1
a2486 1
dla neigo sposób korzystaj±c z 
d2488 1
a2488 1
Do zamontowania systemu plików <i>/work</i> znajduj±cego siê na ho¶cie 
d2505 2
a2506 2
Wa¿ne jest aby¶ jako dwa ostatnie wpisy w tej linii umie¶ci³ <tt>0 0</tt>
aby Twój komputer nie próbowa³ sprawdzaæ systemu plików programem fsck 
d2508 1
a2508 1
jak noexec, nodev i nosuid powinny byæ tak¿e u¿yte gdy to mo¿liwe:
d2517 2
a2518 2
niebezpiecznych operacji na kliencie NFS. Je¶li nie montujesz ¿adnych 
programów których chcia³by¶ u¿ywaæ przez NFS, powiniene¶ dodaæ tak¿e opcjê 
d2567 2
a2568 2
Mój OpenBSD aktualnie pod³±czony do Internetu poprzez mojego ISP, wiêc mogê
skorzystaæ z 
d2584 1
a2584 1
taki w³a¶nie zosta³ mi przydzielony przez mojego ISP i który zosta³ wpisany w 
d2624 1
a2624 1
z OpenBSD oraz skonfigurowany jest aby móg³ pracowaæ jako serwer
d2634 2
a2635 2
<li>Przeczytaj RFC <a href="http://www.faqs.org/rfcs/rfc1033.html">1033</a>, 
<a href="http://www.faqs.org/rfcs/rfc1034.html">1034</a> oraz 
d2658 1
a2658 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dig&amp;sektion=1">dig(1)</a>
d2665 1
a2665 1
Je¶li nie jeste¶ pewien czy Twój komputer powinien pe³niæ rolê 
d2667 1
a2667 1
instalacja nie konfiguruje Twojego systemu aby pracowa³ w taki 
d2682 2
a2683 2
do ka¿dej maszyny, mo¿esz soknfigurowaæ OpenBSD aby pracowa³ jako 
lokalny serwer DNS i serwowwa³ adresy IP komputerom w Twojej sieci.
d2688 2
a2689 2
  To czy który¶ z tych serwerów jest autorytatywny na zewn±trz sieci LAN
  (lub jest wogóle widziany nazewn±trz) jest czynnikiem który zwykle
d2692 2
a2693 2
<li>Je¶li posiadasz sieæ LAN w której znajduj± siê komputery które
powinne byæ dostêpne przez zapytania DNS komputerów z innej
d2696 1
a2696 1
lub nazw innych hostów nawet gdy masz poprawnie skonstruowany plik <i>/etc/hosts</i>
d2698 1
a2698 1
poniewa¿ ko¿ysta z w³asnej implementacji resolvera zamias korzystaæ 
d2704 3
a2706 3
rozwi±zywanie nazwy hosta jest procesem interaktywnym, w którym serwer 
nazw odpytuje inne serwery, operacja zamiany nazwy na adres mo¿e potrwaæ
je¶li masz modemowe po³±æzenie do Internetu i wysy³asz zapytanie do 
d2753 1
a2753 1
Je¶li korzystasz z alternatywnych implementacji BIND, pamiêtaj ¿e robisz to
d2755 1
a2755 1
testy bezpieczeñstwa 
d2763 1
a2763 1
W zasadzie nic - je¶li podczas konfiguracji sieci w trakcie instalacji 
d2765 1
a2765 1
masz juz zainstalowane w systemie. Jedyne co Ci pozostaje to skonfigurowanie
d2775 1
a2775 1
podkatalogach, w szczególno¶ci plik <i>/var/named/named.boot</i> który jest
d2783 1
a2783 1
Dwa ine komputery w podsieci to <i>crater.yewtopia.com</i> maj±cy adres
d2871 3
a2873 3
Upewnij siê ¿e plik <i>/etc/resolv.conf</i> zawiera informacje o domenie
lokalnej komputera (zamiast np. serwera nazw Twojego ISP) czyli nazwy 
domeny któr± aktualnie konfigurujesz aby by³a serwowana przez <b>named</b>.
d2884 1
a2884 1
Je¶li wcze¶niej dodawa³e¶ wpisy o innych komputerach do pliku 
d2896 1
a2896 1
przynajmniej wpis <i>localhost</i></u>. Jest on niezbêdny do poprawnego 
d2946 1
a2946 1
je¶li poni¿szy wiersz znajduje siê domy¶lnie w 
d2972 1
a2972 1
Aby uruchomiæ <b>named</b> "z palca" skorzystaj z komendy 
d2987 1
a2987 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ndc&amp;sektion=8">ndc(8)</a>. 
d3012 1
a3012 1
Aby zmusiæ uruchomionego named`a do restartu i ponownego przeczytania 
d3016 1
a3016 1
# <strong>kill -HUP 4608</strong> 
d3021 1
a3021 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ndc&amp;sektion=8">ndc(8)</a> 
d3048 1
a3048 1
DNS, w kilku przypadkach mo¿esz nie chcieæ publikowania tych informacji 
d3056 1
a3056 1
Je¶li u¿ywasz BIND`a 8 musisz wyspecyfikowaæ kosty, którym chcesz zzwoliæ
d3072 1
a3072 1
Mo¿esz tak¿e zablokowaæ transfer dla wszystkich domen, poprzez edycjê 
d3084 1
a3084 1
Je¶li korzystasz z BIND 4 (domy¶lny w OpenBSD), mo¿esz wyedytowaæ 
d3097 1
a3097 1
mo¿liwo¶æ transferu s± Twoje zapasowe (slave) serwery DNS oraz hosty
d3117 1
a3117 1
<h2>6.9 - Konfigurowanie po³±czenia  PPTP w OpenBSD</h2>
d3122 1
a3122 1
i ustawieñ jest podobnych. Konfiguracja ta stworzona zosta³a i dzia³a dla 
d3127 1
a3127 1
<i>/usr/ports/net/pptp</i>. Przeczytaj <a href="../faq8.html#Ports">FAQ 8, 
d3160 1
a3160 1
podany patch i przekompiluj j±dro tak jak zosta³o to opisane w 
d3210 1
a3210 1
W powy¿szym przyk³adzie, nasz modem mia³ prekonfigurowany interfejs
d3212 1
a3212 1
nejlepiej u¿yæ adresu blisiego adresowi modemu, lub skorzystaæ ze statycznego
d3229 2
a3230 2
# <strong>kill -9 [pid of pppd]</strong>
$ <strong>kill -9 [pid of pptp]</strong>
d3243 1
a3243 1
Mo¿esz tak¿e umie¶ciæ komendê startuj±ca pptp w pliku <i>/etc/rc.local</i>
d3253 4
a3256 4
W przeciwieñstwie do routera, bridge jest logicznie "niewidzialny", 
dwa segmenty sieci my¶l± ¿e tworz± jeden segment z hostami po drugiej
stronie bridge`a. Bridge bêdzie jedynie przekazywa³ pakiety pomiêdzy 
segmentami sieci i umo¿liwia ³atwy i bezpo¶redni dostêp do zasobów 
d3260 1
a3260 1
Pamiêtaj, ¿e ze wzglêdy na swój "niewidzialny" charakter dzia³ania,
d3262 1
a3262 1
adres IP. Je¶li tak, interfejs ma dwa typy pracy, jeden jako bridge, 
d3264 1
a3264 1
adresu IP, bridge bêdzie przekazywa³ pakiety, jednak nie bêdzie 
d3273 1
a3273 1
jest terminal serwerowy z OpenBSD, maj±cy sta³e szybkie po³±czenie z tak±
d3278 1
a3278 1
System ten, posiada dwa interfejsy, Intel EtherExpress/100
d3280 1
a3280 1
i kartê 3c590-Combo  
d3285 1
a3285 1
do segmentu coax bêd± mog³y siê ze sob± komunikowaæ tak jakby by³y 
d3290 1
a3290 1
Korzysta on z informacji dostarczanych przez DHCP, wiêc plik wygl±da 
d3314 1
a3314 1
Instruujemy system, aby aktywowa³ interfejs korzystaj±c z 
d3323 1
a3323 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=bridgename.if&amp;sektion=5"><tt>bridgename.bridge0</tt></a>. 
d3337 2
a3338 2
sieciowych fxp0 i ep0 oraz jego aktywacji. Czy jest istotna kolejno¶æ w 
jakiej to robimy ? Nie, nale¿y bowiem pamiêtaæ, ¿e bridge jest symetryczny - 
d3356 1
a3356 1
Uwa¿aj, pamiêtaj±c o dwukierunkowej naturze bridge`a, o tym ¿e czê¶æ
d3398 1
a3398 1
Do monitorowania i kontrolowania utworzonego bridge`a, korzystaj z 
d3408 2
a3409 2
jednym interefjsie. Je¶li uwa¿asz ¿e musisz filtrowaæ dwa interfejsy,
upewnij siê ¿e naprawdê rozumiesz to co robisz.
d3411 1
a3411 1
<li>Poprzez u¿ycie opcji<i>blocknonip</i> komendy 
d3413 1
a3413 1
lub podanie jej w 
d3416 2
a3417 2
przed przedostanie siê przez Twój filtr. Mo¿e to byæ bardzo pomocne
w kilku przypadkach, pamiêraj bowiem ¿e bridge pracuje z ka¿dym protoko³em
d3424 1
a3424 1
chipy TI ThunderLAN - 
d3426 1
a3426 1
s± przyk³adem urz±dzenia które nie mo¿e pracowaæ jako czê¶æ bridge`a. 
d3444 1
a3444 1
$Translation: faq6.html,v 1.3 2003/05/09 15:15:26 pl-team Exp $<br>
@


1.2
log
@
sync with steelix translation CVS
@
text
@d1840 1
a1840 1
Nowa regu³ka przekierowuj±ca ajceptuje ten pakiet i adres docelowy zostaje
d1884 2
a1885 2
po³±czenia z interfejsu lokalnego i przekiwrowywaæ je do portu na którym
nas³uchuje. Gdy okalny klient ³±czy siê z firewallem, proxy akceptuje
d1895 1
a1895 1
interefjsu loopback i portu 5000. Po³±czenia s± przekierowywane do 
d1963 1
a1963 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.3">strona man o pfctle</a>
d3445 1
a3445 1
$Translation: faq6.html,v 1.2 2003/05/04 19:38:01 tomasz Exp $<br>
@


1.1
log
@
initial polish translation by the Polish OpenBSD Doc Project
via Tomasz Bak
@
text
@d4 1
a4 1
<title>6.0 - Sieæ</title>
d19 8
a26 1
<h2><font color="#e00000">6.0 - Sieæ</font></h2>
d126 2
a127 2
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 33224
        inet6 fe80::1%lo0 prefixlen 64 scopeid 0x4
d129 4
a132 3
        inet 127.0.0.1 netmask 0xff000000 
lo1: flags=8008&lt;LOOPBACK,MULTICAST&gt; mtu 33224
fxp0: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500
d135 23
a157 19
        inet 10.0.0.38 netmask 0xffffff00 broadcast 10.0.0.255
        inet6 fe80::202:b3ff:fe2b:10f7%fxp0 prefixlen 64 scopeid 0x1
pflog0: flags=0&lt;&gt; mtu 33224
sl0: flags=c010&lt;POINTOPOINT,LINK2,MULTICAST&gt; mtu 296
sl1: flags=c010&lt;POINTOPOINT,LINK2,MULTICAST&gt; mtu 296
ppp0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1500
ppp1: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1500
tun0: flags=10&lt;POINTOPOINT&gt; mtu 3000
tun1: flags=10&lt;POINTOPOINT&gt; mtu 3000
enc0: flags=0&lt;&gt; mtu 1536
bridge0: flags=0&lt;&gt; mtu 1500
bridge1: flags=0&lt;&gt; mtu 1500
vlan0: flags=0&lt;&gt; mtu 1500
vlan1: flags=0&lt;&gt; mtu 1500
gre0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1450
gif0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280
gif1: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280
gif2: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280
gif3: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280
d177 1
a177 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pflog&amp;sektion=4&amp;manpath=OpenBSD+3.2">pflog</a>
d246 1
a246 1
<i>/etc/mygate</i>. Dziêki temu Twoj system bêdzie poinformowany 
d256 1
a256 1
oraz nale¿ysz do domeny &quot;yourdomain.com&quot;.
d260 1
a260 1
search yourdomain.com
d290 3
d455 1
d458 10
a467 3
<h4>Uwaga:  W OpenBSD 3.2, funkcje jakie pe³ni³ plik <i>/etc/nat.conf</i>
zosta³y przeniesione do <i>/etc/pf.conf</i>.  
</h4>
a489 7
Filtr pakietów jest podsystemem stworzonym do dwóch g³ównych zadañ,
przekazywania pakietów na podstawie okre¶lonych praw i regu³ oraz mapowania
adresów hostów/podsieci na adresy zewnêtrzne. Plikiem konfiguracyjnym dla 
wszystkich tych us³ug jest 
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.2">/etc/pf.conf(5)</a></i>. 

<p>
d513 1
a513 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.2">pfctl(8)</a>.
d541 1
a541 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.2">pf.conf(5)</a>.
d559 1
a559 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.2">pf.conf(5)</a>. 
d787 1
a787 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pflogd&amp;sektion=8&amp;manpath=OpenBSD+3.2">pflogd(8)</a>,
d789 1
a789 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tcpdump&amp;sektion=8&amp;manpath=OpenBSD+3.2">tcpdump(8)</a>
d846 1
a846 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=syslogd&amp;sektion=8&amp;manpath=OpenBSD+3.2">Syslogd(8)</a>
d853 1
a853 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=adduser&amp;sektion=8&amp;manpath=OpenBSD+3.2">adduser(8)</a>.
d931 1
a931 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hosts&amp;sektion=5&amp;manpath=OpenBSD+3.2">
d942 1
a942 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=newsyslog&amp;sektion=8&amp;manpath=OpenBSD+3.2">
d1243 2
a1244 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pflogd&amp;sektion=8&amp;manpath=OpenBSD+3.2">pflogd(8)</a> zaloguje pakiety do <i>/var/log/pflog</i>.
Pamiêtaj ¿e <i>/var/log/pflog</i> jest plikiem binarnym i czytany byæ mo¿e przez<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tcpdump&amp;sektion=8&amp;manpath=OpenBSD+3.2">tcpdump(8)</a>.
d1348 1
a1348 1
		      | Klient A  - 192.168.1.35 |
d1368 2
a1369 2
je ka¿demu komputerowi z osobna, co daje niewiele korzy¶ci, a zmniejsza
bezpieczeñstwo i integralno¶æ ca³ej sieci.
d1403 1
a1403 1
192.168.1.35 --- 192.168.1.1 [ NAT ] 24.5.0.5 --- 123.45.67.89
d1406 1
a1406 1
Od: 192.168.1.35  &gt;&gt;=== NAT ===&gt;&gt;  Od: 24.5.0.5
d1468 1
a1468 1
Po tych zmianach komputer jest gotowy do konfiguracji NAT>
d1476 1
a1476 1
(<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.2">/etc/pf.conf</a></i>).
d1491 1
a1491 1
(<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nat.conf&amp;sektion=5&amp;manpath=OpenBSD+3.2">/etc/pf.conf</a></i>)
d1525 3
d1574 3
a1576 3
TCP  192.168.1.35:2132 -&gt; 24.5.0.5:53136 -&gt; 65.42.33.245:22       TIME_WAIT:TIME_WAIT
TCP  192.168.1.35:2492 -&gt; 24.5.0.5:55011 -&gt; 65.42.33.245:22       ESTABLISHED:ESTABLISHED
UDP  192.168.1.35:2491 -&gt; 24.5.0.5:60527 -&gt; 24.2.68.33:53       2:1
d1583 2
a1584 2
<dt>"192.168.1.35:2132"
<dd>To adres IP komputera w nieci LAN który u¿ywa NAT (192.168.1.35).
d1647 1
a1647 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp-proxy&amp;sektion=8&amp;manpath=OpenBSD+3.2">ftp-proxy(8)</a>.
d1694 1
a1694 1
Twoja maszyna wykonuj±ca NAT sama nie bêdzie pracowa³a jako
d1703 1
a1703 1
powinienes wówczas dodaæ analogiczn± regu³kê:
d1962 2
a1963 2
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pf.conf&amp;sektion=5&amp;manpath=OpenBSD+3.2">strona man o pf.conf</a>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pfctl&amp;sektion=8&amp;manpath=OpenBSD+3.2">strona man o pfctle</a>
d2035 1
a2035 1
        option  domain-name "xyz.mil";
d2046 1
a2046 1
Twój serwer DHCP powie klientowi ¿e nale¿y do domeny "xyz.mil" oraz ¿e serwery DNS dla tej
d2270 1
d2527 29
d2721 2
a2722 1
<h4>6.8.3.1 Które wersje BIND s± wspierane?</h4>	
d2743 1
d2771 1
d2789 1
d3348 2
d3433 3
a3435 3
<a href="index.html">[Powrót do g³ównego Indexu]</a>
<a href="faq5.html">[Do Sekcji 5.0 - Konfiguracja j±dra i dysków]</a>
<a href="faq7.html">[Do Sekcji 7.0 - Klawiatura]</a>
d3444 2
a3445 2
Orginally [OpenBSD: faq6.html,v 1.159 ]<br>
$Translation: faq6.html,v 1.1 2003/05/04 11:54:15 tomasz Exp $<br>
@

