head	1.102;
access;
symbols;
locks; strict;
comment	@# @;


1.102
date	2014.04.01.16.33.19;	author deraadt;	state dead;
branches;
next	1.101;

1.101
date	2013.05.08.13.48.34;	author ajacoutot;	state Exp;
branches;
next	1.100;

1.100
date	2013.03.26.06.47.47;	author ajacoutot;	state Exp;
branches;
next	1.99;

1.99
date	2012.04.25.12.13.15;	author ajacoutot;	state Exp;
branches;
next	1.98;

1.98
date	2012.04.19.23.56.49;	author ajacoutot;	state Exp;
branches;
next	1.97;

1.97
date	2011.12.28.13.38.29;	author ajacoutot;	state Exp;
branches;
next	1.96;

1.96
date	2011.11.28.07.29.02;	author ajacoutot;	state Exp;
branches;
next	1.95;

1.95
date	2011.11.04.16.51.45;	author ajacoutot;	state Exp;
branches;
next	1.94;

1.94
date	2011.11.03.18.39.35;	author ajacoutot;	state Exp;
branches;
next	1.93;

1.93
date	2011.04.15.08.21.52;	author ajacoutot;	state Exp;
branches;
next	1.92;

1.92
date	2009.08.01.21.41.39;	author tobias;	state Exp;
branches;
next	1.91;

1.91
date	2009.04.26.15.44.19;	author tobias;	state Exp;
branches;
next	1.90;

1.90
date	2008.03.09.13.37.10;	author tobias;	state Exp;
branches;
next	1.89;

1.89
date	2007.11.12.20.26.04;	author saad;	state Exp;
branches;
next	1.88;

1.88
date	2007.04.26.03.07.59;	author jufi;	state Exp;
branches;
next	1.87;

1.87
date	2007.01.07.18.35.15;	author saad;	state Exp;
branches;
next	1.86;

1.86
date	2006.04.25.08.25.45;	author saad;	state Exp;
branches;
next	1.85;

1.85
date	2006.04.06.17.23.10;	author jufi;	state Exp;
branches;
next	1.84;

1.84
date	2006.03.30.18.51.30;	author saad;	state Exp;
branches;
next	1.83;

1.83
date	2006.03.26.19.07.21;	author jufi;	state Exp;
branches;
next	1.82;

1.82
date	2006.03.19.12.31.04;	author jufi;	state Exp;
branches;
next	1.81;

1.81
date	2005.10.30.08.23.45;	author saad;	state Exp;
branches;
next	1.80;

1.80
date	2005.09.03.16.41.42;	author saad;	state Exp;
branches;
next	1.79;

1.79
date	2005.08.13.07.55.52;	author saad;	state Exp;
branches;
next	1.78;

1.78
date	2005.08.03.15.20.12;	author saad;	state Exp;
branches;
next	1.77;

1.77
date	2005.07.05.22.09.37;	author saad;	state Exp;
branches;
next	1.76;

1.76
date	2005.06.25.23.47.43;	author saad;	state Exp;
branches;
next	1.75;

1.75
date	2005.02.15.08.25.49;	author saad;	state Exp;
branches;
next	1.74;

1.74
date	2005.01.18.17.16.48;	author jufi;	state Exp;
branches;
next	1.73;

1.73
date	2004.12.22.19.59.55;	author jufi;	state Exp;
branches;
next	1.72;

1.72
date	2004.11.04.15.48.53;	author jufi;	state Exp;
branches;
next	1.71;

1.71
date	2004.11.02.18.39.57;	author jufi;	state Exp;
branches;
next	1.70;

1.70
date	2004.09.23.14.18.57;	author jufi;	state Exp;
branches;
next	1.69;

1.69
date	2004.04.17.18.21.33;	author jufi;	state Exp;
branches;
next	1.68;

1.68
date	2004.02.21.08.47.13;	author jufi;	state Exp;
branches;
next	1.67;

1.67
date	2003.12.08.01.20.56;	author horacio;	state Exp;
branches;
next	1.66;

1.66
date	2003.10.06.00.15.05;	author horacio;	state Exp;
branches;
next	1.65;

1.65
date	2003.07.13.13.22.32;	author jufi;	state Exp;
branches;
next	1.64;

1.64
date	2003.04.09.17.02.01;	author jufi;	state Exp;
branches;
next	1.63;

1.63
date	2003.03.17.18.34.45;	author jufi;	state Exp;
branches;
next	1.62;

1.62
date	2003.03.01.20.08.15;	author jufi;	state Exp;
branches;
next	1.61;

1.61
date	2003.02.28.19.44.21;	author jufi;	state Exp;
branches;
next	1.60;

1.60
date	2003.01.07.14.54.58;	author jufi;	state Exp;
branches;
next	1.59;

1.59
date	2002.11.20.13.48.28;	author jufi;	state Exp;
branches;
next	1.58;

1.58
date	2002.10.10.10.01.32;	author jufi;	state Exp;
branches;
next	1.57;

1.57
date	2002.09.11.17.08.26;	author jufi;	state Exp;
branches;
next	1.56;

1.56
date	2002.06.26.11.54.42;	author jufi;	state Exp;
branches;
next	1.55;

1.55
date	2002.05.20.12.29.59;	author jufi;	state Exp;
branches;
next	1.54;

1.54
date	2002.05.17.10.40.16;	author jufi;	state Exp;
branches;
next	1.53;

1.53
date	2002.05.10.10.12.59;	author jufi;	state Exp;
branches;
next	1.52;

1.52
date	2002.05.01.10.07.12;	author jufi;	state Exp;
branches;
next	1.51;

1.51
date	2002.04.17.19.41.57;	author jufi;	state Exp;
branches;
next	1.50;

1.50
date	2002.02.25.22.51.26;	author jufi;	state Exp;
branches;
next	1.49;

1.49
date	2002.02.22.19.03.11;	author jufi;	state Exp;
branches;
next	1.48;

1.48
date	2002.02.14.17.53.12;	author jufi;	state Exp;
branches;
next	1.47;

1.47
date	2002.01.26.14.26.13;	author jufi;	state Exp;
branches;
next	1.46;

1.46
date	2002.01.20.11.43.21;	author jufi;	state Exp;
branches;
next	1.45;

1.45
date	2002.01.13.14.17.07;	author jufi;	state Exp;
branches;
next	1.44;

1.44
date	2002.01.13.12.35.37;	author jufi;	state Exp;
branches;
next	1.43;

1.43
date	2002.01.08.22.40.48;	author jufi;	state Exp;
branches;
next	1.42;

1.42
date	2001.12.29.00.20.50;	author jufi;	state Exp;
branches;
next	1.41;

1.41
date	2001.11.13.21.22.12;	author jufi;	state Exp;
branches;
next	1.40;

1.40
date	2001.08.25.11.52.47;	author jufi;	state Exp;
branches;
next	1.39;

1.39
date	2001.08.19.06.35.02;	author jufi;	state Exp;
branches;
next	1.38;

1.38
date	2001.08.14.20.35.29;	author jufi;	state Exp;
branches;
next	1.37;

1.37
date	2001.07.03.18.27.09;	author jufi;	state Exp;
branches;
next	1.36;

1.36
date	2001.06.28.20.04.06;	author jufi;	state Exp;
branches;
next	1.35;

1.35
date	2001.06.26.18.35.41;	author jufi;	state Exp;
branches;
next	1.34;

1.34
date	2001.06.05.17.25.59;	author jufi;	state Exp;
branches;
next	1.33;

1.33
date	2001.06.04.12.46.20;	author jufi;	state Exp;
branches;
next	1.32;

1.32
date	2001.05.17.20.08.55;	author jufi;	state Exp;
branches;
next	1.31;

1.31
date	2001.05.14.06.01.26;	author jufi;	state Exp;
branches;
next	1.30;

1.30
date	2001.05.10.22.13.11;	author jufi;	state Exp;
branches;
next	1.29;

1.29
date	2001.04.25.20.41.00;	author jufi;	state Exp;
branches;
next	1.28;

1.28
date	2001.04.23.21.29.32;	author jufi;	state Exp;
branches;
next	1.27;

1.27
date	2001.04.19.18.36.11;	author jufi;	state Exp;
branches;
next	1.26;

1.26
date	2001.03.01.22.36.38;	author jufi;	state Exp;
branches;
next	1.25;

1.25
date	2001.02.18.13.29.43;	author jufi;	state Exp;
branches;
next	1.24;

1.24
date	2001.01.03.12.42.42;	author reinhard;	state Exp;
branches;
next	1.23;

1.23
date	2000.12.16.21.32.59;	author jufi;	state Exp;
branches;
next	1.22;

1.22
date	2000.11.22.20.51.30;	author jufi;	state Exp;
branches;
next	1.21;

1.21
date	2000.11.18.14.50.50;	author jufi;	state Exp;
branches;
next	1.20;

1.20
date	2000.11.09.20.22.27;	author jufi;	state Exp;
branches;
next	1.19;

1.19
date	2000.09.16.13.29.26;	author jufi;	state Exp;
branches;
next	1.18;

1.18
date	2000.08.27.11.30.50;	author jufi;	state Exp;
branches;
next	1.17;

1.17
date	2000.08.25.13.18.20;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2000.08.20.08.36.29;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2000.08.13.14.42.59;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2000.08.04.10.48.50;	author jufi;	state Exp;
branches;
next	1.13;

1.13
date	2000.08.04.10.40.56;	author jufi;	state Exp;
branches;
next	1.12;

1.12
date	2000.08.01.13.32.22;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2000.07.20.20.46.22;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2000.07.08.20.32.58;	author jufi;	state Exp;
branches;
next	1.9;

1.9
date	2000.06.30.18.58.00;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.16.21.04.33;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.13.19.49.57;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.12.14.41.45;	author wvdputte;	state Exp;
branches;
next	1.5;

1.5
date	2000.05.05.16.21.07;	author wvdputte;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.14.22.04.20;	author wvdputte;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.12.16.46.51;	author wvdputte;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.10.11.50.32;	author wvdputte;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.05.21.15.48;	author wvdputte;	state Exp;
branches;
next	;


desc
@@


1.102
log
@abandon translations; ajacoutot and team are done
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<link rev="made" href="mailto:www@@openbsd.org">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="resource-type" content="document">
<meta name="description" content="OpenBSD cryptography">
<meta name="keywords" content="openbsd,cryptography,openssh,openssl,kerberos">
<meta name="keywords" content="ipsec,isakmp,ike,blowfish,des,rsa,dsa">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 1997-2006 by OpenBSD.">
<title>Kryptographie in OpenBSD</title>
</head>

<body bgcolor="#ffffff" text="#000000" link="#23238e">
<img align="left" alt="[Blowfish-Bild]" height="166" width="197" src="../images/blowfish-notext.jpg">
<br>
<br>
<br>
Der Leitfaden eines jeden guten Sicherheitsingenieurs ist: »Sicherheit
ist kein Produkt sondern ein Prozess.«
Es steckt mehr dahinter, als starke Kryptographie in ein System zu integrieren.
Es bedeutet, das gesamte System so zu entwerfen, dass alle Sicherheitsmaßnahmen
- inklusive der Kryptographie - zusammenarbeiten.
<br>
<br>
- Bruce Schneier, Autor von Applied Cryptography.
<br clear="all">
<h2><font color="#e00000">Kryptographie</font></h2>
<hr>

<strong>Inhaltsverzeichnis</strong><br>
<a href="#why">Warum liefern wir Kryptographie aus?</a><br>
<a href="#ssh">OpenSSH</a>.<br>
<a href="#prng">Pseudozufallszahlengeneratoren</a> (PRNG): ARC4,
...<br>
<a href="#hash">Kryptographische Hashfunktionen</a>: MD5, SHA1, ...<br>
<a href="#trans">Symmetrische Verschlüsselungsverfahren</a>: DES,
Blowfish, ...<br>
<a href="#hardware">Unterstützung für kryptographische Hardware</a><br>
<a href="#people">Internationale Kryptographen gesucht</a><br>
<a href="#papers">Weitere Quellen</a><br>
<p>
<hr>

<a name="why"></a>
<h3><font color="#e00000">Warum liefern wir Kryptographie aus?</font></h3><p>

Kurz gesagt: <strong>Weil wir es können</strong>.<p>

Das OpenBSD-Projekt ist in Kanada beheimatet.<p>

Die <a href="../ECL.html">Exportkontrollliste von Kanada</a>
beinhaltet keine signifikanten Beschränkungen bezüglich des
Exports von kryptographischer Software und ist sogar noch offener,
was den Export frei erhältlicher kryptographischer Software angeht.
Marc Plumb hat
<a href="http://www.efc.ca/pages/doc/crypto-export.html">einige
Nachforschungen betrieben, um die Kryptographiegesetze zu prüfen</a>.
<p>

Daher hat das OpenBSD-Projekt Kryptographie in zahlreichen Stellen im
Betriebssystem integriert.
Wir verlangen, dass die kryptographische Software, die wir benutzen wollen,
<a href="policy.html">frei erhältlich ist und guten Lizenzen unterliegt</a>.
Wir benutzen keine Kryptographie mit unzulänglichen Lizenzen direkt.
Wir verlangen außerdem, dass solche Software aus Ländern mit vernünftigen
Exportbedingungen kommt, da wir keinerlei Landesgesetze brechen wollen.
Die kryptographischen Komponenten, die wir momentan benutzen, wurden in
Argentinien, Australien, Deutschland, Griechenland, Kanada, Norwegen und
Schweden geschrieben.
<p>

Wenn wir OpenBSD-Releases oder -Schnappschüsse erzeugen, erzeugen wir diese
in freien Ländern, um sicherzustellen, dass sowohl Quelltexte als auch
Binärdateien frei von Beschränkungen sind.
In der Vergangenheit wurden unsere Releases in Kanada, Schweden und
Deutschland erzeugt.
<p>

OpenBSD wird mit Kerberos V ausgeliefert.
Die Quelltext-Basis, die wir benutzen, ist die exportierbare Heimdal-Version
aus Schweden.
Unsere X11-Quellen wurden ebenfalls so erweitert, dass sie Gebrauch von
Kerberos machen.
<p>


<img align="right" src="../images/vpnc-test-partner.gif" alt="vpnc-test-partner.gif">
OpenBSD war das erste Betriebssystem, das mit einem IPsec-Stack
ausgeliefert wurde.
IPsec ist Teil des Systems seit der Veröffentlichung des OpenBSD-Releases 2.1
im Jahre 1997.
Unser voll konformer kernelinterner IPsec-Stack mit möglicher
Hardwareunterstützung durch Zusatzkarten und unser eigener freier
ISAKMP-Daemon wird als eine der Maschinen der IPsec conformance
Testumgebung der <a href="http://www.vpnc.org">VPNC</a> benutzt.
<br clear="all">
<p>

Heutzutage ist Kryptographie eine wichtiges Mittel, um die
<a href="security.html">Sicherheit</a> eines Betriebssystems zu
erhöhen.
Die in OpenBSD integrierte Kryptographie kann in folgende Bereiche unterteilt
werden:
<p>

<a name="ssh"></a>
<h3><font color="#e00000">OpenSSH</font></h3><p>

Seit dem Release 2.6 hat OpenBSD
<a href="http://www.openssh.com/">OpenSSH</a> integriert; eine absolut
freie und nicht patentierte Version von ssh.
<a href="http://www.openssh.com/">OpenSSH</a> interagiert auch mit ssh
Version 1 und hat viele zusätzliche Funktionalitäten,
<ul>
<li>
alle Teile restriktiven Ursprungs wurden entfernt (also Patente, siehe
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&amp;sektion=8"
>ssl</a>), jegliche lizenzierten oder patentierten Komponenten nutzten
externe Bibliotheken.
<li>
wurde um Unterstützung des Protolls Version 1.5 erweitert.
<li>
beinhaltet Unterstützung für Kerberosauthentifizierung und
Ticketpassing.
<li>
unterstützt Einmalpasswörter mittels
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey&amp;sektion=1"
>skey</a>.
</ul>
<p>

Grob gesagt haben wir eine Version von ssh mit freier Lizenz genommen
und sie OpenBSD-fiziert.
Ungefähr ein Jahr später haben wir OpenSSH so erweitert, dass es nun auch das
SSH-2-Protokoll beherrscht.
Das Resultat ist, dass nun alle drei großen SSH-Protokolle unterstützt
werden: 1.3, 1.5, 2.0.

<a name="prng"></a>
<h3><font color="#e00000">Pseudozufallszahlengeneratoren</font></h3><p>

Ein Pseudozufallszahlengenerator (PRNG = Pseudo Random Number
Generator) versorgt Anwendungen mit einem Strom aus zufälligen Zahlenfolgen,
welche einen erheblichen Einfluss auf die Sicherheit des Systems haben:
<p>

<ul>
<li>Es sollte für einen Außenstehenden unmöglich sein, sogar mit
Kenntnis der bisherigen Zahlen weitere Zahlen vorherzusagen.
<li>Die generierten Zahlen sollten keine sich wiederholenden Muster
aufweisen, d.&nbsp;h. der PRNG sollte einen sehr langen Kreislauf haben.
</ul>
<p>

Ein PRNG ist eigentlich nur ein Algorithmus, bei welchem durch gleiche
Anfangswerte auch die gleichen Ergebnisse produziert werden.
Bei einem Mehrbenutzersystem gibt es viele Möglichkeiten, den PRNG mit
zufälligen Daten zu füttern.
Der OpenBSD-Kernel benutzt das Mausinterrupttiming,
Netzwerkdateninterruptverzögerungen, die Zeit zwischen Tastendrücken
und Festplatten-E/A-Informationen, um Zufallszahlen zu bekommen.
Zufallszahlen stehen dann den Kernelroutinen zur Verfügung und werden an
Userlandprogramme weitergegeben.
Bisher werden Zufallszahlen benutzt von:<p>

<ul>
<li>Dynamische Zuweisung des sin_port in bind(2).
<li>PIDs von Prozessen.
<li>IP-Datagramm-IDs.
<li>RPC-Transaktions-IDs (XID).
<li>NFS-RPC-Transaktions-IDs (XID).
<li>DNS-Abfrage-IDs.
<li>Inode-Generierungsnummern, siehe getfh(2) und fsirand(8).
<li>Timingstörungen in traceroute(8).
<li>Stärkere temporäre Namen für mktemp(3) und mkstemp(3).
<li>Zufälligkeit zum TCP-ISS wurde hinzugefügt, um spoofing-Angriffe zu
    verhindern.
<li>Zufälliges Padding in IPsec »esp_old«-Paketen.
<li>Um Salts für die verschiedenen Passwortalgorithmen zu generieren.
<li>Um vorgetäuschte S/Key-Herausforderungen zu generieren.
<li>In
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8"
    >isakmpd</a>, um lebende Beweise für Schlüsselaustausch zu haben.
</ul>

<p>
<a name="hash"></a>
<h3><font color="#e00000">Kryptographische Hashfunktionen</font></h3><p>

Eine Hashfunktion komprimiert ihre eingegebenen Daten zu einer
Zeichenkette konstanter Länge.
Mit einer kryptographischen Hashfunktion können folgende Szenarien nicht
eintreten:

<ul>
<li>Zwei Eingaben erzeugen die selbe Ausgabe (resistent gegen Kollisionen).
<li>Eine andere Eingabe für eine gegebene Eingabe erzeugt die selbe
    Ausgabe (2nd preimage resistant).
</ul>
<p>

In OpenBSD werden die kryptographischen Hashfunktionen MD5, SHA1, und RIPEMD-16
benutzt, z.B. hier:<p>
<ul>
<li>In
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey&amp;sektion=1"
    >S/Key</a>, um Einmalpasswörter bereitzustellen.
<li>In
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec&amp;sektion=4"
    >IPsec</a> und
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8"
    >isakmpd(8)</a>, um die Herkunft von Daten zu authentifizieren und
    Paketintegrität zu gewährleisten.
<li>Um MD5-Passwörter im FreeBSD-Stil bereitzustellen (standardmäßig nicht
    ermöglicht), siehe
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=login.conf&amp;sektion=5"
    >login.conf(5)</a>.
<li>In libssl für die digitale Signatur von Nachrichten.
</ul>
<p>

<p>
<a name="trans"></a>
<h3><font color="#e00000">Symmetrische
Verschlüsselungsalgorithmen</font></h3><p>

Symmetrische Verfahren werden benutzt, um Daten zu ver- und
entschlüsseln.
Normalerweise werden sie mit einem Schlüssel zur Ver- und einem Schlüssel zur
Entschlüsselung gebraucht.
Die Sicherheit eines symmetrischen Algorithmus sollte wirklich nur auf den
Schlüsseln beruhen.
<p>

OpenBSD stellt symmetrische Verfahren wie DES, 3DES, Blowfish und Cast
für Kernel- und Userlandprogramme zur Verfügung, die an vielen Orten,
wie z.&nbsp;B. an diesen, benutzt werden:
<p>
<ul>
<li>In der libc für die Erstellung von
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=blf_key&amp;sektion=3"
    >Blowfish</a>-Passwörtern.
    Siehe dazu auch das <a href="../papers/bcrypt-paper.ps">USENIX paper</a>.
<li>In
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec&amp;sektion=4"
    >IPsec</a>, um Vertrauen in die Netzwerkschicht zu bringen.
<li>In
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8"
    >isakmpd</a>, um den Austausch von IPsec-Schlüsselmaterial zu schützen.
<li>In libssl, um Applikationen über das kryptographisch sichere und
    zudem de facto Standard-SSL-Protokoll laufen zu lassen.
</ul>

<p>
<a name="hardware"></a>
<h3><font color="#e00000">Unterstützung für kryptographische
Hardware</font></h3><p>

OpenBSD unterstützt seit Release 2.7 einiges an kryptographischer Hardware,
wie etwa Hardwarebeschleuniger und Zufallszahlengeneratoren.
<ul>
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crypto&amp;sektion=9"
    >IPsec crypto dequeue</a></b><br>
    Unser IPsec-Stack wurde so verändert, dass kryptographische
    Funktionen auch außer der Reihe gemacht werden können.
    Die meisten Software-IPsec-Stacks müssen die kryptographischen
    Funktionen mit jedem einzelnen Paket durchführen, das sie behandeln.
    Das resultiert in niedriger Performance.
    Um Hardware sauber und schnell zu nutzen, müssen diese zwei Komponenten
    getrennt werden - wie von uns durchgeführt.
    Dabei springt sogar etwas extra Performance auf der Softwareseite heraus.
<p>
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hifn&amp;sektion=4"
    >Hifn 7751</a></b><br>
    Karten, die den Hifn 7751 verwenden, können als symmetrischer
    kryptographischer Hardwarebeschleuniger benutzt werden, z.&nbsp;B.
    <a href="http://www.soekris.com/vpn1201.htm">Soekris VPN1201 oder
    VPN1211</a>
    (<a href="http://www.soekris.com/how_to_buy.htm">hier zu kaufen</a>)
    oder <a href="http://www.powercrypt.com">PowerCrypt</a>.
    Die momentan dabei erreichte Leistung beträgt 64 Mbit/s für
    3DES/SHA1 ESP, wenn man einen einzelnen Hifn 7751 auf jeder Seite
    eines Tunnels einsetzt: Das ist eine Verbesserung gegenüber
    einer P3/550-CPU um beinahe 600 Prozent.
    An weiteren Verbesserungen bezüglich einiger Punkte wird noch gearbeitet,
    aber mit dem Stand vom 13. April 2000 wird der Quelltext als stabil
    angesehen.
    Wir haben unseren eigenen Treiber geschrieben, um diesen Chip zu
    unterstützen, anstatt den (in den USA geschriebenen)
    <a href="http://www.powercrypt.com">Powercrypt</a>-Treiber zu
    benutzen; außerdem arbeitet unser Treiber sauber mit IPsec zusammen.
    Der 7751 wird im Vergleich zum Industriestandard als langsam angesehen
    und viele Anbieter haben schnellere Chips (auch Hifn hat einen
    zwar schnelleren aber auch teureren Chip im Sortiment).
    Die Spitzenleistung mit 3DES SHA1 ESP beträgt etwa 64 Mbit/s.
    <p>
    Nach der Veröffentlichung von 2.9 wurde die Unterstützung für
    den Hifn-7951-Chip hinzugefügt; eine abgespeckte Version des 7751,
    die einen Beschleuniger für öffentliche Schlüssel (nicht unterstützt)
    und einen Zufallszahlengenerator (unterstützt) enthält.
    Die Karten wurden von
    <a href="http://www.soekris.com/">Soekris Engineering</a> gespendet.
    <p>
    Nach der Veröffentlichung von 3.0 wurde die Unterstützung
    für den Hifn-7811-Chip hinzugefügt; einer schnelleren Version
    des 7751 (etwa 130 Mbit/s) mit einem Zufallszahlengenerator.
    Die Karte wurde von <a href="http://www.gtgi.com/">GTGI</a>
    gespendet.
    <p>
    Nach der Veröffentlichung von 3.2 wurde eine Unterstützung für
    den LZS-Kompressionsalgorithmus hinzugefügt, der von
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipcomp&amp;sektion=4"
    >ipcomp(4)</a> benutzt wird.
    <p>
    Mit der Veröffentlichung von 3.4 wurde Unterstützung für die
    7955- und 7956-Chips hinzugefügt. Zusätzlich zu allen Funktionen
    des vorherigen 7951-Chips beherrschen diese AES.
    <p>
    Anfänglich war der Umgang mit Hifn schwierig.
    Hifn drohte, uns wegen des außerhalb der USA durchgeführten
    Reverseengineering ihres crypto-unlock-Algorithmus zu verklagen.
    In Letzter Zeit allerdings haben sich die Wogen geglättet und Hifn
    unterstützt uns mit Boards und Support.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lofn&amp;sektion=4"
    >Hifn 6500</a></b><br>
    Dieses Gerät ist eine asymmetrische Kryptoeinheit.
    Sie unterstützt RSA-, DSA- und DH-Algorithmen, sowie die meisten häufig
    vorkommenden Funktionen.
    Es ist ein sehr schneller Zufallszahlengenerator enthalten.
    Wir haben ein Gerät, die vollständige Dokumentation und Beispielquelltext.
    Mit 3.1 arbeiten sowohl der Zufallsgenerator als auch die Big-Number-Unit.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nofn&amp;sektion=4">
    Hifn 7814/7851/7854</a></b><br>
    Dieses Gerät ist ein Paketprozessor und eine asymmetrische
    Kryptoeinheit.
    Es unterstützt RSA-, DSA- und DH-Algorithmen sowie andere wichtige
    Big-Number-Funktionen und verfügt auch über einen Zufallszahlengenerator.
    Momentan werden die Big-Number-Engine und der Zufallszahlengenerator
    unterstützt (keine Pakettransformationen).
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ubsec&amp;sektion=4"
    >Broadcom
    BCM5801/BCM5802/BCM5805/BCM5820/BCM5821/BCM5822/5823/5825/5860/5861/5862
    (oder der Beta Chip Bluesteelnet 5501/5601)</a></b><br>
    Direkt nach der Veröffentlichung von OpenBSD 2.7 konnten wir
    erstmalig Unterstützung für die frühen Versionen bereitstellen, die
    uns der Hersteller zur Verfügung gestellt hat (insbesondere mit dem
    Testchip 5501).
    Diese Geräte liefern die schnellste symmetrische Kryptographie, die wir
    bisher gesehen haben.
    <p>
    Bluesteelnet wurde von Broadcom aufgekauft und hat danach richtige
    Komponenten produziert.
    Die neue BCM5805 ist ähnlich, nur wurde sie durch eine asymmetrische
    Maschine erweitert, um DSA-, RSA- und ähnliche Algorithmen zu unterstützen.
    Durch die annähernd doppelt so hohen Geschwindigkeit im Vergleich zur Hifn
    wird dieser Chip hoffentlich bald sehr viel verbreiteter sein.
    <p>
    Die Leute von Broadcom/Bluesteelnet waren wirklich großartig.
    Sie stellten uns die komplette Dokumentation für ihre Chips bereit,
    Beispielquelltext und dazu noch eine ausreichende Menge Karten,
    um das Ganze zu testen.
    <p>
    Nach 2.8 wurde dieser Treiber auch dahingehend modifiziert, dass er
    Zufallszahlen auf dem BCM5805 und ähnlichen Versionen produziert
    und diese dann in den Entropiepool des Kernels übergibt.
    <p>
    Nach 2.9 wurde Unterstützung für den BCM5820 hinzugefügt, was
    größtenteils eine schnellere (64 Bit, höhere Taktrate) Version des
    BCM5805 ist.
    Noch ungetestete Unterstützung für den BCM5821 wurde mit 3.0 hinzugefügt.
    <p>
    Mit 3.1 wurde die Big-Number-Engine unterstützt und
    RSA/DH/DSA-Operationen konnten beschleunigt werden.
    <p>
    Unterstützung für den BCM5801, BCM5802, BCM5821 und BCM5822 wurden
    vor der Veröffentlichung von OpenBSD 3.2 hinzugefügt (die ungetestete
    BCM5821-Unterstützung in 3.1 hat wegen einiger nicht dokumentierter
    Interrupthandlingprobleme nicht funktioniert).
    <p>
    Partielle Unterstützung für BCM5823 wurde mit 3.4 hinzugefügt.
    <p>
    Unterstützung für BCM5825, BCM5860, BCM5861 und BCM5862 mit
    Unterstützung für AES mit BCM5823 oder neuer wurde nach 4.5
    hinzugefügt.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ises&amp;sektion=4"
    >Securealink PCC-ISES</a></b><br>
    Der
    <a href="http://www.safenet-inc.com/technology/chips/safexcel_ises.asp"
    >PCC-ISES</a> ist ein neuer Chipsatz aus den Niederlanden.
    Wir haben Probehardware und Dokumentation erhalten - die Arbeit an einem
    Treiber ist im Gange.
    Im Moment kann der Treiber bereits Zufallszahlen an den Entropiepool des
    Kernels liefern.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=safe&amp;sektion=4"
    >SafeNet SafeXcel 1141/1741</a></b><br>
    Nach der Veröffentlichung von 3.4 wurde die Unterstützung für diese
    zwei Chips hinzugefügt - diese wurden in etlichen
    <a href="http://www.safenet-inc.com/products/accCards/"
    >SafeNet</a>-Kryptokarten verbaut.
    Unterstützt werden symmetrische Operationen mit DES, Triple-DES, AES, MD5
    und SHA-1, RNG, Publickey-Operationen und vollständige
    IPsec-Paketverarbeitung.
    <p>

<li><b>SafeNet SafeXcel 1840</b><br>
    Wir haben Dokumentation und Probehardware für den
    <a href="http://www.safenet-inc.com/products/chips/safeXcel1840.asp"
    >SafeNet 1840</a>-Kryptochip bekommen.
    Wir arbeiten daran, wenigstens die RNG- und symmetrische Kryptographie
    dieser Geräte zu unterstützen.
    <p>

<li><b>SafeNet SafeXcel 2141</b><br>
    Wir haben Dokumentation und Probehardware für die
    <a href="http://www.safenet-inc.com/products/chips/safeXcel2141.asp"
    >SafeNet</a>-Kryptochips bekommen.
    Wir arbeiten daran, wenigstens die symmetrische Kryptographie zu
    unterstützen.
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=txp&amp;sektion=4"
    >3com 3cr990</a></b><br>
    3com hat uns einen Treiber gegeben, um die Ethernetseite dieses
    Chipsets zu unterstützen.
    Wir haben basierend darauf einen eigenen Ethernettreiber geschrieben.
    Der Treiber wurde jetzt in OpenBSD eingefügt, da wir eine freie Lizenz für
    den Microcode erhalten haben.
    Wegen schlechter Dokumentation und einem Mangel an Kooperation (der
    teilweise durch die hohen Austauschraten bei 3com begründet ist), werden
    die IPsec-Funktionen des Chips nicht unterstützt ...
    es hat sich als vollkommen sinnfreie Erfahrung herausgestellt.
    <p>

<li><b>Intel IPsec card</b><br>
    Intel tut viel für ihre Netzwerkprodukte, aber im Gegensatz zu
    allen anderen Anbietern weigert sich Intel standhaft, uns
    Dokumentation bereitzustellen.
    Wir haben mit etwa fünf Technikern gesprochen, welche an der Entwicklung
    dieser Produkte beteiligt sind.
    Sie alle wollten, dass wir Zugriff auf die Dokumentation bekommen. 
    Sie loben uns für unsere bisherige Arbeit. 
    Aber ihre Hände sind vom Management gebunden, welches keinen Vorteil
    darin sieht, uns dieser Dokumentation zu versorgen. 
    Vergiss Intel (wenn du dir Gigabitethernethardware kaufen willst,
    empfehlen wir alles andere ... aus eben dem selben
    Grund: Die meisten Treiber, die wir bisher geschrieben haben, wurden
    ohne Dokumentation geschrieben).
    <p>

<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pchb&amp;sektion=4"
    >Intel 82802AB/82802AC Firmware Hub RNG</a></b><br>
    Der 82802-FWH-Chip (zu finden auf i810-, i820-, i840-, i850- und
    i860-Motherboards) enthält einen Zufallszahlengenerator (RNG).
    Hochperformantes IPsec benötigt mehr Zufallszahlenentropie. Seit
    dem 10. April 2000 unterstützen wir den RNG.
    Wir werden Unterstützung für weitere RNGs auf anderen Kryptochips
    hinzufügen.
    <p>

<li><b>VIA C3 RNG</b><br>
    Die neuere VIA-C3-CPU enthält einen Zufallszahlengenerator als
    Anweisung. Seit <a href="33.html">3.3</a> wird dieser
    Zufallszahlengenerator im Kernel dazu genutzt, den Entropiepool zu
    füllen.
    <p>

<li><b>VIA-C3-AES-Befehle</b><br>
    VIA-C3-CPUs mit Step 8 oder späterem Nehemiah-Core enthalten eine
    AES-Implementierung, auf die mittels einfacher Befehle zugegriffen
    werden kann.
    Seit <a href="34.html">3.4</a> unterstützt der Kernel die Benutzung im
    Kontext von IPsec und exportiert sie mittels <tt>/dev/crypto</tt>.
    Mit <a href="35.html">3.5</a> wurden die Geschwindigkeiten erheblich
    verbessert und OpenSSL benutzt die neuen Befehle direkt ohne die
    Notwendigkeit eines Zugriffs auf den Kernel, was zu einer erheblichen
    Geschwindigkeitssteigerung für Anwendungen führt, die OpenSSL verwenden, um
    AES-Verschlüsselung zu bekommen (AES-128 wurde mit 780 MByte/s gemessen).
    <p>

<li><b>OpenSSL</b><br>
    Jahre zuvor hatten wir einen großen Plan, Kryptokarten zu
    unterstützen, welche RSA/DH/DSA automatisch über OpenSSL-Aufrufe
    beherschen.
    Seit OpenBSD 3.2 funktioniert diese Unterstützung; jede Karte mit einer
    solchen Funktionalität, sofern unterstützt, wird automatisch diese Hardware
    benutzen - einschließlich OpenSSH und dem httpd im SSL-Modus.
    An den Applikationen werden keinerlei Änderungen benötigt.
</ul>

<p>
   <b>Wenn jemand beim Schreiben der Treiber helfen will, bitte einfach
    <a href="#people">herkommen und mithelfen</a>.</b>

<p>
<a name="people"></a>
<h3><font color="#e00000">Internationale Kryptographen gesucht</font></h3><p>

Natürlich braucht unser Projekt Leute, die an diesen Systemen arbeiten.
Wenn ein nicht amerikanischer Kryptograph, den die oben erwähnten
Zwänge nicht betreffen, an Mitarbeit an unserer eingebetteten
Kryptographie interessiert ist, soll er uns bitte kontaktieren.
<p>

<p>
<a name="papers"></a>
<h3><font color="#e00000">Weitere Quellen</font></h3><p>

Einige Leute aus dem OpenBSD-Team haben Vorträge über
die Veränderungen geschrieben, die in OpenBSD Einzug gehalten haben.
Die Postscript-Versionen dieser Vorträge sind hier erhältlich:
<p>

<ul>
<li>A Future-Adaptable Password Scheme.<br>
    <a href="events.html#usenix99">Usenix 1999</a>,
    von <a href="mailto:provos@@openbsd.org">Niels Provos</a>,
    <a href="mailto:dm@@openbsd.org">David Mazieres</a>.<br>
    <a href="../papers/bcrypt-paper.ps">Papierform</a> und
    <a href="../papers/bcrypt-slides.ps">Folien</a>.
<p>
<li>Cryptography in OpenBSD: An Overview.<br>
    <a href="events.html#usenix99">Usenix 1999</a>,
    von <a href="mailto:deraadt@@openbsd.org">Theo de Raadt</a>,
    <a href="mailto:niklas@@openbsd.org">Niklas Hallqvist</a>,
    <a href="mailto:art@@openbsd.org">Artur Grabowski</a>,
    <a href="mailto:angelos@@openbsd.org">Angelos D. Keromytis</a>,
    <a href="mailto:provos@@openbsd.org">Niels Provos</a>.<br>
    <a href="../papers/crypt-paper.ps">Papierform</a> und
    <a href="../papers/crypt-slides.ps">Folien</a>.
<p>
<li>Implementing Internet Key Exchange (IKE).<br>
    <a href="events.html#usenix2000">Usenix 2000</a>,
    von <a href="mailto:niklas@@openbsd.org">Niklas Hallqvist</a> und
    <a href="mailto:angelos@@openbsd.org">Angelos D. Keromytis</a>.<br>
    <a href="../papers/ikepaper.ps">Papierform</a> und
    <a href="../papers/ikeslides.ps">Folien</a>.
<p>
<li>Encrypting Virtual Memory.<br>
    <a href="events.html#sec2000">Usenix Security 2000</a>,
    <a href="mailto:provos@@openbsd.org">Niels Provos</a>.<br>
    <a href="../papers/swapencrypt.ps">Papierform</a> und
    <a href="../papers/swapencrypt-slides.ps">Folien</a>.
<p>
<li>The Design of the OpenBSD Cryptographic Framework.<br>
    <a href="events.html#usenix2003">Usenix 2003</a>, von
    <a href="mailto:angelos@@openbsd.org">Angelos D. Keromytis</a>,
    <a href="mailto:jason@@openbsd.org">Jason L. Wright</a>, und
    <a href="mailto:deraadt@@openbsd.org">Theo de Raadt</a>.<br>
    <a href="../papers/ocf.pdf">Papierform</a>.
<p>
<li>Cryptography As an Operating System Service: A Case Study.<br>
    <a href="http://www.acm.org/tocs/">ACM Transactions on Computer Systems</a>,
    Februar 2006, von
    <a href="mailto:angelos@@openbsd.org">Angelos D. Keromytis</a>,
    <a href="mailto:jason@@openbsd.org">Jason L. Wright</a> und
    <a href="mailto:deraadt@@openbsd.org">Theo de Raadt</a>.<br>
    <a href="../papers/crypt-service.pdf">Papierform</a>.
</ul>

<p>
<hr>
<a href="index.html"><img height="24" width="24" src="../back.gif" border="0" alt="OpenBSD"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: crypto.html,v 1.137 ]<br>
$Translation: crypto.html,v 1.111 2013/05/08 11:30:30 ajacoutot Exp $<br>
-->
$OpenBSD: crypto.html,v 1.101 2013/05/08 13:48:34 ajacoutot Exp $
</small>
</body>
</html>
@


1.101
log
@Sync with Steelix CVS
@
text
@d582 1
a582 1
$OpenBSD$
@


1.100
log
@Sync with Steelix CVS
@
text
@d579 2
a580 2
Originally [OpenBSD: crypto.html,v 1.137]<br>
$Translation: crypto.html,v 1.110 2013/03/25 21:35:39 steffen Exp $<br>
@


1.99
log
@Sync with Steelix CVS
@
text
@a251 3
<li>In AFS, um die Nachrichten zu schützen, die über das Netzwerk gehen,
    und um Vertrauen im Zugriff auf entfernte Dateisysteme zu
    gewährleisten.
d579 2
a580 2
Originally [OpenBSD: crypto.html,v 1.136]<br>
$Translation: crypto.html,v 1.109 2012/04/24 18:47:47 steffen Exp $<br>
@


1.98
log
@Sync with Steelix CVS
@
text
@d21 4
a24 4
ist kein Produkt sondern ein Prozess.« Es steckt mehr dahinter,
als starke Kryptographie in ein System zu integrieren. Es bedeutet, das
gesamte System so zu entwerfen, dass alle Sicherheitsmaßnahmen -
inklusive der Kryptographie - zusammenarbeiten.
d55 1
a55 1
Exports von kryptographischer Software und ist sogar noch offener
d63 9
a71 9
Betriebssystem integriert. Wir verlangen, dass die kryptographische
Software, die wir benutzen wollen, <a href="policy.html">frei
erhältlich ist und guten Lizenzen unterliegt</a>. Wir benutzen keine
Kryptographie mit unzulänglichen Lizenzen direkt. Wir verlangen
außerdem, dass solche Software aus Ländern mit vernünftigen
Exportbedingungen kommt, da wir nicht die Gesetze irgendeines Landes
brechen wollen. Die kryptographischen Komponenten, die wir momentan
benutzen, wurden in Argentinien, Australien, Deutschland,
Griechenland, Kanada, Norwegen und Schweden geschrieben.
d74 1
a74 1
Wenn wir OpenBSD-Releases oder -Schnappschüsse machen, erzeugen wir diese
d83 3
a85 2
aus Schweden. Unsere X11-Quellen wurden ebenfalls so erweitert, dass
sie Gebrauch von Kerberos machen.
d91 4
a94 3
ausgeliefert wurde. IPsec ist Teil des Systems seit der
Veröffentlichung des OpenBSD-Releases 2.1 im Jahre 1997. Unser voll
konformer kernelinterner IPsec-Stack mit möglicher
d103 3
a105 2
erhöhen. Die in OpenBSD integrierte Kryptographie kann in folgende
Bereiche unterteilt werden:
d119 3
a121 3
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&amp;sektion=8">ssl</a>)
jegliche lizenzierten oder patentierten Komponenten nutzten
externen Bibliotheken.
d128 3
a130 2
unterstützt Einmalpasswörter durch
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey&amp;sektion=1">skey</a>.
d135 4
a138 3
und sie OpenBSD-fiziert. Ungefähr ein Jahr später haben wir OpenSSH so
erweitert, dass es nun auch das SSH-2-Protokoll beherrscht. Das
Resultat ist, dass nun alle drei großen SSH-Protokolle unterstützt
d145 2
a146 1
Generator) versorgt Anwendungen mit einem Strom aus zufälligen Zahlenfolgen, welche einen erheblichen Einfluss auf die Sicherheit des Systems haben:
d165 2
a166 2
Userlandprogramme weitergegeben. Bisher werden Zufallszahlen benutzt
von:<p>
d183 3
a185 2
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8">isakmpd</a>,
    um lebende Beweise für Schlüsselaustausch zu haben.
d193 3
a195 2
Zeichenkette konstanter Länge. Mit einer kryptographischen Hashfunktion
können folgende Szenarien nicht eintreten:
d207 13
a219 10
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey&amp;sektion=1">S/Key</a>,
    um Einmalpasswörter bereitzustellen.
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec&amp;sektion=4">IPsec</a>
    und
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8">isakmpd(8)</a>,
    um die Herkunft von Daten zu authentifizieren und Paketintegrität
    zu gewährleisten.
<li>Um MD5-Passwörter im FreeBSD-Stil bereitzustellen (standardmäßig nicht ermöglicht), siehe
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=login.conf&amp;sektion=5">
    login.conf(5)</a>
d226 2
a227 1
<h3><font color="#e00000">Symmetrische Verschlüsselungsalgorithmen</font></h3><p>
d230 5
a234 4
entschlüsseln. Normalerweise werden sie mit einem Schlüssel zur Ver- und
einem Schlüssel zur Entschlüsselung gebraucht. Die Sicherheit eines
symmetrischen Algorithmus sollte wirklich nur auf den Schlüsseln
beruhen.
d242 6
a247 6
<li>In der libc für die Erstellung von <a
    href="http://www.openbsd.org/cgi-bin/man.cgi?query=blf_key&amp;sektion=3"
    >Blowfish</a>-Passwörtern. Siehe dazu auch das <a
    href="../papers/bcrypt-paper.ps">USENIX paper</a>.
<li>In <a
    href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec&amp;sektion=4"
d249 2
a250 2
<li>In <a
    href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8"
d261 2
a262 1
<h3><font color="#e00000">Unterstützung für kryptographische Hardware</font></h3><p>
d267 2
a268 2
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crypto&amp;sektion=9">
    IPsec crypto dequeue</a></b><br>
d270 2
a271 2
    Funktionen auch außer der Reihe gemacht werden können. Die
    meisten Software-IPsec-Stacks müssen die kryptographischen
d273 9
a281 9
    Das resultiert in niedriger Performance. Um Hardware sauber
    und schnell zu nutzen, müssen diese zwei Komponenten getrennt werden -
    wie von uns durchgeführt. Dabei springt sogar etwas extra
    Performance auf der Softwareseite heraus.
<p>
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hifn&amp;sektion=4">
    Hifn 7751</a></b><br>Karten, die den Hifn 7751 verwenden, können
    als symmetrischer kryptographischer Hardwarebeschleuniger benutzt
    werden, z.&nbsp;B.
d289 6
a294 6
    einer P3/550-CPU von beinahe 600 Prozent. An weiteren Verbesserungen
    bezüglich einiger Punkte wird noch gearbeitet, aber mit dem Stand vom
    13. April 2000
    wird der Quelltext als stabil angesehen. Wir haben unseren eigenen Treiber
    geschrieben, um diesen Chip zu unterstützen, anstatt den (in den
    USA geschriebenen)
d305 2
a306 2
    und einen Zufallszahlengenerator (unterstützt) enthält. Die Karten
    wurden von
d317 2
a318 2
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipcomp&amp;sektion=4">ipcomp(4)</a>
    benutzt wird.
d324 5
a328 4
    Anfänglich war der Umgang mit Hifn schwierig. Hifn drohte, uns wegen des
    außerhalb der USA durchgeführten Reverseengineering ihres 
    crypto-unlock-Algorithmus zu verklagen. In Letzter Zeit allerdings haben 
    sich die Wogen geglättet und Hifn unterstützt uns mit Boards und Support
d331 6
a336 5
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lofn&amp;sektion=4">
    Hifn 6500</a></b><br>
    Dieses Gerät ist eine asymmetrische Kryptoeinheit. Sie unterstützt
    RSA-, DSA- und DH-Algorithmen, sowie die meisten häufig vorkommenden
    Funktionen. Es ist ein sehr schneller Zufallszahlengenerator enthalten.
d344 5
a348 4
    Kryptoeinheit. Es unterstützt RSA-, DSA- und DH-Algorithmen sowie
    andere wichtige Big-Number-Funktionen und verfügt auch über einen
    Zufallszahlengenerator. Momentan werden die Big-Number-Engine und
    der Zufallszahlengenerator unterstützt (keine Pakettransformationen).
d351 2
a352 2
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ubsec&amp;sektion=4">
    Broadcom
d358 3
a360 2
    Testchip 5501). Diese Geräte liefern die schnellste symmetrische
    Kryptographie, die wir bisher gesehen haben.
d363 5
a367 5
    Komponenten produziert. Die neue BCM5805 ist ähnlich, nur wurde sie
    durch eine asymmetrische Maschine erweitert, um DSA-, RSA-
    und ähnliche Algorithmen zu unterstützen. Durch die
    annähernd doppelt so hohen Geschwindigkeit im Vergleich zur Hifn wird
    dieser Chip hoffentlich bald sehr viel verbreiteter sein.
d369 2
a370 2
    Die Leute von Broadcom/Bluesteelnet waren wirklich großartig. Sie
    stellten uns die komplette Dokumentation für ihre Chips bereit,
d380 2
a381 2
    BCM5805 ist. Noch ungetestete Unterstützung für den BCM5821 wurde
    mit 3.0 hinzugefügt.
d398 9
a406 7
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ises&amp;sektion=4">
    Securealink PCC-ISES</a></b><br>
    Der <a href="http://www.safenet-inc.com/technology/chips/safexcel_ises.asp">PCC-ISES</a>
    ist ein neuer Chipsatz aus den Niederlanden. Wir haben
    Probehardware und Dokumentation erhalten - die Arbeit an einem Treiber
    ist im Gange. Im Moment kann der Treiber bereits Zufallszahlen an
    den Entropiepool des Kernels liefern.
d409 2
a410 2
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=safe&amp;sektion=4">
    SafeNet SafeXcel 1141/1741</a></b><br>
d413 5
a417 4
    <a href="http://www.safenet-inc.com/products/accCards/">SafeNet</a>-Kryptokarten
    verbaut. Unterstützt werden symmetrische Operationen mit DES,
    Triple-DES, AES, MD5 und SHA-1, RNG, Publickey-Operationen und
    vollständige IPsec-Paketverarbeitung.
d422 4
a425 3
    <a href="http://www.safenet-inc.com/products/chips/safeXcel1840.asp">SafeNet 1840</a>-Kryptochip
    bekommen. Wir arbeiten daran, wenigstens die RNG- und symmetrische
    Kryptographie dieser Geräte zu unterstützen.
d430 4
a433 3
    <a href="http://www.safenet-inc.com/products/chips/safeXcel2141.asp">SafeNet</a>-Kryptochips
    bekommen. Wir arbeiten daran, wenigstens die symmetrische
    Kryptographie zu unterstützen.
d436 2
a437 2
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=txp&amp;sektion=4">
    3com 3cr990</a></b><br>
d439 8
a446 8
    Chipsets zu unterstützen. Wir haben basierend darauf einen
    eigenen Ethernettreiber geschrieben. Der Treiber wurde jetzt in
    OpenBSD eingefügt, da wir eine freie Lizenz für den Microcode
    erhalten haben. Wegen schlechter Dokumentation und einem Mangel an
    Kooperation (der teilweise durch die hohen Austauschraten bei 3com
    begründet ist), werden die IPsec-Funktionen des Chips nicht
    unterstützt ... es hat sich als volkommen sinnfreie Erfahrung
    herausgestellt.
d452 3
a454 2
    Dokumentation bereitzustellen. Wir haben mit etwa fünf Technikern
    gesprochen, welche an der Entwicklung dieser Produkte beteiligt sind.
d465 2
a466 2
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pchb&amp;sektion=4">
    Intel 82802AB/82802AC Firmware Hub RNG</a></b><br>
d470 3
a472 2
    dem 10. April 2000 unterstützen wir den RNG. Wir werden
    Unterstützung für weitere RNGs auf anderen Kryptochips hinzufügen.
d484 9
a492 9
    AES-Implementation, auf die mittels einfacher Befehle zugegriffen
    werden kann. Seit <a href="34.html">3.4</a> unterstützt der Kernel
    die Benutzung im Kontext von IPsec und exportiert sie mittels
    <tt>/dev/crypto</tt>. Mit <a href="35.html">3.5</a> wurden die
    Geschwindigkeiten erheblich verbessert und OpenSSL benutzt die
    neuen Befehle direkt ohne die Notwendigkeit eines Zugriffs auf den
    Kernel, was zu einer erheblichen Geschwindigkeitssteigerung
    für Anwendungen führt, die OpenSSL verwenden, um AES-Verschlüsselung
    zu bekommen (AES-128 wurde mit 780 MByte/s gemessen).
a494 1

d498 5
a502 5
    beherschen. Seit OpenBSD 3.2 funktioniert diese Unterstützung; jede
    Karte mit einer solchen Funktionalität, sofern unterstützt, wird
    automatisch diese Hardware benutzen - einschließlich OpenSSH und dem
    httpd im SSL-Modus. An den Applikationen werden keinerlei
    Änderungen benötigt.
d582 2
a583 2
Originally [OpenBSD: crypto.html,v 1.136 ]<br>
$Translation: crypto.html,v 1.108 2012/04/19 17:46:12 steffen Exp $<br>
@


1.97
log
@Sync with Steelix CVS
@
text
@d74 1
a74 1
Wenn wir OpenBSD-Releases oder -Snapshots machen, erzeugen wir diese
d82 1
a82 1
Die Codebasis, die wir benutzen, ist die exportierbare Heimdal-Version
d278 1
a278 1
    wird der Code als stabil angesehen. Wir haben unseren eigenen Treiber
d559 1
a559 1
$Translation: crypto.html,v 1.107 2011/12/23 19:12:14 steffen Exp $<br>
@


1.96
log
@Sync with Steelix CVS
@
text
@d452 1
a452 1
    Anweisung. Seit <a href="../33.html">3.3</a> wird dieser
d460 1
a460 1
    werden kann. Seit <a href="../34.html">3.4</a> unterstützt der Kernel
d462 1
a462 1
    <tt>/dev/crypto</tt>. Mit <a href="../35.html">3.5</a> wurden die
d506 1
a506 1
    <a href="../events.html#usenix99">Usenix 1999</a>,
d513 1
a513 1
    <a href="../events.html#usenix99">Usenix 1999</a>,
d523 1
a523 1
    <a href="../events.html#usenix2000">Usenix 2000</a>,
d530 1
a530 1
    <a href="../events.html#sec2000">Usenix Security 2000</a>,
d536 1
a536 1
    <a href="../events.html#usenix2003">Usenix 2003</a>, von
d559 1
a559 1
$Translation: crypto.html,v 1.106 2011/11/27 20:52:36 tobias Exp $<br>
@


1.95
log
@Sync with Steelix CVS
@
text
@d152 1
a152 1
Anfangswerte auch die gleiche Ergebnisse produziert werden.
d163 1
a163 1
<li>DynamischeZuweisung des sin_port in bind(2).
d260 1
a260 1
    und schnell zu nutzen, müßen diese zwei Komponenten getrennt werden -
d274 1
a274 1
    eines Tunnels einsetzt: das ist eine Verbesserung gegenüber
d290 2
a291 2
    die einen Beschleuniger für öffentliche Schlüssel(nicht unterstützt)
    und einen Zufallszahlengenerator (unterstützt)enthält. Die Karten
d301 1
a301 1
    Nach der Veröffentlichung von 3.2, wurde eine Unterstützung für
d306 1
a306 1
    Mit der Veröffentlichung von 3.4, wurde Unterstützung für die
d310 1
a310 1
    Anfänglich war der Umgang mit Hifn schwierig. Hifn drohte uns wegen des
d313 1
a313 1
    sich die Wogen geglättet und Hifn unterstützt uns und mit Boards und Support
d319 3
a321 3
    RSA-, DSA- und DH-Algorithmen, sowie die meisten häufig vorkommende
    Funktionen. Es sind ein sehr schneller Zufallszahlengenerator enthalten.
    Wir haben ein Gerät, die vollständige Dokumentation, und Beispielquelltext.
d352 1
a352 1
    stellten uns die komplette Dokumentation für ihre Chips beriet,
d422 2
a423 1
    unterstützt ... es hat sich als volkommen sinnfreie Erfashrung heruasgestellt.
d433 4
a436 3
  Aber ihre Hände sind vom Management gebunden, welches keinen Vorteil darin
  sehen, uns dieser Dokumentation zu versorgen. 
  Vergiss Intel (wenn du dir Gigabitethernethardware kaufen willst, empfehlen wir alles andere ... aus eben dem selben
d474 1
a474 1
    beherschen. Seit OpenBSD 3.2 funktioniert diese Unterstützung und jede
d500 2
a501 2
die Veränderungen geschrieben, die in OPenBSD Einzug gehalten haben.
Die Postscript-Versionen, dieser Vorträge, sind hier erhältlich:
d559 1
a559 1
$Translation: crypto.html,v 1.105 2011/11/04 16:38:56 steffen Exp $<br>
@


1.94
log
@Sync with Steelix CVS
@
text
@d53 1
a53 1
Die <a href="../ECL.html">Exportkontrollliste von Kanada (engl.)</a>
d450 1
a450 1
    Anweisung. Seit <a href="../33.html">3.3 (engl.)</a> wird dieser
d458 1
a458 1
    werden kann. Seit <a href="../34.html">3.4 (engl.)</a> unterstützt der Kernel
d460 1
a460 1
    <tt>/dev/crypto</tt>. Mit <a href="../35.html">3.5 (engl.)</a> wurden die
d504 1
a504 1
    <a href="../events.html#usenix99">Usenix 1999 (engl.)</a>,
d507 2
a508 2
    <a href="../papers/bcrypt-paper.ps">Papierform (engl.)</a> und
    <a href="../papers/bcrypt-slides.ps">Folien (engl.)</a>.
d511 1
a511 1
    <a href="../events.html#usenix99">Usenix 1999 (engl.)</a>,
d517 2
a518 2
    <a href="../papers/crypt-paper.ps">Papierform (engl.)</a> und
    <a href="../papers/crypt-slides.ps">Folien (engl.)</a>.
d521 1
a521 1
    <a href="../events.html#usenix2000">Usenix 2000 (engl.)</a>,
d524 2
a525 2
    <a href="../papers/ikepaper.ps">Papierform (engl.)</a> und
    <a href="../papers/ikeslides.ps">Folien (engl.)</a>.
d528 1
a528 1
    <a href="../events.html#sec2000">Usenix Security 2000 (engl.)</a>,
d530 2
a531 2
    <a href="../papers/swapencrypt.ps">Papierform (engl.)</a> und
    <a href="../papers/swapencrypt-slides.ps">Folien (engl.)</a>.
d534 1
a534 1
    <a href="../events.html#usenix2003">Usenix 2003 (engl.)</a>, von
d538 1
a538 1
    <a href="../papers/ocf.pdf">Papierform (engl.)</a>.
d546 1
a546 1
    <a href="../papers/crypt-service.pdf">Papierform (engl.)</a>.
d557 1
a557 1
$Translation: crypto.html,v 1.104 2011/11/03 15:46:55 steffen Exp $<br>
@


1.93
log
@Sync with Steelix CVS
@
text
@d47 1
a47 2
<h3><font color="#e00000">Warum liefern wir Kryptographie
aus?</font></h3><p>
d53 1
a53 1
Die <a href="../ECL.html">Exportkontrollliste von Kanada</a>
d174 1
a174 1
<li>Zufälliges Padding in IPsec-esp_old-Paketen.
d177 2
a178 3
<li>In <a
    href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8"
    >isakmpd</a>, um lebende Beweise für Schlüsselaustausch zu haben.
d190 1
a190 2
<li>Zwei Eingaben erzeugen die selbe Ausgabe (resistent gegen
    Kollisionen).
d197 1
a197 1
benutzt, z.&nbsp;B. hier:<p>
d206 3
a208 4
<li>Um MD5-Passwörter im FreeBSD-Stil bereitzustellen (standardmäßig nicht ermöglicht),
    siehe <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=passwd.conf&amp;sektion=5"
    >passwd.conf(5)</a>
d364 1
a364 1
<p>
d379 1
d450 1
a450 1
    Anweisung. Seit <a href="33.html">3.3</a> wird dieser
d458 1
a458 1
    werden kann. Seit <a href="34.html">3.4</a> unterstützt der Kernel
d460 1
a460 1
    <tt>/dev/crypto</tt>. Mit <a href="35.html">3.5</a> wurden die
d482 1
d504 1
a504 1
    <a href="events.html#usenix99">Usenix 1999</a>,
d507 2
a508 2
    <a href="../papers/bcrypt-paper.ps">Papierform</a> und
    <a href="../papers/bcrypt-slides.ps">Folien</a>.
d511 1
a511 1
    <a href="events.html#usenix99">Usenix 1999</a>,
d517 2
a518 2
    <a href="../papers/crypt-paper.ps">Papierform</a> und
    <a href="../papers/crypt-slides.ps">Folien</a>.
d521 1
a521 1
    <a href="events.html#usenix2000">Usenix 2000</a>,
d524 2
a525 2
    <a href="../papers/ikepaper.ps">Papierform</a> und
    <a href="../papers/ikeslides.ps">Folien</a>.
d528 1
a528 1
    <a href="events.html#sec2000">Usenix Security 2000</a>,
d530 2
a531 2
    <a href="../papers/swapencrypt.ps">Papierform</a> und
    <a href="../papers/swapencrypt-slides.ps">Folien</a>.
d534 1
a534 1
    <a href="events.html#usenix2003">Usenix 2003</a>, von
d538 1
a538 1
    <a href="../papers/ocf.pdf">Papierform</a>.
d546 1
a546 1
    <a href="papers/crypt-service.pdf">Papierform</a>.
d557 1
a557 1
$Translation: crypto.html,v 1.103 2011/04/13 18:07:00 hologram Exp $<br>
@


1.92
log
@Sync with Steelix CVS
@
text
@d50 1
a50 1
In drei Worten: <strong>Weil wir können</strong>.<p>
d95 2
a96 2
ISAKMP-Daemon wird als eine der Maschinen im IPsec conformance
testbed der <a href="http://www.vpnc.org">VPNC</a> benutzt.
d100 1
a100 1
Heutzutage ist Kryptographie eine wichtige Sache, um die
d103 1
a103 1
Bereiche klassifiziert werden:
d113 1
a113 1
Version 1 und hat viele weitere Funktionalitäten,
d116 1
a116 1
alle Teile restriktiver Natur wurden entfernt (also Patente, siehe
d118 1
a118 1
jegliche lizenzierten oder patentierten Komponenten stammten aus
d121 1
a121 1
wurde um das Protokoll Version 1.5 erweitert.
d126 1
a126 1
unterstützte Einmalpasswörter durch
d134 1
a134 1
Resultat ist, dass alle drei großen SSH-Protokolle unterstützt
d141 1
a141 2
Generator) versorgt Applikationen mit einem Zahlenstrom, der einen
erheblichen Einfluss auf die Sicherheit des Systems hat:
d152 2
a153 2
Ein PRNG ist eigentlich nur ein Algorithmus, bei dem mit den selben
Startwerten auch die selben Ergebnisse herauskommen.
d155 1
a155 1
Zufallsdaten zu füttern.
d159 1
a159 1
Zufallszahlen stehen den Kernelroutinen zur Verfügung und werden an
d164 1
a164 1
<li>Dynamische sin_port-Zuweisung in bind(2).
d173 1
a173 1
<li>Zufälligkeit zum TCP-ISS hinzugefügt, um spoofing-Angriffe zu
d199 2
a200 3
In OpenBSD werden MD5, SHA1, und RIPEMD-160 als kryptographische
Hashfunktionen benutzt,
z.&nbsp;B. hier:<p>
d209 1
a209 1
<li>Um MD5-Passwörter im FreeBSD-Stil bereitzustellen (kein Standard),
d229 1
a229 1
für Kernel- und Userlandprogramme zur Verfügung, die an vielen Plätzen,
d254 1
a254 1
OpenBSD unterstützt seit Release 2.7 einige kryptographische Hardware
d263 4
a266 4
    Das resultiert in synchroner Leistungsfähigkeit. Um Hardware sauber
    und schnell zu nutzen, muss man diese zwei Komponenten trennen -
    wie von uns durchgeführt. Tatsächlich springt dabei sogar etwas
    Leistung für die Softwareseite heraus.
d278 4
a281 3
    eines Tunnels hat: das ist fast eine 600%ige Verbesserung gegenüber
    einer P3/550-CPU. An weiteren Verbesserungen bezüglich einiger
    Punkte wird noch gearbeitet, aber mit dem Stand vom 13. April 2000
d287 1
a287 1
    Der 7751 wird in Bezug auf Industriestandard als langsam angesehen
d289 1
a289 1
    schnelleren aber auch teureren Chip).
d292 5
a296 5
    Nachdem 2.9 veröffentlicht wurde, wurde noch Unterstützung für
    den Hifn-7951-Chip hinzugefügt; eine vereinfachte Version des 7751,
    die einen Beschleuniger für öffentliche Schlüssel enthält
    (noch nicht unterstützt) und einen Zufallszahlengenerator
    (unterstützt). Die Karten wurden von
d299 1
a299 1
    Nach der Veröffentlichung von 3.0 wurde dann noch Unterstützung
d305 1
a305 1
    Nachdem 3.2 veröffentlicht wurde, wurde eine Unterstützung für
d310 1
a310 1
    Nachdem 3.4 veröffentlicht wurde, wurde Unterstützung für die
d314 4
a317 5
    Hifn war anfänglich eine Firma, mit der schwer umzugehen war
    (sie haben uns angedroht, uns wegen unseres außerhalb der USA
    stattgefundenem Reverseengineerings ihres crypto-unlock-Algorithmus
    zu verklagen), aber in letzter Zeit haben sie uns besser unterstützt
    und uns Boards gegeben.
d323 4
a326 5
    RSA-, DSA- und DH-Algorithmen sowie andere häufig vorkommende
    Funktionen. Es enthält einen sehr schnellen Zufallszahlengenerator.
    Wir haben ein Gerät, die ganze Dokumentation, und Beispielquelltext.
    Mit 3.1 arbeiten sowohl der Zufallsgenerator als auch die
    Big-Number-Unit.
d343 1
a343 1
    erstmalige Unterstützung für diese frühen Versionen erreichen, die
d349 5
a353 5
    Komponenten gemacht. Ihre neue BCM5805 ist ähnlich, außer dass sie
    auch eine asymmetrische Maschine hinzugefügt haben, um DSA-, RSA-
    und ähnliche Algorithmen zu unterstützen. Mit einer
    annähernd doppelt so hohen Geschwindigkeit wie die der Hifn wird
    dieser Chip hoffentlich bald verbreiteter sein.
d356 1
a356 1
    gaben uns die komplette Dokumentation für ihre Chips,
d367 1
a367 1
    auch nach 3.0 hinzugefügt.
d373 2
a374 2
    vor OpenBSD 3.2 hinzugefügt (die ungetestete BCM5821-Unterstützung
    in 3.1 hat wegen einiger nicht dokumentierter
d377 1
a377 1
    Partielle Unterstützung für BCM5823 wurde bei 3.4 hinzugefügt.
d387 1
a387 1
    Probehardware und Dokumentation - die Arbeit an einem Treiber
d397 1
a397 1
    eingesetzt. Unterstützt symmetrische Operationen mit DES,
d406 1
a406 1
    Kryptographie dieser Devices zu unterstützen.
d425 1
a425 2
    unterstützt ... Daher hat sich das Ganze als gar nicht sinnvolle
    Erfahrung herausgestellt.
d431 7
a437 7
    Dokumentation zu geben. Wir haben mit etwa fünf Technikern
    gesprochen, die an der Entwicklung dieser Produkte beteiligt sind.
    Sie alle wollten, dass wir Dokumentation bekommen. Sie loben uns für
    das, was wir bisher getan haben. Aber ihre Hände sind vom Management
    gebunden, die für sich keinen Vorteil sehen, wenn sie uns
    Dokumentation geben. Vergiss Intel (wenn du Gigabitethernethardware
    kaufen willst, empfehlen wir alles andere ... aus eben dem selben
d446 1
a446 1
    Hoch performantes IPsec benötigt mehr Zufallszahlenentropie. Seit
d474 4
a477 4
    unterstützen, die RSA/DH/DSA automatisch über OpenSSL-Aufrufe
    können. Seit OpenBSD 3.2 funktioniert diese Unterstützung und jede
    Karte mit einer solchen Funktionalität, die unterstützt wird, wird
    automatisch die Hardware benutzen - einschließlich OpenSSH und dem
d492 1
a492 1
Kryptographie interessiert ist, soll er uns kontaktieren.
d499 3
a501 3
Eine Reihe Leute aus dem OpenBSD-Team haben Vorträge über
die Veränderungen geschrieben, die sie in OpenBSD eingeführt haben.
Die Postscript-Versionen sind hier erhältlich:
d558 2
a559 2
Originally [OpenBSD: crypto.html,v 1.135 ]<br>
$Translation: crypto.html,v 1.102 2009/08/01 21:35:45 tobias Exp $<br>
@


1.91
log
@Sync with Steelix CVS -- we are back to normal operation!
@
text
@d383 1
a383 1
    Unterstützung für AES mit BCM5823 oder neuer wurde vor 4.5
d562 2
a563 2
Originally [OpenBSD: crypto.html,v 1.134 ]<br>
$Translation: crypto.html,v 1.101 2009/04/25 11:40:22 tobias Exp $<br>
@


1.90
log
@Sync with Steelix CVS
@
text
@d342 2
a343 1
    Broadcom BCM5801/BCM5802/BCM5805/BCM5820/BCM5821/BCM5822/5823
d380 5
a384 2
    Partielle Unterstützung für BCM5823 wurde bei 3.4 hinzugefügt. Der
    Chip unterstützt AES, der Treiber aber nicht.
d562 2
a563 2
Originally [OpenBSD: crypto.html,v 1.133 ]<br>
$Translation: crypto.html,v 1.100 2008/03/06 21:51:02 paldium Exp $<br>
@


1.89
log
@Sync with Steelix CVS
@
text
@d55 1
a55 1
beinhaltet keine signifikaten Beschränkungen bezüglich des
d59 2
a60 3
<a href="http://www.efc.ca/pages/doc/crypto-export.html">
einige Nachforschungen betrieben, um die Kryptographiegesetze zu prüfen
</a>.
d123 1
a123 1
beinhaltet Unterstützung für Kerberosauthenfizierung und
d141 2
a142 2
Generator) versorgt Applikationen mit einem Strom von Zahlen, die einen
erheblichen Einfluss auf die Sicherheit des Systems haben:
d171 1
a171 1
<li>Inode generation numbers, siehe getfh(2) und fsirand(8).
d173 1
a173 1
<li>Stärkere temporäre Namen für mktemp(3) und mkstemp(3)
d176 2
a177 2
<li>Zufälliges padding in IPsec-esp_old-Paketen.
<li>Um salts für die verschiedenen Passwortalgorithmen zu generieren.
d179 3
a181 2
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8">isakmpd</a>,
    um lebende Beweise für Schlüsselaustausch zu haben.
d189 2
a190 2
Zeichenkette konstanter Länge. Für eine kryptographische Hashfunktion
ist es undurchführbar, Folgendes zu finden:
d193 4
a196 4
<li>Zwei Eingaben, die die selbe Ausgabe erzeugen (resistent gegen
	Kollisionen).
<li>Eine andere Eingabe für eine gegebene Eingabe mit der selben Ausgabe
	(2nd preimage resistant).
d211 5
a215 4
<li>Um MD5-Passwörter im FreeBSD-Stil bereitzustellen (kein Standard), siehe
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=passwd.conf&amp;sektion=5">
    passwd.conf(5)</a>
<li>In libssl zum digitalen Signieren von Nachrichten.
d235 10
a244 8
<li>In der libc zum Erstellen von
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=blf_key&amp;sektion=3">Blowfish</a>-Passwörtern.
    Dazu siehe auch das <a href="../papers/bcrypt-paper.ps">USENIX paper</a>.
<li>In
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec&amp;sektion=4">IPsec</a>,
    um Vertrauen in die Netzwerkschicht zu bringen.
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd&amp;sektion=8">isakmpd</a>,
    um den Austausch von IPsec-Schlüsselmaterial zu schützen.
d249 1
a249 1
    zudem De-facto-Standard-SSL-Protokoll laufen zu lassen.
d266 1
a266 1
    und schnell zu nutzen, muss man diese zwei Komponenten trennen, so
d313 1
a313 1
    des vorherigen 7951-Chips beherschen diese AES.
d316 4
a319 4
    (sie haben uns angedroht, uns wegen unseres nicht USA reverse
    engineering ihres crypto-unlock-Algorithmus zu verklagen), aber
    in letzter Zeit haben sie uns besser unterstützt und uns Boards und
    Unterstützung gegeben.
d325 1
a325 1
    RSA-, DSA- und DH-Algorithmen genauso wie andere häufig vorkommende
d328 2
a329 2
    Mit 3.1 arbeiten sowohl der Zufallsgenerator als auch die big
    number unit.
d335 4
a338 5
    Kryptoeinheit. Es hat Unterstützung für RSA-, DSA- und
    DH-Algorithmen, wie auch für andere wichtige big number functions
    und hat auch einen Zufallszahlengenerator. Momentan werden die big
    number engine und der Zufallszahlengenerator unterstützt (keine
    Pakettransformationen).
d346 2
a347 2
    uns der Hersteller zur Verfügung gestellt hat, insbesondere mit dem
    Testchip 5501. Diese Geräte liefern die schnellste symmetrische
d353 2
a354 2
    und ähnliche Algorithmen zu untersützen. Mit einer
    annähernd doppelt so großen Geschwindigkeit wie die der Hifn wird
d364 1
a364 1
    und diese dann in den Kernel Entropie Pool übergibt.
d371 1
a371 1
    Mit 3.1 wurde die big num engine unterstützt und
d386 1
a386 1
    Probehardware und Dokumentation, und die Arbeit an einem Treiber
d388 1
a388 1
    den Kernel Entropie Pool liefern.
d422 1
a422 1
    Koorperation (der teilweise durch die hohen Austauschraten bei 3com
d424 1
a424 1
    unterstützt ... Daher hat sich das ganze als gar nicht sinnvolle
d431 4
a434 4
    Dokumentation zu geben. Wir haben mit etwa 5 Technikern gesprochen,
    die an der Entwicklung dieser Produkte beteiligt sind. Sie alle
    wollten, dass wir Dokumentation bekommen. Sie loben uns für das,
    was wir bisher getan haben. Aber ihre Hände sind vom Management
d436 4
a439 5
    Dokumentation geben. Vergiss Intel.
    (Wenn du Gigabitethernethardware kaufen willst, empfehlen wir
    alles andere ... aus eben dem selben Grund: Die meisten Treiber,
    die wir bisher geschrieben haben, wurden ohne Dokumentation
    geschrieben.)
d454 2
a455 2
    Zufallszahlengenerator im Kernel dazu genutzt, den
    entropie pool zu füllen.
d491 1
a491 1
Zwänge nicht betreffen, an Mitarbeit an unserer eingebettenen
d529 1
a529 1
<li>Encrypting Virtual Memory<br>
d559 1
a559 1
$Translation: crypto.html,v 1.98 2007/11/03 10:45:15 paldium Exp $<br>
@


1.88
log
@Sync with steelix translation CVS
@
text
@d50 1
a50 1
In drei Worten: <strong>weil wir können</strong>.<p>
d119 1
a119 1
jegliche lizensierten oder patentierten Komponenten stammten aus
d310 1
a310 1
    des vorherigen 7591-Chips beherschen diese AES.
d357 2
a358 2
    Beispielquelltext und dazu noch eine ausreichende Menge an Karten,
    um das ganze zu testen.
d459 1
a459 1
    AES-Implementierung, auf die mittels einfacher Befehle zugegriffen
d498 1
a498 1
Eine Reihe von Leuten aus dem OpenBSD-Team haben Vorträge über
d558 1
a558 1
$Translation: crypto.html,v 1.95 2007/04/25 15:41:08 paldium Exp $<br>
@


1.87
log
@sync with Steelix CVS
@
text
@d24 1
a24 1
inklusive der Kryptographie - zusammenarbeiten. 
d27 1
a27 1
-- Bruce Schneier, Autor von Applied Cryptography.
d33 2
a34 2
<a href="#why">Warum liefern wir Kryptographie aus?</a><br> 
<a href="#ssh">OpenSSH</a>.<br> 
d58 1
a58 1
Marc Plumb hat 
d94 1
a94 1
konformer kernelinterner IPsec-Stack mit möglicher 
d101 2
a102 2
Heutzutage ist Kryptographie eine wichtige Sache, um die 
<a href="security.html">Sicherheit</a> eines Betriebssystems zu 
d110 1
a110 1
Seit dem Release 2.6 hat OpenBSD 
d112 1
a112 1
freie und nicht patentierte Version von ssh. 
d127 1
a127 1
unterstützte Einmalpasswörter durch 
d203 1
a203 1
<ul> 
d270 1
a270 1
    werden, z.&nbsp;B. 
d278 1
a278 1
    einer P3/550-CPU.  An weiteren Verbesserungen bezüglich einiger
d294 1
a294 1
    (unterstützt).  Die Karten wurden von
d297 2
a298 2
    Nach der Veröffentlichung von 3.0 wurde dann noch Unterstützung 
    für den Hifn-7811-Chip hinzugefügt; einer schnelleren Version 
d312 1
a312 1
    Hifn war anfänglich eine Firma, mit der schwer umzugehen war 
d351 1
a351 1
    und ähnliche Algorithmen zu untersützen. Mit einer 
d353 1
a353 1
    dieser Chip hoffentlich bald verbreiteter sein. 
d382 2
a383 2
    Der <a href="http://www.safenet-inc.com/technology/chips/safexcel_ises.asp">PCC-ISES</a> 
    ist ein neuer Chipsatz aus den Niederlanden.  Wir haben
d403 1
a403 1
    Kryptographie dieser Devices zu unterstützen. 
d410 1
a410 1
    Kryptographie zu unterstützen. 
d434 1
a434 1
    Dokumentation geben. Vergiss Intel. 
d558 1
a558 1
$Translation: crypto.html,v 1.94 2007/01/07 16:54:20 paldium Exp $<br>
@


1.86
log
@sync with Steelix CVS
@
text
@d540 8
d557 2
a558 2
Originally [OpenBSD: crypto.html,v 1.131 ]<br>
$Translation: crypto.html,v 1.93 2006/04/24 17:44:23 paldium Exp $<br>
@


1.85
log
@sync with steelix translation CVS
@
text
@a4 1
<meta http-equiv="Content-Language" content="de">
d7 2
a8 2
<meta name="description" content="OpenBSD-Kryptographie">
<meta name="keywords" content="openbsd,kryptographie,openssh,openssl,kerberos">
d11 1
a11 1
<meta name="copyright" content="Dieses Dokument unterliegt dem Copyright von OpenBSD 1997 - 2006.">
d549 2
a550 2
Originally [OpenBSD: crypto.html,v 1.131 ]
$Translation: crypto.html,v 1.92 2006/04/04 14:00:58 paldium Exp $
@


1.84
log
@sync with Steelix CVS
@
text
@d409 1
a409 1
    <a href="http://www.safenet-inc.com/technology/chips/safeXcel2141.asp">SafeNet</a>-Kryptochips
d551 1
a551 1
$Translation: crypto.html,v 1.91 2006/03/28 16:24:39 paldium Exp $
@


1.83
log
@sync with steelix translation CVS
@
text
@d409 1
a409 1
    <a href="http://www.safenet-inc.com/technology/chips/safexcel2141.asp">SafeNet</a>-Kryptochips
d551 1
a551 1
$Translation: crypto.html,v 1.90 2006/03/23 14:12:58 paldium Exp $
@


1.82
log
@sync with steelix translation CVS
@
text
@d391 1
a391 1
    SafeNet SafeXcel 1141/1742</a></b><br>
d550 2
a551 2
Originally [OpenBSD: crypto.html,v 1.130 ]
$Translation: crypto.html,v 1.89 2006/03/17 20:57:17 paldium Exp $
@


1.81
log
@sync with Steelix CVS
@
text
@d12 1
a12 1
<meta name="copyright" content="Dieses Dokument unterliegt dem Copyright von OpenBSD 1997 - 2004.">
d389 18
a406 1
       
d409 1
a409 1
    <a href="http://www.safenet-inc.com/technology/chips/safexcel_2141.asp">SafeNet</a>-Kryptokarten
d550 2
a551 2
Originally [OpenBSD: crypto.html,v 1.129 ]
$Translation: crypto.html,v 1.88 2005/10/29 10:44:49 paldium Exp $
@


1.80
log
@sync with Steelix CVS
@
text
@d21 5
a25 5
Das Mantra eines jeden guten Sicherheitsingenieurs ist: ,Sicherheit
ist kein Produkt, sondern ein Prozess.' Es steckt mehr dahinter,
als starke Kryptographie in ein System zu integrieren, es bedeutet, das
gesamte System so zu entwerfen, dass alle Sicherheitsmaßnahmen,
inklusive der Kryptographie, zusammenarbeiten. 
d28 1
a28 1
-- Bruce Schneier, Autor von ,Applied Cryptography'.
d36 1
a36 1
<a href="#prng">Pseudo-Zufallszahlengeneratoren</a> (PRNG): ARC4,
d38 1
a38 1
<a href="#hash">Kryptographische Hash-Funktionen</a>: MD5, SHA1, ...<br>
d55 1
a55 1
Die <a href="../ECL.html">Export-Kontrollliste von Kanada</a>
d57 1
a57 1
Exports von kryptographischer Software und ist sogar noch offener,
d92 1
a92 1
OpenBSD war das erste Betriebssystem, das mit einem IPsec-,stack'
d95 1
a95 1
konformer kernelinterner IPsec-,stack' mit möglicher 
d97 2
a98 2
ISAKMP-Daemon wird als eine der Maschinen im ,IPsec conformance
testbed' von der <a href="http://www.vpnc.org">VPNC</a> benutzt.
d112 1
a112 1
<a href="http://www.openssh.com/">OpenSSH</a> integriert, eine absolut
d125 2
a126 2
beinhaltet Unterstützung für Kerberos-Authenfizierung und
Ticket-Passing.
d128 1
a128 1
unterstützte Einmal-Passwörter durch 
d135 1
a135 1
erweitert, das es nun auch das SSH-2-Protokoll beherrscht. Das
d140 1
a140 1
<h3><font color="#e00000">Pseudo-Zufallszahlengeneratoren</font></h3><p>
d142 2
a143 2
Ein Pseudo-Zufallszahlengenerator (PRNG = Pseudo Random Number
Generator) versorgt Applikationen mit einem Strom an Zahlen, die einen
d148 2
a149 2
<li>Es sollte für einen Außenstehenden unmöglich sein, weitere Zahlen
vorauszusagen, sogar mit Kenntnis der bisherigen Zahlen.
d157 1
a157 1
Bei einem Multi-User-System gibt es viele Möglichkeiten, den PRNG mit
d159 2
a160 2
Der OpenBSD-Kernel benutzt das Maus-Interrupt-Timing,
Netzwerk-Daten-Interrupt-Verzögerungen, die Zeit zwischen Tastendrücken
d162 2
a163 2
Zufallszahlen stehen den Kernel-Routinen zur Verfügung und werden an
Userland-Programme weitergegeben. Bisher werden Zufallszahlen benutzt
d173 1
a173 1
<li>,Inode generation numbers', siehe getfh(2) und fsirand(8).
d175 2
a176 2
<li>Stärkere vorübergehende Namen für mktemp(3) und mkstemp(3)
<li>Zufälligkeit zum TCP-ISS hinzugefügt, um ,spoofing'-Angriffe zu
d178 2
a179 2
<li>Zufälliges ,padding' in IPsec-esp_old-Paketen.
<li>Um ,salts' für die verschiedenen Passwort-Algorithmen zu generieren.
d195 1
a195 1
	Kollisionen),
d197 1
a197 1
	(,2nd preimage resistant').
d206 1
a206 1
    um Einmal-Passwörter bereitzustellen.
d231 1
a231 1
für Kernel- und Userland-Programme zur Verfügung, die an vielen Plätzen,
d259 8
a266 8
    Unser IPsec-,stack' wurde so verändert, dass kryptographische
    Funktionen auch ,außer-der-Reihe' gemacht werden können. Die
    meisten Software-IPsec-,stacks' müssen die kryptographischen
    Funktionen mit jedem einzelnen Paket, das sie behandeln,
    durchführen. Das resultiert in synchroner Leistungsfähigkeit. Um
    Hardware sauber und schnell zu nutzen, muss man diese zwei
    Komponenten trennen, so wie von uns durchgeführt. Tatsächlich
    springt dabei sogar etwas Leistung für die Softwareseite heraus.
d269 1
a269 1
    Hifn-7751</a></b><br>-Karten, die den Hifn 7751 verwenden, können
d276 1
a276 1
    Die momentan dabei erreichte Leistung beträgt 64 Mbit/Sek für
d278 1
a278 1
    eines Tunnels hat, das ist fast eine 600%ige Verbesserung gegenüber
d280 2
a281 2
    Punkte wird noch gearbeitet, aber mit Stand 13. April 2000 wird der
    Quelltext als stabil angesehen. Wir haben unseren eigenen Treiber
d288 2
a289 2
    schnelleren aber auch teuereren Chip).
    Die Spitzenleistung mit 3DES SHA1 ESP beträgt etwa 64 Mbit/Sek.
d291 3
a293 3
    Nachdem 2.9 ausgeliefert worden war, wurde noch Unterstützung für
    den Hifn-7951-Chip hinzugefügt, eine vereinfachte Version des 7751,
    die einen Beschleuniger für ,public keys' enthält
d298 2
a299 2
    Nach der Auslieferung von 3.0 wurde dann noch Unterstützung 
    für den Hifn-7811-Chip hinzugefügt, einer schnelleren Version 
d304 2
a305 2
    Nachdem 3.2 ausgeliefert wurde, wurde eine Unterstützung für
    den LZS-Kompressionsalgorithmus, der von
d307 1
a307 1
    benutzt wird, hinzugefügt.
d309 1
a309 1
    Nachdem 3.4 ausgeliefert wurde, wurde Unterstützung für die
d311 1
a311 1
    des vorherigen 7591-Chips beherrschen diese AES.
d314 2
a315 2
    (sie haben uns angedroht, uns wegen unseres ,nicht-USA reverse
    engineering' ihres ,crypto unlock'-Algorithmus zu verklagen), aber
d322 2
a323 2
    Dieses Gerät ist eine asymmetrische Krypto-Einheit. Sie unterstützt
    RSA-, DSA- und DH-Algorithmen, genauso wie andere häufig vorkommende
d326 2
a327 2
    Mit 3.1 arbeiten sowohl der Zufallsgenerator als auch die ,big
    number unit'.
d332 1
a332 1
    Dieses Gerät ist ein Paket-Prozessor und eine asymmetrische
d334 4
a337 4
    DH-Algorithmen, wie auch für andere wichtige ,big number functions'
    und hat auch einen Zufallszahlengenerator. Momentan werden die ,big
    number engine' und der Zufallszahlengenerator unterstützt (keine
    Paket-Transformationen).
d346 1
a346 1
    Testchip 5501. Diese Geräte bringen die schnellste symmetrische
d350 3
a352 3
    Teile gemacht. Ihre neue BCM5805 ist ähnlich, außer dass sie auch
    eine asymmetrische Maschine hinzugefügt haben, um DSA-, RSA- und
    ähnliche Algorithmen zu untersützen. Mit einer 
d363 1
a363 1
    und diese dann in den ,Kernel Entropie Pool' übergibt.
d370 2
a371 2
    Mit 3.1 wird die ,big num engine' unterstützt und
    RSA/DH/DSA-Operationen können beschleunigt werden.
d376 1
a376 1
    Interrupt-Handling-Probleme nicht funktioniert).
d379 1
a379 1
    Chip unterstützt AES, aber der Treiber nicht.
d385 1
a385 1
    Probe-Hardware und Dokumentation, und die Arbeit an einem Treiber
d387 1
a387 1
    den ,Kernel Entropie Pool' liefern.
d391 1
a391 1
    Wir haben Dokumentation und Probe-Hardware für die
d399 2
a400 2
    3com hat uns einen Treiber gegeben, um die Ethernet-Seite dieses
    Chipsets zu unterstützen, und wir haben basierend darauf einen
d402 1
a402 1
    OpenBSD eingefügt, wo wir eine freie Lizenz für den Microcode
d419 1
a419 1
    (Wenn du Gigabit-Ethernethardware kaufen willst, empfehlen wir
d431 1
a431 1
    Unterstützung für weitere RNGs auf anderen Krypto-Chips hinzufügen.
d436 1
a436 1
    Anweisung. Ab <a href="33.html">3.3</a> wird dieser
d438 1
a438 1
    ,entropie pool' zu füllen.
d451 1
a451 1
    zu bekommen (AES-128 wurde mit 780 MByte/Sek gemessen).
d456 1
a456 1
    Jahre zuvor hatten wir einen großen Plan, Krypto-Karten zu
d460 1
a460 1
    automatisch die Hardware benutzen, einschließlich OpenSSH und dem
d482 1
a482 1
Eine Reihe an Leuten aus dem OpenBSD-Team haben Vorträge über
d534 1
a534 1
$Translation: crypto.html,v 1.87 2005/09/01 18:15:29 paldium Exp $
@


1.79
log
@sync with Steelix CVS
@
text
@d5 1
a6 1
<meta http-equiv="Content-Language" content="de">
d9 1
a9 1
<meta name="keywords" content="openbsd,Kryptographie,openssh,openssl,kerberos">
d12 1
a12 1
<meta name="copyright" content="This document copyright 1997-2004 by OpenBSD.">
d22 1
a22 1
ist kein Produkt, sondern ein Prozess.' Es steckt mehr dahinter
d33 1
a33 1
<strong>Index</strong><br>
d36 2
a37 1
<a href="#prng">Pseudo-Zufallszahlengeneratoren</a> (PRNG): ARC4, ...<br>
d39 2
a40 1
<a href="#trans">Symmetrische Verschlüsselungsverfahren</a>: DES, Blowfish, ...<br>
d48 2
a49 1
<h3><font color="#e00000">Warum liefern wir Kryptographie aus?</font></h3><p>
d51 1
a51 1
In drei Worten:  <strong>weil wir können</strong>.<p>
d55 1
a55 1
Die <a href="../ECL.html">Export Kontrollliste von Kanada</a>
d58 1
a58 1
was den Export frei-erhältlicher kryptographischer Software angeht.
d73 2
a74 2
benutzen, wurden in Argentinien, Australien, Kanada, Deutschland,
Griechenland, Norwegen und Schweden geschrieben.
d77 2
a78 2
Wenn wir OpenBSD-Versionen oder -Snapshots machen, erzeugen wir diese
in freien Ländern, um sicherzustellen, dass sowohl Quellen als auch
d80 1
a80 1
In der Vergangenheit wurden unsere Versionen in Kanada, Schweden und
d92 1
a92 1
OpenBSD war das erste Betriebssystem, das mit einem IPsec-Stack
d94 3
a96 3
Veröffentlichung der OpenBSD-Version 2.1 im Jahre 1997. Unser voll
konformer kernel-interner IPsec-,stack' mit möglicher 
Hardwareuntertstützung durch Zusatzkarten und unser eigener freier
d111 1
a111 1
Seit der Version 2.6 hat OpenBSD 
d115 1
a115 1
Version 1 und hat viele weitere Features,
d135 1
a135 1
erweitert, das es nun auch das SSH-2-Protokoll beherrscht, das
d143 1
a143 1
Generator) versorgt Applikationen mit einem Strom von Zahlen, die einen
d151 1
a151 1
aufweisen, d.h. der PRNG sollte einen sehr langen Kreislauf haben.
d161 1
a161 1
und Festplatten-I/O-Informationen, um Zufallszahlen zu bekommen.
d163 1
a163 1
,userland'-Programme weitergegeben. Bisher werden Zufallszahlen benutzt
d177 1
a177 1
	verhindern.
d182 1
a182 1
        um lebende Beweise für Schlüsselaustausch zu haben.
d191 1
a191 1
ist es undurchführbar, folgendes zu finden:
d194 1
a194 1
<li>Zwei Eingaben, die die selbe Ausgabe erzeugen (Resistent gegen
d197 1
a197 1
	(2nd preimage resistant).
d203 1
a203 1
z.B. hier:<p>
d207 1
a207 1
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec&amp;sektion=4">IPsec</a>,
d223 2
a224 2
Symmetrische Verfahren werden benutzt um Daten zu ver- und
entschlüsseln. Normalerweise werden sie mit einem Schlüsel zur Ver- und
d232 1
a232 1
wie z.B. an diesen benutzt werden:
d242 1
a242 1
    um den Austausch von IPsec Schlüsselmaterial zu schützen.
d244 1
a244 1
    und Vertrauen in den Zugriff auf entfernte Dateisysteme zu
d246 2
a247 2
<li>In libssl um Applikationen über das kryptographisch sichere und
    zudem de-facto-Standard ssl-Protokoll laufen zu lassen.
d254 1
a254 1
OpenBSD unterstützt seit Version 2.7 einige kryptographische Hardware
d271 1
a271 1
    werden, z.B. 
d276 1
a276 1
    Die momentan dabei erreichte Leistung beträgt 64Mbit/Sek für
d280 2
a281 2
    Punkte wird noch gearbeitet, aber mit Stand 13.April 2000 wird der
    Code als stabil angesehen. Wir haben unseren eigenen Treiber
d285 1
a285 1
    benutzen, außerdem arbeitet unser Treiber sauber mit IPsec zusammen.
d289 1
a289 1
    Die Spitzenperformance mit 3DES SHA1 ESP beträgt etwa 64Mbit/Sek.
d293 1
a293 1
    die einen Beschleuniger für Public Keys enthält
d299 2
a300 2
    für den Hifn 7811 Chip hinzugefügt, einer schnelleren Version 
    des 7751 (etwa 130Mbit/s) mit einem Zufallszahlengenerator.
d325 1
a325 1
    Wir haben ein Gerät, die ganze Dokumentation, und Beispielcode.
d333 1
a333 1
    Kryptoeinheit. Sie hat Unterstützung für RSA-, DSA-, und
d353 1
a353 1
    annähernd doppelt so großen Performance wie die der Hifn wird
d357 3
a359 3
    gaben uns die komplette Dokumentation für ihre Chips, Beispielcode
    und dazu noch eine ausreichende Menge an Karten, um das ganze zu
    testen.
d363 1
a363 1
    und diese dann in der ,Kernel Entropie Pool' übergibt.
d366 1
a366 1
    größtenteils ein schnellere (64 Bit, höhere Taktrate) Version des
d392 1
a392 1
    <a href="http://www.safenet-inc.com/technology/chips/safexcel_2141.asp">SafeNet</a>-Krypto-Karten
d401 1
a401 1
    eigenen Ethernet-Treiber geschrieben. Der Treiber wurde jetzt in
d406 1
a406 1
    unterstützt ... daher hat sich das ganze als gar nicht sinnvolle
d435 1
a435 1
    Die neuere VIA C3-CPU enthält einen Zufallszahlengenerator als
d441 2
a442 2
<li><b>VIA C3 AES-Befehle</b><br>
    VIA C3 CPUs mit Step 8 oder späterem Nehemiah Core enthalten eine
d450 2
a451 2
    für Anwendungen führt, die OpenSSLverwenden, um AES-Verschlüsselung
    zu bekommen (AES-128 wurde mit 780MByte/Sek gemessen).
d482 1
a482 1
Eine Reihe von Leuten aus dem OpenBSD-Team haben Vorträge über
d489 1
a489 1
    <a href="../events.html#usenix99">Usenix 1999</a>,
d496 1
a496 1
    <a href="../events.html#usenix99">Usenix 1999</a>,
d519 1
a519 1
    <a href="../events.html#usenix2003">Usenix 2003</a>, von
d534 1
a534 1
$Translation: crypto.html,v 1.86 2005/08/09 20:49:14 paldium Exp $
@


1.78
log
@sync with Steelix CVS
@
text
@d116 1
a116 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl">ssl</a>)
d126 1
a126 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey">skey</a>.
d178 1
a178 1
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd">isakmpd</a>,
d202 1
a202 1
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey">S/Key</a>,
d204 3
a206 3
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec">IPsec</a>,
    und <a
    href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd">isakmpd(8)</a>,
d233 1
a233 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=blf_key">Blowfish</a>-Passwörtern.
d236 1
a236 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec">IPsec</a>,
d238 1
a238 2
<li>In <a
    href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd">isakmpd</a>,
d525 1
a525 1
<a href="index.html"><img height="24" width="24" src="../back.gif" border="0" alt="OpenBSD"</a>
d531 1
a531 1
$Translation: crypto.html,v 1.85 2005/07/31 18:43:32 paldium Exp $
@


1.77
log
@sync with Steelix CVS
@
text
@d10 1
a10 1
<meta name="keywords" content="openbsd,ipsec,isakmp,ike,blowfish,rsa,dsa">
d526 1
a526 1
<a href="index.html"><img height=24 width=24 src="../back.gif" border=0 alt="[Haupt-Seite]"</a>
d532 1
a532 1
$Translation: crypto.html,v 1.84 2005/07/04 11:36:30 paldium Exp $
@


1.76
log
@sync with Steelix CVS
@
text
@d4 1
a4 3
<title>Kryptographie in OpenBSD</title>
<link rev=made href="mailto:www@@openbsd.org">
<meta name="resource-type" content="document">
d7 1
d13 1
d29 1
a29 1
<br clear=all>
d88 1
a88 1
<img align=right alt="vpnc-test-partner.gif" src="../images/vpnc-test-partner.gif">
d96 1
a96 1
<br clear=all>
a118 1
</li>
a120 1
</li>
a123 1
</li>
a126 1
</li>
a134 1
<p>
d248 1
a421 1
<p>
d430 1
a430 1
   <p>
d532 1
a532 1
$Translation: crypto.html,v 1.83 2005/06/23 12:45:52 paldium Exp $
@


1.75
log
@sync with Steelix CVS
@
text
@d536 2
a537 2
Originally [OpenBSD: crypto.html,v 1.128 ]
$Translation: crypto.html,v 1.82 2005/02/13 18:41:41 paldium Exp $
@


1.74
log
@Sync with Steelix CVS
@
text
@d9 1
a9 1
<meta name="description" content="OpenBSD Kryptographie">
d21 5
a25 5
Das Mantra eines jeden guten Sicherheitsingenieurs ist: "Sicherheit
ist kein Produkt, sondern ein Prozess." Es steckt mehr dahinter
als starke Kryptographie in ein System zu integrieren, es bedeutet das gesamte
System so zu entwerfen, dass alle Sicherheitsmassnahmen, inklusive der 
Kryptographie, zusammenarbeiten. 
d28 1
a28 1
-- Bruce Schneier, Autor von "Applied Cryptography".
d36 2
a37 2
<a href="#prng">Pseudo Zufallszahlen Generatoren</a> (PRNG): ARC4, ...<br>
<a href="#hash">Kryptographische Hash Funktionen</a>: MD5, SHA1, ...<br>
d40 1
a40 1
<a href="#people">Internationale Kryptologen gesucht</a><br>
d50 1
a50 1
Das OpenBSD Projekt ist in Kanada beheimatet.<p>
d62 10
a71 11
Daher hat das OpenBSD-Projekt Kryptographie in zahlreichen Stellen im Betriebssystem
integriert. Wir verlangen, dass die kryptographische Software, die wir benutzen
wollen, 
<a href="policy.html">frei erhältlich ist und guten Lizenzen unterliegt</a>.
Wir benutzen keine Kryptographie mit unzulänglichen Lizenzen direkt.
Wir verlangen ausserdem, dass solche Software aus Ländern mit vernünftigen
Exportbedingungen kommt, da wir nicht die Gesetze irgendeines Landes brechen 
wollen.
Die kryptographischen Komponenten, die wir momentan benutzen, wurden in
Argentinien, Australien, Kanada, Deutschland, Griechenland, Norwegen und
Schweden geschrieben.
d75 1
a75 1
in freien Ländern, um sicherzustellen, dass sowohl Quellen, als auch
d82 3
a84 4
Die Codebasis, die wir benutzen, ist die exportierbare Heimdal
Version aus Schweden.
Unsere X11-Quellen wurden ebenfalls so erweitert, dass sie Gebrauch von
Kerberos machen.
d89 7
a95 6
OpenBSD war das erste Betriebssystem, das mit einem IPsec-Stack ausgeliefert wurde.
IPsec ist Teil des Systems seit der Veröffentlichung der Version OpenBSD 2.1 im
Jahre 1997. Unser voll konformer kernel-interner IPsec-Stack mit möglicher 
Hardwareuntertstützung durch Zusatzkarten und unser eigener freier ISAKMP daemon
wird als eine der Maschinen im `IPsec conformance testbed' von der
<a href="http://www.vpnc.org">VPNC</a> benutzt.
d110 1
a110 1
freie und nicht-patentierte Version von ssh. 
d117 2
a118 2
jegliche lizensierte oder patentierte Komponenten stammten aus externen
Libraries/Bibliotheken.
d124 1
a124 1
beinhaltet Unterstützung für Kerberos Authenfizierung und
d134 4
a137 3
Grob gesagt haben wir eine Version von ssh mit freier Lizenz genommen und sie OpenBSD-fiziert.
Ungefähr ein Jahr später haben wir OpenSSH so erweitert, das es nun auch das 
SSH 2 Protokoll beherrscht, das Resultat ist, dass alle drei grossen SSH Protokolle unterstützt
d142 1
a142 1
<h3><font color="#e00000">Pseudo Zufallszahlen Generatoren</font></h3><p>
d144 3
a146 2
Ein Pseudo Zufallszahlengenerator (PRNG = Pseudo Random Number Generator) versorgt Applikationen mit einem Strom
von Zahlen, die einen erheblichen Einfluss auf die Sicherheit des Systems haben:
d150 4
a153 4
<li>Es sollte für einen Aussenstehenden unmöglich sein, weitere Zahlen vorauszusagen,
sogar mit Kenntnis der bisherigen Zahlen.
<li>Die generierten Zahlen sollten keine sich wiederholenden Muster aufweisen,
d.h. der PRNG sollte einen sehr langen Kreislauf haben.
d157 3
a159 3
Ein PRNG ist eigentlich nur ein Algorithmus, bei dem mit den selben Startwerten
auch die selben Ergebnisse herauskommen.
Bei einem Multi-User-System gibt es viele Möglichkeiten den PRNG mit
d161 6
a166 6
Der OpenBSD Kernel benutzt das Maus-Interrupt-Timing, Netzwerk-Daten-Interrupt-
Verzögerungen, die Zeit zwischen Tastendrücken und Festplatten
I/O-Informationen, um Zufallszahlen zu bekommen.
Zufallszahlen stehen den Kernel-Routinen zur Verfügung und werden an 
"Userland"-Programme weitergegeben.
Bisher werden Zufallszahlen benutzt von:<p>
d169 1
a169 1
<li>Dynamische sin_port Zuweisung in bind(2).
d171 5
a175 5
<li>IP Datagramm-IDs.
<li>RPC Transaktions-IDs (XID).
<li>NFS RPC Transaktions-IDs (XID).
<li>DNS Abfrage-IDs.
<li>Inode generation numbers, siehe getfh(2) und fsirand(8).
d178 1
a178 1
<li>Zufälligkeit zum TCP ISS hinzugefügt, um Spoofing-Angriffe zu
d180 3
a182 3
<li>Zufälliges padding in IPsec esp_old Paketen.
<li>Um salts für die verschiedenen Passwort-Algorithmen zu generieren.
<li>Um vorgetäuschte S/Key Herausforderungen zu generieren.
d192 2
a193 2
Zeichenkette konstanter Länge.
Für eine kryptographische Hashfunktion ist es undurchführbar, folgendes zu finden:
d196 3
a198 2
<li>Zwei Eingaben, die die selbe Ausgabe erzeugen (Resistent gegen Kollisionen),
<li>Eine andere Eingabe für eine gegeben Eingabe mit der selben Ausgabe
d203 2
a204 1
In OpenBSD werden MD5, SHA1, und RIPEMD-160 als kryptographische Hash-Funktionen benutzt,
d207 1
a207 1
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=skey">S/Key</a>
d210 5
a214 4
    und
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd">isakmpd(8)</a>
    um die Herkunft von Daten zu authentifizieren und Packetintegrität zu gewährleisten.
<li>Um MD5 Passwörter im FreeBSD-Stil bereitzustellen (kein Standard), siehe
d225 5
a229 4
Symmetrische Verfahren werden benutzt um Daten zu ver- und entschlüsseln.
Normalerweise werden sie mit einem Schlüsel zur Ver- und einem Schlüssel zur 
Entschlüsselung gebraucht. Die Sicherheit eines symmetrischen Algorithmus sollte
wirklich nur auf den Schlüsseln beruhen.
d232 3
a234 3
OpenBSD stellt symmetrische Verfahren wie DES, 3DES, Blowfish und Cast für Kernel-
und Userland-Programme zur Verfügung, die an vielen Plätzen, wie z.B. an diesen benutzt
werden :
d238 2
a239 3
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=blf_key">Blowfish</a>
    Passwörtern.  Dazu siehe auch das <a href="../papers/bcrypt-paper.ps">USENIX paper</a>
    .
d241 1
a241 1
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec">IPsec</a>
d243 2
a244 1
<li>In <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd">isakmpd</a>
d246 5
a250 5
<li>In AFS um die Nachrichten zu schützen, die über das Netzwerk gehen,
    und Vertrauen in den Zugriff auf entfernte Dateisysteme zu gewährleisten.
<li>In libssl um Applikationen über das kryptographisch sichere und zudem
    de-facto-Standard 
    ssl-Protokoll laufen zu lassen.
d256 2
a257 2
OpenBSD unterstützt seit Version 2.7 einige kryptographische Hardware wie etwa 
Hardwarebeschleuniger und Zufallszahlengeneratoren.
d261 7
a267 5
    Unser IPsec-Stack wurde so verändert, dass kryptographische Funktionen
    auch "außer-der-Reihe" gemacht werden können. Die meisten Software-IPsec-Stacks
    müssen die kryptographischen Funktionen mit jedem einzelnen Paket, das sie behandeln,
    durchführen. Das resultiert in synchroner Leistungsfähigkeit. Um Hardware sauber und schnell
    zu nutzen, muss man diese zwei Komponenten trennen, so wie von uns durchgeführt. Tatsächlich
d271 5
a275 4
    Hifn 7751</a></b><br>
    Karten, die den Hifn 7751
    verwenden, können als symmetrischer kryptographischer Hardwarebeschleuniger benutzt werden, z.B. 
    <a href="http://www.soekris.com/vpn1201.htm">Soekris VPN1201 oder VPN1211</a>
d277 21
a297 18
    oder
    <a href="http://www.powercrypt.com">PowerCrypt</a>.
    Die momentan dabei erreichte Leistung beträgt
    64Mbit/sec für 3DES/SHA1 ESP, wenn man einen einzelnen Hifn 7751 auf jeder Seite eines
    Tunnels hat, das ist fast eine 600%ige Verbessrung gegenüber einer
    P3/550 CPU.  An weiteren Verbesserungen bezüglich einiger Punkte wird noch gearbeitet,
    aber mit Stand 13.April 2000 wird der Code als stabil angesehen.
    Wir haben unseren eigenen Treiber geschrieben, um diesen Chip zu unterstützen, anstatt
    den (in den USA geschriebenen)
    <a href="http://www.powercrypt.com">Powercrypt</a> Treiber zu benutzen, ausserdem
    arbeitet unser Treiber sauber mit IPsec zusammen.
    Der 7751 wird in bezug auf Industriestandard als langsam angesehen und viele Anbieter 
    haben schnellere Chips (auch Hifn hat einen schnelleren, aber auch teuereren Chip).
    Die Spitzenperformance mit 3DES SHA1 ESP beträgt etwa 64Mbit/sec.
    <p>
    Nachdem 2.9 ausgeliefert worden war, wurde noch Unterstützung für den Hifn 7951 Chip hinzugefügt,
    eine vereinfachte Version des 7751, die einen Beschleuniger für Public Keys enthält
    (noch nicht unterstützt) und einen Zufallszahlengenerator (unterstützt).  Die Karten wurden von
d303 2
a304 1
    Die Karte wurde von <a href="http://www.gtgi.com/">GTGI</a> gespendet.
d307 1
a307 1
    den LZS Kompressionsalgorithmus, der von
d312 2
a313 2
    7955 und 7956 Chips hinzugefügt. Zusätzlich zu allen Funktionen
    des vorherigen 7591 Chips beherrschen diese AES.
d316 4
a319 3
    (sie haben uns angedroht, uns wegen unseres "nicht-USA reverse engineering" 
    ihres crypto unlock Algorithmus zu verklagen), aber in letzter Zeit 
    haben sie uns besser unterstützt und uns Boards und Support gegeben.
d324 6
a329 4
    Dieses Gerät ist eine asymmetrische Krypto-Einheit. Sie unterstützt RSA, DSA,
    und DH Algorithmen, genauso wie andere grosse Funktionen. Es enthält einen sehr schnellen
    Zufallszahlen-Generator. Wir haben ein Gerät, die ganze Dokumentation, und Beispiel-Code. 
    Mit 3.1 arbeiten sowohl der Zufallsgenerator, als auch die big number unit.
d334 6
a339 4
    Dieses Gerät ist ein Paket-Prozessor und asymmetrische Kryptoeinheit. Sie hat Unterstützung
    für RSA, DSA, und DH Algorithmen, wie auch für andere wichtige "big number functions" und hat 
    auch einen Zufallszahlengenerator. Momentan werden die "big number engine" und der Zufallszahlengenrator 
    unterstützt (keine Paket-Transformationen).
d345 34
a378 29
    Direkt nach der Veröffentlichung von OpenBSD 2.7 konnten wir erstmalige Unterstützung
    für diese frühen Versionen erreichen,  die uns der Hersteller
    zu Verfügung gestellt hat, insbesondere mit dem Testchip 5501.
    Diese Geräte bringen die schnellste symmetrische Kryptographie, die wir bisher gesehen haben.
    <p>
    Bluesteelnet wurde von Broadcom aufgekauft und hat danach richtige Teile gemacht.
    Ihre neue BCM5805 ist ähnlich, außer dass sie auch eine asymmetrische Maschine
    hinzufügt haben, um DSA, RSA und ähnliche Algorithmen zu untersützen. Mit einer 
    annähernd doppelt so grossen Performance wie die der Hifn wird dieser Chip hoffentlich
    bald verbreiteter sein. 
    <p>
    Die Leute von Broadcom/Bluesteelnet waren wirklich grossartig. Sie gaben uns die
    komplette Dokumentation für ihre Chips, Beispiel-Code und dazu noch eine ausreichende Menge an Karten,
    um das ganze zu testen.
    <p>
    Post-2.8 wurde dieser Treiber auch dahingehend modifiziert, dass er Zufallszahlen auf dem
    BCM5805 und ähnlichen Versionen produziert, und diese dann in der `Kernel Entropie Pool'
    übergibt.
    <p>
    Post-2.9 wurde Unterstützung für den BCM5820 hinzugefügt, was grösstenteils ein schnellere
    (64bit, höhere Taktrate) Version des BCM5805 ist. Noch ungetestete Unterstültzung 
    für den BCM5821 wurde auch Post-3.0 hinzugefügt.
<p>
    Mit 3.1 wird die "big num engine" unterstützt, und RSA/DH/DSA Operationen können
    beschleunigt werden.
    <p>
    Unterstützung für den BCM5801, BCM5802, BCM5821 und BCM5822 wurden vor
    OpenBSD 3.2 hinzugefügt (die ungetestestete BCM5821 Unterstützung in 3.1 hat wegen einiger
    nicht dokumentierter Interrupt Handling-Probleme nicht funktioniert).
d380 2
a381 1
    Partielle Unterstützung für BCM5823 wurde bei 3.4 hinzugefügt. Der Chip unterstützt AES, aber der Treiber nicht.
d386 4
a389 3
    ist ein neuer Chipsatz aus den Niederlanden.  Wir haben Probe-Hardware und
    Dokumentation, und die Arbeit an einem Treiber ist im Gange. Im Moment
    kann der Treiber bereits Zufallszahlen an den `Kernel Entropie Pool' liefern.
d394 3
a396 3
    <a href="http://www.safenet-inc.com/technology/chips/safexcel_2141.asp">SafeNet</a>
    Krypto-Karten bekommen. Wir arbeiten daran, wenigstens die symmetrische Kryptographie zu 
    unterstützen. 
d401 9
a409 8
    3com hat uns einen Treiber gegeben, um die Ethernet-Seite dieses Chipsets zu unterstützen, 
    und wir haben basierend darauf einen eigenen Ethernet-Treiber geschrieben. Der
    Treiber wurde jetzt in OpenBSD eingefügt, wo wir eine freie Lizenz 
    für den Microcode erhalten haben.  Wegen schlechter Dokumentation 
    und einem Mangel an Koorperation (der teilweise durch die hohen 
    Austauschraten bei 3com begründet ist), werden die IPsec Funktionen
    des Chips nicht unterstützt... daher hat sich das ganze als 
    gar nicht sinnvolle Erfahrung herausgestellt.
d413 12
a424 7
    Intel tut viel für ihre Netzwerkprodukte, aber im Gegensatz zu allen anderen Anbietern weigert
    sich Intel standhaft, uns Dokumentation zu geben. Wir haben mit etwa 5 Technikern gesprochen, die an der
    Entwicklung dieser Produkte beteiligt sind. Sie alle wollten, dass wir Dokumentation bekommen. Sie 
    loben uns für das, was wir bisher getan haben. Aber ihre Hände sind vom Management gebunden,
    die für sich keinen Vorteil sehen, wenn sie uns Dokumentation geben. Vergiss Intel. 
    (Wenn du Gigabit Ethernet Hardware kaufen willst, empfehlen wir alles andere.. aus eben dem selben
    Grund: Die meisten Treiber, die wir bisher geschrieben haben, wurden ohne Dokumentation geschrieben.)  
d430 5
a434 4
    Der 82802 FWH Chip (zu finden auf i810, i820, i840, i850, und i860 Motherboards)
    enthält einen `random number generator (RNG)'.  High-performance IPsec
    benötigt mehr Zufallszahlenentropie.  Seit dem 10. April 2000 unterstützen wir den
    RNG. Wir werden Unterstützung für weitere RNGs auf anderen Crypto Chips hinzufügen.
d438 17
a454 15
    Die neuere VIA C3 CPU enthält einen Zufallszahlengenerator als Anweisung.
    Ab <a href="33.html">3.3</a> wird dieser Zufallszahlengenerator im
    Kernel dazu genutzt, den Entropie Pool zu füllen.
    <p>

<li><b>VIA C3 AES Befehle</b><br>
    VIA C3 CPUs mit Step 8 oder späterem Nehemiah Core enthalten eine AES
    Implementation, auf die mittels einfacher Befehle zugegriffen werden kann.
    Seit <a href="34.html">3.4</a> unterstützt der Kernel die Benutzung 
    im Kontext von IPsec und exportiert sie mittels <tt>/dev/crypto</tt>. Mit <a
    href="35.html">3.5</a> wurden die Geschwindigkeiten erheblich verbessert und
    und OpenSSL benutzt die neuen Befehle direkt ohne die Notwendigkeit eines 
    Zugriffs auf den Kernel, was zu einer erheblichen Geschwindigkeitssteigerung
    für Anwendungen fü,hrt, die OOpenSSLverwenden, um AES 
    Verschlüsselung zu bekommen (AES-128 wurde mit 780MByte/sec gemessen).
d459 7
a465 6
    Jahre zuvor hatten wir einen grossen Plan, Krypto-Karten zu unterstützen, die
    RSA/DH/DSA automatisch über OpenSSL Calls können. Mit OpenBSD 3.2 wir diese
    Unterstützung funktionieren, und jede Karte mit einer solchen Funktionalität,
    die unterstützt wird, wird automatisch die Hardware benutzen, einschließlich 
    OpenSSH und dem httpd im SSL Modus. An den Applikationen werden 
    keinerlei Änderungen benötigt.
d473 1
a473 1
<h3><font color="#e00000">Internationale Kryptologen gesucht</font></h3><p>
d475 4
a478 4
Natürlich braucht unser Projekt Leute, die an diesen Systemen arbeiten. 
Wenn ein Nicht-amerikanischer Kryptologe, den die oben erwähnten Zwänge
nicht betreffen, an Mitarbeit an unserer eingebettenen Kryptologie 
interessiert ist, soll er uns kontaktieren.
d485 1
a485 1
Eine Reihe von Leuten aus dem OpenBSD-Team haben Vorträge und Aufsätze über
d537 1
a537 1
$Translation: crypto.html,v 1.81 2005/01/18 14:33:41 paldium Exp $
@


1.73
log
@Sync with Steelix CVS
@
text
@d501 5
a505 3
Originally [OpenBSD: crypto.html,v 1.128 ]<br>
$Translation: crypto.html,v 1.80 2004/12/22 12:29:52 paldium Exp $<br>
$OpenBSD: crypto.html,v 1.128 2004/12/22 02:08:59 david Exp $
@


1.72
log
@Sync with Steelix CVS
@
text
@d17 1
a17 1
<img align="left" alt="[Blowfish-Bild]" height="166" width="197" SRC="../images/blowfish-notext.jpg">
d501 3
a503 4
Originally [OpenBSD: crypto.html,v 1.127 ]
<br>
$Translation: crypto.html,v 1.79 2004/11/04 15:10:32 jufi Exp $
<br>
a504 1
<small>$OpenBSD: crypto.html,v 1.127 2004/03/24 23:36:26 deraadt Exp $</small>
@


1.71
log
@Sync with Steelix CVS
@
text
@d67 1
a67 1
Wir verlangen auausserdemszlig;erdem, dass solche Software aus Ländern mit vernünftigen
d278 1
a278 1
    <a href="http://www.powercrypt.com">Powercrypt</a> Treiber zu benutzen, auausserdemszlig;erdem
d503 1
a503 1
$Translation: crypto.html,v 1.78 2004/11/02 16:41:53 jufi Exp $
@


1.70
log
@Sync with Steelix CVS
@
text
@d38 2
a39 2
<a href="#trans">Symmetrische Verschl&uuml;sselungsverfahren</a>: DES, Blowfish, ...<br>
<a href="#hardware">Unterst&uuml;tzung f&uuml;r kryptographische Hardware</a><br>
d48 1
a48 1
In drei Worten:  <strong>weil wir k&ouml;nnen</strong>.<p>
d53 1
a53 1
beinhaltet keine signifikaten Beschr&auml;nkungen bez&uuml;glich des
d55 1
a55 1
was den Export frei-erh&auml;ltlicher kryptographischer Software angeht.
d58 1
a58 1
einige Nachforschungen betrieben, um die Kryptographiegesetze zu pr&uuml;fen
d65 3
a67 3
<a href="policy.html">frei erh&auml;ltlich ist und guten Lizenzen unterliegt</a>.
Wir benutzen keine Kryptographie mit unzul&auml;nglichen Lizenzen direkt.
Wir verlangen auausserdemszlig;erdem, dass solche Software aus L&auml;ndern mit vern&uuml;nftigen
d76 2
a77 2
in freien L&auml;ndern, um sicherzustellen, dass sowohl Quellen, als auch
Bin&auml;rdateien frei von Beschr&auml;nkungen sind.
d92 3
a94 3
IPsec ist Teil des Systems seit der Ver&ouml;ffentlichung der Version OpenBSD 2.1 im
Jahre 1997. Unser voll konformer kernel-interner IPsec-Stack mit m&ouml;glicher 
Hardwareuntertst&uuml;tzung durch Zusatzkarten und unser eigener freier ISAKMP daemon
d102 1
a102 1
erh&ouml;hen. Die in OpenBSD integrierte Kryptographie kann in folgende
d125 1
a125 1
beinhaltet Unterst&uuml;tzung f&uuml;r Kerberos Authenfizierung und
d129 1
a129 1
unterst&uuml;tzte Einmal-Passw&ouml;rter durch 
d136 2
a137 2
Ungef&auml;hr ein Jahr sp&auml;ter haben wir OpenSSH so erweitert, das es nun auch das 
SSH 2 Protokoll beherrscht, das Resultat ist, dass alle drei grossen SSH Protokolle unterst&uuml;tzt
d149 1
a149 1
<li>Es sollte f&uuml;r einen Aussenstehenden unm&ouml;glich sein, weitere Zahlen vorauszusagen,
d158 2
a159 2
Bei einem Multi-User-System gibt es viele M&ouml;glichkeiten den PRNG mit
Zufallsdaten zu f&uuml;ttern.
d161 1
a161 1
Verz&ouml;gerungen, die Zeit zwischen Tastendr&uuml;cken und Festplatten
d163 1
a163 1
Zufallszahlen stehen den Kernel-Routinen zur Verf&uuml;gung und werden an 
d175 3
a177 3
<li>Timingst&ouml;rungen in traceroute(8).
<li>St&auml;rkere vor&uuml;bergehende Namen f&uuml;r mktemp(3) und mkstemp(3)
<li>Zuf&auml;lligkeit zum TCP ISS hinzugef&uuml;gt, um Spoofing-Angriffe zu
d179 3
a181 3
<li>Zuf&auml;lliges padding in IPsec esp_old Paketen.
<li>Um salts f&uuml;r die verschiedenen Passwort-Algorithmen zu generieren.
<li>Um vorget&auml;uschte S/Key Herausforderungen zu generieren.
d183 1
a183 1
        um lebende Beweise f&uuml;r Schl&uuml;sselaustausch zu haben.
d191 2
a192 2
Zeichenkette konstanter L&auml;nge.
F&uuml;r eine kryptographische Hashfunktion ist es undurchf&uuml;hrbar, folgendes zu finden:
d196 1
a196 1
<li>Eine andere Eingabe f&uuml;r eine gegeben Eingabe mit der selben Ausgabe
d205 1
a205 1
    um Einmal-Passw&ouml;rter bereitzustellen.
d209 2
a210 2
    um die Herkunft von Daten zu authentifizieren und Packetintegrit&auml;t zu gew&auml;hrleisten.
<li>Um MD5 Passw&ouml;rter im FreeBSD-Stil bereitzustellen (kein Standard), siehe
d219 1
a219 1
<h3><font color="#e00000">Symmetrische Verschl&uuml;sselungsalgorithmen</font></h3><p>
d221 4
a224 4
Symmetrische Verfahren werden benutzt um Daten zu ver- und entschl&uuml;sseln.
Normalerweise werden sie mit einem Schl&uuml;sel zur Ver- und einem Schl&uuml;ssel zur 
Entschl&uuml;sselung gebraucht. Die Sicherheit eines symmetrischen Algorithmus sollte
wirklich nur auf den Schl&uuml;sseln beruhen.
d227 2
a228 2
OpenBSD stellt symmetrische Verfahren wie DES, 3DES, Blowfish und Cast f&uuml;r Kernel-
und Userland-Programme zur Verf&uuml;gung, die an vielen Pl&auml;tzen, wie z.B. an diesen benutzt
d234 1
a234 1
    Passw&ouml;rtern.  Dazu siehe auch das <a href="../papers/bcrypt-paper.ps">USENIX paper</a>
d240 4
a243 4
    um den Austausch von IPsec Schl&uuml;sselmaterial zu sch&uuml;tzen.
<li>In AFS um die Nachrichten zu sch&uuml;tzen, die &uuml;ber das Netzwerk gehen,
    und Vertrauen in den Zugriff auf entfernte Dateisysteme zu gew&auml;hrleisten.
<li>In libssl um Applikationen &uuml;ber das kryptographisch sichere und zudem
d249 1
a249 1
<h3><font color="#e00000">Unterst&uuml;tzung f&uuml;r kryptographische Hardware</font></h3><p>
d251 1
a251 1
OpenBSD unterst&uuml;tzt seit Version 2.7 einige kryptographische Hardware wie etwa 
d256 6
a261 6
    Unser IPsec-Stack wurde so ver&auml;ndert, dass kryptographische Funktionen
    auch "au&szlig;er-der-Reihe" gemacht werden k&ouml;nnen. Die meisten Software-IPsec-Stacks
    m&uuml;ssen die kryptographischen Funktionen mit jedem einzelnen Paket, das sie behandeln,
    durchf&uuml;hren. Das resultiert in synchroner Leistungsf&auml;higkeit. Um Hardware sauber und schnell
    zu nutzen, muss man diese zwei Komponenten trennen, so wie von uns durchgef&uuml;hrt. Tats&auml;chlich
    springt dabei sogar etwas Leistung f&uuml;r die Softwareseite heraus.
d266 1
a266 1
    verwenden, k&ouml;nnen als symmetrischer kryptographischer Hardwarebeschleuniger benutzt werden, z.B. 
d271 4
a274 4
    Die momentan dabei erreichte Leistung betr&auml;gt
    64Mbit/sec f&uuml;r 3DES/SHA1 ESP, wenn man einen einzelnen Hifn 7751 auf jeder Seite eines
    Tunnels hat, das ist fast eine 600%ige Verbessrung gegen&uuml;ber einer
    P3/550 CPU.  An weiteren Verbesserungen bez&uuml;glich einiger Punkte wird noch gearbeitet,
d276 1
a276 1
    Wir haben unseren eigenen Treiber geschrieben, um diesen Chip zu unterst&uuml;tzen, anstatt
d282 1
a282 1
    Die Spitzenperformance mit 3DES SHA1 ESP betr&auml;gt etwa 64Mbit/sec.
d284 3
a286 3
    Nachdem 2.9 ausgeliefert worden war, wurde noch Unterst&uuml;tzung f&uuml;r den Hifn 7951 Chip hinzugef&uuml;gt,
    eine vereinfachte Version des 7751, die einen Beschleuniger f&uuml;r Public Keys enth&auml;lt
    (noch nicht unterst&uuml;tzt) und einen Zufallszahlengenerator (unterst&uuml;tzt).  Die Karten wurden von
d289 2
a290 2
    Nach der Auslieferung von 3.0 wurde dann noch Unterst&uuml;tzung 
    f&uuml;r den Hifn 7811 Chip hinzugef&uuml;gt, einer schnelleren Version 
d294 1
a294 1
    Nachdem 3.2 ausgeliefert wurde, wurde eine Unterst&uuml;tzung f&uuml;r
d297 1
a297 1
    benutzt wird, hinzugef&uuml;gt.
d299 2
a300 2
    Nachdem 3.4 ausgeliefert wurde, wurde Unterst&uuml;tzung f&uuml;r die
    7955 und 7956 Chips hinzugef&uuml;gt. Zus&auml;tzlich zu allen Funktionen
d303 1
a303 1
    Hifn war anf&auml;nglich eine Firma, mit der schwer umzugehen war 
d306 1
a306 1
    haben sie uns besser unterst&uuml;tzt und uns Boards und Support gegeben.
d311 3
a313 3
    Dieses Ger&auml;t ist eine asymmetrische Krypto-Einheit. Sie unterst&uuml;tzt RSA, DSA,
    und DH Algorithmen, genauso wie andere grosse Funktionen. Es enth&auml;lt einen sehr schnellen
    Zufallszahlen-Generator. Wir haben ein Ger&auml;t, die ganze Dokumentation, und Beispiel-Code. 
d319 2
a320 2
    Dieses Ger&auml;t ist ein Paket-Prozessor und asymmetrische Kryptoeinheit. Sie hat Unterst&uuml;tzung
    f&uuml;r RSA, DSA, und DH Algorithmen, wie auch f&uuml;r andere wichtige "big number functions" und hat 
d322 1
a322 1
    unterst&uuml;tzt (keine Paket-Transformationen).
d328 4
a331 4
    Direkt nach der Ver&ouml;ffentlichung von OpenBSD 2.7 konnten wir erstmalige Unterst&uuml;tzung
    f&uuml;r diese fr&uuml;hen Versionen erreichen,  die uns der Hersteller
    zu Verf&uuml;gung gestellt hat, insbesondere mit dem Testchip 5501.
    Diese Ger&auml;te bringen die schnellste symmetrische Kryptographie, die wir bisher gesehen haben.
d334 3
a336 3
    Ihre neue BCM5805 ist &auml;hnlich, au&szlig;er dass sie auch eine asymmetrische Maschine
    hinzuf&uuml;gt haben, um DSA, RSA und &auml;hnliche Algorithmen zu unters&uuml;tzen. Mit einer 
    ann&auml;hernd doppelt so grossen Performance wie die der Hifn wird dieser Chip hoffentlich
d340 1
a340 1
    komplette Dokumentation f&uuml;r ihre Chips, Beispiel-Code und dazu noch eine ausreichende Menge an Karten,
d344 2
a345 2
    BCM5805 und &auml;hnlichen Versionen produziert, und diese dann in der `Kernel Entropie Pool'
    &uuml;bergibt.
d347 3
a349 3
    Post-2.9 wurde Unterst&uuml;tzung f&uuml;r den BCM5820 hinzugef&uuml;gt, was gr&ouml;sstenteils ein schnellere
    (64bit, h&ouml;here Taktrate) Version des BCM5805 ist. Noch ungetestete Unterst&uuml;ltzung 
    f&uuml;r den BCM5821 wurde auch Post-3.0 hinzugef&uuml;gt.
d351 1
a351 1
    Mit 3.1 wird die "big num engine" unterst&uuml;tzt, und RSA/DH/DSA Operationen k&ouml;nnen
d354 2
a355 2
    Unterst&uuml;tzung f&uuml;r den BCM5801, BCM5802, BCM5821 und BCM5822 wurden vor
    OpenBSD 3.2 hinzugef&uuml;gt (die ungetestestete BCM5821 Unterst&uuml;tzung in 3.1 hat wegen einiger
d358 1
a358 1
    Partielle Unterst&uuml;tzung f&uuml;r BCM5823 wurde bei 3.4 hinzugef&uuml;gt. Der Chip unterst&uuml;tzt AES, aber der Treiber nicht.
d369 1
a369 1
    Wir haben Dokumentation und Probe-Hardware f&uuml;r die
d372 1
a372 1
    unterst&uuml;tzen. 
d377 1
a377 1
    3com hat uns einen Treiber gegeben, um die Ethernet-Seite dieses Chipsets zu unterst&uuml;tzen, 
d379 2
a380 2
    Treiber wurde jetzt in OpenBSD eingef&uuml;gt, wo wir eine freie Lizenz 
    f&uuml;r den Microcode erhalten haben.  Wegen schlechter Dokumentation 
d382 2
a383 2
    Austauschraten bei 3com begr&uuml;ndet ist), werden die IPsec Funktionen
    des Chips nicht unterst&uuml;tzt... daher hat sich das ganze als 
d388 1
a388 1
    Intel tut viel f&uuml;r ihre Netzwerkprodukte, aber im Gegensatz zu allen anderen Anbietern weigert
d391 2
a392 2
    loben uns f&uuml;r das, was wir bisher getan haben. Aber ihre H&auml;nde sind vom Management gebunden,
    die f&uuml;r sich keinen Vorteil sehen, wenn sie uns Dokumentation geben. Vergiss Intel. 
d401 3
a403 3
    enth&auml;lt einen `random number generator (RNG)'.  High-performance IPsec
    ben&ouml;tigt mehr Zufallszahlenentropie.  Seit dem 10. April 2000 unterst&uuml;tzen wir den
    RNG. Wir werden Unterst&uuml;tzung f&uuml;r weitere RNGs auf anderen Crypto Chips hinzuf&uuml;gen.
d407 1
a407 1
    Die neuere VIA C3 CPU enth&auml;lt einen Zufallszahlengenerator als Anweisung.
d409 1
a409 1
    Kernel dazu genutzt, den Entropie Pool zu f&uuml;llen.
d413 1
a413 1
    VIA C3 CPUs mit Step 8 oder sp&auml;terem Nehemiah Core enthalten eine AES
d415 1
a415 1
    Seit <a href="34.html">3.4</a> unterst&uuml;tzt der Kernel die Benutzung 
d420 2
a421 2
    f&uuml;r Anwendungen f&uuml;,hrt, die OOpenSSLverwenden, um AES 
    Verschl&uuml;sselung zu bekommen (AES-128 wurde mit 780MByte/sec gemessen).
d426 4
a429 4
    Jahre zuvor hatten wir einen grossen Plan, Krypto-Karten zu unterst&uuml;tzen, die
    RSA/DH/DSA automatisch &uuml;ber OpenSSL Calls k&ouml;nnen. Mit OpenBSD 3.2 wir diese
    Unterst&uuml;tzung funktionieren, und jede Karte mit einer solchen Funktionalit&auml;t,
    die unterst&uuml;tzt wird, wird automatisch die Hardware benutzen, einschlie&szlig;lich 
d431 1
a431 1
    keinerlei &Auml;nderungen ben&ouml;tigt.
d441 2
a442 2
Nat&uuml;rlich braucht unser Projekt Leute, die an diesen Systemen arbeiten. 
Wenn ein Nicht-amerikanischer Kryptologe, den die oben erw&auml;hnten Zw&auml;nge
d451 3
a453 3
Eine Reihe von Leuten aus dem OpenBSD-Team haben Vortr&auml;ge und Aufs&auml;tze &uuml;ber
die Ver&auml;nderungen geschrieben, die sie in OpenBSD eingef&uuml;hrt haben.
Die Postscript-Versionen sind hier erh&auml;ltlich:
d503 1
a503 1
$Translation: crypto.html,v 1.77 2004/09/23 13:31:44 jufi Exp $
@


1.69
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>Kryptografie in OpenBSD</title>
d9 2
a10 2
<meta name="description" content="OpenBSD Kryptografie">
<meta name="keywords" content="openbsd,Kryptografie,openssh,openssl,kerberos">
d23 1
a23 1
als starke Kryptografie in ein System zu integrieren, es bedeutet das gesamte
d25 1
a25 1
Kryptografie, zusammenarbeiten. 
d30 1
a30 1
<h2><font color="#e00000">Kryptografie</font></h2>
d34 1
a34 1
<a href="#why">Warum liefern wir Kryptografie aus?</a><br> 
d37 1
a37 1
<a href="#hash">Kryptografische Hash Funktionen</a>: MD5, SHA1, ...<br>
d39 1
a39 1
<a href="#hardware">Unterst&uuml;tzung f&uuml;r kryptografische Hardware</a><br>
d46 1
a46 1
<h3><font color="#e00000">Warum liefern wir Kryptografie aus?</font></h3><p>
d54 2
a55 2
Exports von kryptografischer Software und ist sogar noch offener,
was den Export frei-erh&auml;ltlicher kryptografischer Software angeht.
d58 1
a58 1
einige Nachforschungen betrieben, um die Kryptografiegesetze zu pr&uuml;fen
d62 2
a63 2
Daher hat das OpenBSD-Projekt Kryptografie in zahlreichen Stellen im Betriebsystem
integriert. Wir verlangen, dass die kryptografische Software, die wir benutzen
d66 2
a67 2
Wir benutzen keine Kryptografie mit unzul&auml;nglichen Lizenzen direkt.
Wir verlangen ausserdem, dass solche Software aus L&auml;ndern mit vern&uuml;nftigen
d70 1
a70 1
Die kryptografischen Komponenten, die wir momentan benutzen, wurden in
d100 3
a102 3
Heutzutage ist Kryptografie eine wichtige Sache, um die 
<a href="security.html">Sicherheit</a> eines Betriebsystems zu 
erh&ouml;hen. Die in OpenBSD integrierte Kryptografie kann in folgende
d188 1
a188 1
<h3><font color="#e00000">Kryptografische Hashfunktionen</font></h3><p>
d192 1
a192 1
F&uuml;r eine kryptografische Hashfunktion ist es undurchf&uuml;hrbar, folgendes zu finden:
d201 1
a201 1
In OpenBSD werden MD5, SHA1, und RIPEMD-160 als kryptografische Hash-Funktionen benutzt,
d243 1
a243 1
<li>In libssl um Applikationen &uuml;ber das kryptografisch sichere und zudem
d249 1
a249 1
<h3><font color="#e00000">Unterst&uuml;tzung f&uuml;r kryptografische Hardware</font></h3><p>
d251 1
a251 1
OpenBSD unterst&uuml;tzt seit Version 2.7 einige kryptografische Hardware wie etwa 
d256 1
a256 1
    Unser IPsec-Stack wurde so ver&auml;ndert, dass kryptografische Funktionen
d258 1
a258 1
    m&uuml;ssen die kryptografischen Funktionen mit jedem einzelnen Paket, das sie behandeln,
d266 1
a266 1
    verwenden, k&ouml;nnen als symmetrischer kryptografischer Hardwarebeschleuniger benutzt werden, z.B. 
d278 1
a278 1
    <a href="http://www.powercrypt.com">Powercrypt</a> Treiber zu benutzen, ausserdem
d331 1
a331 1
    Diese Ger&auml;te bringen die schnellste symmetrische Kryptografie, die wir bisher gesehen haben.
d371 1
a371 1
    Krypto-Karten bekommen. Wir arbeiten daran, wenigstens die symmetrische Kryptografie zu 
d429 1
a429 1
    die unterst&uuml;tzt wird, wird automatisch die Hardware benutzen, einschliesslich 
d503 1
a503 1
$Translation: crypto.html,v 1.76 2004/04/17 17:53:30 jufi Exp $
@


1.68
log
@Sync with Steelix CVS
@
text
@d412 13
d501 1
a501 1
Originally [OpenBSD: crypto.html,v 1.126 ]
d503 1
a503 1
$Translation: crypto.html,v 1.75 2004/02/21 08:07:45 jufi Exp $
d506 1
a506 1
<small>$OpenBSD: crypto.html,v 1.126 2004/02/19 03:30:52 nick Exp $</small>
@


1.67
log
@Sync with Steelix CVS
@
text
@d13 1
a13 1
<meta name="copyright" content="This document copyright 1997-2003 by OpenBSD.">
d488 1
a488 1
Originally [OpenBSD: crypto.html,v 1.125 ]
d490 1
a490 1
$Translation: crypto.html,v 1.74 2003/12/07 22:47:21 grunk Exp $
d493 1
a493 1
<small>$OpenBSD: crypto.html,v 1.121 2003/06/16 05:39:22 jason Exp $</small>
@


1.66
log
@Sync with Steelix CVS
@
text
@a108 7
Was ist das erste, was die Leute tun, nachdem sie OpenBSD installiert 
haben ? Sie installieren Secure Shell 
(<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh">ssh</a>)
aus dem Ports-Tree oder den Paketen auf den FTP-Servern. Bis vor 
einiger Zeit zumindest.
<p>

d112 1
a112 1
<a href="http://www.openssh.com/">OpenSSH</a> interagiert auch mit ssh 
d488 1
a488 1
Originally [OpenBSD: crypto.html,v 1.124 ]
d490 1
a490 1
$Translation: crypto.html,v 1.73 2003/10/05 22:03:18 grunk Exp $
@


1.65
log
@sync with steelix translation CVS
@
text
@d82 3
a84 3
OpenBSD wird mit Kerberos IV und Kerberos V ausgeliefert.  
Die zwei Codebasen, die wir benutzen, sind die exportierbaren KTH-basierten 
Versionen aus Schweden.
d132 2
a133 3
beinhaltet Unterst&uuml;tzung f&uuml;r 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kerberos">kerberos</a>
Authenfizierung und Ticket-Passing.
a245 7
<li>In Kerberos und einer handvoll "kerberisierter" Applikationen, wie
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=telnet">telnet</a>,
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=cvs">cvs</a>,
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rsh">rsh</a>,
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp">rcp</a>,
    und
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rlogin">rlogin</a>.
d306 4
d333 1
a333 1
    Broadcom BCM5801/BCM5802/BCM5805/BCM5820/BCM5821/BCM5822
d365 2
d495 1
a495 1
Originally [OpenBSD: crypto.html,v 1.121 ]
d497 1
a497 1
$Translation: crypto.html,v 1.72 2003/07/13 11:54:40 jufi Exp $
@


1.64
log
@
sync with steelix translation CVS
@
text
@d455 1
a455 1
    by <a href="mailto:provos@@openbsd.org">Niels Provos</a>,
d462 1
a462 1
    by <a href="mailto:deraadt@@openbsd.org">Theo de Raadt</a>,
d472 1
a472 1
    by <a href="mailto:niklas@@openbsd.org">Niklas Hallqvist</a> und
d482 7
d497 1
a497 1
Originally [OpenBSD: crypto.html,v 1.120 ]
d499 1
a499 1
$Translation: crypto.html,v 1.71 2003/04/09 13:24:23 jufi Exp $
d502 1
a502 1
<small>$OpenBSD: crypto.html,v 1.120 2003/04/08 15:26:52 deraadt Exp $</small>
@


1.63
log
@
sync with steelix translation CVS
@
text
@d415 6
d490 1
a490 1
Originally [OpenBSD: crypto.html,v 1.119 ]
d492 1
a492 1
$Translation: crypto.html,v 1.70 2003/03/17 18:05:22 jufi Exp $
d495 1
a495 1
<small>$OpenBSD: crypto.html,v 1.119 2003/03/14 19:02:02 deraadt Exp $</small>
@


1.62
log
@
sync with steelix translation CVS
@
text
@d90 1
a90 1
<img align=right src="../images/vpnc-test-partner.gif">
d269 1
a269 1
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crypto&sektion=9">
d278 1
a278 1
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=hifn&sektion=4">
d304 3
a306 2
    Nach der Auslieferung von 3.0 wurde dann noch Unterst&uuml;tzung f&uuml;r den Hifn 7811 Chip hinzugef&uuml;gt, einer
    schnelleren Version des 7751 (etwa 130Mbit/s) mit einem Zufallszahlengenerator.
d309 9
a317 2
    (Nebenbei: Hifn war eine recht schwierige Firma; sie haben uns sogar angedroht uns wegen unseres
    nicht in den USA durchgef&uuml;hrten Reverse Engineering ihres Crypto Unlock Algorithmus zu verklagen) 
d320 1
a320 1
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=lofn&sektion=4">
d328 1
a328 1
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nofn&sektion=4">
d336 1
a336 1
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ubsec&sektion=4">
d369 1
a369 1
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ises&sektion=4">
d384 1
a384 1
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=txp&sektion=4">
d407 1
a407 1
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=pchb&sektion=4">
d471 1
a471 1
<li>Encrypting Virtual Memory</a><br>
d480 1
a480 1
<a href="index.html"><img height=24 width=24 src="../back.gif" border=0 alt=[Haupt-Seite]</a>
d484 1
a484 1
Originally [OpenBSD: crypto.html,v 1.117 ]
d486 1
a486 1
$Translation: crypto.html,v 1.69 2003/03/01 18:50:00 jufi Exp $
d489 1
a489 1
<small>$OpenBSD: crypto.html,v 1.117 2003/02/28 10:06:13 tedu Exp $</small>
@


1.61
log
@
sync with steelix translation CVS
@
text
@a220 3
<li>F&uuml;r TCP SYN Cookie Unterst&uuml;tzung (kein Standard), siehe
    <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=options&sektion=4">
    options(4)</a>
d476 1
a476 1
Originally [OpenBSD: crypto.html,v 1.116 ]
d478 1
a478 1
$Translation: crypto.html,v 1.68 2003/02/27 18:39:36 jufi Exp $
d481 1
a481 1
<small>$OpenBSD: crypto.html,v 1.116 2003/02/17 17:26:52 nick Exp $</small>
@


1.60
log
@
sync with steelix translation CVS
@
text
@d57 1
a57 1
<a href="http://insight.mcmaster.ca/org/efc/pages/doc/crypto-export.html">
d479 1
a479 1
Originally [OpenBSD: crypto.html,v 1.115 ]
d481 1
a481 1
$Translation: crypto.html,v 1.67 2003/01/07 14:18:50 jufi Exp $
d484 1
a484 1
<small>$OpenBSD: crypto.html,v 1.115 2002/11/23 21:28:07 jufi Exp $</small>
@


1.59
log
@
sync
@
text
@d1 1
a1 1
<!DOCTYPE HTML PUBLIC  "-//IETF//DTD HTML Strict Level 2//EN//2.0">
d5 1
a5 1
<link rev=made href=mailto:www@@openbsd.org>
d7 1
d11 1
a11 1
<meta name="keywords" content="ipsec,isakmp,ike,blowfish,des,rsa,dsa">
d13 1
a13 1
<meta name="copyright" content="This document copyright 1997-2002 by OpenBSD.">
d16 2
a17 2
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
<img align=left alt="[OpenBSD]" height=166 width=197 SRC="../images/blowfish-notext.jpg">
d30 1
a30 1
<h2><font color"=#e00000">Kryptografie</font></h2>
d34 8
a41 8
<a href=#why>Warum liefern wir Kryptografie aus?</a><br> 
<a href=#ssh>OpenSSH</a>.<br> 
<a href=#prng>Pseudo Zufallszahlen Generatoren</a> (PRNG): ARC4, ...<br>
<a href=#hash>Kryptografische Hash Funktionen</a>: MD5, SHA1, ...<br>
<a href=#trans>Symmetrische Verschl&uuml;sselungsverfahren</a>: DES, Blowfish, ...<br>
<a href=#hardware>Unterst&uuml;tzung f&uuml;r kryptografische Hardware</a><br>
<a href=#people>Internationale Kryptologen gesucht</a><br>
<a href=#papers>Weitere Quellen</a><br>
d45 2
a46 2
<a name=why></a>
<h3><font color=#e00000>Warum liefern wir Kryptografie aus?</font></h3><p>
d52 1
a52 1
Die <a href=../ECL.html>Export Kontrollliste von Kanada</a>
d57 1
a57 1
<a href=http://insight.mcmaster.ca/org/efc/pages/doc/crypto-export.html>
d65 1
a65 1
<a href=policy.html>frei erh&auml;ltlich ist und guten Lizenzen unterliegt</a>.
d101 1
a101 1
<a href=security.html>Sicherheit</a> eines Betriebsystems zu 
d106 2
a107 2
<a name=ssh></a>
<h3><font color=#e00000>OpenSSH</font></h3><p>
d110 2
a111 2
haben?  Sie installieren Secure Shell 
(<a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ssh>ssh</a>)
d119 2
a120 2
<a href="http://www.openssh.com/">OpenSSH</a> interagierte mit ssh Version 1
und hatte viele weitere Features,
d124 1
a124 1
<a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ssl>ssl</a>)
d133 1
a133 1
<a href=http://www.openbsd.org/cgi-bin/man.cgi?query=kerberos>kerberos</a>
d138 1
a138 1
<a href=http://www.openbsd.org/cgi-bin/man.cgi?query=skey>skey</a>.
d149 2
a150 2
<a name=prng></a>
<h3><font color=#e00000>Pseudo Zufallszahlen Generatoren</font></h3><p>
d190 1
a190 1
<li>In <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd>isakmpd</a>,
d195 2
a196 2
<a name=hash></a>
<h3><font color=#e00000>Kryptografische Hashfunktionen</font></h3><p>
d212 1
a212 1
<li>In <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=skey>S/Key</a>
d214 1
a214 1
<li>In <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec>IPsec</a>,
d216 1
a216 1
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd>isakmpd(8)</a>
d219 1
a219 1
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=passwd.conf&sektion=5>
d222 1
a222 1
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=options&sektion=4>
d230 1
a230 1
<h3><font color=#e00000>Symmetrische Verschl&uuml;sselungsalgorithmen</font></h3><p>
d248 1
a248 1
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec>IPsec</a>
d251 4
a254 4
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=telnet>telnet</a>,
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=cvs>cvs</a>,
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=rsh>rsh</a>,
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=rcp>rcp</a>,
d256 2
a257 2
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=rlogin>rlogin</a>.
<li>In <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd>isakmpd</a>
d266 2
a267 2
<a name=hardware></a>
<h3><font color=#e00000>Unterst&uuml;tzung f&uuml;r kryptografische Hardware</font></h3><p>
d421 1
a421 1
    <a href=#people>herkommen und mithelfen</a>.</b>
d423 2
a424 2
<a name=people></a>
<h3><font color=#e00000>Internationale Kryptologen gesucht</font></h3><p>
d433 2
a434 2
<a name=papers></a>
<h3><font color=#e00000>Weitere Quellen</font></h3><p>
d443 5
a447 5
    <a href=../events.html#usenix99>Usenix 1999</a>,
    by <a href=mailto:provos@@openbsd.org>Niels Provos</a>,
    <a href=mailto:dm@@openbsd.org>David Mazieres</a>.<br>
    <a href=../papers/bcrypt-paper.ps>Papierform</a> und
    <a href=../papers/bcrypt-slides.ps>Folien</a>.
d450 8
a457 8
    <a href=../events.html#usenix99>Usenix 1999</a>,
    by <a href=mailto:deraadt@@openbsd.org>Theo de Raadt</a>,
    <a href=mailto:niklas@@openbsd.org>Niklas Hallqvist</a>,
    <a href=mailto:art@@openbsd.org>Artur Grabowski</a>,
    <a href=mailto:angelos@@openbsd.org>Angelos D. Keromytis</a>,
    <a href=mailto:provos@@openbsd.org>Niels Provos</a>.<br>
    <a href=../papers/crypt-paper.ps>Papierform</a> und
    <a href=../papers/crypt-slides.ps>Folien</a>.
d460 5
a464 5
    <a href=events.html#usenix2000>Usenix 2000</a>,
    by <a href=mailto:niklas@@openbsd.org>Niklas Hallqvist</a> und
    <a href=mailto:angelos@@openbsd.org>Angelos D. Keromytis</a>.<br>
    <a href=../papers/ikepaper.ps>Papierform</a> und
    <a href=../papers/ikeslides.ps>Folien</a>.
d467 4
a470 4
    <a href=events.html#sec2000>Usenix Security 2000</a>,
    <a href=mailto:provos@@openbsd.org>Niels Provos</a>.<br>
    <a href=../papers/swapencrypt.ps>Papierform</a> und
    <a href=../papers/swapencrypt-slides.ps>Folien</a>.
d475 2
a476 2
<a href=index.html><img height=24 width=24 src=../back.gif border=0 alt=OpenBSD></a>
<a href=mailto:www@@openbsd.org>www@@openbsd.org</a>
d479 1
a479 1
Originally [OpenBSD: crypto.html,v 1.113 ]
d481 1
a481 1
$Translation: crypto.html,v 1.66 2002/11/20 13:40:03 jufi Exp $
d484 1
a484 1
<small>$OpenBSD: crypto.html,v 1.113 2002/11/15 18:09:15 deraadt Exp $</small>
@


1.58
log
@
sync with badlands translation CVS
@
text
@d365 2
a366 2
    Die <a href="http://www.pcc.pijnenburg.nl/pcc-ises.htm">PCC-ISES</a> ist ein 
    neuer Chipsatz aus den Niederlanden.  Wir haben Probe-Hardware und
d373 1
a373 1
    <a href="http://www.safenet-inc.com/technology/chips/Chip2141.asp">SafeNet</a>
d478 1
a478 1
Originally [OpenBSD: crypto.html,v 1.112 ]
d480 1
a480 1
$Translation: crypto.html,v 1.65 2002/10/10 09:51:58 jufi Exp $
d483 1
a483 1
<small>$OpenBSD: crypto.html,v 1.112 2002/09/24 23:16:31 jason Exp $</small>
@


1.57
log
@
sync with badlands translation CVS
@
text
@d10 1
a10 1
<meta name="keywords" content="ipsec,photuris,isakmp,ike,blowfish,des,rsa,dsa">
d186 1
a186 2
<li>
	random padding in IPsec esp_old Paketen.
d189 2
a190 3
<li>In <a href=http://www.physnet.uni-hamburg.de/provos/photuris/>photurisd</a> 
        und <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd>isakmpd</a>
	um einen guten Beweis f&uuml;r den Schl&uuml;ssel-Austausch zu haben.
a213 1
    <a href=http://www.physnet.uni-hamburg.de/provos/photuris/>photurisd</a>
d256 1
a256 3
<li>In <a href=http://www.physnet.uni-hamburg.de/provos/photuris/>
    photurisd</a> und
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=isakmpd>isakmpd</a>
d478 1
a478 1
Originally [OpenBSD: crypto.html,v 1.111 ]
d480 1
a480 1
$Translation: crypto.html,v 1.64 2002/09/11 17:03:28 jufi Exp $
d483 1
a483 1
<small>$OpenBSD: crypto.html,v 1.111 2002/09/11 16:53:04 jufi Exp $</small>
@


1.56
log
@
sync with badlands translation CVS
@
text
@d336 1
a336 1
    Broadcom BCM5805/BCM5820/BCM5821
d364 4
d384 1
a384 1
    3com 3c990</a></b><br>
d386 7
a392 7
    und wir haben basierend darauf einen eigenen Ethernet-Treiber geschrieben. Der Treiber wurde jetzt
    in OpenBSD eingef&uuml;gt, wo wir eine freie Lizenz f&uuml;r den Microcode erhalten haben.
    Wir haben auch Informationen bekommen, um die kryptografischen
    Funktionen zu unterst&uuml;tzen, was einen kleinen Umbau des IPsec Subsystems erforderlich macht.  
    Sp&auml;ter zeigte sich dann, dass der microcode, den wir bekommen hatten, buggy war, IPsec nicht richtig
    gemacht hat, und alle Leute, mit denen wir gesprochen hatten, ersetzt worden waren...
    Das ganze stellt sich als wenig sinnvolle Erfahrung heraus.
d483 1
a483 1
Originally [OpenBSD: crypto.html,v 1.107 ]
d485 1
a485 1
$Translation: crypto.html,v 1.63 2002/06/26 11:46:41 jufi Exp $
d488 1
a488 1
<small>$OpenBSD: crypto.html,v 1.107 2002/06/19 18:16:15 deraadt Exp $</small>
@


1.55
log
@
sync with badlands translation CVS
@
text
@d313 1
a313 1
     Die Karte wurde von <a href="http://www.gtgi.com/">GTGI</a> gespendet.
d324 1
a324 2
    Die Entwicklung hat begonnen, sowohl der Zufallsgenerator, als auch die big number unit
    funktionieren.
a359 1

d361 3
d411 6
a416 6
    Wir haben grosse Pl&auml;ne, was die Unterst&uuml;tzung f&uuml;r Karten betrifft, die RSA oder
    DSA-Operationen durchf&uuml;hren, und auch was das Auslagern solcher Funktionen in die
    OpenSSL betrifft, so dass Userland-Programme
    (also hier <a href="http://www.openssh.com">ssh</a>,
    <a href="http://www.modssl.org/">apache https</a>, etc.)
    davon profitieren k&ouml;nnen.
d479 1
a479 1
Originally [OpenBSD: crypto.html,v 1.106 ]
d481 1
a481 1
$Translation: crypto.html,v 1.62 2002/05/20 11:26:35 jufi Exp $
d484 1
a484 1
<small>$OpenBSD: crypto.html,v 1.106 2002/05/18 17:55:41 deraadt Exp $</small>
@


1.54
log
@
sync with badlands translation CVS
@
text
@d7 1
d29 2
a30 1
<h2><font color=#e00000>Kryptografie</font><hr></h2>
d385 3
a387 1
    Neues gibt es dann wieder hier...
d478 1
a478 1
Originally [OpenBSD: crypto.html,v 1.105 ]
d480 1
a480 1
$Translation: crypto.html,v 1.61 2002/05/17 10:21:50 jufi Exp $
d483 1
a483 1
<small>$OpenBSD: crypto.html,v 1.105 2002/05/16 02:21:13 jason Exp $</small>
@


1.53
log
@
sync with badlands translation CVS
@
text
@d321 11
a331 2
    Zufallszahlen-Generator. Wir haben ein Ger&auml;t, die komplette Dokumentation und Beispiel-Code. 
    Die Entwicklung hat begonnen, unterst&uuml;tzt zur Zeit aber nur den Zufallszahlengenerator.
d335 2
a336 1
    Broadcom BCM5805 (oder Testchip Bluesteelnet 5501)</a></b><br>
d474 1
a474 1
Originally [OpenBSD: crypto.html,v 1.104 ]
d476 1
a476 1
$Translation: crypto.html,v 1.60 2002/05/02 21:02:33 jufi Exp $
d479 1
a479 1
<small>$OpenBSD: crypto.html,v 1.104 2002/04/28 21:57:08 miod Exp $</small>
@


1.52
log
@
sync with badlands translation CVS
@
text
@d332 1
d336 1
a336 2
    bald verbreiteter sein. Unser Treiber hat nach wie vor Bugs, so dass Performancezahlen
    noch folgen werden.
d466 1
a466 1
$Translation: crypto.html,v 1.59 2002/05/01 09:56:57 jufi Exp $
@


1.51
log
@
sync with badlands translation CVS
@
text
@d464 1
a464 1
Originally [OpenBSD: crypto.html,v 1.103 ]
d466 1
a466 1
$Translation: crypto.html,v 1.58 2002/04/17 19:32:25 jufi Exp $
d469 1
a469 1
<small>$OpenBSD: crypto.html,v 1.103 2002/04/17 07:21:06 miod Exp $</small>
@


1.50
log
@
sync with badlands translation CVS.
@
text
@d464 1
a464 1
Originally [OpenBSD: crypto.html,v 1.102 ]
d466 1
a466 1
$Translation: crypto.html,v 1.57 2002/02/25 22:42:11 jufi Exp $
d469 1
a469 1
<small>$OpenBSD: crypto.html,v 1.102 2002/02/14 18:48:50 brad Exp $</small>
@


1.49
log
@
better language and typos.
patch by Michael Lestinsky
@
text
@d89 1
a89 1
IPSec ist Teil des Systems seit der Ver&ouml;ffentlichung der Version OpenBSD 2.1 im
d92 1
a92 1
wird als eine der Maschinen im `IPSec conformance testbed' von der
d185 1
a185 1
	random padding in IPSec esp_old Paketen.
d213 1
a213 1
<li>In <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec>IPSec</a>,
d248 1
a248 1
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec>IPSec</a>
d260 1
a260 1
    um den Austausch von IPSec Schl&uuml;sselmaterial zu sch&uuml;tzen.
d276 2
a277 2
    Unser IPSec-Stack wurde so ver&auml;ndert, dass kryptografische Funktionen
    auch "au&szlig;er-der-Reihe" gemacht werden k&ouml;nnen. Die meisten Software-IPSec-Stacks
d299 1
a299 1
    arbeitet unser Treiber sauber mit IPSec zusammen.
d372 1
a372 1
    Funktionen zu unterst&uuml;tzen, was einen kleinen Umbau des IPSec Subsystems erforderlich macht.  
d376 1
a376 1
<li><b>Intel IPSec card</b><br>
d390 1
a390 1
    enth&auml;lt einen `random number generator (RNG)'.  High-performance IPSec
d464 1
a464 1
Originally [OpenBSD: crypto.html,v 1.101 ]
d466 1
a466 1
$Translation: crypto.html,v 1.56 2002/02/22 18:54:10 jufi Exp $
@


1.48
log
@
sync with badlands translation CVS.
@
text
@d31 1
a31 1
<a href=#why>Warum liefern wir Kryptografie aus?</a>.<br> 
d59 1
a59 1
Daher hat das OpenBSD-Projekt Kryptografie in zahlreichen Orten im Betriebsystem
d72 1
a72 1
Wenn wir OpenBSD Versionen oder Snapshots machen, erzeugen wir diese
d175 3
a177 3
<li>IP Datagramm IDs.
<li>RPC Transaktions IDs (XID).
<li>NFS RPC Transaktions IDs (XID).
d180 1
a180 1
<li>Timing St&ouml;rungen in traceroute(8).
d195 1
a195 1
<h3><font color=#e00000>Kryptografische Hash Funktionen</font></h3><p>
d197 1
a197 1
Eine Hash Funktion komprimiert ihre eingegebenen Daten zu einer
d199 1
a199 1
F&uuml;r eine kryptografische Hash-Funktion ist es undurchf&uuml;hrbar, folgendes zu finden:
d276 2
a277 2
    Unser IPSec Stack wurde so ver&auml;ndert, dass kryptografische Funktionen
    auch "au&szlig;er-der-Reihe" gemacht werden k&ouml;nnen. Die meisten Software IPSec Stacks
d466 1
a466 1
$Translation: crypto.html,v 1.55 2002/02/14 17:34:32 jufi Exp $
d469 1
a469 1
<small>$OpenBSD: crypto.html,v 1.101 2002/02/13 03:22:42 deraadt Exp $</small>
@


1.47
log
@
sync with badlands translation CVS
@
text
@d287 4
a290 1
    <a href="http://www.powercrypt.com">PowerCrypt</a>).
d464 1
a464 1
Originally [OpenBSD: crypto.html,v 1.100 ]
d466 1
a466 1
$Translation: crypto.html,v 1.54 2002/01/26 13:35:32 jufi Exp $
d469 1
a469 1
<small>$OpenBSD: crypto.html,v 1.100 2002/01/21 18:39:25 jason Exp $</small>
@


1.46
log
@
sync with badlands translation CVS.
@
text
@a321 9
<li><b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=nofn&sektion=4">
    Hifn 7811</a></b><br>
    Dieses Ger&auml;lt enth&auml;lt sowohl eine asymmetrische Kryptoeinheit als auch eine symmetrische
    Kryptoeinheit. Es unterst&uuml;tzt RSA, DSA, und DH Algorithmen genauso wie andere
    grosse Zahlen-Algorithmen. Ausserdem ist ein Zufallszahlengenerator enthalten.
    Wir haben ein Ger&auml;lt, volle Dokumentation und Beispiel-Code.
    Die Entwicklung hat begonnen, bisher wird aber nur der Zufallszahlengenerator unterst&uuml;ltzt.
    <p>

d347 1
d461 1
a461 1
Originally [OpenBSD: crypto.html,v 1.98 ]
d463 1
a463 1
$Translation: crypto.html,v 1.53 2002/01/20 11:03:46 jufi Exp $
d466 1
a466 1
<small>$OpenBSD: crypto.html,v 1.98 2002/01/13 21:14:40 horacio Exp $</small>
@


1.45
log
@
sync with badlands translation CVS
@
text
@d11 1
a11 1
<meta name="copyright" content="This document copyright 1997-2001 by OpenBSD.">
d469 1
a469 1
Originally [OpenBSD: crypto.html,v 1.97 ]
d471 1
a471 1
$Translation: crypto.html,v 1.52 2002/01/13 12:02:07 jufi Exp $
d474 1
a474 1
<small>$OpenBSD: crypto.html,v 1.97 2002/01/08 23:24:47 jason Exp $</small>
@


1.44
log
@
sync with badlands translation CVS
@
text
@@


1.43
log
@
sync with badlands translation CVS.
@
text
@d301 9
d469 1
a469 1
Originally [OpenBSD: crypto.html,v 1.96 ]
d471 1
a471 1
$Translation: crypto.html,v 1.51 2002/01/08 22:30:10 jufi Exp $
d474 1
a474 1
<small>$OpenBSD: crypto.html,v 1.96 2002/01/07 23:41:43 jason Exp $</small>
@


1.42
log
@
sync with translation CVS.
@
text
@d313 9
d343 4
d460 1
a460 1
Originally [OpenBSD: crypto.html,v 1.94 ]
d462 1
a462 1
$Translation: crypto.html,v 1.50 2001/12/29 00:16:40 jufi Exp $
d465 1
a465 1
<small>$OpenBSD: crypto.html,v 1.94 2001/12/14 20:59:25 miod Exp $</small>
@


1.41
log
@sync with badlands translation CVS.
@
text
@d79 3
a81 2
OpenBSD wird mit Kerberos IV ausgeliefert.  Die Codebasis, die wir benutzen
ist die exportierbare KTH-basierte Version aus Schweden.
d83 1
a83 4
Kerberos IV machen.
<p>
Die n&auml;chste Version wird die Heimdal Implementation von Kerberos V enthalten,
ebenso vom KTH in Sweden.
d141 4
a144 25
Wir umgehen das USA-basierte Patent von RSA, indem wir einen einfachen Weg 
anbieten, die libcrypto und libssl Libraries mit RSA einfach herunterzuladen
und zu installieren. 
Diese Pakete basieren auf OpenSSL. Leute, die ausserhalb der USA leben, k&ouml;nnen
den von RSA patentierten Code frei benutzen, solange sie ihn nicht f&uuml;r
kommerzielle Zwecke einsetzen.
Es sieht so aus, als ob Firmen innerhalb der USA RSA-patentierten Code
ebenfalls frei benutzen k&ouml;nnen, solange RSA keine Hauptrolle beim 
Geldverdienen spielt.
<p>

Aber auf diesem Wege bekommt fast jeder ein eingebautes ssh in seinem Betriebssystem.
<p>

<strong>NEU! OpenSSH unterst&uuml;tzt Protokoll 2.0!</strong><p>

Vor kurzem haben wir OpenSSH so  erweitert, dass es auch das SSH2 Protokoll benutzen
kann. Ein ssh-daemon, der alle 3 wichtigen SSH-Protokole beherrscht, bringt uns 
viel mehr Flexibilit&auml;t. Protokoll 2.0 benutzt kein RSA f&uuml;r seine Public-Key-Kryptografie,
und verl&auml;sst sich stattdessen auf DH und DSA Algorithmen. In OpenBSD 2.7 -- das mit dem neuen SSH 
ausgeliefert wird -- ist Protokoll 2.0 Unterst&uuml;tzung gleich mit eingebaut! Wenn zus&auml;tzlich 
Protokoll 1.3 und 1.5 unterst&uuml;tzen werden soll, braucht man nur das RSA-Paket zu installieren (so wie
auf der <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ssl>ssl</a>
manual Page beschrieben), und den Daemon neu starten.
 
d274 2
a275 1
<li><b>IPSec crypto dequeue</b><br>
d305 2
a306 1
<li><b>Hifn 6500</b><br>
d310 1
a310 1
    Die Entwicklung hat noch nicht begonnen.
d447 1
a447 1
Originally [OpenBSD: crypto.html,v 1.91 ]
d449 1
a449 1
$Translation: crypto.html,v 1.49 2001/11/13 18:55:39 paul Exp $
d452 1
a452 1
<small>$OpenBSD: crypto.html,v 1.91 2001/08/25 11:25:42 jufi Exp $</small>
@


1.40
log
@
copyright extended to 2001
@
text
@d23 1
a23 1
Kryptografie, zusammen arbeiten. 
d102 1
a102 1
Bereiche klassifiziert werden :
d109 1
a109 1
haben ?  Sie installieren Secure Shell 
d157 1
a157 1
<strong>NEU!  OpenSSH unterst&uuml;tzt Protokoll 2.0!</strong><p>
d209 1
a209 1
<li>Um salts f&uuml;r die verschiedenen Passwort-Algorithmen zu generieren..
d335 1
a335 1
    Broadcom BCM5805 (or beta chip Bluesteelnet 5501)</a></b><br>
d470 1
a470 1
$Translation: crypto.html,v 1.48 2001/08/25 11:38:36 jufi Exp $
@


1.39
log
@
cleanups and updates.
@
text
@d11 1
a11 1
<meta name="copyright" content="This document copyright 1997 by OpenBSD.">
d468 1
a468 1
Originally [OpenBSD: crypto.html,v 1.90 ]
d470 1
a470 1
$Translation: crypto.html,v 1.47 2001/08/18 19:24:34 jufi Exp $
d473 1
a473 1
<small>$OpenBSD: crypto.html,v 1.90 2001/08/08 21:06:32 jsyn Exp $</small>
@


1.38
log
@
sync with badlands translation CVS.
@
text
@d63 1
a63 1
Wir benutzen keine Kryptografie mit unzul&aumlnglichen Lizenzen direkt.
d74 1
a74 1
Bin&aumlrdateien frei von Beschr&auml;nkungen sind.
d93 1
a93 1
Hardwareuntertst&uumltzung durch Zusatzkarten und unser eigener freier ISAKMP daemon
d300 1
a300 1
    m&uumlssen die kryptografischen Funktionen mit jedem einzelnen Paket, das sie behandeln,
d302 1
a302 1
    zu nutzen, muss man diese zwei Komponenten trennen, so wie von uns durchgef&uumlhrt. Tats&auml;chlich
d470 1
a470 1
$Translation: crypto.html,v 1.46 2001/08/14 18:56:11 jufi Exp $
@


1.37
log
@
sync with badlands translation CVS.
@
text
@d468 1
a468 1
Originally [OpenBSD: crypto.html,v 1.89 ]
d470 1
a470 1
$Translation: crypto.html,v 1.45 2001/07/03 18:16:28 jufi Exp $
d473 1
a473 1
<small>$OpenBSD: crypto.html,v 1.89 2001/07/02 20:53:17 jufi Exp $</small>
@


1.36
log
@
cleanup and update
@
text
@d321 1
a321 1
    Die Spitzenperformance mit 3DES SHA1 ESP betr&auml;gt etwa 64MBit/sec.
d468 1
a468 1
Originally [OpenBSD: crypto.html,v 1.88 ]
d470 1
a470 1
$Translation: crypto.html,v 1.44 2001/06/28 19:59:55 jufi Exp $
d473 1
a473 1
<small>$OpenBSD: crypto.html,v 1.88 2001/06/28 18:04:25 brad Exp $</small>
@


1.35
log
@
sync with badlands translation CVS.
@
text
@d90 3
a92 3
OpenBSD war das erste Betriebssystem, das mit einem IPSEC-Stack ausgeliefert wurde.
IPSEC ist Teil des Systems seit der Ver&ouml;ffentlichung der Version OpenBSD 2.1 im
Jahre 1997. Unser voll konformer kernel-interner IPSEC-Stack mit m&ouml;glicher 
d94 1
a94 1
wird als eine der Maschinen im `IPSEC conformance testbed' von der
d208 1
a208 1
	random padding in IPSEC esp_old Paketen.
d236 1
a236 1
<li>In <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec>IPSEC</a>,
d271 1
a271 1
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec>IPSEC</a>
d283 1
a283 1
    um den Austausch von IPSEC Schl&uuml;sselmaterial zu sch&uuml;tzen.
d297 3
a299 3
<li><b>IPSEC crypto dequeue</b><br>
    Unser IPSEC Stack wurde so ver&auml;ndert, dass kryptografische Funktionen
    auch "au&szlig;er-der-Reihe" gemacht werden k&ouml;nnen. Die meisten Software IPSEC Stacks
d306 2
a307 2
    HiFn 7751</a></b><br>
    Karten, die den <a href="http://www.hifn.com/products/7751.html">HiFn 7751</a>
d311 1
a311 1
    63Mbit/sec f&uuml;r 3DES/SHA1 ESP, wenn man einen einzelnen Hifn 7751 auf jeder Seite eines
d317 2
a318 2
    <a href="http://www.powercrypt.com">powercrypt</a> Treiber zu benutzen, ausserdem
    arbeitet unser Treiber sauber mit IPSEC zusammen.
d320 2
a321 2
    haben schnellere Chips (auch HiFn hat einen schnelleren, aber auch teuereren Chip).
    Die Spitzenperformance mit 3DES SHA1 ESP betr&auml;gt etwa 63MBit/sec.
d323 1
a323 1
    (Nebenbei: HiFn war eine recht schwierige Firma; sie haben uns sogar angedroht uns wegen unseres
d343 1
a343 1
    ann&auml;hernd doppelt so grossen Performance wie die der HiFn wird dieser Chip hoffentlich
d356 1
a356 1
    Pijnenburg PCC-ISES</a></b><br>
d363 1
a363 1
<li><b>SafeNet 2141</b><br>
d365 1
a365 1
    <a href="http://www.safenet-inc.com/OEM/OEMTechnologyDefault.htm">SafeNet</a>
d375 2
a376 2
    Wir haben auch (alle?) Informationen bekommen, um die kryptografischen
    Funktionen zu unterst&uuml;tzen, was einen kleinen Umbau des IPSEC Subsystems erforderlich macht.  
d380 1
a380 1
<li><b>Intel IPSEC card</b><br>
d394 1
a394 1
    enth&auml;lt einen `random number generator (RNG)'.  High-performance IPSEC
d468 1
a468 1
Originally [OpenBSD: crypto.html,v 1.86 ]
d470 1
a470 1
$Translation: crypto.html,v 1.42 2001/06/26 18:11:40 jufi Exp $
d473 1
a473 1
<small>$OpenBSD: crypto.html,v 1.86 2001/06/26 11:46:14 brad Exp $</small>
@


1.34
log
@
Updated.
@
text
@d79 1
a79 1
OpenBSD wird mit Kerberos IV und Kerberos V ausgeliefert.  Die Codebasis, die wir benutzen
d84 2
a85 2
Die Version von Kerberos V, die wir integriert haben, ist Heimdahl, ebenfalls von den
KTH Leuten aus Schweden. 
d328 1
a328 1
    Dieses Ger&auml;t ist eine assymmetrische Krypto-Einheit. Sie unterst&uuml;tzt RSA, DSA,
d468 1
a468 1
Originally [OpenBSD: crypto.html,v 1.84 ]
d470 1
a470 1
$Translation: crypto.html,v 1.41 2001/06/05 16:56:35 jufi Exp $
d473 1
a473 1
<small>$OpenBSD: crypto.html,v 1.84 2001/06/04 22:23:50 pvalchev Exp $</small>
@


1.33
log
@
Updated.
@
text
@d299 1
a299 1
    auch "ausser-der-Reihe" gemacht werden k&ouml;nnen. Die meisten Software IPSEC Stacks
d341 1
a341 1
    Ihre neue BCM5805 ist &auml;hnlich, ausser dass sie auch eine asymmetrische Maschine
d468 1
a468 1
Originally [OpenBSD: crypto.html,v 1.83 ]
d470 1
a470 1
$Translation: crypto.html,v 1.40 2001/06/04 12:24:20 jufi Exp $
d473 1
a473 1
<small>$OpenBSD: crypto.html,v 1.83 2001/06/03 21:51:10 pvalchev Exp $</small>
@


1.32
log
@
Sync with badlands translation CVS.
@
text
@d79 1
a79 1
OpenBSD wird mit Kerberos IV ausgeliefert.  Die Codebasis, die wir benutzen
d84 2
a85 4

Wir arbeiten daran, die Heimdahl Implementation von Kerberos V zu integrieren, also von
den KTH Leuten in Schweden. Wir hoffen OpenBSD mit Kerberos V im Jahr 2001 ausliefern 
zu k&ouml;nnen.
d468 1
a468 1
Originally [OpenBSD: crypto.html,v 1.81 ]
d470 1
a470 1
$Translation: crypto.html,v 1.39 2001/05/17 19:40:00 jufi Exp $
d473 1
a474 1
<small>$OpenBSD: crypto.html,v 1.81 2001/05/15 12:10:42 hin Exp $</small>
@


1.31
log
@
Updates and beautification by Paul Weissmann and myself.
@
text
@a82 3
Kerberos V Unterst&uuml;tzung wird irgendwann in 2000 erscheinen, aber
zur Zeit existiert einfach keine frei exportierbare Version von
Kerberos V.
d85 6
d470 1
a470 1
Originally [OpenBSD: crypto.html,v 1.80 ]
d472 1
a472 1
$Translation: crypto.html,v 1.38 2001/05/13 21:28:26 paul Exp $
d476 1
a476 1
<small>$OpenBSD: crypto.html,v 1.80 2001/05/09 11:49:20 deraadt Exp $</small>
@


1.30
log
@
Sync with badlands translation CVS.
@
text
@d19 2
a20 2
Das Mantra eines jeden guten Sicherheitsingenieurs ist : "Sicherheit
ist kein Produkt, sondern ein Prozess !" Es steckt mehr dahinter
d36 1
a36 1
<a href=#hardware>Unterst&uuml;tzung f&uuml;r kryptologische Hardware</a><br>
d43 1
a43 1
<h3><font color=#e00000>Warum liefern wir Kryptografie aus ?</font></h3><p>
d51 2
a52 2
Exports von kryptologischer Software, und ist sogar noch offener,
was den Export frei-erh&auml;ltlicher kryptologischer Software angeht.
d55 1
a55 1
einige Nachforschungen betrieben, um die Kryptologiegesetze zu pr&uuml;fen
d59 2
a60 2
Daher hat das OpenBSD-Projekt Kryptologie in zahlreichen Orten im Betriebsystem
integriert. Wir verlangen, dass die kryptologische Software, die wir benutzen
d63 1
a63 1
Wir benutzen Kryptografie mit garstigen Lizenzen nicht direkt.
d73 2
a74 2
in freien L&auml;ndern, um sicherzustellen, dass sowohl Sourcen, als auch
Binaries frei von Beschr&auml;nkungen sind.
d79 1
a79 1
OpenBSD wird mit Kerberos IV ausgeliefert.  Die Codebase, die wir benutzen
d81 1
a81 1
Unsere X11-Sourcen wurden ebenfalls so erweitert, dass sie Gebrauch von
d89 1
a89 1
OpenBSD war das erste Betriebssystem, das mit dem IPSEC-Stack ausgeliefert wurde.
d91 3
a93 3
Jahre 1997. Unser voll konformer kernel-interner IPSEC stack mit m&ouml;glicher 
Hardwarebeschleunigung durch einige Karten, und unser eigener freier ISAKMP daemon
wird als eine der Maschinen im 'IPSEC conformance testbed' von der
d115 1
a115 1
<a href="http://www.openssh.com/">OpenSSH</a> integriert , eine absolut
d118 1
a118 1
und hatte viele weitere Features.
d121 1
a121 1
Alle Teile restriktiver Natur wurden entfernt (also Patente, siehe
d127 1
a127 1
war um das Protokoll Version 1.5 erweitert worden.
d130 1
a130 1
beinhaltete Unterst&uuml;tzung f&uuml;r 
d162 2
a163 2
ausgeliefert wird -- hast du Protokoll 2.0 Unterst&uuml;tzung gleich mit eingebaut! Wenn du zus&auml;tzlich 
Protokoll 1.3 und 1.5 unterst&uuml;tzen willst, brauchst du nur das RSA-Paket zu installieren (so wie
d179 1
a179 1
d.h. der PRNG sollte einen sehr langen  Kreislauf haben.
d188 2
a189 2
Verz&ouml;gerungen, die Zeit zwischen Tastendr&uuml;cken und Festplatten IO-Informationen
um Zufallszahlen zu bekommen.
d192 1
a192 1
Bisher werden Zufallszahlen hierbei benutzt :<p>
d204 1
a204 1
<li>Zuf&auml;lligkeit zum  TCP ISS hinzugef&uuml;gt, um Spoofing-Angriffe zu
d221 1
a221 1
F&uuml;r eine kryptografische Hash-Funktion ist es undurchf&uuml;hrbar folgendes zu finden:
d291 1
a291 1
<h3><font color=#e00000>Unterst&uuml;tzung f&uuml;r kryptologische Hardware</font></h3><p>
d293 1
a293 1
OpenBSD unterst&uuml;tzt seit Version 2.7 einige kryptologische Hardware wie etwa 
d299 1
a299 1
    m&uuml;ssen die kryptografischen Funktionen mit jedem einzelnen Paket, das sie behandeln,
d301 1
a301 1
    zu nutzen, muss man diese zwei Komponenten trennen, so wie wir das gemacht haben. Tats&auml;chlich
d307 1
a307 1
    verwenden k&ouml;nnen als symmetrischer kryptografischer Hardwarebeschleuniger benutzt werden, z.B. 
d350 2
a351 2
    Post 2.8 wurde dieser Treiber auch dahingehend modifiziert, da&szlig; er Zufallszahlen auf dem
    BCM5805 und &auml;hnlichen Versionen produziert, und diese dann in der Kernel Entropie 'Pool'
d359 1
a359 1
    kann der Treiber bereits Zufallszahlen an den Kernel Entropie 'Pool' liefern.
d374 1
a374 1
    Wir haben auch (all?) die Informationen bekommen, um die kryptografischen
d380 2
a381 2
    Intel tut viel f&uuml;r ihre Netzwerkprodukte, aber  im Gegensatz zu allen anderen Anbietern weigert
    sich Intel standhaft uns Dokumentation zu geben. Wir haben mit etwa 5 Technikern gesprochen, die an der
d393 1
a393 1
    enth&auml;lt einen 'random number generator (RNG)'.  High-performance IPSEC
d395 1
a395 1
    RNG.  Wir werden Unterst&uuml;tzung f&uuml;r weitere RNG's auf anderen Crypto Chips hinzuf&uuml;gen.
d417 1
a417 1
interessiert ist, soll er uns kontakten.
d469 1
a469 1
$Translation: crypto.html,v 1.37 2001/05/10 21:15:52 jufi Exp $
@


1.29
log
@
Sync with badlands translation CVS.
@
text
@d304 2
a305 1
<li><b>HiFn 7751</b><br>
d333 2
a334 1
    <li><b>Broadcom BCM5805 (oder der Beta Chip Bluesteelnet 5501)</b><br>
d354 2
a355 1
<li><b>Pijnenburg PCC-ISES</b><br>
d369 2
a370 1
<li><b>3com 3c990</b><br>
d372 3
a374 3
    und wir haben basierend darauf einen eigenen Ethernet-Treiber geschrieben. Der Treiber wurde noch
    nicht in OpenBSD eingef&uuml;gt, da wir noch auf eine Lizenz&auml;nderung warten, die wir f&uuml;r 
    den Microcode ben&ouml;tigen. Wir haben auch (all?) die Informationen bekommen, um die kryptografischen
d390 2
a391 1
<li><b>Intel 82802AB/82802AC Firmware Hub RNG</b><br>
d467 1
a467 1
Originally [OpenBSD: crypto.html,v 1.78 ]
d469 1
a469 1
$Translation: crypto.html,v 1.35 2001/04/25 19:50:35 jufi Exp $
d473 1
a473 1
<small>$OpenBSD: crypto.html,v 1.78 2001/04/24 17:47:50 brad Exp $</small>
@


1.28
log
@
Sync with translation CVS.
@
text
@d235 1
a235 1
<li>In <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec>IPsec</a>,
d270 1
a270 1
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ipsec>IPsec</a>
d282 1
a282 1
    um den Austausch von IPsec Schl&uuml;sselmaterial zu sch&uuml;tzen.
d366 1
a366 2
<li><b><a href="http://www.3com.com/promotions/3c990promo/index.html">
    3com 3c990</a></b><br>
d462 1
a462 1
Originally [OpenBSD: crypto.html,v 1.77 ]
d464 1
a464 1
$Translation: crypto.html,v 1.34 2001/04/23 21:05:06 jufi Exp $
d468 1
a468 1
<small>$OpenBSD: crypto.html,v 1.77 2001/04/23 08:44:00 deraadt Exp $</small>
@


1.27
log
@
Link corrected.
@
text
@d368 6
a373 4
    3com hat uns einen Treiber gegeben, um die Ethernet Komponente dieses Chipsets zu unterst&uuml;tzen.
    Dieser Treiber wird portiert. Es wird ausserdem angenommen, da&szlig; wir noch Informationen bekommen, 
    um die Kryptografie Funktionen zu unterst&uuml;tzen, was ein paar Ver&auml;nderungen im IPSEC Subsystem
    erfordern wird.
d377 7
a383 5
    Genauso wie 3COM verweigert uns Intel ihre Dokumentation.  Wir haben mit etwa
    5 Leuten aus dem technischen Bereich gesprochen, die mit der Entwicklung dieser Produkte
    besch&auml;ftigt sind. Sie waren alle daf&uuml;r, dass wir die Dokumentation bekommen.
    Sie haben uns weiterempfohlen, aber ihre H&auml;nde sind gebunden, da das Management keinerlei
    Vorteil f&uuml;r sich selber sieht, wenn sie uns Dokumentationen &uuml;berlassen. 
d463 1
a463 1
Originally [OpenBSD: crypto.html,v 1.76 ]
d465 1
a465 1
$Translation: crypto.html,v 1.33 2001/04/19 18:12:02 jufi Exp $
a467 1
<small>$OpenBSD: crypto.html,v 1.76 2001/04/18 16:07:59 deraadt Exp $</small>
d469 1
@


1.26
log
@
Sync with Badlands Translation CVS.
@
text
@d335 1
a335 2
    zu Verf&uuml;gung gestellt hat, insbesondere mit dem Testchip 
    <a href="http://www.bluesteelnet.com/product.html">5501</a>.
d459 1
a459 1
Originally [OpenBSD: crypto.html,v 1.75 ]
d461 1
a461 1
$Translation: crypto.html,v 1.32 2001/03/01 22:24:55 jufi Exp $
d464 1
a464 1
<small>$OpenBSD: crypto.html,v 1.75 2001/02/28 19:17:12 wvdputte Exp $</small>
@


1.25
log
@
More updates.
@
text
@d460 1
a460 1
Originally [OpenBSD: crypto.html,v 1.74 ]
d462 1
a462 1
$Translation: crypto.html,v 1.31 2001/02/18 13:24:02 jufi Exp $
d465 1
a465 1
<small>$OpenBSD: crypto.html,v 1.74 2001/01/31 22:36:14 deraadt Exp $</small>
@


1.24
log
@patches from Michael Lestinsky <michael@@zaphod.rhein-neckar.de>
@
text
@d349 4
a352 1

d356 2
a357 2
    Dokumentation erhalten, und die Arbeit, um zumindest die symmetrische Kryptografie zu unterst&uuml;tzen,
    hat begonnen.
d369 4
a372 6
    3com versteht immer noch nicht vollst&auml;ndig, was ihr Vorteil ist, wenn
    uns die Dokumentation f&uuml;r ihre Krypto-Karten geben, du kannst sie gerne
    kontaktieren und sie ermutigen, das endlich zu tun. Wir hatten gute Gespr&auml;che
    mit ihnen, aber leider wurden unsere Ansprechpartner bald versetzt. Jetzt haben
    wir die Gespr&auml;che aufgegeben, das sie anscheinend eine reine Zeitverschwendung
    sind.
d385 4
a388 5
    Der 82802 FWH Chip (zu finden auf i810, i820, und i840 Motherboards) enth&auml;lt
    einen Zufallszahlengenerator (random number generator (RNG)).  Hochleistungs-IPSEC 
    ben&ouml;tigt eine gr&ouml;&szlig;ere Zufallszahlenentropie. Nach Stand vom 10. April 2000 unterst&uuml;tzen
    wir den RNG. Wir werden Unterst&uuml;tzung f&uuml;r weitere RNG hinzuf&uuml;gen, die wir auf
    Crypto-Chips finden.
d460 1
a460 1
Originally [OpenBSD: crypto.html,v 1.73 ]
d462 1
a462 1
$Translation: crypto.html,v 1.30 2001/01/03 11:44:16 reinhard Exp $
d465 1
a465 1
<small>$OpenBSD: crypto.html,v 1.73 2000/12/15 15:47:43 aaron Exp $</small>
@


1.23
log
@
Updated.
@
text
@d89 1
a89 1
OpenBSD war das erste Betriebssystem, das mit dem IPSEC stack ausgeliefert wurde.
d160 1
a160 1
viel mehr Flexibilit&auml;t. Protokoll 2.0 benutzt kein RSA f&uuml;r seine Publib-Key-Kryptografie,
d298 1
a298 1
    auch "aus-der-Reihe" gemacht werden k&ouml;nnen. Die meisten Software IPSEC Stacks
d342 1
a342 1
    bald verbreiteter sein. Unser Treiberhat nach wie vor Bugs, so dass Performancezahlen
d366 1
a366 1
    3com versteht immer noch nicht vollst&aumL,ndig, was ihr Vorteil ist, wenn
d377 1
a377 1
    besch&aul;ftigt sind. Sie waren alle daf&uuml;r, dass wir die Dokumentation bekommen.
d384 1
a384 1
    Der 82802 FWH Xhip (zu finden auf i810, i820, und i840 Motherboards) enth&auml;lt
d462 1
a462 1
$Translation: crypto.html,v 1.29 2000/12/16 20:50:23 jufi Exp $
@


1.22
log
@
UPdated.
@
text
@d460 1
a460 1
Originally [OpenBSD: crypto.html,v 1.72 ]
d462 1
a462 1
$Translation: crypto.html,v 1.28 2000/11/22 20:23:27 jufi Exp $
d465 1
a465 1
<small>$OpenBSD: crypto.html,v 1.72 2000/11/20 13:17:25 deraadt Exp $</small>
@


1.21
log
@
Updated
@
text
@d357 1
a357 1
<li><b>IRE 2141</b><br>
d359 3
a361 3
    <a href="http://www.ire.com/OEM/OEMTechnologyDefault.htm">IRE</a> Kryptokarten
    bekommen, die auf dem SafeNet Chip basieren.  Wir werden bald mit der Arbeit daran
    beginnen, um sie zu unterst&uuml;tzen.
d363 1
d460 1
a460 1
Originally [OpenBSD: crypto.html,v 1.71 ]
d462 1
a462 1
$Translation: crypto.html,v 1.27 2000/11/18 14:44:54 jufi Exp $
d465 1
a465 1
<small>$OpenBSD: crypto.html,v 1.71 2000/11/17 19:11:33 jufi Exp $</small>
@


1.20
log
@
Updated.
@
text
@d251 1
a251 1
<a name=trans></a>
d266 2
a267 2
    <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=blf_key>Blowfish</a>
    Passw&ouml;rtern.  Dazu siehe auch das <a href=../papers/bcrypt-paper.ps>USENIX paper</a>
d424 1
a424 1
    by <a href=mailto:provos@@openbsd.org>Niels Provos<a/>,
d459 1
a459 1
Originally [OpenBSD: crypto.html,v 1.70 ]
d461 1
a461 1
$Translation: crypto.html,v 1.26 2000/11/09 20:14:42 jufi Exp $
d464 1
a464 1
<small>$OpenBSD: crypto.html,v 1.70 2000/11/09 03:52:01 deraadt Exp $</small>
@


1.19
log
@
Well... updated.
@
text
@d306 1
a306 1
    verwenden k&ouml;nnen als kryptografischer Hardwarebeschleuniger benutzt werden, z.B. 
d324 8
d337 2
d346 1
a346 1
    komplette Dokumentation f&uuml;r ihre Chips und dazu noch eine ausreichende Menge an Karten,
d353 2
a354 1
    Dokumentation erhalten, und die Arbeit f&uuml;r die Softwareunterst&uuml;tzung beginnt bald.
d363 16
a378 14

<li><b>Andere Karten</b><br>
    Wir n&auml;hern uns auch der Unterst&uuml;tzung von weiteren Chips wie etwa:
    <ul>
    
    <li><a href="http://www.3com.com/promotions/3c990promo/index.html">3com 3c990</a>
    <li>und weiteren
    </ul>
    <p>
    Intel (und 3com , aber nicht ganz so deutlich) verstehen noch nicht ganz, 
    wie sie davon profitieren k&ouml;nnen, wenn sie uns Dokumentation ihrer
    kryptografischen Karten geben, also ist es uns jederzeit recht, wenn du sie
    kontaktieren und sie ermutigen willst.
    Wir haben es aufgegeben mit ihnen zu reden, da es offensichtlich reine Zeitverschwendung ist.
a379 2
    <b>Wenn jemand beim Schreiben der Treiber helfen will, bitte einfach 
    <a href=#people>herkommen und mithelfen</a>.</b>
d381 1
d388 2
a389 1
<p>
d400 2
a401 1

d459 1
a459 1
Originally [OpenBSD: crypto.html,v 1.67 ]
d461 1
a461 1
$Translation: crypto.html,v 1.25 2000/09/15 19:07:08 jufi Exp $
d464 1
a464 1
<small>$OpenBSD: crypto.html,v 1.67 2000/09/12 21:03:10 deraadt Exp $</small>
@


1.18
log
@
Updated.
@
text
@d88 10
d445 1
a445 1
Originally [OpenBSD: crypto.html,v 1.65 ]
d447 1
a447 1
$Translation: crypto.html,v 1.24 2000/08/27 11:28:55 jufi Exp $
d450 1
a450 1
<small>$OpenBSD: crypto.html,v 1.65 2000/08/25 17:50:40 deraadt Exp $</small>
@


1.17
log
@
Syncing with badlands CVS.
@
text
@d319 1
a319 1
    Die neue BCM5805 ist &auml;hnlich, ausser dass sie auch eine asymmetrische Maschine
d435 1
a435 1
Originally [OpenBSD: crypto.html,v 1.64 ]
d437 1
a437 1
$Translation: crypto.html,v 1.23 2000/08/25 12:54:06 jufi Exp $
d440 1
a440 1
<small>$OpenBSD: crypto.html,v 1.64 2000/08/24 21:25:16 provos Exp $</small>
@


1.16
log
@
Updated.
@
text
@d425 2
a426 1
    <a href=../papers/swapencrpaper.ps>Papierform</a>.
d435 1
a435 1
Originally [OpenBSD: crypto.html,v 1.63 ]
d437 1
a437 1
$Translation: crypto.html,v 1.22 2000/08/20 08:32:00 jufi Exp $
d440 1
a440 1
<small>$OpenBSD: crypto.html,v 1.63 2000/08/19 17:04:09 deraadt Exp $</small>
@


1.15
log
@
Cleaned up.
@
text
@d421 5
d434 1
a434 1
Originally [OpenBSD: crypto.html,v 1.62 ]
d436 1
a436 1
$Translation: crypto.html,v 1.20 2000/08/13 14:29:52 jufi Exp $
d439 1
a439 1
<small>$OpenBSD: crypto.html,v 1.62 2000/08/04 08:34:12 niklas Exp $</small>
@


1.14
log
@
Link corrected.
@
text
@a0 1
f
d28 1
a28 1
<h2><font color=#e00000>Cryptography</font><hr></h2>
d431 1
a431 1
$Translation: crypto.html,v 1.19 2000/08/04 10:47:46 jufi Exp $
@


1.13
log
@
Next update.
@
text
@d1 1
d420 2
a421 2
    <a href=papers/ikepaper.ps>Papierform</a> und
    <a href=papers/ikeslides.ps>Folien</a>.
d432 1
a432 1
$Translation: crypto.html,v 1.18 2000/08/04 10:32:09 jufi Exp $
@


1.12
log
@
changes like in english version, i.e. Updated.
@
text
@d402 2
a403 2
    <a href=../papers/bcrypt-paper.ps>paper</a> and
    <a href=../papers/bcrypt-slides.ps>slides</a>.
d412 9
a420 2
    <a href=../papers/crypt-paper.ps>paper</a> and
    <a href=../papers/crypt-slides.ps>slides</a>.
d429 1
a429 1
Originally [OpenBSD: crypto.html,v 1.61 ]
d431 1
a431 1
$Translation: crypto.html,v 1.17 2000/08/01 12:53:42 jufi Exp $
d434 1
a434 1
<small>$OpenBSD: crypto.html,v 1.61 2000/07/31 21:33:27 deraadt Exp $</small>
@


1.11
log
@
Another file and some updates.
@
text
@d422 1
a422 1
Originally [OpenBSD: crypto.html,v 1.60 ]
d424 1
a424 1
$Translation: crypto.html,v 1.16 2000/07/20 20:39:52 jufi Exp $
d427 1
a427 1
<small>$OpenBSD: crypto.html,v 1.60 2000/07/20 17:54:59 deraadt Exp $</small>
@


1.10
log
@
Some updates and a fresh translation.
@
text
@d306 1
a306 1
    arbeitet unser Treiber sauber mit IPSEC zusammen.<p>
d309 4
d315 1
a315 1
    Direkt nach der Ver&ouml;ffentlichung von OpenBSD 2.7 konnten wir Unterst&uuml;tzung
d322 1
a322 1
    bald verbreiteter sein. Wir haben den Treiber noch nicht optimiert, so dass Performancezahlen
d324 17
a340 1
    
d346 2
a347 4
    <li><a href="http://www.ire.com/OEM/OEMTechnologyDefault.htm">IRE 2141</a>
    <li><a href="http://www.pcc.pijnenburg.nl/pcc-ises.htm">Pijnenburg PCC-ISES</a>
    <li>vielleicht dem
    <a href="http://www.3com.com/promotions/3c990promo/index.html">3com 3c990</a>
a350 3
    Von diesen Anbietern war insbeondere IRE sehr freundlich und hat uns alle Informationen gegeben,
    die wir brauchen, um ihre Hardware zu unterst&uuml;tzen. Andere Anbieter sind ebenfalls auf
    auf unserer Liste, aber wir konzentrieren uns zuerst auf die schnellen und einfachen L&ouml;sungen.
d355 1
d357 2
a358 2
    Wenn jemand beim Schreiben der Treiber helfen will, bitte einfach 
    <a href=#people>herkommen und mithelfen</a>.
d422 1
a422 1
Originally [OpenBSD: crypto.html,v 1.59 ]
d424 1
a424 1
$Translation: crypto.html,v 1.15 2000/07/08 11:12:12 jufi Exp $
d427 1
a427 1
<small>$OpenBSD: crypto.html,v 1.59 2000/07/06 17:16:54 deraadt Exp $</small>
@


1.9
log
@
Major 8-Bit character cleanup.
Sorry for the huge commit, but the 'Umlaute' are everywhere..
@
text
@d310 1
a310 1
<li><b>Broadcom Bluesteelnet 5501/5601/5805</b><br>
d313 1
a313 1
    zu Verf&uuml;gung gestellt hat, insbesondere von 
d315 4
a318 4
    Die anderen Karten sind &auml;hnlich, ausser dass sie auch eine asymmetrische Maschine
    hinzuf&uuml;gen,um DSA, RSA und &auml;hnliche Algorithmen zu unters&uuml;tzen. Mit einer 
    ann&auml;hernd doppelt so grossen Performance wie die der HiFn wird dieses Ger&auml;t hoffentlich
    verbreiteter sein. Wir haben den Treiber noch nicht optimiert, so dass Performancezahlen
d320 1
d406 1
a406 1
Originally [OpenBSD: crypto.html,v 1.58 ]
d408 1
a408 1
$Translation: crypto.html,v 1.14 2000/06/30 18:43:45 jufi Exp $
d411 1
a411 1
<small>$OpenBSD: crypto.html,v 1.58 2000/06/16 17:51:37 louis Exp $</small>
@


1.8
log
@
just updates.
@
text
@d35 2
a36 2
<a href=#trans>Symmetrische Verschlüsselungsverfahren</a>: DES, Blowfish, ...<br>
<a href=#hardware>Unterstützung für kryptologische Hardware</a><br>
d45 1
a45 1
In drei Worten:  <strong>weil wir können</strong>.<p>
d50 1
a50 1
beinhaltet keine signifikaten Beschränkungen bezüglich des
d52 1
a52 1
was den Export frei-erhältlicher kryptologischer Software angeht.
d55 1
a55 1
einige Nachforschungen betrieben, um die Kryptologiegesetze zu prüfen
d62 1
a62 1
<a href=policy.html>frei erhältlich ist und guten Lizenzen unterliegt</a>.
d64 1
a64 1
Wir verlangen ausserdem, dass solche Software aus Ländern mit vernünftigen
d73 2
a74 2
in freien Ländern, um sicherzustellen, dass sowohl Sourcen, als auch
Binaries frei von Beschränkungen sind.
d83 1
a83 1
Kerberos V Unterstützung wird irgendwann in 2000 erscheinen, aber
d90 1
a90 1
erhöhen. Die in OpenBSD integrierte Kryptografie kann in folgende
d120 1
a120 1
beinhaltete Unterstützung für 
d125 1
a125 1
unterstützte Einmal-Passwörter durch 
d135 2
a136 2
Diese Pakete basieren auf OpenSSL. Leute, die ausserhalb der USA leben, können
den von RSA patentierten Code frei benutzen, solange sie ihn nicht für
d139 1
a139 1
ebenfalls frei benutzen können, solange RSA keine Hauptrolle beim 
d146 1
a146 1
<strong>NEU!  OpenSSH unterstützt Protokoll 2.0!</strong><p>
d150 4
a153 4
viel mehr Flexibilität. Protokoll 2.0 benutzt kein RSA für seine Publib-Key-Kryptografie,
und verlässt sich stattdessen auf DH und DSA Algorithmen. In OpenBSD 2.7 -- das mit dem neuen SSH 
ausgeliefert wird -- hast du Protokoll 2.0 Unterstützung gleich mit eingebaut! Wenn du zusätzlich 
Protokoll 1.3 und 1.5 unterstützen willst, brauchst du nur das RSA-Paket zu installieren (so wie
d166 1
a166 1
<li>Es sollte für einen Aussenstehenden unmöglich sein, weitere Zahlen vorauszusagen,
d175 2
a176 2
Bei einem Multi-User-System gibt es viele Möglichkeiten den PRNG mit
Zufallsdaten zu füttern.
d178 1
a178 1
Verzögerungen, die Zeit zwischen Tastendrücken und Festplatten IO-Informationen
d180 1
a180 1
Zufallszahlen stehen den Kernel-Routinen zur Verfügung und werden an 
d192 3
a194 3
<li>Timing Störungen in traceroute(8).
<li>Stärkere vorübergehende Namen für mktemp(3) und mkstemp(3)
<li>Zufälligkeit zum  TCP ISS hinzugefügt, um Spoofing-Angriffe zu
d198 2
a199 2
<li>Um salts für die verschiedenen Passwort-Algorithmen zu generieren..
<li>Um vorgetäuschte S/Key Herausforderungen zu generieren.
d202 1
a202 1
	um einen guten Beweis für den Schlüssel-Austausch zu haben.
d210 2
a211 2
Zeichenkette konstanter Länge.
Für eine kryptografische Hash-Funktion ist es undurchführbar folgendes zu finden:
d215 1
a215 1
<li>Eine andere Eingabe für eine gegeben Eingabe mit der selben Ausgabe
d224 1
a224 1
    um Einmal-Passwörter bereitzustellen.
d229 2
a230 2
    um die Herkunft von Daten zu authentifizieren und Packetintegrität zu gewährleisten.
<li>Um MD5 Passwörter im FreeBSD-Stil bereitzustellen (kein Standard), siehe
d233 1
a233 1
<li>Für TCP SYN Cookie Unterstützung (kein Standard), siehe
d242 1
a242 1
<h3><font color=#e00000>Symmetrische Verschlüsselungsalgorithmen</font></h3><p>
d244 4
a247 4
Symmetrische Verfahren werden benutzt um Daten zu ver- und entschlüsseln.
Normalerweise werden sie mit einem Schlüsel zur Ver- und einem Schlüssel zur 
Entschlüsselung gebraucht. Die Sicherheit eines symmetrischen Algorithmus sollte
wirklich nur auf den Schlüsseln beruhen.
d250 2
a251 2
OpenBSD stellt symmetrische Verfahren wie DES, 3DES, Blowfish und Cast für Kernel-
und Userland-Programme zur Verfügung, die an vielen Plätzen, wie z.B. an diesen benutzt
d257 1
a257 1
    Passwörtern.  Dazu siehe auch das <a href=../papers/bcrypt-paper.ps>USENIX paper</a>
d272 4
a275 4
    um den Austausch von IPsec Schlüsselmaterial zu schützen.
<li>In AFS um die Nachrichten zu schützen, die über das Netzwerk gehen,
    und Vertrauen in den Zugriff auf entfernte Dateisysteme zu gewährleisten.
<li>In libssl um Applikationen über das kryptografisch sichere und zudem
d281 1
a281 1
<h3><font color=#e00000>Unterstützung für kryptologische Hardware</font></h3><p>
d283 1
a283 1
OpenBSD unterstützt seit Version 2.7 einige kryptologische Hardware wie etwa 
d287 6
a292 6
    Unser IPSEC Stack wurde so verändert, dass kryptografische Funktionen
    auch "aus-der-Reihe" gemacht werden können. Die meisten Software IPSEC Stacks
    müssen die kryptografischen Funktionen mit jedem einzelnen Paket, das sie behandeln,
    durchführen. Das resultiert in synchroner Leistungsfähigkeit. Um Hardware sauber und schnell
    zu nutzen, muss man diese zwei Komponenten trennen, so wie wir das gemacht haben. Tatsächlich
    springt dabei sogar etwas Leistung für die Softwareseite heraus.
d296 1
a296 1
    verwenden können als kryptografischer Hardwarebeschleuniger benutzt werden, z.B. 
d298 4
a301 4
    Die momentan dabei erreichte Leistung beträgt
    63Mbit/sec für 3DES/SHA1 ESP, wenn man einen einzelnen Hifn 7751 auf jeder Seite eines
    Tunnels hat, das ist fast eine 600%ige Verbessrung gegenüber einer
    P3/550 CPU.  An weiteren Verbesserungen bezüglich einiger Punkte wird noch gearbeitet,
d303 1
a303 1
    Wir haben unseren eigenen Treiber geschrieben, um diesen Chip zu unterstützen, anstatt
d311 3
a313 3
    Direkt nach der Veröffentlichung von OpenBSD 2.7 konnten wir Unterstützung
    für diese frühen Versionen erreichen,  die uns der Hersteller
    zu Verfügung gestellt hat, insbesondere von 
d315 3
a317 3
    Die anderen Karten sind ähnlich, ausser dass sie auch eine asymmetrische Maschine
    hinzufügen,um DSA, RSA und ähnliche Algorithmen zu untersützen. Mit einer 
    annähernd doppelt so grossen Performance wie die der HiFn wird dieses Gerät hoffentlich
d323 1
a323 1
    Wir nähern uns auch der Unterstützung von weiteren Chips wie etwa:
d333 2
a334 2
    die wir brauchen, um ihre Hardware zu unterstützen. Andere Anbieter sind ebenfalls auf
    auf unserer Liste, aber wir konzentrieren uns zuerst auf die schnellen und einfachen Lösungen.
d336 1
a336 1
    wie sie davon profitieren können, wenn sie uns Dokumentation ihrer
d344 1
a344 1
    Der 82802 FWH Xhip (zu finden auf i810, i820, und i840 Motherboards) enthält
d346 2
a347 2
    benötigt eine größere Zufallszahlenentropie. Nach Stand vom 10. April 2000 unterstützen
    wir den RNG. Wir werden Unterstützung für weitere RNG hinzufügen, die wir auf
d351 2
a352 2
    Wir haben grosse Pläne, was die Unterstützung für Karten betrifft, die RSA oder
    DSA-Operationen durchführen, und auch was das Auslagern solcher Funktionen in die
d356 1
a356 1
    davon profitieren können.
d365 2
a366 2
Natürlich braucht unser Projekt Leute, die an diesen Systemen arbeiten. 
Wenn ein Nicht-amerikanischer Kryptologe, den die oben erwähnten Zwänge
d375 3
a377 3
Eine Reihe von Leuten aus dem OpenBSD-Team haben Vorträge und Aufsätze über
die Veränderungen geschrieben, die sie in OpenBSD eingeführt haben.
Die Postscript-Versionen sind hier erhältlich:
d407 1
a407 1
$Translation: crypto.html,v 1.13 2000/06/16 20:54:28 jufi Exp $
@


1.7
log
@
Updated and link correction, thanks to Wim.
@
text
@d272 1
a272 1
    um den Austausch von IPsec Shlüsselmaterial zu schützen.
d283 2
a284 1
OpenBSD unterstützt seit Version 2.7 einige beschränkte kryptologische Hardware.
d405 1
a405 1
Originally [OpenBSD: crypto.html,v 1.57 ]
d407 1
a407 1
$Translation: crypto.html,v 1.12 2000/06/13 19:45:24 jufi Exp $
a408 1
<small>$OpenBSD: crypto.html,v 1.57 2000/06/13 05:34:12 deraadt Exp $</small>
d410 1
a410 1

@


1.6
log
@Sync with Badlands Translation CVS. Work by Jufi.
@
text
@a307 1
    Wir arbeiten weiter, um zukünftig auch solche wie diese zu unterstützen:
d309 14
a324 1
    <li><a href="http://www.bluesteelnet.com/product.html">Bluesteelnet 5501</a>
d326 1
a326 1
    <li>vielleicht den
d328 1
a328 1
    <li>und weitere
d331 3
a333 4
    IRE und speziell Bluesteelnet waren bereits so freundlich und haben uns alle
    Informationen gegeben, die wir brauchen, um ihre Hardware zu unterstützen.
    Andere Anbieter sind auf unserer Liste, aber wir konzentrieren uns zunächst
    auf die schnellen und preiswerten Lösungen.
d404 1
a404 1
Originally [OpenBSD: crypto.html,v 1.56 ]
d406 1
a406 1
$Translation: crypto.html,v 1.11 2000/05/11 19:24:38 jufi Exp $
d408 1
a408 1
<small>$OpenBSD: crypto.html,v 1.56 2000/05/09 02:24:35 deraadt Exp $</small
@


1.5
log
@Sync with Badlands Translation CVS. Work by Jufi.
@
text
@d294 1
a294 1
    Karten, die den <a href="http://www.hifn.com/products/7751.htm">HiFn 7751</a>
d393 1
a393 1
Originally [OpenBSD: crypto.html,v 1.55 ]
d395 1
a395 1
$Translation: crypto.html,v 1.10 2000/05/02 17:56:37 jufi Exp $
d397 1
a397 1
<small>$OpenBSD: crypto.html,v 1.55 2000/05/02 10:01:25 deraadt Exp $</small> 
@


1.4
log
@Sync with Badlands Translation CVS. Work by Jufi
@
text
@d83 1
a83 1
Kerberos V Unterstützung wird möglicherweise in 2000 erscheinen, aber
d98 2
a99 2
haben ?  Sie installieren Secure Shell (
<a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ssh>ssh</a>)
d107 2
a108 2
<a href="http://www.openssh.com/">OpenSSH</a> interagiert mit ssh Version 1
und hat viele weitere Features.
d113 1
a113 1
jegliche lizensierte oder patentierte Komponenten stammen aus externen
d117 1
a117 1
wurde um das Protokoll Version 1.5 erweitert.
d120 1
a120 1
beinhaltet Unterstützung für 
d125 1
a125 1
unterstützt Einmal-Passwörter durch 
d131 1
a131 1
Wir haben eine Version mit freier Lizenz genommen und sie OpenBSD-fiziert.
d143 1
a143 1
Aber auf diesem Wege bekommt fast jeder ein eingebautes ssh.
d146 12
d393 1
a393 1
Originally [OpenBSD: crypto.html,v 1.53 ]
d395 1
a395 1
$Translation: crypto.html,v 1.9 2000/04/14 17:15:00 jufi Exp $
d397 1
a397 1
<small>$OpenBSD: crypto.html,v 1.53 2000/04/13 13:10:58 deraadt Exp $</small>
@


1.3
log
@Sync with Badlands Translation CVS. Work by Jufi
@
text
@d36 1
a36 1

d268 69
d381 1
a381 1
Originally [OpenBSD: crypto.html,v 1.50 ]
d383 1
a383 1
$Translation: crypto.html,v 1.8 2000/04/11 18:19:57 jufi Exp $
d385 1
a385 1
$OpenBSD: crypto.html,v 1.50 1999/11/18 00:15:36 provos Exp $
@


1.2
log
@Sync with Badlands Translation CVS. Work by Jufi
@
text
@d20 1
a20 1
ist keine Produkt, sondern ein Prozess !" Es steckt mehr dahinter
d51 1
a51 1
Exports von Kryptologischer Software, und ist sogar noch offener,
d83 1
a83 1
Kerberos V Unterstützung wird möglicherweise in 1999 erscheinen, aber
d143 1
a143 1
Aber auf diesem Wege kriegt fast jeder ein eingebautes ssh.
d154 1
a154 1
<li>Es sollte für einen Aussenstehender unmöglich sein, weitere Zahlen vorauszusagen,
d272 1
a272 1
Natürlich braucht unser Projekt Leutem, die an diesen Systemen arbeiten. 
d314 1
a314 1
$Translation: crypto.html,v 1.7 2000/04/06 19:14:43 jufi Exp $
@


1.1
log
@Extention of German translation: work by Jufi
@
text
@d62 1
a62 1
<a href=../policy.html>frei erhältlich ist und guten Lizenzen unterliegt</a>.
d314 1
a314 1
$Translation: crypto.html,v 1.6 2000/04/03 23:01:36 wim Exp $
@

