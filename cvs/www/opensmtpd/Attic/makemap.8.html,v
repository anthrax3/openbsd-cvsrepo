head	1.5;
access;
symbols
	OpenBSD:1.1.1.1 gilles:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2016.04.20.18.03.43;	author tj;	state dead;
branches;
next	1.4;
commitid	9kFrgi0oGAcQGcEB;

1.4
date	2015.06.24.07.23.27;	author gilles;	state Exp;
branches;
next	1.3;
commitid	7MFeR5qji3YyU6J6;

1.3
date	2013.12.06.10.57.39;	author gilles;	state Exp;
branches;
next	1.2;

1.2
date	2013.03.25.09.15.18;	author gilles;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.08.18.31.28;	author gilles;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.10.08.18.31.28;	author gilles;	state Exp;
branches;
next	;


desc
@@


1.5
log
@move opensmtpd site to css, link to online manpages instead of duplicates,
remove a couple stray files and fix some wording oddities.

ok jung gilles
@
text
@<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<style>
table.head, table.foot { width: 100%; }
td.head-rtitle, td.foot-os { text-align: right; }
td.head-vol { text-align: center; }
table.foot td { width: 50%; }
table.head td { width: 33%; }
div.spacer { margin: 1em 0; }
</style>
<title>
MAKEMAP(8)</title>
</head>
<body>
<div class="mandoc">
<div class="section">
<h1 id="x4e414d45">NAME</h1> <b class="name">makemap</b> &#8212; <span class="desc">create database maps for smtpd</span></div>
<div class="section">
<h1 id="x53594e4f50534953">SYNOPSIS</h1><table class="synopsis">
<col style="width: 7.00ex;"/>
<col/>
<tbody>
<tr>
<td>
makemap</td>
<td>
[<span class="opt"><b class="flag">-o</b> <i class="arg">dbfile</i></span>] [<span class="opt"><b class="flag">-t</b> <i class="arg">type</i></span>] <i class="arg">file</i></td>
</tr>
</tbody>
</table>
</div>
<div class="section">
<h1 id="x4445534352495054494f4e">DESCRIPTION</h1> Maps provide a generic interface for associating textual key to a value. Such associations may be accessed through a plaintext file, database, or DNS. The format of these file types is described below. <b class="name">makemap</b> itself creates the database maps used by keyed map lookups specified in <a class="link-man">smtpd.conf(5)</a>.<div class="spacer">
</div>
<b class="name">makemap</b> reads input from <i class="arg">file</i> and writes data to a file whose name is made by adding a &#8220;.db&#8221; suffix to <i class="arg">file</i>. The current line can be extended over multiple lines using a backslash (&#8216;\&#8217;). Comments can be put anywhere in the file using a hash mark (&#8216;#&#8217;), and extend to the end of the current line. Care should be taken when commenting out multi-line text: the comment is effective until the end of the entire block. In all cases, <b class="name">makemap</b> reads lines consisting of words separated by whitespace. The first word of a line is the database key; the remainder represents the mapped value. The database key and value may optionally be separated by the colon character.<div class="spacer">
</div>
The options are as follows:<dl style="margin-top: 0.00em;margin-bottom: 0.00em;" class="list list-tag">
<dt class="list-tag" style="margin-top: 1.00em;">
<b class="flag">-o</b> <i class="arg">dbfile</i></dt>
<dd class="list-tag" style="margin-left: 6.00ex;">
Write the generated database to <i class="arg">dbfile</i>.</dd>
<dt class="list-tag" style="margin-top: 1.00em;">
<b class="flag">-t</b> <i class="arg">type</i></dt>
<dd class="list-tag" style="margin-left: 6.00ex;">
Specify the format of the resulting map file. The default map format is suitable for storing simple, unstructured, key-to-value string associations. However, if the mapped value has special meaning, as in the case of the virtual domains file, a suitable <i class="arg">type</i> must be provided. The available output types are:<dl style="margin-top: 0.00em;margin-bottom: 0.00em;" class="list list-tag">
<dt class="list-tag" style="margin-top: 1.00em;">
<b class="flag">aliases</b></dt>
<dd class="list-tag" style="margin-left: 7.00ex;">
The mapped value is a comma-separated list of mail destinations. This format can be used for building user aliases and user mappings for virtual domain files.</dd>
<dt class="list-tag" style="margin-top: 1.00em;">
<b class="flag">set</b></dt>
<dd class="list-tag" style="margin-left: 7.00ex;">
There is no mapped value &#8211; a map of this type will only allow for the lookup of keys. This format can be used for building primary domain maps.</dd>
</dl>
</dd>
</dl>
</div>
<div class="section">
<h1 id="x5052494d41525920444f4d41494e53">PRIMARY DOMAINS</h1> Primary domains can be kept in tables. To create a primary domain table, add each primary domain on a single line by itself.<div class="spacer">
</div>
In addition to adding an entry to the primary domain map, one must add a filter rule that accepts mail for the domain map, for example:<div class="spacer">
</div>
<pre style="margin-left: 5.00ex;" class="lit display">
table domains &quot;/etc/mail/domains&quot; 
accept for domain &lt;domains&gt; deliver to mbox</pre>
</div>
<div class="section">
<h1 id="x5649525455414c20444f4d41494e53">VIRTUAL DOMAINS</h1> Virtual domains may also be kept in tables. To create a virtual domain table, add each virtual domain on a single line by itself.<div class="spacer">
</div>
Virtual domains expect a mapping of virtual users to real users in order to determine if a recipient is accepted or not. The mapping format is an extension to <a class="link-man">aliases(5)</a>, which allows the use of &#8220;user@@domain.tld&#8221; to accept user only on the specified domain, &#8220;user&#8221; to accept the user for any of the virtual domains, &#8220;@@domain.tld&#8221; to provide a catch-all for the specified domain and &#8220;@@&#8221; to provide a global catch-all for all domains. <a class="link-man">smtpd(8)</a> will perform the lookups in that specific order.<div class="spacer">
</div>
To create single virtual address, add &#8220;user@@example.com user&#8221; to the users map. To handle all mail destined to any user at example.com, add &#8220;@@example.com user&#8221; to the virtual map.<div class="spacer">
</div>
In addition to adding an entry to the virtual map, one must add a filter rule that accepts mail for virtual domains, for example:<div class="spacer">
</div>
<pre style="margin-left: 5.00ex;" class="lit display">
table vdomains &quot;/etc/mail/vdomains&quot; 
table vusers &quot;/etc/mail/users&quot; 
 
accept for domain &lt;vdomains&gt; virtual &lt;vusers&gt; deliver to mbox 
accept for domain example.org virtual &lt;vusers&gt; deliver to mbox</pre>
</div>
<div class="section">
<h1 id="x46494c4553">FILES</h1><dl style="margin-top: 0.00em;margin-bottom: 0.00em;" class="list list-tag">
<dt class="list-tag" style="margin-top: 0.00em;">
<i class="file">/etc/mail/aliases</i></dt>
<dd class="list-tag" style="margin-left: 20.00ex;">
List of user mail aliases.</dd>
<dt class="list-tag" style="margin-top: 0.00em;">
<i class="file">/etc/mail/secrets</i></dt>
<dd class="list-tag" style="margin-left: 20.00ex;">
List of remote host credentials.</dd>
</dl>
</div>
<div class="section">
<h1 id="x4558495420535441545553">EXIT STATUS</h1> The <b class="utility">makemap</b> utility exits&#160;0 on success, and&#160;&gt;0 if an error occurs.</div>
<div class="section">
<h1 id="x53454520414c534f">SEE ALSO</h1> <a class="link-man">aliases(5)</a>, <a class="link-man">smtpd.conf(5)</a>, <a class="link-man">editmap(8)</a>, <a class="link-man">newaliases(8)</a>, <a class="link-man">smtpd(8)</a></div>
<div class="section">
<h1 id="x484953544f5259">HISTORY</h1> The <b class="name">makemap</b> command first appeared in <span class="unix">OpenBSD&#160;4.6</span> as a replacement for the equivalent command shipped with sendmail.</div>
</div>
</body>
</html>

@


1.4
log
@update
@
text
@@


1.3
log
@update man pages
@
text
@d1 1
a1 1
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
d4 9
a12 2
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="resource-type" content="document">
a17 15
<table summary="Document Header" class="head" width="100%">
<col width="30%">
<col width="30%">
<col width="30%">
<tbody>
<tr>
<td class="head-ltitle">
MAKEMAP(8)</td>
<td class="head-vol" align="center">
OpenBSD System Manager's Manual</td>
<td class="head-rtitle" align="right">
MAKEMAP(8)</td>
</tr>
</tbody>
</table>
d22 2
a23 2
<col style="width: 7.00ex;">
<col>
d29 1
a29 1
&#91;<span class="opt"><b class="flag">&#45;o</b> <i class="arg">dbfile</i></span>&#93; &#91;<span class="opt"><b class="flag">&#45;t</b> <i class="arg">type</i></span>&#93; <i class="arg">file</i></td>
d35 4
a38 2
<h1 id="x4445534352495054494f4e">DESCRIPTION</h1> Maps provide a generic interface for associating textual key to a value. Such associations may be accessed through a plaintext file, database, or DNS. The format of these file types is described below. <b class="name">makemap</b> itself creates the database maps used by keyed map lookups specified in <a class="link-man">smtpd.conf(5)</a>.<p>
<b class="name">makemap</b> reads input from <i class="arg">file</i> and writes data to a file whose name is made by adding a &#8220;.db&#8221; suffix to <i class="arg">file</i>. In all cases, <b class="name">makemap</b> reads lines consisting of words separated by whitespace. The first word of a line is the database key; the remainder represents the mapped value. The database key and value may optionally be separated by the colon character.<p>
d41 1
a41 1
<b class="flag">&#45;o</b> <i class="arg">dbfile</i></dt>
d45 1
a45 1
<b class="flag">&#45;t</b> <i class="arg">type</i></dt>
d61 4
a64 2
<h1 id="x5052494d41525920444f4d41494e53">PRIMARY DOMAINS</h1> Primary domains can be kept in tables. To create a primary domain table, add each primary domain on a single line by itself.<p>
In addition to adding an entry to the primary domain map, one must add a filter rule that accepts mail for the domain map, for example:<p>
d66 1
a66 1
table domains "/etc/mail/domains" 
d70 8
a77 4
<h1 id="x5649525455414c20444f4d41494e53">VIRTUAL DOMAINS</h1> Virtual domains may also be kept in tables. To create a virtual domain table, add each virtual domain on a single line by itself.<p>
Virtual domains expect a mapping of virtual users to real users in order to determine if a recipient is accepted or not. The mapping format is an extension to <a class="link-man">aliases(5)</a>, which allows the use of &#8220;user@@domain.tld&#8221; to accept user only on the specified domain, &#8220;user&#8221; to accept the user for any of the virtual domains, &#8220;@@domain.tld&#8221; to provide a catch-all for the specified domain and &#8220;@@&#8221; to provide a global catch-all for all domains. <a class="link-man">smtpd(8)</a> will perform the lookups in that specific order.<p>
To create single virtual address, add &#8220;user@@example.com user&#8221; to the users map. To handle all mail destined to any user at example.com, add &#8220;@@example.com user&#8221; to the virtual map.<p>
In addition to adding an entry to the virtual map, one must add a filter rule that accepts mail for virtual domains, for example:<p>
d79 2
a80 2
table vdomains "/etc/mail/vdomains" 
table vusers "/etc/mail/users" 
d98 1
a98 1
<h1 id="x4558495420535441545553">EXIT STATUS</h1> The <b class="utility">makemap</b> utility exits 0 on success, and &gt;0 if an error occurs.</div>
a102 12
<table summary="Document Footer" class="foot" width="100%">
<col width="50%">
<col width="50%">
<tbody>
<tr>
<td class="foot-date">
July 19, 2013</td>
<td class="foot-os" align="right">
OpenBSD 5.4</td>
</tr>
</tbody>
</table>
@


1.2
log
@update documentation
@
text
@d109 1
a109 1
January 26, 2013</td>
d111 1
a111 1
OpenBSD 5.2</td>
@


1.1
log
@Initial revision
@
text
@d57 1
a57 1
The mapped value is a comma-separated list of mail destinations. This format can be used for building user aliases and virtual domains files.</dd>
a62 1
<p>
d67 1
a67 1
<h1 id="x5052494d41525920444f4d41494e53">PRIMARY DOMAINS</h1> Primary domains can be kept in maps. To create a primary domain map, add each primary domain on a single line by itself.<p>
d70 2
a71 2
map "primary" { source db "/etc/mail/primary.db" } 
accept for domain map "primary" deliver to mbox</pre>
d74 3
a76 1
<h1 id="x5649525455414c20444f4d41494e53">VIRTUAL DOMAINS</h1> Virtual domains are kept in maps. To add support for a virtual domain, add a domain key &#8220;example.com		whatever&#8221; to the virtual map. To create single virtual address, add &#8220;user@@example.com	user&#8221; to the virtual map. To handle all mail destined to any user at example.com, add &#8220;@@example.com	user&#8221; to the virtual map.<p>
d79 5
a83 2
map "vdomains" { source db "/etc/mail/vdomains.db" } 
accept for virtual "vdomains" deliver to mbox</pre>
a91 4
<i class="file">/etc/mail/virtual</i></dt>
<dd class="list-tag" style="margin-left: 20.00ex;">
List of hosted virtual domains.</dd>
<dt class="list-tag" style="margin-top: 0.00em;">
d109 1
a109 1
October 10, 2011</td>
d111 1
a111 1
OpenBSD 5.1</td>
@


1.1.1.1
log
@opensmtpd.org website
@
text
@@
