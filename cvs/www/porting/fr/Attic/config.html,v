head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2014.04.01.17.23.03;	author deraadt;	state dead;
branches;
next	1.6;

1.6
date	2010.07.30.16.48.34;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2008.03.20.15.57.36;	author saad;	state Exp;
branches;
next	1.4;

1.4
date	2005.07.17.16.06.31;	author saad;	state Exp;
branches;
next	1.3;

1.3
date	2005.01.18.09.55.05;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2004.11.29.20.07.00;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2004.11.28.18.54.11;	author jufi;	state Exp;
branches;
next	;


desc
@@


1.7
log
@more unmaintained transations go away
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="resource-type" content="document">
<meta name="description" content="Porting guide: autoconf">
<meta name="keywords" content="openbsd,ports,autoconf">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 2004 by OpenBSD.">
<title>Manuel du porteur : gérer les fichiers de configuration</title>
</head>
<body>
<img height="30" width="141" src="../../images/smalltitle.gif"
alt="[OpenBSD]">
<h1>Manuel du porteur : gérer les fichiers de configuration</h1>

Les paquets ne devraient installer leurs fichiers que dans
<code>${PREFIX}</code>, qui correspond par défaut à
<code>/usr/local</code>. D'un autre côté, la règle sous OpenBSD est
d'installer la plupart des fichiers de configuration dans
<code>${SYSCONFDIR}</code>, par défaut étant défini sur
<code>/etc</code>.
</p>
<i>Notez qu'il est parfaitement acceptable pour un paquet d'avoir
${PREFIX} et ${SYSCONFDIR} configurés "en dur" : PREFIX et SYSCONFDIR
sont principalement des options de configuration utilisateur influençant
la construction du paquet.</i>
</p>
<h2>Explication de @@sample</h2>
Les "packing-lists" possèdent un mécanisme spécifique nommé
<code>@@sample</code> permettant de gérer les fichiers de configuration :
<ul>
<li>Pendant l'étape de simulation de l'installation, le port installera
    un fichier de configuration exemple comme
    ${PREFIX}/share/examples/PKGNAME/foo.rc.
<li>La "packing-list" devra contenir la ligne <code>@@sample
    ${SYSCONFDIR}/foo.rc</code> juste en-dessous de celle concernant le
    fichier de configuration exemple.
<li>A l'installation, le fichier de configuration exemple sera copié à
    l'emplacement où le véritable fichier de configuration devra se
    trouver.
<li>Lors d'une désinstallation ou de mises à niveau, si un fichier de
    configuration existe déja, il sera comparé au fichier de
    configuration exemple. S'ils diffèrent, l'utilisateur en sera
    informé et pourra choisir de le mettre à jour/remplacer. S'ils sont
    identiques, l'outil d'installation saura qu'il peut procéder à la
    suppression/mise à jour sans aucune précaution supplémentaire.
</ul>
<h2>Autres spécificités de @@sample</h2>
Contrairement aux autres entrées d'une "packing-list", les entrées
<code>@@sample</code> peuvent avoir un chemin absolu.
</p>
Certains gros paquets auront aussi besoin de leur propre répertoire de
configuration, <code>@@sample ${SYSCONFDIR}/directory/</code> sera
capable de gérer cette situation.
</p>
L'utilisation de <code>@@sample directory/</code> pour créer des
répertoires spécifiques à un paquet et ne contenant aucun fichier de
configuration est aussi supportée. <code>@@sample</code> interprète
parfaitement les définitions <code>@@mode</code>, <code>@@owner</code> et
<code>@@group</code>. Ceci peut paraître un peu laborieux car vous aurez
souvent besoin de passer d'un mode par défaut à un mode spécifique au
fichier de configuration et vice-versa.
<h2>Astuces.</h2>
<code>make update-plist</code> est capable de copier
<code>@@sample</code> vers la nouvelle PLIST mais n'est pas capable de
les créer, il faudra donc qu'ils soient définis une première fois.
</p>
Notez la différence entre un fichier de configuration et un fichier de
configuration exemple : le port doit être configuré pour utiliser les
fichiers dans <code>${SYSCONFDIR}</code> ; seule l'installation simulée
doit placer des éléments dans <code>${PREFIX}/share/examples</code>. Une
manière simple de gérer cela est de copier les fichiers avec <code>post-
install</code>.
</p>
Une astuce intéressante fonctionnant la plupart du temps est de regarder
le Makefile du programme et de remplacer le répertoire de configuration
durant la phase de simulation de l'installation grâce à l'utilisation de
<code>FAKE_FLAGS</code> spécifiques, par exemple :
<pre>
FAKE_FLAGS=DESTDIR=${WRKINST}
sysconfdir=${WRKINST}${TRUEPREFIX}/share/examples/PKGNAME
</pre>
Vous devez simplement prendre garde aux programmes qui définissent le
répertoire de configuration dans certains fichiers à l'installation.
<h2>Exemples</h2>
<ul>
<li>Le port security/integrit utilise un dossier de configuration
    contenant plusieurs fichiers. Sa "packing-list" est la suivante :
<pre>
@@comment $OpenBSD: config.html,v 1.6 2010/07/30 16:48:34 ajacoutot Exp $
@@bin bin/i-ls
@@info info/integrit.info
@@man man/man1/i-ls.1
@@man man/man1/i-viewdb.1
@@man man/man1/integrit.1
@@sbin/i-viewdb
@@sbin/integrit
share/doc/integrit/
share/doc/integrit/README
share/doc/integrit/crontab
share/doc/integrit/install_db
share/doc/integrit/integrit_check
share/doc/integrit/viewreport
share/examples/integrit/
@@sample ${SYSCONFDIR}/integrit/
share/examples/integrit/root.conf
@@sample ${SYSCONFDIR}/integrit/root.conf
share/examples/integrit/src.conf
@@sample ${SYSCONFDIR}/integrit/src.conf
share/examples/integrit/usr.conf
@@sample ${SYSCONFDIR}/integrit/usr.conf
</pre>
<li>Le port security/nessus utilise <code>@@sample dir/</code> afin de
    créer des répertoires privés.
<pre>
...
sbin/uninstall-nessus
@@sample ${SYSCONFDIR}/nessus/
@@mode 0700
@@sample /var/nessus/
@@sample /var/nessus/jobs/
@@sample /var/nessus/logs/
@@sample /var/nessus/users/
@@extraunexec rm -fr %D/lib/nessus/plugins/*
@@extraunexec rm -fr %D/nessus
@@extraunexec rm -fr /var/nessus
</pre>
<li>Le port sysutils/nut définit un propriétaire spécifique pour ses
    fichiers de configuration.
<pre>
@@comment $OpenBSD: config.html,v 1.6 2010/07/30 16:48:34 ajacoutot Exp $
@@conflict upsd-*
@@newuser ${NUT_USER}:${NUT_ID}:::UPS User:/var/empty:/sbin/nologin
...
share/examples/nut/
@@sample ${SYSCONFDIR}/nut/
@@owner ${NUT_USER}
share/examples/nut/ups.conf
@@sample ${SYSCONFDIR}/nut/ups.conf
share/examples/nut/upsd.conf
@@mode 600
@@sample ${SYSCONFDIR}/nut/upsd.conf
@@mode
share/examples/nut/upsd.users
@@mode 600
@@sample ${SYSCONFDIR}/nut/upsd.users
@@mode
share/examples/nut/upsmon.conf
@@mode 600
@@sample ${SYSCONFDIR}/nut/upsmon.conf
@@mode
share/examples/nut/upssched.conf
@@sample ${SYSCONFDIR}/nut/upssched.conf
@@mode 700
@@sample /var/db/nut/
@@mode
@@owner
share/ups/
share/ups/cmdvartab
share/ups/driver.list
</pre>
</ul>
  <hr>
  <a href="../../fr/index.html"><img height=24 width=24
  src=../../back.gif border=0 alt=OpenBSD></a>
  <a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: config.html,v 1.3 ]<br>
$Translation: config.html,v 1.6 2010/07/30 03:48:29 benoit Exp $<br>
-->
$OpenBSD: config.html,v 1.6 2010/07/30 16:48:34 ajacoutot Exp $
</small>
</body>
</html>
@


1.6
log
@Sync with Steelix CVS
@
text
@d91 1
a91 1
@@comment $OpenBSD: config.html,v 1.3 2010/07/18 06:24:17 lum Exp $
d132 1
a132 1
@@comment $OpenBSD: config.html,v 1.3 2010/07/18 06:24:17 lum Exp $
d174 1
a174 1
$OpenBSD$
@


1.5
log
@sync with Steelix CVS
@
text
@d91 2
a92 2
@@comment $OpenBSD: config.html,v 1.1 2004/11/27 15:10:35 espie Exp $
bin/i-ls
d97 2
a98 2
sbin/i-viewdb
sbin/integrit
d132 1
a132 1
@@comment $OpenBSD: config.html,v 1.1 2004/11/27 15:10:35 espie Exp $
d163 1
d171 2
a172 2
Originally [OpenBSD: config.html,v 1.2 ]<br>
$Translation: config.html,v 1.5 2008/03/18 15:50:30 ajacoutot Exp $<br>
@


1.4
log
@sync with Steelix CVS
@
text
@d170 2
a171 2
Originally [OpenBSD: config.html,v 1.1 ]<br>
$Translation: config.html,v 1.4 2005/07/16 17:00:38 aanriot Exp $<br>
@


1.3
log
@Sync with Steelix CVS
@
text
@d13 2
a14 1
<img height="30" width="141" src="../../images/smalltitle.gif" alt="[OpenBSD]"> 
d18 10
a27 8
<code>${PREFIX}</code>, qui correspond par défaut à <code>/usr/local</code>.
D'un autre côté, la règle sous OpenBSD est d'installer la plupart des fichiers
de configuration dans <code>${SYSCONFDIR}</code>, à savoir <code>/etc</code> par
défaut.
</p>
<i>Notez qu'il est parfaitement acceptable pour un paquet d'avoir ${PREFIX} et
${SYSCONFDIR} configurés "en dur" : PREFIX et SYSCONFDIR sont principalement des
options de configuration utilisateur influençant la construction du paquet.</i>
d30 2
a31 2
Les "packing-lists" possèdent un mécanisme spécifique nommé <code>@@sample</code>
permettant de gérer les fichiers de configuration :
d34 2
a35 2
un fichier de configuration exemple comme
${PREFIX}/share/examples/PKGNAME/foo.rc.
d37 2
a38 2
${SYSCONFDIR}/foo.rc</code> juste en-dessous de celle concernant le fichier de
configuration exemple.
d40 2
a41 1
l'emplacement où le véritable fichier de configuration devra se trouver.
d43 5
a47 5
configuration existe déja, il sera comparé au fichier de configuration
exemple. S'ils diffèrent, l'utilisateur en sera informé et pourra
choisir de le mettre à jour/remplacer. S'ils sont identiques, l'outil
d'installation saura qu'il peut procéder à la suppression/mise à jour
sans aucune précaution supplémentaire.
d54 2
a55 2
configuration, <code>@@sample ${SYSCONFDIR}/directory/</code> sera capable de
gérer cette situation.
d57 7
a63 6
L'utilisation de <code>@@sample directory/</code> pour créer des répertoires
spécifiques à un paquet et ne contenant aucun fichier de configuration est aussi
supportée. <code>@@sample</code> interprète parfaitement les définitions
<code>@@mode</code>, <code>@@owner</code> et <code>@@group</code>. Ceci peut
paraître un peu laborieux car vous aurez souvent besoin de passer d'un mode par
défaut à un mode spécifique au fichier de configuration et vice-versa.
d65 3
a67 3
<code>make update-plist</code> est capable de copier <code>@@sample</code> vers
la nouvelle PLIST mais n'est pas capable de les créer, il faudra donc qu'ils
soient définis une première fois.
d70 13
a82 10
configuration exemple : le port doit être configuré pour utiliser les fichiers
dans <code>${SYSCONFDIR}</code> ; seule l'installation simulée doit placer des
éléments dans <code>${PREFIX}/share/examples</code>. Une manière simple de gérer
cela est de copier les fichiers avec <code>post-install</code>.
</p>
Une astuce intéressante fonctionnant la plupart du temps est de regarder le
Makefile du programme et de remplacer le répertoire de configuration durant la
phase de simulation de l'installation grâce à l'utilisation de <code>FAKE_FLAGS</code>
spécifiques, par exemple :
<pre>FAKE_FLAGS=DESTDIR=${WRKINST} sysconfdir=${WRKINST}${TRUEPREFIX}/share/examples/PKGNAME
d84 2
a85 2
Vous devez simplement prendre garde aux programmes qui définissent le répertoire de
configuration dans certains fichiers à l'installation.
d88 2
a89 2
<li>Le port security/integrit utilise un dossier de configuration contenant
plusieurs fichiers. Sa "packing-list" est la suivante :
d114 2
a115 2
<li>Le port security/nessus utilise <code>@@sample dir/</code> afin de créer des
répertoires privés.
d129 2
a130 2
<li>Le port sysutils/nut définit un propriétaire spécifique pour ses fichiers de
configuration.
d164 2
a165 1
  <a href="../../fr/index.html"><img height=24 width=24 src=../../back.gif border=0 alt=OpenBSD></a> 
d171 1
a171 1
$Translation: config.html,v 1.3 2005/01/17 21:35:35 aanriot Exp $<br>
@


1.2
log
@Sync with Steelix CVS
@
text
@d160 1
d162 2
a163 1
$Translation: config.html,v 1.2 2004/11/28 21:25:49 aanriot Exp $<br>
@


1.1
log
@Sync with Steelix CVS
@
text
@d10 1
a10 1
<title>Manuel du porteur: gérer les fichiers de configuration</title>
d14 1
a14 1
<h1>Manuel du porteur: gérer les fichiers de configuration</h1>
d16 1
a16 1
Les paquets ne devraient installer leurs fichiers que sous
d19 1
a19 1
de configuration sous <code>${SYSCONFDIR}</code>, à savoir <code>/etc</code> par
d23 1
a23 1
${SYSCONFDIR} configurés "en dur": PREFIX et SYSCONFDIR sont principalement des
d28 1
a28 1
permettant de gérer les fichiers de configuration:
d30 3
a32 2
<li>Pendant la phase d'installation "fake", le port installera un fichier de
configuration exemple comme ${PREFIX}/share/examples/PKGNAME/foo.rc.
d38 6
a43 5
<li>Au moment d'une désinstallation et d'une mise à jour, si un fichier de
configuration existe déja, il sera comparé au fichier de configuration exemple.
S'ils diffèrent, l'utilisateur en sera informé lui laissant le choix de le
mettre à jour/remplacer lui-même. S'ils sont identiques, l'outil d'installation
saura qu'il pourra procéder à la suppression/mise à jour sans autre précaution.
d46 1
a46 1
Au contraire des autres entrées d'une "packing-list", les entrées
d55 1
a55 1
supporté. <code>@@sample</code> interprète parfaitement les définitions
d58 1
a58 1
défaut à un mode spécifique à un fichier de configuration et vice-versa.
d65 3
a67 3
configuration exemple: le port doit être configuré pour utiliser les fichiers
sous <code>${SYSCONFDIR}</code> ; seule l'installation "fake" doit placer des
éléments sous <code>${PREFIX}/share/examples</code>. Une manière simple de gérer
d71 3
a73 3
Makefile du program et de remplacer le répertoire de configuration durant la
phase d'installation "fake" grâce à l'utilisation de <code>FAKE_FLAGS</code>
spécifiques, par exemple:
d76 1
a76 1
Vous devez juste faire attention aux programmes qui définissent le répertoire de
d81 1
a81 1
plusieurs fichiers. Sa "packing-list" est la suivante:
d156 1
a156 1
  <a href="../../index.html"><img height=24 width=24 src=../../back.gif border=0 alt=OpenBSD></a> 
d161 1
a161 1
$Translation: config.html,v 1.1 2004/11/28 17:44:38 ajacoutot Exp $<br>
@

