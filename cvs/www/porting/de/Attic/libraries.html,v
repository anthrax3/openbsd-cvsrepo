head	1.16;
access;
symbols;
locks; strict;
comment	@# @;


1.16
date	2014.04.01.17.23.03;	author deraadt;	state dead;
branches;
next	1.15;

1.15
date	2013.12.18.19.08.58;	author ajacoutot;	state Exp;
branches;
next	1.14;

1.14
date	2013.12.12.19.32.51;	author ajacoutot;	state Exp;
branches;
next	1.13;

1.13
date	2013.03.25.14.51.17;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2012.10.16.16.57.25;	author ajacoutot;	state Exp;
branches;
next	1.11;

1.11
date	2012.04.16.00.11.30;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2008.03.09.13.37.14;	author tobias;	state Exp;
branches;
next	1.9;

1.9
date	2007.11.17.12.49.53;	author tobias;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.05.06.32.13;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2007.04.26.03.08.09;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.14.19.01.55;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2006.11.10.10.44.45;	author jufi;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.25.16.49.44;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.06.17.23.13;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.20.07.29.59;	author saad;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.04.20.39.32;	author jufi;	state Exp;
branches;
next	;


desc
@@


1.16
log
@more unmaintained transations go away
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
 <head>
  <meta http-equiv="Content-Type"
        content="text/html; charset=iso-8859-1">
  <meta http-equiv="refresh"
        content="8; url=../../faq/ports/specialtopics.html#SharedLibs">
  <script type="text/javascript">
  <!--
        window.location.href="../../faq/ports/specialtopics.html#SharedLibs"
  -->
  </script>
  <title>OpenBSD Porter's Handbook</title>
  <link rev="made" HREF="mailto:www@@openbsd.org">
 </head>
 <body text="#000000" bgcolor="#FFFFFF" link="#23238E">
<a href="../../de/index.html"><img alt="[OpenBSD]" height="30" width="141" src="../../images/smalltitle.gif" border="0"></a>

  <p>
   If you are not redirected automatically, follow the link
   to <a href='../../faq/ports/specialtopics.html#SharedLibs'>http://www.openbsd.org/faq/ports/specialtopics.html#SharedLibs</a>

  <hr>
  <a href="../../de/index.html"><img height=24 width=24 src=../../back.gif border=0 alt=OpenBSD></a> 
  <a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: libraries.html,v 1.10 ]<br>
$Translation: libraries.html,v 1.18 2013/12/17 09:44:39 steffen Exp $<br>
-->
$OpenBSD: libraries.html,v 1.15 2013/12/18 19:08:58 ajacoutot Exp $
</small>
 </body>
</html>
@


1.15
log
@Sync with Steelix CVS
@
text
@d33 1
a33 1
$OpenBSD$
@


1.14
log
@Sync with Steelix CVS
@
text
@a27 1
<br>
d31 1
a31 1
$Translation: libraries.html,v 1.17 2013/12/12 19:16:54 steffen Exp $<br>
@


1.13
log
@Sync with Steelix CVS
@
text
@d1 2
a2 1
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
d4 15
a18 99
<head>
<meta name="generator" content="HTML Tidy, see www.w3.org">
<meta http-equiv="Content-Type" content=
"text/html; charset=iso-8859-1">
<meta name="resource-type" content="document">
<meta name="description" content=
"Shared libraries in the ports tree">
<meta name="keywords" content="openbsd,ports,library">
<meta name="distribution" content="global">
<meta name="copyright" content=
"This document copyright 2001 by OpenBSD.">
<title>Mit Shared Librarys im OpenBSD-Ports-Tree umgehen</title>
</head>
<body text="Black" bgcolor="White" link="#23238E">
<img height="30" width="141" src="../../images/smalltitle.gif" alt=
"[OpenBSD]">

<h1>Wie man mit Shared Librarys im Ports-Tree umgeht</h1>

<h2>Die Shared-Librarys-Nummerierungsregel verstehen</h2>
Shared Librarys sind aus einer Reihe Gründe knifflig.
Du musst das Bibliotheks-Namensschema verstehen:
<code>libfoo.so.major.minor</code>.
<p>
Wenn du ein Programm verlinkst, bettet der Linker <code>ld</code> diese
Information in die erzeugte Binary. Du kannst sie mit <code>ldd</code>
sehen.
Später, wenn du das Programm ausführst, verwendet der dynamische Linker
<code>ld.so</code> diese Information, um die richtige dynamische
Bibliothek zu finden:
<ul>
	<li>Eine Bibliothek mit exakt der gleichen Hauptnummer (major
number) wird erfordert.
	<li>Eine Bibliothek mit einer gleichen oder höheren
Unternummer (minor number) wird erfordert.
</ul>
Dies heißt also, dass <strong>alle</strong> Bibliotheken mit der
gleichen Hauptnummer und einer gleichen oder höheren Unternummer
<strong>der binären API entsprechen müssen, die das Programm
erwartet</strong>. Wenn sie es nicht tun, ist dein Port kaputt (broken).
Insbesondere wird er kaputt gehen, wenn Benutzer versuchen, ihr
System zu aktualisieren.
<p>
Die Regeln für Shared Librarys sind recht einfach.
<ul>
	<li>Wenn du Funktionen zu der Bibliothek hinzufügst, musst du
die Unternummer der Bibliothek umstellen: ein Programm, das solche
Funktionen benötigt, hat keine andere Möglichkeit als durch das
explizite Anfragen für zumindest diese Version herauszufinden, ob die
Funktion vorliegt.
	<li>Die Hauptnummer <strong>muss umgestellt werden</strong>,
wenn die existierende API sich ändert (das heißt, wenn irgendeine
Funktionssignatur geändert wurde, wenn gültige Aufruf-Sequenzen nicht
länger durchführbar sind oder wenn ein Typ sich auf eine inkompatible
Art und Weise geändert hat).
	<li>Dies beinhaltet das Entfernen von alten Funktionen.
Jegliche Funktionsentfernung sollte das Umstellen der Hauptnummer zur
Folge haben.
</ul>
<p>
Ab und zu kann es vorkommen, dass eine Bibliothek in mehrere Dateien
geschrieben wird und dass interne Funktionen sichtbar sind, damit
sie zwischen jenen Dateien kommunizieren können. Solche Funktionsnamen
beginnen üblicherweise mit einem Unterstrich und sind kein
ordentlicher Teil der API.
<p>
Bedenke, dass das Bibliotheks-Namensschema allgegenwärtig auf
OpenBSD-Plattformen ist, gleich, ob sie ELF oder a.out verwenden.

<h2>Ports-,builds' optimieren, um richtige Namen zu erzielen</h2>
So manche Ports benötigen Optimierungen, um Shared Librarys
überhaupt korrekt erzeugt werden zu können. Denke daran, dass das
Erzeugen von Shared Librarys mit
<code>gcc -shared -fpic|-fPIC -o libfoo.so.4.5 obj1 obj2</code>
erfolgen sollte.
<p>
Zu versuchen, die Bibliothek nach der Erzeugung umzubenennen, um so
die Versionsnummer anzupassen, funktioniert nicht: ELF-Bibliotheken
verwende einige extra ,magic', um den bibliotheksinternen Namen zu
setzen, sodass du sie mit der korrekten Version gleich beim ersten
Mal richtig linken musst.
<p>
Auf der anderen Seite musst du bedenken, dass du Makefile-Variablen
von der Kommandozeile aus überschreiben kannst, indem du
<code>MAKE_FLAGS</code> in dem Makefile des Ports verwendest.
Dies ist recht nützlich, zum Beispiel, in den libtool-basierten
Ports, welche eine solche Versionsvariable für jede einzelne
Bibliothek, die sie erzeugen, benutzen.
<p>
Libtool-basierte Pakete werden automatisch von der im OpenBSD-Baum integrierten
Version von libtool gehandhabt,
wodurch die meisten Details automatisch abgearbeitet werden:
<ul>
	<li>libtool achtet auf <code>SHARED_LIBS</code> und ersetzt
	automatisch Versionsnummern.
	<li>libtool erzeugt eine Logdatei während der Erzeugung der
	Shared Librarys in <code>${WRKBUILD}/shared_libs.log</code>,
	die direkt in das Makefile des Ports eingebunden werden kann.
</ul>
d20 3
a22 17
<h2>Versuche alle, vom Benutzer sichtbaren, Bibliotheken in
/usr/local/lib abzulegen</h2>
Als Regel gilt, dass das Beauftragen des Benutzers, Verzeichnisse zu
ihrem ldconfig-Pfad anzuhängen, eine schlechte Idee ist: alle
Shared Librarys, die direkt zu Programmen verlinkt sind, sollten
in /usr/local/lib auftauchen. Trotzdem ist es möglich, einen
symbolischen Link zur tatsächlichen Bibliothek zu verwenden. Du
solltest die Bibliotheks-,lookup'-Regeln verstehen:
<ul>
	<li>Während der Erzeugungsphase verwendet <code>ld</code> die
<code>-L</code>-Optionen, um einen Pfad einzurichten, in dem nach
Bibliotheken gesucht wird. Es hört auf zu suchen, sobald es eine
Bibliothek findet, die die Voraussetzungen erfüllt.
	<li>Zur Laufzeit verwendet <code>ld.so</code> die
Informationen, die durch <code>ldconfig</code> ge,cached' wurden, um
die benötigte Bibliothek zu finden.
</ul>
a23 92
So, lass uns annehmen, du hast zwei Ports, die zwei Hauptversionen
einer gegebenen Bibliothek anbieten, sagen wir <code>qt.1.45</code>
und <code>qt.2.21</code>. Da beide Ports gleichzeitig installiert
werden können, stelle sicher, dass ein gegebenes Programm gegen
qt.1-Bibliothek gelinkt wird, welche als
<code>/usr/local/lib/qt/libqt.so.1.45</code> vorliegt, und Programme
unter Verwendung von <code>ld -o program program.o -L/usr/local/lib/qt
-lqt</code> gelinkt werden. Ähnlich soll ein Programm, das mit qt.2
linkt, die <code>/usr/local/lib/qt2/libqt.so.2.31</code>-Datei
nutzen und mit <code>ld -o program program.o -L/usr/local/lib/qt2
-lqt</code> gelinkt werden.
<p>
Um diese Bibliotheken zur Laufzeit aufzulösen, wurden eine Verknüpfung
mit dem Namen <code>/usr/local/lib/libqt.so.1.45</code> und eine
Verknüpfung namens <code>/usr/local/lib/libqt.so.2.31</code>
bereitgestellt. Dies ist genug, um <code>ld.so</code> glücklich zu
machen.
<p>
Es ist ein Fehler, ein Programm unter Verwendung von qt1 mit
<code>ld -o program program.o -L/usr/local/lib -lqt</code> zu linken.
Dieser Code nimmt an, dass <code>qt.2.31</code> nicht installiert sei,
was eine Fehlannahme ist.
<p>
Solche Tricks sind nur notwendig, wenn der seltene Fall von sehr
weitverbreiteten Bibliotheken vorliegt, bei denen Übergangszeiten
zwischen Hauptversionen bereitgestellt werden müssen. Generell gilt,
dass es genug ist, sicherzustellen, dass eine Bibliothek in
<code>/usr/local/lib</code> auftaucht.
<h2>Bibliotheksabhängigkeiten richtig schreiben</h2>
Der neue Abhängigkeitscode (dependency code) benötigt nicht komplette
Bibliotheksabhängigkeiten.
Du musst <code>make lib-depends-check</code> oder
<code>make port-lib-depends-check</code> benutzen, um zu verifizieren,
dass eine Portierung alle Bibliotheken angibt, die sie benötigt.
Du spezifizierst sie mittels LIB_DEPENDS/WANTLIB wie folgt:
<pre>
        LIB_DEPENDS += x11/gtk+
        WANTLIB += gtk.&gt;=1.2,gdk.&gt;=1.2
</pre>
<p>
Es ist kein Fehler, statische Bibliotheken in einer WANTLIB-Zeile
ebenfalls anzugeben.
WANTLIB wird während der Erzeugungsphase
des Pakets vollständig verarbeitet: das resultierende Package wird
eine Bibliotheksabhängigkeitsinformation als Zeilen für
<code>ld.so</code> eingebettet haben, die die tatsächliche
Haupt.Unter-Nummer beinhalten, die beim Erzeugen verwendet wurden und
keine Einträge für statische Bibliotheken.
<p>
Du musst ebenfalls RUN_DEPENDS bereitstellen, wenn ein Ports
irgendetwas ordentlich benötigt, das über Bibliotheken hinausgeht. Das
erlaubt dem Port auf Architekturen ordnungsgemäß erzeugt werden zu
können, die keine Shared Librarys bereitstellen.
<p>
In der Tat ist das Bereitstellen von LIB_DEPENDS-Zeilen für statische
Bibliotheken eine gute Idee:
das vereinfacht einen Portupgrade, wenn eine gegebene Abhängigkeit
von einer statischen Bibliothek zu einer Shared Library wechselt.
<p>
WANTLIB-Zeilen müssen die gleichen Pfade angeben, die für
<code>ld</code> genutzt werden.
Um bei obigen Beispiel zu bleiben, würde eine standardmäßige qt2
Abhängigkeitsregel so lauten:
<code>WANTLIB += lib/qt2/qt.=2</code>.
Dies erlaubt
dem Abhängigkeitsüberprüfungscode das richtige zu tun, wenn er mehreren
Versionen der gleichen Bibliothek begegnet.
<h2>Ports korrekt aktualisieren</h2>
So, wenn du einen Port aktualisierst oder hinzufügst, der Shared
Librarys benötigt, müssen einige Details richtig durchgeführt
werden.
<ul>
	<li>Stelle sicher, dass die Haupt.Unter-Nummern der Shared
	Librarys korrekt sind.
	<li>Überprüfe alle Ports, die auf deinem Port aufbauen. Stelle
sicher, dass sie korrekt erzeugt werden, wenn sich deiner ändert.
Benachrichtige die entsprechenden Maintainer über dein Update, sodass
sie sicherstellen können, dass ihre Ports weiterhin korrekt laufen.
	<li>Du musst eventuell WANTLIB und LIB_DEPENDS von abhängigen Ports
anpassen. Wenn du neue Shared Librarys einführst, achte auf
BUILD_DEPENDS, die in LIB_DEPENDS umgewandelt werden müssen.
	<li>Wann auch immer du einen neuen Port einführst, solltest
du sicherstellen, dass du keine Bibliothek erstellst, die mit einer
existierenden in Konflikt gerät:
Bibliotheken von zwei Ports mit dem gleichen Namen sind tödlich, da
ihr Versions-Nummerierungsschemas keine Möglichkeit haben, zuzutreffen.
Du solltest solche Situationen immer mit dem Softwareautoren lösen
(zum Beispiel, eine Bibliothek, die den Namen libnet trägt, ist definitiv
schlecht benannt).
	<li>Lies <a href="update.html">die Updaterichtlinien der
Ports</a> für weiterführende Details.
</ul>
d25 1
a25 1
  <a href="../../de/index.html"><img height=24 width=24 src=../../back.gif border=0 alt=OpenBSD></a>
d27 3
a29 1
<br><small>
d31 2
a32 2
Originally [OpenBSD: libraries.html,v 1.9 ]<br>
$Translation: libraries.html,v 1.16 2013/03/24 16:38:13 steffen Exp $<br>
@


1.12
log
@Sync with Steelix CVS
@
text
@d92 3
a94 4
Libtool-basierte Ports kann man am besten verarbeiten, wenn
<code>USE_LIBTOOL=Yes</code> gesetzt wurde. Hiermit wird die
Portstree-Version von libtool aktiviert, wodurch die meisten
Details automatisch abgearbeitet werden:
d218 2
a219 2
Originally [OpenBSD: libraries.html,v 1.8 ]<br>
$Translation: libraries.html,v 1.15 2012/10/16 10:32:49 steffen Exp $<br>
@


1.11
log
@Sync with Steelix CVS
@
text
@d158 1
a158 1
        LIB_DEPENDS += ::x11/gtk+
d219 2
a220 2
Originally [OpenBSD: libraries.html,v 1.7 ]<br>
$Translation: libraries.html,v 1.14 2012/04/14 15:58:18 steffen Exp $<br>
@


1.10
log
@Sync with Steelix CVS
@
text
@d142 1
a142 1
Dieser Code nimmt an, dass <code>qt.2.21</code> nicht installiert sei,
d152 9
a160 5
Bibliotheksabhängigkeiten. Du musst <code>make lib-depends-check</code>
verwenden, um sicherzustellen, dass ein Port alle Bibliotheken
angibt, auf die er aufbaut. Du trennst Bibliotheksangaben mit Kommata,
wie hier:
<code>LIB_DEPENDS=gtk.1.2,gdk.1.2::x11/gtk+</code>.
d162 4
a165 3
Es ist kein Fehler, statische Bibliotheken in einer LIB_DEPENDS-Zeile
ebenfalls anzugeben. LIB_DEPENDS werden während der Erzeugungsphase
des Packages vollständig verarbeitet: das resultierende Package wird
d176 1
a176 1
In der Tat ist das Bereitstellen einer LIB_DEPENDS-Zeile für statische
d181 6
a186 5
LIB_DEPENDS-Zeilen müssen die gleichen Pfade angeben, die für
<code>ld</code> genutzt werden. Zum Beispiel basiert das standardmäßige
qt2 auf einem Fragment, das sagt:
<code>LIB_DEPENDS+=lib/qt2/qt.2::x11/qt2</code>, sodass die
Bibliotheksabhängigkeitszeile korrekt aufgelöst wird. Dies erlaubt
d200 1
a200 1
	<li>Du musst eventuell LIB_DEPENDS von abhängigen Ports
d219 2
a220 2
Originally [OpenBSD: libraries.html,v 1.6 ]<br>
$Translation: libraries.html,v 1.13 2008/03/04 23:03:22 paldium Exp $<br>
@


1.9
log
@Sync with Steelix CVS
@
text
@d151 1
a151 1
Der neue Abhängigkeitscode (depedency code) benötigt nicht komplette
d214 1
a214 1
$Translation: libraries.html,v 1.12 2007/11/03 10:45:53 paldium Exp $<br>
@


1.8
log
@Sync with steelix translation CVS
@
text
@d23 1
a23 1
Shared Librarys sind aus einer Reihe an Gründen knifflig.
d63 1
a63 1
Ab und zu kann es vorkommen, dass eine Bibliothek in mehere Dateien
d66 1
a66 1
beginnen überlicherweise mit einem Unterstrich und sind kein
d82 1
a82 1
setzen, so dass du sie mit der korrekten Version gleich beim ersten
d87 1
a87 1
<code>MAKE_FLAGS</code> in der Makefile des Ports verwendest.
d101 1
a101 1
	die direkt in die Makefile des Ports eingebunden werden kann.
d125 1
a125 1
werden können, stelle sicher, dass ein gegebenens Programm gegen
d129 1
a129 1
-lqt</code> gelinkt werden. Ähnlich soll ein Program, dass mit qt.2
d134 1
a134 1
Um diese Bibliohteken zur Laufzeit aufzulösen, wurden eine Verknüpfung
d179 1
a179 1
<code>LIB_DEPENDS+=lib/qt2/qt.2::x11/qt2</code>, so dass die
d192 1
a192 1
Benachrichtige die entsprechenden Maintainer über dein Update, so dass
d202 1
a202 1
Du solltest solche Situationen immer mit dem Softwareauthoren lösen
d214 1
a214 1
$Translation: libraries.html,v 1.10 2007/05/04 13:15:36 paldium Exp $<br>
@


1.7
log
@Sync with steelix translation CVS
@
text
@d14 1
a14 1
<title>Mit ,shared libraries' im OpenBSD-Ports-Tree umgehen</title>
d20 1
a20 1
<h1>Wie man mit ,shared libraries' im Ports-Tree umgeht</h1>
d22 2
a23 2
<h2>Die ,shared libraries'-Nummerierungsregel verstehen</h2>
,Shared libraries' sind aus einer Reihe an Gründen knifflig.
d46 1
a46 1
Die Regeln für ,shared libraries' sind recht einfach.
d73 1
a73 1
So manche Ports benötigen Optimierungen, um ,shared libraries'
d75 1
a75 1
Erzeugen von ,shared libraries' mit
d100 1
a100 1
	»shared libraries« in <code>${WRKBUILD}/shared_libs.log</code>,
d108 1
a108 1
,shared libraries', die direkt zu Programmen verlinkt sind, sollten
d169 1
a169 1
können, die keine ,shared libraries' bereitstellen.
d174 1
a174 1
von einer statischen Bibliothek zu einer ,shared library' wechselt.
d184 2
a185 2
So, wenn du einen Port aktualisierst oder hinzufügst, der ,shared
libraries' benötigt, müssen einige Details richtig durchgeführt
d188 2
a189 2
	<li>Stelle sicher, dass die Haupt.Unter-Nummern der ,shared
libraries' korrekt sind.
d195 1
a195 1
anpassen. Wenn du neue ,shared libraries' einführst, achte auf
d205 1
a205 1
	<li>Lies <a href="../update.html">die Updaterichtlinien der
d214 1
a214 1
$Translation: libraries.html,v 1.8 2007/04/25 15:41:16 paldium Exp $<br>
@


1.6
log
@sync with steelix translation CVS
@
text
@d18 1
a18 1
"[OpenBSD]"> 
d209 1
a209 1
  <a href="../../de/index.html"><img height=24 width=24 src=../../back.gif border=0 alt=OpenBSD></a> 
d214 1
a214 1
$Translation: libraries.html,v 1.7 2007/02/10 14:16:56 paldium Exp $<br>
@


1.5
log
@sync with steelix translation CVS
@
text
@d205 1
a205 1
	<li>Lies <a href"../update.html2>die Updaterichtlinien der
d209 1
a209 1
  <a href="../../index.html"><img height=24 width=24 src=../../back.gif border=0 alt=OpenBSD></a> 
d214 1
a214 1
$Translation: libraries.html,v 1.6 2006/11/09 18:19:37 paldium Exp $<br>
@


1.4
log
@sync with steelix translation CVS
@
text
@d9 2
a10 2
"Quick guide to writing ports">
<meta name="keywords" content="openbsd,ports">
d91 12
d205 2
d213 2
a214 2
Originally [OpenBSD: libraries.html,v 1.5 ]<br>
$Translation: libraries.html,v 1.5 2006/04/24 17:44:33 paldium Exp $<br>
@


1.3
log
@sync with steelix translation CVS
@
text
@a4 1
<meta http-equiv="Content-Language" content="de">
d9 1
a9 1
"Referenzanleitung zum Schreiben von Ports">
d13 1
a13 1
"Dieses Dokument unterliegt dem Copyright von OpenBSD 2001.">
d199 2
a200 2
Originally [OpenBSD: libraries.html,v 1.5 ]
$Translation: libraries.html,v 1.4 2006/04/06 13:05:12 paldium Exp $
@


1.2
log
@sync with Steelix CVS
@
text
@d54 5
a58 5
	<li>Wenn die existierende API sich ändert, das heißt, wenn
irgendeine Funktionssignatur geändert wurde oder wenn gültige
Aufruf-Sequenzen nicht länger durchführbar sind, wenn sich ein Typ
sich auf eine inkompatible Art und Weise geändert hat,
<strong>muss</strong> die Hauptnummer <strong>umgestellt werden</strong>.
d201 1
a201 1
$Translation: libraries.html,v 1.3 2005/09/14 16:16:41 paldium Exp $
@


1.1
log
@Sync with Steelix CVS
@
text
@d5 1
a7 1
<meta http-equiv="Content-Language" content="de">
d10 1
a10 1
"Quick guide to writing ports">
d14 1
a14 1
"This document copyright 2001 by OpenBSD.">
d201 1
a201 1
$Translation: libraries.html,v 1.2 2005/02/03 11:46:28 paldium Exp $
@

