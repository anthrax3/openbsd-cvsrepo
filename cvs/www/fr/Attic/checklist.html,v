head	1.35;
access;
symbols;
locks; strict;
comment	@# @;


1.35
date	2011.01.29.15.46.37;	author ajacoutot;	state dead;
branches;
next	1.34;

1.34
date	2008.12.01.07.52.53;	author tobias;	state Exp;
branches;
next	1.33;

1.33
date	2008.01.19.17.39.44;	author saad;	state Exp;
branches;
next	1.32;

1.32
date	2007.11.12.20.26.06;	author saad;	state Exp;
branches;
next	1.31;

1.31
date	2007.06.18.13.02.50;	author jufi;	state Exp;
branches;
next	1.30;

1.30
date	2007.06.06.14.14.47;	author jufi;	state Exp;
branches;
next	1.29;

1.29
date	2007.05.23.09.40.57;	author jufi;	state Exp;
branches;
next	1.28;

1.28
date	2007.03.15.19.40.30;	author jufi;	state Exp;
branches;
next	1.27;

1.27
date	2007.01.01.10.53.28;	author jufi;	state Exp;
branches;
next	1.26;

1.26
date	2006.11.06.10.18.40;	author jufi;	state Exp;
branches;
next	1.25;

1.25
date	2006.06.26.18.32.12;	author jufi;	state Exp;
branches;
next	1.24;

1.24
date	2006.05.02.17.09.34;	author jufi;	state Exp;
branches;
next	1.23;

1.23
date	2006.04.25.16.49.43;	author jufi;	state Exp;
branches;
next	1.22;

1.22
date	2006.03.17.05.36.04;	author saad;	state Exp;
branches;
next	1.21;

1.21
date	2005.10.31.12.06.17;	author saad;	state Exp;
branches;
next	1.20;

1.20
date	2005.07.15.04.26.12;	author saad;	state Exp;
branches;
next	1.19;

1.19
date	2005.06.10.14.25.28;	author saad;	state Exp;
branches;
next	1.18;

1.18
date	2005.04.10.10.12.53;	author jufi;	state Exp;
branches;
next	1.17;

1.17
date	2005.03.26.12.02.06;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2005.03.13.23.29.39;	author saad;	state Exp;
branches;
next	1.15;

1.15
date	2005.03.12.18.07.30;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2005.02.18.16.11.58;	author saad;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.18.09.53.24;	author jufi;	state Exp;
branches;
next	1.12;

1.12
date	2004.11.25.19.33.11;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2004.11.24.13.08.26;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2004.11.07.13.21.10;	author saad;	state Exp;
branches;
next	1.9;

1.9
date	2004.03.26.08.40.13;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2004.02.15.17.57.25;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2004.01.03.19.43.20;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.13.13.38.33;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2003.11.18.22.54.54;	author horacio;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.05.11.15.45;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.19.11.53.11;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.02.14.49.59;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.30.09.42.29;	author jufi;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Sync with Steelix CVS
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="resource-type" content="document">
<meta name="description" CONTENT="How to make/update an OpenBSD port.">
<meta name="keywords" content="openbsd,ports">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 1998-2007 by OpenBSD.">

<title>Portage logiciel sous OpenBSD</title>
</head>
 
<body text="#000000" bgcolor="#FFFFFF" link="#23238E">
<a href="index.html"><img alt="[OpenBSD]" height="30" width="141" src="../images/smalltitle.gif" border="0"></a>

<h2><font color="#e00000">Points à vérifier pour chaque
    portage logiciel sous OpenBSD</font></h2>

Ce document décrit comment concevoir ou mettre à jour un
"port". Il s'agit essentiellement d'une liste utile à
consulter à chaque fois, mais elle n'est ni complete, ni parfaite. Nous
vous invitons donc à proposer vos commentaires et questions à l'adresse
suivante : <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>.

<hr>
<ol>

<li> 
Si vous voulez prendre en charge la gestion d'un portage logiciel, inscrivez-
vous via :
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org.</a>
<ul><li>
Cette liste est consacrée à toutes les discussions et votre inscription
y est fortement recommandée.
<li>
La lecture des envois précédents sur cette liste est essentiel : des
annonces ou explications cruciales s'y trouvent.
<li> 
Vous pourrez y cotoyer des personnes expérimentées dans ce domaine. Ils
pourront vous offrir des conseils ou tester vos portages.
</ul> 

<br><li>
Prendre en charge la gestion d'un portage signifie <strong>beaucoup plus
</strong>que de proposer des logiciels. Pour chaque logiciel, vous vous
engagez à maintenir vos portages à jour et répondre aux questions
des utilisateurs qui les utiliseront : comment activer ou désactiver
certaines fonctionnalités, etc.

<br><br><li>
Votre décision prise, vous devez obtenir une copie locale sur votre
disque de l'arbre des ports à l'aide de cvs. Comment faire ? Vous
trouverez toutes les informations nécessaires dans la page consacrée à
<a href="anoncvs.html">AnonCVS</a>.

<br><br><li> 
Choisissez dans quel dossier sera placé votre portage et créez
l'infrastructure de base requise. Utilisez le fichier Makefile modèle
<code>/usr/ports/infrastructure/templates/Makefile.template</code>.
NEED_VERSION est considéré comme obsolète et vous ne devez plus
l'utiliser pour les nouveaux portages : mettez à jour votre arbre local
des ports, ceci incluant bsd.port.mk.

<ul><li> 
Créez le répertoire <code>pkg</code>. 
<li> 
Créez des fichiers vides <code>pkg/DESCR, pkg/PLIST</code>. 
</ul>

<br><li> 
Ajoutez les portions "fetch" (de récupération) au Makefile.
<ul><li> 
Modifiez EXTRACT_SUFX si le suffixe des fichiers n'est pas .tar.gz.
D'autres exemples sont .tar.Z ou .tgz.
<li> 
Modifiez DISTNAME : cette variable locale doit contenir le nom du
fichier, sans son suffixe. Par exemple si votre portage logiciel est
foo-1.0.tar.gz alors DISTNAME doit contenir la chaîne : foo-1.0.
<li> 
Modifiez MASTER_SITES pour contenir l'URL des répertoires qui
contiennent un exemplaire du fichier portant les sources. Par exemple il
peut s'agir de l'adresse ftp://ftp.openbsd.org/pub/OpenBSD/distfiles/.
<strong>N'oubliez pas la barre finale de l'adresse !</strong> Essayez
d'avoir au moins trois sites différents pour chacun de vos portages. Le
site le plus fiable et rapide doit se trouver en première position.
<li> 
Gardez à l'esprit que les variables locales suivantes sont utilisées
pour identifier le fichier à récupérer et dans cet ordre :
${MASTER_SITES}${DISTNAME}${EXTRACT_SUFX}. Toutes ces variables seront
utilisées. Par conséquence, il ne faut pas que DISTNAME contienne le nom
complet du fichier.
<li> 
Vous pourrez vérifier que vous avez fixé correctement ces variables en
utilisant la commande :
<b>make fetch-all</b>.
</ul>
<p> 
Certains portages logiciels sont complexes et des outils supplémentaires
sont à votre disposition pour simplifier votre tâche :
<ul><li> 
Vous pouvez utiliser la variable locale PATCHFILES. Cette dernière doit
contenir une liste de patches proposés par l'auteur du logiciel (et non
OpenBSD). On y trouve généralement des correctifs de fiabilité ou de
sécurité.
<li> 
Si vos ports sont disponibles au sein de sites miroirs majeurs tels que
GNU, SunSite ou CPAN, nous proposons une liste de sites au sein du
fichier /usr/ports/infrastructure/templates/network.conf.template.
Modifiez MASTER_SITES par : ${MASTER_SITE_GNU} ou
${MASTER_SITE_SUNSITE}, etc. Pour simplifier ce processus, utilisez la
construction ${MASTER_SITE_FOO:=subdir/} pour rajouter le sous-
répertoire contenant la distribution.
<li> 
Chaque portage contient une version spécifique d'un logiciel. Une fois
les fichiers récupérés, on vérifie un hachage pour s'assurer de leur
intégrité et la comparaison sera effectuée à partir des hachages que
vous aurez calculés. Pour éviter toute confusion, DISTFILES et
PATCHFILES doivent avoir des numéros de version clairement identifiables
: ne récupérez pas de fichier foo-latest.tar.gz s'il existe un lien vers
foo-1.0.5.tar.gz. Si c'est nécessaire, contacter l'auteur du logiciel
afin de lui demander conseil et expliquez poliment pourquoi vous devez
pouvoir identifier clairement un numéro de version dans le fichier
contenant les sources de votre portage en devenir.
<li> 
Si votre portage logiciel requiert plus de 5 DISTFILES + PATCHFILES pour
fonctionner, utilisez la variable locale DIST_SUBDIR pour éviter de
polluer et de rendre complexe la lecture de /usr/ports/distfiles par les
utilisateurs (et déterminer qui fait partie de quoi).
<li> 
DIST_SUBDIR ne doit pas référencer de numéros de version. Lorsque
le portage sera mis à jour vers une nouvelle version, seuls les fichiers
contenant les sources doivent être modifiés : si DIST_SUBDIR est
modifié, tous les fichiers seront à nouveau récupérés. Il faut penser à
l'utilisateur qui doit maintenir son système ou tout du moins pouvoir en
consulter l'état sans s'égarer.
<li> 
A la fois DISTFILES et PATCHFILES ne proviennent pas nécessairement des
mêmes sites MASTER_SITES. Il est possible de définir des sites
supplémentaires à l'aide des variables locales MASTER_SITES0 à
MASTER_SITES9. Il vous suffit d'écrire DISTFILES=foo-1.0.5.tar.gz:5 pour
récupérer le fichier depuis le site contenu dans MASTER_SITES5 (notez le
":5").
<li> 
Certains portages n'ont pas besoin de récupérer tous les fichiers en
toute circonstance. Par exemple, les options de compilation de certains
portages logiciels définissent ce qui doit être compilé ou non, des
sortes de "modules" optionnels. Si une fonctionalité présente
dans un module n'est pas utilisée, alors il n'est pas nécessaire de
récupérer tous les fichiers mais uniquement ceux qui sont requis.
Certains composants sont également spécifiques à certaines architectures
matérielles : tous ces fichiers optionnels doivent être référencés dans
la variable locale SUPDISTFILES. Lorsque des cibles de compilation
telles que makesum ou mirror-distfiles sont utilisées, le système des
Ports veillera à récupérer tous les fichiers optionnels même si ceux-ci
ne sont pas toujours requis par l'utilisateur classique.
</ul>

<br><li> 
Créez des hachages dans <i>distinfo</i> en tapant <b>make makesum</b>.
Vous devez ensuite vérifier que ces hachages sont valides en
tapant <b>make checksum</b>.
<ul><li> 
Dans de rares cas, il n'est pas possible de disposer de hachages pour
tester l'intégrité des sources. Il est de votre
responsabilité d'essayer de trouver par tous les moyens possibles
un site d'archive fiable. Communiquer avec l'auteur ou les auteurs du
logiciel et la ou les personnes en charge des sites contenant les
archives du logiciel est fondamental et recommandé. Dans le pire des
cas, vous pourrez utiliser la variable locale IGNOREFILES pour marquer
les fichiers pour lesquels il n'est pas possible de disposer de hachages
d'intégrité fiables.
<li> 
Tous les fichiers de DISTFILES seront traités durant la phase
d'extraction. EXTRACT_ONLY peut-être utilisé pour limiter l'extraction
aux seuls fichiers requis (peut être vide). L'usage habituel de cette
variable est de personnaliser l'extraction : par exemple, si certains
DISTFILES doivent subir un traitement particulier, il seront retirés de
EXTRACT_ONLY et gérés manuellement après la phase d'extraction. Pour des
raisons historiques, make extract fixe le répertoire de travail pendant
l'extraction des fichiers. Ainsi, il est très inhabituel de fournir des
chemins de pré-extraction et post-extraction différents (et c'est même
un comportement suspect, indiquant un camouflage important au sein du
portage).
<li> 
Les correctifs qui demandent un traitement particulier doivent être
mentionnés dans DISTFILES et retirés de EXTRACT_ONLY, pour des raisons
historiques.
</ul>

<br><li>
Testez l'extraction du portage à l'aide de la commande <b>make
extract</b>. Vous devez vérifier avec soin où se trouve la base des
sources. Il s'agit normalement de <i>w-
${PKGNAME}${FLAVOR_EXT}/${DISTNAME}</i>. Vous aurez peut-être besoin de
modifier la variable WRKDIST du Makefile si cette base de sources est
différente.

<br><br><li>
Lisez la documentation d'installation et notez que la construction du
port doit être complétée et doit prendre en compte toute option spéciale
requise.

<br><br><li>
Maintenant vous devez prendre le temps de considérer sérieusement et
avec un grand soin les licences (ou la licence) qui couvre votre portage
logiciel. Certains logiciels peuvent être redistribués librement, mais
pas tous. Afin de vous aider, vous devez répondre à quatre questions. Il
s'agit des variables PERMIT_* que vous trouverez au sein du fichier
Makefile.

<ul><li>
PERMIT_PACKAGE_CDROM indique si le portage peut être distribué sur
support CD-Rom.
<li>
PERMIT_PACKAGE_FTP indique si le portage peut être placé sur des sites
FTP.
<li>
PERMIT_DISTFILES_CDROM indique si nous avons le droit de placer en
miroir les distfiles sur support CD-Rom.
<li>
PERMIT_DISTFILES_FTP indique si nous avons le droit de placer les
distfiles en miroir sur des sites FTP.
</ul>
<p>
A chaque fois que l'un de ces usages est autorisé, indiquez
"Yes". Si ce n'est pas le cas, vous devez expliquer pourquoi
dans une chaîne commentaire. Soyez attentif (attentive) aux
conditions spéciales qui sont imposées après l'installation du
logiciel. Par exemple, une série de logiciels impose qu'un exemplaire de
leur licence soit installée et mentionnée à l'utilisateur. Dans ce cas,
nous vous recommandons de mettre la licence dans
<code>/usr/local/share/doc/&lt;name&gt;/</code>.
<p>
En plus des valeurs PERMIT_*, mettez un indicateur de license tel que
<code># License</code> au dessus de ces valeurs en commentaire. Ainsi,
nous saurons pourquoi les valeurs PERMIT_* sont positionnées de cette
manière.

<br><br><li>
Ajoutez les options de configuration au Makefile et créez un script de
configuration au besoin.
<ul><li>
Vous pouvez ajouter un script de configuration de votre portage nommé
`configure' et le situer dans un répertoire <code>scripts/</code>. Ce
script sera exécuté avant toute configuration spécifiée par la variable
locale CONFIGURE_STYLE.
<li>
Si le configure GNU est utilisé, vous devriez utiliser ./configure
--help afin de déterminer quelles options sont disponibles.
<li>
Tout ce que vous pourriez être amené à modifier peut être modifié en
utilisant le drapeau de configuration -option dans le paramètre
CONFIGURE_ARGS du fichier Makefile.
<li>
Utilisez CONFIGURE_ARGS+= pour rajouter une ou plusieurs options à cette
variable locale. Si vous utilisez CONFIGURE_ARGS= vous risquez d'écraser
tout contenu préalable.
</ul>

<br><li>
Essayez de construire le portage logiciel à l'aide de la commande
<b>make build</b>.
<ul><li>
Si vous avez de la chance, tout sera construit sans la moindre erreur
(bonne chance !)
<li>
Si vous obtenez une erreur, vous devrez générer un ou plusieur patch qui
seront utiliés par votre portage, afin de permettre sa compilation et
installation sous OpenBSD. Déterminez ce qui doit être modifé, et créez
un patch.
<li>
Les correctifs doivent toujours s'appliquer depuis la base ${WRKDIST}.
<li>
Le moyen le plus facile de vérifier que le correctif fonctionne est de
tout "nettoyer" à l'aide de <b>make clean patch</b>. Cette
commande va nettoyer le répertoire de travail de tout fichier, faire à
nouveau l'extraction et appliquer votre correctif.
</ul>

<br><li>
Commencez un cycle de <b>make build</b>, puis produisez un patch (ou
utilisez <b>make update-patches</b>) puis <b>make clean patch</b>.

<ul><li>
Les correctifs doivent être placés dans <i>patches/</i> et doivent être
nommés patch-* où vous remplacerez * par quelque chose de
compréhensible. Nous vous recommandons de nommer vos patch patch-
FILENAME où FILENAME est le nom du fichier qui sera modifié par le
correctif. (<tt>make update-patches</tt> le fait automatiquement pour
vous)
<li>
Appliquer PATCHFILES est la première étape du stade des patch. Vous
pouvez l'invoquer séparément à l'aide de make distpatch, une cible utile
pour les porteurs d'applications. Vous pouvez ignorer cette étape si
vous n'avez pas fixé de valeur à cette variable.
<li>
Chaque fichier de patch ne doit modifier qu'un seul fichier à la fois.
S'il-vous-plaît.
<li>
Utilisez <b>make update-patches</b> pour générer les correctifs.
<li> 
Tous les correctifs DOIVENT être relatifs à ${WRKDIST}.
<li> 
Vérifiez que les correctifs <strong>NE CONTIENNENT PAS </strong>de tags qui
risquent d'être modifiés par cvs. Si c'est le cas, vos correctifs ne
pourront plus s'appliquer après une mise à jour via cvs. Vous pouvez
vérifier les changements potentiels à l'aide de -kk pour l'éviter.
<li> 
Ecrivez une petite note explicative au début du fichier contenant le
correctif décrivant le role de ce dernier (non obligatoire).
<li> 
<b>Veuillez fournir un exemplaire </b>de vos correctifs à l'auteur du
logiciel.
</ul>
<br><li>
Essayez de paramétrer <code>SEPARATE_BUILD</code>. 
<ul><li>
Si le portage peut construire des fichiers objets en-dehors de l'arbre
des sources, cela est préférable et permet de conserver l'arbre des
sources dans un état plus "propre" (de nombreux programmes qui
utilisent <code>CONFIGURE_STYLE=gnu</code> le peuvent) et cela simplifie
en outre la gestion de l'arbre de sources sur plusieurs architectures.
<li>
Ceci peut vous épargner des efforts et vous permettre de relancer
facilement un cycle de construction du portage depuis le
<code>configure</code>.
</ul>

<br><li>
Parcourez avec attention la sortie obtenue (s'il y en a) et modifiez
toute option utile dans le Makefile. Pour répéter la commande utilisez
`<b>make clean configure</b>'.
<p>
Note: vérifiez que les fichiers dépendants de l'hôte soient placés soit
dans <i>/etc</i> ou <i>/etc/&lt;name&gt;</i>, mais <strong>NE REMPLACEZ
NI NE MODIFIEZ JAMAIS</strong> de fichiers existants dans <i>/etc</i>.
Il vaut mieux placer ces fichiers dans
<i>/usr/local/share/&lt;name&gt;</i> puis copiez vers <i>/etc</i> ou
<i>/etc/&lt;name&gt;</i> seulement si les fichiers n'existent pas. Si
les fichiers existent, affichez un message et indiquez à l'utilisateur
du système quels fichiers doivent être modifiés. Cela permet également
de garantir que les fichiers seront inclus dans le paquetage puisque
tout ce qui se trouve dans <i>/usr/local</i> sera inclus dans PLIST. Une
fois un paquetage installé, le contenu de <code>pkg/MESSAGE</code> sera
affiché et le cycle de construction du paquetage sera terminé.

<p>
OpenBSD situe les fichiers comme suit : 
<pre>
   exécutables utilisateur :                                 /usr/local/bin
   exécutables de l'administrateur :                         /usr/local/sbin
   programmes exécutables :                                  /usr/local/libexec
   bibliothèques :                                              /usr/local/lib
   données indépendantes de l'architecture :                 /usr/local/lib/&lt;nom&gt;
   fichiers inclus installés :                               /usr/local/include ou /usr/local/include/&lt;nom&gt;

   données spécifiques à la machine :                        /etc ou /etc/&lt;nom&gt;
   état local :                                              /var/run
   fichiers contenant les scores des jeux :                  /var/games
   fichiers info GNU :                                       /usr/local/info
   pages man :                                               /usr/local/man/...
   données indépendantes de l'architecture en lecture seule :/usr/local/share/&lt;nom&gt;
   documentations diverses :                                 /usr/local/share/doc/&lt;nom&gt;
</pre>

<li>
Commencez un cycle de compilations jusqu'à ce que le portage soit
terminé. Patchez (voir ci-dessus), puis clean et make jusqu'à la
production du portage. Vous devez éliminer tous les "warning"
obtenus en particulier ceux en rapports avec la sécurité du code
produit.

<br><br><li>
Contrôlez la sémantique de SEPARATE_BUILD. Vous ne devez le faire que
si votre portage utilise la variable locale SEPARATE_BUILD. Idéalement,
le portage ne doit pas modifier de fichiers dans ${WRKSRC} <b>après
l'application de votre patch</b>. Vous pouvez le vérifier en retirant
vos droits d'écriture à cette étape sur ${WRKSRC}. Ensuite vous pouvez
utiliser <code>SEPARATE_BUILD=concurrent</code> -- et vérifier qu'une
autre personne peut, sur une autre architecture, obtenir la même
compilation. Sinon, utilisez <code>SEPARATE_BUILD=simple</code> -- si la
construction du portage sur plusieurs architectures peut provoquer des
problèmes, à mesure que certains fichiers seront régénérés à certains
moments.

<br><br><li>
Ajoutez une ligne <i>COMMENT</i> dans le Makefile. COMMENT est une
<strong>COURTE </strong>description du portage (au maximum 60 caractères).
Vous ne <strong>DEVEZ PAS INCLURE </strong>le nom du paquetage dans la
description ou son numéro de version. Vous ne devez <strong>PAS</strong> faire
débuter cette ligne de commentaire par un caractère en majuscule sauf si la
signification sémantique doit être sans aucune ambiguïté et <strong>NE TERMINEZ
PAS CETTE LIGNE </strong>par un point. <strong>EN AUCUN CAS VOUS NE DEVEZ
COMMENCER PAR UN ARTICLE INDEFINI COMME 'un' OU 'une' ; retirez tout article au
début.</strong>

<br><br><li>
Editez <i>pkg/DESCR</i> et <i>pkg/PLIST</i>.
<ul><li>
DESCR est une description plus étendue du portage. Il peut s'agir d'un
ou plusieurs paragraphes expliquant de manière consise en quoi consiste
le logiciel. Nous vous invitons à terminer chaque ligne après 72
caractères ce que vous pouvez faire après l'écriture de ce fichier en
utilisant la commande suivante : fmt -w 72
<li>
PLIST doit rester vide pour l'instant. 
</ul>

<br><li>
Si l'application a besoin de créer un utilisateur ou un groupe,
choisissez le plus petit identifiant libre dans
<code>/usr/ports/infrastructure/db/user.list</code> afin de l'utiliser
pour votre port et soyez certain que celui-ci soit ajouté à ce même
fichier lors de son entrée dans l'arbre.

<br><br><li>
Installez l'application avec <b>make fake</b>. Les librairies ne
devraient jamais faire l'objet d'un "strip". Les exécutables subissent
un "strip" par défaut; ce comportement est dicté par
<code>${INSTALL_STRIP}</code>. <code>${INSTALL_PROGRAM}</code> respecte
cette variable automatiquement. Ceci est préférable à une application
inconditionnelle de "strip" (à l'aide d'une cible "install-strip" ou en
exécutant "strip" à partir du Makefile par exemple). Vous pouvez
utiliser <code>file</code> afin de déterminer si un binaire à fait
l'objet d'un "strip" ou pas.

<br><br><li>
<strong>Vérifier une nouvelle fois et avec le plus grand soin que votre
portage ne contient pas de trous de sécurité potentiels</strong>. Les
programmes qui fonctionnent en setuid où qui accèdent au réseau doivent
faire l'objet d'un audit complet et de grand soin. Nous vous invitons à
étudier nos <a href="porting.html#Security">recommandations quant à
la sécurité</a> pour mener à bien cette étape très importante. Vous
devez tout enregistrer et étudier en ce qui concerne tout changement, et
l'inscrire au sein du fichier <code>/SECURITY</code>. Ce fichier doit
lister avec précision tout problème de sécurité potentiel introduit par
votre portage, avec les correctifs qui accompagnent les programmes afin
que quiconque qui prenne votre portage en main puisse savoir ce qu'il
reste à vérifier. Par exemple :
<pre>
      &#36;OpenBSD&#36;

      ${WRKDIR}/receiver.c
         l'appel de la fonction mktemp (fonction wrapper à
         do_mktemp) me semble incorrecte.

      Ce serveur utilise une grande quantité de fonctions
      strlcpy/strlcat/snprintf.
</pre>

<br><br><li>
Soyez certain que votre répertoire <code>/etc/mtree</code> est bien à
jour (la prochaine étape utilise mtree afin de supprimer les répertoires
existants des fichiers PLIST générés). Souvenez-vous qu'une <code>mise à
jour</code> ne touche pas <code>/etc</code>...
<br><br><li>
Créez le fichier pkg/PLIST. Une fois l'installation complète, utilisez
la commande pour développeurs <b>make plist</b> qui permet de générer le
fichier PLIST au sein du répertoire <i>pkg</i>. Ce fichier est le
candidat pour toute création de liste de paquetages.
<p>
Lisez attentivement le fichier `PLIST' et vérifiez que tout a bien été installé
à l'endroit approprié. Tout ce qui n'a pas été installé peut être ajouté avec une
règle `post-install' dans le Makefile du port.
<p>
Les portages qui installent des bibliothèques partagées auront un fichier
supplémentaire, nommé PFRAG.shared.
<ul><li>
PLIST décrit les fichiers indiquant pour chaque architecture si les
bibliothèques partagées sont ou non supportées.
<li>
PFRAG.shared ne décrit que les fichiers qui sont installés de manière
additionnelle sur les architectures qui supportent les bibliothèques
partagées.
<li>
PFRAG.noshared ne décrit que les fichiers qui sont installés en
supplément sur les architectures qui ne supportent pas les bibliothèques
partagées.
</ul>

<br><br><li>
Vérification de la dépendance envers des bibliothèques partagées.
Lancez <code>make port-lib-depends-check</code> et ajoutez chaque
annotation à <code>LIB_DEPENDS</code> ou <code>WANTLIB</code> jusqu'à ce
que cette commande se termine sans erreur.
Vous devriez lire <a href="../porting/fr/update.html">le guide de mise à jour</a>
afin de comprendre pourquoi cela est important.
<br><br><li>
Si vous avez ajouté une entrée dans <code>LIB_DEPENDS</code>, relancez
<b>make plist</b>. En effet, il est possible que certains répertoires
n'ont plus besoin d'être référencés dans la PLIST s'ils sont installés
par une dépendance.
<br><br><li>
Testez le paquetage lui-même. Après l'installation du portage, la
commande <code>make package</code> est utilisée pour créer un paquetage.
Pour tester le paquetage, utilisez d'abord la commande
<code>pkg_add</code> puis utilisez <code>pkg_delete</code>.
<br><br><li>
Vérifiez les dépendances. Utilisez vos logs pour vérifier que le port a
bien détecté les dépandances mentionnées dans DEPENDS, ni plus ni moins.
Vérifiez qu'il n'y a pas de de dépendances cachées. Par exemple, il
pourrait y avoir des éléments détectés suite à l'installation de
quelques ports auparavant).
<br><br><li>
Vérifiez les dépendances relatives à des libraries partagées. Utilisez
pour cela la commande <code>make lib-depends-check</code> et ajoutez
toutes les
annotations <code>LIB_DEPENDS</code> et <code>WANTLIB</code> afin
qu'aucune erreur ne soit retournée (utilisez <code>make
clean=package</code> afin de supprimer l'ancien paquetage après avoir mis
à jour le Makefile relatif au port).
Pour comprendre pourquoi c'est si important, veuillez consulter
<a href="../porting/fr/update.html">les conseils de mise à jour</a>
<br><br><li>
Exécutez les tests de régression et vérifiez qu'ils se déroulent
correctement. Positionnez <code>NO_REGRESS=Yes</code> pour un port si ce
dernier ne possède pas d'infrastructure de test. Notez qu'il ne faut
pas positionner <code>NO_REGRESS</code> pour un port qui a une
infrastructure de régression vide.

<br><br><li>
Envoyez un email à l'adresse <a
href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> avec une courte
note indiquant vos commentaires et les tests menés. Attachez le
port/patch à cet email et envoyez-le (les archives des listes ne
contiennent que le courrier seul).
<p>
Essayez de faire tester votre portage sur le plus grand nombre de
plates-formes possibles.
<ul><li>
Les systèmes AMD64 Opteron sont excellents car ils sont rapides et parce
que <code>sizeof(int) != sizeof(long)</code> sur cette plate-forme.
<li>
Les Sun SPARC et UltraSPARC sont aussi d'excellentes plates-formes de test
car elles sont faciles à trouver, et parce que l'ordre des octets est
inverse à celui de la plate-forme i386; si vous développez sur SPARC,
vous devriez évidemment tester le code sur i386.
</ul>

<br><li>
Intégrez toutes les informations obtenues que vous obtiendrez d'autres
testeurs. Testez à nouveau sur votre plate-forme. Ensuite, répondez à
toute personne et proposez leurs votre nouveau portage.

<br><br><li>
Enfin, incorporez votre logiciel dans l'arbre des "ports" d'OpenBSD. Si
vous ne disposez pas de droits d'écriture CVS, demandez à quelqu'un qui
en dispose sur <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>
de le faire pour vous.

<br><br><li>
Si vous êtes un développeur disposant d'un accès CVS, insérez votre
portage logiciel. Avant d'importer, vérifiez que des utilisateurs
n'ont pas été ajouté à <code>/usr/ports/infrastructure/db/user.list</code>
depuis que le port a été crée. Nous préférons l'utilisation de "import" 
pour importer votre nouveau port, plutôt que d'ajouter des centaines 
(ou plus) de fichiers de manière individuelle. Import utilise des 
numéros de version de type "branche vendeur" comme 1.1.1.1 mais ne 
vous inquiétez pas à ce sujet ! :-) Si vous modifiez un fichier de manière
spécifique (édition puis cvs commit), la nouvelle version sera alors
1.2.
<p>
En résumé, l'importation sera utilisée à la création du portage
logiciel. A partir de ce stade, "cvs add" et "cvs
rm" seront utilisés pour ajouter ou retirer des fichiers, tandis
que le cycle classique d'édition puis de commit sera utilisé. Vous
pouvez utiliser quelque chose comme :
<pre>
$ cd kaffe1
$ make clean    # évitez d'envoyer vos fichiers de travail dans le CVS !
$ cvs -d cvs.openbsd.org:/cvs import -m 'kaffe port' ports/lang/kaffe1 \
        <i>VotreNom</i> VotreNom<i>_YYYY-MMM-DD</i>
</pre>
<ul><li>
-d cvs.openbsd.org:/cvs indique où se trouve le cvs. Vous pouvez
l'ignorer si vous avez une variable locale CVSROOT définie.
<li>
-m 'kaffe port' est votre message de login. Vous pouvez indiquer ce que
vous voulez
<li>
ports/lang/kaffe1 est le chemin relatif où votre portage sera placé par
rapport au /cvs
<li>
<i>VotreNom</i> (remplacé par votre nom de login) est le 'tag
   vendeur'. Vous êtes le vendeur puisque vous l'importez.

<li>
<i>VotreNom_YYYY-MMM-DD</i> (e.g., ian_2000-Jan-01) est le 'tag de
   distribution vendeur'. Valeur informative.
</ul>
<br>
Comme exemple réel, voici la sortie obtenue par la mise en place d'un
portage que nous avons réalisé le 8 septembre 1998 :
<pre>
$ cd kaffe1
$ make clean >/dev/null
$ cvs import -m 'kaffe1.0(==JDK1.1) port' ports/lang/kaffe1 ian ian_1998-Sep-
08 ian@@cvs.openbsd.org's password: (caché, évidemment)
I ports/lang/kaffe1/CVS
I ports/lang/kaffe1/files/CVS
I ports/lang/kaffe1/pkg/CVS
N ports/lang/kaffe1/Makefile
cvs server: Importing /cvs/ports/lang/kaffe1/files
N ports/lang/kaffe1/files/md5
cvs server: Importing /cvs/ports/lang/kaffe1/pkg
N ports/lang/kaffe1/pkg/COMMENT
N ports/lang/kaffe1/pkg/DESCR
N ports/lang/kaffe1/pkg/PLIST

No conflicts created by this import
$ 
</pre>

<li>
Enfin, ajoutez une ligne d'entrée pour le nouveau portage dans le
Makefile du répertoire parent; par exemple si nous ajoutons le portage
de ports/lang/kaffe1, nous l'ajoutons également au fichier
ports/lang/Makefile.
N'oubliez pas d'ajouter tout changement fait à
<code>/usr/ports/infrastructure/db/user.list</code>.

<br><br><li>
Vous devez maintenir le portage ! Si jamais un problème survient
ou si une nouvelle version paraît etc. vous devez tout faire pour
maintenir votre portage à jour. En d'autres termes, cycle de
construction du portage, mise à jour, nouveau cycle de construction,
etc.

<br><br><li>
Lors de la mise à jour d'un portage, n'oubliez pas de traiter les
dépendances ! Vous ne devez pas provoquer un dysfonctionnement en
modifiant votre portage, car d'autres logiciels peuvent en dépendre ! En
cas de problème, si votre portage demande la mise à jour d'autres
portages sous la charge d'autres personnes, contactez ces derniers. De
même, surveillez tout portage pouvant affecter les votres et préparez
vous à des mises à jour sans être toujours prévenu(e) à l'avance.
</ol>

Enfin, nous tenons à vous remercier pour tous les efforts que cela
réprésente et que vous acceptez de prendre en charge pour améliorer
l'arbre des "ports" d'OpenBSD qui sans tous ces efforts
n'existerait pas : merci !
<hr>
<a href="porting.html"><img height="24" width="24" src="../back.gif"
border="0" alt="Porting"></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: checklist.html,v 1.69 ]<br>
$Translation: checklist.html,v 1.37 2008/11/26 21:00:21 benoit Exp $<br>
-->
$OpenBSD: checklist.html,v 1.34 2008/12/01 07:52:53 tobias Exp $
</small>
</body>
</html>
@


1.34
log
@Sync with Steelix CVS
@
text
@d654 1
a654 1
$OpenBSD$
@


1.33
log
@Sync with Steelix CVS
@
text
@d547 1
a547 1
Enfin, incorporez votre logiciel dans l'abre des "ports" d'OpenBSD. Si
d554 7
a560 5
portage logiciel. Nous préférons l'utilisation de "import" pour importer
votre nouveau port, plutôt que d'ajouter des centaines (ou plus) de
fichiers de manière individuelle. Import utilise des numéros de version
de type "branche vendeur" comme 1.1.1.1 mais ne vous inquiétez
pas à ce sujet ! :-) Si vous modifiez un fichier de manière
d620 2
d651 2
a652 2
Originally [OpenBSD: checklist.html,v 1.68 ]<br>
$Translation: checklist.html,v 1.36 2008/01/14 15:11:40 saad Exp $<br>
@


1.32
log
@Sync with Steelix CVS
@
text
@d418 9
a426 13
Installez l'application en utilisant la commande <b>make install</b>. Si
votre portage logiciel utilise des bibliothèques dynamiques, vérifiez leurs
tables de symboles à l'aide de la commande <code>nm</code>, car certains
logiciels ne les référencent pas correctement, ce qui va provoquer le
dysfonctionnement du logiciel après que le binaire ait fait l'objet d'un
strip (alors qu'il fonctionnait parfaitmenent avant le strip).
Toutefois, les binaires DEVRAIENT faire l'application d'un strip avant
leur installation; utilisez la commande <code>file</code> pour
déterminer si le binaire a fait ou non l'objet d'un strip. Si le portage
contient déjà des instructions pour réaliser un strip du binaire avant
son installation (par exemple 'install-strip') utilisez ce dernier; dans
le cas contraire, ajoutez cette option dans le Makefile afin de rendre
l'application d'un strip sur les binaires possibles.
d647 2
a648 2
Originally [OpenBSD: checklist.html,v 1.66 ]<br>
$Translation: checklist.html,v 1.35 2007/11/03 10:58:41 ajacoutot Exp $<br>
@


1.31
log
@Sycn with steelix translation CVS
@
text
@d468 1
a468 1
à la bonne location. Tout ce qui n'a pas été installé peut être ajouté avec une
d652 1
a652 1
$Translation: checklist.html,v 1.34 2007/06/15 15:22:06 ajacoutot Exp $<br>
@


1.30
log
@sync with steelix translation CVS
@
text
@d491 1
a491 1
Vous devriez lire <a href="../porting/update.html">le guide de mise à jour</a>
d518 1
a518 1
<a href="../porting/update.html">les conseils de mise à jour</a>
d652 1
a652 1
$Translation: checklist.html,v 1.33 2007/06/05 11:12:39 ajacoutot Exp $<br>
@


1.29
log
@Sycn with steelix translation CVS
@
text
@d456 6
a461 1
<li>
d487 12
d651 2
a652 2
Originally [OpenBSD: checklist.html,v 1.65 ]<br>
$Translation: checklist.html,v 1.31 2007/05/21 10:34:20 ajacoutot Exp $<br>
@


1.28
log
@sync with steelix translation CVS
@
text
@d512 3
a514 2
note indiquant vos commentaires et les tests menés. Attachez le portage
à cet email et envoyez-le.
d634 2
a635 2
Originally [OpenBSD: checklist.html,v 1.64 ]<br>
$Translation: checklist.html,v 1.30 2007/03/15 14:00:11 ajacoutot Exp $<br>
@


1.27
log
@sync with steelix translation CVS
@
text
@d9 1
a9 1
<meta name="copyright" content="This document copyright 1998-2004 by OpenBSD.">
d633 2
a634 2
Originally [OpenBSD: checklist.html,v 1.63 ]<br>
$Translation: checklist.html,v 1.29 2007/01/01 10:31:38 ajacoutot Exp $<br>
@


1.26
log
@sync with steelix translation CVS
@
text
@d633 2
a634 2
Originally [OpenBSD: checklist.html,v 1.62 ]<br>
$Translation: checklist.html,v 1.28 2006/11/04 18:02:22 saad Exp $<br>
@


1.25
log
@sync with steelix translation CVS
@
text
@d498 1
a498 1
clean=package</code> afin de supprimer l'ancien paquetage après avoir mise
d500 2
d633 2
a634 2
Originally [OpenBSD: checklist.html,v 1.61 ]<br>
$Translation: checklist.html,v 1.27 2006/06/26 12:54:48 ajacoutot Exp $<br>
@


1.24
log
@sync with steelix translation CVS
@
text
@d498 1
a498 1
clean=package</code> afin de supprimer l'ancien package après avoir mise
d632 1
a632 1
$Translation: checklist.html,v 1.26 2006/05/02 10:00:49 ajacoutot Exp $<br>
@


1.23
log
@sync with steelix translation CVS
@
text
@d517 1
a517 1
que <code>sizeof(int) != sizeof(long)</code> sur cette plateforme.
d521 1
a521 1
inverse à celui de la plateforme i386; si vous développez sur SPARC,
d527 1
a527 1
testeurs. Testez à nouveau sur votre plateforme. Ensuite, répondez à
d632 1
a632 1
$Translation: checklist.html,v 1.25 2006/04/25 13:32:41 ajacoutot Exp $<br>
@


1.22
log
@sync with Steelix CVS
@
text
@d354 1
a354 1
   librairies :                                              /usr/local/lib
d419 1
a419 1
votre portage logiciel utilise des librairies dynamiques, vérifiez leurs
d466 1
a466 1
Les portages qui installent des librairies partagées auront un fichier
d470 1
a470 1
librairies partagées sont ou non supportées.
d473 1
a473 1
additionnelle sur les architectures qui supportent les librairies
d477 1
a477 1
supplément sur les architectures qui ne supportent pas les librairies
d632 1
a632 1
$Translation: checklist.html,v 1.24 2006/03/16 15:09:32 ajacoutot Exp $<br>
@


1.21
log
@sync with Steelix CVS
@
text
@d45 3
a47 3
Prendre en charge la gestion d'un portage signifie <b>beaucoup plus
</b>que de proposer des logiciels. Pour chaque logiciel, vous vous
engagez à maintenir vos portages <b>à jour</b> et répondre aux questions
d53 1
a53 1
disque de l'arbre des ports à l'aide de <b>cvs</b>. Comment faire ? Vous
d61 1
a61 1
NEED_VERSION est considéré comme <b>obsolète</b> et vous ne devez plus
d118 1
a118 1
<b>vous </b>aurez calculés. Pour éviter toute confusion, DISTFILES et
d131 1
a131 1
DIST_SUBDIR ne <b>doit pas </b>référencer de numéros de version. Lorsque
d161 1
a161 1
Vous <b>devez </b>ensuite vérifier que ces hachages sont valides en
d166 1
a166 1
<b>responsabilité </b>d'essayer de trouver par tous les moyens possibles
d228 2
a229 2
dans une chaîne commentaire. Soyez <b>attentif (attentive) </b>aux
conditions spéciales qui sont imposées <b>après </b>l'installation du
d305 1
a305 1
Vérifiez que les correctifs <b>NE CONTIENNENT PAS </b>de tags qui
d337 1
a337 1
NI NE MODIFIEZ JAMAIS<b> </b></strong>de fichiers existants dans /etc.
d370 1
a370 1
production du portage. Vous devez <b>éliminer tous les "warning"</b>
d389 8
a396 8
<b>COURTE </b>description du portage (au maximum 60 caractères).
Vous ne <b>DEVEZ PAS INCLURE </b>le nom du paquetage dans la description
ou son numéro de version. Vous ne devez pas faire débuter cette ligne de
commentaire par un caractère en majuscule sauf si la signification
sémantique doit être sans aucune ambiguïté et <b>NE TERMINEZ PAS CETTE
LIGNE </b>par un point. <b>EN AUCUN CAS VOUS NE DEVEZ COMMENCER PAR UN
ARTICLE INDEFINI COMME 'un' OU 'une' ; retirez tout article au
début</b><strong>.</strong>
d399 1
a399 1
Editez <i>pkg/DESCR et pkg/PLIST</i>. 
d461 4
a464 1

d542 1
a542 1
pas à ce sujet ! :-)<br> Si vous modifiez un fichier de manière
d604 1
a604 1
Vous <b>devez maintenir le portage ! </b>Si jamais un problème survient
d632 1
a632 1
$Translation: checklist.html,v 1.23 2005/10/30 18:12:08 saad Exp $<br>
@


1.20
log
@sync with Steelix CVS
@
text
@d511 1
a511 1
plate-formes possibles.
d516 1
a516 1
Les Sun SPARC et UltraSPARC sont aussi d'excellentes plateformes de test
d629 1
a629 1
$Translation: checklist.html,v 1.22 2005/07/14 09:44:07 saad Exp $<br>
@


1.19
log
@sync with Steelix CVS
@
text
@d21 1
a21 1
&quot;port&quot;. Il s'agit essentiellement d'une liste utile à
d72 1
a72 1
Ajoutez les portions &quot;fetch&quot; (de récupération) au Makefile.
d143 1
a143 1
&quot;:5&quot;).
d148 1
a148 1
sortes de &quot;modules&quot; optionnels. Si une fonctionalité présente
d227 1
a227 1
&quot;Yes&quot;. Si ce n'est pas le cas, vous devez expliquer pourquoi
d276 1
a276 1
tout &quot;nettoyer&quot; à l'aide de <b>make clean patch</b>. Cette
d321 1
a321 1
sources dans un état plus &quot;propre&quot; (de nombreux programmes qui
d538 1
a538 1
de type &quot;branche vendeur&quot; comme 1.1.1.1 mais ne vous inquiétez
d544 2
a545 2
logiciel. A partir de ce stade, &quot;cvs add&quot; et &quot;cvs
rm&quot; seront utilisés pour ajouter ou retirer des fichiers, tandis
d619 1
a619 1
l'arbre des &quot;ports&quot; d'OpenBSD qui sans tous ces efforts
d629 1
a629 1
$Translation: checklist.html,v 1.21 2005/06/10 14:10:33 saad Exp $<br>
@


1.18
log
@sync with steelix translation CVS
@
text
@a462 23
Attention ! Les fichiers sont trouvés par date. Ceci signifie que le
système ne réalise PAS les tâches suivantes :

<ul><li>
lister les fichiers installés par 'tar' car leur date ne sera pas
modifiée et ils ne seront pas trouvés par 'find'.
<li>
mise à jour de <code>info/dir</code> si des fichiers .info sont ajoutés.
Vérifiez également que <code>info/dir</code> ne fait pas partie de la
PLIST.
<li>
tenter de faire quoi que ce soit de spécial avec des liens ou liens
symboliques. Un test avec tar montre que ce dernier traite les liens et
liens symboliques correctement, mais nous préférons la prudence pour
tout ce qui touche aux paquetages.
</ul>
<p>
Consultez attentivement le fichier `PLIST' et vérifiez que tout ce qui
est installé a été fait correctement et au bon endroit. Tout ce qui
n'est pas installé mais qui doit l'être doit être listé dans une règle
'post- install' au sein du Makefile.

<p>
a477 17
<br><li>
Continuez à retirer le paquetage installé et installez à nouveau encore
et encore jusqu'à la perfection. Par <em>perfection</em> nous voulons
dire que le portage logiciel s'installe parfaitement et qu'il peut
également être retiré sans aucun problème ou conflit. `pkg_delete
&lt;nom de paquetage&gt;' sera utilisé pour retirer le logiciel tandis
que `sudo make reinstall' sera utilisé pour effectuer une
réinstallation. Consultez la page man de `pkg_create' pour étudier les
différentes commandes disponibles qui peuvent être ajoutées à PLIST pour
vous assurer que tout est nettoyé correctement. Après avoir retiré le
portage, la commande suivante :
<pre>
$ find /usr/local -newer w-${PKGNAME}${FLAVOR_EXT}/fake-${MACHINE_ARCH}[-
${FLAVOR}]/.install_started -print
</pre>
ne doit lister que les noms de répertoires standards.

d482 21
a502 3
<code>pkg_delete</code> puis utilisez <code>pkg_add</code> Les résultats
obtenus doivent correspondre <b>EXACTEMENT</b> aux résultats obtenus par
l'utilisation de la commande `make install'.
d628 2
a629 2
Originally [OpenBSD: checklist.html,v 1.60 ]<br>
$Translation: checklist.html,v 1.20 2005/04/10 09:34:59 aanriot Exp $<br>
@


1.17
log
@Sync with Steelix CVS
@
text
@d53 2
a54 2
disque de l'arbre des ports à l'aide de <b>cvs</b>. Comment le faire ?
Vous trouverez toutes les informations requises dans la page consacrée à
d91 1
a91 1
utilisées. Il ne faut pas que DISTNAME contienne en conséquence le nom
d99 2
a100 2
Certains portages logiciels sont complexes et pour simplifier votre
tâche, des outils supplémentaires sont à votre disposition :
d103 1
a103 1
contenir une liste de patch proposés par l'auteur du logiciel (et non
d540 1
a540 1
inverse à celui de la plateforme i386 ; si vous développez sur SPARC,
d545 3
a547 4
Incorporez toutes les informations obtenues en retour que vous
obtiendrez d'autres testeurs. Testez à nouveau sur votre plateforme.
Ensuite, répondez à toute personne et proposez- leur votre nouveau
portage.
d562 2
a563 1
spécifique (édition puis cvs commit), la nouvelle version sera alors 1.2
d617 1
a617 1
Enfin, ajoutez une entrée d'une ligne pour le nouveau portage dans le
d626 2
a627 1
construction du portage, mise à jour, re-cycle de construction, etc.
d651 1
a651 1
$Translation: checklist.html,v 1.19 2005/03/26 11:14:10 aanriot Exp $<br>
@


1.16
log
@sync with Steelix CVS
@
text
@d419 7
a425 7
votre portage logiciel utilise des librairies dynamiques, vérifiez leur
table de symboles à l'aide de la commande <code>nm</code>, car parfois
un logiciel ne les référence pas correctement ce qui va provoquer le
dysfonctionnement du logiciel par la suite une fois que le binaire à
fait l'objet d'un strip alors qu'ils fonctionnent parfaitmenent avant le
strip. Toutefois, les binaires DEVRAIENT faire l'application d'un strip
avant leur installation ; utilisez la commande <code>file</code> pour
d430 1
a430 1
l'application d'un strip sur les binaires possible.
d435 1
a435 1
programmes qui fonctionnent en setiud où qui accèdent au réseau doivent
d532 2
a533 2
Essayez de faire tester votre portage sur le plus grand nombre de plate-
formes possibles.
d595 1
a595 1
portage que nous avons réalisé le 8 septembre 1998:
d600 1
a600 1
08 ian@@cvs.openbsd.org's password: (not shown, obviously)
d634 1
a634 1
même, surveillez tout portage pouvant affecter les vôtres et préparez
d650 1
a650 1
$Translation: checklist.html,v 1.18 2005/03/13 11:30:44 aanriot Exp $<br>
@


1.15
log
@Sync with Steelix CVS
@
text
@d468 1
a468 1
modifiée et ne seront pas trouvés par 'find'.
d471 1
a471 1
Egalement, vérifiez que <code>info/dir</code> ne fait pas partie du
d489 1
a489 1
PLIST décrit les fichiers indiquant, pour chaque architecture, si les
d516 1
a516 1
ne doit lister que les noms standards de répertoires.
d532 1
a532 1
Essayez de faire tester votre portage sur le plus grand nombre de plates-
d568 2
a569 2
que le cycle classique d'édition puis commit sera utilisé. Vous pouvez
utiliser quelque chose comme ceci :
d623 4
a626 4
Vous <b>devez maintenir le portage ! </b>Si jamais un problème survient,
une nouvelle version ou quoi que ce soit, vous devez tout faire pour
maintenir votre portage à jour. En d'autres mots, cycle de construction
du portage, mise à jour, re-cycle de construction, etc.
d630 3
a632 3
dépendances ! Vous ne devez pas provoquer un disfonctionnement en
modifiant votre portage, dont d'autres logiciels peuvent dépendre ! En
cas de problème si votre portage demande la mise à jour d'autres
d634 2
a635 3
la même manière, surveillez tout portage pouvant affecter les vôtres et
préparez vous à des mises à jour sans être toujours prévenu(e) à
l'avance.
d650 1
a650 1
$Translation: checklist.html,v 1.17 2005/03/12 17:45:37 aanriot Exp $<br>
@


1.14
log
@sync with Steelix CVS
@
text
@d49 1
a49 1
certaines fonctionalités, etc.
d58 1
a58 1
Choisissez dans quel dossier, sera placé votre portage et créez
d108 1
a108 1
GNU, SunSite ou CPAN, nous en proposons une liste de sitesau sein du
d135 2
a136 2
l'utilisateur qui doit maintenir son système, tout du moins pouvoir en
consulter l'état sans se perdre.
d155 2
a156 2
Ports veillera à récupérer tous les fichiers optionnels qui ne sont pas
toujours requis par l'utilisateur classique.
d164 3
a166 3
Dans certains cas, rares, il n'est pas possible de disposer de hachages
pour tester l'intégrité des sources. Il est de votre
<b>responsabilité </b>d'essayer de trouver par tout moyen possible
d169 1
a169 1
archives du logiciel est fondamental et très désirable. Dans le pire des
d175 1
a175 1
d'extraction. EXTRACT_ONLY peut-être utilisée pour limiter l'extraction
d200 2
a201 2
Lisez la documentation d'installation et notez que la construction de
port doit se compléter et prendre en compte toute option spéciale
d249 2
a250 2
Si le configure GNU est utilisé, vous devriez utiliser ./configure --
help afin de déterminer quelles options sont disponibles.
d252 1
a252 1
Tout ce que vous pourriez être amené(e) à modifier peut être modifié en
d256 3
a258 3
Utilisez CONFIGURE_ARGS+= pour rajouter une ou des options à cette
variable locale. Si vous utilisez CONFIGURE_ARGS= vous risquez d'en
écraser tout contenu préalable.
d277 1
a277 1
commande va nettoyer le répertoie de travail de tous fichiers, faire à
d325 1
a325 1
Cela peut vous épargner des efforts, et vous permet de relancer
d375 1
a375 1
Controllez la sémantique de SEPARATE_BUILD. Vous ne devez le faire que
d651 1
a651 1
$Translation: checklist.html,v 1.16 2005/02/15 12:46:34 aanriot Exp $<br>
@


1.13
log
@Sync with Steelix CVS
@
text
@d22 3
a24 4
consulter à chaque fois, mais elle n'est ni complete, ni
parfaite. Nous vous invitons donc à proposer vos commentaires et
questions à l'adresse suivante :
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a>.
d30 2
a31 2
Si vous voulez prendre en charge la gestion d'un portage logiciel,
inscrivez-vous via : 
d34 2
a35 2
Cette liste est consacrée à toutes les discussions et
votre inscription y est fortement recommandée.
d37 2
a38 2
La lecture des envois précédents sur cette liste est
essentiel : des annonces ou explications cruciales s'y trouvent.
d40 2
a41 2
Vous pourrez y cotoyer des personnes expérimentées dans ce
domaine. Ils pourront vous offrir des conseils ou tester vos portages.
d47 3
a49 4
engagez à maintenir vos portages <b>à jour</b> et
répondre aux questions des utilisateurs qui les utiliseront :
comment activer ou désactiver certaines fonctionalités,
etc.
d52 4
a55 4
Votre décision prise, vous devez obtenir une copie locale sur
votre disque de l'arbre des ports à l'aide de <b>cvs</b>. Comment
le faire ? Vous trouverez toutes les informations requises dans la page
consacrée à <a href="anoncvs.html">AnonCVS</a>. 
d58 6
a63 8
Choisissez où, dans quel dossier, sera placé votre portage
et créez l'infrastructure de base requise. Utilisez le fichier
Makefile modele
<code>/usr/ports/infrastructure/templates/Makefile.template</code>. 
NEED_VERSION est considéré <b>obsolète </b>et vous
ne devez pas l'utiliser pour tous les nouveaux portages désormais
: vous devez mettre à jour votre arbre local de ports, ceci
incluant bsd.port.mk.
d72 1
a72 2
Ajoutez les portions &quot;fetch&quot; (de récupération)
au Makefile.
d84 6
a89 8
<strong>N'oubliez pas la barre finale de l'adresse !</strong> 
Essayez d'avoir au moins trois sites différents pour chacun de
vos portages. Le site le plus fiable et rapide doit se trouver en
première position.
<li> 
Gardez à l'esprit que les variables locales suivantes sont
utilisées pour identifier le fichier à
récupérer et dans cet ordre :
d91 2
a92 2
utilisées. Il ne faut pas que DISTNAME contienne en
conséquence le nom complet du fichier.
d94 2
a95 2
Vous pourrez vérifier que vous avez fixé correctement ces
variables en utilisant la commande : 
d100 1
a100 2
tâche, des outils supplémentaires sont à votre
disposition :
d102 3
a104 4
Vous pouvez utiliser la variable locale PATCHFILES. Cette
dernière doit contenir une liste de patch proposés par
l'origine du logiciel (et non OpenBSD). On y trouve
généralement des correctifs de fiabilité ou de
d107 2
a108 2
Si vos portages sont disponibles au sein de sites miroirs majeurs tels
que GNU, SunSite ou CPAN, nous en proposons une liste de sitesau sein du
d112 2
a113 2
construction ${MASTER_SITE_FOO:=subdir/} pour rajouter le
sous-répertoire contenant la distribution.
d115 10
a124 12
Chaque portage contient une version spécifique d'un logiciel. Une
fois les fichiers récupérés, on vérifie un
hachage pour s'assurer de leur intégrité et la comparaison
sera effectuée à partir des hachages que <b>vous </b>aurez
calculés. Pour éviter toute confusion, DISTFILES et
PATCHFILES doivent avoir des numéros de version clairement
identifiables : ne récupérez pas de fichier
foo-latest.tar.gz s'il existe un lien vers foo-1.0.5.tar.gz. Si c'est
nécessaire, contacter l'auteur du logiciel afin de lui demander
conseil et expliquez poliment pourquoi vous devez pouvoir identifier
clairement un numéro de version dans le fichier contenant les
sources de votre portage en devenir.
d127 9
a135 11
fonctionner, utilisez la variable locale DIST_SUBDIR pour éviter
de polluer et de rendre complexe la lecture de /usr/ports/distfiles par
les utilisateurs (et déterminer qui fait partie de quoi).
<li> 
DIST_SUBDIR ne <b>doit pas </b>référencer de
numéros de version. Lorsque le portage sera mis à jour
vers une nouvelle version, seuls les fichiers contenant les sources
doivent être modifiés : si DIST_SUBDIR est modifié,
tous les fichiers seront à nouveau
récupérés. Il faut penser à l'utilisateur
qui doit maintenir son système, tout du moins pouvoir en
d138 19
a156 22
A la fois DISTFILES et PATCHFILES ne proviennent pas
nécessairement des mêmes sites MASTER_SITES. Il est
possible de définir des sites supplémentaires à
l'aide des variables locales MASTER_SITES0 à MASTER_SITES9. Il
vous suffit d'écrire DISTFILES=foo-1.0.5.tar.gz:5 pour
récupérer le fichier depuis le site contenu dans
MASTER_SITES5 (notez le &quot;:5&quot;).
<li> 
Certains portages n'ont pas besoin de récupérer tous les
fichiers en toute circonstance. Par exemple, les options de compilation
de certains portages logiciels définissent ce qui doit être
compilé ou non, des sortes de &quot;modules&quot; optionnels. Si
une fonctionalité présente dans un module n'est pas
utilisée, alors il n'est pas nécessaire de
récupérer tous les fichiers mais uniquement ceux qui sont
requis. Certains composants sont également spécifiques
à certaines architectures matérielles : tous ces fichiers
optionnels doivent être référencés dans la
variable locale SUPDISTFILES. Lorsque des cibles de compilation telles
que makesum ou mirror-distfiles sont utilisées, le système
des Ports veillera à récupérer tous les fichiers
optionnels qui ne sont pas toujours requis par l'utilisateur classique.
d160 3
a162 3
Créez des hachages dans <i>distinfo</i> en tapant <b>make
makesum</b>. Vous <b>devez </b>ensuite vérifier que ces hachages
sont valides en tapant <b>make checksum</b>.
d166 7
a172 8
<b>responsabilité </b>d'essayer de trouver par tout moyen
possible un site d'archive fiable. Communiquer avec l'auteur ou les
auteurs du logiciel et la ou les personnes en charge des sites contenant
les archives du logiciel est fondamental et très
désirable. Dans le pire des cas, vous pourrez utiliser la
variable locale IGNOREFILES pour marquer les fichiers pour lesquels il
n'est pas possible de disposer de hachages d'intégrité
fiables.
d175 14
a188 15
d'extraction. EXTRACT_ONLY peut-être utilisée pour limiter
l'extraction aux seuls fichiers requis (peut être vide). L'usage
habituel de cette variable est de personnaliser l'extraction : par
exemple, si certains DISTFILES doivent subir un traitement particulier,
il seront retirés de EXTRACT_ONLY et gérés
manuellement après la phase d'extraction. Pour des raisons
historiques, make extract fixe le répertoire de travail pendant
l'extraction des fichiers. Ainsi, il est très inhabituel de
fournir des chemins de pré-extraction et post-extraction
différents (et c'est même un comportement suspect,
indiquant un camouflage important au sein du portage).
<li> 
Les correctifs qui demandent un traitement particulier doivent
être mentionnés dans DISTFILES et retirés de
EXTRACT_ONLY, pour des raisons historiques.
d201 2
a202 2
port doit se compléter et prendre en compte toute option
spéciale requise.
d205 6
a210 6
Maintenant vous devez prendre le temps de considérer
sérieusement et avec un grand soin les licences (ou la licence)
qui couvre votre portage logiciel. Certains logiciels peuvent être
redistribués librement, mais pas tous. Afin de vous aider, vous
devez répondre à quatre questions. Il s'agit des variables
PERMIT_* que vous trouverez au sein du fichier Makefile.
d213 2
a214 2
PERMIT_PACKAGE_CDROM indique si le portage peut être
distribué sur support CD-Rom.
d216 2
a217 2
PERMIT_PACKAGE_FTP indique si le portage peut être placé
sur des sites FTP.
d229 4
a232 5
conditions spéciales qui sont imposées <b>après
</b>l'installation du logiciel. Par exemple, une série de
logiciels impose qu'un exemplaire de leur licence soit installée
et mentionnée à l'utilisateur. Dans ce cas, nous vous
recommandons de mettre la licence dans
d241 2
a242 2
Ajoutez les options de configuration au Makefile et créez un
script de configuration au besoin.
d244 15
a258 17
Vous pouvez ajouter un script de configuration de votre portage
nommé `configure' et le situer dans un répertoire
<code>scripts/</code>. Ce script sera exécuté avant toute
configuration spécifiée par la variable locale
CONFIGURE_STYLE.
<li>
Si le configure GNU est utilisé, vous devriez utiliser
./configure --help afin de déterminer quelles options sont
disponibles.
<li>
Tout ce que vous pourriez être amené(e) à modifier
peut être modifié en utilisant le drapeau de configuration
-option dans le paramètre CONFIGURE_ARGS du fichier Makefile.
<li>
Utilisez CONFIGURE_ARGS+= pour rajouter une ou des options à
cette variable locale. Si vous utilisez CONFIGURE_ARGS= vous risquez
d'en écraser tout contenu préalable.
d268 4
a271 4
Si vous obtenez une erreur, vous devrez générer un ou
plusieur patch qui seront utiliés par votre portage, afin de
permettre sa compilation et installation sous OpenBSD. Déterminez
ce qui doit être modifé, et créez un patch.
d275 4
a278 5
Le moyen le plus facile de vérifier que le correctif fonctionne est
de tout &quot;nettoyer&quot; à l'aide de <b>make clean patch</b>.
Cette commande va nettoyer le répertoie de travail de tous
fichiers, faire à nouveau l'extraction et appliquer votre
correctif.
d286 11
a296 12
Les correctifs doivent être placés dans <i>patches/</i> et
doivent être nommés patch-* où vous remplacerez *
par quelque chose de compréhensible. Nous vous recommandons de
nommer vos patch patch-FILENAME où FILENAME est le nom du fichier
qui sera modifié par le correctif. (<tt>make update-patches</tt>
le fait automatiquement pour vous)
<li>
Appliquer PATCHFILES est la première étape du stade des
patch. Vous pouvez l'invoquer séparément à l'aide
de make distpatch, une cible utile pour les porteurs d'applications.
Vous pouvez ignorer cette étape si vous n'avez pas fixé de
valeur à cette variable.
d298 2
a299 2
Chaque fichier de patch ne doit modifier qu'un seul fichier à la
fois. S'il-vous-plaît.
d301 1
a301 2
Utilisez <b>make update-patches</b> pour générer les
correctifs.
d306 3
a308 4
risquent d'être modifiés par cvs. Si c'est le cas, vos
correctifs ne pourront plus s'appliquer après une mise à
jour via cvs. Vous pouvez vérifier les changements potentiels
à l'aide de -kk pour l'éviter.
d313 2
a314 2
<b>Veuillez fournir un exemplaire </b>de vos correctifs à
   l'auteur du logiciel.
d320 4
a323 5
des sources, cela est préférable et permet de conserver
l'arbre des sources dans un état plus &quot;propre&quot; (de
nombreux programmes qui utilisent <code>CONFIGURE_STYLE=gnu</code> le
peuvent) et cela simplifie en outre la gestion de l'arbre de sources sur
plusieurs architectures.
d332 2
a333 2
toute option utile dans le Makefile. Pour répéter la
commande utilisez `<b>make clean configure</b>'.
d335 4
a338 4
Note: vérifiez que les fichiers dépendants de l'hôte
soient placés soit dans <i>/etc</i> ou <i>/etc/&lt;name&gt;</i>,
mais <strong>NE REMPLACEZ NI NE MODIFIEZ JAMAIS<b> </b></strong>de
fichiers existants dans /etc. Il vaut mieux placer ces fichiers dans
d341 6
a346 8
les fichiers existent, affichez un message et indiquez à
l'utilisateur du système quels fichiers doivent être
modifiés. Cela permet également de garantir que les
fichiers seront inclus dans le paquetage puisque tout ce qui se trouve
dans <i>/usr/local</i> sera inclus dans PLIST. Une fois un paquetage
installé, le contenu de <code>pkg/MESSAGE</code> sera
affiché et le cycle de construction du paquetage sera
terminé.
d369 4
a372 4
terminé. Patchez (voir ci-dessus), puis clean et make
jusqu'à la production du portage. Vous devez <b>éliminer
tous les "warning"</b> obtenus en particulier ceux en rapports avec la
sécurité du code produit.
d375 6
a380 7
Controllez la sémantique de SEPARATE_BUILD. Vous ne devez le
faire que si votre portage utilise la variable locale SEPARATE_BUILD.
Idéalement, le portage ne doit pas modifier de fichiers dans
${WRKSRC} <b>après l'application de votre patch</b>. Vous pouvez
le vérifier en retirant vos droits d'écriture à
cette étape sur ${WRKSRC}. Ensuite vous pouvez utiliser
<code>SEPARATE_BUILD=concurrent</code> -- et vérifier qu'une
d384 2
a385 2
problèmes, à mesure que certains fichiers seront
régénérés à certains moments.
d389 1
a389 1
<b>COURTE </b>description du portage (au maximum 60 caractères)
d391 5
a395 6
ou son numéro de version. Vous ne devez pas faire débuter
cette ligne de commentaire par un caractère en majuscule sauf si
la signification sémantique doit être sans aucune
ambiguïté et <b>NE TERMINEZ PAS CETTE LIGNE </b>par un
point. <b>EN AUCUN CAS VOUS NE DEVEZ COMMENCER PAR UN ARTICLE INDEFINI
COMME 'un' OU 'une' ; retirez tout article au
d401 5
a405 6
DESCR est une description plus étendue du portage. Il peut s'agir
d'un ou plusieurs paragraphes expliquant de manière consise en
quoi consiste le logiciel. Nous vous invitons à terminer chaque
ligne après 72 caractères ce que vous pouvez faire
après l'écriture de ce fichier en utilisant la commande
suivante : fmt -w 72
d414 2
a415 2
pour votre port et soyez certain que celui-ci soit ajouté
à ce même fichier lors de son entrée dans l'arbre.
d419 23
a441 27
votre portage logiciel utilise des librairies dynamiques,
vérifiez leur table de symboles à l'aide de la commande
<code>nm</code>, car parfois un logiciel ne les référence
pas correctement ce qui va provoquer le dysfonctionnement du logiciel
par la suite une fois que le binaire à fait l'objet d'un strip
alors qu'ils fonctionnent parfaitmenent avant le strip. Toutefois, les
binaires DEVRAIENT faire l'application d'un strip avant leur
installation ; utilisez la commande <code>file</code> pour
déterminer si le binaire a fait ou non l'objet d'un strip. Si le
portage contient déjà des instructions pour
réaliser un strip du binaire avant son installation (par exemple
'install-strip') utilisez ce dernier; dans le cas contraire, ajoutez
cette option dans le Makefile afin de rendre l'application d'un strip
sur les binaires possible.

<br><br><li>
<strong>Vérifier une nouvelle fois et avec le plus grand soin que
votre portage ne contient pas de trous de sécurité
potentiels</strong>. Les programmes qui fonctionnent en setiud où
qui accèdent au réseau doivent faire l'objet d'un audit
complet et de grand soin. Nous vous invitons à étudier nos
<a href="../porting.html#Security">recommandations quant à la
sécurité</a> pour mener à bien cette étape
très importante. Vous devez tout enregistrer et étudier en
ce qui concerne tout changement, et l'inscrire au sein du fichier
<code>/SECURITY</code>. Ce fichier doit lister avec précision
tout problème de sécurité potentiel introduit par
d457 4
a460 5
Créez le fichier pkg/PLIST. Une fois l'installation
complète, utilisez la commande pour développeurs <b>make
plist</b> qui permet de générer le fichier PLIST au sein
du répertoire <i>pkg</i>. Ce fichier est le candidat pour toute
création de liste de paquetages.
d463 2
a464 2
Attention! Les fichiers sont trouvés par datation. Ceci signifie
que le système ne réalise PAS les tâches suivantes :
d467 6
a472 2
lister les fichiers installés par 'tar' car leur datation ne sera
pas modifiée et ne seront pas trouvés par 'find'.
d474 4
a477 9
mise à jour de <code>info/dir</code> si des fichiers .info sont
ajoutés. Egalement, vérifiez que <code>info/dir</code> ne
fait pas partie du PLIST.
<li>
tenter de faire quoi que ce soit de spécial avec des liens ou
liens symboliques.Un test avec tar montre que ce dernier traite les
liens et liens symboliques correctement, mais nous
préférons la prudence pour tout ce qui touche aux
paquetages.
d480 4
a483 5
Consultez attentivement le fichier `PLIST' et vérifiez que tout
ce qui est installé a été fait correctement et au
bon endroit. Tout ce qui n'est pas installé mais qui doit
l'être doit être listé dans une règle 'post-
install' au sein du Makefile.
d486 2
a487 2
Les portages qui installent des librairies partagées auront un
fichier supplémentaire, nommé PFRAG.shared.
d489 2
a490 2
PLIST décrit les fichiers indiquant, pour chaque architecture, si
les librairies partagées sont ou non supportées.
d492 7
a498 7
PFRAG.shared ne décrit que les fichiers qui sont installés
de manière additionnelle sur les architectures qui supportent les
librairies partagées.
<li>
PFRAG.noshared ne décrit que les fichiers qui sont
installés de manière supplémentaire sur les
architectures qui ne supportent pas les librairies partagées.
d502 10
a511 12
Continuez à retirer le paquetage installé et installez
à nouveau encore et encore jusqu'à la perfection. Par
<em>perfection</em> nous voulons dire que le portage logiciel s'installe
parfaitement et qu'il peut également être retiré
sans aucun problème ou conflit. `pkg_delete &lt;nom de
paquetage&gt;' sera utilisé pour retirer le logiciel tandis que
`sudo make reinstall' sera utilisé pour effectuer une
réinstallation. Consultez la page man de `pkg_create' pour
étudier les différentes commandes disponibles qui peuvent
être ajoutées à PLIST pour vous assurer que tout est
nettoyé correctement. Après avoir retiré le
portage, la commande suivante : 
d513 2
a514 1
$ find /usr/local -newer w-${PKGNAME}${FLAVOR_EXT}/fake-${MACHINE_ARCH}[-${FLAVOR}]/.install_started -print
d519 6
a524 7
Testez le paquetage lui-même. Après l'installation du
portage, la commande <code>make package</code> est utilisée pour
créer un paquetage. Pour tester le paquetage, utilisez d'abord la
commande <code>pkg_delete</code> puis utilisez <code>pkg_add</code> Les
résultats obtenus doivent correspondre <b>EXACTEMENT</b> aux
résultats obtenus par l'utilisation de la commande `make
install'.
d527 4
a530 4
Envoyez un email à l'adresse
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> avec une courte
note indiquant vos commentaires et les tests menés. Attachez le
portage à cet email et envoyez-le.
d546 3
a548 3
obtiendrez d'autres testeurs. Testez à nouveau sur votre
plateforme. Ensuite, répondez à toute personne et proposez-
leur votre nouveau portage.
d552 3
a554 4
vous ne disposez pas de droits d'écriture CVS, demandez à
quelqu'un qui en dispose sur
<a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> de le faire
pour vous.
d557 7
a563 9
Si vous êtes un développeur disposant d'un accès
CVS, insérez votre portage logiciel. Nous préférons
l'utilisation de "import" pour importer votre nouveau port, plutôt
que d'ajouter des centaines (ou plus) de fichiers de manière
individuelle. Import utilise des numéros de version de type
&quot;branche vendeur&quot; comme 1.1.1.1 mais ne vous inquiétez
pas à ce sujet ! :-)<br> Si vous modifiez un fichier de
manière spécifique (édition puis cvs commit), la
nouvelle version sera alors 1.2
d565 5
a569 6
En résumé, l'importation sera utilisée à la
création du portage logiciel. A partir de ce stade, &quot;cvs
add&quot; et &quot;cvs rm&quot; seront utilisés pour ajouter ou
retirer des fichiers, tandis que le cycle classique d'édition
puis commit sera utilisé. Vous pouvez utiliser quelque chose
comme ceci :
d583 2
a584 2
ports/lang/kaffe1 est le chemin relatif où votre portage sera
placé par rapport au /cvs
d594 2
a595 2
Comme exemple réel, voici la sortie obtenue par la mise en place
d'un portage que nous avons réalisé le 8 septembre 1998:
d599 2
a600 2
$ cvs import -m 'kaffe1.0(==JDK1.1) port' ports/lang/kaffe1 ian ian_1998-Sep-08
ian@@cvs.openbsd.org's password: (not shown, obviously)
d617 4
a620 4
Enfin, ajoutez une entrée d'une ligne pour le nouveau portage
dans le Makefile du répertoire parent; par exemple si nous
ajoutons le portage de ports/lang/kaffe1, nous l'ajoutons
également au fichier ports/lang/Makefile.
d623 4
a626 5
Vous <b>devez maintenir le portage ! </b>Si jamais un problème
survient, une nouvelle version ou quoi que ce soit, vous devez tout
faire pour maintenir votre portage à jour. En d'autres mots,
cycle de construction du portage, mise à jour, re-cycle de
construction, etc.
d631 5
a635 6
modifiant votre portage, dont d'autres logiciels peuvent dépendre
! En cas de problème si votre portage demande la mise à
jour d'autres portages sous la charge d'autres personnes, contactez ces
derniers. De la même manière, surveillez tout portage
pouvant affecter les vôtres et préparez vous à des
mises à jour sans être toujours prévenu(e) à
d639 4
a642 4
Enfin, nous tenons à vous remercier pour tous les efforts que
cela réprésente et que vous acceptez de prendre en charge
pour améliorer l'arbre des &quot;ports&quot; d'OpenBSD qui sans
tous ces efforts n'existerait pas : merci !
d644 2
a645 2
<a href="../porting.html"><img height="24" width="24" src="../back.gif"
 border="0" alt="Porting"></a> 
d651 1
a651 1
$Translation: checklist.html,v 1.15 2005/01/17 21:29:45 aanriot Exp $<br>
@


1.12
log
@Sync with Steelix CVS
@
text
@d695 1
d697 2
a698 1
$Translation: checklist.html,v 1.14 2004/11/23 12:35:34 aanriot Exp $<br>
@


1.11
log
@Sync with Steelix CVS
@
text
@@


1.10
log
@sync with Steelix CVS
@
text
@d575 2
a576 2
La plateforme DEC Alpha est excellente car elle n'utilise que des
librairies statiques et que <code>sizeof(int) != sizeof(long)</code>.
d578 4
a581 5
Sun SPARC est aussi une excellente plateforme de test car elle est
facile à trouver, et que son ordre d'octets est à
l'inverse de celui de la plateforme i386 ; de la même
manière, si vous réalisez votre portage sur SPARC la
plateforme i386 sera la meilleure plateforme de test pour vous.
d695 2
a696 2
Originally [OpenBSD: checklist.html,v 1.59 ]<br>
$Translation: checklist.html,v 1.13 2004/11/05 22:51:23 aanriot Exp $<br>
@


1.9
log
@Sync with Steelix CVS
@
text
@d17 1
a17 1
<h2><font color="#e00000">Points &agrave; v&eacute;rifier pour chaque
d20 5
a24 5
Ce document d&eacute;crit comment concevoir ou mettre &agrave; jour un
&quot;port&quot;. Il s'agit essentiellement d'une liste utile &agrave;
consulter &agrave; chaque fois, mais elle n'est ni complete, ni
parfaite. Nous vous invitons donc &agrave; proposer vos commentaires et
questions &agrave; l'adresse suivante :
d35 2
a36 2
Cette liste est consacr&eacute;e &agrave; toutes les discussions et
votre inscription y est fortement recommand&eacute;e.
d38 1
a38 1
La lecture des envois pr&eacute;c&eacute;dents sur cette liste est
d41 1
a41 1
Vous pourrez y cotoyer des personnes exp&eacute;riment&eacute;es dans ce
d48 3
a50 3
engagez &agrave; maintenir vos portages <b>&agrave; jour</b> et
r&eacute;pondre aux questions des utilisateurs qui les utiliseront :
comment activer ou d&eacute;sactiver certaines fonctionalit&eacute;s,
d54 2
a55 2
Votre d&eacute;cision prise, vous devez obtenir une copie locale sur
votre disque de l'arbre des ports &agrave; l'aide de <b>cvs</b>. Comment
d57 1
a57 1
consacr&eacute;e &agrave; <a href="anoncvs.html">AnonCVS</a>. 
d60 2
a61 2
Choisissez o&ugrave;, dans quel dossier, sera plac&eacute; votre portage
et cr&eacute;ez l'infrastructure de base requise. Utilisez le fichier
d64 3
a66 3
NEED_VERSION est consid&eacute;r&eacute; <b>obsol&egrave;te </b>et vous
ne devez pas l'utiliser pour tous les nouveaux portages d&eacute;sormais
: vous devez mettre &agrave; jour votre arbre local de ports, ceci
d70 1
a70 1
Cr&eacute;ez le r&eacute;pertoire <code>pkg</code>. 
d72 1
a72 1
Cr&eacute;ez des fichiers vides <code>pkg/DESCR, pkg/PLIST</code>. 
d76 1
a76 1
Ajoutez les portions &quot;fetch&quot; (de r&eacute;cup&eacute;ration)
d84 1
a84 1
foo-1.0.tar.gz alors DISTNAME doit contenir la cha&icirc;ne : foo-1.0.
d86 1
a86 1
Modifiez MASTER_SITES pour contenir l'URL des r&eacute;pertoires qui
d90 1
a90 1
Essayez d'avoir au moins trois sites diff&eacute;rents pour chacun de
d92 1
a92 1
premi&egrave;re position.
d94 3
a96 3
Gardez &agrave; l'esprit que les variables locales suivantes sont
utilis&eacute;es pour identifier le fichier &agrave;
r&eacute;cup&eacute;rer et dans cet ordre :
d98 2
a99 2
utilis&eacute;es. Il ne faut pas que DISTNAME contienne en
cons&eacute;quence le nom complet du fichier.
d101 1
a101 1
Vous pourrez v&eacute;rifier que vous avez fix&eacute; correctement ces
d107 1
a107 1
t&acirc;che, des outils suppl&eacute;mentaires sont &agrave; votre
d111 1
a111 1
derni&egrave;re doit contenir une liste de patch propos&eacute;s par
d113 2
a114 2
g&eacute;n&eacute;ralement des correctifs de fiabilit&eacute; ou de
s&eacute;curit&eacute;.
d122 1
a122 1
sous-r&eacute;pertoire contenant la distribution.
d124 7
a130 7
Chaque portage contient une version sp&eacute;cifique d'un logiciel. Une
fois les fichiers r&eacute;cup&eacute;r&eacute;s, on v&eacute;rifie un
hachage pour s'assurer de leur int&eacute;grit&eacute; et la comparaison
sera effectu&eacute;e &agrave; partir des hachages que <b>vous </b>aurez
calcul&eacute;s. Pour &eacute;viter toute confusion, DISTFILES et
PATCHFILES doivent avoir des num&eacute;ros de version clairement
identifiables : ne r&eacute;cup&eacute;rez pas de fichier
d132 1
a132 1
n&eacute;cessaire, contacter l'auteur du logiciel afin de lui demander
d134 1
a134 1
clairement un num&eacute;ro de version dans le fichier contenant les
d138 1
a138 1
fonctionner, utilisez la variable locale DIST_SUBDIR pour &eacute;viter
d140 1
a140 1
les utilisateurs (et d&eacute;terminer qui fait partie de quoi).
d142 2
a143 2
DIST_SUBDIR ne <b>doit pas </b>r&eacute;f&eacute;rencer de
num&eacute;ros de version. Lorsque le portage sera mis &agrave; jour
d145 5
a149 5
doivent &ecirc;tre modifi&eacute;s : si DIST_SUBDIR est modifi&eacute;,
tous les fichiers seront &agrave; nouveau
r&eacute;cup&eacute;r&eacute;s. Il faut penser &agrave; l'utilisateur
qui doit maintenir son syst&egrave;me, tout du moins pouvoir en
consulter l'&eacute;tat sans se perdre.
d152 5
a156 5
n&eacute;cessairement des m&ecirc;mes sites MASTER_SITES. Il est
possible de d&eacute;finir des sites suppl&eacute;mentaires &agrave;
l'aide des variables locales MASTER_SITES0 &agrave; MASTER_SITES9. Il
vous suffit d'&eacute;crire DISTFILES=foo-1.0.5.tar.gz:5 pour
r&eacute;cup&eacute;rer le fichier depuis le site contenu dans
d159 1
a159 1
Certains portages n'ont pas besoin de r&eacute;cup&eacute;rer tous les
d161 8
a168 8
de certains portages logiciels d&eacute;finissent ce qui doit &ecirc;tre
compil&eacute; ou non, des sortes de &quot;modules&quot; optionnels. Si
une fonctionalit&eacute; pr&eacute;sente dans un module n'est pas
utilis&eacute;e, alors il n'est pas n&eacute;cessaire de
r&eacute;cup&eacute;rer tous les fichiers mais uniquement ceux qui sont
requis. Certains composants sont &eacute;galement sp&eacute;cifiques
&agrave; certaines architectures mat&eacute;rielles : tous ces fichiers
optionnels doivent &ecirc;tre r&eacute;f&eacute;renc&eacute;s dans la
d170 2
a171 2
que makesum ou mirror-distfiles sont utilis&eacute;es, le syst&egrave;me
des Ports veillera &agrave; r&eacute;cup&eacute;rer tous les fichiers
d176 2
a177 2
Cr&eacute;ez des hachages dans <i>distinfo</i> en tapant <b>make
makesum</b>. Vous <b>devez </b>ensuite v&eacute;rifier que ces hachages
d181 2
a182 2
pour tester l'int&eacute;grit&eacute; des sources. Il est de votre
<b>responsabilit&eacute; </b>d'essayer de trouver par tout moyen
d185 2
a186 2
les archives du logiciel est fondamental et tr&egrave;s
d&eacute;sirable. Dans le pire des cas, vous pourrez utiliser la
d188 1
a188 1
n'est pas possible de disposer de hachages d'int&eacute;grit&eacute;
d191 3
a193 3
Tous les fichiers de DISTFILES seront trait&eacute;s durant la phase
d'extraction. EXTRACT_ONLY peut-&ecirc;tre utilis&eacute;e pour limiter
l'extraction aux seuls fichiers requis (peut &ecirc;tre vide). L'usage
d196 6
a201 6
il seront retir&eacute;s de EXTRACT_ONLY et g&eacute;r&eacute;s
manuellement apr&egrave;s la phase d'extraction. Pour des raisons
historiques, make extract fixe le r&eacute;pertoire de travail pendant
l'extraction des fichiers. Ainsi, il est tr&egrave;s inhabituel de
fournir des chemins de pr&eacute;-extraction et post-extraction
diff&eacute;rents (et c'est m&ecirc;me un comportement suspect,
d205 1
a205 1
&ecirc;tre mentionn&eacute;s dans DISTFILES et retir&eacute;s de
d210 6
a215 5
Testez l'extraction du portage &agrave; l'aide de la commande <b>make
extract</b>. Vous devez v&eacute;rifier avec soin o&ugrave; se trouve la
base des sources. Il s'agit normalement de <i>w-${PKGNAME}${FLAVOR_EXT}/${DISTNAME}</i>. Vous aurez peut-&ecirc;tre
besoin de modifier la variable WRKDIST du Makefile si cette base de
sources est diff&eacute;rente.
d219 2
a220 2
port doit se compl&eacute;ter et prendre en compte toute option
sp&eacute;ciale requise.
d223 5
a227 5
Maintenant vous devez prendre le temps de consid&eacute;rer
s&eacute;rieusement et avec un grand soin les licences (ou la licence)
qui couvre votre portage logiciel. Certains logiciels peuvent &ecirc;tre
redistribu&eacute;s librement, mais pas tous. Afin de vous aider, vous
devez r&eacute;pondre &agrave; quatre questions. Il s'agit des variables
d231 2
a232 2
PERMIT_PACKAGE_CDROM indique si le portage peut &ecirc;tre
distribu&eacute; sur support CD-Rom.
d234 1
a234 1
PERMIT_PACKAGE_FTP indique si le portage peut &ecirc;tre plac&eacute;
d244 1
a244 1
A chaque fois que l'un de ces usages est autoris&eacute;, indiquez
d246 5
a250 5
dans une cha&icirc;ne commentaire. Soyez <b>attentif (attentive) </b>aux
conditions sp&eacute;ciales qui sont impos&eacute;es <b>apr&egrave;s
</b>l'installation du logiciel. Par exemple, une s&eacute;rie de
logiciels impose qu'un exemplaire de leur licence soit install&eacute;e
et mentionn&eacute;e &agrave; l'utilisateur. Dans ce cas, nous vous
d256 2
a257 2
nous saurons pourquoi les valeurs PERMIT_* sont positionn&eacute;es de cette
mani&egrave;re.
d260 1
a260 1
Ajoutez les options de configuration au Makefile et cr&eacute;ez un
d264 3
a266 3
nomm&eacute; `configure' et le situer dans un r&eacute;pertoire
<code>scripts/</code>. Ce script sera ex&eacute;cut&eacute; avant toute
configuration sp&eacute;cifi&eacute;e par la variable locale
d269 2
a270 2
Si le configure GNU est utilis&eacute;, vous devriez utiliser
./configure --help afin de d&eacute;terminer quelles options sont
d273 3
a275 3
Tout ce que vous pourriez &ecirc;tre amen&eacute;(e) &agrave; modifier
peut &ecirc;tre modifi&eacute; en utilisant le drapeau de configuration
-option dans le param&egrave;tre CONFIGURE_ARGS du fichier Makefile.
d277 1
a277 1
Utilisez CONFIGURE_ARGS+= pour rajouter une ou des options &agrave;
d279 1
a279 1
d'en &eacute;craser tout contenu pr&eacute;alable.
d283 1
a283 1
Essayez de construire le portage logiciel &agrave; l'aide de la commande
d289 4
a292 4
Si vous obtenez une erreur, vous devrez g&eacute;n&eacute;rer un ou
plusieur patch qui seront utili&eacute;s par votre portage, afin de
permettre sa compilation et installation sous OpenBSD. D&eacute;terminez
ce qui doit &ecirc;tre modif&eacute;, et cr&eacute;ez un patch.
d296 4
a299 4
Le moyen le plus facile de v&eacute;rifier que le correctif fonctionne est
de tout &quot;nettoyer&quot; &agrave; l'aide de <b>make clean patch</b>.
Cette commande va nettoyer le r&eacute;pertoie de travail de tous
fichiers, faire &agrave; nouveau l'extraction et appliquer votre
d308 5
a312 5
Les correctifs doivent &ecirc;tre plac&eacute;s dans <i>patches/</i> et
doivent &ecirc;tre nomm&eacute;s patch-* o&ugrave; vous remplacerez *
par quelque chose de compr&eacute;hensible. Nous vous recommandons de
nommer vos patch patch-FILENAME o&ugrave; FILENAME est le nom du fichier
qui sera modifi&eacute; par le correctif. (<tt>make update-patches</tt>
d315 2
a316 2
Appliquer PATCHFILES est la premi&egrave;re &eacute;tape du stade des
patch. Vous pouvez l'invoquer s&eacute;par&eacute;ment &agrave; l'aide
d318 2
a319 2
Vous pouvez ignorer cette &eacute;tape si vous n'avez pas fix&eacute; de
valeur &agrave; cette variable.
d321 2
a322 2
Chaque fichier de patch ne doit modifier qu'un seul fichier &agrave; la
fois. S'il-vous-pla&icirc;t.
d324 1
a324 1
Utilisez <b>make update-patches</b> pour g&eacute;n&eacute;rer les
d327 1
a327 1
Tous les correctifs DOIVENT &ecirc;tre relatifs &agrave; ${WRKDIST}.
d329 5
a333 5
V&eacute;rifiez que les correctifs <b>NE CONTIENNENT PAS </b>de tags qui
risquent d'&ecirc;tre modifi&eacute;s par cvs. Si c'est le cas, vos
correctifs ne pourront plus s'appliquer apr&egrave;s une mise &agrave;
jour via cvs. Vous pouvez v&eacute;rifier les changements potentiels
&agrave; l'aide de -kk pour l'&eacute;viter.
d335 2
a336 2
Ecrivez une petite note explicative au d&eacute;but du fichier contenant le
correctif d&eacute;crivant le role de ce dernier (non obligatoire).
d338 1
a338 1
<b>Veuillez fournir un exemplaire </b>de vos correctifs &agrave;
d342 1
a342 1
Essayez de param&eacute;trer <code>SEPARATE_BUILD</code>. 
d345 2
a346 2
des sources, cela est pr&eacute;f&eacute;rable et permet de conserver
l'arbre des sources dans un &eacute;tat plus &quot;propre&quot; (de
d351 1
a351 1
Cela peut vous &eacute;pargner des efforts, et vous permet de relancer
d358 1
a358 1
toute option utile dans le Makefile. Pour r&eacute;p&eacute;ter la
d361 2
a362 2
Note: v&eacute;rifiez que les fichiers d&eacute;pendants de l'h&ocirc;te
soient plac&eacute;s soit dans <i>/etc</i> ou <i>/etc/&lt;name&gt;</i>,
d367 3
a369 3
les fichiers existent, affichez un message et indiquez &agrave;
l'utilisateur du syst&egrave;me quels fichiers doivent &ecirc;tre
modifi&eacute;s. Cela permet &eacute;galement de garantir que les
d372 3
a374 3
install&eacute;, le contenu de <code>pkg/MESSAGE</code> sera
affich&eacute; et le cycle de construction du paquetage sera
termin&eacute;.
d379 3
a381 3
   ex&eacute;cutables utilisateur :                                 /usr/local/bin
   ex&eacute;cutables de l'administrateur :                         /usr/local/sbin
   programmes ex&eacute;cutables :                                  /usr/local/libexec
d383 2
a384 2
   donn&eacute;es ind&eacute;pendantes de l'architecture :                 /usr/local/lib/&lt;nom&gt;
   fichiers inclus install&eacute;s :                               /usr/local/include ou /usr/local/include/&lt;nom&gt;
d386 2
a387 2
   donn&eacute;es sp&eacute;cifiques &agrave; la machine :                        /etc ou /etc/&lt;nom&gt;
   &eacute;tat local :                                              /var/run
d391 1
a391 1
   donn&eacute;es ind&eacute;pendantes de l'architecture en lecture seule :/usr/local/share/&lt;nom&gt;
d396 3
a398 3
Commencez un cycle de compilations jusqu'&agrave; ce que le portage soit
termin&eacute;. Patchez (voir ci-dessus), puis clean et make
jusqu'&agrave; la production du portage. Vous devez <b>&eacute;liminer
d400 1
a400 1
s&eacute;curit&eacute; du code produit.
d403 1
a403 1
Controllez la s&eacute;mantique de SEPARATE_BUILD. Vous ne devez le
d405 6
a410 6
Id&eacute;alement, le portage ne doit pas modifier de fichiers dans
${WRKSRC} <b>apr&egrave;s l'application de votre patch</b>. Vous pouvez
le v&eacute;rifier en retirant vos droits d'&eacute;criture &agrave;
cette &eacute;tape sur ${WRKSRC}. Ensuite vous pouvez utiliser
<code>SEPARATE_BUILD=concurrent</code> -- et v&eacute;rifier qu'une
autre personne peut, sur une autre architecture, obtenir la m&ecirc;me
d413 2
a414 2
probl&egrave;mes, &agrave; mesure que certains fichiers seront
r&eacute;g&eacute;n&eacute;r&eacute;s &agrave; certains moments.
d418 1
a418 1
<b>COURTE </b>description du portage (au maximum 60 caract&egrave;res)
d420 4
a423 4
ou son num&eacute;ro de version. Vous ne devez pas faire d&eacute;buter
cette ligne de commentaire par un caract&egrave;re en majuscule sauf si
la signification s&eacute;mantique doit &ecirc;tre sans aucune
ambigu&iuml;t&eacute; et <b>NE TERMINEZ PAS CETTE LIGNE </b>par un
d426 1
a426 1
d&eacute;but</b><strong>.</strong>
d431 5
a435 5
DESCR est une description plus &eacute;tendue du portage. Il peut s'agir
d'un ou plusieurs paragraphes expliquant de mani&egrave;re consise en
quoi consiste le logiciel. Nous vous invitons &agrave; terminer chaque
ligne apr&egrave;s 72 caract&egrave;res ce que vous pouvez faire
apr&egrave;s l'&eacute;criture de ce fichier en utilisant la commande
d442 1
a442 1
Si l'application a besoin de cr&eacute;er un utilisateur ou un groupe,
d445 2
a446 2
pour votre port et soyez certain que celui-ci soit ajout&eacute;
&agrave; ce m&ecirc;me fichier lors de son entr&eacute;e dans l'arbre.
d451 2
a452 2
v&eacute;rifiez leur table de symboles &agrave; l'aide de la commande
<code>nm</code>, car parfois un logiciel ne les r&eacute;f&eacute;rence
d454 1
a454 1
par la suite une fois que le binaire &agrave; fait l'objet d'un strip
d458 3
a460 3
d&eacute;terminer si le binaire a fait ou non l'objet d'un strip. Si le
portage contient d&eacute;j&agrave; des instructions pour
r&eacute;aliser un strip du binaire avant son installation (par exemple
d466 8
a473 8
<strong>V&eacute;rifier une nouvelle fois et avec le plus grand soin que
votre portage ne contient pas de trous de s&eacute;curit&eacute;
potentiels</strong>. Les programmes qui fonctionnent en setiud o&ugrave;
qui acc&egrave;dent au r&eacute;seau doivent faire l'objet d'un audit
complet et de grand soin. Nous vous invitons &agrave; &eacute;tudier nos
<a href="../porting.html#Security">recommandations quant &agrave; la
s&eacute;curit&eacute;</a> pour mener &agrave; bien cette &eacute;tape
tr&egrave;s importante. Vous devez tout enregistrer et &eacute;tudier en
d475 2
a476 2
<code>/SECURITY</code>. Ce fichier doit lister avec pr&eacute;cision
tout probl&egrave;me de s&eacute;curit&eacute; potentiel introduit par
d479 1
a479 1
reste &agrave; v&eacute;rifier. Par exemple :
d484 1
a484 1
         l'appel de la fonction mktemp (fonction wrapper &agrave;
d487 1
a487 1
      Ce serveur utilise une grande quantit&eacute; de fonctions
d492 5
a496 5
Cr&eacute;ez le fichier pkg/PLIST. Une fois l'installation
compl&egrave;te, utilisez la commande pour d&eacute;veloppeurs <b>make
plist</b> qui permet de g&eacute;n&eacute;rer le fichier PLIST au sein
du r&eacute;pertoire <i>pkg</i>. Ce fichier est le candidat pour toute
cr&eacute;ation de liste de paquetages.
d499 2
a500 2
Attention! Les fichiers sont trouv&eacute;s par datation. Ceci signifie
que le syst&egrave;me ne r&eacute;alise PAS les t&acirc;ches suivantes :
d503 2
a504 2
lister les fichiers install&eacute;s par 'tar' car leur datation ne sera
pas modifi&eacute;e et ne seront pas trouv&eacute;s par 'find'.
d506 2
a507 2
mise &agrave; jour de <code>info/dir</code> si des fichiers .info sont
ajout&eacute;s. Egalement, v&eacute;rifiez que <code>info/dir</code> ne
d510 1
a510 1
tenter de faire quoi que ce soit de sp&eacute;cial avec des liens ou
d513 1
a513 1
pr&eacute;f&eacute;rons la prudence pour tout ce qui touche aux
d517 4
a520 4
Consultez attentivement le fichier `PLIST' et v&eacute;rifiez que tout
ce qui est install&eacute; a &eacute;t&eacute; fait correctement et au
bon endroit. Tout ce qui n'est pas install&eacute; mais qui doit
l'&ecirc;tre doit &ecirc;tre list&eacute; dans une r&egrave;gle 'post-
d524 2
a525 2
Les portages qui installent des librairies partag&eacute;es auront un
fichier suppl&eacute;mentaire, nomm&eacute; PFRAG.shared.
d527 2
a528 2
PLIST d&eacute;crit les fichiers indiquant, pour chaque architecture, si
les librairies partag&eacute;es sont ou non support&eacute;es.
d530 7
a536 7
PFRAG.shared ne d&eacute;crit que les fichiers qui sont install&eacute;s
de mani&egrave;re additionnelle sur les architectures qui supportent les
librairies partag&eacute;es.
<li>
PFRAG.noshared ne d&eacute;crit que les fichiers qui sont
install&eacute;s de mani&egrave;re suppl&eacute;mentaire sur les
architectures qui ne supportent pas les librairies partag&eacute;es.
d540 2
a541 2
Continuez &agrave; retirer le paquetage install&eacute; et installez
&agrave; nouveau encore et encore jusqu'&agrave; la perfection. Par
d543 8
a550 8
parfaitement et qu'il peut &eacute;galement &ecirc;tre retir&eacute;
sans aucun probl&egrave;me ou conflit. `pkg_delete &lt;nom de
paquetage&gt;' sera utilis&eacute; pour retirer le logiciel tandis que
`sudo make reinstall' sera utilis&eacute; pour effectuer une
r&eacute;installation. Consultez la page man de `pkg_create' pour
&eacute;tudier les diff&eacute;rentes commandes disponibles qui peuvent
&ecirc;tre ajout&eacute;es &agrave; PLIST pour vous assurer que tout est
nettoy&eacute; correctement. Apr&egrave;s avoir retir&eacute; le
d555 1
a555 1
ne doit lister que les noms standards de r&eacute;pertoires.
d558 3
a560 3
Testez le paquetage lui-m&ecirc;me. Apr&egrave;s l'installation du
portage, la commande <code>make package</code> est utilis&eacute;e pour
cr&eacute;er un paquetage. Pour tester le paquetage, utilisez d'abord la
d562 2
a563 2
r&eacute;sultats obtenus doivent correspondre <b>EXACTEMENT</b> aux
r&eacute;sultats obtenus par l'utilisation de la commande `make
d567 1
a567 1
Envoyez un email &agrave; l'adresse
d569 2
a570 2
note indiquant vos commentaires et les tests men&eacute;s. Attachez le
portage &agrave; cet email et envoyez-le.
d579 3
a581 3
facile &agrave; trouver, et que son ordre d'octets est &agrave;
l'inverse de celui de la plateforme i386 ; de la m&ecirc;me
mani&egrave;re, si vous r&eacute;alisez votre portage sur SPARC la
d587 2
a588 2
obtiendrez d'autres testeurs. Testez &agrave; nouveau sur votre
plateforme. Ensuite, r&eacute;pondez &agrave; toute personne et proposez-
d593 1
a593 1
vous ne disposez pas de droits d'&eacute;criture CVS, demandez &agrave;
d599 8
a606 8
Si vous &ecirc;tes un d&eacute;veloppeur disposant d'un acc&egrave;s
CVS, ins&eacute;rez votre portage logiciel. Nous pr&eacute;f&eacute;rons
l'utilisation de "import" pour importer votre nouveau port, plut&ocirc;t
que d'ajouter des centaines (ou plus) de fichiers de mani&egrave;re
individuelle. Import utilise des num&eacute;ros de version de type
&quot;branche vendeur&quot; comme 1.1.1.1 mais ne vous inqui&eacute;tez
pas &agrave; ce sujet ! :-)<br> Si vous modifiez un fichier de
mani&egrave;re sp&eacute;cifique (&eacute;dition puis cvs commit), la
d609 5
a613 5
En r&eacute;sum&eacute;, l'importation sera utilis&eacute;e &agrave; la
cr&eacute;ation du portage logiciel. A partir de ce stade, &quot;cvs
add&quot; et &quot;cvs rm&quot; seront utilis&eacute;s pour ajouter ou
retirer des fichiers, tandis que le cycle classique d'&eacute;dition
puis commit sera utilis&eacute;. Vous pouvez utiliser quelque chose
d617 1
a617 1
$ make clean    # &eacute;vitez d'envoyer vos fichiers de travail dans le CVS !
d622 2
a623 2
-d cvs.openbsd.org:/cvs indique o&ugrave; se trouve le cvs. Vous pouvez
l'ignorer si vous avez une variable locale CVSROOT d&eacute;finie.
d628 2
a629 2
ports/lang/kaffe1 est le chemin relatif o&ugrave; votre portage sera
plac&eacute; par rapport au /cvs
d631 2
a632 2
<i>VotreNom</i> (remplac&eacute; par votre nom de login) est le 'tag
   vendeur'. Vous &ecirc;tes le vendeur puisque vous l'importez.
d639 2
a640 2
Comme exemple r&eacute;el, voici la sortie obtenue par la mise en place
d'un portage que nous avons r&eacute;alis&eacute; le 8 septembre 1998:
d662 2
a663 2
Enfin, ajoutez une entr&eacute;e d'une ligne pour le nouveau portage
dans le Makefile du r&eacute;pertoire parent; par exemple si nous
d665 1
a665 1
&eacute;galement au fichier ports/lang/Makefile.
d668 1
a668 1
Vous <b>devez maintenir le portage ! </b>Si jamais un probl&egrave;me
d670 2
a671 2
faire pour maintenir votre portage &agrave; jour. En d'autres mots,
cycle de construction du portage, mise &agrave; jour, re-cycle de
d675 4
a678 4
Lors de la mise &agrave; jour d'un portage, n'oubliez pas de traiter les
d&eacute;pendances ! Vous ne devez pas provoquer un disfonctionnement en
modifiant votre portage, dont d'autres logiciels peuvent d&eacute;pendre
! En cas de probl&egrave;me si votre portage demande la mise &agrave;
d680 3
a682 3
derniers. De la m&ecirc;me mani&egrave;re, surveillez tout portage
pouvant affecter les v&ocirc;tres et pr&eacute;parez vous &agrave; des
mises &agrave; jour sans &ecirc;tre toujours pr&eacute;venu(e) &agrave;
d686 3
a688 3
Enfin, nous tenons &agrave; vous remercier pour tous les efforts que
cela r&eacute;pr&eacute;sente et que vous acceptez de prendre en charge
pour am&eacute;liorer l'arbre des &quot;ports&quot; d'OpenBSD qui sans
d697 1
a697 1
$Translation: checklist.html,v 1.12 2004/03/25 06:21:23 saad Exp $<br>
@


1.8
log
@Sync with Steelix CVS
@
text
@d56 2
a57 3
le faire ? Vous trouverez toutes les informations requises sur cette
page : <a href="http://www.openbsd.org/anoncvs.html">
http://www.openbsd.org/anoncvs.html</a>. 
d255 2
a256 2
nous saurons pourquoi les valeurs PERMIT_* sont positionnées de cette
manière.
d341 1
a341 1
Essayez de paramétrer <code>SEPARATE_BUILD</code>. 
d695 2
a696 2
Originally [OpenBSD: checklist.html,v 1.58 ]<br>
$Translation: checklist.html,v 1.11 2004/02/13 23:04:14 saad Exp $<br>
@


1.7
log
@Sync with Steelix CVS
@
text
@d210 110
a319 84
<br><li> Testez l'extraction du portage &agrave; l'aide de la commande <b>make extract</b>. 
    Vous devez v&eacute;rifier avec soin o&ugrave; se trouve la base des sources. 
    Il s'agit normalement de <i>w-${PKGNAME}${FLAVOR_EXT}/${DISTNAME}</i>. Vous 
    aurez peut-&ecirc;tre besoin de modifier la variable WRKDIST du Makefile si 
    cette base de sources est diff&eacute;rente. <br>
    <br>
  <li>Lisez la documentation d'installation et notez que la construction de port 
    doit se compl&eacute;ter et prendre en compte toute option sp&eacute;ciale 
    requise. <br>
    <br>
  <li>Maintenant vous devez prendre le temps de consid&eacute;rer s&eacute;rieusement 
    et avec un grand soin les licences (ou la licence) qui couvre votre portage 
    logiciel. Certains logiciels peuvent &ecirc;tre redistribu&eacute;s librement, 
    mais pas tous. Afin de vous aider, vous devez r&eacute;pondre &agrave; quatre 
    questions. Il s'agit des variables PERMIT_* que vous trouverez au sein du 
    fichier Makefile. 
    <ul>
      <li> PERMIT_PACKAGE_CDROM indique si le portage peut &ecirc;tre distribu&eacute; 
        sur support CD-Rom. 
      <li> PERMIT_PACKAGE_FTP indique si le portage peut &ecirc;tre plac&eacute; 
        sur des sites FTP. 
      <li> PERMIT_DISTFILES_CDROM indique si nous avons le droit de placer en 
        miroir les distfiles sur support CD-Rom. 
      <li> PERMIT_DISTFILES_FTP indique si nous avons le droit de placer les distfiles 
        en miroir sur des sites FTP. 
    </ul>
    <p> A chaque fois que l'un de ces usages est autoris&eacute;, indiquez &quot;Yes&quot;. 
      Si ce n'est pas le cas, vous devez expliquer pourquoi dans une cha&icirc;ne 
      commentaire. Soyez <b>attentif (attentive) </b>aux conditions sp&eacute;ciales 
      qui sont impos&eacute;es <b>apr&egrave;s </b>l'installation du logiciel. 
      Par exemple, une s&eacute;rie de logiciels impose qu'un exemplaire de leur 
      licence soit install&eacute;e et mentionn&eacute;e &agrave; l'utilisateur. 
      Dans ce cas, nous vous recommandons de regrouper toutes les licences au 
      m&ecirc;me endroit pour que l'utilisateur puisse tout lire sans rien oublier 
      et rester bien inform&eacute; : <code>/usr/local/share/DISTNAME/</code>. 
      <br>
      <br>
  <li>Ajoutez les options de configuration au Makefile et cr&eacute;ez un script 
    de configuration au besoin. 
    <ul>
      <li> Vous pouvez ajouter un script de configuration de votre portage nomm&eacute; 
        `configure' et le situer dans un r&eacute;pertoire <code>scripts/</code>. 
        Ce script sera ex&eacute;cut&eacute; avant toute configuration sp&eacute;cifi&eacute;e 
        par la variable locale CONFIGURE_STYLE. 
      <li> Si le configure GNU est utilis&eacute;, vous devriez utiliser ./configure 
        --help afin de d&eacute;terminer quelles options sont disponibles. 
      <li> Tout ce que vous pourriez &ecirc;tre amen&eacute;(e) &agrave; modifier 
        peut &ecirc;tre modifi&eacute; en utilisant le drapeau de configuration 
        -option dans le param&egrave;tre CONFIGURE_ARGS du fichier Makefile. 
      <li> Utilisez CONFIGURE_ARGS+= pour rajouter une ou des options &agrave; 
        cette variable locale. Si vous utilisez CONFIGURE_ARGS= vous risquez d'en 
        &eacute;craser tout contenu pr&eacute;alable. 
    </ul>
    <br>
  <li> Essayez de construire le portage logiciel &agrave; l'aide de la commande 
    <b>make build</b>. 
    <ul>
      <li> Si vous avez de la chance, tout sera construit sans la moindre erreur 
        (bonne chance !) 
      <li> Si vous obtenez une erreur, vous devrez g&eacute;n&eacute;rer un ou 
        plusieur patch qui seront utili&eacute;s par votre portage, afin de permettre 
        sa compilation et installation sous OpenBSD. D&eacute;terminez ce qui 
        doit &ecirc;tre modif&eacute;, et cr&eacute;ez un patch. 
      <li> Les patch doivent toujours s'appliquer depuis la base ${WRKDIST}. 
      <li> Le moyen le plus facile de v&eacute;rifier que le patch fonctionne 
        est de tout &quot;nettoyer&quot; &agrave; l'aide de <b>make clean patch</b>. 
        Cette commande va nettoyer le r&eacute;pertoie de travail de tous fichiers, 
        faire &agrave; nouveau l'extraction et appliquer votre patch. 
    </ul>
    <br>
  <li> Commencez un cycle de <b>make build</b>, puis produisez un patch (ou utilisez 
    <b>make update-patches</b>) puis <b>make clean patch</b>. 
    <ul>
      <li> Les patch doivent &ecirc;tre plac&eacute;s dans <i>patches/</i> et 
        doivent &ecirc;tre nomm&eacute;s patch-* o&ugrave; vous remplacerez * 
        par quelque chose de compr&eacute;hensible. Nous vous recommandons de 
        nommer vos patch patch-FILENAME o&ugrave; FILENAME est le nom du fichier 
        qui sera modifi&eacute; par le patch. (<tt>make update-patches</tt> le 
        fait automatiquement pour vous) 
      <li> Appliquer PATCHFILES est la premi&egrave;re &eacute;tape du stade des 
        patch. Vous pouvez l'invoquer s&eacute;par&eacute;ment &agrave; l'aide 
        de make distpatch, une cible utile pour les porteurs d'applications. Vous 
        pouvez ignorer cette &eacute;tape si vous n'avez pas fix&eacute; de valeur 
        &agrave; cette variable. 
d338 16
a353 2
<b>Veuillez fournir un exemplaire </b>de vos correctifs &agrave; l'auteur du
   logiciel.
d355 127
a481 116
    <br>
  <li> Essayez de fixer <code>SEPARATE_BUILD</code>. 
    <ul>
      <li> Si le portage peut construire des fichiers objets en-dehors de l'arbre 
        des sources, cela est pr&eacute;f&eacute;rable et permet de conserver 
        l'arbre des sources dans un &eacute;tat plus &quot;propre&quot; (de nombreux 
        programmes qui utilisent <code>CONFIGURE_STYLE=gnu</code> le peuvent) 
        et cela simplifie en outre la gestion de l'arbre de sources sur plusieurs 
        architectures. 
      <li> Cela peut vous &eacute;pargner des efforts, et vous permet de relancer 
        facilement un cycle de construction du portage depuis le <code>configure</code>. 
    </ul>
    <br>
  <li> Parcourez avec attention la sortie obtenue (s'il y en a) et modifiez toute 
    option utile dans le Makefile. Pour r&eacute;p&eacute;ter la commande utilisez 
    `<b>make clean configure</b>'. 
    <p> Note: v&eacute;rifiez que les fichiers d&eacute;pendants de l'h&ocirc;te 
      soient plac&eacute;s soit dans <i>/etc</i> ou <i>/etc/&lt;name&gt;</i>, mais 
      <strong>NE REMPLACEZ NI NE MODIFIEZ JAMAIS<b> </b></strong>de fichiers existants 
      dans /etc. Il vaut mieux placer ces fichiers dans <i>/usr/local/share/&lt;name&gt;</i> 
      puis copiez vers <i>/etc</i> ou <i>/etc/&lt;name&gt;</i> seulement si les 
      fichiers n'existent pas. Si les fichiers existent, affichez un message et 
      indiquez &agrave; l'utilisateur du syst&egrave;me quels fichiers doivent 
      &ecirc;tre modifi&eacute;s. Cela permet &eacute;galement de garantir que 
      les fichiers seront inclus dans le paquetage puisque tout ce qui se trouve 
      dans <i>/usr/local</i> sera inclus dans PLIST. Une fois un paquetage install&eacute;, 
      le contenu de <code>pkg/MESSAGE</code> sera affich&eacute; et le cycle de 
      construction du paquetage sera termin&eacute;. 
    <p> OpenBSD situe les fichiers comme suit : 
    <pre>
       ex&eacute;cutables utilisateur :                                 /usr/local/bin
       ex&eacute;cutables de l'administrateur :                         /usr/local/sbin
       programmes ex&eacute;cutables :                                          /usr/local/libexec
       librairies :                                                     /usr/local/lib
       donn&eacute;es ind&eacute;pendantes de l'architecture :                  /usr/local/lib/&lt;nom&gt;
       fichiers inclus install&eacute;s :                                       /usr/local/include ou
                                                                        /usr/local/include/&lt;nom&gt;
       donn&eacute;es sp&eacute;cifiques &agrave; la machine :                          /etc ou /etc/&lt;nom&gt;
       &eacute;tat local :                                                      /var/run
       fichiers contenant les scores des jeux :                         /var/games
       fichiers info GNU :                                              /usr/local/info
       pages man :                                                      /usr/local/man/...
       donn&eacute;es ind&eacute;pendantes de l'architecture en lecture seule : /usr/local/share/&lt;nom&gt;
       documentations diverses :                                        /usr/local/share/doc/&lt;nom&gt;
    </pre>
    Commencez un cycle de compilations jusqu'&agrave; ce que le portage soit termin&eacute;. 
    Patchez (voir ci-dessus), puis clean et make jusqu'&agrave; la production 
    du portage. Vous devez <b>&eacute;liminer tous les "warning"</b> obtenus en 
    particulier ceux en rapports avec la s&eacute;curit&eacute; du code produit.<br>
    <br>
  <li> Controllez la s&eacute;mantique de SEPARATE_BUILD. Vous ne devez le faire 
    que si votre portage utilise la variable locale SEPARATE_BUILD. Id&eacute;alement, 
    le portage ne doit pas modifier de fichiers dans ${WRKSRC} <b>apr&egrave;s 
    l'application de votre patch</b>. Vous pouvez le v&eacute;rifier en retirant 
    vos droits d'&eacute;criture &agrave; cette &eacute;tape sur ${WRKSRC}. Ensuite 
    vous pouvez utiliser <code>SEPARATE_BUILD=concurrent</code> -- et v&eacute;rifier 
    qu'une autre personne peut, sur une autre architecture, obtenir la m&ecirc;me 
    compilation. Sinon, utilisez <code>SEPARATE_BUILD=simple</code> -- si la construction 
    du portage sur plusieurs architectures peut provoquer des probl&egrave;mes, 
    &agrave; mesure que certains fichiers seront r&eacute;g&eacute;n&eacute;r&eacute;s 
    &agrave; certains moments. <br>
    <br>
  <li> Ajoutez une ligne <i>COMMENT</i> dans le Makefile. COMMENT est une <b>COURTE 
    </b>description du portage (au maximum 60 caract&egrave;res) Vous ne <b>DEVEZ 
    PAS INCLURE </b>le nom du paquetage dans la description ou son num&eacute;ro 
    de version. Vous ne devez pas faire d&eacute;buter cette ligne de commentaire 
    par un caract&egrave;re en majuscule sauf si la signification s&eacute;mantique 
    doit &ecirc;tre sans aucune ambigu&iuml;t&eacute; et <b>NE TERMINEZ PAS CETTE 
    LIGNE </b>par un point. <b>EN AUCUN CAS VOUS NE DEVEZ COMMENCER PAR UN ARTICLE 
    INDEFINI COMME 'un' OU 'une' ; retirez tout article au d&eacute;but</b><strong>.</strong> 
    <br>
    <br>
  <li>Editez <i>pkg/DESCR et pkg/PLIST</i>. 
    <ul>
      <li> DESCR est une description plus &eacute;tendue du portage. Il peut s'agir 
        d'un ou plusieurs paragraphes expliquant de mani&egrave;re consise en 
        quoi consiste le logiciel. Nous vous invitons &agrave; terminer chaque 
        ligne apr&egrave;s 72 caract&egrave;res ce que vous pouvez faire apr&egrave;s 
        l'&eacute;criture de ce fichier en utilisant la commande suivante : fmt 
        -w 72
      <li> PLIST doit rester vide pour l'instant. 
    </ul>
    <br>
  <li>Si l'application a besoin de cr&eacute;er un utilisateur ou un groupe,
  choisissez le plus petit identifiant libre dans 
  <code>/usr/ports/infrastructure/db/user.list</code> afin de l'utiliser
  pour votre port et soyez certain que celui-ci soit ajout&eacute; &agrave; ce 
  m&ecirc;me fichier lors de son entr&eacute;e dans l'arbre.
  <br><br>
  <li> Installez l'application en utilisant la commande <b>make install</b>. Si 
    votre portage logiciel utilise des librairies dynamiques, v&eacute;rifiez 
    leur table de symboles &agrave; l'aide de la commande <code>nm</code>, car 
    parfois un logiciel ne les r&eacute;f&eacute;rence pas correctement ce qui 
    va provoquer le dysfonctionnement du logiciel par la suite une fois que le 
    binaire &agrave; fait l'objet d'un strip alors qu'ils fonctionnent parfaitmenent 
    avant le strip. Toutefois, les binaires DEVRAIENT faire l'application d'un 
    strip avant leur installation ; utilisez la commande <code>file</code> pour 
    d&eacute;terminer si le binaire a fait ou non l'objet d'un strip. Si le portage 
    contient d&eacute;j&agrave; des instructions pour r&eacute;aliser un strip 
    du binaire avant son installation (par exemple 'install-strip') utilisez ce 
    dernier; dans le cas contraire, ajoutez cette option dans le Makefile afin 
    de rendre l'application d'un strip sur les binaires possible. <br>
    <br>
  <li><b>V&eacute;rifier une nouvelle fois et avec le plus grand soin que votre 
    portage ne contient pas de trous de s&eacute;curit&eacute; potentiels</b>. 
    Les programmes qui fonctionnent en setiud o&ugrave; qui acc&egrave;dent au 
    r&eacute;seau doivent faire l'objet d'un audit complet et de grand soin. Nous 
    vous invitons &agrave; &eacute;tudier nos <a href="../porting.html#Security">recommandations 
    quant &agrave; la s&eacute;curit&eacute;</a> pour mener &agrave; bien cette 
    &eacute;tape tr&egrave;s importante. Vous devez tout enregistrer et &eacute;tudier 
    en ce qui concerne tout changement, et l'inscrire au sein du fichier <code>/SECURITY</code>. 
    Ce fichier doit lister avec pr&eacute;cision tout probl&egrave;me de s&eacute;curit&eacute; 
    potentiel introduit par votre portage, avec les patch qui accompagnent les 
    programmes afin que quiconque qui prenne votre portage en main puisse savoir 
    ce qu'il reste &agrave; v&eacute;rifier. Par exemple : 
    <pre>&#36;OpenBSD&#36;
d484 2
a485 1
         l'appel de la fonction mktemp (fonction wrapper &agrave; do_mktemp) me semble incorrecte.
d487 2
a488 1
      Ce serveur utilise une grande quantit&eacute; de fonctions strlcpy/strlcat/snprintf.
d490 63
a552 46
  <li> Cr&eacute;ez le fichier pkg/PLIST. Une fois l'installation compl&egrave;te, 
    utilisez la commande pour d&eacute;veloppeurs <b>make plist</b> qui permet 
    de g&eacute;n&eacute;rer le fichier PLIST au sein du r&eacute;pertoire <i>pkg</i>. 
    Ce fichier est le candidat pour toute cr&eacute;ation de liste de paquetages. 
    <p> Attention! Les fichiers sont trouv&eacute;s par datation. Ceci signifie 
      que le syst&egrave;me ne r&eacute;alise PAS les t&acirc;ches suivantes : 
    <ul>
      <li> lister les fichiers install&eacute;s par 'tar' car leur datation ne 
        sera pas modifi&eacute;e et ne seront pas trouv&eacute;s par 'find'. 
      <li> mise &agrave; jour de <code>info/dir</code> si des fichiers .info sont 
        ajout&eacute;s. Egalement, v&eacute;rifiez que <code>info/dir</code> ne 
        fait pas partie du PLIST. 
      <li> tenter de faire quoi que ce soit de sp&eacute;cial avec des liens ou 
        liens symboliques.Un test avec tar montre que ce dernier traite les liens 
        et liens symboliques correctement, mais nous pr&eacute;f&eacute;rons la 
        prudence pour tout ce qui touche aux paquetages.
    </ul>
    <p> Consultez attentivement le fichier `PLIST' et v&eacute;rifiez que tout ce qui est 
      install&eacute; a &eacute;t&eacute; fait correctement et au bon endroit. 
      Tout ce qui n'est pas install&eacute; mais qui doit l'&ecirc;tre doit &ecirc;tre 
      list&eacute; dans une r&egrave;gle 'post-install' au sein du Makefile. 
    <p> Les portages qui installent des librairies partag&eacute;es auront un 
      fichier suppl&eacute;mentaire, nomm&eacute; PFRAG.shared. 
    <ul>
      <li> PLIST d&eacute;crit les fichiers indiquant, pour chaque architecture, 
        si les librairies partag&eacute;es sont ou non support&eacute;es. 
      <li> PFRAG.shared ne d&eacute;crit que les fichiers qui sont install&eacute;s 
        de mani&egrave;re additionnelle sur les architectures qui supportent les 
        librairies partag&eacute;es.
      <li> PFRAG.noshared ne d&eacute;crit que les fichiers qui sont install&eacute;s 
        de mani&egrave;re suppl&eacute;mentaire sur les architectures qui ne supportent 
        pas les librairies partag&eacute;es. 
    </ul>
    <br>
  <li> Continuez &agrave; retirer le paquetage install&eacute; et installez &agrave; 
    nouveau encore et encore jusqu'&agrave; la <b>perfection</b>. Par &quot;perfection&quot; 
    nous voulons dire que le portage logiciel s'installe parfaitement et qu'il 
    peut &eacute;galement &ecirc;tre retir&eacute; sans aucun probl&egrave;me 
    ou conflit. `pkg_delete &lt;nom de paquetage&gt;' sera utilis&eacute; pour 
    retirer le logiciel tandis que `sudo make reinstall' sera utilis&eacute; pour 
    effectuer une r&eacute;installation. Consultez la page man de `pkg_create' 
    pour &eacute;tudier les diff&eacute;rentes commandes disponibles qui peuvent 
    &ecirc;tre ajout&eacute;es &agrave; PLIST pour vous assurer que tout est nettoy&eacute; 
    correctement. Apr&egrave;s avoir retir&eacute; le portage, la commande suivante 
    : 
    <pre>
d555 61
a615 48
    ne doit lister que les noms standards de r&eacute;pertoires. <br>
    <br>
  <li> Testez le paquetage lui-m&ecirc;me. Apr&egrave;s l'installation du portage, 
    la commande <code>make package</code> est utilis&eacute;e pour cr&eacute;er 
    un paquetage. Pour tester le paquetage, utilisez d'abord la commande <code>pkg_delete</code> 
    puis utilisez <code>pkg_add</code> Les r&eacute;sultats obtenus doivent correspondre 
    <b>EXACTEMENT </b>aux r&eacute;sultats obtenus par l'utilisation de la commande 
    `make install'. <br>
    <br>
  <li> Envoyez un email &agrave; l'adresse <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> 
    avec une courte note indiquant vos commentaires et les tests men&eacute;s. 
    Attachez le portage &agrave; cet email et envoyez-le. 
    <p> Essayez de faire tester votre portage sur le plus grand nombre de plates-formes 
      possibles. 
    <ul>
      <li> La plateforme DEC Alpha est excellente car elle n'utilise que des librairies 
        statiques et que <code>sizeof(int) != sizeof(long)</code>. 
      <li> Sun SPARC est aussi une excellente plateforme de test car elle est 
        facile &agrave; trouver, et que son ordre d'octets est &agrave; l'inverse 
        de celui de la plateforme i386 ; de la m&ecirc;me mani&egrave;re, si vous 
        r&eacute;alisez votre portage sur SPARC la plateforme i386 sera la meilleure 
        plateforme de test pour vous.
    </ul>
    <br>
  <li>Incorporez toutes les informations obtenues en retour que vous obtiendrez 
    d'autres testeurs. Testez &agrave; nouveau sur votre plateforme. Ensuite, 
    r&eacute;pondez &agrave; toute personne et proposez-leur votre nouveau portage. 
    <br>
    <br>
  <li>Enfin, incorporez votre logiciel dans l'abre des "ports" d'OpenBSD. Si vous 
    ne disposez pas de droits d'&eacute;criture CVS, demandez &agrave; quelqu'un 
    qui en dispose sur <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> 
    de le faire pour vous. <br>
    <br>
  <li> Si vous &ecirc;tes un d&eacute;veloppeur disposant d'un acc&egrave;s CVS, 
    ins&eacute;rez votre portage logiciel. Nous pr&eacute;f&eacute;rons l'utilisation 
    de "import" pour importer votre nouveau port, plut&ocirc;t que d'ajouter des 
    centaines (ou plus) de fichiers de mani&egrave;re individuelle. Import utilise 
    des num&eacute;ros de version de type &quot;branche vendeur&quot; comme 1.1.1.1 
    mais ne vous inqui&eacute;tez pas &agrave; ce sujet ! :-)<br>
    Si vous modifiez un fichier de mani&egrave;re sp&eacute;cifique (&eacute;dition 
    puis cvs commit), la nouvelle version sera alors 1.2
    <p> En r&eacute;sum&eacute;, l'importation sera utilis&eacute;e &agrave; la 
      cr&eacute;ation du portage logiciel. A partir de ce stade, &quot;cvs add&quot; 
      et &quot;cvs rm&quot; seront utilis&eacute;s pour ajouter ou retirer des 
      fichiers, tandis que le cycle classique d'&eacute;dition puis commit sera 
      utilis&eacute;. Vous pouvez utiliser quelque chose comme ceci :
    <pre>
d619 1
a619 1
        <I>VotreNom</I> VotreNom<I>_YYYY-MMM-DD</I>
d621 21
a641 16
    <ul>
      <li> -d cvs.openbsd.org:/cvs indique o&ugrave; se trouve le cvs. Vous pouvez 
        l'ignorer si vous avez une variable locale CVSROOT d&eacute;finie. 
      <li> -m 'kaffe port' est votre message de login. Vous pouvez indiquer ce 
        que vous voulez
      <li> ports/lang/kaffe1 est le chemin relatif o&ugrave; votre portage sera 
        plac&eacute; par rapport au /cvs
      <li> <i>VotreNom</i> (remplac&eacute; par votre nom de login) est le 'tag 
        vendeur'. Vous &ecirc;tes le vendeur puisque vous l'importez. 
      <li> <i>VotreNom_YYYY-MMM-DD</i> (e.g., ian_2000-Jan-01) est le 'tag de 
        distribution vendeur'. Valeur informative. 
    </ul>
    <br>
    Comme exemple r&eacute;el, voici la sortie obtenue par la mise en place d'un 
    portage que nous avons r&eacute;alis&eacute; le 8 septembre 1998: 
    <pre>
d660 24
a683 18
  <li> Enfin, ajoutez une entr&eacute;e d'une ligne pour le nouveau portage dans 
    le Makefile du r&eacute;pertoire parent; par exemple si nous ajoutons le portage 
    de ports/lang/kaffe1, nous l'ajoutons &eacute;galement au fichier ports/lang/Makefile. 
    <br>
    <br>
  <li>Vous <b>devez maintenir le portage ! </b>Si jamais un probl&egrave;me survient, 
    une nouvelle version ou quoi que ce soit, vous devez tout faire pour maintenir 
    votre portage &agrave; jour. En d'autres mots, cycle de construction du portage, 
    mise &agrave; jour, re-cycle de construction, etc.<br>
    <br>
  <li>Lors de la mise &agrave; jour d'un portage, n'oubliez pas de traiter les 
    d&eacute;pendances ! Vous ne devez pas provoquer un disfonctionnement en modifiant 
    votre portage, dont d'autres logiciels peuvent d&eacute;pendre ! En cas de 
    probl&egrave;me si votre portage demande la mise &agrave; jour d'autres portages 
    sous la charge d'autres personnes, contactez ces derniers. De la m&ecirc;me 
    mani&egrave;re, surveillez tout portage pouvant affecter les v&ocirc;tres et pr&eacute;parez 
    vous &agrave; des mises &agrave; jour sans &ecirc;tre toujours pr&eacute;venu(e) 
    &agrave; l'avance.
d685 5
a689 3
Enfin, nous tenons &agrave; vous remercier pour tous les efforts que cela r&eacute;pr&eacute;sente 
et que vous acceptez de prendre en charge pour am&eacute;liorer l'arbre des &quot;ports&quot; 
d'OpenBSD qui sans tous ces efforts n'existerait pas : merci !
d696 2
a697 2
Originally [OpenBSD: checklist.html,v 1.55 ]<br>
$Translation: checklist.html,v 1.7 2004/01/02 20:51:55 saad Exp $<br>
@


1.6
log
@Sync with Steelix CVS
@
text
@d9 1
a9 1
<meta name="copyright" content="This document copyright 1998-2003 by OpenBSD.">
d600 2
a601 2
Originally [OpenBSD: checklist.html,v 1.54 ]<br>
$Translation: checklist.html,v 1.6 2003/12/11 21:28:22 saad Exp $<br>
@


1.5
log
@Sync with Steelix CVS
@
text
@d384 1
a384 1
    INDETERMINE COMME 'un' OU 'une' ; retirez tout article au d&eacute;but</b><strong>.</strong> 
d600 2
a601 2
Originally [OpenBSD: checklist.html,v 1.53 ]<br>
$Translation: checklist.html,v 1.5 2003/11/18 22:25:24 saad Exp $<br>
@


1.4
log
@sync with steelix translation CVS
@
text
@d9 1
a9 1
<meta name="copyright" content="This document copyright 1998-2002 by OpenBSD.">
d14 1
a14 1
<body text=Black bgcolor=White link="#23238E">
d24 2
a25 2
questions &agrave; l'adresse suivante :<a
href="mailto:ports@@openbsd.org"> ports@@openbsd.org</a>.
d32 2
a33 2
inscrivez-vous via : <a href="mailto:ports@@openbsd.org">
ports@@openbsd.org.</a>
d600 2
a601 2
Originally [OpenBSD: checklist.html,v 1.52 ]<br>
$Translation: checklist.html,v 1.4 2003/11/03 20:53:31 saad Exp $<br>
@


1.3
log
@sync with steelix translation CVS
@
text
@d1 605
a605 555
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="resource-type" content="document">
<meta name="description" CONTENT="How to make/update an OpenBSD port.">
<meta name="keywords" content="openbsd,ports">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 1998-2002 by OpenBSD.">

<title>Portage logiciel sous OpenBSD</title>
</head>
 
<body text=Black bgcolor=White link="#23238E">
<a href="index.html"><img alt="[OpenBSD]" height="30" width="141" src="../images/smalltitle.gif" border="0"></a>

<h2><font color="#e00000">Points &agrave; v&eacute;rifier pour chaque portage 
  logiciel sous OpenBSD</font></h2>

Ce document d&eacute;crit comment concevoir ou mettre &agrave; jour un &quot;port&quot;. 
Il s'agit essentiellement d'une liste utile &agrave; consulter &agrave; chaque 
fois, mais elle n'est ni complete, ni parfaite. Nous vous invitons donc 
&agrave; proposer vos commentaires et questions &agrave; l'adresse suivante :<a href="mailto:ports@@openbsd.org"> 
ports@@openbsd.org</a>. 
<hr>
<ol>
  <li> Si vous voulez prendre en charge la gestion d'un portage logiciel, inscrivez-vous 
    via : <a href="mailto:ports@@openbsd.org"> ports@@openbsd.org.</a> 
    <ul>
      <li>Cette liste est consacr&eacute;e &agrave; toutes les discussions et 
        votre inscription y est fortement recommand&eacute;e. 
      <li>La lecture des envois pr&eacute;c&eacute;dents sur cette liste est 
        essentiel : des annonces ou explications cruciales s'y trouvent. 
      <li> Vous pourrez y cotoyer des personnes exp&eacute;riment&eacute;es dans 
        ce domaine. Ils pourront vous offrir des conseils ou tester vos portages. 
    </ul>
    <br>
  <li>Prendre en charge la gestion d'un portage signifie <b>beaucoup plus </b>que 
    de proposer des logiciels. Pour chaque logiciel, vous vous engagez &agrave; 
    maintenir vos portages <b>&agrave; jour</b> et r&eacute;pondre aux questions 
    des utilisateurs qui les utiliseront : comment activer ou d&eacute;sactiver 
    certaines fonctionalit&eacute;s, etc. <br>
    <br>
  <li>Votre d&eacute;cision prise, vous devez obtenir une copie locale sur votre 
    disque de l'arbre des ports &agrave; l'aide de <b>cvs</b>. Comment le faire 
    ? Vous trouverez toutes les informations requises sur cette page : <a href="http://www.openbsd.org/anoncvs.html"> 
    http://www.openbsd.org/anoncvs.html</a>. <br>
    <br>
  <li> Choisissez o&ugrave;, dans quel dossier, sera plac&eacute; votre portage 
    et cr&eacute;ez l'infrastructure de base requise. Utilisez le fichier Makefile 
    modele <code>/usr/ports/infrastructure/templates/Makefile.template</code>. 
    NEED_VERSION est consid&eacute;r&eacute; <b>obsol&egrave;te </b>et vous ne 
    devez pas l'utiliser pour tous les nouveaux portages d&eacute;sormais : vous 
    devez mettre &agrave; jour votre arbre local de ports, ceci <b>incluant bsd.port.mk</b> 
    <ul>
      <li> Cr&eacute;ez le r&eacute;pertoire <code>pkg</code>. 
      <li> Cr&eacute;ez des fichiers vides <code>pkg/DESCR, pkg/PLIST</code>. 
    </ul>
    <br>
  <li> Ajoutez les portions &quot;fetch&quot; (de r&eacute;cup&eacute;ration) 
    au Makefile. 
    <ul>
      <li> Modifiez EXTRACT_SUFX si le suffixe des fichiers n'est pas .tar.gz. 
        D'autres exemples sont .tar.Z ou .tgz. 
      <li> Modifiez DISTNAME : cette variable locale doit contenir le nom du fichier, 
        sans son suffixe. Par exemple si votre portage logiciel est foo-1.0.tar.gz 
        alors DISTNAME doit contenir la cha&icirc;ne : foo-1.0. 
      <li> Modifiez MASTER_SITES pour contenir l'URL des r&eacute;pertoires qui 
        contiennent un exemplaire du fichier portant les sources. Par exemple 
        il peut s'agir de l'adresse ftp://ftp.openbsd.org/pub/OpenBSD/distfiles/. 
        <strong>N'oubliez pas la barre finale de l'adresse !</strong> Essayez 
        d'avoir au moins trois sites diff&eacute;rents pour chacun de vos portages. 
        Le site le plus fiable et rapide doit se trouver en premi&egrave;re position. 
      <li> Gardez &agrave; l'esprit que les variables locales suivantes sont utilis&eacute;es 
        pour identifier le fichier &agrave; r&eacute;cup&eacute;rer et dans cet 
        ordre : ${MASTER_SITES}${DISTNAME}${EXTRACT_SUFX}. Toutes ces variables 
        seront utilis&eacute;es. Il ne faut pas que DISTNAME contienne en cons&eacute;quence 
        le nom complet du fichier. 
      <li> Vous pourrez v&eacute;rifier que vous avez fix&eacute; correctement 
        ces variables en utilisant la commande : <b>make fetch-all</b>. 
    </ul>
    <p> Certains portages logiciels sont complexes et pour simplifier votre t&acirc;che, 
      des outils suppl&eacute;mentaires sont &agrave; votre disposition : 
    <ul>
      <li> Vous pouvez utiliser la variable locale PATCHFILES. Cette derni&egrave;re 
        doit contenir une liste de patch propos&eacute;s par l'origine du logiciel 
        (et non OpenBSD). On y trouve g&eacute;n&eacute;ralement des correctifs 
        de fiabilit&eacute; ou de s&eacute;curit&eacute;. 
      <li> Si vos portages sont disponibles au sein de sites miroirs majeurs tels 
        que GNU, SunSite ou CPAN, nous en proposons une liste de sitesau sein 
        du fichier /usr/ports/infrastructure/templates/network.conf.template. 
        Modifiez MASTER_SITES par : ${MASTER_SITE_GNU} ou ${MASTER_SITE_SUNSITE}, 
        etc. Pour simplifier ce processus, utilisez la construction ${MASTER_SITE_FOO:=subdir/} 
        pour rajouter le sous-r&eacute;pertoire contenant la distribution. 
      <li> Chaque portage contient une version sp&eacute;cifique d'un logiciel. 
        Une fois les fichiers r&eacute;cup&eacute;r&eacute;s, on v&eacute;rifie 
        un hachage pour s'assurer de leur int&eacute;grit&eacute; et la comparaison 
        sera effectu&eacute;e &agrave; partir des hachages que <b>vous </b>aurez 
        calcul&eacute;s. Pour &eacute;viter toute confusion, DISTFILES et PATCHFILES 
        doivent avoir des num&eacute;ros de version clairement identifiables : 
        ne r&eacute;cup&eacute;rez pas de fichier foo-latest.tar.gz s'il existe 
        un lien vers foo-1.0.5.tar.gz. Si c'est n&eacute;cessaire, contacter l'auteur 
        du logiciel afin de lui demander conseil et expliquez poliment pourquoi 
        vous devez pouvoir identifier clairement un num&eacute;ro de version dans 
        le fichier contenant les sources de votre portage en devenir. 
      <li> Si votre portage logiciel requiert plus de 5 DISTFILES + PATCHFILES 
        pour fonctionner, utilisez la variable locale DIST_SUBDIR pour &eacute;viter 
        de polluer et de rendre complexe la lecture de /usr/ports/distfiles par 
        les utilisateurs (et d&eacute;terminer qui fait partie de quoi). 
      <li> DIST_SUBDIR ne <b>doit pas </b>r&eacute;f&eacute;rencer de num&eacute;ros 
        de version. Lorsque le portage sera mis &agrave; jour vers une nouvelle 
        version, seuls les fichiers contenant les sources doivent &ecirc;tre modifi&eacute;s 
        : si DIST_SUBDIR est modifi&eacute;, tous les fichiers seront &agrave; 
        nouveau r&eacute;cup&eacute;r&eacute;s. Il faut penser &agrave; l'utilisateur 
        qui doit maintenir son syst&egrave;me, tout du moins pouvoir en consulter 
        l'&eacute;tat sans se perdre. 
      <li> A la fois DISTFILES et PATCHFILES ne proviennent pas n&eacute;cessairement 
        des m&ecirc;mes sites MASTER_SITES. Il est possible de d&eacute;finir 
        des sites suppl&eacute;mentaires &agrave; l'aide des variables locales 
        MASTER_SITES0 &agrave; MASTER_SITES9. Il vous suffit d'&eacute;crire DISTFILES=foo-1.0.5.tar.gz:5 
        pour r&eacute;cup&eacute;rer le fichier depuis le site contenu dans MASTER_SITES5 
        (notez le &quot;:5&quot;). 
      <li> Certains portages n'ont pas besoin de r&eacute;cup&eacute;rer tous 
        les fichiers en toute circonstance. Par exemple, les options de compilation 
        de certains portages logiciels d&eacute;finissent ce qui doit &ecirc;tre 
        compil&eacute; ou non, des sortes de &quot;modules&quot; optionnels. Si 
        une fonctionalit&eacute; pr&eacute;sente dans un module n'est pas utilis&eacute;e, 
        alors il n'est pas n&eacute;cessaire de r&eacute;cup&eacute;rer tous les 
        fichiers mais uniquement ceux qui sont requis. Certains composants sont 
        &eacute;galement sp&eacute;cifiques &agrave; certaines architectures mat&eacute;rielles 
        : tous ces fichiers optionnels doivent &ecirc;tre r&eacute;f&eacute;renc&eacute;s 
        dans la variable locale SUPDISTFILES. Lorsque des cibles de compilation 
        telles que makesum ou mirror-distfiles sont utilis&eacute;es, le syst&egrave;me 
        des Ports veillera &agrave; r&eacute;cup&eacute;rer tous les fichiers 
        optionnels qui ne sont pas toujours requis par l'utilisateur classique. 
    </ul>
    <br>
  <li> Cr&eacute;ez des hachages dans <i>distinfo</i> en tapant <b>make makesum</b>. 
    Vous <b>devez </b>ensuite v&eacute;rifier que ces hachages sont valides en 
    tapant <b>make checksum</b>. 
    <ul>
      <li> Dans certains cas, rares, il n'est pas possible de disposer de hachages 
        pour tester l'int&eacute;grit&eacute; des sources. Il est de votre <b>responsabilit&eacute; 
        </b>d'essayer de trouver par tout moyen possible un site d'archive fiable. 
        Communiquer avec l'auteur ou les auteurs du logiciel et la ou les personnes 
        en charge des sites contenant les archives du logiciel est fondamental 
        et tr&egrave;s d&eacute;sirable. Dans le pire des cas, vous pourrez utiliser 
        la variable locale IGNOREFILES pour marquer les fichiers pour lesquels 
        il n'est pas possible de disposer de hachages d'int&eacute;grit&eacute; 
        fiables. 
      <li> Tous les fichiers de DISTFILES seront trait&eacute;s durant la phase 
        d'extraction. EXTRACT_ONLY peut-&ecirc;tre utilis&eacute;e pour limiter 
        l'extraction aux seuls fichiers requis (peut &ecirc;tre vide). L'usage 
        habituel de cette variable est de personnaliser l'extraction : par exemple, 
        si certains DISTFILES doivent subir un traitement particulier, il seront 
        retir&eacute;s de EXTRACT_ONLY et g&eacute;r&eacute;s manuellement apr&egrave;s 
        la phase d'extraction. Pour des raisons historiques, make extract fixe 
        le r&eacute;pertoire de travail pendant l'extraction des fichiers. Ainsi, 
        il est tr&egrave;s inhabituel de fournir des chemins de pr&eacute;-extraction 
        et post-extraction diff&eacute;rents (et c'est m&ecirc;me un comportement 
        suspect, indiquant un camouflage important au sein du portage). 
      <li> Les patch qui demandent un traitement particulier doivent &ecirc;tre 
        mentionn&eacute;s dans DISTFILES et retir&eacute;s de EXTRACT_ONLY, pour 
        des raisons historiques. 
    </ul>
    <br>
  <li> Testez l'extraction du portage &agrave; l'aide de la commande <b>make extract</b>. 
    Vous devez v&eacute;rifier avec soin o&ugrave; se trouve la base des sources. 
    Il s'agit normalement de <i>w-${PKGNAME}${FLAVOR_EXT}/${DISTNAME}</i>. Vous 
    aurez peut-&ecirc;tre besoin de modifier la variable WRKDIST du Makefile si 
    cette base de sources est diff&eacute;rente. <br>
    <br>
  <li>Lisez la documentation d'installation et notez que la construction de port 
    doit se compl&eacute;ter et prendre en compte toute option sp&eacute;ciale 
    requise. <br>
    <br>
  <li>Maintenant vous devez prendre le temps de consid&eacute;rer s&eacute;rieusement 
    et avec un grand soin les licences (ou la licence) qui couvre votre portage 
    logiciel. Certains logiciels peuvent &ecirc;tre redistribu&eacute;s librement, 
    mais pas tous. Afin de vous aider, vous devez r&eacute;pondre &agrave; quatre 
    questions. Il s'agit des variables PERMIT_* que vous trouverez au sein du 
    fichier Makefile. 
    <ul>
      <li> PERMIT_PACKAGE_CDROM indique si le portage peut &ecirc;tre distribu&eacute; 
        sur support CD-Rom. 
      <li> PERMIT_PACKAGE_FTP indique si le portage peut &ecirc;tre plac&eacute; 
        sur des sites FTP. 
      <li> PERMIT_DISTFILES_CDROM indique si nous avons le droit de placer en 
        miroir les distfiles sur support CD-Rom. 
      <li> PERMIT_DISTFILES_FTP indique si nous avons le droit de placer les distfiles 
        en miroir sur des sites FTP. 
    </ul>
    <p> A chaque fois que l'un de ces usages est autoris&eacute;, indiquez &quot;Yes&quot;. 
      Si ce n'est pas le cas, vous devez expliquer pourquoi dans une cha&icirc;ne 
      commentaire. Soyez <b>attentif (attentive) </b>aux conditions sp&eacute;ciales 
      qui sont impos&eacute;es <b>apr&egrave;s </b>l'installation du logiciel. 
      Par exemple, une s&eacute;rie de logiciels impose qu'un exemplaire de leur 
      licence soit install&eacute;e et mentionn&eacute;e &agrave; l'utilisateur. 
      Dans ce cas, nous vous recommandons de regrouper toutes les licences au 
      m&ecirc;me endroit pour que l'utilisateur puisse tout lire sans rien oublier 
      et rester bien inform&eacute; : <code>/usr/local/share/DISTNAME/</code>. 
      <br>
      <br>
  <li>Ajoutez les options de configuration au Makefile et cr&eacute;ez un script 
    de configuration au besoin. 
    <ul>
      <li> Vous pouvez ajouter un script de configuration de votre portage nomm&eacute; 
        `configure' et le situer dans un r&eacute;pertoire <code>scripts/</code>. 
        Ce script sera ex&eacute;cut&eacute; avant toute configuration sp&eacute;cifi&eacute;e 
        par la variable locale CONFIGURE_STYLE. 
      <li> Si le configure GNU est utilis&eacute;, vous devriez utiliser ./configure 
        --help afin de d&eacute;terminer quelles options sont disponibles. 
      <li> Tout ce que vous pourriez &ecirc;tre amen&eacute;(e) &agrave; modifier 
        peut &ecirc;tre modifi&eacute; en utilisant le drapeau de configuration 
        -option dans le param&egrave;tre CONFIGURE_ARGS du fichier Makefile. 
      <li> Utilisez CONFIGURE_ARGS+= pour rajouter une ou des options &agrave; 
        cette variable locale. Si vous utilisez CONFIGURE_ARGS= vous risquez d'en 
        &eacute;craser tout contenu pr&eacute;alable. 
    </ul>
    <br>
  <li> Essayez de construire le portage logiciel &agrave; l'aide de la commande 
    <b>make build</b>. 
    <ul>
      <li> Si vous avez de la chance, tout sera construit sans la moindre erreur 
        (bonne chance !) 
      <li> Si vous obtenez une erreur, vous devrez g&eacute;n&eacute;rer un ou 
        plusieur patch qui seront utili&eacute;s par votre portage, afin de permettre 
        sa compilation et installation sous OpenBSD. D&eacute;terminez ce qui 
        doit &ecirc;tre modif&eacute;, et cr&eacute;ez un patch. 
      <li> Les patch doivent toujours s'appliquer depuis la base ${WRKDIST}. 
      <li> Le moyen le plus facile de v&eacute;rifier que le patch fonctionne 
        est de tout &quot;nettoyer&quot; &agrave; l'aide de <b>make clean patch</b>. 
        Cette commande va nettoyer le r&eacute;pertoie de travail de tous fichiers, 
        faire &agrave; nouveau l'extraction et appliquer votre patch. 
    </ul>
    <br>
  <li> Commencez un cycle de <b>make build</b>, puis produisez un patch (ou utilisez 
    <b>make update-patches</b>) puis <b>make clean patch</b>. 
    <ul>
      <li> Les patch doivent &ecirc;tre plac&eacute;s dans <i>patches/</i> et 
        doivent &ecirc;tre nomm&eacute;s patch-* o&ugrave; vous remplacerez * 
        par quelque chose de compr&eacute;hensible. Nous vous recommandons de 
        nommer vos patch patch-FILENAME o&ugrave; FILENAME est le nom du fichier 
        qui sera modifi&eacute; par le patch. (<tt>make update-patches</tt> le 
        fait automatiquement pour vous) 
      <li> Appliquer PATCHFILES est la premi&egrave;re &eacute;tape du stade des 
        patch. Vous pouvez l'invoquer s&eacute;par&eacute;ment &agrave; l'aide 
        de make distpatch, une cible utile pour les porteurs d'applications. Vous 
        pouvez ignorer cette &eacute;tape si vous n'avez pas fix&eacute; de valeur 
        &agrave; cette variable. 
      <li>Chaque fichier de patch ne doit modifier qu'un seul fichier &agrave; 
        la fois. S'il-vous-pla&icirc;t. 
      <li>Utilisez <b>make update-patches</b> pour g&eacute;n&eacute;rer les patch, 
      <li> Tous les patch DOIVENT &ecirc;tre relatifs &agrave; ${WRKDIST}, 
      <li> V&eacute;rifiez que les patch <b>NE CONTIENENT PAS </b>de tags qui risquent 
        d'&ecirc;tre modifi&eacute;s par cvs. Si c'est le cas, vos patch ne pourront 
        plus s'appliquer apr&egrave;s une mise &agrave; jour via cvs. Vous pouvez 
        v&eacute;rifier les changements potentiels &agrave; l'aide de -kk pour 
        l'&eacute;viter. 
      <li> Ajouter une petite explication sur le r&ocirc;le du patch dans le fichier 
        lui-m&ecirc;me et ajoutez un tag OpenBSD CVS <code>&#36;OpenBSD&#36;</code>. 
      <li> <b>Veuillez fournir un exemplaire </b>de vos patch &agrave; l'auteur 
        du logiciel. 
    </ul>
    <br>
  <li> Essayez de fixer <code>SEPARATE_BUILD</code>. 
    <ul>
      <li> Si le portage peut construire des fichiers objets en-dehors de l'arbre 
        des sources, cela est pr&eacute;f&eacute;rable et permet de conserver 
        l'arbre des sources dans un &eacute;tat plus &quot;propre&quot; (de nombreux 
        programmes qui utilisent <code>CONFIGURE_STYLE=gnu</code> le peuvent) 
        et cela simplifie en outre la gestion de l'arbre de sources sur plusieurs 
        architectures. 
      <li> Cela peut vous &eacute;pargner des efforts, et vous permet de relancer 
        facilement un cycle de construction du portage depuis le <code>configure</code>. 
    </ul>
    <br>
  <li> Parcourez avec attention la sortie obtenue (s'il y en a) et modifiez toute 
    option utile dans le Makefile. Pour r&eacute;p&eacute;ter la commande utilisez 
    `<b>make clean configure</b>'. 
    <p> Note: v&eacute;rifiez que les fichiers d&eacute;pendants de l'h&ocirc;te 
      soient plac&eacute;s soit dans <i>/etc</i> ou <i>/etc/&lt;name&gt;</i>, mais 
      <strong>NE REMPLACEZ NI NE MODIFIEZ JAMAIS<b> </b></strong>de fichiers existants 
      dans /etc. Il vaut mieux placer ces fichiers dans <i>/usr/local/share/&lt;name&gt;</i> 
      puis copiez vers <i>/etc</i> ou <i>/etc/&lt;name&gt;</i> seulement si les 
      fichiers n'existent pas. Si les fichiers existent, affichez un message et 
      indiquez &agrave; l'utilisateur du syst&egrave;me quels fichiers doivent 
      &ecirc;tre modifi&eacute;s. Cela permet &eacute;galement de garantir que 
      les fichiers seront inclus dans le paquetage puisque tout ce qui se trouve 
      dans <i>/usr/local</i> sera inclus dans PLIST. Une fois un paquetage install&eacute;, 
      le contenu de <code>pkg/MESSAGE</code> sera affich&eacute; et le cycle de 
      construction du paquetage sera termin&eacute;. 
    <p> OpenBSD situe les fichiers comme suit : 
    <pre>
       ex&eacute;cutables utilisateur :					/usr/local/bin
       ex&eacute;cutables de l'administrateur :				/usr/local/sbin
       programmes ex&eacute;cutables :						/usr/local/libexec
       librairies :							/usr/local/lib
       donn&eacute;es ind&eacute;pendantes de l'architecture :			/usr/local/lib/&lt;nom&gt;
       fichiers inclus install&eacute;s :					/usr/local/include ou
									/usr/local/include/&lt;nom&gt;
       donn&eacute;es sp&eacute;cifiques &agrave; la machine :				/etc ou /etc/&lt;nom&gt;
       &eacute;tat local :							/var/run
       fichiers contenant les scores des jeux :				/var/games
       fichiers info GNU :						/usr/local/info
       pages man :							/usr/local/man/...
       donn&eacute;es ind&eacute;pendantes de l'architecture en lecture seule :	/usr/local/share/&lt;nom&gt;
       documentations diverses :					/usr/local/share/doc/&lt;nom&gt;
    </pre>
    Commencez un cycle de compilations jusqu'&agrave; ce que le portage soit termin&eacute;. 
    Patchez (voir ci-dessus), puis clean et make jusqu'&agrave; la production 
    du portage. Vous devez <b>&eacute;liminer tous les "warning"</b> obtenus en 
    particulier ceux en rapports avec la s&eacute;curit&eacute; du code produit.<br>
    <br>
  <li> Controllez la s&eacute;mantique de SEPARATE_BUILD. Vous ne devez le faire 
    que si votre portage utilise la variable locale SEPARATE_BUILD. Id&eacute;alement, 
    le portage ne doit pas modifier de fichiers dans ${WRKSRC} <b>apr&egrave;s 
    l'application de votre patch</b>. Vous pouvez le v&eacute;rifier en retirant 
    vos droits d'&eacute;criture &agrave; cette &eacute;tape sur ${WRKSRC}. Ensuite 
    vous pouvez utiliser <code>SEPARATE_BUILD=concurrent</code> -- et v&eacute;rifier 
    qu'une autre personne peut, sur une autre architecture, obtenir la m&ecirc;me 
    compilation. Sinon, utilisez <code>SEPARATE_BUILD=simple</code> -- si la construction 
    du portage sur plusieurs architectures peut provoquer des probl&egrave;mes, 
    &agrave; mesure que certains fichiers seront r&eacute;g&eacute;n&eacute;r&eacute;s 
    &agrave; certains moments. <br>
    <br>
  <li> Ajoutez une ligne <i>COMMENT</i> dans le Makefile. COMMENT est une <b>COURTE 
    </b>description du portage (au maximum 60 caract&egrave;res) Vous ne <b>DEVEZ 
    PAS INCLURE </b>le nom du paquetage dans la description ou son num&eacute;ro 
    de version. Vous ne devez pas faire d&eacute;buter cette ligne de commentaire 
    par un caract&egrave;re en majuscule sauf si la signification s&eacute;mantique 
    doit &ecirc;tre sans aucune ambigu&iuml;t&eacute; et <b>NE TERMINEZ PAS CETTE 
    LIGNE </b>par un point. <b>EN AUCUN CAS VOUS NE DEVEZ COMMENCER PAR UN ARTICLE 
    INDETERMINE COMME 'un' OU 'une' ; retirez tout article au d&eacute;but</b><strong>.</strong> 
    <br>
    <br>
  <li>Editez <i>pkg/DESCR et pkg/PLIST</i>. 
    <ul>
      <li> DESCR est une description plus &eacute;tendue du portage. Il peut s'agir 
        d'un ou plusieurs paragraphes expliquant de mani&egrave;re consise en 
        quoi consiste le logiciel. Nous vous invitons &agrave; terminer chaque 
        ligne apr&egrave;s 72 caract&egrave;res ce que vous pouvez faire apr&egrave;s 
        l'&eacute;criture de ce fichier en utilisant la commande suivante : fmt 
        -w 72
      <li> PLIST doit rester vide pour l'instant. 
    </ul>
    <br>
  <li>Si l'application a besoin de cr&eacute;er un utilisateur ou un groupe,
  choisissez le plus petit identifiant libre dans 
  <code>/usr/ports/infrastructure/db/user.list</code> afin de l'utiliser
  pour votre port et soyez certain que celui-ci soit ajout&eacute; &agrave; ce 
  m&ecirc;me fichier lors de son entr&eacute;e dans l'arbre.
  <br><br>
  <li> Installez l'application en utilisant la commande <b>make install</b>. Si 
    votre portage logiciel utilise des librairies dynamiques, v&eacute;rifiez 
    leur table de symboles &agrave; l'aide de la commande <code>nm</code>, car 
    parfois un logiciel ne les r&eacute;f&eacute;rence pas correctement ce qui 
    va provoquer le dysfonctionnement du logiciel par la suite une fois que le 
    binaire &agrave; fait l'objet d'un strip alors qu'ils fonctionnent parfaitmenent 
    avant le strip. Toutefois, les binaires DEVRAIENT faire l'application d'un 
    strip avant leur installation ; utilisez la commande <code>file</code> pour 
    d&eacute;terminer si le binaire a fait ou non l'objet d'un strip. Si le portage 
    contient d&eacute;j&agrave; des instructions pour r&eacute;aliser un strip 
    du binaire avant son installation (par exemple 'install-strip') utilisez ce 
    dernier; dans le cas contraire, ajoutez cette option dans le Makefile afin 
    de rendre l'application d'un strip sur les binaires possible. <br>
    <br>
  <li><b>V&eacute;rifier une nouvelle fois et avec le plus grand soin que votre 
    portage ne contient pas de trous de s&eacute;curit&eacute; potentiels</b>. 
    Les programmes qui fonctionnent en setiud o&ugrave; qui acc&egrave;dent au 
    r&eacute;seau doivent faire l'objet d'un audit complet et de grand soin. Nous 
    vous invitons &agrave; &eacute;tudier nos <a href="../porting.html#Security">recommandations 
    quant &agrave; la s&eacute;curit&eacute;</a> pour mener &agrave; bien cette 
    &eacute;tape tr&egrave;s importante. Vous devez tout enregistrer et &eacute;tudier 
    en ce qui concerne tout changement, et l'inscrire au sein du fichier <code>/SECURITY</code>. 
    Ce fichier doit lister avec pr&eacute;cision tout probl&egrave;me de s&eacute;curit&eacute; 
    potentiel introduit par votre portage, avec les patch qui accompagnent les 
    programmes afin que quiconque qui prenne votre portage en main puisse savoir 
    ce qu'il reste &agrave; v&eacute;rifier. Par exemple : 
    <pre>&#36;OpenBSD&#36;

      ${WRKDIR}/receiver.c
         l'appel de la fonction mktemp (fonction wrapper &agrave; do_mktemp) me semble incorrecte.

      Ce serveur utilise une grande quantit&eacute; de fonctions strlcpy/strlcat/snprintf.
</pre>
  <li> Cr&eacute;ez le fichier pkg/PLIST. Une fois l'installation compl&egrave;te, 
    utilisez la commande pour d&eacute;veloppeurs <b>make plist</b> qui permet 
    de g&eacute;n&eacute;rer le fichier PLIST au sein du r&eacute;pertoire <i>pkg</i>. 
    Ce fichier est le candidat pour toute cr&eacute;ation de liste de paquetages. 
    <p> Attention! Les fichiers sont trouv&eacute;s par datation. Ceci signifie 
      que le syst&egrave;me ne r&eacute;alise PAS les t&acirc;ches suivantes : 
    <ul>
      <li> lister les fichiers install&eacute;s par 'tar' car leur datation ne 
        sera pas modifi&eacute;e et ne seront pas trouv&eacute;s par 'find'. 
      <li> mise &agrave; jour de <code>info/dir</code> si des fichiers .info sont 
        ajout&eacute;s. Egalement, v&eacute;rifiez que <code>info/dir</code> ne 
        fait pas partie du PLIST. 
      <li> tenter de faire quoi que ce soit de sp&eacute;cial avec des liens ou 
        liens symboliques.Un test avec tar montre que ce dernier traite les liens 
        et liens symboliques correctement, mais nous pr&eacute;f&eacute;rons la 
        prudence pour tout ce qui touche aux paquetages.
    </ul>
    <p> Consultez attentivement le fichier `PLIST' et v&eacute;rifiez que tout ce qui est 
      install&eacute; a &eacute;t&eacute; fait correctement et au bon endroit. 
      Tout ce qui n'est pas install&eacute; mais qui doit l'&ecirc;tre doit &ecirc;tre 
      list&eacute; dans une r&egrave;gle 'post-install' au sein du Makefile. 
    <p> Les portages qui installent des librairies partag&eacute;es auront un 
      fichier suppl&eacute;mentaire, nomm&eacute; PFRAG.shared. 
    <ul>
      <li> PLIST d&eacute;crit les fichiers indiquant, pour chaque architecture, 
        si les librairies partag&eacute;es sont ou non support&eacute;es. 
      <li> PFRAG.shared ne d&eacute;crit que les fichiers qui sont install&eacute;s 
        de mani&egrave;re additionnelle sur les architectures qui supportent les 
        librairies partag&eacute;es.
      <li> PFRAG.noshared ne d&eacute;crit que les fichiers qui sont install&eacute;s 
        de mani&egrave;re suppl&eacute;mentaire sur les architectures qui ne supportent 
        pas les librairies partag&eacute;es. 
    </ul>
    <br>
  <li> Continuez &agrave; retirer le paquetage install&eacute; et installez &agrave; 
    nouveau encore et encore jusqu'&agrave; la <b>perfection</b>. Par &quot;perfection&quot; 
    nous voulons dire que le portage logiciel s'installe parfaitement et qu'il 
    peut &eacute;galement &ecirc;tre retir&eacute; sans aucun probl&egrave;me 
    ou conflit. `pkg_delete &lt;nom de paquetage&gt;' sera utilis&eacute; pour 
    retirer le logiciel tandis que `sudo make reinstall' sera utilis&eacute; pour 
    effectuer une r&eacute;installation. Consultez la page man de `pkg_create' 
    pour &eacute;tudier les diff&eacute;rentes commandes disponibles qui peuvent 
    &ecirc;tre ajout&eacute;es &agrave; PLIST pour vous assurer que tout est nettoy&eacute; 
    correctement. Apr&egrave;s avoir retir&eacute; le portage, la commande suivante 
    : 
    <pre>
$ find /usr/local -newer w-${PKGNAME}${FLAVOR_EXT}/fake-${MACHINE_ARCH}[-${FLAVOR}]/.install_started -print
</pre>
    ne doit lister que les noms standards de r&eacute;pertoires. <br>
    <br>
  <li> Testez le paquetage lui-m&ecirc;me. Apr&egrave;s l'installation du portage, 
    la commande <code>make package</code> est utilis&eacute;e pour cr&eacute;er 
    un paquetage. Pour tester le paquetage, utilisez d'abord la commande <code>pkg_delete</code> 
    puis utilisez <code>pkg_add</code> Les r&eacute;sultats obtenus doivent correspondre 
    <b>EXACTEMENT </b>aux r&eacute;sultats obtenus par l'utilisation de la commande 
    `make install'. <br>
    <br>
  <li> Envoyez un email &agrave; l'adresse <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> 
    avec une courte note indiquant vos commentaires et les tests men&eacute;s. 
    Attachez le portage &agrave; cet email et envoyez-le. 
    <p> Essayez de faire tester votre portage sur le plus grand nombre de plates-formes 
      possibles. 
    <ul>
      <li> La plateforme DEC Alpha est excellente car elle n'utilise que des librairies 
        statiques et que <code>sizeof(int) != sizeof(long)</code>. 
      <li> Sun SPARC est aussi une excellente plateforme de test car elle est 
        facile &agrave; trouver, et que son ordre d'octets est &agrave; l'inverse 
        de celui de la plateforme i386 ; de la m&ecirc;me mani&egrave;re, si vous 
        r&eacute;alisez votre portage sur SPARC la plateforme i386 sera la meilleure 
        plateforme de test pour vous.
    </ul>
    <br>
  <li>Incorporez toutes les informations obtenues en retour que vous obtiendrez 
    d'autres testeurs. Testez &agrave; nouveau sur votre plateforme. Ensuite, 
    r&eacute;pondez &agrave; toute personne et proposez-leur votre nouveau portage. 
    <br>
    <br>
  <li>Enfin, incorporez votre logiciel dans l'abre des "ports" d'OpenBSD. Si vous 
    ne disposez pas de droits d'&eacute;criture CVS, demandez &agrave; quelqu'un 
    qui en dispose sur <a href="mailto:ports@@openbsd.org">ports@@openbsd.org</a> 
    de le faire pour vous. <br>
    <br>
  <li> Si vous &ecirc;tes un d&eacute;veloppeur disposant d'un acc&egrave;s CVS, 
    ins&eacute;rez votre portage logiciel. Nous pr&eacute;f&eacute;rons l'utilisation 
    de "import" pour importer votre nouveau port, plut&ocirc;t que d'ajouter des 
    centaines (ou plus) de fichiers de mani&egrave;re individuelle. Import utilise 
    des num&eacute;ros de version de type &quot;branche vendeur&quot; comme 1.1.1.1 
    mais ne vous inqui&eacute;tez pas &agrave; ce sujet ! :-)<br>
    Si vous modifiez un fichier de mani&egrave;re sp&eacute;cifique (&eacute;dition 
    puis cvs commit), la nouvelle version sera alors 1.2
    <p> En r&eacute;sum&eacute;, l'importation sera utilis&eacute;e &agrave; la 
      cr&eacute;ation du portage logiciel. A partir de ce stade, &quot;cvs add&quot; 
      et &quot;cvs rm&quot; seront utilis&eacute;s pour ajouter ou retirer des 
      fichiers, tandis que le cycle classique d'&eacute;dition puis commit sera 
      utilis&eacute;. Vous pouvez utiliser quelque chose comme ceci :
    <pre>
$ cd kaffe1
$ make clean	# &eacute;vitez d'envoyer vos fichiers de travail dans le CVS !
$ cvs -d cvs.openbsd.org:/cvs import -m 'kaffe port' ports/lang/kaffe1 \
	<I>VotreNom</I> VotreNom<I>_YYYY-MMM-DD</I>
</pre>
    <ul>
      <li> -d cvs.openbsd.org:/cvs indique o&ugrave; se trouve le cvs. Vous pouvez 
        l'ignorer si vous avez une variable locale CVSROOT d&eacute;finie. 
      <li> -m 'kaffe port' est votre message de login. Vous pouvez indiquer ce 
        que vous voulez
      <li> ports/lang/kaffe1 est le chemin relatif o&ugrave; votre portage sera 
        plac&eacute; par rapport au /cvs
      <li> <i>VotreNom</i> (remplac&eacute; par votre nom de login) est le 'tag 
        vendeur'. Vous &ecirc;tes le vendeur puisque vous l'importez. 
      <li> <i>VotreNom_YYYY-MMM-DD</i> (e.g., ian_2000-Jan-01) est le 'tag de 
        distribution vendeur'. Valeur informative. 
    </ul>
    <br>
    Comme exemple r&eacute;el, voici la sortie obtenue par la mise en place d'un 
    portage que nous avons r&eacute;alis&eacute; le 8 septembre 1998: 
    <pre>
$ cd kaffe1
$ make clean >/dev/null
$ cvs import -m 'kaffe1.0(==JDK1.1) port' ports/lang/kaffe1 ian ian_1998-Sep-08
ian@@cvs.openbsd.org's password: (not shown, obviously)
I ports/lang/kaffe1/CVS
I ports/lang/kaffe1/files/CVS
I ports/lang/kaffe1/pkg/CVS
N ports/lang/kaffe1/Makefile
cvs server: Importing /cvs/ports/lang/kaffe1/files
N ports/lang/kaffe1/files/md5
cvs server: Importing /cvs/ports/lang/kaffe1/pkg
N ports/lang/kaffe1/pkg/COMMENT
N ports/lang/kaffe1/pkg/DESCR
N ports/lang/kaffe1/pkg/PLIST

No conflicts created by this import
$ 
</pre>
  <li> Enfin, ajoutez une entr&eacute;e d'une ligne pour le nouveau portage dans 
    le Makefile du r&eacute;pertoire parent; par exemple si nous ajoutons le portage 
    de ports/lang/kaffe1, nous l'ajoutons &eacute;galement au fichier ports/lang/Makefile. 
    <br>
    <br>
  <li>Vous <b>devez maintenir le portage ! </b>Si jamais un probl&egrave;me survient, 
    une nouvelle version ou quoi que ce soit, vous devez tout faire pour maintenir 
    votre portage &agrave; jour. En d'autres mots, cycle de construction du portage, 
    mise &agrave; jour, re-cycle de construction, etc.<br>
    <br>
  <li>Lors de la mise &agrave; jour d'un portage, n'oubliez pas de traiter les 
    d&eacute;pendances ! Vous ne devez pas provoquer un disfonctionnement en modifiant 
    votre portage, dont d'autres logiciels peuvent d&eacute;pendre ! En cas de 
    probl&egrave;me si votre portage demande la mise &agrave; jour d'autres portages 
    sous la charge d'autres personnes, contactez ces derniers. De la m&ecirc;me 
    mani&egrave;re, surveillez tout portage pouvant affecter les v&ocirc;tres et pr&eacute;parez 
    vous &agrave; des mises &agrave; jour sans &ecirc;tre toujours pr&eacute;venu(e) 
    &agrave; l'avance.
</ol>
Enfin, nous tenons &agrave; vous remercier pour tous les efforts que cela r&eacute;pr&eacute;sente 
et que vous acceptez de prendre en charge pour am&eacute;liorer l'arbre des &quot;ports&quot; 
d'OpenBSD qui sans tous ces efforts n'existerait pas : merci !
<hr>
<a href="../porting.html"><img height="24" width="24" src="../back.gif"
 border="0" alt="Porting"></a> 
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
Originally [OpenBSD: checklist.html,v 1.51 ]<br>
$Translation: checklist.html,v 1.3 2003/07/18 20:40:38 xsa Exp $<br>
$OpenBSD$
</small>
</body>
</html>
@


1.2
log
@
sync with steelix translation CVS
@
text
@d348 6
d550 2
a551 2
Originally [OpenBSD: checklist.html,v 1.50 ]<br>
$Translation: checklist.html,v 1.2 2003/06/02 13:34:16 xsa Exp $<br>
@


1.1
log
@
sync with steelix translation CVS
checklist.html by Gilbert Fernandes
@
text
@d366 1
a366 1
    vous invitons &agrave; &eacute;tudier nos <a href="../porting.html#security">recommandations 
d544 2
a545 2
Originally [OpenBSD: checklist.html,v 1.49 ]<br>
$Translation: checklist.html,v 1.1 2003/05/29 21:24:00 xsa Exp $<br>
@

