head	1.45;
access;
symbols;
locks; strict;
comment	@# @;


1.45
date	2014.04.01.19.44.54;	author deraadt;	state dead;
branches;
next	1.44;

1.44
date	2012.04.21.22.25.29;	author ajacoutot;	state Exp;
branches;
next	1.43;

1.43
date	2012.03.17.09.59.11;	author ajacoutot;	state Exp;
branches;
next	1.42;

1.42
date	2010.09.26.10.09.25;	author ajacoutot;	state Exp;
branches;
next	1.41;

1.41
date	2010.03.29.07.15.39;	author ajacoutot;	state Exp;
branches;
next	1.40;

1.40
date	2009.11.30.13.23.50;	author ajacoutot;	state Exp;
branches;
next	1.39;

1.39
date	2009.04.26.15.44.21;	author tobias;	state Exp;
branches;
next	1.38;

1.38
date	2008.07.13.18.21.56;	author tobias;	state Exp;
branches;
next	1.37;

1.37
date	2007.06.23.18.29.30;	author jufi;	state Exp;
branches;
next	1.36;

1.36
date	2007.03.16.19.15.25;	author jufi;	state Exp;
branches;
next	1.35;

1.35
date	2007.02.09.05.15.24;	author saad;	state Exp;
branches;
next	1.34;

1.34
date	2006.06.26.18.32.13;	author jufi;	state Exp;
branches;
next	1.33;

1.33
date	2006.05.02.17.09.35;	author jufi;	state Exp;
branches;
next	1.32;

1.32
date	2006.04.25.16.49.44;	author jufi;	state Exp;
branches;
next	1.31;

1.31
date	2006.04.18.16.51.35;	author jufi;	state Exp;
branches;
next	1.30;

1.30
date	2006.03.01.10.48.42;	author saad;	state Exp;
branches;
next	1.29;

1.29
date	2006.01.20.20.05.20;	author jufi;	state Exp;
branches;
next	1.28;

1.28
date	2005.12.11.05.56.09;	author saad;	state Exp;
branches;
next	1.27;

1.27
date	2005.11.01.10.58.27;	author saad;	state Exp;
branches;
next	1.26;

1.26
date	2005.10.31.12.06.18;	author saad;	state Exp;
branches;
next	1.25;

1.25
date	2005.09.21.18.57.37;	author saad;	state Exp;
branches;
next	1.24;

1.24
date	2005.05.25.22.14.52;	author saad;	state Exp;
branches;
next	1.23;

1.23
date	2005.05.15.21.17.51;	author saad;	state Exp;
branches;
next	1.22;

1.22
date	2005.04.23.07.03.38;	author jufi;	state Exp;
branches;
next	1.21;

1.21
date	2005.02.26.10.30.28;	author jufi;	state Exp;
branches;
next	1.20;

1.20
date	2005.01.29.16.06.38;	author jufi;	state Exp;
branches;
next	1.19;

1.19
date	2005.01.28.09.03.32;	author saad;	state Exp;
branches;
next	1.18;

1.18
date	2005.01.18.09.53.59;	author jufi;	state Exp;
branches;
next	1.17;

1.17
date	2004.12.22.20.11.59;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2004.11.14.20.10.30;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2004.10.08.09.40.39;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2004.09.09.20.43.23;	author saad;	state Exp;
branches;
next	1.13;

1.13
date	2004.05.16.13.08.03;	author saad;	state Exp;
branches;
next	1.12;

1.12
date	2004.05.12.20.51.36;	author saad;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.28.17.12.42;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.23.12.22.48;	author jufi;	state Exp;
branches;
next	1.9;

1.9
date	2004.03.14.21.40.51;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2004.03.02.13.50.30;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2004.02.29.08.52.02;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2004.02.08.11.58.49;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2003.10.28.12.48.17;	author horacio;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.07.20.51.22;	author horacio;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.05.09.36.07;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2003.02.27.18.23.50;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2002.11.13.11.19.08;	author jufi;	state Exp;
branches;
next	;


desc
@@


1.45
log
@give up on translation
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title> FAQ OpenSSH</title>
<link rev= "made" href= "mailto:www@@openbsd.org">
<meta name= "resource-type" content= "document">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name= "description"   content= "the OpenSSH FAQ page">
<meta name= "keywords"      content= "OpenSSH,SSH,Secure Shell,faq">
<meta name= "distribution"  content= "global">
<meta name= "copyright"     content= "This document copyright 1999-2010 OpenBSD.">
</head>

<body bgcolor= "#ffffff" text= "#000000" link= "#23238E">
<a href="index.html"><img alt="[OpenSSH]" height="30" width="141"
src="../images/smalltitle.gif" border="0"></a>
<p>

<h1>FAQ OpenSSH (Foire aux questions)</h1>

<hr>

<blockquote>
<h3><a href= "#1.0">1.0 - Qu'est-ce que OpenSSH et où puis-je
l'obtenir ?</a></h3>
<ul>
<li><a href= "#1.1">1.1 - Qu'est-ce que OpenSSH et où puis-je
    l'obtenir ?</a>
<li><a href= "#1.2">1.2 - Pourquoi devrait-on l'utiliser ?</a>
<li><a href= "#1.3">1.3 - Quels sont les systèmes d'exploitation
    supportés ?</a>
<li><a href= "#1.4">1.4 - Qu'en est-il des droits d'auteur, de
    l'utilisation et des brevets ?</a>
<li><a href= "#1.5">1.5 - Comment obtenir de l'aide ?</a> 
<li><a href="#1.6">1.6 - J'ai trouvé un bogue. Comment puis-je le
    rapporter ?</a>
</ul>

<h3><a href= "#2.0">2.0 - Questions Générales</a></h3>
<ul>
<li><a href= "#2.1">2.1 - Pourquoi ssh/scp établit des connexions
    à partir de ports privilégiés. Mon pare-feu
    bloque ceux-ci. </a>
<li><a href= "#2.2">2.2 - Pourquoi le client ssh est setuid root ?</a>
<li><a href= "#2.3">2.3 - Pourquoi SSH 2.3 a des problèmes
    d'interopérabilité avec OpenSSH 2.1.1 ?</a>
<li><a href= "#2.4">2.4 - Pourquoi OpenSSH affiche : Dispatch protocol
    error: type 20</a>
<li><a href= "#2.5">2.5 - Les anciennes versions de SSH commercial
    utilisent IDEA pour le cryptage des clés de hôtes.</a>
<li><a href= "#2.6">2.6 - À quoi correspondent les messages
    d'avertissement concernant les longueurs de clé ?</a>
<li><a href= "#2.7">2.7 - X11 et/ou agent forwarding ne fonctionne
    pas.</a>
<li><a href= "#2.8">2.8 - Après la mise à jour de OpenSSH,
    j'ai perdu le support SSH2.</a>
<li><a href= "#2.9">2.9 - sftp/scp échoue à la connexion
    mais ssh fonctionne.</a>
<li><a href= "#2.10">2.10 - Allez-vous ajouter la fonctionnalité
    [foo] à scp ?</a>
<li><a href= "#2.11">2.11 - Comment utiliser le "port forwarding" ?</a>
<li><a href= "#2.12">2.12 - Ma connexion ssh se fige ou s'arrête
    après N minutes d'inactivité.</a>
<li><a href= "#2.13">2.13 - Comment puis-je utiliser scp pour copier un
    fichier dont le nom comporte deux-points ?</a>
<li><a href= "#2.14">2.14 - Pourquoi OpenSSH annonce sa version aux
    clients ?</a>
</ul>

<h3><a href= "#3.0">3.0 - Questions sur la version portable de OpenSSH
</a></h3>
<ul>
<li><a href= "#3.1">3.1 - Faux messages d'authentification dans les
    journaux systèmes.</a>
<li><a href= "#3.2">3.2 - Mots de passe vides non permis par
    l'authentification PAM.</a>
<li><a href= "#3.3">3.3 - ssh(1) nécessite beaucoup de temps pour
    effectuer une connexion ou ouvrir une session interactive</a>
<li><a href= "#3.4">3.4 - Messages d'erreur "Can't locate module net-pf-
    10" dans les journaux système sous Linux.</a>
<li><a href= "#3.5">3.5 - L'authentification par mot de passe ne
    fonctionne pas (sous Slackware 7.0 ou Red Hat Linux 6.x par
    exemple)</a>
<li><a href= "#3.6">3.6 - Configure ou sshd(8) se plaignent de l'absence
    du support RSA</a>
<li><a href= "#3.7">3.7 - Erreurs "scp: command not found"</a>
<li><a href= "#3.8">3.8 - Incapable de lire la phrase de
protection (passphrase)</a>
<li><a href= "#3.9">3.9 - 'configure' manquant ou make échoue</a> 
<li><a href= "#3.10">3.10 - Connexions suspendues quand on quitte
    ssh</a>
<li><a href= "#3.11">3.11 - Pourquoi ssh suspend la connexion durant la
    phase de sortie du programme ?</a>
<li><a href= "#3.12">3.12 - J'ai effectué une mise à jour
    vers OpenSSH 3.1 et X11 forwarding cesse de fonctionner.</a>
<li><a href= "#3.13">3.13 - J'ai mis à jour OpenSSH en version
    3.8 et certains programmes X11 ne fonctionnent plus.</a>
<li><a href= "#3.14">3.14 - J'ai copié ma clé dans le
    fichier authorized_keys mais l'authentification par clés ne
    fonctionne toujours pas.</a>
<li><a href= "#3.15">3.15 - Les versions d'OpenSSH et leur comportement
	 vis-à-vis de PAM.</a>
<li><a href= "#3.16">3.16 - Pourquoi "w" et "who" ne montrent pas les
	 utilisateurs logués via ssh sur AIX 5.x ?</a>
</ul>

</blockquote>

<hr>
<h2><u><a name= "1.0">1.0 - Qu'est-ce que OpenSSH et où puis-je
l'obtenir ?</a></u></h2>

<h2><a name= "1.1">1.1 - Qu'est-ce que OpenSSH ?</a></h2>

<p> 
OpenSSH fournit un chiffrement de bout en bout pour remplacer des
applications comme telnet, rlogin et ftp.
À l'opposé de ces applications, OpenSSH ne fait jamais passer quelque chose
(incluant les identifiants et mots de passe) sur le réseau en clair, et
fournit une authentification par hôte, pour vérifier que vous communiquez
véritablement au bon système que vous pensez être et personne ne peut
récupérer votre session.

<p> 
La suite OpenSSH inclut le programme 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> 
qui remplace rlogin et telnet et 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> 
qui remplace 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a> 
et <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a>. 
OpenSSH a ajouté 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> 
et
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> 
qui implémentent une méthode plus facile de transfert de
fichiers, en se basant sur l'ébauche
<a href="../txt/draft-ietf-secsh-filexfer-02.txt">secsh-filexfer</a> 
de l'IETF. 

<p>
<strong>OpenSSH est constitué d'un certain nombre de
programmes.</strong>
<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a>
- Programme serveur qui s'exécute sur la machine serveur. Il   attend
  des connexions à partir des machines clientes, et lorsqu'il en reçoit,
  il effectue l'authentification et commence à répondre aux requêtes du
  client. Son fonctionnement est contrôlé par le fichier de
  configuration
  <i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5">sshd_config(5)</a></i>.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> 
- C'est le programme client utilisé pour se loguer sur une autre
  machine ou exécuter des commandes sur l'autre machine.
  <i>slogin</i> est un nom alternatif pour ce programme.
  Son fonctionnement est contrôlé par le fichier de configuration <i>
  <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh_config&amp;sektion=5">
  ssh_config(5)</a></i> et les fichiers personnels <i>$HOME/.ssh/config</i>.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> 
- Copie de manière sécurisée des fichiers d'une
  machine vers une autre.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
- Utilisé pour créer des clés (clés
  d'hôtes ou clés d'authentification) PubKey Authentication
  (RSA ou DSA).
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-agent&amp;sektion=1">ssh-agent(1)</a> 
- Agent d'authentification. Il peut être utilisé pour
  retenir des clés RSA pour authentification.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&amp;sektion=1">ssh-add(1)</a> 
- Utilisé pour déclarer de nouvelles clés sur
  l'agent.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> 
- Sous-système serveur SFTP.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> 
- Programme de transfert sécurisé de fichiers. 
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keyscan&amp;sektion=1">ssh-keyscan(1)</a> 
- recueille les clés publiques ssh.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign&amp;sektion=8">ssh-keysign(8)</a> 
- Programme d'aide ssh pour l'authentification basée sur
  l'hôte.
</ul>

<h3>Téléchargement</h3>

<p>
La version la plus récente d'OpenSSH est incluse avec la distribution
courante de <a href="http://www.openbsd.org/">OpenBSD</a>, et installée par
défaut dans l'installation de base.

<p>
Aujourd'hui, la plupart des systèmes d'exploitation incluent une version
d'OpenSSH (souvent renommée ou nommé de manière interne), donc la plupart
des utilisateurs peuvent l'utiliser immédiatement.
Cependant, quelquefois les versions incluses sont assez anciennes, et il
manque des fonctionnalités de la version courante de OpenSSH, et vous
désirez installer la version courante, ou l'installer sur un des OSs ou il
n'est pas disponible, et ou l'auteur de l'OS ne fournit pas une version
récente disponible.
Vous pouvez aussi désirer utiliser OpenSSH dans votre système embarqué. 
 
<p>
Les utilisateurs Non-OpenBSD pourront télécharger, compiler et installer la
distribution multiplate-forme <a href="portable.html">Portable</a> d'un
<a href="portable.html#mirrors">miroir</a> près de chez vous.


<h2><a name= "1.2">1.2 - Pourquoi devrait-on l'utiliser ?</a></h2>

<p> 
OpenSSH est une suite d'outils dont l'objectif est de vous aider à
sécuriser vos connexions réseau. Voici une liste de fonctionnalités :

<ul>
<li>Authentification forte. Évite plusieurs trous de sécurité (par
    exemple, IP, routage et usurpation DNS).
<li>Intimité améliorée. Toutes les communications sont automatiquement
    cryptées de manière transparente.
<li>Sessions X11 sécurisées. Le programme positionne automatiquement
    DISPLAY sur la machine serveur, et fait suivre toute connexion X11 à
    travers le canal sécurisé.
<li>Des ports TCP/IP arbitraires peuvent être redirigés à travers le
    canal crypté dans les deux directions (par exemple, pour des
    transactions e-cash).
<li>Aucune nouvelle formation nécessaire pour les utilisateurs.
<li>Ne fait jamais confiance au réseau. Confiance minimale dans le côté
    distant de la connexion. Confiance minimale dans les serveurs de
    noms de domaine. L'authentification RSA ne fait confiance qu'à la
    clé privée.
<li>RSA client authentifie le serveur au début de chaque connexion pour
    se prémunir contre les chevaux de Troie (par routage ou usurpation
    DNS) et les attaques en homme du milieu, et RSA serveur authentifie
    le client avant d'accepter des connexions basées sur une
    authentification <i>.rhosts</i> ou <i>/etc/hosts.equiv</i>
    (pour prévenir les usurpations DNS, routage ou IP).
<li>La distribution des clés d'authentification hôte peut être effectuée
    de manière centralisée par l'administration, automatiquement lorsque
    la première connexion est établie à une machine.
<li>N'importe quel utilisateur peut créer n'importe quel nombre de clés
    d'authentification utilisateur RSA pour son propre usage.
<li>Le programme serveur possède sa propre clé RSA qui est régénérée
    automatiquement toutes les heures.
<li>Un client d'authentification, exécuté sur la station de travail ou
    le portable de l'utilisateur, peut être utilisé pour retenir les
    clés d'authentification RSA de l'utilisateur.
<li>Le logiciel peut être installé et utilisé (avec des fonctionnalités
    restreintes) même sans privilège root.
<li>Le client est paramétrable au niveau des fichiers de configuration
    aussi bien système qu'utilisateur.
<li>Compression optionnelle de toutes les données avec gzip (y compris
    les sessions X11 suivies et les données de port TCP/IP), ce qui peut
    aboutir à des accélérations significatives sur des connexions
    lentes.
<li>Remplacement complet de rlogin, rsh et rcp. 
</ul>

<p> 
Actuellement, pratiquement toutes les communications dans les réseaux
informatiques sont effectuées sans cryptage. Par conséquent, n'importe
quelle personne qui a un accès à n'importe quelle machine connectée au
réseau peut écouter n'importe quelle communication. C'est ce que font
les pirates, les administrateurs curieux, les employés, les criminels,
les espions industriels et les gouvernements. Certains réseaux ont
assez de fuites de radiations électromagnétiques pour permettre des
captures de données à distance.

<p> 
Quand vous vous loguez, votre mot de passe transite dans le réseau en
clair. Ainsi, n'importe quelle personne à l'écoute peut alors utiliser
votre compte pour effectuer des opérations malintentionnées. Plusieurs
incidents ont été constatés au niveau mondial lorsque des pirates ont
démarré des programmes sur des stations de travail sans que les
propriétaires en prennent connaissance juste pour écouter le réseau et
collecter des mots de passe. Des programmes pour faire de telles choses
sont disponibles sur Internet, ou peuvent être développés par un
programmeur compétent en quelques heures.

<p> 
Les entreprises ont des secrets de fabrication, des demandes de brevets
en préparation, des informations de prix, des informations sur les
contractants, des données client, des données sur le personnel, des
informations financières, etc... De nos jours, n'importe qui ayant un
accès au réseau (n'importe lequel) peut écouter tout ce qui se passe sur
le réseau, sans respect des restrictions d'accès en place.

<p>
Bien des entreprises ne sont pas conscientes que l'information peut être
très facilement récupérée à partir du réseau. Ils croient que leurs
données sont saines et sauves puisque personne n'est supposé savoir
qu'il y a des informations sensibles dans le réseau, ou parce que
beaucoup d'autres données sont transférées sur le réseau. Cette
politique n'est pas sûre.

<h2><a name= "1.3">1.3 - Quels sont les systèmes d'exploitation
    supportés ?</a></h2>

<p> 
Bien que OpenSSH soit développé sur <a
href="http://www.openbsd.org/">OpenBSD</a>, il existe une grande variété
de portages vers d'autres systèmes d'exploitation. la version portable
de OpenSSH est dirigée par <a href="mailto:djm@@openbsd.org"> Damien
Miller</a>. Pour une vue d'ensemble rapide de la version portable de
OpenSSH veuillez consulter <a href="portable.html">OpenSSH Portable
Release</a>. Les systèmes d'exploitation actuellement supportés sont :
<ul>
        <li>OpenBSD
        <li>NetBSD
        <li>FreeBSD
        <li>AIX 
        <li>HP-UX 
        <li>IRIX 
        <li>Linux 
        <li>NeXT 
        <li>SCO 
        <li>SNI/Reliant Unix 
        <li>Solaris 
        <li>Digital Unix/Tru64/OSF 
        <li>Mac OS X 
        <li>Cygwin
</ul>

<p> 
Une liste d'éditeurs qui incluent OpenSSH dans leurs systèmes se trouve
dans la page des <a href="users.html">Systèmes utilisant OpenSSH</a>.

<h2><a name= "1.4">1.4 - Qu'en est-il des droits d'auteur, de
    l'utilisation et des brevets ?</a></h2>
<p> 
Les développeurs d'OpenSSH ont fait beaucoup d'efforts pour éviter tout
problème de brevet ou de droit d'auteur. À cet effet, quelques options
ont été retirées de OpenSSH; plus précisément le support d'algorithmes
brevetés.

<p> 
OpenSSH ne supporte aucun algorithme de transport breveté. En mode SSH1,
seuls 3DES et Blowfish sont disponibles. En mode SSH2, seulement 3DES,
Blowfish, CAST128, Arcfour et AES peuvent être choisis. L'algorithme
breveté IDEA n'est pas supporté.

<p> 
OpenSSH fournit le support du protocole SSH1 ainsi que du protocole
SSH2.

<p> 
Étant donné que le brevet RSA a expiré, il n'y a plus de restrictions au
niveau de l'utilisation logicielle de l'algorithme RSA, y compris
OpenBSD.

<h2><a name= "1.5">1.5 -  Comment obtenir de l'aide ?</a></h2>
<p> 
Il y a plusieurs endroits où on peut trouver de l'aide. En plus du
<a href="index.html">site web principal de OpenSSH</a>, il
existe plusieurs listes de discussion. Avant de poster sur celles-ci,
merci d'effectuer des recherches au niveau des archives de ces listes
pour voir s'il n'y a pas déjà une réponse à votre question. La liste de
diffusion OpenSSH a été archivée et mise dans une forme facilitant les
recherches sur
<a href="http://marc.info/?l=openssh-unix-dev&amp;r=1&amp;w=2">marc.info</a>.

<p> 
Pour plus d'informations concernant l'abonnement aux listes de diffusion
relatives à OpenSSH, veuillez consulter la page des <a
href="list.html">listes de diffusion OpenSSH</a>.

<h2><a name= "1.6">1.6 - J'ai trouvé un bogue. Comment puis-je le rapporter ?</a></h2>
<p>
Les informations concernant l'envoi de rapports de bogues se trouvent
dans la page <a href="report.html">Reporting bugs</a>.
<p>
Si souhaitez rapporter un bogue relatif à la sécurité, contactez s'il vous
plaît la liste privée des développeurs 
&lt;<a href="mailto:openssh@@openssh.com">openssh@@openssh.com</a>&gt;.

<h2><u><a name= "2.0">2.0 - Questions Générales</a></u></h2>

<h2><a name= "2.1">2.1 - Pourquoi ssh/scp établit des connexions
    à partir de ports privilégiés.</a></h2>
<p> 
Le client OpenSSH utilise des ports non-élevés pour l'authentification
rhosts et rhosts-rsa parce que le serveur a besoin de se fier au nom
d'utilisateur fourni par le client. Pour désactiver ce comportement,
vous pouvez ajouter la ligne suivante à votre fichier <i>ssh_config</i>
ou à <i>~/.ssh/config</i>.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>UsePrivilegedPort no</b>
                </td>
        </tr>
</table>
</blockquote>

<p> 
Autrement vous pouvez spécifier cette option au niveau de la ligne de
commande en utilisant l'option <b>-o</b> de la commande
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>. 
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>ssh -o "UsePrivilegedPort no" host.com</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.2">2.2 - Pourquoi le client ssh est setuid root
	?</a></h2>

<p> 
Conjointement avec la question précédente (<a href="#2.1">2.1</a>),
OpenSSH a besoin de l'autorité root pour être capable de s'attacher à
des ports privilégiés afin de faciliter <i>l'authentification
rhosts</i>. Un port privilégié est aussi requis pour l'authentification
rhosts-rsa sur les anciennes versions de SSH.

<p> 
De plus, dans le cas de <i>l'authentification rhosts-rsa </i> (dans le
protocole version 1) et <i>l'authentification hostbased </i> dans le
protocole version 2), le client ssh a besoin d'accéder à la <i>clé
privée d'hôte</i> pour authentifier la machine cliente auprès du
serveur.
Pour ce faire, les versions d'OpenSSH antérieures à 3.3 nécessitent un
bit setuid root positionné sur le binaire <code>ssh</code>. Si vous
n'utilisez pas ce mode d'authentification, vous pouvez supprimer ce bit
sans problème.

<p>
À partir d'OpenSSH 3.3, <code>ssh</code> n'est pas setuid par défaut.
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign">ssh-keysign</a>
est utilisé pour accéder aux clés privés d'hôtes, et ssh n'utilise pas
les ports source privilégiés par défaut. Si vous souhaitez utiliser un
port source privilégié, vous devez positionner manuellement le bit
setuid pour <code>ssh</code>.

<h2><a name= "2.3">2.3 - Pourquoi SSH 2.3 a des problèmes
    d'interopérabilité avec OpenSSH 2.1.1 ?</a></h2>

<p> 
SSH 2.3 et les versions antérieures contiennent un défaut dans leur
implémentation HMAC. Leur code ne fournissait pas le bloc de données
entier obtenu à partir du digest. Au lieu de cela, ils fournissaient
toujours 128 bits. Pour des digests plus grands, ceci entraînait des
problèmes d'interopérabilité de SSH 2.3 avec OpenSSH.

<p> 
OpenSSH 2.2.0 détecte ce défaut sur SSH 2.3. Les versions récentes de SSH
corrigent ce problème. Autrement, vous pouvez ajouter la ligne suivante
à <i>sshd2_config</i> de SSH 2.3.
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>Mac hmac-md5</b>
               </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.4">2.4 - Pourquoi OpenSSH affiche : Dispatch protocol
    error: type 20</a></h2>

<p> 
Des problèmes d'interopérabilité ont été constatés car les anciennes
versions de OpenSSH ne supportent pas la renégociation des clés de
sessions. Cependant, SSH commercial 2.3 essaie de négocier cette
fonctionnalité, dès lors vous pourriez avoir des gels de connexion ou
voir le message d'erreur &quot;<b>Dispatch protocol error: type 20
</b>&quot;. Pour résoudre ce problème, effectuez une mise à jour vers
une version récente de OpenSSH ou désactivez la renégociation de clés en
ajoutant la ligne suivante au niveau du fichier<i> ssh2_config</i> ou
<i>sshd2_config</i> sur la version commerciale SSH 2.3.
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>RekeyIntervalSeconds 0</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.5">2.5 - Les anciennes versions de SSH commercial
    utilisent IDEA pour le cryptage des clés de
    hôtes.</a></h2>

<p> 
Les anciennes versions de SSH utilisaient un algorithme breveté pour
crypter leur <i>/etc/ssh/ssh_host_key</i>. Ce problème se manifeste
lorsque
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> 
ne peut pas lire sa clé d'hôte. Pour le résoudre, utilisez la commande
ci-après pour convertir votre ssh_host_key en 3DES. <b>REMARQUE :</b>
utilisez le programme
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
du produit commercial SSH, *PAS* OpenSSH pour l'exemple ci-dessous.
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
# <b>ssh-keygen -u -f /etc/ssh/ssh_host_key</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.6">2.6 - À quoi correspondent les messages
    d'avertissement concernant les longueurs de clé ?</a></h2>

<p>
Le programme 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
de SSH commercial contenait un bogue qui lui faisait occasionnellement
générer des clés Pubkey Authentication (RSA or DSA) qui avait leur bit à
poids le plus significatif (Most Significant Bit ou MSB) non positionné.
De telles clés étaient annoncées comme étant à longueur complète alors
qu'en réalité elles sont plus petites une fois sur deux.

<p>
OpenSSH affichera des messages d'avertissement quand de telles clés sont
rencontrées. Pour se débarrasser de ces messages, éditez vos fichiers
<i>known_hosts</i> et remplacez la fausse longueur de clé
(habituellement &quot;1024&quot;) avec la vraie longueur (habituellement
&quot;1023&quot;).

<h2><a name= "2.7">2.7 - X11 et/ou agent forwarding ne fonctionne
    pas.</a></h2>

<p> 
Vérifiez <i>ssh_config</i> et <i>sshd_config</i>. Les fichiers de
configuration par défaut désactivent le X11 et le agent forwarding. Pour
activer ces options, ajoutez la ligne suivante à
<i>sshd_config </i>:
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>X11Forwarding yes</b>
                </td>
        </tr>
</table>
</blockquote>

<p> et ajoutez les lignes suivante à <i>ssh_config</i>: 
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>ForwardAgent yes</b><br>
<b>ForwardX11 yes</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
L'export X11 ("X11 forwarding") nécessite un binaire
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=xauth&amp;sektion=1">
xauth(1)</a> fonctionnel. Sous OpenBSD, on peut le trouver dans le jeu
de fichiers <i>xbase</i> mais cela sera probablement différent sous
d'autres plates-formes. En ce qui concerne OpenSSH Portable, xauth devra
être présent au moment de la compilation ou spécifié avec l'option
<b>XAuthLocation</b> dans sshd_config(5) et ssh_config(5).

<p>
Remarque sur l'interopérabilité des agents : il y a deux types
différents et incompatibles de mécanismes "agent forwarding" au sein du
protocole SSH2.
OpenSSH a toujours utilisé une extension des requêtes de l'agent SSH1
original, alors que les produits commerciaux en utilisent un autre, non
libre. Cela signifie donc que l' "agent forwarding" ne peut pas être
utilisé entre OpenSSH et ces protocoles.

<p>
<b>REMARQUE :</b> Pour les utilisateurs de Linux Mandrake 7.2, Mandrake
   modifie la variable d'environnement <i>XAUTHORITY</i> dans
   <i>/etc/skel/.bashrc</i>, ce qui a pour effet de la modifier pour
   tous les utilisateurs. Cette variable est positionnée par
   OpenSSH et pour que les options ci-dessus fonctionnent, vous devez
   mettre en commentaire la ligne :


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b># export XAUTHORITY=$HOME/.Xauthority</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.8">2.8 - Après la mise à jour de OpenSSH,
    j'ai perdu le support SSH2.</a></h2>

<p>
Entre des versions différentes, des modifications peuvent être apportées
à <i>sshd_config</i> ou <i>ssh_config</i>. Vous devriez toujours
vérifier ces modifications lors de la mise à jour OpenSSH. Après la
version 2.3.0 de OpenSSH, vous aurez besoin d'ajouter ce qui suit à
<i>sshd_config</i>.


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>HostKey /etc/ssh_host_dsa_key</b><br>
<b>HostKey /etc/ssh_host_rsa_key</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.9">2.9 - sftp/scp échoue à la connexion
    mais ssh fonctionne.</a></h2>

<p>
sftp et/ou scp peuvent échouer à la connexion si vous avez une
initialisation du shell (.profile, .bashrc, .cshrc, etc) qui produit une
sortie pour des sessions non-interactives. Cette sortie rend le client
sftp/scp confus. Vous pouvez vérifier ceci en exécutant la commande
suivante :

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>ssh yourhost /usr/bin/true</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
Si la commande ci-dessus génère une sortie, alors vous
aurez besoin de modifier votre initialisation du shell.

<h2><a name= "2.10">2.10 - Allez-vous ajouter la fonctionnalité
    [foo] à scp ?</a></h2>

<p>
Réponse courte : non.

<p>
Réponse longue : scp n'est pas une commande standard. La seule
spécification approchante de ce que fait scp est celle de rcp. Étant
donné que c'est la même commande qui est utilisée par les deux
extrémités de la communication, l'ajout de fonctionnalités ou d'options
risque de casser l'interopérabilité avec d'autres implémentations.

<p>
De nouvelles fonctionnalités peuvent cependant être introduites dans
sftp, le protocole étant standardisé (ou presque, il y a un
<a href="http://www.ietf.org/html.charters/OLD/secsh-charter.html">
document de travail</a>), extensible, et client et serveur sont
découplés.

<h2><a name= "2.11">2.11 - Comment utiliser le "port forwarding"
?</a></h2>

<p>
Si le serveur distant est un serveur sshd(8), il est possible de créer
un tunnel pour certains services via ssh. Ceci peut être utile pour
chiffrer des connexions POP ou SMTP même si les logiciels ne supportent
pas directement les communications chiffrées. La création d'un tunnel se
base sur le "port forwarding" pour créer une connexion entre le client
et le serveur. Le logiciel client doit être capable de spécifier un port
non-standard auquel se connecter pour que cette technique fonctionne.

<p>
Pour créer un tunnel chiffré par ssh, l'utilisateur se connecte à l'hôte
distant en utilisant ssh et spécifie le port sur la machine cliente qui
devra être utilisé pour y passer les connexions à destination du serveur
distant. Il devient alors possible de démarrer le service à chiffrer
(par exemple fetchmail, irc ...) sur la machine cliente en précisant le
même port local que celui précédemment fourni. La connexion sera dès
lors chiffrée dans le tunnel ssh. Par défaut, le système depuis lequel
le forwarding a été initié n'acceptera des connexions qu'à partir de
lui-même.

<p>
Les options à utiliser pour la création des tunnels sont les options -L
et -R, qui permettent à l'utilisateur de faire passer des connexions à
travers des tunnels, l'option -D qui permet de faire du "port
forwarding" dynamique, l'option -g qui permet à d'autres hôtes
d'utiliser les tunnels créés sur une machine donnée, et l'option -f qui
permet de mettre ssh en tâche de fond après authentification. Veuillez
consulter la page de manuel <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1"
>ssh(1)</a> pour de plus amples détails.

<p>
Voici un exemple pour créer un tunnel pour une session IRC entre une
machine cliente ``127.0.0.1'' (localhost) et un serveur distant
``server.example.com'':

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>ssh -f -L 1234:server.example.com:6667 server.example.com sleep 10<br>
irc -c '#users' -p 1234 pinky 127.0.0.1</b>
        </td>
        </tr>
</table>
</blockquote>

<p>
La commande ci-dessus crée un tunnel pour une connexion IRC vers le
serveur server.example.com. L'utilisateur veut se joindre au canal
"#users", il a pour surnom "pinky". Le port local utilisé dans cet
exemple est le port 1234. Le numéro de port importe peu tant qu'il est
supérieur à 1023 (autrement, seul "root" peut ouvrir des sockets sur les
ports privilégiés soit tous les ports inférieurs à 1024) et qu'il
n'entre en conflit avec aucun port utilisé sur la machine. La connexion
est chiffrée dans le tunnel jusqu'au serveur distant puis une fois
déchiffrée, elle est envoyée sur le port 6667 du serveur vu que c'est le
port standard utilisé par les services IRC.

<p>
La commande distante "sleep 10" est utilisée pour spécifier le temps
d'attente (10 secondes dans l'exemple précité) avant le démarrage du
service qui doit transiter à travers le tunnel. Si aucune connexion
n'est effectuée durant ce temps d'attente, ssh s'arrête. Si un temps
d'attente plus important est nécessaire, la valeur de sleep(1) peut être
augmentée en conséquence, autrement l'exemple ci-dessus pourrait être
ajouté comme fonction au shell utilisateur. Consultez les pages du
manuel de ksh(1) et csh(1) pour plus de détails concernant les fonctions
définies par l'utilisateur.

<p>
ssh possède aussi une option -N, pratique pour une utilisation de ssh en
"port forwarding" : si -N est spécifiée, il n'est plus nécessaire
d'utiliser une commande distante ("sleep 10" dans l'exemple ci-dessus).
Cependant, l'utilisation de cette option oblige ssh à attendre
indéfiniment (alors qu'avec une commande distante, ssh s'interrompra
après la fin d'exécution de cette dernière). L'utilisateur devra alors
mettre fin manuellement au processus ssh.

<h2><a name= "2.12">2.12 - Ma connexion ssh se fige ou s'arrête
    après N minutes d'inactivité.</a></h2>

<p>
Ceci est généralement dû à l'expiration de votre session ssh au niveau
d'un pare-feu ou d'un équipement de NAT en raison d'inactivité. Afin
d'éviter cela, vous pouvez activer
<b>ClientAliveInterval</b> dans le fichier de configuration serveur <i>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5">sshd_config</a></i>, 
ou activer <b>ServerAliveInterval</b> dans le fichier de configuration
client <i>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh_config&amp;sektion=5">
ssh_config</a></i>.
Cette dernière option n'est disponible qu'à partir de OpenSSH 3.8.

<p>
L'activation d'une des options précitées en positionnant leur valeur à
un intervalle plus petit que le temps d'inactivité avant expiration de
la session permettra de garder la session dans la table de connexion de
l'équipement, sans que la session expire.

<h2><a name= "2.13">2.13 - Comment puis-je utiliser scp pour copier un
    fichier dont le nom comporte deux-points ?</a></h2>

<b><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">
scp</a></b> interprétera l'élément précédant le point-virgule comme le
nom d'un serveur distant et tentera de s'y connecter. Pour empêcher
cela, utilisez un chemin relatif ou absolu, par exemple :

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ scp ./source:file sshserver:
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.14">2.14 - Pourquoi OpenSSH annonce sa version aux
    clients ?</a></h2>

<p>
Comme la plupart des implémentations SSH, OpenSSH annonce son nom et sa
version aux clients lorsque ces derniers initient une connexion. Par
exemple :
</p>

<blockquote>
SSH-2.0-OpenSSH_3.9
</blockquote>

<p>
Cette information est utilisée par les clients et les serveurs pour
activer des options de compatibilité protocolaire pour contourner des
fonctionnalités modifiées, problématiques ou absentes au niveau de
l'implémentation vers laquelle la connexion est initiée. Cette
fonctionnalité de vérification du protocole est encore requise à l'heure
actuelle car des versions avec des incompatibilités sont encore 
largement utilisées.
</p>

<h2><u><a name= "3.0">3.0 - Questions sur la version portable de
       OpenSSH</a></u></h2>

<h2><a name= "3.1">3.1 - Faux messages d'authentification dans les
    journaux système.</a></h2>

<p>
La version portable de OpenSSH générera de faux messages
d'authentification à chaque login, similaires à :

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
&quot;<b>authentication failure; (uid=0) -&gt; root for sshd service</b>&quot;
                </td>
        </tr>
</table>
</blockquote>

<p>
Ces messages sont générés car OpenSSH essaie d'abord de déterminer si un
utilisateur a besoin d'authentification pour se loguer (par exemple, un
mot de passe vide). Malheureusement, PAM aime enregistrer tous les
événements d'authentification, y compris celui-ci.

<p>
Si cela vous gêne beaucoup, positionnez &quot;<b>PermitEmptyPasswords
no</b>&quot; dans <i>sshd_config</i>. Ceci aura pour effet de stopper le
message d'erreur mais en désactivant, par la même occasion, les
connexions à des comptes sans mot de passe. C'est le comportement par
défaut si vous utilisez le fichier <i>sshd_config</i> fourni.

<h2><a name= "3.2">3.2 - Mots de passe vides non permis par
    l'authentification PAM.</a></h2>

<p> 
Pour permettre l'utilisation de mots de passe vides avec une version de
OpenSSH construite avec PAM, vous devez ajouter le drapeau nullok à la
fin du module de vérification du mot de passe dans le fichier
<i>/etc/pam.d/sshd</i>. Par exemple :

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
auth required/lib/security/pam_unix.so shadow nodelay nullok
                </td>
        </tr>
</table>
</blockquote>

<p>
Cette action doit être effectuée en plus du positionnement
&quot;<b>PermitEmptyPasswords yes</b>&quot; dans le fichier
<i>sshd_config</i>.

<p>
Il y a un problème lorsque des mots de passe vides sont utilisés avec
l'authentification PAM : PAM autorisera n'importe quel mot de passe
quand on s'authentifie sur un compte doté d'un mot de passe vide. Ce qui
a pour effet de casser la vérification que
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a>
effectue pour déterminer si un compte n'a pas de mot de passe positionné et
autorise l'accès quelque soit la politique spécifiée par
<b>PermitEmptyPasswords</b>. Pour cette raison, il est recommandé de ne
pas ajouter la directive <b>nullok</b> à votre fichier de configuration
PAM à moins que vous souhaitiez spécifiquement autoriser les mots de
passe vides.

<h2><a name= "3.3">3.3 - ssh(1) nécessite beaucoup de temps pour
effectuer une connexion ou ouvrir une session interactive</a></h2>

<p>
D'importants délais (plus de 10 secondes) à la connexion sont
typiquement causés par un problème au niveau de la résolution de noms :
<ul>
<li>Certaines versions de la glibc (notamment la glibc 2.1 fournie avec
Red Hat 6.1) peut nécessiter un temps significatif pour résoudre des
adresses IPv6 ou IPv4 à partir de noms de domaine. Un moyen de
contournement consiste à spécifier l'option <b>AddressFamily inet</b>
dans le fichier <i>ssh_config</i>.</li>

<li>Il peut y avoir un problème de résolution DNS côté client
ou côté serveur. Vous pouvez utiliser la commande <code>nslookup</code>
pour vérifier la résolution de noms et des adresses IP du client sur le
serveur et vice-versa. Vous pouvez désactiver la plupart des résolutions
DNS effectuées côté serveur en utilisant <b>UseDNS no</b> dans
<i>sshd_config</i>.</li>
</ul>

<p>
Des délais de moins de 10 secondes peuvent avoir d'autres causes.

<ul>

<li>Les versions d'OpenSSH antérieures à la version 3.8 ont un fichier
    <i>moduli</i> qui contient du moduli juste inférieur à ce que sshd
    nécessitait. En conséquence, sshd finissait par utiliser du moduli
    largement supérieur à ce qui était demandé d'où une baisse des
    performances. Le remplacement du fichier <i>moduli</i> résoudra ce
    problème. Il est à noter que, dans la plupart des cas, le fichier
    n'est pas remplacé suivant une mise à jour. Il devra alors être
    remplacé manuellement.</li>

<li>Les versions d'OpenSSH antérieures à la version 3.8 contiennent un
    défaut dans <code>ssh</code>. À cause de ce défaut, ssh demande du moduli
    plus grand que nécessaire. Combiné au problème précité, les baisses de
    performance étaient encore plus significatives. La mise à jour du client en
    version 3.8 ou supérieure résout ce problème.</li>

<li>Si le client ou le serveur ne possède pas un mécanisme de génération
    de nombres aléatoires basé sur le noyau (par exemple : Solaris &lt;
    9, AIX &lt; 5.2, HP-UX &lt; 11.11) et qu'aucun mécanisme alternatif
    n'est disponible (par exemple :
    <a href="ftp://ftp.ayamura.org/pub/prngd/">prngd</a>, il est alors
    possible qu'un des programmes appelés par <code>ssh-rand-helper</code>
    pour générer de l'entropie ne rend pas la main. Pour vérifier si c'est le
    cas, il suffit de l'exécuter en mode debug :

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
/usr/local/libexec/ssh-rand-helper -vvv
                </td>
        </tr>
</table>
</blockquote>

Tout délai significatif à la connexion doit être investigué et corrigé.
Sinon, il suffira de supprimer les commandes posant problème du fichier
<i>ssh_prng_cmds</i>.
</li>

</ul>

<h3>Lenteur des connexions</h3>
Dans des conditions normales, la vitesse des sessions interactives SSH
dépend de la vitesse du processeur sur le client et sur le serveur. À
titre de comparaison, les données suivantes représentent des temps de
connexion typiques pour l'exécution de <code>time ssh localhost
true</code> avec une clé RSA de 1024 bits sur des machines non
chargées. OpenSSH et OpenSSL ont été compilés avec gcc 3.3.x.

<p>
<table>
<tr><th>CPU</th><th>Time (SSHv1)<a href="#3.3fn1">[1]</a></th>
        <th>Time (SSHv2)</th></tr>
<tr><td>170MHz SPARC/sun4m</td><td>0.74 sec</td><td>1.25 sec</td></tr>
<tr><td>236MHz HPPA/8200<a href="#3.3fn2">[2]</a></td><td>0.44 sec</td>
        <td>0.79 sec</td></tr>
<tr><td>375MHz PowerPC/604e</td><td>0.38 sec</td><td>0.51 sec</td></tr>
<tr><td>933MHz VIA Ezra</td><td>0.34 sec</td><td>0.44 sec</td></tr>
<tr><td>2.1GHz Athlon XP 2600+</td><td>0.14 sec</td><td>0.22 sec</td></tr>
</table>

<br>

<a name="3.3fn1">[1]</a> 
Le protocole SSHv1 est plus rapide que SSHv2 mais cryptographiquement
plus faible.<br>

<a name="3.3fn2">[2]</a>
À l'heure de la rédaction de ces lignes, gcc génère
du code relativement lent sous HPPA pour les opérations RSA et
Diffie-Hellman (veuillez consulter
<a href= "http://gcc.gnu.org/bugzilla/show_bug.cgi?id=7625">gcc
bug #7625</a> et
<a href="http://marc.info/?l=openssh-unix-dev&amp;m=102646106016694">discussion
on openssh-unix-dev</a>).

<h2><a name= "3.4">3.4 - Messages d'erreur "Can't locate module
    net-pf-10" dans les journaux système sous Linux.</a></h2>

<p>
Le noyau Linux recherche (à travers modprobe) la famille de protocoles
10 (IPv6). Il faut soit charger le module noyau approprié, soit saisir
l'alias correct dans <i>/etc/modules.conf</i> ou désactiver IPv6 dans
<i>/etc/modules.conf</i>.


<p>
Pour une raison inconnue, <i>/etc/modules.conf</i> peut aussi s'appeler
<i>/etc/conf.modules</i>.


<h2><a name= "3.5">3.5 - L'authentification par mot de passe ne
    fonctionne pas (sous Slackware 7.0 ou Red Hat 6.x par
    exemple)</a></h2>

<p> 
Si le mot de passe est correct mais la connexion est refusée, il est
fort probable que le système soit configuré pour utiliser des mots de
passe de type MD5. Cependant, la fonction
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crypt&amp;sektion=3">crypt(3)</a>
utilisée par sshd ne sait pas les interpréter.

<p>
Les comptes d'utilisateurs affectés par ce problème contiendront dans les
fichiers <i>/etc/passwd</i> ou <i>/etc/shadow</i> les caractères <b>$1$</b> en
début de la chaîne représentant le mot de passe.
Vous pouvez être pratiquement sûr que tel est le problème lorsque
l'authentification par mots de passe échoue pour les nouveaux comptes ou
pour les comptes dont le mot de passe a été changé récemment, alors
qu'elle fonctionne pour les anciens comptes.

<p>
La cause sous-jacente de ce problème est l'existence de certaines
versions d'OpenSSL dont la fonction crypt(3) ne sait pas interpréter les
mots de passe MD5 et l'ordre de liage des bibliothèques au sein de sshd
donne une préférence à la fonction crypt(3) fournie par le système. Le
programme configure d'OpenSSH tente de corriger ce problème lorsqu'il le
détecte mais il n'est pas toujours couronné de succès.

<p>
Il existe plusieurs solutions possibles :

<ul>
<li>
<p>
Activer le support natif des mots de passe MD5 de sshd à la compilation.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
./configure --with-md5-passwords [options]
                </td>
        </tr>
</table>
</blockquote>

Cette solution est sans danger même si vous avez les deux types de
chiffrement du mot de passe. En effet, sshd sélectionnera
automatiquement l'algorithme adapté pour chaque compte.

<li>
<p>
Si votre système a une bibliothèque libcrypt séparée (tel que Slackware 7),
vous pouvez ajouter manuellement -lcrypt à la liste LIBS pour que cette
bibliothèque soit utilisée au lieu de celle d'OpenSSL.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
LIBS=-lcrypt ./configure [options]
                </td>
        </tr>
</table>
</blockquote>

<li>
<p>
Si votre plate-forme supporte PAM, vous pouvez configurer sshd de telle
manière à ce qu'il utilise les fonctionnalités PAM (voir la <a href=
"#3.15" >section 3.15</a>). Ceci se traduira alors par une modification
dans la manière utilisée par sshd pour vérifier la validité des mots de
passe qui lui sont soumis : il fera appel aux modules PAM configurés
pour cette vérification au lieu de le faire lui-même.
</ul>

<h2><a name= "3.6">3.6 - Configure ou sshd(8) se plaignent de l'absence
    du support RSA</a></h2>

<p> 
Assurez-vous que vos bibliothèques OpenSSL disposent du support RSA ou DSA
soit en interne soit à travers RSAref.

<h2><a name= "3.7">3.7 - Erreurs "scp: command not found"</a></h2>

<p> 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a>
doit être dans le PATH par défaut sur le client et sur le serveur. Vous
aurez peut-être besoin d'utiliser l'option
<b>--with-default-path</b> pour spécifier un chemin particulier
à inclure sur le serveur. Cette option remplace le chemin par
défaut. Vous aurez donc besoin de spécifier tous les
répertoires actuellement dans votre chemin aussi bien que le
répertoire dans lequel se trouve scp. Par exemple :

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>./configure --with-default-path=/bin:/usr/bin:/usr/local/bin:/path/to/scp</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
La configuration effectuée par l'administrateur du serveur est
prioritaire par rapport à <b>--with-default-path</b>. Ceci inclut la
mise à zéro de PATH dans <i>/etc/profile</i>, PATH dans
<i>/etc/environment</i> sous AIX, ou (pour les versions d'OpenSSH
supérieures ou égales à 3.7p1), le positionnement
de PATH ou de SUPATH dans <i>/etc/default/login</i> sous Solaris ou
Reliant Unix.

<h2><a name= "3.8">3.8 - Incapable de lire la phrase de protection
    (passphrase)</a></h2>

<p> 
Certains systèmes d'exploitation positionnent des permissions
incorrectes sur <i>/dev/tty</i>. En conséquence, la lecture de
mots de passe échoue avec l'erreur suivante :

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
You have no controlling tty.  Cannot read passphrase.
                </td>
        </tr>
</table>
</blockquote>

<p> 
La solution consiste à positionner les permissions à 0666 sur
<i>/dev/tty</i> et soumettre l'erreur comme étant un bogue à l'éditeur
de votre OS.

<h2><a name= "3.9">3.9 - 'configure' manquant ou make
    échoue</a></h2>

<p> 
S'il n'y a pas de fichier 'configure' dans le fichier tar.gz que vous
avez téléchargé ou si make échoue avec des
erreurs du type "missing separator", vous avez probablement
téléchargé la distribution OpenBSD de OpenSSH et
vous êtes en train d'essayer de la compiler sur une autre
plate-forme. Merci de consulter la page 
<a href="portable.html">portable version</a>.

<h2><a name= "3.10">3.10 - Connexions suspendues quand on quitte
    ssh</a></h2>

<p> 
OpenSSH peut suspendre une connexion en phase de terminaison. Ceci peut
arriver quand il y a un processus actif en arrière-plan. C'est un
problème connu sous Linux et HP-UX. On peut vérifier son existence en
faisant :

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>sleep 20 &amp; exit</b>
                </td>
        </tr>
</table>
</blockquote>

Ou essayez plutôt d'utiliser la commande suivante : 
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>sleep 20 &lt; /dev/null &gt; /dev/null 2&gt;&amp;1 &amp;</b>
                </td>
        </tr>
</table>
</blockquote>

<p> 
Une solution de contournement pour les utilisateurs bash est de mettre
<b>"shopt -s huponexit"</b> soit dans /etc/bashrc soit dans ~/.bashrc.
Autrement, consultez la page de manuel de votre shell pour une option
qui permet d'envoyer un signal HUP à des tâches actives
durant la phase de terminaison. Consultez
<a href="http://bugzilla.mindrot.org/show_bug.cgi?id=52">bug #52</a>
pour d'autres solutions de contournement.

<h2><a name= "3.11">3.11 - Pourquoi ssh suspend la connexion durant la
    phase de sortie du programme ?</a></h2>

<p>
Quand la commande 
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>ssh host command</b>
                </td>
        </tr>
</table>
</blockquote>
est exécutée, ssh <b>a besoin</b> de suspendre la
connexion, car il doit attendre :
<ul>
<li>Jusqu'à ce qu'il soit sûr que <code>command</code> n'a
     pas besoin d'autres informations en entrée.
<li>Jusqu'à ce qu'il soit sûr que <code>command</code> ne
     produit pas d'autres informations en sortie.
<li>Jusqu'à ce que <code>command</code> finisse car sshd a besoin
    de communiquer le code de sortie de <code>command</code> à
    ssh.
</ul>
<p>

<h2><a name= "3.12">J'ai effectué une mise à jour vers
    OpenSSH 3.1 et X11 forwarding cesse de fonctionner.</a></h2>

À partir de OpenSSH 3.1, le serveur sshd x11 forwarding écoute
sur localhost par défaut. Vous pouvez utiliser l'option
<b>X11UseLocalhost</b> pour revenir au comportement
précédent si vos anciens clients X11 ne fonctionnent pas
avec cette configuration.

<p> 
De manière générale, les clients X11 utilisant X11
R6 devraient fonctionner avec le paramétrage par défaut.
Certains éditeurs, HP compris, utilisent sur leurs
systèmes des clients X11 avec des bibliothèques R6 et R5. Ainsi,
certains clients vont fonctionner et d'autres ne fonctionneront pas.
C'est le cas pour HP-UX 11.X.<p>

<h2><a name= "3.13">3.13 - J'ai mis à jour OpenSSH en version 3.8 et
certains programmes X11 ne fonctionnent plus.</a></h2>

<p>
Tel que c'est documenté dans les <a href="../txt/release-3.8">notes
d'information de la version 3.8</a>, <code>ssh</code> utilise désormais
les cookies X11 non dignes de confiance par défaut. Le comportement
précédent peut être restauré en positionnant <b>ForwardX11Trusted yes</b>
dans <i>ssh_config</i>.

<p>
Voici une liste de quelques symptômes possibles :<br> <code>BadWindow
(invalid Window parameter)<br> BadAccess (attempt to access private
resource denied)<br> X Error of failed request: BadAtom (invalid Atom
parameter)<br> Major opcode of failed request: 20
(X_GetProperty)<br></code>

<h2><a name= "3.14">3.14 - J'ai copié ma clé dans le
    fichier authorized_keys mais l'authentification par clés ne
    fonctionne toujours pas.</a></h2>

<p>
Ce problème est typiquement causé par des permissions plus larges que
celles permises par sshd par défaut pour les répertoires $HOME,
$HOME/.ssh ou le fichier $HOME/.ssh/authorized_keys.

<p>
Dans ce cas, l'exécution des commandes suivantes sur le serveur
résoudra le problème :
<blockquote>
<table border=0 width="800">
<tr>
  <td nowrap bgcolor="#EEEEEE">
$ <b>chmod go-w $HOME $HOME/.ssh</b><br>
$ <b>chmod 600 $HOME/.ssh/authorized_keys</b><br>
$ <b>chown `whoami` $HOME/.ssh/authorized_keys</b><br>
  </td>
</tr>
</table>
</blockquote>

<p>
Si, pour quelque raison que ce soit, ce n'est pas envisageable de faire
ça une solution alternative consiste à positionner
<b>StrictModes no</b> dans <i>sshd_config</i>, cependant cette solution
n'est pas recommandée.

<h2><a name= "3.15">3.15 - Les versions d'OpenSSH et leur comportement
vis-à-vis de PAM.</a></h2>

La version portable d'OpenSSH a la possibilité, via une option de
compilation, d'activer le support de l'interface <a
href="http://www.opengroup.org/onlinepubs/008329799/">PAM</a>(Pluggable
Authentication Modules) au niveau de sshd.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
./configure --with-pam [options]
                </td>
        </tr>
</table>
</blockquote>

Pour activer le support PAM, cette option doit être utilisée à la
compilation. Le comportement de la version portable d'OpenSSH, lorsque
le support PAM est activé, dépend de la version utilisée et, dans le cas
des versions les plus récentes, du positionnement de la directive
<b>UsePAM</b> à <b>yes</b> dans le fichier de configuration <i>sshd_config</i>.

<p>
Le tableau ci-après résume le comportement des options
d'authentifications lorsque le support PAM est activé.

<p>
<table border="1">
  <tr> <th>Version</th> <th>Valeur par défaut de UsePAM</th> <th>PasswordAuthentication</th>
<th>ChallengeResponseAuthentication</th> </tr>
  <tr>
    <td>&lt;=3.6.1p2</td>
    <td>Non applicable</td>
    <td>Utilise PAM</td>
    <td>Utilise PAM si <b>PAMAuthenticationViaKbdInt</b> est activé</td>
  </tr>
  <tr>
    <td>3.7p1 - 3.7.1p1</td>
    <td><b>yes</b></td>
    <td>N'utilise pas PAM</td>
    <td>Utilise PAM si <b>UsePAM</b> est activé</td>
  </tr>
  <tr>
    <td>3.7.1p2 - 3.8.1p1</td>
    <td><b>no</b></td>
    <td>N'utilise pas PAM <a href="#3.15fn1">[1]</a></td>
    <td>Utilise PAM si <b>UsePAM</b> est activé</td>
  </tr>
  <tr>
    <td>3.9p1</td>
    <td><b>no</b></td>
    <td>Utilise PAM si <b>UsePAM</b> est activé</td>
    <td>Utilise PAM si <b>UsePAM</b> est activé</td>
  </tr>
</table>
<p>

<a name= "3.15fn1">[1]</a> Certains éditeurs, notamment Red Hat/Fedora,
ont intégré le comportement de PasswordAuthentitication de la version
3.9p1 à leurs paquetages 3.8x. Si vous utilisez un paquetage fourni par
un éditeur, consultez la documentation qui l'accompagne.

<p>
L'interface PAM de la version portable d'OpenSSH a encore quelques
problèmes avec certains modules. Nous espérons toutefois réduire le
nombre de ces problèmes dans le futur. Les problèmes connus au niveau de
la version 3.9p1 sont les suivants :

<ul>
  <li>Les modules s'appuyant sur des données de module privées (tels que
pam_dhkeys, pam_krb5 et AFS) peuvent échouer à créer correctement les
habilitations (bogue numéro <a
href="http://bugzilla.mindrot.org/show_bug.cgi?id=688">#688</a>) lors de
l'authentification via <b>ChallengeResponseAuthentication</b>.
<b>PasswordAuthentication</b> devrait fonctionner sans problème.
</ul>

Vous pouvez aussi consulter
<a href="http://bugzilla.mindrot.org/buglist.cgi?product=Portable+OpenSSH&amp;bug_status=RESOLVED&amp;bug_status=NEW&amp;bug_status=ACCEPTED&amp;component=PAM+support">bugzilla
pour les problèmes PAM actuels</a>.

<h2><a name= "3.16">3.16 - Pourquoi "w" et "who" ne montrent pas les
    utilisateurs logués via ssh sur AIX 5.x ?</a></h2>

Entre AIX 4.3.3 et AIX 5.x, le format de la struct wtmp a changé. Cela
signifie que les binaires sshd compilés sur AIX 4.x n'écriront pas
correctement les entrées wtmp lors de leurs lancements sur AIX 5.x. Ceci
peut être corrigé en recompilant simplement sshd sur les systèmes AIX
5.x et en les utilisant.

<hr>
<a href="index.html"><img height=24 width=24 src="../back.gif" border=0 alt=OpenSSH></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: faq.html,v 1.113 ]<br>
$Translation: faq.html,v 1.50 2012/04/21 20:15:12 rustybsd Exp $<br>
-->
$OpenBSD: faq.html,v 1.44 2012/04/21 22:25:29 ajacoutot Exp $
</small>

</body>
</html>
@


1.44
log
@Sync with Steelix CVS
@
text
@d1371 1
a1371 1
$OpenBSD$
@


1.43
log
@Sync with Steelix CVS
@
text
@d1257 1
a1257 1
$ <b>chmod 600 $HOME/.ssh/authorized_keys</b>
d1368 2
a1369 2
Originally [OpenBSD: faq.html,v 1.112 ]<br>
$Translation: faq.html,v 1.49 2012/03/17 07:26:10 rustybsd Exp $<br>
@


1.42
log
@Sync with Steelix CVS
@
text
@d29 1
a29 1
<li><a href= "#1.2">1.2 - Pourquoi devrait on l'utiliser ?</a>
d51 1
a51 1
<li><a href= "#2.6">2.6 - A quoi correspondent les messages
d118 1
a118 1
A l'opposé de ces applications, OpenSSH ne fait jamais passer quelque chose
d192 1
a192 1
d'OpenSSH (souvent renommée ou nommé de maniére interne), donc la plupart
d203 1
a203 1
distribution multi-platforme <a href="portable.html">Portable</a> d'un
d207 1
a207 1
<h2><a name= "1.2">1.2 - Pourquoi devrait on l'utiliser ?</a></h2>
d214 1
a214 1
<li>Authentification forte. Evite plusieurs trous de sécurité (par
d230 1
a230 1
    se prémunir contre les chevaux de troie (par routage ou usurpation
d240 1
a240 1
<li>Le programme serveur possède sa propre clé RSA qui est regénérée
d263 1
a263 1
assez de fuites de radiations éléctromagnétiques pour permettre des
d288 1
a288 1
données sont saines et sauves puisque personne n'est supposée savoir
d329 2
a330 2
problème de brevet ou de droit d'auteur. A cet effet, quelques options
ont été retirées de OpenSSH; plus précisement le support d'algorithmes
d344 1
a344 1
Etant donné que le brevet RSA a expiré, il n'y a plus de restrictions au
d380 1
a380 1
d'utilisateur fournit par le client. Pour désactiver ce comportement,
d421 1
a421 1
protocole version 2), le client ssh a besoin d'accèder à la <i>clé
d430 1
a430 1
A partir d'OpenSSH 3.3, <code>ssh</code> n'est pas setuid par défaut.
d471 1
a471 1
une version récente de OpenSSH ou désactiver la renégociation de clés en
d508 1
a508 1
<h2><a name= "2.6">2.6 - A quoi correspondent les messages
d522 1
a522 1
rencontrées. Pour se débarasser de ces messages, éditez vos fichiers
d567 1
a567 1
Remarque sur l'intéropérabilité des agents : il y a deux types
d648 1
a648 1
spécification approchante de ce que fait scp est celle de rcp. Etant
d650 1
a650 1
extrêmités de la communication, l'ajout de fonctionnalités ou d'options
d738 1
a738 1
indéfiniment (alors qu'avec une commande distante, ssh s'interrompera
d902 1
a902 1
    nécessitait. Par conséquence, sshd finissait par utiliser du moduli
d910 1
a910 1
    défaut dans <code>ssh</code>. A cause de ce défaut, ssh demande du moduli
d943 1
a943 1
dépend de la vitesse du processeur sur le client et sur le serveur. A
d968 1
a968 1
A l'heure de la rédaction de ces lignes, gcc génère
d1071 1
a1071 1
Assurez vous que vos bibliothèques OpenSSL disposent du support RSA ou DSA
d1136 2
a1137 2
vous êtes entrain d'essayer de la compiler sur une autre
plate-forme. Merci de consultez la page 
d1145 1
a1145 1
arriver quand il y a un processus actif en arrière plan. C'est un
d1209 1
a1209 1
A partir de OpenSSH 3.1, le serveur sshd x11 forwarding écoute
d1242 1
a1242 1
    fonctionne toujours .</a></h2>
d1369 1
a1369 1
$Translation: faq.html,v 1.48 2010/09/25 09:28:30 benoit Exp $<br>
@


1.41
log
@Sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1999-2005 OpenBSD.">
a20 2
<strong>Date : 2005/09/20</strong>

d116 7
a122 8
OpenSSH est une version <b>LIBRE</b> de la suite d'outils de
connectivité réseau SSH sur laquelle s'appuie un nombre croissant de
personnes sur Internet. Beaucoup d'utilisateurs de telnet, rlogin, ftp
et d'autres programmes de ce type ne réalisent pas toujours que leurs
mots de passe sont transmis en clair sur Internet.
OpenSSH crypte l'intégralité du trafic (mots de passe compris) pour
éliminer efficacement l'écoute indiscrète, le vol de connexion, et
d'autres attaques au niveau réseau.
d186 19
a204 8
OpenSSH est disponible sous forme de deux distributions
téléchargeables : la distribution <a href="openbsd.html">OpenBSD</a>
originale et la distribution <a href="portable.html">Portable</a> multi-
plates-formes. Si vous souhaitez utiliser OpenSSH sur une version récente
d'OpenBSD ou pour l'intégrer dans un produit, utilisez la distribution
<a href="openbsd.html">OpenBSD</a>. Si vous souhaitez utiliser OpenBSD
sur une autre plate-forme ou sur une ancienne version d'OpenBSD,
utilisez la distribution <a href="portable.html">Portable</a>.
a205 3
<p>
Lors d'un téléchargement, utilisez s'il vous plaît un <a
href="portable.html#mirrors">miroir</a> près de chez vous.
d1368 2
a1369 2
Originally [OpenBSD: faq.html,v 1.111 ]<br>
$Translation: faq.html,v 1.47 2010/03/21 10:36:29 benoit Exp $<br>
@


1.40
log
@Sync with Steelix CVS
@
text
@d1363 2
a1364 2
Originally [OpenBSD: faq.html,v 1.110 ]<br>
$Translation: faq.html,v 1.46 2009/11/24 07:41:20 benoit Exp $<br>
@


1.39
log
@Sync with Steelix CVS -- we are back to normal operation!
@
text
@d1253 1
d1363 2
a1364 2
Originally [OpenBSD: faq.html,v 1.109 ]<br>
$Translation: faq.html,v 1.45 2009/04/06 09:41:36 benoit Exp $<br>
@


1.38
log
@Sync with Steelix CVS
@
text
@d651 1
a651 1
<a href="http://www.ietf.org/html.charters/secsh-charter.html">
d1362 2
a1363 2
Originally [OpenBSD: faq.html,v 1.108 ]<br>
$Translation: faq.html,v 1.44 2008/07/10 19:59:34 gapz Exp $<br>
@


1.37
log
@sync with steelix translation CVS
@
text
@d37 2
d359 1
d363 4
d795 2
a796 3
actuelle car le protocole SSH n'a pas encore été publié en tant que RFC
et d'autres modifications incompatibles peuvent être introduites avant
que cette publication n'aie lieu.
d1362 2
a1363 2
Originally [OpenBSD: faq.html,v 1.107 ]<br>
$Translation: faq.html,v 1.43 2007/06/21 12:11:15 ajacoutot Exp $<br>
@


1.36
log
@sync with steelix translation CVS
@
text
@d350 1
a350 1
<a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=1&amp;w=2">theaimsgroup.com</a>.
d962 1
a962 1
<a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;m=102646106016694">discussion
d1356 2
a1357 2
Originally [OpenBSD: faq.html,v 1.106 ]<br>
$Translation: faq.html,v 1.42 2007/03/16 14:58:51 ajacoutot Exp $<br>
@


1.35
log
@sync with Steelix CVS
@
text
@d104 1
a104 1
	 utilisateurs loggués via ssh sur AIX 5.x ?</a>
d154 1
a154 1
- C'est le programme client utilisé pour se logguer sur une autre
d260 1
a260 1
Quand vous vous logguez, votre mot de passe transite dans le réseau en
d815 1
a815 1
utilisateur a besoin d'authentification pour se logguer (par exemple, un
d1342 1
a1342 1
    utilisateurs loggués via ssh sur AIX 5.x ?</a></h2>
d1357 1
a1357 1
$Translation: faq.html,v 1.41 2007/02/07 15:54:56 benoit Exp $<br>
@


1.34
log
@sync with steelix translation CVS
@
text
@d35 1
a35 1
    l'utilisation, et des brevets ?</a>
d208 1
a208 1
    exemple, IP, routage, et usurpation DNS).
d227 1
a227 1
    authentication (pour prévenir les usurpations DNS, routage, ou IP).
d239 1
a239 1
    restreintes) même sans privilèges root.
d246 1
a246 1
<li>Remplacement complet de rlogin, rsh, et rcp. 
d251 1
a251 1
informatiques sont effectuées sans cryptage. Par conséquence, n'importe
d255 1
a255 1
les espions industriels, et les gouvernements. Certains réseaux ont
d263 1
a263 1
incidents ont été constatés au niveau modial lorsque des pirates ont
d274 1
a274 1
informations financières, etc. De nos jours, n'importe qui ayant un
d321 1
a321 1
Les développeurs OpenSSH ont fait beaucoup d'efforts pour éviter tout
d419 1
a419 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign">ssh-keysign</a>,
d436 1
a436 1
OpenSSH 2.2.0 détecte ce défaut sur SSH 2.3. Les version récentes de SSH
d549 2
a550 2
de fichiers <i>xbase</i> mais cela sera propablement différent sous
d'autres plate-formes. En ce qui concerne OpenSSH Portable, xauth devra
d560 2
a561 2
libre. Ceci signifie donc que l' "agent forwarding" ne peut pas être
utiliser entre OpenSSH et ces protocoles.
d665 1
a665 1
(par exemple fetchmail, irc ...) sur la machine client en précisant le
d684 2
a685 3
machine cliente ``127.0.0.1'' (localhost) et un serveur distant " This
is an example of tunnelling an IRC session from client machine
``127.0.0.1'' (localhost) to remote server ``server.example.com'':
d906 2
a907 2
    9, AIX &lt; 5.2, HP-UX &lt; 11.11) et qu'aucun mécanisme altenatif
    n'est disponibles (par exemple :
d1099 1
a1099 1
incorrectes sur <i>/dev/tty</i>. Par conséquence, la lecture de
d1125 1
a1125 1
vous êtes entrain de d'essayer de la compiler sur une autre
d1219 1
a1219 1
précédent peut être restoré en positionnant <b>ForwardX11Trusted yes</b>
d1320 1
a1320 1
éditeur, consultez la documentation qui l'accompagne.
d1330 1
a1330 1
pam_dhkeys, pam_krb5, et AFS) peuvent échouer à créer correctement les
d1357 1
a1357 1
$Translation: faq.html,v 1.40 2006/06/26 13:00:19 ajacoutot Exp $<br>
@


1.33
log
@sync with steelix translation CVS
@
text
@d1320 1
a1320 1
3.9p1 à leurs packages 3.8x. Si vous utilisez un package fourni par
d1358 1
a1358 1
$Translation: faq.html,v 1.39 2006/05/02 10:00:50 ajacoutot Exp $<br>
@


1.32
log
@sync with steelix translation CVS
@
text
@d550 1
a550 1
d'autres plateformes. En ce qui concerne OpenSSH Portable, xauth devra
d1127 1
a1127 1
plateforme. Merci de consultez la page 
d1358 1
a1358 1
$Translation: faq.html,v 1.38 2006/04/25 13:32:43 ajacoutot Exp $<br>
@


1.31
log
@sync with steelix translation CVS
@
text
@d1004 1
a1004 1
mots de passe MD5 et l'ordre de liage des librairies au sein de sshd
d1033 1
a1033 1
Si votre système a une librairie libcrypt séparée (tel que Slackware 7),
d1035 1
a1035 1
librairie soit utilisée au lieu de celle d'OpenSSL.
d1061 1
a1061 1
Assurez vous que vos librairies OpenSSL disposent du support RSA ou DSA
d1209 1
a1209 1
systèmes des clients X11 avec des librairies R6 et R5. Ainsi,
d1358 1
a1358 1
$Translation: faq.html,v 1.37 2006/04/18 11:02:27 ajacoutot Exp $<br>
@


1.30
log
@sync with Steelix CVS
@
text
@d546 9
d1357 2
a1358 2
Originally [OpenBSD: faq.html,v 1.105 ]<br>
$Translation: faq.html,v 1.36 2006/02/28 14:39:22 ajacoutot Exp $<br>
@


1.29
log
@sync with steelix translation CVS
@
text
@d146 1
a146 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sekt- ion=8">sshd(8)</a>
d344 1
a344 1
<a href="http://www.openssh.com/fr/">site web principal de OpenSSH</a>, il
d349 2
a350 2
recherches sur <a href="http://marc.theaimsgroup.com/?l=openssh-unix-
dev&amp;r=2&amp;w=2"> theaimsgroup.com</a>.
d409 2
a410 2
protocole version 2), le client ssh a besoin d'accèder à la <em>clé
privée d'hôte</em> pour authentifier la machine cliente auprès du
d783 1
d846 4
a849 4
a pour effet de casser la vérification que <a href="http://www.openbsd.org/cgi-
bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> effectue pour
déterminer si un compte n'a pas de mot de passe positionné et autorise
l'accès quelque soit la politique spécifiée par
d866 1
a866 1
dans le fichier <i>ssh_config</i>.
d873 1
a873 1
<i>sshd_config</i>.
d888 1
a888 1
    remplacé manuellement.
d891 4
a894 5
    défaut dans <code>ssh</code>. A cause de ce défaut, <code>ssh</code>
    demande du moduli plus grand que nécessaire. Combiné au problème
    précité, les baisses de performance étaient encore plus
    significatives. La mise à jour du client en version 3.8 ou
    supérieure résout ce problème.
d901 3
a903 4
    possible qu'un des programmes appelés par <code>ssh-rand-
    helper</code> pour générer de l'entropie ne rend pas la main. Pour
    vérifier si c'est le cas, il suffit d'exécuter
    <code>ssh-rand-helper</code> en mode debug :
d918 2
a919 1
 
d979 3
a981 3
passe de type MD5. Cependant, la fonction <a href="http://www.openbsd.org/cgi-
bin/man.cgi?query=crypt&amp;sektion=3">crypt(3)</a> utilisée par sshd ne
sait pas les interpréter.
d984 3
a986 3
Les comptes d'utilisateurs affectés par ce problème contiendront les
caractères <b>$1$</b> en début de la chaîne représentant le mot de passe
dans <i>/etc/passwd</i> ou <i>/etc/shadow</i>.
d1225 1
d1272 1
a1272 1
<b>UsePAM</b> dans le fichier de configuration <i>sshd_config</i>.
d1349 1
a1349 1
$Translation: faq.html,v 1.35 2006/01/19 13:14:56 saad Exp $<br>
@


1.28
log
@sync with Steelix CVS
@
text
@d1347 2
a1348 2
Originally [OpenBSD: faq.html,v 1.103 ]<br>
$Translation: faq.html,v 1.34 2005/12/10 20:27:59 aanriot Exp $<br>
@


1.27
log
@sync with Steelix CVS
@
text
@d119 4
a122 4
et d'autres programmes de ce type peuvent ne pas réaliser que leurs mots
de passe est transmis en clair à travers Internet alors qu'en fait, ça
l'est. OpenSSH crypte l'intégralité du trafic (mots de passe compris)
pour éliminer efficacement l'écoute indiscrète, le vol de connexion, et
d135 2
a136 1
et <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> 
d147 6
a152 6
- Programme serveur qui s'exécute sur la machine serveur. Il
  attend des connexions à partir des machines clientes, et
  lorsqu'il en reçoit, il effectue l'authentification et
  commence à répondre aux requêtes du client.
  Son fonctionnement est contrôlé par le fichier de configuration
<i><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5">sshd_config(5)</a></i>.
d158 2
a159 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh_config&amp;sektion=5">
ssh_config(5)</a></i> et les fichiers personnels <i>$HOME/.ssh/config</i>.
d207 1
a207 1
<li>Authentification forte. Ferme plusieurs trous de sécurité (par
d256 1
a256 1
assez de fuites de radiation éléctromagnétique pour permettre des
d315 2
a316 3
Une liste d'éditeurs qui incluent OpenSSH dans leur distribution
se trouve dans la page des
<a href="users.html">Systèmes utilisant OpenSSH</a>.
d319 1
a319 1
    l'utilisation, et des brevets ?</a></h2>
d323 1
a323 1
ont été retirées de OpenSSH. Plus précisement le support d'algorithmes
d329 1
a329 1
Blowfish,CAST128, Arcfour et AES peuvent être choisis. L'algorithme
d361 1
a361 2
<h2><u><a name= "2.0">2.0 - Questions
       Générales</a></u></h2>
d366 5
a370 6
Le client OpenSSH utilise des ports privilégiés (low numbered ports)
pour l'authentification rhosts et rhosts-rsa parce que le serveur a
besoin de se fier au nom d'utilisateur fournit par le client. Pour
désactiver ce comportement, vous pouvez ajouter la ligne suivante à
votre fichier <i>ssh_config</i> ou à
<i>~/.ssh/config</i>.
d397 1
a397 1
    ?</a></h2>
d400 5
a404 5
Conjointement avec la question précédente ( <a href="#2.1">2.1</a>),
OpenSSH a besoin de l'autorité root pour être capable de s'attacher aux
ports privilégiés afin de faciliter <i> l'authentification rhosts</i>.
Un port privilégié est aussi requis pour l'authentification rhosts-rsa
sur les anciennes versions de older SSH.
d410 1
a410 1
privée d'hôte </em>pour authentifier la machine cliente auprès du
d418 1
a418 2
A partir d'OpenSSH 3.3, <code>ssh</code> n'est pas setuid par
défaut.
d431 2
a432 2
entier obtenu à partir du digest. Au lieu de cela, il fournissait
toujours 128 bits. Pour des digests plus grands, ça entraînait des
d437 2
a438 2
fixeront ce défaut. Autrement, vous pouvez ajouter la ligne suivante à
<i>sshd2_config </i> de SSH 2.3.
d478 1
a478 1
crypter leur <i>/etc/ssh/ssh_host_key</i>. Ce problème se manifestera
d481 3
a483 3
ne pourra pas lire sa clé d'hôte. Pour le résoudre,
utilisez la commande ci-après pour convertir votre ssh_host_key
en 3DES. <b>REMARQUE :</b> Utilisez le programme 
d602 2
a603 2
sftp/scp confus. Vous pouvez vérifier si c'est le cas pour votre shell
en exécutant la commande suivante :
d788 1
a788 1
    journaux systèmes.</a></h2>
d903 2
a904 2
    vérifier si c'est le cas, il suffit d'exécuter <code>ssh-rand-
    helper</code> en mode debug :
d927 2
a928 2
true</code> avec une clé RSA de 1024 bits sur des machines non chargées.
OpenSSH et OpenSSL ont été compilés avec gcc 3.3.x.
d1348 1
a1348 1
$Translation: faq.html,v 1.33 2005/11/01 07:29:33 aanriot Exp $<br>
@


1.26
log
@sync with Steelix CVS
@
text
@d216 1
a216 1
<li>Aucun reformation nécessaire pour les utilisateurs normaux.
d227 1
a227 1
<li>La distribution de clés d'authentification hôte peut être effectuée
d1351 1
a1351 1
$Translation: faq.html,v 1.32 2005/10/30 18:15:25 saad Exp $<br>
@


1.25
log
@sync with Steelix CVS
@
text
@d189 1
a189 1
plateformes. Si vous souhaitez utiliser OpenSSH sur une version récente
d1351 1
a1351 1
$Translation: faq.html,v 1.31 2005/09/21 13:35:12 saad Exp $<br>
@


1.24
log
@sync with Steelix CVS
@
text
@d21 1
a21 1
<strong>Date : 2005/01/25</strong>
d661 3
a663 1
lors chiffrée dans le tunnel ssh.
d669 6
a674 2
forwarding" dynamique, et l'option -f qui permet de mettre ssh en tâche
de fond. Ces options sont détaillées plus bas.
d1350 2
a1351 2
Originally [OpenBSD: faq.html,v 1.101 ]<br>
$Translation: faq.html,v 1.30 2005/05/21 07:08:31 aanriot Exp $<br>
@


1.23
log
@sync with Steelix CVS
@
text
@d951 2
a952 1
<a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&m=102646106016694">discussion on openssh-unix-dev</a>).
d1344 2
a1345 2
Originally [OpenBSD: faq.html,v 1.100 ]<br>
$Translation: faq.html,v 1.29 2005/05/12 13:19:57 aanriot Exp $<br>
@


1.22
log
@sync with OpenBSD CVS
@
text
@d637 4
a640 3
sftp, vu que le protocole est standardisé (enfin pratiquement, il y a un
<a href="http://www.ietf.org/internet-drafts/draft-ietf-secsh-filexfer-05.txt">
document de travail</a>), et que le client et le serveur sont découplés.
d1343 2
a1344 2
Originally [OpenBSD: faq.html,v 1.99 ]<br>
$Translation: faq.html,v 1.28 2005/04/21 05:30:14 aanriot Exp $<br>
@


1.21
log
@Sync with Steelix CVS
@
text
@d102 3
a104 1
vis-à-vis de PAM.</a>
d117 7
a123 8
connectivité réseau SSH sur laquelle s'appuie un nombre
croissant de personnes sur Internet. Beaucoup d'utilisateurs de telnet,
rlogin, ftp et d'autres programmes de ce type peuvent ne pas
réaliser que leur mot de passe est transmis en clair à
travers Internet alors qu'en fait, ça l'est. OpenSSH crypte tout
trafic (mots de passe compris) pour éliminer efficacement
l'écoute indiscrète, le vol de connexion, et d'autres
attaques au niveau réseau.
d128 1
a128 1
qui remplace rlogin et telnet, et 
d187 4
a190 5
téléchargeables : la distribution
<a href="openbsd.html">OpenBSD</a> d'origine et la distribution
<a href="portable.html">Portable</a> multi-plateformes. Si vous souhaitez
utilisez OpenSSH sur une version récente d'OpenBSD ou pour
l'intégrer dans un produit, il faudrait prendre la distribution
d192 2
a193 2
sur une autre plate-forme ou sur une ancienne version d'OpenBSD, il
faudrait prendre la distribution <a href="portable.html">Portable</a>.
d196 2
a197 3
When downloading, please use a <a
href="portable.html#mirrors">mirror</a>
near you.
d202 2
a203 3
OpenSSH est une suite d'outils dont l'objectif est de vous aider
à sécuriser vos connexions réseau. Voici une liste
de fonctionnalités :
d206 10
a215 11
<li>Authentification forte. Ferme plusieurs trous de
    sécurité (par exemple, IP, routage, et usurpation
    DNS).
<li>Intimité améliorée. Toutes les communications
    sont automatiquement cryptées de manière transparente.
<li>Sessions X11 sécurisées. Le programme positionne
    automatiquement DISPLAY sur la machine serveur, et fait suivre toute
    connexion X11 à travers le canal sécurisé.
<li>Des ports TCP/IP arbitraires peuvent être redirigés
    à travers le canal crypté dans les deux directions
    (par exemple, pour des transactions e-cash).
d217 27
a243 33
<li>Ne fait jamais confiance au réseau. Confiance minimale dans
    le côté distant de la connexion. Confiance minimale
    dans les serveurs de noms de domaine. L'authentification RSA ne fait
    confiance qu'à la clé privée.
<li>RSA client authentifie le serveur au début de chaque
    connexion pour se prémunir contre les chevaux de troie (par
    routage ou usurpation DNS) et les attaques en homme du milieu, et
    RSA serveur authentifie le client avant d'accepter des connexions
    basées sur une authentification <i>.rhosts</i> ou
    <i>/etc/hosts.equiv</i> authentication (pour prévenir les
    usurpations DNS, routage, ou IP).
<li>La distribution de clés d'authentification hôte peut
    être effectuée de manière centralisée par
    l'administration, automatiquement lorsque la première
    connexion est établie à une machine.
<li>N'importe quel utilisateur peut créer n'importe quel nombre
    de clés d'authentification utilisateur RSA pour son propre
    usage.
<li>Le programme serveur possède sa propre clé RSA qui est
    regénérée automatiquement toutes les heures.
<li>Un client d'authentification, exécuté sur la station
    de travail ou le portable de l'utilisateur, peut être
    utilisé pour retenir les clés d'authentification RSA
    de l'utilisateur.
<li>Le logiciel peut être installé et utilisé (avec
    des fonctionnalités restreintes) même sans
    privilèges root.
<li>Le client est paramétrable au niveau des fichiers de
    configuration aussi bien système qu'utilisateur.
<li>Compression optionnelle de toutes les données avec gzip (y
    compris les sessions X11 suivies et les données de port
    TCP/IP), ce qui peut aboutir à des
    accélérations significatives sur des connexions
d249 19
a267 23
Actuellement, pratiquement toutes les communications dans les
réseaux informatiques sont effectuées sans cryptage. Par
conséquence, n'importe quelle personne qui a un accès
à n'importe quelle machine connectée au réseau peut
écouter n'importe quelle communication. C'est ce que font les
pirates, les administrateurs curieux, les employés, les
criminels, les espions industriels, et les gouvernements. Certains
réseaux ont assez de fuites de radiation
éléctromagnétique pour permettre des captures de
données à distance.

<p> 
Quand vous vous logguez, votre mot de passe transite dans le
réseau en clair. Ainsi, n'importe quelle personne à
l'écoute peut alors utiliser votre compte pour effectuer des
opérations malintentionnées. Plusieurs incidents ont
été constatés au niveau modial lorsque des pirates
ont démarré des programmes sur des stations de travail
sans que les propriétaires en prennent connaissance juste pour
écouter le réseau et collecter des mots de passe. Des
programmes pour faire de telles choses sont disponibles sur Internet, ou
peuvent être développés par un programmeur
compétent en quelques heures.
d271 5
a275 6
en préparation, des informations de prix, des informations sur
les contractants, des données client, des données sur le
personnel, des informations financières, etc. De nos jours,
n'importe qui ayant un accès au réseau (n'importe lequel)
peut écouter tout ce qui se passe sur le réseau, sans
respect des restrictions d'accès en place.
d278 3
a280 4
Bien des entreprises ne sont pas conscientes que l'information peut
être très facilement récupérée
à partir du réseau. Ils croient que leurs données
sont saines et sauves puisque personne n'est supposée savoir
d282 2
a283 2
beaucoup d'autres données sont transférées sur le
réseau. Cette politique n'est pas sûre.
d289 7
a295 8
Bien que OpenSSH soit développé sur 
<a href="http://www.openbsd.org/">OpenBSD</a>, il existe une grande
variété de portages vers d'autres systèmes
d'exploitation. la version portable de OpenSSH est dirigée par 
<a href="mailto:djm@@openbsd.org"> Damien Miller</a>. Pour une vue
d'ensemble rapide de la version portable de OpenSSH veuillez consulter
<a href="portable.html">OpenSSH Portable Release</a>.
Les systèmes d'exploitation actuellement supportés sont :
d321 3
a323 4
Les développeurs OpenSSH ont fait beaucoup d'efforts pour
éviter tout problème de brevet ou de droit d'auteur. A cet
effet, quelques options ont été retirées de
OpenSSH. Plus précisement le support d'algorithmes
d327 4
a330 4
OpenSSH ne supporte aucun algorithme de transport breveté. En
mode SSH1, seuls 3DES et Blowfish sont disponibles. En mode SSH2,
seulement 3DES, Blowfish,CAST128, Arcfour et AES peuvent être
choisis. L'algorithme breveté IDEA n'est pas supporté.
d333 1
a333 1
OpenSSH fournit le support aussi bien pour le protocole SSH1 que pour
d337 3
a339 3
Etant donné que le brevet RSA a expiré, il n'y a plus de
restrictions au niveau de l'utilisation logicielle de l'algorithme RSA,
y compris OpenBSD.
d343 1
a343 2
Il y a plusieurs endroits où on peut trouver de l'aide. En plus
du 
d347 4
a350 5
pour voir s'il n'y a pas déjà une réponse à
votre question. La liste de diffusion OpenSSH a été
archivée et mise dans une forme facilitant les recherches sur
<a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=2&amp;w=2">
theaimsgroup.com</a>.
d354 2
a355 2
relatives à OpenSSH, veuillez consulter la page des
<a href="list.html">Listes de diffusion OpenSSH</a>.
d367 5
a371 5
Le client OpenSSH utilise des ports privilégiés (low
numbered ports) pour l'authentification rhosts et rhosts-rsa parce que
le serveur a besoin de se fier au nom d'utilisateur fournit par le
client. Pour désactiver ce comportement, vous pouvez ajouter la
ligne suivante à votre fichier <i>ssh_config</i> ou à
d385 2
a386 2
Autrement vous pouvez spécifier cette option au niveau de la
ligne de commande en utilisant l'option <b>-o</b> de la commande
d402 5
a406 6
Conjointement avec la question précédente(
<a href="#2.1">2.1</a>), OpenSSH a besoin de l'autorité root pour
être capable de s'attacher aux ports privilégiés
afin de faciliter <i> l'authentification rhosts</i>. Un port
privilégié est aussi requis pour l'authentification
rhosts-rsa sur les anciennes versions de older SSH.
d411 7
a417 7
protocole version 2), le client ssh a besoin d'accèder à la
<em>clé privée d'hôte </em>pour authentifier la
machine cliente auprès du serveur. 
Pour ce faire, les versions d'OpenSSH antérieures à 3.3
nécessitent un bit setuid root positionné sur le binaire
<code>ssh</code>. Si vous n'utilisez pas ce mode d'authentification,
vous pouvez supprimer ce bit sans problème.
d423 4
a426 5
est utilisé pour accéder aux clés privés
d'hôtes, et ssh n'utilise pas les ports source
privilégiés par défaut. Si vous souhaitez utiliser
un port source privilégié, vous devez positionner
manuellement le bit setuid pour <code>ssh</code>.
d432 5
a436 6
SSH 2.3 et les versions antérieures contiennent un défaut
dans leur implémentation HMAC. Leur code ne fournissait pas le
bloc de données entier obtenu à partir du digest. Au lieu
de cela, il fournissait toujours 128 bits. Pour des digests plus grands,
ça entraînait des problèmes
d'interopérabilité de SSH 2.3 avec OpenSSH.
d439 3
a441 3
OpenSSH 2.2.0 détecte ce défaut sur SSH 2.3. Les version
récentes de SSH fixeront ce défaut. Autrement, vous pouvez
ajouter la ligne suivante à <i>sshd2_config </i> de SSH 2.3.
d456 8
a463 10
Des problèmes d'interopérabilité ont
été constatés car les anciennes versions de OpenSSH
ne supportent pas la renégociation des clés de sessions.
Cependant, SSH commercial 2.3 essaie de négocier cette
fonctionnalité, dès lors vous pourriez avoir des gels de
connexion ou voir le message d'erreur &quot;<b>Dispatch protocol error:
type 20 </b>&quot;. Pour résoudre ce problème, effectuez
une mise à jour vers une version récente de OpenSSH ou
désactiver la renégociation de clés en ajoutant la
ligne suivante au niveau du fichier<i> ssh2_config</i> ou
d480 3
a482 3
Les anciennes versions de SSH utilisaient un algorithme breveté
pour crypter leur <i>/etc/ssh/ssh_host_key</i>. Ce problème se
manifestera lorsque
d505 5
a509 7
de SSH commercial contenaint un bogue qui lui faisait occasionnellement
générer des clés Pubkey Authentication (RSA or DSA)
qui avait leur bit à poids le plus significatif (Most Significant
Bit ou MSB) non positionné. De telles clés étaient
annoncées comme étant à longueur complète
alors qu'en réalité elles sont plus petites une fois sur
deux.
d512 5
a516 5
OpenSSH affichera des messages d'avertissement quand de telles
clés sont rencontrées. Pour se débarasser de ces
messages, éditez vos fichiers <i>known_hosts</i> et remplacez la
fausse longueur de clé (habituellement &quot;1024&quot;) avec la
vraie longueur (habituellement &quot;1023&quot;).
d523 2
a524 2
configuration par défaut désactivent le X11 et le agent
forwarding. Pour activer ces options, ajoutez la ligne suivante à
d580 5
a584 6
Entre des versions différentes, des modifications peuvent
être apportées à <i>sshd_config</i> ou
<i>ssh_config</i>. Vous devriez toujours vérifier ces
modifications lors de la mise à jour OpenSSH. Après la
version 2.3.0 de OpenSSH, vous aurez besoin d'ajouter ce qui suit
à <i>sshd_config</i>.
d602 5
a606 5
sftp et/ou scp peuvent échouer à la connexion si vous avez
une initialisation du shell (.profile, .bashrc, .cshrc, etc) qui produit
une sortie pour des sessions non-interactives. Cette sortie rend le
client sftp/scp confus. Vous pouvez vérifier si c'est le cas pour
votre shell en exécutant la commande suivante :
d630 4
a633 6
spécification approchante de ce que fait scp est celle de rcp.
Etant donné que c'est la même commande qui est
utilisée par les deux extrêmités de la
communication, l'ajout de fonctionnalités ou d'options risque de
casser l'interopérabilité avec d'autres
implémentations.
d636 2
a637 3
De nouvelles fonctionnalités peuvent cependant être
introduites dans sftp, vu que le protocole est standardisé
(enfin pratiquement, il y a un
d639 1
a639 2
document de travail</a>),
et que le client et le serveur sont découplés.
d645 28
a672 33
Si le serveur distant est un serveur sshd(8), il est possible de
créer un tunnel pour certains services via ssh. Ceci peut
être utile pour chiffrer des connexions POP ou SMTP même si
les logiciels ne supportent pas directement les communications
chiffrées. La création d'un tunnel se base sur le "port
forwarding" pour créer une connexion entre le client et le
serveur. Le logiciel client doit être capable de spécifier
un port non-standard auquel se connecter pour que cette technique
fonctionne.

<p>
Pour créer un tunnel chiffré par ssh, l'utilisateur se
connecte à l'hôte distant en utilisant ssh et
spécifie le port sur la machine cliente qui devra être
utilisé pour y passer les connexions à destination du
serveur distant. Il devient alors possible de démarrer le service
à chiffrer (par exemple fetchmail, irc ...) sur la machine client
en précisant le même port local que celui
précédemment fourni. La connexion sera dès lors
chiffrée dans le tunnel ssh.

<p>
Les options à utiliser pour la création des tunnels sont
les options -L et -R, qui permettent à l'utilisateur de faire
passer des connexions à travers des tunnels, l'option -D qui
permet de faire du "port forwarding" dynamique, et l'option -f qui
permet de mettre ssh en tâche de fond. Ces options sont
détaillées plus bas.

<p>
Voici un exemple pour créer un tunnel pour une session IRC entre
une machine cliente ``127.0.0.1'' (localhost) et un serveur distant "
This is an example of tunnelling an IRC session from client machine
d687 20
a706 24
La commande ci-dessus crée un tunnel pour une connexion IRC vers
le serveur server.example.com. L'utilisateur veut se joindre au canal
"#users", il a pour surnom "pinky". Le port local utilisé dans
cet exemple est le port 1234. Le numéro de port importe peu tant
qu'il est supérieur à 1023 (autrement, seul "root" peut
ouvrir des sockets sur les ports privilégiés soit tous les
ports inférieurs à 1024) et qu'il n'entre en conflit avec
aucun port utilisé sur la machine. La connexion est
chiffrée dans le tunnel jusqu'au serveur distant puis une fois
déchiffrée, elle est envoyée sur le port 6667 du
serveur vu que c'est le port standard utilisé par les services
IRC.

<p>
La commande distante "sleep 10" est utilisée pour
spécifier le temps d'attente (10 secondes dans l'exemple
précité) avant le démarrage du service qui doit
transiter à travers le tunnel. Si aucune connexion n'est
effectuée durant ce temps d'attente, ssh s'arrête. Si un
temps d'attente plus important est nécessaire, la valeur de
sleep(1) peut être augmentée en conséquence,
autrement l'exemple ci-dessus pourrait être ajouté comme
fonction au shell utilisateur. Consultez les pages du manuel de ksh(1)
et csh(1) pour plus de détails concernant les fonctions
d710 7
a716 8
ssh possède aussi une option -N, pratique pour une utilisation de
ssh en "port forwarding" : si -N est spécifiée, il n'est
plus nécessaire d'utiliser une commande distante ("sleep 10" dans
l'exemple ci-dessus). Cependant, l'utilisation de cette option oblige
ssh à attendre indéfiniment (alors qu'avec une commande
distante, ssh s'interrompera après la fin d'exécution de
cette dernière). L'utilisateur devra alors mettre fin
manuellement au processus ssh.
d722 3
a724 4
Ceci est généralement dû à l'expiration de
votre session ssh au niveau d'un pare-feu ou d'un équipement de
NAT en raison d'inactivité. Afin d'éviter cela, vous
pouvez activer
d731 1
a731 2
Cette dernière option n'est disponible qu'à partir de
OpenSSH 3.8.
d734 4
a737 5
L'activation d'une des options précitées en positionnant
leur valeur à un intervalle plus petit que le temps
d'inactivité avant expiration de la session permettra de garder
la session dans la table de connexion de l'équipement, sans que
la session expire.
d743 3
a745 4
scp</a></b> interprétera l'élément
précédant le point-virgule comme le nom d'un serveur
distant et tentera de s'y connecter. Pour empêcher cela, utilisez
un chemin relatif ou absolu, par exemple :
d801 4
a804 5
Ces messages sont générés car OpenSSH essaie
d'abord de déterminer si un utilisateur a besoin
d'authentification pour se logguer (par exemple, un mot de passe vide).
Malheureusement, PAM aime enregistrer tous les événements
d'authentification, y compris celui-ci.
d807 5
a811 6
Si cela vous gêne beaucoup, positionnez
&quot;<b>PermitEmptyPasswords no</b>&quot; dans <i>sshd_config</i>. Ceci
aura pour effet de stopper le message d'erreur mais en
désactivant, par la même occasion, les connexions à
des comptes sans mot de passe. C'est le comportement par défaut
si vous utilisez le fichier <i>sshd_config</i> fourni.
d818 3
a820 3
OpenSSH construite avec PAM, vous devez ajouter le drapeau nullok
à la fin du module de vérification du mot de passe dans le
fichier <i>/etc/pam.d/sshd</i>. Par exemple :
d838 11
a848 13
Il y a un problème lorsque des mots de passe vides sont
utilisés avec l'authentification PAM : PAM autorisera n'importe
quel mot de passe quand on s'authentifie sur un compte doté d'un
mot de passe vide. Ce qui a pour effet de casser la vérification
que
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a>
effectue pour déterminer si un compte n'a pas de mot de passe
positionné et autorise l'accès quelque soit la politique
spécifiée par <b>PermitEmptyPasswords</b>. Pour cette
raison, il est recommandé de ne pas ajouter la directive
<b>nullok</b> à votre fichier de configuration PAM à moins
que vous souhaitiez spécifiquement autoriser les mots de passe
vides.
d854 2
a855 2
D'importants délais (plus de 10 secondes) à la connexion sont typiquement causés par un
problème au niveau de la résolution de noms :
d858 11
a868 13
Red Hat 6.1) peut nécessiter un temps significatif pour
résoudre des adresses IPv6 ou IPv4 à partir de noms de
domaine. Un moyen de contournement consiste à spécifier
l'option <b>AddressFamily inet</b> dans le fichier
<i>ssh_config</i>.

<li>Il peut y avoir un problème de résolution DNS
côté client ou côté serveur. Vous pouvez
utiliser la commande <code>nslookup</code> pour vérifier la
résolution de noms et des adresses IP du client sur le serveur et
vice-versa. Vous pouvez désactiver la plupart des
résolutions DNS effectuées côté serveur en
utilisant <b>UseDNS no</b> dans <i>sshd_config</i>.
d876 25
a900 30
<li>Les versions d'OpenSSH antérieures à la version 3.8
    ont un fichier <i>moduli</i> qui contient du moduli juste
    inférieur à ce que sshd nécessitait. Par
    conséquence, sshd finissait par utiliser du moduli largement
    supérieur à ce qui était demandé
    d'où une baisse des performances. Le remplacement du fichier
    <i>moduli</i> résoudra ce problème. Il est à
    noter que, dans la plupart des cas, le fichier n'est pas
    remplacé suivant une mise à jour. Il devra alors
    être remplacé manuellement.

<li>Les versions d'OpenSSH antérieures à la version 3.8
    contiennent un défaut dans <code>ssh</code>. A cause de ce
    défaut, <code>ssh</code> demande du moduli plus grand que
    nécessaire. Combiné au problème
    précité, les baisses de performance étaient
    encore plus significatives. La mise à jour du client en
    version 3.8 ou supérieure résout ce problème.

<li>Si le client ou le serveur ne possède pas un mécanisme
    de génération de nombres aléatoires basé
    sur le noyau (par exemple : Solaris &lt; 9, AIX &lt; 5.2, HP-UX &lt;
    11.11) et qu'aucun mécanisme altenatif n'est disponibles (par
    exemple :
    <a href= "ftp://ftp.ayamura.org/pub/prngd/">prngd</a>,
    il est alors possible qu'un des programmes appelés par
    <code>ssh-rand- helper</code> pour générer de
    l'entropie ne rend pas la main. Pour vérifier si c'est le
    cas, il suffit d'exécuter <code>ssh-rand-helper</code> en
    mode debug :
d912 2
a913 3
Tout délai significatif à la connexion doit être
investigué et corrigé. Sinon, il suffira de supprimer les
commandes posant problème du fichier
d920 4
a923 5
dépend de la vitesse du processeur sur le client et sur le
serveur. A titre de comparaison, les données suivantes
représentent des temps de connexion typiques pour
l'exécution de <code>time ssh localhost true</code> avec une
clé RSA de 1024 bits sur des machines non chargées.
d956 3
a958 4
Le noyau Linux recherche (à travers modprobe) la famille de
protocoles 10 (IPv6). Il faut soit charger le module noyau
approprié, soit saisir l'alias correct dans
<i>/etc/modules.conf</i> ou désactiver IPv6 dans
d974 3
a976 2
passe de type MD5. Cependant, la fonction <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=crypt&amp;sektion=3">crypt(3)</a> utilisée par sshd ne sait pas les interpréter.
d991 3
a993 3
donne une préférence à la fonction crypt(3) fournie par le système.
Le programme configure d'OpenSSH tente de corriger ce problème lorsqu'il
le détecte mais il n'est pas toujours couronné de succès.
d1054 2
a1055 2
doit être dans le PATH par défaut sur le client et sur le
serveur. Vous aurez peut-être besoin d'utiliser l'option
d1074 2
a1075 2
prioritaire par rapport à <b>--with-default-path</b>. Ceci inclut
la mise à zéro de PATH dans <i>/etc/profile</i>, PATH dans
d1100 3
a1102 3
La solution consiste à positionner les permissions à 0666
sur <i>/dev/tty</i> et soumettre l'erreur comme étant un bogue
à l'éditeur de votre OS.
d1122 2
a1123 2
problème connu sous Linux et HP-UX. On peut vérifier son
existence en faisant : 
d1203 5
a1207 6
Tel que c'est documenté dans les
<a href="../txt/release-3.8">notes d'information de la version 3.8</a>,
<code>ssh</code> utilise désormais les cookies X11 non dignes de
confiance par défaut. Le comportement précédent
peut être restoré en positionnant <b>ForwardX11Trusted
yes</b> dans <i>ssh_config</i>.
d1210 5
a1214 5
Voici une liste de quelques symptômes possibles :<br>
<code>BadWindow (invalid Window parameter)<br>
BadAccess (attempt to access private resource denied)<br>
X Error of failed request:  BadAtom (invalid Atom parameter)<br>
Major opcode of failed request:  20 (X_GetProperty)<br></code>
d1220 3
a1222 4
Ce problème est typiquement causé par des permissions plus
larges que celles permises par sshd par défaut pour les
répertoires $HOME, $HOME/.ssh ou le fichier
$HOME/.ssh/authorized_keys.
d1324 5
a1328 3
<a
href="http://bugzilla.mindrot.org/buglist.cgi?product=Portable+OpenSSH&amp;bug_status=RESOLVED&amp;bug_status=NEW&amp;bug_status=ACCEPTED&amp;component=PAM+support"
>bugzilla pour les problèmes PAM actuels</a>.
d1330 5
d1342 2
a1343 2
Originally [OpenBSD: faq.html,v 1.98 ]<br>
$Translation: faq.html,v 1.25 2005/02/25 15:50:30 aanriot Exp $<br>
@


1.20
log
@Sync with Steelix CVS
@
text
@d575 9
d1395 2
a1396 2
Originally [OpenBSD: faq.html,v 1.97 ]<br>
$Translation: faq.html,v 1.24 2005/01/29 04:50:20 saad Exp $<br>
@


1.19
log
@sync with Steelix CVS
@
text
@d1024 2
a1025 5
passe de type MD5 alors que la fonction crypt(3) fournie par les
librairies système ne les comprend pas.
Les comptes d'utilisateurs concernés contiendront les caractères
<b>$1$</b> en début de la chaîne représentant le mot de passe dans
<i>/etc/passwd</i> ou <i>/etc/shadow</i>.
d1028 3
d1037 8
d1068 3
a1070 1
Pour Slackware 7.0, vous pouvez lier OpenSSH avec libcrypt.
d1086 4
a1089 1
"#3.15" >section 3.15</a>).
d1334 1
a1334 1
    <td>3.7p1 - 3.7.1p2</td>
d1340 1
a1340 1
    <td>3.8p1 - 3.8.1p1</td>
d1386 2
a1387 2
Originally [OpenBSD: faq.html,v 1.95 ]<br>
$Translation: faq.html,v 1.23 2005/01/25 09:26:50 saad Exp $<br>
@


1.18
log
@Sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1999-2004 OpenBSD.">
d21 1
a21 1
<strong>Date : 2004/04/12</strong>
d82 2
a83 1
fonctionne pas sous Slackware 7.0 ou Red Hat Linux 6.x</a>
d101 2
d1018 2
a1019 1
    fonctionne pas sous Slackware 7.0 ou Red Hat 6.x</a></h2>
d1022 21
a1042 1
Sur Slackware 7.0, vous aurez besoin de lier OpenSSH à libcrypt.
d1048 1
a1048 1
LIBS=-lcrypt ./configure [options]
d1054 3
a1056 9
<p>
Certaines versions de Red Hat ont des outils de génération
de mots de passe qui créent des mots de passe MD5, mais la
fonction système crypt() ne les comprend pas. Si
l'authentification par mot de passe échouent pour les nouveaux
comptes ou pour des comptes dont le mot de passe a été
récemment modifié, alors c'est la cause probable. (Les
comptes affectés auront des chaînes de mots de passe dans
<i>/etc/shadow</i> débutant avec <code>$1$</code>.)
d1058 1
d1060 1
a1060 2
Pour résoudre ce problème, activez le support MD5 dans
sshd lors de la compilation
d1066 1
a1066 1
./configure --with-md5-passwords [options]
d1072 7
d1282 85
d1373 2
a1374 2
Originally [OpenBSD: faq.html,v 1.91 ]<br>
$Translation: faq.html,v 1.22 2005/01/17 21:34:03 aanriot Exp $<br>
@


1.17
log
@Sync with Steelix CVS
@
text
@d1262 1
d1264 2
a1265 1
$Translation: faq.html,v 1.21 2004/12/22 13:58:12 aanriot Exp $<br>
@


1.16
log
@Sync with Steelix CVS
@
text
@d15 2
a16 1
<img alt="[OpenSSH]" height=30 width=141 src="../images/smalltitle.gif">
d1262 2
a1263 2
Originally [OpenBSD: faq.html,v 1.90 ]<br>
$Translation: faq.html,v 1.20 2004/11/13 14:47:11 aanriot Exp $<br>
@


1.15
log
@Sync with Steelix CVS
@
text
@d25 1
a25 1
<h3><a href= "#1.0">1.0 - Qu'est-ce que OpenSSH et o&ugrave; puis-je
d28 1
a28 1
<li><a href= "#1.1">1.1 - Qu'est-ce que OpenSSH et o&ugrave; puis-je
d31 2
a32 2
<li><a href= "#1.3">1.3 - Quels sont les syst&egrave;mes d'exploitation
    support&eacute;s ?</a>
d38 1
a38 1
<h3><a href= "#2.0">2.0 - Questions G&eacute;n&eacute;rales</a></h3>
d40 2
a41 2
<li><a href= "#2.1">2.1 - Pourquoi ssh/scp &eacute;tablit des connexions
    &agrave; partir de ports privil&eacute;gi&eacute;s. Mon pare-feu
d44 2
a45 2
<li><a href= "#2.3">2.3 - Pourquoi SSH 2.3 a des probl&egrave;mes
    d'interop&eacute;rabilit&eacute; avec OpenSSH 2.1.1 ?</a>
d49 1
a49 1
    utilisent IDEA pour le cryptage des cl&eacute;s de h&ocirc;tes.</a>
d51 1
a51 1
    d'avertissement concernant les longueurs de cl&eacute; ?</a>
d54 1
a54 1
<li><a href= "#2.8">2.8 - Apr&egrave;s la mise &agrave; jour de OpenSSH,
d56 1
a56 1
<li><a href= "#2.9">2.9 - sftp/scp &eacute;choue &agrave; la connexion
d58 2
a59 2
<li><a href= "#2.10">2.10 - Allez-vous ajouter la fonctionnalit&eacute;
    [foo] &agrave; scp ?</a>
d61 2
a62 2
<li><a href= "#2.12">2.12 - Ma connexion ssh se fige ou s'arr&ecirc;te
    apr&egrave;s N minutes d'inactivit&eacute;.</a>
d73 1
a73 1
    journaux syst&egrave;mes.</a>
d76 1
a76 1
<li><a href= "#3.3">3.3 - ssh(1) n&eacute;cessite beaucoup de temps pour
d79 1
a79 1
    10" dans les journaux syst&egrave;me sous Linux.</a>
d87 1
a87 1
<li><a href= "#3.9">3.9 - 'configure' manquant ou make &eacute;choue</a> 
d92 1
a92 1
<li><a href= "#3.12">3.12 - J'ai effectu&eacute; une mise &agrave; jour
d94 1
a94 1
<li><a href= "#3.13">3.13 - J'ai mis &agrave; jour OpenSSH en version
d96 2
a97 2
<li><a href= "#3.14">3.14 - J'ai copi&eacute; ma cl&eacute; dans le
    fichier authorized_keys mais l'authentification par cl&eacute;s ne
d104 1
a104 1
<h2><u><a name= "1.0">1.0 - Qu'est-ce que OpenSSH et o&ugrave; puis-je
d111 1
a111 1
connectivit&eacute; r&eacute;seau SSH sur laquelle s'appuie un nombre
d114 5
a118 5
r&eacute;aliser que leur mot de passe est transmis en clair &agrave;
travers Internet alors qu'en fait, &ccedil;a l'est. OpenSSH crypte tout
trafic (mots de passe compris) pour &eacute;liminer efficacement
l'&eacute;coute indiscr&egrave;te, le vol de connexion, et d'autres
attaques au niveau r&eacute;seau.
d128 1
a128 1
OpenSSH a ajout&eacute; 
d131 2
a132 2
qui impl&eacute;mentent une m&eacute;thode plus facile de transfert de
fichiers, en se basant sur l'&eacute;bauche
d137 1
a137 1
<strong>OpenSSH est constitu&eacute; d'un certain nombre de
d141 5
a145 5
- Programme serveur qui s'ex&eacute;cute sur la machine serveur. Il
  attend des connexions &agrave; partir des machines clientes, et
  lorsqu'il en re&ccedil;oit, il effectue l'authentification et
  commence &agrave; r&eacute;pondre aux requ&ecirc;tes du client.
  Son fonctionnement est contr&ocirc;l&eacute; par le fichier de configuration
d148 2
a149 2
- C'est le programme client utilis&eacute; pour se logguer sur une autre
  machine ou ex&eacute;cuter des commandes sur l'autre machine.
d151 1
a151 1
  Son fonctionnement est contr&ocirc;l&eacute; par le fichier de configuration <i>
d155 1
a155 1
- Copie de mani&egrave;re s&eacute;curis&eacute;e des fichiers d'une
d158 2
a159 2
- Utilis&eacute; pour cr&eacute;er des cl&eacute;s (cl&eacute;s
  d'h&ocirc;tes ou cl&eacute;s d'authentification) PubKey Authentication
d162 2
a163 2
- Agent d'authentification. Il peut &ecirc;tre utilis&eacute; pour
  retenir des cl&eacute;s RSA pour authentification.
d165 1
a165 1
- Utilis&eacute; pour d&eacute;clarer de nouvelles cl&eacute;s sur
d168 1
a168 1
- Sous-syst&egrave;me serveur SFTP.
d170 1
a170 1
- Programme de transfert s&eacute;curis&eacute; de fichiers. 
d172 1
a172 1
- recueille les cl&eacute;s publiques ssh.
d174 2
a175 2
- Programme d'aide ssh pour l'authentification bas&eacute;e sur
  l'h&ocirc;te.
d178 1
a178 1
<h3>T&eacute;l&eacute;chargement</h3>
d182 1
a182 1
t&eacute;l&eacute;chargeables : la distribution
d185 2
a186 2
utilisez OpenSSH sur une version r&eacute;cente d'OpenBSD ou pour
l'int&eacute;grer dans un produit, il faudrait prendre la distribution
d200 2
a201 2
&agrave; s&eacute;curiser vos connexions r&eacute;seau. Voici une liste
de fonctionnalit&eacute;s :
d205 1
a205 1
    s&eacute;curit&eacute; (par exemple, IP, routage, et usurpation
d207 3
a209 3
<li>Intimit&eacute; am&eacute;lior&eacute;e. Toutes les communications
    sont automatiquement crypt&eacute;es de mani&egrave;re transparente.
<li>Sessions X11 s&eacute;curis&eacute;es. Le programme positionne
d211 3
a213 3
    connexion X11 &agrave; travers le canal s&eacute;curis&eacute;.
<li>Des ports TCP/IP arbitraires peuvent &ecirc;tre redirig&eacute;s
    &agrave; travers le canal crypt&eacute; dans les deux directions
d215 3
a217 3
<li>Aucun reformation n&eacute;cessaire pour les utilisateurs normaux.
<li>Ne fait jamais confiance au r&eacute;seau. Confiance minimale dans
    le c&ocirc;t&eacute; distant de la connexion. Confiance minimale
d219 3
a221 3
    confiance qu'&agrave; la cl&eacute; priv&eacute;e.
<li>RSA client authentifie le serveur au d&eacute;but de chaque
    connexion pour se pr&eacute;munir contre les chevaux de troie (par
d224 2
a225 2
    bas&eacute;es sur une authentification <i>.rhosts</i> ou
    <i>/etc/hosts.equiv</i> authentication (pour pr&eacute;venir les
d227 6
a232 6
<li>La distribution de cl&eacute;s d'authentification h&ocirc;te peut
    &ecirc;tre effectu&eacute;e de mani&egrave;re centralis&eacute;e par
    l'administration, automatiquement lorsque la premi&egrave;re
    connexion est &eacute;tablie &agrave; une machine.
<li>N'importe quel utilisateur peut cr&eacute;er n'importe quel nombre
    de cl&eacute;s d'authentification utilisateur RSA pour son propre
d234 5
a238 5
<li>Le programme serveur poss&egrave;de sa propre cl&eacute; RSA qui est
    reg&eacute;n&eacute;r&eacute;e automatiquement toutes les heures.
<li>Un client d'authentification, ex&eacute;cut&eacute; sur la station
    de travail ou le portable de l'utilisateur, peut &ecirc;tre
    utilis&eacute; pour retenir les cl&eacute;s d'authentification RSA
d240 9
a248 9
<li>Le logiciel peut &ecirc;tre install&eacute; et utilis&eacute; (avec
    des fonctionnalit&eacute;s restreintes) m&ecirc;me sans
    privil&egrave;ges root.
<li>Le client est param&eacute;trable au niveau des fichiers de
    configuration aussi bien syst&egrave;me qu'utilisateur.
<li>Compression optionnelle de toutes les donn&eacute;es avec gzip (y
    compris les sessions X11 suivies et les donn&eacute;es de port
    TCP/IP), ce qui peut aboutir &agrave; des
    acc&eacute;l&eacute;rations significatives sur des connexions
d255 5
a259 5
r&eacute;seaux informatiques sont effectu&eacute;es sans cryptage. Par
cons&eacute;quence, n'importe quelle personne qui a un acc&egrave;s
&agrave; n'importe quelle machine connect&eacute;e au r&eacute;seau peut
&eacute;couter n'importe quelle communication. C'est ce que font les
pirates, les administrateurs curieux, les employ&eacute;s, les
d261 3
a263 3
r&eacute;seaux ont assez de fuites de radiation
&eacute;l&eacute;ctromagn&eacute;tique pour permettre des captures de
donn&eacute;es &agrave; distance.
d267 7
a273 7
r&eacute;seau en clair. Ainsi, n'importe quelle personne &agrave;
l'&eacute;coute peut alors utiliser votre compte pour effectuer des
op&eacute;rations malintentionn&eacute;es. Plusieurs incidents ont
&eacute;t&eacute; constat&eacute;s au niveau modial lorsque des pirates
ont d&eacute;marr&eacute; des programmes sur des stations de travail
sans que les propri&eacute;taires en prennent connaissance juste pour
&eacute;couter le r&eacute;seau et collecter des mots de passe. Des
d275 2
a276 2
peuvent &ecirc;tre d&eacute;velopp&eacute;s par un programmeur
comp&eacute;tent en quelques heures.
d280 6
a285 6
en pr&eacute;paration, des informations de prix, des informations sur
les contractants, des donn&eacute;es client, des donn&eacute;es sur le
personnel, des informations financi&egrave;res, etc. De nos jours,
n'importe qui ayant un acc&egrave;s au r&eacute;seau (n'importe lequel)
peut &eacute;couter tout ce qui se passe sur le r&eacute;seau, sans
respect des restrictions d'acc&egrave;s en place.
d289 6
a294 6
&ecirc;tre tr&egrave;s facilement r&eacute;cup&eacute;r&eacute;e
&agrave; partir du r&eacute;seau. Ils croient que leurs donn&eacute;es
sont saines et sauves puisque personne n'est suppos&eacute;e savoir
qu'il y a des informations sensibles dans le r&eacute;seau, ou parce que
beaucoup d'autres donn&eacute;es sont transf&eacute;r&eacute;es sur le
r&eacute;seau. Cette politique n'est pas s&ucirc;re.
d296 2
a297 2
<h2><a name= "1.3">1.3 - Quels sont les syst&egrave;mes d'exploitation
    support&eacute;s ?</a></h2>
d300 1
a300 1
Bien que OpenSSH soit d&eacute;velopp&eacute; sur 
d302 2
a303 2
vari&eacute;t&eacute; de portages vers d'autres syst&egrave;mes
d'exploitation. la version portable de OpenSSH est dirig&eacute;e par 
d307 1
a307 1
Les syst&egrave;mes d'exploitation actuellement support&eacute;s sont :
d326 1
a326 1
Une liste d'&eacute;diteurs qui incluent OpenSSH dans leur distribution
d328 1
a328 1
<a href="users.html">Syst&egrave;mes utilisant OpenSSH</a>.
d333 5
a337 5
Les d&eacute;veloppeurs OpenSSH ont fait beaucoup d'efforts pour
&eacute;viter tout probl&egrave;me de brevet ou de droit d'auteur. A cet
effet, quelques options ont &eacute;t&eacute; retir&eacute;es de
OpenSSH. Plus pr&eacute;cisement le support d'algorithmes
brevet&eacute;s.
d340 1
a340 1
OpenSSH ne supporte aucun algorithme de transport brevet&eacute;. En
d342 2
a343 2
seulement 3DES, Blowfish,CAST128, Arcfour et AES peuvent &ecirc;tre
choisis. L'algorithme brevet&eacute; IDEA n'est pas support&eacute;.
d350 1
a350 1
Etant donn&eacute; que le brevet RSA a expir&eacute;, il n'y a plus de
d356 1
a356 1
Il y a plusieurs endroits o&ugrave; on peut trouver de l'aide. En plus
d361 3
a363 3
pour voir s'il n'y a pas d&eacute;j&agrave; une r&eacute;ponse &agrave;
votre question. La liste de diffusion OpenSSH a &eacute;t&eacute;
archiv&eacute;e et mise dans une forme facilitant les recherches sur
d369 1
a369 1
relatives &agrave; OpenSSH, veuillez consulter la page des
d377 1
a377 1
       G&eacute;n&eacute;rales</a></u></h2>
d379 2
a380 2
<h2><a name= "2.1">2.1 - Pourquoi ssh/scp &eacute;tablit des connexions
    &agrave; partir de ports privil&eacute;gi&eacute;s.</a></h2>
d382 1
a382 1
Le client OpenSSH utilise des ports privil&eacute;gi&eacute;s (low
d385 2
a386 2
client. Pour d&eacute;sactiver ce comportement, vous pouvez ajouter la
ligne suivante &agrave; votre fichier <i>ssh_config</i> ou &agrave;
d400 1
a400 1
Autrement vous pouvez sp&eacute;cifier cette option au niveau de la
d417 3
a419 3
Conjointement avec la question pr&eacute;c&eacute;dente(
<a href="#2.1">2.1</a>), OpenSSH a besoin de l'autorit&eacute; root pour
&ecirc;tre capable de s'attacher aux ports privil&eacute;gi&eacute;s
d421 1
a421 1
privil&eacute;gi&eacute; est aussi requis pour l'authentification
d427 5
a431 5
protocole version 2), le client ssh a besoin d'acc&egrave;der &agrave; la
<em>cl&eacute; priv&eacute;e d'h&ocirc;te </em>pour authentifier la
machine cliente aupr&egrave;s du serveur. 
Pour ce faire, les versions d'OpenSSH ant&eacute;rieures &agrave; 3.3
n&eacute;cessitent un bit setuid root positionn&eacute; sur le binaire
d433 1
a433 1
vous pouvez supprimer ce bit sans probl&egrave;me.
d437 1
a437 1
d&eacute;faut.
d439 4
a442 4
est utilis&eacute; pour acc&eacute;der aux cl&eacute;s priv&eacute;s
d'h&ocirc;tes, et ssh n'utilise pas les ports source
privil&eacute;gi&eacute;s par d&eacute;faut. Si vous souhaitez utiliser
un port source privil&eacute;gi&eacute;, vous devez positionner
d445 2
a446 2
<h2><a name= "2.3">2.3 - Pourquoi SSH 2.3 a des probl&egrave;mes
    d'interop&eacute;rabilit&eacute; avec OpenSSH 2.1.1 ?</a></h2>
d449 3
a451 3
SSH 2.3 et les versions ant&eacute;rieures contiennent un d&eacute;faut
dans leur impl&eacute;mentation HMAC. Leur code ne fournissait pas le
bloc de donn&eacute;es entier obtenu &agrave; partir du digest. Au lieu
d453 2
a454 2
&ccedil;a entra&icirc;nait des probl&egrave;mes
d'interop&eacute;rabilit&eacute; de SSH 2.3 avec OpenSSH.
d457 3
a459 3
OpenSSH 2.2.0 d&eacute;tecte ce d&eacute;faut sur SSH 2.3. Les version
r&eacute;centes de SSH fixeront ce d&eacute;faut. Autrement, vous pouvez
ajouter la ligne suivante &agrave; <i>sshd2_config </i> de SSH 2.3.
d474 5
a478 5
Des probl&egrave;mes d'interop&eacute;rabilit&eacute; ont
&eacute;t&eacute; constat&eacute;s car les anciennes versions de OpenSSH
ne supportent pas la ren&eacute;gociation des cl&eacute;s de sessions.
Cependant, SSH commercial 2.3 essaie de n&eacute;gocier cette
fonctionnalit&eacute;, d&egrave;s lors vous pourriez avoir des gels de
d480 3
a482 3
type 20 </b>&quot;. Pour r&eacute;soudre ce probl&egrave;me, effectuez
une mise &agrave; jour vers une version r&eacute;cente de OpenSSH ou
d&eacute;sactiver la ren&eacute;gociation de cl&eacute;s en ajoutant la
d496 2
a497 2
    utilisent IDEA pour le cryptage des cl&eacute;s de
    h&ocirc;tes.</a></h2>
d500 2
a501 2
Les anciennes versions de SSH utilisaient un algorithme brevet&eacute;
pour crypter leur <i>/etc/ssh/ssh_host_key</i>. Ce probl&egrave;me se
d504 2
a505 2
ne pourra pas lire sa cl&eacute; d'h&ocirc;te. Pour le r&eacute;soudre,
utilisez la commande ci-apr&egrave;s pour convertir votre ssh_host_key
d520 1
a520 1
    d'avertissement concernant les longueurs de cl&eacute; ?</a></h2>
d526 5
a530 5
g&eacute;n&eacute;rer des cl&eacute;s Pubkey Authentication (RSA or DSA)
qui avait leur bit &agrave; poids le plus significatif (Most Significant
Bit ou MSB) non positionn&eacute;. De telles cl&eacute;s &eacute;taient
annonc&eacute;es comme &eacute;tant &agrave; longueur compl&egrave;te
alors qu'en r&eacute;alit&eacute; elles sont plus petites une fois sur
d535 3
a537 3
cl&eacute;s sont rencontr&eacute;es. Pour se d&eacute;barasser de ces
messages, &eacute;ditez vos fichiers <i>known_hosts</i> et remplacez la
fausse longueur de cl&eacute; (habituellement &quot;1024&quot;) avec la
d544 3
a546 3
V&eacute;rifiez <i>ssh_config</i> et <i>sshd_config</i>. Les fichiers de
configuration par d&eacute;faut d&eacute;sactivent le X11 et le agent
forwarding. Pour activer ces options, ajoutez la ligne suivante &agrave;
d558 1
a558 1
<p> et ajoutez les lignes suivante &agrave; <i>ssh_config</i>: 
d574 1
a574 1
   tous les utilisateurs. Cette variable est positionn&eacute;e par
d589 1
a589 1
<h2><a name= "2.8">2.8 - Apr&egrave;s la mise &agrave; jour de OpenSSH,
d593 4
a596 4
Entre des versions diff&eacute;rentes, des modifications peuvent
&ecirc;tre apport&eacute;es &agrave; <i>sshd_config</i> ou
<i>ssh_config</i>. Vous devriez toujours v&eacute;rifier ces
modifications lors de la mise &agrave; jour OpenSSH. Apr&egrave;s la
d598 1
a598 1
&agrave; <i>sshd_config</i>.
d612 1
a612 1
<h2><a name= "2.9">2.9 - sftp/scp &eacute;choue &agrave; la connexion
d616 1
a616 1
sftp et/ou scp peuvent &eacute;chouer &agrave; la connexion si vous avez
d619 2
a620 2
client sftp/scp confus. Vous pouvez v&eacute;rifier si c'est le cas pour
votre shell en ex&eacute;cutant la commande suivante :
d633 1
a633 1
Si la commande ci-dessus g&eacute;n&egrave;re une sortie, alors vous
d636 2
a637 2
<h2><a name= "2.10">2.10 - Allez-vous ajouter la fonctionnalit&eacute;
    [foo] &agrave; scp ?</a></h2>
d640 1
a640 1
R&eacute;ponse courte : non.
d643 7
a649 7
R&eacute;ponse longue : scp n'est pas une commande standard. La seule
sp&eacute;cification approchante de ce que fait scp est celle de rcp.
Etant donn&eacute; que c'est la m&ecirc;me commande qui est
utilis&eacute;e par les deux extr&ecirc;mit&eacute;s de la
communication, l'ajout de fonctionnalit&eacute;s ou d'options risque de
casser l'interop&eacute;rabilit&eacute; avec d'autres
impl&eacute;mentations.
d652 2
a653 2
De nouvelles fonctionnalit&eacute;s peuvent cependant &ecirc;tre
introduites dans sftp, vu que le protocole est standardis&eacute;
d657 1
a657 1
et que le client et le serveur sont d&eacute;coupl&eacute;s.
d664 2
a665 2
cr&eacute;er un tunnel pour certains services via ssh. Ceci peut
&ecirc;tre utile pour chiffrer des connexions POP ou SMTP m&ecirc;me si
d667 3
a669 3
chiffr&eacute;es. La cr&eacute;ation d'un tunnel se base sur le "port
forwarding" pour cr&eacute;er une connexion entre le client et le
serveur. Le logiciel client doit &ecirc;tre capable de sp&eacute;cifier
d674 9
a682 9
Pour cr&eacute;er un tunnel chiffr&eacute; par ssh, l'utilisateur se
connecte &agrave; l'h&ocirc;te distant en utilisant ssh et
sp&eacute;cifie le port sur la machine cliente qui devra &ecirc;tre
utilis&eacute; pour y passer les connexions &agrave; destination du
serveur distant. Il devient alors possible de d&eacute;marrer le service
&agrave; chiffrer (par exemple fetchmail, irc ...) sur la machine client
en pr&eacute;cisant le m&ecirc;me port local que celui
pr&eacute;c&eacute;demment fourni. La connexion sera d&egrave;s lors
chiffr&eacute;e dans le tunnel ssh.
d685 3
a687 3
Les options &agrave; utiliser pour la cr&eacute;ation des tunnels sont
les options -L et -R, qui permettent &agrave; l'utilisateur de faire
passer des connexions &agrave; travers des tunnels, l'option -D qui
d689 2
a690 2
permet de mettre ssh en t&acirc;che de fond. Ces options sont
d&eacute;taill&eacute;es plus bas.
d693 1
a693 1
Voici un exemple pour cr&eacute;er un tunnel pour une session IRC entre
d710 1
a710 1
La commande ci-dessus cr&eacute;e un tunnel pour une connexion IRC vers
d712 9
a720 9
"#users", il a pour surnom "pinky". Le port local utilis&eacute; dans
cet exemple est le port 1234. Le num&eacute;ro de port importe peu tant
qu'il est sup&eacute;rieur &agrave; 1023 (autrement, seul "root" peut
ouvrir des sockets sur les ports privil&eacute;gi&eacute;s soit tous les
ports inf&eacute;rieurs &agrave; 1024) et qu'il n'entre en conflit avec
aucun port utilis&eacute; sur la machine. La connexion est
chiffr&eacute;e dans le tunnel jusqu'au serveur distant puis une fois
d&eacute;chiffr&eacute;e, elle est envoy&eacute;e sur le port 6667 du
serveur vu que c'est le port standard utilis&eacute; par les services
d724 8
a731 8
La commande distante "sleep 10" est utilis&eacute;e pour
sp&eacute;cifier le temps d'attente (10 secondes dans l'exemple
pr&eacute;cit&eacute;) avant le d&eacute;marrage du service qui doit
transiter &agrave; travers le tunnel. Si aucune connexion n'est
effectu&eacute;e durant ce temps d'attente, ssh s'arr&ecirc;te. Si un
temps d'attente plus important est n&eacute;cessaire, la valeur de
sleep(1) peut &ecirc;tre augment&eacute;e en cons&eacute;quence,
autrement l'exemple ci-dessus pourrait &ecirc;tre ajout&eacute; comme
d733 2
a734 2
et csh(1) pour plus de d&eacute;tails concernant les fonctions
d&eacute;finies par l'utilisateur.
d737 3
a739 3
ssh poss&egrave;de aussi une option -N, pratique pour une utilisation de
ssh en "port forwarding" : si -N est sp&eacute;cifi&eacute;e, il n'est
plus n&eacute;cessaire d'utiliser une commande distante ("sleep 10" dans
d741 3
a743 3
ssh &agrave; attendre ind&eacute;finiment (alors qu'avec une commande
distante, ssh s'interrompera apr&egrave;s la fin d'ex&eacute;cution de
cette derni&egrave;re). L'utilisateur devra alors mettre fin
d746 2
a747 2
<h2><a name= "2.12">2.12 - Ma connexion ssh se fige ou s'arr&ecirc;te
    apr&egrave;s N minutes d'inactivit&eacute;.</a></h2>
d750 3
a752 3
Ceci est g&eacute;n&eacute;ralement d&ucirc; &agrave; l'expiration de
votre session ssh au niveau d'un pare-feu ou d'un &eacute;quipement de
NAT en raison d'inactivit&eacute;. Afin d'&eacute;viter cela, vous
d760 1
a760 1
Cette derni&egrave;re option n'est disponible qu'&agrave; partir de
d764 4
a767 4
L'activation d'une des options pr&eacute;cit&eacute;es en positionnant
leur valeur &agrave; un intervalle plus petit que le temps
d'inactivit&eacute; avant expiration de la session permettra de garder
la session dans la table de connexion de l'&eacute;quipement, sans que
d774 3
a776 3
scp</a></b> interpr&eacute;tera l'&eacute;l&eacute;ment
pr&eacute;c&eacute;dant le point-virgule comme le nom d'un serveur
distant et tentera de s'y connecter. Pour emp&ecirc;cher cela, utilisez
d816 1
a816 1
    journaux syst&egrave;mes.</a></h2>
d819 2
a820 2
La version portable de OpenSSH g&eacute;n&eacute;rera de faux messages
d'authentification &agrave; chaque login, similaires &agrave; :
d833 2
a834 2
Ces messages sont g&eacute;n&eacute;r&eacute;s car OpenSSH essaie
d'abord de d&eacute;terminer si un utilisateur a besoin
d836 1
a836 1
Malheureusement, PAM aime enregistrer tous les &eacute;v&eacute;nements
d840 1
a840 1
Si cela vous g&ecirc;ne beaucoup, positionnez
d843 2
a844 2
d&eacute;sactivant, par la m&ecirc;me occasion, les connexions &agrave;
des comptes sans mot de passe. C'est le comportement par d&eacute;faut
d853 1
a853 1
&agrave; la fin du module de v&eacute;rification du mot de passe dans le
d867 1
a867 1
Cette action doit &ecirc;tre effectu&eacute;e en plus du positionnement
d872 4
a875 4
Il y a un probl&egrave;me lorsque des mots de passe vides sont
utilis&eacute;s avec l'authentification PAM : PAM autorisera n'importe
quel mot de passe quand on s'authentifie sur un compte dot&eacute; d'un
mot de passe vide. Ce qui a pour effet de casser la v&eacute;rification
d878 6
a883 6
effectue pour d&eacute;terminer si un compte n'a pas de mot de passe
positionn&eacute; et autorise l'acc&egrave;s quelque soit la politique
sp&eacute;cifi&eacute;e par <b>PermitEmptyPasswords</b>. Pour cette
raison, il est recommand&eacute; de ne pas ajouter la directive
<b>nullok</b> &agrave; votre fichier de configuration PAM &agrave; moins
que vous souhaitiez sp&eacute;cifiquement autoriser les mots de passe
d886 1
a886 1
<h2><a name= "3.3">3.3 - ssh(1) n&eacute;cessite beaucoup de temps pour
d890 2
a891 2
D'importants d&eacute;lais (plus de 10 secondes) &agrave; la connexion sont typiquement caus&eacute;s par un
probl&egrave;me au niveau de la r&eacute;solution de noms :
d894 3
a896 3
Red Hat 6.1) peut n&eacute;cessiter un temps significatif pour
r&eacute;soudre des adresses IPv6 ou IPv4 &agrave; partir de noms de
domaine. Un moyen de contournement consiste &agrave; sp&eacute;cifier
d900 6
a905 6
<li>Il peut y avoir un probl&egrave;me de r&eacute;solution DNS
c&ocirc;t&eacute; client ou c&ocirc;t&eacute; serveur. Vous pouvez
utiliser la commande <code>nslookup</code> pour v&eacute;rifier la
r&eacute;solution de noms et des adresses IP du client sur le serveur et
vice-versa. Vous pouvez d&eacute;sactiver la plupart des
r&eacute;solutions DNS effectu&eacute;es c&ocirc;t&eacute; serveur en
d910 1
a910 1
Des d&eacute;lais de moins de 10 secondes peuvent avoir d'autres causes.
d914 1
a914 1
<li>Les versions d'OpenSSH ant&eacute;rieures &agrave; la version 3.8
d916 5
a920 5
    inf&eacute;rieur &agrave; ce que sshd n&eacute;cessitait. Par
    cons&eacute;quence, sshd finissait par utiliser du moduli largement
    sup&eacute;rieur &agrave; ce qui &eacute;tait demand&eacute;
    d'o&ugrave; une baisse des performances. Le remplacement du fichier
    <i>moduli</i> r&eacute;soudra ce probl&egrave;me. Il est &agrave;
d922 2
a923 2
    remplac&eacute; suivant une mise &agrave; jour. Il devra alors
    &ecirc;tre remplac&eacute; manuellement.
d925 7
a931 7
<li>Les versions d'OpenSSH ant&eacute;rieures &agrave; la version 3.8
    contiennent un d&eacute;faut dans <code>ssh</code>. A cause de ce
    d&eacute;faut, <code>ssh</code> demande du moduli plus grand que
    n&eacute;cessaire. Combin&eacute; au probl&egrave;me
    pr&eacute;cit&eacute;, les baisses de performance &eacute;taient
    encore plus significatives. La mise &agrave; jour du client en
    version 3.8 ou sup&eacute;rieure r&eacute;sout ce probl&egrave;me.
d933 2
a934 2
<li>Si le client ou le serveur ne poss&egrave;de pas un m&eacute;canisme
    de g&eacute;n&eacute;ration de nombres al&eacute;atoires bas&eacute;
d936 1
a936 1
    11.11) et qu'aucun m&eacute;canisme altenatif n'est disponibles (par
d939 4
a942 4
    il est alors possible qu'un des programmes appel&eacute;s par
    <code>ssh-rand- helper</code> pour g&eacute;n&eacute;rer de
    l'entropie ne rend pas la main. Pour v&eacute;rifier si c'est le
    cas, il suffit d'ex&eacute;cuter <code>ssh-rand-helper</code> en
d955 3
a957 3
Tout d&eacute;lai significatif &agrave; la connexion doit &ecirc;tre
investigu&eacute; et corrig&eacute;. Sinon, il suffira de supprimer les
commandes posant probl&egrave;me du fichier
d964 6
a969 6
d&eacute;pend de la vitesse du processeur sur le client et sur le
serveur. A titre de comparaison, les donn&eacute;es suivantes
repr&eacute;sentent des temps de connexion typiques pour
l'ex&eacute;cution de <code>time ssh localhost true</code> avec une
cl&eacute; RSA de 1024 bits sur des machines non charg&eacute;es.
OpenSSH et OpenSSL ont &eacute;t&eacute; compil&eacute;s avec gcc 3.3.x.
d990 2
a991 2
A l'heure de la r&eacute;daction de ces lignes, gcc g&eacute;n&egrave;re
du code relativement lent sous HPPA pour les op&eacute;rations RSA et
d998 1
a998 1
    net-pf-10" dans les journaux syst&egrave;me sous Linux.</a></h2>
d1001 1
a1001 1
Le noyau Linux recherche (&agrave; travers modprobe) la famille de
d1003 2
a1004 2
appropri&eacute;, soit saisir l'alias correct dans
<i>/etc/modules.conf</i> ou d&eacute;sactiver IPv6 dans
d1017 1
a1017 1
Sur Slackware 7.0, vous aurez besoin de lier OpenSSH &agrave; libcrypt.
d1030 8
a1037 8
Certaines versions de Red Hat ont des outils de g&eacute;n&eacute;ration
de mots de passe qui cr&eacute;ent des mots de passe MD5, mais la
fonction syst&egrave;me crypt() ne les comprend pas. Si
l'authentification par mot de passe &eacute;chouent pour les nouveaux
comptes ou pour des comptes dont le mot de passe a &eacute;t&eacute;
r&eacute;cemment modifi&eacute;, alors c'est la cause probable. (Les
comptes affect&eacute;s auront des cha&icirc;nes de mots de passe dans
<i>/etc/shadow</i> d&eacute;butant avec <code>$1$</code>.)
d1040 1
a1040 1
Pour r&eacute;soudre ce probl&egrave;me, activez le support MD5 dans
d1058 1
a1058 1
soit en interne soit &agrave; travers RSAref.
d1064 7
a1070 7
doit &ecirc;tre dans le PATH par d&eacute;faut sur le client et sur le
serveur. Vous aurez peut-&ecirc;tre besoin d'utiliser l'option
<b>--with-default-path</b> pour sp&eacute;cifier un chemin particulier
&agrave; inclure sur le serveur. Cette option remplace le chemin par
d&eacute;faut. Vous aurez donc besoin de sp&eacute;cifier tous les
r&eacute;pertoires actuellement dans votre chemin aussi bien que le
r&eacute;pertoire dans lequel se trouve scp. Par exemple :
d1083 3
a1085 3
La configuration effectu&eacute;e par l'administrateur du serveur est
prioritaire par rapport &agrave; <b>--with-default-path</b>. Ceci inclut
la mise &agrave; z&eacute;ro de PATH dans <i>/etc/profile</i>, PATH dans
d1087 1
a1087 1
sup&eacute;rieures ou &eacute;gales &agrave; 3.7p1), le positionnement
d1095 3
a1097 3
Certains syst&egrave;mes d'exploitation positionnent des permissions
incorrectes sur <i>/dev/tty</i>. Par cons&eacute;quence, la lecture de
mots de passe &eacute;choue avec l'erreur suivante :
d1110 3
a1112 3
La solution consiste &agrave; positionner les permissions &agrave; 0666
sur <i>/dev/tty</i> et soumettre l'erreur comme &eacute;tant un bogue
&agrave; l'&eacute;diteur de votre OS.
d1115 1
a1115 1
    &eacute;choue</a></h2>
d1119 1
a1119 1
avez t&eacute;l&eacute;charg&eacute; ou si make &eacute;choue avec des
d1121 2
a1122 2
t&eacute;l&eacute;charg&eacute; la distribution OpenBSD de OpenSSH et
vous &ecirc;tes entrain de d'essayer de la compiler sur une autre
d1131 2
a1132 2
arriver quand il y a un processus actif en arri&egrave;re plan. C'est un
probl&egrave;me connu sous Linux et HP-UX. On peut v&eacute;rifier son
d1145 1
a1145 1
Ou essayez plut&ocirc;t d'utiliser la commande suivante : 
d1160 1
a1160 1
qui permet d'envoyer un signal HUP &agrave; des t&acirc;ches actives
d1179 1
a1179 1
est ex&eacute;cut&eacute;e, ssh <b>a besoin</b> de suspendre la
d1182 3
a1184 3
<li>Jusqu'&agrave; ce qu'il soit s&ucirc;r que <code>command</code> n'a
     pas besoin d'autres informations en entr&eacute;e.
<li>Jusqu'&agrave; ce qu'il soit s&ucirc;r que <code>command</code> ne
d1186 2
a1187 2
<li>Jusqu'&agrave; ce que <code>command</code> finisse car sshd a besoin
    de communiquer le code de sortie de <code>command</code> &agrave;
d1192 1
a1192 1
<h2><a name= "3.12">J'ai effectu&eacute; une mise &agrave; jour vers
d1195 2
a1196 2
A partir de OpenSSH 3.1, le serveur sshd x11 forwarding &eacute;coute
sur localhost par d&eacute;faut. Vous pouvez utiliser l'option
d1198 1
a1198 1
pr&eacute;c&eacute;dent si vos anciens clients X11 ne fonctionnent pas
d1202 4
a1205 4
De mani&egrave;re g&eacute;n&eacute;rale, les clients X11 utilisant X11
R6 devraient fonctionner avec le param&eacute;trage par d&eacute;faut.
Certains &eacute;diteurs, HP compris, utilisent sur leurs
syst&egrave;mes des clients X11 avec des librairies R6 et R5. Ainsi,
d1209 1
a1209 1
<h2><a name= "3.13">3.13 - J'ai mis &agrave; jour OpenSSH en version 3.8 et
d1213 1
a1213 1
Tel que c'est document&eacute; dans les
d1215 3
a1217 3
<code>ssh</code> utilise d&eacute;sormais les cookies X11 non dignes de
confiance par d&eacute;faut. Le comportement pr&eacute;c&eacute;dent
peut &ecirc;tre restor&eacute; en positionnant <b>ForwardX11Trusted
d1221 1
a1221 1
Voici une liste de quelques sympt&ocirc;mes possibles :<br>
d1227 2
a1228 2
<h2><a name= "3.14">3.14 - J'ai copi&eacute; ma cl&eacute; dans le
    fichier authorized_keys mais l'authentification par cl&eacute;s ne
d1231 3
a1233 3
Ce probl&egrave;me est typiquement caus&eacute; par des permissions plus
larges que celles permises par sshd par d&eacute;faut pour les
r&eacute;pertoires $HOME, $HOME/.ssh ou le fichier
d1237 2
a1238 2
Dans ce cas, l'ex&eacute;cution des commandes suivantes sur le serveur
r&eacute;soudra le probl&egrave;me :
d1252 1
a1252 1
&ccedil;a une solution alternative consiste &agrave; positionner
d1254 1
a1254 1
n'est pas recommand&eacute;e.
d1262 1
a1262 1
$Translation: faq.html,v 1.19 2004/10/07 11:57:43 saad Exp $<br>
@


1.14
log
@sync with Steelix CVS
@
text
@d536 3
a538 3
messages, &eacute;ditez vos fichiers known_hosts et remplacez la fausse
longueur de cl&eacute; (habituellement &quot;1024&quot;) avec la vraie
longueur (habituellement &quot;1023&quot;).
d980 1
a980 1
<tr><td>2.1GHz Althon 2600</td><td>0.14 sec</td><td>0.22 sec</td></tr>
d1037 1
a1037 1
<i>/etc/shadow</i> d&eacute;butant avec <code>$1$</code>).
d1063 1
a1063 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> 
d1085 1
a1085 1
la mise &agrave; z&eacute;ro de PATH dans /etc/profile, PATH dans
d1139 1
a1139 1
$ <b>sleep 20 & exit</b>
d1150 1
a1150 1
$ <b>sleep 20 < /dev/null > /dev/null 2>&1 &</b>
d1261 2
a1262 2
Originally [OpenBSD: faq.html,v 1.89 ]<br>
$Translation: faq.html,v 1.18 2004/09/09 13:27:30 saad Exp $<br>
@


1.13
log
@sync with Steelix CVS
@
text
@d65 2
d789 23
d1261 2
a1262 2
Originally [OpenBSD: faq.html,v 1.88 ]<br>
$Translation: faq.html,v 1.17 2004/05/16 05:45:37 saad Exp $<br>
@


1.12
log
@sync with Steelix CVS. thanks to Olivier HORN <ohorn at axal dot fr> for
a fix.
@
text
@d28 2
a29 1
<li><a href= "#1.1">1.1 - Qu'est-ce que OpenSSH ?</a> 
d176 18
d320 1
d1236 2
a1237 2
Originally [OpenBSD: faq.html,v 1.86 ]<br>
$Translation: faq.html,v 1.16 2004/05/12 20:29:35 saad Exp $<br>
@


1.11
log
@Sync with Steelix CVS
@
text
@d62 2
d748 19
d1216 2
a1217 2
Originally [OpenBSD: faq.html,v 1.85 ]<br>
$Translation: faq.html,v 1.15 2004/04/27 21:45:00 saad Exp $<br>
@


1.10
log
@Sync with Steelix CVS
@
text
@d9 1
a9 1
<meta name= "keywords"      content= "openbsd,faq">
d20 1
a20 1
<strong>Date : 2004/03/09</strong>
d59 3
d72 1
a72 1
    effectuer une connexion</a>
d76 1
a76 1
fonctionne pas sous Slackware 7.0</a>
d123 1
a123 1
OpenSSH a r&eacute;cemment ajout&eacute; 
d136 6
a141 4
    - Programme serveur qui s'ex&eacute;cute sur la machine serveur. Il
      attend des connexions &agrave; partir des machines clientes, et
      lorsqu'il en re&ccedil;oit, il effectue l'authentification et
      commence &agrave; r&eacute;pondre aux requ&ecirc;tes du client.
d143 6
a148 3
    - C'est le programme client utilis&eacute; pour se logguer sur une
      autre machine ou ex&eacute;cuter des commandes sur l'autre
      machine. <i>slogin</i> est un nom alternatif pour ce programme.
d150 2
a151 2
    - Copie de mani&egrave;re s&eacute;curis&eacute;e des fichiers d'une
      machine vers une autre.
d153 3
a155 3
    - Utilis&eacute; pour cr&eacute;er des cl&eacute;s (cl&eacute;s
      d'h&ocirc;tes ou cl&eacute;s d'authentification) PubKey
      Authentication (RSA ou DSA).
d157 2
a158 2
    - Agent d'authentification. Il peut &ecirc;tre utilis&eacute; pour
      retenir des cl&eacute;s RSA pour authentification.
d160 2
a161 2
    - Utilis&eacute; pour d&eacute;clarer de nouvelles cl&eacute;s sur
      l'agent.
d163 1
a163 1
    - Sous-syst&egrave;me serveur SFTP.
d165 1
a165 1
    - Programme de transfert s&eacute;curis&eacute; de fichiers. 
d167 1
a167 1
    - recueille les cl&eacute;s publiques ssh.
d169 2
a170 2
    - Programme d'aide ssh pour l'authentification bas&eacute;e sur
      l'h&ocirc;te.
d282 2
a283 2
d'ensemble rapide de la version portable de OpenSSH voir : 
<a href="portable.html">http://www.openssh.com/portable.html</a>.
d303 2
a304 2
se trouve &agrave; l'adresse 
<a href="users.html">www.openssh.com/users.html</a>.
d333 8
a340 9
du site web principal de OpenSSH : 
<a href="http://www.openssh.com/fr/">http://www.openssh.com</a>, il
existe plusieurs listes de discussion. Mais avant de poster sur
celles-ci, merci d'effectuer des recherches au niveau des archives de
ces listes pour voir s'il n'y a pas d&eacute;j&agrave; une
r&eacute;ponse &agrave; votre question. La liste de diffusion OpenSSH a
&eacute;t&eacute; archiv&eacute;e et mise dans une forme facilitant les
recherches sur 
<a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=1&amp;w=2">
d345 6
a350 2
relatives &agrave; OpenSSH, merci de consulter : 
<a href="list.html">www.openssh.com/list.html</a>.
d635 111
d821 1
a821 1
effectuer une connexion</a></h2>
d824 2
a825 2
C'est typiquement un probl&egrave;me avec la r&eacute;solution de noms
qui peut avoir plusieurs causes :
d828 1
a828 1
Redhat 6.1) peut n&eacute;cessiter un temps significatif pour
d832 1
a832 1
<i>ssh_config</i>.</li>
d840 53
a892 1
utilisant <b>UseDNS no</b> dans <i>sshd_config</i>.</li>
d896 35
d948 1
a948 1
    fonctionne pas sous Slackware 7.0</a></h2>
d963 24
d1058 1
a1058 1
<a href="../portable.html">portable version</a>.
d1095 3
a1097 1
durant la phase de terminaison.
d1154 7
d1195 2
a1196 2
Originally [OpenBSD: faq.html,v 1.69 ]<br>
$Translation: faq.html,v 1.12 2004/03/22 14:46:10 saad Exp $<br>
@


1.9
log
@Sync with Steelix CVS
@
text
@d27 10
a36 9
        <ul>
        <li><a href= "#1.1">1.1 - Qu'est-ce que OpenSSH ?</a> 
        <li><a href= "#1.2">1.2 - Pourquoi devrait on l'utiliser ?</a>
        <li><a href= "#1.3">1.3 - Quels sont les syst&egrave;mes
            d'exploitation support&eacute;s ?</a>
        <li><a href= "#1.4">1.4 - Qu'en est-il des droits d'auteur, de
            l'utilisation, et des brevets ?</a>
        <li><a href= "#1.5">1.5 - Comment obtenir de l'aide ?</a> 
	</ul>
d38 23
a60 25
        <ul>
        <li><a href= "#2.1">2.1 - Pourquoi ssh/scp &eacute;tablit des
            connexions &agrave; partir de ports
            privil&eacute;gi&eacute;s. Mon firewall bloque ceux-ci. </a>
        <li><a href= "#2.2">2.2 - Pourquoi le client ssh est setuid root
            ?</a>
        <li><a href= "#2.3">2.3 - Pourquoi SSH 2.3 a des
            probl&egrave;mes d'interop&eacute;rabilit&eacute; avec
            OpenSSH 2.1.1 ?</a>
        <li><a href= "#2.4">2.4 - Pourquoi OpenSSH affiche : Dispatch
            protocol error: type 20</a>
        <li><a href= "#2.5">2.5 - Les anciennes versions de SSH
            commercial utilisent IDEA pour le cryptage des cl&eacute;s
            de h&ocirc;tes.</a>
        <li><a href= "#2.6">2.6 - A quoi correspondent les messages
            d'avertissement concernant les longueurs de cl&eacute; ?</a>
        <li><a href= "#2.7">2.7 - X11 et/ou agent forwarding ne
            fonctionne pas.</a>
        <li><a href= "#2.8">2.8 - Apr&egrave;s la mise &agrave; jour de
            OpenSSH, j'ai perdu le support SSH2.</a>
        <li><a href= "#2.9">2.9 - sftp/scp &eacute;choue &agrave; la
            connexion mais ssh fonctionne.</a>
        <li><a href= "#2.10">2.10 - Allez-vous ajouter la
            fonctionnalit&eacute; [foo] &agrave; scp ?</a>
        </ul>
d63 30
a92 27
        <ul>
        <li><a href= "#3.1">3.1 - Faux messages d'authentification dans
            les journaux syst&egrave;mes.</a>
        <li><a href= "#3.2">3.2 - Mots de passe vides non permis par
            l'authentification PAM.</a>
        <li><a href= "#3.3">3.3 - ssh(1) n&eacute;cessite beaucoup de
            temps pour effectuer une connexion</a>
        <li><a href= "#3.4">3.4 - Messages d'erreur "Can't locate module
            net-pf-10" dans les journaux syst&egrave;me sous Linux.</a>
        <li><a href= "#3.5">3.5 - L'authentification par mot de passe ne
            fonctionne pas sous Slackware 7.0</a>
        <li><a href= "#3.6">3.6 - Configure ou sshd(8) se plaignent de
            l'absence du support RSA</a>
        <li><a href= "#3.7">3.7 - Erreurs "scp: command not found"</a>
        <li><a href= "#3.8">3.8 - Incapable de lire la phrase de
            protection (passphrase)</a>
        <li><a href= "#3.9">3.9 - 'configure' manquant ou make &eacute;choue</a> 
        <li><a href= "#3.10">3.10 - Connexions suspendues quand on
            quitte ssh</a>
        <li><a href= "#3.11">3.11 - Pourquoi ssh suspend la connexion
            durant la phase de sortie du programme ?</a>
        <li><a href= "#3.12">3.12 - J'ai effectu&eacute; une mise
            &agrave; jour vers OpenSSH 3.1 et X11 forwarding cesse de
            fonctionner.</a>
        <li><a href= "#3.13">3.13 - J'ai mis &agrave; jour OpenSSH en version
            3.8 et certains programmes X11 ne fonctionnent plus.</a>
        </ul>
d97 1
a97 1
       l'obtenir ?</a></u></h2>
d917 30
a946 1
yes</b> dans <i>ssh_config</i>.</p>
d953 2
a954 2
Originally [OpenBSD: faq.html,v 1.65 ]<br>
$Translation: faq.html,v 1.10 2004/03/12 23:31:13 saad Exp $<br>
@


1.8
log
@Sync with Steelix CVS
@
text
@d20 1
a20 1
<strong>Date : 2002/04/03</strong>
d26 1
a26 1
    l'obtenir ?</a></h3>
d63 1
a63 1
    </a></h3>
d70 1
a70 1
            temps pour effectuer une connexion sous Linux/glibc 2.1</a>
d88 2
d697 1
a697 1
    effectuer une connexion sous Linux/glibc 2.1</a></h2>
d700 19
a718 8
La glibc fournie avec Redhat 6.1 semble n&eacute;cessiter beaucoup de
temps pour r&eacute;soudre les adresses "IPv6 ou IPv4" &agrave; partir
de noms de domaine. Ceci peut &ecirc;tre &eacute;vit&eacute; gr&acirc;ce
&agrave; l'option de configuration --with-ipv4-default. Cette option
indique OpenSSH d'utiliser uniquement la r&eacute;solution d'adresses
IPv4. (la r&eacute;solution IPv6 peut encore &ecirc;tre effectu&eacute;e
en sp&eacute;cifiant l'option -6).

d781 9
d879 1
a879 1
<li> Jusqu'&agrave; ce qu'il soit s&ucirc;r que <code>command</code> n'a
d881 1
a881 1
<li> Jusqu'&agrave; ce qu'il soit s&ucirc;r que <code>command</code> ne
d904 5
a908 1
C'est le cas pour HP-UX 11.X.
d910 6
d922 2
a923 2
Originally [OpenBSD: faq.html,v 1.61 ]<br>
$Translation: faq.html,v 1.9 2004/03/02 05:37:55 saad Exp $<br>
@


1.7
log
@Sync with Steelix CVS
@
text
@d271 2
a272 2
<a href="portable.html">http://www.openssh.com/portable.html</a>. Une
liste suit pour un aper&ccedil;u rapide des autres OS support&eacute;s.
d890 2
a891 2
Originally [OpenBSD: faq.html,v 1.59 ]<br>
$Translation: faq.html,v 1.8 2004/02/28 23:27:45 saad Exp $<br>
@


1.6
log
@Sync with Steelix CVS
@
text
@d59 3
a61 1
	</ul>
d80 1
a80 1
	<li><a href= "#3.9">3.9 - 'configure' manquant ou make &eacute;choue</a> 
d88 1
a88 1
	</ul>
d597 23
d890 2
a891 2
Originally [OpenBSD: faq.html,v 1.57 ]<br>
$Translation: faq.html,v 1.6 2004/01/25 23:43:31 saad Exp $<br>
@


1.5
log
@fix closing tag
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1999-2002 OpenBSD.">
d266 1
a266 1
d'exploitation. la version portable de OpenSSH est dirigée par 
d386 1
a386 1
protocole version 2), le client ssh a besoi d'acc&egrave;der &agrave; la
d388 15
a402 5
machine cliente aupr&egrave;s du serveur. Le bit setuid root est
n&eacute;cessaire pour ces m&eacute;thodes d'authentification aussi.
Vous pouvez supprimer sans danger le bit setuid de l'ex&eacute;cutable
ssh si vous ne voulez pas utiliser ces m&eacute;thodes
d'authentification.
d833 1
a833 1
     pas besoin d'autres informations en entrée.
d865 2
a866 2
Originally [OpenBSD: faq.html,v 1.55 ]<br>
$Translation: faq.html,v 1.5 2003/10/06 19:06:47 saad Exp $<br>
@


1.4
log
@Sync with Steelix CVS
@
text
@@


1.3
log
@
sync with steelix translation CVS
@
text
@d20 1
a20 1
<strong>Date: 2002/04/03</strong>
d25 62
a86 54
  <h3><a href= "#1.0">1.0 - Qu'est-ce que OpenSSH et o&ugrave; puis-je l'obtenir 
    ?</a></h3>
	<ul>
	<li><a href= "#1.1">1.1 - Qu'est-ce que OpenSSH ?</a> 
    <li><a href= "#1.2">1.2 - Pourquoi devrait on l'utiliser ?</a> 
    <li><a href= "#1.3">1.3 - Quels sont les syst&egrave;mes d'exploitation support&eacute;s 
      ?</a> 
    <li><a href= "#1.4">1.4 - Qu'en est-il des droits d'auteur, de l'utilisation, 
      et des brevets ?</a> 
    <li><a href= "#1.5">1.5 - Comment obtenir de l'aide ?</a> 
  </ul>
  <h3><a href= "#2.0">2.0 - Questions G&eacute;n&eacute;rales</a></h3>
	<ul>
	<li><a href= "#2.1">2.1 - Pourquoi ssh/scp &eacute;tablit des connexions &agrave; 
      partir de ports privil&eacute;gi&eacute;s. Mon firewall bloque ceux-ci. 
      </a> 
    <li><a href= "#2.2">2.2 - Pourquoi le client ssh est setuid root ?</a>
    <li><a href= "#2.3">2.3 - Pourquoi SSH 2.3 a des probl&egrave;mes d'interop&eacute;rabilit&eacute; 
      avec OpenSSH 2.1.1 ?</a>
    <li><a href= "#2.4">2.4 - Pourquoi OpenSSH affiche : Dispatch protocol error: 
      type 20</a> 
    <li><a href= "#2.5">2.5 - Les anciennes versions de SSH commercial utilisent 
      IDEA pour le cryptage des cl&eacute;s de h&ocirc;tes.</a>
    <li><a href= "#2.6">2.6 - A quoi correspondent les messages d'avertissement 
      concernant les longueurs de cl&eacute; ?</a>
    <li><a href= "#2.7">2.7 - X11 et/ou agent forwarding ne fonctionne pas.</a>
    <li><a href= "#2.8">2.8 - Apr&egrave;s la mise &agrave; jour de OpenSSH, j'ai 
      perdu le support SSH2.</a>
    <li><a href= "#2.9">2.9 - sftp/scp &eacute;choue &agrave; la connexion mais 
      ssh fonctionne.</a>
</ul>
  <h3><a href= "#3.0">3.0 - Questions sur la version portable de OpenSSH </a></h3>
	<ul>
	<li><a href= "#3.1">3.1 - Faux messages d'authentification dans les journaux 
      syst&egrave;mes.</a> 
    <li><a href= "#3.2">3.2 - Mots de passe vides non permis par l'authentification 
      PAM.</a> 
    <li><a href= "#3.3">3.3 - ssh(1) n&eacute;cessite beaucoup de temps pour effectuer 
      une connexion sous Linux/glibc 2.1</a> 
    <li><a href= "#3.4">3.4 - Messages d'erreur "Can't locate module net-pf-10" 
      dans les journaux syst&egrave;me sous Linux.</a> 
    <li><a href= "#3.5">3.5 - L'authentification par mot de passe ne fonctionne 
      pas sous Slackware 7.0</a> 
    <li><a href= "#3.6">3.6 - Configure ou sshd(8) se plaignent de l'absence du 
      support RSA</a>
    <li><a href= "#3.7">3.7 - Erreurs "scp: command not found"</a>
    <li><a href= "#3.8">3.8 - Incapable de lire la phrase de protection (passphrase)</a> 
    <li><a href= "#3.9">3.9 - 'configure' manquant ou make &eacute;choue</a> 
    <li><a href= "#3.10">3.10 - Connexions suspendues quand on quitte ssh</a> 
    <li><a href= "#3.11">3.11 - Pourquoi ssh suspend la connexion durant la phase 
      de sortie du programme ?</a> 
    <li><a href= "#3.12">3.12 - J'ai effectu&eacute; une mise &agrave; jour vers 
      OpenSSH 3.1 et X11 forwarding cesse de fonctionner.</a> 
  </ul>
d90 2
a91 2
<h2><u><a name= "1.0">1.0 - Qu'est-ce que OpenSSH et o&ugrave; puis-je l'obtenir 
  ?</a></u></h2>
d95 30
a124 18
<p> OpenSSH est une version <b>LIBRE</b> de la suite d'outils de connectivit&eacute; 
  r&eacute;seau SSH sur laquelle s'appuie un nombre croissant de personnes sur 
  Internet. Beaucoup d'utilisateurs de telnet, rlogin, ftp et d'autres programmes 
  de ce type peuvent ne pas r&eacute;aliser que leur mot de passe est transmis 
  en clair &agrave; travers Internet alors qu'en fait, &ccedil;a l'est. OpenSSH 
  crypte tout trafic (mots de passe compris) pour &eacute;liminer efficacement 
  l'&eacute;coute indiscr&egrave;te, le vol de connexion, et d'autres attaques 
  au niveau r&eacute;seau.
<p> La suite OpenSSH inclut le programme <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> 
  qui remplace rlogin et telnet, et <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> 
  qui remplace <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a> 
  et <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a>. 
  OpenSSH a r&eacute;cemment ajout&eacute; <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> 
  et <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> 
  qui impl&eacute;mentent une m&eacute;thode plus facile de transfert de fichiers, 
  en se basant sur l'&eacute;bauche <a href="../txt/draft-ietf-secsh-filexfer-02.txt">secsh-filexfer</a> 
  de l'IETF. 
<p><strong>OpenSSH est constitu&eacute; d'un certain nombre de programmes.</strong> 
d126 25
a150 23
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> 
    - Programme serveur qui s'ex&eacute;cute sur la machine serveur. Il attend 
    des connexions &agrave; partir des machines clientes, et lorsqu'il en re&ccedil;oit, 
    il effectue l'authentification et commence &agrave; r&eacute;pondre aux requ&ecirc;tes 
    du client. 
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> 
    - C'est le programme client utilis&eacute; pour se logguer sur une autre machine 
    ou ex&eacute;cuter des commandes sur l'autre machine. <i>slogin</i> est un 
    nom alternatif pour ce programme.
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> 
    - Copie de mani&egrave;re s&eacute;curis&eacute;e des fichiers d'une machine 
    vers une autre. 
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
    - Utilis&eacute; pour cr&eacute;er des cl&eacute;s (cl&eacute;s d'h&ocirc;tes 
    ou cl&eacute;s d'authentification) PubKey Authentication (RSA ou DSA).
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-agent&amp;sektion=1">ssh-agent(1)</a> 
    - Agent d'authentification. Il peut &ecirc;tre utilis&eacute; pour retenir 
    des cl&eacute;s RSA pour authentification. 
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&amp;sektion=1">ssh-add(1)</a> 
    - Utilis&eacute; pour d&eacute;clarer de nouvelles cl&eacute;s sur l'agent. 
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> 
    - Sous-syst&egrave;me serveur SFTP. 
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> 
d152 1
a152 1
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keyscan&amp;sektion=1">ssh-keyscan(1)</a> 
d154 3
a156 2
  <li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign&amp;sektion=8">ssh-keysign(8)</a> 
    - Programme d'aide ssh pour l'authentification bas&eacute;e sur l'h&ocirc;te.
d161 5
a165 3
<p> OpenSSH est une suite d'outils dont l'objectif est de vous aider &agrave; 
  s&eacute;curiser vos connexions r&eacute;seau. Voici une liste de fonctionnalit&eacute;s 
  :
d167 47
a213 40
  <li>Authentification forte. Ferme plusieurs trous de s&eacute;curit&eacute; 
    (par exemple, IP, routage, et usurpation DNS). 
  <li>Intimit&eacute; am&eacute;lior&eacute;e. Toutes les communications sont 
    automatiquement crypt&eacute;es de mani&egrave;re transparente.
  <li>Sessions X11 s&eacute;curis&eacute;es. Le programme positionne automatiquement 
    DISPLAY sur la machine serveur, et fait suivre toute connexion X11 &agrave; 
    travers le canal s&eacute;curis&eacute;.
  <li>Des ports TCP/IP arbitraires peuvent &ecirc;tre redirig&eacute;s &agrave; 
    travers le canal crypt&eacute; dans les deux directions (par exemple, pour 
    des transactions e-cash).
  <li>Aucun reformation n&eacute;cessaire pour les utilisateurs normaux. 
  <li>Ne fait jamais confiance au r&eacute;seau. Confiance minimale dans le c&ocirc;t&eacute; 
    distant de la connexion. Confiance minimale dans les serveurs de noms de domaine. 
    L'authentification RSA ne fait confiance qu'&agrave; la cl&eacute; priv&eacute;e.
  <li>RSA client authentifie le serveur au d&eacute;but de chaque connexion pour 
    se pr&eacute;munir contre les chevaux de troie (par routage ou usurpation 
    DNS) et les attaques en homme du milieu, et RSA serveur authentifie le client 
    avant d'accepter des connexions bas&eacute;es sur une authentification <i>.rhosts</i> 
    ou <i>/etc/hosts.equiv</i> authentication (pour pr&eacute;venir les usurpations 
    DNS, routage, ou IP). 
  <li>La distribution de cl&eacute;s d'authentification h&ocirc;te peut &ecirc;tre 
    effectu&eacute;e de mani&egrave;re centralis&eacute;e par l'administration, 
    automatiquement lorsque la premi&egrave;re connexion est &eacute;tablie &agrave; 
    une machine. 
  <li>N'importe quel utilisateur peut cr&eacute;er n'importe quel nombre de cl&eacute;s 
    d'authentification utilisateur RSA pour son propre usage. 
  <li>Le programme serveur poss&egrave;de sa propre cl&eacute; RSA qui est reg&eacute;n&eacute;r&eacute;e 
    automatiquement toutes les heures.
  <li>Un client d'authentification, ex&eacute;cut&eacute; sur la station de travail 
    ou le portable de l'utilisateur, peut &ecirc;tre utilis&eacute; pour retenir 
    les cl&eacute;s d'authentification RSA de l'utilisateur.
  <li>Le logiciel peut &ecirc;tre install&eacute; et utilis&eacute; (avec des 
    fonctionnalit&eacute;s restreintes) m&ecirc;me sans privil&egrave;ges root. 
  <li>Le client est param&eacute;trable au niveau des fichiers de configuration 
    aussi bien syst&egrave;me qu'utilisateur.
  <li>Compression optionnelle de toutes les donn&eacute;es avec gzip (y compris 
    les sessions X11 suivies et les donn&eacute;es de port TCP/IP), ce qui peut 
    aboutir &agrave; des acc&eacute;l&eacute;rations significatives sur des connexions 
    lentes. 
  <li>Remplacement complet de rlogin, rsh, et rcp. 
d216 43
a258 29
<p> Actuellement, pratiquement toutes les communications dans les r&eacute;seaux 
  informatiques sont effectu&eacute;es sans cryptage. Par cons&eacute;quence, 
  n'importe quelle personne qui a un acc&egrave;s &agrave; n'importe quelle machine 
  connect&eacute;e au r&eacute;seau peut &eacute;couter n'importe quelle communication. 
  C'est ce que font les pirates, les administrateurs curieux, les employ&eacute;s, 
  les criminels, les espions industriels, et les gouvernements. Certains r&eacute;seaux 
  ont assez de fuites de radiation &eacute;l&eacute;ctromagn&eacute;tique pour 
  permettre des captures de donn&eacute;es &agrave; distance. 
<p> Quand vous vous logguez, votre mot de passe transite dans le r&eacute;seau 
  en clair. Ainsi, n'importe quelle personne &agrave; l'&eacute;coute peut alors 
  utiliser votre compte pour effectuer des op&eacute;rations malintentionn&eacute;es. 
  Plusieurs incidents ont &eacute;t&eacute; constat&eacute;s au niveau modial 
  lorsque des pirates ont d&eacute;marr&eacute; des programmes sur des stations 
  de travail sans que les propri&eacute;taires en prennent connaissance juste 
  pour &eacute;couter le r&eacute;seau et collecter des mots de passe. Des programmes 
  pour faire de telles choses sont disponibles sur Internet, ou peuvent &ecirc;tre 
  d&eacute;velopp&eacute;s par un programmeur comp&eacute;tent en quelques heures. 
<p> Les entreprises ont des secrets de fabrication, des demandes de brevets en 
  pr&eacute;paration, des informations de prix, des informations sur les contractants, 
  des donn&eacute;es client, des donn&eacute;es sur le personnel, des informations 
  financi&egrave;res, etc. De nos jours, n'importe qui ayant un acc&egrave;s au 
  r&eacute;seau (n'importe lequel) peut &eacute;couter tout ce qui se passe sur 
  le r&eacute;seau, sans respect des restrictions d'acc&egrave;s en place. 
<p> Bien des entreprises ne sont pas conscientes que l'information peut &ecirc;tre 
  tr&egrave;s facilement r&eacute;cup&eacute;r&eacute;e &agrave; partir du r&eacute;seau. 
  Ils croient que leurs donn&eacute;es sont saines et sauves puisque personne 
  n'est suppos&eacute;e savoir qu'il y a des informations sensibles dans le r&eacute;seau, 
  ou parce que beaucoup d'autres donn&eacute;es sont transf&eacute;r&eacute;es 
  sur le r&eacute;seau. Cette politique n'est pas s&ucirc;re. 
d260 1
a260 1
support&eacute;s ?</a></h2>
d262 9
a270 6
<p> Bien que OpenSSH soit d&eacute;velopp&eacute; sur <a href="http://www.openbsd.org/">OpenBSD</a>, 
  il existe une grande vari&eacute;t&eacute; de portages vers d'autres syst&egrave;mes 
  d'exploitation. la version portable de OpenSSH est dirigée par <a href="mailto:djm@@openbsd.org"> 
  Damien Miller</a>. Pour une vue d'ensemble rapide de la version portable de 
  OpenSSH voir : <a href="portable.html">http://www.openssh.com/portable.html</a>. 
  Une liste suit pour un aper&ccedil;u rapide des autres OS support&eacute;s. 
d272 13
a284 13
	<li>OpenBSD
	<li>NetBSD
	<li>FreeBSD
	<li>AIX 
	<li>HP-UX 
	<li>IRIX 
	<li>Linux 
	<li>NeXT 
	<li>SCO 
	<li>SNI/Reliant Unix 
	<li>Solaris 
	<li>Digital Unix/Tru64/OSF 
	<li>MacOS X 
d287 29
a315 15
<p> Une liste d'&eacute;diteurs qui incluent OpenSSH dans leur distribution se 
  trouve &agrave; l'adresse <a href="users.html">www.openssh.com/users.html</a>.
<h2><a name= "1.4">1.4 - Qu'en est-il des droits d'auteur, de l'utilisation, et
des brevets ?</a></h2>
<p> Les d&eacute;veloppeurs OpenSSH ont fait beaucoup d'efforts pour &eacute;viter 
  tout probl&egrave;me de brevet ou de droit d'auteur. A cet effet, quelques options 
  ont &eacute;t&eacute; retir&eacute;es de OpenSSH. Plus pr&eacute;cisement le 
  support d'algorithmes brevet&eacute;s. 
<p> OpenSSH ne supporte aucun algorithme de transport brevet&eacute;. En mode 
  SSH1, seuls 3DES et Blowfish sont disponibles. En mode SSH2, seulement 3DES, 
  Blowfish,CAST128, Arcfour et AES peuvent &ecirc;tre choisis. L'algorithme brevet&eacute; 
  IDEA n'est pas support&eacute;. 
<p> OpenSSH fournit le support aussi bien pour le protocole SSH1 que pour SSH2. 
<p> Etant donn&eacute; que le brevet RSA a expir&eacute;, il n'y a plus de restrictions 
  au niveau de l'utilisation logicielle de l'algorithme RSA, y compris OpenBSD.
d317 31
a347 19
<p> Il y a plusieurs endroits o&ugrave; on peut trouver de l'aide. En plus du 
  site web principal de OpenSSH : <a href="http://www.openssh.com/fr/">http://www.openssh.com</a>, 
il existe plusieurs listes de discussion. Mais avant de poster sur celles-ci,
merci d'effectuer des recherches au niveau des archives de ces listes pour voir
s'il n'y a pas d&eacute;j&agrave; une r&eacute;ponse &agrave; votre question. La
liste de diffusion OpenSSH a &eacute;t&eacute; archiv&eacute;e et mise dans une
forme facilitant les recherches sur <a
href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=1&amp;w=2">theaimsgroup.com</a>.
<p> Pour plus d'informations concernant l'abonnement aux listes de diffusion relatives 
  &agrave; OpenSSH, merci de consulter : <a href="list.html">www.openssh.com/list.html</a>. 
<h2><u><a name= "2.0">2.0 - Questions G&eacute;n&eacute;rales</a></u></h2>

<h2><a name= "2.1">2.1 - Pourquoi ssh/scp &eacute;tablit des connexions &agrave; 
  partir de ports privil&eacute;gi&eacute;s.</a></h2>
<p> Le client OpenSSH utilise des ports privil&eacute;gi&eacute;s (low numbered 
  ports) pour l'authentification rhosts et rhosts-rsa parce que le serveur a besoin 
  de se fier au nom d'utilisateur fournit par le client. Pour d&eacute;sactiver 
  ce comportement, vous pouvez ajouter la ligne suivante &agrave; votre fichier 
  <i>ssh_config</i> ou &agrave; <i>~/.ssh/config</i>.
d358 4
a361 2
<p> Autrement vous pouvez sp&eacute;cifier cette option au niveau de la ligne 
  de commande en utilisant l'option <b>-o</b> de la commande <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>. 
d372 21
a392 1
<h2><a name= "2.2">2.2 -  Pourquoi le client ssh est setuid root ?</a></h2>
a393 12
<p> Conjointement avec la question pr&eacute;c&eacute;dente(<a href="#2.1">2.1</a>), 
  OpenSSH a besoin de l'autorit&eacute; root pour &ecirc;tre capable de s'attacher 
  aux ports privil&eacute;gi&eacute;s afin de faciliter <i> l'authentification 
  rhosts</i>. Un port privil&eacute;gi&eacute; est aussi requis pour l'authentification 
  rhosts-rsa sur les anciennes versions de older SSH. 
<p> De plus, dans le cas de <i>l'authentification rhosts-rsa </i> (dans le protocole 
  version 1) et <i>l'authentification hostbased </i> dans le protocole version 
  2), le client ssh a besoi d'acc&egrave;der &agrave; la <em>cl&eacute; priv&eacute;e 
  d'h&ocirc;te </em>pour authentifier la machine cliente aupr&egrave;s du serveur. 
  Le bit setuid root est n&eacute;cessaire pour ces m&eacute;thodes d'authentification 
  aussi. Vous pouvez supprimer sans danger le bit setuid de l'ex&eacute;cutable 
  ssh si vous ne voulez pas utiliser ces m&eacute;thodes d'authentification. 
d395 1
a395 1
d'interop&eacute;rabilit&eacute; avec OpenSSH 2.1.1 ?</a></h2>
d397 12
a408 8
<p> SSH 2.3 et les versions ant&eacute;rieures contiennent un d&eacute;faut dans 
  leur impl&eacute;mentation HMAC. Leur code ne fournissait pas le bloc de donn&eacute;es 
  entier obtenu &agrave; partir du digest. Au lieu de cela, il fournissait toujours 
  128 bits. Pour des digests plus grands, &ccedil;a entra&icirc;nait des probl&egrave;mes 
  d'interop&eacute;rabilit&eacute; de SSH 2.3 avec OpenSSH. 
<p> OpenSSH 2.2.0 d&eacute;tecte ce d&eacute;faut sur SSH 2.3. Les version r&eacute;centes 
  de SSH fixeront ce d&eacute;faut. Autrement, vous pouvez ajouter la ligne suivante 
  &agrave; <i>sshd2_config </i> de SSH 2.3. 
d419 2
a420 2
<h2><a name= "2.4">2.4 - Pourquoi OpenSSH affiche : Dispatch protocol error:
type 20</a></h2>
d422 12
a433 10
<p> Des probl&egrave;mes d'interop&eacute;rabilit&eacute; ont &eacute;t&eacute; 
  constat&eacute;s car les anciennes versions de OpenSSH ne supportent pas la 
  ren&eacute;gociation des cl&eacute;s de sessions. Cependant, SSH commercial 
  2.3 essaie de n&eacute;gocier cette fonctionnalit&eacute;, d&egrave;s lors vous 
  pourriez avoir des gels de connexion ou voir le message d'erreur &quot;<b>Dispatch 
  protocol error: type 20 </b>&quot;. Pour r&eacute;soudre ce probl&egrave;me, 
  effectuez une mise &agrave; jour vers une version r&eacute;cente de OpenSSH 
  ou d&eacute;sactiver la ren&eacute;gociation de cl&eacute;s en ajoutant la ligne 
  suivante au niveau du fichier<i> ssh2_config</i> ou <i>sshd2_config</i> sur 
  la version commerciale SSH 2.3.
d444 14
a457 10
<h2><a name= "2.5">2.5 - Les anciennes versions de SSH commercial utilisent IDEA
pour le cryptage des cl&eacute;s de h&ocirc;tes.</a></h2>

<p> Les anciennes versions de SSH utilisaient un algorithme brevet&eacute; pour 
  crypter leur <i>/etc/ssh/ssh_host_key</i>. Ce probl&egrave;me se manifestera 
  lorsque <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> 
  ne pourra pas lire sa cl&eacute; d'h&ocirc;te. Pour le r&eacute;soudre, utilisez 
  la commande ci-apr&egrave;s pour convertir votre ssh_host_key en 3DES. <b>REMARQUE 
  :</b> Utilisez le programme <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
  du produit commercial SSH, *PAS* OpenSSH pour l'exemple ci-dessous.
d468 2
a469 2
<h2><a name= "2.6">2.6 - A quoi correspondent les messages d'avertissement
concernant les longueurs de cl&eacute; ?</a></h2>
d471 26
a496 16
<p> Le programme <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
  de SSH commercial contenaint un bogue qui lui faisait occasionnellement g&eacute;n&eacute;rer 
  des cl&eacute;s Pubkey Authentication (RSA or DSA) qui avait leur bit &agrave; 
  poids le plus significatif (Most Significant Bit ou MSB) non positionn&eacute;. 
  De telles cl&eacute;s &eacute;taient annonc&eacute;es comme &eacute;tant &agrave; 
  longueur compl&egrave;te alors qu'en r&eacute;alit&eacute; elles sont plus petites 
  une fois sur deux. 
<p> OpenSSH affichera des messages d'avertissement quand de telles cl&eacute;s 
  sont rencontr&eacute;es. Pour se d&eacute;barasser de ces messages, &eacute;ditez 
  vos fichiers known_hosts et remplacez la fausse longueur de cl&eacute; (habituellement 
  &quot;1024&quot;) avec la vraie longueur (habituellement &quot;1023&quot;). 
<h2><a name= "2.7">2.7 -  X11 et/ou agent forwarding ne fonctionne pas.</a></h2>

<p> V&eacute;rifiez <i>ssh_config</i> et <i>sshd_config</i>. Les fichiers de configuration 
  par d&eacute;faut d&eacute;sactivent le X11 et le agent forwarding. Pour activer 
  ces options, ajoutez la ligne suivante &agrave; <i>sshd_config </i>: 
d510 2
a511 2
	<tr>
		<td nowrap bgcolor="#EEEEEE">
d514 2
a515 2
		</td>
	</tr>
d520 6
a525 5
<b>REMARQUE :</b> Pour les utilisateurs de Linux Mandrake 7.2, Mandrake modifie
la variable d'environnement <i>XAUTHORITY</i> dans <i>/etc/skel/.bashrc</i>, ce
qui a pour effet de la modifier pour tous les utilisateurs. Cette variable est
positionn&eacute;e par OpenSSH et pour que les options ci-dessus fonctionnent,
vous devez mettre en commentaire la ligne : 
d538 2
a539 2
<h2><a name= "2.8">2.8 - Apr&egrave;s la mise &agrave; jour de OpenSSH, j'ai
perdu le support SSH2.</a></h2>
d542 6
a547 5
Entre des versions diff&eacute;rentes, des modifications peuvent &ecirc;tre
apport&eacute;es &agrave;  <i>sshd_config</i> ou <i>ssh_config</i>. Vous devriez
toujours v&eacute;rifier ces modifications lors de la mise &agrave; jour
OpenSSH.  Apr&egrave;s la version 2.3.0 de OpenSSH, vous aurez besoin d'ajouter
ce qui suit &agrave; <i>sshd_config</i>.
d561 2
a562 2
<h2><a name= "2.9">2.9 - sftp/scp &eacute;choue &agrave; la connexion mais ssh
fonctionne.</a></h2>
d565 5
a569 5
sftp et/ou scp peuvent &eacute;chouer &agrave; la connexion si vous avez une
initialisation du shell (.profile, .bashrc, .cshrc, etc) qui produit une sortie
pour des sessions non-interactives. Cette sortie rend le client sftp/scp confus.
Vous pouvez v&eacute;rifier si c'est le cas pour votre shell en ex&eacute;cutant
la commande suivante :
d582 2
a583 2
Si la commande ci-dessus g&eacute;n&egrave;re une sortie, alors vous aurez
besoin de modifier votre initialisation du shell.
d586 1
a586 1
OpenSSH</a></u></h2>
d588 2
a589 2
<h2><a name= "3.1">3.1 - Faux messages d'authentification dans les journaux
syst&egrave;mes.</a></h2>
a594 1

d606 5
a610 4
Ces messages sont g&eacute;n&eacute;r&eacute;s car OpenSSH essaie d'abord de
d&eacute;terminer si un utilisateur a besoin d'authentification pour se logguer
(par exemple, un mot de passe vide). Malheureusement, PAM aime enregistrer tous
les &eacute;v&eacute;nements d'authentification, y compris celui-ci. 
d613 5
a617 4
Si cela vous g&ecirc;ne beaucoup, positionnez &quot;<b>PermitEmptyPasswords
no</b>&quot; dans <i>sshd_config</i>. Ceci aura pour effet de stopper le message
d'erreur mais en d&eacute;sactivant, par la m&ecirc;me occasion, les connexions
&agrave; des comptes sans mot de passe. C'est le comportement par d&eacute;faut
d620 8
a627 2
<h2><a name= "3.2">3.2 - Mots de passe vides non permis par l'authentification
PAM.</a></h2>
a628 4
<p> Pour permettre l'utilisation de mots de passe vides avec une version de OpenSSH 
  construite avec PAM, vous devez ajouter le drapeau nullok &agrave; la fin du 
  module de v&eacute;rification du mot de passe dans le fichier <i>/etc/pam.d/sshd</i>. 
  Par exemple : 
d641 2
a642 1
&quot;<b>PermitEmptyPasswords yes</b>&quot; dans le fichier <i>sshd_config</i>. 
d645 6
a650 5
Il y a un probl&egrave;me lorsque des mots de passe vides sont utilis&eacute;s
avec l'authentification PAM : PAM autorisera n'importe quel mot de passe quand
on s'authentifie sur un compte dot&eacute; d'un mot de passe vide. Ce qui a pour
effet de casser la v&eacute;rification que <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a>
d653 5
a657 5
sp&eacute;cifi&eacute;e par <b>PermitEmptyPasswords</b>. Pour cette raison, il
est recommand&eacute; de ne pas ajouter la directive <b>nullok</b> &agrave;
votre fichier de configuration PAM &agrave; moins que vous souhaitiez
sp&eacute;cifiquement autoriser les mots de passe vides.

d660 1
a660 1
effectuer une connexion sous Linux/glibc 2.1</a></h2>
d663 7
a669 6
La glibc fournie avec Redhat 6.1 semble n&eacute;cessiter beaucoup de temps pour
r&eacute;soudre les adresses "IPv6 ou IPv4" &agrave; partir de noms de domaine.
Ceci peut &ecirc;tre &eacute;vit&eacute; gr&acirc;ce &agrave; l'option de
configuration --with-ipv4-default. Cette option indique OpenSSH d'utiliser
uniquement la r&eacute;solution d'adresses IPv4. (la r&eacute;solution IPv6 peut
encore &ecirc;tre effectu&eacute;e en sp&eacute;cifiant l'option -6). 
d672 2
a673 2
<h2><a name= "3.4">3.4 - Messages d'erreur "Can't locate module net-pf-10" dans
les journaux syst&egrave;me sous Linux.</a></h2>
d676 4
a679 3
Le noyau Linux recherche (&agrave; travers modprobe) la famille de protocoles 10
(IPv6). Il faut soit charger le module noyau appropri&eacute;, soit saisir
l'alias correct dans <i>/etc/modules.conf</i> ou d&eacute;sactiver IPv6 dans
d688 5
a692 2
<h2><a name= "3.5">3.5 - L'authentification par mot de passe ne fonctionne pas
sous Slackware 7.0</a></h2>
a693 1
<p> Sur Slackware 7.0, vous aurez besoin de lier OpenSSH &agrave; libcrypt. 
d704 6
a709 2
<h2><a name= "3.6">3.6 - Configure ou sshd(8) se plaignent de l'absence du
support RSA</a></h2>
a710 2
<p> Assurez vous que vos librairies OpenSSL disposent du support RSA ou DSA soit 
  en interne soit &agrave; travers RSAref. 
d713 10
a722 7
<p> <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> 
  doit &ecirc;tre dans le PATH par d&eacute;faut sur le client et sur le serveur. 
  Vous aurez peut-&ecirc;tre besoin d'utiliser l'option <b>--with-default-path</b> 
  pour sp&eacute;cifier un chemin particulier &agrave; inclure sur le serveur. 
  Cette option remplace le chemin par d&eacute;faut. Vous aurez donc besoin de 
  sp&eacute;cifier tous les r&eacute;pertoires actuellement dans votre chemin 
  aussi bien que le r&eacute;pertoire dans lequel se trouve scp. Par exemple : 
d734 6
a739 1
(passphrase)</a></h2>
a740 3
<p> Certains syst&egrave;mes d'exploitation positionnent des permissions incorrectes 
  sur <i>/dev/tty</i>. Par cons&eacute;quence, la lecture de mots de passe &eacute;choue 
  avec l'erreur suivante : 
d751 26
a776 17
<p> La solution consiste &agrave; positionner les permissions &agrave; 0666 sur 
  <i>/dev/tty</i> et soumettre l'erreur comme &eacute;tant un bogue &agrave; l'&eacute;diteur 
  de votre OS. 
<h2><a name= "3.9">3.9 - 'configure' manquant ou make &eacute;choue</a></h2>

<p> S'il n'y a pas de fichier 'configure' dans le fichier tar.gz que vous avez 
  t&eacute;l&eacute;charg&eacute; ou si make &eacute;choue avec des erreurs du 
  type "missing separator", vous avez probablement t&eacute;l&eacute;charg&eacute; 
  la distribution OpenBSD de OpenSSH et vous &ecirc;tes entrain de d'essayer de 
  la compiler sur une autre plateforme. Merci de consultez la page <a href="../portable.html">portable 
  version</a>. 
<h2><a name= "3.10">3.10 - Connexions suspendues quand on quitte ssh</a></h2>

<p> OpenSSH peut suspendre une connexion en phase de terminaison. Ceci peut arriver 
  quand il y a un processus actif en arri&egrave;re plan. C'est un probl&egrave;me 
  connu sous Linux et HP-UX. On peut v&eacute;rifier son existence en faisant 
  : 
d798 9
a806 6
<p> Une solution de contournement pour les utilisateurs bash est de mettre <b>"shopt 
  -s huponexit"</b> soit dans /etc/bashrc soit dans ~/.bashrc. Autrement, consultez 
  la page de manuel de votre shell pour une option qui permet d'envoyer un signal 
  HUP &agrave; des t&acirc;ches actives durant la phase de terminaison. 
<h2><a name= "3.11">3.11 - Pourquoi ssh suspend la connexion durant la phase de
sortie du programme ?</a></h2>
d819 2
a820 2
est ex&eacute;cut&eacute;e, ssh <b>a besoin</b> de suspendre la connexion, car
il doit attendre :
d822 7
a828 7
  <li> Jusqu'&agrave; ce qu'il soit s&ucirc;r que <code>command</code> n'a pas 
    besoin d'autres informations en entrée. 
  <li> Jusqu'&agrave; ce qu'il soit s&ucirc;r que <code>command</code> ne produit 
    pas d'autres informations en sortie. 
  <li>
Jusqu'&agrave; ce que <code>command</code> finisse car sshd a besoin de
communiquer le code de sortie de <code>command</code> &agrave; ssh.
d832 2
a833 2
<h2><a name= "3.12">J'ai effectu&eacute; une mise &agrave; jour vers OpenSSH 3.1
et X11 forwarding cesse de fonctionner.</a></h2>
d835 13
a847 9
A partir de OpenSSH 3.1, le serveur sshd x11 forwarding &eacute;coute sur localhost 
par d&eacute;faut. Vous pouvez utiliser l'option <b>X11UseLocalhost</b> pour revenir 
au comportement pr&eacute;c&eacute;dent si vos anciens clients X11 ne fonctionnent 
pas avec cette configuration. 
<p> De mani&egrave;re g&eacute;n&eacute;rale, les clients X11 utilisant X11 R6 
  devraient fonctionner avec le param&eacute;trage par d&eacute;faut. Certains 
  &eacute;diteurs, HP compris, utilisent sur leurs syst&egrave;mes des clients 
  X11 avec des librairies R6 et R5. Ainsi, certains clients vont fonctionner et 
  d'autres ne fonctionneront pas. C'est le cas pour HP-UX 11.X.
d855 2
a856 2
Originally [OpenBSD: faq.html,v 1.53 ]<br>
$Translation: faq.html,v 1.3 2003/05/04 22:46:06 saad Exp $<br>
@


1.2
log
@
sync with steelix translation CVS
@
text
@d102 1
a102 1
  en se basant sur l'&eacute;bauche <a href="txt/draft-ietf-secsh-filexfer-02.txt">secsh-filexfer</a> 
d717 1
a717 1
$Translation: faq.html,v 1.2 2003/02/27 12:24:54 saad Exp $<br>
@


1.1
log
@
new files from Saad Kadhi and links to them.
@
text
@d716 2
a717 2
Originally [OpenBSD: faq.html,v 1.52 ]<br>
$Translation: faq.html,v 1.1 2002/11/13 07:38:19 saad Exp $<br>
@

