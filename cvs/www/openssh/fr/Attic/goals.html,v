head	1.19;
access;
symbols;
locks; strict;
comment	@# @;


1.19
date	2014.04.01.19.44.54;	author deraadt;	state dead;
branches;
next	1.18;

1.18
date	2006.04.25.08.25.48;	author saad;	state Exp;
branches;
next	1.17;

1.17
date	2006.03.01.10.48.43;	author saad;	state Exp;
branches;
next	1.16;

1.16
date	2005.07.15.04.26.13;	author saad;	state Exp;
branches;
next	1.15;

1.15
date	2005.03.18.11.04.08;	author saad;	state Exp;
branches;
next	1.14;

1.14
date	2005.01.31.10.59.40;	author saad;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.18.09.53.59;	author jufi;	state Exp;
branches;
next	1.12;

1.12
date	2004.12.22.20.11.59;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2004.11.14.20.10.31;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2004.03.05.07.16.17;	author jufi;	state Exp;
branches;
next	1.9;

1.9
date	2004.02.08.11.58.49;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2002.11.08.10.01.56;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.14.00.43.12;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.25.20.12.34;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2001.02.27.18.03.10;	author jufi;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.19.17.23.02;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.01.15.54.02;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.12.18.28.05;	author jufi;	state Exp;
branches;
next	1.1;

1.1
date	2000.08.02.14.59.03;	author wvdputte;	state Exp;
branches;
next	;


desc
@@


1.19
log
@give up on translation
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Les objectifs du projet OpenSSH</title>
<link rev=made href="mailto:www@@openbsd.org">
<meta name="resource-type" content="document">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="description" content="the OpenSSH project goals page">
<meta name="keywords" content="openbsd,goals">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 1999-2004 by OpenBSD.">
</head>

<body bgcolor="#ffffff" text="#000000" link="#23238E">

<a href="index.html"><img alt="[OpenSSH]" height="30" width="141"
src="../images/smalltitle.gif" border="0"></a>
<p>
<h2><font color="#e00000">Objectifs du projet</font></h2>
<hr>

L'objectif du projet OpenSSH est simple : telnet et rlogin ne sont pas
sécurisés. Nous pensons donc que tout système d'exploitation doit
fournir le support du protocole SSH en standard. (voir le dessin
ci-dessous).
<p>

Le protocole SSH est disponible dans deux versions incompatibles : SSH 1
et SSH 2.
<p>

SSH 1 se décline en deux sous-variantes : les protocoles 1.3 et 1.5. Les
deux sont supportés par OpenSSH. Ils nécessitent l'utilisation de
l'algorithme de chiffrement asymétrique
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rsa">RSA</a> (dont
le brevet a expiré aux Etats-Unis d'Amérique, permettant son usage par
tout le monde) pour l'échange des clés et une courte liste d'algorithmes
symétriques pour le chiffrement proprement dit :
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=des_crypt">3DES</a>
et
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=blowfish">Blowfish</a>
(il y en a eu d'autres comme RC4 mais ils avaient des problèmes de
sécurité). Quelques mises en oeuvre de SSH 1 ont également utilisé
l'algorithme symétrique IDEA mais comme il est breveté dans certains
pays et que les deux autres algorithmes fournis suffisent, OpenSSH ne
l'utilise pas.

<p>
Le protocole SSH 1 n'utilise qu'un simple contrôle CRC (Cyclic
Redundancy Check) pour valider l'intégrité des données, ce qui n'est pas
suffisant. Même si une attaque par insertion est possible, celle-ci est
très difficile à réaliser compte-tenu du nombre de rustines qui ont été
appliquées sur les mises en oeuvre de SSH au cours des années.
L'utilisation de l'algorithme 3DES rend également cette attaque par
insertion difficilement possible (nous allons résoudre ce problème
bientôt).
<p>

La deuxième variante majeure de SSH met en oeuvre le protocole SSH 2. Ce
protocole a été inventé de façon à éviter les problèmes de brevet avec
RSA (problèmes qui ne sont plus d'actualité depuis que le brevet a
expiré). Il corrige également le problème de contrôle d'intégrité CRC du
protocole 1 en utilisant les algorithmes asymétriques
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dsa">DSA</a> et
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dh">DH</a>, le
protocole SSH 2 ne repose sur aucun brevet. Le problème du CRC est résolu
en utilisant un véritable algorithme
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=HMAC">HMAC</a>. 
Le protocole SSH 2 supporte aussi un grand nombre de d'algorithmes
symétriques et de nouvelles fonctionnalités.
<p>

La version d'OpenSSH supportant les protocoles SSH 1.3 et 1.5 a été mise
à disposition le 1er décembre 1999.
<p>

Pour la plupart de ses fonctionnalités cryptographiques, OpenSSH
s'appuie sur la bibliothèque non GPL
<a href="http://www.openssl.org">OpenSSL</a>. 

<p>
Juste après la fin de notre mise en oeuvre du protocole SSH 1, divers
groupes non-OpenBSD se sont particulièrement intéressés à OpenSSH.
Damien Miller, Philipp Hands et une poignée d'autres développeurs ont
commencé à porter OpenSSH sur Linux et d'autres systèmes d'exploitation
Unix. Depuis le début de nos efforts, nous avons bien senti que le code
originel de SSH était trop compliqué et qu'il devait gérer trop de
dépendances. Notre approche visant à écrire du code sûr et robuste ne
nous a pas permis de gérer de telles différences. C'est la raison pour
laquelle nous avons décider de séparer les efforts de développements
centraux du développement de la portabilité pour rendre le processus de
développement plus simple pour tous. Cela a très bien fonctionné pour
nous (comparez le nombre de lignes de code entre la version de base et
la version portable).
<p>

Les membres du projet OpenBSD ont continué dans cette voie afin de
supporter le protocole SSH 2. Ce travail a été réalisé en grande partie
par Markus Friedl. Le 4 mai 2000, la mise en oeuvre du protocole SSH 2
était suffisamment correcte pour être utilisable.
<p>

<hr>
<h2><font color="#e00000">Utilisez-vous encore des connexions "en clair"
    ?</font></h2>

<img width=500 height=417 src="../images/shherrif.jpg" alt=ssheriff>

<hr>
<a href="index.html"><img height=24 width=24 src="../back.gif" border=0
alt=OpenSSH></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: goals.html,v 1.20 ]<br>
$Translation: goals.html,v 1.18 2006/04/25 07:13:34 ajacoutot Exp $<br>
-->
$OpenBSD: goals.html,v 1.18 2006/04/25 08:25:48 saad Exp $
</small>

</body>
</html>
@


1.18
log
@sync with Steelix CVS
@
text
@d119 1
a119 1
$OpenBSD$
@


1.17
log
@sync with Steelix CVS
@
text
@d107 1
a107 1
<img width=500 height=500 src="../images/shherrif.jpg" alt=ssheriff>
d116 2
a117 2
Originally [OpenBSD: goals.html,v 1.19 ]<br>
$Translation: goals.html,v 1.17 2006/02/28 14:39:22 ajacoutot Exp $<br>
@


1.16
log
@sync with Steelix CVS
@
text
@d14 1
a14 1
<body bgcolor="#FFFFFF" text="#000000" link="#23238E">
d117 1
a117 1
$Translation: goals.html,v 1.16 2005/07/14 10:59:30 aanriot Exp $<br>
@


1.15
log
@sync with Steelix CVS
@
text
@d49 4
a52 4
Le protocole SSH 1 n'utilise qu'un simple contrôle CRC (Cyclic Redundancy
Check) pour valider l'intégrité des données, ce qui n'est pas suffisant.
Même si une attaque par insertion est possible, celle-ci est très
difficile à réaliser compte-tenu du nombre de rustines qui ont été
d55 2
a56 1
insertion difficilement possible (nous allons résoudre ce problème bientôt).
d63 1
a63 1
protocole 1. En utilisant les algorithmes asymétriques
d93 1
a93 1
nous. (Comparez le nombre de lignes de code entre la version de base et
d98 1
a98 1
supporter le protocole SSH 2. Ce travail a été réalisé majoritairement
d110 2
a111 1
<a href="index.html"><img height=24 width=24 src="../back.gif" border=0 alt=OpenSSH></a>
d117 1
a117 1
$Translation: goals.html,v 1.15 2005/03/15 15:03:26 saad Exp $<br>
@


1.14
log
@sync with Steelix CVS
@
text
@d23 24
a46 6
sécurisés. Nous pensons donc que tout système d'exploitation doit  fournir le support du protocole SSH en standard. (voir le dessin ci-dessous). 
<p>

Le protocole SSH est disponible dans deux versions incompatibles :
SSH1 et SSH2.
<p>
a47 15
SSH1 se décline en deux sous-variantes : les protocoles 1.3 et 1.5. Les deux sont supportés par OpenSSH. Ils nécessitent
l'utilisation de l'algorithme de chiffrement asymétrique <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=rsa">RSA</a> (dont
le brevet a expiré aux USA, permettant l'usage par tout le monde) pour l'échange des clés et une courte liste d'algorithmes symétriques
pour le chiffrement proprement dit :
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=des_crypt">3DES</a>
et
<a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=blowfish">Blowfish</a>
 (il y en a eu d'autres comme RC4 mais ils avaient des problèmes de
 sécurité). Quelques mises en oeuvre de ssh1 ont également utilisé
 l'algorithme symétrique IDEA mais comme il est breveté dans
 certains pays et que les deux autres algorithmes fournis 
 suffisent, OpenSSH ne l'utilise pas.
a48 1

d50 6
a55 4
Check) pour valider l'intégrité des données, ce qui n'est pas
suffisant. Même si une attaque par insertion est possible, celle-ci est très difficile à réaliser compte-tenu du nombre de rustines qui ont été appliquées sur les mises en oeuvre de SSH au cours des années.
L'utilisation de l'algorithme 3DES rend également cette attaque par insertion difficilement possible (nous allons résoudre
ça bientôt).
d58 6
a63 5
La deuxième variante majeure de SSH met en oeuvre le protocole SSH2. Ce protocole a
été inventé de façon à éviter les problèmes de brevet avec RSA
(problèmes qui ne sont plus d'actualité depuis que le
brevet a expiré). Il corrige également le problème de contrôle d'intégrité CRC du protocole 1. En utilisant les algorithmes asymétriques <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=dsa">DSA</a> et
d65 3
a67 3
protocole 2 ne repose sur aucun brevet. Le problème du CRC est résolu en
utilisant un véritable algorithme <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=HMAC">HMAC</a>. 
d72 2
a73 2
Le code d'OpenSSH supportant les protocoles SSH 1.3 et 1.5
est sorti le 1er décembre 1999. 
d77 3
a79 2
s'appuie sur la bibliothèque non GPL <a
href="http://www.openssl.org">OpenSSL</a>. 
d81 13
a93 3

Juste après que nous avons fini notre mise en oeuvre du protocole SSH 1,
divers groupes non-OpenBSD se sont particulièrement intéressés à OpenSSH. Damien Miller, Philipp Hands et une poignée d'autres développeurs ont commencé à porter OpenSSH sur Linux et d'autres systèmes d'exploitation Unix. Depuis le début de nos efforts, nous avons bien senti que le code originel de SSH était trop compliqué et qu'il devait gérer trop de dépendances. Notre approche visant à écrire du code sûr et robuste ne nous a pas permis de gérer de telles différences. C'est la raison pour laquelle nous avons décider de séparer les efforts de développements centraux du développement de la portabilité pour rendre le processus de développement plus simple pour tous. Cela a très bien fonctionné pour nous. (Comparez le nombre de ligne de code entre la version de base et la version portable). 
d103 2
a104 2
<h2><font color="#e00000">Utilisez-vous encore des connexions "en
clair" ?</font></h2>
d115 1
a115 1
$Translation: goals.html,v 1.13 2005/01/31 10:48:08 saad Exp $<br>
@


1.13
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>Les buts du projet OpenSSH</title>
d19 1
a19 1
<h2><font color="#e00000">Buts du projet</font></h2>
d22 2
a23 3
Notre but est simple : étant donné que telnet et rlogin ne sont pas
sécurisés, tout système d'exploitation devrait fournir le support
du protocole SSH en standard. (voir le dessin ci-dessous). 
d30 2
a31 4
Le vieux protocole SSH1 est dérivé lui-même en deux sous-variantes  :
le protocole 1.3 et le protocole 1.5. Les deux sont supportés par
OpenSSH. Les deux nécessitent
l'utilisation de l'algorithme de cryptographie asymétrique <a
d33 1
a33 2
le brevet a expiré aux USA, permettant l'usage par tout le monde) pour la
négociation des clés et une courte liste d'algorithmes symétriques
d40 5
a44 5
 (il y en eu quelques autres comme RC4 mais ils avaient des problèmes de
 sécurité). Quelques mises en oeuvre de ssh1 ont aussi utilisé
 l'algorithme symétrique IDEA mais étant donné qu'il est breveté dans
 certains pays et que les deux autres algorithmes fournis sont
 suffisant, OpenSSH ne l'inclut pas.
d47 4
a50 7
Le protocole SSH 1 n'utilise qu'un simple CRC (Cyclic Redundancy
Check) pour vérifier l'intégrité des données, ce qui n'est pas
suffisant, une attaque par insertion est possible, cependant, vu le
nombre de rustines qui ont été appliquées sur les mises en oeuvre de SSH au
fur et à mesure des années, les attaques contre celui-ci sont très
difficiles àréaliser. Quand l'algorithme 3DES est utilisé, cette
attaque par insertion est difficilement possible (nous allons résoudre
d54 1
a54 1
La deuxième variante majeure de SSH est le protocole SSH2. Ce protocole a
d56 2
a57 4
(problème de brevet qui n'est plus d'actualité, étant donné que le
brevet a expiré) et corrige le problème de contrôle d'intégrité CRC
que l'on trouve dans le protocole 1, ainsi que pour d'autres
raisons techniques. En utilisant les algorithmes asymétriques <a
d60 1
a60 1
protocole 2 évite les brevets. Le problème du CRC est résolu en
d64 1
a64 1
symétriques ainsi que de nouvelles fonctionnalités
d67 2
a68 2
Le code d'OpenSSH incluant le support pour les protocoles SSH 1.3 et 1.5
est sorti le premier décembre 1999. 
d76 2
a77 13
Juste après que nous ayons fini notre mise en oeuvre du protocole SSH 1,
divers groupes non-OpenBSD se sont montrés particulièrement
intéressés. Damien Miller, Philipp Hands et une poignée d'autres ont
commencé à porter OpenSSH sur Linux et d'autres systèmes
d'exploitation Unix. Depuis le début de nos efforts, nous avons bien
senti que le code originel de SSH était trop compliqué, il devait
gérer trop de dépendances. Notre approche visant à écrire du code sur
et robuste ne nous a pas permis de gérer de telles différences. Donc
pour rendre le processus de développement plus simple pour tous, nous
avons décider de séparer les efforts de développements centraux du
développement de la portabilité. Cela a très bien fonctionné pour
nous. (Comparez juste le nombre de ligne de code entre la version de
base et la version portable). 
d87 1
a87 1
<h2><font color="#e00000">Êtes-vous toujours dans les connexions "en
d99 1
a99 1
$Translation: goals.html,v 1.12 2005/01/17 21:34:03 aanriot Exp $<br>
@


1.12
log
@Sync with Steelix CVS
@
text
@d117 1
d119 2
a120 1
$Translation: goals.html,v 1.11 2004/12/22 13:58:12 aanriot Exp $<br>
@


1.11
log
@Sync with Steelix CVS
@
text
@d16 2
a17 1
<img alt="[OpenSSH]" height=30 width=141 SRC="../images/smalltitle.gif">
d117 2
a118 2
Originally [OpenBSD: goals.html,v 1.18 ]<br>
$Translation: goals.html,v 1.10 2004/11/13 14:33:33 aanriot Exp $<br>
@


1.10
log
@Sync with Steelix CVS
@
text
@d22 2
a23 2
sécurisé, tout système d'exploitation se doit d'être fournit le
support pour le protocole SSH en standard. (voir le dessin ci-dessous). 
d26 1
a26 1
Le protocole SSH est disponible sous deux versions incompatibles :
d53 1
a53 1
nombre de rustines qui ont été mises sur les mises en oeuvre de SSH au
d102 1
a102 1
fut suffisamment correcte pour être utilisable.
d117 1
a117 1
$Translation: goals.html,v 1.9 2004/03/04 18:59:46 saad Exp $<br>
@


1.9
log
@Sync with Steelix CVS
@
text
@d14 1
a14 1
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
d116 2
a117 2
Originally [OpenBSD: goals.html,v 1.17 ]<br>
$Translation: goals.html,v 1.8 2004/01/25 23:08:31 saad Exp $<br>
@


1.8
log
@
sync by Saad Kadhi
@
text
@d11 1
a11 1
<meta name="copyright" content="This document copyright 1999-2002 by OpenBSD.">
d116 2
a117 2
Originally [OpenBSD: goals.html,v 1.16 ]<br>
$Translation: goals.html,v 1.7 2002/11/08 06:11:50 saad Exp $<br>
@


1.7
log
@
sync with badlands translation CVS
@
text
@d1 1
a1 1
<!DOCTYPE HTML PUBLIC  "-//IETF//DTD HTML Strict//EN">
d5 1
a5 1
<link rev=made href=mailto:www@@openbsd.org>
d7 1
d18 2
a19 1
<h2><font color=#e00000>Buts du projet</font><hr></h2>
d106 1
a106 1
<h2><font color=#e00000>Êtes-vous toujours dans les connexions "en
d109 1
a109 1
<img width=500 height=500 src=../images/shherrif.jpg>
d112 2
a113 2
<a href=index.html><img height=24 width=24 src=../back.gif border=0 alt=OpenSSH></a>
<a href=mailto:www@@openbsd.org>www@@openbsd.org</a>
d115 3
a117 2
<small>Originally [OpenBSD: goals.html,v 1.14 2002/01/20 11:19:06 jufi Exp ]<br>
$Translation: goals.html,v 1.6 2002/02/13 22:46:53 jbm Exp $<br>
@


1.6
log
@
Updated by Jean-Jacques Bernard
@
text
@d10 1
a10 1
<meta name="copyright" content="This document copyright 1999 by OpenBSD.">
d113 2
a114 2
<small>Originally [OpenBSD: goals.html,v 1.13 2001/02/27 17:35:50 stevesk Exp ]<br>
$Translation: goals.html,v 1.5 2001/05/25 13:05:22 jjbg Exp $<br>
@


1.5
log
@
Sync with translation CVS, work by jjbg
@
text
@d21 1
a21 1
support pour le protocole ssh en standard. (voir le dessin ci-dessous). 
d51 5
a55 4
nombre de rustines qui ont été mises sur ssh au fur et à mesure des
années, les attaques contre celui-ci sont très difficiles à
réaliser. Quand l'algorithme 3DES est utilisé, cette attaque par
insertion est difficilement possible (nous allons résoudre ça bientôt).
d87 1
a87 1
senti que le code originel de ssh était trop compliqué, il devait
d113 2
a114 2
<small>Originally [OpenBSD: goals.html,v 1.12 2001/02/19 17:17:30 jufi Exp ]<br>
$Translation: goals.html,v 1.4 2001/02/27 16:16:33 jjbg Exp $<br>
@


1.4
log
@
Sync with translation CVS. OpenSSH 2.5.1, work by jjbg.
@
text
@d112 2
a113 2
<small>Originally [OpenBSD: goals.html,v 1.10 2001/02/06 13:11:26 deraadt Exp ]<br>
$Translation: goals.html,v 1.3 2001/02/19 15:02:54 jjbg Exp $<br>
@


1.3
log
@We are now in a new year. Crank copyright accordingly. ok markus@@
@
text
@d10 1
a10 1
<meta name="copyright" content="This document copyright 1999-2001 by OpenBSD.">
d20 2
a21 2
sécurisé, tout système d'exploitation se doit d'être fournit avec ssh
en standard. (voir le dessin ci-dessous). 
d24 7
a30 3
SSH est fournit en deux variantes. Le vieux protocole 1 existe en deux
variantes majeures : le protocole 1.3 et le protocole 1.5. Les deux
sont supportés par OpenSSH. De plus, les deux nécessitent
d41 1
a41 1
 (il y en eu quelques autres mais ils avaient des problèmes de
d54 1
a54 1
insertion n'est pas possible.
d57 1
a57 1
L'autre variante de SSH est le protocole en version 2. Ce protocole a
d60 3
a62 3
brevet a expiré) et
corrige le problème de contrôle d'intégrité CRC que l'on trouve dans
le protocole 1. En utilisant les algorithmes asymétriques <a
d68 2
d72 1
a72 1
Le code d'OpenSSH incluant le support pour les protocoles 1.3 et 1.5
d81 1
a81 1
Juste après que nous ayons fini notre mise en oeuvre du protocole 1,
d96 4
a99 9
Depuis, les membres du projet OpenBSD qui travaille sur OpenSSH ont
poussé le support du développement du protocole 2. Depuis le 4 mai
2000, le protocole 2 est totalement supporté.
<p>

Donc, depuis le 4 Mai 2000, OpenSSH fourni le support du protocole
2. Mais étant donné que les clients et serveurs utilisant le protocole
1 sont plus populaires sur l'Internet, nous continuons de supporter le
protocole 1.
d112 3
a114 3
<small>Originally [OpenBSD: goals.html,v 1.9 2000/09/25 20:07:41 deraadt Exp ]<br>
$Translation: goals.html,v 1.2 2000/12/12 10:51:38 jjbg Exp $<br>
$OpenBSD: goals.html,v 1.2 2000/12/12 18:28:05 jufi Exp $
@


1.2
log
@
more updates by jjbg.
@
text
@d10 1
a10 1
<meta name="copyright" content="This document copyright 1999 by OpenBSD.">
d113 1
a113 1
$OpenBSD$
@


1.1
log
@
Sync with Badlands Translation CVS. Work by jjbg.
@
text
@d28 4
a31 3
href="http://www.openbsd.org/cgi-bin/man.cgi?query=rsa">RSA</a> (qui
est breveté aux États-Unis) pour la négociation des clés et une courte
liste d'algorithmes symétriques pour le chiffrement proprement dit :
d54 3
a56 1
été inventé de façon à éviter les problèmes de brevet avec RSA et
a65 11
Le 21 septembre 2000, le brevet RSA va <a
  href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&sektion=8">expirer</a>
  aux USA.

Dans le même temps, les personnes à l'extérieur des USA sont déjà
autorisées à utiliser le brevet RSA dans leur logiciel. Ce qui fait
que nous avons une large base de testeurs pour inclure cette
cryptographie à clés publiques dans notre système d'exploitation.

<p>

d111 2
a112 3
<small>Originally [OpenBSD: goals.html,v 1.8 2000/05/06 22:11:01 louis
Exp ]<br>
$Translation: goals.html,v 1.1 2000/07/25 19:16:58 jjbg Exp $<br>
@

