head	1.80;
access;
symbols;
locks; strict;
comment	@# @;


1.80
date	2014.04.01.19.44.54;	author deraadt;	state dead;
branches;
next	1.79;

1.79
date	2012.04.21.22.25.29;	author ajacoutot;	state Exp;
branches;
next	1.78;

1.78
date	2012.04.19.23.56.51;	author ajacoutot;	state Exp;
branches;
next	1.77;

1.77
date	2012.01.31.23.04.08;	author ajacoutot;	state Exp;
branches;
next	1.76;

1.76
date	2011.12.22.17.47.58;	author ajacoutot;	state Exp;
branches;
next	1.75;

1.75
date	2010.06.12.19.51.10;	author ajacoutot;	state Exp;
branches;
next	1.74;

1.74
date	2010.02.24.07.21.25;	author ajacoutot;	state Exp;
branches;
next	1.73;

1.73
date	2009.04.26.15.44.21;	author tobias;	state Exp;
branches;
next	1.72;

1.72
date	2008.07.13.18.21.56;	author tobias;	state Exp;
branches;
next	1.71;

1.71
date	2008.03.09.13.37.14;	author tobias;	state Exp;
branches;
next	1.70;

1.70
date	2008.01.06.13.57.19;	author tobias;	state Exp;
branches;
next	1.69;

1.69
date	2007.11.12.20.28.25;	author saad;	state Exp;
branches;
next	1.68;

1.68
date	2007.06.23.18.29.30;	author jufi;	state Exp;
branches;
next	1.67;

1.67
date	2007.02.10.05.22.16;	author saad;	state Exp;
branches;
next	1.66;

1.66
date	2006.08.08.07.14.20;	author saad;	state Exp;
branches;
next	1.65;

1.65
date	2006.04.25.16.49.43;	author jufi;	state Exp;
branches;
next	1.64;

1.64
date	2006.04.20.07.34.05;	author saad;	state Exp;
branches;
next	1.63;

1.63
date	2006.01.20.20.05.20;	author jufi;	state Exp;
branches;
next	1.62;

1.62
date	2006.01.14.11.36.01;	author jufi;	state Exp;
branches;
next	1.61;

1.61
date	2005.12.10.12.51.38;	author jufi;	state Exp;
branches;
next	1.60;

1.60
date	2005.09.28.19.46.30;	author saad;	state Exp;
branches;
next	1.59;

1.59
date	2005.09.20.07.30.02;	author saad;	state Exp;
branches;
next	1.58;

1.58
date	2005.09.01.16.30.41;	author saad;	state Exp;
branches;
next	1.57;

1.57
date	2005.05.20.17.13.26;	author jufi;	state Exp;
branches;
next	1.56;

1.56
date	2005.05.19.18.23.08;	author jufi;	state Exp;
branches;
next	1.55;

1.55
date	2005.05.15.21.17.51;	author saad;	state Exp;
branches;
next	1.54;

1.54
date	2005.04.23.07.03.37;	author jufi;	state Exp;
branches;
next	1.53;

1.53
date	2005.02.27.12.04.44;	author jufi;	state Exp;
branches;
next	1.52;

1.52
date	2005.01.28.09.01.56;	author saad;	state Exp;
branches;
next	1.51;

1.51
date	2005.01.18.17.17.23;	author jufi;	state Exp;
branches;
next	1.50;

1.50
date	2004.12.22.20.00.13;	author jufi;	state Exp;
branches;
next	1.49;

1.49
date	2004.12.15.19.33.31;	author jufi;	state Exp;
branches;
next	1.48;

1.48
date	2004.11.04.17.17.46;	author jufi;	state Exp;
branches;
next	1.47;

1.47
date	2004.10.09.18.48.02;	author jufi;	state Exp;
branches;
next	1.46;

1.46
date	2004.10.03.20.04.07;	author jufi;	state Exp;
branches;
next	1.45;

1.45
date	2004.09.23.14.19.34;	author jufi;	state Exp;
branches;
next	1.44;

1.44
date	2004.08.24.12.17.45;	author jufi;	state Exp;
branches;
next	1.43;

1.43
date	2004.03.01.10.04.41;	author jufi;	state Exp;
branches;
next	1.42;

1.42
date	2004.02.15.23.08.25;	author jufi;	state Exp;
branches;
next	1.41;

1.41
date	2003.11.05.14.00.05;	author jufi;	state Exp;
branches;
next	1.40;

1.40
date	2003.03.01.20.09.06;	author jufi;	state Exp;
branches;
next	1.39;

1.39
date	2003.01.17.13.02.59;	author jufi;	state Exp;
branches;
next	1.38;

1.38
date	2002.10.31.22.47.26;	author jufi;	state Exp;
branches;
next	1.37;

1.37
date	2002.08.06.21.08.46;	author jufi;	state Exp;
branches;
next	1.36;

1.36
date	2002.06.24.20.53.34;	author jufi;	state Exp;
branches;
next	1.35;

1.35
date	2002.05.20.12.31.27;	author jufi;	state Exp;
branches;
next	1.34;

1.34
date	2002.05.19.20.39.30;	author jufi;	state Exp;
branches;
next	1.33;

1.33
date	2002.05.01.10.48.25;	author jufi;	state Exp;
branches;
next	1.32;

1.32
date	2002.04.13.20.50.00;	author jufi;	state Exp;
branches;
next	1.31;

1.31
date	2002.01.20.11.44.39;	author jufi;	state Exp;
branches;
next	1.30;

1.30
date	2001.12.29.19.46.11;	author jufi;	state Exp;
branches;
next	1.29;

1.29
date	2001.11.16.08.02.03;	author jufi;	state Exp;
branches;
next	1.28;

1.28
date	2001.10.30.07.49.41;	author jufi;	state Exp;
branches;
next	1.27;

1.27
date	2001.09.10.20.02.55;	author jufi;	state Exp;
branches;
next	1.26;

1.26
date	2001.07.15.20.29.10;	author jufi;	state Exp;
branches;
next	1.25;

1.25
date	2001.06.10.17.06.07;	author jufi;	state Exp;
branches;
next	1.24;

1.24
date	2001.06.07.06.53.50;	author jufi;	state Exp;
branches;
next	1.23;

1.23
date	2001.05.24.10.46.14;	author jufi;	state Exp;
branches;
next	1.22;

1.22
date	2001.05.06.16.50.40;	author jufi;	state Exp;
branches;
next	1.21;

1.21
date	2001.03.22.21.08.05;	author jufi;	state Exp;
branches;
next	1.20;

1.20
date	2001.03.01.22.38.29;	author jufi;	state Exp;
branches;
next	1.19;

1.19
date	2001.02.01.15.53.59;	author todd;	state Exp;
branches;
next	1.18;

1.18
date	2000.12.26.19.53.39;	author jufi;	state Exp;
branches;
next	1.17;

1.17
date	2000.12.14.20.21.20;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2000.11.30.15.45.20;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2000.11.17.09.10.55;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2000.10.21.18.25.22;	author jufi;	state Exp;
branches;
next	1.13;

1.13
date	2000.10.11.20.17.52;	author jufi;	state Exp;
branches;
next	1.12;

1.12
date	2000.09.26.19.14.36;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2000.09.01.23.09.36;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.04.09.41.55;	author jufi;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.01.13.32.23;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.31.17.44.49;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.30.10.12.16;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.23.21.46.30;	author jufi;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.22.17.29.22;	author jufi;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.30.19.01.54;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.11.15.23.21;	author jufi;	state Exp;
branches;
next	1.2;

1.2
date	2000.06.02.20.03.36;	author wvdputte;	state Exp;
branches;
next	1.1;

1.1
date	2000.05.10.10.09.21;	author wvdputte;	state Exp;
branches;
next	;


desc
@@


1.80
log
@give up on translation
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Häufig gestellte Fragen zu OpenSSH</title>
<link rev= "made" href= "mailto:www@@openbsd.org">
<meta name= "resource-type" content= "document">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name= "description"   content= "the OpenSSH FAQ page">
<meta name= "keywords"      content= "OpenSSH,SSH,Secure Shell,faq">
<meta name= "distribution"  content= "global">
<meta name= "copyright"     content= "This document copyright 1999-2010 OpenBSD.">
</head>

<body bgcolor= "#ffffff" text= "#000000" link= "#23238E">
<a href="index.html"><img alt="[OpenSSH]" height="30" width="141" src="../images/smalltitle.gif" border="0"></a>
<p>

<h1>OpenSSH-FAQ (Häufig gestellte Fragen)</h1>

<hr>

<blockquote>
<h3><a href= "#1.0">1.0 - Was ist OpenSSH und wo kann ich sie
    bekommen?</a></h3>
<ul>
<li><a href= "#1.1">1.1 - Was ist OpenSSH und wo kann ich sie
    herunterladen?</a>
<li><a href= "#1.2">1.2 - Warum sollte sie eingesetzt werden?</a>
<li><a href= "#1.3">1.3 - Welche Betriebssysteme werden unterstützt?</a>
<li><a href= "#1.4">1.4 - Was ist mit Copyrights, Benutzung und
    Patenten?</a>
<li><a href= "#1.5">1.5 - Wo sollte ich um Hilfe fragen?</a>
<li><a href= "#1.6">1.6 - Ich habe einen Fehler gefunden. Wo melde ich
    ihn?</a>
</ul>

<h3><a href= "#2.0">2.0 - Allgemeine Fragen</a></h3>
<ul>
<li><a href= "#2.1">2.1 - Warum benutzt ssh/scp Verbindungen auf den unteren Ports? Meine Firewall blockiert diese.</a>
<li><a href= "#2.2">2.2 - Warum ist der ssh-Client setuid root?</a>
<li><a href= "#2.3">2.3 - Warum hat SSH 2.3 Probleme beim Interoperieren mit OpenSSH 2.1.1?</a>
<li><a href= "#2.4">2.4 - Warum gibt OpenSSH Folgendes aus: Dispatch protocol error: type 20</a>
<li><a href= "#2.5">2.5 - Alte Versionen des kommerziellen SSH verschlüsseln Hostkeys mit IDEA.</a>
<li><a href= "#2.6">2.6 - Was sind das für Warnmeldungen über Schlüssellängen?</a>
<li><a href= "#2.7">2.7 - X11- und/oder Agent-Weiterleitung funktioniert nicht.</a>
<li><a href= "#2.8">2.8 - Nach dem Upgrade auf OpenSSH habe ich keine SSH2-Unterstützung mehr.</a>
<li><a href= "#2.9">2.9 - sftp/scp kann keine Verbindung aufbauen, obwohl ssh funktioniert.</a>
<li><a href= "#2.10">2.10 - Werdet ihr [foo] zu scp hinzufügen?</a>
<li><a href= "#2.11">2.11 - Wie verwende ich Portweiterleitung?</a>
<li><a href= "#2.12">2.12 - Meine ssh-Verbindung friert ein oder steigt nach N Minuten Inaktivität aus.</a>
<li><a href= "#2.13">2.13 - Wie rufe ich scp auf, um eine Datei zu kopieren, die einen Doppelpunkt beinhaltet?</a>
<li><a href= "#2.14">2.14 - Warum teilt OpenSSH seine Version den Clients mit?</a>
</ul>

<h3><a href= "#3.0">3.0 - Fragen zum portablen OpenSSH</a></h3>
<ul>
<li><a href= "#3.1">3.1 - Unechte PAM-Authentifikationsmeldungen in den Logdateien.</a>
<li><a href= "#3.2">3.2 - Leere Passwörter sind bei der PAM-Authentifikation nicht erlaubt.</a>
<li><a href= "#3.3">3.3 - ssh(1) benötigt sehr lange zum Verbinden oder zum Einloggen</a>
<li><a href= "#3.4">3.4 - »Can't locate module net-pf-10«-Meldungen im Log unter Linux.</a>
<li><a href= "#3.5">3.5 - Passwortauthentifikation funktioniert nicht (z.&nbsp;B. unter Slackware 7.0 oder Red Hat 6.x)</a>
<li><a href= "#3.6">3.6 - Configure oder sshd(8) beschweren sich über fehlende RSA-Unterstützung</a>
<li><a href= "#3.7">3.7 - »scp: command not found«-Fehler</a>
<li><a href= "#3.8">3.8 - Kann die Passphrase nicht lesen</a>
<li><a href= "#3.9">3.9 - configure fehlt oder make versagt</a>
<li><a href= "#3.10">3.10 - Hängt beim Verlassen von ssh</a>
<li><a href= "#3.11">3.11 - Wieso hängt ssh beim Beenden?</a>
<li><a href= "#3.12">3.12 - Ich habe ein Upgrade auf OpenSSH 3.1 durchgeführt und dann ging die X11-Weiterleitung nicht mehr.</a>
<li><a href= "#3.13">3.13 - Ich habe ein Upgrade auf OpenSSH 3.8 durchgeführt und dann gingen einige X11-Programme nicht mehr.</a>
<li><a href= "#3.14">3.14 - Ich habe meinen öffentlichen Schlüssel in authorized_keys kopiert, aber Publickey-Authentifizierung funktioniert immer noch nicht.</a>
<li><a href= "#3.15">3.15 - OpenSSH-Versionen und das Verhalten von PAM.</a>
<li><a href= "#3.16">3.16 - Warum zeigen weder »w« noch »who« unter AIX 5.x Benutzer an, die über ssh eingeloggt sind?</a>
</ul>

</blockquote>

<hr>

<h2><u><a name= "1.0">1.0 - Was ist OpenSSH und wo kann ich sie bekommen?</a></u></h2>

<h2><a name= "1.1">1.1 - Was ist OpenSSH und wo kann ich sie herunterladen?</a></h2>

OpenSSH bietet verschlüsselten Endpunkt-zu-Endpunkt-Ersatz für Anwendungen wie
zum Beispiel telnet, rlogin und ftp.
Im Gegensatz zu diesen überkommenen Anwendungen, übergibt OpenSSH niemals
irgend etwas (einschließlich Benutzername und Passwort) in unverschlüsselter
Form an den Draht, und bietet Hostauthentifizierung, um zu überprüfen, ob man
wirklich mit dem System spricht, mit dem man zu sprechen glaubt, und um zu
verhindern, das jemand anderes die Sitzung übernehmen kann.

<p>
Die OpenSSH-Suite beinhaltet das
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>-Programm,
das rlogin und telnet ersetzt, und
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a>,
das <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a>
und <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a>
ersetzt. OpenSSH beinhaltet auch
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> und
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a>,
die eine einfache Lösung für Dateiübertragungen realisieren.
Sie basieren auf dem
<a href="../txt/draft-ietf-secsh-filexfer-02.txt">secsh-filexfer</a>-IETF-Entwurf.


<p><strong>OpenSSH besteht aus mehreren Programmen.</strong>

<ul>
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> - Serverprogramm, das auf der Servermaschine läuft. Es lauscht, ob es Verbindungswünsche von Clientmaschinen gibt und führt dann eine Authentifikation durch, bevor es den Client bedient.
Das Verhalten wird von der Konfigurationsdatei <i><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5">
sshd_config(5)</a></i> verwaltet.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> - Dies ist das Clientprogramm, das benutzt wird, um sich auf einer anderen Maschine einzuloggen oder dort Kommandos auszuführen. <i>slogin</i> ist ein weiterer Name für dieses Programm.
Das Verhalten wird von der systemweiten Konfigurationsdatei <i><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh_config&amp;sektion=5">
ssh_config(5)</a></i> und den benutzerspezifischen
<i>$HOME/.ssh/config</i>-Dateien verwaltet.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> - Kopiert Dateien sicher von einer Maschine zur anderen.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> - Wird benutzt, um ,Pubkey'-Authentifikations-Schlüssel (RSA oder DSA) zu erzeugen (Hostschlüssel und Benutzer-Authentifikationsschlüssel).
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-agent&amp;sektion=1">ssh-agent(1)</a> - Authentifikationsagent.  Er kann benutzt werden, um RSA-Schlüssel für die Authentifikation bereitzuhalten.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&amp;sektion=1">ssh-add(1)</a> - Wird benutzt, um neue Schlüssel beim Agenten zu registrieren.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> - SFTP-Server-Subsystem.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> - Sicheres Dateiübertragungsprogramm.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keyscan&amp;sektion=1">ssh-keyscan(1)</a> - Sammelt ssh-Publickeys ein.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign&amp;sektion=8">ssh-keysign(8)</a> - ssh Hilfsprogramm für hostbasierte Authentifikation.
</ul>

<h3>Herunterladen</h3>

<p>
Die neueste Version von OpenSSH ist Teil der aktuellen Ausgabe von
<a href="http://www.openbsd.org/">OpenBSD</a>, und wird stets zusammen mit der
Basisinstallation installiert.

<p>
Heutzutage beinhalten die meisten anderen Betriebssysteme eine Version von
OpenSSH (oft umetikettiert oder »geheim« gekennzeichnet), sodass die meisten
Benutzer es unmittelbar benutzen können.
Wie auch immer, manchmal sind die enthaltenen Versionen ziemlich alt, und
lassen Merkmale vermissen, die die aktuelle Veröffentlichung von OpenSSH hat,
sodass man gerne die aktuelle Version installieren möchte, oder man möchte sie
auf einem der wenigen Betriebssysteme installieren, auf denen sie fehlt,
und für die der Herausgeber des Betriebssystems keine moderne Version verfügbar
macht.
Vielleicht möchte man auch OpenSSH auch für eine eingebettete Anwendung nutzen.

<p>
Nicht-OpenBSD-Nutzer werden die <a href="portable.html">portable</a>
Distribution von einem <a href="portable.html#mirrors">Spiegelserver</a> in
ihrer Nähe herunterladen, und dann kompilieren und installieren wollen.

<h2><a name= "1.2">1.2 - Warum sollte sie eingesetzt werden?</a></h2>

<p>
OpenSSH ist eine Sammlung von Werkzeugen, die dir hilft, deine
Netzwerkverbindungen sicherer zu machen. Hier ist eine Liste der
Funktionalitäten:


<ul>
	<li>Starke Authentifikation.  Schließt verschiedene Sicherheitslöcher (z.&nbsp;B. IP-, ,routing'-, und DNS-,spoofing').
	<li>Verbesserte Privatsphäre.  Alle Verbindungen werden automatisch und transparent verschlüsselt.
	<li>Sichere X11-Sitzungen.  Das Programm setzt DISPLAY auf der Servermaschine automatisch und leitet alle X11-Verbindungen über den sicheren Kanal weiter.
	<li>Willkürliche TCP/IP-Ports können durch den verschlüsselten Kanal in beide Richtungen gelenkt werden (z.&nbsp;B. für e-cash-Transaktionen).
	<li>Für normale Benutzer wird keine Schulung und kein Training benötigt.
	<li>Vertraut nie dem Netzwerk. Minimales Vertrauen auf der Gegenseite der Verbindung. Minimales Vertrauen gegenüber den Domain Name Servern. Pure RSA-Authentifikation vertraut nichts und niemandem, bis auf den ,private key'.
	<li>Der Client authentifiziert die Servermaschine am Beginn jeder Verbindung mit RSA, um ,trojanischen Pferden' (durch ,routing'- oder DNS-,spoofing') und ,man-in-the-middle'-Angriffen vorzubeugen, und der Server tut das Gleiche mit der Clientmaschine bevor er <i>.rhosts</i>- oder <i>/etc/hosts.equiv</i>-Authentifikation erlaubt (um DNS-, ,routing'- oder IP-,spoofing' vorzubeugen).
	<li>Die ,host authentication key'-Distribution kann zentral laufen, wird jedoch automatisch, sobald die erste Verbindung zur Maschine geöffnet wird.
	<li>Jeder Benutzer kann beliebig viele RSA-Authentifikationsschlüssel zur eigenen Verwendung erzeugen.
	<li>Das Serverprogramm hat seinen eigenen RSA-Schlüssel, der jede Stunde automatisch neu erzeugt wird.
	<li>Ein Authentifikationsagent, der auf dem Laptop oder der Workstation des Benutzers läuft, kann benutzt werden, um die RSA-Authentifikationsschlüssel des Anwenders zu halten.
	<li>Die Software kann auch ohne root-Privilegien installiert und benutzt werden (mit eingeschränkter Funktionalität).
	<li>Der Client ist in systemweiten und benutzerspezifischen Konfigurationsdateien anpassbar.
	<li>Optionale Kompression aller Daten mittels gzip (inklusive ,forwarded X11'- und TCP/IP-Daten), was zu bedeutenden Beschleunigungen auf langsamen Verbindungen führen kann.
	<li>Kompletter Ersatz für rlogin, rsh und rcp.
</ul>

<p>
Zurzeit werden fast alle Übertragungen in Computernetzwerken
unverschlüsselt durchgeführt. Als Konsequenz kann jeder, der
Zugriff auf irgendeine Maschine in diesem Netzwerk hat, alle Verbindungen
abhören. Das wird auch von Hackern, neugierigen Administratoren,
Arbeitgebern, Kriminellen, Industriespionen und Regierungen so
durchgeführt.
Einige Netzwerke senden derartig viel elektromagnetische Strahlung ab,
dass Daten sogar in großer Entfernung noch aufgefangen werden
können.


<p>
Wenn du dich einloggst, wird dein Passwort im Klartext übertragen.
Daher kann dann jeder Lauscher deinen Account zu jeglicher Tat benutzen.
Es gibt weltweit viele Zeugnisse dafür, dass Cracker auf dem Rechner
eines Opfers unbemerkt ein Programm gestartet haben, welches ohne Wissen des
Anwenders einfach nur das Netzwerk belauscht und Passwörter gesammelt
hat. Programme, die das tun, gibt es im Internet oder können von einem
kompetenten Programmierer innerhalb weniger Stunden selbst geschrieben
werden.


<p>
Firmen haben Geschäftsgeheimnisse, Patentanträge in Vorbereitung,
Preisinformationen, Informationen über Vertragspartner, Kundendaten,
Personendaten, Finanzdaten etc. Zurzeit kann jeder mit Zugriff auf das
Netzwerk (jede Maschine im Netzwerk) alles belauschen, was im Netzwerk
vor sich geht, und das noch ohne die normalen Zugriffsbeschränkungen.


<p>
Vielen Firmen ist nicht bewusst, dass Informationen so einfach aus ihrem
Netzwerk gesammelt werden können. Sie vertrauen darin, dass ihre
Daten sicher sind, da niemand wissen kann, dass dort vertrauliche
Informationen kursieren, oder auch, weil dort so viele andere Daten
übertragen werden. Dies ist keine sichere Einstellung.


<h2><a name= "1.3">1.3 - Welche Betriebssysteme werden unterstützt?</a></h2>

<p>
Obwohl OpenSSH unter <a href="http://www.openbsd.org/">OpenBSD</a> entwickelt
wird, gibt es eine breite Palette an Portierungen auf andere Betriebssysteme.
Die portable Version von OpenSSH wird von
<a href="mailto:djm@@openbsd.org">Damien Miller</a> geleitet. Einen
schnellen Überblick über die portable Version von OpenSSH gibt
dir <a href="portable.html">http://www.openssh.com/portable.html</a>.
Betriebssysteme, die zurzeit unterstützt werden, sind:


<ul>
	<li>OpenBSD
	<li>NetBSD
	<li>FreeBSD
	<li>AIX
	<li>HP-UX
	<li>IRIX
	<li>Linux
	<li>NeXT
	<li>SCO
	<li>SNI/Reliant Unix
	<li>Solaris
	<li>Digital Unix/Tru64/OSF
	<li>Mac OS X
	<li>Cygwin
</ul>

<p>
Eine Liste der Anbieter, die OpenSSH in ihre Distributionen einbinden,
befindet sich auf der <a href="users.html">OpenSSH-Benutzerseite</a>.

<h2><a name= "1.4">1.4 - Was ist mit Copyrights, Benutzung und Patenten?</a></h2>
<p>
Die OpenSSH Entwickler haben sehr hart versucht, OpenSSH frei
von Patent- oder Copyrightproblemen zu halten. Dazu mussten einige
Optionen aus OpenSSH entfernt werden. Nämlich die Unterstützung
für patentierte Algorithmen.

<p>
OpenSSH unterstützt keinerlei patentierte Transportalgorithmen.
Im SSH1-Modus sind nur 3DES und Blowfish möglich.
Im SSH2-Modus können nur 3DES, Blowfish, CAST128, Arcfour und AES
ausgewählt werden. Der patentierte IDEA-Algorithmus wird nicht
unterstützt.

<p>
OpenSSH bietet Unterstützung für sowohl das SSH1- als auch das
SSH2-Protokoll.

<p>
Seit das RSA-Patent ausgelaufen ist, gibt es keinerlei Beschränkungen
mehr für Software, die den RSA-Algorithmus benutzen, inklusive OpenBSD.

<h2><a name= "1.5">1.5 - Wo sollte ich um Hilfe fragen?</a></h2>
<p>
Es gibt mehrere Stellen, die du um Hilfe bitten kannst. Zusätzlich
zur <a href="index.html">OpenSSH-Webseite</a> gibt es
mehrere Mailinglisten, in denen du dein Glück versuchen kannst.
Bevor du das tust, durchsuche bitte alle Mailinglisten-Archive um
zu sehen, ob deine Frage vielleicht schon beantwortet wurde. Die
OpenSSH-Mailingliste wurde archiviert und steht in durchsuchbarer Form unter
<a href="http://marc.info/?l=openssh-unix-dev&amp;r=1&amp;w=2">marc.info</a>.
zur Verfügung.

<p>
Mehr Informationen über das Abonnieren von OpenSSH-bezogenen
Mailinglisten gibt es unter
<a href="list.html">OpenSSH-Mailinglisten</a>.

<h2><a name= "1.6">1.6 - Ich habe einen Fehler gefunden. Wo melde ich
    ihn?</a></h2>
<p>
Informationen zum Senden von Fehlermeldungen können auf der OpenSSH
<a href="report.html">,Fehler melden'</a>-Seite gefunden werden.
<p>
Wenn du eine Sicherheitslücke melden möchtest, kontaktiere bitte die
private Liste »<a href="mailto:openssh@@openssh.com"
>openssh@@openssh.com</a>«.

<h2><u><a name= "2.0">2.0 - Allgemeine Fragen</a></u></h2>

<h2><a name= "2.1">2.1 - Warum benutzt ssh/scp Verbindungen auf den unteren Ports?</a></h2>
<p>
Der OpenSSH-Client benutzt die unteren Ports für rhosts- und
rhosts-rsa-Authentifikation, da der Server dem Benutzernamen vertrauen muss,
den der Client liefert. Um das zu umgehen, kannst du das Beispiel weiter unten
in deine <i>ssh_config</i>- oder <i>~/.ssh/config</i>-Datei kopieren.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>UsePrivilegedPort no</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
Oder du kannst diese Option auf der Kommandozeile angeben, indem du die
Option <b>-o</b> des
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>-Kommandos
benutzt.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>ssh -o "UsePrivilegedPort no" host.com</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.2">2.2 - Warum ist der ssh-Client setuid root?</a></h2>

<p>
In Verbindung mit der vorhergehenden Frage (<a href="#2.1">2.1</a>)
braucht OpenSSH root-Autorität, um sich an die unteren und privilegierten
Ports binden zu können, um dann eine <i>rhosts-Authentifikation</i>
durchzuführen. Genauso notwendig ist dieser privilegierte Port
für rhosts-rsa-Authentifikation zu älteren SSH-Versionen.

<p>
Zusätzlich gilt sowohl für <i>rhosts-rsa-Authentifikation</i>
(in Protokollversion 1) als auch für <i>hostbasierte Authentifikation</i>
(in Protokollversion 2), dass der ssh-Client Zugang zum
,<i>private host key</i>' braucht, um die Clientmaschine am Server
anzumelden.
OpenSSH-Versionen vor 3.3 benötigten ein gesetztes setuid-Bit für die
Binärdatei von <code>ssh</code>, um das zu erreichen, aber du kannst das Bit
löschen, wenn du diese Authentifizierungsmethoden nicht
benutzen willst.

<p>
Beginnend mit OpenSSH 3.3 ist <code>ssh</code> standardmäßig nicht
setuid. <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign">ssh-keysign</a>
wird benutzt, um die privaten Hostschlüssel auszulesen, und ssh benutzt
standardmäßig keine privilegierten Quellports. Wenn du
doch einen benutzen willst, musst du das setuid-Bit von <code>ssh</code>
per Hand setzen.

<h2><a name= "2.3">2.3 - Warum hat SSH 2.3 Probleme beim Interoperieren mit OpenSSH 2.1.1?</a></h2>

<p>
SSH 2.3 und frühere Versionen haben einen Fehler in ihrer
HMAC-Implementation. Ihr Code hat nicht die komplette Ausgabe des Datenblocks
von der Auswahl bereitgestellt, sondern stattdessen eben nur 128 Bits.
Bei längeren Anfragen konnte dann SSH 2.3 eben nicht mit OpenSSH
zusammenarbeiten.

<p>
OpenSSH 2.2.0 erkennt, dass SSH 2.3 diesen Fehler hat. In
zukünftigen Versionen von SSH wird dieser Fehler behoben sein.
Alternativ kannst du das folgende in deine <i>/etc/sshd2_config</i> von
SSH 2.3 einfügen.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>Mac hmac-md5</b>
               </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.4">2.4 - Warum gibt OpenSSH Folgendes aus: Dispatch protocol error: type 20</a></h2>

<p>
Probleme bei der Zusammenarbeit treten auf, weil ältere Versionen
von OpenSSH noch keine Unterstützung für ,session rekeying' hatten.
Das kommerzielle SSH 2.3 versucht diese Funktionalität abzulehnen, und es kann
zum Einfrieren der Verbindung kommen, oder die Fehlermeldung
,<b>Dispatch protocol error: type 20 </b>' kann zu lesen sein.
Das Problem wird entweder durch ein Upgrade auf eine aktuelle
OpenSSH-Version oder Abschalten des ,rekeying' durch Hinzufügen des
folgenden in die <i>ssh2_config</i> oder <i>sshd2_config</i> vom
kommerziellen SSH 2.3 behoben.


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>RekeyIntervalSeconds 0</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.5">2.5 - Alte Versionen des kommerziellen SSH verschlüsseln Hostkeys mit IDEA.</a></h2>

<p>
Die alten Versionen von SSH haben einen patentierten Algorithmus benutzt,
um ihren <i>/etc/ssh/ssh_host_key</i> zu verschlüsseln. Das Problem
manifestiert sich darin, dass der
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a>
seinen Hostschlüssel nicht lesen kann. Um das Problem zu lösen, benutze
das Kommando weiter unten, um deinen ssh_host_key zu 3DES zu konvertieren.
<b>HINWEIS:</b> Benutze das
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a>-Programm
von dem kommerziellen SSH-Produkt und *NICHT* OpenSSH für
das Beispiel weiter unten.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
# <b>ssh-keygen -u -f /etc/ssh/ssh_host_key</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.6">2.6 - Was sind das für Warnungen über Schlüssellängen?</a></h2>

<p>
Das
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a>
des kommerziellen SSH-Programms hat einen Fehler beinhaltet, der dazu
führte, dass es von Zeit zu Zeit ,Pubkey'-Authentifikationsschlüssel (RSA oder
DSA) generiert hat, deren ,Most Significant'-Bit (MSB) nicht
gesetzt war. Solche Schlüssel wurden zwar als ,mit voller Länge'
angekündigt, waren aber die Hälfte der Zeit über kleiner als angekündigt.

<p>
OpenSSH wird Warnungen ausgeben, wenn es solchen Schlüsseln begegnet.
Um diese Warnungen loszuwerden, passe deine <i>known_hosts</i>-Datei an und
ersetze die falsche Schlüssellänge (normalerweise ,1024') mit
der richtigen (normalerweise ,1023').

<h2><a name= "2.7">2.7 - X11- und/oder Agent-Weiterleitung funktioniert nicht.</a></h2>

<p>
Prüfe deine <i>ssh_config</i> und <i>sshd_config</i>. Die
voreingestellten Konfigurationsdateien schalten den Authentifikationsagenten
und X11-Weiterleitung ab. Füge die Zeilen unten in die <i>sshd_config</i>
ein, um sie zu aktivieren:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>X11Forwarding yes</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
und füge die folgenden Zeilen in die <i>ssh_config</i> ein:

<blockquote>
<table border=0 width="800">
	<tr>
		<td nowrap bgcolor="#EEEEEE">
<b>ForwardAgent yes</b><br>
<b>ForwardX11 yes</b>
		</td>
	</tr>
</table>
</blockquote>

<p>
X11-Weiterleitung setzt eine funktionierende <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=xauth&amp;sektion=1"
>xauth(1)</a>-Binary voraus. Unter OpenBSD befindet sie sich im
<i>xbase</i>-Dateiset, was auf anderen Plattformen jedoch nicht der
Fall sein muss. Für die portable OpenSSH muss xauth entweder während
dem configure-Aufruf gefunden werden oder später mittels
<b>XauthLocation</b> in der sshd_config(5) und ssh_config(5)
angegeben werden.

<p>
Hinweis zur Agenten-Interoperabilität: Es gibt zwei unterschiedliche
und inkompatible Agentweiterleitung-Mechanismen innerhalb des
SSH2-Protokolls. OpenSSH hat immer eine Erweiterung der originalen
SSH1-Agent-Anfragen genutzt, jedoch verwenden einige kommerzielle
Produkte ein anderes, nicht freies Agentweiterleitungsprotokoll.
Dies bedeutet, dass Agentweiterleitung nicht zwischen OpenSSH und
diesen kommerziellen Produkten genutzt werden kann.

<p>
<b>HINWEIS:</b> Benutzer von Linux Mandrake 7.2: Mandrake modifiziert
die <i>XAUTHORITY</i>-Umgebungsvariable in <i>/etc/skel/.bashrc</i>
und damit das Heimatverzeichnis jedes Bash-Benutzers. Diese Variable wird
von OpenSSH gesetzt und daher muss für die oben genannten
Optionen die folgende Zeile auskommentiert werden:


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b># export XAUTHORITY=$HOME/.Xauthority</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.8">2.8 - Nach dem Upgrade auf OpenSSH habe ich keine SSH2-Unterstützung mehr.</a></h2>

<p>
Die Dateien <i>sshd_config</i> oder <i>ssh_config</i> können von
Version zu Version verändert werden. Du solltest immer nach solchen
Änderungen Ausschau halten, wenn du auf eine neue Version von OpenSSH
upgradest. Nach OpenSSH 2.3.0 musst du das folgende in deine
<i>sshd_config</i> einfügen:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>HostKey /etc/ssh_host_dsa_key</b><br>
<b>HostKey /etc/ssh_host_rsa_key</b>
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.9">2.9 - sftp/scp kann keine Verbindung aufbauen, obwohl ssh funktioniert.</a></h2>

<p>
sftp und/oder scp können beim Aufbauen der Verbindung Probleme haben,
wenn du eine Shellinitialisierung (.profile, .bashrc, .chsrc etc.) hast,
die Ausgaben für nicht interaktive Sitzungen produziert. Diese Ausgabe
verwirrt den sftp/scp-Client. Hiermit kannst du prüfen, ob deine
Shell das tut:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
<b>ssh yourhost /usr/bin/true</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
Wenn das Kommando oben irgendeine Art von Ausgabe produziert, musst du
deine Shellinitialisierung modifizieren.

<h2><a name= "2.10">2.10 - Werdet ihr [foo] zu scp hinzufügen?</a></h2>

<p>
Kurze Antwort: Nein.

<p>
Lange Antwort: scp ist nicht standardisiert. Die Beschreibung, die einer
Spezifikation am nächsten kommt, ist: »Was rcp macht«. Da das selbe Kommando
auf beiden Seiten einer Verbindung benutzt wird, bedeutet das Hinzufügen
von Funktionalitäten oder Optionen das Risiko von Inkompatibilitäten
mit anderen Implementationen.

<p>
Neue Funktionalitäten sind eher in sftp wahrscheinlich, da das Protokoll
standardisiert (na ja, ein
,<a href="http://www.ietf.org/html.charters/OLD/secsh-charter.html">
draft standard</a>') und erweiterbar ist und Client sowie Server
voneinander getrennt sind.

<h2><a name= "2.11">2.11 - Wie verwende ich Portweiterleitung?</a></h2>

<p>
Wenn sshd(8) auf dem Server auf der Gegenseite läuft, kann es möglich
sein, bestimmte Dienste durch ssh zu ,tunneln'. Das kann wünschenswert
sein, um beispielsweise POP- und SMTP-Verbindungen zu verschlüsseln,
selbst wenn die Software keine eigene Unterstützung für
verschlüsselte Verbindungen hat. Das Tunneln verwendet Portweiterleitung,
um eine Verbindung zwischen dem Client und dem Server herzustellen. Die
Client-Software muss hierfür in der Lage sein, auf einen nicht standardisierten
Port verbinden zu können.

<p>
Die Idee dahinter ist, dass der Client sich mit dem entfernten System über
ssh verbindet und angibt, welcher Port auf der Maschine des Clients dazu
verwendet werden soll, Verbindungen zum Server weiterzuleiten. Danach ist es
möglich, die Dienste, die verschlüsselt werden sollen (z.&nbsp;B. fetchmail,
irc), auf dem Client mit der Angabe des gleichen Ports, der an ssh
übergeben wurde, zu starten, und die Verbindung wird durch ssh getunnelt.
Standardmäßig wird das System, das das Weiterleiten durchführt, nur
eigene Verbindungen zulassen.

<p>
Die wichtigsten Optionen zum Tunneln sind die Optionen -L und -R, welche dem
Benutzer das Portweiterleiten erlauben, die Option -D, welche das dynamische
Portweiterleiten erlaubt, die Option -g, die es anderen Hosts erlaubt,
Portweiterleitung zu benutzen, und die Option -f, welche ssh zuweist, nach
der Authentifizierung im Hintergrund weiterzuarbeiten. Lies die <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1"
>ssh(1)</a>-Handbuchseite, um weitere Details zu erfahren.

<p>
Dies ist ein Beispiel für eine getunnelte IRC-Sitzung von der Clientmaschine
,127.0.0.1' (localhost) zum entfernten Server ,server.example.com':

<blockquote>
<table border=0 width="800">
	<tr>
		<td nowrap bgcolor="#EEEEEE">
<b>ssh -f -L 1234:server.example.com:6667 server.example.com sleep 10<br>
irc -c '#users' -p 1234 pinky 127.0.0.1</b>
	</td>
	</tr>
</table>
</blockquote>

<p>
Dies tunnelt eine Verbindung zum IRC-Server server.example.com und tritt mit
dem Nick ,pinky' dem Channel ,#users' bei. Der lokale Port, der in diesem
Beispiel verwendet wurde, ist 1234. Es tut nichts zur Sache, welcher Port
benutzt wird, so lange er größer ist als 1023 (bedenke, nur root
kann Sockets auf privilegierten Ports öffnen) und keine Störung
mit bereits verwendeten Ports auftritt. Die Verbindung wird zum Port 6667
auf dem entfernten Server weitergeleitet, da das der Standardport für
IRC-Dienste ist.

<p>
Der Remote-Befehl ,sleep 10' wurde angegeben, um dem Dienst, der getunnelt
werden soll, eine gewisse Zeit (10 Sekunden in diesem Beispiel) zu geben, um
zu starten. Wenn in der angegebenen Zeit keine Verbindung aufgebaut wurde,
wird ssh sich beenden. Falls mehr Zeit benötigt wird, kann der sleep(1)-Wert
entsprechend erhöht werden oder alternativ könnte das oben
aufgelistete Beispiel als eine Funktion in die Benutzershell eingefügt
werden. Siehe ksh(1) und csh(1) für weitere Details über
benutzerdefinierte Funktionen.

<p>
ssh besitzt des Weiteren die Option -N, welche praktisch für das
Portweiterleiten ist: Wenn -N übergeben wurde, ist es nicht notwendig, einen
Remote-Befehl (»sleep 10« in dem Beispiel oben) anzugeben. Allerdings
führt die Benutzung dieser Option dazu, dass ssh für immer wartet
(anstatt zu beenden, wenn ein Remote-Befehl ausgeführt wurde), sodass
der Benutzer darauf achten muss, den Prozess hinterher manuell mit kill(1)
zu beenden.

<h2><a name= "2.12">2.12 - Meine ssh-Verbindung friert ein oder steigt nach N
Minuten Inaktivität aus.</a></h2>

<p>
Das ist üblicherweise das Resultat eines Paketfilters oder einem
NAT-Gerät, das die TCP-Verbindung wegen Inaktivität auslaufen
lässt. Du kannst <b>ClientAliveInterval</b> in der <i><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd_config&amp;sektion=5">
sshd_config</a></i> des Servers aktivieren oder <b>ServerAliveInterval</b> in
der <i><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh_config&amp;sektion=5">
ssh_config</a></i> des Clients ermöglichen (die letzte Option ist in
OpenSSH 3.8 und neuer verfügbar).

<p>
Das Aktivieren einer der beiden Optionen und das Setzen des Intervalls, das
kürzer als die benötigte Zeit ist, um die Verbindung auslaufen zu
lassen, sorgen dafür, dass die Verbindung in der Verbindungstabelle des
Gerätes ,frisch' gehalten wird.

<h2><a name= "2.13">2.13 - Wie rufe ich scp auf, um eine Datei zu kopieren,
die einen Doppelpunkt beinhaltet?</a></h2>

<b><a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">
scp</a></b> interpretiert den Teil vor dem Doppelpunkt als Namen des
entfernten Servers und versucht, eine Verbindung zu diesem aufzubauen. Um
das zu verhindern, greife auf die Datei mit relativer oder absoluter
Pfadangabe zu, z.&nbsp;B.:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ scp ./source:file sshserver:
                </td>
        </tr>
</table>
</blockquote>

<h2><a name= "2.14">2.14 - Warum teilt OpenSSH seine Version den Clients mit?</a></h2>

<p>
OpenSSH, wie die meisten SSH-Implementationen, teilt seinen Namen und seine
Version den Clients mit, wenn sie eine Verbindung aufbauen, z.&nbsp;B.
</p>

<blockquote>
SSH-2.0-OpenSSH_3.9
</blockquote>

<p>
Diese Information wird von den Clients und Servern verwendet, um
Protokollkompatibilitätskniffe zu aktiveren, die veränderte, fehlerhafte
oder fehlende Funktionen in der Implementation, mit der sie reden,
zu umgehen. Dieser Protokollfunktionstest ist weiterhin nötig, weil noch
immer Versionen mit Inkompatibilitäten im Umlauf sind.
</p>

<h2><u><a name= "3.0">3.0 - Fragen zum portablen OpenSSH</a></u></h2>

<h2><a name= "3.1">3.1 - Unechte PAM-Authentifikationsmeldungen in den Logdateien.</a></h2>

<p>
Die portable Version von OpenSSH generiert unechte misslungene
Authentifikationsmeldungen bei jedem Login, etwa wie:


<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
"<b>authentication failure; (uid=0) -&gt; root for sshd service</b>"
                </td>
        </tr>
</table>
</blockquote>

<p>
Diese werden erzeugt, weil OpenSSH zuerst versucht herauszufinden, ob
der Anwender eine Authentifikation zum Login benötigt (z.&nbsp;B. leeres Passwort).
Dummerweise logt PAM alle Authentifikationversuche,
inklusive diesem hier.

<p>
Wenn es dich zu sehr stört, setze
»<b>PermitEmptyPasswords no</b>« in <i>sshd_config</i>. Das
wird die Meldung stilllegen, allerdings auf Kosten dessen, dass es nicht
mehr möglich ist, sich in Accounts mit leeren Passwörtern
einzuloggen. Das ist im übrigen bereits der Standard, wenn du die
mitgelieferte <i>sshd_config</i>-Datei benutzt.

<h2><a name= "3.2">3.2 - Leere Passwörter sind bei der PAM-Authentifikation nicht erlaubt.</a></h2>

<p>
Um leere Passwörter in einer OpenSSH-Version zu erlauben, die mit
PAM erzeugt wurde, musst du das ,nullok'-Flag an das Ende des
Password-Checking-Moduls in der <i>/etc/pam.d/sshd</i>-Datei
setzen. Zum Beispiel:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
auth required/lib/security/pam_unix.so shadow nodelay nullok
                </td>
        </tr>
</table>
</blockquote>

<p>
Das muss zusätzlich zum Setzen von
»<b>PermitEmptyPasswords yes</b>« in der
<i>sshd_config</i>-Datei geschehen.

<p>
Es gibt einen Fallstrick beim Benutzen leerer Passwörter mit
PAM-Authentifikation: PAM wird jegliches Passwort erlauben, wenn ein Account
mit einem leeren Passwort authentifiziert wird. Das macht den Check, den
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a>
benutzt, um zu prüfen, ob der Account ein Passwort gesetzt hat,
wirkungslos und umgeht ebenso die Richtlinie, die von
<b>PermitEmptyPasswords</b> gesetzt wurde. Aus diesem Grund raten wir
davon ab, die <b>nullok</b>-Direktive in deiner PAM-Konfigurationsdatei
zu setzen, es sei denn, du willst leere Passwörter explizit erlauben.


<h2><a name= "3.3">3.3 - ssh(1) benötigt sehr lange zum Verbinden oder zum Einloggen</a></h2>

<p>
Große Verzögerungen (mehr als 10 Sekunden) werden normalerweise
durch Probleme mit der Namensauflösung verursacht:
<ul>
<li>Einige Versionen der glibc (insbesondere glibc 2.1, die mit Red Hat 6.1
ausgeliefert wurde) können einen langen Zeitraum benötigen, um
,IPv6 zu IPv4'-Adressen von Domänennamen aufzulösen. Das kann
umgangen werden, indem die Option <b>AddressFamily inet</b> in der
<i>ssh_config</i> eingetragen wird.</li>

<li>Es könnte ein DNS-Auflösungsproblem vorliegen, entweder beim
Client oder beim Server. Du kannst den <code>nslookup</code>-Befehl auf dem
Client und dem Server verwenden, um den Namen und die IP-Adresse der Gegenseite
auflösen zu lassen. Lass zusätzlich den Namen auf dem Server
auflösen, den der Client beim Auflösen der IP-Adresse des Servers
zurückgegeben hat. Du kannst die meisten Lookups serverseitig durch
das Hinzufügen von <b>UseDNS no</b> in <i>sshd_config</i>
deaktivieren.</li>
</ul>

<p>
Verzögerungen unter 10 Sekunden können andere Ursachen haben.

<ul>

<li>OpenSSH-Versionen vor 3.8 hatten eine <i>moduli</i>-Datei mit moduli,
die kleiner waren als die, nach denen OpenSSH Ausschau hielt, und als Resultat
würde sshd am Ende moduli verwenden, die beachtlich größer
wären als die, die angefragt wurden, was auf Kosten der Geschwindigkeit
geschah. Das Ersetzen der <i>moduli</i>-Datei wird das Problem lösen
(bedenke, dass diese Datei bei einem Upgrade in den meisten Fällen nicht
ausgetauscht wird und daher manuell ersetzt werden muss).</li>

<li>OpenSSH-Versionen vor 3.8 hatten einen Fehler in <code>ssh</code>, der
dazu führte, dass es größere moduli anforderte als erwartet
(was dann, in Kombination mit dem oben genannten Problem, in erheblichen
Geschwindigkeitseinbußen endete).
Ein Upgrade des Clients auf Version 3.8 oder höher wird das Problem
beheben.</li>

<li>Falls entweder der Server oder der Client keinen kernelbasierten
Zufallszahlengenerator besitzen (z.&nbsp;B. Solaris &lt; 9, AIX &lt; 5.2, HP-UX
&lt; 11.11) und kein Ersatz verfügbar ist (z.&nbsp;B. <a href=
"ftp://ftp.ayamura.org/pub/prngd/">prngd</a>), ist es möglich, dass ein
Programm, das von <code>ssh-rand-helper</code> zum Generieren vom Entropy
aufgerufen wird, hängt. Das kann ermittelt werden, indem es im Debug-Modus
ausgeführt wird:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
/usr/local/libexec/ssh-rand-helper -vvv
                </td>
        </tr>
</table>
</blockquote>

Alle beachtlichen Verzögerungen sollten untersucht und behoben,
oder aber die entsprechenden Befehle aus <i>ssh_prng_cmds</i> entfernt
werden.
</li>

</ul>

<h3>Wie langsam ist ,langsam'?</h3>
Unter normalen Umständen ist die Geschwindigkeit des SSH-Logins
abhängig von der CPU-Leistung des Clients und Servers. Zum Vergleich
folgen typische Verbindungszeiten für <code>time ssh localhost
true</code> mit einem 1024-Bit-RSA-Schlüssel auf einem ansonsten
ungenutzten System. OpenSSH und OpenSSL wurden mit gcc 3.3.x compiliert.

<p>
<table>
<tr><th>CPU</th><th>Zeit (SSHv1)<a href="#3.3fn1">[1]</a></th>
	<th>Zeit (SSHv2)</th></tr>
<tr><td>170MHz SPARC/sun4m</td><td>0.74 Sek</td><td>1.25 Sek</td></tr>
<tr><td>236MHz HPPA/8200<a href="#3.3fn2">[2]</a></td><td>0.44 Sek</td>
	<td>0.79 Sek</td></tr>
<tr><td>375MHz PowerPC/604e</td><td>0.38 Sek</td><td>0.51 Sek</td></tr>
<tr><td>933MHz VIA Ezra</td><td>0.34 Sek</td><td>0.44 Sek</td></tr>
<tr><td>2.1GHz Athlon 2600+</td><td>0.14 Sek</td><td>0.22 Sek</td></tr>
</table>

<br>

<a name="3.3fn1">[1]</a> Das SSHv1 Protokoll ist zwar schneller, aber
kryptographisch schwächer als SSHv2.<br>

<a name="3.3fn2">[2]</a> Zu dem Zeitpunkt des Schreibens generiert gcc relativ
langsamen Code auf HPPA für RSA- und Diffie-Hellman-Operationen (siehe
<a href= "http://gcc.gnu.org/bugzilla/show_bug.cgi?id=7625">gcc bug #7625</a>
und <a
href="http://marc.info/?l=openssh-unix-dev&amp;m=102646106016694">
Diskussion auf openssh-unix-dev</a>).

<h2><a name= "3.4">3.4 - »Can't locate module net-pf-10«-Meldungen im Log unter Linux.</a></h2>

<p>
Der Linux-Kernel sucht (via modprobe) nach der Protokollfamilie 10 (IPv6).
Lade entweder das passende Kernelmodul, gib den korrekten Alias in
<i>/etc/modules.conf</i> an oder schalte IPv6 in <i>/etc/modules.conf</i> ab.


<p>
Aus irgendeinem blödsinnigen Grund kann
<i>/etc/modules.conf</i> auch <i>/etc/conf.modules</i> heißen.


<h2><a name= "3.5">3.5 - Passwortauthentifikation funktioniert nicht (z.&nbsp;B. unter Slackware 7.0 oder Red Hat 6.x)</a></h2>

<p>
Falls das Passwort das korrekte Passwort ist, und der Login weiterhin
verwehrt bleibt, liegt die Ursache normalerweise darin, dass das
System zwar mit MD5-Typ-Passwörtern arbeitet, aber die
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=crypt&amp;sektion=3"
>crypt(3)</a>-Funktion, die von sshd verwendet wird, diese nicht
verstehen kann.

<p>
Betroffene Passwörter haben eine Passwortzeichenkette in
<i>/etc/passwd</i> oder <i>/etc/shadow</i>, die mit <b>$1$</b> beginnt.
Falls die Passwortauthentifikation für neue Accounts oder Accounts
mit Passwörtern, die kürzlich aktualisiert wurden, fehlschlägt, aber
mit alten Accounts funktioniert, dann ist dies wahrscheinlich das
Problem.

<p>
Der Grund hierfür ist, dass einige Versionen von OpenSSL eine
crypt(3)-Funktion haben, die keine MD5-Passwörter versteht, und die
,link'-Reihenfolge von sshd führt dazu, dass OpenSSLs crypt(3) und nicht
das vom System genutzt wird. OpenSSHs configure versucht dies
zu korrigieren aber ist damit nicht immer erfolgreich.

<p>
Es gibt einige mögliche Lösungen:

<ul>
<li>
<p>
Aktiviere sshds eingebaute Unterstützung für MD5-Passwörter während
der Erzeugungsphase.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
./configure --with-md5-passwords [Optionen]
                </td>
        </tr>
</table>
</blockquote>

Dies ist sogar dann sicher, wenn du beide Verschlüsselungstypen
verwendest, da sshd den korrekten Algorithmus für jeden Account
automatisch auswählt.

<li>
<p>
Wenn dein System eine separate libcrypt-Bibliothek hat (z.&nbsp;B.
Slackware 7), dann kannst du manuell -lcrypt zur LIBS-Liste
einfügen, sodass es statt OpenSSLs verwendet wird:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
LIBS=-lcrypt ./configure [Optionen]
                </td>
        </tr>
</table>
</blockquote>

<li>
<p>
Wenn deine Plattform PAM unterstützt, könntest du sshd so konfigurieren,
dass es dieses verwendet (siehe <a href= "#3.15" >Sektion 3.15</a>). Das
bedeutet, dass sshd Passwörter nicht selbst überprüfen wird, sondern es
an die konfigurierten PAM-Module übergibt.
</ul>

<h2><a name= "3.6">3.6 - Configure oder sshd(8) beschweren sich über fehlende RSA- oder DSA-Unterstützung</a></h2>

<p>
Stelle sicher, dass deine OpenSSL-Bibliotheken mit eingebauter RSA- oder
DSA-Unterstützung erzeugt wurden, entweder intern oder durch RSAref.


<h2><a name= "3.7">3.7 - »scp: command not found«-Fehler</a></h2>

<p>
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a>
muss sich im Standard-PATH sowohl auf dem Client als auch auf dem Server
befinden. Möglicherweise musst du die Option <b>--with-default-path</b>
angeben, um einen angepassten Pfad für die Suche auf dem
Server angeben zu können. Diese Option ersetzt den Standardpfad, sodass
du sowohl alle bisherigen Verzeichnisse in deinem Pfad angeben musst als auch
das Verzeichnis, in dem scp installiert ist. Zum Beispiel:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>./configure --with-default-path=/bin:/usr/bin:/usr/local/bin:/path/to/scp</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
Bedenke, dass die Konfiguration des Administrators des Servers Vorrang
gegenüber der Option <b>--with-default-path</b> hat. Das beinhaltet
das Rücksetzen von PATH in <i>/etc/profile</i>, PATH in
<i>/etc/environment</i> unter AIX oder (für 3.7p1 und höher) das
Setzen von PATH oder SUPATH in <i>/etc/default/login</i> unter Solaris oder
Reliant Unix.

<h2><a name= "3.8">3.8 - Kann die Passphrase nicht lesen</a></h2>

<p>
Einige Betriebssysteme setzen <i>/dev/tty</i> mit falschen Modi, was
zum Fehler beim Lesen von Passwörtern mit folgender Fehlermeldung
führt:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
You have no controlling tty.  Cannot read passphrase.
                </td>
        </tr>
</table>
</blockquote>

<p>
Die Lösung hierzu ist, die Berechtigungen von <i>/dev/tty</i> auf 0666 zu
setzen und dann das ganze deinem Betriebssystem-Hersteller als Fehler zu
melden.


<h2><a name= "3.9">3.9 - configure fehlt oder make versagt</a></h2>

<p>
Wenn es keine configure-Datei in deiner tar.gz-Datei gibt, die du
heruntergeladen hast, oder make mit einem ,missing seperator'-Fehler
versagt, hast du vermutlich die OpenBSD-Distribution heruntergeladen
und versuchst, sie auf einer anderen Plattform zu kompilieren.
Bitte verwende die <a href="portable.html">portable Version</a>.


<h2><a name= "3.10">3.10 - Hängt beim Verlassen von ssh</a></h2>

<p>
OpenSSH kann beim Beenden hängen bleiben. Das kann passieren, wenn
es einen aktiven Hintergrundprozess gibt. Linux und HP-UX sind
hierfür bekannt. Das Problem kann hiermit verifiziert werden:

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>sleep 20 &amp; exit</b>
                </td>
        </tr>
</table>
</blockquote>

Versuche stattdessen das hier zu benutzen:
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>sleep 20 &lt; /dev/null &gt; /dev/null 2&gt;&amp;1 &amp;</b>
                </td>
        </tr>
</table>
</blockquote>

<p>
Ein Umgehen des Problems für bash-Anwender ist mittels eines
Einfügens von <b>"shopt -s huponexit"</b> in entweder /etc/bashrc oder
~/.bashrc möglich. Ansonsten konsultiere die Handbuchseite deiner Shell um
eine Option zu finden, mit der man aktiven Jobs ein HUP-Signal senden kann,
wenn man sie verlässt. Siehe <a
href="http://bugzilla.mindrot.org/show_bug.cgi?id=52">bug #52</a>
für andere Möglichkeiten, das Problem umgehen zu können.

<h2><a name= "3.11">3.11 - Wieso hängt ssh beim Beenden?</a></h2>

<p>
Beim Ausführen von
<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
$ <b>ssh host command</b>
                </td>
        </tr>
</table>
</blockquote>
<b>muss</b> ssh hängen bleiben, da es zu warten hat
<ul>
<li>
bis es sicherstellen kann, dass <code>command</code> keine weiteren
Eingaben benötigt.
<li>
bis es sicherstellen kann, dass <code>command</code> keine weitere
Ausgaben zurückgibt.
<li>
bis <code>command</code> beendet ist, da der sshd den Exitstatus
von <code>command</code> an ssh weitergeben muss.
</ul>
<p>

<h2><a name= "3.12">3.12 - Ich habe ein Upgrade auf OpenSSH 3.1
durchgeführt und dann ging die X11-Weiterleitung nicht mehr.</a></h2>

Beginnend mit OpenSSH 3.1 lauscht der sshd-X11-Weiterleitungsserver
standardmäßig auf localhost; siehe auch die
Option <b>X11UseLocalhost</b> von sshd, um zum vorherigen Verhalten
zurückzukehren, wenn deine älteren X11-Clients nicht mit dieser
Konfiguration funktionieren.<p>

Im Allgemeinen sollten X11-Clients, die X11 R6 benutzen, mit dieser
Einstellung funktionieren. Einige Hersteller, einschließlich HP, setzen
X11-Clients mit R6- und R5-Bibliotheken ein, sodass einige Clients
funktionieren und andere nicht.
Das gilt z.&nbsp;B. für HP-UX 11.X.<p>

<h2><a name= "3.13">3.13 - Ich habe ein Upgrade auf OpenSSH 3.8
durchgeführt und dann gingen einige X11-Programme nicht
mehr.</a></h2>

<p>
Wie in den <a href="../txt/release-3.8">3.8 release notes</a> dokumentiert
worden ist, wird <code>ssh</code> standardmäßig ,untrusted X11
cookies' benutzen. Das vorherige Verhalten kann durch das Setzen von
<b>ForwardX11Trusted yes</b> in <i>sshd_config</i> wiederhergestellt werden.

<p>
Mögliche Symptome beinhalten:<br>
<code>BadWindow (invalid Window parameter)<br>
BadAccess (attempt to access private resource denied)<br>
X Error of failed request:  BadAtom (invalid Atom parameter)<br>
Major opcode of failed request:  20 (X_GetProperty)<br></code>

<h2><a name= "3.14">3.14 - Ich habe meinen öffentlichen Schlüssel
in authorized_keys kopiert, aber Publickey-Authentifizierung funktioniert
immer noch nicht.</a></h2>

<p>
Typischerweise wird das durch die Dateirechte von $HOME,
$HOME/.ssh oder $HOME/.ssh/authorized_keys hervorgerufen, die mehr erlauben
als sshd standardmäßig zulässt.

<p>
In diesem Falle kann es behoben werden, indem Folgendes auf dem Server
ausgeführt wird.
<blockquote>
<table border=0 width="800">
<tr>
  <td nowrap bgcolor="#EEEEEE">
$ <b>chmod go-w $HOME $HOME/.ssh</b><br>
$ <b>chmod 600 $HOME/.ssh/authorized_keys</b><br>
$ <b>chown `whoami` $HOME/.ssh/authorized_keys</b><br>
  </td>
</tr>
</table>
</blockquote>

<p>
Falls das aus irgendeinem Grund nicht möglich sein sollte, besteht die
Alternative darin, <b>StrictModes no</b> in <i>sshd_config</i> zu setzen,
jedoch wird das nicht empfohlen.

<h2><a name= "3.15">3.15 - OpenSSH-Versionen und das Verhalten von PAM.</a></h2>

Das portable OpenSSH hat eine Option, die während der Konfigurationsphase
gesetzt werden kann, um sshds Nutzung des
<a href="http://www.opengroup.org/onlinepubs/008329799/">PAM</a>-
(Pluggable Authentication Modules) Interfaces zu aktivieren.

<blockquote>
<table border=0 width="800">
        <tr>
                <td nowrap bgcolor="#EEEEEE">
./configure --with-pam [Optionen]
                </td>
        </tr>
</table>
</blockquote>

Um PAM auf irgendeine Weise nutzen zu können, muss diese Option während
der Erzeugungsphase gesetzt sein. Das Laufzeit-Verhalten, wenn PAM
erzeugt wurde, variiert mit der Version des portablen OpenSSH, und
spätere Versionen müssen es ebenfalls mit dem Setzen von
<b>UsePAM</b> auf <b>yes</b> in <i>sshd_config</i> aktivieren.

<p>
Das Verhalten der relevanten Authentifikations-Optionen, wenn
PAM-Unterstützung integriert wurde, ist in der folgenden Tabelle
zusammengefasst.

<p>
<table border="1">
  <tr> <th>Version</th> <th>UsePAM</th> <th>PasswordAuthentication</th> <th>ChallengeResponseAuthentication</th> </tr>
  <tr>
    <td>&lt;=3.6.1p2</td>
    <td>Nicht nutzbar</td>
    <td>Verwendet PAM</td>
    <td>Verwendet PAM, wenn <b>PAMAuthenticationViaKbdInt</b> aktiv ist</td>
  </tr>
  <tr>
    <td>3.7p1 - 3.7.1p1</td>
    <td>Standard ist <b>yes</b></td>
    <td>Verwendet nicht PAM</td>
    <td>Verwendet PAM, wenn <b>UsePAM</b> aktiv ist</td>
  </tr>
  <tr>
    <td>3.7.1p2 - 3.8.1p1</td>
    <td>Standard ist <b>no</b></td>
    <td>Verwendet nicht PAM <a href="#3.15fn1">[1]</a></td>
    <td>Verwendet PAM, wenn <b>UsePAM</b> aktiv ist</td>
  </tr>
  <tr>
    <td>3.9p1</td>
    <td>Standard ist <b>no</b></td>
    <td>Verwendet PAM, wenn <b>UsePAM</b> aktiv ist</td>
    <td>Verwendet PAM, wenn <b>UsePAM</b> aktiv ist</td>
  </tr>
</table>
<p>

<a name= "3.15fn1">[1]</a> Einige Verkäufer, insbesondere
Redhat/Fedora, haben die Passwortauthentifikation von 3.9p1
auf ihre 3.8x-basierten Pakete zurückportiert.
Wenn du ein Paket nutzt, das von einem Verkäufer bereitgestellt wurde,
konsultiere bitte dessen Dokumentation.

<p>
,OpenSSH Portable's PAM-Interface hat immer noch Probleme mit ein
paar Modulen, jedoch hoffen wir, dass wir diese Anzahl in Zukunft
verringern können. Zum Zeitpunkt der Veröffentlichung von 3.9p1
sind folgende Probleme bekannt:

<ul>
  <li>Module, die sich auf ,module-private' Daten verlassen (z.&nbsp;B.
  pam_dhkeys, pam_krb5, AFS) können darin fehlschlagen, korrekte
  ,Credentials' zu erzeugen (Fehler <a
  href="http://bugzilla.mindrot.org/show_bug.cgi?id=688">#688</a>)
  wenn über <b>ChallengeResponseAuthentication</b> authentifiziert
  wird. <b>PasswordAuthentication</b> mit 3.9p1 und neuer sollten
  funktionieren.
</ul>

Du kannst außerdem <a
href="http://bugzilla.mindrot.org/buglist.cgi?product=Portable+OpenSSH&amp;bug_status=RESOLVED&amp;bug_status=NEW&amp;bug_status=ACCEPTED&amp;component=PAM+support"
>bugzilla für aktuelle PAM-Probleme</a> durchsehen.

<h2><a name= "3.16">3.16 - Warum zeigen weder »w« noch »who« unter AIX 5.x Benutzer an, die über ssh eingeloggt sind?</a></h2>

Zwischen AIX 4.3.3 und AIX 5.x wurde das Format vom »wtmp struct«
geändert. Das bedeutet, dass sshd-Binarys, die unter AIX 4.x erzeugt
wurden, keine korrekten wtmp-Einträge schreiben, wenn sie unter AIX 5.x
ausgeführt werden. Dies kann behoben werden, indem einfach sshd auf
einem AIX-5.x-System neukompiliert und dieser dann eingesetzt wird.

<hr>
<a href="index.html"><img height=24 width=24 src="../back.gif" border=0 alt=OpenSSH></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: faq.html,v 1.113 ]<br>
$Translation: faq.html,v 1.84 2012/04/21 20:40:04 steffen Exp $<br>
-->
$OpenBSD: faq.html,v 1.79 2012/04/21 22:25:29 ajacoutot Exp $
</small>

</body>
</html>
@


1.79
log
@Sync with Steelix CVS
@
text
@d1263 1
a1263 1
$OpenBSD$
@


1.78
log
@Sync with Steelix CVS
@
text
@d1150 1
a1150 1
$ <b>chmod 600 $HOME/.ssh/authorized_keys</b>
d1260 2
a1261 2
Originally [OpenBSD: faq.html,v 1.112 ]<br>
$Translation: faq.html,v 1.83 2012/04/19 18:43:58 steffen Exp $<br>
@


1.77
log
@Sync with Steelix CVS
@
text
@d348 2
a349 2
OpenSSH-Versionen vor 3.3 benötigten das <code>ssh</code>-Binary
mit gesetztem setuid-Bit, um das zu erreichen, aber du kannst das Bit
d1222 3
a1224 3
auf ihre 3.8x-basierten Packages zurückportiert. Wenn du ein
Package nutzt, das von einem Verkäufer bereitgestellt wurde,
konsultiere bitte deren Dokumentation.
d1261 1
a1261 1
$Translation: faq.html,v 1.82 2012/01/31 21:20:36 tobias Exp $<br>
@


1.76
log
@Sync with Steelix CVS
@
text
@d612 1
a612 1
>ssh(1)</a>-Manualseite, um weitere Details zu erfahren.
d1068 1
a1068 1
~/.bashrc möglich. Ansonsten konsultiere die Manualseite deiner Shell um
d1261 1
a1261 1
$Translation: faq.html,v 1.81 2011/12/22 14:39:55 steffen Exp $<br>
@


1.75
log
@Sync with Steelix CVS
@
text
@d11 1
a11 1
<meta name= "copyright"     content= "This document copyright 1999-2005 OpenBSD.">
a19 2
<strong>Datum: 20.09.2005</strong>

d83 7
a89 11
<p>
OpenSSH ist eine <b>FREIE</b> Version der SSH-Suite von
Netzwerkverbindungs-Tools, auf die sich eine steigende Anzahl
Personen im Internet verlassen. Viele Benutzer von telnet,
rlogin, ftp und anderen solchen Programmen haben noch nicht
realisiert, dass ihr Passwort unverschlüsselt über
das Internet übertragen wird, aber so ist es. OpenSSH
verschlüsselt den gesamten Verkehr (inklusive Passwörtern),
um Mithören (eavesdropping), ,Entführen von Verbindungen'
(connection hijacking) und andere Angriffe auf Netzwerkebene
effektiv zu eliminieren.
d131 20
a150 13
OpenSSH erscheint in zwei herunterladbaren Distributionen: der nativen
<a href="openbsd.html">OpenBSD</a>-Distribution und der Multiplattform
<a href="portable.html">Portable</a> Distribution. Wenn du OpenSSH für
eine aktuelle Version von OpenBSD oder zur Integration in ein Projekt
benötigst, möchtest du vermutlich die
<a href="openbsd.html">OpenBSD</a>-Distribution. Falls du OpenSSH für
eine andere Plattform oder für eine ältere OpenBSD-Version
benötigst, möchtest du vermutlich die
<a href="portable.html">Portable</a>-Distribution.

<p>
Wenn du herunterlädst, verwende bitte einen
<a href="portable.html#mirrors">Mirror</a> in deiner Nähe.
d1260 2
a1261 2
Originally [OpenBSD: faq.html,v 1.111 ]<br>
$Translation: faq.html,v 1.80 2010/06/10 19:24:24 tobias Exp $<br>
@


1.74
log
@Sync with Steelix CVS
@
text
@d1259 2
a1260 2
Originally [OpenBSD: faq.html,v 1.110 ]<br>
$Translation: faq.html,v 1.79 2010/02/20 14:37:14 tobias Exp $<br>
@


1.73
log
@Sync with Steelix CVS -- we are back to normal operation!
@
text
@d1150 1
d1259 2
a1260 2
Originally [OpenBSD: faq.html,v 1.109 ]<br>
$Translation: faq.html,v 1.78 2009/04/25 11:40:23 tobias Exp $<br>
@


1.72
log
@Sync with Steelix CVS
@
text
@d578 1
a578 1
,<a href="http://www.ietf.org/html.charters/secsh-charter.html">
d1258 2
a1259 2
Originally [OpenBSD: faq.html,v 1.108 ]<br>
$Translation: faq.html,v 1.77 2008/07/12 09:39:38 paldium Exp $<br>
@


1.71
log
@Sync with Steelix CVS
@
text
@d25 2
a26 1
<h3><a href= "#1.0">1.0 - Was ist OpenSSH und wo kann ich sie bekommen?</a></h3>
d28 2
a29 1
<li><a href= "#1.1">1.1 - Was ist OpenSSH und wo kann ich sie herunterladen?</a>
d32 2
a33 1
<li><a href= "#1.4">1.4 - Was ist mit Copyrights, Benutzung und Patenten?</a>
d35 2
d287 2
d292 4
d712 2
a713 4
zu umgehen. Dieser Protokollfunktions-Test ist weiterhin
benötigt, weil das SSH-Protokoll noch nicht als RFC veröffentlicht
wurde und weitere inkompatible Änderungen möglicherweise gemacht
werden, bevor das eintritt.
d1258 2
a1259 2
Originally [OpenBSD: faq.html,v 1.107 ]<br>
$Translation: faq.html,v 1.76 2008/03/05 20:10:38 paldium Exp $<br>
@


1.70
log
@Sync with Steelix CVS
@
text
@d325 1
a325 1
braucht OpenSSH root-Authorität, um sich an die unteren und privilegierten
d663 1
a663 1
lassen, sorgen dafür, dass die Verbindung in der Verbindungstablle des
d720 1
a720 1
&quot;<b>authentication failure; (uid=0) -&gt; root for sshd service</b>&quot;
d734 1
a734 1
&quot;<b>PermitEmptyPasswords no</b>&quot; in <i>sshd_config</i>. Das
d760 1
a760 1
&quot;<b>PermitEmptyPasswords yes</b>&quot; in der
d1077 1
a1077 1
<b>muss</b> ssh hängenbleiben, da es zu warten hat
d1250 1
a1250 1
$Translation: faq.html,v 1.74 2008/01/04 21:02:58 paldium Exp $<br>
@


1.69
log
@Sync with Steelix CVS
@
text
@d25 1
a25 1
<h3><a href= "#1.0">1.0 - Was ist OpenSSH und wo kann ich es bekommen?</a></h3>
d27 2
a28 2
<li><a href= "#1.1">1.1 - Was ist OpenSSH und wo kann ich es herunterladen?</a>
<li><a href= "#1.2">1.2 - Warum sollte es eingesetzt werden?</a>
d40 1
a40 1
<li><a href= "#2.5">2.5 - Alte Versionen des kommerziellen SSH verschlüsseln ,host keys' mit IDEA.</a>
d42 1
a42 1
<li><a href= "#2.7">2.7 - X11- und/oder ,agent'-Weiterleitung funktioniert nicht.</a>
d46 1
a46 1
<li><a href= "#2.11">2.11 - Wie verwende ich Port-Weiterleitung?</a>
d57 1
a57 1
<li><a href= "#3.4">3.4 - ,Can't locate module net-pf-10'-Meldungen im Log unter Linux.</a>
d60 1
a60 1
<li><a href= "#3.7">3.7 - ,scp: command not found'-Fehler</a>
d62 1
a62 1
<li><a href= "#3.9">3.9 - ,configure' fehlt oder make versagt</a>
d67 1
a67 1
<li><a href= "#3.14">3.14 - Ich habe meinen öffentlichen Schlüssel in authorized_keys kopiert, aber public-key-Authentifizierung funktioniert immernoch nicht.</a>
d69 1
a69 1
<li><a href= "#3.16">3.16 - Warum zeigen weder ,w' noch ,who' unter AIX 5.x Benutzer an, die über ssh eingeloggt sind?</a>
d76 1
a76 1
<h2><u><a name= "1.0">1.0 - Was ist OpenSSH und wo kann ich es bekommen?</a></u></h2>
d78 1
a78 1
<h2><a name= "1.1">1.1 - Was ist OpenSSH und wo kann ich es herunterladen?</a></h2>
d125 1
a125 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keyscan&amp;sektion=1">ssh-keyscan(1)</a> - Sammelt ssh-,public keys' ein.
d144 1
a144 1
,<a href="portable.html#mirrors">mirror</a>' in deiner Nähe.
d146 1
a146 1
<h2><a name= "1.2">1.2 - Warum sollte es eingesetzt werden?</a></h2>
d399 1
a399 1
<h2><a name= "2.5">2.5 - Alte Versionen des kommerziellen SSH verschlüsseln ,host keys' mit IDEA.</a></h2>
d440 1
a440 1
<h2><a name= "2.7">2.7 - X11- und/oder ,agent'-Weiterleitung funktioniert nicht.</a></h2>
d484 1
a484 1
und inkompatible ,agent forwarding'-Mechanismen innerhalb des
d487 2
a488 2
Produkte ein anderes, nicht freies ,agent forwarding'-Protokoll.
Dies bedeutet, dass ,agent forwarding' nicht zwischen OpenSSH und
d559 1
a559 1
Spezifikation am nächsten kommt, ist: ,was rcp tut'. Da das selbe Kommando
d571 1
a571 1
<h2><a name= "2.11">2.11 - Wie verwende ich Port-Weiterleitung?</a></h2>
d578 1
a578 1
verschlüsselte Verbindungen hat. Das Tunneln verwendet Port-Weiterleitung,
d595 2
a596 2
Benutzer das Port-Weiterleiten erlauben, die Option -D, welche das dynamische
Port-Weiterleiten erlaubt, die Option -g, die es anderen Hosts erlaubt,
d639 2
a640 2
Port-Weiterleiten ist: Wenn -N übergeben wurde, ist es nicht notwendig, einen
Remote-Befehl (,sleep 10' in dem Beispiel oben) anzugeben. Allerdings
d873 1
a873 1
<h2><a name= "3.4">3.4 - ,Can't locate module net-pf-10'-Meldungen im Log unter Linux.</a></h2>
d965 1
a965 1
<h2><a name= "3.7">3.7 - ,scp: command not found'-Fehler</a></h2>
d1017 1
a1017 1
<h2><a name= "3.9">3.9 - ,configure' fehlt oder make versagt</a></h2>
d1020 1
a1020 1
Wenn es keine ,configure'-Datei in deiner tar.gz-Datei gibt, die du
d1124 2
a1125 2
in authorized_keys kopiert, aber public-key-Authentifizierung funktioniert
immernoch nicht.</a></h2>
d1216 1
a1216 1
,OpenSSH Portable's PAM-Interface hat immernoch Probleme mit ein
d1235 1
a1235 1
<h2><a name= "3.16">3.16 - Warum zeigen weder ,w' noch ,who' unter AIX 5.x Benutzer an, die über ssh eingeloggt sind?</a></h2>
d1237 1
a1237 1
Zwischen AIX 4.3.3 und AIX 5.x wurde das Format vom ,wtmp struct'
d1250 1
a1250 1
$Translation: faq.html,v 1.73 2007/11/03 10:45:47 paldium Exp $<br>
@


1.68
log
@sync with steelix translation CVS
@
text
@d83 1
a83 1
von Leuten im Internet verlassen. Viele Benutzer von telnet,
d126 1
a126 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign&amp;sektion=8">ssh-keysign(8)</a> - ssh Hilfsprogramm für hostbasierende Authentifikation.
d354 1
a354 1
HMAC-Implementierung. Ihr Code hat nicht die komplette Ausgabe des Datenblocks
d475 1
a475 1
>xauth(1)</a>-Binary voruas. Unter OpenBSD befindet sie sich im
d562 1
a562 1
mit anderen Implementierungen.
d566 1
a566 1
standardisiert (naja, ein
d642 1
a642 1
(anstatt zu beenden, wenn ein Remote-Befehl ausgeführt wurde), so dass
d689 1
a689 1
OpenSSH, wie die meisten SSH-Implementierungen, teilt seinen Namen und seine
d698 1
a698 1
Diese Information wird von den Clients und Serven verwendet, um
d700 1
a700 1
oder fehlende Funktionen in der Implementierung, mit der sie reden,
d769 1
a769 1
wirklungslos und umgeht ebenso die Richtlinie, die von
d794 1
a794 1
deaktiveren.</li>
d804 1
a804 1
würde sshd am Ende moduli verwenden, die bedeutlich größer
d938 1
a938 1
einfügen, so dass es statt OpenSSLs verwendet wird:
d972 1
a972 1
Server angeben zu können. Diese Option ersetzt den Standardpfad, so dass
d1102 1
a1102 1
X11-Clients mit R6- und R5-Bibliotheken ein, so dass einige Clients
d1211 1
a1211 1
auf ihre 3.8x-basierenden Packages zurückportiert. Wenn du ein
d1213 1
a1213 1
konsultiere bitte derren Dokumentation.
d1250 1
a1250 1
$Translation: faq.html,v 1.71 2007/06/20 19:35:16 simon Exp $<br>
@


1.67
log
@sync with Steelix CVS
@
text
@d274 1
a274 1
<a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=1&amp;w=2">theaimsgroup.com</a>
d870 1
a870 1
href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;m=102646106016694">
d1249 2
a1250 2
Originally [OpenBSD: faq.html,v 1.106 ]<br>
$Translation: faq.html,v 1.70 2007/02/09 18:47:15 paldium Exp $<br>
@


1.66
log
@sync with Steelix CVS
@
text
@d173 1
a173 1
Zur Zeit werden fast alle Übertragungen in Computernetzwerken
d198 1
a198 1
Personendaten, Finanzdaten, etc. Zur Zeit kann jeder mit Zugriff auf das
d533 1
a533 1
wenn du eine Shellinitialisierung (.profile, .bashrc, .chsrc, etc.) hast,
d1250 1
a1250 1
$Translation: faq.html,v 1.68 2006/08/06 14:08:11 paldium Exp $<br>
@


1.65
log
@sync with steelix translation CVS
@
text
@d58 1
a58 1
<li><a href= "#3.5">3.5 - Passwortauthentifikation funktioniert nicht (z.B. unter Slackware 7.0 oder Red Hat 6.x)</a>
d155 1
a155 1
	<li>Starke Authentifikation.  Schließt verschiedene Sicherheitslöcher (z.B. IP-, ,routing'-, und DNS-,spoofing').
d158 1
a158 1
	<li>Willkürliche TCP/IP-Ports können durch den verschlüsselten Kanal in beide Richtungen gelenkt werden (z.B. für e-cash-Transaktionen).
d587 1
a587 1
möglich, die Dienste, die verschlüsselt werden sollen (z.B. fetchmail,
d674 1
a674 1
Pfadangabe zu, z.B.:
d690 1
a690 1
Version den Clients mit, wenn sie eine Verbindung aufbauen, z.B.
d728 1
a728 1
der Anwender eine Authentifikation zum Login benötigt (z.B. leeres Passwort).
d818 2
a819 2
Zufallszahlengenerator besitzen (z.B. Solaris &lt; 9, AIX &lt; 5.2, HP-UX
&lt; 11.11) und kein Ersatz verfügbar ist (z.B. <a href=
d886 1
a886 1
<h2><a name= "3.5">3.5 - Passwortauthentifikation funktioniert nicht (z.B. unter Slackware 7.0 oder Red Hat 6.x)</a></h2>
d936 1
a936 1
Wenn dein System eine separate libcrypt-Bibliothek hat (z.B.
d1104 1
a1104 1
Das gilt z.B. für HP-UX 11.X.<p>
d1222 1
a1222 1
  <li>Module, die sich auf ,module-private' Daten verlassen (z.B.
d1238 1
a1238 1
geändert. Das bedeutet, dass sshd-Binaries, die unter AIX 4.x erzeugt
d1250 1
a1250 1
$Translation: faq.html,v 1.67 2006/04/24 17:44:31 paldium Exp $<br>
@


1.64
log
@sync with Steelix CVS
@
text
@d8 1
a8 2
<meta http-equiv="Content-Language" content="de">
<meta name= "description"   content= "Die FAQ-Seite des OpenSSH-Projekts">
d11 1
a11 1
<meta name= "copyright"     content= "Dieses Dokument unterliegt dem Copyright von OpenBSD 1999 - 2005.">
d1249 2
a1250 2
Originally [OpenBSD: faq.html,v 1.106 ]
$Translation: faq.html,v 1.66 2006/04/19 14:23:46 paldium Exp $
@


1.63
log
@sync with steelix translation CVS
@
text
@d474 10
d1250 2
a1251 2
Originally [OpenBSD: faq.html,v 1.105 ]
$Translation: faq.html,v 1.65 2006/01/19 16:35:17 paldium Exp $
@


1.62
log
@sync with steelix translation CVS
@
text
@d1240 2
a1241 2
Originally [OpenBSD: faq.html,v 1.103 ]
$Translation: faq.html,v 1.64 2006/01/10 12:18:05 paldium Exp $
@


1.61
log
@sync with steelix translation CVS
@
text
@d40 1
a40 1
<li><a href= "#2.4">2.4 - Warum gibt OpenSSH folgendes aus: Dispatch protocol error: type 20</a>
d162 1
a162 1
	<li>Der Client authentifiziert die Servermaschine am Beginn jeder Verbindung mit RSA, um ,trojanischen Pferden' (durch ,routing'- oder DNS-,spoofing') und ,man-in-the-middle'-Angriffen vorzubeugen, und der Server tut das gleiche mit der Clientmaschine bevor er <i>.rhosts</i>- oder <i>/etc/hosts.equiv</i>-Authentifikation erlaubt (um DNS-, ,routing'- oder IP-,spoofing' vorzubeugen).
d376 1
a376 1
<h2><a name= "2.4">2.4 - Warum gibt OpenSSH folgendes aus: Dispatch protocol error: type 20</a></h2>
d629 1
a629 1
ssh besitzt des weiteren die Option -N, welche praktisch für das
d1124 1
a1124 1
In diesem Falle kann es behoben werden, indem folgendes auf dem Server
d1241 1
a1241 1
$Translation: faq.html,v 1.63 2005/12/06 20:37:28 paldium Exp $
@


1.60
log
@sync with Steelix CVS
@
text
@d221 1
a221 1
Betriebssysteme, die zur Zeit unterstützt werden, sind:
d1241 1
a1241 1
$Translation: faq.html,v 1.62 2005/09/23 14:29:17 paldium Exp $
@


1.59
log
@sync with Steelix CVS
@
text
@d21 1
a21 1
<strong>Datum: 25.01.2005</strong>
d581 2
d587 5
a591 3
Port-Weiterleiten erlaubt und die Option -f, welche ssh zuweist, im
Hintergrund weiterzuarbeiten. Siehe weiter unten für mehr Details zu
diesen Optionen.
d1240 2
a1241 2
Originally [OpenBSD: faq.html,v 1.101 ]
$Translation: faq.html,v 1.61 2005/09/14 16:16:40 paldium Exp $
@


1.58
log
@sync with Steelix CVS
@
text
@d12 1
a12 1
<meta name= "copyright"     content= "This document copyright 1999-2005 OpenBSD.">
d1237 1
a1237 1
$Translation: faq.html,v 1.60 2005/09/01 07:42:40 jufi Exp $
@


1.57
log
@sync with steelix translation CVS
@
text
@d717 1
a717 1
inklusive diesen hier.
d1237 1
a1237 1
$Translation: faq.html,v 1.59 2005/05/20 16:33:52 paldium Exp $
@


1.56
log
@sync with steelxi translation CVS
@
text
@d857 1
a857 1
href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&m=102646106016694">
d1236 2
a1237 2
Originally [OpenBSD: faq.html,v 1.100 ]
$Translation: faq.html,v 1.58 2005/05/19 17:32:46 paldium Exp $
@


1.55
log
@sync with Steelix CVS
@
text
@d38 1
a38 1
<li><a href= "#2.2">2.2 - Warum ist der ssh Client setuid root?</a>
d66 1
a66 1
<li><a href= "#3.12">3.12 - Ich habe ein Upgrade auf OpenSSH 3.1 durchgeführt und dann ging X11-Weiterleitung nicht mehr.</a>
d133 2
a134 2
OpenSSH erscheint in zwei herunterladbaren Distributionen: der nativen <a
href="openbsd.html">OpenBSD</a>-Distribution und der Multiplattform
d137 2
a138 2
benötigst, möchtest du vermutlich die <a
href="openbsd.html">OpenBSD</a>-Distribution. Falls du OpenSSH für
d140 2
a141 2
benötigst, möchtest du vermutlich die <a
href="portable.html">Portable</a>-Distribution.
d144 2
a145 2
Wenn du herunterlädst, verwende bitte einen ,<a
href="portable.html#mirrors">mirror</a>' in deiner Nähe.
d270 1
a270 1
zur <a href="http://www.openssh.com/">OpenSSH-Webseite</a> gibt es
d308 2
a309 2
Option <b>-o</b> des <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>-Kommandos
d405 2
a406 2
manifestiert sich darin, dass der <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a>
d409 2
a410 2
<b>HINWEIS:</b> Benutze das <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a>-Programm
d543 1
a543 1
<h2><a name="2.10">2.10 - Werdet ihr [foo] zu scp hinzufügen?</a></h2>
d937 8
d1196 1
a1196 1
<a name ="3.15fn1">[1]</a> Einige Verkäufer, insbesondere
d1237 1
a1237 1
$Translation: faq.html,v 1.57 2005/05/13 13:40:14 paldium Exp $
@


1.54
log
@sync with OpenBSD CVS
@
text
@d557 4
a560 3
standardisiert ist (naja, ein
,<a href="http://www.ietf.org/internet-drafts/draft-ietf-secsh-filexfer-05.txt">
draft standard</a>') und Client sowie Server voneinander getrennt sind.
d1228 2
a1229 2
Originally [OpenBSD: faq.html,v 1.99 ]
$Translation: faq.html,v 1.56 2005/04/19 13:54:42 paldium Exp $
@


1.53
log
@Sync with Steelix CVS
@
text
@d70 1
d1213 7
d1227 2
a1228 2
Originally [OpenBSD: faq.html,v 1.98 ]
$Translation: faq.html,v 1.55 2005/02/26 21:49:20 paldium Exp $
@


1.52
log
@sync with Steelix CVS
@
text
@d473 9
d1219 2
a1220 2
Originally [OpenBSD: faq.html,v 1.97 ]
$Translation: faq.html,v 1.54 2005/01/26 14:55:57 paldium Exp $
@


1.51
log
@Sync with Steelix CVS
@
text
@d12 1
a12 1
<meta name= "copyright"     content= "This document copyright 1999-2004 OpenBSD.">
d19 1
a19 1
<h1>OpenSSH FAQ (Häufig gestellte Fragen)</h1>
d21 1
a21 1
<strong>Datum: 12.04.2004</strong>
d59 1
a59 1
<li><a href= "#3.5">3.5 - Passwortauthentifikation funktioniert nicht unter Slackware 7.0 oder Red Hat 6.x</a>
d69 1
d862 1
a862 1
<h2><a name= "3.5">3.5 - Passwortauthentifikation funktioniert nicht unter Slackware 7.0 oder Red Hat 6.x</a></h2>
d865 30
a894 1
Fü Slackware 7.0 musst du OpenSSH mit der libcrypt verlinken.
d900 1
a900 1
LIBS=-lcrypt ./configure [Optionen]
d906 3
a908 8
<p> Einige Versionen von Red Hat haben Passwort-Tools, die zwar MD5-style
Passwörter erstellen, die von der crypt()-Funktion des Systems jedoch
nicht verstanden werden. Wenn Passwortauthentifikation für neue
Accounts oder Accounts mit Passwörtern, die vor kurzem geändert
worden sind, fehlschlagen, es aber mit alten Accounts funktioniert, ist
das sehr wahrscheinlich der Grund. (Betroffene Accounts haben
Passwort-Zeichenketten in <i>/etc/shadow</i>, die mit <code>$1$</code>
beginnen).
d910 1
d912 3
a914 2
Um das Problem zu behebnen, aktiviere MD5-Unterstützung in sshd
während der Entwicklungsphase, um das Problem zu beheben:
d920 1
a920 1
./configure --with-md5-passwords [Optionen]
d1119 85
d1210 2
a1211 2
Originally [OpenBSD: faq.html,v 1.91 ]
$Translation: faq.html,v 1.52 2005/01/18 14:33:47 paldium Exp $
@


1.50
log
@Sync with Steelix CVS
@
text
@d1097 5
a1101 3
Originally [OpenBSD: faq.html,v 1.91 ]<br>
$Translation: faq.html,v 1.51 2004/12/22 12:29:54 paldium Exp $<br>
$OpenBSD: faq.html,v 1.91 2004/12/22 02:06:00 david Exp $
@


1.49
log
@Sync with Steelix CVS
@
text
@d16 1
a16 1
<img alt="[OpenSSH]" height=30 width=141 src="../images/smalltitle.gif">
d1097 3
a1099 3
Originally [OpenBSD: faq.html,v 1.90 ]<br>
$Translation: faq.html,v 1.50 2004/12/15 15:00:31 paldium Exp $<br>
$OpenBSD: faq.html,v 1.90 2004/09/11 03:40:48 jaredy Exp $
@


1.48
log
@Sync with Steelix CVS
@
text
@d9 1
a9 1
<meta name= "description"   content= "Die OpenSSH FAQ Seite">
d43 2
a44 2
<li><a href= "#2.7">2.7 - X11 und/oder ,agent forwarding' funktioniert nicht.</a>
<li><a href= "#2.8">2.8 - Nach dem Upgrade auf OpenSSH habe ich keine SSH2 Unterstützung mehr.</a>
d47 2
a48 2
<li><a href= "#2.11">2.11 - Wie verwende ich ,port forwarding'?</a>
<li><a href= "#2.12">2.12 - Meine ssh Verbindung friert ein oder steigt nach N Minuten Inaktivität aus.</a>
d53 1
a53 1
<h3><a href= "#3.0">3.0 - Fragen zum ,portablen OpenSSH'</a></h3>
d55 2
a56 2
<li><a href= "#3.1">3.1 - Unechte PAM Authentifikations-Meldungen in den Logdateien.</a>
<li><a href= "#3.2">3.2 - Leere Passwörter sind bei der PAM Authentifikation nicht erlaubt.</a>
d58 4
a61 4
<li><a href= "#3.4">3.4 - "Can't locate module net-pf-10" Meldungen im Log unter Linux.</a>
<li><a href= "#3.5">3.5 - Passwort Authentifikation funktioniert nicht unter Slackware 7.0 oder Red Hat 6.x</a>
<li><a href= "#3.6">3.6 - Configure oder sshd(8) beschweren sich über fehlende RSA Unterstützung</a>
<li><a href= "#3.7">3.7 - "scp: command not found" Fehler</a>
d66 3
a68 3
<li><a href= "#3.12">3.12 - Ich habe ein Upgrade auf OpenSSH 3.1 durchgeführt und dann ging ,X11 forwarding' nicht mehr.</a>
<li><a href= "#3.13">3.13 - Ich habe ein Upgrade auf OpenSSH 3.8 durchgeführt und dann gingen einige X11 Programme nicht mehr.</a>
<li><a href= "#3.14">3.14 - Ich habe meinen öffentlichen Schlüssel in authorized_keys kopiert, aber public-key Authentifizierung funktioniert immernoch nicht.</a>
d80 1
a80 1
OpenSSH ist eine <b>FREIE</b> Version der SSH Suite von
d88 1
a88 1
(connection hijacking) und andere Angriffe auf Netzwerk-Ebene
d92 3
a94 3
Die OpenSSH Suite beinhaltet das
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>
Programm, das rlogin und telnet ersetzt, und
d103 1
a103 2
<a href="../txt/draft-ietf-secsh-filexfer-02.txt">secsh-filexfer</a> IETF
Entwurf.
d109 1
a109 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> - Server Programm, das auf der Server-Maschine läuft. Es lauscht, ob es Verbindungswünsche von Client-Maschinen gibt und führt dann eine Authentifikation durch, bevor es den Client bedient.
d113 1
a113 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> - Dies ist das Client Programm, das benutzt wird, um sich auf einer anderen Maschine einzuloggen oder dort Kommandos auszuführen. <i>slogin</i> ist ein weiterer Name für dieses Programm.
d116 2
a117 2
ssh_config(5)</a></i> und den benutzerspezifischen <i>$HOME/.ssh/config</i>
Dateien verwaltet.
d119 4
a122 4
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> - Wird benutzt, um ,Pubkey Authentication' (RSA or DSA) Schlüssel zu erzeugen (,host keys' und ,user authentication keys').
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-agent&amp;sektion=1">ssh-agent(1)</a> - Authentifikations-Agent.  Er kann benutzt werden, um RSA Schlüssel für die Authentifikation bereitzuhalten.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&amp;sektion=1">ssh-add(1)</a> - Wird benutzt, um neue Schlüssel beim Agent zu registrieren.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a> - SFTP Server Subsystem.
d124 2
a125 2
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keyscan&amp;sektion=1">ssh-keyscan(1)</a> - Sammelt ssh ,public keys' ein.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign&amp;sektion=8">ssh-keysign(8)</a> - ssh Hilfs-Programm für Host-basierende Authentifikation.
d132 1
a132 1
href="openbsd.html">OpenBSD</a> Distribution und der Multi-Plattform
d136 2
a137 2
href="openbsd.html">OpenBSD</a> Distribution. Falls du OpenSSH für
eine andere Plattform oder für eine ältere OpenBSD Version
d139 1
a139 1
href="portable.html">Portable</a> Distribution.
d142 2
a143 2
Wenn du herunterlädst, verwende bitte einen <a
href="portable.html#mirrors">mirror</a> in deiner Nähe.
d149 1
a149 1
Netzwerk-Verbindungen sicherer zu machen. Hier ist eine Liste der
d154 1
a154 1
	<li>Starke Authentifikation.  Schließt verschiedene Sicherheitslöcher (z.B. IP, routing, und DNS ,spoofing').
d156 2
a157 2
	<li>Sichere X11 Sitzungen.  Das Programm setzt DISPLAY auf der Server Maschine automatisch und leitet alle X11 Verbindungen über den sicheren Kanal weiter.
	<li>Willkürliche TCP/IP Ports können durch den verschlüsselten Kanal in beide Richtungen gelenkt werden (z.B. für e-cash Transaktionen).
d159 6
a164 6
	<li>Vertraut nie dem Netzwerk. Minimales Vertrauen auf der Gegenseite der Verbindung. Minimales Vertrauen gegenüber den Domain Name Servern. Pure RSA Authentifikation vertraut nichts und niemandem, bis auf den ,private key'.
	<li>Der Client authentifiziert die Servermaschine am Beginn jeder Verbindung mit RSA, um ,trojanischen Pferden' (durch routing oder DNS ,spoofing') und ,man-in-the-middle' Angriffen vorzubeugen, und der Server tut das gleiche mit der Clientmaschine bevor er <i>.rhosts</i> oder <i>/etc/hosts.equiv</i> Authentifikation erlaubt (um DNS, routing oder IP ,spoofing' vorzubeugen).
	<li>Die ,host authentication key' Distribution kann zentral laufen, wird jedoch automatisch, sobald die erste Verbindung zur Maschine geöffnet wird.
	<li>Jeder Benutzer kann beliebig viele RSA Authentifikations-Schlüssel zur eigenen Verwendung erzeugen.
	<li>Das Server-Programm hat seinen eigenen RSA Schlüssel, der jede Stunde automatisch neu erzeugt wird.
	<li>Ein Authentifikations-Agent, der auf dem Laptop oder der Workstation des Benutzers läuft, kann benutzt werden, um die RSA Authentifikations-Schlüssel des Anwenders zu halten.
d167 1
a167 1
	<li>Optionale Kompression aller Daten mittels gzip (inklusive ,forwarded X11' und TCP/IP Daten), was zu bedeutenden Beschleunigungen auf langsamen Verbindungen führen kann.
d172 1
a172 1
Zur Zeit werden fast alle Übertragungen in Computer-Netzwerken
d241 1
a241 1
befindet sich auf der <a href="users.html">OpenSSH Benutzer Seite</a>.
d246 1
a246 1
von Patent- oder Copyright-Problemen zu halten. Dazu mussten einige
d252 3
a254 3
Im SSH1 Modus sind nur 3DES und Blowfish möglich.
Im SSH2 Modus können nur 3DES, Blowfish, CAST128, Arcfour und AES
ausgewählt werden. Der patentierte IDEA Algorithmus wird nicht
d258 2
a259 2
OpenSSH bietet Unterstützung für sowohl das SSH1 als auch das
SSH2 Protokoll.
d262 2
a263 2
Seit das RSA Patent ausgelaufen ist, gibt es keinerlei Beschränkungen
mehr für Software, die den RSA Algorithmus benutzen, inklusive OpenBSD.
d268 1
a268 1
zur <a href="http://www.openssh.com/">OpenSSH Webseite</a> gibt es
d272 1
a272 1
OpenSSH Mailingliste wurde archiviert und steht in durchsuchbarer Form unter
d277 1
a277 1
Mehr Informationen über das Abonnieren von OpenSSH bezogenen
d279 1
a279 1
<a href="list.html">OpenSSH Mailinglisten</a>.
d282 2
a283 2
Informationen zum Senden von Bugreports können auf der OpenSSH
<a href="report.html">Bugs melden</a> Seite gefunden werden.
d289 4
a292 4
Der OpenSSH Client benutzt die unteren Ports für rhosts und rhosts-rsa
Authentifikation, da der Server dem Benutzernamen vertrauen muss, den der
Client liefert. Um das zu umgehen, kannst du das Beispiel weiter unten
in deine <i>ssh_config</i> oder <i>~/.ssh/config</i> Datei kopieren.
d306 3
a308 3
<b>-o</b> Option des <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a>
Kommandos benutzt.
d320 1
a320 1
<h2><a name= "2.2">2.2 - Warum ist der ssh Client setuid root?</a></h2>
d324 2
a325 2
braucht OpenSSH ,root authority', um sich an die unteren und privilegierten
Ports binden zu können, um dann eine <i>rhosts Authentifikation</i>
d327 1
a327 1
für rhosts-rsa Authentifikation zu älteren SSH Versionen.
d330 4
a333 4
Zusätzlich gilt sowohl für <i>rhosts-rsa Authentifikation</i>
(in Protokoll Version 1) als auch für <i>host-basierte Authentifikation</i>
(in Protokoll Version 2), dass der ssh Client Zugang zum
<i>private host key</i> braucht, um die Clientmaschine am Server
d335 2
a336 2
OpenSSH Versionen vor 3.3 benötigten das <code>ssh</code> Binary
mit gesetztem setuid Bit, um das zu erreichen, aber du kannst das Bit
d344 3
a346 3
wird benutzt, um die privaten hosts keys auszulesen, und ssh benutzt
standardmäßig keine privilegierten Source Ports. Wenn du
doch einen benutzen willst, musst du das setuid Bit von <code>ssh</code>
d352 2
a353 2
SSH 2.3 und frühere Versionen haben einen Fehler in ihrer HMAC
Implementierung. Ihr Code hat nicht die komplette Ausgabe des Datenblocks
d361 2
a362 2
Alternativ kannst du das folgende in deine SSH 2.3 <i>/etc/sshd2_config</i>
einfügen.
d379 1
a379 1
Das kommerzielle SSH 2.3 versucht dieses Feature abzulehnen, und es kann
d381 5
a385 5
&quot;<b>Dispatch protocol error: type 20 </b>&quot; kann zu lesen sein.
Das Problem wird entweder durch ein Upgrade auf eine aktuelle OpenSSH
Version oder Abschalten des ,rekeying' durch Hinzufügen des
folgenden in die kommerzielle SSH 2.3 <i>ssh2_config</i> oder
<i>sshd2_config</i> behoben.
d405 1
a405 1
seinen host key nicht lesen kann. Um das Problem zu lösen, benutze
d408 2
a409 2
href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a>
Programm von dem kommerziellen SSH Produkt und *NICHT* OpenSSH für
d427 3
a429 3
des kommerziellen SSH Programms hat einen Fehler beinhaltet, der dazu
führte, dass es von Zeit zu Zeit ,Pubkey Authentication (RSA oder
DSA) keys' generiert hat, deren ,Most Significant Bit' (MSB) nicht
d431 1
a431 2
angekündigt, waren aber tatsächlich die Hälfte der Zeit
kürzer als behauptet.
d435 1
a435 1
Um diese Warnungen loszuwerden, passe deine <i>known_hosts</i> Datei an und
d439 1
a439 1
<h2><a name= "2.7">2.7 - X11 und/oder ,agent forwarding' funktioniert nicht.</a></h2>
d443 2
a444 2
voreingestellten Konfigurationsdateien schalten ,authentication agent' und
,X11 forwarding' ab. Füge die Zeilen unten in die <i>sshd_config</i>
d473 2
a474 2
die <i>XAUTHORITY</i> Umgebungsvariable in <i>/etc/skel/.bashrc</i>
und damit das ,home directory' jedes Bash-Benutzers. Diese Variable wird
d489 1
a489 1
<h2><a name= "2.8">2.8 - Nach dem Upgrade auf OpenSSH habe ich keine SSH2 Unterstützung mehr.</a></h2>
d513 3
a515 3
wenn du eine Shell Initialisierung (.profile, .bashrc, .chsrc, etc.) hast,
die Ausgaben für nicht-interaktive Sitzungen produziert. Diese Ausgabe
verwirrt den sftp/scp Client. Hiermit kannst du prüfen, ob deine
d530 1
a530 1
deine Shell Initialisierung modifizieren.
d539 1
a539 1
Spezifikation am nächsten kommt, ist: "was rcp tut". Da das selbe Kommando
d547 2
a548 2
<a href="http://www.ietf.org/internet-drafts/draft-ietf-secsh-filexfer-05.txt">
draft standard</a>) und Client sowie Server voneinander getrennt sind.
d550 1
a550 1
<h2><a name= "2.11">2.11 - Wie verwende ich ,port forwarding'?</a></h2>
d555 1
a555 1
sein, um beispielsweise POP und SMTP Verbindungen zu verschlüsseln,
d557 3
a559 3
verschlüsselte Verbindungen hat. Das Tunneln verwendet ,port forwarding',
um eine Verbindung zwischen dem Client und dem Server herzustellen. Die Client
Software muss hierfür in der Lage sein, auf einen nicht-standardisierten
d572 2
a573 2
Benutzer das ,port forwarding' erlauben, die -D Option, welche das ,dynamic
port forwarding' erlaubt und die -f Option, welche ssh zuweist, im
d578 2
a579 2
Dies ist ein Beispiel für eine getunnelte IRC Sitzung von der Client
Maschine ,127.0.0.1' (localhost) zum entfernten Server ,server.example.com':
d593 1
a593 1
Dies tunnelt eine Verbindung zum IRC Server server.example.com und tritt mit
d599 2
a600 2
auf dem entfernten Server weitergeleitet, da das der Standard Port für
IRC Dienste ist.
d603 1
a603 1
Der remote Befehl ,sleep 10' wurde angegeben, um dem Dienst, der getunnelt
d606 3
a608 3
wird ssh sich beenden. Falls mehr Zeit benötigt wird, kann der sleep(1)
Wert entsprechend erhöht werden, oder alternativ könnte das oben
aufgelistete Beispiel als eine Funktion in die Benutzer Shell eingefügt
d613 3
a615 3
ssh besitzt des weiteren eine -N Option, welche praktisch für ,port
forwarding' ist: Wenn -N übergeben wurde, ist es nicht notwendig einen
remote Befehl (,sleep 10' in dem Beispiel oben) anzugeben. Allerdings
d617 1
a617 1
(anstatt zu beenden, wenn ein remote Befehl ausgeführt wurde), so dass
d621 1
a621 1
<h2><a name= "2.12">2.12 - Meine ssh Verbindung friert ein oder steigt nach N
d625 2
a626 2
Das ist üblicherweise das Resultat eines Paketfilters oder einem NAT
Gerät, das die TCP Verbindung wegen Inaktivität auslaufen
d664 1
a664 1
OpenSSH, wie die meisten SSH Implementierungen, teilt seinen Namen und seine
d673 2
a674 2
Diese Information wird von den Clients und Serven verwendet, um Protokoll
Kompatibilitätskniffe zu aktiveren, die veränderte, fehlerhafte
d676 2
a677 2
umgehen zu können. Dieser Protokollfunktions-Test ist weiterhin
benötigt, weil das SSH Protokoll noch nicht als RFC veröffentlicht
d682 1
a682 1
<h2><u><a name= "3.0">3.0 - Fragen zum ,portablen OpenSSH'</a></u></h2>
d684 1
a684 1
<h2><a name= "3.1">3.1 - Unechte PAM Authentifikations-Meldungen in den Logdateien.</a></h2>
d703 2
a704 2
der Anwender eine Authentifikation zum Login benötigt (leeres Passwort
z.B.). Dummerweise logt PAM alle Authentifikationversuche,
d713 1
a713 1
mitgelieferte <i>sshd_config</i> Datei benutzt.
d715 1
a715 1
<h2><a name= "3.2">3.2 - Leere Passwörter sind bei der PAM Authentifikation nicht erlaubt.</a></h2>
d718 4
a721 4
Um leere Passwörter in einer OpenSSH Version zu erlauben, die mit
PAM erzeugt wurde, musst du das ,nullok-Flag' an das Ende des
Password-Checking Moduls in der <i>/etc/pam.d/sshd</i>
Datei setzen. Zum Beispiel:
d736 1
a736 1
<i>sshd_config</i> Datei geschehen.
d739 2
a740 2
Es gibt einen Fallstrick beim Benutzen leerer Passwörter mit PAM
Authentifikation: PAM wird jegliches Passwort erlauben, wenn ein Account
d744 1
a744 1
wirklungslos und umgeht ebenso die Policy, die von
d746 1
a746 1
davon ab, die <b>nullok</b> Direktive in deiner PAM Konfigurationsdatei
d758 1
a758 1
"IPv6 zu IPv4" Adressen von Domänennamen aufzulösen. Das kann
d762 4
a765 4
<li>Es könnte ein DNS Auflösungsproblem vorliegen, entweder beim
Client oder beim Server. Du kannst den <code>nslookup</code> Befehl auf dem
Client und dem Server verwenden, um den Namen und die IP Adresse der Gegenseite
auflösen zu lassen. Lasse zusätzlich den Namen auf dem Server
d767 1
a767 1
zurückgegeben hat. Du kannst die meisten Lookups server-seitig durch
d777 2
a778 2
<li>OpenSSH Versionen vor 3.8 hatten eine <i>moduli</i> Datei mit moduli,
die kleiner waren als das, wonach OpenSSH Ausschau hielt, und als Resultat
d781 1
a781 1
geschah. Das Ersetzen der <i>moduli</i> Datei wird das Problem lösen
d785 1
a785 1
<li>OpenSSH Versionen vor 3.8 hatten einen Fehler in <code>ssh</code>, der
d792 1
a792 1
<li>Falls entweder der Server oder der Client keinen Kernel-basierten
d797 2
a798 2
aufgerufen wird, hängt. Das kann ermittelt werden, indem es im Debug
Modus ausgeführt wird:
d817 3
a819 3
<h3>Wie langsam ist "langsam"?</h3>
Unter normalen Umständen ist die Geschwindigkeit des SSH Logins
abhängig von der CPU Leistung des Clients und Servers. Zum Vergleich
d821 1
a821 1
true</code> mit einem 1024-Bit RSA Schlüssel auf einem ansonsten
d842 1
a842 1
langsamen Code auf HPPA für RSA und Diffie-Hellman Operationen (siehe
d848 1
a848 1
<h2><a name= "3.4">3.4 - "Can't locate module net-pf-10" Meldungen im Log unter Linux.</a></h2>
d851 1
a851 1
Der Linux Kernel sucht (via modprobe) nach der Protokollfamilie 10 (IPv6).
d861 1
a861 1
<h2><a name= "3.5">3.5 - Passwort Authentifikation funktioniert nicht unter Slackware 7.0 oder Red Hat 6.x</a></h2>
d877 2
a878 2
Passwörter erstellen, die von der crypt() Funktion des Systems jedoch
nicht verstanden werden. Wenn Passwort Authentifikation für neue
d886 1
a886 1
Um das Problem zu behebnen, aktiviere MD5 Unterstützung in sshd
d899 1
a899 1
<h2><a name= "3.6">3.6 - Configure oder sshd(8) beschweren sich über fehlende RSA oder DSA Unterstützung</a></h2>
d902 2
a903 2
Stelle sicher, dass deine OpenSSL Bibliotheken mit eingebauter RSA oder DSA
Unterstützung erzeugt wurden, entweder intern oder durch RSAref.
d906 1
a906 1
<h2><a name= "3.7">3.7 - "scp: command not found" Fehler</a></h2>
d910 3
a912 3
muss sich im Standard PATH sowohl auf dem Client als auch auf dem Server
befinden. Möglicherweise musst du die <b>--with-default-path</b>
Option angeben, um einen angepassten Pfad für die Suche auf dem
d930 1
a930 1
das Rücksetzen von PATH in <i>/etc/profile<i>, PATH in
d938 1
a938 1
Einige Betriebssysteme setzen <i>/dev/tty</i> mit falschen Modes, was
d954 2
a955 1
setzen und dann das ganze deinem Betriebssystem-Hersteller als Bug zu melden.
d961 3
a963 3
Wenn es keine ,configure' Datei in deiner tar.gz Datei gibt, die du
heruntergeladen hast, oder make mit einem "missing seperator" Fehler
versagt, hast du vermutlich die OpenBSD Distribution heruntergeladen
d965 1
a965 1
Bitte verwende die <a href="portable.html">portable version</a>.
d997 1
a997 1
Ein Umgehen des Problems für bash Anwender ist mittels eines
d999 2
a1000 2
~/.bashrc möglich. Ansonsten konsultiere die man page deiner Shell um
eine Option zu finden, mit der man aktiven Jobs ein HUP Signal senden kann,
d1027 1
a1027 1
bis <code>command</code> beendet ist, da der sshd den Exit-Status
d1033 1
a1033 1
durchgeführt und dann ging ,X11 forwarding' nicht mehr.</a></h2>
d1035 4
a1038 4
Beginnend mit OpenSSH 3.1 lauscht der sshd ,X11 forwarding' Server
standardmäßig auf localhost; siehe auch die sshd
<b>X11UseLocalhost</b> Option um zum vorherigen Verhalten
zurückzukehren, wenn deine älteren X11 Clients nicht mit dieser
d1041 1
a1041 1
Im Allgemeinen sollten X11 Clients, die X11 R6 benutzen, mit dieser
d1043 2
a1044 2
X11 Clients mit R6 und R5 libs ein, so dass einige Clients funktionieren
und andere nicht.
d1048 1
a1048 1
durchgeführt und dann gingen einige X11 Programme nicht
d1065 1
a1065 1
in authorized_keys kopiert, aber public-key Authentifizierung funktioniert
d1097 3
a1099 4
Originally [OpenBSD: faq.html,v 1.90 ]
<br>
$Translation: faq.html,v 1.49 2004/11/04 16:30:36 jufi Exp $
<br>
d1101 1
a1101 1
<small>$OpenBSD: faq.html,v 1.90 2004/09/11 03:40:48 jaredy Exp $</small>
@


1.47
log
@Sync with Steelix Translation CVS. Work by Tobias Stoeckmann, thanks again !
@
text
@d4 1
a4 1
<title>H&auml;ufig gestellte Fragen zu OpenSSH</title>
d19 1
a19 1
<h1>OpenSSH FAQ (H&auml;ufig gestellte Fragen)</h1>
d30 1
a30 1
<li><a href= "#1.3">1.3 - Welche Betriebssysteme werden unterst&uuml;tzt?</a>
d41 2
a42 2
<li><a href= "#2.5">2.5 - Alte Versionen des kommerziellen SSH verschl&uuml;sseln ,host keys' mit IDEA.</a>
<li><a href= "#2.6">2.6 - Was sind das f&uuml;r Warnmeldungen &uuml;ber Schl&uuml;ssell&auml;ngen?</a>
d44 1
a44 1
<li><a href= "#2.8">2.8 - Nach dem Upgrade auf OpenSSH habe ich keine SSH2 Unterst&uuml;tzung mehr.</a>
d46 1
a46 1
<li><a href= "#2.10">2.10 - Werdet ihr [foo] zu scp hinzuf&uuml;gen?</a>
d48 1
a48 1
<li><a href= "#2.12">2.12 - Meine ssh Verbindung friert ein oder steigt nach N Minuten Inaktivit&auml;t aus.</a>
d56 2
a57 2
<li><a href= "#3.2">3.2 - Leere Passw&ouml;rter sind bei der PAM Authentifikation nicht erlaubt.</a>
<li><a href= "#3.3">3.3 - ssh(1) ben&ouml;tigt sehr lange zum Verbinden oder zum Einloggen</a>
d60 1
a60 1
<li><a href= "#3.6">3.6 - Configure oder sshd(8) beschweren sich &uuml;ber fehlende RSA Unterst&uuml;tzung</a>
d64 5
a68 5
<li><a href= "#3.10">3.10 - H&auml;ngt beim Verlassen von ssh</a>
<li><a href= "#3.11">3.11 - Wieso h&auml;ngt ssh beim Beenden?</a>
<li><a href= "#3.12">3.12 - Ich habe ein Upgrade auf OpenSSH 3.1 durchgef&uuml;hrt und dann ging ,X11 forwarding' nicht mehr.</a>
<li><a href= "#3.13">3.13 - Ich habe ein Upgrade auf OpenSSH 3.8 durchgef&uuml;hrt und dann gingen einige X11 Programme nicht mehr.</a>
<li><a href= "#3.14">3.14 - Ich habe meinen &ouml;ffentlichen Schl&uuml;ssel in authorized_keys kopiert, aber public-key Authentifizierung funktioniert immernoch nicht.</a>
d84 4
a87 4
realisiert, dass ihr Passwort unverschl&uuml;sselt &uuml;ber
das Internet &uuml;bertragen wird, aber so ist es. OpenSSH
verschl&uuml;sselt den gesamten Verkehr (inklusive Passw&ouml;rtern),
um Mith&ouml;ren (eavesdropping), ,Entf&uuml;hren von Verbindungen'
d101 1
a101 1
die eine einfache L&ouml;sung f&uuml;r Datei&uuml;bertragungen realisieren.
d110 1
a110 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> - Server Programm, das auf der Server-Maschine l&auml;uft. Es lauscht, ob es Verbindungsw&uuml;nsche von Client-Maschinen gibt und f&uuml;hrt dann eine Authentifikation durch, bevor es den Client bedient.
d114 1
a114 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> - Dies ist das Client Programm, das benutzt wird, um sich auf einer anderen Maschine einzuloggen oder dort Kommandos auszuf&uuml;hren. <i>slogin</i> ist ein weiterer Name f&uuml;r dieses Programm.
d120 3
a122 3
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> - Wird benutzt, um ,Pubkey Authentication' (RSA or DSA) Schl&uuml;ssel zu erzeugen (,host keys' und ,user authentication keys').
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-agent&amp;sektion=1">ssh-agent(1)</a> - Authentifikations-Agent.  Er kann benutzt werden, um RSA Schl&uuml;ssel f&uuml;r die Authentifikation bereitzuhalten.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-add&amp;sektion=1">ssh-add(1)</a> - Wird benutzt, um neue Schl&uuml;ssel beim Agent zu registrieren.
d124 1
a124 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> - Sicheres Datei&uuml;bertragungsprogramm.
d126 1
a126 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign&amp;sektion=8">ssh-keysign(8)</a> - ssh Hilfs-Programm f&uuml;r Host-basierende Authentifikation.
d134 1
a134 1
<a href="portable.html">Portable</a> Distribution. Wenn du OpenSSH f&uuml;r
d136 4
a139 4
ben&ouml;tigst, m&ouml;chtest du vermutlich die <a
href="openbsd.html">OpenBSD</a> Distribution. Falls du OpenSSH f&uuml;r
eine andere Plattform oder f&uuml;r eine &auml;ltere OpenBSD Version
ben&ouml;tigst, m&ouml;chtest du vermutlich die <a
d143 2
a144 2
Wenn du herunterl&auml;dst, verwende bitte einen <a
href="portable.html#mirrors">mirror</a> in deiner N&auml;he.
d151 1
a151 1
Funktionalit&auml;ten:
d155 6
a160 6
	<li>Starke Authentifikation.  Schlie&szlig;t verschiedene Sicherheitsl&ouml;cher (z.B. IP, routing, und DNS ,spoofing').
	<li>Verbesserte Privatsph&auml;re.  Alle Verbindungen werden automatisch und transparent verschl&uuml;sselt.
	<li>Sichere X11 Sitzungen.  Das Programm setzt DISPLAY auf der Server Maschine automatisch und leitet alle X11 Verbindungen &uuml;ber den sicheren Kanal weiter.
	<li>Willk&uuml;rliche TCP/IP Ports k&ouml;nnen durch den verschl&uuml;sselten Kanal in beide Richtungen gelenkt werden (z.B. f&uuml;r e-cash Transaktionen).
	<li>F&uuml;r normale Benutzer wird keine Schulung und kein Training ben&ouml;tigt.
	<li>Vertraut nie dem Netzwerk. Minimales Vertrauen auf der Gegenseite der Verbindung. Minimales Vertrauen gegen&uuml;ber den Domain Name Servern. Pure RSA Authentifikation vertraut nichts und niemandem, bis auf den ,private key'.
d162 5
a166 5
	<li>Die ,host authentication key' Distribution kann zentral laufen, wird jedoch automatisch, sobald die erste Verbindung zur Maschine ge&ouml;ffnet wird.
	<li>Jeder Benutzer kann beliebig viele RSA Authentifikations-Schl&uuml;ssel zur eigenen Verwendung erzeugen.
	<li>Das Server-Programm hat seinen eigenen RSA Schl&uuml;ssel, der jede Stunde automatisch neu erzeugt wird.
	<li>Ein Authentifikations-Agent, der auf dem Laptop oder der Workstation des Benutzers l&auml;uft, kann benutzt werden, um die RSA Authentifikations-Schl&uuml;ssel des Anwenders zu halten.
	<li>Die Software kann auch ohne root-Privilegien installiert und benutzt werden (mit eingeschr&auml;nkter Funktionalit&auml;t).
d168 2
a169 2
	<li>Optionale Kompression aller Daten mittels gzip (inklusive ,forwarded X11' und TCP/IP Daten), was zu bedeutenden Beschleunigungen auf langsamen Verbindungen f&uuml;hren kann.
	<li>Kompletter Ersatz f&uuml;r rlogin, rsh und rcp.
d173 2
a174 2
Zur Zeit werden fast alle &Uuml;bertragungen in Computer-Netzwerken
unverschl&uuml;sselt durchgef&uuml;hrt. Als Konsequenz kann jeder, der
d176 1
a176 1
abh&ouml;ren. Das wird auch von Hackern, neugierigen Administratoren,
d178 1
a178 1
durchgef&uuml;hrt.
d180 2
a181 2
dass Daten sogar in gro&szlig;er Entfernung noch aufgefangen werden
k&ouml;nnen.
d185 1
a185 1
Wenn du dich einloggst, wird dein Passwort im Klartext &uuml;bertragen.
d187 1
a187 1
Es gibt weltweit viele Zeugnisse daf&uuml;r, dass Cracker auf dem Rechner
d189 2
a190 2
Anwenders einfach nur das Netzwerk belauscht und Passw&ouml;rter gesammelt
hat. Programme, die das tun, gibt es im Internet oder k&ouml;nnen von einem
d196 2
a197 2
Firmen haben Gesch&auml;ftsgeheimnisse, Patentantr&auml;ge in Vorbereitung,
Preisinformationen, Informationen &uuml;ber Vertragspartner, Kundendaten,
d200 1
a200 1
vor sich geht, und das noch ohne die normalen Zugriffsbeschr&auml;nkungen.
d205 1
a205 1
Netzwerk gesammelt werden k&ouml;nnen. Sie vertrauen darin, dass ihre
d208 1
a208 1
&uuml;bertragen werden. Dies ist keine sichere Einstellung.
d211 1
a211 1
<h2><a name= "1.3">1.3 - Welche Betriebssysteme werden unterst&uuml;tzt?</a></h2>
d218 1
a218 1
schnellen &Uuml;berblick &uuml;ber die portable Version von OpenSSH gibt
d220 1
a220 1
Betriebssysteme, die zur Zeit unterst&uuml;tzt werden, sind:
d248 2
a249 2
Optionen aus OpenSSH entfernt werden. N&auml;mlich die Unterst&uuml;tzung
f&uuml;r patentierte Algorithmen.
d252 5
a256 5
OpenSSH unterst&uuml;tzt keinerlei patentierte Transportalgorithmen.
Im SSH1 Modus sind nur 3DES und Blowfish m&ouml;glich.
Im SSH2 Modus k&ouml;nnen nur 3DES, Blowfish, CAST128, Arcfour und AES
ausgew&auml;hlt werden. Der patentierte IDEA Algorithmus wird nicht
unterst&uuml;tzt.
d259 1
a259 1
OpenSSH bietet Unterst&uuml;tzung f&uuml;r sowohl das SSH1 als auch das
d263 2
a264 2
Seit das RSA Patent ausgelaufen ist, gibt es keinerlei Beschr&auml;nkungen
mehr f&uuml;r Software, die den RSA Algorithmus benutzen, inklusive OpenBSD.
d268 1
a268 1
Es gibt mehrere Stellen, die du um Hilfe bitten kannst. Zus&auml;tzlich
d270 1
a270 1
mehrere Mailinglisten, in denen du dein Gl&uuml;ck versuchen kannst.
d275 1
a275 1
zur Verf&uuml;gung.
d278 1
a278 1
Mehr Informationen &uuml;ber das Abonnieren von OpenSSH bezogenen
d283 1
a283 1
Informationen zum Senden von Bugreports k&ouml;nnen auf der OpenSSH
d290 1
a290 1
Der OpenSSH Client benutzt die unteren Ports f&uuml;r rhosts und rhosts-rsa
d326 3
a328 3
Ports binden zu k&ouml;nnen, um dann eine <i>rhosts Authentifikation</i>
durchzuf&uuml;hren. Genauso notwendig ist dieser privilegierte Port
f&uuml;r rhosts-rsa Authentifikation zu &auml;lteren SSH Versionen.
d331 2
a332 2
Zus&auml;tzlich gilt sowohl f&uuml;r <i>rhosts-rsa Authentifikation</i>
(in Protokoll Version 1) als auch f&uuml;r <i>host-basierte Authentifikation</i>
d336 1
a336 1
OpenSSH Versionen vor 3.3 ben&ouml;tigten das <code>ssh</code> Binary
d338 1
a338 1
l&ouml;schen, wenn du diese Authentifizierungsmethoden nicht
d342 1
a342 1
Beginnend mit OpenSSH 3.3 ist <code>ssh</code> standardm&auml;&szlig;ig nicht
d346 1
a346 1
standardm&auml;&szlig;ig keine privilegierten Source Ports. Wenn du
d353 1
a353 1
SSH 2.3 und fr&uuml;here Versionen haben einen Fehler in ihrer HMAC
d356 1
a356 1
Bei l&auml;ngeren Anfragen konnte dann SSH 2.3 eben nicht mit OpenSSH
d361 1
a361 1
zuk&uuml;nftigen Versionen von SSH wird dieser Fehler behoben sein.
d363 1
a363 1
einf&uuml;gen.
d378 2
a379 2
Probleme bei der Zusammenarbeit treten auf, weil &auml;ltere Versionen
von OpenSSH noch keine Unterst&uuml;tzung f&uuml;r ,session rekeying' hatten.
d384 1
a384 1
Version oder Abschalten des ,rekeying' durch Hinzuf&uuml;gen des
d399 1
a399 1
<h2><a name= "2.5">2.5 - Alte Versionen des kommerziellen SSH verschl&uuml;sseln ,host keys' mit IDEA.</a></h2>
d403 1
a403 1
um ihren <i>/etc/ssh/ssh_host_key</i> zu verschl&uuml;sseln. Das Problem
d406 1
a406 1
seinen host key nicht lesen kann. Um das Problem zu l&ouml;sen, benutze
d410 1
a410 1
Programm von dem kommerziellen SSH Produkt und *NICHT* OpenSSH f&uuml;r
d423 1
a423 1
<h2><a name= "2.6">2.6 - Was sind das f&uuml;r Warnungen &uuml;ber Schl&uuml;ssell&auml;ngen?</a></h2>
d429 1
a429 1
f&uuml;hrte, dass es von Zeit zu Zeit ,Pubkey Authentication (RSA oder
d431 3
a433 3
gesetzt war. Solche Schl&uuml;ssel wurden zwar als ,mit voller L&auml;nge'
angek&uuml;ndigt, waren aber tats&auml;chlich die H&auml;lfte der Zeit
k&uuml;rzer als behauptet.
d436 1
a436 1
OpenSSH wird Warnungen ausgeben, wenn es solchen Schl&uuml;sseln begegnet.
d438 1
a438 1
ersetze die falsche Schl&uuml;ssell&auml;nge (normalerweise ,1024') mit
d444 1
a444 1
Pr&uuml;fe deine <i>ssh_config</i> und <i>sshd_config</i>. Die
d446 1
a446 1
,X11 forwarding' ab. F&uuml;ge die Zeilen unten in die <i>sshd_config</i>
d460 1
a460 1
und f&uuml;ge die folgenden Zeilen in die <i>ssh_config</i> ein:
d477 1
a477 1
von OpenSSH gesetzt und daher muss f&uuml;r die oben genannten
d491 1
a491 1
<h2><a name= "2.8">2.8 - Nach dem Upgrade auf OpenSSH habe ich keine SSH2 Unterst&uuml;tzung mehr.</a></h2>
d494 3
a496 3
Die Dateien <i>sshd_config</i> oder <i>ssh_config</i> k&ouml;nnen von
Version zu Version ver&auml;ndert werden. Du solltest immer nach solchen
&Auml;nderungen Ausschau halten, wenn du auf eine neue Version von OpenSSH
d498 1
a498 1
<i>sshd_config</i> einf&uuml;gen:
d514 1
a514 1
sftp und/oder scp k&ouml;nnen beim Aufbauen der Verbindung Probleme haben,
d516 2
a517 2
die Ausgaben f&uuml;r nicht-interaktive Sitzungen produziert. Diese Ausgabe
verwirrt den sftp/scp Client. Hiermit kannst du pr&uuml;fen, ob deine
d534 1
a534 1
<h2><a name="2.10">2.10 - Werdet ihr [foo] zu scp hinzuf&uuml;gen?</a></h2>
d541 3
a543 3
Spezifikation am n&auml;chsten kommt, ist: "was rcp tut". Da das selbe Kommando
auf beiden Seiten einer Verbindung benutzt wird, bedeutet das Hinzuf&uuml;gen
von Funktionalit&auml;ten oder Optionen das Risiko von Inkompatibilit&auml;ten
d547 1
a547 1
Neue Funktionalit&auml;ten sind eher in sftp wahrscheinlich, da das Protokoll
d555 5
a559 5
Wenn sshd(8) auf dem Server auf der Gegenseite l&auml;uft, kann es m&ouml;glich
sein, bestimmte Dienste durch ssh zu ,tunneln'. Das kann w&uuml;nschenswert
sein, um beispielsweise POP und SMTP Verbindungen zu verschl&uuml;sseln,
selbst wenn die Software keine eigene Unterst&uuml;tzung f&uuml;r
verschl&uuml;sselte Verbindungen hat. Das Tunneln verwendet ,port forwarding',
d561 2
a562 2
Software muss hierf&uuml;r in der Lage sein, auf einen nicht-standardisierten
Port verbinden zu k&ouml;nnen.
d565 1
a565 1
Die Idee dahinter ist, dass der Client sich mit dem entfernten System &uuml;ber
d568 1
a568 1
m&ouml;glich, die Dienste, die verschl&uuml;sselt werden sollen (z.B. fetchmail,
d570 1
a570 1
&uuml;bergeben wurde, zu starten, und die Verbindung wird durch ssh getunnelt.
d576 1
a576 1
Hintergrund weiterzuarbeiten. Siehe weiter unten f&uuml;r mehr Details zu
d580 1
a580 1
Dies ist ein Beispiel f&uuml;r eine getunnelte IRC Sitzung von der Client
d598 2
a599 2
benutzt wird, so lange er gr&ouml;&szlig;er ist als 1023 (bedenke, nur root
kann Sockets auf privilegierten Ports &ouml;ffnen) und keine St&ouml;rung
d601 1
a601 1
auf dem entfernten Server weitergeleitet, da das der Standard Port f&uuml;r
d608 4
a611 4
wird ssh sich beenden. Falls mehr Zeit ben&ouml;tigt wird, kann der sleep(1)
Wert entsprechend erh&ouml;ht werden, oder alternativ k&ouml;nnte das oben
aufgelistete Beispiel als eine Funktion in die Benutzer Shell eingef&uuml;gt
werden. Siehe ksh(1) und csh(1) f&uuml;r weitere Details &uuml;ber
d615 2
a616 2
ssh besitzt des weiteren eine -N Option, welche praktisch f&uuml;r ,port
forwarding' ist: Wenn -N &uuml;bergeben wurde, ist es nicht notwendig einen
d618 2
a619 2
f&uuml;hrt die Benutzung dieser Option dazu, dass ssh f&uuml;r immer wartet
(anstatt zu beenden, wenn ein remote Befehl ausgef&uuml;hrt wurde), so dass
d624 1
a624 1
Minuten Inaktivit&auml;t aus.</a></h2>
d627 3
a629 3
Das ist &uuml;blicherweise das Resultat eines Paketfilters oder einem NAT
Ger&auml;t, das die TCP Verbindung wegen Inaktivit&auml;t auslaufen
l&auml;sst. Du kannst <b>ClientAliveInterval</b> in der <i><a
d634 2
a635 2
ssh_config</a></i> des Clients erm&ouml;glichen (die letzte Option ist in
OpenSSH 3.8 und neuer verf&uuml;gbar).
d639 3
a641 3
k&uuml;rzer als die ben&ouml;tigte Zeit ist, um die Verbindung auslaufen zu
lassen, sorgen daf&uuml;r, dass die Verbindung in der Verbindungstablle des
Ger&auml;tes ,frisch' gehalten wird.
d676 1
a676 1
Kompatibilit&auml;tskniffe zu aktiveren, die ver&auml;nderte, fehlerhafte
d678 3
a680 3
umgehen zu k&ouml;nnen. Dieser Protokollfunktions-Test ist weiterhin
ben&ouml;tigt, weil das SSH Protokoll noch nicht als RFC ver&ouml;ffentlicht
wurde und weitere inkompatible &Auml;nderungen m&ouml;glicherweise gemacht
d705 1
a705 1
der Anwender eine Authentifikation zum Login ben&ouml;tigt (leeres Passwort
d710 1
a710 1
Wenn es dich zu sehr st&ouml;rt, setze
d713 2
a714 2
mehr m&ouml;glich ist, sich in Accounts mit leeren Passw&ouml;rtern
einzuloggen. Das ist im &uuml;brigen bereits der Standard, wenn du die
d717 1
a717 1
<h2><a name= "3.2">3.2 - Leere Passw&ouml;rter sind bei der PAM Authentifikation nicht erlaubt.</a></h2>
d720 1
a720 1
Um leere Passw&ouml;rter in einer OpenSSH Version zu erlauben, die mit
d736 1
a736 1
Das muss zus&auml;tzlich zum Setzen von
d741 1
a741 1
Es gibt einen Fallstrick beim Benutzen leerer Passw&ouml;rter mit PAM
d745 1
a745 1
benutzt, um zu pr&uuml;fen, ob der Account ein Passwort gesetzt hat,
d749 1
a749 1
zu setzen, es sei denn, du willst leere Passw&ouml;rter explizit erlauben.
d752 1
a752 1
<h2><a name= "3.3">3.3 - ssh(1) ben&ouml;tigt sehr lange zum Verbinden oder zum Einloggen</a></h2>
d755 2
a756 2
Gro&szlig;e Verz&ouml;gerungen (mehr als 10 Sekunden) werden normalerweise
durch Probleme mit der Namensaufl&ouml;sung verursacht:
d759 2
a760 2
ausgeliefert wurde) k&ouml;nnen einen langen Zeitraum ben&ouml;tigen, um
"IPv6 zu IPv4" Adressen von Dom&auml;nennamen aufzul&ouml;sen. Das kann
d764 1
a764 1
<li>Es k&ouml;nnte ein DNS Aufl&ouml;sungsproblem vorliegen, entweder beim
d767 4
a770 4
aufl&ouml;sen zu lassen. Lasse zus&auml;tzlich den Namen auf dem Server
aufl&ouml;sen, den der Client beim Aufl&ouml;sen der IP-Adresse des Servers
zur&uuml;ckgegeben hat. Du kannst die meisten Lookups server-seitig durch
das Hinzuf&uuml;gen von <b>UseDNS no</b> in <i>sshd_config</i>
d775 1
a775 1
Verz&ouml;gerungen unter 10 Sekunden k&ouml;nnen andere Ursachen haben.
d781 4
a784 4
w&uuml;rde sshd am Ende moduli verwenden, die bedeutlich gr&ouml;&szlig;er
w&auml;ren als die, die angefragt wurden, was auf Kosten der Geschwindigkeit
geschah. Das Ersetzen der <i>moduli</i> Datei wird das Problem l&ouml;sen
(bedenke, dass diese Datei bei einem Upgrade in den meisten F&auml;llen nicht
d788 1
a788 1
dazu f&uuml;hrte, dass es gr&ouml;&szlig;ere moduli anforderte als erwartet
d790 2
a791 2
Geschwindigkeitseinbu&szlig;en endete).
Ein Upgrade des Clients auf Version 3.8 oder h&ouml;her wird das Problem
d796 2
a797 2
&lt; 11.11) und kein Ersatz verf&uuml;gbar ist (z.B. <a href=
"ftp://ftp.ayamura.org/pub/prngd/">prngd</a>), ist es m&ouml;glich, dass ein
d799 2
a800 2
aufgerufen wird, h&auml;ngt. Das kann ermittelt werden, indem es im Debug
Modus ausgef&uuml;hrt wird:
d812 1
a812 1
Alle beachtlichen Verz&ouml;gerungen sollten untersucht und behoben,
d820 4
a823 4
Unter normalen Umst&auml;nden ist die Geschwindigkeit des SSH Logins
abh&auml;ngig von der CPU Leistung des Clients und Servers. Zum Vergleich
folgen typische Verbindungszeiten f&uuml;r <code>time ssh localhost
true</code> mit einem 1024-Bit RSA Schl&uuml;ssel auf einem ansonsten
d841 1
a841 1
kryptographisch schw&auml;cher als SSHv2.<br>
d844 1
a844 1
langsamen Code auf HPPA f&uuml;r RSA und Diffie-Hellman Operationen (siehe
d859 2
a860 2
Aus irgendeinem bl&ouml;dsinnigen Grund kann
<i>/etc/modules.conf</i> auch <i>/etc/conf.modules</i> hei&szlig;en.
d866 1
a866 1
F&uuml; Slackware 7.0 musst du OpenSSH mit der libcrypt verlinken.
d879 3
a881 3
Passw&ouml;rter erstellen, die von der crypt() Funktion des Systems jedoch
nicht verstanden werden. Wenn Passwort Authentifikation f&uuml;r neue
Accounts oder Accounts mit Passw&ouml;rtern, die vor kurzem ge&auml;ndert
d888 2
a889 2
Um das Problem zu behebnen, aktiviere MD5 Unterst&uuml;tzung in sshd
w&auml;hrend der Entwicklungsphase, um das Problem zu beheben:
d901 1
a901 1
<h2><a name= "3.6">3.6 - Configure oder sshd(8) beschweren sich &uuml;ber fehlende RSA oder DSA Unterst&uuml;tzung</a></h2>
d905 1
a905 1
Unterst&uuml;tzung erzeugt wurden, entweder intern oder durch RSAref.
d913 3
a915 3
befinden. M&ouml;glicherweise musst du die <b>--with-default-path</b>
Option angeben, um einen angepassten Pfad f&uuml;r die Suche auf dem
Server angeben zu k&ouml;nnen. Diese Option ersetzt den Standardpfad, so dass
d931 3
a933 3
gegen&uuml;ber der Option <b>--with-default-path</b> hat. Das beinhaltet
das R&uuml;cksetzen von PATH in <i>/etc/profile<i>, PATH in
<i>/etc/environment</i> unter AIX oder (f&uuml;r 3.7p1 und h&ouml;her) das
d941 2
a942 2
zum Fehler beim Lesen von Passw&ouml;rtern mit folgender Fehlermeldung
f&uuml;hrt:
d955 1
a955 1
Die L&ouml;sung hierzu ist, die Berechtigungen von <i>/dev/tty</i> auf 0666 zu
d969 1
a969 1
<h2><a name= "3.10">3.10 - H&auml;ngt beim Verlassen von ssh</a></h2>
d972 1
a972 1
OpenSSH kann beim Beenden h&auml;ngen bleiben. Das kann passieren, wenn
d974 1
a974 1
hierf&uuml;r bekannt. Das Problem kann hiermit verifiziert werden:
d998 3
a1000 3
Ein Umgehen des Problems f&uuml;r bash Anwender ist mittels eines
Einf&uuml;gens von <b>"shopt -s huponexit"</b> in entweder /etc/bashrc oder
~/.bashrc m&ouml;glich. Ansonsten konsultiere die man page deiner Shell um
d1002 1
a1002 1
wenn man sie verl&auml;sst. Siehe <a
d1004 1
a1004 1
f&uuml;r andere M&ouml;glichkeiten, das Problem umgehen zu k&ouml;nnen.
d1006 1
a1006 1
<h2><a name= "3.11">3.11 - Wieso h&auml;ngt ssh beim Beenden?</a></h2>
d1009 1
a1009 1
Beim Ausf&uuml;hren von
d1019 1
a1019 1
<b>muss</b> ssh h&auml;ngenbleiben, da es zu warten hat
d1023 1
a1023 1
Eingaben ben&ouml;tigt.
d1026 1
a1026 1
Ausgaben zur&uuml;ckgibt.
d1034 1
a1034 1
durchgef&uuml;hrt und dann ging ,X11 forwarding' nicht mehr.</a></h2>
d1037 1
a1037 1
standardm&auml;&szlig;ig auf localhost; siehe auch die sshd
d1039 1
a1039 1
zur&uuml;ckzukehren, wenn deine &auml;lteren X11 Clients nicht mit dieser
d1043 1
a1043 1
Einstellung funktionieren. Einige Hersteller, einschlie&szlig;lich HP, setzen
d1046 1
a1046 1
Das gilt z.B. f&uuml;r HP-UX 11.X.<p>
d1049 1
a1049 1
durchgef&uuml;hrt und dann gingen einige X11 Programme nicht
d1054 1
a1054 1
worden ist, wird <code>ssh</code> standardm&auml;&szlig;ig ,untrusted X11
d1059 1
a1059 1
M&ouml;gliche Symptome beinhalten:<br>
d1065 1
a1065 1
<h2><a name= "3.14">3.14 - Ich habe meinen &ouml;ffentlichen Schl&uuml;ssel
d1072 1
a1072 1
als sshd standardm&auml;&szlig;ig zul&auml;sst.
d1076 1
a1076 1
ausgef&uuml;hrt wird.
d1089 1
a1089 1
Falls das aus irgendeinem Grund nicht m&ouml;glich sein sollte, besteht die
d1100 1
a1100 1
$Translation: faq.html,v 1.48 2004/10/09 18:23:52 jufi Exp $
@


1.46
log
@more stuff from Tobias Stoeckmann
@
text
@d663 1
a663 1
<h2><a name= "#2.14">2.14 - Warum teilt OpenSSH seine Version den Clients mit?</a></h2>
d675 7
a681 7
Diese Information wird von den Clients und Serven verwenden, um Protokoll
Kompatibilit&aauml;tskniffe zu aktiveren, die ver&auml;nderte, fehlerhafte
oder fehlende Funktionen in der Implementierung, mit der sie reden, zu
umgehen. Dieser Protokollfunktions-Test ist weiterhin ben&ouml;tigt, weil
das SSH Protokoll noch nicht als RFC ver&ouml;ffentlicht wurde und weitere
inkompatible &Auml;nderungen m&ouml;glicherweise gemacht werden, bevor das
eintritt.
d1100 1
a1100 1
$Translation: faq.html,v 1.47 2004/10/03 19:14:48 jufi Exp $
d1103 1
a1103 1
<small>$OpenBSD: faq.html,v 1.59 2004/02/27 01:20:07 dtucker Exp $</small>
@


1.45
log
@Sync with Steelix CVS
@
text
@d50 1
d437 1
a437 1
Um diese Warnungen loszuwerden, passe deine known_hosts Datei an und
d663 21
d835 1
a835 1
<tr><td>2.1GHz Athlon 2600</td><td>0.14 Sek</td><td>0.22 Sek</td></tr>
d932 4
a935 3
das R&uuml;cksetzen von PATH in /etc/profile, PATH in <i>/etc/environment</i>
unter AIX oder (f&uuml;r 3.7p1 und h&ouml;her) das Setzen von PATH oder
SUPATH in <i>/etc/default/login</i> unter Solaris oder Reliant Unix.
d980 1
a980 1
$ <b>sleep 20 & exit</b>
d991 1
a991 1
$ <b>sleep 20 < /dev/null > /dev/null 2>&1 &</b>
d1098 1
a1098 1
Originally [OpenBSD: faq.html,v 1.88 ]
d1100 1
a1100 1
$Translation: faq.html,v 1.46 2004/09/23 12:55:06 jufi Exp $
@


1.44
log
@sync with Steelix translation CVS.
All work by Tobias Stoeckmann, correcting many typos, etc., thanks !
More to come.
@
text
@d10 1
a10 1
<meta name= "keywords"      content= "openssh,faq">
d21 1
a21 1
<strong>Datum: 27.02.2004</strong>
d27 8
a34 7
       <ul>
       <li><a href= "#1.1">1.1 - Was ist OpenSSH?</a>
       <li><a href= "#1.2">1.2 - Warum sollte es benutzt werden?</a>
       <li><a href= "#1.3">1.3 - Welche Betriebssysteme werden unterst&uuml;tzt?</a>
       <li><a href= "#1.4">1.4 - Was ist mit Copyrights, Benutzung und Patenten?</a>
       <li><a href= "#1.5">1.5 - Wo kann ich Hilfe finden?</a>
       </ul>
d36 34
a69 27
       <ul>
       <li><a href= "#2.1">2.1 - Warum benutzt ssh/scp Verbindungen auf den niedrigen ports? Meine Firewall blockiert diese.</a>
       <li><a href= "#2.2">2.2 - Warum ist der ssh Client setuid root?</a>
       <li><a href= "#2.3">2.3 - Warum hat SSH 2.3 Probleme beim Interoperieren mit OpenSSH 2.1.1?</a>
       <li><a href= "#2.4">2.4 - Warum gibt OpenSSH folgendes aus: Dispatch protocol error: type 20</a>
       <li><a href= "#2.5">2.5 - Alte Versionen des kommerziellen SSH verschl&uuml;sseln host keys mit IDEA.</a>
       <li><a href= "#2.6">2.6 - Was sind das f&uuml;r Warnmeldungen &uuml;ber key lengths?</a>
       <li><a href= "#2.7">2.7 - X11 und/oder agent forwarding funktioniert nicht.</a>
       <li><a href= "#2.8">2.8 - Nach dem Upgrade auf OpenSSH gibt es keine SSH2 Unterst&uuml;tzung mehr.</a>
       <li><a href= "#2.9">2.9 - sftp/scp versagt beim Aufbauen der Verbindung, ssh geht aber.</a>
       <li><a href= "#2.10">2.10 - Werdet ihr das Feature [foo] zu scp hinzuf&uuml;gen?</a>
       </ul>
<h3><a href= "#3.0">3.0 - Fragen zum 'portablen OpenSSH'</a></h3>
       <ul>
       <li><a href= "#3.1">3.1 - Unechte PAM Authentifikations-Meldungen in den Logfiles.</a>
       <li><a href= "#3.2">3.2 - Leere Passw&ouml;rter sind in der PAM Authentifikation nicht erlaubt.</a>
       <li><a href= "#3.3">3.3 - ssh(1) braucht sehr lange, um sich mit einem Linux/glibc 2.1 zu verbinden</a>
       <li><a href= "#3.4">3.4 - "Can't locate module net-pf-10" Meldungen in Logdatei unter Linux.</a>
       <li><a href= "#3.5">3.5 - Passwort Authentifikation funktioniert nicht unter Slackware 7.0</a>
       <li><a href= "#3.6">3.6 - Configure oder sshd(8) beschwert sich &uuml;ber fehlende RSA Unterst&uuml;tzung</a>
       <li><a href= "#3.7">3.7 - "scp: command not found" Fehler</a>
       <li><a href= "#3.8">3.8 - Kann die Passphrase nicht lesen</a>
       <li><a href= "#3.9">3.9 - 'configure' fehlt oder make versagt</a>
       <li><a href= "#3.10">3.10 - H&auml;ngt beim Verlassen von ssh</a>
       <li><a href= "#3.11">3.11 - Wieso h&auml;ngt ssh beim Beenden?</a>
       <li><a href= "#3.12">3.12 - Ich habe ein Upgrade auf OpenSSH 3.1 durchgef&uuml;hrt und dann ging das X11 forwarding nicht mehr.</a>
       </ul>
a73 1

d76 1
a76 1
<h2><a name= "1.1">1.1 - Was ist OpenSSH?</a></h2>
d79 25
a103 23
OpenSSH ist eine <b>FREIE</b> Version der SSH Suite von 
Netzwerkverbindungs-Tools, auf die sich eine steigende Zahl 
von Leuten im Internet verlassen. Viele Benutzer von telnet, 
rlogin, ftp und anderen solchen Programmen haben noch nicht 
realisiert, dass ihr Passwort unverschl&uuml;sselt &uuml;ber 
das Internet &uuml;bertragen wird, aber so ist es. OpenSSH 
verschl&uuml;sselt den Verkehr (inklusive Passw&ouml;rtern) 
um 'eavesdropping', 'connection hijacking', und andere 
Angriffe auf Netzwerk-Level effektiv zu eliminieren.

<p>
Die OpenSSH Suite beinhaltet das 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> 
Programm, das rlogin und telnet ersetzt, und 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a>, 
das <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a> 
und <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a> 
ersetzt. OpenSSH beinhaltet seit kurzem auch 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> und 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a>, 
die eine einfache L&ouml;sung f&uuml;r Datei&uuml;bertragungen realisieren. 
Sie basieren auf dem 
<a href="../txt/draft-ietf-secsh-filexfer-02.txt">secsh-filexfer</a> IETF Entwurf.
d105 2
a106 1
<p><strong>OpenSSH besteht aus mehreren Programmen.</strong></p>
d109 9
a117 2
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> - Server Programm, das auf der Server-Maschine l&auml;uft. Es lauscht, ob es Verbindungsw&uuml;nsche von Client-Maschinen gibt, und f&uuml;hrt dann eine Authentifikation durch, bevor es den Client bedient.
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> - Dies ist das Client Programmm, das benutzt wird, um sich auf einer anderen Maschine einzuloggen, oder dort Kommandos auszuf&uuml;hren. <i>slogin</i> ist ein weiterer Name f&uuml;r dieses Programm.
d119 1
a119 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> - Wird benutzt, um 'Pubkey Authentication' (RSA or DSA) Schl&uuml;ssel zu erzeugen ('host keys' und 'user authentication keys').
d124 1
a124 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keyscan&amp;sektion=1">ssh-keyscan(1)</a> - ssh public keys einsammeln.
d128 18
a145 1
<h2><a name= "1.2">1.2 - Warum sollte man es benutzen?</a></h2>
d148 4
a151 3
OpenSSH ist eine Sammlung von Werkzeugen, die dir hilft, deine 
Netzwerk-Verbindungen sicherer zu machen. Hier ist eine Liste der Features:
</p>
d154 15
a168 15
       <li>Starke Authentifikation.  Schlie&szlig;t verschiedene Sicherheitsl&ouml;cher (z.B. IP, routing, und DNS spoofing).
       <li>Verbesserte Privatsph&auml;re.  Alle Verbindungen werden automatisch und transparent verschl&uuml;sselt.
       <li>Sichere X11 Sitzungen.  Das Programm setzt DISPLAY auf der Server Maschine automatisch, und leitet alle X11 Verbindungen &uuml;ber den sicheren Kanal weiter.
       <li>Willk&uuml;rliche TCP/IP Ports k&ouml;nnen durch den verschl&uuml;sselten Kanal gelenkt werden, und zwar in beide Richtungen (z.B. f&uuml;r e-cash Transaktionen).
       <li>F&uuml;r normale Benutzer wird keine Schulung und kein Training ben&ouml;tigt.
       <li>Vertraut nie dem Netzwerk. Minimales Vertrauen auf der Gegenseite der Verbindung. Minimales Vertrauen gegen&uuml;ber den Domain Name Servern. Pure RSA Authentifikation vertraut nichts und niemandem bis auf den 'private key'.
       <li>Der Client authentifiziert die Servermaschine am Beginn jeder Verbindung mit RSA, um 'Trojanischen Pferden' (durch 'routing' oder DNS spoofing) und 'man-in-the-middle' Angriffen vorzubeugen, und der Server tut das gleiche mit der Clientmaschine, bevor er <i>.rhosts</i> oder <i>/etc/hosts.equiv</i> Authentifikation  erlaubt (um DNS, routing, oder IP-spoofing vorzubeugen).
       <li>Die 'Host authentication key' Distribution kann zentral laufen, wird jedoch automatisch, sobald die erste Verbindung zur Maschine ge&ouml;ffnet wird.
       <li>Jeder Benutzer kann beliebig viele RSA Authentifikations-Schl&uuml;ssel zur eigenen Verwendung erzeugen.
       <li>Das Server-Programm hat seinen eigenen RSA Schl&uuml;ssel, der jede Stunde automatisch neu erzeugt wird.
       <li>Ein Authentifikations-Agent, der auf dem Laptop oder der Workstation des Benutzers l&auml;uft, kann benutzt werden, um die RSA Authentifikations-Schl&uuml;ssel des Users vorzuhalten.
       <li>Die Software kann auch ohne root-Privilegien installiert und benutzt werden (mit eingeschr&auml;nkter Funktionalit&auml;t). 
       <li>Der Client ist in systemweiten und benutzerspezifischen Konfigurationsdateien anpassbar.
       <li>Optionale Kompression aller Daten mittels gzip (inklusive 'forwarded X11' und TCP/IP Daten), was zu bedeutenden Beschleunigungen auf langsamen Verbindungen f&uuml;hren kann.
       <li>Kompletter Ersatz f&uuml;r rlogin, rsh, und rcp.
d172 5
a176 5
Zur Zeit werden fast alle Verbindungen in Computer-Netzwerken 
unverschl&uuml;sselt &uuml;bertragen. Als Konsequenz kann jeder, der 
Zugriff auf eine Maschine in diesem Netzwerk hat, alle Verbindungen 
abh&ouml;ren. Das wird auch von Hackern, neugierigen Administratoren, 
Arbeitgebern, Kriminellen, Industriespionen und Regierungen so 
d178 2
a179 2
Einige Netzwerke senden derartig viel elektromagnetische Strahlung ab, 
dass Daten sogar in gro&szlig;er Entfernung noch aufgefangen werden 
d182 1
d186 5
a190 5
Es gibt viele Zeugnisse daf&uuml;r, dass Cracker auf dem Rechner eines 
Opfers unbemerkt ein Programm gestartet haben, welches ohne Wissen des 
Users einfach nur das Netzwerk belauscht und Passw&ouml;rter gesammelt hat.
Programme, die das tun, gibt es im Internet oder k&ouml;nnen von einem
kompetenten Programmierer innerhalb weniger Stunden selbst geschrieben 
d193 1
d196 1
a196 1
Preisinformationen, Informationen &uuml;ber Vertragspartner, Kundendaten, 
d198 3
a200 2
Netzwerk (jede Maschine im Netzwerk) alles belauschen, was im Netzwerk 
vor sich geht, und das noch ohne die normalen Zugriffsbeschr&auml;nkungen.  
d204 3
a206 3
Netzwerk gesammelt werden k&ouml;nnen. Sie vertrauen darin, dass ihre 
Daten sicher sind, da niemand wissen kann, dass dort vertrauliche 
Informationen kursieren oder auch, weil dort so viele andere Daten 
d209 1
d213 1
a213 1
Obwohl OpenSSH auf <a href="http://www.openbsd.org/">OpenBSD</a> entwickelt 
d215 6
a220 6
Die portable Version von OpenSSH wird von 
<a href="mailto:djm@@openbsd.org">Damien Miller</a> entwickelt. Einen 
schnellen &Uuml;berblick &uuml;ber die portable Version von  OpenSSH gibt 
dir <a href="portable.html">http://www.openssh.com/portable.html</a>. 
Ein &Uuml;berblick &uuml;ber die Betriebssysteme, die unterst&uuml;tzt 
werden, findet sich hier:
d223 14
a236 13
       <li>OpenBSD
       <li>NetBSD
       <li>FreeBSD
       <li>AIX 
       <li>HP-UX 
       <li>IRIX 
       <li>Linux 
       <li>NeXT 
       <li>SCO 
       <li>SNI/Reliant Unix 
       <li>Solaris 
       <li>Digital Unix/Tru64/OSF 
       <li>Mac OS X 
d240 2
a241 2
Eine Liste der Anbieter, die OpenSSH in ihre Distributionen einbinden, 
findet sich unter <a href="users.html">www.openssh.com/users.html</a>.
a243 1

d245 1
a245 1
Die OpenSSH Entwickler haben sehr hart daran gearbeitet, OpenSSH frei 
d247 2
a248 2
Optionen entfernt werden, und zwar die Unterst&uuml;tzung f&uuml;r 
patentierte Algorithmen.
d251 4
a254 4
OpenSSH unterst&uuml;tzt keinerlei patentierte Transportalgorithmen. 
Im SSH1 Modus sind nur 3DES und Blowfish m&ouml;glich. 
Im SSH2 Modus k&ouml;nnen nur 3DES, Blowfish, CAST128, Arcfour und AES 
ausgew&auml;hlt werden. Der patentierte IDEA Algorithmus wird nicht 
d258 2
a259 2
OpenSSH bietet Unterst&uuml;tzung f&uuml;r sowohl das SSH1 als auch das 
SSH2 Protokoll. 
d262 2
a263 2
Da das RSA Patent ausgelaufen ist, gibt es keinerlei Beschr&auml;nkungen 
mehr f&uuml;r die Benutzung des RSA Algorithmus, inklusive OpenBSD.
d265 10
a274 1
<h2><a name= "1.5">1.5 - Wo bekomme ich Hilfe?</a></h2>
d277 3
a279 9
Es gibt mehrere Stellen, die du um Hilfe bitten kannst. Zus&auml;tzlich 
zur OpenSSH Website: 
<a href="http://www.openssh.com/">http://www.openssh.com</a>, gibt es 
mehrere Mailinglisten, in denen du dein Gl&uuml;ck versuchen kannst. 
Aber bevor du das tust, durchsuche bitte alle Mailinglisten-Archive, um 
zu sehen, ob deine Frage vielleicht schon beantwortet wurde. Die 
OpenSSH Mailingliste wurde archiviert und steht in durchsuchbarer Form unter 
<a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=1&amp;w=2">theaimsgroup.com</a> 
zur Verf&uuml;gung.
d282 2
a283 3
Mehr Informationen &uuml;ber das Abonnieren von OpenSSH bezogenen 
Mailinglisten gibt es unter 
<a href="./list.html">www.openssh.com/list.html</a>.
d287 5
a291 5
<h2><a name= "2.1">2.1 - Warum &ouml;ffnet ssh/scp Verbindungen auf den unteren ports?</a></h2>

Der OpenSSH Client benutzt die unteren ports f&uuml;r rhosts 
Authentifikation, da der Server dem Usernamen vertrauen muss, den der 
Client liefert. Um das zu umgehen, kannst du das Beispiel weiter unten 
d305 3
a307 3
Oder du kannst diese Option auf der Kommandozeile angeben, indem du die 
<b>-o</b> Option des 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> 
d324 3
a326 3
braucht OpenSSH root authority um sich an die unteren und privilegierten
ports binden zu k&ouml;nnen, um dann eine <i>rhosts Authentifikation</i> 
durchzuf&uuml;hren. Genauso notwendig ist dieser privilegierte port 
d328 1
d330 7
a336 7
Zus&auml;tzlich gilt sowohl f&uuml;r <i>rhosts-rsa Authentifikation</i> 
(in Protokoll Version 1) als auch f&uuml;r <i>host-basierte Authentifikation</i> 
(in Protokoll Version 2), dass der ssh Client Zugang zum 
<i>private host key</i> braucht, um die Clientmaschine am Server 
anzumelden. 
OpenSSH Versionen vor 3.3 ben&ouml;tigten das <code>ssh</code> Binary 
mit gesetztem setuid Bit um das zu erreichen, aber du kannst das Bit
d342 6
a347 4
setuid, <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keysign">ssh-keysign</a>,
wird benutzt, um die privaten hosts keys auszulesen, und ssh benutzt standardm&auml;&szlig;ig
keine privilegierten source ports. Wenn du doch einen benutzen willst, musst
du das setuid Bit von <code>ssh</code> per Hand setzen.
d352 3
a354 3
SSH 2.3 und fr&uuml;here Versionen haben einen Fehler in ihrer HMAC 
Implementation. Ihr Code hat nicht den kompletten Output des Datenblocks
von der Auswahl bereitgestellt, sondern stattdessen eben nur 128 Bits.  
d359 3
a361 3
OpenSSH 2.2.0 erkennt, dass SSH 2.3 diesen Fehler hat. In 
zuk&uuml;nftigen Versionen von SSH wird dieser Fehler behoben sein. 
Alternativ kannst du das folgende in deine ssh 2.3 <i>/etc/sshd2_config</i> 
d376 4
a379 4
 <p>
Probleme bei der Interoperation treten auf, weil &auml;ltere Versionen 
noch keine Unterst&uuml;tzung f&uuml;r session rekeying hatten. Das 
kommerzielle SSH 2.3 versucht dieses Feature abzulehnen, und es kann 
d382 4
a385 4
Das Problem wird entweder durch ein Upgrade auf eine aktuelle OpenSSH 
Version oder Abschalten des rekeying durch Hinzuf&uuml;gen  des 
folgenden in die kommerzielle SSH 2.3
<i>ssh2_config</i> or <i>sshd2_config</i>.
d398 1
a398 1
<h2><a name= "2.5">2.5 - Alte Versionen kommerzieller SSH encrypt host keys mit IDEA.</a></h2>
d401 5
a405 5
Die alten Versionen von SSH haben einen patentierten Algorithmus benutzt, 
um ihren <i>/etc/ssh/ssh_host_key</i> zu verschl&uuml;sseln. Das Problem 
manifestiert sich wom&ouml;glich darin, dass der 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> 
seinen host key nicht lesen kann. Um das Problem zu l&ouml;sen benutze 
d407 3
a409 3
<b>HINWEIS:</b> Benutze das 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
Programm von deinem kommerziellen SSH Produkt, und *NICHT* OpenSSH f&uuml;r 
d425 7
a431 7
Das 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> 
des kommerziellen SSH Programms hat einen Fehler beinhaltet, der dazu 
f&uuml;hrte, dass es von Zeit zu Zeit 'Pubkey Authentication (RSA oder 
DSA) keys' generiert hat, deren 'Most Significant Bit' (MSB) nicht 
gesetzt war. Solche Schl&uuml;sel wurden zwar als 'mit voller L&auml;nge' 
angek&uuml;ndigt, waren aber tats&auml;chlich die H&auml;lfte der Zeit 
d435 4
a438 4
OpenSSH wird Warnungen ausgeben, wenn es solchen Schl&uuml;seln begegnet. 
Um diese Warnungen loszuwerden, passe deine known_hosts Datei an und 
ersetze die falsche Schl&uuml;ssell&auml;nge (1024) mit der richtigen 
(1023). 
d440 1
a440 1
<h2><a name= "2.7">2.7 - X11 und/oder 'agent forwarding' funktioniert nicht.</a></h2>
d443 3
a445 3
Pr&uuml;fe deine <i>ssh_config</i> und <i>sshd_config</i>. Die 
voreingestellten Konfigurationsdateien schalten 'authentication agent' und 
'X11 forwarding' ab. F&uuml;ge die Zeilen unten in die <i>sshd_config</i> 
d463 2
a464 2
       <tr>
               <td nowrap bgcolor="#EEEEEE">
d467 2
a468 2
               </td>
       </tr>
d473 4
a476 4
<b>HINWEIS:</b> Benutzer von Linux Mandrake 7.2: Mandrake modifiziert 
die <i>XAUTHORITY</i> Umgebungsvariable in <i>/etc/skel/.bashrc</i>, 
und damit das 'home directory' jedes Bash-Benutzers. Diese Variable wird 
von OpenSSH gesetzt und daher muss f&uuml;r die oben genannten 
d479 1
d490 1
a490 1
<h2><a name= "2.8">2.8 Nach dem Upgrade auf OpenSSH habe ich keine SSH2 Untzerst&uuml;tzung mehr.</a></h2>
d493 4
a496 4
Die Dateien <i>sshd_config</i> oder <i>ssh_config</i> k&ouml;nnen von 
Version zu Version ver&auml;ndert werden. Du solltest immer nach solchen 
&Auml;nderungen Ausschau halten, wenn du auf eine neue Version von OpenSSH 
upgradest. Nach OpenSSH 2.3.0 musst du das folgende in deine 
d513 4
a516 4
sftp und/oder scp k&ouml;nnen beim Aufbauen der Verbindung Probleme haben, 
wenn du eine 'shell initialisation' (.profile, .bashrc, .chsrc, etc.) hast, 
die Ausgaben f&uuml;r nicht-interaktive Sessions produziert. Dieser Output 
verwirrt den sftp/scp Client. Hiermit kannst du pr&uuml;fen, ob deine 
d530 2
a531 2
Wenn das Kommando oben irgendeine Art von Ausgabe produziert, musst du 
deine Shell Initialisation modifizieren.
d533 1
a533 1
<h2><a name="2.10">2.10 - Werdet ihr das Feature [foo] zu scp hinzuf&uuml;gen?</a></h2>
d539 2
a540 2
Lange Antwort: scp ist nicht standardisiert. Die Beschreibung, die einer 
Spezifikation am n&auml;chsten kommt ist: "was rcp tut". Da das selbe Kommando
d542 20
a561 2
von Features oder Optionen das Risiko von Inkompatibilit&auml;ten mit 
anderen Implementierungen.
d564 28
d593 58
a650 3
Neue Features sind eher in sftp wahrscheinlich, da das Protokoll standardisiert ist
(naja, ein <a href="http://www.ietf.org/internet-drafts/draft-ietf-secsh-filexfer-05.txt">
draft standard</a>), und Client und Server voneinander getrennt sind.
d652 9
d662 1
a662 1
<h2><u><a name= "3.0">3.0 - Fragen zum 'portablen OpenSSH'</a></u></h2>
d664 1
a664 1
<h2><a name= "3.1">3.1 - Unechte PAM Authentifikations-Meldungen in den Logfiles.</a></h2>
d667 1
a667 1
Die portable Version von OpenSSH generiert unechte misslungene 
d670 1
d682 4
a685 4
Diese werden erzeugt, weil OpenSSH zuerst versucht herauszufinden, ob 
der User eine Authentifikation zum Login ben&ouml;tigt (leeres Passwort 
z.B.). Dummerweise logt PAM alle Authentifikationversuche, 
inklusive von diesem hier.
d688 5
a692 5
Wenn es dich zu sehr st&ouml;rt, setze 
&quot;<b>PermitEmptyPasswords no</b>&quot; in <i>sshd_config</i>. Das 
wird die Meldung stilllegen, allerdings auf Kosten dessen, dass es nicht 
mehr m&ouml;glich ist, sich in Accounts mit leeren Passw&ouml;rtern 
einzuloggen. Das ist im &uuml;brigen bereits der Standard, wenn du die 
d698 3
a700 3
Um leere Passw&ouml;rter in einer OpenSSH Version zu erlauben, die mit 
PAM erzeugt wurde, musst du das 'nullok-Flag' an das Ende des 
Password-Checking Moduls in der <i>/etc/pam.d/sshd</i> 
d714 3
a716 3
Das muss zus&auml;tzlich zum Setzen von 
&quot;<b>PermitEmptyPasswords yes</b>&quot; in der 
<i>sshd_config</i> Datei geschehen. 
d719 8
a726 8
Es gibt einen Fallstrick beim Benutzen leerer Passw&ouml;rter mit PAM 
Authentifikation: PAM wird jegliches Passwort erlauben, wenn ein Account 
mit einem leeren Passwort authentifiziert wird. Das macht den Check, den 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> 
benutzt, um zu pr&uuml;fen, ob der Account ein Passwort gesetzt hat, 
wirklungslos, und umgeht ebenso die Policy, die von 
<b>PermitEmptyPasswords</b> gesetzt wurde. Aus diesem Grund raten wir 
davon ab, die <b>nullok</b> Direktive in deiner PAM Konfigurationsdatei 
d729 22
a750 1
<h2><a name= "3.3">3.3 - ssh(1) ben&ouml;tigt sehr lange, um sich mit Linux/glibc 2.1 zu verbinden</a></h2>
d753 74
a826 6
Die glibc, die mit Redhat 6.1 ausgeliefert wurde, braucht offenbar sehr 
lange, um "IPv6 oder IPv4" Adressen von Domainnamen aufzul&ouml;sen.
Das kann mit der --with-ipv4-default Konfigurationsoption umgangen werden. 
Diese weist OpenSSH an, nur IPv4 Adressaufl&ouml;sung zu benutzen. 
(IPv6 lookups k&ouml;nnen trotzdem noch mit Angabe der -6 Option gemacht 
werden).
d831 4
a834 4
Der Linux Kernel sieht (via modprobe) nach der Protokollfamilie 10 (IPv6). 
Lade entweder das passende Kernelmodul, gib den korrekten Alias in 
<i>/etc/modules.conf</i> an, oder schalte IPv6 in 
<i>/etc/modules.conf</i> ab.
d837 1
a837 1
Aus irgendeinem bl&ouml;dsinnigen Grund kann 
d840 24
a863 1
<h2><a name= "3.5">3.5 - Passwort Authentifikation funktioniert nicht unter Slackware 7.0</a></h2>
d866 2
a867 1
In Slackware 7.0 musst du OpenSSH mit der libcrypt verlinken.
d873 1
a873 1
LIBS=-lcrypt ./configure [options]
d879 1
a879 1
<h2><a name= "3.6">3.6 - Configure oder sshd(8) beschwert sich &uuml;ber fehlende RSA oder DSA Unterst&uuml;tzung</a></h2>
d882 1
a882 1
Stelle sicher, dass deine OpenSSL libraries mit eingebauter RSA oder DSA 
d885 1
d889 7
a895 7
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> 
muss sich im Standard PATH sowohl auf dem Client als auch auf dem Server 
befinden. M&ouml;glicherweise musst du die <b>--with-default-path</b> 
Option angeben um einen angepassten Pfad f&uuml;r die Suche auf dem 
Server anzugeben. Diese Option ersetzt den Standardpfad, so dass du sowohl 
alle bisherigen Verzeichnisse in deinem Pfad angeben musst, als auch das
Verzeichnis, in dem scp installiert ist. Zum Beispiel:
d907 7
d917 3
a919 2
Einige Betriebssysteme setzen <i>/dev/tty</i> mit falschen modes, was zum 
Fehler beim Lesen von Passw&ouml;rtern mit folgendem Fehler f&uuml;hrt:
d932 2
a933 2
Die L&ouml;sung hierzu ist, die Permissions von <i>/dev/tty</i> auf 0666 zu 
setzen und dann das ganze deinem Betriebssystem-Hersteller als Bug zu melden. 
d935 2
a936 1
<h2><a name= "3.9">3.9 - 'configure' fehlt oder make versagt</a></h2>
d939 4
a942 4
Wenn es keine 'configure' Datei in deiner tar.gz Datei gibt, die du 
heruntergeladen hast, oder make mit einem "missing seperator" Fehler 
versagt, hast du vermutlich die OpenBSD Distribution heruntergeladen 
und versuchst sie auf einer anderen Plattform zu kompilieren.
d945 1
d949 3
a951 3
OpenSSH kann beim Beenden h&auml;ngen bleiben. Das kann passieren, wenn 
es einen aktiven Hintergrundprozess gibt.  Linux und HP-UX sind 
hierf&uuml;r bekannt.  Das Problem kann hiermit verfiziert werden:
d957 1
a957 1
$ <b>sleep 20 < /dev/null > /dev/null 2>&1 &</b>
d968 1
a968 1
$ <b> command < /dev/null > /dev/null 2>&1</b>
d973 1
a973 1
</p>
d975 7
a981 7
Ein Umgehen des Problems f&uuml;r Bash-User ist mittels eines Einf&uuml;gens
von <b>"shopt -s huponexit"</b> in entweder /etc/bashrc  oder ~/.bashrc 
m&ouml;glich. Ansonsten konsultiere die man page deiner Shell, um eine 
Option zu finden, mit der man aktiven Jobs ein HUP Signal senden kann, 
wenn man sie verl&auml;sst.
</p>
 
d986 1
a986 1
Beim Ausf&uuml;hren des
d998 2
a999 1
<li> bis es sicherstellen kann, dass <code>command</code> keine weiteren 
d1001 5
a1005 1
<li> bis <code>command</code> beendet ist, da der sshd den Exit-Status
d1011 1
a1011 1
durchgef&uuml;hrt und dann ging das X11 forwarding nicht mehr.</a></h2>
d1013 3
a1015 3
Beginnend mit OpenSSH 3.1 lauscht der sshd x11 forwarding Server 
standardm&auml;&szlig;ig auf localhost; siehe auch die sshd 
<b>X11UseLocalhost</b> Option, um zum vorherigen Verhalten 
d1019 3
a1021 3
Im Allgemeinen sollten X11 Clients, die X11 R6 benutzen, mit dieser 
Einstellung funktionieren. Einige Hersteller, einschlie&szlig;lich HP, setzen 
X11 Clients mit R6 und R5 libs ein, so dass einige Clients funktionieren, 
d1025 44
d1075 1
a1075 1
Originally [OpenBSD: faq.html,v 1.59 ]
d1077 1
a1077 1
$Translation: faq.html,v 1.45 2004/08/24 12:11:24 jufi Exp $
@


1.43
log
@Sync with Steelix CVS
@
text
@d53 1
a53 1
       <li><a href= "#3.5">3.5 - Password Authentifikation funktioniert nicht mit einer Slackware 7.0</a>
d99 1
a99 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> - Server Programm, das auf der Server-Maschine l&auml;uft. Es lauscht, ob es Verbindungsw&uuml;nsche von Client-Maschinen gibt, und f&uuml;hrt dann eine Authentifikation durch, bevor sie den Client bedient.
d102 1
a102 1
<li><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> - wird benutzt, um 'Pubkey Authentication' (RSA or DSA) Schl&uuml;ssel zu erzeugen ('host keys' und 'user authentication keys').
d119 1
a119 1
       <li>Starke Authentifikation.  Schliesst verschiedene Sicherheitsl&ouml;cher (z.B. IP, routing, und DNS spoofing).
d122 2
a123 2
       <li>Willk&uuml;rliche TCP/IP Ports k&ouml;nnen durch den verschl&uuml;sselten Kanal gelenkt werden, und zwar in beiden Richtungen (z.B. f&uuml;r e-cash Transaktionen).
       <li>F&uuml;r normale Benutzert wird keine Schulung und kein Training ben&ouml;tigt.
d144 1
a144 1
dass Daten sogar in grosser Entfernung noch aufgefangen werden 
d234 1
a234 1
zu sehen, ob deine Frage vielleicht schon beantwortet wurde . Die 
d284 1
a284 1
ports binden zu k&ouml;nenn, um dann eine <i>rhosts Authentifikation</i> 
d299 1
a299 1
Beginnend mit OpenSSH 3.3 ist <code>ssh</code> standardm&auml;ssig nicht
d301 1
a301 1
wird benutzt, um die privaten hosts keys auszulesen, und ssh benutzt standardm&auml;ssig
d378 1
a378 1
<h2><a name= "2.6">2.6 - Was sind das das f&uuml;r Warnungen &uuml;ber Schl&uuml;ssell&auml;ngen?</a></h2>
d383 2
a384 2
des kommerziellen SSH Programms hat einen Fehler beinhaltet, die dazu 
f&uuml;hrten, dass es von Zeit zu Zeit 'Pubkey Authentication (RSA oder 
d488 1
a488 1
<h2><a name="2.10">2.10 - Werdet ihr das Feature [foo] zu scp hinzuf&uuml;gen ?</a></h2>
d494 1
a494 1
Lange Antwort: scp ist nicht standadisiert. Die Beschreibung, die einer 
d526 1
a526 1
Diese werden erzeugt, weil OpenSSH zuerst versucht heraus zu finden, ob 
d577 1
a577 1
lange, um "IPv6 oder IPv4" Addressen von Domainnamen aufzul&ouml;sen.
d579 1
a579 1
Diese weist OpenSSH an, nur IPv4 Addressaufl&ouml;ssung zu benutzen. 
d592 2
a593 2
Aus irgendeinem bl&ouml;sinnigen Grund kann 
<i>/etc/modules.conf</i> auch <i>/etc/conf.modules</i> heissen.
d595 1
a595 1
<h2><a name= "3.5">3.5 - Password Authentifikation funktioniert nicht unter Slackware 7.0</a></h2>
d598 1
a598 1
In der Slackware 7.0 musst du OpenSSH mit der libcrypt verlinken.
d622 1
a622 1
Option angebenm um einen angepassten Pfad f&uuml;r die Suche auf dem 
d624 2
a625 2
alle bisherigen Verzeichnisse in deinem Pfad angeben musst, als auch das, 
in dem scp installiert ist. Zum Beispiel:
d637 1
a637 1
<h2><a name= "3.8">3.8 - Unable to read passphrase</a></h2>
d640 1
a640 1
Einige Betriebssystem setzen <i>/dev/tty</i> mit falschen modes, was zum 
d683 1
a683 1
Versuche anstattdessen das hier zu benutzen:
d725 2
a726 2
<h2><a name= "3.12">3.12 - Ich habe ein Upgrade auf OpenSSH 3.1 und 
dann ging das X11 forwarding nicht mehr.</a></h2>
d729 1
a729 1
standardm&auml;ssig auf localhost; siehe auch die sshd 
d734 2
a735 2
Im allgemeinen sollten X11 Clients, die X11 R6 benutzen, mit dieser 
Einstellung funktionieren. Einige Hersteller, einschliesslich HP, setzen 
d748 1
a748 1
$Translation: faq.html,v 1.44 2004/03/01 09:56:12 jufi Exp $
@


1.42
log
@Sync with Steelix CVS
@
text
@d21 1
a21 1
<strong>Datum: 04.03.2002</strong>
d45 1
d488 18
d746 1
a746 1
Originally [OpenBSD: faq.html,v 1.57 ]
d748 1
a748 1
$Translation: faq.html,v 1.43 2004/02/15 23:03:05 jufi Exp $
d751 1
a751 1
<small>$OpenBSD: faq.html,v 1.57 2004/01/25 05:01:47 dtucker Exp $</small>
@


1.41
log
@sync with steelix translation CVS
@
text
@d12 1
a12 1
<meta name= "copyright"     content= "This document copyright 1999-2003 OpenBSD.">
d291 5
a295 2
anzumelden. Daher ist das setuid root bit auch f&uuml;r diese 
Authentifikationsmethoden notwendig.
d297 6
a302 2
Das setuid bit kann problemslos vom ssh executable entfernt werden, wenn 
man diese Authentifikationsmethoden nicht ben&ouml;tigt.
d727 1
a727 1
Originally [OpenBSD: faq.html,v 1.55 ]
d729 1
a729 1
$Translation: faq.html,v 1.42 2003/11/05 13:43:30 jufi Exp $
d732 1
a732 1
<small>$OpenBSD: faq.html,v 1.55 2003/10/06 04:22:44 david Exp $</small>
@


1.40
log
@
sync with steelix translation CVS
@
text
@d195 1
a195 1
       <li>MacOS X 
d720 1
a720 1
Originally [OpenBSD: faq.html,v 1.53 ]
d722 1
a722 1
$Translation: faq.html,v 1.41 2003/03/01 18:53:59 jufi Exp $
d725 1
a725 1
<small>$OpenBSD: faq.html,v 1.53 2003/02/26 21:23:48 david Exp $</small>
@


1.39
log
@
clean up description and keywords
@
text
@d720 1
a720 1
Originally [OpenBSD: faq.html,v 1.52 ]
d722 1
a722 1
$Translation: faq.html,v 1.40 2003/01/17 12:48:49 jufi Exp $
d725 1
a725 1
<small>$OpenBSD: faq.html,v 1.52 2002/10/28 08:57:59 markus Exp $</small>
@


1.38
log
@
sync with badlands translation CVS
@
text
@d4 1
a4 1
<title>OpenSSH Portable Release for Linux/Solaris/etc</title>
d9 2
a10 2
<meta name= "description"   content= "the OpenSSH FAQ page">
<meta name= "keywords"      content= "openbsd,faq">
d12 1
a12 1
<meta name= "copyright"     content= "This document copyright 1999-2002 OpenBSD.">
d19 1
a19 1
<h1>OpenSSH FAQ (Frequently asked questions)</h1>
d46 1
a46 1
<h3><a href= "#3.0">3.0 - 'Portables OpenSSH' Fragen</a></h3>
d481 1
a481 1
<h2><u><a name= "3.0">3.0 - 'Portables OpenSSH' Fragen</a></u></h2>
d722 1
a722 1
$Translation: faq.html,v 1.39 2002/10/31 22:22:53 jufi Exp $
@


1.37
log
@
ssh-keysign
@
text
@a130 1
       <li>Benutzt automatisch das konventionelle rsh (nach dem Anzeigen einer Warnung) falls die Servermaschine keinen sshd hat oder benutzt.
d720 1
a720 1
Originally [OpenBSD: faq.html,v 1.51 ]
d722 1
a722 1
$Translation: faq.html,v 1.38 2002/08/06 21:01:47 jufi Exp $
d725 1
a725 1
<small>$OpenBSD: faq.html,v 1.51 2002/08/06 13:58:04 fgsch Exp $</small>
@


1.36
log
@
cleanup
@
text
@d107 1
d721 1
a721 1
Originally [OpenBSD: faq.html,v 1.50 ]
d723 1
a723 1
$Translation: faq.html,v 1.37 2002/06/24 20:48:12 jufi Exp $
d726 1
a726 1
<small>$OpenBSD: faq.html,v 1.50 2002/06/23 10:38:31 jufi Exp $</small>
@


1.35
log
@
sync with badlands translation CVS
@
text
@d71 23
a93 6
OpenSSH ist eine <b>FREIE</b> Version der SSH Suite von Netzwerkverbindungs-Tools, auf die sich eine steigende Zahl von Leuten im Internet verlassen. Viele Benutzer von telnet, rlogin, ftp und anderen solchen Programmen haben noch nicht realisiert, dass ihr Passwort unverschl&uuml;sselt &uuml;ber das  Internet &uuml;bertragen wird, aber so ist es. OpenSSH verschl&uuml;sselt den Verkehr (inklusive Passw&ouml;rtern) um 'eavesdropping', 'connection hijacking', und andere Angriffe auf Netzwerk-Level effektiv zu eliminieren.
</p>

<p>
Die OpenSSH Suite beinhaltet das <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> Programm, das rlogin und telnet ersetzt, und <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a>, das <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a> und <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a> ersetzt. OpenSSH beinhaltet seit kurzem auch <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> und <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a>, die eine einfache L&ouml;sung f&uuml;r Datei&uuml;bertragungen realisieren. Sie basieren auf dem <a href="../txt/draft-ietf-secsh-filexfer-02.txt">secsh-filexfer</a> IETF Entwurf.
</p>
d112 2
a113 1
OpenSSH ist eine Sammlung von Werkzeugen, die dir hilft, deine Netzwerk-Verbindungen sicherer zu machen. Hier ist eine Liste der Features:
d136 9
a144 8
Zur Zeit werden fast alle Verbindungen in Computer-Netzwerken unverschl&uuml;sselt
&uuml;bertragen. Als Konsequenz kann jeder, der Zugriff auf eine Maschine in diesem
Netzwerk hat, alle Verbindungen abh&ouml;ren.
Das wird auch von Hackern, neugierigen Administratoren, Arbeitgebern, Kriminellen,
Industriespionen und Regierungen so durchgef&uuml;hrt.
Einige Netzwerke senden derartig viel elektromagnetische Strahlung ab, dass Daten sogar
in grosser Entfernung noch aufgefangen werden k&ouml;nnen.
</p>
d149 3
a151 3
Es gibt viele Zeugnisse daf&uuml;r, dass Cracker auf dem Rechner eines Opfers
unbemerkt ein Programm gestartet haben, welches ohne Wissen des Users einfach nur
das Netzwerk belauscht und Passw&ouml;rter gesammelt hat.
d153 2
a154 2
kompetenten Programmierer innerhalb weniger Stunden selbst geschrieben werden.
</p>
d158 4
a161 5
Preisinformationen, Informationen &uuml;ber Vertragspartner, Kundendaten, Personendaten,
Finanzdaten, etc. Zur Zeit kann jeder mit Zugriff auf das Netzwerk 
(jede Maschine im Netzwerk) alles belauschen, was im Netzwerk vor sich geht,
und das noch ohne die normalen Zugriffsbeschr&auml;nkungen.  
</p>
d165 4
a168 5
Netzwerk gesammelt werden k&ouml;nnen. Sie vertrauen darin, dass ihre Daten sicher
sind, da niemand wissen kann, dass dort vertrauliche Informationen kursieren
oder auch, weil dort so viele andere Daten &uuml;bertragen werden.
Dies ist keine sichere Einstellung.
</p>
d173 8
a180 3
Obwohl OpenSSH auf <a href="http://www.openbsd.org/">OpenBSD</a> entwickelt wird, gibt es eine breite Palette an Portierungen auf andere Betriebssysteme.
Die portable Version von OpenSSH wird von <a href="mailto:djm@@openbsd.org">Damien Miller</a> entwickelt. Einen schnellen &Uuml;berblick &uuml;ber die portable Version von  OpenSSH gibt dir <a href="portable.html">http://www.openssh.com/portable.html</a>. Ein &Uuml;berblick &uuml;ber die Betriebssysteme, die unterst&uuml;tzt werden, findet sich hier:
</p>
d199 2
a200 3
Eine Liste der Anbieter, die OpenSSH in ihre Distributionen einbinden, findet sich unter <a href="users.html">www.openssh.com/users.html</a>.
</p>

d205 4
a208 3
Die OpenSSH Entwickler haben sehr hart daran gearbeitet, OpenSSH frei von Patent- oder Copyright-Problemen zu halten. Dazu mussten einige
Optionen entfernt werden, und zwar die Unterst&uuml;tzung f&uuml;r patentierte Algorithmen.
</p>
d211 5
a215 4
OpenSSH unterst&uuml;tzt keinerlei patentierte Transportalgorithmen. Im SSH1 Modus sind nur 3DES und Blowfish m&ouml;glich. 
Im SSH2 Modus k&ouml;nnen nur 3DES, Blowfish, CAST128, Arcfour und AES ausgew&auml;hlt werden. Der patentierte IDEA Algorithmus
wird nicht unterst&uuml;tzt.
</p>
d218 2
a219 2
OpenSSH bietet Unterst&uuml;tzung f&uuml;r sowohl das SSH1 als auch das SSH2 Protokoll. 
</p>
d222 2
a223 2
Da das RSA Patent ausgelaufen ist, gibt es keinerlei Beschr&auml;nkungen mehr f&uuml;r die Benutzung des RSA Algorithmus, inklusive OpenBSD.
</p>
d228 9
a236 2
Es gibt mehrere Stellen, die du um Hilfe bitten kannst. Zus&auml;tzlich zur OpenSSH Website: <a href="http://www.openssh.com/">http://www.openssh.com</a>, gibt es mehrere Mailinglisten, in denen du dein Gl&uuml;ck versuchen kannst. Aber bevor du das tust, durchsuche bitte alle Mailinglisten-Archive, um zu sehen, ob deine Frage vielleicht schon beantwortet wurde . Die OpenSSH Mailingliste wurde archiviert und steht in durchsuchbarer Form unter <a href="http://marc.theaimsgroup.com/?l=openssh-unix-dev&amp;r=1&amp;w=2">theaimsgroup.com</a> zur Verf&uuml;gung.
</p>
d239 3
a241 2
Mehr Informationen &uuml;ber das Abonnieren von OpenSSH bezogenen Mailinglisten gibt es unter <a href="./list.html">www.openssh.com/list.html</a>.
</p>
d247 4
a250 3
Der OpenSSH Client benutzt die unteren ports f&uuml;r rhosts Authentifikation, da der Server dem Usernamen vertrauen muss,
den der Client liefert. Um das zu umgehen, kannst du das Beispiel weiter unten in deine <i>ssh_config</i> oder <i>~/.ssh/config</i> 
Datei kopieren.
d263 4
a266 1
Oder du kannst diese Option auf der Kommandozeile angeben, indem du die <b>-o</b> Option des <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> Kommandos benutzt.
d283 10
a292 8
ports binden zu k&ouml;nenn, um dann eine <i>rhosts Authentifikation</i> durchzuf&uuml;hren.
Genauso notwendig ist dieser privilegierte port f&uuml;r rhosts-rsa Authentifikation
zu &auml;lteren SSH Versionen.
<p>
Zus&auml;tzlich gilt sowohl f&uuml;r <i>rhosts-rsa Authentifikation</i> (in Protokoll Version 1)
als auch f&uuml; <i>host-basierte Authentifikation</i> (in Protokoll Version 2), dass der ssh client
Zugang zum <i>private host key</i> braucht, um die Clientmaschine am Server anzumelden.
Daher ist das setuid root bit auch f&uuml;r diese Authentifikationsmethoden notwendig.
d294 2
a295 2
Das setuid bit kann problemslos vom ssh executable entfernt werden, wenn man diese 
Authentifikationsmethoden nicht ben&ouml;tigt.
d300 4
a303 2
SSH 2.3 und fr&uuml;here Versionen haben einen Fehler in ihrer HMAC Implementation. Ihr Code hat nicht den kompletten Output des Datenblocks
von der Auswahl bereitgestellt, sondern stattdessen eben nur 128 Bits.  Bei l&auml;ngeren Anfragen konnte dann SSH 2.3 eben nicht mit OpenSSH
d307 4
a310 2
OpenSSH 2.2.0 erkennt, dass SSH 2.3 diesen Fehler hat. In zuk&uuml;nftigen Versionen von SSH wird dieser Fehler behoben sein. 
Alternativ kannst du das folgende in deine ssh 2.3 <i>/etc/sshd2_config</i> einf&uuml;gen.
d325 4
a328 4
Probleme bei der Interoperation treten auf, weil &auml;ltere Versionen noch keine Unterst&uuml;tzung
f&uuml;r session rekeying hatten. Das kommerzielle SSH
2.3 versucht dieses Feature abzulehnen, und es kann zum Einfrieren der Verbindung kommen, oder 
die Fehlermeldung
d330 3
a332 2
Das Problem wird entweder durch ein Upgrade auf eine aktuelle OpenSSH Version oder Abschalten 
des rekeying durch Hinzuf&uuml;gen  des folgenden in die kommerzielle SSH 2.3
d349 3
a351 2
Die alten Versionen von SSH haben einen patentierten Algorithmus benutzt, um ihren <i>/etc/ssh/ssh_host_key</i> zu verschl&uuml;sseln. 
Das Problem manifestiert sich wom&ouml;glich darin, dass der 
d353 6
a358 3
seinen host key nicht lesen kann. Um das Problem zu l&ouml;sen benutze das Kommando weiter unten, um deinen ssh_host_key zu 3DES zu konvertieren.
<b>HINWEIS:</b> Benutze das <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> Programm von deinem
kommerziellen SSH Produkt, und *NICHT* OpenSSH f&uuml;r das Beispiel weiter unten.
d373 8
a380 4
Das <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh-keygen&amp;sektion=1">ssh-keygen(1)</a> des kommerziellen SSH Programms 
hat einen Fehler beinhaltet, die dazu f&uuml;hrten, dass es von Zeit zu Zeit 'Pubkey Authentication (RSA oder DSA) keys' generiert hat,
deren 'Most Significant Bit' (MSB) nicht gesetzt war. Solche Schl&uuml;sel wurden zwar als 'mit voller L&auml;nge' angek&uuml;ndigt,
waren aber tats&auml;chlich die H&auml;lfte der Zeit k&uuml;rzer als behauptet.
d383 4
a386 2
OpenSSH wird Warnungen ausgeben, wenn es solchen Schl&uuml;seln begegnet. Um diese Warnungen loszuwerden, passe deine known_hosts Datei an 
und ersetze die falsche Schl&uuml;ssell&auml;nge (1024) mit der richtigen (1023). 
d391 4
a394 2
Pr&uuml;fe deine <i>ssh_config</i> und <i>sshd_config</i>. Die voreingestellten Konfigurationsdateien schalten 'authentication agent' und 
'X11 forwarding' ab. F&uuml;ge die Zeilen unten in die <i>sshd_config</i> ein, um sie zu aktivieren:
d421 5
a425 3
<b>HINWEIS:</b> Benutzer von Linux Mandrake 7.2: Mandrake modifiziert die <i>XAUTHORITY</i> Umgebungsvariable in <i>/etc/skel/.bashrc</i>, 
und damit das 'home directory' jedes Bash-Benutzers. Diese Variable wird von OpenSSH gesetzt und daher muss f&uuml;r die oben 
genannten Optionen die folgende Zeile auskommentiert werden:
d440 5
a444 3
Die Dateien <i>sshd_config</i> oder <i>ssh_config</i> k&ouml;nnen von Version zu Version ver&auml;ndert werden. Du solltest immer
nach solchen &Auml;nderungen Ausschau halten, wenn du auf eine neue Version von OpenSSH upgradest. Nach OpenSSH 2.3.0 
musst du das folgende in deine <i>sshd_config</i> einf&uuml;gen:
d460 5
a464 1
sftp und/oder scp k&ouml;nnen beim Aufbauen der Verbindung Probleme haben, wenn du eine 'shell initialisation' (.profile, .bashrc, .chsrc, etc)hast, die Ausgaben f&uuml;r nicht_interaktive Sessions produziert. Dieser Output verwirrt den sftp/scp Client. Hiermit kannst du pr&uuml;fen, ob deine Shell das tut:
d477 2
a478 1
Wenn das Kommando oben irgendeine Art von Ausgabe produziert, musst du deine Shell Initialisation modifizieren.
d486 2
a487 1
Die portable Version von OpenSSH generiert unechte misslungene Authentifikationsmeldungen bei jedem Login, etwa wie:
d500 4
a503 2
Diese werden erzeugt, weil OpenSSH zuerst versucht heraus zu finden, ob der User eine Authentifikation zum Login ben&ouml;tigt 
(leeres Passwort z.B.). Dummerweise logt PAM alle Authentifikationversuche, inklusive von diesem hier.
d506 6
a511 3
Wenn es dich zu sehr st&ouml;rt, setze &quot;<b>PermitEmptyPasswords no</b>&quot; in <i>sshd_config</i>. Das wird die Meldung
stilllegen, allerdings auf Kosten dessen, dass es nicht mehr m&ouml;glich ist, sich in Accounts mit leeren Passw&ouml;rtern einzuloggen.
Das ist im &uuml;brigen bereits der Standard, wenn du die mitgelieferte <i>sshd_config</i> Datei benutzt.
d516 4
a519 2
Um leere Passw&ouml;rter in einer OpenSSH Version zu erlauben, die mit PAM erzeugt wurde, musst du das 'nullok-Flag' an das Ende des
Password-Checking Moduls in der <i>/etc/pam.d/sshd</i> Datei setzen. Zum Beispiel:
d532 3
a534 1
Das muss zus&auml;tzlich zum Setzen von &quot;<b>PermitEmptyPasswords yes</b>&quot; in der <i>sshd_config</i> Datei geschehen. 
d537 9
a545 6
Es gibt einen Fallstrick beim Benutzen leerer Passw&ouml;rter mit PAM Authentifikation: PAM wird jegliches Passwort erlauben, wenn
ein Account mit einem leeren Passwort authentifiziert wird. Das macht den Check, den 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd&amp;sektion=8">sshd(8)</a> benutzt, um zu pr&uuml;fen, ob der Account ein 
Passwort gesetzt hat, wirklungslos, und umgeht ebenso die Policy, die von <b>PermitEmptyPasswords</b> gesetzt wurde. Aus diesem Grund
raten wir davon ab, die <b>nullok</b> Direktive in deiner PAM Konfigurationsdatei zu setzen, es sei denn, du willst
leere Passw&ouml;rter explizit erlauben.
d550 6
a555 3
Die glibc, die mit Redhat 6.1 ausgeliefert wurde, braucht offenbar sehr lange, um "IPv6 oder IPv4" Addressen von Domainnamen aufzul&ouml;sen.
Das kann mit der --with-ipv4-default Konfigurationsoption umgangen werden. Diese weist OpenSSH an, nur IPv4 Addressaufl&ouml;ssung zu benutzen. 
(IPv6 lookups k&ouml;nnen trotzdem noch mit Angabe der -6 Option gemacht werden).
d560 4
a563 2
Der Linux Kernel sieht (via modprobe) nach der Protokollfamilie 10 (IPv6). Lade entweder das passende Kernelmodul, gib den korrekten
Alias in <i>/etc/modules.conf</i> an, oder schalte IPv6 in <i>/etc/modules.conf</i> ab.
d566 2
a567 1
Aus irgendeinem bl&ouml;sinnigen Grund kann <i>/etc/modules.conf</i> auch <i>/etc/conf.modules</i> heissen.
d587 2
a588 2
Stelle sicher, dass deine OpenSSL libraries mit eingebauter RSA oder DSA Unterst&uuml;tzung erzeugt wurden, entweder intern
oder durch RSAref.
d593 7
a599 4
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a> muss sich im Standard PATH sowohl auf dem Client
als auch auf dem Server befinden. M&ouml;glicherweise musst du die <b>--with-default-path</b> Option angebenm um einen angepassten
Pfad f&uuml;r die Suche auf dem Server anzugeben. Diese Option ersetzt den Standardpfad, so dass du sowohl alle bisherigen 
Verzeichnisse in deinem Pfad angeben musst, als auch das, in dem scp installiert ist. Zum Beispiel:
d614 2
a615 3
Einige Betriebssystem setzen <i>/dev/tty</i> mit falschen modes, was zum Fehler beim Lesen von Passw&ouml;rtern mit folgendem
Fehler f&uuml;hrt:
</p>
d628 2
a629 3
Die L&ouml;sung hierzu ist, die Permissions von <i>/dev/tty</i> auf 0666 zu setzen und dann das ganze deinem Betriebssystem-Hersteller
als Bug zu melden. 
</p>
d634 4
a637 2
Wenn es keine 'configure' Datei in deiner tar.gz Datei gibt, die du heruntergeladen hast, oder make mit einem "missing seperator"
Fehler versagt, hast du vermutlich die OpenBSD Distribution heruntergeladen und versuchst sie auf einer anderen Plattform zu kompilieren.
a638 1
</p>
d643 4
a646 3
OpenSSH kann beim Beenden h&auml;ngen bleiben. Das kann passieren, wenn es einen aktiven 
Hintergrundprozess gibt.  Linux und HP-UX sind hierf&uuml;r bekannt.  Das Problem kann hiermit verfiziert werden:
 </p>
d669 5
a673 3
Ein Umgehen des Problems f&uuml;r Bash-User ist mittels eines Einf&uuml;gens von <b>"shopt -s huponexit"</b> in entweder /etc/bashrc  oder
~/.bashrc m&ouml;glich.  Ansonsten konsultiere die man page deiner Shell, um eine Option zu finden, mit der man aktiven Jobs ein HUP
Signal senden kann, wenn man sie verl&auml;sst.
d692 2
a693 2
<li> bis es sicherstellen kann, dass <code>command</code> keine weiteren Eingaben
ben&ouml;tigt.
d699 2
a700 2
<h2><a name= "3.12">3.12 - Ich habe ein Upgrade auf OpenSSH 3.1 und dann ging das X11
forwarding nicht mehr.</a></h2>
d702 4
a705 3
Beginnend mit OpenSSH 3.1 lauscht der sshd x11 forwarding Server standardm&auml;ssig
auf localhost; siehe auch die sshd <b>X11UseLocalhost</b> Option, um zum vorherigen
Verhalten zur&uuml;ckzukehren, wenn deine &auml;lteren X11 Clients nicht mit dieser
d708 4
a711 3
Im allgemeinen sollten X11 Clients, die X11 R6 benutzen, mit dieser Einstellung 
funktionieren. Einige Hersteller, einschliesslich HP, setzen X11 Clients mit R6
und R5 libs ein, so dass einige Clients funktionieren, und andere nicht.
d720 1
a720 1
Originally [OpenBSD: faq.html,v 1.49 ]
d722 1
a722 1
$Translation: faq.html,v 1.36 2002/05/20 12:27:16 jufi Exp $
d725 1
a725 1
<small>$OpenBSD: faq.html,v 1.49 2002/05/19 10:58:18 jufi Exp $</small>
@


1.34
log
@
better html
@
text
@a218 1
</p>
a231 1
</p>
d256 1
a256 1
</p>
a265 1
</p>
a269 1
</p>
a292 1
</p>
a312 1
</p>
a330 1
</p>
a334 1
</p>
a340 1
</p>
a353 1
</p>
a369 1
</p>
a386 1
</p>
a402 1
</p>
a415 1
</p>
a423 1
</p>
a437 1
</p>
a442 1
</p>
a448 1
</p>
a469 1
</p>
a476 1
</p>
a482 1
</p>
a485 1
</p>
a490 1
</p>
a506 1
</p>
a514 1
</p>
d605 1
a605 2
<li>
bis es sicherstellen kann, dass <code>command</code> keine weiteren Eingaben
d607 1
a607 2
<li>
bis <code>command</code> beendet ist, da der sshd den Exit-Status
d633 1
a633 1
$Translation: faq.html,v 1.35 2002/05/19 20:20:39 jufi Exp $
@


1.33
log
@
sync with badlands translation CVS
@
text
@d7 2
d637 1
a637 1
</p>
d654 1
a654 1
<a href=index.html><img height=24 width=24 src=../back.gif border=0 alt=OpenSSH></a>
d658 1
a658 1
Originally [OpenBSD: faq.html,v 1.48 ]
d660 1
a660 1
$Translation: faq.html,v 1.34 2002/05/01 10:41:27 jufi Exp $
d663 1
a663 1
<small>$OpenBSD: faq.html,v 1.48 2002/04/15 19:26:28 jufi Exp $</small>
@


1.32
log
@
sync with badlands translation CVS
@
text
@d73 1
a73 1
Die OpenSSH Suite beinhaltet das <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh&amp;sektion=1">ssh(1)</a> Programm, das rlogin und telnet ersetzt, und <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=scp&amp;sektion=1">scp(1)</a>, das <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rcp&amp;sektion=1">rcp(1)</a> und <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ftp&amp;sektion=1">ftp(1)</a> ersetzt. OpenSSH beinhaltet seit kurzem auch <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a> und <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a>, die eine einfache L&ouml;sung f&uuml;r Datei&uuml;bertragungen realisieren. Sie basieren auf dem <a href="../txt/draft-ietf-secsh-filexfer-00.txt">secsh-filexfer</a> IETF Entwurf.
d656 1
a656 1
Originally [OpenBSD: faq.html,v 1.47 ]
d658 1
a658 1
$Translation: faq.html,v 1.33 2002/04/13 20:37:16 jufi Exp $
d661 1
a661 1
<small>$OpenBSD: faq.html,v 1.47 2002/04/12 14:52:29 provos Exp $</small>
@


1.31
log
@
copyrights extended to 2002
@
text
@d19 1
a19 1
<strong>Datum: 12.07.2001</strong>
d56 2
d334 1
a334 1
waren aber tats&auml;chlich die H&auml;lfte der Zeit nur halb so lang.
d339 1
a339 2
und ersetze die falsche Schl&uuml;ssell&auml;nge (1024) mit der richtigen (1023). Trotzdem ist es besser, einfach neue zu erzeugen, da 
diese Schl&uuml;ssel nur halb so sicher sind! 
d582 1
a582 1
Aktuelle Versionen von OpenSSH k&oumml;nnen beim Beenden h&auml;ngen bleiben. Das kann passieren, wenn es einen aktiven 
d613 38
d656 1
a656 1
Originally [OpenBSD: faq.html,v 1.44 ]
d658 1
a658 1
$Translation: faq.html,v 1.32 2002/01/20 11:27:50 jufi Exp $
d661 1
a661 1
<small>$OpenBSD: faq.html,v 1.44 2002/01/20 11:19:05 jufi Exp $</small>
@


1.30
log
@
sync with badlands translation CVS
@
text
@d10 1
a10 1
<meta name= "copyright"     content= "This document copyright 1999-2001 OpenBSD.">
d617 1
a617 1
Originally [OpenBSD: faq.html,v 1.43 ]
d619 1
a619 1
$Translation: faq.html,v 1.31 2001/12/29 18:29:12 jufi Exp $
d622 1
a622 1
<small>$OpenBSD: faq.html,v 1.43 2001/12/07 16:59:54 markus Exp $</small>
@


1.29
log
@sync with badlands translation CVS; work by Paul Weissmann
@
text
@d41 1
a41 1
       <li><a href= "#2.8">2.8 - Nach dem Upgrade auf OpenSSH 2.5.1 gibt es keine SSH2 Unterst&uuml;tzung mehr.</a>
d389 1
a389 1
<h2><a name= "2.8">2.8 Nach dem Upgrade auf OpenSSH 2.5.1 habe ich keine SSH2 Untzerst&uuml;tzung mehr.</a></h2>
d393 1
a393 1
nach solchen &Auml;nderungen Ausschau halten, wenn du auf eine neue Version von OpenSSH upgradest. Zwischen OpenSSH 2.3.0 und 2.5.1 
d401 2
a402 1
<b>HostKey /etc/ssh_host_dsa_key</b>
d617 1
a617 1
Originally [OpenBSD: faq.html,v 1.42 ]
d619 1
a619 1
$Translation: faq.html,v 1.30 2001/11/15 19:43:57 paul Exp $
d622 1
a622 1
<small>$OpenBSD: faq.html,v 1.42 2001/10/08 15:29:46 markus Exp $</small>
@


1.28
log
@sync with badlands translation CVS.
@
text
@d34 1
a34 1
       <li><a href= "#2.1">2.1 - Warum benutzt ssh/scp Verbindungen auf den niedrigen ports? Meine Firewall blockiert die.</a>
d36 3
a38 3
       <li><a href= "#2.3">2.3 - Warum hat SSH 2.3 Probleme beim interoperieren mit OpenSSH 2.1.1?</a>
       <li><a href= "#2.4">2.4 - Warum gibt OpenSSH das hier aus: Dispatch protocol error: type 20</a>
       <li><a href= "#2.5">2.5 - Alte Versionen des komemrziellen SSH verschl&uuml;sseln host keys mit IDEA.</a>
d41 1
a41 1
       <li><a href= "#2.8">2.8 - Nach dem Upgrade auf OpenSSH 2.5.1 gibt's keine SSH2 Unterst&uuml;tzung mehr.</a>
d51 1
a51 1
       <li><a href= "#3.6">3.6 - Configure oder sshd(8) beschweren sich &uuml;ber fehlende RSA Unterst&uuml;tzung</a>
d95 1
a95 1
       <li>Starke Authentifikation.  Schliesst verschiedene Sicherheitsl&ouml;cher (e.g., IP, routing, und DNS spoofing).
d97 1
a97 1
       <li>Sichere X11 Sessions.  Das Programm setzt DISPLAY auf der Server Maschine automatisch, und forwarded alle X11 Verbindungen &uuml;ber den sicheren Kanal.
d99 1
a99 1
       <li>Es wird keine Schulung und kein Training f&uuml;r normale User ben&ouml;tigt.
d101 1
a101 1
       <li>Der Client authentifiziert die Servermaschine am Beginn jeder Verbindung mit RSA, um 'Trojanischen Pferden' (durch 'routing' oder DNS spoofing) und 'man-in-the-middle' Angriffen vorzubeugen, und der Server tut das gleiche mit der Client-Maschine, bevor er <i>.rhosts</i> oder <i>/etc/hosts.equiv</i> Authentifikation  erlaubt (um DNS, routing, oder IP-spoofing vorzubeugen).
d103 1
a103 1
       <li>Jeder User kann beliebig viele RSA Authentifikations-Schl&uuml;ssel zu seiner eigenen Verwendung erzeugen.
d105 1
a105 1
       <li>Ein Authentifikations-Agent, der auf dem Laptop oder der Workstation des Users l&auml;uft, kann benutzt werden, um die RSA Authentifikations-Schl&uuml;ssel des Users vorzuhalten.
d107 1
a107 1
       <li>Der Client ist in System-weiten und user-spezifischen Konfigurationsdateien anpassbar.
d109 1
a109 1
       <li>Optionale Kompression aller Daten mittels gzip (inklusive 'forwarded X11' und TCP/IP port data), was zu bedeutenden Beschleunigungen auf langsamen Verbindungen f&uuml;hren kann.
d118 1
a118 1
Industriespionen und Regierungen genau so durchgef&uuml;hrt.
d127 3
a129 3
unbemerkt ein Programm gestartet haben, das ohne Wissen des Users einfach nur
das Netzwerk belauscht hat und Passw&ouml;rter gesammelt hat.
Programme, die das tun, gibt es im Internet, oder k&ouml;nnen von einem
d145 2
a146 2
oder auch, weil dort so viel andere Daten &uuml;bertragen werden.
Das ist keine sichere Einstellung.
d210 1
a210 1
<h2><a name= "2.1">2.1 - Warum macht ssh/scp Verbindungen auf den unteren ports?</a></h2>
d246 2
a247 2
ports binden zu k&ouml;nenn, um dann eine <i>rhosts authentication</i> durchzuf&uuml;hren.
Genauso notwendig ist dieser privilegierte port f&uuml;r rhosts-rsa authentication
d250 3
a252 3
Zus&auml;tzlich gilt sowohl f&uuml;r <i>rhosts-rsa authentication</i> (in Protokoll Version 1)
als auch <i>hostbased authentication</i> (in Protokoll Version 2), dass der ssh client
Zugang zum <i>private host key</i> braucht, um die Client Maschine am Server anzumelden.
d281 1
a281 1
<h2><a name= "2.4">2.4 - Warum gibt OpenSSH sowas aus: Dispatch protocol error: type 20</a></h2>
d521 1
a521 1
<h2><a name= "3.6">3.6 - Configure oder sshd(8) beschweren sich &uuml;ber fehlende RSA oder DSA Unterst&uuml;tzung</a></h2>
d618 1
a618 1
$Translation: faq.html,v 1.29 2001/10/30 07:25:38 jufi Exp $
@


1.27
log
@
copyright notice cleanup
@
text
@d244 10
a253 3
In Verbidung mit der vorherigen Frage (<a href="#2.1">2.1</a>) muss OpenSSH 'root authority' haben, um die unteren ports f&uuml;r die
 rhosts und rhosts-rsa Authentifikation benutzen zu k&ouml;nnen. Du kannst das setuid bit der ssh-Datei ohne Gefahr entfernen,
wenn du diese Authentifikation nicht benutzen willst.
d255 2
d587 1
a587 1
$ <b>sleep 20 & exit</b>
d616 1
a616 1
Originally [OpenBSD: faq.html,v 1.41 ]
d618 1
a618 1
$Translation: faq.html,v 1.28 2001/09/10 19:51:44 jufi Exp $
d621 1
a621 1
<small>$OpenBSD: faq.html,v 1.41 2001/09/10 19:26:33 jufi Exp $</small>
@


1.26
log
@
another point added.
@
text
@d10 1
a10 1
<meta name= "copyright"     content= "This document copyright (C) 1999-2001 OpenBSD">
d607 1
a607 1
Originally [OpenBSD: faq.html,v 1.40 ]
d609 1
a609 1
$Translation: faq.html,v 1.27 2001/07/15 19:42:42 jufi Exp $
d612 1
a612 1
<small>$OpenBSD: faq.html,v 1.40 2001/07/13 15:46:53 markus Exp $</small>
@


1.25
log
@
typos, corrections
@
text
@d19 1
a19 1
<strong>Datum: 26.01.2001</strong>
d37 6
a42 5
       <li><a href= "#2.4">2.4 - Alte Versionen des kommerziellen SSH Verschl&uuml;sselungs-'host keys' mit IDEA.</a>
       <li><a href= "#2.5">2.5 - Was sind das f&uuml;r Warnmeldungen &uuml;ber 'key lengths' (Schl&uuml;sselll&auml;ngen)?</a>
       <li><a href= "#2.6">2.6 - X11 und/oder 'agent forwarding' funktioniert nicht.</a>
       <li><a href= "#2.7">2.7 - Nach einem Upgrade auf OpenSSH 2.5.1 habe ich keine SSH2 Unterst&uuml;tzung mehr.</a>
       <li><a href= "#2.8">2.8 - sftp/scp kann keine Verbindung aufbauen, obwohl ssh funktioniert.</a>
d212 1
a212 1
Der OpenSSH Client benutzt die unteren ports f&uuml;r rhosts und rhosts-rsa Authentifikation, da der Server dem Usernamen vertrauen muss,
d259 1
a259 1
Alternativ kannst du das folgende in deine ssh 2.3's <i>/etc/sshd2_config</i> einf&uuml;gen.
d272 11
a282 5
<p>
Zus&auml;tzlich zur fehlerhaften HMAC Implementation wurden Probleme bei der Interoperation gesichtet, die daher r&uuml;hren, dass OpenSSH 
noch kein 'rekeying' unterst&uuml;tzt. SSH 2.3 versucht diese Option aber zu verhandeln, und du siehst daher vielleicht eingefrorene
Verbindungen oder auch Fehlermeldungen wie &quot;<b>Dispatch protocol error: type 20</b>&quot;. Um dieses Problem zu l&ouml;sen 
solltest du entweder auf SSH 2.4 upgraden oder das 'rekeying' abschalten, indem du das folgende in deine kommerzielle SSH 2.3's <i>sshd_config</i> eintr&auml;gst.
d296 1
a296 1
<h2><a name= "2.4">2.4 - Alte Versionen kommerzieller SSH encrypt host keys mit IDEA.</a></h2>
d317 1
a317 1
<h2><a name= "2.5">2.5 - Was sind das das f&uuml;r Warnungen &uuml;ber Schl&uuml;ssell&auml;ngen?</a></h2>
d332 1
a332 1
<h2><a name= "2.6">2.6 - X11 und/oder 'agent forwarding' funktioniert nicht.</a></h2>
d380 1
a380 1
<h2><a name= "2.7">2.7 Nach dem Upgrade auf OpenSSH 2.5.1 habe ich keine SSH2 Untzerst&uuml;tzung mehr.</a></h2>
d398 1
a398 1
<h2><a name= "2.8">sftp/scp kann keine Verbindung aufbauen, obwohl ssh funktioniert.</a></h2>
d571 23
a593 2
Aktuelle Versionen von OpenSSH k&ouml;nnen beim Beenden h&auml;ngen. Das kann passieren, wenn es einen aktiven Hintergrundprozess gibt. 
Bekannt ist das bisher von Linux und HP-UX.  Das Problem kann mittels <I>sleep 20&exit</I> verifiziert werden:
d607 1
a607 1
Originally [OpenBSD: faq.html,v 1.39 ]
d609 1
a609 1
$Translation: faq.html,v 1.26 2001/06/10 15:10:25 jufi Exp $
d612 1
a612 1
<small>$OpenBSD: faq.html,v 1.39 2001/06/09 16:39:05 pvalchev Exp $</small>
@


1.24
log
@
updated.
@
text
@d66 1
a66 1
OpenSSH ist eine <b>FREIE</b> Version der SSH Suite von Netzwerkverbindungs-Tools, auf die sich eine steigende Zahl von Leuten im Internet verlassen. Viele Benutzer von telnet, rlogin, ftp und anderen solchen Programmen haben noch nicht realisiert, dass ihr Passwort unverschl&uuml;selt &uuml;ber das  Internet &uuml;bertragen wird, aber so ist es. OpenSSH verschl&uuml;sselt den Verkehr (inklusive Passw&ouml;rtern) um 'eavesdropping', 'connection hijacking', und andere Angriffe auf Netzwerk-Level effektiv zu eliminieren.
d97 1
a97 1
       <li>Willk&uuml;rliche TCP/IP Ports k&ouml;nnen durch den verschl&uuml;sselten Kanal gelenkt werden, und zwar in beiden Richtungen (z.B., f&uuml;r e-cash Transaktionen).
d579 1
a579 1
Originally [OpenBSD: faq.html,v 1.38 ]
d581 1
a581 1
$Translation: faq.html,v 1.25 2001/06/07 06:43:07 jufi Exp $
d584 1
a584 1
<small>$OpenBSD: faq.html,v 1.38 2001/06/07 04:10:05 pvalchev Exp $</small>
@


1.23
log
@
Entry about X11forwarding corrected.
@
text
@d41 1
a41 1
       <li><a href= "#2.8">2.8 - sftp/scp kann keine Verbindung aufbauen, obwohl ssh klappt.</a>
d391 1
a391 1
<h2><a name= "2.8">sftp/scp kann keine Verbindung aufbauen, obwohl ssh klappt.</a></h2>
d579 1
a579 1
Originally [OpenBSD: faq.html,v 1.37 ]
d581 1
a581 1
$Translation: faq.html,v 1.24 2001/05/24 10:20:51 jufi Exp $
d584 1
a584 1
<small>$OpenBSD: faq.html,v 1.37 2001/05/22 08:03:24 kevlo Exp $</small>
@


1.22
log
@
Updated.
@
text
@d329 1
a329 1
'X11 forwarding' ab. F&uuml;ge die Zeilen unten ein, um sie zu aktivieren.
d336 1
a336 2
<b>X11Forwarding yes</b><br>
<b>ForwardAgent yes</b>
d343 15
d579 1
a579 1
Originally [OpenBSD: faq.html,v 1.36 ]
d581 1
a581 1
$Translation: faq.html,v 1.23 2001/05/06 13:58:32 jufi Exp $
d584 1
a584 1
<small>$OpenBSD: faq.html,v 1.36 2001/05/05 22:57:07 markus Exp $</small>
@


1.21
log
@
more updates.
@
text
@d258 1
a258 1
Alternativ kannst du das folgende in deine ssh 2.3's <i>/etc/sshd_config</i> einf&uuml;gen.
d565 1
a565 1
Originally [OpenBSD: faq.html,v 1.35 ]
d567 1
a567 1
$Translation: faq.html,v 1.22 2001/03/22 20:57:02 jufi Exp $
d570 1
a570 1
<small>$OpenBSD: faq.html,v 1.35 2001/03/22 13:10:23 horacio Exp $</small>
@


1.20
log
@
Sync with Badlands Translation CVS.
@
text
@d41 1
d377 21
d565 1
a565 1
Originally [OpenBSD: faq.html,v 1.33 ]
d567 1
a567 1
$Translation: faq.html,v 1.21 2001/03/01 22:18:36 jufi Exp $
d570 1
a570 1
<small>$OpenBSD: faq.html,v 1.33 2001/02/28 19:35:59 wvdputte Exp $</small>
@


1.19
log
@We are now in a new year. Crank copyright accordingly. ok markus@@
@
text
@d1 1
a1 1
<!DOCTYPE HTML PUBLIC  "-//IETF//DTD HTML Strict//EN">
d5 6
a10 6
<link rev=made href=mailto:www@@openbsd.org>
<meta name="resource-type" content="document">
<meta name="description" content="the OpenSSH project portable version upgrading issues page">
<meta name="keywords" content="openbsd,portable version,upgrading">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 1999-2001 by OpenBSD.">
d13 408
a420 1
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
a421 1
<img alt="[OpenSSH]" height=30 width=141 SRC="../images/smalltitle.gif">
d423 1
a423 1
<h2><font color=#e00000>Portabibilit&auml;t von OpenSSH - Upgrading Hinweis</font><hr></h2>
a424 280
<P>
	OpenSSH is fast komplett kompatibel mit dem kommerziellenl SSH 1.2.x.
	Es gibt aber trotzdem ein paar Ausnahmen, die du im Kopf behalten musst, wenn du ein Upgrade machst oder SSH zu einem System hinzuf&uuml;gen willst, das nicht standardm&auml;ssig mit SSH ausgeliefert wird.
	
</P>

<OL>
<li><strong>Warum initiiert ssh/scp Verbindungen von den unteren Ports. Meine Firewall
       blockiert sie.
       </strong><p>

       Der OpenSSH Client benutzt die unteren Ports f&uuml;r rhosts und rhosts-rsa Authentifikation,
       weil der Server dem Usernamen vertrauen muss, der vom Client geliefert wird.
       <p>
        Um SSH davon abzuhalten, f&uuml;ge einfach
       <pre>UsePrivilegedPort no</pre> in deine <i>ssh_config</I> oder 
       <i>~/.ssh/config</i> Dateien ein, entferne das setuid Bit vom ssh 
       Programm oder f&uuml;ge <pre>-o "UsePrivilegedPort no"</pre> in deine
       ssh ode scp Kommandzeile ein.
       <p>

<li><strong>Warum ist der ssh Client setuid root?
       </strong><p>

       Der ssh client muss einen niedrigen port f&uuml;r die  rhosts und rhosts-rsa Authentifikation
       benutzen. Du kannst das setuid Bit vom ssh Programm entfernen, wenn du diese Authentifikation 
       nicht benutzen willst.
       <p>

<li><strong>Enth&auml;lt OpenSSH das SFTP Subsystem ?
       </strong><p>
        In OpenSSH 2.3.0 hat Markus Friedl Unterst&uuml;tzung f&uuml;r einen SFTP
        Server hinzugef&uuml;gt, der das SFTP Protokoll implementiert, das von mehreren kommerziellen
        SSH Clients benutzt wird. Mehr Informationen gibt in der
       <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd">sshd</a>
       manpage unter der <b>Subsystem</b> Option.
	<p>

<li><strong>Warum hat SSH 2.3 Probleme in der Zusammenarbeit mit OpenSSH 2.1.1?
       </strong><p>
       SSH 2.3 und fr&uuml;here Versionen haben einen Fehler in der HMAC Implementation.
       Ihr Code hat nicht den kompletten Datenblock aus der Auswahl bereitgestellt, sondern
       stattdessen immer 128 Bits. Bei l&auml;ngeren Auswahlen f&uuml;hrte das dazu, dass
       SSH 2.3 nicht mit OpenSSH zusammenarbeitet.		
       <p>
       OpenSSH 2.2.0 kennt diesen Fehler von SSH 2.3. Zuk&uuml;nftige Versionen von SSH werden
       diesen Fehler nicht mehr haben. 
       <p>
<li><strong>OpenSSH unterst&uuml;tzt keine patentierten Transportalgorithmen.
       </strong><p>
			Im SSH1 Modus k&ouml;nnen nur 3DES und Blowfish ausgew&auml;hlt werden.
			Im SSH2 Modus k&ouml;nnen zur Zeit nur 3DES, Blowfish, CAST128 oder Arcfour 
			ausgew&auml;hlt werden. Der patentierte und veraltete IDEA Algoritmus wird nicht
			unterst&uuml;tzt.
			<p>
			Dieser Unterschied
			kann sich darin manifestieren ,dass sich das ssh Kommando weigert, 
			Config-Files aus einer vorhergehenden Installation des kommerziellen 
			ssh zu lesen.
		</p>
		</p>
			<b><i>L&ouml;sung:</i></b>
			Editiere <I>/etc/ssh/ssh_config</I> und w&auml;hle eine andere 
			<B>Cipher</B> Option ("3des" oder "blowfish").
			<p>
	</LI>
	<li><strong>Alte Versionen des kommerziellen SSH verschl&uuml;sseln Host keys mit IDEA
		</strong><p>
			Die alten Versionen von SSH benutzen einen patientierten Algorithmus um ihren
	       		<i>/etc/ssh/ssh_host_key</i>.  Dieses Problem wird sich darin manifestieren,
			dass der 
	       		<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd">sshd</a>
	        	nicht mehr in der Lage ist, seinen eigenen 'host-key' zu lesen.
			        <p>
			<b><i>L&ouml;sung:</i></b>
			 Du wirst die <U>kommerzielle</U> Version von 
			ssh-keygen f&uuml;r den privaten key des Host's anwenden m&uuml;ssen:
		</P>
		<P>
	       <pre>
	       # ssh-keygen -u -f /etc/ssh/ssh_host_key
	       </pre>
	        Das wird den Key zu 3DES "upgraden".
		<p>
	</LI>

	<LI>
	<strong>Inkompatible &Auml;nderungen am <I>sshd_config</I> Format.
		</strong>
		<P>
			OpenSSH erweitert das <I>sshd_config</I> Dateiformat in einer ganzen Reihe von 
			Dingen. Momentan gibt es genau eine &Auml;nderung, die inkompatibel mit der 
			alten Form ist.
		</P>
		<P>
			Kommerzielles SSH kontrollierte Logging mit Hilfe der <B>QuietMode</B> und
			<B>FascistLogging</B> Direktiven. OpenSSH f&uuml;hrt ein
			allgemeines Set von Loggingoptionen ein, n&auml;mlich <B>SyslogFacility</B> und 
			<B>LogLevel</B>. Siehe sshd Manual Page.
		</P>
	</LI>
	<LI><strong>Warnhinweise wegen Schl&uuml;ssell&auml;ngen
		</strong>
		<P>
			Das ssh-keygen Programm des kommerziellen SSH beinhaltet einen Bug, der dazu f&uuml;hrt, 
			dass ab und zu ein RSA Schl&uuml;ssel generiert wird, bei dem das
			Most Significant Bit (MSB) nicht gesetzt ist.
			Solche Schl&uuml;ssel werden als solche mit voller L&auml;nge ausgegeben, sind tats&auml;chlich
			aber die H&auml;lfte der Zeit nur halb so lang wie angegeben.
		</P>
		<P>
			OpenSSH wird Warnhinweise ausgeben, wenn es solche Schl&uuml;ssel bemerkt.
			Um diese Hinweise loszuwerden editiere deine known_hosts Datei und ersetze
			die unkorrekte Schl&uuml;ssell&auml;nge (f&uuml;r gew&ouml;hlich"1024") mit der korrekten Schl&uuml;ssell&auml;nge
			(f&uuml;r gew&ouml;hnlich "1023"). Wie auch immer, wie vorher bereits gesagt sind diese Schl&uuml;ssel
			weniger sicher, so dass es am besten ist, einfach neue zu erzeugen.
		</P>
	</LI>
	<LI>
		<strong>Portables OpenSSH: Unechte PAM Authentifikationsmeldungen in den logfiles
		</strong>
		<P>
			OpenSSH generiert unechte Authentifikationsfehlschl&auml;ge bei jedem login, 
			etwa so:

			<PRE>"authentication failure; (uid=0) -> root for sshd service"</PRE>

			Diese werden generiert, da OpenSSH zuerst pr&uuml;ft, ob ein User Authentifikation
			zum Login ben&ouml;tigt (z.B. leeres Passwort).
			Ungl&uuml;cklicherweise logt PAM alle Authenfikationsvorkommnisse, inklusive dieses.
		</P>
		<P>
			Wenn dich das zu sehr st&ouml;rt, setze <B>PermitEmptyPasswords</B> in 
			<I>sshd_config</I> auf "no". Das wird zwar die Warnmeldung abschalten, verhindert
			aber auch das Einloggen ohne gesetztes Passwort. Das ist &uuml;brigens die Standardeinstellung
			wenn du mit dem mitgelieferten <I>sshd_config</I> File arbeitest.
		</P>
	</LI>
	<LI>
		<strong>Portables OpenSSH:Leere Passw&ouml;rter sind bei der PAM Authentifikation nicht erlaubt.
		</strong>
		<P>
			Um leere Passw&ouml;rter bei einer Version von OpenSSH zu gestatten, die mit PAM
			erzeugt wurde, musst du das Flag <B>nullok</B> am Ende des Password Checking 
			Moduls in der <I>/etc/pam.d/sshd</I> Datei setzen. Zum Beispiel:

			<PRE>auth required/lib/security/pam_unix.so shadow nodelay nullok</PRE>

			Das muss zus&auml;tzlich zum Setzen von <B>PermitEmptyPasswords</B> 
			"yes" in der <I>sshd_config</I> Datei geschehen.
		</P>
		<P>
			Es gibt ein Problem mit dem Benutzen von leeren Passw&ouml;rtern mit PAM
			Authentifikation: PAM erlaubt <U>jegliches</U> Passwort beim Authentifizieren
			eines Accounts mit leerem Passwort. Das setzt den Check ausser Kraft, den sshd
			benutzt, um festzustellen ob ein Account kein Passwort gesetzt hat und gibt den Zugang
			zum Account frei, unabh&auml;ngig davon, wie die Policy in
			<B>PermitEmptyPasswords</B> ist. Aus diesem Grund wird empfohlen
			die <B>nullok</B> Direktive nicht in deine PAM Konfigurationsdatei 
			aufzunehmen, es sei denn du willst unbedingt leere Passw&ouml;rter erlauben.
		</P>
	</LI>
	<LI>
	<strong>X11 und/oder agent forwarding funktioniert nicht
		</strong>
		<P>
			&Uuml;berpr&uuml;fe deine <I>ssh_config</I> und <I>sshd_config</I>. Die Standard-
			Konfigurationsdatei schaltet die Authentifikation f&uuml;r agent und X11 forwarding ab.
		</P>

		<P>
		Mandrake Linux 7.2 ver&auml;ndert auch die XAUTHORITY Umgebungsvariable in /etc/skel/.bashrc und daher jedes Heimatverzeichnis der Bash-Ben&uuml;tzer. Dies verhindert X11 forwarding, es sei denn, die folgende Zeile ist auskommentiert: "export XAUTHORITY=$HOME/.Xauthority"
		</P>

	</LI>
		<li><strong><a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssh">ssh</a>
		    braucht eine lange Zeit, um mit Linux/glibc 2.1 zu connecten</strong><p>
		    
			Die mit Redhat 6.1 ausgeliferte glibc2.1 scheint eine lange Zeit zu ben&ouml;tigen
			um "IPv6 oder IPv4" Addressen von Domainnamen aufzul&ouml;sen. Das kann umgangen werden,
			indem man die <B>--with-ipv4-default</B> Konfigurations-Option benutzt. 
			Die weist OpenSSH an, nur IPv4 Adressaufl&ouml;sung zu benutzen. (IPv6
			lookups k&ouml;nnen trotzdem mit Hilfe der -6 Option gemacht werden).
		</P>
	</LI>
	<LI><strong>
		Logins vom kommerziellen ssh erzeugt diesen Fehler:
		<PRE>Selected cipher type idea not supported by server</PRE>
			</strong>
			Dieser Fehler wird erzeugt, wenn ein kommerzielles ssh, das mit der
			Option 'idea' Chiffre konfiguriert wurde, versucht einen OpenSSH Server
			zu kontaktieren. Um das geradezubiegen, w&auml;hle eine andere Chiffre in den
			<I>ssh_config</I> oder <I>~/.ssh/config</I> Dateien (3des f&uuml;r Sicherheit oder
			blowfish f&uuml;r Geschwindigkeit).
		</P>
	</LI>
	<LI><strong>
		Portables OpenSSH: "Can't locate module net-pf-10" Meldungen im log unter Linux</strong>
		<P>
			Der Linux kernel pr&uuml;ft (via modprobe) ob die Protokollfamilie 10 
			(IPv6) da ist. Lade entweder das entsprechende Kernelmodul, trag den entsprechenden 				
			Alias in <I>/etc/modules.conf</I> ein oder schalte IPv6 in 
			<I>/etc/modules.conf</I> ab.
		</P>
		<P>
			Aus einem bl&ouml;dsinnigen Grund kann <I>/etc/modules.conf</I> auch als
			<I>/etc/conf.modules</I> benannt sein.
		</P>
	</LI>
	<LI>
	<strong>Portables OpenSSH: Password Authentifikation klappt nicht auf Slackware 7.0</strong>
		<P>
			Linke OpenSSH mit libcrypt:

			<PRE>LIBS=-lcrypt ./configure [options]</PRE>
		</P>
	</LI>
	<LI>
		<strong>Portables OpenSSH: configure oder sshd beschweren sich &uuml;ber fehlenden RSA Support</strong>
		<P>
			Stelle sicher, dass deine OpenSSL libraries mit eingebauter RSA
			Unterst&uuml;tzung entweder intern oder mit Hilfe von RSAref erzeugt wurden.
		</P>
	</LI>
	<LI>
		<li><strong>Portable OpenSSH: "scp: command not found" Fehler</strong><p>
		<P>
			scp muss im Standard-Pfad (PATH) sowohl im Server als auch im Client sein.
			M&ouml;glicherweise musst du auch die <B>--with-default-path</B> Option setzen, um 
			einen gew&uuml;nschten Pfad auf dem Server anzugeben, in dem gesucht werden soll. Diese Option ersetzt den
			Standardpfad, so dass du alle momentan enthaltenen Verzeichnisse angeben musst, und ausserdem
			muss scp installiert sein.
			Zum Beispiel:
			<PRE>./configure --with-default-path=/bin:/usr/bin:/usr/local/bin:/path/to/scp</PRE>
		<p>
			<li><strong>Portable OpenSSH: Unable to read passphrase</strong><p>

		   	Einige Betriebssysteme setzen /dev/tty mit falschen Modi, was das Lesen von Passw&ouml;rtern 
			verhindert, und folgenden Fehlercode erzeugt:

			<pre>You have no controlling tty.  Cannot read passphrase.</pre>

			Die L&ouml;sung dazu ist, die Rechte von /dev/tty auf
			Modus 0666 zu setzen und den Fehler als Bug an den Betriebssystemhersteller oder Distributor zu schicken.

<li><strong>Portables OpenSSH: 'configure' fehlt oder make versagt</strong><p>

       Wenn es in der tar.gz-Datei, die du runtergeladne hast, keine 'configure' 
       Datei gibt, oder 
       <em>make</em> mit der Fehlermeldung "missing separator" versagt, hast du 
       wahrschienlich die OpenBSD Distribution von OpenSSH heruntergeladen und
       versuchst sie auf einer anderen Plattform zu kompilieren. Bitte lies die 
       Information auf der Seite der <a href="portable.html">portablen</a> Version.

<p>

<li><strong>Als Amerikaner bin ich ziemlich verwirrt bez&uuml;glich dieser Patentsache.
       </strong><p>

       OpenSSH bietet Unterst&uuml;tzung f&uuml;r sowohl das SSH1 als auch das SSH2 Protokoll.
       <p>
       Das SSH1 Protokoll benutzt den RSA Algorithmus, welcher bis zum 
       21. September diesen Jahres innerhalb der USA einem Patent unterlag. Ausserhalb der USA
       war nichts davon jemals relevant.
       <p>
       Das SSH2 Protokoll benutzt DH und DSA, zwei andere Algorithmen, die keinen &auml;rgerlichen
       Patenten unterliegen.  Wenn du die Benutzugn des SSH1 Protokolls vermeiden kannst,
       und nur das SSH2 Protokoll benutzt, brauchst du dir um nichts Gedanken zu machen.
       Du wirst dann aber trotzdem SSH2-kompatible Clients und Server f&uuml;r deine anderen
       Maschinen finden m&uuml;ssen.  F&uuml;r einige User kann das ein kleines Problem werden, da uns
       zur Zeit keine freien SSH2 Windows Clients bekannt sind.
       <p>
       Da das RSA Patent abgelaufen ist, gibt es keinerlei Beschr&auml;nkungen mehr bei der Benutzung
       von Software mit dem RSA Algorithmus, inklusive OpenBSD.
        <p>

</ol>
		</P>
	</LI>
</UL>
d426 112
d540 1
a540 1
<a href=mailto:www@@openbsd.org>www@@openbsd.org</a>
d543 1
a543 1
Originally [OpenBSD: faq.html,v 1.21 ]
d545 1
a545 1
$Translation: faq.html,v 1.19 2000/12/26 19:18:18 jufi Exp $
d548 1
a548 1
<small>$OpenBSD: faq.html,v 1.18 2000/12/26 19:53:39 jufi Exp $</small>
@


1.18
log
@
Small syntax corrections
@
text
@d10 1
a10 1
<meta name="copyright" content="This document copyright 1999 by OpenBSD.">
d310 1
a310 1
<small>$OpenBSD: faq.html,v 1.21 2000/12/26 09:48:51 jufi Exp $</small>
@


1.17
log
@
More updates.
@
text
@d80 1
a80 1
			<B><I>L&ouml;sung:</B></I>
d93 1
a93 1
			<B><I>L&ouml;sung:</B></I>
d305 1
a305 1
Originally [OpenBSD: faq.html,v 1.20 ]
d307 1
a307 1
$Translation: faq.html,v 1.18 2000/12/14 20:05:38 jufi Exp $
d310 1
a310 1
<small>$OpenBSD: faq.html,v 1.20 2000/12/14 12:09:53 djm Exp $</small>
@


1.16
log
@
Updated by reinhard@@
@
text
@d263 12
d305 1
a305 1
Originally [OpenBSD: faq.html,v 1.19 ]
d307 1
a307 1
$Translation: faq.html,v 1.17 2000/11/30 14:17:10 reinhard Exp $
d310 1
a310 1
<small>$OpenBSD: faq.html,v 1.18 2000/11/15 22:57:54 markus Exp $</small>
@


1.15
log
@
More updates.
@
text
@d185 1
a185 1
			Checke deine <I>ssh_config</I> und <I>sshd_config</I>. Die Standard-
d188 5
d293 1
a293 1
Originally [OpenBSD: faq.html,v 1.18 ]
d295 1
a295 1
$Translation: faq.html,v 1.16 2000/11/16 22:02:22 jufi Exp $
@


1.14
log
@
more updates.
@
text
@d48 1
a48 1
<li><strong>Als Amerikaner bin ich ziemlich verwirrt bez&uuml;glich dieser Patentsache.
d50 5
a54 16

       OpenSSH bietet Unterst&uuml;tzung f&uuml;r sowohl das SSH1 als auch das SSH2 Protokoll.
       <p>
       Das SSH1 Protokoll benutzt den RSA Algorithmus, welcher bis zum 
       21. September diesen Jahres innerhalb der USA einem Patent unterlag. Ausserhalb der USA
       war nichts davon jemals relevant.
       <p>
       Das SSH2 Protokoll benutzt DH und DSA, zwei andere Algorithmen, die keinen &auml;rgerlichen
       Patenten unterliegen.  Wenn du die Benutzugn des SSH1 Protokolls vermeiden kannst,
       und nur das SSH2 Protokoll benutzt, brauchst du dir um nichts Gedanken zu machen.
       Du wirst dann aber trotzdem SSH2-kompatible Clients und Server f&uuml;r deine anderen
       Maschinen finden m&uuml;ssen.  F&uuml;r einige User kann das ein kleines Problem werden, da uns
       zur Zeit keine freien SSH2 Windows Clients bekannt sind.
       <p>
       Da das RSA Patent abgelaufen ist, gibt es keinerlei Beschr&auml;nkungen mehr bei der Benutzung
       von Software mit dem RSA Algorithmus, inklusive OpenBSD.
a55 13
<li><strong>OpenSSH implementiert nicht das SFTP Subsystem.
       </strong><p>
       W&auml;hrend das SSH Protokoll in den IETF SECSH Entw&uuml;rfen spezifiziert ist, ist das SFTP
       Subsystem, das in manchen kommerziellen SSH Implementationen enthalten ist, nicht Teil dieser offiziellen
       SSH Protokoll Spezifikationen. Es ist ein propriet&auml;res Protokoll, eingef&uuml;hrt und
       erfunden von der SSH Communications Security Corp.
       Es k&ouml;nnte 'reverse engineered' werden, aber wir haben darin noch keinerlei
       Anstrengungen investiert.
       <p>
       <strong>UPDATE</strong>: Markus Friedl hat einige Zeit investiert und das
       Protokoll "reverse engineered". Die n&auml;chste Version nach 2.2.0 wird eine
       sftp-Server Implimentation enthalten.
       <p>
d258 20
d288 1
a288 1
Originally [OpenBSD: faq.html,v 1.17 ]
d290 1
a290 1
$Translation: faq.html,v 1.15 2000/10/21 18:00:25 jufi Exp $
d293 1
a293 1
<small>$OpenBSD: faq.html,v 1.17 2000/10/15 00:36:29 djm Exp $</small>
@


1.13
log
@
Updated.
@
text
@d26 22
d292 1
a292 1
Originally [OpenBSD: faq.html,v 1.15 ]
d294 1
a294 1
$Translation: faq.html,v 1.14 2000/10/11 19:41:39 jufi Exp $
d296 2
a297 1
<small>$OpenBSD: faq.html,v 1.15 2000/10/09 07:40:46 reinhard Exp $</small>
@


1.12
log
@
More updates and a little cleanup.
@
text
@d270 1
a270 1
Originally [OpenBSD: faq.html,v 1.14 ]
d272 1
a272 1
$Translation: faq.html,v 1.13 2000/09/26 19:00:47 jufi Exp $
d274 1
a274 1
<small>$OpenBSD: faq.html,v 1.14 2000/09/25 20:07:41 deraadt Exp $</small>
@


1.11
log
@
Yet another update.
@
text
@d32 2
a33 2
       21. September diesen Jahres innerhalb der USA einem Patent unterliegt. Ausserhalb der USA
       ist nichts davon relevant.
d42 3
a44 48
       Es gibt eine Implementation des RSA Algorithmus von RSA Inc, die mit einer
       <a href="http://www.spinnaker.com/crypt/rsaref/license.txt">
       nicht-kommerziellen Benutzungslizenz</a> ausgeliefert wird. Obwohl das keine sehr gute Implementation 
       des RSA Algorithmus ist, ist es doch die einzige, die innerhalb der USA ohne weitere
       Kosten benutzt werden kann. Die relevanten Sektionen
       der Lizenz -- die die Nutzungskonditionen beschreiben -- sind unten aufgef&uuml;hrt.
       <p>
       <pre>
    b.   Das Programm darf nicht benutzt werden ,wenn damit Einkommen erzielt
          werden. Sie d&uuml;rfen nicht:

          (i)  das Programm benutzen, um Dienste f&uuml;r andere bereitzustellen,
               f&uuml;r die sie in irgendeiner Art entlohnt werden;

          (ii)Anwendungsprogramme, die unser Produkt einsetzen, lizensieren oder sie in 
              andere Weise verbreiten, sofern diese Einkommen generieren, inklusive 
              Geschenken, Wartungskosten oder Upgradekosten;

          (iii) Anwendungsprogramme lizensieren oder in anderer Weise verbreiten
               ohne die ausdr&uuml;ckliche schriftiche Best&auml;tigung des Endbenutzers,
               dass das Programm nicht f&uuml;r irgendeine T&auml;tigkeit eingesetzt wird,
               die f&uuml;r den Endbenutzer Einkommen generiert.

          Nichts in diesem Paragraphen verbietet dir das Programm oder irgendein anderes 
          Andwendungsprogramm allein f&uuml;r interne Zwecke aber unter der Pr&auml;misse 
          des Geldwerterzeugens in einem Gesch&auml;ft einzusetzen.
       </pre>
       <p>

       <p>
       Also, wenn du OpenBSD in den USA als nicht-kommerzieller User benutzen willst,
       nimm das <b>sslUSA27</b> package anstatt des <b>ssl27</b> package.
       Dann kannst du sowohl das SSH1 als auch das SSH2 Protokoll benutzen.  Das <b>sslUSA27</b>
       package enth&auml;lt eine OpenSSL Implementation, die mit dem RSAREF2
       gelinkt ist, der von den RSA Labs geschrieben wurde, und zwar mit der oben genannten Lizenz.
       Ohne das ssl package ist SSH aber nicht nutzlos, da das SSH2 Protokoll immer noch funktioniert.
       Du brauchst einen ssh2-kompatiblen ssh Client (VanDyke Technologies verkaufen
       SecureCRT, und ssh.com hat einen Client [aber der ist nicht sehr gut]),
       ich weiss von keinem freien ssh2 Client f&uuml;r Windows.
       Das SSH2 Protokoll wurde geschrieben, damit RSA nicht ben&ouml;tigt wird, so dass es also
       keine Patentprobleme gibt (die relevanten Patente sind 1997 ausgelaufen).
       <p>
       Die selben Basisregeln gelten f&uuml;r die portablen OpenSSH Version. Wieder macht ein 
       sorgf&auml;ltiges Lesen der obigen Lizenz klar, dass das Besitzen einer SSH1 Implementation an sich
       keinerlei Verletzung der Lizenzbedingungen darstellt, dazu braucht es ein bestimmtes Verhalten.
       Nach unsere Meinung ist das aber vollkommen irrelevant, wenn man bedenkt, dass das ganze Problem im
       September verschwindet.
       <p>
d270 1
a270 1
Originally [OpenBSD: faq.html,v 1.13 ]
d272 1
a272 1
$Translation: faq.html,v 1.12 2000/09/01 22:54:20 jufi Exp $
d274 1
a274 1
<small>$OpenBSD: faq.html,v 1.13 2000/09/01 15:44:19 deraadt Exp $</small>
@


1.10
log
@
Updated.
@
text
@d99 4
d104 10
d315 1
a315 1
Originally [OpenBSD: faq.html,v 1.12 ]
d317 1
a317 1
$Translation: faq.html,v 1.11 2000/08/04 08:31:12 jufi Exp $
d319 1
a319 1
<small>$OpenBSD: faq.html,v 1.12 2000/08/04 06:54:15 jufi Exp $</small>
@


1.9
log
@
changes like in english version, i.e. Updated.
@
text
@d301 1
a301 1
Originally [OpenBSD: faq.html,v 1.11 ]
d303 1
a303 1
$Translation: faq.html,v 1.10 2000/08/01 12:53:44 jufi Exp $
d305 1
a305 1
<small>$OpenBSD: faq.html,v 1.11 2000/07/31 23:38:02 deraadt Exp $</small>
@


1.8
log
@
Catching up.
@
text
@d301 1
a301 1
Originally [OpenBSD: faq.html,v 1.10 ]
d303 1
a303 1
$Translation: faq.html,v 1.9 2000/07/30 10:09:31 jufi Exp $
d305 1
a305 1
<small>$OpenBSD: faq.html,v 1.10 2000/07/29 17:10:01 markus Exp $</small>
@


1.7
log
@
Updated.
@
text
@d303 1
a303 1
$Translation: faq.html,v 1.8 2000/07/23 21:43:08 jufi Exp $
@


1.6
log
@
New version, no typos in here .. hopefully.. :-)
@
text
@d92 2
a93 2
       W&auml;hrend das SSH Protokoll eine offizelle IETF Spezifikation ist, ist das SFTP
       Subsystem aus dem kommerziellen SSH nicht Teil dieser offiziellen
d301 1
a301 1
Originally [OpenBSD: faq.html,v 1.9 ]
d305 1
a305 1
<small>$OpenBSD: faq.html,v 1.9 2000/07/23 21:34:44 jufi Exp $</small>
@


1.5
log
@
Updated.
@
text
@d301 1
a301 1
Originally [OpenBSD: faq.html,v 1.8 ]
d303 1
a303 1
$Translation: faq.html,v 1.7 2000/07/22 16:59:41 jufi Exp $
d305 1
a305 1
<small>$OpenBSD: faq.html,v 1.8 2000/07/21 19:27:07 deraadt Exp $</small>
@


1.4
log
@
And the 8-bit cleanup for openssh.. faq to follow
@
text
@d26 64
d301 1
a301 1
Originally [OpenBSD: faq.html,v 1.7 ]
d303 1
a303 1
$Translation: faq.html,v 1.5 2000/06/30 18:44:24 jufi Exp $
d305 1
a305 1
<small>$OpenBSD: faq.html,v 1.7 2000/06/10 03:43:31 deraadt Exp $</small>
@


1.3
log
@
Simply brought up to date.
@
text
@d17 1
a17 1
<h2><font color=#e00000>Portabibilität von OpenSSH - Upgrading Hinweis</font><hr></h2>
d21 1
a21 1
	Es gibt aber trotzdem ein paar Ausnahmen, die du im Kopf behalten musst, wenn du ein Upgrade machst oder SSH zu einem System hinzufügen willst, das nicht standardmässig mit SSH ausgeliefert wird.
d28 1
a28 1
       Während das SSH Protokoll eine offizelle IETF Spezifikation ist, ist das SFTP
d30 1
a30 1
       SSH Protokoll Spezifikationen. Es ist ein proprietäres Protokoll, eingeführt und
d32 1
a32 1
       Es könnte 'reverse engineered' werden, aber wir haben darin noch keinerlei
d36 1
a36 1
<li><strong>OpenSSH unterstützt keine patentierten Transportalgorithmen.
d38 4
a41 4
			Im SSH1 Modus können nur 3DES und Blowfish ausgewählt werden.
			Im SSH2 Modus können zur Zeit nur 3DES, Blowfish, CAST128 oder Arcfour 
			ausgewählt werden. Der patentierte und veraltete IDEA Algoritmus wird nicht
			unterstützt.
d49 2
a50 2
			<B><I>Lösung:</B></I>
			Editiere <I>/etc/ssh/ssh_config</I> und wähle eine andere 
d54 1
a54 1
	<li><strong>Alte Versionen des kommerziellen SSH verschlüsseln Host keys mit IDEA
d62 1
a62 1
			<B><I>Lösung:</B></I>
d64 1
a64 1
			ssh-keygen für den privaten key des Host's anwenden müssen:
d75 1
a75 1
	<strong>Inkompatible Änderungen am <I>sshd_config</I> Format.
d79 1
a79 1
			Dingen. Momentan gibt es genau eine Änderung, die inkompatibel mit der 
d84 2
a85 2
			<B>FascistLogging</B> Direktiven. OpenSSH führt ein
			allgemeines Set von Loggingoptionen ein, nämlich <B>SyslogFacility</B> und 
d89 1
a89 1
	<LI><strong>Warnhinweise wegen Schlüssellängen
d92 2
a93 2
			Das ssh-keygen Programm des kommerziellen SSH beinhaltet einen Bug, der dazu führt, 
			dass ab und zu ein RSA Schlüssel generiert wird, bei dem das
d95 2
a96 2
			Solche Schlüssel werden als solche mit voller Länge ausgegeben, sind tatsächlich
			aber die Hälfte der Zeit nur halb so lang wie angegeben.
d99 1
a99 1
			OpenSSH wird Warnhinweise ausgeben, wenn es solche Schlüssel bemerkt.
d101 2
a102 2
			die unkorrekte Schlüssellänge (für gewöhlich"1024") mit der korrekten Schlüssellänge
			(für gewöhnlich "1023"). Wie auch immer, wie vorher bereits gesagt sind diese Schlüssel
d110 1
a110 1
			OpenSSH generiert unechte Authentifikationsfehlschläge bei jedem login, 
d115 3
a117 3
			Diese werden generiert, da OpenSSH zuerst prüft, ob ein User Authentifikation
			zum Login benötigt (z.B. leeres Passwort).
			Unglücklicherweise logt PAM alle Authenfikationsvorkommnisse, inklusive dieses.
d120 1
a120 1
			Wenn dich das zu sehr stört, setze <B>PermitEmptyPasswords</B> in 
d122 1
a122 1
			aber auch das Einloggen ohne gesetztes Passwort. Das ist übrigens die Standardeinstellung
d127 1
a127 1
		<strong>Portables OpenSSH:Leere Passwörter sind bei der PAM Authentifikation nicht erlaubt.
d130 1
a130 1
			Um leere Passwörter bei einer Version von OpenSSH zu gestatten, die mit PAM
d136 1
a136 1
			Das muss zusätzlich zum Setzen von <B>PermitEmptyPasswords</B> 
d140 1
a140 1
			Es gibt ein Problem mit dem Benutzen von leeren Passwörtern mit PAM
d144 1
a144 1
			zum Account frei, unabhängig davon, wie die Policy in
d147 1
a147 1
			aufzunehmen, es sei denn du willst unbedingt leere Passwörter erlauben.
d155 1
a155 1
			Konfigurationsdatei schaltet die Authentifikation für agent und X11 forwarding ab.
d161 2
a162 2
			Die mit Redhat 6.1 ausgeliferte glibc2.1 scheint eine lange Zeit zu benötigen
			um "IPv6 oder IPv4" Addressen von Domainnamen aufzulösen. Das kann umgangen werden,
d164 2
a165 2
			Die weist OpenSSH an, nur IPv4 Adressauflösung zu benutzen. (IPv6
			lookups können trotzdem mit Hilfe der -6 Option gemacht werden).
d174 3
a176 3
			zu kontaktieren. Um das geradezubiegen, wähle eine andere Chiffre in den
			<I>ssh_config</I> oder <I>~/.ssh/config</I> Dateien (3des für Sicherheit oder
			blowfish für Geschwindigkeit).
d182 1
a182 1
			Der Linux kernel prüft (via modprobe) ob die Protokollfamilie 10 
d188 1
a188 1
			Aus einem blödsinnigen Grund kann <I>/etc/modules.conf</I> auch als
d201 1
a201 1
		<strong>Portables OpenSSH: configure oder sshd beschweren sich über fehlenden RSA Support</strong>
d204 1
a204 1
			Unterstützung entweder intern oder mit Hilfe von RSAref erzeugt wurden.
d211 2
a212 2
			Möglicherweise musst du auch die <B>--with-default-path</B> Option setzen, um 
			einen gewünschten Pfad auf dem Server anzugeben, in dem gesucht werden soll. Diese Option ersetzt den
d220 1
a220 1
		   	Einige Betriebssysteme setzen /dev/tty mit falschen Modi, was das Lesen von Passwörtern 
d225 1
a225 1
			Die Lösung dazu ist, die Rechte von /dev/tty auf
d239 1
a239 1
$Translation: faq.html,v 1.4 2000/06/11 10:52:58 jufi Exp $
@


1.2
log
@
Sync with Badlands Translation CVS. Work by Jufi.
@
text
@d38 6
a43 1
			Nur 3DES und Blowfish können ausgewählt werden. Dieser Unterschied
d208 1
a208 1
	<strong>"scp: command not found" Fehler</strong>
d217 11
d237 1
a237 1
Originally [OpenBSD: faq.html,v 1.5 ]
d239 1
a239 1
$Translation: faq.html,v 1.3 2000/06/01 15:21:45 jufi Exp $
d241 1
a241 1
<small>$OpenBSD: faq.html,v 1.5 2000/05/31 13:49:51 markus Exp $</small>
@


1.1
log
@Sync with Badlands Translation CVS. Work by Jufi
@
text
@d26 12
a37 3
	<LI>
		OpenSSH unterstützt keinerlei patentierten Transport Algorithmen.
		<P>
d39 5
a43 4
			kann sich darin manifestieren ,dass sich das ssh Kommando weigert, sein
			Config-File zu lesen.
		</P>
		</P>
d47 1
a47 1
		</P>
d49 2
a50 3
	<LI>
		Alte Versionen des kommerziellen SSH verschlüsseln Host keys mit IDEA
		<P>
d52 5
a56 7
			<I>/etc/ssh/ssh_host_key</I> zu verschlüsseln.
		</P>
		<P>
			Dieses Problem wird sich darin manifestieren, dass 
			<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sshd">sshd</a> nicht in der Lage ist,seinen eigenen host-key zu lesen.
		</P>
		<P>
d62 5
a66 2
			<PRE>ssh-keygen -u -f /etc/ssh/ssh_host_key</PRE>
		</P>
d70 2
a71 1
		Inkompatible Änderungen am <I>sshd_config</I> Format.
d74 2
a75 1
			Dingen. Es gibt momentan eine Änderung die inkompatibel mit der alten Form ist.
d84 2
a85 2
	<LI>
		Warnhinweise wegen Schlüssellängen
d91 1
a91 1
			aber nur halb so sicher.
d97 2
a98 1
			(für gewöhnlich "1023").
d102 2
a103 1
		Unechte PAM Authentifikationsmeldungen in den logfiles
d122 2
a123 1
		Leere Passwörter sind bei der PAM Authentifikation nicht erlaubt.
d146 2
a147 1
		X11 und/oder agent forwarding funktioniert nicht
d153 3
a155 3
	<LI>
		ssh braucht eine lange Zeit, um sich mit einem Linux/glibc 2.1 zu verbinden
		<P>
d163 1
a163 1
	<LI>
d166 1
a166 1
		<P>
d174 2
a175 2
	<LI>
		can't locate module net-pf-10" Meldungen im log unter Linux
d188 1
a188 1
		Password Authentifikation klappt nicht auf Slackware 7.0
d196 1
a196 1
		configure oder sshd beschweren sich über fehlenden RSA Support
d203 1
a203 1
		"scp: command not found" Fehler
d221 1
a221 1
Originally [OpenBSD: faq.html,v 1.2 ]
d223 1
a223 1
$Translation: faq.html,v 1.1 2000/05/08 20:41:00 jufi Exp $
d225 1
a225 1
$OpenBSD: faq.html,v 1.2 2000/05/08 01:43:12 deraadt Exp $ 
@

