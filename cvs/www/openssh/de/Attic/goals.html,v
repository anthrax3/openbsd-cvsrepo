head	1.33;
access;
symbols;
locks; strict;
comment	@# @;


1.33
date	2014.04.01.19.44.54;	author deraadt;	state dead;
branches;
next	1.32;

1.32
date	2008.03.09.13.37.14;	author tobias;	state Exp;
branches;
next	1.31;

1.31
date	2008.01.06.13.57.19;	author tobias;	state Exp;
branches;
next	1.30;

1.30
date	2007.11.12.20.28.26;	author saad;	state Exp;
branches;
next	1.29;

1.29
date	2006.05.02.17.09.35;	author jufi;	state Exp;
branches;
next	1.28;

1.28
date	2006.04.25.16.49.43;	author jufi;	state Exp;
branches;
next	1.27;

1.27
date	2006.04.24.09.23.00;	author jufi;	state Exp;
branches;
next	1.26;

1.26
date	2006.01.14.11.36.01;	author jufi;	state Exp;
branches;
next	1.25;

1.25
date	2005.09.20.07.30.03;	author saad;	state Exp;
branches;
next	1.24;

1.24
date	2005.05.30.13.52.07;	author saad;	state Exp;
branches;
next	1.23;

1.23
date	2005.05.25.22.14.53;	author saad;	state Exp;
branches;
next	1.22;

1.22
date	2005.05.19.18.23.08;	author jufi;	state Exp;
branches;
next	1.21;

1.21
date	2005.05.04.17.52.27;	author jufi;	state Exp;
branches;
next	1.20;

1.20
date	2005.01.18.17.17.24;	author jufi;	state Exp;
branches;
next	1.19;

1.19
date	2004.12.22.20.00.13;	author jufi;	state Exp;
branches;
next	1.18;

1.18
date	2004.12.15.19.33.32;	author jufi;	state Exp;
branches;
next	1.17;

1.17
date	2004.11.04.17.17.46;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2004.09.23.14.19.34;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2004.08.24.12.17.45;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.28.18.39.14;	author jufi;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.15.23.08.25;	author jufi;	state Exp;
branches;
next	1.12;

1.12
date	2003.01.17.13.02.59;	author jufi;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.20.12.31.27;	author jufi;	state Exp;
branches;
next	1.10;

1.10
date	2002.01.20.11.44.39;	author jufi;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.16.08.02.03;	author jufi;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.27.21.18.39;	author jufi;	state Exp;
branches;
next	1.7;

1.7
date	2001.02.19.17.43.41;	author jufi;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.01.15.54.00;	author todd;	state Exp;
branches;
next	1.5;

1.5
date	2000.09.26.19.14.36;	author jufi;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.30.19.01.55;	author jufi;	state Exp;
branches;
next	1.3;

1.3
date	2000.05.10.10.09.22;	author wvdputte;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.07.13.51.34;	author wvdputte;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.12.16.55.03;	author wvdputte;	state Exp;
branches;
next	;


desc
@@


1.33
log
@give up on translation
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>OpenSSH-Projektziele</title>
<link rev=made href="mailto:www@@openbsd.org">
<meta name="resource-type" content="document">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="description" content="the OpenSSH project goals page">
<meta name="keywords" content="openbsd,goals">
<meta name="distribution" content="global">
<meta name="copyright" content="This document copyright 1999-2004 by OpenBSD.">
</head>

<body bgcolor="#ffffff" text="#000000" link="#23238E">

<a href="index.html"><img alt="[OpenSSH]" height="30" width="141"
src="../images/smalltitle.gif" border="0"></a>
<p>
<h2><font color="#e00000">Projektziele</font></h2>
<hr>

Unser Ziel ist einfach: Weil telnet und rlogin unsicher sind, sollten
alle Betriebssysteme mit SSH-Unterstützung ausgeliefert werden (siehe
Bild unten).
<p>

Das SSH-Protokoll gibt es in zwei inkompatiblen Varianten:
SSH 1 und SSH 2.
<p>

Das ältere SSH-1-Protokoll teilt sich wieder in zwei Hauptvarianten auf:
Protokoll 1.3 und Protokoll 1.5. Beide werden von OpenSSH unterstützt,
verwenden für die Schlüsselübertragung den asymmetrischen
Kryptographiealgorithmus
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=rsa">RSA</a>
(dessen USA-Patent abgelaufen ist und somit für jedermann frei
zur Verfügung steht) und greifen dann auf ein paar symmetrische
Algorithmen zurück, um die Daten zu verstecken: <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=des_crypt">3DES</a>
und <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=blowfish">Blowfish</a>
(es gab ein paar andere Algorithmen, wie z.&nbsp;B. RC4, doch hätte
ihre Implementation zu Sicherheitsproblemen geführt).
Einige SSH-1-Protokollimplementationen unterstützen außerdem den
symmetrischen IDEA-Algorithmus. OpenSSH hat aber keine Unterstützung
für IDEA, weil dieser Algorithmus in einigen Nationen patentiert ist
und die anderen beiden völlig ausreichend sind.
<p>

Das SSH-1-Protokoll benutzt ein einfaches CRC, um die Datenintegrität
sicherzustellen, was sich aber als fehlerhaft herausstellte - ein
Insertionangriff ist bekanntermaßen möglich. Angriffe sind aber
wegen den vielen Heftpflastern, die über die Jahre auf SSH
aufgeklebt wurden, überaus schwierig durchzuführen. Wird der
3DES-Cipher benutzt, ist der Insertionangriff bedeutend schwieriger
auszuführen (wir lösen das Problem wahrscheinlich bald).
<p>

Die zweite Hauptvariante von SSH ist das SSH-2-Protokoll. SSH 2 wurde
eingeführt, um die patentrechtlichen Schwierigkeiten bezüglich
des RSA-Protokolls zu umgehen (was inzwischen nicht mehr nötig ist,
da das Patent abgelaufen ist), das CRC-Datenintegritätsproblem
von SSH 1 zu lösen und aus einer Reihe weiterer technischer Gründe.
Durch die Benutzung der asymmetrischen Algorithmen
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dsa">DSA</a>
und <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dh">DH</a>
vermeidet Protokoll 2 alle Patente. Das CRC-Problem wird durch die
Benutzung eines richtigen <a
href="http://www.openbsd.org/cgi-bin/man.cgi?query=HMAC">HMAC</a>-Algorithmus
gelöst. Neben vielen neuen symmetrischen Ciphern unterstützt das
SSH-2-Protokoll auch viele neue Funktionen.
<p>

Seit dem 1. Dezember 1999 beinhaltet der OpenSSH-Quelltext volle
Unterstützung für die Protokolle 1.3 und 1.5.
<p>

Für viele Kryptographiefunktionen greift OpenSSH auf die nicht
unter der GPL stehende
<a href="http://www.openssl.org">OpenSSL</a>-Bibliothek zurück.
<p>
Fast sofort nachdem wir unsere Implementation des SSH-1-Protokolls
veröffentlicht hatten, zeigten verschiedene Gruppen außerhalb von
OpenBSD sehr, sehr großes Interesse daran. Damien Miller, Philip Hands
und eine handvoll Anderer fingen an, OpenSSH auf Linux und verschiedene
andere Unix-Betriebssysteme zu portieren. Von Anfang an unserer
Bemühungen hatten wir das Gefühl, dass sogar der originale SSH-Code
zu kompliziert war - er hatte einfach zu viele
Betriebssystemabhängigkeiten in sich. Unser Anspruch, komplett sicheren
und absolut stabilen Code zu schreiben, verhindert es natürlich,
sich mit solchen übermäßigen Unterschieden herumzuschlagen.
Um daher den gesamten Entwicklungsprozess für uns alle einfacher
zu machen, haben wir die Kernentwicklung von der Portabilität getrennt.
Das hat für uns sehr gut funktioniert (vergleiche doch mal die Anzahl
der Zeilen zwischen der Basisversion und den portablen Versionen).
<p>
Diesen Trend fortführend haben Mitglieder des Projektteams von OpenBSD,
die an OpenSSH gearbeitet haben, sich stark bemüht, das SSH-2-Protokoll
ebenfalls zu unterstützen. Diese Arbeit wurde primär von Markus Friedl
gemacht. Um den 4. Mai 2000 herum wurde das SSH-2-Protokoll so weit
unterstützt, dass es von da an nutzbar war.
<p>

<hr>
<h2><font color="#e00000">Benutzt du immer noch
»Klartext«-Logins?</font></h2>
<img width=500 height=417 src="../images/shherrif.jpg" alt=sherrif>

<hr>
<a href="index.html"><img height=24 width=24 src="../back.gif" border=0
alt=OpenSSH></a>
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br>
<small>
<!--
Originally [OpenBSD: goals.html,v 1.20 ]<br>
$Translation: goals.html,v 1.37 2008/03/04 23:03:21 paldium Exp $<br>
-->
$OpenBSD: goals.html,v 1.32 2008/03/09 13:37:14 tobias Exp $
</small>

</body>
</html>
@


1.32
log
@Sync with Steelix CVS
@
text
@d119 1
a119 1
$OpenBSD$
@


1.31
log
@Sync with Steelix CVS
@
text
@d83 1
a83 1
veröffentlicht hatten, zeigten verschiedene Gruppen ausserhalb von
d117 1
a117 1
$Translation: goals.html,v 1.36 2008/01/04 21:02:59 paldium Exp $<br>
@


1.30
log
@Sync with Steelix CVS
@
text
@d79 1
a79 1
unter der GPL stehenden
d85 1
a85 1
und eine handvoll anderer fingen an, OpenSSH auf Linux und verschiedene
d117 1
a117 1
$Translation: goals.html,v 1.35 2007/06/24 21:50:06 simon Exp $<br>
@


1.29
log
@sync with steelix translation CVS
@
text
@d45 1
a45 1
symmetrischen IDEA-Algorithmus. OpenSSH hat aber keine Unterstütztung
d70 1
a70 1
gelöst. Neben vielen neuen symmetrischen Ciphern untersützt das
d83 13
a95 13
veröffentlicht hatten, waren viele Nicht-OpenBSD-Gruppen sehr, sehr
interessiert. Damien Miller, Philip Hands und eine handvoll anderer
fingen an, OpenSSH auf Linux und verschiedene andere
Unix-Betriebssysteme zu portieren. Von Anfang an unserer Bemühungen
hatten wir das Gefühl, dass sogar der originale SSH-Code zu kompliziert
war - er hatte einfach zu viele Betriebssystemabhängigkeiten in sich.
Unser Anspruch, komplett sicheren und absolut stabilen Code zu
schreiben, verhindert es natürlich, sich mit solchen übermäßigen
Unterschieden herumzuschlagen. Um daher den gesamten Entwicklungsprozess
für uns alle einfacher zu machen, haben wir die Kernentwicklung von der
Portabilität getrennt. Das hat für uns sehr gut funktioniert
(vergleiche doch mal die Anzahl der Zeilen zwischen der Basisversion und
den portablen Versionen).
d117 1
a117 1
$Translation: goals.html,v 1.33 2006/05/01 14:40:42 paldium Exp $<br>
@


1.28
log
@sync with steelix translation CVS
@
text
@d107 1
a107 1
<img width=417 height=500 src="../images/shherrif.jpg" alt=sherrif>
d117 1
a117 1
$Translation: goals.html,v 1.32 2006/04/25 13:47:22 paldium Exp $<br>
@


1.27
log
@sync with steelix translation CVS
@
text
@a6 1
<meta http-equiv="Content-Language" content="de">
d8 2
a9 2
<meta name="description" content="Die OpenSSH-Projektzielseite">
<meta name="keywords" content="openbsd,ziele">
d11 1
a11 1
<meta name="copyright" content="Dieses Dokument unterliegt dem Copyright von OpenBSD 1999 - 2004.">
d107 1
a107 1
<img width=500 height=500 src="../images/shherrif.jpg" alt=sherrif>
d116 2
a117 2
Originally [OpenBSD: goals.html,v 1.19 ]
$Translation: goals.html,v 1.30 2006/04/23 15:56:23 paldium Exp $
@


1.26
log
@sync with steelix translation CVS
@
text
@d17 2
a18 1
<a href="index.html"><img alt="[OpenSSH]" height="30" width="141" src="../images/smalltitle.gif" border="0"></a>
d23 3
a25 3
Unser Ziel ist einfach: Da telnet und rlogin unsicher sind, sollten
alle Betriebssysteme mit SSH-Unterstützung ausgeliefert werden.
(Siehe Bild unten.)
d33 3
a35 2
Protokoll 1.3 und Protokoll 1.5.  Beide werden von OpenSSH unterstützt.
Beide benutzen den asymmetrischen Kryptographie-Algorithmus
d37 21
a57 22
(für den das USA-Patent abgelaufen ist, was den gesamten Gebrauch für
jedermann ermöglicht)
für ,key negotiation' und verwenden dann eine kurze Liste von
symmetrischen Algorithmen, um die Daten zu verstecken:
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=des_crypt">3DES</a>
und
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=blowfish">Blowfish</a>.
(Es gab ein paar andere Algorithmen, wie z.B. RC4, aber ihre
Implementierung hätte zu Sicherheitsproblemen geführt.)
Einige SSH-1-Protokollimplementierungen unterstützen außerdem den
symmetrischen IDEA-Algorithmus, aber da dieser Algorithmus in einigen
Nationen patentiert ist und die anderen beiden ausgelieferten
Algorithmen ausreichend sind, hat OpenSSH keine Unterstützung für IDEA.
<p>

Das SSH-Protokoll 1 benutzt ein einfaches CRC, um die Datenintegrität
sicherzustellen, was sich als beschädigt herausstellte;
ein ,insertion'-Angriff ist bekanntermaßen möglich, jedoch sind
Angriffe wegen der Menge an ,Heftpflastern', die über die Jahre auf SSH
aufgeklebt wurden, überaus schwierig durchzuführen.
Wird der 3DES-Cipher benutzt, ist der ,insertion'-Angriff bedeutend
schwieriger auszuführen. (Wir lösen das Problem wahrscheinlich bald.)
d63 5
a67 7
da das Patent ausgelaufen ist) und um das CRC-Datenintegritätsproblem
zu lösen, das SSH 1 hat, und zudem aus einer Reihe weiterer technischer
Gründe.
Durch die Benutzung der asymmetrischen
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dsa">DSA</a>-
und
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dh">DH</a>-Algorithmen
d69 4
a72 4
Benutzung eines richtigen
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=HMAC">HMAC</a>-Algorithmus
gelöst. Das SSH-2-Protokoll unterstützt eine Menge mehr an
symmetrischen Ciphern und außerdem eine Menge mehr an Funktionen.
d75 2
a76 2
OpenSSH-Code beinhaltet volle Unterstützung für Protokoll 1.3 und 1.5
seit dem 1. Dezember 1999.
d79 1
a79 1
Für viele Kryptographie-Funktionen greift OpenSSH auf die nicht
d83 1
a83 1
Fast sofort nachdem wir unsere Implementierung des SSH-Protokolls 1
d85 2
a86 2
interessiert. Damien Miller, Philip Hands und eine handvoll Anderer
begannen damit, OpenSSH auf Linux und verschiedene andere
d89 3
a91 3
war, er hatte einfach zu viele Abhängigkeiten von Betriebssystemen in
sich. Unser Anspruch, komplett sicheren und absolut stabilen Code zu
schreiben, vermeidet es natürlich, sich mit solchen übermäßigen
d94 3
a96 3
Portabilität getrennt.
Das hat für uns sehr gut funktioniert. (Vergleiche doch mal die Anzahl
von Zeilen zwischen der Basisversion und den portablen Versionen).
d99 1
a99 1
die an  OpenSSH gearbeitet haben, sich stark bemüht, das SSH-2-Protokoll
d101 1
a101 1
gemacht. Um den 4. Mai 2000 herum war das SSH-2-Protokoll so weit
d106 2
a107 1
<h2><font color="#e00000">Benutzt du immernoch die ,Klartext'-Logins?</font></h2>
d111 2
a112 1
<a href="index.html"><img height=24 width=24 src="../back.gif" border=0 alt=OpenSSH></a>
d118 1
a118 1
$Translation: goals.html,v 1.29 2006/01/10 12:18:05 paldium Exp $
@


1.25
log
@sync with Steelix CVS
@
text
@d102 1
a102 1
gemacht. Um den 4. Mai 2000 herum war das SSH-2-Protokoll soweit
d117 1
a117 1
$Translation: goals.html,v 1.28 2005/09/14 16:16:40 paldium Exp $
@


1.24
log
@sync with Steelix CVS
@
text
@d7 1
d9 2
a10 3
<meta http-equiv="Content-Language" content="de">
<meta name="description" content="Die OpenSSH-Projektziele-Seite">
<meta name="keywords" content="openssh,projekt,ziele">
d12 1
a12 1
<meta name="copyright" content="Dieses Dokument ist Copyright 1999-2004 by OpenBSD.">
d117 1
a117 1
$Translation: goals.html,v 1.27 2005/05/28 13:29:46 paldium Exp $
@


1.23
log
@sync with Steelix CVS
@
text
@d22 2
a23 2
Unser Ziel ist einfach: Da telnet und rlogin unsicher sind, sollten alle
Betriebssysteme mit SSH-Unterstützung ausgeliefert werden.
d42 2
a43 2
(Es gab ein paar andere Algorithmen, wie z.B. RC4, aber ihre Implementierung
hätte zu Sicherheitsproblemen geführt.)
d46 2
a47 2
Nationen patentiert ist und die anderen beiden ausgelieferten Algorithmen
ausreichend sind, hat OpenSSH keine Unterstützung für IDEA.
d55 2
a56 2
Wird der 3DES-Cipher benutzt, ist der ,insertion'-Angriff bedeutend schwieriger
auszuführen. (Wir lösen das Problem wahrscheinlich bald.)
d69 2
a70 2
vermeidet Protokoll 2
alle Patente. Das CRC-Problem wird durch die Benutzung eines richtigen
d76 2
a77 2
OpenSSH-Code beinhaltet volle Unterstützung für Protokoll 1.3 und 1.5 seit dem
1. Dezember 1999.
d80 2
a81 1
Für viele Kryptographie-Funktionen greift OpenSSH auf die nicht-GPL-lizensierte
d85 9
a93 8
veröffentlicht hatten, waren viele Nicht-OpenBSD-Gruppen sehr, sehr interessiert.
Damien Miller, Philip Hands und eine handvoll anderer begannen damit, OpenSSH
auf Linux und verschiedene andere Unix-Betriebssysteme zu portieren.
Von Anfang an unserer Bemühungen hatten wir das Gefühl, dass sogar der originale
SSH-Code zu kompliziert war, er hatte einfach zu viele Abhängigkeiten von
Betriebssystemen in sich. Unser Anspruch, komplett sicheren und absolut
stabilen Code zu schreiben, vermeidet es natürlich, sich mit solchen 
übermäßigen Unterschieden herumzuschlagen. Um daher den gesamten Entwicklungsprozess
d99 5
a103 4
Diesen Trend fortführend haben Mitglieder des Projektteams von OpenBSD, die an 
OpenSSH gearbeitet haben, sich stark bemüht, das SSH-2-Protokoll ebenfalls zu unterstützen.
Diese Arbeit wurde primär von Markus Friedl gemacht.  Um den 4. Mai 2000 herum
war das SSH-2-Protokoll soweit unterstützt, dass es von da an nutzbar war.
d117 1
a117 1
$Translation: goals.html,v 1.26 2005/05/25 17:52:04 paldium Exp $
@


1.22
log
@sync with steelxi translation CVS
@
text
@d33 6
a38 1
Beide benutzen die asymmetrischen Kryptographie-Algorithmen
d114 1
a114 1
$Translation: goals.html,v 1.25 2005/05/19 17:32:46 paldium Exp $
@


1.21
log
@huge sync from the translators
@
text
@d9 1
a9 1
<meta name="description" content="Die OpenSSH Projektziel-Seite">
d12 1
a12 1
<meta name="copyright" content="This document copyright 1999-2004 by OpenBSD.">
d15 1
a15 1
<body bgcolor="#ffffff" text="#000000" link="#23238e">
d109 1
a109 1
$Translation: goals.html,v 1.24 2005/04/25 18:16:47 paldium Exp $
@


1.20
log
@Sync with Steelix CVS
@
text
@d89 2
a90 2
Das hat für uns sehr gut funktioniert. (Vergleiche doch mal die Anzahl an
Zeilen zwischen der Basisversion und den portablen Versionen).
d109 1
a109 1
$Translation: goals.html,v 1.23 2005/01/18 14:33:47 paldium Exp $
@


1.19
log
@Sync with Steelix CVS
@
text
@d107 5
a111 3
Originally [OpenBSD: goals.html,v 1.19 ]<br>
$Translation: goals.html,v 1.22 2004/12/22 12:29:54 paldium Exp $<br>
$OpenBSD: goals.html,v 1.19 2004/12/22 02:06:00 david Exp $
@


1.18
log
@Sync with Steelix CVS
@
text
@d17 1
a17 1
<img alt="[OpenSSH]" height=30 width=141 SRC="../images/smalltitle.gif">
d107 3
a109 3
Originally [OpenBSD: goals.html,v 1.18 ]<br>
$Translation: goals.html,v 1.21 2004/12/15 15:00:31 paldium Exp $<br>
$OpenBSD: goals.html,v 1.18 2004/03/04 06:40:29 david Exp $
@


1.17
log
@Sync with Steelix CVS
@
text
@d4 1
a4 1
<title>OpenSSH Projekt Ziele</title>
d9 1
a9 1
<meta name="description" content="Die OpenSSH Projekt Ziel Seite">
d19 1
a19 1
<h2><font color="#e00000">Projekt Ziele</font></h2>
d23 2
a24 2
Betriebssysteme mit SSH Unterstützung ausgeliefert werden.
(Siehe Bild unten).
d27 1
a27 1
Das SSH Protokoll gibt es in zwei inkompatiblen Varianten:
d31 1
a31 1
Das ältere SSH 1 Protokoll teilt sich wieder in zwei Haupt-Varianten auf:
d37 1
a37 1
(Es gab ein paar andere Algorithmen wie z.B. RC4, aber ihre Implementierung
d39 2
a40 2
Einige SSH 1 Protokoll Implementierungen unterstützen außerdem den
symmetrischen IDEA Algorithmus, aber da dieser Algorithmus in einigen
d45 1
a45 1
Das SSH Protokoll 1 benutzt ein einfaches CRC, um die Daten Integrität
d47 1
a47 1
eine ,insertion attack' ist bekanntermaßen möglich, jedoch sind
d50 2
a51 2
Wird der 3DES Cipher benutzt, ist die ,insertion attack' bedeutend schwieriger
auszuführen. (Wir lösen das Problem wahrscheinlich bald).
d54 1
a54 1
Die zweite Haupt-Variante von SSH ist das SSH 2 Protokoll. SSH 2 wurde
d56 2
a57 2
des RSA Protokolls zu umgehen (was inzwischen nicht mehr nötig ist,
da das Patent ausgelaufen ist) und das CRC Daten Integritätsproblem
d61 1
a61 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dsa">DSA</a>
d63 2
a64 2
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=dh">DH</a>
Algorithmen vermeidet Protokoll 2
d66 3
a68 3
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=HMAC">HMAC</a>
Algorithmus gelöst. Das SSH 2 Protokoll unterstützt eine Menge mehr an
symmetrischen Ciphern und außerdem eine Menge mehr an Features.
d71 1
a71 1
OpenSSH Code beinhaltet volle Unterstützung für Protokoll 1.3 und 1.5 seit dem
d75 2
a76 2
Für viele Kryptographiie Features greift OpenSSH auf die nicht-GPL lizenzierte
<a href="http://www.openssl.org">OpenSSL</a> library zurück.
d78 3
a80 3
Fast sofort nachdem wir unsere Implementierung des SSH Protokoll 1 veröffentlicht hatten,
waren viele nicht-OpenBSD-Gruppen sehr, sehr interessiert.
Damien Miller, Philip Hands, und eine handvoll anderer begannen damit, OpenSSH
d82 4
a85 4
Von Anfang unserer Bemühungen an hatten wir das Gefühl, dass sogar der originale
SSH Code zu kompliziert war, er hatte einfach zu viele Abhängigkeiten von
Betriebssystemen in sich. Unser Anspruch komplett sicheren und absolut
stabilen Code zu schreiben vermeidet es natürlich sich mit solchen 
d87 1
a87 1
für uns alle einfacher zu machen, haben wir die Kern Entwicklung von der
d89 2
a90 2
Das hat für uns sehr gut funktioniert. (Vergleiche doch mal die Anzahl
Zeilen zwischen der Basis- und portablen Versionen).
d93 3
a95 3
OpenSSH gearbeitet haben, sich stark bemüht das SSH 2 Protokoll ebenfalls zu unterstützen.
Diese Arbeit wurde primär von Markus Friedl gemacht.  Um den 4. Mai 2000 war das
SSH 2 Protokoll soweit unterstützt, dass es von nun an nutzbar war.
d99 1
a99 1
<h2><font color="#e00000">Benutzt du immernoch die "Klartext" Logins?</font></h2>
d107 3
a109 4
Originally [OpenBSD: goals.html,v 1.18 ]
<br>
$Translation: goals.html,v 1.20 2004/11/04 16:30:37 jufi Exp $
<br>
d111 1
a111 1
<small>$OpenBSD: goals.html,v 1.18 2004/03/04 06:40:29 david Exp $</small>
@


1.16
log
@Sync with Steelix CVS
@
text
@d23 1
a23 1
Betriebssysteme mit SSH Unterst&uuml;tzung ausgeliefert werden.
d31 2
a32 2
Das &auml;ltere SSH 1 Protokoll teilt sich wieder in zwei Haupt-Varianten auf:
Protokoll 1.3 und Protokoll 1.5.  Beide werden von OpenSSH unterst&uuml;tzt.
d38 2
a39 2
h&auml;tte zu Sicherheitsproblemen gef&uuml;hrt.)
Einige SSH 1 Protokoll Implementierungen unterst&uuml;tzen au&szlig;erdem den
d42 1
a42 1
ausreichend sind, hat OpenSSH keine Unterst&uuml;tzung f&uuml;r IDEA.
d45 5
a49 5
Das SSH Protokoll 1 benutzt ein einfaches CRC, um die Daten Integrit&auml;t
sicherzustellen, was sich als besch&auml;digt herausstellte;
eine ,insertion attack' ist bekannterma&szlig;en m&ouml;glich, jedoch sind
Angriffe wegen der Menge an ,Heftpflastern', die &uuml;ber die Jahre auf SSH
aufgeklebt wurden, &uuml;beraus schwierig durchzuf&uuml;hren.
d51 1
a51 1
auszuf&uuml;hren. (Wir l&ouml;sen das Problem wahrscheinlich bald).
d55 5
a59 5
eingef&uuml;hrt, um die patentrechtlichen Schwierigkeiten bez&uuml;glich
des RSA Protokolls zu umgehen (was inzwischen nicht mehr n&ouml;tig ist,
da das Patent ausgelaufen ist) und das CRC Daten Integrit&auml;tsproblem
zu l&ouml;sen, das SSH 1 hat, und zudem aus einer Reihe weiterer technischer
Gr&uuml;nde.
d67 2
a68 2
Algorithmus gel&ouml;st. Das SSH 2 Protokoll unterst&uuml;tzt eine Menge mehr an
symmetrischen Ciphern und au&szlig;erdem eine Menge mehr an Features.
d71 1
a71 1
OpenSSH Code beinhaltet volle Unterst&uuml;tzung f&uuml;r Protokoll 1.3 und 1.5 seit dem
d75 2
a76 2
F&uuml;r viele Kryptographiie Features greift OpenSSH auf die nicht-GPL lizenzierte
<a href="http://www.openssl.org">OpenSSL</a> library zur&uuml;ck.
d78 1
a78 1
Fast sofort nachdem wir unsere Implementierung des SSH Protokoll 1 ver&ouml;ffentlicht hatten,
d82 2
a83 2
Von Anfang unserer Bem&uuml;hungen an hatten wir das Gef&uuml;hl, dass sogar der originale
SSH Code zu kompliziert war, er hatte einfach zu viele Abh&auml;ngigkeiten von
d85 5
a89 5
stabilen Code zu schreiben vermeidet es nat&uuml;rlich sich mit solchen 
&uuml;berm&auml;&szlig;igen Unterschieden herumzuschlagen. Um daher den gesamten Entwicklungsprozess
f&uuml;r uns alle einfacher zu machen, haben wir die Kern Entwicklung von der
Portabilit&auml;t getrennt.
Das hat f&uuml;r uns sehr gut funktioniert. (Vergleiche doch mal die Anzahl
d92 4
a95 4
Diesen Trend fortf&uuml;hrend haben Mitglieder des Projektteams von OpenBSD, die an 
OpenSSH gearbeitet haben, sich stark bem&uuml;ht das SSH 2 Protokoll ebenfalls zu unterst&uuml;tzen.
Diese Arbeit wurde prim&auml;r von Markus Friedl gemacht.  Um den 4. Mai 2000 war das
SSH 2 Protokoll soweit unterst&uuml;tzt, dass es von nun an nutzbar war.
d109 1
a109 1
$Translation: goals.html,v 1.19 2004/09/23 14:11:15 jufi Exp $
@


1.15
log
@sync with Steelix translation CVS.
All work by Tobias Stoeckmann, correcting many typos, etc., thanks !
More to come.
@
text
@d21 1
d23 2
a24 1
Betriebssysteme mit SSH Unterst&uuml;tzung ausgeliefert werden. (Siehe Bild unten).
d26 1
d40 1
a40 1
symmetrischen IDEA Algorithmus, aber da dieser Algorithmus in einigen 
d43 1
d45 1
a45 2
<p>
Das SSH Protokoll 1 benutzt ein einfaches CRC um die Daten Integrit&auml;t 
d47 2
a48 2
eine "insertion attack" ist bekannterma&szlig;en m&ouml;glich, jedoch sind
Angriffe wegen der Menge an "Heftpflastern", die &uuml;ber die Jahre auf SSH
d50 1
a50 1
Wird der 3DES Cipher benutzt, ist die 'insertion attack' bedeutend schwieriger
d53 8
a60 6
Die zweite Haupt-Variante von SSH ist das SSH 2 Protokoll. SSH 2 wurde eingef&uuml;hrt,
um die patentrechtlichen Schwierigkeiten bez&uuml;glich des RSA Protokolls zu umgehen
(was inzwischen nicht mehr n&ouml;tig ist, da das Patent ausgelaufen ist) und das 
CRC Daten Integrit&auml;tsproblem zu l&ouml;sen, das SSH 1 hat, und zudem aus einer
Reihe weiterer technischer Gr&uuml;nde.
Durch die Benutzung der asymmetrischen 
d78 1
a78 1
Fast sofort nachdem wir unsere Implementation des SSH Protokoll 1 ver&ouml;ffentlicht hatten,
d109 1
a109 1
$Translation: goals.html,v 1.17 2004/08/24 12:11:24 jufi Exp $
@


1.14
log
@Sync with Steelix CVS
@
text
@d30 1
a30 1
Beide benutzen die assymmetrischen Kryptografie-Algorithmen
d36 1
a36 1
Einige SSH 1 Protokoll Implementierungen unterst&uuml;tzen ausserdem den
d44 3
a46 3
eine "insertion attack" ist bekanntermassen m&ouml;glich, jedoch sind Angriffe 
wegen der Menge an "Heftpflastern", die &uuml;ber die Jahre auf SSH
ausfgeklebt wurden, &uuml;beraus schwierig durchzuf&uuml;hren.
d63 1
a63 1
symmetrischen Ciphern und ausserdem eine Menge mehr an Featues.
d70 2
a71 2
F&uuml;r viele Kryptografie Features greift OpenSSH auf die nicht-GPL lizenzierte
<a href="http://www.openssl.org">OpenSSL</a> Library zur&uuml;ck.
d77 1
a77 1
Vom Anfang unserer Bem&uuml;hungen an hatten wir das Gef&uuml;hl, dass sogar der originale
d81 1
a81 1
&uuml;berm&auml;ssigen Unterschieden umzugehen. Um daher den gesamten Entwicklungsprozess
d104 1
a104 1
$Translation: goals.html,v 1.16 2004/04/28 18:28:35 jufi Exp $
@


1.13
log
@Sync with Steelix CVS
@
text
@d15 1
a15 1
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
d102 1
a102 1
Originally [OpenBSD: goals.html,v 1.17 ]
d104 1
a104 1
$Translation: goals.html,v 1.15 2004/02/15 23:03:05 jufi Exp $
d107 1
a107 1
<small>$OpenBSD: goals.html,v 1.17 2004/01/25 03:14:53 nick Exp $</small>
@


1.12
log
@
clean up description and keywords
@
text
@d12 1
a12 1
<meta name="copyright" content="This document copyright 1999-2003 by OpenBSD.">
d102 1
a102 1
Originally [OpenBSD: goals.html,v 1.16 ]
d104 1
a104 1
$Translation: goals.html,v 1.14 2003/01/17 12:48:50 jufi Exp $
d107 1
a107 1
<small>$OpenBSD: goals.html,v 1.16 2002/05/19 11:54:53 jufi Exp $</small>
@


1.11
log
@
sync with badlands translation CVS
@
text
@d9 2
a10 2
<meta name="description" content="Dhe OpenSSH Projekt Ziel Seite">
<meta name="keywords" content="openbsd,goals">
d12 1
a12 1
<meta name="copyright" content="This document copyright 1999-2002 by OpenBSD.">
d104 1
a104 1
$Translation: goals.html,v 1.13 2002/05/20 12:27:16 jufi Exp $
@


1.10
log
@
copyrights extended to 2002
@
text
@d1 1
a1 1
<!DOCTYPE HTML PUBLIC  "-//IETF//DTD HTML Strict//EN">
d5 1
a5 1
<link rev=made href=mailto:www@@openbsd.org>
d7 2
d19 2
a20 1
<h2><font color=#e00000>Projekt Ziele</font><hr></h2>
d29 1
a29 1
Protokoll 1.3 und Protokoll 1.5.  Beide werden von OpenSSH unterst&uulm;tzt.
d94 2
a95 2
<h2><font color=#e00000>Benutzt du immernoch die "Klartext" Logins?</font></h2>
<img width=500 height=500 src=../images/shherrif.jpg>
d98 2
a99 2
<a href=index.html><img height=24 width=24 src=../back.gif border=0 alt=OpenSSH></a>
<a href=mailto:www@@openbsd.org>www@@openbsd.org</a>
d102 1
a102 1
Originally [OpenBSD: goals.html,v 1.14 ]
d104 1
a104 1
$Translation: goals.html,v 1.12 2002/01/20 11:27:50 jufi Exp $
d107 1
a107 1
<small>$OpenBSD: goals.html,v 1.14 2002/01/20 11:19:06 jufi Exp $</small>
@


1.9
log
@sync with badlands translation CVS; work by Paul Weissmann
@
text
@d10 1
a10 1
<meta name="copyright" content="This document copyright 1999 by OpenBSD.">
d99 1
a99 1
Originally [OpenBSD: goals.html,v 1.13 ]
d101 1
a101 1
$Translation: goals.html,v 1.11 2001/11/15 19:43:57 paul Exp $
d104 1
a104 1
<small>$OpenBSD: goals.html,v 1.13 2001/02/27 17:35:50 stevesk Exp $</small>
@


1.8
log
@
More updates.
@
text
@d45 1
a45 1
auszuf&uuml;hren. (Wie l&ouml;sen das Problem wahrscheinlich bald).
d47 1
a47 1
Die zweite Haupt-Variante von SSH ist das SSH 2 Protokoll. SSH 2 wurde eingef&uuml;hrt
d49 1
a49 1
(was inzwischen nicht mehr n&ouml;tig ist, da das Patent ausgelaufen ist), und das 
d57 1
a57 1
alle Patente. Das CRC-Problem wird durch die Benutzgun eines richtigen
d59 1
a59 1
Algorithmus. Das SSH 2 Protokoll unterst&uuml;tzt eine Menge mehr an
d71 2
a72 2
waren viele nicht-OpenBSD-Gruppen sehr,sehr interessiert.
Damien Miller,Philip Hands, und eine handvoll anderer begannen damit OpenSSH
d101 1
a101 1
$Translation: goals.html,v 1.10 2001/02/27 18:37:30 jufi Exp $
@


1.7
log
@
Sync with translation CVS.
@
text
@d19 1
a19 1
Betriebssysteme mit ssh Unterst&uuml;tzung ausgeliefert werden. (Siehe Bild unten).
d42 1
a42 1
wegen der Menge an "Heftpflastern", die &uuml;ber die Jahre auf ssh
d45 1
a45 1
auszuf&uuml;hren. (Wie l&ouml;sen das Problem wahrscheinlich bald)
d75 1
a75 1
ssh Code zu kompliziert war, er hatte einfach zu viele Abh&auml;ngigkeiten von
d99 1
a99 1
Originally [OpenBSD: goals.html,v 1.12 ]
d101 1
a101 1
$Translation: goals.html,v 1.9 2001/02/19 17:40:20 jufi Exp $
d104 1
a104 1
<small>$OpenBSD: goals.html,v 1.12 2001/02/19 17:17:30 jufi Exp $</small>
@


1.6
log
@We are now in a new year. Crank copyright accordingly. ok markus@@
@
text
@d10 1
a10 1
<meta name="copyright" content="This document copyright 1999-2001 by OpenBSD.">
d19 1
a19 1
Betriebssysteme mit ssh zusammen ausgeliefert werden. (Siehe Bild unten).
d21 7
a27 6
SSH gibt es in zwei Varianten. Das &auml;ltere Protokoll  1 hat zwei Varianten:
Protokoll 1.3 und Protokoll 1.5. Beide werden von OpenSSH unterst&uuml;tzt. Beide
benutzen benutzen den asymmetrischen Kryptografie-Algorithmus RSA (der in
den USA nun auch nicht mehr patentiert ist und daher von jedem benutzt werden kann) 
um Schl&uuml;ssel zu verhandeln und nutzen dann eine kleine
Auswahl von symmetrischen Algorithmen um die Daten zu verstecken: 
d30 7
a36 6
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=blowfish">Blowfish</a> 
(es gab einmal ein paar andere, die aber wegen Sicherheitsproblemen
fallengelassen wurden). Einige ssh Implementationen enthalten auch den 
symmetrischen IDEA Algorithmus, aber da er in einigen Nationen patentiert ist,
und die anderen beiden bereits benutzen Algorithmen ausreichend sind, wird
OpenSSH ohne IDEA ausgeliefert.
d44 2
a45 2
Wird die 3DES-Chiffre verwendet, ist die "insertion attack" nicht
m&ouml;glich.
d47 5
a51 4
Die andere SSH Variante ist Protokoll 2.  Protokoll 2 wurde eingef&uuml;hrt, um die
Patent-Schwierigkeiten in bezug auf RSA zu vermeiden (die aber nun nicht mehr
existieren, da das Patent abgelaufen ist), und das CRC 
Datenintegrit&auml;tsproblem von SSH1 zu beheben.
d59 2
a60 1
Algorithmus.
d63 1
a63 1
OpenSSH Code beinhaltet volle Protokoll 1.3 und 1.5 Unterst&uuml;tzung seit dem
d70 1
a70 1
Fast sofort nachdem wir unsere Protokoll 1 Implementation ver&ouml;ffentlicht hatten,
d84 4
a87 8
Seitdem haben die OpenBSD Projekt Mitglieder, die an OpenSSH arbeiten,
auch eine grosse Anstrengung unternommen um auch Protokoll 2 zu unterst&uuml;tzen.
Seit dem 4. Mai 2000 ist Protokoll 2 komplett eingegliedert.
<p>

Also unterst&uuml;tzt OpenSSH seit dem 4. Mai 2000 auch Protokoll 2. Aber
da Protokoll 1 Clients und Server immer noch popul&auml;rer im Internet sind,
unterst&uuml;tzen wir weiterhin Protokoll 1.
d99 1
a99 1
Originally [OpenBSD: goals.html,v 1.9 ]
d101 1
a101 1
$Translation: goals.html,v 1.6 2000/09/26 19:00:48 jufi Exp $
d104 1
a104 1
<small>$OpenBSD: goals.html,v 1.5 2000/09/26 19:14:36 jufi Exp $</small>
@


1.5
log
@
More updates and a little cleanup.
@
text
@d10 1
a10 1
<meta name="copyright" content="This document copyright 1999 by OpenBSD.">
d104 1
a104 1
<small>$OpenBSD: goals.html,v 1.9 2000/09/25 20:07:41 deraadt Exp $</small>
@


1.4
log
@
And the 8-bit cleanup for openssh.. faq to follow
@
text
@d24 2
a25 1
den USA patentiert ist) um Schl&uuml;ssel zu verhandeln und nutzen dann eine kleine
d45 3
a47 2
Die andere SSH Variante ist Protokoll 2.  Protokoll 2 wurde eingefphrt, um die
Patent-Schwierigkeiten in bezug auf RSA zu vermeiden, und das CRC 
a58 8
Am 21. September 2000 wird das RSA Patent in den USA 
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&sektion=8">auslaufen</a>. 
In der Zwischenzeit ist es Leuten ausserhalb der USA bereits
erlaubt den RSA patentierten Code in ihrer Software zu benutzen.
Daher haben wir einen sehr gro&szlig;en Test-Bereich, um dieses wundervolle
St&uuml;ck public-key-Kryptografie in unser Betriebssystem zu integrieren.
<p>

d99 1
a99 1
Originally [OpenBSD: goals.html,v 1.8 ]
d101 1
a101 1
$Translation: goals.html,v 1.5 2000/06/30 18:44:25 jufi Exp $
d103 2
a104 2
<small>$OpenBSD: goals.html,v 1.8 2000/05/06 22:11:01 louis Exp $</small>

@


1.3
log
@Sync with Badlands Translation CVS. Work by Jufi
@
text
@d21 2
a22 2
SSH gibt es in zwei Varianten. Das ältere Protokoll  1 hat zwei Varianten:
Protokoll 1.3 und Protokoll 1.5. Beide werden von OpenSSH unterstützt. Beide
d24 1
a24 1
den USA patentiert ist) um Schlüssel zu verhandeln und nutzen dann eine kleine
d36 5
a40 5
Das SSH Protokoll 1 benutzt ein einfaches CRC um die Daten Integrität 
sicherzustellen, was sich als beschädigt herausstellte;
eine "insertion attack" ist bekanntermassen möglich, jedoch sind Angriffe 
wegen der Menge an "Heftpflastern", die über die Jahre auf ssh
ausfgeklebt wurden, überaus schwierig durchzuführen.
d42 1
a42 1
möglich.
d46 1
a46 1
Datenintegritätsproblem von SSH1 zu beheben.
d61 2
a62 2
Daher haben wir einen sehr großen Test-Bereich, um dieses wundervolle
Stück public-key-Kryptografie in unser Betriebssystem zu integrieren.
d65 1
a65 1
OpenSSH Code beinhaltet volle Protokoll 1.3 und 1.5 Unterstützung seit dem
d69 2
a70 2
Für viele Kryptografie Features greift OpenSSH auf die nicht-GPL lizenzierte
<a href="http://www.openssl.org">OpenSSL</a> Library zurück.
d72 1
a72 1
Fast sofort nachdem wir unsere Protokoll 1 Implementation veröffentlicht hatten,
d76 2
a77 2
Vom Anfang unserer Bemühungen an hatten wir das Gefühl, dass sogar der originale
ssh Code zu kompliziert war, er hatte einfach zu viele Abhängigkeiten von
d79 5
a83 5
stabilen Code zu schreiben vermeidet es natürlich sich mit solchen 
übermässigen Unterschieden umzugehen. Um daher den gesamten Entwicklungsprozess
für uns alle einfacher zu machen, haben wir die Kern Entwicklung von der
Portabilität getrennt.
Das hat für uns sehr gut funktioniert. (Vergleiche doch mal die Anzahl
d87 1
a87 1
auch eine grosse Anstrengung unternommen um auch Protokoll 2 zu unterstützen.
d91 3
a93 3
Also unterstützt OpenSSH seit dem 4. Mai 2000 auch Protokoll 2. Aber
da Protokoll 1 Clients und Server immer noch populärer im Internet sind,
unterstützen wir weiterhin Protokoll 1.
d107 1
a107 1
$Translation: goals.html,v 1.4 2000/05/07 21:06:56 jufi Exp $
@


1.2
log
@Sync with Badlands Translation CVS. Work by Jufi
@
text
@d25 5
a29 2
Auswahl von symmetrischen Algorithmen um die Daten zu verstecken: 3DES und 
Blowfish (es gab einmal ein paar andere, die aber wegen Sicherheitsproblemen
d47 5
a51 1
Durch die Benutzung der DSA und DH Algorithmen vermeidet Protokoll 2
d53 2
a54 1
HMAC Algorithmus vermieden.
d56 4
a59 2
Am 21. September 2000 wird das RSA Patent in den USA auslaufen.  In
der Zwischenzeit ist es Leuten ausserhalb der USA bereits
d97 1
a97 2
<h2><font color=#e00000>Telnet, rlogin, und rsh müssen aussterben..</font></h2>

d105 1
a105 1
Originally [OpenBSD: goals.html,v 1.6 ]
d107 1
a107 1
$Translation: goals.html,v 1.3 2000/05/06 12:28:57 jufi Exp $
d109 1
a109 1
<small>$OpenBSD: goals.html,v 1.6 2000/05/05 15:11:40 provos Exp $</small>
@


1.1
log
@Sync with Badlands Translation CVS. Work by Jufi
@
text
@d18 2
a19 2
Unser Ziel ist einfach: Betriebssysteme sollten mit ssh zusammen 
verkauft/weitergegeben werden.
d21 32
a52 5
In weniger als einem Jahr wird das RSA-Patent in den USA ablaufen. In der
Zwischenzeitlich ist es Leuten ausserhalb der USA aber bereits erlaubt, den RSA 
patentierten Code zu benutzen. Also haben wir einen riesigen Bereich, in dem 
wir diese wundervolle Public-Key Kryptografie testen können, um sie besser
in unaer Betriebssystem zu integrieren.
d55 20
a74 4
Sobald das Patent ausläuft, wird OpenBSD in der Lage sein, die Leute mit Werkzeugen
zu versorgen, um diese Technologie zu benutzen, und zwar überall im Betriebssystem.
OpenSSH ist aber nur ein kleiner Teil davon, mehr Informationen gibt es unter
<a href="http://www.openbsd.org/de/crypto.html">der OpenBSD Kryptografie Seite</a>.
d76 14
d96 1
a96 1
Originally [OpenBSD: goals.html,v 1.4 ]
d98 1
a98 1
$Translation: goals.html,v 1.2 2000/04/12 16:52:45 wim Exp $
d100 1
a100 1
$OpenBSD: goals.html,v 1.4 1999/11/17 14:14:15 provos Exp $</small>
@

