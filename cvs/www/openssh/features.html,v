head	1.35;
access;
symbols;
locks; strict;
comment	@# @;


1.35
date	2017.03.25.18.03.37;	author tb;	state Exp;
branches;
next	1.34;
commitid	rL4ajudaGg7ru4hH;

1.34
date	2016.10.21.20.02.42;	author dtucker;	state Exp;
branches;
next	1.33;
commitid	hWNxOS9HkWI9PaRI;

1.33
date	2016.10.16.19.11.30;	author tb;	state Exp;
branches;
next	1.32;
commitid	XJczuXy5Z9mhvZdx;

1.32
date	2016.08.15.02.22.16;	author tb;	state Exp;
branches;
next	1.31;
commitid	3DeixV5YkPOb78RN;

1.31
date	2016.04.21.02.46.25;	author tj;	state Exp;
branches;
next	1.30;
commitid	bPQqPk6C4E62xLJH;

1.30
date	2016.03.22.10.56.56;	author sthen;	state Exp;
branches;
next	1.29;
commitid	G2izHhNJ7aqR0Y6j;

1.29
date	2016.03.21.05.46.22;	author beck;	state Exp;
branches;
next	1.28;
commitid	zEx6zFkNSFFExu0v;

1.28
date	2015.12.18.21.21.05;	author deraadt;	state Exp;
branches;
next	1.27;
commitid	djgiSDWjXlsT4w8X;

1.27
date	2015.07.02.05.49.05;	author bentley;	state Exp;
branches;
next	1.26;
commitid	AP3UllesavMDEUhQ;

1.26
date	2015.06.26.01.25.10;	author bentley;	state Exp;
branches;
next	1.25;
commitid	OiRDPuXVOD6SXXqb;

1.25
date	2015.02.07.06.54.38;	author bentley;	state Exp;
branches;
next	1.24;
commitid	qDdTs8s77HQyToTf;

1.24
date	2014.08.13.18.20.33;	author nick;	state Exp;
branches;
next	1.23;
commitid	kT6puBTr1xsszE81;

1.23
date	2005.07.14.04.25.32;	author dtucker;	state Exp;
branches;
next	1.22;

1.22
date	2004.12.22.02.06.00;	author david;	state Exp;
branches;
next	1.21;

1.21
date	2004.03.22.10.58.41;	author dtucker;	state Exp;
branches;
next	1.20;

1.20
date	2004.03.09.12.31.59;	author dtucker;	state Exp;
branches;
next	1.19;

1.19
date	2004.03.04.06.40.29;	author david;	state Exp;
branches;
next	1.18;

1.18
date	2004.01.25.03.14.53;	author nick;	state Exp;
branches;
next	1.17;

1.17
date	2002.11.13.11.45.46;	author jufi;	state Exp;
branches;
next	1.16;

1.16
date	2002.05.19.11.54.53;	author jufi;	state Exp;
branches;
next	1.15;

1.15
date	2002.05.19.10.58.18;	author jufi;	state Exp;
branches;
next	1.14;

1.14
date	2002.01.20.11.19.05;	author jufi;	state Exp;
branches;
next	1.13;

1.13
date	2001.09.28.17.46.18;	author jufi;	state Exp;
branches;
next	1.12;

1.12
date	2001.02.23.06.26.29;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2001.02.16.14.35.08;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.02.16.13.28.20;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.02.06.13.30.41;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.06.13.30.06;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2000.09.25.20.07.41;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2000.05.05.17.50.27;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2000.05.05.05.22.41;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.12.06.20.10.35;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.11.23.02.34.34;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.11.22.23.31.39;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	99.11.22.23.29.28;	author provos;	state Exp;
branches;
next	;


desc
@@


1.35
log
@switch cvsweb and a couple of other links to https. thanks nick and tj!
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>OpenSSH: Features</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="description" content="OpenSSH Features">
<meta name="copyright" content="This document copyright 1996-2016 by OpenBSD.">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="openbsd.css">
<link rel="canonical" href="https://www.openssh.com/features.html">
</head>

<body bgcolor="#ffffff" text="#000000" link="#23238E">

<h2>
<a href="index.html">
<font color="#0000ff"><i>Open</i></font><font color="#000084">SSH</font></a>
<font color="#e00000">Features</font>
</h2>
<hr>

<p>
OpenSSH is a free SSH protocol suite providing encryption for
network services like remote login or remote file transfers.
<p>
The following is a list of OpenSSH features:
<p>

<ul>
<li>Completely open source project with
<a href="https://www.openbsd.org/policy.html">free licensing</a>
<p>
The OpenSSH source code is available free to everyone via the Internet.
This encourages code reuse and code auditing. Code review ensures the bugs
can be found and corrected by anyone. This results in secure code. OpenSSH
is not covered by any restrictive license. It can be used for any and all
purposes, and that explicitly includes commercial use.
<a href="https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/LICENCE?rev=HEAD">
The license</a> is included in the distribution. We feel that the world would
be better if routers, network appliances, operating systems, and all other
network devices had ssh integrated into them. All components of a restrictive
nature (i.e. patents) have been removed from the source code. Any licensed or
patented components are chosen from external libraries (e.g.
<a href="https://www.libressl.org">LibreSSL</a>).
<p>

<li>Strong cryptography (AES, ChaCha20, RSA, ECDSA, Ed25519...)
<p>
Encryption is started before authentication, and no passwords or other
information is transmitted in the clear. Encryption is also used to protect
against spoofed packets. A number of different ciphers and key types are
available, and legacy options are usually phased out in a reasonable amount
of time.
<p>

<li>X11 forwarding (which also encrypts X Window System traffic)
<p>
X11 forwarding allows the encryption of remote X windows traffic, so
that nobody can snoop on your remote xterms or insert malicious
commands. The program automatically sets DISPLAY on the server
machine, and forwards any X11 connections over the secure channel.
Fake Xauthority information is automatically generated and forwarded
to the remote machine; the local client automatically examines
incoming X11 connections and replaces the fake authorization data with
the real data (never telling the remote machine the real information).
<p>

<li>Port forwarding (encrypted channels for legacy protocols)
<p>
Port forwarding allows forwarding of TCP/IP connections to a remote
machine over an encrypted channel. Insecure internet applications
like POP can be secured with this.
<p>

<li>Strong authentication (public keys, one-time passwords)
<p>
Strong authentication protects against several security problems:
IP spoofing, fakes routes and DNS spoofing. Some authentication methods
include public key authentication, one-time passwords with s/key and
authentication using Kerberos (only in -portable).
<p>

<li>Agent forwarding
<p>
An authentication agent, running in the user's laptop or local workstation,
can be used to hold the user's authentication keys. OpenSSH automatically
forwards the connection to the authentication agent over any connections,
and there is no need to store the authentication keys on any machine in the
network (except the user's own local machine). The authentication protocols 
never reveal the keys; they can only be used to verify that the user's agent
has a certain key. Eventually the agent could rely on a smart card to perform
all authentication computations.
<p>

<li>Interoperability
<p>
Interoperability between implementations is a goal, but not a promise.
As OpenSSH development progresses, older protocols, ciphers, key types
and other options that have known weaknesses are routinely disabled.
Some examples can be found on the <a href="legacy.html">legacy</a> page.
<p>

<li>SFTP client and server support in both SSH1 and SSH2 protocols
<p>
As of OpenSSH 2.5.0, complete SFTP support is included, using the
<a href="http://man.openbsd.org/sftp">sftp(1)</a> command as a client.
The <a href="http://man.openbsd.org/sftp-server">sftp-server(8)</a>
subsystem automatically works in both SSH1 and SSH2 protocol.
<p>

<li>Optional data compression
<p>
Data compression before encryption improves the performance
for slow network links.
</ul>

<p>
</body>
</html>
@


1.34
log
@Add rel=canonical links pointing to https://www.openssh.com.  ok tb@@ tj@@
@
text
@d38 1
a38 1
<a href="http://cvsweb.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/LICENCE?rev=HEAD">
@


1.33
log
@Switch a few links to ftp.openbsd.org, www.libressl.org and www.openssh.org
to https now that the certificates are fully supported. Only fully
qualified links are modified and none that are generated from build/. While
there, fix a few broken links that were found during the conversion.

requested by tj, "yes, but carefully" beck
@
text
@d10 1
@


1.32
log
@tls on openbsd.org is now real:
- link to https://www.openbsd.org from the sub-projects' pages
- make internal links relative
- switch link rel=canonical to https to please some search engines
"go ahead" from beck, "do it!!!!" tj
@
text
@d43 1
a43 1
<a href="http://www.libressl.org">LibreSSL</a>).
@


1.31
log
@move openssh website to css, remove some old files.
@
text
@d30 1
a30 1
<a href="http://www.openbsd.org/policy.html">free licensing</a>
@


1.30
log
@fix URIs, the / before querystring is not optional,
if not fixed up by browsers the server returns 400 Bad Request.
@
text
@d4 1
a4 1
<title>OpenSSH Features</title>
d7 3
a9 1
<meta name="copyright" content="This document copyright 1996-2005 by OpenBSD.">
d13 6
a18 3
<a href="index.html"><img alt="[OpenSSH]" height="30" width="141" src="images/smalltitle.gif" border="0"></a>
<p>
<h2><font color="#e00000">Features</font></h2>
d21 1
d105 2
a106 3
<a href="http://man.openbsd.org/?query=sftp&amp;sektion=1">sftp(1)</a>
command as a client. The
<a href="http://man.openbsd.org/?query=sftp-server&amp;sektion=8">sftp-server(8)</a>
d115 1
d117 2
@


1.29
log
@change http://www.openbsd.org/cgi-bin/man.cgi to be http://man.openbsd.org
this points stuff to the new place and gets us ready to deprecate the old
place we did this.
@
text
@d99 1
a99 1
<a href="http://man.openbsd.org?query=sftp&amp;sektion=1">sftp(1)</a>
d101 1
a101 1
<a href="http://man.openbsd.org?query=sftp-server&amp;sektion=8">sftp-server(8)</a>
@


1.28
log
@some modernization from TJ
@
text
@d99 1
a99 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&amp;sektion=1">sftp(1)</a>
d101 1
a101 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">sftp-server(8)</a>
@


1.27
log
@Clean up meta tags.

name=distribution, name=keywords, and name=resource-type have no effect
in modern search engines and just clutter up the page source.

From Pavel Plamenov.
@
text
@d16 2
a17 2
OpenSSH is a free SSH/SecSH protocol suite providing encryption for
network services like remote login or remote file transfer.
d23 2
a24 17
<li>Open Source Project
<li>Free Licensing
<li>Strong Encryption (3DES, Blowfish, AES, Arcfour)
<li>X11 Forwarding (encrypt X Window System traffic)
<li>Port Forwarding (encrypted channels for legacy protocols)
<li>Strong Authentication (Public Key,  One-Time Password and Kerberos Authentication)
<li>Agent Forwarding (Single-Sign-On)
<li>Interoperability (Compliance with SSH 1.3, 1.5, and 2.0 protocol Standards)
<li>SFTP client and server support in both SSH1 and SSH2 protocols.
<li>Kerberos and AFS Ticket Passing
<li>Data Compression
</ul>
<p>

<hr>

&nbsp;<strong>Open Source Project</strong>
d27 4
a30 9
This encourages code reuse and code auditing.
Code review ensures the bugs can be found and corrected by anyone.  This
results in secure code.
<p>

&nbsp;<strong>Free Licensing</strong>
<p>
OpenSSH is not covered by any restrictive license. It can be used for any
and all purposes, and that explicitly includes commercial use.
d32 6
a37 4
The license</a> for OpenSSH is included in the distribution.
We feel that the world would be better if routers, network appliances,
operating systems, and all other network devices had ssh integrated into
them.
d40 1
a40 15
All components of a restrictive
nature (i.e. patents,
see <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&amp;sektion=8">ssl</a>)
have been removed from the source code;
any licensed or patented components are chosen from external libraries
(e.g. <a href="http://www.openssl.org">OpenSSL</a>).

The IDEA symmetric cipher is no longer available, since it is patented in
many countries.  Instead, we recommend people use any of the other ciphers
available.  (We see no justification for using a patented symmetric cipher,
since there are many free ones).
<p>

&nbsp;<strong>Strong Encryption</strong>

d42 5
a46 12
OpenSSH supports 3DES, Blowfish, AES and arcfour as encryption algorithms.
These are patent free.<br>
<b>Triple DES</b> is a time proven and well understood cipher
that provides strong encryption.<br>
<b>Blowfish</b> is a fast block cipher invented by Bruce Schneier that
can be used by people that require faster encryption.<br>
<b><a href="http://www.nist.gov/aes">AES</a></b> is the US Federal
Information Processing Standard (FIPS) Advanced Encryption Standard
developed as a replacement for DES.  It is a fast block cipher.<br>
<b>Arcfour</b> is a fast stream cipher.  It is believed to be compatible
with RC4[TM], a proprietary cipher of RSA Security Inc.

a47 3
Encryption is started before authentication, and
no passwords or other information is transmitted in the clear.
Encryption is also used to protect against spoofed packets.
d49 1
a49 2
<p>
&nbsp;<strong>X11 Forwarding</strong>
d53 1
a53 1
commands.  The program automatically sets DISPLAY on the server
d60 2
a61 1
&nbsp;<strong>Port Forwarding</strong>
d64 1
a64 1
machine over an encrypted channel.  Standard Internet applications
d67 2
a68 1
&nbsp;<strong>Strong Authentication</strong>
d70 4
a73 29
Strong authentication protects against several security problems, e.g.,
IP spoofing, fakes routes, and DNS spoofing.  The authentication
methods are: .rhosts together with RSA based host authentication, 
pure RSA authentication, one-time passwords with s/key, and finally authentication
using <a href="http://www.openbsd.org/cgi-bin/man.cgi?query=kerberos&amp;sektion=8">Kerberos</a>.
<p>
&nbsp;<strong>Agent Forwarding</strong>
<p>
An authentication agent, running in the user's laptop or local
workstation, can be used to hold the user's RSA or DSA authentication 
keys. OpenSSH automatically forwards the connection to the 
authentication agent over any connections, and there is no need to 
store the RSA or DSA authentication keys on any machine in the network 
(except the user's own local machine).  The authentication protocols 
never reveal the keys; they can only be used to verify that the 
user's agent has a certain key.  Eventually the agent could rely on a 
smart card to perform all authentication computations.
<p>
&nbsp;<strong>Interoperability</strong>
<p>
OpenSSH versions before 2.0 support the SSH 1.3 and SSH 1.5 protocols
permitting communication with most UNIX, Windows and other commercial
ssh implementations.
<p>
As of OpenSSH 2.0, as well as supporting SSH 1.3 protocol and SSH 1.5
protocol, OpenSSH also has support for the SSH 2.0 protocol.  This protocol
avoids using the RSA algorithm -- since at the time protocol 2.0 was
invented the RSA patent was still in effect -- and uses the freely useable
DH and DSA algorithms instead.
d75 2
a76 2
Thus, OpenSSH gives you the best of both worlds.  You can interoperate with
<strong>both</strong> types of ssh clients and servers!
d78 19
a96 1
&nbsp;<strong>SFTP client and server support in both SSH1 and SSH2 protocols</strong>
d100 2
a101 3
command as a client.  The
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&amp;sektion=8">
sftp-server(8)</a>
d104 2
a105 7
&nbsp;<strong>Kerberos and AFS Ticket Passing</strong>
<p>
OpenSSH also passes tickets for Kerberos and AFS on to the remote
machine.  A user can thus access all his Kerberos and AFS services
without the need to type in a password again.
<p>
&nbsp;<strong>Data Compression</strong>
d109 2
@


1.26
log
@Remove leftover links to defunct www@@.

From Pavel Plamenov on tech@@.
@
text
@a4 1
<meta name="resource-type" content="document">
a6 2
<meta name="keywords" content="OpenSSH,features">
<meta name="distribution" content="global">
@


1.25
log
@Remove old footer from OpenSSH pages, as was done to OpenBSD last year.
@
text
@a4 1
<link rev=made href="mailto:www@@openbsd.org">
@


1.24
log
@
move to cvsweb.openbsd.org
@
text
@a166 8
<p>
<hr>
<a href="index.html"><img height=24 width=24 src="back.gif" border=0 alt=OpenSSH></a> 
<a href="mailto:www@@openbsd.org">www@@openbsd.org</a>
<br><small>$OpenBSD: features.html,v 1.23 2005/07/14 04:25:32 dtucker Exp $</small>

</body>
</html>
@


1.23
log
@copyright bump for pages updated this year
@
text
@d55 1
a55 1
<a href="http://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/LICENCE?rev=HEAD">
d171 1
a171 1
<br><small>$OpenBSD: features.html,v 1.22 2004/12/22 02:06:00 david Exp $</small>
@


1.22
log
@make small title logo a link back to main page (like all the other web sites)
@
text
@d11 1
a11 1
<meta name="copyright" content="This document copyright 1996-2004 by OpenBSD.">
d171 1
a171 1
<br><small>$OpenBSD: features.html,v 1.21 2004/03/22 10:58:41 dtucker Exp $</small>
@


1.21
log
@Add description and keywords
@
text
@d15 1
a15 1
<img alt="[OpenSSH]" height=30 width=141 SRC="images/smalltitle.gif">
d171 1
a171 1
<br><small>$OpenBSD: features.html,v 1.20 2004/03/09 12:31:59 dtucker Exp $</small>
@


1.20
log
@Update ciphers
@
text
@d8 2
d171 1
a171 1
<br><small>$OpenBSD: features.html,v 1.19 2004/03/04 06:40:29 david Exp $</small>
@


1.19
log
@replace uppercase <BODY> tags with lowercase
(very simple one-liner in each file)
ok saad@@
@
text
@d27 1
a27 1
<li>Strong Encryption (3DES, Blowfish)
d76 14
a89 5
OpenSSH uses 3DES and Blowfish as encryption algorithm.  They are both
patent free. Triple DES is a time proven and well understood cipher
that provides strong encryption.  Blowfish is a fast block cipher
invented by Bruce Schneier that can be used by people that require
faster encryption.  Encryption is started before authentication, and
d169 1
a169 1
<br><small>$OpenBSD: features.html,v 1.18 2004/01/25 03:14:53 nick Exp $</small>
@


1.18
log
@
Copyright bump.  Most from Saad Kadhi, thanks!
@
text
@d12 1
a12 1
<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#23238E">
d160 1
a160 1
<br><small>$OpenBSD: features.html,v 1.17 2002/11/13 11:45:46 jufi Exp $</small>
@


1.17
log
@
typos and fixes by Saad Kadhi
@
text
@d9 1
a9 1
<meta name="copyright" content="This document copyright 1996-2002 by OpenBSD.">
d160 1
a160 1
<br><small>$OpenBSD: features.html,v 1.16 2002/05/19 11:54:53 jufi Exp $</small>
@


1.16
log
@
more cleanup
@
text
@d54 1
a54 1
The licence</a> for OpenSSH is included in the distribution.
d106 2
a107 2
methods are: .rhosts together with RSA based host authentication, pure
RSA authentication, one-time passwords with s/key, and finally authentication
d113 8
a120 8
workstation, can be used to hold the user's RSA authentication keys.
OpenSSH automatically forwards the connection to the authentication agent
over any connections, and there is no need to store the RSA
authentication keys on any machine in the network (except the user's
own local machine).  The authentication protocols never reveal the
keys; they can only be used to verify that the user's agent has a
certain key.  Eventually the agent could rely on a smart card to
perform all authentication computations.
d134 1
a134 1
Thus, OpenSSH gives you the best of both world.  You can interoperate with
d160 1
a160 1
<br><small>$OpenBSD: features.html,v 1.15 2002/05/19 10:58:18 jufi Exp $</small>
@


1.15
log
@
small HTML cleanups
@
text
@d1 1
a1 1
<!DOCTYPE HTML PUBLIC  "-//IETF//DTD HTML Strict//EN">
d5 1
a5 1
<link rev=made href=mailto:www@@openbsd.org>
d15 2
a16 1
<h2><font color=#e00000>Features</font><hr></h2>
d62 1
a62 1
see <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=ssl&sektion=8>ssl</a>)
d65 1
a65 1
(e.g. <a href=http://www.openssl.org/>OpenSSL</a>).
d108 1
a108 1
using <a href=http://www.openbsd.org/cgi-bin/man.cgi?query=kerberos&sektion=8>Kerberos</a>.
d140 1
a140 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp&sektion=1">sftp(1)</a>
d142 1
a142 1
<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=sftp-server&sektion=8">
d158 3
a160 3
<a href="index.html"><img height=24 width=24 src=back.gif border=0 alt=OpenSSH></a> 
<a href=mailto:www@@openbsd.org>www@@openbsd.org</a>
<br><small>$OpenBSD: features.html,v 1.14 2002/01/20 11:19:05 jufi Exp $</small>
@


1.14
log
@
copyright extended to 2002
@
text
@d7 1
d159 1
a159 1
<br><small>$OpenBSD: features.html,v 1.13 2001/09/28 17:46:18 jufi Exp $</small>
@


1.13
log
@
X Windows -> X Window System
noticed by  jrs@@altkom.com.pl via David Krause
@
text
@d8 1
a8 1
<meta name="copyright" content="This document copyright 1996-1999 by OpenBSD.">
d158 1
a158 1
<br><small>$OpenBSD: features.html,v 1.12 2001/02/23 06:26:29 deraadt Exp $</small>
@


1.12
log
@use new cvsweb HEAD links
@
text
@d26 1
a26 1
<li>X11 Forwarding (encrypt X Windows traffic)
d158 1
a158 1
<br><small>$OpenBSD: features.html,v 1.11 2001/02/16 14:35:08 deraadt Exp $</small>
@


1.11
log
@and 2.5.0 goes out the door
@
text
@d51 1
a51 1
<a href="http://www.openbsd.org/cgi-bin/cvsweb/src/usr.bin/ssh/LICENCE?rev=1.3">
d158 1
a158 1
<br><small>$OpenBSD: features.html,v 1.10 2001/02/16 13:28:20 deraadt Exp $</small>
@


1.10
log
@talk about sftp
@
text
@d51 2
a52 1
<a href="LICENCE">The licence</a> for OpenSSH is included in the distribution.
d158 1
a158 1
<br><small>$OpenBSD: features.html,v 1.9 2001/02/06 13:30:41 deraadt Exp $</small>
@


1.9
log
@hmm, reads better
@
text
@d31 1
d134 9
d157 1
a157 1
<br><small>$OpenBSD: features.html,v 1.8 2001/02/06 13:30:06 deraadt Exp $</small>
@


1.8
log
@clean a bit too
@
text
@d30 1
a30 1
<li>Interoperability (Compliance with SSH 1.3, 1.5, and 2.0 Remote Protocol Standards)
d147 1
a147 1
<br><small>$OpenBSD: features.html,v 1.7 2000/09/25 20:07:41 deraadt Exp $</small>
@


1.7
log
@deal with patent expiry
@
text
@d16 2
a17 2
OpenSSH is a free secure shell suite providing encryption for network
services like remote login or remote file transfer.
d30 1
a30 1
<li>Interoperability (Compliance with SSH Remote Protocol Standards 1.3, 1.5, and 2.0)
d49 5
a53 3
and all purposes, and that explicitly includes commercial use.  We feel
that the world would be better if routers, network appliances, operating
systems, and all other network devices had ssh integrated into them.
d120 2
a121 2
OpenSSH versions before 2.0 support the SSH remote protocol versions 1.3
and 1.5 allowing it to talk with most UNIX, Windows and other commercial
d124 5
a128 4
As of OpenSSH 2.0, as well as supporting protocol versions 1.3 and 1.5,
OpenSSH also has support the SSH protocol version 2.0.  This protocol avoids
using the RSA algorithm -- since at the time protocol 2.0 was invented the RSA
patent was still in effect -- and uses the freely useable DSA algorithm instead.
d131 1
a131 1
both types of ssh clients and servers!
d147 1
a147 1
<br><small>$OpenBSD: features.html,v 1.6 2000/05/05 17:50:27 deraadt Exp $</small>
@


1.6
log
@more
@
text
@a53 10
However, in the USA you must be aware that the SSH version 1 protocol
requires the use of the RSA public-key algorithm.
<p>

Depending on your application, licensing from RSA might be required
until their patent expires in September 2000.  If you do not use SSH
protocol 1, but only use SSH protocol 2, then you will be using the
freely useable DSA algorithm instead.
<p>

d124 2
a125 1
using the RSA algorithm and uses the freely useable DSA algorithm instead.
d144 1
a144 1
<br><small>$OpenBSD: features.html,v 1.5 2000/05/05 05:22:41 deraadt Exp $</small>
@


1.5
log
@new openssh pages, half merged with violet
@
text
@d49 6
a54 2
and allpurposes, and that explicitly includes commercial use.  
However, in the USA you have to be aware that the SSH version 1 protocol
d57 5
a61 4
Licensing from RSA
might be required until their patent expires in September 2000.  If you
do not use SSH protocol 1, but only use SSH protocol 2, then you will be
using the freely useable DSA algorithm instead.
d63 1
d70 5
d76 1
d78 1
d87 1
d153 1
a153 1
<br><small>$OpenBSD: features.html,v 1.4 1999/12/06 20:10:35 deraadt Exp $</small>
@


1.4
log
@tweak
@
text
@d14 1
a14 1
<p>
d21 1
a21 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Features</strong></td></tr></table>
d23 10
a32 30
<li>
Open Source Project
</li>
<li>
Free Licensing
</li>
<li>
Strong Encryption (3DES, Blowfish)
</li>
<li>
X11 Forwarding (encrypt X Windows traffic)
</li>
<li>
Port Forwarding (encrypted channels for legacy protocols)
</li>
<li>
Strong Authentication (Public Key,  One-Time Password and Kerberos Authentication)
</li>
<li>
Agent Forwarding (Single-Sign-On)
</li>
<li>
Interoperability (Compliance with SSH Remote Protocol Standards 1.3 and 1.5)
</li>
<li>
Kerberos and AFS Ticket Passing
</li>
<li>
Data Compression
</li>
d35 4
a38 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Open Source Project</strong></td></tr></table>
d45 2
a46 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Free Licensing</strong></td></tr></table>
d51 6
a56 2
requires the use of the RSA public-key algorithm.  Licensing from RSA
might be required until their patent expires in September 2000.
d65 1
a65 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Strong Encryption</strong></td></tr></table>
d75 1
a75 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>X11 Forwarding</strong></td></tr></table>
d86 1
a86 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Port Forwarding</strong></td></tr></table>
d92 1
a92 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Strong Authentication</strong></td></tr></table>
d100 1
a100 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Agent Forwarding</strong></td></tr></table>
d112 5
a116 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Interoperability</strong></td></tr></table>
d118 3
a120 2
OpenSSH supports the SSH remote protocol versions 1.3 and 1.5 allowing
it to talk with most UNIX, Windows and other commercial ssh implementations.
d122 2
a123 5
OpenSSH does not yet support the SSH remote protocol version 2.0; but in our
opinion this matters little since almost all ssh programs can talk 1.5
protocol.  Also, due to the nasty non-commercial use licence that the
main SSH 2.0 implementation is available under, many people consider the
2.0 protocol to be largely "still-born".
d125 1
a125 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Kerberos and AFS Ticket Passing</strong></td></tr></table>
d131 1
a131 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Data Compression</strong></td></tr></table>
d139 1
a139 1
<br><small>$OpenBSD: features.html,v 1.3 1999/11/23 02:34:34 deraadt Exp $</small>
@


1.3
log
@better
@
text
@d127 1
a127 1
it to talk will most UNIX, Windows and other commercial ssh implementations.
d129 1
a129 1
OpenSSH does not yet talk the SSH remote protocol version 2.0; but in our
d149 1
a149 1
<br><small>$OpenBSD: features.html,v 1.2 1999/11/22 23:31:39 provos Exp $</small>
@


1.2
log
@spelling.
@
text
@d65 1
a65 1
purposes, that explicitly includes commercial use.  
d69 1
a69 1

d129 6
d149 1
a149 1
<br><small>$OpenBSD: features.html,v 1.1 1999/11/22 23:29:28 provos Exp $</small>
@


1.1
log
@list of OpenSSH features.  okay markus@@, dugsong@@
@
text
@d124 1
a124 1
<table width="100%" cellpadding="0" border="0"><tr><td align="left" bgcolor="#99bbdd"><font color=#e02020>&nbsp;<strong>Interoperatability</strong></td></tr></table>
d143 1
a143 1
<br><small>$OpenBSD: history.html,v 1.2 1999/11/19 11:32:29 markus Exp $</small>
@

